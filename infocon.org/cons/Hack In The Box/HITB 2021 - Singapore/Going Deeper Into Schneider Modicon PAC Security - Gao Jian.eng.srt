1
00:00:09,840 --> 00:00:12,400
hello everyone this is garcia and we're

2
00:00:12,400 --> 00:00:15,200
glad to be here and showing my research

3
00:00:15,200 --> 00:00:18,880
findings and hi tv singapore 2021

4
00:00:18,880 --> 00:00:19,840
today

5
00:00:19,840 --> 00:00:22,720
usually appreciate the opportunity the

6
00:00:22,720 --> 00:00:25,359
topic i would like to share today is

7
00:00:25,359 --> 00:00:26,960
going deeper into schneider

8
00:00:26,960 --> 00:00:31,080
multi-compact security

9
00:00:31,199 --> 00:00:33,760
before i begin i would like to introduce

10
00:00:33,760 --> 00:00:36,559
myself real quick my name is gautien

11
00:00:36,559 --> 00:00:39,440
from xi'an china currently an industry

12
00:00:39,440 --> 00:00:42,960
control system security researcher and s

13
00:00:42,960 --> 00:00:46,800
focus the research mainly focus on plc

14
00:00:46,800 --> 00:00:49,600
design scada industrial equipment and

15
00:00:49,600 --> 00:00:50,719
system

16
00:00:50,719 --> 00:00:52,640
work includes

17
00:00:52,640 --> 00:00:56,000
things like vulnerability money

18
00:00:56,000 --> 00:00:58,320
industrial field security testing and

19
00:00:58,320 --> 00:00:59,840
evolution

20
00:00:59,840 --> 00:01:02,559
for the past few years and reported

21
00:01:02,559 --> 00:01:04,640
several vulnerabilities to siemens

22
00:01:04,640 --> 00:01:07,600
courses schneider and so on

23
00:01:07,600 --> 00:01:11,680
got that insolvency series and focus and

24
00:01:11,680 --> 00:01:14,000
of course

25
00:01:14,000 --> 00:01:16,799
sex notes from these complaints

26
00:01:16,799 --> 00:01:19,920
and view and have shared demand research

27
00:01:19,920 --> 00:01:22,080
and several conferences

28
00:01:22,080 --> 00:01:25,759
this includes channel crunch sdc 2020

29
00:01:25,759 --> 00:01:32,240
hitb ams 2021 ics cyber security 2021

30
00:01:32,240 --> 00:01:33,840
and so on

31
00:01:33,840 --> 00:01:36,159
if you have any questions or ideas

32
00:01:36,159 --> 00:01:39,600
regarding the security inspection our

33
00:01:39,600 --> 00:01:42,720
industrial control system

34
00:01:42,720 --> 00:01:45,759
please feel free to contact me here is

35
00:01:45,759 --> 00:01:48,079
my email i'm looking forward to your

36
00:01:48,079 --> 00:01:50,399
emails

37
00:01:50,399 --> 00:01:53,119
please allow me to introduce our lab

38
00:01:53,119 --> 00:01:56,960
golab which focuses on ss iot

39
00:01:56,960 --> 00:01:58,719
and internet

40
00:01:58,719 --> 00:02:02,399
international vectors related security

41
00:02:02,399 --> 00:02:03,280
issue

42
00:02:03,280 --> 00:02:06,079
we won the second price in the robot

43
00:02:06,079 --> 00:02:10,720
agent challenge 2018

44
00:02:10,720 --> 00:02:13,760
our long-term work in iss vulnerability

45
00:02:13,760 --> 00:02:16,239
research results

46
00:02:16,239 --> 00:02:19,200
in following over 15 vulnerabilities in

47
00:02:19,200 --> 00:02:20,840
2020

48
00:02:20,840 --> 00:02:23,040
involving siemens

49
00:02:23,040 --> 00:02:26,000
schneider abv cook and other

50
00:02:26,000 --> 00:02:28,800
manufacturers in addition

51
00:02:28,800 --> 00:02:31,280
they partitioned

52
00:02:31,280 --> 00:02:32,560
in various

53
00:02:32,560 --> 00:02:35,920
competitions such as fly on and got good

54
00:02:35,920 --> 00:02:38,480
results

55
00:02:38,480 --> 00:02:41,040
so here is the outline of today's

56
00:02:41,040 --> 00:02:43,040
prostitution

57
00:02:43,040 --> 00:02:45,760
first aung ever introduced a morally

58
00:02:45,760 --> 00:02:48,879
compact range of the products her touch

59
00:02:48,879 --> 00:02:50,879
application seniors

60
00:02:50,879 --> 00:02:53,040
the architecture and function over the

61
00:02:53,040 --> 00:02:55,680
high end and file a tree family

62
00:02:55,680 --> 00:02:59,440
the security expands a wage and so on

63
00:02:59,440 --> 00:03:02,159
in the second part i will introduce the

64
00:03:02,159 --> 00:03:05,200
schneider priority you must project

65
00:03:05,200 --> 00:03:07,040
it's a school proof

66
00:03:07,040 --> 00:03:10,159
mechanism function called and so on

67
00:03:10,159 --> 00:03:12,800
next we will explain fast related

68
00:03:12,800 --> 00:03:14,080
knowledge

69
00:03:14,080 --> 00:03:17,680
and for your mass project include how to

70
00:03:17,680 --> 00:03:20,959
select symbols how to build further

71
00:03:20,959 --> 00:03:23,680
program and give you

72
00:03:23,680 --> 00:03:27,920
the process of the successful first demo

73
00:03:27,920 --> 00:03:29,760
the fourth part will be the most

74
00:03:29,760 --> 00:03:32,720
interesting part of this presentation

75
00:03:32,720 --> 00:03:35,360
will end we'll show you how to break

76
00:03:35,360 --> 00:03:37,920
through the m-file 18

77
00:03:37,920 --> 00:03:40,480
password protection methods which

78
00:03:40,480 --> 00:03:43,519
includes authorization algorithm

79
00:03:43,519 --> 00:03:46,959
integrity checks and formats of special

80
00:03:46,959 --> 00:03:49,599
function codes to perform sensitive

81
00:03:49,599 --> 00:03:52,080
operations such as start and stop the

82
00:03:52,080 --> 00:03:53,519
consumer

83
00:03:53,519 --> 00:03:56,799
in the next section we demonstrate a

84
00:03:56,799 --> 00:03:58,000
partition

85
00:03:58,000 --> 00:04:00,879
resolver attack a molecule pack

86
00:04:00,879 --> 00:04:03,840
including the authorization bypass

87
00:04:03,840 --> 00:04:05,760
of the word

88
00:04:05,760 --> 00:04:08,560
password protection replacement of the

89
00:04:08,560 --> 00:04:11,680
password our attacher's choice

90
00:04:11,680 --> 00:04:15,680
remote code extrusion cause

91
00:04:15,680 --> 00:04:17,120
permanent

92
00:04:17,120 --> 00:04:18,478
damage

93
00:04:18,478 --> 00:04:21,600
come to the container and a brief demo

94
00:04:21,600 --> 00:04:24,400
of the attack process

95
00:04:24,400 --> 00:04:26,560
and last but not least

96
00:04:26,560 --> 00:04:28,880
i'm going to talk about how to protect

97
00:04:28,880 --> 00:04:32,560
against such attacks

98
00:04:32,560 --> 00:04:34,720
modicum is the first name in

99
00:04:34,720 --> 00:04:37,600
programmable logical consumers

100
00:04:37,600 --> 00:04:38,639
the

101
00:04:38,639 --> 00:04:41,199
inventor of the plc modicon introduced

102
00:04:41,199 --> 00:04:44,400
the fourth poc the modicum

103
00:04:44,400 --> 00:04:45,440
0

104
00:04:45,440 --> 00:04:47,720
4h in

105
00:04:47,720 --> 00:04:49,360
1968

106
00:04:49,360 --> 00:04:51,520
this evolution changed the process

107
00:04:51,520 --> 00:04:55,360
design mode in front completely

108
00:04:55,360 --> 00:04:57,840
relay system to automation system

109
00:04:57,840 --> 00:05:00,400
reducing the time effort

110
00:05:00,400 --> 00:05:02,080
and

111
00:05:02,080 --> 00:05:05,120
cost super previously associated with

112
00:05:05,120 --> 00:05:08,000
the model following a process

113
00:05:08,000 --> 00:05:10,240
the following years schneider have to

114
00:05:10,240 --> 00:05:11,840
expand the

115
00:05:11,840 --> 00:05:14,240
reach of the money contact knowledge

116
00:05:14,240 --> 00:05:17,600
worldwide today the monika family

117
00:05:17,600 --> 00:05:19,680
continues to push

118
00:05:19,680 --> 00:05:22,800
boundaries and define the tech knowledge

119
00:05:22,800 --> 00:05:25,280
that involves and

120
00:05:25,280 --> 00:05:29,199
connects modern machines and processes

121
00:05:29,199 --> 00:05:31,840
the modicum family of pocs and the

122
00:05:31,840 --> 00:05:34,479
programmable automation consumers still

123
00:05:34,479 --> 00:05:36,080
standard for

124
00:05:36,080 --> 00:05:39,759
innovation offering a full range of

125
00:05:39,759 --> 00:05:44,080
solutions to meet your ultra mission

126
00:05:44,080 --> 00:05:44,960
needs

127
00:05:44,960 --> 00:05:47,919
to provide an economy

128
00:05:47,919 --> 00:05:51,360
economical which should deliver function

129
00:05:51,360 --> 00:05:55,199
control in gif between the plc and dcs

130
00:05:55,199 --> 00:05:57,520
schneider offer industry of process

131
00:05:57,520 --> 00:05:59,440
automation controller

132
00:05:59,440 --> 00:06:01,039
multicompats

133
00:06:01,039 --> 00:06:05,120
multicompass feature redundancy

134
00:06:05,120 --> 00:06:08,160
functionally next you

135
00:06:08,160 --> 00:06:12,800
internet embedded cyber security

136
00:06:12,800 --> 00:06:16,639
schneider is targeting the phc towards

137
00:06:16,639 --> 00:06:19,120
the process and the user

138
00:06:19,120 --> 00:06:22,160
particularly end users who are currently

139
00:06:22,160 --> 00:06:24,160
using large poc

140
00:06:24,160 --> 00:06:28,080
or pack-based system in energy

141
00:06:28,080 --> 00:06:31,120
into seal industries

142
00:06:31,120 --> 00:06:33,039
such as water

143
00:06:33,039 --> 00:06:36,160
vesture water food

144
00:06:36,160 --> 00:06:37,440
beverage

145
00:06:37,440 --> 00:06:40,960
upstream and midstream oil and gas and

146
00:06:40,960 --> 00:06:44,400
metals and marine

147
00:06:44,560 --> 00:06:45,680
the arm

148
00:06:45,680 --> 00:06:49,680
macro processor used in the im5 hde pack

149
00:06:49,680 --> 00:06:51,680
is a spell done

150
00:06:51,680 --> 00:06:55,759
drunk multi-function cpu built by st

151
00:06:55,759 --> 00:06:59,520
micro electric electronica

152
00:06:59,520 --> 00:07:00,960
through a

153
00:07:00,960 --> 00:07:04,160
partnership with schneider the

154
00:07:04,160 --> 00:07:07,120
the operating system is when the river

155
00:07:07,120 --> 00:07:08,639
vx works

156
00:07:08,639 --> 00:07:11,120
and the high level of the all eyes

157
00:07:11,120 --> 00:07:13,120
runs erupted

158
00:07:13,120 --> 00:07:15,759
from wall on the top of which young

159
00:07:15,759 --> 00:07:17,199
users

160
00:07:17,199 --> 00:07:18,560
applications

161
00:07:18,560 --> 00:07:21,599
and file hd also provides

162
00:07:21,599 --> 00:07:24,240
rich third party communication functions

163
00:07:24,240 --> 00:07:29,280
such as the modbus tcp internet iv ftb

164
00:07:29,280 --> 00:07:33,359
http and so on

165
00:07:34,319 --> 00:07:37,840
to adjust today critical cyber security

166
00:07:37,840 --> 00:07:41,280
issue security is built into each imp

167
00:07:41,280 --> 00:07:44,720
file hc pack to provide an open

168
00:07:44,720 --> 00:07:46,080
yet flow

169
00:07:46,080 --> 00:07:48,639
secured system and once the cyber

170
00:07:48,639 --> 00:07:53,039
security feature here is secure

171
00:07:53,039 --> 00:07:56,319
have issues system are protected from

172
00:07:56,319 --> 00:07:57,840
cyber attacks

173
00:07:57,840 --> 00:08:01,039
each and file ate pack can be secured

174
00:08:01,039 --> 00:08:02,160
using

175
00:08:02,160 --> 00:08:05,360
a corrupted logins and passwords for

176
00:08:05,360 --> 00:08:07,879
every application

177
00:08:07,879 --> 00:08:11,680
unnecessary device can be disabled and

178
00:08:11,680 --> 00:08:14,560
checks can be performed to verify the

179
00:08:14,560 --> 00:08:16,560
integrity of the controller's

180
00:08:16,560 --> 00:08:19,199
programming tool and the form view

181
00:08:19,199 --> 00:08:21,280
as well and the

182
00:08:21,280 --> 00:08:24,080
normal behavior of the search term

183
00:08:24,080 --> 00:08:27,080
interferes

184
00:08:27,199 --> 00:08:30,319
based on the previous introduction we

185
00:08:30,319 --> 00:08:33,679
can summarize the attack surface of past

186
00:08:33,679 --> 00:08:35,679
series products

187
00:08:35,679 --> 00:08:37,200
first of all

188
00:08:37,200 --> 00:08:39,039
the support of the

189
00:08:39,039 --> 00:08:42,240
numbers of third party products make it

190
00:08:42,240 --> 00:08:44,560
interconnect

191
00:08:44,560 --> 00:08:47,200
quite easily but also introduce

192
00:08:47,200 --> 00:08:48,320
risks

193
00:08:48,320 --> 00:08:51,680
for example each vertical over exchange

194
00:08:51,680 --> 00:08:55,440
external approach which may be pro band

195
00:08:55,440 --> 00:08:59,120
and taking advantage of by

196
00:08:59,120 --> 00:09:01,760
malicious attachers

197
00:09:01,760 --> 00:09:04,880
to perform unexpected operations these

198
00:09:04,880 --> 00:09:08,480
protocols include priority verticals

199
00:09:08,480 --> 00:09:13,040
supported by pack products hddb ftp and

200
00:09:13,040 --> 00:09:14,080
so on

201
00:09:14,080 --> 00:09:17,279
in recent years many vulnerabilities

202
00:09:17,279 --> 00:09:21,279
have been exposed in portugal stacks and

203
00:09:21,279 --> 00:09:23,279
operating systems

204
00:09:23,279 --> 00:09:24,480
therefore

205
00:09:24,480 --> 00:09:27,200
the use of third party particle stacks

206
00:09:27,200 --> 00:09:28,959
and operation

207
00:09:28,959 --> 00:09:31,839
this term could partitionally bring more

208
00:09:31,839 --> 00:09:36,320
serious problems a vulnerability in vs

209
00:09:36,320 --> 00:09:40,080
works will affect surgeons or devices

210
00:09:40,080 --> 00:09:44,080
also physical attacks should not be

211
00:09:44,080 --> 00:09:46,240
agonized

212
00:09:46,240 --> 00:09:51,120
and 5h3 is increased with usbs attackers

213
00:09:51,120 --> 00:09:53,600
targeting this kind of hard

214
00:09:53,600 --> 00:09:57,839
interface can't be ruled out

215
00:09:58,160 --> 00:10:01,920
we focus on true potential attack

216
00:10:01,920 --> 00:10:04,640
vectors in this prostitution through

217
00:10:04,640 --> 00:10:07,120
there are many more

218
00:10:07,120 --> 00:10:09,360
research aspects

219
00:10:09,360 --> 00:10:11,920
one priority particle

220
00:10:11,920 --> 00:10:13,519
the reason being

221
00:10:13,519 --> 00:10:16,880
that after many research work we find

222
00:10:16,880 --> 00:10:20,079
out weak priority protocols are often

223
00:10:20,079 --> 00:10:23,839
the best way to work and damage critical

224
00:10:23,839 --> 00:10:26,000
infrastructure also

225
00:10:26,000 --> 00:10:28,880
pulse in priority protectors normal

226
00:10:28,880 --> 00:10:31,200
contribution off

227
00:10:31,200 --> 00:10:33,920
now you get heads on a device it's

228
00:10:33,920 --> 00:10:37,040
designed to help ports open to support

229
00:10:37,040 --> 00:10:40,240
privacy protocols and you can easily

230
00:10:40,240 --> 00:10:42,640
access results early

231
00:10:42,640 --> 00:10:45,839
it's extreme configuration

232
00:10:45,839 --> 00:10:46,959
second

233
00:10:46,959 --> 00:10:49,760
the password projection mechanism many

234
00:10:49,760 --> 00:10:52,160
industrial control device

235
00:10:52,160 --> 00:10:54,959
has its mechanism sadly

236
00:10:54,959 --> 00:10:57,440
not many people use this feature in the

237
00:10:57,440 --> 00:10:59,360
attribute

238
00:10:59,360 --> 00:11:02,880
byte is visually critical

239
00:11:02,880 --> 00:11:05,680
to overall security

240
00:11:05,680 --> 00:11:08,399
activating this feature will prevent

241
00:11:08,399 --> 00:11:12,320
partition on authorized access and tests

242
00:11:12,320 --> 00:11:15,760
but nothing is perfect perfect

243
00:11:15,760 --> 00:11:19,680
the password protection mechanism is not

244
00:11:19,680 --> 00:11:22,160
an exception ether

245
00:11:22,160 --> 00:11:24,880
we conducted several research regarding

246
00:11:24,880 --> 00:11:27,440
this feature and viewer prostitution on

247
00:11:27,440 --> 00:11:31,680
hitb amis 2021 about

248
00:11:31,680 --> 00:11:34,640
the how to bypass such mechanism for

249
00:11:34,640 --> 00:11:37,120
siemens semantic

250
00:11:37,120 --> 00:11:38,240
products

251
00:11:38,240 --> 00:11:41,120
links are provided here in this

252
00:11:41,120 --> 00:11:43,440
prostitution we will

253
00:11:43,440 --> 00:11:46,320
now ensure the issue of authorization

254
00:11:46,320 --> 00:11:49,440
bypass in schneider's most high-end pack

255
00:11:49,440 --> 00:11:50,639
product

256
00:11:50,639 --> 00:11:54,120
the n583

257
00:11:54,800 --> 00:11:57,680
before we start here is our research

258
00:11:57,680 --> 00:12:01,200
setup the configuration software is a

259
00:12:01,200 --> 00:12:03,240
control expert

260
00:12:03,240 --> 00:12:07,760
15.0 sp1 the full wheel worry is the way

261
00:12:07,760 --> 00:12:10,000
through input 2 and the hardware

262
00:12:10,000 --> 00:12:11,600
boarding of the

263
00:12:11,600 --> 00:12:13,360
m5h3

264
00:12:13,360 --> 00:12:16,760
is ep581020

265
00:12:17,760 --> 00:12:20,320
environment configuration

266
00:12:20,320 --> 00:12:22,720
one p3 is installed with the

267
00:12:22,720 --> 00:12:24,480
configuration software

268
00:12:24,480 --> 00:12:28,639
and another pc is used to computer pads

269
00:12:28,639 --> 00:12:30,800
and device scripts

270
00:12:30,800 --> 00:12:33,760
after connecting to the switch

271
00:12:33,760 --> 00:12:36,800
the two pieces exchange information with

272
00:12:36,800 --> 00:12:39,800
i58

273
00:12:40,800 --> 00:12:43,279
let's start with the first attendee

274
00:12:43,279 --> 00:12:45,680
technical part

275
00:12:45,680 --> 00:12:48,800
the primary protocol for schneider and

276
00:12:48,800 --> 00:12:49,839
file

277
00:12:49,839 --> 00:12:53,839
e3 the priority protocol used by the

278
00:12:53,839 --> 00:12:56,480
configuration software to communication

279
00:12:56,480 --> 00:12:58,000
with the io

280
00:12:58,000 --> 00:12:59,360
and file

281
00:12:59,360 --> 00:13:01,440
h3su max

282
00:13:01,440 --> 00:13:05,839
only field message application supplies

283
00:13:05,839 --> 00:13:08,160
protocol is used by schneider to

284
00:13:08,160 --> 00:13:11,440
configure and monitor the communication

285
00:13:11,440 --> 00:13:14,399
between the software and the

286
00:13:14,399 --> 00:13:16,079
hack sister

287
00:13:16,079 --> 00:13:20,639
not only in the and file e3 but also in

288
00:13:20,639 --> 00:13:22,399
the i'm

289
00:13:22,399 --> 00:13:26,079
340. your mass protocol is based on the

290
00:13:26,079 --> 00:13:30,480
modbus tcp protocol it's extended on the

291
00:13:30,480 --> 00:13:31,519
function

292
00:13:31,519 --> 00:13:32,839
code

293
00:13:32,839 --> 00:13:39,279
0 x 5a resolved by modbus tcp protocol

294
00:13:39,279 --> 00:13:40,320
and

295
00:13:40,320 --> 00:13:43,040
forms its own complete particle

296
00:13:43,040 --> 00:13:46,399
processing system

297
00:13:47,760 --> 00:13:51,040
next let's take a look at the umass

298
00:13:51,040 --> 00:13:52,639
format

299
00:13:52,639 --> 00:13:55,199
it's the function code and data part of

300
00:13:55,199 --> 00:13:59,600
the modbus tcp protocol

301
00:13:59,600 --> 00:14:00,839
the

302
00:14:00,839 --> 00:14:03,680
encapsulated the umass requires the

303
00:14:03,680 --> 00:14:06,639
package to start with

304
00:14:06,639 --> 00:14:09,240
0x 5a

305
00:14:09,240 --> 00:14:12,480
identification byte followed by a one

306
00:14:12,480 --> 00:14:13,440
bit

307
00:14:13,440 --> 00:14:17,040
reservation flag called syntheky

308
00:14:17,040 --> 00:14:19,760
after this in the

309
00:14:19,760 --> 00:14:22,480
specific function called audio mass

310
00:14:22,480 --> 00:14:26,320
protocol and the date section

311
00:14:26,320 --> 00:14:29,279
you must function called various in

312
00:14:29,279 --> 00:14:33,600
different formats including id of set

313
00:14:33,600 --> 00:14:37,120
list and others the umass response

314
00:14:37,120 --> 00:14:40,959
package is basically basically the same

315
00:14:40,959 --> 00:14:44,240
and search of the required package it

316
00:14:44,240 --> 00:14:46,240
starts with

317
00:14:46,240 --> 00:14:47,040
the

318
00:14:47,040 --> 00:14:48,639
xero

319
00:14:48,639 --> 00:14:51,199
x5a identifier

320
00:14:51,199 --> 00:14:54,000
the next is the scissor king then the

321
00:14:54,000 --> 00:14:56,399
one error code

322
00:14:56,399 --> 00:14:59,920
it will return f e if the request

323
00:14:59,920 --> 00:15:03,279
package can be correctly processed by

324
00:15:03,279 --> 00:15:04,800
the consumer

325
00:15:04,800 --> 00:15:07,440
the error code is followed by the rest

326
00:15:07,440 --> 00:15:12,360
of the date in the response package

327
00:15:15,360 --> 00:15:17,440
we obtained the function call list

328
00:15:17,440 --> 00:15:20,399
inside the umass by re reversing

329
00:15:20,399 --> 00:15:23,360
engineering the four wheel of imp file

330
00:15:23,360 --> 00:15:26,880
e3 which contains a variety of different

331
00:15:26,880 --> 00:15:29,120
operation function called

332
00:15:29,120 --> 00:15:30,480
categories

333
00:15:30,480 --> 00:15:31,839
such as

334
00:15:31,839 --> 00:15:34,880
averaging plc information

335
00:15:34,880 --> 00:15:37,040
reading a

336
00:15:37,040 --> 00:15:39,519
blog writing a blog

337
00:15:39,519 --> 00:15:43,199
begin upload and so on there is a

338
00:15:43,199 --> 00:15:46,399
screenshot for some of the

339
00:15:46,399 --> 00:15:50,399
wizard desert descriptions

340
00:15:50,399 --> 00:15:52,160
in this list

341
00:15:52,160 --> 00:15:54,399
some function called require section

342
00:15:54,399 --> 00:15:58,320
keys for operations

343
00:15:58,880 --> 00:15:59,680
so

344
00:15:59,680 --> 00:16:02,639
how is the section key generated well

345
00:16:02,639 --> 00:16:04,560
allowance in the package

346
00:16:04,560 --> 00:16:07,120
we learned that the

347
00:16:07,120 --> 00:16:09,839
position our process of the section is

348
00:16:09,839 --> 00:16:11,680
like this

349
00:16:11,680 --> 00:16:12,959
firstly

350
00:16:12,959 --> 00:16:15,120
the client since the plc with the

351
00:16:15,120 --> 00:16:17,199
position function called

352
00:16:17,199 --> 00:16:18,560
the rule

353
00:16:18,560 --> 00:16:21,839
x turn and the prc will reaching a

354
00:16:21,839 --> 00:16:25,199
correct reply package

355
00:16:25,199 --> 00:16:28,800
the fbe in the reply package is followed

356
00:16:28,800 --> 00:16:29,839
by

357
00:16:29,839 --> 00:16:32,079
a bit which is a

358
00:16:32,079 --> 00:16:33,680
section key

359
00:16:33,680 --> 00:16:35,839
in the following package

360
00:16:35,839 --> 00:16:37,519
interaction

361
00:16:37,519 --> 00:16:40,079
the scissor key must be

362
00:16:40,079 --> 00:16:42,000
sensor key must be

363
00:16:42,000 --> 00:16:44,959
encapsulated into the current speed

364
00:16:44,959 --> 00:16:47,759
corresponding position so that the plc

365
00:16:47,759 --> 00:16:51,000
can handle the operation

366
00:16:51,000 --> 00:16:55,360
corresponding to the function code

367
00:16:57,600 --> 00:16:59,440
to

368
00:16:59,440 --> 00:17:03,600
facilitate the analysis of the math

369
00:17:03,600 --> 00:17:06,000
we wrote a simple umass

370
00:17:06,000 --> 00:17:08,319
freezing plugin

371
00:17:08,319 --> 00:17:09,839
which is

372
00:17:09,839 --> 00:17:12,959
written in la and

373
00:17:12,959 --> 00:17:15,839
imported through via shack

374
00:17:15,839 --> 00:17:19,280
this involves this enables us to have a

375
00:17:19,280 --> 00:17:22,559
clear look at the umass structure which

376
00:17:22,559 --> 00:17:24,160
contains the

377
00:17:24,160 --> 00:17:26,559
cultural section king

378
00:17:26,559 --> 00:17:31,639
function code and data section

379
00:17:32,960 --> 00:17:36,320
by aligning since the umass portugal is

380
00:17:36,320 --> 00:17:39,280
found that the structure of the particle

381
00:17:39,280 --> 00:17:40,640
and the

382
00:17:40,640 --> 00:17:43,280
procedure

383
00:17:43,280 --> 00:17:44,960
pretty

384
00:17:44,960 --> 00:17:47,200
producer

385
00:17:47,200 --> 00:17:48,480
made

386
00:17:48,480 --> 00:17:52,160
the producer matched process is simple

387
00:17:52,160 --> 00:17:55,200
and she only needs to send the

388
00:17:55,200 --> 00:17:58,720
zero x20 function code and the wait for

389
00:17:58,720 --> 00:18:02,559
the pack to written the correct reply

390
00:18:02,559 --> 00:18:06,000
and added the one bit to the section key

391
00:18:06,000 --> 00:18:07,679
position to it

392
00:18:07,679 --> 00:18:11,280
established the collect later on

393
00:18:11,280 --> 00:18:12,480
with such

394
00:18:12,480 --> 00:18:16,080
a simple process and message format are

395
00:18:16,080 --> 00:18:19,760
there more vulnerabilities

396
00:18:19,760 --> 00:18:21,440
vision

397
00:18:21,440 --> 00:18:23,919
and that is the fast testing against the

398
00:18:23,919 --> 00:18:27,200
humans in portugal where we chose the

399
00:18:27,200 --> 00:18:30,720
bullfast for work and were careful to

400
00:18:30,720 --> 00:18:31,919
keep a

401
00:18:31,919 --> 00:18:34,960
backup of the fast process traffic in

402
00:18:34,960 --> 00:18:36,799
case of the

403
00:18:36,799 --> 00:18:41,120
proper problem reproduced later

404
00:18:41,120 --> 00:18:43,120
in the first precise

405
00:18:43,120 --> 00:18:46,400
process we also added a power control

406
00:18:46,400 --> 00:18:51,120
unit to improve the fast effect

407
00:18:51,120 --> 00:18:53,520
and the first process calls the pack

408
00:18:53,520 --> 00:18:56,640
into a fourth arrow mode which will stop

409
00:18:56,640 --> 00:18:57,760
the

410
00:18:57,760 --> 00:19:00,320
which will stop the whole process the

411
00:19:00,320 --> 00:19:03,120
power consumer you need to unh will

412
00:19:03,120 --> 00:19:06,400
restart the pack again after the

413
00:19:06,400 --> 00:19:08,080
extrusion of

414
00:19:08,080 --> 00:19:11,120
fast program so that you can improve the

415
00:19:11,120 --> 00:19:13,440
fast efficiency to achieve the

416
00:19:13,440 --> 00:19:17,360
automation of fast process

417
00:19:17,919 --> 00:19:21,280
before first we need to select symbols

418
00:19:21,280 --> 00:19:24,880
we divide all functions code

419
00:19:24,880 --> 00:19:28,080
although you must in two parts one that

420
00:19:28,080 --> 00:19:31,600
requires section key and the other that

421
00:19:31,600 --> 00:19:32,880
doesn't

422
00:19:32,880 --> 00:19:35,200
this separation helps us to use

423
00:19:35,200 --> 00:19:39,840
different modes for quickly fast

424
00:19:40,720 --> 00:19:44,320
the next style staff is how to build our

425
00:19:44,320 --> 00:19:46,000
fast program

426
00:19:46,000 --> 00:19:49,440
the fourth step is to construct your

427
00:19:49,440 --> 00:19:54,000
mass practical packets which differs

428
00:19:54,000 --> 00:19:55,440
for different

429
00:19:55,440 --> 00:19:58,480
function codes but the basic method is

430
00:19:58,480 --> 00:19:59,440
the c

431
00:19:59,440 --> 00:20:01,760
the other thing is to

432
00:20:01,760 --> 00:20:03,840
notice here is

433
00:20:03,840 --> 00:20:06,400
that if you need a section key you need

434
00:20:06,400 --> 00:20:10,000
to do something special in order to do a

435
00:20:10,000 --> 00:20:11,520
wild

436
00:20:11,520 --> 00:20:13,360
fast

437
00:20:13,360 --> 00:20:16,400
the second step is to set the section

438
00:20:16,400 --> 00:20:18,080
object

439
00:20:18,080 --> 00:20:21,280
the third step is to configure the first

440
00:20:21,280 --> 00:20:22,400
target

441
00:20:22,400 --> 00:20:26,080
including the ip address post number

442
00:20:26,080 --> 00:20:30,559
timeout and the particle type

443
00:20:30,559 --> 00:20:32,080
sample

444
00:20:32,080 --> 00:20:34,640
and package to the program with the

445
00:20:34,640 --> 00:20:39,520
monitor and power control modules

446
00:20:41,120 --> 00:20:43,760
here is a

447
00:20:43,760 --> 00:20:46,840
here is a simple fast demo we found a

448
00:20:46,840 --> 00:20:49,600
dino the nail of the wise when your

449
00:20:49,600 --> 00:20:53,440
village is around 100 seconds

450
00:20:53,440 --> 00:20:56,480
that put the device into critical

451
00:20:56,480 --> 00:20:59,520
failure mode and require a consumer

452
00:20:59,520 --> 00:21:04,799
remote to recover okay let's say it

453
00:21:10,720 --> 00:21:12,159
oh

454
00:21:12,159 --> 00:21:13,679
the plc

455
00:21:13,679 --> 00:21:14,840
is run

456
00:21:14,840 --> 00:21:16,880
installed stage

457
00:21:16,880 --> 00:21:18,240
stated

458
00:21:18,240 --> 00:21:21,679
and the first is running

459
00:21:24,320 --> 00:21:28,000
you can see in the blue

460
00:21:28,000 --> 00:21:28,960
yeah

461
00:21:28,960 --> 00:21:30,720
the plc the

462
00:21:30,720 --> 00:21:33,360
pc

463
00:21:33,360 --> 00:21:35,520
to

464
00:21:35,520 --> 00:21:38,080
ensure a critical failure mode

465
00:21:38,080 --> 00:21:40,640
and required a control variable to

466
00:21:40,640 --> 00:21:44,200
recover it

467
00:21:48,559 --> 00:21:51,200
here are some of the vulnerability which

468
00:21:51,200 --> 00:21:52,000
is

469
00:21:52,000 --> 00:21:55,600
covered using our own fast program which

470
00:21:55,600 --> 00:22:00,639
was discovered in january 2020

471
00:22:05,919 --> 00:22:06,960
okay

472
00:22:06,960 --> 00:22:10,840
moving on to the second part of today's

473
00:22:10,840 --> 00:22:14,159
presentation when we reported a number

474
00:22:14,159 --> 00:22:17,520
of the vulnerabilities to schneider in

475
00:22:17,520 --> 00:22:19,039
2019

476
00:22:19,039 --> 00:22:21,320
schneider said that they were not

477
00:22:21,320 --> 00:22:24,240
vulnerabilities and that they

478
00:22:24,240 --> 00:22:27,520
would not exist with a application

479
00:22:27,520 --> 00:22:28,720
password

480
00:22:28,720 --> 00:22:31,600
and this time we found

481
00:22:31,600 --> 00:22:34,320
that then the application password is

482
00:22:34,320 --> 00:22:35,360
such

483
00:22:35,360 --> 00:22:38,880
the application program compared

484
00:22:38,880 --> 00:22:40,159
and is

485
00:22:40,159 --> 00:22:44,000
and install it the pure poc will have

486
00:22:44,000 --> 00:22:48,000
password protection face

487
00:22:48,000 --> 00:22:51,600
unless risk access will be refused

488
00:22:51,600 --> 00:22:55,280
but what is this password protection

489
00:22:55,280 --> 00:22:56,720
mechanism

490
00:22:56,720 --> 00:22:59,360
how to get around this authorization

491
00:22:59,360 --> 00:23:02,720
mechanism so we start this part of the

492
00:23:02,720 --> 00:23:06,159
research in 20

493
00:23:06,159 --> 00:23:07,760
2018

494
00:23:07,760 --> 00:23:10,559
2019

495
00:23:14,720 --> 00:23:16,799
let's see how if i pass the

496
00:23:16,799 --> 00:23:20,000
authorization style based type

497
00:23:20,000 --> 00:23:23,440
the first step is to confirm how the

498
00:23:23,440 --> 00:23:26,000
password is stored

499
00:23:26,000 --> 00:23:29,600
the second step is to understand what is

500
00:23:29,600 --> 00:23:32,799
the mechanism of the password protection

501
00:23:32,799 --> 00:23:34,000
and what

502
00:23:34,000 --> 00:23:36,720
algorithm are used

503
00:23:36,720 --> 00:23:38,159
step 3

504
00:23:38,159 --> 00:23:41,360
actually bypass password protection

505
00:23:41,360 --> 00:23:45,279
is there any other security measures

506
00:23:45,279 --> 00:23:46,559
and if so

507
00:23:46,559 --> 00:23:49,360
how we can brew through

508
00:23:49,360 --> 00:23:52,000
therefore after all the

509
00:23:52,000 --> 00:23:53,840
other steel

510
00:23:53,840 --> 00:23:55,520
are broken

511
00:23:55,520 --> 00:23:58,880
how do we frog a client to perform

512
00:23:58,880 --> 00:24:02,240
sensitive of operation attempts

513
00:24:02,240 --> 00:24:05,200
on the field plc

514
00:24:05,200 --> 00:24:07,120
the pack or l

515
00:24:07,120 --> 00:24:09,918
580

516
00:24:12,320 --> 00:24:16,320
take a look at the fourth part and find

517
00:24:16,320 --> 00:24:17,600
out

518
00:24:17,600 --> 00:24:20,640
and find out what form your passwords

519
00:24:20,640 --> 00:24:23,360
are stored in to find out how the

520
00:24:23,360 --> 00:24:25,520
passwords are

521
00:24:25,520 --> 00:24:28,400
incorrupted i reserve the

522
00:24:28,400 --> 00:24:30,960
unity incorrectly

523
00:24:30,960 --> 00:24:35,440
dot dl field the enquire the incorrected

524
00:24:35,440 --> 00:24:37,760
password is delivered

525
00:24:37,760 --> 00:24:42,320
in two parts the fourth part is a h byte

526
00:24:42,320 --> 00:24:46,880
jaram king which is randomly generated

527
00:24:46,880 --> 00:24:50,880
and the thought of the hash algorithm

528
00:24:50,880 --> 00:24:55,200
the second part is a value of the sha

529
00:24:55,200 --> 00:24:56,159
2

530
00:24:56,159 --> 00:25:01,840
5 6 using the password and the thought

531
00:25:02,000 --> 00:25:04,320
this result geyser

532
00:25:04,320 --> 00:25:07,520
with the sound will be stored in the

533
00:25:07,520 --> 00:25:10,880
apx project view through

534
00:25:10,880 --> 00:25:13,440
base64

535
00:25:13,440 --> 00:25:15,120
which will then

536
00:25:15,120 --> 00:25:18,720
be downloaded to pack with the project

537
00:25:18,720 --> 00:25:21,120
fields

538
00:25:23,039 --> 00:25:26,159
the second part is the value of the

539
00:25:26,159 --> 00:25:30,320
chart 2 5 6 using the password and the

540
00:25:30,320 --> 00:25:32,640
thought this result

541
00:25:32,640 --> 00:25:35,760
together with the sound will be stored

542
00:25:35,760 --> 00:25:40,000
in the fpx project field through

543
00:25:40,000 --> 00:25:41,679
base 6

544
00:25:41,679 --> 00:25:42,799
4

545
00:25:42,799 --> 00:25:46,000
which will then be downloaded to plc

546
00:25:46,000 --> 00:25:48,159
with project fields

547
00:25:48,159 --> 00:25:50,960
the second step is to

548
00:25:50,960 --> 00:25:53,440
figure out the password protection

549
00:25:53,440 --> 00:25:54,720
algorithm

550
00:25:54,720 --> 00:25:58,880
means authorization of reason here the

551
00:25:58,880 --> 00:26:01,840
analysis that the organization processes

552
00:26:01,840 --> 00:26:06,559
in ion file hd overview to understand

553
00:26:06,559 --> 00:26:09,440
how the observation macro

554
00:26:09,440 --> 00:26:11,440
magnesium works

555
00:26:11,440 --> 00:26:12,799
first

556
00:26:12,799 --> 00:26:16,880
the client should randomly generate a 32

557
00:26:16,880 --> 00:26:20,159
byte redundant value and synthetic shoe

558
00:26:20,159 --> 00:26:22,640
pack and the request ditch

559
00:26:22,640 --> 00:26:25,600
the pack responds with a

560
00:26:25,600 --> 00:26:30,080
32 byte random value plc random key

561
00:26:30,080 --> 00:26:31,120
funny

562
00:26:31,120 --> 00:26:32,640
the clicked

563
00:26:32,640 --> 00:26:33,919
our trend

564
00:26:33,919 --> 00:26:36,480
opportunes the following acceleration

565
00:26:36,480 --> 00:26:37,520
hash

566
00:26:37,520 --> 00:26:39,360
through the

567
00:26:39,360 --> 00:26:40,480
sha

568
00:26:40,480 --> 00:26:43,919
2 5 6 algorithm based on the input

569
00:26:43,919 --> 00:26:46,400
password and to read

570
00:26:46,400 --> 00:26:49,520
general values after the hash is

571
00:26:49,520 --> 00:26:52,960
delivered to the pack the pack will vary

572
00:26:52,960 --> 00:26:54,559
for it

573
00:26:54,559 --> 00:26:57,360
so the key to guys around the

574
00:26:57,360 --> 00:27:00,400
authorization is to find the password

575
00:27:00,400 --> 00:27:02,799
thought hush where can we get this

576
00:27:02,799 --> 00:27:05,039
screen

577
00:27:05,760 --> 00:27:08,159
luckily we found the

578
00:27:08,159 --> 00:27:11,120
password sounds harsh in the traffic

579
00:27:11,120 --> 00:27:14,159
after analysis

580
00:27:14,159 --> 00:27:15,520
control

581
00:27:15,520 --> 00:27:18,880
experts will read the pack's password

582
00:27:18,880 --> 00:27:22,559
hash before authorization and the pack

583
00:27:22,559 --> 00:27:25,840
will return the possible salt touch to

584
00:27:25,840 --> 00:27:27,840
the client

585
00:27:27,840 --> 00:27:29,760
so that way

586
00:27:29,760 --> 00:27:32,320
so that we can bypass authorization by

587
00:27:32,320 --> 00:27:35,200
using this leaked password hash and

588
00:27:35,200 --> 00:27:36,240
carry

589
00:27:36,240 --> 00:27:38,159
and carry it out

590
00:27:38,159 --> 00:27:40,399
any operation or pack

591
00:27:40,399 --> 00:27:43,440
such as start stop upload project and

592
00:27:43,440 --> 00:27:46,919
download project

593
00:27:47,700 --> 00:27:49,200
[Music]

594
00:27:49,200 --> 00:27:52,000
too simple to be true right

595
00:27:52,000 --> 00:27:54,080
after testing out

596
00:27:54,080 --> 00:27:56,159
using leakage hash

597
00:27:56,159 --> 00:27:57,760
solely

598
00:27:57,760 --> 00:28:00,080
to complete the to complete the

599
00:28:00,080 --> 00:28:03,360
authorization process failed to conduct

600
00:28:03,360 --> 00:28:05,760
any sensitive operations

601
00:28:05,760 --> 00:28:07,279
even with the

602
00:28:07,279 --> 00:28:08,799
sysaki

603
00:28:08,799 --> 00:28:12,080
what was the problem by alba

604
00:28:12,080 --> 00:28:14,799
dwelling the traffic between control

605
00:28:14,799 --> 00:28:19,360
experts and and 518 it founded

606
00:28:19,360 --> 00:28:20,480
that

607
00:28:20,480 --> 00:28:23,480
a large number of

608
00:28:23,480 --> 00:28:29,360
0x38 packets appear after authorization

609
00:28:29,360 --> 00:28:32,559
the format of the pac package is

610
00:28:32,559 --> 00:28:34,320
significant

611
00:28:34,320 --> 00:28:36,159
significantly

612
00:28:36,159 --> 00:28:38,320
more complex than

613
00:28:38,320 --> 00:28:41,679
that our trapping results password

614
00:28:41,679 --> 00:28:43,440
protection

615
00:28:43,440 --> 00:28:45,120
may maybe it's the

616
00:28:45,120 --> 00:28:47,520
injection

617
00:28:47,520 --> 00:28:49,279
maybe it's the induction of the

618
00:28:49,279 --> 00:28:53,679
additional security merits

619
00:28:53,679 --> 00:28:55,679
after our analysis

620
00:28:55,679 --> 00:28:57,600
is found that the

621
00:28:57,600 --> 00:28:59,200
xerox

622
00:28:59,200 --> 00:29:02,320
38 function code is a security function

623
00:29:02,320 --> 00:29:04,360
code in which the

624
00:29:04,360 --> 00:29:06,320
redundantly part

625
00:29:06,320 --> 00:29:07,440
adds

626
00:29:07,440 --> 00:29:10,559
as an integrated variation the

627
00:29:10,559 --> 00:29:13,520
integrated check algorithm is shown in

628
00:29:13,520 --> 00:29:14,480
the

629
00:29:14,480 --> 00:29:18,720
diagram first the plc identified

630
00:29:18,720 --> 00:29:20,240
identity

631
00:29:20,240 --> 00:29:23,279
identity is opportuned

632
00:29:23,279 --> 00:29:27,039
it's a unique p pack identifier

633
00:29:27,039 --> 00:29:30,480
and can be read 0

634
00:29:30,480 --> 00:29:32,159
0 x

635
00:29:32,159 --> 00:29:34,159
0 2 function code

636
00:29:34,159 --> 00:29:35,919
the 32

637
00:29:35,919 --> 00:29:37,600
byte pair

638
00:29:37,600 --> 00:29:40,559
variety value in the d

639
00:29:40,559 --> 00:29:43,840
in the data package is calculated by sha

640
00:29:43,840 --> 00:29:45,440
2 5 6

641
00:29:45,440 --> 00:29:47,440
multiple tests

642
00:29:47,440 --> 00:29:49,840
umass msg

643
00:29:49,840 --> 00:29:53,760
is a message body of the yomas project

644
00:29:53,760 --> 00:29:56,399
upon successful authorization umass

645
00:29:56,399 --> 00:29:58,399
traffic is added

646
00:29:58,399 --> 00:30:00,679
with a 32 byte

647
00:30:00,679 --> 00:30:03,520
integrative field and communication with

648
00:30:03,520 --> 00:30:04,480
the

649
00:30:04,480 --> 00:30:07,520
pack is done through the

650
00:30:07,520 --> 00:30:10,320
0x

651
00:30:10,320 --> 00:30:13,840
38 function code

652
00:30:14,640 --> 00:30:17,279
here we take a look at the message

653
00:30:17,279 --> 00:30:19,679
format format of the

654
00:30:19,679 --> 00:30:20,720
0

655
00:30:20,720 --> 00:30:23,520
x 38 function code

656
00:30:23,520 --> 00:30:24,960
host

657
00:30:24,960 --> 00:30:29,600
0x file a and the section key parts

658
00:30:29,600 --> 00:30:33,200
remain unchanged followed by the

659
00:30:33,200 --> 00:30:37,919
0x 38 function code followed by security

660
00:30:37,919 --> 00:30:38,799
mode

661
00:30:38,799 --> 00:30:40,080
0 1

662
00:30:40,080 --> 00:30:42,399
the calculated

663
00:30:42,399 --> 00:30:46,240
32 byte integrated field will follow and

664
00:30:46,240 --> 00:30:47,360
finally

665
00:30:47,360 --> 00:30:50,320
the full format of the are reaching your

666
00:30:50,320 --> 00:30:52,960
mass message

667
00:30:52,960 --> 00:30:54,960
the section key function code is

668
00:30:54,960 --> 00:30:58,640
included below is a screen

669
00:30:58,640 --> 00:31:03,320
shot of the person implantation

670
00:31:03,320 --> 00:31:07,360
0x38 function code

671
00:31:08,159 --> 00:31:11,360
now that we have covered all the

672
00:31:11,360 --> 00:31:14,080
procedural for all par password

673
00:31:14,080 --> 00:31:16,840
protection mechanism mess

674
00:31:16,840 --> 00:31:19,039
summaries first

675
00:31:19,039 --> 00:31:23,200
we can obtain password hash value

676
00:31:23,200 --> 00:31:25,360
memory block reach

677
00:31:25,360 --> 00:31:27,440
0x20

678
00:31:27,440 --> 00:31:32,320
second generation 32 byte client random

679
00:31:32,320 --> 00:31:35,360
king and then received

680
00:31:35,360 --> 00:31:37,440
challenge king for

681
00:31:37,440 --> 00:31:41,039
from pack calculators correctly hash why

682
00:31:41,039 --> 00:31:42,320
do

683
00:31:42,320 --> 00:31:43,440
third

684
00:31:43,440 --> 00:31:45,679
tick plc reservation

685
00:31:45,679 --> 00:31:48,559
value mass command 0

686
00:31:48,559 --> 00:31:49,840
extreme

687
00:31:49,840 --> 00:31:53,519
force we need to end a circuit lawyer

688
00:31:53,519 --> 00:31:56,799
our integrity check all

689
00:31:56,799 --> 00:31:57,919
of the

690
00:31:57,919 --> 00:32:02,000
0x 38 function code to allow the origin

691
00:32:02,000 --> 00:32:02,960
node

692
00:32:02,960 --> 00:32:06,559
you must message bodies and synth and

693
00:32:06,559 --> 00:32:10,480
sync them to the pack and to this tab

694
00:32:10,480 --> 00:32:12,640
we can perform

695
00:32:12,640 --> 00:32:14,399
various

696
00:32:14,399 --> 00:32:18,159
sensitive operations exclude upload

697
00:32:18,159 --> 00:32:21,600
program download program stop stop and

698
00:32:21,600 --> 00:32:25,360
stop start and so on

699
00:32:25,360 --> 00:32:27,600
we were faced with

700
00:32:27,600 --> 00:32:30,639
final problem

701
00:32:30,960 --> 00:32:33,360
we were faced with the final problem of

702
00:32:33,360 --> 00:32:37,120
how to make a frog a client to conduct

703
00:32:37,120 --> 00:32:38,480
sensitive

704
00:32:38,480 --> 00:32:40,480
operations first

705
00:32:40,480 --> 00:32:42,720
we use the script to achieve the

706
00:32:42,720 --> 00:32:46,240
authorization always under integrated

707
00:32:46,240 --> 00:32:48,000
the algorithm

708
00:32:48,000 --> 00:32:50,880
described above then

709
00:32:50,880 --> 00:32:52,799
consider

710
00:32:52,799 --> 00:32:54,720
constructed

711
00:32:54,720 --> 00:32:58,240
hr process of authorization analysis

712
00:32:58,240 --> 00:33:01,120
security paths and finally

713
00:33:01,120 --> 00:33:04,080
integrate the starch and store packets

714
00:33:04,080 --> 00:33:08,000
into the screen screech

715
00:33:08,000 --> 00:33:10,880
here we provide a demonstration

716
00:33:10,880 --> 00:33:13,840
demonstration of a reply attack the

717
00:33:13,840 --> 00:33:17,159
target is a password protected

718
00:33:17,159 --> 00:33:18,960
m580

719
00:33:18,960 --> 00:33:21,919
it's impossible to start and stop

720
00:33:21,919 --> 00:33:24,399
operations without

721
00:33:24,399 --> 00:33:27,519
the correct password after running our

722
00:33:27,519 --> 00:33:30,000
reply

723
00:33:30,000 --> 00:33:34,880
apply attack scripts the pack can be

724
00:33:34,960 --> 00:33:36,080
can be

725
00:33:36,080 --> 00:33:38,480
manipulated to make edge

726
00:33:38,480 --> 00:33:42,320
in alice in any stage wrong or stealth

727
00:33:42,320 --> 00:33:45,519
okay let's see it

728
00:33:49,200 --> 00:33:52,200
first

729
00:33:53,279 --> 00:33:55,760
we should check the password

730
00:33:55,760 --> 00:33:58,480
can be set

731
00:34:02,159 --> 00:34:04,559
if you

732
00:34:04,960 --> 00:34:06,480
putting in a

733
00:34:06,480 --> 00:34:07,919
password

734
00:34:07,919 --> 00:34:09,599
you can't

735
00:34:09,599 --> 00:34:14,200
perform stop and start

736
00:34:20,639 --> 00:34:22,239
okay

737
00:34:22,239 --> 00:34:26,799
joining our reply attack secret

738
00:34:26,879 --> 00:34:28,719
you can see the

739
00:34:28,719 --> 00:34:30,800
hacker can be

740
00:34:30,800 --> 00:34:32,320
make a la

741
00:34:32,320 --> 00:34:36,159
stitch drown or stop

742
00:34:36,960 --> 00:34:38,560
yeah now

743
00:34:38,560 --> 00:34:42,960
the pack is in round stage

744
00:34:44,800 --> 00:34:46,960
so

745
00:34:47,040 --> 00:34:49,839
let's continue

746
00:34:50,560 --> 00:34:53,839
in recent years there can be a variety

747
00:34:53,839 --> 00:34:57,119
of random incidents however these

748
00:34:57,119 --> 00:34:58,560
attackers

749
00:34:58,560 --> 00:35:01,839
are target are targeting users

750
00:35:01,839 --> 00:35:03,920
in ics or

751
00:35:03,920 --> 00:35:04,720
the

752
00:35:04,720 --> 00:35:06,800
servers or

753
00:35:06,800 --> 00:35:08,000
pieces

754
00:35:08,000 --> 00:35:11,280
in ot environment

755
00:35:11,520 --> 00:35:14,800
is there a possibility of a restaurant

756
00:35:14,800 --> 00:35:18,000
or target targeting

757
00:35:18,000 --> 00:35:19,200
liu y

758
00:35:19,200 --> 00:35:22,240
consumers zero will be

759
00:35:22,240 --> 00:35:25,200
we have proposed such a

760
00:35:25,200 --> 00:35:28,400
attack on the controller

761
00:35:28,400 --> 00:35:31,200
let's change

762
00:35:31,200 --> 00:35:34,320
to pro to perform this new type of

763
00:35:34,320 --> 00:35:35,680
attached

764
00:35:35,680 --> 00:35:39,680
targeting molecule pack there are five

765
00:35:39,680 --> 00:35:41,040
steps

766
00:35:41,040 --> 00:35:42,079
first

767
00:35:42,079 --> 00:35:45,599
you need the ot network

768
00:35:45,599 --> 00:35:49,520
search for and file edge devices in the

769
00:35:49,520 --> 00:35:51,280
network

770
00:35:51,280 --> 00:35:53,280
and confirm

771
00:35:53,280 --> 00:35:55,520
the

772
00:35:55,520 --> 00:35:59,119
and control the attack target second

773
00:35:59,119 --> 00:36:02,079
replace the application of the ion

774
00:36:02,079 --> 00:36:04,079
file ht

775
00:36:04,079 --> 00:36:08,160
hiders are rich in production process

776
00:36:08,160 --> 00:36:09,119
and

777
00:36:09,119 --> 00:36:12,560
set the attacher's knowing password

778
00:36:12,560 --> 00:36:14,400
third

779
00:36:14,400 --> 00:36:16,880
injection shield code to remotely

780
00:36:16,880 --> 00:36:22,000
control the controller or i'm file hd

781
00:36:22,000 --> 00:36:24,400
fourth

782
00:36:25,280 --> 00:36:25,839
send synchronesis

783
00:36:25,839 --> 00:36:28,079
rest some email to

784
00:36:28,079 --> 00:36:32,800
enterprise managers demand eraser

785
00:36:32,800 --> 00:36:34,240
fifth

786
00:36:34,240 --> 00:36:37,599
if not page on tab remote starts at im

787
00:36:37,599 --> 00:36:40,480
file hd device damage

788
00:36:40,480 --> 00:36:41,920
command or

789
00:36:41,920 --> 00:36:44,240
instruction

790
00:36:44,240 --> 00:36:45,920
in this

791
00:36:45,920 --> 00:36:48,240
attack mode

792
00:36:48,240 --> 00:36:50,800
there are several keychain increase

793
00:36:50,800 --> 00:36:54,400
points in this new attack mode including

794
00:36:54,400 --> 00:36:57,839
applications that bypass authorization

795
00:36:57,839 --> 00:37:01,839
and replacement age with the password

796
00:37:01,839 --> 00:37:04,240
knowing to the attacher

797
00:37:04,240 --> 00:37:08,000
and how to perform remote code exclusion

798
00:37:08,000 --> 00:37:10,800
on the m580

799
00:37:10,800 --> 00:37:14,000
we are going to demonstrate this to you

800
00:37:14,000 --> 00:37:15,839
a bit

801
00:37:15,839 --> 00:37:18,240
let's see

802
00:37:18,240 --> 00:37:20,960
let's start by looking at how to bypass

803
00:37:20,960 --> 00:37:23,280
authorization by replacing an

804
00:37:23,280 --> 00:37:25,680
application that contains

805
00:37:25,680 --> 00:37:26,400
a

806
00:37:26,400 --> 00:37:29,680
attacher's knowing password here a weak

807
00:37:29,680 --> 00:37:33,599
password is set just for the sake of the

808
00:37:33,599 --> 00:37:36,240
demonstration

809
00:37:36,240 --> 00:37:37,440
where

810
00:37:37,440 --> 00:37:40,880
various in the field it could be too

811
00:37:40,880 --> 00:37:42,560
complex to be

812
00:37:42,560 --> 00:37:44,720
correct

813
00:37:44,720 --> 00:37:49,399
first of all let's see it

814
00:37:52,480 --> 00:37:53,359
first

815
00:37:53,359 --> 00:37:56,000
check the word of the

816
00:37:56,000 --> 00:37:59,119
control x patch

817
00:38:03,200 --> 00:38:04,640
yeah

818
00:38:04,640 --> 00:38:06,480
next

819
00:38:06,480 --> 00:38:09,200
confirms that the pack can set a

820
00:38:09,200 --> 00:38:11,759
password

821
00:38:13,839 --> 00:38:15,760
only

822
00:38:15,760 --> 00:38:18,800
only the use of the correct password can

823
00:38:18,800 --> 00:38:21,920
access the pack to modify the program or

824
00:38:21,920 --> 00:38:24,720
monitor the

825
00:38:25,119 --> 00:38:27,520
plc

826
00:38:27,520 --> 00:38:32,240
after running the attack square script

827
00:38:32,240 --> 00:38:33,760
the blacklistion

828
00:38:33,760 --> 00:38:36,560
program in the pack was replaced by

829
00:38:36,560 --> 00:38:39,040
another

830
00:38:39,599 --> 00:38:41,040
machine-less

831
00:38:41,040 --> 00:38:43,760
one that has nothing to do with the

832
00:38:43,760 --> 00:38:45,760
control process

833
00:38:45,760 --> 00:38:48,320
which contains different password

834
00:38:48,320 --> 00:38:49,359
hence

835
00:38:49,359 --> 00:38:51,359
the original

836
00:38:51,359 --> 00:38:54,320
the original password can't be used to

837
00:38:54,320 --> 00:38:56,880
access the controller anymore

838
00:38:56,880 --> 00:38:58,000
yeah

839
00:38:58,000 --> 00:38:59,440
you can see

840
00:38:59,440 --> 00:39:01,440
the wrong password

841
00:39:01,440 --> 00:39:04,400
your input

842
00:39:10,480 --> 00:39:11,359
so

843
00:39:11,359 --> 00:39:13,920
access to the container and the program

844
00:39:13,920 --> 00:39:16,800
modeling or efficiency will

845
00:39:16,800 --> 00:39:19,040
now require the new password the new

846
00:39:19,040 --> 00:39:21,680
password

847
00:39:21,680 --> 00:39:22,480
is

848
00:39:22,480 --> 00:39:24,640
we

849
00:39:24,640 --> 00:39:26,839
upload download the

850
00:39:26,839 --> 00:39:31,359
projector with one two three four five

851
00:39:31,359 --> 00:39:32,480
six seven

852
00:39:32,480 --> 00:39:33,920
seven eight

853
00:39:33,920 --> 00:39:35,200
you can see

854
00:39:35,200 --> 00:39:36,240
if we

855
00:39:36,240 --> 00:39:37,200
input

856
00:39:37,200 --> 00:39:40,560
this password into the

857
00:39:40,560 --> 00:39:43,440
into the pack you can perform stop and

858
00:39:43,440 --> 00:39:45,839
start

859
00:39:47,359 --> 00:39:50,240
okay let's see how we can achieve our

860
00:39:50,240 --> 00:39:53,839
ceo and file 80 we can read write

861
00:39:53,839 --> 00:39:57,040
physical memory of the pack where you

862
00:39:57,040 --> 00:39:59,320
must comment

863
00:39:59,320 --> 00:40:03,440
0x28 and 0x29

864
00:40:03,440 --> 00:40:05,520
are counterweight code

865
00:40:05,520 --> 00:40:08,839
segments directly due to page

866
00:40:08,839 --> 00:40:10,960
protection so

867
00:40:10,960 --> 00:40:12,480
we can

868
00:40:12,480 --> 00:40:14,960
modify the function

869
00:40:14,960 --> 00:40:18,400
finder in memory to hijack

870
00:40:18,400 --> 00:40:21,599
the control flow use rop

871
00:40:21,599 --> 00:40:23,040
technique is

872
00:40:23,040 --> 00:40:27,839
to complete the code execution

873
00:40:29,119 --> 00:40:32,720
okay that is a demonstration

874
00:40:32,720 --> 00:40:34,160
this is a

875
00:40:34,160 --> 00:40:35,119
simple

876
00:40:35,119 --> 00:40:39,520
demo for the rc attack it opens the

877
00:40:39,520 --> 00:40:43,599
enter in internal vxworks wdb debugging

878
00:40:43,599 --> 00:40:49,359
interface with a part 1 7 1 h 5 on the

879
00:40:49,359 --> 00:40:52,319
im file ht

880
00:40:52,319 --> 00:40:55,440
and show in the above video

881
00:40:55,440 --> 00:40:58,079
message

882
00:41:02,660 --> 00:41:04,800
[Music]

883
00:41:04,800 --> 00:41:08,960
first use an app to sign the debugging

884
00:41:08,960 --> 00:41:10,400
port

885
00:41:10,400 --> 00:41:14,560
which changed out to be closed

886
00:41:15,680 --> 00:41:18,560
yeah you can check it

887
00:41:18,560 --> 00:41:22,400
the port is closed stitch

888
00:41:22,400 --> 00:41:25,119
and next

889
00:41:26,720 --> 00:41:30,240
long the script

890
00:41:30,240 --> 00:41:34,160
when this pulses is running use a map to

891
00:41:34,160 --> 00:41:35,520
scans

892
00:41:35,520 --> 00:41:36,640
and f1

893
00:41:36,640 --> 00:41:40,078
and file 80 again

894
00:41:44,000 --> 00:41:44,800
okay

895
00:41:44,800 --> 00:41:47,920
you can see and this time the point

896
00:41:47,920 --> 00:41:50,160
y7y85

897
00:41:50,160 --> 00:41:51,920
is turned on

898
00:41:51,920 --> 00:41:56,000
it's the open stage

899
00:41:57,920 --> 00:41:59,599
okay

900
00:41:59,599 --> 00:42:00,480
now

901
00:42:00,480 --> 00:42:03,680
that we could see a potential attache of

902
00:42:03,680 --> 00:42:05,119
this kite

903
00:42:05,119 --> 00:42:06,560
how can we

904
00:42:06,560 --> 00:42:11,119
prevent it from happening we will

905
00:42:11,119 --> 00:42:12,560
reveal a

906
00:42:12,560 --> 00:42:14,000
average

907
00:42:14,000 --> 00:42:16,160
elaborate we will elaborate from the

908
00:42:16,160 --> 00:42:19,200
following expense

909
00:42:19,200 --> 00:42:20,960
first

910
00:42:20,960 --> 00:42:23,359
we should be able to

911
00:42:23,359 --> 00:42:26,560
identify the critical function code

912
00:42:26,560 --> 00:42:32,640
involved in dangerous operations and and

913
00:42:32,640 --> 00:42:36,720
proper donors in our protection devices

914
00:42:36,720 --> 00:42:40,640
for example and rulers to identity find

915
00:42:40,640 --> 00:42:44,079
cheap plc reservation function called

916
00:42:44,079 --> 00:42:46,640
zero extreme in the

917
00:42:46,640 --> 00:42:49,040
industrial failure

918
00:42:49,040 --> 00:42:50,079
once

919
00:42:50,079 --> 00:42:53,040
such packets occurred during normal

920
00:42:53,040 --> 00:42:54,640
manufacturing

921
00:42:54,640 --> 00:42:57,920
the traffic should be blocked as a the

922
00:42:57,920 --> 00:43:01,520
blocked immediately

923
00:43:02,240 --> 00:43:04,800
second we should also focus on the

924
00:43:04,800 --> 00:43:08,640
management of our ics environment

925
00:43:08,640 --> 00:43:10,880
to begin with

926
00:43:10,880 --> 00:43:13,280
all the poc

927
00:43:13,280 --> 00:43:16,079
managing the personnel should be

928
00:43:16,079 --> 00:43:19,200
reliable in kiso and

929
00:43:19,200 --> 00:43:23,280
insider attack being performed directly

930
00:43:23,280 --> 00:43:25,720
to their rolling plc

931
00:43:25,720 --> 00:43:27,280
[Music]

932
00:43:27,280 --> 00:43:30,319
a notion should be performed over all

933
00:43:30,319 --> 00:43:33,599
operations against the ics system

934
00:43:33,599 --> 00:43:36,319
to prevent

935
00:43:36,319 --> 00:43:38,960
malicious

936
00:43:38,960 --> 00:43:42,240
managing operations as well as all

937
00:43:42,240 --> 00:43:43,359
traffic

938
00:43:43,359 --> 00:43:46,640
involving critical device so that

939
00:43:46,640 --> 00:43:49,200
traditional potential

940
00:43:49,200 --> 00:43:53,119
rich could be identified

941
00:43:53,119 --> 00:43:56,480
a access control list can also help to

942
00:43:56,480 --> 00:44:00,880
reject access from unjusted eyepiece

943
00:44:00,880 --> 00:44:02,480
this function

944
00:44:02,480 --> 00:44:04,640
is supported by

945
00:44:04,640 --> 00:44:06,000
and file

946
00:44:06,000 --> 00:44:07,440
hd

947
00:44:07,440 --> 00:44:08,480
you can

948
00:44:08,480 --> 00:44:09,920
you can

949
00:44:09,920 --> 00:44:11,680
over age and

950
00:44:11,680 --> 00:44:14,319
enable it

951
00:44:14,960 --> 00:44:16,720
third

952
00:44:16,720 --> 00:44:21,200
for ics manufacturing not only schneider

953
00:44:21,200 --> 00:44:24,720
and siemens many priority

954
00:44:24,720 --> 00:44:28,319
protocols are really weak with such

955
00:44:28,319 --> 00:44:31,520
simple authorization algorithm

956
00:44:31,520 --> 00:44:33,319
therefore

957
00:44:33,319 --> 00:44:36,240
manufacturing should pay attention to

958
00:44:36,240 --> 00:44:38,800
the following it's backed

959
00:44:38,800 --> 00:44:42,640
to suggest to stress in the controller

960
00:44:42,640 --> 00:44:44,480
security

961
00:44:44,480 --> 00:44:46,079
there is

962
00:44:46,079 --> 00:44:47,680
some

963
00:44:47,680 --> 00:44:51,118
suggestion of

964
00:44:54,000 --> 00:44:55,680
we can see it

965
00:44:55,680 --> 00:44:59,040
the first and uh natural authorization

966
00:44:59,040 --> 00:45:01,440
mechanism for priority

967
00:45:01,440 --> 00:45:03,760
projects

968
00:45:03,760 --> 00:45:06,880
second use chance in corruption

969
00:45:06,880 --> 00:45:08,640
algorithm

970
00:45:08,640 --> 00:45:11,839
third avoid information

971
00:45:11,839 --> 00:45:12,800
this

972
00:45:12,800 --> 00:45:15,599
disclosure

973
00:45:15,839 --> 00:45:18,720
false password authorization

974
00:45:18,720 --> 00:45:21,520
should be performed that should be perf

975
00:45:21,520 --> 00:45:22,720
should

976
00:45:22,720 --> 00:45:27,200
be performed in plc or gac

977
00:45:27,200 --> 00:45:30,160
this sensor chief information should be

978
00:45:30,160 --> 00:45:34,720
stored in a trust zoom where it is

979
00:45:34,720 --> 00:45:37,359
reinforced

980
00:45:37,920 --> 00:45:39,119
okay

981
00:45:39,119 --> 00:45:40,800
actually

982
00:45:40,800 --> 00:45:45,040
there is no stat standard for plc coding

983
00:45:45,040 --> 00:45:48,720
vvk and sarah leads the plc security

984
00:45:48,720 --> 00:45:50,160
chart chantey

985
00:45:50,160 --> 00:45:52,079
list project

986
00:45:52,079 --> 00:45:53,839
and released

987
00:45:53,839 --> 00:45:58,160
the fourth warning on sure

988
00:45:59,040 --> 00:46:02,960
15 it's the pleasure that i was invited

989
00:46:02,960 --> 00:46:05,760
to join the core group of this

990
00:46:05,760 --> 00:46:08,160
organization through this

991
00:46:08,160 --> 00:46:11,119
to discuss project on plc security

992
00:46:11,119 --> 00:46:12,400
coding

993
00:46:12,400 --> 00:46:15,599
will purely security coding can't solve

994
00:46:15,599 --> 00:46:18,560
all the network attacks

995
00:46:18,560 --> 00:46:20,079
it declines

996
00:46:20,079 --> 00:46:24,520
it can so many parameters caused by

997
00:46:24,520 --> 00:46:26,720
misconfiguration or

998
00:46:26,720 --> 00:46:28,480
a secret

999
00:46:28,480 --> 00:46:30,560
heading of users

1000
00:46:30,560 --> 00:46:33,040
inputs and so on

1001
00:46:33,040 --> 00:46:34,880
and the present

1002
00:46:34,880 --> 00:46:37,119
this project still

1003
00:46:37,119 --> 00:46:39,680
has a lot of work to do

1004
00:46:39,680 --> 00:46:41,440
including store

1005
00:46:41,440 --> 00:46:45,440
including top 20 secure plc environment

1006
00:46:45,440 --> 00:46:46,410
parties

1007
00:46:46,410 --> 00:46:47,520
[Music]

1008
00:46:47,520 --> 00:46:51,680
and the purchase security child pool 20

1009
00:46:51,680 --> 00:46:52,720
list

1010
00:46:52,720 --> 00:46:54,959
with

1011
00:46:55,200 --> 00:46:56,400
the worry

1012
00:46:56,400 --> 00:46:58,640
should should be

1013
00:46:58,640 --> 00:47:01,279
upgraded

1014
00:47:01,839 --> 00:47:03,040
anymore

1015
00:47:03,040 --> 00:47:05,760
who is interested in the topic is

1016
00:47:05,760 --> 00:47:07,040
welcomed

1017
00:47:07,040 --> 00:47:11,839
and we looked forward to your drawing

1018
00:47:12,400 --> 00:47:15,680
welcome to join us

1019
00:47:16,800 --> 00:47:20,559
okay that's all for today's presentation

1020
00:47:20,559 --> 00:47:22,480
thank you

1021
00:47:22,480 --> 00:47:24,400
all for joining the talk

1022
00:47:24,400 --> 00:47:27,119
if you have any question please feel

1023
00:47:27,119 --> 00:47:32,839
free to contact me thank you bye

