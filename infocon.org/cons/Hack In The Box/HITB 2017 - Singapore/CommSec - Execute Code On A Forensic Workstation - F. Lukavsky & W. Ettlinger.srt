1
00:00:07,580 --> 00:00:15,490
hello everyone can everyone<font color="#CCCCCC"> hear me</font><font color="#E5E5E5"> fine</font>

2
00:00:12,040 --> 00:00:17,830
<font color="#E5E5E5">hope you hope you had a pleasant</font>

3
00:00:15,490 --> 00:00:20,230
break<font color="#E5E5E5"> and I hope you didn't</font><font color="#CCCCCC"> forget to</font>

4
00:00:17,830 --> 00:00:27,729
grab a coffee afterwards<font color="#CCCCCC"> I don't want</font>

5
00:00:20,230 --> 00:00:31,090
you falling asleep yeah we we will

6
00:00:27,730 --> 00:00:34,590
<font color="#E5E5E5">present today about forensics how to</font>

7
00:00:31,090 --> 00:00:40,410
execute<font color="#E5E5E5"> code on a forensics workstation</font>

8
00:00:34,590 --> 00:00:43,839
<font color="#E5E5E5">just to run you through our</font><font color="#CCCCCC"> agenda today</font>

9
00:00:40,410 --> 00:00:46,959
first<font color="#E5E5E5"> a short introduction so you know</font>

10
00:00:43,839 --> 00:00:52,049
<font color="#E5E5E5">who is on stage who is joining us via</font>

11
00:00:46,960 --> 00:00:57,309
Skype<font color="#CCCCCC"> we will will talk about</font>

12
00:00:52,049 --> 00:01:01,510
<font color="#E5E5E5">vulnerability we found</font><font color="#CCCCCC"> a forensic in</font>

13
00:00:57,309 --> 00:01:05,349
case forensic imager<font color="#E5E5E5"> so popular forensic</font>

14
00:01:01,510 --> 00:01:08,380
product by<font color="#E5E5E5"> guidance</font><font color="#CCCCCC"> software we will</font>

15
00:01:05,349 --> 00:01:11,860
<font color="#CCCCCC">briefly discuss on the fuzzing approach</font>

16
00:01:08,380 --> 00:01:16,449
that we chose<font color="#E5E5E5"> in order to identify the</font>

17
00:01:11,860 --> 00:01:19,170
vulnerability<font color="#E5E5E5"> shed some details</font><font color="#CCCCCC"> on some</font>

18
00:01:16,450 --> 00:01:22,960
backgrounds on the<font color="#E5E5E5"> vulnerability</font>

19
00:01:19,170 --> 00:01:26,679
yeah and how to how we exploited<font color="#E5E5E5"> the</font>

20
00:01:22,960 --> 00:01:30,609
vulnerability<font color="#CCCCCC"> we also prepared a live</font>

21
00:01:26,679 --> 00:01:33,460
demo<font color="#CCCCCC"> so if</font><font color="#E5E5E5"> everything goes well</font><font color="#CCCCCC"> I can</font>

22
00:01:30,609 --> 00:01:36,399
show you<font color="#CCCCCC"> live and on stage how to</font>

23
00:01:33,460 --> 00:01:41,579
exploit this vulnerability<font color="#E5E5E5"> and encase</font>

24
00:01:36,399 --> 00:01:44,770
imager and then we will close<font color="#E5E5E5"> off with</font>

25
00:01:41,579 --> 00:01:49,949
<font color="#E5E5E5">yeah with an overview of the the window</font>

26
00:01:44,770 --> 00:01:49,949
communication and some general thoughts

27
00:01:50,130 --> 00:02:00,969
yeah my name<font color="#CCCCCC"> florian</font><font color="#E5E5E5"> Bukowski</font><font color="#CCCCCC"> I</font><font color="#E5E5E5"> work</font>

28
00:01:57,189 --> 00:02:03,669
locally in Singapore as<font color="#E5E5E5"> directive</font>

29
00:02:00,969 --> 00:02:05,490
director for<font color="#E5E5E5"> a second salt bringing</font>

30
00:02:03,670 --> 00:02:10,179
second<font color="#CCCCCC"> self</font><font color="#E5E5E5"> service to</font><font color="#CCCCCC"> our APEC</font>

31
00:02:05,490 --> 00:02:14,230
customers<font color="#E5E5E5"> with me</font><font color="#CCCCCC"> wire Skype is Wolfgang</font>

32
00:02:10,179 --> 00:02:19,630
who discovered the vulnerability<font color="#E5E5E5"> and in</font>

33
00:02:14,230 --> 00:02:23,179
order to yeah<font color="#E5E5E5"> lower our co2 footprint we</font>

34
00:02:19,630 --> 00:02:26,150
decided to bring him in via Skype<font color="#E5E5E5"> and</font>

35
00:02:23,180 --> 00:02:32,540
not to fly him over<font color="#E5E5E5"> across</font><font color="#CCCCCC"> the globe</font><font color="#E5E5E5"> so</font>

36
00:02:26,150 --> 00:02:34,519
Wolfgang<font color="#CCCCCC"> say hello</font><font color="#E5E5E5"> to the audience</font><font color="#CCCCCC"> late</font>

37
00:02:32,540 --> 00:02:37,760
later<font color="#E5E5E5"> later on there will be sound</font>

38
00:02:34,519 --> 00:02:40,870
- yeah Wolfgang<font color="#E5E5E5"> he is working as a</font>

39
00:02:37,760 --> 00:02:44,750
security<font color="#CCCCCC"> consultant security researcher</font>

40
00:02:40,870 --> 00:02:48,470
at second<font color="#CCCCCC"> self</font><font color="#E5E5E5"> so for the past four</font>

41
00:02:44,750 --> 00:02:53,299
years<font color="#CCCCCC"> he</font><font color="#E5E5E5"> has found many vulnerabilities</font>

42
00:02:48,470 --> 00:02:57,519
<font color="#E5E5E5">in</font><font color="#CCCCCC"> enterprise products in security</font>

43
00:02:53,299 --> 00:03:01,700
<font color="#E5E5E5">products lately</font><font color="#CCCCCC"> his security</font><font color="#E5E5E5"> research is</font>

44
00:02:57,519 --> 00:03:04,870
focusing on<font color="#E5E5E5"> each</font><font color="#CCCCCC"> government systems and</font>

45
00:03:01,700 --> 00:03:07,909
each government communication protocols

46
00:03:04,870 --> 00:03:09,859
<font color="#E5E5E5">yes I'm looking forward to two more</font>

47
00:03:07,909 --> 00:03:13,548
vulnerabilities and more research from

48
00:03:09,859 --> 00:03:18,590
him so very warm welcome<font color="#E5E5E5"> Wolfgang happy</font>

49
00:03:13,549 --> 00:03:22,549
to have you here<font color="#CCCCCC"> yeah but why do we</font>

50
00:03:18,590 --> 00:03:26,689
<font color="#CCCCCC">actually do</font><font color="#E5E5E5"> this kind of</font><font color="#CCCCCC"> research so</font>

51
00:03:22,549 --> 00:03:30,440
little<font color="#E5E5E5"> backstory because before we get</font>

52
00:03:26,689 --> 00:03:32,418
into the the<font color="#E5E5E5"> juicy parts so we found</font>

53
00:03:30,440 --> 00:03:35,870
<font color="#CCCCCC">that a second</font><font color="#E5E5E5"> salt vulnerability lab</font>

54
00:03:32,419 --> 00:03:39,889
where we've bundled<font color="#E5E5E5"> our research where</font>

55
00:03:35,870 --> 00:03:43,639
we<font color="#E5E5E5"> do white at security research since</font>

56
00:03:39,889 --> 00:03:47,120
its foundation<font color="#E5E5E5"> in 2003</font><font color="#CCCCCC"> we have published</font>

57
00:03:43,639 --> 00:03:50,419
more<font color="#CCCCCC"> than 200 burner abilities there</font><font color="#E5E5E5"> 200</font>

58
00:03:47,120 --> 00:03:53,090
advisories there so if you're<font color="#E5E5E5"> looking</font>

59
00:03:50,419 --> 00:03:55,699
<font color="#CCCCCC">for some some interesting stuff check it</font>

60
00:03:53,090 --> 00:03:57,889
out yeah

61
00:03:55,699 --> 00:04:02,540
research fields that we focus on at the

62
00:03:57,889 --> 00:04:05,750
moment<font color="#E5E5E5"> on the one side IOT hardware</font>

63
00:04:02,540 --> 00:04:09,319
hacking<font color="#E5E5E5"> strong focus also</font><font color="#CCCCCC"> in the past</font>

64
00:04:05,750 --> 00:04:12,440
years on on security products yeah we

65
00:04:09,319 --> 00:04:15,409
feel that if<font color="#CCCCCC"> you put in security</font>

66
00:04:12,440 --> 00:04:17,810
products in your network you yeah you

67
00:04:15,409 --> 00:04:20,570
want to<font color="#E5E5E5"> add security and not actually</font>

68
00:04:17,810 --> 00:04:24,740
increase the<font color="#CCCCCC"> risk and increase the</font>

69
00:04:20,570 --> 00:04:27,909
attack<font color="#E5E5E5"> surface to your environment</font><font color="#CCCCCC"> and</font>

70
00:04:24,740 --> 00:04:31,960
yeah<font color="#CCCCCC"> also one one of the latest</font>

71
00:04:27,910 --> 00:04:36,550
is<font color="#CCCCCC"> eat</font><font color="#E5E5E5"> government and why are we</font><font color="#CCCCCC"> doing</font>

72
00:04:31,960 --> 00:04:39,299
<font color="#CCCCCC">it now we</font><font color="#E5E5E5"> are</font><font color="#CCCCCC"> we</font><font color="#E5E5E5"> are also ideal list so</font>

73
00:04:36,550 --> 00:04:43,780
we want to make the world a safer<font color="#E5E5E5"> place</font>

74
00:04:39,300 --> 00:04:45,730
<font color="#CCCCCC">we also look at our own tools</font><font color="#E5E5E5"> at our own</font>

75
00:04:43,780 --> 00:04:49,929
<font color="#E5E5E5">software that we are using to</font><font color="#CCCCCC"> make sure</font>

76
00:04:45,730 --> 00:04:52,720
that we are using<font color="#CCCCCC"> secure product so in</font>

77
00:04:49,930 --> 00:04:56,020
case forensic imager is is one<font color="#E5E5E5"> of the</font>

78
00:04:52,720 --> 00:04:59,470
tools<font color="#E5E5E5"> that we occasionally use and of</font>

79
00:04:56,020 --> 00:05:04,150
course we yeah<font color="#E5E5E5"> we also want to make our</font>

80
00:04:59,470 --> 00:05:09,100
<font color="#E5E5E5">clients environments more secure</font><font color="#CCCCCC"> so with</font>

81
00:05:04,150 --> 00:05:18,789
with<font color="#CCCCCC"> that intro</font><font color="#E5E5E5"> being given I will hand</font>

82
00:05:09,100 --> 00:05:24,250
over to to my colleague<font color="#E5E5E5"> Wolfgang hello</font>

83
00:05:18,790 --> 00:05:28,450
from Vienna<font color="#CCCCCC"> I am as Florin</font><font color="#E5E5E5"> already said</font>

84
00:05:24,250 --> 00:05:31,030
security<font color="#E5E5E5"> consultant here can you hear me</font>

85
00:05:28,450 --> 00:05:36,880
we can<font color="#E5E5E5"> hear you loud</font><font color="#CCCCCC"> and fine</font><font color="#E5E5E5"> just</font>

86
00:05:31,030 --> 00:05:40,630
<font color="#E5E5E5">continue</font><font color="#CCCCCC"> ok</font><font color="#E5E5E5"> great</font><font color="#CCCCCC"> ok and I will give a</font>

87
00:05:36,880 --> 00:05:46,890
short introduction on<font color="#E5E5E5"> the</font><font color="#CCCCCC"> incas forensic</font>

88
00:05:40,630 --> 00:05:46,890
imager and the vulnerabilities we found

89
00:05:47,550 --> 00:06:00,160
yeah<font color="#CCCCCC"> so forensic in case</font><font color="#E5E5E5"> forensic imager</font>

90
00:05:50,560 --> 00:06:04,600
is a tool that that allows<font color="#CCCCCC"> incas allows</font>

91
00:06:00,160 --> 00:06:07,330
forensic investigators to gather

92
00:06:04,600 --> 00:06:12,100
evidence from hard disks<font color="#E5E5E5"> flash drives</font>

93
00:06:07,330 --> 00:06:14,440
<font color="#E5E5E5">and so on and also from physical memory</font>

94
00:06:12,100 --> 00:06:18,310
the idea behind in case forensic imager

95
00:06:14,440 --> 00:06:20,140
<font color="#CCCCCC">is that it's a tool that</font><font color="#E5E5E5"> can be</font><font color="#CCCCCC"> used</font>

96
00:06:18,310 --> 00:06:26,800
when<font color="#CCCCCC"> the full</font><font color="#E5E5E5"> commercial</font><font color="#CCCCCC"> in</font><font color="#E5E5E5"> case</font>

97
00:06:20,140 --> 00:06:29,200
forensic suit is not available<font color="#E5E5E5"> so you</font>

98
00:06:26,800 --> 00:06:31,810
<font color="#CCCCCC">can use in case forensic imager to</font>

99
00:06:29,200 --> 00:06:34,780
create an image<font color="#E5E5E5"> that</font><font color="#CCCCCC"> can later be</font>

100
00:06:31,810 --> 00:06:39,460
analyzed by<font color="#E5E5E5"> the</font><font color="#CCCCCC"> folk</font><font color="#E5E5E5"> in case forensics</font>

101
00:06:34,780 --> 00:06:40,888
<font color="#CCCCCC">you apparently in case for it in case</font>

102
00:06:39,460 --> 00:06:43,109
forensic imager<font color="#E5E5E5"> is</font>

103
00:06:40,889 --> 00:06:46,349
a slimmed down version of<font color="#CCCCCC"> the full in</font>

104
00:06:43,110 --> 00:06:48,870
case<font color="#E5E5E5"> forensic suit so a lot of code is</font>

105
00:06:46,349 --> 00:06:51,479
shared<font color="#E5E5E5"> between those two products and</font>

106
00:06:48,870 --> 00:06:58,169
<font color="#E5E5E5">also some vulnerabilities are shared</font>

107
00:06:51,479 --> 00:07:00,930
between those two products to our<font color="#CCCCCC"> facing</font>

108
00:06:58,169 --> 00:07:03,900
approach<font color="#CCCCCC"> in order to find</font>

109
00:07:00,930 --> 00:07:07,860
vulnerabilities<font color="#E5E5E5"> in this tool that</font><font color="#CCCCCC"> we use</font>

110
00:07:03,900 --> 00:07:12,289
ourselves<font color="#CCCCCC"> we wrote a custom</font><font color="#E5E5E5"> fossa in</font>

111
00:07:07,860 --> 00:07:16,409
<font color="#CCCCCC">Python and for this we implemented</font>

112
00:07:12,289 --> 00:07:20,430
several<font color="#E5E5E5"> disk formats several generators</font>

113
00:07:16,409 --> 00:07:25,949
for<font color="#E5E5E5"> disk formats</font><font color="#CCCCCC"> for example for 2 l vm</font>

114
00:07:20,430 --> 00:07:28,949
x 3<font color="#E5E5E5"> MBR GPT and so on and then we wrote</font>

115
00:07:25,949 --> 00:07:33,090
a simple<font color="#CCCCCC"> passing tool that simply</font>

116
00:07:28,949 --> 00:07:36,689
modifies<font color="#CCCCCC"> some well layers</font><font color="#E5E5E5"> in the header</font>

117
00:07:33,090 --> 00:07:39,659
fields for example<font color="#CCCCCC"> it replaces or</font>

118
00:07:36,689 --> 00:07:45,289
prefixes and suffixes<font color="#CCCCCC"> strings with long</font>

119
00:07:39,659 --> 00:07:48,900
strings or<font color="#E5E5E5"> or format strings it replaces</font>

120
00:07:45,289 --> 00:07:54,839
integers with certain<font color="#E5E5E5"> edge case integer</font>

121
00:07:48,900 --> 00:07:59,068
values<font color="#E5E5E5"> and so</font><font color="#CCCCCC"> on</font><font color="#E5E5E5"> as a result we had a</font>

122
00:07:54,839 --> 00:08:02,669
large set of<font color="#E5E5E5"> mutated disk images of all</font>

123
00:07:59,069 --> 00:08:06,479
different formats<font color="#CCCCCC"> disk formats that we</font>

124
00:08:02,669 --> 00:08:11,159
<font color="#CCCCCC">can could use for passing</font><font color="#E5E5E5"> the</font><font color="#CCCCCC"> incas</font>

125
00:08:06,479 --> 00:08:14,479
forensic imager to here you can see an

126
00:08:11,159 --> 00:08:19,110
<font color="#E5E5E5">example of such a fussing implementation</font>

127
00:08:14,479 --> 00:08:22,289
<font color="#E5E5E5">in this case this</font><font color="#CCCCCC"> is for MBR partition</font>

128
00:08:19,110 --> 00:08:26,909
tables so here in the constructor you

129
00:08:22,289 --> 00:08:31,159
can see that we set default values<font color="#E5E5E5"> a</font>

130
00:08:26,909 --> 00:08:35,130
saint's fault values that that<font color="#CCCCCC"> are used</font>

131
00:08:31,159 --> 00:08:40,110
that are<font color="#CCCCCC"> used in actual real MBR</font>

132
00:08:35,130 --> 00:08:43,649
partition tables and generate method you

133
00:08:40,110 --> 00:08:45,959
can see here is used<font color="#E5E5E5"> to generate a</font>

134
00:08:43,649 --> 00:08:51,779
header based on the values that are

135
00:08:45,959 --> 00:08:54,599
specified<font color="#CCCCCC"> here</font><font color="#E5E5E5"> our</font><font color="#CCCCCC"> FASFA</font><font color="#E5E5E5"> simply iterates</font>

136
00:08:51,779 --> 00:08:57,360
over all the way

137
00:08:54,600 --> 00:09:01,230
that were<font color="#CCCCCC"> specified here</font><font color="#E5E5E5"> and replaces</font>

138
00:08:57,360 --> 00:09:05,840
them<font color="#CCCCCC"> with aforementioned manipulated</font>

139
00:09:01,230 --> 00:09:09,710
values<font color="#E5E5E5"> it then for each iteration it</font>

140
00:09:05,840 --> 00:09:13,740
calls the generate method to<font color="#CCCCCC"> generate</font>

141
00:09:09,710 --> 00:09:21,450
one one disk image<font color="#E5E5E5"> for this specific</font>

142
00:09:13,740 --> 00:09:24,720
format yeah<font color="#E5E5E5"> now that</font><font color="#CCCCCC"> we had a set of a</font>

143
00:09:21,450 --> 00:09:27,600
lot of manipulate disk images<font color="#E5E5E5"> we needed</font>

144
00:09:24,720 --> 00:09:30,780
to<font color="#E5E5E5"> find a way to try these disk images</font>

145
00:09:27,600 --> 00:09:33,690
<font color="#E5E5E5">in case forensic imager and see whether</font>

146
00:09:30,780 --> 00:09:37,410
<font color="#E5E5E5">in case forensic emitter crashes while</font>

147
00:09:33,690 --> 00:09:41,940
trying<font color="#CCCCCC"> to pass these images for</font><font color="#E5E5E5"> that we</font>

148
00:09:37,410 --> 00:09:46,199
used<font color="#CCCCCC"> simple UI automation script and we</font>

149
00:09:41,940 --> 00:09:48,600
used auto hotkey for<font color="#E5E5E5"> this so on the</font>

150
00:09:46,200 --> 00:09:52,310
right you<font color="#CCCCCC"> can see simple</font><font color="#E5E5E5"> Python</font><font color="#CCCCCC"> script</font>

151
00:09:48,600 --> 00:09:56,090
that<font color="#E5E5E5"> iterates over all the images and</font>

152
00:09:52,310 --> 00:10:00,180
calls an autohotkey script<font color="#E5E5E5"> that then</font>

153
00:09:56,090 --> 00:10:05,400
starts in case<font color="#CCCCCC"> forensic imager and loads</font>

154
00:10:00,180 --> 00:10:08,310
this image and checks if in case

155
00:10:05,400 --> 00:10:11,699
<font color="#E5E5E5">forensic imager crashes while trying to</font>

156
00:10:08,310 --> 00:10:15,000
pass<font color="#CCCCCC"> parse this the problem of course</font>

157
00:10:11,700 --> 00:10:16,830
<font color="#E5E5E5">with this approach</font><font color="#CCCCCC"> is that it</font><font color="#E5E5E5"> takes</font>

158
00:10:15,000 --> 00:10:19,740
<font color="#E5E5E5">quite a long time</font><font color="#CCCCCC"> to try</font><font color="#E5E5E5"> all the disk</font>

159
00:10:16,830 --> 00:10:27,420
images<font color="#E5E5E5"> so there might be still room for</font>

160
00:10:19,740 --> 00:10:30,600
improvement<font color="#CCCCCC"> with</font><font color="#E5E5E5"> this approach so after</font>

161
00:10:27,420 --> 00:10:33,449
we have sorted through<font color="#CCCCCC"> all the results</font>

162
00:10:30,600 --> 00:10:35,940
from the fossa<font color="#E5E5E5"> and after removing all</font>

163
00:10:33,450 --> 00:10:39,780
<font color="#CCCCCC">the duplicates we were left with a</font>

164
00:10:35,940 --> 00:10:42,660
<font color="#E5E5E5">couple of vulnerabilities</font><font color="#CCCCCC"> probably the</font>

165
00:10:39,780 --> 00:10:44,550
least<font color="#CCCCCC"> interesting vulnerabilities are</font>

166
00:10:42,660 --> 00:10:48,510
several delight denial of service

167
00:10:44,550 --> 00:10:53,459
vulnerabilities in the<font color="#CCCCCC"> pauses for</font><font color="#E5E5E5"> the</font>

168
00:10:48,510 --> 00:10:58,140
extreme as<font color="#E5E5E5"> ofs as ifs</font><font color="#CCCCCC"> GPG</font><font color="#E5E5E5"> file system</font>

169
00:10:53,460 --> 00:11:01,620
passes<font color="#E5E5E5"> an attacker code or a suspect</font>

170
00:10:58,140 --> 00:11:04,140
<font color="#E5E5E5">could potentially manipulate this image</font>

171
00:11:01,620 --> 00:11:06,740
in a way<font color="#E5E5E5"> that when a forensic</font>

172
00:11:04,140 --> 00:11:10,250
<font color="#E5E5E5">investigator tries to pass one of</font>

173
00:11:06,740 --> 00:11:15,800
one of these<font color="#E5E5E5"> images that</font><font color="#CCCCCC"> in</font><font color="#E5E5E5"> case</font>

174
00:11:10,250 --> 00:11:18,170
forensic image<font color="#E5E5E5"> simply fails</font><font color="#CCCCCC"> the next and</font>

175
00:11:15,800 --> 00:11:22,270
more interesting vulnerability was a<font color="#CCCCCC"> he</font>

176
00:11:18,170 --> 00:11:26,449
<font color="#E5E5E5">paste buffer</font><font color="#CCCCCC"> of rope in</font><font color="#E5E5E5"> the ICF Esparza</font>

177
00:11:22,270 --> 00:11:29,590
<font color="#CCCCCC">this might be exploitable</font><font color="#E5E5E5"> however he</font>

178
00:11:26,450 --> 00:11:32,000
<font color="#E5E5E5">believes that it's not trivial to write</font>

179
00:11:29,590 --> 00:11:37,880
reliable exploits that<font color="#E5E5E5"> works on all</font>

180
00:11:32,000 --> 00:11:42,590
systems<font color="#CCCCCC"> we also found a stack based off</font>

181
00:11:37,880 --> 00:11:45,620
overflow in the<font color="#CCCCCC"> LVM parser and this is</font>

182
00:11:42,590 --> 00:11:47,990
<font color="#E5E5E5">definitely exploitable and can be</font>

183
00:11:45,620 --> 00:11:52,880
exploited<font color="#CCCCCC"> to gain code execution</font>

184
00:11:47,990 --> 00:11:56,180
I will<font color="#CCCCCC"> the following</font><font color="#E5E5E5"> slides</font>

185
00:11:52,880 --> 00:12:00,170
explain<font color="#CCCCCC"> the vulnerability</font><font color="#E5E5E5"> and how we</font>

186
00:11:56,180 --> 00:12:07,040
were able<font color="#E5E5E5"> to manage</font><font color="#CCCCCC"> to write exploit the</font>

187
00:12:00,170 --> 00:12:12,890
works for for all systems so a quick

188
00:12:07,040 --> 00:12:16,540
introduction<font color="#E5E5E5"> to the</font><font color="#CCCCCC"> LVM</font><font color="#E5E5E5"> to format</font><font color="#CCCCCC"> FM 2</font>

189
00:12:12,890 --> 00:12:19,840
is if you're<font color="#E5E5E5"> not familiar with</font><font color="#CCCCCC"> it is a</font>

190
00:12:16,540 --> 00:12:24,550
simple abstraction layer that abstracts

191
00:12:19,840 --> 00:12:27,640
physical volumes<font color="#E5E5E5"> into volume groups and</font>

192
00:12:24,550 --> 00:12:31,990
<font color="#E5E5E5">what those volume troops can then spawn</font>

193
00:12:27,640 --> 00:12:34,880
logical volumes<font color="#E5E5E5"> so the idea is that</font>

194
00:12:31,990 --> 00:12:37,430
physical hard drives are abstracted<font color="#CCCCCC"> into</font>

195
00:12:34,880 --> 00:12:40,189
logical volumes<font color="#E5E5E5"> and the file system is</font>

196
00:12:37,430 --> 00:12:42,319
then stored on the logic<font color="#CCCCCC"> of oriole</font>

197
00:12:40,190 --> 00:12:49,610
volumes instead of the physical hard

198
00:12:42,320 --> 00:12:52,510
disks<font color="#CCCCCC"> if there is a file or a string</font>

199
00:12:49,610 --> 00:12:55,580
called metadata that<font color="#E5E5E5"> is stored in</font><font color="#CCCCCC"> the</font>

200
00:12:52,510 --> 00:13:01,400
<font color="#CCCCCC">metadata header of the physical</font><font color="#E5E5E5"> volume</font>

201
00:12:55,580 --> 00:13:04,940
that this metadata string<font color="#E5E5E5"> defines all</font>

202
00:13:01,400 --> 00:13:08,590
the physical defines all the volume

203
00:13:04,940 --> 00:13:12,860
groups and the logical volumes in this

204
00:13:08,590 --> 00:13:18,230
<font color="#E5E5E5">physical volume here you can see an</font>

205
00:13:12,860 --> 00:13:20,360
example<font color="#E5E5E5"> of metadata file so there is a</font>

206
00:13:18,230 --> 00:13:23,300
volume group called test volume

207
00:13:20,360 --> 00:13:25,579
group and in this test volume group

208
00:13:23,300 --> 00:13:32,089
there are<font color="#E5E5E5"> there's one logical volume</font>

209
00:13:25,579 --> 00:13:36,769
called test<font color="#E5E5E5"> LV so</font><font color="#CCCCCC"> the</font><font color="#E5E5E5"> vulnerability that</font>

210
00:13:32,089 --> 00:13:44,089
<font color="#CCCCCC">we found was in</font><font color="#E5E5E5"> the parser</font><font color="#CCCCCC"> for exactly</font>

211
00:13:36,769 --> 00:13:49,730
<font color="#E5E5E5">this metadata descriptor here you can</font>

212
00:13:44,089 --> 00:13:56,959
see the<font color="#CCCCCC"> sort of code for the function</font>

213
00:13:49,730 --> 00:14:00,700
that parses this metadata<font color="#E5E5E5"> string</font><font color="#CCCCCC"> the</font>

214
00:13:56,959 --> 00:14:04,579
part<font color="#E5E5E5"> that is vulnerable</font><font color="#CCCCCC"> is the part that</font>

215
00:14:00,700 --> 00:14:08,839
gets the volume<font color="#E5E5E5"> group name from this</font>

216
00:14:04,579 --> 00:14:11,540
metadata<font color="#E5E5E5"> string so in</font><font color="#CCCCCC"> order to get the</font>

217
00:14:08,839 --> 00:14:16,339
volume<font color="#CCCCCC"> group name</font><font color="#E5E5E5"> you can see on the</font>

218
00:14:11,540 --> 00:14:20,410
right the the function<font color="#CCCCCC"> first has to</font><font color="#E5E5E5"> get</font>

219
00:14:16,339 --> 00:14:25,000
the first line of the<font color="#E5E5E5"> metadata file and</font>

220
00:14:20,410 --> 00:14:27,290
then look<font color="#CCCCCC"> for the the</font><font color="#E5E5E5"> curly bracket and</font>

221
00:14:25,000 --> 00:14:30,079
everything<font color="#CCCCCC"> before the curly bracket is</font>

222
00:14:27,290 --> 00:14:34,849
then considered<font color="#E5E5E5"> the name of the volume</font>

223
00:14:30,079 --> 00:14:38,029
<font color="#E5E5E5">group so here you can see in the product</font>

224
00:14:34,850 --> 00:14:40,690
code in case forensic imager tries to

225
00:14:38,029 --> 00:14:44,750
find this curly bracket so this one and

226
00:14:40,690 --> 00:14:50,600
if it finds it it<font color="#E5E5E5"> copies everything</font>

227
00:14:44,750 --> 00:14:53,180
before into this other buffer<font color="#CCCCCC"> as you</font><font color="#E5E5E5"> can</font>

228
00:14:50,600 --> 00:14:58,660
see here the the line that is read from

229
00:14:53,180 --> 00:15:03,979
<font color="#CCCCCC">the the metadata file can contain up</font><font color="#E5E5E5"> to</font>

230
00:14:58,660 --> 00:15:07,130
1024<font color="#E5E5E5"> characters however the offer that</font>

231
00:15:03,980 --> 00:15:13,490
<font color="#E5E5E5">stores the name of the volume group only</font>

232
00:15:07,130 --> 00:15:17,140
<font color="#CCCCCC">can contain up to 256 characters</font><font color="#E5E5E5"> so if</font>

233
00:15:13,490 --> 00:15:20,240
the volume<font color="#CCCCCC"> group name is longer</font><font color="#E5E5E5"> than 256</font>

234
00:15:17,140 --> 00:15:26,390
<font color="#CCCCCC">at this mem copy call</font>

235
00:15:20,240 --> 00:15:29,540
buffer<font color="#E5E5E5"> overflow</font><font color="#CCCCCC"> occurs when this buffer</font>

236
00:15:26,390 --> 00:15:34,670
<font color="#CCCCCC">froa curse this deck looks similar to</font>

237
00:15:29,540 --> 00:15:38,900
this<font color="#CCCCCC"> here you can see the on top of this</font>

238
00:15:34,670 --> 00:15:41,479
deck<font color="#E5E5E5"> there is this meditate the line</font><font color="#CCCCCC"> so</font>

239
00:15:38,900 --> 00:15:44,540
the source buffer where the<font color="#E5E5E5"> data is</font>

240
00:15:41,480 --> 00:15:47,390
copied<font color="#CCCCCC"> from</font><font color="#E5E5E5"> then there is this buffer</font>

241
00:15:44,540 --> 00:15:50,510
that<font color="#E5E5E5"> I called overflow buffer that</font>

242
00:15:47,390 --> 00:15:52,880
overflows then somewhere<font color="#CCCCCC"> after that</font>

243
00:15:50,510 --> 00:15:55,760
there<font color="#E5E5E5"> is the stack cookie</font><font color="#CCCCCC"> the return</font>

244
00:15:52,880 --> 00:15:59,630
<font color="#E5E5E5">address that is overwritten and</font><font color="#CCCCCC"> the</font>

245
00:15:55,760 --> 00:16:02,870
stack frame of the cola<font color="#CCCCCC"> as you can see</font>

246
00:15:59,630 --> 00:16:05,810
if<font color="#E5E5E5"> we wanted to overwrite the</font><font color="#CCCCCC"> return</font>

247
00:16:02,870 --> 00:16:08,330
address<font color="#E5E5E5"> we of course also overwrite the</font>

248
00:16:05,810 --> 00:16:12,530
stack cookie and if we simply<font color="#E5E5E5"> let the</font>

249
00:16:08,330 --> 00:16:15,440
the pass<font color="#E5E5E5"> every</font><font color="#CCCCCC"> function return then the</font>

250
00:16:12,530 --> 00:16:18,650
function would check if the stack cookie

251
00:16:15,440 --> 00:16:20,600
was overwritten<font color="#CCCCCC"> and if it is overwritten</font>

252
00:16:18,650 --> 00:16:25,430
<font color="#E5E5E5">it would simply report execution</font>

253
00:16:20,600 --> 00:16:26,750
immediately<font color="#CCCCCC"> so that's why we had to</font><font color="#E5E5E5"> find</font>

254
00:16:25,430 --> 00:16:31,189
another way<font color="#CCCCCC"> to exploit this</font>

255
00:16:26,750 --> 00:16:34,640
vulnerability<font color="#CCCCCC"> luckily the</font><font color="#E5E5E5"> pass will be</font>

256
00:16:31,190 --> 00:16:38,240
<font color="#E5E5E5">function calls after the over a course</font>

257
00:16:34,640 --> 00:16:42,230
called<font color="#E5E5E5"> a function</font><font color="#CCCCCC"> pointer that</font><font color="#E5E5E5"> is</font>

258
00:16:38,240 --> 00:16:46,610
defined in an object<font color="#CCCCCC"> arm</font><font color="#E5E5E5"> on the stack in</font>

259
00:16:42,230 --> 00:16:49,880
the frame<font color="#CCCCCC"> of the caller</font><font color="#E5E5E5"> so we can simply</font>

260
00:16:46,610 --> 00:16:54,050
overwrite<font color="#E5E5E5"> this point here it is a frame</font>

261
00:16:49,880 --> 00:16:56,570
of the caller<font color="#E5E5E5"> and after this overflow</font>

262
00:16:54,050 --> 00:16:59,359
occurs the<font color="#CCCCCC"> path every</font><font color="#E5E5E5"> function calls</font>

263
00:16:56,570 --> 00:17:03,920
this point them<font color="#E5E5E5"> and that's how we can</font>

264
00:16:59,360 --> 00:17:07,099
control our exit<font color="#CCCCCC"> a controlled execution</font>

265
00:17:03,920 --> 00:17:13,250
<font color="#E5E5E5">without having to rely</font><font color="#CCCCCC"> on</font><font color="#E5E5E5"> the return</font>

266
00:17:07,099 --> 00:17:15,980
address so in<font color="#E5E5E5"> order to exploit this</font>

267
00:17:13,250 --> 00:17:18,680
<font color="#E5E5E5">these are our conditions that we have to</font>

268
00:17:15,980 --> 00:17:22,339
deal with there is no<font color="#CCCCCC"> way that</font><font color="#E5E5E5"> ESL are</font>

269
00:17:18,680 --> 00:17:27,860
in place which is good<font color="#E5E5E5"> for us</font><font color="#CCCCCC"> there is</font>

270
00:17:22,339 --> 00:17:35,060
<font color="#CCCCCC">no control flow guard there is that data</font>

271
00:17:27,859 --> 00:17:35,510
execution prevention<font color="#E5E5E5"> is active and the</font>

272
00:17:35,060 --> 00:17:37,760
biggest

273
00:17:35,510 --> 00:17:41,840
restriction is that<font color="#CCCCCC"> we can only use</font>

274
00:17:37,760 --> 00:17:43,340
utf-16 characters<font color="#E5E5E5"> these</font><font color="#CCCCCC"> you 216</font>

275
00:17:41,840 --> 00:17:46,899
characters we were translated<font color="#E5E5E5"> from</font>

276
00:17:43,340 --> 00:17:53,750
<font color="#E5E5E5">windows encoding from this metadata file</font>

277
00:17:46,900 --> 00:17:58,400
so for<font color="#E5E5E5"> example if we specify a the</font>

278
00:17:53,750 --> 00:18:00,950
metadata file the buffer that<font color="#E5E5E5"> the memory</font>

279
00:17:58,400 --> 00:18:02,780
<font color="#E5E5E5">that we overwrite would be overwritten</font>

280
00:18:00,950 --> 00:18:08,750
with<font color="#CCCCCC"> four one zero zero four one zero</font>

281
00:18:02,780 --> 00:18:14,870
<font color="#CCCCCC">zero and</font><font color="#E5E5E5"> so on so it is that is one big</font>

282
00:18:08,750 --> 00:18:19,610
restriction<font color="#CCCCCC"> that we have to deal with so</font>

283
00:18:14,870 --> 00:18:22,310
the first step is to move the ESP into

284
00:18:19,610 --> 00:18:27,560
our<font color="#CCCCCC"> return oriented</font><font color="#E5E5E5"> programming training</font>

285
00:18:22,310 --> 00:18:31,550
<font color="#E5E5E5">to a rope chain</font><font color="#CCCCCC"> to do this we simply add</font>

286
00:18:27,560 --> 00:18:35,770
this constant value to the ESP to move

287
00:18:31,550 --> 00:18:39,710
the ESP into<font color="#E5E5E5"> this metadata line buffer</font>

288
00:18:35,770 --> 00:18:43,310
<font color="#E5E5E5">as you can see here as a gadget we have</font>

289
00:18:39,710 --> 00:18:48,830
to always<font color="#CCCCCC"> use well at YouTube sixteen</font>

290
00:18:43,310 --> 00:18:53,360
addresses so when we are<font color="#E5E5E5"> out at our</font>

291
00:18:48,830 --> 00:18:57,370
first<font color="#E5E5E5"> Rob chain we have to deal with</font>

292
00:18:53,360 --> 00:19:00,080
<font color="#CCCCCC">this utf-16 restriction somehow because</font>

293
00:18:57,370 --> 00:19:02,929
in this<font color="#E5E5E5"> first option we</font><font color="#CCCCCC"> are very</font>

294
00:19:00,080 --> 00:19:06,470
restricted with the gadgets that<font color="#CCCCCC"> we can</font>

295
00:19:02,930 --> 00:19:09,440
call there are only a<font color="#E5E5E5"> couple of gadgets</font>

296
00:19:06,470 --> 00:19:15,500
<font color="#CCCCCC">that data</font><font color="#E5E5E5"> actually usable so we have to</font>

297
00:19:09,440 --> 00:19:20,740
find a way to head to deal with this in

298
00:19:15,500 --> 00:19:20,740
a way<font color="#CCCCCC"> that we can execute arbitrary code</font>

299
00:19:20,950 --> 00:19:27,350
<font color="#CCCCCC">as it turns</font><font color="#E5E5E5"> out in case forensic imager</font>

300
00:19:24,860 --> 00:19:31,510
doesn't<font color="#E5E5E5"> treat this metadata file</font>

301
00:19:27,350 --> 00:19:35,389
directly<font color="#CCCCCC"> from</font><font color="#E5E5E5"> disk but instead it loads</font>

302
00:19:31,510 --> 00:19:38,300
several sectors<font color="#E5E5E5"> from the disk is this</font>

303
00:19:35,390 --> 00:19:43,790
metadata header into<font color="#E5E5E5"> memory before</font>

304
00:19:38,300 --> 00:19:45,820
<font color="#E5E5E5">copying this metadata into this YouTube</font>

305
00:19:43,790 --> 00:19:49,460
<font color="#E5E5E5">16 encoded of</font>

306
00:19:45,820 --> 00:19:52,070
so when this<font color="#E5E5E5"> overflow occurs</font><font color="#CCCCCC"> somewhere</font>

307
00:19:49,460 --> 00:19:54,169
<font color="#CCCCCC">in memory there is</font><font color="#E5E5E5"> this it'll</font><font color="#CCCCCC"> be made at</font>

308
00:19:52,070 --> 00:19:59,450
<font color="#E5E5E5">the other header that has not been</font>

309
00:19:54,169 --> 00:20:02,929
<font color="#CCCCCC">modified by the</font><font color="#E5E5E5"> application</font><font color="#CCCCCC"> anyway</font><font color="#E5E5E5"> so if</font>

310
00:19:59,450 --> 00:20:08,179
we could find this<font color="#E5E5E5"> we could store</font>

311
00:20:02,929 --> 00:20:10,520
another option in there<font color="#CCCCCC"> migrate</font>

312
00:20:08,179 --> 00:20:15,830
execution to this rope chain and then

313
00:20:10,520 --> 00:20:20,720
use all available gadgets<font color="#CCCCCC"> so we can gain</font>

314
00:20:15,830 --> 00:20:23,449
code execution luckily when this

315
00:20:20,720 --> 00:20:26,900
<font color="#E5E5E5">overflow occurs somewhere on</font><font color="#CCCCCC"> the stack</font>

316
00:20:23,450 --> 00:20:31,789
<font color="#CCCCCC">there is a pointer that points directly</font>

317
00:20:26,900 --> 00:20:36,799
into this metadata header at offset<font color="#E5E5E5"> for</font>

318
00:20:31,789 --> 00:20:41,000
<font color="#E5E5E5">zero</font><font color="#CCCCCC"> index so the idea is that we use</font>

319
00:20:36,799 --> 00:20:43,220
<font color="#E5E5E5">this point on the stack to get to</font><font color="#CCCCCC"> our</font>

320
00:20:41,000 --> 00:20:46,690
Rob<font color="#CCCCCC"> tree</font><font color="#E5E5E5"> number two and this is where</font>

321
00:20:43,220 --> 00:20:48,830
there<font color="#CCCCCC"> is where the actual Rob train that</font>

322
00:20:46,690 --> 00:20:58,250
<font color="#E5E5E5">execute code</font>

323
00:20:48,830 --> 00:21:02,570
lies so here you can see the gadgets

324
00:20:58,250 --> 00:21:07,510
that we<font color="#E5E5E5"> used to do this so the</font><font color="#CCCCCC"> first</font>

325
00:21:02,570 --> 00:21:12,799
gadget is towards<font color="#E5E5E5"> the EBP into EAX</font><font color="#CCCCCC"> then</font>

326
00:21:07,510 --> 00:21:16,179
in the second gadget we pointed the<font color="#CCCCCC"> ECX</font>

327
00:21:12,799 --> 00:21:20,960
register to this to this<font color="#CCCCCC"> address</font><font color="#E5E5E5"> and</font>

328
00:21:16,179 --> 00:21:23,600
this address is loaded<font color="#E5E5E5"> from the image</font>

329
00:21:20,960 --> 00:21:31,789
and it always come to and contains the

330
00:21:23,600 --> 00:21:40,459
<font color="#E5E5E5">value of</font><font color="#CCCCCC"> 118 hex we can then add this</font>

331
00:21:31,789 --> 00:21:44,419
value<font color="#E5E5E5"> to to the</font><font color="#CCCCCC"> EAX</font><font color="#E5E5E5"> register so that</font><font color="#CCCCCC"> EAX</font>

332
00:21:40,460 --> 00:21:52,820
register now points directly to<font color="#CCCCCC"> the</font>

333
00:21:44,419 --> 00:21:55,730
point<font color="#E5E5E5"> that we want we then set is</font>

334
00:21:52,820 --> 00:21:58,250
x-to-the-first gadget of the second drop

335
00:21:55,730 --> 00:22:03,429
chain<font color="#CCCCCC"> I will explain</font><font color="#E5E5E5"> in a minute</font><font color="#CCCCCC"> why we</font>

336
00:21:58,250 --> 00:22:08,299
need to do this<font color="#E5E5E5"> then we dereference e^x</font>

337
00:22:03,429 --> 00:22:14,710
<font color="#E5E5E5">so that e^x now points</font><font color="#CCCCCC"> to the offset</font><font color="#E5E5E5"> for</font>

338
00:22:08,299 --> 00:22:14,710
<font color="#CCCCCC">0</font><font color="#E5E5E5"> in this metadata header memory region</font>

339
00:22:15,639 --> 00:22:25,370
<font color="#CCCCCC">however the this gadget also destroys</font>

340
00:22:21,049 --> 00:22:28,190
the first<font color="#E5E5E5"> value in this in this region</font>

341
00:22:25,370 --> 00:22:33,168
<font color="#CCCCCC">so with the</font><font color="#E5E5E5"> next gadget we have to set</font>

342
00:22:28,190 --> 00:22:37,009
<font color="#E5E5E5">it back to</font><font color="#CCCCCC"> 0 as you can see here the</font>

343
00:22:33,169 --> 00:22:40,490
pointer<font color="#E5E5E5"> that we have acquired points to</font>

344
00:22:37,009 --> 00:22:41,559
the offset for<font color="#E5E5E5"> 0 in this VM metadata</font>

345
00:22:40,490 --> 00:22:46,909
<font color="#CCCCCC">Heller</font>

346
00:22:41,559 --> 00:22:51,309
however our Rob train begins at the

347
00:22:46,909 --> 00:22:58,009
offset<font color="#E5E5E5"> 5 0 the reason for this is that</font>

348
00:22:51,309 --> 00:23:01,100
we cannot<font color="#E5E5E5"> stall the Rob chain directly</font>

349
00:22:58,009 --> 00:23:06,460
at this offset for 0<font color="#E5E5E5"> because if we do</font>

350
00:23:01,100 --> 00:23:11,320
this and<font color="#E5E5E5"> this the offset for 0 is a</font>

351
00:23:06,460 --> 00:23:14,779
welder than 0 then the<font color="#CCCCCC"> LVM metadata</font>

352
00:23:11,320 --> 00:23:18,529
<font color="#E5E5E5">partha of</font><font color="#CCCCCC"> in case forensic imager fails</font>

353
00:23:14,779 --> 00:23:23,360
to pass<font color="#E5E5E5"> this header so what we do</font>

354
00:23:18,529 --> 00:23:28,250
<font color="#CCCCCC">instead we at runtime replaced is 0</font>

355
00:23:23,360 --> 00:23:33,439
alias with the the first<font color="#E5E5E5"> gadget that we</font>

356
00:23:28,250 --> 00:23:36,649
<font color="#E5E5E5">set ECX before - and this gadget simply</font>

357
00:23:33,440 --> 00:23:39,950
pops the other<font color="#E5E5E5"> three values from this</font>

358
00:23:36,649 --> 00:23:49,149
deck<font color="#CCCCCC"> so that we are exactly aligned with</font>

359
00:23:39,950 --> 00:23:53,450
<font color="#E5E5E5">our Rob train number</font><font color="#CCCCCC"> 2 ok then we simply</font>

360
00:23:49,149 --> 00:23:57,559
transfer execution<font color="#E5E5E5"> to this second rope</font>

361
00:23:53,450 --> 00:24:00,230
chain<font color="#CCCCCC"> this</font><font color="#E5E5E5"> second drop chain removes the</font>

362
00:23:57,559 --> 00:24:04,210
<font color="#CCCCCC">bellows from</font><font color="#E5E5E5"> the stack and we</font><font color="#CCCCCC"> are at our</font>

363
00:24:00,230 --> 00:24:04,210
second drop chain with the ESP

364
00:24:05,770 --> 00:24:16,050
second rope chain was simply generated

365
00:24:10,000 --> 00:24:19,390
with<font color="#CCCCCC"> Mona dot pi it's very easy to</font>

366
00:24:16,050 --> 00:24:24,090
automatically<font color="#E5E5E5"> generate a rope chain</font>

367
00:24:19,390 --> 00:24:28,660
<font color="#E5E5E5">because the image is rather large and</font>

368
00:24:24,090 --> 00:24:32,050
therefore<font color="#E5E5E5"> there</font><font color="#CCCCCC"> are</font><font color="#E5E5E5"> a lot</font><font color="#CCCCCC"> of gadgets</font>

369
00:24:28,660 --> 00:24:37,120
<font color="#E5E5E5">that can be used so monitored</font><font color="#CCCCCC"> pyar</font>

370
00:24:32,050 --> 00:24:42,810
worked<font color="#E5E5E5"> pretty</font><font color="#CCCCCC"> great and it generated the</font>

371
00:24:37,120 --> 00:24:47,169
rope chain<font color="#CCCCCC"> that sets the protection of</font>

372
00:24:42,810 --> 00:24:52,320
the memory region and so that it can be

373
00:24:47,170 --> 00:24:57,070
executed<font color="#E5E5E5"> and then</font><font color="#CCCCCC"> transfers execution to</font>

374
00:24:52,320 --> 00:25:00,879
some payload<font color="#CCCCCC"> we set up our expert so we</font>

375
00:24:57,070 --> 00:25:04,510
can use any<font color="#CCCCCC"> meter spread payload with</font>

376
00:25:00,880 --> 00:25:09,580
some size restrictions and<font color="#E5E5E5"> here you can</font>

377
00:25:04,510 --> 00:25:13,710
<font color="#E5E5E5">see as an example the</font><font color="#CCCCCC"> payloads that</font>

378
00:25:09,580 --> 00:25:13,710
<font color="#E5E5E5">simply spawns a calculator</font>

379
00:25:14,080 --> 00:25:21,340
<font color="#CCCCCC">I will now transfer back to florrum</font>

380
00:25:17,170 --> 00:25:22,600
for<font color="#CCCCCC"> explaining the scenarios that we can</font>

381
00:25:21,340 --> 00:25:25,179
use<font color="#E5E5E5"> perfect</font>

382
00:25:22,600 --> 00:25:28,209
thank you very much<font color="#E5E5E5"> Wolfgang for the for</font>

383
00:25:25,180 --> 00:25:36,250
the technical insights and explanations

384
00:25:28,210 --> 00:25:39,850
<font color="#E5E5E5">just</font><font color="#CCCCCC"> let me jump back I want to explain</font>

385
00:25:36,250 --> 00:25:43,240
everything<font color="#E5E5E5"> again</font><font color="#CCCCCC"> jump</font><font color="#E5E5E5"> back to the to the</font>

386
00:25:39,850 --> 00:25:47,620
<font color="#E5E5E5">scenario so so basically</font><font color="#CCCCCC"> what what we</font>

387
00:25:43,240 --> 00:25:52,870
discovered is a way to<font color="#CCCCCC"> manipulate the</font>

388
00:25:47,620 --> 00:25:55,389
<font color="#CCCCCC">LBM petition on any disk</font><font color="#E5E5E5"> to allow for a</font>

389
00:25:52,870 --> 00:25:59,729
remote code execution<font color="#E5E5E5"> once it's being</font>

390
00:25:55,390 --> 00:26:05,980
<font color="#E5E5E5">loaded into encase forensic imager and</font>

391
00:25:59,730 --> 00:26:09,130
prepared for analysis there<font color="#CCCCCC"> so yeah</font><font color="#E5E5E5"> we</font>

392
00:26:05,980 --> 00:26:13,510
have<font color="#CCCCCC"> this</font><font color="#E5E5E5"> scenario a flash storage media</font>

393
00:26:09,130 --> 00:26:17,460
with<font color="#E5E5E5"> incriminating data check brought</font>

394
00:26:13,510 --> 00:26:18,540
all my incriminating data with me<font color="#E5E5E5"> to</font>

395
00:26:17,460 --> 00:26:22,170
<font color="#CCCCCC">four</font>

396
00:26:18,540 --> 00:26:26,610
<font color="#CCCCCC">checked</font><font color="#E5E5E5"> my incriminating data</font><font color="#CCCCCC"> I will add</font>

397
00:26:22,170 --> 00:26:28,950
this manipulated<font color="#CCCCCC"> lbm petition</font>

398
00:26:26,610 --> 00:26:33,300
so especially crafted at the end

399
00:26:28,950 --> 00:26:37,770
petition to my flesh storage<font color="#E5E5E5"> and then</font>

400
00:26:33,300 --> 00:26:43,860
anyone who who collects this or who

401
00:26:37,770 --> 00:26:47,760
finds this<font color="#E5E5E5"> this flash</font><font color="#CCCCCC"> drive</font><font color="#E5E5E5"> and wants to</font>

402
00:26:43,860 --> 00:26:53,250
<font color="#E5E5E5">wants</font><font color="#CCCCCC"> to analyze it wants to to</font><font color="#E5E5E5"> collect</font>

403
00:26:47,760 --> 00:26:56,250
evidence from it<font color="#E5E5E5"> can can have it and</font>

404
00:26:53,250 --> 00:27:01,020
once it<font color="#CCCCCC"> is analyzed using encase</font>

405
00:26:56,250 --> 00:27:03,770
forensic imager<font color="#CCCCCC"> the remote code</font>

406
00:27:01,020 --> 00:27:07,290
execution will be<font color="#E5E5E5"> will be triggered</font><font color="#CCCCCC"> and</font>

407
00:27:03,770 --> 00:27:11,190
<font color="#E5E5E5">I will be able to run arbitrary code on</font>

408
00:27:07,290 --> 00:27:13,680
the investigators machine<font color="#E5E5E5"> and if I can</font>

409
00:27:11,190 --> 00:27:17,850
run arbitrary<font color="#E5E5E5"> code on the investigators</font>

410
00:27:13,680 --> 00:27:21,480
machine<font color="#CCCCCC"> I can</font><font color="#E5E5E5"> definitely manipulate the</font>

411
00:27:17,850 --> 00:27:27,929
evidence that he tries to<font color="#CCCCCC"> pull off this</font>

412
00:27:21,480 --> 00:27:32,610
<font color="#E5E5E5">this device yeah so let's look at it how</font>

413
00:27:27,930 --> 00:27:38,750
it will look in<font color="#CCCCCC"> inaction</font><font color="#E5E5E5"> this is a live</font>

414
00:27:32,610 --> 00:27:41,340
demo so<font color="#E5E5E5"> I hope everything will work out</font>

415
00:27:38,750 --> 00:27:49,500
screen is back so that's<font color="#E5E5E5"> a good sign</font>

416
00:27:41,340 --> 00:27:54,480
<font color="#CCCCCC">I simply insert a thumb</font><font color="#E5E5E5"> drive so</font><font color="#CCCCCC"> I</font>

417
00:27:49,500 --> 00:27:59,010
<font color="#E5E5E5">already see a lot</font><font color="#CCCCCC"> of incriminating</font><font color="#E5E5E5"> data</font>

418
00:27:54,480 --> 00:28:04,710
a lot of sensitive information<font color="#E5E5E5"> which I</font>

419
00:27:59,010 --> 00:28:08,900
keep on my thumb drive<font color="#CCCCCC"> I</font><font color="#E5E5E5"> yeah I saved on</font>

420
00:28:04,710 --> 00:28:16,020
<font color="#E5E5E5">encryption because</font><font color="#CCCCCC"> I have the LVM</font>

421
00:28:08,900 --> 00:28:23,190
protection so then let's start<font color="#CCCCCC"> in case</font>

422
00:28:16,020 --> 00:28:26,540
forensic imager<font color="#CCCCCC"> so you see we are</font>

423
00:28:23,190 --> 00:28:33,390
<font color="#CCCCCC">running encase forensic image</font>

424
00:28:26,540 --> 00:28:37,800
admin user so<font color="#E5E5E5"> high privileges makes more</font>

425
00:28:33,390 --> 00:28:42,570
<font color="#E5E5E5">fun for</font><font color="#CCCCCC"> for code execution</font><font color="#E5E5E5"> so I disabled</font>

426
00:28:37,800 --> 00:28:46,409
now<font color="#CCCCCC"> to the right blocked check because I</font>

427
00:28:42,570 --> 00:28:48,030
have directly attached thumb drive<font color="#E5E5E5"> but</font>

428
00:28:46,410 --> 00:28:51,480
it would work<font color="#CCCCCC"> just as well</font>

429
00:28:48,030 --> 00:28:58,520
why<font color="#E5E5E5"> are</font><font color="#CCCCCC"> write blocked</font><font color="#E5E5E5"> image gathering</font>

430
00:28:51,480 --> 00:29:02,450
<font color="#CCCCCC">too so I'm selecting</font><font color="#E5E5E5"> the USB Drive and</font>

431
00:28:58,520 --> 00:29:11,150
preparing the image to to be loaded and

432
00:29:02,450 --> 00:29:18,290
I want to scan it<font color="#CCCCCC"> for any LVM partitions</font>

433
00:29:11,150 --> 00:29:21,860
and here we have remote code execution<font color="#CCCCCC"> I</font>

434
00:29:18,290 --> 00:29:26,370
mean this is<font color="#CCCCCC"> just a simple demonstration</font>

435
00:29:21,860 --> 00:29:31,229
<font color="#CCCCCC">so if we look back at at the thumb drive</font>

436
00:29:26,370 --> 00:29:38,159
a couple<font color="#CCCCCC"> of</font><font color="#E5E5E5"> PowerShell and</font><font color="#CCCCCC"> bat files are</font>

437
00:29:31,230 --> 00:29:41,850
down there so some some basic yeah<font color="#CCCCCC"> a</font>

438
00:29:38,160 --> 00:29:45,179
<font color="#E5E5E5">basic demonstration exploit what the</font>

439
00:29:41,850 --> 00:29:48,899
<font color="#CCCCCC">PowerShell does is basically run through</font>

440
00:29:45,179 --> 00:29:55,410
all all<font color="#CCCCCC"> Drive letters until it finally</font>

441
00:29:48,900 --> 00:29:59,990
identifies as which drive the<font color="#CCCCCC"> this USB</font>

442
00:29:55,410 --> 00:30:04,500
stick<font color="#E5E5E5"> was loaded and then executing any</font>

443
00:29:59,990 --> 00:30:08,610
any files from this USB<font color="#E5E5E5"> stick</font><font color="#CCCCCC"> this is</font>

444
00:30:04,500 --> 00:30:12,240
one simple<font color="#CCCCCC"> attack scenario</font><font color="#E5E5E5"> yeah but it's</font>

445
00:30:08,610 --> 00:30:15,770
up to<font color="#CCCCCC"> the attackers imagination to to</font>

446
00:30:12,240 --> 00:30:20,400
tweak that<font color="#E5E5E5"> to make</font><font color="#CCCCCC"> it</font><font color="#E5E5E5"> more</font><font color="#CCCCCC"> sophisticated</font>

447
00:30:15,770 --> 00:30:25,200
<font color="#E5E5E5">etc etc</font><font color="#CCCCCC"> so for</font><font color="#E5E5E5"> demonstration purposes we</font>

448
00:30:20,400 --> 00:30:28,110
pop up<font color="#E5E5E5"> a simple screen</font><font color="#CCCCCC"> we could run a</font>

449
00:30:25,200 --> 00:30:30,240
<font color="#CCCCCC">low-key variant now a</font><font color="#E5E5E5"> one a cry variant</font>

450
00:30:28,110 --> 00:30:33,540
now encrypting the entire<font color="#E5E5E5"> hard disk</font>

451
00:30:30,240 --> 00:30:34,710
<font color="#E5E5E5">demanding ransom from law enforcement to</font>

452
00:30:33,540 --> 00:30:38,190
<font color="#E5E5E5">get back there</font>

453
00:30:34,710 --> 00:30:41,120
<font color="#CCCCCC">their evidence</font><font color="#E5E5E5"> files or we can do</font>

454
00:30:38,190 --> 00:30:56,010
whatever we want on that forensic

455
00:30:41,120 --> 00:30:58,168
machine<font color="#E5E5E5"> any questions so far good yeah</font>

456
00:30:56,010 --> 00:31:06,809
this was the live demo<font color="#E5E5E5"> glad it actually</font>

457
00:30:58,169 --> 00:31:09,179
worked so who is affected<font color="#E5E5E5"> yes question</font>

458
00:31:06,809 --> 00:31:12,629
just a<font color="#E5E5E5"> question is any case forensic</font>

459
00:31:09,179 --> 00:31:15,710
<font color="#E5E5E5">imager</font><font color="#CCCCCC"> a very common commonly</font><font color="#E5E5E5"> used tool</font>

460
00:31:12,630 --> 00:31:21,330
for rinsing or<font color="#E5E5E5"> the other alternatives</font>

461
00:31:15,710 --> 00:31:25,880
there are other alternatives<font color="#CCCCCC"> in case</font>

462
00:31:21,330 --> 00:31:28,350
forensic suit is one of the more popular

463
00:31:25,880 --> 00:31:32,760
solutions that is out there<font color="#CCCCCC"> so</font><font color="#E5E5E5"> that's</font><font color="#CCCCCC"> a</font>

464
00:31:28,350 --> 00:31:35,459
guidance software<font color="#CCCCCC"> so yeah as we</font><font color="#E5E5E5"> as we</font>

465
00:31:32,760 --> 00:31:39,720
<font color="#E5E5E5">see in the following slides there are</font>

466
00:31:35,460 --> 00:31:43,980
definitely some big names<font color="#E5E5E5"> that</font><font color="#CCCCCC"> our</font>

467
00:31:39,720 --> 00:31:48,539
clients of guidance<font color="#CCCCCC"> software so it is a</font>

468
00:31:43,980 --> 00:31:53,220
fairly common<font color="#E5E5E5"> and yeah very accepted</font>

469
00:31:48,539 --> 00:31:56,669
<font color="#E5E5E5">tool and another question is that is it</font>

470
00:31:53,220 --> 00:31:58,590
usually<font color="#CCCCCC"> the</font><font color="#E5E5E5"> case that the image will be</font>

471
00:31:56,669 --> 00:32:01,220
loaded directly<font color="#E5E5E5"> from the drive or</font><font color="#CCCCCC"> will</font>

472
00:31:58,590 --> 00:32:04,199
it be<font color="#E5E5E5"> copied to somewhere</font><font color="#CCCCCC"> else and then</font>

473
00:32:01,220 --> 00:32:08,520
load<font color="#CCCCCC"> it from there</font>

474
00:32:04,200 --> 00:32:11,010
either way so in<font color="#E5E5E5"> typically depending on</font>

475
00:32:08,520 --> 00:32:15,440
the on the forensic environment<font color="#E5E5E5"> that you</font>

476
00:32:11,010 --> 00:32:19,320
have you can<font color="#CCCCCC"> either take a</font><font color="#E5E5E5"> one-to-one</font>

477
00:32:15,440 --> 00:32:22,320
<font color="#E5E5E5">copy of the of the physical evidence you</font>

478
00:32:19,320 --> 00:32:27,090
have and work on the<font color="#E5E5E5"> image or you can</font>

479
00:32:22,320 --> 00:32:31,370
directly<font color="#E5E5E5"> by a write blocker</font><font color="#CCCCCC"> pull the</font>

480
00:32:27,090 --> 00:32:35,370
image<font color="#E5E5E5"> from disk but in either way since</font>

481
00:32:31,370 --> 00:32:40,168
it doesn't matter if it's a thumb drive

482
00:32:35,370 --> 00:32:44,039
<font color="#E5E5E5">or a hard disk or yes some some other</font>

483
00:32:40,169 --> 00:32:44,870
<font color="#E5E5E5">form of media</font><font color="#CCCCCC"> as long</font><font color="#E5E5E5"> as the the disk</font>

484
00:32:44,039 --> 00:32:47,600
<font color="#E5E5E5">image</font>

485
00:32:44,870 --> 00:32:52,879
<font color="#E5E5E5">remains the same and this log as long as</font>

486
00:32:47,600 --> 00:32:57,020
the manipulated<font color="#CCCCCC"> LVM petitions</font><font color="#E5E5E5"> are being</font>

487
00:32:52,880 --> 00:33:02,240
ported to<font color="#CCCCCC"> that disk image it will</font><font color="#E5E5E5"> work</font>

488
00:32:57,020 --> 00:33:06,230
<font color="#CCCCCC">when</font><font color="#E5E5E5"> yeah when when basically offline</font>

489
00:33:02,240 --> 00:33:10,160
copy is used for further analysis<font color="#CCCCCC"> but if</font>

490
00:33:06,230 --> 00:33:11,990
an offline copies is done<font color="#E5E5E5"> and you</font>

491
00:33:10,160 --> 00:33:14,809
manipulate<font color="#E5E5E5"> the offline copy the original</font>

492
00:33:11,990 --> 00:33:17,480
still be will still be there<font color="#E5E5E5"> for</font><font color="#CCCCCC"> the</font>

493
00:33:14,809 --> 00:33:20,059
forensic to not use an alternate tool<font color="#E5E5E5"> to</font>

494
00:33:17,480 --> 00:33:24,490
that that<font color="#E5E5E5"> that is that</font><font color="#CCCCCC"> is correct so if</font>

495
00:33:20,059 --> 00:33:27,470
you're not only<font color="#E5E5E5"> relying on foreign</font>

496
00:33:24,490 --> 00:33:32,380
guidance of the forensic suit<font color="#E5E5E5"> for</font>

497
00:33:27,470 --> 00:33:38,380
<font color="#E5E5E5">example on</font><font color="#CCCCCC"> encase suit</font><font color="#E5E5E5"> but using other</font>

498
00:33:32,380 --> 00:33:41,570
analysis tools as well<font color="#CCCCCC"> you you</font><font color="#E5E5E5"> can still</font>

499
00:33:38,380 --> 00:33:46,429
circumvent that<font color="#E5E5E5"> yes that that is that</font><font color="#CCCCCC"> is</font>

500
00:33:41,570 --> 00:33:49,520
<font color="#E5E5E5">correct</font><font color="#CCCCCC"> and also</font><font color="#E5E5E5"> if you deal with</font><font color="#CCCCCC"> the</font>

501
00:33:46,429 --> 00:33:53,960
<font color="#E5E5E5">evidence in a proper way</font><font color="#CCCCCC"> the the</font>

502
00:33:49,520 --> 00:33:56,480
<font color="#E5E5E5">original</font><font color="#CCCCCC"> filed</font><font color="#E5E5E5"> the</font><font color="#CCCCCC"> original image will</font>

503
00:33:53,960 --> 00:33:59,059
not be affected because if you if you're

504
00:33:56,480 --> 00:34:03,140
pulling<font color="#E5E5E5"> the offline copy by a write</font>

505
00:33:59,059 --> 00:34:06,790
blocker<font color="#E5E5E5"> as every decent forensic person</font>

506
00:34:03,140 --> 00:34:09,760
would do<font color="#CCCCCC"> then the original evidence</font>

507
00:34:06,790 --> 00:34:16,250
<font color="#CCCCCC">stays intact and unmodified of course</font>

508
00:34:09,760 --> 00:34:19,060
thank you<font color="#E5E5E5"> any other</font><font color="#CCCCCC"> questions at that</font>

509
00:34:16,250 --> 00:34:22,310
<font color="#E5E5E5">point but I will be taking questions</font>

510
00:34:19,060 --> 00:34:26,810
<font color="#E5E5E5">later too so I'm not at</font><font color="#CCCCCC"> the</font><font color="#E5E5E5"> end of my</font>

511
00:34:22,310 --> 00:34:28,310
talk no but<font color="#E5E5E5"> please yes</font><font color="#CCCCCC"> a baby any form</font>

512
00:34:26,810 --> 00:34:33,110
<font color="#E5E5E5">of this issue and are they doing</font>

513
00:34:28,310 --> 00:34:36,699
<font color="#E5E5E5">anything about it yes</font><font color="#CCCCCC"> mate may I answer</font>

514
00:34:33,110 --> 00:34:41,510
these questions<font color="#CCCCCC"> in two or three slides</font>

515
00:34:36,699 --> 00:34:43,839
perfect good then back to the tutor

516
00:34:41,510 --> 00:34:46,010
presentation<font color="#E5E5E5"> I'll be</font><font color="#CCCCCC"> right back at your</font>

517
00:34:43,840 --> 00:34:47,310
at your<font color="#E5E5E5"> question so it won't be</font>

518
00:34:46,010 --> 00:34:50,639
<font color="#CCCCCC">forgotten</font>

519
00:34:47,310 --> 00:34:53,179
back to the presentation who is<font color="#E5E5E5"> affected</font>

520
00:34:50,639 --> 00:34:53,179
<font color="#CCCCCC">by</font><font color="#E5E5E5"> this issue</font>

521
00:34:53,570 --> 00:35:01,500
well<font color="#E5E5E5"> what Wolfgang previously shared</font>

522
00:34:57,060 --> 00:35:05,310
<font color="#E5E5E5">with us</font><font color="#CCCCCC"> that encased forensic and encase</font>

523
00:35:01,500 --> 00:35:09,180
forensic imager<font color="#E5E5E5"> share a large portion of</font>

524
00:35:05,310 --> 00:35:11,970
the<font color="#CCCCCC"> codebase we</font><font color="#E5E5E5"> verified this</font>

525
00:35:09,180 --> 00:35:15,419
vulnerability<font color="#E5E5E5"> to be present in encase</font>

526
00:35:11,970 --> 00:35:20,240
forensic imager which is kind of a light

527
00:35:15,420 --> 00:35:22,440
<font color="#CCCCCC">version of the the</font><font color="#E5E5E5"> in case forensic suit</font>

528
00:35:20,240 --> 00:35:25,200
<font color="#CCCCCC">some of the vulnerabilities he</font>

529
00:35:22,440 --> 00:35:28,859
identified are present in<font color="#E5E5E5"> both version</font>

530
00:35:25,200 --> 00:35:31,049
<font color="#E5E5E5">this particular vulnerabilities of this</font>

531
00:35:28,859 --> 00:35:35,880
<font color="#CCCCCC">tech based buffer overflow that we just</font>

532
00:35:31,050 --> 00:35:40,320
found<font color="#E5E5E5"> appears not to be present in in</font><font color="#CCCCCC"> in</font>

533
00:35:35,880 --> 00:35:43,830
case forensic but then again<font color="#E5E5E5"> we</font><font color="#CCCCCC"> are not</font>

534
00:35:40,320 --> 00:35:46,650
the Quality<font color="#CCCCCC"> Assurance Department of</font>

535
00:35:43,830 --> 00:35:50,430
guidance software<font color="#CCCCCC"> so we did not test all</font>

536
00:35:46,650 --> 00:35:53,040
versions of encase forensic but only a

537
00:35:50,430 --> 00:35:57,089
<font color="#E5E5E5">couple of</font><font color="#CCCCCC"> versions that we could get our</font>

538
00:35:53,040 --> 00:36:02,670
hands<font color="#E5E5E5"> on and</font><font color="#CCCCCC"> here's some some big names</font>

539
00:35:57,089 --> 00:36:08,310
<font color="#E5E5E5">that end guidance software</font><font color="#CCCCCC"> lists as as</font>

540
00:36:02,670 --> 00:36:11,310
their clients<font color="#CCCCCC"> is the the US</font><font color="#E5E5E5"> FBI CIA the</font>

541
00:36:08,310 --> 00:36:14,750
US Department of Justice Department<font color="#CCCCCC"> of</font>

542
00:36:11,310 --> 00:36:18,330
Homeland<font color="#CCCCCC"> Security London Metropolitan</font>

543
00:36:14,750 --> 00:36:23,640
Police Service Microsoft Facebook<font color="#CCCCCC"> or</font>

544
00:36:18,330 --> 00:36:26,960
<font color="#CCCCCC">ocular so large</font><font color="#E5E5E5"> organizations</font><font color="#CCCCCC"> what what</font>

545
00:36:23,640 --> 00:36:29,970
we know<font color="#E5E5E5"> is</font><font color="#CCCCCC"> that there are customers of</font>

546
00:36:26,960 --> 00:36:31,800
<font color="#E5E5E5">guidance</font><font color="#CCCCCC"> software but of course we we</font>

547
00:36:29,970 --> 00:36:35,189
don't<font color="#E5E5E5"> know if they are</font><font color="#CCCCCC"> using this</font>

548
00:36:31,800 --> 00:36:41,040
particular product<font color="#E5E5E5"> so in case forensic</font>

549
00:36:35,190 --> 00:36:44,760
<font color="#E5E5E5">image in a</font><font color="#CCCCCC"> vulnerable version but yeah</font>

550
00:36:41,040 --> 00:36:48,920
if anyone<font color="#E5E5E5"> is using</font><font color="#CCCCCC"> encase definitely</font>

551
00:36:44,760 --> 00:36:53,280
worth checking<font color="#E5E5E5"> so what are the</font>

552
00:36:48,920 --> 00:36:57,220
<font color="#E5E5E5">countermeasures that that can be done of</font>

553
00:36:53,280 --> 00:37:01,810
course<font color="#CCCCCC"> dealing with binary data</font>

554
00:36:57,220 --> 00:37:06,189
<font color="#E5E5E5">it always comes with a risk</font><font color="#CCCCCC"> it's</font><font color="#E5E5E5"> always</font>

555
00:37:01,810 --> 00:37:10,599
<font color="#E5E5E5">dangerous because you simply</font><font color="#CCCCCC"> ya don't</font>

556
00:37:06,190 --> 00:37:12,480
know what is coming<font color="#CCCCCC"> at you challenging</font>

557
00:37:10,599 --> 00:37:18,310
<font color="#E5E5E5">to deal with all kinds</font><font color="#CCCCCC"> of different</font>

558
00:37:12,480 --> 00:37:21,609
<font color="#E5E5E5">formats etc etc so</font><font color="#CCCCCC"> it is dangerous</font>

559
00:37:18,310 --> 00:37:26,140
therefore for forensic environment there

560
00:37:21,609 --> 00:37:29,859
are<font color="#CCCCCC"> their basic hardening</font><font color="#E5E5E5"> measures in</font>

561
00:37:26,140 --> 00:37:33,700
place<font color="#E5E5E5"> that</font><font color="#CCCCCC"> should be used in order to to</font>

562
00:37:29,859 --> 00:37:35,920
limit the<font color="#CCCCCC"> impact of any vulnerabilities</font>

563
00:37:33,700 --> 00:37:39,069
that<font color="#E5E5E5"> could be</font><font color="#CCCCCC"> exploited</font>

564
00:37:35,920 --> 00:37:41,590
so usually forensic workstations are not

565
00:37:39,070 --> 00:37:45,250
attached to to any<font color="#CCCCCC"> network so they are</font>

566
00:37:41,590 --> 00:37:47,170
kept<font color="#CCCCCC"> offline</font><font color="#E5E5E5"> not attached to</font><font color="#CCCCCC"> the</font>

567
00:37:45,250 --> 00:37:51,730
internal network<font color="#E5E5E5"> not attached to</font><font color="#CCCCCC"> the</font>

568
00:37:47,170 --> 00:37:56,369
<font color="#E5E5E5">Internet in many cases a separate VM is</font>

569
00:37:51,730 --> 00:37:58,630
used for for each case<font color="#E5E5E5"> to make</font><font color="#CCCCCC"> sure that</font>

570
00:37:56,369 --> 00:38:02,200
anything<font color="#CCCCCC"> that could have gone wrong with</font>

571
00:37:58,630 --> 00:38:08,520
<font color="#CCCCCC">the previous</font><font color="#E5E5E5"> case won't affect future</font>

572
00:38:02,200 --> 00:38:12,730
cases<font color="#E5E5E5"> but the the purpose of</font><font color="#CCCCCC"> of creating</font>

573
00:38:08,520 --> 00:38:17,080
this<font color="#CCCCCC"> dos those images so it is this</font>

574
00:38:12,730 --> 00:38:21,010
imaging process which<font color="#E5E5E5"> yeah which</font><font color="#CCCCCC"> is the</font>

575
00:38:17,080 --> 00:38:24,400
the primary the<font color="#CCCCCC"> primary task of</font><font color="#E5E5E5"> in case</font>

576
00:38:21,010 --> 00:38:28,750
forensic imager<font color="#E5E5E5"> is to create a trusted</font>

577
00:38:24,400 --> 00:38:31,690
image that can be used for for further

578
00:38:28,750 --> 00:38:35,530
analysis can be<font color="#CCCCCC"> used to</font><font color="#E5E5E5"> together for</font>

579
00:38:31,690 --> 00:38:39,550
<font color="#E5E5E5">gather further evidence and well as soon</font>

580
00:38:35,530 --> 00:38:42,280
as<font color="#CCCCCC"> it is</font><font color="#E5E5E5"> as it is</font><font color="#CCCCCC"> possible to temper</font>

581
00:38:39,550 --> 00:38:46,270
with that imaging process or as soon as

582
00:38:42,280 --> 00:38:50,470
it is<font color="#CCCCCC"> possible to to manipulate</font><font color="#E5E5E5"> anything</font>

583
00:38:46,270 --> 00:38:53,730
<font color="#E5E5E5">that that happens after the image has</font>

584
00:38:50,470 --> 00:38:57,399
<font color="#CCCCCC">been collected the chain of custody is</font>

585
00:38:53,730 --> 00:39:01,810
<font color="#E5E5E5">basically violated for for this dream</font>

586
00:38:57,400 --> 00:39:03,970
and<font color="#E5E5E5"> yeah why while the hardening</font>

587
00:39:01,810 --> 00:39:06,430
measures are definitely good to<font color="#E5E5E5"> have in</font>

588
00:39:03,970 --> 00:39:08,180
place<font color="#CCCCCC"> the hardening measures will not</font>

589
00:39:06,430 --> 00:39:13,410
prevent

590
00:39:08,180 --> 00:39:16,950
yeah tempering<font color="#E5E5E5"> of this specific evidence</font>

591
00:39:13,410 --> 00:39:22,339
because you're just imaging this<font color="#E5E5E5"> this</font>

592
00:39:16,950 --> 00:39:24,689
evidence<font color="#CCCCCC"> so back to your question if</font>

593
00:39:22,340 --> 00:39:29,640
<font color="#CCCCCC">guidance software</font><font color="#E5E5E5"> has been informed</font>

594
00:39:24,690 --> 00:39:33,630
about this issue<font color="#CCCCCC"> so back</font><font color="#E5E5E5"> in 2000 end of</font>

595
00:39:29,640 --> 00:39:37,290
2016<font color="#CCCCCC"> when we</font><font color="#E5E5E5"> discovered</font><font color="#CCCCCC"> the first batch</font>

596
00:39:33,630 --> 00:39:39,090
of<font color="#E5E5E5"> yeah he</font><font color="#CCCCCC"> base buffer overflow</font>

597
00:39:37,290 --> 00:39:42,840
vulnerabilities denial of service

598
00:39:39,090 --> 00:39:44,910
<font color="#E5E5E5">learner abilities we yeah we</font><font color="#CCCCCC"> as a</font>

599
00:39:42,840 --> 00:39:48,600
<font color="#CCCCCC">consult follow responsible disclosure</font>

600
00:39:44,910 --> 00:39:53,149
policy<font color="#CCCCCC"> so we</font><font color="#E5E5E5"> contacted the vendor</font>

601
00:39:48,600 --> 00:39:56,370
informed him<font color="#CCCCCC"> about the</font><font color="#E5E5E5"> information</font><font color="#CCCCCC"> gave</font>

602
00:39:53,150 --> 00:39:59,520
the yet information that we had

603
00:39:56,370 --> 00:40:02,670
<font color="#E5E5E5">collected the proof</font><font color="#CCCCCC"> at a proof of</font>

604
00:39:59,520 --> 00:40:08,130
concepts that that we had<font color="#E5E5E5"> collected in</font>

605
00:40:02,670 --> 00:40:11,610
order<font color="#E5E5E5"> for them to provide a patch yeah</font>

606
00:40:08,130 --> 00:40:16,250
<font color="#E5E5E5">to our knowledge guidance software</font><font color="#CCCCCC"> did</font>

607
00:40:11,610 --> 00:40:21,120
not provide a patch so<font color="#CCCCCC"> fifty days</font><font color="#E5E5E5"> later</font>

608
00:40:16,250 --> 00:40:24,950
<font color="#E5E5E5">we released the advisory in accordance</font>

609
00:40:21,120 --> 00:40:28,710
with our responsible disclosure policy

610
00:40:24,950 --> 00:40:30,899
for the for the second case the<font color="#CCCCCC"> stack</font>

611
00:40:28,710 --> 00:40:35,250
based buffer overflow which we

612
00:40:30,900 --> 00:40:41,400
demonstrated<font color="#CCCCCC"> today we identified</font><font color="#E5E5E5"> that in</font>

613
00:40:35,250 --> 00:40:45,870
in<font color="#E5E5E5"> early 2017</font><font color="#CCCCCC"> was going and Rene two</font>

614
00:40:41,400 --> 00:40:48,090
colleagues<font color="#E5E5E5"> of second sold yeah they put</font>

615
00:40:45,870 --> 00:40:51,000
quite<font color="#E5E5E5"> some effort into</font><font color="#CCCCCC"> it to create the</font>

616
00:40:48,090 --> 00:40:58,680
proof<font color="#E5E5E5"> of</font><font color="#CCCCCC"> concept to to bypass all the</font>

617
00:40:51,000 --> 00:41:01,610
limitations<font color="#CCCCCC"> of ugf 616 etc etc that were</font>

618
00:40:58,680 --> 00:41:05,490
there<font color="#E5E5E5"> to create yeah a</font><font color="#CCCCCC"> proof-of-concept</font>

619
00:41:01,610 --> 00:41:08,940
<font color="#E5E5E5">exploit that would reliably work in</font>

620
00:41:05,490 --> 00:41:13,890
order<font color="#CCCCCC"> to</font><font color="#E5E5E5"> assist</font><font color="#CCCCCC"> a guidance</font><font color="#E5E5E5"> software</font><font color="#CCCCCC"> in</font>

621
00:41:08,940 --> 00:41:17,010
<font color="#E5E5E5">their in their investigations</font><font color="#CCCCCC"> but</font><font color="#E5E5E5"> well</font>

622
00:41:13,890 --> 00:41:19,420
as you can<font color="#E5E5E5"> see from the</font>

623
00:41:17,010 --> 00:41:27,280
<font color="#CCCCCC">communications time line</font><font color="#E5E5E5"> they pretty</font>

624
00:41:19,420 --> 00:41:31,480
<font color="#E5E5E5">much went silent on us and yeah after</font>

625
00:41:27,280 --> 00:41:37,060
<font color="#E5E5E5">after escalating and informing them we</font>

626
00:41:31,480 --> 00:41:41,190
<font color="#E5E5E5">decided to contact various</font><font color="#CCCCCC"> cert so we</font>

627
00:41:37,060 --> 00:41:44,430
contacted<font color="#CCCCCC"> us cert assert</font><font color="#E5E5E5"> pwned cert 80</font>

628
00:41:41,190 --> 00:41:48,610
etc about the<font color="#CCCCCC"> upcoming release and</font>

629
00:41:44,430 --> 00:41:51,750
<font color="#CCCCCC">middle of May we we made the</font><font color="#E5E5E5"> public</font>

630
00:41:48,610 --> 00:41:56,110
release<font color="#E5E5E5"> of this vulnerability</font><font color="#CCCCCC"> since it's</font>

631
00:41:51,750 --> 00:42:01,120
to this day<font color="#CCCCCC"> a zero day</font><font color="#E5E5E5"> we did not</font>

632
00:41:56,110 --> 00:42:03,880
publish the<font color="#E5E5E5"> exploit code back then we we</font>

633
00:42:01,120 --> 00:42:06,520
published<font color="#CCCCCC"> only a very redacted version</font>

634
00:42:03,880 --> 00:42:10,060
of of the advisories<font color="#E5E5E5"> are only giving</font>

635
00:42:06,520 --> 00:42:13,720
some some hints<font color="#CCCCCC"> into where</font><font color="#E5E5E5"> the</font><font color="#CCCCCC"> owner</font>

636
00:42:10,060 --> 00:42:18,910
<font color="#CCCCCC">were nobility lies but I guess the</font>

637
00:42:13,720 --> 00:42:22,600
educated audience<font color="#CCCCCC"> from today yeah I</font>

638
00:42:18,910 --> 00:42:26,319
leave to exercise to you<font color="#CCCCCC"> to come up with</font>

639
00:42:22,600 --> 00:42:28,930
<font color="#E5E5E5">your own exploit yeah and the only</font>

640
00:42:26,320 --> 00:42:32,500
response so back to your question that

641
00:42:28,930 --> 00:42:37,529
<font color="#CCCCCC">we received from guidance software but</font>

642
00:42:32,500 --> 00:42:40,150
<font color="#CCCCCC">also not directly about why a media is</font>

643
00:42:37,530 --> 00:42:45,010
basically that<font color="#E5E5E5"> they</font><font color="#CCCCCC"> believe that this is</font>

644
00:42:40,150 --> 00:42:48,450
<font color="#CCCCCC">a very theoretically</font><font color="#E5E5E5"> attack that dealing</font>

645
00:42:45,010 --> 00:42:51,570
with<font color="#E5E5E5"> raw data always comes with a risk</font>

646
00:42:48,450 --> 00:42:55,000
<font color="#CCCCCC">they</font><font color="#E5E5E5"> claim to have trained all their</font>

647
00:42:51,570 --> 00:42:59,200
people on<font color="#E5E5E5"> dealing</font><font color="#CCCCCC"> with such kinds</font><font color="#E5E5E5"> of</font>

648
00:42:55,000 --> 00:43:01,450
risk and<font color="#CCCCCC"> gender</font><font color="#E5E5E5"> last sentence they they</font>

649
00:42:59,200 --> 00:43:05,439
basically<font color="#E5E5E5"> tell us that they don't</font>

650
00:43:01,450 --> 00:43:11,160
<font color="#E5E5E5">consider this issue to</font><font color="#CCCCCC"> be</font><font color="#E5E5E5"> yes serious</font>

651
00:43:05,440 --> 00:43:11,160
and don't plan to do anything<font color="#E5E5E5"> about it</font>

652
00:43:11,340 --> 00:43:20,890
yeah and with with this<font color="#E5E5E5"> statement</font><font color="#CCCCCC"> I</font>

653
00:43:15,160 --> 00:43:25,990
would<font color="#E5E5E5"> like to conclude the talk and fade</font>

654
00:43:20,890 --> 00:43:28,029
over<font color="#E5E5E5"> to discussions Q and a so if there</font>

655
00:43:25,990 --> 00:43:32,399
are any additional<font color="#E5E5E5"> questions from the</font>

656
00:43:28,030 --> 00:43:35,680
audience<font color="#CCCCCC"> happy to take them all so</font>

657
00:43:32,400 --> 00:43:39,480
<font color="#E5E5E5">Wolfgang will be available via Skype for</font>

658
00:43:35,680 --> 00:43:39,480
any questions<font color="#E5E5E5"> that are</font><font color="#CCCCCC"> too technical</font>

659
00:43:42,000 --> 00:44:00,520
anyone so I guess you're<font color="#CCCCCC"> all working</font><font color="#E5E5E5"> on</font>

660
00:43:55,930 --> 00:44:03,990
creating your<font color="#E5E5E5"> own exploit already and</font>

661
00:44:00,520 --> 00:44:07,380
thank you<font color="#E5E5E5"> very much thank you for the</font>

662
00:44:03,990 --> 00:44:07,379
for the attention

