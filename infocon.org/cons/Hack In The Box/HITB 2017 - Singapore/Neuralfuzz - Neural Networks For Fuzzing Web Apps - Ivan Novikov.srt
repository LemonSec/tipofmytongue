1
00:00:08,520 --> 00:00:13,700
yep I'm here<font color="#CCCCCC"> today</font><font color="#E5E5E5"> to talk about</font>

2
00:00:12,270 --> 00:00:16,340
<font color="#E5E5E5">applications</font>

3
00:00:13,700 --> 00:00:20,660
networks<font color="#E5E5E5"> to actually</font><font color="#CCCCCC"> four thousand web</font>

4
00:00:16,340 --> 00:00:22,610
apps<font color="#E5E5E5"> obviously it is it is super</font>

5
00:00:20,660 --> 00:00:25,550
important things now to apply<font color="#CCCCCC"> in our</font>

6
00:00:22,610 --> 00:00:26,240
<font color="#CCCCCC">life</font><font color="#E5E5E5"> just</font><font color="#CCCCCC"> any everywhere</font><font color="#E5E5E5"> else</font><font color="#CCCCCC"> I don't</font>

7
00:00:25,550 --> 00:00:28,880
<font color="#CCCCCC">know</font>

8
00:00:26,240 --> 00:00:31,070
inside inside some kind<font color="#CCCCCC"> of bubble</font><font color="#E5E5E5"> things</font>

9
00:00:28,880 --> 00:00:35,089
and not so blessings and fries<font color="#CCCCCC"> and it's</font>

10
00:00:31,070 --> 00:00:38,000
super<font color="#E5E5E5"> complicated</font><font color="#CCCCCC"> task</font><font color="#E5E5E5"> and that is super</font>

11
00:00:35,090 --> 00:00:40,550
<font color="#E5E5E5">super easy to start</font><font color="#CCCCCC"> fasten to apply some</font>

12
00:00:38,000 --> 00:00:44,540
kind of techniques<font color="#E5E5E5"> but it is really hard</font>

13
00:00:40,550 --> 00:00:47,620
to to reinvent this area<font color="#E5E5E5"> apply new ideas</font>

14
00:00:44,540 --> 00:00:50,269
and find new results even more<font color="#E5E5E5"> everybody</font>

15
00:00:47,620 --> 00:00:52,370
<font color="#CCCCCC">using the</font><font color="#E5E5E5"> same fighting approaches with</font>

16
00:00:50,270 --> 00:00:55,510
<font color="#E5E5E5">the different</font><font color="#CCCCCC"> results which is</font><font color="#E5E5E5"> really</font>

17
00:00:52,370 --> 00:00:58,339
cool<font color="#CCCCCC"> I try</font><font color="#E5E5E5"> to apply machine learning</font>

18
00:00:55,510 --> 00:01:01,960
technically<font color="#E5E5E5"> neural networks</font><font color="#CCCCCC"> to generate</font>

19
00:00:58,340 --> 00:01:05,380
payloads here and try<font color="#E5E5E5"> to explain</font>

20
00:01:01,960 --> 00:01:09,530
something<font color="#CCCCCC"> like what is the</font><font color="#E5E5E5"> filing is</font>

21
00:01:05,379 --> 00:01:11,000
what is fuzzing of web apps<font color="#E5E5E5"> and what is</font>

22
00:01:09,530 --> 00:01:12,950
the<font color="#E5E5E5"> difference between like fighting</font>

23
00:01:11,000 --> 00:01:14,780
binaries for example and web apps

24
00:01:12,950 --> 00:01:18,590
what is the same what<font color="#CCCCCC"> is the difference</font>

25
00:01:14,780 --> 00:01:21,319
<font color="#E5E5E5">how to apply neural networks to fuzzing</font>

26
00:01:18,590 --> 00:01:24,619
how to present user<font color="#CCCCCC"> network net whenever</font>

27
00:01:21,319 --> 00:01:28,039
networks and some sort of combination of

28
00:01:24,619 --> 00:01:34,158
<font color="#E5E5E5">the</font><font color="#CCCCCC"> things like for the</font><font color="#E5E5E5"> networks using</font>

29
00:01:28,039 --> 00:01:37,850
web narrow<font color="#E5E5E5"> apps</font><font color="#CCCCCC"> let me please explain</font>

30
00:01:34,159 --> 00:01:40,189
myself<font color="#E5E5E5"> and from where I am so actually I</font>

31
00:01:37,850 --> 00:01:42,499
<font color="#CCCCCC">founded</font><font color="#E5E5E5"> my first company in 2009 a</font>

32
00:01:40,189 --> 00:01:44,928
security consulting team and we<font color="#E5E5E5"> actually</font>

33
00:01:42,499 --> 00:01:47,899
conducted<font color="#E5E5E5"> about 200</font><font color="#CCCCCC"> security</font><font color="#E5E5E5"> audits see</font>

34
00:01:44,929 --> 00:01:51,289
<font color="#E5E5E5">and since last I don't know like seven</font>

35
00:01:47,899 --> 00:01:54,259
years<font color="#E5E5E5"> even eight and the</font><font color="#CCCCCC"> most back</font>

36
00:01:51,289 --> 00:01:55,850
<font color="#E5E5E5">bounder and I'm really like to find some</font>

37
00:01:54,259 --> 00:01:59,450
<font color="#CCCCCC">bugs using some kind</font><font color="#E5E5E5"> of techniques like</font>

38
00:01:55,850 --> 00:02:03,318
<font color="#CCCCCC">Phi think so because</font><font color="#E5E5E5"> it is it is super</font>

39
00:01:59,450 --> 00:02:05,569
super nice<font color="#E5E5E5"> to be able to have some</font>

40
00:02:03,319 --> 00:02:07,579
<font color="#E5E5E5">monies through bug bounties and so my</font>

41
00:02:05,569 --> 00:02:10,610
total bound is about 1 million<font color="#E5E5E5"> dollars</font>

42
00:02:07,579 --> 00:02:12,590
<font color="#CCCCCC">last I don't</font><font color="#E5E5E5"> know five years</font><font color="#CCCCCC"> eight seven</font>

43
00:02:10,610 --> 00:02:14,300
years<font color="#E5E5E5"> it's my medium of</font><font color="#CCCCCC"> Twitter just</font>

44
00:02:12,590 --> 00:02:16,069
find me if<font color="#E5E5E5"> you would like</font><font color="#CCCCCC"> to follow me</font>

45
00:02:14,300 --> 00:02:20,450
<font color="#E5E5E5">I'll try to explain all the things</font>

46
00:02:16,069 --> 00:02:23,359
<font color="#E5E5E5">regularly inside my Twitter and medium</font>

47
00:02:20,450 --> 00:02:26,660
accounts so as I mentioned I'd like to

48
00:02:23,360 --> 00:02:28,220
talk<font color="#E5E5E5"> about fuzzing for the cobwebs for</font>

49
00:02:26,660 --> 00:02:30,440
<font color="#E5E5E5">neural</font><font color="#CCCCCC"> networks and</font><font color="#E5E5E5"> how to combine all</font>

50
00:02:28,220 --> 00:02:35,570
these things<font color="#E5E5E5"> together in a right way</font><font color="#CCCCCC"> not</font>

51
00:02:30,440 --> 00:02:38,510
<font color="#E5E5E5">in this way obviously</font><font color="#CCCCCC"> sir it's that</font><font color="#E5E5E5"> let</font>

52
00:02:35,570 --> 00:02:41,930
me<font color="#E5E5E5"> start with the definition of fighting</font>

53
00:02:38,510 --> 00:02:43,910
<font color="#E5E5E5">what the poison is the main</font><font color="#CCCCCC"> idea</font><font color="#E5E5E5"> is</font>

54
00:02:41,930 --> 00:02:46,610
super<font color="#CCCCCC"> easy just try to run</font><font color="#E5E5E5"> the program</font>

55
00:02:43,910 --> 00:02:49,190
<font color="#CCCCCC">with</font><font color="#E5E5E5"> some sort of input data to cause an</font>

56
00:02:46,610 --> 00:02:52,670
exception<font color="#E5E5E5"> try to analyze this exception</font>

57
00:02:49,190 --> 00:02:55,760
somehow<font color="#E5E5E5"> try to analyze the</font><font color="#CCCCCC"> results</font><font color="#E5E5E5"> and</font>

58
00:02:52,670 --> 00:02:58,339
try to make it repeatable obviously try

59
00:02:55,760 --> 00:03:01,310
<font color="#E5E5E5">to understand the reason of this crashes</font>

60
00:02:58,340 --> 00:03:04,340
or some sort of as exception and all the

61
00:03:01,310 --> 00:03:07,280
things<font color="#E5E5E5"> and technically</font><font color="#CCCCCC"> fastened</font><font color="#E5E5E5"> is</font><font color="#CCCCCC"> a way</font>

62
00:03:04,340 --> 00:03:10,970
how to<font color="#E5E5E5"> generate this some sort of input</font>

63
00:03:07,280 --> 00:03:14,540
data<font color="#E5E5E5"> how to</font><font color="#CCCCCC"> generate</font><font color="#E5E5E5"> something</font>

64
00:03:10,970 --> 00:03:17,650
unexpected for the<font color="#CCCCCC"> apt how to for the</font>

65
00:03:14,540 --> 00:03:21,140
program in in<font color="#E5E5E5"> general case how to</font>

66
00:03:17,650 --> 00:03:23,420
generate something<font color="#E5E5E5"> really important for</font>

67
00:03:21,140 --> 00:03:28,190
takers<font color="#E5E5E5"> something unexpected for the app</font>

68
00:03:23,420 --> 00:03:32,060
and<font color="#E5E5E5"> how to repeat the success and how to</font>

69
00:03:28,190 --> 00:03:34,520
generate<font color="#CCCCCC"> you payload</font><font color="#E5E5E5"> you like unexpected</font>

70
00:03:32,060 --> 00:03:37,670
thing using<font color="#E5E5E5"> the same and already known</font>

71
00:03:34,520 --> 00:03:40,430
things we can call fighting<font color="#E5E5E5"> this</font>

72
00:03:37,670 --> 00:03:46,760
technique to generate<font color="#CCCCCC"> data and</font><font color="#E5E5E5"> also we</font>

73
00:03:40,430 --> 00:03:49,190
can call<font color="#E5E5E5"> fastened as we can like use the</font>

74
00:03:46,760 --> 00:03:52,519
same boat<font color="#CCCCCC"> like fasten as a process</font><font color="#E5E5E5"> of</font>

75
00:03:49,190 --> 00:03:55,400
this<font color="#CCCCCC"> obviously it is different terms but</font>

76
00:03:52,520 --> 00:03:58,730
<font color="#CCCCCC">when</font><font color="#E5E5E5"> people talk</font><font color="#CCCCCC"> fuzzing</font><font color="#E5E5E5"> it could means</font>

77
00:03:55,400 --> 00:04:00,380
<font color="#CCCCCC">January data generally payloads</font><font color="#E5E5E5"> and at</font>

78
00:03:58,730 --> 00:04:02,869
the same time it<font color="#E5E5E5"> could mean all the</font>

79
00:04:00,380 --> 00:04:06,500
process how<font color="#E5E5E5"> to analyze</font><font color="#CCCCCC"> data how</font><font color="#E5E5E5"> to send</font>

80
00:04:02,870 --> 00:04:08,270
it<font color="#E5E5E5"> how to cluster eyes all the things to</font>

81
00:04:06,500 --> 00:04:10,910
be able<font color="#E5E5E5"> to</font><font color="#CCCCCC"> do it</font><font color="#E5E5E5"> faster and how to</font>

82
00:04:08,270 --> 00:04:16,100
analyze<font color="#CCCCCC"> the results but in my point of</font>

83
00:04:10,910 --> 00:04:20,540
<font color="#CCCCCC">view</font><font color="#E5E5E5"> in this paper and this like talk I</font>

84
00:04:16,100 --> 00:04:24,890
mean<font color="#CCCCCC"> only only like this payload</font>

85
00:04:20,540 --> 00:04:27,430
generation things so why it's really

86
00:04:24,890 --> 00:04:31,510
important to to using<font color="#E5E5E5"> fuzzing techniques</font>

87
00:04:27,430 --> 00:04:34,610
it is<font color="#E5E5E5"> really important because</font>

88
00:04:31,510 --> 00:04:37,969
technically this memory allocated to to

89
00:04:34,610 --> 00:04:39,530
the input data is really<font color="#E5E5E5"> huge</font><font color="#CCCCCC"> when you</font>

90
00:04:37,970 --> 00:04:40,280
would like<font color="#E5E5E5"> to file something like I</font>

91
00:04:39,530 --> 00:04:42,638
don't<font color="#E5E5E5"> know Michael</font>

92
00:04:40,280 --> 00:04:46,940
soft office<font color="#E5E5E5"> or some kind of as a binary</font>

93
00:04:42,639 --> 00:04:49,910
program you probably<font color="#E5E5E5"> would</font><font color="#CCCCCC"> like to use</font><font color="#E5E5E5"> I</font>

94
00:04:46,940 --> 00:04:53,570
don't<font color="#CCCCCC"> know some kind of input</font><font color="#E5E5E5"> files or</font>

95
00:04:49,910 --> 00:04:56,300
something<font color="#CCCCCC"> and so these files can say</font>

96
00:04:53,570 --> 00:04:58,580
<font color="#CCCCCC">contains of some sort of bytes for the</font>

97
00:04:56,300 --> 00:05:00,470
web apps this is not<font color="#E5E5E5"> the files about</font>

98
00:04:58,580 --> 00:05:03,500
HTTP<font color="#E5E5E5"> requests with some sort of</font>

99
00:05:00,470 --> 00:05:06,290
parameters inside and each of them have

100
00:05:03,500 --> 00:05:08,900
some kind<font color="#CCCCCC"> of lands</font><font color="#E5E5E5"> and this memory is</font>

101
00:05:06,290 --> 00:05:15,620
really<font color="#E5E5E5"> huge it's impossible to try</font>

102
00:05:08,900 --> 00:05:20,169
anything<font color="#CCCCCC"> try to use like binary father</font>

103
00:05:15,620 --> 00:05:23,870
and use and write each<font color="#CCCCCC"> parent of this</font>

104
00:05:20,169 --> 00:05:25,849
<font color="#E5E5E5">but how huge is</font><font color="#CCCCCC"> this memory</font><font color="#E5E5E5"> really even</font>

105
00:05:23,870 --> 00:05:32,630
four bytes is really huge four bytes

106
00:05:25,850 --> 00:05:36,890
means<font color="#E5E5E5"> about</font><font color="#CCCCCC"> four at 10 power 9</font><font color="#E5E5E5"> variants</font>

107
00:05:32,630 --> 00:05:40,669
means 11 hours at the speed of<font color="#E5E5E5"> 100,000</font>

108
00:05:36,890 --> 00:05:42,289
<font color="#E5E5E5">burns per second means</font><font color="#CCCCCC"> RPS in terms of</font>

109
00:05:40,669 --> 00:05:45,020
black<font color="#CCCCCC"> book physical</font><font color="#E5E5E5"> network which is</font>

110
00:05:42,290 --> 00:05:49,840
really huge<font color="#E5E5E5"> it is really it is</font><font color="#CCCCCC"> really</font>

111
00:05:45,020 --> 00:05:54,530
<font color="#E5E5E5">rapid to send</font><font color="#CCCCCC"> requests with 100k</font>

112
00:05:49,840 --> 00:05:57,710
<font color="#E5E5E5">requests per</font><font color="#CCCCCC"> seconds for even even if</font>

113
00:05:54,530 --> 00:05:59,299
you have some<font color="#E5E5E5"> sort of testing</font>

114
00:05:57,710 --> 00:06:02,419
environment if you<font color="#E5E5E5"> would like</font><font color="#CCCCCC"> to create</font>

115
00:05:59,300 --> 00:06:05,120
<font color="#E5E5E5">this kind of performance and run this</font>

116
00:06:02,419 --> 00:06:06,890
test with the<font color="#CCCCCC"> same speed</font><font color="#E5E5E5"> it</font><font color="#CCCCCC"> is really</font>

117
00:06:05,120 --> 00:06:07,580
really hard to<font color="#CCCCCC"> to</font><font color="#E5E5E5"> create this</font>

118
00:06:06,890 --> 00:06:10,010
environment

119
00:06:07,580 --> 00:06:13,550
trust me I try<font color="#E5E5E5"> to do it super super</font>

120
00:06:10,010 --> 00:06:17,840
frequently and even for bias is really

121
00:06:13,550 --> 00:06:21,860
huge<font color="#E5E5E5"> here obviously when we</font><font color="#CCCCCC"> talk about</font>

122
00:06:17,840 --> 00:06:27,049
some sort of independent<font color="#E5E5E5"> parameters so</font>

123
00:06:21,860 --> 00:06:28,940
let's let's try<font color="#CCCCCC"> to figure</font><font color="#E5E5E5"> out how it</font>

124
00:06:27,050 --> 00:06:31,460
looks<font color="#E5E5E5"> like for HTTP</font><font color="#CCCCCC"> requests because</font><font color="#E5E5E5"> I'm</font>

125
00:06:28,940 --> 00:06:36,650
talking<font color="#E5E5E5"> about</font><font color="#CCCCCC"> files</font><font color="#E5E5E5"> and web apps which</font>

126
00:06:31,460 --> 00:06:39,650
means that we are<font color="#CCCCCC"> doing</font><font color="#E5E5E5"> with HTTP</font><font color="#CCCCCC"> 1 HTTP</font>

127
00:06:36,650 --> 00:06:42,289
parameter contains about half<font color="#E5E5E5"> of</font><font color="#CCCCCC"> hundred</font>

128
00:06:39,650 --> 00:06:44,409
different input parameters<font color="#E5E5E5"> if we would</font>

129
00:06:42,289 --> 00:06:46,729
like<font color="#CCCCCC"> to fast</font><font color="#E5E5E5"> all of them with</font>

130
00:06:44,410 --> 00:06:49,190
intersections<font color="#E5E5E5"> which means that when</font>

131
00:06:46,729 --> 00:06:52,990
parameter could affect<font color="#E5E5E5"> and as a</font>

132
00:06:49,190 --> 00:06:57,729
<font color="#CCCCCC">parameter we we should saucepan</font>

133
00:06:52,990 --> 00:07:02,110
about<font color="#E5E5E5"> so I don't</font><font color="#CCCCCC"> know how long it is</font>

134
00:06:57,729 --> 00:07:07,330
<font color="#E5E5E5">it's it's definitely biggest numbers and</font>

135
00:07:02,110 --> 00:07:10,389
this<font color="#E5E5E5"> time of</font><font color="#CCCCCC"> our universe from from the</font>

136
00:07:07,330 --> 00:07:14,469
<font color="#CCCCCC">d12</font><font color="#E5E5E5"> nowadays and so it's impossible</font><font color="#CCCCCC"> even</font>

137
00:07:10,389 --> 00:07:16,780
for one<font color="#CCCCCC"> bite but</font><font color="#E5E5E5"> if we try to suggest</font>

138
00:07:14,470 --> 00:07:18,490
that parameter<font color="#E5E5E5"> since independent from</font>

139
00:07:16,780 --> 00:07:22,239
each other<font color="#CCCCCC"> it's definitely possible to</font>

140
00:07:18,490 --> 00:07:24,750
<font color="#CCCCCC">solve in few seconds</font><font color="#E5E5E5"> and I really like</font>

141
00:07:22,240 --> 00:07:28,120
this approach<font color="#E5E5E5"> to</font><font color="#CCCCCC"> fast anything and then</font>

142
00:07:24,750 --> 00:07:30,669
apply some<font color="#CCCCCC"> sort of neural networks to do</font>

143
00:07:28,120 --> 00:07:37,120
some kind of as a job to help<font color="#E5E5E5"> us to</font>

144
00:07:30,669 --> 00:07:39,210
identify some things and some numbers

145
00:07:37,120 --> 00:07:44,050
<font color="#E5E5E5">from real life</font>

146
00:07:39,210 --> 00:07:47,888
I'm not sure that<font color="#E5E5E5"> it is super important</font>

147
00:07:44,050 --> 00:07:51,220
<font color="#CCCCCC">to</font><font color="#E5E5E5"> describe some</font><font color="#CCCCCC"> sort of PC or studies</font>

148
00:07:47,889 --> 00:07:55,150
with no any practical applications my

149
00:07:51,220 --> 00:07:58,960
goal is<font color="#E5E5E5"> to</font><font color="#CCCCCC"> suggest something</font><font color="#E5E5E5"> with</font>

150
00:07:55,150 --> 00:08:02,530
results<font color="#E5E5E5"> something with ability to</font><font color="#CCCCCC"> be</font>

151
00:07:58,960 --> 00:08:06,400
applied and practice and this practice

152
00:08:02,530 --> 00:08:10,599
in my in my<font color="#E5E5E5"> experience says</font><font color="#CCCCCC"> that we have</font>

153
00:08:06,400 --> 00:08:13,150
about in general<font color="#CCCCCC"> for some some</font><font color="#E5E5E5"> sort of</font>

154
00:08:10,599 --> 00:08:18,969
average application<font color="#E5E5E5"> about 100 HTTP</font>

155
00:08:13,150 --> 00:08:23,169
endpoints with about half an hour<font color="#E5E5E5"> - 100</font>

156
00:08:18,970 --> 00:08:26,440
HTTP parameters each and average speed

157
00:08:23,169 --> 00:08:28,690
<font color="#E5E5E5">could</font><font color="#CCCCCC"> be</font><font color="#E5E5E5"> about 1000 RP s it is</font>

158
00:08:26,440 --> 00:08:31,509
reasonable speed<font color="#E5E5E5"> and</font><font color="#CCCCCC"> no shows that we</font>

159
00:08:28,690 --> 00:08:33,400
<font color="#E5E5E5">can do more for average case because it</font>

160
00:08:31,509 --> 00:08:36,250
requires a<font color="#E5E5E5"> lot of resources it requires</font>

161
00:08:33,400 --> 00:08:37,689
<font color="#E5E5E5">a lot</font><font color="#CCCCCC"> of</font><font color="#E5E5E5"> different things and even</font>

162
00:08:36,250 --> 00:08:41,799
<font color="#E5E5E5">architectures this violence should be</font>

163
00:08:37,690 --> 00:08:44,850
completely<font color="#CCCCCC"> different</font><font color="#E5E5E5"> so and</font><font color="#CCCCCC"> - by its how</font>

164
00:08:41,799 --> 00:08:47,680
<font color="#E5E5E5">fasten a really good technique</font>

165
00:08:44,850 --> 00:08:49,450
<font color="#E5E5E5">it could</font><font color="#CCCCCC"> covers unique codes and some</font>

166
00:08:47,680 --> 00:08:51,939
sort of combination<font color="#E5E5E5"> of</font><font color="#CCCCCC"> things and it's</font>

167
00:08:49,450 --> 00:08:58,390
possible<font color="#E5E5E5"> to fast this application this</font>

168
00:08:51,940 --> 00:09:01,590
<font color="#E5E5E5">way for about 90 to 91 hours which is</font>

169
00:08:58,390 --> 00:09:04,810
reasonable<font color="#E5E5E5"> which is</font>

170
00:09:01,590 --> 00:09:07,990
solvable problem<font color="#E5E5E5"> and so we can have we</font>

171
00:09:04,810 --> 00:09:12,160
can<font color="#E5E5E5"> solve these things</font><font color="#CCCCCC"> we can apply some</font>

172
00:09:07,990 --> 00:09:15,010
sort<font color="#E5E5E5"> of optimization there for example</font><font color="#CCCCCC"> I</font>

173
00:09:12,160 --> 00:09:19,180
don't<font color="#CCCCCC"> know</font><font color="#E5E5E5"> cut</font><font color="#CCCCCC"> some kind of bytes from</font>

174
00:09:15,010 --> 00:09:22,090
from<font color="#CCCCCC"> 7f to FF because it's almost</font><font color="#E5E5E5"> the</font>

175
00:09:19,180 --> 00:09:25,630
<font color="#E5E5E5">same for the apps and we don't expect</font>

176
00:09:22,090 --> 00:09:28,600
any same like unexpected<font color="#CCCCCC"> there we can</font>

177
00:09:25,630 --> 00:09:31,990
cut all<font color="#E5E5E5"> of them we can apply some sort</font>

178
00:09:28,600 --> 00:09:36,490
of dictionaries or<font color="#CCCCCC"> as a</font><font color="#E5E5E5"> optimization</font><font color="#CCCCCC"> to</font>

179
00:09:31,990 --> 00:09:40,780
<font color="#E5E5E5">to reduce this speed to reduce this time</font>

180
00:09:36,490 --> 00:09:44,490
<font color="#CCCCCC">to</font><font color="#E5E5E5"> to increase the speed</font><font color="#CCCCCC"> so the</font>

181
00:09:40,780 --> 00:09:47,589
difference between<font color="#E5E5E5"> the</font><font color="#CCCCCC"> Fagin and this</font>

182
00:09:44,490 --> 00:09:51,850
classic payloads inside inside the tests

183
00:09:47,590 --> 00:09:55,540
<font color="#E5E5E5">like I don't know a kinetics or</font><font color="#CCCCCC"> burb or</font>

184
00:09:51,850 --> 00:09:58,960
fast DB<font color="#E5E5E5"> or other things as the coverage</font>

185
00:09:55,540 --> 00:10:01,420
is huge<font color="#E5E5E5"> it's impossible to find it's</font>

186
00:09:58,960 --> 00:10:03,790
almost<font color="#E5E5E5"> impossible to find new sort of</font>

187
00:10:01,420 --> 00:10:07,270
vulnerability using old techniques which

188
00:10:03,790 --> 00:10:14,099
<font color="#E5E5E5">is which is super robust but how to</font>

189
00:10:07,270 --> 00:10:17,020
generate<font color="#E5E5E5"> this like new payloads using</font>

190
00:10:14,100 --> 00:10:19,030
other<font color="#CCCCCC"> things it's almost impossible</font><font color="#E5E5E5"> to</font>

191
00:10:17,020 --> 00:10:22,569
generate<font color="#E5E5E5"> new payloads with other</font>

192
00:10:19,030 --> 00:10:24,750
<font color="#E5E5E5">techniques instead of</font><font color="#CCCCCC"> filing</font><font color="#E5E5E5"> and so good</font>

193
00:10:22,570 --> 00:10:29,230
things there is it's<font color="#E5E5E5"> possible to</font><font color="#CCCCCC"> use</font>

194
00:10:24,750 --> 00:10:30,970
<font color="#E5E5E5">existent payloads and apply filing to to</font>

195
00:10:29,230 --> 00:10:33,690
generate<font color="#CCCCCC"> something unexpected</font><font color="#E5E5E5"> and to</font>

196
00:10:30,970 --> 00:10:36,790
find something<font color="#E5E5E5"> you even for the web Maps</font>

197
00:10:33,690 --> 00:10:39,190
we try to increase the<font color="#CCCCCC"> coverage</font><font color="#E5E5E5"> we try</font>

198
00:10:36,790 --> 00:10:42,160
to apply all the things we apply some

199
00:10:39,190 --> 00:10:44,230
<font color="#E5E5E5">sort of typical files and like one or</font>

200
00:10:42,160 --> 00:10:45,880
two<font color="#E5E5E5"> byte fuzzing and it's reasonable and</font>

201
00:10:44,230 --> 00:10:49,500
then we would<font color="#CCCCCC"> like to</font><font color="#E5E5E5"> apply neural</font>

202
00:10:45,880 --> 00:10:49,500
networks to<font color="#CCCCCC"> increase this coverage again</font>

203
00:10:50,070 --> 00:10:57,070
actually we have the main three main

204
00:10:54,580 --> 00:10:59,260
problems<font color="#CCCCCC"> of any filing</font><font color="#E5E5E5"> and special for</font>

205
00:10:57,070 --> 00:11:04,510
the web apps<font color="#E5E5E5"> we should understand where</font>

206
00:10:59,260 --> 00:11:06,310
we should apply<font color="#CCCCCC"> the payload</font><font color="#E5E5E5"> which means</font>

207
00:11:04,510 --> 00:11:09,059
that we<font color="#E5E5E5"> should analyze the data</font><font color="#CCCCCC"> we</font>

208
00:11:06,310 --> 00:11:12,209
should<font color="#CCCCCC"> analyze HTTP requests</font>

209
00:11:09,059 --> 00:11:14,368
find right place to<font color="#E5E5E5"> put the data we</font>

210
00:11:12,209 --> 00:11:19,618
<font color="#CCCCCC">should understand what is the payload</font>

211
00:11:14,369 --> 00:11:22,259
<font color="#CCCCCC">and how this like data could looks like</font>

212
00:11:19,619 --> 00:11:24,359
in<font color="#E5E5E5"> particular field to be able to do</font>

213
00:11:22,259 --> 00:11:28,319
something<font color="#CCCCCC"> and we should understand how</font>

214
00:11:24,359 --> 00:11:30,959
<font color="#CCCCCC">to identify</font><font color="#E5E5E5"> an exception how to identify</font>

215
00:11:28,319 --> 00:11:34,799
that our payload<font color="#E5E5E5"> cause some exceptions</font>

216
00:11:30,959 --> 00:11:36,839
there<font color="#CCCCCC"> I try</font><font color="#E5E5E5"> to explain this as a</font>

217
00:11:34,799 --> 00:11:39,209
baseline of any fighting techniques<font color="#E5E5E5"> and</font>

218
00:11:36,839 --> 00:11:44,189
then go to<font color="#E5E5E5"> to neural networks</font><font color="#CCCCCC"> and how to</font>

219
00:11:39,209 --> 00:11:46,319
apply them<font color="#CCCCCC"> and show you some results so</font>

220
00:11:44,189 --> 00:11:50,689
first problem<font color="#E5E5E5"> is where the coverage</font>

221
00:11:46,319 --> 00:11:50,689
problem is really really important so<font color="#E5E5E5"> a</font>

222
00:11:51,979 --> 00:11:57,269
lot of<font color="#E5E5E5"> security tools like scanners</font>

223
00:11:55,109 --> 00:11:59,339
using the scrolling techniques it is<font color="#E5E5E5"> the</font>

224
00:11:57,269 --> 00:12:01,589
worst part of the scanning because in

225
00:11:59,339 --> 00:12:04,439
this case<font color="#E5E5E5"> the scanners try to emulate</font>

226
00:12:01,589 --> 00:12:06,899
browser which is<font color="#E5E5E5"> almost impossible</font><font color="#CCCCCC"> if</font>

227
00:12:04,439 --> 00:12:09,899
you<font color="#E5E5E5"> would like to use api's if you would</font>

228
00:12:06,899 --> 00:12:14,819
like to<font color="#E5E5E5"> use modern like single page web</font>

229
00:12:09,899 --> 00:12:18,449
apps<font color="#E5E5E5"> it's impossible to crawl them</font><font color="#CCCCCC"> it is</font>

230
00:12:14,819 --> 00:12:20,639
possible<font color="#CCCCCC"> to create units or regression</font>

231
00:12:18,449 --> 00:12:24,059
<font color="#E5E5E5">tests or functional tests to increase</font>

232
00:12:20,639 --> 00:12:25,769
the coverage<font color="#E5E5E5"> and then put this test to</font>

233
00:12:24,059 --> 00:12:30,839
<font color="#E5E5E5">the</font><font color="#CCCCCC"> file and it's super-super or</font><font color="#E5E5E5"> booth</font>

234
00:12:25,769 --> 00:12:34,049
part and<font color="#CCCCCC"> i'm really really</font><font color="#E5E5E5"> happy</font><font color="#CCCCCC"> to</font><font color="#E5E5E5"> say</font>

235
00:12:30,839 --> 00:12:36,869
that<font color="#E5E5E5"> it's trusted way and if you already</font>

236
00:12:34,049 --> 00:12:39,149
<font color="#E5E5E5">have</font><font color="#CCCCCC"> some</font><font color="#E5E5E5"> kind of tests it is</font><font color="#CCCCCC"> Rico for</font>

237
00:12:36,869 --> 00:12:40,859
<font color="#E5E5E5">you to try apply fighting techniques to</font>

238
00:12:39,149 --> 00:12:44,069
<font color="#CCCCCC">the existing</font><font color="#E5E5E5"> test it's definitely better</font>

239
00:12:40,859 --> 00:12:47,999
than<font color="#E5E5E5"> try to crawl</font><font color="#CCCCCC"> something in this case</font>

240
00:12:44,069 --> 00:12:50,309
<font color="#E5E5E5">we should</font><font color="#CCCCCC"> know</font><font color="#E5E5E5"> that this HTTP protocol</font>

241
00:12:47,999 --> 00:12:55,349
<font color="#E5E5E5">technically it's not only this level</font><font color="#CCCCCC"> 7</font>

242
00:12:50,309 --> 00:12:58,079
HTTP data format<font color="#E5E5E5"> we should apply</font>

243
00:12:55,349 --> 00:13:04,379
<font color="#E5E5E5">additional application logic things like</font>

244
00:12:58,079 --> 00:13:06,478
JSON<font color="#E5E5E5"> XML basics before some sort of some</font>

245
00:13:04,379 --> 00:13:10,469
<font color="#CCCCCC">sort of encapsulation formats for</font>

246
00:13:06,479 --> 00:13:13,679
example when<font color="#CCCCCC"> so basics before</font><font color="#E5E5E5"> encoded</font>

247
00:13:10,469 --> 00:13:15,539
data<font color="#CCCCCC"> put inside JSON and this father</font>

248
00:13:13,679 --> 00:13:18,499
should understand all the situation and

249
00:13:15,539 --> 00:13:20,639
should be able<font color="#E5E5E5"> to replay and crazes and</font>

250
00:13:18,499 --> 00:13:22,049
actually peg these payloads in the

251
00:13:20,639 --> 00:13:22,830
proper format<font color="#CCCCCC"> this is</font><font color="#E5E5E5"> a really huge</font>

252
00:13:22,049 --> 00:13:25,920
<font color="#CCCCCC">problem</font>

253
00:13:22,830 --> 00:13:28,680
this problem<font color="#E5E5E5"> can</font><font color="#CCCCCC"> sacrifice any benefits</font>

254
00:13:25,920 --> 00:13:32,550
from any<font color="#CCCCCC"> faisal because if you would</font>

255
00:13:28,680 --> 00:13:34,620
like to<font color="#E5E5E5"> find some some exception you</font>

256
00:13:32,550 --> 00:13:36,479
should run this application in the right

257
00:13:34,620 --> 00:13:37,740
way to run this application right<font color="#CCCCCC"> away</font>

258
00:13:36,480 --> 00:13:44,730
you<font color="#E5E5E5"> should understand</font><font color="#CCCCCC"> how this data</font>

259
00:13:37,740 --> 00:13:48,000
<font color="#E5E5E5">should looks like another one important</font>

260
00:13:44,730 --> 00:13:48,720
<font color="#CCCCCC">thing here as custom encoding and</font>

261
00:13:48,000 --> 00:13:51,000
encryption

262
00:13:48,720 --> 00:13:52,470
obviously it's impossible to cover all

263
00:13:51,000 --> 00:13:55,920
the stages it's impossible to protect

264
00:13:52,470 --> 00:13:59,790
<font color="#CCCCCC">anything it's impossible to to hack</font>

265
00:13:55,920 --> 00:14:06,560
<font color="#E5E5E5">anything it's possible to</font><font color="#CCCCCC"> hug innocent</font>

266
00:13:59,790 --> 00:14:12,140
actually sure<font color="#CCCCCC"> it's</font><font color="#E5E5E5"> impossible to find</font>

267
00:14:06,560 --> 00:14:15,689
any method<font color="#E5E5E5"> to call this app because you</font>

268
00:14:12,140 --> 00:14:19,199
<font color="#CCCCCC">have no access to to the mind of the</font>

269
00:14:15,690 --> 00:14:20,850
<font color="#E5E5E5">developer you have</font><font color="#CCCCCC"> no</font><font color="#E5E5E5"> access to if you</font>

270
00:14:19,200 --> 00:14:24,029
have an access<font color="#CCCCCC"> to source code</font><font color="#E5E5E5"> sometimes</font>

271
00:14:20,850 --> 00:14:29,029
sometimes<font color="#CCCCCC"> not</font><font color="#E5E5E5"> so but you</font><font color="#CCCCCC"> have an access</font>

272
00:14:24,029 --> 00:14:32,279
to understand how it should work<font color="#E5E5E5"> and how</font>

273
00:14:29,029 --> 00:14:34,620
custom data format could looks like I am

274
00:14:32,279 --> 00:14:37,070
<font color="#E5E5E5">Not sure that it's possible</font><font color="#CCCCCC"> to</font><font color="#E5E5E5"> solve</font>

275
00:14:34,620 --> 00:14:40,970
this problem<font color="#CCCCCC"> in some sort of way but</font>

276
00:14:37,070 --> 00:14:44,160
<font color="#CCCCCC">fathom</font><font color="#E5E5E5"> also can help out there because</font>

277
00:14:40,970 --> 00:14:46,350
<font color="#E5E5E5">sometimes fighting works well even</font><font color="#CCCCCC"> with</font>

278
00:14:44,160 --> 00:14:50,130
<font color="#E5E5E5">this unexpected</font><font color="#CCCCCC"> datatypes</font>

279
00:14:46,350 --> 00:14:52,740
with no nad is how to decode<font color="#E5E5E5"> it</font>

280
00:14:50,130 --> 00:14:55,829
that's because because<font color="#E5E5E5"> of this data</font>

281
00:14:52,740 --> 00:14:57,540
<font color="#CCCCCC">filing it's it's obvious thing</font><font color="#E5E5E5"> and last</font>

282
00:14:55,829 --> 00:15:02,069
one<font color="#CCCCCC"> is</font><font color="#E5E5E5"> the application</font><font color="#CCCCCC"> logic</font><font color="#E5E5E5"> and</font>

283
00:14:57,540 --> 00:15:04,469
different things<font color="#E5E5E5"> because we can split</font>

284
00:15:02,070 --> 00:15:10,199
all our activities<font color="#CCCCCC"> to application logic</font>

285
00:15:04,470 --> 00:15:12,570
<font color="#CCCCCC">filing and input data in fuzzy for some</font>

286
00:15:10,199 --> 00:15:14,849
sort of<font color="#CCCCCC"> input validation attacks</font><font color="#E5E5E5"> I'd</font>

287
00:15:12,570 --> 00:15:16,680
like to describe on the second one<font color="#E5E5E5"> I'm</font>

288
00:15:14,850 --> 00:15:18,480
not<font color="#E5E5E5"> sure</font><font color="#CCCCCC"> that it's possible to cover</font>

289
00:15:16,680 --> 00:15:23,279
business<font color="#E5E5E5"> logic things using these</font>

290
00:15:18,480 --> 00:15:25,320
<font color="#CCCCCC">fighting</font><font color="#E5E5E5"> techniques because because I'm</font>

291
00:15:23,279 --> 00:15:28,230
not working<font color="#CCCCCC"> on</font><font color="#E5E5E5"> it right</font><font color="#CCCCCC"> now so I'm just</font>

292
00:15:25,320 --> 00:15:30,600
<font color="#E5E5E5">trying to explain only one way to</font><font color="#CCCCCC"> to</font>

293
00:15:28,230 --> 00:15:34,840
files apps and how to<font color="#E5E5E5"> generate this</font><font color="#CCCCCC"> data</font>

294
00:15:30,600 --> 00:15:36,970
so second<font color="#E5E5E5"> problem as what</font>

295
00:15:34,840 --> 00:15:40,390
how to<font color="#E5E5E5"> generate this attack vectors and</font>

296
00:15:36,970 --> 00:15:44,860
<font color="#CCCCCC">how this unexpected data could looks</font>

297
00:15:40,390 --> 00:15:47,170
like<font color="#CCCCCC"> all the known attack vectors are</font>

298
00:15:44,860 --> 00:15:50,280
already<font color="#E5E5E5"> existing inside application</font>

299
00:15:47,170 --> 00:15:53,319
scanners vulnerability scanners<font color="#CCCCCC"> it</font><font color="#E5E5E5"> is</font>

300
00:15:50,280 --> 00:15:56,110
super super easy<font color="#E5E5E5"> just to have an access</font>

301
00:15:53,320 --> 00:15:59,980
to to<font color="#CCCCCC"> this databases</font><font color="#E5E5E5"> and apply all</font><font color="#CCCCCC"> of</font>

302
00:15:56,110 --> 00:16:03,880
them to the web apps and find something

303
00:15:59,980 --> 00:16:07,450
<font color="#E5E5E5">but generally find nothing second one is</font>

304
00:16:03,880 --> 00:16:09,160
how to<font color="#CCCCCC"> generate this random how to</font>

305
00:16:07,450 --> 00:16:13,740
<font color="#E5E5E5">generate this unexpected data just to</font>

306
00:16:09,160 --> 00:16:17,319
<font color="#E5E5E5">use some sample random or just try</font><font color="#CCCCCC"> to</font>

307
00:16:13,740 --> 00:16:22,810
try to apply each<font color="#CCCCCC"> byte from from zero to</font>

308
00:16:17,320 --> 00:16:24,220
<font color="#CCCCCC">two FF in case of simple simple fuzzing</font>

309
00:16:22,810 --> 00:16:28,209
<font color="#E5E5E5">one by the true by</font><font color="#CCCCCC"> F I think it's</font>

310
00:16:24,220 --> 00:16:29,860
possible<font color="#E5E5E5"> it's a really useful thing so I</font>

311
00:16:28,210 --> 00:16:33,970
just recommend to you<font color="#CCCCCC"> to use this</font>

312
00:16:29,860 --> 00:16:35,500
technique<font color="#E5E5E5"> if you have</font><font color="#CCCCCC"> time at E and in</font>

313
00:16:33,970 --> 00:16:37,750
case when you would<font color="#E5E5E5"> like to increase</font>

314
00:16:35,500 --> 00:16:40,810
<font color="#E5E5E5">your</font><font color="#CCCCCC"> coverage</font><font color="#E5E5E5"> and find new issues I'll</font>

315
00:16:37,750 --> 00:16:45,040
show you some example in<font color="#E5E5E5"> next couple of</font>

316
00:16:40,810 --> 00:16:46,780
slides<font color="#CCCCCC"> you own abilities</font><font color="#E5E5E5"> means new</font>

317
00:16:45,040 --> 00:16:48,969
payloads<font color="#CCCCCC"> it is really important thing</font>

318
00:16:46,780 --> 00:16:52,089
<font color="#E5E5E5">because I'm not sure that we can call</font>

319
00:16:48,970 --> 00:16:54,310
something<font color="#E5E5E5"> like the same sequel injection</font>

320
00:16:52,090 --> 00:16:56,260
and different like API methods as a

321
00:16:54,310 --> 00:16:58,540
zero-day technically it's not<font color="#E5E5E5"> a</font><font color="#CCCCCC"> zero-day</font>

322
00:16:56,260 --> 00:17:01,420
it's<font color="#CCCCCC"> it's it could we can call it like</font>

323
00:16:58,540 --> 00:17:03,819
<font color="#E5E5E5">zero day for particular app but not it's</font>

324
00:17:01,420 --> 00:17:06,730
not<font color="#E5E5E5"> like a zero day in in general</font><font color="#CCCCCC"> case</font>

325
00:17:03,820 --> 00:17:11,410
and so all<font color="#CCCCCC"> this input validation things</font>

326
00:17:06,730 --> 00:17:14,650
means new payloads and<font color="#E5E5E5"> we again have the</font>

327
00:17:11,410 --> 00:17:17,709
<font color="#CCCCCC">same problem to</font><font color="#E5E5E5"> determine what is the</font>

328
00:17:14,650 --> 00:17:21,370
<font color="#E5E5E5">behaviour and how to identify business</font>

329
00:17:17,709 --> 00:17:24,760
<font color="#E5E5E5">logic things I have no any proper answer</font>

330
00:17:21,369 --> 00:17:26,409
now and I'd<font color="#E5E5E5"> like to just</font><font color="#CCCCCC"> do</font><font color="#E5E5E5"> describe and</font>

331
00:17:24,760 --> 00:17:28,480
explain only<font color="#E5E5E5"> this input validation</font>

332
00:17:26,410 --> 00:17:31,090
things and how<font color="#E5E5E5"> to generate</font><font color="#CCCCCC"> this input</font>

333
00:17:28,480 --> 00:17:35,260
<font color="#E5E5E5">validation payloads using neural</font>

334
00:17:31,090 --> 00:17:38,169
networks<font color="#CCCCCC"> and the last one how</font><font color="#E5E5E5"> to how to</font>

335
00:17:35,260 --> 00:17:40,870
<font color="#E5E5E5">interpret the results sometimes things</font>

336
00:17:38,170 --> 00:17:44,470
could looks like same for<font color="#E5E5E5"> example this</font>

337
00:17:40,870 --> 00:17:46,899
poodles looks like chickens is like dogs

338
00:17:44,470 --> 00:17:48,310
looks like these cakes<font color="#CCCCCC"> that it</font><font color="#E5E5E5"> looks</font>

339
00:17:46,900 --> 00:17:50,590
like<font color="#E5E5E5"> same</font><font color="#CCCCCC"> bye</font>

340
00:17:48,310 --> 00:17:53,379
with<font color="#E5E5E5"> different</font><font color="#CCCCCC"> results</font><font color="#E5E5E5"> which gives us</font>

341
00:17:50,590 --> 00:17:56,560
false positives<font color="#E5E5E5"> obviously if you try to</font>

342
00:17:53,380 --> 00:17:59,010
run<font color="#CCCCCC"> Seco</font><font color="#E5E5E5"> map sometimes</font><font color="#CCCCCC"> or as a father</font>

343
00:17:56,560 --> 00:18:01,870
<font color="#E5E5E5">all</font><font color="#CCCCCC"> right other scanners or</font><font color="#E5E5E5"> fuzzing</font>

344
00:17:59,010 --> 00:18:02,740
techniques you definitely know what<font color="#E5E5E5"> I'm</font>

345
00:18:01,870 --> 00:18:06,340
talking about

346
00:18:02,740 --> 00:18:09,130
it is sometimes it's possible to cause a

347
00:18:06,340 --> 00:18:11,820
crash inside<font color="#E5E5E5"> the app but not because of</font>

348
00:18:09,130 --> 00:18:14,440
your<font color="#CCCCCC"> pay lot but because of your like</font>

349
00:18:11,820 --> 00:18:17,350
performance<font color="#E5E5E5"> of your scanner or phazon</font>

350
00:18:14,440 --> 00:18:19,750
and it's possible<font color="#E5E5E5"> to just take off the</font>

351
00:18:17,350 --> 00:18:25,179
web app<font color="#E5E5E5"> using some sort of scanner and</font>

352
00:18:19,750 --> 00:18:28,300
all the checks will will notify you yet

353
00:18:25,180 --> 00:18:31,240
so<font color="#E5E5E5"> you already</font><font color="#CCCCCC"> create the app we are</font>

354
00:18:28,300 --> 00:18:33,700
like<font color="#E5E5E5"> winners we can run sequel injection</font>

355
00:18:31,240 --> 00:18:35,680
payload based on time<font color="#CCCCCC"> base</font><font color="#E5E5E5"> now we can</font>

356
00:18:33,700 --> 00:18:41,530
<font color="#E5E5E5">steal some sort of data but it's not</font>

357
00:18:35,680 --> 00:18:43,510
true<font color="#CCCCCC"> and it is</font><font color="#E5E5E5"> also super super usual</font>

358
00:18:41,530 --> 00:18:46,570
<font color="#CCCCCC">task for machine learning to automate</font>

359
00:18:43,510 --> 00:18:48,970
these kind of problems but it's not them

360
00:18:46,570 --> 00:18:51,550
of this like talk I<font color="#E5E5E5"> just would like to</font>

361
00:18:48,970 --> 00:18:53,860
<font color="#E5E5E5">talk how to generate attack payloads</font>

362
00:18:51,550 --> 00:18:59,500
using<font color="#E5E5E5"> neural network and it's all it's</font>

363
00:18:53,860 --> 00:19:02,139
not super super hard<font color="#CCCCCC"> to abroad salary</font><font color="#E5E5E5"> to</font>

364
00:18:59,500 --> 00:19:04,330
to<font color="#E5E5E5"> cross the</font><font color="#CCCCCC"> rice traffic to go</font><font color="#E5E5E5"> stress</font>

365
00:19:02,140 --> 00:19:06,460
responses to make some<font color="#E5E5E5"> suggestions how</font>

366
00:19:04,330 --> 00:19:09,429
the<font color="#E5E5E5"> normal data and normal responses</font>

367
00:19:06,460 --> 00:19:12,190
<font color="#CCCCCC">could</font><font color="#E5E5E5"> looks like and probably I'll do</font>

368
00:19:09,430 --> 00:19:14,650
this in future<font color="#E5E5E5"> and at the same approach</font>

369
00:19:12,190 --> 00:19:18,040
to<font color="#E5E5E5"> the same father but so</font><font color="#CCCCCC"> I'm not</font>

370
00:19:14,650 --> 00:19:29,770
<font color="#E5E5E5">working at</font><font color="#CCCCCC"> the same thing yet and so and</font>

371
00:19:18,040 --> 00:19:32,440
this<font color="#E5E5E5"> like so problem of how to reproduce</font>

372
00:19:29,770 --> 00:19:34,270
<font color="#E5E5E5">the situation and how to create some</font>

373
00:19:32,440 --> 00:19:36,100
kind of repeatable<font color="#E5E5E5"> staged repeatable</font>

374
00:19:34,270 --> 00:19:37,720
payload and repeatable results is<font color="#E5E5E5"> also</font>

375
00:19:36,100 --> 00:19:42,129
important and<font color="#E5E5E5"> also included in this</font>

376
00:19:37,720 --> 00:19:44,650
thing so<font color="#CCCCCC"> we have</font><font color="#E5E5E5"> three main problem in</font>

377
00:19:42,130 --> 00:19:55,630
<font color="#CCCCCC">thousand</font><font color="#E5E5E5"> kids where what and how and</font>

378
00:19:44,650 --> 00:19:57,970
this talk only<font color="#CCCCCC"> it's about what</font><font color="#E5E5E5"> so how to</font>

379
00:19:55,630 --> 00:20:00,970
generate a loads<font color="#E5E5E5"> and how to use</font><font color="#CCCCCC"> an arrow</font>

380
00:19:57,970 --> 00:20:02,080
<font color="#CCCCCC">network</font><font color="#E5E5E5"> to increase the coverage so now</font>

381
00:20:00,970 --> 00:20:04,150
I try<font color="#CCCCCC"> to</font>

382
00:20:02,080 --> 00:20:09,490
explain how<font color="#E5E5E5"> this architecture of this</font>

383
00:20:04,150 --> 00:20:11,590
<font color="#E5E5E5">wasn't</font><font color="#CCCCCC"> too good looks like</font><font color="#E5E5E5"> to solve this</font>

384
00:20:09,490 --> 00:20:13,420
<font color="#E5E5E5">problem with where we should put the</font>

385
00:20:11,590 --> 00:20:17,709
<font color="#CCCCCC">pillows</font><font color="#E5E5E5"> I suggest to use just simple</font>

386
00:20:13,420 --> 00:20:21,270
proxy and so<font color="#E5E5E5"> analyze manual tests manual</font>

387
00:20:17,710 --> 00:20:25,800
requests requests<font color="#E5E5E5"> from some sort of</font>

388
00:20:21,270 --> 00:20:29,470
automated tests and other things<font color="#E5E5E5"> and</font>

389
00:20:25,800 --> 00:20:32,110
<font color="#CCCCCC">catch these requests</font><font color="#E5E5E5"> and apply some kind</font>

390
00:20:29,470 --> 00:20:34,540
<font color="#E5E5E5">of fuzzy or AAA generated payloads there</font>

391
00:20:32,110 --> 00:20:36,879
and send it<font color="#CCCCCC"> to the application</font><font color="#E5E5E5"> it's</font>

392
00:20:34,540 --> 00:20:39,100
possible<font color="#E5E5E5"> to</font><font color="#CCCCCC"> collect all</font><font color="#E5E5E5"> the requests by</font>

393
00:20:36,880 --> 00:20:40,840
a test it's possible to apply all the

394
00:20:39,100 --> 00:20:43,780
<font color="#E5E5E5">files and policies including neural</font>

395
00:20:40,840 --> 00:20:53,709
network<font color="#E5E5E5"> policies and it's possible to</font>

396
00:20:43,780 --> 00:20:56,830
<font color="#CCCCCC">generate like a lot of tests at my</font><font color="#E5E5E5"> point</font>

397
00:20:53,710 --> 00:20:58,960
of<font color="#CCCCCC"> views a good</font><font color="#E5E5E5"> multiplication</font>

398
00:20:56,830 --> 00:21:01,720
multiplicator here could be<font color="#E5E5E5"> ten</font>

399
00:20:58,960 --> 00:21:05,380
thousands and run all of<font color="#E5E5E5"> them and try to</font>

400
00:21:01,720 --> 00:21:07,060
understand the<font color="#CCCCCC"> results and it's possible</font>

401
00:21:05,380 --> 00:21:09,690
<font color="#E5E5E5">to Chris happens is for as well as</font>

402
00:21:07,060 --> 00:21:12,520
<font color="#E5E5E5">always sir</font>

403
00:21:09,690 --> 00:21:16,050
<font color="#CCCCCC">where problem should be solved by just</font>

404
00:21:12,520 --> 00:21:21,190
proxy and I believe<font color="#CCCCCC"> that it's</font><font color="#E5E5E5"> only one</font>

405
00:21:16,050 --> 00:21:23,440
so useful<font color="#E5E5E5"> way if you walk in with</font><font color="#CCCCCC"> lab</font>

406
00:21:21,190 --> 00:21:26,800
apps you know of that<font color="#E5E5E5"> verb and this idea</font>

407
00:21:23,440 --> 00:21:29,290
<font color="#E5E5E5">to repeat some sort of data using verb</font>

408
00:21:26,800 --> 00:21:32,440
<font color="#E5E5E5">run intruder apply some fuzzing</font>

409
00:21:29,290 --> 00:21:34,210
techniques there is really works well to

410
00:21:32,440 --> 00:21:36,580
<font color="#E5E5E5">soap water I suggest to use neural</font>

411
00:21:34,210 --> 00:21:39,940
networks here and to<font color="#E5E5E5"> analyze the results</font>

412
00:21:36,580 --> 00:21:43,090
<font color="#CCCCCC">and to solve this like</font><font color="#E5E5E5"> how problems</font>

413
00:21:39,940 --> 00:21:48,850
there I suggest to use nothing<font color="#CCCCCC"> actually</font>

414
00:21:43,090 --> 00:21:53,409
just just<font color="#E5E5E5"> your just your mind and how to</font>

415
00:21:48,850 --> 00:21:58,179
fuss my personal top<font color="#CCCCCC"> 6,000 techniques</font>

416
00:21:53,410 --> 00:22:02,200
for the web apps as try to modify last

417
00:21:58,180 --> 00:22:07,990
<font color="#CCCCCC">byte like try</font><font color="#E5E5E5"> to apply each of</font><font color="#CCCCCC"> them from</font>

418
00:22:02,200 --> 00:22:10,120
<font color="#CCCCCC">0 to 5 try to modify random byte inside</font>

419
00:22:07,990 --> 00:22:13,960
inside your strings<font color="#E5E5E5"> with within animal</font>

420
00:22:10,120 --> 00:22:15,439
<font color="#E5E5E5">data at a proxy it really works well try</font>

421
00:22:13,960 --> 00:22:20,500
to add new

422
00:22:15,440 --> 00:22:24,259
at the end like what and try to apply

423
00:22:20,500 --> 00:22:27,879
parameters<font color="#E5E5E5"> from one and point two other</font>

424
00:22:24,259 --> 00:22:33,950
standpoint<font color="#CCCCCC"> it's really works sometimes</font>

425
00:22:27,879 --> 00:22:36,740
<font color="#E5E5E5">so number five has tried</font><font color="#CCCCCC"> to play with</font>

426
00:22:33,950 --> 00:22:39,110
<font color="#CCCCCC">numbers if you</font><font color="#E5E5E5"> see some kind of number</font>

427
00:22:36,740 --> 00:22:43,399
try to<font color="#E5E5E5"> increase or decrease this</font><font color="#CCCCCC"> number</font>

428
00:22:39,110 --> 00:22:48,019
and last one is try to apply some<font color="#E5E5E5"> kind</font>

429
00:22:43,399 --> 00:22:50,719
of existing file names<font color="#E5E5E5"> for example from</font>

430
00:22:48,019 --> 00:22:54,910
our fast<font color="#CCCCCC"> XD project</font><font color="#E5E5E5"> available</font><font color="#CCCCCC"> at github</font>

431
00:22:50,720 --> 00:22:57,200
<font color="#E5E5E5">to identify some kind of I</font><font color="#CCCCCC"> don't</font><font color="#E5E5E5"> know</font>

432
00:22:54,910 --> 00:23:01,929
[Music]

433
00:22:57,200 --> 00:23:05,000
data or just just find some files<font color="#E5E5E5"> at the</font>

434
00:23:01,929 --> 00:23:08,029
folder or<font color="#CCCCCC"> its root folder or somewhere</font>

435
00:23:05,000 --> 00:23:10,700
<font color="#E5E5E5">and I can claim that</font><font color="#CCCCCC"> all these things</font>

436
00:23:08,029 --> 00:23:12,980
could<font color="#E5E5E5"> be covered by neural networks now</font>

437
00:23:10,700 --> 00:23:16,549
and it's possible<font color="#E5E5E5"> to generate all these</font>

438
00:23:12,980 --> 00:23:19,210
payloads<font color="#E5E5E5"> using neural networks even more</font>

439
00:23:16,549 --> 00:23:23,029
it is possible to<font color="#CCCCCC"> apply</font><font color="#E5E5E5"> the right</font>

440
00:23:19,210 --> 00:23:28,149
payload in the right case<font color="#CCCCCC"> for example it</font>

441
00:23:23,029 --> 00:23:33,889
is when we are<font color="#CCCCCC"> working with some sort of</font>

442
00:23:28,149 --> 00:23:38,178
web app by manually we definitely look

443
00:23:33,889 --> 00:23:41,809
at the normal data right<font color="#E5E5E5"> if you see that</font>

444
00:23:38,179 --> 00:23:45,769
<font color="#E5E5E5">somebody like application</font><font color="#CCCCCC"> or as a user</font>

445
00:23:41,809 --> 00:23:48,200
<font color="#CCCCCC">already put it's some sort of HTML</font><font color="#E5E5E5"> text</font>

446
00:23:45,769 --> 00:23:51,740
in this particular<font color="#E5E5E5"> field and it's normal</font>

447
00:23:48,200 --> 00:23:54,440
for the app I'm not sure that<font color="#E5E5E5"> it's</font>

448
00:23:51,740 --> 00:23:56,870
reasonable to<font color="#E5E5E5"> put some kind of XSS</font>

449
00:23:54,440 --> 00:24:00,590
payloads there because it<font color="#E5E5E5"> is normal</font>

450
00:23:56,870 --> 00:24:04,309
<font color="#E5E5E5">behavior and obviously so this app just</font>

451
00:24:00,590 --> 00:24:06,918
was created<font color="#E5E5E5"> to to have some sort of HTML</font>

452
00:24:04,309 --> 00:24:10,418
data<font color="#E5E5E5"> in this field if it is like PHP my</font>

453
00:24:06,919 --> 00:24:13,009
admin or some kind<font color="#E5E5E5"> of</font><font color="#CCCCCC"> sequel</font>

454
00:24:10,419 --> 00:24:15,080
administration panel<font color="#CCCCCC"> it's definitely bad</font>

455
00:24:13,009 --> 00:24:16,700
<font color="#E5E5E5">idea to apply some sort of sequel</font>

456
00:24:15,080 --> 00:24:19,189
injection payloads there because it's

457
00:24:16,700 --> 00:24:22,309
normal it's<font color="#E5E5E5"> normal function to this app</font>

458
00:24:19,190 --> 00:24:24,070
to have some sort<font color="#E5E5E5"> of sequel sequel</font>

459
00:24:22,309 --> 00:24:27,590
<font color="#CCCCCC">comments in this particular field and</font>

460
00:24:24,070 --> 00:24:28,620
it's<font color="#E5E5E5"> it is possible to</font><font color="#CCCCCC"> put</font><font color="#E5E5E5"> all these</font>

461
00:24:27,590 --> 00:24:31,320
<font color="#CCCCCC">things inside the</font>

462
00:24:28,620 --> 00:24:38,309
father and<font color="#E5E5E5"> applied neural networks to to</font>

463
00:24:31,320 --> 00:24:40,800
do not do<font color="#E5E5E5"> useless job so a few words</font>

464
00:24:38,309 --> 00:24:48,330
about neural<font color="#CCCCCC"> networks it's it's it's</font>

465
00:24:40,800 --> 00:24:52,950
super<font color="#E5E5E5"> of us</font><font color="#CCCCCC"> I really</font><font color="#E5E5E5"> so shoes that you</font>

466
00:24:48,330 --> 00:24:55,080
<font color="#CCCCCC">already know what is it so some</font><font color="#E5E5E5"> years</font>

467
00:24:52,950 --> 00:24:58,050
ago<font color="#E5E5E5"> a few</font><font color="#CCCCCC"> years ago actually</font><font color="#E5E5E5"> people</font>

468
00:24:55,080 --> 00:25:01,710
started to apply neural networks<font color="#E5E5E5"> widely</font>

469
00:24:58,050 --> 00:25:05,190
and this<font color="#E5E5E5"> idea to to put some data can</font>

470
00:25:01,710 --> 00:25:08,550
exam some sort of objects called<font color="#E5E5E5"> neurons</font>

471
00:25:05,190 --> 00:25:11,940
with with ability to to do some sort<font color="#E5E5E5"> of</font>

472
00:25:08,550 --> 00:25:16,200
super super easy job to<font color="#E5E5E5"> pass signals</font>

473
00:25:11,940 --> 00:25:20,850
<font color="#E5E5E5">through in case of combinations of</font>

474
00:25:16,200 --> 00:25:24,240
inputs or do<font color="#E5E5E5"> nothing and so funny things</font>

475
00:25:20,850 --> 00:25:27,110
there as if you would like to<font color="#E5E5E5"> connect</font>

476
00:25:24,240 --> 00:25:29,670
many of them the results could be

477
00:25:27,110 --> 00:25:32,899
unexpected by the<font color="#E5E5E5"> quality it's</font>

478
00:25:29,670 --> 00:25:37,110
<font color="#E5E5E5">impossible to we have no necessary now</font>

479
00:25:32,900 --> 00:25:39,870
<font color="#E5E5E5">why</font><font color="#CCCCCC"> this narrow networks works well it's</font>

480
00:25:37,110 --> 00:25:44,159
<font color="#E5E5E5">possible to a lot of people just try to</font>

481
00:25:39,870 --> 00:25:47,129
<font color="#E5E5E5">explain how it works and why the results</font>

482
00:25:44,160 --> 00:25:50,570
could be like unpredictable and pretty

483
00:25:47,130 --> 00:25:54,120
difficult good<font color="#E5E5E5"> but anyway it works and</font>

484
00:25:50,570 --> 00:25:57,120
<font color="#E5E5E5">actually it's only one thing which we</font>

485
00:25:54,120 --> 00:25:59,399
<font color="#CCCCCC">should know to to apply some</font><font color="#E5E5E5"> sort of</font>

486
00:25:57,120 --> 00:26:03,870
techniques<font color="#E5E5E5"> it works and it works</font><font color="#CCCCCC"> well</font>

487
00:25:59,400 --> 00:26:06,420
for fighting techniques since<font color="#E5E5E5"> our</font><font color="#CCCCCC"> goal</font>

488
00:26:03,870 --> 00:26:12,959
is to<font color="#E5E5E5"> try to generate some kind of</font>

489
00:26:06,420 --> 00:26:16,440
unexpected<font color="#CCCCCC"> it if it is even not required</font>

490
00:26:12,960 --> 00:26:19,110
to<font color="#CCCCCC"> be sure that some sort of techniques</font>

491
00:26:16,440 --> 00:26:20,850
works well to apply it at<font color="#CCCCCC"> phazon</font><font color="#E5E5E5"> if you</font>

492
00:26:19,110 --> 00:26:22,590
would like<font color="#CCCCCC"> to use your CAD to to</font>

493
00:26:20,850 --> 00:26:26,040
generate<font color="#CCCCCC"> some payloads you should do it</font>

494
00:26:22,590 --> 00:26:27,809
<font color="#CCCCCC">just because it works somehow it could</font>

495
00:26:26,040 --> 00:26:30,178
works well or not it doesn't matter

496
00:26:27,809 --> 00:26:32,580
<font color="#CCCCCC">them so far and do</font><font color="#E5E5E5"> anything so because</font>

497
00:26:30,179 --> 00:26:38,070
<font color="#E5E5E5">of the</font><font color="#CCCCCC"> fiber gets like super birthing</font>

498
00:26:32,580 --> 00:26:40,020
<font color="#E5E5E5">and so obviously to to to be</font><font color="#CCCCCC"> able</font><font color="#E5E5E5"> to</font>

499
00:26:38,070 --> 00:26:42,080
generate<font color="#CCCCCC"> something with the context we</font>

500
00:26:40,020 --> 00:26:46,309
should apply your current

501
00:26:42,080 --> 00:26:51,010
<font color="#E5E5E5">networks the difference as it is</font><font color="#CCCCCC"> some</font><font color="#E5E5E5"> a</font>

502
00:26:46,309 --> 00:26:53,690
way<font color="#E5E5E5"> to put</font><font color="#CCCCCC"> unrestricted data like we</font>

503
00:26:51,010 --> 00:26:56,000
data with no restricted size

504
00:26:53,690 --> 00:26:58,789
I don't know obviously our<font color="#CCCCCC"> Father should</font>

505
00:26:56,000 --> 00:27:00,620
should<font color="#E5E5E5"> be able</font><font color="#CCCCCC"> to generate 1 byte 4</font>

506
00:26:58,789 --> 00:27:03,470
bytes payloads I don't know 60 byte

507
00:27:00,620 --> 00:27:05,779
payloads with no modification<font color="#E5E5E5"> right and</font>

508
00:27:03,470 --> 00:27:07,519
to solve this problem<font color="#CCCCCC"> we should use</font>

509
00:27:05,779 --> 00:27:09,799
recurrent neural networks we<font color="#CCCCCC"> have no any</font>

510
00:27:07,519 --> 00:27:12,830
other way<font color="#E5E5E5"> and for example it's possible</font>

511
00:27:09,799 --> 00:27:15,590
<font color="#CCCCCC">to generate</font><font color="#E5E5E5"> payloads by by byte and it's</font>

512
00:27:12,830 --> 00:27:19,519
my approach and so I<font color="#CCCCCC"> believe that</font><font color="#E5E5E5"> it's</font>

513
00:27:15,590 --> 00:27:22,340
super super super useful<font color="#E5E5E5"> thing the</font>

514
00:27:19,519 --> 00:27:24,529
difference<font color="#CCCCCC"> as neurons inside recurrent</font>

515
00:27:22,340 --> 00:27:27,230
neural networks have this ability to

516
00:27:24,529 --> 00:27:33,309
<font color="#E5E5E5">store some sort of data and call</font>

517
00:27:27,230 --> 00:27:36,679
themselves and we have actually

518
00:27:33,309 --> 00:27:39,408
<font color="#E5E5E5">different ways how to create</font><font color="#CCCCCC"> this</font>

519
00:27:36,679 --> 00:27:43,159
recurrent neural networks using some

520
00:27:39,409 --> 00:27:46,610
some sort<font color="#E5E5E5"> of existing frameworks let me</font>

521
00:27:43,159 --> 00:27:50,419
please explain<font color="#CCCCCC"> how to do it first one is</font>

522
00:27:46,610 --> 00:27:53,809
<font color="#E5E5E5">our stem or</font><font color="#CCCCCC"> one-shot memory unit first</font>

523
00:27:50,419 --> 00:27:55,700
my pictures here anyway<font color="#E5E5E5"> so just</font><font color="#CCCCCC"> with the</font>

524
00:27:53,809 --> 00:28:00,440
link if<font color="#CCCCCC"> you'd</font><font color="#E5E5E5"> like to know more this</font>

525
00:27:55,700 --> 00:28:06,279
thing's have<font color="#CCCCCC"> 3</font><font color="#E5E5E5"> Jade's</font><font color="#CCCCCC"> Jade means some</font>

526
00:28:00,440 --> 00:28:13,700
sort<font color="#CCCCCC"> of some</font><font color="#E5E5E5"> sort of variable to store a</font>

527
00:28:06,279 --> 00:28:18,590
number<font color="#CCCCCC"> and in some cases</font><font color="#E5E5E5"> when the input</font>

528
00:28:13,700 --> 00:28:20,950
data can trigger this gate the gate

529
00:28:18,590 --> 00:28:26,539
should do some some<font color="#E5E5E5"> sort of job and</font>

530
00:28:20,950 --> 00:28:29,149
<font color="#E5E5E5">launch short memory unit</font><font color="#CCCCCC"> a recurrent</font>

531
00:28:26,539 --> 00:28:32,960
neural network we have<font color="#CCCCCC"> 3 Jade's one Jade</font>

532
00:28:29,149 --> 00:28:36,018
for input data<font color="#CCCCCC"> to open and so close this</font>

533
00:28:32,960 --> 00:28:39,679
<font color="#CCCCCC">ability to receive</font><font color="#E5E5E5"> data from input that</font>

534
00:28:36,019 --> 00:28:41,690
is forget gate to<font color="#E5E5E5"> be able</font><font color="#CCCCCC"> to</font><font color="#E5E5E5"> forget all</font>

535
00:28:39,679 --> 00:28:44,630
the information<font color="#CCCCCC"> about previous previous</font>

536
00:28:41,690 --> 00:28:47,000
states<font color="#E5E5E5"> of this network and second one</font>

537
00:28:44,630 --> 00:28:50,360
Jade is output gate to<font color="#E5E5E5"> be able to open</font>

538
00:28:47,000 --> 00:28:54,550
<font color="#E5E5E5">or</font><font color="#CCCCCC"> close this ability to like</font><font color="#E5E5E5"> January</font>

539
00:28:50,360 --> 00:28:57,070
<font color="#E5E5E5">data from this it is old</font>

540
00:28:54,550 --> 00:29:00,790
super<font color="#E5E5E5"> old-fashioned way to create neural</font>

541
00:28:57,070 --> 00:29:03,669
network<font color="#CCCCCC"> neural networks based based on</font>

542
00:29:00,790 --> 00:29:07,020
<font color="#E5E5E5">these recurrent things before this Alice</font>

543
00:29:03,670 --> 00:29:09,550
TM people just tried to<font color="#E5E5E5"> apply vanilla</font>

544
00:29:07,020 --> 00:29:13,600
<font color="#E5E5E5">recurrent neural net with no memory</font><font color="#CCCCCC"> toll</font>

545
00:29:09,550 --> 00:29:15,700
and it was it was super super<font color="#E5E5E5"> cool to</font>

546
00:29:13,600 --> 00:29:18,100
solve<font color="#E5E5E5"> simple tasks but if you would like</font>

547
00:29:15,700 --> 00:29:20,920
to<font color="#E5E5E5"> solve some kind of situation with the</font>

548
00:29:18,100 --> 00:29:23,379
<font color="#CCCCCC">stays I'll show you</font><font color="#E5E5E5"> and a few slides</font>

549
00:29:20,920 --> 00:29:25,810
<font color="#E5E5E5">how how how it looks like and fastened</font>

550
00:29:23,380 --> 00:29:27,610
<font color="#E5E5E5">it's impossible to use</font><font color="#CCCCCC"> vanillin or</font>

551
00:29:25,810 --> 00:29:29,500
recurrent neural networks and<font color="#E5E5E5"> people</font>

552
00:29:27,610 --> 00:29:31,449
<font color="#E5E5E5">just using</font><font color="#CCCCCC"> something with the memory</font><font color="#E5E5E5"> we</font>

553
00:29:29,500 --> 00:29:34,780
should do<font color="#E5E5E5"> something with the memory and</font>

554
00:29:31,450 --> 00:29:39,760
it's<font color="#CCCCCC"> obvious and second one way is to</font>

555
00:29:34,780 --> 00:29:46,480
<font color="#CCCCCC">using j2 current unit so a few years</font><font color="#E5E5E5"> ago</font>

556
00:29:39,760 --> 00:29:49,480
I<font color="#E5E5E5"> guess two or three years ago</font><font color="#CCCCCC"> oh no it</font>

557
00:29:46,480 --> 00:29:54,190
<font color="#E5E5E5">was actually it was it and at</font><font color="#CCCCCC"> the</font><font color="#E5E5E5"> end of</font>

558
00:29:49,480 --> 00:29:56,890
<font color="#E5E5E5">19th some really smart people suggested</font>

559
00:29:54,190 --> 00:30:01,060
to do do you<font color="#E5E5E5"> know what just cut one gate</font>

560
00:29:56,890 --> 00:30:05,440
here we have<font color="#E5E5E5"> three Jade's to be faster</font>

561
00:30:01,060 --> 00:30:07,720
we should cut one gate that is super

562
00:30:05,440 --> 00:30:10,950
<font color="#E5E5E5">cool think we should reinvent a little</font>

563
00:30:07,720 --> 00:30:14,290
bit structure of two different gates<font color="#E5E5E5"> and</font>

564
00:30:10,950 --> 00:30:15,760
so we should apply new new training

565
00:30:14,290 --> 00:30:19,810
<font color="#CCCCCC">techniques to be</font><font color="#E5E5E5"> able to train this</font>

566
00:30:15,760 --> 00:30:25,720
<font color="#E5E5E5">thing but drew is kind of</font><font color="#CCCCCC"> a listeria</font>

567
00:30:19,810 --> 00:30:28,780
<font color="#E5E5E5">with two days and so</font><font color="#CCCCCC"> we have update and</font>

568
00:30:25,720 --> 00:30:31,840
reset gates here reset gates gate it's

569
00:30:28,780 --> 00:30:34,240
kind of forget gate and update gate is a

570
00:30:31,840 --> 00:30:39,429
kind of something between input and

571
00:30:34,240 --> 00:30:41,590
output<font color="#E5E5E5"> gate</font><font color="#CCCCCC"> it is</font><font color="#E5E5E5"> faster and the results</font>

572
00:30:39,430 --> 00:30:47,250
and<font color="#E5E5E5"> the quality is almost the same as</font>

573
00:30:41,590 --> 00:30:51,490
our stem and this year<font color="#CCCCCC"> tens are</font><font color="#E5E5E5"> floor</font>

574
00:30:47,250 --> 00:30:53,880
released new way do you<font color="#E5E5E5"> know</font><font color="#CCCCCC"> how they</font>

575
00:30:51,490 --> 00:30:56,740
just cut it another one<font color="#E5E5E5"> gate we have</font>

576
00:30:53,880 --> 00:30:59,500
update<font color="#E5E5E5"> Jade</font><font color="#CCCCCC"> error in</font><font color="#E5E5E5"> the</font><font color="#CCCCCC"> nan</font><font color="#E5E5E5"> now with</font>

577
00:30:56,740 --> 00:31:01,840
only one gate inside it's something at

578
00:30:59,500 --> 00:31:04,180
the middle between vanilla recurrent

579
00:31:01,840 --> 00:31:05,830
neural networks is no jatis<font color="#E5E5E5"> Jade's</font>

580
00:31:04,180 --> 00:31:09,249
at all

581
00:31:05,830 --> 00:31:12,220
so<font color="#E5E5E5"> lsdm with three</font><font color="#CCCCCC"> jets</font><font color="#E5E5E5"> on</font><font color="#CCCCCC"> leave on Jade</font>

582
00:31:09,249 --> 00:31:15,960
<font color="#E5E5E5">called update Jade it's not like</font><font color="#CCCCCC"> updates</font>

583
00:31:12,220 --> 00:31:20,169
and<font color="#CCCCCC"> received our</font><font color="#E5E5E5"> said Jade</font><font color="#CCCCCC"> it's one Jade</font>

584
00:31:15,960 --> 00:31:22,570
<font color="#CCCCCC">one gate with ability</font><font color="#E5E5E5"> to store data to</font>

585
00:31:20,169 --> 00:31:27,730
store the state<font color="#E5E5E5"> and to reset the state</font>

586
00:31:22,570 --> 00:31:32,230
in some case the main idea<font color="#E5E5E5"> is when we</font>

587
00:31:27,730 --> 00:31:37,239
have no to store we able<font color="#CCCCCC"> to reset the</font>

588
00:31:32,230 --> 00:31:39,700
state<font color="#E5E5E5"> it's it's super blessing it's</font>

589
00:31:37,239 --> 00:31:43,239
available since<font color="#CCCCCC"> lost</font><font color="#E5E5E5"> version of</font><font color="#CCCCCC"> tensor</font>

590
00:31:39,700 --> 00:31:45,389
flow<font color="#CCCCCC"> 1.3 and it's easy</font><font color="#E5E5E5"> to train for</font>

591
00:31:43,239 --> 00:31:48,669
<font color="#CCCCCC">high-stakes architectures and just</font>

592
00:31:45,389 --> 00:31:51,850
Google reads this paper<font color="#E5E5E5"> and so explain</font>

593
00:31:48,669 --> 00:31:55,330
us<font color="#CCCCCC"> how this like Yugi</font><font color="#E5E5E5"> Aaron and</font><font color="#CCCCCC"> Anne</font>

594
00:31:51,850 --> 00:31:57,428
could<font color="#E5E5E5"> looks like to make this training</font>

595
00:31:55,330 --> 00:32:01,178
<font color="#E5E5E5">process for</font><font color="#CCCCCC"> high-stakes recurrent neural</font>

596
00:31:57,429 --> 00:32:02,559
networks faster and so as I mentioned

597
00:32:01,179 --> 00:32:05,200
before<font color="#E5E5E5"> it's some kind of compromise</font>

598
00:32:02,559 --> 00:32:06,908
<font color="#E5E5E5">before so sorry</font>

599
00:32:05,200 --> 00:32:09,609
it's kind of<font color="#E5E5E5"> something between vanilla</font>

600
00:32:06,909 --> 00:32:12,070
onion and and<font color="#E5E5E5"> Alice team so I guess</font>

601
00:32:09,609 --> 00:32:18,689
<font color="#CCCCCC">already so always uses compromise</font><font color="#E5E5E5"> a lot</font>

602
00:32:12,070 --> 00:32:21,309
so now we<font color="#CCCCCC"> should suggest</font><font color="#E5E5E5"> how to apply</font>

603
00:32:18,690 --> 00:32:23,230
<font color="#E5E5E5">all this knowledge is about neural</font>

604
00:32:21,309 --> 00:32:25,450
<font color="#CCCCCC">networks recurrent neural networks</font><font color="#E5E5E5"> and</font>

605
00:32:23,230 --> 00:32:28,149
<font color="#E5E5E5">fastened</font><font color="#CCCCCC"> inside the phasing to solve</font>

606
00:32:25,450 --> 00:32:30,399
this<font color="#E5E5E5"> problem we should create some</font><font color="#CCCCCC"> kind</font>

607
00:32:28,149 --> 00:32:32,969
<font color="#E5E5E5">of topology or architecture of these</font>

608
00:32:30,399 --> 00:32:36,279
neural<font color="#CCCCCC"> networks</font><font color="#E5E5E5"> obviously we should</font>

609
00:32:32,970 --> 00:32:39,039
<font color="#CCCCCC">analyze which sort of</font><font color="#E5E5E5"> data we would like</font>

610
00:32:36,279 --> 00:32:41,350
to<font color="#CCCCCC"> generate since we would like to</font>

611
00:32:39,039 --> 00:32:44,919
generate<font color="#E5E5E5"> some sort of payloads</font><font color="#CCCCCC"> which</font>

612
00:32:41,350 --> 00:32:47,799
means some sort of syntax constructions

613
00:32:44,919 --> 00:32:50,519
for different languages<font color="#E5E5E5"> we should know</font>

614
00:32:47,799 --> 00:32:53,590
how this<font color="#CCCCCC"> language could looks like and</font>

615
00:32:50,519 --> 00:32:56,830
language<font color="#E5E5E5"> obviously</font><font color="#CCCCCC"> means grammar</font><font color="#E5E5E5"> and</font>

616
00:32:53,590 --> 00:33:03,820
grammar obviously means<font color="#E5E5E5"> Chomsky</font>

617
00:32:56,830 --> 00:33:06,970
hierarchy<font color="#E5E5E5"> and to be able to work with</font>

618
00:33:03,820 --> 00:33:08,470
neural networks<font color="#E5E5E5"> and to be able</font><font color="#CCCCCC"> to cover</font>

619
00:33:06,970 --> 00:33:12,399
some grammars we should create this

620
00:33:08,470 --> 00:33:16,600
model<font color="#CCCCCC"> we should we should think how our</font>

621
00:33:12,399 --> 00:33:19,370
network could look at the data

622
00:33:16,600 --> 00:33:22,219
my suggestion<font color="#E5E5E5"> is</font><font color="#CCCCCC"> to be like a compile</font>

623
00:33:19,370 --> 00:33:24,739
<font color="#E5E5E5">you should sing like a compiler</font><font color="#CCCCCC"> to</font>

624
00:33:22,220 --> 00:33:26,210
<font color="#CCCCCC">create a narrow Network and this neural</font>

625
00:33:24,740 --> 00:33:30,640
network should also think like<font color="#CCCCCC"> a</font>

626
00:33:26,210 --> 00:33:34,790
compiler our narrow<font color="#CCCCCC"> network should</font>

627
00:33:30,640 --> 00:33:40,550
analyze bytes on input layer generate

628
00:33:34,790 --> 00:33:44,000
exams inside means tokens to be<font color="#CCCCCC"> able</font><font color="#E5E5E5"> to</font>

629
00:33:40,550 --> 00:33:46,970
combine<font color="#E5E5E5"> sequences of bytes to tokens and</font>

630
00:33:44,000 --> 00:33:50,660
then combine these tokens to token

631
00:33:46,970 --> 00:33:53,240
constructions<font color="#E5E5E5"> at syntax layer or like</font>

632
00:33:50,660 --> 00:33:54,740
syntax<font color="#E5E5E5"> face of training because layers</font>

633
00:33:53,240 --> 00:33:57,260
<font color="#CCCCCC">had</font><font color="#E5E5E5"> something</font><font color="#CCCCCC"> different inside neural</font>

634
00:33:54,740 --> 00:33:59,720
networks and<font color="#E5E5E5"> then this neural network</font>

635
00:33:57,260 --> 00:34:02,379
should be<font color="#CCCCCC"> able to apply</font><font color="#E5E5E5"> some kind of</font>

636
00:33:59,720 --> 00:34:05,030
semantics<font color="#E5E5E5"> to be able is it like</font>

637
00:34:02,380 --> 00:34:07,250
reasonable payload or just kind of

638
00:34:05,030 --> 00:34:11,570
combination<font color="#CCCCCC"> of tokens with no with no</font>

639
00:34:07,250 --> 00:34:13,929
like important thing inside to<font color="#E5E5E5"> create</font>

640
00:34:11,570 --> 00:34:17,720
this<font color="#E5E5E5"> I suggest</font><font color="#CCCCCC"> to do something like this</font>

641
00:34:13,929 --> 00:34:22,790
put byte by byte inside our neural

642
00:34:17,719 --> 00:34:26,689
<font color="#CCCCCC">network and</font><font color="#E5E5E5"> create this topology with</font>

643
00:34:22,790 --> 00:34:30,290
with shift<font color="#CCCCCC"> insight for example to store</font>

644
00:34:26,690 --> 00:34:34,429
<font color="#CCCCCC">I don't know super</font><font color="#E5E5E5"> obvious</font><font color="#CCCCCC"> union token</font>

645
00:34:30,290 --> 00:34:36,739
<font color="#CCCCCC">for sequel injections</font><font color="#E5E5E5"> it's kind of Union</font>

646
00:34:34,429 --> 00:34:40,370
<font color="#CCCCCC">Select injection or a classic sequel</font>

647
00:34:36,739 --> 00:34:43,219
injection we able<font color="#E5E5E5"> to put first byte and</font>

648
00:34:40,370 --> 00:34:47,210
this byte can have an access to second

649
00:34:43,219 --> 00:34:49,339
one<font color="#E5E5E5"> looks like Markov chains or</font>

650
00:34:47,210 --> 00:34:53,060
<font color="#CCCCCC">something like this</font><font color="#E5E5E5"> the second byte</font>

651
00:34:49,340 --> 00:34:56,419
could have an access to<font color="#E5E5E5"> an</font><font color="#CCCCCC"> aligned</font><font color="#E5E5E5"> to</font>

652
00:34:53,060 --> 00:34:59,630
third byte and finally we will<font color="#E5E5E5"> have this</font>

653
00:34:56,418 --> 00:35:02,180
<font color="#E5E5E5">token like Union and it's possible to</font>

654
00:34:59,630 --> 00:35:04,010
train the<font color="#CCCCCC"> network by data to store this</font>

655
00:35:02,180 --> 00:35:06,020
information with<font color="#CCCCCC"> no any like health</font>

656
00:35:04,010 --> 00:35:09,070
<font color="#CCCCCC">coding tokens or innocent which is</font>

657
00:35:06,020 --> 00:35:11,870
really cool to to<font color="#CCCCCC"> file</font><font color="#E5E5E5"> something because</font>

658
00:35:09,070 --> 00:35:14,750
obviously if you have a lot of payloads

659
00:35:11,870 --> 00:35:17,420
it's impossible to analyze each<font color="#CCCCCC"> of them</font>

660
00:35:14,750 --> 00:35:19,010
manually<font color="#E5E5E5"> and do something at the second</font>

661
00:35:17,420 --> 00:35:21,230
stage it's possible to combine these

662
00:35:19,010 --> 00:35:24,110
tokens<font color="#E5E5E5"> already constructed by previous</font>

663
00:35:21,230 --> 00:35:26,990
previous layer previous phase previous

664
00:35:24,110 --> 00:35:29,440
innocent<font color="#E5E5E5"> and create some kind</font><font color="#CCCCCC"> of</font>

665
00:35:26,990 --> 00:35:31,600
intersection<font color="#E5E5E5"> and links between them</font>

666
00:35:29,440 --> 00:35:34,180
for example to<font color="#E5E5E5"> store inside neural</font>

667
00:35:31,600 --> 00:35:37,450
<font color="#E5E5E5">networks</font><font color="#CCCCCC"> at Selleck Dawkins should go</font>

668
00:35:34,180 --> 00:35:40,299
after<font color="#E5E5E5"> the Union and some kind of</font><font color="#CCCCCC"> calm</font>

669
00:35:37,450 --> 00:35:43,149
<font color="#E5E5E5">talk and should go after the</font><font color="#CCCCCC"> Select</font><font color="#E5E5E5"> then</font>

670
00:35:40,300 --> 00:35:50,350
we should<font color="#E5E5E5"> have from token and table</font>

671
00:35:43,150 --> 00:35:57,130
talking<font color="#E5E5E5"> all</font><font color="#CCCCCC"> the things and now</font><font color="#E5E5E5"> we should</font>

672
00:35:50,350 --> 00:36:00,490
understand<font color="#E5E5E5"> from where we should</font><font color="#CCCCCC"> download</font>

673
00:35:57,130 --> 00:36:04,420
<font color="#E5E5E5">this this train sets my suggestion is to</font>

674
00:36:00,490 --> 00:36:07,000
<font color="#CCCCCC">use this super</font><font color="#E5E5E5"> super cool github project</font>

675
00:36:04,420 --> 00:36:10,270
called cyclists because inside this

676
00:36:07,000 --> 00:36:13,870
project<font color="#CCCCCC"> we were able</font><font color="#E5E5E5"> to find this</font><font color="#CCCCCC"> files</font>

677
00:36:10,270 --> 00:36:17,170
and folder with a lot<font color="#E5E5E5"> of tests for</font>

678
00:36:13,870 --> 00:36:19,600
fuzzing and a lot of payloads inside<font color="#E5E5E5"> I</font>

679
00:36:17,170 --> 00:36:21,760
also using the signal<font color="#E5E5E5"> map generated</font>

680
00:36:19,600 --> 00:36:23,710
payloads<font color="#E5E5E5"> because</font><font color="#CCCCCC"> Miroslav number is</font>

681
00:36:21,760 --> 00:36:26,110
really cool person<font color="#E5E5E5"> who created this</font>

682
00:36:23,710 --> 00:36:28,780
super<font color="#E5E5E5"> incredible tool and it's possible</font>

683
00:36:26,110 --> 00:36:31,600
<font color="#E5E5E5">to run cycle map against my web</font>

684
00:36:28,780 --> 00:36:34,240
application<font color="#CCCCCC"> to catch it traffic and to</font>

685
00:36:31,600 --> 00:36:37,779
actually<font color="#E5E5E5"> steal the payloads from</font><font color="#CCCCCC"> psycho</font>

686
00:36:34,240 --> 00:36:39,879
map<font color="#CCCCCC"> i should</font><font color="#E5E5E5"> mention there that it's</font>

687
00:36:37,780 --> 00:36:41,650
impossible to train a neural network<font color="#E5E5E5"> in</font>

688
00:36:39,880 --> 00:36:44,380
the right way using<font color="#E5E5E5"> this template</font><font color="#CCCCCC"> or</font>

689
00:36:41,650 --> 00:36:46,780
request<font color="#E5E5E5"> because this network should</font>

690
00:36:44,380 --> 00:36:49,300
learn the<font color="#E5E5E5"> structure right structure of</font>

691
00:36:46,780 --> 00:36:51,580
payloads<font color="#CCCCCC"> if you would like to train the</font>

692
00:36:49,300 --> 00:36:54,040
father in<font color="#E5E5E5"> this way you should</font><font color="#CCCCCC"> apply a</font>

693
00:36:51,580 --> 00:36:55,330
payloads<font color="#E5E5E5"> instead of these templates of</font>

694
00:36:54,040 --> 00:36:57,670
payloads it's impossible to use

695
00:36:55,330 --> 00:36:59,650
<font color="#CCCCCC">macrocells because your neural network</font>

696
00:36:57,670 --> 00:37:03,430
in this case will generate this<font color="#E5E5E5"> matrices</font>

697
00:36:59,650 --> 00:37:06,130
<font color="#E5E5E5">and to be able</font><font color="#CCCCCC"> to extract some sort of</font>

698
00:37:03,430 --> 00:37:07,960
payloads from sickle map<font color="#E5E5E5"> it's definitely</font>

699
00:37:06,130 --> 00:37:10,660
better<font color="#CCCCCC"> to just create some kind</font><font color="#E5E5E5"> of</font>

700
00:37:07,960 --> 00:37:14,710
vulnerable<font color="#E5E5E5"> app and run the sickle map</font>

701
00:37:10,660 --> 00:37:16,859
across<font color="#E5E5E5"> this web app and so put all the</font>

702
00:37:14,710 --> 00:37:19,420
requests<font color="#E5E5E5"> inside locks and then catch</font>

703
00:37:16,860 --> 00:37:23,140
payloads<font color="#E5E5E5"> from there and I should mention</font>

704
00:37:19,420 --> 00:37:27,180
that when<font color="#CCCCCC"> you would</font><font color="#E5E5E5"> like to do this you</font>

705
00:37:23,140 --> 00:37:28,900
should<font color="#CCCCCC"> pass your sickle map through</font>

706
00:37:27,180 --> 00:37:30,190
application with the<font color="#CCCCCC"> existent</font>

707
00:37:28,900 --> 00:37:32,830
vulnerability<font color="#E5E5E5"> it's really important</font>

708
00:37:30,190 --> 00:37:35,650
<font color="#E5E5E5">because sickle map as well as other</font>

709
00:37:32,830 --> 00:37:39,180
tools as well as a kinetics burp and

710
00:37:35,650 --> 00:37:42,250
other like scanning<font color="#E5E5E5"> tools have a logic</font>

711
00:37:39,180 --> 00:37:43,180
inside and if you have no<font color="#E5E5E5"> other</font>

712
00:37:42,250 --> 00:37:46,630
abilities there

713
00:37:43,180 --> 00:37:49,960
and so no responses will comes to two

714
00:37:46,630 --> 00:37:52,690
different<font color="#E5E5E5"> things like basic checks these</font>

715
00:37:49,960 --> 00:37:55,750
tools will not<font color="#E5E5E5"> apply in you</font><font color="#CCCCCC"> payloads new</font>

716
00:37:52,690 --> 00:37:57,940
templates new checks to<font color="#CCCCCC"> be able</font><font color="#E5E5E5"> to steal</font>

717
00:37:55,750 --> 00:37:59,770
all the data<font color="#CCCCCC"> you're from</font><font color="#E5E5E5"> from these</font>

718
00:37:57,940 --> 00:38:03,990
tools<font color="#E5E5E5"> you</font><font color="#CCCCCC"> should create existent</font>

719
00:37:59,770 --> 00:38:06,609
vulnerability<font color="#E5E5E5"> even more to be</font><font color="#CCCCCC"> able to to</font>

720
00:38:03,990 --> 00:38:09,180
steal<font color="#E5E5E5"> all the database you should</font><font color="#CCCCCC"> create</font>

721
00:38:06,609 --> 00:38:12,460
different sequel injection for different

722
00:38:09,180 --> 00:38:14,558
databases because some sort<font color="#E5E5E5"> of</font><font color="#CCCCCC"> this</font>

723
00:38:12,460 --> 00:38:17,020
<font color="#E5E5E5">payloads depends of the structure of the</font>

724
00:38:14,559 --> 00:38:19,240
<font color="#E5E5E5">databases on just like type of</font>

725
00:38:17,020 --> 00:38:20,980
vulnerability<font color="#E5E5E5"> different payloads for</font>

726
00:38:19,240 --> 00:38:24,220
<font color="#E5E5E5">Oracle different payloads for db2</font>

727
00:38:20,980 --> 00:38:27,460
different payloads for so my sequel and

728
00:38:24,220 --> 00:38:29,589
all this stuff<font color="#E5E5E5"> and so anyways in our</font>

729
00:38:27,460 --> 00:38:32,500
self collection since we have some sort

730
00:38:29,589 --> 00:38:35,920
of data<font color="#E5E5E5"> because</font><font color="#CCCCCC"> of our clients it's</font>

731
00:38:32,500 --> 00:38:38,880
possible<font color="#E5E5E5"> to put all of them here it's</font>

732
00:38:35,920 --> 00:38:42,339
kind of honeypot actually so<font color="#CCCCCC"> far</font>

733
00:38:38,880 --> 00:38:45,300
tadam and so let<font color="#CCCCCC"> me</font><font color="#E5E5E5"> show you some</font>

734
00:38:42,339 --> 00:38:49,029
results<font color="#E5E5E5"> I trained at the network to</font>

735
00:38:45,300 --> 00:38:51,309
store some sort of local file inclusion

736
00:38:49,030 --> 00:38:54,160
permissions<font color="#E5E5E5"> local file inclusion bugs</font>

737
00:38:51,309 --> 00:38:56,890
here and this number<font color="#E5E5E5"> of step of the</font>

738
00:38:54,160 --> 00:39:01,868
training<font color="#E5E5E5"> this number of approach it's</font>

739
00:38:56,890 --> 00:39:04,990
kind<font color="#E5E5E5"> of bitch things it's it's value of</font>

740
00:39:01,869 --> 00:39:06,609
error and so we should increase in this

741
00:39:04,990 --> 00:39:09,339
valid to be able<font color="#E5E5E5"> to generate something</font>

742
00:39:06,609 --> 00:39:12,759
<font color="#E5E5E5">and this like example generation at the</font>

743
00:39:09,339 --> 00:39:16,529
first stage when I just<font color="#E5E5E5"> put some kind of</font>

744
00:39:12,760 --> 00:39:19,059
like<font color="#CCCCCC"> 1 1/2</font><font color="#E5E5E5"> of thousands of steps</font>

745
00:39:16,530 --> 00:39:22,329
generated payloads looks really shitty

746
00:39:19,059 --> 00:39:24,940
so but we continue to<font color="#E5E5E5"> train this network</font>

747
00:39:22,329 --> 00:39:26,859
and seconds<font color="#E5E5E5"> second</font><font color="#CCCCCC"> generation is</font>

748
00:39:24,940 --> 00:39:29,319
definitely better<font color="#CCCCCC"> than previous</font><font color="#E5E5E5"> one it</font>

749
00:39:26,859 --> 00:39:31,869
looks like some<font color="#E5E5E5"> sort of some sort of</font>

750
00:39:29,319 --> 00:39:36,130
files right with the slashes but with

751
00:39:31,869 --> 00:39:38,829
some unexpected<font color="#CCCCCC"> file names there then so</font>

752
00:39:36,130 --> 00:39:41,549
since I have known any like URL encoding

753
00:39:38,829 --> 00:39:44,319
<font color="#CCCCCC">optimizations there</font><font color="#E5E5E5"> I am sure that</font>

754
00:39:41,549 --> 00:39:46,720
<font color="#E5E5E5">proper father should know all these</font>

755
00:39:44,319 --> 00:39:49,270
things<font color="#E5E5E5"> inside and so proper</font><font color="#CCCCCC"> passer</font>

756
00:39:46,720 --> 00:39:52,598
should should<font color="#E5E5E5"> be able</font><font color="#CCCCCC"> to generate even</font>

757
00:39:49,270 --> 00:39:57,070
<font color="#E5E5E5">like encoded data here in case of plain</font>

758
00:39:52,599 --> 00:39:58,930
encoding<font color="#CCCCCC"> second generation</font>

759
00:39:57,070 --> 00:40:04,470
<font color="#CCCCCC">third generation</font><font color="#E5E5E5"> definitely looks</font><font color="#CCCCCC"> better</font>

760
00:39:58,930 --> 00:40:08,500
at next generation with error about one

761
00:40:04,470 --> 00:40:11,399
about so after about<font color="#CCCCCC"> 100 thousands</font><font color="#E5E5E5"> steps</font>

762
00:40:08,500 --> 00:40:14,170
we even can see some kind<font color="#E5E5E5"> of</font>

763
00:40:11,400 --> 00:40:18,610
recognizable<font color="#E5E5E5"> by our like</font><font color="#CCCCCC"> heckler</font><font color="#E5E5E5"> -</font>

764
00:40:14,170 --> 00:40:21,730
<font color="#CCCCCC">things like EDC folder h TT TT</font><font color="#E5E5E5"> me</font>

765
00:40:18,610 --> 00:40:25,870
something like I don't<font color="#E5E5E5"> know htaccess or</font>

766
00:40:21,730 --> 00:40:30,850
<font color="#CCCCCC">Sampson</font><font color="#E5E5E5"> it is CSC</font><font color="#CCCCCC"> which is something</font><font color="#E5E5E5"> I</font>

767
00:40:25,870 --> 00:40:34,120
don't<font color="#E5E5E5"> know some some sort of de means I</font>

768
00:40:30,850 --> 00:40:39,069
mean I don't<font color="#E5E5E5"> know like maybe DV folder</font>

769
00:40:34,120 --> 00:40:45,910
or something<font color="#E5E5E5"> next generation so after if</font>

770
00:40:39,070 --> 00:40:48,850
like about yeah after about 100

771
00:40:45,910 --> 00:40:53,379
thousands with the<font color="#CCCCCC"> house steps with</font>

772
00:40:48,850 --> 00:40:56,790
<font color="#CCCCCC">their roughly about 1 we can see even</font>

773
00:40:53,380 --> 00:40:59,860
these names reasonable file names inside

774
00:40:56,790 --> 00:41:03,279
inside this folder<font color="#CCCCCC"> EDC folder and</font><font color="#E5E5E5"> host</font>

775
00:40:59,860 --> 00:41:05,920
<font color="#E5E5E5">name we just really looks like payload</font>

776
00:41:03,280 --> 00:41:09,730
<font color="#E5E5E5">some kind of</font><font color="#CCCCCC"> access</font><font color="#E5E5E5"> log some kind of</font><font color="#CCCCCC"> ptc</font>

777
00:41:05,920 --> 00:41:14,140
host with no<font color="#E5E5E5"> hosts and after</font><font color="#CCCCCC"> 2 millions</font>

778
00:41:09,730 --> 00:41:16,630
of steps<font color="#CCCCCC"> with really low error we see</font>

779
00:41:14,140 --> 00:41:22,710
something<font color="#E5E5E5"> like really existing local</font>

780
00:41:16,630 --> 00:41:26,260
file current things<font color="#E5E5E5"> so which means that</font>

781
00:41:22,710 --> 00:41:29,440
<font color="#E5E5E5">it works that it's possible</font><font color="#CCCCCC"> to</font><font color="#E5E5E5"> create</font>

782
00:41:26,260 --> 00:41:31,480
some sort of neural network recurrent

783
00:41:29,440 --> 00:41:35,560
neural network with the<font color="#CCCCCC"> same topology it</font>

784
00:41:31,480 --> 00:41:38,250
is possible to to<font color="#E5E5E5"> create the model how</font>

785
00:41:35,560 --> 00:41:42,220
this like syntax could looks like how

786
00:41:38,250 --> 00:41:43,990
how our<font color="#CCCCCC"> Father</font><font color="#E5E5E5"> should sort the data put</font>

787
00:41:42,220 --> 00:41:47,109
<font color="#E5E5E5">all</font><font color="#CCCCCC"> of them</font><font color="#E5E5E5"> inside recurrent neural</font>

788
00:41:43,990 --> 00:41:49,899
network trained them using payloads<font color="#E5E5E5"> and</font>

789
00:41:47,110 --> 00:41:52,420
generate some kind<font color="#E5E5E5"> of payloads based on</font>

790
00:41:49,900 --> 00:41:54,880
<font color="#E5E5E5">these things</font><font color="#CCCCCC"> but what</font><font color="#E5E5E5"> is the</font><font color="#CCCCCC"> difference</font>

791
00:41:52,420 --> 00:41:58,690
between these<font color="#E5E5E5"> things</font><font color="#CCCCCC"> this approach and</font>

792
00:41:54,880 --> 00:42:03,610
<font color="#CCCCCC">just lists</font><font color="#E5E5E5"> I can generate</font><font color="#CCCCCC"> these payloads</font>

793
00:41:58,690 --> 00:42:05,950
<font color="#CCCCCC">byte by byte</font><font color="#E5E5E5"> means that if I</font><font color="#CCCCCC"> have some</font>

794
00:42:03,610 --> 00:42:08,680
kind<font color="#E5E5E5"> of response to</font><font color="#CCCCCC"> et Cie folder some</font>

795
00:42:05,950 --> 00:42:10,919
kind of unexpected<font color="#CCCCCC"> some kind of</font>

796
00:42:08,680 --> 00:42:14,460
unexpected response<font color="#CCCCCC"> I can</font><font color="#E5E5E5"> apply</font>

797
00:42:10,920 --> 00:42:18,510
and generate available payload for this

798
00:42:14,460 --> 00:42:21,890
context with with I<font color="#E5E5E5"> don't know existing</font>

799
00:42:18,510 --> 00:42:25,859
and so file names<font color="#E5E5E5"> in this folder for</font>

800
00:42:21,890 --> 00:42:29,759
local file inclusion payloads<font color="#CCCCCC"> it is</font>

801
00:42:25,859 --> 00:42:33,420
possible<font color="#CCCCCC"> to solve the same thing by for</font>

802
00:42:29,760 --> 00:42:36,180
<font color="#CCCCCC">example decision trees or just sort</font><font color="#E5E5E5"> of</font>

803
00:42:33,420 --> 00:42:39,030
files inside some folders<font color="#E5E5E5"> but for</font>

804
00:42:36,180 --> 00:42:42,118
<font color="#E5E5E5">complicated synthesis like sickle or XSS</font>

805
00:42:39,030 --> 00:42:45,990
it is not so<font color="#E5E5E5"> easy and it's not so</font><font color="#CCCCCC"> easy</font>

806
00:42:42,119 --> 00:42:49,349
to to<font color="#E5E5E5"> apply and suggest new payloads and</font>

807
00:42:45,990 --> 00:42:52,078
it's not so<font color="#E5E5E5"> easy to even to keep in mind</font>

808
00:42:49,349 --> 00:42:54,630
each files inside this<font color="#CCCCCC"> EDC folder and</font>

809
00:42:52,079 --> 00:42:58,559
it's not so easy<font color="#E5E5E5"> to put all of them</font>

810
00:42:54,630 --> 00:43:00,540
<font color="#E5E5E5">inside the list and apply this logic</font>

811
00:42:58,559 --> 00:43:04,200
into<font color="#E5E5E5"> your scanner it's definitely better</font>

812
00:43:00,540 --> 00:43:06,299
to<font color="#CCCCCC"> just put into</font><font color="#E5E5E5"> the</font><font color="#CCCCCC"> train set and train</font>

813
00:43:04,200 --> 00:43:09,390
<font color="#E5E5E5">neural networks and so add them to</font>

814
00:43:06,299 --> 00:43:12,089
generate<font color="#E5E5E5"> these payloads and so and the</font>

815
00:43:09,390 --> 00:43:16,170
results could<font color="#CCCCCC"> be definitely</font><font color="#E5E5E5"> better so</font>

816
00:43:12,089 --> 00:43:18,990
and<font color="#E5E5E5"> last</font><font color="#CCCCCC"> stages</font><font color="#E5E5E5"> analyzing the results</font>

817
00:43:16,170 --> 00:43:21,630
<font color="#E5E5E5">scanner produce of vulnerabilities and</font>

818
00:43:18,990 --> 00:43:23,578
<font color="#CCCCCC">false positives and further produce</font>

819
00:43:21,630 --> 00:43:26,160
abnormal ease and we should analyze<font color="#E5E5E5"> how</font>

820
00:43:23,579 --> 00:43:29,940
to analyze this data and<font color="#E5E5E5"> we should</font>

821
00:43:26,160 --> 00:43:35,700
analyze who<font color="#E5E5E5"> will do this work machine on</font>

822
00:43:29,940 --> 00:43:39,030
<font color="#E5E5E5">all like human and so my suggestion now</font>

823
00:43:35,700 --> 00:43:41,220
is just to apply some<font color="#E5E5E5"> sort of predefined</font>

824
00:43:39,030 --> 00:43:43,680
it manually predefined testing policies

825
00:43:41,220 --> 00:43:45,598
for example<font color="#E5E5E5"> when I try to</font><font color="#CCCCCC"> file something</font>

826
00:43:43,680 --> 00:43:49,649
<font color="#E5E5E5">I'd like</font><font color="#CCCCCC"> to set some</font><font color="#E5E5E5"> policies for</font>

827
00:43:45,599 --> 00:43:52,650
<font color="#CCCCCC">example to have no 400 error codes</font>

828
00:43:49,650 --> 00:43:54,240
<font color="#E5E5E5">responses or just have no one plus</font>

829
00:43:52,650 --> 00:43:57,839
millisecond response or something like

830
00:43:54,240 --> 00:43:59,640
<font color="#E5E5E5">this but in the future research I'll try</font>

831
00:43:57,839 --> 00:44:02,099
to solve this<font color="#CCCCCC"> problem using neural</font>

832
00:43:59,640 --> 00:44:04,230
networks as well<font color="#CCCCCC"> and now it's time to</font>

833
00:44:02,099 --> 00:44:07,819
<font color="#E5E5E5">show you some results and identifying</font>

834
00:44:04,230 --> 00:44:11,640
vulnerabilities<font color="#E5E5E5"> first example</font><font color="#CCCCCC"> is</font>

835
00:44:07,819 --> 00:44:13,890
<font color="#E5E5E5">superable think identified in nginx</font>

836
00:44:11,640 --> 00:44:18,359
using<font color="#E5E5E5"> these fighting techniques and I</font>

837
00:44:13,890 --> 00:44:22,230
just<font color="#E5E5E5"> try to validate my approach I just</font>

838
00:44:18,359 --> 00:44:24,230
<font color="#E5E5E5">try to put all the payloads available</font>

839
00:44:22,230 --> 00:44:27,560
for different<font color="#E5E5E5"> things and</font>

840
00:44:24,230 --> 00:44:30,890
founded by and which were found by

841
00:44:27,560 --> 00:44:32,690
<font color="#E5E5E5">fathers to my neural network things to</font>

842
00:44:30,890 --> 00:44:35,029
be able to<font color="#CCCCCC"> validate this narrow networks</font>

843
00:44:32,690 --> 00:44:38,060
<font color="#CCCCCC">works</font><font color="#E5E5E5"> with the same accuracy and try to</font>

844
00:44:35,030 --> 00:44:40,040
<font color="#CCCCCC">suggest something reasonable I tried to</font>

845
00:44:38,060 --> 00:44:43,670
put this payload inside neural<font color="#E5E5E5"> network</font>

846
00:44:40,040 --> 00:44:48,170
<font color="#CCCCCC">around</font><font color="#E5E5E5"> first generation first by</font>

847
00:44:43,670 --> 00:44:50,720
generation using this like zero<font color="#E5E5E5"> byte and</font>

848
00:44:48,170 --> 00:44:55,160
understand that neural networks<font color="#E5E5E5"> try to</font>

849
00:44:50,720 --> 00:44:59,000
suggest<font color="#CCCCCC"> new more and more new data to to</font>

850
00:44:55,160 --> 00:45:00,920
the<font color="#E5E5E5"> 0 by</font><font color="#CCCCCC"> 2 to repeat the success with</font>

851
00:44:59,000 --> 00:45:03,829
memory corruption and steal some data

852
00:45:00,920 --> 00:45:05,960
it's it's this case covered by neural

853
00:45:03,829 --> 00:45:08,240
<font color="#CCCCCC">network strain</font><font color="#E5E5E5"> and by some sort of data</font>

854
00:45:05,960 --> 00:45:10,970
but it's<font color="#CCCCCC"> obvious</font><font color="#E5E5E5"> thing it's possible to</font>

855
00:45:08,240 --> 00:45:13,399
<font color="#E5E5E5">to to generate these payloads using only</font>

856
00:45:10,970 --> 00:45:17,328
<font color="#E5E5E5">the</font><font color="#CCCCCC"> 0 byte but it's</font><font color="#E5E5E5"> books</font><font color="#CCCCCC"> second</font>

857
00:45:13,400 --> 00:45:20,089
<font color="#E5E5E5">examples it's kind of server site</font>

858
00:45:17,329 --> 00:45:23,359
request forgery<font color="#E5E5E5"> vulnerability inside</font>

859
00:45:20,089 --> 00:45:25,430
method<font color="#E5E5E5"> field and I tried to figure it</font>

860
00:45:23,359 --> 00:45:30,160
out is it possible to<font color="#E5E5E5"> train network to</font>

861
00:45:25,430 --> 00:45:33,649
suggest valuable things with this like

862
00:45:30,160 --> 00:45:38,089
character<font color="#E5E5E5"> to to be able to create some</font>

863
00:45:33,650 --> 00:45:40,550
sort of things like parts of URLs<font color="#E5E5E5"> to</font>

864
00:45:38,089 --> 00:45:44,599
<font color="#E5E5E5">construct valid URLs with no zero bias</font>

865
00:45:40,550 --> 00:45:46,609
with no like pound<font color="#E5E5E5"> thinks some sort of</font>

866
00:45:44,599 --> 00:45:49,819
reasonable things there and it's also

867
00:45:46,609 --> 00:45:55,700
possible I<font color="#CCCCCC"> just train it my network by</font>

868
00:45:49,819 --> 00:45:57,410
<font color="#E5E5E5">URLs and when I put it so as its initial</font>

869
00:45:55,700 --> 00:45:59,839
vector to<font color="#E5E5E5"> neural network third</font>

870
00:45:57,410 --> 00:46:02,299
<font color="#E5E5E5">generation</font><font color="#CCCCCC"> for one</font><font color="#E5E5E5"> byte</font><font color="#CCCCCC"> father's</font><font color="#E5E5E5"> that</font>

871
00:45:59,839 --> 00:46:05,410
it's possible<font color="#CCCCCC"> to</font><font color="#E5E5E5"> have some abnormally</font>

872
00:46:02,300 --> 00:46:07,880
using<font color="#E5E5E5"> this</font><font color="#CCCCCC"> byte</font><font color="#E5E5E5"> means like ampersand</font>

873
00:46:05,410 --> 00:46:10,730
this<font color="#CCCCCC"> neural network</font><font color="#E5E5E5"> started to generate</font>

874
00:46:07,880 --> 00:46:14,750
valuable payloads with<font color="#CCCCCC"> words and this</font>

875
00:46:10,730 --> 00:46:18,349
<font color="#E5E5E5">character as well and constructions were</font>

876
00:46:14,750 --> 00:46:21,319
at the same way with pound with sorry

877
00:46:18,349 --> 00:46:26,990
with ampersand<font color="#E5E5E5"> with this equation sample</font>

878
00:46:21,319 --> 00:46:29,900
and so with different<font color="#E5E5E5"> like data from</font>

879
00:46:26,990 --> 00:46:31,359
<font color="#E5E5E5">URLs with</font><font color="#CCCCCC"> words here</font><font color="#E5E5E5"> and with valid here</font>

880
00:46:29,900 --> 00:46:34,370
which is<font color="#E5E5E5"> really cool</font>

881
00:46:31,359 --> 00:46:37,850
third<font color="#E5E5E5"> example as</font>

882
00:46:34,370 --> 00:46:41,480
this one<font color="#E5E5E5"> when I put a drained neural</font>

883
00:46:37,850 --> 00:46:46,250
network by shell shell<font color="#CCCCCC"> commands</font><font color="#E5E5E5"> and</font><font color="#CCCCCC"> pull</font>

884
00:46:41,480 --> 00:46:48,890
this newline character inside this<font color="#E5E5E5"> XML</font>

885
00:46:46,250 --> 00:46:51,890
request<font color="#E5E5E5"> and try to generate</font><font color="#CCCCCC"> some sort of</font>

886
00:46:48,890 --> 00:46:54,470
payloads<font color="#CCCCCC"> based</font><font color="#E5E5E5"> on this initial character</font>

887
00:46:51,890 --> 00:46:56,960
<font color="#E5E5E5">and this initial</font><font color="#CCCCCC"> string</font><font color="#E5E5E5"> the neural</font>

888
00:46:54,470 --> 00:47:01,450
network started to suggest<font color="#CCCCCC"> that me some</font>

889
00:46:56,960 --> 00:47:06,920
kind<font color="#E5E5E5"> of reasonable comments to</font><font color="#CCCCCC"> to shell</font>

890
00:47:01,450 --> 00:47:09,710
because they started from<font color="#E5E5E5"> this context</font>

891
00:47:06,920 --> 00:47:12,320
with new line<font color="#E5E5E5"> obviously they started to</font>

892
00:47:09,710 --> 00:47:13,330
suggest<font color="#E5E5E5"> me some sort of memcached</font>

893
00:47:12,320 --> 00:47:16,220
injections

894
00:47:13,330 --> 00:47:18,799
<font color="#CCCCCC">key-value injections and</font><font color="#E5E5E5"> other syntaxes</font>

895
00:47:16,220 --> 00:47:20,990
with the same termination<font color="#E5E5E5"> bite but it</font>

896
00:47:18,800 --> 00:47:23,270
was and so which means<font color="#E5E5E5"> that it's</font>

897
00:47:20,990 --> 00:47:25,189
possible<font color="#CCCCCC"> to</font><font color="#E5E5E5"> cover the</font><font color="#CCCCCC"> sinks with no</font>

898
00:47:23,270 --> 00:47:31,340
knowledge<font color="#CCCCCC"> of</font><font color="#E5E5E5"> the structure of syntaxes</font>

899
00:47:25,190 --> 00:47:34,130
which is which is<font color="#CCCCCC"> Rinku and the last one</font>

900
00:47:31,340 --> 00:47:37,840
was my<font color="#CCCCCC"> bug for</font><font color="#E5E5E5"> facebook</font><font color="#CCCCCC"> i don't know</font>

901
00:47:34,130 --> 00:47:40,730
like<font color="#E5E5E5"> maybe two years ago</font><font color="#CCCCCC"> I suggested to</font>

902
00:47:37,840 --> 00:47:42,950
<font color="#E5E5E5">run fastened across different bug bounty</font>

903
00:47:40,730 --> 00:47:47,840
programs and found this super super uber

904
00:47:42,950 --> 00:47:50,960
<font color="#CCCCCC">thing with normally at at Q</font><font color="#E5E5E5"> parameter at</font>

905
00:47:47,840 --> 00:47:54,470
research facebook.com/<font color="#E5E5E5"> and that time I</font>

906
00:47:50,960 --> 00:47:57,320
<font color="#E5E5E5">just</font><font color="#CCCCCC"> started to</font><font color="#E5E5E5"> brute</font><font color="#CCCCCC"> Sampson and at my</font>

907
00:47:54,470 --> 00:47:59,779
like human mind it was like sequel

908
00:47:57,320 --> 00:48:03,860
injection<font color="#E5E5E5"> because</font><font color="#CCCCCC"> of this double double</font>

909
00:47:59,780 --> 00:48:06,800
quote here but it was JSON suggestion<font color="#CCCCCC"> it</font>

910
00:48:03,860 --> 00:48:09,200
was a JSON JSON injection<font color="#E5E5E5"> and so I just</font>

911
00:48:06,800 --> 00:48:13,580
<font color="#E5E5E5">miss this and probably I missed my</font><font color="#CCCCCC"> earth</font>

912
00:48:09,200 --> 00:48:15,770
<font color="#CCCCCC">sees that time</font><font color="#E5E5E5"> but</font><font color="#CCCCCC"> I tried to apply this</font>

913
00:48:13,580 --> 00:48:18,529
neural network approach<font color="#E5E5E5"> in this way and</font>

914
00:48:15,770 --> 00:48:21,170
understand that<font color="#E5E5E5"> this byte address this</font>

915
00:48:18,530 --> 00:48:23,360
neural network not<font color="#CCCCCC"> only</font><font color="#E5E5E5"> to sequel</font>

916
00:48:21,170 --> 00:48:26,660
injection payloads but also to JSON

917
00:48:23,360 --> 00:48:29,630
injections<font color="#E5E5E5"> because it's terminal</font><font color="#CCCCCC"> byte</font>

918
00:48:26,660 --> 00:48:31,850
for psycho injection<font color="#E5E5E5"> pay and JSON</font>

919
00:48:29,630 --> 00:48:34,520
injections as<font color="#E5E5E5"> well which is</font><font color="#CCCCCC"> which is</font>

920
00:48:31,850 --> 00:48:36,259
<font color="#CCCCCC">really important and it was super</font><font color="#E5E5E5"> super</font>

921
00:48:34,520 --> 00:48:38,630
cool<font color="#E5E5E5"> for me to understand that this</font>

922
00:48:36,260 --> 00:48:41,030
<font color="#CCCCCC">network actually</font><font color="#E5E5E5"> was smarter</font><font color="#CCCCCC"> than me</font>

923
00:48:38,630 --> 00:48:44,600
<font color="#E5E5E5">because that time two years</font><font color="#CCCCCC"> ago I missed</font>

924
00:48:41,030 --> 00:48:46,850
my RC and huge reward<font color="#CCCCCC"> because I</font>

925
00:48:44,600 --> 00:48:48,529
suggested<font color="#E5E5E5"> this is that this is</font><font color="#CCCCCC"> like an</font>

926
00:48:46,850 --> 00:48:50,900
exploitable second

927
00:48:48,529 --> 00:48:52,819
but it was Jason injection<font color="#E5E5E5"> inside</font>

928
00:48:50,900 --> 00:48:55,989
elasticsearch<font color="#E5E5E5"> whose ability to run</font>

929
00:48:52,819 --> 00:48:57,439
<font color="#CCCCCC">occurred because of some sort of</font>

930
00:48:55,989 --> 00:49:04,209
<font color="#E5E5E5">vulnerabilities inside this</font>

931
00:48:57,439 --> 00:49:04,209
<font color="#CCCCCC">elasticsearch so</font><font color="#E5E5E5"> and the</font><font color="#CCCCCC"> last one has</font>

932
00:49:04,749 --> 00:49:09,069
memcached injections<font color="#CCCCCC"> i just talked about</font>

933
00:49:07,670 --> 00:49:12,439
<font color="#CCCCCC">these things</font>

934
00:49:09,069 --> 00:49:17,569
<font color="#E5E5E5">three years ago</font><font color="#CCCCCC"> at blackhat</font><font color="#E5E5E5"> and so</font>

935
00:49:12,439 --> 00:49:19,969
obviously it is<font color="#E5E5E5"> sometimes you would like</font>

936
00:49:17,569 --> 00:49:22,910
to apply all the variants<font color="#E5E5E5"> all the</font>

937
00:49:19,969 --> 00:49:26,329
payloads<font color="#CCCCCC"> based on this based on</font><font color="#E5E5E5"> this</font>

938
00:49:22,910 --> 00:49:29,598
data<font color="#E5E5E5"> and in case of sessions and some</font>

939
00:49:26,329 --> 00:49:33,380
<font color="#E5E5E5">kind of hex data my neural network</font>

940
00:49:29,599 --> 00:49:36,319
trained<font color="#CCCCCC"> biases payloads</font><font color="#E5E5E5"> try to suggest</font>

941
00:49:33,380 --> 00:49:40,729
memcached injections because because<font color="#E5E5E5"> of</font>

942
00:49:36,319 --> 00:49:43,308
this hex encoded data this<font color="#E5E5E5"> network</font>

943
00:49:40,729 --> 00:49:47,989
understands that so probably<font color="#CCCCCC"> it is kind</font>

944
00:49:43,309 --> 00:49:51,499
of hex context and this context in the

945
00:49:47,989 --> 00:49:54,140
past was addressed<font color="#CCCCCC"> asked to some sort</font><font color="#E5E5E5"> of</font>

946
00:49:51,499 --> 00:49:57,769
key<font color="#E5E5E5"> well injection</font><font color="#CCCCCC"> side memcached</font><font color="#E5E5E5"> it is</font>

947
00:49:54,140 --> 00:50:01,249
<font color="#CCCCCC">a really great</font><font color="#E5E5E5"> time to</font><font color="#CCCCCC"> suggest some kind</font>

948
00:49:57,769 --> 00:50:05,629
<font color="#CCCCCC">of new line</font><font color="#E5E5E5"> injection and put some sort</font>

949
00:50:01,249 --> 00:50:10,448
of key<font color="#E5E5E5"> belly things there which is which</font>

950
00:50:05,630 --> 00:50:14,539
<font color="#CCCCCC">is really</font><font color="#E5E5E5"> cool so what's next</font>

951
00:50:10,449 --> 00:50:17,150
as<font color="#CCCCCC"> i mentioned before my next</font><font color="#E5E5E5"> goal is</font><font color="#CCCCCC"> to</font>

952
00:50:14,539 --> 00:50:19,009
solve results on how is this<font color="#E5E5E5"> problem by</font>

953
00:50:17,150 --> 00:50:20,209
neural networks as well<font color="#CCCCCC"> so don't only</font>

954
00:50:19,009 --> 00:50:24,799
generate payloads

955
00:50:20,209 --> 00:50:26,899
but also to to<font color="#E5E5E5"> analyze the results</font><font color="#CCCCCC"> to</font>

956
00:50:24,799 --> 00:50:29,900
suggest what is normal for this

957
00:50:26,900 --> 00:50:34,910
particular app<font color="#CCCCCC"> what's abnormal and how</font>

958
00:50:29,900 --> 00:50:39,499
to generate some sort of exceptions

959
00:50:34,910 --> 00:50:41,989
<font color="#E5E5E5">there second idea after after the first</font>

960
00:50:39,499 --> 00:50:45,198
one and it's it's<font color="#E5E5E5"> also will be available</font>

961
00:50:41,989 --> 00:50:49,189
<font color="#CCCCCC">when we can solve first problem is</font><font color="#E5E5E5"> how</font>

962
00:50:45,199 --> 00:50:51,109
to connect<font color="#E5E5E5"> it and automate with some</font>

963
00:50:49,189 --> 00:50:53,089
sort of python proxy how to create a

964
00:50:51,109 --> 00:50:55,038
tool with the ability to solve all the

965
00:50:53,089 --> 00:50:57,439
things in automatic mode<font color="#CCCCCC"> and</font><font color="#E5E5E5"> how to</font>

966
00:50:55,039 --> 00:50:59,539
suggest this<font color="#CCCCCC"> to you because now it's</font>

967
00:50:57,439 --> 00:51:01,910
<font color="#CCCCCC">just kind of common lined python script</font>

968
00:50:59,539 --> 00:51:04,059
and to be<font color="#CCCCCC"> able to generate</font><font color="#E5E5E5"> pale</font>

969
00:51:01,910 --> 00:51:07,098
<font color="#E5E5E5">you should put this kind of</font><font color="#CCCCCC"> spring</font>

970
00:51:04,059 --> 00:51:11,690
inside inside this like<font color="#E5E5E5"> common line to</font>

971
00:51:07,099 --> 00:51:13,220
<font color="#E5E5E5">receive this full full string right</font><font color="#CCCCCC"> my</font>

972
00:51:11,690 --> 00:51:15,079
<font color="#E5E5E5">goal</font><font color="#CCCCCC"> is</font><font color="#E5E5E5"> to automate the</font><font color="#CCCCCC"> sink and</font><font color="#E5E5E5"> create</font>

973
00:51:13,220 --> 00:51:15,730
some kind<font color="#CCCCCC"> of tool</font><font color="#E5E5E5"> usable tool for</font>

974
00:51:15,079 --> 00:51:19,369
<font color="#E5E5E5">everyone</font>

975
00:51:15,730 --> 00:51:21,559
third one is to<font color="#E5E5E5"> make it smarter by</font>

976
00:51:19,369 --> 00:51:25,609
<font color="#E5E5E5">connection with responses which means</font>

977
00:51:21,559 --> 00:51:28,510
that if<font color="#E5E5E5"> I</font><font color="#CCCCCC"> have an abnormally with some</font>

978
00:51:25,609 --> 00:51:34,880
sort<font color="#E5E5E5"> of data for example I</font><font color="#CCCCCC"> don't know</font>

979
00:51:28,510 --> 00:51:37,160
single<font color="#E5E5E5"> quad it is definitely it's</font>

980
00:51:34,880 --> 00:51:40,910
possible now to<font color="#E5E5E5"> start to suggest sequel</font>

981
00:51:37,160 --> 00:51:44,660
injection payloads<font color="#CCCCCC"> right</font><font color="#E5E5E5"> but when we are</font>

982
00:51:40,910 --> 00:51:47,270
doing<font color="#E5E5E5"> our payloads</font><font color="#CCCCCC"> in the same context</font>

983
00:51:44,660 --> 00:51:50,690
<font color="#E5E5E5">for example</font><font color="#CCCCCC"> we already</font><font color="#E5E5E5"> at the stage to</font>

984
00:51:47,270 --> 00:51:52,520
brute column name inside<font color="#CCCCCC"> a</font><font color="#E5E5E5"> column we</font>

985
00:51:50,690 --> 00:51:55,280
should be able<font color="#E5E5E5"> to send this information</font>

986
00:51:52,520 --> 00:51:58,099
<font color="#E5E5E5">back to neural network with no hard</font>

987
00:51:55,280 --> 00:52:01,520
coding to ask them to<font color="#CCCCCC"> generate</font><font color="#E5E5E5"> new</font>

988
00:51:58,099 --> 00:52:03,619
column name to generate new like<font color="#E5E5E5"> syntax</font>

989
00:52:01,520 --> 00:52:07,910
construction instead of trying the same

990
00:52:03,619 --> 00:52:10,520
things to be to be to be<font color="#CCCCCC"> able not</font><font color="#E5E5E5"> only</font>

991
00:52:07,910 --> 00:52:12,410
<font color="#E5E5E5">generate payloads and to crash app to</font>

992
00:52:10,520 --> 00:52:15,049
produce some exception but to be able<font color="#CCCCCC"> to</font>

993
00:52:12,410 --> 00:52:17,420
automate this data extraction<font color="#E5E5E5"> automate</font>

994
00:52:15,049 --> 00:52:19,700
<font color="#E5E5E5">this exploitation process at all which</font>

995
00:52:17,420 --> 00:52:23,079
is also<font color="#E5E5E5"> possible I believe that next</font>

996
00:52:19,700 --> 00:52:25,939
year<font color="#E5E5E5"> I'll present you something like AI</font>

997
00:52:23,079 --> 00:52:28,039
based<font color="#E5E5E5"> cycle map with ability to steal</font>

998
00:52:25,940 --> 00:52:31,069
data from<font color="#E5E5E5"> anything</font><font color="#CCCCCC"> with ability to ask</font>

999
00:52:28,039 --> 00:52:34,490
<font color="#E5E5E5">this network for</font><font color="#CCCCCC"> examples for</font><font color="#E5E5E5"> some</font>

1000
00:52:31,069 --> 00:52:37,730
questions like<font color="#E5E5E5"> done like dump this table</font>

1001
00:52:34,490 --> 00:52:41,209
or dump<font color="#CCCCCC"> all the table and this</font><font color="#E5E5E5"> training</font>

1002
00:52:37,730 --> 00:52:44,690
system will able<font color="#CCCCCC"> to determine</font><font color="#E5E5E5"> which</font>

1003
00:52:41,210 --> 00:52:47,990
database used at<font color="#CCCCCC"> that case and how to</font>

1004
00:52:44,690 --> 00:52:50,750
<font color="#E5E5E5">extract and how to solve your</font><font color="#CCCCCC"> task</font><font color="#E5E5E5"> how</font>

1005
00:52:47,990 --> 00:52:52,910
to extract this data<font color="#E5E5E5"> to do not only</font>

1006
00:52:50,750 --> 00:52:55,670
<font color="#E5E5E5">identify that we have owner abilities</font>

1007
00:52:52,910 --> 00:52:57,980
there as this neural network<font color="#CCCCCC"> can</font><font color="#E5E5E5"> do but</font>

1008
00:52:55,670 --> 00:52:59,990
<font color="#E5E5E5">also to automate this exploitation</font>

1009
00:52:57,980 --> 00:53:05,329
problem at all<font color="#CCCCCC"> and</font><font color="#E5E5E5"> then I'd like</font><font color="#CCCCCC"> to hack</font>

1010
00:52:59,990 --> 00:53:07,609
the planet or so<font color="#E5E5E5"> so some sort of vision</font>

1011
00:53:05,329 --> 00:53:11,680
<font color="#CCCCCC">so let</font><font color="#E5E5E5"> me please explain my vision</font>

1012
00:53:07,609 --> 00:53:11,680
<font color="#E5E5E5">because I still have five</font><font color="#CCCCCC"> minutes</font>

1013
00:53:11,950 --> 00:53:21,939
<font color="#E5E5E5">oh yeah</font><font color="#CCCCCC"> so I have</font><font color="#E5E5E5"> trouble with</font><font color="#CCCCCC"> my</font><font color="#E5E5E5"> yeah</font>

1014
00:53:17,410 --> 00:53:24,190
<font color="#E5E5E5">anyway so looks like I</font><font color="#CCCCCC"> broke this</font><font color="#E5E5E5"> and</font>

1015
00:53:21,940 --> 00:53:26,500
<font color="#E5E5E5">next</font><font color="#CCCCCC"> bigger should should use some</font>

1016
00:53:24,190 --> 00:53:35,950
<font color="#CCCCCC">signals</font><font color="#E5E5E5"> anyway who cares about next</font>

1017
00:53:26,500 --> 00:53:40,570
<font color="#E5E5E5">speaker</font><font color="#CCCCCC"> ten years</font><font color="#E5E5E5"> ago</font><font color="#CCCCCC"> even twenty years</font>

1018
00:53:35,950 --> 00:53:44,080
<font color="#CCCCCC">ago it was people</font><font color="#E5E5E5"> versus people battle</font>

1019
00:53:40,570 --> 00:53:47,980
and attackers were people and defenders

1020
00:53:44,080 --> 00:53:51,190
were also people nowadays<font color="#E5E5E5"> we</font><font color="#CCCCCC"> have a I</font>

1021
00:53:47,980 --> 00:53:53,350
generated a I based defenders like an

1022
00:53:51,190 --> 00:53:57,910
adult<font color="#CCCCCC"> silenced some kind</font><font color="#E5E5E5"> of companies</font>

1023
00:53:53,350 --> 00:54:01,089
with strange names<font color="#E5E5E5"> with science ID how</font>

1024
00:53:57,910 --> 00:54:03,520
the company<font color="#CCCCCC"> is based</font><font color="#E5E5E5"> on AI some of them</font>

1025
00:54:01,090 --> 00:54:06,510
claims<font color="#CCCCCC"> that</font><font color="#E5E5E5"> they have an eye some of</font>

1026
00:54:03,520 --> 00:54:09,550
them have some<font color="#CCCCCC"> sort of an eye</font><font color="#E5E5E5"> a eye but</font>

1027
00:54:06,510 --> 00:54:12,220
it is definitely<font color="#CCCCCC"> possible</font><font color="#E5E5E5"> to claim that</font>

1028
00:54:09,550 --> 00:54:15,580
<font color="#E5E5E5">we already have AI defend or some sort</font>

1029
00:54:12,220 --> 00:54:17,379
of AI defenders yes sometimes it's just

1030
00:54:15,580 --> 00:54:20,350
marketing<font color="#E5E5E5"> bullshit but sometimes it's</font>

1031
00:54:17,380 --> 00:54:25,120
something<font color="#E5E5E5"> reasonable and now I try</font><font color="#CCCCCC"> to</font>

1032
00:54:20,350 --> 00:54:27,819
reinvent<font color="#E5E5E5"> society and try to suggest AI</font>

1033
00:54:25,120 --> 00:54:30,310
takers it is possible to<font color="#CCCCCC"> generate a</font>

1034
00:54:27,820 --> 00:54:34,180
<font color="#E5E5E5">thousand payloads it's possible to</font>

1035
00:54:30,310 --> 00:54:37,000
generate<font color="#E5E5E5"> some sort of data to create the</font>

1036
00:54:34,180 --> 00:54:41,200
app to identify vulnerabilities<font color="#E5E5E5"> and it's</font>

1037
00:54:37,000 --> 00:54:43,720
definitely<font color="#E5E5E5"> possible in</font><font color="#CCCCCC"> theory</font><font color="#E5E5E5"> to</font>

1038
00:54:41,200 --> 00:54:46,500
automate all<font color="#CCCCCC"> the attack exploitation</font>

1039
00:54:43,720 --> 00:54:50,200
process from<font color="#E5E5E5"> fighting to identify things</font>

1040
00:54:46,500 --> 00:54:52,780
to steal the data to have an access<font color="#CCCCCC"> to</font>

1041
00:54:50,200 --> 00:54:55,960
<font color="#E5E5E5">the data to exploit something and to</font><font color="#CCCCCC"> hug</font>

1042
00:54:52,780 --> 00:54:58,110
the<font color="#E5E5E5"> planet at all so that's all thank</font>

1043
00:54:55,960 --> 00:54:58,110
<font color="#CCCCCC">you</font>

1044
00:55:01,190 --> 00:55:06,030
<font color="#E5E5E5">thank you any</font><font color="#CCCCCC"> questions from the floor</font>

1045
00:55:03,589 --> 00:55:08,099
<font color="#E5E5E5">yeah I should mention that so I'll</font>

1046
00:55:06,030 --> 00:55:11,220
publish all<font color="#CCCCCC"> the results here at our</font>

1047
00:55:08,099 --> 00:55:16,619
github<font color="#E5E5E5"> and this tool will</font><font color="#CCCCCC"> be available</font>

1048
00:55:11,220 --> 00:55:21,839
soon<font color="#CCCCCC"> maybe</font><font color="#E5E5E5"> tomorrow all right</font><font color="#CCCCCC"> here's one</font>

1049
00:55:16,619 --> 00:55:25,800
question<font color="#E5E5E5"> all right thanks for the talk</font>

1050
00:55:21,839 --> 00:55:33,619
that's a cool tool<font color="#CCCCCC"> you</font><font color="#E5E5E5"> never seen this</font>

1051
00:55:25,800 --> 00:55:33,619
tool how long did you<font color="#E5E5E5"> train your lower</font>

1052
00:55:34,700 --> 00:55:41,520
so I should mention<font color="#E5E5E5"> that since we a</font>

1053
00:55:39,060 --> 00:55:46,049
commercial company<font color="#E5E5E5"> we have a lot</font><font color="#CCCCCC"> of</font>

1054
00:55:41,520 --> 00:55:48,900
<font color="#E5E5E5">resources and but what is really good</font>

1055
00:55:46,050 --> 00:55:51,900
here is<font color="#E5E5E5"> I'll publish all</font><font color="#CCCCCC"> the training</font>

1056
00:55:48,900 --> 00:55:54,180
<font color="#E5E5E5">results at the github</font><font color="#CCCCCC"> it will be</font>

1057
00:55:51,900 --> 00:55:56,270
possible to download<font color="#CCCCCC"> pre trained at</font>

1058
00:55:54,180 --> 00:55:59,368
neural network<font color="#E5E5E5"> and start to apply them</font>

1059
00:55:56,270 --> 00:56:00,060
but if you<font color="#CCCCCC"> would</font><font color="#E5E5E5"> like to train the thing</font>

1060
00:55:59,369 --> 00:56:02,910
from scratch

1061
00:56:00,060 --> 00:56:05,849
it's also possible<font color="#E5E5E5"> but it depends</font><font color="#CCCCCC"> on</font>

1062
00:56:02,910 --> 00:56:09,149
<font color="#E5E5E5">your train set</font><font color="#CCCCCC"> for the many reasons</font><font color="#E5E5E5"> and</font>

1063
00:56:05,849 --> 00:56:12,569
so I have<font color="#E5E5E5"> no way to disclosure all the</font>

1064
00:56:09,150 --> 00:56:15,569
train sets<font color="#E5E5E5"> because some of them based on</font>

1065
00:56:12,569 --> 00:56:21,060
our<font color="#E5E5E5"> data from data from</font><font color="#CCCCCC"> our clients data</font>

1066
00:56:15,569 --> 00:56:23,339
from honey pots and we have no any ways

1067
00:56:21,060 --> 00:56:26,040
to<font color="#E5E5E5"> disclose this data</font><font color="#CCCCCC"> but I'll publish</font>

1068
00:56:23,339 --> 00:56:28,859
<font color="#CCCCCC">pre-trained</font><font color="#E5E5E5"> it neural network and I'll</font>

1069
00:56:26,040 --> 00:56:31,859
publish a tool how to train this neural

1070
00:56:28,859 --> 00:56:35,630
network<font color="#E5E5E5"> based on open source data like</font>

1071
00:56:31,859 --> 00:56:35,630
<font color="#E5E5E5">fuzz DB if a stick see all these things</font>

1072
00:56:41,180 --> 00:56:48,089
actually<font color="#CCCCCC"> in our</font><font color="#E5E5E5"> case it was</font><font color="#CCCCCC"> 20 minutes</font>

1073
00:56:45,180 --> 00:56:55,109
but I'm not sure that<font color="#E5E5E5"> you have the same</font>

1074
00:56:48,089 --> 00:57:01,140
server<font color="#E5E5E5"> up to 20 minutes yeah but I have</font>

1075
00:56:55,109 --> 00:57:02,060
<font color="#E5E5E5">25</font><font color="#CCCCCC"> Nvidia cards at one server</font><font color="#E5E5E5"> don't ask</font>

1076
00:57:01,140 --> 00:57:10,109
me<font color="#E5E5E5"> how</font>

1077
00:57:02,060 --> 00:57:12,930
don't ask me<font color="#E5E5E5"> how just for free really</font>

1078
00:57:10,109 --> 00:57:16,319
really<font color="#CCCCCC"> I have a good friends great</font>

1079
00:57:12,930 --> 00:57:20,190
friends yeah the next question should<font color="#E5E5E5"> be</font>

1080
00:57:16,319 --> 00:57:26,730
how to find<font color="#CCCCCC"> this friends come to hack in</font>

1081
00:57:20,190 --> 00:57:32,970
<font color="#CCCCCC">a box she said yeah so what kind of data</font>

1082
00:57:26,730 --> 00:57:37,560
must be sent on inputs<font color="#E5E5E5"> yeah</font><font color="#CCCCCC"> so funny</font>

1083
00:57:32,970 --> 00:57:40,049
thing here that you<font color="#E5E5E5"> able</font><font color="#CCCCCC"> to put any kind</font>

1084
00:57:37,560 --> 00:57:43,410
of<font color="#E5E5E5"> data I have two</font><font color="#CCCCCC"> different strategies</font>

1085
00:57:40,050 --> 00:57:46,800
<font color="#E5E5E5">here first it's put data from from your</font>

1086
00:57:43,410 --> 00:57:48,629
<font color="#E5E5E5">test for</font><font color="#CCCCCC"> example sessions or like your</font>

1087
00:57:46,800 --> 00:57:50,280
wagon and<font color="#CCCCCC"> neural network</font><font color="#E5E5E5"> should</font>

1088
00:57:48,630 --> 00:57:53,790
understand that<font color="#E5E5E5"> it looks like session</font>

1089
00:57:50,280 --> 00:57:57,599
<font color="#E5E5E5">means hex encoded data I should</font><font color="#CCCCCC"> apply</font>

1090
00:57:53,790 --> 00:57:59,849
I<font color="#E5E5E5"> like memcached injection here if it</font>

1091
00:57:57,599 --> 00:58:03,599
looks<font color="#E5E5E5"> like I don't know HTML</font><font color="#CCCCCC"> code I</font>

1092
00:57:59,849 --> 00:58:07,260
should apply sequel injection<font color="#CCCCCC"> or like</font>

1093
00:58:03,599 --> 00:58:10,560
XSS<font color="#CCCCCC"> if it looks like</font><font color="#E5E5E5"> sequel injection</font>

1094
00:58:07,260 --> 00:58:11,130
<font color="#E5E5E5">already for example</font><font color="#CCCCCC"> data from PHP</font>

1095
00:58:10,560 --> 00:58:12,960
myadmin

1096
00:58:11,130 --> 00:58:14,880
it's definitely<font color="#CCCCCC"> by the</font><font color="#E5E5E5"> way to apply</font>

1097
00:58:12,960 --> 00:58:19,200
sequel injections here<font color="#E5E5E5"> it's works even</font>

1098
00:58:14,880 --> 00:58:22,109
without<font color="#E5E5E5"> us right and but my second</font>

1099
00:58:19,200 --> 00:58:25,140
<font color="#CCCCCC">strategies</font><font color="#E5E5E5"> I mentioned before is to run</font>

1100
00:58:22,109 --> 00:58:28,020
simple one by<font color="#E5E5E5"> faster first client</font>

1101
00:58:25,140 --> 00:58:29,549
anomalies there and apply the results of

1102
00:58:28,020 --> 00:58:32,160
the sub normally to neural net or to

1103
00:58:29,550 --> 00:58:34,200
generate<font color="#E5E5E5"> the continuation of these</font>

1104
00:58:32,160 --> 00:58:36,480
generations<font color="#CCCCCC"> it's better than try</font><font color="#E5E5E5"> to use</font>

1105
00:58:34,200 --> 00:58:40,078
an as approach says as I mentioned

1106
00:58:36,480 --> 00:58:46,980
before<font color="#E5E5E5"> at this slide it's definitely</font>

1107
00:58:40,079 --> 00:58:52,230
recommended to<font color="#CCCCCC"> apply some sort</font><font color="#E5E5E5"> of let me</font>

1108
00:58:46,980 --> 00:58:53,970
show<font color="#E5E5E5"> ya this sort of fuzzing using like</font>

1109
00:58:52,230 --> 00:58:57,560
complete files and based on<font color="#E5E5E5"> two bytes</font>

1110
00:58:53,970 --> 00:59:01,709
<font color="#E5E5E5">how</font><font color="#CCCCCC"> fasten</font><font color="#E5E5E5"> which means that we able</font><font color="#CCCCCC"> to</font>

1111
00:58:57,560 --> 00:59:04,109
split all the<font color="#E5E5E5"> bytes from from 7f to FF</font>

1112
00:59:01,710 --> 00:59:06,119
and run this<font color="#CCCCCC"> fasten generates some kind</font>

1113
00:59:04,109 --> 00:59:08,009
of<font color="#CCCCCC"> not abnormally</font><font color="#E5E5E5"> and run this neural</font>

1114
00:59:06,119 --> 00:59:10,859
network using this some<font color="#E5E5E5"> sort of data but</font>

1115
00:59:08,010 --> 00:59:13,319
it's also possible to<font color="#CCCCCC"> using</font><font color="#E5E5E5"> so strategy</font>

1116
00:59:10,859 --> 00:59:14,880
and run them based on<font color="#E5E5E5"> your data from</font>

1117
00:59:13,319 --> 00:59:17,180
<font color="#CCCCCC">your request normal data actually it's</font>

1118
00:59:14,880 --> 00:59:22,250
also<font color="#E5E5E5"> possible</font>

1119
00:59:17,180 --> 00:59:25,710
thank you any further<font color="#E5E5E5"> questions</font>

1120
00:59:22,250 --> 00:59:27,780
<font color="#E5E5E5">no well thank you</font><font color="#CCCCCC"> very much I have</font><font color="#E5E5E5"> a</font>

1121
00:59:25,710 --> 00:59:29,430
great talk and<font color="#E5E5E5"> for releasing announcing</font>

1122
00:59:27,780 --> 00:59:33,830
<font color="#E5E5E5">the release of neural paths that is my</font>

1123
00:59:29,430 --> 00:59:33,830
TV<font color="#CCCCCC"> hello</font><font color="#E5E5E5"> I github thank you</font>

