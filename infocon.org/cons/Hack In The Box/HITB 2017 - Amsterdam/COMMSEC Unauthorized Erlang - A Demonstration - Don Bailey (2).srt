1
00:00:10,530 --> 00:00:14,579
so this is<font color="#CCCCCC"> a</font><font color="#E5E5E5"> really interesting take on</font>

2
00:00:12,930 --> 00:00:19,560
a<font color="#CCCCCC"> language</font><font color="#E5E5E5"> that's supposed</font><font color="#CCCCCC"> to</font><font color="#E5E5E5"> be</font>

3
00:00:14,580 --> 00:00:21,869
here<font color="#CCCCCC"> I spent</font><font color="#E5E5E5"> about a</font><font color="#CCCCCC"> year a little bit</font>

4
00:00:19,560 --> 00:00:24,540
over a year<font color="#CCCCCC"> actually about a year and a</font>

5
00:00:21,869 --> 00:00:26,580
half now<font color="#E5E5E5"> researching the internals of</font>

6
00:00:24,540 --> 00:00:28,860
<font color="#E5E5E5">Erlang</font><font color="#CCCCCC"> to try to figure</font><font color="#E5E5E5"> out how it could</font>

7
00:00:26,580 --> 00:00:30,869
<font color="#E5E5E5">be attacked which is really</font><font color="#CCCCCC"> fun because</font>

8
00:00:28,860 --> 00:00:33,330
Erlang is supposed to be a secure

9
00:00:30,869 --> 00:00:35,699
implementation of a<font color="#E5E5E5"> distributed parallel</font>

10
00:00:33,330 --> 00:00:39,030
processing language<font color="#CCCCCC"> it has a lot of</font>

11
00:00:35,699 --> 00:00:41,339
<font color="#E5E5E5">benefits internally just from being able</font>

12
00:00:39,030 --> 00:00:43,040
<font color="#E5E5E5">to distribute code over a large space so</font>

13
00:00:41,340 --> 00:00:46,199
you can have<font color="#E5E5E5"> massive amounts of nodes</font>

14
00:00:43,040 --> 00:00:50,070
<font color="#E5E5E5">performing processing all at once</font><font color="#CCCCCC"> it's</font>

15
00:00:46,199 --> 00:00:51,750
also an interpreted language<font color="#CCCCCC"> it</font><font color="#E5E5E5"> actually</font>

16
00:00:50,070 --> 00:00:55,170
runs inside<font color="#E5E5E5"> of a virtual machine called</font>

17
00:00:51,750 --> 00:00:57,059
<font color="#E5E5E5">beam but the language</font><font color="#CCCCCC"> definition itself</font>

18
00:00:55,170 --> 00:00:59,699
<font color="#E5E5E5">negates the ability to</font><font color="#CCCCCC"> perform</font>

19
00:00:57,059 --> 00:01:02,699
significant cut types of attacks<font color="#CCCCCC"> that</font>

20
00:00:59,699 --> 00:01:06,060
<font color="#E5E5E5">you normally</font><font color="#CCCCCC"> see in</font><font color="#E5E5E5"> regular languages so</font>

21
00:01:02,699 --> 00:01:08,429
the cool part if I can get this<font color="#E5E5E5"> thing to</font>

22
00:01:06,060 --> 00:01:11,750
<font color="#CCCCCC">work</font><font color="#E5E5E5"> which it's not you know what</font>

23
00:01:08,430 --> 00:01:11,750
<font color="#E5E5E5">somebody want to flip the slides for me</font>

24
00:01:14,840 --> 00:01:24,120
it's just<font color="#E5E5E5"> wildly going</font><font color="#CCCCCC"> ok cool well</font>

25
00:01:21,930 --> 00:01:26,130
we'll<font color="#E5E5E5"> get back to the second but I just</font>

26
00:01:24,120 --> 00:01:30,600
wanted to jump<font color="#CCCCCC"> into the core</font><font color="#E5E5E5"> of what</font>

27
00:01:26,130 --> 00:01:33,630
Erlang is all about so as<font color="#E5E5E5"> Emanuel was</font>

28
00:01:30,600 --> 00:01:36,149
talking about<font color="#CCCCCC"> erling briefly some</font><font color="#E5E5E5"> of you</font>

29
00:01:33,630 --> 00:01:38,190
may or may<font color="#CCCCCC"> not know this but the beauty</font>

30
00:01:36,150 --> 00:01:40,320
of Erlang is that everything runs<font color="#E5E5E5"> Erlang</font>

31
00:01:38,190 --> 00:01:42,149
and nobody has a<font color="#E5E5E5"> clue that it's such an</font>

32
00:01:40,320 --> 00:01:44,190
important<font color="#CCCCCC"> language how many people here</font>

33
00:01:42,150 --> 00:01:46,260
<font color="#CCCCCC">have</font><font color="#E5E5E5"> actually heard of it except for</font><font color="#CCCCCC"> the</font>

34
00:01:44,190 --> 00:01:50,009
last talk<font color="#CCCCCC"> ok so a few people</font><font color="#E5E5E5"> that's</font>

35
00:01:46,260 --> 00:01:52,230
great<font color="#CCCCCC"> the elegant thing about Erlang is</font>

36
00:01:50,010 --> 00:01:54,780
that it's been used<font color="#CCCCCC"> for decades without</font>

37
00:01:52,230 --> 00:01:58,290
very much of a change<font color="#E5E5E5"> to the core</font>

38
00:01:54,780 --> 00:02:00,540
<font color="#CCCCCC">language itself</font><font color="#E5E5E5"> it really</font><font color="#CCCCCC"> has needed</font><font color="#E5E5E5"> it</font>

39
00:01:58,290 --> 00:02:03,180
every major telco infrastructure that

40
00:02:00,540 --> 00:02:05,340
<font color="#E5E5E5">you see today runs Erlang without us</font>

41
00:02:03,180 --> 00:02:07,680
even<font color="#CCCCCC"> having to</font><font color="#E5E5E5"> think twice</font><font color="#CCCCCC"> about the</font>

42
00:02:05,340 --> 00:02:09,959
<font color="#E5E5E5">infrastructure itself so it's a very</font>

43
00:02:07,680 --> 00:02:11,459
elegant<font color="#CCCCCC"> long used language and it</font>

44
00:02:09,959 --> 00:02:16,349
eradicate<font color="#CCCCCC"> sal ott of the vulnerabilities</font>

45
00:02:11,459 --> 00:02:19,799
that<font color="#E5E5E5"> you normally</font><font color="#CCCCCC"> see in programming</font><font color="#E5E5E5"> so</font>

46
00:02:16,349 --> 00:02:23,429
in Erlang itself<font color="#E5E5E5"> it's kind of a secret</font>

47
00:02:19,799 --> 00:02:26,910
<font color="#CCCCCC">garden</font><font color="#E5E5E5"> the security</font><font color="#CCCCCC"> model of Erlang is</font>

48
00:02:23,430 --> 00:02:28,200
quite simplistic<font color="#E5E5E5"> in that once you have</font>

49
00:02:26,910 --> 00:02:29,910
the<font color="#E5E5E5"> ability to execute</font>

50
00:02:28,200 --> 00:02:33,089
you can<font color="#CCCCCC"> literally do whatever</font><font color="#E5E5E5"> you want</font>

51
00:02:29,910 --> 00:02:35,340
the security model<font color="#E5E5E5"> is you can't execute</font>

52
00:02:33,090 --> 00:02:37,860
<font color="#E5E5E5">code</font><font color="#CCCCCC"> without the ability to connect</font><font color="#E5E5E5"> to</font>

53
00:02:35,340 --> 00:02:39,960
the node<font color="#E5E5E5"> network so unless</font><font color="#CCCCCC"> you have</font>

54
00:02:37,860 --> 00:02:42,180
<font color="#E5E5E5">these cryptographic keys or secret</font>

55
00:02:39,960 --> 00:02:45,030
cookies or whatever<font color="#E5E5E5"> to connect to a</font>

56
00:02:42,180 --> 00:02:46,530
series of<font color="#E5E5E5"> nodes you</font><font color="#CCCCCC"> can't do anything in</font>

57
00:02:45,030 --> 00:02:48,720
the network<font color="#E5E5E5"> that seems</font><font color="#CCCCCC"> very simplistic</font>

58
00:02:46,530 --> 00:02:51,270
well it is right<font color="#E5E5E5"> once you get a node</font>

59
00:02:48,720 --> 00:02:53,340
access you basically not<font color="#CCCCCC"> only have code</font>

60
00:02:51,270 --> 00:02:56,250
execution<font color="#E5E5E5"> inside the virtual machine</font>

61
00:02:53,340 --> 00:02:58,500
<font color="#E5E5E5">itself but you also have the ability</font><font color="#CCCCCC"> to</font>

62
00:02:56,250 --> 00:03:00,570
run<font color="#E5E5E5"> code on</font><font color="#CCCCCC"> the host operating</font><font color="#E5E5E5"> system</font><font color="#CCCCCC"> in</font>

63
00:02:58,500 --> 00:03:04,050
most cases there<font color="#CCCCCC"> are certain</font>

64
00:03:00,570 --> 00:03:06,630
environments<font color="#E5E5E5"> that limit that</font><font color="#CCCCCC"> but most</font>

65
00:03:04,050 --> 00:03:09,330
<font color="#E5E5E5">often you'll see code execution pretty</font>

66
00:03:06,630 --> 00:03:10,560
much wildly<font color="#CCCCCC"> available once you</font><font color="#E5E5E5"> are</font>

67
00:03:09,330 --> 00:03:13,290
<font color="#E5E5E5">inside of the virtual</font><font color="#CCCCCC"> media suite</font>

68
00:03:10,560 --> 00:03:15,180
machine<font color="#E5E5E5"> itself without significant</font>

69
00:03:13,290 --> 00:03:18,750
patching<font color="#E5E5E5"> there's really no way to</font>

70
00:03:15,180 --> 00:03:20,489
specifically say hey<font color="#E5E5E5"> you can you know</font>

71
00:03:18,750 --> 00:03:22,709
disable the ability<font color="#CCCCCC"> to execute</font><font color="#E5E5E5"> code</font>

72
00:03:20,489 --> 00:03:24,300
<font color="#CCCCCC">outside of the</font><font color="#E5E5E5"> virtual machine so if</font>

73
00:03:22,709 --> 00:03:26,160
you're using a default<font color="#E5E5E5"> install which</font>

74
00:03:24,300 --> 00:03:28,440
most people<font color="#E5E5E5"> are of the language itself</font>

75
00:03:26,160 --> 00:03:30,750
you will<font color="#CCCCCC"> be able</font><font color="#E5E5E5"> to</font><font color="#CCCCCC"> get codes the code</font>

76
00:03:28,440 --> 00:03:35,040
execution everywhere if you<font color="#CCCCCC"> can get code</font>

77
00:03:30,750 --> 00:03:38,450
<font color="#E5E5E5">execution within beam</font><font color="#CCCCCC"> so the risks</font><font color="#E5E5E5"> of</font>

78
00:03:35,040 --> 00:03:41,600
Erlang make it a<font color="#E5E5E5"> really elegant language</font>

79
00:03:38,450 --> 00:03:43,738
<font color="#E5E5E5">resilient from tax so all the</font>

80
00:03:41,600 --> 00:03:45,269
vulnerabilities<font color="#E5E5E5"> that you would normally</font>

81
00:03:43,739 --> 00:03:49,799
<font color="#E5E5E5">see</font><font color="#CCCCCC"> in programming</font><font color="#E5E5E5"> languages have been</font>

82
00:03:45,269 --> 00:03:53,489
<font color="#E5E5E5">eradicated by</font><font color="#CCCCCC"> Erlang's</font><font color="#E5E5E5"> programming model</font>

83
00:03:49,799 --> 00:03:55,799
once it's interpreted your program<font color="#E5E5E5"> all</font>

84
00:03:53,489 --> 00:03:58,200
variables are right once right so you

85
00:03:55,799 --> 00:04:03,989
can never write to the same vulnerable

86
00:03:58,200 --> 00:04:06,839
very ability<font color="#CCCCCC"> real truth behind</font><font color="#E5E5E5"> that is a</font>

87
00:04:03,989 --> 00:04:10,170
<font color="#E5E5E5">little bit more complex</font><font color="#CCCCCC"> if you interpret</font>

88
00:04:06,840 --> 00:04:13,080
the actual code that<font color="#E5E5E5"> runs the beam</font>

89
00:04:10,170 --> 00:04:15,570
virtual machine it doesn't<font color="#E5E5E5"> quite</font><font color="#CCCCCC"> work</font>

90
00:04:13,080 --> 00:04:17,190
that<font color="#E5E5E5"> way it presumes</font><font color="#CCCCCC"> that things work</font>

91
00:04:15,570 --> 00:04:18,510
that way<font color="#E5E5E5"> but there are certain</font><font color="#CCCCCC"> instances</font>

92
00:04:17,190 --> 00:04:20,760
where<font color="#E5E5E5"> variables are</font><font color="#CCCCCC"> actually</font><font color="#E5E5E5"> written</font>

93
00:04:18,510 --> 00:04:22,919
twice<font color="#CCCCCC"> but</font><font color="#E5E5E5"> we're not really going to get</font>

94
00:04:20,760 --> 00:04:26,310
into<font color="#E5E5E5"> that the point that I'm making here</font>

95
00:04:22,919 --> 00:04:31,080
<font color="#E5E5E5">is</font><font color="#CCCCCC"> that</font><font color="#E5E5E5"> the literally only value valid</font>

96
00:04:26,310 --> 00:04:33,840
way of attacking<font color="#E5E5E5"> Erlang remotely is to</font>

97
00:04:31,080 --> 00:04:37,409
do one of<font color="#CCCCCC"> two things</font><font color="#E5E5E5"> number one load</font>

98
00:04:33,840 --> 00:04:40,109
code into Erlang so you have the you

99
00:04:37,410 --> 00:04:41,910
know<font color="#E5E5E5"> connection keys</font><font color="#CCCCCC"> for number two you</font>

100
00:04:40,110 --> 00:04:44,280
have<font color="#E5E5E5"> access</font><font color="#CCCCCC"> to a V</font>

101
00:04:41,910 --> 00:04:47,250
<font color="#E5E5E5">neural function inside</font><font color="#CCCCCC"> of the</font><font color="#E5E5E5"> virtual</font>

102
00:04:44,280 --> 00:04:50,900
machine<font color="#CCCCCC"> itself which there are several</font><font color="#E5E5E5"> I</font>

103
00:04:47,250 --> 00:04:52,950
did a talk at<font color="#E5E5E5"> lambda cough last year</font>

104
00:04:50,900 --> 00:04:54,599
that exposed some critical

105
00:04:52,950 --> 00:04:57,270
vulnerabilities inside the Erlang

106
00:04:54,600 --> 00:05:00,360
virtual machine<font color="#E5E5E5"> that</font><font color="#CCCCCC"> I also got Ericsson</font>

107
00:04:57,270 --> 00:05:02,190
to patch those could<font color="#CCCCCC"> be triggered in</font>

108
00:05:00,360 --> 00:05:03,990
certain<font color="#E5E5E5"> circumstances</font><font color="#CCCCCC"> to</font><font color="#E5E5E5"> get remote code</font>

109
00:05:02,190 --> 00:05:06,300
execution but it was really<font color="#E5E5E5"> difficult to</font>

110
00:05:03,990 --> 00:05:08,160
do it and only like a beachy style

111
00:05:06,300 --> 00:05:09,930
attackers<font color="#CCCCCC"> like myself would be</font><font color="#E5E5E5"> capable</font>

112
00:05:08,160 --> 00:05:11,310
<font color="#E5E5E5">of</font><font color="#CCCCCC"> doing that</font><font color="#E5E5E5"> you're not going to see</font>

113
00:05:09,930 --> 00:05:14,430
random people doing that kind of thing

114
00:05:11,310 --> 00:05:16,380
<font color="#CCCCCC">so in the realistic Erlang environment</font>

115
00:05:14,430 --> 00:05:19,770
<font color="#E5E5E5">all nodes being essentially under the</font>

116
00:05:16,380 --> 00:05:21,740
same security<font color="#E5E5E5"> domain the only viable way</font>

117
00:05:19,770 --> 00:05:23,729
of really attacking<font color="#E5E5E5"> Erlang is by</font>

118
00:05:21,740 --> 00:05:26,220
connecting to Erlang with a<font color="#E5E5E5"> valid</font>

119
00:05:23,730 --> 00:05:28,980
security<font color="#E5E5E5"> token it's really the</font><font color="#CCCCCC"> only</font><font color="#E5E5E5"> way</font>

120
00:05:26,220 --> 00:05:30,990
to do it<font color="#CCCCCC"> so in the Erlang security model</font>

121
00:05:28,980 --> 00:05:32,790
once you have that token that

122
00:05:30,990 --> 00:05:35,250
cryptographic capability there's nothing

123
00:05:32,790 --> 00:05:36,690
<font color="#E5E5E5">else to do so there's an interesting</font>

124
00:05:35,250 --> 00:05:39,960
<font color="#E5E5E5">point that I want to make on this slide</font>

125
00:05:36,690 --> 00:05:43,140
<font color="#E5E5E5">about monotonic timers so monotonic</font>

126
00:05:39,960 --> 00:05:45,210
timers are a source of<font color="#E5E5E5"> entropy for</font>

127
00:05:43,140 --> 00:05:48,000
building the security<font color="#E5E5E5"> tokens for</font>

128
00:05:45,210 --> 00:05:49,680
accessing Erlang<font color="#E5E5E5"> that's going to come up</font>

129
00:05:48,000 --> 00:05:52,800
in a<font color="#CCCCCC"> minute when I talk about the way to</font>

130
00:05:49,680 --> 00:05:56,250
exploit<font color="#E5E5E5"> Erlang because that's a feature</font>

131
00:05:52,800 --> 00:05:58,290
<font color="#E5E5E5">of</font><font color="#CCCCCC"> the virtual machine or a virtual beam</font>

132
00:05:56,250 --> 00:06:00,480
operating system that's entirely

133
00:05:58,290 --> 00:06:02,160
guessable<font color="#E5E5E5"> this is monotonic timers are</font>

134
00:06:00,480 --> 00:06:05,070
only<font color="#E5E5E5"> one way right they're</font><font color="#CCCCCC"> not arbitrary</font>

135
00:06:02,160 --> 00:06:06,600
they tick in one direction<font color="#CCCCCC"> well if you</font>

136
00:06:05,070 --> 00:06:09,630
know that<font color="#CCCCCC"> things tick in one direction</font>

137
00:06:06,600 --> 00:06:12,180
<font color="#CCCCCC">and</font><font color="#E5E5E5"> you</font><font color="#CCCCCC"> knew about when that monotonic</font>

138
00:06:09,630 --> 00:06:14,159
timer is going to execute you pretty

139
00:06:12,180 --> 00:06:16,560
much can guess<font color="#E5E5E5"> when that particular</font>

140
00:06:14,160 --> 00:06:18,600
timer<font color="#E5E5E5"> is going to execute within a</font>

141
00:06:16,560 --> 00:06:21,660
<font color="#E5E5E5">window that's valuable to you</font><font color="#CCCCCC"> and you</font>

142
00:06:18,600 --> 00:06:23,700
probably<font color="#E5E5E5"> know what the value</font><font color="#CCCCCC"> is right so</font>

143
00:06:21,660 --> 00:06:27,930
let's<font color="#E5E5E5"> get straight into</font><font color="#CCCCCC"> it I was going</font>

144
00:06:23,700 --> 00:06:31,349
<font color="#E5E5E5">to do a demo but we're having</font><font color="#CCCCCC"> problems</font>

145
00:06:27,930 --> 00:06:33,750
with<font color="#CCCCCC"> my iPad apparently on this trip</font>

146
00:06:31,350 --> 00:06:35,730
where I can't ever connect the iPad<font color="#CCCCCC"> to</font>

147
00:06:33,750 --> 00:06:36,930
<font color="#CCCCCC">the projector so we're</font><font color="#E5E5E5"> not going to do</font>

148
00:06:35,730 --> 00:06:38,700
the demos but doesn't really matter

149
00:06:36,930 --> 00:06:40,320
<font color="#E5E5E5">because you don't really need to see the</font>

150
00:06:38,700 --> 00:06:44,370
demos it's really just a pretty script

151
00:06:40,320 --> 00:06:47,430
anyway the results is that<font color="#E5E5E5"> no matter</font>

152
00:06:44,370 --> 00:06:49,380
what the security cookie is or security

153
00:06:47,430 --> 00:06:52,710
key is to log on to remote<font color="#E5E5E5"> Erlang</font>

154
00:06:49,380 --> 00:06:54,030
instance you can guess it in about<font color="#CCCCCC"> 10</font>

155
00:06:52,710 --> 00:06:57,930
<font color="#CCCCCC">minutes max</font>

156
00:06:54,030 --> 00:07:00,570
that's it doesn't matter<font color="#CCCCCC"> what the</font>

157
00:06:57,930 --> 00:07:03,720
particular<font color="#E5E5E5"> service</font><font color="#CCCCCC"> is all you have to do</font>

158
00:07:00,570 --> 00:07:05,490
is figure out<font color="#E5E5E5"> essentially the</font><font color="#CCCCCC"> timers</font>

159
00:07:03,720 --> 00:07:06,990
<font color="#CCCCCC">that are used to generate</font><font color="#E5E5E5"> the cookie</font>

160
00:07:05,490 --> 00:07:10,500
that was then used<font color="#E5E5E5"> to construct the</font>

161
00:07:06,990 --> 00:07:12,000
<font color="#CCCCCC">Erlang</font><font color="#E5E5E5"> node</font><font color="#CCCCCC"> so there</font><font color="#E5E5E5"> are a couple</font><font color="#CCCCCC"> of</font>

162
00:07:10,500 --> 00:07:15,090
really important tricks that<font color="#CCCCCC"> are</font>

163
00:07:12,000 --> 00:07:18,180
necessary<font color="#E5E5E5"> in doing this</font><font color="#CCCCCC"> and one of them</font>

164
00:07:15,090 --> 00:07:21,560
is the<font color="#E5E5E5"> use</font><font color="#CCCCCC"> of atoms</font><font color="#E5E5E5"> so anybody here</font>

165
00:07:18,180 --> 00:07:24,830
familiar with<font color="#E5E5E5"> Erlang atoms at all no</font>

166
00:07:21,560 --> 00:07:27,930
<font color="#CCCCCC">okay so there's a really cool</font><font color="#E5E5E5"> feature of</font>

167
00:07:24,830 --> 00:07:32,190
<font color="#E5E5E5">Erlang where basically every string is</font>

168
00:07:27,930 --> 00:07:35,220
turned into an object<font color="#E5E5E5"> called an atom now</font>

169
00:07:32,190 --> 00:07:36,840
an atom is really just a<font color="#E5E5E5"> fancy list so</font>

170
00:07:35,220 --> 00:07:40,160
like any language<font color="#E5E5E5"> you would have an</font>

171
00:07:36,840 --> 00:07:43,080
array of<font color="#E5E5E5"> bytes right well an atom is</font>

172
00:07:40,160 --> 00:07:46,080
essentially a string that<font color="#E5E5E5"> a list has</font>

173
00:07:43,080 --> 00:07:48,510
been turned into well<font color="#E5E5E5"> atoms</font><font color="#CCCCCC"> themselves</font>

174
00:07:46,080 --> 00:07:51,300
are like<font color="#CCCCCC"> every other variable in Erlang</font>

175
00:07:48,510 --> 00:07:54,390
<font color="#E5E5E5">they're right once so they aren't</font>

176
00:07:51,300 --> 00:07:57,390
<font color="#E5E5E5">rewritable and they're permanent so they</font>

177
00:07:54,390 --> 00:07:59,280
basically sit in memory forever<font color="#E5E5E5"> so it's</font>

178
00:07:57,390 --> 00:08:01,770
fascinating<font color="#CCCCCC"> about the structure of an</font>

179
00:07:59,280 --> 00:08:04,590
Erlang virtual machine<font color="#E5E5E5"> is that over time</font>

180
00:08:01,770 --> 00:08:07,320
<font color="#E5E5E5">every time an atom is created it will</font>

181
00:08:04,590 --> 00:08:10,229
<font color="#CCCCCC">sit resident in memory until that Erlang</font>

182
00:08:07,320 --> 00:08:11,849
instance dies so when you<font color="#E5E5E5"> think about</font>

183
00:08:10,229 --> 00:08:13,950
<font color="#E5E5E5">all the things that are resident in</font>

184
00:08:11,850 --> 00:08:16,050
<font color="#CCCCCC">memory</font><font color="#E5E5E5"> in Erlang there are a lot of</font>

185
00:08:13,950 --> 00:08:18,120
critical tokens that<font color="#E5E5E5"> will eventually</font>

186
00:08:16,050 --> 00:08:21,270
become<font color="#E5E5E5"> atoms at some point in their life</font>

187
00:08:18,120 --> 00:08:24,210
over<font color="#CCCCCC"> the span of</font><font color="#E5E5E5"> that Erlang instance</font>

188
00:08:21,270 --> 00:08:27,180
<font color="#CCCCCC">and all</font><font color="#E5E5E5"> of those things become atoms in</font>

189
00:08:24,210 --> 00:08:30,090
ways that<font color="#E5E5E5"> you can use them one of them</font>

190
00:08:27,180 --> 00:08:32,370
being the node name<font color="#E5E5E5"> so when you launch a</font>

191
00:08:30,090 --> 00:08:34,709
host machine of any type whether it's a

192
00:08:32,370 --> 00:08:36,719
<font color="#CCCCCC">linux</font><font color="#E5E5E5"> host machine</font><font color="#CCCCCC"> or Erlang host</font>

193
00:08:34,710 --> 00:08:39,330
machine or whatever<font color="#E5E5E5"> everybody has a host</font>

194
00:08:36,719 --> 00:08:41,880
name right<font color="#E5E5E5"> in Erlang you have a host</font>

195
00:08:39,330 --> 00:08:46,440
name as well that's also<font color="#E5E5E5"> called the node</font>

196
00:08:41,880 --> 00:08:50,210
name in Erlang<font color="#E5E5E5"> no names</font><font color="#CCCCCC"> the string dawn</font>

197
00:08:46,440 --> 00:08:55,700
be whatever<font color="#E5E5E5"> is converted into an atom</font>

198
00:08:50,210 --> 00:09:00,450
right so a write once read only<font color="#E5E5E5"> string</font>

199
00:08:55,700 --> 00:09:03,750
<font color="#E5E5E5">the cool part about using that is</font><font color="#CCCCCC"> the</font>

200
00:09:00,450 --> 00:09:06,270
timing model of putting together an atom

201
00:09:03,750 --> 00:09:07,590
so think about<font color="#E5E5E5"> it this way you've</font><font color="#CCCCCC"> got a</font>

202
00:09:06,270 --> 00:09:09,900
string<font color="#E5E5E5"> right</font>

203
00:09:07,590 --> 00:09:11,700
essentially a list of characters and you

204
00:09:09,900 --> 00:09:14,220
want to<font color="#E5E5E5"> convert it into an atom</font><font color="#CCCCCC"> you</font>

205
00:09:11,700 --> 00:09:16,860
<font color="#CCCCCC">already have an existing table</font><font color="#E5E5E5"> of atoms</font>

206
00:09:14,220 --> 00:09:19,710
<font color="#E5E5E5">that's right once so you're going to</font>

207
00:09:16,860 --> 00:09:22,770
<font color="#E5E5E5">check to</font><font color="#CCCCCC"> see if that</font><font color="#E5E5E5"> atom already exists</font>

208
00:09:19,710 --> 00:09:25,140
<font color="#E5E5E5">if it does</font><font color="#CCCCCC"> you're</font><font color="#E5E5E5"> not going to write it</font>

209
00:09:22,770 --> 00:09:27,480
<font color="#CCCCCC">again you're just going to drop and say</font>

210
00:09:25,140 --> 00:09:29,189
<font color="#E5E5E5">okay that's already that's already been</font>

211
00:09:27,480 --> 00:09:31,980
<font color="#CCCCCC">written I don't need to do anything</font>

212
00:09:29,190 --> 00:09:34,400
further<font color="#CCCCCC"> so if you're submitting</font><font color="#E5E5E5"> these</font>

213
00:09:31,980 --> 00:09:37,800
names<font color="#E5E5E5"> remotely over a network connection</font>

214
00:09:34,400 --> 00:09:40,500
<font color="#E5E5E5">you can determine which atoms exist in a</font>

215
00:09:37,800 --> 00:09:43,920
system<font color="#CCCCCC"> already so basically when you</font>

216
00:09:40,500 --> 00:09:46,740
connect to<font color="#CCCCCC"> an early node it presents</font><font color="#E5E5E5"> its</font>

217
00:09:43,920 --> 00:09:51,510
node name and you send your node name<font color="#E5E5E5"> hi</font>

218
00:09:46,740 --> 00:09:54,540
my name is<font color="#E5E5E5"> Don</font><font color="#CCCCCC"> b1</font><font color="#E5E5E5"> right it takes that</font>

219
00:09:51,510 --> 00:09:57,150
message converts your node name into an

220
00:09:54,540 --> 00:10:00,270
atom and then submits that<font color="#E5E5E5"> to the atom</font>

221
00:09:57,150 --> 00:10:02,760
list<font color="#E5E5E5"> if that atom already exists it</font>

222
00:10:00,270 --> 00:10:05,699
drops it on the<font color="#CCCCCC"> floor if it doesn't</font>

223
00:10:02,760 --> 00:10:08,550
<font color="#CCCCCC">exist it</font><font color="#E5E5E5"> essentially creates memory</font>

224
00:10:05,700 --> 00:10:12,030
space allocates<font color="#E5E5E5"> the memory space within</font>

225
00:10:08,550 --> 00:10:14,819
<font color="#E5E5E5">the atom</font><font color="#CCCCCC"> lists</font><font color="#E5E5E5"> copies the data</font><font color="#CCCCCC"> over as</font>

226
00:10:12,030 --> 00:10:17,730
an atom changes<font color="#CCCCCC"> the metadata</font><font color="#E5E5E5"> and then</font>

227
00:10:14,820 --> 00:10:21,240
returns<font color="#E5E5E5"> in other words there's a lot of</font>

228
00:10:17,730 --> 00:10:25,710
crap that<font color="#E5E5E5"> has to be done to convert a</font>

229
00:10:21,240 --> 00:10:28,860
name<font color="#E5E5E5"> or list into an atom so the result</font>

230
00:10:25,710 --> 00:10:31,740
<font color="#E5E5E5">is a very significant timing attack but</font>

231
00:10:28,860 --> 00:10:34,320
why is that important because<font color="#CCCCCC"> the cookie</font>

232
00:10:31,740 --> 00:10:39,030
or the security key is converted into an

233
00:10:34,320 --> 00:10:41,910
atom right so<font color="#E5E5E5"> basically what you can do</font>

234
00:10:39,030 --> 00:10:44,760
is connect<font color="#CCCCCC"> to an</font><font color="#E5E5E5"> ER</font><font color="#CCCCCC"> length system submit</font>

235
00:10:41,910 --> 00:10:47,579
your node name but submit a node name

236
00:10:44,760 --> 00:10:50,730
that<font color="#E5E5E5"> looks like a cookie and then do</font>

237
00:10:47,580 --> 00:10:53,490
that<font color="#E5E5E5"> over and over and</font><font color="#CCCCCC"> over</font><font color="#E5E5E5"> and over and</font>

238
00:10:50,730 --> 00:10:55,710
over<font color="#E5E5E5"> and over until you basically</font>

239
00:10:53,490 --> 00:11:00,020
<font color="#CCCCCC">exhaust the atom space finding this</font>

240
00:10:55,710 --> 00:11:03,570
particular key<font color="#E5E5E5"> now that would</font><font color="#CCCCCC"> seem</font>

241
00:11:00,020 --> 00:11:06,960
impractical right that doesn't<font color="#E5E5E5"> really</font>

242
00:11:03,570 --> 00:11:09,300
make a lot<font color="#CCCCCC"> of sense</font><font color="#E5E5E5"> except that cookie</font>

243
00:11:06,960 --> 00:11:11,850
generation is<font color="#CCCCCC"> 100%</font><font color="#E5E5E5"> guessable on the</font>

244
00:11:09,300 --> 00:11:13,800
majority<font color="#CCCCCC"> of cloud environments</font><font color="#E5E5E5"> and the</font>

245
00:11:11,850 --> 00:11:16,740
reason why is because there<font color="#E5E5E5"> are two keys</font>

246
00:11:13,800 --> 00:11:19,109
<font color="#CCCCCC">that go into the creation of a cookie</font>

247
00:11:16,740 --> 00:11:20,520
number one the monotonic timer that<font color="#E5E5E5"> I</font>

248
00:11:19,110 --> 00:11:22,649
talked about a few<font color="#CCCCCC"> minutes</font><font color="#E5E5E5"> ago</font>

249
00:11:20,520 --> 00:11:24,959
<font color="#E5E5E5">in number</font><font color="#CCCCCC"> two an arbitrary integer</font>

250
00:11:22,649 --> 00:11:28,860
that's<font color="#E5E5E5"> basically created from a minimum</font>

251
00:11:24,959 --> 00:11:30,779
<font color="#E5E5E5">of a couple of bits right</font><font color="#CCCCCC"> not</font><font color="#E5E5E5"> really a</font>

252
00:11:28,860 --> 00:11:36,450
maximum<font color="#CCCCCC"> I think there's a</font><font color="#E5E5E5"> maximum of</font>

253
00:11:30,779 --> 00:11:37,830
like maybe what<font color="#E5E5E5"> seven bits or 15</font><font color="#CCCCCC"> or</font>

254
00:11:36,450 --> 00:11:39,050
something<font color="#E5E5E5"> like</font><font color="#CCCCCC"> that it's a ridiculously</font>

255
00:11:37,830 --> 00:11:42,570
small amount<font color="#E5E5E5"> of entropy</font>

256
00:11:39,050 --> 00:11:44,790
but regardless<font color="#E5E5E5"> most of the numbers are</font>

257
00:11:42,570 --> 00:11:48,330
predictable<font color="#E5E5E5"> so you can essentially</font>

258
00:11:44,790 --> 00:11:51,000
create<font color="#CCCCCC"> a window of about</font><font color="#E5E5E5"> one megabyte</font>

259
00:11:48,330 --> 00:11:53,640
<font color="#E5E5E5">like there there is about one megabyte</font>

260
00:11:51,000 --> 00:11:56,339
of options of possibilities<font color="#E5E5E5"> that the</font>

261
00:11:53,640 --> 00:11:59,160
cookie will be generated by right<font color="#E5E5E5"> and</font>

262
00:11:56,339 --> 00:12:02,370
the cookie<font color="#E5E5E5"> is then converted</font><font color="#CCCCCC"> to a long</font>

263
00:11:59,160 --> 00:12:05,790
string of<font color="#CCCCCC"> characters which</font><font color="#E5E5E5"> is</font>

264
00:12:02,370 --> 00:12:08,010
essentially<font color="#CCCCCC"> very similar to base64 it's</font>

265
00:12:05,790 --> 00:12:09,420
like base 144<font color="#CCCCCC"> or something I can't</font>

266
00:12:08,010 --> 00:12:12,779
remember<font color="#E5E5E5"> the</font><font color="#CCCCCC"> actual number</font><font color="#E5E5E5"> doesn't</font>

267
00:12:09,420 --> 00:12:15,360
<font color="#CCCCCC">matter it's just alphabetic characters</font>

268
00:12:12,779 --> 00:12:18,149
so it's essentially for all intents and

269
00:12:15,360 --> 00:12:19,680
purposes<font color="#CCCCCC"> a string so you</font><font color="#E5E5E5"> have a minimum</font>

270
00:12:18,149 --> 00:12:22,649
<font color="#CCCCCC">amount</font><font color="#E5E5E5"> of characters that</font><font color="#CCCCCC"> you have to</font>

271
00:12:19,680 --> 00:12:25,319
guess so now you've basically taken<font color="#E5E5E5"> okay</font>

272
00:12:22,649 --> 00:12:28,410
I can submit cookies<font color="#E5E5E5"> over and over and</font>

273
00:12:25,320 --> 00:12:30,390
<font color="#CCCCCC">over and</font><font color="#E5E5E5"> over</font><font color="#CCCCCC"> and over and</font><font color="#E5E5E5"> over to</font><font color="#CCCCCC"> I can</font>

274
00:12:28,410 --> 00:12:32,459
only submit cookies within<font color="#CCCCCC"> this one</font>

275
00:12:30,390 --> 00:12:37,050
megabyte window well how long does it

276
00:12:32,459 --> 00:12:39,750
take to issue<font color="#E5E5E5"> one megabyte questions to</font>

277
00:12:37,050 --> 00:12:42,510
remote server these days not<font color="#E5E5E5"> very long</font>

278
00:12:39,750 --> 00:12:44,670
and the entire point of<font color="#E5E5E5"> Erlang is</font>

279
00:12:42,510 --> 00:12:47,640
creating a distributed mesh of systems

280
00:12:44,670 --> 00:12:49,770
right so usually in an<font color="#E5E5E5"> early environment</font>

281
00:12:47,640 --> 00:12:52,709
<font color="#E5E5E5">you don't have just one server you have</font>

282
00:12:49,770 --> 00:12:55,410
<font color="#E5E5E5">three five twenty one hundred</font><font color="#CCCCCC"> one</font>

283
00:12:52,709 --> 00:12:57,270
<font color="#E5E5E5">thousand servers</font><font color="#CCCCCC"> all with the same key</font>

284
00:12:55,410 --> 00:12:59,699
<font color="#E5E5E5">that</font><font color="#CCCCCC"> are all distributed</font><font color="#E5E5E5"> across the</font>

285
00:12:57,270 --> 00:13:01,380
<font color="#E5E5E5">network well if you can access one of</font>

286
00:12:59,700 --> 00:13:03,660
<font color="#E5E5E5">those nodes it's very likely that you</font>

287
00:13:01,380 --> 00:13:05,520
can<font color="#CCCCCC"> access multiple of</font><font color="#E5E5E5"> those nodes so</font>

288
00:13:03,660 --> 00:13:08,399
now you can<font color="#E5E5E5"> send your messages across</font><font color="#CCCCCC"> a</font>

289
00:13:05,520 --> 00:13:12,060
wide array of systems and<font color="#E5E5E5"> basically</font>

290
00:13:08,399 --> 00:13:13,920
recover the key in seconds<font color="#E5E5E5"> so that's</font>

291
00:13:12,060 --> 00:13:17,369
pretty awesome<font color="#CCCCCC"> the other thing about</font>

292
00:13:13,920 --> 00:13:20,699
this attacks is it's entirely stealth so

293
00:13:17,370 --> 00:13:22,910
submitting your node name during a

294
00:13:20,700 --> 00:13:26,610
connection to an<font color="#E5E5E5"> ER</font><font color="#CCCCCC"> lang instance</font>

295
00:13:22,910 --> 00:13:29,250
<font color="#E5E5E5">requires absolutely no intervention by</font>

296
00:13:26,610 --> 00:13:31,320
<font color="#E5E5E5">the administrator whatsoever so there is</font>

297
00:13:29,250 --> 00:13:33,180
no message there's no log message that

298
00:13:31,320 --> 00:13:34,259
comes up even<font color="#E5E5E5"> if you have debugging</font>

299
00:13:33,180 --> 00:13:36,238
turned on there

300
00:13:34,259 --> 00:13:38,519
no log message that<font color="#E5E5E5"> actually stayed hey</font>

301
00:13:36,239 --> 00:13:40,319
<font color="#E5E5E5">there's somebody that's pounding your</font>

302
00:13:38,519 --> 00:13:42,419
server with requests and those requests

303
00:13:40,319 --> 00:13:45,089
<font color="#E5E5E5">are turning into atoms nothing like</font><font color="#CCCCCC"> that</font>

304
00:13:42,419 --> 00:13:46,919
will ever occur so basically you<font color="#E5E5E5"> can</font>

305
00:13:45,089 --> 00:13:48,600
just<font color="#E5E5E5"> completely repeat this attack over</font>

306
00:13:46,919 --> 00:13:50,759
and<font color="#E5E5E5"> over and</font><font color="#CCCCCC"> over across</font><font color="#E5E5E5"> as many systems</font>

307
00:13:48,600 --> 00:13:53,339
as you<font color="#E5E5E5"> want within that</font><font color="#CCCCCC"> one megabyte</font>

308
00:13:50,759 --> 00:13:54,899
window<font color="#CCCCCC"> and not</font><font color="#E5E5E5"> only will you</font><font color="#CCCCCC"> be able</font><font color="#E5E5E5"> to</font>

309
00:13:53,339 --> 00:13:57,269
<font color="#E5E5E5">guess the key but you'll do it</font><font color="#CCCCCC"> without</font>

310
00:13:54,899 --> 00:14:00,209
notifying anybody<font color="#E5E5E5"> as long as they're not</font>

311
00:13:57,269 --> 00:14:02,189
<font color="#E5E5E5">looking at TCP dump obsessively</font><font color="#CCCCCC"> but even</font>

312
00:14:00,209 --> 00:14:04,829
if they<font color="#E5E5E5"> are if you're</font><font color="#CCCCCC"> looking at a large</font>

313
00:14:02,189 --> 00:14:06,779
<font color="#E5E5E5">distributed system it's normal for</font>

314
00:14:04,829 --> 00:14:08,758
systems to<font color="#E5E5E5"> reconnect and connect and</font>

315
00:14:06,779 --> 00:14:10,589
distribute keys and do all this<font color="#CCCCCC"> stuff</font>

316
00:14:08,759 --> 00:14:12,779
over<font color="#E5E5E5"> and over and over because that's</font>

317
00:14:10,589 --> 00:14:14,729
the part<font color="#E5E5E5"> of Erlang it's a self-healing</font>

318
00:14:12,779 --> 00:14:16,049
<font color="#CCCCCC">network</font><font color="#E5E5E5"> so if there's a problem with the</font>

319
00:14:14,729 --> 00:14:17,419
network<font color="#CCCCCC"> a lot</font><font color="#E5E5E5"> of this traffic is</font>

320
00:14:16,049 --> 00:14:20,939
<font color="#CCCCCC">actually quite normal</font>

321
00:14:17,419 --> 00:14:23,309
so what's not<font color="#CCCCCC"> normal is</font><font color="#E5E5E5"> you know host</font>

322
00:14:20,939 --> 00:14:25,228
names that look like cookies which are

323
00:14:23,309 --> 00:14:27,449
just long alphabetical strings of

324
00:14:25,229 --> 00:14:29,850
nonsense<font color="#E5E5E5"> right usually no names have</font>

325
00:14:27,449 --> 00:14:32,639
some kind of normal format<font color="#E5E5E5"> so that's</font>

326
00:14:29,850 --> 00:14:35,989
<font color="#E5E5E5">really</font><font color="#CCCCCC"> the only give everything</font><font color="#E5E5E5"> else is</font>

327
00:14:32,639 --> 00:14:38,399
entirely stealth so<font color="#E5E5E5"> putting it together</font>

328
00:14:35,989 --> 00:14:41,669
<font color="#CCCCCC">say you have a</font><font color="#E5E5E5"> cloud environment and</font>

329
00:14:38,399 --> 00:14:43,439
<font color="#E5E5E5">digitalocean AWS whatever those</font>

330
00:14:41,669 --> 00:14:45,509
environments are<font color="#CCCCCC"> fingerprint of all so</font>

331
00:14:43,439 --> 00:14:47,998
you<font color="#CCCCCC"> can</font><font color="#E5E5E5"> guess what the monotonic timer</font>

332
00:14:45,509 --> 00:14:50,489
is going<font color="#E5E5E5"> to look like when that Erlang</font>

333
00:14:47,999 --> 00:14:52,289
instance boots for<font color="#E5E5E5"> the first time you</font>

334
00:14:50,489 --> 00:14:53,939
can then<font color="#E5E5E5"> guess what the pseudo-random</font>

335
00:14:52,289 --> 00:14:56,369
number generator<font color="#CCCCCC"> is going to guess</font>

336
00:14:53,939 --> 00:14:57,959
<font color="#E5E5E5">within a certain number</font><font color="#CCCCCC"> of</font><font color="#E5E5E5"> bits for that</font>

337
00:14:56,369 --> 00:14:59,669
<font color="#E5E5E5">particular type of cloud instance</font>

338
00:14:57,959 --> 00:15:01,649
<font color="#E5E5E5">because again they have very limited</font>

339
00:14:59,669 --> 00:15:03,600
<font color="#E5E5E5">amount of entropy once they</font><font color="#CCCCCC"> booth these</font>

340
00:15:01,649 --> 00:15:05,039
<font color="#CCCCCC">guys aren't using you know true random</font>

341
00:15:03,600 --> 00:15:07,259
number generators to seed all the

342
00:15:05,039 --> 00:15:08,730
<font color="#E5E5E5">virtual machines that's impossible</font><font color="#CCCCCC"> so</font>

343
00:15:07,259 --> 00:15:10,949
they basically have a minimum<font color="#E5E5E5"> amount of</font>

344
00:15:08,730 --> 00:15:13,339
<font color="#E5E5E5">data especially in the early node that</font>

345
00:15:10,949 --> 00:15:16,589
will allow them<font color="#CCCCCC"> to generate a useful</font>

346
00:15:13,339 --> 00:15:19,549
security token and then<font color="#E5E5E5"> once you have</font>

347
00:15:16,589 --> 00:15:22,319
<font color="#E5E5E5">that window you basically just create</font>

348
00:15:19,549 --> 00:15:23,159
the<font color="#E5E5E5"> amount of characters that</font><font color="#CCCCCC"> are</font><font color="#E5E5E5"> going</font>

349
00:15:22,319 --> 00:15:25,699
<font color="#E5E5E5">to work for you</font>

350
00:15:23,159 --> 00:15:28,769
within that you<font color="#E5E5E5"> know window of</font>

351
00:15:25,699 --> 00:15:30,988
searchable<font color="#E5E5E5"> cookie names and then you</font>

352
00:15:28,769 --> 00:15:32,609
just start submitting<font color="#E5E5E5"> your keys you</font>

353
00:15:30,989 --> 00:15:35,549
submit them over and<font color="#CCCCCC"> over</font><font color="#E5E5E5"> and</font><font color="#CCCCCC"> over as</font>

354
00:15:32,609 --> 00:15:38,339
node names<font color="#CCCCCC"> and then check</font><font color="#E5E5E5"> the Delta to</font>

355
00:15:35,549 --> 00:15:41,819
identify which tokens are likely already

356
00:15:38,339 --> 00:15:43,889
<font color="#CCCCCC">Adams</font><font color="#E5E5E5"> inside the virtual machine once</font>

357
00:15:41,819 --> 00:15:46,919
you find that<font color="#E5E5E5"> and</font><font color="#CCCCCC"> you see</font><font color="#E5E5E5"> the</font><font color="#CCCCCC"> deltas</font>

358
00:15:43,889 --> 00:15:47,970
different<font color="#E5E5E5"> it's much much</font><font color="#CCCCCC"> shorter because</font>

359
00:15:46,919 --> 00:15:51,120
<font color="#E5E5E5">it didn't have to</font>

360
00:15:47,970 --> 00:15:53,279
or generate the memory<font color="#E5E5E5"> to to store that</font>

361
00:15:51,120 --> 00:15:55,500
<font color="#CCCCCC">Adam</font><font color="#E5E5E5"> you can drop the connection</font><font color="#CCCCCC"> and</font>

362
00:15:53,279 --> 00:15:57,209
then reconnect trying that cookie<font color="#E5E5E5"> if it</font>

363
00:15:55,500 --> 00:15:59,850
<font color="#E5E5E5">doesn't work try</font><font color="#CCCCCC"> the</font><font color="#E5E5E5"> attack again keep</font>

364
00:15:57,209 --> 00:16:01,680
iterating<font color="#E5E5E5"> until you find another one so</font>

365
00:15:59,850 --> 00:16:03,810
that's<font color="#E5E5E5"> literally hit that's all you have</font>

366
00:16:01,680 --> 00:16:04,550
to do so I basically spent a year<font color="#E5E5E5"> and a</font>

367
00:16:03,810 --> 00:16:07,529
half

368
00:16:04,550 --> 00:16:10,170
hacking all the internals<font color="#E5E5E5"> of the virtual</font>

369
00:16:07,529 --> 00:16:12,589
machine<font color="#E5E5E5"> analyzing the memory management</font>

370
00:16:10,170 --> 00:16:14,819
<font color="#E5E5E5">system</font><font color="#CCCCCC"> analyzing the networking</font><font color="#E5E5E5"> stack</font>

371
00:16:12,589 --> 00:16:16,589
analyzing the way it interprets integers

372
00:16:14,819 --> 00:16:18,628
looking for integer<font color="#E5E5E5"> overflow problems</font>

373
00:16:16,589 --> 00:16:20,519
all these complex things<font color="#E5E5E5"> and yeah I</font>

374
00:16:18,629 --> 00:16:22,470
found a couple<font color="#E5E5E5"> of bugs there were a</font>

375
00:16:20,519 --> 00:16:22,889
couple<font color="#E5E5E5"> of great bugs that were to be</font>

376
00:16:22,470 --> 00:16:26,670
<font color="#E5E5E5">found</font>

377
00:16:22,889 --> 00:16:29,279
<font color="#E5E5E5">Fred Hebert on the Heroku team brilliant</font>

378
00:16:26,670 --> 00:16:31,290
brilliant<font color="#E5E5E5"> researcher and engineer he</font>

379
00:16:29,279 --> 00:16:33,660
actually<font color="#CCCCCC"> found a bug that I missed</font><font color="#E5E5E5"> in</font>

380
00:16:31,290 --> 00:16:36,000
binary<font color="#E5E5E5"> two-term which is something</font><font color="#CCCCCC"> that</font>

381
00:16:33,660 --> 00:16:38,550
<font color="#E5E5E5">can be</font><font color="#CCCCCC"> triggered</font><font color="#E5E5E5"> remotely and is</font><font color="#CCCCCC"> often</font>

382
00:16:36,000 --> 00:16:41,430
<font color="#CCCCCC">used in Erlang</font><font color="#E5E5E5"> web processing where you</font>

383
00:16:38,550 --> 00:16:43,500
end up<font color="#CCCCCC"> taking this opaque binary object</font>

384
00:16:41,430 --> 00:16:46,079
and you translate<font color="#CCCCCC"> it into</font><font color="#E5E5E5"> a term in</font>

385
00:16:43,500 --> 00:16:48,089
terms in Erlang or again<font color="#E5E5E5"> an array of</font>

386
00:16:46,079 --> 00:16:52,349
<font color="#E5E5E5">different</font><font color="#CCCCCC"> types of objects like lists</font>

387
00:16:48,089 --> 00:16:53,970
like binary packets like atoms and

388
00:16:52,350 --> 00:16:55,470
things of<font color="#E5E5E5"> that nature</font><font color="#CCCCCC"> and</font><font color="#E5E5E5"> he figured out</font>

389
00:16:53,970 --> 00:16:59,100
<font color="#E5E5E5">that</font><font color="#CCCCCC"> you could basically</font><font color="#E5E5E5"> take like a</font><font color="#CCCCCC"> 2</font>

390
00:16:55,470 --> 00:17:02,399
megabyte packet and it would explode

391
00:16:59,100 --> 00:17:05,490
<font color="#E5E5E5">into about</font><font color="#CCCCCC"> 4 gigabytes</font><font color="#E5E5E5"> of a valid binary</font>

392
00:17:02,399 --> 00:17:07,470
objects<font color="#E5E5E5"> because the binary to term</font>

393
00:17:05,490 --> 00:17:09,750
processing allowed for<font color="#E5E5E5"> Z live</font>

394
00:17:07,470 --> 00:17:12,959
compression<font color="#E5E5E5"> in the actual compressed</font>

395
00:17:09,750 --> 00:17:15,270
binary object data so there were a<font color="#E5E5E5"> lot</font>

396
00:17:12,959 --> 00:17:17,189
of bugs<font color="#E5E5E5"> to</font><font color="#CCCCCC"> be found but</font><font color="#E5E5E5"> none</font><font color="#CCCCCC"> of them</font>

397
00:17:15,270 --> 00:17:21,179
were really<font color="#CCCCCC"> truly exploitable as in a</font>

398
00:17:17,189 --> 00:17:22,770
<font color="#CCCCCC">one-shot remote compromise</font><font color="#E5E5E5"> we weren't</font>

399
00:17:21,179 --> 00:17:26,400
ever<font color="#CCCCCC"> able to</font><font color="#E5E5E5"> find that I was never able</font>

400
00:17:22,770 --> 00:17:28,230
to<font color="#E5E5E5"> find something that clean</font><font color="#CCCCCC"> this is the</font>

401
00:17:26,400 --> 00:17:30,030
<font color="#E5E5E5">most clean thing that you could do and</font>

402
00:17:28,230 --> 00:17:31,530
<font color="#E5E5E5">it's also the easiest</font><font color="#CCCCCC"> thing that</font><font color="#E5E5E5"> you</font>

403
00:17:30,030 --> 00:17:34,168
<font color="#E5E5E5">could</font><font color="#CCCCCC"> possibly do so it's basically like</font>

404
00:17:31,530 --> 00:17:35,700
<font color="#E5E5E5">do all this insane research and then at</font>

405
00:17:34,169 --> 00:17:37,610
the end<font color="#E5E5E5"> of</font><font color="#CCCCCC"> the day I just</font><font color="#E5E5E5"> realized oh</font>

406
00:17:35,700 --> 00:17:39,900
wait this<font color="#CCCCCC"> is a really simple hack</font>

407
00:17:37,610 --> 00:17:43,799
because of the design<font color="#CCCCCC"> of the</font><font color="#E5E5E5"> of the</font>

408
00:17:39,900 --> 00:17:46,669
Erlang system so basically<font color="#CCCCCC"> every single</font>

409
00:17:43,799 --> 00:17:49,908
<font color="#E5E5E5">instance of Erlang today is vulnerable</font><font color="#CCCCCC"> I</font>

410
00:17:46,669 --> 00:17:52,650
notified<font color="#CCCCCC"> Ericsson of this a year ago and</font>

411
00:17:49,909 --> 00:17:56,220
they<font color="#E5E5E5"> admitted that the remote atom thing</font>

412
00:17:52,650 --> 00:17:58,289
<font color="#E5E5E5">was a problem</font><font color="#CCCCCC"> but</font><font color="#E5E5E5"> based on the</font>

413
00:17:56,220 --> 00:18:01,380
architecture<font color="#CCCCCC"> of Erlang's virtual machine</font>

414
00:17:58,289 --> 00:18:03,300
<font color="#E5E5E5">it's so</font><font color="#CCCCCC"> difficult</font><font color="#E5E5E5"> to change</font>

415
00:18:01,380 --> 00:18:06,210
the way that<font color="#E5E5E5"> they're interpreting names</font>

416
00:18:03,300 --> 00:18:09,090
remotely from<font color="#E5E5E5"> atoms into something else</font>

417
00:18:06,210 --> 00:18:10,710
<font color="#CCCCCC">that it hasn't</font><font color="#E5E5E5"> been fixed</font><font color="#CCCCCC"> they</font><font color="#E5E5E5"> basically</font>

418
00:18:09,090 --> 00:18:11,580
just<font color="#E5E5E5"> said like well we're probably not</font>

419
00:18:10,710 --> 00:18:14,280
going<font color="#E5E5E5"> to fix this</font>

420
00:18:11,580 --> 00:18:15,629
so this bug is going<font color="#CCCCCC"> to be abusable</font>

421
00:18:14,280 --> 00:18:18,180
<font color="#E5E5E5">pretty much forever</font>

422
00:18:15,630 --> 00:18:21,900
until they decide<font color="#CCCCCC"> that this</font><font color="#E5E5E5"> is an attack</font>

423
00:18:18,180 --> 00:18:24,810
<font color="#CCCCCC">that shouldn't be abusable the issue is</font>

424
00:18:21,900 --> 00:18:26,910
really<font color="#E5E5E5"> that there are technologies like</font>

425
00:18:24,810 --> 00:18:30,510
<font color="#CCCCCC">RabbitMQ that use Erlang under the hood</font>

426
00:18:26,910 --> 00:18:32,250
<font color="#E5E5E5">that recommend this style of generation</font>

427
00:18:30,510 --> 00:18:35,100
of cookies so<font color="#E5E5E5"> I should be very clear</font>

428
00:18:32,250 --> 00:18:37,560
when you deploy<font color="#E5E5E5"> Erlang you can use your</font>

429
00:18:35,100 --> 00:18:40,230
own cookie you<font color="#E5E5E5"> can specify your</font><font color="#CCCCCC"> own long</font>

430
00:18:37,560 --> 00:18:42,629
cookie string or you can automatically

431
00:18:40,230 --> 00:18:45,600
<font color="#CCCCCC">generate one through Erlang system</font>

432
00:18:42,630 --> 00:18:47,720
itself<font color="#E5E5E5"> if you</font><font color="#CCCCCC"> let Erlang generate one</font>

433
00:18:45,600 --> 00:18:50,820
itself<font color="#CCCCCC"> it'll</font><font color="#E5E5E5"> use the monotonic timer</font>

434
00:18:47,720 --> 00:18:52,290
<font color="#E5E5E5">model that I just talked about and</font><font color="#CCCCCC"> that</font>

435
00:18:50,820 --> 00:18:55,740
will be the way that it<font color="#E5E5E5"> generates the</font>

436
00:18:52,290 --> 00:18:57,570
key that's then guessable<font color="#E5E5E5"> but most</font>

437
00:18:55,740 --> 00:18:59,340
systems<font color="#E5E5E5"> recommend that you do it that</font>

438
00:18:57,570 --> 00:19:01,350
<font color="#E5E5E5">way so that you don't have to mess</font>

439
00:18:59,340 --> 00:19:03,060
around with generating<font color="#E5E5E5"> your own keys and</font>

440
00:19:01,350 --> 00:19:07,050
they also don't<font color="#E5E5E5"> want</font><font color="#CCCCCC"> you to generate</font>

441
00:19:03,060 --> 00:19:08,220
weak keys now most<font color="#E5E5E5"> likely people</font><font color="#CCCCCC"> are</font>

442
00:19:07,050 --> 00:19:10,740
going<font color="#E5E5E5"> to use this model and think it's</font>

443
00:19:08,220 --> 00:19:12,630
okay I mean<font color="#CCCCCC"> rabbitmq even in their</font>

444
00:19:10,740 --> 00:19:14,550
documentation recommends this model for

445
00:19:12,630 --> 00:19:16,410
<font color="#E5E5E5">generating a cookie because they're</font>

446
00:19:14,550 --> 00:19:18,810
presuming that<font color="#E5E5E5"> the amount of bit space</font>

447
00:19:16,410 --> 00:19:20,370
that's available<font color="#E5E5E5"> in these keys is going</font>

448
00:19:18,810 --> 00:19:22,649
<font color="#E5E5E5">to make it impossible for somebody to</font>

449
00:19:20,370 --> 00:19:24,060
ever guess it<font color="#E5E5E5"> right look it's over 128</font>

450
00:19:22,650 --> 00:19:27,480
bits like nobody's ever<font color="#E5E5E5"> going to just</font>

451
00:19:24,060 --> 00:19:30,360
land<font color="#E5E5E5"> on this remotely but within that</font>

452
00:19:27,480 --> 00:19:32,520
window<font color="#CCCCCC"> based on</font><font color="#E5E5E5"> these vulnerabilities</font>

453
00:19:30,360 --> 00:19:34,709
it's<font color="#E5E5E5"> absolutely hittable and it's even</font>

454
00:19:32,520 --> 00:19:37,740
searchable remotely in the<font color="#CCCCCC"> Erlang</font>

455
00:19:34,710 --> 00:19:39,540
<font color="#CCCCCC">virtual machine</font><font color="#E5E5E5"> so everybody recommends</font>

456
00:19:37,740 --> 00:19:42,420
this standard<font color="#CCCCCC"> model of generating code</font>

457
00:19:39,540 --> 00:19:43,980
or generating keys and nobody's<font color="#E5E5E5"> really</font>

458
00:19:42,420 --> 00:19:46,680
<font color="#CCCCCC">researched as to whether</font><font color="#E5E5E5"> or not it's</font>

459
00:19:43,980 --> 00:19:49,320
<font color="#E5E5E5">it's Bible beyond just saying is the bit</font>

460
00:19:46,680 --> 00:19:52,800
space large<font color="#E5E5E5"> enough yes</font><font color="#CCCCCC"> okay well</font><font color="#E5E5E5"> that's</font>

461
00:19:49,320 --> 00:19:54,629
fine<font color="#CCCCCC"> good enough so Robert Graham a</font>

462
00:19:52,800 --> 00:19:59,460
<font color="#CCCCCC">friend of mine</font><font color="#E5E5E5"> you probably know him as</font>

463
00:19:54,630 --> 00:20:01,470
<font color="#CCCCCC">errata sec he did me a favor last year</font>

464
00:19:59,460 --> 00:20:04,410
and scanned<font color="#E5E5E5"> the entire internet using</font>

465
00:20:01,470 --> 00:20:06,600
<font color="#CCCCCC">math scan to identify how much</font><font color="#E5E5E5"> Erlang</font>

466
00:20:04,410 --> 00:20:08,070
was<font color="#E5E5E5"> accessible from the</font><font color="#CCCCCC"> internet</font><font color="#E5E5E5"> and</font><font color="#CCCCCC"> we</font>

467
00:20:06,600 --> 00:20:10,590
found<font color="#CCCCCC"> just under like a quarter million</font>

468
00:20:08,070 --> 00:20:13,320
machines so it's not<font color="#E5E5E5"> a large amount by</font>

469
00:20:10,590 --> 00:20:15,389
any means<font color="#E5E5E5"> but</font><font color="#CCCCCC"> it's still</font><font color="#E5E5E5"> enough</font>

470
00:20:13,320 --> 00:20:17,220
accessible worldwide<font color="#E5E5E5"> that</font>

471
00:20:15,390 --> 00:20:20,309
is a pretty significant problem<font color="#E5E5E5"> because</font>

472
00:20:17,220 --> 00:20:22,799
these<font color="#E5E5E5"> are telco systems right as</font><font color="#CCCCCC"> Manuel</font>

473
00:20:20,309 --> 00:20:25,080
mentioned in the previous<font color="#CCCCCC"> talk Erlang is</font>

474
00:20:22,799 --> 00:20:28,470
used to run telco<font color="#E5E5E5"> infrastructure</font>

475
00:20:25,080 --> 00:20:31,919
worldwide<font color="#CCCCCC"> that's the</font><font color="#E5E5E5"> reason why Ericsson</font>

476
00:20:28,470 --> 00:20:33,750
developed it was to run telcos<font color="#E5E5E5"> and I as</font>

477
00:20:31,920 --> 00:20:38,340
I<font color="#CCCCCC"> mentioned at the beginning of</font><font color="#E5E5E5"> the talk</font>

478
00:20:33,750 --> 00:20:41,210
<font color="#CCCCCC">LT infrastructure uses Erlang 3G hold</font>

479
00:20:38,340 --> 00:20:45,209
<font color="#CCCCCC">GSM all of these great technologies</font>

480
00:20:41,210 --> 00:20:48,240
<font color="#E5E5E5">require Erlang in most cases to run</font><font color="#CCCCCC"> the</font>

481
00:20:45,210 --> 00:20:50,040
MSC<font color="#CCCCCC"> HL</font><font color="#E5E5E5"> ours</font><font color="#CCCCCC"> all that</font><font color="#E5E5E5"> great stuff that we</font>

482
00:20:48,240 --> 00:20:53,040
use in order<font color="#CCCCCC"> to ensure that</font><font color="#E5E5E5"> systems can</font>

483
00:20:50,040 --> 00:20:56,580
actually<font color="#CCCCCC"> communicate so a lot of these</font>

484
00:20:53,040 --> 00:20:58,379
instances<font color="#E5E5E5"> we found were you know I would</font>

485
00:20:56,580 --> 00:20:59,909
say<font color="#CCCCCC"> about</font><font color="#E5E5E5"> 10%</font><font color="#CCCCCC"> of them were people just</font>

486
00:20:58,380 --> 00:21:01,559
messing around<font color="#E5E5E5"> with Erlang or some kind</font>

487
00:20:59,910 --> 00:21:04,110
of development<font color="#E5E5E5"> instance or something of</font>

488
00:21:01,559 --> 00:21:06,360
that nature but somewhere around 30 40

489
00:21:04,110 --> 00:21:10,168
<font color="#CCCCCC">percent were systems that I would</font>

490
00:21:06,360 --> 00:21:11,969
<font color="#E5E5E5">personally consider</font><font color="#CCCCCC"> critical so it's</font>

491
00:21:10,169 --> 00:21:14,520
still useful for people<font color="#E5E5E5"> to understand</font>

492
00:21:11,970 --> 00:21:16,740
that<font color="#E5E5E5"> Erlang is not a technology that you</font>

493
00:21:14,520 --> 00:21:20,870
should ever put on<font color="#E5E5E5"> the public facing</font>

494
00:21:16,740 --> 00:21:23,340
<font color="#CCCCCC">internet</font><font color="#E5E5E5"> because of issues</font><font color="#CCCCCC"> like this so</font>

495
00:21:20,870 --> 00:21:25,219
there<font color="#E5E5E5"> are a couple of cool assists with</font>

496
00:21:23,340 --> 00:21:28,889
this technology<font color="#CCCCCC"> that help make</font><font color="#E5E5E5"> it really</font>

497
00:21:25,220 --> 00:21:31,230
a great exploit one thing that I didn't

498
00:21:28,890 --> 00:21:34,200
<font color="#CCCCCC">mention about the atom attack is that</font>

499
00:21:31,230 --> 00:21:36,419
<font color="#CCCCCC">there is a maximum limit of the number</font>

500
00:21:34,200 --> 00:21:37,890
<font color="#CCCCCC">of</font><font color="#E5E5E5"> atoms that can exist in a system</font><font color="#CCCCCC"> well</font>

501
00:21:36,419 --> 00:21:39,809
I think<font color="#E5E5E5"> I mentioned</font><font color="#CCCCCC"> that the thing</font><font color="#E5E5E5"> that</font>

502
00:21:37,890 --> 00:21:42,419
I failed to<font color="#CCCCCC"> mention</font><font color="#E5E5E5"> is that</font><font color="#CCCCCC"> once you</font>

503
00:21:39,809 --> 00:21:45,660
reach that<font color="#E5E5E5"> limit which is</font><font color="#CCCCCC"> about</font><font color="#E5E5E5"> one</font>

504
00:21:42,419 --> 00:21:47,490
megabyte worst of atoms<font color="#E5E5E5"> now I mean one</font>

505
00:21:45,660 --> 00:21:50,070
megabyte in size I mean<font color="#E5E5E5"> one megabyte</font>

506
00:21:47,490 --> 00:21:52,380
<font color="#E5E5E5">total number of atoms that can</font><font color="#CCCCCC"> exists</font>

507
00:21:50,070 --> 00:21:55,260
the virtual machine will<font color="#E5E5E5"> actually dump</font>

508
00:21:52,380 --> 00:21:57,870
core and exit<font color="#E5E5E5"> so just say like I give up</font>

509
00:21:55,260 --> 00:22:00,840
I'm done<font color="#CCCCCC"> and this is</font><font color="#E5E5E5"> something that's</font>

510
00:21:57,870 --> 00:22:02,189
<font color="#CCCCCC">existed in Erlang</font><font color="#E5E5E5"> its entire life right</font>

511
00:22:00,840 --> 00:22:05,699
they've never fixed<font color="#E5E5E5"> this you can</font>

512
00:22:02,190 --> 00:22:07,590
actually<font color="#CCCCCC"> increase the Erlang number of</font>

513
00:22:05,700 --> 00:22:09,840
atoms that<font color="#CCCCCC"> are available in the system</font>

514
00:22:07,590 --> 00:22:12,809
<font color="#E5E5E5">but most people don't because</font><font color="#CCCCCC"> you</font><font color="#E5E5E5"> don't</font>

515
00:22:09,840 --> 00:22:14,520
<font color="#E5E5E5">necessarily need</font><font color="#CCCCCC"> to most atoms</font><font color="#E5E5E5"> aren't</font>

516
00:22:12,809 --> 00:22:17,790
just generated<font color="#CCCCCC"> over time so this</font><font color="#E5E5E5"> usually</font>

517
00:22:14,520 --> 00:22:20,910
<font color="#E5E5E5">never becomes a problem right but it's</font>

518
00:22:17,790 --> 00:22:23,070
great for exploitation<font color="#E5E5E5"> because a lot of</font>

519
00:22:20,910 --> 00:22:25,350
<font color="#E5E5E5">instances will have administrative nodes</font>

520
00:22:23,070 --> 00:22:27,899
or logger nodes or things<font color="#E5E5E5"> of that nature</font>

521
00:22:25,350 --> 00:22:28,959
<font color="#CCCCCC">and if you want to get really</font><font color="#E5E5E5"> tactical</font>

522
00:22:27,900 --> 00:22:31,090
about it you

523
00:22:28,960 --> 00:22:33,610
basically<font color="#E5E5E5"> pick all those off by using</font>

524
00:22:31,090 --> 00:22:35,649
this<font color="#E5E5E5"> atom bug to remotely connect over</font>

525
00:22:33,610 --> 00:22:37,990
<font color="#E5E5E5">and over and over with node names</font><font color="#CCCCCC"> have</font>

526
00:22:35,649 --> 00:22:41,049
them converted to atoms using arbitrary

527
00:22:37,990 --> 00:22:42,370
host names<font color="#E5E5E5"> fill up the atom table and</font>

528
00:22:41,049 --> 00:22:44,350
then kill all these<font color="#E5E5E5"> administrative</font>

529
00:22:42,370 --> 00:22:47,020
processes<font color="#E5E5E5"> so every</font><font color="#CCCCCC"> time</font><font color="#E5E5E5"> you see a new</font>

530
00:22:44,350 --> 00:22:48,459
<font color="#E5E5E5">administrative process spawn there's</font>

531
00:22:47,020 --> 00:22:50,289
actually for<font color="#E5E5E5"> those that don't know</font>

532
00:22:48,460 --> 00:22:53,830
there's an<font color="#CCCCCC"> equivalent of</font><font color="#E5E5E5"> a port mapping</font>

533
00:22:50,289 --> 00:22:55,360
Damon called<font color="#CCCCCC"> EPMD and this service</font>

534
00:22:53,830 --> 00:22:58,210
<font color="#E5E5E5">basically tells you where all the</font>

535
00:22:55,360 --> 00:23:00,939
<font color="#E5E5E5">earliest misses are and what their names</font>

536
00:22:58,210 --> 00:23:02,590
are<font color="#E5E5E5"> so you can query that over and over</font>

537
00:23:00,940 --> 00:23:05,260
<font color="#CCCCCC">and every single</font><font color="#E5E5E5"> time</font><font color="#CCCCCC"> you</font><font color="#E5E5E5"> see a new name</font>

538
00:23:02,590 --> 00:23:07,299
<font color="#CCCCCC">that pops</font><font color="#E5E5E5"> up that says logging or admin</font>

539
00:23:05,260 --> 00:23:09,789
or something of that nature<font color="#CCCCCC"> you just</font>

540
00:23:07,299 --> 00:23:11,740
<font color="#E5E5E5">point your code at it and kill it crash</font>

541
00:23:09,789 --> 00:23:14,289
it<font color="#E5E5E5"> watch EPMD</font>

542
00:23:11,740 --> 00:23:16,510
see when the<font color="#E5E5E5"> next one comes</font><font color="#CCCCCC"> up okay new</font>

543
00:23:14,289 --> 00:23:19,029
ones up<font color="#CCCCCC"> found the port</font><font color="#E5E5E5"> found the host</font>

544
00:23:16,510 --> 00:23:21,520
address<font color="#E5E5E5"> go point your code at</font><font color="#CCCCCC"> that again</font>

545
00:23:19,029 --> 00:23:23,020
crash<font color="#E5E5E5"> it done over and</font><font color="#CCCCCC"> over and</font><font color="#E5E5E5"> over</font><font color="#CCCCCC"> and</font>

546
00:23:21,520 --> 00:23:24,520
over<font color="#E5E5E5"> so you can basically lock</font>

547
00:23:23,020 --> 00:23:26,559
administrators out of their entire

548
00:23:24,520 --> 00:23:29,370
<font color="#CCCCCC">Erlang environment if you do this</font>

549
00:23:26,559 --> 00:23:34,120
correctly<font color="#E5E5E5"> which is</font><font color="#CCCCCC"> pretty</font><font color="#E5E5E5"> great the</font>

550
00:23:29,370 --> 00:23:36,639
<font color="#CCCCCC">other issue is that when</font><font color="#E5E5E5"> it</font><font color="#CCCCCC"> dumps core</font>

551
00:23:34,120 --> 00:23:38,320
all<font color="#E5E5E5"> of your exploit details are going to</font>

552
00:23:36,640 --> 00:23:40,899
<font color="#E5E5E5">be stored within that core file so it's</font>

553
00:23:38,320 --> 00:23:42,730
not like<font color="#E5E5E5"> UNIX core when you dump process</font>

554
00:23:40,899 --> 00:23:44,830
in<font color="#CCCCCC"> UNIX you get you get</font><font color="#E5E5E5"> basically a</font>

555
00:23:42,730 --> 00:23:47,350
binary core image<font color="#E5E5E5"> of what that process</font>

556
00:23:44,830 --> 00:23:49,330
looked like in memory<font color="#E5E5E5"> not quite the same</font>

557
00:23:47,350 --> 00:23:51,039
in Erlang in<font color="#E5E5E5"> Erlang they have a big</font>

558
00:23:49,330 --> 00:23:53,620
chunk of text<font color="#CCCCCC"> that shows you all the</font>

559
00:23:51,039 --> 00:23:55,120
<font color="#CCCCCC">virtual machines registers and all this</font>

560
00:23:53,620 --> 00:23:56,590
other stuff<font color="#E5E5E5"> and then afterwards they</font>

561
00:23:55,120 --> 00:23:59,379
have a binary payload for<font color="#E5E5E5"> the entire</font>

562
00:23:56,590 --> 00:24:01,120
region<font color="#CCCCCC"> of memory</font><font color="#E5E5E5"> and all that stuff is</font>

563
00:23:59,380 --> 00:24:03,520
then auditable by somebody<font color="#E5E5E5"> that knows</font>

564
00:24:01,120 --> 00:24:05,979
how<font color="#CCCCCC"> to reverse</font><font color="#E5E5E5"> engineer</font><font color="#CCCCCC"> it and</font><font color="#E5E5E5"> those</font>

565
00:24:03,520 --> 00:24:07,570
guys<font color="#CCCCCC"> are still around</font><font color="#E5E5E5"> so somebody will</font>

566
00:24:05,980 --> 00:24:09,130
be<font color="#E5E5E5"> able to actually</font><font color="#CCCCCC"> interpret this in</font>

567
00:24:07,570 --> 00:24:11,559
figure<font color="#E5E5E5"> out why your attack is so there's</font>

568
00:24:09,130 --> 00:24:14,760
a clever way around that for people<font color="#CCCCCC"> that</font>

569
00:24:11,559 --> 00:24:17,320
are running in environments where

570
00:24:14,760 --> 00:24:19,450
<font color="#E5E5E5">antivirus technology is available you</font>

571
00:24:17,320 --> 00:24:22,059
can basically just<font color="#CCCCCC"> put an</font><font color="#E5E5E5"> AI car test</font>

572
00:24:19,450 --> 00:24:24,309
string as one of<font color="#E5E5E5"> the node names when you</font>

573
00:24:22,059 --> 00:24:26,770
connect and then what<font color="#E5E5E5"> it dump score</font>

574
00:24:24,309 --> 00:24:29,320
it'll dump the EEI car test string and

575
00:24:26,770 --> 00:24:32,770
if an<font color="#CCCCCC"> antivirus signature</font>

576
00:24:29,320 --> 00:24:34,418
our application<font color="#CCCCCC"> is on the server</font><font color="#E5E5E5"> it'll</font>

577
00:24:32,770 --> 00:24:36,580
basically<font color="#CCCCCC"> see that as the virus</font><font color="#E5E5E5"> and</font>

578
00:24:34,419 --> 00:24:37,960
delete it<font color="#E5E5E5"> for you so then you</font><font color="#CCCCCC"> won't</font><font color="#E5E5E5"> have</font>

579
00:24:36,580 --> 00:24:41,559
<font color="#E5E5E5">to worry about somebody interpreting</font>

580
00:24:37,960 --> 00:24:42,909
your core file which is pretty cute<font color="#CCCCCC"> that</font>

581
00:24:41,559 --> 00:24:44,649
<font color="#CCCCCC">usually works</font>

582
00:24:42,909 --> 00:24:45,999
<font color="#E5E5E5">in two environments and that's like</font>

583
00:24:44,649 --> 00:24:48,309
corporate<font color="#CCCCCC"> RedHat where people are</font>

584
00:24:45,999 --> 00:24:50,349
<font color="#CCCCCC">running like clamavi and then when</font>

585
00:24:48,309 --> 00:24:51,789
<font color="#CCCCCC">people are running Erlang on like</font>

586
00:24:50,349 --> 00:24:53,019
<font color="#E5E5E5">Windows</font><font color="#CCCCCC"> and infrastructure which does</font>

587
00:24:51,789 --> 00:24:55,239
happen more<font color="#CCCCCC"> than you'd think</font>

588
00:24:53,019 --> 00:24:58,090
so that's more like academic environment

589
00:24:55,239 --> 00:24:59,739
<font color="#CCCCCC">and some scientific research</font><font color="#E5E5E5"> environment</font>

590
00:24:58,090 --> 00:25:02,649
it's<font color="#E5E5E5"> not necessarily like</font><font color="#CCCCCC"> telco</font>

591
00:24:59,739 --> 00:25:05,830
infrastructure so that's still kind of<font color="#E5E5E5"> a</font>

592
00:25:02,649 --> 00:25:07,238
clever<font color="#CCCCCC"> little hack but overall Erlang is</font>

593
00:25:05,830 --> 00:25:08,799
probably one of the best languages and

594
00:25:07,239 --> 00:25:11,470
most resilient languages<font color="#E5E5E5"> that I've found</font>

595
00:25:08,799 --> 00:25:14,408
<font color="#E5E5E5">for developing</font><font color="#CCCCCC"> applications</font><font color="#E5E5E5"> in fact I'm</font>

596
00:25:11,470 --> 00:25:17,080
I'm<font color="#E5E5E5"> using it more and more</font><font color="#CCCCCC"> these days</font><font color="#E5E5E5"> to</font>

597
00:25:14,409 --> 00:25:18,309
<font color="#CCCCCC">develop tools at lab now security is I</font>

598
00:25:17,080 --> 00:25:20,019
<font color="#E5E5E5">actually really like</font><font color="#CCCCCC"> it a lot</font><font color="#E5E5E5"> which is</font>

599
00:25:18,309 --> 00:25:23,080
one<font color="#E5E5E5"> of the reasons why I'm hacking the</font>

600
00:25:20,019 --> 00:25:25,330
shit out of it<font color="#CCCCCC"> we're also</font><font color="#E5E5E5"> using it in</font>

601
00:25:23,080 --> 00:25:27,460
IOT infrastructure we<font color="#CCCCCC"> have our own</font><font color="#E5E5E5"> IOT</font>

602
00:25:25,330 --> 00:25:30,908
<font color="#E5E5E5">platform that we've developed from the</font>

603
00:25:27,460 --> 00:25:34,509
<font color="#CCCCCC">ground up and we're using our custom</font><font color="#E5E5E5"> or</font>

604
00:25:30,909 --> 00:25:38,559
<font color="#CCCCCC">lank virtual machine in order to</font><font color="#E5E5E5"> run</font>

605
00:25:34,509 --> 00:25:39,879
nodes in our<font color="#CCCCCC"> iot environments so instead</font>

606
00:25:38,559 --> 00:25:43,090
of you<font color="#CCCCCC"> know running some large</font>

607
00:25:39,879 --> 00:25:46,509
application processor a 64-bit<font color="#CCCCCC"> processor</font>

608
00:25:43,090 --> 00:25:49,209
or even a large you know cortex a5<font color="#CCCCCC"> it</font>

609
00:25:46,509 --> 00:25:52,840
costs you know<font color="#CCCCCC"> twelve</font><font color="#E5E5E5"> dollars a pop I</font>

610
00:25:49,210 --> 00:25:56,099
can run Erlang on my own 32-bit virtual

611
00:25:52,840 --> 00:25:59,080
machine inside<font color="#E5E5E5"> of cortex m3</font><font color="#CCCCCC"> for a buck</font>

612
00:25:56,099 --> 00:26:00,939
<font color="#CCCCCC">right so we</font><font color="#E5E5E5"> basically just take our own</font>

613
00:25:59,080 --> 00:26:02,590
<font color="#E5E5E5">virtual machine and put it on our</font><font color="#CCCCCC"> IOT</font>

614
00:26:00,940 --> 00:26:05,139
infrastructure and then load and<font color="#E5E5E5"> run it</font>

615
00:26:02,590 --> 00:26:07,928
there I mean it required me to run or to

616
00:26:05,139 --> 00:26:11,469
<font color="#CCCCCC">code my own beam</font><font color="#E5E5E5"> but who cares it's a</font>

617
00:26:07,929 --> 00:26:13,179
lot safer to run that Erlang code on<font color="#CCCCCC"> IFG</font>

618
00:26:11,470 --> 00:26:14,979
infrastructure than it is to<font color="#E5E5E5"> just get</font>

619
00:26:13,179 --> 00:26:19,029
<font color="#E5E5E5">somebody else to</font><font color="#CCCCCC"> run embedded C I mean</font>

620
00:26:14,979 --> 00:26:21,519
that's a<font color="#E5E5E5"> shitshow</font><font color="#CCCCCC"> right</font><font color="#E5E5E5"> so much better</font>

621
00:26:19,029 --> 00:26:23,529
to do<font color="#E5E5E5"> also</font><font color="#CCCCCC"> Erling is super fast</font><font color="#E5E5E5"> to</font>

622
00:26:21,519 --> 00:26:24,909
deploy which is one of<font color="#CCCCCC"> the reasons why I</font>

623
00:26:23,529 --> 00:26:27,099
think<font color="#E5E5E5"> that nobody's ever stumbled across</font>

624
00:26:24,909 --> 00:26:28,479
these bugs before<font color="#E5E5E5"> because it's</font><font color="#CCCCCC"> really</font>

625
00:26:27,099 --> 00:26:30,789
<font color="#CCCCCC">easy and</font><font color="#E5E5E5"> if you look at the bit space</font>

626
00:26:28,479 --> 00:26:32,409
<font color="#E5E5E5">you have this really powerful</font><font color="#CCCCCC"> language</font>

627
00:26:30,789 --> 00:26:34,330
that's interpreted<font color="#E5E5E5"> but</font><font color="#CCCCCC"> also fairly</font>

628
00:26:32,409 --> 00:26:37,269
<font color="#E5E5E5">secure you're just going to assume</font><font color="#CCCCCC"> that</font>

629
00:26:34,330 --> 00:26:39,580
<font color="#E5E5E5">it's resilient so that's about</font><font color="#CCCCCC"> it it's a</font>

630
00:26:37,269 --> 00:26:42,249
great<font color="#E5E5E5"> attack but it's going</font><font color="#CCCCCC"> to be very</font>

631
00:26:39,580 --> 00:26:44,769
<font color="#E5E5E5">very difficult</font><font color="#CCCCCC"> for Ericsson to combat</font>

632
00:26:42,249 --> 00:26:46,409
this in<font color="#E5E5E5"> any way</font><font color="#CCCCCC"> the recommendation is</font>

633
00:26:44,769 --> 00:26:48,580
basically<font color="#CCCCCC"> just going to</font><font color="#E5E5E5"> be you know what</font>

634
00:26:46,409 --> 00:26:50,379
<font color="#E5E5E5">don't ever put this on the public</font>

635
00:26:48,580 --> 00:26:52,239
<font color="#E5E5E5">network ever in fact when I was</font>

636
00:26:50,379 --> 00:26:55,899
<font color="#E5E5E5">interacting</font><font color="#CCCCCC"> with</font><font color="#E5E5E5"> them via email their</font>

637
00:26:52,239 --> 00:26:56,679
response was essentially well I mean

638
00:26:55,899 --> 00:26:59,110
<font color="#CCCCCC">there</font>

639
00:26:56,679 --> 00:27:00,820
value to this yes but<font color="#CCCCCC"> nobody we should</font>

640
00:26:59,110 --> 00:27:03,158
really<font color="#E5E5E5"> be putting these on public facing</font>

641
00:27:00,820 --> 00:27:04,840
networks<font color="#E5E5E5"> and that was kind of</font><font color="#CCCCCC"> the</font><font color="#E5E5E5"> end of</font>

642
00:27:03,159 --> 00:27:07,360
<font color="#CCCCCC">it and I</font><font color="#E5E5E5"> gave them a year to</font><font color="#CCCCCC"> think about</font>

643
00:27:04,840 --> 00:27:09,580
it before<font color="#CCCCCC"> releasing</font><font color="#E5E5E5"> the</font><font color="#CCCCCC"> information but</font>

644
00:27:07,360 --> 00:27:11,399
there you<font color="#CCCCCC"> go</font><font color="#E5E5E5"> in my world and I'm</font><font color="#CCCCCC"> sure</font>

645
00:27:09,580 --> 00:27:13,570
and everybody else is here in the room

646
00:27:11,399 --> 00:27:15,369
<font color="#CCCCCC">we're</font><font color="#E5E5E5"> not just worried about people that</font>

647
00:27:13,570 --> 00:27:17,590
<font color="#E5E5E5">are you know knocking on the public</font>

648
00:27:15,369 --> 00:27:19,899
facing door<font color="#E5E5E5"> but also somebody that's</font>

649
00:27:17,590 --> 00:27:22,119
migrated laterally in an internal

650
00:27:19,899 --> 00:27:23,860
<font color="#E5E5E5">network</font><font color="#CCCCCC"> so for the purposes of</font>

651
00:27:22,119 --> 00:27:26,499
connecting to<font color="#CCCCCC"> a system</font><font color="#E5E5E5"> like a knurling</font>

652
00:27:23,860 --> 00:27:27,939
<font color="#CCCCCC">network where they can't abuse telco</font>

653
00:27:26,499 --> 00:27:30,429
infrastructure to do malicious things

654
00:27:27,940 --> 00:27:32,590
like that's still<font color="#CCCCCC"> a significant concern</font>

655
00:27:30,429 --> 00:27:35,440
<font color="#E5E5E5">so if somebody can abuse these attacks</font>

656
00:27:32,590 --> 00:27:37,269
internally to gain access to an ER lying

657
00:27:35,440 --> 00:27:39,190
telco<font color="#E5E5E5"> network it's still really</font>

658
00:27:37,269 --> 00:27:40,360
important to guard against<font color="#E5E5E5"> that but</font>

659
00:27:39,190 --> 00:27:41,679
<font color="#E5E5E5">apparently that's you know the</font>

660
00:27:40,360 --> 00:27:43,779
recommendation is probably going<font color="#E5E5E5"> to be</font>

661
00:27:41,679 --> 00:27:45,129
well<font color="#CCCCCC"> subsets that even further put in</font>

662
00:27:43,779 --> 00:27:49,029
some kind of secure internal network

663
00:27:45,129 --> 00:27:56,619
like well it's not realistic<font color="#CCCCCC"> right</font><font color="#E5E5E5"> so</font>

664
00:27:49,029 --> 00:28:01,299
that's about it<font color="#E5E5E5"> any questions any</font>

665
00:27:56,619 --> 00:28:01,928
questions<font color="#CCCCCC"> Mike is on</font><font color="#E5E5E5"> his way no</font>

666
00:28:01,299 --> 00:28:03,820
questions

667
00:28:01,929 --> 00:28:07,289
all<font color="#E5E5E5"> right okay well thanks everybody</font>

668
00:28:03,820 --> 00:28:07,289
<font color="#CCCCCC">thanks Don right</font>

