1
00:00:11,550 --> 00:00:16,020
my name is<font color="#E5E5E5"> Matt Knight</font><font color="#CCCCCC"> this is Mark</font>

2
00:00:13,590 --> 00:00:17,279
<font color="#CCCCCC">Newland we're from Bastille</font><font color="#E5E5E5"> the next</font>

3
00:00:16,020 --> 00:00:18,539
hour<font color="#CCCCCC"> or so we're</font><font color="#E5E5E5"> going to be talking</font>

4
00:00:17,279 --> 00:00:19,529
about<font color="#E5E5E5"> some of our favorite techniques</font>

5
00:00:18,539 --> 00:00:22,470
and methods for reverse engineering

6
00:00:19,529 --> 00:00:26,340
<font color="#CCCCCC">wireless signals it's kind of</font><font color="#E5E5E5"> our primer</font>

7
00:00:22,470 --> 00:00:27,900
on<font color="#E5E5E5"> wireless reverse engineering so Mark</font>

8
00:00:26,340 --> 00:00:29,609
<font color="#CCCCCC">Newland here is a security researcher</font>

9
00:00:27,900 --> 00:00:31,288
with best deal you may know him from

10
00:00:29,609 --> 00:00:34,040
<font color="#E5E5E5">discovering</font><font color="#CCCCCC"> the mouse Jack vulnerability</font>

11
00:00:31,289 --> 00:00:37,220
in 2016<font color="#CCCCCC"> this</font><font color="#E5E5E5"> is</font><font color="#CCCCCC"> a series of</font><font color="#E5E5E5"> pretty scary</font>

12
00:00:34,040 --> 00:00:39,360
<font color="#E5E5E5">wireless keyboard and</font><font color="#CCCCCC"> mouse exploits and</font>

13
00:00:37,220 --> 00:00:41,519
<font color="#CCCCCC">Mark has kind of a</font><font color="#E5E5E5"> non-traditional path</font>

14
00:00:39,360 --> 00:00:44,040
into software-defined radio and Wireless

15
00:00:41,519 --> 00:00:45,930
reverse engineering<font color="#CCCCCC"> he got into it</font><font color="#E5E5E5"> by</font>

16
00:00:44,040 --> 00:00:47,489
way<font color="#CCCCCC"> of being an individual</font><font color="#E5E5E5"> entrant to</font><font color="#CCCCCC"> a</font>

17
00:00:45,930 --> 00:00:50,280
number of DARPA challenges in which he

18
00:00:47,489 --> 00:00:52,349
came<font color="#E5E5E5"> in second and third I believe</font><font color="#CCCCCC"> so</font>

19
00:00:50,280 --> 00:00:54,360
that's<font color="#CCCCCC"> Margaret and this is Matt Knight</font>

20
00:00:52,350 --> 00:00:56,909
<font color="#CCCCCC">Matt and I work</font><font color="#E5E5E5"> together on the threat</font>

21
00:00:54,360 --> 00:00:57,690
<font color="#CCCCCC">research team at</font><font color="#E5E5E5"> bestial networks</font><font color="#CCCCCC"> matt</font>

22
00:00:56,909 --> 00:00:59,430
comes from a more traditional

23
00:00:57,690 --> 00:01:00,960
educational background having<font color="#E5E5E5"> earned a</font>

24
00:00:59,430 --> 00:01:03,089
bachelor's<font color="#CCCCCC"> in</font><font color="#E5E5E5"> EE from Dartmouth College</font>

25
00:01:00,960 --> 00:01:05,850
<font color="#E5E5E5">you may have seen</font><font color="#CCCCCC"> some of</font><font color="#E5E5E5"> Matt's work at</font>

26
00:01:03,089 --> 00:01:07,408
Def Con or CCC last year he did a

27
00:01:05,850 --> 00:01:09,240
<font color="#E5E5E5">project of her first engineering the</font>

28
00:01:07,409 --> 00:01:10,950
physical layer of the<font color="#CCCCCC"> Alaura wireless</font>

29
00:01:09,240 --> 00:01:13,199
protocol which was in<font color="#E5E5E5"> pretty cool stuff</font>

30
00:01:10,950 --> 00:01:16,229
<font color="#CCCCCC">Mattress an all-around badass</font><font color="#E5E5E5"> embedded</font>

31
00:01:13,200 --> 00:01:19,079
and wireless security researcher<font color="#CCCCCC"> alright</font>

32
00:01:16,229 --> 00:01:20,429
so just<font color="#CCCCCC"> a quick intro here</font><font color="#E5E5E5"> since we're</font>

33
00:01:19,079 --> 00:01:21,389
here<font color="#CCCCCC"> attacking the Box technical</font>

34
00:01:20,429 --> 00:01:23,729
conference we're going to assume that

35
00:01:21,390 --> 00:01:25,170
<font color="#CCCCCC">most people in</font><font color="#E5E5E5"> the</font><font color="#CCCCCC"> room are comfortable</font>

36
00:01:23,729 --> 00:01:27,090
with dealing<font color="#E5E5E5"> with</font><font color="#CCCCCC"> binary data formats</font>

37
00:01:25,170 --> 00:01:28,950
<font color="#E5E5E5">whether</font><font color="#CCCCCC"> it's network traffic or mell</font>

38
00:01:27,090 --> 00:01:30,090
reversing you know if you've<font color="#E5E5E5"> got a bunch</font>

39
00:01:28,950 --> 00:01:32,280
<font color="#CCCCCC">of ones and</font><font color="#E5E5E5"> zeros you're going to be</font>

40
00:01:30,090 --> 00:01:34,020
comfortable<font color="#E5E5E5"> looking at it and you know</font>

41
00:01:32,280 --> 00:01:36,869
figuring<font color="#E5E5E5"> out what's there we're</font><font color="#CCCCCC"> not</font>

42
00:01:34,020 --> 00:01:39,179
going<font color="#E5E5E5"> to assume is any real</font><font color="#CCCCCC"> radio or DSP</font>

43
00:01:36,869 --> 00:01:40,649
domain knowledge we're<font color="#E5E5E5"> going to rely on</font>

44
00:01:39,179 --> 00:01:42,810
tools and techniques<font color="#E5E5E5"> to get around all</font>

45
00:01:40,649 --> 00:01:44,399
<font color="#E5E5E5">that stuff</font><font color="#CCCCCC"> so</font><font color="#E5E5E5"> you're going</font><font color="#CCCCCC"> to be able to</font>

46
00:01:42,810 --> 00:01:47,009
apply<font color="#E5E5E5"> your traditional software and</font>

47
00:01:44,399 --> 00:01:50,130
network shops<font color="#E5E5E5"> to the wireless domain to</font>

48
00:01:47,009 --> 00:01:51,719
<font color="#CCCCCC">reverse-engineer</font><font color="#E5E5E5"> these systems so</font><font color="#CCCCCC"> why is</font>

49
00:01:50,130 --> 00:01:53,939
this relevant

50
00:01:51,719 --> 00:01:55,919
well<font color="#E5E5E5"> it's 2017 wireless systems are</font>

51
00:01:53,939 --> 00:01:57,240
everywhere<font color="#CCCCCC"> it's being</font><font color="#E5E5E5"> driven by the</font>

52
00:01:55,920 --> 00:01:59,609
growth of<font color="#CCCCCC"> mobile and the Internet of</font>

53
00:01:57,240 --> 00:02:01,560
Things<font color="#CCCCCC"> we have fewer and</font><font color="#E5E5E5"> fewer wires</font>

54
00:01:59,609 --> 00:02:04,919
connecting<font color="#E5E5E5"> these devices and more and</font>

55
00:02:01,560 --> 00:02:05,670
<font color="#E5E5E5">more devices every year now regarding</font>

56
00:02:04,920 --> 00:02:07,709
<font color="#E5E5E5">the Internet of Things</font>

57
00:02:05,670 --> 00:02:11,340
apart from being everybody's favorite

58
00:02:07,709 --> 00:02:13,080
buzzword<font color="#CCCCCC"> we all know</font><font color="#E5E5E5"> since you know we</font>

59
00:02:11,340 --> 00:02:15,090
were working technology we all know that

60
00:02:13,080 --> 00:02:16,800
this<font color="#E5E5E5"> is really just code word you know</font>

61
00:02:15,090 --> 00:02:19,620
marketing speak for connected embedded

62
00:02:16,800 --> 00:02:21,600
devices and these<font color="#CCCCCC"> quote unquote smart</font>

63
00:02:19,620 --> 00:02:23,330
<font color="#E5E5E5">devices are</font><font color="#CCCCCC"> usually pretty done it's</font>

64
00:02:21,600 --> 00:02:25,140
been<font color="#E5E5E5"> shown over and</font><font color="#CCCCCC"> over again</font><font color="#E5E5E5"> and</font>

65
00:02:23,330 --> 00:02:26,880
there's good reason for

66
00:02:25,140 --> 00:02:29,880
and that's because embedded systems are

67
00:02:26,880 --> 00:02:31,470
<font color="#E5E5E5">built on</font><font color="#CCCCCC"> compromise there are some real</font>

68
00:02:29,880 --> 00:02:35,190
kind<font color="#E5E5E5"> of hard truths that they have to</font>

69
00:02:31,470 --> 00:02:38,070
make trade-offs between<font color="#E5E5E5"> in order</font><font color="#CCCCCC"> to to</font>

70
00:02:35,190 --> 00:02:41,070
perform<font color="#E5E5E5"> optimally so for instance</font>

71
00:02:38,070 --> 00:02:43,410
embedded hardware<font color="#E5E5E5"> is often under a lot</font>

72
00:02:41,070 --> 00:02:44,970
of<font color="#E5E5E5"> size and costs pressure you know</font>

73
00:02:43,410 --> 00:02:46,440
maybe it has<font color="#E5E5E5"> to submit</font><font color="#CCCCCC"> into</font><font color="#E5E5E5"> a small</font>

74
00:02:44,970 --> 00:02:47,970
package<font color="#CCCCCC"> like it's a wearable</font><font color="#E5E5E5"> device</font><font color="#CCCCCC"> or</font>

75
00:02:46,440 --> 00:02:49,260
something<font color="#E5E5E5"> like that or it's being</font>

76
00:02:47,970 --> 00:02:49,710
produced in mass markets it has to be

77
00:02:49,260 --> 00:02:51,630
<font color="#E5E5E5">cheap</font>

78
00:02:49,710 --> 00:02:53,370
<font color="#CCCCCC">it might be battery-powered which would</font>

79
00:02:51,630 --> 00:02:56,700
limit the type of<font color="#E5E5E5"> computation you can do</font>

80
00:02:53,370 --> 00:02:58,350
on it<font color="#CCCCCC"> may be deployed in challenging</font>

81
00:02:56,700 --> 00:03:00,060
<font color="#CCCCCC">environments</font><font color="#E5E5E5"> it might be mounted on a</font>

82
00:02:58,350 --> 00:03:01,320
telephone pole or outside somewhere

83
00:03:00,060 --> 00:03:03,540
<font color="#CCCCCC">somewhere hard-to-reach</font>

84
00:03:01,320 --> 00:03:05,040
maybe it's put in the<font color="#E5E5E5"> basement</font><font color="#CCCCCC"> of</font>

85
00:03:03,540 --> 00:03:07,679
somebody's house and is<font color="#E5E5E5"> left there for</font>

86
00:03:05,040 --> 00:03:10,290
<font color="#CCCCCC">20</font><font color="#E5E5E5"> years</font><font color="#CCCCCC"> so you have lots of legacy</font>

87
00:03:07,680 --> 00:03:11,850
problems related<font color="#CCCCCC"> to that</font><font color="#E5E5E5"> embedded</font>

88
00:03:10,290 --> 00:03:14,429
<font color="#CCCCCC">systems can be very difficult to</font><font color="#E5E5E5"> patch</font>

89
00:03:11,850 --> 00:03:15,720
as<font color="#CCCCCC"> well they may have one time</font>

90
00:03:14,430 --> 00:03:18,270
<font color="#CCCCCC">programmable firmware which you</font>

91
00:03:15,720 --> 00:03:20,489
physically cannot<font color="#E5E5E5"> rewrite or they may</font>

92
00:03:18,270 --> 00:03:22,980
<font color="#E5E5E5">have limited network</font><font color="#CCCCCC"> access</font><font color="#E5E5E5"> to push for</font>

93
00:03:20,489 --> 00:03:24,989
<font color="#E5E5E5">more to them so one could</font><font color="#CCCCCC"> say that</font><font color="#E5E5E5"> these</font>

94
00:03:22,980 --> 00:03:27,480
<font color="#E5E5E5">embedded systems are really vulnerable</font>

95
00:03:24,989 --> 00:03:30,540
<font color="#E5E5E5">by virtue of the constraints placed</font><font color="#CCCCCC"> on</font>

96
00:03:27,480 --> 00:03:31,980
them so this<font color="#E5E5E5"> is manifested in a series</font>

97
00:03:30,540 --> 00:03:33,329
of<font color="#E5E5E5"> fairly</font><font color="#CCCCCC"> high-profile attacks in the</font>

98
00:03:31,980 --> 00:03:35,090
last<font color="#CCCCCC"> couple of years</font><font color="#E5E5E5"> and I'm</font><font color="#CCCCCC"> just going</font>

99
00:03:33,330 --> 00:03:37,530
<font color="#CCCCCC">to intro two of them to illustrate why</font>

100
00:03:35,090 --> 00:03:39,600
why this domain<font color="#E5E5E5"> is important and</font>

101
00:03:37,530 --> 00:03:42,269
specifically these<font color="#E5E5E5"> are</font><font color="#CCCCCC"> wireless</font><font color="#E5E5E5"> attacks</font>

102
00:03:39,600 --> 00:03:43,980
and embedded<font color="#CCCCCC"> systems the first was a</font>

103
00:03:42,269 --> 00:03:45,810
series of vulnerabilities facing home

104
00:03:43,980 --> 00:03:48,929
alarm systems it was discovered<font color="#E5E5E5"> by</font><font color="#CCCCCC"> our</font>

105
00:03:45,810 --> 00:03:51,390
colleague Logan<font color="#E5E5E5"> Lam in 2014 and Logan</font>

106
00:03:48,930 --> 00:03:53,640
analyzed the legacy RF<font color="#E5E5E5"> link that</font>

107
00:03:51,390 --> 00:03:54,929
connects the wireless sensors that you

108
00:03:53,640 --> 00:03:57,329
place on your doors and<font color="#E5E5E5"> windows</font><font color="#CCCCCC"> around</font>

109
00:03:54,930 --> 00:03:59,310
<font color="#E5E5E5">your home the connection of sensors back</font>

110
00:03:57,330 --> 00:04:01,260
to the home alarm system state

111
00:03:59,310 --> 00:04:02,549
monitoring panel<font color="#CCCCCC"> that triggers</font><font color="#E5E5E5"> alarm</font>

112
00:04:01,260 --> 00:04:05,070
conditions and calls the<font color="#CCCCCC"> police when</font>

113
00:04:02,549 --> 00:04:06,959
somebody<font color="#E5E5E5"> breaks in your house and the</font>

114
00:04:05,070 --> 00:04:10,680
<font color="#E5E5E5">people that designed this the system</font>

115
00:04:06,959 --> 00:04:14,489
designed a one-way unencrypted link<font color="#E5E5E5"> with</font>

116
00:04:10,680 --> 00:04:17,100
no replay protection and limited<font color="#E5E5E5"> anti</font>

117
00:04:14,489 --> 00:04:18,620
jamming mitigation and they did so to

118
00:04:17,100 --> 00:04:21,060
make<font color="#E5E5E5"> it very legacy compliant</font>

119
00:04:18,620 --> 00:04:22,260
<font color="#E5E5E5">inexpensive also so that</font><font color="#CCCCCC"> you wouldn't</font>

120
00:04:21,060 --> 00:04:24,300
<font color="#E5E5E5">have to replace the batteries</font><font color="#CCCCCC"> on</font><font color="#E5E5E5"> these</font>

121
00:04:22,260 --> 00:04:26,340
<font color="#E5E5E5">sensors often</font><font color="#CCCCCC"> once every five years or</font>

122
00:04:24,300 --> 00:04:27,900
<font color="#E5E5E5">something so they had some design</font>

123
00:04:26,340 --> 00:04:29,940
features<font color="#CCCCCC"> that they were trying to</font><font color="#E5E5E5"> build</font>

124
00:04:27,900 --> 00:04:32,460
in but in<font color="#E5E5E5"> the process</font><font color="#CCCCCC"> they traded</font><font color="#E5E5E5"> on on</font>

125
00:04:29,940 --> 00:04:34,500
security<font color="#CCCCCC"> so Logan</font><font color="#E5E5E5"> found</font><font color="#CCCCCC"> that he was able</font>

126
00:04:32,460 --> 00:04:34,979
<font color="#CCCCCC">to you know Jam these signals with</font>

127
00:04:34,500 --> 00:04:37,229
impunity

128
00:04:34,979 --> 00:04:38,280
<font color="#E5E5E5">so</font><font color="#CCCCCC"> that's alarms and get reported you</font>

129
00:04:37,229 --> 00:04:40,770
could inject commands

130
00:04:38,280 --> 00:04:43,080
<font color="#E5E5E5">to trigger false alarms maliciously you</font>

131
00:04:40,770 --> 00:04:44,609
<font color="#CCCCCC">could also eavesdrop on signals within</font>

132
00:04:43,080 --> 00:04:47,099
other people's<font color="#E5E5E5"> homes to do some like</font>

133
00:04:44,610 --> 00:04:47,970
spooky<font color="#CCCCCC"> SIGINT ii type things</font><font color="#E5E5E5"> attract</font>

134
00:04:47,100 --> 00:04:50,190
people as they're moving throughout

135
00:04:47,970 --> 00:04:51,690
their house and stuff and again he<font color="#E5E5E5"> was</font>

136
00:04:50,190 --> 00:04:53,669
able<font color="#E5E5E5"> to do all</font><font color="#CCCCCC"> this by virtue of</font><font color="#E5E5E5"> the</font>

137
00:04:51,690 --> 00:04:55,440
fact that the<font color="#CCCCCC"> system</font><font color="#E5E5E5"> was not</font><font color="#CCCCCC"> designed</font>

138
00:04:53,669 --> 00:05:00,030
<font color="#CCCCCC">security in</font><font color="#E5E5E5"> mind it was designed with</font>

139
00:04:55,440 --> 00:05:02,520
some more<font color="#E5E5E5"> UX UX</font><font color="#CCCCCC"> acts aspects instead so</font>

140
00:05:00,030 --> 00:05:03,840
he was<font color="#CCCCCC"> able to</font><font color="#E5E5E5"> compromise</font><font color="#CCCCCC"> that the</font>

141
00:05:02,520 --> 00:05:05,700
second vulnerability I'll<font color="#E5E5E5"> talk about</font>

142
00:05:03,840 --> 00:05:08,760
<font color="#E5E5E5">briefly is the</font><font color="#CCCCCC"> mask jack vulnerability</font>

143
00:05:05,700 --> 00:05:11,550
that mark discovered in 2015<font color="#CCCCCC"> and mark</font>

144
00:05:08,760 --> 00:05:14,039
<font color="#CCCCCC">analyzed the RF link that connects non</font>

145
00:05:11,550 --> 00:05:15,480
<font color="#E5E5E5">Bluetooth wireless mice and keyboards to</font>

146
00:05:14,040 --> 00:05:18,780
the dongles<font color="#E5E5E5"> which you plug into the</font>

147
00:05:15,480 --> 00:05:21,030
computer<font color="#CCCCCC"> now I say non Bluetooth because</font>

148
00:05:18,780 --> 00:05:23,280
they use a<font color="#E5E5E5"> five it's made by a company</font>

149
00:05:21,030 --> 00:05:24,929
called Nordic semiconductor the physical

150
00:05:23,280 --> 00:05:26,479
layer is very<font color="#E5E5E5"> similar to</font><font color="#CCCCCC"> Bluetooth but</font>

151
00:05:24,930 --> 00:05:28,560
it doesn't have any of<font color="#E5E5E5"> the</font><font color="#CCCCCC"> mac</font><font color="#E5E5E5"> layer</font>

152
00:05:26,480 --> 00:05:30,840
<font color="#E5E5E5">networking or security protections on</font>

153
00:05:28,560 --> 00:05:32,880
top as a result it has<font color="#E5E5E5"> better battery</font>

154
00:05:30,840 --> 00:05:34,590
life<font color="#E5E5E5"> in</font><font color="#CCCCCC"> is less expensive but obviously</font>

155
00:05:32,880 --> 00:05:35,729
you<font color="#CCCCCC"> don't have those features</font><font color="#E5E5E5"> built in</font>

156
00:05:34,590 --> 00:05:37,289
<font color="#E5E5E5">the protocol it's left up to the</font>

157
00:05:35,729 --> 00:05:40,110
<font color="#E5E5E5">manufacturer to implement those</font><font color="#CCCCCC"> things</font>

158
00:05:37,290 --> 00:05:41,930
on top so by<font color="#CCCCCC"> analyzing this these</font>

159
00:05:40,110 --> 00:05:44,850
proprietary<font color="#E5E5E5"> links mark was able to find</font>

160
00:05:41,930 --> 00:05:47,580
command injection and<font color="#CCCCCC"> keystroke sniffing</font>

161
00:05:44,850 --> 00:05:49,290
across virtually all the<font color="#CCCCCC"> devices that</font><font color="#E5E5E5"> he</font>

162
00:05:47,580 --> 00:05:52,080
looked at had some form of this

163
00:05:49,290 --> 00:05:55,080
<font color="#E5E5E5">vulnerability so again it's another</font>

164
00:05:52,080 --> 00:05:58,710
example of embedded constraints<font color="#E5E5E5"> leading</font>

165
00:05:55,080 --> 00:06:01,109
to vulnerabilities in action here so at

166
00:05:58,710 --> 00:06:02,820
the IOT village at<font color="#CCCCCC"> comm last year Matt</font>

167
00:06:01,110 --> 00:06:05,520
and I gave a<font color="#CCCCCC"> talk on reverse engineering</font>

168
00:06:02,820 --> 00:06:07,409
a toy drone and as part of this talk we

169
00:06:05,520 --> 00:06:09,150
had a<font color="#E5E5E5"> section where we discuss RF</font>

170
00:06:07,410 --> 00:06:10,800
fundamentals and kind of touched on our

171
00:06:09,150 --> 00:06:12,750
<font color="#E5E5E5">Wireless reverse engineering methodology</font>

172
00:06:10,800 --> 00:06:14,370
<font color="#CCCCCC">and we got some good</font><font color="#E5E5E5"> feedback from this</font>

173
00:06:12,750 --> 00:06:15,780
and what we learned is that there's a

174
00:06:14,370 --> 00:06:17,130
lot<font color="#CCCCCC"> of interest</font><font color="#E5E5E5"> in applying</font>

175
00:06:15,780 --> 00:06:19,109
software-defined radio to these<font color="#CCCCCC"> type of</font>

176
00:06:17,130 --> 00:06:21,240
<font color="#E5E5E5">security problems but people tend to</font>

177
00:06:19,110 --> 00:06:23,400
find the RF intimidating maybe think

178
00:06:21,240 --> 00:06:24,690
it's too<font color="#CCCCCC"> academic but</font><font color="#E5E5E5"> you know Matt by</font>

179
00:06:23,400 --> 00:06:26,310
our evidence that this<font color="#E5E5E5"> really isn't the</font>

180
00:06:24,690 --> 00:06:28,710
<font color="#CCCCCC">case so I have no college background</font>

181
00:06:26,310 --> 00:06:29,910
matt has a bachelor's<font color="#CCCCCC"> degree yeah we've</font>

182
00:06:28,710 --> 00:06:31,530
both been able to do<font color="#E5E5E5"> pretty meaningful</font>

183
00:06:29,910 --> 00:06:33,870
space and meaningful work in the

184
00:06:31,530 --> 00:06:37,320
<font color="#E5E5E5">wireless space and so the thesis is</font><font color="#CCCCCC"> that</font>

185
00:06:33,870 --> 00:06:39,690
no PhD<font color="#E5E5E5"> is no problem so we're going to</font>

186
00:06:37,320 --> 00:06:41,130
start by discussing some<font color="#CCCCCC"> of the common</font>

187
00:06:39,690 --> 00:06:44,039
<font color="#E5E5E5">hardware and software tools we like to</font>

188
00:06:41,130 --> 00:06:46,710
use<font color="#CCCCCC"> but then going to provide a short</font>

189
00:06:44,039 --> 00:06:48,719
crash course in the bare minimum

190
00:06:46,710 --> 00:06:50,400
<font color="#CCCCCC">wireless fundamentals RF fundamentals</font>

191
00:06:48,720 --> 00:06:52,169
<font color="#CCCCCC">that</font><font color="#E5E5E5"> you need to understand we're then</font>

192
00:06:50,400 --> 00:06:54,090
going<font color="#CCCCCC"> to introduce a RF engineering</font>

193
00:06:52,169 --> 00:06:56,068
<font color="#CCCCCC">work blow that</font><font color="#E5E5E5"> can be applied to</font><font color="#CCCCCC"> a vers</font>

194
00:06:54,090 --> 00:06:57,479
engineer any wireless system and this<font color="#E5E5E5"> is</font>

195
00:06:56,069 --> 00:06:59,460
really<font color="#E5E5E5"> the key that you can take this</font>

196
00:06:57,479 --> 00:07:00,688
same workflow<font color="#E5E5E5"> the same process and apply</font>

197
00:06:59,460 --> 00:07:02,789
it to any wireless device to

198
00:07:00,689 --> 00:07:04,889
<font color="#CCCCCC">reverse-engineer it</font><font color="#E5E5E5"> we're then going</font><font color="#CCCCCC"> to</font>

199
00:07:02,789 --> 00:07:06,150
demonstrate this workflow by reverse

200
00:07:04,889 --> 00:07:08,639
<font color="#CCCCCC">engineering a few different wireless</font>

201
00:07:06,150 --> 00:07:10,590
devices and we're<font color="#E5E5E5"> not going to get into</font>

202
00:07:08,639 --> 00:07:11,789
<font color="#E5E5E5">any DSP topics the reason is that you</font>

203
00:07:10,590 --> 00:07:13,650
<font color="#E5E5E5">really don't have to</font><font color="#CCCCCC"> have any</font>

204
00:07:11,789 --> 00:07:15,960
understanding<font color="#E5E5E5"> of the underlying math to</font>

205
00:07:13,650 --> 00:07:17,849
use<font color="#E5E5E5"> this stuff so when you're getting</font>

206
00:07:15,960 --> 00:07:19,438
into<font color="#E5E5E5"> wireless hacking you're probably</font>

207
00:07:17,849 --> 00:07:20,878
wondering now what<font color="#CCCCCC"> is the Buried entry</font>

208
00:07:19,439 --> 00:07:22,830
<font color="#CCCCCC">in what</font><font color="#E5E5E5"> you know hardware and software</font>

209
00:07:20,879 --> 00:07:24,449
do<font color="#E5E5E5"> I need and conveniently there's a</font>

210
00:07:22,830 --> 00:07:26,039
great open source ecosystem<font color="#CCCCCC"> around this</font>

211
00:07:24,449 --> 00:07:28,169
so it used to<font color="#E5E5E5"> be that software-defined</font>

212
00:07:26,039 --> 00:07:30,748
radios were really expensive lab

213
00:07:28,169 --> 00:07:33,180
equipment<font color="#CCCCCC"> but now it's been commoditized</font>

214
00:07:30,749 --> 00:07:34,740
and<font color="#E5E5E5"> so really</font><font color="#CCCCCC"> on a hobby budget you can</font>

215
00:07:33,180 --> 00:07:37,469
get software<font color="#E5E5E5"> defined radio hardware and</font>

216
00:07:34,740 --> 00:07:39,029
do work in<font color="#E5E5E5"> the space so on the radio</font>

217
00:07:37,469 --> 00:07:40,439
side we have the distinction between

218
00:07:39,029 --> 00:07:42,509
<font color="#E5E5E5">hardware defined radio and</font>

219
00:07:40,439 --> 00:07:43,889
software-defined radio so harder to find

220
00:07:42,509 --> 00:07:45,389
radio would be something<font color="#E5E5E5"> like the</font>

221
00:07:43,889 --> 00:07:47,669
cellular modem in your phone or<font color="#CCCCCC"> the</font>

222
00:07:45,389 --> 00:07:50,189
<font color="#E5E5E5">Bluetooth radio in</font><font color="#CCCCCC"> your laptop and it's</font>

223
00:07:47,669 --> 00:07:52,680
an<font color="#E5E5E5"> integrated</font><font color="#CCCCCC"> circuit which is designed</font>

224
00:07:50,189 --> 00:07:53,669
to do one<font color="#E5E5E5"> protocol really well but it's</font>

225
00:07:52,680 --> 00:07:55,499
<font color="#CCCCCC">not good for a lot of reverse</font>

226
00:07:53,669 --> 00:07:57,568
engineering<font color="#E5E5E5"> processes because you can't</font>

227
00:07:55,499 --> 00:07:59,339
configure<font color="#E5E5E5"> it</font><font color="#CCCCCC"> in the way that you need</font><font color="#E5E5E5"> to</font>

228
00:07:57,569 --> 00:08:00,569
look at an unknown protocol so<font color="#E5E5E5"> we have</font>

229
00:07:59,339 --> 00:08:03,779
some devices<font color="#E5E5E5"> here for looking at</font>

230
00:08:00,569 --> 00:08:05,669
<font color="#E5E5E5">Bluetooth and Nordic and RF 24 and said</font>

231
00:08:03,779 --> 00:08:08,399
<font color="#CCCCCC">we've heard stuff SK protocols and</font>

232
00:08:05,669 --> 00:08:10,289
<font color="#CCCCCC">ZigBee 8 or 254</font><font color="#E5E5E5"> then on the</font>

233
00:08:08,399 --> 00:08:12,899
<font color="#E5E5E5">software-defined radio side the big</font>

234
00:08:10,289 --> 00:08:14,699
difference<font color="#E5E5E5"> between a SDR and HDR that an</font>

235
00:08:12,899 --> 00:08:16,289
SDR can be reconfigured<font color="#E5E5E5"> on-the-fly</font>

236
00:08:14,699 --> 00:08:17,490
<font color="#CCCCCC">so you can tune it to</font><font color="#E5E5E5"> different</font><font color="#CCCCCC"> Center</font>

237
00:08:16,289 --> 00:08:19,800
frequencies you<font color="#E5E5E5"> can set different</font>

238
00:08:17,490 --> 00:08:21,689
<font color="#CCCCCC">channel bandwidths</font><font color="#E5E5E5"> and instead of the</font>

239
00:08:19,800 --> 00:08:23,370
logic that<font color="#E5E5E5"> makes it a Wi-Fi radio or a</font>

240
00:08:21,689 --> 00:08:26,610
Bluetooth radio living on the hardware

241
00:08:23,370 --> 00:08:29,249
the hardware sends the raw radio data to

242
00:08:26,610 --> 00:08:31,229
<font color="#CCCCCC">your host computer or FPGA and then the</font>

243
00:08:29,249 --> 00:08:32,969
logic<font color="#E5E5E5"> that makes it operate on a</font>

244
00:08:31,229 --> 00:08:34,620
specific<font color="#E5E5E5"> protocol that's in software</font><font color="#CCCCCC"> and</font>

245
00:08:32,969 --> 00:08:35,909
so because<font color="#CCCCCC"> of this</font><font color="#E5E5E5"> you</font><font color="#CCCCCC"> can iterate on it</font>

246
00:08:34,620 --> 00:08:37,979
quickly and as your reverse engineering

247
00:08:35,909 --> 00:08:40,019
<font color="#E5E5E5">a protocol you</font><font color="#CCCCCC"> can change the behavior</font>

248
00:08:37,979 --> 00:08:41,300
<font color="#CCCCCC">of</font><font color="#E5E5E5"> the radio on the fly as you learn</font>

249
00:08:40,019 --> 00:08:43,919
more<font color="#CCCCCC"> about the device you're looking at</font>

250
00:08:41,299 --> 00:08:47,250
on the<font color="#CCCCCC"> software side there's new radio</font>

251
00:08:43,919 --> 00:08:47,850
this<font color="#E5E5E5"> is</font><font color="#CCCCCC"> a DSP suite</font><font color="#E5E5E5"> really great open</font>

252
00:08:47,250 --> 00:08:50,220
<font color="#CCCCCC">source software</font>

253
00:08:47,850 --> 00:08:51,449
this has<font color="#E5E5E5"> locks which abstract away all</font>

254
00:08:50,220 --> 00:08:53,279
of<font color="#E5E5E5"> the different signal processing</font>

255
00:08:51,449 --> 00:08:54,779
things you need<font color="#CCCCCC"> to do so</font><font color="#E5E5E5"> you can use the</font>

256
00:08:53,279 --> 00:08:56,310
tool<font color="#E5E5E5"> called</font><font color="#CCCCCC"> green radio companion and</font>

257
00:08:54,779 --> 00:08:58,560
drag and<font color="#E5E5E5"> drop these blocks together to</font>

258
00:08:56,310 --> 00:09:00,300
build a flow graph that does all this

259
00:08:58,560 --> 00:09:02,069
magic radio stuff and turns<font color="#E5E5E5"> radio waves</font>

260
00:09:00,300 --> 00:09:04,560
<font color="#E5E5E5">into bits and bytes you can operate on</font>

261
00:09:02,069 --> 00:09:06,030
<font color="#E5E5E5">disk</font><font color="#CCCCCC"> mat vestido we've contributed a</font>

262
00:09:04,560 --> 00:09:08,219
couple<font color="#CCCCCC"> canoe radio modules mat</font>

263
00:09:06,030 --> 00:09:09,959
built the<font color="#E5E5E5"> GR Laura module which is a</font>

264
00:09:08,220 --> 00:09:11,880
<font color="#E5E5E5">transceiver for the Elora</font><font color="#CCCCCC"> LP wound</font>

265
00:09:09,960 --> 00:09:13,710
protocol<font color="#E5E5E5"> I released</font><font color="#CCCCCC"> your Nordic</font><font color="#E5E5E5"> which is</font>

266
00:09:11,880 --> 00:09:16,740
a transceiver<font color="#CCCCCC"> for the Nordic and rs-24</font>

267
00:09:13,710 --> 00:09:18,510
devices<font color="#E5E5E5"> and the nice</font><font color="#CCCCCC"> thing here is that</font>

268
00:09:16,740 --> 00:09:20,760
<font color="#E5E5E5">because a lot of really smart</font><font color="#CCCCCC"> people</font>

269
00:09:18,510 --> 00:09:23,640
<font color="#E5E5E5">have built up this ecosystem</font><font color="#CCCCCC"> you can</font>

270
00:09:20,760 --> 00:09:24,960
leverage it very heavily<font color="#E5E5E5"> and not have to</font>

271
00:09:23,640 --> 00:09:26,310
understand any<font color="#E5E5E5"> of the radio stuff and</font>

272
00:09:24,960 --> 00:09:30,240
just treat this as a<font color="#CCCCCC"> regular binary</font>

273
00:09:26,310 --> 00:09:31,680
reversing problem<font color="#CCCCCC"> alright so with the</font>

274
00:09:30,240 --> 00:09:34,050
exposition done we're going<font color="#E5E5E5"> to dive into</font>

275
00:09:31,680 --> 00:09:35,099
some<font color="#E5E5E5"> technical details here</font><font color="#CCCCCC"> and we're</font>

276
00:09:34,050 --> 00:09:36,449
going<font color="#E5E5E5"> to do with this next section is</font>

277
00:09:35,100 --> 00:09:38,790
provide just enough<font color="#E5E5E5"> fundamental</font>

278
00:09:36,450 --> 00:09:40,080
understanding of<font color="#E5E5E5"> exactly what radios are</font>

279
00:09:38,790 --> 00:09:41,910
and how they work<font color="#CCCCCC"> so that</font><font color="#E5E5E5"> we can frame</font>

280
00:09:40,080 --> 00:09:46,230
the<font color="#CCCCCC"> rest of the conversation</font><font color="#E5E5E5"> around</font>

281
00:09:41,910 --> 00:09:47,910
these concepts<font color="#E5E5E5"> and originally wanted to</font>

282
00:09:46,230 --> 00:09:50,340
call this the obscenely short radio

283
00:09:47,910 --> 00:09:51,510
crash course but<font color="#E5E5E5"> you know my colleagues</font>

284
00:09:50,340 --> 00:09:54,360
have told me that<font color="#E5E5E5"> that wasn't wasn't</font>

285
00:09:51,510 --> 00:09:57,390
profound enough so instead we're<font color="#E5E5E5"> going</font>

286
00:09:54,360 --> 00:09:58,740
<font color="#E5E5E5">to cover these details in kind of a very</font>

287
00:09:57,390 --> 00:10:00,060
<font color="#CCCCCC">high-level</font><font color="#E5E5E5"> provide just the information</font>

288
00:09:58,740 --> 00:10:02,070
<font color="#CCCCCC">we need to understand the rest</font><font color="#E5E5E5"> of the</font>

289
00:10:00,060 --> 00:10:05,239
content but really<font color="#CCCCCC"> just scratch the</font>

290
00:10:02,070 --> 00:10:07,200
<font color="#E5E5E5">surface so let's uh let's get going then</font>

291
00:10:05,240 --> 00:10:09,000
so when we talk<font color="#CCCCCC"> about reverse</font>

292
00:10:07,200 --> 00:10:10,620
engineering<font color="#E5E5E5"> wireless systems were</font>

293
00:10:09,000 --> 00:10:12,810
talking about reverse<font color="#CCCCCC"> engineering</font><font color="#E5E5E5"> the</font>

294
00:10:10,620 --> 00:10:15,360
physical layer and this<font color="#E5E5E5"> is the</font><font color="#CCCCCC"> lowest</font>

295
00:10:12,810 --> 00:10:17,280
layer<font color="#E5E5E5"> in the communication model</font><font color="#CCCCCC"> and in</font>

296
00:10:15,360 --> 00:10:19,980
<font color="#E5E5E5">wired protocols it refers to voltage</font>

297
00:10:17,280 --> 00:10:23,160
timing and wiring<font color="#E5E5E5"> that defines</font><font color="#CCCCCC"> what is a</font>

298
00:10:19,980 --> 00:10:26,850
<font color="#CCCCCC">one in one is a zero in in physics in</font>

299
00:10:23,160 --> 00:10:29,280
the physical<font color="#E5E5E5"> world and in electrical</font>

300
00:10:26,850 --> 00:10:31,440
characteristics that is in wireless

301
00:10:29,280 --> 00:10:32,970
instead<font color="#E5E5E5"> that refers to patterns of</font>

302
00:10:31,440 --> 00:10:35,850
<font color="#CCCCCC">energy that are being sent over an RF</font>

303
00:10:32,970 --> 00:10:38,280
medium now our<font color="#E5E5E5"> F stands for radio</font>

304
00:10:35,850 --> 00:10:39,900
frequency<font color="#CCCCCC"> and it's the electrical</font>

305
00:10:38,280 --> 00:10:41,459
electromagnetic waves and energy that

306
00:10:39,900 --> 00:10:43,829
are<font color="#E5E5E5"> just around us kind of all the time</font>

307
00:10:41,460 --> 00:10:46,920
<font color="#CCCCCC">and</font><font color="#E5E5E5"> if you've</font><font color="#CCCCCC"> ever</font><font color="#E5E5E5"> been about Tom</font><font color="#CCCCCC"> Rhonda</font>

308
00:10:43,830 --> 00:10:47,280
who's the former<font color="#CCCCCC"> Guinea</font><font color="#E5E5E5"> radio Project</font>

309
00:10:46,920 --> 00:10:48,660
<font color="#CCCCCC">Lead</font>

310
00:10:47,280 --> 00:10:51,120
you know he'll he's been known to

311
00:10:48,660 --> 00:10:52,650
proclaim that RF is one of the four

312
00:10:51,120 --> 00:10:54,270
<font color="#CCCCCC">fundamental forces</font><font color="#E5E5E5"> of the universe and</font>

313
00:10:52,650 --> 00:10:59,310
as radio engineers we get to we get<font color="#E5E5E5"> to</font>

314
00:10:54,270 --> 00:11:00,630
play<font color="#CCCCCC"> with it so</font><font color="#E5E5E5"> it's cool stuff</font><font color="#CCCCCC"> we can</font>

315
00:10:59,310 --> 00:11:02,459
<font color="#E5E5E5">visualize what's</font><font color="#CCCCCC"> happening in the RF</font>

316
00:11:00,630 --> 00:11:04,460
domain by putting together a picture

317
00:11:02,460 --> 00:11:07,230
<font color="#E5E5E5">like this which</font><font color="#CCCCCC"> is</font><font color="#E5E5E5"> called a spectrogram</font>

318
00:11:04,460 --> 00:11:09,330
<font color="#E5E5E5">or a waterfall</font><font color="#CCCCCC"> plot basically we have</font>

319
00:11:07,230 --> 00:11:11,910
time<font color="#E5E5E5"> in the</font><font color="#CCCCCC"> y-axis frequency in the</font>

320
00:11:09,330 --> 00:11:14,730
x-axis<font color="#E5E5E5"> and then power in the z-axis the</font>

321
00:11:11,910 --> 00:11:17,040
intensity<font color="#E5E5E5"> so it's a way of</font><font color="#CCCCCC"> visualizing</font>

322
00:11:14,730 --> 00:11:19,800
<font color="#E5E5E5">what frequencies are present</font><font color="#CCCCCC"> in the in</font>

323
00:11:17,040 --> 00:11:20,969
the RF environment at any given moment

324
00:11:19,800 --> 00:11:22,319
and we're going to<font color="#E5E5E5"> look at a few</font>

325
00:11:20,970 --> 00:11:24,029
pictures<font color="#E5E5E5"> like that so just</font><font color="#CCCCCC"> get familiar</font>

326
00:11:22,319 --> 00:11:27,238
with<font color="#CCCCCC"> it because</font><font color="#E5E5E5"> we'll keep coming back</font>

327
00:11:24,029 --> 00:11:29,160
to<font color="#E5E5E5"> them so you can manipulate</font><font color="#CCCCCC"> RF by</font>

328
00:11:27,239 --> 00:11:30,480
using a<font color="#CCCCCC"> device called</font><font color="#E5E5E5"> radio and as Mark</font>

329
00:11:29,160 --> 00:11:32,189
<font color="#E5E5E5">mentioned radios can either be</font><font color="#CCCCCC"> Hardware</font>

330
00:11:30,480 --> 00:11:34,829
defined as the court case with the

331
00:11:32,189 --> 00:11:36,779
<font color="#CCCCCC">Delora</font><font color="#E5E5E5"> radio shown on top there or they</font>

332
00:11:34,829 --> 00:11:37,949
can be<font color="#CCCCCC"> software-defined and with the</font>

333
00:11:36,779 --> 00:11:39,629
<font color="#E5E5E5">hardware defined radio again the</font>

334
00:11:37,949 --> 00:11:41,549
features are baked into<font color="#E5E5E5"> in the silicon</font>

335
00:11:39,629 --> 00:11:43,559
and are not flexible<font color="#E5E5E5"> with</font><font color="#CCCCCC"> hardware</font>

336
00:11:41,549 --> 00:11:46,019
defined radio<font color="#E5E5E5"> it's really just a way</font><font color="#CCCCCC"> of</font>

337
00:11:43,559 --> 00:11:47,610
grabbing<font color="#E5E5E5"> raw radio information</font><font color="#CCCCCC"> and</font>

338
00:11:46,019 --> 00:11:49,170
<font color="#E5E5E5">passing it off to some sort of</font>

339
00:11:47,610 --> 00:11:51,899
reprogrammable logic whether it's

340
00:11:49,170 --> 00:11:56,429
<font color="#E5E5E5">software on a host or</font><font color="#CCCCCC"> you know</font>

341
00:11:51,899 --> 00:11:58,230
configuration of an FPGA<font color="#CCCCCC"> so if you put</font>

342
00:11:56,429 --> 00:12:01,110
these<font color="#CCCCCC"> elements together coherently</font><font color="#E5E5E5"> you</font>

343
00:11:58,230 --> 00:12:03,509
can come up<font color="#CCCCCC"> with with a</font><font color="#E5E5E5"> Phi and the core</font>

344
00:12:01,110 --> 00:12:05,730
component<font color="#CCCCCC"> of the of the Phi is this</font>

345
00:12:03,509 --> 00:12:07,709
algorithm called<font color="#E5E5E5"> the modulation</font><font color="#CCCCCC"> the</font>

346
00:12:05,730 --> 00:12:10,170
modulation<font color="#E5E5E5"> is simply just a function</font>

347
00:12:07,709 --> 00:12:13,248
that map's<font color="#E5E5E5"> how your digital values your</font>

348
00:12:10,170 --> 00:12:17,488
ones and<font color="#E5E5E5"> zeros get mapped into RF energy</font>

349
00:12:13,249 --> 00:12:19,799
so there are three primary properties

350
00:12:17,489 --> 00:12:22,049
that can be<font color="#E5E5E5"> modulated you can modulate</font>

351
00:12:19,799 --> 00:12:23,899
<font color="#CCCCCC">the amplitude of the signal of a signal</font>

352
00:12:22,049 --> 00:12:27,179
<font color="#E5E5E5">the frequency of a signal in the phase</font>

353
00:12:23,899 --> 00:12:29,189
<font color="#CCCCCC">amplitude is simply the</font><font color="#E5E5E5"> power</font><font color="#CCCCCC"> frequency</font>

354
00:12:27,179 --> 00:12:30,929
is the rate at which the periodic signal

355
00:12:29,189 --> 00:12:37,049
<font color="#E5E5E5">is oscillating because all signals are</font>

356
00:12:30,929 --> 00:12:39,299
periodic and<font color="#E5E5E5"> phase refers to the offset</font>

357
00:12:37,049 --> 00:12:41,999
within within<font color="#E5E5E5"> a period at</font><font color="#CCCCCC"> which the</font>

358
00:12:39,299 --> 00:12:43,379
<font color="#CCCCCC">signal starts</font><font color="#E5E5E5"> and of course you can put</font>

359
00:12:41,999 --> 00:12:45,660
together some<font color="#E5E5E5"> combination of these to</font>

360
00:12:43,379 --> 00:12:47,730
<font color="#E5E5E5">make more complex Phi's they have some</font>

361
00:12:45,660 --> 00:12:49,199
advantages<font color="#CCCCCC"> but really it</font><font color="#E5E5E5"> all boils down</font>

362
00:12:47,730 --> 00:12:51,360
to these<font color="#CCCCCC"> three</font><font color="#E5E5E5"> elements</font><font color="#CCCCCC"> kind</font><font color="#E5E5E5"> of working</font>

363
00:12:49,199 --> 00:12:53,040
in concert with<font color="#E5E5E5"> one</font><font color="#CCCCCC"> another now</font>

364
00:12:51,360 --> 00:12:54,540
modulator<font color="#CCCCCC"> x' can modulate</font><font color="#E5E5E5"> either analog</font>

365
00:12:53,040 --> 00:12:55,559
or<font color="#E5E5E5"> digital information</font><font color="#CCCCCC"> but</font><font color="#E5E5E5"> for the</font>

366
00:12:54,540 --> 00:12:57,118
duration<font color="#E5E5E5"> of the talk we're going to be</font>

367
00:12:55,559 --> 00:12:59,279
talking<font color="#CCCCCC"> about</font><font color="#E5E5E5"> digital modulation modes</font>

368
00:12:57,119 --> 00:13:00,809
and what comes next is the most

369
00:12:59,279 --> 00:13:02,040
important concept with all this if<font color="#E5E5E5"> you</font>

370
00:13:00,809 --> 00:13:04,049
take anything away from<font color="#E5E5E5"> this section</font>

371
00:13:02,040 --> 00:13:06,480
<font color="#CCCCCC">just just get</font><font color="#E5E5E5"> familiar with this and</font>

372
00:13:04,049 --> 00:13:09,569
that's this concept<font color="#E5E5E5"> of the symbol and</font>

373
00:13:06,480 --> 00:13:11,910
<font color="#E5E5E5">the symbol is essentially it discretely</font>

374
00:13:09,569 --> 00:13:14,519
sampled<font color="#E5E5E5"> RF state that represents some</font>

375
00:13:11,910 --> 00:13:16,439
quantity of information<font color="#CCCCCC"> right so when</font>

376
00:13:14,519 --> 00:13:18,929
you<font color="#E5E5E5"> hear the term symbol just think it's</font>

377
00:13:16,439 --> 00:13:21,029
it's<font color="#E5E5E5"> something happening in RF that</font>

378
00:13:18,929 --> 00:13:23,569
means either<font color="#CCCCCC"> one or zero</font><font color="#E5E5E5"> and we can</font>

379
00:13:21,029 --> 00:13:26,819
illustrate that<font color="#E5E5E5"> by looking at two common</font>

380
00:13:23,569 --> 00:13:29,040
<font color="#E5E5E5">IOT Phi's will look at</font><font color="#CCCCCC"> frequency shift</font>

381
00:13:26,819 --> 00:13:31,049
keying<font color="#E5E5E5"> and amplitude shift keying so</font><font color="#CCCCCC"> FSK</font>

382
00:13:29,040 --> 00:13:33,420
is on top essentially what's happening

383
00:13:31,049 --> 00:13:36,870
<font color="#E5E5E5">is the RF is alternating between two</font>

384
00:13:33,420 --> 00:13:39,660
<font color="#E5E5E5">sequences to signify digital values</font><font color="#CCCCCC"> now</font>

385
00:13:36,870 --> 00:13:42,090
to contrast<font color="#E5E5E5"> that with a SK amplitude</font>

386
00:13:39,660 --> 00:13:44,610
shift keying instead it's changes in RF

387
00:13:42,090 --> 00:13:47,550
power<font color="#E5E5E5"> that signifies what's the one</font><font color="#CCCCCC"> and</font>

388
00:13:44,610 --> 00:13:49,800
what's a zero so<font color="#E5E5E5"> up top we have two</font>

389
00:13:47,550 --> 00:13:51,930
frequencies<font color="#E5E5E5"> and in this case a symbol is</font>

390
00:13:49,800 --> 00:13:54,209
the signal dwelling on one of those

391
00:13:51,930 --> 00:13:57,180
<font color="#E5E5E5">frequencies for a</font><font color="#CCCCCC"> discrete sampling</font>

392
00:13:54,210 --> 00:13:58,740
period on the bottom with amplitude

393
00:13:57,180 --> 00:14:01,770
shift keying<font color="#CCCCCC"> we only have one frequency</font>

394
00:13:58,740 --> 00:14:03,720
<font color="#CCCCCC">and instead</font><font color="#E5E5E5"> the symbol is denoted by</font>

395
00:14:01,770 --> 00:14:05,490
whether or<font color="#CCCCCC"> not</font><font color="#E5E5E5"> the signal is on or</font><font color="#CCCCCC"> off</font>

396
00:14:03,720 --> 00:14:08,340
so you're measuring amplitude rather

397
00:14:05,490 --> 00:14:10,830
than frequency so in both<font color="#E5E5E5"> cases</font><font color="#CCCCCC"> the</font>

398
00:14:08,340 --> 00:14:12,650
symbol is simply in RF<font color="#E5E5E5"> state whether</font>

399
00:14:10,830 --> 00:14:16,020
it's denoted<font color="#E5E5E5"> by frequency or amplitude</font>

400
00:14:12,650 --> 00:14:19,410
<font color="#CCCCCC">at</font><font color="#E5E5E5"> a</font><font color="#CCCCCC"> discretely sampled</font><font color="#E5E5E5"> interval that</font>

401
00:14:16,020 --> 00:14:20,430
denotes<font color="#E5E5E5"> a</font><font color="#CCCCCC"> 1 or 0 a</font><font color="#E5E5E5"> digital value will</font>

402
00:14:19,410 --> 00:14:21,839
keep coming<font color="#E5E5E5"> back to this</font><font color="#CCCCCC"> and</font>

403
00:14:20,430 --> 00:14:23,280
illustrating this<font color="#E5E5E5"> as we go through</font><font color="#CCCCCC"> but</font>

404
00:14:21,840 --> 00:14:27,090
<font color="#CCCCCC">this is really</font><font color="#E5E5E5"> the most important</font>

405
00:14:23,280 --> 00:14:28,290
concept to<font color="#E5E5E5"> take away from this now as I</font>

406
00:14:27,090 --> 00:14:30,600
mentioned IOT<font color="#CCCCCC"> 5s can get more</font>

407
00:14:28,290 --> 00:14:32,250
complicated<font color="#E5E5E5"> you have the notion of</font>

408
00:14:30,600 --> 00:14:34,320
spread<font color="#CCCCCC"> spectrum where data gets encoded</font>

409
00:14:32,250 --> 00:14:35,970
<font color="#E5E5E5">at a higher rate which causes it to</font>

410
00:14:34,320 --> 00:14:37,440
occupy more spectrum<font color="#E5E5E5"> but also makes the</font>

411
00:14:35,970 --> 00:14:40,410
signal much more resilient<font color="#E5E5E5"> to RF noise</font>

412
00:14:37,440 --> 00:14:45,060
and interference<font color="#CCCCCC"> so two</font><font color="#E5E5E5"> examples of this</font>

413
00:14:40,410 --> 00:14:47,100
are 802<font color="#CCCCCC"> 54</font><font color="#E5E5E5"> there's a 802 54 thick packet</font>

414
00:14:45,060 --> 00:14:48,959
on top there which uses a modulation

415
00:14:47,100 --> 00:14:52,290
called<font color="#CCCCCC"> direct</font><font color="#E5E5E5"> direct sequence spread</font>

416
00:14:48,960 --> 00:14:56,310
spectrum<font color="#E5E5E5"> and then on the bottom we have</font>

417
00:14:52,290 --> 00:14:59,010
<font color="#E5E5E5">a picture of</font><font color="#CCCCCC"> Ellora capture a lower</font>

418
00:14:56,310 --> 00:15:01,250
packet and<font color="#E5E5E5"> Laura uses a spread</font><font color="#CCCCCC"> spectrum</font>

419
00:14:59,010 --> 00:15:03,810
modulation called<font color="#E5E5E5"> chirp spread spectrum</font>

420
00:15:01,250 --> 00:15:05,670
now radios can have two functions<font color="#CCCCCC"> they</font>

421
00:15:03,810 --> 00:15:07,410
can either transmit or receive<font color="#CCCCCC"> but if a</font>

422
00:15:05,670 --> 00:15:10,319
radio can do both<font color="#E5E5E5"> it's called a</font>

423
00:15:07,410 --> 00:15:12,420
<font color="#E5E5E5">transceiver and when it comes to</font>

424
00:15:10,320 --> 00:15:13,890
<font color="#CCCCCC">reverse-engineering</font><font color="#E5E5E5"> radios and wireless</font>

425
00:15:12,420 --> 00:15:16,260
protocols<font color="#CCCCCC"> our main objective is to</font>

426
00:15:13,890 --> 00:15:18,330
figure<font color="#CCCCCC"> out how the modulation works</font><font color="#E5E5E5"> that</font>

427
00:15:16,260 --> 00:15:22,140
is really how the data<font color="#E5E5E5"> gets mapped into</font>

428
00:15:18,330 --> 00:15:23,460
<font color="#E5E5E5">symbols so reverse engineering comes</font>

429
00:15:22,140 --> 00:15:26,730
<font color="#E5E5E5">down to doing the inverse of</font><font color="#CCCCCC"> that</font>

430
00:15:23,460 --> 00:15:28,560
process building receivers so coming<font color="#CCCCCC"> up</font>

431
00:15:26,730 --> 00:15:30,000
<font color="#CCCCCC">with the opposite of that coming up</font><font color="#E5E5E5"> with</font>

432
00:15:28,560 --> 00:15:34,859
<font color="#CCCCCC">the</font><font color="#E5E5E5"> demodulator</font><font color="#CCCCCC"> the inverse of</font><font color="#E5E5E5"> that</font>

433
00:15:30,000 --> 00:15:36,870
modulation operation so that<font color="#CCCCCC"> wraps up</font>

434
00:15:34,860 --> 00:15:40,290
<font color="#E5E5E5">the background of who feels confident</font>

435
00:15:36,870 --> 00:15:42,660
who's an expert<font color="#CCCCCC"> okay</font><font color="#E5E5E5"> notice I'm not</font>

436
00:15:40,290 --> 00:15:44,459
raising<font color="#CCCCCC"> my</font><font color="#E5E5E5"> hand</font><font color="#CCCCCC"> this stuff is really</font>

437
00:15:42,660 --> 00:15:46,530
hard we went through it at just just a

438
00:15:44,460 --> 00:15:47,010
<font color="#E5E5E5">high level covered some core concepts</font>

439
00:15:46,530 --> 00:15:48,720
and we're going to

440
00:15:47,010 --> 00:15:50,520
illustrate them<font color="#E5E5E5"> in just a minute by</font>

441
00:15:48,720 --> 00:15:53,880
walking through three examples<font color="#CCCCCC"> of some</font>

442
00:15:50,520 --> 00:15:55,020
protocols that that we've looked<font color="#E5E5E5"> at but</font>

443
00:15:53,880 --> 00:15:56,310
in order to frame that we're<font color="#E5E5E5"> going to</font>

444
00:15:55,020 --> 00:15:58,890
introduce this<font color="#E5E5E5"> Wireless reverse</font>

445
00:15:56,310 --> 00:16:00,719
engineering<font color="#E5E5E5"> methodology that we believe</font>

446
00:15:58,890 --> 00:16:01,800
<font color="#E5E5E5">can provide structure</font><font color="#CCCCCC"> and process to</font>

447
00:16:00,720 --> 00:16:05,160
reverse engineering these different

448
00:16:01,800 --> 00:16:06,390
wireless signals so before we get<font color="#E5E5E5"> into</font>

449
00:16:05,160 --> 00:16:10,319
<font color="#CCCCCC">it I just want to put this picture</font><font color="#E5E5E5"> up</font>

450
00:16:06,390 --> 00:16:12,270
<font color="#E5E5E5">and engage the</font><font color="#CCCCCC"> audience for a moment so</font>

451
00:16:10,320 --> 00:16:13,890
this<font color="#E5E5E5"> is a spectrogram it's a capture of</font>

452
00:16:12,270 --> 00:16:14,819
<font color="#E5E5E5">a signal and I'm just going to throw it</font>

453
00:16:13,890 --> 00:16:17,430
out to you<font color="#CCCCCC"> and ask you to</font><font color="#E5E5E5"> make some</font>

454
00:16:14,820 --> 00:16:20,070
<font color="#CCCCCC">observations about what you see so can I</font>

455
00:16:17,430 --> 00:16:24,870
ask<font color="#E5E5E5"> for a</font><font color="#CCCCCC"> volunteer to</font><font color="#E5E5E5"> perhaps make an</font>

456
00:16:20,070 --> 00:16:28,680
<font color="#CCCCCC">observation about the signal yep</font><font color="#E5E5E5"> so it</font>

457
00:16:24,870 --> 00:16:30,150
is an FSA<font color="#E5E5E5"> in FSK signal here and we know</font>

458
00:16:28,680 --> 00:16:31,589
<font color="#E5E5E5">that</font><font color="#CCCCCC"> because there are too severe</font>

459
00:16:30,150 --> 00:16:33,630
<font color="#CCCCCC">there's more</font><font color="#E5E5E5"> than one frequency</font>

460
00:16:31,590 --> 00:16:38,220
represented here<font color="#E5E5E5"> that's correct</font>

461
00:16:33,630 --> 00:16:40,820
anything<font color="#E5E5E5"> else it is</font><font color="#CCCCCC"> two</font><font color="#E5E5E5"> FS k there are</font>

462
00:16:38,220 --> 00:16:43,950
<font color="#E5E5E5">two frequencies represented how about</font>

463
00:16:40,820 --> 00:16:45,990
how<font color="#E5E5E5"> about the rate of the rate of the</font>

464
00:16:43,950 --> 00:16:49,110
state change does it look like it's<font color="#E5E5E5"> it's</font>

465
00:16:45,990 --> 00:16:57,270
a<font color="#E5E5E5"> fairly consistent</font><font color="#CCCCCC"> you know</font><font color="#E5E5E5"> period or</font>

466
00:16:49,110 --> 00:17:00,720
does it<font color="#CCCCCC"> look somewhat arbitrary so I'll</font>

467
00:16:57,270 --> 00:17:03,270
actually argue the<font color="#E5E5E5"> opposite so you</font><font color="#CCCCCC"> know</font>

468
00:17:00,720 --> 00:17:05,339
the<font color="#E5E5E5"> the signal does change somewhat but</font>

469
00:17:03,270 --> 00:17:09,660
the rate<font color="#CCCCCC"> at which it changes you know</font>

470
00:17:05,339 --> 00:17:12,990
can<font color="#CCCCCC"> be divided up into nicely</font><font color="#E5E5E5"> neatly</font>

471
00:17:09,660 --> 00:17:17,820
consistent<font color="#E5E5E5"> sampling periods does that</font>

472
00:17:12,990 --> 00:17:19,500
make sense<font color="#CCCCCC"> okay and how about</font><font color="#E5E5E5"> can</font><font color="#CCCCCC"> we</font>

473
00:17:17,819 --> 00:17:21,780
segment this up at<font color="#E5E5E5"> all does does</font>

474
00:17:19,500 --> 00:17:30,390
anything change<font color="#E5E5E5"> in time as</font><font color="#CCCCCC"> the signal</font>

475
00:17:21,780 --> 00:17:33,120
goes on so so<font color="#E5E5E5"> yes in the front row</font>

476
00:17:30,390 --> 00:17:36,320
<font color="#CCCCCC">basically we</font><font color="#E5E5E5"> can see up top</font><font color="#CCCCCC"> the symbol</font>

477
00:17:33,120 --> 00:17:38,520
<font color="#CCCCCC">period is a little bit longer</font><font color="#E5E5E5"> and it</font>

478
00:17:36,320 --> 00:17:41,010
essentially<font color="#CCCCCC"> we have this consistent</font>

479
00:17:38,520 --> 00:17:42,930
oscillating back and forth<font color="#CCCCCC"> where it goes</font>

480
00:17:41,010 --> 00:17:44,190
<font color="#CCCCCC">from the lower frequency the upper</font>

481
00:17:42,930 --> 00:17:48,030
frequency to the lower<font color="#CCCCCC"> frequency to the</font>

482
00:17:44,190 --> 00:17:49,860
upper frequency and so on<font color="#CCCCCC"> always</font>

483
00:17:48,030 --> 00:17:51,629
following<font color="#E5E5E5"> the same pattern right but</font>

484
00:17:49,860 --> 00:17:53,760
then about<font color="#CCCCCC"> halfway</font><font color="#E5E5E5"> down we can see the</font>

485
00:17:51,630 --> 00:17:55,430
rate increases<font color="#CCCCCC"> a</font><font color="#E5E5E5"> little bit and then we</font>

486
00:17:53,760 --> 00:17:57,390
<font color="#E5E5E5">get some randomness in there right</font><font color="#CCCCCC"> so</font>

487
00:17:55,430 --> 00:17:59,880
<font color="#CCCCCC">what we can see is that</font><font color="#E5E5E5"> there are really</font>

488
00:17:57,390 --> 00:18:03,030
two segments for this<font color="#E5E5E5"> to the signal</font>

489
00:17:59,880 --> 00:18:05,070
we have some<font color="#E5E5E5"> sort of a preamble at the</font>

490
00:18:03,030 --> 00:18:07,080
beginning<font color="#CCCCCC"> just some periodic pattern and</font>

491
00:18:05,070 --> 00:18:10,710
then<font color="#CCCCCC"> about halfway through something</font>

492
00:18:07,080 --> 00:18:12,030
changes in<font color="#CCCCCC"> the in the signal</font><font color="#E5E5E5"> right</font><font color="#CCCCCC"> so</font>

493
00:18:10,710 --> 00:18:13,289
what's<font color="#E5E5E5"> actually happening is up top we</font>

494
00:18:12,030 --> 00:18:14,549
have the preamble<font color="#E5E5E5"> and then once we get</font>

495
00:18:13,289 --> 00:18:17,460
about<font color="#E5E5E5"> halfway down we get into the</font>

496
00:18:14,549 --> 00:18:20,309
modulated data<font color="#CCCCCC"> and we'll talk</font><font color="#E5E5E5"> more about</font>

497
00:18:17,460 --> 00:18:22,080
this in a<font color="#E5E5E5"> moment but you know we kind of</font>

498
00:18:20,309 --> 00:18:23,340
<font color="#E5E5E5">just like talk through the all the core</font>

499
00:18:22,080 --> 00:18:25,199
concepts that we're<font color="#E5E5E5"> going to need to</font>

500
00:18:23,340 --> 00:18:27,899
reverse engineer<font color="#E5E5E5"> at these systems</font><font color="#CCCCCC"> right</font>

501
00:18:25,200 --> 00:18:29,220
so let's formalize this and start<font color="#E5E5E5"> to put</font>

502
00:18:27,900 --> 00:18:32,070
it<font color="#E5E5E5"> into a process that we can apply</font><font color="#CCCCCC"> to</font>

503
00:18:29,220 --> 00:18:33,360
these<font color="#E5E5E5"> signals so step one to reverse</font>

504
00:18:32,070 --> 00:18:36,840
engineering a wireless signal is to

505
00:18:33,360 --> 00:18:39,178
characterize<font color="#CCCCCC"> this channel</font><font color="#E5E5E5"> and that's</font>

506
00:18:36,840 --> 00:18:40,559
basically find out where within<font color="#E5E5E5"> where</font>

507
00:18:39,179 --> 00:18:42,780
<font color="#E5E5E5">within the spectrum the signal the</font>

508
00:18:40,559 --> 00:18:44,220
<font color="#E5E5E5">signal lives so there</font><font color="#CCCCCC"> are really</font><font color="#E5E5E5"> three</font>

509
00:18:42,780 --> 00:18:46,500
things<font color="#E5E5E5"> we're looking for</font><font color="#CCCCCC"> with this we're</font>

510
00:18:44,220 --> 00:18:48,480
looking<font color="#E5E5E5"> for</font><font color="#CCCCCC"> what is its center frequency</font>

511
00:18:46,500 --> 00:18:50,429
<font color="#E5E5E5">what's where</font><font color="#CCCCCC"> does</font><font color="#E5E5E5"> what is the middle</font><font color="#CCCCCC"> of</font>

512
00:18:48,480 --> 00:18:52,890
<font color="#E5E5E5">the channel we're looking to establish</font>

513
00:18:50,429 --> 00:18:54,630
<font color="#E5E5E5">how wide the channel is you know how</font>

514
00:18:52,890 --> 00:18:57,960
much<font color="#E5E5E5"> spectrum does the signal Traverse</font>

515
00:18:54,630 --> 00:18:59,580
<font color="#CCCCCC">and finally</font><font color="#E5E5E5"> we're</font><font color="#CCCCCC"> looking to establish</font>

516
00:18:57,960 --> 00:19:01,500
whether or<font color="#E5E5E5"> not it's a static channel or</font>

517
00:18:59,580 --> 00:19:04,740
whether<font color="#E5E5E5"> it's it there are multiple</font>

518
00:19:01,500 --> 00:19:06,419
channels and<font color="#E5E5E5"> the signal hops</font><font color="#CCCCCC"> around so</font>

519
00:19:04,740 --> 00:19:08,809
those are those are<font color="#CCCCCC"> really the three</font>

520
00:19:06,419 --> 00:19:11,220
things<font color="#E5E5E5"> that come to defining the channel</font>

521
00:19:08,809 --> 00:19:13,260
<font color="#E5E5E5">step two</font><font color="#CCCCCC"> is to identify the modulation</font>

522
00:19:11,220 --> 00:19:15,210
<font color="#E5E5E5">and again the modulation is the</font>

523
00:19:13,260 --> 00:19:17,039
algorithm<font color="#CCCCCC"> that defines how your data</font>

524
00:19:15,210 --> 00:19:19,409
<font color="#E5E5E5">your digital ones and</font><font color="#CCCCCC"> zeros get mapped</font>

525
00:19:17,039 --> 00:19:21,179
<font color="#E5E5E5">into RF</font><font color="#CCCCCC"> energy and this</font><font color="#E5E5E5"> is by far the</font>

526
00:19:19,409 --> 00:19:23,549
<font color="#E5E5E5">scariest and most intimidating</font><font color="#CCCCCC"> part of</font>

527
00:19:21,179 --> 00:19:24,900
all<font color="#CCCCCC"> of</font><font color="#E5E5E5"> this right until</font><font color="#CCCCCC"> you realize that</font>

528
00:19:23,549 --> 00:19:26,580
when it comes<font color="#E5E5E5"> to these low complexity</font>

529
00:19:24,900 --> 00:19:28,260
<font color="#E5E5E5">IOT protocols</font><font color="#CCCCCC"> you're</font><font color="#E5E5E5"> really just gonna</font>

530
00:19:26,580 --> 00:19:29,730
<font color="#CCCCCC">be seeing variations on a theme</font><font color="#E5E5E5"> over</font><font color="#CCCCCC"> and</font>

531
00:19:28,260 --> 00:19:31,530
<font color="#E5E5E5">over again they're really just</font><font color="#CCCCCC"> a couple</font>

532
00:19:29,730 --> 00:19:33,990
modulations<font color="#E5E5E5"> that get</font><font color="#CCCCCC"> applied in</font>

533
00:19:31,530 --> 00:19:38,610
different<font color="#E5E5E5"> ways that connect like 90% of</font>

534
00:19:33,990 --> 00:19:40,380
<font color="#E5E5E5">IOT devices and there are two ways</font><font color="#CCCCCC"> you</font>

535
00:19:38,610 --> 00:19:42,178
can identify it<font color="#CCCCCC"> if you do this</font><font color="#E5E5E5"> enough</font>

536
00:19:40,380 --> 00:19:43,559
<font color="#CCCCCC">you</font><font color="#E5E5E5"> will develop intuition</font><font color="#CCCCCC"> so</font><font color="#E5E5E5"> that</font>

537
00:19:42,179 --> 00:19:45,539
<font color="#E5E5E5">looking at a spectrogram you can you can</font>

538
00:19:43,559 --> 00:19:47,250
tell what<font color="#E5E5E5"> it is</font><font color="#CCCCCC"> but until that happens</font>

539
00:19:45,539 --> 00:19:48,960
we're going<font color="#E5E5E5"> to be able to lean</font><font color="#CCCCCC"> very</font>

540
00:19:47,250 --> 00:19:51,120
heavily on open source<font color="#E5E5E5"> intelligence and</font>

541
00:19:48,960 --> 00:19:54,030
open source documentation<font color="#E5E5E5"> to just do</font>

542
00:19:51,120 --> 00:19:56,100
<font color="#E5E5E5">this part for</font><font color="#CCCCCC"> us so we can you know</font>

543
00:19:54,030 --> 00:19:57,960
leverage public information to not have

544
00:19:56,100 --> 00:19:59,850
to worry<font color="#E5E5E5"> about blindly identifying</font>

545
00:19:57,960 --> 00:20:02,330
<font color="#E5E5E5">modulations based on a spectrogram and</font>

546
00:19:59,850 --> 00:20:04,408
we'll go<font color="#E5E5E5"> through this</font><font color="#CCCCCC"> in a moment</font>

547
00:20:02,330 --> 00:20:07,918
step<font color="#E5E5E5"> three</font><font color="#CCCCCC"> is to determine the symbol</font>

548
00:20:04,409 --> 00:20:09,240
rate<font color="#E5E5E5"> and we can find this through and</font>

549
00:20:07,919 --> 00:20:11,429
again<font color="#E5E5E5"> the symbol rate is how often</font><font color="#CCCCCC"> the</font>

550
00:20:09,240 --> 00:20:12,690
symbol state changes to represent to

551
00:20:11,429 --> 00:20:15,870
represent data<font color="#E5E5E5"> in the</font>

552
00:20:12,690 --> 00:20:17,190
<font color="#E5E5E5">by and we can identify this through open</font>

553
00:20:15,870 --> 00:20:19,169
source<font color="#CCCCCC"> intelligence and documentation</font>

554
00:20:17,190 --> 00:20:20,520
<font color="#E5E5E5">but for where it's not present there are</font>

555
00:20:19,170 --> 00:20:21,660
<font color="#E5E5E5">a</font><font color="#CCCCCC"> number of open-source tools that we</font>

556
00:20:20,520 --> 00:20:25,650
can<font color="#CCCCCC"> use to measure</font><font color="#E5E5E5"> the symbol rate</font>

557
00:20:21,660 --> 00:20:27,330
empirically<font color="#CCCCCC"> step</font><font color="#E5E5E5"> four is to synchronize</font>

558
00:20:25,650 --> 00:20:28,500
against our packet<font color="#E5E5E5"> so we're going to</font>

559
00:20:27,330 --> 00:20:31,080
write some<font color="#CCCCCC"> software that</font><font color="#E5E5E5"> will</font>

560
00:20:28,500 --> 00:20:33,000
<font color="#E5E5E5">essentially identify the preamble in the</font>

561
00:20:31,080 --> 00:20:34,080
start of frame<font color="#CCCCCC"> delimiter and these are</font>

562
00:20:33,000 --> 00:20:36,780
the two<font color="#CCCCCC"> elements that</font><font color="#E5E5E5"> we just talked</font>

563
00:20:34,080 --> 00:20:39,810
about with<font color="#E5E5E5"> that interactive example</font><font color="#CCCCCC"> that</font>

564
00:20:36,780 --> 00:20:41,670
denote<font color="#E5E5E5"> first of all the president just</font>

565
00:20:39,810 --> 00:20:43,260
about every digital communication scheme

566
00:20:41,670 --> 00:20:45,390
<font color="#CCCCCC">wireless digital</font><font color="#E5E5E5"> communication scheme</font>

567
00:20:43,260 --> 00:20:47,820
<font color="#CCCCCC">it's out there</font><font color="#E5E5E5"> essentially</font><font color="#CCCCCC"> the preamble</font>

568
00:20:45,390 --> 00:20:50,130
is a pattern<font color="#E5E5E5"> the transmitter sends</font><font color="#CCCCCC"> out</font>

569
00:20:47,820 --> 00:20:52,320
to tell the receiver<font color="#E5E5E5"> that data is soon</font>

570
00:20:50,130 --> 00:20:54,120
to<font color="#E5E5E5"> follow it also helps with clock</font>

571
00:20:52,320 --> 00:20:56,010
recovery<font color="#CCCCCC"> well</font><font color="#E5E5E5"> we</font><font color="#CCCCCC"> will talk about</font><font color="#E5E5E5"> that</font>

572
00:20:54,120 --> 00:20:58,260
briefly later<font color="#E5E5E5"> but really the preamble</font>

573
00:20:56,010 --> 00:21:00,120
just says<font color="#E5E5E5"> I'm about to send a packet and</font>

574
00:20:58,260 --> 00:21:02,580
then immediately<font color="#CCCCCC"> following the preamble</font>

575
00:21:00,120 --> 00:21:04,620
is this<font color="#E5E5E5"> this synchronization</font><font color="#CCCCCC"> feature</font>

576
00:21:02,580 --> 00:21:06,179
called<font color="#E5E5E5"> the start of frame delimiter the</font>

577
00:21:04,620 --> 00:21:09,270
start of<font color="#E5E5E5"> frame delimiter is a static</font>

578
00:21:06,180 --> 00:21:11,220
value<font color="#E5E5E5"> that is distinct from the preamble</font>

579
00:21:09,270 --> 00:21:12,840
<font color="#CCCCCC">that basically tells the receiver</font><font color="#E5E5E5"> that</font>

580
00:21:11,220 --> 00:21:14,820
the<font color="#E5E5E5"> preamble is over in what follows</font>

581
00:21:12,840 --> 00:21:16,679
<font color="#CCCCCC">immediately thereafter this data right</font>

582
00:21:14,820 --> 00:21:18,270
<font color="#E5E5E5">so again these are president essentially</font>

583
00:21:16,680 --> 00:21:19,440
<font color="#E5E5E5">every wireless communication scheme</font>

584
00:21:18,270 --> 00:21:20,910
<font color="#E5E5E5">where basically is going to write</font>

585
00:21:19,440 --> 00:21:22,050
software<font color="#E5E5E5"> to look for these</font><font color="#CCCCCC"> things to</font>

586
00:21:20,910 --> 00:21:23,850
synchronize our receiver to the

587
00:21:22,050 --> 00:21:27,570
transmitter and start framing the

588
00:21:23,850 --> 00:21:29,540
framing<font color="#E5E5E5"> that our</font><font color="#CCCCCC"> gate</font><font color="#E5E5E5"> out finally</font><font color="#CCCCCC"> Step</font>

589
00:21:27,570 --> 00:21:33,629
<font color="#CCCCCC">five</font><font color="#E5E5E5"> is</font><font color="#CCCCCC"> to extract the symbols and</font>

590
00:21:29,540 --> 00:21:37,399
that's 2d map the modulated single

591
00:21:33,630 --> 00:21:39,270
values back into digital<font color="#E5E5E5"> values</font><font color="#CCCCCC"> and</font>

592
00:21:37,400 --> 00:21:40,620
exactly what this<font color="#CCCCCC"> process looks like</font>

593
00:21:39,270 --> 00:21:41,910
depends on the modulation that<font color="#E5E5E5"> we're</font>

594
00:21:40,620 --> 00:21:45,239
using but we're<font color="#E5E5E5"> going to illustrate this</font>

595
00:21:41,910 --> 00:21:47,130
with some<font color="#CCCCCC"> examples in just a moment</font><font color="#E5E5E5"> so</font>

596
00:21:45,240 --> 00:21:47,940
here's our methodology<font color="#E5E5E5"> and to</font><font color="#CCCCCC"> illustrate</font>

597
00:21:47,130 --> 00:21:51,000
this we're going to<font color="#E5E5E5"> go through three</font>

598
00:21:47,940 --> 00:21:52,230
<font color="#E5E5E5">examples</font><font color="#CCCCCC"> but before</font><font color="#E5E5E5"> we do my colleague</font>

599
00:21:51,000 --> 00:21:54,540
<font color="#CCCCCC">Mark is going</font><font color="#E5E5E5"> to talk a little bit</font><font color="#CCCCCC"> more</font>

600
00:21:52,230 --> 00:21:56,160
about<font color="#E5E5E5"> open source intelligence and how</font>

601
00:21:54,540 --> 00:22:00,210
it can be leveraged<font color="#CCCCCC"> to make this process</font>

602
00:21:56,160 --> 00:22:01,980
<font color="#E5E5E5">quite a bit easier</font><font color="#CCCCCC"> so I'm a big</font><font color="#E5E5E5"> fan of</font>

603
00:22:00,210 --> 00:22:03,090
<font color="#E5E5E5">open source</font><font color="#CCCCCC"> intelligence</font><font color="#E5E5E5"> and especially</font>

604
00:22:01,980 --> 00:22:05,220
applying it to these kind of problems

605
00:22:03,090 --> 00:22:07,110
<font color="#CCCCCC">and the reason is that it enables us to</font>

606
00:22:05,220 --> 00:22:08,550
<font color="#E5E5E5">be lazy and offload the work to</font>

607
00:22:07,110 --> 00:22:11,040
<font color="#E5E5E5">documentation that we can publicly find</font>

608
00:22:08,550 --> 00:22:12,990
so if you're going<font color="#E5E5E5"> to sell a device with</font>

609
00:22:11,040 --> 00:22:14,460
the radio transmitter<font color="#E5E5E5"> in most</font><font color="#CCCCCC"> markets</font>

610
00:22:12,990 --> 00:22:16,890
that has to go<font color="#E5E5E5"> through some type</font><font color="#CCCCCC"> of</font>

611
00:22:14,460 --> 00:22:19,830
regulatory certification in<font color="#CCCCCC"> the US we</font>

612
00:22:16,890 --> 00:22:22,290
have<font color="#E5E5E5"> the</font><font color="#CCCCCC"> FCC</font><font color="#E5E5E5"> IC in Canada</font><font color="#CCCCCC"> C II here in</font>

613
00:22:19,830 --> 00:22:24,770
Europe<font color="#E5E5E5"> and each organization</font><font color="#CCCCCC"> has the</font>

614
00:22:22,290 --> 00:22:27,290
same<font color="#E5E5E5"> purpose of evaluating a device that</font>

615
00:22:24,770 --> 00:22:28,790
<font color="#CCCCCC">Herman</font><font color="#E5E5E5"> does it fit certain constraints</font>

616
00:22:27,290 --> 00:22:30,860
for that certain markets that<font color="#E5E5E5"> would be</font>

617
00:22:28,790 --> 00:22:32,659
what frequency does it operate on what

618
00:22:30,860 --> 00:22:34,820
is the transmit power<font color="#E5E5E5"> the</font><font color="#CCCCCC"> trammel</font>

619
00:22:32,660 --> 00:22:36,950
bandwidth does it hop around what<font color="#CCCCCC"> is the</font>

620
00:22:34,820 --> 00:22:39,169
<font color="#E5E5E5">duty cycle and</font><font color="#CCCCCC"> the purpose</font><font color="#E5E5E5"> is to again</font>

621
00:22:36,950 --> 00:22:40,940
<font color="#E5E5E5">meet these regulatory constraints with</font>

622
00:22:39,170 --> 00:22:42,740
<font color="#E5E5E5">FCC in</font><font color="#CCCCCC"> the United States it's quite</font>

623
00:22:40,940 --> 00:22:44,780
<font color="#E5E5E5">handy because it has a very verbose</font>

624
00:22:42,740 --> 00:22:46,580
amount of<font color="#CCCCCC"> information for</font><font color="#E5E5E5"> each device so</font>

625
00:22:44,780 --> 00:22:47,899
if you're selling<font color="#E5E5E5"> device in the</font><font color="#CCCCCC"> u.s. you</font>

626
00:22:46,580 --> 00:22:49,699
send it to a test lab the test lab

627
00:22:47,900 --> 00:22:51,410
operates the device and the test lab

628
00:22:49,700 --> 00:22:53,030
will put together<font color="#E5E5E5"> a test</font><font color="#CCCCCC"> report</font><font color="#E5E5E5"> with a</font>

629
00:22:51,410 --> 00:22:54,920
lot of<font color="#E5E5E5"> physical layer</font><font color="#CCCCCC"> information about</font>

630
00:22:53,030 --> 00:22:56,870
how the device operates<font color="#CCCCCC"> so if you're</font>

631
00:22:54,920 --> 00:22:58,820
looking<font color="#E5E5E5"> at</font><font color="#CCCCCC"> a</font><font color="#E5E5E5"> device which is sold in the</font>

632
00:22:56,870 --> 00:23:00,739
<font color="#E5E5E5">US market or sold in the</font><font color="#CCCCCC"> US plus other</font>

633
00:22:58,820 --> 00:23:02,929
markets you can<font color="#CCCCCC"> look up</font><font color="#E5E5E5"> the device on</font>

634
00:23:00,740 --> 00:23:04,940
<font color="#E5E5E5">the FCC website</font><font color="#CCCCCC"> hold on this test report</font>

635
00:23:02,930 --> 00:23:06,650
and that will tell you<font color="#E5E5E5"> oftentimes the</font>

636
00:23:04,940 --> 00:23:08,270
modulation and all the channel character

637
00:23:06,650 --> 00:23:10,580
<font color="#CCCCCC">it</font><font color="#E5E5E5"> characterization you need to know</font>

638
00:23:08,270 --> 00:23:12,290
<font color="#CCCCCC">about the device if it's not an</font><font color="#E5E5E5"> SCC</font>

639
00:23:10,580 --> 00:23:14,240
certified device<font color="#E5E5E5"> you can look for</font>

640
00:23:12,290 --> 00:23:15,830
<font color="#E5E5E5">technical documentation so often it's</font>

641
00:23:14,240 --> 00:23:17,720
easier for a manufacturer to<font color="#CCCCCC"> use an</font>

642
00:23:15,830 --> 00:23:19,699
off-the-shelf<font color="#E5E5E5"> transceiver than to roll</font>

643
00:23:17,720 --> 00:23:22,850
their own so<font color="#E5E5E5"> you might have transceivers</font>

644
00:23:19,700 --> 00:23:25,490
<font color="#CCCCCC">from you know</font><font color="#E5E5E5"> Nordic or</font><font color="#CCCCCC"> TI or Adi or CC</font>

645
00:23:22,850 --> 00:23:27,320
<font color="#E5E5E5">or you know one</font><font color="#CCCCCC"> of</font><font color="#E5E5E5"> these</font><font color="#CCCCCC"> RFIC</font><font color="#E5E5E5"> vendors so</font>

646
00:23:25,490 --> 00:23:28,730
you can either look<font color="#E5E5E5"> inside the device or</font>

647
00:23:27,320 --> 00:23:30,439
find internal<font color="#CCCCCC"> photos somewhere online</font>

648
00:23:28,730 --> 00:23:32,450
and look up<font color="#E5E5E5"> data sheets</font><font color="#CCCCCC"> for the</font>

649
00:23:30,440 --> 00:23:34,160
<font color="#CCCCCC">transceiver to the device</font><font color="#E5E5E5"> that will</font>

650
00:23:32,450 --> 00:23:35,060
<font color="#E5E5E5">often tell you all the physical</font><font color="#CCCCCC"> AR</font>

651
00:23:34,160 --> 00:23:36,470
characteristics

652
00:23:35,060 --> 00:23:37,760
sometimes you know packet formats<font color="#E5E5E5"> and</font>

653
00:23:36,470 --> 00:23:40,100
political information<font color="#E5E5E5"> and so forth</font>

654
00:23:37,760 --> 00:23:42,050
there's also patent filings are pretty

655
00:23:40,100 --> 00:23:43,939
<font color="#E5E5E5">useful</font><font color="#CCCCCC"> if you're interested</font><font color="#E5E5E5"> in more</font>

656
00:23:42,050 --> 00:23:46,520
<font color="#CCCCCC">information</font><font color="#E5E5E5"> on kind of</font><font color="#CCCCCC"> the granularity</font>

657
00:23:43,940 --> 00:23:48,650
<font color="#CCCCCC">of applying this OSINT</font><font color="#E5E5E5"> to our 4%</font><font color="#CCCCCC"> to</font>

658
00:23:46,520 --> 00:23:54,860
nearing<font color="#CCCCCC"> I gave a talk about</font><font color="#E5E5E5"> this here</font>

659
00:23:48,650 --> 00:23:56,270
last year<font color="#E5E5E5"> which</font><font color="#CCCCCC"> is up on YouTube</font><font color="#E5E5E5"> okay so</font>

660
00:23:54,860 --> 00:23:58,580
we're basically an insert<font color="#E5E5E5"> open source</font>

661
00:23:56,270 --> 00:24:00,110
<font color="#E5E5E5">intelligence research is step</font><font color="#CCCCCC"> 0</font><font color="#E5E5E5"> to this</font>

662
00:23:58,580 --> 00:24:02,629
RF reverse engineering<font color="#CCCCCC"> workflow</font><font color="#E5E5E5"> that</font>

663
00:24:00,110 --> 00:24:04,699
we're going<font color="#E5E5E5"> to follow the reason why is</font>

664
00:24:02,630 --> 00:24:05,960
because by<font color="#E5E5E5"> doing it first we're going to</font>

665
00:24:04,700 --> 00:24:08,120
show they're going<font color="#E5E5E5"> to be able</font><font color="#CCCCCC"> to</font><font color="#E5E5E5"> skip or</font>

666
00:24:05,960 --> 00:24:11,540
dress<font color="#E5E5E5"> me shorten the discovery process</font>

667
00:24:08,120 --> 00:24:14,929
for some of these later steps<font color="#CCCCCC"> alright so</font>

668
00:24:11,540 --> 00:24:17,300
now let's<font color="#E5E5E5"> get into some</font><font color="#CCCCCC"> examples first</font>

669
00:24:14,930 --> 00:24:20,210
<font color="#E5E5E5">we're going to look at this wireless</font>

670
00:24:17,300 --> 00:24:23,980
camera flash trigger<font color="#CCCCCC"> it's made</font><font color="#E5E5E5"> by a</font>

671
00:24:20,210 --> 00:24:27,140
Chinese manufacturer<font color="#E5E5E5"> named yongnuo</font><font color="#CCCCCC"> and</font>

672
00:24:23,980 --> 00:24:31,370
essentially this device fits into the

673
00:24:27,140 --> 00:24:33,530
<font color="#E5E5E5">hot shoe of</font><font color="#CCCCCC"> a DSLR</font><font color="#E5E5E5"> the translates the</font>

674
00:24:31,370 --> 00:24:35,870
signal<font color="#E5E5E5"> that would instead set off</font><font color="#CCCCCC"> a</font>

675
00:24:33,530 --> 00:24:38,629
camera<font color="#CCCCCC"> flash</font><font color="#E5E5E5"> into a wireless signal that</font>

676
00:24:35,870 --> 00:24:40,610
can<font color="#CCCCCC"> be</font><font color="#E5E5E5"> received by a wireless</font><font color="#CCCCCC"> enabled</font>

677
00:24:38,630 --> 00:24:41,870
and the<font color="#E5E5E5"> reason why you might want</font><font color="#CCCCCC"> this</font>

678
00:24:40,610 --> 00:24:43,699
is<font color="#E5E5E5"> if you're if you're</font><font color="#CCCCCC"> a professional</font>

679
00:24:41,870 --> 00:24:45,590
<font color="#CCCCCC">photographer and</font><font color="#E5E5E5"> you want to you know</font>

680
00:24:43,700 --> 00:24:46,760
get just the<font color="#CCCCCC"> right lighting you can set</font>

681
00:24:45,590 --> 00:24:49,070
<font color="#CCCCCC">up a</font><font color="#E5E5E5"> number of flashes around your</font>

682
00:24:46,760 --> 00:24:50,390
subject<font color="#CCCCCC"> and get more</font><font color="#E5E5E5"> control</font><font color="#CCCCCC"> you know</font>

683
00:24:49,070 --> 00:24:51,860
again we<font color="#CCCCCC"> don't</font><font color="#E5E5E5"> really care with the</font>

684
00:24:50,390 --> 00:24:54,380
<font color="#E5E5E5">devices in this case it's just an</font>

685
00:24:51,860 --> 00:24:55,550
<font color="#E5E5E5">example of the</font><font color="#CCCCCC"> sort of thing that</font><font color="#E5E5E5"> you</font>

686
00:24:54,380 --> 00:24:56,929
<font color="#CCCCCC">might find in one of these</font><font color="#E5E5E5"> low</font>

687
00:24:55,550 --> 00:24:58,940
<font color="#E5E5E5">complexity</font><font color="#CCCCCC"> IT protocols</font>

688
00:24:56,929 --> 00:25:01,850
so let's reverse engineer this<font color="#E5E5E5"> thing and</font>

689
00:24:58,940 --> 00:25:03,290
see how it works<font color="#E5E5E5"> so again starting with</font>

690
00:25:01,850 --> 00:25:05,209
<font color="#E5E5E5">step zero we're going</font><font color="#CCCCCC"> to</font><font color="#E5E5E5"> do some</font><font color="#CCCCCC"> open</font>

691
00:25:03,290 --> 00:25:06,678
<font color="#E5E5E5">source</font><font color="#CCCCCC"> intelligence research</font><font color="#E5E5E5"> now</font>

692
00:25:05,210 --> 00:25:08,330
immediately we<font color="#E5E5E5"> ran it we ran into a bit</font>

693
00:25:06,679 --> 00:25:10,730
a<font color="#E5E5E5"> bit of a hurdle with this and that's</font>

694
00:25:08,330 --> 00:25:12,500
because the FCC<font color="#CCCCCC"> ID is not</font><font color="#E5E5E5"> silkscreen</font><font color="#CCCCCC"> on</font>

695
00:25:10,730 --> 00:25:15,110
the device<font color="#CCCCCC"> oftentimes when you're</font>

696
00:25:12,500 --> 00:25:17,630
<font color="#E5E5E5">looking at wireless devices</font><font color="#CCCCCC"> the FCC idea</font>

697
00:25:15,110 --> 00:25:19,189
<font color="#CCCCCC">would be</font><font color="#E5E5E5"> printed on the enclosure</font><font color="#CCCCCC"> it's</font>

698
00:25:17,630 --> 00:25:21,830
it's a regulatory<font color="#E5E5E5"> requirement</font><font color="#CCCCCC"> for</font>

699
00:25:19,190 --> 00:25:23,450
devices in certain classes<font color="#CCCCCC"> interestingly</font>

700
00:25:21,830 --> 00:25:26,449
enough<font color="#E5E5E5"> this device did not have that</font>

701
00:25:23,450 --> 00:25:30,470
however you know<font color="#E5E5E5"> Mark's favorite</font><font color="#CCCCCC"> google</font>

702
00:25:26,450 --> 00:25:34,040
dork<font color="#CCCCCC"> was was very very</font><font color="#E5E5E5"> helpful here if</font>

703
00:25:30,470 --> 00:25:36,050
you<font color="#E5E5E5"> google site</font><font color="#CCCCCC"> : FCC ID i/o followed by</font>

704
00:25:34,040 --> 00:25:40,399
the model number it will almost always

705
00:25:36,050 --> 00:25:44,120
return<font color="#CCCCCC"> returned</font><font color="#E5E5E5"> the FCC ID so that was</font>

706
00:25:40,400 --> 00:25:46,850
very<font color="#CCCCCC"> helpful here so this</font><font color="#E5E5E5"> gleam the test</font>

707
00:25:44,120 --> 00:25:48,229
report<font color="#E5E5E5"> I'm looking into this</font><font color="#CCCCCC"> devices FCC</font>

708
00:25:46,850 --> 00:25:50,300
test report if we look at the equipment

709
00:25:48,230 --> 00:25:52,070
<font color="#E5E5E5">under test section we're immediately</font>

710
00:25:50,300 --> 00:25:54,470
greeted with some<font color="#CCCCCC"> information about</font><font color="#E5E5E5"> the</font>

711
00:25:52,070 --> 00:25:57,559
<font color="#E5E5E5">channel in the modulation so here we see</font>

712
00:25:54,470 --> 00:25:59,690
it's a 2.4 gigahertz protocol<font color="#CCCCCC"> and there</font>

713
00:25:57,559 --> 00:26:01,129
are<font color="#E5E5E5"> 16 channels</font><font color="#CCCCCC"> defined</font><font color="#E5E5E5"> and it also</font>

714
00:25:59,690 --> 00:26:03,380
tells us that<font color="#E5E5E5"> the modulation type of</font>

715
00:26:01,130 --> 00:26:05,179
<font color="#CCCCCC">screw Qin</font><font color="#E5E5E5"> su shift keying</font><font color="#CCCCCC"> we keep</font>

716
00:26:03,380 --> 00:26:07,760
digging<font color="#CCCCCC"> through the report</font><font color="#E5E5E5"> we find a</font>

717
00:26:05,179 --> 00:26:09,200
detailed channel mapping showing<font color="#E5E5E5"> exactly</font>

718
00:26:07,760 --> 00:26:12,170
what the center frequency<font color="#CCCCCC"> of those</font><font color="#E5E5E5"> 16</font>

719
00:26:09,200 --> 00:26:13,820
channels are so by<font color="#CCCCCC"> doing some</font>

720
00:26:12,170 --> 00:26:15,320
<font color="#E5E5E5">open-source intelligence research again</font>

721
00:26:13,820 --> 00:26:17,090
just quick google search<font color="#CCCCCC"> and reading a</font>

722
00:26:15,320 --> 00:26:18,980
document<font color="#E5E5E5"> we're able to determine there</font>

723
00:26:17,090 --> 00:26:20,629
<font color="#E5E5E5">are</font><font color="#CCCCCC"> 16</font><font color="#E5E5E5"> channels identify what their</font>

724
00:26:18,980 --> 00:26:22,700
center frequencies are and also

725
00:26:20,630 --> 00:26:24,830
<font color="#E5E5E5">determine the modulation type and that's</font>

726
00:26:22,700 --> 00:26:26,720
without<font color="#CCCCCC"> even looking at the radio right</font>

727
00:26:24,830 --> 00:26:28,149
that's<font color="#E5E5E5"> just having the device</font><font color="#CCCCCC"> doing a</font>

728
00:26:26,720 --> 00:26:30,290
Google<font color="#CCCCCC"> search</font><font color="#E5E5E5"> getting some information</font>

729
00:26:28,150 --> 00:26:31,580
<font color="#E5E5E5">so open source intelligence really</font>

730
00:26:30,290 --> 00:26:35,059
starts the<font color="#CCCCCC"> process and gets us on our</font>

731
00:26:31,580 --> 00:26:36,678
way here so one thing that we we were

732
00:26:35,059 --> 00:26:38,059
<font color="#E5E5E5">not able to recover</font><font color="#CCCCCC"> in this process the</font>

733
00:26:36,679 --> 00:26:40,190
last<font color="#E5E5E5"> step in characterizing the channel</font>

734
00:26:38,059 --> 00:26:41,600
is<font color="#E5E5E5"> the bandwidth right so we can measure</font>

735
00:26:40,190 --> 00:26:43,880
this empirically<font color="#E5E5E5"> using our software</font>

736
00:26:41,600 --> 00:26:45,919
defined radio<font color="#CCCCCC"> in</font><font color="#E5E5E5"> our device so if we</font>

737
00:26:43,880 --> 00:26:47,690
generate<font color="#E5E5E5"> some</font><font color="#CCCCCC"> traffic</font><font color="#E5E5E5"> to the device</font><font color="#CCCCCC"> we</font>

738
00:26:45,920 --> 00:26:50,000
can use any number<font color="#E5E5E5"> of tools</font><font color="#CCCCCC"> to measure</font>

739
00:26:47,690 --> 00:26:51,890
<font color="#E5E5E5">the bandwidth here</font><font color="#CCCCCC"> you can use</font>

740
00:26:50,000 --> 00:26:53,300
<font color="#CCCCCC">Bob lines</font><font color="#E5E5E5"> in spectrum</font><font color="#CCCCCC"> are two</font><font color="#E5E5E5"> that I</font>

741
00:26:51,890 --> 00:26:55,730
really<font color="#CCCCCC"> like they're both</font><font color="#E5E5E5"> suspect</font>

742
00:26:53,300 --> 00:26:57,290
<font color="#E5E5E5">spectrum visualization tools Vista can</font>

743
00:26:55,730 --> 00:26:59,030
just load<font color="#CCCCCC"> occur</font><font color="#E5E5E5"> capture and then use the</font>

744
00:26:57,290 --> 00:27:01,430
cursors built into both<font color="#E5E5E5"> to measure the</font>

745
00:26:59,030 --> 00:27:03,590
width the channel<font color="#E5E5E5"> and then you can then</font>

746
00:27:01,430 --> 00:27:06,470
we can discover the channel is 500

747
00:27:03,590 --> 00:27:07,939
kilohertz wide so having discovered that

748
00:27:06,470 --> 00:27:09,440
<font color="#E5E5E5">we've now fully characterized the</font>

749
00:27:07,940 --> 00:27:12,610
channel and have identified<font color="#CCCCCC"> the</font>

750
00:27:09,440 --> 00:27:14,990
modulation so steps one and two<font color="#CCCCCC"> are</font><font color="#E5E5E5"> done</font>

751
00:27:12,610 --> 00:27:15,830
so another element<font color="#CCCCCC"> that</font><font color="#E5E5E5"> we weren't able</font>

752
00:27:14,990 --> 00:27:18,830
to recover through open source

753
00:27:15,830 --> 00:27:20,300
<font color="#CCCCCC">intelligence open</font><font color="#E5E5E5"> source research</font><font color="#CCCCCC"> is the</font>

754
00:27:18,830 --> 00:27:21,290
symbol rate<font color="#E5E5E5"> but that's okay because</font>

755
00:27:20,300 --> 00:27:24,020
<font color="#CCCCCC">that's another</font><font color="#E5E5E5"> thing that</font><font color="#CCCCCC"> we</font><font color="#E5E5E5"> can</font>

756
00:27:21,290 --> 00:27:25,879
discover empirically so to discover the

757
00:27:24,020 --> 00:27:27,800
symbol rate empirically I like to use in

758
00:27:25,880 --> 00:27:30,550
spectrum again<font color="#E5E5E5"> because in spectrum has a</font>

759
00:27:27,800 --> 00:27:34,100
really useful tool called<font color="#CCCCCC"> called cursors</font>

760
00:27:30,550 --> 00:27:37,850
basically you can break out in a generic

761
00:27:34,100 --> 00:27:39,139
<font color="#E5E5E5">FSK or</font><font color="#CCCCCC"> on/off keying demodulator</font><font color="#E5E5E5"> that</font>

762
00:27:37,850 --> 00:27:41,899
will produce this nice<font color="#E5E5E5"> time series</font>

763
00:27:39,140 --> 00:27:43,310
visualization of the<font color="#CCCCCC"> data there</font><font color="#E5E5E5"> and then</font>

764
00:27:41,900 --> 00:27:45,800
you can<font color="#E5E5E5"> use these cursors to very</font>

765
00:27:43,310 --> 00:27:47,419
precisely clock out exactly<font color="#E5E5E5"> where the</font>

766
00:27:45,800 --> 00:27:49,220
symbols are so you basically<font color="#E5E5E5"> just align</font>

767
00:27:47,420 --> 00:27:51,400
the cursors<font color="#CCCCCC"> to your time series</font><font color="#E5E5E5"> data and</font>

768
00:27:49,220 --> 00:27:54,080
it<font color="#E5E5E5"> will tell you what the with the</font>

769
00:27:51,400 --> 00:27:55,520
symbol rate is so here we're discover

770
00:27:54,080 --> 00:27:59,419
able to discover the symbol rate<font color="#E5E5E5"> is</font>

771
00:27:55,520 --> 00:28:03,080
additionally 500 kilohertz<font color="#E5E5E5"> so with that</font>

772
00:27:59,420 --> 00:28:05,600
we've completed<font color="#CCCCCC"> step three as well</font><font color="#E5E5E5"> so at</font>

773
00:28:03,080 --> 00:28:07,429
<font color="#E5E5E5">this point we've characterized most of</font>

774
00:28:05,600 --> 00:28:09,050
the critical<font color="#E5E5E5"> elements here</font><font color="#CCCCCC"> that we need</font>

775
00:28:07,430 --> 00:28:11,330
<font color="#E5E5E5">to be</font><font color="#CCCCCC"> able to translate what's happening</font>

776
00:28:09,050 --> 00:28:14,540
<font color="#E5E5E5">in the wireless domain into bits on a</font>

777
00:28:11,330 --> 00:28:16,129
disk<font color="#CCCCCC"> so we're going to</font><font color="#E5E5E5"> take these first</font>

778
00:28:14,540 --> 00:28:17,870
elements and turn them into<font color="#E5E5E5"> a new radio</font>

779
00:28:16,130 --> 00:28:19,340
flow graph it's going<font color="#CCCCCC"> to produce a</font>

780
00:28:17,870 --> 00:28:22,189
stream of symbols<font color="#E5E5E5"> coming from our</font>

781
00:28:19,340 --> 00:28:23,389
software-defined radio and again so the

782
00:28:22,190 --> 00:28:24,680
the flow graph that were going to put

783
00:28:23,390 --> 00:28:27,770
<font color="#E5E5E5">together is essentially going to capture</font>

784
00:28:24,680 --> 00:28:29,570
raw radio<font color="#CCCCCC"> information using the scr do</font>

785
00:28:27,770 --> 00:28:31,700
some math<font color="#E5E5E5"> on it</font><font color="#CCCCCC"> and just going</font><font color="#E5E5E5"> to give</font>

786
00:28:29,570 --> 00:28:34,460
us a stream of<font color="#E5E5E5"> ones and</font><font color="#CCCCCC"> zeros</font><font color="#E5E5E5"> once we</font>

787
00:28:31,700 --> 00:28:36,290
have the ones and zeros on our system on

788
00:28:34,460 --> 00:28:38,660
a disk<font color="#E5E5E5"> we can parse through them using</font>

789
00:28:36,290 --> 00:28:40,420
<font color="#CCCCCC">any tools we desire right you can use</font>

790
00:28:38,660 --> 00:28:42,620
any<font color="#E5E5E5"> language any</font><font color="#CCCCCC"> workflow you want</font>

791
00:28:40,420 --> 00:28:45,560
<font color="#E5E5E5">because it's just a binary format just</font>

792
00:28:42,620 --> 00:28:47,209
<font color="#E5E5E5">like any other</font><font color="#CCCCCC"> data</font><font color="#E5E5E5"> so we're going to</font>

793
00:28:45,560 --> 00:28:47,870
implement<font color="#E5E5E5"> that with Python because</font>

794
00:28:47,210 --> 00:28:50,900
<font color="#CCCCCC">pythons</font>

795
00:28:47,870 --> 00:28:53,870
really easy<font color="#E5E5E5"> so beginning with the flow</font>

796
00:28:50,900 --> 00:28:56,420
graph<font color="#CCCCCC"> came up</font><font color="#E5E5E5"> with this here it looks</font>

797
00:28:53,870 --> 00:28:57,830
horrifying<font color="#E5E5E5"> I'll walk you through it</font><font color="#CCCCCC"> and</font>

798
00:28:56,420 --> 00:28:59,750
this is actually<font color="#E5E5E5"> something that's fairly</font>

799
00:28:57,830 --> 00:29:02,000
<font color="#E5E5E5">generic so we're going to release this</font>

800
00:28:59,750 --> 00:29:03,920
<font color="#CCCCCC">on line and you're</font><font color="#E5E5E5"> going to going to be</font>

801
00:29:02,000 --> 00:29:05,900
able<font color="#E5E5E5"> to take this and</font><font color="#CCCCCC"> just</font><font color="#E5E5E5"> by</font>

802
00:29:03,920 --> 00:29:07,490
by modifying<font color="#E5E5E5"> the variables on the</font><font color="#CCCCCC"> left</font>

803
00:29:05,900 --> 00:29:08,960
<font color="#CCCCCC">hand</font><font color="#E5E5E5"> side of the screen there with the</font>

804
00:29:07,490 --> 00:29:10,540
values<font color="#E5E5E5"> that you'll find through open</font>

805
00:29:08,960 --> 00:29:12,560
<font color="#CCCCCC">source intelligence</font><font color="#E5E5E5"> for whatever</font>

806
00:29:10,540 --> 00:29:14,570
<font color="#E5E5E5">protocol or device you're</font><font color="#CCCCCC"> researching</font>

807
00:29:12,560 --> 00:29:17,240
<font color="#E5E5E5">we'll be</font><font color="#CCCCCC"> able</font><font color="#E5E5E5"> to use the same flow graph</font>

808
00:29:14,570 --> 00:29:18,560
<font color="#CCCCCC">to demodulate</font><font color="#E5E5E5"> FSK signals you won't have</font>

809
00:29:17,240 --> 00:29:19,880
to touch<font color="#E5E5E5"> the blocks you'll just have to</font>

810
00:29:18,560 --> 00:29:22,550
touch the variables<font color="#CCCCCC"> and</font><font color="#E5E5E5"> left hand side</font>

811
00:29:19,880 --> 00:29:25,550
<font color="#E5E5E5">so it's a lot less scary</font><font color="#CCCCCC"> than</font><font color="#E5E5E5"> it looks</font>

812
00:29:22,550 --> 00:29:28,340
so the first<font color="#E5E5E5"> level</font><font color="#CCCCCC"> on top</font><font color="#E5E5E5"> is essentially</font>

813
00:29:25,550 --> 00:29:30,800
establishing our channel<font color="#CCCCCC"> the rotator is</font>

814
00:29:28,340 --> 00:29:33,080
centering<font color="#E5E5E5"> our signal at the middle of</font>

815
00:29:30,800 --> 00:29:35,750
the middle of the<font color="#E5E5E5"> the channel that we're</font>

816
00:29:33,080 --> 00:29:37,159
looking<font color="#E5E5E5"> at the resampler is essentially</font>

817
00:29:35,750 --> 00:29:39,350
throwing<font color="#E5E5E5"> out anything that's</font><font color="#CCCCCC"> outside of</font>

818
00:29:37,160 --> 00:29:41,000
the channel and then<font color="#CCCCCC"> the low-pass filter</font>

819
00:29:39,350 --> 00:29:43,730
<font color="#CCCCCC">is just cleaning</font><font color="#E5E5E5"> up any spurious stuff</font>

820
00:29:41,000 --> 00:29:45,320
that might be left<font color="#E5E5E5"> over</font><font color="#CCCCCC"> the second</font>

821
00:29:43,730 --> 00:29:47,950
notable the<font color="#E5E5E5"> oval on the left there a</font>

822
00:29:45,320 --> 00:29:50,240
bottom left is the demodulation<font color="#E5E5E5"> and</font>

823
00:29:47,950 --> 00:29:52,970
quadrature demodulation<font color="#E5E5E5"> is a means of</font>

824
00:29:50,240 --> 00:29:55,100
<font color="#E5E5E5">doing</font><font color="#CCCCCC"> FS KD mod</font><font color="#E5E5E5"> it has that scary</font>

825
00:29:52,970 --> 00:29:56,990
<font color="#E5E5E5">floating point gain value in there but</font>

826
00:29:55,100 --> 00:29:58,310
that's<font color="#CCCCCC"> Auto populated in Guinea Radio</font>

827
00:29:56,990 --> 00:30:00,260
and it's just taking the values that

828
00:29:58,310 --> 00:30:02,270
we're<font color="#E5E5E5"> providing in the variables so you</font>

829
00:30:00,260 --> 00:30:03,950
know<font color="#E5E5E5"> no no knowledge are not required</font>

830
00:30:02,270 --> 00:30:05,560
<font color="#E5E5E5">they're just being able to Google some</font>

831
00:30:03,950 --> 00:30:08,180
stuff and put some numbers in<font color="#E5E5E5"> and</font>

832
00:30:05,560 --> 00:30:10,129
finally<font color="#CCCCCC"> on the</font><font color="#E5E5E5"> right we have clock</font>

833
00:30:08,180 --> 00:30:12,260
recovery<font color="#CCCCCC"> and that's essentially doing</font>

834
00:30:10,130 --> 00:30:13,880
<font color="#E5E5E5">the translation</font><font color="#CCCCCC"> between the sampling</font>

835
00:30:12,260 --> 00:30:15,680
rate that our radio is<font color="#CCCCCC"> capturing</font><font color="#E5E5E5"> radio</font>

836
00:30:13,880 --> 00:30:18,310
<font color="#CCCCCC">information at to the symbol rate that</font>

837
00:30:15,680 --> 00:30:20,960
we expect on the on the demodulated side

838
00:30:18,310 --> 00:30:25,550
we expect the demodulated data to be<font color="#CCCCCC"> add</font>

839
00:30:20,960 --> 00:30:27,500
and again<font color="#CCCCCC"> most of the values here are</font>

840
00:30:25,550 --> 00:30:29,690
<font color="#CCCCCC">the Guinea</font><font color="#E5E5E5"> radio defaults there's</font>

841
00:30:27,500 --> 00:30:31,100
actually a lot<font color="#CCCCCC"> of a lot that</font><font color="#E5E5E5"> can</font><font color="#CCCCCC"> go into</font>

842
00:30:29,690 --> 00:30:33,320
tuning clock recovery<font color="#E5E5E5"> to make it work</font>

843
00:30:31,100 --> 00:30:34,790
well<font color="#E5E5E5"> but you know if you don't want to</font>

844
00:30:33,320 --> 00:30:36,379
go<font color="#E5E5E5"> through all</font><font color="#CCCCCC"> that one way</font><font color="#E5E5E5"> that you can</font>

845
00:30:34,790 --> 00:30:38,899
<font color="#E5E5E5">kind of get around that is to over</font>

846
00:30:36,380 --> 00:30:41,360
sample<font color="#CCCCCC"> it's a way to</font><font color="#E5E5E5"> make to you know</font>

847
00:30:38,900 --> 00:30:42,890
get around some of<font color="#E5E5E5"> the nuances there so</font>

848
00:30:41,360 --> 00:30:44,300
that's kind of a walk<font color="#E5E5E5"> through about</font>

849
00:30:42,890 --> 00:30:45,620
what's happening here<font color="#CCCCCC"> and</font><font color="#E5E5E5"> then finally</font>

850
00:30:44,300 --> 00:30:47,720
<font color="#CCCCCC">after clock recovery</font><font color="#E5E5E5"> we're basically</font>

851
00:30:45,620 --> 00:30:49,850
just dumping<font color="#E5E5E5"> the ones and zeros to to a</font>

852
00:30:47,720 --> 00:30:52,310
named pipe<font color="#E5E5E5"> you know in our in our Linux</font>

853
00:30:49,850 --> 00:30:53,780
system so<font color="#E5E5E5"> we can adjust that</font><font color="#CCCCCC"> into some</font>

854
00:30:52,310 --> 00:30:56,030
other piece of<font color="#CCCCCC"> software to</font><font color="#E5E5E5"> parse through</font>

855
00:30:53,780 --> 00:30:58,070
it<font color="#E5E5E5"> okay</font>

856
00:30:56,030 --> 00:30:59,660
so essentially steps<font color="#E5E5E5"> one through three</font>

857
00:30:58,070 --> 00:31:01,370
<font color="#E5E5E5">we're baked into that flow graph in</font>

858
00:30:59,660 --> 00:31:04,910
steps four<font color="#CCCCCC"> and five</font><font color="#E5E5E5"> we're going to do</font>

859
00:31:01,370 --> 00:31:06,830
<font color="#E5E5E5">using a Python script and the Python</font>

860
00:31:04,910 --> 00:31:08,300
<font color="#E5E5E5">script</font><font color="#CCCCCC"> is actually pretty simple</font><font color="#E5E5E5"> really</font>

861
00:31:06,830 --> 00:31:09,860
<font color="#E5E5E5">what it's doing is it's looking at the</font>

862
00:31:08,300 --> 00:31:11,899
stream of<font color="#E5E5E5"> ones and zeros</font><font color="#CCCCCC"> that</font><font color="#E5E5E5"> are coming</font>

863
00:31:09,860 --> 00:31:13,610
in from<font color="#E5E5E5"> the from from the</font><font color="#CCCCCC"> Guinea radio</font>

864
00:31:11,900 --> 00:31:15,920
flow graph and<font color="#E5E5E5"> it's looking for the</font>

865
00:31:13,610 --> 00:31:17,620
preamble<font color="#E5E5E5"> and</font><font color="#CCCCCC"> the preamble</font><font color="#E5E5E5"> is going to be</font>

866
00:31:15,920 --> 00:31:20,020
that alternating<font color="#E5E5E5"> sequence of</font>

867
00:31:17,620 --> 00:31:22,030
of one valued<font color="#E5E5E5"> and zero valued samples</font>

868
00:31:20,020 --> 00:31:23,620
right because with FSK the preamble we

869
00:31:22,030 --> 00:31:24,690
expect is<font color="#CCCCCC"> going</font><font color="#E5E5E5"> to you know jump back</font>

870
00:31:23,620 --> 00:31:27,000
and<font color="#E5E5E5"> forth</font><font color="#CCCCCC"> between the two frequencies</font>

871
00:31:24,690 --> 00:31:29,290
<font color="#CCCCCC">since we saw in the interactive example</font>

872
00:31:27,000 --> 00:31:30,940
<font color="#E5E5E5">so once we see</font><font color="#CCCCCC"> that alternating paddle</font>

873
00:31:29,290 --> 00:31:34,090
<font color="#CCCCCC">pattern and our state machine</font>

874
00:31:30,940 --> 00:31:36,580
establishes that were that we're<font color="#E5E5E5"> about</font>

875
00:31:34,090 --> 00:31:37,809
<font color="#CCCCCC">to</font><font color="#E5E5E5"> receive a packet</font><font color="#CCCCCC"> we start to look for</font>

876
00:31:36,580 --> 00:31:40,659
<font color="#E5E5E5">the start of frame delimiter so that we</font>

877
00:31:37,809 --> 00:31:42,100
can synchronize<font color="#CCCCCC"> and the start of frame</font>

878
00:31:40,660 --> 00:31:45,850
<font color="#CCCCCC">delimiter in this case is empirically</font>

879
00:31:42,100 --> 00:31:48,760
observed to be<font color="#CCCCCC"> 2 0 valued</font><font color="#E5E5E5"> symbols so</font>

880
00:31:45,850 --> 00:31:50,260
basically the the transmitter sends<font color="#CCCCCC"> its</font>

881
00:31:48,760 --> 00:31:52,559
<font color="#CCCCCC">preamble</font><font color="#E5E5E5"> and then at the end of the</font>

882
00:31:50,260 --> 00:31:56,890
preamble<font color="#CCCCCC"> it just sends another</font><font color="#E5E5E5"> 0 value</font>

883
00:31:52,559 --> 00:31:58,899
<font color="#CCCCCC">it sends an extra</font><font color="#E5E5E5"> 0 value symbol to tell</font>

884
00:31:56,890 --> 00:32:00,250
the receiver<font color="#CCCCCC"> hey the preamble is done</font>

885
00:31:58,900 --> 00:32:04,150
what follows<font color="#CCCCCC"> immediately after the</font>

886
00:32:00,250 --> 00:32:05,620
second<font color="#CCCCCC"> zero</font><font color="#E5E5E5"> value symbol is your data so</font>

887
00:32:04,150 --> 00:32:07,150
once we're<font color="#E5E5E5"> synchronized we're going to</font>

888
00:32:05,620 --> 00:32:10,120
read out<font color="#CCCCCC"> the frame</font><font color="#E5E5E5"> just by using some</font>

889
00:32:07,150 --> 00:32:11,050
<font color="#E5E5E5">arbitrarily large MTU size so once we're</font>

890
00:32:10,120 --> 00:32:12,639
synchronized we're just going to<font color="#E5E5E5"> dump</font>

891
00:32:11,050 --> 00:32:14,710
<font color="#E5E5E5">out</font><font color="#CCCCCC"> the next say you know a couple</font>

892
00:32:12,640 --> 00:32:16,120
<font color="#CCCCCC">hundred bits and then we can parse</font>

893
00:32:14,710 --> 00:32:19,179
<font color="#CCCCCC">through that and try to</font><font color="#E5E5E5"> make sense of</font>

894
00:32:16,120 --> 00:32:20,439
what's actually<font color="#E5E5E5"> happening here so the</font>

895
00:32:19,179 --> 00:32:22,179
application layer in<font color="#E5E5E5"> this place actually</font>

896
00:32:20,440 --> 00:32:24,670
<font color="#E5E5E5">in this</font><font color="#CCCCCC"> case actually</font><font color="#E5E5E5"> turned out to</font><font color="#CCCCCC"> be</font>

897
00:32:22,179 --> 00:32:28,120
<font color="#E5E5E5">fairly straightforward essentially this</font>

898
00:32:24,670 --> 00:32:29,770
this<font color="#E5E5E5"> wireless flash trigger has a single</font>

899
00:32:28,120 --> 00:32:32,139
broadcast command<font color="#E5E5E5"> that will cause every</font>

900
00:32:29,770 --> 00:32:37,120
camera<font color="#E5E5E5"> flash on this channel to fire to</font>

901
00:32:32,140 --> 00:32:39,929
you know to to<font color="#CCCCCC"> uh to engage and then</font>

902
00:32:37,120 --> 00:32:42,399
<font color="#E5E5E5">these flashes can be remotely configured</font>

903
00:32:39,929 --> 00:32:43,600
<font color="#E5E5E5">by using by</font><font color="#CCCCCC"> using a</font><font color="#E5E5E5"> series of five</font>

904
00:32:42,400 --> 00:32:46,390
commands

905
00:32:43,600 --> 00:32:48,490
however only<font color="#E5E5E5"> the fourth command carries</font>

906
00:32:46,390 --> 00:32:49,809
<font color="#E5E5E5">the state</font><font color="#CCCCCC"> information</font><font color="#E5E5E5"> the other ones are</font>

907
00:32:48,490 --> 00:32:51,100
always static no matter what you're

908
00:32:49,809 --> 00:32:52,210
trying<font color="#E5E5E5"> to do and I think they're</font>

909
00:32:51,100 --> 00:32:53,740
probably<font color="#E5E5E5"> like</font><font color="#CCCCCC"> they're probably wake up</font>

910
00:32:52,210 --> 00:32:54,700
<font color="#E5E5E5">in synchronization messages or</font><font color="#CCCCCC"> something</font>

911
00:32:53,740 --> 00:32:56,170
like that<font color="#E5E5E5"> it</font><font color="#CCCCCC"> actually doesn't</font><font color="#E5E5E5"> work</font>

912
00:32:54,700 --> 00:32:58,780
<font color="#E5E5E5">unless you unless you send those as well</font>

913
00:32:56,170 --> 00:33:00,640
<font color="#E5E5E5">so</font><font color="#CCCCCC"> by using this</font><font color="#E5E5E5"> configured series of</font>

914
00:32:58,780 --> 00:33:03,460
configuration commands<font color="#E5E5E5"> you can</font><font color="#CCCCCC"> update a</font>

915
00:33:00,640 --> 00:33:05,140
single flash<font color="#CCCCCC"> groups settings</font><font color="#E5E5E5"> so you can</font>

916
00:33:03,460 --> 00:33:06,700
basically<font color="#E5E5E5"> change the mode whether it's</font>

917
00:33:05,140 --> 00:33:10,660
on<font color="#E5E5E5"> or off and change the flash power and</font>

918
00:33:06,700 --> 00:33:16,120
some things<font color="#E5E5E5"> like</font><font color="#CCCCCC"> that so do live demo</font>

919
00:33:10,660 --> 00:33:20,320
<font color="#CCCCCC">here see how it goes so just to</font><font color="#E5E5E5"> show you</font>

920
00:33:16,120 --> 00:33:23,040
what this<font color="#CCCCCC"> looks like</font><font color="#E5E5E5"> wake up my flashes</font>

921
00:33:20,320 --> 00:33:23,040
here<font color="#E5E5E5"> that turned off</font>

922
00:33:27,110 --> 00:33:37,320
and there you<font color="#E5E5E5"> go so</font><font color="#CCCCCC"> those are live</font>

923
00:33:34,440 --> 00:33:39,030
flashes and<font color="#E5E5E5"> I'm going to fire up my my</font>

924
00:33:37,320 --> 00:33:40,770
<font color="#CCCCCC">demodulation flow graph</font><font color="#E5E5E5"> just to show you</font>

925
00:33:39,030 --> 00:33:42,540
what it looks like to you know<font color="#E5E5E5"> to</font>

926
00:33:40,770 --> 00:33:47,070
receive these these these packets

927
00:33:42,540 --> 00:33:48,450
<font color="#CCCCCC">over-the-air</font><font color="#E5E5E5"> so on the right as is the</font>

928
00:33:47,070 --> 00:33:50,250
<font color="#CCCCCC">beginni radio flow graph</font><font color="#E5E5E5"> that I just</font>

929
00:33:48,450 --> 00:33:51,870
showed you the picture<font color="#E5E5E5"> of that's running</font>

930
00:33:50,250 --> 00:33:53,820
<font color="#E5E5E5">on the right hand pane</font><font color="#CCCCCC"> and then on the</font>

931
00:33:51,870 --> 00:33:55,909
left is a Python flow graph<font color="#CCCCCC"> or</font><font color="#E5E5E5"> is a</font>

932
00:33:53,820 --> 00:33:58,530
Python program<font color="#E5E5E5"> it's going</font><font color="#CCCCCC"> to</font><font color="#E5E5E5"> dump out</font>

933
00:33:55,910 --> 00:34:01,530
<font color="#E5E5E5">the ones and zeros that that follow</font>

934
00:33:58,530 --> 00:34:03,629
after synchronization so this Python

935
00:34:01,530 --> 00:34:05,490
script is basically<font color="#E5E5E5"> finding the preamble</font>

936
00:34:03,630 --> 00:34:06,720
<font color="#E5E5E5">then synchronizing its</font><font color="#CCCCCC"> Lacerta frame</font>

937
00:34:05,490 --> 00:34:09,750
delimiter<font color="#CCCCCC"> is just</font><font color="#E5E5E5"> going to print</font>

938
00:34:06,720 --> 00:34:11,820
whatever follows<font color="#CCCCCC"> and because it's 2.4</font>

939
00:34:09,750 --> 00:34:12,840
gigahertz<font color="#CCCCCC"> you know we might get some</font>

940
00:34:11,820 --> 00:34:15,629
interference<font color="#E5E5E5"> and some false detection</font>

941
00:34:12,840 --> 00:34:18,659
<font color="#CCCCCC">and things like that</font><font color="#E5E5E5"> but basically as I</font>

942
00:34:15,629 --> 00:34:19,980
modify settings<font color="#CCCCCC"> on the camera we see all</font>

943
00:34:18,659 --> 00:34:23,820
<font color="#E5E5E5">sorts of</font><font color="#CCCCCC"> information - getting dumped</font>

944
00:34:19,980 --> 00:34:25,710
out so you know these<font color="#E5E5E5"> are</font><font color="#CCCCCC"> just you know</font>

945
00:34:23,820 --> 00:34:27,629
<font color="#CCCCCC">ones and zeros you know you can</font>

946
00:34:25,710 --> 00:34:29,520
basically<font color="#E5E5E5"> change the</font><font color="#CCCCCC"> state on this and</font>

947
00:34:27,629 --> 00:34:33,569
correlate it<font color="#CCCCCC"> to behavior in</font><font color="#E5E5E5"> the packets</font>

948
00:34:29,520 --> 00:34:35,280
<font color="#E5E5E5">and you know since we're kind of leaving</font>

949
00:34:33,570 --> 00:34:37,139
<font color="#CCCCCC">it up to</font><font color="#E5E5E5"> you we're assuming that you are</font>

950
00:34:35,280 --> 00:34:39,240
<font color="#E5E5E5">familiar with enough with binary formats</font>

951
00:34:37,139 --> 00:34:40,679
that<font color="#E5E5E5"> you can</font><font color="#CCCCCC"> work through that</font><font color="#E5E5E5"> once</font>

952
00:34:39,239 --> 00:34:44,729
you've translated<font color="#CCCCCC"> the radio information</font>

953
00:34:40,679 --> 00:34:50,240
into a format like<font color="#CCCCCC"> this so now we're</font>

954
00:34:44,730 --> 00:34:52,260
<font color="#CCCCCC">just a quick little transmission demo so</font>

955
00:34:50,239 --> 00:34:53,759
basically both flashes are configured to

956
00:34:52,260 --> 00:34:57,330
<font color="#E5E5E5">be on right now they're both unable to</font>

957
00:34:53,760 --> 00:34:58,500
fire so if I start up my transmission

958
00:34:57,330 --> 00:35:00,930
<font color="#CCCCCC">Guinea radio flow graph here on the</font>

959
00:34:58,500 --> 00:35:03,840
right<font color="#E5E5E5"> I have another script that will go</font>

960
00:35:00,930 --> 00:35:05,790
and compose<font color="#CCCCCC"> it's</font><font color="#E5E5E5"> basically to compose</font>

961
00:35:03,840 --> 00:35:08,450
the<font color="#E5E5E5"> format's that the flashes expect to</font>

962
00:35:05,790 --> 00:35:12,630
get them to fire<font color="#E5E5E5"> so if I fire this up</font>

963
00:35:08,450 --> 00:35:13,710
they'll fire as well and this<font color="#E5E5E5"> is</font><font color="#CCCCCC"> a</font>

964
00:35:12,630 --> 00:35:15,810
<font color="#E5E5E5">little bit buggy we're going to try it</font>

965
00:35:13,710 --> 00:35:18,060
anyway<font color="#CCCCCC"> I'm going to try turning off the</font>

966
00:35:15,810 --> 00:35:20,160
a group flash which is<font color="#CCCCCC"> the the red flash</font>

967
00:35:18,060 --> 00:35:21,150
here and firing the blue one<font color="#CCCCCC"> I'm going</font>

968
00:35:20,160 --> 00:35:23,990
<font color="#CCCCCC">to do it using the remote configuration</font>

969
00:35:21,150 --> 00:35:23,990
commands here

970
00:35:38,280 --> 00:35:53,550
<font color="#E5E5E5">you try this one more time let's uh</font>

971
00:35:52,050 --> 00:35:59,040
<font color="#E5E5E5">let's try it again it should definitely</font>

972
00:35:53,550 --> 00:36:04,470
<font color="#E5E5E5">be on yep to the both on let's try</font>

973
00:35:59,040 --> 00:36:07,310
turning<font color="#E5E5E5"> off the the second one this is</font>

974
00:36:04,470 --> 00:36:07,310
how you know it's a live demo

975
00:36:22,030 --> 00:36:27,859
<font color="#CCCCCC">okay there we go</font><font color="#E5E5E5"> so I just turned off</font>

976
00:36:24,260 --> 00:36:29,720
the<font color="#CCCCCC"> D</font><font color="#E5E5E5"> group and now I'm going to fire</font><font color="#CCCCCC"> it</font>

977
00:36:27,859 --> 00:36:31,400
<font color="#CCCCCC">again and instead you should</font><font color="#E5E5E5"> only see</font>

978
00:36:29,720 --> 00:36:38,830
the red flash go<font color="#CCCCCC"> off here which</font><font color="#E5E5E5"> is the a</font>

979
00:36:31,400 --> 00:36:38,830
group flash oh<font color="#E5E5E5"> that's right thank you</font>

980
00:36:38,859 --> 00:36:50,840
operator<font color="#E5E5E5"> error there we go so now only</font>

981
00:36:44,840 --> 00:36:53,300
the a group flash is going<font color="#CCCCCC"> out cool so</font>

982
00:36:50,840 --> 00:36:55,520
<font color="#E5E5E5">so that's the</font><font color="#CCCCCC"> process so no you know we</font>

983
00:36:53,300 --> 00:36:57,530
kind of you<font color="#CCCCCC"> know went through</font><font color="#E5E5E5"> this is a</font>

984
00:36:55,520 --> 00:36:58,910
high level<font color="#CCCCCC"> but essentially that's</font><font color="#E5E5E5"> the</font>

985
00:36:57,530 --> 00:37:01,460
<font color="#E5E5E5">process</font><font color="#CCCCCC"> that I went through</font><font color="#E5E5E5"> in</font><font color="#CCCCCC"> order to</font>

986
00:36:58,910 --> 00:37:03,020
to go from having<font color="#E5E5E5"> this unknown wireless</font>

987
00:37:01,460 --> 00:37:05,450
protocol to being able<font color="#CCCCCC"> to interact with</font>

988
00:37:03,020 --> 00:37:07,550
<font color="#E5E5E5">it using a software-defined radio so</font>

989
00:37:05,450 --> 00:37:08,689
just before I hand it<font color="#CCCCCC"> up to mark I want</font>

990
00:37:07,550 --> 00:37:11,660
to show off a little<font color="#CCCCCC"> bit of</font><font color="#E5E5E5"> extra</font>

991
00:37:08,690 --> 00:37:13,160
<font color="#CCCCCC">content given</font><font color="#E5E5E5"> that you know</font><font color="#CCCCCC"> I was you</font>

992
00:37:11,660 --> 00:37:14,509
<font color="#CCCCCC">know sitting at</font><font color="#E5E5E5"> a desk by myself and</font><font color="#CCCCCC"> you</font>

993
00:37:13,160 --> 00:37:15,859
know<font color="#E5E5E5"> hitting the shutter</font><font color="#CCCCCC"> on this camera</font>

994
00:37:14,510 --> 00:37:17,900
<font color="#CCCCCC">a bunch of times to produce</font><font color="#E5E5E5"> lots of</font>

995
00:37:15,859 --> 00:37:22,130
<font color="#E5E5E5">traffic I came up</font><font color="#CCCCCC"> with some you</font><font color="#E5E5E5"> know fun</font>

996
00:37:17,900 --> 00:37:25,700
pictures<font color="#E5E5E5"> so here is a tour of the east</font>

997
00:37:22,130 --> 00:37:29,180
<font color="#E5E5E5">facing wall of my bedroom</font><font color="#CCCCCC"> you can see my</font>

998
00:37:25,700 --> 00:37:32,589
<font color="#E5E5E5">IKEA lamp out of focus here's the</font>

999
00:37:29,180 --> 00:37:35,390
southeast corner<font color="#CCCCCC"> of my</font><font color="#E5E5E5"> bedroom</font><font color="#CCCCCC"> as well</font>

1000
00:37:32,590 --> 00:37:39,980
<font color="#CCCCCC">so nice still life of my my</font><font color="#E5E5E5"> apartment</font>

1001
00:37:35,390 --> 00:37:43,549
here<font color="#CCCCCC"> a self-portrait</font><font color="#E5E5E5"> and some more still</font>

1002
00:37:39,980 --> 00:37:44,619
life<font color="#CCCCCC"> so now I'm</font><font color="#E5E5E5"> gonna hand it up to</font><font color="#CCCCCC"> Mark</font>

1003
00:37:43,550 --> 00:37:49,220
and he's going to take<font color="#E5E5E5"> you through</font>

1004
00:37:44,619 --> 00:37:50,810
another another<font color="#E5E5E5"> wireless device so now</font>

1005
00:37:49,220 --> 00:37:52,549
let's look<font color="#E5E5E5"> at another device here in</font>

1006
00:37:50,810 --> 00:37:54,980
this case this is<font color="#CCCCCC"> a wirelessly</font>

1007
00:37:52,550 --> 00:37:58,280
controlled<font color="#E5E5E5"> LED strip so it's just</font><font color="#CCCCCC"> a I</font>

1008
00:37:54,980 --> 00:38:00,680
plug it into a USB<font color="#E5E5E5"> port it has a little</font>

1009
00:37:58,280 --> 00:38:02,090
radio receiver right<font color="#E5E5E5"> here you press</font><font color="#CCCCCC"> a</font>

1010
00:38:00,680 --> 00:38:04,520
<font color="#CCCCCC">button on the</font><font color="#E5E5E5"> remote and then it</font>

1011
00:38:02,090 --> 00:38:06,710
operates the<font color="#E5E5E5"> LED strip so for example I</font>

1012
00:38:04,520 --> 00:38:08,180
<font color="#E5E5E5">can plug this in hit the remote and it</font>

1013
00:38:06,710 --> 00:38:12,380
turns on and<font color="#E5E5E5"> off and this is operating</font>

1014
00:38:08,180 --> 00:38:14,839
over RF so this is a kind of unknown

1015
00:38:12,380 --> 00:38:16,550
device<font color="#E5E5E5"> I ordered this online it doesn't</font>

1016
00:38:14,840 --> 00:38:18,890
have any markings in terms of a<font color="#E5E5E5"> model</font>

1017
00:38:16,550 --> 00:38:20,450
number<font color="#CCCCCC"> or</font><font color="#E5E5E5"> a vendor number so I don't</font>

1018
00:38:18,890 --> 00:38:22,779
<font color="#CCCCCC">really have much</font><font color="#E5E5E5"> to go on</font><font color="#CCCCCC"> in</font><font color="#E5E5E5"> terms of</font>

1019
00:38:20,450 --> 00:38:25,700
open<font color="#E5E5E5"> source intelligence</font><font color="#CCCCCC"> no</font><font color="#E5E5E5"> FCC ID</font>

1020
00:38:22,780 --> 00:38:27,770
however we can do a little<font color="#E5E5E5"> bit</font><font color="#CCCCCC"> with the</font>

1021
00:38:25,700 --> 00:38:29,960
user manual<font color="#CCCCCC"> that we have so</font><font color="#E5E5E5"> this</font><font color="#CCCCCC"> is the</font>

1022
00:38:27,770 --> 00:38:31,910
front page<font color="#E5E5E5"> of the user</font><font color="#CCCCCC"> manual that</font><font color="#E5E5E5"> came</font>

1023
00:38:29,960 --> 00:38:34,230
with<font color="#E5E5E5"> this and there</font><font color="#CCCCCC"> is nothing useful</font>

1024
00:38:31,910 --> 00:38:36,118
there we can flip<font color="#E5E5E5"> it over</font>

1025
00:38:34,230 --> 00:38:38,130
are some more words<font color="#CCCCCC"> some</font><font color="#E5E5E5"> of the words</font>

1026
00:38:36,119 --> 00:38:39,540
are interesting<font color="#E5E5E5"> we can see here we have</font>

1027
00:38:38,130 --> 00:38:41,609
<font color="#CCCCCC">a four hundred thirty three</font><font color="#E5E5E5"> point nine</font>

1028
00:38:39,540 --> 00:38:42,960
two megahertz<font color="#E5E5E5"> center frequency so this</font>

1029
00:38:41,609 --> 00:38:45,109
gives<font color="#E5E5E5"> us some information about the</font>

1030
00:38:42,960 --> 00:38:47,970
<font color="#E5E5E5">channel that the device is operating in</font>

1031
00:38:45,109 --> 00:38:49,680
so through this very minimal amount<font color="#CCCCCC"> of</font>

1032
00:38:47,970 --> 00:38:51,060
<font color="#CCCCCC">open source intelligence the only stuff</font>

1033
00:38:49,680 --> 00:38:52,350
we could actually do we<font color="#E5E5E5"> able to</font>

1034
00:38:51,060 --> 00:38:53,670
characterize<font color="#E5E5E5"> the channel and get the</font>

1035
00:38:52,350 --> 00:38:55,859
center<font color="#CCCCCC"> frequency that this device</font>

1036
00:38:53,670 --> 00:38:57,420
<font color="#CCCCCC">operates at now in</font><font color="#E5E5E5"> order</font><font color="#CCCCCC"> to start</font>

1037
00:38:55,859 --> 00:38:58,859
looking at<font color="#E5E5E5"> the modulation the fully</font>

1038
00:38:57,420 --> 00:39:00,510
<font color="#CCCCCC">characterize</font><font color="#E5E5E5"> a channel we're</font><font color="#CCCCCC"> going to</font>

1039
00:38:58,859 --> 00:39:03,690
visually look at the signal and a

1040
00:39:00,510 --> 00:39:05,609
spectrogram<font color="#E5E5E5"> so this is a very very</font>

1041
00:39:03,690 --> 00:39:07,830
<font color="#E5E5E5">simple new radio flow graph we have a</font>

1042
00:39:05,609 --> 00:39:09,029
<font color="#E5E5E5">USRP source on the left</font><font color="#CCCCCC"> this</font><font color="#E5E5E5"> is data</font>

1043
00:39:07,830 --> 00:39:11,819
coming<font color="#E5E5E5"> in from</font><font color="#CCCCCC"> the software-defined</font>

1044
00:39:09,030 --> 00:39:13,470
radio then we have a<font color="#CCCCCC"> bob line sync</font><font color="#E5E5E5"> on</font>

1045
00:39:11,820 --> 00:39:15,660
<font color="#E5E5E5">the right and this is just displaying</font>

1046
00:39:13,470 --> 00:39:17,700
this spectrogram<font color="#CCCCCC"> like we see on that</font>

1047
00:39:15,660 --> 00:39:20,100
<font color="#E5E5E5">image there on the right so</font><font color="#CCCCCC"> this is one</font>

1048
00:39:17,700 --> 00:39:21,180
full capture of a packet<font color="#E5E5E5"> it's a little</font>

1049
00:39:20,100 --> 00:39:23,819
bit small<font color="#CCCCCC"> so we're going to</font><font color="#E5E5E5"> zoom in to</font>

1050
00:39:21,180 --> 00:39:25,859
<font color="#E5E5E5">take a closer look so this is a zoomed</font>

1051
00:39:23,820 --> 00:39:29,760
in view of<font color="#E5E5E5"> the first half of one of the</font>

1052
00:39:25,859 --> 00:39:31,020
packets sent by this<font color="#E5E5E5"> LED remote</font><font color="#CCCCCC"> so we</font>

1053
00:39:29,760 --> 00:39:33,180
can start to see<font color="#CCCCCC"> that something is</font>

1054
00:39:31,020 --> 00:39:34,859
<font color="#CCCCCC">happening</font><font color="#E5E5E5"> here we have starts there with</font>

1055
00:39:33,180 --> 00:39:36,390
the transmitter being on and the

1056
00:39:34,859 --> 00:39:38,819
transmitter off transmitter on

1057
00:39:36,390 --> 00:39:40,440
transmitter off and so we can<font color="#E5E5E5"> start</font><font color="#CCCCCC"> to</font>

1058
00:39:38,820 --> 00:39:42,900
see<font color="#CCCCCC"> that there's some</font><font color="#E5E5E5"> pattern happening</font>

1059
00:39:40,440 --> 00:39:45,720
here and we can see<font color="#E5E5E5"> that there</font><font color="#CCCCCC"> are two</font>

1060
00:39:42,900 --> 00:39:48,600
different<font color="#E5E5E5"> states that we see so first we</font>

1061
00:39:45,720 --> 00:39:50,970
have that<font color="#E5E5E5"> top example of the transmitter</font>

1062
00:39:48,600 --> 00:39:52,109
being on for<font color="#E5E5E5"> around 450 microseconds and</font>

1063
00:39:50,970 --> 00:39:53,759
then<font color="#E5E5E5"> turning off for around twelve</font>

1064
00:39:52,109 --> 00:39:55,080
<font color="#CCCCCC">hundred microseconds</font><font color="#E5E5E5"> and then we also</font>

1065
00:39:53,760 --> 00:39:56,310
have the inverse<font color="#CCCCCC"> of</font><font color="#E5E5E5"> that where the</font>

1066
00:39:55,080 --> 00:39:58,140
transmitter is on for twelve hundred

1067
00:39:56,310 --> 00:40:00,000
<font color="#E5E5E5">microseconds</font><font color="#CCCCCC"> and</font><font color="#E5E5E5"> then off for around</font>

1068
00:39:58,140 --> 00:40:01,799
<font color="#E5E5E5">four</font><font color="#CCCCCC"> hundred</font><font color="#E5E5E5"> fifty and so we can see</font>

1069
00:40:00,000 --> 00:40:04,590
that we have these<font color="#E5E5E5"> two distinct things</font>

1070
00:40:01,800 --> 00:40:06,720
<font color="#CCCCCC">that are repeated</font><font color="#E5E5E5"> so</font><font color="#CCCCCC"> we can infer that</font>

1071
00:40:04,590 --> 00:40:09,660
one of these is<font color="#CCCCCC"> going</font><font color="#E5E5E5"> to be 0 and 1 will</font>

1072
00:40:06,720 --> 00:40:11,490
be a 1<font color="#CCCCCC"> so we</font><font color="#E5E5E5"> can in this case visually</font>

1073
00:40:09,660 --> 00:40:14,850
to modulate<font color="#E5E5E5"> the</font><font color="#CCCCCC"> signal and just say 0 0</font>

1074
00:40:11,490 --> 00:40:15,990
1 1 1 1<font color="#CCCCCC"> 0 1 1 1 and some of these simple</font>

1075
00:40:14,850 --> 00:40:18,180
physical<font color="#E5E5E5"> layer protocols you can</font>

1076
00:40:15,990 --> 00:40:21,149
<font color="#CCCCCC">actually do</font><font color="#E5E5E5"> this visual the modulation</font>

1077
00:40:18,180 --> 00:40:22,859
not have to<font color="#CCCCCC"> even write any code</font><font color="#E5E5E5"> so this</font>

1078
00:40:21,150 --> 00:40:25,500
is what's called<font color="#E5E5E5"> pulse width modulation</font>

1079
00:40:22,859 --> 00:40:27,840
<font color="#E5E5E5">and it's a type of on-off keying where</font>

1080
00:40:25,500 --> 00:40:29,670
the data<font color="#E5E5E5"> is encoded in the duration</font><font color="#CCCCCC"> of</font>

1081
00:40:27,840 --> 00:40:31,619
the time that the radio transmitter is

1082
00:40:29,670 --> 00:40:34,380
on so when the radio transmitter is on

1083
00:40:31,619 --> 00:40:35,970
for 450 microseconds that's a bit<font color="#CCCCCC"> 0 when</font>

1084
00:40:34,380 --> 00:40:37,680
it's on for<font color="#CCCCCC"> twelve hundred microseconds</font>

1085
00:40:35,970 --> 00:40:40,310
that's a bit<font color="#CCCCCC"> 1 and this is just</font><font color="#E5E5E5"> a nice</font>

1086
00:40:37,680 --> 00:40:42,450
you know simple<font color="#E5E5E5"> low complexity IOT</font><font color="#CCCCCC"> spy</font>

1087
00:40:40,310 --> 00:40:44,190
so now with a little<font color="#E5E5E5"> bit of visual</font>

1088
00:40:42,450 --> 00:40:46,680
analysis we've been able to get the

1089
00:40:44,190 --> 00:40:47,520
modulation and symbol rate<font color="#E5E5E5"> so we have a</font>

1090
00:40:46,680 --> 00:40:49,049
<font color="#E5E5E5">16</font>

1091
00:40:47,520 --> 00:40:51,960
hundred and<font color="#E5E5E5"> fifty microsecond duration</font>

1092
00:40:49,050 --> 00:40:53,970
<font color="#E5E5E5">that's because we have 450 plus 1200 so</font>

1093
00:40:51,960 --> 00:40:56,700
that works out to<font color="#CCCCCC"> be</font><font color="#E5E5E5"> around 600 bits per</font>

1094
00:40:53,970 --> 00:40:58,470
second data rate so now we need<font color="#E5E5E5"> to</font>

1095
00:40:56,700 --> 00:41:00,720
synchronize you know we have these<font color="#E5E5E5"> these</font>

1096
00:40:58,470 --> 00:41:02,520
<font color="#E5E5E5">bit described and modulated that we can</font>

1097
00:41:00,720 --> 00:41:05,129
see but<font color="#E5E5E5"> we don't know what a packet</font>

1098
00:41:02,520 --> 00:41:06,330
actually looks<font color="#E5E5E5"> like and so I pressed</font>

1099
00:41:05,130 --> 00:41:08,700
some different buttons on the doorbell

1100
00:41:06,330 --> 00:41:11,160
<font color="#CCCCCC">for</font><font color="#E5E5E5"> different buttons or on the LED or</font>

1101
00:41:08,700 --> 00:41:13,890
mote in this case so the first 20 bits

1102
00:41:11,160 --> 00:41:15,750
<font color="#E5E5E5">of each packet is the same</font><font color="#CCCCCC"> so I'm making</font>

1103
00:41:13,890 --> 00:41:17,339
an<font color="#E5E5E5"> assumption here</font><font color="#CCCCCC"> that the</font><font color="#E5E5E5"> first four</font>

1104
00:41:15,750 --> 00:41:19,500
<font color="#E5E5E5">bits are going</font><font color="#CCCCCC"> to be some kind of</font>

1105
00:41:17,340 --> 00:41:22,170
seconds a Shenfield<font color="#CCCCCC"> the next 16 will be</font>

1106
00:41:19,500 --> 00:41:23,460
<font color="#E5E5E5">an address</font><font color="#CCCCCC"> this is kind of an</font><font color="#E5E5E5"> unknown</font><font color="#CCCCCC"> so</font>

1107
00:41:22,170 --> 00:41:25,590
it's logically separated like<font color="#CCCCCC"> this for</font>

1108
00:41:23,460 --> 00:41:27,420
the<font color="#CCCCCC"> moment but we need to get you know</font>

1109
00:41:25,590 --> 00:41:29,820
another remote to see where the<font color="#CCCCCC"> address</font>

1110
00:41:27,420 --> 00:41:31,770
actually<font color="#E5E5E5"> starts the last bit in each</font>

1111
00:41:29,820 --> 00:41:33,750
packet<font color="#E5E5E5"> is all the same so I'm assuming</font>

1112
00:41:31,770 --> 00:41:36,150
that<font color="#CCCCCC"> maybe a trailer of some kind and</font>

1113
00:41:33,750 --> 00:41:38,220
then<font color="#CCCCCC"> B</font><font color="#E5E5E5"> four bits that precede the</font>

1114
00:41:36,150 --> 00:41:40,770
trailer<font color="#E5E5E5"> change depending on what button</font>

1115
00:41:38,220 --> 00:41:44,040
I press so this tells us that the button

1116
00:41:40,770 --> 00:41:48,540
ID is encoded in those four bits<font color="#CCCCCC"> before</font>

1117
00:41:44,040 --> 00:41:52,130
the trailer in<font color="#E5E5E5"> the packet because one</font><font color="#CCCCCC"> of</font>

1118
00:41:48,540 --> 00:41:55,410
the<font color="#E5E5E5"> flash is running on a battery so Mia</font>

1119
00:41:52,130 --> 00:41:57,180
so this is what our in bits this is what

1120
00:41:55,410 --> 00:41:58,980
our<font color="#E5E5E5"> packet format looks like for the LED</font>

1121
00:41:57,180 --> 00:42:01,770
controller<font color="#E5E5E5"> so</font><font color="#CCCCCC"> we have a sync</font><font color="#E5E5E5"> field</font><font color="#CCCCCC"> that</font>

1122
00:41:58,980 --> 00:42:03,030
an address<font color="#CCCCCC"> the length of</font><font color="#E5E5E5"> EHR are unknown</font>

1123
00:42:01,770 --> 00:42:05,340
<font color="#E5E5E5">but we can assume these for the moment</font>

1124
00:42:03,030 --> 00:42:07,080
<font color="#E5E5E5">then we have a four bit ID for the</font>

1125
00:42:05,340 --> 00:42:10,230
<font color="#E5E5E5">actual button on the remote and then</font>

1126
00:42:07,080 --> 00:42:11,610
this one bit trailer and another thing

1127
00:42:10,230 --> 00:42:13,170
<font color="#CCCCCC">that</font><font color="#E5E5E5"> we have to</font><font color="#CCCCCC"> consider is the packet</font>

1128
00:42:11,610 --> 00:42:13,800
spacing<font color="#E5E5E5"> so when you hold down a button</font>

1129
00:42:13,170 --> 00:42:15,930
on the remote

1130
00:42:13,800 --> 00:42:17,910
it sends these same packets<font color="#E5E5E5"> over</font><font color="#CCCCCC"> and</font>

1131
00:42:15,930 --> 00:42:19,859
over again so<font color="#E5E5E5"> it'll send a packet wait</font>

1132
00:42:17,910 --> 00:42:21,180
12 milliseconds<font color="#E5E5E5"> and then send the packet</font>

1133
00:42:19,860 --> 00:42:23,520
again<font color="#E5E5E5"> and it will just keep doing this</font>

1134
00:42:21,180 --> 00:42:25,589
as long<font color="#E5E5E5"> as you hold</font><font color="#CCCCCC"> down the</font><font color="#E5E5E5"> button the</font>

1135
00:42:23,520 --> 00:42:27,630
reason is that<font color="#CCCCCC"> there is no way for</font><font color="#E5E5E5"> the</font>

1136
00:42:25,590 --> 00:42:29,100
LED strip<font color="#E5E5E5"> itself to reply to the remote</font>

1137
00:42:27,630 --> 00:42:30,720
so in order<font color="#E5E5E5"> to make sure that</font><font color="#CCCCCC"> the</font>

1138
00:42:29,100 --> 00:42:34,500
commands are received it just spams them

1139
00:42:30,720 --> 00:42:35,879
continuously<font color="#E5E5E5"> and so with a tiny</font><font color="#CCCCCC"> bit of</font>

1140
00:42:34,500 --> 00:42:37,530
<font color="#CCCCCC">open source</font><font color="#E5E5E5"> intelligence and a little</font>

1141
00:42:35,880 --> 00:42:38,940
bit of<font color="#E5E5E5"> looking at a spectrogram we've</font>

1142
00:42:37,530 --> 00:42:41,010
been<font color="#E5E5E5"> able to learn quite a bit about how</font>

1143
00:42:38,940 --> 00:42:42,480
this device<font color="#E5E5E5"> operates</font><font color="#CCCCCC"> we know it's a</font><font color="#E5E5E5"> four</font>

1144
00:42:41,010 --> 00:42:43,770
three<font color="#CCCCCC"> three point nine</font><font color="#E5E5E5"> two megahertz</font><font color="#CCCCCC"> and</font>

1145
00:42:42,480 --> 00:42:46,110
<font color="#E5E5E5">our frequency so it</font><font color="#CCCCCC"> characterized</font><font color="#E5E5E5"> the</font>

1146
00:42:43,770 --> 00:42:47,940
channel we know the modulation is pulse

1147
00:42:46,110 --> 00:42:50,430
pulse width modulation at<font color="#CCCCCC"> six hundred</font>

1148
00:42:47,940 --> 00:42:52,440
<font color="#E5E5E5">bits a second we know how a bit</font><font color="#CCCCCC"> one and</font>

1149
00:42:50,430 --> 00:42:54,480
bit zero are modulated we know the

1150
00:42:52,440 --> 00:42:55,950
packets<font color="#E5E5E5"> are twenty five bits long and</font><font color="#CCCCCC"> we</font>

1151
00:42:54,480 --> 00:42:57,750
know there's a 12 bit spacing between

1152
00:42:55,950 --> 00:42:58,980
<font color="#E5E5E5">each packet and this is enough</font>

1153
00:42:57,750 --> 00:43:00,360
information<font color="#CCCCCC"> to write</font><font color="#E5E5E5"> a little</font><font color="#CCCCCC"> bit of</font>

1154
00:42:58,980 --> 00:43:02,180
<font color="#CCCCCC">Python code to</font><font color="#E5E5E5"> actually interact with</font>

1155
00:43:00,360 --> 00:43:05,970
<font color="#E5E5E5">this device</font>

1156
00:43:02,180 --> 00:43:07,589
and when you're doing<font color="#CCCCCC"> this can</font><font color="#E5E5E5"> you</font><font color="#CCCCCC"> radio</font>

1157
00:43:05,970 --> 00:43:09,779
stuff<font color="#CCCCCC"> a lot of people would</font><font color="#E5E5E5"> like</font><font color="#CCCCCC"> to use</font>

1158
00:43:07,590 --> 00:43:11,460
a new radio companion<font color="#CCCCCC"> software which is</font>

1159
00:43:09,780 --> 00:43:13,230
you know<font color="#E5E5E5"> perfectly fine but when you</font>

1160
00:43:11,460 --> 00:43:15,300
compile a new radio companion flow graph

1161
00:43:13,230 --> 00:43:17,130
it<font color="#CCCCCC"> just produces</font><font color="#E5E5E5"> Python code so I prefer</font>

1162
00:43:15,300 --> 00:43:19,860
<font color="#E5E5E5">to</font><font color="#CCCCCC"> just write the</font><font color="#E5E5E5"> Python code and in</font>

1163
00:43:17,130 --> 00:43:21,450
this nice low complexity<font color="#E5E5E5"> case it's not</font>

1164
00:43:19,860 --> 00:43:27,330
<font color="#CCCCCC">too much code</font><font color="#E5E5E5"> increase</font><font color="#CCCCCC"> your</font><font color="#E5E5E5"> font size</font>

1165
00:43:21,450 --> 00:43:29,100
yes so we start here<font color="#E5E5E5"> with our</font><font color="#CCCCCC"> USRP</font>

1166
00:43:27,330 --> 00:43:31,529
source and this<font color="#E5E5E5"> is just data coming in</font>

1167
00:43:29,100 --> 00:43:33,240
<font color="#E5E5E5">for the software-defined radio we pass</font>

1168
00:43:31,530 --> 00:43:35,130
that through a<font color="#CCCCCC"> low-pass filter which</font>

1169
00:43:33,240 --> 00:43:37,020
filters out everything outside<font color="#E5E5E5"> of</font><font color="#CCCCCC"> the</font>

1170
00:43:35,130 --> 00:43:39,360
signal we're looking at then<font color="#E5E5E5"> we have</font>

1171
00:43:37,020 --> 00:43:42,509
this block called<font color="#E5E5E5"> complex to power here</font>

1172
00:43:39,360 --> 00:43:45,000
and this is taking the power of the

1173
00:43:42,510 --> 00:43:47,280
signal<font color="#E5E5E5"> on the channel where the door or</font>

1174
00:43:45,000 --> 00:43:49,770
<font color="#CCCCCC">the LED or mode is operating so what</font>

1175
00:43:47,280 --> 00:43:51,150
happens is this is<font color="#E5E5E5"> telling us the power</font>

1176
00:43:49,770 --> 00:43:52,890
of the radio that this thing is

1177
00:43:51,150 --> 00:43:55,230
transmitting<font color="#E5E5E5"> we then have a threshold</font>

1178
00:43:52,890 --> 00:43:57,450
block<font color="#E5E5E5"> a threshold block will output</font><font color="#CCCCCC"> ones</font>

1179
00:43:55,230 --> 00:43:59,220
or<font color="#E5E5E5"> zeros if the power is above or below</font>

1180
00:43:57,450 --> 00:44:02,279
a certain threshold<font color="#E5E5E5"> right and so the</font>

1181
00:43:59,220 --> 00:44:04,740
data<font color="#E5E5E5"> is encoded modulated by turning the</font>

1182
00:44:02,280 --> 00:44:06,630
radio transmitter<font color="#CCCCCC"> on or</font><font color="#E5E5E5"> off and then on</font>

1183
00:44:04,740 --> 00:44:08,759
and then off and so this will output

1184
00:44:06,630 --> 00:44:11,370
<font color="#E5E5E5">zeros when it's off and</font><font color="#CCCCCC"> ones when it's</font>

1185
00:44:08,760 --> 00:44:13,830
on we can then look in does ones and

1186
00:44:11,370 --> 00:44:15,330
zeros for the packets<font color="#E5E5E5"> we then go into</font><font color="#CCCCCC"> a</font>

1187
00:44:13,830 --> 00:44:17,970
frame or block which<font color="#E5E5E5"> will</font><font color="#CCCCCC"> actually try</font>

1188
00:44:15,330 --> 00:44:19,529
and<font color="#E5E5E5"> frame the packets here so we have</font>

1189
00:44:17,970 --> 00:44:20,759
the output<font color="#CCCCCC"> of</font><font color="#E5E5E5"> that threshold block which</font>

1190
00:44:19,530 --> 00:44:22,550
<font color="#CCCCCC">is just setting our ones and zeros</font>

1191
00:44:20,760 --> 00:44:25,050
telling us this is transmitting or not

1192
00:44:22,550 --> 00:44:27,390
we look for the state change of going

1193
00:44:25,050 --> 00:44:29,550
<font color="#E5E5E5">from off to on and</font><font color="#CCCCCC"> then off and when it</font>

1194
00:44:27,390 --> 00:44:32,190
goes back to off we see how<font color="#E5E5E5"> long it was</font>

1195
00:44:29,550 --> 00:44:34,140
so here we're saying is it was<font color="#CCCCCC"> on for</font>

1196
00:44:32,190 --> 00:44:37,080
less than 500 microseconds<font color="#E5E5E5"> we call it a</font>

1197
00:44:34,140 --> 00:44:38,640
bit<font color="#CCCCCC"> zero</font><font color="#E5E5E5"> if it was on for more than</font><font color="#CCCCCC"> 500</font>

1198
00:44:37,080 --> 00:44:41,400
microseconds we call it a bit<font color="#E5E5E5"> one and</font>

1199
00:44:38,640 --> 00:44:43,980
then when we have<font color="#CCCCCC"> 25 bits we call it</font>

1200
00:44:41,400 --> 00:44:45,600
frame and then we extract<font color="#CCCCCC"> the button ID</font>

1201
00:44:43,980 --> 00:44:49,580
and we print the command to standard out

1202
00:44:45,600 --> 00:44:49,580
go over<font color="#E5E5E5"> here and do a quick demo this</font>

1203
00:44:55,640 --> 00:45:01,440
so now I can press some buttons on<font color="#E5E5E5"> the</font>

1204
00:44:58,320 --> 00:45:02,880
remote<font color="#E5E5E5"> and we can see that it</font><font color="#CCCCCC"> is you</font>

1205
00:45:01,440 --> 00:45:04,890
know<font color="#E5E5E5"> operating</font><font color="#CCCCCC"> the device</font><font color="#E5E5E5"> and then</font>

1206
00:45:02,880 --> 00:45:06,540
telling us what button<font color="#CCCCCC"> was pressed and</font>

1207
00:45:04,890 --> 00:45:08,400
now the inverse of this for a

1208
00:45:06,540 --> 00:45:11,310
transmitter is another pretty simple

1209
00:45:08,400 --> 00:45:13,620
piece of<font color="#CCCCCC"> software here</font><font color="#E5E5E5"> so we again for</font>

1210
00:45:11,310 --> 00:45:15,509
the<font color="#E5E5E5"> transmitter side we have a signal</font>

1211
00:45:13,620 --> 00:45:16,799
source<font color="#E5E5E5"> and this is just generating a</font>

1212
00:45:15,510 --> 00:45:19,020
tone<font color="#CCCCCC"> that we send into the</font>

1213
00:45:16,800 --> 00:45:20,850
<font color="#E5E5E5">software-defined radio so as it is with</font>

1214
00:45:19,020 --> 00:45:22,530
a signal source<font color="#CCCCCC"> going into the SDR</font>

1215
00:45:20,850 --> 00:45:24,870
<font color="#E5E5E5">we're going to have a tone</font><font color="#CCCCCC"> that's always</font>

1216
00:45:22,530 --> 00:45:26,340
on<font color="#E5E5E5"> at a 100 percent duty cycle but in</font>

1217
00:45:24,870 --> 00:45:28,319
order to modulate this data we need<font color="#E5E5E5"> to</font>

1218
00:45:26,340 --> 00:45:30,240
turn this tone off and then on and then

1219
00:45:28,320 --> 00:45:32,160
back off<font color="#CCCCCC"> and the easiest way to do that</font>

1220
00:45:30,240 --> 00:45:33,450
is multiply it by a bunch<font color="#E5E5E5"> of zeros what</font>

1221
00:45:32,160 --> 00:45:35,879
we want it off and multiply it by

1222
00:45:33,450 --> 00:45:38,549
<font color="#CCCCCC">someones when we want it</font><font color="#E5E5E5"> on so we know</font>

1223
00:45:35,880 --> 00:45:40,950
that the bit<font color="#CCCCCC"> zero is modulated by having</font>

1224
00:45:38,550 --> 00:45:43,260
the transmitter<font color="#E5E5E5"> on for 450 microseconds</font>

1225
00:45:40,950 --> 00:45:46,080
<font color="#E5E5E5">and then off for</font><font color="#CCCCCC"> 1200 so we generate</font><font color="#E5E5E5"> a</font>

1226
00:45:43,260 --> 00:45:48,510
mask for<font color="#E5E5E5"> this bit zero this mask is</font><font color="#CCCCCC"> just</font>

1227
00:45:46,080 --> 00:45:50,279
<font color="#E5E5E5">450 microseconds</font><font color="#CCCCCC"> of ones and 1,200</font>

1228
00:45:48,510 --> 00:45:52,530
<font color="#E5E5E5">microseconds of zeros and then we have</font>

1229
00:45:50,280 --> 00:45:54,570
the<font color="#E5E5E5"> inverse of that</font><font color="#CCCCCC"> 4-bit</font><font color="#E5E5E5"> one and then</font>

1230
00:45:52,530 --> 00:45:56,640
we can build our packet here as just<font color="#CCCCCC"> a</font>

1231
00:45:54,570 --> 00:45:58,290
string of<font color="#E5E5E5"> ones and zeros and then we</font>

1232
00:45:56,640 --> 00:46:00,299
could make a packet mask which is<font color="#E5E5E5"> just</font>

1233
00:45:58,290 --> 00:46:02,700
concatenating these<font color="#E5E5E5"> bit</font><font color="#CCCCCC"> zero and bit one</font>

1234
00:46:00,300 --> 00:46:04,290
<font color="#E5E5E5">masks so ones and</font><font color="#CCCCCC"> zeroes in this big</font>

1235
00:46:02,700 --> 00:46:06,240
<font color="#E5E5E5">vector that we can</font><font color="#CCCCCC"> then multiply by the</font>

1236
00:46:04,290 --> 00:46:09,450
<font color="#E5E5E5">tone to turn it on or off to modulate</font>

1237
00:46:06,240 --> 00:46:11,609
<font color="#E5E5E5">this data and then we build in our 12</font>

1238
00:46:09,450 --> 00:46:13,230
millisecond gap between packets<font color="#E5E5E5"> and then</font>

1239
00:46:11,610 --> 00:46:16,200
we can transmit<font color="#E5E5E5"> a few instances of this</font>

1240
00:46:13,230 --> 00:46:18,060
<font color="#E5E5E5">and the idea is</font><font color="#CCCCCC"> that the LED strip here</font>

1241
00:46:16,200 --> 00:46:22,009
will receive<font color="#E5E5E5"> that command and then do</font>

1242
00:46:18,060 --> 00:46:22,009
<font color="#E5E5E5">things so go and</font><font color="#CCCCCC"> demonstrate this here</font>

1243
00:46:24,170 --> 00:46:31,370
<font color="#E5E5E5">so first I</font><font color="#CCCCCC"> will send the</font><font color="#E5E5E5"> power button</font>

1244
00:46:27,120 --> 00:46:37,100
<font color="#E5E5E5">command and that will turn it on and</font>

1245
00:46:31,370 --> 00:46:41,339
then<font color="#CCCCCC"> we can for example change the color</font>

1246
00:46:37,100 --> 00:46:45,210
and then run power again<font color="#CCCCCC"> and turn it</font>

1247
00:46:41,340 --> 00:46:48,270
back<font color="#E5E5E5"> off this is kind of a neat example</font>

1248
00:46:45,210 --> 00:46:49,800
<font color="#E5E5E5">of low complexity Oh on</font><font color="#CCCCCC"> opt-in because</font>

1249
00:46:48,270 --> 00:46:51,390
we have maybe 100 blinds of code for the

1250
00:46:49,800 --> 00:46:52,860
receiver 100 lines of<font color="#E5E5E5"> code</font><font color="#CCCCCC"> for the</font>

1251
00:46:51,390 --> 00:46:56,759
transmitter<font color="#E5E5E5"> and we can effectively</font>

1252
00:46:52,860 --> 00:46:57,870
communicate<font color="#E5E5E5"> with the device</font><font color="#CCCCCC"> and so now</font>

1253
00:46:56,760 --> 00:46:59,970
<font color="#E5E5E5">let's take a look at another device</font><font color="#CCCCCC"> in</font>

1254
00:46:57,870 --> 00:47:01,650
this<font color="#E5E5E5"> case</font><font color="#CCCCCC"> a wireless keyboard so this is</font>

1255
00:46:59,970 --> 00:47:04,080
the<font color="#CCCCCC"> hewlett-packard classic wireless</font>

1256
00:47:01,650 --> 00:47:05,580
desktop<font color="#E5E5E5"> this has</font><font color="#CCCCCC"> three</font><font color="#E5E5E5"> devices in</font><font color="#CCCCCC"> this</font>

1257
00:47:04,080 --> 00:47:07,650
set it's a<font color="#E5E5E5"> keyboard and mouse set and</font>

1258
00:47:05,580 --> 00:47:09,090
has a keyboard<font color="#E5E5E5"> a dongle</font><font color="#CCCCCC"> and a mouse</font>

1259
00:47:07,650 --> 00:47:11,310
we're just<font color="#E5E5E5"> going to look at the keyboard</font>

1260
00:47:09,090 --> 00:47:12,570
<font color="#CCCCCC">and the dongle in this case and what's</font>

1261
00:47:11,310 --> 00:47:14,820
nice is<font color="#CCCCCC"> because each of these devices</font>

1262
00:47:12,570 --> 00:47:17,400
transmit<font color="#CCCCCC"> it's from a major vendor sold</font>

1263
00:47:14,820 --> 00:47:20,130
in the<font color="#E5E5E5"> US so we have</font><font color="#CCCCCC"> FCC IDs for each of</font>

1264
00:47:17,400 --> 00:47:21,870
the<font color="#CCCCCC"> devices</font><font color="#E5E5E5"> so we can start by pulling</font>

1265
00:47:20,130 --> 00:47:23,670
up<font color="#CCCCCC"> the test report for the dongle and</font>

1266
00:47:21,870 --> 00:47:26,279
this case is tells us the modulation

1267
00:47:23,670 --> 00:47:28,140
which is<font color="#E5E5E5"> G FSK modulation the data rate</font>

1268
00:47:26,280 --> 00:47:30,600
<font color="#E5E5E5">of one megabit per second this tells us</font>

1269
00:47:28,140 --> 00:47:32,460
we<font color="#CCCCCC"> have 78 channels</font><font color="#E5E5E5"> in the 2.4 is M band</font>

1270
00:47:30,600 --> 00:47:35,310
<font color="#E5E5E5">so right there we</font><font color="#CCCCCC"> have the modulation</font>

1271
00:47:32,460 --> 00:47:36,390
and we have the channel characterized we

1272
00:47:35,310 --> 00:47:37,950
<font color="#E5E5E5">also pull the test report for the</font>

1273
00:47:36,390 --> 00:47:40,049
keyboard<font color="#E5E5E5"> now in this case we have a</font>

1274
00:47:37,950 --> 00:47:42,390
little<font color="#E5E5E5"> bit of conflicting information so</font>

1275
00:47:40,050 --> 00:47:44,070
we still see FSK modulation<font color="#E5E5E5"> this tells</font>

1276
00:47:42,390 --> 00:47:46,200
us a<font color="#CCCCCC"> 2 megahertz channel bandwidth which</font>

1277
00:47:44,070 --> 00:47:48,300
is compatible<font color="#E5E5E5"> with</font><font color="#CCCCCC"> one megabit data rate</font>

1278
00:47:46,200 --> 00:47:49,830
but can provide<font color="#E5E5E5"> some ambiguity but the</font>

1279
00:47:48,300 --> 00:47:52,470
big<font color="#CCCCCC"> problem</font><font color="#E5E5E5"> is it says 34 channels</font>

1280
00:47:49,830 --> 00:47:53,850
whereas the dongle said 78 channels but

1281
00:47:52,470 --> 00:47:55,560
<font color="#E5E5E5">we can only say that it's going to be a</font>

1282
00:47:53,850 --> 00:47:57,480
<font color="#CCCCCC">1 megabit data rate</font><font color="#E5E5E5"> it's going to be in</font>

1283
00:47:55,560 --> 00:47:59,880
the 2.4 is<font color="#CCCCCC"> M band and it's going</font><font color="#E5E5E5"> to be</font>

1284
00:47:57,480 --> 00:48:01,950
FSK modulation<font color="#E5E5E5"> and because this is a</font>

1285
00:47:59,880 --> 00:48:03,570
device<font color="#CCCCCC"> that can talk to a computer we</font>

1286
00:48:01,950 --> 00:48:05,370
can plug the dongle into a<font color="#E5E5E5"> computer look</font>

1287
00:48:03,570 --> 00:48:06,720
at<font color="#E5E5E5"> the D message output in this case it</font>

1288
00:48:05,370 --> 00:48:08,310
identifies itself as a Mozart

1289
00:48:06,720 --> 00:48:09,990
<font color="#E5E5E5">semiconductor device and it turns out</font>

1290
00:48:08,310 --> 00:48:12,960
that's<font color="#E5E5E5"> just the vendor which makes the</font>

1291
00:48:09,990 --> 00:48:15,120
transceivers in this set<font color="#E5E5E5"> so the first</font>

1292
00:48:12,960 --> 00:48:16,680
thing we want to do is figure out what

1293
00:48:15,120 --> 00:48:18,690
<font color="#E5E5E5">these</font><font color="#CCCCCC"> devices actually</font><font color="#E5E5E5"> send</font><font color="#CCCCCC"> over-the-air</font>

1294
00:48:16,680 --> 00:48:20,430
<font color="#CCCCCC">and so because we have two transmitters</font>

1295
00:48:18,690 --> 00:48:22,020
we have the<font color="#E5E5E5"> keyboard and the dongle</font><font color="#CCCCCC"> we</font>

1296
00:48:20,430 --> 00:48:24,180
can start by plugging<font color="#E5E5E5"> in the dongle</font>

1297
00:48:22,020 --> 00:48:25,800
pulling up the spectrogram and trying to

1298
00:48:24,180 --> 00:48:27,299
see what's happening<font color="#E5E5E5"> so it turns out</font>

1299
00:48:25,800 --> 00:48:28,830
<font color="#E5E5E5">that it actually camps on a single</font>

1300
00:48:27,300 --> 00:48:30,690
<font color="#CCCCCC">channel so it's not hopping and it's</font>

1301
00:48:28,830 --> 00:48:32,430
only one<font color="#E5E5E5"> channel so the</font><font color="#CCCCCC"> differing</font>

1302
00:48:30,690 --> 00:48:34,380
channel numbers in the<font color="#CCCCCC"> SEC documentation</font>

1303
00:48:32,430 --> 00:48:36,029
is now<font color="#CCCCCC"> irrelevant and</font><font color="#E5E5E5"> we</font><font color="#CCCCCC"> can see</font><font color="#E5E5E5"> that</font>

1304
00:48:34,380 --> 00:48:37,860
when just a dongle is plugged in is

1305
00:48:36,030 --> 00:48:39,750
transmitting these packets<font color="#CCCCCC"> every 8</font>

1306
00:48:37,860 --> 00:48:41,370
milliseconds<font color="#E5E5E5"> so this infers</font><font color="#CCCCCC"> that is</font>

1307
00:48:39,750 --> 00:48:43,410
probably<font color="#CCCCCC"> going to</font><font color="#E5E5E5"> be some type of time</font>

1308
00:48:41,370 --> 00:48:45,180
division multiple access and so<font color="#E5E5E5"> instead</font>

1309
00:48:43,410 --> 00:48:46,890
<font color="#CCCCCC">of having</font><font color="#E5E5E5"> two</font><font color="#CCCCCC"> devices operate on</font><font color="#E5E5E5"> two</font>

1310
00:48:45,180 --> 00:48:48,509
<font color="#E5E5E5">different frequencies</font><font color="#CCCCCC"> you</font><font color="#E5E5E5"> can have two</font>

1311
00:48:46,890 --> 00:48:50,850
devices<font color="#E5E5E5"> operate on the same frequency</font>

1312
00:48:48,510 --> 00:48:52,350
but at different<font color="#E5E5E5"> points in time so now</font>

1313
00:48:50,850 --> 00:48:54,630
we can<font color="#E5E5E5"> plug</font><font color="#CCCCCC"> in a keyboard type on the</font>

1314
00:48:52,350 --> 00:48:56,790
<font color="#E5E5E5">keyboard</font><font color="#CCCCCC"> and we can see that this TDMA</font>

1315
00:48:54,630 --> 00:48:57,960
is indeed there so we have the dongle

1316
00:48:56,790 --> 00:48:59,759
still studying packets<font color="#E5E5E5"> every gate</font>

1317
00:48:57,960 --> 00:49:01,590
milliseconds and the keyboard when

1318
00:48:59,760 --> 00:49:03,660
you're typing<font color="#CCCCCC"> will set a packet</font><font color="#E5E5E5"> shortly</font>

1319
00:49:01,590 --> 00:49:07,350
after the dongle packets so it tells us

1320
00:49:03,660 --> 00:49:09,299
<font color="#CCCCCC">that we have a</font><font color="#E5E5E5"> TDM a 5 ppm ifs</font><font color="#CCCCCC"> k5 and</font>

1321
00:49:07,350 --> 00:49:12,620
it's a single<font color="#E5E5E5"> channel so no frequency</font>

1322
00:49:09,300 --> 00:49:12,620
hopping yes

1323
00:49:14,350 --> 00:49:18,980
so the so<font color="#CCCCCC"> the dongle it's not</font>

1324
00:49:17,270 --> 00:49:20,690
transmitting any data but<font color="#E5E5E5"> it's</font>

1325
00:49:18,980 --> 00:49:22,610
transmitting in these synchronization

1326
00:49:20,690 --> 00:49:23,810
packets<font color="#E5E5E5"> so the idea is</font><font color="#CCCCCC"> that the</font><font color="#E5E5E5"> keyboard</font>

1327
00:49:22,610 --> 00:49:25,400
will then listen to<font color="#E5E5E5"> those and it will</font>

1328
00:49:23,810 --> 00:49:26,810
<font color="#E5E5E5">know that when I see these packets</font><font color="#CCCCCC"> then</font>

1329
00:49:25,400 --> 00:49:28,520
shortly<font color="#E5E5E5"> after that I'll transmit my</font>

1330
00:49:26,810 --> 00:49:30,140
packets then if you were to<font color="#CCCCCC"> move the</font>

1331
00:49:28,520 --> 00:49:31,759
<font color="#E5E5E5">mouse the</font><font color="#CCCCCC"> mouse would be another two</font>

1332
00:49:30,140 --> 00:49:33,140
milliseconds after<font color="#E5E5E5"> the keyboard packets</font>

1333
00:49:31,760 --> 00:49:35,780
<font color="#CCCCCC">so it allows you</font><font color="#E5E5E5"> to have three devices</font>

1334
00:49:33,140 --> 00:49:45,740
<font color="#E5E5E5">sharing the same physical frequency</font>

1335
00:49:35,780 --> 00:49:48,950
<font color="#CCCCCC">Channel right</font><font color="#E5E5E5"> yeah</font><font color="#CCCCCC"> for Cap's logins and</font>

1336
00:49:45,740 --> 00:49:50,540
<font color="#CCCCCC">such yeah so now that we know that</font><font color="#E5E5E5"> these</font>

1337
00:49:48,950 --> 00:49:52,399
devices are transmitting on a single

1338
00:49:50,540 --> 00:49:54,170
channel we know the modulation type<font color="#E5E5E5"> we</font>

1339
00:49:52,400 --> 00:49:56,000
can<font color="#E5E5E5"> start to demodulate the data and see</font>

1340
00:49:54,170 --> 00:49:57,980
what bits we get out and the problem is

1341
00:49:56,000 --> 00:49:59,690
<font color="#E5E5E5">because we only really care about what</font>

1342
00:49:57,980 --> 00:50:00,860
the keyboard<font color="#E5E5E5"> is transmitting we first</font>

1343
00:49:59,690 --> 00:50:02,780
need to<font color="#E5E5E5"> figure out what the dongle is</font>

1344
00:50:00,860 --> 00:50:04,790
transmitting so we can<font color="#E5E5E5"> ignore</font><font color="#CCCCCC"> that</font><font color="#E5E5E5"> so</font>

1345
00:50:02,780 --> 00:50:06,860
this<font color="#CCCCCC"> is a simple gif Esqueda</font><font color="#E5E5E5"> modulator</font>

1346
00:50:04,790 --> 00:50:08,630
flow graph<font color="#E5E5E5"> so</font><font color="#CCCCCC"> we start with our USRP</font>

1347
00:50:06,860 --> 00:50:10,280
source<font color="#E5E5E5"> getting data in from the SDR</font>

1348
00:50:08,630 --> 00:50:12,020
<font color="#E5E5E5">go through a low-pass filter to filter</font>

1349
00:50:10,280 --> 00:50:14,030
out anything<font color="#E5E5E5"> outside</font><font color="#CCCCCC"> of the channel</font>

1350
00:50:12,020 --> 00:50:15,860
<font color="#E5E5E5">we're looking at we run it through the</font>

1351
00:50:14,030 --> 00:50:18,530
<font color="#CCCCCC">gfs SCADA modulator block and this block</font>

1352
00:50:15,860 --> 00:50:20,480
<font color="#E5E5E5">just turns radio waves into bits that we</font>

1353
00:50:18,530 --> 00:50:23,750
can play<font color="#E5E5E5"> with and then we write those to</font>

1354
00:50:20,480 --> 00:50:25,460
a file<font color="#E5E5E5"> on</font><font color="#CCCCCC"> disk</font><font color="#E5E5E5"> and I'm a big fan of</font>

1355
00:50:23,750 --> 00:50:27,890
<font color="#CCCCCC">using just common</font><font color="#E5E5E5"> linux command line</font>

1356
00:50:25,460 --> 00:50:29,810
tools<font color="#E5E5E5"> for parsing these files and</font>

1357
00:50:27,890 --> 00:50:31,730
looking for packets<font color="#E5E5E5"> and as we learned</font>

1358
00:50:29,810 --> 00:50:33,619
<font color="#E5E5E5">earlier a preamble is usually</font>

1359
00:50:31,730 --> 00:50:35,300
alternating ones or<font color="#CCCCCC"> zeros sometimes it</font>

1360
00:50:33,619 --> 00:50:37,940
could<font color="#CCCCCC"> be all ones or sometimes all</font><font color="#E5E5E5"> zeros</font>

1361
00:50:35,300 --> 00:50:39,830
<font color="#CCCCCC">so we can send this demodulated data</font>

1362
00:50:37,940 --> 00:50:41,750
that was output<font color="#E5E5E5"> from the new radio do</font>

1363
00:50:39,830 --> 00:50:43,670
the xxd command<font color="#E5E5E5"> this</font><font color="#CCCCCC"> will give us</font><font color="#E5E5E5"> a</font>

1364
00:50:41,750 --> 00:50:45,290
standard out print of the hex characters

1365
00:50:43,670 --> 00:50:47,150
<font color="#E5E5E5">representing the bytes in that file</font>

1366
00:50:45,290 --> 00:50:49,100
and because alternating ones or zeros

1367
00:50:47,150 --> 00:50:51,350
are either the hex character a or<font color="#CCCCCC"> v and</font>

1368
00:50:49,100 --> 00:50:53,509
all ones are all zeros are either<font color="#E5E5E5"> FF or</font>

1369
00:50:51,350 --> 00:50:55,490
<font color="#CCCCCC">zero zero we can just grep for those hex</font>

1370
00:50:53,510 --> 00:50:56,930
characters<font color="#E5E5E5"> where we would find the</font>

1371
00:50:55,490 --> 00:50:58,580
preamble and then we can look<font color="#E5E5E5"> for</font><font color="#CCCCCC"> the</font>

1372
00:50:56,930 --> 00:51:00,350
next<font color="#CCCCCC"> eight characters after</font><font color="#E5E5E5"> that which</font>

1373
00:50:58,580 --> 00:51:01,819
would<font color="#E5E5E5"> be</font><font color="#CCCCCC"> four bytes that's</font><font color="#E5E5E5"> a reasonable</font>

1374
00:51:00,350 --> 00:51:03,290
length or an<font color="#CCCCCC"> address</font><font color="#E5E5E5"> and then we can</font>

1375
00:51:01,820 --> 00:51:04,910
just<font color="#E5E5E5"> see what's repeated over and over</font>

1376
00:51:03,290 --> 00:51:06,680
<font color="#E5E5E5">again</font><font color="#CCCCCC"> and the output file and sort</font><font color="#E5E5E5"> by</font>

1377
00:51:04,910 --> 00:51:09,440
the unique counts and we run this

1378
00:51:06,680 --> 00:51:11,299
command<font color="#E5E5E5"> and we</font><font color="#CCCCCC"> oh</font><font color="#E5E5E5"> sorry the rights</font>

1379
00:51:09,440 --> 00:51:14,119
<font color="#CCCCCC">counsel account we get this output here</font>

1380
00:51:11,300 --> 00:51:15,859
<font color="#CCCCCC">and this is going</font><font color="#E5E5E5"> to be the packets that</font>

1381
00:51:14,119 --> 00:51:18,080
are<font color="#E5E5E5"> transmitted</font><font color="#CCCCCC"> by the dongle so we have</font>

1382
00:51:15,859 --> 00:51:19,850
four<font color="#E5E5E5"> EPS a bunch of</font><font color="#CCCCCC"> A's</font><font color="#E5E5E5"> and then four</font>

1383
00:51:18,080 --> 00:51:21,440
bytes so that's going<font color="#E5E5E5"> to be a long</font>

1384
00:51:19,850 --> 00:51:23,089
preamble<font color="#E5E5E5"> and then four bytes which are</font>

1385
00:51:21,440 --> 00:51:24,230
going<font color="#CCCCCC"> to be</font><font color="#E5E5E5"> either an address or at</font>

1386
00:51:23,090 --> 00:51:25,790
least the first<font color="#E5E5E5"> four bytes of the</font>

1387
00:51:24,230 --> 00:51:26,900
<font color="#E5E5E5">Dauntless transmitting and this is</font>

1388
00:51:25,790 --> 00:51:28,759
pretty<font color="#E5E5E5"> great</font><font color="#CCCCCC"> to get</font><font color="#E5E5E5"> then we can</font>

1389
00:51:26,900 --> 00:51:31,309
another capture<font color="#E5E5E5"> with the keyboard</font><font color="#CCCCCC"> and</font>

1390
00:51:28,760 --> 00:51:34,130
dongle<font color="#E5E5E5"> we can use said to just replace</font>

1391
00:51:31,309 --> 00:51:36,049
the dongle packets from<font color="#E5E5E5"> the dongle</font><font color="#CCCCCC"> bus</font>

1392
00:51:34,130 --> 00:51:37,730
keyboard packets and then<font color="#E5E5E5"> we have a file</font>

1393
00:51:36,049 --> 00:51:39,529
<font color="#E5E5E5">that has presumably only the packets</font>

1394
00:51:37,730 --> 00:51:41,270
<font color="#E5E5E5">that are sent by the keyboard so we can</font>

1395
00:51:39,529 --> 00:51:42,200
run that grep command again and<font color="#E5E5E5"> now we</font>

1396
00:51:41,270 --> 00:51:43,910
have<font color="#E5E5E5"> something different we have a</font>

1397
00:51:42,200 --> 00:51:45,859
shorter preamble<font color="#E5E5E5"> and then we have</font>

1398
00:51:43,910 --> 00:51:48,078
slightly<font color="#E5E5E5"> different address bytes</font><font color="#CCCCCC"> or</font>

1399
00:51:45,859 --> 00:51:49,970
first<font color="#CCCCCC"> four bytes of the</font><font color="#E5E5E5"> frames at the</font>

1400
00:51:48,079 --> 00:51:53,150
keyboard<font color="#CCCCCC"> ascending so then we can</font><font color="#E5E5E5"> take</font>

1401
00:51:49,970 --> 00:51:54,709
this sequence we can grep<font color="#E5E5E5"> for this</font>

1402
00:51:53,150 --> 00:51:56,960
sequence plus some<font color="#CCCCCC"> additional bytes and</font>

1403
00:51:54,710 --> 00:51:58,579
find the longest repeating sequences we

1404
00:51:56,960 --> 00:52:00,470
see and that's<font color="#CCCCCC"> going</font><font color="#E5E5E5"> to likely be what</font>

1405
00:51:58,579 --> 00:52:02,089
the<font color="#E5E5E5"> keyboard is sending so we do this</font>

1406
00:52:00,470 --> 00:52:04,220
and<font color="#CCCCCC"> we have the set of packets</font><font color="#E5E5E5"> which are</font>

1407
00:52:02,089 --> 00:52:05,930
<font color="#CCCCCC">repeated</font><font color="#E5E5E5"> a bunch of time to the file and</font>

1408
00:52:04,220 --> 00:52:07,759
<font color="#E5E5E5">now we can</font><font color="#CCCCCC"> use our normal</font><font color="#E5E5E5"> packet format</font>

1409
00:52:05,930 --> 00:52:08,058
analysis<font color="#E5E5E5"> skills to figure out what's in</font>

1410
00:52:07,760 --> 00:52:09,260
here

1411
00:52:08,059 --> 00:52:11,539
so we start<font color="#E5E5E5"> with the preamble</font><font color="#CCCCCC"> and</font>

1412
00:52:09,260 --> 00:52:13,190
address a sequence number<font color="#E5E5E5"> a frame types</font>

1413
00:52:11,539 --> 00:52:14,599
in<font color="#E5E5E5"> this case it means a key press we</font>

1414
00:52:13,190 --> 00:52:16,190
then have a<font color="#CCCCCC"> keystroke</font><font color="#E5E5E5"> which</font><font color="#CCCCCC"> is the</font>

1415
00:52:14,599 --> 00:52:18,799
actual key being typed and we have a

1416
00:52:16,190 --> 00:52:21,589
<font color="#E5E5E5">16-bit</font><font color="#CCCCCC"> CRC now it's kind of fun here is</font>

1417
00:52:18,799 --> 00:52:23,059
we<font color="#E5E5E5"> barely touched a radio we can say we</font>

1418
00:52:21,589 --> 00:52:24,349
haven't<font color="#CCCCCC"> written any code outside</font><font color="#E5E5E5"> of</font>

1419
00:52:23,059 --> 00:52:25,819
dragging<font color="#E5E5E5"> and dropping some stuff</font><font color="#CCCCCC"> onto</font>

1420
00:52:24,349 --> 00:52:26,930
the new radio flow graph<font color="#E5E5E5"> and</font><font color="#CCCCCC"> it's</font>

1421
00:52:25,819 --> 00:52:29,990
allowed us<font color="#E5E5E5"> to go from knowing</font><font color="#CCCCCC"> nothing</font>

1422
00:52:26,930 --> 00:52:31,308
<font color="#E5E5E5">about the device to knowing exactly what</font>

1423
00:52:29,990 --> 00:52:33,500
the packet format is at a sends

1424
00:52:31,309 --> 00:52:35,480
<font color="#E5E5E5">over-the-air and this is because people</font>

1425
00:52:33,500 --> 00:52:37,069
much smarter<font color="#CCCCCC"> than</font><font color="#E5E5E5"> me have built out</font><font color="#CCCCCC"> this</font>

1426
00:52:35,480 --> 00:52:38,359
great<font color="#CCCCCC"> ecosystem of tools to</font><font color="#E5E5E5"> make it</font>

1427
00:52:37,069 --> 00:52:40,400
possible to<font color="#CCCCCC"> leverage open</font><font color="#E5E5E5"> source</font>

1428
00:52:38,359 --> 00:52:43,759
<font color="#E5E5E5">intelligence and these open source tools</font>

1429
00:52:40,400 --> 00:52:45,109
to really get away<font color="#CCCCCC"> from</font><font color="#E5E5E5"> all the radio</font>

1430
00:52:43,760 --> 00:52:49,339
stuff<font color="#E5E5E5"> and treat</font><font color="#CCCCCC"> it like a normal</font>

1431
00:52:45,109 --> 00:52:51,770
software<font color="#E5E5E5"> versus</font><font color="#CCCCCC"> iam problem okay so</font>

1432
00:52:49,339 --> 00:52:53,960
let's let's draw some conclusions<font color="#E5E5E5"> and</font>

1433
00:52:51,770 --> 00:52:55,730
tell us all up<font color="#CCCCCC"> so we proposed this</font>

1434
00:52:53,960 --> 00:52:57,829
reverse engineering methodology<font color="#E5E5E5"> that</font>

1435
00:52:55,730 --> 00:53:00,559
<font color="#E5E5E5">we've shown can</font><font color="#CCCCCC"> be applied to a number</font>

1436
00:52:57,829 --> 00:53:01,760
of<font color="#CCCCCC"> Wireless</font><font color="#E5E5E5"> Phi's</font><font color="#CCCCCC"> to make the process of</font>

1437
00:53:00,559 --> 00:53:04,190
reverse engineering<font color="#CCCCCC"> them quite a</font><font color="#E5E5E5"> bit</font>

1438
00:53:01,760 --> 00:53:05,839
simpler<font color="#E5E5E5"> so we've established that all</font>

1439
00:53:04,190 --> 00:53:08,029
three<font color="#E5E5E5"> of these Phi's share this common</font>

1440
00:53:05,839 --> 00:53:09,950
<font color="#E5E5E5">notion of a channel whether it was</font>

1441
00:53:08,029 --> 00:53:13,579
<font color="#CCCCCC">on-off keying</font><font color="#E5E5E5"> pulse width modulation or</font>

1442
00:53:09,950 --> 00:53:15,919
FSK<font color="#CCCCCC"> they all occupy some some predefined</font>

1443
00:53:13,579 --> 00:53:19,520
<font color="#CCCCCC">you know</font><font color="#E5E5E5"> amount of spectrum</font><font color="#CCCCCC"> that can</font><font color="#E5E5E5"> be</font>

1444
00:53:15,920 --> 00:53:21,049
<font color="#E5E5E5">characterized they all use mod they all</font>

1445
00:53:19,520 --> 00:53:22,520
use some some type of<font color="#E5E5E5"> modulation and</font>

1446
00:53:21,049 --> 00:53:23,960
this is the<font color="#E5E5E5"> biggest variable but by</font>

1447
00:53:22,520 --> 00:53:25,640
relying on open<font color="#E5E5E5"> source</font><font color="#CCCCCC"> intelligence we</font>

1448
00:53:23,960 --> 00:53:28,730
can<font color="#CCCCCC"> make the</font><font color="#E5E5E5"> process of discovering it</font>

1449
00:53:25,640 --> 00:53:30,640
easy<font color="#E5E5E5"> all three files share this common</font>

1450
00:53:28,730 --> 00:53:32,630
notion of<font color="#E5E5E5"> discrete symbol timing and</font>

1451
00:53:30,640 --> 00:53:33,980
again we can rely on<font color="#E5E5E5"> open source</font>

1452
00:53:32,630 --> 00:53:36,529
intelligence<font color="#E5E5E5"> to discover that as well</font>

1453
00:53:33,980 --> 00:53:39,650
and when that fails<font color="#E5E5E5"> we</font><font color="#CCCCCC"> can discover it</font>

1454
00:53:36,529 --> 00:53:40,670
empirically all three files<font color="#E5E5E5"> contain</font>

1455
00:53:39,650 --> 00:53:42,230
synchronization feature

1456
00:53:40,670 --> 00:53:44,150
<font color="#CCCCCC">just being a preamble into sort of frame</font>

1457
00:53:42,230 --> 00:53:45,859
delimiter<font color="#CCCCCC"> and although</font><font color="#E5E5E5"> they look</font>

1458
00:53:44,150 --> 00:53:48,230
different<font color="#CCCCCC"> you know for each different</font>

1459
00:53:45,859 --> 00:53:49,700
<font color="#CCCCCC">fly they're all there you know what to</font>

1460
00:53:48,230 --> 00:53:50,930
look<font color="#E5E5E5"> for and then you can leverage them</font>

1461
00:53:49,700 --> 00:53:53,480
all the same way<font color="#CCCCCC"> to aid in the process</font>

1462
00:53:50,930 --> 00:53:55,069
<font color="#E5E5E5">of</font><font color="#CCCCCC"> framing and decoding</font><font color="#E5E5E5"> your data and</font>

1463
00:53:53,480 --> 00:53:56,900
then<font color="#E5E5E5"> once you get to step</font><font color="#CCCCCC"> five</font>

1464
00:53:55,069 --> 00:53:58,549
extracting<font color="#E5E5E5"> the symbols you have bits on</font>

1465
00:53:56,900 --> 00:54:00,890
a disk<font color="#CCCCCC"> right</font><font color="#E5E5E5"> and since you're here</font>

1466
00:53:58,549 --> 00:54:03,290
<font color="#E5E5E5">hacking</font><font color="#CCCCCC"> the box</font><font color="#E5E5E5"> you know you</font><font color="#CCCCCC"> probably</font>

1467
00:54:00,890 --> 00:54:04,670
<font color="#CCCCCC">had these skills</font><font color="#E5E5E5"> so</font><font color="#CCCCCC"> you</font><font color="#E5E5E5"> can apply the</font>

1468
00:54:03,290 --> 00:54:06,740
skills<font color="#CCCCCC"> that</font><font color="#E5E5E5"> you have traditional</font>

1469
00:54:04,670 --> 00:54:08,150
<font color="#E5E5E5">software and network analysis skills to</font>

1470
00:54:06,740 --> 00:54:10,609
these wireless protocols by leveraging

1471
00:54:08,150 --> 00:54:12,500
<font color="#E5E5E5">this open source intelligence and all</font>

1472
00:54:10,609 --> 00:54:14,750
these<font color="#E5E5E5"> tools to make the process of going</font>

1473
00:54:12,500 --> 00:54:17,420
from RF to<font color="#CCCCCC"> well-understood</font><font color="#E5E5E5"> protocol</font>

1474
00:54:14,750 --> 00:54:19,010
quite a bit<font color="#E5E5E5"> easier</font><font color="#CCCCCC"> so we've shown that</font>

1475
00:54:17,420 --> 00:54:21,440
we're able to<font color="#E5E5E5"> apply the same process</font>

1476
00:54:19,010 --> 00:54:23,930
<font color="#E5E5E5">across these three different</font><font color="#CCCCCC"> thighs to</font>

1477
00:54:21,440 --> 00:54:25,640
make the to make the<font color="#CCCCCC"> process of reverse</font>

1478
00:54:23,930 --> 00:54:29,540
<font color="#CCCCCC">engineering</font><font color="#E5E5E5"> these protocols quite a bit</font>

1479
00:54:25,640 --> 00:54:31,308
<font color="#E5E5E5">easier so to wrap up these disparate</font>

1480
00:54:29,540 --> 00:54:33,970
wireless systems can be rationalized and

1481
00:54:31,309 --> 00:54:35,660
understood by applying process to them

1482
00:54:33,970 --> 00:54:39,439
additionally open source<font color="#E5E5E5"> intelligence</font>

1483
00:54:35,660 --> 00:54:43,819
will help you<font color="#E5E5E5"> bypass the really really</font>

1484
00:54:39,440 --> 00:54:45,770
<font color="#E5E5E5">brainy radio and you know complex domain</font>

1485
00:54:43,819 --> 00:54:47,540
specific parts<font color="#CCCCCC"> of</font><font color="#E5E5E5"> the problem you can</font>

1486
00:54:45,770 --> 00:54:50,210
rely on<font color="#E5E5E5"> existing tools and public</font>

1487
00:54:47,540 --> 00:54:52,308
information<font color="#E5E5E5"> to make that</font><font color="#CCCCCC"> easy</font><font color="#E5E5E5"> and then</font>

1488
00:54:50,210 --> 00:54:53,990
once you've demodulated<font color="#E5E5E5"> you have bits on</font>

1489
00:54:52,309 --> 00:54:56,510
a disk<font color="#CCCCCC"> that</font><font color="#E5E5E5"> you can parse through using</font>

1490
00:54:53,990 --> 00:54:57,470
any mechanism that you please and one

1491
00:54:56,510 --> 00:54:59,809
last thought that we want to<font color="#CCCCCC"> leave you</font>

1492
00:54:57,470 --> 00:55:02,540
<font color="#CCCCCC">with as we know the Internet of Things</font>

1493
00:54:59,809 --> 00:55:04,339
is full of holes<font color="#CCCCCC"> and it's up to you guys</font>

1494
00:55:02,540 --> 00:55:06,049
to<font color="#E5E5E5"> find them right</font><font color="#CCCCCC"> the only</font><font color="#E5E5E5"> way</font><font color="#CCCCCC"> that</font><font color="#E5E5E5"> I</font>

1495
00:55:04,339 --> 00:55:09,230
<font color="#E5E5E5">ot Security's you can get better is</font><font color="#CCCCCC"> if</font>

1496
00:55:06,049 --> 00:55:10,430
we start to look look more critically<font color="#CCCCCC"> at</font>

1497
00:55:09,230 --> 00:55:13,069
these different<font color="#CCCCCC"> systems</font><font color="#E5E5E5"> and protocols</font>

1498
00:55:10,430 --> 00:55:15,440
<font color="#E5E5E5">and find out how their other week so</font>

1499
00:55:13,069 --> 00:55:16,910
that<font color="#E5E5E5"> we can start making them better so</font>

1500
00:55:15,440 --> 00:55:18,290
that thank<font color="#CCCCCC"> you</font><font color="#E5E5E5"> for your attention</font>

1501
00:55:16,910 --> 00:55:19,279
<font color="#E5E5E5">and we'll be happy</font><font color="#CCCCCC"> to take your</font>

1502
00:55:18,290 --> 00:55:20,440
questions with<font color="#E5E5E5"> the time that we have</font>

1503
00:55:19,280 --> 00:55:26,269
<font color="#CCCCCC">left</font>

1504
00:55:20,440 --> 00:55:28,799
[Applause]

1505
00:55:26,269 --> 00:55:33,890
<font color="#CCCCCC">thank you madam mark</font><font color="#E5E5E5"> so it is for</font>

1506
00:55:28,799 --> 00:55:36,359
<font color="#E5E5E5">question number</font><font color="#CCCCCC"> one hi so recently those</font>

1507
00:55:33,890 --> 00:55:38,459
<font color="#E5E5E5">piece of software is called</font><font color="#CCCCCC"> universal</font>

1508
00:55:36,359 --> 00:55:41,130
<font color="#E5E5E5">radio</font><font color="#CCCCCC"> haka</font><font color="#E5E5E5"> what's your opinion on that</font>

1509
00:55:38,459 --> 00:55:42,959
<font color="#CCCCCC">because it claims</font><font color="#E5E5E5"> to put all these</font>

1510
00:55:41,130 --> 00:55:45,930
<font color="#E5E5E5">fronts under one single piece of</font>

1511
00:55:42,959 --> 00:55:46,919
<font color="#E5E5E5">software not</font><font color="#CCCCCC"> I</font><font color="#E5E5E5"> haven't</font><font color="#CCCCCC"> had an</font>

1512
00:55:45,930 --> 00:55:48,390
<font color="#CCCCCC">opportunity</font><font color="#E5E5E5"> to play with it yet</font>

1513
00:55:46,920 --> 00:55:49,859
unfortunately<font color="#E5E5E5"> you can you repeat the</font>

1514
00:55:48,390 --> 00:55:51,629
<font color="#CCCCCC">name one more</font><font color="#E5E5E5"> time</font><font color="#CCCCCC"> uh you know it's</font>

1515
00:55:49,859 --> 00:55:54,808
still a radio hacker it's under a

1516
00:55:51,630 --> 00:55:56,729
<font color="#E5E5E5">project called</font><font color="#CCCCCC"> urh on github okay</font>

1517
00:55:54,809 --> 00:55:59,009
<font color="#E5E5E5">ah take</font><font color="#CCCCCC"> a look at it I know there have</font>

1518
00:55:56,729 --> 00:56:00,749
been there have been some<font color="#E5E5E5"> there's been</font>

1519
00:55:59,009 --> 00:56:03,839
some open source<font color="#E5E5E5"> research on doing</font>

1520
00:56:00,749 --> 00:56:05,819
automatic automatic demodulation<font color="#CCCCCC"> I know</font>

1521
00:56:03,839 --> 00:56:07,739
there<font color="#E5E5E5"> was a a paper that</font><font color="#CCCCCC"> came out of I</font>

1522
00:56:05,819 --> 00:56:10,140
<font color="#E5E5E5">think any radio</font><font color="#CCCCCC"> conference here two ago</font>

1523
00:56:07,739 --> 00:56:12,029
it<font color="#CCCCCC"> was using I think neural nets to do</font>

1524
00:56:10,140 --> 00:56:14,038
automatic modulation recognition<font color="#E5E5E5"> and</font>

1525
00:56:12,029 --> 00:56:16,890
then I know<font color="#CCCCCC"> it's MOOC on</font><font color="#E5E5E5"> there is a tool</font>

1526
00:56:14,039 --> 00:56:18,119
<font color="#CCCCCC">that was released</font><font color="#E5E5E5"> that that would have</font>

1527
00:56:16,890 --> 00:56:20,640
made the<font color="#CCCCCC"> process of doing automatic</font>

1528
00:56:18,119 --> 00:56:23,249
demodulation of FSK and<font color="#CCCCCC"> on-off keying</font>

1529
00:56:20,640 --> 00:56:26,549
signals<font color="#E5E5E5"> could have been easier</font><font color="#CCCCCC"> I haven't</font>

1530
00:56:23,249 --> 00:56:27,718
played with<font color="#E5E5E5"> any of the real modern tools</font>

1531
00:56:26,549 --> 00:56:30,749
that have come out<font color="#CCCCCC"> but I know that some</font>

1532
00:56:27,719 --> 00:56:31,650
of<font color="#E5E5E5"> the early attempts</font><font color="#CCCCCC"> that were not</font>

1533
00:56:30,749 --> 00:56:33,988
super reliable

1534
00:56:31,650 --> 00:56:36,359
<font color="#CCCCCC">I have not what good you are a cheetah</font>

1535
00:56:33,989 --> 00:56:38,880
<font color="#E5E5E5">but from what I can understand</font><font color="#CCCCCC"> it's not</font>

1536
00:56:36,359 --> 00:56:42,380
<font color="#E5E5E5">automatic either it's just it's like in</font>

1537
00:56:38,880 --> 00:56:45,619
spectrum but you can be<font color="#CCCCCC"> modulated</font>

1538
00:56:42,380 --> 00:56:51,630
manually<font color="#E5E5E5"> and it</font><font color="#CCCCCC"> shows you</font><font color="#E5E5E5"> the bitstream</font>

1539
00:56:45,619 --> 00:56:54,599
<font color="#CCCCCC">individually</font><font color="#E5E5E5"> so cool particularly thank</font>

1540
00:56:51,630 --> 00:56:56,160
you people talk one moment<font color="#E5E5E5"> your</font>

1541
00:56:54,599 --> 00:56:59,339
methodology<font color="#CCCCCC"> that</font><font color="#E5E5E5"> might not be clear</font><font color="#CCCCCC"> to</font>

1542
00:56:56,160 --> 00:57:02,399
<font color="#E5E5E5">everybody so between the modulation or</font>

1543
00:56:59,339 --> 00:57:05,339
<font color="#CCCCCC">demodulation</font><font color="#E5E5E5"> and actual bytes normally</font>

1544
00:57:02,400 --> 00:57:07,349
there also is an encoding or decoding<font color="#E5E5E5"> so</font>

1545
00:57:05,339 --> 00:57:09,328
how do you find that<font color="#E5E5E5"> in a</font><font color="#CCCCCC"> wireless</font>

1546
00:57:07,349 --> 00:57:10,890
protocol<font color="#E5E5E5"> when</font><font color="#CCCCCC"> you have a wired protocol</font>

1547
00:57:09,329 --> 00:57:12,779
<font color="#E5E5E5">it's sort of okay we know that</font><font color="#CCCCCC"> there's</font>

1548
00:57:10,890 --> 00:57:16,109
like Manchester<font color="#CCCCCC"> encoding we know like</font>

1549
00:57:12,779 --> 00:57:17,969
<font color="#E5E5E5">low level of signal is</font><font color="#CCCCCC"> zero and high</font><font color="#E5E5E5"> one</font>

1550
00:57:16,109 --> 00:57:19,410
<font color="#E5E5E5">or</font><font color="#CCCCCC"> wiser also how do you do</font><font color="#E5E5E5"> that in</font>

1551
00:57:17,969 --> 00:57:23,609
<font color="#CCCCCC">Wireless</font><font color="#E5E5E5"> yes so that's a great question</font>

1552
00:57:19,410 --> 00:57:25,140
<font color="#CCCCCC">so you can apply similar</font><font color="#E5E5E5"> methods that</font>

1553
00:57:23,609 --> 00:57:27,569
<font color="#E5E5E5">you might apply to recognizing the</font>

1554
00:57:25,140 --> 00:57:28,890
amount<font color="#CCCCCC"> of wire to wireless and</font><font color="#E5E5E5"> there are</font>

1555
00:57:27,569 --> 00:57:29,989
two examples<font color="#CCCCCC"> that I'll point to</font><font color="#E5E5E5"> if you</font>

1556
00:57:28,890 --> 00:57:32,788
want<font color="#E5E5E5"> to do some further reading on this</font>

1557
00:57:29,989 --> 00:57:34,380
<font color="#CCCCCC">we just gave another variant of</font><font color="#E5E5E5"> this</font>

1558
00:57:32,789 --> 00:57:36,689
talk at troopers about three weeks ago

1559
00:57:34,380 --> 00:57:37,500
<font color="#E5E5E5">and we showed off you know completely</font>

1560
00:57:36,689 --> 00:57:39,089
the

1561
00:57:37,500 --> 00:57:40,920
the first 20 minutes<font color="#E5E5E5"> were approximately</font>

1562
00:57:39,090 --> 00:57:42,600
the same but all the demos were

1563
00:57:40,920 --> 00:57:45,600
different we looked at<font color="#E5E5E5"> different devices</font>

1564
00:57:42,600 --> 00:57:46,770
<font color="#E5E5E5">different flies and one of the devices</font>

1565
00:57:45,600 --> 00:57:51,060
<font color="#E5E5E5">that we looked at was</font><font color="#CCCCCC"> a Manchester</font>

1566
00:57:46,770 --> 00:57:53,430
encoded FSK signal so and you<font color="#E5E5E5"> know what</font>

1567
00:57:51,060 --> 00:57:54,930
<font color="#CCCCCC">what was the critical thing that clued</font>

1568
00:57:53,430 --> 00:57:56,970
us<font color="#CCCCCC"> off to it being Manchester encoded</font>

1569
00:57:54,930 --> 00:57:58,560
was a discrepancy between we<font color="#E5E5E5"> were</font>

1570
00:57:56,970 --> 00:58:01,379
observing<font color="#CCCCCC"> over-the-air</font><font color="#E5E5E5"> versus what was</font>

1571
00:57:58,560 --> 00:58:02,640
in the test report so<font color="#E5E5E5"> you might want to</font>

1572
00:58:01,380 --> 00:58:04,170
go take a<font color="#E5E5E5"> look at the video from that</font>

1573
00:58:02,640 --> 00:58:07,700
<font color="#E5E5E5">talk and you know we go through</font><font color="#CCCCCC"> in a</font>

1574
00:58:04,170 --> 00:58:10,380
little<font color="#E5E5E5"> more detail obviously</font><font color="#CCCCCC"> that's just</font>

1575
00:58:07,700 --> 00:58:13,230
<font color="#E5E5E5">that's a fairly straightforward</font><font color="#CCCCCC"> encoding</font>

1576
00:58:10,380 --> 00:58:14,640
example<font color="#E5E5E5"> there are</font><font color="#CCCCCC"> other protocols that</font>

1577
00:58:13,230 --> 00:58:16,950
use quite a<font color="#E5E5E5"> bit more encoding for</font>

1578
00:58:14,640 --> 00:58:20,040
example Laura<font color="#CCCCCC"> the</font><font color="#E5E5E5"> encoding on that was</font>

1579
00:58:16,950 --> 00:58:21,960
was<font color="#E5E5E5"> fairly involved and you know it</font>

1580
00:58:20,040 --> 00:58:24,180
<font color="#E5E5E5">involves I'd say working through it</font>

1581
00:58:21,960 --> 00:58:25,980
<font color="#E5E5E5">really just involves using the open</font>

1582
00:58:24,180 --> 00:58:28,440
source<font color="#E5E5E5"> knowledge you have open source</font>

1583
00:58:25,980 --> 00:58:31,020
information<font color="#CCCCCC"> you have and</font><font color="#E5E5E5"> just really</font>

1584
00:58:28,440 --> 00:58:32,340
structuring your iteration through all

1585
00:58:31,020 --> 00:58:36,780
the different<font color="#CCCCCC"> permutations that</font><font color="#E5E5E5"> it could</font>

1586
00:58:32,340 --> 00:58:40,110
be so I hope<font color="#CCCCCC"> that</font><font color="#E5E5E5"> addresses your</font>

1587
00:58:36,780 --> 00:58:42,360
question<font color="#CCCCCC"> okay last question</font><font color="#E5E5E5"> over</font><font color="#CCCCCC"> here</font>

1588
00:58:40,110 --> 00:58:42,780
<font color="#CCCCCC">and</font><font color="#E5E5E5"> then we've</font><font color="#CCCCCC"> got to go</font><font color="#E5E5E5"> to the next</font>

1589
00:58:42,360 --> 00:58:44,820
<font color="#CCCCCC">thing</font>

1590
00:58:42,780 --> 00:58:46,830
it's<font color="#E5E5E5"> not questions as</font><font color="#CCCCCC"> remarked like when</font>

1591
00:58:44,820 --> 00:58:49,950
<font color="#E5E5E5">you record something you can also often</font>

1592
00:58:46,830 --> 00:58:52,529
<font color="#E5E5E5">on the radio IRC you can post just your</font>

1593
00:58:49,950 --> 00:58:54,390
capture<font color="#E5E5E5"> and people will be very helpful</font>

1594
00:58:52,530 --> 00:58:57,270
saying oh this<font color="#E5E5E5"> is FSK or this I</font>

1595
00:58:54,390 --> 00:58:58,799
<font color="#CCCCCC">recognise this so the</font><font color="#E5E5E5"> Internet is</font><font color="#CCCCCC"> also a</font>

1596
00:58:57,270 --> 00:59:00,210
great source for<font color="#E5E5E5"> it</font>

1597
00:58:58,800 --> 00:59:01,920
<font color="#CCCCCC">you could add great community around</font>

1598
00:59:00,210 --> 00:59:04,350
<font color="#E5E5E5">this kind</font><font color="#CCCCCC"> of stuff for sure</font><font color="#E5E5E5"> yeah there's</font>

1599
00:59:01,920 --> 00:59:06,210
a lot of collaboration<font color="#CCCCCC"> as you say ok</font>

1600
00:59:04,350 --> 00:59:08,910
thanks again<font color="#CCCCCC"> mark and Matt if you've</font>

1601
00:59:06,210 --> 00:59:11,070
seen it<font color="#E5E5E5"> their email addresses are on</font>

1602
00:59:08,910 --> 00:59:13,379
somewhere at the<font color="#E5E5E5"> bottom of this last</font>

1603
00:59:11,070 --> 00:59:16,380
<font color="#E5E5E5">slide you</font><font color="#CCCCCC"> can of course find all the</font>

1604
00:59:13,380 --> 00:59:22,910
slides on<font color="#E5E5E5"> a hack in</font><font color="#CCCCCC"> the Box</font><font color="#E5E5E5"> website so</font>

1605
00:59:16,380 --> 00:59:24,010
they will be updated later<font color="#CCCCCC"> so that's it</font>

1606
00:59:22,910 --> 00:59:28,538
<font color="#E5E5E5">thank you</font>

1607
00:59:24,010 --> 00:59:28,539
[Applause]

