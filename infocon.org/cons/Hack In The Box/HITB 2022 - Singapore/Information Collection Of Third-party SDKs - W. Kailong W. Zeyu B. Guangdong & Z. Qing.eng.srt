1
00:00:05,960 --> 00:00:09,120
oh hi everyone uh good afternoon uh

2
00:00:09,120 --> 00:00:11,460
thanks for joining talk and I'm very

3
00:00:11,460 --> 00:00:13,700
honored to be the last one to present

4
00:00:13,700 --> 00:00:16,500
so um yeah so the

5
00:00:16,500 --> 00:00:18,240
um thank you for the introduction also

6
00:00:18,240 --> 00:00:21,539
um the title of our work uh is

7
00:00:21,539 --> 00:00:24,240
um import Library import a liability

8
00:00:24,240 --> 00:00:26,519
analyzing information collection of

9
00:00:26,519 --> 00:00:29,279
third-party live sdks

10
00:00:29,279 --> 00:00:32,820
so this is this is a work done by the

11
00:00:32,820 --> 00:00:34,860
collaboration between University and

12
00:00:34,860 --> 00:00:38,040
Industry I'm kylon from nus and I'll

13
00:00:38,040 --> 00:00:40,680
present more information in our group uh

14
00:00:40,680 --> 00:00:43,040
shortly

15
00:00:43,260 --> 00:00:45,000
um Before The Next Step here is a

16
00:00:45,000 --> 00:00:47,940
roadmap of our today's talk and first

17
00:00:47,940 --> 00:00:49,800
I'll introduce our team member then I

18
00:00:49,800 --> 00:00:51,899
quickly go through the background

19
00:00:51,899 --> 00:00:55,739
related to this work and then

20
00:00:55,739 --> 00:00:59,579
um I'll talk about SDK SDK related uh

21
00:00:59,579 --> 00:01:02,760
issues and that we focus on and then the

22
00:01:02,760 --> 00:01:05,640
technical details followed by that and

23
00:01:05,640 --> 00:01:09,260
lastly I'll conclude the talk

24
00:01:09,619 --> 00:01:13,380
so about us uh our team member has four

25
00:01:13,380 --> 00:01:16,140
members unfortunately due to the um

26
00:01:16,140 --> 00:01:19,020
travel Arrangements restrictions only I

27
00:01:19,020 --> 00:01:20,820
can make it here since I obviously in

28
00:01:20,820 --> 00:01:21,659
Singapore

29
00:01:21,659 --> 00:01:23,820
and we're working on the mobile security

30
00:01:23,820 --> 00:01:26,460
and privacy related research

31
00:01:26,460 --> 00:01:30,299
and Dr Bai is a senior senior lecturer

32
00:01:30,299 --> 00:01:33,479
in the University of Queensland and I am

33
00:01:33,479 --> 00:01:36,240
a postdoctoral researcher in nus and Mr

34
00:01:36,240 --> 00:01:39,720
Johnson and today you are from by dance

35
00:01:39,720 --> 00:01:42,060
research lab

36
00:01:42,060 --> 00:01:44,520
so the rest of the team member will be

37
00:01:44,520 --> 00:01:46,259
joining this session online and they're

38
00:01:46,259 --> 00:01:48,420
happy to answer any questions if you at

39
00:01:48,420 --> 00:01:51,320
the end of this session

40
00:01:51,659 --> 00:01:52,860
okay

41
00:01:52,860 --> 00:01:54,240
um

42
00:01:54,240 --> 00:01:58,439
so let's uh then uh next I'll I'll share

43
00:01:58,439 --> 00:02:00,560
some background information

44
00:02:00,560 --> 00:02:03,479
so personal data protection has been

45
00:02:03,479 --> 00:02:06,240
increasingly emphasized When developing

46
00:02:06,240 --> 00:02:08,699
applications so recent years has seen

47
00:02:08,699 --> 00:02:11,038
many uh private many privacy regulations

48
00:02:11,038 --> 00:02:13,800
enforced around the world such as pdpa

49
00:02:13,800 --> 00:02:16,739
here in Singapore CCPA in California and

50
00:02:16,739 --> 00:02:18,660
gdpr in Europe

51
00:02:18,660 --> 00:02:21,840
for example gdpr Article 5 has uh

52
00:02:21,840 --> 00:02:25,319
defined six data processing principles

53
00:02:25,319 --> 00:02:28,020
to guard the security and privacy when

54
00:02:28,020 --> 00:02:30,599
handling user private information as

55
00:02:30,599 --> 00:02:31,680
shown here

56
00:02:31,680 --> 00:02:34,680
so um they include lawfulness

57
00:02:34,680 --> 00:02:37,560
oh sorry can you see the pointer okay

58
00:02:37,560 --> 00:02:40,200
the first point is a lawfulness second

59
00:02:40,200 --> 00:02:42,660
is purpose limitation third is

60
00:02:42,660 --> 00:02:45,720
determining manage determinimization the

61
00:02:45,720 --> 00:02:47,700
force is accuracy

62
00:02:47,700 --> 00:02:50,700
fifth is a storage limitation in

63
00:02:50,700 --> 00:02:52,379
security

64
00:02:52,379 --> 00:02:54,239
so in for in particular the first

65
00:02:54,239 --> 00:02:57,239
principles are related to our work

66
00:02:57,239 --> 00:02:59,700
more specifically the loftiness which

67
00:02:59,700 --> 00:03:01,800
requires the personal information to be

68
00:03:01,800 --> 00:03:04,200
processed lawfully fairly and

69
00:03:04,200 --> 00:03:06,180
transparently and for the purpose

70
00:03:06,180 --> 00:03:07,700
limitation

71
00:03:07,700 --> 00:03:10,440
which requires the information to be

72
00:03:10,440 --> 00:03:13,560
collected for specific explicit and

73
00:03:13,560 --> 00:03:15,599
legitimate purposes

74
00:03:15,599 --> 00:03:18,300
and especially uh specifically the data

75
00:03:18,300 --> 00:03:20,700
processing information should be made

76
00:03:20,700 --> 00:03:24,799
clear and precise to the users

77
00:03:25,620 --> 00:03:29,040
so since the enforcement of gdpr huge

78
00:03:29,040 --> 00:03:31,620
amount of penalties has been applied to

79
00:03:31,620 --> 00:03:34,500
companies uh which fail to observe their

80
00:03:34,500 --> 00:03:36,659
regulation requirements running into

81
00:03:36,659 --> 00:03:39,180
like hundreds of millions of euros

82
00:03:39,180 --> 00:03:42,599
for just for one data controller

83
00:03:42,599 --> 00:03:44,459
um well here this data controller is

84
00:03:44,459 --> 00:03:45,860
actually the service provider which is

85
00:03:45,860 --> 00:03:48,840
also known the company

86
00:03:48,840 --> 00:03:52,500
um so the accumulative fines for gdpr in

87
00:03:52,500 --> 00:03:55,440
this in the first photo here

88
00:03:55,440 --> 00:03:56,280
um

89
00:03:56,280 --> 00:03:59,700
has been uh skyrocketing from 400 euros

90
00:03:59,700 --> 00:04:02,580
back in 2018 when the gdpr was just

91
00:04:02,580 --> 00:04:03,780
introduced

92
00:04:03,780 --> 00:04:06,239
and to a staggering of over 1.3 million

93
00:04:06,239 --> 00:04:10,980
a billion euros at the end of 2021.

94
00:04:10,980 --> 00:04:13,379
so from the table here on the right for

95
00:04:13,379 --> 00:04:14,879
example

96
00:04:14,879 --> 00:04:17,160
um we list top eight Target amounts of

97
00:04:17,160 --> 00:04:19,680
fines to the data controllers so far

98
00:04:19,680 --> 00:04:21,260
and the most

99
00:04:21,260 --> 00:04:25,020
involves the um violation of gdpr

100
00:04:25,020 --> 00:04:28,440
Article 5 and it's related data

101
00:04:28,440 --> 00:04:29,940
processing principles

102
00:04:29,940 --> 00:04:32,520
and not that

103
00:04:32,520 --> 00:04:34,380
um Define from a certain data controller

104
00:04:34,380 --> 00:04:38,580
in 2021 July there alone is over 100 700

105
00:04:38,580 --> 00:04:40,139
million dollars uh

106
00:04:40,139 --> 00:04:43,800
million Euros which makes Luxembourg the

107
00:04:43,800 --> 00:04:46,500
top country in terms of gdpr fines so

108
00:04:46,500 --> 00:04:48,680
far

109
00:04:49,259 --> 00:04:52,740
um so given the emphasis of privacy on

110
00:04:52,740 --> 00:04:55,979
legislation side the service vendors are

111
00:04:55,979 --> 00:04:58,919
taking actions to engage in the

112
00:04:58,919 --> 00:05:01,919
compliance to avoid this kind of

113
00:05:01,919 --> 00:05:04,800
um privacy related fines so one of the

114
00:05:04,800 --> 00:05:07,740
noticeable changes are the Privacy

115
00:05:07,740 --> 00:05:11,699
dashboard added to the operating systems

116
00:05:11,699 --> 00:05:14,280
so despite their capabilities to show

117
00:05:14,280 --> 00:05:16,940
the permissions and access

118
00:05:16,940 --> 00:05:20,639
accesses granted to the applications the

119
00:05:20,639 --> 00:05:23,720
detailed data collection behavior from

120
00:05:23,720 --> 00:05:27,479
these applications are still unknown

121
00:05:27,479 --> 00:05:30,660
for example the photo album access well

122
00:05:30,660 --> 00:05:34,620
well only let us know that when app was

123
00:05:34,620 --> 00:05:37,020
granted this kind of a permission

124
00:05:37,020 --> 00:05:40,320
but the um the the its activity for

125
00:05:40,320 --> 00:05:42,539
accessing the photos or which exact

126
00:05:42,539 --> 00:05:45,060
photos are being accessed are um or

127
00:05:45,060 --> 00:05:47,220
uploaded are still not known to the to

128
00:05:47,220 --> 00:05:49,199
the users

129
00:05:49,199 --> 00:05:51,120
and the detailed privacy issues are

130
00:05:51,120 --> 00:05:53,400
unable to be solved by just simply

131
00:05:53,400 --> 00:05:54,840
adding this kind of um previous

132
00:05:54,840 --> 00:05:57,900
dashboards but from them we can I we

133
00:05:57,900 --> 00:06:00,300
have already identified the final grain

134
00:06:00,300 --> 00:06:02,580
problem of private private data

135
00:06:02,580 --> 00:06:05,580
management

136
00:06:06,360 --> 00:06:09,360
so um and nowadays for application

137
00:06:09,360 --> 00:06:11,580
development Cycles

138
00:06:11,580 --> 00:06:14,220
um third-party sdks also known as third

139
00:06:14,220 --> 00:06:17,240
party libraries are well are widely used

140
00:06:17,240 --> 00:06:20,940
especially in Android applications

141
00:06:20,940 --> 00:06:24,479
so that the developers um have the ease

142
00:06:24,479 --> 00:06:26,280
for development for for their

143
00:06:26,280 --> 00:06:29,160
development and uh and with enhanced

144
00:06:29,160 --> 00:06:30,900
functionalities

145
00:06:30,900 --> 00:06:33,600
however the Incorporated libraries will

146
00:06:33,600 --> 00:06:36,120
also bring new new privacy issues to the

147
00:06:36,120 --> 00:06:38,100
host applications

148
00:06:38,100 --> 00:06:40,199
and blurred accounting between the

149
00:06:40,199 --> 00:06:43,080
application code and and the library

150
00:06:43,080 --> 00:06:44,100
code

151
00:06:44,100 --> 00:06:45,720
so for example here

152
00:06:45,720 --> 00:06:47,220
uh also

153
00:06:47,220 --> 00:06:49,680
um that like around 80 of the

154
00:06:49,680 --> 00:06:52,080
application development developers do

155
00:06:52,080 --> 00:06:56,100
not apply update their third-party sdks

156
00:06:56,100 --> 00:06:58,319
after embedding them in applications

157
00:06:58,319 --> 00:07:00,360
initially

158
00:07:00,360 --> 00:07:03,060
so this will will probably become the

159
00:07:03,060 --> 00:07:05,880
back door for adversaries to abuse the

160
00:07:05,880 --> 00:07:09,740
user's private private data

161
00:07:10,680 --> 00:07:13,080
so now let's take uh now this takes us

162
00:07:13,080 --> 00:07:15,600
to the topic of our work the Privacy

163
00:07:15,600 --> 00:07:18,000
data management issues among the

164
00:07:18,000 --> 00:07:21,259
third-party sdks

165
00:07:21,900 --> 00:07:24,660
so we have identified the problems in

166
00:07:24,660 --> 00:07:26,599
three aspects

167
00:07:26,599 --> 00:07:29,580
namely the for the Developers

168
00:07:29,580 --> 00:07:32,699
for the service vendors and for the

169
00:07:32,699 --> 00:07:34,380
audition process

170
00:07:34,380 --> 00:07:37,259
so for the Developers the problem is

171
00:07:37,259 --> 00:07:39,180
rooted in the lack of

172
00:07:39,180 --> 00:07:40,500
secure

173
00:07:40,500 --> 00:07:43,139
oh sorry lack of security and legal

174
00:07:43,139 --> 00:07:44,940
expertise in them

175
00:07:44,940 --> 00:07:47,280
so first it is difficult for them to

176
00:07:47,280 --> 00:07:48,900
determine the data collection behaviors

177
00:07:48,900 --> 00:07:53,759
from from those um sdks

178
00:07:53,759 --> 00:07:58,020
and second the proper use of the SD case

179
00:07:58,020 --> 00:08:00,360
the improper use sorry the improper use

180
00:08:00,360 --> 00:08:04,080
of the SDK decays well legal reveal more

181
00:08:04,080 --> 00:08:06,840
private information to the third parties

182
00:08:06,840 --> 00:08:09,360
and third the private information could

183
00:08:09,360 --> 00:08:12,139
be abused if the developers are you

184
00:08:12,139 --> 00:08:14,699
using the Aztec Haze that are not

185
00:08:14,699 --> 00:08:16,919
approved or audited by the legal

186
00:08:16,919 --> 00:08:20,520
department or team of the company

187
00:08:20,520 --> 00:08:23,759
so the not approved sdks are typically

188
00:08:23,759 --> 00:08:27,240
um those from from the latest updates or

189
00:08:27,240 --> 00:08:30,860
from the non-audited versions

190
00:08:32,580 --> 00:08:35,099
so for the service vendors the origins

191
00:08:35,099 --> 00:08:36,419
for this data sharing management

192
00:08:36,419 --> 00:08:40,020
problems are are rooted in the poor

193
00:08:40,020 --> 00:08:42,479
management of the developed sdks

194
00:08:42,479 --> 00:08:44,820
so first there are typically various

195
00:08:44,820 --> 00:08:47,459
versions of sdks due to the com

196
00:08:47,459 --> 00:08:49,680
continued development or the maintenance

197
00:08:49,680 --> 00:08:52,440
or the maintenance of their provided

198
00:08:52,440 --> 00:08:53,459
services

199
00:08:53,459 --> 00:08:55,980
however the vendors typically maintain

200
00:08:55,980 --> 00:08:57,300
documents

201
00:08:57,300 --> 00:09:00,720
only for one version of the of the sdks

202
00:09:00,720 --> 00:09:02,760
at the same time the update for such

203
00:09:02,760 --> 00:09:05,880
kind of documentation is not done in a

204
00:09:05,880 --> 00:09:07,620
timely manner

205
00:09:07,620 --> 00:09:10,800
so and also for a second the released

206
00:09:10,800 --> 00:09:12,779
documentation on this vendor's official

207
00:09:12,779 --> 00:09:16,019
site is sometimes is usually not for the

208
00:09:16,019 --> 00:09:17,640
multiple products

209
00:09:17,640 --> 00:09:20,640
so this wall this will result in some

210
00:09:20,640 --> 00:09:23,519
less specific information given on a

211
00:09:23,519 --> 00:09:26,600
specific SDK

212
00:09:26,640 --> 00:09:28,500
and third within the official

213
00:09:28,500 --> 00:09:30,240
documentation

214
00:09:30,240 --> 00:09:31,500
um

215
00:09:31,500 --> 00:09:33,060
the information on the data collection

216
00:09:33,060 --> 00:09:36,779
usage is sometimes lack of details

217
00:09:36,779 --> 00:09:40,760
or it's vague or imprecise

218
00:09:42,180 --> 00:09:45,240
and regarding the audition process for

219
00:09:45,240 --> 00:09:48,480
the third-party sdks it is hard to adopt

220
00:09:48,480 --> 00:09:51,120
a uniform approach to examining the data

221
00:09:51,120 --> 00:09:53,220
usage and data collection Behavior

222
00:09:53,220 --> 00:09:55,560
because the method for collecting data

223
00:09:55,560 --> 00:09:58,320
are diverse for example

224
00:09:58,320 --> 00:10:01,459
the typical way to get the app list

225
00:10:01,459 --> 00:10:03,959
installed on a device

226
00:10:03,959 --> 00:10:07,140
is to use the the the methods such as

227
00:10:07,140 --> 00:10:10,080
the get installed applications or get

228
00:10:10,080 --> 00:10:12,540
installed packages

229
00:10:12,540 --> 00:10:15,420
but then on conventional way here is to

230
00:10:15,420 --> 00:10:17,160
read the directory of the SD card

231
00:10:17,160 --> 00:10:21,480
Android data the reason is to so so

232
00:10:21,480 --> 00:10:24,060
after installation or the usage of an

233
00:10:24,060 --> 00:10:26,880
app on the device there will be a folder

234
00:10:26,880 --> 00:10:29,519
named after the application package

235
00:10:29,519 --> 00:10:31,860
under this directory

236
00:10:31,860 --> 00:10:35,100
and then the user uh the the adversary

237
00:10:35,100 --> 00:10:37,920
could access the similar data but in a

238
00:10:37,920 --> 00:10:39,480
completely different way

239
00:10:39,480 --> 00:10:41,040
however this approach is not working

240
00:10:41,040 --> 00:10:44,459
anymore after the Android 11 due to the

241
00:10:44,459 --> 00:10:46,620
system patch on this potential private

242
00:10:46,620 --> 00:10:49,519
information leakage

243
00:10:49,680 --> 00:10:52,680
and the usage of the reflection invokes

244
00:10:52,680 --> 00:10:55,920
or hidden apis also makes it less

245
00:10:55,920 --> 00:10:57,779
straightforward for the audition at

246
00:10:57,779 --> 00:11:00,899
times because there are flexible ways

247
00:11:00,899 --> 00:11:02,820
for passing the parameters

248
00:11:02,820 --> 00:11:05,880
for example on a on a figure to the to

249
00:11:05,880 --> 00:11:08,579
the right the get device ID returns to

250
00:11:08,579 --> 00:11:11,820
the IMI however it could also be passed

251
00:11:11,820 --> 00:11:14,519
as a parameter instead of a string here

252
00:11:14,519 --> 00:11:16,680
from other locations

253
00:11:16,680 --> 00:11:19,140
and this makes makes it hard to audit

254
00:11:19,140 --> 00:11:24,300
such such kind of um apis

255
00:11:24,300 --> 00:11:26,220
and moreover the use of black

256
00:11:26,220 --> 00:11:27,720
Technologies would definitely increase

257
00:11:27,720 --> 00:11:30,600
the difficulty for audition

258
00:11:30,600 --> 00:11:33,300
for example the read files will enabled

259
00:11:33,300 --> 00:11:35,160
obtaining some kind of private

260
00:11:35,160 --> 00:11:36,779
information

261
00:11:36,779 --> 00:11:38,040
um

262
00:11:38,040 --> 00:11:40,500
an example is like it is possible to

263
00:11:40,500 --> 00:11:43,680
directly read the ARP file to obtain the

264
00:11:43,680 --> 00:11:45,300
BSS ID

265
00:11:45,300 --> 00:11:47,579
and also the end day and zero day

266
00:11:47,579 --> 00:11:50,160
exploits also help retrieving private

267
00:11:50,160 --> 00:11:52,680
information while retaining hidden from

268
00:11:52,680 --> 00:11:54,120
the audition

269
00:11:54,120 --> 00:11:57,420
the example here shows that uh

270
00:11:57,420 --> 00:12:00,779
it uses a zero day exploits that reads

271
00:12:00,779 --> 00:12:03,660
the telephone same info list from the

272
00:12:03,660 --> 00:12:06,720
database and by doing that the adversary

273
00:12:06,720 --> 00:12:10,260
can get to the ICC ID which is a unique

274
00:12:10,260 --> 00:12:14,459
ID for the SIM card and I and imsi which

275
00:12:14,459 --> 00:12:19,099
is a unique mobile subscriber ID

276
00:12:21,260 --> 00:12:25,260
and additionally there are more several

277
00:12:25,260 --> 00:12:27,180
more other challenges regarding uh the

278
00:12:27,180 --> 00:12:31,620
the SDK Audition one is um because some

279
00:12:31,620 --> 00:12:33,959
techniques are heavily reliant on the

280
00:12:33,959 --> 00:12:36,660
the network traffic because they do they

281
00:12:36,660 --> 00:12:38,399
they scan for the sensitive information

282
00:12:38,399 --> 00:12:42,600
that that is uploaded to the uh in

283
00:12:42,600 --> 00:12:45,360
inside the network traffic however this

284
00:12:45,360 --> 00:12:46,740
kind of technique could be easily

285
00:12:46,740 --> 00:12:49,079
defeated by just simply adding the

286
00:12:49,079 --> 00:12:52,320
encryption and also there are a diverse

287
00:12:52,320 --> 00:12:55,200
data collection behavior and rules

288
00:12:55,200 --> 00:12:57,839
um that makes the SDK audition kind of

289
00:12:57,839 --> 00:12:59,160
like complicated

290
00:12:59,160 --> 00:13:01,200
for example sometimes the application

291
00:13:01,200 --> 00:13:03,959
pure only periodically uploads the the

292
00:13:03,959 --> 00:13:05,940
captured user information

293
00:13:05,940 --> 00:13:09,300
and and this will make it hard to track

294
00:13:09,300 --> 00:13:12,120
the data flow and increase and

295
00:13:12,120 --> 00:13:13,800
consequently it increases the chance

296
00:13:13,800 --> 00:13:17,040
that we miss the data upload behaviors

297
00:13:17,040 --> 00:13:18,480
during audition

298
00:13:18,480 --> 00:13:21,360
and for some applications the data

299
00:13:21,360 --> 00:13:23,160
collection rules are dynamically

300
00:13:23,160 --> 00:13:26,760
delivered and therefore only only during

301
00:13:26,760 --> 00:13:29,760
the runtime we could know about the

302
00:13:29,760 --> 00:13:32,160
exact rules for the data collection for

303
00:13:32,160 --> 00:13:35,459
example the the API invokes and and data

304
00:13:35,459 --> 00:13:36,839
uploads

305
00:13:36,839 --> 00:13:40,320
so now then given all the private data

306
00:13:40,320 --> 00:13:41,700
management issues

307
00:13:41,700 --> 00:13:45,120
it makes us wonder what exactly does the

308
00:13:45,120 --> 00:13:48,300
third party sdks brings to us

309
00:13:48,300 --> 00:13:50,959
does it do they bring extra capability

310
00:13:50,959 --> 00:13:54,480
or they just bring fines or liabilities

311
00:13:54,480 --> 00:13:56,700
or even Trojans

312
00:13:56,700 --> 00:13:59,220
so we of course hope that we could

313
00:13:59,220 --> 00:14:01,139
um they could bring us extra

314
00:14:01,139 --> 00:14:02,760
capabilities

315
00:14:02,760 --> 00:14:04,920
and to better utilize their capabilities

316
00:14:04,920 --> 00:14:07,880
while mitigating uh the the

317
00:14:07,880 --> 00:14:11,940
aforementioned risks we have been um

318
00:14:11,940 --> 00:14:13,920
there have been techniques for uh for

319
00:14:13,920 --> 00:14:16,019
Bridging the gaps during the SDK

320
00:14:16,019 --> 00:14:18,560
auditions

321
00:14:19,139 --> 00:14:22,019
so before presenting our our techniques

322
00:14:22,019 --> 00:14:25,800
we uh I would like to briefly discuss on

323
00:14:25,800 --> 00:14:29,040
the pros and cons of the existing

324
00:14:29,040 --> 00:14:31,139
um techniques for the third party SDK

325
00:14:31,139 --> 00:14:33,240
auditions

326
00:14:33,240 --> 00:14:36,240
so there are typically five a list here

327
00:14:36,240 --> 00:14:39,120
and for the reverse engineering it is

328
00:14:39,120 --> 00:14:41,279
highly precise

329
00:14:41,279 --> 00:14:43,740
um in the reported issues but here

330
00:14:43,740 --> 00:14:46,680
highly precise means it is uh highly

331
00:14:46,680 --> 00:14:49,620
accurate but not 100 compared to here

332
00:14:49,620 --> 00:14:52,560
the the which is the conclusive

333
00:14:52,560 --> 00:14:55,860
so um conclusive means like 100

334
00:14:55,860 --> 00:14:58,380
um confidence and and accuracy

335
00:14:58,380 --> 00:15:01,139
so for reverse engineering it is highly

336
00:15:01,139 --> 00:15:03,899
precise in the reported issues but it it

337
00:15:03,899 --> 00:15:06,600
typically requires a lot of workload for

338
00:15:06,600 --> 00:15:08,459
analyzing each SDK

339
00:15:08,459 --> 00:15:10,740
so it makes it less possible or feasible

340
00:15:10,740 --> 00:15:14,279
to be deployed as a as a large scale

341
00:15:14,279 --> 00:15:16,800
analysis technique

342
00:15:16,800 --> 00:15:19,380
and in addition some the Logics for some

343
00:15:19,380 --> 00:15:20,820
data collection functions could be

344
00:15:20,820 --> 00:15:23,519
missed or unreachable in the analyze the

345
00:15:23,519 --> 00:15:25,560
code segments

346
00:15:25,560 --> 00:15:29,820
and for the for the network update it is

347
00:15:29,820 --> 00:15:31,800
um right just as I said it's conclusive

348
00:15:31,800 --> 00:15:34,260
with detected issues however it is

349
00:15:34,260 --> 00:15:36,420
easily defeated as I mentioned in the

350
00:15:36,420 --> 00:15:38,760
previous slide that um by simple

351
00:15:38,760 --> 00:15:41,820
encryption on the network traffic

352
00:15:41,820 --> 00:15:44,720
and also typically it also would require

353
00:15:44,720 --> 00:15:48,060
the uh security privacy analysts to

354
00:15:48,060 --> 00:15:50,459
dynamically test the app by sequentially

355
00:15:50,459 --> 00:15:54,000
visiting uh or interacting with with the

356
00:15:54,000 --> 00:15:57,740
uis on the app so this will likely

357
00:15:57,740 --> 00:16:00,480
render less coverage

358
00:16:00,480 --> 00:16:03,660
um due to like uh the the the the test

359
00:16:03,660 --> 00:16:05,639
coverage and especially when the app is

360
00:16:05,639 --> 00:16:07,740
complex

361
00:16:07,740 --> 00:16:09,480
and for auditing using official

362
00:16:09,480 --> 00:16:12,000
documents it is easily it's it's simple

363
00:16:12,000 --> 00:16:14,699
and easy to do however it is very real

364
00:16:14,699 --> 00:16:18,720
unreliable because yeah the the because

365
00:16:18,720 --> 00:16:21,480
that sometimes the data is imprecise

366
00:16:21,480 --> 00:16:23,339
sometimes it's not updated

367
00:16:23,339 --> 00:16:24,480
etc etc

368
00:16:24,480 --> 00:16:26,339
and for the hybrid techniques like taint

369
00:16:26,339 --> 00:16:29,699
analysis with combined with uh reverse

370
00:16:29,699 --> 00:16:32,220
engineering it is highly effective while

371
00:16:32,220 --> 00:16:34,760
with um mild

372
00:16:34,760 --> 00:16:37,980
drawbacks such as the story for requires

373
00:16:37,980 --> 00:16:40,980
the manual efforts for confirming the

374
00:16:40,980 --> 00:16:46,040
the on the some output output reports

375
00:16:46,040 --> 00:16:49,560
and and there is still unreachability

376
00:16:49,560 --> 00:16:51,779
issue that is rooted in the reverse

377
00:16:51,779 --> 00:16:53,220
engineering part

378
00:16:53,220 --> 00:16:55,920
however we find it is still suitable for

379
00:16:55,920 --> 00:16:58,560
large-scale detection because it because

380
00:16:58,560 --> 00:17:00,959
if it because of its efficiency

381
00:17:00,959 --> 00:17:02,820
so therefore our approach is actually

382
00:17:02,820 --> 00:17:05,459
based on this type of technique

383
00:17:05,459 --> 00:17:09,419
and lastly for uh for some organizations

384
00:17:09,419 --> 00:17:13,619
there they rely on the SDK sorry API

385
00:17:13,619 --> 00:17:16,020
invoke to update the data collection

386
00:17:16,020 --> 00:17:17,160
Behavior

387
00:17:17,160 --> 00:17:19,980
and we find it very unreliable because

388
00:17:19,980 --> 00:17:23,099
the privacy because now the Privacy is

389
00:17:23,099 --> 00:17:25,819
preserving Computing is widely deployed

390
00:17:25,819 --> 00:17:28,740
and what they do is they perform the

391
00:17:28,740 --> 00:17:31,559
data manipulation and operations locally

392
00:17:31,559 --> 00:17:34,860
without uploading them so in a sense we

393
00:17:34,860 --> 00:17:37,020
should not we should only consider those

394
00:17:37,020 --> 00:17:39,419
kind of data access just as access but

395
00:17:39,419 --> 00:17:43,520
not a data collection per se

396
00:17:46,460 --> 00:17:50,220
so uh now let me share more details on

397
00:17:50,220 --> 00:17:52,080
the uh information on the technical

398
00:17:52,080 --> 00:17:55,080
parts

399
00:17:55,440 --> 00:17:57,600
so for the tanked analysis

400
00:17:57,600 --> 00:18:01,080
um it it it is a technique that we

401
00:18:01,080 --> 00:18:03,480
normally use to track and analyze the

402
00:18:03,480 --> 00:18:06,179
flow of attained information throughout

403
00:18:06,179 --> 00:18:07,320
the program

404
00:18:07,320 --> 00:18:10,020
and this technique have been widely used

405
00:18:10,020 --> 00:18:12,059
in the vulnerability mining

406
00:18:12,059 --> 00:18:15,780
but for the Privacy uh scanning but we

407
00:18:15,780 --> 00:18:18,960
in in this previous scanning uh context

408
00:18:18,960 --> 00:18:20,880
we would focus more on whether the

409
00:18:20,880 --> 00:18:23,220
previous data is transmitted back to the

410
00:18:23,220 --> 00:18:26,160
servers through the network channel so

411
00:18:26,160 --> 00:18:28,620
so we need to redefine the source and

412
00:18:28,620 --> 00:18:31,980
sync used in the typical taint analysis

413
00:18:31,980 --> 00:18:35,100
so in this work we we Define the source

414
00:18:35,100 --> 00:18:38,640
and sync as shown here that

415
00:18:38,640 --> 00:18:39,419
um

416
00:18:39,419 --> 00:18:42,480
uh that the source is is the private

417
00:18:42,480 --> 00:18:45,780
privacy data from an API and the sync is

418
00:18:45,780 --> 00:18:49,559
uh is a data sending information

419
00:18:49,559 --> 00:18:52,679
uh in methods of the app clients network

420
00:18:52,679 --> 00:18:55,860
library so including the incoming your

421
00:18:55,860 --> 00:18:59,460
url header's body of a request

422
00:18:59,460 --> 00:19:02,039
and for example here

423
00:19:02,039 --> 00:19:04,799
um they get the get device ID is a is a

424
00:19:04,799 --> 00:19:05,760
source

425
00:19:05,760 --> 00:19:07,620
uh because it contains the target

426
00:19:07,620 --> 00:19:10,440
information that which is a device ID

427
00:19:10,440 --> 00:19:11,280
here

428
00:19:11,280 --> 00:19:13,620
and the sink is the the set request

429
00:19:13,620 --> 00:19:16,320
property method which sets the general

430
00:19:16,320 --> 00:19:20,120
request property of a URL connection

431
00:19:20,460 --> 00:19:21,960
all right

432
00:19:21,960 --> 00:19:22,740
um

433
00:19:22,740 --> 00:19:27,539
and further for our taint analysis uh in

434
00:19:27,539 --> 00:19:31,080
this work we we're based on our two uh

435
00:19:31,080 --> 00:19:34,620
tools one is called Mariana Trench it is

436
00:19:34,620 --> 00:19:37,500
an open source engine from released from

437
00:19:37,500 --> 00:19:38,820
Facebook

438
00:19:38,820 --> 00:19:40,679
and this tool defines the propagation

439
00:19:40,679 --> 00:19:43,860
Rules by by model and enables fast

440
00:19:43,860 --> 00:19:45,660
scanning compared to the other

441
00:19:45,660 --> 00:19:48,299
state-of-the-art tools that is currently

442
00:19:48,299 --> 00:19:50,280
available

443
00:19:50,280 --> 00:19:53,640
and the other one is called app shark

444
00:19:53,640 --> 00:19:56,340
which has been developed by uh the

445
00:19:56,340 --> 00:19:59,520
bidens and has been originally used for

446
00:19:59,520 --> 00:20:02,160
the company's um security amount of

447
00:20:02,160 --> 00:20:05,580
scanning inside within the company

448
00:20:05,580 --> 00:20:08,039
so this tool actually defines the

449
00:20:08,039 --> 00:20:10,200
propagation Rules by source and sync

450
00:20:10,200 --> 00:20:12,480
Tuple as we explained in the previous

451
00:20:12,480 --> 00:20:16,320
slide and it is able to scan all the

452
00:20:16,320 --> 00:20:18,960
Privacy related API calls

453
00:20:18,960 --> 00:20:23,520
and so we use both tool for the scanning

454
00:20:23,520 --> 00:20:27,000
task in in this work to so that we can

455
00:20:27,000 --> 00:20:29,100
have a more comprehensive mining of the

456
00:20:29,100 --> 00:20:31,919
data collection issues and then we find

457
00:20:31,919 --> 00:20:34,260
that it actually complement each other

458
00:20:34,260 --> 00:20:36,179
quite well

459
00:20:36,179 --> 00:20:37,380
um

460
00:20:37,380 --> 00:20:40,919
uh so there are actually some issues uh

461
00:20:40,919 --> 00:20:42,539
from the original version of the Miranda

462
00:20:42,539 --> 00:20:45,539
trench before we can uh

463
00:20:45,539 --> 00:20:50,100
um uh directly apply to our task

464
00:20:50,100 --> 00:20:51,660
um

465
00:20:51,660 --> 00:20:55,860
so and and we have so the so we made

466
00:20:55,860 --> 00:20:58,380
some improvements to uh make the the

467
00:20:58,380 --> 00:21:00,660
tool works better for our purpose

468
00:21:00,660 --> 00:21:03,240
so one major in a shortcoming is is that

469
00:21:03,240 --> 00:21:05,700
the original uh Marana trench is unable

470
00:21:05,700 --> 00:21:09,299
to uh take the the static variable as

471
00:21:09,299 --> 00:21:10,380
source

472
00:21:10,380 --> 00:21:13,020
this is because some private data are

473
00:21:13,020 --> 00:21:16,799
not directly from an API for example the

474
00:21:16,799 --> 00:21:20,100
Android ID and serial number so in in

475
00:21:20,100 --> 00:21:23,240
such kind of cases The Source cannot be

476
00:21:23,240 --> 00:21:25,500
defined directly with the type of the

477
00:21:25,500 --> 00:21:26,840
method

478
00:21:26,840 --> 00:21:32,460
and to to solve this problem we have we

479
00:21:32,460 --> 00:21:34,559
have a secondary development of this to

480
00:21:34,559 --> 00:21:37,020
this engine that enables the support of

481
00:21:37,020 --> 00:21:40,080
defining the static variables as source

482
00:21:40,080 --> 00:21:43,200
so this Improvement greatly enhance its

483
00:21:43,200 --> 00:21:44,460
capability in tracking the private

484
00:21:44,460 --> 00:21:46,679
information flow

485
00:21:46,679 --> 00:21:49,559
um this because many private data data

486
00:21:49,559 --> 00:21:52,700
are static variables

487
00:21:54,539 --> 00:21:57,419
and another shortcoming is that uh the

488
00:21:57,419 --> 00:21:58,919
Mariana Trench

489
00:21:58,919 --> 00:22:02,159
um is is not handling it does not

490
00:22:02,159 --> 00:22:04,260
handled asynchronous asynchronous calls

491
00:22:04,260 --> 00:22:05,760
very well

492
00:22:05,760 --> 00:22:06,960
so

493
00:22:06,960 --> 00:22:09,360
um in a previous verification results we

494
00:22:09,360 --> 00:22:12,539
find that some uh tainted propagation

495
00:22:12,539 --> 00:22:15,059
has been interrupted because of such

496
00:22:15,059 --> 00:22:17,940
kind of asynchronous calls so then we

497
00:22:17,940 --> 00:22:21,059
make some modifications by adding a

498
00:22:21,059 --> 00:22:24,360
configuration file to describe such kind

499
00:22:24,360 --> 00:22:27,780
of intended delivery from this uh such

500
00:22:27,780 --> 00:22:29,700
kind of cases

501
00:22:29,700 --> 00:22:33,200
so as shown in a figure here

502
00:22:33,659 --> 00:22:36,120
um in a configuration file we Define the

503
00:22:36,120 --> 00:22:39,059
base base class name the method name of

504
00:22:39,059 --> 00:22:41,039
the asynchronous calls and the

505
00:22:41,039 --> 00:22:42,179
colleagues

506
00:22:42,179 --> 00:22:46,080
and for each colleague we we include its

507
00:22:46,080 --> 00:22:49,020
method name the return type and our

508
00:22:49,020 --> 00:22:52,039
argument types

509
00:22:53,400 --> 00:22:55,919
okay and now I would like to share the

510
00:22:55,919 --> 00:22:59,100
experimental results from our study so

511
00:22:59,100 --> 00:23:01,080
we use these two engines to start to

512
00:23:01,080 --> 00:23:05,640
scan a 220 uh 211 uh sdks from Google

513
00:23:05,640 --> 00:23:08,220
Play and and some other platforms that I

514
00:23:08,220 --> 00:23:10,260
will detail later and

515
00:23:10,260 --> 00:23:12,480
um we manually verify the scanned

516
00:23:12,480 --> 00:23:16,080
results for the 37 sdks and according to

517
00:23:16,080 --> 00:23:19,200
the recorded results from our tool and

518
00:23:19,200 --> 00:23:21,840
and this manual confirmation we have

519
00:23:21,840 --> 00:23:25,260
shown to achieve an accuracy of 92

520
00:23:25,260 --> 00:23:28,500
percent uh with a recall of 88 and F

521
00:23:28,500 --> 00:23:31,140
score of 0.9

522
00:23:31,140 --> 00:23:34,500
and from them we find that 41 SDK from

523
00:23:34,500 --> 00:23:36,179
our results

524
00:23:36,179 --> 00:23:38,340
from the reported results we find that

525
00:23:38,340 --> 00:23:42,780
41 sdks out of the 211 actually upload

526
00:23:42,780 --> 00:23:44,940
the user's private data

527
00:23:44,940 --> 00:23:49,500
which is roughly around 90 19 to 20 of

528
00:23:49,500 --> 00:23:52,260
the sdks we have studied as shown in

529
00:23:52,260 --> 00:23:55,799
this in in this pie chart here

530
00:23:55,799 --> 00:23:57,900
and the detailed types of private data

531
00:23:57,900 --> 00:24:00,000
being collected by the sdks are listed

532
00:24:00,000 --> 00:24:01,440
in this histogram

533
00:24:01,440 --> 00:24:05,220
and and it's explicitly we focused on

534
00:24:05,220 --> 00:24:09,120
the list of 25 types of the private data

535
00:24:09,120 --> 00:24:12,539
we note that among the 25 types not all

536
00:24:12,539 --> 00:24:15,299
the types of data are collected

537
00:24:15,299 --> 00:24:18,120
and we observe there is definitely some

538
00:24:18,120 --> 00:24:19,620
typical

539
00:24:19,620 --> 00:24:22,440
um uh patterns for the targeted data

540
00:24:22,440 --> 00:24:23,640
types

541
00:24:23,640 --> 00:24:25,440
for example the most frequently

542
00:24:25,440 --> 00:24:29,299
collected private data include IMI

543
00:24:29,299 --> 00:24:31,440
Android ID

544
00:24:31,440 --> 00:24:35,039
which uh account for 15 of the sdks that

545
00:24:35,039 --> 00:24:38,039
collects them followed by the IP which

546
00:24:38,039 --> 00:24:42,600
with 12 sdks collecting them and the

547
00:24:42,600 --> 00:24:46,020
next uh there are 11 sdks collect Wi-Fi

548
00:24:46,020 --> 00:24:50,220
Mac addresses BSS ID and GPS

549
00:24:50,220 --> 00:24:54,960
and and nine uh sdks collect serial

550
00:24:54,960 --> 00:24:58,280
number and SSID here

551
00:25:01,080 --> 00:25:03,179
so since the results of the taint

552
00:25:03,179 --> 00:25:04,380
analysis

553
00:25:04,380 --> 00:25:08,580
um are are not 100 accurate so we also

554
00:25:08,580 --> 00:25:10,559
we calibrate we further calibrate this

555
00:25:10,559 --> 00:25:13,380
reported results with manual reverse

556
00:25:13,380 --> 00:25:16,919
engineer and analyze their source code

557
00:25:16,919 --> 00:25:20,280
so this is a no not to play that is the

558
00:25:20,280 --> 00:25:22,799
only part in our approach that

559
00:25:22,799 --> 00:25:26,760
introduces the reverse engineering

560
00:25:26,760 --> 00:25:30,120
and in this way we minimize the required

561
00:25:30,120 --> 00:25:32,400
manual tasks

562
00:25:32,400 --> 00:25:35,159
or manual efforts in this in this kind

563
00:25:35,159 --> 00:25:36,299
of task

564
00:25:36,299 --> 00:25:39,120
so to do the calibration we first ensure

565
00:25:39,120 --> 00:25:41,700
that all uh the results of the Privacy

566
00:25:41,700 --> 00:25:44,640
API costs are accurate and then we scan

567
00:25:44,640 --> 00:25:47,820
the privacy API calls that

568
00:25:47,820 --> 00:25:50,159
up here in an SDK

569
00:25:50,159 --> 00:25:52,679
and then we only need to review the

570
00:25:52,679 --> 00:25:55,260
results of the private privacy API calls

571
00:25:55,260 --> 00:25:57,480
with no change propagation

572
00:25:57,480 --> 00:26:00,000
this is because the precondition for for

573
00:26:00,000 --> 00:26:03,779
having a propagation is that the private

574
00:26:03,779 --> 00:26:06,480
API calls access the data so in other

575
00:26:06,480 --> 00:26:08,760
words if no data has been accessed there

576
00:26:08,760 --> 00:26:11,460
is no 10 propagation for example in this

577
00:26:11,460 --> 00:26:12,960
vote in this figure

578
00:26:12,960 --> 00:26:15,840
our tool confirmed in this in this

579
00:26:15,840 --> 00:26:19,140
scenario like in this example our two

580
00:26:19,140 --> 00:26:22,020
confirms four API calls with data upload

581
00:26:22,020 --> 00:26:23,279
Behavior

582
00:26:23,279 --> 00:26:26,940
and here we number the sensitive API

583
00:26:26,940 --> 00:26:30,179
calls uh by a unique number and

584
00:26:30,179 --> 00:26:31,620
different numbers represent different

585
00:26:31,620 --> 00:26:32,940
API calls

586
00:26:32,940 --> 00:26:35,580
and we identified five API calls in

587
00:26:35,580 --> 00:26:36,419
total

588
00:26:36,419 --> 00:26:39,120
and therefore we only manually need to

589
00:26:39,120 --> 00:26:43,400
manually check the one API call the 365

590
00:26:43,400 --> 00:26:47,600
which is marked as unconfirmed

591
00:26:49,020 --> 00:26:53,159
so as a folder illustration we show some

592
00:26:53,159 --> 00:26:57,559
uh results of the sdks we discovered uh

593
00:26:57,559 --> 00:27:01,559
with these privacy issues so like the uh

594
00:27:01,559 --> 00:27:03,900
I'll show like three uh detailed

595
00:27:03,900 --> 00:27:06,360
examples for this particular SDK but

596
00:27:06,360 --> 00:27:09,419
this uh for the I the identity of the

597
00:27:09,419 --> 00:27:12,900
SDK we here we blur out because the

598
00:27:12,900 --> 00:27:14,520
company's policy

599
00:27:14,520 --> 00:27:17,340
uh and but if you want to know the more

600
00:27:17,340 --> 00:27:19,980
details you can contact the the our team

601
00:27:19,980 --> 00:27:22,200
members later offline

602
00:27:22,200 --> 00:27:24,600
um for this SDK it collects the cell

603
00:27:24,600 --> 00:27:25,740
location

604
00:27:25,740 --> 00:27:28,200
which can be seen from the analyst

605
00:27:28,200 --> 00:27:30,059
reports here

606
00:27:30,059 --> 00:27:33,240
from our tool that the source is the

607
00:27:33,240 --> 00:27:36,360
cell location returned by this uh cell

608
00:27:36,360 --> 00:27:39,120
location method and we trace this

609
00:27:39,120 --> 00:27:40,620
information

610
00:27:40,620 --> 00:27:41,600
um

611
00:27:41,600 --> 00:27:44,700
sync to this output stream

612
00:27:44,700 --> 00:27:47,039
here

613
00:27:47,039 --> 00:27:49,200
um however we do not find any

614
00:27:49,200 --> 00:27:52,140
information on uh on such data

615
00:27:52,140 --> 00:27:54,299
collection in in this official practice

616
00:27:54,299 --> 00:27:55,980
policy here

617
00:27:55,980 --> 00:27:57,659
as you can read here

618
00:27:57,659 --> 00:28:01,080
um uh they they do mention a few

619
00:28:01,080 --> 00:28:03,840
um detailed ideas such as advertised ID

620
00:28:03,840 --> 00:28:07,620
and some self-created ID but just no

621
00:28:07,620 --> 00:28:10,520
cell location

622
00:28:10,559 --> 00:28:13,320
and similarly another example shows here

623
00:28:13,320 --> 00:28:17,460
is that this SDK collects the GPS SSID

624
00:28:17,460 --> 00:28:20,760
and BSS ID data from the from the user

625
00:28:20,760 --> 00:28:22,860
side user device

626
00:28:22,860 --> 00:28:24,960
so on the left figure here

627
00:28:24,960 --> 00:28:26,940
we show that the similar reports on the

628
00:28:26,940 --> 00:28:30,900
GPS data and for the for the SSID and a

629
00:28:30,900 --> 00:28:34,620
BSS ID data uh it is conducted in a

630
00:28:34,620 --> 00:28:37,740
similar way and the source is returned

631
00:28:37,740 --> 00:28:40,140
by this get altitude method

632
00:28:40,140 --> 00:28:43,320
and the sync is similar it's the output

633
00:28:43,320 --> 00:28:44,640
stream

634
00:28:44,640 --> 00:28:46,980
and once again we do not find any data

635
00:28:46,980 --> 00:28:49,700
collection Behavior declared in this

636
00:28:49,700 --> 00:28:53,539
sdk's privacy policy

637
00:28:54,659 --> 00:28:56,640
and furthermore

638
00:28:56,640 --> 00:28:59,159
um this uh

639
00:28:59,159 --> 00:29:01,440
there are there are even worse cases

640
00:29:01,440 --> 00:29:04,080
where the SDK collects the personal data

641
00:29:04,080 --> 00:29:06,900
but without even showing without even

642
00:29:06,900 --> 00:29:09,059
showing any previous policies from its

643
00:29:09,059 --> 00:29:12,840
vendor so in this case uh yeah our our

644
00:29:12,840 --> 00:29:17,039
tour reports this uh GPS data collection

645
00:29:17,039 --> 00:29:20,220
from this get longitude

646
00:29:20,220 --> 00:29:21,600
um

647
00:29:21,600 --> 00:29:23,700
a method and then the thing the the the

648
00:29:23,700 --> 00:29:28,440
sync is uh the byte array output stream

649
00:29:28,440 --> 00:29:31,320
so but but we don't find any uh a

650
00:29:31,320 --> 00:29:35,700
privacy policy associated with this SDK

651
00:29:35,700 --> 00:29:39,480
so then I would make a summary of our

652
00:29:39,480 --> 00:29:42,659
work first I would like to summarize on

653
00:29:42,659 --> 00:29:45,059
the status quo of the data collection

654
00:29:45,059 --> 00:29:45,740
um

655
00:29:45,740 --> 00:29:48,779
practices of third-party sdks and their

656
00:29:48,779 --> 00:29:51,480
problems so the majority of the third

657
00:29:51,480 --> 00:29:54,720
party SDK vendors do not properly manage

658
00:29:54,720 --> 00:29:57,419
and precisely disclose their private

659
00:29:57,419 --> 00:30:00,240
information they collect on on their own

660
00:30:00,240 --> 00:30:02,100
official sites

661
00:30:02,100 --> 00:30:05,100
for example many official descriptions

662
00:30:05,100 --> 00:30:08,159
of Android and iOS sdks only contain

663
00:30:08,159 --> 00:30:11,159
previous information collected by a

664
00:30:11,159 --> 00:30:13,860
certain version which probably be

665
00:30:13,860 --> 00:30:16,440
outdated version or um

666
00:30:16,440 --> 00:30:19,500
uh or the one that without

667
00:30:19,500 --> 00:30:23,820
proper updates and and many vendors

668
00:30:23,820 --> 00:30:25,440
um another problem is like many vendors

669
00:30:25,440 --> 00:30:28,919
do not uh um provide a dedicated policy

670
00:30:28,919 --> 00:30:32,279
for the private data collection for a

671
00:30:32,279 --> 00:30:35,340
particular SDK and only rough uh

672
00:30:35,340 --> 00:30:36,539
descriptions

673
00:30:36,539 --> 00:30:40,320
and more than a worse worse more in such

674
00:30:40,320 --> 00:30:42,659
descriptions the terms used are

675
00:30:42,659 --> 00:30:45,720
sometimes uh ambiguous and not accurate

676
00:30:45,720 --> 00:30:48,659
one example some some example is like

677
00:30:48,659 --> 00:30:51,120
some uh description would mention

678
00:30:51,120 --> 00:30:53,880
collecting data such as a white line

679
00:30:53,880 --> 00:30:57,539
information but without exact detailing

680
00:30:57,539 --> 00:31:00,779
on what kind of data on the Y Line they

681
00:31:00,779 --> 00:31:03,000
collect such as is it do they collect

682
00:31:03,000 --> 00:31:07,559
SSID bssid IP address Etc or all and

683
00:31:07,559 --> 00:31:09,659
similar issues with the with other

684
00:31:09,659 --> 00:31:12,440
device specific IDs

685
00:31:12,440 --> 00:31:17,460
and the audition on sdks are challenging

686
00:31:17,460 --> 00:31:19,200
um because of the heterogeneous

687
00:31:19,200 --> 00:31:22,380
techniques used for the for the data

688
00:31:22,380 --> 00:31:23,600
collection

689
00:31:23,600 --> 00:31:27,960
and some AO and last is that some

690
00:31:27,960 --> 00:31:31,440
eo-purpose sdks can be abused by the

691
00:31:31,440 --> 00:31:35,820
adversaries to Target on the um privacy

692
00:31:35,820 --> 00:31:38,940
private private informations from the um

693
00:31:38,940 --> 00:31:42,620
from the from the users

694
00:31:43,679 --> 00:31:46,620
and in summary for our contributions and

695
00:31:46,620 --> 00:31:48,480
open source

696
00:31:48,480 --> 00:31:50,520
um for the contribution side we have

697
00:31:50,520 --> 00:31:53,100
identified 40 plus sdks with

698
00:31:53,100 --> 00:31:55,080
inconsistent data information collection

699
00:31:55,080 --> 00:31:56,399
behaviors

700
00:31:56,399 --> 00:31:59,000
and we have informed the relevant

701
00:31:59,000 --> 00:32:01,260
vendors and received their

702
00:32:01,260 --> 00:32:02,820
acknowledgment

703
00:32:02,820 --> 00:32:05,940
from them before this talk and we have

704
00:32:05,940 --> 00:32:08,460
constructed a data set on the private

705
00:32:08,460 --> 00:32:10,080
information collection

706
00:32:10,080 --> 00:32:14,039
for 200 plus sdks and we hope to enlarge

707
00:32:14,039 --> 00:32:16,620
this data set and keep maintaining this

708
00:32:16,620 --> 00:32:19,200
data set with your updates and different

709
00:32:19,200 --> 00:32:20,880
versions

710
00:32:20,880 --> 00:32:23,880
and we'll further seek to utilize our

711
00:32:23,880 --> 00:32:26,520
developed tools to scan and detect more

712
00:32:26,520 --> 00:32:28,980
related issues on the private data

713
00:32:28,980 --> 00:32:30,299
collection

714
00:32:30,299 --> 00:32:33,840
and for the open source of the the tools

715
00:32:33,840 --> 00:32:36,000
that I mentioned uh so we plan to open

716
00:32:36,000 --> 00:32:37,740
source our Improvement done for the

717
00:32:37,740 --> 00:32:39,659
Mariana Trench tool

718
00:32:39,659 --> 00:32:41,640
um on our GitHub next month and please

719
00:32:41,640 --> 00:32:43,559
keep tuned

720
00:32:43,559 --> 00:32:44,279
um

721
00:32:44,279 --> 00:32:46,679
and also

722
00:32:46,679 --> 00:32:49,380
um lastly I would uh yeah show some

723
00:32:49,380 --> 00:32:52,320
details about the the the the data that

724
00:32:52,320 --> 00:32:55,919
we got in this in our data set so to

725
00:32:55,919 --> 00:33:00,179
derive the the sdks we we rely on this

726
00:33:00,179 --> 00:33:03,179
newly implemented Google Play SDK index

727
00:33:03,179 --> 00:33:06,659
and we have collected all the 125 sdks

728
00:33:06,659 --> 00:33:09,059
from them and the rest are collected

729
00:33:09,059 --> 00:33:12,179
from from platforms that uh from China

730
00:33:12,179 --> 00:33:15,600
and then we plan to continue maintain

731
00:33:15,600 --> 00:33:19,080
this uh this this data set with with

732
00:33:19,080 --> 00:33:21,899
added new sdks

733
00:33:21,899 --> 00:33:25,919
and yeah that's uh that is my um

734
00:33:25,919 --> 00:33:29,279
presentation so thank you for your

735
00:33:29,279 --> 00:33:31,320
attention and time

736
00:33:31,320 --> 00:33:34,080
and yeah so

737
00:33:34,080 --> 00:33:34,960
thank you

738
00:33:34,960 --> 00:33:38,179
[Applause]

739
00:33:38,179 --> 00:33:40,380
right so if you have any questions any

740
00:33:40,380 --> 00:33:42,960
questions you can ask and then um if I

741
00:33:42,960 --> 00:33:46,140
if I cannot answer my teammates will be

742
00:33:46,140 --> 00:33:48,779
on Zoom 2 yeah yeah there's a few

743
00:33:48,779 --> 00:33:50,220
questions there

744
00:33:50,220 --> 00:33:52,080
um would having a s-bomb software bill

745
00:33:52,080 --> 00:33:54,539
of materials help to analyze third-party

746
00:33:54,539 --> 00:33:55,919
SDK better

747
00:33:55,919 --> 00:33:58,980
uh sorry can you I would having a s-bomb

748
00:33:58,980 --> 00:34:02,159
uh software bill of materials okay to

749
00:34:02,159 --> 00:34:05,039
analyze third-party sdks better it's on

750
00:34:05,039 --> 00:34:07,820
the screen if you want okay

751
00:34:10,440 --> 00:34:13,280
I'll have two roles

752
00:34:14,460 --> 00:34:17,240
okay

753
00:34:17,339 --> 00:34:19,520
um

754
00:34:20,119 --> 00:34:23,339
I guess uh any

755
00:34:23,339 --> 00:34:27,119
comments from the collaborator part

756
00:34:27,119 --> 00:34:31,800
I I currently cannot I don't know did

757
00:34:31,800 --> 00:34:36,560
that definite answer for that yeah so

758
00:34:37,199 --> 00:34:39,060
uh

759
00:34:39,060 --> 00:34:41,639
yeah probably let me try to take this

760
00:34:41,639 --> 00:34:44,520
one uh I think the

761
00:34:44,520 --> 00:34:48,239
view of materials basically means we are

762
00:34:48,239 --> 00:34:50,339
the analysts can be given more

763
00:34:50,339 --> 00:34:54,780
information about the SDK right so uh

764
00:34:54,780 --> 00:34:57,599
probably some of the sdks are not open

765
00:34:57,599 --> 00:34:59,720
sourced in our

766
00:34:59,720 --> 00:35:02,040
research and

767
00:35:02,040 --> 00:35:04,260
definitely there will be some limitation

768
00:35:04,260 --> 00:35:07,560
in such case because we need the source

769
00:35:07,560 --> 00:35:11,040
sync and also the data flow basically to

770
00:35:11,040 --> 00:35:14,940
identify the data leakage so yeah agree

771
00:35:14,940 --> 00:35:17,480
uh if we are given more information

772
00:35:17,480 --> 00:35:22,020
the number one we can find more leakage

773
00:35:22,020 --> 00:35:24,720
and number two the analysis can be more

774
00:35:24,720 --> 00:35:26,880
accurate

775
00:35:26,880 --> 00:35:28,920
so

776
00:35:28,920 --> 00:35:31,980
um but to to some extent I think it's

777
00:35:31,980 --> 00:35:34,440
not quite easy to answer at this stage

778
00:35:34,440 --> 00:35:36,900
uh really depends on what kind of

779
00:35:36,900 --> 00:35:39,660
information we can be given

780
00:35:39,660 --> 00:35:43,079
so I hope I uh like partly answer the

781
00:35:43,079 --> 00:35:43,980
question

782
00:35:43,980 --> 00:35:46,920
all right thanks Dr bye um the second

783
00:35:46,920 --> 00:35:50,760
question yes let me see you think pdpa

784
00:35:50,760 --> 00:35:53,400
is comparable to gdpr

785
00:35:53,400 --> 00:35:57,180
it definitely has uh many similarities

786
00:35:57,180 --> 00:36:00,740
but maybe the terms are are are are

787
00:36:00,740 --> 00:36:04,619
described differently yes so I think our

788
00:36:04,619 --> 00:36:09,300
uh a pro like work is just focusing more

789
00:36:09,300 --> 00:36:11,579
on the gdpr side but I think this work

790
00:36:11,579 --> 00:36:14,099
can be easily transferable to other kind

791
00:36:14,099 --> 00:36:16,380
of privacy regulations such as like

792
00:36:16,380 --> 00:36:19,020
mentioned pdpa I'm sure pdpa will have

793
00:36:19,020 --> 00:36:21,240
like similar like data purpose

794
00:36:21,240 --> 00:36:24,480
limitation and like legitimacy on the on

795
00:36:24,480 --> 00:36:26,520
the data collection practices defined in

796
00:36:26,520 --> 00:36:28,260
the terms yeah

797
00:36:28,260 --> 00:36:30,960
thanks and the final one

798
00:36:30,960 --> 00:36:33,359
sorry was someone gonna say something

799
00:36:33,359 --> 00:36:36,060
oh I think no no no no yeah yeah all

800
00:36:36,060 --> 00:36:37,980
right uh what would you do if you

801
00:36:37,980 --> 00:36:40,440
managed to decipher obfuscated code that

802
00:36:40,440 --> 00:36:42,839
collects user data and does not declare

803
00:36:42,839 --> 00:36:46,460
privacy policy to user

804
00:36:48,300 --> 00:36:51,060
let's use the data oh

805
00:36:51,060 --> 00:36:53,940
without sorry can you

806
00:36:53,940 --> 00:36:55,920
go back to the question you put it on

807
00:36:55,920 --> 00:36:57,599
the small screen yeah right

808
00:36:57,599 --> 00:36:58,200
um

809
00:36:58,200 --> 00:37:02,118
yeah oh you're all right it's okay

810
00:37:09,359 --> 00:37:12,420
I think it's very interesting

811
00:37:12,420 --> 00:37:13,980
um question

812
00:37:13,980 --> 00:37:15,480
so

813
00:37:15,480 --> 00:37:16,760
um

814
00:37:16,760 --> 00:37:19,680
when you decide for

815
00:37:19,680 --> 00:37:23,280
but I think in any in whichever way the

816
00:37:23,280 --> 00:37:27,480
the it has to serve as a developer they

817
00:37:27,480 --> 00:37:28,440
have to

818
00:37:28,440 --> 00:37:30,180
declare

819
00:37:30,180 --> 00:37:31,619
like

820
00:37:31,619 --> 00:37:33,260
to

821
00:37:33,260 --> 00:37:36,540
transparently declare their actions to

822
00:37:36,540 --> 00:37:38,460
uh in their privacy policy no matter

823
00:37:38,460 --> 00:37:40,859
whether this code is obfuscated or not

824
00:37:40,859 --> 00:37:43,320
yeah I think this is my short answer I

825
00:37:43,320 --> 00:37:45,619
don't know whether I I I I

826
00:37:45,619 --> 00:37:48,420
yeah solve your concerns

827
00:37:48,420 --> 00:37:50,400
I guess that would be the ethical way to

828
00:37:50,400 --> 00:37:52,140
do it but there's a lot of scammy dodgy

829
00:37:52,140 --> 00:37:54,540
right right this is a this is a this is

830
00:37:54,540 --> 00:37:56,400
a one of the challenges I think with

831
00:37:56,400 --> 00:38:00,660
Optical Association but I think uh yeah

832
00:38:00,660 --> 00:38:03,720
so maybe we I think we we should we

833
00:38:03,720 --> 00:38:06,780
should also maybe uh have a further look

834
00:38:06,780 --> 00:38:08,400
into this issue later in the future work

835
00:38:08,400 --> 00:38:11,280
yeah all right great um

836
00:38:11,280 --> 00:38:13,140
are there any more questions from the

837
00:38:13,140 --> 00:38:15,000
crowd

838
00:38:15,000 --> 00:38:17,579
nope all right let's give the all three

839
00:38:17,579 --> 00:38:18,740
presenters

840
00:38:18,740 --> 00:38:20,300
thank you guys

841
00:38:20,300 --> 00:38:23,429
[Applause]

