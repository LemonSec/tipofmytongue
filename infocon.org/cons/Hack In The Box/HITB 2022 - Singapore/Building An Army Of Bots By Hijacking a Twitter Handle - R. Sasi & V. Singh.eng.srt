1
00:00:05,819 --> 00:00:10,019
hey hi so um my name is Rahul uh and

2
00:00:10,019 --> 00:00:12,780
this is Vishal and uh

3
00:00:12,780 --> 00:00:16,139
we're gonna have a very interesting talk

4
00:00:16,139 --> 00:00:18,480
um this is actually

5
00:00:18,480 --> 00:00:21,000
a research which we did a while back

6
00:00:21,000 --> 00:00:23,939
which is responsibly disclosed to all

7
00:00:23,939 --> 00:00:25,260
the companies which we will be

8
00:00:25,260 --> 00:00:28,260
mentioning about uh

9
00:00:28,260 --> 00:00:30,539
um before I go into the research I just

10
00:00:30,539 --> 00:00:33,000
want to explain the reason and the way

11
00:00:33,000 --> 00:00:34,680
we reached This research in the first

12
00:00:34,680 --> 00:00:37,200
place right this all came back from a

13
00:00:37,200 --> 00:00:39,540
project which we did a year back the

14
00:00:39,540 --> 00:00:40,860
whole idea of that project and we call

15
00:00:40,860 --> 00:00:42,120
it be visual by the way and I'll just

16
00:00:42,120 --> 00:00:44,100
give you a you know introduction of that

17
00:00:44,100 --> 00:00:47,160
as well well the idea was that on your

18
00:00:47,160 --> 00:00:49,200
phone right on your own

19
00:00:49,200 --> 00:00:51,600
the phone you have an Android or an iOS

20
00:00:51,600 --> 00:00:54,660
you would have almost what 20 30 mobile

21
00:00:54,660 --> 00:00:58,739
apps installed and each of these apps

22
00:00:58,739 --> 00:01:01,620
will have some amount of access to your

23
00:01:01,620 --> 00:01:03,780
data whether it could be SMS it could be

24
00:01:03,780 --> 00:01:05,880
Gallery it could be

25
00:01:05,880 --> 00:01:09,600
you know your contacts well what not you

26
00:01:09,600 --> 00:01:11,400
do not know at this point of time which

27
00:01:11,400 --> 00:01:14,220
of these apps are secure but you have it

28
00:01:14,220 --> 00:01:15,240
anyways

29
00:01:15,240 --> 00:01:17,700
so our thought process was that well can

30
00:01:17,700 --> 00:01:18,840
we rate

31
00:01:18,840 --> 00:01:21,240
um you know can we give

32
00:01:21,240 --> 00:01:23,100
the power to the community and the

33
00:01:23,100 --> 00:01:25,680
people to actually know the security of

34
00:01:25,680 --> 00:01:27,299
any app in the world

35
00:01:27,299 --> 00:01:30,000
and free of cost right so this gave us

36
00:01:30,000 --> 00:01:33,240
the idea of the project division uh be

37
00:01:33,240 --> 00:01:35,340
visual is actually

38
00:01:35,340 --> 00:01:36,960
um the reason why we have this data set

39
00:01:36,960 --> 00:01:39,060
I just want to quickly show you what it

40
00:01:39,060 --> 00:01:41,759
does it is actually a simple search

41
00:01:41,759 --> 00:01:43,920
engine it's a free search engine you can

42
00:01:43,920 --> 00:01:46,979
go put the name of any app

43
00:01:46,979 --> 00:01:49,200
in the world it'll give you the security

44
00:01:49,200 --> 00:01:51,860
score and a security report

45
00:01:51,860 --> 00:01:54,960
I'll show you and I'll tell you why this

46
00:01:54,960 --> 00:01:56,280
is important before I give the talk

47
00:01:56,280 --> 00:01:58,979
because this will set the context uh you

48
00:01:58,979 --> 00:02:01,259
know so it's basically a search engine

49
00:02:01,259 --> 00:02:04,079
you put well any anyone has a name of an

50
00:02:04,079 --> 00:02:06,240
app any app

51
00:02:06,240 --> 00:02:09,899
just just shout out the name if you have

52
00:02:09,899 --> 00:02:11,340
on your phone

53
00:02:11,340 --> 00:02:14,160
or on top of your memory

54
00:02:14,160 --> 00:02:17,480
what is it Spotify Spotify right

55
00:02:17,480 --> 00:02:20,760
nice hope the spelling is correct

56
00:02:20,760 --> 00:02:22,620
oh yeah that's it well it'll give you

57
00:02:22,620 --> 00:02:25,200
all the apps that has Spotify well the

58
00:02:25,200 --> 00:02:27,780
word Spotify in it first of all and

59
00:02:27,780 --> 00:02:29,099
it'll also give you the security score

60
00:02:29,099 --> 00:02:32,040
of all of them well in this case we have

61
00:02:32,040 --> 00:02:35,760
what uh I think close to

62
00:02:35,760 --> 00:02:39,060
uh 69 apps by the way but obviously this

63
00:02:39,060 --> 00:02:41,400
top one is the main Spotify app dash

64
00:02:41,400 --> 00:02:43,560
system would be clones or ripoff etc etc

65
00:02:43,560 --> 00:02:45,540
but then actually you can see that

66
00:02:45,540 --> 00:02:47,940
there's a security score Associated well

67
00:02:47,940 --> 00:02:49,319
then you can actually go check the

68
00:02:49,319 --> 00:02:51,300
report well the report will give you

69
00:02:51,300 --> 00:02:54,060
pretty much hey what we do is we go into

70
00:02:54,060 --> 00:02:57,780
in-depth analysis of the app

71
00:02:57,780 --> 00:03:00,780
uh and again it's free by the way and

72
00:03:00,780 --> 00:03:02,700
it'll give you all the security issues

73
00:03:02,700 --> 00:03:05,519
associated with it this way a consumer

74
00:03:05,519 --> 00:03:08,040
would know what is on his or her phone

75
00:03:08,040 --> 00:03:09,959
right and and

76
00:03:09,959 --> 00:03:11,340
and

77
00:03:11,340 --> 00:03:13,080
and then so much more information right

78
00:03:13,080 --> 00:03:14,220
and you can actually go very

79
00:03:14,220 --> 00:03:16,739
specifically check uh well you know in

80
00:03:16,739 --> 00:03:19,440
in case of Spotify I know you might not

81
00:03:19,440 --> 00:03:21,659
be able to see let me just scream well

82
00:03:21,659 --> 00:03:24,300
you know well these are the high level

83
00:03:24,300 --> 00:03:26,159
security issues

84
00:03:26,159 --> 00:03:27,840
um for instance they have something

85
00:03:27,840 --> 00:03:30,900
called app loving right and there is a

86
00:03:30,900 --> 00:03:34,500
chance that the SDK key of app login is

87
00:03:34,500 --> 00:03:37,739
hard coded in in the app uh well you

88
00:03:37,739 --> 00:03:39,420
know we'll come to know about it but but

89
00:03:39,420 --> 00:03:41,879
the thing is that once we launch this

90
00:03:41,879 --> 00:03:44,519
consumers so people started you know

91
00:03:44,519 --> 00:03:48,180
sending apps requests to test right and

92
00:03:48,180 --> 00:03:50,220
as if today we have a million apps in

93
00:03:50,220 --> 00:03:51,720
the world scanned

94
00:03:51,720 --> 00:03:54,180
uh so a data from a million apps which

95
00:03:54,180 --> 00:03:56,220
in the security report of a million apps

96
00:03:56,220 --> 00:04:00,840
is available uh which is the base of

97
00:04:00,840 --> 00:04:02,400
This research

98
00:04:02,400 --> 00:04:05,640
now what we found can we go back to uh

99
00:04:05,640 --> 00:04:10,399
so what we found from this slide right

100
00:04:12,720 --> 00:04:17,599
the present yeah

101
00:04:17,760 --> 00:04:20,478
foreign

102
00:04:21,779 --> 00:04:26,460
looking at uh all these million apps in

103
00:04:26,460 --> 00:04:28,500
the world is

104
00:04:28,500 --> 00:04:30,660
worth a huge number of these apps have

105
00:04:30,660 --> 00:04:33,360
crazy crazy security issues when I say

106
00:04:33,360 --> 00:04:35,759
crazy crazy security issues they were

107
00:04:35,759 --> 00:04:39,320
almost 10 000 apps who has hard-coded

108
00:04:39,320 --> 00:04:43,680
AWS API keys inside the app

109
00:04:43,680 --> 00:04:46,080
that means an attacker can well you

110
00:04:46,080 --> 00:04:48,000
would know an API key of AWS is like the

111
00:04:48,000 --> 00:04:50,220
password of AWS server an attacker who

112
00:04:50,220 --> 00:04:52,320
has access to the API key can literally

113
00:04:52,320 --> 00:04:54,300
get full access to the

114
00:04:54,300 --> 00:04:57,840
um you know AWS infrastructure many of

115
00:04:57,840 --> 00:05:00,120
them had well you know

116
00:05:00,120 --> 00:05:02,880
the Firebase key some of them had

117
00:05:02,880 --> 00:05:06,360
Firebase URLs which which had re you

118
00:05:06,360 --> 00:05:08,040
know by default write permissions into

119
00:05:08,040 --> 00:05:09,419
the database

120
00:05:09,419 --> 00:05:12,060
um you know so if you look at this the

121
00:05:12,060 --> 00:05:14,759
whole statistics we found well you know

122
00:05:14,759 --> 00:05:17,400
crazy number of apps like lacks of a

123
00:05:17,400 --> 00:05:20,820
100K 200k apps uh with some of these

124
00:05:20,820 --> 00:05:23,160
high level issues now

125
00:05:23,160 --> 00:05:24,960
many of them what you see on the sheet

126
00:05:24,960 --> 00:05:27,120
are hard-coded API keys right hardcore

127
00:05:27,120 --> 00:05:30,120
API keys are hardcoded password uh to a

128
00:05:30,120 --> 00:05:31,979
critical infrastructure what is the

129
00:05:31,979 --> 00:05:33,539
infrastructure it could be send desk by

130
00:05:33,539 --> 00:05:35,759
the way all the supporting all the

131
00:05:35,759 --> 00:05:38,940
support tickets are stored well that API

132
00:05:38,940 --> 00:05:41,340
key is actually inside the app right

133
00:05:41,340 --> 00:05:42,900
um like I just said

134
00:05:42,900 --> 00:05:45,600
um so the thing is that well we have we

135
00:05:45,600 --> 00:05:48,000
have almost what uh 200 plus signatures

136
00:05:48,000 --> 00:05:50,520
of API Keys which we are specifically

137
00:05:50,520 --> 00:05:53,639
looking for in these apps now after

138
00:05:53,639 --> 00:05:55,139
finding these Keys one of the

139
00:05:55,139 --> 00:05:57,360
interesting thing was how many of these

140
00:05:57,360 --> 00:05:59,520
API keys can actually be exploited to

141
00:05:59,520 --> 00:06:01,220
get some

142
00:06:01,220 --> 00:06:05,120
deeper insights or deeper access right

143
00:06:05,120 --> 00:06:07,440
so This research very specifically

144
00:06:07,440 --> 00:06:10,199
focused on one key which is Twitter uh

145
00:06:10,199 --> 00:06:13,380
we have you know we have published

146
00:06:13,380 --> 00:06:16,380
um multiple reports on how attackers can

147
00:06:16,380 --> 00:06:18,539
expert other Keys as well but this is

148
00:06:18,539 --> 00:06:22,500
very specific to Twitter keys and uh

149
00:06:22,500 --> 00:06:24,620
um

150
00:06:25,699 --> 00:06:29,340
yeah so so so I think again like I'm

151
00:06:29,340 --> 00:06:31,259
like the manager who just does all the

152
00:06:31,259 --> 00:06:33,240
talk we shall ask the guy who's just the

153
00:06:33,240 --> 00:06:35,639
actual work so you know I will hand it

154
00:06:35,639 --> 00:06:37,680
over to him but but the research very

155
00:06:37,680 --> 00:06:39,479
specifically covers

156
00:06:39,479 --> 00:06:41,400
what did we find

157
00:06:41,400 --> 00:06:43,620
in Twitter API key because we found

158
00:06:43,620 --> 00:06:46,139
three thousand company companies leaking

159
00:06:46,139 --> 00:06:48,180
their Twitter API keys inside the app

160
00:06:48,180 --> 00:06:50,580
now if you get access to our Twitter API

161
00:06:50,580 --> 00:06:52,919
key what could you know what could you

162
00:06:52,919 --> 00:06:56,280
do with it right I mean uh you know

163
00:06:56,280 --> 00:06:57,780
well

164
00:06:57,780 --> 00:06:59,819
in not all cases you could exploit it by

165
00:06:59,819 --> 00:07:03,180
the way but we did some research and we

166
00:07:03,180 --> 00:07:04,800
were able to find out with certain

167
00:07:04,800 --> 00:07:07,259
scenarios which will actually give you

168
00:07:07,259 --> 00:07:09,060
access to the entire corporate Twitter

169
00:07:09,060 --> 00:07:11,340
account of the company

170
00:07:11,340 --> 00:07:12,180
um

171
00:07:12,180 --> 00:07:14,819
and and uh well everything you you want

172
00:07:14,819 --> 00:07:16,979
to talk we disclosed to Twitter some of

173
00:07:16,979 --> 00:07:18,240
them do the individual companies has

174
00:07:18,240 --> 00:07:22,259
also over to you okay

175
00:07:22,860 --> 00:07:23,880
thank you Ryan

176
00:07:23,880 --> 00:07:26,039
so basically today we are going to talk

177
00:07:26,039 --> 00:07:28,319
about the how we hacked the Unicorn

178
00:07:28,319 --> 00:07:30,720
companies so basically we compromise the

179
00:07:30,720 --> 00:07:32,940
Twitter accounts of many unicorn

180
00:07:32,940 --> 00:07:35,520
companies for doing our research so

181
00:07:35,520 --> 00:07:37,199
first we'll be talking there are the

182
00:07:37,199 --> 00:07:40,380
three agendas for this so first we're

183
00:07:40,380 --> 00:07:43,440
gonna be what did we find where did we

184
00:07:43,440 --> 00:07:44,220
find

185
00:07:44,220 --> 00:07:46,560
and this again in the second part we

186
00:07:46,560 --> 00:07:48,599
will be covering like what could be the

187
00:07:48,599 --> 00:07:51,720
impact or these uh what could be the

188
00:07:51,720 --> 00:07:54,080
impact of severity of this Keys leaking

189
00:07:54,080 --> 00:07:58,080
uh or the keys which we have found and

190
00:07:58,080 --> 00:08:00,240
they following forward we will go to the

191
00:08:00,240 --> 00:08:02,940
remediation part like how developer can

192
00:08:02,940 --> 00:08:06,539
prevent uh these mistakes what could be

193
00:08:06,539 --> 00:08:08,520
like what could be the mitigation or the

194
00:08:08,520 --> 00:08:11,960
remediation of those keys

195
00:08:13,319 --> 00:08:15,660
so we will start from the key source and

196
00:08:15,660 --> 00:08:19,440
the key finding in the source

197
00:08:19,440 --> 00:08:22,199
so we have built our own security search

198
00:08:22,199 --> 00:08:24,599
engine so as you say the b visual itself

199
00:08:24,599 --> 00:08:28,080
so what what are the steps we took uh to

200
00:08:28,080 --> 00:08:31,199
show the alert at the visual so the in

201
00:08:31,199 --> 00:08:33,360
the first step we used to collect the

202
00:08:33,360 --> 00:08:35,640
mobile apps and the second in the second

203
00:08:35,640 --> 00:08:38,640
steps we decompile the apps and

204
00:08:38,640 --> 00:08:40,740
following we build our own Edge access

205
00:08:40,740 --> 00:08:42,719
we grab the rejections from the

206
00:08:42,719 --> 00:08:44,520
different sources used to test the

207
00:08:44,520 --> 00:08:47,519
rejections and the third we search in a

208
00:08:47,519 --> 00:08:50,480
large data set

209
00:08:51,360 --> 00:08:54,300
now how do we collect the mobile apps so

210
00:08:54,300 --> 00:08:56,880
they are in is when you use the B visual

211
00:08:56,880 --> 00:08:59,160
itself you will find there are the two

212
00:08:59,160 --> 00:09:01,620
ways to get the mobile app so one can

213
00:09:01,620 --> 00:09:04,440
user one can is uh so locally submit the

214
00:09:04,440 --> 00:09:07,560
data locally submit the package ID

215
00:09:07,560 --> 00:09:09,839
through the BBC itself and the second

216
00:09:09,839 --> 00:09:13,019
user can simply pass the package ID or

217
00:09:13,019 --> 00:09:15,779
the Google Play Store URL uh it's the B

218
00:09:15,779 --> 00:09:18,360
Visual and it will index those apps at

219
00:09:18,360 --> 00:09:20,519
the be visual

220
00:09:20,519 --> 00:09:23,940
moving forward so how do we decompile us

221
00:09:23,940 --> 00:09:26,220
what are the tools we can use so one can

222
00:09:26,220 --> 00:09:28,800
also use the locally to decompile these

223
00:09:28,800 --> 00:09:31,019
apps through different open source tools

224
00:09:31,019 --> 00:09:33,180
so they are openly there are many open

225
00:09:33,180 --> 00:09:35,580
source tools available right now on the

226
00:09:35,580 --> 00:09:38,880
internet so you can use the APK tool or

227
00:09:38,880 --> 00:09:41,399
JD GUI but in the case of V visual

228
00:09:41,399 --> 00:09:44,399
itself we use the ZX tools which

229
00:09:44,399 --> 00:09:47,100
basically decompiles the package ID and

230
00:09:47,100 --> 00:09:49,260
we do and we start the aesthetic

231
00:09:49,260 --> 00:09:53,339
analysis of those code

232
00:09:54,779 --> 00:09:57,720
third the toughest part of y'all so no

233
00:09:57,720 --> 00:10:01,440
one so if we decompile there but uh so

234
00:10:01,440 --> 00:10:03,959
if you if one is trying to find or do

235
00:10:03,959 --> 00:10:07,500
the analysis of that uh code so how he

236
00:10:07,500 --> 00:10:10,500
could find these secrets or any Keys

237
00:10:10,500 --> 00:10:13,440
leaking at the behavior so for that he

238
00:10:13,440 --> 00:10:15,959
has to write the rejections for that or

239
00:10:15,959 --> 00:10:18,600
he can use the grape command through he

240
00:10:18,600 --> 00:10:22,080
he uh he or she could find the any API

241
00:10:22,080 --> 00:10:24,480
keys or the secrets or the keys which

242
00:10:24,480 --> 00:10:27,240
are looking at the code so we have built

243
00:10:27,240 --> 00:10:30,060
our own so basically we have many more

244
00:10:30,060 --> 00:10:33,480
like we have 300 plus uh rejections from

245
00:10:33,480 --> 00:10:36,000
the different service it could be the ad

246
00:10:36,000 --> 00:10:38,880
Network or the social media or the

247
00:10:38,880 --> 00:10:41,880
payment processor or it could be CRM so

248
00:10:41,880 --> 00:10:43,980
we do have the rejections from different

249
00:10:43,980 --> 00:10:47,160
Services which basically we build our

250
00:10:47,160 --> 00:10:49,920
own res access and we also tested some

251
00:10:49,920 --> 00:10:51,779
rejections which are publicly available

252
00:10:51,779 --> 00:10:55,260
and we test this and then we deploy at

253
00:10:55,260 --> 00:10:58,220
the bay visual end

254
00:10:59,040 --> 00:11:02,519
okay so one has the B Visa has also the

255
00:11:02,519 --> 00:11:05,100
features where you can enable the reject

256
00:11:05,100 --> 00:11:07,680
search and you can simply search for the

257
00:11:07,680 --> 00:11:10,860
AWS case or the any case like stripe

258
00:11:10,860 --> 00:11:12,360
Keys it could be or it could be the

259
00:11:12,360 --> 00:11:15,420
razor pay keys or Hubbard HubSpot API

260
00:11:15,420 --> 00:11:17,459
keys so you can simply pass the

261
00:11:17,459 --> 00:11:20,640
rejections or you can simply uh search

262
00:11:20,640 --> 00:11:24,000
the keyword which you wanted to and it

263
00:11:24,000 --> 00:11:27,300
will present all the keys which are

264
00:11:27,300 --> 00:11:29,820
looking in the apps or the companies

265
00:11:29,820 --> 00:11:32,579
which are licking uh those keys or those

266
00:11:32,579 --> 00:11:37,019
Secrets or those tokens itself

267
00:11:37,019 --> 00:11:40,920
and the moving forward so how do you why

268
00:11:40,920 --> 00:11:42,779
we started doing the analysis for the

269
00:11:42,779 --> 00:11:45,000
Twitter so basically we got so many hits

270
00:11:45,000 --> 00:11:47,279
at the bvisit itself as you can see in

271
00:11:47,279 --> 00:11:49,620
the number itself so we got the consumer

272
00:11:49,620 --> 00:11:53,880
key 89 clip 89k plus and the consumer

273
00:11:53,880 --> 00:11:58,920
secret itself 27 so 27k plus but we had

274
00:11:58,920 --> 00:12:01,620
no idea like what to do with this case

275
00:12:01,620 --> 00:12:04,980
like how we can exploit this case like

276
00:12:04,980 --> 00:12:08,279
so we started uh searching at the

277
00:12:08,279 --> 00:12:11,220
internet uh for the any resources which

278
00:12:11,220 --> 00:12:14,040
has like exploitation of those keys if

279
00:12:14,040 --> 00:12:16,680
there is any exploitation if there is

280
00:12:16,680 --> 00:12:18,779
any resources which can helps us to

281
00:12:18,779 --> 00:12:21,720
exploit this case so we at that moment

282
00:12:21,720 --> 00:12:25,800
we uh we had no idea so we and also we

283
00:12:25,800 --> 00:12:28,380
check for the reports like as many of us

284
00:12:28,380 --> 00:12:31,019
like many the security researchers do a

285
00:12:31,019 --> 00:12:33,660
bug bounty hunting so in that case I

286
00:12:33,660 --> 00:12:35,579
checked for the reports if there is any

287
00:12:35,579 --> 00:12:38,220
bug bounty hunting course for the

288
00:12:38,220 --> 00:12:40,920
Twitter itself there were no any reports

289
00:12:40,920 --> 00:12:43,860
for the Twitter things like they are I

290
00:12:43,860 --> 00:12:45,240
saw some of the reports which were

291
00:12:45,240 --> 00:12:47,760
saying only the keys are looking but

292
00:12:47,760 --> 00:12:49,800
they don't don't know how to explore

293
00:12:49,800 --> 00:12:52,740
this case so then we pick up those uh

294
00:12:52,740 --> 00:12:55,260
Twitter Keys We here's whatever the hits

295
00:12:55,260 --> 00:12:58,440
we got and we started our research on

296
00:12:58,440 --> 00:13:01,500
doing how we can explore this case so

297
00:13:01,500 --> 00:13:03,980
for that

298
00:13:05,040 --> 00:13:08,399
the thread fast so we have the findings

299
00:13:08,399 --> 00:13:10,740
we have the case now what could be the

300
00:13:10,740 --> 00:13:13,500
threat or the impact of those case how

301
00:13:13,500 --> 00:13:15,899
one could leverage those case or those

302
00:13:15,899 --> 00:13:19,740
findings so for that we started uh

303
00:13:19,740 --> 00:13:22,860
reading the API documentation or the

304
00:13:22,860 --> 00:13:25,200
whatever the resources that could be

305
00:13:25,200 --> 00:13:27,959
available for the Twitter so for going

306
00:13:27,959 --> 00:13:30,000
through the API documentation of the

307
00:13:30,000 --> 00:13:32,579
Twitter we came to know there is two

308
00:13:32,579 --> 00:13:34,380
types of authentication Twitter said

309
00:13:34,380 --> 00:13:37,920
using for the keys so one is the your

310
00:13:37,920 --> 00:13:40,320
app list authentication so in the case

311
00:13:40,320 --> 00:13:42,480
of app based authentication itself the

312
00:13:42,480 --> 00:13:44,579
table in the case of uh one is the

313
00:13:44,579 --> 00:13:46,440
average authentication and the second

314
00:13:46,440 --> 00:13:50,480
one is user based Authentication

315
00:13:50,959 --> 00:13:53,459
so in the case of app based

316
00:13:53,459 --> 00:13:56,579
authentication what we can do so in that

317
00:13:56,579 --> 00:13:58,560
developer it has basically read only

318
00:13:58,560 --> 00:14:01,380
access for the developer who can search

319
00:14:01,380 --> 00:14:04,440
for the public information uh like we

320
00:14:04,440 --> 00:14:05,820
can search for the tweets or whatever

321
00:14:05,820 --> 00:14:08,820
the things are going on trendings on the

322
00:14:08,820 --> 00:14:11,880
Twitter so these are the uh these are

323
00:14:11,880 --> 00:14:12,680
the

324
00:14:12,680 --> 00:14:15,720
these are the functionalities which

325
00:14:15,720 --> 00:14:17,459
gives the tutor for the app is

326
00:14:17,459 --> 00:14:19,639
Authentication

327
00:14:19,639 --> 00:14:22,200
and for the average authentication

328
00:14:22,200 --> 00:14:24,060
itself there are only two keys

329
00:14:24,060 --> 00:14:26,519
requirement so one is the consumer key

330
00:14:26,519 --> 00:14:28,920
and the other one is the consumer

331
00:14:28,920 --> 00:14:31,099
security

332
00:14:31,500 --> 00:14:34,260
so we started going through the user

333
00:14:34,260 --> 00:14:35,940
based authentication so for the user

334
00:14:35,940 --> 00:14:38,820
based on the regression we need four

335
00:14:38,820 --> 00:14:42,000
credential so that is one is consumer

336
00:14:42,000 --> 00:14:44,760
key second one is consumer secret Third

337
00:14:44,760 --> 00:14:47,040
Base means access token and fourth one

338
00:14:47,040 --> 00:14:50,040
is access token second so for that what

339
00:14:50,040 --> 00:14:52,680
could be done with the uh user based

340
00:14:52,680 --> 00:14:54,720
authentic as a second so basically it

341
00:14:54,720 --> 00:14:57,420
correlates with the user user session

342
00:14:57,420 --> 00:15:01,139
token so in that case one could simply

343
00:15:01,139 --> 00:15:03,959
do all the critical functionalities what

344
00:15:03,959 --> 00:15:05,660
Twitter

345
00:15:05,660 --> 00:15:08,760
gives us so basically that could be

346
00:15:08,760 --> 00:15:12,240
reading the tweets basically that could

347
00:15:12,240 --> 00:15:14,880
be the reading the DMS uh retweeting the

348
00:15:14,880 --> 00:15:16,139
tweets

349
00:15:16,139 --> 00:15:19,560
um gaining access to the followers like

350
00:15:19,560 --> 00:15:22,380
one can follow uh himself or herself as

351
00:15:22,380 --> 00:15:25,800
well one coin simply tweet anything uh

352
00:15:25,800 --> 00:15:28,199
from that account so basically these are

353
00:15:28,199 --> 00:15:29,880
the things which can be done with the

354
00:15:29,880 --> 00:15:33,079
user based Authentication

355
00:15:34,199 --> 00:15:36,360
so what are the naming convention for

356
00:15:36,360 --> 00:15:38,760
the case so some developers also use

357
00:15:38,760 --> 00:15:42,660
this different names or for the same

358
00:15:42,660 --> 00:15:45,000
thing so basically that could be the API

359
00:15:45,000 --> 00:15:47,339
key when you say when you decompile the

360
00:15:47,339 --> 00:15:49,199
apps you will find these are the keys

361
00:15:49,199 --> 00:15:52,100
like API keys this API key consumer

362
00:15:52,100 --> 00:15:55,980
consumer consumers customer key or the

363
00:15:55,980 --> 00:15:58,320
consumer API key or the auth consumer

364
00:15:58,320 --> 00:16:00,600
key these are the same thing like only

365
00:16:00,600 --> 00:16:02,820
the name is different so what developer

366
00:16:02,820 --> 00:16:05,339
does they basically put the different

367
00:16:05,339 --> 00:16:08,760
name for the different Keys we can also

368
00:16:08,760 --> 00:16:11,459
look for this secret as well so there

369
00:16:11,459 --> 00:16:13,980
are like secret as well the app app key

370
00:16:13,980 --> 00:16:16,019
secret or API key secret and the

371
00:16:16,019 --> 00:16:18,120
consumer secret these are the name of

372
00:16:18,120 --> 00:16:20,579
the secret so we can also check for the

373
00:16:20,579 --> 00:16:22,860
tokens as well so in the case of token

374
00:16:22,860 --> 00:16:25,019
as well we know there are the access

375
00:16:25,019 --> 00:16:27,480
token or the token these are the same

376
00:16:27,480 --> 00:16:30,120
names and the four separate as well we

377
00:16:30,120 --> 00:16:32,699
can have the access token sacred or the

378
00:16:32,699 --> 00:16:35,760
token sector so the these are the names

379
00:16:35,760 --> 00:16:39,920
which are for the keys itself

380
00:16:41,160 --> 00:16:44,459
for so basically why I put the like the

381
00:16:44,459 --> 00:16:46,320
don't complicated complicate the API

382
00:16:46,320 --> 00:16:49,019
case what the vendors or developer do a

383
00:16:49,019 --> 00:16:50,940
mistake so they basically put the

384
00:16:50,940 --> 00:16:52,980
different variable name and with the

385
00:16:52,980 --> 00:16:55,259
different key so in this case as you can

386
00:16:55,259 --> 00:16:58,740
see the here it has written the Twitter

387
00:16:58,740 --> 00:17:01,800
consumer key but the token which are

388
00:17:01,800 --> 00:17:04,140
leaking it's a access token so in that

389
00:17:04,140 --> 00:17:06,299
case the developer might think that it

390
00:17:06,299 --> 00:17:08,220
has like limited score for the Twitter

391
00:17:08,220 --> 00:17:10,859
consumer key but as it's licking the

392
00:17:10,859 --> 00:17:13,140
Twitter consumers uh Twitter Twitter

393
00:17:13,140 --> 00:17:16,919
access token so we in that case we could

394
00:17:16,919 --> 00:17:19,740
compromise their Twitter account so we

395
00:17:19,740 --> 00:17:21,959
could play with the H and every

396
00:17:21,959 --> 00:17:23,880
functionality of the Twitter whatever

397
00:17:23,880 --> 00:17:27,179
the Twitter gives us and that's it

398
00:17:27,179 --> 00:17:29,940
so moving forward

399
00:17:29,940 --> 00:17:31,980
what are the impact of leaking forecast

400
00:17:31,980 --> 00:17:34,620
so in fact of looking for kids are like

401
00:17:34,620 --> 00:17:36,720
we can have the consume user based I

402
00:17:36,720 --> 00:17:39,419
think an authentication so in that case

403
00:17:39,419 --> 00:17:43,020
we can read DMS retweet like or delete

404
00:17:43,020 --> 00:17:45,539
any tweets we can remove the followers

405
00:17:45,539 --> 00:17:48,179
or follow any account get account

406
00:17:48,179 --> 00:17:50,520
settings or the change display picture

407
00:17:50,520 --> 00:17:53,280
or whatever the features do a Twitter

408
00:17:53,280 --> 00:17:56,880
gives us so these are the apps like

409
00:17:56,880 --> 00:18:00,720
first we got this many hits 89k and 27k

410
00:18:00,720 --> 00:18:02,700
for the consumer key and the consumer

411
00:18:02,700 --> 00:18:05,940
circuit and then we filter out like how

412
00:18:05,940 --> 00:18:08,760
many keys are valued from these which

413
00:18:08,760 --> 00:18:11,340
are the leaking at the app itself or the

414
00:18:11,340 --> 00:18:14,580
company itself so we we run we did the

415
00:18:14,580 --> 00:18:16,860
automation for that and we found that

416
00:18:16,860 --> 00:18:19,140
there were apps which are leaking only

417
00:18:19,140 --> 00:18:24,179
the both keys where uh more than 4K so

418
00:18:24,179 --> 00:18:27,120
for from that apps itself we started

419
00:18:27,120 --> 00:18:30,840
digging further and we checked that how

420
00:18:30,840 --> 00:18:33,120
many apps are looking valid so they are

421
00:18:33,120 --> 00:18:34,980
in there in that case might be those

422
00:18:34,980 --> 00:18:37,860
keys are licking the dummy credential or

423
00:18:37,860 --> 00:18:41,400
the that might has been revoked or that

424
00:18:41,400 --> 00:18:43,559
might has been false positive so we

425
00:18:43,559 --> 00:18:45,480
removed all those and there were the

426
00:18:45,480 --> 00:18:48,120
apps or the companies which were looking

427
00:18:48,120 --> 00:18:52,260
more than 3K plus Keys itself so after

428
00:18:52,260 --> 00:18:55,020
filtering out all those we checked

429
00:18:55,020 --> 00:18:57,299
though we checked also for the Four Keys

430
00:18:57,299 --> 00:19:01,440
like four auth credential uh which like

431
00:19:01,440 --> 00:19:04,320
the companies which are leaking they all

432
00:19:04,320 --> 00:19:08,220
4ks and we found that there were 230

433
00:19:08,220 --> 00:19:11,100
apps or the companies which were licking

434
00:19:11,100 --> 00:19:13,799
all those four credential which could be

435
00:19:13,799 --> 00:19:16,620
used for the user based authentication

436
00:19:16,620 --> 00:19:20,039
that means we can hijack or we can

437
00:19:20,039 --> 00:19:23,400
compromise their Twitter handle uh for

438
00:19:23,400 --> 00:19:28,220
230 apps or 230 cam companies

439
00:19:28,640 --> 00:19:32,100
so what about the remaining apps so what

440
00:19:32,100 --> 00:19:34,260
could be the uh like they are these are

441
00:19:34,260 --> 00:19:37,020
the apps like 230 apps we're liking the

442
00:19:37,020 --> 00:19:39,360
Four Keys in that case we were able to

443
00:19:39,360 --> 00:19:41,880
compromise their whole Twitter account

444
00:19:41,880 --> 00:19:44,100
so what about the remaining apps which

445
00:19:44,100 --> 00:19:46,380
we are leaving only two keys so in the

446
00:19:46,380 --> 00:19:48,539
case of two case like as I mentioned

447
00:19:48,539 --> 00:19:51,120
then uh in the case of two keys only the

448
00:19:51,120 --> 00:19:52,500
develop what the developer can do

449
00:19:52,500 --> 00:19:54,299
developer has the read-only access

450
00:19:54,299 --> 00:19:56,240
permission to the public information

451
00:19:56,240 --> 00:19:59,640
like they saw Stewarts or anything apart

452
00:19:59,640 --> 00:20:02,460
from that what he can do like basically

453
00:20:02,460 --> 00:20:05,820
here it comes the Twitter WebEx in the

454
00:20:05,820 --> 00:20:06,660
picture

455
00:20:06,660 --> 00:20:08,700
so what is the Twitter WebEx so

456
00:20:08,700 --> 00:20:10,320
basically Twitter WebEx is the things

457
00:20:10,320 --> 00:20:13,740
where we can deploy this deploy where we

458
00:20:13,740 --> 00:20:16,020
can create the Twitter webos and we can

459
00:20:16,020 --> 00:20:19,280
deploy in the app itself in the

460
00:20:19,280 --> 00:20:23,220
Twitter webhook app so after getting the

461
00:20:23,220 --> 00:20:26,400
uh deploying the apps in the app what it

462
00:20:26,400 --> 00:20:29,760
does basically when a user uh subscribed

463
00:20:29,760 --> 00:20:32,700
when a subscribed user do any engagement

464
00:20:32,700 --> 00:20:35,700
it gets it basically sends the Json

465
00:20:35,700 --> 00:20:39,059
event in the live format so when a user

466
00:20:39,059 --> 00:20:41,400
when a subscriber user interest likes do

467
00:20:41,400 --> 00:20:42,600
us

468
00:20:42,600 --> 00:20:45,679
um tweet or do uh

469
00:20:45,679 --> 00:20:48,360
deleted to it or search for any or read

470
00:20:48,360 --> 00:20:50,820
or simply sends a direct message to the

471
00:20:50,820 --> 00:20:53,760
uh to any guy or anyone then in that

472
00:20:53,760 --> 00:20:56,160
case it basically fetch out the events

473
00:20:56,160 --> 00:20:58,320
so that's the events or it's basically

474
00:20:58,320 --> 00:21:00,780
sent the Json ballot in the form of the

475
00:21:00,780 --> 00:21:02,880
events through the Twitter web Hook app

476
00:21:02,880 --> 00:21:05,580
so these are the tutorial books so for

477
00:21:05,580 --> 00:21:08,580
uh for create the Twitter webos we need

478
00:21:08,580 --> 00:21:11,160
a Four Keys like the all those case

479
00:21:11,160 --> 00:21:14,039
consumer consumer secret access token

480
00:21:14,039 --> 00:21:16,799
and access segment but to fetch out the

481
00:21:16,799 --> 00:21:19,380
Twitter Facebook URL we just need only

482
00:21:19,380 --> 00:21:22,500
two keys and we can send a request to

483
00:21:22,500 --> 00:21:24,539
the server and it will send out all

484
00:21:24,539 --> 00:21:27,299
those like all those web URLs which has

485
00:21:27,299 --> 00:21:30,299
been deployed at the app itself so for

486
00:21:30,299 --> 00:21:32,700
that we just need a consumer key and the

487
00:21:32,700 --> 00:21:36,179
consumer secret for that the uh for that

488
00:21:36,179 --> 00:21:39,419
the apps must be using the API like a

489
00:21:39,419 --> 00:21:42,240
premium or Enterprise Twitter API so we

490
00:21:42,240 --> 00:21:44,580
checked for those also and we found that

491
00:21:44,580 --> 00:21:46,679
there were so many companies which we

492
00:21:46,679 --> 00:21:49,320
are using the Twitter premium API

493
00:21:49,320 --> 00:21:52,500
services and they were paying 149 per

494
00:21:52,500 --> 00:21:55,320
month to the Twitter for that thing

495
00:21:55,320 --> 00:21:56,880
foreign

496
00:21:56,880 --> 00:22:00,000
now here comes the expert part how you

497
00:22:00,000 --> 00:22:03,240
get how you get the like issues of the

498
00:22:03,240 --> 00:22:05,700
apps which suppose you the apps which

499
00:22:05,700 --> 00:22:07,980
you are using in your phone so you can

500
00:22:07,980 --> 00:22:10,620
simply go to the B visual index that app

501
00:22:10,620 --> 00:22:13,620
and you can have the report of that app

502
00:22:13,620 --> 00:22:16,440
so in that case you will see all those

503
00:22:16,440 --> 00:22:18,419
findings like whatever the permissions

504
00:22:18,419 --> 00:22:20,760
the app is using what could be the

505
00:22:20,760 --> 00:22:22,140
permissions what could be the dangerous

506
00:22:22,140 --> 00:22:24,480
permission the ad app is taking from

507
00:22:24,480 --> 00:22:26,580
your phone like asking the from your

508
00:22:26,580 --> 00:22:28,500
phone what uh what are the third party

509
00:22:28,500 --> 00:22:31,500
libraries what are the assets that app

510
00:22:31,500 --> 00:22:35,100
is using what are the uh what are the

511
00:22:35,100 --> 00:22:36,840
strings or what are the hard-coded

512
00:22:36,840 --> 00:22:40,200
credentials or API keys or API tokens

513
00:22:40,200 --> 00:22:43,200
that is leaking in that code base and

514
00:22:43,200 --> 00:22:46,020
what are the assets like uh assets in

515
00:22:46,020 --> 00:22:49,200
the case of eyepiece or hostname or the

516
00:22:49,200 --> 00:22:51,539
URLs it could be anything it could be

517
00:22:51,539 --> 00:22:54,059
the Firebase DB itself which you can

518
00:22:54,059 --> 00:22:56,039
check on your browser whether the

519
00:22:56,039 --> 00:22:59,100
service DB is misconfigured or not so

520
00:22:59,100 --> 00:23:00,539
all these things you'll get the

521
00:23:00,539 --> 00:23:02,520
information of all these things at the V

522
00:23:02,520 --> 00:23:04,980
visual end so for that when you search

523
00:23:04,980 --> 00:23:08,100
any Keys when you search any apps at the

524
00:23:08,100 --> 00:23:10,860
division it will show the result and we

525
00:23:10,860 --> 00:23:13,679
how we got so basically we you'll see

526
00:23:13,679 --> 00:23:16,620
the string part where you can find all

527
00:23:16,620 --> 00:23:19,440
those keys leaking at the itself so

528
00:23:19,440 --> 00:23:23,480
there you can see all the Twitter keys

529
00:23:23,940 --> 00:23:27,059
now these are the X like these are the

530
00:23:27,059 --> 00:23:29,460
exploitation which we did we also

531
00:23:29,460 --> 00:23:31,620
compromise some of the verified account

532
00:23:31,620 --> 00:23:34,140
and the Twitter itself where at the top

533
00:23:34,140 --> 00:23:37,200
we read the direct messages DMS of the

534
00:23:37,200 --> 00:23:40,260
different companies and we had these are

535
00:23:40,260 --> 00:23:41,700
the companies there are some companies

536
00:23:41,700 --> 00:23:44,340
which are so many followers and they are

537
00:23:44,340 --> 00:23:46,799
very active on the Twitter itself and

538
00:23:46,799 --> 00:23:49,200
what we what we were able to do we can

539
00:23:49,200 --> 00:23:51,780
we were able to delete or tweet or

540
00:23:51,780 --> 00:23:53,940
retweet or remove any followers from

541
00:23:53,940 --> 00:23:57,179
their account so we had everything in

542
00:23:57,179 --> 00:23:58,559
the case of the Twitter like whatever

543
00:23:58,559 --> 00:24:00,980
the Twitter

544
00:24:00,980 --> 00:24:04,260
offers the functionality for uh to the

545
00:24:04,260 --> 00:24:08,159
user we where we have everything we we

546
00:24:08,159 --> 00:24:12,440
were we compromised all those apps

547
00:24:14,659 --> 00:24:19,380
now so uh as you see the the Twitter is

548
00:24:19,380 --> 00:24:22,140
accessed so we use the Twitter keyword

549
00:24:22,140 --> 00:24:25,020
basically as a variable number to find

550
00:24:25,020 --> 00:24:28,080
the Twitter uh tutor key is clicking at

551
00:24:28,080 --> 00:24:30,240
the B video itself but there are so many

552
00:24:30,240 --> 00:24:32,880
companies which we notice uh later while

553
00:24:32,880 --> 00:24:37,200
reporting to the uh while like while uh

554
00:24:37,200 --> 00:24:39,780
while disclosing the issues to the

555
00:24:39,780 --> 00:24:41,820
Twitter itself or the company itself we

556
00:24:41,820 --> 00:24:43,799
found some of the companies which we are

557
00:24:43,799 --> 00:24:45,240
looking well which were licking the

558
00:24:45,240 --> 00:24:47,580
Twitter keys in the different variable

559
00:24:47,580 --> 00:24:50,580
level as you can see the consumer the

560
00:24:50,580 --> 00:24:52,440
keys is looking at the different

561
00:24:52,440 --> 00:24:54,600
variable like Consumer Care the consumer

562
00:24:54,600 --> 00:24:56,880
sector so in that case the rejections

563
00:24:56,880 --> 00:25:00,600
won't find out so why we didn't use that

564
00:25:00,600 --> 00:25:02,700
rejections for finding out such case

565
00:25:02,700 --> 00:25:04,860
because we are having different false

566
00:25:04,860 --> 00:25:07,020
projects suppose in the case there were

567
00:25:07,020 --> 00:25:09,120
so many apps which we are looking one

568
00:25:09,120 --> 00:25:11,039
need which will uh like which were

569
00:25:11,039 --> 00:25:13,980
having the consumer key and they a some

570
00:25:13,980 --> 00:25:16,799
Sting or there they were the they were

571
00:25:16,799 --> 00:25:19,260
like they were no any state so in that

572
00:25:19,260 --> 00:25:21,299
case we were having different false

573
00:25:21,299 --> 00:25:23,220
budgeting that's why we removed that

574
00:25:23,220 --> 00:25:25,980
part and we put the Twitter keyword

575
00:25:25,980 --> 00:25:28,980
itself to find out the all those keys so

576
00:25:28,980 --> 00:25:31,679
these are not the one 230 apps which are

577
00:25:31,679 --> 00:25:34,440
licking the all four keys or we were or

578
00:25:34,440 --> 00:25:36,419
these are there are not only the three

579
00:25:36,419 --> 00:25:38,580
3K apps which are licking the Twitter

580
00:25:38,580 --> 00:25:40,679
case and we were able to compromise that

581
00:25:40,679 --> 00:25:43,260
there are many more apps which might be

582
00:25:43,260 --> 00:25:46,740
looking the keys at the TW keyword or

583
00:25:46,740 --> 00:25:49,260
any other keyword or any other variable

584
00:25:49,260 --> 00:25:53,240
name they might be using in that case

585
00:25:53,360 --> 00:25:55,799
now here it comes to the remediation

586
00:25:55,799 --> 00:25:58,620
part how we can mitigate or how we can

587
00:25:58,620 --> 00:26:01,260
remediate these things or how developer

588
00:26:01,260 --> 00:26:06,919
can basically stop making these mistakes

589
00:26:07,320 --> 00:26:09,480
like we so first we'll talk about the

590
00:26:09,480 --> 00:26:11,820
where the problem lies so basically they

591
00:26:11,820 --> 00:26:13,980
are the proper security like security

592
00:26:13,980 --> 00:26:16,740
pipelines so whenever the developer puts

593
00:26:16,740 --> 00:26:19,140
a code into the production there is no

594
00:26:19,140 --> 00:26:21,840
proper security pipeline so that's that

595
00:26:21,840 --> 00:26:23,820
should be like while pushing the code in

596
00:26:23,820 --> 00:26:26,039
the production it should be follow it

597
00:26:26,039 --> 00:26:28,140
should be sent to the security team for

598
00:26:28,140 --> 00:26:30,900
this proper source code review or he or

599
00:26:30,900 --> 00:26:33,840
she can do uh use the open source tools

600
00:26:33,840 --> 00:26:36,539
as well for the security testing like if

601
00:26:36,539 --> 00:26:40,200
any keys or any sort of a sample any

602
00:26:40,200 --> 00:26:42,600
sort of tokens which he or she has hard

603
00:26:42,600 --> 00:26:45,720
coded in the code itself and there is uh

604
00:26:45,720 --> 00:26:48,179
are the other like in the other step so

605
00:26:48,179 --> 00:26:49,860
there is the lack of awareness as well

606
00:26:49,860 --> 00:26:52,860
so as you see so there we checked at the

607
00:26:52,860 --> 00:26:54,659
internet itself there was no

608
00:26:54,659 --> 00:26:56,820
exploitation of the Twitter case so

609
00:26:56,820 --> 00:26:58,679
developer don't know how what could be

610
00:26:58,679 --> 00:27:00,659
what could be the things which can be

611
00:27:00,659 --> 00:27:03,000
played with the Twitter API case if he

612
00:27:03,000 --> 00:27:06,120
or she is licking those kids so in that

613
00:27:06,120 --> 00:27:08,039
in that case the developer should be

614
00:27:08,039 --> 00:27:10,620
made aware of those keys and the 30

615
00:27:10,620 --> 00:27:12,860
budgeting parts so lot of company

616
00:27:12,860 --> 00:27:15,720
nowaday a lot of company uh basically

617
00:27:15,720 --> 00:27:17,880
invest money for their web app like

618
00:27:17,880 --> 00:27:20,220
secure for the securing securing their

619
00:27:20,220 --> 00:27:22,559
web app but in the case of more Android

620
00:27:22,559 --> 00:27:25,380
app they don't do a proper budgeting or

621
00:27:25,380 --> 00:27:27,539
they don't do a proper security testing

622
00:27:27,539 --> 00:27:31,260
or Pro they don't set up a security team

623
00:27:31,260 --> 00:27:35,480
for testing all those mobile apps

624
00:27:36,539 --> 00:27:38,820
so how we can defend against these

625
00:27:38,820 --> 00:27:41,400
attacks so there is the first first is

626
00:27:41,400 --> 00:27:43,380
the source code review so one has to do

627
00:27:43,380 --> 00:27:45,779
a proper Source contribute one has to

628
00:27:45,779 --> 00:27:48,360
check for if there is like if there is

629
00:27:48,360 --> 00:27:52,620
any keys or sample tokens or any apis or

630
00:27:52,620 --> 00:27:54,539
anything like any secrets which are

631
00:27:54,539 --> 00:27:58,500
being leaked at the code itself so so

632
00:27:58,500 --> 00:28:00,240
these uh these are the things which can

633
00:28:00,240 --> 00:28:02,460
be done uh which should be done while

634
00:28:02,460 --> 00:28:04,440
doing the source code review or there

635
00:28:04,440 --> 00:28:06,299
are many more tools which can which are

636
00:28:06,299 --> 00:28:07,980
available there nowadays they are

637
00:28:07,980 --> 00:28:12,179
extension available itself so

638
00:28:12,179 --> 00:28:14,340
um so that can be done so also the

639
00:28:14,340 --> 00:28:17,460
GitHub has recently introduced uh this

640
00:28:17,460 --> 00:28:19,380
feature like whatever if any developer

641
00:28:19,380 --> 00:28:22,020
is pushing any code

642
00:28:22,020 --> 00:28:24,539
um at the GitHub so what basically the

643
00:28:24,539 --> 00:28:27,179
GitHub does they actually find out those

644
00:28:27,179 --> 00:28:30,360
keys and send out the alert to the

645
00:28:30,360 --> 00:28:32,240
developer

646
00:28:32,240 --> 00:28:35,100
secondly the hiring case instead of hard

647
00:28:35,100 --> 00:28:38,700
coding the code in the instead of hard

648
00:28:38,700 --> 00:28:41,340
coding the credential or the tokens in

649
00:28:41,340 --> 00:28:43,500
the code itself what we can do we can

650
00:28:43,500 --> 00:28:45,960
create a environment variable and we can

651
00:28:45,960 --> 00:28:49,140
put that code we can put that tokens

652
00:28:49,140 --> 00:28:52,260
locally in that case whenever you are

653
00:28:52,260 --> 00:28:55,320
going to post make sure you don't put

654
00:28:55,320 --> 00:28:57,840
the environment file at the code itself

655
00:28:57,840 --> 00:28:59,820
like at the repo itself

656
00:28:59,820 --> 00:29:03,659
third one is rotating the API keys so

657
00:29:03,659 --> 00:29:06,059
the kpi keys should be rotated in every

658
00:29:06,059 --> 00:29:09,000
six month like if anyone has compromised

659
00:29:09,000 --> 00:29:11,880
your API key in that cost in that case

660
00:29:11,880 --> 00:29:14,820
he might not get a use he might not he

661
00:29:14,820 --> 00:29:16,919
could not be used after this six month

662
00:29:16,919 --> 00:29:19,260
or after the two months or after some

663
00:29:19,260 --> 00:29:21,960
period of time so in that case you have

664
00:29:21,960 --> 00:29:23,940
to rotate one of the things we saw is

665
00:29:23,940 --> 00:29:26,039
that well after we report these keys to

666
00:29:26,039 --> 00:29:29,159
these companies uh they actually remove

667
00:29:29,159 --> 00:29:31,679
these keys from the app well from

668
00:29:31,679 --> 00:29:35,039
removing remove it from being hard coded

669
00:29:35,039 --> 00:29:35,940
in the app

670
00:29:35,940 --> 00:29:38,220
but they never rotated the key by the

671
00:29:38,220 --> 00:29:39,659
way well the reason they never rotated

672
00:29:39,659 --> 00:29:41,460
is because there's other backend code

673
00:29:41,460 --> 00:29:43,559
which is using these keys and if they

674
00:29:43,559 --> 00:29:46,080
rotated the whole you know the system

675
00:29:46,080 --> 00:29:47,820
might collapse

676
00:29:47,820 --> 00:29:49,320
um and and this especially not with

677
00:29:49,320 --> 00:29:51,179
Twitter by the way we saw a lot more

678
00:29:51,179 --> 00:29:53,580
with AWS keys where well they all fixed

679
00:29:53,580 --> 00:29:55,679
it in the code but never rotated the key

680
00:29:55,679 --> 00:29:57,899
which means you can just go back and

681
00:29:57,899 --> 00:30:01,140
find a older version of the app from

682
00:30:01,140 --> 00:30:03,179
somewhere on the internet which many

683
00:30:03,179 --> 00:30:05,159
ransomware groups actually does by the

684
00:30:05,159 --> 00:30:07,679
way uh and then well you can then still

685
00:30:07,679 --> 00:30:09,120
find the key

686
00:30:09,120 --> 00:30:11,640
um you know and exploit it yeah so in

687
00:30:11,640 --> 00:30:13,860
this case you once would have removed

688
00:30:13,860 --> 00:30:16,200
and revoked the case not only they

689
00:30:16,200 --> 00:30:18,840
remove the case so we as Rahul mentioned

690
00:30:18,840 --> 00:30:20,760
we sent them multiple reports to the

691
00:30:20,760 --> 00:30:22,500
different company and in that case

692
00:30:22,500 --> 00:30:24,799
basically they removed the case and they

693
00:30:24,799 --> 00:30:27,779
uh basically release the new version of

694
00:30:27,779 --> 00:30:29,760
the apps which get indexed at the B

695
00:30:29,760 --> 00:30:31,799
widget itself but the attacker which has

696
00:30:31,799 --> 00:30:34,320
compromised that case can still use that

697
00:30:34,320 --> 00:30:36,960
case like in the absence of developer

698
00:30:36,960 --> 00:30:40,320
and it's it's like you have basically

699
00:30:40,320 --> 00:30:43,620
changed your the key from uh one

700
00:30:43,620 --> 00:30:45,240
position to the different position but

701
00:30:45,240 --> 00:30:47,700
you didn't change your lock so just like

702
00:30:47,700 --> 00:30:49,740
that so in that case one has to

703
00:30:49,740 --> 00:30:52,020
basically remove and revoke the keys at

704
00:30:52,020 --> 00:30:54,059
the same time not only the remover key

705
00:30:54,059 --> 00:30:57,020
will solve the problem

706
00:30:57,899 --> 00:30:59,460
with the cyclic processor it should be

707
00:30:59,460 --> 00:31:01,320
the sideline for not not a one-time

708
00:31:01,320 --> 00:31:03,659
process like uh the one time you did the

709
00:31:03,659 --> 00:31:06,480
source code review and then you hide you

710
00:31:06,480 --> 00:31:09,240
hide the keys and the rotate that key so

711
00:31:09,240 --> 00:31:10,919
it's so whenever you are going to push

712
00:31:10,919 --> 00:31:14,039
any code at the whenever you are going

713
00:31:14,039 --> 00:31:17,640
to push any code at the uh at any

714
00:31:17,640 --> 00:31:19,919
platform then it should be followed in a

715
00:31:19,919 --> 00:31:22,020
cyclic way so you have to go through the

716
00:31:22,020 --> 00:31:23,940
source code review then the hiding Keys

717
00:31:23,940 --> 00:31:27,000
then the routing rotating keys so that's

718
00:31:27,000 --> 00:31:29,940
it all right thank you we have time for

719
00:31:29,940 --> 00:31:31,380
questions

720
00:31:31,380 --> 00:31:33,840
okay so unfortunately we don't have time

721
00:31:33,840 --> 00:31:35,220
for questions because it's time for

722
00:31:35,220 --> 00:31:36,080
lunch

723
00:31:36,080 --> 00:31:38,340
who asked the question just a raise of

724
00:31:38,340 --> 00:31:40,440
hand or the first one is there any

725
00:31:40,440 --> 00:31:42,419
option to upload APK remember who will

726
00:31:42,419 --> 00:31:43,880
answer your questions

727
00:31:43,880 --> 00:31:47,940
so yeah I can show you

728
00:31:47,940 --> 00:31:50,520
so there's an option okay there is an

729
00:31:50,520 --> 00:31:53,580
option so uh for the person asked the

730
00:31:53,580 --> 00:31:54,539
question actually you can head to the

731
00:31:54,539 --> 00:31:56,640
back we have a small price for you so

732
00:31:56,640 --> 00:31:57,960
yeah let's head to the back after this

733
00:31:57,960 --> 00:32:00,059
then maybe we just have one more

734
00:32:00,059 --> 00:32:02,460
question so our user uploaded APK

735
00:32:02,460 --> 00:32:04,200
submissions collected and stored by

736
00:32:04,200 --> 00:32:05,419
Cloud Center

737
00:32:05,419 --> 00:32:07,679
apps we don't store the apps we always

738
00:32:07,679 --> 00:32:12,059
store the reports apps the binary we do

739
00:32:12,059 --> 00:32:13,500
not store

740
00:32:13,500 --> 00:32:15,960
so basically apps are great is basically

741
00:32:15,960 --> 00:32:18,179
as the package ID get uh get from the

742
00:32:18,179 --> 00:32:21,480
user itself and then we yeah whether we

743
00:32:21,480 --> 00:32:23,580
store the APK which we do no no we we

744
00:32:23,580 --> 00:32:26,220
don't we only store the reports

745
00:32:26,220 --> 00:32:28,740
all right so okay uh sorry we're already

746
00:32:28,740 --> 00:32:31,260
out of time so actually for those who

747
00:32:31,260 --> 00:32:33,440
still want to ask them these questions

748
00:32:33,440 --> 00:32:36,299
you can hit to the back and approach

749
00:32:36,299 --> 00:32:38,039
because I'm doing lunch and they'll be

750
00:32:38,039 --> 00:32:40,260
more than happy to answer questions well

751
00:32:40,260 --> 00:32:43,740
um sorry this

752
00:32:44,100 --> 00:32:46,140
um any other questions that interest you

753
00:32:46,140 --> 00:32:48,179
though we can maybe spare one more

754
00:32:48,179 --> 00:32:49,320
questions because there are some pretty

755
00:32:49,320 --> 00:32:51,120
good compelling questions coming up all

756
00:32:51,120 --> 00:32:52,980
right all right sure but maybe Raul if

757
00:32:52,980 --> 00:32:54,419
there's any other questions yeah that's

758
00:32:54,419 --> 00:32:56,220
Cloud secretly perform static analysis

759
00:32:56,220 --> 00:32:58,260
of the app packages is it Dynamic

760
00:32:58,260 --> 00:33:00,179
analysis well the community version this

761
00:33:00,179 --> 00:33:02,179
is a community version by the way and uh

762
00:33:02,179 --> 00:33:04,919
the primary objectives so that it's

763
00:33:04,919 --> 00:33:06,840
meant for consumers so that they should

764
00:33:06,840 --> 00:33:09,240
know what what is installed on their

765
00:33:09,240 --> 00:33:11,460
phone right uh that version at this

766
00:33:11,460 --> 00:33:12,899
point of time is very restricted to

767
00:33:12,899 --> 00:33:15,480
static the Enterprise version which is

768
00:33:15,480 --> 00:33:17,220
which is which I'm because there's a

769
00:33:17,220 --> 00:33:18,419
community stage I'm not going to sell

770
00:33:18,419 --> 00:33:20,880
the company now which has all those

771
00:33:20,880 --> 00:33:24,059
things because if you want to do a

772
00:33:24,059 --> 00:33:25,080
dynamic analysis we need the

773
00:33:25,080 --> 00:33:27,419
confirmation of the company so we do not

774
00:33:27,419 --> 00:33:29,279
provide that in the community version so

775
00:33:29,279 --> 00:33:31,260
it's just ethic yeah so Community

776
00:33:31,260 --> 00:33:34,200
version is static yeah all right uh are

777
00:33:34,200 --> 00:33:35,700
there any other plans to include other

778
00:33:35,700 --> 00:33:37,860
app stores such as Appdroid

779
00:33:37,860 --> 00:33:39,600
oh yeah yeah yeah

780
00:33:39,600 --> 00:33:41,940
um yes uh well you know

781
00:33:41,940 --> 00:33:44,519
um we we do if you're putting a package

782
00:33:44,519 --> 00:33:47,519
ID we do look at uh third-party app

783
00:33:47,519 --> 00:33:49,919
shows also to find that app but we first

784
00:33:49,919 --> 00:33:52,019
see Play Store asset or if any

785
00:33:52,019 --> 00:33:54,000
third-party apps has been tampered so we

786
00:33:54,000 --> 00:33:56,100
do find the malware itself yeah at the

787
00:33:56,100 --> 00:33:57,899
beach yeah yeah

788
00:33:57,899 --> 00:34:00,240
all right maybe just one last one yeah

789
00:34:00,240 --> 00:34:02,820
so how is the security scoring done uh

790
00:34:02,820 --> 00:34:04,980
so how reliable accurate it's based on

791
00:34:04,980 --> 00:34:09,599
cwe by the way uh the the cow rating

792
00:34:09,599 --> 00:34:11,339
it's a it's not our standard it's a

793
00:34:11,339 --> 00:34:14,099
public standard which we use to do do

794
00:34:14,099 --> 00:34:17,339
the writing we also look at her you know

795
00:34:17,339 --> 00:34:18,780
I mean we also look at the

796
00:34:18,780 --> 00:34:21,359
exploitability of some of those things

797
00:34:21,359 --> 00:34:23,339
um and if you look at on the top of the

798
00:34:23,339 --> 00:34:24,780
report we would have given a percentage

799
00:34:24,780 --> 00:34:27,000
saying that well this is the percentage

800
00:34:27,000 --> 00:34:29,580
this particular incident affects the

801
00:34:29,580 --> 00:34:31,560
security of the app

802
00:34:31,560 --> 00:34:33,899
um uh so we do public standards uh first

803
00:34:33,899 --> 00:34:37,879
of all CVSs yeah yeah yeah yeah

804
00:34:37,879 --> 00:34:40,199
all right since there's just one last

805
00:34:40,199 --> 00:34:42,239
one then okay fine uh how do clouds like

806
00:34:42,239 --> 00:34:44,639
analyze the Clones accurately if it is

807
00:34:44,639 --> 00:34:46,500
using techniques such as obfuscation and

808
00:34:46,500 --> 00:34:47,820
encryption

809
00:34:47,820 --> 00:34:50,580
oh well see if the apps are obfuscated

810
00:34:50,580 --> 00:34:52,379
it's very difficult by the way you know

811
00:34:52,379 --> 00:34:54,418
so we don't at this point of time have a

812
00:34:54,418 --> 00:34:56,760
mechanism yeah all right thank you

813
00:34:56,760 --> 00:34:58,200
everyone for such the wonderful

814
00:34:58,200 --> 00:35:00,060
interesting questions so we can actually

815
00:35:00,060 --> 00:35:03,180
break for lunch now uh we'll resume at

816
00:35:03,180 --> 00:35:05,880
uh 2 p.m so for paid registrants the

817
00:35:05,880 --> 00:35:07,440
launch is at the back uh for the

818
00:35:07,440 --> 00:35:09,359
non-paid registrants uh can head over to

819
00:35:09,359 --> 00:35:11,460
Buddhist Junction to find something so

820
00:35:11,460 --> 00:35:13,440
role of loss for speakers

821
00:35:13,440 --> 00:35:14,540
oh

822
00:35:14,540 --> 00:35:18,219
[Applause]

