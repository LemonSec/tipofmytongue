1
00:00:00,350 --> 00:00:05,189
<font color="#E5E5E5">hi folks</font><font color="#CCCCCC"> Angie here unfortunately no one</font>

2
00:00:03,720 --> 00:00:07,950
noticed that the microphone was turned

3
00:00:05,190 --> 00:00:09,870
off until<font color="#E5E5E5"> about the</font><font color="#CCCCCC"> nine-minute seven</font>

4
00:00:07,950 --> 00:00:11,940
second mark<font color="#E5E5E5"> so if you go to the</font><font color="#CCCCCC"> nine</font>

5
00:00:09,870 --> 00:00:15,530
<font color="#CCCCCC">minute seven second</font><font color="#E5E5E5"> mark</font><font color="#CCCCCC"> audio will</font>

6
00:00:11,940 --> 00:00:15,530
resume<font color="#E5E5E5"> sorry for the inconvenience</font>

7
00:09:14,690 --> 00:09:29,510
oh well I guess I I guess I got to

8
00:09:22,100 --> 00:09:33,650
restart guys<font color="#E5E5E5"> no never</font><font color="#CCCCCC"> one yeah I'll just</font>

9
00:09:29,510 --> 00:09:35,330
<font color="#E5E5E5">wait</font><font color="#CCCCCC"> for my microphone to</font><font color="#E5E5E5"> get reset no</font>

10
00:09:33,650 --> 00:09:36,709
it's not<font color="#E5E5E5"> a problem</font><font color="#CCCCCC"> I mean there's only</font>

11
00:09:35,330 --> 00:09:39,290
five people<font color="#CCCCCC"> in here I'm not really</font>

12
00:09:36,710 --> 00:09:40,730
<font color="#E5E5E5">worried about the recording I'm worried</font>

13
00:09:39,290 --> 00:09:42,349
about you guys I want<font color="#E5E5E5"> you to have the</font>

14
00:09:40,730 --> 00:09:43,340
<font color="#CCCCCC">takeaway not the not the</font><font color="#E5E5E5"> guys on the air</font>

15
00:09:42,350 --> 00:09:45,740
now if they want to<font color="#E5E5E5"> come see my talk</font>

16
00:09:43,340 --> 00:09:52,460
somewhere<font color="#CCCCCC"> else I can do</font><font color="#E5E5E5"> that</font><font color="#CCCCCC"> I</font><font color="#E5E5E5"> should</font>

17
00:09:45,740 --> 00:09:54,140
<font color="#CCCCCC">have</font><font color="#E5E5E5"> been here</font><font color="#CCCCCC"> alright so</font><font color="#E5E5E5"> as I was</font>

18
00:09:52,460 --> 00:09:56,090
<font color="#CCCCCC">saying before</font><font color="#E5E5E5"> we've gone through the</font>

19
00:09:54,140 --> 00:09:58,760
dotnet journey and in the<font color="#E5E5E5"> beginning</font>

20
00:09:56,090 --> 00:10:00,440
there was asp.net<font color="#E5E5E5"> and now we magically</font>

21
00:09:58,760 --> 00:10:02,810
have a<font color="#CCCCCC"> spi net core</font><font color="#E5E5E5"> and in order to get</font>

22
00:10:00,440 --> 00:10:05,180
there<font color="#E5E5E5"> we had to go through the rigors</font><font color="#CCCCCC"> of</font>

23
00:10:02,810 --> 00:10:08,180
hiking<font color="#E5E5E5"> up the mountain of clothes our</font>

24
00:10:05,180 --> 00:10:11,239
software and<font color="#E5E5E5"> then exposing ourselves to</font>

25
00:10:08,180 --> 00:10:13,489
the glorious<font color="#E5E5E5"> Sun of open source and now</font>

26
00:10:11,240 --> 00:10:16,910
we have a new framework<font color="#E5E5E5"> and this</font>

27
00:10:13,490 --> 00:10:19,070
framework<font color="#E5E5E5"> it has a new HTTP pipeline it</font>

28
00:10:16,910 --> 00:10:21,410
has ways of directly integrating into<font color="#E5E5E5"> it</font>

29
00:10:19,070 --> 00:10:22,670
at such a deep<font color="#CCCCCC"> level that you can just</font>

30
00:10:21,410 --> 00:10:24,199
make<font color="#CCCCCC"> it do whatever you want you can</font>

31
00:10:22,670 --> 00:10:26,420
take<font color="#CCCCCC"> ASP in that core</font><font color="#E5E5E5"> and just make</font><font color="#CCCCCC"> it</font>

32
00:10:24,200 --> 00:10:29,090
do the most imaginable things as long as

33
00:10:26,420 --> 00:10:31,160
you communicate over HTTP or<font color="#E5E5E5"> WebSockets</font>

34
00:10:29,090 --> 00:10:32,900
<font color="#E5E5E5">or standard protocols you will be fine</font>

35
00:10:31,160 --> 00:10:34,189
<font color="#E5E5E5">the</font><font color="#CCCCCC"> ESPY</font><font color="#E5E5E5"> on that core it's built with</font>

36
00:10:32,900 --> 00:10:36,500
the latest<font color="#CCCCCC"> and greatest</font><font color="#E5E5E5"> C sharp features</font>

37
00:10:34,190 --> 00:10:38,060
dotnet framework is locked<font color="#CCCCCC"> two versions</font>

38
00:10:36,500 --> 00:10:39,140
of Windows you<font color="#CCCCCC"> have versions</font><font color="#E5E5E5"> of Windows</font>

39
00:10:38,060 --> 00:10:41,359
<font color="#CCCCCC">that come out in</font><font color="#E5E5E5"> the</font><font color="#CCCCCC"> spring and that</font>

40
00:10:39,140 --> 00:10:43,220
<font color="#CCCCCC">come out</font><font color="#E5E5E5"> in the fall that's when you get</font>

41
00:10:41,360 --> 00:10:45,440
<font color="#E5E5E5">your revisions of that but dotnet core</font>

42
00:10:43,220 --> 00:10:46,970
it comes out every<font color="#E5E5E5"> quarter it's it's</font>

43
00:10:45,440 --> 00:10:49,190
coming up<font color="#CCCCCC"> constantly they have constant</font>

44
00:10:46,970 --> 00:10:51,740
<font color="#CCCCCC">release schedules constantly inventing</font>

45
00:10:49,190 --> 00:10:54,530
new<font color="#CCCCCC"> things that was one</font><font color="#E5E5E5"> of the</font><font color="#CCCCCC"> was</font><font color="#E5E5E5"> one</font>

46
00:10:51,740 --> 00:10:57,560
<font color="#E5E5E5">of the major driving factors for the</font>

47
00:10:54,530 --> 00:11:00,260
rewrite the next thing<font color="#E5E5E5"> has built-in</font>

48
00:10:57,560 --> 00:11:01,280
dependency injection<font color="#E5E5E5"> now I know there</font>

49
00:11:00,260 --> 00:11:03,380
are some<font color="#CCCCCC"> inexperienced people</font><font color="#E5E5E5"> in our</font>

50
00:11:01,280 --> 00:11:04,880
<font color="#CCCCCC">audience so I will say this we have</font>

51
00:11:03,380 --> 00:11:08,060
dependency injection<font color="#E5E5E5"> is the ability to</font>

52
00:11:04,880 --> 00:11:10,070
basically take bits of code and give

53
00:11:08,060 --> 00:11:13,339
them the ability<font color="#E5E5E5"> to go into your other</font>

54
00:11:10,070 --> 00:11:14,750
code in a decoupled manner<font color="#CCCCCC"> that</font><font color="#E5E5E5"> way you</font>

55
00:11:13,340 --> 00:11:16,820
can take whatever dependency you have

56
00:11:14,750 --> 00:11:19,790
and just<font color="#E5E5E5"> inject it into that code and</font>

57
00:11:16,820 --> 00:11:21,290
<font color="#E5E5E5">not have to worry about</font><font color="#CCCCCC"> you're not have</font>

58
00:11:19,790 --> 00:11:23,370
to<font color="#E5E5E5"> worry about how you actually</font><font color="#CCCCCC"> get</font><font color="#E5E5E5"> that</font>

59
00:11:21,290 --> 00:11:26,010
<font color="#E5E5E5">process done it's like</font>

60
00:11:23,370 --> 00:11:27,570
so by having this<font color="#E5E5E5"> magic in there you</font>

61
00:11:26,010 --> 00:11:28,890
have a unified model of actually putting

62
00:11:27,570 --> 00:11:30,690
in dependencies if you need to swap

63
00:11:28,890 --> 00:11:32,189
things in the<font color="#CCCCCC"> backend and you</font><font color="#E5E5E5"> can just</font>

64
00:11:30,690 --> 00:11:34,110
<font color="#E5E5E5">take a new implementation</font><font color="#CCCCCC"> of that and</font>

65
00:11:32,190 --> 00:11:37,200
put it<font color="#E5E5E5"> into your existing code and just</font>

66
00:11:34,110 --> 00:11:39,870
never<font color="#CCCCCC"> brakes or</font><font color="#E5E5E5"> you hope it never breaks</font>

67
00:11:37,200 --> 00:11:41,790
<font color="#CCCCCC">if you have</font><font color="#E5E5E5"> tests so the next thing is</font>

68
00:11:39,870 --> 00:11:43,230
<font color="#CCCCCC">the vm independent it'll run on</font><font color="#E5E5E5"> done</font>

69
00:11:41,790 --> 00:11:45,060
that framework down that core<font color="#E5E5E5"> mono</font><font color="#CCCCCC"> we</font>

70
00:11:43,230 --> 00:11:47,340
went<font color="#E5E5E5"> over that the next thing is is that</font>

71
00:11:45,060 --> 00:11:49,140
<font color="#E5E5E5">its host independent so ESPN espy on</font>

72
00:11:47,340 --> 00:11:50,820
that<font color="#CCCCCC"> only ran in</font><font color="#E5E5E5"> I guess</font><font color="#CCCCCC"> but since</font>

73
00:11:49,140 --> 00:11:52,949
asp.net core came out it has<font color="#E5E5E5"> been</font>

74
00:11:50,820 --> 00:11:54,750
<font color="#E5E5E5">building up actual web servers</font><font color="#CCCCCC"> that you</font>

75
00:11:52,950 --> 00:11:57,030
can run it<font color="#E5E5E5"> on so you can continue to run</font>

76
00:11:54,750 --> 00:11:58,320
it on is or you<font color="#E5E5E5"> can use just like the</font>

77
00:11:57,030 --> 00:12:00,270
new native socket implementation that

78
00:11:58,320 --> 00:12:02,040
came out<font color="#CCCCCC"> into</font><font color="#E5E5E5"> one so</font><font color="#CCCCCC"> that is</font><font color="#E5E5E5"> just</font>

79
00:12:00,270 --> 00:12:05,520
completely native built in the<font color="#E5E5E5"> Windows</font>

80
00:12:02,040 --> 00:12:07,829
built into Linux built<font color="#E5E5E5"> into mana I built</font>

81
00:12:05,520 --> 00:12:10,380
into<font color="#E5E5E5"> Mac and use a completely standard</font>

82
00:12:07,830 --> 00:12:12,990
way<font color="#CCCCCC"> of doing it then you have</font><font color="#E5E5E5"> Kestrel</font>

83
00:12:10,380 --> 00:12:15,390
<font color="#E5E5E5">Kestrel is based on</font><font color="#CCCCCC"> Libby UV</font><font color="#E5E5E5"> it's used</font>

84
00:12:12,990 --> 00:12:17,700
by nodejs<font color="#CCCCCC"> so you have</font><font color="#E5E5E5"> battle-hardened</font>

85
00:12:15,390 --> 00:12:21,180
way of<font color="#E5E5E5"> running your dinette core</font><font color="#CCCCCC"> up SP</font>

86
00:12:17,700 --> 00:12:22,950
<font color="#CCCCCC">Annette core applications alright now</font>

87
00:12:21,180 --> 00:12:24,810
let's get<font color="#CCCCCC"> into</font><font color="#E5E5E5"> the meat</font><font color="#CCCCCC"> of the</font>

88
00:12:22,950 --> 00:12:27,360
presentation how do we go about securing

89
00:12:24,810 --> 00:12:28,849
<font color="#CCCCCC">our applications</font><font color="#E5E5E5"> what are good default</font>

90
00:12:27,360 --> 00:12:31,530
ways of doing that

91
00:12:28,850 --> 00:12:32,790
so in this we're<font color="#E5E5E5"> going to take a look</font><font color="#CCCCCC"> at</font>

92
00:12:31,530 --> 00:12:34,740
some<font color="#E5E5E5"> of the authentication strategies</font>

93
00:12:32,790 --> 00:12:35,910
that exist in<font color="#CCCCCC"> ASP on that core we're</font>

94
00:12:34,740 --> 00:12:37,320
<font color="#E5E5E5">going to take a look at some of the</font>

95
00:12:35,910 --> 00:12:39,030
<font color="#E5E5E5">authorization strategy so we have</font>

96
00:12:37,320 --> 00:12:41,340
authentication identifying who you are

97
00:12:39,030 --> 00:12:42,900
authorization what can you do<font color="#E5E5E5"> and we're</font>

98
00:12:41,340 --> 00:12:44,190
gonna<font color="#E5E5E5"> take a look at data protection</font><font color="#CCCCCC"> how</font>

99
00:12:42,900 --> 00:12:45,689
do we make<font color="#CCCCCC"> sure that our</font><font color="#E5E5E5"> cookies are</font>

100
00:12:44,190 --> 00:12:47,490
encrypted how do we make sure<font color="#CCCCCC"> their user</font>

101
00:12:45,690 --> 00:12:49,590
data is encrypted<font color="#CCCCCC"> next thing we're going</font>

102
00:12:47,490 --> 00:12:51,660
<font color="#E5E5E5">to take a look at is in the recent times</font>

103
00:12:49,590 --> 00:12:53,520
<font color="#CCCCCC">enforcing</font><font color="#E5E5E5"> HTTPS we have let's encrypt</font>

104
00:12:51,660 --> 00:12:55,949
nowadays you should be<font color="#E5E5E5"> running HTTPS on</font>

105
00:12:53,520 --> 00:12:58,110
your applications<font color="#E5E5E5"> and then we're gonna</font>

106
00:12:55,950 --> 00:13:01,490
go<font color="#CCCCCC"> over some other common attacks and</font>

107
00:12:58,110 --> 00:13:04,140
how we mitigate<font color="#E5E5E5"> them</font><font color="#CCCCCC"> so</font><font color="#E5E5E5"> authentication</font>

108
00:13:01,490 --> 00:13:07,050
<font color="#E5E5E5">HP on that core comes with a long legacy</font>

109
00:13:04,140 --> 00:13:10,980
behind<font color="#E5E5E5"> it and now we have an</font><font color="#CCCCCC"> identity</font>

110
00:13:07,050 --> 00:13:12,180
framework this framework allows us<font color="#E5E5E5"> I'll</font>

111
00:13:10,980 --> 00:13:14,550
get into that<font color="#E5E5E5"> in</font><font color="#CCCCCC"> a bit but this</font>

112
00:13:12,180 --> 00:13:15,839
<font color="#E5E5E5">framework allows us to build on</font><font color="#CCCCCC"> top how</font>

113
00:13:14,550 --> 00:13:17,729
we want to<font color="#E5E5E5"> identify users and how we</font>

114
00:13:15,840 --> 00:13:19,110
want to<font color="#CCCCCC"> authorize them the other thing</font>

115
00:13:17,730 --> 00:13:20,160
that we<font color="#E5E5E5"> can do is we can use built-in</font>

116
00:13:19,110 --> 00:13:21,660
<font color="#E5E5E5">windows authentication</font><font color="#CCCCCC"> news</font>

117
00:13:20,160 --> 00:13:23,280
authentication continues to be a

118
00:13:21,660 --> 00:13:25,079
standard way of<font color="#E5E5E5"> doing</font><font color="#CCCCCC"> like intranet</font>

119
00:13:23,280 --> 00:13:27,569
applications or doing<font color="#E5E5E5"> things that you</font>

120
00:13:25,080 --> 00:13:30,870
<font color="#CCCCCC">don't really need to have</font><font color="#E5E5E5"> interfaces</font>

121
00:13:27,570 --> 00:13:33,840
with the<font color="#CCCCCC"> next thing is we can DIY</font><font color="#E5E5E5"> your</font>

122
00:13:30,870 --> 00:13:35,040
authentication<font color="#CCCCCC"> so you can build cookie</font>

123
00:13:33,840 --> 00:13:36,270
authentication you can build token

124
00:13:35,040 --> 00:13:37,439
authentication<font color="#CCCCCC"> but</font>

125
00:13:36,270 --> 00:13:39,360
mainly going<font color="#E5E5E5"> because</font><font color="#CCCCCC"> I'm</font><font color="#E5E5E5"> trading on</font>

126
00:13:37,440 --> 00:13:41,490
cookies<font color="#CCCCCC"> and the</font><font color="#E5E5E5"> next thing that I</font><font color="#CCCCCC"> just</font>

127
00:13:39,360 --> 00:13:42,270
want to<font color="#CCCCCC"> mention in brief is that all</font><font color="#E5E5E5"> of</font>

128
00:13:41,490 --> 00:13:44,850
this stuff

129
00:13:42,270 --> 00:13:46,680
<font color="#E5E5E5">Microsoft has built templates for so if</font>

130
00:13:44,850 --> 00:13:48,210
<font color="#E5E5E5">you want to go and you want to find and</font>

131
00:13:46,680 --> 00:13:50,069
just drop<font color="#E5E5E5"> into</font><font color="#CCCCCC"> your application you</font><font color="#E5E5E5"> can</font>

132
00:13:48,210 --> 00:13:52,860
just<font color="#CCCCCC"> google</font><font color="#E5E5E5"> for specific templates for</font>

133
00:13:50,070 --> 00:13:55,650
single<font color="#E5E5E5"> author for single identity multi</font>

134
00:13:52,860 --> 00:13:57,710
identity<font color="#E5E5E5"> and just go for them and just</font>

135
00:13:55,650 --> 00:14:00,480
drag and drop<font color="#CCCCCC"> them in</font><font color="#E5E5E5"> your application</font>

136
00:13:57,710 --> 00:14:03,150
that's<font color="#CCCCCC"> alright</font><font color="#E5E5E5"> I'd any framework and any</font>

137
00:14:00,480 --> 00:14:05,490
framework is<font color="#CCCCCC"> used to build complicated</font>

138
00:14:03,150 --> 00:14:08,010
mentorship systems you can have account

139
00:14:05,490 --> 00:14:09,840
management<font color="#CCCCCC"> it'll do external logins</font><font color="#E5E5E5"> and</font>

140
00:14:08,010 --> 00:14:16,220
it has the<font color="#CCCCCC"> ability to do plugin</font>

141
00:14:09,840 --> 00:14:19,050
persistence<font color="#E5E5E5"> so what does this mean oops</font>

142
00:14:16,220 --> 00:14:22,440
<font color="#E5E5E5">so what this means</font><font color="#CCCCCC"> is that we can build</font>

143
00:14:19,050 --> 00:14:24,209
a single unified representation of who

144
00:14:22,440 --> 00:14:26,760
<font color="#CCCCCC">our users in</font><font color="#E5E5E5"> our application and what</font>

145
00:14:24,210 --> 00:14:28,470
can they do and we can use<font color="#E5E5E5"> either our</font>

146
00:14:26,760 --> 00:14:30,780
<font color="#CCCCCC">own login strategies if we have like</font>

147
00:14:28,470 --> 00:14:32,670
<font color="#E5E5E5">enterprise or we have federated identity</font>

148
00:14:30,780 --> 00:14:36,360
<font color="#E5E5E5">we can use those or we can</font><font color="#CCCCCC"> use like</font>

149
00:14:32,670 --> 00:14:39,000
<font color="#E5E5E5">Google Microsoft external providers and</font>

150
00:14:36,360 --> 00:14:40,950
the best part is we<font color="#CCCCCC"> can</font><font color="#E5E5E5"> run it and store</font>

151
00:14:39,000 --> 00:14:42,330
it wherever<font color="#E5E5E5"> we want</font><font color="#CCCCCC"> beforehand we have</font>

152
00:14:40,950 --> 00:14:43,770
more<font color="#E5E5E5"> of a tight coupling to sequel</font>

153
00:14:42,330 --> 00:14:46,350
server but nowadays we can run it<font color="#E5E5E5"> on</font>

154
00:14:43,770 --> 00:14:47,970
<font color="#E5E5E5">progress we</font><font color="#CCCCCC"> can run it</font><font color="#E5E5E5"> on my sequel</font>

155
00:14:46,350 --> 00:14:51,150
wherever we want<font color="#E5E5E5"> to persistent we can</font>

156
00:14:47,970 --> 00:14:52,410
write that<font color="#E5E5E5"> provider ourselves so now</font>

157
00:14:51,150 --> 00:14:55,020
we're going to<font color="#E5E5E5"> start exposing</font><font color="#CCCCCC"> into some</font>

158
00:14:52,410 --> 00:14:56,699
code<font color="#E5E5E5"> so what we have</font><font color="#CCCCCC"> here is we're</font>

159
00:14:55,020 --> 00:14:58,319
actually<font color="#CCCCCC"> adding</font><font color="#E5E5E5"> identity to our</font>

160
00:14:56,700 --> 00:15:00,810
application<font color="#E5E5E5"> and it's actually quite</font>

161
00:14:58,320 --> 00:15:02,430
<font color="#CCCCCC">simple</font><font color="#E5E5E5"> so we have services in our</font>

162
00:15:00,810 --> 00:15:04,560
application<font color="#CCCCCC"> and what we do is we</font><font color="#E5E5E5"> just</font>

163
00:15:02,430 --> 00:15:06,810
<font color="#E5E5E5">want to add the representation of our</font>

164
00:15:04,560 --> 00:15:08,520
user and then we want<font color="#E5E5E5"> to persist it</font>

165
00:15:06,810 --> 00:15:10,109
using<font color="#E5E5E5"> another framework called entity</font>

166
00:15:08,520 --> 00:15:12,030
<font color="#E5E5E5">framework which is</font><font color="#CCCCCC"> used to persist to</font>

167
00:15:10,110 --> 00:15:13,980
the sequel servers and then we want to

168
00:15:12,030 --> 00:15:15,300
<font color="#E5E5E5">add a default way</font><font color="#CCCCCC"> of protecting</font><font color="#E5E5E5"> our data</font>

169
00:15:13,980 --> 00:15:19,110
<font color="#CCCCCC">which we're</font><font color="#E5E5E5"> going to just add the</font>

170
00:15:15,300 --> 00:15:21,390
default token providers and the best

171
00:15:19,110 --> 00:15:22,800
part is is you can<font color="#E5E5E5"> go through and</font>

172
00:15:21,390 --> 00:15:25,530
<font color="#E5E5E5">actually start configuring some of the</font>

173
00:15:22,800 --> 00:15:27,209
underlying bits so for<font color="#E5E5E5"> this example we</font>

174
00:15:25,530 --> 00:15:28,470
<font color="#CCCCCC">have</font><font color="#E5E5E5"> the ability to configure how</font><font color="#CCCCCC"> we're</font>

175
00:15:27,210 --> 00:15:31,020
<font color="#CCCCCC">actually storing</font><font color="#E5E5E5"> this on the</font><font color="#CCCCCC"> front-end</font>

176
00:15:28,470 --> 00:15:32,490
<font color="#CCCCCC">so after we have a user we've serialized</font>

177
00:15:31,020 --> 00:15:34,949
them and want to send<font color="#E5E5E5"> them down</font><font color="#CCCCCC"> to our</font>

178
00:15:32,490 --> 00:15:37,080
actual<font color="#E5E5E5"> web</font><font color="#CCCCCC"> page what we</font><font color="#E5E5E5"> can do is set</font>

179
00:15:34,950 --> 00:15:38,460
hey we want this cookie<font color="#CCCCCC"> to be</font><font color="#E5E5E5"> HP only</font>

180
00:15:37,080 --> 00:15:40,470
that's<font color="#E5E5E5"> going to store it securely in our</font>

181
00:15:38,460 --> 00:15:42,300
session we can<font color="#E5E5E5"> have we</font><font color="#CCCCCC"> can set</font><font color="#E5E5E5"> when</font><font color="#CCCCCC"> it</font>

182
00:15:40,470 --> 00:15:44,400
expires we can set where<font color="#CCCCCC"> we want them to</font>

183
00:15:42,300 --> 00:15:47,130
be redirected<font color="#E5E5E5"> when we challenge them</font>

184
00:15:44,400 --> 00:15:48,630
access denied and sliding there are many

185
00:15:47,130 --> 00:15:50,130
other ways<font color="#E5E5E5"> of</font><font color="#CCCCCC"> signing this but they have</font>

186
00:15:48,630 --> 00:15:51,930
<font color="#E5E5E5">exposed a consistent way</font>

187
00:15:50,130 --> 00:15:55,170
for any<font color="#E5E5E5"> kind of application</font><font color="#CCCCCC"> you want to</font>

188
00:15:51,930 --> 00:15:57,388
<font color="#CCCCCC">build the next thing is</font><font color="#E5E5E5"> that we have</font>

189
00:15:55,170 --> 00:15:58,769
even more configuration so by default

190
00:15:57,389 --> 00:16:00,630
<font color="#E5E5E5">you don't even have to worry</font><font color="#CCCCCC"> about this</font>

191
00:15:58,769 --> 00:16:01,709
<font color="#E5E5E5">because it'll have security faults which</font>

192
00:16:00,630 --> 00:16:04,290
you can just<font color="#E5E5E5"> go look at the source code</font>

193
00:16:01,709 --> 00:16:06,180
<font color="#E5E5E5">for but I have posted the source code up</font>

194
00:16:04,290 --> 00:16:09,319
here<font color="#CCCCCC"> so you don't</font><font color="#E5E5E5"> have to worry</font><font color="#CCCCCC"> so by</font>

195
00:16:06,180 --> 00:16:11,638
<font color="#E5E5E5">default it's going to do very shallowly</font>

196
00:16:09,319 --> 00:16:14,880
complicated systems<font color="#CCCCCC"> I don't want</font><font color="#E5E5E5"> people</font>

197
00:16:11,639 --> 00:16:16,500
<font color="#E5E5E5">to know</font><font color="#CCCCCC"> what their users to</font><font color="#E5E5E5"> be to secure</font>

198
00:16:14,880 --> 00:16:19,529
or to insecure they have to strike<font color="#E5E5E5"> a</font>

199
00:16:16,500 --> 00:16:21,839
balance between<font color="#CCCCCC"> dit between between</font>

200
00:16:19,529 --> 00:16:25,170
storing<font color="#E5E5E5"> too much things and storing not</font>

201
00:16:21,839 --> 00:16:26,699
enough<font color="#E5E5E5"> but basically by default they</font>

202
00:16:25,170 --> 00:16:29,550
want to require unique emails and they

203
00:16:26,699 --> 00:16:31,699
want to<font color="#E5E5E5"> make sure that new users are</font>

204
00:16:29,550 --> 00:16:34,229
allowed to<font color="#CCCCCC"> register and things like</font><font color="#E5E5E5"> that</font>

205
00:16:31,699 --> 00:16:36,959
<font color="#E5E5E5">so in order to use this in our</font>

206
00:16:34,230 --> 00:16:40,589
application<font color="#CCCCCC"> also we have to do</font><font color="#E5E5E5"> is they</font>

207
00:16:36,959 --> 00:16:42,420
use<font color="#CCCCCC"> the authentication</font><font color="#E5E5E5"> pretty simple but</font>

208
00:16:40,589 --> 00:16:43,649
the thing<font color="#CCCCCC"> to note is that before</font><font color="#E5E5E5"> we're</font>

209
00:16:42,420 --> 00:16:45,870
using authentication we actually have

210
00:16:43,649 --> 00:16:49,199
static files<font color="#E5E5E5"> so the way the pipeline</font>

211
00:16:45,870 --> 00:16:51,569
works is you read it from<font color="#CCCCCC"> the</font><font color="#E5E5E5"> top down</font>

212
00:16:49,199 --> 00:16:53,670
<font color="#E5E5E5">so anything before this block of code</font><font color="#CCCCCC"> is</font>

213
00:16:51,569 --> 00:16:56,579
<font color="#E5E5E5">not protected anything after is</font>

214
00:16:53,670 --> 00:16:58,649
protected so<font color="#CCCCCC"> NBC is the framework</font><font color="#E5E5E5"> that</font>

215
00:16:56,579 --> 00:17:01,800
<font color="#E5E5E5">powers our</font><font color="#CCCCCC"> webpages</font><font color="#E5E5E5"> static files are</font>

216
00:16:58,649 --> 00:17:04,169
just images<font color="#CCCCCC"> JavaScript CSS so anything</font>

217
00:17:01,800 --> 00:17:05,459
before<font color="#E5E5E5"> we're using authentication is</font>

218
00:17:04,169 --> 00:17:07,500
going to go before the authentication

219
00:17:05,459 --> 00:17:08,789
<font color="#E5E5E5">piece so</font><font color="#CCCCCC"> you want to make sure that you</font>

220
00:17:07,500 --> 00:17:12,030
iron out<font color="#E5E5E5"> which strategies and what</font>

221
00:17:08,789 --> 00:17:14,329
resources you need to<font color="#CCCCCC"> protect</font><font color="#E5E5E5"> so the</font>

222
00:17:12,030 --> 00:17:16,289
next thing is<font color="#CCCCCC"> windows authentication so</font>

223
00:17:14,329 --> 00:17:17,609
<font color="#E5E5E5">HP on accor has come out with two</font>

224
00:17:16,289 --> 00:17:19,439
<font color="#E5E5E5">strategies for this if you want to host</font>

225
00:17:17,609 --> 00:17:21,270
it inside<font color="#CCCCCC"> is you can</font><font color="#E5E5E5"> just continue</font><font color="#CCCCCC"> to</font><font color="#E5E5E5"> do</font>

226
00:17:19,439 --> 00:17:23,610
that<font color="#E5E5E5"> it's pretty simple configuration</font>

227
00:17:21,270 --> 00:17:26,668
for<font color="#E5E5E5"> your project</font><font color="#CCCCCC"> but in addition they</font>

228
00:17:23,609 --> 00:17:28,709
have<font color="#E5E5E5"> the HTTP</font><font color="#CCCCCC"> sis so what does HTTP sis</font>

229
00:17:26,669 --> 00:17:31,620
you might ask<font color="#E5E5E5"> that is the actual</font>

230
00:17:28,710 --> 00:17:32,909
<font color="#E5E5E5">foundation of what is is built on</font><font color="#CCCCCC"> is the</font>

231
00:17:31,620 --> 00:17:34,918
way they engineered it is they have an

232
00:17:32,909 --> 00:17:36,090
HTTP handler<font color="#E5E5E5"> built</font><font color="#CCCCCC"> into is that's</font>

233
00:17:34,919 --> 00:17:38,490
<font color="#E5E5E5">actually built into</font><font color="#CCCCCC"> the Windows</font><font color="#E5E5E5"> kernel</font>

234
00:17:36,090 --> 00:17:41,129
<font color="#E5E5E5">so you can just go and use that directly</font>

235
00:17:38,490 --> 00:17:42,270
now and<font color="#E5E5E5"> you</font><font color="#CCCCCC"> talk</font><font color="#E5E5E5"> to even hosted is so</font>

236
00:17:41,130 --> 00:17:45,270
that way you can run things<font color="#E5E5E5"> as like</font>

237
00:17:42,270 --> 00:17:46,950
Windows<font color="#E5E5E5"> services and very esoteric ways</font>

238
00:17:45,270 --> 00:17:48,179
of<font color="#E5E5E5"> running your HP</font><font color="#CCCCCC"> inet core</font>

239
00:17:46,950 --> 00:17:50,549
applications they support it<font color="#E5E5E5"> they</font>

240
00:17:48,179 --> 00:17:52,950
support everything<font color="#E5E5E5"> so how do we</font>

241
00:17:50,549 --> 00:17:55,139
configure HTTP sis<font color="#CCCCCC"> while since it's such</font>

242
00:17:52,950 --> 00:17:56,370
a low level of the<font color="#E5E5E5"> operating system it</font>

243
00:17:55,140 --> 00:17:59,610
requires a little<font color="#E5E5E5"> bit</font><font color="#CCCCCC"> of lower-level</font>

244
00:17:56,370 --> 00:18:01,469
<font color="#CCCCCC">configuration</font><font color="#E5E5E5"> so this is actually every</font>

245
00:17:59,610 --> 00:18:03,899
ASP on<font color="#CCCCCC"> that core begins</font><font color="#E5E5E5"> with a main</font>

246
00:18:01,470 --> 00:18:05,610
function<font color="#CCCCCC"> it's no it's</font><font color="#E5E5E5"> no longer</font>

247
00:18:03,900 --> 00:18:07,860
having complicated<font color="#E5E5E5"> setups you have to</font>

248
00:18:05,610 --> 00:18:09,540
worry<font color="#CCCCCC"> about the global a</font><font color="#E5E5E5"> si action all</font>

249
00:18:07,860 --> 00:18:11,280
that stuff it starts with the main<font color="#E5E5E5"> dots</font>

250
00:18:09,540 --> 00:18:13,290
<font color="#CCCCCC">yes or a program</font><font color="#E5E5E5"> best yes in this case</font>

251
00:18:11,280 --> 00:18:15,780
<font color="#E5E5E5">that has a main function that just</font>

252
00:18:13,290 --> 00:18:19,320
<font color="#CCCCCC">builds a</font><font color="#E5E5E5"> web host and</font><font color="#CCCCCC"> then it runs</font><font color="#E5E5E5"> it</font>

253
00:18:15,780 --> 00:18:20,670
<font color="#E5E5E5">it's very simple as part of that it</font>

254
00:18:19,320 --> 00:18:22,830
<font color="#E5E5E5">creates a default builder which is just</font>

255
00:18:20,670 --> 00:18:24,630
going<font color="#E5E5E5"> to assemble the HTTP pipeline and</font>

256
00:18:22,830 --> 00:18:26,939
put together all<font color="#E5E5E5"> the things underneath</font>

257
00:18:24,630 --> 00:18:28,830
<font color="#E5E5E5">that you can do and then it's going to</font>

258
00:18:26,940 --> 00:18:30,630
use the<font color="#CCCCCC"> startup file</font><font color="#E5E5E5"> so the stuff that</font>

259
00:18:28,830 --> 00:18:33,300
we saw back here<font color="#E5E5E5"> that's in</font><font color="#CCCCCC"> our startup</font>

260
00:18:30,630 --> 00:18:35,070
<font color="#E5E5E5">file and then we are going to actually</font>

261
00:18:33,300 --> 00:18:36,540
<font color="#E5E5E5">configure</font><font color="#CCCCCC"> the web server</font><font color="#E5E5E5"> so at this</font>

262
00:18:35,070 --> 00:18:38,700
point we can<font color="#E5E5E5"> actually configure the web</font>

263
00:18:36,540 --> 00:18:41,340
server<font color="#E5E5E5"> so that</font><font color="#CCCCCC"> would</font><font color="#E5E5E5"> be</font><font color="#CCCCCC"> HTTP sis in this</font>

264
00:18:38,700 --> 00:18:42,840
case so inside of this web server

265
00:18:41,340 --> 00:18:45,620
configuration<font color="#CCCCCC"> we'll just tell it hey we</font>

266
00:18:42,840 --> 00:18:48,720
want<font color="#E5E5E5"> to use</font><font color="#CCCCCC"> windows authentication</font><font color="#E5E5E5"> and</font>

267
00:18:45,620 --> 00:18:50,459
then in<font color="#CCCCCC"> order</font><font color="#E5E5E5"> to configure it we just go</font>

268
00:18:48,720 --> 00:18:52,020
<font color="#CCCCCC">into our configure services block like</font>

269
00:18:50,460 --> 00:18:54,530
before and<font color="#E5E5E5"> then we just add in</font><font color="#CCCCCC"> each</font>

270
00:18:52,020 --> 00:18:57,750
<font color="#CCCCCC">pieces as our authentication scheme and</font>

271
00:18:54,530 --> 00:18:59,750
<font color="#E5E5E5">for is it's pretty similar</font><font color="#CCCCCC"> you'll notice</font>

272
00:18:57,750 --> 00:19:01,740
between<font color="#CCCCCC"> the two slides what has changed</font>

273
00:18:59,750 --> 00:19:04,680
<font color="#CCCCCC">HT pieces defaults</font>

274
00:19:01,740 --> 00:19:07,550
<font color="#CCCCCC">IIS defaults</font><font color="#E5E5E5"> you</font><font color="#CCCCCC"> can pretty much find</font>

275
00:19:04,680 --> 00:19:12,300
anything with<font color="#CCCCCC"> a default</font><font color="#E5E5E5"> cookie defaults</font>

276
00:19:07,550 --> 00:19:14,550
tons of defaults and now we can go<font color="#CCCCCC"> into</font>

277
00:19:12,300 --> 00:19:15,780
cookie authentication<font color="#CCCCCC"> all</font><font color="#E5E5E5"> right all</font>

278
00:19:14,550 --> 00:19:19,200
right<font color="#CCCCCC"> Dustin</font><font color="#E5E5E5"> I want to roll my own</font>

279
00:19:15,780 --> 00:19:20,639
authentication<font color="#CCCCCC"> I got my</font><font color="#E5E5E5"> enterprise thing</font>

280
00:19:19,200 --> 00:19:24,540
that already exists we've been using it

281
00:19:20,640 --> 00:19:26,040
for<font color="#CCCCCC"> 20 years</font><font color="#E5E5E5"> we wrote it</font><font color="#CCCCCC"> and see</font><font color="#E5E5E5"> we're</font>

282
00:19:24,540 --> 00:19:28,920
<font color="#E5E5E5">not gonna rewrite it and it's just the</font>

283
00:19:26,040 --> 00:19:30,420
fact of<font color="#E5E5E5"> life all</font><font color="#CCCCCC"> right so cookie</font>

284
00:19:28,920 --> 00:19:32,250
authentication<font color="#E5E5E5"> the best part about this</font>

285
00:19:30,420 --> 00:19:34,320
is<font color="#CCCCCC"> I didn't in</font><font color="#E5E5E5"> D framework is built on</font>

286
00:19:32,250 --> 00:19:35,790
cookies<font color="#E5E5E5"> so you don't have to worry about</font>

287
00:19:34,320 --> 00:19:38,340
Microsoft not supporting this because

288
00:19:35,790 --> 00:19:40,080
<font color="#E5E5E5">they use it themselves</font><font color="#CCCCCC"> so the cookie</font>

289
00:19:38,340 --> 00:19:41,310
authentication<font color="#E5E5E5"> also can be</font><font color="#CCCCCC"> used in</font>

290
00:19:40,080 --> 00:19:43,110
<font color="#CCCCCC">multiple ways you can just have</font>

291
00:19:41,310 --> 00:19:45,720
configure one global cookie for your

292
00:19:43,110 --> 00:19:48,209
application for sessions<font color="#CCCCCC"> I should say</font>

293
00:19:45,720 --> 00:19:51,240
that again<font color="#E5E5E5"> you configure one cookie for</font>

294
00:19:48,210 --> 00:19:52,200
<font color="#CCCCCC">your application sessions</font><font color="#E5E5E5"> or you can</font>

295
00:19:51,240 --> 00:19:53,310
configure multiple<font color="#CCCCCC"> ways of</font>

296
00:19:52,200 --> 00:19:54,900
<font color="#E5E5E5">authenticating so you can have different</font>

297
00:19:53,310 --> 00:19:56,370
cookies in<font color="#CCCCCC"> your application depending</font>

298
00:19:54,900 --> 00:19:57,780
upon who is in your<font color="#E5E5E5"> application you can</font>

299
00:19:56,370 --> 00:19:59,580
have them<font color="#E5E5E5"> one cookie for</font><font color="#CCCCCC"> Windows</font>

300
00:19:57,780 --> 00:20:01,260
authentication and one cookie for<font color="#CCCCCC"> Google</font>

301
00:19:59,580 --> 00:20:02,850
and then you have to worry<font color="#E5E5E5"> about that</font>

302
00:20:01,260 --> 00:20:04,770
<font color="#CCCCCC">and the other thing that I'll mention</font><font color="#E5E5E5"> in</font>

303
00:20:02,850 --> 00:20:06,719
briefing is cookie policies we can<font color="#E5E5E5"> use</font>

304
00:20:04,770 --> 00:20:09,620
this in order<font color="#E5E5E5"> to enforce general</font>

305
00:20:06,720 --> 00:20:09,620
defaults on cookies

306
00:20:11,220 --> 00:20:15,970
so for the cookie authentication we will

307
00:20:13,509 --> 00:20:17,470
see cookie authentication defaults<font color="#E5E5E5"> so as</font>

308
00:20:15,970 --> 00:20:19,029
<font color="#E5E5E5">before</font><font color="#CCCCCC"> we added Windows authentication</font>

309
00:20:17,470 --> 00:20:20,289
<font color="#E5E5E5">but now we're just adding cookie</font>

310
00:20:19,029 --> 00:20:22,600
authentication<font color="#E5E5E5"> and the only other thing</font>

311
00:20:20,289 --> 00:20:25,059
<font color="#CCCCCC">we have to do so we just have</font><font color="#E5E5E5"> to add the</font>

312
00:20:22,600 --> 00:20:27,009
<font color="#E5E5E5">cookie that</font><font color="#CCCCCC"> we'll just add a cookie in</font>

313
00:20:25,059 --> 00:20:29,259
our application<font color="#E5E5E5"> whenever</font><font color="#CCCCCC"> you log in</font>

314
00:20:27,009 --> 00:20:32,289
it'll just take<font color="#E5E5E5"> care of it</font><font color="#CCCCCC"> for you</font><font color="#E5E5E5"> but</font>

315
00:20:29,259 --> 00:20:33,970
also just<font color="#E5E5E5"> like</font><font color="#CCCCCC"> before we get ways of</font>

316
00:20:32,289 --> 00:20:35,889
<font color="#CCCCCC">configuring there are tons</font><font color="#E5E5E5"> of options</font>

317
00:20:33,970 --> 00:20:37,659
<font color="#E5E5E5">for this and there's tons of</font>

318
00:20:35,889 --> 00:20:41,949
<font color="#E5E5E5">documentation for it</font><font color="#CCCCCC"> so I won't go</font><font color="#E5E5E5"> into</font>

319
00:20:37,659 --> 00:20:43,509
<font color="#CCCCCC">that</font><font color="#E5E5E5"> so you've probably seen the slide</font>

320
00:20:41,950 --> 00:20:45,970
<font color="#CCCCCC">before and</font><font color="#E5E5E5"> that's because I copy pasted</font>

321
00:20:43,509 --> 00:20:47,379
it<font color="#CCCCCC"> because there's</font><font color="#E5E5E5"> one standard model of</font>

322
00:20:45,970 --> 00:20:48,940
<font color="#CCCCCC">doing this you just</font><font color="#E5E5E5"> need</font><font color="#CCCCCC"> to</font><font color="#E5E5E5"> use</font>

323
00:20:47,379 --> 00:20:50,439
authentication<font color="#CCCCCC"> you don't have to use</font>

324
00:20:48,940 --> 00:20:52,240
cookie authentication you don't have to

325
00:20:50,440 --> 00:20:53,500
use<font color="#E5E5E5"> Windows authentication you just use</font>

326
00:20:52,240 --> 00:20:55,419
authentication<font color="#E5E5E5"> in your application</font>

327
00:20:53,500 --> 00:20:59,549
whatever<font color="#E5E5E5"> you have configured for it it</font>

328
00:20:55,419 --> 00:21:02,799
will<font color="#E5E5E5"> just use the next thing</font>

329
00:20:59,549 --> 00:21:04,750
authorization so authorization could be

330
00:21:02,799 --> 00:21:07,029
a talk on its own<font color="#E5E5E5"> because</font><font color="#CCCCCC"> it is such a</font>

331
00:21:04,750 --> 00:21:08,409
complicated<font color="#E5E5E5"> topic so for now we're</font><font color="#CCCCCC"> just</font>

332
00:21:07,029 --> 00:21:10,059
going<font color="#CCCCCC"> to go over</font><font color="#E5E5E5"> simple authorization</font>

333
00:21:08,409 --> 00:21:11,620
<font color="#E5E5E5">but I wanted to mention</font><font color="#CCCCCC"> to you the</font>

334
00:21:10,059 --> 00:21:13,178
different<font color="#E5E5E5"> kinds that</font><font color="#CCCCCC"> are</font><font color="#E5E5E5"> available to</font>

335
00:21:11,620 --> 00:21:14,199
you<font color="#E5E5E5"> so you</font><font color="#CCCCCC"> have simple</font><font color="#E5E5E5"> authorization</font>

336
00:21:13,179 --> 00:21:15,340
that's<font color="#E5E5E5"> just being able to configure</font>

337
00:21:14,200 --> 00:21:17,740
<font color="#E5E5E5">things that's protected or unprotected</font>

338
00:21:15,340 --> 00:21:19,029
and<font color="#CCCCCC"> you're protected resources</font><font color="#E5E5E5"> you have</font>

339
00:21:17,740 --> 00:21:21,340
<font color="#E5E5E5">rule-based authorization that's been</font>

340
00:21:19,029 --> 00:21:22,690
around<font color="#E5E5E5"> forever the original versions of</font>

341
00:21:21,340 --> 00:21:24,879
<font color="#E5E5E5">ASP on that included</font><font color="#CCCCCC"> role based</font>

342
00:21:22,690 --> 00:21:26,740
authorization<font color="#E5E5E5"> we've kind of kind of</font>

343
00:21:24,879 --> 00:21:29,769
<font color="#E5E5E5">migrated though to claims authorization</font>

344
00:21:26,740 --> 00:21:31,029
<font color="#CCCCCC">that's</font><font color="#E5E5E5"> look at claims authorization so</font>

345
00:21:29,769 --> 00:21:32,710
claim based authorization is just<font color="#E5E5E5"> being</font>

346
00:21:31,029 --> 00:21:35,049
able to say things<font color="#E5E5E5"> about your user and</font>

347
00:21:32,710 --> 00:21:37,779
assert<font color="#CCCCCC"> that so your user</font><font color="#E5E5E5"> has a name of</font>

348
00:21:35,049 --> 00:21:39,668
John Doe<font color="#E5E5E5"> things like that and then new</font>

349
00:21:37,779 --> 00:21:42,039
<font color="#E5E5E5">ASP</font><font color="#CCCCCC"> inet core is policy</font><font color="#E5E5E5"> based</font>

350
00:21:39,669 --> 00:21:44,110
authorization so that builds on top<font color="#E5E5E5"> of</font>

351
00:21:42,039 --> 00:21:46,299
claims that allows<font color="#CCCCCC"> us to specify</font>

352
00:21:44,110 --> 00:21:47,678
policies for users<font color="#E5E5E5"> this user must be the</font>

353
00:21:46,299 --> 00:21:50,470
over the age of 18 to use our

354
00:21:47,679 --> 00:21:53,110
application<font color="#CCCCCC"> things</font><font color="#E5E5E5"> like that and on</font><font color="#CCCCCC"> top</font>

355
00:21:50,470 --> 00:21:54,850
of<font color="#E5E5E5"> claims we also have resources so now</font>

356
00:21:53,110 --> 00:21:56,500
you can protect resources<font color="#E5E5E5"> in</font><font color="#CCCCCC"> your system</font>

357
00:21:54,850 --> 00:21:59,370
and<font color="#E5E5E5"> not necessarily have to go through</font>

358
00:21:56,500 --> 00:22:03,669
all the drudging of all the<font color="#E5E5E5"> claims stuff</font>

359
00:21:59,370 --> 00:22:05,229
<font color="#CCCCCC">so how would we</font><font color="#E5E5E5"> do a simple use case so</font>

360
00:22:03,669 --> 00:22:07,059
if we wanted<font color="#E5E5E5"> to just authorize a</font>

361
00:22:05,230 --> 00:22:08,980
controller<font color="#CCCCCC"> all we have</font><font color="#E5E5E5"> to do is just tag</font>

362
00:22:07,059 --> 00:22:10,360
it<font color="#E5E5E5"> with authorize that'll just feed into</font>

363
00:22:08,980 --> 00:22:11,740
the authorization pipeline and<font color="#E5E5E5"> it'll</font>

364
00:22:10,360 --> 00:22:14,379
just protect it on a Mac<font color="#E5E5E5"> we don't have</font>

365
00:22:11,740 --> 00:22:16,659
to worry<font color="#CCCCCC"> about it but we also have</font>

366
00:22:14,379 --> 00:22:18,369
granularity<font color="#E5E5E5"> we can apply</font><font color="#CCCCCC"> that to just</font>

367
00:22:16,659 --> 00:22:23,020
one method<font color="#E5E5E5"> in our controller or multiple</font>

368
00:22:18,369 --> 00:22:24,850
methods but there's also ways<font color="#E5E5E5"> to</font><font color="#CCCCCC"> opt-out</font>

369
00:22:23,020 --> 00:22:26,799
if we want<font color="#E5E5E5"> to just allow users belong on</font>

370
00:22:24,850 --> 00:22:28,539
to our application without<font color="#E5E5E5"> being already</font>

371
00:22:26,799 --> 00:22:34,179
<font color="#E5E5E5">logged in to</font><font color="#CCCCCC"> our application</font><font color="#E5E5E5"> we could</font>

372
00:22:28,539 --> 00:22:36,789
say use the allow<font color="#CCCCCC"> anonymous and</font><font color="#E5E5E5"> then our</font>

373
00:22:34,179 --> 00:22:38,649
<font color="#E5E5E5">next topic data</font><font color="#CCCCCC"> protection</font><font color="#E5E5E5"> we want to</font>

374
00:22:36,789 --> 00:22:39,908
make sure<font color="#E5E5E5"> our sessions are encrypted we</font>

375
00:22:38,649 --> 00:22:42,039
want to make<font color="#CCCCCC"> sure our passwords are</font>

376
00:22:39,909 --> 00:22:45,520
hashed<font color="#E5E5E5"> we want to make</font><font color="#CCCCCC"> sure that our</font>

377
00:22:42,039 --> 00:22:50,710
reset tokens are<font color="#CCCCCC"> secure</font><font color="#E5E5E5"> now how do we do</font>

378
00:22:45,520 --> 00:22:52,330
that we use data protection<font color="#E5E5E5"> so there are</font>

379
00:22:50,710 --> 00:22:54,820
different components<font color="#CCCCCC"> that come in the</font>

380
00:22:52,330 --> 00:22:56,439
data protection<font color="#CCCCCC"> package</font><font color="#E5E5E5"> one of them is</font>

381
00:22:54,820 --> 00:22:57,850
purpose<font color="#CCCCCC"> strings</font><font color="#E5E5E5"> so this is more of a</font>

382
00:22:56,440 --> 00:22:59,260
<font color="#CCCCCC">low-level technical detail but what that</font>

383
00:22:57,850 --> 00:23:01,570
<font color="#E5E5E5">means is that we</font><font color="#CCCCCC"> have ways of</font><font color="#E5E5E5"> separating</font>

384
00:22:59,260 --> 00:23:04,240
<font color="#E5E5E5">our data protection into multiple layers</font>

385
00:23:01,570 --> 00:23:07,000
that act independently and<font color="#CCCCCC"> I will</font>

386
00:23:04,240 --> 00:23:08,950
explain that<font color="#CCCCCC"> later</font><font color="#E5E5E5"> now</font><font color="#CCCCCC"> we have multiple</font>

387
00:23:07,000 --> 00:23:12,549
tenants<font color="#CCCCCC"> so if your application supports</font>

388
00:23:08,950 --> 00:23:13,750
multiple companies so you<font color="#E5E5E5"> have multiple</font>

389
00:23:12,549 --> 00:23:15,158
<font color="#CCCCCC">companies buying</font><font color="#E5E5E5"> from you you can</font>

390
00:23:13,750 --> 00:23:17,799
separate their data and partition it

391
00:23:15,159 --> 00:23:21,070
<font color="#E5E5E5">just like that we can also</font><font color="#CCCCCC"> have</font>

392
00:23:17,799 --> 00:23:22,418
<font color="#E5E5E5">revocable data so</font><font color="#CCCCCC"> that way if those</font>

393
00:23:21,070 --> 00:23:24,340
users access<font color="#CCCCCC"> to</font><font color="#E5E5E5"> the system we just</font>

394
00:23:22,419 --> 00:23:27,580
<font color="#CCCCCC">revoke it they're good we can also make</font>

395
00:23:24,340 --> 00:23:28,570
their data<font color="#E5E5E5"> protection expire and if you</font>

396
00:23:27,580 --> 00:23:31,330
don't like the way they're<font color="#CCCCCC"> doing their</font>

397
00:23:28,570 --> 00:23:33,908
crypto and you want to use some what is

398
00:23:31,330 --> 00:23:34,299
that that they use<font color="#E5E5E5"> sorry I can't</font>

399
00:23:33,909 --> 00:23:36,850
<font color="#E5E5E5">remember</font>

400
00:23:34,299 --> 00:23:37,990
<font color="#E5E5E5">it's elliptic curve</font><font color="#CCCCCC"> cryptography if you</font>

401
00:23:36,850 --> 00:23:42,520
want to use elliptic curve<font color="#CCCCCC"> cryptography</font>

402
00:23:37,990 --> 00:23:47,440
you can do that<font color="#CCCCCC"> alright</font><font color="#E5E5E5"> so let's do a</font>

403
00:23:42,520 --> 00:23:49,120
<font color="#E5E5E5">simple example</font><font color="#CCCCCC"> so this is my class</font><font color="#E5E5E5"> my</font>

404
00:23:47,440 --> 00:23:50,710
class has a constructor<font color="#CCCCCC"> and it takes a</font>

405
00:23:49,120 --> 00:23:52,479
data<font color="#E5E5E5"> protection provider data protection</font>

406
00:23:50,710 --> 00:23:53,890
providers<font color="#E5E5E5"> to provide to us by the</font>

407
00:23:52,480 --> 00:23:54,760
dependency injection system so we<font color="#CCCCCC"> don't</font>

408
00:23:53,890 --> 00:23:57,159
<font color="#E5E5E5">have to worry</font><font color="#CCCCCC"> about where that comes</font>

409
00:23:54,760 --> 00:23:59,500
<font color="#CCCCCC">from what</font><font color="#E5E5E5"> we do inside here is we create</font>

410
00:23:57,159 --> 00:24:01,210
a protector protector<font color="#E5E5E5"> uses a purpose</font>

411
00:23:59,500 --> 00:24:03,909
string<font color="#E5E5E5"> so the purpose of this</font>

412
00:24:01,210 --> 00:24:06,730
<font color="#CCCCCC">application is to just</font><font color="#E5E5E5"> annotate some</font>

413
00:24:03,909 --> 00:24:08,649
data in<font color="#E5E5E5"> here and then we just</font><font color="#CCCCCC"> want</font><font color="#E5E5E5"> to</font>

414
00:24:06,730 --> 00:24:11,260
run it<font color="#E5E5E5"> what we're gonna do is we're</font>

415
00:24:08,649 --> 00:24:12,908
<font color="#E5E5E5">gonna get some secret information and</font>

416
00:24:11,260 --> 00:24:15,250
then we're going<font color="#CCCCCC"> to go through and</font>

417
00:24:12,909 --> 00:24:17,230
protect it and after<font color="#E5E5E5"> that we can</font>

418
00:24:15,250 --> 00:24:21,190
unprotect it and just get it<font color="#CCCCCC"> back it's</font>

419
00:24:17,230 --> 00:24:23,770
pretty simple and<font color="#CCCCCC"> the way this</font><font color="#E5E5E5"> works is</font>

420
00:24:21,190 --> 00:24:25,210
<font color="#CCCCCC">that we have one key that we're using so</font>

421
00:24:23,770 --> 00:24:27,158
the data<font color="#CCCCCC"> protection provider it provides</font>

422
00:24:25,210 --> 00:24:28,870
<font color="#CCCCCC">us with a master key and what we can do</font>

423
00:24:27,159 --> 00:24:31,530
is add in the purpose strings in order

424
00:24:28,870 --> 00:24:33,090
<font color="#CCCCCC">to create partitions of that</font>

425
00:24:31,530 --> 00:24:35,590
[Music]

426
00:24:33,090 --> 00:24:37,870
but keep in<font color="#E5E5E5"> mind when you're protecting</font>

427
00:24:35,590 --> 00:24:40,209
<font color="#E5E5E5">your data</font><font color="#CCCCCC"> you don't</font><font color="#E5E5E5"> want to necessarily</font>

428
00:24:37,870 --> 00:24:42,219
create protectors that<font color="#CCCCCC"> are too generic</font>

429
00:24:40,210 --> 00:24:44,950
<font color="#CCCCCC">or you can suffer</font><font color="#E5E5E5"> from injection attacks</font>

430
00:24:42,220 --> 00:24:46,510
<font color="#E5E5E5">so if you wanted to create like secure</font>

431
00:24:44,950 --> 00:24:48,370
messaging for<font color="#E5E5E5"> your clients so they would</font>

432
00:24:46,510 --> 00:24:51,190
be able<font color="#E5E5E5"> to encrypt their messages and</font>

433
00:24:48,370 --> 00:24:52,899
their iMessage<font color="#E5E5E5"> what you would probably</font>

434
00:24:51,190 --> 00:24:54,940
think<font color="#E5E5E5"> is hey why</font><font color="#CCCCCC"> don't I just protect</font>

435
00:24:52,900 --> 00:24:57,549
based on the user<font color="#E5E5E5"> well then you run into</font>

436
00:24:54,940 --> 00:24:59,320
<font color="#CCCCCC">the issue of what if the user</font><font color="#E5E5E5"> just mixed</font>

437
00:24:57,549 --> 00:25:01,000
their<font color="#CCCCCC"> username</font><font color="#E5E5E5"> your session cookie and</font>

438
00:24:59,320 --> 00:25:03,428
then<font color="#E5E5E5"> oh you can unencrypted everybody</font>

439
00:25:01,000 --> 00:25:05,230
session cookies<font color="#E5E5E5"> too bad so what you</font>

440
00:25:03,429 --> 00:25:07,960
<font color="#E5E5E5">would do to</font><font color="#CCCCCC"> mitigate that is you can use</font>

441
00:25:05,230 --> 00:25:09,340
multiple<font color="#E5E5E5"> values for a protector so you</font>

442
00:25:07,960 --> 00:25:11,590
can say this<font color="#E5E5E5"> is</font><font color="#CCCCCC"> just going to be from my</font>

443
00:25:09,340 --> 00:25:14,139
<font color="#E5E5E5">secure messaging application and then in</font>

444
00:25:11,590 --> 00:25:16,928
order to sanitize it<font color="#E5E5E5"> what we would do is</font>

445
00:25:14,140 --> 00:25:18,940
<font color="#CCCCCC">just throw</font><font color="#E5E5E5"> the</font><font color="#CCCCCC"> username into a string</font>

446
00:25:16,929 --> 00:25:20,140
<font color="#CCCCCC">and that way they cannot inject it in</font>

447
00:25:18,940 --> 00:25:24,760
there and we'll go over injection

448
00:25:20,140 --> 00:25:26,380
<font color="#CCCCCC">letters don't worry so multi-tenancy</font><font color="#E5E5E5"> so</font>

449
00:25:24,760 --> 00:25:27,940
as we demonstrated<font color="#CCCCCC"> before</font><font color="#E5E5E5"> we can</font>

450
00:25:26,380 --> 00:25:31,539
partition the<font color="#E5E5E5"> keys but we can also</font>

451
00:25:27,940 --> 00:25:32,980
partition the keys of the keys<font color="#E5E5E5"> so that</font>

452
00:25:31,539 --> 00:25:34,450
means we<font color="#E5E5E5"> have a flexible model of</font>

453
00:25:32,980 --> 00:25:36,490
actually protecting our data<font color="#E5E5E5"> across the</font>

454
00:25:34,450 --> 00:25:39,340
application<font color="#CCCCCC"> for multiple tenants and how</font>

455
00:25:36,490 --> 00:25:40,720
<font color="#CCCCCC">does that</font><font color="#E5E5E5"> work it works because when</font>

456
00:25:39,340 --> 00:25:42,750
you're passing<font color="#E5E5E5"> in multiple keys to the</font>

457
00:25:40,720 --> 00:25:46,059
same method it's the same thing as just

458
00:25:42,750 --> 00:25:48,280
partitioning it multiple times<font color="#E5E5E5"> so that</font>

459
00:25:46,059 --> 00:25:50,678
way you can pass in a<font color="#E5E5E5"> did</font><font color="#CCCCCC"> a protection</font>

460
00:25:48,280 --> 00:25:52,870
provider to your service and then that

461
00:25:50,679 --> 00:25:55,570
service<font color="#CCCCCC"> can create another service with</font>

462
00:25:52,870 --> 00:25:59,260
each<font color="#E5E5E5"> tenant and that way it's just</font>

463
00:25:55,570 --> 00:26:01,600
segmented<font color="#E5E5E5"> next thing we have to worry</font>

464
00:25:59,260 --> 00:26:04,150
<font color="#E5E5E5">about</font><font color="#CCCCCC"> it's unfortunately a</font><font color="#E5E5E5"> CH</font><font color="#CCCCCC"> TPS in our</font>

465
00:26:01,600 --> 00:26:06,340
application<font color="#CCCCCC"> HPS want to make sure</font><font color="#E5E5E5"> all</font><font color="#CCCCCC"> of</font>

466
00:26:04,150 --> 00:26:07,990
our communication is secure so<font color="#CCCCCC"> there</font>

467
00:26:06,340 --> 00:26:09,639
multiple<font color="#CCCCCC"> ways of</font><font color="#E5E5E5"> doing</font><font color="#CCCCCC"> HTTPS but today</font>

468
00:26:07,990 --> 00:26:11,620
we're<font color="#CCCCCC"> just going to</font><font color="#E5E5E5"> be covering simple</font>

469
00:26:09,640 --> 00:26:13,360
hosting website on the<font color="#CCCCCC"> internet that's</font>

470
00:26:11,620 --> 00:26:15,820
what we want<font color="#E5E5E5"> to make</font><font color="#CCCCCC"> sure</font><font color="#E5E5E5"> is</font><font color="#CCCCCC"> that either</font>

471
00:26:13,360 --> 00:26:17,799
<font color="#E5E5E5">we</font><font color="#CCCCCC"> have all requests are just by default</font>

472
00:26:15,820 --> 00:26:19,809
coming on<font color="#CCCCCC"> HTTP or we want</font><font color="#E5E5E5"> to make</font><font color="#CCCCCC"> sure</font>

473
00:26:17,799 --> 00:26:24,340
that we<font color="#E5E5E5"> redirect insecure requests or</font>

474
00:26:19,809 --> 00:26:25,928
back<font color="#E5E5E5"> to HTTPS so the simple way of just</font>

475
00:26:24,340 --> 00:26:28,570
doing<font color="#E5E5E5"> this is decorating your</font>

476
00:26:25,929 --> 00:26:30,610
controllers with require<font color="#CCCCCC"> HTTPS now this</font>

477
00:26:28,570 --> 00:26:32,049
<font color="#E5E5E5">keep in mind there's caveat to this if</font>

478
00:26:30,610 --> 00:26:33,219
you<font color="#CCCCCC"> are writing</font><font color="#E5E5E5"> like API oriented</font>

479
00:26:32,049 --> 00:26:34,870
applications<font color="#E5E5E5"> to where they don't</font>

480
00:26:33,220 --> 00:26:36,549
<font color="#E5E5E5">necessarily have</font><font color="#CCCCCC"> like session</font><font color="#E5E5E5"> state and</font>

481
00:26:34,870 --> 00:26:40,209
all that stuff they might<font color="#E5E5E5"> get confused</font>

482
00:26:36,549 --> 00:26:43,049
by this<font color="#E5E5E5"> so the recommended</font><font color="#CCCCCC"> approach is</font>

483
00:26:40,210 --> 00:26:45,410
to just<font color="#CCCCCC"> not list them on HTTP at all</font><font color="#E5E5E5"> or</font>

484
00:26:43,049 --> 00:26:48,200
<font color="#E5E5E5">instead if you receive</font>

485
00:26:45,410 --> 00:26:50,630
<font color="#CCCCCC">a redirect request</font><font color="#E5E5E5"> just close the socket</font>

486
00:26:48,200 --> 00:26:53,920
<font color="#CCCCCC">that way you</font><font color="#E5E5E5"> don't suffer from a whole</font>

487
00:26:50,630 --> 00:26:57,350
lot<font color="#E5E5E5"> of attacks that come out</font><font color="#CCCCCC"> of</font><font color="#E5E5E5"> that so</font>

488
00:26:53,920 --> 00:26:58,910
how do we configure this so you've seen

489
00:26:57,350 --> 00:26:59,840
configure services before<font color="#CCCCCC"> configure</font>

490
00:26:58,910 --> 00:27:01,550
<font color="#CCCCCC">services is pretty</font><font color="#E5E5E5"> much how you</font>

491
00:26:59,840 --> 00:27:05,840
<font color="#E5E5E5">configure everything</font><font color="#CCCCCC"> it's what you would</font>

492
00:27:01,550 --> 00:27:08,240
<font color="#CCCCCC">want</font><font color="#E5E5E5"> to do is just go through</font><font color="#CCCCCC"> and add</font>

493
00:27:05,840 --> 00:27:10,010
HTTP redirection<font color="#E5E5E5"> and you can add hey I</font>

494
00:27:08,240 --> 00:27:12,230
want to<font color="#E5E5E5"> do a permanent redirect I want</font>

495
00:27:10,010 --> 00:27:15,230
to a temporary redirect<font color="#E5E5E5"> and you can</font>

496
00:27:12,230 --> 00:27:16,520
actually say hey I want to in my htps

497
00:27:15,230 --> 00:27:17,930
<font color="#E5E5E5">port Levin redirecting to is five</font>

498
00:27:16,520 --> 00:27:20,889
<font color="#E5E5E5">thousand one so if you</font><font color="#CCCCCC"> have custom</font>

499
00:27:17,930 --> 00:27:23,570
settings<font color="#CCCCCC"> it'll take care</font><font color="#E5E5E5"> of that and</font>

500
00:27:20,890 --> 00:27:25,940
just<font color="#E5E5E5"> like using authentication and</font>

501
00:27:23,570 --> 00:27:28,550
authorization<font color="#CCCCCC"> you just have to do a</font>

502
00:27:25,940 --> 00:27:30,620
simple<font color="#E5E5E5"> use HTTP redirection so notice in</font>

503
00:27:28,550 --> 00:27:32,960
this<font color="#CCCCCC"> example we are doing</font><font color="#E5E5E5"> a GPS</font>

504
00:27:30,620 --> 00:27:34,699
redirection before the static<font color="#E5E5E5"> files so</font>

505
00:27:32,960 --> 00:27:37,160
the pipeline<font color="#CCCCCC"> as I mentioned before works</font>

506
00:27:34,700 --> 00:27:39,160
in<font color="#E5E5E5"> order so if you were to say have</font>

507
00:27:37,160 --> 00:27:42,410
static files and somebody<font color="#E5E5E5"> requested that</font>

508
00:27:39,160 --> 00:27:44,660
<font color="#E5E5E5">you've had the HTTP redirection F after</font>

509
00:27:42,410 --> 00:27:50,660
that then<font color="#E5E5E5"> you would get insecure</font><font color="#CCCCCC"> files</font>

510
00:27:44,660 --> 00:27:52,340
being served<font color="#E5E5E5"> so HTTP strict</font><font color="#CCCCCC"> security</font>

511
00:27:50,660 --> 00:27:54,470
transport<font color="#E5E5E5"> so this is one</font><font color="#CCCCCC"> of the newer</font>

512
00:27:52,340 --> 00:27:56,090
<font color="#E5E5E5">snares</font><font color="#CCCCCC"> of come out</font><font color="#E5E5E5"> so this</font><font color="#CCCCCC"> is a header</font>

513
00:27:54,470 --> 00:27:58,490
<font color="#E5E5E5">that</font><font color="#CCCCCC"> you can have your web server</font>

514
00:27:56,090 --> 00:27:59,540
<font color="#CCCCCC">returned in</font><font color="#E5E5E5"> order to enable your in</font>

515
00:27:58,490 --> 00:28:01,640
order to prevent HTTP communication

516
00:27:59,540 --> 00:28:03,350
<font color="#CCCCCC">altogether so Google will came out with</font>

517
00:28:01,640 --> 00:28:05,720
<font color="#E5E5E5">this for Chrome</font><font color="#CCCCCC"> and what it basically</font>

518
00:28:03,350 --> 00:28:07,610
does<font color="#E5E5E5"> is it prevents the browser from</font>

519
00:28:05,720 --> 00:28:08,870
even attempting<font color="#CCCCCC"> to</font><font color="#E5E5E5"> making a secure</font>

520
00:28:07,610 --> 00:28:10,129
<font color="#E5E5E5">connection to</font><font color="#CCCCCC"> your</font><font color="#E5E5E5"> website now</font><font color="#CCCCCC"> that's a</font>

521
00:28:08,870 --> 00:28:13,850
double-edged<font color="#E5E5E5"> sword we'll go through that</font>

522
00:28:10,130 --> 00:28:16,280
later so strict Transport Security<font color="#CCCCCC"> one</font>

523
00:28:13,850 --> 00:28:18,649
of the one<font color="#CCCCCC"> of the easiest ways of doing</font>

524
00:28:16,280 --> 00:28:22,700
this is<font color="#CCCCCC"> to</font><font color="#E5E5E5"> just tack on</font><font color="#CCCCCC"> max-age</font>

525
00:28:18,650 --> 00:28:24,320
so it'll<font color="#CCCCCC"> just sit</font><font color="#E5E5E5"> around and about to</font>

526
00:28:22,700 --> 00:28:26,420
worry<font color="#CCCCCC"> about it but</font><font color="#E5E5E5"> that does not cover</font>

527
00:28:24,320 --> 00:28:28,399
subdomains<font color="#CCCCCC"> so if you have your</font>

528
00:28:26,420 --> 00:28:29,990
example.com and<font color="#CCCCCC"> you have</font><font color="#E5E5E5"> applications</font>

529
00:28:28,400 --> 00:28:31,580
hosted under<font color="#E5E5E5"> that</font><font color="#CCCCCC"> you</font><font color="#E5E5E5"> have to do a for</font>

530
00:28:29,990 --> 00:28:34,300
<font color="#E5E5E5">each application</font><font color="#CCCCCC"> but if you just specify</font>

531
00:28:31,580 --> 00:28:36,800
<font color="#CCCCCC">the include subdomains</font><font color="#E5E5E5"> will also do that</font>

532
00:28:34,300 --> 00:28:38,600
another thing<font color="#E5E5E5"> that you can do is you can</font>

533
00:28:36,800 --> 00:28:40,820
<font color="#E5E5E5">actually add</font><font color="#CCCCCC"> your application to</font><font color="#E5E5E5"> the</font>

534
00:28:38,600 --> 00:28:44,510
global preload list<font color="#E5E5E5"> so Google maintains</font>

535
00:28:40,820 --> 00:28:46,280
<font color="#E5E5E5">a list of</font><font color="#CCCCCC"> websites that are forced by</font>

536
00:28:44,510 --> 00:28:47,840
every browser<font color="#CCCCCC"> I mean by every</font>

537
00:28:46,280 --> 00:28:49,310
<font color="#CCCCCC">installation of</font><font color="#E5E5E5"> Chrome to go to there</font><font color="#CCCCCC"> so</font>

538
00:28:47,840 --> 00:28:50,720
if you<font color="#CCCCCC"> have like cnn.com or</font><font color="#E5E5E5"> some guy</font>

539
00:28:49,310 --> 00:28:52,700
<font color="#E5E5E5">they're probably on the preload list</font>

540
00:28:50,720 --> 00:28:54,560
which<font color="#CCCCCC"> means when you</font><font color="#E5E5E5"> install Chrome on</font>

541
00:28:52,700 --> 00:28:56,510
<font color="#E5E5E5">your computer or edge or whatever</font>

542
00:28:54,560 --> 00:28:58,360
browser<font color="#E5E5E5"> you use it will come</font><font color="#CCCCCC"> with that</font>

543
00:28:56,510 --> 00:28:59,560
<font color="#E5E5E5">list so even before</font>

544
00:28:58,360 --> 00:29:02,050
connect to<font color="#CCCCCC"> the web server it already</font>

545
00:28:59,560 --> 00:29:05,139
<font color="#E5E5E5">knows that</font><font color="#CCCCCC"> it</font><font color="#E5E5E5"> needs to</font><font color="#CCCCCC"> use HTTPS to</font>

546
00:29:02,050 --> 00:29:06,490
connect to it so we want to make<font color="#CCCCCC"> sure if</font>

547
00:29:05,140 --> 00:29:07,630
you're using<font color="#E5E5E5"> the</font><font color="#CCCCCC"> freeload</font><font color="#E5E5E5"> option that</font>

548
00:29:06,490 --> 00:29:08,980
<font color="#E5E5E5">you're really sure</font><font color="#CCCCCC"> that you have</font>

549
00:29:07,630 --> 00:29:10,810
everything<font color="#E5E5E5"> configured correctly not</font>

550
00:29:08,980 --> 00:29:12,760
<font color="#E5E5E5">you're</font><font color="#CCCCCC"> not going to use HTTP anymore</font>

551
00:29:10,810 --> 00:29:18,280
<font color="#E5E5E5">because</font><font color="#CCCCCC"> getting removed</font><font color="#E5E5E5"> from the preload</font>

552
00:29:12,760 --> 00:29:20,290
lists is is a pain<font color="#E5E5E5"> so how do we add HTTP</font>

553
00:29:18,280 --> 00:29:21,340
to our application it's one thing to

554
00:29:20,290 --> 00:29:22,600
<font color="#E5E5E5">keep in mind</font><font color="#CCCCCC"> is that when we're actually</font>

555
00:29:21,340 --> 00:29:24,399
<font color="#E5E5E5">developing applications we don't</font>

556
00:29:22,600 --> 00:29:26,949
<font color="#CCCCCC">necessarily</font><font color="#E5E5E5"> want to use</font><font color="#CCCCCC"> this header</font><font color="#E5E5E5"> this</font>

557
00:29:24,400 --> 00:29:28,780
<font color="#E5E5E5">header by being by virtue of being a</font>

558
00:29:26,950 --> 00:29:31,360
header is very<font color="#CCCCCC"> cacheable which means</font>

559
00:29:28,780 --> 00:29:32,800
<font color="#E5E5E5">unless you are completely using HTTP</font><font color="#CCCCCC"> for</font>

560
00:29:31,360 --> 00:29:34,149
your development<font color="#CCCCCC"> environment</font><font color="#E5E5E5"> you're</font>

561
00:29:32,800 --> 00:29:35,200
going<font color="#CCCCCC"> to get this header the browser is</font>

562
00:29:34,150 --> 00:29:36,520
going<font color="#E5E5E5"> to cache</font><font color="#CCCCCC"> it and then you're going</font>

563
00:29:35,200 --> 00:29:37,750
<font color="#CCCCCC">to have</font><font color="#E5E5E5"> to remove the header every time</font>

564
00:29:36,520 --> 00:29:39,850
you want to<font color="#E5E5E5"> refresh the page which is</font>

565
00:29:37,750 --> 00:29:41,770
not<font color="#CCCCCC"> exactly</font><font color="#E5E5E5"> what you want to do so what</font>

566
00:29:39,850 --> 00:29:43,300
you want to<font color="#E5E5E5"> do is use the hosting</font>

567
00:29:41,770 --> 00:29:45,160
environment<font color="#CCCCCC"> so</font><font color="#E5E5E5"> inside the hosting</font>

568
00:29:43,300 --> 00:29:48,250
environment what you can do is say hey

569
00:29:45,160 --> 00:29:49,240
I'm a developer<font color="#CCCCCC"> I'm developing</font><font color="#E5E5E5"> things so</font>

570
00:29:48,250 --> 00:29:51,820
I'm going<font color="#E5E5E5"> to use my developer tools</font>

571
00:29:49,240 --> 00:29:53,680
otherwise we're probably<font color="#E5E5E5"> in</font><font color="#CCCCCC"> another</font>

572
00:29:51,820 --> 00:29:56,470
environment production for instance and

573
00:29:53,680 --> 00:29:58,840
we can just stop using<font color="#E5E5E5"> bad</font><font color="#CCCCCC"> air handlers</font>

574
00:29:56,470 --> 00:30:02,350
and we can use whatever<font color="#E5E5E5"> our production</font>

575
00:29:58,840 --> 00:30:03,879
settings are and<font color="#E5E5E5"> like before goes from</font>

576
00:30:02,350 --> 00:30:05,740
top<font color="#E5E5E5"> down there's a top-down</font><font color="#CCCCCC"> approach</font><font color="#E5E5E5"> to</font>

577
00:30:03,880 --> 00:30:08,500
the HP pipeline and we want to make<font color="#CCCCCC"> sure</font>

578
00:30:05,740 --> 00:30:10,750
that we<font color="#CCCCCC"> use HSTs before we do HTTP</font>

579
00:30:08,500 --> 00:30:13,090
redirection<font color="#E5E5E5"> because we don't really need</font>

580
00:30:10,750 --> 00:30:15,100
<font color="#E5E5E5">to because if we don't</font><font color="#CCCCCC"> want them to</font>

581
00:30:13,090 --> 00:30:18,639
connect to us in the<font color="#E5E5E5"> first place then</font>

582
00:30:15,100 --> 00:30:21,610
they shouldn't<font color="#CCCCCC"> really be doing</font><font color="#E5E5E5"> that so</font>

583
00:30:18,640 --> 00:30:22,990
how do we configure<font color="#E5E5E5"> this so just like</font>

584
00:30:21,610 --> 00:30:25,990
before<font color="#CCCCCC"> we're going</font><font color="#E5E5E5"> to use our services</font>

585
00:30:22,990 --> 00:30:26,440
<font color="#E5E5E5">our services have options we can make</font>

586
00:30:25,990 --> 00:30:29,980
<font color="#E5E5E5">sure</font>

587
00:30:26,440 --> 00:30:34,180
so notice before we had pretty simple

588
00:30:29,980 --> 00:30:36,610
max-age<font color="#E5E5E5"> includes subdomains</font><font color="#CCCCCC"> and now it</font>

589
00:30:34,180 --> 00:30:37,810
pretty much mirrors it one for<font color="#CCCCCC"> one</font><font color="#E5E5E5"> so if</font>

590
00:30:36,610 --> 00:30:39,760
<font color="#E5E5E5">you see if you go through the</font>

591
00:30:37,810 --> 00:30:41,740
documentation<font color="#E5E5E5"> on the mozilla development</font>

592
00:30:39,760 --> 00:30:43,270
<font color="#E5E5E5">network or wherever you get</font><font color="#CCCCCC"> your</font>

593
00:30:41,740 --> 00:30:45,280
documentation<font color="#E5E5E5"> you say hey I</font><font color="#CCCCCC"> need that</font>

594
00:30:43,270 --> 00:30:47,080
option<font color="#E5E5E5"> you can just go look for that</font>

595
00:30:45,280 --> 00:30:49,410
option<font color="#E5E5E5"> it'll probably be there you don't</font>

596
00:30:47,080 --> 00:30:52,139
<font color="#E5E5E5">have to worry about it</font>

597
00:30:49,410 --> 00:30:58,270
<font color="#E5E5E5">CSRF cross script cross-site request</font>

598
00:30:52,140 --> 00:31:01,040
forgery<font color="#E5E5E5"> so this is a little bit more</font>

599
00:30:58,270 --> 00:31:02,540
complicated<font color="#E5E5E5"> of a topic</font>

600
00:31:01,040 --> 00:31:05,270
so we actually<font color="#E5E5E5"> need</font><font color="#CCCCCC"> to worry</font><font color="#E5E5E5"> about our</font>

601
00:31:02,540 --> 00:31:08,149
authentication strategy for this one so

602
00:31:05,270 --> 00:31:11,000
what<font color="#E5E5E5"> CSRF is as we</font><font color="#CCCCCC"> have another</font>

603
00:31:08,150 --> 00:31:13,730
<font color="#E5E5E5">application that's not necessarily doing</font>

604
00:31:11,000 --> 00:31:16,160
so good intentions<font color="#CCCCCC"> and they want to</font>

605
00:31:13,730 --> 00:31:17,990
<font color="#CCCCCC">abuse or abuse the fact that</font><font color="#E5E5E5"> our users</font>

606
00:31:16,160 --> 00:31:19,010
logged<font color="#E5E5E5"> into a website and so what</font>

607
00:31:17,990 --> 00:31:22,340
<font color="#E5E5E5">they're going</font><font color="#CCCCCC"> to do is they're going to</font>

608
00:31:19,010 --> 00:31:23,890
<font color="#E5E5E5">post to some API that the users already</font>

609
00:31:22,340 --> 00:31:26,540
<font color="#E5E5E5">logged into and then they're just</font><font color="#CCCCCC"> gonna</font>

610
00:31:23,890 --> 00:31:28,310
click<font color="#E5E5E5"> create a transaction and</font><font color="#CCCCCC"> submit</font>

611
00:31:26,540 --> 00:31:31,070
over<font color="#E5E5E5"> there and now you have now your</font>

612
00:31:28,310 --> 00:31:32,330
bank account is empty<font color="#E5E5E5"> so you wanna you</font>

613
00:31:31,070 --> 00:31:34,250
want to prevent<font color="#E5E5E5"> that</font><font color="#CCCCCC"> kind</font><font color="#E5E5E5"> of stuff that</font>

614
00:31:32,330 --> 00:31:35,270
<font color="#CCCCCC">quite a little</font><font color="#E5E5E5"> bit of thought you want</font>

615
00:31:34,250 --> 00:31:37,220
to<font color="#E5E5E5"> make sure</font><font color="#CCCCCC"> that if you have</font><font color="#E5E5E5"> like a</font>

616
00:31:35,270 --> 00:31:39,530
same origin policy on your<font color="#E5E5E5"> website</font><font color="#CCCCCC"> or</font>

617
00:31:37,220 --> 00:31:41,600
how you're<font color="#CCCCCC"> actually storing</font><font color="#E5E5E5"> that</font><font color="#CCCCCC"> stuff</font>

618
00:31:39,530 --> 00:31:42,950
so usually<font color="#E5E5E5"> CSRF is vulnerable to like</font>

619
00:31:41,600 --> 00:31:45,530
<font color="#E5E5E5">session storage but if you're using like</font>

620
00:31:42,950 --> 00:31:46,520
<font color="#E5E5E5">token-based authentication with local</font>

621
00:31:45,530 --> 00:31:50,510
stores then you might<font color="#E5E5E5"> not even be</font>

622
00:31:46,520 --> 00:31:52,070
<font color="#CCCCCC">vulnerable so by</font><font color="#E5E5E5"> default</font><font color="#CCCCCC"> HP on that core</font>

623
00:31:50,510 --> 00:31:54,620
it's just<font color="#CCCCCC"> secure</font><font color="#E5E5E5"> by default</font><font color="#CCCCCC"> so if you</font>

624
00:31:52,070 --> 00:31:56,750
write a form it'll<font color="#E5E5E5"> be protected</font><font color="#CCCCCC"> so</font>

625
00:31:54,620 --> 00:31:58,429
whenever this form actual gets<font color="#CCCCCC"> rendered</font>

626
00:31:56,750 --> 00:32:01,010
on your<font color="#CCCCCC"> webpage it'll include</font><font color="#E5E5E5"> a hidden</font>

627
00:31:58,430 --> 00:32:02,600
<font color="#CCCCCC">fields' with your anti forgery token</font>

628
00:32:01,010 --> 00:32:03,650
<font color="#CCCCCC">that</font><font color="#E5E5E5"> is pretty much the</font><font color="#CCCCCC"> microsoft</font>

629
00:32:02,600 --> 00:32:05,480
solution to this<font color="#CCCCCC"> and there are other</font>

630
00:32:03,650 --> 00:32:06,890
ways of doing<font color="#CCCCCC"> it as well but</font><font color="#E5E5E5"> what if you</font>

631
00:32:05,480 --> 00:32:09,200
want to<font color="#CCCCCC"> opt out</font><font color="#E5E5E5"> well there are a couple</font>

632
00:32:06,890 --> 00:32:10,910
<font color="#CCCCCC">ways to</font><font color="#E5E5E5"> opt out so</font><font color="#CCCCCC"> on the Razr way of</font>

633
00:32:09,200 --> 00:32:12,680
doing it is<font color="#CCCCCC"> you just</font><font color="#E5E5E5"> annotate your</font><font color="#CCCCCC"> HTTP</font>

634
00:32:10,910 --> 00:32:15,860
forms and say hey<font color="#CCCCCC"> i don't I don't want</font>

635
00:32:12,680 --> 00:32:17,630
to be secure<font color="#E5E5E5"> that's fine you can</font><font color="#CCCCCC"> also</font>

636
00:32:15,860 --> 00:32:19,370
use the new way of<font color="#E5E5E5"> doing it</font><font color="#CCCCCC"> that</font><font color="#E5E5E5"> they've</font>

637
00:32:17,630 --> 00:32:21,410
invented for themselves<font color="#E5E5E5"> which is just</font>

638
00:32:19,370 --> 00:32:23,330
the exclamation form which is like the

639
00:32:21,410 --> 00:32:27,980
danger form<font color="#CCCCCC"> I think that's what they're</font>

640
00:32:23,330 --> 00:32:30,110
<font color="#E5E5E5">going</font><font color="#CCCCCC"> for there another attack is the</font>

641
00:32:27,980 --> 00:32:33,050
open redirect attack so say for instance

642
00:32:30,110 --> 00:32:35,270
<font color="#E5E5E5">you</font><font color="#CCCCCC"> have a web application and you need</font>

643
00:32:33,050 --> 00:32:38,180
to<font color="#E5E5E5"> redirect to a different page like on</font>

644
00:32:35,270 --> 00:32:39,920
<font color="#E5E5E5">login or something like that if you're</font>

645
00:32:38,180 --> 00:32:41,300
not<font color="#E5E5E5"> sanitized the URL</font><font color="#CCCCCC"> that</font><font color="#E5E5E5"> you are</font>

646
00:32:39,920 --> 00:32:46,070
redirecting to you're<font color="#E5E5E5"> going to suffer an</font>

647
00:32:41,300 --> 00:32:51,760
injection attack basically so audience

648
00:32:46,070 --> 00:32:51,760
question<font color="#E5E5E5"> can you spot the vulnerability</font>

649
00:32:53,410 --> 00:33:01,300
yes<font color="#E5E5E5"> so we have the nerd dinner but then</font>

650
00:32:57,760 --> 00:33:04,090
<font color="#E5E5E5">we have their den there with one end so</font>

651
00:33:01,300 --> 00:33:05,800
<font color="#CCCCCC">that so if you're not protecting against</font>

652
00:33:04,090 --> 00:33:07,149
that and<font color="#E5E5E5"> somebody just decides that</font>

653
00:33:05,800 --> 00:33:10,270
they're gonna<font color="#CCCCCC"> register domain</font><font color="#E5E5E5"> that looks</font>

654
00:33:07,150 --> 00:33:12,700
similar<font color="#E5E5E5"> to yours or maybe like a</font><font color="#CCCCCC"> PP ple</font>

655
00:33:10,270 --> 00:33:17,290
<font color="#E5E5E5">calm and cash in your iTunes gift cards</font>

656
00:33:12,700 --> 00:33:18,900
yeah so the way<font color="#E5E5E5"> this works is the user</font>

657
00:33:17,290 --> 00:33:23,980
clicks a link<font color="#E5E5E5"> to the trusted site and</font>

658
00:33:18,900 --> 00:33:25,270
then they log in and<font color="#CCCCCC"> then some sometime</font>

659
00:33:23,980 --> 00:33:27,190
down the<font color="#CCCCCC"> road they receive a redirect on</font>

660
00:33:25,270 --> 00:33:28,660
that<font color="#E5E5E5"> website</font><font color="#CCCCCC"> and</font><font color="#E5E5E5"> that goes</font><font color="#CCCCCC"> to malicious</font>

661
00:33:27,190 --> 00:33:30,460
site<font color="#E5E5E5"> then they're</font><font color="#CCCCCC"> just gonna</font>

662
00:33:28,660 --> 00:33:33,310
automatically<font color="#CCCCCC"> be redirected</font><font color="#E5E5E5"> if you're</font>

663
00:33:30,460 --> 00:33:34,780
not protecting yourself so how do<font color="#E5E5E5"> you</font>

664
00:33:33,310 --> 00:33:36,730
<font color="#E5E5E5">protect yourself</font><font color="#CCCCCC"> it's actually quite</font>

665
00:33:34,780 --> 00:33:38,830
<font color="#E5E5E5">simple</font><font color="#CCCCCC"> on ESPN encore they introduced</font>

666
00:33:36,730 --> 00:33:40,510
local<font color="#E5E5E5"> read redirect so before you just</font>

667
00:33:38,830 --> 00:33:42,820
<font color="#CCCCCC">add</font><font color="#E5E5E5"> plane redirect which will just take</font>

668
00:33:40,510 --> 00:33:44,710
whatever you<font color="#E5E5E5"> passed it and just do</font>

669
00:33:42,820 --> 00:33:45,970
whatever with it it would<font color="#CCCCCC"> just send you</font>

670
00:33:44,710 --> 00:33:47,680
to whatever<font color="#E5E5E5"> website now you just have</font>

671
00:33:45,970 --> 00:33:49,630
local redirect and it'll just say hey am

672
00:33:47,680 --> 00:33:50,950
<font color="#CCCCCC">i on the same domain</font><font color="#E5E5E5"> that's</font><font color="#CCCCCC"> a pretty</font>

673
00:33:49,630 --> 00:33:53,620
good<font color="#CCCCCC"> idea that I</font><font color="#E5E5E5"> don't redirect them</font>

674
00:33:50,950 --> 00:33:55,660
another way is that if you<font color="#E5E5E5"> just want to</font>

675
00:33:53,620 --> 00:33:57,550
whitelist things you can use<font color="#CCCCCC"> in</font><font color="#E5E5E5"> check</font>

676
00:33:55,660 --> 00:33:58,900
<font color="#CCCCCC">URLs to</font><font color="#E5E5E5"> make sure their local URL so if</font>

677
00:33:57,550 --> 00:34:00,100
you have<font color="#E5E5E5"> like multiple</font><font color="#CCCCCC"> web sites and</font>

678
00:33:58,900 --> 00:34:02,610
<font color="#CCCCCC">their subdomains and things like that</font>

679
00:34:00,100 --> 00:34:04,959
you can<font color="#CCCCCC"> make sure that</font><font color="#E5E5E5"> you're performing</font>

680
00:34:02,610 --> 00:34:10,779
<font color="#E5E5E5">redirects between applications correctly</font>

681
00:34:04,960 --> 00:34:13,600
and things like<font color="#E5E5E5"> that</font><font color="#CCCCCC"> so CSP</font><font color="#E5E5E5"> content</font>

682
00:34:10,780 --> 00:34:14,710
<font color="#E5E5E5">security policy</font><font color="#CCCCCC"> so this is a way of</font>

683
00:34:13,600 --> 00:34:16,899
mitigating<font color="#E5E5E5"> cross-site scripting</font>

684
00:34:14,710 --> 00:34:18,730
cross-site scripting is basically you

685
00:34:16,899 --> 00:34:20,620
<font color="#E5E5E5">have some web server</font><font color="#CCCCCC"> that you're serving</font>

686
00:34:18,730 --> 00:34:23,168
<font color="#CCCCCC">javascript for</font><font color="#E5E5E5"> and that web server gets</font>

687
00:34:20,620 --> 00:34:25,659
compromised or you get an extra script

688
00:34:23,168 --> 00:34:27,040
injected<font color="#E5E5E5"> because their computers</font>

689
00:34:25,659 --> 00:34:28,840
compromised things like that you do not

690
00:34:27,040 --> 00:34:32,770
<font color="#CCCCCC">want to run things that you do not</font>

691
00:34:28,840 --> 00:34:34,470
originate<font color="#CCCCCC"> on your website basically by</font>

692
00:34:32,770 --> 00:34:36,580
setting content security policy you also

693
00:34:34,469 --> 00:34:38,259
get the way of mitigating<font color="#E5E5E5"> packet</font>

694
00:34:36,580 --> 00:34:41,110
sniffing because you can do HTTP

695
00:34:38,260 --> 00:34:44,649
enforcement similar<font color="#E5E5E5"> to the the HSTs and</font>

696
00:34:41,110 --> 00:34:47,080
the best part about CSP is the report

697
00:34:44,649 --> 00:34:49,179
URI<font color="#E5E5E5"> so if you have a failed attempt on</font>

698
00:34:47,080 --> 00:34:52,120
<font color="#E5E5E5">your website and it</font><font color="#CCCCCC"> violates the CSP</font>

699
00:34:49,179 --> 00:34:54,070
it'll actually<font color="#E5E5E5"> report that to a URL of</font>

700
00:34:52,120 --> 00:34:56,918
<font color="#CCCCCC">your</font><font color="#E5E5E5"> choosing</font><font color="#CCCCCC"> so you can get feedback</font>

701
00:34:54,070 --> 00:35:01,030
and<font color="#E5E5E5"> say oh oh boy those those Anonymous</font>

702
00:34:56,918 --> 00:35:04,089
hackers<font color="#CCCCCC"> they're on my</font><font color="#E5E5E5"> website so</font><font color="#CCCCCC"> how do</font>

703
00:35:01,030 --> 00:35:05,500
we<font color="#E5E5E5"> set content security policy so it's</font>

704
00:35:04,090 --> 00:35:07,060
<font color="#E5E5E5">pretty simple you set a header and then</font>

705
00:35:05,500 --> 00:35:10,330
you just specify<font color="#E5E5E5"> the policy</font>

706
00:35:07,060 --> 00:35:12,520
towards their<font color="#E5E5E5"> lunch options one of them</font>

707
00:35:10,330 --> 00:35:14,980
is the default source so the default

708
00:35:12,520 --> 00:35:16,600
source is basically<font color="#CCCCCC"> all content in my</font>

709
00:35:14,980 --> 00:35:18,880
website<font color="#CCCCCC"> I want to originate for myself</font>

710
00:35:16,600 --> 00:35:19,990
<font color="#CCCCCC">that way</font><font color="#E5E5E5"> we're</font><font color="#CCCCCC"> not going to</font><font color="#E5E5E5"> consider CD</font>

711
00:35:18,880 --> 00:35:22,540
<font color="#E5E5E5">ends we're not going to consider</font>

712
00:35:19,990 --> 00:35:25,060
anything<font color="#E5E5E5"> like that another way is that</font>

713
00:35:22,540 --> 00:35:27,279
we<font color="#E5E5E5"> can configure subdomains</font><font color="#CCCCCC"> so if we</font>

714
00:35:25,060 --> 00:35:30,940
want<font color="#E5E5E5"> everything under our trusted sub</font>

715
00:35:27,280 --> 00:35:32,500
domain we can include<font color="#E5E5E5"> those but the</font>

716
00:35:30,940 --> 00:35:34,240
problem is is that<font color="#CCCCCC"> Microsoft doesn't</font>

717
00:35:32,500 --> 00:35:36,430
<font color="#E5E5E5">provide middleware</font><font color="#CCCCCC"> for this so what</font><font color="#E5E5E5"> are</font>

718
00:35:34,240 --> 00:35:39,970
we gonna do there's no<font color="#CCCCCC"> Microsoft ordain</font>

719
00:35:36,430 --> 00:35:45,730
solution well there's hope we can extend

720
00:35:39,970 --> 00:35:48,250
the pipeline and how do we<font color="#E5E5E5"> do that we</font>

721
00:35:45,730 --> 00:35:50,860
<font color="#E5E5E5">can</font><font color="#CCCCCC"> just</font><font color="#E5E5E5"> use our</font><font color="#CCCCCC"> own middleware we can</font>

722
00:35:48,250 --> 00:35:52,540
just write and just write directly<font color="#E5E5E5"> to</font>

723
00:35:50,860 --> 00:35:54,130
the response<font color="#E5E5E5"> headers if we want or we</font>

724
00:35:52,540 --> 00:35:55,450
can do even fancier<font color="#CCCCCC"> things to configure</font>

725
00:35:54,130 --> 00:35:57,130
it we could build our<font color="#CCCCCC"> own API for doing</font>

726
00:35:55,450 --> 00:35:58,480
this<font color="#E5E5E5"> it's pretty simple and it works</font>

727
00:35:57,130 --> 00:35:58,870
exactly<font color="#E5E5E5"> the same</font><font color="#CCCCCC"> way as we've seen</font>

728
00:35:58,480 --> 00:36:01,540
before

729
00:35:58,870 --> 00:36:03,400
<font color="#CCCCCC">we are adding</font><font color="#E5E5E5"> authentication so</font>

730
00:36:01,540 --> 00:36:05,890
everything goes<font color="#E5E5E5"> from the top to the</font>

731
00:36:03,400 --> 00:36:07,300
<font color="#CCCCCC">bottom so your CSP will get set before</font>

732
00:36:05,890 --> 00:36:09,009
<font color="#E5E5E5">you're</font><font color="#CCCCCC"> using static files and everything</font>

733
00:36:07,300 --> 00:36:13,090
so<font color="#E5E5E5"> that way we're</font><font color="#CCCCCC"> all serving</font><font color="#E5E5E5"> from</font>

734
00:36:09,010 --> 00:36:14,740
ourselves<font color="#E5E5E5"> all right time to</font><font color="#CCCCCC"> have some</font>

735
00:36:13,090 --> 00:36:17,530
fun<font color="#CCCCCC"> and check out some vulnerabilities</font>

736
00:36:14,740 --> 00:36:20,169
<font color="#E5E5E5">so the OAuth</font><font color="#CCCCCC"> so the Austral</font><font color="#E5E5E5"> organization</font>

737
00:36:17,530 --> 00:36:22,210
<font color="#E5E5E5">they started back in the</font><font color="#CCCCCC"> third</font><font color="#E5E5E5"> a while</font>

738
00:36:20,170 --> 00:36:23,980
ago<font color="#E5E5E5"> but they started publishing 2013 I</font>

739
00:36:22,210 --> 00:36:27,160
<font color="#CCCCCC">believe and they</font><font color="#E5E5E5"> published a top</font><font color="#CCCCCC"> 10 list</font>

740
00:36:23,980 --> 00:36:28,750
<font color="#CCCCCC">of</font><font color="#E5E5E5"> the most industry issues one of</font><font color="#CCCCCC"> which</font>

741
00:36:27,160 --> 00:36:31,540
<font color="#CCCCCC">is injection which has basically</font><font color="#E5E5E5"> been on</font>

742
00:36:28,750 --> 00:36:33,040
there since<font color="#E5E5E5"> its inception</font><font color="#CCCCCC"> but there are</font>

743
00:36:31,540 --> 00:36:34,960
a<font color="#E5E5E5"> lot of different vulnerabilities</font><font color="#CCCCCC"> that</font>

744
00:36:33,040 --> 00:36:37,060
happen in<font color="#CCCCCC"> your applications and</font><font color="#E5E5E5"> we're</font>

745
00:36:34,960 --> 00:36:38,080
gonna go<font color="#CCCCCC"> over just a few of them</font><font color="#E5E5E5"> so in</font>

746
00:36:37,060 --> 00:36:40,090
this presentation<font color="#E5E5E5"> we're</font><font color="#CCCCCC"> going</font><font color="#E5E5E5"> to be</font>

747
00:36:38,080 --> 00:36:42,730
<font color="#E5E5E5">covering injection</font><font color="#CCCCCC"> which is pretty</font>

748
00:36:40,090 --> 00:36:44,080
common as we've seen we're<font color="#E5E5E5"> gonna take a</font>

749
00:36:42,730 --> 00:36:45,460
look<font color="#E5E5E5"> at the broken authentication and</font>

750
00:36:44,080 --> 00:36:48,759
<font color="#E5E5E5">what we can do to fix</font><font color="#CCCCCC"> that</font><font color="#E5E5E5"> and then</font>

751
00:36:45,460 --> 00:36:53,080
we're gonna go<font color="#CCCCCC"> over some xxe</font><font color="#E5E5E5"> we'll get</font>

752
00:36:48,760 --> 00:36:55,180
to that so what<font color="#E5E5E5"> is injection</font><font color="#CCCCCC"> as we've</font>

753
00:36:53,080 --> 00:36:57,069
<font color="#E5E5E5">seen before if we if we use unsanitized</font>

754
00:36:55,180 --> 00:36:58,899
or untrusted data and we just<font color="#E5E5E5"> try to do</font>

755
00:36:57,070 --> 00:37:02,200
<font color="#E5E5E5">things with it it usually doesn't go</font>

756
00:36:58,900 --> 00:37:04,030
well for<font color="#E5E5E5"> us so if we end up</font><font color="#CCCCCC"> having like</font>

757
00:37:02,200 --> 00:37:06,339
unsound<font color="#E5E5E5"> box execution of something that</font>

758
00:37:04,030 --> 00:37:07,780
<font color="#CCCCCC">our user gives us we're usually</font><font color="#E5E5E5"> gonna</font><font color="#CCCCCC"> be</font>

759
00:37:06,340 --> 00:37:10,750
vulnerable<font color="#E5E5E5"> or if we have like broken</font>

760
00:37:07,780 --> 00:37:12,730
versions of interpreters like XML<font color="#E5E5E5"> things</font>

761
00:37:10,750 --> 00:37:14,770
like that and we can inject in there and

762
00:37:12,730 --> 00:37:17,350
fix it there's there's<font color="#CCCCCC"> a</font><font color="#E5E5E5"> whole lot of</font>

763
00:37:14,770 --> 00:37:20,070
<font color="#E5E5E5">variants of injection but can you spot</font>

764
00:37:17,350 --> 00:37:20,069
<font color="#CCCCCC">the issue with this</font>

765
00:37:21,730 --> 00:37:27,710
sequel injection<font color="#E5E5E5"> so we're</font><font color="#CCCCCC"> just taking</font>

766
00:37:25,460 --> 00:37:29,120
the users ID that they're<font color="#E5E5E5"> passing to us</font>

767
00:37:27,710 --> 00:37:30,290
and we're<font color="#E5E5E5"> just concatenate into a single</font>

768
00:37:29,120 --> 00:37:34,819
strand I mean what could<font color="#E5E5E5"> go wrong with</font>

769
00:37:30,290 --> 00:37:37,960
<font color="#CCCCCC">that but there's</font><font color="#E5E5E5"> also different forms of</font>

770
00:37:34,820 --> 00:37:40,820
injection so you may<font color="#E5E5E5"> not necessarily be</font>

771
00:37:37,960 --> 00:37:43,010
passing it directly<font color="#E5E5E5"> you could be passing</font>

772
00:37:40,820 --> 00:37:44,420
<font color="#CCCCCC">it by indirection</font><font color="#E5E5E5"> somewhere earlier in</font>

773
00:37:43,010 --> 00:37:45,980
your application you're contending some

774
00:37:44,420 --> 00:37:48,710
single string and<font color="#E5E5E5"> somewhere the user ID</font>

775
00:37:45,980 --> 00:37:49,970
gets concatenated and<font color="#E5E5E5"> oh boy huh things</font>

776
00:37:48,710 --> 00:37:52,040
happen so how do<font color="#E5E5E5"> we how</font><font color="#CCCCCC"> we fix</font>

777
00:37:49,970 --> 00:37:53,569
vulnerabilities like this well the

778
00:37:52,040 --> 00:37:56,420
common way of<font color="#E5E5E5"> doing</font><font color="#CCCCCC"> it is that we either</font>

779
00:37:53,570 --> 00:37:58,430
use<font color="#CCCCCC"> a built-in</font><font color="#E5E5E5"> API in order</font><font color="#CCCCCC"> to escape</font><font color="#E5E5E5"> it</font>

780
00:37:56,420 --> 00:38:01,130
<font color="#E5E5E5">like for sequel injection</font><font color="#CCCCCC"> the actual</font>

781
00:37:58,430 --> 00:38:02,870
sequel server will prevent the injection

782
00:38:01,130 --> 00:38:06,320
for us but there are other ways of<font color="#E5E5E5"> doing</font>

783
00:38:02,870 --> 00:38:11,029
it<font color="#CCCCCC"> like appending data for things</font><font color="#E5E5E5"> like</font>

784
00:38:06,320 --> 00:38:12,140
<font color="#E5E5E5">that so another vulnerability</font><font color="#CCCCCC"> that is</font>

785
00:38:11,030 --> 00:38:15,530
<font color="#E5E5E5">related to injection is called over</font>

786
00:38:12,140 --> 00:38:17,270
<font color="#E5E5E5">posting so for instance if</font><font color="#CCCCCC"> we give an</font>

787
00:38:15,530 --> 00:38:19,310
application more in more<font color="#E5E5E5"> information</font>

788
00:38:17,270 --> 00:38:21,950
than<font color="#E5E5E5"> it's asking for</font><font color="#CCCCCC"> and it doesn't do</font>

789
00:38:19,310 --> 00:38:24,590
<font color="#E5E5E5">and it just uses</font><font color="#CCCCCC"> just</font><font color="#E5E5E5"> accepts our input</font>

790
00:38:21,950 --> 00:38:27,470
without knowing then bad things<font color="#CCCCCC"> can</font>

791
00:38:24,590 --> 00:38:29,330
<font color="#CCCCCC">happen so in this case we have a model</font>

792
00:38:27,470 --> 00:38:32,899
that<font color="#E5E5E5"> we're just sending to</font><font color="#CCCCCC"> our web</font>

793
00:38:29,330 --> 00:38:35,210
server<font color="#E5E5E5"> that's saying hey John Doe and is</font>

794
00:38:32,900 --> 00:38:36,650
he a super user<font color="#CCCCCC"> but the thing is is that</font>

795
00:38:35,210 --> 00:38:39,050
we're<font color="#E5E5E5"> just taking that</font><font color="#CCCCCC"> model</font><font color="#E5E5E5"> and we're</font>

796
00:38:36,650 --> 00:38:41,180
using it and by<font color="#E5E5E5"> doing that we're</font>

797
00:38:39,050 --> 00:38:44,510
exposing<font color="#E5E5E5"> ourselves to hey John Doe can</font>

798
00:38:41,180 --> 00:38:46,609
<font color="#E5E5E5">be a super user whenever he wants so how</font>

799
00:38:44,510 --> 00:38:48,380
do we<font color="#CCCCCC"> protect against this well in</font>

800
00:38:46,610 --> 00:38:50,300
asp.net<font color="#E5E5E5"> you could just use the bind</font>

801
00:38:48,380 --> 00:38:52,580
attribute<font color="#CCCCCC"> there are a whole host of ways</font>

802
00:38:50,300 --> 00:38:54,110
of doing it<font color="#E5E5E5"> so the bind attribute just</font>

803
00:38:52,580 --> 00:38:56,120
<font color="#E5E5E5">basically says I only want to take this</font>

804
00:38:54,110 --> 00:38:58,910
property<font color="#E5E5E5"> off of this model that's pretty</font>

805
00:38:56,120 --> 00:39:00,140
simple<font color="#CCCCCC"> way of</font><font color="#E5E5E5"> doing it another way</font><font color="#CCCCCC"> that</font>

806
00:38:58,910 --> 00:39:01,910
they<font color="#E5E5E5"> introduced the HP in that core is</font>

807
00:39:00,140 --> 00:39:03,259
<font color="#CCCCCC">that you can just use annotations we're</font>

808
00:39:01,910 --> 00:39:05,480
pretty used<font color="#E5E5E5"> to using annotations in</font>

809
00:39:03,260 --> 00:39:07,820
asp.net<font color="#E5E5E5"> one of the annotations that we</font>

810
00:39:05,480 --> 00:39:10,820
can use is by never that way we can<font color="#E5E5E5"> just</font>

811
00:39:07,820 --> 00:39:14,060
<font color="#E5E5E5">specify on our specify the</font><font color="#CCCCCC"> properties</font>

812
00:39:10,820 --> 00:39:15,500
that<font color="#E5E5E5"> we do not want another thing that</font>

813
00:39:14,060 --> 00:39:17,660
we can<font color="#CCCCCC"> do</font><font color="#E5E5E5"> that we've been doing for</font>

814
00:39:15,500 --> 00:39:20,510
<font color="#E5E5E5">forever is just</font><font color="#CCCCCC"> use copying</font><font color="#E5E5E5"> so we can</font>

815
00:39:17,660 --> 00:39:21,950
just<font color="#E5E5E5"> take a model and then just create a</font>

816
00:39:20,510 --> 00:39:26,690
<font color="#E5E5E5">say copy of that that we can use</font><font color="#CCCCCC"> later</font>

817
00:39:21,950 --> 00:39:27,830
<font color="#CCCCCC">that's just a design</font><font color="#E5E5E5"> pattern and another</font>

818
00:39:26,690 --> 00:39:29,870
thing that<font color="#E5E5E5"> we</font><font color="#CCCCCC"> can actually do is just</font>

819
00:39:27,830 --> 00:39:31,250
split our model what why are we<font color="#E5E5E5"> why are</font>

820
00:39:29,870 --> 00:39:32,750
we subjecting ourselves to this pain in

821
00:39:31,250 --> 00:39:33,380
the first<font color="#E5E5E5"> place we can have a model</font><font color="#CCCCCC"> for</font>

822
00:39:32,750 --> 00:39:35,060
just<font color="#E5E5E5"> sending</font>

823
00:39:33,380 --> 00:39:36,380
the server and then<font color="#E5E5E5"> we can have just a</font>

824
00:39:35,060 --> 00:39:38,480
generic<font color="#E5E5E5"> model that we use everywhere</font>

825
00:39:36,380 --> 00:39:42,350
else<font color="#CCCCCC"> that way</font><font color="#E5E5E5"> we're just</font><font color="#CCCCCC"> never</font>

826
00:39:38,480 --> 00:39:45,520
<font color="#CCCCCC">vulnerable in the first place</font><font color="#E5E5E5"> all right</font>

827
00:39:42,350 --> 00:39:49,970
<font color="#E5E5E5">let's talk</font><font color="#CCCCCC"> about broken</font><font color="#E5E5E5"> authentication</font>

828
00:39:45,520 --> 00:39:51,860
so authentication<font color="#E5E5E5"> requires something we</font>

829
00:39:49,970 --> 00:39:53,480
have<font color="#CCCCCC"> BOTS nowadays spots like to attack</font>

830
00:39:51,860 --> 00:39:54,560
<font color="#E5E5E5">things you're not rate limiting your</font><font color="#CCCCCC"> API</font>

831
00:39:53,480 --> 00:39:56,990
<font color="#E5E5E5">you're probably going to be vulnerable</font>

832
00:39:54,560 --> 00:39:58,160
<font color="#CCCCCC">if you have weak passwords that</font><font color="#E5E5E5"> you're</font>

833
00:39:56,990 --> 00:39:59,750
allowing<font color="#E5E5E5"> your users to have if you're</font>

834
00:39:58,160 --> 00:40:01,730
not<font color="#E5E5E5"> setting them up like we showed</font>

835
00:39:59,750 --> 00:40:03,650
earlier<font color="#CCCCCC"> like I</font><font color="#E5E5E5"> showed it</font><font color="#CCCCCC"> earlier</font><font color="#E5E5E5"> and</font>

836
00:40:01,730 --> 00:40:05,060
<font color="#E5E5E5">you're</font><font color="#CCCCCC"> gonna be</font><font color="#E5E5E5"> vulnerable if you have</font>

837
00:40:03,650 --> 00:40:06,650
weak passwords combined with

838
00:40:05,060 --> 00:40:09,980
<font color="#CCCCCC">single-factor you're not using</font>

839
00:40:06,650 --> 00:40:11,510
multi-factor then you're going to<font color="#E5E5E5"> run</font>

840
00:40:09,980 --> 00:40:13,070
<font color="#E5E5E5">into password one two three is</font>

841
00:40:11,510 --> 00:40:14,870
somebody's password and then that's on

842
00:40:13,070 --> 00:40:16,340
the top thousand list of generic

843
00:40:14,870 --> 00:40:18,230
passwords and then that<font color="#CCCCCC"> bot is going to</font>

844
00:40:16,340 --> 00:40:20,120
automatically attack your site<font color="#E5E5E5"> because</font>

845
00:40:18,230 --> 00:40:21,230
he's<font color="#E5E5E5"> not rate limited and</font><font color="#CCCCCC"> you just have</font>

846
00:40:20,120 --> 00:40:25,549
cascading failures

847
00:40:21,230 --> 00:40:26,990
another thing is<font color="#E5E5E5"> exposing session IDs if</font>

848
00:40:25,550 --> 00:40:30,140
you have been reading<font color="#CCCCCC"> the news lately</font>

849
00:40:26,990 --> 00:40:31,220
<font color="#CCCCCC">AT&T</font><font color="#E5E5E5"> you could just go look at anybody's</font>

850
00:40:30,140 --> 00:40:34,160
<font color="#E5E5E5">bill because you could</font><font color="#CCCCCC"> just enter</font>

851
00:40:31,220 --> 00:40:37,669
<font color="#E5E5E5">increments an ID in the</font><font color="#CCCCCC"> URL and</font><font color="#E5E5E5"> boom you</font>

852
00:40:34,160 --> 00:40:39,440
could view the<font color="#E5E5E5"> next guy's bill so one</font>

853
00:40:37,670 --> 00:40:40,820
way<font color="#E5E5E5"> of getting</font><font color="#CCCCCC"> around broken</font>

854
00:40:39,440 --> 00:40:42,620
authentication is not just not to do

855
00:40:40,820 --> 00:40:43,940
authentication in the first place<font color="#CCCCCC"> we've</font>

856
00:40:42,620 --> 00:40:45,380
<font color="#E5E5E5">seen some strategies</font><font color="#CCCCCC"> for implementing</font>

857
00:40:43,940 --> 00:40:47,270
authentication we can use identity

858
00:40:45,380 --> 00:40:49,190
framework<font color="#CCCCCC"> or we can use a bunch of open</font>

859
00:40:47,270 --> 00:40:51,200
<font color="#E5E5E5">source solutions that have come out</font><font color="#CCCCCC"> ASOS</font>

860
00:40:49,190 --> 00:40:53,540
<font color="#E5E5E5">ASOS is an actual framework for</font><font color="#CCCCCC"> building</font>

861
00:40:51,200 --> 00:40:56,509
things<font color="#E5E5E5"> like identity framework</font><font color="#CCCCCC"> it'll can</font>

862
00:40:53,540 --> 00:40:59,259
build your own<font color="#E5E5E5"> open ID provider and open</font>

863
00:40:56,510 --> 00:41:01,250
edict is actually built on top of<font color="#E5E5E5"> it</font>

864
00:40:59,260 --> 00:41:03,050
<font color="#E5E5E5">another thing</font><font color="#CCCCCC"> that you can</font><font color="#E5E5E5"> do is use</font>

865
00:41:01,250 --> 00:41:04,820
just<font color="#CCCCCC"> a commercial off-the-shelf product</font>

866
00:41:03,050 --> 00:41:06,110
so like identity server<font color="#E5E5E5"> identity server</font>

867
00:41:04,820 --> 00:41:08,990
is an open<font color="#E5E5E5"> source and</font><font color="#CCCCCC"> commercial</font>

868
00:41:06,110 --> 00:41:10,670
solution that you<font color="#CCCCCC"> can go download run on</font>

869
00:41:08,990 --> 00:41:13,640
your<font color="#E5E5E5"> own web server don't have to worry</font>

870
00:41:10,670 --> 00:41:15,770
<font color="#E5E5E5">about it or you or</font><font color="#CCCCCC"> you can use something</font>

871
00:41:13,640 --> 00:41:18,520
like<font color="#CCCCCC"> Sears Sears is a</font><font color="#E5E5E5"> password list</font>

872
00:41:15,770 --> 00:41:20,930
<font color="#CCCCCC">drop-in solution</font><font color="#E5E5E5"> so it won't store any</font>

873
00:41:18,520 --> 00:41:22,610
users passwords and it mainly<font color="#E5E5E5"> uses like</font>

874
00:41:20,930 --> 00:41:23,750
Google authentication Microsoft<font color="#CCCCCC"> and I'll</font>

875
00:41:22,610 --> 00:41:27,200
just patch<font color="#CCCCCC"> it with token back to</font>

876
00:41:23,750 --> 00:41:29,450
<font color="#E5E5E5">represent your stuff right another thing</font>

877
00:41:27,200 --> 00:41:30,980
is to<font color="#CCCCCC"> just use</font><font color="#E5E5E5"> the various identity</font>

878
00:41:29,450 --> 00:41:32,899
workflows<font color="#CCCCCC"> that we saw earlier we can use</font>

879
00:41:30,980 --> 00:41:35,150
<font color="#E5E5E5">individual we</font><font color="#CCCCCC"> can use Windows</font><font color="#E5E5E5"> or we can</font>

880
00:41:32,900 --> 00:41:36,950
<font color="#CCCCCC">use the drop in on</font><font color="#E5E5E5"> any provider so we</font>

881
00:41:35,150 --> 00:41:38,810
need<font color="#E5E5E5"> something</font><font color="#CCCCCC"> like Active Directory or</font>

882
00:41:36,950 --> 00:41:41,230
something<font color="#E5E5E5"> like Amazon's identity</font>

883
00:41:38,810 --> 00:41:41,230
solution

884
00:41:41,920 --> 00:41:47,360
<font color="#E5E5E5">all right the next</font><font color="#CCCCCC"> thing that we're</font>

885
00:41:44,270 --> 00:41:48,110
going<font color="#E5E5E5"> to talk</font><font color="#CCCCCC"> about is more fun thing</font>

886
00:41:47,360 --> 00:41:51,950
that<font color="#CCCCCC"> I picked</font>

887
00:41:48,110 --> 00:41:54,560
so XML external entities<font color="#E5E5E5"> so basically if</font>

888
00:41:51,950 --> 00:41:56,480
your application accepts<font color="#E5E5E5"> XML and it goes</font>

889
00:41:54,560 --> 00:41:59,120
through an XML parser<font color="#CCCCCC"> that</font><font color="#E5E5E5"> is not the</font>

890
00:41:56,480 --> 00:42:02,290
default<font color="#E5E5E5"> one or it uses some other kind</font>

891
00:41:59,120 --> 00:42:06,970
of XML from a<font color="#CCCCCC"> third-party</font><font color="#E5E5E5"> like</font><font color="#CCCCCC"> soap or</font>

892
00:42:02,290 --> 00:42:10,279
sam'l or some industry standard XML<font color="#E5E5E5"> like</font>

893
00:42:06,970 --> 00:42:13,040
mismo mismos<font color="#CCCCCC"> one of them then you may</font><font color="#E5E5E5"> be</font>

894
00:42:10,280 --> 00:42:14,390
vulnerable<font color="#E5E5E5"> but the good news is is that</font>

895
00:42:13,040 --> 00:42:17,570
<font color="#E5E5E5">you're not if you're using ASP on that</font>

896
00:42:14,390 --> 00:42:20,690
core it's not<font color="#CCCCCC"> vulnerable but and that</font><font color="#E5E5E5"> is</font>

897
00:42:17,570 --> 00:42:22,460
because it<font color="#E5E5E5"> is</font><font color="#CCCCCC"> not vulnerable</font><font color="#E5E5E5"> by the fact</font>

898
00:42:20,690 --> 00:42:24,050
<font color="#CCCCCC">that it uses</font><font color="#E5E5E5"> that standard</font><font color="#CCCCCC"> two and</font>

899
00:42:22,460 --> 00:42:26,240
<font color="#E5E5E5">dotnet standard two is implemented on</font>

900
00:42:24,050 --> 00:42:29,230
framework for six<font color="#E5E5E5"> a framework or six is</font>

901
00:42:26,240 --> 00:42:33,439
<font color="#E5E5E5">not vulnerable yay</font>

902
00:42:29,230 --> 00:42:35,270
but asp.net<font color="#CCCCCC"> if you've got legacy code</font>

903
00:42:33,440 --> 00:42:37,880
bases which I'm sure Mike<font color="#E5E5E5"> Dennis has</font>

904
00:42:35,270 --> 00:42:39,920
then you're going<font color="#E5E5E5"> to probably want to</font>

905
00:42:37,880 --> 00:42:43,370
listen<font color="#CCCCCC"> then</font><font color="#E5E5E5"> on this part the good news</font>

906
00:42:39,920 --> 00:42:44,900
is is<font color="#CCCCCC"> that if you have a version at</font><font color="#E5E5E5"> four</font>

907
00:42:43,370 --> 00:42:46,670
or<font color="#E5E5E5"> five two or above you are safe</font>

908
00:42:44,900 --> 00:42:50,000
<font color="#CCCCCC">because Microsoft actually</font><font color="#E5E5E5"> fixed their</font>

909
00:42:46,670 --> 00:42:51,530
issues<font color="#E5E5E5"> but you are not going to have a</font>

910
00:42:50,000 --> 00:42:53,660
good time otherwise but the good thing

911
00:42:51,530 --> 00:42:56,120
<font color="#E5E5E5">is is if you just</font><font color="#CCCCCC"> use linked</font><font color="#E5E5E5"> XML in your</font>

912
00:42:53,660 --> 00:42:57,859
application<font color="#E5E5E5"> you are safe if you use</font><font color="#CCCCCC"> XML</font>

913
00:42:56,120 --> 00:42:58,940
<font color="#E5E5E5">dictionary reader in your application</font>

914
00:42:57,860 --> 00:43:03,410
you're safe

915
00:42:58,940 --> 00:43:05,720
but yes sir<font color="#CCCCCC"> Oh</font><font color="#E5E5E5"> time cool well if you're</font>

916
00:43:03,410 --> 00:43:07,310
<font color="#CCCCCC">using XML document</font><font color="#E5E5E5"> so XML document is an</font>

917
00:43:05,720 --> 00:43:08,959
API that<font color="#E5E5E5"> is pretty much as old was done</font>

918
00:43:07,310 --> 00:43:11,600
<font color="#CCCCCC">that's you you're</font><font color="#E5E5E5"> not</font><font color="#CCCCCC"> going to be safe</font>

919
00:43:08,960 --> 00:43:13,250
<font color="#CCCCCC">so this is a</font><font color="#E5E5E5"> demonstration of an</font>

920
00:43:11,600 --> 00:43:15,470
<font color="#E5E5E5">excellent extensible entity attack and</font>

921
00:43:13,250 --> 00:43:17,420
how it works is<font color="#CCCCCC"> that you</font><font color="#E5E5E5"> just embed the</font>

922
00:43:15,470 --> 00:43:20,750
entity into your XML and<font color="#CCCCCC"> then you can</font>

923
00:43:17,420 --> 00:43:21,980
<font color="#E5E5E5">just say</font><font color="#CCCCCC"> hey I want</font><font color="#E5E5E5"> to load a file so</font>

924
00:43:20,750 --> 00:43:24,350
it's nice that I can just arbitrarily

925
00:43:21,980 --> 00:43:26,480
<font color="#E5E5E5">load a file into my XML document and</font>

926
00:43:24,350 --> 00:43:27,650
then I can just write<font color="#CCCCCC"> that out</font><font color="#E5E5E5"> somewhere</font>

927
00:43:26,480 --> 00:43:28,280
<font color="#CCCCCC">and the hacker can get my credentials</font>

928
00:43:27,650 --> 00:43:32,420
that's nice

929
00:43:28,280 --> 00:43:35,780
ah<font color="#E5E5E5"> so the way you fix that is by the XML</font>

930
00:43:32,420 --> 00:43:37,040
resolver so if you set that<font color="#E5E5E5"> to</font><font color="#CCCCCC"> no</font><font color="#E5E5E5"> then</font>

931
00:43:35,780 --> 00:43:38,900
you will be good because<font color="#E5E5E5"> it</font><font color="#CCCCCC"> just won't</font>

932
00:43:37,040 --> 00:43:40,660
resolve in an ADIZ<font color="#E5E5E5"> that that's it's</font>

933
00:43:38,900 --> 00:43:43,160
<font color="#CCCCCC">gonna be a</font><font color="#E5E5E5"> common train with all these</font>

934
00:43:40,660 --> 00:43:45,200
with all these<font color="#E5E5E5"> threats</font><font color="#CCCCCC"> is that back</font><font color="#E5E5E5"> in</font>

935
00:43:43,160 --> 00:43:47,359
the day Microsoft was like well why

936
00:43:45,200 --> 00:43:49,310
don't we<font color="#E5E5E5"> just do</font><font color="#CCCCCC"> everything by default</font>

937
00:43:47,360 --> 00:43:52,190
and<font color="#E5E5E5"> then nothing's going to be</font>

938
00:43:49,310 --> 00:43:53,690
vulnerable<font color="#E5E5E5"> from that but XML node reader</font>

939
00:43:52,190 --> 00:43:55,940
<font color="#E5E5E5">that's safe</font>

940
00:43:53,690 --> 00:43:57,140
<font color="#CCCCCC">xml reader</font><font color="#E5E5E5"> it's another common thing</font>

941
00:43:55,940 --> 00:43:59,809
that<font color="#E5E5E5"> we use in order to read and write</font>

942
00:43:57,140 --> 00:44:04,160
<font color="#CCCCCC">xml that's safe external text reader</font>

943
00:43:59,809 --> 00:44:06,799
<font color="#E5E5E5">that is not safe for XML text reader we</font>

944
00:44:04,160 --> 00:44:08,990
actually have to prohibit the behavior

945
00:44:06,799 --> 00:44:12,140
just like we ran<font color="#CCCCCC"> into with XML document</font>

946
00:44:08,990 --> 00:44:13,848
it's pretty simple<font color="#CCCCCC"> but it's</font><font color="#E5E5E5"> vulnerable</font>

947
00:44:12,140 --> 00:44:15,769
in multiple ways because prior to dotnet

948
00:44:13,849 --> 00:44:18,319
framework<font color="#CCCCCC"> 4 which is</font><font color="#E5E5E5"> if you've written</font>

949
00:44:15,769 --> 00:44:19,788
software<font color="#E5E5E5"> in the last</font><font color="#CCCCCC"> six years yeah</font>

950
00:44:18,319 --> 00:44:21,109
you're probably<font color="#E5E5E5"> not using</font><font color="#CCCCCC"> gotten at four</font>

951
00:44:19,789 --> 00:44:26,059
<font color="#E5E5E5">unless you're macdennis</font>

952
00:44:21,109 --> 00:44:29,569
<font color="#E5E5E5">but yeah oh good</font>

953
00:44:26,059 --> 00:44:32,509
I'm sorry for<font color="#CCCCCC"> picking on you alright</font>

954
00:44:29,569 --> 00:44:34,308
prior to done that framework<font color="#CCCCCC"> 5 -</font><font color="#E5E5E5"> you</font>

955
00:44:32,509 --> 00:44:37,940
would have to do this<font color="#E5E5E5"> this</font><font color="#CCCCCC"> is a</font>

956
00:44:34,309 --> 00:44:39,440
cascading effect<font color="#E5E5E5"> and the fact that both</font>

957
00:44:37,940 --> 00:44:40,819
<font color="#CCCCCC">of these properties exist</font><font color="#E5E5E5"> except</font>

958
00:44:39,440 --> 00:44:42,470
Microsoft was like hey maybe we should

959
00:44:40,819 --> 00:44:45,109
<font color="#CCCCCC">just add a</font><font color="#E5E5E5"> different kind of processing</font>

960
00:44:42,470 --> 00:44:47,419
to this thing so<font color="#CCCCCC"> oh but we're gonna have</font>

961
00:44:45,109 --> 00:44:49,730
the same vulnerability just we<font color="#E5E5E5"> just made</font>

962
00:44:47,420 --> 00:44:51,019
herself<font color="#E5E5E5"> in a horrible place an XPath</font>

963
00:44:49,730 --> 00:44:52,490
<font color="#CCCCCC">Navigator is unsafe</font>

964
00:44:51,019 --> 00:44:55,098
but that's<font color="#E5E5E5"> only by virtue</font><font color="#CCCCCC"> of the fact</font>

965
00:44:52,490 --> 00:44:57,680
that XPath<font color="#CCCCCC"> Navigator uses unsafe things</font>

966
00:44:55,099 --> 00:44:59,720
like<font color="#E5E5E5"> XML</font><font color="#CCCCCC"> Reader which means if you're</font>

967
00:44:57,680 --> 00:45:02,839
<font color="#CCCCCC">using</font><font color="#E5E5E5"> XML reader you will</font><font color="#CCCCCC"> be unsafe in</font>

968
00:44:59,720 --> 00:45:04,970
certain circumstances<font color="#E5E5E5"> and</font><font color="#CCCCCC"> excel so</font>

969
00:45:02,839 --> 00:45:08,210
<font color="#E5E5E5">external stylesheets</font><font color="#CCCCCC"> I don't really know</font>

970
00:45:04,970 --> 00:45:10,490
who uses those anymore<font color="#CCCCCC"> but it it suffers</font>

971
00:45:08,210 --> 00:45:12,559
the<font color="#CCCCCC"> same kind of vulnerability as the</font>

972
00:45:10,490 --> 00:45:15,618
XPath<font color="#CCCCCC"> navigator because it uses the same</font>

973
00:45:12,559 --> 00:45:17,450
underlying thing and that is my

974
00:45:15,619 --> 00:45:18,890
<font color="#E5E5E5">presentation</font><font color="#CCCCCC"> it's kind of random at the</font>

975
00:45:17,450 --> 00:45:20,750
end but those are just<font color="#E5E5E5"> some</font><font color="#CCCCCC"> things that</font>

976
00:45:18,890 --> 00:45:22,400
<font color="#E5E5E5">I've learned if you want to learn more</font>

977
00:45:20,750 --> 00:45:24,769
about ASP on that core<font color="#E5E5E5"> you can</font><font color="#CCCCCC"> check out</font>

978
00:45:22,400 --> 00:45:26,990
their github<font color="#E5E5E5"> and there's great</font>

979
00:45:24,769 --> 00:45:28,308
documentation<font color="#CCCCCC"> too I consulted that a lot</font>

980
00:45:26,990 --> 00:45:30,589
when I<font color="#CCCCCC"> was writing</font><font color="#E5E5E5"> this presentation and</font>

981
00:45:28,309 --> 00:45:32,779
if you<font color="#E5E5E5"> want to remember how to host</font>

982
00:45:30,589 --> 00:45:34,220
things<font color="#CCCCCC"> HP onic or anywhere you can just</font>

983
00:45:32,779 --> 00:45:36,829
read<font color="#CCCCCC"> scott</font><font color="#E5E5E5"> handsome</font><font color="#CCCCCC"> ins GoDaddy hosting</font>

984
00:45:34,220 --> 00:45:38,450
<font color="#CCCCCC">post otherwise</font><font color="#E5E5E5"> and here's some people</font>

985
00:45:36,829 --> 00:45:39,319
<font color="#E5E5E5">that I follow in the community about USP</font>

986
00:45:38,450 --> 00:45:41,240
on that core security

987
00:45:39,319 --> 00:45:42,829
so there's<font color="#CCCCCC"> Barry dorrance Barry Lorenz</font>

988
00:45:41,240 --> 00:45:45,649
is actually works on the Microsoft team

989
00:45:42,829 --> 00:45:48,769
<font color="#E5E5E5">and he basically posts all the CVS on</font>

990
00:45:45,650 --> 00:45:50,690
<font color="#E5E5E5">github</font><font color="#CCCCCC"> so if you he speaks a lot</font><font color="#E5E5E5"> - so he</font>

991
00:45:48,769 --> 00:45:52,250
has a lot<font color="#CCCCCC"> of presentations recorded some</font>

992
00:45:50,690 --> 00:45:54,500
of<font color="#CCCCCC"> the community members are brock allen</font>

993
00:45:52,250 --> 00:45:56,750
and<font color="#CCCCCC"> dominic</font><font color="#E5E5E5"> conveyor so those guys</font>

994
00:45:54,500 --> 00:45:58,609
actually wrote identity server and

995
00:45:56,750 --> 00:46:00,950
contributed it to the open sourced on

996
00:45:58,609 --> 00:46:02,390
that foundation which basically is<font color="#E5E5E5"> the</font>

997
00:46:00,950 --> 00:46:04,578
parent<font color="#CCCCCC"> organization for dotnet now and</font>

998
00:46:02,390 --> 00:46:07,220
then you have<font color="#CCCCCC"> Troy</font><font color="#E5E5E5"> hunt have I been</font>

999
00:46:04,579 --> 00:46:09,380
poned<font color="#CCCCCC"> calm</font><font color="#E5E5E5"> he's the guy who's been</font>

1000
00:46:07,220 --> 00:46:11,180
basically slurping up passwords for<font color="#E5E5E5"> all</font>

1001
00:46:09,380 --> 00:46:13,849
these<font color="#E5E5E5"> breaches and he also writes a lot</font>

1002
00:46:11,180 --> 00:46:21,339
<font color="#E5E5E5">of em so that's my presentation</font><font color="#CCCCCC"> are</font>

1003
00:46:13,849 --> 00:46:24,520
there any<font color="#E5E5E5"> questions all right I'm done</font>

1004
00:46:21,339 --> 00:46:24,520
thank<font color="#CCCCCC"> you</font>

