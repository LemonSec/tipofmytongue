1
00:00:25,570 --> 00:00:30,529
can everyone hear me all the way in the

2
00:00:28,580 --> 00:00:31,698
back perfect excellent all right so my

3
00:00:30,529 --> 00:00:33,590
name is Steve Edwards and I'm here to

4
00:00:31,699 --> 00:00:37,489
talk about implementing explicit allow

5
00:00:33,590 --> 00:00:38,809
without getting fired so I work at

6
00:00:37,489 --> 00:00:42,110
Jewish security which is now part of

7
00:00:38,809 --> 00:00:43,790
Cisco Systems and I lead their corporate

8
00:00:42,110 --> 00:00:46,489
security engineering and defensive

9
00:00:43,790 --> 00:00:48,890
security teams there so a little bit of

10
00:00:46,489 --> 00:00:50,330
blue and a little bit of red before that

11
00:00:48,890 --> 00:00:53,320
I was at Eastern Michigan University

12
00:00:50,330 --> 00:00:58,460
where I led the security program there

13
00:00:53,320 --> 00:01:00,710
at duo we have a really great product

14
00:00:58,460 --> 00:01:03,230
and that's not what I'm here to talk to

15
00:01:00,710 --> 00:01:05,780
you about today at duo were allergic to

16
00:01:03,230 --> 00:01:06,710
vendor pitches so I just wanted to tell

17
00:01:05,780 --> 00:01:09,050
you about some of the cool things that

18
00:01:06,710 --> 00:01:11,750
we're doing inside of duo to keep the

19
00:01:09,050 --> 00:01:12,979
company secure and then if you want to

20
00:01:11,750 --> 00:01:15,050
know more about our product we do have a

21
00:01:12,979 --> 00:01:16,640
booth outside where you can you can stop

22
00:01:15,050 --> 00:01:19,759
and talk to us and we'll give you all

23
00:01:16,640 --> 00:01:22,100
the details about it there so you came

24
00:01:19,759 --> 00:01:24,110
to a presentation where the title

25
00:01:22,100 --> 00:01:25,640
included a phrase that I coined so you

26
00:01:24,110 --> 00:01:30,289
may have never heard of explicit allow

27
00:01:25,640 --> 00:01:32,330
before and essentially it's a method by

28
00:01:30,289 --> 00:01:35,240
which all code except that which is

29
00:01:32,330 --> 00:01:40,640
explicitly than that has been previously

30
00:01:35,240 --> 00:01:42,289
seen has been approved sorry except

31
00:01:40,640 --> 00:01:44,599
which has been previously seen and

32
00:01:42,289 --> 00:01:47,420
approve is prevented from running on a

33
00:01:44,599 --> 00:01:49,610
system so it's a more inclusive term for

34
00:01:47,420 --> 00:01:51,860
application whitelisting and I didn't

35
00:01:49,610 --> 00:01:54,500
coin this phrase just because white

36
00:01:51,860 --> 00:01:56,060
listing and black listing can sometimes

37
00:01:54,500 --> 00:02:00,649
make people feel uncomfortable or

38
00:01:56,060 --> 00:02:02,239
excluded but this this allows us to

39
00:02:00,649 --> 00:02:02,750
expand beyond just application

40
00:02:02,239 --> 00:02:05,450
whitelisting

41
00:02:02,750 --> 00:02:07,970
this this principle this concept and so

42
00:02:05,450 --> 00:02:09,619
I think you'll see today why this might

43
00:02:07,970 --> 00:02:10,818
be a better term so I'll take you

44
00:02:09,619 --> 00:02:12,980
through some of the ways that we've

45
00:02:10,818 --> 00:02:15,649
implemented explicit allow @uo and the

46
00:02:12,980 --> 00:02:18,859
way that we did it where no one ran me

47
00:02:15,650 --> 00:02:19,940
out of town with pitchforks so the first

48
00:02:18,860 --> 00:02:21,830
thing that I want to talk about and the

49
00:02:19,940 --> 00:02:23,750
secret to our success is design and so

50
00:02:21,830 --> 00:02:24,920
I'll talk about design at duo and I will

51
00:02:23,750 --> 00:02:26,720
talk about our product a little bit

52
00:02:24,920 --> 00:02:29,958
because we spend a lot of time thinking

53
00:02:26,720 --> 00:02:32,810
about design and I'll share how those

54
00:02:29,959 --> 00:02:33,859
design principles we applied to the

55
00:02:32,810 --> 00:02:37,730
thing to the tools that we built

56
00:02:33,859 --> 00:02:38,600
internal to keep the company secure then

57
00:02:37,730 --> 00:02:40,910
I'll talk through

58
00:02:38,600 --> 00:02:43,460
how where we've applied explicit

59
00:02:40,910 --> 00:02:45,049
allowing practice so on our max our

60
00:02:43,460 --> 00:02:46,940
Windows computers our Chrome OS

61
00:02:45,050 --> 00:02:50,300
computers as well as at the network

62
00:02:46,940 --> 00:02:52,430
level and also for some types of

63
00:02:50,300 --> 00:02:54,320
authentication I'll share a little bit

64
00:02:52,430 --> 00:02:56,090
about what's coming next for the things

65
00:02:54,320 --> 00:02:58,070
that we're building then I'll have time

66
00:02:56,090 --> 00:03:00,710
for Q&A and if I talk really really fast

67
00:02:58,070 --> 00:03:04,519
which I times two then we'll have time

68
00:03:00,710 --> 00:03:07,790
for a demo as well so design it - Oh a -

69
00:03:04,520 --> 00:03:10,040
well we have a strong focus on usable

70
00:03:07,790 --> 00:03:11,989
security and you can see that in our

71
00:03:10,040 --> 00:03:14,000
product people actually like to interact

72
00:03:11,990 --> 00:03:17,450
with it and so we've taken those

73
00:03:14,000 --> 00:03:19,880
principles of user centric design and

74
00:03:17,450 --> 00:03:21,560
applied it to explicit allow and that's

75
00:03:19,880 --> 00:03:24,640
the reason we could roll out something

76
00:03:21,560 --> 00:03:27,140
as a restrictive as these principles

77
00:03:24,640 --> 00:03:28,670
without seeing a lot of backlash from

78
00:03:27,140 --> 00:03:31,040
our end users or our system

79
00:03:28,670 --> 00:03:32,540
administrators so in this presentation

80
00:03:31,040 --> 00:03:34,220
I'll show you some of the tools that

81
00:03:32,540 --> 00:03:36,230
we've built explain the underlying

82
00:03:34,220 --> 00:03:38,930
infrastructure and the philosophy that

83
00:03:36,230 --> 00:03:44,810
we took in our approach to implementing

84
00:03:38,930 --> 00:03:46,520
this at duo so in other words if if you

85
00:03:44,810 --> 00:03:49,370
don't have usable security people will

86
00:03:46,520 --> 00:03:51,380
find a way around it in this old Dilbert

87
00:03:49,370 --> 00:03:53,960
comic more Dex the preventer of

88
00:03:51,380 --> 00:03:56,390
information services says security is

89
00:03:53,960 --> 00:03:57,890
more important than usability in a

90
00:03:56,390 --> 00:04:01,549
perfect world no one would be able to

91
00:03:57,890 --> 00:04:02,690
use anything and then this des logging

92
00:04:01,550 --> 00:04:03,920
into his computer and it says to

93
00:04:02,690 --> 00:04:06,230
complete the login procedure please

94
00:04:03,920 --> 00:04:08,119
stare directly into the Sun that's a

95
00:04:06,230 --> 00:04:10,369
great example of non usable security but

96
00:04:08,120 --> 00:04:12,410
that's what security companies often ask

97
00:04:10,370 --> 00:04:13,730
of our end users and it's a bad

98
00:04:12,410 --> 00:04:16,700
experience for them and then it's a bad

99
00:04:13,730 --> 00:04:17,988
experience for security teams because

100
00:04:16,700 --> 00:04:21,589
they've implemented something that

101
00:04:17,988 --> 00:04:24,530
people hate and so if security isn't

102
00:04:21,589 --> 00:04:26,119
usable it won't work people will find a

103
00:04:24,530 --> 00:04:28,159
way around it if you implement something

104
00:04:26,120 --> 00:04:30,020
that's so hard to mix or make someone's

105
00:04:28,160 --> 00:04:32,210
laptop so hard to use they'll bring a

106
00:04:30,020 --> 00:04:33,710
work from home laptop or if you make it

107
00:04:32,210 --> 00:04:35,060
so hard for them to get at their email

108
00:04:33,710 --> 00:04:37,219
they'll just start forwarding it to

109
00:04:35,060 --> 00:04:39,110
another mailbox and we can go back and

110
00:04:37,220 --> 00:04:40,340
forth and try and add more controls to

111
00:04:39,110 --> 00:04:42,110
make it even harder and harder and

112
00:04:40,340 --> 00:04:44,900
harder but that's not enabling the

113
00:04:42,110 --> 00:04:46,550
business that's not whatever your

114
00:04:44,900 --> 00:04:47,929
company is supposed to be doing that's

115
00:04:46,550 --> 00:04:50,950
standing in the way of it instead of

116
00:04:47,930 --> 00:04:50,950
supporting the mission

117
00:04:51,100 --> 00:04:57,100
so we wanted to take these principles

118
00:04:53,050 --> 00:04:59,320
and apply them to explicit allow duos

119
00:04:57,100 --> 00:05:01,630
focus on usable security can be seen

120
00:04:59,320 --> 00:05:03,610
even in our staffing at duo for every

121
00:05:01,630 --> 00:05:06,070
five software engineers we have one

122
00:05:03,610 --> 00:05:07,750
product designer so that's a lot of

123
00:05:06,070 --> 00:05:11,320
people thinking about how humans

124
00:05:07,750 --> 00:05:12,940
interact with computers and receiving

125
00:05:11,320 --> 00:05:14,860
feedback from people who actually use

126
00:05:12,940 --> 00:05:16,719
our software and people who buy and

127
00:05:14,860 --> 00:05:18,070
implement our software what they like

128
00:05:16,720 --> 00:05:20,620
and what they don't like and what's

129
00:05:18,070 --> 00:05:23,920
effective because honestly that's what

130
00:05:20,620 --> 00:05:26,050
makes effective security so we wanted to

131
00:05:23,920 --> 00:05:28,630
minimize friction we wanted to protect

132
00:05:26,050 --> 00:05:30,130
people without ruining their day and we

133
00:05:28,630 --> 00:05:32,260
wanted to protect people without ruining

134
00:05:30,130 --> 00:05:34,090
our IT departments day if we're pushing

135
00:05:32,260 --> 00:05:37,300
out something to the laptops that IT

136
00:05:34,090 --> 00:05:38,650
manages they're the ones who are going

137
00:05:37,300 --> 00:05:39,820
to get yelled at not us and maybe

138
00:05:38,650 --> 00:05:41,140
they're really good at redirecting it

139
00:05:39,820 --> 00:05:43,390
and I still get yelled at it happens

140
00:05:41,140 --> 00:05:45,969
sometimes but we don't want to ruin our

141
00:05:43,390 --> 00:05:47,770
system administrators day or our end

142
00:05:45,970 --> 00:05:51,280
users day with any of the security that

143
00:05:47,770 --> 00:05:53,710
we roll out we just want to introduce

144
00:05:51,280 --> 00:05:57,969
the right amount of friction when a

145
00:05:53,710 --> 00:05:59,320
risky action occurs but make sure that

146
00:05:57,970 --> 00:06:01,600
it's not too little and too much just

147
00:05:59,320 --> 00:06:04,690
enough friction for someone to slow down

148
00:06:01,600 --> 00:06:06,760
and say hey is this really what I wanted

149
00:06:04,690 --> 00:06:10,390
to do and at the same time provide them

150
00:06:06,760 --> 00:06:12,159
with the best security that we can so

151
00:06:10,390 --> 00:06:14,080
the winning formula and and we've

152
00:06:12,160 --> 00:06:15,430
applied this across all of our platforms

153
00:06:14,080 --> 00:06:20,560
and I'll go through and I'll show you

154
00:06:15,430 --> 00:06:24,060
some examples of each so say this this

155
00:06:20,560 --> 00:06:26,620
starts when an action is blocked so I

156
00:06:24,060 --> 00:06:28,770
feel like I'm playing Tron just a little

157
00:06:26,620 --> 00:06:28,770
bit

158
00:06:32,430 --> 00:06:39,910
yay okay well III liked the trance and

159
00:06:38,710 --> 00:06:42,880
effects actually maybe I'll put that

160
00:06:39,910 --> 00:06:45,160
back later okay so the winning formula

161
00:06:42,880 --> 00:06:47,409
is this any of these start when an

162
00:06:45,160 --> 00:06:49,840
action is blocked because like I said

163
00:06:47,410 --> 00:06:54,040
explicit allow is default deny

164
00:06:49,840 --> 00:06:55,659
everything is blocked at first so say

165
00:06:54,040 --> 00:06:57,640
you try to run an application on your

166
00:06:55,660 --> 00:06:59,080
computer you double click on it and some

167
00:06:57,640 --> 00:07:00,340
scary message comes up and says hey you

168
00:06:59,080 --> 00:07:05,140
can't do this talk to your system

169
00:07:00,340 --> 00:07:07,599
administrator please so a local agent

170
00:07:05,140 --> 00:07:09,310
will send that event to automation and

171
00:07:07,600 --> 00:07:10,630
then we can start doing things in the

172
00:07:09,310 --> 00:07:13,900
background we can use threat

173
00:07:10,630 --> 00:07:16,120
intelligence to start scanning if this

174
00:07:13,900 --> 00:07:17,859
is scanning this application against our

175
00:07:16,120 --> 00:07:20,440
threat intelligence feeds say hey is

176
00:07:17,860 --> 00:07:21,880
this known malicious right now and if it

177
00:07:20,440 --> 00:07:23,890
is well just raise an incident right

178
00:07:21,880 --> 00:07:25,270
away sorry it's blocked so nothing bad

179
00:07:23,890 --> 00:07:27,580
has happened and it's already blocked

180
00:07:25,270 --> 00:07:29,320
but we still want an incident because we

181
00:07:27,580 --> 00:07:31,150
don't want malware on our computers even

182
00:07:29,320 --> 00:07:32,560
if it's not doing anything because how

183
00:07:31,150 --> 00:07:34,570
did it get there maybe something else

184
00:07:32,560 --> 00:07:36,840
maybe maybe a dropper did end up getting

185
00:07:34,570 --> 00:07:38,740
through and landed the software there

186
00:07:36,840 --> 00:07:40,570
but if we don't see that it's a

187
00:07:38,740 --> 00:07:42,490
malicious right away will prompt the end

188
00:07:40,570 --> 00:07:45,159
user and say hey did you intend to run

189
00:07:42,490 --> 00:07:46,540
this because typically we don't want

190
00:07:45,160 --> 00:07:47,620
software running on people's computer if

191
00:07:46,540 --> 00:07:51,250
they didn't mean to do it

192
00:07:47,620 --> 00:07:53,380
unless like we IT pushed that to them

193
00:07:51,250 --> 00:07:55,960
and then we'll have already added added

194
00:07:53,380 --> 00:07:58,060
it to the allowed list so we'll ask them

195
00:07:55,960 --> 00:08:00,430
hey did you mean to run this and if they

196
00:07:58,060 --> 00:08:02,020
say yes then ok it's added to their

197
00:08:00,430 --> 00:08:04,480
allowed list right away and they can

198
00:08:02,020 --> 00:08:06,099
double click it and it will run if they

199
00:08:04,480 --> 00:08:08,020
say no then we'll create an incident and

200
00:08:06,100 --> 00:08:09,220
we'll work through why is software

201
00:08:08,020 --> 00:08:12,099
running without this person's permission

202
00:08:09,220 --> 00:08:13,720
maybe it's just the Adobe updater and

203
00:08:12,100 --> 00:08:16,270
they don't sign their binaries which is

204
00:08:13,720 --> 00:08:17,410
really frustrating so they didn't know

205
00:08:16,270 --> 00:08:21,820
that Adobe was updating in the

206
00:08:17,410 --> 00:08:24,240
background so we didn't so that's that's

207
00:08:21,820 --> 00:08:26,770
a good start and then every single day

208
00:08:24,240 --> 00:08:28,270
at around midnight we go through our

209
00:08:26,770 --> 00:08:30,130
entire list of allowed software and

210
00:08:28,270 --> 00:08:31,479
rescan it against their intelligence to

211
00:08:30,130 --> 00:08:33,520
see hey has something that was

212
00:08:31,480 --> 00:08:35,020
previously unknown been flagged as

213
00:08:33,520 --> 00:08:36,728
malicious so then we can raise another

214
00:08:35,020 --> 00:08:38,380
incident and follow up if that's the

215
00:08:36,729 --> 00:08:39,880
case and you can see with this formula

216
00:08:38,380 --> 00:08:41,110
there's more that we can inject you this

217
00:08:39,880 --> 00:08:43,549
is a great place to start but you can

218
00:08:41,110 --> 00:08:46,190
also work in sandbox saying and you

219
00:08:43,549 --> 00:08:48,050
work in actual system administrator

220
00:08:46,190 --> 00:08:53,000
authorization all through this same

221
00:08:48,050 --> 00:08:55,640
workflow so in practice here's my Mac

222
00:08:53,000 --> 00:08:57,140
I'm trying to run a piece of software

223
00:08:55,640 --> 00:08:59,089
called Stellarium it lets you see where

224
00:08:57,140 --> 00:09:02,810
the stars are in the sky and it's not

225
00:08:59,089 --> 00:09:04,370
allowed yet so on max using Santa we see

226
00:09:02,810 --> 00:09:06,739
this pop up and it looks really scary

227
00:09:04,370 --> 00:09:09,019
and there's a lot of information not all

228
00:09:06,740 --> 00:09:10,490
of it I understand and my only button is

229
00:09:09,019 --> 00:09:12,140
to click ignore that's not a great

230
00:09:10,490 --> 00:09:14,720
experience we didn't build that piece

231
00:09:12,140 --> 00:09:17,180
and the next thing that happens is our

232
00:09:14,720 --> 00:09:20,120
friendly slack security bot says hey

233
00:09:17,180 --> 00:09:21,529
said words we noticed that something was

234
00:09:20,120 --> 00:09:22,910
blocked from running on your machine our

235
00:09:21,529 --> 00:09:26,060
goal is to keep you safe while enabling

236
00:09:22,910 --> 00:09:28,010
you to do your job please direct any

237
00:09:26,060 --> 00:09:30,619
questions to the corporate security

238
00:09:28,010 --> 00:09:33,950
Channel but did you mean to run this

239
00:09:30,620 --> 00:09:37,070
application from this folder if yes

240
00:09:33,950 --> 00:09:40,370
then you'll be able to run it again so

241
00:09:37,070 --> 00:09:42,950
if I click yes it says ok the

242
00:09:40,370 --> 00:09:45,110
applications been added so within the

243
00:09:42,950 --> 00:09:46,310
next 30 seconds you should be able to

244
00:09:45,110 --> 00:09:48,290
run the application again if that

245
00:09:46,310 --> 00:09:50,869
doesn't work you can open up terminal

246
00:09:48,290 --> 00:09:53,060
and type in this incantation and then

247
00:09:50,870 --> 00:09:54,290
everything will work if you have any

248
00:09:53,060 --> 00:09:58,699
problems again please reach out to us

249
00:09:54,290 --> 00:10:00,230
and humans will help you and so after

250
00:09:58,700 --> 00:10:03,200
that I double click the application

251
00:10:00,230 --> 00:10:04,430
again and it opens right off so the

252
00:10:03,200 --> 00:10:07,610
amount of friction that was introduced

253
00:10:04,430 --> 00:10:09,560
here was all of about 15 seconds I saw a

254
00:10:07,610 --> 00:10:11,209
scary message but at the same time my

255
00:10:09,560 --> 00:10:13,099
friend security bot was reaching out to

256
00:10:11,209 --> 00:10:16,729
me to see if this is something that I

257
00:10:13,100 --> 00:10:18,200
really wanted to do and as soon as I

258
00:10:16,730 --> 00:10:20,000
clicked it it was just about ready for

259
00:10:18,200 --> 00:10:21,020
me to by the time I could switch back

260
00:10:20,000 --> 00:10:23,209
and find where it put the application

261
00:10:21,020 --> 00:10:27,199
when I double clicked it it was ready to

262
00:10:23,209 --> 00:10:30,010
run again so this this started from

263
00:10:27,199 --> 00:10:38,529
humble beginnings so here's here's the

264
00:10:30,010 --> 00:10:42,709
original approach is we we started with

265
00:10:38,529 --> 00:10:45,290
just having people see this pop-up and

266
00:10:42,709 --> 00:10:47,180
then take a screenshot and then also

267
00:10:45,290 --> 00:10:49,399
copy and paste out the sha-256 hash

268
00:10:47,180 --> 00:10:51,380
because it'd be a pain for us to type it

269
00:10:49,399 --> 00:10:52,610
in from a screenshot and post it in a

270
00:10:51,380 --> 00:10:53,930
slack Channel and say hey I'm trying to

271
00:10:52,610 --> 00:10:56,120
run this can you please allow it and

272
00:10:53,930 --> 00:10:57,149
then you know we'll do the threat

273
00:10:56,120 --> 00:10:59,370
intelligence by hand

274
00:10:57,149 --> 00:11:03,149
and then we'll get it in there and so

275
00:10:59,370 --> 00:11:05,939
you can see puts the hash in and so T so

276
00:11:03,149 --> 00:11:08,879
Klee there went through and said yep

277
00:11:05,939 --> 00:11:11,550
that looks that looks good I've added it

278
00:11:08,879 --> 00:11:13,110
to the list so now you can type open up

279
00:11:11,550 --> 00:11:14,878
terminal and type in the sinc command

280
00:11:13,110 --> 00:11:16,139
which everyone knows how to do because

281
00:11:14,879 --> 00:11:19,740
they're doing it all the time every time

282
00:11:16,139 --> 00:11:23,040
they run new software and and then

283
00:11:19,740 --> 00:11:24,180
they're good to go and somehow we didn't

284
00:11:23,040 --> 00:11:25,860
lose our jobs for doing this because

285
00:11:24,180 --> 00:11:27,449
because everyone was so supportive I

286
00:11:25,860 --> 00:11:28,769
don't recommend starting with this

287
00:11:27,449 --> 00:11:31,469
approach if you can start with the

288
00:11:28,769 --> 00:11:35,189
automated approach that's that's

289
00:11:31,470 --> 00:11:36,930
probably a better option so let me tell

290
00:11:35,189 --> 00:11:39,899
you a little bit about the technologies

291
00:11:36,930 --> 00:11:43,769
that we use for explicit allow so you've

292
00:11:39,899 --> 00:11:45,540
seen Mac OS already and on Mac OS who we

293
00:11:43,769 --> 00:11:48,329
used Google's open source project Santa

294
00:11:45,540 --> 00:11:51,779
and we've been using it for a really

295
00:11:48,329 --> 00:11:54,029
long time relatively speaking when it

296
00:11:51,779 --> 00:11:56,430
was released it was released as a client

297
00:11:54,029 --> 00:11:58,620
with no server and there were no servers

298
00:11:56,430 --> 00:12:01,439
available for it eventually there was an

299
00:11:58,620 --> 00:12:03,990
open source software called central that

300
00:12:01,439 --> 00:12:05,759
served as a back-end for this so it

301
00:12:03,990 --> 00:12:07,679
would actually at least maintain the

302
00:12:05,759 --> 00:12:09,629
list of allowed software so that you

303
00:12:07,679 --> 00:12:11,220
could centralize that without that you

304
00:12:09,629 --> 00:12:13,920
would have to figure out a way to put

305
00:12:11,220 --> 00:12:15,600
the list of allowed software on every

306
00:12:13,920 --> 00:12:19,620
single person's workstation as well as

307
00:12:15,600 --> 00:12:20,850
the Santa client so we did that for a

308
00:12:19,620 --> 00:12:22,769
little while it was back down

309
00:12:20,850 --> 00:12:24,569
elasticsearch my experience of

310
00:12:22,769 --> 00:12:27,540
elasticsearch is it's hard to keep it

311
00:12:24,569 --> 00:12:29,009
healthy and running smoothly and that

312
00:12:27,540 --> 00:12:31,439
was the experience in this case at least

313
00:12:29,009 --> 00:12:33,149
so we decided to throw it out because of

314
00:12:31,439 --> 00:12:36,660
its poor performance and build something

315
00:12:33,149 --> 00:12:38,339
entirely homegrown that's API driven

316
00:12:36,660 --> 00:12:41,009
entirely serverless

317
00:12:38,339 --> 00:12:43,230
that and it's actually a really simple

318
00:12:41,009 --> 00:12:44,970
bit of software it just it serves up the

319
00:12:43,230 --> 00:12:47,970
list of allowed software to everyone who

320
00:12:44,970 --> 00:12:49,860
asks for it and you can add new things

321
00:12:47,970 --> 00:12:52,529
to that software and then it can also

322
00:12:49,860 --> 00:12:55,470
trigger the automation to say hey this

323
00:12:52,529 --> 00:12:57,749
person saw this block event let them

324
00:12:55,470 --> 00:13:02,759
know that ask them if they meant to run

325
00:12:57,749 --> 00:13:04,470
this software so since that was such a

326
00:13:02,759 --> 00:13:06,899
smashing success and we rolled it out

327
00:13:04,470 --> 00:13:10,970
across all of DL which is about maybe

328
00:13:06,899 --> 00:13:12,500
800 max we decided to

329
00:13:10,970 --> 00:13:13,910
on Windows not because we have a lot of

330
00:13:12,500 --> 00:13:16,790
Windows we probably have about 10

331
00:13:13,910 --> 00:13:18,410
Windows workstations but because Windows

332
00:13:16,790 --> 00:13:20,269
is a target and we do have 10 Windows

333
00:13:18,410 --> 00:13:23,569
workstations so it seems like a problem

334
00:13:20,269 --> 00:13:25,160
to solve so instead of going for

335
00:13:23,569 --> 00:13:27,740
commercial software or even open source

336
00:13:25,160 --> 00:13:29,689
software we looked within Windows 2 app

337
00:13:27,740 --> 00:13:33,350
Locker which my experience in the past

338
00:13:29,689 --> 00:13:34,790
with app Locker has been I don't want to

339
00:13:33,350 --> 00:13:36,980
say mixed because I think that over

340
00:13:34,790 --> 00:13:39,110
sells the the positivity it was pretty

341
00:13:36,980 --> 00:13:41,689
terrible lockers really hard to manage

342
00:13:39,110 --> 00:13:44,720
and historically has required an Active

343
00:13:41,689 --> 00:13:47,420
Directory so for one of my engineers I

344
00:13:44,720 --> 00:13:50,660
posed this I posed this traveling I want

345
00:13:47,420 --> 00:13:53,060
to use app Locker to enforce explicit

346
00:13:50,660 --> 00:13:54,529
allow but we don't have an active

347
00:13:53,060 --> 00:13:58,040
directory we don't want an active

348
00:13:54,529 --> 00:13:59,569
directory what can we do and also I want

349
00:13:58,040 --> 00:14:01,339
it to be the exact same workflow that I

350
00:13:59,569 --> 00:14:03,920
showed you in that flowchart I want it

351
00:14:01,339 --> 00:14:05,569
to only be about 15 seconds for someone

352
00:14:03,920 --> 00:14:08,810
to self remediate if they get something

353
00:14:05,569 --> 00:14:11,360
blocked that they need to run to operate

354
00:14:08,810 --> 00:14:14,508
the business so again was entirely

355
00:14:11,360 --> 00:14:17,389
homegrown entirely serverless no active

356
00:14:14,509 --> 00:14:19,939
directory required and basically it's a

357
00:14:17,389 --> 00:14:21,500
small agent that looks for looks through

358
00:14:19,939 --> 00:14:24,500
the windows event logs for app Locker

359
00:14:21,500 --> 00:14:28,309
blocks and then without even using slack

360
00:14:24,500 --> 00:14:30,019
it just pops up a dialog and says did

361
00:14:28,309 --> 00:14:31,339
you mean to run this yes or no and we've

362
00:14:30,019 --> 00:14:32,930
already stand it against threat

363
00:14:31,339 --> 00:14:36,829
intelligence like virustotal thread

364
00:14:32,930 --> 00:14:39,529
exchange cisco tip and seeing that it

365
00:14:36,829 --> 00:14:42,229
there are known it's not known as

366
00:14:39,529 --> 00:14:43,759
malicious and so we pop this up and say

367
00:14:42,230 --> 00:14:46,009
did you mean to run this they say yes

368
00:14:43,759 --> 00:14:48,290
and they say ok it'll take about 30

369
00:14:46,009 --> 00:14:49,879
seconds and then you'll be ready to go

370
00:14:48,290 --> 00:14:52,699
so here's here's an example so this is

371
00:14:49,879 --> 00:14:54,649
like on the previous layer there's blue

372
00:14:52,699 --> 00:14:57,319
this blue thing is all you get with a

373
00:14:54,649 --> 00:14:58,790
blocker by default so completely useless

374
00:14:57,319 --> 00:15:01,069
not even a way to say hey this is the

375
00:14:58,790 --> 00:15:03,680
thing I was trying to run so we created

376
00:15:01,069 --> 00:15:05,319
a more verbose error message in case

377
00:15:03,680 --> 00:15:08,479
people need to screenshot it to us and

378
00:15:05,319 --> 00:15:09,860
and share it with us so we say hey did

379
00:15:08,480 --> 00:15:11,959
you intend to run this and then if they

380
00:15:09,860 --> 00:15:13,550
click yes it says hey please wait 2 to 5

381
00:15:11,959 --> 00:15:15,619
minutes it's usually much faster than

382
00:15:13,550 --> 00:15:18,829
that and then they can run the software

383
00:15:15,620 --> 00:15:20,329
again so this is essentially the this

384
00:15:18,829 --> 00:15:23,479
small agent just shells out to

385
00:15:20,329 --> 00:15:24,739
PowerShell and interacts with local

386
00:15:23,480 --> 00:15:27,080
policy objects instead of using

387
00:15:24,740 --> 00:15:28,700
your policy Orchestrator it just changes

388
00:15:27,080 --> 00:15:30,589
the local policies for AppLocker so it

389
00:15:28,700 --> 00:15:33,080
converts what we have in our database in

390
00:15:30,589 --> 00:15:35,720
AWS for what the allowed Lister's into

391
00:15:33,080 --> 00:15:38,240
the format that the policy is looking

392
00:15:35,720 --> 00:15:43,880
for and just pushes it in every every 2

393
00:15:38,240 --> 00:15:45,110
or so minutes so Chrome OS Chrome OS is

394
00:15:43,880 --> 00:15:46,700
a good place to start if you're solving

395
00:15:45,110 --> 00:15:50,000
problem if you're solving security

396
00:15:46,700 --> 00:15:51,110
problems on Chrome OS you have you don't

397
00:15:50,000 --> 00:15:53,390
have a lot of other things that you need

398
00:15:51,110 --> 00:15:55,339
to be doing clearly because Chrome OS is

399
00:15:53,390 --> 00:16:00,279
such a hardened platform already and so

400
00:15:55,339 --> 00:16:03,020
we are about 20% Chrome OS at duo and

401
00:16:00,279 --> 00:16:06,050
they're they're managed by G suite and

402
00:16:03,020 --> 00:16:09,350
they're enforced they enforce trusted

403
00:16:06,050 --> 00:16:11,689
dude but with G suite for Chrome OS and

404
00:16:09,350 --> 00:16:14,120
also all of our chrome browsers we

405
00:16:11,690 --> 00:16:16,190
enforce explicit allow for plugins like

406
00:16:14,120 --> 00:16:18,830
Java and flash and basically none of

407
00:16:16,190 --> 00:16:20,720
those as well as Chrome extensions and

408
00:16:18,830 --> 00:16:23,480
then on Chromebooks as well because you

409
00:16:20,720 --> 00:16:25,730
can run Android apps within Chrome we

410
00:16:23,480 --> 00:16:27,470
also enforce explicit allow for Android

411
00:16:25,730 --> 00:16:31,339
apps so we manage all of that through

412
00:16:27,470 --> 00:16:33,200
the G suite console and it's manual for

413
00:16:31,339 --> 00:16:35,450
for plugins because there are very few

414
00:16:33,200 --> 00:16:36,470
that people are asking for and and for

415
00:16:35,450 --> 00:16:38,390
Android apps as well because honestly

416
00:16:36,470 --> 00:16:41,600
although there's a huge Android app

417
00:16:38,390 --> 00:16:43,880
ecosystem at do a very very few people

418
00:16:41,600 --> 00:16:47,089
are actually asking for us to add new

419
00:16:43,880 --> 00:16:49,100
Android apps so Chrome extensions are

420
00:16:47,089 --> 00:16:51,589
the highest volume people want a new

421
00:16:49,100 --> 00:16:55,520
Chrome extension every day and they're

422
00:16:51,589 --> 00:16:59,240
very hard to evaluate so we created a

423
00:16:55,520 --> 00:17:03,199
tool to evaluate in a consistent way

424
00:16:59,240 --> 00:17:04,520
Chrome extensions the team who's adding

425
00:17:03,200 --> 00:17:06,860
the Chrome extensions to our allowed

426
00:17:04,520 --> 00:17:08,389
list is our security operations team

427
00:17:06,859 --> 00:17:10,399
someone sent says I want this Chrome

428
00:17:08,390 --> 00:17:12,050
extension they email the security

429
00:17:10,400 --> 00:17:15,079
operations team they say hey I want to

430
00:17:12,050 --> 00:17:17,569
run Ebates so I can get all of that

431
00:17:15,079 --> 00:17:19,459
money back and so the security

432
00:17:17,569 --> 00:17:20,928
operations team gets that and they can

433
00:17:19,459 --> 00:17:22,760
see it in the Chrome Web Store but

434
00:17:20,929 --> 00:17:26,839
that's really all they had before we

435
00:17:22,760 --> 00:17:28,160
built this tool Chrome extensions are

436
00:17:26,839 --> 00:17:30,770
written in JavaScript our security

437
00:17:28,160 --> 00:17:33,230
operations team isn't necessarily Java

438
00:17:30,770 --> 00:17:35,030
Script experts but even if they were we

439
00:17:33,230 --> 00:17:37,520
wouldn't really want them spending all

440
00:17:35,030 --> 00:17:38,600
of their days like taking apart a

441
00:17:37,520 --> 00:17:41,059
JavaScript Comics

442
00:17:38,600 --> 00:17:43,580
to see what it's doing like the the

443
00:17:41,059 --> 00:17:46,070
permissions are kind of easily available

444
00:17:43,580 --> 00:17:47,840
in a JSON file where you could look

445
00:17:46,070 --> 00:17:50,899
through and see okay well these this URL

446
00:17:47,840 --> 00:17:52,639
means that it needs access to everything

447
00:17:50,900 --> 00:17:56,210
and this URL also means that it needs

448
00:17:52,640 --> 00:17:57,710
access to everything but that's that's a

449
00:17:56,210 --> 00:17:59,299
complicated process but even if everyone

450
00:17:57,710 --> 00:18:00,530
was an expert at doing all of that and

451
00:17:59,299 --> 00:18:02,120
it didn't take them that much time

452
00:18:00,530 --> 00:18:04,970
because they're all humans they're all

453
00:18:02,120 --> 00:18:07,360
going to do it inconsistently so we

454
00:18:04,970 --> 00:18:11,120
wanted to build a tool that allowed our

455
00:18:07,360 --> 00:18:13,729
security operations team to have a

456
00:18:11,120 --> 00:18:16,129
consistent and quantifiable reason for

457
00:18:13,730 --> 00:18:17,990
either approving or denying Chrome

458
00:18:16,130 --> 00:18:21,289
extensions when people asked for them to

459
00:18:17,990 --> 00:18:25,070
be allowed so again we built this

460
00:18:21,289 --> 00:18:29,600
entirely serverless on AWS lambda it's a

461
00:18:25,070 --> 00:18:31,309
react.js front-end and when we started

462
00:18:29,600 --> 00:18:34,070
we decided well we could we could scan

463
00:18:31,309 --> 00:18:35,780
Chrome extensions one at a time or we

464
00:18:34,070 --> 00:18:36,520
could just scan them all right all at

465
00:18:35,780 --> 00:18:38,928
once

466
00:18:36,520 --> 00:18:39,950
and so we said well how many chrome

467
00:18:38,929 --> 00:18:42,020
extensions is that there's about a

468
00:18:39,950 --> 00:18:44,570
hundred and sixty thousand chrome

469
00:18:42,020 --> 00:18:46,850
extensions in the chrome webstore so we

470
00:18:44,570 --> 00:18:48,500
called up our friends at AWS and said

471
00:18:46,850 --> 00:18:51,500
how many lambdas can we run it once

472
00:18:48,500 --> 00:18:53,480
again and we had a few discussions with

473
00:18:51,500 --> 00:18:55,940
them and then finally we hit the Go

474
00:18:53,480 --> 00:18:59,150
button and we scanned all 160,000 chrome

475
00:18:55,940 --> 00:19:01,490
extensions and five minutes later the

476
00:18:59,150 --> 00:19:04,250
tasks had completed and we're like well

477
00:19:01,490 --> 00:19:06,350
what broke but actually we just scanned

478
00:19:04,250 --> 00:19:09,380
the entire Chrome Web Store in five

479
00:19:06,350 --> 00:19:11,689
minutes and so since we've already

480
00:19:09,380 --> 00:19:12,980
scanned all of the extensions we thought

481
00:19:11,690 --> 00:19:15,590
well why don't we just let everyone else

482
00:19:12,980 --> 00:19:18,890
see the reports too so we made this a

483
00:19:15,590 --> 00:19:21,770
free SAS tool that people can use it's

484
00:19:18,890 --> 00:19:23,990
not open source it wouldn't necessarily

485
00:19:21,770 --> 00:19:26,120
be a good idea for us to open source it

486
00:19:23,990 --> 00:19:28,250
it's kind of aggressive against the

487
00:19:26,120 --> 00:19:30,918
Chrome Web Store there aren't some API

488
00:19:28,250 --> 00:19:32,809
so we've done some other things

489
00:19:30,919 --> 00:19:34,070
Google's cool with that but I don't

490
00:19:32,809 --> 00:19:35,600
think they would be cool with us open

491
00:19:34,070 --> 00:19:38,960
sourcing this and saying hey why doesn't

492
00:19:35,600 --> 00:19:41,799
everyone scan all 160,000 Chrome

493
00:19:38,960 --> 00:19:47,240
extensions in the Chrome Web Store every

494
00:19:41,799 --> 00:19:49,010
three hours so we have a closed source

495
00:19:47,240 --> 00:19:51,650
but it is API first because we wrote it

496
00:19:49,010 --> 00:19:52,429
in react so if you don't like our tool

497
00:19:51,650 --> 00:19:55,669
if you don't like

498
00:19:52,429 --> 00:19:56,629
color scheme we have API Docs available

499
00:19:55,669 --> 00:19:58,759
as well so this is something that's

500
00:19:56,629 --> 00:20:01,629
available to you today you can go to

501
00:19:58,759 --> 00:20:06,769
cracks cavae durão which is c RX c AV

502
00:20:01,629 --> 00:20:08,629
8000 r io and you can get started so let

503
00:20:06,769 --> 00:20:10,940
me show you just one of the things that

504
00:20:08,629 --> 00:20:13,549
go excavator does so take for example a

505
00:20:10,940 --> 00:20:19,369
Chrome extension like LastPass we use

506
00:20:13,549 --> 00:20:22,369
LastPass at duo I'm I'm a moderately big

507
00:20:19,369 --> 00:20:23,658
fan of LastPass it's an important tool

508
00:20:22,369 --> 00:20:25,459
password vaults are an important tool

509
00:20:23,659 --> 00:20:28,220
and they should exist as Chrome

510
00:20:25,460 --> 00:20:30,019
extensions that being said for a

511
00:20:28,220 --> 00:20:31,789
password vault to exist as a Chrome

512
00:20:30,019 --> 00:20:33,009
extension it's going to need to be a

513
00:20:31,789 --> 00:20:37,549
little bit risky

514
00:20:33,009 --> 00:20:39,230
so we scanned it with our excavator and

515
00:20:37,549 --> 00:20:40,340
so at the top you can kind of see okay

516
00:20:39,230 --> 00:20:42,289
we pulled some stuff out of the Chrome

517
00:20:40,340 --> 00:20:44,809
Web Store this is convenient to have at

518
00:20:42,289 --> 00:20:46,549
the top here's the picture here's here's

519
00:20:44,809 --> 00:20:48,168
the ratings and things like that nothing

520
00:20:46,549 --> 00:20:50,539
revolutionary but down below you can see

521
00:20:48,169 --> 00:20:52,100
how we've quantified the risk of the

522
00:20:50,539 --> 00:20:53,360
Chrome extension and grouped it into

523
00:20:52,100 --> 00:20:55,369
certain categories and I'll kind of take

524
00:20:53,360 --> 00:20:57,379
you through some of those categories so

525
00:20:55,369 --> 00:20:59,779
at the very top you can see that since

526
00:20:57,379 --> 00:21:01,519
we're standing the chrome webstore every

527
00:20:59,779 --> 00:21:03,619
three hours we know in the versions

528
00:21:01,519 --> 00:21:05,210
change and we can actually plot because

529
00:21:03,619 --> 00:21:08,059
we're quantifying the risk as a number

530
00:21:05,210 --> 00:21:10,610
we can plot the change in risk over time

531
00:21:08,059 --> 00:21:12,710
so you can see after the first version

532
00:21:10,610 --> 00:21:15,590
and there's a funny story there I have

533
00:21:12,710 --> 00:21:18,499
two the first version that we scanned

534
00:21:15,590 --> 00:21:22,129
last passes risk or dropped quite a bit

535
00:21:18,499 --> 00:21:23,450
and so moving on down the page you can

536
00:21:22,129 --> 00:21:24,830
see the first thing that we're most

537
00:21:23,450 --> 00:21:27,499
interested in when it comes to Chrome

538
00:21:24,830 --> 00:21:31,330
extension risk which is permissions so

539
00:21:27,499 --> 00:21:31,330
we list out all of the permissions that

540
00:21:31,690 --> 00:21:36,200
all of the permissions of the Chrome

541
00:21:33,590 --> 00:21:38,869
extension asks for and we've quantified

542
00:21:36,200 --> 00:21:41,119
a risk value this this isn't super

543
00:21:38,869 --> 00:21:43,158
scientific we sat down with Pizza and

544
00:21:41,119 --> 00:21:45,320
determined what are the worst

545
00:21:43,159 --> 00:21:47,240
permissions in terms of exposure that a

546
00:21:45,320 --> 00:21:51,590
chrome extension could ask for and then

547
00:21:47,240 --> 00:21:53,710
which ones are are not as scary Chrome

548
00:21:51,590 --> 00:21:56,029
extensions also have a principle of

549
00:21:53,710 --> 00:21:57,679
optional permissions and we treat those

550
00:21:56,029 --> 00:21:59,629
exactly the same if you're doing

551
00:21:57,679 --> 00:22:01,429
explicit allow and you're allowing a

552
00:21:59,629 --> 00:22:02,779
Chrome extension then you have allowed

553
00:22:01,429 --> 00:22:04,609
the optional permissions and whether

554
00:22:02,779 --> 00:22:06,500
whether or not your end-users are asked

555
00:22:04,609 --> 00:22:08,000
to allow those later

556
00:22:06,500 --> 00:22:09,830
as their element because everyone will

557
00:22:08,000 --> 00:22:12,230
say yes I want to do whatever it is that

558
00:22:09,830 --> 00:22:17,210
you're asking me to do so moving down

559
00:22:12,230 --> 00:22:18,350
the page you'll see this retired JSF

560
00:22:17,210 --> 00:22:21,230
owner ability scan if you haven't used

561
00:22:18,350 --> 00:22:22,879
retire before it scans through

562
00:22:21,230 --> 00:22:24,110
JavaScript projects and looks for

563
00:22:22,880 --> 00:22:26,360
third-party libraries with known

564
00:22:24,110 --> 00:22:29,000
vulnerabilities so it's just really

565
00:22:26,360 --> 00:22:30,860
simple static analysis and we just put

566
00:22:29,000 --> 00:22:33,980
it out on the page and assign risk value

567
00:22:30,860 --> 00:22:36,860
to these as well I have the caveat here

568
00:22:33,980 --> 00:22:39,200
this is not in LastPass now this is that

569
00:22:36,860 --> 00:22:40,699
first version in this line graph where

570
00:22:39,200 --> 00:22:42,710
their risk score was higher and as soon

571
00:22:40,700 --> 00:22:44,420
as we built this tool of course the

572
00:22:42,710 --> 00:22:46,940
first extension we scanned was LastPass

573
00:22:44,420 --> 00:22:48,560
and we said hey did you know that you

574
00:22:46,940 --> 00:22:50,390
have these three vulnerabilities from

575
00:22:48,560 --> 00:22:52,310
your third-party libraries and your

576
00:22:50,390 --> 00:22:54,650
Chrome extension and they said we did

577
00:22:52,310 --> 00:22:57,080
know that we don't use those portions

578
00:22:54,650 --> 00:22:59,930
the vulnerable portions of jQuery and

579
00:22:57,080 --> 00:23:02,540
jQuery UI dialog so technically we're

580
00:22:59,930 --> 00:23:04,010
okay but we will patch this and so we

581
00:23:02,540 --> 00:23:05,990
saw as soon as the next version came out

582
00:23:04,010 --> 00:23:07,820
they did patch it and now it's forever

583
00:23:05,990 --> 00:23:09,830
saved in history and corrects comater

584
00:23:07,820 --> 00:23:11,450
the next thing we look at is the content

585
00:23:09,830 --> 00:23:14,149
security policy and that can restrict

586
00:23:11,450 --> 00:23:15,230
how the Chrome extension can talk to

587
00:23:14,150 --> 00:23:17,390
remote sites for a number of purposes

588
00:23:15,230 --> 00:23:19,580
but the most interesting one is the

589
00:23:17,390 --> 00:23:20,900
connect source because this can kind of

590
00:23:19,580 --> 00:23:22,639
tell you is this Chrome extension

591
00:23:20,900 --> 00:23:25,160
standalone or does it connect with a

592
00:23:22,640 --> 00:23:27,560
sass tool also if you've set up an

593
00:23:25,160 --> 00:23:29,450
organizational account which is free you

594
00:23:27,560 --> 00:23:31,429
can add your virustotal and facebook

595
00:23:29,450 --> 00:23:33,290
thread exchange api keys and you can

596
00:23:31,430 --> 00:23:35,300
scan all of the URLs in the content

597
00:23:33,290 --> 00:23:38,210
security policy to see if they're known

598
00:23:35,300 --> 00:23:40,639
bad and you can also link to SSL labs

599
00:23:38,210 --> 00:23:44,060
reports so if it is SAS and you want to

600
00:23:40,640 --> 00:23:45,770
say ok well like the host this is

601
00:23:44,060 --> 00:23:47,780
probably connecting with is LastPass

602
00:23:45,770 --> 00:23:50,389
comm so let's view the SSL lab score and

603
00:23:47,780 --> 00:23:52,160
make sure that it's you know a plus or

604
00:23:50,390 --> 00:23:53,420
however we want our password vault

605
00:23:52,160 --> 00:23:57,200
communicating with the password vault

606
00:23:53,420 --> 00:23:58,610
server moving down the page it gets a

607
00:23:57,200 --> 00:24:01,340
little bit more technical the further we

608
00:23:58,610 --> 00:24:03,050
go down we look for a list of all the

609
00:24:01,340 --> 00:24:07,040
other possible external communications

610
00:24:03,050 --> 00:24:09,740
even if they're not listed in in the

611
00:24:07,040 --> 00:24:11,330
content security policy the current

612
00:24:09,740 --> 00:24:12,800
version and by the way I should say this

613
00:24:11,330 --> 00:24:15,199
is very beta right now the current

614
00:24:12,800 --> 00:24:17,149
version is a simple red X that looks for

615
00:24:15,200 --> 00:24:19,570
things that look like URLs even if

616
00:24:17,150 --> 00:24:21,550
they're in the comments

617
00:24:19,570 --> 00:24:23,260
that's we'll show it there if they're

618
00:24:21,550 --> 00:24:26,590
broken apart by concatenation we won't

619
00:24:23,260 --> 00:24:28,420
catch that the next a next version

620
00:24:26,590 --> 00:24:30,189
that's coming out of excavator will

621
00:24:28,420 --> 00:24:31,420
actually do AST parsing where it will

622
00:24:30,190 --> 00:24:33,700
see what the javascript is actually

623
00:24:31,420 --> 00:24:35,590
connecting to and will replace this with

624
00:24:33,700 --> 00:24:38,350
something a little bit better below you

625
00:24:35,590 --> 00:24:42,459
can look at the manifest and all of its

626
00:24:38,350 --> 00:24:44,260
glory you can also see if the Chrome

627
00:24:42,460 --> 00:24:46,510
extension is including external

628
00:24:44,260 --> 00:24:49,420
javascript files instead of actually

629
00:24:46,510 --> 00:24:51,040
packaging those javascript files in and

630
00:24:49,420 --> 00:24:53,770
then we can also be entry points and

631
00:24:51,040 --> 00:24:54,879
dangerous functions below that which I

632
00:24:53,770 --> 00:24:56,650
apparently I don't have a screenshot of

633
00:24:54,880 --> 00:24:58,540
we show everything that the Chrome Web

634
00:24:56,650 --> 00:25:00,460
Store says is a related Chrome extension

635
00:24:58,540 --> 00:25:02,740
and again if you've created an

636
00:25:00,460 --> 00:25:06,040
organizational account and you have an

637
00:25:02,740 --> 00:25:07,330
explicit allow list already then not

638
00:25:06,040 --> 00:25:08,830
only will we show you the list of

639
00:25:07,330 --> 00:25:10,330
related extensions but we'll

640
00:25:08,830 --> 00:25:11,889
cross-reference that against the

641
00:25:10,330 --> 00:25:15,909
extensions that you've already allowed

642
00:25:11,890 --> 00:25:17,260
so that means that if someone says hey I

643
00:25:15,910 --> 00:25:18,430
want to run LastPass you can actually

644
00:25:17,260 --> 00:25:19,660
look through and say well we don't have

645
00:25:18,430 --> 00:25:22,600
LastPass yeah but look we have one

646
00:25:19,660 --> 00:25:24,070
password we already have that exposure

647
00:25:22,600 --> 00:25:29,080
in our organization could you use one

648
00:25:24,070 --> 00:25:30,520
password instead of LastPass so our

649
00:25:29,080 --> 00:25:32,260
excavator if you set up an

650
00:25:30,520 --> 00:25:34,090
organizational account you can maintain

651
00:25:32,260 --> 00:25:35,230
your list of allowed Chrome extensions

652
00:25:34,090 --> 00:25:37,270
so you can see if something has been

653
00:25:35,230 --> 00:25:38,650
allowed or if it hasn't and then

654
00:25:37,270 --> 00:25:40,510
cross-reference it with the similar

655
00:25:38,650 --> 00:25:42,790
extensions you can enter your virustotal

656
00:25:40,510 --> 00:25:44,260
and facebook thread exchange keys to and

657
00:25:42,790 --> 00:25:46,840
enrich the content security policy

658
00:25:44,260 --> 00:25:49,180
content you can also deploy a Chrome

659
00:25:46,840 --> 00:25:52,629
extension to every device in your fleet

660
00:25:49,180 --> 00:25:55,570
whether they're on Linux Mac Windows or

661
00:25:52,630 --> 00:25:56,650
Chrome OS and collect all of the Chrome

662
00:25:55,570 --> 00:25:58,960
extensions that they're currently

663
00:25:56,650 --> 00:26:01,000
running this is useful whether or not

664
00:25:58,960 --> 00:26:02,920
you do explicit allow if you don't do

665
00:26:01,000 --> 00:26:04,570
explicit allow this is a great first

666
00:26:02,920 --> 00:26:06,520
step to say what Chrome extensions are

667
00:26:04,570 --> 00:26:07,990
in use today and then you can start from

668
00:26:06,520 --> 00:26:10,870
there and say which of those are risky

669
00:26:07,990 --> 00:26:13,420
and then bill build your allowed list if

670
00:26:10,870 --> 00:26:15,669
you do explicit allow then you can see

671
00:26:13,420 --> 00:26:18,280
what's the popularity like 500 people

672
00:26:15,670 --> 00:26:19,630
use this extension only one person uses

673
00:26:18,280 --> 00:26:21,280
this extension and it looks a little bit

674
00:26:19,630 --> 00:26:24,490
risky maybe we should actually get rid

675
00:26:21,280 --> 00:26:26,050
of it but also in either case if you

676
00:26:24,490 --> 00:26:27,610
wake up in the morning and read that a

677
00:26:26,050 --> 00:26:30,100
very popular Chrome extension like

678
00:26:27,610 --> 00:26:32,379
stylish was solves to a malicious

679
00:26:30,100 --> 00:26:34,270
third-party and now it was stealing data

680
00:26:32,380 --> 00:26:37,540
you can actually find out your exposure

681
00:26:34,270 --> 00:26:40,420
you can say actually we have stylish

682
00:26:37,540 --> 00:26:44,020
installed on these four workstations so

683
00:26:40,420 --> 00:26:45,790
let's go talk to those people you can do

684
00:26:44,020 --> 00:26:48,430
this you can do this with other tools at

685
00:26:45,790 --> 00:26:49,870
CCM will tell you what Chrome extensions

686
00:26:48,430 --> 00:26:51,940
are installed Jeff will tell you what

687
00:26:49,870 --> 00:26:53,500
Chrome extensions are installed OS query

688
00:26:51,940 --> 00:26:55,570
will tell you what Chrome extensions are

689
00:26:53,500 --> 00:26:58,570
installed we built this because we have

690
00:26:55,570 --> 00:27:00,639
we have Chromebooks but also this is a

691
00:26:58,570 --> 00:27:04,389
really simple way to deploy this to a

692
00:27:00,640 --> 00:27:06,400
large fleet of various systems like of

693
00:27:04,390 --> 00:27:08,230
various operating systems and get a

694
00:27:06,400 --> 00:27:11,670
complete list across your entire fleet

695
00:27:08,230 --> 00:27:11,670
of what Chrome extensions are in use

696
00:27:12,660 --> 00:27:16,990
let's see

697
00:27:14,410 --> 00:27:19,960
you can also so if you have if you have

698
00:27:16,990 --> 00:27:22,480
your list of either allowed Chrome

699
00:27:19,960 --> 00:27:23,950
extensions or your list of all of the

700
00:27:22,480 --> 00:27:26,410
Chrome extensions that are run from the

701
00:27:23,950 --> 00:27:28,360
gatherer fleet will also sort those for

702
00:27:26,410 --> 00:27:30,700
you by highest risk Chrome extensions

703
00:27:28,360 --> 00:27:32,919
and most recently updated Chrome

704
00:27:30,700 --> 00:27:37,060
extensions with whatever the Delta is to

705
00:27:32,920 --> 00:27:39,400
the risk score and finally if if you

706
00:27:37,060 --> 00:27:40,629
have explicit allow enabled will show

707
00:27:39,400 --> 00:27:42,460
you which Chrome extensions you have

708
00:27:40,630 --> 00:27:44,050
explicitly allowed that literally no one

709
00:27:42,460 --> 00:27:48,070
is running so you can remove them from

710
00:27:44,050 --> 00:27:49,450
your from your exposure so that's

711
00:27:48,070 --> 00:27:51,070
amazing but why is it in this

712
00:27:49,450 --> 00:27:53,610
presentation everything is about my

713
00:27:51,070 --> 00:27:56,200
winning formula of how it is support

714
00:27:53,610 --> 00:27:58,959
explicit allow right so we built that

715
00:27:56,200 --> 00:28:00,190
too and so the correct screener gathered

716
00:27:58,960 --> 00:28:02,320
a Chrome extension the one that

717
00:28:00,190 --> 00:28:04,600
inventories your Chrome extensions has

718
00:28:02,320 --> 00:28:07,419
another feature so say I want to install

719
00:28:04,600 --> 00:28:09,820
the emoji unicorn theme new tab which

720
00:28:07,420 --> 00:28:11,800
sounds totally legit I go to the Chrome

721
00:28:09,820 --> 00:28:13,689
Web Store and interestingly enough

722
00:28:11,800 --> 00:28:16,960
Chrome extensions can't run on the

723
00:28:13,690 --> 00:28:18,730
Chrome Web Store so I go to a Chrome Web

724
00:28:16,960 --> 00:28:21,010
Store and as I'm going there but before

725
00:28:18,730 --> 00:28:23,020
I go there I see that my history has

726
00:28:21,010 --> 00:28:24,090
been updated that I am going to the

727
00:28:23,020 --> 00:28:26,620
Chrome Web Store for a Chrome extension

728
00:28:24,090 --> 00:28:28,929
that has not yet been explicitly allowed

729
00:28:26,620 --> 00:28:30,909
and so we pop up this notification that

730
00:28:28,930 --> 00:28:32,770
says hey you're not you're about to see

731
00:28:30,910 --> 00:28:34,330
a page and you're not going to be able

732
00:28:32,770 --> 00:28:37,900
to install the extension that's on that

733
00:28:34,330 --> 00:28:41,590
page if I want to install it I can click

734
00:28:37,900 --> 00:28:43,300
the the pop-up and I can go in and enter

735
00:28:41,590 --> 00:28:46,269
my business justification to say hey I

736
00:28:43,300 --> 00:28:48,279
want this emoji unicorn new tab

737
00:28:46,269 --> 00:28:52,989
theme because it looks totally awesome

738
00:28:48,279 --> 00:28:54,729
and hit submit and that's okay well

739
00:28:52,989 --> 00:28:57,309
you'll be notified so it's not not quite

740
00:28:54,729 --> 00:28:59,109
the 30 second remediation yeah but then

741
00:28:57,309 --> 00:29:00,849
in the corrects trader admin panel if

742
00:28:59,109 --> 00:29:03,279
you have an organizational account you

743
00:29:00,849 --> 00:29:04,658
can go in and see here's all of the list

744
00:29:03,279 --> 00:29:06,429
of the people who have requested these

745
00:29:04,659 --> 00:29:09,549
things and then you can go through and

746
00:29:06,429 --> 00:29:10,839
check approved or denied big caveat this

747
00:29:09,549 --> 00:29:13,809
looks like it does it for you

748
00:29:10,839 --> 00:29:16,479
Google has not exposed the API to manage

749
00:29:13,809 --> 00:29:18,219
the Chrome extension allow lists at this

750
00:29:16,479 --> 00:29:20,229
time so this is just for tracking

751
00:29:18,219 --> 00:29:22,389
purposes your analyst or whoever's doing

752
00:29:20,229 --> 00:29:24,519
this will still have to also go into

753
00:29:22,389 --> 00:29:29,049
Google and say hey this is actually been

754
00:29:24,519 --> 00:29:30,489
allowed so I talked a lot about software

755
00:29:29,049 --> 00:29:32,259
in terms of explicit allow but if you

756
00:29:30,489 --> 00:29:34,419
think about it as a concept there's a

757
00:29:32,259 --> 00:29:38,529
lot more things that that you can apply

758
00:29:34,419 --> 00:29:41,200
it to for example networking there's a

759
00:29:38,529 --> 00:29:44,589
lot of talk about zero trust networking

760
00:29:41,200 --> 00:29:46,959
or zero trust access duo duo's using

761
00:29:44,589 --> 00:29:48,820
that in its marketing now - but it's

762
00:29:46,959 --> 00:29:51,039
something that we a duo internally have

763
00:29:48,820 --> 00:29:53,529
been doing for the least five years now

764
00:29:51,039 --> 00:29:55,239
and so essentially the principle is this

765
00:29:53,529 --> 00:29:57,070
if you come to do his office and you

766
00:29:55,239 --> 00:29:58,959
connect to our Wi-Fi you still don't

767
00:29:57,070 --> 00:30:00,428
have access to anything honestly there

768
00:29:58,959 --> 00:30:02,769
aren't that many boxes that are on Prem

769
00:30:00,429 --> 00:30:05,259
but even even when there were more

770
00:30:02,769 --> 00:30:07,359
things on Prem like a wiki or our code

771
00:30:05,259 --> 00:30:09,009
repository things like that after you

772
00:30:07,359 --> 00:30:11,649
got on the Wi-Fi you still needed to get

773
00:30:09,009 --> 00:30:13,479
on a VPN before before you could access

774
00:30:11,649 --> 00:30:15,158
anything but moving that forward moving

775
00:30:13,479 --> 00:30:16,690
that more to the explicit allow module

776
00:30:15,159 --> 00:30:19,329
and here's the product pitch that I told

777
00:30:16,690 --> 00:30:20,649
you I wasn't going to give we have a

778
00:30:19,329 --> 00:30:23,200
product called the duo network gateway

779
00:30:20,649 --> 00:30:25,478
which we originally built internally to

780
00:30:23,200 --> 00:30:28,539
solve a problem for us and so

781
00:30:25,479 --> 00:30:30,129
essentially instead of going through the

782
00:30:28,539 --> 00:30:31,929
connecting to the VPN and then accessing

783
00:30:30,129 --> 00:30:33,309
the resources that you want you just try

784
00:30:31,929 --> 00:30:35,019
to access the resources that you want

785
00:30:33,309 --> 00:30:38,440
and if you're not signed in yet you'll

786
00:30:35,019 --> 00:30:40,239
just be asked to sign in first and in

787
00:30:38,440 --> 00:30:41,559
this process of signing in to the do

788
00:30:40,239 --> 00:30:44,649
network gateway which is just an

789
00:30:41,559 --> 00:30:45,789
authenticated reverse proxy once you

790
00:30:44,649 --> 00:30:47,349
sign in it will figure out what

791
00:30:45,789 --> 00:30:49,839
applications you're authorized to access

792
00:30:47,349 --> 00:30:54,158
and wire up the networking for only

793
00:30:49,839 --> 00:30:56,408
those so you have no net access to to

794
00:30:54,159 --> 00:30:59,340
any of the system's inside duo's network

795
00:30:56,409 --> 00:31:03,779
unless you're explicitly allowed access

796
00:30:59,340 --> 00:31:06,330
through the dual network gateway so this

797
00:31:03,779 --> 00:31:08,730
this is like our modern approach on

798
00:31:06,330 --> 00:31:13,139
networking like in the in the old old

799
00:31:08,730 --> 00:31:15,480
days network security was really easy in

800
00:31:13,139 --> 00:31:17,370
mainframes in consoles your firewall was

801
00:31:15,480 --> 00:31:20,399
made out of cinder blocks it was pretty

802
00:31:17,370 --> 00:31:22,018
simple but as people wanted to start

803
00:31:20,399 --> 00:31:25,080
working on the road and we got to client

804
00:31:22,019 --> 00:31:27,090
server and then cloud and mobile it's

805
00:31:25,080 --> 00:31:30,689
really hard to put a firewall in the way

806
00:31:27,090 --> 00:31:35,158
of in a useful position that protects

807
00:31:30,690 --> 00:31:39,330
all of your assets and furthermore it's

808
00:31:35,159 --> 00:31:41,009
it's difficult to gate access to all of

809
00:31:39,330 --> 00:31:44,340
the apps that you want your users to

810
00:31:41,009 --> 00:31:46,139
access because where your user might be

811
00:31:44,340 --> 00:31:49,889
going to a cloud service from off Prem

812
00:31:46,139 --> 00:31:51,508
and so unless you have an agent on their

813
00:31:49,889 --> 00:31:54,149
workstation and maybe they're using a

814
00:31:51,509 --> 00:31:56,340
mobile device or an agent on the SAS

815
00:31:54,149 --> 00:31:58,768
service which is difficult to do unless

816
00:31:56,340 --> 00:32:01,139
it's at the time of authentication it's

817
00:31:58,769 --> 00:32:02,730
really hard to actually get into that

818
00:32:01,139 --> 00:32:06,209
conversation and have a say in the

819
00:32:02,730 --> 00:32:08,190
security the last thing that we're

820
00:32:06,210 --> 00:32:12,480
working on so this is this is just a

821
00:32:08,190 --> 00:32:15,419
look at the future for us because I'll

822
00:32:12,480 --> 00:32:17,279
be honest we're all friends here the G

823
00:32:15,419 --> 00:32:19,980
suite tenant that I use for Google Apps

824
00:32:17,279 --> 00:32:21,690
is is absolutely haunted I have more

825
00:32:19,980 --> 00:32:23,730
problems with my GC tenant than everyone

826
00:32:21,690 --> 00:32:26,840
else and there was a new feature that

827
00:32:23,730 --> 00:32:30,149
was released a while ago to allow

828
00:32:26,840 --> 00:32:31,379
explicit allow for OAuth grants and it

829
00:32:30,149 --> 00:32:33,529
has never worked in my tenant I know

830
00:32:31,379 --> 00:32:35,908
lots of people who have been able to

831
00:32:33,529 --> 00:32:39,179
work with it and just anything anything

832
00:32:35,909 --> 00:32:40,619
I try to do fails 500s and no one no one

833
00:32:39,179 --> 00:32:41,759
at Google me how to fix it what we

834
00:32:40,619 --> 00:32:43,499
finally got it fixed so we're gonna

835
00:32:41,759 --> 00:32:48,059
we're gonna get back to this but you may

836
00:32:43,499 --> 00:32:49,710
remember a while ago let me see it was

837
00:32:48,059 --> 00:32:53,789
two years ago because I was on paternity

838
00:32:49,710 --> 00:32:59,610
leave for my second son that there was

839
00:32:53,789 --> 00:33:02,549
this well male worm that affected Google

840
00:32:59,610 --> 00:33:05,668
so someone sent and like a phishing

841
00:33:02,549 --> 00:33:07,860
email to Gmail box but instead of asking

842
00:33:05,669 --> 00:33:09,690
for a username and password it presented

843
00:33:07,860 --> 00:33:12,658
them with an elf consent screen that

844
00:33:09,690 --> 00:33:13,180
just asks them to click allow to grant

845
00:33:12,659 --> 00:33:14,830
access to the

846
00:33:13,180 --> 00:33:16,960
contacts and to send mail on their

847
00:33:14,830 --> 00:33:18,490
behalf and if you have an adversarial

848
00:33:16,960 --> 00:33:23,140
mindset and you haven't heard the story

849
00:33:18,490 --> 00:33:25,600
you already know the rest once once that

850
00:33:23,140 --> 00:33:27,880
they had once this program had access to

851
00:33:25,600 --> 00:33:30,550
all of the contents it sent the same

852
00:33:27,880 --> 00:33:32,890
message to everyone else to spread more

853
00:33:30,550 --> 00:33:34,360
and more and more and maybe there was

854
00:33:32,890 --> 00:33:35,890
something malicious that was supposed to

855
00:33:34,360 --> 00:33:37,600
happen as well but it became so

856
00:33:35,890 --> 00:33:41,410
prevalent and widespread a newsworthy

857
00:33:37,600 --> 00:33:43,419
that Google was able to put a put a stop

858
00:33:41,410 --> 00:33:46,120
to it and revoke the revoke the keys to

859
00:33:43,420 --> 00:33:49,710
that client ID but it raised a really

860
00:33:46,120 --> 00:33:53,830
interesting really interesting concern

861
00:33:49,710 --> 00:33:56,050
that Olaf is a type of authentication is

862
00:33:53,830 --> 00:33:58,870
that we're not good at securing or

863
00:33:56,050 --> 00:34:00,340
teaching people how to keep secure we

864
00:33:58,870 --> 00:34:02,020
get people into the anti-phishing

865
00:34:00,340 --> 00:34:04,120
mindset when they're asked for a

866
00:34:02,020 --> 00:34:05,860
password probably and we have lots of

867
00:34:04,120 --> 00:34:07,629
great tools like two-factor

868
00:34:05,860 --> 00:34:10,000
authentication and password managers

869
00:34:07,630 --> 00:34:11,200
that only autofill on the right site but

870
00:34:10,000 --> 00:34:12,730
none of those really help you when

871
00:34:11,199 --> 00:34:14,109
you're presented with an OAuth consent

872
00:34:12,730 --> 00:34:16,690
screen for someone that you already do

873
00:34:14,110 --> 00:34:19,360
business with and like where it says

874
00:34:16,690 --> 00:34:20,770
here like Google API Explorer because I

875
00:34:19,360 --> 00:34:23,200
was trying to get a screenshot really

876
00:34:20,770 --> 00:34:25,509
fast once you access your Google account

877
00:34:23,199 --> 00:34:26,799
like when you create an OAuth app you

878
00:34:25,510 --> 00:34:28,450
can put whatever you want there you can

879
00:34:26,800 --> 00:34:31,450
put duo security there please don't do

880
00:34:28,449 --> 00:34:33,100
that our lawyers will contact you you

881
00:34:31,449 --> 00:34:34,659
can put whatever you want in that field

882
00:34:33,100 --> 00:34:37,089
and there's no real validation and look

883
00:34:34,659 --> 00:34:39,339
at the URL bar its HTTPS it's

884
00:34:37,090 --> 00:34:40,990
accounts.google.com it's all of the

885
00:34:39,340 --> 00:34:44,050
things that we tell our users to look

886
00:34:40,989 --> 00:34:45,370
for but the blue authorize button which

887
00:34:44,050 --> 00:34:48,850
I'm realizing now would have been great

888
00:34:45,370 --> 00:34:50,290
in this screenshot is something that we

889
00:34:48,850 --> 00:34:52,779
don't have people to have people

890
00:34:50,290 --> 00:34:54,759
sufficiently concerned about and so we

891
00:34:52,780 --> 00:34:57,490
want to apply explicit allow to this as

892
00:34:54,760 --> 00:35:00,220
well but again Google gives us the

893
00:34:57,490 --> 00:35:02,069
ability to block unknown olaf's grants

894
00:35:00,220 --> 00:35:04,779
but that's not a great experience so

895
00:35:02,070 --> 00:35:06,760
like many things you can solve it with a

896
00:35:04,780 --> 00:35:08,500
Chrome extension so we've created a

897
00:35:06,760 --> 00:35:10,780
Chrome extension that actually looks for

898
00:35:08,500 --> 00:35:12,850
the OAuth consent block screens so if we

899
00:35:10,780 --> 00:35:14,770
switch to explicit allow and it says hey

900
00:35:12,850 --> 00:35:16,240
sorry you tried to do this but it was

901
00:35:14,770 --> 00:35:18,280
blocked and we'll actually get in

902
00:35:16,240 --> 00:35:20,229
interesting information and send it to

903
00:35:18,280 --> 00:35:23,650
our automation so say hey this person

904
00:35:20,230 --> 00:35:24,940
tried to authorize this client ID and

905
00:35:23,650 --> 00:35:26,890
here are the Scopes that they were

906
00:35:24,940 --> 00:35:27,160
asking for and those are the kind of

907
00:35:26,890 --> 00:35:29,049
things

908
00:35:27,160 --> 00:35:30,399
can find in Google logs kind of already

909
00:35:29,050 --> 00:35:32,290
not if they're blocked but if they do

910
00:35:30,400 --> 00:35:34,360
authorize it but that's missing a key

911
00:35:32,290 --> 00:35:35,920
thing what is it

912
00:35:34,360 --> 00:35:37,720
and with OAuth that's a hard problem to

913
00:35:35,920 --> 00:35:42,760
solve because you can use a client ID in

914
00:35:37,720 --> 00:35:44,259
a number of locations so we also with

915
00:35:42,760 --> 00:35:46,570
this Chrome extension

916
00:35:44,260 --> 00:35:48,340
capture the referrer URI as well so we

917
00:35:46,570 --> 00:35:50,560
can actually see what was it that sent

918
00:35:48,340 --> 00:35:54,700
you to this consent screen to actually

919
00:35:50,560 --> 00:35:57,070
authorize access and with that we have a

920
00:35:54,700 --> 00:35:58,720
complete enough picture to start running

921
00:35:57,070 --> 00:36:01,270
cert intelligence and say okay here's

922
00:35:58,720 --> 00:36:04,899
the risk we associate with send mail on

923
00:36:01,270 --> 00:36:09,340
my behalf or view and review and edit

924
00:36:04,900 --> 00:36:11,650
all contents of Google Drive and we can

925
00:36:09,340 --> 00:36:13,360
do threat intelligence against the refer

926
00:36:11,650 --> 00:36:15,430
URI to say hey this is the site that

927
00:36:13,360 --> 00:36:17,920
referred it this is not a reputable site

928
00:36:15,430 --> 00:36:19,480
or this is a reputable site or this is a

929
00:36:17,920 --> 00:36:21,460
site that we do business with it's gone

930
00:36:19,480 --> 00:36:23,470
through our vendor assessment process

931
00:36:21,460 --> 00:36:25,960
and so we can use that to enrich the

932
00:36:23,470 --> 00:36:27,609
content and have the security analyst

933
00:36:25,960 --> 00:36:30,370
have our security analysts to be able to

934
00:36:27,610 --> 00:36:36,550
say yes this is okay to authorize or no

935
00:36:30,370 --> 00:36:37,620
it's not but in an in a safe way so if

936
00:36:36,550 --> 00:36:40,330
you're thinking about rolling out

937
00:36:37,620 --> 00:36:41,470
explicit allow for anything that I

938
00:36:40,330 --> 00:36:44,049
talked about today or something else

939
00:36:41,470 --> 00:36:46,299
there is a great way to start and I'll

940
00:36:44,050 --> 00:36:49,150
tell you how we did it with Santa on

941
00:36:46,300 --> 00:36:50,980
Macs but this is the process that we've

942
00:36:49,150 --> 00:36:54,160
applied to all of the things that I've

943
00:36:50,980 --> 00:36:56,260
talked about so far if you're not in a

944
00:36:54,160 --> 00:36:58,000
brand-new greenfield environment and you

945
00:36:56,260 --> 00:37:01,480
already have people who are running

946
00:36:58,000 --> 00:37:03,790
software on their computers then deploy

947
00:37:01,480 --> 00:37:05,320
Santa in monitor mode to your entire

948
00:37:03,790 --> 00:37:08,410
fleet or deploy krex conveyed or

949
00:37:05,320 --> 00:37:10,120
gatherer to your entire fleet and get an

950
00:37:08,410 --> 00:37:12,549
entire inventory of everything that

951
00:37:10,120 --> 00:37:14,080
people are running don't go to IT and

952
00:37:12,550 --> 00:37:15,640
ask them what is the software that's

953
00:37:14,080 --> 00:37:18,509
ever that everyone is running that will

954
00:37:15,640 --> 00:37:21,129
be an incomplete list so deploy Santa

955
00:37:18,510 --> 00:37:23,410
collect the entire list of software

956
00:37:21,130 --> 00:37:25,480
that's running run that against threat

957
00:37:23,410 --> 00:37:28,210
intelligence and remove the obvious bad

958
00:37:25,480 --> 00:37:30,940
stuff and then say that's good enough

959
00:37:28,210 --> 00:37:34,720
that is our explicit allow list it might

960
00:37:30,940 --> 00:37:36,160
be a thousand pieces of software but

961
00:37:34,720 --> 00:37:38,319
that's a great place to start because

962
00:37:36,160 --> 00:37:40,580
then the day that you turn it on you do

963
00:37:38,320 --> 00:37:44,120
not lose your job this

964
00:37:40,580 --> 00:37:48,980
yo can still open powerpoints the CFO

965
00:37:44,120 --> 00:37:53,029
can still open Excel and people can open

966
00:37:48,980 --> 00:37:54,290
their games their Ableton mixer whatever

967
00:37:53,030 --> 00:37:56,000
it is that they want to be doing that

968
00:37:54,290 --> 00:37:58,279
will they'll be really mad if they can't

969
00:37:56,000 --> 00:38:00,650
do they'll be able to do it on day one

970
00:37:58,280 --> 00:38:02,930
and then on day two when something new

971
00:38:00,650 --> 00:38:04,580
comes in they get through the process

972
00:38:02,930 --> 00:38:08,330
they start seeing the process of

973
00:38:04,580 --> 00:38:12,319
explicit allowances hey I I want to run

974
00:38:08,330 --> 00:38:14,180
this new software and I need security to

975
00:38:12,320 --> 00:38:15,200
evaluate it and so maybe you can get to

976
00:38:14,180 --> 00:38:18,770
the place where we are where it's

977
00:38:15,200 --> 00:38:20,270
automated and the evaluation happens in

978
00:38:18,770 --> 00:38:22,280
real time for them and they can they can

979
00:38:20,270 --> 00:38:25,790
get their own satisfaction within thirty

980
00:38:22,280 --> 00:38:28,730
seconds but even even if not it's much

981
00:38:25,790 --> 00:38:30,529
easier to start with everything and work

982
00:38:28,730 --> 00:38:32,480
backwards then start with nothing and

983
00:38:30,530 --> 00:38:36,050
have everyone explicitly request access

984
00:38:32,480 --> 00:38:38,300
to everything that they want to run now

985
00:38:36,050 --> 00:38:40,010
for Santa because obviously that still

986
00:38:38,300 --> 00:38:41,720
sounds a little bit terrible right for

987
00:38:40,010 --> 00:38:44,840
Santa and for AppLocker

988
00:38:41,720 --> 00:38:47,810
you can explicitly allow based on the

989
00:38:44,840 --> 00:38:50,690
sha-256 hash or the developer cert so

990
00:38:47,810 --> 00:38:54,770
maybe do ask IT hey what software do you

991
00:38:50,690 --> 00:38:56,630
guys buy and go through and find those

992
00:38:54,770 --> 00:38:58,100
developer search probably on your own

993
00:38:56,630 --> 00:39:00,020
computer you'll probably see most of

994
00:38:58,100 --> 00:39:02,810
them and say ok yep so will authorize

995
00:39:00,020 --> 00:39:07,730
software from Adobe from Cisco Systems

996
00:39:02,810 --> 00:39:09,650
from Microsoft from Apple from whatever

997
00:39:07,730 --> 00:39:12,440
other companies that you're doing

998
00:39:09,650 --> 00:39:13,910
business with so that even if those

999
00:39:12,440 --> 00:39:19,550
those pieces of software update in the

1000
00:39:13,910 --> 00:39:22,339
sha-256 256 hash changes people won't

1001
00:39:19,550 --> 00:39:23,510
have to re request access to run the

1002
00:39:22,340 --> 00:39:25,820
same software that they have been

1003
00:39:23,510 --> 00:39:27,530
requesting if developers aren't signing

1004
00:39:25,820 --> 00:39:29,150
their binaries which let me tell you a

1005
00:39:27,530 --> 00:39:31,790
lot of developers don't sign their

1006
00:39:29,150 --> 00:39:33,050
binaries then it will be this process

1007
00:39:31,790 --> 00:39:35,480
and that's why it has to be this fast

1008
00:39:33,050 --> 00:39:38,330
every time because people are going to

1009
00:39:35,480 --> 00:39:40,070
run into this a number of times so I did

1010
00:39:38,330 --> 00:39:41,330
statistics and I'm thinking back because

1011
00:39:40,070 --> 00:39:43,370
again this would have been great in my

1012
00:39:41,330 --> 00:39:45,950
slide deck I did statistics for my boss

1013
00:39:43,370 --> 00:39:48,470
last quarter and over the three-month

1014
00:39:45,950 --> 00:39:51,500
period I think people interacted with

1015
00:39:48,470 --> 00:39:54,020
the Mac explicit allow workflow about

1016
00:39:51,500 --> 00:39:56,450
600 times so that's for 800 users

1017
00:39:54,020 --> 00:39:57,620
maybe each person did it once per

1018
00:39:56,450 --> 00:40:01,520
quarter but I think it's more likely

1019
00:39:57,620 --> 00:40:02,690
that several people did it a number of

1020
00:40:01,520 --> 00:40:04,310
times a quarter and then a lot of people

1021
00:40:02,690 --> 00:40:06,830
didn't see it at all because they're not

1022
00:40:04,310 --> 00:40:08,990
downloading new software and other

1023
00:40:06,830 --> 00:40:12,020
things are the things that they're

1024
00:40:08,990 --> 00:40:14,270
running have already been allowed so

1025
00:40:12,020 --> 00:40:15,530
there's just a few things left that we

1026
00:40:14,270 --> 00:40:17,810
want to do on the things that we're

1027
00:40:15,530 --> 00:40:19,730
working on specifically like we want to

1028
00:40:17,810 --> 00:40:22,310
remove some of our external dependencies

1029
00:40:19,730 --> 00:40:24,950
to make this more package so maybe we

1030
00:40:22,310 --> 00:40:25,850
could share it one day or even just

1031
00:40:24,950 --> 00:40:28,939
share it with other business units

1032
00:40:25,850 --> 00:40:30,860
within Cisco so like we use slack and we

1033
00:40:28,940 --> 00:40:33,590
have slack integrated into some of this

1034
00:40:30,860 --> 00:40:35,480
process we have Zendesk integrated into

1035
00:40:33,590 --> 00:40:36,860
some of this process but since not

1036
00:40:35,480 --> 00:40:40,400
everyone uses it and maybe we won't

1037
00:40:36,860 --> 00:40:42,380
always use it duo either we want it to

1038
00:40:40,400 --> 00:40:46,100
be entirely self-contained so that well

1039
00:40:42,380 --> 00:40:47,990
the santé process uses slack to reach

1040
00:40:46,100 --> 00:40:49,400
over the security bot the windows

1041
00:40:47,990 --> 00:40:50,899
process is just effective where it's a

1042
00:40:49,400 --> 00:40:52,730
pop-up dialog that says hey you tried to

1043
00:40:50,900 --> 00:40:54,410
run this yes or no so that doesn't need

1044
00:40:52,730 --> 00:40:56,600
to be slack there and then we just want

1045
00:40:54,410 --> 00:40:58,129
to build it to scale as as Duo continues

1046
00:40:56,600 --> 00:41:00,890
to grow as we share the things that

1047
00:40:58,130 --> 00:41:03,650
we've done with Cisco we want this to be

1048
00:41:00,890 --> 00:41:05,240
able to scale beyond what what it's

1049
00:41:03,650 --> 00:41:06,680
doing right now so we'll continue to

1050
00:41:05,240 --> 00:41:09,049
invest in doing it completely serverless

1051
00:41:06,680 --> 00:41:12,259
ly with things like lambda and

1052
00:41:09,050 --> 00:41:13,760
serverless our RDS and when we have

1053
00:41:12,260 --> 00:41:15,650
friend times we'll do lightweight front

1054
00:41:13,760 --> 00:41:19,790
ends like react so we can just serve

1055
00:41:15,650 --> 00:41:22,250
things out of s3 so let me stop here for

1056
00:41:19,790 --> 00:41:24,560
questions and then I totally have like a

1057
00:41:22,250 --> 00:41:25,820
couple of minutes to show you a demo

1058
00:41:24,560 --> 00:41:26,840
unless we have a lot of questions which

1059
00:41:25,820 --> 00:41:29,590
will be even better

1060
00:41:26,840 --> 00:41:29,590
yeah

1061
00:41:34,870 --> 00:41:39,400
yes so actually probably before they've

1062
00:41:38,050 --> 00:41:40,960
even seen the pop up we've already

1063
00:41:39,400 --> 00:41:42,760
evaluated against threatened cell

1064
00:41:40,960 --> 00:41:48,190
because we can do that fairly quickly

1065
00:41:42,760 --> 00:41:50,440
because we don't do Sam vaccine so we do

1066
00:41:48,190 --> 00:41:51,790
that and as like as that's completing

1067
00:41:50,440 --> 00:41:53,710
the pop-up shows up on the computer but

1068
00:41:51,790 --> 00:41:56,740
since that only takes a few seconds it

1069
00:41:53,710 --> 00:41:58,810
seems to be instantaneously as we start

1070
00:41:56,740 --> 00:42:01,180
to explore how to how sandboxing works

1071
00:41:58,810 --> 00:42:03,430
in this metal likely will actually still

1072
00:42:01,180 --> 00:42:04,990
allow people to authorize it before the

1073
00:42:03,430 --> 00:42:07,330
sandbox completes its run depending on

1074
00:42:04,990 --> 00:42:09,069
how long it takes just so that we're

1075
00:42:07,330 --> 00:42:12,069
enabling the business even at the even

1076
00:42:09,070 --> 00:42:13,870
at the potential of having a few hours

1077
00:42:12,070 --> 00:42:15,160
of exposure or something like that but

1078
00:42:13,870 --> 00:42:16,390
it's something that we can continue

1079
00:42:15,160 --> 00:42:18,549
because it's something that we built

1080
00:42:16,390 --> 00:42:20,830
entirely ourselves we can continue to

1081
00:42:18,550 --> 00:42:27,850
fine-tune this workflow to whatever our

1082
00:42:20,830 --> 00:42:31,410
risk appetite is at the time yeah nope I

1083
00:42:27,850 --> 00:42:31,410
have not heard of web proxy

1084
00:42:36,790 --> 00:42:41,560
oh so like inside a network what site

1085
00:42:39,640 --> 00:42:45,730
people can access versus can't access

1086
00:42:41,560 --> 00:42:47,560
now we don't we don't do that I think

1087
00:42:45,730 --> 00:42:48,760
there's there's too many different

1088
00:42:47,560 --> 00:42:51,070
things that people are trying to access

1089
00:42:48,760 --> 00:42:52,360
we want people to be able to access the

1090
00:42:51,070 --> 00:42:57,040
games that they like and things like

1091
00:42:52,360 --> 00:42:59,050
that we do use umbrella open DNS which

1092
00:42:57,040 --> 00:43:01,779
is like the opposite like blacklisting

1093
00:42:59,050 --> 00:43:04,900
are explicit and explicit deny where

1094
00:43:01,780 --> 00:43:06,970
there is a list of URLs that just won't

1095
00:43:04,900 --> 00:43:08,260
resolve because of umbrella and so

1096
00:43:06,970 --> 00:43:11,200
that's that's kind of the approach that

1097
00:43:08,260 --> 00:43:13,480
we've taken there just because it's such

1098
00:43:11,200 --> 00:43:15,279
like it's such a broader like orders of

1099
00:43:13,480 --> 00:43:16,690
magnitude that bigger than the number of

1100
00:43:15,280 --> 00:43:18,280
applications that we run around our

1101
00:43:16,690 --> 00:43:19,900
Chrome extensions that we want around is

1102
00:43:18,280 --> 00:43:22,060
the number of websites that we want a

1103
00:43:19,900 --> 00:43:25,590
company to be able to visit does that

1104
00:43:22,060 --> 00:43:25,590
make sense yes

1105
00:43:34,039 --> 00:43:39,359
for the Chrome extensions so all of the

1106
00:43:37,619 --> 00:43:42,689
results are posted you can view all of

1107
00:43:39,359 --> 00:43:44,788
them at Kirk's kavita IO right now we

1108
00:43:42,689 --> 00:43:48,029
are not stating that a Chrome extension

1109
00:43:44,789 --> 00:43:49,859
is malicious with Drex go Vader Google

1110
00:43:48,029 --> 00:43:52,049
does a great job of actually gating that

1111
00:43:49,859 --> 00:43:53,848
for the most part it you can tell

1112
00:43:52,049 --> 00:43:55,469
because it's so newsworthy every time

1113
00:43:53,849 --> 00:43:59,519
there is a malicious Chrome extension

1114
00:43:55,469 --> 00:44:01,739
there's I can think of four examples in

1115
00:43:59,519 --> 00:44:04,229
history of malicious chrome extensions

1116
00:44:01,739 --> 00:44:05,670
that made the news we were trying to

1117
00:44:04,229 --> 00:44:08,489
show what the risk is if a chrome

1118
00:44:05,670 --> 00:44:10,890
extension is malicious what it could do

1119
00:44:08,489 --> 00:44:12,299
and then businesses can based on their

1120
00:44:10,890 --> 00:44:14,308
risk appetite determine whether or not

1121
00:44:12,299 --> 00:44:16,140
that's acceptable like I showed LastPass

1122
00:44:14,309 --> 00:44:18,959
that's actually a high risk score in

1123
00:44:16,140 --> 00:44:21,328
terms of total number of points but the

1124
00:44:18,959 --> 00:44:22,919
other part of the story is I've been

1125
00:44:21,329 --> 00:44:24,539
doing business with LastPass for years

1126
00:44:22,920 --> 00:44:26,759
I've seen them get breached and I've

1127
00:44:24,539 --> 00:44:29,249
seen through that how they handle that

1128
00:44:26,759 --> 00:44:31,469
I've see I've signed NDA's with them

1129
00:44:29,249 --> 00:44:33,180
I've seen their stock too on it so

1130
00:44:31,469 --> 00:44:34,559
there's a lot of compensating controls

1131
00:44:33,180 --> 00:44:35,969
especially when you're doing business

1132
00:44:34,559 --> 00:44:38,939
with the company that makes the Chrome

1133
00:44:35,969 --> 00:44:40,410
extension so it's it's hard to say with

1134
00:44:38,939 --> 00:44:41,819
the tool that we built this Chrome

1135
00:44:40,410 --> 00:44:43,379
extension is malicious that being said

1136
00:44:41,819 --> 00:44:45,449
if you find a malicious chrome extension

1137
00:44:43,380 --> 00:44:46,920
or excavator is a great way to figure

1138
00:44:45,449 --> 00:44:50,219
out more about that malicious Chrome

1139
00:44:46,920 --> 00:44:56,420
extension what did you have another

1140
00:44:50,219 --> 00:44:56,420
question okay yes yeah

1141
00:45:05,240 --> 00:45:09,598
yeah absolutely so there's there's a

1142
00:45:07,529 --> 00:45:12,690
couple of ways you can do that the first

1143
00:45:09,599 --> 00:45:15,269
is you can continue to view those scan

1144
00:45:12,690 --> 00:45:17,359
results via the API we also expose an

1145
00:45:15,269 --> 00:45:20,160
RSS feed so you could actually follow

1146
00:45:17,359 --> 00:45:22,890
the RSS feed for each Chrome extension

1147
00:45:20,160 --> 00:45:26,098
to see as they change but if you create

1148
00:45:22,890 --> 00:45:27,328
the Oxford or the Creator enterprise

1149
00:45:26,099 --> 00:45:29,309
account and sign into and go to your

1150
00:45:27,329 --> 00:45:31,200
dashboard and either you have the

1151
00:45:29,309 --> 00:45:33,660
gatherer extension deployed or you have

1152
00:45:31,200 --> 00:45:35,368
a list of allowed extensions then you'll

1153
00:45:33,660 --> 00:45:37,230
see the list of your extension you'll

1154
00:45:35,369 --> 00:45:39,480
see which ones have updated recently and

1155
00:45:37,230 --> 00:45:41,190
the Delta in the risk score are right

1156
00:45:39,480 --> 00:45:43,109
there to say hey this just updated and

1157
00:45:41,190 --> 00:45:45,000
the risk score went up by 500 that's

1158
00:45:43,109 --> 00:45:46,799
worth looking at or this just updated

1159
00:45:45,000 --> 00:45:48,269
but the risk score remained the same so

1160
00:45:46,799 --> 00:45:52,440
maybe you don't actually need to look at

1161
00:45:48,269 --> 00:45:54,450
that one yeah absolutely just because

1162
00:45:52,440 --> 00:45:56,640
just because we have yesterday's report

1163
00:45:54,450 --> 00:45:59,848
and today's report so it's all we're

1164
00:45:56,640 --> 00:46:15,660
doing is just comparing the numbers any

1165
00:45:59,849 --> 00:46:17,400
other questions yeah so that is half

1166
00:46:15,660 --> 00:46:18,538
half of our defense red is whether or

1167
00:46:17,400 --> 00:46:20,880
not the user intended to run it and

1168
00:46:18,539 --> 00:46:22,200
certainly people will run mackeeper

1169
00:46:20,880 --> 00:46:23,579
or something like that right because

1170
00:46:22,200 --> 00:46:27,480
they want their Mac to go faster I want

1171
00:46:23,579 --> 00:46:28,859
my Mac to go faster so that's why we

1172
00:46:27,480 --> 00:46:30,089
have the additional data point of the

1173
00:46:28,859 --> 00:46:31,619
threat intelligence so those are the two

1174
00:46:30,089 --> 00:46:33,538
things that have to pass before they go

1175
00:46:31,619 --> 00:46:37,319
through what we've actually found is a

1176
00:46:33,539 --> 00:46:39,119
more a higher false and false positive

1177
00:46:37,319 --> 00:46:40,650
false negative rate where people are

1178
00:46:39,119 --> 00:46:42,690
saying I didn't mean to run that and

1179
00:46:40,650 --> 00:46:44,160
we're raising an incident and then we're

1180
00:46:42,690 --> 00:46:45,269
going and saying oh yeah well I know you

1181
00:46:44,160 --> 00:46:47,819
didn't mean to run that but that's just

1182
00:46:45,269 --> 00:46:49,140
Adobe trying to update Photoshop in the

1183
00:46:47,819 --> 00:46:55,819
background or something like that and

1184
00:46:49,140 --> 00:46:55,819
there's an unsigned binary yes whoa

1185
00:47:05,340 --> 00:47:10,570
not not especially I think maybe duos

1186
00:47:09,130 --> 00:47:12,790
too small of a company to have

1187
00:47:10,570 --> 00:47:14,950
statistically significant results even

1188
00:47:12,790 --> 00:47:16,450
before hand like a compromised machine

1189
00:47:14,950 --> 00:47:19,509
like I said was probably just mackeeper

1190
00:47:16,450 --> 00:47:21,460
got installed or something like that so

1191
00:47:19,510 --> 00:47:25,690
I think I think our sample size is too

1192
00:47:21,460 --> 00:47:31,270
small to show a meaningful trend any

1193
00:47:25,690 --> 00:47:33,720
other questions yes the Chrome extension

1194
00:47:31,270 --> 00:47:35,560
tool could it be adapted to Firefox I

1195
00:47:33,720 --> 00:47:37,509
suppose so

1196
00:47:35,560 --> 00:47:39,220
I'm not going to pretend that I haven't

1197
00:47:37,510 --> 00:47:41,470
been asked that question before after we

1198
00:47:39,220 --> 00:47:42,970
had a big launch of correct evader with

1199
00:47:41,470 --> 00:47:46,240
press and things like that people have

1200
00:47:42,970 --> 00:47:47,859
asked about Firefox extensions but like

1201
00:47:46,240 --> 00:47:49,930
I said the things the things that I have

1202
00:47:47,860 --> 00:47:52,660
that I've showed you today I have built

1203
00:47:49,930 --> 00:47:57,310
for my company and we don't use Firefox

1204
00:47:52,660 --> 00:47:58,810
so maybe one day but we have we have

1205
00:47:57,310 --> 00:48:05,250
other things we have other problems we

1206
00:47:58,810 --> 00:48:05,250
want to solve first any other questions

1207
00:48:05,460 --> 00:48:09,350
great well I'm right at time so thanks

1208
00:48:07,810 --> 00:48:12,040
so much everyone

1209
00:48:09,350 --> 00:48:12,040
[Applause]

