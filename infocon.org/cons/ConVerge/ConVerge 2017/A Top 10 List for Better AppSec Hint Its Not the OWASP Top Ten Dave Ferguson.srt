1
00:00:06,350 --> 00:00:12,660
<font color="#E5E5E5">all right</font><font color="#CCCCCC"> hi everybody uh sorry about</font>

2
00:00:09,179 --> 00:00:15,960
<font color="#CCCCCC">the technical difficulties so so I'm</font>

3
00:00:12,660 --> 00:00:18,150
Dave Ferguson I work for<font color="#E5E5E5"> Qualis so my</font>

4
00:00:15,960 --> 00:00:20,789
role at<font color="#E5E5E5"> Qualis is solution architect for</font>

5
00:00:18,150 --> 00:00:24,269
the web application security<font color="#E5E5E5"> products</font>

6
00:00:20,789 --> 00:00:26,340
that we have<font color="#E5E5E5"> about a lot of different</font>

7
00:00:24,269 --> 00:00:29,509
<font color="#E5E5E5">roles there including</font><font color="#CCCCCC"> a developer</font>

8
00:00:26,340 --> 00:00:34,769
consultant<font color="#CCCCCC"> work for an enterprise</font>

9
00:00:29,510 --> 00:00:36,600
<font color="#E5E5E5">security and now I help with our web app</font>

10
00:00:34,770 --> 00:00:39,809
scanning products<font color="#E5E5E5"> I help our customers</font>

11
00:00:36,600 --> 00:00:41,219
prospects<font color="#E5E5E5"> in terms of getting them up</font>

12
00:00:39,809 --> 00:00:43,500
and<font color="#E5E5E5"> running deploying scanning programs</font>

13
00:00:41,219 --> 00:00:46,710
and so forth so so I'm going<font color="#CCCCCC"> to talk</font>

14
00:00:43,500 --> 00:00:48,530
about<font color="#E5E5E5"> today is a list for better</font>

15
00:00:46,710 --> 00:00:50,940
application pretty

16
00:00:48,530 --> 00:00:52,500
however<font color="#E5E5E5"> it's it's not the list that you</font>

17
00:00:50,940 --> 00:00:58,680
<font color="#CCCCCC">probably</font><font color="#E5E5E5"> are familiar with which is</font><font color="#CCCCCC"> the</font>

18
00:00:52,500 --> 00:00:59,879
OWASP top 10 so first<font color="#E5E5E5"> I'm going to talk</font>

19
00:00:58,680 --> 00:01:02,039
<font color="#CCCCCC">about the list</font><font color="#E5E5E5"> that I'm not going</font><font color="#CCCCCC"> to</font>

20
00:00:59,879 --> 00:01:04,949
<font color="#E5E5E5">talk about I want to cover just the</font>

21
00:01:02,039 --> 00:01:07,049
OWASP top 10 2013 edition real quickly

22
00:01:04,949 --> 00:01:09,869
<font color="#E5E5E5">I'm sure most everyone is familiar with</font>

23
00:01:07,049 --> 00:01:15,000
<font color="#E5E5E5">this by now</font><font color="#CCCCCC"> so</font><font color="#E5E5E5"> it's been around for four</font>

24
00:01:09,869 --> 00:01:17,250
years now<font color="#CCCCCC"> so what we have here is a top</font>

25
00:01:15,000 --> 00:01:20,009
<font color="#CCCCCC">10 list of most critical risk to web</font>

26
00:01:17,250 --> 00:01:23,460
applications<font color="#CCCCCC"> and it hasn't</font><font color="#E5E5E5"> really</font>

27
00:01:20,009 --> 00:01:24,979
<font color="#CCCCCC">changed in 2013</font><font color="#E5E5E5"> until this year</font><font color="#CCCCCC"> and so I</font>

28
00:01:23,460 --> 00:01:27,929
have more<font color="#E5E5E5"> on that</font><font color="#CCCCCC"> in a minute</font>

29
00:01:24,979 --> 00:01:29,670
<font color="#E5E5E5">so the thing</font><font color="#CCCCCC"> about the Olaf top</font><font color="#E5E5E5"> 10 is</font>

30
00:01:27,930 --> 00:01:31,110
it's it's really<font color="#E5E5E5"> been adopted almost as</font>

31
00:01:29,670 --> 00:01:33,689
a standard it<font color="#E5E5E5"> was never really meant to</font>

32
00:01:31,110 --> 00:01:36,470
be a standard<font color="#E5E5E5"> but the</font><font color="#CCCCCC"> PCI</font><font color="#E5E5E5"> DSS for</font>

33
00:01:33,689 --> 00:01:39,000
example has adopted<font color="#CCCCCC"> PCI loss top</font><font color="#E5E5E5"> 10</font>

34
00:01:36,470 --> 00:01:40,560
saying you know no payment applications

35
00:01:39,000 --> 00:01:47,560
should be<font color="#CCCCCC"> vulnerable to any of these</font>

36
00:01:40,560 --> 00:01:50,229
types of<font color="#E5E5E5"> issues so</font>

37
00:01:47,560 --> 00:01:52,450
I want to talk about the release

38
00:01:50,229 --> 00:01:55,179
candidate that came out just<font color="#CCCCCC"> a few weeks</font>

39
00:01:52,450 --> 00:01:58,689
ago for<font color="#CCCCCC"> the 2017 edition of the OWASP</font>

40
00:01:55,180 --> 00:02:02,130
top 10<font color="#CCCCCC"> and it's causing a lot of</font>

41
00:01:58,689 --> 00:02:05,350
controversy and confusion<font color="#CCCCCC"> to be honest</font>

42
00:02:02,130 --> 00:02:07,119
<font color="#CCCCCC">so some of this changes real quick not a</font>

43
00:02:05,350 --> 00:02:09,970
lot of changes<font color="#CCCCCC"> but</font><font color="#E5E5E5"> some of the key</font>

44
00:02:07,119 --> 00:02:12,370
differences here<font color="#E5E5E5"> are that</font><font color="#CCCCCC"> invalid</font>

45
00:02:09,970 --> 00:02:15,220
invalidated redirects and forwards<font color="#E5E5E5"> which</font>

46
00:02:12,370 --> 00:02:16,959
is a<font color="#CCCCCC"> 10 has been dropped B the way this</font>

47
00:02:15,220 --> 00:02:18,250
alternative is<font color="#CCCCCC"> not finalized by any</font>

48
00:02:16,959 --> 00:02:19,750
means but<font color="#E5E5E5"> this is what the release</font>

49
00:02:18,250 --> 00:02:21,519
candidate has so the unvalidated

50
00:02:19,750 --> 00:02:25,780
redirection<font color="#E5E5E5"> for words has been dropped</font>

51
00:02:21,519 --> 00:02:28,299
the a 4 and a 7<font color="#E5E5E5"> which both relate to</font>

52
00:02:25,780 --> 00:02:30,489
authorization issues have been combined

53
00:02:28,299 --> 00:02:34,330
into<font color="#E5E5E5"> one a</font><font color="#CCCCCC"> four which is called broken</font>

54
00:02:30,489 --> 00:02:36,040
<font color="#E5E5E5">access control</font><font color="#CCCCCC"> I'm</font><font color="#E5E5E5"> okay</font><font color="#CCCCCC"> with</font><font color="#E5E5E5"> both of</font>

55
00:02:34,330 --> 00:02:39,040
those<font color="#E5E5E5"> and I</font><font color="#CCCCCC"> think most everybody</font><font color="#E5E5E5"> in the</font>

56
00:02:36,040 --> 00:02:40,510
<font color="#E5E5E5">app SEC world kind of has no problem</font>

57
00:02:39,040 --> 00:02:42,548
with<font color="#CCCCCC"> those the things</font><font color="#E5E5E5"> that are causing</font>

58
00:02:40,510 --> 00:02:45,130
controversy are the new ones<font color="#E5E5E5"> especially</font>

59
00:02:42,549 --> 00:02:48,430
<font color="#CCCCCC">this new a7 here called insufficient</font>

60
00:02:45,130 --> 00:02:52,180
attack protection so insufficient attack

61
00:02:48,430 --> 00:02:54,400
protection<font color="#E5E5E5"> completely</font><font color="#CCCCCC"> different</font><font color="#E5E5E5"> than any</font>

62
00:02:52,180 --> 00:02:56,410
<font color="#CCCCCC">other type of</font><font color="#E5E5E5"> a loss top</font><font color="#CCCCCC"> ten issue in</font>

63
00:02:54,400 --> 00:02:58,630
the past in<font color="#CCCCCC"> that this</font><font color="#E5E5E5"> is not really a</font>

64
00:02:56,410 --> 00:03:03,329
<font color="#E5E5E5">vulnerability or risk it's a thing that</font>

65
00:02:58,630 --> 00:03:07,750
<font color="#E5E5E5">you</font><font color="#CCCCCC"> know it's</font><font color="#E5E5E5"> it's</font><font color="#CCCCCC"> really like a way of</font>

66
00:03:03,329 --> 00:03:09,310
<font color="#E5E5E5">protecting applications that may have</font>

67
00:03:07,750 --> 00:03:11,470
<font color="#E5E5E5">vulnerabilities</font><font color="#CCCCCC"> so it's not</font><font color="#E5E5E5"> about</font><font color="#CCCCCC"> fixing</font>

68
00:03:09,310 --> 00:03:12,579
vulnerabilities or<font color="#E5E5E5"> knowing that you have</font>

69
00:03:11,470 --> 00:03:14,950
them it's<font color="#CCCCCC"> just about protecting</font>

70
00:03:12,579 --> 00:03:17,950
<font color="#E5E5E5">applications so it's kind</font><font color="#CCCCCC"> of a paradigm</font>

71
00:03:14,950 --> 00:03:19,839
<font color="#E5E5E5">shift</font><font color="#CCCCCC"> going</font><font color="#E5E5E5"> away and it's there is a lot</font>

72
00:03:17,950 --> 00:03:22,720
of<font color="#E5E5E5"> controversy</font><font color="#CCCCCC"> I'm just if you look at</font>

73
00:03:19,840 --> 00:03:24,160
the<font color="#CCCCCC"> Oval off stop</font><font color="#E5E5E5"> 10 mailing list you'll</font>

74
00:03:22,720 --> 00:03:27,519
see<font color="#CCCCCC"> some of the</font><font color="#E5E5E5"> comments that have been</font>

75
00:03:24,160 --> 00:03:30,100
<font color="#CCCCCC">made and there's a blog post by Chris</font>

76
00:03:27,519 --> 00:03:32,079
<font color="#E5E5E5">angle I used to work with on dark</font>

77
00:03:30,100 --> 00:03:34,870
reading<font color="#E5E5E5"> about this and some</font><font color="#CCCCCC"> of</font><font color="#E5E5E5"> his</font>

78
00:03:32,079 --> 00:03:40,239
concerns<font color="#E5E5E5"> with it which I tend to agree</font>

79
00:03:34,870 --> 00:03:43,319
<font color="#CCCCCC">with</font><font color="#E5E5E5"> to be honest so let me talk about a</font>

80
00:03:40,239 --> 00:03:45,310
<font color="#E5E5E5">10 for a minute under protected api's</font>

81
00:03:43,319 --> 00:03:47,920
<font color="#CCCCCC">this is kind of interesting as well</font>

82
00:03:45,310 --> 00:03:50,250
<font color="#E5E5E5">because it's not</font><font color="#CCCCCC"> a vulnerability it's</font>

83
00:03:47,920 --> 00:03:54,730
basically saying<font color="#CCCCCC"> okay a 1 through 89</font>

84
00:03:50,250 --> 00:03:56,560
<font color="#E5E5E5">those apply also to</font><font color="#CCCCCC"> AP is so</font><font color="#E5E5E5"> it's it</font>

85
00:03:54,730 --> 00:03:59,980
doesn't<font color="#CCCCCC"> both of these kind of like are</font>

86
00:03:56,560 --> 00:04:01,030
just<font color="#CCCCCC"> a different way of dealing</font><font color="#E5E5E5"> with</font>

87
00:03:59,980 --> 00:04:04,420
this<font color="#CCCCCC"> and</font>

88
00:04:01,030 --> 00:04:06,610
the thing is with the<font color="#CCCCCC"> os10 any change</font>

89
00:04:04,420 --> 00:04:09,670
could<font color="#CCCCCC"> have a huge business impact</font><font color="#E5E5E5"> out</font>

90
00:04:06,610 --> 00:04:14,710
there<font color="#E5E5E5"> because of the fact that</font><font color="#CCCCCC"> PCI and</font>

91
00:04:09,670 --> 00:04:16,450
<font color="#CCCCCC">others</font><font color="#E5E5E5"> use the OS top</font><font color="#CCCCCC"> 10</font><font color="#E5E5E5"> as kind</font><font color="#CCCCCC"> of a</font>

92
00:04:14,710 --> 00:04:18,519
standard and<font color="#E5E5E5"> so all of a sudden if</font>

93
00:04:16,450 --> 00:04:20,440
you've added<font color="#CCCCCC"> insufficient attack</font>

94
00:04:18,519 --> 00:04:24,040
protection and<font color="#CCCCCC"> under protected AP</font><font color="#E5E5E5"> is</font>

95
00:04:20,440 --> 00:04:27,219
you're<font color="#E5E5E5"> talking</font><font color="#CCCCCC"> about possibly a whole</font>

96
00:04:24,040 --> 00:04:31,780
shift in needing to guard against these

97
00:04:27,220 --> 00:04:34,840
<font color="#E5E5E5">things and api's is great as far as</font>

98
00:04:31,780 --> 00:04:36,580
<font color="#E5E5E5">protecting them but essentially it seems</font>

99
00:04:34,840 --> 00:04:38,890
redundant to me because if you if you're

100
00:04:36,580 --> 00:04:40,719
saying<font color="#E5E5E5"> that the</font><font color="#CCCCCC"> olaf's top 10</font><font color="#E5E5E5"> is just</font>

101
00:04:38,890 --> 00:04:42,610
for web applications<font color="#E5E5E5"> you can just say</font>

102
00:04:40,720 --> 00:04:45,760
that<font color="#E5E5E5"> and say oh and also it's for AP is</font>

103
00:04:42,610 --> 00:04:47,860
<font color="#E5E5E5">so you don't</font><font color="#CCCCCC"> need an</font><font color="#E5E5E5"> actual item in the</font>

104
00:04:45,760 --> 00:04:50,169
<font color="#CCCCCC">hola sub</font><font color="#E5E5E5"> 10 saying also protect</font><font color="#CCCCCC"> AP is</font>

105
00:04:47,860 --> 00:04:54,669
just my thoughts on<font color="#E5E5E5"> it but we'll see</font><font color="#CCCCCC"> how</font>

106
00:04:50,169 --> 00:04:57,490
<font color="#E5E5E5">the final version comes out but</font><font color="#CCCCCC"> a7 the</font>

107
00:04:54,669 --> 00:05:01,890
new<font color="#CCCCCC"> a7 here being proposed if you think</font>

108
00:04:57,490 --> 00:05:03,880
<font color="#CCCCCC">about it if we have under protected</font>

109
00:05:01,890 --> 00:05:06,010
applications why don't we also have

110
00:05:03,880 --> 00:05:07,000
insufficient<font color="#CCCCCC"> apps</font><font color="#E5E5E5"> Tech funding I mean</font>

111
00:05:06,010 --> 00:05:09,159
that's that's a risk

112
00:05:07,000 --> 00:05:12,370
<font color="#CCCCCC">what about inadequate executive buy-in</font>

113
00:05:09,160 --> 00:05:15,790
<font color="#E5E5E5">for having a</font><font color="#CCCCCC"> secure SDLC these are all</font>

114
00:05:12,370 --> 00:05:18,729
sort of factors<font color="#CCCCCC"> that</font><font color="#E5E5E5"> go into securing</font>

115
00:05:15,790 --> 00:05:21,370
applications so should they be on the OS

116
00:05:18,729 --> 00:05:25,150
<font color="#E5E5E5">top</font><font color="#CCCCCC"> 10 also know bug bounty program</font>

117
00:05:21,370 --> 00:05:26,860
understaffed on call our department<font color="#E5E5E5"> lack</font>

118
00:05:25,150 --> 00:05:29,109
of cyber threat attack 3d<font color="#E5E5E5"> blanking world</font>

119
00:05:26,860 --> 00:05:30,910
map all these could be risk that<font color="#E5E5E5"> could</font>

120
00:05:29,110 --> 00:05:33,280
be part of the<font color="#E5E5E5"> old lost</font><font color="#CCCCCC"> 10k the mission</font>

121
00:05:30,910 --> 00:05:38,020
<font color="#CCCCCC">of the Lost</font><font color="#E5E5E5"> 10 is not real clear right</font>

122
00:05:33,280 --> 00:05:42,729
<font color="#CCCCCC">now</font><font color="#E5E5E5"> so we'll see</font><font color="#CCCCCC"> how the comments work</font>

123
00:05:38,020 --> 00:05:43,960
out<font color="#E5E5E5"> and I also need</font><font color="#CCCCCC"> to</font><font color="#E5E5E5"> mention that</font><font color="#CCCCCC"> Oh</font>

124
00:05:42,729 --> 00:05:46,140
<font color="#CCCCCC">awesome</font><font color="#E5E5E5"> core supposed to be an open</font>

125
00:05:43,960 --> 00:05:49,150
<font color="#E5E5E5">organization vendor free vendor-neutral</font>

126
00:05:46,140 --> 00:05:52,960
<font color="#E5E5E5">agnostic but there's some thoughts that</font>

127
00:05:49,150 --> 00:05:56,679
<font color="#E5E5E5">under under protected are the</font>

128
00:05:52,960 --> 00:05:59,580
insufficient attack protection<font color="#CCCCCC"> a7 that</font>

129
00:05:56,680 --> 00:06:03,760
specifically benefits a certain class of

130
00:05:59,580 --> 00:06:06,430
vendors up there<font color="#E5E5E5"> typically anyone who</font>

131
00:06:03,760 --> 00:06:09,219
has a<font color="#CCCCCC"> product that includes</font><font color="#E5E5E5"> runtime</font>

132
00:06:06,430 --> 00:06:11,440
application self protection<font color="#E5E5E5"> or web app</font>

133
00:06:09,220 --> 00:06:13,810
firewall anything that protects the

134
00:06:11,440 --> 00:06:14,780
application if there's a product out

135
00:06:13,810 --> 00:06:17,390
there

136
00:06:14,780 --> 00:06:19,369
that fit<font color="#CCCCCC"> that fits</font><font color="#E5E5E5"> that or protects</font>

137
00:06:17,390 --> 00:06:21,409
<font color="#CCCCCC">eight against a seven they're going to</font>

138
00:06:19,370 --> 00:06:23,420
benefit<font color="#CCCCCC"> greatly if that gets</font><font color="#E5E5E5"> added to</font>

139
00:06:21,410 --> 00:06:30,710
the<font color="#E5E5E5"> Ola stub ten so that's one</font><font color="#CCCCCC"> of</font><font color="#E5E5E5"> the</font>

140
00:06:23,420 --> 00:06:32,210
pieces of controversy out<font color="#E5E5E5"> there okay so</font>

141
00:06:30,710 --> 00:06:34,070
I'm<font color="#CCCCCC"> really done talking about the OWASP</font>

142
00:06:32,210 --> 00:06:37,659
top 10 now I want to<font color="#CCCCCC"> get</font><font color="#E5E5E5"> into a</font>

143
00:06:34,070 --> 00:06:40,280
different<font color="#CCCCCC"> list for better app sec</font><font color="#E5E5E5"> and</font>

144
00:06:37,660 --> 00:06:45,190
the list I'm going<font color="#E5E5E5"> to talk about is the</font>

145
00:06:40,280 --> 00:06:47,359
OAuth top<font color="#CCCCCC"> 10 proactive controls this</font>

146
00:06:45,190 --> 00:06:50,570
particular project<font color="#CCCCCC"> you know again it's</font>

147
00:06:47,360 --> 00:06:54,590
from wasp<font color="#CCCCCC"> but it's</font><font color="#E5E5E5"> really targeted more</font>

148
00:06:50,570 --> 00:06:58,130
at developers and it's a way to assure

149
00:06:54,590 --> 00:07:00,919
that<font color="#E5E5E5"> development teams can build in</font>

150
00:06:58,130 --> 00:07:03,590
proactively protections<font color="#E5E5E5"> and fight</font>

151
00:07:00,920 --> 00:07:05,360
vulnerabilities<font color="#CCCCCC"> in their applications</font><font color="#E5E5E5"> it</font>

152
00:07:03,590 --> 00:07:06,679
<font color="#E5E5E5">first appeared in 2014 so</font><font color="#CCCCCC"> it's been</font>

153
00:07:05,360 --> 00:07:08,630
around<font color="#CCCCCC"> about three years now</font><font color="#E5E5E5"> it's on</font>

154
00:07:06,680 --> 00:07:10,370
version<font color="#CCCCCC"> 2 right now</font><font color="#E5E5E5"> an update</font><font color="#CCCCCC"> is coming</font>

155
00:07:08,630 --> 00:07:12,919
<font color="#E5E5E5">later</font><font color="#CCCCCC"> this year so it's actively</font><font color="#E5E5E5"> being</font>

156
00:07:10,370 --> 00:07:14,810
worked on and the key the leaders on

157
00:07:12,919 --> 00:07:17,960
<font color="#E5E5E5">this project are some of you may know</font>

158
00:07:14,810 --> 00:07:20,240
Jim Monaco<font color="#E5E5E5"> also Jim</font><font color="#CCCCCC"> Byrd and</font><font color="#E5E5E5"> Katie Anton</font>

159
00:07:17,960 --> 00:07:22,880
<font color="#E5E5E5">for the</font><font color="#CCCCCC"> three-count primary contributors</font>

160
00:07:20,240 --> 00:07:24,470
to this project<font color="#CCCCCC"> and so as</font><font color="#E5E5E5"> part of this</font>

161
00:07:22,880 --> 00:07:26,750
talk I actually reached out<font color="#E5E5E5"> to them</font><font color="#CCCCCC"> and</font>

162
00:07:24,470 --> 00:07:29,270
talked to them about it<font color="#CCCCCC"> they have some</font>

163
00:07:26,750 --> 00:07:30,260
<font color="#CCCCCC">really good</font><font color="#E5E5E5"> ideas for this and one of</font>

164
00:07:29,270 --> 00:07:32,479
the reasons I wanted to<font color="#E5E5E5"> do the talk</font>

165
00:07:30,260 --> 00:07:34,340
today was just to make<font color="#E5E5E5"> it known that</font>

166
00:07:32,479 --> 00:07:36,349
<font color="#E5E5E5">there's actually a better list out there</font>

167
00:07:34,340 --> 00:07:38,270
if if your goal<font color="#CCCCCC"> is to have</font><font color="#E5E5E5"> your</font>

168
00:07:36,350 --> 00:07:40,280
developers in your organization build

169
00:07:38,270 --> 00:07:42,049
more secure applications<font color="#E5E5E5"> they should</font>

170
00:07:40,280 --> 00:07:44,599
<font color="#CCCCCC">really be looking</font><font color="#E5E5E5"> at this list versus</font>

171
00:07:42,050 --> 00:07:45,979
the<font color="#CCCCCC"> oval top 10 you know even</font><font color="#E5E5E5"> without</font>

172
00:07:44,600 --> 00:07:50,030
all<font color="#E5E5E5"> the controversy that's going on</font>

173
00:07:45,979 --> 00:07:53,330
<font color="#E5E5E5">right</font><font color="#CCCCCC"> now so they lost top 10 proactive</font>

174
00:07:50,030 --> 00:07:55,429
controls is a list of<font color="#E5E5E5"> really technique</font>

175
00:07:53,330 --> 00:07:57,320
security techniques that need to be

176
00:07:55,430 --> 00:07:59,479
<font color="#CCCCCC">included or should be included in every</font>

177
00:07:57,320 --> 00:08:02,450
development project and it's<font color="#E5E5E5"> listed in</font>

178
00:07:59,479 --> 00:08:04,490
order of importance<font color="#CCCCCC"> so a you know see</font>

179
00:08:02,450 --> 00:08:06,560
<font color="#CCCCCC">one is</font><font color="#E5E5E5"> the first control bank most</font>

180
00:08:04,490 --> 00:08:08,660
important in descending order to<font color="#CCCCCC"> c10</font><font color="#E5E5E5"> and</font>

181
00:08:06,560 --> 00:08:15,620
like I<font color="#CCCCCC"> said the</font><font color="#E5E5E5"> target audience is</font>

182
00:08:08,660 --> 00:08:19,640
developers so I did want to<font color="#E5E5E5"> mention also</font>

183
00:08:15,620 --> 00:08:22,780
<font color="#E5E5E5">that the proactive controls</font><font color="#CCCCCC"> there's</font>

184
00:08:19,640 --> 00:08:26,270
really a<font color="#E5E5E5"> lot of supporting documentation</font>

185
00:08:22,780 --> 00:08:27,469
<font color="#CCCCCC">for implementing</font><font color="#E5E5E5"> the controls</font><font color="#CCCCCC"> and</font><font color="#E5E5E5"> the</font>

186
00:08:26,270 --> 00:08:28,310
vast<font color="#E5E5E5"> majority of that</font><font color="#CCCCCC"> is</font><font color="#E5E5E5"> going to be</font>

187
00:08:27,470 --> 00:08:32,090
<font color="#CCCCCC">found in the</font>

188
00:08:28,310 --> 00:08:35,480
cheat sheets<font color="#CCCCCC"> I didn't</font><font color="#E5E5E5"> even list them all</font>

189
00:08:32,090 --> 00:08:38,240
here but<font color="#E5E5E5"> there's a very large</font><font color="#CCCCCC"> number of</font>

190
00:08:35,480 --> 00:08:39,920
cheat sheets on different topics<font color="#CCCCCC"> that if</font>

191
00:08:38,240 --> 00:08:42,530
you need to secure<font color="#CCCCCC"> your application</font>

192
00:08:39,919 --> 00:08:44,979
against<font color="#E5E5E5"> sequel injection how do you do</font>

193
00:08:42,530 --> 00:08:46,730
that<font color="#E5E5E5"> there's a cheat sheet for</font><font color="#CCCCCC"> that</font>

194
00:08:44,980 --> 00:08:49,100
there's a cheat sheet<font color="#CCCCCC"> for</font><font color="#E5E5E5"> almost</font>

195
00:08:46,730 --> 00:08:50,450
anything<font color="#CCCCCC"> you</font><font color="#E5E5E5"> can</font><font color="#CCCCCC"> think of I was the</font>

196
00:08:49,100 --> 00:08:54,040
original<font color="#E5E5E5"> author of the forgot password</font>

197
00:08:50,450 --> 00:08:57,230
<font color="#E5E5E5">cheat sheet which</font><font color="#CCCCCC"> is up here somewhere</font>

198
00:08:54,040 --> 00:08:59,689
<font color="#CCCCCC">but this has</font><font color="#E5E5E5"> been an</font><font color="#CCCCCC"> effort by a</font><font color="#E5E5E5"> lot</font><font color="#CCCCCC"> of</font>

199
00:08:57,230 --> 00:09:02,500
smart<font color="#E5E5E5"> apps like people</font><font color="#CCCCCC"> it's like a great</font>

200
00:08:59,690 --> 00:09:08,090
place<font color="#CCCCCC"> to</font><font color="#E5E5E5"> go especially for developers</font><font color="#CCCCCC"> to</font>

201
00:09:02,500 --> 00:09:10,100
reference specific topics<font color="#E5E5E5"> all right so</font>

202
00:09:08,090 --> 00:09:11,720
let's dive into the proactive controls

203
00:09:10,100 --> 00:09:13,670
I'm going to go in<font color="#CCCCCC"> reverse order here so</font>

204
00:09:11,720 --> 00:09:17,620
<font color="#CCCCCC">we're going to start with</font><font color="#E5E5E5"> control number</font>

205
00:09:13,670 --> 00:09:20,300
<font color="#E5E5E5">10 which is</font><font color="#CCCCCC"> air and exception handling</font>

206
00:09:17,620 --> 00:09:22,250
so what's the<font color="#E5E5E5"> purpose behind this</font><font color="#CCCCCC"> well</font>

207
00:09:20,300 --> 00:09:24,170
it's probably<font color="#E5E5E5"> pretty</font><font color="#CCCCCC"> obvious but it's to</font>

208
00:09:22,250 --> 00:09:25,730
prevent<font color="#E5E5E5"> disclosure of any kind</font><font color="#CCCCCC"> of</font>

209
00:09:24,170 --> 00:09:29,030
<font color="#E5E5E5">technical information that could help</font>

210
00:09:25,730 --> 00:09:30,680
attackers and it doesn't necessarily

211
00:09:29,030 --> 00:09:32,870
have to<font color="#E5E5E5"> be technical information about</font>

212
00:09:30,680 --> 00:09:35,989
<font color="#E5E5E5">infrastructure I mean</font><font color="#CCCCCC"> although things</font>

213
00:09:32,870 --> 00:09:37,790
like stack traces being returned to the

214
00:09:35,990 --> 00:09:39,320
<font color="#E5E5E5">user and a browser that's also that's</font>

215
00:09:37,790 --> 00:09:41,120
very<font color="#E5E5E5"> helpful to</font><font color="#CCCCCC"> know what software</font><font color="#E5E5E5"> is</font>

216
00:09:39,320 --> 00:09:43,700
<font color="#CCCCCC">running on the server</font><font color="#E5E5E5"> maybe you can</font>

217
00:09:41,120 --> 00:09:46,540
attack it<font color="#CCCCCC"> but it's also</font><font color="#E5E5E5"> related to</font>

218
00:09:43,700 --> 00:09:48,920
<font color="#E5E5E5">things like</font><font color="#CCCCCC"> application specific data</font>

219
00:09:46,540 --> 00:09:51,439
<font color="#CCCCCC">account enumeration is the big one</font><font color="#E5E5E5"> like</font>

220
00:09:48,920 --> 00:09:54,530
when you<font color="#CCCCCC"> have a</font><font color="#E5E5E5"> login</font><font color="#CCCCCC"> page in a web app</font>

221
00:09:51,440 --> 00:09:56,510
it shouldn't be disclosing whether or

222
00:09:54,530 --> 00:09:58,220
not the<font color="#E5E5E5"> username</font><font color="#CCCCCC"> that was tried is a</font>

223
00:09:56,510 --> 00:10:00,710
valid<font color="#CCCCCC"> username it should</font><font color="#E5E5E5"> just be a</font>

224
00:09:58,220 --> 00:10:02,930
generic error message<font color="#E5E5E5"> so that's if it</font>

225
00:10:00,710 --> 00:10:04,040
does if it does disclose<font color="#E5E5E5"> whether it's a</font>

226
00:10:02,930 --> 00:10:06,589
valid<font color="#CCCCCC"> user name</font><font color="#E5E5E5"> then you're talking</font>

227
00:10:04,040 --> 00:10:10,430
<font color="#CCCCCC">about account enumeration</font><font color="#E5E5E5"> so that's a</font>

228
00:10:06,590 --> 00:10:12,020
type<font color="#CCCCCC"> of error message that needs to be</font>

229
00:10:10,430 --> 00:10:15,650
<font color="#E5E5E5">thought of during the design and</font>

230
00:10:12,020 --> 00:10:17,360
development<font color="#CCCCCC"> phase so you</font><font color="#E5E5E5"> want to you</font>

231
00:10:15,650 --> 00:10:20,090
know be very careful in error messages

232
00:10:17,360 --> 00:10:24,950
<font color="#CCCCCC">that are returned to</font><font color="#E5E5E5"> users they need to</font>

233
00:10:20,090 --> 00:10:26,510
be<font color="#E5E5E5"> very generic</font><font color="#CCCCCC"> and</font><font color="#E5E5E5"> their handling</font>

234
00:10:24,950 --> 00:10:28,760
mechanism<font color="#E5E5E5"> should really be centralized</font>

235
00:10:26,510 --> 00:10:30,200
you don't want to have each developer

236
00:10:28,760 --> 00:10:31,790
roll their own type of<font color="#E5E5E5"> exception</font>

237
00:10:30,200 --> 00:10:36,020
<font color="#E5E5E5">handling it's better to have a</font>

238
00:10:31,790 --> 00:10:37,520
centralized mechanism for<font color="#CCCCCC"> that and you</font>

239
00:10:36,020 --> 00:10:39,949
know if there<font color="#CCCCCC"> are errors you can</font>

240
00:10:37,520 --> 00:10:41,660
certainly log the details of the air for

241
00:10:39,950 --> 00:10:44,300
debugging<font color="#CCCCCC"> or</font><font color="#E5E5E5"> troubleshooting but</font>

242
00:10:41,660 --> 00:10:45,770
should log that on a server side<font color="#E5E5E5"> and you</font>

243
00:10:44,300 --> 00:10:49,219
know<font color="#CCCCCC"> associate some sort of a reference</font>

244
00:10:45,770 --> 00:10:51,020
number<font color="#E5E5E5"> to that and then you can display</font>

245
00:10:49,220 --> 00:10:53,150
the reference number<font color="#E5E5E5"> to the user so</font><font color="#CCCCCC"> they</font>

246
00:10:51,020 --> 00:10:55,730
could report<font color="#E5E5E5"> that as an error and then</font>

247
00:10:53,150 --> 00:10:57,470
you know if you look up the details<font color="#CCCCCC"> on</font>

248
00:10:55,730 --> 00:11:00,170
the server side but you shouldn't really

249
00:10:57,470 --> 00:11:02,990
be exposing<font color="#CCCCCC"> that information to users</font>

250
00:11:00,170 --> 00:11:04,729
<font color="#CCCCCC">I have contested applications where the</font>

251
00:11:02,990 --> 00:11:06,640
developers tried to do that where they

252
00:11:04,730 --> 00:11:11,870
tried<font color="#CCCCCC"> to hide the</font><font color="#E5E5E5"> debugging int or the</font>

253
00:11:06,640 --> 00:11:14,420
stack traces in the<font color="#CCCCCC"> HTML</font><font color="#E5E5E5"> an HTML comment</font>

254
00:11:11,870 --> 00:11:15,950
<font color="#E5E5E5">so you don't</font><font color="#CCCCCC"> really see the air looking</font>

255
00:11:14,420 --> 00:11:17,270
<font color="#E5E5E5">at the</font><font color="#CCCCCC"> webpage</font><font color="#E5E5E5"> but if you do view source</font>

256
00:11:15,950 --> 00:11:19,280
on<font color="#E5E5E5"> the page you can</font><font color="#CCCCCC"> see the whole stack</font>

257
00:11:17,270 --> 00:11:28,209
<font color="#E5E5E5">trace doesn't really work that's not the</font>

258
00:11:19,280 --> 00:11:30,819
idea<font color="#E5E5E5"> all right</font><font color="#CCCCCC"> I'm going to</font><font color="#E5E5E5"> move on</font>

259
00:11:28,209 --> 00:11:34,618
control number<font color="#CCCCCC"> nine which</font><font color="#E5E5E5"> is leverage</font>

260
00:11:30,819 --> 00:11:38,050
security frameworks and libraries<font color="#E5E5E5"> so the</font>

261
00:11:34,619 --> 00:11:40,089
important<font color="#CCCCCC"> thing here is that any kind</font><font color="#E5E5E5"> of</font>

262
00:11:38,050 --> 00:11:42,040
<font color="#E5E5E5">web development framework or a</font><font color="#CCCCCC"> platform</font>

263
00:11:40,089 --> 00:11:44,709
that developers are<font color="#CCCCCC"> using there's going</font>

264
00:11:42,040 --> 00:11:47,110
to be<font color="#E5E5E5"> security features within that</font>

265
00:11:44,709 --> 00:11:48,939
platform or that framework<font color="#E5E5E5"> so why not</font>

266
00:11:47,110 --> 00:11:49,420
take<font color="#E5E5E5"> advantage of them it doesn't cost</font>

267
00:11:48,939 --> 00:11:51,309
anything

268
00:11:49,420 --> 00:11:53,949
typically it's just a configuration flag

269
00:11:51,309 --> 00:11:56,439
or maybe a few<font color="#E5E5E5"> lines of code</font>

270
00:11:53,949 --> 00:11:58,949
<font color="#E5E5E5">so you get this security for free in</font>

271
00:11:56,439 --> 00:12:01,269
your<font color="#E5E5E5"> application not a lot of extra</font><font color="#CCCCCC"> work</font>

272
00:11:58,949 --> 00:12:03,579
<font color="#E5E5E5">some examples</font><font color="#CCCCCC"> of this would be things</font>

273
00:12:01,269 --> 00:12:07,420
<font color="#E5E5E5">like anti cross-site request forgery</font>

274
00:12:03,579 --> 00:12:10,809
tokens<font color="#CCCCCC"> you know there's a all kind of</font>

275
00:12:07,420 --> 00:12:13,029
PHP Ruby on Rails<font color="#CCCCCC"> Java patchy struts</font>

276
00:12:10,809 --> 00:12:15,249
<font color="#E5E5E5">they all have ways to prevent cross-site</font>

277
00:12:13,029 --> 00:12:19,329
request forgery<font color="#E5E5E5"> by implementing a token</font>

278
00:12:15,249 --> 00:12:22,050
within the in the forms<font color="#CCCCCC"> also air</font>

279
00:12:19,329 --> 00:12:24,989
handling mechanisms we just<font color="#E5E5E5"> talked about</font>

280
00:12:22,050 --> 00:12:28,628
<font color="#E5E5E5">configuration is available for handling</font>

281
00:12:24,990 --> 00:12:30,579
<font color="#E5E5E5">unexpected errors session timeouts is</font>

282
00:12:28,629 --> 00:12:32,170
another one any kind<font color="#E5E5E5"> of web</font><font color="#CCCCCC"> session</font>

283
00:12:30,579 --> 00:12:34,209
should timeout after<font color="#CCCCCC"> a</font><font color="#E5E5E5"> certain amount of</font>

284
00:12:32,170 --> 00:12:39,160
inactivity<font color="#CCCCCC"> that's all</font><font color="#E5E5E5"> configurable in</font>

285
00:12:34,209 --> 00:12:42,040
<font color="#E5E5E5">the frameworks cookie configuration this</font>

286
00:12:39,160 --> 00:12:43,868
<font color="#CCCCCC">is very easy it</font><font color="#E5E5E5"> raises the</font><font color="#CCCCCC"> bar for</font>

287
00:12:42,040 --> 00:12:47,170
attackers<font color="#E5E5E5"> but making sure your cookies</font>

288
00:12:43,869 --> 00:12:50,379
are marked<font color="#CCCCCC"> with secure making sure</font>

289
00:12:47,170 --> 00:12:52,059
they're marked with HTTP only if there's

290
00:12:50,379 --> 00:12:53,889
any sensitive<font color="#E5E5E5"> data being stored in that</font>

291
00:12:52,059 --> 00:12:55,569
cookie<font color="#E5E5E5"> which hopefully it's not but if</font>

292
00:12:53,889 --> 00:12:58,860
you need to do that<font color="#E5E5E5"> you should be</font>

293
00:12:55,569 --> 00:13:01,089
encrypting the contents<font color="#E5E5E5"> of the cookie</font>

294
00:12:58,860 --> 00:13:04,959
<font color="#E5E5E5">output encoding a lot of the frameworks</font>

295
00:13:01,089 --> 00:13:07,269
<font color="#E5E5E5">when you're writing an HTML page it</font>

296
00:13:04,959 --> 00:13:10,689
automatically will encode the output to

297
00:13:07,269 --> 00:13:12,579
prevent cross-site scripting and ORM

298
00:13:10,689 --> 00:13:15,879
would be object relational mapping<font color="#E5E5E5"> so</font>

299
00:13:12,579 --> 00:13:17,229
that's a sequel injection defense<font color="#CCCCCC"> many</font>

300
00:13:15,879 --> 00:13:21,069
of the development frameworks provide

301
00:13:17,230 --> 00:13:23,019
<font color="#E5E5E5">that out of the box and you can be if so</font>

302
00:13:21,069 --> 00:13:25,029
<font color="#E5E5E5">or you know hibernate would be one you</font>

303
00:13:23,019 --> 00:13:32,049
can<font color="#E5E5E5"> be</font><font color="#CCCCCC"> protected against sequel</font>

304
00:13:25,029 --> 00:13:34,629
injection<font color="#CCCCCC"> there's also a third-party</font>

305
00:13:32,049 --> 00:13:36,939
<font color="#E5E5E5">libraries so maybe your native</font>

306
00:13:34,629 --> 00:13:38,949
<font color="#CCCCCC">development platform</font><font color="#E5E5E5"> doesn't</font><font color="#CCCCCC"> have what</font>

307
00:13:36,939 --> 00:13:41,290
you need there<font color="#E5E5E5"> are</font><font color="#CCCCCC"> third-party security</font>

308
00:13:38,949 --> 00:13:41,979
libraries you<font color="#CCCCCC"> can add to the application</font>

309
00:13:41,290 --> 00:13:43,199
that<font color="#CCCCCC"> may</font>

310
00:13:41,980 --> 00:13:48,730
have some of<font color="#CCCCCC"> the features that</font><font color="#E5E5E5"> you need</font>

311
00:13:43,200 --> 00:13:51,160
<font color="#CCCCCC">this</font><font color="#E5E5E5"> is some examples here</font><font color="#CCCCCC"> Shiro is a an</font>

312
00:13:48,730 --> 00:13:53,170
authorization framework<font color="#CCCCCC"> to</font><font color="#E5E5E5"> four</font>

313
00:13:51,160 --> 00:13:54,910
different<font color="#E5E5E5"> you know permissions enforcing</font>

314
00:13:53,170 --> 00:13:58,870
permissions on user role different<font color="#E5E5E5"> users</font>

315
00:13:54,910 --> 00:14:01,900
<font color="#CCCCCC">and their roles and Allah</font><font color="#E5E5E5"> is another</font>

316
00:13:58,870 --> 00:14:03,640
library from a lost called<font color="#E5E5E5"> isapi so</font>

317
00:14:01,900 --> 00:14:06,459
<font color="#E5E5E5">these are all available and could be</font>

318
00:14:03,640 --> 00:14:09,189
used<font color="#CCCCCC"> as</font><font color="#E5E5E5"> needed there is</font><font color="#CCCCCC"> one big caveat</font>

319
00:14:06,460 --> 00:14:12,090
to<font color="#E5E5E5"> this though</font><font color="#CCCCCC"> frameworks and libraries</font>

320
00:14:09,190 --> 00:14:15,400
themselves<font color="#CCCCCC"> can have</font><font color="#E5E5E5"> vulnerabilities</font><font color="#CCCCCC"> and</font>

321
00:14:12,090 --> 00:14:18,460
when they do and<font color="#CCCCCC"> they're announced</font><font color="#E5E5E5"> it</font>

322
00:14:15,400 --> 00:14:20,560
can often<font color="#E5E5E5"> set people to scrambling so</font>

323
00:14:18,460 --> 00:14:23,590
some recent<font color="#CCCCCC"> examples would be patchy</font>

324
00:14:20,560 --> 00:14:26,619
struts stress had some remote code

325
00:14:23,590 --> 00:14:28,000
execution vulnerabilities well<font color="#E5E5E5"> over many</font>

326
00:14:26,620 --> 00:14:29,410
years<font color="#E5E5E5"> they could occasionally have this</font>

327
00:14:28,000 --> 00:14:31,900
happen so it seems to<font color="#E5E5E5"> be never-ending</font>

328
00:14:29,410 --> 00:14:33,480
<font color="#CCCCCC">but just about a</font><font color="#E5E5E5"> month ago it had some</font>

329
00:14:31,900 --> 00:14:36,280
very serious remote code execution

330
00:14:33,480 --> 00:14:38,470
vulnerabilities<font color="#E5E5E5"> and struts to framework</font>

331
00:14:36,280 --> 00:14:40,000
<font color="#E5E5E5">so a lot</font><font color="#CCCCCC"> of our customers</font><font color="#E5E5E5"> were</font>

332
00:14:38,470 --> 00:14:41,770
scrambling<font color="#E5E5E5"> to</font><font color="#CCCCCC"> get those patched and</font>

333
00:14:40,000 --> 00:14:45,190
<font color="#E5E5E5">trying to use our</font><font color="#CCCCCC"> product to scan to</font>

334
00:14:41,770 --> 00:14:46,420
<font color="#CCCCCC">find it they had this vulnerability so</font>

335
00:14:45,190 --> 00:14:49,900
you got to be vigilant<font color="#E5E5E5"> about the</font>

336
00:14:46,420 --> 00:14:51,250
advisories<font color="#E5E5E5"> know what you're using</font><font color="#CCCCCC"> so be</font>

337
00:14:49,900 --> 00:14:53,410
<font color="#E5E5E5">familiar with what's in your environment</font>

338
00:14:51,250 --> 00:14:56,590
<font color="#CCCCCC">and you can use another Olas tool for</font>

339
00:14:53,410 --> 00:14:58,680
that<font color="#E5E5E5"> it's called dependency check that's</font>

340
00:14:56,590 --> 00:15:02,800
<font color="#CCCCCC">a free tool you can download it will</font>

341
00:14:58,680 --> 00:15:04,390
scan your<font color="#E5E5E5"> analyze your application at</font>

342
00:15:02,800 --> 00:15:06,370
the code<font color="#CCCCCC"> level and determine what</font>

343
00:15:04,390 --> 00:15:15,340
libraries<font color="#CCCCCC"> are using</font><font color="#E5E5E5"> so you can know what</font>

344
00:15:06,370 --> 00:15:16,810
you have I'm<font color="#E5E5E5"> going to move on to control</font>

345
00:15:15,340 --> 00:15:22,990
number<font color="#E5E5E5"> eight now which is implement</font>

346
00:15:16,810 --> 00:15:26,560
logging and intrusion<font color="#CCCCCC"> detection so this</font>

347
00:15:22,990 --> 00:15:29,470
is a talk about logging first<font color="#E5E5E5"> so logging</font>

348
00:15:26,560 --> 00:15:32,310
is a security<font color="#E5E5E5"> point of view is not just</font>

349
00:15:29,470 --> 00:15:36,160
about<font color="#E5E5E5"> debugging</font><font color="#CCCCCC"> there should be some</font>

350
00:15:32,310 --> 00:15:37,660
logs in place to help understand<font color="#E5E5E5"> when</font>

351
00:15:36,160 --> 00:15:41,140
and<font color="#E5E5E5"> how your application is being</font>

352
00:15:37,660 --> 00:15:43,750
attacked<font color="#CCCCCC"> this</font><font color="#E5E5E5"> is kind of similar</font><font color="#CCCCCC"> to the</font>

353
00:15:41,140 --> 00:15:46,090
a7 insufficient attack protection that I

354
00:15:43,750 --> 00:15:50,320
showed<font color="#E5E5E5"> in the regular top-10 the new</font>

355
00:15:46,090 --> 00:15:52,720
regular<font color="#CCCCCC"> top-10 so remember these</font><font color="#E5E5E5"> are</font>

356
00:15:50,320 --> 00:15:54,130
proactive controls<font color="#E5E5E5"> we're not talking</font>

357
00:15:52,720 --> 00:15:55,690
about<font color="#E5E5E5"> risk here we're saying these are</font>

358
00:15:54,130 --> 00:15:57,370
the<font color="#E5E5E5"> things that developers</font><font color="#CCCCCC"> should</font>

359
00:15:55,690 --> 00:16:00,880
actively<font color="#E5E5E5"> think about on every</font>

360
00:15:57,370 --> 00:16:04,360
development project<font color="#CCCCCC"> just to make more</font>

361
00:16:00,880 --> 00:16:07,960
<font color="#E5E5E5">secure applications in the end so with</font>

362
00:16:04,360 --> 00:16:09,460
logging<font color="#CCCCCC"> it provides a</font><font color="#E5E5E5"> lot of</font><font color="#CCCCCC"> benefits</font>

363
00:16:07,960 --> 00:16:10,960
not<font color="#CCCCCC"> just knowing</font><font color="#E5E5E5"> when</font><font color="#CCCCCC"> and</font><font color="#E5E5E5"> how you're</font>

364
00:16:09,460 --> 00:16:14,020
being<font color="#CCCCCC"> attacked but if you do get</font>

365
00:16:10,960 --> 00:16:16,540
<font color="#CCCCCC">attacked</font><font color="#E5E5E5"> you can be alerted some sort of</font>

366
00:16:14,020 --> 00:16:18,430
<font color="#E5E5E5">monitoring can be set up if something</font>

367
00:16:16,540 --> 00:16:21,730
happens where<font color="#CCCCCC"> you get breached there may</font>

368
00:16:18,430 --> 00:16:24,819
be some forensics<font color="#E5E5E5"> information available</font>

369
00:16:21,730 --> 00:16:26,350
<font color="#E5E5E5">to help</font><font color="#CCCCCC"> with the logging that you do so</font>

370
00:16:24,820 --> 00:16:28,270
when the logging is done you<font color="#E5E5E5"> really</font>

371
00:16:26,350 --> 00:16:33,430
should<font color="#E5E5E5"> you know list a</font><font color="#CCCCCC"> timestamp</font><font color="#E5E5E5"> when it</font>

372
00:16:28,270 --> 00:16:37,120
occurred<font color="#E5E5E5"> the event that type the source</font>

373
00:16:33,430 --> 00:16:41,170
IP and the user ID if needed a user ID

374
00:16:37,120 --> 00:16:43,210
<font color="#E5E5E5">associated with that and then you can</font>

375
00:16:41,170 --> 00:16:45,880
essentially as you're developing

376
00:16:43,210 --> 00:16:48,700
<font color="#CCCCCC">application the developers know where</font>

377
00:16:45,880 --> 00:16:50,650
the important pieces<font color="#E5E5E5"> are so you can use</font>

378
00:16:48,700 --> 00:16:53,190
that as a guide<font color="#CCCCCC"> to know what to log</font><font color="#E5E5E5"> and</font>

379
00:16:50,650 --> 00:16:55,630
where to log it and<font color="#E5E5E5"> how much to love and</font>

380
00:16:53,190 --> 00:16:57,370
<font color="#E5E5E5">as usual you want to avoid logging</font>

381
00:16:55,630 --> 00:16:59,590
sensitive data<font color="#CCCCCC"> you don't</font><font color="#E5E5E5"> want to have to</font>

382
00:16:57,370 --> 00:17:03,610
have credit card numbers or passwords in

383
00:16:59,590 --> 00:17:05,439
your logs so think about<font color="#E5E5E5"> that</font><font color="#CCCCCC"> also log</font>

384
00:17:03,610 --> 00:17:07,089
injection there's a type<font color="#E5E5E5"> of</font>

385
00:17:05,439 --> 00:17:09,699
vulnerability called log injection where

386
00:17:07,089 --> 00:17:12,730
a user<font color="#E5E5E5"> can enter a carriage return line</font>

387
00:17:09,699 --> 00:17:16,720
<font color="#E5E5E5">feed for example and then basically fake</font>

388
00:17:12,730 --> 00:17:19,720
<font color="#CCCCCC">login</font><font color="#E5E5E5"> puts in the logs so that's</font>

389
00:17:16,720 --> 00:17:21,250
important<font color="#CCCCCC"> to avoid you want to validate</font>

390
00:17:19,720 --> 00:17:24,130
the<font color="#E5E5E5"> data and code</font><font color="#CCCCCC"> the data prevent the</font>

391
00:17:21,250 --> 00:17:26,530
log injection vulnerabilities<font color="#E5E5E5"> and then</font>

392
00:17:24,130 --> 00:17:29,200
there is again a cheat sheet<font color="#CCCCCC"> for</font><font color="#E5E5E5"> logging</font>

393
00:17:26,530 --> 00:17:30,790
so that is helpful<font color="#E5E5E5"> so all these cheat</font>

394
00:17:29,200 --> 00:17:35,290
sheets<font color="#E5E5E5"> are supporting these proactive</font>

395
00:17:30,790 --> 00:17:37,510
controls now the intrusion detection

396
00:17:35,290 --> 00:17:40,030
piece of this is kind of<font color="#E5E5E5"> interesting</font>

397
00:17:37,510 --> 00:17:44,680
I once<font color="#CCCCCC"> Penn tested a web application</font>

398
00:17:40,030 --> 00:17:47,290
that<font color="#E5E5E5"> it was very frustrating</font><font color="#CCCCCC"> as a pen</font>

399
00:17:44,680 --> 00:17:49,420
tester<font color="#CCCCCC"> because every time I would try to</font>

400
00:17:47,290 --> 00:17:52,050
tamper<font color="#CCCCCC"> with data in the</font><font color="#E5E5E5"> request to see</font>

401
00:17:49,420 --> 00:17:54,640
if I could elicit some sort of exploit

402
00:17:52,050 --> 00:17:56,740
<font color="#E5E5E5">of a cross-site scripting or sequel</font>

403
00:17:54,640 --> 00:18:01,240
injection or anything like<font color="#E5E5E5"> that the</font>

404
00:17:56,740 --> 00:18:02,230
application would log me out and so and

405
00:18:01,240 --> 00:18:03,940
<font color="#E5E5E5">it would kill</font><font color="#CCCCCC"> me</font><font color="#E5E5E5"> it would kill my</font>

406
00:18:02,230 --> 00:18:07,150
session<font color="#E5E5E5"> so I would have to start over</font>

407
00:18:03,940 --> 00:18:09,740
again<font color="#CCCCCC"> and I</font><font color="#E5E5E5"> always to this day I mean</font>

408
00:18:07,150 --> 00:18:11,960
that was<font color="#CCCCCC"> probably eight years ago</font>

409
00:18:09,740 --> 00:18:13,790
to this day I<font color="#E5E5E5"> remember thinking</font><font color="#CCCCCC"> you know</font>

410
00:18:11,960 --> 00:18:16,160
if all applications did<font color="#E5E5E5"> pass that would</font>

411
00:18:13,790 --> 00:18:19,460
make it much more<font color="#E5E5E5"> difficult for the web</font>

412
00:18:16,160 --> 00:18:21,920
<font color="#E5E5E5">app hackers out there because it's just</font>

413
00:18:19,460 --> 00:18:23,240
<font color="#E5E5E5">you can't methodically go through and</font>

414
00:18:21,920 --> 00:18:24,950
test this thing because you<font color="#E5E5E5"> keep getting</font>

415
00:18:23,240 --> 00:18:27,380
killed your session keeps getting killed

416
00:18:24,950 --> 00:18:29,420
<font color="#CCCCCC">so that's the</font><font color="#E5E5E5"> idea</font><font color="#CCCCCC"> a no-loss app</font><font color="#E5E5E5"> sensor</font>

417
00:18:27,380 --> 00:18:33,440
is a way to<font color="#CCCCCC"> implement this kind of</font>

418
00:18:29,420 --> 00:18:35,360
functionality<font color="#CCCCCC"> it's built</font><font color="#E5E5E5"> for sensing</font>

419
00:18:33,440 --> 00:18:36,950
when there might be an attack<font color="#E5E5E5"> and then</font>

420
00:18:35,360 --> 00:18:39,620
basically taking some sort<font color="#E5E5E5"> of action</font>

421
00:18:36,950 --> 00:18:42,920
<font color="#E5E5E5">whether that's killing a session or</font>

422
00:18:39,620 --> 00:18:45,290
<font color="#E5E5E5">something else</font><font color="#CCCCCC"> maybe</font><font color="#E5E5E5"> just logging but</font>

423
00:18:42,920 --> 00:18:47,240
App Center is a way to implement this

424
00:18:45,290 --> 00:18:50,000
kind<font color="#CCCCCC"> of intrusion</font><font color="#E5E5E5"> detection within your</font>

425
00:18:47,240 --> 00:18:53,150
web application so where would you use

426
00:18:50,000 --> 00:18:56,420
<font color="#CCCCCC">this so there's a couple examples</font><font color="#E5E5E5"> are</font>

427
00:18:53,150 --> 00:18:59,470
three<font color="#CCCCCC"> examples I have</font><font color="#E5E5E5"> up here one would</font>

428
00:18:56,420 --> 00:19:02,120
<font color="#E5E5E5">be if your application receives input</font>

429
00:18:59,470 --> 00:19:05,000
that comes<font color="#CCCCCC"> from a drop down menu in the</font>

430
00:19:02,120 --> 00:19:06,639
web page<font color="#E5E5E5"> but</font><font color="#CCCCCC"> the input</font><font color="#E5E5E5"> received is not</font>

431
00:19:05,000 --> 00:19:09,050
one of the choices<font color="#E5E5E5"> in the drop down</font><font color="#CCCCCC"> menu</font>

432
00:19:06,640 --> 00:19:11,330
<font color="#CCCCCC">okay well a normal</font><font color="#E5E5E5"> user that would never</font>

433
00:19:09,050 --> 00:19:13,040
happen<font color="#E5E5E5"> but someone testing your</font>

434
00:19:11,330 --> 00:19:15,199
application<font color="#CCCCCC"> or maybe trying to</font><font color="#E5E5E5"> look for</font>

435
00:19:13,040 --> 00:19:17,120
<font color="#CCCCCC">weaknesses is going to try to exploit</font>

436
00:19:15,200 --> 00:19:19,310
that<font color="#CCCCCC"> by</font><font color="#E5E5E5"> sending in different data for</font>

437
00:19:17,120 --> 00:19:21,320
<font color="#E5E5E5">that particular parameter so that's a</font>

438
00:19:19,310 --> 00:19:24,200
clue<font color="#CCCCCC"> that maybe</font><font color="#E5E5E5"> this application is</font>

439
00:19:21,320 --> 00:19:26,450
<font color="#E5E5E5">being attacked by this user and so you</font>

440
00:19:24,200 --> 00:19:28,700
could block<font color="#E5E5E5"> that or a killer session or</font>

441
00:19:26,450 --> 00:19:31,760
do something<font color="#E5E5E5"> else similarly if you have</font>

442
00:19:28,700 --> 00:19:33,590
<font color="#E5E5E5">a</font><font color="#CCCCCC"> non numeric</font><font color="#E5E5E5"> input on an input field</font>

443
00:19:31,760 --> 00:19:35,020
<font color="#E5E5E5">maybe you have</font><font color="#CCCCCC"> Java Script or your</font>

444
00:19:33,590 --> 00:19:38,720
JavaScript framework in the browser

445
00:19:35,020 --> 00:19:40,250
<font color="#E5E5E5">enforces numeric values or digits but</font>

446
00:19:38,720 --> 00:19:41,810
suddenly you start your<font color="#CCCCCC"> application on</font>

447
00:19:40,250 --> 00:19:44,210
the server<font color="#CCCCCC"> side starts getting input</font>

448
00:19:41,810 --> 00:19:45,770
<font color="#CCCCCC">that's not numeric</font><font color="#E5E5E5"> it's another clue</font>

449
00:19:44,210 --> 00:19:48,260
<font color="#CCCCCC">that there may be an attack or at least</font>

450
00:19:45,770 --> 00:19:52,940
a pen test going<font color="#E5E5E5"> on and then also a</font>

451
00:19:48,260 --> 00:19:55,400
hidden<font color="#E5E5E5"> input field so sometimes HTML</font>

452
00:19:52,940 --> 00:19:58,760
forms dozens and dozens<font color="#E5E5E5"> of hidden input</font>

453
00:19:55,400 --> 00:20:01,310
fields in them again<font color="#E5E5E5"> normal user those</font>

454
00:19:58,760 --> 00:20:03,410
values would never change<font color="#CCCCCC"> the</font><font color="#E5E5E5"> whatever</font>

455
00:20:01,310 --> 00:20:05,179
the<font color="#CCCCCC"> value is</font><font color="#E5E5E5"> it's going to come</font><font color="#CCCCCC"> in to</font>

456
00:20:03,410 --> 00:20:07,970
the server that<font color="#E5E5E5"> way but if the value</font>

457
00:20:05,180 --> 00:20:10,040
start coming in differently<font color="#CCCCCC"> even if it's</font>

458
00:20:07,970 --> 00:20:11,900
<font color="#E5E5E5">not just you know sequel injection</font>

459
00:20:10,040 --> 00:20:14,330
<font color="#CCCCCC">attacks strings maybe it's</font><font color="#E5E5E5"> just regular</font>

460
00:20:11,900 --> 00:20:15,950
<font color="#E5E5E5">data but</font><font color="#CCCCCC"> that was different</font><font color="#E5E5E5"> than set by</font>

461
00:20:14,330 --> 00:20:18,850
the<font color="#E5E5E5"> application that's another clue</font><font color="#CCCCCC"> that</font>

462
00:20:15,950 --> 00:20:18,850
you could be under<font color="#CCCCCC"> attack</font>

463
00:20:21,669 --> 00:20:27,409
control number seven is protect data so

464
00:20:24,679 --> 00:20:29,450
<font color="#E5E5E5">that's pretty pretty generic sounding</font>

465
00:20:27,409 --> 00:20:30,980
<font color="#E5E5E5">right</font><font color="#CCCCCC"> so what does that mean</font>

466
00:20:29,450 --> 00:20:33,710
well<font color="#E5E5E5"> it means a lot of</font><font color="#CCCCCC"> different things</font>

467
00:20:30,980 --> 00:20:36,380
to<font color="#CCCCCC"> be honest one of</font><font color="#E5E5E5"> the most obvious is</font>

468
00:20:33,710 --> 00:20:39,860
encryption<font color="#E5E5E5"> of data encryption of data at</font>

469
00:20:36,380 --> 00:20:42,519
<font color="#E5E5E5">rest encryption of data in transit in</font>

470
00:20:39,860 --> 00:20:47,658
transit<font color="#E5E5E5"> of course we're talking about</font>

471
00:20:42,519 --> 00:20:49,549
<font color="#E5E5E5">TLS HTTPS type of communication it's</font>

472
00:20:47,659 --> 00:20:52,100
<font color="#E5E5E5">required for untrusted networks over the</font>

473
00:20:49,549 --> 00:20:55,220
<font color="#E5E5E5">Internet PCI for example requires that</font>

474
00:20:52,100 --> 00:20:57,620
to be done but<font color="#CCCCCC"> you should also maybe</font>

475
00:20:55,220 --> 00:20:59,480
consider<font color="#E5E5E5"> this encryption for internal</font>

476
00:20:57,620 --> 00:21:02,059
traffic<font color="#E5E5E5"> as well</font><font color="#CCCCCC"> you know we know that</font>

477
00:20:59,480 --> 00:21:04,399
<font color="#E5E5E5">you know Google and</font><font color="#CCCCCC"> and Microsoft and</font>

478
00:21:02,059 --> 00:21:07,070
<font color="#E5E5E5">other companies like that</font><font color="#CCCCCC"> once the NSA</font>

479
00:21:04,399 --> 00:21:08,689
revelations came out they started

480
00:21:07,070 --> 00:21:10,639
encrypting their internal traffic<font color="#E5E5E5"> in</font>

481
00:21:08,690 --> 00:21:13,899
their data centers<font color="#CCCCCC"> so that's something</font>

482
00:21:10,639 --> 00:21:19,668
that<font color="#E5E5E5"> you</font><font color="#CCCCCC"> should consider as well</font>

483
00:21:13,899 --> 00:21:22,969
encrypting data at rest very very easy

484
00:21:19,669 --> 00:21:25,159
sounding but not so easy<font color="#CCCCCC"> in practice</font><font color="#E5E5E5"> you</font>

485
00:21:22,970 --> 00:21:27,289
want<font color="#CCCCCC"> to make sure understand what data</font>

486
00:21:25,159 --> 00:21:30,139
<font color="#E5E5E5">needs to</font><font color="#CCCCCC"> be encrypted</font>

487
00:21:27,289 --> 00:21:33,260
<font color="#E5E5E5">you want to use vetted algorithms you</font>

488
00:21:30,139 --> 00:21:34,490
know peer<font color="#E5E5E5"> reviewed crypto libraries all</font>

489
00:21:33,260 --> 00:21:37,700
these things are important you don't

490
00:21:34,490 --> 00:21:40,490
<font color="#E5E5E5">want</font><font color="#CCCCCC"> to roll your own crypto solutions</font>

491
00:21:37,700 --> 00:21:42,169
<font color="#E5E5E5">and then the key</font><font color="#CCCCCC"> management aspect of it</font>

492
00:21:40,490 --> 00:21:44,059
is<font color="#CCCCCC"> also huge because</font><font color="#E5E5E5"> you</font><font color="#CCCCCC"> have to make</font>

493
00:21:42,169 --> 00:21:47,779
sure<font color="#E5E5E5"> your keys are not hard-coded</font>

494
00:21:44,059 --> 00:21:49,399
exposed rotated so forth<font color="#E5E5E5"> there's another</font>

495
00:21:47,779 --> 00:21:50,779
cheat sheet<font color="#CCCCCC"> for</font><font color="#E5E5E5"> this of course</font><font color="#CCCCCC"> this is</font>

496
00:21:49,399 --> 00:21:56,998
<font color="#E5E5E5">just kind</font><font color="#CCCCCC"> of</font><font color="#E5E5E5"> scratching</font><font color="#CCCCCC"> the surface of</font>

497
00:21:50,779 --> 00:21:58,529
<font color="#E5E5E5">that topic some other aspects</font>

498
00:21:56,999 --> 00:22:00,959
protecting<font color="#E5E5E5"> data that may not be</font><font color="#CCCCCC"> as</font>

499
00:21:58,529 --> 00:22:04,999
obvious as encryption<font color="#E5E5E5"> is storing</font>

500
00:22:00,959 --> 00:22:07,139
passwords securely the<font color="#E5E5E5"> chichi for that</font>

501
00:22:04,999 --> 00:22:08,819
<font color="#E5E5E5">because you don't</font><font color="#CCCCCC"> want to use</font><font color="#E5E5E5"> symmetric</font>

502
00:22:07,139 --> 00:22:10,769
encryption for storing passwords<font color="#CCCCCC"> pass</font>

503
00:22:08,819 --> 00:22:16,158
<font color="#E5E5E5">password storage shouldn't be reversible</font>

504
00:22:10,769 --> 00:22:20,639
which symmetric encryption<font color="#CCCCCC"> allows</font><font color="#E5E5E5"> also</font>

505
00:22:16,159 --> 00:22:25,019
protecting data means<font color="#E5E5E5"> avoiding sensitive</font>

506
00:22:20,639 --> 00:22:28,109
<font color="#E5E5E5">data appearing in cookies URLs browsers</font>

507
00:22:25,019 --> 00:22:30,389
and html5<font color="#E5E5E5"> local storage so before html5</font>

508
00:22:28,109 --> 00:22:32,489
the<font color="#E5E5E5"> only way a server-side</font><font color="#CCCCCC"> web app could</font>

509
00:22:30,389 --> 00:22:35,039
store data<font color="#CCCCCC"> and on a client-side was</font>

510
00:22:32,489 --> 00:22:38,609
<font color="#CCCCCC">really through cookies or</font><font color="#E5E5E5"> something</font>

511
00:22:35,039 --> 00:22:42,629
fancy like flash cookies<font color="#CCCCCC"> but with</font><font color="#E5E5E5"> html5</font>

512
00:22:38,609 --> 00:22:44,458
<font color="#E5E5E5">there's a whole framework around</font><font color="#CCCCCC"> servers</font>

513
00:22:42,629 --> 00:22:44,819
being able to store data<font color="#E5E5E5"> on the client</font>

514
00:22:44,459 --> 00:22:47,909
<font color="#E5E5E5">side</font>

515
00:22:44,819 --> 00:22:49,889
that's called<font color="#E5E5E5"> html5 local storage</font><font color="#CCCCCC"> so you</font>

516
00:22:47,909 --> 00:22:53,659
<font color="#E5E5E5">have to be careful on you're not storing</font>

517
00:22:49,889 --> 00:22:57,508
<font color="#E5E5E5">anything sensitive in in that location</font>

518
00:22:53,659 --> 00:23:00,839
<font color="#CCCCCC">log files on the server temp files even</font>

519
00:22:57,509 --> 00:23:04,079
memory on the server<font color="#CCCCCC"> PCI doesn't like to</font>

520
00:23:00,839 --> 00:23:05,698
have<font color="#E5E5E5"> credit card numbers and things in a</font>

521
00:23:04,079 --> 00:23:08,938
memory on the server so there's ways<font color="#CCCCCC"> to</font>

522
00:23:05,699 --> 00:23:11,219
kind<font color="#E5E5E5"> of clean that out</font><font color="#CCCCCC"> and then mobile</font>

523
00:23:08,939 --> 00:23:13,589
<font color="#E5E5E5">devices mobile apps</font><font color="#CCCCCC"> haven't really</font>

524
00:23:11,219 --> 00:23:15,899
talked much<font color="#CCCCCC"> about mobile apps yet but</font><font color="#E5E5E5"> a</font>

525
00:23:13,589 --> 00:23:19,438
lot<font color="#CCCCCC"> of</font><font color="#E5E5E5"> these same proactive controls</font>

526
00:23:15,899 --> 00:23:22,549
<font color="#E5E5E5">apply to mobile</font><font color="#CCCCCC"> apps as well</font><font color="#E5E5E5"> obviously</font>

527
00:23:19,439 --> 00:23:24,689
you can store<font color="#E5E5E5"> data on a mobile device</font>

528
00:23:22,549 --> 00:23:26,699
<font color="#E5E5E5">not recommended and you have to be</font>

529
00:23:24,689 --> 00:23:40,709
careful with<font color="#CCCCCC"> that so you're not</font><font color="#E5E5E5"> exposing</font>

530
00:23:26,699 --> 00:23:42,059
<font color="#CCCCCC">that data implement access controls all</font>

531
00:23:40,709 --> 00:23:44,939
right so control number<font color="#E5E5E5"> six is</font>

532
00:23:42,059 --> 00:23:46,019
implementing access controls so what

533
00:23:44,939 --> 00:23:49,169
we're really<font color="#E5E5E5"> talking about here is</font>

534
00:23:46,019 --> 00:23:50,639
authorization authorization of course

535
00:23:49,169 --> 00:23:52,529
<font color="#E5E5E5">different than authentication</font>

536
00:23:50,639 --> 00:23:55,019
authorization is enforcing permissions

537
00:23:52,529 --> 00:23:58,049
on entities that have already been

538
00:23:55,019 --> 00:24:00,329
authenticated<font color="#E5E5E5"> so you need to have</font><font color="#CCCCCC"> access</font>

539
00:23:58,049 --> 00:24:03,749
controls to avoid things like horizontal

540
00:24:00,329 --> 00:24:07,559
<font color="#CCCCCC">and vertical privilege escalation force</font>

541
00:24:03,749 --> 00:24:10,229
browsing attacks things like that so in

542
00:24:07,559 --> 00:24:13,129
the proactive controls document<font color="#E5E5E5"> which</font>

543
00:24:10,229 --> 00:24:13,129
<font color="#E5E5E5">you can download on</font><font color="#CCCCCC"> the website</font>

544
00:24:13,190 --> 00:24:19,220
they make it<font color="#CCCCCC"> really</font><font color="#E5E5E5"> clear that the</font>

545
00:24:16,029 --> 00:24:21,049
design<font color="#E5E5E5"> of the model of authorization and</font>

546
00:24:19,220 --> 00:24:24,200
access control should really be designed

547
00:24:21,049 --> 00:24:26,389
at the outset of the<font color="#CCCCCC"> project it's</font><font color="#E5E5E5"> really</font>

548
00:24:24,200 --> 00:24:29,499
difficult<font color="#E5E5E5"> to bolt on an authorization</font>

549
00:24:26,389 --> 00:24:32,449
model<font color="#E5E5E5"> after it's already been developed</font>

550
00:24:29,499 --> 00:24:35,960
<font color="#CCCCCC">it becomes spaghetti code and often in</font>

551
00:24:32,450 --> 00:24:38,359
<font color="#E5E5E5">that scenario</font><font color="#CCCCCC"> so best</font><font color="#E5E5E5"> practices</font><font color="#CCCCCC"> they're</font>

552
00:24:35,960 --> 00:24:40,389
really to route all<font color="#CCCCCC"> your</font><font color="#E5E5E5"> requests</font>

553
00:24:38,359 --> 00:24:45,619
through a centralized security check<font color="#E5E5E5"> and</font>

554
00:24:40,389 --> 00:24:47,508
do a default deny<font color="#E5E5E5"> so that if the no</font>

555
00:24:45,619 --> 00:24:50,629
information is provided then access

556
00:24:47,509 --> 00:24:53,299
<font color="#E5E5E5">should not be granted and then you have</font>

557
00:24:50,629 --> 00:24:57,248
to check and<font color="#CCCCCC"> I know we do this in our</font>

558
00:24:53,299 --> 00:24:59,809
<font color="#CCCCCC">claws</font><font color="#E5E5E5"> product but you have to check the</font>

559
00:24:57,249 --> 00:25:01,599
<font color="#E5E5E5">action that the user is trying to</font><font color="#CCCCCC"> do</font><font color="#E5E5E5"> is</font>

560
00:24:59,809 --> 00:25:04,700
one checked and easy<font color="#E5E5E5"> to be done but also</font>

561
00:25:01,599 --> 00:25:06,529
the<font color="#CCCCCC"> object being acted upon you need to</font>

562
00:25:04,700 --> 00:25:12,440
make sure<font color="#CCCCCC"> that the user has permission</font>

563
00:25:06,529 --> 00:25:16,489
for that<font color="#E5E5E5"> particular object so on some</font>

564
00:25:12,440 --> 00:25:19,669
code<font color="#CCCCCC"> here examples the the</font>

565
00:25:16,489 --> 00:25:22,220
recommendation is to enforce<font color="#E5E5E5"> separately</font>

566
00:25:19,669 --> 00:25:24,559
<font color="#E5E5E5">the access control decision from the</font>

567
00:25:22,220 --> 00:25:27,950
actual<font color="#CCCCCC"> decision-making</font><font color="#E5E5E5"> process in other</font>

568
00:25:24,559 --> 00:25:30,139
words let's<font color="#E5E5E5"> say you have a method called</font>

569
00:25:27,950 --> 00:25:32,359
<font color="#E5E5E5">has access every user object has a</font>

570
00:25:30,139 --> 00:25:34,039
method<font color="#CCCCCC"> called has access that's</font><font color="#E5E5E5"> per and</font>

571
00:25:32,359 --> 00:25:35,059
then you pass in the particular action

572
00:25:34,039 --> 00:25:37,519
<font color="#E5E5E5">being requested</font>

573
00:25:35,059 --> 00:25:39,710
<font color="#E5E5E5">so that's preferred over the second</font>

574
00:25:37,519 --> 00:25:42,019
model<font color="#CCCCCC"> here where you're basically</font>

575
00:25:39,710 --> 00:25:45,889
<font color="#CCCCCC">checking the user role every single time</font>

576
00:25:42,019 --> 00:25:47,989
so in this case the access control

577
00:25:45,889 --> 00:25:52,969
decision-making happens and it has

578
00:25:47,989 --> 00:25:55,549
access<font color="#E5E5E5"> method</font><font color="#CCCCCC"> whereas here</font><font color="#E5E5E5"> it's all</font>

579
00:25:52,970 --> 00:25:56,840
happening in<font color="#E5E5E5"> one place</font><font color="#CCCCCC"> the decision of</font>

580
00:25:55,549 --> 00:25:58,940
whether<font color="#E5E5E5"> or not to</font><font color="#CCCCCC"> allow and the</font>

581
00:25:56,840 --> 00:26:00,769
enforcement<font color="#CCCCCC"> is happening together</font><font color="#E5E5E5"> here</font>

582
00:25:58,940 --> 00:26:04,190
with this<font color="#E5E5E5"> model it's much more</font>

583
00:26:00,769 --> 00:26:06,889
maintainable<font color="#CCCCCC"> you know code audit</font>

584
00:26:04,190 --> 00:26:12,400
auditing is much easier<font color="#E5E5E5"> with this with</font>

585
00:26:06,889 --> 00:26:14,139
this first model control

586
00:26:12,400 --> 00:26:17,920
five is implement identity and

587
00:26:14,140 --> 00:26:19,630
authentication<font color="#E5E5E5"> controls so similar to</font>

588
00:26:17,920 --> 00:26:26,680
<font color="#E5E5E5">access controls</font><font color="#CCCCCC"> then now we're talking</font>

589
00:26:19,630 --> 00:26:27,820
about<font color="#E5E5E5"> authentication so this is more</font>

590
00:26:26,680 --> 00:26:29,490
broad than<font color="#CCCCCC"> that though because</font>

591
00:26:27,820 --> 00:26:31,990
authentication is more than just

592
00:26:29,490 --> 00:26:34,050
<font color="#E5E5E5">username and password please</font>

593
00:26:31,990 --> 00:26:37,870
authenticate me<font color="#E5E5E5"> it also encompasses</font>

594
00:26:34,050 --> 00:26:40,270
<font color="#E5E5E5">session management</font><font color="#CCCCCC"> password storage and</font>

595
00:26:37,870 --> 00:26:41,889
complexity and forgot password

596
00:26:40,270 --> 00:26:43,420
functionality<font color="#E5E5E5"> which is something near</font>

597
00:26:41,890 --> 00:26:46,630
and<font color="#E5E5E5"> dear</font><font color="#CCCCCC"> to my heart since</font><font color="#E5E5E5"> I wrote the</font>

598
00:26:43,420 --> 00:26:48,580
<font color="#E5E5E5">cheat sheet on that but now each one of</font>

599
00:26:46,630 --> 00:26:52,420
<font color="#CCCCCC">these is</font><font color="#E5E5E5"> like whole topic</font><font color="#CCCCCC"> I mean an</font><font color="#E5E5E5"> hour</font>

600
00:26:48,580 --> 00:26:54,550
<font color="#E5E5E5">long talk in itself so it's just kind</font><font color="#CCCCCC"> of</font>

601
00:26:52,420 --> 00:26:57,760
<font color="#E5E5E5">scratching</font><font color="#CCCCCC"> the surface</font><font color="#E5E5E5"> for example just</font>

602
00:26:54,550 --> 00:27:00,399
picking session management all kinds of

603
00:26:57,760 --> 00:27:02,110
best practices proactive steps you can

604
00:27:00,400 --> 00:27:04,420
do in<font color="#CCCCCC"> your application to make</font><font color="#E5E5E5"> sure that</font>

605
00:27:02,110 --> 00:27:06,610
<font color="#E5E5E5">session management is secure for example</font>

606
00:27:04,420 --> 00:27:09,010
don't store<font color="#E5E5E5"> or excuse</font><font color="#CCCCCC"> me you should</font>

607
00:27:06,610 --> 00:27:11,080
store the session<font color="#CCCCCC"> token in a cookie you</font>

608
00:27:09,010 --> 00:27:12,820
<font color="#CCCCCC">shouldn't store</font><font color="#E5E5E5"> it in a URL for example</font>

609
00:27:11,080 --> 00:27:16,210
<font color="#CCCCCC">you</font><font color="#E5E5E5"> don't want</font><font color="#CCCCCC"> to expose session tokens</font>

610
00:27:12,820 --> 00:27:20,080
<font color="#CCCCCC">in URLs you got to make sure the token</font>

611
00:27:16,210 --> 00:27:23,400
is<font color="#CCCCCC"> chris cryptographically strong you</font>

612
00:27:20,080 --> 00:27:28,419
need<font color="#CCCCCC"> to have an inactivity</font><font color="#E5E5E5"> timeout also</font>

613
00:27:23,400 --> 00:27:32,530
absolute timeout so one of<font color="#E5E5E5"> the things</font>

614
00:27:28,420 --> 00:27:35,440
that Google does for example<font color="#E5E5E5"> is you may</font>

615
00:27:32,530 --> 00:27:37,180
be logged in to<font color="#CCCCCC"> your to your</font><font color="#E5E5E5"> Gmail but</font>

616
00:27:35,440 --> 00:27:39,940
maybe once a<font color="#CCCCCC"> month or something</font>

617
00:27:37,180 --> 00:27:42,490
it forces you to<font color="#E5E5E5"> log in</font><font color="#CCCCCC"> again and supply</font>

618
00:27:39,940 --> 00:27:45,880
your credentials<font color="#E5E5E5"> so that's an absolute</font>

619
00:27:42,490 --> 00:27:48,910
timeout<font color="#E5E5E5"> and it's something that it's the</font>

620
00:27:45,880 --> 00:27:50,770
best practice saying<font color="#CCCCCC"> ok I know that you</font>

621
00:27:48,910 --> 00:27:52,810
have a valid<font color="#CCCCCC"> token but you've been</font><font color="#E5E5E5"> this</font>

622
00:27:50,770 --> 00:27:55,360
token has been existing for<font color="#E5E5E5"> you know</font>

623
00:27:52,810 --> 00:27:56,500
<font color="#E5E5E5">like a month so now it's I'm going to</font>

624
00:27:55,360 --> 00:28:01,360
<font color="#E5E5E5">actually time you out and you have to</font>

625
00:27:56,500 --> 00:28:03,940
<font color="#E5E5E5">log in again</font><font color="#CCCCCC"> another</font><font color="#E5E5E5"> best</font><font color="#CCCCCC"> practice for</font>

626
00:28:01,360 --> 00:28:07,000
session management is creating a new

627
00:28:03,940 --> 00:28:08,590
session<font color="#E5E5E5"> token when you log in so the</font>

628
00:28:07,000 --> 00:28:10,360
idea is that<font color="#E5E5E5"> maybe somebody was able to</font>

629
00:28:08,590 --> 00:28:12,399
compromise your session token and hijack

630
00:28:10,360 --> 00:28:14,409
your session prior to authentication<font color="#CCCCCC"> and</font>

631
00:28:12,400 --> 00:28:18,280
then<font color="#E5E5E5"> once you log in they've got</font><font color="#CCCCCC"> access</font>

632
00:28:14,410 --> 00:28:20,050
<font color="#CCCCCC">to</font><font color="#E5E5E5"> your account if you take the step in</font>

633
00:28:18,280 --> 00:28:23,920
your web app<font color="#CCCCCC"> to generate a new token</font>

634
00:28:20,050 --> 00:28:25,270
upon successful login and invalidate the

635
00:28:23,920 --> 00:28:26,179
previous one<font color="#E5E5E5"> you're going</font><font color="#CCCCCC"> to</font><font color="#E5E5E5"> be</font>

636
00:28:25,270 --> 00:28:28,850
<font color="#E5E5E5">protected against</font>

637
00:28:26,179 --> 00:28:30,499
kind<font color="#E5E5E5"> of attack and there's cookie</font>

638
00:28:28,850 --> 00:28:32,689
attributes around session<font color="#CCCCCC"> management it</font>

639
00:28:30,499 --> 00:28:34,669
needs to be<font color="#E5E5E5"> secure HTTP on the same</font><font color="#CCCCCC"> site</font>

640
00:28:32,690 --> 00:28:37,249
same site<font color="#CCCCCC"> you may not be</font><font color="#E5E5E5"> familiar with</font>

641
00:28:34,669 --> 00:28:38,960
<font color="#E5E5E5">that's a new attribute</font><font color="#CCCCCC"> of a cookie that</font>

642
00:28:37,249 --> 00:28:42,529
<font color="#CCCCCC">browsers are just</font><font color="#E5E5E5"> starting now</font><font color="#CCCCCC"> to</font>

643
00:28:38,960 --> 00:28:44,419
support<font color="#CCCCCC"> chrome being the first one same</font>

644
00:28:42,529 --> 00:28:45,919
site is an attribute<font color="#CCCCCC"> of a cookie that's</font>

645
00:28:44,419 --> 00:28:48,470
<font color="#E5E5E5">going to quash cross-site request</font>

646
00:28:45,919 --> 00:28:51,679
forgery<font color="#CCCCCC"> so you're going</font><font color="#E5E5E5"> to start to see</font>

647
00:28:48,470 --> 00:28:54,139
that<font color="#E5E5E5"> probably show up in assessment</font>

648
00:28:51,679 --> 00:28:56,990
reports where<font color="#CCCCCC"> a cookie is missing the</font>

649
00:28:54,139 --> 00:28:59,389
<font color="#E5E5E5">same site attribute so wanted to mention</font>

650
00:28:56,990 --> 00:29:05,679
that since<font color="#E5E5E5"> that's new and everyone may</font>

651
00:28:59,389 --> 00:29:08,418
not have be familiar control number<font color="#CCCCCC"> for</font>

652
00:29:05,679 --> 00:29:09,320
<font color="#E5E5E5">validate all</font><font color="#CCCCCC"> inputs so this is probably</font>

653
00:29:08,419 --> 00:29:10,940
<font color="#E5E5E5">kind of a</font><font color="#CCCCCC"> no-brainer</font>

654
00:29:09,320 --> 00:29:15,769
I think everyone's familiar with

655
00:29:10,940 --> 00:29:18,679
<font color="#E5E5E5">validating inputs</font><font color="#CCCCCC"> you know any data that</font>

656
00:29:15,769 --> 00:29:21,019
a user can<font color="#E5E5E5"> influence in any way needs to</font>

657
00:29:18,679 --> 00:29:22,580
be<font color="#E5E5E5"> validated so it's not</font><font color="#CCCCCC"> just visible</font>

658
00:29:21,019 --> 00:29:25,639
inputs on a<font color="#E5E5E5"> web page it's really</font>

659
00:29:22,580 --> 00:29:27,230
<font color="#E5E5E5">anything in the HTTP request whether</font>

660
00:29:25,639 --> 00:29:31,428
that's in<font color="#E5E5E5"> the body of the request that</font>

661
00:29:27,230 --> 00:29:33,320
URL the headers anything in<font color="#E5E5E5"> that can be</font>

662
00:29:31,429 --> 00:29:35,899
forged<font color="#E5E5E5"> or tampered with</font><font color="#CCCCCC"> so it needs to</font>

663
00:29:33,320 --> 00:29:37,730
<font color="#CCCCCC">be validated</font><font color="#E5E5E5"> there's a concept of</font>

664
00:29:35,899 --> 00:29:40,129
syntactic validation<font color="#E5E5E5"> which is</font>

665
00:29:37,730 --> 00:29:43,369
essentially you know does the format of

666
00:29:40,129 --> 00:29:45,619
the data<font color="#E5E5E5"> match what I expect so it's a</font>

667
00:29:43,369 --> 00:29:48,019
<font color="#CCCCCC">10 digit</font><font color="#E5E5E5"> account number is the data</font>

668
00:29:45,619 --> 00:29:50,809
actually<font color="#CCCCCC"> 10 digits</font><font color="#E5E5E5"> that I receive as</font>

669
00:29:48,019 --> 00:29:53,090
input<font color="#E5E5E5"> so that's a syntactic validation</font>

670
00:29:50,809 --> 00:29:55,879
then there's semantic validation which

671
00:29:53,090 --> 00:29:58,129
is is that meaningful for the user<font color="#E5E5E5"> so</font>

672
00:29:55,879 --> 00:30:00,439
that<font color="#E5E5E5"> kind of goes relates to what I was</font>

673
00:29:58,129 --> 00:30:02,539
<font color="#E5E5E5">saying earlier like is the action being</font>

674
00:30:00,440 --> 00:30:05,600
requested<font color="#CCCCCC"> is that actually valid for</font>

675
00:30:02,539 --> 00:30:08,779
that user<font color="#CCCCCC"> so that's um you need</font><font color="#E5E5E5"> to</font>

676
00:30:05,600 --> 00:30:10,998
validate that that<font color="#CCCCCC"> request</font><font color="#E5E5E5"> is permitted</font>

677
00:30:08,779 --> 00:30:15,559
<font color="#E5E5E5">for</font><font color="#CCCCCC"> the object that's being acted upon</font>

678
00:30:10,999 --> 00:30:17,749
<font color="#E5E5E5">that's</font><font color="#CCCCCC"> semantics validation can anyone</font>

679
00:30:15,559 --> 00:30:20,168
tell me<font color="#E5E5E5"> what type of data validation</font>

680
00:30:17,749 --> 00:30:20,169
this is

681
00:30:26,440 --> 00:30:36,230
he's on a<font color="#E5E5E5"> unicycle by the way this is</font>

682
00:30:33,500 --> 00:30:41,390
<font color="#E5E5E5">blacklisting this is</font><font color="#CCCCCC"> blacklisting input</font>

683
00:30:36,230 --> 00:30:47,300
validation<font color="#CCCCCC"> and so he's flown</font><font color="#E5E5E5"> right by no</font>

684
00:30:41,390 --> 00:30:51,080
problems so types of validating data<font color="#E5E5E5"> is</font>

685
00:30:47,300 --> 00:30:53,210
a<font color="#CCCCCC"> blacklisting approach better</font><font color="#E5E5E5"> than</font>

686
00:30:51,080 --> 00:30:54,860
nothing<font color="#CCCCCC"> but again there may</font><font color="#E5E5E5"> be you may</font>

687
00:30:53,210 --> 00:30:55,690
have forgotten<font color="#CCCCCC"> something</font><font color="#E5E5E5"> so you can get</font>

688
00:30:54,860 --> 00:30:59,840
around<font color="#CCCCCC"> it</font>

689
00:30:55,690 --> 00:31:02,570
whitelisting much more secure usually if

690
00:30:59,840 --> 00:31:04,070
you can use regular<font color="#E5E5E5"> expressions that's a</font>

691
00:31:02,570 --> 00:31:05,870
great way to do<font color="#CCCCCC"> whitelisting data</font>

692
00:31:04,070 --> 00:31:09,020
validation and<font color="#E5E5E5"> it's the most secure way</font>

693
00:31:05,870 --> 00:31:11,389
to do it also you've got<font color="#E5E5E5"> to do the input</font>

694
00:31:09,020 --> 00:31:13,760
validation on the server side<font color="#E5E5E5"> you can't</font>

695
00:31:11,390 --> 00:31:16,280
expect something in<font color="#E5E5E5"> the browser that's</font>

696
00:31:13,760 --> 00:31:17,629
<font color="#E5E5E5">validating your data to help with</font>

697
00:31:16,280 --> 00:31:19,550
security<font color="#E5E5E5"> now there's nothing wrong</font><font color="#CCCCCC"> with</font>

698
00:31:17,630 --> 00:31:22,670
<font color="#E5E5E5">it you can certainly validate data on</font>

699
00:31:19,550 --> 00:31:23,930
the<font color="#CCCCCC"> client-side</font><font color="#E5E5E5"> in the browser but again</font>

700
00:31:22,670 --> 00:31:27,020
it<font color="#CCCCCC"> doesn't know that doesn't do</font><font color="#E5E5E5"> anything</font>

701
00:31:23,930 --> 00:31:29,840
for<font color="#E5E5E5"> security that can be</font><font color="#CCCCCC"> bypassed very</font>

702
00:31:27,020 --> 00:31:31,430
easily you know<font color="#E5E5E5"> just</font><font color="#CCCCCC"> use an HTTP proxy</font>

703
00:31:29,840 --> 00:31:34,909
like burp or zap or something like that

704
00:31:31,430 --> 00:31:36,140
<font color="#CCCCCC">oh and now</font><font color="#E5E5E5"> I also keep in mind that</font><font color="#CCCCCC"> just</font>

705
00:31:34,910 --> 00:31:38,600
<font color="#E5E5E5">because</font><font color="#CCCCCC"> data has been validated</font>

706
00:31:36,140 --> 00:31:44,260
thoroughly rigorous rigorously validated

707
00:31:38,600 --> 00:31:47,780
it doesn't mean it's safe<font color="#CCCCCC"> so you know a</font>

708
00:31:44,260 --> 00:31:52,220
single tick or an apostrophe<font color="#E5E5E5"> and a name</font>

709
00:31:47,780 --> 00:31:54,770
that's<font color="#E5E5E5"> a valid character you know for</font>

710
00:31:52,220 --> 00:31:56,270
O'Reilly<font color="#E5E5E5"> and names like that but it's</font>

711
00:31:54,770 --> 00:31:57,650
also a dangerous<font color="#CCCCCC"> character</font><font color="#E5E5E5"> because it</font>

712
00:31:56,270 --> 00:31:59,690
could<font color="#CCCCCC"> can you know lead to sequel</font>

713
00:31:57,650 --> 00:32:02,240
injection<font color="#E5E5E5"> so keep that in mind</font>

714
00:31:59,690 --> 00:32:05,270
validating data hugely important but not

715
00:32:02,240 --> 00:32:09,380
necessarily<font color="#E5E5E5"> the end-all</font><font color="#CCCCCC"> as far</font><font color="#E5E5E5"> as</font>

716
00:32:05,270 --> 00:32:11,389
meaning the<font color="#E5E5E5"> data is safe to use so the</font>

717
00:32:09,380 --> 00:32:12,860
next step in making<font color="#CCCCCC"> sure data is safe to</font>

718
00:32:11,390 --> 00:32:17,750
use<font color="#E5E5E5"> would be in code data so that's</font>

719
00:32:12,860 --> 00:32:19,459
control number<font color="#CCCCCC"> three and so this is</font>

720
00:32:17,750 --> 00:32:20,390
going<font color="#E5E5E5"> to give you powerful protection</font>

721
00:32:19,460 --> 00:32:23,510
against many attacks especially

722
00:32:20,390 --> 00:32:25,430
cross-site scripting<font color="#CCCCCC"> this is where the</font>

723
00:32:23,510 --> 00:32:27,680
data<font color="#CCCCCC"> is converted to</font><font color="#E5E5E5"> an</font><font color="#CCCCCC"> equivalent form</font>

724
00:32:25,430 --> 00:32:29,330
that's no<font color="#E5E5E5"> longer dangerous for the</font>

725
00:32:27,680 --> 00:32:31,850
targeted interpreter whether the

726
00:32:29,330 --> 00:32:35,379
interpreter is a browser or a database

727
00:32:31,850 --> 00:32:37,919
<font color="#E5E5E5">or encode this</font>

728
00:32:35,380 --> 00:32:40,360
characters<font color="#CCCCCC"> that appear within the</font><font color="#E5E5E5"> data I</font>

729
00:32:37,920 --> 00:32:41,710
need to encode it at least for

730
00:32:40,360 --> 00:32:44,139
<font color="#CCCCCC">cross-site scripting need to</font><font color="#E5E5E5"> encode that</font>

731
00:32:41,710 --> 00:32:47,740
<font color="#E5E5E5">data just</font><font color="#CCCCCC"> as it's added to the HTML so</font>

732
00:32:44,140 --> 00:32:49,180
that's<font color="#E5E5E5"> called output encoding it's</font>

733
00:32:47,740 --> 00:32:50,440
pretty<font color="#E5E5E5"> tricky though on there's</font>

734
00:32:49,180 --> 00:32:54,310
different types of<font color="#E5E5E5"> coding a lot of</font>

735
00:32:50,440 --> 00:32:58,240
different types of encoding some

736
00:32:54,310 --> 00:33:01,000
examples just<font color="#E5E5E5"> in the browser world or</font>

737
00:32:58,240 --> 00:33:03,670
the HTML world would be regular HTML

738
00:33:01,000 --> 00:33:07,330
<font color="#CCCCCC">encoding</font><font color="#E5E5E5"> and so I put</font><font color="#CCCCCC"> some examples of</font>

739
00:33:03,670 --> 00:33:09,730
that down here<font color="#CCCCCC"> this</font><font color="#E5E5E5"> is HTML encoding</font>

740
00:33:07,330 --> 00:33:11,860
that's different than URL encoding URL

741
00:33:09,730 --> 00:33:14,740
encoding is different if your data is

742
00:33:11,860 --> 00:33:16,300
<font color="#E5E5E5">going into</font><font color="#CCCCCC"> a URL</font><font color="#E5E5E5"> you need to use URL</font>

743
00:33:14,740 --> 00:33:18,370
<font color="#E5E5E5">encoding it's also different than</font>

744
00:33:16,300 --> 00:33:21,159
<font color="#CCCCCC">JavaScript escaping</font><font color="#E5E5E5"> JavaScript escaping</font>

745
00:33:18,370 --> 00:33:23,709
it's all<font color="#E5E5E5"> different syntax</font><font color="#CCCCCC"> so it's not</font>

746
00:33:21,160 --> 00:33:25,210
easy<font color="#E5E5E5"> and there's libraries to</font><font color="#CCCCCC"> help with</font>

747
00:33:23,710 --> 00:33:25,840
this<font color="#E5E5E5"> encoding so developers don't make</font>

748
00:33:25,210 --> 00:33:27,670
mistakes

749
00:33:25,840 --> 00:33:29,560
<font color="#CCCCCC">Oh</font><font color="#E5E5E5"> wasp have some libraries and coding</font>

750
00:33:27,670 --> 00:33:32,200
libraries to help<font color="#CCCCCC"> with that a lot of the</font>

751
00:33:29,560 --> 00:33:33,940
frameworks<font color="#CCCCCC"> or platforms</font><font color="#E5E5E5"> that developers</font>

752
00:33:32,200 --> 00:33:35,140
are<font color="#CCCCCC"> using have these built-in encoding</font>

753
00:33:33,940 --> 00:33:37,390
libraries but if they don't do the

754
00:33:35,140 --> 00:33:39,820
encoding<font color="#CCCCCC"> then you could be vulnerable</font><font color="#E5E5E5"> so</font>

755
00:33:37,390 --> 00:33:41,290
that's why this<font color="#E5E5E5"> proactive control is so</font>

756
00:33:39,820 --> 00:33:45,990
high<font color="#E5E5E5"> on the list we're up to number-3</font>

757
00:33:41,290 --> 00:33:49,780
<font color="#E5E5E5">now last thing is</font><font color="#CCCCCC"> don't forget that</font>

758
00:33:45,990 --> 00:33:51,550
<font color="#CCCCCC">mobile apps</font><font color="#E5E5E5"> back to mobile apps they use</font>

759
00:33:49,780 --> 00:33:54,010
a what's called<font color="#CCCCCC"> a webview so that's</font>

760
00:33:51,550 --> 00:33:56,710
essentially<font color="#E5E5E5"> a web page in the mobile app</font>

761
00:33:54,010 --> 00:33:58,629
<font color="#E5E5E5">itself and so you can still have the</font>

762
00:33:56,710 --> 00:34:00,280
cross-site scripting issues<font color="#E5E5E5"> within a</font>

763
00:33:58,630 --> 00:34:01,930
<font color="#CCCCCC">webview</font><font color="#E5E5E5"> and a mobile app</font><font color="#CCCCCC"> so you have to</font>

764
00:34:00,280 --> 00:34:05,530
remember that if your mobile<font color="#CCCCCC"> app</font>

765
00:34:01,930 --> 00:34:08,350
developers are<font color="#CCCCCC"> doing that</font><font color="#E5E5E5"> all</font><font color="#CCCCCC"> right</font>

766
00:34:05,530 --> 00:34:09,429
we're down<font color="#E5E5E5"> to the</font><font color="#CCCCCC"> top</font><font color="#E5E5E5"> two now or up to</font>

767
00:34:08,350 --> 00:34:15,969
<font color="#E5E5E5">control number two which is</font>

768
00:34:09,429 --> 00:34:19,960
parameterised queries and so the purpose

769
00:34:15,969 --> 00:34:24,399
is<font color="#E5E5E5"> to prevent sequel injection I'm sure</font>

770
00:34:19,960 --> 00:34:27,790
most of you have<font color="#CCCCCC"> seen</font><font color="#E5E5E5"> this comic for</font>

771
00:34:24,399 --> 00:34:34,179
Mexique ad but it's it's<font color="#E5E5E5"> the Bobby</font>

772
00:34:27,790 --> 00:34:36,250
<font color="#CCCCCC">table's little Bobby</font><font color="#E5E5E5"> tables strip so</font>

773
00:34:34,179 --> 00:34:40,090
there's one thing<font color="#E5E5E5"> that's not right</font>

774
00:34:36,250 --> 00:34:45,070
though it's a great<font color="#CCCCCC"> it's a great</font><font color="#E5E5E5"> very</font>

775
00:34:40,090 --> 00:34:47,480
famous but I crossed out this part about

776
00:34:45,070 --> 00:34:50,359
I hope I hope you've<font color="#E5E5E5"> learned</font>

777
00:34:47,480 --> 00:34:51,740
to sanitize your database inputs because

778
00:34:50,359 --> 00:34:53,869
that's<font color="#E5E5E5"> not how you stop cross-site</font>

779
00:34:51,739 --> 00:34:58,609
scripting so in this example across<font color="#CCCCCC"> the</font>

780
00:34:53,869 --> 00:35:00,560
<font color="#CCCCCC">ice could</font><font color="#E5E5E5"> sorry sequel injection you</font>

781
00:34:58,609 --> 00:35:03,350
don't say you don't stop sequel

782
00:35:00,560 --> 00:35:06,140
injection by sanitizing inputs you<font color="#E5E5E5"> stop</font>

783
00:35:03,350 --> 00:35:08,660
it by parameterizing queries<font color="#E5E5E5"> so I love</font>

784
00:35:06,140 --> 00:35:14,629
<font color="#E5E5E5">this comic but it's unfortunately not</font>

785
00:35:08,660 --> 00:35:15,980
quite<font color="#E5E5E5"> right technically so I</font><font color="#CCCCCC"> think the</font>

786
00:35:14,630 --> 00:35:19,040
best way to illustrate<font color="#E5E5E5"> parameterizing</font>

787
00:35:15,980 --> 00:35:22,580
queries is with a code example<font color="#E5E5E5"> so I have</font>

788
00:35:19,040 --> 00:35:24,560
some Java code here<font color="#E5E5E5"> and we have a couple</font>

789
00:35:22,580 --> 00:35:26,840
<font color="#E5E5E5">of inputs coming</font><font color="#CCCCCC"> into</font><font color="#E5E5E5"> the application</font>

790
00:35:24,560 --> 00:35:29,060
from the<font color="#E5E5E5"> HTTP</font><font color="#CCCCCC"> request we have a new name</font>

791
00:35:26,840 --> 00:35:31,520
parameter and we have an ID<font color="#CCCCCC"> parameter</font>

792
00:35:29,060 --> 00:35:33,140
and those get stuffed into<font color="#CCCCCC"> a couple</font>

793
00:35:31,520 --> 00:35:36,530
variables<font color="#E5E5E5"> a string variable and an</font>

794
00:35:33,140 --> 00:35:38,779
integer<font color="#CCCCCC"> variable</font><font color="#E5E5E5"> and</font><font color="#CCCCCC"> then string</font>

795
00:35:36,530 --> 00:35:41,660
concatenation<font color="#E5E5E5"> on the third line is being</font>

796
00:35:38,780 --> 00:35:45,680
used<font color="#E5E5E5"> to build a sequel query and so this</font>

797
00:35:41,660 --> 00:35:47,868
is this<font color="#E5E5E5"> is the very insecure part the</font>

798
00:35:45,680 --> 00:35:49,910
new name<font color="#E5E5E5"> variable and the ID variable</font>

799
00:35:47,869 --> 00:35:53,900
are not trusted they're coming in<font color="#E5E5E5"> from</font>

800
00:35:49,910 --> 00:35:55,970
the user in an HTTP<font color="#CCCCCC"> request</font><font color="#E5E5E5"> and so if</font>

801
00:35:53,900 --> 00:35:59,119
they<font color="#E5E5E5"> are crafted if that data is crafted</font>

802
00:35:55,970 --> 00:36:02,240
in just such a way<font color="#E5E5E5"> the user can modify</font>

803
00:35:59,119 --> 00:36:04,490
<font color="#E5E5E5">the sequel query and do nefarious</font><font color="#CCCCCC"> things</font>

804
00:36:02,240 --> 00:36:06,290
so this<font color="#E5E5E5"> is really</font><font color="#CCCCCC"> the heart of sequel</font>

805
00:36:04,490 --> 00:36:11,049
injection here it's the string

806
00:36:06,290 --> 00:36:14,750
concatenation<font color="#E5E5E5"> code so let's look at a</font>

807
00:36:11,050 --> 00:36:18,200
equivalent<font color="#E5E5E5"> in with using parameterised</font>

808
00:36:14,750 --> 00:36:21,680
queries and so again this is<font color="#E5E5E5"> Java so in</font>

809
00:36:18,200 --> 00:36:25,310
the Java world we want to use a<font color="#E5E5E5"> an</font>

810
00:36:21,680 --> 00:36:27,759
<font color="#E5E5E5">object called preparedstatement so in</font>

811
00:36:25,310 --> 00:36:30,859
this case we still have inputs<font color="#E5E5E5"> coming in</font>

812
00:36:27,760 --> 00:36:34,450
new name and<font color="#E5E5E5"> ID and they're still added</font>

813
00:36:30,859 --> 00:36:36,619
<font color="#CCCCCC">to a couple variables new name and ID</font>

814
00:36:34,450 --> 00:36:39,770
<font color="#CCCCCC">however the big difference</font><font color="#E5E5E5"> here is that</font>

815
00:36:36,619 --> 00:36:43,130
<font color="#E5E5E5">a prepared statement is instantiated</font>

816
00:36:39,770 --> 00:36:45,350
<font color="#E5E5E5">here and a string is passed in called</font>

817
00:36:43,130 --> 00:36:47,630
<font color="#E5E5E5">update employees set name equals</font>

818
00:36:45,350 --> 00:36:51,380
question mark where ID equals question

819
00:36:47,630 --> 00:36:53,000
mark so<font color="#E5E5E5"> this is the this</font><font color="#CCCCCC"> is where the</font>

820
00:36:51,380 --> 00:36:54,980
query is getting<font color="#CCCCCC"> parameterised in other</font>

821
00:36:53,000 --> 00:36:56,720
words the parameters are the name and

822
00:36:54,980 --> 00:36:58,070
the ID<font color="#CCCCCC"> and so that's the question mark</font>

823
00:36:56,720 --> 00:37:00,950
the<font color="#E5E5E5"> question mark are basically</font>

824
00:36:58,070 --> 00:37:04,100
placeholders for<font color="#CCCCCC"> the</font><font color="#E5E5E5"> actual data</font>

825
00:37:00,950 --> 00:37:06,560
the last two lines<font color="#CCCCCC"> you see</font><font color="#E5E5E5"> that the</font>

826
00:37:04,100 --> 00:37:09,350
placeholders are getting set to<font color="#E5E5E5"> the</font>

827
00:37:06,560 --> 00:37:15,380
actual values using<font color="#CCCCCC"> a set string and a</font>

828
00:37:09,350 --> 00:37:17,299
set int call so the the one simply the

829
00:37:15,380 --> 00:37:19,250
one here<font color="#E5E5E5"> are</font><font color="#CCCCCC"> set string</font><font color="#E5E5E5"> that just is</font>

830
00:37:17,300 --> 00:37:21,230
referring<font color="#CCCCCC"> to the</font><font color="#E5E5E5"> first</font><font color="#CCCCCC"> question mark</font><font color="#E5E5E5"> and</font>

831
00:37:19,250 --> 00:37:22,850
the two on<font color="#CCCCCC"> the set int is referring to</font>

832
00:37:21,230 --> 00:37:24,200
the second question mark<font color="#E5E5E5"> and that's</font>

833
00:37:22,850 --> 00:37:25,670
<font color="#E5E5E5">pretty much it</font><font color="#CCCCCC"> your honor percent</font>

834
00:37:24,200 --> 00:37:28,549
<font color="#E5E5E5">protected against sequel injection here</font>

835
00:37:25,670 --> 00:37:30,980
<font color="#E5E5E5">because essentially the statement is</font>

836
00:37:28,550 --> 00:37:32,810
fixed and can't be<font color="#CCCCCC"> changed the only</font>

837
00:37:30,980 --> 00:37:34,340
<font color="#E5E5E5">thing that can be changed</font><font color="#CCCCCC"> as the data in</font>

838
00:37:32,810 --> 00:37:36,950
the question mark the placeholders so

839
00:37:34,340 --> 00:37:39,470
<font color="#CCCCCC">that's parameterizing queries</font><font color="#E5E5E5"> and</font>

840
00:37:36,950 --> 00:37:43,640
there's equivalent in<font color="#E5E5E5"> the.net world on</font>

841
00:37:39,470 --> 00:37:46,040
the PHP<font color="#E5E5E5"> world is equivalent statements</font>

842
00:37:43,640 --> 00:37:48,770
parameterizing queries is kind<font color="#CCCCCC"> of a</font>

843
00:37:46,040 --> 00:37:54,230
<font color="#E5E5E5">generic way to say build your sequel</font>

844
00:37:48,770 --> 00:37:56,930
statements securely<font color="#CCCCCC"> alright so the</font>

845
00:37:54,230 --> 00:38:01,790
number<font color="#E5E5E5"> one</font><font color="#CCCCCC"> proactive control so I'm</font>

846
00:37:56,930 --> 00:38:05,799
doing<font color="#CCCCCC"> on time getting close here is</font>

847
00:38:01,790 --> 00:38:08,810
verify for<font color="#E5E5E5"> security early and often so</font>

848
00:38:05,800 --> 00:38:11,030
<font color="#CCCCCC">this</font><font color="#E5E5E5"> is talking about testing make</font>

849
00:38:08,810 --> 00:38:12,920
security testing an integral part of

850
00:38:11,030 --> 00:38:14,780
<font color="#E5E5E5">your software engineering practice</font>

851
00:38:12,920 --> 00:38:18,760
there's different approaches to<font color="#E5E5E5"> testing</font>

852
00:38:14,780 --> 00:38:22,430
you do manual<font color="#CCCCCC"> testing dynamic scans</font>

853
00:38:18,760 --> 00:38:24,320
<font color="#E5E5E5">static code analysis they're all</font>

854
00:38:22,430 --> 00:38:25,700
<font color="#CCCCCC">complimentary</font><font color="#E5E5E5"> and all valid testing</font>

855
00:38:24,320 --> 00:38:29,570
approaches and<font color="#CCCCCC"> complimentary in many</font>

856
00:38:25,700 --> 00:38:31,520
ways<font color="#CCCCCC"> as</font><font color="#E5E5E5"> far as what to test for no OWASP</font>

857
00:38:29,570 --> 00:38:33,500
has a guide<font color="#E5E5E5"> called the application</font>

858
00:38:31,520 --> 00:38:34,460
security<font color="#E5E5E5"> verification standard which is</font>

859
00:38:33,500 --> 00:38:36,680
<font color="#CCCCCC">the</font><font color="#E5E5E5"> ASVs</font>

860
00:38:34,460 --> 00:38:38,210
that's a really<font color="#E5E5E5"> great document along</font>

861
00:38:36,680 --> 00:38:41,839
with proactive controls<font color="#E5E5E5"> I highly</font>

862
00:38:38,210 --> 00:38:43,490
recommend the<font color="#E5E5E5"> ASVs it's a guide for</font>

863
00:38:41,840 --> 00:38:46,310
saying what<font color="#E5E5E5"> do you test if you don't</font>

864
00:38:43,490 --> 00:38:47,779
know what to test for if you don't know

865
00:38:46,310 --> 00:38:50,570
what vulnerabilities I should know<font color="#CCCCCC"> about</font>

866
00:38:47,780 --> 00:38:53,090
the<font color="#E5E5E5"> ASVs has all that for you</font>

867
00:38:50,570 --> 00:38:57,350
really good document<font color="#E5E5E5"> works well with the</font>

868
00:38:53,090 --> 00:38:59,630
proactive controls<font color="#E5E5E5"> too and so another</font>

869
00:38:57,350 --> 00:39:02,600
recommendation is automate control

870
00:38:59,630 --> 00:39:04,370
automate the scans so manual testing is

871
00:39:02,600 --> 00:39:05,839
expensive it<font color="#CCCCCC"> takes time you can't get</font>

872
00:39:04,370 --> 00:39:08,330
through you may have thousands<font color="#E5E5E5"> of web</font>

873
00:39:05,840 --> 00:39:10,130
apps or<font color="#CCCCCC"> any kind of applications they</font>

874
00:39:08,330 --> 00:39:12,710
need<font color="#E5E5E5"> to be tested so you should automate</font>

875
00:39:10,130 --> 00:39:14,520
<font color="#CCCCCC">you know leverage api's leverage</font>

876
00:39:12,710 --> 00:39:18,630
scanning tools integrate with yours

877
00:39:14,520 --> 00:39:22,220
<font color="#E5E5E5">GIC</font><font color="#CCCCCC"> Siddhi</font><font color="#E5E5E5"> develop environment</font><font color="#CCCCCC"> so get</font>

878
00:39:18,630 --> 00:39:22,220
the scans automated as much as possible

879
00:39:24,980 --> 00:39:29,880
<font color="#CCCCCC">so challenges for this</font><font color="#E5E5E5"> control even</font>

880
00:39:28,710 --> 00:39:31,560
<font color="#E5E5E5">though it's number one control there are</font>

881
00:39:29,880 --> 00:39:33,660
<font color="#CCCCCC">challenges including modern web app</font>

882
00:39:31,560 --> 00:39:35,220
technologies<font color="#CCCCCC"> micro service architectures</font>

883
00:39:33,660 --> 00:39:37,859
which make static analysis much more

884
00:39:35,220 --> 00:39:39,540
difficult because<font color="#E5E5E5"> static analysis works</font>

885
00:39:37,860 --> 00:39:41,250
great with<font color="#E5E5E5"> a monolithic application</font>

886
00:39:39,540 --> 00:39:42,779
where all the code is<font color="#E5E5E5"> there you can</font>

887
00:39:41,250 --> 00:39:45,450
track the<font color="#E5E5E5"> data flow through the</font>

888
00:39:42,780 --> 00:39:47,480
application with<font color="#E5E5E5"> micro services is much</font>

889
00:39:45,450 --> 00:39:50,250
harder<font color="#CCCCCC"> for static analysis to do that</font>

890
00:39:47,480 --> 00:39:53,520
<font color="#E5E5E5">pentester costly</font><font color="#CCCCCC"> testing</font><font color="#E5E5E5"> can slow down</font>

891
00:39:50,250 --> 00:39:56,040
deployments<font color="#E5E5E5"> make things</font><font color="#CCCCCC"> slow down</font><font color="#E5E5E5"> in</font>

892
00:39:53,520 --> 00:39:58,860
general<font color="#E5E5E5"> you need specialized skills as</font>

893
00:39:56,040 --> 00:40:00,540
<font color="#E5E5E5">as a manual pen tester you do need to</font>

894
00:39:58,860 --> 00:40:02,400
<font color="#CCCCCC">act to</font><font color="#E5E5E5"> know how to do that that's a</font>

895
00:40:00,540 --> 00:40:05,190
specialized skill which leads<font color="#CCCCCC"> to why</font>

896
00:40:02,400 --> 00:40:06,510
it's expensive<font color="#CCCCCC"> new types of</font>

897
00:40:05,190 --> 00:40:09,090
<font color="#CCCCCC">vulnerabilities are being discovered I</font>

898
00:40:06,510 --> 00:40:14,730
mean just for last month<font color="#E5E5E5"> you know I</font>

899
00:40:09,090 --> 00:40:16,050
mentioned<font color="#E5E5E5"> the struts</font><font color="#CCCCCC"> more</font><font color="#E5E5E5"> recently for</font>

900
00:40:14,730 --> 00:40:21,590
the<font color="#E5E5E5"> beginning of this year there is</font><font color="#CCCCCC"> a</font>

901
00:40:16,050 --> 00:40:25,110
PHP serialization vulnerability like the

902
00:40:21,590 --> 00:40:27,450
bug bounty<font color="#E5E5E5"> security researchers looking</font>

903
00:40:25,110 --> 00:40:30,120
at the the pornhub website at<font color="#CCCCCC"> twenty</font>

904
00:40:27,450 --> 00:40:32,790
thousand dollar bounty for this PHP<font color="#CCCCCC"> D</font>

905
00:40:30,120 --> 00:40:34,470
<font color="#E5E5E5">serialization vulnerability</font><font color="#CCCCCC"> all these</font>

906
00:40:32,790 --> 00:40:35,910
things are<font color="#CCCCCC"> coming out throughout</font><font color="#E5E5E5"> the</font>

907
00:40:34,470 --> 00:40:38,220
year so<font color="#CCCCCC"> you have to</font><font color="#E5E5E5"> keep up with them</font>

908
00:40:35,910 --> 00:40:41,310
<font color="#E5E5E5">and that leads to a problem with testing</font>

909
00:40:38,220 --> 00:40:43,290
coverage<font color="#CCCCCC"> so my only pitchfork Wallace</font>

910
00:40:41,310 --> 00:40:45,590
here is that<font color="#E5E5E5"> we do have a tool to</font><font color="#CCCCCC"> help</font>

911
00:40:43,290 --> 00:40:50,160
<font color="#E5E5E5">with that we have a cloud-based scalable</font>

912
00:40:45,590 --> 00:40:52,650
<font color="#E5E5E5">solution is a dynamic testing tool full</font>

913
00:40:50,160 --> 00:40:55,259
<font color="#E5E5E5">API for automating scans scheduling</font>

914
00:40:52,650 --> 00:41:01,590
scans<font color="#E5E5E5"> so you can help get the coverage</font>

915
00:40:55,260 --> 00:41:03,870
and testing that<font color="#E5E5E5"> you need so anyway</font><font color="#CCCCCC"> i'm</font>

916
00:41:01,590 --> 00:41:06,420
wrap up here the the proactive controls

917
00:41:03,870 --> 00:41:10,529
<font color="#CCCCCC">I just</font><font color="#E5E5E5"> listed them here again as a</font>

918
00:41:06,420 --> 00:41:12,240
summary but<font color="#CCCCCC"> if you do opt in adopt these</font>

919
00:41:10,530 --> 00:41:15,240
controls<font color="#E5E5E5"> most likely you can stand</font>

920
00:41:12,240 --> 00:41:19,709
<font color="#E5E5E5">around and smile like these people</font><font color="#CCCCCC"> so</font>

921
00:41:15,240 --> 00:41:22,279
these that's the goal<font color="#CCCCCC"> anyway</font><font color="#E5E5E5"> and so</font>

922
00:41:19,710 --> 00:41:24,930
final word is you know<font color="#E5E5E5"> what's going on</font>

923
00:41:22,280 --> 00:41:27,120
<font color="#CCCCCC">with proactive controls in terms of</font>

924
00:41:24,930 --> 00:41:28,348
future<font color="#E5E5E5"> development</font><font color="#CCCCCC"> so like I said</font><font color="#E5E5E5"> I've</font>

925
00:41:27,120 --> 00:41:30,450
<font color="#CCCCCC">already talked to the</font>

926
00:41:28,349 --> 00:41:34,130
America's the<font color="#CCCCCC"> prime of</font><font color="#E5E5E5"> the</font><font color="#CCCCCC"> proactive</font>

927
00:41:30,450 --> 00:41:37,558
controls which you can download<font color="#CCCCCC"> here</font>

928
00:41:34,130 --> 00:41:40,079
they have an update<font color="#CCCCCC"> coming this year and</font>

929
00:41:37,559 --> 00:41:43,470
so<font color="#E5E5E5"> interesting</font><font color="#CCCCCC"> Lee</font><font color="#E5E5E5"> I have I'm going to</font>

930
00:41:40,079 --> 00:41:45,239
<font color="#E5E5E5">be in contact with them talk to them for</font>

931
00:41:43,470 --> 00:41:47,279
<font color="#E5E5E5">this talk I have some ideas I wanted to</font>

932
00:41:45,239 --> 00:41:50,309
<font color="#E5E5E5">to throw into</font><font color="#CCCCCC"> the proactive controls but</font>

933
00:41:47,279 --> 00:41:53,130
I actually recommend it as far as

934
00:41:50,309 --> 00:41:55,289
developer centric type of<font color="#E5E5E5"> lists it's</font>

935
00:41:53,130 --> 00:41:57,089
much better than<font color="#E5E5E5"> the</font><font color="#CCCCCC"> Oh</font><font color="#E5E5E5"> lost</font><font color="#CCCCCC"> top-10</font>

936
00:41:55,289 --> 00:41:58,410
especially with the new controversy

937
00:41:57,089 --> 00:41:59,640
going<font color="#E5E5E5"> on right</font><font color="#CCCCCC"> now</font><font color="#E5E5E5"> we don't know what's</font>

938
00:41:58,410 --> 00:42:03,239
going<font color="#CCCCCC"> to</font><font color="#E5E5E5"> go on</font><font color="#CCCCCC"> with the</font><font color="#E5E5E5"> Google</font><font color="#CCCCCC"> loss top</font>

939
00:41:59,640 --> 00:42:04,890
<font color="#CCCCCC">ten document over</font><font color="#E5E5E5"> the years helped to</font>

940
00:42:03,239 --> 00:42:08,009
raise awareness it's really an awareness

941
00:42:04,890 --> 00:42:12,029
document whereas this is<font color="#E5E5E5"> more</font><font color="#CCCCCC"> of a</font><font color="#E5E5E5"> you</font>

942
00:42:08,009 --> 00:42:15,809
know<font color="#E5E5E5"> practical guide with a real solid</font>

943
00:42:12,029 --> 00:42:17,339
advice for development<font color="#E5E5E5"> teams and</font><font color="#CCCCCC"> that's</font>

944
00:42:15,809 --> 00:42:19,180
all I had thank you everybody

945
00:42:17,339 --> 00:42:25,130
<font color="#CCCCCC">sure</font>

946
00:42:19,180 --> 00:42:25,129
[Applause]

