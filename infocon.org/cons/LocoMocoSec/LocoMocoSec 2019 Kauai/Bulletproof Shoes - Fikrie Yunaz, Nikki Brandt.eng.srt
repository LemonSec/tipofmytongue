1
00:00:00,030 --> 00:00:07,379
welcome to bulletproof shoes as Jim just

2
00:00:03,990 --> 00:00:08,370
said I'm Nikki I'm a engineer on product

3
00:00:07,379 --> 00:00:10,530
security at slack

4
00:00:08,370 --> 00:00:12,540
this is Fikri he's also an engineer on

5
00:00:10,530 --> 00:00:15,059
product security at slack and we're here

6
00:00:12,540 --> 00:00:18,448
to tell you about a project that our

7
00:00:15,059 --> 00:00:20,070
team's been working on so the things

8
00:00:18,449 --> 00:00:21,869
that we're gonna go over today we're

9
00:00:20,070 --> 00:00:25,560
basically gonna tell you a bit about

10
00:00:21,869 --> 00:00:28,289
what slack is how many slack users we

11
00:00:25,560 --> 00:00:30,659
have here okay so a few of you at least

12
00:00:28,289 --> 00:00:32,969
know what slack is that's great we're

13
00:00:30,660 --> 00:00:34,590
gonna talk a little bit about why we

14
00:00:32,969 --> 00:00:37,260
worked on the project that we worked on

15
00:00:34,590 --> 00:00:39,059
and then Vickery will tell you about

16
00:00:37,260 --> 00:00:41,280
this assistance specifics of the project

17
00:00:39,059 --> 00:00:45,599
and a little bit about what we learned

18
00:00:41,280 --> 00:00:48,660
from doing it mike is way too close all

19
00:00:45,600 --> 00:00:51,660
right cool so the goals I have for this

20
00:00:48,660 --> 00:00:53,279
intro section are basically to let you

21
00:00:51,660 --> 00:00:55,288
know enough about what slack is and

22
00:00:53,280 --> 00:00:57,320
enough about what slack apps are to

23
00:00:55,289 --> 00:00:59,280
motivate the rest of this conversation

24
00:00:57,320 --> 00:01:02,640
the narratives that I'm going to present

25
00:00:59,280 --> 00:01:04,019
here is just one one motivation for our

26
00:01:02,640 --> 00:01:09,210
project you can definitely think of

27
00:01:04,019 --> 00:01:14,760
others I'm sure so what exactly is slack

28
00:01:09,210 --> 00:01:17,189
it's a chat app but wait it's more slack

29
00:01:14,760 --> 00:01:20,490
is basically a rich platform that you

30
00:01:17,189 --> 00:01:22,439
can use to collaborate it works as a

31
00:01:20,490 --> 00:01:25,229
sort of hub pulling together a bunch of

32
00:01:22,439 --> 00:01:26,970
different data sources in your life so

33
00:01:25,229 --> 00:01:29,579
you use lots of different work streams

34
00:01:26,970 --> 00:01:32,280
at work slack brings them all into one

35
00:01:29,579 --> 00:01:35,429
place we connect your conversations with

36
00:01:32,280 --> 00:01:38,460
your tools with your files etc it all

37
00:01:35,430 --> 00:01:41,579
goes to one place a big part of how we

38
00:01:38,460 --> 00:01:43,199
make this happen is via slack apps you

39
00:01:41,579 --> 00:01:45,990
can see in the slide a couple of

40
00:01:43,200 --> 00:01:47,939
different examples of slack apps slack

41
00:01:45,990 --> 00:01:50,820
apps basically link the functionality of

42
00:01:47,939 --> 00:01:52,679
some service that isn't slack into the

43
00:01:50,820 --> 00:01:54,360
functionality that is slack in order to

44
00:01:52,680 --> 00:01:57,630
bring all those things into one place

45
00:01:54,360 --> 00:01:59,680
for you the purpose of apps varies

46
00:01:57,630 --> 00:02:01,420
wildly from app to app so if you look

47
00:01:59,680 --> 00:02:03,340
the couple that are on this slide we

48
00:02:01,420 --> 00:02:05,650
have one that's doing like hiring

49
00:02:03,340 --> 00:02:07,540
approvals we have one that's giving ops

50
00:02:05,650 --> 00:02:10,869
alerts one that's giving helped us to

51
00:02:07,540 --> 00:02:15,220
get updates etc there are lots lots lots

52
00:02:10,869 --> 00:02:17,010
more types of slack apps we have two

53
00:02:15,220 --> 00:02:20,470
hundred and thousand two hundred

54
00:02:17,010 --> 00:02:22,420
thousand app developers writing slack

55
00:02:20,470 --> 00:02:24,940
apps that's not two hundred thousand

56
00:02:22,420 --> 00:02:29,380
slack apps that's two hundred thousand

57
00:02:24,940 --> 00:02:30,700
human beings writing apps for slack some

58
00:02:29,380 --> 00:02:32,049
of these apps are never gonna end up in

59
00:02:30,700 --> 00:02:33,910
our app directory if you look at the

60
00:02:32,050 --> 00:02:35,830
blue bubble that numbers a lot smaller

61
00:02:33,910 --> 00:02:37,480
than two hundred thousand it's not like

62
00:02:35,830 --> 00:02:40,330
a thousand people working on one app

63
00:02:37,480 --> 00:02:43,179
it's that not all those absent about our

64
00:02:40,330 --> 00:02:45,070
directory we've about 1500 high quality

65
00:02:43,180 --> 00:02:47,680
vetted apps that go into our app

66
00:02:45,070 --> 00:02:50,370
directory and then we have this vast sea

67
00:02:47,680 --> 00:02:52,510
of other apps that are written as

68
00:02:50,370 --> 00:02:54,640
internal integrations which mostly

69
00:02:52,510 --> 00:02:58,120
provide bespoke functionality to

70
00:02:54,640 --> 00:03:00,579
companies so like if some developer at

71
00:02:58,120 --> 00:03:02,110
your company wrote like an app to let

72
00:03:00,580 --> 00:03:04,209
you know when a certain service goes

73
00:03:02,110 --> 00:03:09,310
down that's probably an internal

74
00:03:04,209 --> 00:03:12,340
integration and not an external app so

75
00:03:09,310 --> 00:03:14,340
where do these apps live spoilers they

76
00:03:12,340 --> 00:03:17,410
live outside of slack's infrastructure

77
00:03:14,340 --> 00:03:19,600
they live somewhere in the developers

78
00:03:17,410 --> 00:03:23,380
ecosystem and they connect back into our

79
00:03:19,600 --> 00:03:25,359
servers via an API of course when you

80
00:03:23,380 --> 00:03:28,780
have an API you need to be able to off

81
00:03:25,360 --> 00:03:30,970
today that API and we need to do so via

82
00:03:28,780 --> 00:03:35,140
the magic of colos which we all heard

83
00:03:30,970 --> 00:03:37,720
about earlier today we use tokens

84
00:03:35,140 --> 00:03:40,390
obviously and the access tokens are

85
00:03:37,720 --> 00:03:43,359
granted on installation using a code

86
00:03:40,390 --> 00:03:46,140
grant flow these access tokens that you

87
00:03:43,360 --> 00:03:49,570
get are then used in your API calls and

88
00:03:46,140 --> 00:03:52,988
the token itself determines what

89
00:03:49,570 --> 00:03:54,940
permissions you have on the API those

90
00:03:52,989 --> 00:03:57,590
permissions we call them scopes because

91
00:03:54,940 --> 00:04:00,349
it's OAuth you're gonna

92
00:03:57,590 --> 00:04:02,209
those scopes during installation so when

93
00:04:00,349 --> 00:04:04,310
you go to install a cap you get a screen

94
00:04:02,209 --> 00:04:06,590
like this it's gonna list out a couple

95
00:04:04,310 --> 00:04:08,840
of commissions very similar to

96
00:04:06,590 --> 00:04:11,030
installing a mobile app and you're gonna

97
00:04:08,840 --> 00:04:13,160
say yes it's okay if this app does that

98
00:04:11,030 --> 00:04:15,380
thing and then after that some token is

99
00:04:13,160 --> 00:04:17,480
minted and that token forever after has

100
00:04:15,380 --> 00:04:19,548
these permissions so you can see in this

101
00:04:17,480 --> 00:04:22,910
example one of the things that this

102
00:04:19,548 --> 00:04:26,630
token will allow a holder to do will be

103
00:04:22,910 --> 00:04:29,900
to send a message as this app so

104
00:04:26,630 --> 00:04:35,150
important note here the token like all

105
00:04:29,900 --> 00:04:38,719
tokens it grants a permission to whoever

106
00:04:35,150 --> 00:04:41,870
has the token so important distinction

107
00:04:38,720 --> 00:04:44,750
here anyone who has this token can use

108
00:04:41,870 --> 00:04:46,370
it it's not just the app eg the rightful

109
00:04:44,750 --> 00:04:49,100
owner we can use it if this gets out

110
00:04:46,370 --> 00:04:53,660
someone can use it to do whatever you

111
00:04:49,100 --> 00:04:56,060
just said that could do a little bit

112
00:04:53,660 --> 00:04:57,919
more about the types of tokens that you

113
00:04:56,060 --> 00:05:00,860
would see for a slack app there's

114
00:04:57,919 --> 00:05:05,090
basically two one is called xox P one is

115
00:05:00,860 --> 00:05:07,390
called xox be not confusing at all xox

116
00:05:05,090 --> 00:05:10,700
keys are what most slack apps use and

117
00:05:07,390 --> 00:05:14,419
those have set of scopes that they can

118
00:05:10,700 --> 00:05:17,030
have attached to them so we call those

119
00:05:14,419 --> 00:05:18,919
user tokens and like I said they have

120
00:05:17,030 --> 00:05:22,219
whatever permissions you agree to on

121
00:05:18,919 --> 00:05:25,760
installation xox bees are almost the

122
00:05:22,220 --> 00:05:29,090
same thing but they're specifically for

123
00:05:25,760 --> 00:05:31,400
bot apps BOTS can be thought of sort of

124
00:05:29,090 --> 00:05:34,010
as like a hybrid of an app and a slack

125
00:05:31,400 --> 00:05:36,919
user so they can do a couple of things

126
00:05:34,010 --> 00:05:40,099
that apps can't do normally like they

127
00:05:36,919 --> 00:05:42,349
can send DMS so both of these are

128
00:05:40,100 --> 00:05:45,020
valuable and they use a really similar

129
00:05:42,350 --> 00:05:46,910
type of token and if an attacker has

130
00:05:45,020 --> 00:05:50,479
that token then they can do whatever

131
00:05:46,910 --> 00:05:54,050
this spot or app was supposed to do so

132
00:05:50,479 --> 00:05:59,930
the problem here is the attackers do get

133
00:05:54,050 --> 00:06:03,590
those tokens but how so

134
00:05:59,930 --> 00:06:06,289
 happens pretty much to expand on

135
00:06:03,590 --> 00:06:07,719
that I mentioned earlier a couple of

136
00:06:06,289 --> 00:06:10,179
silly in facts one

137
00:06:07,719 --> 00:06:12,969
we have 200,000 people who are working

138
00:06:10,179 --> 00:06:16,839
on writing flag apps every day maybe not

139
00:06:12,969 --> 00:06:18,729
every day lots of days and those 200,000

140
00:06:16,839 --> 00:06:21,159
or so human being some more working on

141
00:06:18,729 --> 00:06:22,899
slack apps are all working quickly

142
00:06:21,159 --> 00:06:25,149
they're often trying to slap something

143
00:06:22,899 --> 00:06:28,149
together that they can use you know that

144
00:06:25,149 --> 00:06:30,149
day or that week a lot of times they're

145
00:06:28,149 --> 00:06:33,639
collaborating with other developers

146
00:06:30,149 --> 00:06:35,799
they're moving fast and they are putting

147
00:06:33,639 --> 00:06:38,110
the code they write somewhere and a lot

148
00:06:35,799 --> 00:06:44,219
of those some where's our public places

149
00:06:38,110 --> 00:06:46,269
like github or maybe pastebin etc and

150
00:06:44,219 --> 00:06:47,889
ideally we would like the code that they

151
00:06:46,269 --> 00:06:51,069
are putting in those public places to

152
00:06:47,889 --> 00:06:55,300
not contain flag tokens but sometimes it

153
00:06:51,069 --> 00:06:59,409
does here is an actual search from

154
00:06:55,300 --> 00:07:02,439
github for XO XP you can see we've

155
00:06:59,409 --> 00:07:05,919
redacted some of this but the important

156
00:07:02,439 --> 00:07:07,479
part here is that as an attacker at one

157
00:07:05,919 --> 00:07:12,869
point in time you could go to github

158
00:07:07,479 --> 00:07:16,269
type in EXO XP and get 27,000 hits of

159
00:07:12,869 --> 00:07:21,039
actual EXO XP tokens that people had put

160
00:07:16,269 --> 00:07:22,749
on github so as an attacker it's not

161
00:07:21,039 --> 00:07:24,849
super the best because you maybe can't

162
00:07:22,749 --> 00:07:27,129
find the exact EXO XP token that you

163
00:07:24,849 --> 00:07:28,300
want but you can harvest all 27,000 of

164
00:07:27,129 --> 00:07:29,829
them and just start going through them

165
00:07:28,300 --> 00:07:31,719
until you find the one you want that

166
00:07:29,829 --> 00:07:33,819
works on the workspace that you want and

167
00:07:31,719 --> 00:07:35,709
has the Scopes that you want and then

168
00:07:33,819 --> 00:07:38,589
eventually you get all of someone's

169
00:07:35,709 --> 00:07:40,899
slack history one note my boss really

170
00:07:38,589 --> 00:07:43,629
wanted me to say this if you go on

171
00:07:40,899 --> 00:07:45,189
github today and you put an EXO XP you

172
00:07:43,629 --> 00:07:48,360
won't you won't get this number anymore

173
00:07:45,189 --> 00:07:48,360
we fixed it

174
00:07:48,719 --> 00:07:54,580
yeah so why do I care what can I do with

175
00:07:52,539 --> 00:07:57,610
some of those tokens so one of our most

176
00:07:54,580 --> 00:08:00,490
common scopes for tokens to have for

177
00:07:57,610 --> 00:08:02,289
apps is channels history channels

178
00:08:00,490 --> 00:08:04,960
history is a cool scope that will let

179
00:08:02,289 --> 00:08:10,389
you just slurp all of the history from a

180
00:08:04,960 --> 00:08:12,128
slack workspace and that's not great if

181
00:08:10,389 --> 00:08:14,979
an attacker gets that then boom they

182
00:08:12,129 --> 00:08:19,330
have all of your data basically ever and

183
00:08:14,979 --> 00:08:22,150
you don't know but it gets worse we also

184
00:08:19,330 --> 00:08:24,279
have this cool scope called admin admin

185
00:08:22,150 --> 00:08:26,919
just what it says on the tin if an app

186
00:08:24,279 --> 00:08:29,169
has the admin permission it basically

187
00:08:26,919 --> 00:08:31,568
has all the same permissions as an admin

188
00:08:29,169 --> 00:08:34,299
in your workspace so an attacker who

189
00:08:31,569 --> 00:08:36,909
gets a token with the admin scope can do

190
00:08:34,299 --> 00:08:39,458
things like delete channels or kick

191
00:08:36,909 --> 00:08:42,789
people from your slack and change the

192
00:08:39,458 --> 00:08:46,420
ownership to be them not you it's a

193
00:08:42,789 --> 00:08:48,939
pretty devastating scope to have granted

194
00:08:46,420 --> 00:08:53,529
to an attacker and we have found tokens

195
00:08:48,940 --> 00:08:56,230
with this scope on github before why do

196
00:08:53,529 --> 00:08:58,689
I care about my channel history being

197
00:08:56,230 --> 00:09:00,730
slurped this is maybe slightly longer

198
00:08:58,690 --> 00:09:05,110
walk for some people than the admin

199
00:09:00,730 --> 00:09:06,790
scope Oh what is in a slack workspace if

200
00:09:05,110 --> 00:09:09,579
not a lot of people at your company use

201
00:09:06,790 --> 00:09:11,260
slack maybe it's limited to some

202
00:09:09,579 --> 00:09:14,260
ephemeral conversations that you were

203
00:09:11,260 --> 00:09:16,209
planning on keeping around anyway but

204
00:09:14,260 --> 00:09:18,010
once you get over a certain size people

205
00:09:16,209 --> 00:09:20,649
are gonna start putting in you know

206
00:09:18,010 --> 00:09:23,490
sensitive details from your employer

207
00:09:20,649 --> 00:09:25,300
maybe you have conversations about

208
00:09:23,490 --> 00:09:26,620
features you're working on that

209
00:09:25,300 --> 00:09:28,959
shouldn't be leaked to the public yet

210
00:09:26,620 --> 00:09:31,959
maybe you've got credentials in there

211
00:09:28,959 --> 00:09:33,699
you shouldn't but you might maybe there

212
00:09:31,959 --> 00:09:35,920
are important files in your slack

213
00:09:33,699 --> 00:09:38,579
workspace maybe you have offers for your

214
00:09:35,920 --> 00:09:43,029
candidates in there maybe you have

215
00:09:38,579 --> 00:09:45,880
expenses that are waiting to be approved

216
00:09:43,029 --> 00:09:49,000
lots of stuff beyond just cadmium show

217
00:09:45,880 --> 00:09:51,130
up in slack workspaces and an attacker

218
00:09:49,000 --> 00:09:55,660
who has channels history you can get all

219
00:09:51,130 --> 00:09:56,740
of those it's not great people make

220
00:09:55,660 --> 00:09:59,500
mistakes

221
00:09:56,740 --> 00:10:02,140
this is a picture of

222
00:09:59,500 --> 00:10:04,810
the Google search for a get remove

223
00:10:02,140 --> 00:10:06,220
history which we did we tried a

224
00:10:04,810 --> 00:10:08,199
different couple of different search

225
00:10:06,220 --> 00:10:10,000
terms on this to get these numbers and

226
00:10:08,200 --> 00:10:11,920
basically all of them showed graphs like

227
00:10:10,000 --> 00:10:14,980
this where more people are searching

228
00:10:11,920 --> 00:10:19,599
things related to like I did an oopsie

229
00:10:14,980 --> 00:10:21,340
in github over time and it's like I said

230
00:10:19,600 --> 00:10:22,660
it's not because people are malicious or

231
00:10:21,340 --> 00:10:24,220
anything well some people are malicious

232
00:10:22,660 --> 00:10:26,079
but it's not because developers are

233
00:10:24,220 --> 00:10:29,460
malicious it's because they're moving

234
00:10:26,080 --> 00:10:32,650
fast and occasionally breaking things

235
00:10:29,460 --> 00:10:34,810
and over time we'd like to move to a

236
00:10:32,650 --> 00:10:38,170
point where like culturally people are

237
00:10:34,810 --> 00:10:40,209
doing having better hygiene with things

238
00:10:38,170 --> 00:10:42,670
like tokens not putting them on github

239
00:10:40,210 --> 00:10:44,920
but in the meantime we wanted to do

240
00:10:42,670 --> 00:10:48,880
something to help people who are making

241
00:10:44,920 --> 00:10:51,939
those mistakes right now tokens are sort

242
00:10:48,880 --> 00:10:55,270
of like a foot gun and getting shot in

243
00:10:51,940 --> 00:10:56,620
the foot is not very nice it's not an

244
00:10:55,270 --> 00:10:59,170
experience that we want our app

245
00:10:56,620 --> 00:11:02,530
developers or anyone who uses slack to

246
00:10:59,170 --> 00:11:04,900
have so what we are waiting for like the

247
00:11:02,530 --> 00:11:08,079
cultural change of here's how you handle

248
00:11:04,900 --> 00:11:11,380
secrets safely we worked on a solution

249
00:11:08,080 --> 00:11:13,090
to make it better for people before that

250
00:11:11,380 --> 00:11:21,250
Vickery is going to tell you all about

251
00:11:13,090 --> 00:11:24,130
that yeah thanks Mickey so token Nucor

252
00:11:21,250 --> 00:11:26,080
what is to kanika so token occurrence

253
00:11:24,130 --> 00:11:30,790
the application that we built in-house

254
00:11:26,080 --> 00:11:34,830
to revoke slack token which is leaked in

255
00:11:30,790 --> 00:11:38,110
public repository what does it look like

256
00:11:34,830 --> 00:11:40,690
so if someone posts a token in public

257
00:11:38,110 --> 00:11:44,560
repository so we knew can't be taken so

258
00:11:40,690 --> 00:11:47,890
we are revoking this token and make sure

259
00:11:44,560 --> 00:11:51,520
that the token is unusable or invalid

260
00:11:47,890 --> 00:11:54,699
when someone's want to use the token so

261
00:11:51,520 --> 00:11:57,819
we want to make our developer safe we

262
00:11:54,700 --> 00:12:00,850
want to support our developer people

263
00:11:57,820 --> 00:12:04,420
make mistakes and we also admit we also

264
00:12:00,850 --> 00:12:09,280
make mistakes and we wanted to create a

265
00:12:04,420 --> 00:12:11,890
safe environment by default so if

266
00:12:09,280 --> 00:12:12,980
someone's accidentally puts their slack

267
00:12:11,890 --> 00:12:15,740
token to

268
00:12:12,980 --> 00:12:18,709
like repository we automatically revoke

269
00:12:15,740 --> 00:12:23,209
it so how do we do this

270
00:12:18,709 --> 00:12:25,819
so we automate the process we know that

271
00:12:23,209 --> 00:12:29,510
once the token leaked in a public

272
00:12:25,820 --> 00:12:32,540
repository so anyone else can easily

273
00:12:29,510 --> 00:12:34,550
search the token like using Google or

274
00:12:32,540 --> 00:12:37,099
just go to github and then search our

275
00:12:34,550 --> 00:12:39,829
token patterns so it's just matter of

276
00:12:37,100 --> 00:12:43,910
time when someone else get to this

277
00:12:39,829 --> 00:12:46,160
information so we wanted to be fast on

278
00:12:43,910 --> 00:12:49,339
finding these tokens and do a

279
00:12:46,160 --> 00:12:53,300
responsible action before someone else

280
00:12:49,339 --> 00:12:56,269
get to the token and do a bad thing with

281
00:12:53,300 --> 00:13:00,139
it and the only way to do this is to

282
00:12:56,269 --> 00:13:03,079
automate the process so we want to be

283
00:13:00,139 --> 00:13:07,040
quick on finding the tokens do a proper

284
00:13:03,079 --> 00:13:09,649
action on it and don't be slow so this

285
00:13:07,040 --> 00:13:12,769
is the architecture diagram on how we

286
00:13:09,649 --> 00:13:15,170
automate this process so the token Nucor

287
00:13:12,769 --> 00:13:18,139
is the one on the middle there so that's

288
00:13:15,170 --> 00:13:20,719
the application that we built so

289
00:13:18,139 --> 00:13:25,579
basically that application it does a

290
00:13:20,720 --> 00:13:27,529
search on the github API and so we we

291
00:13:25,579 --> 00:13:32,449
try to search our token pattern which is

292
00:13:27,529 --> 00:13:35,990
the EXO XP or EXO XP token and then we

293
00:13:32,449 --> 00:13:38,689
get the file from the API and then we do

294
00:13:35,990 --> 00:13:41,000
further analysis on the files based on

295
00:13:38,690 --> 00:13:43,850
our regular expression to see if there

296
00:13:41,000 --> 00:13:48,709
is a real slack to can exist under files

297
00:13:43,850 --> 00:13:52,069
if we found a match then we request a

298
00:13:48,709 --> 00:13:55,790
revoke requests to our web app so which

299
00:13:52,069 --> 00:13:58,670
is on the right side on this diagram so

300
00:13:55,790 --> 00:14:01,910
a slack web app is the server that owns

301
00:13:58,670 --> 00:14:03,920
the token then and also this server that

302
00:14:01,910 --> 00:14:06,949
has the capabilities to revoke the

303
00:14:03,920 --> 00:14:10,939
tokens so all of these things happen

304
00:14:06,949 --> 00:14:14,630
rapidly and instantly we also have a

305
00:14:10,940 --> 00:14:17,720
small cache database on the token Nucor

306
00:14:14,630 --> 00:14:19,700
side so we cache their file hash and

307
00:14:17,720 --> 00:14:23,180
also do tokens

308
00:14:19,700 --> 00:14:26,000
that we previously revoke so because

309
00:14:23,180 --> 00:14:28,729
when we do this search on the github API

310
00:14:26,000 --> 00:14:31,040
so we tend to get like the same tokens

311
00:14:28,730 --> 00:14:34,760
over and over again so this is the way

312
00:14:31,040 --> 00:14:38,930
that we used removed a repetitive

313
00:14:34,760 --> 00:14:41,330
revoke request on the same token so yeah

314
00:14:38,930 --> 00:14:47,359
this is a straightforward architecture

315
00:14:41,330 --> 00:14:49,640
really simple and it works so every

316
00:14:47,360 --> 00:14:52,760
token that we found and revoke its

317
00:14:49,640 --> 00:14:56,360
posted to this slot channel on our

318
00:14:52,760 --> 00:15:00,950
workspace and we put an awesome channel

319
00:14:56,360 --> 00:15:03,800
topic there so yeah this is where we see

320
00:15:00,950 --> 00:15:06,800
the token nuclear activity so every time

321
00:15:03,800 --> 00:15:09,979
two token occurs finally token so it

322
00:15:06,800 --> 00:15:12,800
will end up on this channels and beside

323
00:15:09,980 --> 00:15:15,320
used by our teams so this channel is

324
00:15:12,800 --> 00:15:18,319
also used by our customer experience

325
00:15:15,320 --> 00:15:21,200
teams so it's because there are like

326
00:15:18,320 --> 00:15:23,270
some follow-ups that need to be done if

327
00:15:21,200 --> 00:15:26,050
someone's or our developer asked

328
00:15:23,270 --> 00:15:28,970
question on why their token it's not

329
00:15:26,050 --> 00:15:31,069
usable anymore so this the customer

330
00:15:28,970 --> 00:15:33,350
experienced him they can easily just

331
00:15:31,070 --> 00:15:38,300
search on this channels to get the

332
00:15:33,350 --> 00:15:40,810
information that they need and there are

333
00:15:38,300 --> 00:15:44,030
some challenges when we implement this

334
00:15:40,810 --> 00:15:47,839
one of them is the customer engagements

335
00:15:44,030 --> 00:15:50,589
so we need to ensure that we let our

336
00:15:47,840 --> 00:15:53,960
developer knows about this process and

337
00:15:50,590 --> 00:15:56,960
educate them that we're doing this for a

338
00:15:53,960 --> 00:15:59,330
good intention I will talk more about

339
00:15:56,960 --> 00:16:02,320
this and the next slides another

340
00:15:59,330 --> 00:16:05,480
challenge that we had is the rate limits

341
00:16:02,320 --> 00:16:08,300
so yeah the provider API has a rate

342
00:16:05,480 --> 00:16:12,530
limit which is slowing us down

343
00:16:08,300 --> 00:16:14,750
so this is fine we realize this so rate

344
00:16:12,530 --> 00:16:17,270
limits it's used to protect the server

345
00:16:14,750 --> 00:16:20,450
from DDoS attacks and had any other type

346
00:16:17,270 --> 00:16:24,110
of attacks and yeah we also have a rate

347
00:16:20,450 --> 00:16:27,010
limit on our API so in this case so we

348
00:16:24,110 --> 00:16:29,680
just need to follow the rules

349
00:16:27,010 --> 00:16:32,740
so we let the token occur to sleep when

350
00:16:29,680 --> 00:16:36,520
it's hitting the rate limit and then

351
00:16:32,740 --> 00:16:40,540
continue to work after it past a certain

352
00:16:36,520 --> 00:16:43,420
time another challenge as its you might

353
00:16:40,540 --> 00:16:45,550
introduce a new type of token so you

354
00:16:43,420 --> 00:16:48,099
need to sync with your development teams

355
00:16:45,550 --> 00:16:51,339
to make sure you add the new type of

356
00:16:48,100 --> 00:16:53,560
token to your list so the new token

357
00:16:51,340 --> 00:16:55,180
might have a different you know

358
00:16:53,560 --> 00:16:58,030
different pattern or it might require

359
00:16:55,180 --> 00:17:01,239
additional regular expression that you

360
00:16:58,030 --> 00:17:04,959
need to put on your list so miss adding

361
00:17:01,240 --> 00:17:07,449
this requirement might require you to

362
00:17:04,959 --> 00:17:11,579
fetch the same file and then do the same

363
00:17:07,449 --> 00:17:14,050
analysis to find a new type of token so

364
00:17:11,579 --> 00:17:16,569
it might this might cause like a

365
00:17:14,050 --> 00:17:20,139
redundancy of like network traffic or

366
00:17:16,569 --> 00:17:23,619
processing or computing power so just

367
00:17:20,140 --> 00:17:26,500
make sure to add this list before you

368
00:17:23,619 --> 00:17:31,899
release the new type token to your

369
00:17:26,500 --> 00:17:35,100
customer yes customer engagement so we

370
00:17:31,900 --> 00:17:38,020
also had to consider communication here

371
00:17:35,100 --> 00:17:40,899
we cannot just like disable the token

372
00:17:38,020 --> 00:17:43,870
and then provide no reasoning so that

373
00:17:40,900 --> 00:17:46,510
might cost a lot of tickets for our

374
00:17:43,870 --> 00:17:49,300
customer experience teams we don't want

375
00:17:46,510 --> 00:17:53,020
to be like that so we wanted to provide

376
00:17:49,300 --> 00:17:55,990
like a clear reasoning behind of this

377
00:17:53,020 --> 00:17:59,770
and provide like a helpful information

378
00:17:55,990 --> 00:18:04,360
to our customer or developer so in our

379
00:17:59,770 --> 00:18:07,590
case we inform both the token owner and

380
00:18:04,360 --> 00:18:11,590
the primary owner of the teams with

381
00:18:07,590 --> 00:18:14,290
email notification so both can take like

382
00:18:11,590 --> 00:18:18,610
a proper action on the app or on their

383
00:18:14,290 --> 00:18:21,250
slack workspace and another thing that

384
00:18:18,610 --> 00:18:24,280
we do is to prepare our customer

385
00:18:21,250 --> 00:18:26,920
experience teams and letting them know

386
00:18:24,280 --> 00:18:30,520
what are the process that we're

387
00:18:26,920 --> 00:18:32,950
introducing here and then that makes

388
00:18:30,520 --> 00:18:37,690
them to prepare a communication when

389
00:18:32,950 --> 00:18:39,650
developer reach out to them and yeah so

390
00:18:37,690 --> 00:18:41,780
this is sample of email Norfolk

391
00:18:39,650 --> 00:18:44,270
occasion that we sent to our customer if

392
00:18:41,780 --> 00:18:47,330
they leak their tokens so we provide

393
00:18:44,270 --> 00:18:50,420
what is the chickens the value of the

394
00:18:47,330 --> 00:18:57,770
chicken and whose create the tokens and

395
00:18:50,420 --> 00:19:01,190
where it was leaked and some evolution

396
00:18:57,770 --> 00:19:03,740
that we had on our token occurs are like

397
00:19:01,190 --> 00:19:06,110
so we move to a proper instance we first

398
00:19:03,740 --> 00:19:07,850
implement this on a def instance you

399
00:19:06,110 --> 00:19:10,550
know we realize def instance can

400
00:19:07,850 --> 00:19:12,889
disappear any times and not that

401
00:19:10,550 --> 00:19:15,919
reliable so we move through a proper

402
00:19:12,890 --> 00:19:20,420
production instance with a proper CI CD

403
00:19:15,920 --> 00:19:22,910
pipelined and that's that was like a

404
00:19:20,420 --> 00:19:25,640
help from our ops team so we sync with

405
00:19:22,910 --> 00:19:29,270
them on how to properly set up a proper

406
00:19:25,640 --> 00:19:32,540
instance for this a token occur and then

407
00:19:29,270 --> 00:19:35,450
we also properly add a new type of

408
00:19:32,540 --> 00:19:39,440
regular expression every time we

409
00:19:35,450 --> 00:19:42,170
introduce a new type of token and the

410
00:19:39,440 --> 00:19:45,760
last one we work with the github team to

411
00:19:42,170 --> 00:19:48,890
use their awesome token scanning feature

412
00:19:45,760 --> 00:19:52,040
a little bit about the github token

413
00:19:48,890 --> 00:19:54,590
scanning so we are a part of their beta

414
00:19:52,040 --> 00:19:56,990
user and we are really happy with this

415
00:19:54,590 --> 00:19:59,449
feature so what it does

416
00:19:56,990 --> 00:20:02,120
so it's search our token pattern on

417
00:19:59,450 --> 00:20:05,590
every commit push to a public repository

418
00:20:02,120 --> 00:20:09,260
or when you switch like from private

419
00:20:05,590 --> 00:20:11,990
repository to public repository so we

420
00:20:09,260 --> 00:20:14,660
provide github with our token regular

421
00:20:11,990 --> 00:20:17,960
expression and then if they found a

422
00:20:14,660 --> 00:20:20,150
commit that has contain our token

423
00:20:17,960 --> 00:20:22,370
pattern so github will sent a

424
00:20:20,150 --> 00:20:24,860
notification to our endpoint that we

425
00:20:22,370 --> 00:20:29,989
provided for him and for them to reach

426
00:20:24,860 --> 00:20:33,080
out so this is where the change happens

427
00:20:29,990 --> 00:20:36,260
so instead of just doing the search to

428
00:20:33,080 --> 00:20:39,080
the API so we also receive an events

429
00:20:36,260 --> 00:20:42,379
every time github finds of files that

430
00:20:39,080 --> 00:20:45,470
push with our token patterns so yeah

431
00:20:42,380 --> 00:20:50,120
this is amazing so with this it helped

432
00:20:45,470 --> 00:20:51,960
us to find a token faster so github done

433
00:20:50,120 --> 00:20:54,389
a pretty good job and

434
00:20:51,960 --> 00:20:57,570
almost instantly notify us when

435
00:20:54,390 --> 00:21:00,570
someone's push a code with our token

436
00:20:57,570 --> 00:21:03,149
pattern so this reduced a time when

437
00:21:00,570 --> 00:21:05,550
someone accidentally pushed their token

438
00:21:03,150 --> 00:21:09,360
to the public repository until we revoke

439
00:21:05,550 --> 00:21:12,840
the token so we still check the token

440
00:21:09,360 --> 00:21:16,590
with with the cache database before we

441
00:21:12,840 --> 00:21:19,679
sent the more Evoque request to our web

442
00:21:16,590 --> 00:21:23,129
app but mostly we receive a new token

443
00:21:19,680 --> 00:21:25,530
there so currently we're running both of

444
00:21:23,130 --> 00:21:29,310
this two method the search and the

445
00:21:25,530 --> 00:21:34,410
events from github side by sides on our

446
00:21:29,310 --> 00:21:37,169
production token occur another thing

447
00:21:34,410 --> 00:21:39,300
that we're developing is webhook Nucor

448
00:21:37,170 --> 00:21:42,540
so this is something that we're actively

449
00:21:39,300 --> 00:21:46,200
working on and we'll start the process

450
00:21:42,540 --> 00:21:49,290
pretty soon so this is another service

451
00:21:46,200 --> 00:21:53,250
which is really similar to the token

452
00:21:49,290 --> 00:21:56,639
maker so what is actually a web hook on

453
00:21:53,250 --> 00:22:00,020
slack so yeah a bit of a background of

454
00:21:56,640 --> 00:22:02,970
what is in common incoming webhook

455
00:22:00,020 --> 00:22:06,150
incoming web hook is actually a URL that

456
00:22:02,970 --> 00:22:08,970
has a secret token on it and where you

457
00:22:06,150 --> 00:22:12,450
can use it to post message to your slot

458
00:22:08,970 --> 00:22:15,060
channel so this is how you do it

459
00:22:12,450 --> 00:22:17,700
you can just like sent a post request to

460
00:22:15,060 --> 00:22:21,000
that dedicated URL with the message

461
00:22:17,700 --> 00:22:24,090
content and then this message we will

462
00:22:21,000 --> 00:22:28,040
appear in your slot channel so this is

463
00:22:24,090 --> 00:22:31,379
simple and powerful things that we have

464
00:22:28,040 --> 00:22:35,159
so what could go wrong if we leaked this

465
00:22:31,380 --> 00:22:38,250
so this are the attacks scenario that

466
00:22:35,160 --> 00:22:42,210
someone's can do with slacks web hooks

467
00:22:38,250 --> 00:22:45,960
so they can impersonate themselves as a

468
00:22:42,210 --> 00:22:48,480
bot or an app they can send like fizzing

469
00:22:45,960 --> 00:22:51,600
message and you can also like sent a

470
00:22:48,480 --> 00:22:54,710
malicious link and then that link will

471
00:22:51,600 --> 00:22:58,010
be part of the slack message and you can

472
00:22:54,710 --> 00:23:02,800
put anything on that particular link and

473
00:22:58,010 --> 00:23:05,850
this can also be used as a spam or abuse

474
00:23:02,800 --> 00:23:10,620
and then a quick search on github so

475
00:23:05,850 --> 00:23:13,719
apparently it's we have wrong 52,000

476
00:23:10,620 --> 00:23:16,330
result so not all of them are a real

477
00:23:13,720 --> 00:23:21,490
webhook but you can get the idea it's

478
00:23:16,330 --> 00:23:24,550
kind of like a lot of web hooks too so

479
00:23:21,490 --> 00:23:26,410
yeah better to nuke them to you so we

480
00:23:24,550 --> 00:23:30,399
are in the process to provide the same

481
00:23:26,410 --> 00:23:34,900
behavior like the token Nucor as we want

482
00:23:30,400 --> 00:23:39,190
to also revoke this web hook but yeah

483
00:23:34,900 --> 00:23:41,700
bear with us so we're probably will

484
00:23:39,190 --> 00:23:45,640
start rolling this feature pretty soon

485
00:23:41,700 --> 00:23:47,220
and then a feedback and lesson learn

486
00:23:45,640 --> 00:23:52,540
from this project

487
00:23:47,220 --> 00:23:55,840
so this graph showed numbers of tokens

488
00:23:52,540 --> 00:23:58,420
that we revoke over the past two and a

489
00:23:55,840 --> 00:24:02,280
half years since we start running the

490
00:23:58,420 --> 00:24:04,929
token new care service so on average

491
00:24:02,280 --> 00:24:09,160
it's around like four hundred tokens

492
00:24:04,929 --> 00:24:12,550
that we revoke per month and if you can

493
00:24:09,160 --> 00:24:16,120
see here there's like a slightly like

494
00:24:12,550 --> 00:24:18,879
less activity on summer time but there's

495
00:24:16,120 --> 00:24:25,059
a big spike there on the end so where it

496
00:24:18,880 --> 00:24:28,240
goes like above 600 token per month so

497
00:24:25,059 --> 00:24:31,210
this is a graph that shows more details

498
00:24:28,240 --> 00:24:35,500
on the method that we are using so the

499
00:24:31,210 --> 00:24:39,280
red graph there's a shows like we use

500
00:24:35,500 --> 00:24:43,720
the search method to search the github

501
00:24:39,280 --> 00:24:48,010
API and then the yellow color of the

502
00:24:43,720 --> 00:24:50,740
graph here is the method when we start

503
00:24:48,010 --> 00:24:54,550
using the github token scanning so yeah

504
00:24:50,740 --> 00:24:57,660
the end of the last year so that is like

505
00:24:54,550 --> 00:25:01,389
when we introduced this new methods and

506
00:24:57,660 --> 00:25:05,500
we we see like a spike number of token

507
00:25:01,390 --> 00:25:09,970
that we get from this service so so our

508
00:25:05,500 --> 00:25:11,340
old method to use you know the Search

509
00:25:09,970 --> 00:25:13,740
API

510
00:25:11,340 --> 00:25:16,949
to get that who can they still reporting

511
00:25:13,740 --> 00:25:19,530
some number of tokens but the number is

512
00:25:16,950 --> 00:25:21,840
like way less compared to the number

513
00:25:19,530 --> 00:25:26,760
that we receive from the github token

514
00:25:21,840 --> 00:25:30,750
scanning so this gives like some more

515
00:25:26,760 --> 00:25:34,500
details ratio comparing like these two

516
00:25:30,750 --> 00:25:38,490
methods so yeah right now is almost like

517
00:25:34,500 --> 00:25:40,830
97% of the token that we receive it's

518
00:25:38,490 --> 00:25:43,020
coming from the github token scanning so

519
00:25:40,830 --> 00:25:49,320
yeah thanks well for good health for

520
00:25:43,020 --> 00:25:52,650
their awesome feature here so we also

521
00:25:49,320 --> 00:25:56,189
tracked a number of a token that is

522
00:25:52,650 --> 00:26:00,059
valid versus invalid so this is based on

523
00:25:56,190 --> 00:26:04,909
the request that we sent to our web app

524
00:26:00,059 --> 00:26:08,639
so we just like curious if it's like has

525
00:26:04,909 --> 00:26:12,330
more valid or invalid apparently we get

526
00:26:08,640 --> 00:26:15,600
around like 78% of the tokens it's valid

527
00:26:12,330 --> 00:26:20,580
so this is pretty interesting so this

528
00:26:15,600 --> 00:26:22,260
indicates like if you find a slack token

529
00:26:20,580 --> 00:26:25,168
which is probably a token that it

530
00:26:22,260 --> 00:26:28,080
similar to a slack pattern on public

531
00:26:25,169 --> 00:26:32,400
repository and github so high chance

532
00:26:28,080 --> 00:26:38,428
that was a real tokens so yeah pretty

533
00:26:32,400 --> 00:26:43,140
interesting number so this graphs show

534
00:26:38,429 --> 00:26:45,960
the token revoke per teams so we just

535
00:26:43,140 --> 00:26:49,049
curious if this behavior is endemic per

536
00:26:45,960 --> 00:26:51,960
team so we get like one team with

537
00:26:49,049 --> 00:26:54,960
sixteen tokens like have been we woke

538
00:26:51,960 --> 00:26:58,950
like from one single team so that's a

539
00:26:54,960 --> 00:27:02,130
lot we don't know what's the team is but

540
00:26:58,950 --> 00:27:06,780
I know probably high chance it can be

541
00:27:02,130 --> 00:27:09,559
like a test team that testing our token

542
00:27:06,780 --> 00:27:13,020
euchre so there are like a couple of

543
00:27:09,559 --> 00:27:15,270
teams which this high number of tokens

544
00:27:13,020 --> 00:27:20,190
that can revoke but it's really small

545
00:27:15,270 --> 00:27:22,650
number but the good thing is so most of

546
00:27:20,190 --> 00:27:24,580
the team's only done this once so if you

547
00:27:22,650 --> 00:27:27,430
take a look at this flat

548
00:27:24,580 --> 00:27:29,230
Graff there so that's a total number of

549
00:27:27,430 --> 00:27:32,080
that token that's got revoked by the

550
00:27:29,230 --> 00:27:36,370
token Icarus one which is around like 80

551
00:27:32,080 --> 00:27:39,220
percents of that craft so this probably

552
00:27:36,370 --> 00:27:42,159
indicates that our method of educating

553
00:27:39,220 --> 00:27:46,060
the user for not doing this bad behavior

554
00:27:42,160 --> 00:27:48,940
might work so yeah most of the teams

555
00:27:46,060 --> 00:27:52,980
only done this once and they never

556
00:27:48,940 --> 00:27:52,980
repeat it again which is which is great

557
00:27:54,460 --> 00:27:59,920
some external feedback that we receive

558
00:27:57,310 --> 00:28:02,980
so this is like one of the sample that

559
00:27:59,920 --> 00:28:06,640
we get from our developer which is

560
00:28:02,980 --> 00:28:10,510
awesome and a bit of a background so all

561
00:28:06,640 --> 00:28:13,270
of this effort was start when one of our

562
00:28:10,510 --> 00:28:17,770
bug bounty researcher reaching house

563
00:28:13,270 --> 00:28:20,139
reaching us out and mentioning he found

564
00:28:17,770 --> 00:28:22,360
like an endemic issue where people

565
00:28:20,140 --> 00:28:26,970
posting slack tokens in the public

566
00:28:22,360 --> 00:28:30,340
repository so this is leading us on this

567
00:28:26,970 --> 00:28:34,000
in this path on building the token occur

568
00:28:30,340 --> 00:28:37,270
and then deploying it and we also work

569
00:28:34,000 --> 00:28:39,730
with the same researcher on the web hook

570
00:28:37,270 --> 00:28:42,430
nuclear's so they they gave us like a

571
00:28:39,730 --> 00:28:48,400
lot of good data and great feedback on

572
00:28:42,430 --> 00:28:51,190
this project and here are some slack app

573
00:28:48,400 --> 00:28:53,470
feature that you can use to secure your

574
00:28:51,190 --> 00:28:56,140
work space one of them is IP

575
00:28:53,470 --> 00:28:58,780
whitelisting so we have this feature so

576
00:28:56,140 --> 00:29:01,840
for internal integration this can be

577
00:28:58,780 --> 00:29:06,010
used to restrict the app to only work

578
00:29:01,840 --> 00:29:08,699
with certain IP address so how it works

579
00:29:06,010 --> 00:29:12,129
is like developer they can provide the

580
00:29:08,700 --> 00:29:14,290
whitelist IP address on our on their

581
00:29:12,130 --> 00:29:17,800
configuration of their app and then

582
00:29:14,290 --> 00:29:20,889
slack will only accept the requests if

583
00:29:17,800 --> 00:29:25,450
the original originating request comes

584
00:29:20,890 --> 00:29:28,480
from that IP address so yeah if if it

585
00:29:25,450 --> 00:29:32,810
doesn't come from the white lists that

586
00:29:28,480 --> 00:29:34,880
IP address so slack will just

587
00:29:32,810 --> 00:29:37,520
just returned an error so it's not

588
00:29:34,880 --> 00:29:40,880
receiving that requests another feature

589
00:29:37,520 --> 00:29:44,629
that we have is admin approve app so

590
00:29:40,880 --> 00:29:48,140
this control which app that can be

591
00:29:44,630 --> 00:29:51,140
installed on your workspace so the admin

592
00:29:48,140 --> 00:29:55,280
or the owner of the workspace they can

593
00:29:51,140 --> 00:29:57,020
create a list of like a proof apps and a

594
00:29:55,280 --> 00:29:58,820
restricted app so it's kind of like a

595
00:29:57,020 --> 00:30:01,940
white list and a black black place of

596
00:29:58,820 --> 00:30:07,879
the apps so another thing that we have

597
00:30:01,940 --> 00:30:11,030
is the audit logs API so this API can

598
00:30:07,880 --> 00:30:15,740
preview and provide an analysis on how

599
00:30:11,030 --> 00:30:18,470
your slack organization is being used so

600
00:30:15,740 --> 00:30:21,410
you can use this API to watch for

601
00:30:18,470 --> 00:30:26,080
potential security issue or malicious

602
00:30:21,410 --> 00:30:29,120
attempts to access your workspace and

603
00:30:26,080 --> 00:30:31,340
yeah finally a friendly reminder so

604
00:30:29,120 --> 00:30:35,060
don't put your secret on public

605
00:30:31,340 --> 00:30:38,899
repository use a safe place to put your

606
00:30:35,060 --> 00:30:41,659
secret if accident happens sometimes it

607
00:30:38,900 --> 00:30:44,000
did so there are like some tools out

608
00:30:41,660 --> 00:30:47,510
there that you can use to just remove to

609
00:30:44,000 --> 00:30:50,780
get history or files in your repository

610
00:30:47,510 --> 00:30:55,129
so yeah one of the tools here are BFG

611
00:30:50,780 --> 00:30:58,690
people cleaner and yeah that's pretty

612
00:30:55,130 --> 00:30:58,690
much it from us thank you

613
00:31:03,690 --> 00:31:07,920
his github token scanning pipeline

614
00:31:06,480 --> 00:31:10,020
better at scanning for the tokens

615
00:31:07,920 --> 00:31:12,300
compared to search or are there just

616
00:31:10,020 --> 00:31:17,190
more tokens recently that's a good

617
00:31:12,300 --> 00:31:20,460
question yeah so from our experience so

618
00:31:17,190 --> 00:31:27,000
that token github token scannings does

619
00:31:20,460 --> 00:31:30,780
provide more you know faster way to to

620
00:31:27,000 --> 00:31:35,660
get the tokens so yeah compared to this

621
00:31:30,780 --> 00:31:35,660
search it does eventually

622
00:31:36,950 --> 00:31:42,690
remove like the time between like the

623
00:31:40,530 --> 00:31:45,389
developer push their token to the github

624
00:31:42,690 --> 00:31:47,520
until we revote two tokens compared to

625
00:31:45,390 --> 00:31:51,210
the search method where we need to

626
00:31:47,520 --> 00:31:52,889
actively search the github API to get it

627
00:31:51,210 --> 00:31:55,590
to end and sometimes there's a delay

628
00:31:52,890 --> 00:31:59,370
there so it's like better and in the

629
00:31:55,590 --> 00:32:02,879
performance for getting that token but

630
00:31:59,370 --> 00:32:06,060
we also like see some some trend if you

631
00:32:02,880 --> 00:32:08,900
take a look on the graph there before on

632
00:32:06,060 --> 00:32:12,330
the slides so our old method is still

633
00:32:08,900 --> 00:32:16,170
getting some some tokens that might be

634
00:32:12,330 --> 00:32:18,389
like an altar Ken dat we didn't we

635
00:32:16,170 --> 00:32:22,010
didn't catch before and before we

636
00:32:18,390 --> 00:32:25,740
introduced this github scanning but yeah

637
00:32:22,010 --> 00:32:27,810
mostly nothing to get github tokens

638
00:32:25,740 --> 00:32:29,670
scanning is like way powerful for

639
00:32:27,810 --> 00:32:36,860
searching that github token in the

640
00:32:29,670 --> 00:32:39,530
public repository is so much faster

641
00:32:36,860 --> 00:32:41,060
and our search version but it's not that

642
00:32:39,530 --> 00:32:44,600
there was a jump in the number of tokens

643
00:32:41,060 --> 00:32:46,520
that are like we we would have got those

644
00:32:44,600 --> 00:32:50,469
eventually but we would have gotten them

645
00:32:46,520 --> 00:32:50,470
more slowly hence lower climbing class

646
00:32:50,800 --> 00:32:56,450
alright could a malicious actor generate

647
00:32:54,410 --> 00:32:57,980
large numbers of bogus tokens on github

648
00:32:56,450 --> 00:33:00,290
to overwhelm the new curses with tokens

649
00:32:57,980 --> 00:33:02,060
don't get noobs complete but so I have

650
00:33:00,290 --> 00:33:05,389
one thought on this immediately which is

651
00:33:02,060 --> 00:33:09,889
that one thing that's amazing for us

652
00:33:05,390 --> 00:33:12,140
about the github data feature is that if

653
00:33:09,890 --> 00:33:14,260
an attacker does this the people who

654
00:33:12,140 --> 00:33:18,200
have to answer that question

655
00:33:14,260 --> 00:33:18,200
[Laughter]

656
00:33:30,670 --> 00:33:38,090
okay what about non github sources

657
00:33:33,470 --> 00:33:41,330
gitlab bitbucket paceman etc yeah so

658
00:33:38,090 --> 00:33:44,689
currently we're still focusing on github

659
00:33:41,330 --> 00:33:48,649
because we already know like almost like

660
00:33:44,690 --> 00:33:50,390
90% of the developer I use github but

661
00:33:48,650 --> 00:33:52,430
yeah I mean this is like a potential

662
00:33:50,390 --> 00:33:55,370
thing that we will eventually do in the

663
00:33:52,430 --> 00:33:59,800
future but yeah we do occasionally get

664
00:33:55,370 --> 00:33:59,800
reports for like tokens that people have

665
00:34:04,780 --> 00:34:11,600
just f.y.i and we have an internal

666
00:34:07,760 --> 00:34:19,070
mechanism it's basically token Nucor but

667
00:34:11,600 --> 00:34:20,449
you can feed a token into it last one

668
00:34:19,070 --> 00:34:21,950
are not super clear and what the person

669
00:34:20,449 --> 00:34:23,239
is asking so I'm gonna read it out and

670
00:34:21,949 --> 00:34:25,790
you tell me what you think it's asking

671
00:34:23,239 --> 00:34:27,139
is there anything preventing slot

672
00:34:25,790 --> 00:34:30,070
customers from creating something

673
00:34:27,139 --> 00:34:34,310
similar for their own organization

674
00:34:30,070 --> 00:34:36,620
something similar if you want if you

675
00:34:34,310 --> 00:34:37,830
have tokens that you want to nuke you

676
00:34:36,620 --> 00:34:40,529
can definitely write

677
00:34:37,830 --> 00:34:42,239
like this we encourage you in terms of

678
00:34:40,530 --> 00:34:46,050
using the github feature you'd have to

679
00:34:42,239 --> 00:34:52,279
talk to them thank you think it's still

680
00:34:46,050 --> 00:34:56,939
in beta I think that's it okay cool okay

681
00:34:52,280 --> 00:34:56,939
[Applause]

