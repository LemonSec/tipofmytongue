1
00:00:02,990 --> 00:00:07,799
we on bank check okay so thank you I

2
00:00:06,270 --> 00:00:10,440
have to give a talk that lives up to

3
00:00:07,799 --> 00:00:12,330
that introduction now so I'm Scott and

4
00:00:10,440 --> 00:00:14,549
I'm here today to talk about what I

5
00:00:12,330 --> 00:00:16,820
think is a problem that we have in the

6
00:00:14,549 --> 00:00:18,840
the wider encryption community right now

7
00:00:16,820 --> 00:00:20,279
and I hate talking about problems

8
00:00:18,840 --> 00:00:21,960
without solutions so they are coming

9
00:00:20,279 --> 00:00:24,600
don't worry about that I'm not just say

10
00:00:21,960 --> 00:00:26,699
to poke holes and poke fun at things so

11
00:00:24,600 --> 00:00:28,740
to set the scene I'm here to talk about

12
00:00:26,699 --> 00:00:30,810
certificates and we probably all know

13
00:00:28,740 --> 00:00:32,969
these by different names we may know

14
00:00:30,810 --> 00:00:35,250
them as server certificates HTTPS

15
00:00:32,969 --> 00:00:36,930
certificates encryption certificates

16
00:00:35,250 --> 00:00:38,910
whatever you want to call them but if

17
00:00:36,930 --> 00:00:40,110
you want green padlocks and pretty

18
00:00:38,910 --> 00:00:41,489
things that Emily talked about this

19
00:00:40,110 --> 00:00:43,110
morning on your website if you want a

20
00:00:41,489 --> 00:00:45,029
green handbag you need to get a

21
00:00:43,110 --> 00:00:48,030
certificate you need to go to a CA and

22
00:00:45,030 --> 00:00:49,800
obtain one of these documents and we're

23
00:00:48,030 --> 00:00:51,120
doing this at volume these days and

24
00:00:49,800 --> 00:00:54,180
we're doing this at a lot of volume

25
00:00:51,120 --> 00:00:55,860
every day I scan the top a million

26
00:00:54,180 --> 00:00:58,379
websites on the planet and I look at how

27
00:00:55,860 --> 00:01:00,030
many of them force you to use HTTPS how

28
00:00:58,379 --> 00:01:03,329
many of them redirect you there when you

29
00:01:00,030 --> 00:01:04,710
go on HTTP and I think this graph kind

30
00:01:03,329 --> 00:01:06,240
of speaks for itself every six months I

31
00:01:04,709 --> 00:01:08,580
published a report and the points here

32
00:01:06,240 --> 00:01:10,439
are the percentage of those top 1

33
00:01:08,580 --> 00:01:12,600
million that redirect you actively to

34
00:01:10,439 --> 00:01:15,059
HTTPS if you try and use them so every

35
00:01:12,600 --> 00:01:17,399
day literally every day more and more of

36
00:01:15,060 --> 00:01:20,909
us are obtaining more and more

37
00:01:17,400 --> 00:01:22,619
certificates so people ask me I want to

38
00:01:20,909 --> 00:01:24,299
set up HTTPS of my website why do I need

39
00:01:22,619 --> 00:01:26,040
to go to a CA and pay for one of these

40
00:01:24,299 --> 00:01:27,750
these things and historically you did

41
00:01:26,040 --> 00:01:29,250
have to pay you know let's encrypt our

42
00:01:27,750 --> 00:01:31,470
making that free now but there are still

43
00:01:29,250 --> 00:01:32,880
some limitations around the automation

44
00:01:31,470 --> 00:01:36,179
requirement but you know you have to go

45
00:01:32,880 --> 00:01:37,530
and get this thing if you want HTTPS and

46
00:01:36,180 --> 00:01:39,240
the reason that we have to do that is

47
00:01:37,530 --> 00:01:40,829
you need to be able to authenticate

48
00:01:39,240 --> 00:01:42,630
yourself the certificate is your proof

49
00:01:40,829 --> 00:01:45,449
of identity and we can't do anything

50
00:01:42,630 --> 00:01:47,939
securely unless we can authenticate who

51
00:01:45,450 --> 00:01:49,979
we're talking to you type Scott home

52
00:01:47,939 --> 00:01:51,329
dock code it you came to the browser how

53
00:01:49,979 --> 00:01:53,399
do you know that my site sent you the

54
00:01:51,329 --> 00:01:55,740
page back it's the first step of the

55
00:01:53,399 --> 00:01:57,780
process is to verify the authenticity of

56
00:01:55,740 --> 00:01:59,189
the party at the other side and we've

57
00:01:57,780 --> 00:02:00,030
known about this problem for a long time

58
00:01:59,189 --> 00:02:01,529
I know everyone here in this room

59
00:02:00,030 --> 00:02:03,479
probably knows about the problem and the

60
00:02:01,530 --> 00:02:06,450
requirements of authentication but I

61
00:02:03,479 --> 00:02:08,369
would say the most people most average

62
00:02:06,450 --> 00:02:09,509
users know of this problem but it

63
00:02:08,369 --> 00:02:10,709
probably just never thought about it in

64
00:02:09,508 --> 00:02:13,290
the right way because this is the

65
00:02:10,709 --> 00:02:13,980
problem that certificates solve is that

66
00:02:13,290 --> 00:02:15,870
on the Internet

67
00:02:13,980 --> 00:02:17,640
he knows you're a dog you get it

68
00:02:15,870 --> 00:02:20,069
certificate and you can prove that you

69
00:02:17,640 --> 00:02:22,798
are who you claim to be that is their

70
00:02:20,069 --> 00:02:24,690
purpose that is their function so the

71
00:02:22,799 --> 00:02:26,489
process of getting one really simple you

72
00:02:24,690 --> 00:02:27,989
set up your web server you generate

73
00:02:26,489 --> 00:02:29,670
something called a CSR certificate

74
00:02:27,989 --> 00:02:32,129
signing request then you send that off

75
00:02:29,670 --> 00:02:34,349
to your CA I've choice o story you had

76
00:02:32,129 --> 00:02:36,569
to pay I use less encrypt so I don't you

77
00:02:34,349 --> 00:02:38,970
prove that you own the domain and they

78
00:02:36,569 --> 00:02:40,410
send you your certificate back you

79
00:02:38,970 --> 00:02:42,690
deploy that onto your web server browser

80
00:02:40,410 --> 00:02:44,190
comes along and you send it to the

81
00:02:42,690 --> 00:02:47,910
browser and you get the green padlock

82
00:02:44,190 --> 00:03:00,989
you get the secure connection very

83
00:02:47,910 --> 00:03:02,459
quickly yes yes so this is a domain

84
00:03:00,989 --> 00:03:04,290
validated certificate and in that

85
00:03:02,459 --> 00:03:05,849
context then yes the only challenge

86
00:03:04,290 --> 00:03:07,410
there is proof of ownership or control

87
00:03:05,849 --> 00:03:09,540
of the domain actually not necessarily

88
00:03:07,410 --> 00:03:11,549
ownership but for a DB certificate which

89
00:03:09,540 --> 00:03:13,890
is what we're talking about here I just

90
00:03:11,549 --> 00:03:15,450
do a simple HTTP GET to the origin and

91
00:03:13,890 --> 00:03:17,279
they issue me the cert once I prove

92
00:03:15,450 --> 00:03:18,839
control and then I just send this

93
00:03:17,280 --> 00:03:20,220
certificate to the browser openly and

94
00:03:18,840 --> 00:03:21,870
freely every time you come to my website

95
00:03:20,220 --> 00:03:23,760
I just send you my certificate and he's

96
00:03:21,870 --> 00:03:25,680
just a text file if we look under the

97
00:03:23,760 --> 00:03:27,060
hood of a certificate there's really not

98
00:03:25,680 --> 00:03:29,160
that many fancy things in there they're

99
00:03:27,060 --> 00:03:30,780
just key value pairs of information the

100
00:03:29,160 --> 00:03:32,849
common name that it was issued to who

101
00:03:30,780 --> 00:03:34,530
issued the document we have things like

102
00:03:32,849 --> 00:03:36,810
valley from valid to days and there's

103
00:03:34,530 --> 00:03:38,220
other pieces of metadata in there but if

104
00:03:36,810 --> 00:03:40,709
you actually look inside a certificate

105
00:03:38,220 --> 00:03:44,190
they're really not about fancy it's just

106
00:03:40,709 --> 00:03:46,590
a text file underneath everything so the

107
00:03:44,190 --> 00:03:49,709
problem is when you come to my website I

108
00:03:46,590 --> 00:03:51,150
send you my certificate and that's how I

109
00:03:49,709 --> 00:03:52,859
prove Who I am I say here is my

110
00:03:51,150 --> 00:03:54,359
certificate and of course that can't be

111
00:03:52,859 --> 00:03:56,519
the only part of the process because if

112
00:03:54,359 --> 00:03:57,690
I give you my certificate why can't you

113
00:03:56,519 --> 00:03:59,129
just then give someone else my

114
00:03:57,690 --> 00:04:00,780
certificate and say well I'm Scott

115
00:03:59,129 --> 00:04:03,629
because I gave you the certificate the

116
00:04:00,780 --> 00:04:04,829
requirement is that you hold the key you

117
00:04:03,629 --> 00:04:07,048
have to hold the private key associated

118
00:04:04,829 --> 00:04:09,120
with the certificate this is what I was

119
00:04:07,049 --> 00:04:12,359
you to use it so you have to keep this

120
00:04:09,120 --> 00:04:12,840
file this key secure so the only few

121
00:04:12,359 --> 00:04:14,669
questions

122
00:04:12,840 --> 00:04:17,039
requires audience interaction please

123
00:04:14,669 --> 00:04:20,010
raise your hands if you have 100 percent

124
00:04:17,039 --> 00:04:21,719
security on your online services oh

125
00:04:20,010 --> 00:04:22,890
that's really good because I was about

126
00:04:21,720 --> 00:04:24,960
to say if you put your hand up you have

127
00:04:22,890 --> 00:04:26,250
to leave and no one did right so no one

128
00:04:24,960 --> 00:04:27,359
does no one has a hundred percent

129
00:04:26,250 --> 00:04:30,240
security

130
00:04:27,360 --> 00:04:31,710
nothing is secure and we sometimes have

131
00:04:30,240 --> 00:04:33,210
people access their environments maybe

132
00:04:31,710 --> 00:04:35,188
we get quarters maybe people leave

133
00:04:33,210 --> 00:04:37,378
laptops on buses that contain secret

134
00:04:35,189 --> 00:04:39,419
documents but every now and again our

135
00:04:37,379 --> 00:04:41,189
key falls into the hands of the wrong

136
00:04:39,419 --> 00:04:44,430
people someone will get my key that is

137
00:04:41,189 --> 00:04:45,419
not me we call this a key compromise and

138
00:04:44,430 --> 00:04:47,969
it can happen for a whole bunch of

139
00:04:45,419 --> 00:04:49,530
different different reasons we don't we

140
00:04:47,969 --> 00:04:51,539
don't care how or why it happens once

141
00:04:49,530 --> 00:04:53,938
this key falls into someone else's hand

142
00:04:51,539 --> 00:04:55,229
they can do what we can do which is to

143
00:04:53,939 --> 00:04:58,800
present this certificate to the browser

144
00:04:55,229 --> 00:05:00,120
and prove they are now my website so we

145
00:04:58,800 --> 00:05:02,669
now have a scenario where somebody who

146
00:05:00,120 --> 00:05:05,069
is not me not my website can prove that

147
00:05:02,669 --> 00:05:06,990
they are technically and this is a

148
00:05:05,069 --> 00:05:08,460
really bad scenario because it defeats

149
00:05:06,990 --> 00:05:10,860
the whole purpose of everything that we

150
00:05:08,460 --> 00:05:13,590
have green HTTPS and a padlock in the

151
00:05:10,860 --> 00:05:15,029
browser maybe not very soon but it's now

152
00:05:13,590 --> 00:05:17,340
meaningless it's now worthless so we

153
00:05:15,029 --> 00:05:18,479
have to have a way to undo this and the

154
00:05:17,340 --> 00:05:19,799
first thing that you think of is well

155
00:05:18,479 --> 00:05:21,508
we'll just ask the bad guys to delete

156
00:05:19,800 --> 00:05:23,669
the file right like please don't use our

157
00:05:21,509 --> 00:05:25,229
certificate in bad ways I've had a zero

158
00:05:23,669 --> 00:05:27,240
percent success rate so far it's not

159
00:05:25,229 --> 00:05:31,378
really help many people so we need

160
00:05:27,240 --> 00:05:32,909
technical measures we need revocation we

161
00:05:31,379 --> 00:05:35,039
need to take the trust in that

162
00:05:32,909 --> 00:05:37,919
certificate back we need to stop it from

163
00:05:35,039 --> 00:05:41,250
working after we've lost control of it

164
00:05:37,919 --> 00:05:42,568
so there are two mechanisms with which

165
00:05:41,250 --> 00:05:44,009
we can do this

166
00:05:42,569 --> 00:05:45,210
I've been compromised I wake up my

167
00:05:44,009 --> 00:05:47,250
websites been hacked whatever has

168
00:05:45,210 --> 00:05:48,779
happened I send a revocation request to

169
00:05:47,250 --> 00:05:51,150
my CA and say hey look that certificate

170
00:05:48,779 --> 00:05:52,319
you've issued to me something bad

171
00:05:51,150 --> 00:05:54,690
happened over the weekend

172
00:05:52,319 --> 00:05:56,759
bad guys got my key I need you to mark

173
00:05:54,690 --> 00:05:59,250
it as revoked and they will do this they

174
00:05:56,759 --> 00:06:01,199
have two mechanisms first one is a CR L

175
00:05:59,250 --> 00:06:04,650
so this is a certificate revocation list

176
00:06:01,199 --> 00:06:06,750
and as the name implies it's literally

177
00:06:04,650 --> 00:06:08,429
just a big honking list so they get the

178
00:06:06,750 --> 00:06:11,310
list out meseta Scott's had a bad day

179
00:06:08,430 --> 00:06:13,439
today right the entry on done and they

180
00:06:11,310 --> 00:06:14,729
update the list with this new entry it's

181
00:06:13,439 --> 00:06:17,610
a list of all certificates that have

182
00:06:14,729 --> 00:06:19,080
ever been revoked and there's also a no

183
00:06:17,610 --> 00:06:21,150
CSP responder this is the online

184
00:06:19,080 --> 00:06:22,969
certificate status protocol so instead

185
00:06:21,150 --> 00:06:25,560
of going downloading this whole big list

186
00:06:22,969 --> 00:06:27,210
with an RCS P responder you can actually

187
00:06:25,560 --> 00:06:29,580
just ask for the status of one

188
00:06:27,210 --> 00:06:32,310
certificate so you say hey is this

189
00:06:29,580 --> 00:06:33,688
particular certificate revoked and the

190
00:06:32,310 --> 00:06:35,909
OCSP responder will come back with a

191
00:06:33,689 --> 00:06:37,469
yes/no one so it actually says good or

192
00:06:35,909 --> 00:06:38,940
revoke so you say hey is this

193
00:06:37,469 --> 00:06:40,770
certificate revoked and the OCSP

194
00:06:38,940 --> 00:06:42,750
responder will say no it's not revoked

195
00:06:40,770 --> 00:06:45,080
you're good to use it so we have the

196
00:06:42,750 --> 00:06:47,340
mechanisms to fix this problem right

197
00:06:45,080 --> 00:06:49,020
except that it's not all kind of

198
00:06:47,340 --> 00:06:51,090
rainbows and butterflies so in this

199
00:06:49,020 --> 00:06:54,289
scenario now you've come to my website

200
00:06:51,090 --> 00:06:57,388
and you've been served a certificate you

201
00:06:54,289 --> 00:06:58,740
don't know from if this has been revoked

202
00:06:57,389 --> 00:07:00,810
you don't know it from if this is an

203
00:06:58,740 --> 00:07:02,910
attacker if someone that's using my

204
00:07:00,810 --> 00:07:06,930
certificate you don't know so you have

205
00:07:02,910 --> 00:07:08,940
to check every time so you may need to

206
00:07:06,930 --> 00:07:10,410
reach out to the CRL you reach out to

207
00:07:08,940 --> 00:07:12,509
the certificate revocation listen you

208
00:07:10,410 --> 00:07:15,389
pull it down pretty big file these days

209
00:07:12,509 --> 00:07:17,340
but that's fine we pull down the CRL the

210
00:07:15,389 --> 00:07:18,360
browser will scan through that and the

211
00:07:17,340 --> 00:07:19,830
browser will see that this certificate

212
00:07:18,360 --> 00:07:21,930
is on the revocation list and will say

213
00:07:19,830 --> 00:07:24,630
no i'm not going to accept that because

214
00:07:21,930 --> 00:07:26,280
it's on the revocation list and this is

215
00:07:24,630 --> 00:07:29,789
how we prevent this certificate from

216
00:07:26,280 --> 00:07:31,258
being used after it's been revoked it's

217
00:07:29,789 --> 00:07:33,719
exactly the same scenario with OCSP

218
00:07:31,259 --> 00:07:36,150
except we send a request to the OSP

219
00:07:33,720 --> 00:07:37,710
responder and we get the OSP response

220
00:07:36,150 --> 00:07:39,780
back now these in comparison are tiny

221
00:07:37,710 --> 00:07:41,549
because it's literally just a yes/no

222
00:07:39,780 --> 00:07:44,520
answer so we much prefer the smaller

223
00:07:41,550 --> 00:07:47,130
size of our CSP but we have the

224
00:07:44,520 --> 00:07:48,719
capabilities when we come up against a

225
00:07:47,130 --> 00:07:50,190
revoke certificate we have the

226
00:07:48,719 --> 00:07:54,930
capabilities of detecting that they've

227
00:07:50,190 --> 00:07:57,080
been revoked so one of the biggest

228
00:07:54,930 --> 00:07:59,280
problems with this first of all is that

229
00:07:57,080 --> 00:08:00,419
you don't know when you go to the

230
00:07:59,280 --> 00:08:01,830
website you don't know whether it's

231
00:08:00,419 --> 00:08:03,719
revoked you don't know if the person who

232
00:08:01,830 --> 00:08:06,060
the site is good or bad so you always

233
00:08:03,719 --> 00:08:07,469
have to do a revocation check now of

234
00:08:06,060 --> 00:08:09,690
course there's like little bits of cache

235
00:08:07,469 --> 00:08:11,370
times in there but broadly speaking you

236
00:08:09,690 --> 00:08:12,599
always have to check the status of a

237
00:08:11,370 --> 00:08:14,159
certificate because we can't make

238
00:08:12,599 --> 00:08:15,840
assumptions so whether or not you're

239
00:08:14,159 --> 00:08:17,849
speaking to the genuine me or the

240
00:08:15,840 --> 00:08:19,888
attacker impersonating me the browser

241
00:08:17,849 --> 00:08:23,819
always has to reach out and do some kind

242
00:08:19,889 --> 00:08:25,169
of red check now second question and

243
00:08:23,819 --> 00:08:26,880
it's the same rule if you put your hand

244
00:08:25,169 --> 00:08:30,030
up you have to leave who has a hundred

245
00:08:26,880 --> 00:08:31,650
percent uptime no one has a hundred

246
00:08:30,030 --> 00:08:33,390
percent uptime so what about the

247
00:08:31,650 --> 00:08:37,199
scenario when the browser reaches out

248
00:08:33,390 --> 00:08:38,338
and they're not they're assigned to

249
00:08:37,200 --> 00:08:40,079
looking to the first problems of

250
00:08:38,339 --> 00:08:42,390
revocation checking now what should the

251
00:08:40,078 --> 00:08:44,159
browser do in this scenario we've sent

252
00:08:42,390 --> 00:08:46,439
our request maybe for the CRL maybe to

253
00:08:44,159 --> 00:08:50,160
the OCSP responder and we sit there and

254
00:08:46,440 --> 00:08:52,770
we wait and no answer comes back now

255
00:08:50,160 --> 00:08:54,089
historically in years gone by we would

256
00:08:52,770 --> 00:08:56,400
do what we call a hard face

257
00:08:54,090 --> 00:08:57,840
on this revocation check so the rouse

258
00:08:56,400 --> 00:09:00,480
would say hey mister OCSP responder

259
00:08:57,840 --> 00:09:02,460
missus crl give me an answer nothing

260
00:09:00,480 --> 00:09:03,120
came back so the browser would say no

261
00:09:02,460 --> 00:09:05,490
I'm sorry

262
00:09:03,120 --> 00:09:08,010
this infrastructure is gone it's down

263
00:09:05,490 --> 00:09:09,720
maybe the CA is having a bad day so I

264
00:09:08,010 --> 00:09:12,300
reject this certificate because I can't

265
00:09:09,720 --> 00:09:15,570
be sure that it's not revoked now this

266
00:09:12,300 --> 00:09:18,180
is the most secure way of doing this the

267
00:09:15,570 --> 00:09:20,460
problem is this was all the gist of it

268
00:09:18,180 --> 00:09:23,250
and my website is fine but my website is

269
00:09:20,460 --> 00:09:25,620
now down the CA goes offline you go

270
00:09:23,250 --> 00:09:27,480
offline it's a point of failure in the

271
00:09:25,620 --> 00:09:29,010
system but this wasn't the only problem

272
00:09:27,480 --> 00:09:31,400
the availability problem there are more

273
00:09:29,010 --> 00:09:33,510
problems with both of these mechanisms

274
00:09:31,400 --> 00:09:36,209
so let's look at the revocation list

275
00:09:33,510 --> 00:09:37,770
first how big this ones are trick

276
00:09:36,210 --> 00:09:39,240
question how big do you think a

277
00:09:37,770 --> 00:09:40,829
revocation list might be bearing in mind

278
00:09:39,240 --> 00:09:43,710
when the browser connects to your site

279
00:09:40,830 --> 00:09:45,540
it has to go download this file and

280
00:09:43,710 --> 00:09:47,370
check it how big would you be

281
00:09:45,540 --> 00:09:49,310
comfortable with the browser reaching

282
00:09:47,370 --> 00:09:51,360
out and downloading some other file a

283
00:09:49,310 --> 00:09:53,130
couple of bytes because this is right in

284
00:09:51,360 --> 00:09:55,320
front of your TT FB this is literally

285
00:09:53,130 --> 00:09:55,970
one of the first things the browser had

286
00:09:55,320 --> 00:09:58,320
to do

287
00:09:55,970 --> 00:10:01,589
maybe the file is not that big maybe

288
00:09:58,320 --> 00:10:04,170
it's only 50 kilobytes where's the

289
00:10:01,589 --> 00:10:06,000
tolerance point would you be happy if

290
00:10:04,170 --> 00:10:09,300
the browser had to go down go down with

291
00:10:06,000 --> 00:10:10,860
a 500 K file what happens when it hits a

292
00:10:09,300 --> 00:10:12,959
Meg because revocation lists on the go

293
00:10:10,860 --> 00:10:14,400
one way and that's bigger there are

294
00:10:12,960 --> 00:10:15,930
things we can do to cut them up in shard

295
00:10:14,400 --> 00:10:17,910
them but ultimately revocation lists

296
00:10:15,930 --> 00:10:19,920
only go in the wrong direction and they

297
00:10:17,910 --> 00:10:21,660
do just go in one direction and they can

298
00:10:19,920 --> 00:10:24,719
get bigger and bigger and bigger over

299
00:10:21,660 --> 00:10:26,219
time so the scalability of revocation

300
00:10:24,720 --> 00:10:27,450
lists was a problem but it didn't really

301
00:10:26,220 --> 00:10:29,670
become too much of a problem because

302
00:10:27,450 --> 00:10:31,530
they were largely abundant in terms of

303
00:10:29,670 --> 00:10:32,849
the client-side checks the CA still

304
00:10:31,530 --> 00:10:34,589
maintained them but we don't use

305
00:10:32,850 --> 00:10:37,260
revocation lists like this certainly not

306
00:10:34,589 --> 00:10:39,600
in browsers we use OCSP instead because

307
00:10:37,260 --> 00:10:41,400
we love that tiny answer yes no answer

308
00:10:39,600 --> 00:10:44,040
so no matter when or how you ask it

309
00:10:41,400 --> 00:10:45,569
you'll always get a tiny OCSP response

310
00:10:44,040 --> 00:10:48,959
so it fixed a lot of the performance

311
00:10:45,570 --> 00:10:52,020
overheads but what question are you

312
00:10:48,959 --> 00:10:54,029
asking the OCSP responder you go to a

313
00:10:52,020 --> 00:10:56,279
website you get the certificate and you

314
00:10:54,029 --> 00:10:58,020
say one second I need to check the

315
00:10:56,279 --> 00:10:59,430
revocation status II reached out to the

316
00:10:58,020 --> 00:11:03,480
OCSP respond and say hey is this

317
00:10:59,430 --> 00:11:05,310
certificate revoked yes or no and that

318
00:11:03,480 --> 00:11:07,260
question changes depending on which

319
00:11:05,310 --> 00:11:07,649
website you visit because the question

320
00:11:07,260 --> 00:11:11,249
you

321
00:11:07,649 --> 00:11:13,019
is this I've just opened pornhub.com in

322
00:11:11,249 --> 00:11:14,759
my browser and I would like to know if

323
00:11:13,019 --> 00:11:17,009
there certificate is still okay for me

324
00:11:14,759 --> 00:11:18,839
to accept and you've just told the whole

325
00:11:17,009 --> 00:11:22,050
CSV responder exactly what website

326
00:11:18,839 --> 00:11:24,119
you're about to open in the browser OCSP

327
00:11:22,050 --> 00:11:25,979
fixed a huge kind of performance issue

328
00:11:24,119 --> 00:11:27,839
with the size of replication list and

329
00:11:25,980 --> 00:11:29,550
with it introduced a privacy issue

330
00:11:27,839 --> 00:11:31,639
because you're now essentially

331
00:11:29,550 --> 00:11:33,868
advertising your browsing history in

332
00:11:31,639 --> 00:11:35,819
basically real-time to a third party

333
00:11:33,869 --> 00:11:37,529
that the average end-user has zero

334
00:11:35,819 --> 00:11:39,269
knowledge of the average end user does

335
00:11:37,529 --> 00:11:42,689
not though these OCSP requests are being

336
00:11:39,269 --> 00:11:44,939
sent so there are many different

337
00:11:42,689 --> 00:11:47,519
problems with with existing revocation

338
00:11:44,939 --> 00:11:50,399
mechanisms and it was quite a few years

339
00:11:47,519 --> 00:11:52,499
ago now in chromium when the stands

340
00:11:50,399 --> 00:11:54,629
changed and one of the biggest changes

341
00:11:52,499 --> 00:11:56,970
that they made was this whole scenario

342
00:11:54,629 --> 00:11:58,410
here this whole online form of

343
00:11:56,970 --> 00:12:00,300
revocation checking went from hard fail

344
00:11:58,410 --> 00:12:02,040
to soft fail and this was the first step

345
00:12:00,300 --> 00:12:04,170
towards fixing the third-party

346
00:12:02,040 --> 00:12:06,748
dependency problem what happens if the

347
00:12:04,170 --> 00:12:10,050
CA goes down okay well if the CA is down

348
00:12:06,749 --> 00:12:12,420
will abandon the check because if the CA

349
00:12:10,050 --> 00:12:15,628
is offline we don't want your website to

350
00:12:12,420 --> 00:12:17,939
go offline and what this meant was it

351
00:12:15,629 --> 00:12:20,490
was trivially easy for an attacker on

352
00:12:17,939 --> 00:12:22,649
the network to simulate the CA being

353
00:12:20,490 --> 00:12:23,999
down because if the attacker is on the

354
00:12:22,649 --> 00:12:25,740
network there a network adversary they

355
00:12:23,999 --> 00:12:28,470
control traffic and they watch the

356
00:12:25,740 --> 00:12:29,879
browser make this revocation request and

357
00:12:28,470 --> 00:12:31,829
they just grab that request and toss it

358
00:12:29,879 --> 00:12:34,499
in the trash and to the browser what

359
00:12:31,829 --> 00:12:36,599
does that look like it looks like the

360
00:12:34,499 --> 00:12:38,279
ca's down it looks like the CA is gone

361
00:12:36,600 --> 00:12:40,769
and the browser would then soft bail

362
00:12:38,279 --> 00:12:42,389
through that check now chromium switched

363
00:12:40,769 --> 00:12:44,339
to software a very long time ago

364
00:12:42,389 --> 00:12:46,259
Firefox still does software right now

365
00:12:44,339 --> 00:12:48,899
there's varying timeouts generally like

366
00:12:46,259 --> 00:12:50,939
in a three to five second area and you

367
00:12:48,899 --> 00:12:52,860
don't have to take my word for this look

368
00:12:50,939 --> 00:12:54,990
at the OCSP endpoint for any certificate

369
00:12:52,860 --> 00:12:57,240
going to your host file one two seven

370
00:12:54,990 --> 00:12:58,799
zero zero one the endpoint and hit a

371
00:12:57,240 --> 00:13:00,779
site with a revoked sir I have one

372
00:12:58,799 --> 00:13:02,639
subdomain on my site revoked uh Scott

373
00:13:00,779 --> 00:13:04,559
how about credit UK but I call that

374
00:13:02,639 --> 00:13:08,189
encrypts LCS B responder page will load

375
00:13:04,559 --> 00:13:09,719
fine so when we move from heartfelt

376
00:13:08,189 --> 00:13:11,519
asofail this for me was the defining

377
00:13:09,720 --> 00:13:13,589
point on when revocation was really

378
00:13:11,519 --> 00:13:16,049
broken because we now have a security

379
00:13:13,589 --> 00:13:17,850
mechanism the the people that we're

380
00:13:16,049 --> 00:13:21,209
trying to defend against can turn off

381
00:13:17,850 --> 00:13:23,400
and that's essentially why

382
00:13:21,210 --> 00:13:26,460
revocation is broken because the best

383
00:13:23,400 --> 00:13:28,590
analogy is it it was Adam Langley at

384
00:13:26,460 --> 00:13:30,210
Google that said revocation checking

385
00:13:28,590 --> 00:13:32,670
right now as we do it is a seatbelt that

386
00:13:30,210 --> 00:13:33,870
snaps in a car crash you all get in your

387
00:13:32,670 --> 00:13:35,010
cars I bet you all do this you all get

388
00:13:33,870 --> 00:13:36,240
in your cars every day you drive to it

389
00:13:35,010 --> 00:13:38,460
you put your seatbelts on and you've

390
00:13:36,240 --> 00:13:40,410
never actually used it you've never

391
00:13:38,460 --> 00:13:42,180
depended on it the mechanism is there

392
00:13:40,410 --> 00:13:44,160
but you've never needed it and the one

393
00:13:42,180 --> 00:13:46,319
time you need it the one time we're

394
00:13:44,160 --> 00:13:47,880
under attack from a network adversary is

395
00:13:46,320 --> 00:13:49,140
the one time it won't work

396
00:13:47,880 --> 00:13:50,220
so say was the seat belt snapping in the

397
00:13:49,140 --> 00:13:52,590
crash that's the only time you actually

398
00:13:50,220 --> 00:13:54,960
needed it and it didn't work so my

399
00:13:52,590 --> 00:13:56,400
question would then be what's the point

400
00:13:54,960 --> 00:13:58,350
in pointing your seat belt on why do we

401
00:13:56,400 --> 00:13:59,910
have seat belts in cars and this is

402
00:13:58,350 --> 00:14:01,760
where we are with revocation checking so

403
00:13:59,910 --> 00:14:04,560
quite a few years ago now actually

404
00:14:01,760 --> 00:14:06,300
chromium completely abandoned revocation

405
00:14:04,560 --> 00:14:08,699
checking and they don't do this anymore

406
00:14:06,300 --> 00:14:10,109
so this is the current view of what we

407
00:14:08,700 --> 00:14:11,670
think of when we think of revocation

408
00:14:10,110 --> 00:14:13,770
checking but right now Chrome browser

409
00:14:11,670 --> 00:14:16,439
for quite a long time actually this is

410
00:14:13,770 --> 00:14:19,319
what it looks like in Chrome it doesn't

411
00:14:16,440 --> 00:14:21,600
even do it chromium browser does not do

412
00:14:19,320 --> 00:14:24,990
any kind of online revocation checking

413
00:14:21,600 --> 00:14:27,270
and Firefox is going the same way excuse

414
00:14:24,990 --> 00:14:28,860
me so very soon if Firefox don't back

415
00:14:27,270 --> 00:14:30,449
out the change that they committed I

416
00:14:28,860 --> 00:14:33,000
think it was late last years I know from

417
00:14:30,450 --> 00:14:34,590
Firefox here when trying to track this

418
00:14:33,000 --> 00:14:36,210
in their in their code repo they've

419
00:14:34,590 --> 00:14:37,290
already backed out the code to do the

420
00:14:36,210 --> 00:14:39,720
online revocation checking because

421
00:14:37,290 --> 00:14:43,829
Firefox off fails right now the software

422
00:14:39,720 --> 00:14:45,390
web checking doesn't work so this is

423
00:14:43,830 --> 00:14:47,520
where we are when I I wants it to kind

424
00:14:45,390 --> 00:14:48,840
of justify this because when I say you

425
00:14:47,520 --> 00:14:50,370
know revocation is broken and it's

426
00:14:48,840 --> 00:14:52,140
pointless and there's no use in doing it

427
00:14:50,370 --> 00:14:54,390
as it currently stands I mean that and

428
00:14:52,140 --> 00:14:56,040
this is why it's not a fun title it's

429
00:14:54,390 --> 00:14:59,460
not scare mongering we need to fix this

430
00:14:56,040 --> 00:15:01,170
problem so revocation is broken I hope

431
00:14:59,460 --> 00:15:02,550
that was a good enough explanation for

432
00:15:01,170 --> 00:15:04,290
you all to agree with me that we have

433
00:15:02,550 --> 00:15:06,810
this issue is more and more of us push

434
00:15:04,290 --> 00:15:08,219
towards an encrypted web these

435
00:15:06,810 --> 00:15:10,319
certificates these keys that we look

436
00:15:08,220 --> 00:15:12,000
after become more and more important and

437
00:15:10,320 --> 00:15:12,690
right now if something goes wrong which

438
00:15:12,000 --> 00:15:14,070
it does

439
00:15:12,690 --> 00:15:16,470
maybe not frequently but it does go

440
00:15:14,070 --> 00:15:18,480
wrong we need a way to take back the

441
00:15:16,470 --> 00:15:20,520
trust in these documents we can't just

442
00:15:18,480 --> 00:15:23,220
keep going on without a mechanism to fix

443
00:15:20,520 --> 00:15:25,410
this so what are we doing to fix this

444
00:15:23,220 --> 00:15:26,520
first thing that I want to talk about is

445
00:15:25,410 --> 00:15:29,310
something that Chrome and Firefox

446
00:15:26,520 --> 00:15:32,100
actually do themselves chrome calls this

447
00:15:29,310 --> 00:15:34,199
crl sets and Firefox call this one crl

448
00:15:32,100 --> 00:15:36,699
now

449
00:15:34,199 --> 00:15:38,290
caveat from this will never help me and

450
00:15:36,699 --> 00:15:40,449
it will probably never help any of you

451
00:15:38,290 --> 00:15:42,099
because what these two mechanisms do is

452
00:15:40,449 --> 00:15:43,689
the these two browsers independently

453
00:15:42,100 --> 00:15:45,850
they scrape together all the CR ELLs

454
00:15:43,690 --> 00:15:47,800
hence the names 1cr elzar firefox grabs

455
00:15:45,850 --> 00:15:49,899
all the CRLs out there and they merge

456
00:15:47,800 --> 00:15:51,370
them into this one huge big file but all

457
00:15:49,899 --> 00:15:53,139
they take out of there is high value

458
00:15:51,370 --> 00:15:54,610
certificates really high value

459
00:15:53,139 --> 00:15:56,290
certificate so that things like a

460
00:15:54,610 --> 00:15:57,850
certificate authority can you imagine

461
00:15:56,290 --> 00:15:59,769
let's encrypt lose one of their search

462
00:15:57,850 --> 00:16:01,180
they lose the key the attacker could

463
00:15:59,769 --> 00:16:02,860
then just issue all the certificates in

464
00:16:01,180 --> 00:16:05,949
the world they want we have to have a

465
00:16:02,860 --> 00:16:08,380
way to stop bar so crl set someone CL

466
00:16:05,949 --> 00:16:10,029
basically covers CA certificates they

467
00:16:08,380 --> 00:16:12,880
are the worst of the worst if they got

468
00:16:10,029 --> 00:16:14,800
into the wrong hands but I'm never gonna

469
00:16:12,880 --> 00:16:16,120
get my certificate in there none of you

470
00:16:14,800 --> 00:16:17,258
know I even try with how vibrant is

471
00:16:16,120 --> 00:16:20,110
going to get his certificate in there

472
00:16:17,259 --> 00:16:22,480
this is not for us so we do have that 1%

473
00:16:20,110 --> 00:16:25,269
kind of worst of the worst covered but

474
00:16:22,480 --> 00:16:28,540
we still have the other 99% to go so

475
00:16:25,269 --> 00:16:30,779
what can we do there sorry yeah that's

476
00:16:28,540 --> 00:16:32,740
how they merge all the CR ELLs together

477
00:16:30,779 --> 00:16:34,540
so the first thing that I want to talk

478
00:16:32,740 --> 00:16:36,490
about is OCSP stapling a lot of people

479
00:16:34,540 --> 00:16:40,380
mention this and bring it up when I talk

480
00:16:36,490 --> 00:16:43,720
about revocation and OCSP stapling was

481
00:16:40,380 --> 00:16:45,399
it's it fixes the privacy issue and I'll

482
00:16:43,720 --> 00:16:47,139
explain why it's not a security feature

483
00:16:45,399 --> 00:16:50,139
because it often gets brought up as such

484
00:16:47,139 --> 00:16:53,050
and it really isn't so OCSP stapling we

485
00:16:50,139 --> 00:16:55,000
talked about the privacy issue with OCSP

486
00:16:53,050 --> 00:16:57,339
and the private issue was the browser

487
00:16:55,000 --> 00:16:58,540
reaching out to the responder and saying

488
00:16:57,339 --> 00:17:00,790
hey how does this pornhub.com

489
00:16:58,540 --> 00:17:02,889
certificate lock is it still good that

490
00:17:00,790 --> 00:17:05,980
was the privacy leak because it had to

491
00:17:02,889 --> 00:17:07,919
fetch back the OCSP response so a CSP

492
00:17:05,980 --> 00:17:10,990
stapling flips that model very slightly

493
00:17:07,919 --> 00:17:13,150
in the instead of the client reaching

494
00:17:10,990 --> 00:17:15,459
out to the OCSP responder the server

495
00:17:13,150 --> 00:17:17,709
reaches out to the OCSP responder and

496
00:17:15,459 --> 00:17:18,909
fetches the OCSP response and I

497
00:17:17,709 --> 00:17:20,260
mentioned earlier there was just like a

498
00:17:18,909 --> 00:17:22,209
little bit of a caching window so you

499
00:17:20,260 --> 00:17:23,740
can actually fetch this response and

500
00:17:22,209 --> 00:17:26,140
people generally cache them for around a

501
00:17:23,740 --> 00:17:27,549
day now it sounds kind of weird at first

502
00:17:26,140 --> 00:17:30,280
glance because this now looks like the

503
00:17:27,549 --> 00:17:33,370
server is certifying itself has not

504
00:17:30,280 --> 00:17:34,658
revoked but it's fine because just in

505
00:17:33,370 --> 00:17:36,428
the same way our certificate is signed

506
00:17:34,659 --> 00:17:38,020
by the CA and the browser can make sure

507
00:17:36,429 --> 00:17:39,100
it's genuine and hasn't been tampered

508
00:17:38,020 --> 00:17:41,049
with cetera

509
00:17:39,100 --> 00:17:43,449
the OCSP response is signed in exactly

510
00:17:41,049 --> 00:17:45,340
the same fashion so the browser has the

511
00:17:43,450 --> 00:17:46,510
same level of assurance about the OCSP

512
00:17:45,340 --> 00:17:47,620
response as it does about the

513
00:17:46,510 --> 00:17:49,990
certificate know

514
00:17:47,620 --> 00:17:51,729
so where it got it from so this is fine

515
00:17:49,990 --> 00:17:53,230
the server will grab that it will cache

516
00:17:51,730 --> 00:17:55,000
it and we call it stapling because the

517
00:17:53,230 --> 00:17:56,950
idea is you take your certificate the

518
00:17:55,000 --> 00:17:58,480
OCSP response you stapled the two

519
00:17:56,950 --> 00:18:01,210
documents together and handle them both

520
00:17:58,480 --> 00:18:02,860
to the browser at the same time

521
00:18:01,210 --> 00:18:05,409
so now the browser doesn't have to do

522
00:18:02,860 --> 00:18:08,260
this privacy and performance impacting

523
00:18:05,409 --> 00:18:09,880
check out to the responder now the

524
00:18:08,260 --> 00:18:12,158
reason that this is only a performance

525
00:18:09,880 --> 00:18:13,809
and privacy feature is how many network

526
00:18:12,159 --> 00:18:17,230
attackers do you think are going to

527
00:18:13,809 --> 00:18:18,970
enable OCSP stapling and the answer is

528
00:18:17,230 --> 00:18:20,620
none why would they right this is an

529
00:18:18,970 --> 00:18:22,750
optional performance and privacy feature

530
00:18:20,620 --> 00:18:24,129
that we can't depend on an attacker to

531
00:18:22,750 --> 00:18:26,070
have enabled because they just wouldn't

532
00:18:24,130 --> 00:18:31,120
this is not how this works

533
00:18:26,070 --> 00:18:33,399
so how do we take that and make it

534
00:18:31,120 --> 00:18:34,449
mandatory and we're currently working on

535
00:18:33,399 --> 00:18:36,309
this this is something that let's

536
00:18:34,450 --> 00:18:37,779
encrypt actually support in terms of the

537
00:18:36,309 --> 00:18:40,928
certificates right now and we call the

538
00:18:37,779 --> 00:18:43,419
OCSP must staple so it takes the

539
00:18:40,929 --> 00:18:46,779
optional nature of stapling and it makes

540
00:18:43,419 --> 00:18:49,149
it mandatory so when we go to lyse and

541
00:18:46,779 --> 00:18:50,770
cryptical our csr and send it to them to

542
00:18:49,149 --> 00:18:52,418
get our certificate back now what we say

543
00:18:50,770 --> 00:18:55,450
instead is I would like a certificate

544
00:18:52,419 --> 00:18:57,429
with the must April flag set and this is

545
00:18:55,450 --> 00:18:59,890
literally just a little flag inside the

546
00:18:57,429 --> 00:19:03,340
certificate that says this certificate

547
00:18:59,890 --> 00:19:05,710
must be served with a valid OCSP staple

548
00:19:03,340 --> 00:19:09,879
alongside it it makes that OCSP stapling

549
00:19:05,710 --> 00:19:11,169
non optional which right now it is so

550
00:19:09,880 --> 00:19:13,570
when you serve that certificate out to

551
00:19:11,169 --> 00:19:15,760
the client it now looks like this we

552
00:19:13,570 --> 00:19:17,620
have an extension at the bottom and it

553
00:19:15,760 --> 00:19:20,399
literally just says I was GSP more stapl

554
00:19:17,620 --> 00:19:24,459
and it changes it changes the scenario

555
00:19:20,399 --> 00:19:26,529
fundamentally because the attacker now

556
00:19:24,460 --> 00:19:28,360
has two choices me is a genuine host

557
00:19:26,529 --> 00:19:30,250
using a non revoke certificate I can

558
00:19:28,360 --> 00:19:32,399
OCSP staple this is fine this is easy

559
00:19:30,250 --> 00:19:35,770
pretty much all platforms support this

560
00:19:32,399 --> 00:19:38,678
it's actually enabled by default on iis

561
00:19:35,770 --> 00:19:41,020
it's an optional config option on nginx

562
00:19:38,679 --> 00:19:42,429
in Apache but this is easy for me to do

563
00:19:41,020 --> 00:19:44,770
right I'm the genuine host I get the

564
00:19:42,429 --> 00:19:46,809
OCSP response I can cache that and maybe

565
00:19:44,770 --> 00:19:49,120
renew it once a day it's valid for at

566
00:19:46,809 --> 00:19:51,879
least seven days right now and this is

567
00:19:49,120 --> 00:19:54,299
easy okay but we switch me out with the

568
00:19:51,880 --> 00:19:56,289
attacker someone that wants to

569
00:19:54,299 --> 00:19:58,149
impersonate me someone that wants to use

570
00:19:56,289 --> 00:20:00,158
my certificate they now have two choices

571
00:19:58,149 --> 00:20:00,860
they can either serve the certificate

572
00:20:00,159 --> 00:20:03,140
without the state

573
00:20:00,860 --> 00:20:05,330
or serve it with so if they serve it

574
00:20:03,140 --> 00:20:07,280
without the staple the browser is going

575
00:20:05,330 --> 00:20:08,600
to look at that and say well it's a must

576
00:20:07,280 --> 00:20:09,290
staple certificate and it doesn't have a

577
00:20:08,600 --> 00:20:11,449
staple

578
00:20:09,290 --> 00:20:12,770
so I reject that straight away the

579
00:20:11,450 --> 00:20:15,020
second option is to serve it with the

580
00:20:12,770 --> 00:20:17,120
staple so the attacker goes to the OCSP

581
00:20:15,020 --> 00:20:19,190
responder and they get the OCSP response

582
00:20:17,120 --> 00:20:21,649
except now the OS CSP responses

583
00:20:19,190 --> 00:20:23,210
well this certificate is revoked they

584
00:20:21,650 --> 00:20:25,700
staple that to the certificate give that

585
00:20:23,210 --> 00:20:27,470
to the browser and the browser says well

586
00:20:25,700 --> 00:20:29,990
this response says it's revoked so I

587
00:20:27,470 --> 00:20:31,250
refused to accept this certificate and

588
00:20:29,990 --> 00:20:33,980
with just that one little flag in the

589
00:20:31,250 --> 00:20:36,140
certificate we can take OCSP stapling

590
00:20:33,980 --> 00:20:38,660
from optional to mandatory and that

591
00:20:36,140 --> 00:20:41,390
would fully fix the revocation problem

592
00:20:38,660 --> 00:20:44,150
but as with most new things it's not

593
00:20:41,390 --> 00:20:46,429
quite that simple right now only Firefox

594
00:20:44,150 --> 00:20:48,440
support so CSP must staple and I know

595
00:20:46,429 --> 00:20:49,730
there's been lots of I mean I've had

596
00:20:48,440 --> 00:20:52,760
lots of conversations with people at

597
00:20:49,730 --> 00:20:54,440
chrome about supporting this and the

598
00:20:52,760 --> 00:20:55,940
concern is that servers are not quite

599
00:20:54,440 --> 00:20:58,460
there in terms of best they think

600
00:20:55,940 --> 00:20:59,630
implementation iis does this by default

601
00:20:58,460 --> 00:21:01,520
and he's quite good at it

602
00:20:59,630 --> 00:21:03,679
nginx in Apache if you enable it are

603
00:21:01,520 --> 00:21:06,290
also fairly good there's a couple of

604
00:21:03,679 --> 00:21:08,540
edge cases where what was the one I have

605
00:21:06,290 --> 00:21:09,799
with Apache if Apache gets a malformed

606
00:21:08,540 --> 00:21:11,210
OCSP response

607
00:21:09,799 --> 00:21:12,470
it doesn't actually validate it and it

608
00:21:11,210 --> 00:21:14,419
will stay place so there's like a weird

609
00:21:12,470 --> 00:21:15,710
bug there and what they're saying is we

610
00:21:14,419 --> 00:21:17,929
just need to wait for a little bit more

611
00:21:15,710 --> 00:21:21,380
maturity before we'd be happy enabling

612
00:21:17,929 --> 00:21:23,240
this so for me in the shortest term this

613
00:21:21,380 --> 00:21:24,620
is probably one of the best options that

614
00:21:23,240 --> 00:21:27,049
I would like to see I already have more

615
00:21:24,620 --> 00:21:29,959
stapl certificates I'm confident in my

616
00:21:27,049 --> 00:21:31,639
ability to staple so I use this but

617
00:21:29,960 --> 00:21:34,490
maybe not everyone else is and we do

618
00:21:31,640 --> 00:21:36,559
have a few more options and one of the

619
00:21:34,490 --> 00:21:38,150
biggest options right now is to increase

620
00:21:36,559 --> 00:21:39,770
our transparency in the ecosystem

621
00:21:38,150 --> 00:21:41,870
because not only is there the scenario

622
00:21:39,770 --> 00:21:43,910
where an attacker can steal my key to

623
00:21:41,870 --> 00:21:46,129
use my certificate what if they just

624
00:21:43,910 --> 00:21:48,470
manage to get one they trick let's

625
00:21:46,130 --> 00:21:49,490
encrypt and let's say Troy comes along

626
00:21:48,470 --> 00:21:51,140
he puts his black hoodie on

627
00:21:49,490 --> 00:21:52,669
he goes to lesson Krypton he says hi I'm

628
00:21:51,140 --> 00:21:53,900
Scott and that same crypto like hey

629
00:21:52,669 --> 00:21:56,030
Great Scott here's a certificate for

630
00:21:53,900 --> 00:21:58,130
Scott humbucker at UK we call that

631
00:21:56,030 --> 00:21:59,720
musicians he's got a certificate that he

632
00:21:58,130 --> 00:22:01,640
should not have but it's still the same

633
00:21:59,720 --> 00:22:05,480
problem I no need to revoke that and

634
00:22:01,640 --> 00:22:06,770
stop him from using it so that's the st.

635
00:22:05,480 --> 00:22:08,150
revocation problem but how do we

636
00:22:06,770 --> 00:22:10,340
actually get out ahead of that how would

637
00:22:08,150 --> 00:22:12,740
I know think about this scenario how do

638
00:22:10,340 --> 00:22:15,549
I know when try gets our certificate

639
00:22:12,740 --> 00:22:18,350
he's try gonna come tell me probably not

640
00:22:15,549 --> 00:22:20,960
so we need to have more transparency in

641
00:22:18,350 --> 00:22:22,340
the ecosystem to make sure that people

642
00:22:20,960 --> 00:22:25,369
can't get these certificates with ours

643
00:22:22,340 --> 00:22:27,320
knowing so we're introducing something

644
00:22:25,369 --> 00:22:29,689
right now and this is literally coming

645
00:22:27,320 --> 00:22:31,970
in a matter of weeks into chrome called

646
00:22:29,690 --> 00:22:34,129
certificate transparency and this adds

647
00:22:31,970 --> 00:22:36,019
one extra requirement onto the

648
00:22:34,129 --> 00:22:37,668
certificate authority so this is what

649
00:22:36,019 --> 00:22:40,249
the scenario looked like earlier all the

650
00:22:37,669 --> 00:22:41,539
CA had to maintain was the CRL OCSP and

651
00:22:40,249 --> 00:22:44,360
they were the bits of infrastructure but

652
00:22:41,539 --> 00:22:45,830
CT adds one new mechanism on top of this

653
00:22:44,360 --> 00:22:49,039
and it's called the CT logger

654
00:22:45,830 --> 00:22:50,418
certificate transparency log and this is

655
00:22:49,039 --> 00:22:51,980
for those of you if you get excited

656
00:22:50,419 --> 00:22:53,389
about blockchain this is essentially a

657
00:22:51,980 --> 00:22:55,669
miracle hash tree this is the blockchain

658
00:22:53,389 --> 00:22:58,039
and the CA when they issue a certificate

659
00:22:55,669 --> 00:23:00,169
will be required to write an entry onto

660
00:22:58,039 --> 00:23:01,460
this log and say hey I've just issued a

661
00:23:00,169 --> 00:23:04,220
new certificate for Scott home got good

662
00:23:01,460 --> 00:23:05,720
at UK here are all the details and what

663
00:23:04,220 --> 00:23:07,879
I can do is a site operator who's just

664
00:23:05,720 --> 00:23:10,759
watched these logs so we can see what

665
00:23:07,879 --> 00:23:13,399
all CAS are issuing in real time around

666
00:23:10,759 --> 00:23:14,990
the world and it's not just the CAS that

667
00:23:13,399 --> 00:23:17,178
can write these entries onto the log the

668
00:23:14,990 --> 00:23:19,309
Google crawler right now as its crawling

669
00:23:17,179 --> 00:23:21,379
the web if it finds certificates will

670
00:23:19,309 --> 00:23:23,119
automatically submit them to these logs

671
00:23:21,379 --> 00:23:24,769
so yes let's encrypt we'll submit them

672
00:23:23,119 --> 00:23:26,449
and get what we call the signed

673
00:23:24,769 --> 00:23:28,669
certificate timestamp Bank that's proof

674
00:23:26,450 --> 00:23:30,980
it's being submitted but you could do

675
00:23:28,669 --> 00:23:32,299
this yourself if your CAE is not logging

676
00:23:30,980 --> 00:23:33,980
right now you can still log your own

677
00:23:32,299 --> 00:23:35,990
certificates you as a person can go to a

678
00:23:33,980 --> 00:23:38,119
website right now grab their certs and

679
00:23:35,990 --> 00:23:40,580
submit it to a CT log and get a proof

680
00:23:38,119 --> 00:23:42,889
back so this is an open system as long

681
00:23:40,580 --> 00:23:45,168
as it's a valid cert from a CA you can

682
00:23:42,889 --> 00:23:47,418
grab that thing and go submit it to a CT

683
00:23:45,169 --> 00:23:49,070
log and have like a record that it's

684
00:23:47,419 --> 00:23:52,460
been done and you will get your proof

685
00:23:49,070 --> 00:23:54,918
back so this is great but how do we know

686
00:23:52,460 --> 00:23:56,600
the CA does it if I say hey let's

687
00:23:54,919 --> 00:23:59,240
encrypt you must log all of your

688
00:23:56,600 --> 00:24:01,248
certificates how do I know if they don't

689
00:23:59,240 --> 00:24:03,139
what if they only log 99% of them and

690
00:24:01,249 --> 00:24:06,049
don't tell me about the other 1% we need

691
00:24:03,139 --> 00:24:08,199
to know that certificates are definitely

692
00:24:06,049 --> 00:24:10,850
logged to have full and assured

693
00:24:08,200 --> 00:24:14,899
transparency and this is the proof this

694
00:24:10,850 --> 00:24:17,149
is the SCT and this is how we use it so

695
00:24:14,899 --> 00:24:19,070
we take the SCT and we put it inside the

696
00:24:17,149 --> 00:24:21,139
certificate so when I went to let's

697
00:24:19,070 --> 00:24:23,658
encrypt and ask for my certificate the

698
00:24:21,139 --> 00:24:26,029
current chromium CT qualification

699
00:24:23,659 --> 00:24:26,580
criteria as we call it actually requires

700
00:24:26,029 --> 00:24:28,919
this that if

701
00:24:26,580 --> 00:24:31,260
to be logged to three independent logs

702
00:24:28,919 --> 00:24:32,760
well operated by Google one not operated

703
00:24:31,260 --> 00:24:34,470
by Google and all three of them

704
00:24:32,760 --> 00:24:36,510
independent from the other so we've got

705
00:24:34,470 --> 00:24:39,210
force diversity and we also have some

706
00:24:36,510 --> 00:24:40,320
resilience in the ecosystem as well so

707
00:24:39,210 --> 00:24:42,059
when you submit that they actually

708
00:24:40,320 --> 00:24:44,070
submit the pre certificate which is the

709
00:24:42,059 --> 00:24:46,080
certificate right before it was signed

710
00:24:44,070 --> 00:24:47,428
you submit the pre certificate into the

711
00:24:46,080 --> 00:24:48,809
logs and you get those three s duties

712
00:24:47,429 --> 00:24:50,159
back those are your three proofs that

713
00:24:48,809 --> 00:24:52,889
you've definitely submitted this thing

714
00:24:50,159 --> 00:24:55,080
into the log and let's encrypt well then

715
00:24:52,890 --> 00:24:56,580
just sign that into the certificate they

716
00:24:55,080 --> 00:24:59,039
put them inside the certificate sign the

717
00:24:56,580 --> 00:25:00,840
document give it back to me I install

718
00:24:59,039 --> 00:25:01,408
that into my website goes out to the

719
00:25:00,840 --> 00:25:03,360
browser

720
00:25:01,409 --> 00:25:05,669
chromium will pass those SC T's out and

721
00:25:03,360 --> 00:25:08,158
check the signatures and all the SATs to

722
00:25:05,669 --> 00:25:09,750
make sure they're valid so from I'm

723
00:25:08,159 --> 00:25:13,169
pretty is it this month or next month do

724
00:25:09,750 --> 00:25:14,610
you know Emily see next

725
00:25:13,169 --> 00:25:16,380
it's literally imminent I haven't quite

726
00:25:14,610 --> 00:25:18,510
kept off on the release cycle but

727
00:25:16,380 --> 00:25:21,000
literally within a number of weeks

728
00:25:18,510 --> 00:25:22,230
chromium will start requiring this so if

729
00:25:21,000 --> 00:25:25,799
it gets a certificate that was issued

730
00:25:22,230 --> 00:25:28,350
that does not have CT qualification ie

731
00:25:25,799 --> 00:25:31,289
it does not have enough SC TS grant will

732
00:25:28,350 --> 00:25:33,090
just say no this certificate could have

733
00:25:31,289 --> 00:25:34,590
issued been issued in secret there's no

734
00:25:33,090 --> 00:25:36,928
proof that this certificate is public

735
00:25:34,590 --> 00:25:38,340
knowledge we want to see those SC T's

736
00:25:36,929 --> 00:25:40,950
inside the document and we are literally

737
00:25:38,340 --> 00:25:42,299
right on the verge of this being

738
00:25:40,950 --> 00:25:44,059
launched into chromium and I'm really

739
00:25:42,299 --> 00:25:46,440
excited about this because it's forcing

740
00:25:44,059 --> 00:25:47,908
transparency in the ecosystem and what

741
00:25:46,440 --> 00:25:48,630
that means is it's harder to do bad

742
00:25:47,909 --> 00:25:50,130
things

743
00:25:48,630 --> 00:25:52,649
whether that's intentionally malicious

744
00:25:50,130 --> 00:25:54,210
or just negligent it doesn't matter but

745
00:25:52,649 --> 00:25:56,459
it becomes more difficult to do bad

746
00:25:54,210 --> 00:25:57,779
things we can audit CAS and we're no

747
00:25:56,460 --> 00:25:59,399
longer in this situation where I can get

748
00:25:57,779 --> 00:26:01,470
a certificate for your website and you

749
00:25:59,399 --> 00:26:02,939
can not know about it like if I get a

750
00:26:01,470 --> 00:26:04,830
certificate for have I'm in pong comm

751
00:26:02,940 --> 00:26:06,480
I'm pretty sure Troy wants to know if I

752
00:26:04,830 --> 00:26:07,918
get a certificate for one password com

753
00:26:06,480 --> 00:26:10,169
I'm sure all the guys over here would

754
00:26:07,919 --> 00:26:11,399
want to know I'm a bad guy running

755
00:26:10,169 --> 00:26:13,380
around on the internet with a valid

756
00:26:11,399 --> 00:26:15,059
search for their domain I could do a lot

757
00:26:13,380 --> 00:26:17,580
of damage with that and right now

758
00:26:15,059 --> 00:26:20,340
they're blind Ct will change that Ct is

759
00:26:17,580 --> 00:26:23,399
going to be very big things in this

760
00:26:20,340 --> 00:26:26,129
ecosystem but it's not just CT that

761
00:26:23,399 --> 00:26:29,129
we're looking at either when you go to a

762
00:26:26,130 --> 00:26:31,590
CA the bad guy goes to a CA my girl goes

763
00:26:29,130 --> 00:26:33,059
to a CA and says hey I'm you know I'm

764
00:26:31,590 --> 00:26:35,879
one password calm I want a certificate

765
00:26:33,059 --> 00:26:38,490
it's the proof is on them to verify my

766
00:26:35,880 --> 00:26:40,920
identity my control of the domain before

767
00:26:38,490 --> 00:26:42,930
they issue but we don't have any

768
00:26:40,920 --> 00:26:44,670
to say hey I only want certificates from

769
00:26:42,930 --> 00:26:46,680
digi sir you know these this is the only

770
00:26:44,670 --> 00:26:48,860
CA I want to use this is my domain I get

771
00:26:46,680 --> 00:26:51,690
to say who issue search for it and just

772
00:26:48,860 --> 00:26:53,280
a few months ago we finally got the

773
00:26:51,690 --> 00:26:54,450
mechanism to do that we got something

774
00:26:53,280 --> 00:26:56,460
called certificate authority

775
00:26:54,450 --> 00:26:59,550
authorization and it fixes this problem

776
00:26:56,460 --> 00:27:00,480
where I only want this one CA it's a

777
00:26:59,550 --> 00:27:02,040
issue for my domain

778
00:27:00,480 --> 00:27:04,920
how many CAS are in the world does

779
00:27:02,040 --> 00:27:07,170
anyone know I love interest there's

780
00:27:04,920 --> 00:27:08,340
hundreds of these things go and have a

781
00:27:07,170 --> 00:27:10,170
look in your root store there's probably

782
00:27:08,340 --> 00:27:11,669
a couple of hundred roots in there then

783
00:27:10,170 --> 00:27:13,290
we have resellers and cross signs off

784
00:27:11,670 --> 00:27:15,060
the top of those there are hundreds of

785
00:27:13,290 --> 00:27:16,409
these things out there so someone wants

786
00:27:15,060 --> 00:27:18,360
to get a certificate for my domain they

787
00:27:16,410 --> 00:27:20,370
don't have to go to my CA because

788
00:27:18,360 --> 00:27:21,929
there's no concept of my CA they can go

789
00:27:20,370 --> 00:27:24,209
to any one of the CAS in the world and

790
00:27:21,930 --> 00:27:25,680
try and trick them so say okay we'll try

791
00:27:24,210 --> 00:27:26,730
and trick these guys into issue okay

792
00:27:25,680 --> 00:27:28,110
they didn't work we'll go and try and

793
00:27:26,730 --> 00:27:29,850
trick these guys and help they didn't

794
00:27:28,110 --> 00:27:31,050
work we'll try and trick these guys they

795
00:27:29,850 --> 00:27:33,030
can just keep going all over the place

796
00:27:31,050 --> 00:27:35,310
to see if they can get someone to issue

797
00:27:33,030 --> 00:27:38,879
a certificate that shouldn't have and

798
00:27:35,310 --> 00:27:41,460
CAA changes this it allows me to specify

799
00:27:38,880 --> 00:27:43,320
what my preferences are in terms of who

800
00:27:41,460 --> 00:27:45,330
can issue and the one thing that I love

801
00:27:43,320 --> 00:27:47,490
about CAA is that this is probably the

802
00:27:45,330 --> 00:27:49,470
best bang for buck in terms of a

803
00:27:47,490 --> 00:27:52,500
security mechanism because it's just a

804
00:27:49,470 --> 00:27:54,660
DNS record this is as simple as it can

805
00:27:52,500 --> 00:27:56,340
get for deploying a pretty strong

806
00:27:54,660 --> 00:27:57,900
security mechanism there was a new

807
00:27:56,340 --> 00:27:59,429
resource record type can you see my

808
00:27:57,900 --> 00:28:01,470
laser pointer yeah there's a new

809
00:27:59,430 --> 00:28:03,840
resource record type called CAA created

810
00:28:01,470 --> 00:28:05,730
specifically for this so just like we

811
00:28:03,840 --> 00:28:08,310
have a records tax records we now have

812
00:28:05,730 --> 00:28:10,320
CIA records and what you do is you set

813
00:28:08,310 --> 00:28:13,409
the issue directive and put the name of

814
00:28:10,320 --> 00:28:15,600
the CA their domain that you authorized

815
00:28:13,410 --> 00:28:18,510
the issue so when I issue this on my

816
00:28:15,600 --> 00:28:20,040
website what I am saying is I only

817
00:28:18,510 --> 00:28:24,090
authorized lights and clip to issue

818
00:28:20,040 --> 00:28:25,620
certificates for my domain so now you're

819
00:28:24,090 --> 00:28:27,840
the bad guy you go online and you go to

820
00:28:25,620 --> 00:28:29,580
like you know terrible see a car with

821
00:28:27,840 --> 00:28:31,260
poor security and say hey I want a

822
00:28:29,580 --> 00:28:34,080
certificate for Scott home Dakota UK

823
00:28:31,260 --> 00:28:36,660
because that's me though CAS from

824
00:28:34,080 --> 00:28:39,030
September were required first of all to

825
00:28:36,660 --> 00:28:41,310
check this record they now have to do

826
00:28:39,030 --> 00:28:43,110
this they are mandated by our governing

827
00:28:41,310 --> 00:28:45,120
body this the cab forum the see a

828
00:28:43,110 --> 00:28:47,550
browser forum they have to check this

829
00:28:45,120 --> 00:28:50,550
record so you know crazy terrible CA

830
00:28:47,550 --> 00:28:52,350
calm is gonna go oh well I'm not even

831
00:28:50,550 --> 00:28:54,360
allowed to do this so before I start any

832
00:28:52,350 --> 00:28:54,840
process with you I'm just not going to

833
00:28:54,360 --> 00:28:57,419
because

834
00:28:54,840 --> 00:28:58,889
I'm not allowed to according to this DNS

835
00:28:57,420 --> 00:29:00,480
record and of course there's

836
00:28:58,890 --> 00:29:02,910
organizations that may have more than

837
00:29:00,480 --> 00:29:05,460
one CA that's fine just create multiple

838
00:29:02,910 --> 00:29:07,350
records and and this is how easy it is

839
00:29:05,460 --> 00:29:09,120
on top of the issue ones you can even

840
00:29:07,350 --> 00:29:11,520
specify whether a CA is allowed to issue

841
00:29:09,120 --> 00:29:12,750
wild card certificates or not so you can

842
00:29:11,520 --> 00:29:15,420
give them permission to issue standard

843
00:29:12,750 --> 00:29:17,220
sirs a not wild card because they're a

844
00:29:15,420 --> 00:29:19,530
lot more powerful there's also a

845
00:29:17,220 --> 00:29:20,850
reporting mechanism we have something

846
00:29:19,530 --> 00:29:23,460
called the IO def record and you can

847
00:29:20,850 --> 00:29:24,719
actually ask the CA to email you and

848
00:29:23,460 --> 00:29:27,450
tell you someone tried to get a

849
00:29:24,720 --> 00:29:29,640
certificate and they refused because of

850
00:29:27,450 --> 00:29:32,250
the authorization record so you can know

851
00:29:29,640 --> 00:29:34,470
if someone's trying to get certificates

852
00:29:32,250 --> 00:29:36,120
for your domain and you know coupling

853
00:29:34,470 --> 00:29:38,130
these things together this this becomes

854
00:29:36,120 --> 00:29:40,649
really powerful really quickly CT and

855
00:29:38,130 --> 00:29:43,230
CAA combined we're already starting to

856
00:29:40,650 --> 00:29:45,840
address really large parts of the

857
00:29:43,230 --> 00:29:47,970
problem and the wet the process dead

858
00:29:45,840 --> 00:29:49,409
simple again I send the CSR to let's

859
00:29:47,970 --> 00:29:51,720
encrypt during that issuance process

860
00:29:49,410 --> 00:29:54,990
right there let's encrypt has to reach

861
00:29:51,720 --> 00:29:57,150
out into DNS and check that record they

862
00:29:54,990 --> 00:29:58,980
fetch DNS back and they're either going

863
00:29:57,150 --> 00:30:01,650
to see if I have no records set by the

864
00:29:58,980 --> 00:30:03,840
way that's completely fall Bank capable

865
00:30:01,650 --> 00:30:05,790
no records means foolish moves for

866
00:30:03,840 --> 00:30:07,379
everybody so if there's no records it's

867
00:30:05,790 --> 00:30:09,300
just like the Wild West like it is right

868
00:30:07,380 --> 00:30:12,360
now if there is a record set they have

869
00:30:09,300 --> 00:30:14,520
to obey what the record says hopefully

870
00:30:12,360 --> 00:30:16,530
as I do the record is set they will then

871
00:30:14,520 --> 00:30:20,010
continue issuance and I can keep using

872
00:30:16,530 --> 00:30:21,480
my certificate as normal I can see

873
00:30:20,010 --> 00:30:23,610
there's loads of hands popping go up all

874
00:30:21,480 --> 00:30:24,780
over the place at the back there so I

875
00:30:23,610 --> 00:30:27,000
just want to leave you this one question

876
00:30:24,780 --> 00:30:29,330
because I do have a very good Q&A

877
00:30:27,000 --> 00:30:32,130
section for this because this normally

878
00:30:29,330 --> 00:30:34,199
provokes lots of questions and sometimes

879
00:30:32,130 --> 00:30:35,280
angry responses and so I just want to

880
00:30:34,200 --> 00:30:37,410
leave you this one question before I

881
00:30:35,280 --> 00:30:39,990
open the floor up and the question is

882
00:30:37,410 --> 00:30:41,580
right now if you needed to if I called

883
00:30:39,990 --> 00:30:43,560
you and said hey someone stole your

884
00:30:41,580 --> 00:30:46,379
certificate or I got one from a CA

885
00:30:43,560 --> 00:30:50,159
well I bribed a CA to issue me one right

886
00:30:46,380 --> 00:30:51,930
now could you revoke it and that is for

887
00:30:50,160 --> 00:30:53,370
me a pretty important question that I

888
00:30:51,930 --> 00:30:55,640
want to leave you with so thank you very

889
00:30:53,370 --> 00:30:55,639
much

890
00:30:59,330 --> 00:31:04,949
so I intentionally like a good five or

891
00:31:02,190 --> 00:31:06,720
so minutes of Q&A so literally hi okay

892
00:31:04,950 --> 00:31:23,789
I'm just gonna start talking and say dev

893
00:31:06,720 --> 00:31:25,350
go ahead huh will it check the okay so a

894
00:31:23,789 --> 00:31:27,539
great question so the question from dev

895
00:31:25,350 --> 00:31:29,730
there was if you go to revoke da Scott

896
00:31:27,539 --> 00:31:37,980
helm karo UK will it check the CAA

897
00:31:29,730 --> 00:31:39,390
record also the CA at the point of

898
00:31:37,980 --> 00:31:42,030
issuance gotcha

899
00:31:39,390 --> 00:31:44,190
right so if I go if I set that so I'll

900
00:31:42,030 --> 00:31:46,860
jump back if I set these records like I

901
00:31:44,190 --> 00:31:48,900
showed here at my apex and I request for

902
00:31:46,860 --> 00:31:51,270
a certificate for revoke dot the first

903
00:31:48,900 --> 00:31:54,059
thing the CA will do is check for a CA a

904
00:31:51,270 --> 00:31:56,039
record at revoke dot if it finds one or

905
00:31:54,059 --> 00:31:57,960
any it will obey them if it doesn't it

906
00:31:56,039 --> 00:32:01,140
will then walk up towards the parent

907
00:31:57,960 --> 00:32:03,240
until it hits a record so if he goes all

908
00:32:01,140 --> 00:32:04,890
the way to the apex a I got like test

909
00:32:03,240 --> 00:32:06,570
dot revoked Ascot however it would find

910
00:32:04,890 --> 00:32:08,760
nothing at test nothing a revoked and

911
00:32:06,570 --> 00:32:10,620
then it would hit these at my apex and

912
00:32:08,760 --> 00:32:13,260
apply that so he walks its way back up

913
00:32:10,620 --> 00:32:17,959
until it either hits a record or there

914
00:32:13,260 --> 00:32:17,960
are non set dice of the question

915
00:32:37,220 --> 00:32:44,520
so what let me just clarify do you mean

916
00:32:40,290 --> 00:32:46,470
did you say transparency that so the

917
00:32:44,520 --> 00:32:49,220
certificate transparency is required is

918
00:32:46,470 --> 00:32:52,350
a requirement of publicly trusted CAS so

919
00:32:49,220 --> 00:32:55,290
as of in a few weeks whenever it is like

920
00:32:52,350 --> 00:32:57,209
I'm the exact day but if the browser

921
00:32:55,290 --> 00:32:59,280
receives a certificate that is not

922
00:32:57,210 --> 00:33:01,140
provably in a CT logging will be

923
00:32:59,280 --> 00:33:03,480
rejected so it doesn't matter what ca

924
00:33:01,140 --> 00:33:06,660
issued it where it came from how it was

925
00:33:03,480 --> 00:33:08,549
made the browser will want the SC DS and

926
00:33:06,660 --> 00:33:09,660
I actually showed how in the slides here

927
00:33:08,549 --> 00:33:11,309
how they're embedded into the

928
00:33:09,660 --> 00:33:13,620
certificates there are actually two

929
00:33:11,309 --> 00:33:15,510
different ways that hosts can deliver

930
00:33:13,620 --> 00:33:17,520
there's a TLS extension which is very

931
00:33:15,510 --> 00:33:19,230
similar to OCSP stapling and they can

932
00:33:17,520 --> 00:33:22,168
actually also be delivered with the OCSP

933
00:33:19,230 --> 00:33:23,760
response so as a host if your CA gave

934
00:33:22,169 --> 00:33:27,179
you a certificate that was not logged in

935
00:33:23,760 --> 00:33:29,340
a sitting the appropriate OCD logs you

936
00:33:27,179 --> 00:33:32,490
could log it yourself fetch the SE T's

937
00:33:29,340 --> 00:33:33,750
and deliver them so I mean the good

938
00:33:32,490 --> 00:33:35,100
thing with certificate transparency is

939
00:33:33,750 --> 00:33:37,200
like when I talk about it most people

940
00:33:35,100 --> 00:33:38,309
they don't know about it and B don't

941
00:33:37,200 --> 00:33:40,860
realize that it only came into existence

942
00:33:38,309 --> 00:33:42,540
in like 2014 and it's coming from

943
00:33:40,860 --> 00:33:45,299
nothing to globally deployed in four

944
00:33:42,540 --> 00:33:47,070
years and the reason is because the CA

945
00:33:45,299 --> 00:33:49,350
can do it with no cooperation from the

946
00:33:47,070 --> 00:33:51,210
site owner the site maintained there and

947
00:33:49,350 --> 00:33:54,570
that's the only reason is there zero

948
00:33:51,210 --> 00:33:57,960
knowledge or import required from from

949
00:33:54,570 --> 00:33:59,580
the mass community so something you know

950
00:33:57,960 --> 00:34:01,110
based on the numbers someone will break

951
00:33:59,580 --> 00:34:02,460
this someone will booboo and will not be

952
00:34:01,110 --> 00:34:03,719
ready for the chromium release and

953
00:34:02,460 --> 00:34:05,490
guarantee that just because there's so

954
00:34:03,720 --> 00:34:07,620
many CA someone has to get this wrong

955
00:34:05,490 --> 00:34:09,179
but use the Sai operator could take that

956
00:34:07,620 --> 00:34:11,489
into your own hands and make sure you

957
00:34:09,179 --> 00:34:14,700
were CT qualified even if your CA was

958
00:34:11,489 --> 00:34:17,089
terrible I don't I'm not sure if that

959
00:34:14,699 --> 00:34:17,089
answered the question

960
00:34:21,710 --> 00:34:42,800
I'll come back to you there yes so so is

961
00:34:41,210 --> 00:34:47,659
that more like what's the purpose of the

962
00:34:42,800 --> 00:34:49,369
CT log so the purpose of the logs is we

963
00:34:47,659 --> 00:34:50,780
need I mean we need transparency in the

964
00:34:49,369 --> 00:34:53,060
ecosystem for a few things number one

965
00:34:50,780 --> 00:34:54,560
that's my domain and if someone issues a

966
00:34:53,060 --> 00:34:56,179
certificate for it I should be able to

967
00:34:54,560 --> 00:34:59,119
know because that's part of my security

968
00:34:56,179 --> 00:35:01,610
posture by monitoring the second thing

969
00:34:59,119 --> 00:35:05,510
is it it discourages like some people

970
00:35:01,610 --> 00:35:07,640
say the CT doesn't do anything but it it

971
00:35:05,510 --> 00:35:10,130
discourages bad actors because you now

972
00:35:07,640 --> 00:35:11,509
calm briber CA you can't get a certain

973
00:35:10,130 --> 00:35:13,369
you can't do things in secret behind

974
00:35:11,510 --> 00:35:17,390
closed doors so with this level of

975
00:35:13,369 --> 00:35:18,590
transparency we can monitor an audit CAS

976
00:35:17,390 --> 00:35:20,900
make sure they're doing things correctly

977
00:35:18,590 --> 00:35:23,180
they can't issue certs that we don't

978
00:35:20,900 --> 00:35:25,130
know about which CPS actually already

979
00:35:23,180 --> 00:35:26,930
brought to line many scenarios Ct was

980
00:35:25,130 --> 00:35:30,640
one of the things that helped us see

981
00:35:26,930 --> 00:35:30,640
some of the problems inside Symantec

982
00:35:45,260 --> 00:35:51,599
know so CT logs in in that regard are

983
00:35:49,040 --> 00:35:53,430
that just completely open append-only

984
00:35:51,599 --> 00:35:55,770
logs like bass they're their criteria

985
00:35:53,430 --> 00:35:57,180
there's no you know does chroma trust

986
00:35:55,770 --> 00:35:59,099
this does Firefox not if it's a

987
00:35:57,180 --> 00:36:01,230
certificate from a CA it goes in the log

988
00:35:59,099 --> 00:36:02,940
in its auditor ball and as far as

989
00:36:01,230 --> 00:36:03,329
anything else is concerned CT doesn't

990
00:36:02,940 --> 00:36:05,250
care

991
00:36:03,329 --> 00:36:06,750
it's just an append-only immutable log

992
00:36:05,250 --> 00:36:08,849
the only criteria is that the

993
00:36:06,750 --> 00:36:10,500
certificate came from a CA like that's

994
00:36:08,849 --> 00:36:30,000
it after that we don't care about

995
00:36:10,500 --> 00:36:31,950
anything with CT no no that's fine so

996
00:36:30,000 --> 00:36:34,230
yes so the the chromium will be the

997
00:36:31,950 --> 00:36:37,890
first browser to require some form of CT

998
00:36:34,230 --> 00:36:39,210
qualification they have I mean I can't

999
00:36:37,890 --> 00:36:40,560
remember the domain but happily tweet it

1000
00:36:39,210 --> 00:36:42,660
afterwards they have their CT

1001
00:36:40,560 --> 00:36:45,750
qualification criteria outlined on the

1002
00:36:42,660 --> 00:36:47,759
project site Firefox will be next

1003
00:36:45,750 --> 00:36:49,589
I'm last time I checked they hadn't

1004
00:36:47,760 --> 00:36:51,930
quite decided exactly what CT

1005
00:36:49,589 --> 00:36:53,160
qualification would mean in Firefox but

1006
00:36:51,930 --> 00:36:57,000
the good thing about this is it's like

1007
00:36:53,160 --> 00:36:58,319
many security mechanisms in Chrome's

1008
00:36:57,000 --> 00:36:59,970
gonna be first to do this

1009
00:36:58,319 --> 00:37:02,579
just cuz like you know they're first to

1010
00:36:59,970 --> 00:37:04,259
do this whatever but because chrome will

1011
00:37:02,579 --> 00:37:06,270
require all certificates to be publicly

1012
00:37:04,260 --> 00:37:07,829
logged all certificates will be publicly

1013
00:37:06,270 --> 00:37:08,940
logged right it doesn't matter if

1014
00:37:07,829 --> 00:37:11,010
Firefox is a little bit late and

1015
00:37:08,940 --> 00:37:13,730
Internet Explorer will do it in like 20

1016
00:37:11,010 --> 00:37:15,540
49 what you know the main thing is I

1017
00:37:13,730 --> 00:37:19,800
only say that cuz someone from

1018
00:37:15,540 --> 00:37:23,069
Microsoft's here you know like chromium

1019
00:37:19,800 --> 00:37:24,690
forcing CT logging is good enough to get

1020
00:37:23,069 --> 00:37:26,099
us I mean pretty much all the way there

1021
00:37:24,690 --> 00:37:29,030
to be honest because if you don't see T

1022
00:37:26,099 --> 00:37:31,680
log the cert it won't work in chrome so

1023
00:37:29,030 --> 00:37:33,030
the requirement basically is that also

1024
00:37:31,680 --> 00:37:34,259
has have to be logged now it will be

1025
00:37:33,030 --> 00:37:36,060
great when the other vendors do it don't

1026
00:37:34,260 --> 00:37:37,890
get me wrong and as I say I know Firefox

1027
00:37:36,060 --> 00:37:39,930
is coming and I'm sure the other browser

1028
00:37:37,890 --> 00:37:41,520
vendors will hopefully get there but

1029
00:37:39,930 --> 00:37:43,140
it's kind of like this someone take this

1030
00:37:41,520 --> 00:37:44,460
trust that was just mentioned chromium

1031
00:37:43,140 --> 00:37:46,680
and Firefox have done it and that's

1032
00:37:44,460 --> 00:37:50,880
enough you know we don't necessarily

1033
00:37:46,680 --> 00:38:18,580
need a hundred percent community effort

1034
00:37:50,880 --> 00:38:23,230
sure go ahead Jeff oh nice so is that a

1035
00:38:18,580 --> 00:38:24,400
requirement of ATS oh nice oh I'm not

1036
00:38:23,230 --> 00:38:25,570
very familiar with the IRA stuff but I

1037
00:38:24,400 --> 00:38:28,920
will check that out that sounds really

1038
00:38:25,570 --> 00:38:28,920
cool yes

1039
00:38:35,900 --> 00:38:41,790
so I've never I've not experimented

1040
00:38:39,240 --> 00:38:43,890
enough to have a definitive answer there

1041
00:38:41,790 --> 00:38:47,579
all of my tests my experiments are all

1042
00:38:43,890 --> 00:38:50,160
based around I was sorry yeah my bad

1043
00:38:47,579 --> 00:38:51,809
and so the question that was SP stapling

1044
00:38:50,160 --> 00:38:53,339
outside of the concept of a TLS

1045
00:38:51,809 --> 00:38:57,210
connection or something like s mom you

1046
00:38:53,339 --> 00:38:58,619
said my own tests are not enough to

1047
00:38:57,210 --> 00:39:01,200
answer that correct and that question

1048
00:38:58,619 --> 00:39:02,790
with a good enough answer I know that

1049
00:39:01,200 --> 00:39:04,379
you know to be honest for me even nginx

1050
00:39:02,790 --> 00:39:06,329
in Apache the meant the things that I

1051
00:39:04,380 --> 00:39:07,470
mentioned there I think they're good

1052
00:39:06,329 --> 00:39:09,960
enough and the thing that we have to

1053
00:39:07,470 --> 00:39:11,399
remember is if you get a more stable

1054
00:39:09,960 --> 00:39:13,290
service because you asked for them if

1055
00:39:11,400 --> 00:39:15,390
you asked Auto menu staple terribly I

1056
00:39:13,290 --> 00:39:16,710
think that's your fault and you should

1057
00:39:15,390 --> 00:39:19,940
have not asked forum but we should all

1058
00:39:16,710 --> 00:39:19,940
have the option to enable this

1059
00:39:27,000 --> 00:39:32,260
but as long as you know the status of

1060
00:39:29,620 --> 00:39:33,549
the cert and that the cert wasn't

1061
00:39:32,260 --> 00:39:35,770
revoked during its lifetime because the

1062
00:39:33,550 --> 00:39:38,620
circle had also passed outside of its

1063
00:39:35,770 --> 00:39:40,960
lifetime by then if you're talking about

1064
00:39:38,620 --> 00:39:41,950
that far into the future I don't know

1065
00:39:40,960 --> 00:39:43,990
that I've been interesting when I say

1066
00:39:41,950 --> 00:39:45,189
because what in the concept of TLS we

1067
00:39:43,990 --> 00:39:46,569
don't once the certs come past this

1068
00:39:45,190 --> 00:39:46,900
expiry date we don't care about it

1069
00:39:46,570 --> 00:39:48,490
actually

1070
00:39:46,900 --> 00:39:50,950
so I've never thought about that kind of

1071
00:39:48,490 --> 00:39:52,779
check outside of the lifetime I have a

1072
00:39:50,950 --> 00:39:54,750
look at that one and come back Jim

1073
00:39:52,780 --> 00:40:12,870
waving at me

1074
00:39:54,750 --> 00:40:14,980
they're always that timeout yeah so I

1075
00:40:12,870 --> 00:40:16,569
focus a lot on browser support generally

1076
00:40:14,980 --> 00:40:18,340
because they they drive the adoption and

1077
00:40:16,570 --> 00:40:19,690
creation of these mechanisms like CTS

1078
00:40:18,340 --> 00:40:24,190
largely come about because of efforts

1079
00:40:19,690 --> 00:40:26,680
from chrome you know in server to server

1080
00:40:24,190 --> 00:40:28,780
I mean as long as your library supports

1081
00:40:26,680 --> 00:40:30,520
that it's your choice to enforce it

1082
00:40:28,780 --> 00:40:33,550
like if you use Chrome they're forcing

1083
00:40:30,520 --> 00:40:35,440
CT qualification Unser's right so in I

1084
00:40:33,550 --> 00:40:37,000
mean this can be done in non browser

1085
00:40:35,440 --> 00:40:39,970
environments we've I've talked about

1086
00:40:37,000 --> 00:40:42,940
mutual authentication in TLS before now

1087
00:40:39,970 --> 00:40:45,910
and thought about how useful CT would be

1088
00:40:42,940 --> 00:40:48,100
in our scenario but it's it's totally up

1089
00:40:45,910 --> 00:40:50,020
to you to implement that and but so the

1090
00:40:48,100 --> 00:40:51,490
concepts apply like you can take the

1091
00:40:50,020 --> 00:40:53,170
concept of CT and move it into a

1092
00:40:51,490 --> 00:40:54,819
different client-server scenario it

1093
00:40:53,170 --> 00:40:56,860
might even be server server scenario and

1094
00:40:54,820 --> 00:41:02,910
the concepts still apply and have value

1095
00:40:56,860 --> 00:41:02,910
but it's a false to you then yes

1096
00:41:17,350 --> 00:41:20,350
yeah

1097
00:41:22,170 --> 00:41:27,459
so the question there was its greater

1098
00:41:25,509 --> 00:41:33,400
ca's logged to CT but how do I know is

1099
00:41:27,459 --> 00:41:34,868
the domain owner would that be a fair so

1100
00:41:33,400 --> 00:41:36,999
there's a couple of really good things

1101
00:41:34,869 --> 00:41:39,459
that I use the first one is a website

1102
00:41:36,999 --> 00:41:41,078
called search which is CR T - Sh

1103
00:41:39,459 --> 00:41:42,489
that's like a log monitoring tool where

1104
00:41:41,079 --> 00:41:45,219
you can go punch in your domain and just

1105
00:41:42,489 --> 00:41:46,989
see all of the service there is an RSS

1106
00:41:45,219 --> 00:41:49,869
feed on that but it's still kind of like

1107
00:41:46,989 --> 00:41:52,719
a manual process SSL mate comm is then

1108
00:41:49,869 --> 00:41:54,039
the next thing I recommend which has for

1109
00:41:52,719 --> 00:41:55,630
a limited number of domains for free

1110
00:41:54,039 --> 00:41:57,160
they will monitor the logs and email you

1111
00:41:55,630 --> 00:41:58,959
every time they see a new sir and say

1112
00:41:57,160 --> 00:42:00,999
hey we've just found this new one but

1113
00:41:58,959 --> 00:42:02,348
weirdly and this might be like super

1114
00:42:00,999 --> 00:42:05,558
controversial right now I'm currently

1115
00:42:02,349 --> 00:42:08,140
recommending Facebook Facebook have a CT

1116
00:42:05,559 --> 00:42:10,869
log monitoring tool and I literally get

1117
00:42:08,140 --> 00:42:12,459
push notifications to my phone when I

1118
00:42:10,869 --> 00:42:14,769
see a issues a cert for me because

1119
00:42:12,459 --> 00:42:16,029
Facebook monitors all the CT logs I say

1120
00:42:14,769 --> 00:42:18,129
hey this is my domain and I literally

1121
00:42:16,029 --> 00:42:20,259
get push notifications in the app so

1122
00:42:18,130 --> 00:42:21,969
it's like hey so my cute cat picture oh

1123
00:42:20,259 --> 00:42:24,549
and someone issued a surface cut home

1124
00:42:21,969 --> 00:42:26,380
dog code at UK and and I just love that

1125
00:42:24,549 --> 00:42:27,579
convenience I love push notifications if

1126
00:42:26,380 --> 00:42:31,749
you don't have an account they can also

1127
00:42:27,579 --> 00:42:33,339
email you but I find that that's the

1128
00:42:31,749 --> 00:42:35,078
best recommendation I make right now so

1129
00:42:33,339 --> 00:42:38,109
yes there are services that will monitor

1130
00:42:35,079 --> 00:42:39,519
on your behalf and notify you in pretty

1131
00:42:38,109 --> 00:42:43,089
much near real-time like there can be

1132
00:42:39,519 --> 00:42:45,008
small delays technically a CA can submit

1133
00:42:43,089 --> 00:42:46,930
to the log and depending on how fast the

1134
00:42:45,009 --> 00:42:49,299
log operator is they have either 24 or

1135
00:42:46,930 --> 00:42:51,640
48 hour period to get it on the log and

1136
00:42:49,299 --> 00:42:53,769
we call that the MMD the maximum urge

1137
00:42:51,640 --> 00:42:56,140
delay so technically you could find out

1138
00:42:53,769 --> 00:43:02,288
up to 48 hours after issuance that it

1139
00:42:56,140 --> 00:43:04,328
had been issued my pushing time okay

1140
00:43:02,289 --> 00:43:06,249
yeah I'll hang around with the coffee's

1141
00:43:04,329 --> 00:43:07,029
it's a break now right come on find me

1142
00:43:06,249 --> 00:43:07,629
in the break thank you very much

1143
00:43:07,029 --> 00:43:10,559
everyone

1144
00:43:07,630 --> 00:43:10,559
[Applause]

