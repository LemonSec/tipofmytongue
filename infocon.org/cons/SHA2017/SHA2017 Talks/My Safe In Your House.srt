1
00:00:00,000 --> 00:00:20,210
[Music]

2
00:00:15,949 --> 00:00:24,660
we're going to<font color="#E5E5E5"> listen</font><font color="#CCCCCC"> to Erika today</font>

3
00:00:20,210 --> 00:00:27,599
she's a staff technologist<font color="#CCCCCC"> at EF F and</font>

4
00:00:24,660 --> 00:00:31,410
she works a<font color="#E5E5E5"> lot at shirt but at the</font>

5
00:00:27,599 --> 00:00:37,050
moment<font color="#CCCCCC"> she saves</font><font color="#E5E5E5"> everyone on the</font>

6
00:00:31,410 --> 00:00:38,850
<font color="#CCCCCC">internet to</font><font color="#E5E5E5"> be secure and safe</font><font color="#CCCCCC"> so she's</font>

7
00:00:37,050 --> 00:00:41,250
<font color="#E5E5E5">going to talk to us about keeping</font>

8
00:00:38,850 --> 00:00:44,280
<font color="#E5E5E5">secrets on</font><font color="#CCCCCC"> the remote machines so that's</font>

9
00:00:41,250 --> 00:00:46,769
very cool right<font color="#CCCCCC"> she didn't expect this</font>

10
00:00:44,280 --> 00:00:48,719
many people<font color="#E5E5E5"> so maybe to encourage her a</font>

11
00:00:46,770 --> 00:00:58,109
little<font color="#E5E5E5"> bit please give her a warm</font><font color="#CCCCCC"> round</font>

12
00:00:48,719 --> 00:01:02,059
of applause go for<font color="#E5E5E5"> it thank you</font><font color="#CCCCCC"> okay</font>

13
00:00:58,109 --> 00:01:04,559
hello<font color="#E5E5E5"> okay welcome</font><font color="#CCCCCC"> okay so in this</font><font color="#E5E5E5"> talk</font>

14
00:01:02,059 --> 00:01:06,240
<font color="#E5E5E5">as opposed to the various</font><font color="#CCCCCC"> other things</font>

15
00:01:04,559 --> 00:01:08,429
that keeping<font color="#E5E5E5"> it secrets on remote</font>

16
00:01:06,240 --> 00:01:10,259
<font color="#CCCCCC">machines might mean this talk is going</font>

17
00:01:08,430 --> 00:01:12,720
<font color="#CCCCCC">to</font><font color="#E5E5E5"> be about the challenges</font><font color="#CCCCCC"> and different</font>

18
00:01:10,260 --> 00:01:14,970
<font color="#E5E5E5">approaches</font><font color="#CCCCCC"> that you can take to building</font>

19
00:01:12,720 --> 00:01:18,000
cloud applications where even the server

20
00:01:14,970 --> 00:01:23,820
<font color="#E5E5E5">can't see the data that the</font><font color="#CCCCCC"> user has on</font>

21
00:01:18,000 --> 00:01:26,850
it so as the popular laptop sticker

22
00:01:23,820 --> 00:01:29,130
reminds us there is no cloud<font color="#CCCCCC"> it's only</font>

23
00:01:26,850 --> 00:01:31,740
someone else's computers all of the

24
00:01:29,130 --> 00:01:34,020
myriad benefits that you get<font color="#E5E5E5"> from a</font>

25
00:01:31,740 --> 00:01:35,850
modern cloud application<font color="#E5E5E5"> that is</font>

26
00:01:34,020 --> 00:01:37,439
<font color="#E5E5E5">processing power having multi-user</font>

27
00:01:35,850 --> 00:01:40,259
applications when things are

28
00:01:37,439 --> 00:01:43,079
collaborative backing up your data<font color="#E5E5E5"> all</font>

29
00:01:40,259 --> 00:01:44,790
of<font color="#CCCCCC"> these come at the cost of</font><font color="#E5E5E5"> giving up</font>

30
00:01:43,079 --> 00:01:46,320
<font color="#E5E5E5">your data to someone else it means that</font>

31
00:01:44,790 --> 00:01:48,930
someone else<font color="#E5E5E5"> can</font><font color="#CCCCCC"> access it if you're an</font>

32
00:01:46,320 --> 00:01:50,639
organization<font color="#E5E5E5"> the people that you might</font>

33
00:01:48,930 --> 00:01:53,640
be competing<font color="#CCCCCC"> with</font><font color="#E5E5E5"> the people</font><font color="#CCCCCC"> that you</font>

34
00:01:50,640 --> 00:01:55,979
might be in opposition to an illegal

35
00:01:53,640 --> 00:01:59,040
context as well<font color="#E5E5E5"> if they have access to</font>

36
00:01:55,979 --> 00:02:01,408
<font color="#CCCCCC">your data</font><font color="#E5E5E5"> then</font><font color="#CCCCCC"> the it's not great for</font>

37
00:01:59,040 --> 00:02:03,810
<font color="#CCCCCC">you and also</font><font color="#E5E5E5"> on a personal</font><font color="#CCCCCC"> level as well</font>

38
00:02:01,409 --> 00:02:07,710
<font color="#E5E5E5">but wouldn't</font><font color="#CCCCCC"> it be</font><font color="#E5E5E5"> great if we could</font>

39
00:02:03,810 --> 00:02:09,628
<font color="#E5E5E5">make cloud applications that</font><font color="#CCCCCC"> allowed you</font>

40
00:02:07,710 --> 00:02:12,989
to<font color="#E5E5E5"> get all of the benefits</font><font color="#CCCCCC"> that</font><font color="#E5E5E5"> you get</font>

41
00:02:09,628 --> 00:02:13,709
from<font color="#CCCCCC"> the modern cloud but</font><font color="#E5E5E5"> without giving</font>

42
00:02:12,989 --> 00:02:14,880
up the<font color="#CCCCCC"> state</font>

43
00:02:13,710 --> 00:02:16,590
is this<font color="#E5E5E5"> actually something that's</font>

44
00:02:14,880 --> 00:02:19,650
possible<font color="#CCCCCC"> is what we're going to</font><font color="#E5E5E5"> be</font>

45
00:02:16,590 --> 00:02:22,230
talking about<font color="#E5E5E5"> today so to talk about</font>

46
00:02:19,650 --> 00:02:25,170
<font color="#CCCCCC">this I'm</font><font color="#E5E5E5"> going</font><font color="#CCCCCC"> to</font><font color="#E5E5E5"> use the sample problem</font>

47
00:02:22,230 --> 00:02:28,920
of search<font color="#E5E5E5"> so</font><font color="#CCCCCC"> this is an email</font>

48
00:02:25,170 --> 00:02:32,309
application<font color="#E5E5E5"> here and you might have not</font>

49
00:02:28,920 --> 00:02:33,630
great inbox management strategies so you

50
00:02:32,310 --> 00:02:35,340
want to be able to search<font color="#CCCCCC"> through</font><font color="#E5E5E5"> the</font>

51
00:02:33,630 --> 00:02:37,710
data<font color="#E5E5E5"> that you have stored somewhere else</font>

52
00:02:35,340 --> 00:02:40,170
<font color="#E5E5E5">so in this example here I'm searching</font>

53
00:02:37,710 --> 00:02:41,850
<font color="#CCCCCC">through</font><font color="#E5E5E5"> my email to find the effector</font>

54
00:02:40,170 --> 00:02:43,679
listserv<font color="#E5E5E5"> and</font>

55
00:02:41,850 --> 00:02:45,600
you want certain<font color="#E5E5E5"> properties here you</font>

56
00:02:43,680 --> 00:02:47,280
want to<font color="#E5E5E5"> be able to let's say drop your</font>

57
00:02:45,600 --> 00:02:50,070
phone<font color="#CCCCCC"> in the ocean</font><font color="#E5E5E5"> and be able</font><font color="#CCCCCC"> to</font>

58
00:02:47,280 --> 00:02:51,810
recover<font color="#E5E5E5"> your data and get all of those</font>

59
00:02:50,070 --> 00:02:53,670
cloud properties but still without

60
00:02:51,810 --> 00:02:55,380
<font color="#E5E5E5">having the cloud service that holds on</font>

61
00:02:53,670 --> 00:02:58,260
to your data<font color="#E5E5E5"> be able to read it</font>

62
00:02:55,380 --> 00:03:00,269
themselves<font color="#CCCCCC"> so this is what a</font><font color="#E5E5E5"> model of</font>

63
00:02:58,260 --> 00:03:03,239
the situation<font color="#CCCCCC"> would look like</font><font color="#E5E5E5"> you have</font>

64
00:03:00,270 --> 00:03:05,100
<font color="#CCCCCC">on the left side</font><font color="#E5E5E5"> your laptop which is</font>

65
00:03:03,240 --> 00:03:07,260
<font color="#E5E5E5">your own personal</font><font color="#CCCCCC"> data</font><font color="#E5E5E5"> that no one else</font>

66
00:03:05,100 --> 00:03:09,960
can access<font color="#CCCCCC"> and then on a server on the</font>

67
00:03:07,260 --> 00:03:14,519
right you've got<font color="#E5E5E5"> various documents that</font>

68
00:03:09,960 --> 00:03:16,020
they hold on to<font color="#E5E5E5"> and you might want to do</font>

69
00:03:14,520 --> 00:03:17,760
a query on<font color="#CCCCCC"> the data such as which</font>

70
00:03:16,020 --> 00:03:20,490
documents contain a<font color="#E5E5E5"> keyword such as</font>

71
00:03:17,760 --> 00:03:23,040
<font color="#E5E5E5">bridge and it will return to you the</font>

72
00:03:20,490 --> 00:03:27,330
<font color="#CCCCCC">ideas of</font><font color="#E5E5E5"> the documents that contain that</font>

73
00:03:23,040 --> 00:03:30,780
keyword<font color="#E5E5E5"> so a basic way of doing search</font>

74
00:03:27,330 --> 00:03:32,820
is to create an index<font color="#E5E5E5"> so as you create a</font>

75
00:03:30,780 --> 00:03:35,700
document<font color="#CCCCCC"> as you edit a document you put</font>

76
00:03:32,820 --> 00:03:38,010
it on the server it will figure<font color="#CCCCCC"> out what</font>

77
00:03:35,700 --> 00:03:41,010
words are in each document<font color="#E5E5E5"> and create</font><font color="#CCCCCC"> a</font>

78
00:03:38,010 --> 00:03:42,989
<font color="#E5E5E5">mapping from each word to</font><font color="#CCCCCC"> the documents</font>

79
00:03:41,010 --> 00:03:44,910
containing each word<font color="#E5E5E5"> so then in constant</font>

80
00:03:42,990 --> 00:03:46,740
time when you're<font color="#E5E5E5"> doing a query you can</font>

81
00:03:44,910 --> 00:03:49,770
<font color="#E5E5E5">just look</font><font color="#CCCCCC"> down the list and say ah</font>

82
00:03:46,740 --> 00:03:52,080
<font color="#CCCCCC">Bridge is</font><font color="#E5E5E5"> in documents 1 4</font><font color="#CCCCCC"> &</font><font color="#E5E5E5"> 2 so the</font>

83
00:03:49,770 --> 00:03:57,240
server will know to return documents 1 4

84
00:03:52,080 --> 00:03:58,860
<font color="#E5E5E5">& 2</font><font color="#CCCCCC"> to you okay what let's do</font><font color="#E5E5E5"> something</font>

85
00:03:57,240 --> 00:04:01,800
<font color="#CCCCCC">at modeling here where where might the</font>

86
00:03:58,860 --> 00:04:03,510
attackers be you can<font color="#E5E5E5"> have a local</font>

87
00:04:01,800 --> 00:04:05,250
attacker on<font color="#E5E5E5"> your machine</font><font color="#CCCCCC"> you can have a</font>

88
00:04:03,510 --> 00:04:07,829
<font color="#CCCCCC">networked attacker or you can have an</font>

89
00:04:05,250 --> 00:04:10,740
attacker on<font color="#E5E5E5"> the server for the local</font>

90
00:04:07,830 --> 00:04:12,750
attacker<font color="#E5E5E5"> it's mostly going to</font><font color="#CCCCCC"> be out of</font>

91
00:04:10,740 --> 00:04:16,260
<font color="#E5E5E5">scope here that's a very hard problem</font>

92
00:04:12,750 --> 00:04:19,048
obviously<font color="#E5E5E5"> but it's not one that</font><font color="#CCCCCC"> we're</font>

93
00:04:16,260 --> 00:04:21,959
going to talk<font color="#CCCCCC"> about a</font><font color="#E5E5E5"> network attacker</font>

94
00:04:19,048 --> 00:04:24,479
<font color="#E5E5E5">you are mostly taken care of by using</font>

95
00:04:21,959 --> 00:04:26,460
<font color="#CCCCCC">HTTP</font><font color="#E5E5E5"> which you should definitely also do</font>

96
00:04:24,480 --> 00:04:27,360
but what happens when the attacker is

97
00:04:26,460 --> 00:04:29,039
inside this

98
00:04:27,360 --> 00:04:32,879
<font color="#CCCCCC">over</font><font color="#E5E5E5"> itself</font><font color="#CCCCCC"> the server that is doing</font>

99
00:04:29,039 --> 00:04:35,780
this computation<font color="#CCCCCC"> what can we do okay so</font>

100
00:04:32,879 --> 00:04:38,039
what properties might we want we want<font color="#CCCCCC"> to</font>

101
00:04:35,780 --> 00:04:39,508
<font color="#E5E5E5">provide the useful functionality but</font>

102
00:04:38,039 --> 00:04:41,580
even while we're doing<font color="#E5E5E5"> this the</font>

103
00:04:39,509 --> 00:04:43,080
malicious server<font color="#E5E5E5"> should</font><font color="#CCCCCC"> not be able to</font>

104
00:04:41,580 --> 00:04:44,580
just read the<font color="#CCCCCC"> data that you have</font><font color="#E5E5E5"> stored</font>

105
00:04:43,080 --> 00:04:47,039
they shouldn't<font color="#CCCCCC"> just be able</font><font color="#E5E5E5"> to open it</font>

106
00:04:44,580 --> 00:04:49,289
up and<font color="#E5E5E5"> look</font><font color="#CCCCCC"> inside</font><font color="#E5E5E5"> they shouldn't be</font>

107
00:04:47,039 --> 00:04:51,750
<font color="#E5E5E5">able to use</font><font color="#CCCCCC"> they should be able to prove</font>

108
00:04:49,289 --> 00:04:55,289
<font color="#CCCCCC">to the user that they can't read the</font>

109
00:04:51,750 --> 00:04:57,180
data that<font color="#E5E5E5"> they're that they have so not</font>

110
00:04:55,289 --> 00:04:59,729
<font color="#CCCCCC">just not be able</font><font color="#E5E5E5"> to do it but</font><font color="#CCCCCC"> also</font>

111
00:04:57,180 --> 00:05:02,520
convince the user using<font color="#E5E5E5"> math that you</font>

112
00:04:59,729 --> 00:05:04,650
<font color="#E5E5E5">can't do it</font><font color="#CCCCCC"> and</font><font color="#E5E5E5"> also there shouldn't be</font>

113
00:05:02,520 --> 00:05:06,599
any side channels left open because if

114
00:05:04,650 --> 00:05:08,008
you encrypt it but you know you<font color="#E5E5E5"> can see</font>

115
00:05:06,599 --> 00:05:11,159
it<font color="#CCCCCC"> over</font><font color="#E5E5E5"> where it's saved and some</font>

116
00:05:08,009 --> 00:05:14,909
<font color="#E5E5E5">metadata or whatever then</font><font color="#CCCCCC"> you lose that</font>

117
00:05:11,159 --> 00:05:16,319
protection<font color="#E5E5E5"> as well let's talk about not</font>

118
00:05:14,909 --> 00:05:18,599
<font color="#E5E5E5">being able to read</font><font color="#CCCCCC"> the store data</font><font color="#E5E5E5"> and</font>

119
00:05:16,319 --> 00:05:21,180
how we<font color="#E5E5E5"> might achieve that</font><font color="#CCCCCC"> very simply so</font>

120
00:05:18,599 --> 00:05:23,849
this is what SpiderOak<font color="#E5E5E5"> does</font><font color="#CCCCCC"> it's kind of</font>

121
00:05:21,180 --> 00:05:26,129
like<font color="#CCCCCC"> Dropbox but encrypted the way it</font>

122
00:05:23,849 --> 00:05:29,099
works is you<font color="#CCCCCC"> have</font><font color="#E5E5E5"> documents on a server</font>

123
00:05:26,129 --> 00:05:30,779
<font color="#CCCCCC">and</font><font color="#E5E5E5"> where previously you might have</font>

124
00:05:29,099 --> 00:05:34,500
wanted<font color="#E5E5E5"> to do this search operation</font>

125
00:05:30,779 --> 00:05:36,539
server side in SpiderOak<font color="#E5E5E5"> you can't do</font>

126
00:05:34,500 --> 00:05:39,569
that anymore<font color="#E5E5E5"> because when the documents</font>

127
00:05:36,539 --> 00:05:42,270
are encrypted<font color="#E5E5E5"> on the server</font><font color="#CCCCCC"> you lose the</font>

128
00:05:39,569 --> 00:05:44,099
ability to have the index on the server

129
00:05:42,270 --> 00:05:45,900
so the server needs to<font color="#E5E5E5"> be local and all</font>

130
00:05:44,099 --> 00:05:47,940
the computation<font color="#E5E5E5"> needs to be luck</font><font color="#CCCCCC"> the</font>

131
00:05:45,900 --> 00:05:49,948
done locally<font color="#CCCCCC"> you can keep the key on</font>

132
00:05:47,940 --> 00:05:52,560
your laptop and<font color="#CCCCCC"> to be able to provide a</font>

133
00:05:49,949 --> 00:05:54,319
secure<font color="#E5E5E5"> storage space but you lose that</font>

134
00:05:52,560 --> 00:05:57,000
functionality

135
00:05:54,319 --> 00:05:58,919
<font color="#E5E5E5">okay so we're</font><font color="#CCCCCC"> able we know for sure that</font>

136
00:05:57,000 --> 00:06:00,779
we're able<font color="#E5E5E5"> to achieve the property of</font>

137
00:05:58,919 --> 00:06:02,520
can't just read the<font color="#CCCCCC"> stored data</font><font color="#E5E5E5"> and</font>

138
00:06:00,779 --> 00:06:05,009
that's pretty simple<font color="#E5E5E5"> if you don't want</font>

139
00:06:02,520 --> 00:06:06,628
to do any computation<font color="#E5E5E5"> on top of it as</font>

140
00:06:05,009 --> 00:06:09,150
for<font color="#E5E5E5"> proving to the user that they can't</font>

141
00:06:06,629 --> 00:06:12,210
read the data<font color="#CCCCCC"> this is a bit of an</font>

142
00:06:09,150 --> 00:06:14,310
orthogonal problem over here<font color="#CCCCCC"> but it is</font>

143
00:06:12,210 --> 00:06:16,289
something that is largely possible using

144
00:06:14,310 --> 00:06:17,879
measurement<font color="#E5E5E5"> which means making</font><font color="#CCCCCC"> sure that</font>

145
00:06:16,289 --> 00:06:19,979
the<font color="#E5E5E5"> correct code is running</font><font color="#CCCCCC"> which pretty</font>

146
00:06:17,879 --> 00:06:22,889
much amounts to doing<font color="#CCCCCC"> a hash over the</font>

147
00:06:19,979 --> 00:06:26,219
actual code itself<font color="#CCCCCC"> and I had a station</font>

148
00:06:22,889 --> 00:06:27,569
<font color="#E5E5E5">which is proving that that hash comes</font>

149
00:06:26,219 --> 00:06:30,029
<font color="#E5E5E5">from some sort of chain of</font><font color="#CCCCCC"> trust</font><font color="#E5E5E5"> that</font>

150
00:06:27,569 --> 00:06:31,830
<font color="#E5E5E5">you</font><font color="#CCCCCC"> can believe that</font><font color="#E5E5E5"> it's running these</font>

151
00:06:30,029 --> 00:06:33,240
are separate problems over here<font color="#CCCCCC"> but you</font>

152
00:06:31,830 --> 00:06:34,800
<font color="#E5E5E5">just</font><font color="#CCCCCC"> keep</font><font color="#E5E5E5"> in mind</font><font color="#CCCCCC"> that you would also</font>

153
00:06:33,240 --> 00:06:38,819
<font color="#E5E5E5">want those on top of any other</font>

154
00:06:34,800 --> 00:06:40,500
<font color="#E5E5E5">properties okay</font><font color="#CCCCCC"> and what</font><font color="#E5E5E5"> about side</font>

155
00:06:38,819 --> 00:06:41,160
channels this<font color="#E5E5E5"> is something that</font><font color="#CCCCCC"> you</font>

156
00:06:40,500 --> 00:06:42,960
<font color="#E5E5E5">would keep in mind</font>

157
00:06:41,160 --> 00:06:44,130
for a specific<font color="#E5E5E5"> protocol because</font>

158
00:06:42,960 --> 00:06:45,810
everything is<font color="#E5E5E5"> going to have a different</font>

159
00:06:44,130 --> 00:06:49,830
side channel<font color="#E5E5E5"> depending on how</font><font color="#CCCCCC"> it's</font>

160
00:06:45,810 --> 00:06:52,050
implemented<font color="#E5E5E5"> but if you want to leak some</font>

161
00:06:49,830 --> 00:06:53,849
of the data<font color="#CCCCCC"> that</font><font color="#E5E5E5"> would allow you to do</font>

162
00:06:52,050 --> 00:06:55,650
the computation<font color="#CCCCCC"> you want to leak</font><font color="#E5E5E5"> it in a</font>

163
00:06:53,850 --> 00:06:57,990
way that<font color="#CCCCCC"> means that you can't</font><font color="#E5E5E5"> just get</font>

164
00:06:55,650 --> 00:06:59,669
it<font color="#CCCCCC"> back</font><font color="#E5E5E5"> from somewhere</font><font color="#CCCCCC"> else</font><font color="#E5E5E5"> okay well</font>

165
00:06:57,990 --> 00:07:01,650
this<font color="#E5E5E5"> sounds pretty</font><font color="#CCCCCC"> impossible how are we</font>

166
00:06:59,670 --> 00:07:04,890
supposed<font color="#CCCCCC"> to be</font><font color="#E5E5E5"> able to</font><font color="#CCCCCC"> do computation if</font>

167
00:07:01,650 --> 00:07:07,590
we have no data to<font color="#E5E5E5"> do the computation on</font>

168
00:07:04,890 --> 00:07:10,289
top of but as it turns out it's not

169
00:07:07,590 --> 00:07:14,250
<font color="#CCCCCC">impossible it's just</font><font color="#E5E5E5"> really</font><font color="#CCCCCC"> really</font><font color="#E5E5E5"> hard</font>

170
00:07:10,290 --> 00:07:16,590
<font color="#CCCCCC">so a major direction that</font><font color="#E5E5E5"> people have</font>

171
00:07:14,250 --> 00:07:18,960
<font color="#E5E5E5">been</font><font color="#CCCCCC"> working on to try to implement this</font>

172
00:07:16,590 --> 00:07:21,900
in practice<font color="#CCCCCC"> is using fancy types of</font>

173
00:07:18,960 --> 00:07:24,630
cryptography<font color="#CCCCCC"> so this means something</font>

174
00:07:21,900 --> 00:07:28,830
<font color="#CCCCCC">like this</font><font color="#E5E5E5"> you in the in the for example</font>

175
00:07:24,630 --> 00:07:31,080
<font color="#E5E5E5">in the encrypting search problem space</font>

176
00:07:28,830 --> 00:07:33,539
there's different<font color="#CCCCCC"> trade-offs that you</font>

177
00:07:31,080 --> 00:07:35,820
might make over time the general

178
00:07:33,540 --> 00:07:37,490
research trend is to increase the

179
00:07:35,820 --> 00:07:40,080
functionality<font color="#CCCCCC"> for</font><font color="#E5E5E5"> each of the different</font>

180
00:07:37,490 --> 00:07:43,140
<font color="#E5E5E5">approaches</font><font color="#CCCCCC"> that you might take</font><font color="#E5E5E5"> but for</font>

181
00:07:40,080 --> 00:07:45,150
each category<font color="#CCCCCC"> of approach</font><font color="#E5E5E5"> generally you</font>

182
00:07:43,140 --> 00:07:47,400
can make it more efficient<font color="#E5E5E5"> the more you</font>

183
00:07:45,150 --> 00:07:48,900
leak<font color="#CCCCCC"> if you just have a plain search</font>

184
00:07:47,400 --> 00:07:50,760
index that's not encrypted at all

185
00:07:48,900 --> 00:07:52,380
obviously<font color="#E5E5E5"> that's</font><font color="#CCCCCC"> very efficient but</font>

186
00:07:50,760 --> 00:07:54,360
<font color="#E5E5E5">you're leaking</font><font color="#CCCCCC"> all that</font><font color="#E5E5E5"> information</font>

187
00:07:52,380 --> 00:07:55,440
<font color="#CCCCCC">right there whereas at</font><font color="#E5E5E5"> the complete</font>

188
00:07:54,360 --> 00:07:57,900
<font color="#E5E5E5">other end using fully homomorphic</font>

189
00:07:55,440 --> 00:07:59,910
encryption<font color="#CCCCCC"> you're not leaking anything</font>

190
00:07:57,900 --> 00:08:01,349
but it's extraordinarily inefficient so

191
00:07:59,910 --> 00:08:02,640
we're gonna dive into some of<font color="#CCCCCC"> these and</font>

192
00:08:01,350 --> 00:08:04,530
look<font color="#E5E5E5"> at what different approaches might</font>

193
00:08:02,640 --> 00:08:07,680
look like so<font color="#E5E5E5"> let's talk about</font>

194
00:08:04,530 --> 00:08:09,869
tokenization<font color="#E5E5E5"> the leakage level for</font>

195
00:08:07,680 --> 00:08:12,300
tokenization<font color="#CCCCCC"> is pretty much that you're</font>

196
00:08:09,870 --> 00:08:14,040
trying to<font color="#E5E5E5"> stop accidents this is maybe</font>

197
00:08:12,300 --> 00:08:16,110
you have some contractors who<font color="#CCCCCC"> are who</font>

198
00:08:14,040 --> 00:08:18,480
get to see<font color="#CCCCCC"> the data</font><font color="#E5E5E5"> and they don't</font>

199
00:08:16,110 --> 00:08:20,190
necessarily<font color="#E5E5E5"> have</font><font color="#CCCCCC"> the ability to interact</font>

200
00:08:18,480 --> 00:08:22,050
with<font color="#E5E5E5"> this machine more than like a mouse</font>

201
00:08:20,190 --> 00:08:23,460
or something<font color="#E5E5E5"> like that so you're not</font>

202
00:08:22,050 --> 00:08:25,770
super worried but you<font color="#E5E5E5"> don't want someone</font>

203
00:08:23,460 --> 00:08:27,560
accidentally glancing over<font color="#E5E5E5"> to be able</font><font color="#CCCCCC"> to</font>

204
00:08:25,770 --> 00:08:29,520
<font color="#CCCCCC">see the contents of the data</font><font color="#E5E5E5"> and</font>

205
00:08:27,560 --> 00:08:31,020
tokenization can definitely help<font color="#CCCCCC"> with</font>

206
00:08:29,520 --> 00:08:32,819
that so what does that<font color="#E5E5E5"> look like what is</font>

207
00:08:31,020 --> 00:08:36,569
<font color="#E5E5E5">what</font><font color="#CCCCCC"> are</font><font color="#E5E5E5"> we talkin izing tokenization</font>

208
00:08:32,820 --> 00:08:39,750
<font color="#CCCCCC">means that if you</font><font color="#E5E5E5"> have the the index on</font>

209
00:08:36,570 --> 00:08:42,419
the server and the server can't see the

210
00:08:39,750 --> 00:08:45,780
contents of the documents what you can

211
00:08:42,419 --> 00:08:49,170
do is you can just<font color="#CCCCCC"> take a hash pretty</font>

212
00:08:45,780 --> 00:08:50,220
much<font color="#E5E5E5"> a deterministic hash of each didn't</font>

213
00:08:49,170 --> 00:08:52,530
have to be determined<font color="#CCCCCC"> to whatever</font><font color="#E5E5E5"> you</font>

214
00:08:50,220 --> 00:08:54,240
take<font color="#E5E5E5"> a hash of each of the different</font>

215
00:08:52,530 --> 00:08:56,490
search terms

216
00:08:54,240 --> 00:08:58,440
and then when you want<font color="#CCCCCC"> to go do a search</font>

217
00:08:56,490 --> 00:09:00,089
you just<font color="#CCCCCC"> take the hash</font><font color="#E5E5E5"> of the search</font>

218
00:08:58,440 --> 00:09:01,950
term and<font color="#E5E5E5"> look it up right</font><font color="#CCCCCC"> in the table</font>

219
00:09:00,089 --> 00:09:03,779
<font color="#CCCCCC">and</font><font color="#E5E5E5"> you</font><font color="#CCCCCC"> can</font><font color="#E5E5E5"> find it</font><font color="#CCCCCC"> that way</font><font color="#E5E5E5"> but</font>

220
00:09:01,950 --> 00:09:05,339
<font color="#E5E5E5">obviously someone just looking at the</font>

221
00:09:03,779 --> 00:09:08,910
table<font color="#E5E5E5"> doesn't know what the words are</font>

222
00:09:05,339 --> 00:09:12,089
better in each<font color="#E5E5E5"> of the documents okay</font>

223
00:09:08,910 --> 00:09:14,969
<font color="#CCCCCC">well how well is this going to work</font><font color="#E5E5E5"> out</font>

224
00:09:12,089 --> 00:09:16,500
for<font color="#CCCCCC"> us so let's say that our index looks</font>

225
00:09:14,970 --> 00:09:18,990
<font color="#E5E5E5">something like this and we</font><font color="#CCCCCC"> have some</font>

226
00:09:16,500 --> 00:09:21,570
<font color="#CCCCCC">unknown search term</font><font color="#E5E5E5"> a</font><font color="#CCCCCC"> five eight seven</font>

227
00:09:18,990 --> 00:09:23,190
<font color="#CCCCCC">six as</font><font color="#E5E5E5"> the top one and that's in</font><font color="#CCCCCC"> 220</font>

228
00:09:21,570 --> 00:09:25,320
<font color="#E5E5E5">documents and the next common search</font>

229
00:09:23,190 --> 00:09:28,950
term is in<font color="#E5E5E5"> the next number</font><font color="#CCCCCC"> of documents</font>

230
00:09:25,320 --> 00:09:30,089
<font color="#E5E5E5">we you know we we don't see what the</font>

231
00:09:28,950 --> 00:09:31,890
words are here but<font color="#E5E5E5"> we could still</font>

232
00:09:30,089 --> 00:09:33,660
probably figure something out<font color="#CCCCCC"> about this</font>

233
00:09:31,890 --> 00:09:36,810
<font color="#E5E5E5">using it the fact that it's a natural</font>

234
00:09:33,660 --> 00:09:38,579
<font color="#CCCCCC">language document</font><font color="#E5E5E5"> so okay these are</font><font color="#CCCCCC"> the</font>

235
00:09:36,810 --> 00:09:40,619
most commonly<font color="#E5E5E5"> used words and this index</font>

236
00:09:38,580 --> 00:09:43,560
<font color="#E5E5E5">like what if this is index what might</font>

237
00:09:40,620 --> 00:09:46,230
they be<font color="#E5E5E5"> they might be any anyone want to</font>

238
00:09:43,560 --> 00:09:49,920
shout anything<font color="#E5E5E5"> out common words that</font>

239
00:09:46,230 --> 00:09:53,550
might<font color="#E5E5E5"> be in the top of an index yeah I'm</font>

240
00:09:49,920 --> 00:09:57,209
hearing that yeah great<font color="#E5E5E5"> hey I heard yeah</font>

241
00:09:53,550 --> 00:09:59,339
exactly<font color="#CCCCCC"> be you you can start reconstruct</font>

242
00:09:57,209 --> 00:10:01,319
reusing the frequency of the natural

243
00:09:59,339 --> 00:10:03,120
language<font color="#CCCCCC"> that you know so you</font>

244
00:10:01,320 --> 00:10:06,089
automatically start<font color="#CCCCCC"> revealing that</font><font color="#E5E5E5"> and</font>

245
00:10:03,120 --> 00:10:08,279
<font color="#E5E5E5">it's you might so you might also say</font>

246
00:10:06,089 --> 00:10:10,560
like well<font color="#E5E5E5"> okay we have an index and we</font>

247
00:10:08,279 --> 00:10:12,689
know that this is contained in these<font color="#E5E5E5"> two</font>

248
00:10:10,560 --> 00:10:15,029
hundred and twenty<font color="#CCCCCC"> documents</font><font color="#E5E5E5"> but what if</font>

249
00:10:12,690 --> 00:10:17,279
we just<font color="#E5E5E5"> have like some jumbled up words</font>

250
00:10:15,029 --> 00:10:18,600
in a<font color="#E5E5E5"> document and</font><font color="#CCCCCC"> we don't know what</font>

251
00:10:17,279 --> 00:10:20,700
order<font color="#E5E5E5"> they're</font><font color="#CCCCCC"> in we just know what</font>

252
00:10:18,600 --> 00:10:22,380
document they're in you can still get a

253
00:10:20,700 --> 00:10:24,990
lot<font color="#CCCCCC"> of information</font><font color="#E5E5E5"> from</font><font color="#CCCCCC"> that for example</font>

254
00:10:22,380 --> 00:10:26,910
<font color="#E5E5E5">here</font><font color="#CCCCCC"> are the alphabetized words from a</font>

255
00:10:24,990 --> 00:10:28,980
sentence<font color="#E5E5E5"> that we if we just know what</font>

256
00:10:26,910 --> 00:10:31,290
words<font color="#E5E5E5"> are in this sentence here we can</font>

257
00:10:28,980 --> 00:10:34,800
probably figure<font color="#CCCCCC"> out that it's actually</font>

258
00:10:31,290 --> 00:10:38,969
<font color="#E5E5E5">meant to be this popular sentence from a</font>

259
00:10:34,800 --> 00:10:41,040
<font color="#E5E5E5">English novel so</font><font color="#CCCCCC"> okay that leaks a lot</font>

260
00:10:38,970 --> 00:10:42,930
<font color="#CCCCCC">of information that's pretty unfortunate</font>

261
00:10:41,040 --> 00:10:45,420
but it is very efficient<font color="#E5E5E5"> everything is</font>

262
00:10:42,930 --> 00:10:49,229
constant time what can we maybe do going

263
00:10:45,420 --> 00:10:51,689
<font color="#E5E5E5">one</font><font color="#CCCCCC"> step down searchable encryption here</font>

264
00:10:49,230 --> 00:10:54,959
the leakage level is that<font color="#E5E5E5"> before if you</font>

265
00:10:51,690 --> 00:10:56,640
<font color="#E5E5E5">even got a passive snapshot of the index</font>

266
00:10:54,959 --> 00:10:58,500
you<font color="#CCCCCC"> would be able</font><font color="#E5E5E5"> to reconstruct all of</font>

267
00:10:56,640 --> 00:11:00,510
that<font color="#CCCCCC"> information at the searchable</font>

268
00:10:58,500 --> 00:11:02,670
encryption level you want<font color="#E5E5E5"> a passive</font>

269
00:11:00,510 --> 00:11:03,959
snapshot to not give<font color="#E5E5E5"> you that</font>

270
00:11:02,670 --> 00:11:05,969
information<font color="#CCCCCC"> you would</font><font color="#E5E5E5"> have to have</font>

271
00:11:03,959 --> 00:11:07,170
information<font color="#E5E5E5"> over time be revealed and</font>

272
00:11:05,970 --> 00:11:08,160
you could have a<font color="#E5E5E5"> little</font><font color="#CCCCCC"> bit of</font><font color="#E5E5E5"> leakage</font>

273
00:11:07,170 --> 00:11:10,349
with each sir

274
00:11:08,160 --> 00:11:12,600
query that you do<font color="#CCCCCC"> or</font><font color="#E5E5E5"> possibly with an</font>

275
00:11:10,350 --> 00:11:14,850
<font color="#CCCCCC">EDD or update operation but just a</font>

276
00:11:12,600 --> 00:11:18,360
passive snapshot<font color="#E5E5E5"> should you</font><font color="#CCCCCC"> should be</font>

277
00:11:14,850 --> 00:11:20,399
safe okay so what are we<font color="#E5E5E5"> allowed</font><font color="#CCCCCC"> to leak</font>

278
00:11:18,360 --> 00:11:22,350
<font color="#E5E5E5">one of the things is the</font><font color="#CCCCCC"> keyword</font><font color="#E5E5E5"> access</font>

279
00:11:20,399 --> 00:11:24,660
pattern<font color="#E5E5E5"> this means that if</font><font color="#CCCCCC"> you search</font>

280
00:11:22,350 --> 00:11:26,759
<font color="#CCCCCC">for the same keyword</font><font color="#E5E5E5"> multiple times</font>

281
00:11:24,660 --> 00:11:28,620
<font color="#E5E5E5">that's something that maybe we're</font>

282
00:11:26,759 --> 00:11:29,670
allowed to<font color="#CCCCCC"> know to some extent</font><font color="#E5E5E5"> so it</font>

283
00:11:28,620 --> 00:11:31,290
doesn't<font color="#E5E5E5"> mean you know what the</font><font color="#CCCCCC"> actual</font>

284
00:11:29,670 --> 00:11:33,120
<font color="#E5E5E5">keyword is but you just see the</font>

285
00:11:31,290 --> 00:11:36,569
consistence that you see the<font color="#E5E5E5"> pattern so</font>

286
00:11:33,120 --> 00:11:38,790
you<font color="#E5E5E5"> might know that the the</font><font color="#CCCCCC"> keyword</font>

287
00:11:36,569 --> 00:11:41,550
truth which is represented<font color="#E5E5E5"> perhaps it's</font>

288
00:11:38,790 --> 00:11:43,949
by some index one you see that<font color="#E5E5E5"> the</font>

289
00:11:41,550 --> 00:11:45,569
pattern of<font color="#E5E5E5"> that happening over</font><font color="#CCCCCC"> time and</font>

290
00:11:43,949 --> 00:11:48,839
then<font color="#E5E5E5"> you also have the document</font><font color="#CCCCCC"> access</font>

291
00:11:45,569 --> 00:11:50,849
pattern which<font color="#E5E5E5"> is the reverse of the</font>

292
00:11:48,839 --> 00:11:52,889
index almost and seeing if the same

293
00:11:50,850 --> 00:11:55,019
document appears in multiple keyword

294
00:11:52,889 --> 00:11:56,879
searches<font color="#E5E5E5"> this is something else another</font>

295
00:11:55,019 --> 00:11:58,769
<font color="#E5E5E5">area that a searchable encryption scheme</font>

296
00:11:56,879 --> 00:12:04,889
might leak<font color="#E5E5E5"> to an attacker</font>

297
00:11:58,769 --> 00:12:06,860
<font color="#E5E5E5">oh</font><font color="#CCCCCC"> okay so can we actually achieve this</font>

298
00:12:04,889 --> 00:12:09,480
is a question<font color="#CCCCCC"> that's actually</font>

299
00:12:06,860 --> 00:12:10,709
<font color="#E5E5E5">surprisingly</font><font color="#CCCCCC"> Whelan's explore there's</font>

300
00:12:09,480 --> 00:12:12,959
been a lot of<font color="#E5E5E5"> research into this</font>

301
00:12:10,709 --> 00:12:15,268
<font color="#CCCCCC">particular topic</font><font color="#E5E5E5"> with people under the</font>

302
00:12:12,959 --> 00:12:17,089
assumption that okay maybe<font color="#CCCCCC"> it's actually</font>

303
00:12:15,269 --> 00:12:21,209
kind of<font color="#E5E5E5"> find if we</font><font color="#CCCCCC"> leak those two</font><font color="#E5E5E5"> things</font>

304
00:12:17,089 --> 00:12:24,230
<font color="#CCCCCC">it's they it's sometimes</font><font color="#E5E5E5"> referred</font><font color="#CCCCCC"> to as</font>

305
00:12:21,209 --> 00:12:27,689
either<font color="#E5E5E5"> the honest but curious model or</font>

306
00:12:24,230 --> 00:12:29,670
less euphemistically the NSA model so if

307
00:12:27,689 --> 00:12:31,560
the NSA<font color="#E5E5E5"> comes and says hello we would</font>

308
00:12:29,670 --> 00:12:33,180
like to<font color="#E5E5E5"> take all of your data but that's</font>

309
00:12:31,560 --> 00:12:35,160
all we can<font color="#E5E5E5"> do we</font><font color="#CCCCCC"> can only</font><font color="#E5E5E5"> ask for a</font>

310
00:12:33,180 --> 00:12:37,800
snapshot<font color="#E5E5E5"> of data to be</font><font color="#CCCCCC"> able</font><font color="#E5E5E5"> to go to</font>

311
00:12:35,160 --> 00:12:39,120
them and say<font color="#E5E5E5"> well actually we can't give</font>

312
00:12:37,800 --> 00:12:42,089
<font color="#E5E5E5">you anything so it's a model</font><font color="#CCCCCC"> of what</font>

313
00:12:39,120 --> 00:12:43,980
<font color="#CCCCCC">working under here so how might we</font>

314
00:12:42,089 --> 00:12:45,899
achieve<font color="#E5E5E5"> this one let's talk</font><font color="#CCCCCC"> about a</font>

315
00:12:43,980 --> 00:12:47,279
<font color="#E5E5E5">simple searchable encryption scheme that</font>

316
00:12:45,899 --> 00:12:49,380
achieves some of these properties<font color="#CCCCCC"> so</font>

317
00:12:47,279 --> 00:12:51,269
<font color="#CCCCCC">let's say you have your index</font>

318
00:12:49,380 --> 00:12:52,800
locally<font color="#E5E5E5"> now the first thing</font><font color="#CCCCCC"> that you're</font>

319
00:12:51,269 --> 00:12:55,259
<font color="#E5E5E5">going</font><font color="#CCCCCC"> to do is you're going to</font><font color="#E5E5E5"> split it</font>

320
00:12:52,800 --> 00:12:57,540
up<font color="#E5E5E5"> so instead of just being a mapping of</font>

321
00:12:55,259 --> 00:13:01,740
each word<font color="#CCCCCC"> to the documents</font><font color="#E5E5E5"> it's in you</font>

322
00:12:57,540 --> 00:13:04,800
create pairs of word document and then

323
00:13:01,740 --> 00:13:07,680
<font color="#E5E5E5">you hash each of those individually so</font>

324
00:13:04,800 --> 00:13:09,839
now you just<font color="#CCCCCC"> see a unassociated series</font>

325
00:13:07,680 --> 00:13:11,250
of hashes that<font color="#CCCCCC"> you could mix up it</font>

326
00:13:09,839 --> 00:13:12,569
<font color="#E5E5E5">really doesn't matter at</font><font color="#CCCCCC"> this point</font><font color="#E5E5E5"> what</font>

327
00:13:11,250 --> 00:13:14,009
you do with<font color="#E5E5E5"> those and they don't reveal</font>

328
00:13:12,569 --> 00:13:16,920
<font color="#E5E5E5">any information</font><font color="#CCCCCC"> because it's a one-way</font>

329
00:13:14,009 --> 00:13:19,380
<font color="#E5E5E5">function so then you could send all of</font>

330
00:13:16,920 --> 00:13:20,910
<font color="#E5E5E5">those over to the server and then when</font>

331
00:13:19,380 --> 00:13:22,320
you want to do a query you can

332
00:13:20,910 --> 00:13:23,699
reconstruct those but

333
00:13:22,320 --> 00:13:24,840
need to do it for every single<font color="#E5E5E5"> document</font>

334
00:13:23,700 --> 00:13:27,090
<font color="#E5E5E5">so if you want to know which documents</font>

335
00:13:24,840 --> 00:13:29,100
<font color="#CCCCCC">contain the word dog for example you</font>

336
00:13:27,090 --> 00:13:32,160
would create<font color="#E5E5E5"> the pair of dog and every</font>

337
00:13:29,100 --> 00:13:34,380
possible<font color="#E5E5E5"> documents ID hash all of those</font>

338
00:13:32,160 --> 00:13:37,439
send all of<font color="#E5E5E5"> those over to the server the</font>

339
00:13:34,380 --> 00:13:39,120
<font color="#CCCCCC">server can check the two lists that they</font>

340
00:13:37,440 --> 00:13:41,580
have and see what<font color="#CCCCCC"> matches there are and</font>

341
00:13:39,120 --> 00:13:44,430
if there's a match<font color="#CCCCCC"> they return</font><font color="#E5E5E5"> to you</font>

342
00:13:41,580 --> 00:13:48,510
the hashes<font color="#CCCCCC"> that match and</font><font color="#E5E5E5"> you know which</font>

343
00:13:44,430 --> 00:13:50,670
<font color="#E5E5E5">documents contained</font><font color="#CCCCCC"> that</font><font color="#E5E5E5"> keyword</font><font color="#CCCCCC"> okay so</font>

344
00:13:48,510 --> 00:13:53,189
that's one way<font color="#CCCCCC"> of doing</font><font color="#E5E5E5"> it but it's not</font>

345
00:13:50,670 --> 00:13:55,170
<font color="#CCCCCC">a super ideal way of</font><font color="#E5E5E5"> constructing a</font>

346
00:13:53,190 --> 00:13:57,570
<font color="#E5E5E5">searchable encryption scheme it doesn't</font>

347
00:13:55,170 --> 00:13:59,760
leak any information during<font color="#E5E5E5"> search but</font>

348
00:13:57,570 --> 00:14:01,350
<font color="#E5E5E5">you might also want to not leak any</font>

349
00:13:59,760 --> 00:14:02,819
information when you add documents when

350
00:14:01,350 --> 00:14:04,590
you remove<font color="#CCCCCC"> documents when you update</font>

351
00:14:02,820 --> 00:14:06,420
<font color="#CCCCCC">documents</font><font color="#E5E5E5"> there's various</font><font color="#CCCCCC"> different</font>

352
00:14:04,590 --> 00:14:09,810
stages<font color="#CCCCCC"> where leakage might happen and in</font>

353
00:14:06,420 --> 00:14:11,790
this one that's not ideal for those<font color="#E5E5E5"> but</font>

354
00:14:09,810 --> 00:14:13,739
on top<font color="#E5E5E5"> of all of those</font><font color="#CCCCCC"> you might</font><font color="#E5E5E5"> want to</font>

355
00:14:11,790 --> 00:14:15,540
<font color="#CCCCCC">also allow</font><font color="#E5E5E5"> low communication overhead</font>

356
00:14:13,740 --> 00:14:17,370
less computation document sharing

357
00:14:15,540 --> 00:14:19,709
boolean queries<font color="#E5E5E5"> over there that was</font><font color="#CCCCCC"> just</font>

358
00:14:17,370 --> 00:14:22,560
a single<font color="#E5E5E5"> index one but we're not gonna</font>

359
00:14:19,710 --> 00:14:27,030
go into<font color="#E5E5E5"> how to do each and every one of</font>

360
00:14:22,560 --> 00:14:28,709
these because<font color="#E5E5E5"> as turns out this leakage</font>

361
00:14:27,030 --> 00:14:30,750
level that we were trying<font color="#E5E5E5"> to achieve of</font>

362
00:14:28,710 --> 00:14:35,300
making a snapshot useless<font color="#CCCCCC"> you can get as</font>

363
00:14:30,750 --> 00:14:38,220
fancy<font color="#CCCCCC"> as you want inside of</font><font color="#E5E5E5"> that but</font>

364
00:14:35,300 --> 00:14:41,130
turns out that the things that<font color="#CCCCCC"> we were</font>

365
00:14:38,220 --> 00:14:43,080
allowing<font color="#CCCCCC"> to</font><font color="#E5E5E5"> leak are really bad so that</font>

366
00:14:41,130 --> 00:14:45,840
that<font color="#CCCCCC"> document access</font><font color="#E5E5E5"> pattern that I</font>

367
00:14:43,080 --> 00:14:47,910
mentioned before<font color="#E5E5E5"> and</font><font color="#CCCCCC"> also document</font>

368
00:14:45,840 --> 00:14:50,490
access<font color="#E5E5E5"> volume which isn't necessarily</font>

369
00:14:47,910 --> 00:14:54,030
just which documents are<font color="#CCCCCC"> in</font><font color="#E5E5E5"> a query but</font>

370
00:14:50,490 --> 00:14:56,130
just how many<font color="#CCCCCC"> total</font><font color="#E5E5E5"> artists are given in</font>

371
00:14:54,030 --> 00:14:59,130
response<font color="#E5E5E5"> to a single</font><font color="#CCCCCC"> query</font><font color="#E5E5E5"> with just</font>

372
00:14:56,130 --> 00:15:04,380
those two<font color="#CCCCCC"> things</font><font color="#E5E5E5"> just those two patterns</font>

373
00:14:59,130 --> 00:15:06,210
<font color="#CCCCCC">a paper from about last</font><font color="#E5E5E5"> winter</font><font color="#CCCCCC"> of</font><font color="#E5E5E5"> six</font>

374
00:15:04,380 --> 00:15:08,220
<font color="#E5E5E5">months ago</font><font color="#CCCCCC"> ish was</font><font color="#E5E5E5"> able to completely</font>

375
00:15:06,210 --> 00:15:12,180
<font color="#E5E5E5">reduce it as if it were just a tokenized</font>

376
00:15:08,220 --> 00:15:14,820
database so it's almost<font color="#E5E5E5"> like saying that</font>

377
00:15:12,180 --> 00:15:16,589
we thought<font color="#E5E5E5"> that allowing this pattern of</font>

378
00:15:14,820 --> 00:15:18,630
<font color="#E5E5E5">leakage wouldn't be so bad but</font><font color="#CCCCCC"> actually</font>

379
00:15:16,590 --> 00:15:20,610
it's<font color="#CCCCCC"> really atrocious when they do it in</font>

380
00:15:18,630 --> 00:15:24,420
polynomial time<font color="#E5E5E5"> which in crypto speak</font>

381
00:15:20,610 --> 00:15:27,300
means fast<font color="#E5E5E5"> or reasonable but it gets</font>

382
00:15:24,420 --> 00:15:28,800
even<font color="#CCCCCC"> worse than</font><font color="#E5E5E5"> that because if you</font><font color="#CCCCCC"> get</font>

383
00:15:27,300 --> 00:15:30,630
away<font color="#E5E5E5"> from the model</font><font color="#CCCCCC"> of</font><font color="#E5E5E5"> what you're</font>

384
00:15:28,800 --> 00:15:32,579
working<font color="#CCCCCC"> with</font><font color="#E5E5E5"> it's pretty</font><font color="#CCCCCC"> much that's</font><font color="#E5E5E5"> the</font>

385
00:15:30,630 --> 00:15:35,560
case that snapshots in general<font color="#E5E5E5"> don't</font>

386
00:15:32,580 --> 00:15:36,580
exist outside of<font color="#E5E5E5"> theory</font>

387
00:15:35,560 --> 00:15:38,229
because you have to<font color="#E5E5E5"> think about where</font>

388
00:15:36,580 --> 00:15:40,480
you're<font color="#CCCCCC"> actually keeping this</font><font color="#E5E5E5"> information</font>

389
00:15:38,230 --> 00:15:43,630
which is often in a database<font color="#E5E5E5"> and these</font>

390
00:15:40,480 --> 00:15:46,810
databases<font color="#CCCCCC"> aren't built from scratch with</font>

391
00:15:43,630 --> 00:15:48,400
<font color="#CCCCCC">the goal</font><font color="#E5E5E5"> of keeping to this model of</font>

392
00:15:46,810 --> 00:15:49,599
<font color="#CCCCCC">information they have other information</font>

393
00:15:48,400 --> 00:15:51,610
<font color="#CCCCCC">as</font><font color="#E5E5E5"> well</font>

394
00:15:49,600 --> 00:15:54,400
for example there's often transaction

395
00:15:51,610 --> 00:15:56,470
logs<font color="#E5E5E5"> sometimes they literally just cache</font>

396
00:15:54,400 --> 00:15:58,900
the query so you have this<font color="#CCCCCC"> information</font>

397
00:15:56,470 --> 00:16:00,610
over time available<font color="#E5E5E5"> to</font><font color="#CCCCCC"> you</font><font color="#E5E5E5"> even if you</font>

398
00:15:58,900 --> 00:16:03,640
<font color="#CCCCCC">think</font><font color="#E5E5E5"> that you only have a snapshot on</font>

399
00:16:00,610 --> 00:16:05,080
your machine<font color="#E5E5E5"> at a particular time okay</font>

400
00:16:03,640 --> 00:16:08,380
so this leakage level of making

401
00:16:05,080 --> 00:16:11,560
<font color="#E5E5E5">snapshots useless as it turns out isn't</font>

402
00:16:08,380 --> 00:16:13,210
really a<font color="#E5E5E5"> thing that exists in reality so</font>

403
00:16:11,560 --> 00:16:17,560
<font color="#E5E5E5">okay if that doesn't exist in reality</font>

404
00:16:13,210 --> 00:16:20,980
<font color="#CCCCCC">what can we do instead the next level</font>

405
00:16:17,560 --> 00:16:23,500
here is what we call oblivious<font color="#CCCCCC"> RAM okay</font>

406
00:16:20,980 --> 00:16:26,140
so what will we<font color="#CCCCCC"> leak at this stage here</font>

407
00:16:23,500 --> 00:16:27,880
<font color="#E5E5E5">our goal is</font><font color="#CCCCCC"> to have no leakage</font><font color="#E5E5E5"> over time</font>

408
00:16:26,140 --> 00:16:29,589
this<font color="#E5E5E5"> means you can do multiple</font><font color="#CCCCCC"> queries</font>

409
00:16:27,880 --> 00:16:32,529
and you<font color="#CCCCCC"> still won't leak more</font>

410
00:16:29,589 --> 00:16:35,950
information with<font color="#CCCCCC"> each query</font><font color="#E5E5E5"> okay so in</font>

411
00:16:32,529 --> 00:16:38,550
an oblivious<font color="#CCCCCC"> Ram</font><font color="#E5E5E5"> setup what you might do</font>

412
00:16:35,950 --> 00:16:42,010
is that the server<font color="#E5E5E5"> has a bunch of blocks</font>

413
00:16:38,550 --> 00:16:44,650
<font color="#CCCCCC">and so the client will say I want</font><font color="#E5E5E5"> a</font>

414
00:16:42,010 --> 00:16:47,380
particular<font color="#E5E5E5"> block but won't request that</font>

415
00:16:44,650 --> 00:16:49,990
specific block<font color="#E5E5E5"> precisely this the client</font>

416
00:16:47,380 --> 00:16:51,310
instead will request a series<font color="#CCCCCC"> of blocks</font>

417
00:16:49,990 --> 00:16:54,070
<font color="#E5E5E5">and therefore the server doesn't</font>

418
00:16:51,310 --> 00:16:56,560
<font color="#E5E5E5">actually know which particular block the</font>

419
00:16:54,070 --> 00:16:59,680
client wants so if the client<font color="#CCCCCC"> actually</font>

420
00:16:56,560 --> 00:17:03,010
<font color="#CCCCCC">wants block two they will ask for 0 to</font>

421
00:16:59,680 --> 00:17:05,040
<font color="#CCCCCC">59 and</font><font color="#E5E5E5"> 86 and the server will happily</font>

422
00:17:03,010 --> 00:17:07,089
respond with all of<font color="#E5E5E5"> those blocks and</font>

423
00:17:05,040 --> 00:17:11,438
<font color="#E5E5E5">this is what we call an oblivious</font><font color="#CCCCCC"> Ram</font>

424
00:17:07,089 --> 00:17:12,698
the name is a little confusing because

425
00:17:11,439 --> 00:17:14,290
it originally came<font color="#CCCCCC"> from an</font>

426
00:17:12,699 --> 00:17:17,260
implementation<font color="#CCCCCC"> that</font><font color="#E5E5E5"> was meant for actual</font>

427
00:17:14,290 --> 00:17:20,020
<font color="#E5E5E5">RAM but oblivious</font><font color="#CCCCCC"> Ram in general</font><font color="#E5E5E5"> refers</font>

428
00:17:17,260 --> 00:17:21,939
to the practice<font color="#CCCCCC"> of hiding access</font>

429
00:17:20,020 --> 00:17:25,060
patterns whether in actual memory or in

430
00:17:21,939 --> 00:17:27,160
<font color="#E5E5E5">just any sort of general</font><font color="#CCCCCC"> blocks store ok</font>

431
00:17:25,060 --> 00:17:30,970
so you<font color="#E5E5E5"> want</font><font color="#CCCCCC"> it to return more</font><font color="#E5E5E5"> than</font><font color="#CCCCCC"> one</font>

432
00:17:27,160 --> 00:17:33,550
<font color="#CCCCCC">document</font><font color="#E5E5E5"> but it is crucially important</font>

433
00:17:30,970 --> 00:17:36,070
how<font color="#E5E5E5"> you actually go about implementing</font>

434
00:17:33,550 --> 00:17:38,200
one of these do<font color="#CCCCCC"> not try to just naively</font>

435
00:17:36,070 --> 00:17:40,540
build your own<font color="#CCCCCC"> Oh</font><font color="#E5E5E5"> Ram it will not work</font>

436
00:17:38,200 --> 00:17:42,250
<font color="#E5E5E5">it's if you just do it in any sort of</font>

437
00:17:40,540 --> 00:17:45,100
naive<font color="#CCCCCC"> method it's probably not</font><font color="#E5E5E5"> going to</font>

438
00:17:42,250 --> 00:17:47,470
work to get<font color="#CCCCCC"> a bit</font><font color="#E5E5E5"> of a sense of what</font>

439
00:17:45,100 --> 00:17:49,600
<font color="#CCCCCC">Emma funded implementations</font><font color="#E5E5E5"> actually</font>

440
00:17:47,470 --> 00:17:51,700
look like<font color="#CCCCCC"> this one</font><font color="#E5E5E5"> over here within an</font>

441
00:17:49,600 --> 00:17:53,830
paper entitled<font color="#E5E5E5"> an extremely simple</font>

442
00:17:51,700 --> 00:17:55,480
oblivious<font color="#CCCCCC"> RAM protocol which</font><font color="#E5E5E5"> really</font>

443
00:17:53,830 --> 00:17:58,600
<font color="#E5E5E5">tells you much about the other Ram</font>

444
00:17:55,480 --> 00:18:01,720
protocols<font color="#CCCCCC"> the basic idea</font><font color="#E5E5E5"> of this is that</font>

445
00:17:58,600 --> 00:18:03,909
on the server<font color="#E5E5E5"> you</font><font color="#CCCCCC"> have your blocks</font><font color="#E5E5E5"> in a</font>

446
00:18:01,720 --> 00:18:04,390
tree which isn't<font color="#E5E5E5"> actually implemented as</font>

447
00:18:03,910 --> 00:18:08,320
a tree

448
00:18:04,390 --> 00:18:10,210
but the client<font color="#CCCCCC"> keeps</font><font color="#E5E5E5"> a mapping from each</font>

449
00:18:08,320 --> 00:18:11,830
block to<font color="#E5E5E5"> where it might be</font><font color="#CCCCCC"> in a tree</font><font color="#E5E5E5"> and</font>

450
00:18:10,210 --> 00:18:12,460
then all the blocks along the tree are

451
00:18:11,830 --> 00:18:13,960
returned

452
00:18:12,460 --> 00:18:16,090
<font color="#E5E5E5">this means that you need to do some</font>

453
00:18:13,960 --> 00:18:19,600
computation<font color="#E5E5E5"> client-side and also have a</font>

454
00:18:16,090 --> 00:18:21,159
roughly log<font color="#CCCCCC"> n storage for a cache but it</font>

455
00:18:19,600 --> 00:18:23,740
is possible<font color="#CCCCCC"> to</font><font color="#E5E5E5"> implement these things</font>

456
00:18:21,160 --> 00:18:26,020
that's<font color="#E5E5E5"> just hard anyway</font><font color="#CCCCCC"> ok</font><font color="#E5E5E5"> so you might</font>

457
00:18:23,740 --> 00:18:28,179
<font color="#CCCCCC">have</font><font color="#E5E5E5"> even within</font><font color="#CCCCCC"> o</font><font color="#E5E5E5"> Ram there's different</font>

458
00:18:26,020 --> 00:18:31,179
ways<font color="#E5E5E5"> that</font><font color="#CCCCCC"> you can</font><font color="#E5E5E5"> construct</font><font color="#CCCCCC"> n</font><font color="#E5E5E5"> a search</font>

459
00:18:28,179 --> 00:18:35,380
index<font color="#E5E5E5"> over it but what you could do at</font>

460
00:18:31,179 --> 00:18:38,830
the kind of most basic level here is you

461
00:18:35,380 --> 00:18:42,820
can just<font color="#E5E5E5"> put it directly into</font><font color="#CCCCCC"> the server</font>

462
00:18:38,830 --> 00:18:45,129
so you<font color="#E5E5E5"> can have a searchable encryption</font>

463
00:18:42,820 --> 00:18:47,980
on top of a<font color="#CCCCCC"> ram entirely so if you want</font>

464
00:18:45,130 --> 00:18:50,080
to search for<font color="#CCCCCC"> a key word then locally</font>

465
00:18:47,980 --> 00:18:52,030
<font color="#E5E5E5">you have pretty much the entire index</font>

466
00:18:50,080 --> 00:18:55,360
and you just<font color="#E5E5E5"> ask for the documents and</font>

467
00:18:52,030 --> 00:18:58,299
that takes a lot<font color="#E5E5E5"> of overhead</font><font color="#CCCCCC"> otherwise</font>

468
00:18:55,360 --> 00:19:01,449
you might put the index<font color="#E5E5E5"> into a no Ram on</font>

469
00:18:58,299 --> 00:19:03,850
the other<font color="#E5E5E5"> side on the server but have it</font>

470
00:19:01,450 --> 00:19:05,049
separate<font color="#CCCCCC"> from your</font><font color="#E5E5E5"> documents store and</font>

471
00:19:03,850 --> 00:19:06,939
then you<font color="#E5E5E5"> just do multiple rounds of</font>

472
00:19:05,049 --> 00:19:09,250
communication<font color="#CCCCCC"> and since the indexes</font>

473
00:19:06,940 --> 00:19:12,250
itself is inside of an ORM and it's in

474
00:19:09,250 --> 00:19:14,559
the same ORM as the documents the server

475
00:19:12,250 --> 00:19:16,059
doesn't<font color="#E5E5E5"> get much information slightly</font>

476
00:19:14,559 --> 00:19:17,530
more efficient ways to<font color="#CCCCCC"> have them in</font><font color="#E5E5E5"> two</font>

477
00:19:16,059 --> 00:19:20,710
separate<font color="#CCCCCC"> rooms which</font><font color="#E5E5E5"> is on the right</font>

478
00:19:17,530 --> 00:19:23,770
side over<font color="#E5E5E5"> there and then you</font><font color="#CCCCCC"> could just</font>

479
00:19:20,710 --> 00:19:25,419
put<font color="#CCCCCC"> your index into a know em and not</font>

480
00:19:23,770 --> 00:19:26,530
have a block store or you can<font color="#CCCCCC"> just have</font>

481
00:19:25,419 --> 00:19:29,080
<font color="#E5E5E5">everything in the clear so these are</font>

482
00:19:26,530 --> 00:19:32,230
kind of decreasing levels<font color="#E5E5E5"> of security</font>

483
00:19:29,080 --> 00:19:35,620
but increasing levels<font color="#E5E5E5"> of efficiency</font><font color="#CCCCCC"> but</font>

484
00:19:32,230 --> 00:19:37,840
if you<font color="#E5E5E5"> analyze it from this perspective</font>

485
00:19:35,620 --> 00:19:39,939
what<font color="#CCCCCC"> you</font><font color="#E5E5E5"> can get from this is that at</font>

486
00:19:37,840 --> 00:19:43,570
each leakage class you<font color="#E5E5E5"> could call it</font>

487
00:19:39,940 --> 00:19:46,330
you're still<font color="#E5E5E5"> going to</font><font color="#CCCCCC"> be leaking</font><font color="#E5E5E5"> some</font>

488
00:19:43,570 --> 00:19:48,639
information so at the<font color="#CCCCCC"> very left</font><font color="#E5E5E5"> leakage</font>

489
00:19:46,330 --> 00:19:50,649
class<font color="#E5E5E5"> zero zero leakage is the SpiderOak</font>

490
00:19:48,640 --> 00:19:53,350
model you do all of<font color="#E5E5E5"> your computation</font>

491
00:19:50,650 --> 00:19:55,750
locally<font color="#E5E5E5"> but if you even reveal a little</font>

492
00:19:53,350 --> 00:19:58,120
bit of information<font color="#CCCCCC"> you're still getting</font>

493
00:19:55,750 --> 00:20:01,480
some volume overhead of communication

494
00:19:58,120 --> 00:20:03,649
<font color="#E5E5E5">that gives information</font><font color="#CCCCCC"> to an attacker</font>

495
00:20:01,480 --> 00:20:06,950
who's watching this go by

496
00:20:03,650 --> 00:20:08,930
and that<font color="#CCCCCC"> documents volume metric that I</font>

497
00:20:06,950 --> 00:20:10,850
mentioned before<font color="#CCCCCC"> if you can</font><font color="#E5E5E5"> estimate</font>

498
00:20:08,930 --> 00:20:13,280
that<font color="#E5E5E5"> from the communication volume</font>

499
00:20:10,850 --> 00:20:15,860
<font color="#E5E5E5">you've introduced a form of leakage so</font>

500
00:20:13,280 --> 00:20:19,820
even<font color="#E5E5E5"> om still has some sorts of leakage</font>

501
00:20:15,860 --> 00:20:22,610
<font color="#CCCCCC">oh and also</font><font color="#E5E5E5"> in leakage class 1 & 2</font><font color="#CCCCCC"> it</font>

502
00:20:19,820 --> 00:20:24,080
ends up<font color="#E5E5E5"> being more information</font>

503
00:20:22,610 --> 00:20:26,360
processing<font color="#E5E5E5"> and communication overhead</font>

504
00:20:24,080 --> 00:20:29,960
<font color="#E5E5E5">then just redownload the entire database</font>

505
00:20:26,360 --> 00:20:33,050
<font color="#CCCCCC">every time so you</font><font color="#E5E5E5"> get a performance hit</font>

506
00:20:29,960 --> 00:20:36,290
without<font color="#E5E5E5"> in practice getting that leakage</font>

507
00:20:33,050 --> 00:20:37,550
<font color="#CCCCCC">protection that you</font><font color="#E5E5E5"> wanted</font><font color="#CCCCCC"> okay oh</font><font color="#E5E5E5"> Ram</font>

508
00:20:36,290 --> 00:20:39,170
<font color="#E5E5E5">not perfect either</font>

509
00:20:37,550 --> 00:20:41,210
<font color="#E5E5E5">what about fully homomorphic encryption</font>

510
00:20:39,170 --> 00:20:44,210
everyone<font color="#E5E5E5"> always mentions that why why</font>

511
00:20:41,210 --> 00:20:46,220
<font color="#E5E5E5">don't we just do that so there was a</font>

512
00:20:44,210 --> 00:20:48,260
paper from April that had<font color="#E5E5E5"> a quote that</font><font color="#CCCCCC"> I</font>

513
00:20:46,220 --> 00:20:50,690
<font color="#E5E5E5">really like which tells us a bit about</font>

514
00:20:48,260 --> 00:20:53,330
<font color="#CCCCCC">the current</font><font color="#E5E5E5"> state of the implementation</font>

515
00:20:50,690 --> 00:20:55,550
<font color="#CCCCCC">of fully homomorphic encryption which is</font>

516
00:20:53,330 --> 00:20:58,280
that the implementation<font color="#E5E5E5"> they found in</font>

517
00:20:55,550 --> 00:21:01,040
<font color="#E5E5E5">this paper was</font><font color="#CCCCCC"> 2 to the 80 times</font><font color="#E5E5E5"> more</font>

518
00:20:58,280 --> 00:21:02,750
efficient than<font color="#E5E5E5"> existing candidates so</font>

519
00:21:01,040 --> 00:21:05,330
and this<font color="#E5E5E5"> is</font><font color="#CCCCCC"> just an important milestone</font>

520
00:21:02,750 --> 00:21:06,860
that's not all the way<font color="#CCCCCC"> there</font><font color="#E5E5E5"> we're</font>

521
00:21:05,330 --> 00:21:10,030
getting<font color="#E5E5E5"> to to the 80 times faster and</font>

522
00:21:06,860 --> 00:21:13,820
we're still not<font color="#CCCCCC"> there yet it's not ready</font>

523
00:21:10,030 --> 00:21:15,830
well<font color="#CCCCCC"> ok</font><font color="#E5E5E5"> so it turns out that the crypto</font>

524
00:21:13,820 --> 00:21:18,290
is not necessarily<font color="#E5E5E5"> going to</font><font color="#CCCCCC"> be</font><font color="#E5E5E5"> our best</font>

525
00:21:15,830 --> 00:21:21,050
bet<font color="#CCCCCC"> what else can we do we</font><font color="#E5E5E5"> can turn to</font>

526
00:21:18,290 --> 00:21:25,430
<font color="#E5E5E5">hardware so what is</font><font color="#CCCCCC"> Hardware going to</font>

527
00:21:21,050 --> 00:21:26,930
look like<font color="#CCCCCC"> so the fancy thing that is the</font>

528
00:21:25,430 --> 00:21:29,450
<font color="#E5E5E5">excitement and all the rage these days</font>

529
00:21:26,930 --> 00:21:31,520
is<font color="#E5E5E5"> called Intel SGX software guard</font>

530
00:21:29,450 --> 00:21:32,870
extensions<font color="#E5E5E5"> and here's what the model for</font>

531
00:21:31,520 --> 00:21:34,790
that<font color="#E5E5E5"> looks like so</font><font color="#CCCCCC"> you have</font><font color="#E5E5E5"> your</font>

532
00:21:32,870 --> 00:21:36,260
<font color="#CCCCCC">different layers of your machine</font><font color="#E5E5E5"> at the</font>

533
00:21:34,790 --> 00:21:38,060
very<font color="#E5E5E5"> bottom you have your hardware layer</font>

534
00:21:36,260 --> 00:21:40,850
on top of<font color="#CCCCCC"> that you have a hypervisor</font>

535
00:21:38,060 --> 00:21:44,179
<font color="#E5E5E5">operating</font><font color="#CCCCCC"> system application of the</font>

536
00:21:40,850 --> 00:21:46,340
regular<font color="#E5E5E5"> rings of trust but what</font><font color="#CCCCCC"> SGX does</font>

537
00:21:44,180 --> 00:21:47,930
differently<font color="#CCCCCC"> is</font><font color="#E5E5E5"> that inside of your</font>

538
00:21:46,340 --> 00:21:50,120
<font color="#CCCCCC">application in your application space</font>

539
00:21:47,930 --> 00:21:52,550
<font color="#E5E5E5">you have an it protected Enclave which</font>

540
00:21:50,120 --> 00:21:56,209
is tied directly to<font color="#CCCCCC"> the</font><font color="#E5E5E5"> hardware almost</font>

541
00:21:52,550 --> 00:21:58,100
like a reverse sandbox<font color="#E5E5E5"> so you can have</font>

542
00:21:56,210 --> 00:21:59,480
an attacker in the application you<font color="#CCCCCC"> can</font>

543
00:21:58,100 --> 00:22:01,040
have an attacker get out of the

544
00:21:59,480 --> 00:22:02,840
application<font color="#CCCCCC"> layer into the</font><font color="#E5E5E5"> operating</font>

545
00:22:01,040 --> 00:22:05,659
<font color="#CCCCCC">system you can even</font><font color="#E5E5E5"> have a malicious</font>

546
00:22:02,840 --> 00:22:08,300
<font color="#E5E5E5">hypervisor and</font><font color="#CCCCCC"> the Enclave will still be</font>

547
00:22:05,660 --> 00:22:12,710
protected<font color="#E5E5E5"> because of the hardware</font>

548
00:22:08,300 --> 00:22:14,780
connection<font color="#CCCCCC"> the way that this</font><font color="#E5E5E5"> is</font>

549
00:22:12,710 --> 00:22:17,059
<font color="#E5E5E5">implemented is</font><font color="#CCCCCC"> that there is something</font>

550
00:22:14,780 --> 00:22:18,860
<font color="#E5E5E5">they call an enclave page cache</font>

551
00:22:17,059 --> 00:22:21,110
and that's access protected<font color="#CCCCCC"> by the</font>

552
00:22:18,860 --> 00:22:23,000
hardware<font color="#E5E5E5"> and the different Enclave pages</font>

553
00:22:21,110 --> 00:22:25,789
are mapped<font color="#E5E5E5"> to different areas of</font><font color="#CCCCCC"> memory</font>

554
00:22:23,000 --> 00:22:29,000
and they are encrypted when they're

555
00:22:25,789 --> 00:22:30,110
written out to<font color="#CCCCCC"> regular memory and when</font>

556
00:22:29,000 --> 00:22:32,000
it's<font color="#E5E5E5"> written out</font><font color="#CCCCCC"> to</font><font color="#E5E5E5"> the rest of</font><font color="#CCCCCC"> the</font>

557
00:22:30,110 --> 00:22:35,479
memory<font color="#E5E5E5"> no one else can read it in and</font>

558
00:22:32,000 --> 00:22:38,539
access it<font color="#CCCCCC"> there's a lot more details</font>

559
00:22:35,480 --> 00:22:42,200
there<font color="#E5E5E5"> if you look into it it's not</font>

560
00:22:38,539 --> 00:22:44,030
exactly the<font color="#E5E5E5"> most free ecosystem for</font>

561
00:22:42,200 --> 00:22:46,789
production applications<font color="#CCCCCC"> last I checked</font>

562
00:22:44,030 --> 00:22:48,530
<font color="#CCCCCC">Intel still controls what you're</font><font color="#E5E5E5"> able to</font>

563
00:22:46,789 --> 00:22:49,760
<font color="#E5E5E5">even put inside of</font><font color="#CCCCCC"> these if</font><font color="#E5E5E5"> you want the</font>

564
00:22:48,530 --> 00:22:51,230
proper<font color="#E5E5E5"> Hardware protections and</font>

565
00:22:49,760 --> 00:22:52,549
signature<font color="#E5E5E5"> so there's all the problems</font>

566
00:22:51,230 --> 00:22:54,020
with<font color="#E5E5E5"> it as well which is from a</font><font color="#CCCCCC"> security</font>

567
00:22:52,549 --> 00:22:57,110
perspective let's talk about<font color="#E5E5E5"> some</font><font color="#CCCCCC"> of the</font>

568
00:22:54,020 --> 00:22:58,668
<font color="#E5E5E5">properties that</font><font color="#CCCCCC"> this has one thing</font>

569
00:22:57,110 --> 00:23:00,530
that's nice about it is that<font color="#CCCCCC"> it does</font>

570
00:22:58,669 --> 00:23:02,480
address<font color="#E5E5E5"> the measurement and</font><font color="#CCCCCC"> attestation</font>

571
00:23:00,530 --> 00:23:04,190
<font color="#E5E5E5">things that I mentioned</font><font color="#CCCCCC"> before so you</font>

572
00:23:02,480 --> 00:23:05,929
can prove of<font color="#E5E5E5"> beliefs say what the</font>

573
00:23:04,190 --> 00:23:08,450
application is doing<font color="#E5E5E5"> or rather more</font>

574
00:23:05,929 --> 00:23:09,950
specifically<font color="#E5E5E5"> that the application that</font>

575
00:23:08,450 --> 00:23:11,870
you think is running is<font color="#CCCCCC"> the one that's</font>

576
00:23:09,950 --> 00:23:13,940
computing on the data<font color="#E5E5E5"> so you know it's</font>

577
00:23:11,870 --> 00:23:16,760
not just<font color="#E5E5E5"> like printing everything to the</font>

578
00:23:13,940 --> 00:23:20,390
screen when you want to<font color="#E5E5E5"> be protecting</font>

579
00:23:16,760 --> 00:23:21,650
the<font color="#E5E5E5"> data</font><font color="#CCCCCC"> well okay this</font><font color="#E5E5E5"> sounds</font><font color="#CCCCCC"> like it</font>

580
00:23:20,390 --> 00:23:23,090
could be<font color="#CCCCCC"> pretty</font><font color="#E5E5E5"> cool we could just stick</font>

581
00:23:21,650 --> 00:23:24,289
everything<font color="#E5E5E5"> inside</font><font color="#CCCCCC"> and Enclave then we</font>

582
00:23:23,090 --> 00:23:27,199
<font color="#E5E5E5">don't need to worry about the rest</font><font color="#CCCCCC"> some</font>

583
00:23:24,289 --> 00:23:29,658
machine<font color="#CCCCCC"> does it work can can we just do</font>

584
00:23:27,200 --> 00:23:32,120
that<font color="#E5E5E5"> well there are some things</font><font color="#CCCCCC"> that we</font>

585
00:23:29,659 --> 00:23:35,600
can nicely call<font color="#E5E5E5"> challenges to working</font>

586
00:23:32,120 --> 00:23:36,889
<font color="#CCCCCC">with</font><font color="#E5E5E5"> it</font><font color="#CCCCCC"> the first</font><font color="#E5E5E5"> challenge is really</font>

587
00:23:35,600 --> 00:23:38,449
<font color="#E5E5E5">more of an implementation one than a</font>

588
00:23:36,890 --> 00:23:42,799
<font color="#E5E5E5">security one which is space versus</font>

589
00:23:38,450 --> 00:23:45,260
efficiency<font color="#CCCCCC"> so in</font><font color="#E5E5E5"> sjx like I mentioned</font>

590
00:23:42,799 --> 00:23:46,490
you've got the encrypted<font color="#E5E5E5"> page cache and</font>

591
00:23:45,260 --> 00:23:48,530
everything is written in and written out

592
00:23:46,490 --> 00:23:49,789
<font color="#E5E5E5">but you don't have a lot of space</font><font color="#CCCCCC"> there</font>

593
00:23:48,530 --> 00:23:51,200
you<font color="#CCCCCC"> don't</font><font color="#E5E5E5"> have a lot of memory</font><font color="#CCCCCC"> and if</font>

594
00:23:49,789 --> 00:23:52,820
you're encrypting<font color="#E5E5E5"> it every time it goes</font>

595
00:23:51,200 --> 00:23:55,130
in and out<font color="#E5E5E5"> that takes a bit of a</font>

596
00:23:52,820 --> 00:23:56,418
<font color="#CCCCCC">performance overhead hit not too</font>

597
00:23:55,130 --> 00:23:59,059
terrible but you do<font color="#E5E5E5"> need to be</font>

598
00:23:56,419 --> 00:24:01,070
conscientious of<font color="#E5E5E5"> what</font><font color="#CCCCCC"> you're putting</font>

599
00:23:59,059 --> 00:24:02,418
<font color="#E5E5E5">into the Enclave you can't it's not you</font>

600
00:24:01,070 --> 00:24:04,370
can't just like stick<font color="#E5E5E5"> your entire</font>

601
00:24:02,419 --> 00:24:06,530
application in there or your entire

602
00:24:04,370 --> 00:24:09,439
operating<font color="#CCCCCC"> system and</font><font color="#E5E5E5"> expect that it's</font>

603
00:24:06,530 --> 00:24:11,120
<font color="#E5E5E5">going to work it has like constraints</font>

604
00:24:09,440 --> 00:24:12,980
<font color="#E5E5E5">that</font><font color="#CCCCCC"> you need to think about when you're</font>

605
00:24:11,120 --> 00:24:15,229
<font color="#CCCCCC">doing it but that's not so</font><font color="#E5E5E5"> much of a</font>

606
00:24:12,980 --> 00:24:18,320
<font color="#E5E5E5">problem let's talk about</font><font color="#CCCCCC"> Iago attacks</font>

607
00:24:15,230 --> 00:24:20,330
<font color="#E5E5E5">this Iago attacks are named in</font><font color="#CCCCCC"> reference</font>

608
00:24:18,320 --> 00:24:21,980
to<font color="#E5E5E5"> a Shakespeare play that I have never</font>

609
00:24:20,330 --> 00:24:25,490
<font color="#E5E5E5">read but I'm told it has something to do</font>

610
00:24:21,980 --> 00:24:27,830
<font color="#CCCCCC">with like lying so in an</font><font color="#E5E5E5"> attack</font><font color="#CCCCCC"> The</font>

611
00:24:25,490 --> 00:24:28,850
Enclave<font color="#E5E5E5"> which is an application might</font>

612
00:24:27,830 --> 00:24:32,689
call down<font color="#CCCCCC"> to</font>

613
00:24:28,850 --> 00:24:35,090
an operating<font color="#E5E5E5"> system function call such</font>

614
00:24:32,690 --> 00:24:37,070
as for example<font color="#E5E5E5"> asking for some entropy</font>

615
00:24:35,090 --> 00:24:40,129
for a random<font color="#CCCCCC"> number and if the operating</font>

616
00:24:37,070 --> 00:24:43,010
<font color="#CCCCCC">system is malicious it might lie it</font>

617
00:24:40,130 --> 00:24:46,190
might return a<font color="#E5E5E5"> number that is</font><font color="#CCCCCC"> not random</font>

618
00:24:43,010 --> 00:24:48,470
at<font color="#E5E5E5"> all so that's an ego attack</font><font color="#CCCCCC"> well what</font>

619
00:24:46,190 --> 00:24:51,020
can<font color="#CCCCCC"> we do about that</font><font color="#E5E5E5"> luckily there's</font>

620
00:24:48,470 --> 00:24:53,620
this system called Haven<font color="#E5E5E5"> that pretty</font>

621
00:24:51,020 --> 00:24:56,780
<font color="#E5E5E5">much puts an entire operating system</font>

622
00:24:53,620 --> 00:24:58,879
<font color="#E5E5E5">inside of the Enclave and it uses what</font>

623
00:24:56,780 --> 00:25:01,220
it calls a shield module to shield<font color="#E5E5E5"> the</font>

624
00:24:58,880 --> 00:25:04,880
application from a malicious<font color="#E5E5E5"> operating</font>

625
00:25:01,220 --> 00:25:07,670
system by making<font color="#CCCCCC"> sure</font><font color="#E5E5E5"> that the code</font>

626
00:25:04,880 --> 00:25:11,420
<font color="#E5E5E5">inside there is trusted so there's a</font>

627
00:25:07,670 --> 00:25:13,370
<font color="#E5E5E5">layer translation layer that goes on</font><font color="#CCCCCC"> and</font>

628
00:25:11,420 --> 00:25:15,530
again<font color="#E5E5E5"> you have</font><font color="#CCCCCC"> this</font><font color="#E5E5E5"> performance hit but</font>

629
00:25:13,370 --> 00:25:19,040
it is possible<font color="#CCCCCC"> to not</font><font color="#E5E5E5"> have to rely</font><font color="#CCCCCC"> on</font>

630
00:25:15,530 --> 00:25:20,510
operating<font color="#E5E5E5"> system functions</font><font color="#CCCCCC"> which is like</font>

631
00:25:19,040 --> 00:25:22,159
I mentioned<font color="#CCCCCC"> before</font><font color="#E5E5E5"> a pretty tricky thing</font>

632
00:25:20,510 --> 00:25:24,590
<font color="#CCCCCC">to actually implement</font><font color="#E5E5E5"> but it's been done</font>

633
00:25:22,160 --> 00:25:26,690
<font color="#E5E5E5">and a generic application that can you</font>

634
00:25:24,590 --> 00:25:28,580
that conforms to a particular API<font color="#E5E5E5"> is</font>

635
00:25:26,690 --> 00:25:30,260
able to be put in there at this<font color="#E5E5E5"> point</font>

636
00:25:28,580 --> 00:25:32,300
<font color="#CCCCCC">which</font><font color="#E5E5E5"> is pretty cool</font><font color="#CCCCCC"> it</font><font color="#E5E5E5"> means you don't</font>

637
00:25:30,260 --> 00:25:34,310
have<font color="#E5E5E5"> to</font><font color="#CCCCCC"> build a special purpose</font><font color="#E5E5E5"> program</font>

638
00:25:32,300 --> 00:25:35,840
just<font color="#E5E5E5"> to</font><font color="#CCCCCC"> be able</font><font color="#E5E5E5"> to put the most</font>

639
00:25:34,310 --> 00:25:37,010
important<font color="#CCCCCC"> information in an</font><font color="#E5E5E5"> enclave</font>

640
00:25:35,840 --> 00:25:41,360
which is what you would otherwise<font color="#E5E5E5"> have</font>

641
00:25:37,010 --> 00:25:43,370
<font color="#E5E5E5">to do and there's actually a bit</font><font color="#CCCCCC"> of a</font>

642
00:25:41,360 --> 00:25:45,229
trend<font color="#E5E5E5"> of just sticking things inside sjx</font>

643
00:25:43,370 --> 00:25:46,340
and figuring out<font color="#E5E5E5"> how</font><font color="#CCCCCC"> to do that</font><font color="#E5E5E5"> so if</font>

644
00:25:45,230 --> 00:25:48,500
you're looking<font color="#CCCCCC"> for a particular thing</font>

645
00:25:46,340 --> 00:25:50,090
<font color="#CCCCCC">that you want to get</font><font color="#E5E5E5"> going</font><font color="#CCCCCC"> with and</font>

646
00:25:48,500 --> 00:25:52,310
stick inside there people<font color="#E5E5E5"> have put</font>

647
00:25:50,090 --> 00:25:54,439
docker containers<font color="#CCCCCC"> in</font><font color="#E5E5E5"> test</font><font color="#CCCCCC"> GX they've put</font>

648
00:25:52,310 --> 00:25:56,000
<font color="#CCCCCC">hadoop into there</font><font color="#E5E5E5"> there's even a start</font>

649
00:25:54,440 --> 00:25:59,480
<font color="#E5E5E5">up now that's putting key management</font>

650
00:25:56,000 --> 00:26:01,010
<font color="#E5E5E5">into</font><font color="#CCCCCC"> SGX</font><font color="#E5E5E5"> which may be a bit of a</font>

651
00:25:59,480 --> 00:26:01,880
marketing<font color="#CCCCCC"> thing but you could put</font>

652
00:26:01,010 --> 00:26:05,180
whatever you<font color="#E5E5E5"> want</font><font color="#CCCCCC"> in</font><font color="#E5E5E5"> there these days</font>

653
00:26:01,880 --> 00:26:07,280
<font color="#E5E5E5">which</font><font color="#CCCCCC"> is great so can</font><font color="#E5E5E5"> you just do that</font>

654
00:26:05,180 --> 00:26:10,420
<font color="#CCCCCC">though</font><font color="#E5E5E5"> let's get into a bit</font><font color="#CCCCCC"> more complex</font>

655
00:26:07,280 --> 00:26:13,010
attacks<font color="#CCCCCC"> access pattern attacks are</font>

656
00:26:10,420 --> 00:26:17,690
possibly<font color="#E5E5E5"> one of</font><font color="#CCCCCC"> the major drawbacks</font><font color="#E5E5E5"> of</font>

657
00:26:13,010 --> 00:26:20,180
current implementations of<font color="#CCCCCC"> SGX and as it</font>

658
00:26:17,690 --> 00:26:22,760
turns<font color="#E5E5E5"> out the implementers of</font><font color="#CCCCCC"> SGX</font><font color="#E5E5E5"> link</font>

659
00:26:20,180 --> 00:26:25,430
that access pattern attacks are outside

660
00:26:22,760 --> 00:26:27,410
of their threat model but as we'll see

661
00:26:25,430 --> 00:26:29,560
it's a side<font color="#E5E5E5"> channel that is seriously</font>

662
00:26:27,410 --> 00:26:32,960
important so what this<font color="#CCCCCC"> means</font><font color="#E5E5E5"> is that</font>

663
00:26:29,560 --> 00:26:35,030
when<font color="#CCCCCC"> you need to write things</font><font color="#E5E5E5"> in and out</font>

664
00:26:32,960 --> 00:26:36,920
of memory<font color="#E5E5E5"> you can end up seeing which</font>

665
00:26:35,030 --> 00:26:38,660
pages<font color="#E5E5E5"> of memories are accessed more or</font>

666
00:26:36,920 --> 00:26:40,490
less<font color="#E5E5E5"> and figure out information about</font>

667
00:26:38,660 --> 00:26:41,300
<font color="#E5E5E5">the program that's running because</font><font color="#CCCCCC"> of</font>

668
00:26:40,490 --> 00:26:44,200
<font color="#E5E5E5">that</font>

669
00:26:41,300 --> 00:26:47,330
so for<font color="#E5E5E5"> example this is</font><font color="#CCCCCC"> a loveless image</font>

670
00:26:44,200 --> 00:26:49,940
<font color="#E5E5E5">just using access patterns you can</font>

671
00:26:47,330 --> 00:26:51,949
figure out some outlines of what<font color="#CCCCCC"> the</font>

672
00:26:49,940 --> 00:26:53,930
original<font color="#E5E5E5"> image was without actually</font>

673
00:26:51,950 --> 00:26:56,270
seeing<font color="#CCCCCC"> that the content of the data the</font>

674
00:26:53,930 --> 00:26:58,730
way<font color="#E5E5E5"> that this one works is that you have</font>

675
00:26:56,270 --> 00:27:00,800
a heavy computation<font color="#CCCCCC"> being done over the</font>

676
00:26:58,730 --> 00:27:03,440
image and there's some performance

677
00:27:00,800 --> 00:27:05,870
optimizations<font color="#E5E5E5"> that for</font><font color="#CCCCCC"> example when a</font>

678
00:27:03,440 --> 00:27:08,330
particular pixel<font color="#E5E5E5"> has a lot of zeros</font>

679
00:27:05,870 --> 00:27:10,189
instead<font color="#CCCCCC"> of</font><font color="#E5E5E5"> actually</font><font color="#CCCCCC"> doing</font><font color="#E5E5E5"> the</font>

680
00:27:08,330 --> 00:27:11,720
<font color="#CCCCCC">computation you can maybe shortcut a bit</font>

681
00:27:10,190 --> 00:27:13,220
but<font color="#E5E5E5"> this leads to different</font><font color="#CCCCCC"> numbers of</font>

682
00:27:11,720 --> 00:27:15,020
<font color="#E5E5E5">page faults because you're doing more or</font>

683
00:27:13,220 --> 00:27:16,970
less<font color="#E5E5E5"> computation</font><font color="#CCCCCC"> and when you look</font><font color="#E5E5E5"> at</font>

684
00:27:15,020 --> 00:27:18,530
this<font color="#E5E5E5"> over time you can extract things</font>

685
00:27:16,970 --> 00:27:21,770
like this but<font color="#E5E5E5"> it's</font><font color="#CCCCCC"> not just</font><font color="#E5E5E5"> for pictures</font>

686
00:27:18,530 --> 00:27:24,440
<font color="#E5E5E5">a yes is known a popular</font><font color="#CCCCCC"> implementation</font>

687
00:27:21,770 --> 00:27:27,080
does of AES does a similar<font color="#E5E5E5"> thing it uses</font>

688
00:27:24,440 --> 00:27:28,910
a lookup table<font color="#CCCCCC"> and then based on what</font>

689
00:27:27,080 --> 00:27:31,399
indices you're looking at based which is

690
00:27:28,910 --> 00:27:33,830
<font color="#E5E5E5">based on your key</font><font color="#CCCCCC"> you can use access</font>

691
00:27:31,400 --> 00:27:35,510
patterns to recover the secret<font color="#E5E5E5"> key so if</font>

692
00:27:33,830 --> 00:27:37,250
you're going<font color="#E5E5E5"> to be using AES inside of</font>

693
00:27:35,510 --> 00:27:39,230
something<font color="#CCCCCC"> like SGX</font><font color="#E5E5E5"> you would need to</font>

694
00:27:37,250 --> 00:27:40,880
<font color="#E5E5E5">make sure that all</font><font color="#CCCCCC"> of your computations</font>

695
00:27:39,230 --> 00:27:44,180
don't have<font color="#E5E5E5"> these bugs but it's a pretty</font>

696
00:27:40,880 --> 00:27:45,950
insidious form of bug<font color="#E5E5E5"> so it's kind of</font>

697
00:27:44,180 --> 00:27:47,300
hard<font color="#CCCCCC"> to</font><font color="#E5E5E5"> do</font><font color="#CCCCCC"> that as well</font><font color="#E5E5E5"> but what can we</font>

698
00:27:45,950 --> 00:27:50,300
do about that<font color="#E5E5E5"> well there's a couple</font>

699
00:27:47,300 --> 00:27:53,450
<font color="#E5E5E5">options here one of them is something</font>

700
00:27:50,300 --> 00:27:55,370
called<font color="#CCCCCC"> Ghost Rider which the Oh RAM that</font>

701
00:27:53,450 --> 00:27:58,610
I mentioned before<font color="#E5E5E5"> they pretty much</font>

702
00:27:55,370 --> 00:28:01,219
stick that in<font color="#CCCCCC"> into SGX so you get both</font>

703
00:27:58,610 --> 00:28:05,689
the<font color="#E5E5E5"> access pattern protection of a ram</font>

704
00:28:01,220 --> 00:28:07,250
<font color="#E5E5E5">with the</font><font color="#CCCCCC"> sjx Hardware protection and</font>

705
00:28:05,690 --> 00:28:10,340
this<font color="#CCCCCC"> is pretty cool it used pro a</font>

706
00:28:07,250 --> 00:28:12,830
programming language theory to figure

707
00:28:10,340 --> 00:28:15,379
out what<font color="#E5E5E5"> pieces need</font><font color="#CCCCCC"> to be in the ORM</font>

708
00:28:12,830 --> 00:28:16,850
<font color="#CCCCCC">verses in</font><font color="#E5E5E5"> the Enclave at all that's</font>

709
00:28:15,380 --> 00:28:18,770
encrypted<font color="#E5E5E5"> versus what pieces can be</font>

710
00:28:16,850 --> 00:28:20,510
outside and does<font color="#E5E5E5"> this analysis</font>

711
00:28:18,770 --> 00:28:25,100
automatically because otherwise you<font color="#E5E5E5"> have</font>

712
00:28:20,510 --> 00:28:27,950
giant performance<font color="#E5E5E5"> hits and another</font>

713
00:28:25,100 --> 00:28:29,929
system<font color="#E5E5E5"> that's proposed it's not a is</font>

714
00:28:27,950 --> 00:28:31,580
called sanctum which isn't<font color="#E5E5E5"> actually</font><font color="#CCCCCC"> SGX</font>

715
00:28:29,930 --> 00:28:34,460
<font color="#CCCCCC">so the problem</font><font color="#E5E5E5"> with</font><font color="#CCCCCC"> SGX</font>

716
00:28:31,580 --> 00:28:36,379
is that the cache<font color="#CCCCCC"> is</font><font color="#E5E5E5"> shared across</font>

717
00:28:34,460 --> 00:28:38,960
different applications<font color="#CCCCCC"> there's no</font>

718
00:28:36,380 --> 00:28:40,880
specific cache for<font color="#CCCCCC"> a particular</font>

719
00:28:38,960 --> 00:28:43,910
application<font color="#E5E5E5"> meaning</font><font color="#CCCCCC"> that if you're an</font>

720
00:28:40,880 --> 00:28:46,880
application on the same<font color="#E5E5E5"> system as</font><font color="#CCCCCC"> an STX</font>

721
00:28:43,910 --> 00:28:49,190
<font color="#CCCCCC">enclave by using</font><font color="#E5E5E5"> your</font><font color="#CCCCCC"> own access to</font><font color="#E5E5E5"> the</font>

722
00:28:46,880 --> 00:28:52,040
cache<font color="#CCCCCC"> you can figure out what's being</font>

723
00:28:49,190 --> 00:28:53,840
evicted when<font color="#E5E5E5"> and by knowing that you'll</font>

724
00:28:52,040 --> 00:28:54,470
get information<font color="#E5E5E5"> about what the</font><font color="#CCCCCC"> SGX</font>

725
00:28:53,840 --> 00:28:56,750
application

726
00:28:54,470 --> 00:28:59,360
doing so what<font color="#CCCCCC"> Sanctum does is it sticks</font>

727
00:28:56,750 --> 00:29:00,350
it<font color="#CCCCCC"> into different</font><font color="#E5E5E5"> but caches and then</font>

728
00:28:59,360 --> 00:29:03,649
you don't have<font color="#E5E5E5"> to worry about that at</font>

729
00:29:00,350 --> 00:29:04,850
<font color="#E5E5E5">all which is</font><font color="#CCCCCC"> nice</font><font color="#E5E5E5"> but it doesn't look at</font>

730
00:29:03,650 --> 00:29:07,370
this point<font color="#E5E5E5"> like that's something that's</font>

731
00:29:04,850 --> 00:29:09,110
going to<font color="#E5E5E5"> be implemented</font><font color="#CCCCCC"> in the official</font>

732
00:29:07,370 --> 00:29:11,209
<font color="#CCCCCC">SGX</font><font color="#E5E5E5"> one but if someone wants to go</font>

733
00:29:09,110 --> 00:29:13,309
manufacture a whole<font color="#E5E5E5"> bunch of chips it's</font>

734
00:29:11,210 --> 00:29:15,919
cool<font color="#E5E5E5"> layout that might have certainly</font><font color="#CCCCCC"> as</font>

735
00:29:13,309 --> 00:29:18,470
<font color="#E5E5E5">promised</font><font color="#CCCCCC"> and</font><font color="#E5E5E5"> a fun one that's</font>

736
00:29:15,919 --> 00:29:22,309
specifically<font color="#CCCCCC"> for</font><font color="#E5E5E5"> Intel chips is called</font>

737
00:29:18,470 --> 00:29:24,320
<font color="#E5E5E5">TS GX</font><font color="#CCCCCC"> which hides the information from</font>

738
00:29:22,309 --> 00:29:26,149
the OS itself<font color="#E5E5E5"> so you</font><font color="#CCCCCC"> can have a cache</font>

739
00:29:24,320 --> 00:29:27,889
attacked by<font color="#E5E5E5"> another application</font><font color="#CCCCCC"> but if</font>

740
00:29:26,150 --> 00:29:31,370
<font color="#E5E5E5">you're the OS you have a bit more power</font>

741
00:29:27,890 --> 00:29:32,780
<font color="#E5E5E5">in that you can try to cause page faults</font>

742
00:29:31,370 --> 00:29:34,908
yourself and you can look at the page

743
00:29:32,780 --> 00:29:37,370
faults that<font color="#E5E5E5"> are happening what</font><font color="#CCCCCC"> T sjx</font>

744
00:29:34,909 --> 00:29:39,740
does is it uses<font color="#E5E5E5"> another set of</font>

745
00:29:37,370 --> 00:29:41,870
extensions<font color="#E5E5E5"> called transactional</font>

746
00:29:39,740 --> 00:29:44,179
synchronization extensions to hide this

747
00:29:41,870 --> 00:29:46,908
<font color="#CCCCCC">information from the OS itself</font>

748
00:29:44,179 --> 00:29:49,640
it pretty<font color="#CCCCCC"> much</font><font color="#E5E5E5"> throws all sort of</font>

749
00:29:46,909 --> 00:29:51,049
exceptions into<font color="#CCCCCC"> a single page and then</font>

750
00:29:49,640 --> 00:29:53,840
the OS can't tell what's going<font color="#E5E5E5"> on</font><font color="#CCCCCC"> with</font>

751
00:29:51,049 --> 00:29:56,780
<font color="#CCCCCC">the</font><font color="#E5E5E5"> different ones it bypasses the OS is</font>

752
00:29:53,840 --> 00:29:59,750
own way<font color="#CCCCCC"> of handling it</font><font color="#E5E5E5"> that's to hide</font>

753
00:29:56,780 --> 00:30:03,889
that while still<font color="#E5E5E5"> being in the regular</font>

754
00:29:59,750 --> 00:30:04,909
system<font color="#CCCCCC"> okay so there's different attacks</font>

755
00:30:03,890 --> 00:30:07,669
that can go<font color="#E5E5E5"> on but there's also</font>

756
00:30:04,909 --> 00:30:09,500
proposals there to mitigate the

757
00:30:07,669 --> 00:30:11,990
different attacks<font color="#E5E5E5"> which is pretty</font>

758
00:30:09,500 --> 00:30:15,500
<font color="#E5E5E5">promising so far there and another thing</font>

759
00:30:11,990 --> 00:30:17,090
is that the this<font color="#E5E5E5"> prom comes from them</font>

760
00:30:15,500 --> 00:30:19,250
being small so you might need<font color="#E5E5E5"> to have</font>

761
00:30:17,090 --> 00:30:21,439
multiple enclaves talking to each other

762
00:30:19,250 --> 00:30:23,360
<font color="#E5E5E5">and their communication patterns can</font>

763
00:30:21,440 --> 00:30:25,309
also reveal<font color="#CCCCCC"> information so you need to</font>

764
00:30:23,360 --> 00:30:28,969
be careful<font color="#CCCCCC"> about that as well there was</font>

765
00:30:25,309 --> 00:30:30,678
<font color="#E5E5E5">a cool system called opaque</font><font color="#CCCCCC"> that</font><font color="#E5E5E5"> it was</font>

766
00:30:28,970 --> 00:30:32,030
using MapReduce<font color="#E5E5E5"> clusters and looking at</font>

767
00:30:30,679 --> 00:30:34,220
the communications between<font color="#E5E5E5"> those and</font>

768
00:30:32,030 --> 00:30:36,289
seeing what data that leaks<font color="#E5E5E5"> and found a</font>

769
00:30:34,220 --> 00:30:42,049
way to hide<font color="#CCCCCC"> that as well</font><font color="#E5E5E5"> given the</font>

770
00:30:36,289 --> 00:30:44,090
<font color="#CCCCCC">particular size constraints</font><font color="#E5E5E5"> okay so we</font>

771
00:30:42,049 --> 00:30:46,429
have all<font color="#CCCCCC"> of these problems</font><font color="#E5E5E5"> that might</font>

772
00:30:44,090 --> 00:30:48,860
<font color="#CCCCCC">come up</font><font color="#E5E5E5"> but it seems like there's still</font>

773
00:30:46,429 --> 00:30:51,860
things<font color="#CCCCCC"> that could potentially</font><font color="#E5E5E5"> be done to</font>

774
00:30:48,860 --> 00:30:55,309
fix them<font color="#CCCCCC"> what I haven't</font><font color="#E5E5E5"> said is that</font>

775
00:30:51,860 --> 00:30:57,139
there's been<font color="#CCCCCC"> any theoretical proof that</font>

776
00:30:55,309 --> 00:30:59,450
it is<font color="#E5E5E5"> literally impossible to ever</font>

777
00:30:57,140 --> 00:31:01,130
protect anything<font color="#E5E5E5"> using Hardware unlike</font>

778
00:30:59,450 --> 00:31:02,750
where we are with cryptography<font color="#CCCCCC"> this is</font>

779
00:31:01,130 --> 00:31:04,490
still a very active<font color="#CCCCCC"> area most</font><font color="#E5E5E5"> of these</font>

780
00:31:02,750 --> 00:31:07,100
papers<font color="#CCCCCC"> that have</font><font color="#E5E5E5"> mentioned have come out</font>

781
00:31:04,490 --> 00:31:08,220
in<font color="#E5E5E5"> the past one or two years</font><font color="#CCCCCC"> so there's</font>

782
00:31:07,100 --> 00:31:10,080
<font color="#E5E5E5">still a lot of potential</font>

783
00:31:08,220 --> 00:31:11,940
but of<font color="#CCCCCC"> course there's a lot of potential</font>

784
00:31:10,080 --> 00:31:14,610
<font color="#CCCCCC">to</font><font color="#E5E5E5"> break things we're very</font><font color="#CCCCCC"> much</font><font color="#E5E5E5"> still</font><font color="#CCCCCC"> in</font>

785
00:31:11,940 --> 00:31:17,820
that cat-and-mouse game of<font color="#CCCCCC"> attacker</font>

786
00:31:14,610 --> 00:31:19,918
defender at the hardware stage but still

787
00:31:17,820 --> 00:31:22,139
pretty promising<font color="#CCCCCC"> oh and then just as a</font>

788
00:31:19,919 --> 00:31:24,929
reminder<font color="#CCCCCC"> a security is imperfect this is</font>

789
00:31:22,140 --> 00:31:26,429
not how<font color="#CCCCCC"> to just throw slap one of these</font>

790
00:31:24,929 --> 00:31:28,409
<font color="#CCCCCC">onto your</font><font color="#E5E5E5"> system and then everything is</font>

791
00:31:26,429 --> 00:31:31,100
<font color="#CCCCCC">going to</font><font color="#E5E5E5"> be great obviously</font><font color="#CCCCCC"> local</font>

792
00:31:28,409 --> 00:31:33,809
attackers if they are on your machine

793
00:31:31,100 --> 00:31:36,719
they<font color="#E5E5E5"> can see the data that's on your</font>

794
00:31:33,809 --> 00:31:39,658
<font color="#E5E5E5">site get your secret</font><font color="#CCCCCC"> key</font><font color="#E5E5E5"> as well</font><font color="#CCCCCC"> and</font>

795
00:31:36,720 --> 00:31:43,020
then authentication classic if they can

796
00:31:39,659 --> 00:31:44,580
<font color="#E5E5E5">just pretend to be</font><font color="#CCCCCC"> you</font><font color="#E5E5E5"> then it's you're</font>

797
00:31:43,020 --> 00:31:45,539
out of luck<font color="#CCCCCC"> phishing will get you every</font>

798
00:31:44,580 --> 00:31:48,270
time

799
00:31:45,539 --> 00:31:50,309
and then<font color="#E5E5E5"> hardware attackers</font><font color="#CCCCCC"> if you have</font>

800
00:31:48,270 --> 00:31:53,820
physical<font color="#CCCCCC"> access to the</font><font color="#E5E5E5"> hardware and</font>

801
00:31:50,309 --> 00:31:56,610
you've got an electron microscope<font color="#CCCCCC"> you're</font>

802
00:31:53,820 --> 00:31:58,678
you're<font color="#E5E5E5"> not in a great place</font><font color="#CCCCCC"> now it's not</font>

803
00:31:56,610 --> 00:32:00,299
quite<font color="#E5E5E5"> as bad as</font><font color="#CCCCCC"> that like they the</font>

804
00:31:58,679 --> 00:32:02,070
people<font color="#E5E5E5"> who design these</font><font color="#CCCCCC"> things do</font><font color="#E5E5E5"> take</font>

805
00:32:00,299 --> 00:32:03,179
this into<font color="#CCCCCC"> account</font><font color="#E5E5E5"> and there are</font>

806
00:32:02,070 --> 00:32:06,330
protections<font color="#E5E5E5"> that are put into place</font>

807
00:32:03,179 --> 00:32:08,309
<font color="#E5E5E5">which pretty much looks like hiding</font>

808
00:32:06,330 --> 00:32:10,020
<font color="#E5E5E5">things bio you need to encrypt this here</font>

809
00:32:08,309 --> 00:32:11,820
and this is obfuscated<font color="#CCCCCC"> by doing it here</font>

810
00:32:10,020 --> 00:32:13,230
<font color="#E5E5E5">but all the information</font><font color="#CCCCCC"> is literally</font>

811
00:32:11,820 --> 00:32:15,059
there it needs<font color="#CCCCCC"> it to</font><font color="#E5E5E5"> be able to do the</font>

812
00:32:13,230 --> 00:32:18,090
computation<font color="#CCCCCC"> you could make it so that</font>

813
00:32:15,059 --> 00:32:21,090
reading the<font color="#CCCCCC"> information</font><font color="#E5E5E5"> makes it so that</font>

814
00:32:18,090 --> 00:32:22,470
<font color="#E5E5E5">you can never use the</font><font color="#CCCCCC"> Machine again</font><font color="#E5E5E5"> but</font>

815
00:32:21,090 --> 00:32:24,539
if you're<font color="#CCCCCC"> willing to do</font><font color="#E5E5E5"> that the</font>

816
00:32:22,470 --> 00:32:26,309
information is still<font color="#CCCCCC"> literally there</font><font color="#E5E5E5"> so</font>

817
00:32:24,539 --> 00:32:30,990
depending<font color="#E5E5E5"> on your threat model</font><font color="#CCCCCC"> obviously</font>

818
00:32:26,309 --> 00:32:32,250
it's never<font color="#E5E5E5"> going to be perfect</font><font color="#CCCCCC"> yeah the</font>

819
00:32:30,990 --> 00:32:34,650
other thing that we<font color="#E5E5E5"> don't know is that</font>

820
00:32:32,250 --> 00:32:36,990
there's<font color="#E5E5E5"> not a hardware backdoor the</font>

821
00:32:34,650 --> 00:32:39,690
specs for these<font color="#E5E5E5"> things aren't open so</font>

822
00:32:36,990 --> 00:32:42,360
you know people can analyze them<font color="#E5E5E5"> get a</font>

823
00:32:39,690 --> 00:32:45,360
hold<font color="#E5E5E5"> of them</font><font color="#CCCCCC"> and try to reverse engineer</font>

824
00:32:42,360 --> 00:32:48,059
it<font color="#E5E5E5"> but we can't say yet for sure that we</font>

825
00:32:45,360 --> 00:32:49,678
know for absolute<font color="#E5E5E5"> fact that there's no</font>

826
00:32:48,059 --> 00:32:53,070
<font color="#E5E5E5">hardware backdoor where it's just</font>

827
00:32:49,679 --> 00:32:54,630
<font color="#CCCCCC">shipping off everything</font><font color="#E5E5E5"> to the NSA so we</font>

828
00:32:53,070 --> 00:32:56,908
don't know that<font color="#CCCCCC"> it'd be nice to know</font>

829
00:32:54,630 --> 00:33:01,710
that but it's<font color="#E5E5E5"> probably not gonna happen</font>

830
00:32:56,909 --> 00:33:04,350
<font color="#CCCCCC">okay</font><font color="#E5E5E5"> conclusions what do we have so</font>

831
00:33:01,710 --> 00:33:05,909
pretty<font color="#E5E5E5"> much if they from the crypto side</font>

832
00:33:04,350 --> 00:33:08,370
of things if you're going<font color="#CCCCCC"> to</font><font color="#E5E5E5"> allow any</font>

833
00:33:05,909 --> 00:33:09,870
sort of leakage at all<font color="#E5E5E5"> it usually</font><font color="#CCCCCC"> is</font>

834
00:33:08,370 --> 00:33:12,270
<font color="#CCCCCC">just going to</font><font color="#E5E5E5"> end up reducing to the</font>

835
00:33:09,870 --> 00:33:13,770
stopping accidents which is<font color="#E5E5E5"> honestly in</font>

836
00:33:12,270 --> 00:33:16,080
and of itself a very<font color="#CCCCCC"> helpful thing</font>

837
00:33:13,770 --> 00:33:18,120
because then you can track the accesses

838
00:33:16,080 --> 00:33:19,730
and<font color="#E5E5E5"> stops things like</font><font color="#CCCCCC"> loveSac where</font>

839
00:33:18,120 --> 00:33:22,020
people are looking<font color="#CCCCCC"> at their partners</font>

840
00:33:19,730 --> 00:33:23,520
<font color="#CCCCCC">things</font><font color="#E5E5E5"> where at least you can tell</font>

841
00:33:22,020 --> 00:33:26,670
afterwards that they've done something

842
00:33:23,520 --> 00:33:27,900
wrong<font color="#CCCCCC"> it</font><font color="#E5E5E5"> are great to</font><font color="#CCCCCC"> have in place</font><font color="#E5E5E5"> but</font>

843
00:33:26,670 --> 00:33:29,580
if you're looking to completely<font color="#E5E5E5"> protect</font>

844
00:33:27,900 --> 00:33:31,710
<font color="#CCCCCC">the information you're not</font><font color="#E5E5E5"> actually in</font>

845
00:33:29,580 --> 00:33:34,800
<font color="#CCCCCC">effect over time going</font><font color="#E5E5E5"> to get much</font>

846
00:33:31,710 --> 00:33:37,860
<font color="#CCCCCC">better than tokenization</font><font color="#E5E5E5"> no leakage</font>

847
00:33:34,800 --> 00:33:40,080
crypto is still impractical but maybe at

848
00:33:37,860 --> 00:33:41,669
the<font color="#E5E5E5"> next one of these in four years of</font>

849
00:33:40,080 --> 00:33:44,850
<font color="#E5E5E5">something different to say about that</font>

850
00:33:41,670 --> 00:33:47,490
<font color="#CCCCCC">and hardware has potential it's not</font>

851
00:33:44,850 --> 00:33:49,050
there yet<font color="#CCCCCC"> it's</font><font color="#E5E5E5"> exciting</font><font color="#CCCCCC"> we should go</font>

852
00:33:47,490 --> 00:33:51,840
find<font color="#E5E5E5"> out</font><font color="#CCCCCC"> a whole lot more about</font><font color="#E5E5E5"> it keep</font>

853
00:33:49,050 --> 00:33:55,500
<font color="#CCCCCC">attacking it but it's not completely</font>

854
00:33:51,840 --> 00:33:57,389
discounted<font color="#E5E5E5"> and out of the way yet</font><font color="#CCCCCC"> and as</font>

855
00:33:55,500 --> 00:33:59,310
a<font color="#E5E5E5"> reminder if you like this talk the</font>

856
00:33:57,390 --> 00:34:01,500
Electronic Frontier<font color="#CCCCCC"> Foundation is a</font>

857
00:33:59,310 --> 00:34:04,050
non-profit<font color="#CCCCCC"> and I'm sure that many</font><font color="#E5E5E5"> of you</font>

858
00:34:01,500 --> 00:34:05,730
<font color="#E5E5E5">are members but if you're not</font><font color="#CCCCCC"> come talk</font>

859
00:34:04,050 --> 00:34:07,820
<font color="#CCCCCC">to me and we'll</font><font color="#E5E5E5"> figure something out and</font>

860
00:34:05,730 --> 00:34:12,840
thank you very<font color="#E5E5E5"> much for listening</font>

861
00:34:07,820 --> 00:34:12,840
[Applause]

862
00:34:16,600 --> 00:34:23,020
thank you<font color="#CCCCCC"> I think you did an amazing job</font>

863
00:34:20,980 --> 00:34:26,440
<font color="#E5E5E5">and we still have some time</font><font color="#CCCCCC"> for some Q&A</font>

864
00:34:23,020 --> 00:34:28,600
<font color="#CCCCCC">okay there are two mics so if you have a</font>

865
00:34:26,440 --> 00:34:30,550
question for<font color="#E5E5E5"> Erica please step to</font><font color="#CCCCCC"> the</font>

866
00:34:28,600 --> 00:34:32,860
<font color="#CCCCCC">mic</font><font color="#E5E5E5"> and ask your question there for the</font>

867
00:34:30,550 --> 00:34:37,390
sake of the recording<font color="#E5E5E5"> so if there are</font>

868
00:34:32,860 --> 00:34:44,590
any questions I'd be happy<font color="#CCCCCC"> to moderate</font>

869
00:34:37,389 --> 00:34:46,089
them for you hello<font color="#E5E5E5"> hello hi I</font>

870
00:34:44,590 --> 00:34:48,640
unfortunately missed the first a little

871
00:34:46,090 --> 00:34:50,770
<font color="#E5E5E5">bit closer please okay</font><font color="#CCCCCC"> I unfortunately</font>

872
00:34:48,639 --> 00:34:57,569
missed<font color="#E5E5E5"> the first</font><font color="#CCCCCC"> ten minutes</font><font color="#E5E5E5"> every talk</font>

873
00:34:50,770 --> 00:34:59,950
but my question is<font color="#E5E5E5"> if I want to what is</font>

874
00:34:57,570 --> 00:35:02,490
maybe there's not a whole solution<font color="#E5E5E5"> for</font>

875
00:34:59,950 --> 00:35:07,419
<font color="#E5E5E5">this yet but if I would like to prove</font>

876
00:35:02,490 --> 00:35:10,839
<font color="#E5E5E5">what I'm running on a server to a third</font>

877
00:35:07,420 --> 00:35:13,390
party<font color="#E5E5E5"> what is what parts are there and</font>

878
00:35:10,840 --> 00:35:16,540
what parts are<font color="#E5E5E5"> not there yes and when</font>

879
00:35:13,390 --> 00:35:18,279
will they be there<font color="#CCCCCC"> that's like if that</font>

880
00:35:16,540 --> 00:35:20,529
is the main<font color="#E5E5E5"> thing that</font><font color="#CCCCCC"> you want</font><font color="#E5E5E5"> to be</font>

881
00:35:18,280 --> 00:35:23,410
doing<font color="#CCCCCC"> right now</font><font color="#E5E5E5"> today you are</font><font color="#CCCCCC"> in luck</font>

882
00:35:20,530 --> 00:35:26,950
that they've got<font color="#E5E5E5"> that there um so okay</font>

883
00:35:23,410 --> 00:35:30,069
so<font color="#E5E5E5"> the way that</font><font color="#CCCCCC"> SGX works is that if you</font>

884
00:35:26,950 --> 00:35:31,899
are<font color="#E5E5E5"> running any code at</font><font color="#CCCCCC"> all</font><font color="#E5E5E5"> it needs to</font>

885
00:35:30,070 --> 00:35:35,170
be measured which means you take a hash

886
00:35:31,900 --> 00:35:37,690
of<font color="#CCCCCC"> the data and that</font><font color="#E5E5E5"> hash needs to come</font>

887
00:35:35,170 --> 00:35:39,280
<font color="#CCCCCC">from a signature chain of so there's</font>

888
00:35:37,690 --> 00:35:42,240
<font color="#E5E5E5">other modules that come with the system</font>

889
00:35:39,280 --> 00:35:46,060
<font color="#CCCCCC">built</font><font color="#E5E5E5"> in and one of those has a</font>

890
00:35:42,240 --> 00:35:48,669
connection<font color="#E5E5E5"> over to Intel and Intel has a</font>

891
00:35:46,060 --> 00:35:50,590
PKI that<font color="#E5E5E5"> they use to sign that chain</font><font color="#CCCCCC"> of</font>

892
00:35:48,670 --> 00:35:52,480
trust<font color="#E5E5E5"> to your machine and then</font><font color="#CCCCCC"> other</font>

893
00:35:50,590 --> 00:35:53,050
Intel machines also<font color="#E5E5E5"> have that same route</font>

894
00:35:52,480 --> 00:35:54,880
of trust

895
00:35:53,050 --> 00:35:56,110
so there's cross signing<font color="#E5E5E5"> that goes on in</font>

896
00:35:54,880 --> 00:35:58,840
communication between the<font color="#CCCCCC"> different</font>

897
00:35:56,110 --> 00:36:01,090
enclaves that talk to each<font color="#E5E5E5"> other that</font>

898
00:35:58,840 --> 00:36:03,460
there<font color="#E5E5E5"> are specific enclaves that are for</font>

899
00:36:01,090 --> 00:36:06,640
talking<font color="#E5E5E5"> from a server to your local</font>

900
00:36:03,460 --> 00:36:09,340
<font color="#E5E5E5">machine</font><font color="#CCCCCC"> to</font><font color="#E5E5E5"> send you that proof along so</font>

901
00:36:06,640 --> 00:36:10,960
just using<font color="#CCCCCC"> s3x at all</font>

902
00:36:09,340 --> 00:36:13,810
gives the proof<font color="#CCCCCC"> that you're running</font><font color="#E5E5E5"> a</font>

903
00:36:10,960 --> 00:36:15,730
<font color="#CCCCCC">particular piece of code</font><font color="#E5E5E5"> to show what</font>

904
00:36:13,810 --> 00:36:17,680
the code is doing<font color="#CCCCCC"> then you would</font>

905
00:36:15,730 --> 00:36:19,360
<font color="#CCCCCC">probably want to make the code</font>

906
00:36:17,680 --> 00:36:22,359
<font color="#CCCCCC">open-source and show it and show that</font>

907
00:36:19,360 --> 00:36:23,740
<font color="#E5E5E5">that code leads to that measurement but</font>

908
00:36:22,360 --> 00:36:25,750
once you have<font color="#E5E5E5"> that the rest of the steps</font>

909
00:36:23,740 --> 00:36:30,120
are<font color="#E5E5E5"> all in place for doing it automatic</font>

910
00:36:25,750 --> 00:36:30,120
for doing<font color="#E5E5E5"> that proof automatically</font><font color="#CCCCCC"> I do</font>

911
00:36:32,390 --> 00:36:37,350
yes sure go ahead<font color="#CCCCCC"> I'm sorry a little bit</font>

912
00:36:35,190 --> 00:36:39,540
closer to<font color="#E5E5E5"> the mine probably</font><font color="#CCCCCC"> Thanks my</font>

913
00:36:37,350 --> 00:36:42,240
question is what<font color="#CCCCCC"> are your insights with</font>

914
00:36:39,540 --> 00:36:45,359
<font color="#E5E5E5">respect to the use</font><font color="#CCCCCC"> of ratio encoding</font>

915
00:36:42,240 --> 00:36:46,770
with multiple cloud storage providers to

916
00:36:45,359 --> 00:36:48,390
<font color="#E5E5E5">mate sorry sorry I'm having</font><font color="#CCCCCC"> trouble</font>

917
00:36:46,770 --> 00:36:51,270
hearing<font color="#E5E5E5"> you can you maybe get closer to</font>

918
00:36:48,390 --> 00:36:53,670
the mic yes<font color="#E5E5E5"> I was wondering what your</font>

919
00:36:51,270 --> 00:36:56,460
insights are with respect<font color="#E5E5E5"> to</font><font color="#CCCCCC"> the use of</font>

920
00:36:53,670 --> 00:36:59,220
<font color="#E5E5E5">ratio encoding and multiple cloud</font>

921
00:36:56,460 --> 00:37:02,790
storage providers<font color="#E5E5E5"> to mitigate the</font>

922
00:36:59,220 --> 00:37:05,700
problems with leakage<font color="#E5E5E5"> sorry</font><font color="#CCCCCC"> what type of</font>

923
00:37:02,790 --> 00:37:08,910
encoding<font color="#CCCCCC"> oh right erase</font><font color="#E5E5E5"> erase your</font>

924
00:37:05,700 --> 00:37:12,359
<font color="#E5E5E5">encoding type a type of krypton where</font>

925
00:37:08,910 --> 00:37:14,700
rates<font color="#E5E5E5"> basically they use</font><font color="#CCCCCC"> different</font><font color="#E5E5E5"> cloud</font>

926
00:37:12,359 --> 00:37:17,250
<font color="#E5E5E5">storage providers to store different</font>

927
00:37:14,700 --> 00:37:21,629
<font color="#E5E5E5">encrypted parts of your data in the</font>

928
00:37:17,250 --> 00:37:23,609
rates like<font color="#CCCCCC"> manner</font><font color="#E5E5E5"> okay</font><font color="#CCCCCC"> so if I'm hearing</font>

929
00:37:21,630 --> 00:37:25,650
<font color="#E5E5E5">you correctly you break up the data</font><font color="#CCCCCC"> and</font>

930
00:37:23,609 --> 00:37:26,730
use different<font color="#CCCCCC"> passwords to store</font>

931
00:37:25,650 --> 00:37:33,570
different<font color="#E5E5E5"> parts of it in</font><font color="#CCCCCC"> different</font>

932
00:37:26,730 --> 00:37:36,750
<font color="#E5E5E5">places basically okay</font><font color="#CCCCCC"> that's a slightly</font>

933
00:37:33,570 --> 00:37:38,970
separate problem<font color="#CCCCCC"> you would if you don't</font>

934
00:37:36,750 --> 00:37:40,350
want to do computations on top of it

935
00:37:38,970 --> 00:37:41,759
<font color="#CCCCCC">like if you ever</font><font color="#E5E5E5"> want</font><font color="#CCCCCC"> to do any</font>

936
00:37:40,350 --> 00:37:43,980
<font color="#CCCCCC">computation on top of it</font>

937
00:37:41,760 --> 00:37:45,600
you still<font color="#E5E5E5"> have to be able to do that so</font>

938
00:37:43,980 --> 00:37:48,840
<font color="#E5E5E5">you would need that in conjunction with</font>

939
00:37:45,600 --> 00:37:50,549
<font color="#E5E5E5">one of the methods that I mentioned you</font>

940
00:37:48,840 --> 00:37:53,040
<font color="#E5E5E5">don't you don't think it mitigates the</font>

941
00:37:50,550 --> 00:37:56,310
leakage problem because you defied the

942
00:37:53,040 --> 00:37:57,450
<font color="#E5E5E5">request</font><font color="#CCCCCC"> to different parties oh you're</font>

943
00:37:56,310 --> 00:37:59,730
talking<font color="#E5E5E5"> about having like actual</font>

944
00:37:57,450 --> 00:38:02,310
different parties<font color="#E5E5E5"> do the things oh yeah</font>

945
00:37:59,730 --> 00:38:04,770
so if<font color="#E5E5E5"> you allow like either mutually</font>

946
00:38:02,310 --> 00:38:06,240
distrusting third parties then you can

947
00:38:04,770 --> 00:38:08,940
do a whole<font color="#E5E5E5"> class of different things</font>

948
00:38:06,240 --> 00:38:10,529
<font color="#CCCCCC">there</font><font color="#E5E5E5"> just breaking it up and having</font>

949
00:38:08,940 --> 00:38:12,720
<font color="#E5E5E5">different</font><font color="#CCCCCC"> encryptions on each of them is</font>

950
00:38:10,530 --> 00:38:14,760
maybe like not even<font color="#E5E5E5"> the easiest at that</font>

951
00:38:12,720 --> 00:38:16,529
point like<font color="#E5E5E5"> if you allow mutually</font>

952
00:38:14,760 --> 00:38:18,600
distrusting third parties<font color="#E5E5E5"> you can</font><font color="#CCCCCC"> have</font>

953
00:38:16,530 --> 00:38:21,390
them do<font color="#CCCCCC"> different sorts of computation</font>

954
00:38:18,600 --> 00:38:24,299
which gets slightly<font color="#E5E5E5"> better results but I</font>

955
00:38:21,390 --> 00:38:26,129
you know<font color="#CCCCCC"> I don't know as much about that</font>

956
00:38:24,300 --> 00:38:29,430
because<font color="#E5E5E5"> I think it's not the most</font>

957
00:38:26,130 --> 00:38:32,550
practical<font color="#E5E5E5"> for large-scale paradigm</font>

958
00:38:29,430 --> 00:38:34,410
shifts I think it's<font color="#E5E5E5"> then you have to</font>

959
00:38:32,550 --> 00:38:38,150
solve<font color="#E5E5E5"> political problems which are</font>

960
00:38:34,410 --> 00:38:43,040
harder than math problems

961
00:38:38,150 --> 00:38:43,040
<font color="#CCCCCC">that's roughly my insight there</font>

962
00:38:44,380 --> 00:38:51,109
any more questions<font color="#E5E5E5"> then I have one</font><font color="#CCCCCC"> last</font>

963
00:38:48,470 --> 00:38:53,000
question for<font color="#CCCCCC"> you if you</font><font color="#E5E5E5"> don't mind</font><font color="#CCCCCC"> will</font>

964
00:38:51,109 --> 00:38:56,119
you<font color="#E5E5E5"> be staying longer at the camp for</font>

965
00:38:53,000 --> 00:38:58,160
<font color="#E5E5E5">now</font><font color="#CCCCCC"> uh yeah at least</font><font color="#E5E5E5"> for today if people</font>

966
00:38:56,119 --> 00:39:00,710
you have other questions weren't where

967
00:38:58,160 --> 00:39:02,690
can they find<font color="#E5E5E5"> you</font><font color="#CCCCCC"> I can I'll be around</font>

968
00:39:00,710 --> 00:39:04,220
<font color="#E5E5E5">here</font><font color="#CCCCCC"> for</font><font color="#E5E5E5"> about the next hour and then</font>

969
00:39:02,690 --> 00:39:07,279
<font color="#E5E5E5">after that I'm over at the</font><font color="#CCCCCC"> exploding</font>

970
00:39:04,220 --> 00:39:09,859
tent<font color="#CCCCCC"> okay thank</font><font color="#E5E5E5"> you so much I think you</font>

971
00:39:07,279 --> 00:39:11,120
did an amazing<font color="#E5E5E5"> job</font><font color="#CCCCCC"> thank you thank you</font>

972
00:39:09,859 --> 00:39:13,360
<font color="#CCCCCC">giver</font><font color="#E5E5E5"> oh</font><font color="#CCCCCC"> my gosh</font>

973
00:39:11,120 --> 00:39:25,520
[Applause]

974
00:39:13,360 --> 00:39:25,520
[Music]

