1
00:00:00,000 --> 00:00:08,780
[Music]

2
00:00:14,780 --> 00:00:23,189
now we start with<font color="#CCCCCC"> the next</font><font color="#E5E5E5"> talk</font>

3
00:00:18,480 --> 00:00:29,580
therefore<font color="#E5E5E5"> I a warm welcome to Lucas</font><font color="#CCCCCC"> will</font>

4
00:00:23,189 --> 00:00:34,170
<font color="#CCCCCC">Chia he is development of a new protocol</font>

5
00:00:29,580 --> 00:00:39,449
<font color="#CCCCCC">and what</font><font color="#E5E5E5"> it's</font><font color="#CCCCCC"> about you will hear in the</font>

6
00:00:34,170 --> 00:00:47,579
next talk about<font color="#CCCCCC"> a fin</font><font color="#E5E5E5"> year project give</font>

7
00:00:39,450 --> 00:00:48,899
him a warm applause thank you everybody

8
00:00:47,579 --> 00:00:52,170
for<font color="#CCCCCC"> coming here</font>

9
00:00:48,899 --> 00:00:53,940
<font color="#CCCCCC">and I'm gonna talk about this project of</font>

10
00:00:52,170 --> 00:00:58,140
mine<font color="#E5E5E5"> that I started as</font><font color="#CCCCCC"> my master</font><font color="#E5E5E5"> thesis</font>

11
00:00:53,940 --> 00:01:00,449
and then kept working on<font color="#CCCCCC"> it's a new</font>

12
00:00:58,140 --> 00:01:02,250
transport encryption and well

13
00:01:00,449 --> 00:01:07,110
authentication protocol and the Ephesus

14
00:01:02,250 --> 00:01:09,540
is on the authentication<font color="#E5E5E5"> part the first</font>

15
00:01:07,110 --> 00:01:12,510
<font color="#E5E5E5">thing</font><font color="#CCCCCC"> that comes to mind is why do we</font>

16
00:01:09,540 --> 00:01:14,310
<font color="#E5E5E5">need another protocol we have</font><font color="#CCCCCC"> so many of</font>

17
00:01:12,510 --> 00:01:17,430
them<font color="#E5E5E5"> tell us works fine for everybody</font>

18
00:01:14,310 --> 00:01:21,210
<font color="#CCCCCC">and as everybody will tell you you</font><font color="#E5E5E5"> do</font>

19
00:01:17,430 --> 00:01:24,740
not roll out<font color="#E5E5E5"> your own crypto for</font><font color="#CCCCCC"> me it's</font>

20
00:01:21,210 --> 00:01:29,039
journey started with solar panels

21
00:01:24,740 --> 00:01:33,419
<font color="#CCCCCC">because like everybody like solar powers</font>

22
00:01:29,040 --> 00:01:37,229
so we<font color="#E5E5E5"> put some some panels in our home</font>

23
00:01:33,420 --> 00:01:39,060
and like any<font color="#CCCCCC"> actor</font><font color="#E5E5E5"> would do we started I</font>

24
00:01:37,229 --> 00:01:42,210
started<font color="#CCCCCC"> to reverse engineering the</font>

25
00:01:39,060 --> 00:01:46,619
restituted<font color="#E5E5E5"> group protocol for the</font>

26
00:01:42,210 --> 00:01:52,889
inverter<font color="#CCCCCC"> send the data through was an MP</font>

27
00:01:46,619 --> 00:01:56,340
to make some graphs and<font color="#E5E5E5"> that was it</font><font color="#CCCCCC"> if</font>

28
00:01:52,890 --> 00:02:00,630
you have ever had to<font color="#E5E5E5"> work with with</font>

29
00:01:56,340 --> 00:02:03,509
protocols like<font color="#E5E5E5"> SRP you you might have</font>

30
00:02:00,630 --> 00:02:05,850
<font color="#CCCCCC">had to study a bit</font><font color="#E5E5E5"> too</font><font color="#CCCCCC"> to understand</font>

31
00:02:03,509 --> 00:02:09,408
what<font color="#E5E5E5"> is going on behind the scenes</font><font color="#CCCCCC"> to</font>

32
00:02:05,850 --> 00:02:09,408
understand<font color="#E5E5E5"> how the protocol works and</font>

33
00:02:10,530 --> 00:02:21,360
well and<font color="#E5E5E5"> to</font><font color="#CCCCCC"> make it</font><font color="#E5E5E5"> work</font>

34
00:02:12,330 --> 00:02:24,810
the reason<font color="#E5E5E5"> was also this was not very</font>

35
00:02:21,360 --> 00:02:26,580
<font color="#E5E5E5">long</font><font color="#CCCCCC"> live protocol</font><font color="#E5E5E5"> sir long live project</font>

36
00:02:24,810 --> 00:02:29,190
goes well Murphy has something to<font color="#E5E5E5"> say in</font>

37
00:02:26,580 --> 00:02:34,170
it and it didn't last more than a couple

38
00:02:29,190 --> 00:02:39,450
of<font color="#E5E5E5"> weeks but still starting he got me</font>

39
00:02:34,170 --> 00:02:42,500
starting in the protocol<font color="#CCCCCC"> study and</font><font color="#E5E5E5"> and</font>

40
00:02:39,450 --> 00:02:49,109
we still<font color="#CCCCCC"> think that the SNP history is</font>

41
00:02:42,500 --> 00:02:51,599
it's a great place<font color="#CCCCCC"> to start</font><font color="#E5E5E5"> so again it</font>

42
00:02:49,110 --> 00:02:54,420
<font color="#E5E5E5">mimics the the history of a lot of other</font>

43
00:02:51,599 --> 00:02:56,940
protocols first version everything<font color="#E5E5E5"> clear</font>

44
00:02:54,420 --> 00:02:59,940
<font color="#E5E5E5">text everything</font><font color="#CCCCCC"> well it's just</font>

45
00:02:56,940 --> 00:03:03,620
welcome to the<font color="#E5E5E5"> hacker second version we</font>

46
00:02:59,940 --> 00:03:07,560
had<font color="#E5E5E5"> security but we're not good at it</font>

47
00:03:03,620 --> 00:03:10,440
<font color="#CCCCCC">nobody to Mary implements it is</font>

48
00:03:07,560 --> 00:03:15,150
difficult to to<font color="#CCCCCC"> actually implement it so</font>

49
00:03:10,440 --> 00:03:18,569
<font color="#E5E5E5">we go back and forth we have B to C with</font>

50
00:03:15,150 --> 00:03:21,269
<font color="#E5E5E5">v2 features and</font><font color="#CCCCCC"> version</font><font color="#E5E5E5"> one security</font>

51
00:03:18,569 --> 00:03:24,060
<font color="#CCCCCC">which is</font><font color="#E5E5E5"> basically</font><font color="#CCCCCC"> non until</font><font color="#E5E5E5"> finally we</font>

52
00:03:21,269 --> 00:03:27,630
get it right with some encrypted<font color="#CCCCCC"> and</font>

53
00:03:24,060 --> 00:03:32,549
authenticated version we see this all

54
00:03:27,630 --> 00:03:35,130
the<font color="#CCCCCC"> time and everyday protocols</font><font color="#E5E5E5"> like the</font>

55
00:03:32,549 --> 00:03:39,209
usual TCP and TLS which is<font color="#CCCCCC"> feature</font><font color="#E5E5E5"> first</font>

56
00:03:35,130 --> 00:03:41,400
<font color="#CCCCCC">security</font><font color="#E5E5E5"> letter but you can say well</font>

57
00:03:39,209 --> 00:03:44,040
this is because<font color="#E5E5E5"> of legacy this is</font>

58
00:03:41,400 --> 00:03:47,819
because the<font color="#CCCCCC"> protocols are old the truth</font>

59
00:03:44,040 --> 00:03:50,819
is it that we haven't<font color="#E5E5E5"> learned it really</font>

60
00:03:47,819 --> 00:03:53,880
well like if you've<font color="#E5E5E5"> studied a lot of</font>

61
00:03:50,819 --> 00:03:57,958
other protocols like HTTP and the CSP

62
00:03:53,880 --> 00:04:02,459
which were standardized<font color="#CCCCCC"> ending</font><font color="#E5E5E5"> in 2001</font>

63
00:03:57,959 --> 00:04:04,620
for<font color="#CCCCCC"> a CTP and 2006 for this ESP you will</font>

64
00:04:02,459 --> 00:04:06,560
still<font color="#CCCCCC"> see that everybody's clear text</font>

65
00:04:04,620 --> 00:04:10,950
and security is completely<font color="#E5E5E5"> forgotten</font>

66
00:04:06,560 --> 00:04:13,260
<font color="#CCCCCC">that is until some new protocols</font>

67
00:04:10,950 --> 00:04:16,649
<font color="#E5E5E5">experimental protocols like quick and</font>

68
00:04:13,260 --> 00:04:20,120
<font color="#E5E5E5">mini multi which were both born I think</font>

69
00:04:16,649 --> 00:04:22,049
<font color="#E5E5E5">three years ago</font><font color="#CCCCCC"> something like that</font>

70
00:04:20,120 --> 00:04:24,700
<font color="#E5E5E5">which</font>

71
00:04:22,050 --> 00:04:28,390
well the main reason<font color="#E5E5E5"> for quick is to try</font>

72
00:04:24,700 --> 00:04:30,460
and pull TLS and<font color="#E5E5E5"> tcp together and and</font>

73
00:04:28,390 --> 00:04:32,320
<font color="#E5E5E5">also add some multiplexing in the stream</font>

74
00:04:30,460 --> 00:04:34,799
<font color="#E5E5E5">so you can have</font><font color="#CCCCCC"> multiple streams</font><font color="#E5E5E5"> of data</font>

75
00:04:32,320 --> 00:04:41,620
in the same connection<font color="#E5E5E5"> basically what</font>

76
00:04:34,800 --> 00:04:44,140
what speedy and<font color="#E5E5E5"> http2 are doing and the</font>

77
00:04:41,620 --> 00:04:47,200
breathing runs on top of<font color="#E5E5E5"> good run on top</font>

78
00:04:44,140 --> 00:04:52,030
of IP<font color="#E5E5E5"> but technically runs on top of UDP</font>

79
00:04:47,200 --> 00:04:54,610
to get through firewalls<font color="#E5E5E5"> and stuff</font><font color="#CCCCCC"> what</font>

80
00:04:52,030 --> 00:04:57,760
does it mean security fee<font color="#E5E5E5"> first sorry</font>

81
00:04:54,610 --> 00:04:59,530
<font color="#E5E5E5">features first and security letter it</font>

82
00:04:57,760 --> 00:05:01,960
means<font color="#E5E5E5"> that the packet looks a lot like</font>

83
00:04:59,530 --> 00:05:04,650
this<font color="#E5E5E5"> clear text everywhere we can track</font>

84
00:05:01,960 --> 00:05:07,659
connections we can<font color="#CCCCCC"> rather connections</font>

85
00:05:04,650 --> 00:05:10,979
<font color="#E5E5E5">maybe even do some passive fingerprints</font>

86
00:05:07,660 --> 00:05:16,419
on the options and then finally we have

87
00:05:10,980 --> 00:05:20,740
<font color="#CCCCCC">our data and after well in the TLS</font>

88
00:05:16,419 --> 00:05:24,479
sections<font color="#CCCCCC"> we can also see here</font><font color="#E5E5E5"> that</font><font color="#CCCCCC"> TLS</font>

89
00:05:20,740 --> 00:05:29,680
is still in the Mac first<font color="#CCCCCC"> encrypt later</font>

90
00:05:24,480 --> 00:05:32,500
<font color="#E5E5E5">mode</font><font color="#CCCCCC"> the TLS 1.3 will</font><font color="#E5E5E5"> will change that</font>

91
00:05:29,680 --> 00:05:36,400
and go and<font color="#E5E5E5"> creep first</font><font color="#CCCCCC"> machlin</font>

92
00:05:32,500 --> 00:05:39,700
<font color="#CCCCCC">then neck which</font><font color="#E5E5E5"> is</font><font color="#CCCCCC"> which is</font><font color="#E5E5E5"> thought</font><font color="#CCCCCC"> to</font>

93
00:05:36,400 --> 00:05:44,349
<font color="#CCCCCC">be somewhat</font><font color="#E5E5E5"> more secure for a lot of</font>

94
00:05:39,700 --> 00:05:47,620
<font color="#E5E5E5">reasons we won't go in it and and this</font>

95
00:05:44,350 --> 00:05:51,970
<font color="#E5E5E5">is what</font><font color="#CCCCCC"> I</font><font color="#E5E5E5"> mean</font><font color="#CCCCCC"> when I</font><font color="#E5E5E5"> say security first</font>

96
00:05:47,620 --> 00:05:55,510
<font color="#E5E5E5">features later this</font><font color="#CCCCCC"> is the</font><font color="#E5E5E5"> quic protocol</font>

97
00:05:51,970 --> 00:05:59,380
and it's well<font color="#CCCCCC"> the first thing we notice</font>

98
00:05:55,510 --> 00:06:02,530
is<font color="#CCCCCC"> that Google try to make everything as</font>

99
00:05:59,380 --> 00:06:04,510
often as possible<font color="#CCCCCC"> so you can</font><font color="#E5E5E5"> skip out</font>

100
00:06:02,530 --> 00:06:08,049
all sections<font color="#E5E5E5"> like even the connection</font>

101
00:06:04,510 --> 00:06:10,300
<font color="#CCCCCC">idea is you can</font><font color="#E5E5E5"> be skipped out because</font>

102
00:06:08,050 --> 00:06:15,910
if you have the UDP<font color="#CCCCCC"> - I'll</font><font color="#E5E5E5"> use a UDP</font>

103
00:06:10,300 --> 00:06:22,030
connection as an identifier<font color="#E5E5E5"> but but</font>

104
00:06:15,910 --> 00:06:25,000
<font color="#E5E5E5">still as the only clear text parts are</font>

105
00:06:22,030 --> 00:06:27,789
the the thing<font color="#CCCCCC"> that you need to decrypt</font>

106
00:06:25,000 --> 00:06:31,120
<font color="#E5E5E5">the packet or the things that related</font>

107
00:06:27,790 --> 00:06:32,960
<font color="#E5E5E5">strictly to the</font><font color="#CCCCCC"> dance shake part of the</font>

108
00:06:31,120 --> 00:06:35,930
<font color="#E5E5E5">protocol</font>

109
00:06:32,960 --> 00:06:39,138
well finally we have some<font color="#CCCCCC"> multi-stream</font>

110
00:06:35,930 --> 00:06:42,139
support<font color="#E5E5E5"> in the stream ID and an offset</font>

111
00:06:39,139 --> 00:06:46,240
which<font color="#CCCCCC"> mimic</font><font color="#E5E5E5"> the the</font><font color="#CCCCCC"> observed mimic</font>

112
00:06:42,139 --> 00:06:46,240
mimics<font color="#CCCCCC"> their sequence numbers in TCP</font>

113
00:06:46,449 --> 00:06:52,190
<font color="#CCCCCC">minimality that I mentioned before looks</font>

114
00:06:49,460 --> 00:06:56,479
a lot<font color="#CCCCCC"> similar but the packet structure</font>

115
00:06:52,190 --> 00:07:01,940
is more fix it<font color="#E5E5E5"> and those very easier to</font>

116
00:06:56,479 --> 00:07:04,880
parse but still the<font color="#CCCCCC"> dover all the world</font>

117
00:07:01,940 --> 00:07:07,850
sections are the same only the<font color="#E5E5E5"> clear</font>

118
00:07:04,880 --> 00:07:09,530
<font color="#E5E5E5">text only</font><font color="#CCCCCC"> as the part</font><font color="#E5E5E5"> only</font><font color="#CCCCCC"> as the part</font>

119
00:07:07,850 --> 00:07:13,000
that are<font color="#E5E5E5"> needed to decrypt</font><font color="#CCCCCC"> a packet and</font>

120
00:07:09,530 --> 00:07:15,380
then<font color="#E5E5E5"> the packet has the actual</font><font color="#CCCCCC"> data</font>

121
00:07:13,000 --> 00:07:17,320
<font color="#E5E5E5">minimal</font><font color="#CCCCCC"> T still has support for</font><font color="#E5E5E5"> multi</font>

122
00:07:15,380 --> 00:07:20,389
<font color="#E5E5E5">stream if you wanna know which are the</font>

123
00:07:17,320 --> 00:07:22,820
the RPC<font color="#E5E5E5"> part which can be repeated in</font>

124
00:07:20,389 --> 00:07:27,260
the the same packet<font color="#CCCCCC"> same and streams in</font>

125
00:07:22,820 --> 00:07:29,719
quick so for our protocol<font color="#CCCCCC"> I went for</font>

126
00:07:27,260 --> 00:07:34,729
<font color="#E5E5E5">something very similar to minimal T with</font>

127
00:07:29,720 --> 00:07:38,810
the connection ID<font color="#E5E5E5"> each one is</font><font color="#CCCCCC"> the</font>

128
00:07:34,729 --> 00:07:41,210
connection it is<font color="#E5E5E5"> like this each part of</font>

129
00:07:38,810 --> 00:07:43,099
<font color="#E5E5E5">the connection generates the song ID and</font>

130
00:07:41,210 --> 00:07:47,060
sends it<font color="#CCCCCC"> to the other</font><font color="#E5E5E5"> so there is no</font>

131
00:07:43,099 --> 00:07:49,280
clash of synchronization needed<font color="#CCCCCC"> then we</font>

132
00:07:47,060 --> 00:07:52,270
have some multiple streams which will be

133
00:07:49,280 --> 00:07:56,388
which we will see more<font color="#CCCCCC"> in</font><font color="#E5E5E5"> that later and</font>

134
00:07:52,270 --> 00:07:59,210
some some<font color="#CCCCCC"> checksum the it's really the</font>

135
00:07:56,389 --> 00:08:02,889
same<font color="#CCCCCC"> thing</font><font color="#E5E5E5"> as before except maybe for</font>

136
00:07:59,210 --> 00:08:05,599
the padding which I put<font color="#E5E5E5"> the beginning</font><font color="#CCCCCC"> to</font>

137
00:08:02,889 --> 00:08:10,280
randomize a bit more<font color="#E5E5E5"> the internal</font>

138
00:08:05,599 --> 00:08:15,969
structure of<font color="#E5E5E5"> the packet to to make more</font>

139
00:08:10,280 --> 00:08:19,789
<font color="#CCCCCC">difficult some some traffic</font><font color="#E5E5E5"> analysis or</font>

140
00:08:15,970 --> 00:08:23,090
or<font color="#E5E5E5"> rather small attacks</font><font color="#CCCCCC"> there is also</font>

141
00:08:19,789 --> 00:08:25,909
the option<font color="#E5E5E5"> for by the lenient but that I</font>

142
00:08:23,090 --> 00:08:29,479
don't think quick<font color="#E5E5E5"> support in quick</font>

143
00:08:25,909 --> 00:08:31,969
<font color="#E5E5E5">everything is bright aligned and I not</font>

144
00:08:29,479 --> 00:08:36,169
sure about minimal<font color="#CCCCCC"> tea anyway the first</font>

145
00:08:31,970 --> 00:08:39,260
<font color="#E5E5E5">thing</font><font color="#CCCCCC"> we do when we build out our</font>

146
00:08:36,169 --> 00:08:41,630
<font color="#CCCCCC">application is</font><font color="#E5E5E5"> to select the stack of</font>

147
00:08:39,260 --> 00:08:43,760
protocols that<font color="#E5E5E5"> we will</font><font color="#CCCCCC"> use since today</font>

148
00:08:41,630 --> 00:08:45,470
everything<font color="#E5E5E5"> runs on the web you will</font>

149
00:08:43,760 --> 00:08:46,640
<font color="#E5E5E5">always start always start with something</font>

150
00:08:45,470 --> 00:08:50,180
<font color="#E5E5E5">like</font><font color="#CCCCCC"> this</font><font color="#E5E5E5"> to speed</font>

151
00:08:46,640 --> 00:08:52,760
<font color="#CCCCCC">Telus</font><font color="#E5E5E5"> HTTP world for your authentication</font>

152
00:08:50,180 --> 00:08:55,719
and finally the application<font color="#E5E5E5"> which is</font>

153
00:08:52,760 --> 00:09:00,740
fine<font color="#CCCCCC"> it's it's not the problem with</font><font color="#E5E5E5"> this</font>

154
00:08:55,720 --> 00:09:08,080
<font color="#CCCCCC">it works until you need</font><font color="#E5E5E5"> to add things</font>

155
00:09:00,740 --> 00:09:10,630
like chat video audio audio streams that

156
00:09:08,080 --> 00:09:13,670
do not<font color="#E5E5E5"> really work that well with</font>

157
00:09:10,630 --> 00:09:15,920
reliable connections and you cannot do

158
00:09:13,670 --> 00:09:19,760
with<font color="#CCCCCC"> these talks you need to add another</font>

159
00:09:15,920 --> 00:09:23,900
stock and manage these<font color="#E5E5E5"> two in your</font>

160
00:09:19,760 --> 00:09:26,000
applications<font color="#CCCCCC"> maybe</font><font color="#E5E5E5"> even synchronize the</font>

161
00:09:23,900 --> 00:09:27,770
authentication of<font color="#E5E5E5"> all that you do in one</font>

162
00:09:26,000 --> 00:09:30,110
stock on the other and things like that

163
00:09:27,770 --> 00:09:32,890
<font color="#E5E5E5">it gets even more complicated if you</font>

164
00:09:30,110 --> 00:09:36,230
<font color="#E5E5E5">want to do something like multicast and</font>

165
00:09:32,890 --> 00:09:39,199
and yeah if your application has<font color="#E5E5E5"> to</font>

166
00:09:36,230 --> 00:09:41,450
synchronize<font color="#CCCCCC"> all of this stuff</font><font color="#E5E5E5"> everything</font>

167
00:09:39,200 --> 00:09:45,770
is pushed<font color="#CCCCCC"> onto</font><font color="#E5E5E5"> all the complexities</font>

168
00:09:41,450 --> 00:09:48,350
posts on the application<font color="#E5E5E5"> and we can</font>

169
00:09:45,770 --> 00:09:50,210
<font color="#CCCCCC">really expect</font><font color="#E5E5E5"> normal application</font>

170
00:09:48,350 --> 00:09:54,860
developers to<font color="#E5E5E5"> get this right every</font><font color="#CCCCCC"> time</font>

171
00:09:50,210 --> 00:10:00,410
<font color="#E5E5E5">so big frameworks and another stuff</font>

172
00:09:54,860 --> 00:10:05,180
<font color="#CCCCCC">revoir what we want</font><font color="#E5E5E5"> to do instead is</font>

173
00:10:00,410 --> 00:10:08,540
probably move the management of all<font color="#E5E5E5"> of</font>

174
00:10:05,180 --> 00:10:12,140
these tags inside<font color="#E5E5E5"> inside</font><font color="#CCCCCC"> the streams</font>

175
00:10:08,540 --> 00:10:15,410
<font color="#E5E5E5">that were before but in it's something</font>

176
00:10:12,140 --> 00:10:18,110
that both quick and<font color="#E5E5E5"> minimal team used</font>

177
00:10:15,410 --> 00:10:21,640
because<font color="#CCCCCC"> they stick to TCP like</font>

178
00:10:18,110 --> 00:10:25,160
connections<font color="#E5E5E5"> there is some some way to do</font>

179
00:10:21,640 --> 00:10:27,980
UDP like<font color="#E5E5E5"> connection so</font><font color="#CCCCCC"> streams in quick</font>

180
00:10:25,160 --> 00:10:31,150
<font color="#E5E5E5">but it's more of a heart and than the</font>

181
00:10:27,980 --> 00:10:34,160
way the<font color="#E5E5E5"> protocol is and it's thought and</font>

182
00:10:31,150 --> 00:10:35,840
still none<font color="#CCCCCC"> of those</font><font color="#E5E5E5"> protocols</font><font color="#CCCCCC"> at least</font>

183
00:10:34,160 --> 00:10:42,709
at least<font color="#E5E5E5"> as far</font><font color="#CCCCCC"> as I know support</font>

184
00:10:35,840 --> 00:10:45,590
multicast so in theory<font color="#E5E5E5"> we have an</font>

185
00:10:42,710 --> 00:10:47,240
explicit creation of the streams even

186
00:10:45,590 --> 00:10:51,290
<font color="#CCCCCC">during the and shake so you don't have</font>

187
00:10:47,240 --> 00:10:53,260
<font color="#E5E5E5">to waste more round trips and we can</font>

188
00:10:51,290 --> 00:10:56,060
have any combination of reliable

189
00:10:53,260 --> 00:11:00,050
reliable<font color="#CCCCCC"> ordered and ordered stream or</font>

190
00:10:56,060 --> 00:11:01,959
Datagram<font color="#E5E5E5"> basically any any any</font>

191
00:11:00,050 --> 00:11:06,250
that you can think<font color="#E5E5E5"> of if there's some</font>

192
00:11:01,959 --> 00:11:08,930
<font color="#CCCCCC">desire</font><font color="#E5E5E5"> quite difficult to manage them</font>

193
00:11:06,250 --> 00:11:13,459
<font color="#E5E5E5">something</font><font color="#CCCCCC"> that</font><font color="#E5E5E5"> quickly introduced in</font>

194
00:11:08,930 --> 00:11:15,170
protocols<font color="#E5E5E5"> but was already done and in</font>

195
00:11:13,459 --> 00:11:17,479
other<font color="#E5E5E5"> pathways</font><font color="#CCCCCC"> not really a complete</font>

196
00:11:15,170 --> 00:11:20,479
innovation is the forward error

197
00:11:17,480 --> 00:11:23,120
correction of packets<font color="#CCCCCC"> we can introduce</font>

198
00:11:20,480 --> 00:11:25,910
<font color="#E5E5E5">something like</font><font color="#CCCCCC"> write for for the network</font>

199
00:11:23,120 --> 00:11:28,880
where every two packets that<font color="#E5E5E5"> you sent is</font>

200
00:11:25,910 --> 00:11:32,810
<font color="#CCCCCC">send XOR of the two packets so you can</font>

201
00:11:28,880 --> 00:11:37,459
lose one<font color="#CCCCCC"> of the two</font><font color="#E5E5E5"> packets and still</font>

202
00:11:32,810 --> 00:11:39,589
get your<font color="#E5E5E5"> data I developed and you can</font>

203
00:11:37,459 --> 00:11:41,449
you<font color="#E5E5E5"> can use now the liberal</font><font color="#CCCCCC"> talkie which</font>

204
00:11:39,589 --> 00:11:43,720
implements<font color="#CCCCCC"> the wraptor q algorithm and</font>

205
00:11:41,450 --> 00:11:47,870
<font color="#E5E5E5">the</font><font color="#CCCCCC"> secure a generalization of</font><font color="#E5E5E5"> this</font>

206
00:11:43,720 --> 00:11:50,240
linear<font color="#CCCCCC"> combination of of packets so that</font>

207
00:11:47,870 --> 00:11:52,820
we can generalize on any number<font color="#E5E5E5"> of</font>

208
00:11:50,240 --> 00:11:56,959
packets from<font color="#CCCCCC"> the source and any number</font>

209
00:11:52,820 --> 00:12:00,380
of<font color="#E5E5E5"> repeat packets so you can actually</font>

210
00:11:56,959 --> 00:12:05,989
<font color="#CCCCCC">tailor</font><font color="#E5E5E5"> your error correction depending</font>

211
00:12:00,380 --> 00:12:11,450
on on your network properties finally

212
00:12:05,990 --> 00:12:13,250
multicast support<font color="#E5E5E5"> multicast is needs to</font>

213
00:12:11,450 --> 00:12:19,190
<font color="#E5E5E5">be treated</font><font color="#CCCCCC"> a little bit different</font><font color="#E5E5E5"> though</font>

214
00:12:13,250 --> 00:12:21,760
because for example<font color="#E5E5E5"> we have support</font><font color="#CCCCCC"> for</font>

215
00:12:19,190 --> 00:12:24,740
multicast<font color="#E5E5E5"> england in the DTLS</font>

216
00:12:21,760 --> 00:12:28,520
specification that<font color="#CCCCCC"> is in RFC but what it</font>

217
00:12:24,740 --> 00:12:31,310
does is<font color="#CCCCCC"> basically just shared the same</font>

218
00:12:28,520 --> 00:12:33,890
key with everybody which works is fine

219
00:12:31,310 --> 00:12:38,209
<font color="#E5E5E5">but then every client can impersonate</font>

220
00:12:33,890 --> 00:12:39,709
the server with<font color="#CCCCCC"> the sending data to</font>

221
00:12:38,209 --> 00:12:42,349
<font color="#E5E5E5">other clients pretending to be the</font>

222
00:12:39,709 --> 00:12:50,290
server simply<font color="#E5E5E5"> because well it's the same</font>

223
00:12:42,350 --> 00:12:53,920
key so to fix<font color="#E5E5E5"> this in</font><font color="#CCCCCC"> fairer way simply</font>

224
00:12:50,290 --> 00:12:56,240
<font color="#E5E5E5">reserve a connection ID and the</font>

225
00:12:53,920 --> 00:12:59,560
identifier for the multicast connection

226
00:12:56,240 --> 00:13:02,570
is<font color="#E5E5E5"> actually the the public</font><font color="#CCCCCC"> key which is</font>

227
00:12:59,560 --> 00:13:06,589
we use electrical elliptic curve

228
00:13:02,570 --> 00:13:08,850
cryptography<font color="#CCCCCC"> through a</font><font color="#E5E5E5"> lip sodium and</font>

229
00:13:06,589 --> 00:13:11,610
then we sing

230
00:13:08,850 --> 00:13:14,190
the packet with the<font color="#E5E5E5"> with the public key</font>

231
00:13:11,610 --> 00:13:18,420
<font color="#E5E5E5">directly elliptic curve cryptography is</font>

232
00:13:14,190 --> 00:13:19,920
fast<font color="#E5E5E5"> enough for this we it was something</font>

233
00:13:18,420 --> 00:13:25,860
not<font color="#E5E5E5"> really possible with let us say</font>

234
00:13:19,920 --> 00:13:27,719
which<font color="#CCCCCC"> which</font><font color="#E5E5E5"> is somewhat slower the the</font>

235
00:13:25,860 --> 00:13:29,700
nice thing about<font color="#E5E5E5"> managing</font><font color="#CCCCCC"> handedly</font>

236
00:13:27,720 --> 00:13:34,470
<font color="#E5E5E5">everything in the same protocol is</font><font color="#CCCCCC"> that</font>

237
00:13:29,700 --> 00:13:36,210
we can also associate the the multicast

238
00:13:34,470 --> 00:13:38,280
connection is actually<font color="#CCCCCC"> associated with</font>

239
00:13:36,210 --> 00:13:41,700
the unicast with one or more<font color="#E5E5E5"> unica's</font>

240
00:13:38,280 --> 00:13:43,560
connections<font color="#E5E5E5"> and it means</font><font color="#CCCCCC"> that</font><font color="#E5E5E5"> we can use</font>

241
00:13:41,700 --> 00:13:45,570
<font color="#E5E5E5">the multicast connection to just send</font>

242
00:13:43,560 --> 00:13:47,910
the data to the clients and<font color="#E5E5E5"> then use the</font>

243
00:13:45,570 --> 00:13:51,090
unicast connection to send more recover

244
00:13:47,910 --> 00:13:53,339
data or packets that were lost and we

245
00:13:51,090 --> 00:13:59,790
can have something<font color="#E5E5E5"> I can do reliable</font>

246
00:13:53,340 --> 00:14:02,190
multicast which<font color="#CCCCCC"> has ice still we were</font>

247
00:13:59,790 --> 00:14:05,189
talking about<font color="#E5E5E5"> the</font><font color="#CCCCCC"> application stuff the</font>

248
00:14:02,190 --> 00:14:08,310
application<font color="#E5E5E5"> stack let's look into it a</font>

249
00:14:05,190 --> 00:14:13,070
bit<font color="#CCCCCC"> deeper</font><font color="#E5E5E5"> and compare it to</font><font color="#CCCCCC"> the</font><font color="#E5E5E5"> the</font>

250
00:14:08,310 --> 00:14:16,050
<font color="#E5E5E5">other layers and</font><font color="#CCCCCC"> also layer</font><font color="#E5E5E5"> pilot the</font>

251
00:14:13,070 --> 00:14:19,380
<font color="#CCCCCC">stuff like</font><font color="#E5E5E5"> Competizione encryption is</font>

252
00:14:16,050 --> 00:14:24,449
not it's<font color="#E5E5E5"> not included because you can do</font>

253
00:14:19,380 --> 00:14:29,700
it<font color="#E5E5E5"> multiple levels but</font><font color="#CCCCCC"> we can see some</font>

254
00:14:24,450 --> 00:14:31,260
interesting<font color="#E5E5E5"> stuff like TCP and TLS and</font>

255
00:14:29,700 --> 00:14:34,740
HTTP or both

256
00:14:31,260 --> 00:14:38,130
transport protocols<font color="#E5E5E5"> but while TCP and</font>

257
00:14:34,740 --> 00:14:40,320
TLS<font color="#CCCCCC"> have</font><font color="#E5E5E5"> their own sessions which are</font>

258
00:14:38,130 --> 00:14:42,080
different<font color="#CCCCCC"> because the Thiele sessions</font>

259
00:14:40,320 --> 00:14:43,920
need to be cryptography

260
00:14:42,080 --> 00:14:47,100
cryptographically verified and

261
00:14:43,920 --> 00:14:49,620
everything<font color="#CCCCCC"> HTTP does not support</font>

262
00:14:47,100 --> 00:14:51,570
sessions so you<font color="#E5E5E5"> actually need</font><font color="#CCCCCC"> to</font>

263
00:14:49,620 --> 00:14:56,580
reintroduce the session in with the

264
00:14:51,570 --> 00:14:58,290
cookies and<font color="#E5E5E5"> and also</font><font color="#CCCCCC"> e</font><font color="#E5E5E5"> and if you have a</font>

265
00:14:56,580 --> 00:15:00,660
different session<font color="#E5E5E5"> for the authentication</font>

266
00:14:58,290 --> 00:15:03,689
in<font color="#CCCCCC"> vows which need to</font><font color="#E5E5E5"> be synchronized in</font>

267
00:15:00,660 --> 00:15:05,520
with the cookies and and this<font color="#E5E5E5"> is what we</font>

268
00:15:03,690 --> 00:15:08,340
mean with<font color="#CCCCCC"> one man before</font>

269
00:15:05,520 --> 00:15:10,050
worthy the complexity is pushed to the

270
00:15:08,340 --> 00:15:12,150
application because<font color="#CCCCCC"> now you</font><font color="#E5E5E5"> have to</font>

271
00:15:10,050 --> 00:15:15,420
synchronize<font color="#E5E5E5"> and things like the you out</font>

272
00:15:12,150 --> 00:15:17,340
the cookies and manage the the session

273
00:15:15,420 --> 00:15:20,400
that<font color="#E5E5E5"> you that they should be took away</font>

274
00:15:17,340 --> 00:15:22,830
and stuff like<font color="#E5E5E5"> this</font>

275
00:15:20,400 --> 00:15:24,870
we have also<font color="#E5E5E5"> multiple ways of</font>

276
00:15:22,830 --> 00:15:27,960
multiple points<font color="#E5E5E5"> where we do the</font>

277
00:15:24,870 --> 00:15:32,310
authentication<font color="#CCCCCC"> and we cannot really fix</font>

278
00:15:27,960 --> 00:15:36,810
the deception part<font color="#CCCCCC"> because simply HTTP</font>

279
00:15:32,310 --> 00:15:42,780
took it away<font color="#E5E5E5"> we can do something</font><font color="#CCCCCC"> for for</font>

280
00:15:36,810 --> 00:15:44,640
<font color="#E5E5E5">the authentication so what are the</font>

281
00:15:42,780 --> 00:15:46,050
authentication not as<font color="#E5E5E5"> possible the the</font>

282
00:15:44,640 --> 00:15:52,260
most<font color="#E5E5E5"> simple one is the client server</font>

283
00:15:46,050 --> 00:15:54,390
<font color="#E5E5E5">that is used in TLS and</font><font color="#CCCCCC"> and now and what</font>

284
00:15:52,260 --> 00:15:57,569
what your application can easily

285
00:15:54,390 --> 00:16:01,530
<font color="#CCCCCC">implement you have the federated model</font>

286
00:15:57,570 --> 00:16:04,680
like Kerberos<font color="#E5E5E5"> and while which</font><font color="#CCCCCC"> is which</font>

287
00:16:01,530 --> 00:16:06,839
<font color="#CCCCCC">is somewhat of a mesh between the client</font>

288
00:16:04,680 --> 00:16:09,150
server and the<font color="#E5E5E5"> federated because it</font>

289
00:16:06,840 --> 00:16:11,820
should be it looks a lot like the

290
00:16:09,150 --> 00:16:16,220
federated model<font color="#CCCCCC"> but then you</font><font color="#E5E5E5"> don't have</font>

291
00:16:11,820 --> 00:16:20,150
automatic<font color="#E5E5E5"> discovery and things are</font>

292
00:16:16,220 --> 00:16:22,920
things<font color="#E5E5E5"> are difficult to implement and</font>

293
00:16:20,150 --> 00:16:24,810
and anyway all<font color="#CCCCCC"> of these models have</font>

294
00:16:22,920 --> 00:16:28,349
their own<font color="#E5E5E5"> problems like the</font>

295
00:16:24,810 --> 00:16:30,510
client-server<font color="#E5E5E5"> model only we can give</font><font color="#CCCCCC"> you</font>

296
00:16:28,350 --> 00:16:34,110
<font color="#E5E5E5">many users and passwords which</font><font color="#CCCCCC"> is our</font>

297
00:16:30,510 --> 00:16:37,410
<font color="#E5E5E5">current problem or or you can use</font><font color="#CCCCCC"> a</font>

298
00:16:34,110 --> 00:16:39,840
certificate<font color="#E5E5E5"> with and then you need to to</font>

299
00:16:37,410 --> 00:16:43,260
think about renewal<font color="#CCCCCC"> revocation issues</font>

300
00:16:39,840 --> 00:16:45,210
and stuff<font color="#CCCCCC"> the Kerberos federated model</font>

301
00:16:43,260 --> 00:16:47,580
is<font color="#E5E5E5"> actually a very good one but it</font>

302
00:16:45,210 --> 00:16:49,710
<font color="#E5E5E5">requires clock synchronization which is</font>

303
00:16:47,580 --> 00:16:53,670
very<font color="#E5E5E5"> difficult for embedded stuff like</font>

304
00:16:49,710 --> 00:17:00,860
the badge<font color="#CCCCCC"> which is</font><font color="#E5E5E5"> auto-update failed</font>

305
00:16:53,670 --> 00:17:03,810
<font color="#E5E5E5">nice like this badge which does not have</font>

306
00:17:00,860 --> 00:17:05,699
clock<font color="#E5E5E5"> inside and still requiring clock</font>

307
00:17:03,810 --> 00:17:07,708
synchronization on the<font color="#CCCCCC"> Internet is</font>

308
00:17:05,699 --> 00:17:12,540
something<font color="#E5E5E5"> that you probably don't</font><font color="#CCCCCC"> want</font>

309
00:17:07,709 --> 00:17:14,490
<font color="#E5E5E5">to do and finally what is just a big</font>

310
00:17:12,540 --> 00:17:16,680
pack<font color="#CCCCCC"> of nope if you follow the</font>

311
00:17:14,490 --> 00:17:19,589
development of this<font color="#E5E5E5"> protocol you will</font>

312
00:17:16,680 --> 00:17:22,980
<font color="#E5E5E5">already know</font><font color="#CCCCCC"> that there are stuff like</font>

313
00:17:19,589 --> 00:17:25,260
the demeanor of<font color="#CCCCCC"> world</font><font color="#E5E5E5"> one which worked</font>

314
00:17:22,980 --> 00:17:27,690
in<font color="#CCCCCC"> all</font><font color="#E5E5E5"> two and got</font><font color="#CCCCCC"> away a couple of</font>

315
00:17:25,260 --> 00:17:30,090
<font color="#CCCCCC">months before</font><font color="#E5E5E5"> the standardization of</font>

316
00:17:27,690 --> 00:17:34,460
this protocol asking for a<font color="#CCCCCC"> seam to be</font>

317
00:17:30,090 --> 00:17:36,418
<font color="#E5E5E5">taken out</font><font color="#CCCCCC"> of the older documents</font><font color="#E5E5E5"> inside</font>

318
00:17:34,460 --> 00:17:38,070
<font color="#E5E5E5">it was</font>

319
00:17:36,419 --> 00:17:40,739
<font color="#CCCCCC">tried to standardize</font><font color="#E5E5E5"> this is a protocol</font>

320
00:17:38,070 --> 00:17:42,509
but it's so<font color="#E5E5E5"> loosely defined that they</font>

321
00:17:40,739 --> 00:17:47,489
couldn't<font color="#CCCCCC"> do it</font><font color="#E5E5E5"> and so it's actually just</font>

322
00:17:42,509 --> 00:17:49,669
<font color="#CCCCCC">a framework and</font><font color="#E5E5E5"> and it works I mean it's</font>

323
00:17:47,489 --> 00:17:52,169
it's safe everybody<font color="#E5E5E5"> use it because</font>

324
00:17:49,669 --> 00:17:55,049
cryptographers and security people<font color="#E5E5E5"> have</font>

325
00:17:52,169 --> 00:17:57,509
<font color="#E5E5E5">gotten together and and now the</font>

326
00:17:55,049 --> 00:18:00,320
libraries<font color="#CCCCCC"> that</font><font color="#E5E5E5"> you find on the</font><font color="#CCCCCC"> internet</font>

327
00:17:57,509 --> 00:18:04,789
<font color="#E5E5E5">are actually a very</font><font color="#CCCCCC"> specific</font><font color="#E5E5E5"> subset of</font>

328
00:18:00,320 --> 00:18:09,359
<font color="#E5E5E5">Wow because</font><font color="#CCCCCC"> if you you can</font><font color="#E5E5E5"> actually have</font>

329
00:18:04,789 --> 00:18:11,190
implementations of odd that<font color="#E5E5E5"> that are</font>

330
00:18:09,359 --> 00:18:13,470
completely conforming to the

331
00:18:11,190 --> 00:18:16,710
specification<font color="#CCCCCC"> to the specification</font><font color="#E5E5E5"> but</font>

332
00:18:13,470 --> 00:18:20,789
also<font color="#E5E5E5"> completely insecure so do not</font>

333
00:18:16,710 --> 00:18:23,700
implement allowed<font color="#E5E5E5"> what</font><font color="#CCCCCC"> I</font><font color="#E5E5E5"> chosen for this</font>

334
00:18:20,789 --> 00:18:30,749
<font color="#CCCCCC">project</font><font color="#E5E5E5"> is the</font><font color="#CCCCCC"> Federation</font><font color="#E5E5E5"> model and I</font>

335
00:18:23,700 --> 00:18:36,600
actually tried to separate the the

336
00:18:30,749 --> 00:18:41,100
<font color="#CCCCCC">various</font><font color="#E5E5E5"> the various missing duality the</font>

337
00:18:36,600 --> 00:18:43,859
various parts of this Federation<font color="#E5E5E5"> so you</font>

338
00:18:41,100 --> 00:18:46,529
have your<font color="#CCCCCC"> application</font><font color="#E5E5E5"> like your web</font>

339
00:18:43,859 --> 00:18:49,529
browser<font color="#CCCCCC"> the</font><font color="#E5E5E5"> client manager which is</font>

340
00:18:46,529 --> 00:18:51,299
something<font color="#CCCCCC"> that I don't</font><font color="#E5E5E5"> know like in the</font>

341
00:18:49,529 --> 00:18:53,659
Kerberos model the application the

342
00:18:51,299 --> 00:18:55,649
manages all your tokens and

343
00:18:53,659 --> 00:19:01,049
authentications then you have<font color="#E5E5E5"> video</font>

344
00:18:55,649 --> 00:19:03,689
server service which<font color="#E5E5E5"> can be the the web</font>

345
00:19:01,049 --> 00:19:05,389
server<font color="#E5E5E5"> and finally</font><font color="#CCCCCC"> the</font><font color="#E5E5E5"> the</font>

346
00:19:03,690 --> 00:19:10,950
<font color="#E5E5E5">authentication server which is a</font>

347
00:19:05,389 --> 00:19:12,928
separate entity<font color="#E5E5E5"> from from the service an</font>

348
00:19:10,950 --> 00:19:14,850
<font color="#E5E5E5">overview can be something like</font><font color="#CCCCCC"> this</font>

349
00:19:12,929 --> 00:19:17,639
<font color="#CCCCCC">where</font><font color="#E5E5E5"> the application connects to the</font>

350
00:19:14,850 --> 00:19:19,439
manager<font color="#CCCCCC"> locker in</font><font color="#E5E5E5"> the same machine</font><font color="#CCCCCC"> the</font>

351
00:19:17,639 --> 00:19:21,269
manager does all the and shake an

352
00:19:19,440 --> 00:19:24,179
authentication and token management

353
00:19:21,269 --> 00:19:27,419
<font color="#E5E5E5">staff with the authentication</font><font color="#CCCCCC"> server</font>

354
00:19:24,179 --> 00:19:30,239
which then<font color="#E5E5E5"> just notifies its service</font>

355
00:19:27,419 --> 00:19:32,369
because the<font color="#CCCCCC"> services</font><font color="#E5E5E5"> is inside the same</font>

356
00:19:30,239 --> 00:19:36,690
domain that the authentication server

357
00:19:32,369 --> 00:19:38,759
manages about it notifies it about the

358
00:19:36,690 --> 00:19:40,350
new user<font color="#E5E5E5"> it sends back the keys and</font>

359
00:19:38,759 --> 00:19:42,480
connection<font color="#CCCCCC"> information like</font><font color="#E5E5E5"> connection</font>

360
00:19:40,350 --> 00:19:44,519
identifiers and other stuff<font color="#E5E5E5"> which are</font>

361
00:19:42,480 --> 00:19:47,879
sent back<font color="#E5E5E5"> all the way to the application</font>

362
00:19:44,519 --> 00:19:50,490
now the application connectivity<font color="#E5E5E5"> service</font>

363
00:19:47,879 --> 00:19:55,169
directly without<font color="#CCCCCC"> anymore</font>

364
00:19:50,490 --> 00:19:56,670
<font color="#E5E5E5">shakes round trips and stuff</font><font color="#CCCCCC"> this is</font>

365
00:19:55,170 --> 00:19:58,320
absolutely<font color="#E5E5E5"> one</font><font color="#CCCCCC"> of the few models</font><font color="#E5E5E5"> that</font>

366
00:19:56,670 --> 00:20:04,260
you can<font color="#E5E5E5"> have without the clock</font>

367
00:19:58,320 --> 00:20:07,500
synchronization yeah I think<font color="#E5E5E5"> it's it's</font>

368
00:20:04,260 --> 00:20:10,080
<font color="#E5E5E5">good enough and also as I</font><font color="#CCCCCC"> said formally</font>

369
00:20:07,500 --> 00:20:15,570
verified<font color="#E5E5E5"> through their mathematical</font>

370
00:20:10,080 --> 00:20:18,809
properties<font color="#E5E5E5"> this the previous</font><font color="#CCCCCC"> slides</font><font color="#E5E5E5"> left</font>

371
00:20:15,570 --> 00:20:21,360
a big hole<font color="#E5E5E5"> however what is the trust</font>

372
00:20:18,809 --> 00:20:22,710
model<font color="#E5E5E5"> of the of the whole system</font><font color="#CCCCCC"> I mean</font>

373
00:20:21,360 --> 00:20:25,469
<font color="#E5E5E5">we can do we could just use the</font>

374
00:20:22,710 --> 00:20:28,020
<font color="#E5E5E5">certificate model which has a lot</font><font color="#CCCCCC"> of</font>

375
00:20:25,470 --> 00:20:30,059
different problems<font color="#E5E5E5"> as we know it or we</font>

376
00:20:28,020 --> 00:20:34,290
could<font color="#E5E5E5"> use you</font><font color="#CCCCCC"> could</font><font color="#E5E5E5"> just use</font><font color="#CCCCCC"> the NS sack</font>

377
00:20:30,059 --> 00:20:39,170
which is almost available for<font color="#E5E5E5"> for any</font>

378
00:20:34,290 --> 00:20:46,440
TLD domain now and so that's what we do

379
00:20:39,170 --> 00:20:48,900
we we create a<font color="#E5E5E5"> binary with with</font>

380
00:20:46,440 --> 00:20:53,600
information like multiple authentication

381
00:20:48,900 --> 00:20:57,470
service<font color="#CCCCCC"> IPS UDP ports to connect to</font>

382
00:20:53,600 --> 00:21:03,240
multiple public users so<font color="#E5E5E5"> that you can do</font>

383
00:20:57,470 --> 00:21:07,710
<font color="#E5E5E5">roll out of Nicki is very very similar</font><font color="#CCCCCC"> C</font>

384
00:21:03,240 --> 00:21:12,170
and hosting support<font color="#E5E5E5"> is</font><font color="#CCCCCC"> messages to do we</font>

385
00:21:07,710 --> 00:21:17,429
<font color="#E5E5E5">don't use x.509 certificates just</font>

386
00:21:12,170 --> 00:21:21,030
<font color="#E5E5E5">playing keys because</font><font color="#CCCCCC"> well it's 500 an</font><font color="#E5E5E5"> is</font>

387
00:21:17,429 --> 00:21:23,640
a very complex and very abuse the

388
00:21:21,030 --> 00:21:27,059
standard<font color="#E5E5E5"> I think</font><font color="#CCCCCC"> the implementation in</font>

389
00:21:23,640 --> 00:21:28,980
<font color="#CCCCCC">no-tillage is like</font><font color="#E5E5E5"> thirty five thousand</font>

390
00:21:27,059 --> 00:21:35,210
lines of code just<font color="#E5E5E5"> for parsing the</font>

391
00:21:28,980 --> 00:21:39,240
certificates which is<font color="#CCCCCC"> way too much and</font>

392
00:21:35,210 --> 00:21:41,910
also<font color="#E5E5E5"> we don't strictly standardized on a</font>

393
00:21:39,240 --> 00:21:44,100
single trust mode so you<font color="#E5E5E5"> can extend it</font>

394
00:21:41,910 --> 00:21:48,030
and it's all managed via plugins if you

395
00:21:44,100 --> 00:21:51,959
wanna<font color="#E5E5E5"> if in the future we</font><font color="#CCCCCC"> wanna</font><font color="#E5E5E5"> add</font>

396
00:21:48,030 --> 00:21:56,160
something like<font color="#CCCCCC"> GPG which we could TLD</font>

397
00:21:51,960 --> 00:22:00,270
just like the<font color="#CCCCCC"> tour</font><font color="#E5E5E5"> guys do and get info</font>

398
00:21:56,160 --> 00:22:02,940
from<font color="#CCCCCC"> the web</font><font color="#E5E5E5"> of</font><font color="#CCCCCC"> serve</font><font color="#E5E5E5"> and save our our</font>

399
00:22:00,270 --> 00:22:08,220
binary<font color="#E5E5E5"> encoded</font>

400
00:22:02,940 --> 00:22:12,269
<font color="#E5E5E5">some description field so it's it's very</font>

401
00:22:08,220 --> 00:22:13,979
<font color="#E5E5E5">easy to extend also</font><font color="#CCCCCC"> Z notified was</font>

402
00:22:12,269 --> 00:22:17,369
chosen for the<font color="#E5E5E5"> encoded because it's</font>

403
00:22:13,979 --> 00:22:22,979
somewhat<font color="#CCCCCC"> more efficient and based 85 and</font>

404
00:22:17,369 --> 00:22:25,978
is<font color="#E5E5E5"> actually staying safe</font><font color="#CCCCCC"> we were talking</font>

405
00:22:22,979 --> 00:22:29,479
about authentication<font color="#E5E5E5"> authentication is</font>

406
00:22:25,979 --> 00:22:34,259
done told directly in the end shake

407
00:22:29,479 --> 00:22:35,879
which are designed to to avoid

408
00:22:34,259 --> 00:22:39,179
<font color="#E5E5E5">completely any kind of amplification</font>

409
00:22:35,879 --> 00:22:43,129
<font color="#E5E5E5">attacks</font><font color="#CCCCCC"> which also means</font><font color="#E5E5E5"> that we cannot</font>

410
00:22:39,179 --> 00:22:45,599
have<font color="#CCCCCC"> zero</font><font color="#E5E5E5"> round-trip connections like</font>

411
00:22:43,129 --> 00:22:49,678
like<font color="#E5E5E5"> would minimal</font><font color="#CCCCCC"> tea and quick</font>

412
00:22:45,599 --> 00:22:53,519
actually<font color="#CCCCCC"> do it's a design choice mainly</font>

413
00:22:49,679 --> 00:22:56,669
because this way we<font color="#CCCCCC"> avoid</font><font color="#E5E5E5"> any problems</font>

414
00:22:53,519 --> 00:22:58,889
with<font color="#E5E5E5"> the roaming stations such there are</font>

415
00:22:56,669 --> 00:23:05,159
<font color="#E5E5E5">three different and shakes which are</font>

416
00:22:58,889 --> 00:23:06,949
taken roughly<font color="#E5E5E5"> from TLS which is well</font>

417
00:23:05,159 --> 00:23:09,479
which requires three<font color="#E5E5E5"> round-trips</font>

418
00:23:06,950 --> 00:23:14,639
<font color="#CCCCCC">then we have a stateful connection which</font>

419
00:23:09,479 --> 00:23:19,499
requires a bit of<font color="#CCCCCC"> a state in the in the</font>

420
00:23:14,639 --> 00:23:21,678
first round<font color="#CCCCCC"> treat</font><font color="#E5E5E5"> it</font><font color="#CCCCCC"> as a it also has a</font>

421
00:23:19,499 --> 00:23:24,029
weaker form of perfect forward secrecy

422
00:23:21,679 --> 00:23:28,019
<font color="#E5E5E5">which means that basically you</font><font color="#CCCCCC"> don't</font>

423
00:23:24,029 --> 00:23:29,940
have<font color="#E5E5E5"> you do</font><font color="#CCCCCC"> not</font><font color="#E5E5E5"> have a one key one</font>

424
00:23:28,019 --> 00:23:32,639
ephemeral key generated by the<font color="#E5E5E5"> server</font>

425
00:23:29,940 --> 00:23:35,369
for every connection<font color="#E5E5E5"> but just one key</font>

426
00:23:32,639 --> 00:23:35,820
with every<font color="#E5E5E5"> connection for like five</font>

427
00:23:35,369 --> 00:23:38,249
minutes

428
00:23:35,820 --> 00:23:40,799
<font color="#E5E5E5">then you drop it and generate a new</font><font color="#CCCCCC"> one</font>

429
00:23:38,249 --> 00:23:44,269
<font color="#E5E5E5">and go on like this it still</font><font color="#CCCCCC"> works both</font>

430
00:23:40,799 --> 00:23:50,908
quick and<font color="#E5E5E5"> minimal</font><font color="#CCCCCC"> T do it like this</font><font color="#E5E5E5"> and</font>

431
00:23:44,269 --> 00:23:55,320
<font color="#CCCCCC">it's not as safe and as well as</font><font color="#E5E5E5"> as</font>

432
00:23:50,909 --> 00:23:57,599
robust as the as<font color="#E5E5E5"> the as having a perfect</font>

433
00:23:55,320 --> 00:24:00,570
forward secrecy<font color="#CCCCCC"> /</font><font color="#E5E5E5"> connection</font><font color="#CCCCCC"> then</font>

434
00:23:57,599 --> 00:24:03,739
finally we have a<font color="#CCCCCC"> one-run</font><font color="#E5E5E5"> trip way to do</font>

435
00:24:00,570 --> 00:24:06,928
the<font color="#E5E5E5"> connection which however needs</font><font color="#CCCCCC"> to</font>

436
00:24:03,739 --> 00:24:09,389
synchronize the the keys with the<font color="#CCCCCC"> NSX so</font>

437
00:24:06,929 --> 00:24:11,309
you continuously roll out new keys<font color="#E5E5E5"> and</font>

438
00:24:09,389 --> 00:24:13,969
this<font color="#E5E5E5"> is the way you do perfect core</font>

439
00:24:11,309 --> 00:24:13,970
secrecy

440
00:24:15,020 --> 00:24:21,050
again this is formally verified through

441
00:24:17,600 --> 00:24:25,300
<font color="#E5E5E5">private models</font><font color="#CCCCCC"> you can have a look</font><font color="#E5E5E5"> at</font>

442
00:24:21,050 --> 00:24:28,040
them it's all it's all on the web and

443
00:24:25,300 --> 00:24:30,169
<font color="#E5E5E5">and the authentication is actually token</font>

444
00:24:28,040 --> 00:24:35,720
based that<font color="#E5E5E5"> was before which makes it</font>

445
00:24:30,170 --> 00:24:40,179
very<font color="#CCCCCC"> easy to</font><font color="#E5E5E5"> to</font><font color="#CCCCCC"> manage</font><font color="#E5E5E5"> and</font><font color="#CCCCCC"> the tokens</font>

446
00:24:35,720 --> 00:24:47,990
are actually just random strings of like

447
00:24:40,179 --> 00:24:51,140
<font color="#CCCCCC">206 and 50c 256</font><font color="#E5E5E5"> bits</font><font color="#CCCCCC"> so there is no sin</font>

448
00:24:47,990 --> 00:24:54,320
<font color="#CCCCCC">required for tokens which is</font><font color="#E5E5E5"> something</font>

449
00:24:51,140 --> 00:24:56,480
nice<font color="#CCCCCC"> that comes from</font><font color="#E5E5E5"> taking out the the</font>

450
00:24:54,320 --> 00:25:02,389
clock requirements the<font color="#CCCCCC"> Crocs</font><font color="#E5E5E5"> and</font><font color="#CCCCCC"> cron</font>

451
00:24:56,480 --> 00:25:06,200
synchronization requirements so another

452
00:25:02,390 --> 00:25:09,740
thing that<font color="#E5E5E5"> we use</font><font color="#CCCCCC"> inside the</font>

453
00:25:06,200 --> 00:25:11,630
authentication is authorization which is

454
00:25:09,740 --> 00:25:16,910
it's<font color="#E5E5E5"> not something</font><font color="#CCCCCC"> that was introduced</font>

455
00:25:11,630 --> 00:25:20,120
but<font color="#E5E5E5"> is something that</font><font color="#CCCCCC"> two</font><font color="#E5E5E5"> out uses very</font>

456
00:25:16,910 --> 00:25:21,250
thoroughly<font color="#E5E5E5"> actually</font><font color="#CCCCCC"> alters another nice</font>

457
00:25:20,120 --> 00:25:24,260
thing<font color="#CCCCCC"> that is an application</font>

458
00:25:21,250 --> 00:25:26,630
<font color="#E5E5E5">authentication where you put the</font><font color="#CCCCCC"> put the</font>

459
00:25:24,260 --> 00:25:29,059
<font color="#E5E5E5">identification and of this application</font>

460
00:25:26,630 --> 00:25:34,730
<font color="#CCCCCC">and the password inside the binary which</font>

461
00:25:29,059 --> 00:25:36,820
certain everybody<font color="#E5E5E5"> can get so but the</font>

462
00:25:34,730 --> 00:25:40,460
<font color="#E5E5E5">doctor authorization part is the scope</font>

463
00:25:36,820 --> 00:25:41,809
<font color="#CCCCCC">so when you when you develop the</font>

464
00:25:40,460 --> 00:25:43,970
application is in<font color="#E5E5E5"> the documentation</font>

465
00:25:41,809 --> 00:25:46,399
stuff like<font color="#E5E5E5"> using user read the file</font>

466
00:25:43,970 --> 00:25:49,850
tried to<font color="#E5E5E5"> limit what the application can</font>

467
00:25:46,400 --> 00:25:56,330
do we<font color="#E5E5E5"> have the same thing in faerie but</font>

468
00:25:49,850 --> 00:25:59,959
we we put it in a lattice to<font color="#E5E5E5"> put the</font>

469
00:25:56,330 --> 00:26:03,020
<font color="#E5E5E5">numerator</font><font color="#CCCCCC"> easily numerator and and walk</font>

470
00:25:59,960 --> 00:26:05,450
through this so while we still have a

471
00:26:03,020 --> 00:26:10,550
device identification not an<font color="#E5E5E5"> application</font>

472
00:26:05,450 --> 00:26:14,090
<font color="#E5E5E5">identification</font><font color="#CCCCCC"> like</font><font color="#E5E5E5"> Wow</font><font color="#CCCCCC"> giving a</font>

473
00:26:10,550 --> 00:26:17,300
<font color="#CCCCCC">hierarchal scope</font><font color="#E5E5E5"> to to the</font><font color="#CCCCCC"> authorization</font>

474
00:26:14,090 --> 00:26:22,178
allows us to tie a<font color="#E5E5E5"> single token to an</font>

475
00:26:17,300 --> 00:26:26,480
authorization<font color="#E5E5E5"> and do fun stuff like</font>

476
00:26:22,179 --> 00:26:28,970
limiting the the token<font color="#E5E5E5"> authorization</font>

477
00:26:26,480 --> 00:26:31,070
without<font color="#E5E5E5"> regenerating the token</font>

478
00:26:28,970 --> 00:26:33,320
multiple points so we can<font color="#E5E5E5"> limit the</font>

479
00:26:31,070 --> 00:26:35,389
<font color="#CCCCCC">authorization about the</font><font color="#E5E5E5"> the</font>

480
00:26:33,320 --> 00:26:37,760
authentication server<font color="#E5E5E5"> because every</font>

481
00:26:35,390 --> 00:26:43,309
authentication works<font color="#E5E5E5"> right through there</font>

482
00:26:37,760 --> 00:26:45,799
and at the client manager<font color="#E5E5E5"> point this</font>

483
00:26:43,309 --> 00:26:47,539
<font color="#E5E5E5">means a</font><font color="#CCCCCC"> couple</font><font color="#E5E5E5"> of different things</font><font color="#CCCCCC"> first</font>

484
00:26:45,799 --> 00:26:50,360
that application absolutely<font color="#CCCCCC"> did not</font>

485
00:26:47,539 --> 00:26:53,150
<font color="#E5E5E5">manage anything related to tokens and</font>

486
00:26:50,360 --> 00:26:57,168
<font color="#CCCCCC">sheikhs authorizations</font><font color="#E5E5E5"> nothing like that</font>

487
00:26:53,150 --> 00:26:59,960
<font color="#E5E5E5">they only get the keys and and the IP</font>

488
00:26:57,169 --> 00:27:03,980
address is to directly connect<font color="#CCCCCC"> to</font><font color="#E5E5E5"> the</font>

489
00:26:59,960 --> 00:27:06,890
<font color="#E5E5E5">service the the</font><font color="#CCCCCC"> latus needs to be</font>

490
00:27:03,980 --> 00:27:09,429
synchronized<font color="#E5E5E5"> between servers between</font>

491
00:27:06,890 --> 00:27:12,980
service authentication server and client

492
00:27:09,429 --> 00:27:16,730
<font color="#CCCCCC">this</font><font color="#E5E5E5"> is because the user so that the</font>

493
00:27:12,980 --> 00:27:19,970
user<font color="#CCCCCC"> and</font><font color="#E5E5E5"> can actively select and limit</font>

494
00:27:16,730 --> 00:27:23,590
the<font color="#CCCCCC"> for example an application that</font>

495
00:27:19,970 --> 00:27:27,500
you're testing<font color="#E5E5E5"> to a</font><font color="#CCCCCC"> specific scope and</font>

496
00:27:23,590 --> 00:27:30,918
the limit is enforced by<font color="#CCCCCC"> the protocol</font>

497
00:27:27,500 --> 00:27:34,220
<font color="#E5E5E5">itself is not a self limit from the from</font>

498
00:27:30,919 --> 00:27:35,900
the application so if you know when

499
00:27:34,220 --> 00:27:40,130
you're testing<font color="#CCCCCC"> third party application</font>

500
00:27:35,900 --> 00:27:46,370
this way you can be even<font color="#CCCCCC"> more safe from</font>

501
00:27:40,130 --> 00:27:50,720
the on the application limit<font color="#CCCCCC"> there is</font>

502
00:27:46,370 --> 00:27:53,239
some hardening inside all<font color="#E5E5E5"> of this all of</font>

503
00:27:50,720 --> 00:27:56,900
this<font color="#E5E5E5"> key exchange and generation of</font>

504
00:27:53,240 --> 00:27:58,370
<font color="#E5E5E5">tokens so for example there are shared</font>

505
00:27:56,900 --> 00:28:00,140
secrets<font color="#CCCCCC"> between the grant</font><font color="#E5E5E5"> manager and</font>

506
00:27:58,370 --> 00:28:03,039
the authentication<font color="#CCCCCC"> server</font><font color="#E5E5E5"> and service</font>

507
00:28:00,140 --> 00:28:07,880
which enable which are basically<font color="#CCCCCC"> just</font>

508
00:28:03,039 --> 00:28:10,809
strings<font color="#E5E5E5"> ducks or the tokens and I am</font>

509
00:28:07,880 --> 00:28:15,380
actively experimenting also with

510
00:28:10,809 --> 00:28:19,658
something like<font color="#CCCCCC"> 30 peers</font><font color="#E5E5E5"> so</font><font color="#CCCCCC"> so that</font><font color="#E5E5E5"> you</font>

511
00:28:15,380 --> 00:28:21,950
can actually check how many<font color="#E5E5E5"> times a</font>

512
00:28:19,659 --> 00:28:24,500
token has been used in the in the

513
00:28:21,950 --> 00:28:26,390
service and avoid<font color="#E5E5E5"> things like</font><font color="#CCCCCC"> token</font>

514
00:28:24,500 --> 00:28:30,049
stealing and being immediately<font color="#E5E5E5"> notified</font>

515
00:28:26,390 --> 00:28:31,669
about that<font color="#E5E5E5"> still just</font><font color="#CCCCCC"> a couple</font><font color="#E5E5E5"> of these</font>

516
00:28:30,049 --> 00:28:35,980
<font color="#E5E5E5">things of these things like putting</font>

517
00:28:31,669 --> 00:28:41,410
another public key in the trust<font color="#E5E5E5"> service</font>

518
00:28:35,980 --> 00:28:44,600
enable us to<font color="#E5E5E5"> completely take away that</font>

519
00:28:41,410 --> 00:28:48,560
the nice<font color="#E5E5E5"> single point of failure that</font><font color="#CCCCCC"> is</font>

520
00:28:44,600 --> 00:28:50,300
the<font color="#E5E5E5"> dent equation server that that would</font>

521
00:28:48,560 --> 00:28:53,030
usually be<font color="#CCCCCC"> the first thing an actor</font>

522
00:28:50,300 --> 00:28:55,220
<font color="#E5E5E5">would</font><font color="#CCCCCC"> target right it</font><font color="#E5E5E5"> Narges all the</font>

523
00:28:53,030 --> 00:28:59,629
authentication<font color="#E5E5E5"> as it has all the</font><font color="#CCCCCC"> tokens</font>

524
00:28:55,220 --> 00:29:03,680
<font color="#E5E5E5">but even if but now thanks to some just</font>

525
00:28:59,630 --> 00:29:07,310
soaring<font color="#E5E5E5"> of</font><font color="#CCCCCC"> share secrets even if you</font>

526
00:29:03,680 --> 00:29:10,120
hack into an authentication server<font color="#CCCCCC"> all</font>

527
00:29:07,310 --> 00:29:15,050
you will manage<font color="#E5E5E5"> to do is to force the</font>

528
00:29:10,120 --> 00:29:17,600
<font color="#CCCCCC">applicant deem the the hosting of</font><font color="#E5E5E5"> the</font>

529
00:29:15,050 --> 00:29:19,639
authentic at<font color="#E5E5E5"> the sysadmin of the</font>

530
00:29:17,600 --> 00:29:25,909
dedication<font color="#E5E5E5"> server to just regenerate the</font>

531
00:29:19,640 --> 00:29:29,060
<font color="#CCCCCC">search secrets</font><font color="#E5E5E5"> which which will also</font>

532
00:29:25,910 --> 00:29:32,090
<font color="#E5E5E5">have a nice side effect</font><font color="#CCCCCC"> that every</font>

533
00:29:29,060 --> 00:29:35,690
client will be<font color="#E5E5E5"> immediately notified of a</font>

534
00:29:32,090 --> 00:29:39,709
<font color="#CCCCCC">breach of things like the service or the</font>

535
00:29:35,690 --> 00:29:43,700
authentication server<font color="#CCCCCC"> so</font><font color="#E5E5E5"> so we'll be</font>

536
00:29:39,710 --> 00:29:45,790
able<font color="#CCCCCC"> to to me immediately know something</font>

537
00:29:43,700 --> 00:29:51,230
like<font color="#E5E5E5"> that and it will also help in</font>

538
00:29:45,790 --> 00:29:54,889
disclosure in this<font color="#CCCCCC"> in in</font><font color="#E5E5E5"> disclosing this</font>

539
00:29:51,230 --> 00:29:58,240
this type of breaches the end result of

540
00:29:54,890 --> 00:30:01,130
<font color="#E5E5E5">all</font><font color="#CCCCCC"> of this again is a formally verified</font>

541
00:29:58,240 --> 00:30:03,560
<font color="#E5E5E5">secure transport were all kind of</font>

542
00:30:01,130 --> 00:30:10,520
transport<font color="#E5E5E5"> included and easily accessible</font>

543
00:30:03,560 --> 00:30:12,500
<font color="#CCCCCC">to</font><font color="#E5E5E5"> the</font><font color="#CCCCCC"> front to the</font><font color="#E5E5E5"> end user the</font><font color="#CCCCCC"> since</font>

544
00:30:10,520 --> 00:30:15,139
every token is managed again by the

545
00:30:12,500 --> 00:30:18,050
client service user only has to decide

546
00:30:15,140 --> 00:30:21,700
whether<font color="#CCCCCC"> to a</font><font color="#E5E5E5"> low one application to to</font>

547
00:30:18,050 --> 00:30:24,560
access what it has to to access<font color="#CCCCCC"> or not</font>

548
00:30:21,700 --> 00:30:28,880
<font color="#E5E5E5">application and services never see again</font>

549
00:30:24,560 --> 00:30:33,830
<font color="#E5E5E5">authentication data so we have less</font><font color="#CCCCCC"> and</font>

550
00:30:28,880 --> 00:30:37,510
less<font color="#E5E5E5"> security related stuff inside the</font>

551
00:30:33,830 --> 00:30:41,810
the applications which<font color="#CCCCCC"> is nicing</font>

552
00:30:37,510 --> 00:30:44,510
we have forced maximum authorization and

553
00:30:41,810 --> 00:30:48,379
yeah<font color="#CCCCCC"> the application</font><font color="#E5E5E5"> server is no longer</font>

554
00:30:44,510 --> 00:30:50,750
<font color="#E5E5E5">a</font><font color="#CCCCCC"> single point of failure so what's the</font>

555
00:30:48,380 --> 00:30:51,740
status<font color="#E5E5E5"> of all of this Liberatore queue</font>

556
00:30:50,750 --> 00:30:54,520
<font color="#E5E5E5">the</font>

557
00:30:51,740 --> 00:30:58,670
<font color="#E5E5E5">forward error correction</font>

558
00:30:54,520 --> 00:31:01,970
<font color="#CCCCCC">implementation of Raptor cue works</font>

559
00:30:58,670 --> 00:31:05,150
I need<font color="#CCCCCC"> the</font><font color="#E5E5E5"> couple of a</font><font color="#CCCCCC"> provost to roll</font>

560
00:31:01,970 --> 00:31:09,830
out new<font color="#CCCCCC"> stable release everything is</font>

561
00:31:05,150 --> 00:31:12,700
algae<font color="#CCCCCC"> pr3</font><font color="#E5E5E5"> furrier the library</font>

562
00:31:09,830 --> 00:31:16,520
implementing it is still not finished

563
00:31:12,700 --> 00:31:20,450
<font color="#CCCCCC">currently and</font><font color="#E5E5E5"> shake works the trust</font>

564
00:31:16,520 --> 00:31:25,220
<font color="#E5E5E5">model works</font><font color="#CCCCCC"> the connection is set up but</font>

565
00:31:20,450 --> 00:31:27,770
we<font color="#CCCCCC"> need to finish the</font><font color="#E5E5E5"> I need to finish</font>

566
00:31:25,220 --> 00:31:30,140
the control flow which is<font color="#E5E5E5"> a big part of</font>

567
00:31:27,770 --> 00:31:31,940
having a<font color="#CCCCCC"> connection but still everything</font>

568
00:31:30,140 --> 00:31:34,640
is<font color="#E5E5E5"> managed through</font><font color="#CCCCCC"> a plug-in and the</font>

569
00:31:31,940 --> 00:31:37,429
architecture which is<font color="#E5E5E5"> very and</font><font color="#CCCCCC"> there</font>

570
00:31:34,640 --> 00:31:42,020
<font color="#E5E5E5">also</font><font color="#CCCCCC"> she</font><font color="#E5E5E5"> can actually add and delete</font>

571
00:31:37,429 --> 00:31:46,850
<font color="#E5E5E5">stuff as you want and experiment with</font>

572
00:31:42,020 --> 00:31:49,309
everything and that's it<font color="#E5E5E5"> everything</font><font color="#CCCCCC"> is</font>

573
00:31:46,850 --> 00:31:56,159
<font color="#E5E5E5">on the</font><font color="#CCCCCC"> website and please</font><font color="#E5E5E5"> have a look at</font>

574
00:31:49,309 --> 00:32:01,799
it and any any questions

575
00:31:56,160 --> 00:32:05,170
[Applause]

576
00:32:01,799 --> 00:32:07,750
yeah thanks a lot<font color="#CCCCCC"> if there are any</font>

577
00:32:05,170 --> 00:32:23,500
<font color="#CCCCCC">questions please go to</font><font color="#E5E5E5"> the microphones</font>

578
00:32:07,750 --> 00:32:26,010
in<font color="#E5E5E5"> front</font><font color="#CCCCCC"> or at the end I know if I can</font>

579
00:32:23,500 --> 00:32:29,650
express this well but I wonder about

580
00:32:26,010 --> 00:32:31,990
using it with an RPC protocol<font color="#CCCCCC"> can</font><font color="#E5E5E5"> you</font>

581
00:32:29,650 --> 00:32:34,299
can you speak up a bit listen<font color="#E5E5E5"> I wonder</font>

582
00:32:31,990 --> 00:32:37,000
<font color="#CCCCCC">about using it with an RPC protocol</font>

583
00:32:34,299 --> 00:32:42,940
<font color="#E5E5E5">where there is requests and the response</font>

584
00:32:37,000 --> 00:32:45,340
and they may be overlapping<font color="#E5E5E5"> on one of</font>

585
00:32:42,940 --> 00:32:47,280
your slides<font color="#E5E5E5"> you said it can be like data</font>

586
00:32:45,340 --> 00:32:50,649
<font color="#E5E5E5">grammar data stream ordered or unordered</font>

587
00:32:47,280 --> 00:32:59,620
<font color="#E5E5E5">by reliable or unreliable</font><font color="#CCCCCC"> yes I'm</font>

588
00:32:50,650 --> 00:33:01,270
thinking<font color="#E5E5E5"> of reliable</font><font color="#CCCCCC"> if</font><font color="#E5E5E5"> a request is a</font>

589
00:32:59,620 --> 00:33:03,520
Datagram<font color="#E5E5E5"> it might be bigger than a</font>

590
00:33:01,270 --> 00:33:05,620
packet though but it does not need<font color="#E5E5E5"> to be</font>

591
00:33:03,520 --> 00:33:07,240
<font color="#E5E5E5">ordered for example you could send out</font>

592
00:33:05,620 --> 00:33:10,809
three requests and then<font color="#E5E5E5"> get</font><font color="#CCCCCC"> the replies</font>

593
00:33:07,240 --> 00:33:11,770
in a different order<font color="#E5E5E5"> yeah yeah over TCP</font>

594
00:33:10,809 --> 00:33:13,178
because you have the head<font color="#CCCCCC"> of line</font>

595
00:33:11,770 --> 00:33:15,879
blocking and yep

596
00:33:13,179 --> 00:33:17,799
so<font color="#E5E5E5"> do you accommodate this</font><font color="#CCCCCC"> and you have</font>

597
00:33:15,880 --> 00:33:19,419
some RPC framework that you suggest

598
00:33:17,799 --> 00:33:22,650
using with this<font color="#E5E5E5"> or the application could</font>

599
00:33:19,419 --> 00:33:25,990
actually<font color="#E5E5E5"> that I</font><font color="#CCCCCC"> I've not gotten to</font>

600
00:33:22,650 --> 00:33:29,980
<font color="#E5E5E5">something like the developing an RPC</font>

601
00:33:25,990 --> 00:33:31,720
protocol the<font color="#CCCCCC"> tailored</font><font color="#E5E5E5"> to this but</font><font color="#CCCCCC"> yeah</font>

602
00:33:29,980 --> 00:33:37,350
you can you can actually<font color="#E5E5E5"> choose per</font>

603
00:33:31,720 --> 00:33:37,350
stream<font color="#E5E5E5"> combination of one of the three</font>

604
00:33:37,740 --> 00:33:48,160
<font color="#E5E5E5">of the three features and just</font><font color="#CCCCCC"> use it</font>

605
00:33:45,070 --> 00:33:51,790
you can actually have also big messages

606
00:33:48,160 --> 00:33:55,020
in in the diagram fashion<font color="#E5E5E5"> because</font><font color="#CCCCCC"> the</font>

607
00:33:51,790 --> 00:33:57,970
message is split between multiple

608
00:33:55,020 --> 00:34:00,370
multiple packets<font color="#E5E5E5"> so you're not</font><font color="#CCCCCC"> limited</font>

609
00:33:57,970 --> 00:34:04,210
to the to the sides of a pocket for<font color="#E5E5E5"> your</font>

610
00:34:00,370 --> 00:34:06,399
<font color="#E5E5E5">daughter</font><font color="#CCCCCC"> come messages</font><font color="#E5E5E5"> and if you lost</font>

611
00:34:04,210 --> 00:34:08,409
one<font color="#E5E5E5"> packet it</font><font color="#CCCCCC"> would we transmit one</font>

612
00:34:06,400 --> 00:34:11,320
packet<font color="#E5E5E5"> not the whole data ground yeah</font>

613
00:34:08,409 --> 00:34:14,250
that's you know that<font color="#E5E5E5"> depends on the</font>

614
00:34:11,320 --> 00:34:17,980
well on<font color="#CCCCCC"> what issues for error correction</font>

615
00:34:14,250 --> 00:34:20,199
<font color="#CCCCCC">and whether you</font><font color="#E5E5E5"> are ever at a</font><font color="#CCCCCC"> Datagram</font>

616
00:34:17,980 --> 00:34:27,600
which is which was a<font color="#E5E5E5"> reliable or</font>

617
00:34:20,199 --> 00:34:32,109
reliable yeah any further<font color="#E5E5E5"> questions</font>

618
00:34:27,600 --> 00:34:34,630
<font color="#CCCCCC">no then thanks once again to Luca in the</font>

619
00:34:32,110 --> 00:34:40,110
warm web

620
00:34:34,630 --> 00:34:52,270
[Applause]

621
00:34:40,110 --> 00:34:52,270
[Music]

