1
00:00:00,030 --> 00:00:21,090
I would like<font color="#E5E5E5"> to ask all</font><font color="#CCCCCC"> of you to</font><font color="#E5E5E5"> come a</font>

2
00:00:18,480 --> 00:00:24,060
bit more<font color="#CCCCCC"> to</font><font color="#E5E5E5"> the front</font><font color="#CCCCCC"> so show some love</font>

3
00:00:21,090 --> 00:00:29,670
<font color="#CCCCCC">to our</font><font color="#E5E5E5"> next speakers it's going to be a</font>

4
00:00:24,060 --> 00:00:34,969
<font color="#E5E5E5">really</font><font color="#CCCCCC"> an exciting talk about a really</font>

5
00:00:29,670 --> 00:00:34,969
<font color="#CCCCCC">exciting research</font><font color="#E5E5E5"> on flip</font><font color="#CCCCCC"> thanks</font><font color="#E5E5E5"> chewy</font>

6
00:00:35,270 --> 00:00:42,300
please welcome Victor<font color="#CCCCCC"> fond of Fame and</font>

7
00:00:38,520 --> 00:00:46,789
<font color="#CCCCCC">Cafe</font><font color="#E5E5E5"> rasathi from the food sack research</font>

8
00:00:42,300 --> 00:00:48,000
group that<font color="#CCCCCC"> was doing</font><font color="#E5E5E5"> research in 2007</font><font color="#CCCCCC"> in</font>

9
00:00:46,789 --> 00:00:52,379
2016

10
00:00:48,000 --> 00:00:54,570
<font color="#E5E5E5">into the raw hammer exploitation and</font><font color="#CCCCCC"> I</font>

11
00:00:52,379 --> 00:00:58,099
managed with the<font color="#CCCCCC"> flipping schooi</font>

12
00:00:54,570 --> 00:01:02,810
<font color="#E5E5E5">technique to actually reply reliably</font>

13
00:00:58,100 --> 00:01:10,140
exploit that<font color="#CCCCCC"> horrible</font><font color="#E5E5E5"> so enjoy</font>

14
00:01:02,810 --> 00:01:12,000
[Applause]

15
00:01:10,140 --> 00:01:15,420
good afternoon everybody

16
00:01:12,000 --> 00:01:17,280
<font color="#CCCCCC">I'm Victor</font><font color="#E5E5E5"> this</font><font color="#CCCCCC"> is cafe</font>

17
00:01:15,420 --> 00:01:19,920
we're from flat<font color="#CCCCCC"> universe that I'm Saddam</font>

18
00:01:17,280 --> 00:01:22,890
<font color="#E5E5E5">and we're going to talk</font><font color="#CCCCCC"> about row hammer</font>

19
00:01:19,920 --> 00:01:26,189
<font color="#E5E5E5">and</font><font color="#CCCCCC"> flipping chewy things</font><font color="#E5E5E5"> research we</font>

20
00:01:22,890 --> 00:01:28,009
did<font color="#E5E5E5"> last year 2016</font><font color="#CCCCCC"> with our</font><font color="#E5E5E5"> research</font>

21
00:01:26,189 --> 00:01:31,229
group<font color="#E5E5E5"> so who are we</font>

22
00:01:28,009 --> 00:01:34,649
well that's me<font color="#E5E5E5"> over there</font><font color="#CCCCCC"> Java</font><font color="#E5E5E5"> is next</font>

23
00:01:31,229 --> 00:01:37,860
to me<font color="#CCCCCC"> other people who were involved in</font>

24
00:01:34,649 --> 00:01:39,689
this research were our professor and it

25
00:01:37,860 --> 00:01:42,060
doesn't<font color="#E5E5E5"> work</font><font color="#CCCCCC"> he's in the</font><font color="#E5E5E5"> middle as</font>

26
00:01:39,689 --> 00:01:45,270
Herbert bus is the bus<font color="#CCCCCC"> of the</font><font color="#E5E5E5"> group</font>

27
00:01:42,060 --> 00:01:47,429
<font color="#CCCCCC">that's why I</font><font color="#E5E5E5"> sculpt Herbert</font><font color="#CCCCCC"> bus next</font><font color="#E5E5E5"> to</font>

28
00:01:45,270 --> 00:01:51,030
<font color="#E5E5E5">him there's Cristiano and then over here</font>

29
00:01:47,429 --> 00:01:54,119
there's Ben who was also<font color="#E5E5E5"> involved and</font>

30
00:01:51,030 --> 00:01:55,439
it's Eric now Eric is<font color="#CCCCCC"> not on his picture</font>

31
00:01:54,119 --> 00:01:58,619
<font color="#CCCCCC">but I think you should be</font><font color="#E5E5E5"> here in the</font>

32
00:01:55,439 --> 00:01:59,788
room<font color="#E5E5E5"> see here in the room Eric no it's</font>

33
00:01:58,619 --> 00:02:02,970
not here<font color="#CCCCCC"> yet</font>

34
00:01:59,789 --> 00:02:05,009
<font color="#E5E5E5">but it was</font><font color="#CCCCCC"> also involved</font><font color="#E5E5E5"> we do a lot of</font>

35
00:02:02,970 --> 00:02:06,750
stuff<font color="#E5E5E5"> this will be about this talk will</font>

36
00:02:05,009 --> 00:02:11,160
be about hardware vulnerabilities but we

37
00:02:06,750 --> 00:02:13,109
also do interesting topic research on

38
00:02:11,160 --> 00:02:15,600
the other topics that<font color="#E5E5E5"> are here</font><font color="#CCCCCC"> so mobile</font>

39
00:02:13,109 --> 00:02:17,190
security is from binary<font color="#CCCCCC"> armoring we do</font>

40
00:02:15,600 --> 00:02:20,180
some more<font color="#E5E5E5"> analysis so</font><font color="#CCCCCC"> we were involved</font>

41
00:02:17,190 --> 00:02:22,260
<font color="#E5E5E5">in</font><font color="#CCCCCC"> taking down the GAMEOVER Zeus botnet</font>

42
00:02:20,180 --> 00:02:25,650
<font color="#CCCCCC">collaboration</font><font color="#E5E5E5"> with the FBI couple years</font>

43
00:02:22,260 --> 00:02:28,578
ago<font color="#CCCCCC"> we also do software</font><font color="#E5E5E5"> testing which</font>

44
00:02:25,650 --> 00:02:32,579
means we do fussing we write buzzers and

45
00:02:28,579 --> 00:02:34,549
many more interesting<font color="#E5E5E5"> stuff</font><font color="#CCCCCC"> but today</font>

46
00:02:32,579 --> 00:02:37,440
<font color="#CCCCCC">will be about</font><font color="#E5E5E5"> flipping</font><font color="#CCCCCC"> shui</font><font color="#E5E5E5"> and</font>

47
00:02:34,549 --> 00:02:39,269
basically you take away methods of today

48
00:02:37,440 --> 00:02:41,700
so after this you<font color="#CCCCCC"> can fall asleep or</font>

49
00:02:39,269 --> 00:02:45,780
move to<font color="#CCCCCC"> another talk it's the following</font>

50
00:02:41,700 --> 00:02:49,410
<font color="#E5E5E5">even</font><font color="#CCCCCC"> if even</font><font color="#E5E5E5"> if we can build perfect</font>

51
00:02:45,780 --> 00:02:54,209
<font color="#E5E5E5">software without any block any Park</font>

52
00:02:49,410 --> 00:02:57,150
whatsoever<font color="#CCCCCC"> a single hardware issue</font><font color="#E5E5E5"> a</font>

53
00:02:54,209 --> 00:03:01,019
single bit flip in your<font color="#E5E5E5"> heart where</font><font color="#CCCCCC"> you</font>

54
00:02:57,150 --> 00:03:04,650
can still compromise it all right so

55
00:03:01,019 --> 00:03:10,400
<font color="#CCCCCC">flip feng shui'd</font><font color="#E5E5E5"> in 2016</font><font color="#CCCCCC"> our research or</font>

56
00:03:04,650 --> 00:03:13,109
group we show<font color="#E5E5E5"> that with single bit flips</font>

57
00:03:10,400 --> 00:03:17,340
we can turn these bit flips into<font color="#E5E5E5"> a</font>

58
00:03:13,109 --> 00:03:19,810
reliable compromise of<font color="#CCCCCC"> the cloud this</font>

59
00:03:17,340 --> 00:03:22,960
was<font color="#E5E5E5"> on</font><font color="#CCCCCC"> in this work here</font>

60
00:03:19,810 --> 00:03:26,210
we can break the browser using<font color="#CCCCCC"> mid flips</font>

61
00:03:22,960 --> 00:03:29,870
which was shown by Eric<font color="#E5E5E5"> and the deed</font><font color="#CCCCCC"> of</font>

62
00:03:26,210 --> 00:03:33,020
paper and we can<font color="#CCCCCC"> also use bit flips who</font>

63
00:03:29,870 --> 00:03:34,730
break your mobile phone and we're going

64
00:03:33,020 --> 00:03:38,530
to<font color="#E5E5E5"> talk about all three</font><font color="#CCCCCC"> of</font><font color="#E5E5E5"> these today</font>

65
00:03:34,730 --> 00:03:42,700
and since we<font color="#CCCCCC"> are in the</font><font color="#E5E5E5"> Netherlands</font><font color="#CCCCCC"> I</font>

66
00:03:38,530 --> 00:03:44,720
wanted<font color="#E5E5E5"> to express</font><font color="#CCCCCC"> that these are all</font>

67
00:03:42,700 --> 00:03:47,810
research papers<font color="#CCCCCC"> that have been published</font>

68
00:03:44,720 --> 00:03:51,050
published<font color="#E5E5E5"> up top venues in computer</font>

69
00:03:47,810 --> 00:03:52,370
security<font color="#CCCCCC"> and</font><font color="#E5E5E5"> they're duds right so I</font>

70
00:03:51,050 --> 00:03:52,910
think<font color="#E5E5E5"> it's something</font><font color="#CCCCCC"> - something</font><font color="#E5E5E5"> to be</font>

71
00:03:52,370 --> 00:03:56,090
proud of

72
00:03:52,910 --> 00:03:59,390
thank you actually in 2016 we were the

73
00:03:56,090 --> 00:04:05,740
<font color="#E5E5E5">best research group in security and we</font>

74
00:03:59,390 --> 00:04:05,739
were better than<font color="#E5E5E5"> MIT I think all right</font>

75
00:04:05,950 --> 00:04:12,019
<font color="#CCCCCC">ok so a bit more</font><font color="#E5E5E5"> arrogance</font><font color="#CCCCCC"> I guess we</font>

76
00:04:10,610 --> 00:04:13,970
<font color="#CCCCCC">are</font><font color="#E5E5E5"> the world at impact we were covered</font>

77
00:04:12,020 --> 00:04:20,299
by many news all<font color="#CCCCCC"> over the world</font>

78
00:04:13,970 --> 00:04:22,340
oh yeah<font color="#CCCCCC"> ok introduction clip thanks</font><font color="#E5E5E5"> Yui</font>

79
00:04:20,298 --> 00:04:23,539
<font color="#E5E5E5">the requirements</font><font color="#CCCCCC"> what do you need if you</font>

80
00:04:22,340 --> 00:04:26,570
want<font color="#CCCCCC"> to</font><font color="#E5E5E5"> do a flip thing should we attack</font>

81
00:04:23,540 --> 00:04:28,130
<font color="#E5E5E5">first you need is a reproducible</font>

82
00:04:26,570 --> 00:04:30,140
<font color="#CCCCCC">hardware bit flip</font><font color="#E5E5E5"> we're going to use</font>

83
00:04:28,130 --> 00:04:33,440
<font color="#CCCCCC">rubber</font><font color="#E5E5E5"> for that I'll talk about it in a</font>

84
00:04:30,140 --> 00:04:37,700
<font color="#E5E5E5">minute and then next is the ability to</font>

85
00:04:33,440 --> 00:04:39,800
<font color="#E5E5E5">target this bit flip so that you can</font>

86
00:04:37,700 --> 00:04:43,280
actually flip a bit in something<font color="#E5E5E5"> that's</font>

87
00:04:39,800 --> 00:04:45,050
interesting<font color="#CCCCCC"> so about drawing more who</font>

88
00:04:43,280 --> 00:04:46,630
<font color="#E5E5E5">here I want to see hands who here is</font>

89
00:04:45,050 --> 00:04:49,010
familiar with<font color="#CCCCCC"> raw hammer</font>

90
00:04:46,630 --> 00:04:50,150
<font color="#E5E5E5">so that means</font><font color="#CCCCCC"> are</font><font color="#E5E5E5"> still some people</font><font color="#CCCCCC"> that</font>

91
00:04:49,010 --> 00:04:52,400
are<font color="#E5E5E5"> not familiar with remember which is</font>

92
00:04:50,150 --> 00:04:54,229
<font color="#CCCCCC">good because I'm</font><font color="#E5E5E5"> going</font><font color="#CCCCCC"> to</font><font color="#E5E5E5"> explain it</font>

93
00:04:52,400 --> 00:04:57,099
<font color="#CCCCCC">we're going to</font><font color="#E5E5E5"> talk about</font><font color="#CCCCCC"> single-sided</font>

94
00:04:54,230 --> 00:05:00,920
<font color="#CCCCCC">remember</font><font color="#E5E5E5"> imagine your DRAM</font><font color="#CCCCCC"> is like this</font>

95
00:04:57,100 --> 00:05:04,670
this<font color="#E5E5E5"> matrix of capacitors storing ones</font>

96
00:05:00,920 --> 00:05:07,070
or zeros or this is hard to see<font color="#E5E5E5"> but</font>

97
00:05:04,670 --> 00:05:08,990
<font color="#CCCCCC">people found that if you're going</font><font color="#E5E5E5"> to</font>

98
00:05:07,070 --> 00:05:11,840
read<font color="#E5E5E5"> from one of these rows in</font><font color="#CCCCCC"> your</font>

99
00:05:08,990 --> 00:05:13,910
memory and<font color="#E5E5E5"> then read something else and</font>

100
00:05:11,840 --> 00:05:17,900
then read from the row again many<font color="#E5E5E5"> many</font>

101
00:05:13,910 --> 00:05:20,480
times<font color="#E5E5E5"> you will</font><font color="#CCCCCC"> see at some point if you</font>

102
00:05:17,900 --> 00:05:22,489
<font color="#CCCCCC">did</font><font color="#E5E5E5"> enough a bit flipping and that is</font>

103
00:05:20,480 --> 00:05:24,530
<font color="#CCCCCC">next</font><font color="#E5E5E5"> to one</font><font color="#CCCCCC"> of</font><font color="#E5E5E5"> these rows just adjacent</font>

104
00:05:22,490 --> 00:05:26,420
to these rows

105
00:05:24,530 --> 00:05:28,400
<font color="#E5E5E5">we call these rows are we running from</font>

106
00:05:26,420 --> 00:05:31,190
we call<font color="#E5E5E5"> these agressor rows and the rows</font>

107
00:05:28,400 --> 00:05:32,150
in which we can flip<font color="#E5E5E5"> a bit is the</font><font color="#CCCCCC"> victim</font>

108
00:05:31,190 --> 00:05:35,599
<font color="#CCCCCC">road</font>

109
00:05:32,150 --> 00:05:37,888
now<font color="#E5E5E5"> it's</font><font color="#CCCCCC"> supportive mentioned that</font>

110
00:05:35,599 --> 00:05:41,699
<font color="#E5E5E5">roarhammer does not allow you to flip</font>

111
00:05:37,889 --> 00:05:43,560
every bit<font color="#E5E5E5"> sometimes with</font><font color="#CCCCCC"> erm maybe not</font>

112
00:05:41,699 --> 00:05:47,789
vulnerable enough so you can<font color="#E5E5E5"> not flip</font>

113
00:05:43,560 --> 00:05:50,669
<font color="#E5E5E5">anything but people found that once you</font>

114
00:05:47,789 --> 00:05:52,889
flip<font color="#E5E5E5"> a bit withdraw hammer you can</font>

115
00:05:50,669 --> 00:05:55,889
<font color="#CCCCCC">actually reproduce</font><font color="#E5E5E5"> it so once you know</font>

116
00:05:52,889 --> 00:05:59,130
<font color="#CCCCCC">that</font><font color="#E5E5E5"> this particular red cell there over</font>

117
00:05:55,889 --> 00:06:01,050
there is vulnerable for<font color="#CCCCCC"> remember you can</font>

118
00:05:59,130 --> 00:06:03,360
store<font color="#E5E5E5"> try to store some important data</font>

119
00:06:01,050 --> 00:06:07,740
there<font color="#CCCCCC"> and then</font><font color="#E5E5E5"> reproduce this to flip a</font>

120
00:06:03,360 --> 00:06:10,830
bit<font color="#CCCCCC"> then people</font><font color="#E5E5E5"> found that well single</font>

121
00:06:07,740 --> 00:06:13,289
<font color="#E5E5E5">double single</font><font color="#CCCCCC"> zero hammer</font><font color="#E5E5E5"> is nice but</font>

122
00:06:10,830 --> 00:06:15,180
<font color="#E5E5E5">you can actually increase your chances</font>

123
00:06:13,289 --> 00:06:18,000
of flipping a bit if<font color="#E5E5E5"> you're going to</font>

124
00:06:15,180 --> 00:06:20,159
sandwich<font color="#E5E5E5"> this victim role by reading</font>

125
00:06:18,000 --> 00:06:26,009
<font color="#CCCCCC">from two aggressor Rose in an</font>

126
00:06:20,159 --> 00:06:28,319
alternating fashion<font color="#CCCCCC"> okay so if you're an</font>

127
00:06:26,009 --> 00:06:29,940
attacker<font color="#E5E5E5"> and you want to do this there</font>

128
00:06:28,319 --> 00:06:32,430
<font color="#E5E5E5">are a few challenges</font><font color="#CCCCCC"> so first thing you</font>

129
00:06:29,940 --> 00:06:36,960
<font color="#E5E5E5">need to do is you need to bypass the</font><font color="#CCCCCC"> cpu</font>

130
00:06:32,430 --> 00:06:39,060
<font color="#CCCCCC">gas as probably</font><font color="#E5E5E5"> most of you know</font><font color="#CCCCCC"> if</font>

131
00:06:36,960 --> 00:06:40,859
you're<font color="#CCCCCC"> reading something from your dear</font>

132
00:06:39,060 --> 00:06:42,509
<font color="#CCCCCC">M memory</font><font color="#E5E5E5"> the CPU is going</font><font color="#CCCCCC"> to read</font>

133
00:06:40,860 --> 00:06:44,789
something with<font color="#CCCCCC"> your</font><font color="#E5E5E5"> memory it's going to</font>

134
00:06:42,509 --> 00:06:49,159
<font color="#E5E5E5">get stored in the cache and we're going</font>

135
00:06:44,789 --> 00:06:51,659
<font color="#CCCCCC">to repeatedly</font><font color="#E5E5E5"> read the same row from DRM</font>

136
00:06:49,159 --> 00:06:53,190
<font color="#CCCCCC">your system</font><font color="#E5E5E5"> is not stupid</font><font color="#CCCCCC"> it will</font>

137
00:06:51,659 --> 00:06:57,479
basically serve everything<font color="#E5E5E5"> from the</font>

138
00:06:53,190 --> 00:07:00,750
cache so we need a way<font color="#CCCCCC"> to tell the</font><font color="#E5E5E5"> cache</font>

139
00:06:57,479 --> 00:07:03,180
to<font color="#E5E5E5"> have to reread one of these rows into</font>

140
00:07:00,750 --> 00:07:04,710
it<font color="#E5E5E5"> to remove it to flush it from the</font>

141
00:07:03,180 --> 00:07:09,120
<font color="#CCCCCC">guest actually</font><font color="#E5E5E5"> and there is an</font>

142
00:07:04,710 --> 00:07:11,489
<font color="#CCCCCC">instruction for</font><font color="#E5E5E5"> that on</font><font color="#CCCCCC"> intel but</font><font color="#E5E5E5"> as</font>

143
00:07:09,120 --> 00:07:12,960
basically does this you you give it an

144
00:07:11,490 --> 00:07:16,830
address<font color="#E5E5E5"> and then it will remove it from</font>

145
00:07:12,960 --> 00:07:18,568
<font color="#E5E5E5">the from the cache</font><font color="#CCCCCC"> another way of</font>

146
00:07:16,830 --> 00:07:21,630
<font color="#CCCCCC">getting your</font><font color="#E5E5E5"> data out of the cache is</font>

147
00:07:18,569 --> 00:07:24,840
simply to read more until<font color="#E5E5E5"> the cache is</font>

148
00:07:21,630 --> 00:07:26,340
full<font color="#E5E5E5"> and at some point it will evict the</font>

149
00:07:24,840 --> 00:07:28,229
address<font color="#CCCCCC"> that we are interested in and</font>

150
00:07:26,340 --> 00:07:32,099
<font color="#E5E5E5">then next time you read it the read will</font>

151
00:07:28,229 --> 00:07:34,020
go through your theorem<font color="#E5E5E5"> okay so the</font>

152
00:07:32,099 --> 00:07:37,830
mechanics<font color="#E5E5E5"> now of a flipping</font><font color="#CCCCCC"> soui attack</font>

153
00:07:34,020 --> 00:07:40,380
is first<font color="#E5E5E5"> do memory templating and</font><font color="#CCCCCC"> with</font>

154
00:07:37,830 --> 00:07:42,060
memory templating we mean<font color="#E5E5E5"> scanning new</font>

155
00:07:40,380 --> 00:07:45,090
memory the entire<font color="#E5E5E5"> memory or whatever you</font>

156
00:07:42,060 --> 00:07:47,880
can get for bit flips

157
00:07:45,090 --> 00:07:50,070
they're useful for<font color="#CCCCCC"> your</font><font color="#E5E5E5"> attack the</font>

158
00:07:47,880 --> 00:07:51,780
second step then<font color="#E5E5E5"> is to land sensitive</font>

159
00:07:50,070 --> 00:07:55,530
data<font color="#E5E5E5"> so something that you can actually</font>

160
00:07:51,780 --> 00:07:59,130
explore it into this region<font color="#CCCCCC"> the page</font><font color="#E5E5E5"> the</font>

161
00:07:55,530 --> 00:08:01,500
cell where<font color="#E5E5E5"> you can flip a bit and then</font>

162
00:07:59,130 --> 00:08:05,639
you reduce<font color="#E5E5E5"> the bit flip and basically</font>

163
00:08:01,500 --> 00:08:07,380
you're done<font color="#E5E5E5"> all</font><font color="#CCCCCC"> right and now gamma</font><font color="#E5E5E5"> is</font>

164
00:08:05,639 --> 00:08:09,540
going<font color="#E5E5E5"> to talk about his work</font><font color="#CCCCCC"> let's</font>

165
00:08:07,380 --> 00:08:13,409
<font color="#E5E5E5">pretend with goosenecks about hammering</font>

166
00:08:09,540 --> 00:08:14,210
a needle in<font color="#E5E5E5"> the</font><font color="#CCCCCC"> super stick thanks</font>

167
00:08:13,410 --> 00:08:16,830
Victor

168
00:08:14,210 --> 00:08:19,680
all right<font color="#E5E5E5"> so these three steps that</font>

169
00:08:16,830 --> 00:08:22,409
Victor<font color="#E5E5E5"> just talked</font><font color="#CCCCCC"> about we're gonna</font>

170
00:08:19,680 --> 00:08:25,530
like show three examples<font color="#E5E5E5"> of</font><font color="#CCCCCC"> how we could</font>

171
00:08:22,410 --> 00:08:27,780
<font color="#CCCCCC">use these steps to compromise different</font>

172
00:08:25,530 --> 00:08:30,260
systems in<font color="#CCCCCC"> different settings so the</font>

173
00:08:27,780 --> 00:08:34,319
first one<font color="#E5E5E5"> is using this primitive to</font>

174
00:08:30,260 --> 00:08:35,968
compromise<font color="#E5E5E5"> a VM in the cloud so imagine</font>

175
00:08:34,320 --> 00:08:38,190
that<font color="#E5E5E5"> you're an attacker and</font><font color="#CCCCCC"> you want to</font>

176
00:08:35,969 --> 00:08:40,500
compromise somebody's<font color="#CCCCCC"> VMs</font><font color="#E5E5E5"> then you have</font>

177
00:08:38,190 --> 00:08:42,450
to start the<font color="#E5E5E5"> VM somewhere</font><font color="#CCCCCC"> that is</font><font color="#E5E5E5"> close</font>

178
00:08:40,500 --> 00:08:46,170
<font color="#E5E5E5">in the same physical</font><font color="#CCCCCC"> machine as their as</font>

179
00:08:42,450 --> 00:08:48,270
<font color="#E5E5E5">the victim and then your goal is that to</font>

180
00:08:46,170 --> 00:08:50,550
flip a bit somewhere<font color="#E5E5E5"> in the memory of</font>

181
00:08:48,270 --> 00:08:53,189
<font color="#E5E5E5">this victim</font><font color="#CCCCCC"> VM</font><font color="#E5E5E5"> so that you could</font>

182
00:08:50,550 --> 00:08:56,550
compromise it so this<font color="#E5E5E5"> is</font><font color="#CCCCCC"> all like the</font>

183
00:08:53,190 --> 00:08:58,110
assumptions of the<font color="#E5E5E5"> attack so that you</font>

184
00:08:56,550 --> 00:08:59,939
basically<font color="#E5E5E5"> want to use raw hammer and</font>

185
00:08:58,110 --> 00:09:01,860
another<font color="#E5E5E5"> feature is called memory</font>

186
00:08:59,940 --> 00:09:04,589
deduplication<font color="#CCCCCC"> to make the attack</font>

187
00:09:01,860 --> 00:09:06,930
<font color="#E5E5E5">possible so memory duplication is this</font>

188
00:09:04,589 --> 00:09:09,209
feature<font color="#E5E5E5"> that some</font><font color="#CCCCCC"> providers use in</font><font color="#E5E5E5"> order</font>

189
00:09:06,930 --> 00:09:11,189
<font color="#E5E5E5">to reduce the memory feed footprint of</font>

190
00:09:09,209 --> 00:09:13,709
their<font color="#E5E5E5"> VMs so you have lots of VMs</font>

191
00:09:11,190 --> 00:09:15,390
<font color="#E5E5E5">running in the cloud and you</font><font color="#CCCCCC"> know most</font>

192
00:09:13,709 --> 00:09:17,130
of<font color="#E5E5E5"> them are running Windows or Linux the</font>

193
00:09:15,390 --> 00:09:20,040
same<font color="#E5E5E5"> software stack and you want to so</font>

194
00:09:17,130 --> 00:09:21,870
like reduce the footprint by making<font color="#CCCCCC"> sure</font>

195
00:09:20,040 --> 00:09:25,709
<font color="#CCCCCC">that they don't</font><font color="#E5E5E5"> store the same copies in</font>

196
00:09:21,870 --> 00:09:27,570
memory<font color="#E5E5E5"> and the idea is that you can</font>

197
00:09:25,709 --> 00:09:30,569
using this primitive<font color="#E5E5E5"> this flip</font><font color="#CCCCCC"> fengxi</font>

198
00:09:27,570 --> 00:09:33,230
primitive you can flip a bit<font color="#E5E5E5"> in the</font>

199
00:09:30,570 --> 00:09:36,480
memory<font color="#E5E5E5"> that is being</font><font color="#CCCCCC"> used</font><font color="#E5E5E5"> by another VM</font>

200
00:09:33,230 --> 00:09:38,190
so I have a question for you so<font color="#CCCCCC"> just for</font>

201
00:09:36,480 --> 00:09:40,470
those<font color="#CCCCCC"> who</font><font color="#E5E5E5"> haven't heard</font><font color="#CCCCCC"> about</font><font color="#E5E5E5"> this</font>

202
00:09:38,190 --> 00:09:44,190
<font color="#CCCCCC">before I want you to think</font><font color="#E5E5E5"> if you could</font>

203
00:09:40,470 --> 00:09:46,170
<font color="#E5E5E5">flip a bit in a</font><font color="#CCCCCC"> VM one bit what bit</font>

204
00:09:44,190 --> 00:09:47,610
would<font color="#E5E5E5"> you flip so that you could</font>

205
00:09:46,170 --> 00:09:50,160
compromise so that<font color="#E5E5E5"> your goal is to</font>

206
00:09:47,610 --> 00:09:52,080
compromise this VM

207
00:09:50,160 --> 00:09:53,550
this victim<font color="#E5E5E5"> VM and you you can do this</font>

208
00:09:52,080 --> 00:09:56,450
<font color="#CCCCCC">by flipping</font><font color="#E5E5E5"> one bit so I want you to</font>

209
00:09:53,550 --> 00:09:56,449
<font color="#CCCCCC">think</font><font color="#E5E5E5"> what would you flip</font>

210
00:09:58,800 --> 00:10:03,219
maybe that<font color="#E5E5E5"> could</font><font color="#CCCCCC"> be so we can we can</font>

211
00:10:01,060 --> 00:10:06,400
<font color="#E5E5E5">discuss this like after so what we chose</font>

212
00:10:03,220 --> 00:10:08,590
and what is possible<font color="#CCCCCC"> and what</font><font color="#E5E5E5"> is</font><font color="#CCCCCC"> not so</font>

213
00:10:06,400 --> 00:10:10,540
you start by templating so the first

214
00:10:08,590 --> 00:10:13,270
step as Victor said is memory templating

215
00:10:10,540 --> 00:10:15,069
how would you template memory<font color="#E5E5E5"> so because</font>

216
00:10:13,270 --> 00:10:17,680
you are<font color="#E5E5E5"> running on the same physical</font>

217
00:10:15,070 --> 00:10:20,410
host<font color="#E5E5E5"> as your victim you can you have</font>

218
00:10:17,680 --> 00:10:22,959
access<font color="#E5E5E5"> to the same physical memory and</font>

219
00:10:20,410 --> 00:10:24,250
the thing<font color="#E5E5E5"> is that as Victor said you</font>

220
00:10:22,960 --> 00:10:26,860
need<font color="#CCCCCC"> to</font><font color="#E5E5E5"> be able</font><font color="#CCCCCC"> to flush the cache</font>

221
00:10:24,250 --> 00:10:28,330
because<font color="#CCCCCC"> to</font><font color="#E5E5E5"> for remember to happen you</font>

222
00:10:26,860 --> 00:10:31,330
have<font color="#E5E5E5"> to read from memory really quickly</font>

223
00:10:28,330 --> 00:10:33,610
and for<font color="#E5E5E5"> this since your route in your</font>

224
00:10:31,330 --> 00:10:35,530
<font color="#E5E5E5">own VM you can use</font><font color="#CCCCCC"> this instruction that</font>

225
00:10:33,610 --> 00:10:37,900
<font color="#E5E5E5">inter provides is called cache flush</font>

226
00:10:35,530 --> 00:10:39,579
that would help you to<font color="#E5E5E5"> flush the cache</font>

227
00:10:37,900 --> 00:10:42,579
and<font color="#E5E5E5"> then you can access use it to access</font>

228
00:10:39,580 --> 00:10:44,590
<font color="#E5E5E5">your own memory really really quickly so</font>

229
00:10:42,580 --> 00:10:46,420
what what the victim does basically

230
00:10:44,590 --> 00:10:48,700
allocates a large physical contiguous

231
00:10:46,420 --> 00:10:50,469
buffer<font color="#E5E5E5"> and uses the cache flush</font>

232
00:10:48,700 --> 00:10:54,280
instruction<font color="#E5E5E5"> to read from memory</font><font color="#CCCCCC"> so</font><font color="#E5E5E5"> you</font>

233
00:10:50,470 --> 00:10:56,700
start reading you check<font color="#CCCCCC"> no</font><font color="#E5E5E5"> flip you do a</font>

234
00:10:54,280 --> 00:10:59,020
bit more<font color="#CCCCCC"> still no flip</font><font color="#E5E5E5"> and then suddenly</font>

235
00:10:56,700 --> 00:11:01,240
you get a bit flip in<font color="#E5E5E5"> your own memory</font>

236
00:10:59,020 --> 00:11:02,890
<font color="#E5E5E5">right but this</font><font color="#CCCCCC"> is in your own memory</font>

237
00:11:01,240 --> 00:11:05,080
<font color="#E5E5E5">right you're a big thing VM so how</font><font color="#CCCCCC"> would</font>

238
00:11:02,890 --> 00:11:10,870
<font color="#CCCCCC">you use this to solve</font><font color="#E5E5E5"> like flip a bit in</font>

239
00:11:05,080 --> 00:11:13,720
a victim<font color="#CCCCCC"> vm and this is where the</font><font color="#E5E5E5"> so</font>

240
00:11:10,870 --> 00:11:16,450
like the deduplication part of the

241
00:11:13,720 --> 00:11:18,520
attack comes into play<font color="#E5E5E5"> so we want to</font>

242
00:11:16,450 --> 00:11:21,370
force our victim to store some sensitive

243
00:11:18,520 --> 00:11:23,470
<font color="#E5E5E5">data</font><font color="#CCCCCC"> in this location that has a bit</font>

244
00:11:21,370 --> 00:11:27,660
flip that once we trigger this bit flip

245
00:11:23,470 --> 00:11:29,650
it allows us<font color="#CCCCCC"> to do a compromise so</font>

246
00:11:27,660 --> 00:11:31,719
that's what we<font color="#CCCCCC"> said used memory</font>

247
00:11:29,650 --> 00:11:34,270
duplication for this and the way it

248
00:11:31,720 --> 00:11:36,250
works is that<font color="#E5E5E5"> so typically you have like</font>

249
00:11:34,270 --> 00:11:40,030
your victim<font color="#CCCCCC"> VM and</font><font color="#E5E5E5"> your attacker</font><font color="#CCCCCC"> VM</font>

250
00:11:36,250 --> 00:11:41,440
typically they have<font color="#E5E5E5"> some data some of</font>

251
00:11:40,030 --> 00:11:42,610
<font color="#CCCCCC">these data are different like you know</font>

252
00:11:41,440 --> 00:11:45,430
<font color="#E5E5E5">if you have a pointer in memory</font>

253
00:11:42,610 --> 00:11:47,020
potentially in your memory page<font color="#E5E5E5"> this</font>

254
00:11:45,430 --> 00:11:48,099
pointer<font color="#CCCCCC"> is different between two</font><font color="#E5E5E5"> VMs and</font>

255
00:11:47,020 --> 00:11:50,350
<font color="#E5E5E5">this is not something</font><font color="#CCCCCC"> that you can</font><font color="#E5E5E5"> do</font>

256
00:11:48,100 --> 00:11:52,720
duplicate but some data for example<font color="#E5E5E5"> here</font>

257
00:11:50,350 --> 00:11:55,060
like this one<font color="#E5E5E5"> these two are</font><font color="#CCCCCC"> the same so</font>

258
00:11:52,720 --> 00:11:57,190
<font color="#CCCCCC">you could as a hypervisor as a cloud</font>

259
00:11:55,060 --> 00:11:59,439
provider<font color="#E5E5E5"> you could just somehow like</font>

260
00:11:57,190 --> 00:12:02,200
store only<font color="#E5E5E5"> one copy that would that</font>

261
00:11:59,440 --> 00:12:03,940
would save you<font color="#E5E5E5"> one page</font><font color="#CCCCCC"> and you do this</font>

262
00:12:02,200 --> 00:12:06,190
<font color="#E5E5E5">for</font><font color="#CCCCCC"> many pages</font><font color="#E5E5E5"> and suddenly instead of</font>

263
00:12:03,940 --> 00:12:08,380
you know<font color="#E5E5E5"> only being able to run</font><font color="#CCCCCC"> 10 VMs</font>

264
00:12:06,190 --> 00:12:09,790
you can run 100 VMs this is quite<font color="#E5E5E5"> good</font>

265
00:12:08,380 --> 00:12:11,760
<font color="#E5E5E5">right because it allows you to make more</font>

266
00:12:09,790 --> 00:12:14,170
money<font color="#E5E5E5"> by running more</font><font color="#CCCCCC"> and more</font>

267
00:12:11,760 --> 00:12:16,210
so yeah so there is a process<font color="#CCCCCC"> that that</font>

268
00:12:14,170 --> 00:12:18,280
goes on in the background<font color="#E5E5E5"> and it scans</font>

269
00:12:16,210 --> 00:12:20,530
<font color="#E5E5E5">for this</font><font color="#CCCCCC"> sort</font><font color="#E5E5E5"> like pages and as soon as</font>

270
00:12:18,280 --> 00:12:23,020
it founds it finds the same copy<font color="#E5E5E5"> it</font>

271
00:12:20,530 --> 00:12:25,600
basically updates the page<font color="#E5E5E5"> tables the</font>

272
00:12:23,020 --> 00:12:29,470
pointer<font color="#E5E5E5"> that the vm's use to point to</font>

273
00:12:25,600 --> 00:12:31,530
this physical<font color="#E5E5E5"> page so</font><font color="#CCCCCC"> now we come back</font>

274
00:12:29,470 --> 00:12:34,270
<font color="#E5E5E5">to the question</font><font color="#CCCCCC"> of what would you flip</font>

275
00:12:31,530 --> 00:12:36,880
so we talked<font color="#CCCCCC"> quite a lot about this</font><font color="#E5E5E5"> and</font>

276
00:12:34,270 --> 00:12:38,949
so one of the<font color="#E5E5E5"> so like</font><font color="#CCCCCC"> things that they</font>

277
00:12:36,880 --> 00:12:40,930
<font color="#CCCCCC">saw</font><font color="#E5E5E5"> like we we came up it that would</font>

278
00:12:38,950 --> 00:12:43,240
allow us<font color="#E5E5E5"> to</font><font color="#CCCCCC"> use this picked remember</font>

279
00:12:40,930 --> 00:12:44,829
this is one bit flip right so and you

280
00:12:43,240 --> 00:12:46,330
<font color="#E5E5E5">have to make sure</font><font color="#CCCCCC"> that the data that you</font>

281
00:12:44,830 --> 00:12:48,010
<font color="#E5E5E5">want to corrupt is exactly at that</font>

282
00:12:46,330 --> 00:12:50,650
<font color="#E5E5E5">location</font><font color="#CCCCCC"> so and then you have like 32</font>

283
00:12:48,010 --> 00:12:52,660
<font color="#CCCCCC">thousand possibilities for a bit flip</font>

284
00:12:50,650 --> 00:12:54,699
between<font color="#E5E5E5"> a 4 kilobyte page which is the</font>

285
00:12:52,660 --> 00:12:58,240
unit<font color="#E5E5E5"> that the system uses</font><font color="#CCCCCC"> to do memory</font>

286
00:12:54,700 --> 00:12:59,980
<font color="#E5E5E5">duplication and also paging so we talked</font>

287
00:12:58,240 --> 00:13:01,480
about<font color="#E5E5E5"> this what could you flip quite</font>

288
00:12:59,980 --> 00:13:05,110
easily and one of the things that came

289
00:13:01,480 --> 00:13:07,800
up<font color="#CCCCCC"> was</font><font color="#E5E5E5"> cryptographic keys so imagine</font>

290
00:13:05,110 --> 00:13:10,480
like for example<font color="#CCCCCC"> you have a RSA key</font>

291
00:13:07,800 --> 00:13:12,819
stored in your VM<font color="#E5E5E5"> and then this is like</font>

292
00:13:10,480 --> 00:13:15,550
<font color="#CCCCCC">imagine if</font><font color="#E5E5E5"> you have a 4 kilobyte so if</font>

293
00:13:12,820 --> 00:13:17,290
you have<font color="#E5E5E5"> an RSA</font><font color="#CCCCCC"> 4,000</font><font color="#E5E5E5"> bits it expands</font>

294
00:13:15,550 --> 00:13:19,120
quite a bit of a memory page so these

295
00:13:17,290 --> 00:13:22,510
are like<font color="#E5E5E5"> potentials that you could use</font>

296
00:13:19,120 --> 00:13:24,520
to<font color="#E5E5E5"> fill up a bit in an in an RSA key</font><font color="#CCCCCC"> and</font>

297
00:13:22,510 --> 00:13:26,439
the other<font color="#E5E5E5"> option would</font><font color="#CCCCCC"> be a</font><font color="#E5E5E5"> domain name</font>

298
00:13:24,520 --> 00:13:28,689
<font color="#E5E5E5">so and we have</font><font color="#CCCCCC"> two attacks I'm gonna</font>

299
00:13:26,440 --> 00:13:30,100
discuss how we use this<font color="#CCCCCC"> sorry tripping</font>

300
00:13:28,690 --> 00:13:34,420
in these<font color="#E5E5E5"> things to compromise this</font>

301
00:13:30,100 --> 00:13:37,410
victim<font color="#CCCCCC"> VM</font><font color="#E5E5E5"> all right so let's talk about</font>

302
00:13:34,420 --> 00:13:40,120
<font color="#E5E5E5">how we use this to do the</font><font color="#CCCCCC"> compromise</font>

303
00:13:37,410 --> 00:13:43,000
<font color="#E5E5E5">using the these bit flips to compromise</font>

304
00:13:40,120 --> 00:13:45,520
<font color="#CCCCCC">OpenSSH</font><font color="#E5E5E5"> so how</font><font color="#CCCCCC"> many of</font><font color="#E5E5E5"> you know about</font>

305
00:13:43,000 --> 00:13:46,840
authorized keys<font color="#CCCCCC"> I hope many people</font><font color="#E5E5E5"> yeah</font>

306
00:13:45,520 --> 00:13:49,120
this is something<font color="#CCCCCC"> that we all used right</font>

307
00:13:46,840 --> 00:13:50,650
so it makes it much easier we don't<font color="#E5E5E5"> you</font>

308
00:13:49,120 --> 00:13:53,260
don't have<font color="#E5E5E5"> to enter our passwords all</font>

309
00:13:50,650 --> 00:13:56,170
the time so<font color="#E5E5E5"> there's this file in</font><font color="#CCCCCC"> your</font>

310
00:13:53,260 --> 00:13:59,650
home folder that you could store<font color="#CCCCCC"> your</font>

311
00:13:56,170 --> 00:14:01,990
public key there and<font color="#CCCCCC"> and then from then</font>

312
00:13:59,650 --> 00:14:03,130
on<font color="#E5E5E5"> by showing the private key and doing</font>

313
00:14:01,990 --> 00:14:06,750
a<font color="#E5E5E5"> challenge and response with the</font>

314
00:14:03,130 --> 00:14:10,150
OpenSSH server you can just<font color="#E5E5E5"> log in and</font>

315
00:14:06,750 --> 00:14:12,340
<font color="#CCCCCC">one</font><font color="#E5E5E5"> of the properties</font><font color="#CCCCCC"> of this</font><font color="#E5E5E5"> authorized</font>

316
00:14:10,150 --> 00:14:13,840
keys file is<font color="#CCCCCC"> that so basically if</font><font color="#E5E5E5"> they</font>

317
00:14:12,340 --> 00:14:15,370
<font color="#E5E5E5">stopped so the public key that you store</font>

318
00:14:13,840 --> 00:14:17,170
in there is<font color="#E5E5E5"> that the attacker</font><font color="#CCCCCC"> and</font>

319
00:14:15,370 --> 00:14:18,970
<font color="#E5E5E5">attacker would not be able to guess</font>

320
00:14:17,170 --> 00:14:21,280
these so<font color="#E5E5E5"> this public key is made out of</font>

321
00:14:18,970 --> 00:14:22,780
two<font color="#E5E5E5"> prime numbers</font><font color="#CCCCCC"> and and these</font><font color="#E5E5E5"> two</font>

322
00:14:21,280 --> 00:14:25,120
prime<font color="#E5E5E5"> numbers</font><font color="#CCCCCC"> that are multiplied</font>

323
00:14:22,780 --> 00:14:27,850
together<font color="#E5E5E5"> and it's a hard problem</font><font color="#CCCCCC"> to</font>

324
00:14:25,120 --> 00:14:30,220
factorize<font color="#E5E5E5"> these two so once you</font><font color="#CCCCCC"> can't</font>

325
00:14:27,850 --> 00:14:31,899
<font color="#E5E5E5">factorize this these two numbers then</font>

326
00:14:30,220 --> 00:14:39,939
<font color="#CCCCCC">you can easily like generate a private</font>

327
00:14:31,899 --> 00:14:42,009
key and then use<font color="#CCCCCC"> it to login right</font><font color="#E5E5E5"> so we</font>

328
00:14:39,939 --> 00:14:44,529
target this thing<font color="#E5E5E5"> this public key and</font>

329
00:14:42,009 --> 00:14:46,839
this is<font color="#CCCCCC"> usually on disk but as soon</font><font color="#E5E5E5"> as</font>

330
00:14:44,529 --> 00:14:48,399
you start a<font color="#E5E5E5"> SSH connection that OpenSSH</font>

331
00:14:46,839 --> 00:14:50,559
server reads these files<font color="#E5E5E5"> and brings it</font>

332
00:14:48,399 --> 00:14:52,089
<font color="#CCCCCC">to memory</font><font color="#E5E5E5"> and memory is something</font><font color="#CCCCCC"> that</font>

333
00:14:50,559 --> 00:14:55,839
you can trust anymore<font color="#E5E5E5"> because you can</font>

334
00:14:52,089 --> 00:14:57,160
flip bits<font color="#E5E5E5"> in the memory so typically as</font>

335
00:14:55,839 --> 00:14:59,290
I said it's<font color="#E5E5E5"> quite hard to factorize</font>

336
00:14:57,160 --> 00:15:02,350
<font color="#CCCCCC">these these</font><font color="#E5E5E5"> two numbers but once you do</font>

337
00:14:59,290 --> 00:15:03,939
a bit flip it suddenly becomes much much

338
00:15:02,350 --> 00:15:06,309
<font color="#E5E5E5">easier to factorize</font><font color="#CCCCCC"> it so instead</font><font color="#E5E5E5"> of</font>

339
00:15:03,939 --> 00:15:08,680
<font color="#E5E5E5">being two primers you do</font><font color="#CCCCCC"> crop</font><font color="#E5E5E5"> this so</font>

340
00:15:06,309 --> 00:15:10,540
like RSA key<font color="#E5E5E5"> suddenly it becomes a</font>

341
00:15:08,680 --> 00:15:12,370
<font color="#CCCCCC">multiplication of many</font><font color="#E5E5E5"> Prime's which</font>

342
00:15:10,540 --> 00:15:15,219
makes it much much easier<font color="#E5E5E5"> to factorize</font>

343
00:15:12,370 --> 00:15:18,040
<font color="#CCCCCC">it so typically like this factorization</font>

344
00:15:15,220 --> 00:15:20,110
is shown to take you know a<font color="#CCCCCC"> hundreds</font>

345
00:15:18,040 --> 00:15:22,329
maybe if not hundreds of thousands<font color="#E5E5E5"> of</font>

346
00:15:20,110 --> 00:15:24,759
years<font color="#E5E5E5"> to actually factorize a 4k or a</font>

347
00:15:22,329 --> 00:15:26,589
psyche<font color="#E5E5E5"> but once you do this bit flip as</font>

348
00:15:24,759 --> 00:15:27,699
we<font color="#E5E5E5"> show in</font><font color="#CCCCCC"> our paper it actually</font>

349
00:15:26,589 --> 00:15:29,199
<font color="#CCCCCC">suddenly becomes like a matter of</font>

350
00:15:27,699 --> 00:15:31,809
seconds or even minutes to actually

351
00:15:29,199 --> 00:15:33,729
<font color="#E5E5E5">factorize it to all its building</font><font color="#CCCCCC"> blocks</font>

352
00:15:31,809 --> 00:15:35,649
building numbers prime numbers and<font color="#E5E5E5"> once</font>

353
00:15:33,730 --> 00:15:40,329
you have<font color="#E5E5E5"> that they could easily</font><font color="#CCCCCC"> ssh to</font>

354
00:15:35,649 --> 00:15:41,769
the victim vm now you could say so this

355
00:15:40,329 --> 00:15:43,269
is<font color="#E5E5E5"> this is a nice attack so</font><font color="#CCCCCC"> we actually</font>

356
00:15:41,769 --> 00:15:45,399
executed<font color="#E5E5E5"> this and let me show that it</font>

357
00:15:43,269 --> 00:15:47,139
<font color="#E5E5E5">could compromise the victim vm but one</font>

358
00:15:45,399 --> 00:15:48,699
<font color="#E5E5E5">problem with</font><font color="#CCCCCC"> it that</font><font color="#E5E5E5"> you might say that</font>

359
00:15:47,139 --> 00:15:50,139
<font color="#CCCCCC">it's</font><font color="#E5E5E5"> not a zero knowledge attack right</font>

360
00:15:48,699 --> 00:15:53,258
so you<font color="#E5E5E5"> need to know the</font><font color="#CCCCCC"> public key of</font>

361
00:15:50,139 --> 00:15:55,269
your<font color="#E5E5E5"> vm</font><font color="#CCCCCC"> I mean your victim vm</font><font color="#E5E5E5"> there is</font>

362
00:15:53,259 --> 00:15:57,610
github so if you know<font color="#E5E5E5"> okay this is the</font>

363
00:15:55,269 --> 00:15:58,540
so like admin that is using this<font color="#CCCCCC"> vm</font><font color="#E5E5E5"> you</font>

364
00:15:57,610 --> 00:16:00,910
could go<font color="#E5E5E5"> through</font><font color="#CCCCCC"> github that</font>

365
00:15:58,540 --> 00:16:02,829
automatically uploads your public<font color="#CCCCCC"> key so</font>

366
00:16:00,910 --> 00:16:04,209
there are like<font color="#E5E5E5"> some ways to get this but</font>

367
00:16:02,829 --> 00:16:05,589
wouldn't it<font color="#E5E5E5"> be nice if you could</font>

368
00:16:04,209 --> 00:16:06,399
compromise the<font color="#CCCCCC"> VM without knowing</font>

369
00:16:05,589 --> 00:16:08,679
anything about<font color="#E5E5E5"> it</font>

370
00:16:06,399 --> 00:16:12,449
<font color="#CCCCCC">and this is what the second attack is</font>

371
00:16:08,679 --> 00:16:14,439
about<font color="#E5E5E5"> so we use the bit flipping to</font>

372
00:16:12,449 --> 00:16:14,829
<font color="#E5E5E5">introduce the</font><font color="#CCCCCC"> flip</font><font color="#E5E5E5"> actually in two</font>

373
00:16:14,439 --> 00:16:17,139
rounds

374
00:16:14,829 --> 00:16:19,420
so the first<font color="#CCCCCC"> on</font><font color="#E5E5E5"> round two will</font><font color="#CCCCCC"> be bit in</font>

375
00:16:17,139 --> 00:16:21,459
the domain<font color="#CCCCCC"> name and then</font><font color="#E5E5E5"> the second</font>

376
00:16:19,420 --> 00:16:24,969
round in a cryptographic<font color="#E5E5E5"> key</font><font color="#CCCCCC"> too so like</font>

377
00:16:21,459 --> 00:16:27,429
make<font color="#E5E5E5"> this compromise happen so typically</font>

378
00:16:24,970 --> 00:16:30,220
when you do like an update update<font color="#E5E5E5"> right</font>

379
00:16:27,429 --> 00:16:32,439
<font color="#E5E5E5">there is this file that sources at least</font>

380
00:16:30,220 --> 00:16:34,720
that<font color="#E5E5E5"> whole list of these domain names</font>

381
00:16:32,439 --> 00:16:37,449
<font color="#E5E5E5">right that your updates are coming</font><font color="#CCCCCC"> from</font>

382
00:16:34,720 --> 00:16:38,800
like ubuntu.com<font color="#CCCCCC"> or if you're using</font><font color="#E5E5E5"> DB</font><font color="#CCCCCC"> n</font>

383
00:16:37,449 --> 00:16:40,750
<font color="#CCCCCC">DB ENCOM</font>

384
00:16:38,800 --> 00:16:42,609
there's also on<font color="#CCCCCC"> Windows and</font><font color="#E5E5E5"> Android</font>

385
00:16:40,750 --> 00:16:46,149
there are these URLs that that people

386
00:16:42,610 --> 00:16:48,040
<font color="#CCCCCC">use</font><font color="#E5E5E5"> to basically fetch their updates and</font>

387
00:16:46,149 --> 00:16:50,620
once you do a bit flipped<font color="#E5E5E5"> in this file</font>

388
00:16:48,040 --> 00:16:53,579
certainly<font color="#E5E5E5"> your Ubuntu</font><font color="#CCCCCC"> com becomes</font>

389
00:16:50,620 --> 00:16:56,399
something<font color="#E5E5E5"> like</font><font color="#CCCCCC"> boot camp</font><font color="#E5E5E5"> for example and</font>

390
00:16:53,580 --> 00:16:59,110
<font color="#E5E5E5">and then the victim is</font><font color="#CCCCCC"> gonna</font><font color="#E5E5E5"> go to this</font>

391
00:16:56,399 --> 00:17:03,190
website and<font color="#E5E5E5"> get their packages from</font>

392
00:16:59,110 --> 00:17:04,540
there<font color="#E5E5E5"> but we should be good right</font>

393
00:17:03,190 --> 00:17:05,679
<font color="#CCCCCC">because these packages are signed so</font>

394
00:17:04,540 --> 00:17:06,970
people have thought<font color="#CCCCCC"> about</font><font color="#E5E5E5"> these people</font>

395
00:17:05,679 --> 00:17:09,130
<font color="#E5E5E5">have been</font><font color="#CCCCCC"> doing lots of these network</font>

396
00:17:06,970 --> 00:17:10,439
<font color="#E5E5E5">attacks to</font><font color="#CCCCCC"> make sure that your VM or</font>

397
00:17:09,130 --> 00:17:13,120
your system<font color="#E5E5E5"> goes</font><font color="#CCCCCC"> to a malicious</font>

398
00:17:10,439 --> 00:17:15,220
<font color="#E5E5E5">repository to download their packages so</font>

399
00:17:13,119 --> 00:17:17,020
they said<font color="#E5E5E5"> okay how can we fix this we do</font>

400
00:17:15,220 --> 00:17:18,970
end-to-end<font color="#E5E5E5"> cryptography right we sign</font>

401
00:17:17,020 --> 00:17:21,819
<font color="#E5E5E5">the packages and then once the packages</font>

402
00:17:18,970 --> 00:17:23,650
<font color="#E5E5E5">are signed</font><font color="#CCCCCC"> there shouldn't be any way</font>

403
00:17:21,819 --> 00:17:25,750
<font color="#E5E5E5">for the victim can check this and then</font>

404
00:17:23,650 --> 00:17:28,270
it wouldn't install these packages<font color="#CCCCCC"> once</font>

405
00:17:25,750 --> 00:17:32,890
it<font color="#CCCCCC"> knows that the signatures don't match</font>

406
00:17:28,270 --> 00:17:36,070
right<font color="#CCCCCC"> but fortunately we could do a bit</font>

407
00:17:32,890 --> 00:17:37,990
flip in<font color="#E5E5E5"> the</font><font color="#CCCCCC"> GPG key that the victim</font><font color="#E5E5E5"> uses</font>

408
00:17:36,070 --> 00:17:39,909
to verify<font color="#CCCCCC"> these packages so this is the</font>

409
00:17:37,990 --> 00:17:42,700
same it's the<font color="#E5E5E5"> same as RSA so once we do</font>

410
00:17:39,910 --> 00:17:44,740
a bit flip in there<font color="#E5E5E5"> we could again</font>

411
00:17:42,700 --> 00:17:45,910
<font color="#E5E5E5">calculate</font><font color="#CCCCCC"> all these prime numbers and</font>

412
00:17:44,740 --> 00:17:48,190
<font color="#E5E5E5">then we could use</font><font color="#CCCCCC"> it to sign the</font>

413
00:17:45,910 --> 00:17:50,620
packages<font color="#CCCCCC"> so in the</font><font color="#E5E5E5"> first step we</font><font color="#CCCCCC"> flip a</font>

414
00:17:48,190 --> 00:17:52,780
bit<font color="#E5E5E5"> in the victim's</font><font color="#CCCCCC"> vm to go to our</font>

415
00:17:50,620 --> 00:17:56,199
repository<font color="#CCCCCC"> the second stage we flip a</font>

416
00:17:52,780 --> 00:17:58,270
bit in the<font color="#E5E5E5"> so like this file so</font><font color="#CCCCCC"> that the</font>

417
00:17:56,200 --> 00:18:00,309
package the malicious package that that

418
00:17:58,270 --> 00:18:02,770
we want the victim to install like for

419
00:18:00,309 --> 00:18:04,720
example<font color="#CCCCCC"> a new OpenSSH or coreutils or</font>

420
00:18:02,770 --> 00:18:06,970
whatever that<font color="#E5E5E5"> we want to backdoor</font><font color="#CCCCCC"> we use</font>

421
00:18:04,720 --> 00:18:08,440
those private key this new private key

422
00:18:06,970 --> 00:18:10,120
<font color="#E5E5E5">to sign it so that the victim would</font>

423
00:18:08,440 --> 00:18:13,059
<font color="#E5E5E5">trust it and install it the way we</font>

424
00:18:10,120 --> 00:18:15,280
wanted<font color="#CCCCCC"> to so</font><font color="#E5E5E5"> we did all</font><font color="#CCCCCC"> of this</font><font color="#E5E5E5"> and this</font>

425
00:18:13,059 --> 00:18:17,309
<font color="#E5E5E5">attack also worked and so we were a bit</font>

426
00:18:15,280 --> 00:18:20,050
worried so we<font color="#E5E5E5"> wanted</font><font color="#CCCCCC"> to make sure</font><font color="#E5E5E5"> that</font>

427
00:18:17,309 --> 00:18:22,600
<font color="#E5E5E5">yeah</font><font color="#CCCCCC"> nobody</font><font color="#E5E5E5"> is harmed by this attack so</font>

428
00:18:20,050 --> 00:18:24,550
we<font color="#CCCCCC"> contacted ncsc and they did a really</font>

429
00:18:22,600 --> 00:18:26,080
really<font color="#E5E5E5"> good</font><font color="#CCCCCC"> job of disclosing</font><font color="#E5E5E5"> these</font>

430
00:18:24,550 --> 00:18:28,419
issues because this is some issue that

431
00:18:26,080 --> 00:18:30,870
like affects all<font color="#CCCCCC"> the layers</font><font color="#E5E5E5"> of the stack</font>

432
00:18:28,420 --> 00:18:33,910
it affects your DRAM it affects your

433
00:18:30,870 --> 00:18:37,120
your operating system<font color="#E5E5E5"> potentially could</font>

434
00:18:33,910 --> 00:18:41,679
be like affected by this your

435
00:18:37,120 --> 00:18:43,959
cryptographic<font color="#E5E5E5"> library open</font><font color="#CCCCCC"> gbg or SSH</font>

436
00:18:41,679 --> 00:18:45,429
could be affected by this<font color="#E5E5E5"> so we</font>

437
00:18:43,960 --> 00:18:47,860
contacted<font color="#E5E5E5"> those who</font><font color="#CCCCCC"> so like make sure</font>

438
00:18:45,429 --> 00:18:49,840
that they would do<font color="#E5E5E5"> something</font><font color="#CCCCCC"> about it</font><font color="#E5E5E5"> we</font>

439
00:18:47,860 --> 00:18:51,330
also bought all<font color="#CCCCCC"> of these domains so</font><font color="#E5E5E5"> that</font>

440
00:18:49,840 --> 00:18:53,189
<font color="#E5E5E5">people could</font><font color="#CCCCCC"> not do</font>

441
00:18:51,330 --> 00:18:56,820
and<font color="#E5E5E5"> attack</font><font color="#CCCCCC"> anymore using</font><font color="#E5E5E5"> these domains</font>

442
00:18:53,190 --> 00:18:58,470
<font color="#E5E5E5">and we gave this</font><font color="#CCCCCC"> too so like at some</font>

443
00:18:56,820 --> 00:19:00,960
<font color="#CCCCCC">point Interpol</font><font color="#E5E5E5"> took over and know that</font>

444
00:18:58,470 --> 00:19:03,210
the domains are basically handed<font color="#E5E5E5"> right</font>

445
00:19:00,960 --> 00:19:05,100
by them so that<font color="#CCCCCC"> people would not be able</font>

446
00:19:03,210 --> 00:19:08,190
<font color="#CCCCCC">to</font><font color="#E5E5E5"> abuse</font><font color="#CCCCCC"> these domains to do a Filipina</font>

447
00:19:05,100 --> 00:19:12,090
attack<font color="#E5E5E5"> in VMs</font><font color="#CCCCCC"> and it was</font><font color="#E5E5E5"> also nominated</font>

448
00:19:08,190 --> 00:19:14,639
for<font color="#E5E5E5"> a pony the best cryptographic attack</font>

449
00:19:12,090 --> 00:19:16,918
<font color="#E5E5E5">but we were up against shattered which</font>

450
00:19:14,639 --> 00:19:18,988
is I think<font color="#CCCCCC"> like much more impactful so</font>

451
00:19:16,919 --> 00:19:23,429
we didn't actually so shattered got the

452
00:19:18,989 --> 00:19:25,409
<font color="#CCCCCC">award so this was the</font><font color="#E5E5E5"> example that</font>

453
00:19:23,429 --> 00:19:28,830
usefully<font color="#CCCCCC"> fengxi</font><font color="#E5E5E5"> to compromise</font><font color="#CCCCCC"> cloth the</font>

454
00:19:25,409 --> 00:19:32,789
ends<font color="#E5E5E5"> now we also use the same principle</font>

455
00:19:28,830 --> 00:19:36,840
to compromise<font color="#E5E5E5"> the browser</font><font color="#CCCCCC"> so</font><font color="#E5E5E5"> the attack</font>

456
00:19:32,789 --> 00:19:39,029
is<font color="#E5E5E5"> called D</font><font color="#CCCCCC"> dupe</font><font color="#E5E5E5"> s machina</font><font color="#CCCCCC"> and that the</font>

457
00:19:36,840 --> 00:19:41,279
point that<font color="#CCCCCC"> s machina wants to make is</font>

458
00:19:39,029 --> 00:19:44,220
<font color="#CCCCCC">that you</font><font color="#E5E5E5"> could compromise a browser and</font>

459
00:19:41,279 --> 00:19:45,929
to end without<font color="#E5E5E5"> any software</font>

460
00:19:44,220 --> 00:19:50,700
vulnerabilities so you go to a website

461
00:19:45,929 --> 00:19:53,450
and then you use so like a side<font color="#E5E5E5"> channel</font>

462
00:19:50,700 --> 00:19:55,950
attack which I'm<font color="#E5E5E5"> not going to talk about</font>

463
00:19:53,450 --> 00:19:57,840
today but I'm<font color="#CCCCCC"> gonna use the information</font>

464
00:19:55,950 --> 00:20:00,210
<font color="#E5E5E5">that it provides to basically</font><font color="#CCCCCC"> lick some</font>

465
00:19:57,840 --> 00:20:02,070
pointers<font color="#E5E5E5"> and then we use the leaked</font>

466
00:20:00,210 --> 00:20:04,049
pointers to do a<font color="#CCCCCC"> flipping Feng Shui</font>

467
00:20:02,070 --> 00:20:07,408
attack<font color="#CCCCCC"> to corrupt these pointers - so</font>

468
00:20:04,049 --> 00:20:08,850
like<font color="#E5E5E5"> compromised the browser</font><font color="#CCCCCC"> so and none</font>

469
00:20:07,409 --> 00:20:10,919
<font color="#CCCCCC">of these things</font><font color="#E5E5E5"> there is</font><font color="#CCCCCC"> no</font><font color="#E5E5E5"> bug in edge</font>

470
00:20:08,850 --> 00:20:12,779
but using this flip function primitive

471
00:20:10,919 --> 00:20:15,019
and the<font color="#E5E5E5"> bit of side channel we could</font>

472
00:20:12,779 --> 00:20:18,029
basically<font color="#CCCCCC"> compromise the browser and we</font>

473
00:20:15,019 --> 00:20:19,529
<font color="#CCCCCC">do</font><font color="#E5E5E5"> this all from JavaScript which sorts</font>

474
00:20:18,029 --> 00:20:23,399
or shows like this<font color="#E5E5E5"> is actually quite</font>

475
00:20:19,529 --> 00:20:25,049
quite dangerous<font color="#CCCCCC"> so and I'm gonna again</font>

476
00:20:23,399 --> 00:20:27,899
<font color="#CCCCCC">go through</font><font color="#E5E5E5"> the three steps of how the</font>

477
00:20:25,049 --> 00:20:29,609
attacker would go through to be<font color="#E5E5E5"> able to</font>

478
00:20:27,899 --> 00:20:33,629
compromise the browser using the<font color="#CCCCCC"> flip</font>

479
00:20:29,609 --> 00:20:34,980
<font color="#CCCCCC">Frankie primitives so in the</font><font color="#E5E5E5"> first stage</font>

480
00:20:33,629 --> 00:20:36,389
we<font color="#E5E5E5"> have</font><font color="#CCCCCC"> to find bit flips right you have</font>

481
00:20:34,980 --> 00:20:38,159
<font color="#CCCCCC">to template the memory to find which</font>

482
00:20:36,389 --> 00:20:42,570
locations in memory<font color="#E5E5E5"> are vulnerable to</font>

483
00:20:38,159 --> 00:20:44,340
row hammer<font color="#CCCCCC"> and in the</font><font color="#E5E5E5"> previous example</font>

484
00:20:42,570 --> 00:20:46,499
it was quite easy<font color="#E5E5E5"> right we could just</font>

485
00:20:44,340 --> 00:20:48,119
use cache<font color="#CCCCCC"> flash instruction but in</font>

486
00:20:46,499 --> 00:20:49,769
JavaScript<font color="#E5E5E5"> you are quite</font><font color="#CCCCCC"> limited right</font>

487
00:20:48,119 --> 00:20:52,080
we don't<font color="#E5E5E5"> even have like virtual</font>

488
00:20:49,769 --> 00:20:54,600
addresses<font color="#E5E5E5"> right everything is so like in</font>

489
00:20:52,080 --> 00:20:57,539
<font color="#E5E5E5">this high level JavaScript language so</font>

490
00:20:54,600 --> 00:20:59,809
we<font color="#E5E5E5"> can do easy cash flushing but instead</font>

491
00:20:57,539 --> 00:21:01,889
you could<font color="#E5E5E5"> easily read a bunch of other</font>

492
00:20:59,809 --> 00:21:02,810
location in memory<font color="#E5E5E5"> that</font><font color="#CCCCCC"> would flush</font>

493
00:21:01,889 --> 00:21:04,340
there

494
00:21:02,810 --> 00:21:06,350
at the location that<font color="#CCCCCC"> we want</font><font color="#E5E5E5"> to hammer</font>

495
00:21:04,340 --> 00:21:09,260
<font color="#CCCCCC">so you go</font><font color="#E5E5E5"> on</font><font color="#CCCCCC"> and access some other</font>

496
00:21:06,350 --> 00:21:10,909
location<font color="#E5E5E5"> in memory and then you access</font>

497
00:21:09,260 --> 00:21:13,820
your target and<font color="#E5E5E5"> then this would allow</font>

498
00:21:10,910 --> 00:21:19,010
you to<font color="#E5E5E5"> select rigor the</font><font color="#CCCCCC"> bid flips to do</font>

499
00:21:13,820 --> 00:21:20,990
the templating<font color="#E5E5E5"> part so and your target</font>

500
00:21:19,010 --> 00:21:23,810
is a JavaScript array<font color="#E5E5E5"> so I don't know</font>

501
00:21:20,990 --> 00:21:25,640
how many<font color="#E5E5E5"> of you</font><font color="#CCCCCC"> know do</font><font color="#E5E5E5"> programming in</font>

502
00:21:23,810 --> 00:21:27,800
JavaScript<font color="#CCCCCC"> but typically</font><font color="#E5E5E5"> you have a</font>

503
00:21:25,640 --> 00:21:29,540
normal array in JavaScript that<font color="#CCCCCC"> allows</font>

504
00:21:27,800 --> 00:21:30,980
<font color="#CCCCCC">you to</font><font color="#E5E5E5"> store all kinds</font><font color="#CCCCCC"> of things in</font>

505
00:21:29,540 --> 00:21:32,030
there<font color="#CCCCCC"> like it could</font><font color="#E5E5E5"> store like a double</font>

506
00:21:30,980 --> 00:21:33,530
in there<font color="#E5E5E5"> you could store a pointer</font>

507
00:21:32,030 --> 00:21:35,330
referencing there you could store many

508
00:21:33,530 --> 00:21:37,610
things in there but accesses<font color="#CCCCCC"> to these</font>

509
00:21:35,330 --> 00:21:39,320
arrays are slow because it needs<font color="#E5E5E5"> to</font>

510
00:21:37,610 --> 00:21:41,449
figure<font color="#E5E5E5"> out</font><font color="#CCCCCC"> okay is this object that</font><font color="#E5E5E5"> is</font>

511
00:21:39,320 --> 00:21:43,040
currently being referenced<font color="#CCCCCC"> a pointer or</font>

512
00:21:41,450 --> 00:21:45,290
<font color="#E5E5E5">integer so there are some checks</font>

513
00:21:43,040 --> 00:21:47,120
involved there but<font color="#CCCCCC"> there is also this</font>

514
00:21:45,290 --> 00:21:49,159
other type<font color="#CCCCCC"> which is much</font><font color="#E5E5E5"> much</font><font color="#CCCCCC"> faster and</font>

515
00:21:47,120 --> 00:21:51,110
these are called<font color="#E5E5E5"> the typed arrays which</font>

516
00:21:49,160 --> 00:21:54,320
the type is known so it's an integer or

517
00:21:51,110 --> 00:21:55,820
a double sorry a short and then since it

518
00:21:54,320 --> 00:21:57,800
<font color="#E5E5E5">doesn't need to do checks</font><font color="#CCCCCC"> their accesses</font>

519
00:21:55,820 --> 00:21:59,060
are quite fast and fast<font color="#E5E5E5"> is good for us</font>

520
00:21:57,800 --> 00:22:00,980
<font color="#E5E5E5">right</font><font color="#CCCCCC"> so</font><font color="#E5E5E5"> we want to be able to read from</font>

521
00:21:59,060 --> 00:22:03,530
memory really really<font color="#E5E5E5"> really quickly so</font>

522
00:22:00,980 --> 00:22:06,500
we<font color="#CCCCCC"> use these typed arrays</font><font color="#E5E5E5"> to sort</font><font color="#CCCCCC"> like</font>

523
00:22:03,530 --> 00:22:08,750
do the the do the eviction and hammering

524
00:22:06,500 --> 00:22:10,670
<font color="#E5E5E5">and then we want to target a JavaScript</font>

525
00:22:08,750 --> 00:22:13,370
array<font color="#E5E5E5"> so here I've</font><font color="#CCCCCC"> used some color</font><font color="#E5E5E5"> so</font>

526
00:22:10,670 --> 00:22:15,980
the red colors are the location<font color="#E5E5E5"> that map</font>

527
00:22:13,370 --> 00:22:18,100
to<font color="#CCCCCC"> the same location</font><font color="#E5E5E5"> same location in</font>

528
00:22:15,980 --> 00:22:20,780
the<font color="#CCCCCC"> cache so</font><font color="#E5E5E5"> if you read from those then</font>

529
00:22:18,100 --> 00:22:23,060
in the JavaScript array that<font color="#CCCCCC"> will flush</font>

530
00:22:20,780 --> 00:22:25,490
the location<font color="#E5E5E5"> that this</font><font color="#CCCCCC"> JavaScript</font><font color="#E5E5E5"> array</font>

531
00:22:23,060 --> 00:22:28,520
at<font color="#E5E5E5"> the location</font><font color="#CCCCCC"> red is is located so by</font>

532
00:22:25,490 --> 00:22:31,160
<font color="#CCCCCC">reading from these red parts we</font><font color="#E5E5E5"> can so</font>

533
00:22:28,520 --> 00:22:34,280
like read from memory<font color="#CCCCCC"> that is located at</font>

534
00:22:31,160 --> 00:22:35,960
location<font color="#E5E5E5"> red in the JavaScript array so</font>

535
00:22:34,280 --> 00:22:38,030
<font color="#CCCCCC">this is like how we use the eviction</font>

536
00:22:35,960 --> 00:22:42,560
buffer to read from memory<font color="#E5E5E5"> instead of</font>

537
00:22:38,030 --> 00:22:45,830
reading<font color="#E5E5E5"> from the cache so then this</font><font color="#CCCCCC"> is</font>

538
00:22:42,560 --> 00:22:47,540
like how the templating<font color="#E5E5E5"> works and so the</font>

539
00:22:45,830 --> 00:22:51,740
<font color="#E5E5E5">other problem</font><font color="#CCCCCC"> as Victor mentioned we</font>

540
00:22:47,540 --> 00:22:53,600
<font color="#CCCCCC">need</font><font color="#E5E5E5"> to know the Select location of the</font>

541
00:22:51,740 --> 00:22:55,550
the object<font color="#CCCCCC"> that we are reading in memory</font>

542
00:22:53,600 --> 00:22:57,020
but in JavaScript<font color="#CCCCCC"> as I said we don't</font>

543
00:22:55,550 --> 00:22:58,669
have<font color="#E5E5E5"> any right anything</font><font color="#CCCCCC"> that we</font><font color="#E5E5E5"> don't</font>

544
00:22:57,020 --> 00:23:00,080
know the mutual<font color="#E5E5E5"> address</font><font color="#CCCCCC"> alone they're</font>

545
00:22:58,670 --> 00:23:01,790
physical<font color="#E5E5E5"> we don't know the physical</font>

546
00:23:00,080 --> 00:23:05,449
address they don't the virtual addresses

547
00:23:01,790 --> 00:23:07,280
so we<font color="#CCCCCC"> can't really do double-sided</font><font color="#E5E5E5"> there</font>

548
00:23:05,450 --> 00:23:09,410
because we<font color="#E5E5E5"> don't know the</font><font color="#CCCCCC"> their the</font>

549
00:23:07,280 --> 00:23:11,870
addresses<font color="#E5E5E5"> but there are like some other</font>

550
00:23:09,410 --> 00:23:14,870
crazy side channels that<font color="#E5E5E5"> Eric came up</font>

551
00:23:11,870 --> 00:23:16,518
it's like using<font color="#E5E5E5"> the</font><font color="#CCCCCC"> so</font><font color="#E5E5E5"> like</font><font color="#CCCCCC"> whole memory</font>

552
00:23:14,870 --> 00:23:18,320
<font color="#E5E5E5">basically</font><font color="#CCCCCC"> is laid out</font>

553
00:23:16,519 --> 00:23:21,919
depending on how you're reading<font color="#E5E5E5"> from it</font>

554
00:23:18,320 --> 00:23:23,928
things become faster or slower<font color="#E5E5E5"> and so by</font>

555
00:23:21,919 --> 00:23:25,580
<font color="#E5E5E5">using this information he crafted this</font>

556
00:23:23,929 --> 00:23:28,070
<font color="#E5E5E5">access pattern that allows you to do</font>

557
00:23:25,580 --> 00:23:30,619
<font color="#E5E5E5">double-sided</font><font color="#CCCCCC"> raw hammering</font><font color="#E5E5E5"> so like</font>

558
00:23:28,070 --> 00:23:32,149
probabilistically<font color="#CCCCCC"> and he managed that it</font>

559
00:23:30,619 --> 00:23:33,649
could<font color="#CCCCCC"> actually get bit flips from</font>

560
00:23:32,149 --> 00:23:35,299
<font color="#E5E5E5">JavaScript without having any</font>

561
00:23:33,649 --> 00:23:36,649
<font color="#CCCCCC">information which is which is</font><font color="#E5E5E5"> really</font>

562
00:23:35,299 --> 00:23:39,168
really<font color="#CCCCCC"> interesting</font><font color="#E5E5E5"> if you're if you want</font>

563
00:23:36,649 --> 00:23:40,668
to know more about this<font color="#E5E5E5"> I I can refer</font>

564
00:23:39,169 --> 00:23:42,679
you<font color="#E5E5E5"> to our paper which discusses these</font>

565
00:23:40,669 --> 00:23:46,549
things and then this allows you to<font color="#CCCCCC"> get a</font>

566
00:23:42,679 --> 00:23:49,399
bit flips from JavaScript<font color="#CCCCCC"> so this is so</font>

567
00:23:46,549 --> 00:23:52,099
like how the attack works so here you

568
00:23:49,399 --> 00:23:54,799
have<font color="#E5E5E5"> your JavaScript array and this this</font>

569
00:23:52,099 --> 00:23:57,439
<font color="#E5E5E5">has like a so like an object there that</font>

570
00:23:54,799 --> 00:23:59,929
points into memory so<font color="#CCCCCC"> and</font><font color="#E5E5E5"> this is like</font>

571
00:23:57,440 --> 00:24:01,579
so our target is so like this<font color="#CCCCCC"> this</font>

572
00:23:59,929 --> 00:24:05,059
<font color="#CCCCCC">pointer</font><font color="#E5E5E5"> this reference that is pointing</font>

573
00:24:01,579 --> 00:24:06,979
to a typed array<font color="#E5E5E5"> and typically what you</font>

574
00:24:05,059 --> 00:24:09,469
have when you have a typed<font color="#CCCCCC"> array in</font>

575
00:24:06,979 --> 00:24:12,320
JavaScript<font color="#CCCCCC"> what it has</font><font color="#E5E5E5"> is a</font><font color="#CCCCCC"> vtable</font>

576
00:24:09,469 --> 00:24:14,059
<font color="#CCCCCC">pointer and a size so the</font><font color="#E5E5E5"> v-- table</font>

577
00:24:12,320 --> 00:24:16,070
pointer defines the functions that<font color="#E5E5E5"> you</font>

578
00:24:14,059 --> 00:24:18,799
<font color="#E5E5E5">could use on this array so in terms of</font>

579
00:24:16,070 --> 00:24:21,200
like tell<font color="#CCCCCC"> me</font><font color="#E5E5E5"> what your size is can I get</font>

580
00:24:18,799 --> 00:24:23,359
an eye like so like<font color="#E5E5E5"> and can I do it</font>

581
00:24:21,200 --> 00:24:25,159
<font color="#E5E5E5">something</font><font color="#CCCCCC"> on this location and like</font>

582
00:24:23,359 --> 00:24:26,718
other type of<font color="#E5E5E5"> function so all the</font>

583
00:24:25,159 --> 00:24:28,399
functions that you could do<font color="#E5E5E5"> on this type</font>

584
00:24:26,719 --> 00:24:30,979
thing is defined by this<font color="#CCCCCC"> V table pointer</font>

585
00:24:28,399 --> 00:24:32,539
<font color="#CCCCCC">and it has a size</font><font color="#E5E5E5"> that defines the size</font>

586
00:24:30,979 --> 00:24:37,039
of this<font color="#E5E5E5"> this array and then then your</font>

587
00:24:32,539 --> 00:24:39,139
data will come<font color="#E5E5E5"> after this size so we</font>

588
00:24:37,039 --> 00:24:40,879
take this<font color="#E5E5E5"> typed array and then using the</font>

589
00:24:39,139 --> 00:24:42,889
side<font color="#E5E5E5"> channel which gives us two pointers</font>

590
00:24:40,879 --> 00:24:45,678
we create this<font color="#CCCCCC"> contacting</font><font color="#E5E5E5"> object in the</font>

591
00:24:42,889 --> 00:24:48,320
data area of this<font color="#E5E5E5"> this typed array so</font>

592
00:24:45,679 --> 00:24:49,700
now you have a V table pointer<font color="#CCCCCC"> size</font><font color="#E5E5E5"> and</font>

593
00:24:48,320 --> 00:24:50,839
there<font color="#E5E5E5"> but we don't have it's a</font>

594
00:24:49,700 --> 00:24:52,669
counterfeit object<font color="#E5E5E5"> right we don't have</font>

595
00:24:50,839 --> 00:24:54,379
<font color="#E5E5E5">any reference to it so it's not really</font>

596
00:24:52,669 --> 00:24:59,059
useful we can't use this to do anything

597
00:24:54,379 --> 00:25:02,509
<font color="#E5E5E5">but given our row hammer we just start</font>

598
00:24:59,059 --> 00:25:04,908
<font color="#E5E5E5">reading from memory</font><font color="#CCCCCC"> really quickly right</font>

599
00:25:02,509 --> 00:25:07,309
so that's all<font color="#CCCCCC"> ronimal works and at some</font>

600
00:25:04,909 --> 00:25:09,019
point the trigger<font color="#CCCCCC"> this bit flip and this</font>

601
00:25:07,309 --> 00:25:11,269
bit flip causes this pointer to this

602
00:25:09,019 --> 00:25:13,489
<font color="#E5E5E5">type array to suddenly start pointing to</font>

603
00:25:11,269 --> 00:25:14,959
<font color="#E5E5E5">our contact feed object and once we have</font>

604
00:25:13,489 --> 00:25:16,999
a saw like<font color="#CCCCCC"> a reference</font><font color="#E5E5E5"> to our</font>

605
00:25:14,959 --> 00:25:19,399
counterfeit object<font color="#E5E5E5"> we can do some some</font>

606
00:25:16,999 --> 00:25:21,409
things because we control<font color="#E5E5E5"> the size of</font>

607
00:25:19,399 --> 00:25:23,418
<font color="#E5E5E5">this imagine remember that this is</font>

608
00:25:21,409 --> 00:25:25,479
something<font color="#CCCCCC"> that we put in there</font><font color="#E5E5E5"> right</font><font color="#CCCCCC"> so</font>

609
00:25:23,419 --> 00:25:28,309
<font color="#CCCCCC">we could control</font><font color="#E5E5E5"> the size of the object</font>

610
00:25:25,479 --> 00:25:30,380
<font color="#CCCCCC">that we are putting</font><font color="#E5E5E5"> their so since we</font>

611
00:25:28,309 --> 00:25:32,450
can put a really really large<font color="#E5E5E5"> size</font>

612
00:25:30,380 --> 00:25:34,100
and this point at this point<font color="#E5E5E5"> gives us</font>

613
00:25:32,450 --> 00:25:35,930
arbitrary reason<font color="#E5E5E5"> right over the memory</font>

614
00:25:34,100 --> 00:25:37,760
<font color="#E5E5E5">so in JavaScript</font><font color="#CCCCCC"> you're not allowed to</font>

615
00:25:35,930 --> 00:25:39,830
<font color="#E5E5E5">read beyond your object right so</font><font color="#CCCCCC"> this is</font>

616
00:25:37,760 --> 00:25:41,860
so like the whole<font color="#E5E5E5"> point of a sandbox</font>

617
00:25:39,830 --> 00:25:44,240
thing right but with this<font color="#E5E5E5"> so like</font>

618
00:25:41,860 --> 00:25:45,979
primitive<font color="#E5E5E5"> and this attack it we can</font>

619
00:25:44,240 --> 00:25:47,360
easily read beyond our object<font color="#CCCCCC"> and</font>

620
00:25:45,980 --> 00:25:49,130
certainly we have arbitrary read and

621
00:25:47,360 --> 00:25:51,139
<font color="#CCCCCC">write</font><font color="#E5E5E5"> in the memory and from there on</font>

622
00:25:49,130 --> 00:25:53,270
they could do<font color="#E5E5E5"> controlled evasion attacks</font>

623
00:25:51,140 --> 00:25:54,800
and like escalate the privileges<font color="#E5E5E5"> you can</font>

624
00:25:53,270 --> 00:25:57,550
<font color="#E5E5E5">start like doing other kinds</font><font color="#CCCCCC"> of attacks</font>

625
00:25:54,800 --> 00:25:59,600
<font color="#E5E5E5">so it allows</font><font color="#CCCCCC"> us to take over edge</font>

626
00:25:57,550 --> 00:26:02,330
<font color="#CCCCCC">without</font><font color="#E5E5E5"> a software bug</font><font color="#CCCCCC"> so we were</font>

627
00:25:59,600 --> 00:26:03,830
talking<font color="#CCCCCC"> with Microsoft about</font><font color="#E5E5E5"> this and -</font>

628
00:26:02,330 --> 00:26:05,899
so like make sure that the users<font color="#CCCCCC"> of</font>

629
00:26:03,830 --> 00:26:08,389
Windows<font color="#E5E5E5"> and edge are protected against</font>

630
00:26:05,900 --> 00:26:10,040
this attack and then<font color="#CCCCCC"> Microsoft decided</font>

631
00:26:08,390 --> 00:26:12,320
<font color="#E5E5E5">that they're going to disable memory</font>

632
00:26:10,040 --> 00:26:14,300
deduplication is starting July last year

633
00:26:12,320 --> 00:26:17,689
<font color="#E5E5E5">so that people could</font><font color="#CCCCCC"> would not be</font><font color="#E5E5E5"> able</font>

634
00:26:14,300 --> 00:26:19,520
to<font color="#E5E5E5"> do the DDoS machina attack and yeah</font>

635
00:26:17,690 --> 00:26:21,380
so people<font color="#E5E5E5"> like this quite a lot also the</font>

636
00:26:19,520 --> 00:26:24,110
hacker community liked it quite<font color="#E5E5E5"> a</font><font color="#CCCCCC"> lot so</font>

637
00:26:21,380 --> 00:26:26,510
and then in 2016 in Las Vegas

638
00:26:24,110 --> 00:26:30,709
<font color="#E5E5E5">Eric won the most innovative research</font>

639
00:26:26,510 --> 00:26:32,150
pony<font color="#E5E5E5"> for this forest attack and yeah so</font>

640
00:26:30,710 --> 00:26:34,310
that's that's it<font color="#E5E5E5"> so now I'm going to</font>

641
00:26:32,150 --> 00:26:38,000
give it<font color="#CCCCCC"> back to Victor and</font><font color="#E5E5E5"> Victoria is</font>

642
00:26:34,310 --> 00:26:39,440
<font color="#E5E5E5">gonna tell you how we use flip thanks to</font>

643
00:26:38,000 --> 00:26:41,500
compromised mobile phones in your

644
00:26:39,440 --> 00:26:41,500
pockets

645
00:26:47,249 --> 00:26:53,529
yeah hello again

646
00:26:49,509 --> 00:26:55,149
so this last scenario<font color="#E5E5E5"> of the talk will</font>

647
00:26:53,529 --> 00:26:57,610
be about<font color="#CCCCCC"> dreamer which was really a</font>

648
00:26:55,149 --> 00:26:59,320
<font color="#E5E5E5">collaboration between view and people</font><font color="#CCCCCC"> in</font>

649
00:26:57,610 --> 00:27:02,080
Austria<font color="#E5E5E5"> and also people</font><font color="#CCCCCC"> in Santa</font><font color="#E5E5E5"> Barbara</font>

650
00:26:59,320 --> 00:27:04,330
where<font color="#CCCCCC"> I was when</font><font color="#E5E5E5"> I did this work it also</font>

651
00:27:02,080 --> 00:27:08,320
could publish<font color="#E5E5E5"> at a very good conference</font>

652
00:27:04,330 --> 00:27:10,869
<font color="#CCCCCC">last year</font><font color="#E5E5E5"> and basically the question</font>

653
00:27:08,320 --> 00:27:13,570
that I had<font color="#CCCCCC"> after I saw been</font><font color="#E5E5E5"> agave</font>

654
00:27:10,869 --> 00:27:15,519
<font color="#E5E5E5">breaking the</font><font color="#CCCCCC"> internet I figured</font><font color="#E5E5E5"> can we</font>

655
00:27:13,570 --> 00:27:18,279
use<font color="#E5E5E5"> them</font><font color="#CCCCCC"> can</font><font color="#E5E5E5"> we maybe do</font><font color="#CCCCCC"> ro hammer on</font>

656
00:27:15,519 --> 00:27:21,129
Android and then use<font color="#CCCCCC"> it to</font><font color="#E5E5E5"> route</font><font color="#CCCCCC"> Android</font>

657
00:27:18,279 --> 00:27:22,860
phone<font color="#CCCCCC"> however if you want</font><font color="#E5E5E5"> to look at</font>

658
00:27:21,129 --> 00:27:24,939
this<font color="#E5E5E5"> then they were realized soon that</font>

659
00:27:22,860 --> 00:27:26,830
Android phones are usually<font color="#E5E5E5"> different</font>

660
00:27:24,940 --> 00:27:29,499
than the stuff<font color="#E5E5E5"> they were working on</font>

661
00:27:26,830 --> 00:27:31,090
before<font color="#E5E5E5"> because you've suddenly arm which</font>

662
00:27:29,499 --> 00:27:35,049
<font color="#CCCCCC">is a completely different</font><font color="#E5E5E5"> chipset than</font>

663
00:27:31,090 --> 00:27:36,490
Intel also<font color="#E5E5E5"> Android devices</font><font color="#CCCCCC"> turns</font><font color="#E5E5E5"> out</font>

664
00:27:35,049 --> 00:27:38,080
<font color="#E5E5E5">that they don't have any kind of memory</font>

665
00:27:36,490 --> 00:27:41,529
deduplication so the stuff sedated

666
00:27:38,080 --> 00:27:43,360
<font color="#CCCCCC">before we couldn't do however we still</font>

667
00:27:41,529 --> 00:27:45,789
managed to<font color="#E5E5E5"> pull this off by exploiting</font>

668
00:27:43,360 --> 00:27:50,649
<font color="#E5E5E5">the behavior of the underlying memory</font>

669
00:27:45,789 --> 00:27:51,999
allocator<font color="#CCCCCC"> in your operating system but</font>

670
00:27:50,649 --> 00:27:54,879
let's start<font color="#E5E5E5"> with the first phase again</font>

671
00:27:51,999 --> 00:27:59,350
memory templating so we need to bypass

672
00:27:54,879 --> 00:28:01,269
the<font color="#E5E5E5"> CPU cos now recall on x86 we can</font>

673
00:27:59,350 --> 00:28:03,399
either do this<font color="#CCCCCC"> with Kashi</font><font color="#E5E5E5"> fiction as</font>

674
00:28:01,269 --> 00:28:06,580
indeed a pet machina<font color="#CCCCCC"> or with the</font>

675
00:28:03,399 --> 00:28:09,459
explicit<font color="#CCCCCC"> cashflows instruction and my</font>

676
00:28:06,580 --> 00:28:12,428
first<font color="#E5E5E5"> job was now to flip a bit on arm</font>

677
00:28:09,460 --> 00:28:14,799
<font color="#E5E5E5">so does his work on arm</font><font color="#CCCCCC"> well of course</font>

678
00:28:12,429 --> 00:28:16,840
not<font color="#CCCCCC"> because why</font><font color="#E5E5E5"> would you make things</font>

679
00:28:14,799 --> 00:28:18,789
simple right and turned out that this

680
00:28:16,840 --> 00:28:22,149
<font color="#CCCCCC">geisha</font><font color="#E5E5E5"> fiction was too slow</font><font color="#CCCCCC"> so I</font>

681
00:28:18,789 --> 00:28:24,249
<font color="#E5E5E5">couldn't implement it but it was not</font>

682
00:28:22,149 --> 00:28:26,289
fast enough<font color="#E5E5E5"> to flip anything and then</font>

683
00:28:24,249 --> 00:28:29,139
the explicit cast<font color="#E5E5E5"> first instruction it's</font>

684
00:28:26,289 --> 00:28:31,658
<font color="#CCCCCC">privileged so if you are a normal</font><font color="#E5E5E5"> app on</font>

685
00:28:29,139 --> 00:28:35,678
Android<font color="#E5E5E5"> you cannot flush anything from</font>

686
00:28:31,659 --> 00:28:39,039
<font color="#E5E5E5">your</font><font color="#CCCCCC"> drm so we</font><font color="#E5E5E5"> had to do something</font><font color="#CCCCCC"> else</font>

687
00:28:35,679 --> 00:28:42,669
right<font color="#CCCCCC"> and then we found that its cache</font>

688
00:28:39,039 --> 00:28:45,879
that<font color="#E5E5E5"> CPU is using sometimes it's not</font>

689
00:28:42,669 --> 00:28:48,789
something you want there because if you

690
00:28:45,879 --> 00:28:54,279
have other<font color="#E5E5E5"> components for control an</font>

691
00:28:48,789 --> 00:28:57,220
audio driver or a<font color="#E5E5E5"> GPU it might want to</font>

692
00:28:54,279 --> 00:28:59,320
work on<font color="#CCCCCC"> the same DRAM</font><font color="#E5E5E5"> that you CPU is</font>

693
00:28:57,220 --> 00:29:01,879
looking at in this<font color="#E5E5E5"> case</font>

694
00:28:59,320 --> 00:29:03,769
<font color="#CCCCCC">you don't want to GPU to look at</font>

695
00:29:01,879 --> 00:29:05,748
something<font color="#CCCCCC"> that is different than</font><font color="#E5E5E5"> the CPU</font>

696
00:29:03,769 --> 00:29:08,960
<font color="#E5E5E5">is looking at so whenever you have a</font>

697
00:29:05,749 --> 00:29:10,940
<font color="#CCCCCC">setup</font><font color="#E5E5E5"> like this</font><font color="#CCCCCC"> there's some kind</font><font color="#E5E5E5"> of</font>

698
00:29:08,960 --> 00:29:16,850
need for direct<font color="#E5E5E5"> memory access in which</font>

699
00:29:10,940 --> 00:29:21,850
the cache is disabled DMA<font color="#E5E5E5"> so we could</font>

700
00:29:16,850 --> 00:29:24,230
use DMA actually to<font color="#E5E5E5"> get</font><font color="#CCCCCC"> uncashed</font><font color="#E5E5E5"> memory</font>

701
00:29:21,850 --> 00:29:25,610
and then<font color="#CCCCCC"> lightning</font><font color="#E5E5E5"> sensitive</font><font color="#CCCCCC"> tears so</font>

702
00:29:24,230 --> 00:29:28,429
let's look<font color="#CCCCCC"> at the</font><font color="#E5E5E5"> trap model that we had</font>

703
00:29:25,610 --> 00:29:31,820
<font color="#E5E5E5">in mind</font><font color="#CCCCCC"> we were assuming</font><font color="#E5E5E5"> a recent</font>

704
00:29:28,429 --> 00:29:33,919
Android operating system<font color="#E5E5E5"> without memory</font>

705
00:29:31,820 --> 00:29:35,779
duplication because<font color="#E5E5E5"> it's too costly on</font>

706
00:29:33,919 --> 00:29:37,970
mobile phones it will train your battery

707
00:29:35,779 --> 00:29:41,929
<font color="#CCCCCC">too fast and we have an unprejudiced app</font>

708
00:29:37,970 --> 00:29:43,369
that wants<font color="#CCCCCC"> to get root access</font><font color="#E5E5E5"> now if you</font>

709
00:29:41,929 --> 00:29:45,830
wanna get root<font color="#E5E5E5"> access basically what you</font>

710
00:29:43,369 --> 00:29:47,899
want is<font color="#CCCCCC"> read/write access</font><font color="#E5E5E5"> to anywhere a</font>

711
00:29:45,830 --> 00:29:49,668
memory<font color="#E5E5E5"> because if you have that then</font><font color="#CCCCCC"> you</font>

712
00:29:47,899 --> 00:29:51,168
<font color="#E5E5E5">can find anything in the kernel that's</font>

713
00:29:49,669 --> 00:29:54,289
interesting<font color="#E5E5E5"> and then change anything</font>

714
00:29:51,169 --> 00:29:57,440
there<font color="#E5E5E5"> and we were</font><font color="#CCCCCC"> actually going to use</font>

715
00:29:54,289 --> 00:29:59,960
this<font color="#E5E5E5"> to over</font><font color="#CCCCCC"> their own user ID that</font>

716
00:29:57,440 --> 00:30:01,700
would say<font color="#E5E5E5"> this app has only</font><font color="#CCCCCC"> this limited</font>

717
00:29:59,960 --> 00:30:04,460
set<font color="#CCCCCC"> of privileges</font><font color="#E5E5E5"> and we override it to</font>

718
00:30:01,700 --> 00:30:07,100
<font color="#CCCCCC">zero and</font><font color="#E5E5E5"> then we</font><font color="#CCCCCC"> would get root so the</font>

719
00:30:04,460 --> 00:30:09,919
<font color="#CCCCCC">goal is sweet white access and approach</font>

720
00:30:07,100 --> 00:30:12,830
<font color="#CCCCCC">for</font><font color="#E5E5E5"> this is that</font><font color="#CCCCCC"> we were going to land a</font>

721
00:30:09,919 --> 00:30:15,859
page table at the<font color="#CCCCCC"> location</font><font color="#E5E5E5"> in memory</font>

722
00:30:12,830 --> 00:30:17,539
<font color="#CCCCCC">that</font><font color="#E5E5E5"> is</font><font color="#CCCCCC"> vulnerable to</font><font color="#E5E5E5"> row hammer and I</font>

723
00:30:15,859 --> 00:30:19,699
won't once we have that<font color="#E5E5E5"> there we're</font>

724
00:30:17,539 --> 00:30:21,200
going to flip<font color="#E5E5E5"> a bit in it and I will</font>

725
00:30:19,700 --> 00:30:26,869
explain you<font color="#E5E5E5"> now how that works so page</font>

726
00:30:21,200 --> 00:30:29,389
tables<font color="#E5E5E5"> page tables are a simple concept</font>

727
00:30:26,869 --> 00:30:32,178
<font color="#E5E5E5">there are mapping fields for addresses</font>

728
00:30:29,389 --> 00:30:34,609
to physical addresses another<font color="#E5E5E5"> example if</font>

729
00:30:32,179 --> 00:30:36,139
you have a user space<font color="#E5E5E5"> program and you</font>

730
00:30:34,609 --> 00:30:39,049
allocate some buffer you<font color="#E5E5E5"> get some video</font>

731
00:30:36,139 --> 00:30:42,379
addresses<font color="#CCCCCC"> but if you</font><font color="#E5E5E5"> don't</font><font color="#CCCCCC"> look at</font><font color="#E5E5E5"> your</font>

732
00:30:39,049 --> 00:30:44,179
physical<font color="#E5E5E5"> memory the the mapping from the</font>

733
00:30:42,379 --> 00:30:47,449
the your software<font color="#E5E5E5"> from</font><font color="#CCCCCC"> your virtual</font>

734
00:30:44,179 --> 00:30:49,369
<font color="#CCCCCC">addresses to physical addresses its</font>

735
00:30:47,450 --> 00:30:49,730
nonlinear could be any it could be

736
00:30:49,369 --> 00:30:51,859
anything

737
00:30:49,730 --> 00:30:54,019
so in this case the beginning of your

738
00:30:51,859 --> 00:30:55,580
buffer is pointing further down in

739
00:30:54,019 --> 00:31:00,649
memory than the<font color="#E5E5E5"> second part of your</font>

740
00:30:55,580 --> 00:31:03,559
buffer and a page<font color="#CCCCCC"> table</font><font color="#E5E5E5"> is this thing</font>

741
00:31:00,649 --> 00:31:05,029
<font color="#E5E5E5">that will this</font><font color="#CCCCCC"> see</font><font color="#E5E5E5"> what it says it it</font>

742
00:31:03,559 --> 00:31:06,700
translates<font color="#CCCCCC"> free-throw addresses to</font>

743
00:31:05,029 --> 00:31:10,120
physical<font color="#CCCCCC"> address so sorry</font><font color="#E5E5E5"> as this</font>

744
00:31:06,700 --> 00:31:11,590
structure<font color="#CCCCCC"> somewhere in your memory</font>

745
00:31:10,120 --> 00:31:13,419
the where there<font color="#E5E5E5"> will be a</font><font color="#CCCCCC"> fateful</font>

746
00:31:11,590 --> 00:31:15,699
address and then it will say oh yeah

747
00:31:13,420 --> 00:31:19,210
this<font color="#E5E5E5"> we throw arrows</font><font color="#CCCCCC"> v6a blah blah</font>

748
00:31:15,700 --> 00:31:22,110
<font color="#CCCCCC">stores as</font><font color="#E5E5E5"> this physical address</font><font color="#CCCCCC"> i also</font>

749
00:31:19,210 --> 00:31:24,100
added<font color="#E5E5E5"> the binary representation here</font>

750
00:31:22,110 --> 00:31:25,659
<font color="#CCCCCC">because we need</font><font color="#E5E5E5"> it in a minute so</font><font color="#CCCCCC"> where</font>

751
00:31:24,100 --> 00:31:31,270
<font color="#CCCCCC">are paid sable store it</font><font color="#E5E5E5"> I just</font><font color="#CCCCCC"> said</font><font color="#E5E5E5"> it</font>

752
00:31:25,660 --> 00:31:35,380
in memory<font color="#E5E5E5"> for example there and you in</font>

753
00:31:31,270 --> 00:31:37,720
<font color="#E5E5E5">between your buffer</font><font color="#CCCCCC"> and then what</font>

754
00:31:35,380 --> 00:31:41,650
happens<font color="#CCCCCC"> if we flip a bit in</font><font color="#E5E5E5"> the page</font>

755
00:31:37,720 --> 00:31:43,360
table<font color="#CCCCCC"> so I'm going to</font><font color="#E5E5E5"> flip a bit right</font>

756
00:31:41,650 --> 00:31:48,670
there<font color="#CCCCCC"> oh yeah we can we're going</font><font color="#E5E5E5"> to</font>

757
00:31:43,360 --> 00:31:51,070
modify mappings<font color="#CCCCCC"> so now should be yes</font><font color="#E5E5E5"> so</font>

758
00:31:48,670 --> 00:31:54,490
I'm<font color="#E5E5E5"> looking at this</font><font color="#CCCCCC"> particular bit over</font>

759
00:31:51,070 --> 00:31:56,740
there which<font color="#CCCCCC"> is the the first mapping</font><font color="#E5E5E5"> the</font>

760
00:31:54,490 --> 00:32:00,220
first<font color="#E5E5E5"> free-throw arrows pointing to</font>

761
00:31:56,740 --> 00:32:04,260
hello in physical memory<font color="#CCCCCC"> I'm going to</font>

762
00:32:00,220 --> 00:32:06,760
flip that<font color="#CCCCCC"> one into zero</font>

763
00:32:04,260 --> 00:32:09,220
what will<font color="#E5E5E5"> happen then with the actual</font>

764
00:32:06,760 --> 00:32:13,270
physical errors it<font color="#E5E5E5"> will change from 1 4</font>

765
00:32:09,220 --> 00:32:15,700
0<font color="#E5E5E5"> 0 to</font><font color="#CCCCCC"> 1 0 0 0</font><font color="#E5E5E5"> now if you also update</font>

766
00:32:13,270 --> 00:32:17,650
the mapping we will see that all of<font color="#CCCCCC"> a</font>

767
00:32:15,700 --> 00:32:19,870
sudden<font color="#E5E5E5"> these virtual address that was</font>

768
00:32:17,650 --> 00:32:22,090
first pointed to the word hello is now

769
00:32:19,870 --> 00:32:25,600
pointing to<font color="#CCCCCC"> another location</font><font color="#E5E5E5"> in memory</font>

770
00:32:22,090 --> 00:32:29,169
namely the page<font color="#CCCCCC"> table so we now have a</font>

771
00:32:25,600 --> 00:32:33,399
buffer in a user switch program which we

772
00:32:29,170 --> 00:32:35,530
can use<font color="#CCCCCC"> to access</font><font color="#E5E5E5"> a page table and would</font>

773
00:32:33,400 --> 00:32:37,530
<font color="#E5E5E5">access like this we actually get</font>

774
00:32:35,530 --> 00:32:40,930
<font color="#CCCCCC">readwrite access to anywhere memory</font>

775
00:32:37,530 --> 00:32:42,460
because we can now modify mappings<font color="#CCCCCC"> we</font>

776
00:32:40,930 --> 00:32:45,010
can change the page table whenever<font color="#E5E5E5"> any</font>

777
00:32:42,460 --> 00:32:47,140
way we<font color="#E5E5E5"> want we can</font><font color="#CCCCCC"> add new we can</font><font color="#E5E5E5"> we can</font>

778
00:32:45,010 --> 00:32:48,610
change entries so we can change the

779
00:32:47,140 --> 00:32:54,430
second part<font color="#CCCCCC"> of a buffer to</font><font color="#E5E5E5"> point to</font>

780
00:32:48,610 --> 00:32:58,090
somewhere else<font color="#E5E5E5"> or we can add new</font><font color="#CCCCCC"> ones so</font>

781
00:32:54,430 --> 00:32:59,980
with<font color="#E5E5E5"> this if you get this far</font><font color="#CCCCCC"> then you</font>

782
00:32:58,090 --> 00:33:03,580
<font color="#E5E5E5">have readwrite access to</font><font color="#CCCCCC"> anybody memory</font>

783
00:32:59,980 --> 00:33:06,960
right and then with that<font color="#CCCCCC"> we can actually</font>

784
00:33:03,580 --> 00:33:10,149
get root access<font color="#E5E5E5"> the question however is</font>

785
00:33:06,960 --> 00:33:12,220
how do we<font color="#E5E5E5"> make</font><font color="#CCCCCC"> sure</font><font color="#E5E5E5"> this page table will</font>

786
00:33:10,150 --> 00:33:14,680
<font color="#CCCCCC">be stored here</font><font color="#E5E5E5"> and not</font><font color="#CCCCCC"> somewhere else in</font>

787
00:33:12,220 --> 00:33:16,270
memory because we need it to be<font color="#CCCCCC"> stored</font>

788
00:33:14,680 --> 00:33:20,620
<font color="#E5E5E5">in a place where we can actually hammer</font>

789
00:33:16,270 --> 00:33:22,720
it from two sides<font color="#E5E5E5"> and for this we</font>

790
00:33:20,620 --> 00:33:25,899
offended<font color="#CCCCCC"> a new technique which</font>

791
00:33:22,720 --> 00:33:28,169
<font color="#E5E5E5">call this feng shui</font><font color="#CCCCCC"> and I'm going to</font>

792
00:33:25,900 --> 00:33:31,720
give you an<font color="#E5E5E5"> intuition on how this works</font>

793
00:33:28,169 --> 00:33:35,110
<font color="#CCCCCC">so let's look at your physical memory</font>

794
00:33:31,720 --> 00:33:37,150
these are capacitors<font color="#E5E5E5"> very small</font>

795
00:33:35,110 --> 00:33:40,299
capacitors and then you have some

796
00:33:37,150 --> 00:33:44,950
applications running on your device<font color="#E5E5E5"> they</font>

797
00:33:40,299 --> 00:33:47,549
use some memory the blue cells here<font color="#CCCCCC"> and</font>

798
00:33:44,950 --> 00:33:51,010
then the first<font color="#CCCCCC"> step</font><font color="#E5E5E5"> of fish makes</font><font color="#CCCCCC"> UE is</font>

799
00:33:47,549 --> 00:33:53,740
allocating large chunks<font color="#E5E5E5"> of memory in</font>

800
00:33:51,010 --> 00:33:57,460
<font color="#E5E5E5">this case we could</font><font color="#CCCCCC"> sue those and then</font>

801
00:33:53,740 --> 00:34:00,190
we're going<font color="#E5E5E5"> to search for</font><font color="#CCCCCC"> bid flips and</font>

802
00:33:57,460 --> 00:34:04,659
<font color="#CCCCCC">then</font><font color="#E5E5E5"> at some point I was supposed to do</font>

803
00:34:00,190 --> 00:34:09,520
<font color="#E5E5E5">it</font><font color="#CCCCCC"> like this yes some at</font><font color="#E5E5E5"> some point we</font>

804
00:34:04,659 --> 00:34:11,859
find a cell where we<font color="#E5E5E5"> can flip a bit now</font>

805
00:34:09,520 --> 00:34:16,210
the<font color="#CCCCCC"> next step is allocating smaller</font>

806
00:34:11,859 --> 00:34:19,889
chunks in memory<font color="#CCCCCC"> of a specific size in</font>

807
00:34:16,210 --> 00:34:24,220
this case<font color="#E5E5E5"> size 4</font><font color="#CCCCCC"> and we get all of these</font>

808
00:34:19,889 --> 00:34:27,570
now next we release<font color="#E5E5E5"> this small chunk</font>

809
00:34:24,219 --> 00:34:30,580
<font color="#E5E5E5">that</font><font color="#CCCCCC"> had</font><font color="#E5E5E5"> the bit flip in it and</font>

810
00:34:27,570 --> 00:34:33,220
immediately<font color="#E5E5E5"> afterwards we're going to do</font>

811
00:34:30,580 --> 00:34:36,279
this trick in our<font color="#E5E5E5"> software to</font><font color="#CCCCCC"> generate a</font>

812
00:34:33,219 --> 00:34:39,330
new page table<font color="#E5E5E5"> and because in this</font>

813
00:34:36,280 --> 00:34:42,879
<font color="#E5E5E5">scenario we assume a page table has</font><font color="#CCCCCC"> four</font>

814
00:34:39,330 --> 00:34:44,980
takes<font color="#CCCCCC"> four cells to store</font><font color="#E5E5E5"> the operating</font>

815
00:34:42,879 --> 00:34:47,139
system they'll have to put it over<font color="#E5E5E5"> there</font>

816
00:34:44,980 --> 00:34:48,760
<font color="#E5E5E5">because</font><font color="#CCCCCC"> all our cells are in use and</font>

817
00:34:47,139 --> 00:34:52,089
<font color="#E5E5E5">there are simply no other place for</font><font color="#CCCCCC"> it</font>

818
00:34:48,760 --> 00:34:55,119
<font color="#CCCCCC">to store it and</font><font color="#E5E5E5"> from</font><font color="#CCCCCC"> here on now we can</font>

819
00:34:52,089 --> 00:34:58,450
<font color="#CCCCCC">do actually have hurried again</font><font color="#E5E5E5"> and</font><font color="#CCCCCC"> sleep</font>

820
00:34:55,119 --> 00:35:01,180
a bit<font color="#CCCCCC"> so this</font><font color="#E5E5E5"> is probably hard to see</font>

821
00:34:58,450 --> 00:35:02,649
<font color="#CCCCCC">people always</font><font color="#E5E5E5"> ask me what was</font><font color="#CCCCCC"> it like</font><font color="#E5E5E5"> if</font>

822
00:35:01,180 --> 00:35:04,990
<font color="#E5E5E5">you were doing this while I was looking</font>

823
00:35:02,650 --> 00:35:07,119
at stuff<font color="#CCCCCC"> like this and</font><font color="#E5E5E5"> this</font><font color="#CCCCCC"> is</font><font color="#E5E5E5"> that's</font>

824
00:35:04,990 --> 00:35:09,459
<font color="#E5E5E5">going</font><font color="#CCCCCC"> to</font><font color="#E5E5E5"> work</font><font color="#CCCCCC"> but</font><font color="#E5E5E5"> there's a</font><font color="#CCCCCC"> bit sleep in</font>

825
00:35:07,119 --> 00:35:14,170
<font color="#CCCCCC">here you</font><font color="#E5E5E5"> won't see it it's there no you</font>

826
00:35:09,460 --> 00:35:15,520
<font color="#CCCCCC">can't you can</font><font color="#E5E5E5"> see and they've got some</font>

827
00:35:14,170 --> 00:35:17,950
evaluation right because we wanted<font color="#E5E5E5"> to</font>

828
00:35:15,520 --> 00:35:20,020
<font color="#E5E5E5">know how many phones actually are</font>

829
00:35:17,950 --> 00:35:22,118
vulnerable to<font color="#E5E5E5"> this so with a lot</font><font color="#CCCCCC"> of</font>

830
00:35:20,020 --> 00:35:24,339
phones to play with and we found

831
00:35:22,119 --> 00:35:27,099
<font color="#E5E5E5">actually that's out</font><font color="#CCCCCC"> of twenty seventy</font>

832
00:35:24,339 --> 00:35:31,299
five so we looked at<font color="#E5E5E5"> 18 of them had</font><font color="#CCCCCC"> this</font>

833
00:35:27,099 --> 00:35:34,480
<font color="#CCCCCC">tips and</font><font color="#E5E5E5"> interesting enough sometimes</font>

834
00:35:31,300 --> 00:35:36,670
<font color="#E5E5E5">you have a nexus 5 so tomorrow</font><font color="#CCCCCC"> there</font>

835
00:35:34,480 --> 00:35:38,470
were<font color="#E5E5E5"> zero bit flips and</font><font color="#CCCCCC"> then you look</font>

836
00:35:36,670 --> 00:35:40,960
the<font color="#CCCCCC"> difference Nexus</font><font color="#E5E5E5"> 5 the same model</font>

837
00:35:38,470 --> 00:35:44,980
same<font color="#CCCCCC"> manufacturer it had close to a</font>

838
00:35:40,960 --> 00:35:46,569
million<font color="#E5E5E5"> bits lips</font><font color="#CCCCCC"> sometimes because not</font>

839
00:35:44,980 --> 00:35:48,490
every bit up is vulnerable sometimes<font color="#E5E5E5"> the</font>

840
00:35:46,569 --> 00:35:50,380
first bit flip that you found that<font color="#E5E5E5"> you</font>

841
00:35:48,490 --> 00:35:51,640
<font color="#CCCCCC">could actually exploit you find it after</font>

842
00:35:50,380 --> 00:35:54,160
<font color="#E5E5E5">one second</font>

843
00:35:51,640 --> 00:35:58,299
but sometimes it will<font color="#CCCCCC"> take</font><font color="#E5E5E5"> 15 minutes to</font>

844
00:35:54,160 --> 00:36:01,000
<font color="#CCCCCC">find</font><font color="#E5E5E5"> your first</font><font color="#CCCCCC"> exportable</font><font color="#E5E5E5"> bit</font><font color="#CCCCCC"> tip in</font>

845
00:35:58,299 --> 00:36:03,790
general<font color="#E5E5E5"> we did some with computation</font>

846
00:36:01,000 --> 00:36:06,849
about this we found that once you have

847
00:36:03,790 --> 00:36:11,460
the<font color="#E5E5E5"> bit</font><font color="#CCCCCC"> fib it will take</font><font color="#E5E5E5"> 22 more seconds</font>

848
00:36:06,849 --> 00:36:13,960
at most<font color="#E5E5E5"> to actually export your device</font>

849
00:36:11,460 --> 00:36:15,849
<font color="#CCCCCC">then</font><font color="#E5E5E5"> we wrote an app for this when we</font>

850
00:36:13,960 --> 00:36:18,339
<font color="#E5E5E5">publish the work people could install</font>

851
00:36:15,849 --> 00:36:20,650
our app<font color="#E5E5E5"> people trusted us to do this and</font>

852
00:36:18,339 --> 00:36:23,529
then we were seeing also<font color="#E5E5E5"> bit tips on</font>

853
00:36:20,650 --> 00:36:25,839
<font color="#E5E5E5">Google</font><font color="#CCCCCC"> pixel phones</font><font color="#E5E5E5"> and one two</font><font color="#CCCCCC"> three</font>

854
00:36:23,530 --> 00:36:28,240
I guess<font color="#E5E5E5"> also one plus five</font><font color="#CCCCCC"> these days</font>

855
00:36:25,839 --> 00:36:32,290
people were crazy<font color="#E5E5E5"> enough to run</font><font color="#CCCCCC"> X on the</font>

856
00:36:28,240 --> 00:36:33,910
Galaxy<font color="#CCCCCC"> Note 7 and all</font><font color="#E5E5E5"> these phones also</font>

857
00:36:32,290 --> 00:36:37,480
had<font color="#E5E5E5"> this dip so turns out that this</font>

858
00:36:33,910 --> 00:36:39,549
problem<font color="#E5E5E5"> is pretty widespread disclosure</font>

859
00:36:37,480 --> 00:36:42,040
then which was very<font color="#E5E5E5"> interesting we</font>

860
00:36:39,549 --> 00:36:45,040
contacted Google after<font color="#E5E5E5"> we</font><font color="#CCCCCC"> finished</font><font color="#E5E5E5"> the</font>

861
00:36:42,040 --> 00:36:49,150
exploit and we suggested<font color="#E5E5E5"> the list of</font>

862
00:36:45,040 --> 00:36:52,359
medications<font color="#E5E5E5"> this was on July 25 2016 now</font>

863
00:36:49,150 --> 00:36:54,910
why is the state important it is 91 days

864
00:36:52,359 --> 00:36:58,420
before it would call public with a paper

865
00:36:54,910 --> 00:37:00,700
<font color="#E5E5E5">and Google has their own a security team</font>

866
00:36:58,420 --> 00:37:03,819
called protect<font color="#E5E5E5"> zero</font><font color="#CCCCCC"> and they give Google</font>

867
00:37:00,700 --> 00:37:06,240
miny days to fix stuff<font color="#E5E5E5"> so we kept</font><font color="#CCCCCC"> them</font>

868
00:37:03,819 --> 00:37:10,058
91<font color="#CCCCCC"> days which</font><font color="#E5E5E5"> was like in time right</font>

869
00:37:06,240 --> 00:37:13,029
enough time to fix<font color="#E5E5E5"> it then at some point</font>

870
00:37:10,059 --> 00:37:16,530
we had a video<font color="#E5E5E5"> call with these guys</font>

871
00:37:13,030 --> 00:37:19,869
and pretty pretty<font color="#E5E5E5"> soon one of them said</font>

872
00:37:16,530 --> 00:37:23,799
yeah<font color="#E5E5E5"> can you maybe publish to work and</font>

873
00:37:19,869 --> 00:37:26,770
another conference later this year<font color="#E5E5E5"> well</font>

874
00:37:23,799 --> 00:37:29,770
of course not because<font color="#CCCCCC"> CCS is important</font>

875
00:37:26,770 --> 00:37:34,480
<font color="#E5E5E5">for us so I wasn't</font><font color="#CCCCCC"> know and then I</font><font color="#E5E5E5"> was</font>

876
00:37:29,770 --> 00:37:38,349
what if we give<font color="#CCCCCC"> you more more</font><font color="#E5E5E5"> money and</font>

877
00:37:34,480 --> 00:37:41,140
then<font color="#E5E5E5"> also also</font><font color="#CCCCCC"> know</font><font color="#E5E5E5"> and then the I think</font>

878
00:37:38,349 --> 00:37:43,990
it was most crazy it was<font color="#E5E5E5"> like yeah well</font>

879
00:37:41,140 --> 00:37:46,270
then maybe can you<font color="#E5E5E5"> maybe obfuscate some</font>

880
00:37:43,990 --> 00:37:48,160
technical details<font color="#CCCCCC"> of your paper</font><font color="#E5E5E5"> so</font><font color="#CCCCCC"> that</font>

881
00:37:46,270 --> 00:37:49,060
other people<font color="#CCCCCC"> cannot easily reproduce it</font>

882
00:37:48,160 --> 00:37:51,730
anymore

883
00:37:49,060 --> 00:37:54,759
it was<font color="#E5E5E5"> also</font><font color="#CCCCCC"> a no</font><font color="#E5E5E5"> and then we got in the</font>

884
00:37:51,730 --> 00:37:58,240
end<font color="#CCCCCC"> four</font><font color="#E5E5E5"> thousand dollars insane amount</font>

885
00:37:54,760 --> 00:38:00,640
of<font color="#E5E5E5"> money for an attack like this</font><font color="#CCCCCC"> there</font>

886
00:37:58,240 --> 00:38:03,430
were some personal fixes in November and

887
00:38:00,640 --> 00:38:05,520
<font color="#E5E5E5">then later on they they roll out some</font>

888
00:38:03,430 --> 00:38:09,310
<font color="#CCCCCC">more fixes that</font><font color="#E5E5E5"> toothpick should stop it</font>

889
00:38:05,520 --> 00:38:12,849
<font color="#CCCCCC">I'm not sure it does but they say right</font>

890
00:38:09,310 --> 00:38:15,700
now<font color="#E5E5E5"> it works</font><font color="#CCCCCC"> and then this was this year</font>

891
00:38:12,849 --> 00:38:19,570
actually<font color="#E5E5E5"> we want a reward for this</font><font color="#CCCCCC"> so we</font>

892
00:38:15,700 --> 00:38:21,009
won<font color="#E5E5E5"> the dot cybersecurity research paper</font>

893
00:38:19,570 --> 00:38:30,340
award and they're gonna letter from the

894
00:38:21,010 --> 00:38:32,050
euros which was later double so I guess

895
00:38:30,340 --> 00:38:36,310
the message<font color="#E5E5E5"> here is</font><font color="#CCCCCC"> if you</font><font color="#E5E5E5"> want to make</font>

896
00:38:32,050 --> 00:38:38,190
money<font color="#CCCCCC"> users go into</font><font color="#E5E5E5"> research because and</font>

897
00:38:36,310 --> 00:38:41,380
also actually<font color="#E5E5E5"> so I just got back from</font>

898
00:38:38,190 --> 00:38:43,090
from<font color="#E5E5E5"> blackhat last week and I won the I</font>

899
00:38:41,380 --> 00:38:45,420
won<font color="#E5E5E5"> the Little Pony over there the pink</font>

900
00:38:43,090 --> 00:38:45,420
one<font color="#E5E5E5"> for</font>

901
00:38:51,690 --> 00:38:57,220
for<font color="#E5E5E5"> best frivolous escalation bug</font><font color="#CCCCCC"> so</font>

902
00:38:55,000 --> 00:39:02,859
that was pretty cool<font color="#CCCCCC"> no money of course</font>

903
00:38:57,220 --> 00:39:05,259
in conclusion<font color="#E5E5E5"> now what right</font><font color="#CCCCCC"> we</font><font color="#E5E5E5"> show in</font>

904
00:39:02,859 --> 00:39:09,490
the last last<font color="#E5E5E5"> year to a</font><font color="#CCCCCC"> 16 we show that</font>

905
00:39:05,260 --> 00:39:11,289
you can<font color="#E5E5E5"> use</font><font color="#CCCCCC"> raw hammer to to break all</font>

906
00:39:09,490 --> 00:39:13,299
three major platforms<font color="#E5E5E5"> right we can break</font>

907
00:39:11,289 --> 00:39:16,049
you<font color="#E5E5E5"> cloud</font><font color="#CCCCCC"> we can</font><font color="#E5E5E5"> break the browser</font><font color="#CCCCCC"> every</font>

908
00:39:13,299 --> 00:39:18,220
<font color="#E5E5E5">click and break your mole off phone and</font>

909
00:39:16,049 --> 00:39:20,440
it's supported - no yeah we're also

910
00:39:18,220 --> 00:39:22,990
working on defenses<font color="#E5E5E5"> so that you can</font>

911
00:39:20,440 --> 00:39:27,010
actually defend yourself against

912
00:39:22,990 --> 00:39:28,720
remember but what we realize what<font color="#CCCCCC"> we</font>

913
00:39:27,010 --> 00:39:31,809
<font color="#E5E5E5">must realize is that software</font><font color="#CCCCCC"> was never</font>

914
00:39:28,720 --> 00:39:34,259
really defined<font color="#E5E5E5"> a designed to deal</font><font color="#CCCCCC"> with</font>

915
00:39:31,809 --> 00:39:37,329
<font color="#E5E5E5">hardware issues</font><font color="#CCCCCC"> - hardware business</font><font color="#E5E5E5"> and</font>

916
00:39:34,260 --> 00:39:39,730
what we see so<font color="#CCCCCC"> far is all defenses</font>

917
00:39:37,329 --> 00:39:42,220
against attack like this<font color="#CCCCCC"> there</font><font color="#E5E5E5"> are still</font>

918
00:39:39,730 --> 00:39:46,150
in<font color="#E5E5E5"> early stages and right now also</font>

919
00:39:42,220 --> 00:39:47,558
<font color="#E5E5E5">easily bypassed and even as we</font><font color="#CCCCCC"> were also</font>

920
00:39:46,150 --> 00:39:49,450
seeing right now is<font color="#E5E5E5"> that hardware</font>

921
00:39:47,559 --> 00:39:51,760
education that<font color="#E5E5E5"> have been designed and</font>

922
00:39:49,450 --> 00:39:57,640
proposed<font color="#CCCCCC"> they're still</font><font color="#E5E5E5"> optional so not</font>

923
00:39:51,760 --> 00:40:00,490
everybody may use this and<font color="#E5E5E5"> also lastly</font>

924
00:39:57,640 --> 00:40:03,038
you cannot fix<font color="#CCCCCC"> rorimer</font><font color="#E5E5E5"> right so you</font>

925
00:40:00,490 --> 00:40:04,808
cannot open your phone<font color="#E5E5E5"> and then take out</font>

926
00:40:03,039 --> 00:40:06,039
<font color="#CCCCCC">the memory and</font><font color="#E5E5E5"> then try to solve it a</font>

927
00:40:04,809 --> 00:40:08,140
<font color="#E5E5E5">little bit and then put it the back</font><font color="#CCCCCC"> end</font>

928
00:40:06,039 --> 00:40:08,589
<font color="#E5E5E5">and then hope</font><font color="#CCCCCC"> that you</font><font color="#E5E5E5"> remember problem</font>

929
00:40:08,140 --> 00:40:12,640
is<font color="#E5E5E5"> gone</font>

930
00:40:08,589 --> 00:40:16,630
it's not possible so yeah<font color="#CCCCCC"> rorimer</font><font color="#E5E5E5"> is it</font>

931
00:40:12,640 --> 00:40:19,538
<font color="#CCCCCC">maybe the</font><font color="#E5E5E5"> silent killer since 2010 we</font>

932
00:40:16,630 --> 00:40:21,670
saw that a lot of<font color="#E5E5E5"> DRAM chips and</font><font color="#CCCCCC"> have</font><font color="#E5E5E5"> a</font>

933
00:40:19,539 --> 00:40:26,020
manufactured<font color="#E5E5E5"> sins are from the ball for</font>

934
00:40:21,670 --> 00:40:30,279
this<font color="#E5E5E5"> and</font><font color="#CCCCCC"> 83%</font><font color="#E5E5E5"> of the</font><font color="#CCCCCC"> dd3</font>

935
00:40:26,020 --> 00:40:32,230
ddr3 modules in some<font color="#E5E5E5"> study with 80%</font><font color="#CCCCCC"> of</font>

936
00:40:30,279 --> 00:40:34,359
them<font color="#E5E5E5"> affected this really is an issue</font>

937
00:40:32,230 --> 00:40:37,960
and we think<font color="#CCCCCC"> that more research is</font>

938
00:40:34,359 --> 00:40:39,970
necessary to understand what's going<font color="#CCCCCC"> on</font>

939
00:40:37,960 --> 00:40:41,710
also it's not going away<font color="#E5E5E5"> so</font><font color="#CCCCCC"> we built it</font>

940
00:40:39,970 --> 00:40:45,220
<font color="#CCCCCC">on the pixel are people reporting bit</font>

941
00:40:41,710 --> 00:40:49,059
<font color="#CCCCCC">fits on video</font><font color="#E5E5E5"> for we're going to see</font>

942
00:40:45,220 --> 00:40:52,980
rorimer<font color="#E5E5E5"> research and attack and defenses</font>

943
00:40:49,059 --> 00:40:54,849
for quite some more time so what's next

944
00:40:52,980 --> 00:40:57,700
question is<font color="#CCCCCC"> shelf do you still trust</font>

945
00:40:54,849 --> 00:41:02,829
your hardware<font color="#E5E5E5"> and would it be a roamer</font>

946
00:40:57,700 --> 00:41:04,000
<font color="#CCCCCC">2.0 2.0 that's it you can find</font><font color="#E5E5E5"> more</font>

947
00:41:02,829 --> 00:41:04,570
details<font color="#E5E5E5"> demos</font>

948
00:41:04,000 --> 00:41:07,420
actually do

949
00:41:04,570 --> 00:41:10,960
f<font color="#CCCCCC"> - West time</font><font color="#E5E5E5"> how much</font><font color="#CCCCCC"> time you have we</font>

950
00:41:07,420 --> 00:41:14,770
wanted<font color="#E5E5E5"> to show a demo</font><font color="#CCCCCC"> I think I would</font>

951
00:41:10,960 --> 00:41:17,590
open 20 minutes<font color="#E5E5E5"> there's a lot of time</font>

952
00:41:14,770 --> 00:41:22,710
for Q&A<font color="#CCCCCC"> or we can do another video</font>

953
00:41:17,590 --> 00:41:22,710
oh and then<font color="#E5E5E5"> our okay</font>

954
00:41:30,839 --> 00:41:41,078
Wow<font color="#E5E5E5"> to work yes</font><font color="#CCCCCC"> it works</font><font color="#E5E5E5"> so it's a bit</font>

955
00:41:37,089 --> 00:41:46,180
<font color="#CCCCCC">hard to tell I guess I'm mulling the</font>

956
00:41:41,079 --> 00:41:49,900
<font color="#CCCCCC">drummer exploit here I first I'm trying</font>

957
00:41:46,180 --> 00:41:52,359
to run<font color="#CCCCCC"> s you</font><font color="#E5E5E5"> so trying to get root</font>

958
00:41:49,900 --> 00:41:56,829
privileges<font color="#CCCCCC"> then I'm calling</font><font color="#E5E5E5"> X the</font>

959
00:41:52,359 --> 00:42:01,660
exploit and here it<font color="#CCCCCC"> is searching for</font><font color="#E5E5E5"> bit</font>

960
00:41:56,829 --> 00:42:04,869
<font color="#CCCCCC">flips it finds a couple</font><font color="#E5E5E5"> but not</font><font color="#CCCCCC"> all of</font>

961
00:42:01,660 --> 00:42:07,000
them are usable and then here it's lawns

962
00:42:04,869 --> 00:42:09,309
in the second part of the attack<font color="#CCCCCC"> it must</font>

963
00:42:07,000 --> 00:42:12,010
be<font color="#E5E5E5"> very hard to read but actually</font>

964
00:42:09,309 --> 00:42:13,450
already here<font color="#E5E5E5"> we have access</font><font color="#CCCCCC"> to kernel</font>

965
00:42:12,010 --> 00:42:16,180
memory and night<font color="#E5E5E5"> right now we're</font>

966
00:42:13,450 --> 00:42:19,269
scanning it<font color="#E5E5E5"> and then we found</font><font color="#CCCCCC"> some</font>

967
00:42:16,180 --> 00:42:22,569
structures and then it turned out that

968
00:42:19,269 --> 00:42:26,410
<font color="#E5E5E5">we're</font><font color="#CCCCCC"> not so with we found the CPU the</font>

969
00:42:22,569 --> 00:42:28,029
the user ID<font color="#E5E5E5"> our own user ID and we</font>

970
00:42:26,410 --> 00:42:30,970
<font color="#E5E5E5">override it</font><font color="#CCCCCC"> with 0 and</font><font color="#E5E5E5"> then we check</font>

971
00:42:28,029 --> 00:42:32,740
whether<font color="#E5E5E5"> we're actually also root and it</font>

972
00:42:30,970 --> 00:42:36,490
turned out we were<font color="#CCCCCC"> not all writing our</font>

973
00:42:32,740 --> 00:42:38,169
own<font color="#E5E5E5"> structures</font><font color="#CCCCCC"> or maybe we were giving</font>

974
00:42:36,490 --> 00:42:40,149
somebody else root access<font color="#CCCCCC"> and then in</font>

975
00:42:38,170 --> 00:42:46,420
the end we get a<font color="#CCCCCC"> shell and</font><font color="#E5E5E5"> we our root</font>

976
00:42:40,150 --> 00:42:49,829
and this was on android 6.0.1<font color="#CCCCCC"> what was</font>

977
00:42:46,420 --> 00:42:59,740
at the<font color="#CCCCCC"> time the</font><font color="#E5E5E5"> latest Android version</font>

978
00:42:49,829 --> 00:43:01,660
<font color="#E5E5E5">if you should be hit yes so do you want</font>

979
00:42:59,740 --> 00:43:02,919
to do<font color="#E5E5E5"> another demo do you guys want to</font>

980
00:43:01,660 --> 00:43:04,670
see another demo

981
00:43:02,920 --> 00:43:10,650
[Applause]

982
00:43:04,670 --> 00:43:19,079
<font color="#E5E5E5">okay you have to do it though which one</font>

983
00:43:10,650 --> 00:43:33,720
let's do SSH<font color="#CCCCCC"> is it feng shui</font><font color="#E5E5E5"> yeah this</font>

984
00:43:19,079 --> 00:43:38,460
one yeah<font color="#CCCCCC"> this</font><font color="#E5E5E5"> oh yeah it's five minutes</font>

985
00:43:33,720 --> 00:43:42,480
<font color="#E5E5E5">good</font><font color="#CCCCCC"> alright</font><font color="#E5E5E5"> so we have two screens here</font>

986
00:43:38,460 --> 00:43:45,450
<font color="#CCCCCC">so</font><font color="#E5E5E5"> the let me try to remember yes the</font>

987
00:43:42,480 --> 00:43:51,210
left<font color="#E5E5E5"> the left one is the so like I think</font>

988
00:43:45,450 --> 00:43:52,828
<font color="#E5E5E5">the</font><font color="#CCCCCC"> Select gives you a</font><font color="#E5E5E5"> log of what is</font>

989
00:43:51,210 --> 00:43:55,140
<font color="#E5E5E5">going on so it's basically we're also</font>

990
00:43:52,829 --> 00:43:58,500
<font color="#E5E5E5">like an exploit that launches</font><font color="#CCCCCC"> every time</font>

991
00:43:55,140 --> 00:44:01,170
it creates you know<font color="#E5E5E5"> two new VMs and and</font>

992
00:43:58,500 --> 00:44:03,210
then one is the attacker<font color="#E5E5E5"> and one is the</font>

993
00:44:01,170 --> 00:44:06,150
victim<font color="#E5E5E5"> the attacker doesn't know the</font>

994
00:44:03,210 --> 00:44:08,069
private<font color="#E5E5E5"> key</font><font color="#CCCCCC"> of the victim and then it</font>

995
00:44:06,150 --> 00:44:09,920
tries<font color="#CCCCCC"> to select do the flipping free</font>

996
00:44:08,069 --> 00:44:13,500
attack to trigger a bit flip in<font color="#E5E5E5"> the RSA</font>

997
00:44:09,920 --> 00:44:15,269
public key of<font color="#E5E5E5"> the victim and then tries</font>

998
00:44:13,500 --> 00:44:17,849
to<font color="#E5E5E5"> generate a new private key and login</font>

999
00:44:15,269 --> 00:44:19,109
on<font color="#E5E5E5"> the right side so be aware so the</font>

1000
00:44:17,849 --> 00:44:21,210
things that<font color="#E5E5E5"> once we do a bit</font><font color="#CCCCCC"> rip we</font>

1001
00:44:19,109 --> 00:44:23,940
still have to factorize<font color="#CCCCCC"> so like we</font><font color="#E5E5E5"> have</font>

1002
00:44:21,210 --> 00:44:26,309
to factorize the RSA the corrupted

1003
00:44:23,940 --> 00:44:27,990
public RSA key to be able<font color="#CCCCCC"> to</font><font color="#E5E5E5"> generate</font>

1004
00:44:26,309 --> 00:44:29,460
<font color="#E5E5E5">the private key</font><font color="#CCCCCC"> and for this we need</font>

1005
00:44:27,990 --> 00:44:32,879
lots of computation power so we have a

1006
00:44:29,460 --> 00:44:34,859
cluster at our<font color="#CCCCCC"> university that we use</font>

1007
00:44:32,880 --> 00:44:39,359
for like so here you can see that<font color="#E5E5E5"> we</font>

1008
00:44:34,859 --> 00:44:41,910
have 256 cores<font color="#E5E5E5"> and we're so like like</font>

1009
00:44:39,359 --> 00:44:44,130
<font color="#CCCCCC">which</font><font color="#E5E5E5"> is trapping a new factorization</font>

1010
00:44:41,910 --> 00:44:45,779
process so once<font color="#E5E5E5"> we</font><font color="#CCCCCC"> find a bit flip</font><font color="#E5E5E5"> right</font>

1011
00:44:44,130 --> 00:44:47,339
we want to<font color="#E5E5E5"> check it on the public key to</font>

1012
00:44:45,779 --> 00:44:49,890
<font color="#E5E5E5">see whether we can factorize it or not</font>

1013
00:44:47,339 --> 00:44:51,630
<font color="#E5E5E5">and then so on the right</font><font color="#CCCCCC"> side we start</font>

1014
00:44:49,890 --> 00:44:53,400
<font color="#E5E5E5">looking and then as soon as we find one</font>

1015
00:44:51,630 --> 00:44:55,200
one bit flip<font color="#E5E5E5"> that allows us</font><font color="#CCCCCC"> to do the</font>

1016
00:44:53,400 --> 00:44:57,150
factorization<font color="#E5E5E5"> let me know okay this is</font>

1017
00:44:55,200 --> 00:44:59,038
the bit flip that<font color="#E5E5E5"> we want and then</font><font color="#CCCCCC"> we</font>

1018
00:44:57,150 --> 00:45:01,259
choose that and<font color="#E5E5E5"> then we saw like that</font>

1019
00:44:59,039 --> 00:45:03,450
page that physical page we put so like

1020
00:45:01,259 --> 00:45:05,069
the public key<font color="#CCCCCC"> that we of</font><font color="#E5E5E5"> the victim</font>

1021
00:45:03,450 --> 00:45:07,980
there the memory<font color="#CCCCCC"> to duplication in</font><font color="#E5E5E5"> the</font>

1022
00:45:05,069 --> 00:45:10,170
background like<font color="#E5E5E5"> basically updates the</font>

1023
00:45:07,980 --> 00:45:11,579
<font color="#E5E5E5">Select pointers of the victim to</font><font color="#CCCCCC"> point</font>

1024
00:45:10,170 --> 00:45:14,400
to this page and<font color="#E5E5E5"> then</font><font color="#CCCCCC"> we trigger the bit</font>

1025
00:45:11,579 --> 00:45:17,160
<font color="#E5E5E5">flip and this corrupts the</font><font color="#CCCCCC"> selector vm's</font>

1026
00:45:14,400 --> 00:45:18,930
<font color="#E5E5E5">public key and then we already</font>

1027
00:45:17,160 --> 00:45:20,520
<font color="#CCCCCC">after factors because the cluster have</font>

1028
00:45:18,930 --> 00:45:21,598
given us<font color="#CCCCCC"> the select the factors we</font>

1029
00:45:20,520 --> 00:45:25,170
generate the private key and then<font color="#E5E5E5"> we</font>

1030
00:45:21,599 --> 00:45:26,400
<font color="#CCCCCC">login all right so I'm gonna we're</font><font color="#E5E5E5"> gonna</font>

1031
00:45:25,170 --> 00:45:31,079
go<font color="#E5E5E5"> through this quickly</font>

1032
00:45:26,400 --> 00:45:40,470
I guess so here we are you<font color="#E5E5E5"> know like</font>

1033
00:45:31,079 --> 00:45:42,799
<font color="#E5E5E5">starting the</font><font color="#CCCCCC"> VMS</font><font color="#E5E5E5"> I'm gonna get all of</font>

1034
00:45:40,470 --> 00:45:42,799
<font color="#CCCCCC">the way</font>

1035
00:45:50,020 --> 00:45:56,390
this is really a<font color="#E5E5E5"> slow but you asked for</font>

1036
00:45:52,190 --> 00:45:59,240
<font color="#CCCCCC">it so</font><font color="#E5E5E5"> you have to watch watch true what</font>

1037
00:45:56,390 --> 00:46:01,400
is it doing<font color="#CCCCCC"> it's now starting the VM are</font>

1038
00:45:59,240 --> 00:46:03,680
starting up<font color="#E5E5E5"> so yeah so this is</font><font color="#CCCCCC"> the so</font>

1039
00:46:01,400 --> 00:46:09,140
like the public modulus of the<font color="#CCCCCC"> select</font>

1040
00:46:03,680 --> 00:46:11,690
<font color="#CCCCCC">the victim</font><font color="#E5E5E5"> and so it's waiting</font><font color="#CCCCCC"> its</font>

1041
00:46:09,140 --> 00:46:19,400
bootstrapping<font color="#E5E5E5"> its networking</font><font color="#CCCCCC"> so like it</font>

1042
00:46:11,690 --> 00:46:20,930
could talk with with them developing

1043
00:46:19,400 --> 00:46:24,200
this was really painful like it took us

1044
00:46:20,930 --> 00:46:27,290
<font color="#CCCCCC">like weeks because we had to</font><font color="#E5E5E5"> wait a</font>

1045
00:46:24,200 --> 00:46:29,720
retirement so here's the so like IP

1046
00:46:27,290 --> 00:46:35,060
address of the so now the attack<font color="#CCCCCC"> IAM is</font>

1047
00:46:29,720 --> 00:46:37,549
ready so we<font color="#E5E5E5"> ssh to the victim to make</font>

1048
00:46:35,060 --> 00:46:39,020
sure that<font color="#E5E5E5"> its page select with the with</font>

1049
00:46:37,550 --> 00:46:40,910
an invalid username so that we make sure

1050
00:46:39,020 --> 00:46:46,670
<font color="#CCCCCC">that the public key</font><font color="#E5E5E5"> is brought into into</font>

1051
00:46:40,910 --> 00:46:49,670
memory and at this point<font color="#E5E5E5"> you start like</font>

1052
00:46:46,670 --> 00:46:51,230
<font color="#E5E5E5">scanning for</font><font color="#CCCCCC"> 4-bit flips</font><font color="#E5E5E5"> and there on</font>

1053
00:46:49,670 --> 00:46:52,730
the<font color="#CCCCCC"> right side you can see</font><font color="#E5E5E5"> that</font><font color="#CCCCCC"> you know</font>

1054
00:46:51,230 --> 00:46:54,950
because<font color="#CCCCCC"> these are valid bit flips we</font>

1055
00:46:52,730 --> 00:46:56,860
start looking<font color="#E5E5E5"> we add them to our cluster</font>

1056
00:46:54,950 --> 00:47:00,490
and<font color="#E5E5E5"> we start</font><font color="#CCCCCC"> looking for one that</font><font color="#E5E5E5"> is</font>

1057
00:46:56,860 --> 00:47:00,490
<font color="#CCCCCC">basically we can factor</font>

1058
00:47:07,260 --> 00:47:12,640
so we<font color="#CCCCCC"> used the</font><font color="#E5E5E5"> ECM which is a</font><font color="#CCCCCC"> known</font>

1059
00:47:10,770 --> 00:47:16,170
factorization algorithm<font color="#E5E5E5"> for this which</font>

1060
00:47:12,640 --> 00:47:16,170
works<font color="#E5E5E5"> quite well for our situation</font>

1061
00:47:23,109 --> 00:47:28,479
yeah so now we found<font color="#CCCCCC"> the factorization</font>

1062
00:47:26,079 --> 00:47:29,920
<font color="#CCCCCC">so basically</font><font color="#E5E5E5"> one of our processes came</font>

1063
00:47:28,479 --> 00:47:31,989
back they<font color="#CCCCCC"> said if you do</font><font color="#E5E5E5"> this bit flip</font>

1064
00:47:29,920 --> 00:47:38,200
here will be the the<font color="#CCCCCC"> sort</font><font color="#E5E5E5"> like the the</font>

1065
00:47:31,989 --> 00:47:39,640
factors<font color="#E5E5E5"> for this and now we are going to</font>

1066
00:47:38,200 --> 00:47:41,140
wait for memory duplication in the

1067
00:47:39,640 --> 00:47:42,729
<font color="#E5E5E5">background so we put the public</font><font color="#CCCCCC"> key in</font>

1068
00:47:41,140 --> 00:47:44,200
there<font color="#CCCCCC"> maybe</font><font color="#E5E5E5"> waiting for the memory the</font>

1069
00:47:42,729 --> 00:47:48,149
duplication<font color="#CCCCCC"> process to actually you know</font>

1070
00:47:44,200 --> 00:47:48,149
<font color="#CCCCCC">merge the pages in</font><font color="#E5E5E5"> the background</font>

1071
00:47:54,980 --> 00:48:01,869
this is the music from<font color="#CCCCCC"> the video so yeah</font>

1072
00:47:59,210 --> 00:48:01,869
there is it there<font color="#CCCCCC"> is a music</font>

1073
00:48:31,299 --> 00:48:34,959
so here we are actually<font color="#E5E5E5"> looking from the</font>

1074
00:48:33,249 --> 00:48:37,118
outside<font color="#CCCCCC"> when the deduplication happens</font>

1075
00:48:34,959 --> 00:48:38,618
but in a real<font color="#CCCCCC"> world</font><font color="#E5E5E5"> the attacker could</font>

1076
00:48:37,119 --> 00:48:40,209
use the deduplication<font color="#CCCCCC"> side-channel to</font>

1077
00:48:38,619 --> 00:48:41,919
figure out when<font color="#E5E5E5"> the deduplication has</font>

1078
00:48:40,209 --> 00:48:43,989
happened or just<font color="#E5E5E5"> wait</font><font color="#CCCCCC"> 10</font><font color="#E5E5E5"> minutes you</font>

1079
00:48:41,919 --> 00:48:46,058
know so<font color="#E5E5E5"> this</font><font color="#CCCCCC"> is so like what you're</font>

1080
00:48:43,989 --> 00:48:48,159
<font color="#CCCCCC">doing here so we want to be we want</font><font color="#E5E5E5"> to</font>

1081
00:48:46,059 --> 00:48:50,549
check<font color="#CCCCCC"> that</font><font color="#E5E5E5"> indeed the deduplication has</font>

1082
00:48:48,159 --> 00:48:50,549
happened

1083
00:48:59,520 --> 00:49:04,940
I reckon she should be<font color="#E5E5E5"> okay</font>

1084
00:49:08,320 --> 00:49:17,720
<font color="#CCCCCC">alright the end is really quick</font><font color="#E5E5E5"> so most</font>

1085
00:49:16,369 --> 00:49:19,160
of the times basically<font color="#CCCCCC"> is spent</font><font color="#E5E5E5"> looking</font>

1086
00:49:17,720 --> 00:49:20,750
for<font color="#CCCCCC"> bid flips and waiting for</font>

1087
00:49:19,160 --> 00:49:22,730
<font color="#CCCCCC">deduplication to actually you know merge</font>

1088
00:49:20,750 --> 00:49:25,510
the pages but<font color="#E5E5E5"> the actual attack itself</font>

1089
00:49:22,730 --> 00:49:25,510
happens really quickly

1090
00:49:49,310 --> 00:49:55,240
<font color="#CCCCCC">I wonder if it's</font><font color="#E5E5E5"> gonna work</font><font color="#CCCCCC"> yeah I don't</font>

1091
00:49:51,890 --> 00:49:55,240
know<font color="#E5E5E5"> it's taking too long</font>

1092
00:49:57,100 --> 00:50:03,350
<font color="#CCCCCC">alright so now the duplication actually</font>

1093
00:50:00,260 --> 00:50:05,630
happened<font color="#E5E5E5"> so we're talking with the you</font>

1094
00:50:03,350 --> 00:50:10,850
<font color="#E5E5E5">know exploit instance running in the in</font>

1095
00:50:05,630 --> 00:50:12,530
the in<font color="#E5E5E5"> the attacker</font><font color="#CCCCCC"> we basically so</font><font color="#E5E5E5"> we</font>

1096
00:50:10,850 --> 00:50:15,950
waited<font color="#CCCCCC"> so long for this duplication to</font>

1097
00:50:12,530 --> 00:50:18,110
happen for this right<font color="#E5E5E5"> so we're basically</font>

1098
00:50:15,950 --> 00:50:21,230
once it is it happened basically

1099
00:50:18,110 --> 00:50:23,390
corrupted and then it<font color="#E5E5E5"> gives us the</font>

1100
00:50:21,230 --> 00:50:25,220
command<font color="#E5E5E5"> that you can try to</font><font color="#CCCCCC"> log in with</font>

1101
00:50:23,390 --> 00:50:27,650
<font color="#E5E5E5">this new private key and here we can see</font>

1102
00:50:25,220 --> 00:50:29,930
<font color="#E5E5E5">that</font><font color="#CCCCCC"> actually with this new private key</font>

1103
00:50:27,650 --> 00:50:30,350
we could actually<font color="#CCCCCC"> login and yeah so that</font>

1104
00:50:29,930 --> 00:50:33,879
was it

1105
00:50:30,350 --> 00:50:33,880
so this is so like how it looks like

1106
00:50:39,010 --> 00:50:52,290
[Applause]

1107
00:50:43,760 --> 00:50:55,829
<font color="#E5E5E5">there's a part</font><font color="#CCCCCC"> two to this let's go</font><font color="#E5E5E5"> back</font>

1108
00:50:52,290 --> 00:50:56,880
here<font color="#E5E5E5"> because yeah that was it</font><font color="#CCCCCC"> I think</font>

1109
00:50:55,829 --> 00:50:58,829
<font color="#CCCCCC">hopefully we have</font><font color="#E5E5E5"> some time</font><font color="#CCCCCC"> for</font>

1110
00:50:56,880 --> 00:51:01,460
questions<font color="#CCCCCC"> if not then you can always</font><font color="#E5E5E5"> go</font>

1111
00:50:58,829 --> 00:51:03,480
to<font color="#CCCCCC"> a</font><font color="#E5E5E5"> website or contact us on Twitter</font>

1112
00:51:01,460 --> 00:51:05,900
yeah<font color="#E5E5E5"> you can download the website the</font>

1113
00:51:03,480 --> 00:51:08,970
app if you trust us<font color="#CCCCCC"> you're trustworthy</font>

1114
00:51:05,900 --> 00:51:09,740
<font color="#E5E5E5">can download the app to test your mobile</font>

1115
00:51:08,970 --> 00:51:16,310
device

1116
00:51:09,740 --> 00:51:16,310
yeah thank you yeah thanks<font color="#CCCCCC"> for listening</font>

1117
00:51:21,360 --> 00:51:26,440
thank you so much<font color="#CCCCCC"> for this fascinating</font>

1118
00:51:24,040 --> 00:51:31,420
research and presentation<font color="#CCCCCC"> you just gave</font>

1119
00:51:26,440 --> 00:51:32,260
we do have time for a<font color="#CCCCCC"> Q&A yeah but first</font>

1120
00:51:31,420 --> 00:51:34,420
<font color="#E5E5E5">yeah</font>

1121
00:51:32,260 --> 00:51:43,240
please give<font color="#CCCCCC"> another big round</font><font color="#E5E5E5"> of</font>

1122
00:51:34,420 --> 00:51:45,970
applause for<font color="#E5E5E5"> this awesome research may</font>

1123
00:51:43,240 --> 00:51:48,640
be great<font color="#CCCCCC"> may</font><font color="#E5E5E5"> be a bit of</font><font color="#CCCCCC"> a dumb question</font>

1124
00:51:45,970 --> 00:51:51,160
<font color="#CCCCCC">but please bear</font><font color="#E5E5E5"> with me for a second so</font>

1125
00:51:48,640 --> 00:51:53,049
if you if<font color="#E5E5E5"> ro Hammer flips the bit why</font>

1126
00:51:51,160 --> 00:51:57,040
<font color="#E5E5E5">doesn't the error-correcting hardware in</font>

1127
00:51:53,050 --> 00:51:59,770
the RAM take care of that yeah well

1128
00:51:57,040 --> 00:52:03,220
<font color="#E5E5E5">because</font><font color="#CCCCCC"> many times there's no error</font>

1129
00:51:59,770 --> 00:52:04,990
correcting code in so of course you're

1130
00:52:03,220 --> 00:52:08,529
<font color="#CCCCCC">probably a</font><font color="#E5E5E5"> referring to ECC</font><font color="#CCCCCC"> which</font>

1131
00:52:04,990 --> 00:52:11,979
usually the<font color="#CCCCCC"> server's</font><font color="#E5E5E5"> should have and</font>

1132
00:52:08,530 --> 00:52:13,990
then it should stop<font color="#CCCCCC"> the factory attack</font>

1133
00:52:11,980 --> 00:52:15,640
for the cloud which we would<font color="#E5E5E5"> be most</font>

1134
00:52:13,990 --> 00:52:18,759
hard<font color="#CCCCCC"> because if</font><font color="#E5E5E5"> you have ECC there will</font>

1135
00:52:15,640 --> 00:52:20,560
be<font color="#E5E5E5"> harder but for your normal</font><font color="#CCCCCC"> desktop</font>

1136
00:52:18,760 --> 00:52:26,020
computer<font color="#CCCCCC"> or your laptop</font><font color="#E5E5E5"> usually doesn't</font>

1137
00:52:20,560 --> 00:52:27,279
<font color="#E5E5E5">have ECC same for mobile first of all</font>

1138
00:52:26,020 --> 00:52:30,820
thank<font color="#CCCCCC"> you for</font><font color="#E5E5E5"> your presentation it was</font>

1139
00:52:27,280 --> 00:52:34,690
really good<font color="#CCCCCC"> good and</font><font color="#E5E5E5"> a possible solution</font>

1140
00:52:30,820 --> 00:52:36,700
<font color="#E5E5E5">software side would be to hold a private</font>

1141
00:52:34,690 --> 00:52:39,250
<font color="#E5E5E5">key for the SSH server in multiple</font>

1142
00:52:36,700 --> 00:52:41,980
locations<font color="#CCCCCC"> in</font><font color="#E5E5E5"> the memory and check from</font>

1143
00:52:39,250 --> 00:52:44,020
multiple<font color="#CCCCCC"> locations so</font><font color="#E5E5E5"> that if you have a</font>

1144
00:52:41,980 --> 00:52:45,520
bit flip<font color="#E5E5E5"> at one point you need to</font><font color="#CCCCCC"> have</font>

1145
00:52:44,020 --> 00:52:47,650
the coincidence<font color="#E5E5E5"> of having it at two</font>

1146
00:52:45,520 --> 00:52:49,690
points<font color="#E5E5E5"> so you</font><font color="#CCCCCC"> mean the public key</font><font color="#E5E5E5"> yeah</font>

1147
00:52:47,650 --> 00:52:53,290
sorry the public key<font color="#CCCCCC"> so that's that's a</font>

1148
00:52:49,690 --> 00:52:55,990
possibility<font color="#E5E5E5"> so perhaps like a slightly</font>

1149
00:52:53,290 --> 00:52:59,200
<font color="#CCCCCC">like better way of</font><font color="#E5E5E5"> doing it would be to</font>

1150
00:52:55,990 --> 00:53:00,520
keep like integrity<font color="#E5E5E5"> check of the public</font>

1151
00:52:59,200 --> 00:53:02,560
key<font color="#E5E5E5"> and have it every time we want</font><font color="#CCCCCC"> to</font>

1152
00:53:00,520 --> 00:53:04,840
<font color="#E5E5E5">use it you check whether the integrity a</font>

1153
00:53:02,560 --> 00:53:07,950
hash that<font color="#CCCCCC"> you make out of your public</font>

1154
00:53:04,840 --> 00:53:12,280
<font color="#E5E5E5">key see the same we</font><font color="#CCCCCC"> propose</font><font color="#E5E5E5"> this but so</font>

1155
00:53:07,950 --> 00:53:13,720
the open<font color="#CCCCCC"> TPG</font><font color="#E5E5E5"> you guys open be they did</font>

1156
00:53:12,280 --> 00:53:16,390
<font color="#E5E5E5">something like this so they added the</font>

1157
00:53:13,720 --> 00:53:19,830
<font color="#E5E5E5">integrity check for this but the</font><font color="#CCCCCC"> ssh</font>

1158
00:53:16,390 --> 00:53:22,120
guys<font color="#E5E5E5"> theater rat is not the nicest guy</font>

1159
00:53:19,830 --> 00:53:23,529
also<font color="#CCCCCC"> he had concerns for backward</font>

1160
00:53:22,120 --> 00:53:25,480
<font color="#CCCCCC">compatibility because</font><font color="#E5E5E5"> once you have like</font>

1161
00:53:23,530 --> 00:53:27,640
ssh versions that don't<font color="#CCCCCC"> support this</font>

1162
00:53:25,480 --> 00:53:29,650
then it would it would<font color="#CCCCCC"> be</font><font color="#E5E5E5"> problematic so</font>

1163
00:53:27,640 --> 00:53:31,970
but yes<font color="#E5E5E5"> something some software solution</font>

1164
00:53:29,650 --> 00:53:33,890
like<font color="#CCCCCC"> this would</font><font color="#E5E5E5"> protect against attack</font>

1165
00:53:31,970 --> 00:53:35,660
you don't trust your hardware<font color="#E5E5E5"> that's the</font>

1166
00:53:33,890 --> 00:53:41,900
yeah<font color="#CCCCCC"> so don't</font><font color="#E5E5E5"> trust our memory that's</font>

1167
00:53:35,660 --> 00:53:44,930
<font color="#E5E5E5">there</font><font color="#CCCCCC"> so like the message thank you so</font>

1168
00:53:41,900 --> 00:53:46,250
when<font color="#E5E5E5"> your paper first came out by my</font>

1169
00:53:44,930 --> 00:53:48,560
<font color="#E5E5E5">composter</font><font color="#CCCCCC"> that I was really</font><font color="#E5E5E5"> impressed</font>

1170
00:53:46,250 --> 00:53:51,590
<font color="#CCCCCC">and secondly I started thinking</font><font color="#E5E5E5"> of</font>

1171
00:53:48,560 --> 00:53:53,869
defending because<font color="#E5E5E5"> that's what I well</font>

1172
00:53:51,590 --> 00:53:57,140
it's the other side of attacking<font color="#E5E5E5"> and and</font>

1173
00:53:53,869 --> 00:54:00,590
I<font color="#CCCCCC"> try</font><font color="#E5E5E5"> to look at on the</font><font color="#CCCCCC"> on the host side</font>

1174
00:53:57,140 --> 00:54:02,990
<font color="#E5E5E5">what are</font><font color="#CCCCCC"> the</font><font color="#E5E5E5"> the side channel signals</font>

1175
00:54:00,590 --> 00:54:05,390
which<font color="#CCCCCC"> can help</font><font color="#E5E5E5"> me detect a row</font><font color="#CCCCCC"> armored</font>

1176
00:54:02,990 --> 00:54:06,979
attack<font color="#CCCCCC"> so I tried</font><font color="#E5E5E5"> detecting</font><font color="#CCCCCC"> changes in</font>

1177
00:54:05,390 --> 00:54:09,859
my cache of course because if I try<font color="#E5E5E5"> to</font>

1178
00:54:06,980 --> 00:54:11,420
write stuff to memory<font color="#E5E5E5"> and time how long</font>

1179
00:54:09,859 --> 00:54:12,590
<font color="#E5E5E5">it took</font><font color="#CCCCCC"> to get back because if you</font><font color="#E5E5E5"> get</font>

1180
00:54:11,420 --> 00:54:14,000
you forget<font color="#CCCCCC"> it's from cache it'll come</font>

1181
00:54:12,590 --> 00:54:16,609
back<font color="#E5E5E5"> quicker if your cache is</font><font color="#CCCCCC"> empty</font>

1182
00:54:14,000 --> 00:54:19,250
because<font color="#E5E5E5"> of hammering</font><font color="#CCCCCC"> it comes back</font>

1183
00:54:16,609 --> 00:54:20,840
slower<font color="#E5E5E5"> so I tried to</font><font color="#CCCCCC"> get a fell that</font>

1184
00:54:19,250 --> 00:54:22,430
measurement<font color="#E5E5E5"> I couldn't find one do you</font>

1185
00:54:20,840 --> 00:54:25,010
have any theories were<font color="#CCCCCC"> where such a</font>

1186
00:54:22,430 --> 00:54:28,460
detection<font color="#E5E5E5"> would would could be developed</font>

1187
00:54:25,010 --> 00:54:32,960
yeah<font color="#CCCCCC"> I was talking about the host so</font>

1188
00:54:28,460 --> 00:54:35,420
it's<font color="#E5E5E5"> sure okay</font><font color="#CCCCCC"> there is a defense</font>

1189
00:54:32,960 --> 00:54:39,200
already out there it's called anvil<font color="#E5E5E5"> it</font>

1190
00:54:35,420 --> 00:54:40,849
looks at the performance<font color="#E5E5E5"> counters in</font>

1191
00:54:39,200 --> 00:54:43,069
your processors<font color="#E5E5E5"> to see whether you're</font>

1192
00:54:40,849 --> 00:54:45,020
<font color="#CCCCCC">getting too many cache misses and uses</font>

1193
00:54:43,070 --> 00:54:48,320
this as a metric to decide that

1194
00:54:45,020 --> 00:54:50,930
hammering<font color="#E5E5E5"> is going on and then refreshes</font>

1195
00:54:48,320 --> 00:54:52,580
the memory by accessing<font color="#E5E5E5"> those rows that</font>

1196
00:54:50,930 --> 00:54:54,440
might be affected by this<font color="#CCCCCC"> so there is</font>

1197
00:54:52,580 --> 00:54:56,540
already something going<font color="#E5E5E5"> on but it</font>

1198
00:54:54,440 --> 00:54:58,190
wouldn't<font color="#E5E5E5"> work on arm because we don't</font>

1199
00:54:56,540 --> 00:54:59,720
<font color="#CCCCCC">have those performance counters</font><font color="#E5E5E5"> yeah</font>

1200
00:54:58,190 --> 00:55:01,310
that's why I didn't focus alarm I

1201
00:54:59,720 --> 00:55:05,240
couldn't figure out<font color="#E5E5E5"> how</font><font color="#CCCCCC"> to</font><font color="#E5E5E5"> go that way</font>

1202
00:55:01,310 --> 00:55:07,099
<font color="#E5E5E5">thanks has to be in any cases so this</font>

1203
00:55:05,240 --> 00:55:09,740
<font color="#CCCCCC">attack actually</font><font color="#E5E5E5"> been used in the wild</font>

1204
00:55:07,099 --> 00:55:11,540
<font color="#E5E5E5">because</font><font color="#CCCCCC"> it seems</font><font color="#E5E5E5"> to me that there</font><font color="#CCCCCC"> are</font>

1205
00:55:09,740 --> 00:55:13,399
<font color="#E5E5E5">lots of lots of unknowns like you could</font>

1206
00:55:11,540 --> 00:55:14,990
use<font color="#CCCCCC"> it to route your own phone or you</font>

1207
00:55:13,400 --> 00:55:17,210
could use<font color="#E5E5E5"> it</font><font color="#CCCCCC"> to say compromise a smart</font>

1208
00:55:14,990 --> 00:55:18,770
card where<font color="#E5E5E5"> you can run software but</font>

1209
00:55:17,210 --> 00:55:20,960
<font color="#CCCCCC">there</font><font color="#E5E5E5"> would be too many unknowns to</font>

1210
00:55:18,770 --> 00:55:24,200
actually use<font color="#E5E5E5"> it against a random target</font>

1211
00:55:20,960 --> 00:55:27,320
<font color="#E5E5E5">in the wild like you say have</font><font color="#CCCCCC"> non</font>

1212
00:55:24,200 --> 00:55:30,049
<font color="#CCCCCC">targeted browser exploitation no</font><font color="#E5E5E5"> yeah I</font>

1213
00:55:27,320 --> 00:55:33,950
agree<font color="#CCCCCC"> would be</font><font color="#E5E5E5"> very hard to do this in a</font>

1214
00:55:30,050 --> 00:55:36,050
while<font color="#E5E5E5"> so we haven't seen it I guess</font>

1215
00:55:33,950 --> 00:55:37,339
<font color="#E5E5E5">people are trying to</font><font color="#CCCCCC"> implement the</font>

1216
00:55:36,050 --> 00:55:38,780
<font color="#CCCCCC">German attack through their own phone</font>

1217
00:55:37,339 --> 00:55:40,609
because if you have access to<font color="#E5E5E5"> it</font>

1218
00:55:38,780 --> 00:55:42,920
yourself and might be<font color="#E5E5E5"> easier but still</font>

1219
00:55:40,609 --> 00:55:43,700
it's<font color="#E5E5E5"> it's hard to set this up and pull</font>

1220
00:55:42,920 --> 00:55:45,230
it<font color="#E5E5E5"> off</font><font color="#CCCCCC"> that's true</font>

1221
00:55:43,700 --> 00:55:47,750
yeah so<font color="#CCCCCC"> d especially</font>

1222
00:55:45,230 --> 00:55:49,520
as<font color="#E5E5E5"> machina</font><font color="#CCCCCC"> I think that's so like quite</font>

1223
00:55:47,750 --> 00:55:52,010
dangerous because you<font color="#E5E5E5"> could basically</font>

1224
00:55:49,520 --> 00:55:54,140
<font color="#E5E5E5">just rent advertisement companies to</font>

1225
00:55:52,010 --> 00:55:56,570
basically<font color="#E5E5E5"> send your Java</font><font color="#CCCCCC"> skills to</font>

1226
00:55:54,140 --> 00:55:58,850
<font color="#E5E5E5">people but hopefully it took Eric who's</font>

1227
00:55:56,570 --> 00:56:00,350
a very very smart<font color="#E5E5E5"> guy</font><font color="#CCCCCC"> a very long time</font>

1228
00:55:58,850 --> 00:56:02,690
to<font color="#CCCCCC"> implement this attack so I'm kind of</font>

1229
00:56:00,350 --> 00:56:04,339
hoping<font color="#CCCCCC"> that you know it</font><font color="#E5E5E5"> will</font><font color="#CCCCCC"> take a long</font>

1230
00:56:02,690 --> 00:56:10,190
time<font color="#CCCCCC"> and by then hopefully</font><font color="#E5E5E5"> we would have</font>

1231
00:56:04,340 --> 00:56:13,070
<font color="#E5E5E5">like hardware mitigations in place as to</font>

1232
00:56:10,190 --> 00:56:17,240
<font color="#E5E5E5">the hardware deduplication attack</font><font color="#CCCCCC"> factor</font>

1233
00:56:13,070 --> 00:56:18,590
<font color="#E5E5E5">you mentioned</font><font color="#CCCCCC"> it's done per page</font><font color="#E5E5E5"> and the</font>

1234
00:56:17,240 --> 00:56:20,209
portion<font color="#E5E5E5"> of the memory you're interested</font>

1235
00:56:18,590 --> 00:56:23,690
in is much smaller than<font color="#CCCCCC"> that you maybe</font>

1236
00:56:20,210 --> 00:56:26,630
elaborate on how you get<font color="#E5E5E5"> an entire page</font>

1237
00:56:23,690 --> 00:56:28,850
<font color="#CCCCCC">to be identical to the target</font><font color="#E5E5E5"> that's</font><font color="#CCCCCC"> a</font>

1238
00:56:26,630 --> 00:56:31,580
very good<font color="#E5E5E5"> question</font><font color="#CCCCCC"> so the things that we</font>

1239
00:56:28,850 --> 00:56:33,980
rely<font color="#E5E5E5"> on so when we read this file it</font>

1240
00:56:31,580 --> 00:56:37,370
ends up being in the page cache which is

1241
00:56:33,980 --> 00:56:40,310
<font color="#E5E5E5">like this solar cache that so Linux or</font>

1242
00:56:37,370 --> 00:56:41,870
maybe<font color="#CCCCCC"> Windows</font><font color="#E5E5E5"> also yeah keeps - so like</font>

1243
00:56:40,310 --> 00:56:43,640
make sure<font color="#E5E5E5"> that most of your accesses are</font>

1244
00:56:41,870 --> 00:56:45,740
served from memory not<font color="#E5E5E5"> disk because</font>

1245
00:56:43,640 --> 00:56:47,960
memory is fast<font color="#E5E5E5"> this is</font><font color="#CCCCCC"> slow so and we</font>

1246
00:56:45,740 --> 00:56:50,060
are<font color="#CCCCCC"> targeting that</font><font color="#E5E5E5"> cache which so like</font>

1247
00:56:47,960 --> 00:56:51,560
is page so it's page based and then

1248
00:56:50,060 --> 00:56:53,690
whenever you read this file<font color="#E5E5E5"> basically</font>

1249
00:56:51,560 --> 00:56:55,520
<font color="#E5E5E5">puts it in</font><font color="#CCCCCC"> that page</font><font color="#E5E5E5"> so it has to</font>

1250
00:56:53,690 --> 00:56:57,170
allocate one page so even if the file<font color="#CCCCCC"> is</font>

1251
00:56:55,520 --> 00:56:58,759
a smaller than<font color="#CCCCCC"> a page</font><font color="#E5E5E5"> it is still</font>

1252
00:56:57,170 --> 00:57:01,190
allocates one page and<font color="#E5E5E5"> then the rest of</font>

1253
00:56:58,760 --> 00:57:03,350
the bytes are 0 and this saw like allows

1254
00:57:01,190 --> 00:57:05,240
us to get<font color="#E5E5E5"> an exact match basically</font><font color="#CCCCCC"> so</font>

1255
00:57:03,350 --> 00:57:13,520
that's so like how it works with you

1256
00:57:05,240 --> 00:57:15,890
think she can you please try<font color="#CCCCCC"> to speak a</font>

1257
00:57:13,520 --> 00:57:17,990
bit<font color="#CCCCCC"> more into the make have you seen any</font>

1258
00:57:15,890 --> 00:57:20,839
efforts trying<font color="#E5E5E5"> to implement this on an</font>

1259
00:57:17,990 --> 00:57:23,379
iPhone<font color="#E5E5E5"> for kill breaking for example I</font>

1260
00:57:20,840 --> 00:57:26,540
haven't seen it we briefly<font color="#CCCCCC"> looked at it</font>

1261
00:57:23,380 --> 00:57:29,030
<font color="#CCCCCC">but it was not very</font><font color="#E5E5E5"> straight</font><font color="#CCCCCC"> forward to</font>

1262
00:57:26,540 --> 00:57:31,550
<font color="#E5E5E5">cat direct memory access so we</font><font color="#CCCCCC"> couldn't</font>

1263
00:57:29,030 --> 00:57:35,380
<font color="#E5E5E5">actually</font><font color="#CCCCCC"> hammer and search for bit tips</font>

1264
00:57:31,550 --> 00:57:39,350
<font color="#CCCCCC">I'm</font><font color="#E5E5E5"> pretty sure it should be possible</font>

1265
00:57:35,380 --> 00:57:40,880
but so far there are no no<font color="#CCCCCC"> result no</font>

1266
00:57:39,350 --> 00:57:41,660
<font color="#E5E5E5">report if it's not</font><font color="#CCCCCC"> on it would</font><font color="#E5E5E5"> love</font>

1267
00:57:40,880 --> 00:57:45,320
somebody<font color="#E5E5E5"> to do it</font>

1268
00:57:41,660 --> 00:57:48,589
so get lots of<font color="#E5E5E5"> money from Apple if you</font>

1269
00:57:45,320 --> 00:57:50,660
do<font color="#E5E5E5"> this Apple likely to occur in the</font>

1270
00:57:48,590 --> 00:57:52,850
real world as a non intentional attack

1271
00:57:50,660 --> 00:57:55,670
just to say a particular usage<font color="#E5E5E5"> pattern</font>

1272
00:57:52,850 --> 00:57:58,100
of<font color="#E5E5E5"> computer can't please repeat the</font>

1273
00:57:55,670 --> 00:57:58,609
question<font color="#CCCCCC"> is this ever happened</font><font color="#E5E5E5"> likely to</font>

1274
00:57:58,100 --> 00:58:00,890
happen in

1275
00:57:58,609 --> 00:58:05,569
<font color="#E5E5E5">world is an unintentional attack just as</font>

1276
00:58:00,890 --> 00:58:07,129
a<font color="#E5E5E5"> normal software bug</font><font color="#CCCCCC"> so actually</font><font color="#E5E5E5"> so I</font>

1277
00:58:05,569 --> 00:58:08,650
think<font color="#CCCCCC"> when it was first reported there</font>

1278
00:58:07,130 --> 00:58:11,299
<font color="#E5E5E5">was this guy who was</font><font color="#CCCCCC"> working on this</font>

1279
00:58:08,650 --> 00:58:15,049
<font color="#CCCCCC">encoding</font><font color="#E5E5E5"> libraries and</font><font color="#CCCCCC"> encoding/decoding</font>

1280
00:58:11,299 --> 00:58:16,609
lipase<font color="#E5E5E5"> for so like a video and then he</font>

1281
00:58:15,049 --> 00:58:18,769
was getting so he was sure that<font color="#CCCCCC"> his</font>

1282
00:58:16,609 --> 00:58:20,598
software<font color="#E5E5E5"> was correct but most of the</font>

1283
00:58:18,769 --> 00:58:22,279
times he<font color="#E5E5E5"> was getting like sometimes like</font>

1284
00:58:20,599 --> 00:58:23,720
random corruptions<font color="#E5E5E5"> and it was a</font>

1285
00:58:22,279 --> 00:58:25,400
single-threaded program so he was like

1286
00:58:23,720 --> 00:58:27,259
really really baffled by why this is

1287
00:58:25,400 --> 00:58:28,670
happening<font color="#CCCCCC"> and then</font><font color="#E5E5E5"> once this error was</font>

1288
00:58:27,259 --> 00:58:31,039
reported he<font color="#CCCCCC"> was saying that</font><font color="#E5E5E5"> it</font><font color="#CCCCCC"> was very</font>

1289
00:58:28,670 --> 00:58:32,539
<font color="#E5E5E5">very much likely because</font><font color="#CCCCCC"> of this</font><font color="#E5E5E5"> so yeah</font>

1290
00:58:31,039 --> 00:58:34,549
indeed there<font color="#E5E5E5"> are cases in the real world</font>

1291
00:58:32,539 --> 00:58:36,019
<font color="#E5E5E5">that there are certain access but it</font>

1292
00:58:34,549 --> 00:58:37,670
doesn't happen too often<font color="#E5E5E5"> but if you do</font>

1293
00:58:36,019 --> 00:58:39,769
things like<font color="#E5E5E5"> apparently encoding and</font>

1294
00:58:37,670 --> 00:58:41,299
decoding in a certain way<font color="#E5E5E5"> it could cause</font>

1295
00:58:39,769 --> 00:58:47,238
this pattern and specifically<font color="#CCCCCC"> that</font><font color="#E5E5E5"> would</font>

1296
00:58:41,299 --> 00:58:50,089
<font color="#E5E5E5">cause bits to flip</font><font color="#CCCCCC"> have you</font><font color="#E5E5E5"> tried</font><font color="#CCCCCC"> it</font>

1297
00:58:47,239 --> 00:58:54,829
<font color="#E5E5E5">flipping also on ECDSA keys rather than</font>

1298
00:58:50,089 --> 00:58:56,989
as we<font color="#CCCCCC"> have not</font><font color="#E5E5E5"> tried it but it's</font>

1299
00:58:54,829 --> 00:58:59,359
interesting<font color="#CCCCCC"> yes I think</font><font color="#E5E5E5"> it there may be</font>

1300
00:58:56,989 --> 00:59:01,579
like a<font color="#E5E5E5"> potential so the things that</font><font color="#CCCCCC"> it</font>

1301
00:58:59,359 --> 00:59:03,078
<font color="#CCCCCC">should be something that people use</font><font color="#E5E5E5"> if</font>

1302
00:59:01,579 --> 00:59:04,579
people are using<font color="#CCCCCC"> it</font><font color="#E5E5E5"> we think that it's</font>

1303
00:59:03,079 --> 00:59:06,109
an interesting<font color="#E5E5E5"> target so the other thing</font>

1304
00:59:04,579 --> 00:59:07,640
that we would<font color="#E5E5E5"> like</font><font color="#CCCCCC"> people to</font><font color="#E5E5E5"> do to start</font>

1305
00:59:06,109 --> 00:59:10,430
thinking about<font color="#E5E5E5"> so because this attack</font>

1306
00:59:07,640 --> 00:59:11,390
the Philippines<font color="#CCCCCC"> attack targets crypto so</font>

1307
00:59:10,430 --> 00:59:13,819
we<font color="#E5E5E5"> think that there</font><font color="#CCCCCC"> should be a little</font>

1308
00:59:11,390 --> 00:59:15,170
<font color="#E5E5E5">bit more on the crypto side to start</font>

1309
00:59:13,819 --> 00:59:16,640
protecting<font color="#E5E5E5"> against these kinds of</font>

1310
00:59:15,170 --> 00:59:18,109
attacks<font color="#E5E5E5"> so we are hoping</font><font color="#CCCCCC"> there another</font>

1311
00:59:16,640 --> 00:59:19,999
<font color="#E5E5E5">cryptographer I don't think Victor is a</font>

1312
00:59:18,109 --> 00:59:21,650
cryptographer<font color="#CCCCCC"> we would</font><font color="#E5E5E5"> like keep the</font>

1313
00:59:19,999 --> 00:59:23,149
<font color="#CCCCCC">grabbers to also look at</font><font color="#E5E5E5"> this because it</font>

1314
00:59:21,650 --> 00:59:25,549
<font color="#E5E5E5">seems</font><font color="#CCCCCC"> like these kind of</font><font color="#E5E5E5"> errors are not</font>

1315
00:59:23,150 --> 00:59:27,380
<font color="#E5E5E5">going away and keep the graphic select</font>

1316
00:59:25,549 --> 00:59:29,989
data seems<font color="#E5E5E5"> to be a good target</font><font color="#CCCCCC"> so there</font>

1317
00:59:27,380 --> 00:59:34,700
should be<font color="#E5E5E5"> more protection indeed that's</font>

1318
00:59:29,989 --> 00:59:37,279
good question thank you<font color="#CCCCCC"> very much for</font>

1319
00:59:34,700 --> 00:59:39,618
the questions<font color="#E5E5E5"> to be on time for the next</font>

1320
00:59:37,279 --> 00:59:43,940
<font color="#E5E5E5">talk which is</font><font color="#CCCCCC"> going to be my safe is</font>

1321
00:59:39,619 --> 00:59:46,970
your<font color="#E5E5E5"> house at 1430</font><font color="#CCCCCC"> we are going to close</font>

1322
00:59:43,940 --> 00:59:48,680
<font color="#E5E5E5">down</font><font color="#CCCCCC"> Q&A now but Victor and</font><font color="#E5E5E5"> cafe will be</font>

1323
00:59:46,970 --> 00:59:54,339
available if you have more<font color="#E5E5E5"> questions or</font>

1324
00:59:48,680 --> 00:59:54,339
just<font color="#E5E5E5"> want to pet a pony after</font><font color="#CCCCCC"> the tour</font>

1325
00:59:54,579 --> 00:59:59,700
thank you again<font color="#E5E5E5"> and another warm round</font>

1326
00:59:57,499 --> 01:00:09,240
of applause<font color="#CCCCCC"> for Victor and Katherine</font>

1327
00:59:59,700 --> 01:00:21,399
[Applause]

1328
01:00:09,240 --> 01:00:21,399
[Music]

