1
00:00:00,000 --> 00:00:08,780
[Music]

2
00:00:15,389 --> 00:00:23,779
next<font color="#CCCCCC"> stock in schedule in room / is the</font>

3
00:00:18,510 --> 00:00:27,660
<font color="#E5E5E5">face dancer 2.0</font><font color="#CCCCCC"> it will be presented by</font>

4
00:00:23,779 --> 00:00:30,720
Dominic spiel and<font color="#E5E5E5"> Kate</font><font color="#CCCCCC"> emkin both are</font>

5
00:00:27,660 --> 00:00:34,230
open source software developers and this

6
00:00:30,720 --> 00:00:37,860
talk contains device<font color="#E5E5E5"> security around USB</font>

7
00:00:34,230 --> 00:00:38,430
devices<font color="#E5E5E5"> so the stage</font><font color="#CCCCCC"> is yours</font><font color="#E5E5E5"> thank you</font>

8
00:00:37,860 --> 00:00:47,250
<font color="#CCCCCC">very much</font>

9
00:00:38,430 --> 00:00:48,989
give them a warm applause please you may

10
00:00:47,250 --> 00:00:52,019
want<font color="#CCCCCC"> to save that applause</font><font color="#E5E5E5"> to see what</font>

11
00:00:48,989 --> 00:00:56,940
kind<font color="#CCCCCC"> of</font><font color="#E5E5E5"> job we do first</font><font color="#CCCCCC"> so this is face</font>

12
00:00:52,020 --> 00:00:59,789
dancer<font color="#E5E5E5"> - I'm Dominic</font><font color="#CCCCCC"> key Duncan it's</font>

13
00:00:56,940 --> 00:01:04,220
<font color="#CCCCCC">like a good name and and</font><font color="#E5E5E5"> this</font><font color="#CCCCCC"> is this</font>

14
00:00:59,789 --> 00:01:06,420
talks about<font color="#E5E5E5"> USB it's for USB spoofing</font>

15
00:01:04,220 --> 00:01:08,100
<font color="#E5E5E5">hacking we're gonna do some sniffing the</font>

16
00:01:06,420 --> 00:01:12,030
idea is building USB devices and

17
00:01:08,100 --> 00:01:13,949
software<font color="#E5E5E5"> and let's get into it</font><font color="#CCCCCC"> so I</font>

18
00:01:12,030 --> 00:01:16,530
think<font color="#E5E5E5"> we're gonna start off by thanking</font>

19
00:01:13,950 --> 00:01:18,479
<font color="#E5E5E5">a number of people this isn't all our</font>

20
00:01:16,530 --> 00:01:20,580
own work<font color="#E5E5E5"> this is</font><font color="#CCCCCC"> how we've built another</font>

21
00:01:18,479 --> 00:01:22,799
people's work<font color="#CCCCCC"> it's</font><font color="#E5E5E5"> time from the top</font>

22
00:01:20,580 --> 00:01:24,270
Travis<font color="#E5E5E5"> good speed and</font><font color="#CCCCCC"> Sergey for the</font>

23
00:01:22,799 --> 00:01:27,270
original<font color="#CCCCCC"> FaceTime</font><font color="#E5E5E5"> right the two</font><font color="#CCCCCC"> original</font>

24
00:01:24,270 --> 00:01:29,340
developers of face<font color="#CCCCCC"> tensor</font><font color="#E5E5E5"> one yep</font>

25
00:01:27,270 --> 00:01:31,710
Mike<font color="#E5E5E5"> Osman who is my boss inside some of</font>

26
00:01:29,340 --> 00:01:36,060
<font color="#CCCCCC">the hardware we're using and micro this</font>

27
00:01:31,710 --> 00:01:38,189
was<font color="#E5E5E5"> Scott was known as scanline and she</font>

28
00:01:36,060 --> 00:01:41,040
did some<font color="#CCCCCC"> thank you person in the</font>

29
00:01:38,189 --> 00:01:43,048
<font color="#E5E5E5">audience and she did some amazing work</font>

30
00:01:41,040 --> 00:01:45,750
<font color="#E5E5E5">with face dancer a couple of months</font><font color="#CCCCCC"> ago</font>

31
00:01:43,049 --> 00:01:47,520
<font color="#E5E5E5">which we will talk about and then our</font>

32
00:01:45,750 --> 00:01:50,850
employers<font color="#CCCCCC"> assured</font><font color="#E5E5E5"> information security</font>

33
00:01:47,520 --> 00:01:52,320
and<font color="#E5E5E5"> great</font><font color="#CCCCCC"> scope gadgets who are very</font>

34
00:01:50,850 --> 00:01:53,729
indulgent<font color="#CCCCCC"> letting</font><font color="#E5E5E5"> us come here and</font><font color="#CCCCCC"> talk</font>

35
00:01:52,320 --> 00:01:58,850
to<font color="#E5E5E5"> you and spend time</font><font color="#CCCCCC"> on these things</font>

36
00:01:53,729 --> 00:02:01,860
<font color="#E5E5E5">yeah</font><font color="#CCCCCC"> alright and guess what no all</font><font color="#E5E5E5"> right</font>

37
00:01:58,850 --> 00:02:05,640
<font color="#E5E5E5">so it turns out USB is absolutely</font>

38
00:02:01,860 --> 00:02:11,410
<font color="#E5E5E5">everywhere see the map</font><font color="#CCCCCC"> what</font>

39
00:02:05,640 --> 00:02:13,950
<font color="#E5E5E5">USBs so a couple years</font><font color="#CCCCCC"> ago a guy called</font>

40
00:02:11,410 --> 00:02:16,329
Josh right<font color="#CCCCCC"> came</font><font color="#E5E5E5"> up with a concept</font><font color="#CCCCCC"> that</font>

41
00:02:13,950 --> 00:02:19,420
<font color="#E5E5E5">we're not going to improve the</font><font color="#CCCCCC"> security</font>

42
00:02:16,330 --> 00:02:21,070
of our<font color="#CCCCCC"> devices of our software</font><font color="#E5E5E5"> and</font>

43
00:02:19,420 --> 00:02:25,750
things<font color="#E5E5E5"> like that until it's really easy</font>

44
00:02:21,070 --> 00:02:27,760
to<font color="#E5E5E5"> attack the those systems might heard</font>

45
00:02:25,750 --> 00:02:29,350
this described<font color="#CCCCCC"> recently as like it's not</font>

46
00:02:27,760 --> 00:02:30,489
<font color="#E5E5E5">a real attack until a script</font><font color="#CCCCCC"> kid he can</font>

47
00:02:29,350 --> 00:02:31,840
run it<font color="#CCCCCC"> and</font><font color="#E5E5E5"> someone else said no no it's</font>

48
00:02:30,490 --> 00:02:33,790
<font color="#E5E5E5">not a real attack until</font><font color="#CCCCCC"> a journalist can</font>

49
00:02:31,840 --> 00:02:35,620
<font color="#E5E5E5">run it and I think</font><font color="#CCCCCC"> it's the same it's</font>

50
00:02:33,790 --> 00:02:36,940
the same<font color="#E5E5E5"> idea the better your tools are</font>

51
00:02:35,620 --> 00:02:39,100
for attacking<font color="#E5E5E5"> something the more likely</font>

52
00:02:36,940 --> 00:02:40,480
<font color="#CCCCCC">we are to fix the security</font><font color="#E5E5E5"> because it's</font>

53
00:02:39,100 --> 00:02:41,920
gonna be more obvious<font color="#CCCCCC"> that it's</font><font color="#E5E5E5"> broken</font>

54
00:02:40,480 --> 00:02:44,530
right and so what we're actually

55
00:02:41,920 --> 00:02:46,989
<font color="#CCCCCC">building here is a USB attack</font><font color="#E5E5E5"> tool so a</font>

56
00:02:44,530 --> 00:02:48,700
tool that<font color="#E5E5E5"> you</font><font color="#CCCCCC"> can use we're not demoing</font>

57
00:02:46,990 --> 00:02:51,070
exploits<font color="#E5E5E5"> today even though we have a</font>

58
00:02:48,700 --> 00:02:53,619
<font color="#E5E5E5">couple that will show you kind of the</font>

59
00:02:51,070 --> 00:02:55,090
periphery of<font color="#E5E5E5"> our actual goal here is to</font>

60
00:02:53,620 --> 00:02:57,400
<font color="#CCCCCC">show</font><font color="#E5E5E5"> you a tool that we've built and</font>

61
00:02:55,090 --> 00:02:59,230
enable you to<font color="#CCCCCC"> use it so you</font><font color="#E5E5E5"> can actually</font>

62
00:02:57,400 --> 00:03:03,130
pick this stuff up and start hacking on

63
00:02:59,230 --> 00:03:05,290
<font color="#E5E5E5">USB devices yourself so yeah I mean I</font>

64
00:03:03,130 --> 00:03:07,690
think it's<font color="#E5E5E5"> important something like</font>

65
00:03:05,290 --> 00:03:10,480
we're not we're<font color="#CCCCCC"> not developing</font><font color="#E5E5E5"> these</font>

66
00:03:07,690 --> 00:03:12,070
<font color="#CCCCCC">things too because we have some great</font>

67
00:03:10,480 --> 00:03:14,709
USB exploit like I<font color="#CCCCCC"> don't</font><font color="#E5E5E5"> think any of</font>

68
00:03:12,070 --> 00:03:17,500
our attacks are incredibly new at least

69
00:03:14,709 --> 00:03:18,790
not<font color="#E5E5E5"> conceptually anyway</font><font color="#CCCCCC"> but but the idea</font>

70
00:03:17,500 --> 00:03:20,800
is<font color="#E5E5E5"> to</font><font color="#CCCCCC"> make the tool easier and more</font>

71
00:03:18,790 --> 00:03:22,780
<font color="#CCCCCC">accessible so that</font><font color="#E5E5E5"> we can kind</font><font color="#CCCCCC"> of</font>

72
00:03:20,800 --> 00:03:23,830
multiply that that endeavor<font color="#CCCCCC"> we've</font><font color="#E5E5E5"> only</font>

73
00:03:22,780 --> 00:03:25,720
got a<font color="#E5E5E5"> certain</font><font color="#CCCCCC"> amount of time to play</font>

74
00:03:23,830 --> 00:03:28,360
<font color="#CCCCCC">with USB</font><font color="#E5E5E5"> but if we make the tool easier</font>

75
00:03:25,720 --> 00:03:30,250
for hundreds<font color="#E5E5E5"> and possibly thousands of</font>

76
00:03:28,360 --> 00:03:32,440
people to use<font color="#E5E5E5"> then we're going to see</font>

77
00:03:30,250 --> 00:03:34,209
much better improvement<font color="#CCCCCC"> in in</font><font color="#E5E5E5"> USB</font>

78
00:03:32,440 --> 00:03:35,800
security<font color="#E5E5E5"> right so in the original</font><font color="#CCCCCC"> face</font>

79
00:03:34,209 --> 00:03:38,560
<font color="#E5E5E5">tenser tool came out that</font><font color="#CCCCCC"> actually</font>

80
00:03:35,800 --> 00:03:40,420
brought a lot of<font color="#E5E5E5"> people out</font><font color="#CCCCCC"> of</font><font color="#E5E5E5"> the</font>

81
00:03:38,560 --> 00:03:42,640
woodwork who are already<font color="#CCCCCC"> at</font><font color="#E5E5E5"> hacking USB</font>

82
00:03:40,420 --> 00:03:45,070
giving them the tools<font color="#CCCCCC"> to do this</font><font color="#E5E5E5"> really</font>

83
00:03:42,640 --> 00:03:47,230
actually<font color="#CCCCCC"> was I think what led to shoring</font>

84
00:03:45,070 --> 00:03:48,579
up of the first USB stacks<font color="#E5E5E5"> yeah</font><font color="#CCCCCC"> and</font>

85
00:03:47,230 --> 00:03:50,679
<font color="#E5E5E5">we'll kind of go into the history</font><font color="#CCCCCC"> in the</font>

86
00:03:48,580 --> 00:03:52,269
talk but the point<font color="#CCCCCC"> here is that</font><font color="#E5E5E5"> we</font><font color="#CCCCCC"> are</font>

87
00:03:50,680 --> 00:03:54,430
giving you<font color="#E5E5E5"> the tools here</font><font color="#CCCCCC"> to explore</font>

88
00:03:52,269 --> 00:03:56,980
<font color="#E5E5E5">that attack surface and by doing that to</font>

89
00:03:54,430 --> 00:04:03,400
do really cool things<font color="#CCCCCC"> yourself</font><font color="#E5E5E5"> yeah all</font>

90
00:03:56,980 --> 00:04:07,000
right<font color="#E5E5E5"> so I mean I think we we've already</font>

91
00:04:03,400 --> 00:04:09,700
described why we want<font color="#E5E5E5"> to hack on USB</font><font color="#CCCCCC"> but</font>

92
00:04:07,000 --> 00:04:11,830
it is<font color="#CCCCCC"> absolutely everywhere I think I</font>

93
00:04:09,700 --> 00:04:14,470
counted<font color="#E5E5E5"> recently and there are more USB</font>

94
00:04:11,830 --> 00:04:17,080
<font color="#CCCCCC">ports in my house than there are power</font>

95
00:04:14,470 --> 00:04:18,850
outlets<font color="#CCCCCC"> you know everything has a USB</font>

96
00:04:17,079 --> 00:04:22,300
<font color="#E5E5E5">port</font><font color="#CCCCCC"> on it</font><font color="#E5E5E5"> surprising</font>

97
00:04:18,850 --> 00:04:23,920
what has USB<font color="#E5E5E5"> my car has a</font><font color="#CCCCCC"> USB port for</font>

98
00:04:22,300 --> 00:04:25,840
<font color="#E5E5E5">firmware updates that's just sitting</font>

99
00:04:23,920 --> 00:04:27,100
there<font color="#E5E5E5"> in the center console so it looks</font>

100
00:04:25,840 --> 00:04:28,390
like<font color="#E5E5E5"> it's a charging port</font><font color="#CCCCCC"> but it</font>

101
00:04:27,100 --> 00:04:30,030
<font color="#CCCCCC">actually you can plug a flash drive in</font>

102
00:04:28,390 --> 00:04:31,900
<font color="#E5E5E5">update the firmware on</font><font color="#CCCCCC"> the car</font>

103
00:04:30,030 --> 00:04:33,549
<font color="#CCCCCC">controller obviously because</font>

104
00:04:31,900 --> 00:04:35,650
reprogramming all the firmware<font color="#CCCCCC"> has</font>

105
00:04:33,550 --> 00:04:37,150
complete<font color="#CCCCCC"> access to the</font><font color="#E5E5E5"> can bus and this</font>

106
00:04:35,650 --> 00:04:39,520
<font color="#E5E5E5">is something that's</font><font color="#CCCCCC"> probably running</font><font color="#E5E5E5"> a</font>

107
00:04:37,150 --> 00:04:41,260
shoddy<font color="#E5E5E5"> Honda ridden USB stack that they</font>

108
00:04:39,520 --> 00:04:42,400
shoved into some Linux single board

109
00:04:41,260 --> 00:04:44,409
computer that's also on<font color="#CCCCCC"> the infotainment</font>

110
00:04:42,400 --> 00:04:46,120
system<font color="#E5E5E5"> exactly I don't</font><font color="#CCCCCC"> know if you if</font>

111
00:04:44,410 --> 00:04:48,250
you've looked to the version<font color="#E5E5E5"> of the</font>

112
00:04:46,120 --> 00:04:50,530
<font color="#E5E5E5">Linux</font><font color="#CCCCCC"> kernel that runs on most most</font>

113
00:04:48,250 --> 00:04:52,060
routers and car infrastructure and

114
00:04:50,530 --> 00:04:53,260
<font color="#E5E5E5">things like that</font><font color="#CCCCCC"> these</font><font color="#E5E5E5"> been better</font>

115
00:04:52,060 --> 00:04:55,360
<font color="#CCCCCC">devices but</font><font color="#E5E5E5"> a lot of them are running</font>

116
00:04:53,260 --> 00:04:57,580
old 2.6 kernels and things<font color="#CCCCCC"> like that</font>

117
00:04:55,360 --> 00:04:59,740
things with known vulnerabilities in

118
00:04:57,580 --> 00:05:02,219
them but<font color="#E5E5E5"> there's no incentive to upgrade</font>

119
00:04:59,740 --> 00:05:04,930
because because we're not<font color="#E5E5E5"> attacking them</font>

120
00:05:02,220 --> 00:05:06,700
<font color="#E5E5E5">my television has a whole lot of USB</font>

121
00:05:04,930 --> 00:05:08,410
<font color="#CCCCCC">ports</font><font color="#E5E5E5"> and I think it's manufactured by</font>

122
00:05:06,700 --> 00:05:11,650
<font color="#E5E5E5">Samsung and there was a report a couple</font>

123
00:05:08,410 --> 00:05:13,000
<font color="#E5E5E5">of months</font><font color="#CCCCCC"> ago of those</font><font color="#E5E5E5"> TVs being</font>

124
00:05:11,650 --> 00:05:14,620
attacked<font color="#E5E5E5"> and one of the ways they were</font>

125
00:05:13,000 --> 00:05:16,840
attacked was by plugging<font color="#E5E5E5"> in a USB device</font>

126
00:05:14,620 --> 00:05:18,880
to<font color="#CCCCCC"> run a firmware update and one of the</font>

127
00:05:16,840 --> 00:05:20,590
wonderful<font color="#CCCCCC"> things about the vendor</font>

128
00:05:18,880 --> 00:05:21,940
ecosystem right<font color="#E5E5E5"> now is you start off</font>

129
00:05:20,590 --> 00:05:23,799
<font color="#CCCCCC">with a</font><font color="#E5E5E5"> kind of the core mainline Linux</font>

130
00:05:21,940 --> 00:05:25,210
kernel<font color="#E5E5E5"> everyone Forks it and starts</font>

131
00:05:23,800 --> 00:05:26,830
building<font color="#CCCCCC"> their special sauce on top</font><font color="#E5E5E5"> of</font>

132
00:05:25,210 --> 00:05:28,810
<font color="#E5E5E5">that and so what you wind up</font><font color="#CCCCCC"> with our</font>

133
00:05:26,830 --> 00:05:31,150
televisions that have very old versions

134
00:05:28,810 --> 00:05:32,560
of the Linux<font color="#CCCCCC"> kernel that are never being</font>

135
00:05:31,150 --> 00:05:34,150
updated<font color="#E5E5E5"> because now it's become too much</font>

136
00:05:32,560 --> 00:05:36,370
<font color="#E5E5E5">of</font><font color="#CCCCCC"> a pain</font><font color="#E5E5E5"> for someone like Samsung to</font>

137
00:05:34,150 --> 00:05:37,750
pull<font color="#E5E5E5"> Linux patches into Tizen which is</font>

138
00:05:36,370 --> 00:05:40,360
their derivative Linux distribution

139
00:05:37,750 --> 00:05:42,490
<font color="#E5E5E5">exactly they forked at some point and</font>

140
00:05:40,360 --> 00:05:43,990
add their<font color="#CCCCCC"> own things but</font><font color="#E5E5E5"> don't don't</font>

141
00:05:42,490 --> 00:05:46,690
merge future changes<font color="#E5E5E5"> and never merge</font>

142
00:05:43,990 --> 00:05:48,280
back<font color="#CCCCCC"> and so that's got security</font>

143
00:05:46,690 --> 00:05:49,870
<font color="#E5E5E5">implications for us all right and it's</font>

144
00:05:48,280 --> 00:05:54,760
<font color="#CCCCCC">not like</font><font color="#E5E5E5"> anyone</font><font color="#CCCCCC"> saying Smart TVs right</font>

145
00:05:49,870 --> 00:05:57,970
so right<font color="#E5E5E5"> and this the photo on screen</font>

146
00:05:54,760 --> 00:05:59,409
here is a<font color="#E5E5E5"> little tool that</font><font color="#CCCCCC"> we built a</font>

147
00:05:57,970 --> 00:06:03,610
couple<font color="#E5E5E5"> of</font><font color="#CCCCCC"> years ago called turnips cool</font>

148
00:05:59,410 --> 00:06:05,050
<font color="#CCCCCC">which which is</font><font color="#E5E5E5"> not specifically a USB</font>

149
00:06:03,610 --> 00:06:08,800
hack but it turns<font color="#E5E5E5"> out we were to build</font>

150
00:06:05,050 --> 00:06:10,720
<font color="#CCCCCC">something into</font><font color="#E5E5E5"> a USB connector so here</font>

151
00:06:08,800 --> 00:06:12,610
you can you can see in the mold<font color="#E5E5E5"> right</font>

152
00:06:10,720 --> 00:06:14,770
before<font color="#E5E5E5"> we've we squished in the the</font>

153
00:06:12,610 --> 00:06:16,630
<font color="#CCCCCC">sugru to turn it into a what looks like</font>

154
00:06:14,770 --> 00:06:19,210
a USB a connector<font color="#E5E5E5"> and hidden inside that</font>

155
00:06:16,630 --> 00:06:20,860
<font color="#E5E5E5">plug was a USB hub so your</font><font color="#CCCCCC"> cable still</font>

156
00:06:19,210 --> 00:06:23,979
worked as if it was connected<font color="#E5E5E5"> your USB</font>

157
00:06:20,860 --> 00:06:25,690
device was connected<font color="#E5E5E5"> but the hub also</font>

158
00:06:23,980 --> 00:06:27,100
had a wireless<font color="#E5E5E5"> micro controller hanging</font>

159
00:06:25,690 --> 00:06:31,000
off air that we controlled<font color="#E5E5E5"> the firmware</font>

160
00:06:27,100 --> 00:06:32,650
on remotely<font color="#E5E5E5"> right so the goal</font><font color="#CCCCCC"> here is by</font>

161
00:06:31,000 --> 00:06:35,230
<font color="#CCCCCC">enabling</font><font color="#E5E5E5"> you to do these</font>

162
00:06:32,650 --> 00:06:37,479
you can start really<font color="#E5E5E5"> getting your foot</font>

163
00:06:35,230 --> 00:06:38,770
in<font color="#CCCCCC"> the</font><font color="#E5E5E5"> door with embedded systems so one</font>

164
00:06:37,480 --> 00:06:41,200
of the use<font color="#CCCCCC"> cases that I think is really</font>

165
00:06:38,770 --> 00:06:43,630
<font color="#E5E5E5">cool was actually if you take our</font>

166
00:06:41,200 --> 00:06:44,979
software<font color="#E5E5E5"> and plug it into a USB port or</font>

167
00:06:43,630 --> 00:06:46,540
something like<font color="#E5E5E5"> your car you can actually</font>

168
00:06:44,980 --> 00:06:49,270
tell what version<font color="#CCCCCC"> of the operating</font>

169
00:06:46,540 --> 00:06:51,250
system<font color="#E5E5E5"> that</font><font color="#CCCCCC"> car</font><font color="#E5E5E5"> is running because a lot</font>

170
00:06:49,270 --> 00:06:53,159
of the individual<font color="#E5E5E5"> steps that it does as</font>

171
00:06:51,250 --> 00:06:55,960
it configures that USB<font color="#E5E5E5"> device are</font>

172
00:06:53,160 --> 00:06:58,060
specific to the implementation<font color="#CCCCCC"> of USB so</font>

173
00:06:55,960 --> 00:06:59,859
by now<font color="#E5E5E5"> having done</font><font color="#CCCCCC"> USB for a few years I</font>

174
00:06:58,060 --> 00:07:01,930
can<font color="#CCCCCC"> actually look at the list of steps</font>

175
00:06:59,860 --> 00:07:04,450
<font color="#CCCCCC">that happen</font><font color="#E5E5E5"> and say oh that's Windows</font>

176
00:07:01,930 --> 00:07:05,950
that's Linux<font color="#CCCCCC"> that's before</font><font color="#E5E5E5"> you know 2009</font>

177
00:07:04,450 --> 00:07:07,659
and I think we'll come<font color="#E5E5E5"> on to that as we</font>

178
00:07:05,950 --> 00:07:08,860
described how USB works because we're

179
00:07:07,660 --> 00:07:12,880
going<font color="#E5E5E5"> to give it a</font><font color="#CCCCCC"> very</font><font color="#E5E5E5"> brief overview</font>

180
00:07:08,860 --> 00:07:14,500
<font color="#CCCCCC">of</font><font color="#E5E5E5"> the simplest</font><font color="#CCCCCC"> high level aspects that</font>

181
00:07:12,880 --> 00:07:16,510
<font color="#E5E5E5">you need to know about about how USB</font>

182
00:07:14,500 --> 00:07:19,990
<font color="#E5E5E5">works as a technology yeah</font>

183
00:07:16,510 --> 00:07:21,460
do you want it John sure this so the

184
00:07:19,990 --> 00:07:23,620
we're gonna start off with<font color="#CCCCCC"> a brief</font>

185
00:07:21,460 --> 00:07:25,560
<font color="#CCCCCC">description of</font><font color="#E5E5E5"> how USB works</font><font color="#CCCCCC"> trying</font><font color="#E5E5E5"> not</font>

186
00:07:23,620 --> 00:07:28,540
to stray out of the video range here<font color="#E5E5E5"> but</font>

187
00:07:25,560 --> 00:07:30,430
question that most people ask themselves

188
00:07:28,540 --> 00:07:33,370
<font color="#CCCCCC">as they start wanting to</font><font color="#E5E5E5"> hack something</font>

189
00:07:30,430 --> 00:07:35,770
like USB<font color="#E5E5E5"> is how do I get into this the</font>

190
00:07:33,370 --> 00:07:37,720
spec is probably 500 pages if you're

191
00:07:35,770 --> 00:07:39,370
looking at USB<font color="#CCCCCC"> to significantly longer</font>

192
00:07:37,720 --> 00:07:41,710
if you're looking at<font color="#CCCCCC"> SuperSpeed</font><font color="#E5E5E5"> there's</font>

193
00:07:39,370 --> 00:07:43,390
a lot of documentation<font color="#CCCCCC"> there so how much</font>

194
00:07:41,710 --> 00:07:45,820
do you really<font color="#E5E5E5"> have to</font><font color="#CCCCCC"> know in order to</font>

195
00:07:43,390 --> 00:07:48,940
<font color="#E5E5E5">be able to start hacking USB and the</font>

196
00:07:45,820 --> 00:07:50,650
answer is not<font color="#E5E5E5"> much we can still hack USB</font>

197
00:07:48,940 --> 00:07:52,750
without having a ton of background

198
00:07:50,650 --> 00:07:54,429
knowledge<font color="#E5E5E5"> yes so so I mean this is</font>

199
00:07:52,750 --> 00:07:56,710
exactly<font color="#CCCCCC"> the</font><font color="#E5E5E5"> face I would make if you ask</font>

200
00:07:54,430 --> 00:08:00,070
me for specific details<font color="#CCCCCC"> of</font><font color="#E5E5E5"> the USB spec</font>

201
00:07:56,710 --> 00:08:02,080
because<font color="#E5E5E5"> I've not read it</font><font color="#CCCCCC"> and and it</font>

202
00:08:00,070 --> 00:08:03,610
turns out as as<font color="#E5E5E5"> Carl said it's it's 500</font>

203
00:08:02,080 --> 00:08:05,830
pages and to implement<font color="#CCCCCC"> a device you need</font>

204
00:08:03,610 --> 00:08:07,960
maybe<font color="#CCCCCC"> 10</font><font color="#E5E5E5"> of them 10 20</font><font color="#CCCCCC"> of those pages at</font>

205
00:08:05,830 --> 00:08:10,270
most<font color="#CCCCCC"> there's a lot of</font><font color="#E5E5E5"> complexity in the</font>

206
00:08:07,960 --> 00:08:11,799
<font color="#E5E5E5">host side and so it seems like that</font>

207
00:08:10,270 --> 00:08:13,570
<font color="#CCCCCC">would be</font><font color="#E5E5E5"> where all</font><font color="#CCCCCC"> the bugs are and</font>

208
00:08:11,800 --> 00:08:15,910
maybe<font color="#E5E5E5"> it's worth trying to attack them</font>

209
00:08:13,570 --> 00:08:18,400
yeah<font color="#CCCCCC"> and so</font><font color="#E5E5E5"> well you can definitely get</font>

210
00:08:15,910 --> 00:08:20,290
better at attacking these things if

211
00:08:18,400 --> 00:08:21,640
you're willing to spend<font color="#E5E5E5"> time looking</font><font color="#CCCCCC"> at</font>

212
00:08:20,290 --> 00:08:23,620
the spec and<font color="#CCCCCC"> do crazier and more</font>

213
00:08:21,640 --> 00:08:26,620
<font color="#CCCCCC">progressive things all the low-hanging</font>

214
00:08:23,620 --> 00:08:28,900
fruit<font color="#E5E5E5"> really requires you to know maybe</font>

215
00:08:26,620 --> 00:08:30,220
<font color="#CCCCCC">ten things about USB</font><font color="#E5E5E5"> yeah we'll go over</font>

216
00:08:28,900 --> 00:08:33,730
those let's let's try<font color="#E5E5E5"> and go over those</font>

217
00:08:30,220 --> 00:08:36,310
<font color="#E5E5E5">those ten so USB came about because</font>

218
00:08:33,730 --> 00:08:38,320
there were a<font color="#E5E5E5"> lot of disparate various</font>

219
00:08:36,309 --> 00:08:41,079
serial and parallel port technologies

220
00:08:38,320 --> 00:08:42,490
USB was an attempt to unify<font color="#E5E5E5"> them</font><font color="#CCCCCC"> I</font><font color="#E5E5E5"> think</font>

221
00:08:41,080 --> 00:08:44,050
it is the<font color="#CCCCCC"> only attempt I've seen to</font>

222
00:08:42,490 --> 00:08:44,680
unify things<font color="#E5E5E5"> that has actually really</font>

223
00:08:44,049 --> 00:08:48,279
worked

224
00:08:44,680 --> 00:08:50,050
yeah I mean it<font color="#CCCCCC"> people complain about USB</font>

225
00:08:48,279 --> 00:08:51,699
every now and again to<font color="#E5E5E5"> me and I</font><font color="#CCCCCC"> think</font>

226
00:08:50,050 --> 00:08:53,410
those<font color="#CCCCCC"> people clearly</font><font color="#E5E5E5"> don't remember</font>

227
00:08:51,699 --> 00:08:55,899
trying<font color="#E5E5E5"> to get a serial</font><font color="#CCCCCC"> mouse working and</font>

228
00:08:53,410 --> 00:08:58,930
a parallel<font color="#E5E5E5"> port printer and then you</font>

229
00:08:55,899 --> 00:09:01,779
know<font color="#CCCCCC"> install</font><font color="#E5E5E5"> Mouse calm yeah set up the</font>

230
00:08:58,930 --> 00:09:04,599
<font color="#CCCCCC">I accused exactly oh</font><font color="#E5E5E5"> wow</font><font color="#CCCCCC"> that takes me</font>

231
00:09:01,779 --> 00:09:07,449
back<font color="#CCCCCC"> and those those weird little serial</font>

232
00:09:04,600 --> 00:09:09,699
ps2 adapters<font color="#CCCCCC"> to plug</font><font color="#E5E5E5"> you one</font><font color="#CCCCCC"> Mouse</font><font color="#E5E5E5"> into</font>

233
00:09:07,449 --> 00:09:11,740
the other port and oh yeah it's<font color="#E5E5E5"> just so</font>

234
00:09:09,699 --> 00:09:13,300
nice<font color="#CCCCCC"> to go to to buy a device</font><font color="#E5E5E5"> and know</font>

235
00:09:11,740 --> 00:09:16,569
that<font color="#E5E5E5"> it plugs into almost anything</font><font color="#CCCCCC"> and</font>

236
00:09:13,300 --> 00:09:18,878
<font color="#E5E5E5">it I think it really as a technology</font><font color="#CCCCCC"> I</font>

237
00:09:16,569 --> 00:09:20,170
mean<font color="#E5E5E5"> I love USB I'm I'm not trying to</font>

238
00:09:18,879 --> 00:09:21,309
<font color="#E5E5E5">attack you because</font><font color="#CCCCCC"> I think it's bad I'm</font>

239
00:09:20,170 --> 00:09:23,050
talking I'm trying to tack<font color="#CCCCCC"> it because I</font>

240
00:09:21,309 --> 00:09:25,660
think it's interesting<font color="#E5E5E5"> it's prevalent</font>

241
00:09:23,050 --> 00:09:28,240
and it's it's so useful the idea that<font color="#E5E5E5"> I</font>

242
00:09:25,660 --> 00:09:29,889
<font color="#CCCCCC">can take a drive from</font><font color="#E5E5E5"> one place and plug</font>

243
00:09:28,240 --> 00:09:32,499
it in somewhere<font color="#CCCCCC"> else and it just works</font>

244
00:09:29,889 --> 00:09:34,029
<font color="#CCCCCC">and and so on</font><font color="#E5E5E5"> and so forth is is a</font>

245
00:09:32,499 --> 00:09:36,699
concept that<font color="#E5E5E5"> was slightly</font><font color="#CCCCCC"> alien in in</font>

246
00:09:34,029 --> 00:09:38,499
the 90s<font color="#E5E5E5"> yeah and then I mean it's true</font>

247
00:09:36,699 --> 00:09:39,609
<font color="#CCCCCC">that when you describe things as I love</font>

248
00:09:38,499 --> 00:09:41,259
<font color="#E5E5E5">USB people accuse you of having</font>

249
00:09:39,610 --> 00:09:43,089
<font color="#E5E5E5">Stockholm Syndrome</font><font color="#CCCCCC"> yeah the actual</font>

250
00:09:41,259 --> 00:09:44,139
<font color="#E5E5E5">accusation</font><font color="#CCCCCC"> that is it was my leverage</font>

251
00:09:43,089 --> 00:09:46,540
several times this week

252
00:09:44,139 --> 00:09:47,860
but USB is really really nice<font color="#CCCCCC"> especially</font>

253
00:09:46,540 --> 00:09:49,929
compared to<font color="#CCCCCC"> the old</font><font color="#E5E5E5"> days where you'd</font>

254
00:09:47,860 --> 00:09:51,699
plug something into a db9<font color="#E5E5E5"> connector you</font>

255
00:09:49,929 --> 00:09:52,870
have<font color="#CCCCCC"> all this stuff that you need to</font>

256
00:09:51,699 --> 00:09:55,449
configure in order to have the

257
00:09:52,870 --> 00:09:58,600
communication work like baud rate which

258
00:09:55,449 --> 00:09:59,889
<font color="#E5E5E5">you need to kind of do as a user and you</font>

259
00:09:58,600 --> 00:10:01,839
need to know as a user and<font color="#E5E5E5"> you need to</font>

260
00:09:59,889 --> 00:10:06,670
know how<font color="#E5E5E5"> to do in order</font><font color="#CCCCCC"> to</font><font color="#E5E5E5"> actually get</font>

261
00:10:01,839 --> 00:10:08,740
<font color="#E5E5E5">communication going so USB was a attempt</font>

262
00:10:06,670 --> 00:10:10,360
to take all<font color="#CCCCCC"> of these various disparate</font>

263
00:10:08,740 --> 00:10:12,670
ports and squish them<font color="#CCCCCC"> down into just</font>

264
00:10:10,360 --> 00:10:15,059
<font color="#CCCCCC">this port here</font><font color="#E5E5E5"> so just the USB port</font>

265
00:10:12,670 --> 00:10:17,769
<font color="#CCCCCC">right on the center of that diagram</font><font color="#E5E5E5"> and</font>

266
00:10:15,059 --> 00:10:20,439
again it is dead simple<font color="#E5E5E5"> if you're</font><font color="#CCCCCC"> a</font>

267
00:10:17,769 --> 00:10:21,999
device<font color="#E5E5E5"> really the whole goal of USB is</font>

268
00:10:20,439 --> 00:10:24,069
to give you a protocol<font color="#E5E5E5"> that lets you</font>

269
00:10:21,999 --> 00:10:26,679
take<font color="#CCCCCC"> bytes and squish them</font><font color="#E5E5E5"> through a</font>

270
00:10:24,069 --> 00:10:28,779
narrow single differential pair back and

271
00:10:26,679 --> 00:10:31,360
forth over a cable<font color="#E5E5E5"> and if you kind of</font>

272
00:10:28,779 --> 00:10:33,579
take in the USB abstractions<font color="#E5E5E5"> it really</font>

273
00:10:31,360 --> 00:10:36,699
does look<font color="#CCCCCC"> like you are just</font><font color="#E5E5E5"> moving bytes</font>

274
00:10:33,579 --> 00:10:38,620
back and forth over<font color="#CCCCCC"> a series of pipes</font><font color="#E5E5E5"> so</font>

275
00:10:36,699 --> 00:10:40,959
just like you<font color="#CCCCCC"> would be doing on kind</font><font color="#E5E5E5"> of</font>

276
00:10:38,620 --> 00:10:44,110
you<font color="#E5E5E5"> are rs-232 level stuff you can</font>

277
00:10:40,959 --> 00:10:46,689
<font color="#E5E5E5">actually send bytes along USB one way on</font>

278
00:10:44,110 --> 00:10:48,309
<font color="#E5E5E5">the</font><font color="#CCCCCC"> other and if</font><font color="#E5E5E5"> that's what you want to</font>

279
00:10:46,689 --> 00:10:50,618
do it is<font color="#E5E5E5"> actually pretty</font><font color="#CCCCCC"> simple the only</font>

280
00:10:48,309 --> 00:10:54,399
<font color="#E5E5E5">constraint is</font><font color="#CCCCCC"> that USB requires you to</font>

281
00:10:50,619 --> 00:10:56,799
do some things<font color="#CCCCCC"> in the vein of wanting</font>

282
00:10:54,399 --> 00:10:58,540
<font color="#CCCCCC">that needing that standardization so it</font>

283
00:10:56,799 --> 00:11:00,490
does force<font color="#CCCCCC"> you to do some initial</font>

284
00:10:58,540 --> 00:11:03,969
in order<font color="#CCCCCC"> to have a device plug in and</font>

285
00:11:00,490 --> 00:11:06,339
<font color="#E5E5E5">nicely say yes</font><font color="#CCCCCC"> I'm hack RF</font><font color="#E5E5E5"> this is my</font>

286
00:11:03,970 --> 00:11:07,600
vendor ID and Product ID operating

287
00:11:06,339 --> 00:11:08,800
system here's a<font color="#E5E5E5"> hint if you want to</font>

288
00:11:07,600 --> 00:11:09,910
figure<font color="#E5E5E5"> out what driver you should be</font>

289
00:11:08,800 --> 00:11:11,649
using for<font color="#E5E5E5"> me</font><font color="#CCCCCC"> and</font>

290
00:11:09,910 --> 00:11:13,569
and I<font color="#CCCCCC"> think like you were saying you</font>

291
00:11:11,649 --> 00:11:14,680
<font color="#E5E5E5">wouldn't you have to plug</font><font color="#CCCCCC"> in a sale</font>

292
00:11:13,570 --> 00:11:16,959
<font color="#CCCCCC">report you had to configure the baud</font>

293
00:11:14,680 --> 00:11:18,699
rate and the there were how<font color="#E5E5E5"> many ever</font>

294
00:11:16,959 --> 00:11:21,459
<font color="#E5E5E5">however many different hundreds of modes</font>

295
00:11:18,699 --> 00:11:23,829
of parallel ports for printers and<font color="#E5E5E5"> you'd</font>

296
00:11:21,459 --> 00:11:26,739
never get them quite right and and

297
00:11:23,829 --> 00:11:28,989
things<font color="#E5E5E5"> like</font><font color="#CCCCCC"> that and so</font><font color="#E5E5E5"> USB standardized</font>

298
00:11:26,740 --> 00:11:31,720
<font color="#CCCCCC">that in that it forces the device</font><font color="#E5E5E5"> to say</font>

299
00:11:28,990 --> 00:11:33,459
<font color="#E5E5E5">to initially say here is my information</font>

300
00:11:31,720 --> 00:11:35,589
<font color="#E5E5E5">and here is how you configure me and</font>

301
00:11:33,459 --> 00:11:40,540
that gives that<font color="#CCCCCC"> gives us the</font><font color="#E5E5E5"> ability to</font>

302
00:11:35,589 --> 00:11:42,370
plug and play and<font color="#E5E5E5"> then and so that's no</font>

303
00:11:40,540 --> 00:11:44,740
<font color="#CCCCCC">that's fine</font><font color="#E5E5E5"> I was I forgot which type</font>

304
00:11:42,370 --> 00:11:46,199
was next<font color="#CCCCCC"> yes I was I</font><font color="#E5E5E5"> was segwaying into</font>

305
00:11:44,740 --> 00:11:48,430
the wrong slide

306
00:11:46,199 --> 00:11:49,779
so so the way<font color="#E5E5E5"> it's</font><font color="#CCCCCC"> broken down is you</font>

307
00:11:48,430 --> 00:11:52,839
have the these<font color="#E5E5E5"> things called</font><font color="#CCCCCC"> endpoints</font>

308
00:11:49,779 --> 00:11:54,220
and I guess I guess it's it's possible

309
00:11:52,839 --> 00:11:56,649
<font color="#E5E5E5">you if you think about a network</font>

310
00:11:54,220 --> 00:11:58,630
connection between two places<font color="#CCCCCC"> thinking</font>

311
00:11:56,649 --> 00:12:00,670
<font color="#CCCCCC">about that network connection having you</font>

312
00:11:58,630 --> 00:12:02,589
know ports<font color="#E5E5E5"> whatever this is</font><font color="#CCCCCC"> a little bit</font>

313
00:12:00,670 --> 00:12:04,060
similar to<font color="#E5E5E5"> that yes so if you imagine</font>

314
00:12:02,589 --> 00:12:05,709
you<font color="#CCCCCC"> have</font><font color="#E5E5E5"> you might have a network where</font>

315
00:12:04,060 --> 00:12:07,569
<font color="#CCCCCC">you have five computers on each side</font><font color="#E5E5E5"> and</font>

316
00:12:05,709 --> 00:12:09,550
it's all narrowed down to<font color="#E5E5E5"> a single wire</font>

317
00:12:07,569 --> 00:12:11,290
<font color="#E5E5E5">in the middle play those computers on</font>

318
00:12:09,550 --> 00:12:13,209
either side of your<font color="#E5E5E5"> endpoints</font><font color="#CCCCCC"> and USB</font>

319
00:12:11,290 --> 00:12:15,370
conceptually<font color="#E5E5E5"> has a very similar concept</font>

320
00:12:13,209 --> 00:12:17,859
an endpoint is<font color="#E5E5E5"> a communications channel</font>

321
00:12:15,370 --> 00:12:20,380
and<font color="#E5E5E5"> the associated buffer and control</font>

322
00:12:17,860 --> 00:12:22,329
<font color="#E5E5E5">hardware for</font><font color="#CCCCCC"> that</font><font color="#E5E5E5"> so I can have a USB</font>

323
00:12:20,380 --> 00:12:23,380
<font color="#E5E5E5">device and want to do five</font><font color="#CCCCCC"> or ten</font>

324
00:12:22,329 --> 00:12:24,849
different<font color="#CCCCCC"> things on it if you've</font><font color="#E5E5E5"> ever</font>

325
00:12:23,380 --> 00:12:27,850
plugged in a device that acts both<font color="#E5E5E5"> as a</font>

326
00:12:24,850 --> 00:12:30,639
mouse and<font color="#E5E5E5"> a keyboard and a camera like</font>

327
00:12:27,850 --> 00:12:32,800
<font color="#E5E5E5">our projectors do those kind of devices</font>

328
00:12:30,639 --> 00:12:34,120
<font color="#CCCCCC">actually</font><font color="#E5E5E5"> it's nice to be able to have</font>

329
00:12:32,800 --> 00:12:37,240
<font color="#CCCCCC">multiple communications channels</font>

330
00:12:34,120 --> 00:12:39,699
multiplexed<font color="#E5E5E5"> over that single USB line so</font>

331
00:12:37,240 --> 00:12:41,470
<font color="#E5E5E5">or the single differential pair I say</font>

332
00:12:39,699 --> 00:12:44,109
single<font color="#E5E5E5"> but it is worth noting that</font><font color="#CCCCCC"> at</font>

333
00:12:41,470 --> 00:12:46,269
USB<font color="#CCCCCC"> 3 it</font><font color="#E5E5E5"> is multiple there's actually</font>

334
00:12:44,110 --> 00:12:48,250
three<font color="#E5E5E5"> differential pairs in USB</font><font color="#CCCCCC"> 3</font><font color="#E5E5E5"> and</font>

335
00:12:46,269 --> 00:12:50,079
technically power is also<font color="#E5E5E5"> part of the</font>

336
00:12:48,250 --> 00:12:52,360
<font color="#E5E5E5">USB spec so</font><font color="#CCCCCC"> and it's the two with</font><font color="#E5E5E5"> the</font>

337
00:12:50,079 --> 00:12:54,219
asterisk<font color="#CCCCCC"> but for most of</font><font color="#E5E5E5"> the USB stuff</font>

338
00:12:52,360 --> 00:12:56,079
you will see pretty<font color="#CCCCCC"> much</font><font color="#E5E5E5"> every device is</font>

339
00:12:54,220 --> 00:12:58,149
piping all of its data over a single

340
00:12:56,079 --> 00:13:00,939
<font color="#E5E5E5">signal line that is actually represented</font>

341
00:12:58,149 --> 00:13:02,319
as<font color="#CCCCCC"> D</font><font color="#E5E5E5"> plus</font><font color="#CCCCCC"> and D - so single</font><font color="#E5E5E5"> differential</font>

342
00:13:00,940 --> 00:13:05,260
<font color="#CCCCCC">Y a signal line</font>

343
00:13:02,319 --> 00:13:06,610
so what endpoints do is let you take all

344
00:13:05,260 --> 00:13:09,459
the<font color="#E5E5E5"> different</font><font color="#CCCCCC"> things that</font><font color="#E5E5E5"> you</font><font color="#CCCCCC"> might want</font>

345
00:13:06,610 --> 00:13:11,860
<font color="#CCCCCC">to do with the device configuration bulk</font>

346
00:13:09,459 --> 00:13:12,400
<font color="#E5E5E5">data transport that equivalent of rs-232</font>

347
00:13:11,860 --> 00:13:14,430
<font color="#CCCCCC">or your</font><font color="#E5E5E5"> ball</font>

348
00:13:12,400 --> 00:13:16,209
viewing<font color="#E5E5E5"> bytes from place to place and</font>

349
00:13:14,430 --> 00:13:17,920
<font color="#E5E5E5">endpoints are your conceptual</font>

350
00:13:16,210 --> 00:13:19,270
abstraction on top of all the different

351
00:13:17,920 --> 00:13:22,089
ways<font color="#CCCCCC"> you might multiplex them on to a</font>

352
00:13:19,270 --> 00:13:23,710
<font color="#CCCCCC">single differential pair yeah I've</font>

353
00:13:22,090 --> 00:13:26,350
actually<font color="#E5E5E5"> just</font><font color="#CCCCCC"> realized how slightly</font>

354
00:13:23,710 --> 00:13:27,910
misleading<font color="#E5E5E5"> this diagram is but but you</font>

355
00:13:26,350 --> 00:13:29,230
might have quite often your keyboard for

356
00:13:27,910 --> 00:13:32,500
<font color="#CCCCCC">example have a pair of</font><font color="#E5E5E5"> end points where</font>

357
00:13:29,230 --> 00:13:36,130
they transfer your key presses in one

358
00:13:32,500 --> 00:13:38,050
direction and and feedback for<font color="#CCCCCC"> for you</font>

359
00:13:36,130 --> 00:13:40,420
<font color="#E5E5E5">know the caps look LEDs or whatever in</font>

360
00:13:38,050 --> 00:13:42,130
<font color="#E5E5E5">the other</font><font color="#CCCCCC"> direction and</font><font color="#E5E5E5"> then maybe that</font>

361
00:13:40,420 --> 00:13:43,510
device also<font color="#E5E5E5"> has</font><font color="#CCCCCC"> a mouse and that</font><font color="#E5E5E5"> will</font>

362
00:13:42,130 --> 00:13:46,750
appear<font color="#E5E5E5"> as a second set of end points</font>

363
00:13:43,510 --> 00:13:48,670
<font color="#E5E5E5">that and so quite often a pair of end</font>

364
00:13:46,750 --> 00:13:50,830
points will map to<font color="#CCCCCC"> a given to a given</font>

365
00:13:48,670 --> 00:13:52,569
function of the device<font color="#E5E5E5"> as well which is</font>

366
00:13:50,830 --> 00:13:53,860
<font color="#E5E5E5">right</font><font color="#CCCCCC"> slightly misleading in E so if you</font>

367
00:13:52,570 --> 00:13:54,760
were to extend<font color="#E5E5E5"> this diagram</font><font color="#CCCCCC"> out you</font>

368
00:13:53,860 --> 00:13:56,530
could actually have more<font color="#E5E5E5"> than one</font>

369
00:13:54,760 --> 00:13:58,569
function on a single device<font color="#E5E5E5"> as well yes</font>

370
00:13:56,530 --> 00:14:00,310
you cannot multifunction devices that

371
00:13:58,570 --> 00:14:02,020
appear as multiple devices and composit

372
00:14:00,310 --> 00:14:04,030
devices the key here is<font color="#CCCCCC"> that</font><font color="#E5E5E5"> everything</font>

373
00:14:02,020 --> 00:14:05,470
is grouped down into<font color="#E5E5E5"> that one single</font>

374
00:14:04,030 --> 00:14:08,140
differential<font color="#E5E5E5"> pair of</font><font color="#CCCCCC"> one right for you</font>

375
00:14:05,470 --> 00:14:09,220
<font color="#E5E5E5">so</font><font color="#CCCCCC"> this this</font><font color="#E5E5E5"> image credit I don't know</font>

376
00:14:08,140 --> 00:14:11,920
if the audience<font color="#CCCCCC"> consists</font><font color="#E5E5E5"> cuz it's behind</font>

377
00:14:09,220 --> 00:14:14,280
a wave you<font color="#CCCCCC"> can but it's from beyond</font>

378
00:14:11,920 --> 00:14:16,360
logics<font color="#CCCCCC"> USB in a nutshell which is a</font>

379
00:14:14,280 --> 00:14:17,860
website<font color="#CCCCCC"> that kind</font><font color="#E5E5E5"> of breaks down the</font>

380
00:14:16,360 --> 00:14:19,990
things you need<font color="#CCCCCC"> to</font><font color="#E5E5E5"> know about USB and</font>

381
00:14:17,860 --> 00:14:22,000
that is again it's the it's like<font color="#E5E5E5"> we're</font>

382
00:14:19,990 --> 00:14:24,340
saying the spec is 500 pages you need

383
00:14:22,000 --> 00:14:25,690
<font color="#CCCCCC">about ten of</font><font color="#E5E5E5"> them and</font><font color="#CCCCCC"> USB in a nut shell</font>

384
00:14:24,340 --> 00:14:27,820
has done<font color="#E5E5E5"> that's pretty much</font><font color="#CCCCCC"> the ten page</font>

385
00:14:25,690 --> 00:14:29,110
yeah I don't<font color="#E5E5E5"> think</font><font color="#CCCCCC"> I've I've used any</font>

386
00:14:27,820 --> 00:14:30,730
other<font color="#E5E5E5"> resources the other book</font><font color="#CCCCCC"> that</font>

387
00:14:29,110 --> 00:14:33,070
people recommend is USB complete and

388
00:14:30,730 --> 00:14:34,540
I've<font color="#E5E5E5"> used that which I've not</font><font color="#CCCCCC"> ever got</font>

389
00:14:33,070 --> 00:14:36,010
around to<font color="#E5E5E5"> reading but I</font><font color="#CCCCCC"> hear is really</font>

390
00:14:34,540 --> 00:14:38,140
good for<font color="#E5E5E5"> for getting much deeper into</font>

391
00:14:36,010 --> 00:14:38,920
<font color="#E5E5E5">this but USB in a nutshell is everything</font>

392
00:14:38,140 --> 00:14:44,020
you need<font color="#CCCCCC"> if you're going to</font><font color="#E5E5E5"> implement</font>

393
00:14:38,920 --> 00:14:46,120
devices so therefore<font color="#CCCCCC"> four key types of</font>

394
00:14:44,020 --> 00:14:49,270
<font color="#CCCCCC">endpoint that changes in USB 3 but</font><font color="#E5E5E5"> for</font>

395
00:14:46,120 --> 00:14:50,320
USB<font color="#E5E5E5"> 2 for now it's it's it's true and</font>

396
00:14:49,270 --> 00:14:53,110
it's true<font color="#CCCCCC"> for</font><font color="#E5E5E5"> the vast</font><font color="#CCCCCC"> majority of</font>

397
00:14:50,320 --> 00:14:56,020
devices<font color="#CCCCCC"> an awful lot of devices</font><font color="#E5E5E5"> out</font>

398
00:14:53,110 --> 00:14:57,220
there will be a control endpoint<font color="#E5E5E5"> and to</font>

399
00:14:56,020 --> 00:14:59,590
bulk endpoints one in<font color="#E5E5E5"> either direction</font>

400
00:14:57,220 --> 00:15:01,800
and<font color="#CCCCCC"> that's</font><font color="#E5E5E5"> that's kind of how you hit</font>

401
00:14:59,590 --> 00:15:04,510
those<font color="#E5E5E5"> higher data rates with USB 2 and</font>

402
00:15:01,800 --> 00:15:06,520
the the<font color="#E5E5E5"> idea is control is used for</font>

403
00:15:04,510 --> 00:15:08,140
sending configuring the<font color="#E5E5E5"> device to</font>

404
00:15:06,520 --> 00:15:10,510
sending data backs and forwards for the

405
00:15:08,140 --> 00:15:13,240
device<font color="#E5E5E5"> to tell the</font><font color="#CCCCCC"> hosts here here are</font>

406
00:15:10,510 --> 00:15:16,090
all<font color="#CCCCCC"> my functions here's how I work here</font>

407
00:15:13,240 --> 00:15:17,830
is here<font color="#E5E5E5"> is my board rate all that sort</font>

408
00:15:16,090 --> 00:15:20,080
of thing<font color="#E5E5E5"> and these simple packetized</font>

409
00:15:17,830 --> 00:15:22,030
configuration data<font color="#CCCCCC"> so control is</font><font color="#E5E5E5"> your</font>

410
00:15:20,080 --> 00:15:24,100
simple<font color="#CCCCCC"> I want to get some information</font>

411
00:15:22,030 --> 00:15:25,959
that's very<font color="#E5E5E5"> short back and forth to</font>

412
00:15:24,100 --> 00:15:27,850
<font color="#E5E5E5">advise or back</font><font color="#CCCCCC"> to set it up things like</font>

413
00:15:25,960 --> 00:15:30,730
I want to turn<font color="#E5E5E5"> the keyboard LEDs on and</font>

414
00:15:27,850 --> 00:15:32,320
it<font color="#E5E5E5"> gives an</font><font color="#CCCCCC"> opportunity for right the</font>

415
00:15:30,730 --> 00:15:33,880
device to provide standard<font color="#E5E5E5"> information</font>

416
00:15:32,320 --> 00:15:35,560
<font color="#CCCCCC">about itself yeah it</font><font color="#E5E5E5"> is the only</font>

417
00:15:33,880 --> 00:15:37,210
transport<font color="#E5E5E5"> that also specifies a packet</font>

418
00:15:35,560 --> 00:15:39,130
format<font color="#E5E5E5"> the reason</font><font color="#CCCCCC"> for</font><font color="#E5E5E5"> that is that</font>

419
00:15:37,210 --> 00:15:41,320
<font color="#E5E5E5">control</font><font color="#CCCCCC"> endpoints are what is used for</font>

420
00:15:39,130 --> 00:15:43,900
<font color="#CCCCCC">the</font><font color="#E5E5E5"> basic discovery enter numeration so</font>

421
00:15:41,320 --> 00:15:46,090
when you plug<font color="#E5E5E5"> a device in your host can</font>

422
00:15:43,900 --> 00:15:48,939
say who are<font color="#CCCCCC"> you</font><font color="#E5E5E5"> what are you</font><font color="#CCCCCC"> doing here</font>

423
00:15:46,090 --> 00:15:51,580
and that<font color="#E5E5E5"> control endpoint format is</font>

424
00:15:48,940 --> 00:15:54,040
actually<font color="#CCCCCC"> what is used</font><font color="#E5E5E5"> to basically</font>

425
00:15:51,580 --> 00:15:55,690
provide all the descriptions of the

426
00:15:54,040 --> 00:15:58,689
device and we'll<font color="#E5E5E5"> get into that</font><font color="#CCCCCC"> yeah and</font>

427
00:15:55,690 --> 00:16:00,070
<font color="#CCCCCC">I think the it's nice</font><font color="#E5E5E5"> it's standardized</font>

428
00:15:58,690 --> 00:16:01,810
they means it's<font color="#E5E5E5"> very simple to write</font>

429
00:16:00,070 --> 00:16:03,610
code neither<font color="#E5E5E5"> end that talks to it so we</font>

430
00:16:01,810 --> 00:16:05,770
<font color="#E5E5E5">use that in for example</font><font color="#CCCCCC"> the</font><font color="#E5E5E5"> hacker</font><font color="#CCCCCC"> F</font>

431
00:16:03,610 --> 00:16:08,680
control<font color="#E5E5E5"> library to do things like set</font>

432
00:16:05,770 --> 00:16:10,090
<font color="#CCCCCC">the frequency turn on and off</font><font color="#E5E5E5"> the</font>

433
00:16:08,680 --> 00:16:11,890
amplifiers and things like<font color="#CCCCCC"> that all</font>

434
00:16:10,090 --> 00:16:14,050
those all<font color="#CCCCCC"> those kind of</font><font color="#E5E5E5"> very short</font>

435
00:16:11,890 --> 00:16:16,150
settings<font color="#E5E5E5"> that you make but then when you</font>

436
00:16:14,050 --> 00:16:17,949
<font color="#E5E5E5">want to stream data</font><font color="#CCCCCC"> of 480 megabits you</font>

437
00:16:16,150 --> 00:16:19,540
use the bulk endpoints<font color="#CCCCCC"> because they are</font>

438
00:16:17,950 --> 00:16:21,850
just an arbitrary buffer and<font color="#E5E5E5"> you say</font>

439
00:16:19,540 --> 00:16:23,050
here's some data<font color="#E5E5E5"> I'd like this</font><font color="#CCCCCC"> to</font><font color="#E5E5E5"> appear</font>

440
00:16:21,850 --> 00:16:24,880
at the other<font color="#E5E5E5"> end of this USB cable</font>

441
00:16:23,050 --> 00:16:27,490
please<font color="#CCCCCC"> write soon and that's what the</font>

442
00:16:24,880 --> 00:16:29,290
<font color="#CCCCCC">Box both endpoints will do for you right</font>

443
00:16:27,490 --> 00:16:30,580
<font color="#CCCCCC">so those top two are most</font><font color="#E5E5E5"> of the</font>

444
00:16:29,290 --> 00:16:33,400
communications you have<font color="#CCCCCC"> on most</font><font color="#E5E5E5"> devices</font>

445
00:16:30,580 --> 00:16:37,990
<font color="#E5E5E5">control being your control signals bulk</font>

446
00:16:33,400 --> 00:16:39,760
<font color="#E5E5E5">of being any</font><font color="#CCCCCC"> of that real long</font><font color="#E5E5E5"> higher</font>

447
00:16:37,990 --> 00:16:42,370
bandwidth data stream that<font color="#CCCCCC"> you use to</font>

448
00:16:39,760 --> 00:16:44,230
get the if things like<font color="#CCCCCC"> disk contents</font>

449
00:16:42,370 --> 00:16:46,150
back and forth<font color="#E5E5E5"> interrupt</font><font color="#CCCCCC"> and isochronous</font>

450
00:16:44,230 --> 00:16:48,430
are much less used<font color="#E5E5E5"> probably the</font>

451
00:16:46,150 --> 00:16:50,230
exception is keyboards and mice which

452
00:16:48,430 --> 00:16:51,939
tend<font color="#E5E5E5"> to use interrupt transfers which</font>

453
00:16:50,230 --> 00:16:54,040
are<font color="#E5E5E5"> just transfers that tend to be</font>

454
00:16:51,940 --> 00:16:55,810
shorter but have a bounded latency<font color="#E5E5E5"> and</font>

455
00:16:54,040 --> 00:16:57,250
then isochronous is mostly used for

456
00:16:55,810 --> 00:16:58,630
<font color="#E5E5E5">things like webcams where you don't</font>

457
00:16:57,250 --> 00:17:00,400
<font color="#E5E5E5">actually care if you lose data you just</font>

458
00:16:58,630 --> 00:17:03,040
<font color="#E5E5E5">want the most recent data that's</font>

459
00:17:00,400 --> 00:17:04,810
available<font color="#E5E5E5"> if you're hacking USB probably</font>

460
00:17:03,040 --> 00:17:07,770
the first<font color="#E5E5E5"> two will get you 90%</font><font color="#CCCCCC"> of the</font>

461
00:17:04,810 --> 00:17:09,849
way there<font color="#CCCCCC"> so yeah</font><font color="#E5E5E5"> the first to a</font>

462
00:17:07,770 --> 00:17:11,470
significant number<font color="#E5E5E5"> of devices will just</font>

463
00:17:09,849 --> 00:17:13,419
appear<font color="#CCCCCC"> like that in fact</font><font color="#E5E5E5"> we had a tool</font>

464
00:17:11,470 --> 00:17:15,370
that<font color="#E5E5E5"> I</font><font color="#CCCCCC"> wrote a</font><font color="#E5E5E5"> couple of years</font><font color="#CCCCCC"> ago</font><font color="#E5E5E5"> which</font>

465
00:17:13,420 --> 00:17:16,750
<font color="#E5E5E5">I</font><font color="#CCCCCC"> were from sites called USB proxy but</font>

466
00:17:15,369 --> 00:17:19,239
<font color="#E5E5E5">it turns out we only ever supported the</font>

467
00:17:16,750 --> 00:17:20,650
first<font color="#E5E5E5"> two types of endpoint and people</font>

468
00:17:19,240 --> 00:17:22,359
didn't notice for months<font color="#E5E5E5"> because</font>

469
00:17:20,650 --> 00:17:27,400
<font color="#E5E5E5">everything they tried to they</font><font color="#CCCCCC"> tried to</font>

470
00:17:22,359 --> 00:17:28,479
hack on was<font color="#E5E5E5"> was one of those devices so</font>

471
00:17:27,400 --> 00:17:30,370
I think<font color="#E5E5E5"> we've already kind of covered</font>

472
00:17:28,480 --> 00:17:30,820
<font color="#CCCCCC">this</font><font color="#E5E5E5"> but control requests are pretty</font>

473
00:17:30,370 --> 00:17:32,379
simple

474
00:17:30,820 --> 00:17:35,020
again<font color="#E5E5E5"> this diagram comes from</font><font color="#CCCCCC"> usb in a</font>

475
00:17:32,380 --> 00:17:38,380
nutshell<font color="#CCCCCC"> but they're they're pretty</font>

476
00:17:35,020 --> 00:17:39,670
simple<font color="#E5E5E5"> they have a predefined format but</font>

477
00:17:38,380 --> 00:17:39,790
then you<font color="#E5E5E5"> just append a bunch of bytes to</font>

478
00:17:39,670 --> 00:17:41,710
the

479
00:17:39,790 --> 00:17:43,990
and<font color="#E5E5E5"> for for</font><font color="#CCCCCC"> kind of your user to</font><font color="#E5E5E5"> find</font>

480
00:17:41,710 --> 00:17:48,280
stuff<font color="#CCCCCC"> for the the blobs of</font><font color="#E5E5E5"> data but they</font>

481
00:17:43,990 --> 00:17:50,290
they have<font color="#CCCCCC"> was</font><font color="#E5E5E5"> the one I'm looking</font><font color="#CCCCCC"> for</font>

482
00:17:48,280 --> 00:17:52,030
<font color="#E5E5E5">they have some specific structure at</font>

483
00:17:50,290 --> 00:17:53,560
that up at the<font color="#E5E5E5"> front end so</font><font color="#CCCCCC"> you can do</font>

484
00:17:52,030 --> 00:17:54,850
things like request the descriptors from

485
00:17:53,560 --> 00:17:56,470
<font color="#E5E5E5">the device right</font><font color="#CCCCCC"> they</font><font color="#E5E5E5"> have an agate</font>

486
00:17:54,850 --> 00:17:59,080
format<font color="#CCCCCC"> yeah exactly</font>

487
00:17:56,470 --> 00:18:00,730
thus thank you<font color="#CCCCCC"> and so I think we've</font>

488
00:17:59,080 --> 00:18:02,110
mostly<font color="#E5E5E5"> covered this slide yeah I think</font>

489
00:18:00,730 --> 00:18:03,910
<font color="#E5E5E5">the</font><font color="#CCCCCC"> only thing</font><font color="#E5E5E5"> that's worth noting</font><font color="#CCCCCC"> and</font>

490
00:18:02,110 --> 00:18:08,080
this is important<font color="#E5E5E5"> if you're gonna hack</font>

491
00:18:03,910 --> 00:18:09,760
on USB USB is almost a null terminated

492
00:18:08,080 --> 00:18:12,610
protocol when you're<font color="#E5E5E5"> talking</font><font color="#CCCCCC"> setup in</font>

493
00:18:09,760 --> 00:18:14,590
<font color="#E5E5E5">that if you start sending packets the</font>

494
00:18:12,610 --> 00:18:16,750
way that it denotes the end<font color="#E5E5E5"> of a</font>

495
00:18:14,590 --> 00:18:19,090
transfer is by you sending<font color="#E5E5E5"> a packet that</font>

496
00:18:16,750 --> 00:18:21,280
<font color="#E5E5E5">has</font><font color="#CCCCCC"> a length set that is less</font><font color="#E5E5E5"> than its</font>

497
00:18:19,090 --> 00:18:23,439
maximum and<font color="#CCCCCC"> that enables us to do some</font>

498
00:18:21,280 --> 00:18:25,210
<font color="#CCCCCC">interesting stuff because if you for</font>

499
00:18:23,440 --> 00:18:27,370
example<font color="#CCCCCC"> compromise a USB controller</font><font color="#E5E5E5"> and</font>

500
00:18:25,210 --> 00:18:29,410
<font color="#E5E5E5">start just having</font><font color="#CCCCCC"> it read out</font><font color="#E5E5E5"> all the</font>

501
00:18:27,370 --> 00:18:30,760
contents<font color="#E5E5E5"> of its memory as long as you</font>

502
00:18:29,410 --> 00:18:32,440
never send a packet that<font color="#E5E5E5"> is less than</font>

503
00:18:30,760 --> 00:18:35,710
<font color="#E5E5E5">maximum length it will just</font><font color="#CCCCCC"> continue</font>

504
00:18:32,440 --> 00:18:38,530
<font color="#CCCCCC">this</font><font color="#E5E5E5"> is a perfect</font><font color="#CCCCCC"> analog for all of your</font>

505
00:18:35,710 --> 00:18:40,510
string exploits<font color="#E5E5E5"> if you're using the C</font>

506
00:18:38,530 --> 00:18:42,310
standard library ever because you

507
00:18:40,510 --> 00:18:47,170
basically<font color="#E5E5E5"> have what</font><font color="#CCCCCC"> amounts to null</font>

508
00:18:42,310 --> 00:18:49,240
termination also people mess up<font color="#CCCCCC"> a null</font>

509
00:18:47,170 --> 00:18:52,420
termination all the time and we<font color="#CCCCCC"> fix null</font>

510
00:18:49,240 --> 00:18:55,120
termination bugs in three USB stacks<font color="#E5E5E5"> in</font>

511
00:18:52,420 --> 00:18:59,350
the<font color="#CCCCCC"> past</font><font color="#E5E5E5"> two weeks</font><font color="#CCCCCC"> yeah</font><font color="#E5E5E5"> I believe that</font>

512
00:18:55,120 --> 00:19:01,060
<font color="#CCCCCC">we found by doing this project so and</font>

513
00:18:59,350 --> 00:19:02,350
then<font color="#E5E5E5"> and then over those those control</font>

514
00:19:01,060 --> 00:19:04,629
endpoints we have enumeration and

515
00:19:02,350 --> 00:19:07,659
enumeration is the way that the device

516
00:19:04,630 --> 00:19:09,310
says tells tells the<font color="#E5E5E5"> host what it is and</font>

517
00:19:07,660 --> 00:19:11,950
the the first thing<font color="#CCCCCC"> the</font><font color="#E5E5E5"> host does</font><font color="#CCCCCC"> is say</font>

518
00:19:09,310 --> 00:19:15,129
giving<font color="#E5E5E5"> you a device descriptor and the</font>

519
00:19:11,950 --> 00:19:16,660
the device says I'm a<font color="#E5E5E5"> hacker</font><font color="#CCCCCC"> F and then</font>

520
00:19:15,130 --> 00:19:17,800
it says<font color="#E5E5E5"> okay how do I communicate with</font>

521
00:19:16,660 --> 00:19:19,000
<font color="#E5E5E5">you what endpoints do you have what</font>

522
00:19:17,800 --> 00:19:20,710
configurations do you have and it sends

523
00:19:19,000 --> 00:19:22,990
that data back in a in a standardized

524
00:19:20,710 --> 00:19:24,880
<font color="#CCCCCC">format and you'll have seen that used if</font>

525
00:19:22,990 --> 00:19:26,320
you've ever used things like LS USB or

526
00:19:24,880 --> 00:19:27,850
if<font color="#CCCCCC"> you've</font><font color="#E5E5E5"> ever gone</font><font color="#CCCCCC"> into</font><font color="#E5E5E5"> drill</font><font color="#CCCCCC"> down into</font>

527
00:19:26,320 --> 00:19:29,080
the device<font color="#E5E5E5"> properties in Windows or</font>

528
00:19:27,850 --> 00:19:30,610
anything like<font color="#E5E5E5"> that right if we use</font>

529
00:19:29,080 --> 00:19:32,110
Windows you plug a device in and it

530
00:19:30,610 --> 00:19:33,490
makes that horrible sound then tells you

531
00:19:32,110 --> 00:19:35,139
<font color="#CCCCCC">that's a hacker if</font><font color="#E5E5E5"> present and it's</font>

532
00:19:33,490 --> 00:19:37,510
<font color="#E5E5E5">looking</font><font color="#CCCCCC"> for a driver</font><font color="#E5E5E5"> what it has done</font>

533
00:19:35,140 --> 00:19:40,030
<font color="#E5E5E5">has gone through the standardized pieces</font>

534
00:19:37,510 --> 00:19:42,370
of the<font color="#E5E5E5"> USB enumeration protocol in order</font>

535
00:19:40,030 --> 00:19:46,450
<font color="#E5E5E5">to ask the device who it is what's a</font>

536
00:19:42,370 --> 00:19:47,889
description or<font color="#CCCCCC"> a descriptor</font><font color="#E5E5E5"> that what is</font>

537
00:19:46,450 --> 00:19:49,960
a<font color="#E5E5E5"> binary block that describes what you</font>

538
00:19:47,890 --> 00:19:51,850
do who you<font color="#E5E5E5"> are your vendor</font><font color="#CCCCCC"> and</font><font color="#E5E5E5"> product</font>

539
00:19:49,960 --> 00:19:53,750
ID<font color="#CCCCCC"> give me some strings</font><font color="#E5E5E5"> that tell me</font><font color="#CCCCCC"> how</font>

540
00:19:51,850 --> 00:19:55,159
<font color="#CCCCCC">I can show the user</font><font color="#E5E5E5"> who you are all</font>

541
00:19:53,750 --> 00:19:57,080
those things are encapsulated in these

542
00:19:55,160 --> 00:19:58,450
standard binary blocks called

543
00:19:57,080 --> 00:20:00,679
descriptors

544
00:19:58,450 --> 00:20:02,030
but as carbs saying earlier and as it

545
00:20:00,680 --> 00:20:03,620
says<font color="#E5E5E5"> at the bottom</font><font color="#CCCCCC"> of this</font><font color="#E5E5E5"> slide they do</font>

546
00:20:02,030 --> 00:20:06,590
things differently<font color="#CCCCCC"> so I have you have</font>

547
00:20:03,620 --> 00:20:08,750
bugs<font color="#E5E5E5"> where that my device works</font>

548
00:20:06,590 --> 00:20:10,399
perfectly on<font color="#E5E5E5"> Linux but when I connected</font>

549
00:20:08,750 --> 00:20:12,590
<font color="#E5E5E5">to a Windows system</font><font color="#CCCCCC"> it</font><font color="#E5E5E5"> just can't I</font>

550
00:20:10,400 --> 00:20:14,480
leave<font color="#CCCCCC"> ailes to ever appear</font><font color="#E5E5E5"> because they</font>

551
00:20:12,590 --> 00:20:16,010
enumerate<font color="#E5E5E5"> them in different ways we can</font>

552
00:20:14,480 --> 00:20:17,990
<font color="#CCCCCC">actually use this to fingerprint they</font>

553
00:20:16,010 --> 00:20:19,340
<font color="#CCCCCC">owe the operating system that's that's</font>

554
00:20:17,990 --> 00:20:21,110
talking<font color="#E5E5E5"> to our device</font><font color="#CCCCCC"> we don't ever</font>

555
00:20:19,340 --> 00:20:22,370
<font color="#E5E5E5">really need to</font><font color="#CCCCCC"> communicate</font><font color="#E5E5E5"> with them we</font>

556
00:20:21,110 --> 00:20:23,840
<font color="#E5E5E5">don't need to get down into the</font>

557
00:20:22,370 --> 00:20:28,100
<font color="#E5E5E5">nitty-gritty</font><font color="#CCCCCC"> of the driver we</font><font color="#E5E5E5"> can just</font>

558
00:20:23,840 --> 00:20:31,100
use that<font color="#E5E5E5"> initial configuration</font><font color="#CCCCCC"> section</font>

559
00:20:28,100 --> 00:20:32,510
of the of the host system<font color="#E5E5E5"> to fingerprint</font>

560
00:20:31,100 --> 00:20:34,730
which operating<font color="#CCCCCC"> system is using</font><font color="#E5E5E5"> which</font>

561
00:20:32,510 --> 00:20:36,950
version of Windows potentially we don't

562
00:20:34,730 --> 00:20:38,690
have very complete documentation<font color="#E5E5E5"> on this</font>

563
00:20:36,950 --> 00:20:40,040
yet we haven't gone through<font color="#E5E5E5"> and</font><font color="#CCCCCC"> kind</font><font color="#E5E5E5"> of</font>

564
00:20:38,690 --> 00:20:41,110
profile them all but I can certainly

565
00:20:40,040 --> 00:20:43,580
<font color="#E5E5E5">tell you the differences between</font>

566
00:20:41,110 --> 00:20:45,020
<font color="#E5E5E5">different a couple of Linux systems and</font>

567
00:20:43,580 --> 00:20:47,540
<font color="#CCCCCC">windows and if you look at the</font><font color="#E5E5E5"> you map</font>

568
00:20:45,020 --> 00:20:49,280
<font color="#E5E5E5">project</font><font color="#CCCCCC"> I actually have a</font><font color="#E5E5E5"> full library</font>

569
00:20:47,540 --> 00:20:50,600
<font color="#E5E5E5">which is based off</font><font color="#CCCCCC"> the</font><font color="#E5E5E5"> original phase</font>

570
00:20:49,280 --> 00:20:53,720
dancer they<font color="#E5E5E5"> actually have a complete</font>

571
00:20:50,600 --> 00:20:54,949
library<font color="#E5E5E5"> of essentially tricks that they</font>

572
00:20:53,720 --> 00:20:57,110
use presenting a bunch of virtual

573
00:20:54,950 --> 00:20:58,760
devices and seeing<font color="#E5E5E5"> both</font><font color="#CCCCCC"> our</font><font color="#E5E5E5"> enumeration</font>

574
00:20:57,110 --> 00:21:00,830
happens and how the operating system

575
00:20:58,760 --> 00:21:02,540
interacts with<font color="#E5E5E5"> those devices and they</font>

576
00:21:00,830 --> 00:21:04,699
can<font color="#E5E5E5"> tell you to a pretty good</font><font color="#CCCCCC"> degree of</font>

577
00:21:02,540 --> 00:21:07,370
granularity whether you're using Ubuntu

578
00:21:04,700 --> 00:21:09,530
or<font color="#E5E5E5"> an older</font><font color="#CCCCCC"> debian or</font><font color="#E5E5E5"> you've plug this</font>

579
00:21:07,370 --> 00:21:12,500
<font color="#E5E5E5">into a Playstation or you're using you</font>

580
00:21:09,530 --> 00:21:14,450
know<font color="#CCCCCC"> Windows 2000 with the</font><font color="#E5E5E5"> USB stack</font>

581
00:21:12,500 --> 00:21:19,700
<font color="#E5E5E5">that was delivered</font><font color="#CCCCCC"> on</font><font color="#E5E5E5"> the server's back</font>

582
00:21:14,450 --> 00:21:21,380
oh<font color="#E5E5E5"> yeah initially have it</font><font color="#CCCCCC"> and then on</font>

583
00:21:19,700 --> 00:21:23,030
top<font color="#E5E5E5"> of on top of this we're kind of</font>

584
00:21:21,380 --> 00:21:25,190
going<font color="#E5E5E5"> up the layers of abstraction here</font>

585
00:21:23,030 --> 00:21:27,410
there are these<font color="#E5E5E5"> they're in sync classes</font>

586
00:21:25,190 --> 00:21:30,050
which which defines a specific<font color="#CCCCCC"> kind of</font>

587
00:21:27,410 --> 00:21:32,690
sub device or interface on the device<font color="#E5E5E5"> so</font>

588
00:21:30,050 --> 00:21:34,280
<font color="#E5E5E5">you don't have to again if you remember</font>

589
00:21:32,690 --> 00:21:35,810
<font color="#CCCCCC">those</font><font color="#E5E5E5"> old</font><font color="#CCCCCC"> days</font><font color="#E5E5E5"> with</font><font color="#CCCCCC"> your serial mouse</font>

590
00:21:34,280 --> 00:21:37,790
<font color="#E5E5E5">you plug in your Sarah mouse and then</font>

591
00:21:35,810 --> 00:21:39,800
that<font color="#E5E5E5"> thing needs a driver and if you're</font>

592
00:21:37,790 --> 00:21:41,450
lucky<font color="#E5E5E5"> it uses the</font><font color="#CCCCCC"> standard one but</font><font color="#E5E5E5"> in</font>

593
00:21:39,800 --> 00:21:42,590
general if<font color="#E5E5E5"> you if you bought the fancy</font>

594
00:21:41,450 --> 00:21:44,750
looking<font color="#CCCCCC"> Mouse it probably uses the</font>

595
00:21:42,590 --> 00:21:47,990
ridiculous driver that<font color="#E5E5E5"> you had to get on</font>

596
00:21:44,750 --> 00:21:49,700
<font color="#E5E5E5">a floppy disk and you have to install</font>

597
00:21:47,990 --> 00:21:52,370
<font color="#E5E5E5">drivers to get those</font><font color="#CCCCCC"> devices working</font><font color="#E5E5E5"> in</font>

598
00:21:49,700 --> 00:21:53,750
the first place and that's<font color="#E5E5E5"> still the</font>

599
00:21:52,370 --> 00:21:56,830
case for a lot<font color="#E5E5E5"> of USB</font><font color="#CCCCCC"> devices especially</font>

600
00:21:53,750 --> 00:21:59,240
custom<font color="#E5E5E5"> devices some more obscure devices</font>

601
00:21:56,830 --> 00:22:01,399
<font color="#CCCCCC">think things like hacker for</font><font color="#E5E5E5"> example we</font>

602
00:21:59,240 --> 00:22:03,380
write<font color="#E5E5E5"> all our own our own host code but</font>

603
00:22:01,400 --> 00:22:04,610
if you're implementing a keyboard or<font color="#CCCCCC"> a</font>

604
00:22:03,380 --> 00:22:06,050
mouse and<font color="#E5E5E5"> you comply to one of these</font>

605
00:22:04,610 --> 00:22:09,290
<font color="#E5E5E5">classes</font>

606
00:22:06,050 --> 00:22:11,928
any any operating<font color="#CCCCCC"> system that</font><font color="#E5E5E5"> worth its</font>

607
00:22:09,290 --> 00:22:14,330
salt will will already<font color="#E5E5E5"> have</font><font color="#CCCCCC"> a driver</font>

608
00:22:11,929 --> 00:22:16,520
<font color="#E5E5E5">that supports these standard methods the</font>

609
00:22:14,330 --> 00:22:18,129
same goes for serial there's and storage

610
00:22:16,520 --> 00:22:21,139
there's a reason I can take a<font color="#E5E5E5"> USB stick</font>

611
00:22:18,130 --> 00:22:25,100
from<font color="#E5E5E5"> my laptop and</font><font color="#CCCCCC"> plug it</font><font color="#E5E5E5"> into my TV</font><font color="#CCCCCC"> or</font>

612
00:22:21,140 --> 00:22:28,100
<font color="#E5E5E5">plug it into</font><font color="#CCCCCC"> Carl's car or or anything</font>

613
00:22:25,100 --> 00:22:31,330
<font color="#E5E5E5">like that</font><font color="#CCCCCC"> and that</font><font color="#E5E5E5"> is that</font><font color="#CCCCCC"> that is</font>

614
00:22:28,100 --> 00:22:34,100
predefined as part<font color="#CCCCCC"> of the spec and so</font>

615
00:22:31,330 --> 00:22:35,870
those<font color="#CCCCCC"> are some interesting devices</font>

616
00:22:34,100 --> 00:22:37,939
<font color="#E5E5E5">because they appear almost everywhere</font>

617
00:22:35,870 --> 00:22:39,409
but again<font color="#E5E5E5"> their code was written by</font>

618
00:22:37,940 --> 00:22:41,480
whoever implemented it<font color="#E5E5E5"> on that operating</font>

619
00:22:39,410 --> 00:22:43,309
<font color="#CCCCCC">system</font><font color="#E5E5E5"> or whoever thought that that</font>

620
00:22:41,480 --> 00:22:46,040
<font color="#CCCCCC">colonel at that time and has kept all</font>

621
00:22:43,309 --> 00:22:47,720
the bugs<font color="#E5E5E5"> from</font><font color="#CCCCCC"> ten years</font><font color="#E5E5E5"> ago in their</font>

622
00:22:46,040 --> 00:22:49,100
system so<font color="#E5E5E5"> they're kind of</font><font color="#CCCCCC"> interesting</font>

623
00:22:47,720 --> 00:22:51,200
<font color="#E5E5E5">places to go because you don't</font><font color="#CCCCCC"> require</font>

624
00:22:49,100 --> 00:22:53,000
<font color="#E5E5E5">there to be you know it's not a if</font>

625
00:22:51,200 --> 00:22:54,860
there's a<font color="#CCCCCC"> vulnerability there that</font>

626
00:22:53,000 --> 00:22:56,690
<font color="#E5E5E5">foreign</font><font color="#CCCCCC"> bility is not if we're lucky</font>

627
00:22:54,860 --> 00:22:58,159
they have<font color="#E5E5E5"> this obscure driver for this</font>

628
00:22:56,690 --> 00:22:59,870
piece of<font color="#CCCCCC"> hardware</font><font color="#E5E5E5"> on their system it's</font>

629
00:22:58,160 --> 00:23:01,640
if there's a<font color="#CCCCCC"> vulnerability in</font><font color="#E5E5E5"> the way</font>

630
00:22:59,870 --> 00:23:02,959
something handles mass storage<font color="#CCCCCC"> it</font>

631
00:23:01,640 --> 00:23:04,550
affects every one<font color="#CCCCCC"> of those</font><font color="#E5E5E5"> devices</font>

632
00:23:02,960 --> 00:23:05,510
because it's<font color="#E5E5E5"> always present and so</font>

633
00:23:04,550 --> 00:23:06,770
that's that's<font color="#E5E5E5"> kind</font><font color="#CCCCCC"> of it they're</font>

634
00:23:05,510 --> 00:23:08,720
interesting to<font color="#E5E5E5"> look</font><font color="#CCCCCC"> at</font><font color="#E5E5E5"> from that point</font>

635
00:23:06,770 --> 00:23:11,330
of<font color="#CCCCCC"> view</font><font color="#E5E5E5"> it also makes them even much</font>

636
00:23:08,720 --> 00:23:13,700
easier to implement<font color="#CCCCCC"> because the</font><font color="#E5E5E5"> they're</font>

637
00:23:11,330 --> 00:23:15,649
<font color="#E5E5E5">very</font><font color="#CCCCCC"> well-defined as opposed to some</font>

638
00:23:13,700 --> 00:23:17,240
other<font color="#CCCCCC"> devices right and one</font><font color="#E5E5E5"> of the</font>

639
00:23:15,650 --> 00:23:19,100
really<font color="#CCCCCC"> nice things about having these</font>

640
00:23:17,240 --> 00:23:20,960
levels of standardization<font color="#CCCCCC"> is it also</font>

641
00:23:19,100 --> 00:23:23,178
means that<font color="#E5E5E5"> a lot of the implementation</font>

642
00:23:20,960 --> 00:23:24,740
moves into these kind of interesting

643
00:23:23,179 --> 00:23:27,470
<font color="#E5E5E5">third-party libraries and so if you find</font>

644
00:23:24,740 --> 00:23:29,450
<font color="#CCCCCC">a vulnerability in a</font><font color="#E5E5E5"> third party USB</font>

645
00:23:27,470 --> 00:23:31,790
library<font color="#E5E5E5"> there's a good chance that that</font>

646
00:23:29,450 --> 00:23:34,070
is going to be reused<font color="#E5E5E5"> in lots of</font>

647
00:23:31,790 --> 00:23:36,110
<font color="#CCCCCC">different</font><font color="#E5E5E5"> places</font><font color="#CCCCCC"> so for</font><font color="#E5E5E5"> example</font><font color="#CCCCCC"> FreeBSD</font>

648
00:23:34,070 --> 00:23:39,530
drivers often<font color="#CCCCCC"> are pulled from Linux</font>

649
00:23:36,110 --> 00:23:41,959
<font color="#CCCCCC">right so if you find a bug in the Linux</font>

650
00:23:39,530 --> 00:23:44,330
USB stack dealing with for<font color="#E5E5E5"> example human</font>

651
00:23:41,960 --> 00:23:46,100
interface devices then there's a good

652
00:23:44,330 --> 00:23:48,409
<font color="#E5E5E5">chance that that same implementation is</font>

653
00:23:46,100 --> 00:23:49,850
<font color="#E5E5E5">going to be used in</font><font color="#CCCCCC"> FreeBSD and other</font>

654
00:23:48,410 --> 00:23:52,640
operating systems and if you're like<font color="#E5E5E5"> me</font>

655
00:23:49,850 --> 00:23:54,199
and your<font color="#E5E5E5"> task to write</font><font color="#CCCCCC"> a USB stack for</font>

656
00:23:52,640 --> 00:23:55,100
your custom operating system the first

657
00:23:54,200 --> 00:23:57,140
<font color="#E5E5E5">thing you're gonna be</font><font color="#CCCCCC"> using as reference</font>

658
00:23:55,100 --> 00:23:59,090
<font color="#CCCCCC">is the Linux kernel</font><font color="#E5E5E5"> so you will actually</font>

659
00:23:57,140 --> 00:24:00,679
<font color="#E5E5E5">have you</font><font color="#CCCCCC"> know gone and looked at this</font>

660
00:23:59,090 --> 00:24:02,030
driver because you know<font color="#E5E5E5"> that's the one</font>

661
00:24:00,679 --> 00:24:03,980
<font color="#E5E5E5">working implementation you're able to</font>

662
00:24:02,030 --> 00:24:07,428
find implement the same behavior and

663
00:24:03,980 --> 00:24:09,200
chances are<font color="#CCCCCC"> introduces a bug right so</font>

664
00:24:07,429 --> 00:24:11,090
two other<font color="#E5E5E5"> things lost points</font><font color="#CCCCCC"> I like to</font>

665
00:24:09,200 --> 00:24:12,290
make on the slide one is<font color="#CCCCCC"> Kyler's added</font>

666
00:24:11,090 --> 00:24:14,928
<font color="#E5E5E5">here next to human interface devices</font>

667
00:24:12,290 --> 00:24:18,139
<font color="#E5E5E5">dated gloves</font><font color="#CCCCCC"> if you read the human</font>

668
00:24:14,929 --> 00:24:19,910
<font color="#E5E5E5">interface device spec that</font><font color="#CCCCCC"> the u.s.</font>

669
00:24:18,140 --> 00:24:22,340
<font color="#CCCCCC">beast and group published you</font>

670
00:24:19,910 --> 00:24:23,870
we'll find that they were incredibly<font color="#E5E5E5"> 90s</font>

671
00:24:22,340 --> 00:24:25,159
about<font color="#CCCCCC"> and incredibly optimistic about</font>

672
00:24:23,870 --> 00:24:26,600
<font color="#E5E5E5">the fact that</font><font color="#CCCCCC"> dated</font><font color="#E5E5E5"> gloves were going to</font>

673
00:24:25,160 --> 00:24:29,120
be the thing<font color="#CCCCCC"> that we're all using to</font>

674
00:24:26,600 --> 00:24:30,469
interact<font color="#CCCCCC"> with</font><font color="#E5E5E5"> computers and it's it's</font>

675
00:24:29,120 --> 00:24:31,580
interesting<font color="#E5E5E5"> because the spec talks about</font>

676
00:24:30,470 --> 00:24:33,200
<font color="#CCCCCC">touchscreens and they</font><font color="#E5E5E5"> were like</font>

677
00:24:31,580 --> 00:24:34,280
<font color="#CCCCCC">absolutely right that everyone was gonna</font>

678
00:24:33,200 --> 00:24:36,170
be using<font color="#E5E5E5"> a touchscreen in a few years</font>

679
00:24:34,280 --> 00:24:37,760
<font color="#E5E5E5">but they also talked an awful lot in</font>

680
00:24:36,170 --> 00:24:39,170
<font color="#E5E5E5">their examples about data gloves and the</font>

681
00:24:37,760 --> 00:24:41,090
idea<font color="#CCCCCC"> that I'd have some glove where I'm</font>

682
00:24:39,170 --> 00:24:44,060
you know I'm interfacing with<font color="#E5E5E5"> the with</font>

683
00:24:41,090 --> 00:24:46,490
my hands and it's I don't<font color="#CCCCCC"> know it's it's</font>

684
00:24:44,060 --> 00:24:47,690
<font color="#E5E5E5">a more optimistic time</font><font color="#CCCCCC"> and the other one</font>

685
00:24:46,490 --> 00:24:49,730
it's actually<font color="#CCCCCC"> pretty amazing</font><font color="#E5E5E5"> because</font>

686
00:24:47,690 --> 00:24:52,250
<font color="#E5E5E5">they were really far looking when they</font>

687
00:24:49,730 --> 00:24:53,300
design the<font color="#E5E5E5"> hid specs and that's the</font>

688
00:24:52,250 --> 00:24:54,680
reason why you<font color="#CCCCCC"> have all</font><font color="#E5E5E5"> these fancy</font>

689
00:24:53,300 --> 00:24:56,690
multi-touch controllers and they still

690
00:24:54,680 --> 00:24:57,950
work with that same spec they were able

691
00:24:56,690 --> 00:24:59,330
<font color="#E5E5E5">to come</font><font color="#CCCCCC"> up with a protocol that was</font>

692
00:24:57,950 --> 00:25:01,010
configurable enough that you could do

693
00:24:59,330 --> 00:25:03,199
all<font color="#CCCCCC"> kinds of crazy</font><font color="#E5E5E5"> and wonderful things</font>

694
00:25:01,010 --> 00:25:04,400
and not<font color="#CCCCCC"> just do they have basic</font>

695
00:25:03,200 --> 00:25:06,050
descriptions of how you might do them

696
00:25:04,400 --> 00:25:08,120
for things<font color="#CCCCCC"> like touch</font><font color="#E5E5E5"> screens they also</font>

697
00:25:06,050 --> 00:25:09,950
made the<font color="#E5E5E5"> protocol flexible enough that</font>

698
00:25:08,120 --> 00:25:11,719
<font color="#E5E5E5">it could</font><font color="#CCCCCC"> self described new types of</font>

699
00:25:09,950 --> 00:25:12,950
<font color="#CCCCCC">devices so if you've</font><font color="#E5E5E5"> ever seen something</font>

700
00:25:11,720 --> 00:25:14,840
that<font color="#CCCCCC"> identifies as a human interface</font>

701
00:25:12,950 --> 00:25:16,850
<font color="#E5E5E5">device that is not</font><font color="#CCCCCC"> something</font><font color="#E5E5E5"> you would</font>

702
00:25:14,840 --> 00:25:18,649
think<font color="#E5E5E5"> of</font><font color="#CCCCCC"> as a normal human interface</font>

703
00:25:16,850 --> 00:25:20,090
device like<font color="#E5E5E5"> I think some of the teensy</font>

704
00:25:18,650 --> 00:25:22,430
<font color="#E5E5E5">boot loaders and</font><font color="#CCCCCC"> like microcontroller</font>

705
00:25:20,090 --> 00:25:23,659
boot loaders do this just because if

706
00:25:22,430 --> 00:25:25,100
they say they're a<font color="#E5E5E5"> human interface</font>

707
00:25:23,660 --> 00:25:26,180
<font color="#E5E5E5">device they know that that operating</font>

708
00:25:25,100 --> 00:25:28,909
<font color="#E5E5E5">systems gonna have a driver that's not</font>

709
00:25:26,180 --> 00:25:30,380
<font color="#E5E5E5">going to do much with them but they can</font>

710
00:25:28,910 --> 00:25:33,380
<font color="#CCCCCC">actually still kind of pipe data over</font>

711
00:25:30,380 --> 00:25:35,690
that and<font color="#CCCCCC"> anytime I say there's something</font>

712
00:25:33,380 --> 00:25:37,700
<font color="#E5E5E5">that's</font><font color="#CCCCCC"> caused a complex self-describing</font>

713
00:25:35,690 --> 00:25:38,900
description<font color="#E5E5E5"> the first thing you</font><font color="#CCCCCC"> should</font>

714
00:25:37,700 --> 00:25:40,820
be<font color="#E5E5E5"> thinking is that there's probably a</font>

715
00:25:38,900 --> 00:25:42,830
shotgun parser that<font color="#CCCCCC"> is sitting there</font>

716
00:25:40,820 --> 00:25:45,139
<font color="#CCCCCC">behind the scenes that someone you know</font>

717
00:25:42,830 --> 00:25:46,939
wrote at the<font color="#E5E5E5"> last minute saying I need</font>

718
00:25:45,140 --> 00:25:49,640
<font color="#CCCCCC">to parse</font><font color="#E5E5E5"> this complex binary data format</font>

719
00:25:46,940 --> 00:25:51,160
<font color="#E5E5E5">and if you've ever really tried</font><font color="#CCCCCC"> to fuzz</font>

720
00:25:49,640 --> 00:25:53,000
parsers you'll know<font color="#CCCCCC"> that they're not</font>

721
00:25:51,160 --> 00:25:55,010
they're<font color="#E5E5E5"> probably one of the weaker</font>

722
00:25:53,000 --> 00:25:57,290
<font color="#E5E5E5">pieces of most modern software so</font>

723
00:25:55,010 --> 00:25:59,330
they're gonna find vulnerabilities<font color="#CCCCCC"> you</font>

724
00:25:57,290 --> 00:26:01,879
should be looking<font color="#CCCCCC"> for</font><font color="#E5E5E5"> complex things</font>

725
00:25:59,330 --> 00:26:04,280
like<font color="#CCCCCC"> a SN dot one</font><font color="#E5E5E5"> or human interface</font>

726
00:26:01,880 --> 00:26:06,020
device descriptors we should be a little

727
00:26:04,280 --> 00:26:08,090
<font color="#E5E5E5">bit careful criticizing shotgun</font><font color="#CCCCCC"> pulses</font>

728
00:26:06,020 --> 00:26:09,710
<font color="#CCCCCC">because I wrote one two days ago for</font>

729
00:26:08,090 --> 00:26:12,169
<font color="#E5E5E5">this project and I criticized it yeah</font>

730
00:26:09,710 --> 00:26:13,160
and it does make some really<font color="#E5E5E5"> big</font>

731
00:26:12,170 --> 00:26:15,530
assumptions that<font color="#E5E5E5"> you're behaving</font>

732
00:26:13,160 --> 00:26:17,150
<font color="#E5E5E5">yourself our USB man-in-the-middle tool</font>

733
00:26:15,530 --> 00:26:19,160
makes some essential assumptions<font color="#CCCCCC"> that</font>

734
00:26:17,150 --> 00:26:21,110
you're going to<font color="#CCCCCC"> behave yourself while</font>

735
00:26:19,160 --> 00:26:24,500
talking to<font color="#E5E5E5"> it but use it</font><font color="#CCCCCC"> for malicious</font>

736
00:26:21,110 --> 00:26:28,070
things which is<font color="#E5E5E5"> I mean it will happily</font>

737
00:26:24,500 --> 00:26:29,690
<font color="#CCCCCC">fuss itself and and fail so I mean</font>

738
00:26:28,070 --> 00:26:31,129
<font color="#E5E5E5">that's I</font><font color="#CCCCCC"> guess that's</font><font color="#E5E5E5"> dogfooding the</font>

739
00:26:29,690 --> 00:26:32,540
other one here is<font color="#CCCCCC"> networking I think</font>

740
00:26:31,130 --> 00:26:33,299
it's important to<font color="#E5E5E5"> note because there was</font>

741
00:26:32,540 --> 00:26:35,039
an

742
00:26:33,299 --> 00:26:37,220
an interesting case a<font color="#E5E5E5"> couple of months</font>

743
00:26:35,039 --> 00:26:42,440
<font color="#CCCCCC">ago earlier this year last year</font><font color="#E5E5E5"> where</font>

744
00:26:37,220 --> 00:26:45,749
we've<font color="#CCCCCC"> gone</font><font color="#E5E5E5"> who was</font><font color="#CCCCCC"> vivix rob fuller did</font>

745
00:26:42,440 --> 00:26:48,269
something where where he plugged<font color="#E5E5E5"> a USB</font>

746
00:26:45,749 --> 00:26:50,820
networking device into a<font color="#E5E5E5"> Windows host</font>

747
00:26:48,269 --> 00:26:53,220
and because it appears as an<font color="#CCCCCC"> Ethernet</font>

748
00:26:50,820 --> 00:26:54,869
device<font color="#E5E5E5"> it takes priority</font><font color="#CCCCCC"> over the</font>

749
00:26:53,220 --> 00:26:56,610
<font color="#E5E5E5">wireless connection that already had the</font>

750
00:26:54,869 --> 00:26:59,309
machine was still locked<font color="#E5E5E5"> and he was able</font>

751
00:26:56,610 --> 00:27:02,908
<font color="#E5E5E5">to extract</font><font color="#CCCCCC"> all sorts of</font><font color="#E5E5E5"> information</font>

752
00:26:59,309 --> 00:27:05,279
<font color="#E5E5E5">about the networking system</font><font color="#CCCCCC"> networking</font>

753
00:27:02,909 --> 00:27:07,679
start from the locked<font color="#CCCCCC"> Windows machine</font>

754
00:27:05,279 --> 00:27:08,879
because he was able<font color="#CCCCCC"> to increase</font><font color="#E5E5E5"> his</font>

755
00:27:07,679 --> 00:27:11,129
<font color="#E5E5E5">network priority over the existing</font>

756
00:27:08,879 --> 00:27:12,840
<font color="#E5E5E5">connection and and do some interesting</font>

757
00:27:11,129 --> 00:27:13,859
<font color="#E5E5E5">it made some rate automatic proxy</font>

758
00:27:12,840 --> 00:27:17,369
requests and things<font color="#E5E5E5"> like that</font>

759
00:27:13,859 --> 00:27:19,619
right because USB is kind of<font color="#E5E5E5"> in this</font>

760
00:27:17,369 --> 00:27:21,178
weird<font color="#E5E5E5"> trust position where it's at both</font>

761
00:27:19,619 --> 00:27:22,830
<font color="#E5E5E5">a user facing port they would not expect</font>

762
00:27:21,179 --> 00:27:24,629
<font color="#E5E5E5">to have a lot of power but it's</font><font color="#CCCCCC"> also</font>

763
00:27:22,830 --> 00:27:26,460
viewed as<font color="#E5E5E5"> something</font><font color="#CCCCCC"> that the kernel is</font>

764
00:27:24,629 --> 00:27:28,649
commonly interfacing with there's a lot

765
00:27:26,460 --> 00:27:30,419
of<font color="#E5E5E5"> interesting trust boundaries that</font>

766
00:27:28,649 --> 00:27:32,399
<font color="#CCCCCC">have not quite been drawn correctly with</font>

767
00:27:30,419 --> 00:27:34,619
regards to USB<font color="#E5E5E5"> so if you go and plug</font><font color="#CCCCCC"> a</font>

768
00:27:32,399 --> 00:27:36,479
<font color="#CCCCCC">USB</font><font color="#E5E5E5"> network interface card and there's a</font>

769
00:27:34,619 --> 00:27:38,549
lot of trust<font color="#E5E5E5"> on the host part that this</font>

770
00:27:36,480 --> 00:27:40,799
<font color="#E5E5E5">is a real network interface</font><font color="#CCCCCC"> card that is</font>

771
00:27:38,549 --> 00:27:42,059
<font color="#E5E5E5">not trying to attack your device so if</font>

772
00:27:40,799 --> 00:27:44,399
you're sitting<font color="#CCCCCC"> there</font><font color="#E5E5E5"> with a locked PC</font>

773
00:27:42,059 --> 00:27:46,289
you can<font color="#CCCCCC"> still</font><font color="#E5E5E5"> plug in that card it will</font>

774
00:27:44,399 --> 00:27:48,238
enumerate<font color="#E5E5E5"> it'll load the network drivers</font>

775
00:27:46,289 --> 00:27:50,129
the network can say hey by the way I

776
00:27:48,239 --> 00:27:51,359
happen<font color="#CCCCCC"> to have the correct routing to</font>

777
00:27:50,129 --> 00:27:53,908
<font color="#E5E5E5">route literally every packet on</font><font color="#CCCCCC"> the</font>

778
00:27:51,359 --> 00:27:56,070
system and then every packet you have

779
00:27:53,909 --> 00:27:59,489
<font color="#E5E5E5">from that point forward will start going</font>

780
00:27:56,070 --> 00:28:01,559
<font color="#CCCCCC">through your</font><font color="#E5E5E5"> custom USB device and so</font>

781
00:27:59,489 --> 00:28:04,139
what was<font color="#CCCCCC"> actually done in this attack</font>

782
00:28:01,559 --> 00:28:07,259
<font color="#E5E5E5">was that lots of things were proxied</font>

783
00:28:04,139 --> 00:28:08,519
through that connection<font color="#CCCCCC"> and including</font>

784
00:28:07,259 --> 00:28:10,499
<font color="#E5E5E5">things</font><font color="#CCCCCC"> that normally probably would have</font>

785
00:28:08,519 --> 00:28:12,299
<font color="#E5E5E5">been done</font><font color="#CCCCCC"> over HTTPS but if you</font><font color="#E5E5E5"> haven't</font>

786
00:28:10,499 --> 00:28:15,419
seen<font color="#E5E5E5"> that particular connection before</font>

787
00:28:12,299 --> 00:28:18,658
<font color="#E5E5E5">and you don't set the SSL only right and</font>

788
00:28:15,419 --> 00:28:21,720
then<font color="#E5E5E5"> exactly and and here yeah I believe</font>

789
00:28:18,659 --> 00:28:23,700
<font color="#E5E5E5">he served up a sort</font><font color="#CCCCCC"> of proxy</font><font color="#E5E5E5"> config file</font>

790
00:28:21,720 --> 00:28:25,679
<font color="#CCCCCC">and the host</font><font color="#E5E5E5"> just took it and accepted</font>

791
00:28:23,700 --> 00:28:27,210
it and<font color="#CCCCCC"> what I mean lots of things do</font>

792
00:28:25,679 --> 00:28:28,590
this my<font color="#E5E5E5"> laptops running a button at the</font>

793
00:28:27,210 --> 00:28:30,779
moment and if I plug in a USB network

794
00:28:28,590 --> 00:28:32,549
<font color="#E5E5E5">card it will automatically enumerate the</font>

795
00:28:30,779 --> 00:28:34,409
device load the network stack<font color="#E5E5E5"> grab an IP</font>

796
00:28:32,549 --> 00:28:36,840
address<font color="#E5E5E5"> and and go out there and</font>

797
00:28:34,409 --> 00:28:38,970
<font color="#CCCCCC">probably advertize itself using all that</font>

798
00:28:36,840 --> 00:28:40,649
that<font color="#E5E5E5"> zero</font><font color="#CCCCCC"> comm stuff that I should have</font>

799
00:28:38,970 --> 00:28:43,440
disabled by now yep<font color="#E5E5E5"> and this is all</font>

800
00:28:40,649 --> 00:28:44,758
<font color="#E5E5E5">enabled entirely by something</font><font color="#CCCCCC"> that</font><font color="#E5E5E5"> is</font>

801
00:28:43,440 --> 00:28:46,300
capable<font color="#E5E5E5"> of acting as a network device</font>

802
00:28:44,759 --> 00:28:47,980
that's not entirely

803
00:28:46,300 --> 00:28:49,090
designed in good faith<font color="#E5E5E5"> so if you have</font>

804
00:28:47,980 --> 00:28:50,800
something<font color="#CCCCCC"> that</font><font color="#E5E5E5"> lets you really easily</font>

805
00:28:49,090 --> 00:28:52,240
<font color="#E5E5E5">write a network device you can start</font>

806
00:28:50,800 --> 00:28:57,580
doing<font color="#E5E5E5"> this kind of attack really easily</font>

807
00:28:52,240 --> 00:29:02,440
<font color="#E5E5E5">yeah</font><font color="#CCCCCC"> so</font><font color="#E5E5E5"> I mean real useful yes Ellis</font>

808
00:28:57,580 --> 00:29:03,550
just<font color="#E5E5E5"> be the hacker the implication there</font>

809
00:29:02,440 --> 00:29:07,300
being<font color="#CCCCCC"> with the</font><font color="#E5E5E5"> devices that we create</font>

810
00:29:03,550 --> 00:29:08,200
are not real<font color="#CCCCCC"> oh yeah</font><font color="#E5E5E5"> I got you now</font><font color="#CCCCCC"> I got</font>

811
00:29:07,300 --> 00:29:10,570
<font color="#E5E5E5">ya</font>

812
00:29:08,200 --> 00:29:11,620
so<font color="#CCCCCC"> I mean I assume most people have seen</font>

813
00:29:10,570 --> 00:29:14,500
<font color="#CCCCCC">else USB before</font>

814
00:29:11,620 --> 00:29:17,949
if<font color="#CCCCCC"> I run LS USB it shows me the devices</font>

815
00:29:14,500 --> 00:29:19,450
hooked up<font color="#E5E5E5"> to my system</font><font color="#CCCCCC"> open mochou I</font>

816
00:29:17,950 --> 00:29:20,530
believe a lot<font color="#CCCCCC"> of</font><font color="#E5E5E5"> people</font><font color="#CCCCCC"> probably</font>

817
00:29:19,450 --> 00:29:22,240
familiar with<font color="#E5E5E5"> the existence of their</font>

818
00:29:20,530 --> 00:29:24,490
phones a few years ago<font color="#CCCCCC"> at some point</font>

819
00:29:22,240 --> 00:29:27,130
they they ceased<font color="#E5E5E5"> building USB devices</font>

820
00:29:24,490 --> 00:29:29,200
and said well I mean we've got<font color="#E5E5E5"> this this</font>

821
00:29:27,130 --> 00:29:30,850
vendor ID we<font color="#E5E5E5"> paid for</font>

822
00:29:29,200 --> 00:29:32,560
if anyone making<font color="#CCCCCC"> open-source Hardware</font>

823
00:29:30,850 --> 00:29:35,110
wants a free<font color="#CCCCCC"> products ID</font><font color="#E5E5E5"> so they can</font>

824
00:29:32,560 --> 00:29:37,659
have unique<font color="#CCCCCC"> identifiers</font><font color="#E5E5E5"> when they</font>

825
00:29:35,110 --> 00:29:38,919
connect to that for their product<font color="#CCCCCC"> we'll</font>

826
00:29:37,660 --> 00:29:41,560
start<font color="#E5E5E5"> giving them out so you just email</font>

827
00:29:38,920 --> 00:29:44,220
<font color="#E5E5E5">them and ask</font><font color="#CCCCCC"> really nicely and they come</font>

828
00:29:41,560 --> 00:29:47,379
<font color="#CCCCCC">back</font><font color="#E5E5E5"> to you and give</font><font color="#CCCCCC"> you a</font><font color="#E5E5E5"> USB ID and</font>

829
00:29:44,220 --> 00:29:49,210
and that enables us to kind of much more

830
00:29:47,380 --> 00:29:51,010
<font color="#CCCCCC">easily differentiate and talk to</font><font color="#E5E5E5"> these</font>

831
00:29:49,210 --> 00:29:54,310
<font color="#CCCCCC">things without paying thousands of</font>

832
00:29:51,010 --> 00:29:56,890
<font color="#E5E5E5">dollars</font><font color="#CCCCCC"> for a license so for a vendor ID</font>

833
00:29:54,310 --> 00:29:58,149
from<font color="#CCCCCC"> the USB</font><font color="#E5E5E5"> spec for our four devices</font>

834
00:29:56,890 --> 00:29:59,710
<font color="#E5E5E5">that we make or sometimes if you want</font><font color="#CCCCCC"> to</font>

835
00:29:58,150 --> 00:30:01,990
<font color="#E5E5E5">just do like a</font><font color="#CCCCCC"> vvm one of those devices</font>

836
00:29:59,710 --> 00:30:03,670
we can<font color="#E5E5E5"> show you this is all the</font>

837
00:30:01,990 --> 00:30:08,290
<font color="#CCCCCC">information that</font><font color="#E5E5E5"> the USB device provides</font>

838
00:30:03,670 --> 00:30:09,940
in standard format to the<font color="#E5E5E5"> host so we</font>

839
00:30:08,290 --> 00:30:11,500
have<font color="#E5E5E5"> that vendor ID and product D which</font>

840
00:30:09,940 --> 00:30:13,510
are<font color="#E5E5E5"> encapsulated in there we have</font>

841
00:30:11,500 --> 00:30:15,340
strings that describe the device and<font color="#E5E5E5"> we</font>

842
00:30:13,510 --> 00:30:16,810
<font color="#CCCCCC">actually</font><font color="#E5E5E5"> have these configurations which</font>

843
00:30:15,340 --> 00:30:19,659
are<font color="#E5E5E5"> a description of how the device</font>

844
00:30:16,810 --> 00:30:21,790
plans to be used which is absolutely

845
00:30:19,660 --> 00:30:23,290
<font color="#CCCCCC">fantastic because you were</font><font color="#E5E5E5"> talking about</font>

846
00:30:21,790 --> 00:30:26,200
configuration difficulties<font color="#CCCCCC"> 20 years ago</font>

847
00:30:23,290 --> 00:30:27,399
<font color="#CCCCCC">exactly like last</font><font color="#E5E5E5"> week if you had a USB</font>

848
00:30:26,200 --> 00:30:29,320
to serial adapter and you were also

849
00:30:27,400 --> 00:30:30,190
<font color="#CCCCCC">running something like</font><font color="#E5E5E5"> Debian that comes</font>

850
00:30:29,320 --> 00:30:31,659
with modem manager

851
00:30:30,190 --> 00:30:32,920
it'll just<font color="#E5E5E5"> pick that up and start</font>

852
00:30:31,660 --> 00:30:34,480
spamming whatever data it wants into

853
00:30:32,920 --> 00:30:36,610
there<font color="#E5E5E5"> because of the vague possibility</font>

854
00:30:34,480 --> 00:30:38,170
<font color="#E5E5E5">there's a modem on</font><font color="#CCCCCC"> either side</font><font color="#E5E5E5"> yeah</font>

855
00:30:36,610 --> 00:30:40,300
<font color="#CCCCCC">there's</font><font color="#E5E5E5"> some interesting</font><font color="#CCCCCC"> things</font><font color="#E5E5E5"> in</font><font color="#CCCCCC"> here</font>

856
00:30:38,170 --> 00:30:43,630
for<font color="#CCCCCC"> example we can tell the</font><font color="#E5E5E5"> host how</font>

857
00:30:40,300 --> 00:30:45,149
much power we<font color="#E5E5E5"> want now</font><font color="#CCCCCC"> at four USB two</font>

858
00:30:43,630 --> 00:30:47,940
you're only going to<font color="#E5E5E5"> get</font><font color="#CCCCCC"> 500</font><font color="#E5E5E5"> milliamps</font>

859
00:30:45,150 --> 00:30:49,900
<font color="#E5E5E5">maximum from a from a host that's</font>

860
00:30:47,940 --> 00:30:52,150
<font color="#CCCCCC">enumerate in you in with these</font>

861
00:30:49,900 --> 00:30:53,830
descriptors but that dynamic changes

862
00:30:52,150 --> 00:30:55,870
when<font color="#E5E5E5"> it comes to USB</font><font color="#CCCCCC"> see we're not</font>

863
00:30:53,830 --> 00:30:57,790
looking at USB<font color="#CCCCCC"> see right now we're</font><font color="#E5E5E5"> not</font>

864
00:30:55,870 --> 00:30:59,919
<font color="#E5E5E5">looking</font><font color="#CCCCCC"> USB 3.0 but</font><font color="#E5E5E5"> there's a lot</font><font color="#CCCCCC"> more</font>

865
00:30:57,790 --> 00:31:02,080
power available<font color="#CCCCCC"> and a</font><font color="#E5E5E5"> lot</font><font color="#CCCCCC"> more power</font>

866
00:30:59,920 --> 00:31:03,490
available<font color="#E5E5E5"> to people</font><font color="#CCCCCC"> to</font><font color="#E5E5E5"> to do interesting</font>

867
00:31:02,080 --> 00:31:05,620
<font color="#E5E5E5">things and that's</font><font color="#CCCCCC"> that's definitely want</font>

868
00:31:03,490 --> 00:31:06,880
to<font color="#E5E5E5"> do list and then</font><font color="#CCCCCC"> lo then we come down</font>

869
00:31:05,620 --> 00:31:09,340
<font color="#CCCCCC">to</font><font color="#E5E5E5"> these these</font><font color="#CCCCCC"> end points</font><font color="#E5E5E5"> we're talking</font>

870
00:31:06,880 --> 00:31:11,830
about<font color="#E5E5E5"> before they have a direction they</font>

871
00:31:09,340 --> 00:31:14,649
<font color="#E5E5E5">have a size they have a a max packet</font>

872
00:31:11,830 --> 00:31:16,689
size<font color="#CCCCCC"> and so we can from</font><font color="#E5E5E5"> this kind of</font>

873
00:31:14,650 --> 00:31:20,620
approximate<font color="#E5E5E5"> that actually this is a USB</font>

874
00:31:16,690 --> 00:31:23,559
<font color="#E5E5E5">to device</font><font color="#CCCCCC"> this is</font><font color="#E5E5E5"> these got bulk</font>

875
00:31:20,620 --> 00:31:25,479
endpoints that are 512 bytes<font color="#CCCCCC"> and</font><font color="#E5E5E5"> it's</font>

876
00:31:23,559 --> 00:31:27,250
<font color="#E5E5E5">going</font><font color="#CCCCCC"> to</font><font color="#E5E5E5"> try and transfer a recent mile</font>

877
00:31:25,480 --> 00:31:29,380
high rate<font color="#E5E5E5"> data but it's got none</font><font color="#CCCCCC"> of</font>

878
00:31:27,250 --> 00:31:31,210
those isochronous<font color="#E5E5E5"> or interrupt endpoints</font>

879
00:31:29,380 --> 00:31:33,190
<font color="#CCCCCC">that</font><font color="#E5E5E5"> are used for things like the human</font>

880
00:31:31,210 --> 00:31:34,690
<font color="#E5E5E5">interface device and so on</font><font color="#CCCCCC"> slow right so</font>

881
00:31:33,190 --> 00:31:36,100
you can see the hack RF here just uses

882
00:31:34,690 --> 00:31:38,500
to bulk endpoints<font color="#CCCCCC"> in the control</font>

883
00:31:36,100 --> 00:31:39,879
endpoint that<font color="#E5E5E5"> every device has those are</font>

884
00:31:38,500 --> 00:31:41,200
just two data pipes that<font color="#CCCCCC"> are used to</font>

885
00:31:39,880 --> 00:31:42,820
spew samples<font color="#E5E5E5"> back and forth from the</font>

886
00:31:41,200 --> 00:31:45,549
<font color="#E5E5E5">hack RF to the computer yeah and</font>

887
00:31:42,820 --> 00:31:47,678
apparently<font color="#E5E5E5"> my device status is in debug</font>

888
00:31:45,549 --> 00:31:53,139
<font color="#E5E5E5">mode which is not a mode I've ever read</font>

889
00:31:47,679 --> 00:31:55,450
<font color="#E5E5E5">about so that's worrying yeah</font><font color="#CCCCCC"> so first</font>

890
00:31:53,140 --> 00:31:56,770
answer<font color="#CCCCCC"> a really a really brief history</font>

891
00:31:55,450 --> 00:31:58,419
because I<font color="#CCCCCC"> think we</font><font color="#E5E5E5"> spent long enough</font>

892
00:31:56,770 --> 00:31:59,950
talking<font color="#E5E5E5"> about you know the</font><font color="#CCCCCC"> internals of</font>

893
00:31:58,419 --> 00:32:02,160
USB and things like this but<font color="#CCCCCC"> we'd</font><font color="#E5E5E5"> want</font>

894
00:31:59,950 --> 00:32:05,470
<font color="#E5E5E5">to give some credit to Sergey and Travis</font>

895
00:32:02,160 --> 00:32:07,150
<font color="#E5E5E5">yeah this started with Travis Sergey and</font>

896
00:32:05,470 --> 00:32:09,370
a bottle<font color="#CCCCCC"> of whiskey as I understand it</font>

897
00:32:07,150 --> 00:32:11,710
and the discussion<font color="#E5E5E5"> was there's a</font>

898
00:32:09,370 --> 00:32:13,719
software tool called<font color="#E5E5E5"> live USB that lets</font>

899
00:32:11,710 --> 00:32:16,059
you really easily<font color="#E5E5E5"> talk to USB devices</font>

900
00:32:13,720 --> 00:32:18,309
<font color="#CCCCCC">and that's fantastic if you</font><font color="#E5E5E5"> want to</font>

901
00:32:16,059 --> 00:32:20,410
start fuzzing USB devices<font color="#E5E5E5"> but nothing</font>

902
00:32:18,309 --> 00:32:23,190
existed that<font color="#E5E5E5"> would let you fuzz</font><font color="#CCCCCC"> USB</font>

903
00:32:20,410 --> 00:32:25,510
hosts<font color="#CCCCCC"> so there's no</font><font color="#E5E5E5"> easy equivalent so</font>

904
00:32:23,190 --> 00:32:27,340
you know a bottle<font color="#E5E5E5"> of whiskey and some</font>

905
00:32:25,510 --> 00:32:28,590
prototyping later<font color="#E5E5E5"> Travis had taken his</font>

906
00:32:27,340 --> 00:32:32,590
good<font color="#CCCCCC"> Fett which was a</font><font color="#E5E5E5"> microcontroller</font>

907
00:32:28,590 --> 00:32:34,449
<font color="#E5E5E5">board and taking an SPI based USB</font>

908
00:32:32,590 --> 00:32:36,820
controller hooked<font color="#E5E5E5"> it up to that and</font>

909
00:32:34,450 --> 00:32:39,100
created a USB controlled USB controller

910
00:32:36,820 --> 00:32:40,899
which was the very<font color="#CCCCCC"> first faced</font><font color="#E5E5E5"> answer</font>

911
00:32:39,100 --> 00:32:42,580
<font color="#CCCCCC">and so</font><font color="#E5E5E5"> this board is actually</font><font color="#CCCCCC"> if you</font>

912
00:32:40,900 --> 00:32:45,010
were<font color="#E5E5E5"> to cut it off here this</font><font color="#CCCCCC"> is a good</font>

913
00:32:42,580 --> 00:32:48,730
fat<font color="#CCCCCC"> and</font><font color="#E5E5E5"> then they just</font><font color="#CCCCCC"> kind of stuck</font><font color="#E5E5E5"> on</font>

914
00:32:45,010 --> 00:32:52,419
this tiny USB chip which enables them to

915
00:32:48,730 --> 00:32:54,820
talk<font color="#E5E5E5"> to other hosts and basically act as</font>

916
00:32:52,419 --> 00:32:56,470
<font color="#E5E5E5">a</font><font color="#CCCCCC"> USB</font><font color="#E5E5E5"> device</font><font color="#CCCCCC"> on one end and a USB</font><font color="#E5E5E5"> device</font>

917
00:32:54,820 --> 00:32:59,678
on the<font color="#CCCCCC"> other so it is a u.s. be</font>

918
00:32:56,470 --> 00:33:02,110
controlled<font color="#E5E5E5"> USB device yeah yeah actually</font>

919
00:32:59,679 --> 00:33:05,830
this is<font color="#E5E5E5"> Travis is designed for this</font>

920
00:33:02,110 --> 00:33:08,620
thing<font color="#E5E5E5"> is is incredibly simple and and</font>

921
00:33:05,830 --> 00:33:10,928
very small in<font color="#CCCCCC"> that on the left</font><font color="#E5E5E5"> hand end</font>

922
00:33:08,620 --> 00:33:13,199
there it's an<font color="#CCCCCC"> FTDI device it it comes up</font>

923
00:33:10,929 --> 00:33:15,389
again it makes use of the<font color="#E5E5E5"> fact that</font>

924
00:33:13,200 --> 00:33:18,419
bunch of operating systems know how to

925
00:33:15,389 --> 00:33:21,689
speak to to a USB serial device and so

926
00:33:18,419 --> 00:33:23,010
you don't<font color="#CCCCCC"> need a strange driver or</font>

927
00:33:21,690 --> 00:33:24,210
<font color="#CCCCCC">anything to program this thing</font><font color="#E5E5E5"> you can</font>

928
00:33:23,010 --> 00:33:26,010
plug it in and<font color="#E5E5E5"> it'll immediately work</font>

929
00:33:24,210 --> 00:33:28,139
<font color="#E5E5E5">you then use that serial connection to</font>

930
00:33:26,010 --> 00:33:30,629
program the msp430 in the middle to

931
00:33:28,139 --> 00:33:33,330
speak spy<font color="#CCCCCC"> and then it speaks spy over</font>

932
00:33:30,630 --> 00:33:35,909
over the<font color="#E5E5E5"> next couple of traces to the</font>

933
00:33:33,330 --> 00:33:38,220
<font color="#E5E5E5">the USB device chip and the USB device</font>

934
00:33:35,909 --> 00:33:40,110
<font color="#E5E5E5">chip is a part</font><font color="#CCCCCC"> that</font><font color="#E5E5E5"> was designed to go</font>

935
00:33:38,220 --> 00:33:42,120
into<font color="#E5E5E5"> USB devices so if you're trying</font><font color="#CCCCCC"> to</font>

936
00:33:40,110 --> 00:33:44,668
spoof a USB<font color="#E5E5E5"> device using the same</font>

937
00:33:42,120 --> 00:33:46,260
hardware that real USB devices use is a

938
00:33:44,669 --> 00:33:47,700
pretty<font color="#E5E5E5"> smart way</font><font color="#CCCCCC"> to do it</font><font color="#E5E5E5"> you have the</font>

939
00:33:46,260 --> 00:33:50,549
same<font color="#E5E5E5"> capabilities</font><font color="#CCCCCC"> as an</font><font color="#E5E5E5"> awful love</font>

940
00:33:47,700 --> 00:33:53,340
device out<font color="#CCCCCC"> there now this board</font><font color="#E5E5E5"> was</font>

941
00:33:50,549 --> 00:33:55,110
incredibly limited<font color="#E5E5E5"> in terms of its</font>

942
00:33:53,340 --> 00:33:56,820
<font color="#E5E5E5">compliance</font><font color="#CCCCCC"> with the</font><font color="#E5E5E5"> USB spec there are</font>

943
00:33:55,110 --> 00:34:00,000
awful of things that USB allows that

944
00:33:56,820 --> 00:34:01,439
this board<font color="#E5E5E5"> does not allow but it turns</font>

945
00:34:00,000 --> 00:34:03,690
out it<font color="#E5E5E5"> doesn't really matter because it</font>

946
00:34:01,440 --> 00:34:05,549
was able<font color="#E5E5E5"> to spoof so many different</font>

947
00:34:03,690 --> 00:34:08,070
<font color="#E5E5E5">devices that the majority of those</font>

948
00:34:05,549 --> 00:34:11,969
<font color="#E5E5E5">really basic class devices</font><font color="#CCCCCC"> its able to</font>

949
00:34:08,070 --> 00:34:14,159
spoof<font color="#CCCCCC"> in'</font><font color="#E5E5E5"> and act as and that gives us</font>

950
00:34:11,969 --> 00:34:15,839
<font color="#E5E5E5">the</font><font color="#CCCCCC"> opportunity to do some interesting</font>

951
00:34:14,159 --> 00:34:17,550
attacks<font color="#E5E5E5"> right that's that's really a</font>

952
00:34:15,839 --> 00:34:19,349
testament<font color="#CCCCCC"> to the flexibility of</font><font color="#E5E5E5"> USB that</font>

953
00:34:17,550 --> 00:34:21,480
we had this<font color="#E5E5E5"> simple device here which</font>

954
00:34:19,349 --> 00:34:24,869
<font color="#CCCCCC">actually</font><font color="#E5E5E5"> did not support everything</font><font color="#CCCCCC"> you</font>

955
00:34:21,480 --> 00:34:26,429
could do with<font color="#E5E5E5"> USB it had only</font><font color="#CCCCCC"> four fixed</font>

956
00:34:24,869 --> 00:34:28,079
type<font color="#E5E5E5"> endpoints of which one was the</font>

957
00:34:26,429 --> 00:34:31,260
control<font color="#E5E5E5"> endpoint one wasn't in</font><font color="#CCCCCC"> Mosin out</font>

958
00:34:28,079 --> 00:34:32,639
and then one was configurable<font color="#E5E5E5"> and just</font>

959
00:34:31,260 --> 00:34:36,139
using<font color="#E5E5E5"> those four endpoints and those</font>

960
00:34:32,639 --> 00:34:38,669
four data types<font color="#CCCCCC"> the USB spec actually</font>

961
00:34:36,139 --> 00:34:42,000
allows enough reconfigurability that

962
00:34:38,668 --> 00:34:44,699
<font color="#CCCCCC">travis</font><font color="#E5E5E5"> was able to create USB mice USB</font>

963
00:34:42,000 --> 00:34:46,859
keyboards<font color="#CCCCCC"> FTDI emulators USB serial</font>

964
00:34:44,699 --> 00:34:49,109
emulators in the USB consumer device

965
00:34:46,859 --> 00:34:51,000
control class<font color="#E5E5E5"> this was enough that we</font>

966
00:34:49,109 --> 00:34:53,129
could<font color="#E5E5E5"> actually</font><font color="#CCCCCC"> emulate a pretty</font><font color="#E5E5E5"> huge</font>

967
00:34:51,000 --> 00:34:54,780
subset of<font color="#CCCCCC"> devices but if you wanted to</font>

968
00:34:53,129 --> 00:34:56,969
go and<font color="#E5E5E5"> I mean a vendor device or you</font>

969
00:34:54,780 --> 00:34:58,859
wanted<font color="#E5E5E5"> to take like a device that you</font>

970
00:34:56,969 --> 00:35:01,560
had personally found and<font color="#CCCCCC"> were</font><font color="#E5E5E5"> interested</font>

971
00:34:58,859 --> 00:35:03,180
in fuzzing the<font color="#E5E5E5"> software for the fixed</font>

972
00:35:01,560 --> 00:35:06,270
type<font color="#CCCCCC"> endpoints meant that you were never</font>

973
00:35:03,180 --> 00:35:08,520
going<font color="#CCCCCC"> to be able to create</font><font color="#E5E5E5"> a complete</font>

974
00:35:06,270 --> 00:35:09,990
reproduction<font color="#E5E5E5"> of</font><font color="#CCCCCC"> that device unless</font><font color="#E5E5E5"> you</font>

975
00:35:08,520 --> 00:35:11,130
happen to have stumbled<font color="#E5E5E5"> upon exactly the</font>

976
00:35:09,990 --> 00:35:12,540
four endpoints<font color="#CCCCCC"> that the device was</font>

977
00:35:11,130 --> 00:35:14,010
already pre-configured to<font color="#E5E5E5"> use right if</font>

978
00:35:12,540 --> 00:35:15,900
one of the<font color="#E5E5E5"> things this would be great</font>

979
00:35:14,010 --> 00:35:19,890
<font color="#E5E5E5">for is emulating devices that already</font>

980
00:35:15,900 --> 00:35:21,510
are based on the<font color="#CCCCCC"> max</font><font color="#E5E5E5"> 3421</font><font color="#CCCCCC"> II part but</font><font color="#E5E5E5"> if</font>

981
00:35:19,890 --> 00:35:22,259
your device is based on something<font color="#E5E5E5"> else</font>

982
00:35:21,510 --> 00:35:24,569
<font color="#E5E5E5">and use a slightly different</font>

983
00:35:22,260 --> 00:35:26,070
<font color="#E5E5E5">configuration in that part and didn't</font>

984
00:35:24,569 --> 00:35:28,050
provide<font color="#E5E5E5"> then</font>

985
00:35:26,070 --> 00:35:29,880
it wasn't gonna going to help you<font color="#E5E5E5"> out</font>

986
00:35:28,050 --> 00:35:33,030
there<font color="#E5E5E5"> and so what we want to do was look</font>

987
00:35:29,880 --> 00:35:34,680
at<font color="#E5E5E5"> other options for speaking USB but</font>

988
00:35:33,030 --> 00:35:37,350
with<font color="#E5E5E5"> more flexible configuration more</font>

989
00:35:34,680 --> 00:35:39,029
flexible configuration controllers so we

990
00:35:37,350 --> 00:35:42,540
have the face<font color="#E5E5E5"> down to</font><font color="#CCCCCC"> 2 project which</font>

991
00:35:39,030 --> 00:35:43,650
probably<font color="#E5E5E5"> needs a better name but mostly</font>

992
00:35:42,540 --> 00:35:45,750
because it gets confused with<font color="#E5E5E5"> one of</font>

993
00:35:43,650 --> 00:35:47,220
Travis's<font color="#E5E5E5"> so there is a face dancer</font><font color="#CCCCCC"> 20</font>

994
00:35:45,750 --> 00:35:49,080
boards<font color="#CCCCCC"> if you look at</font><font color="#E5E5E5"> this board</font>

995
00:35:47,220 --> 00:35:50,759
the number is face dancer 21 the

996
00:35:49,080 --> 00:35:51,990
previous one of<font color="#CCCCCC"> that was face dancer 20</font>

997
00:35:50,760 --> 00:35:53,400
and we actually<font color="#E5E5E5"> were literally</font>

998
00:35:51,990 --> 00:35:54,810
describing this<font color="#CCCCCC"> with someone</font><font color="#E5E5E5"> and said</font>

999
00:35:53,400 --> 00:35:58,430
why the heck would<font color="#E5E5E5"> I use face dancer</font><font color="#CCCCCC"> 2</font>

1000
00:35:54,810 --> 00:36:02,460
<font color="#CCCCCC">would face dancer 21 is out</font><font color="#E5E5E5"> yeah yeah</font>

1001
00:35:58,430 --> 00:36:03,960
yep<font color="#E5E5E5"> you know there's only yeah about</font>

1002
00:36:02,460 --> 00:36:05,190
<font color="#E5E5E5">that</font><font color="#CCCCCC"> projection at all</font>

1003
00:36:03,960 --> 00:36:07,500
there's no there's only<font color="#E5E5E5"> two hard</font>

1004
00:36:05,190 --> 00:36:09,270
problems<font color="#E5E5E5"> yeah InfoSec right naming</font>

1005
00:36:07,500 --> 00:36:11,670
things<font color="#CCCCCC"> cache invalidation and</font><font color="#E5E5E5"> off by one</font>

1006
00:36:09,270 --> 00:36:14,640
<font color="#E5E5E5">error</font><font color="#CCCCCC"> yeah</font><font color="#E5E5E5"> so and we yeah</font><font color="#CCCCCC"> we had two of</font>

1007
00:36:11,670 --> 00:36:16,440
<font color="#CCCCCC">those things so</font><font color="#E5E5E5"> so we spotted a load of</font>

1008
00:36:14,640 --> 00:36:18,569
<font color="#CCCCCC">different</font><font color="#E5E5E5"> backends and in fact</font><font color="#CCCCCC"> we were</font>

1009
00:36:16,440 --> 00:36:20,100
up at the munich ccc group<font color="#E5E5E5"> the other day</font>

1010
00:36:18,570 --> 00:36:23,790
and talking to them about the radio

1011
00:36:20,100 --> 00:36:26,580
badge from from camp<font color="#CCCCCC"> 2015 and they said</font>

1012
00:36:23,790 --> 00:36:28,680
oh we've got two USB<font color="#CCCCCC"> ports</font><font color="#E5E5E5"> and and an</font>

1013
00:36:26,580 --> 00:36:30,270
interesting control<font color="#E5E5E5"> USB controller on</font>

1014
00:36:28,680 --> 00:36:31,859
there and we said oh yeah that<font color="#CCCCCC"> looks an</font>

1015
00:36:30,270 --> 00:36:33,540
awful lot like great<font color="#E5E5E5"> fair yeah that</font>

1016
00:36:31,860 --> 00:36:36,180
shouldn't<font color="#CCCCCC"> take us too long so so the</font>

1017
00:36:33,540 --> 00:36:38,520
<font color="#E5E5E5">next thing is if you have one of those</font>

1018
00:36:36,180 --> 00:36:40,200
badges from<font color="#E5E5E5"> 2015 it will support the</font>

1019
00:36:38,520 --> 00:36:41,640
<font color="#E5E5E5">attacks we're about to do as soon as we</font>

1020
00:36:40,200 --> 00:36:48,779
get<font color="#E5E5E5"> around to writing the software right</font>

1021
00:36:41,640 --> 00:36:50,310
so so you<font color="#E5E5E5"> don't so so for</font><font color="#CCCCCC"> those of you</font>

1022
00:36:48,780 --> 00:36:50,790
who regularly attend these camps<font color="#E5E5E5"> you're</font>

1023
00:36:50,310 --> 00:36:52,200
in luck

1024
00:36:50,790 --> 00:36:54,090
you don't have to buy any hardware<font color="#CCCCCC"> you</font>

1025
00:36:52,200 --> 00:36:55,980
already have it<font color="#E5E5E5"> and</font><font color="#CCCCCC"> for those who didn't</font>

1026
00:36:54,090 --> 00:36:57,150
attend camp 2015

1027
00:36:55,980 --> 00:36:59,130
I'm really sorry<font color="#E5E5E5"> because that badge was</font>

1028
00:36:57,150 --> 00:37:01,650
amazing yeah and if we<font color="#E5E5E5"> don't</font><font color="#CCCCCC"> get the</font><font color="#E5E5E5"> to</font>

1029
00:36:59,130 --> 00:37:02,460
you in like a few months<font color="#E5E5E5"> someone emailed</font>

1030
00:37:01,650 --> 00:37:04,470
me<font color="#E5E5E5"> and just tell me I should do that</font>

1031
00:37:02,460 --> 00:37:06,000
<font color="#E5E5E5">yeah it's just just put your anger at</font>

1032
00:37:04,470 --> 00:37:07,470
<font color="#CCCCCC">the top of the priority queue</font><font color="#E5E5E5"> you can</font>

1033
00:37:06,000 --> 00:37:09,210
<font color="#CCCCCC">find out</font><font color="#E5E5E5"> Twitter handles and</font><font color="#CCCCCC"> just bug us</font>

1034
00:37:07,470 --> 00:37:12,209
every day until<font color="#E5E5E5"> we until one to a car</font>

1035
00:37:09,210 --> 00:37:13,920
<font color="#CCCCCC">ride so until we</font><font color="#E5E5E5"> block you yeah yeah but</font>

1036
00:37:12,210 --> 00:37:15,630
it<font color="#E5E5E5"> already works with with face dancer</font>

1037
00:37:13,920 --> 00:37:17,880
<font color="#E5E5E5">and Ross</font><font color="#CCCCCC"> dancer and bigger dancer</font>

1038
00:37:15,630 --> 00:37:20,880
Ross dancer was someone called<font color="#E5E5E5"> Philip</font>

1039
00:37:17,880 --> 00:37:25,580
fluke<font color="#CCCCCC"> Chuen I probably just completely</font>

1040
00:37:20,880 --> 00:37:27,810
murdered his name<font color="#CCCCCC"> but</font><font color="#E5E5E5"> he he saw that the</font>

1041
00:37:25,580 --> 00:37:31,410
that there's a there's a choke point in

1042
00:37:27,810 --> 00:37:34,590
<font color="#E5E5E5">in the way that</font><font color="#CCCCCC"> face dancer works and so</font>

1043
00:37:31,410 --> 00:37:36,660
you you can't<font color="#E5E5E5"> support like</font><font color="#CCCCCC"> high speed</font>

1044
00:37:34,590 --> 00:37:37,650
<font color="#CCCCCC">devices and you can't</font><font color="#E5E5E5"> support and not</font>

1045
00:37:36,660 --> 00:37:39,839
even<font color="#E5E5E5"> high speed voice but like</font>

1046
00:37:37,650 --> 00:37:42,150
reasonable data rate devices in credit

1047
00:37:39,840 --> 00:37:43,590
right so if you<font color="#CCCCCC"> look at</font><font color="#E5E5E5"> this guy</font><font color="#CCCCCC"> because</font>

1048
00:37:42,150 --> 00:37:45,900
everything is going<font color="#CCCCCC"> through this FDDI</font>

1049
00:37:43,590 --> 00:37:49,620
usb-to-serial chip it's limited to<font color="#E5E5E5"> the</font>

1050
00:37:45,900 --> 00:37:50,880
baud rates that then FTDI chip can

1051
00:37:49,620 --> 00:37:52,710
reasonably do which in this case was

1052
00:37:50,880 --> 00:37:53,940
something like 15k baud

1053
00:37:52,710 --> 00:37:57,420
yeah it's in this particular

1054
00:37:53,940 --> 00:37:59,370
implementation<font color="#E5E5E5"> it yeah</font><font color="#CCCCCC"> and and so what</font>

1055
00:37:57,420 --> 00:38:00,960
he does then is<font color="#CCCCCC"> just said well it's the</font>

1056
00:37:59,370 --> 00:38:02,759
chip<font color="#CCCCCC"> speaks PI</font><font color="#E5E5E5"> I can just plug it into a</font>

1057
00:38:00,960 --> 00:38:04,230
Raspberry Pi<font color="#E5E5E5"> and I said oh the chip</font>

1058
00:38:02,760 --> 00:38:05,820
speaks<font color="#E5E5E5"> by I can plug it into a</font>

1059
00:38:04,230 --> 00:38:08,760
<font color="#CCCCCC">BeagleBone because I like open source</font>

1060
00:38:05,820 --> 00:38:10,380
hardware<font color="#E5E5E5"> and so that's how these these</font>

1061
00:38:08,760 --> 00:38:11,820
<font color="#CCCCCC">two these two boards</font><font color="#E5E5E5"> on the on the</font>

1062
00:38:10,380 --> 00:38:14,820
<font color="#CCCCCC">bottom</font><font color="#E5E5E5"> left hand</font><font color="#CCCCCC"> side</font><font color="#E5E5E5"> of the right hand</font>

1063
00:38:11,820 --> 00:38:17,340
<font color="#E5E5E5">side of the screen</font><font color="#CCCCCC"> exist</font><font color="#E5E5E5"> and then at the</font>

1064
00:38:14,820 --> 00:38:18,660
top right there<font color="#CCCCCC"> is a there is great fair</font>

1065
00:38:17,340 --> 00:38:19,200
and that's<font color="#E5E5E5"> what</font><font color="#CCCCCC"> we're</font><font color="#E5E5E5"> running</font><font color="#CCCCCC"> our demos</font>

1066
00:38:18,660 --> 00:38:21,629
on today

1067
00:38:19,200 --> 00:38:23,899
great<font color="#CCCCCC"> Phet is a board</font><font color="#E5E5E5"> that we've been</font>

1068
00:38:21,630 --> 00:38:27,390
<font color="#CCCCCC">building</font><font color="#E5E5E5"> a great score gadgets that's</font>

1069
00:38:23,900 --> 00:38:29,490
gives us the<font color="#CCCCCC"> it's</font><font color="#E5E5E5"> imagine it's the</font>

1070
00:38:27,390 --> 00:38:31,379
<font color="#E5E5E5">microcontroller section of the</font><font color="#CCCCCC"> the hack</font>

1071
00:38:29,490 --> 00:38:32,100
<font color="#CCCCCC">RF and so if you have the radio badge</font>

1072
00:38:31,380 --> 00:38:33,570
<font color="#E5E5E5">from 2015</font>

1073
00:38:32,100 --> 00:38:37,080
it's the microcontroller section on<font color="#E5E5E5"> that</font>

1074
00:38:33,570 --> 00:38:38,370
<font color="#CCCCCC">- which is</font><font color="#E5E5E5"> why it's so simple</font><font color="#CCCCCC"> -</font><font color="#E5E5E5"> to port</font>

1075
00:38:37,080 --> 00:38:40,590
<font color="#E5E5E5">that code across to the radio badge</font>

1076
00:38:38,370 --> 00:38:42,810
right<font color="#E5E5E5"> but this is basically a USB Swiss</font>

1077
00:38:40,590 --> 00:38:44,850
Army knife it's in the same<font color="#E5E5E5"> vein as good</font>

1078
00:38:42,810 --> 00:38:46,980
<font color="#CCCCCC">Fett</font><font color="#E5E5E5"> it's yeah it's good</font><font color="#CCCCCC"> it's</font><font color="#E5E5E5"> literally</font>

1079
00:38:44,850 --> 00:38:47,460
<font color="#E5E5E5">I mean I'm pretty sure Travis sold that</font>

1080
00:38:46,980 --> 00:38:49,140
to Mike

1081
00:38:47,460 --> 00:38:51,180
oh yeah that's sorry I'm<font color="#E5E5E5"> sorry I</font>

1082
00:38:49,140 --> 00:38:52,620
completely forgot yeah so it turns out

1083
00:38:51,180 --> 00:38:54,240
<font color="#E5E5E5">we keep referring to Travis good speeds</font>

1084
00:38:52,620 --> 00:38:55,770
good<font color="#E5E5E5"> Fett project</font><font color="#CCCCCC"> it's actually great</font>

1085
00:38:54,240 --> 00:38:58,140
<font color="#E5E5E5">scope gadgets good fair project because</font>

1086
00:38:55,770 --> 00:39:01,610
we bought<font color="#E5E5E5"> it for him for</font><font color="#CCCCCC"> five bucks and</font>

1087
00:38:58,140 --> 00:39:05,009
and I<font color="#E5E5E5"> believe over drinks</font><font color="#CCCCCC"> oh yeah</font><font color="#E5E5E5"> Iraq</font>

1088
00:39:01,610 --> 00:39:07,800
<font color="#CCCCCC">but</font><font color="#E5E5E5"> did not we</font><font color="#CCCCCC"> refuse the price went up</font>

1089
00:39:05,010 --> 00:39:09,480
<font color="#E5E5E5">so but</font><font color="#CCCCCC"> gray fur is our</font><font color="#E5E5E5"> kind of next</font>

1090
00:39:07,800 --> 00:39:11,460
<font color="#E5E5E5">generation USB Swiss Army knife hardware</font>

1091
00:39:09,480 --> 00:39:13,680
hacking tool supports all<font color="#CCCCCC"> sorts of thing</font>

1092
00:39:11,460 --> 00:39:15,750
<font color="#E5E5E5">or interesting protocols for playing</font>

1093
00:39:13,680 --> 00:39:17,129
around<font color="#E5E5E5"> with hardware</font><font color="#CCCCCC"> we've given talks</font>

1094
00:39:15,750 --> 00:39:18,810
<font color="#E5E5E5">about it in the past and</font><font color="#CCCCCC"> I'm sure we'll</font>

1095
00:39:17,130 --> 00:39:20,490
continue<font color="#E5E5E5"> to do so</font><font color="#CCCCCC"> and have examples up</font>

1096
00:39:18,810 --> 00:39:21,720
<font color="#E5E5E5">there so if you go and look up the great</font>

1097
00:39:20,490 --> 00:39:22,919
<font color="#CCCCCC">project that's and there's</font><font color="#E5E5E5"> some</font>

1098
00:39:21,720 --> 00:39:25,620
<font color="#CCCCCC">interesting stuff happening there but</font>

1099
00:39:22,920 --> 00:39:26,790
but it's important<font color="#E5E5E5"> to note that we've</font>

1100
00:39:25,620 --> 00:39:29,069
put a recent line of<font color="#E5E5E5"> effort into</font><font color="#CCCCCC"> making</font>

1101
00:39:26,790 --> 00:39:30,660
sure<font color="#E5E5E5"> that the face dancer to code works</font>

1102
00:39:29,070 --> 00:39:32,880
with other hardware so<font color="#CCCCCC"> you don't have to</font>

1103
00:39:30,660 --> 00:39:34,170
have that<font color="#E5E5E5"> hardware</font><font color="#CCCCCC"> but I like</font><font color="#E5E5E5"> it a lot</font>

1104
00:39:32,880 --> 00:39:36,000
yeah<font color="#E5E5E5"> so we're not</font><font color="#CCCCCC"> just trying to sell</font>

1105
00:39:34,170 --> 00:39:37,770
<font color="#CCCCCC">you this it</font><font color="#E5E5E5"> works on lots of variety of</font>

1106
00:39:36,000 --> 00:39:40,380
other<font color="#E5E5E5"> things we</font><font color="#CCCCCC"> use this because it's</font>

1107
00:39:37,770 --> 00:39:41,820
easy<font color="#E5E5E5"> so if you want easy that's right</font>

1108
00:39:40,380 --> 00:39:44,190
<font color="#E5E5E5">exactly</font><font color="#CCCCCC"> than that</font><font color="#E5E5E5"> but probably give me</font>

1109
00:39:41,820 --> 00:39:45,780
as easy<font color="#E5E5E5"> on the radio badge so yeah same</font>

1110
00:39:44,190 --> 00:39:46,650
time and and it's feasible<font color="#CCCCCC"> that this</font>

1111
00:39:45,780 --> 00:39:48,660
will<font color="#E5E5E5"> work</font>

1112
00:39:46,650 --> 00:39:50,040
something that happened<font color="#E5E5E5"> when I built</font>

1113
00:39:48,660 --> 00:39:51,720
this beagle<font color="#CCCCCC"> dan</font><font color="#E5E5E5"> support at the bottom</font>

1114
00:39:50,040 --> 00:39:53,700
this<font color="#CCCCCC"> is</font><font color="#E5E5E5"> the only working boo good answer</font>

1115
00:39:51,720 --> 00:39:55,109
<font color="#E5E5E5">because it turns out the conversation</font>

1116
00:39:53,700 --> 00:39:57,210
hey I've designed this thing<font color="#E5E5E5"> that will</font>

1117
00:39:55,109 --> 00:40:00,990
do face dancer<font color="#E5E5E5"> but attached to</font><font color="#CCCCCC"> the</font>

1118
00:39:57,210 --> 00:40:02,849
<font color="#E5E5E5">BeagleBone and my boss Mike said but</font>

1119
00:40:00,990 --> 00:40:04,410
it's got two<font color="#CCCCCC"> USB ports it's got a</font><font color="#E5E5E5"> USB</font>

1120
00:40:02,849 --> 00:40:05,670
<font color="#E5E5E5">host and USB device port can't you just</font>

1121
00:40:04,410 --> 00:40:06,930
implement<font color="#E5E5E5"> the same thing in software and</font>

1122
00:40:05,670 --> 00:40:08,220
so then<font color="#E5E5E5"> I spent a bunch of time</font>

1123
00:40:06,930 --> 00:40:10,230
<font color="#E5E5E5">implanting in software and never</font>

1124
00:40:08,220 --> 00:40:12,029
bothered soldering up the second<font color="#CCCCCC"> big or</font>

1125
00:40:10,230 --> 00:40:13,920
<font color="#E5E5E5">don't support because building this</font>

1126
00:40:12,030 --> 00:40:15,690
thing<font color="#E5E5E5"> is vaguely pointless when the</font>

1127
00:40:13,920 --> 00:40:17,069
heart the hub where it<font color="#E5E5E5"> the only hardware</font>

1128
00:40:15,690 --> 00:40:18,210
it connects to<font color="#E5E5E5"> supports the same</font>

1129
00:40:17,069 --> 00:40:20,609
functions<font color="#CCCCCC"> without having to building</font>

1130
00:40:18,210 --> 00:40:21,900
your<font color="#E5E5E5"> hardware right so the goal is</font><font color="#CCCCCC"> that</font>

1131
00:40:20,609 --> 00:40:23,308
eventually<font color="#CCCCCC"> we'll be</font><font color="#E5E5E5"> able</font><font color="#CCCCCC"> to</font><font color="#E5E5E5"> take things</font>

1132
00:40:21,900 --> 00:40:25,140
like the<font color="#CCCCCC"> our</font><font color="#E5E5E5"> PI zero which is the five</font>

1133
00:40:23,309 --> 00:40:26,880
dollar version of the Raspberry Pi<font color="#E5E5E5"> so</font>

1134
00:40:25,140 --> 00:40:28,680
<font color="#E5E5E5">and be able</font><font color="#CCCCCC"> to do all the same</font><font color="#E5E5E5"> face to</font>

1135
00:40:26,880 --> 00:40:30,720
<font color="#E5E5E5">answer stuff on</font><font color="#CCCCCC"> that it's a little bit</font>

1136
00:40:28,680 --> 00:40:31,980
<font color="#E5E5E5">messy</font><font color="#CCCCCC"> and</font><font color="#E5E5E5"> that we have to work with you</font>

1137
00:40:30,720 --> 00:40:34,680
to basically write kernel drivers for

1138
00:40:31,980 --> 00:40:35,880
that<font color="#E5E5E5"> but the hope is</font><font color="#CCCCCC"> that</font><font color="#E5E5E5"> if we do</font><font color="#CCCCCC"> that</font>

1139
00:40:34,680 --> 00:40:38,790
the<font color="#E5E5E5"> right level</font><font color="#CCCCCC"> abstraction that will</font>

1140
00:40:35,880 --> 00:40:40,380
work on<font color="#E5E5E5"> literally any Linux single board</font>

1141
00:40:38,790 --> 00:40:42,119
computer that has device support so

1142
00:40:40,380 --> 00:40:44,640
anything that's OTG and anything that

1143
00:40:42,119 --> 00:40:46,530
has just a device port should be able<font color="#E5E5E5"> to</font>

1144
00:40:44,640 --> 00:40:49,170
<font color="#E5E5E5">act as a face to answer device so that</font>

1145
00:40:46,530 --> 00:40:50,760
will be the<font color="#E5E5E5"> ultimate in cheap because I</font>

1146
00:40:49,170 --> 00:40:52,049
don't<font color="#E5E5E5"> think anything you build is</font>

1147
00:40:50,760 --> 00:40:53,040
getting it<font color="#E5E5E5"> down</font><font color="#CCCCCC"> to like</font><font color="#E5E5E5"> five dollars</font><font color="#CCCCCC"> yes</font>

1148
00:40:52,049 --> 00:40:56,040
<font color="#E5E5E5">we</font><font color="#CCCCCC"> just don't have</font><font color="#E5E5E5"> the Raspberry Pi</font>

1149
00:40:53,040 --> 00:40:56,940
volume exactly so so so it's we<font color="#E5E5E5"> just</font>

1150
00:40:56,040 --> 00:40:58,740
need to<font color="#E5E5E5"> pick up the pace a</font><font color="#CCCCCC"> little</font><font color="#E5E5E5"> bit</font>

1151
00:40:56,940 --> 00:41:00,569
because we've offered on about USB<font color="#E5E5E5"> for</font>

1152
00:40:58,740 --> 00:41:04,078
such a long<font color="#CCCCCC"> time</font><font color="#E5E5E5"> and I want</font><font color="#CCCCCC"> to show some</font>

1153
00:41:00,569 --> 00:41:06,390
demos<font color="#E5E5E5"> so so the additional the</font>

1154
00:41:04,079 --> 00:41:08,339
<font color="#E5E5E5">additional features</font><font color="#CCCCCC"> the the beauty of</font>

1155
00:41:06,390 --> 00:41:09,960
like removing<font color="#CCCCCC"> those limitations</font><font color="#E5E5E5"> from the</font>

1156
00:41:08,339 --> 00:41:11,759
come with the<font color="#CCCCCC"> fate the original face</font>

1157
00:41:09,960 --> 00:41:14,520
<font color="#CCCCCC">tonsure platform is</font><font color="#E5E5E5"> that we're now able</font>

1158
00:41:11,760 --> 00:41:16,559
<font color="#CCCCCC">to</font><font color="#E5E5E5"> emulate different devices more</font>

1159
00:41:14,520 --> 00:41:17,819
complicated devices<font color="#E5E5E5"> those different</font>

1160
00:41:16,559 --> 00:41:19,650
configurations<font color="#CCCCCC"> that aren't limited to</font>

1161
00:41:17,819 --> 00:41:22,400
<font color="#E5E5E5">the endpoints that that chip supports so</font>

1162
00:41:19,650 --> 00:41:24,119
we can use much more flexible

1163
00:41:22,400 --> 00:41:27,059
configurations of<font color="#CCCCCC"> endpoints and things</font>

1164
00:41:24,119 --> 00:41:29,970
like that<font color="#E5E5E5"> in the in the using the great</font>

1165
00:41:27,059 --> 00:41:33,290
<font color="#CCCCCC">set and</font><font color="#E5E5E5"> we're also able to man in the</font>

1166
00:41:29,970 --> 00:41:35,520
middle<font color="#E5E5E5"> perform</font><font color="#CCCCCC"> manual</font><font color="#E5E5E5"> middle attacks on</font>

1167
00:41:33,290 --> 00:41:37,829
<font color="#E5E5E5">USB connections now this is the thing I</font>

1168
00:41:35,520 --> 00:41:40,859
did previously<font color="#E5E5E5"> with</font><font color="#CCCCCC"> the BeagleBone black</font>

1169
00:41:37,829 --> 00:41:44,069
but I'm able<font color="#CCCCCC"> to were</font><font color="#E5E5E5"> able to do it with</font>

1170
00:41:40,859 --> 00:41:45,900
with new face down so<font color="#E5E5E5"> now and it's a lot</font>

1171
00:41:44,069 --> 00:41:49,259
simpler<font color="#E5E5E5"> and we're going to show them a</font>

1172
00:41:45,900 --> 00:41:51,180
phantom in<font color="#E5E5E5"> as well</font><font color="#CCCCCC"> so what</font><font color="#E5E5E5"> can we do</font>

1173
00:41:49,260 --> 00:41:52,680
with face<font color="#CCCCCC"> dancer we can continue to do</font>

1174
00:41:51,180 --> 00:41:55,169
the<font color="#E5E5E5"> same things the</font><font color="#CCCCCC"> original face dancer</font>

1175
00:41:52,680 --> 00:41:56,399
was commonly used<font color="#E5E5E5"> for we can fuzz USB</font>

1176
00:41:55,170 --> 00:41:58,200
host which means that if<font color="#E5E5E5"> you</font><font color="#CCCCCC"> have</font>

1177
00:41:56,400 --> 00:42:01,740
something<font color="#CCCCCC"> like a</font><font color="#E5E5E5"> PlayStation that has a</font>

1178
00:41:58,200 --> 00:42:04,439
older or custom USB<font color="#E5E5E5"> stack we can start</font>

1179
00:42:01,740 --> 00:42:06,808
attacking that USB stack and<font color="#E5E5E5"> you'd be</font>

1180
00:42:04,440 --> 00:42:07,600
surprised<font color="#CCCCCC"> how quickly</font><font color="#E5E5E5"> and easily these</font>

1181
00:42:06,809 --> 00:42:10,600
<font color="#E5E5E5">things</font>

1182
00:42:07,600 --> 00:42:12,520
<font color="#CCCCCC">/ I used to say that</font><font color="#E5E5E5"> this was true</font>

1183
00:42:10,600 --> 00:42:14,830
mostly for custom USB stacks but in

1184
00:42:12,520 --> 00:42:16,540
development of the USB<font color="#E5E5E5"> proxy stuff that</font>

1185
00:42:14,830 --> 00:42:18,040
we were<font color="#CCCCCC"> doing here at</font><font color="#E5E5E5"> camp this week</font><font color="#CCCCCC"> I</font>

1186
00:42:16,540 --> 00:42:20,590
think<font color="#CCCCCC"> we managed</font><font color="#E5E5E5"> to lock up your laptop</font>

1187
00:42:18,040 --> 00:42:22,600
reliably find codes that reliably<font color="#E5E5E5"> would</font>

1188
00:42:20,590 --> 00:42:24,760
yeah this thing's running a<font color="#E5E5E5"> 410 kernel</font>

1189
00:42:22,600 --> 00:42:27,160
and we have a pretty reliable<font color="#E5E5E5"> piece of</font>

1190
00:42:24,760 --> 00:42:29,020
code that<font color="#E5E5E5"> I accidentally wrote that will</font>

1191
00:42:27,160 --> 00:42:30,460
lock this thing<font color="#E5E5E5"> up so</font><font color="#CCCCCC"> I have to hard</font>

1192
00:42:29,020 --> 00:42:31,480
hard reboot<font color="#E5E5E5"> right and we weren't even</font>

1193
00:42:30,460 --> 00:42:35,080
<font color="#E5E5E5">trying to fuzz we were just trying to</font>

1194
00:42:31,480 --> 00:42:36,520
<font color="#E5E5E5">get us be working yeah getting us to</font>

1195
00:42:35,080 --> 00:42:39,130
develop<font color="#CCCCCC"> software for</font><font color="#E5E5E5"> you is a great way</font>

1196
00:42:36,520 --> 00:42:41,500
I think everything<font color="#CCCCCC"> yes yeah</font><font color="#E5E5E5"> and yeah</font>

1197
00:42:39,130 --> 00:42:43,540
someone someone recently<font color="#E5E5E5"> said to me</font><font color="#CCCCCC"> Oh</font>

1198
00:42:41,500 --> 00:42:45,550
face<font color="#E5E5E5"> taunts or - yeah I mean as long as</font>

1199
00:42:43,540 --> 00:42:47,440
<font color="#E5E5E5">it'll</font><font color="#CCCCCC"> still reliably</font><font color="#E5E5E5"> crash my</font>

1200
00:42:45,550 --> 00:42:48,850
playstation<font color="#CCCCCC"> I'll use</font><font color="#E5E5E5"> it and so that's</font>

1201
00:42:47,440 --> 00:42:50,200
<font color="#CCCCCC">its</font><font color="#E5E5E5"> parently what they</font><font color="#CCCCCC"> wanted the</font>

1202
00:42:48,850 --> 00:42:51,430
<font color="#E5E5E5">original face dancer for</font><font color="#CCCCCC"> we were to</font>

1203
00:42:50,200 --> 00:42:53,799
discuss fingerprinting USB

1204
00:42:51,430 --> 00:42:55,120
implementation we did and and so it

1205
00:42:53,800 --> 00:42:57,460
again come back<font color="#CCCCCC"> to those</font><font color="#E5E5E5"> classes of</font>

1206
00:42:55,120 --> 00:43:00,339
device<font color="#CCCCCC"> there are already</font><font color="#E5E5E5"> there's already</font>

1207
00:42:57,460 --> 00:43:02,680
code to implement<font color="#CCCCCC"> those in face dancer</font>

1208
00:43:00,340 --> 00:43:04,060
and because the old face dancer<font color="#CCCCCC"> and it</font>

1209
00:43:02,680 --> 00:43:07,330
was just a<font color="#E5E5E5"> simple port to</font><font color="#CCCCCC"> the new face</font>

1210
00:43:04,060 --> 00:43:09,340
dancer when we wrote<font color="#E5E5E5"> it to enable those</font>

1211
00:43:07,330 --> 00:43:11,110
things to exist so we already<font color="#E5E5E5"> have</font>

1212
00:43:09,340 --> 00:43:13,150
implementations for<font color="#E5E5E5"> speaking</font><font color="#CCCCCC"> and</font>

1213
00:43:11,110 --> 00:43:14,380
keyboard<font color="#E5E5E5"> as a serial device and</font><font color="#CCCCCC"> FTDI</font>

1214
00:43:13,150 --> 00:43:15,970
device which is slightly different<font color="#CCCCCC"> and</font>

1215
00:43:14,380 --> 00:43:17,470
if you look is<font color="#E5E5E5"> Travis's blog there's</font>

1216
00:43:15,970 --> 00:43:19,209
actually great<font color="#E5E5E5"> things unlike stealing</font>

1217
00:43:17,470 --> 00:43:20,379
USB device firmware by pretending<font color="#E5E5E5"> to</font><font color="#CCCCCC"> be</font>

1218
00:43:19,210 --> 00:43:21,930
<font color="#CCCCCC">that device and asking for firmware</font>

1219
00:43:20,380 --> 00:43:24,790
updates<font color="#E5E5E5"> yeah which is a cool technique</font>

1220
00:43:21,930 --> 00:43:27,399
<font color="#CCCCCC">so it's this is</font><font color="#E5E5E5"> all super easy to use</font>

1221
00:43:24,790 --> 00:43:29,470
<font color="#E5E5E5">will actually show you the code for a</font>

1222
00:43:27,400 --> 00:43:32,350
USB<font color="#CCCCCC"> to serial converter</font><font color="#E5E5E5"> and you can see</font>

1223
00:43:29,470 --> 00:43:34,209
how easy<font color="#CCCCCC"> it would</font><font color="#E5E5E5"> be to take our library</font>

1224
00:43:32,350 --> 00:43:36,430
<font color="#CCCCCC">our kind of</font><font color="#E5E5E5"> back in library and</font>

1225
00:43:34,210 --> 00:43:38,890
<font color="#CCCCCC">technology here and build a USB serial</font>

1226
00:43:36,430 --> 00:43:41,379
converter on top of that<font color="#CCCCCC"> I</font><font color="#E5E5E5"> realize my</font>

1227
00:43:38,890 --> 00:43:44,020
phone<font color="#CCCCCC"> slice was wrong in</font><font color="#E5E5E5"> the</font><font color="#CCCCCC"> opening</font>

1228
00:43:41,380 --> 00:43:46,180
<font color="#CCCCCC">Visual Studio</font><font color="#E5E5E5"> code yeah I did judging</font>

1229
00:43:44,020 --> 00:43:48,790
you so<font color="#CCCCCC"> yeah</font><font color="#E5E5E5"> you're right to judge</font><font color="#CCCCCC"> me for</font>

1230
00:43:46,180 --> 00:43:51,759
it<font color="#E5E5E5"> okay so the USB the USB serial device</font>

1231
00:43:48,790 --> 00:43:56,259
let's<font color="#CCCCCC"> Wow</font><font color="#E5E5E5"> how do I increase my font size</font>

1232
00:43:51,760 --> 00:43:57,610
there it is so so essentially you start

1233
00:43:56,260 --> 00:43:59,080
off by<font color="#CCCCCC"> importing</font><font color="#E5E5E5"> a load of things from</font>

1234
00:43:57,610 --> 00:44:02,680
<font color="#E5E5E5">face dancer to configure the various</font>

1235
00:43:59,080 --> 00:44:05,230
sections<font color="#CCCCCC"> of</font><font color="#E5E5E5"> a those can those requests</font>

1236
00:44:02,680 --> 00:44:07,180
those descriptors all the standard stuff

1237
00:44:05,230 --> 00:44:08,530
<font color="#CCCCCC">we do already</font><font color="#E5E5E5"> yeah you just pull it</font><font color="#CCCCCC"> in</font>

1238
00:44:07,180 --> 00:44:09,790
cancel if<font color="#E5E5E5"> you specify a couple of</font>

1239
00:44:08,530 --> 00:44:10,960
<font color="#CCCCCC">endpoints that's the dates we're going</font>

1240
00:44:09,790 --> 00:44:13,680
to transfer in each direction control

1241
00:44:10,960 --> 00:44:15,850
<font color="#CCCCCC">endpoints always going to be there</font><font color="#E5E5E5"> you</font>

1242
00:44:13,680 --> 00:44:17,950
<font color="#CCCCCC">describe the device which basically is</font>

1243
00:44:15,850 --> 00:44:20,940
<font color="#E5E5E5">the</font><font color="#CCCCCC"> endpoints so at the endpoints the</font>

1244
00:44:17,950 --> 00:44:23,250
descriptors are an empty<font color="#E5E5E5"> dictionary yeah</font>

1245
00:44:20,940 --> 00:44:24,839
for some reason<font color="#E5E5E5"> and we're having custom</font>

1246
00:44:23,250 --> 00:44:27,869
descriptors oh yeah the rest are here

1247
00:44:24,839 --> 00:44:30,060
and and these<font color="#CCCCCC"> Wow</font><font color="#E5E5E5"> I'm not good at</font>

1248
00:44:27,869 --> 00:44:31,050
interfacing with an editor<font color="#CCCCCC"> as anyone</font>

1249
00:44:30,060 --> 00:44:33,900
<font color="#E5E5E5">who's her written</font><font color="#CCCCCC"> software with me will</font>

1250
00:44:31,050 --> 00:44:36,990
know these these<font color="#E5E5E5"> bytes here just say hey</font>

1251
00:44:33,900 --> 00:44:41,130
we're custom we don't we don't conform

1252
00:44:36,990 --> 00:44:43,560
to to<font color="#E5E5E5"> a spec at the interface level</font>

1253
00:44:41,130 --> 00:44:45,510
<font color="#CCCCCC">that's all they can't the data that</font><font color="#E5E5E5"> USB</font>

1254
00:44:43,560 --> 00:44:47,009
<font color="#E5E5E5">is going to ask for</font><font color="#CCCCCC"> Andrew numerate the</font>

1255
00:44:45,510 --> 00:44:49,740
device so that<font color="#E5E5E5"> is all the boilerplate</font>

1256
00:44:47,010 --> 00:44:51,089
<font color="#CCCCCC">yeah the</font><font color="#E5E5E5"> USB spec</font><font color="#CCCCCC"> all of that so far is</font>

1257
00:44:49,740 --> 00:44:52,229
boilerplate you can you can pick up<font color="#CCCCCC"> this</font>

1258
00:44:51,089 --> 00:44:54,240
file and copy and paste<font color="#E5E5E5"> it in fact</font>

1259
00:44:52,230 --> 00:44:56,160
that's<font color="#CCCCCC"> how the USB proxy</font><font color="#E5E5E5"> encode works I</font>

1260
00:44:54,240 --> 00:44:58,078
took this file copied and pasted it<font color="#E5E5E5"> and</font>

1261
00:44:56,160 --> 00:45:00,420
just altered the bits<font color="#CCCCCC"> tiny enter and</font>

1262
00:44:58,079 --> 00:45:01,859
from here to here<font color="#CCCCCC"> that</font><font color="#E5E5E5"> is the</font><font color="#CCCCCC"> actual</font>

1263
00:45:00,420 --> 00:45:02,880
implementation<font color="#CCCCCC"> of</font><font color="#E5E5E5"> the device right</font><font color="#CCCCCC"> so</font>

1264
00:45:01,859 --> 00:45:05,009
<font color="#E5E5E5">that is everything does</font><font color="#CCCCCC"> not already</font>

1265
00:45:02,880 --> 00:45:08,760
boilerplate so<font color="#E5E5E5"> data is available over</font>

1266
00:45:05,010 --> 00:45:10,740
the serial connection<font color="#E5E5E5"> we remap the the</font>

1267
00:45:08,760 --> 00:45:13,170
carriage returns we uppercase the data

1268
00:45:10,740 --> 00:45:14,549
and we send it<font color="#CCCCCC"> back so under the USB</font>

1269
00:45:13,170 --> 00:45:16,829
serial data comes in on one bulk

1270
00:45:14,550 --> 00:45:18,630
<font color="#E5E5E5">endpoint we take it do whatever you want</font>

1271
00:45:16,829 --> 00:45:20,460
with it and send it back on the<font color="#E5E5E5"> other</font>

1272
00:45:18,630 --> 00:45:22,230
endpoint<font color="#CCCCCC"> this basically</font><font color="#E5E5E5"> has an</font><font color="#CCCCCC"> endpoint</font>

1273
00:45:20,460 --> 00:45:25,650
<font color="#E5E5E5">for send an endpoint for receive our</font>

1274
00:45:22,230 --> 00:45:26,880
<font color="#CCCCCC">whole emulation code is so simple both</font>

1275
00:45:25,650 --> 00:45:28,109
<font color="#E5E5E5">because the devices are simple and</font>

1276
00:45:26,880 --> 00:45:29,700
because<font color="#CCCCCC"> our library makes it super</font>

1277
00:45:28,109 --> 00:45:31,140
simple<font color="#CCCCCC"> and if you were to play code golf</font>

1278
00:45:29,700 --> 00:45:32,910
I think<font color="#E5E5E5"> you get this down</font><font color="#CCCCCC"> to two</font><font color="#E5E5E5"> lines</font>

1279
00:45:31,140 --> 00:45:35,640
and<font color="#E5E5E5"> still have to be reasonably readable</font>

1280
00:45:32,910 --> 00:45:38,970
<font color="#E5E5E5">yeah so it is</font><font color="#CCCCCC"> that easy</font><font color="#E5E5E5"> to implement USB</font>

1281
00:45:35,640 --> 00:45:42,930
devices so<font color="#E5E5E5"> so why don't we attempt to</font>

1282
00:45:38,970 --> 00:45:44,189
<font color="#E5E5E5">run it</font><font color="#CCCCCC"> yeah this</font><font color="#E5E5E5"> dance</font><font color="#CCCCCC"> a serial so face</font>

1283
00:45:42,930 --> 00:45:45,720
<font color="#CCCCCC">tonsure is</font><font color="#E5E5E5"> just a wrapper script that</font>

1284
00:45:44,190 --> 00:45:47,810
sets it up and make<font color="#CCCCCC"> sure it finds a</font>

1285
00:45:45,720 --> 00:45:51,078
great<font color="#E5E5E5"> fit rather than</font><font color="#CCCCCC"> something</font><font color="#E5E5E5"> else</font>

1286
00:45:47,810 --> 00:45:53,880
<font color="#CCCCCC">Travis having used an FTDI device on the</font>

1287
00:45:51,079 --> 00:45:55,319
original face<font color="#E5E5E5"> tonsure implementation</font>

1288
00:45:53,880 --> 00:45:57,660
means that every time<font color="#CCCCCC"> I have a</font><font color="#E5E5E5"> face</font>

1289
00:45:55,319 --> 00:45:59,099
dancer plugged into my laptop<font color="#CCCCCC"> our code</font>

1290
00:45:57,660 --> 00:46:00,210
tries<font color="#E5E5E5"> to use that</font><font color="#CCCCCC"> and gets really</font>

1291
00:45:59,099 --> 00:46:02,700
<font color="#E5E5E5">confused when it's connected</font><font color="#CCCCCC"> to</font>

1292
00:46:00,210 --> 00:46:06,150
<font color="#E5E5E5">something else and not a face</font><font color="#CCCCCC"> dancer</font><font color="#E5E5E5"> but</font>

1293
00:46:02,700 --> 00:46:08,069
if I<font color="#E5E5E5"> just run this so again because he</font>

1294
00:46:06,150 --> 00:46:10,050
was using legacy<font color="#CCCCCC"> serial exactly no</font>

1295
00:46:08,069 --> 00:46:13,680
enumeration so what I've<font color="#E5E5E5"> done is I've</font>

1296
00:46:10,050 --> 00:46:16,109
run this thing against against my own

1297
00:46:13,680 --> 00:46:17,368
laptop<font color="#CCCCCC"> I don't</font><font color="#E5E5E5"> have a second</font><font color="#CCCCCC"> target</font>

1298
00:46:16,109 --> 00:46:19,859
device here<font color="#E5E5E5"> so I mean</font><font color="#CCCCCC"> this thing's just</font>

1299
00:46:17,369 --> 00:46:21,119
<font color="#E5E5E5">plugged in to two different USB ports so</font>

1300
00:46:19,859 --> 00:46:22,890
what I do is I communicated with over

1301
00:46:21,119 --> 00:46:25,109
one<font color="#CCCCCC"> I</font><font color="#E5E5E5"> say hey spoof of serial device and</font>

1302
00:46:22,890 --> 00:46:28,250
the<font color="#E5E5E5"> other port suddenly sees that</font>

1303
00:46:25,109 --> 00:46:34,860
there's a serial device<font color="#E5E5E5"> so if I just LS</font>

1304
00:46:28,250 --> 00:46:36,930
unless USB you'll see a<font color="#E5E5E5"> Hewlett</font><font color="#CCCCCC"> Packard</font>

1305
00:46:34,860 --> 00:46:41,340
which is it claims to<font color="#E5E5E5"> be hewlett-packard</font>

1306
00:46:36,930 --> 00:46:45,629
calculator<font color="#E5E5E5"> classic Travis yeah</font><font color="#CCCCCC"> and if i</font>

1307
00:46:41,340 --> 00:46:48,780
LS<font color="#E5E5E5"> /dev you will see that I suddenly</font>

1308
00:46:45,630 --> 00:46:50,250
have<font color="#E5E5E5"> TTY USB</font><font color="#CCCCCC"> 0 tty USB 0 here which</font>

1309
00:46:48,780 --> 00:46:52,410
which something exists and you can

1310
00:46:50,250 --> 00:46:53,820
actually see<font color="#CCCCCC"> exactly just</font><font color="#E5E5E5"> we're talking</font>

1311
00:46:52,410 --> 00:46:55,529
about this<font color="#E5E5E5"> is</font><font color="#CCCCCC"> modem manager saying hey</font>

1312
00:46:53,820 --> 00:46:57,060
there's a serial port here let me try

1313
00:46:55,530 --> 00:46:59,070
sending<font color="#E5E5E5"> it data</font><font color="#CCCCCC"> yeah</font><font color="#E5E5E5"> you can see the</font>

1314
00:46:57,060 --> 00:47:00,360
face<font color="#CCCCCC"> desk your</font><font color="#E5E5E5"> response so over here</font>

1315
00:46:59,070 --> 00:47:01,740
this<font color="#CCCCCC"> is this is the log of</font><font color="#E5E5E5"> what's going</font>

1316
00:47:00,360 --> 00:47:03,480
<font color="#E5E5E5">on these</font><font color="#CCCCCC"> are the spots</font><font color="#E5E5E5"> coming from the</font>

1317
00:47:01,740 --> 00:47:04,680
host that we're targeting<font color="#E5E5E5"> and the first</font>

1318
00:47:03,480 --> 00:47:06,690
thing my host does when it sees this

1319
00:47:04,680 --> 00:47:08,879
thing<font color="#CCCCCC"> is you know start trying to talk</font>

1320
00:47:06,690 --> 00:47:11,220
to it as if it's a serial device and if

1321
00:47:08,880 --> 00:47:12,930
there's a modem<font color="#E5E5E5"> or something</font><font color="#CCCCCC"> then it's</font>

1322
00:47:11,220 --> 00:47:13,680
sending<font color="#CCCCCC"> ad commands</font><font color="#E5E5E5"> at every possible</font>

1323
00:47:12,930 --> 00:47:15,600
baud rate it can

1324
00:47:13,680 --> 00:47:17,850
yeah exactly<font color="#E5E5E5"> so try it tries doing those</font>

1325
00:47:15,600 --> 00:47:18,839
and obviously they all work<font color="#E5E5E5"> because we</font>

1326
00:47:17,850 --> 00:47:20,370
don't<font color="#E5E5E5"> have to care about board rights</font>

1327
00:47:18,840 --> 00:47:21,600
anymore<font color="#CCCCCC"> and quite the same way because</font>

1328
00:47:20,370 --> 00:47:25,440
we're never talking<font color="#E5E5E5"> over a real serial</font>

1329
00:47:21,600 --> 00:47:28,110
link<font color="#E5E5E5"> and I could do I could do it to</font>

1330
00:47:25,440 --> 00:47:34,830
<font color="#E5E5E5">quit down and do sudo</font><font color="#CCCCCC"> screen</font><font color="#E5E5E5"> slash dev</font>

1331
00:47:28,110 --> 00:47:37,410
slash<font color="#CCCCCC"> TTY USB</font><font color="#E5E5E5"> 0 and then if I start</font>

1332
00:47:34,830 --> 00:47:39,299
<font color="#CCCCCC">typing if I type</font><font color="#E5E5E5"> lower case it will just</font>

1333
00:47:37,410 --> 00:47:41,040
respond with the uppercase version and

1334
00:47:39,300 --> 00:47:42,690
<font color="#E5E5E5">that's going out over</font><font color="#CCCCCC"> a fake serial link</font>

1335
00:47:41,040 --> 00:47:46,440
<font color="#E5E5E5">come to a bit of Python</font><font color="#CCCCCC"> code</font><font color="#E5E5E5"> and coming</font>

1336
00:47:42,690 --> 00:47:48,300
back so I hope that<font color="#E5E5E5"> you can see on the</font>

1337
00:47:46,440 --> 00:47:49,590
<font color="#CCCCCC">right hand side</font><font color="#E5E5E5"> I typed it lower case it</font>

1338
00:47:48,300 --> 00:47:51,420
comes<font color="#E5E5E5"> back as upper case because it just</font>

1339
00:47:49,590 --> 00:47:54,290
<font color="#E5E5E5">goes</font><font color="#CCCCCC"> through that function</font><font color="#E5E5E5"> and so now I</font>

1340
00:47:51,420 --> 00:47:59,490
<font color="#E5E5E5">can do that with any anything that the</font>

1341
00:47:54,290 --> 00:48:02,160
any serial device any driver that talks

1342
00:47:59,490 --> 00:48:03,959
<font color="#E5E5E5">to a serial device on a host system I'm</font>

1343
00:48:02,160 --> 00:48:05,940
now able to<font color="#E5E5E5"> have</font><font color="#CCCCCC"> that anything that</font>

1344
00:48:03,960 --> 00:48:08,550
<font color="#E5E5E5">speaks go through that function on</font><font color="#CCCCCC"> my</font>

1345
00:48:05,940 --> 00:48:09,750
attack system<font color="#CCCCCC"> and I can do whatever I</font>

1346
00:48:08,550 --> 00:48:11,160
like with<font color="#E5E5E5"> that I can pretend to be</font><font color="#CCCCCC"> a</font>

1347
00:48:09,750 --> 00:48:13,050
modem I can pretend I'm a real device

1348
00:48:11,160 --> 00:48:14,640
that they want<font color="#E5E5E5"> to talk to I can pretend</font>

1349
00:48:13,050 --> 00:48:16,290
I'm a device that they have a what I

1350
00:48:14,640 --> 00:48:17,700
know is a sketchy driver<font color="#E5E5E5"> for or</font>

1351
00:48:16,290 --> 00:48:19,110
<font color="#E5E5E5">something along those</font><font color="#CCCCCC"> lines like if I</font>

1352
00:48:17,700 --> 00:48:21,509
know<font color="#E5E5E5"> that there's a bad driver that we</font>

1353
00:48:19,110 --> 00:48:23,130
tries to talk serial<font color="#E5E5E5"> I can just pretend</font>

1354
00:48:21,510 --> 00:48:24,600
<font color="#E5E5E5">I'm that device right and extending out</font>

1355
00:48:23,130 --> 00:48:27,960
from serial we can do literally anything

1356
00:48:24,600 --> 00:48:29,549
<font color="#CCCCCC">that USB talks down</font><font color="#E5E5E5"> to we could be</font>

1357
00:48:27,960 --> 00:48:31,440
serial devices we can<font color="#E5E5E5"> be flash drives</font>

1358
00:48:29,550 --> 00:48:33,000
<font color="#E5E5E5">and one of the cool things</font><font color="#CCCCCC"> about</font><font color="#E5E5E5"> USB</font>

1359
00:48:31,440 --> 00:48:34,770
being this transport layer for a lot<font color="#E5E5E5"> of</font>

1360
00:48:33,000 --> 00:48:36,570
other<font color="#E5E5E5"> different</font><font color="#CCCCCC"> things</font><font color="#E5E5E5"> is that we can</font>

1361
00:48:34,770 --> 00:48:38,550
start attacking<font color="#E5E5E5"> scuzzy devices because</font>

1362
00:48:36,570 --> 00:48:40,140
USB Attached scuzzy is a thing<font color="#E5E5E5"> so we</font>

1363
00:48:38,550 --> 00:48:42,330
<font color="#E5E5E5">have you want to attack the</font><font color="#CCCCCC"> system</font>

1364
00:48:40,140 --> 00:48:43,350
<font color="#E5E5E5">scuzzy stack sure you</font><font color="#CCCCCC"> haven't in to do</font>

1365
00:48:42,330 --> 00:48:44,730
<font color="#E5E5E5">that without building a whole nother</font>

1366
00:48:43,350 --> 00:48:46,200
piece of hardware<font color="#CCCCCC"> yeah we emulate</font>

1367
00:48:44,730 --> 00:48:47,569
everything at the transport<font color="#E5E5E5"> level and</font>

1368
00:48:46,200 --> 00:48:50,180
you can<font color="#CCCCCC"> do</font>

1369
00:48:47,569 --> 00:48:51,920
whatever you want<font color="#E5E5E5"> so we can</font><font color="#CCCCCC"> obviously</font>

1370
00:48:50,180 --> 00:48:53,839
emulate devices and we can<font color="#E5E5E5"> behave really</font>

1371
00:48:51,920 --> 00:48:57,019
<font color="#E5E5E5">nicely which we do sometimes I've heard</font>

1372
00:48:53,839 --> 00:48:58,729
<font color="#E5E5E5">but we can also do things that are</font>

1373
00:48:57,019 --> 00:49:02,988
complete violations of the<font color="#E5E5E5"> hosts</font>

1374
00:48:58,729 --> 00:49:04,430
expectations<font color="#E5E5E5"> so here we have a kind of</font>

1375
00:49:02,989 --> 00:49:06,469
fundamental assumption that if I have a

1376
00:49:04,430 --> 00:49:08,419
<font color="#CCCCCC">disk</font><font color="#E5E5E5"> that's just sitting</font><font color="#CCCCCC"> there</font><font color="#E5E5E5"> and I'm</font>

1377
00:49:06,469 --> 00:49:10,999
not doing<font color="#CCCCCC"> any rights to</font><font color="#E5E5E5"> it that its</font>

1378
00:49:08,420 --> 00:49:12,380
contents are<font color="#E5E5E5"> not gonna change</font><font color="#CCCCCC"> so most</font>

1379
00:49:10,999 --> 00:49:14,479
systems assume that this containers

1380
00:49:12,380 --> 00:49:16,160
don't change on this contest<font color="#CCCCCC"> don't</font>

1381
00:49:14,479 --> 00:49:18,169
change on their<font color="#CCCCCC"> own</font><font color="#E5E5E5"> but in practice they</font>

1382
00:49:16,160 --> 00:49:20,359
totally can<font color="#E5E5E5"> and what that means is that</font>

1383
00:49:18,170 --> 00:49:22,579
our<font color="#E5E5E5"> most embedded systems which don't</font>

1384
00:49:20,359 --> 00:49:24,680
have enough<font color="#E5E5E5"> memory</font><font color="#CCCCCC"> to store a whole</font>

1385
00:49:22,579 --> 00:49:26,690
firmware update<font color="#E5E5E5"> but which actually</font><font color="#CCCCCC"> do</font>

1386
00:49:24,680 --> 00:49:28,279
their<font color="#E5E5E5"> firmware updates over USB the way</font>

1387
00:49:26,690 --> 00:49:29,690
they do that<font color="#E5E5E5"> they read the whole</font>

1388
00:49:28,279 --> 00:49:31,999
firmware back check to make sure<font color="#E5E5E5"> that</font>

1389
00:49:29,690 --> 00:49:34,039
all the<font color="#E5E5E5"> signatures pass say</font><font color="#CCCCCC"> okay</font><font color="#E5E5E5"> I'm</font>

1390
00:49:31,999 --> 00:49:36,259
<font color="#E5E5E5">gonna continue this looks good and then</font>

1391
00:49:34,039 --> 00:49:38,420
after they've done that they reread<font color="#CCCCCC"> it</font>

1392
00:49:36,259 --> 00:49:40,190
from the disk<font color="#E5E5E5"> and</font><font color="#CCCCCC"> flash it to ROM most</font>

1393
00:49:38,420 --> 00:49:42,349
you<font color="#CCCCCC"> probably can</font><font color="#E5E5E5"> early</font><font color="#CCCCCC"> see the problem</font>

1394
00:49:40,190 --> 00:49:44,479
if<font color="#E5E5E5"> we</font><font color="#CCCCCC"> have complete</font><font color="#E5E5E5"> control over the USB</font>

1395
00:49:42,349 --> 00:49:47,029
device<font color="#E5E5E5"> because now it's trivial for us</font>

1396
00:49:44,479 --> 00:49:48,649
to do<font color="#E5E5E5"> things like take that device</font>

1397
00:49:47,029 --> 00:49:50,569
provide the correct<font color="#CCCCCC"> firmware the first</font>

1398
00:49:48,650 --> 00:49:53,630
time and then provide our modified

1399
00:49:50,569 --> 00:49:54,529
firmware of the<font color="#E5E5E5"> second time and if you</font>

1400
00:49:53,630 --> 00:49:57,680
want to go the next<font color="#CCCCCC"> slide</font><font color="#E5E5E5"> before</font><font color="#CCCCCC"> we do</font>

1401
00:49:54,529 --> 00:49:59,900
the demo we have<font color="#CCCCCC"> some great tweets over</font>

1402
00:49:57,680 --> 00:50:01,399
here<font color="#E5E5E5"> so it turns out this this attack</font>

1403
00:49:59,900 --> 00:50:04,579
<font color="#E5E5E5">works pretty reliably against a full</font>

1404
00:50:01,400 --> 00:50:05,989
<font color="#CCCCCC">size office photocopier but sure was</font><font color="#E5E5E5"> not</font>

1405
00:50:04,579 --> 00:50:08,150
entirely enthusiastic<font color="#E5E5E5"> about us bringing</font>

1406
00:50:05,989 --> 00:50:09,469
<font color="#E5E5E5">one to a field especially we didn't</font>

1407
00:50:08,150 --> 00:50:10,930
really<font color="#E5E5E5"> have time to get it here and we</font>

1408
00:50:09,469 --> 00:50:13,190
had even<font color="#E5E5E5"> less of a plan to get it away</font>

1409
00:50:10,930 --> 00:50:16,609
<font color="#CCCCCC">although it was</font><font color="#E5E5E5"> not super happy</font><font color="#CCCCCC"> about</font><font color="#E5E5E5"> me</font>

1410
00:50:13,190 --> 00:50:17,749
vaporizing it so yeah exactly<font color="#CCCCCC"> so so it</font>

1411
00:50:16,609 --> 00:50:19,279
turns out<font color="#CCCCCC"> you can't</font><font color="#E5E5E5"> get one of those</font>

1412
00:50:17,749 --> 00:50:21,109
<font color="#E5E5E5">things in your hand luggage on an</font>

1413
00:50:19,279 --> 00:50:22,579
<font color="#E5E5E5">international</font><font color="#CCCCCC"> flight</font><font color="#E5E5E5"> so we're going to</font>

1414
00:50:21,109 --> 00:50:25,969
have to demo this against my laptop in a

1415
00:50:22,579 --> 00:50:27,979
really silly<font color="#E5E5E5"> cheesy silly way instead</font>

1416
00:50:25,969 --> 00:50:29,449
<font color="#E5E5E5">because we couldn't</font><font color="#CCCCCC"> just</font><font color="#E5E5E5"> wheel on a</font>

1417
00:50:27,979 --> 00:50:31,129
giant photocopier<font color="#CCCCCC"> and show</font><font color="#E5E5E5"> that we</font><font color="#CCCCCC"> can</font>

1418
00:50:29,449 --> 00:50:33,349
like do the update<font color="#E5E5E5"> but I promise you it</font>

1419
00:50:31,130 --> 00:50:35,059
<font color="#CCCCCC">does work against a I mean if you</font><font color="#E5E5E5"> think</font>

1420
00:50:33,349 --> 00:50:38,539
<font color="#E5E5E5">of a photocopier brand that's the one</font>

1421
00:50:35,059 --> 00:50:40,430
that it works against yeah yeah<font color="#E5E5E5"> we found</font>

1422
00:50:38,539 --> 00:50:42,019
photo copiers projectors all kinds of

1423
00:50:40,430 --> 00:50:43,669
things<font color="#CCCCCC"> that meet that criteria of not</font>

1424
00:50:42,019 --> 00:50:47,479
having very<font color="#E5E5E5"> much memory totally</font>

1425
00:50:43,670 --> 00:50:50,959
vulnerable<font color="#CCCCCC"> to this</font><font color="#E5E5E5"> wait</font><font color="#CCCCCC"> I have to do the</font>

1426
00:50:47,479 --> 00:50:53,180
thing<font color="#E5E5E5"> it turns out I'm</font><font color="#CCCCCC"> not good at</font>

1427
00:50:50,959 --> 00:50:56,930
computers<font color="#CCCCCC"> so this is just</font><font color="#E5E5E5"> going to take</font>

1428
00:50:53,180 --> 00:50:59,109
me a minute<font color="#CCCCCC"> oh wow</font><font color="#E5E5E5"> right there</font><font color="#CCCCCC"> all right</font>

1429
00:50:56,930 --> 00:51:01,040
<font color="#CCCCCC">all right</font><font color="#E5E5E5"> all</font><font color="#CCCCCC"> right</font>

1430
00:50:59,109 --> 00:51:02,690
<font color="#CCCCCC">okay so what I'm using to draw what I'm</font>

1431
00:51:01,040 --> 00:51:04,970
doing<font color="#E5E5E5"> on the right hand side is I'm</font>

1432
00:51:02,690 --> 00:51:08,090
<font color="#E5E5E5">running the double-double fetch script</font>

1433
00:51:04,970 --> 00:51:09,950
that<font color="#E5E5E5"> does exactly</font><font color="#CCCCCC"> what</font><font color="#E5E5E5"> we just described</font>

1434
00:51:08,090 --> 00:51:11,420
<font color="#E5E5E5">we give it two files it serves up the</font>

1435
00:51:09,950 --> 00:51:13,339
<font color="#E5E5E5">first one on</font><font color="#CCCCCC"> the</font><font color="#E5E5E5"> first read</font><font color="#CCCCCC"> and then all</font>

1436
00:51:11,420 --> 00:51:15,200
subsequent reads<font color="#E5E5E5"> it serves up</font><font color="#CCCCCC"> the second</font>

1437
00:51:13,340 --> 00:51:16,490
<font color="#CCCCCC">one what I've</font><font color="#E5E5E5"> done up here</font><font color="#CCCCCC"> on the top</font>

1438
00:51:15,200 --> 00:51:18,740
<font color="#CCCCCC">left is I've just disabled my disk</font>

1439
00:51:16,490 --> 00:51:20,839
caching<font color="#CCCCCC"> but it's</font><font color="#E5E5E5"> okay</font><font color="#CCCCCC"> I</font><font color="#E5E5E5"> have to run that</font>

1440
00:51:18,740 --> 00:51:27,979
again between<font color="#E5E5E5"> the two them</font><font color="#CCCCCC"> oh yeah</font>

1441
00:51:20,840 --> 00:51:30,380
<font color="#E5E5E5">thanks yeah</font><font color="#CCCCCC"> so I run it once to do to do</font>

1442
00:51:27,980 --> 00:51:32,390
<font color="#CCCCCC">let me</font><font color="#E5E5E5"> have a USB Drive Linux is saying</font>

1443
00:51:30,380 --> 00:51:35,270
hey let me try<font color="#CCCCCC"> to</font><font color="#E5E5E5"> figure out what you</font>

1444
00:51:32,390 --> 00:51:37,850
<font color="#CCCCCC">are said I can automate</font><font color="#E5E5E5"> and then I'm</font>

1445
00:51:35,270 --> 00:51:45,920
gonna<font color="#E5E5E5"> try and mount it when it when</font><font color="#CCCCCC"> it</font>

1446
00:51:37,850 --> 00:51:47,930
finally<font color="#E5E5E5"> gets there this is also a great</font>

1447
00:51:45,920 --> 00:51:49,190
way<font color="#CCCCCC"> to figure</font><font color="#E5E5E5"> out</font><font color="#CCCCCC"> who you are talking to</font>

1448
00:51:47,930 --> 00:51:50,480
<font color="#E5E5E5">in terms of operating system because</font>

1449
00:51:49,190 --> 00:51:51,760
<font color="#E5E5E5">each of the operating systems does a</font>

1450
00:51:50,480 --> 00:51:54,260
different<font color="#CCCCCC"> thing when you plug a disk in</font>

1451
00:51:51,760 --> 00:51:55,880
Linux if you have the user<font color="#CCCCCC"> lens stack</font>

1452
00:51:54,260 --> 00:51:58,190
set up for auto mounting<font color="#E5E5E5"> for example if</font>

1453
00:51:55,880 --> 00:51:59,750
you're<font color="#CCCCCC"> using</font><font color="#E5E5E5"> most of</font><font color="#CCCCCC"> the</font><font color="#E5E5E5"> desktop window</font>

1454
00:51:58,190 --> 00:52:01,310
managers actually<font color="#E5E5E5"> goes and reads a whole</font>

1455
00:51:59,750 --> 00:52:02,450
bunch of sectors right off the disk<font color="#E5E5E5"> in</font>

1456
00:52:01,310 --> 00:52:04,820
order<font color="#CCCCCC"> to try</font><font color="#E5E5E5"> to figure</font><font color="#CCCCCC"> out what file</font>

1457
00:52:02,450 --> 00:52:06,830
systems on there so here<font color="#E5E5E5"> I've been</font>

1458
00:52:04,820 --> 00:52:08,359
looking at things that take USB flash

1459
00:52:06,830 --> 00:52:10,640
drives<font color="#E5E5E5"> and say hey this thing's got a</font>

1460
00:52:08,359 --> 00:52:12,410
custom USB<font color="#E5E5E5"> stack because I don't</font>

1461
00:52:10,640 --> 00:52:17,690
recognize any of the access patterns in

1462
00:52:12,410 --> 00:52:22,569
the disk<font color="#E5E5E5"> so we look the file the first</font>

1463
00:52:17,690 --> 00:52:22,570
time it's<font color="#E5E5E5"> the second</font>

1464
00:52:22,670 --> 00:52:28,580
I mean given<font color="#CCCCCC"> the round of applause I</font>

1465
00:52:27,260 --> 00:52:30,950
assume everyone understands<font color="#CCCCCC"> what just</font>

1466
00:52:28,580 --> 00:52:32,420
happened<font color="#E5E5E5"> but I was</font><font color="#CCCCCC"> able to calculate the</font>

1467
00:52:30,950 --> 00:52:34,460
checksum<font color="#E5E5E5"> of the files the</font><font color="#CCCCCC"> same file</font>

1468
00:52:32,420 --> 00:52:35,660
twice<font color="#CCCCCC"> I</font><font color="#E5E5E5"> 'mentally on this</font><font color="#CCCCCC"> system I had</font>

1469
00:52:34,460 --> 00:52:37,490
to drop my<font color="#CCCCCC"> disk</font><font color="#E5E5E5"> caches in between</font>

1470
00:52:35,660 --> 00:52:39,259
<font color="#E5E5E5">because it's it's a nice little</font>

1471
00:52:37,490 --> 00:52:41,390
complicated system<font color="#E5E5E5"> that's not the case</font>

1472
00:52:39,260 --> 00:52:44,000
obviously with with things like embedded

1473
00:52:41,390 --> 00:52:45,080
<font color="#E5E5E5">devices because like the whole point is</font>

1474
00:52:44,000 --> 00:52:47,300
<font color="#CCCCCC">that they don't</font><font color="#E5E5E5"> have enough</font><font color="#CCCCCC"> memory to</font>

1475
00:52:45,080 --> 00:52:48,140
<font color="#E5E5E5">cache this thing</font><font color="#CCCCCC"> and so that's why</font>

1476
00:52:47,300 --> 00:52:50,090
they're reading it twice

1477
00:52:48,140 --> 00:52:52,730
he won't<font color="#E5E5E5"> jump to a proxy demo yeah</font><font color="#CCCCCC"> edge</font>

1478
00:52:50,090 --> 00:52:58,370
<font color="#CCCCCC">1 just</font><font color="#E5E5E5"> goes straight for</font><font color="#CCCCCC"> ok there and</font>

1479
00:52:52,730 --> 00:53:01,400
time so the next thing we can<font color="#E5E5E5"> do which</font>

1480
00:52:58,370 --> 00:53:02,839
is<font color="#CCCCCC"> really cool is proxy USB</font><font color="#E5E5E5"> commands</font>

1481
00:53:01,400 --> 00:53:04,310
through our face to<font color="#E5E5E5"> answer interface</font>

1482
00:53:02,840 --> 00:53:06,260
which means you can<font color="#E5E5E5"> plug a USB device</font>

1483
00:53:04,310 --> 00:53:08,360
into<font color="#E5E5E5"> the host and have the face sensor</font>

1484
00:53:06,260 --> 00:53:10,220
<font color="#E5E5E5">act like a proxy for</font><font color="#CCCCCC"> that same device</font>

1485
00:53:08,360 --> 00:53:11,540
<font color="#E5E5E5">exactly the same thing you do on most</font>

1486
00:53:10,220 --> 00:53:13,279
network connections where once you have

1487
00:53:11,540 --> 00:53:15,350
<font color="#E5E5E5">that proxy in place you can do really</font>

1488
00:53:13,280 --> 00:53:17,960
nasty things<font color="#E5E5E5"> except there's no such</font>

1489
00:53:15,350 --> 00:53:20,210
thing as a certificate<font color="#E5E5E5"> validating the</font>

1490
00:53:17,960 --> 00:53:21,700
USB device<font color="#E5E5E5"> that trust boundary is just</font>

1491
00:53:20,210 --> 00:53:24,080
out here<font color="#E5E5E5"> in the middle of</font><font color="#CCCCCC"> nowhere and</font>

1492
00:53:21,700 --> 00:53:25,580
<font color="#E5E5E5">you know you can entirely can emulate</font>

1493
00:53:24,080 --> 00:53:27,230
these devices do whatever you want<font color="#E5E5E5"> if</font>

1494
00:53:25,580 --> 00:53:30,350
you<font color="#CCCCCC"> don't</font><font color="#E5E5E5"> want to have to write a full</font>

1495
00:53:27,230 --> 00:53:31,880
emulation layer for a disk in<font color="#CCCCCC"> order to</font>

1496
00:53:30,350 --> 00:53:33,860
be able<font color="#CCCCCC"> to</font><font color="#E5E5E5"> change the data you can write</font>

1497
00:53:31,880 --> 00:53:36,470
a<font color="#E5E5E5"> really simple filter driver that sits</font>

1498
00:53:33,860 --> 00:53:38,210
in line<font color="#E5E5E5"> waits until it sees a</font><font color="#CCCCCC"> certain</font>

1499
00:53:36,470 --> 00:53:40,459
data packet modifies just that packet

1500
00:53:38,210 --> 00:53:42,740
and continues so so what<font color="#E5E5E5"> we're gonna do</font>

1501
00:53:40,460 --> 00:53:44,240
now is<font color="#E5E5E5"> I have</font><font color="#CCCCCC"> a hacker</font><font color="#E5E5E5"> F hooked up as</font>

1502
00:53:42,740 --> 00:53:45,799
you can see on the left hand side that's

1503
00:53:44,240 --> 00:53:47,120
<font color="#E5E5E5">the information about the hacker F I'm</font>

1504
00:53:45,800 --> 00:53:48,950
not going to attach any more devices I

1505
00:53:47,120 --> 00:53:50,930
don't have a second hacker<font color="#E5E5E5"> F up here I'm</font>

1506
00:53:48,950 --> 00:53:51,919
going<font color="#E5E5E5"> to run the faced onto a USB proxy</font>

1507
00:53:50,930 --> 00:53:55,100
I give it

1508
00:53:51,920 --> 00:53:57,080
hacker<font color="#E5E5E5"> FS USB identifier so he knows to</font>

1509
00:53:55,100 --> 00:53:58,130
pick it up it<font color="#E5E5E5"> just talks to evaru LS USB</font>

1510
00:53:57,080 --> 00:54:00,259
it doesn't need a driver for it doesn't

1511
00:53:58,130 --> 00:54:03,460
<font color="#E5E5E5">need to let me know what do I say</font><font color="#CCCCCC"> else</font>

1512
00:54:00,260 --> 00:54:06,380
<font color="#CCCCCC">queues be same thing</font><font color="#E5E5E5"> it doesn't have to</font>

1513
00:54:03,460 --> 00:54:08,600
care about<font color="#CCCCCC"> a driver for it</font><font color="#E5E5E5"> or anything</font>

1514
00:54:06,380 --> 00:54:10,820
like<font color="#E5E5E5"> that it can use</font><font color="#CCCCCC"> lib USB</font><font color="#E5E5E5"> to</font>

1515
00:54:08,600 --> 00:54:14,029
generically talk to the<font color="#E5E5E5"> endpoints and</font>

1516
00:54:10,820 --> 00:54:15,980
and then proxy them through through

1517
00:54:14,030 --> 00:54:17,510
great<font color="#CCCCCC"> fare here and using</font><font color="#E5E5E5"> face</font><font color="#CCCCCC"> to</font><font color="#E5E5E5"> answer</font>

1518
00:54:15,980 --> 00:54:20,120
and generate those<font color="#E5E5E5"> endpoints at the</font>

1519
00:54:17,510 --> 00:54:22,160
other end<font color="#CCCCCC"> so I</font><font color="#E5E5E5"> should return</font><font color="#CCCCCC"> the right</font>

1520
00:54:20,120 --> 00:54:25,339
window<font color="#E5E5E5"> so it's going to do that the</font>

1521
00:54:22,160 --> 00:54:27,440
<font color="#E5E5E5">enumeration has hopefully happened</font><font color="#CCCCCC"> you</font>

1522
00:54:25,340 --> 00:54:29,450
can<font color="#E5E5E5"> ignore</font><font color="#CCCCCC"> messages as they fail</font><font color="#E5E5E5"> nothing</font>

1523
00:54:27,440 --> 00:54:30,680
has actually<font color="#E5E5E5"> failed we just that's our</font>

1524
00:54:29,450 --> 00:54:33,020
note to ourselves that we want to<font color="#E5E5E5"> do</font>

1525
00:54:30,680 --> 00:54:35,149
<font color="#E5E5E5">something there later hood but in now I</font>

1526
00:54:33,020 --> 00:54:36,440
should see the instead of<font color="#E5E5E5"> just having</font>

1527
00:54:35,150 --> 00:54:38,030
<font color="#CCCCCC">one hacker effort</font>

1528
00:54:36,440 --> 00:54:40,250
my sister<font color="#E5E5E5"> my my system should think it</font>

1529
00:54:38,030 --> 00:54:41,900
has to have slipped<font color="#E5E5E5"> up</font><font color="#CCCCCC"> and you'll notice</font>

1530
00:54:40,250 --> 00:54:43,520
that does the<font color="#E5E5E5"> other thing is you'll</font>

1531
00:54:41,900 --> 00:54:45,950
<font color="#CCCCCC">notice that I</font><font color="#E5E5E5"> was able</font><font color="#CCCCCC"> to on the fly</font>

1532
00:54:43,520 --> 00:54:54,829
<font color="#CCCCCC">change the firmware revision</font><font color="#E5E5E5"> to still</font>

1533
00:54:45,950 --> 00:54:56,359
<font color="#CCCCCC">hack her off</font><font color="#E5E5E5"> anyway that</font><font color="#CCCCCC"> demos exclusive</font>

1534
00:54:54,829 --> 00:54:59,780
<font color="#CCCCCC">view</font><font color="#E5E5E5"> because I wrote it took a lot this</font>

1535
00:54:56,359 --> 00:55:02,990
morning<font color="#CCCCCC"> but</font><font color="#E5E5E5"> you'll see the wow I'm in</font>

1536
00:54:59,780 --> 00:55:03,800
<font color="#E5E5E5">completely wrong file yeah I'm a</font>

1537
00:55:02,990 --> 00:55:06,290
professional

1538
00:55:03,800 --> 00:55:08,060
it's<font color="#CCCCCC"> alright</font><font color="#E5E5E5"> you see this is this is a</font>

1539
00:55:06,290 --> 00:55:10,490
filter this is the filter that<font color="#CCCCCC"> makes</font>

1540
00:55:08,060 --> 00:55:14,349
<font color="#E5E5E5">that change happen and all it does is</font>

1541
00:55:10,490 --> 00:55:17,750
have a string encodes it to utf-8 and

1542
00:55:14,349 --> 00:55:19,640
then puts<font color="#CCCCCC"> that back</font><font color="#E5E5E5"> into the packet so</font>

1543
00:55:17,750 --> 00:55:20,630
it takes a packet<font color="#E5E5E5"> that</font><font color="#CCCCCC"> is either a</font>

1544
00:55:19,640 --> 00:55:24,078
vendor request to get the firmware

1545
00:55:20,630 --> 00:55:25,069
<font color="#E5E5E5">revision and takes the data from</font><font color="#CCCCCC"> it</font>

1546
00:55:24,079 --> 00:55:28,640
<font color="#E5E5E5">throws it</font><font color="#CCCCCC"> away</font>

1547
00:55:25,069 --> 00:55:31,130
and then puts the the<font color="#CCCCCC"> new data in there</font>

1548
00:55:28,640 --> 00:55:32,810
instead<font color="#CCCCCC"> so</font><font color="#E5E5E5"> where that allows</font><font color="#CCCCCC"> us</font><font color="#E5E5E5"> to</font>

1549
00:55:31,130 --> 00:55:37,579
modify<font color="#CCCCCC"> things on the fly it's also going</font>

1550
00:55:32,810 --> 00:55:39,560
to<font color="#E5E5E5"> allow us</font><font color="#CCCCCC"> to do</font><font color="#E5E5E5"> yeah I'm gonna skip</font>

1551
00:55:37,579 --> 00:55:43,250
over a couple<font color="#E5E5E5"> really</font><font color="#CCCCCC"> sorry we're gonna</font>

1552
00:55:39,560 --> 00:55:44,839
<font color="#E5E5E5">have to skip over</font><font color="#CCCCCC"> scanlines demo but</font>

1553
00:55:43,250 --> 00:55:46,700
we'll<font color="#CCCCCC"> show it off at</font><font color="#E5E5E5"> work</font><font color="#CCCCCC"> I will shut</font>

1554
00:55:44,839 --> 00:55:48,190
off<font color="#E5E5E5"> a</font><font color="#CCCCCC"> torque on and we'll also</font><font color="#E5E5E5"> show</font>

1555
00:55:46,700 --> 00:55:51,379
anyone<font color="#CCCCCC"> outside in the field afterwards</font>

1556
00:55:48,190 --> 00:55:52,819
<font color="#E5E5E5">just to clarify USB proxy lets us access</font>

1557
00:55:51,380 --> 00:55:54,380
<font color="#CCCCCC">the</font><font color="#E5E5E5"> dates are on the</font><font color="#CCCCCC"> Flies so we can</font>

1558
00:55:52,819 --> 00:55:56,420
lock that<font color="#E5E5E5"> data you can do things like</font>

1559
00:55:54,380 --> 00:55:58,310
log<font color="#E5E5E5"> to pcap</font><font color="#CCCCCC"> i could pull</font><font color="#E5E5E5"> up wireshark</font>

1560
00:55:56,420 --> 00:56:00,530
now as we're<font color="#CCCCCC"> enumerated</font><font color="#E5E5E5"> this device and</font>

1561
00:55:58,310 --> 00:56:02,420
I could have my<font color="#CCCCCC"> target window</font><font color="#E5E5E5"> system</font>

1562
00:56:00,530 --> 00:56:04,910
with a completely closed source driver

1563
00:56:02,420 --> 00:56:07,069
that<font color="#E5E5E5"> I can't access and I can have that</font>

1564
00:56:04,910 --> 00:56:09,470
USB<font color="#E5E5E5"> device plugged into my machine and I</font>

1565
00:56:07,069 --> 00:56:11,000
can proxy<font color="#E5E5E5"> that traffic through my laptop</font>

1566
00:56:09,470 --> 00:56:13,669
<font color="#E5E5E5">at which point I can</font><font color="#CCCCCC"> just use the USB</font>

1567
00:56:11,000 --> 00:56:15,440
Mon<font color="#E5E5E5"> that already exists on Linux to get</font>

1568
00:56:13,670 --> 00:56:17,089
those packets in Wireshark<font color="#CCCCCC"> and go and</font>

1569
00:56:15,440 --> 00:56:18,710
reverse engineer<font color="#CCCCCC"> that driver</font><font color="#E5E5E5"> and the</font>

1570
00:56:17,089 --> 00:56:20,210
really cool<font color="#CCCCCC"> thing about that</font><font color="#E5E5E5"> is unlike</font>

1571
00:56:18,710 --> 00:56:22,160
most the software solutions that do

1572
00:56:20,210 --> 00:56:25,040
<font color="#CCCCCC">similar things you do</font><font color="#E5E5E5"> not need to</font>

1573
00:56:22,160 --> 00:56:26,390
control the USB host<font color="#E5E5E5"> so you can</font><font color="#CCCCCC"> Zak so</font>

1574
00:56:25,040 --> 00:56:28,160
unlike something<font color="#E5E5E5"> that works as a kernel</font>

1575
00:56:26,390 --> 00:56:30,379
<font color="#CCCCCC">module</font><font color="#E5E5E5"> we can</font><font color="#CCCCCC"> actually plug one</font><font color="#E5E5E5"> of our</font>

1576
00:56:28,160 --> 00:56:31,609
ends into<font color="#E5E5E5"> a Playstation plug the flash</font>

1577
00:56:30,380 --> 00:56:33,079
drive into<font color="#E5E5E5"> the other end and then be</font>

1578
00:56:31,609 --> 00:56:34,400
monitoring<font color="#E5E5E5"> the communications that that</font>

1579
00:56:33,079 --> 00:56:36,050
flash drive<font color="#E5E5E5"> communicates with a</font>

1580
00:56:34,400 --> 00:56:37,520
<font color="#CCCCCC">Playstation</font><font color="#E5E5E5"> which is something you</font>

1581
00:56:36,050 --> 00:56:38,900
wouldn't be able<font color="#E5E5E5"> to do just by right</font>

1582
00:56:37,520 --> 00:56:40,160
manipulating things<font color="#E5E5E5"> on the links</font><font color="#CCCCCC"> cool</font>

1583
00:56:38,900 --> 00:56:41,510
things that<font color="#CCCCCC"> I know this code</font><font color="#E5E5E5"> has been</font>

1584
00:56:40,160 --> 00:56:42,790
<font color="#E5E5E5">previously used</font><font color="#CCCCCC"> for the old version of</font>

1585
00:56:41,510 --> 00:56:44,930
<font color="#E5E5E5">USB proxy has been used for</font>

1586
00:56:42,790 --> 00:56:46,160
point-of-sale systems<font color="#E5E5E5"> somewhere in the</font>

1587
00:56:44,930 --> 00:56:47,480
world there's a regulator<font color="#CCCCCC"> requirement</font>

1588
00:56:46,160 --> 00:56:49,160
something to do with USB<font color="#E5E5E5"> device hooked</font>

1589
00:56:47,480 --> 00:56:51,230
<font color="#CCCCCC">out to point</font><font color="#E5E5E5"> cell systems and someone</font>

1590
00:56:49,160 --> 00:56:53,990
emails me about it once a month

1591
00:56:51,230 --> 00:56:55,789
and and and what they<font color="#CCCCCC"> wants</font><font color="#E5E5E5"> to do is is</font>

1592
00:56:53,990 --> 00:56:58,430
perform this<font color="#E5E5E5"> attack on a</font><font color="#CCCCCC"> point-of-sale</font>

1593
00:56:55,789 --> 00:57:01,279
<font color="#CCCCCC">between a point-of-sale system and the</font>

1594
00:56:58,430 --> 00:57:02,538
receipt printer<font color="#CCCCCC"> and</font><font color="#E5E5E5"> then the other three</font>

1595
00:57:01,279 --> 00:57:05,660
times I know it's been used have been

1596
00:57:02,539 --> 00:57:09,799
<font color="#E5E5E5">reverse engineering</font><font color="#CCCCCC"> game console</font>

1597
00:57:05,660 --> 00:57:14,390
controllers for the<font color="#CCCCCC"> Wii U for the</font>

1598
00:57:09,799 --> 00:57:16,609
PlayStation<font color="#CCCCCC"> 3 and for the Xbox 360 and</font>

1599
00:57:14,390 --> 00:57:19,250
in fact<font color="#E5E5E5"> for Xbox 360</font><font color="#CCCCCC"> we went further</font>

1600
00:57:16,609 --> 00:57:20,869
than than just<font color="#E5E5E5"> reverse engineering and</font>

1601
00:57:19,250 --> 00:57:22,339
and kind<font color="#E5E5E5"> of dumping that information and</font>

1602
00:57:20,869 --> 00:57:24,339
we were<font color="#CCCCCC"> able to inject things so we made</font>

1603
00:57:22,339 --> 00:57:27,078
a<font color="#CCCCCC"> little device that when you hit a</font>

1604
00:57:24,339 --> 00:57:28,940
little<font color="#E5E5E5"> button</font><font color="#CCCCCC"> on it it would inject a</font>

1605
00:57:27,079 --> 00:57:30,440
series of key presses<font color="#E5E5E5"> so you could do</font>

1606
00:57:28,940 --> 00:57:32,170
some<font color="#E5E5E5"> kind of Power Move in whatever game</font>

1607
00:57:30,440 --> 00:57:35,480
<font color="#E5E5E5">you're playing as long</font><font color="#CCCCCC"> as you have a</font>

1608
00:57:32,170 --> 00:57:37,220
device<font color="#E5E5E5"> in line between you and the you</font>

1609
00:57:35,480 --> 00:57:38,569
<font color="#E5E5E5">and the other ends and this enabled a</font>

1610
00:57:37,220 --> 00:57:40,939
friend of mine to<font color="#CCCCCC"> cheat games while</font>

1611
00:57:38,569 --> 00:57:42,170
playing<font color="#E5E5E5"> with his friends</font><font color="#CCCCCC"> and so like</font>

1612
00:57:40,940 --> 00:57:46,849
that's<font color="#E5E5E5"> really where this project</font><font color="#CCCCCC"> comes</font>

1613
00:57:42,170 --> 00:57:48,289
from just<font color="#E5E5E5"> so yeah so the things that</font><font color="#CCCCCC"> are</font>

1614
00:57:46,849 --> 00:57:50,079
coming<font color="#CCCCCC"> up we need to</font><font color="#E5E5E5"> get it work on the</font>

1615
00:57:48,289 --> 00:57:53,990
<font color="#E5E5E5">radio badge we need to get it working on</font>

1616
00:57:50,079 --> 00:57:54,500
systems<font color="#CCCCCC"> that have an embedded Linux</font>

1617
00:57:53,990 --> 00:57:55,758
distribution

1618
00:57:54,500 --> 00:57:58,700
<font color="#E5E5E5">yeah links</font><font color="#CCCCCC"> deficient with embedded</font>

1619
00:57:55,759 --> 00:58:00,589
device controller<font color="#CCCCCC"> oh make yeah my</font>

1620
00:57:58,700 --> 00:58:02,660
printer has a host port on a device port

1621
00:58:00,589 --> 00:58:05,269
so I'm<font color="#E5E5E5"> pretty certain I could use my</font>

1622
00:58:02,660 --> 00:58:07,578
printer as a<font color="#CCCCCC"> race dancer</font><font color="#E5E5E5"> so you were</font>

1623
00:58:05,269 --> 00:58:08,598
<font color="#CCCCCC">just one printer exploit away from you</font>

1624
00:58:07,579 --> 00:58:11,019
take<font color="#E5E5E5"> over the</font><font color="#CCCCCC"> linux kernel on your</font>

1625
00:58:08,599 --> 00:58:13,220
printer it could be a faced answer<font color="#CCCCCC"> to a</font>

1626
00:58:11,019 --> 00:58:14,629
<font color="#E5E5E5">nicely because I've already</font><font color="#CCCCCC"> got a</font><font color="#E5E5E5"> great</font>

1627
00:58:13,220 --> 00:58:16,129
fair I can fuzz my printer to try and

1628
00:58:14,630 --> 00:58:17,569
find<font color="#E5E5E5"> that exploit to turn it into our</font>

1629
00:58:16,130 --> 00:58:18,859
<font color="#E5E5E5">first answer to</font><font color="#CCCCCC"> follow fuzz on the</font><font color="#E5E5E5"> price</font>

1630
00:58:17,569 --> 00:58:21,259
if you get a<font color="#CCCCCC"> faced</font><font color="#E5E5E5"> answer you can get</font>

1631
00:58:18,859 --> 00:58:24,380
<font color="#E5E5E5">right answer so yeah it's easy to get</font>

1632
00:58:21,259 --> 00:58:25,640
root once you've got root so we want to

1633
00:58:24,380 --> 00:58:27,109
look at power delivery especially<font color="#E5E5E5"> over</font>

1634
00:58:25,640 --> 00:58:28,220
USB see there's a lot more power

1635
00:58:27,109 --> 00:58:30,230
available<font color="#CCCCCC"> there and</font><font color="#E5E5E5"> you can do some</font>

1636
00:58:28,220 --> 00:58:31,819
<font color="#E5E5E5">pretty nasty famous</font><font color="#CCCCCC"> memory</font><font color="#E5E5E5"> protocol</font><font color="#CCCCCC"> is a</font>

1637
00:58:30,230 --> 00:58:33,799
whole new frontier<font color="#CCCCCC"> for</font><font color="#E5E5E5"> USB there's</font>

1638
00:58:31,819 --> 00:58:35,329
actually some reasonably complex parsing

1639
00:58:33,799 --> 00:58:38,269
<font color="#E5E5E5">that is done yet to</font><font color="#CCCCCC"> enumerate</font><font color="#E5E5E5"> power</font>

1640
00:58:35,329 --> 00:58:39,619
delivery<font color="#CCCCCC"> yeah</font><font color="#E5E5E5"> - I suppose and then I</font>

1641
00:58:38,269 --> 00:58:42,049
think<font color="#E5E5E5"> one of the coolest things</font><font color="#CCCCCC"> that</font>

1642
00:58:39,619 --> 00:58:44,990
<font color="#E5E5E5">there but if you search that has been</font>

1643
00:58:42,049 --> 00:58:47,000
done with<font color="#CCCCCC"> faced answer technologies is</font>

1644
00:58:44,990 --> 00:58:50,058
<font color="#CCCCCC">Michael</font><font color="#E5E5E5"> Scott's face</font><font color="#CCCCCC"> whisperer</font>

1645
00:58:47,000 --> 00:58:51,769
which was a she built a derivative board

1646
00:58:50,059 --> 00:58:53,329
based off the original<font color="#E5E5E5"> face dancer that</font>

1647
00:58:51,769 --> 00:58:56,390
<font color="#E5E5E5">was actually capable of repeatedly</font>

1648
00:58:53,329 --> 00:58:58,369
requesting a numeration<font color="#E5E5E5"> from various</font>

1649
00:58:56,390 --> 00:59:00,710
devices as she glitched their VCC and

1650
00:58:58,369 --> 00:59:02,299
because<font color="#E5E5E5"> that null termination issue we</font>

1651
00:59:00,710 --> 00:59:03,019
were talking<font color="#E5E5E5"> about earlier one of</font><font color="#CCCCCC"> the</font>

1652
00:59:02,299 --> 00:59:04,170
things that would<font color="#E5E5E5"> happen if she</font>

1653
00:59:03,019 --> 00:59:06,089
interrupted the DMA just

1654
00:59:04,170 --> 00:59:07,859
right time is that the controller would

1655
00:59:06,089 --> 00:59:09,359
actually say oh I'm<font color="#E5E5E5"> not supposed</font><font color="#CCCCCC"> to stop</font>

1656
00:59:07,859 --> 00:59:09,750
now let me just<font color="#E5E5E5"> keep reading memory</font>

1657
00:59:09,359 --> 00:59:11,819
forever

1658
00:59:09,750 --> 00:59:13,200
and so the DMA would continue past the

1659
00:59:11,819 --> 00:59:14,700
descriptor<font color="#E5E5E5"> which is usually what's being</font>

1660
00:59:13,200 --> 00:59:16,500
transferred<font color="#E5E5E5"> on to</font><font color="#CCCCCC"> the rest of the</font>

1661
00:59:14,700 --> 00:59:18,390
firmware<font color="#E5E5E5"> and so she was able to</font>

1662
00:59:16,500 --> 00:59:20,069
basically<font color="#CCCCCC"> and because he was</font><font color="#E5E5E5"> bezel</font>

1663
00:59:18,390 --> 00:59:21,509
terminated it never ends<font color="#E5E5E5"> she was able to</font>

1664
00:59:20,069 --> 00:59:23,480
extract<font color="#CCCCCC"> the firmware</font><font color="#E5E5E5"> from a variety of</font>

1665
00:59:21,510 --> 00:59:26,190
USB<font color="#E5E5E5"> devices including a Wacom tablet</font>

1666
00:59:23,480 --> 00:59:28,079
<font color="#CCCCCC">just by sitting there on the USB</font><font color="#E5E5E5"> bus</font>

1667
00:59:26,190 --> 00:59:31,680
controlling enumeration and also power

1668
00:59:28,079 --> 00:59:33,750
glitching she's a video bond that<font color="#E5E5E5"> in</font>

1669
00:59:31,680 --> 00:59:35,549
<font color="#E5E5E5">youtube if you search</font><font color="#CCCCCC"> for I think</font><font color="#E5E5E5"> USB</font>

1670
00:59:33,750 --> 00:59:38,099
glitching<font color="#E5E5E5"> scanline</font><font color="#CCCCCC"> ya come up I think</font>

1671
00:59:35,549 --> 00:59:40,020
<font color="#E5E5E5">that's</font><font color="#CCCCCC"> where</font><font color="#E5E5E5"> so here are the links to</font>

1672
00:59:38,099 --> 00:59:41,430
<font color="#E5E5E5">the project great for experimental is</font>

1673
00:59:40,020 --> 00:59:42,780
just<font color="#E5E5E5"> be is the firmware you require on</font>

1674
00:59:41,430 --> 00:59:45,210
the great fair if you<font color="#E5E5E5"> are lucky enough</font>

1675
00:59:42,780 --> 00:59:47,010
<font color="#E5E5E5">to have</font><font color="#CCCCCC"> one</font><font color="#E5E5E5"> at this stage</font><font color="#CCCCCC"> don't</font><font color="#E5E5E5"> know</font>

1676
00:59:45,210 --> 00:59:49,799
when they're coming<font color="#CCCCCC"> out face tanta</font><font color="#E5E5E5"> as</font>

1677
00:59:47,010 --> 00:59:51,450
the code to<font color="#CCCCCC"> Carmichael this USB stuff</font>

1678
00:59:49,799 --> 00:59:53,940
<font color="#CCCCCC">happened</font><font color="#E5E5E5"> right everything we've done so</font>

1679
00:59:51,450 --> 00:59:55,230
far<font color="#E5E5E5"> is already up on github yeah we've</font>

1680
00:59:53,940 --> 00:59:57,059
released<font color="#E5E5E5"> everything already like months</font>

1681
00:59:55,230 --> 00:59:58,589
ago<font color="#E5E5E5"> or a publicly available I think</font>

1682
00:59:57,059 --> 01:00:00,329
<font color="#CCCCCC">we're about to</font><font color="#E5E5E5"> be thrown</font><font color="#CCCCCC"> off states can</font>

1683
00:59:58,589 --> 01:00:03,089
<font color="#CCCCCC">have enough time but</font><font color="#E5E5E5"> we will absolutely</font>

1684
01:00:00,329 --> 01:00:04,530
take questions<font color="#E5E5E5"> just outside the stage</font>

1685
01:00:03,089 --> 01:00:07,770
afterwards<font color="#E5E5E5"> if there's not time for</font><font color="#CCCCCC"> time</font>

1686
01:00:04,530 --> 01:00:09,569
<font color="#E5E5E5">now</font><font color="#CCCCCC"> yeah</font><font color="#E5E5E5"> indeed there's about</font><font color="#CCCCCC"> one</font><font color="#E5E5E5"> minute</font>

1687
01:00:07,770 --> 01:00:12,480
for questions<font color="#CCCCCC"> perfect very quick</font>

1688
01:00:09,569 --> 01:00:14,880
<font color="#E5E5E5">question</font><font color="#CCCCCC"> to</font><font color="#E5E5E5"> us why might um can I do the</font>

1689
01:00:12,480 --> 01:00:16,380
same<font color="#CCCCCC"> in</font><font color="#E5E5E5"> C instead of using pythons</font><font color="#CCCCCC"> so</font>

1690
01:00:14,880 --> 01:00:18,359
you the original USB proxy<font color="#E5E5E5"> was written</font>

1691
01:00:16,380 --> 01:00:20,490
in C<font color="#E5E5E5"> designed to run and I'm called the</font>

1692
01:00:18,359 --> 01:00:22,680
<font color="#E5E5E5">reason we use Python is because it means</font>

1693
01:00:20,490 --> 01:00:25,078
<font color="#CCCCCC">that I can</font><font color="#E5E5E5"> write it in like</font><font color="#CCCCCC"> three lines</font>

1694
01:00:22,680 --> 01:00:26,669
and not really have<font color="#CCCCCC"> to</font><font color="#E5E5E5"> worry about all</font>

1695
01:00:25,079 --> 01:00:28,170
<font color="#CCCCCC">that other</font><font color="#E5E5E5"> stuff but there's no reason</font>

1696
01:00:26,670 --> 01:00:29,609
<font color="#CCCCCC">you couldn't</font><font color="#E5E5E5"> it's just the original face</font>

1697
01:00:28,170 --> 01:00:31,680
dancer<font color="#E5E5E5"> Cobras in Python and we kept</font>

1698
01:00:29,609 --> 01:00:33,150
<font color="#CCCCCC">going from there right</font><font color="#E5E5E5"> so two of our</font>

1699
01:00:31,680 --> 01:00:35,910
goals are that<font color="#E5E5E5"> we want</font><font color="#CCCCCC"> to be able</font><font color="#E5E5E5"> to do</font>

1700
01:00:33,150 --> 01:00:36,930
us be hacking really quickly this<font color="#CCCCCC"> is</font>

1701
01:00:35,910 --> 01:00:37,799
more of a prototyping thing than

1702
01:00:36,930 --> 01:00:40,589
something<font color="#CCCCCC"> you</font><font color="#E5E5E5"> would actually build a</font>

1703
01:00:37,799 --> 01:00:42,599
product off of so<font color="#CCCCCC"> python</font><font color="#E5E5E5"> really great</font>

1704
01:00:40,589 --> 01:00:44,009
for developing quick code and<font color="#E5E5E5"> to its</font>

1705
01:00:42,599 --> 01:00:45,480
<font color="#CCCCCC">multi-platform a lot more easily</font><font color="#E5E5E5"> than</font><font color="#CCCCCC"> c</font>

1706
01:00:44,010 --> 01:00:47,369
is so a lot of<font color="#E5E5E5"> our users don't want to</font>

1707
01:00:45,480 --> 01:00:48,720
be bothered<font color="#E5E5E5"> compiling things right but</font>

1708
01:00:47,369 --> 01:00:49,920
<font color="#E5E5E5">you can absolutely that it would be</font>

1709
01:00:48,720 --> 01:00:51,779
feasible<font color="#E5E5E5"> to write these things and see</font>

1710
01:00:49,920 --> 01:00:54,089
if you want<font color="#E5E5E5"> to</font><font color="#CCCCCC"> because there's</font><font color="#E5E5E5"> no reason</font>

1711
01:00:51,780 --> 01:00:55,530
<font color="#CCCCCC">you can't</font><font color="#E5E5E5"> reimplementation</font><font color="#CCCCCC"> c because</font>

1712
01:00:54,089 --> 01:00:57,029
it's all you<font color="#E5E5E5"> can talk to the USB</font><font color="#CCCCCC"> device</font>

1713
01:00:55,530 --> 01:00:58,559
and<font color="#CCCCCC"> you can look at that</font><font color="#E5E5E5"> api which is in</font>

1714
01:00:57,030 --> 01:01:00,660
the face dancer code and we implement

1715
01:00:58,559 --> 01:01:01,829
and see if you'd like all<font color="#E5E5E5"> right we'll</font>

1716
01:01:00,660 --> 01:01:03,299
take other questions outside<font color="#E5E5E5"> if there</font>

1717
01:01:01,829 --> 01:01:06,830
are any and thank you<font color="#E5E5E5"> very much for</font>

1718
01:01:03,299 --> 01:01:15,300
being patient<font color="#CCCCCC"> q that goes the fashion</font>

1719
01:01:06,830 --> 01:01:15,299
[Applause]

1720
01:01:15,750 --> 01:01:27,910
[Music]

