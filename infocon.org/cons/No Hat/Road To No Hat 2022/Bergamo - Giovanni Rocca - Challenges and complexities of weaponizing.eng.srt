1
00:00:16,140 --> 00:00:20,520
well then hello gone

2
00:00:20,520 --> 00:00:23,200
so the subject title of my

3
00:00:23,200 --> 00:00:24,630
talk is

4
00:00:24,630 --> 00:00:29,490
wayne icing of the tip ipad android so

5
00:00:29,490 --> 00:00:33,900
how did you take advantage of t buy to

6
00:00:33,900 --> 00:00:36,550
get a bad restricted on

7
00:00:36,550 --> 00:00:37,710
android

8
00:00:37,710 --> 00:00:40,839
just the slides here I introduce myself I

9
00:00:40,839 --> 00:00:44,170
have been an android developer for about ten

10
00:00:44,170 --> 00:00:45,030
years

11
00:00:45,030 --> 00:00:48,629
since  about five years i focused

12
00:00:48,629 --> 00:00:51,629
on android and linux security

13
00:00:51,629 --> 00:00:54,280
with a background mostly in

14
00:00:54,280 --> 00:00:57,210
reverse engineering cracking i

15
00:00:57,210 --> 00:01:02,430
'm iso 90 on kitab and twitter

16
00:01:02,680 --> 00:01:04,239
so tell you pipe i

17
00:01:04,239 --> 00:01:09,190
guess we already know about the bug so

18
00:01:09,190 --> 00:01:12,759
it's a fairly recent bank it

19
00:01:12,759 --> 00:01:14,649
's a bug in the kernel of  linux which

20
00:01:14,649 --> 00:01:17,440
essentially allows you to write to

21
00:01:17,440 --> 00:01:19,840
file read only to malfunction of the page

22
00:01:19,840 --> 00:01:22,320
boundaries

23
00:01:23,289 --> 00:01:26,030
nothing this is the tld areas then I put

24
00:01:26,030 --> 00:01:27,770
the link for those interested to

25
00:01:27,770 --> 00:01:29,829
go and see in detail because

26
00:01:29,829 --> 00:01:34,569
precisely the cause of this bathroom

27
00:01:34,569 --> 00:01:37,509
so on

28
00:01:37,509 --> 00:01:40,219
ubuntu for example I use it  first

29
00:01:40,219 --> 00:01:42,319
question i asked myself of course how can i

30
00:01:42,319 --> 00:01:45,229
exploit this bug to get

31
00:01:45,229 --> 00:01:46,429
all coming to the point from  a background

32
00:01:46,429 --> 00:01:48,170
of cracking the first thing I thought

33
00:01:48,170 --> 00:01:50,719
is just putting maybe two notes on the

34
00:01:50,719 --> 00:01:52,569
track about the

35
00:01:52,569 --> 00:01:55,549
game is done while two hours after the

36
00:01:55,549 --> 00:01:57,679
disclosure a guy accused open

37
00:01:57,679 --> 00:02:00,439
source instead an even

38
00:02:00,439 --> 00:02:02,239
simpler way that allows you to say that

39
00:02:02,239 --> 00:02:05,450
basically it is sinning meals with  a

40
00:02:05,450 --> 00:02:07,429
root password with left the

41
00:02:07,429 --> 00:02:08,989
root password are invented at the

42
00:02:08,989 --> 00:02:11,530
moment and then

43
00:02:11,709 --> 00:02:14,620
abuse to take root privileges

44
00:02:14,620 --> 00:02:17,390
while on android the question is a bit more

45
00:02:17,390 --> 00:02:19,760
complex because there are not there is no

46
00:02:19,760 --> 00:02:21,590
su binary there are no su groups

47
00:02:21,590 --> 00:02:25,760
having to cs linux  enabled by default cs

48
00:02:25,760 --> 00:02:30,819
com is samsung checkbox and

49
00:02:30,819 --> 00:02:33,560
for this exploit sometimes they didn't

50
00:02:33,560 --> 00:02:35,389
particularly annoy the boxes in the second

51
00:02:35,389 --> 00:02:41,859
knox but selinus obviously yes so

52
00:02:42,220 --> 00:02:44,959
to make a summary let's say that all the

53
00:02:44,959 --> 00:02:46,910
processes on android including the most

54
00:02:46,910 --> 00:02:49,459
privileged ones therefore which run with which

55
00:02:49,459 --> 00:02:52,489
are printed which  they have that they are bluets from the

56
00:02:52,489 --> 00:02:54,859
customer however we can say that they

57
00:02:54,859 --> 00:02:58,639
are LEDs they appeared from

58
00:02:58,639 --> 00:03:01,370
selinus that that does not allow practical  to

59
00:03:01,370 --> 00:03:02,870
do nothing or in any case the bare

60
00:03:02,870 --> 00:03:04,870
essentials the process

61
00:03:04,870 --> 00:03:07,069
that the process needs to do

62
00:03:07,069 --> 00:03:09,310
therefore to those permissions

63
00:03:09,310 --> 00:03:12,950
therefore I started writing this

64
00:03:12,950 --> 00:03:14,829
explore from

65
00:03:14,829 --> 00:03:17,359
giulio therefore I asked myself some

66
00:03:17,359 --> 00:03:19,370
questions about the best in the field

67
00:03:19,370 --> 00:03:20,959
explication so I asked myself some

68
00:03:20,959 --> 00:03:22,940
questions  and I gave myself some answers

69
00:03:22,940 --> 00:03:25,519
which then led me to get

70
00:03:25,519 --> 00:03:28,190
what I wanted so I started

71
00:03:28,190 --> 00:03:30,790
my journey aware of the fact that

72
00:03:30,790 --> 00:03:33,380
I had a bug it could write to

73
00:03:33,380 --> 00:03:35,530
any system binary it

74
00:03:35,530 --> 00:03:38,180
could write any

75
00:03:38,180 --> 00:03:41,329
system preference and any system memo library

76
00:03:41,329 --> 00:03:42,680


77
00:03:42,680 --> 00:03:45,079
the changes made in the

78
00:03:45,079 --> 00:03:47,180
system libraries for optimization reasons

79
00:03:47,180 --> 00:03:50,000
are reflected in memory therefore the

80
00:03:50,000 --> 00:03:51,889
shared libraries loaded by the processes

81
00:03:51,889 --> 00:03:53,720
and rotated for

82
00:03:53,720 --> 00:03:56,959
optimization reasons if I write uncertain

83
00:03:56,959 --> 00:03:58,430
pedophiles inside it is reflected in

84
00:03:58,430 --> 00:03:59,620
memory

85
00:03:59,620 --> 00:04:02,150
therefore the questions that I asked

86
00:04:02,150 --> 00:04:04,269
myself are mainly  three and

87
00:04:04,269 --> 00:04:07,600
therefore considering that

88
00:04:07,600 --> 00:04:10,250
also qu  the process will be sam boxed

89
00:04:10,250 --> 00:04:12,200
which is the one with more privilege and

90
00:04:12,200 --> 00:04:15,230
capabilities i can take on android and

91
00:04:15,230 --> 00:04:18,500
then if only actually forced to

92
00:04:18,500 --> 00:04:20,149
have kernel bright rieter to

93
00:04:20,149 --> 00:04:23,750
prompt me a shell and if i'm forced

94
00:04:23,750 --> 00:04:26,510
to use another bug to get

95
00:04:26,510 --> 00:04:29,330
to have retail in the kernel or  if

96
00:04:29,330 --> 00:04:31,430
I had a way writing to a file

97
00:04:31,430 --> 00:04:33,020
would trigger areas a memory

98
00:04:33,020 --> 00:04:35,180
corruption inside the kernel which of

99
00:04:35,180 --> 00:04:37,550
course would have precluded

100
00:04:37,550 --> 00:04:41,270
the kernel binding a file of the s which never

101
00:04:41,270 --> 00:04:44,240
seems to me scrolling the for example there

102
00:04:44,240 --> 00:04:46,310
are files for example of the integer in

103
00:04:46,310 --> 00:04:48,680
its own  fs which constantly comes the

104
00:04:48,680 --> 00:04:51,070
alternates

105
00:04:51,110 --> 00:04:52,520
so these are the three questions I asked

106
00:04:52,520 --> 00:04:54,650
myself and the answers to these three

107
00:04:54,650 --> 00:04:57,320
questions are in it in the case of the first

108
00:04:57,320 --> 00:04:58,640
question so what is the

109
00:04:58,640 --> 00:05:00,290
most privileged process we can take is in

110
00:05:00,290 --> 00:05:01,520
it

111
00:05:01,520 --> 00:05:03,530
obviously being the first process  which

112
00:05:03,530 --> 00:05:05,660
is churned out by the kernel when

113
00:05:05,660 --> 00:05:08,390
the s starts is what I see it is clearly a

114
00:05:08,390 --> 00:05:10,190
les caprices then to start

115
00:05:10,190 --> 00:05:11,180
everything else

116
00:05:11,180 --> 00:05:13,280
ment  re balances zygote if our

117
00:05:13,280 --> 00:05:15,350
goal is not to get a

118
00:05:15,350 --> 00:05:17,390
rotated shell but we want to notify the punk

119
00:05:17,390 --> 00:05:19,340
for example interacting with

120
00:05:19,340 --> 00:05:20,800
applications or

121
00:05:20,800 --> 00:05:22,400
accessing application data

122
00:05:22,400 --> 00:05:25,250
etc etc etc in it doesn't have these

123
00:05:25,250 --> 00:05:27,700
privileges so can't do it

124
00:05:27,700 --> 00:05:30,830
to the answer to the second question is  no

125
00:05:30,830 --> 00:05:32,480
we don't need meat read write

126
00:05:32,480 --> 00:05:34,550
to play a choice obviously because

127
00:05:34,550 --> 00:05:37,340
we just need to take a rooted process but

128
00:05:37,340 --> 00:05:39,350
at that point we passed by itself

129
00:05:39,350 --> 00:05:40,720
linux

130
00:05:40,720 --> 00:05:44,840
the capabilities are those that are

131
00:05:44,840 --> 00:05:46,509
necessary the strictly necessary

132
00:05:46,509 --> 00:05:48,979
and the answer to the third question is no

133
00:05:48,979 --> 00:05:50,660
here too  we don't need

134
00:05:50,660 --> 00:05:53,000
another bug for this case i have to

135
00:05:53,000 --> 00:05:55,069
thank this guy ago 30

136
00:05:55,069 --> 00:05:56,569
he was the first one to post a

137
00:05:56,569 --> 00:05:57,400
video

138
00:05:57,400 --> 00:06:00,110
demonstrating ex point for android he did

139
00:06:00,110 --> 00:06:01,660
n't admit

140
00:06:01,660 --> 00:06:04,069
little i know nothing i counted m team

141
00:06:04,069 --> 00:06:05,680
i asked him

142
00:06:05,680 --> 00:06:07,750
one I asked him about the guidelines

143
00:06:07,750 --> 00:06:09,669
he was really kind

144
00:06:09,669 --> 00:06:12,820
he helped me reason to arrive

145
00:06:12,820 --> 00:06:15,240
at the solution by myself and see you  we will show after

146
00:06:15,240 --> 00:06:19,449
the action a few slides later so he linked me to

147
00:06:19,449 --> 00:06:21,490
a blog of real projects from

148
00:06:21,490 --> 00:06:23,350
about a year ago that made me understand

149
00:06:23,350 --> 00:06:27,300
how to get to the kernel from in it

150
00:06:27,300 --> 00:06:29,800
so first of all I wanted to do a

151
00:06:29,800 --> 00:06:31,750
little abstract of what linux is

152
00:06:31,750 --> 00:06:33,009
before  get to the part a bit about

153
00:06:33,009 --> 00:06:33,990
what

154
00:06:33,990 --> 00:06:36,789
now don't look at this textual I'll

155
00:06:36,789 --> 00:06:39,550
try to veil a brief summary of what it

156
00:06:39,550 --> 00:06:42,099
is therefore substantially a

157
00:06:42,099 --> 00:06:44,699
mechanism written inside the kernel which

158
00:06:44,699 --> 00:06:47,229
through a file reads a file that has

159
00:06:47,229 --> 00:06:49,120
policies inside these policies

160
00:06:49,120 --> 00:06:51,520
are  defined all the contexts and

161
00:06:51,520 --> 00:06:53,199
what that context can do

162
00:06:53,199 --> 00:06:55,930
against another context ok so

163
00:06:55,930 --> 00:06:58,780
if that context can't do

164
00:06:58,780 --> 00:07:01,180
it can't read it can't execute it can't

165
00:07:01,180 --> 00:07:03,880
do operations in another context

166
00:07:03,880 --> 00:07:06,240
the carnet blocks it and

167
00:07:06,240 --> 00:07:09,669
therefore I put an example a  example

168
00:07:09,669 --> 00:07:10,830
below

169
00:07:10,830 --> 00:07:14,770
that I will now try to tell you about

170
00:07:14,770 --> 00:07:16,510
android if we want to have a shell

171
00:07:16,510 --> 00:07:18,220
we are developers we want to have a

172
00:07:18,220 --> 00:07:20,520
shell on android we use adb shell

173
00:07:20,520 --> 00:07:23,620
when when you enter  amo in adb shell we

174
00:07:23,620 --> 00:07:25,030
have our nice

175
00:07:25,030 --> 00:07:26,800
shell context and now let's imagine that we want to

176
00:07:26,800 --> 00:07:30,760
open a binary inside system in a

177
00:07:30,760 --> 00:07:32,410
very small binary in this case the

178
00:07:32,410 --> 00:07:34,840
binary what it does just reads

179
00:07:34,840 --> 00:07:36,010
another file so we can say that in

180
00:07:36,010 --> 00:07:37,930
that binary there is a cap  of a file

181
00:07:37,930 --> 00:07:40,900
in the ex picardo now under the kernel

182
00:07:40,900 --> 00:07:43,830
when I want to do slash

183
00:07:43,830 --> 00:07:47,310
systems in test been

184
00:07:47,310 --> 00:07:50,820
check that my shell context can

185
00:07:50,820 --> 00:07:55,060
read execute and transit on the

186
00:07:55,060 --> 00:07:57,300
context of the binary I'm executing

187
00:07:57,300 --> 00:07:59,770
if one of these if I can't do

188
00:07:59,770 --> 00:08:02,200
the only  true operations site blocked

189
00:08:02,200 --> 00:08:04,300
and moreover after seeing that our binary

190
00:08:04,300 --> 00:08:06,370
will go to read a paper file in them

191
00:08:06,370 --> 00:08:09,220
which will have another context it will in

192
00:08:09,220 --> 00:08:12,060
turn be checked with the context

193
00:08:12,060 --> 00:08:15,520
so I close the example by saying precisely

194
00:08:15,520 --> 00:08:20,110
that a ruxelles on android if venice

195
00:08:20,110 --> 00:08:22,930
enabled  it has basically no

196
00:08:22,930 --> 00:08:25,099
nod we may not even be able to read

197
00:08:25,099 --> 00:08:27,639
in certain folders for example

198
00:08:27,639 --> 00:08:29,960
so this is how you check a

199
00:08:29,960 --> 00:08:32,328
selinux free context  file this is

200
00:08:32,328 --> 00:08:35,360
an ls minus lz and the one circled in

201
00:08:35,360 --> 00:08:37,490
red is the selinux context of these

202
00:08:37,490 --> 00:08:39,529
files which is not always the same obviously

203
00:08:39,529 --> 00:08:41,599
in the folders can can the

204
00:08:41,599 --> 00:08:43,250
binary whistles where i'm hot of these are

205
00:08:43,250 --> 00:08:46,570
the latest binaries both

206
00:08:46,570 --> 00:08:50,060
have different contexts while if i want to

207
00:08:50,060 --> 00:08:51,950
access  to the selinux context of my

208
00:08:51,950 --> 00:08:53,540
process all the information is

209
00:08:53,540 --> 00:08:55,880
contained in brussels done or

210
00:08:55,880 --> 00:08:57,950
rock pid other and if we want to see

211
00:08:57,950 --> 00:08:59,690
that of another process

212
00:08:59,690 --> 00:09:01,760
we have current which gives us our our

213
00:09:01,760 --> 00:09:04,579
selinux context in which we are therefore

214
00:09:04,579 --> 00:09:06,890
wars chosen I said before

215
00:09:06,890 --> 00:09:09,019
or  the preview context we had

216
00:09:09,019 --> 00:09:11,180
before being prompted or the

217
00:09:11,180 --> 00:09:13,660
execution context

218
00:09:13,660 --> 00:09:17,060
ethical southgate and florence in short these are

219
00:09:17,060 --> 00:09:19,660
then you want to browse they

220
00:09:19,660 --> 00:09:22,010
are used by the kernel to manage

221
00:09:22,010 --> 00:09:24,070
another type of operation

222
00:09:24,070 --> 00:09:27,910
now these three these three screenshots

223
00:09:27,910 --> 00:09:31,160
seem a bit confusing but don't

224
00:09:31,160 --> 00:09:32,660
worry  because in this case I didn't

225
00:09:32,660 --> 00:09:34,610
want you I don't want you to

226
00:09:34,610 --> 00:09:37,399
read this all this pro  prio of

227
00:09:37,399 --> 00:09:39,920
text in reality the fundamental parts

228
00:09:39,920 --> 00:09:42,620
are how we read these policies

229
00:09:42,620 --> 00:09:46,360
so where is the thumbs file

230
00:09:46,449 --> 00:09:50,390
that is inside this system yes fs

231
00:09:50,390 --> 00:09:53,209
selinux policy and how we search inside

232
00:09:53,209 --> 00:09:54,320
the policies how we see if

233
00:09:54,320 --> 00:09:56,260
actually a context can do things

234
00:09:56,260 --> 00:09:58,279
against another  context

235
00:09:58,279 --> 00:10:01,310
through yes search therefore the

236
00:10:01,310 --> 00:10:03,110
poles state the wine policies which as

237
00:10:03,110 --> 00:10:05,630
you can see are many are in

238
00:10:05,630 --> 00:10:07,100
alphabetical order and these in the screenshot

239
00:10:07,100 --> 00:10:10,250
are only y and z therefore ethically do

240
00:10:10,250 --> 00:10:12,199
many things while below they

241
00:10:12,199 --> 00:10:14,690
took one a little more bad luck a little

242
00:10:14,690 --> 00:10:18,100
more like yes  says a little more limited

243
00:10:18,100 --> 00:10:21,800
that this whiskey is wifi who Sardinian stores

244
00:10:21,800 --> 00:10:23,839
server in this case he only has on

245
00:10:23,839 --> 00:10:26,209
this in this context can only do

246
00:10:26,209 --> 00:10:28,640
two things basically can do

247
00:10:28,640 --> 00:10:31,610
transfer been there in who has context

248
00:10:31,610 --> 00:10:35,420
to the strong supplicant wifi and can do a

249
00:10:35,420 --> 00:10:38,300
lot of  things pretty much everything about

250
00:10:38,300 --> 00:10:41,170
files that are in fs time

251
00:10:41,170 --> 00:10:43,880
in this case as you see earlier

252
00:10:43,880 --> 00:10:45,560
I told you that when our

253
00:10:45,560 --> 00:10:47,720
test binary runs  leverage go to law sorry

254
00:10:47,720 --> 00:10:49,430
when we wanted to play our

255
00:10:49,430 --> 00:10:51,769
test binary they must have read

256
00:10:51,769 --> 00:10:52,640
write

257
00:10:52,640 --> 00:10:56,019
sorry reed execute and trans actor

258
00:10:56,019 --> 00:10:58,130
so we can see that here

259
00:10:58,130 --> 00:11:01,100
we reed we put cures and that

260
00:11:01,100 --> 00:11:03,380
we also transit

261
00:11:03,380 --> 00:11:04,710
somewhere yes i go

262
00:11:04,710 --> 00:11:06,380
[Music]

263
00:11:06,380 --> 00:11:08,510
ok no  there is because this can be done in the

264
00:11:08,510 --> 00:11:10,670
future trans this in this case he

265
00:11:10,670 --> 00:11:12,950
can do run without passing through the

266
00:11:12,950 --> 00:11:15,220
context

267
00:11:16,970 --> 00:11:18,260
now we come to the slightly

268
00:11:18,260 --> 00:11:22,640
juicier part therefore the steps to exploit

269
00:11:22,640 --> 00:11:25,120
this bug on android the first step

270
00:11:25,120 --> 00:11:26,770
obviously is to

271
00:11:26,770 --> 00:11:29,030
understand which libraries are

272
00:11:29,030 --> 00:11:31,130
usain so where to go to write the

273
00:11:31,130 --> 00:11:33,770
first part of our tried then

274
00:11:33,770 --> 00:11:35,870
abuse dirt bike to write the

275
00:11:35,870 --> 00:11:37,990
first part

276
00:11:37,990 --> 00:11:40,370
find an unused library to

277
00:11:40,370 --> 00:11:42,410
write the second piece of schalke

278
00:11:42,410 --> 00:11:43,480
od because

279
00:11:43,480 --> 00:11:46,400
obviously if we go to piss a

280
00:11:46,400 --> 00:11:47,930
library

281
00:11:47,930 --> 00:11:49,490
we have very limited space so

282
00:11:49,490 --> 00:11:51,770
at that point we need something

283
00:11:51,770 --> 00:11:53,830
unused to have more space

284
00:11:53,830 --> 00:11:57,200
to be able to write the schakle at the end

285
00:11:57,200 --> 00:11:59,180
get  and kernel read write

286
00:11:59,180 --> 00:12:01,760
for pilares and linux or alternatively I

287
00:12:01,760 --> 00:12:05,030
wrote die like heroes because in

288
00:12:05,030 --> 00:12:07,880
this case if we didn't have a way

289
00:12:07,880 --> 00:12:09,940
to get carneade the drive anyway

290
00:12:09,940 --> 00:12:12,380
we could do the same things but we would have to

291
00:12:12,380 --> 00:12:14,930
write many shellcodes that jump in

292
00:12:14,930 --> 00:12:16,130
many different contexts for  every

293
00:12:16,130 --> 00:12:18,770
operation that we have to do so it is a

294
00:12:18,770 --> 00:12:21,680
much more complex and cumbersome

295
00:12:21,680 --> 00:12:24,890
so I repeat of course we are proud you

296
00:12:24,890 --> 00:12:27,500
can get carlo nights and

297
00:12:27,500 --> 00:12:30,020
the credits for this for this step

298
00:12:30,020 --> 00:12:33,140
only of google project zero

299
00:12:33,140 --> 00:12:37,850
and here is how to do it just like the

300
00:12:37,850 --> 00:12:40,940
upload process to get to

301
00:12:40,940 --> 00:12:43,760
rick wright in kernel then fire 30

302
00:12:43,760 --> 00:12:45,740
was kind enough to tell me that his

303
00:12:45,740 --> 00:12:49,490
method didn't include a

304
00:12:49,490 --> 00:12:51,920
kernel maturation so the only other viable alternative

305
00:12:51,920 --> 00:12:54,410
to get read write in

306
00:12:54,410 --> 00:12:56,120
carnet through loading a

307
00:12:56,120 --> 00:12:58,450
custom module in curling

308
00:12:58,450 --> 00:13:01,700
these contexts in first office  are

309
00:13:01,700 --> 00:13:05,840
those who are able to are selinux

310
00:13:05,840 --> 00:13:07,340
allows executions of

311
00:13:07,340 --> 00:13:09,560
this operation then these go  re

312
00:13:09,560 --> 00:13:10,360
contexts

313
00:13:10,360 --> 00:13:13,370
can download a carnet of the module and

314
00:13:13,370 --> 00:13:16,160
below the disk which of these

315
00:13:16,160 --> 00:13:20,060
contexts in it can abuse to jump

316
00:13:20,060 --> 00:13:21,430
into it

317
00:13:21,430 --> 00:13:26,200
in this case vendor mood prof

318
00:13:26,200 --> 00:13:28,840
is our target I spent some time

319
00:13:28,840 --> 00:13:30,160
and some erfurt also trying to

320
00:13:30,160 --> 00:13:32,770
pass  from you haven't been which is

321
00:13:32,770 --> 00:13:34,660
another very interesting process

322
00:13:34,660 --> 00:13:37,110
only then for a matter of time and

323
00:13:37,110 --> 00:13:39,730
in short I had already skipped a few nights it

324
00:13:39,730 --> 00:13:42,460
had become complicated I took

325
00:13:42,460 --> 00:13:45,000
the simplest route

326
00:13:45,400 --> 00:13:47,350
so back to the internships to the internships

327
00:13:47,350 --> 00:13:49,800
sorry del delle street

328
00:13:49,800 --> 00:13:53,020
we abuse  we abuse certain pipes to get

329
00:13:53,020 --> 00:13:56,140
it from in it within

330
00:13:56,140 --> 00:13:58,780
enit we still abuse the of the bug to

331
00:13:58,780 --> 00:14:01,660
write stage 2 and to write the

332
00:14:01,660 --> 00:14:04,210
car module in the cast all

333
00:14:04,210 --> 00:14:05,830
we must necessarily use the neet inside

334
00:14:05,830 --> 00:14:07,660
because from our app

335
00:14:07,660 --> 00:14:09,430
we start from a  space with our

336
00:14:09,430 --> 00:14:11,080
expedition chain we can't

337
00:14:11,080 --> 00:14:12,820
read inside vendor book inside

338
00:14:12,820 --> 00:14:15,940
vendor lib the only is the only place where

339
00:14:15,940 --> 00:14:18,190
we can write our our

340
00:14:18,190 --> 00:14:20,790
kernel module p  ercause if you see here

341
00:14:20,790 --> 00:14:25,020
this rule tells the vendor mood prof

342
00:14:25,020 --> 00:14:28,030
vendor file system or blog so it

343
00:14:28,030 --> 00:14:30,160
means that they sell motoclub can make

344
00:14:30,160 --> 00:14:32,830
sure the load inside the context inside

345
00:14:32,830 --> 00:14:35,170
files that have the context I sell file

346
00:14:35,170 --> 00:14:36,580
so necessarily it must be

347
00:14:36,580 --> 00:14:38,770
inside free vendor we can not

348
00:14:38,770 --> 00:14:40,150
read  the inside from our app

349
00:14:40,150 --> 00:14:42,340
then we take in it

350
00:14:42,340 --> 00:14:44,230
we use the bug inside you start to write

351
00:14:44,230 --> 00:14:46,720
a module carnelli inside we load

352
00:14:46,720 --> 00:14:49,140
the kernel module

353
00:14:49,140 --> 00:14:51,070
this was 2 and then in three

354
00:14:51,070 --> 00:14:52,240
obviously summarize what I

355
00:14:52,240 --> 00:14:53,950
just read we switch

356
00:14:53,950 --> 00:14:56,170
this context we use the cisco al

357
00:14:56,170 --> 00:14:57,610
feeling module and loading our

358
00:14:57,610 --> 00:14:59,850
profit world

359
00:14:59,850 --> 00:15:03,210
now let's go into detail about these steps

360
00:15:03,210 --> 00:15:06,040
starting from the last from the last step the

361
00:15:06,040 --> 00:15:08,860
trigger because obviously we first

362
00:15:08,860 --> 00:15:10,330
write all the skis to the accounts with the

363
00:15:10,330 --> 00:15:12,850
triggers I call in this case I start from the

364
00:15:12,850 --> 00:15:15,270
trigger because I wanted you to understand

365
00:15:15,270 --> 00:15:18,550
why I think it is  understand better I

366
00:15:18,550 --> 00:15:21,780
don't know if you can read this slide

367
00:15:21,780 --> 00:15:24,010
this this image don't know why  if

368
00:15:24,010 --> 00:15:26,700
they do not bind

369
00:15:27,180 --> 00:15:30,180
then

370
00:15:32,550 --> 00:15:34,589
the wifi manager service is one of those

371
00:15:34,589 --> 00:15:37,260
few services that can still be discarded

372
00:15:37,260 --> 00:15:41,180
and stopped from an application

373
00:15:41,570 --> 00:15:43,980
this is still possible for a few years it

374
00:15:43,980 --> 00:15:46,890
has already been deprecated this will therefore no

375
00:15:46,890 --> 00:15:48,810
longer be possible unless

376
00:15:48,810 --> 00:15:51,360
manually guaranteeing privileges however for  now it is

377
00:15:51,360 --> 00:15:53,130
still possible to start the stop

378
00:15:53,130 --> 00:15:55,829
of the wifi service when

379
00:15:55,829 --> 00:15:58,920
a start of the wifi sport is done under the

380
00:15:58,920 --> 00:16:01,250
neets

381
00:16:01,459 --> 00:16:04,200
practically for battery reasons

382
00:16:04,200 --> 00:16:06,990
obviously the service that

383
00:16:06,990 --> 00:16:08,910
monitors the wifi and does

384
00:16:08,910 --> 00:16:10,490
other operations stops

385
00:16:10,490 --> 00:16:14,640
and when it is stopped  reactivated call this

386
00:16:14,640 --> 00:16:18,269
ex ex ex ex ex art failed to

387
00:16:18,269 --> 00:16:21,750
read it I'm sorry because it can be seen

388
00:16:21,750 --> 00:16:23,029
very well

389
00:16:23,029 --> 00:16:25,490
while here

390
00:16:25,490 --> 00:16:28,500
there is a small piece of code that is

391
00:16:28,500 --> 00:16:30,180
called in cascade and these four

392
00:16:30,180 --> 00:16:33,529
circled in red are calls

393
00:16:33,529 --> 00:16:37,939
exported from INPS and Linux  point only

394
00:16:39,820 --> 00:16:42,870
now one of these calls here cascade

395
00:16:42,870 --> 00:16:46,230
will call if the start and

396
00:16:46,230 --> 00:16:48,430
serene kutcher says caccese below at some

397
00:16:48,430 --> 00:16:50,010
point maybe

398
00:16:50,010 --> 00:16:53,590
348 c  call this nice feature of 50

399
00:16:53,590 --> 00:16:56,500
pics site i don't know why i decided to

400
00:16:56,500 --> 00:16:58,110
look for that

401
00:16:58,110 --> 00:17:00,250
some times i try first time it

402
00:17:00,250 --> 00:17:02,440
works we don't ask questions and so

403
00:17:02,440 --> 00:17:05,670
this is one of those cases

404
00:17:05,869 --> 00:17:07,819
i basically replaced this

405
00:17:07,819 --> 00:17:10,369
collada v50 extusb and replaced it with

406
00:17:10,369 --> 00:17:13,400
sure that 7 in force  on android selinux

407
00:17:13,400 --> 00:17:15,319
forced arriving meat the there is no way

408
00:17:15,319 --> 00:17:18,470
to disable it no s so let's take it for

409
00:17:18,470 --> 00:17:20,599
granted that this security 7 in force

410
00:17:20,599 --> 00:17:22,790
that even if you call it from user space it

411
00:17:22,790 --> 00:17:24,949
does nothing is not used by any other

412
00:17:24,949 --> 00:17:26,390
process so we have a small

413
00:17:26,390 --> 00:17:28,400
space for  write the first shell

414
00:17:28,400 --> 00:17:30,830
hits in there and it's built in there

415
00:17:30,830 --> 00:17:33,920
precisely the first ones the first step of

416
00:17:33,920 --> 00:17:36,070
stage1

417
00:17:36,070 --> 00:17:39,080
which is basically the first

418
00:17:39,080 --> 00:17:40,960
piece of stage1 is to

419
00:17:40,960 --> 00:17:43,309
call the function started

420
00:17:43,309 --> 00:17:46,070
to ensure that everything goes correctly

421
00:17:46,070 --> 00:17:48,440
given for granted that obviously

422
00:17:48,440 --> 00:17:50,090
bear in mind that  that function can

423
00:17:50,090 --> 00:17:51,590
be called at any time by

424
00:17:51,590 --> 00:17:53,420
other processes so not only from in it

425
00:17:53,420 --> 00:17:55,640
but being exported any  si process

426
00:17:55,640 --> 00:17:57,110
can call that function at any time

427
00:17:57,110 --> 00:17:59,690
so what do we do to

428
00:17:59,690 --> 00:18:01,309
not let anything grow we call the

429
00:18:01,309 --> 00:18:02,770
patched function

430
00:18:02,770 --> 00:18:05,960
we check that we are inside it and we

431
00:18:05,960 --> 00:18:08,420
make sure that ours comes

432
00:18:08,420 --> 00:18:09,830
everything that is after is executed

433
00:18:09,830 --> 00:18:12,260
only once so that no  is not

434
00:18:12,260 --> 00:18:14,890
called a thousand times being able to

435
00:18:14,890 --> 00:18:16,880
get in the way while

436
00:18:16,880 --> 00:18:19,730
we are building than usual we are

437
00:18:19,730 --> 00:18:21,650
missing in short, even in the end

438
00:18:21,650 --> 00:18:25,260
we would like to have something clean the device

439
00:18:25,260 --> 00:18:28,690
always just below always in stage 1

440
00:18:28,690 --> 00:18:30,570
what we do for

441
00:18:30,570 --> 00:18:33,250
we call we read the second library in

442
00:18:33,250 --> 00:18:35,320
x64 systems which in  this case is a

443
00:18:35,320 --> 00:18:37,480
library we used a home I

444
00:18:37,480 --> 00:18:39,280
chose the company in proxy also in

445
00:18:39,280 --> 00:18:41,410
this case it works the first time

446
00:18:41,410 --> 00:18:44,500
we ask questions it's ok and we

447
00:18:44,500 --> 00:18:47,800
write the 62 in there it is necessary that the

448
00:18:47,800 --> 00:18:49,120
ue stage is in league systems

449
00:18:49,120 --> 00:18:51,400
because if linux there  allows you to load

450
00:18:51,400 --> 00:18:52,680
into memory

451
00:18:52,680 --> 00:18:56,140
libraries present in 64 systems

452
00:18:56,140 --> 00:18:58,000
so we can make them memory and jump

453
00:18:58,000 --> 00:18:59,320
den  tro

454
00:18:59,320 --> 00:19:00,610
and here is what i am doing

455
00:19:00,610 --> 00:19:02,860
basically in x4 its not seen in

456
00:19:02,860 --> 00:19:04,840
this screenshot there is

457
00:19:04,840 --> 00:19:07,750
the library file descriptor i have opened and i

458
00:19:07,750 --> 00:19:10,300
am mapping it with enza laughing and

459
00:19:10,300 --> 00:19:11,770
facing into it if you remember

460
00:19:11,770 --> 00:19:13,740
at the beginning it said that

461
00:19:13,740 --> 00:19:16,120
we can't using vague we

462
00:19:16,120 --> 00:19:17,530
can't write on page boundaries

463
00:19:17,530 --> 00:19:20,110
so we can't write offset 0 and

464
00:19:20,110 --> 00:19:22,060
we can't write o set forty 96

465
00:19:22,060 --> 00:19:24,100
we can write in between

466
00:19:24,100 --> 00:19:26,500
so here is this atrix of

467
00:19:26,500 --> 00:19:29,080
ring 04 so go to instruction

468
00:19:29,080 --> 00:19:31,750
all 84 a  start reading the

469
00:19:31,750 --> 00:19:31,840
instructions

470
00:19:31,840 --> 00:19:33,840
[Music]

471
00:19:33,840 --> 00:19:36,640
so in state two please also in

472
00:19:36,640 --> 00:19:40,060
this case not to look at the whole

473
00:19:40,060 --> 00:19:42,880
texture but to resume more or less

474
00:19:42,880 --> 00:19:43,990
what I said before there is

475
00:19:43,990 --> 00:19:45,340
nothing other than what I told you

476
00:19:45,340 --> 00:19:47,170
before so  that we have to switch

477
00:19:47,170 --> 00:19:49,030
context areas we have to go to vendor mood

478
00:19:49,030 --> 00:19:50,110
prof

479
00:19:50,110 --> 00:19:51,270
we have

480
00:19:51,270 --> 00:19:54,310
to form the cisco the finit modules

481
00:19:54,310 --> 00:19:56,440
of our meat module that also in

482
00:19:56,440 --> 00:19:58,570
this case we have chosen this

483
00:19:58,570 --> 00:20:01,570
library the ip is  ge fright soft p3 tech

484
00:20:01,570 --> 00:20:03,400
to write us our drop

485
00:20:03,400 --> 00:20:05,470
way that works too the first hit

486
00:20:05,470 --> 00:20:07,060
no one calls it not kashan they kept

487
00:20:07,060 --> 00:20:08,820
well so it

488
00:20:08,820 --> 00:20:11,560
is basically once loaded

489
00:20:11,560 --> 00:20:13,540
our case of the ways simply in the

490
00:20:13,540 --> 00:20:14,890
carnet the module four lines that

491
00:20:14,890 --> 00:20:18,180
disable selinux end once

492
00:20:18,180 --> 00:20:20,410
launched  the car of the module so

493
00:20:20,410 --> 00:20:22,700
below I'm making see the cisco

494
00:20:22,700 --> 00:20:25,190
ilfilm.it modules just launched and

495
00:20:25,190 --> 00:20:27,710
just run assuming without

496
00:20:27,710 --> 00:20:31,010
any check that it works forco I go out

497
00:20:31,010 --> 00:20:35,230
and pull back the re vercelli

498
00:20:35,919 --> 00:20:39,530
here ok the pc is not on the network but I have a

499
00:20:39,530 --> 00:20:43,610
very short video that shows I'm sorry

500
00:20:43,610 --> 00:20:45,919
but they recorded it with another

501
00:20:45,919 --> 00:20:48,370
phone

502
00:20:49,150 --> 00:20:51,679
I'll tell you about it in the meantime because

503
00:20:51,679 --> 00:20:54,559
you can't see it very well ok in this case

504
00:20:54,559 --> 00:20:56,150
I went inside letting

505
00:20:56,150 --> 00:20:59,990
myself go guetta in force for me to see that the

506
00:20:59,990 --> 00:21:03,280
selinux context is in maybe

507
00:21:05,410 --> 00:21:06,790
[  Music]

508
00:21:06,790 --> 00:21:10,590
miss earth one and hp i play so

509
00:21:10,590 --> 00:21:14,010
this is an android app

510
00:21:15,420 --> 00:21:20,110
comes the armpit alright we are ruth but that's

511
00:21:20,110 --> 00:21:22,420
not what we care  now we

512
00:21:22,420 --> 00:21:24,880
care more than cat and maybe it's

513
00:21:24,880 --> 00:21:28,560
actually been for months

514
00:21:30,960 --> 00:21:34,529
ok but i went i

515
00:21:34,529 --> 00:21:37,169
went kinda fast i think not spent

516
00:21:37,169 --> 00:21:39,770
20 minutes

517
00:21:40,490 --> 00:21:42,289
but

518
00:21:42,289 --> 00:21:45,559
that's it

519
00:21:46,700 --> 00:21:49,910
[Applause]

