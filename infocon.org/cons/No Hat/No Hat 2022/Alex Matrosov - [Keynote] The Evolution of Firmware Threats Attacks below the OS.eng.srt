1
00:00:00,850 --> 00:00:07,310
[Music]

2
00:00:11,000 --> 00:00:13,440
thank you

3
00:00:13,440 --> 00:00:16,199
hello everyone so I'm connecting from

4
00:00:16,199 --> 00:00:18,900
Sunny Los Angeles it's pretty still dark

5
00:00:18,900 --> 00:00:21,600
here it's early early morning it's 5 a.m

6
00:00:21,600 --> 00:00:24,660
but I'm ready to rock the stage hello

7
00:00:24,660 --> 00:00:27,240
everyone so today we will be talking

8
00:00:27,240 --> 00:00:29,340
about the evolution of thermal threats

9
00:00:29,340 --> 00:00:32,040
and attacks below the operating system

10
00:00:32,040 --> 00:00:34,860
so a couple thoughts about me so Marco

11
00:00:34,860 --> 00:00:38,040
thank you for great introduction so I'm

12
00:00:38,040 --> 00:00:42,899
uh founder and CEO of binary so being 20

13
00:00:42,899 --> 00:00:45,600
plus years in the research and break

14
00:00:45,600 --> 00:00:49,200
probably a few times CPUs and also gpus

15
00:00:49,200 --> 00:00:52,079
so dedicating my all free time to the

16
00:00:52,079 --> 00:00:54,840
surfing it's one of the reasons why I

17
00:00:54,840 --> 00:00:57,480
end up in the sunny Los Angeles based in

18
00:00:57,480 --> 00:01:00,780
Santa Monica so all right let's start

19
00:01:00,780 --> 00:01:02,160
with some

20
00:01:02,160 --> 00:01:04,938
introduction what's been in the past and

21
00:01:04,938 --> 00:01:08,159
why uh we have a lot of a lot of

22
00:01:08,159 --> 00:01:10,260
movements right now on the tread

23
00:01:10,260 --> 00:01:12,420
landscape below the operating system

24
00:01:12,420 --> 00:01:14,220
so um

25
00:01:14,220 --> 00:01:17,580
let's look what is going on uh from the

26
00:01:17,580 --> 00:01:18,960
treadbridge park different Evolution

27
00:01:18,960 --> 00:01:22,320
we've been uh always having a low level

28
00:01:22,320 --> 00:01:24,659
and complex threats from the rootkits

29
00:01:24,659 --> 00:01:27,420
perspective then it's been boot kids and

30
00:01:27,420 --> 00:01:30,479
I think uh right now it is a huge huge

31
00:01:30,479 --> 00:01:33,900
movement to bias and firmware implant in

32
00:01:33,900 --> 00:01:36,900
general so and this uh movement

33
00:01:36,900 --> 00:01:40,100
happening because we increasing the

34
00:01:40,100 --> 00:01:43,259
actual number of mitigations on the

35
00:01:43,259 --> 00:01:45,420
operating system level right so it's

36
00:01:45,420 --> 00:01:47,340
getting more and more complex it's more

37
00:01:47,340 --> 00:01:49,380
mitigations which is actually easier to

38
00:01:49,380 --> 00:01:52,020
break from firmware because it's

39
00:01:52,020 --> 00:01:54,180
actually open new opportunities for the

40
00:01:54,180 --> 00:01:56,040
attackers in terms of direct memory

41
00:01:56,040 --> 00:01:58,619
access and many others and this growth

42
00:01:58,619 --> 00:02:01,619
also actually uh showing the direction

43
00:02:01,619 --> 00:02:04,320
uh depends on the type of the attacks

44
00:02:04,320 --> 00:02:06,060
also from the hardware and silicon level

45
00:02:06,060 --> 00:02:10,139
right so basically just for historical

46
00:02:10,139 --> 00:02:12,660
overview like always endpoint solution

47
00:02:12,660 --> 00:02:15,900
has been more about like looking on a

48
00:02:15,900 --> 00:02:18,480
braking system layer right so and

49
00:02:18,480 --> 00:02:21,660
checking what is happening in runtime on

50
00:02:21,660 --> 00:02:24,780
the operating system but uh also of

51
00:02:24,780 --> 00:02:27,300
course the boot kits kind of force the

52
00:02:27,300 --> 00:02:29,160
endpoint solution to look into direction

53
00:02:29,160 --> 00:02:31,739
for boot sectors bootloaders but

54
00:02:31,739 --> 00:02:33,480
hardware and firmware has been kind of

55
00:02:33,480 --> 00:02:36,180
like out of scope right and developing

56
00:02:36,180 --> 00:02:39,060
the solutions for actually be effective

57
00:02:39,060 --> 00:02:41,220
for the firmware and Hardware waste

58
00:02:41,220 --> 00:02:43,080
threats it's very very complicated

59
00:02:43,080 --> 00:02:46,080
specifically if you are an agent on

60
00:02:46,080 --> 00:02:48,420
operating system level right

61
00:02:48,420 --> 00:02:51,060
so and of course like Shifting the

62
00:02:51,060 --> 00:02:55,700
threat model it's kind of like uh

63
00:02:55,700 --> 00:02:58,200
surprising some of the vendors I mean

64
00:02:58,200 --> 00:03:01,860
they are not ready and also uh if you

65
00:03:01,860 --> 00:03:04,200
look from the perspective of the

66
00:03:04,200 --> 00:03:07,260
detection of the threads so this is

67
00:03:07,260 --> 00:03:11,220
screenshot of moonwalk uh sorry uh it is

68
00:03:11,220 --> 00:03:13,140
uh actually

69
00:03:13,140 --> 00:03:15,959
uh another threat which has been

70
00:03:15,959 --> 00:03:19,739
discovered in 2020 and this one is very

71
00:03:19,739 --> 00:03:21,480
very interesting because it's been used

72
00:03:21,480 --> 00:03:23,940
five years old indicator from hiking

73
00:03:23,940 --> 00:03:27,239
teamwork so think about we have a hiking

74
00:03:27,239 --> 00:03:30,239
team implant which has been uh leaked

75
00:03:30,239 --> 00:03:33,780
right so and threat actress like in 2014

76
00:03:33,780 --> 00:03:36,720
right and it's threat actors still using

77
00:03:36,720 --> 00:03:38,760
some of the code from this league and

78
00:03:38,760 --> 00:03:42,920
this has been detected in uh 2000 uh

79
00:03:42,920 --> 00:03:46,680
2020 and basically it's been using uh

80
00:03:46,680 --> 00:03:50,819
the the same indicator of infection uh

81
00:03:50,819 --> 00:03:54,959
with FDA invalent variable thing is like

82
00:03:54,959 --> 00:03:56,640
this one

83
00:03:56,640 --> 00:04:00,060
already been known for actually almost

84
00:04:00,060 --> 00:04:03,200
six years before this new threat appears

85
00:04:03,200 --> 00:04:06,239
how come we are not detecting it right

86
00:04:06,239 --> 00:04:09,000
so how come we don't see this indicator

87
00:04:09,000 --> 00:04:11,519
which is known another one it's Moon

88
00:04:11,519 --> 00:04:13,439
bounds from

89
00:04:13,439 --> 00:04:16,680
uh from the last uh from this year and

90
00:04:16,680 --> 00:04:19,500
uh it's discovered by Kaspersky lab but

91
00:04:19,500 --> 00:04:22,979
basically they said we see this on one

92
00:04:22,979 --> 00:04:26,639
of our clients machine from 2019 but

93
00:04:26,639 --> 00:04:29,759
during the investigation uh by our team

94
00:04:29,759 --> 00:04:31,560
we discovered this is actually nothing

95
00:04:31,560 --> 00:04:34,620
new it is a Chinese kit which has been

96
00:04:34,620 --> 00:04:38,100
used from 2014 for uh low-level

97
00:04:38,100 --> 00:04:41,940
implantation and basically the component

98
00:04:41,940 --> 00:04:44,880
which is being modified uh is being

99
00:04:44,880 --> 00:04:47,040
modified from the platform which is

100
00:04:47,040 --> 00:04:50,400
actually been uh in in the market from

101
00:04:50,400 --> 00:04:54,120
2014 uh May and it's kind of like uh

102
00:04:54,120 --> 00:04:56,580
interesting

103
00:04:56,580 --> 00:04:59,460
interesting perspective because it shows

104
00:04:59,460 --> 00:05:03,540
a very limited way how currently we

105
00:05:03,540 --> 00:05:05,580
detecting the trends but it doesn't mean

106
00:05:05,580 --> 00:05:07,380
they are not exist it's mean we just

107
00:05:07,380 --> 00:05:10,979
don't send them right and let's talk

108
00:05:10,979 --> 00:05:14,759
about more what happening right now why

109
00:05:14,759 --> 00:05:18,120
we don't see them why it's happening in

110
00:05:18,120 --> 00:05:22,320
so in such way which is invisible for uh

111
00:05:22,320 --> 00:05:24,860
for Security Solutions

112
00:05:24,860 --> 00:05:27,600
I wanted to highlight a few uh

113
00:05:27,600 --> 00:05:28,979
interesting issues which has been

114
00:05:28,979 --> 00:05:32,940
recently pledged by Lenovo in

115
00:05:32,940 --> 00:05:35,460
um in September and basically this one

116
00:05:35,460 --> 00:05:38,820
uh is uh very interesting because uh

117
00:05:38,820 --> 00:05:41,100
probably it's one of the first advisors

118
00:05:41,100 --> 00:05:42,900
which is highlighting Windows management

119
00:05:42,900 --> 00:05:46,320
and instrumentation uh uh is my Handler

120
00:05:46,320 --> 00:05:48,539
which has actually been used for C type

121
00:05:48,539 --> 00:05:51,900
in the bias password but uh in 2019

122
00:05:51,900 --> 00:05:53,880
offensive con talk I've been

123
00:05:53,880 --> 00:05:55,740
highlighting like a Windows management

124
00:05:55,740 --> 00:05:57,539
instrumentation it's a huge attack

125
00:05:57,539 --> 00:05:59,280
surface I've been showing some of the

126
00:05:59,280 --> 00:06:01,560
vectors how it can be attacked and

127
00:06:01,560 --> 00:06:04,259
actually as we can see it's my Handler

128
00:06:04,259 --> 00:06:07,340
which is callback function from firmware

129
00:06:07,340 --> 00:06:10,620
it's actually been exposed from Windows

130
00:06:10,620 --> 00:06:12,960
management instrumentation right so

131
00:06:12,960 --> 00:06:14,759
basically we can use visual Basics

132
00:06:14,759 --> 00:06:17,400
crypto actually trigger this my Handler

133
00:06:17,400 --> 00:06:19,860
from the firmware this is like actually

134
00:06:19,860 --> 00:06:22,380
a very interesting way how you can think

135
00:06:22,380 --> 00:06:24,479
about the connection between the

136
00:06:24,479 --> 00:06:26,400
operating system layer and the firmware

137
00:06:26,400 --> 00:06:29,520
from the perspective of uh kind of like

138
00:06:29,520 --> 00:06:32,660
a functionality and how you can

139
00:06:32,660 --> 00:06:35,819
uh opens new attack surfaces

140
00:06:35,819 --> 00:06:39,180
very very interesting Direction and

141
00:06:39,180 --> 00:06:42,360
basically I think it will be will be see

142
00:06:42,360 --> 00:06:44,520
much more about that and of course like

143
00:06:44,520 --> 00:06:46,800
it's not only said password it's a lot

144
00:06:46,800 --> 00:06:49,199
of other things but how you can uh

145
00:06:49,199 --> 00:06:51,060
orchestrate the big Network you can go

146
00:06:51,060 --> 00:06:53,880
and manually as it security go and set

147
00:06:53,880 --> 00:06:55,740
the password for every user if you have

148
00:06:55,740 --> 00:06:58,440
5 000 users in your network right so

149
00:06:58,440 --> 00:07:01,080
basically you need some sort of like a

150
00:07:01,080 --> 00:07:03,660
scalable way how you can do it but at

151
00:07:03,660 --> 00:07:06,360
the same time uh is it if it is related

152
00:07:06,360 --> 00:07:09,080
to security features uh to the firmware

153
00:07:09,080 --> 00:07:12,419
uh of course it's connect uh

154
00:07:12,419 --> 00:07:14,520
functionality from the firmware which

155
00:07:14,520 --> 00:07:16,080
need to be used and called from

156
00:07:16,080 --> 00:07:18,539
operating system layer and it's actually

157
00:07:18,539 --> 00:07:21,599
exposed a lot of uh interesting attack

158
00:07:21,599 --> 00:07:24,720
surfaces uh which is of course can cause

159
00:07:24,720 --> 00:07:26,880
security troubles

160
00:07:26,880 --> 00:07:29,460
security issues another thing it is a

161
00:07:29,460 --> 00:07:31,740
supply chain problem uh we've been

162
00:07:31,740 --> 00:07:34,020
seeing a lot of different

163
00:07:34,020 --> 00:07:37,979
um attacks on device vendors and if you

164
00:07:37,979 --> 00:07:40,139
think about on the Taiwanese vendors

165
00:07:40,139 --> 00:07:43,020
it's been uh constant attacks happening

166
00:07:43,020 --> 00:07:46,080
like it's been also stacked it's been

167
00:07:46,080 --> 00:07:49,740
gigabyte it's been others attacked uh in

168
00:07:49,740 --> 00:07:52,800
the previous few years and also the big

169
00:07:52,800 --> 00:07:58,139
device vendors like Intel AMD Nvidia and

170
00:07:58,139 --> 00:08:00,840
Samsung uh it's publicly known they've

171
00:08:00,840 --> 00:08:04,740
been actually targeted by uh ransomware

172
00:08:04,740 --> 00:08:07,380
or bridge by some uh

173
00:08:07,380 --> 00:08:10,080
some trap actor which is being uh in

174
00:08:10,080 --> 00:08:12,479
their networks but also from the

175
00:08:12,479 --> 00:08:14,520
perspective of the supply chain if you

176
00:08:14,520 --> 00:08:17,220
think about it is kind of complicated

177
00:08:17,220 --> 00:08:19,620
how you can guarantee they are not

178
00:08:19,620 --> 00:08:21,840
inside your firmware they not land at

179
00:08:21,840 --> 00:08:23,340
the back door they've not been on the

180
00:08:23,340 --> 00:08:25,740
server uh build server or like your

181
00:08:25,740 --> 00:08:28,560
source code if they are attack your

182
00:08:28,560 --> 00:08:30,419
network they can also attack one of the

183
00:08:30,419 --> 00:08:33,120
developers and this has caused a lot of

184
00:08:33,120 --> 00:08:36,360
a lot of interesting thoughts because

185
00:08:36,360 --> 00:08:39,979
because it's very complicated when

186
00:08:39,979 --> 00:08:43,380
such trap actors is actually can attack

187
00:08:43,380 --> 00:08:46,160
the Silicon vendors device vendors and

188
00:08:46,160 --> 00:08:48,540
actual uh

189
00:08:48,540 --> 00:08:51,480
third parties which is developing the

190
00:08:51,480 --> 00:08:54,720
firmware for uh for the device vendors

191
00:08:54,720 --> 00:08:57,300
and this happened literally recently

192
00:08:57,300 --> 00:08:59,580
right so just like probably two weeks

193
00:08:59,580 --> 00:09:02,459
ago we all hear about Adler Lake via

194
00:09:02,459 --> 00:09:04,380
source code leaked but it's leaked

195
00:09:04,380 --> 00:09:06,860
because one of uh om device

196
00:09:06,860 --> 00:09:10,339
manufacturers like odm it's been bridged

197
00:09:10,339 --> 00:09:13,500
and actually this one being developing

198
00:09:13,500 --> 00:09:16,440
the code for Lenovo firmers right

199
00:09:16,440 --> 00:09:19,080
and if you look from the perspective of

200
00:09:19,080 --> 00:09:22,080
supply chain we have a lot of parties

201
00:09:22,080 --> 00:09:26,880
involved and if one layer of this party

202
00:09:26,880 --> 00:09:30,060
has been failing and back door so we

203
00:09:30,060 --> 00:09:32,339
have the customers which we are affected

204
00:09:32,339 --> 00:09:35,399
it's single point of failure when it's

205
00:09:35,399 --> 00:09:38,760
basically include too many parties uh

206
00:09:38,760 --> 00:09:40,620
which is developing the crowd developing

207
00:09:40,620 --> 00:09:42,600
the hardware and different components

208
00:09:42,600 --> 00:09:45,060
but it's end up on one

209
00:09:45,060 --> 00:09:48,120
party which is a customer which is the

210
00:09:48,120 --> 00:09:50,459
end user of this device or the firmware

211
00:09:50,459 --> 00:09:53,459
and actually it can cause a lot of

212
00:09:53,459 --> 00:09:55,980
security issues right so I think it's a

213
00:09:55,980 --> 00:09:57,899
lot of good movements happening for

214
00:09:57,899 --> 00:10:00,240
actually protecting the supply chain but

215
00:10:00,240 --> 00:10:04,100
think is uh it is actually

216
00:10:04,100 --> 00:10:07,980
a very complicated problem because uh a

217
00:10:07,980 --> 00:10:10,200
lot of vendors they basically don't

218
00:10:10,200 --> 00:10:12,240
share because of the license or whatever

219
00:10:12,240 --> 00:10:14,339
the source code you have just a binary

220
00:10:14,339 --> 00:10:16,980
how you can trust the sign of the binary

221
00:10:16,980 --> 00:10:19,200
even if you have a s-bomb software bill

222
00:10:19,200 --> 00:10:20,760
of materials which is currently

223
00:10:20,760 --> 00:10:22,980
increasing a lot of contention and it's

224
00:10:22,980 --> 00:10:25,380
very good movement but thing is if you

225
00:10:25,380 --> 00:10:28,320
have uh implanted firmware the s-bomb

226
00:10:28,320 --> 00:10:30,180
will be not show you this dependency

227
00:10:30,180 --> 00:10:32,760
right of course like dependency graphs

228
00:10:32,760 --> 00:10:35,040
it is related to the third-party

229
00:10:35,040 --> 00:10:37,260
components but what if this vertical

230
00:10:37,260 --> 00:10:39,060
third-party company has been modified

231
00:10:39,060 --> 00:10:41,580
maliciously how you can classify and

232
00:10:41,580 --> 00:10:43,680
identify such problems of course as boom

233
00:10:43,680 --> 00:10:45,540
it's not been created for that it is a

234
00:10:45,540 --> 00:10:47,339
dependency graph to identify all the

235
00:10:47,339 --> 00:10:49,079
components which is included in your

236
00:10:49,079 --> 00:10:51,180
firmware or whatever piece of software

237
00:10:51,180 --> 00:10:53,640
right but anyway it's caused some

238
00:10:53,640 --> 00:10:56,579
interesting uh thoughts about like how

239
00:10:56,579 --> 00:10:57,620
we can

240
00:10:57,620 --> 00:11:01,380
detect something which is malicious not

241
00:11:01,380 --> 00:11:04,680
only output out not up to the it or

242
00:11:04,680 --> 00:11:07,320
basically contain some malicious God

243
00:11:07,320 --> 00:11:08,339
right

244
00:11:08,339 --> 00:11:11,339
so another thing like this bridge which

245
00:11:11,339 --> 00:11:12,779
has been happening in this Adler awake

246
00:11:12,779 --> 00:11:15,660
it's League uh the platform key from the

247
00:11:15,660 --> 00:11:18,180
wood guard and it's been a lot of uh

248
00:11:18,180 --> 00:11:21,420
paranoia uh on the Twitter about like

249
00:11:21,420 --> 00:11:24,300
this key is leaked uh most of the

250
00:11:24,300 --> 00:11:27,540
platforms affected from Lenovo and uh

251
00:11:27,540 --> 00:11:30,839
nobody actually did the fact checking

252
00:11:30,839 --> 00:11:33,420
and we did the fact checking we check

253
00:11:33,420 --> 00:11:36,420
most of the platforms which has been in

254
00:11:36,420 --> 00:11:39,720
the field and used by our customers and

255
00:11:39,720 --> 00:11:41,700
not only we checked all the firmware

256
00:11:41,700 --> 00:11:43,500
which is like device line has been

257
00:11:43,500 --> 00:11:47,220
available from Lenovo and unfortunately

258
00:11:47,220 --> 00:11:49,620
we don't find this key that means this

259
00:11:49,620 --> 00:11:51,660
key being not actually on the production

260
00:11:51,660 --> 00:11:54,779
devices most likely uh of course we

261
00:11:54,779 --> 00:11:57,959
don't know for for sure 400 percent but

262
00:11:57,959 --> 00:12:00,839
our intellectual gas is key being leaked

263
00:12:00,839 --> 00:12:03,959
from some development device not actual

264
00:12:03,959 --> 00:12:05,880
device which is shipped to the customers

265
00:12:05,880 --> 00:12:08,279
of course we'll like we'll see maybe

266
00:12:08,279 --> 00:12:10,440
device has been not produced yet or

267
00:12:10,440 --> 00:12:13,019
they've been on production line and

268
00:12:13,019 --> 00:12:15,540
these devices will be seen in the future

269
00:12:15,540 --> 00:12:19,500
with the liquid key but basically to say

270
00:12:19,500 --> 00:12:21,060
about

271
00:12:21,060 --> 00:12:23,519
all the platforms are affected it's

272
00:12:23,519 --> 00:12:25,500
better to make some validation and

273
00:12:25,500 --> 00:12:27,959
checking before blames the vendor they

274
00:12:27,959 --> 00:12:30,480
are actually right

275
00:12:30,480 --> 00:12:34,800
so this is very interesting thing when

276
00:12:34,800 --> 00:12:37,380
we get to the point how we can trust our

277
00:12:37,380 --> 00:12:39,839
devices how we can trust the firmware

278
00:12:39,839 --> 00:12:42,240
which is coming from the vendors and

279
00:12:42,240 --> 00:12:45,120
what we should do for actual validation

280
00:12:45,120 --> 00:12:48,180
of this firmware what we need to think

281
00:12:48,180 --> 00:12:50,899
about our advices and

282
00:12:50,899 --> 00:12:54,120
what the firmers are more secure and

283
00:12:54,120 --> 00:12:56,279
actually how you can guarantee you don't

284
00:12:56,279 --> 00:12:58,440
have implants right as example some of

285
00:12:58,440 --> 00:13:00,480
the devices came by default with the

286
00:13:00,480 --> 00:13:03,720
computers with legit domain implant for

287
00:13:03,720 --> 00:13:08,459
like a corporate uh security sometimes

288
00:13:08,459 --> 00:13:11,579
you can use for like a giver vacation

289
00:13:11,579 --> 00:13:13,860
tracking your users and a lot of other

290
00:13:13,860 --> 00:13:16,019
stuff but also it can be used in

291
00:13:16,019 --> 00:13:17,760
malicious way right and we've already

292
00:13:17,760 --> 00:13:19,740
seen these attacks it's example low

293
00:13:19,740 --> 00:13:23,420
Jacks apt20 yeah eight been used uh

294
00:13:23,420 --> 00:13:26,760
modified version of computers to

295
00:13:26,760 --> 00:13:30,480
actually attack the US government

296
00:13:30,480 --> 00:13:34,620
so another thing it's constant rays of

297
00:13:34,620 --> 00:13:37,260
numbers of vulnerabilities and only by

298
00:13:37,260 --> 00:13:40,380
like by finally my company we discussed

299
00:13:40,380 --> 00:13:44,519
like a 60 plus vulnerabilities and uh

300
00:13:44,519 --> 00:13:48,540
also like we still have uh 50 plus which

301
00:13:48,540 --> 00:13:52,139
is under the disclosure so I mean that's

302
00:13:52,139 --> 00:13:56,700
a lot guys and uh like 95 percent of

303
00:13:56,700 --> 00:13:59,700
these uh issues are high impact issues

304
00:13:59,700 --> 00:14:03,060
that's mean like it's pretty serious

305
00:14:03,060 --> 00:14:04,980
vulnerabilities which has caused a lot

306
00:14:04,980 --> 00:14:07,500
of troubles and uh

307
00:14:07,500 --> 00:14:10,139
what other parties are discovering right

308
00:14:10,139 --> 00:14:12,120
why these vulnerabilities are happening

309
00:14:12,120 --> 00:14:14,760
and why all these repeatable failures

310
00:14:14,760 --> 00:14:17,399
are not gone because it's just classical

311
00:14:17,399 --> 00:14:19,200
most of them it's classical memory

312
00:14:19,200 --> 00:14:21,060
corruption vulnerabilities like I've

313
00:14:21,060 --> 00:14:24,360
been finding uh call out vulnerabilities

314
00:14:24,360 --> 00:14:26,040
like a code execution and system

315
00:14:26,040 --> 00:14:29,220
management mode from probably 2013 or

316
00:14:29,220 --> 00:14:32,519
even earlier but basically that's

317
00:14:32,519 --> 00:14:35,160
happening again and again we have some

318
00:14:35,160 --> 00:14:37,200
mitigation in place but how effectively

319
00:14:37,200 --> 00:14:38,940
they used by the vendors and other

320
00:14:38,940 --> 00:14:42,120
things it's cause a lot of troubles such

321
00:14:42,120 --> 00:14:43,740
number of vulnerabilities of course

322
00:14:43,740 --> 00:14:47,160
create the mindset this attraction phase

323
00:14:47,160 --> 00:14:50,880
is very big and big from the perspective

324
00:14:50,880 --> 00:14:52,019
of

325
00:14:52,019 --> 00:14:52,940
um

326
00:14:52,940 --> 00:14:56,760
uh of potential opportunities for the

327
00:14:56,760 --> 00:15:00,240
attacker right and why I think it is

328
00:15:00,240 --> 00:15:03,180
actually uh happening right now and you

329
00:15:03,180 --> 00:15:06,060
don't just don't see because like it's

330
00:15:06,060 --> 00:15:08,399
just too many things in the firmware

331
00:15:08,399 --> 00:15:10,980
which is can be used by that hiker and

332
00:15:10,980 --> 00:15:14,579
actually affect uh much effectively uh

333
00:15:14,579 --> 00:15:16,440
the operating system where compared to

334
00:15:16,440 --> 00:15:19,079
other things of course you need to have

335
00:15:19,079 --> 00:15:21,660
a very comprehensive skills to develop

336
00:15:21,660 --> 00:15:24,360
some things but also like it's been a

337
00:15:24,360 --> 00:15:26,519
discussion a few I think week ago or so

338
00:15:26,519 --> 00:15:28,560
about the Black Lotus malware which is

339
00:15:28,560 --> 00:15:30,959
new malware based on ufi firmware

340
00:15:30,959 --> 00:15:33,480
appears uh but

341
00:15:33,480 --> 00:15:35,040
um nobody's seen the sample yet

342
00:15:35,040 --> 00:15:38,579
interesting thing but it looks like uh

343
00:15:38,579 --> 00:15:40,440
such movements it's happening on the

344
00:15:40,440 --> 00:15:43,560
Cyber criminal world too but it will be

345
00:15:43,560 --> 00:15:45,779
interesting to research such malware and

346
00:15:45,779 --> 00:15:48,120
see what kind of capability has been

347
00:15:48,120 --> 00:15:51,120
included in there and not just on the

348
00:15:51,120 --> 00:15:52,500
speculation which is currently happening

349
00:15:52,500 --> 00:15:57,480
into the media anyway so also after our

350
00:15:57,480 --> 00:16:01,139
black hat talk uh in past August in

351
00:16:01,139 --> 00:16:03,480
Vegas our

352
00:16:03,480 --> 00:16:06,240
uh we disclosed six vulnerabilities to

353
00:16:06,240 --> 00:16:08,820
HP and it's been responsible disclosure

354
00:16:08,820 --> 00:16:10,680
coordinated date of disclosure and

355
00:16:10,680 --> 00:16:13,800
everything else and in place what

356
00:16:13,800 --> 00:16:15,420
actually been everything been

357
00:16:15,420 --> 00:16:17,399
coordinated with the vendor what

358
00:16:17,399 --> 00:16:19,320
happened we figured out a few weeks

359
00:16:19,320 --> 00:16:21,899
later basically a triple three high

360
00:16:21,899 --> 00:16:23,579
impact vulnerabilities we've been

361
00:16:23,579 --> 00:16:25,680
talking about on black hat we discussed

362
00:16:25,680 --> 00:16:27,180
all the details and some of them

363
00:16:27,180 --> 00:16:30,720
actually been uh include the pocs and uh

364
00:16:30,720 --> 00:16:32,579
our

365
00:16:32,579 --> 00:16:35,880
our bugs are not patched

366
00:16:35,880 --> 00:16:39,660
like vendor Bean aware about these

367
00:16:39,660 --> 00:16:43,139
vulnerabilities for a while and uh uh

368
00:16:43,139 --> 00:16:45,480
our backs after the coordinated

369
00:16:45,480 --> 00:16:48,360
discorder are not fixed and uh we've

370
00:16:48,360 --> 00:16:50,160
been thinking about why is that

371
00:16:50,160 --> 00:16:53,759
happening one of the thoughts it is also

372
00:16:53,759 --> 00:16:55,620
about identification effect that's

373
00:16:55,620 --> 00:16:58,500
coping the impact right what uh product

374
00:16:58,500 --> 00:17:01,259
lines are affected what the devices are

375
00:17:01,259 --> 00:17:03,540
contained uh these vulnerabilities and

376
00:17:03,540 --> 00:17:06,359
actually for some of the vendors

377
00:17:06,359 --> 00:17:06,959
um

378
00:17:06,959 --> 00:17:11,220
it's actually can be a problem and uh

379
00:17:11,220 --> 00:17:12,599
because they have just too many

380
00:17:12,599 --> 00:17:14,579
different product lines and scoping such

381
00:17:14,579 --> 00:17:16,919
devices with a forked repository of the

382
00:17:16,919 --> 00:17:20,220
firmware it can be not that easy and

383
00:17:20,220 --> 00:17:23,220
also HP is probably one of the uh

384
00:17:23,220 --> 00:17:25,020
firmware vendors which I knew from the

385
00:17:25,020 --> 00:17:27,299
u5 firmware space which is try to

386
00:17:27,299 --> 00:17:29,460
obfuscate their firmers they just strip

387
00:17:29,460 --> 00:17:31,200
in the names and generate the random

388
00:17:31,200 --> 00:17:33,780
ones maybe such obscurity doesn't play

389
00:17:33,780 --> 00:17:35,880
well when you need to pledge the firmers

390
00:17:35,880 --> 00:17:38,400
who knows right

391
00:17:38,400 --> 00:17:41,820
and yeah just come back to

392
00:17:41,820 --> 00:17:42,419
um

393
00:17:42,419 --> 00:17:44,820
black hat we discussed 12 new

394
00:17:44,820 --> 00:17:46,860
vulnerabilities at blackhead some of

395
00:17:46,860 --> 00:17:48,539
them being a platform initialization

396
00:17:48,539 --> 00:17:51,299
phase preview Phi which is very

397
00:17:51,299 --> 00:17:53,160
interesting

398
00:17:53,160 --> 00:17:55,860
um very interesting attack surface and

399
00:17:55,860 --> 00:17:58,919
uh it's where we will be talk about the

400
00:17:58,919 --> 00:18:00,660
future threats and how the movements

401
00:18:00,660 --> 00:18:02,880
will be happening but also just a few

402
00:18:02,880 --> 00:18:04,980
weeks ago we dropped seven new inside

403
00:18:04,980 --> 00:18:08,760
vulnerabilities and uh actual next week

404
00:18:08,760 --> 00:18:13,260
in uh Echo party it will be uh another

405
00:18:13,260 --> 00:18:16,260
three issues but these three issues is

406
00:18:16,260 --> 00:18:18,179
actually huge this junior vulnerability

407
00:18:18,179 --> 00:18:20,400
will be discussed next week it will be

408
00:18:20,400 --> 00:18:22,980
affecting 10 years back of the platforms

409
00:18:22,980 --> 00:18:25,020
which is actually in the field that's

410
00:18:25,020 --> 00:18:29,520
kind of like a very very uh interesting

411
00:18:29,520 --> 00:18:31,860
feeling about the firm vulnerabilities

412
00:18:31,860 --> 00:18:33,840
sometimes if you find the vulnerability

413
00:18:33,840 --> 00:18:36,480
in reference code or if you find

414
00:18:36,480 --> 00:18:39,179
vulnerability in ibv independent bias

415
00:18:39,179 --> 00:18:43,080
developer code it's can affect

416
00:18:43,080 --> 00:18:44,220
um

417
00:18:44,220 --> 00:18:47,220
not just single platform right it can

418
00:18:47,220 --> 00:18:49,799
affect all the vendors which has used

419
00:18:49,799 --> 00:18:52,500
this uh American Mega Trends or whatever

420
00:18:52,500 --> 00:18:56,520
other IBB called and then uh also if it

421
00:18:56,520 --> 00:18:58,679
is Intel or ND reference code you can

422
00:18:58,679 --> 00:19:00,780
actually Target all the platforms and

423
00:19:00,780 --> 00:19:03,960
some of the intro Intel or AMD reference

424
00:19:03,960 --> 00:19:06,480
code it's can include a few years back

425
00:19:06,480 --> 00:19:09,000
of the devices which is can be also

426
00:19:09,000 --> 00:19:12,900
affected but such security issues right

427
00:19:12,900 --> 00:19:16,620
and this is kind of scary because uh the

428
00:19:16,620 --> 00:19:19,260
firmware attack surface is give so many

429
00:19:19,260 --> 00:19:22,140
opportunities to the attacker and we

430
00:19:22,140 --> 00:19:24,539
don't see in the strats but we've seen a

431
00:19:24,539 --> 00:19:25,980
lot of vulnerabilities and risk

432
00:19:25,980 --> 00:19:29,160
happening but I mean it's not true and

433
00:19:29,160 --> 00:19:32,100
unfortunately like a lot of things which

434
00:19:32,100 --> 00:19:36,120
is seen it's under ndas but basically we

435
00:19:36,120 --> 00:19:40,140
don't see uh enough information and risk

436
00:19:40,140 --> 00:19:43,320
highlight on the median publicly which

437
00:19:43,320 --> 00:19:46,320
is does it create some sort of like uh

438
00:19:46,320 --> 00:19:50,760
uh mindset it's not happening but it is

439
00:19:50,760 --> 00:19:52,200
happening

440
00:19:52,200 --> 00:19:55,760
so let's talk about previous

441
00:19:55,760 --> 00:19:59,160
attack model attacker model and

442
00:19:59,160 --> 00:20:00,240
basically

443
00:20:00,240 --> 00:20:03,360
this is very interesting space because

444
00:20:03,360 --> 00:20:06,480
basically what happened in pre-fi is the

445
00:20:06,480 --> 00:20:09,960
moment it's not uh initiated yet it is a

446
00:20:09,960 --> 00:20:13,200
pre-dixie mode and uh basically it is

447
00:20:13,200 --> 00:20:19,860
very very early after just uh

448
00:20:19,860 --> 00:20:24,919
actual CPU and fsp firmware is passing

449
00:20:24,919 --> 00:20:29,039
control uh to the UEFI firmware which

450
00:20:29,039 --> 00:20:31,740
started with a preview phase and it's

451
00:20:31,740 --> 00:20:34,679
initiating a lot of functionality

452
00:20:34,679 --> 00:20:37,740
includes security features right so

453
00:20:37,740 --> 00:20:40,020
basically some of the security features

454
00:20:40,020 --> 00:20:43,740
it just can't be uh bypassed on that

455
00:20:43,740 --> 00:20:46,200
phase which will be never bypassed on

456
00:20:46,200 --> 00:20:48,120
the Dixie phase from the perspective

457
00:20:48,120 --> 00:20:51,000
what you can do from preview file this

458
00:20:51,000 --> 00:20:52,679
is another thing when we cross in

459
00:20:52,679 --> 00:20:54,480
different type of security boundaries

460
00:20:54,480 --> 00:20:57,900
and I think uh I've been talking a lot

461
00:20:57,900 --> 00:21:01,620
about that previously uh I think also

462
00:21:01,620 --> 00:21:04,440
christophany who is doing a lot of fault

463
00:21:04,440 --> 00:21:06,720
injection attacks and side channels he

464
00:21:06,720 --> 00:21:09,419
will be talking uh later today he

465
00:21:09,419 --> 00:21:12,480
probably also can highlight some of the

466
00:21:12,480 --> 00:21:15,000
interesting stuff about Crossing

467
00:21:15,000 --> 00:21:17,039
security boundaries when you do insidesh

468
00:21:17,039 --> 00:21:19,620
attacks and it's exactly why most of

469
00:21:19,620 --> 00:21:21,600
them happening because if you attack at

470
00:21:21,600 --> 00:21:24,780
very early phase uh doing the fault you

471
00:21:24,780 --> 00:21:26,700
can actually cross security boundaries

472
00:21:26,700 --> 00:21:29,280
and from different perspectives look on

473
00:21:29,280 --> 00:21:31,260
security features which has been not

474
00:21:31,260 --> 00:21:33,900
considered this perspective can be not

475
00:21:33,900 --> 00:21:36,600
considered by developers of the security

476
00:21:36,600 --> 00:21:39,840
feature right but also let's think about

477
00:21:39,840 --> 00:21:41,940
engram

478
00:21:41,940 --> 00:21:45,780
what is non-volatile memory means from

479
00:21:45,780 --> 00:21:47,700
the attacker perspective first of all

480
00:21:47,700 --> 00:21:51,659
like because it's used on early early uh

481
00:21:51,659 --> 00:21:54,960
boot phase and by other reason reasons

482
00:21:54,960 --> 00:21:58,799
it's basically functional Reasons from a

483
00:21:58,799 --> 00:22:00,539
functional perspective it's actually not

484
00:22:00,539 --> 00:22:03,059
covered by boot guard and also it's

485
00:22:03,059 --> 00:22:05,520
actually created uh it's it's exists

486
00:22:05,520 --> 00:22:07,380
earlier than boot guard right so

487
00:22:07,380 --> 00:22:10,980
basically because it's not validated any

488
00:22:10,980 --> 00:22:13,500
variable which is actually can be

489
00:22:13,500 --> 00:22:15,840
modified and cause a constant

490
00:22:15,840 --> 00:22:18,059
exploitation it can give the attackers

491
00:22:18,059 --> 00:22:20,640
the persistent vectors and

492
00:22:20,640 --> 00:22:23,520
that's a very interesting way when you

493
00:22:23,520 --> 00:22:24,840
basically don't have any modified

494
00:22:24,840 --> 00:22:26,940
components but you can actually attack

495
00:22:26,940 --> 00:22:29,100
the firmware and still gain the

496
00:22:29,100 --> 00:22:32,580
persistence effectively right and

497
00:22:32,580 --> 00:22:35,340
we actually discussed uh

498
00:22:35,340 --> 00:22:38,159
on past Black Cat and previous black hat

499
00:22:38,159 --> 00:22:40,679
uh about such of the attacks we found

500
00:22:40,679 --> 00:22:43,559
one of the vulnerabilities be Society of

501
00:22:43,559 --> 00:22:46,980
t on Intel reference code presented in

502
00:22:46,980 --> 00:22:50,640
2000 in 2021 with Alex turshkin and

503
00:22:50,640 --> 00:22:53,640
Adams abroadski with my Nvidia coex

504
00:22:53,640 --> 00:22:57,600
we've worked before I started binary so

505
00:22:57,600 --> 00:22:59,940
basically I'm

506
00:22:59,940 --> 00:23:03,440
um this is very uh interesting

507
00:23:03,440 --> 00:23:07,740
perspective of uh enviram and how this

508
00:23:07,740 --> 00:23:09,440
transition happening between different

509
00:23:09,440 --> 00:23:12,900
phases right but let's talk about how it

510
00:23:12,900 --> 00:23:15,299
can be used by the attacker right but

511
00:23:15,299 --> 00:23:18,659
some node which is very important like

512
00:23:18,659 --> 00:23:23,100
in many cases uh like TPM will not help

513
00:23:23,100 --> 00:23:26,100
right because you have the pcrs which is

514
00:23:26,100 --> 00:23:28,980
platform registers which is used for

515
00:23:28,980 --> 00:23:31,380
storing your integrity hash but this

516
00:23:31,380 --> 00:23:33,600
Integrity hash will be created but not

517
00:23:33,600 --> 00:23:36,720
extended during runtime that's mean like

518
00:23:36,720 --> 00:23:39,720
uh you will be not affect like you will

519
00:23:39,720 --> 00:23:42,120
be not affecting after modifications or

520
00:23:42,120 --> 00:23:44,460
end time phase and remote Health

521
00:23:44,460 --> 00:23:46,559
attestation in this case will be don't

522
00:23:46,559 --> 00:23:51,120
detect runtime exploitation so and it's

523
00:23:51,120 --> 00:23:52,799
where we need to create this transition

524
00:23:52,799 --> 00:23:55,620
to the future of the attack surfaces and

525
00:23:55,620 --> 00:23:58,440
how this is happening so let's look on

526
00:23:58,440 --> 00:24:02,340
this prayer five phrase but it's been a

527
00:24:02,340 --> 00:24:05,220
lot of discussions about the Dixie some

528
00:24:05,220 --> 00:24:07,919
implants and root kids of course like

529
00:24:07,919 --> 00:24:10,799
it's other spaces where implants can be

530
00:24:10,799 --> 00:24:13,080
hided but let's just focus on this talk

531
00:24:13,080 --> 00:24:16,080
on UEFI firmware because this is huge

532
00:24:16,080 --> 00:24:18,000
it's easy to exploit from the operating

533
00:24:18,000 --> 00:24:20,159
system layer and it's actually already

534
00:24:20,159 --> 00:24:22,860
been used in a lot of offensive

535
00:24:22,860 --> 00:24:23,960
operations

536
00:24:23,960 --> 00:24:27,480
for many years which is known

537
00:24:27,480 --> 00:24:31,080
and basically uh

538
00:24:31,080 --> 00:24:34,500
uh what happened in the pre-5 phase is

539
00:24:34,500 --> 00:24:36,600
happening too early right so we have

540
00:24:36,600 --> 00:24:39,840
like uh no security protections gains by

541
00:24:39,840 --> 00:24:41,760
flash modification in this phase like

542
00:24:41,760 --> 00:24:44,940
bios lock enabled smm uh write

543
00:24:44,940 --> 00:24:47,640
protection will be not that exist VR RX

544
00:24:47,640 --> 00:24:49,799
will be not initialized it's a security

545
00:24:49,799 --> 00:24:51,600
registers which you can block some of

546
00:24:51,600 --> 00:24:55,320
the regions to write and also Intel bias

547
00:24:55,320 --> 00:24:56,760
guards are not enabled at this moment

548
00:24:56,760 --> 00:24:58,740
it's exactly what I'm talking about from

549
00:24:58,740 --> 00:25:00,840
the security feature perspective like

550
00:25:00,840 --> 00:25:03,080
yes we have all these fancy mitigations

551
00:25:03,080 --> 00:25:06,360
but what if they just not enabled yet

552
00:25:06,360 --> 00:25:08,880
right so it's kind of like a by

553
00:25:08,880 --> 00:25:13,020
bypassing by design a lot of the things

554
00:25:13,020 --> 00:25:17,220
and to be honest uh the previous attack

555
00:25:17,220 --> 00:25:21,659
surface uh from uh first shootout uh

556
00:25:21,659 --> 00:25:23,820
from the offensive perspective it's been

557
00:25:23,820 --> 00:25:26,419
discussed in our talk 2020

558
00:25:26,419 --> 00:25:30,120
2021 uh at black hat in Vegas but

559
00:25:30,120 --> 00:25:33,779
basically uh we didn't sing like a lot

560
00:25:33,779 --> 00:25:35,700
of attention from the vendor side and

561
00:25:35,700 --> 00:25:37,500
when we've been working on this space

562
00:25:37,500 --> 00:25:39,539
it's a lot of opportunities for the

563
00:25:39,539 --> 00:25:42,360
attacker but also it's a lot of uh

564
00:25:42,360 --> 00:25:44,700
vulnerabilities in there it's a lot of

565
00:25:44,700 --> 00:25:46,860
design problems which is basically hard

566
00:25:46,860 --> 00:25:48,539
to fix

567
00:25:48,539 --> 00:25:51,000
uh business idft issue which I mentioned

568
00:25:51,000 --> 00:25:52,740
before from enter we can just Google

569
00:25:52,740 --> 00:25:57,179
this one uh basically it is been very

570
00:25:57,179 --> 00:26:00,900
long time uh disclosure process I would

571
00:26:00,900 --> 00:26:03,419
say it's more than a year under the

572
00:26:03,419 --> 00:26:06,840
disclosure after we can actually uh talk

573
00:26:06,840 --> 00:26:11,700
about that and uh very interesting

574
00:26:11,700 --> 00:26:14,520
thing from the supply chain perspective

575
00:26:14,520 --> 00:26:17,940
this vulnerability it's still on some of

576
00:26:17,940 --> 00:26:21,000
the platforms stay unfixed because I

577
00:26:21,000 --> 00:26:23,640
don't know why but it's been no fixed

578
00:26:23,640 --> 00:26:25,620
delivered from the device vendor or it

579
00:26:25,620 --> 00:26:30,559
is no fix delivered with ibv site and

580
00:26:30,559 --> 00:26:34,919
it's kind of like a complicated and

581
00:26:34,919 --> 00:26:38,940
supply chain creating even more problems

582
00:26:38,940 --> 00:26:42,840
for the firmer side which we can imagine

583
00:26:42,840 --> 00:26:44,580
so

584
00:26:44,580 --> 00:26:47,340
let's talk from the payload delivery so

585
00:26:47,340 --> 00:26:51,000
I uh even I talking from the K note

586
00:26:51,000 --> 00:26:53,580
perspective but I want to keep it

587
00:26:53,580 --> 00:26:56,000
technical enough and deliver the message

588
00:26:56,000 --> 00:26:59,400
from the complexity and the impact

589
00:26:59,400 --> 00:27:02,220
perspective to you guys and look here so

590
00:27:02,220 --> 00:27:05,100
we have like a pre-5 phase and the Dixie

591
00:27:05,100 --> 00:27:07,620
phase so operating system will be boots

592
00:27:07,620 --> 00:27:10,200
later but let's just focus on these two

593
00:27:10,200 --> 00:27:14,159
phases and we have like different type

594
00:27:14,159 --> 00:27:17,220
like if you think about uh UEFA firmware

595
00:27:17,220 --> 00:27:19,679
itself called operating system before

596
00:27:19,679 --> 00:27:22,320
your main operating system happening

597
00:27:22,320 --> 00:27:26,100
basically this is a real-time operating

598
00:27:26,100 --> 00:27:28,279
system which is actually

599
00:27:28,279 --> 00:27:32,299
about 6 million plus uh lines of code

600
00:27:32,299 --> 00:27:34,980
and it's actually bigger than modern

601
00:27:34,980 --> 00:27:38,779
entos kernel so it's how complex it is

602
00:27:38,779 --> 00:27:42,480
and uh also we just cover

603
00:27:42,480 --> 00:27:45,059
where from very high level perspective

604
00:27:45,059 --> 00:27:49,140
the flow how it can be attacked from uh

605
00:27:49,140 --> 00:27:51,240
exploitation perspective if you

606
00:27:51,240 --> 00:27:52,799
basically have a code execution on

607
00:27:52,799 --> 00:27:55,140
platform and utilization phase what kind

608
00:27:55,140 --> 00:27:58,080
of like transition phases can be done to

609
00:27:58,080 --> 00:28:00,720
survive until ISM and inject code there

610
00:28:00,720 --> 00:28:06,000
and again like all this uh it's crossing

611
00:28:06,000 --> 00:28:07,860
a lot of different security boundaries

612
00:28:07,860 --> 00:28:11,960
and can just avoid a lot of security

613
00:28:11,960 --> 00:28:14,700
mechanisms which is implemented on Dixie

614
00:28:14,700 --> 00:28:16,679
runtime system management runtime but

615
00:28:16,679 --> 00:28:18,720
it's not initialized yet because pre-fi

616
00:28:18,720 --> 00:28:21,000
phases happening to earning

617
00:28:21,000 --> 00:28:23,700
so here's a demo from

618
00:28:23,700 --> 00:28:26,279
um our uh

619
00:28:26,279 --> 00:28:28,380
one of our vulnerabilities exploitation

620
00:28:28,380 --> 00:28:30,779
in platform initialization phase I think

621
00:28:30,779 --> 00:28:33,799
this one is exactly used uh

622
00:28:33,799 --> 00:28:39,000
uh bcssid debug and uh as you can see it

623
00:28:39,000 --> 00:28:41,100
shows exactly the way how it's hooking

624
00:28:41,100 --> 00:28:44,880
uh different uh events for keep this

625
00:28:44,880 --> 00:28:47,159
transition going it's actually this demo

626
00:28:47,159 --> 00:28:49,559
exactly show what has been described on

627
00:28:49,559 --> 00:28:51,799
the previous slide

628
00:28:51,799 --> 00:28:55,440
but let's focus on Modern security

629
00:28:55,440 --> 00:28:57,659
features what about platform policy

630
00:28:57,659 --> 00:29:01,080
management from a new uh security

631
00:29:01,080 --> 00:29:03,840
feature from window and how it's

632
00:29:03,840 --> 00:29:08,279
actually can uh can protect uh

633
00:29:08,279 --> 00:29:11,640
can protect our modern devices this

634
00:29:11,640 --> 00:29:16,020
actually very interesting security uh

635
00:29:16,020 --> 00:29:18,539
uh feature because basically we have now

636
00:29:18,539 --> 00:29:20,419
not only

637
00:29:20,419 --> 00:29:25,460
a sign at firmware we have also some

638
00:29:25,460 --> 00:29:28,100
checks on which

639
00:29:28,100 --> 00:29:30,720
Islam driver need to be loaded which

640
00:29:30,720 --> 00:29:33,120
functionality for all these smm drivers

641
00:29:33,120 --> 00:29:34,679
in terms of the policy need to be

642
00:29:34,679 --> 00:29:37,740
applied and of course uh it's controlled

643
00:29:37,740 --> 00:29:40,919
by some of the ACM which is related to

644
00:29:40,919 --> 00:29:44,820
TPM but and the txt but basically

645
00:29:44,820 --> 00:29:49,740
another thing we have uh it is kind of

646
00:29:49,740 --> 00:29:52,380
like what if we exploit the

647
00:29:52,380 --> 00:29:55,440
vulnerability in one SML driver does we

648
00:29:55,440 --> 00:29:58,200
still have uh the whole access to the

649
00:29:58,200 --> 00:30:00,539
memory region and smm to affect any

650
00:30:00,539 --> 00:30:02,399
other drivers or modifies the memory

651
00:30:02,399 --> 00:30:05,220
space that's an interesting question and

652
00:30:05,220 --> 00:30:07,860
let's look together how this feature are

653
00:30:07,860 --> 00:30:13,020
worked so first of all like uh

654
00:30:13,399 --> 00:30:17,279
it's actually simplified SMI transfer

655
00:30:17,279 --> 00:30:20,460
monitor which is kind of like a

656
00:30:20,460 --> 00:30:24,539
Intel developed as a concept back to uh

657
00:30:24,539 --> 00:30:28,559
come back to 2014 uh 15 when they are

658
00:30:28,559 --> 00:30:30,500
kind of like partially

659
00:30:30,500 --> 00:30:34,620
open sourced and the first Concepts has

660
00:30:34,620 --> 00:30:36,299
been very slow with the time of course

661
00:30:36,299 --> 00:30:38,279
it's create much more

662
00:30:38,279 --> 00:30:41,279
um much more flexibility from the

663
00:30:41,279 --> 00:30:43,320
perspective of new security and silicon

664
00:30:43,320 --> 00:30:47,399
features but uh this one it's how it

665
00:30:47,399 --> 00:30:49,140
looks in reality unfortunately it's not

666
00:30:49,140 --> 00:30:51,720
used any sort of fertilization we have

667
00:30:51,720 --> 00:30:56,039
most of the functionality for uh this uh

668
00:30:56,039 --> 00:31:01,020
uh ppam uh feature uh implemented still

669
00:31:01,020 --> 00:31:03,059
in the firmware when all the

670
00:31:03,059 --> 00:31:05,700
initialization happen mostly in pre-5

671
00:31:05,700 --> 00:31:09,779
Phase but also as you can see uh the

672
00:31:09,779 --> 00:31:12,419
policy checking in just one bit right so

673
00:31:12,419 --> 00:31:14,640
it's basically signaling like true or

674
00:31:14,640 --> 00:31:16,380
false if the police has been checked

675
00:31:16,380 --> 00:31:19,200
what if this beat beat can be modified

676
00:31:19,200 --> 00:31:21,539
what if the attacker can influence a

677
00:31:21,539 --> 00:31:23,460
little bit plus this will affect the

678
00:31:23,460 --> 00:31:26,940
security feature basically this platform

679
00:31:26,940 --> 00:31:29,220
assessment model it's been created for

680
00:31:29,220 --> 00:31:32,580
actually help uh the device vendors to

681
00:31:32,580 --> 00:31:34,559
be more confident it will be harder to

682
00:31:34,559 --> 00:31:36,720
compromise but from the design

683
00:31:36,720 --> 00:31:38,940
perspective it's actually super complex

684
00:31:38,940 --> 00:31:41,820
feature and it's open new attack

685
00:31:41,820 --> 00:31:45,720
surfaces right so let's look uh how

686
00:31:45,720 --> 00:31:48,840
basically attack can be done we

687
00:31:48,840 --> 00:31:52,500
presented this uh ppam attack on our

688
00:31:52,500 --> 00:31:54,480
black hat so more details can be

689
00:31:54,480 --> 00:31:57,360
discovered by the link below but main

690
00:31:57,360 --> 00:32:01,279
thing here like we have a pre-file uh

691
00:32:01,279 --> 00:32:04,500
prefinitialized this security feature

692
00:32:04,500 --> 00:32:05,940
and of course it's need to be

693
00:32:05,940 --> 00:32:09,779
transitioned uh happening right so when

694
00:32:09,779 --> 00:32:13,799
we have uh co-ops which is Hands-On uh

695
00:32:13,799 --> 00:32:16,200
some basically let's say some Global

696
00:32:16,200 --> 00:32:17,940
variables which is accessed during

697
00:32:17,940 --> 00:32:21,720
different boot stages uh and if this

698
00:32:21,720 --> 00:32:24,419
Global variable will be signaling

699
00:32:24,419 --> 00:32:28,320
something this can be modified because

700
00:32:28,320 --> 00:32:30,720
it's not protected right

701
00:32:30,720 --> 00:32:34,260
and it's exactly what happened so this

702
00:32:34,260 --> 00:32:36,360
attack being on one of the most recent

703
00:32:36,360 --> 00:32:40,919
flight books um like uh and we still see

704
00:32:40,919 --> 00:32:44,580
uh this not fixed yet by the way in many

705
00:32:44,580 --> 00:32:48,299
devices uh HP implementation uh show you

706
00:32:48,299 --> 00:32:50,700
basically when it's checking only

707
00:32:50,700 --> 00:32:54,120
something exists in the variable and

708
00:32:54,120 --> 00:32:56,179
then boom of course it can be modified

709
00:32:56,179 --> 00:32:58,320
reference implementation is actually

710
00:32:58,320 --> 00:33:00,419
different it is a vendor implementation

711
00:33:00,419 --> 00:33:02,940
affected this bypass it's not Universal

712
00:33:02,940 --> 00:33:05,039
it's focused on HP device but it doesn't

713
00:33:05,039 --> 00:33:07,919
mean other vendors not use the same way

714
00:33:07,919 --> 00:33:10,260
because they need to kind of like

715
00:33:10,260 --> 00:33:12,360
simplify for themselves implementation

716
00:33:12,360 --> 00:33:15,299
of this feature because it looks cool on

717
00:33:15,299 --> 00:33:17,940
the uh

718
00:33:17,940 --> 00:33:19,740
uh on the reference called how Intel

719
00:33:19,740 --> 00:33:22,140
want to be implemented but also how you

720
00:33:22,140 --> 00:33:24,720
can scale and support and a lot of other

721
00:33:24,720 --> 00:33:27,059
things into the field IT supplies to the

722
00:33:27,059 --> 00:33:28,860
device vendors right

723
00:33:28,860 --> 00:33:33,659
so uh basically it's more uh a bit more

724
00:33:33,659 --> 00:33:35,880
about this bypass so basically as I

725
00:33:35,880 --> 00:33:39,120
mentioned this global data Hub data it's

726
00:33:39,120 --> 00:33:43,679
contained some check for sub word like

727
00:33:43,679 --> 00:33:47,880
if people should be enabled and exactly

728
00:33:47,880 --> 00:33:50,340
we can modify it so

729
00:33:50,340 --> 00:33:53,240
boom

730
00:33:54,059 --> 00:33:57,380
and another thing I wanted to talk about

731
00:33:57,380 --> 00:34:01,260
it's what we discovered during our black

732
00:34:01,260 --> 00:34:05,279
hat research like okay this is security

733
00:34:05,279 --> 00:34:07,860
feature it's platform uh assessment

734
00:34:07,860 --> 00:34:12,300
module uh but also if we come back to

735
00:34:12,300 --> 00:34:14,040
one of the first flights when I've been

736
00:34:14,040 --> 00:34:15,359
talking about that it's been the

737
00:34:15,359 --> 00:34:18,000
certificate which is stand for at a

738
00:34:18,000 --> 00:34:20,940
station it's kind of like a creating uh

739
00:34:20,940 --> 00:34:25,020
route of trust for this assessment of

740
00:34:25,020 --> 00:34:28,080
different modules happening with Intel

741
00:34:28,080 --> 00:34:32,159
ppam but what we realized we extract uh

742
00:34:32,159 --> 00:34:34,199
the certificates which is related to

743
00:34:34,199 --> 00:34:36,839
this assessment module and we realized

744
00:34:36,839 --> 00:34:40,760
most of them are actually expired

745
00:34:40,760 --> 00:34:44,480
they're kind of like missing validity

746
00:34:44,480 --> 00:34:46,859
but why

747
00:34:46,859 --> 00:34:49,679
so basically

748
00:34:49,679 --> 00:34:51,719
interesting thing like your production

749
00:34:51,719 --> 00:34:54,899
signing key is being expired on all the

750
00:34:54,899 --> 00:34:57,060
Platforms in the field every single

751
00:34:57,060 --> 00:34:58,920
platform in the field we are checked

752
00:34:58,920 --> 00:35:02,280
like and that's mean at the station it's

753
00:35:02,280 --> 00:35:05,339
been not enabled for people and actually

754
00:35:05,339 --> 00:35:07,920
from the attestation standpoint if

755
00:35:07,920 --> 00:35:10,680
you're not like let's say uh if we

756
00:35:10,680 --> 00:35:12,900
disable ppam by the attack previously

757
00:35:12,900 --> 00:35:17,280
discussed so like it will be visible

758
00:35:17,280 --> 00:35:19,380
from the device health perspective from

759
00:35:19,380 --> 00:35:22,020
a gestation standpoint but because

760
00:35:22,020 --> 00:35:24,540
based on this in context at the station

761
00:35:24,540 --> 00:35:28,619
being never in place for BPM so boom of

762
00:35:28,619 --> 00:35:30,480
course like this attack is very legit

763
00:35:30,480 --> 00:35:34,320
and it's very weird when we have like

764
00:35:34,320 --> 00:35:36,300
security feature which is not just

765
00:35:36,300 --> 00:35:38,640
configured correctly not by single

766
00:35:38,640 --> 00:35:41,220
vendor the whole industry

767
00:35:41,220 --> 00:35:43,619
so yeah it's a bit more details about

768
00:35:43,619 --> 00:35:45,900
certificates how many we checked as you

769
00:35:45,900 --> 00:35:48,480
can see like we found like almost 200

770
00:35:48,480 --> 00:35:52,500
certificates which is like 2021 a bit

771
00:35:52,500 --> 00:35:54,900
less certificates related to 2020

772
00:35:54,900 --> 00:35:56,820
because this feature has just not been

773
00:35:56,820 --> 00:36:02,339
uh used by uh majority of the devices uh

774
00:36:02,339 --> 00:36:04,079
in the field but it's actually been

775
00:36:04,079 --> 00:36:07,859
enforced with most recent CPU generation

776
00:36:07,859 --> 00:36:11,579
it's why basically seen more uh more

777
00:36:11,579 --> 00:36:13,859
recent certificates expired

778
00:36:13,859 --> 00:36:16,980
right why is this all the reputable

779
00:36:16,980 --> 00:36:21,540
failures are happening uh and uh why we

780
00:36:21,540 --> 00:36:23,339
still see all these memory Corruptions

781
00:36:23,339 --> 00:36:25,980
with industry-wide teamwork I think like

782
00:36:25,980 --> 00:36:28,680
first of all when you have a six million

783
00:36:28,680 --> 00:36:30,960
lines of code on C language it's

784
00:36:30,960 --> 00:36:32,760
actually creates a huge attack surface

785
00:36:32,760 --> 00:36:34,980
from any sort of perspective you can

786
00:36:34,980 --> 00:36:39,119
imagine so like but of course uh some of

787
00:36:39,119 --> 00:36:41,599
them can say oh we start actually

788
00:36:41,599 --> 00:36:44,160
writing developing some of the firmers

789
00:36:44,160 --> 00:36:46,980
on the rascot yes that's

790
00:36:46,980 --> 00:36:49,980
actually happening but if you think

791
00:36:49,980 --> 00:36:52,140
about from the supply chain perspective

792
00:36:52,140 --> 00:36:54,960
you don't only develop in your firmware

793
00:36:54,960 --> 00:36:56,940
company you need to develop your former

794
00:36:56,940 --> 00:36:58,500
component on the raft you need to

795
00:36:58,500 --> 00:37:00,660
develop all these dependencies for party

796
00:37:00,660 --> 00:37:03,240
components also on us otherwise you have

797
00:37:03,240 --> 00:37:06,960
like 20 percent in the best case on the

798
00:37:06,960 --> 00:37:10,619
rust and 80 percent of the Seacock still

799
00:37:10,619 --> 00:37:13,320
is a huge attack surface and you

800
00:37:13,320 --> 00:37:16,079
mitigate probably just 20 percent of the

801
00:37:16,079 --> 00:37:18,660
risk and of course like uh from the

802
00:37:18,660 --> 00:37:21,780
perspective of rust if you use uh some

803
00:37:21,780 --> 00:37:24,540
unsafe things like it can cause troubles

804
00:37:24,540 --> 00:37:27,420
as we all can see from the perspective

805
00:37:27,420 --> 00:37:29,460
how many issues been found from their

806
00:37:29,460 --> 00:37:31,440
standard Library which is using unsafe

807
00:37:31,440 --> 00:37:34,380
code for optimization purposes right

808
00:37:34,380 --> 00:37:37,140
and in general of course like uh save

809
00:37:37,140 --> 00:37:39,060
languages memory save languages are

810
00:37:39,060 --> 00:37:42,060
helping to reduce the uh memory

811
00:37:42,060 --> 00:37:45,000
corruption and all this uh

812
00:37:45,000 --> 00:37:47,040
vulnerabilities from that perspective

813
00:37:47,040 --> 00:37:49,680
but like we are still have a lot of

814
00:37:49,680 --> 00:37:52,140
plenty of space for The Logical bugs for

815
00:37:52,140 --> 00:37:54,780
design issues and others right we'll see

816
00:37:54,780 --> 00:37:56,579
how it goes and hopefully the industry

817
00:37:56,579 --> 00:37:58,200
will be recovered from these repeatable

818
00:37:58,200 --> 00:38:01,079
failures but so far it's happening just

819
00:38:01,079 --> 00:38:02,820
like shootout for the more streets and

820
00:38:02,820 --> 00:38:06,060
tissues we discovered so yeah I will go

821
00:38:06,060 --> 00:38:08,520
a bit faster on that because uh we have

822
00:38:08,520 --> 00:38:12,180
some limited time and I want to see uh

823
00:38:12,180 --> 00:38:15,300
to hear the questions so yeah this has

824
00:38:15,300 --> 00:38:17,280
been presented already on labscon and

825
00:38:17,280 --> 00:38:18,839
all the details available in our

826
00:38:18,839 --> 00:38:20,520
advisories that's why I just shifting

827
00:38:20,520 --> 00:38:23,160
also it includes in our blog so

828
00:38:23,160 --> 00:38:24,540
basically

829
00:38:24,540 --> 00:38:26,820
what is most important how we can

830
00:38:26,820 --> 00:38:29,220
remediate this spiritual failures how

831
00:38:29,220 --> 00:38:31,980
basically we can find this automatically

832
00:38:31,980 --> 00:38:34,440
and uh like

833
00:38:34,440 --> 00:38:36,780
my team developed like if I explore

834
00:38:36,780 --> 00:38:39,240
plugin which is helping to find some

835
00:38:39,240 --> 00:38:41,520
classes with get variables and some

836
00:38:41,520 --> 00:38:46,020
others we just start supporting uh

837
00:38:46,020 --> 00:38:49,859
uh arm architecture for UEFI firmers and

838
00:38:49,859 --> 00:38:52,500
funny thing the vendors already not

839
00:38:52,500 --> 00:38:55,920
happy with that and you will be a new

840
00:38:55,920 --> 00:38:58,920
probably in a couple of months you will

841
00:38:58,920 --> 00:39:00,780
be discovered more details when it will

842
00:39:00,780 --> 00:39:03,839
be publicly available so stay tuned and

843
00:39:03,839 --> 00:39:06,660
another thing like we released some very

844
00:39:06,660 --> 00:39:09,000
interesting blog posts about how the

845
00:39:09,000 --> 00:39:12,540
simulate execution can apply for actual

846
00:39:12,540 --> 00:39:15,540
firmware space from uf5 firmware space

847
00:39:15,540 --> 00:39:17,520
perspective and it's not only limited

848
00:39:17,520 --> 00:39:19,560
for you if I firmware spaces approach of

849
00:39:19,560 --> 00:39:22,500
course so basically how we are thinking

850
00:39:22,500 --> 00:39:24,599
from the perspective of automation of

851
00:39:24,599 --> 00:39:26,820
back hunting in the firmware space right

852
00:39:26,820 --> 00:39:29,760
you don't need actual device and fuzzing

853
00:39:29,760 --> 00:39:31,980
on the device or basically doing such

854
00:39:31,980 --> 00:39:35,700
things on the device it's not necessary

855
00:39:35,700 --> 00:39:37,920
and also it's limitations capability

856
00:39:37,920 --> 00:39:41,099
right you need the you will be scaling

857
00:39:41,099 --> 00:39:42,960
and depending on the number of devices

858
00:39:42,960 --> 00:39:45,960
available so like we can do this more

859
00:39:45,960 --> 00:39:48,480
more effectively or basically limiting

860
00:39:48,480 --> 00:39:51,900
the scope with

861
00:39:51,920 --> 00:39:55,079
a potential scope where we are checking

862
00:39:55,079 --> 00:39:58,920
so yeah it's just uh some show for

863
00:39:58,920 --> 00:40:01,079
detection office in my hand there's boom

864
00:40:01,079 --> 00:40:04,980
right very fast very effective and

865
00:40:04,980 --> 00:40:08,520
finding the problems so guys if you

866
00:40:08,520 --> 00:40:10,260
wanted to check your firmware from

867
00:40:10,260 --> 00:40:12,480
condotron is available for free but

868
00:40:12,480 --> 00:40:15,660
basically Community scanner is here so

869
00:40:15,660 --> 00:40:17,640
let's start recovering from these

870
00:40:17,640 --> 00:40:19,380
repeatable favors don't trust the

871
00:40:19,380 --> 00:40:23,040
vendors check your firmware and then

872
00:40:23,040 --> 00:40:25,520
again as a conclusion

873
00:40:25,520 --> 00:40:28,440
complexity It's actually an enemy of

874
00:40:28,440 --> 00:40:30,480
security and what we can see the

875
00:40:30,480 --> 00:40:33,660
complexity is just growing it's opening

876
00:40:33,660 --> 00:40:36,000
your attack surfaces when the attack

877
00:40:36,000 --> 00:40:38,040
surfaces are growing it gives the

878
00:40:38,040 --> 00:40:40,619
possibility for the attack here and

879
00:40:40,619 --> 00:40:42,960
talking from the evolution of the thread

880
00:40:42,960 --> 00:40:46,619
uh chat actors in The firmware space

881
00:40:46,619 --> 00:40:50,400
it's been of course always around uh the

882
00:40:50,400 --> 00:40:52,380
firmware and Hardware but it's been

883
00:40:52,380 --> 00:40:55,200
mostly happening from the state state

884
00:40:55,200 --> 00:40:57,599
sponsored actors perspective because

885
00:40:57,599 --> 00:40:59,579
they have more budget they have a more

886
00:40:59,579 --> 00:41:02,099
interest and persistent but now this

887
00:41:02,099 --> 00:41:04,140
shift happening actually on the

888
00:41:04,140 --> 00:41:06,420
commodity threats which is coming from

889
00:41:06,420 --> 00:41:09,359
the cyber crime attack surface why it's

890
00:41:09,359 --> 00:41:10,980
happening just because the attacks from

891
00:41:10,980 --> 00:41:12,359
The Firm weights get cheaper on

892
00:41:12,359 --> 00:41:15,900
operating system it's not always about

893
00:41:15,900 --> 00:41:19,260
persistence it's actually about the cost

894
00:41:19,260 --> 00:41:22,020
efficiency and

895
00:41:22,020 --> 00:41:22,800
um

896
00:41:22,800 --> 00:41:25,020
for the from the attacker perspective

897
00:41:25,020 --> 00:41:28,440
and this actually happening also like in

898
00:41:28,440 --> 00:41:30,359
general we have much more document

899
00:41:30,359 --> 00:41:32,760
documented things which is increasing

900
00:41:32,760 --> 00:41:34,260
knowledge base available which is

901
00:41:34,260 --> 00:41:36,119
researchers did for the years for this

902
00:41:36,119 --> 00:41:38,280
attack surfaces of course it's give

903
00:41:38,280 --> 00:41:42,480
right now a benefit for for the uptrend

904
00:41:42,480 --> 00:41:45,240
actor from that space

905
00:41:45,240 --> 00:41:45,839
um

906
00:41:45,839 --> 00:41:48,420
industry definitely need to increase the

907
00:41:48,420 --> 00:41:51,000
awareness on the firmware and

908
00:41:51,000 --> 00:41:52,859
specifically on the firmware which is at

909
00:41:52,859 --> 00:41:54,839
scale which is actually executing on the

910
00:41:54,839 --> 00:41:58,680
devices and I hope that will be happen

911
00:41:58,680 --> 00:42:00,839
and this is happening from some of the

912
00:42:00,839 --> 00:42:03,720
perspectives uh which is enforced by the

913
00:42:03,720 --> 00:42:05,940
vendors enforced by the governments and

914
00:42:05,940 --> 00:42:08,760
enforced by the industry uh all these

915
00:42:08,760 --> 00:42:11,839
supply chain security things

916
00:42:11,839 --> 00:42:16,619
it's actually helped a lot uh for uh

917
00:42:16,619 --> 00:42:18,660
paying more attention on the firmware

918
00:42:18,660 --> 00:42:20,880
remediate that action surfaces and

919
00:42:20,880 --> 00:42:24,599
actually reduce the time of response

920
00:42:24,599 --> 00:42:27,619
thank you very much

921
00:42:27,619 --> 00:42:29,359
and

922
00:42:29,359 --> 00:42:34,440
that's my uh hope for today but I open

923
00:42:34,440 --> 00:42:36,640
for the questions

924
00:42:36,640 --> 00:42:42,100
[Music]

