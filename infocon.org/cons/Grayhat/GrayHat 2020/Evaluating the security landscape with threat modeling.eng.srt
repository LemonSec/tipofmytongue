1
00:00:06,720 --> 00:00:07,440
so

2
00:00:07,440 --> 00:00:10,480
hello hello hello everyone uh first of

3
00:00:10,480 --> 00:00:12,000
all i would like to

4
00:00:12,000 --> 00:00:14,240
thank the gray hat committee for

5
00:00:14,240 --> 00:00:16,560
inviting me here to talk and

6
00:00:16,560 --> 00:00:18,720
i would also like to welcome all the

7
00:00:18,720 --> 00:00:20,240
audience here

8
00:00:20,240 --> 00:00:23,279
for attending the talk today i will be

9
00:00:23,279 --> 00:00:26,000
talking on evaluating the security

10
00:00:26,000 --> 00:00:28,720
landscape with threat modeling

11
00:00:28,720 --> 00:00:31,199
so a bit about my background here uh my

12
00:00:31,199 --> 00:00:32,079
name is shail

13
00:00:32,079 --> 00:00:35,440
aka bin dcb i'm a security researcher

14
00:00:35,440 --> 00:00:38,239
and an application security engineer at

15
00:00:38,239 --> 00:00:39,840
a forum assembly now

16
00:00:39,840 --> 00:00:42,160
uh previously i had worked on the

17
00:00:42,160 --> 00:00:44,399
security and residency of industrial

18
00:00:44,399 --> 00:00:46,640
control systems

19
00:00:46,640 --> 00:00:49,520
in various capacities and i also

20
00:00:49,520 --> 00:00:50,960
participate in

21
00:00:50,960 --> 00:00:53,360
bug bounty programs and ctf sometimes

22
00:00:53,360 --> 00:00:55,760
when i can

23
00:00:55,760 --> 00:00:58,960
as of now i have two years of uh

24
00:00:58,960 --> 00:01:02,239
in infosec experience and uh

25
00:01:02,239 --> 00:01:04,640
when not working uh you'll either find

26
00:01:04,640 --> 00:01:05,600
me

27
00:01:05,600 --> 00:01:08,320
climbing mountains or doing some fun

28
00:01:08,320 --> 00:01:10,240
activities

29
00:01:10,240 --> 00:01:13,119
so all right uh let's get started here

30
00:01:13,119 --> 00:01:13,760
uh

31
00:01:13,760 --> 00:01:15,040
uh let's get started here with

32
00:01:15,040 --> 00:01:16,880
motivation first so uh

33
00:01:16,880 --> 00:01:18,560
let's question ourselves what

34
00:01:18,560 --> 00:01:20,240
information or

35
00:01:20,240 --> 00:01:22,960
power the organization has that is very

36
00:01:22,960 --> 00:01:23,439
much

37
00:01:23,439 --> 00:01:26,799
valuable to an adversary so

38
00:01:26,799 --> 00:01:28,960
uh once this assets uh start

39
00:01:28,960 --> 00:01:30,560
accumulating in the mind uh

40
00:01:30,560 --> 00:01:32,560
we we start framing more obvious

41
00:01:32,560 --> 00:01:33,920
questions such as uh

42
00:01:33,920 --> 00:01:37,040
where is this information located or

43
00:01:37,040 --> 00:01:39,280
how do we get it if we you really need

44
00:01:39,280 --> 00:01:40,320
it so

45
00:01:40,320 --> 00:01:42,960
now every company should uh aggregate

46
00:01:42,960 --> 00:01:44,320
the data sets in

47
00:01:44,320 --> 00:01:46,960
regards to security and should also

48
00:01:46,960 --> 00:01:49,119
evaluate such data sets

49
00:01:49,119 --> 00:01:51,759
so and and honestly companies collect

50
00:01:51,759 --> 00:01:52,799
and store

51
00:01:52,799 --> 00:01:55,680
enormous uh assets uh that are of less

52
00:01:55,680 --> 00:01:56,880
value to them

53
00:01:56,880 --> 00:01:59,600
uh than to a bad guy so uh it is

54
00:01:59,600 --> 00:02:00,880
essential that we

55
00:02:00,880 --> 00:02:03,040
have a better understanding of our

56
00:02:03,040 --> 00:02:03,920
application

57
00:02:03,920 --> 00:02:06,960
or infrastructure and how it interacts

58
00:02:06,960 --> 00:02:07,439
with

59
00:02:07,439 --> 00:02:09,919
other external entities and predict what

60
00:02:09,919 --> 00:02:11,200
can go wrong

61
00:02:11,200 --> 00:02:13,200
so that it includes identifying the

62
00:02:13,200 --> 00:02:15,520
areas that an attacker would be

63
00:02:15,520 --> 00:02:16,800
interested in

64
00:02:16,800 --> 00:02:19,200
so uh instead of drilling down on a

65
00:02:19,200 --> 00:02:20,800
single point of failure

66
00:02:20,800 --> 00:02:23,040
we can use brainstorming techniques and

67
00:02:23,040 --> 00:02:25,760
uh go abroad and aim for

68
00:02:25,760 --> 00:02:29,200
uh the coverage of the system so it's

69
00:02:29,200 --> 00:02:30,239
dependencies

70
00:02:30,239 --> 00:02:31,920
and awareness of the interaction

71
00:02:31,920 --> 00:02:33,360
including so

72
00:02:33,360 --> 00:02:36,319
ask yourself this question so what if my

73
00:02:36,319 --> 00:02:38,640
credentials are stolen what if my

74
00:02:38,640 --> 00:02:40,480
credit card information is stolen or

75
00:02:40,480 --> 00:02:41,920
what if we get hit by

76
00:02:41,920 --> 00:02:45,200
a ransomware or what if someone hijacks

77
00:02:45,200 --> 00:02:48,720
the database so once we have located and

78
00:02:48,720 --> 00:02:50,480
identified a potential threat

79
00:02:50,480 --> 00:02:53,280
we are coming up with a strategy to

80
00:02:53,280 --> 00:02:54,160
address and

81
00:02:54,160 --> 00:02:57,040
identify the problem with a viable

82
00:02:57,040 --> 00:02:57,920
approach

83
00:02:57,920 --> 00:03:01,599
so uh before before moving on i would

84
00:03:01,599 --> 00:03:02,640
like to

85
00:03:02,640 --> 00:03:05,040
emphasize the three terms in security

86
00:03:05,040 --> 00:03:06,560
here i'm sure everyone

87
00:03:06,560 --> 00:03:09,599
is aware of it since they are

88
00:03:09,599 --> 00:03:11,760
daily used in the security world and are

89
00:03:11,760 --> 00:03:14,159
sometimes mistakenly

90
00:03:14,159 --> 00:03:17,200
used synonyms of each other so

91
00:03:17,200 --> 00:03:18,959
it is essential to know the difference

92
00:03:18,959 --> 00:03:21,360
between uh when the reality

93
00:03:21,360 --> 00:03:24,159
a threat and a risk so this is an

94
00:03:24,159 --> 00:03:24,799
example

95
00:03:24,799 --> 00:03:28,080
uh by luka porgiani where he provides an

96
00:03:28,080 --> 00:03:28,879
example of

97
00:03:28,879 --> 00:03:31,040
lovely cottage in the middle of the

98
00:03:31,040 --> 00:03:32,959
forest and he

99
00:03:32,959 --> 00:03:36,319
suddenly this beer appears from nowhere

100
00:03:36,319 --> 00:03:38,000
from the front door

101
00:03:38,000 --> 00:03:40,799
now so in this case it is a very

102
00:03:40,799 --> 00:03:42,480
practical approach to

103
00:03:42,480 --> 00:03:45,360
understand three different terms so the

104
00:03:45,360 --> 00:03:46,239
open door

105
00:03:46,239 --> 00:03:49,360
is the vulnerability of course the beer

106
00:03:49,360 --> 00:03:51,280
in this case is the threat

107
00:03:51,280 --> 00:03:53,280
otherwise we are screwed as there is

108
00:03:53,280 --> 00:03:54,879
right so

109
00:03:54,879 --> 00:03:57,280
security is a part of the risk and uh

110
00:03:57,280 --> 00:03:58,640
it's a part of the game

111
00:03:58,640 --> 00:04:02,000
so now moving forward i'm a part of the

112
00:04:02,000 --> 00:04:04,799
product security team so we have to deal

113
00:04:04,799 --> 00:04:05,680
every day with

114
00:04:05,680 --> 00:04:08,720
security requirements from clients

115
00:04:08,720 --> 00:04:09,920
perspective and

116
00:04:09,920 --> 00:04:13,360
knowing that in security uh common ways

117
00:04:13,360 --> 00:04:14,239
of dealing with

118
00:04:14,239 --> 00:04:16,959
findings or exposing vulnerabilities

119
00:04:16,959 --> 00:04:17,519
would be

120
00:04:17,519 --> 00:04:19,759
starting uh with vulnerability

121
00:04:19,759 --> 00:04:20,720
assessments with

122
00:04:20,720 --> 00:04:23,600
previous scanners or or run full scope

123
00:04:23,600 --> 00:04:24,800
pen tests

124
00:04:24,800 --> 00:04:27,600
now some other ways are using static

125
00:04:27,600 --> 00:04:28,160
application

126
00:04:28,160 --> 00:04:31,520
security testing sas and uh dynamic

127
00:04:31,520 --> 00:04:33,280
application security testing

128
00:04:33,280 --> 00:04:36,560
dust to find security vulnerabilities

129
00:04:36,560 --> 00:04:38,880
so basically these are white box and

130
00:04:38,880 --> 00:04:41,520
black box uh security testing

131
00:04:41,520 --> 00:04:44,880
now uh also uh also active internet

132
00:04:44,880 --> 00:04:46,160
response uh

133
00:04:46,160 --> 00:04:48,880
or regularly scheduled audits and uh

134
00:04:48,880 --> 00:04:50,560
tracker reports are

135
00:04:50,560 --> 00:04:53,040
some of the useful means while looking

136
00:04:53,040 --> 00:04:54,160
for

137
00:04:54,160 --> 00:04:56,639
security flaws so this is also a common

138
00:04:56,639 --> 00:04:57,759
measure

139
00:04:57,759 --> 00:05:00,000
now uh well there are various reasons

140
00:05:00,000 --> 00:05:01,199
for opting

141
00:05:01,199 --> 00:05:04,400
uh threat modeling so why do we care now

142
00:05:04,400 --> 00:05:04,720
uh

143
00:05:04,720 --> 00:05:07,280
build a secure design or obviously bring

144
00:05:07,280 --> 00:05:08,800
security and

145
00:05:08,800 --> 00:05:11,120
development together and work as a

146
00:05:11,120 --> 00:05:13,039
successful devops team

147
00:05:13,039 --> 00:05:15,680
so it also helps us uh identify its

148
00:05:15,680 --> 00:05:18,479
rights uh compliance and then we can

149
00:05:18,479 --> 00:05:21,520
calculate the risk so

150
00:05:21,520 --> 00:05:24,400
when an engineering organization

151
00:05:24,400 --> 00:05:26,320
identifies and remediates a

152
00:05:26,320 --> 00:05:27,680
vulnerability in

153
00:05:27,680 --> 00:05:30,960
one of their products it is often useful

154
00:05:30,960 --> 00:05:31,680
to

155
00:05:31,680 --> 00:05:34,560
conduct a root cause analysis because in

156
00:05:34,560 --> 00:05:35,840
any kind of investigation

157
00:05:35,840 --> 00:05:38,160
all we care about is root cause analysis

158
00:05:38,160 --> 00:05:40,639
and mitigation right so

159
00:05:40,639 --> 00:05:42,560
considering consider from an

160
00:05:42,560 --> 00:05:44,160
applications perspective

161
00:05:44,160 --> 00:05:47,759
you plan to threat model every time

162
00:05:47,759 --> 00:05:50,720
so when new set of features are planned

163
00:05:50,720 --> 00:05:51,120
or

164
00:05:51,120 --> 00:05:54,240
when the development cycle has ended or

165
00:05:54,240 --> 00:05:57,520
prior to acquisition so this can

166
00:05:57,520 --> 00:06:00,880
successfully help an organization

167
00:06:00,880 --> 00:06:03,759
uh improve the efficiency of the

168
00:06:03,759 --> 00:06:05,600
devsicop cycle

169
00:06:05,600 --> 00:06:08,960
by writing more secure and uh

170
00:06:08,960 --> 00:06:12,319
i would say more robust code so

171
00:06:12,319 --> 00:06:14,639
but now the first things first uh before

172
00:06:14,639 --> 00:06:16,960
diver diving deeper into site modeling

173
00:06:16,960 --> 00:06:17,680
now

174
00:06:17,680 --> 00:06:19,759
how many of you have heard about the

175
00:06:19,759 --> 00:06:21,360
term type modeling

176
00:06:21,360 --> 00:06:23,280
i'm sure a few people must have and few

177
00:06:23,280 --> 00:06:24,720
people must have not

178
00:06:24,720 --> 00:06:26,319
but in threat modeling we start

179
00:06:26,319 --> 00:06:28,960
predicting what can possibly go wrong

180
00:06:28,960 --> 00:06:31,759
we start predicting the future what if

181
00:06:31,759 --> 00:06:34,080
what if and we start thinking the

182
00:06:34,080 --> 00:06:37,280
pipeline so we think like an anniversary

183
00:06:37,280 --> 00:06:41,120
now for for me the most practical way to

184
00:06:41,120 --> 00:06:43,120
demonstrate a vulnerability is to find

185
00:06:43,120 --> 00:06:44,160
it right

186
00:06:44,160 --> 00:06:47,039
so and exploit it of course so but

187
00:06:47,039 --> 00:06:49,759
threat modeling and an earlier stage in

188
00:06:49,759 --> 00:06:53,120
uh the software is an early in the

189
00:06:53,120 --> 00:06:54,800
software development life cycle

190
00:06:54,800 --> 00:06:58,639
now uh practically it is a method to

191
00:06:58,639 --> 00:07:01,280
anticipate the risk and consequence of

192
00:07:01,280 --> 00:07:02,400
the security threats

193
00:07:02,400 --> 00:07:05,759
faced by your product or your uh

194
00:07:05,759 --> 00:07:08,720
by your client so uh it can be applied

195
00:07:08,720 --> 00:07:10,479
to a wide variety of things

196
00:07:10,479 --> 00:07:13,280
now applications it can be software

197
00:07:13,280 --> 00:07:14,160
systems

198
00:07:14,160 --> 00:07:17,520
iots or ics

199
00:07:17,520 --> 00:07:20,240
or networks so the best part about

200
00:07:20,240 --> 00:07:21,599
threat modding is

201
00:07:21,599 --> 00:07:24,479
oftentimes we think that it is just for

202
00:07:24,479 --> 00:07:25,840
the security folks but

203
00:07:25,840 --> 00:07:28,400
uh essentially anyone can uh threat

204
00:07:28,400 --> 00:07:30,000
model including the

205
00:07:30,000 --> 00:07:32,560
software developers solution architects

206
00:07:32,560 --> 00:07:33,680
testers

207
00:07:33,680 --> 00:07:36,720
product owners project managers

208
00:07:36,720 --> 00:07:40,160
so all uh all developers software and

209
00:07:40,160 --> 00:07:42,319
system designers and architects should

210
00:07:42,319 --> 00:07:43,520
start to

211
00:07:43,520 --> 00:07:45,280
include threat modeling in their

212
00:07:45,280 --> 00:07:47,599
software development life cycle

213
00:07:47,599 --> 00:07:49,759
and uh also must also keep the threat

214
00:07:49,759 --> 00:07:50,800
model current

215
00:07:50,800 --> 00:07:53,919
and updated and running like just a cv

216
00:07:53,919 --> 00:07:55,199
database

217
00:07:55,199 --> 00:07:57,120
so it should reflect the new threats and

218
00:07:57,120 --> 00:07:58,639
mitigations as they

219
00:07:58,639 --> 00:08:02,479
arise very soon so

220
00:08:02,479 --> 00:08:04,720
moving on to the benefits of threat

221
00:08:04,720 --> 00:08:06,479
modeling here you can

222
00:08:06,479 --> 00:08:09,360
you will create your threat models and

223
00:08:09,360 --> 00:08:11,360
determine which mitigations are needed

224
00:08:11,360 --> 00:08:12,000
during an

225
00:08:12,000 --> 00:08:14,080
early stage of development of a new

226
00:08:14,080 --> 00:08:15,520
system

227
00:08:15,520 --> 00:08:18,960
or application or a feature and so

228
00:08:18,960 --> 00:08:21,680
assessing potential threats during the

229
00:08:21,680 --> 00:08:23,680
design phase of

230
00:08:23,680 --> 00:08:25,680
your project can save significant

231
00:08:25,680 --> 00:08:27,440
resources that might

232
00:08:27,440 --> 00:08:29,919
be needed to refactor the project to

233
00:08:29,919 --> 00:08:30,720
include

234
00:08:30,720 --> 00:08:33,599
risk mitigations during later phase of

235
00:08:33,599 --> 00:08:34,399
the project

236
00:08:34,399 --> 00:08:37,599
or most obvious benefit is and

237
00:08:37,599 --> 00:08:40,799
improved application security posture so

238
00:08:40,799 --> 00:08:42,958
uh one thing to note that obviously is

239
00:08:42,958 --> 00:08:45,519
we also try to get a specific risk-based

240
00:08:45,519 --> 00:08:47,120
area to focus our

241
00:08:47,120 --> 00:08:50,240
penetration testing on and for instance

242
00:08:50,240 --> 00:08:50,800
we can

243
00:08:50,800 --> 00:08:52,720
specifically look for cross-site

244
00:08:52,720 --> 00:08:54,800
scripting issues in

245
00:08:54,800 --> 00:08:57,440
targeted web applications and run some

246
00:08:57,440 --> 00:08:58,080
tests

247
00:08:58,080 --> 00:09:02,080
or but again uh not all can be

248
00:09:02,080 --> 00:09:04,800
found through scans and assessments

249
00:09:04,800 --> 00:09:06,080
especially the design level

250
00:09:06,080 --> 00:09:08,160
implementation flaws so

251
00:09:08,160 --> 00:09:10,480
applications are built from uh

252
00:09:10,480 --> 00:09:11,839
individual features

253
00:09:11,839 --> 00:09:15,200
uh and each feature can be attacked like

254
00:09:15,200 --> 00:09:17,920
attackers attacking pieces or in within

255
00:09:17,920 --> 00:09:20,480
the applications itself so

256
00:09:20,480 --> 00:09:22,640
additionally threats and when the

257
00:09:22,640 --> 00:09:23,920
abilities are

258
00:09:23,920 --> 00:09:27,680
lessened uh reducing the remediation

259
00:09:27,680 --> 00:09:28,240
cost

260
00:09:28,240 --> 00:09:31,279
and defects because of the impacts

261
00:09:31,279 --> 00:09:35,440
um so now a common way of looking at the

262
00:09:35,440 --> 00:09:36,240
threat model

263
00:09:36,240 --> 00:09:39,600
is that we decompose the application

264
00:09:39,600 --> 00:09:43,120
of our network our system

265
00:09:43,120 --> 00:09:45,600
and try to understand it from a holistic

266
00:09:45,600 --> 00:09:46,480
approach we

267
00:09:46,480 --> 00:09:49,040
consider everything from the approach

268
00:09:49,040 --> 00:09:50,000
perspective so

269
00:09:50,000 --> 00:09:53,040
this involves creating use cases to

270
00:09:53,040 --> 00:09:55,200
understand how the application is used

271
00:09:55,200 --> 00:09:57,760
or identifying entry points

272
00:09:57,760 --> 00:09:59,760
to see where a potential attacker could

273
00:09:59,760 --> 00:10:01,040
interact with

274
00:10:01,040 --> 00:10:03,360
the application or identifying the

275
00:10:03,360 --> 00:10:04,160
assets and

276
00:10:04,160 --> 00:10:07,440
trust levels uh but uh let me let me be

277
00:10:07,440 --> 00:10:09,440
clear that a failure to produce a fit

278
00:10:09,440 --> 00:10:10,079
model

279
00:10:10,079 --> 00:10:13,279
or prior to the development increases

280
00:10:13,279 --> 00:10:14,160
the risk of

281
00:10:14,160 --> 00:10:17,279
unforeseen security flaws now we can

282
00:10:17,279 --> 00:10:19,279
also include uh relevant uh decision

283
00:10:19,279 --> 00:10:20,079
models for

284
00:10:20,079 --> 00:10:22,720
triaging specific independent threads

285
00:10:22,720 --> 00:10:24,480
for instance uh

286
00:10:24,480 --> 00:10:27,360
while rolling a database instance and in

287
00:10:27,360 --> 00:10:28,079
case of

288
00:10:28,079 --> 00:10:30,320
a structured query language sequel we

289
00:10:30,320 --> 00:10:31,920
can plan to

290
00:10:31,920 --> 00:10:33,920
separate the control channel from the

291
00:10:33,920 --> 00:10:35,920
data channel and while

292
00:10:35,920 --> 00:10:37,760
writing the parameterized statements to

293
00:10:37,760 --> 00:10:39,680
be executed separately

294
00:10:39,680 --> 00:10:42,880
as this is one of the measures to

295
00:10:42,880 --> 00:10:45,760
prevent sql injection attacks from the

296
00:10:45,760 --> 00:10:46,720
early stage

297
00:10:46,720 --> 00:10:50,240
itself so uh validation of your

298
00:10:50,240 --> 00:10:52,560
uh threat model is the last thing you do

299
00:10:52,560 --> 00:10:53,920
as part of a

300
00:10:53,920 --> 00:10:56,079
threat modeling approach so there are a

301
00:10:56,079 --> 00:10:58,560
few tasks to be done here and

302
00:10:58,560 --> 00:11:00,959
it is best to keep them aligned uh with

303
00:11:00,959 --> 00:11:02,480
the order in which you

304
00:11:02,480 --> 00:11:05,760
did the previous work so uh therefore

305
00:11:05,760 --> 00:11:07,040
the validation task

306
00:11:07,040 --> 00:11:09,440
including checking the model checking

307
00:11:09,440 --> 00:11:11,279
that you look for each thread

308
00:11:11,279 --> 00:11:14,560
and checking your test so

309
00:11:14,560 --> 00:11:16,240
you probably also want to validate the

310
00:11:16,240 --> 00:11:18,640
model a second time

311
00:11:18,640 --> 00:11:21,279
as you get close to shipping or when

312
00:11:21,279 --> 00:11:23,839
you're in your deployment phase

313
00:11:23,839 --> 00:11:27,040
now identifying

314
00:11:27,040 --> 00:11:30,320
security requirements is not easy

315
00:11:30,320 --> 00:11:32,880
and not always been easy before and a

316
00:11:32,880 --> 00:11:34,880
diversity of perspectives will lead to

317
00:11:34,880 --> 00:11:36,640
better decision making

318
00:11:36,640 --> 00:11:38,320
now there will be always be another

319
00:11:38,320 --> 00:11:41,120
vulnerability or technical

320
00:11:41,120 --> 00:11:43,760
thread to find so bringing a wide

321
00:11:43,760 --> 00:11:45,440
variety of perspectives to

322
00:11:45,440 --> 00:11:47,600
the exercise makes brainstorming more

323
00:11:47,600 --> 00:11:49,200
robust

324
00:11:49,200 --> 00:11:51,440
it also increases the likelihood that

325
00:11:51,440 --> 00:11:53,440
you will identify the most important

326
00:11:53,440 --> 00:11:54,399
traits

327
00:11:54,399 --> 00:11:56,880
now fit modeling in a group helps to

328
00:11:56,880 --> 00:11:58,720
address risk holistically

329
00:11:58,720 --> 00:12:01,200
like like i said earlier risk in

330
00:12:01,200 --> 00:12:02,560
individual risk

331
00:12:02,560 --> 00:12:05,680
one by one and uh helps the whole team

332
00:12:05,680 --> 00:12:08,639
to learn how to think and talk

333
00:12:08,639 --> 00:12:11,040
effectively about security

334
00:12:11,040 --> 00:12:13,920
so when the system changes you need to

335
00:12:13,920 --> 00:12:15,200
configure

336
00:12:15,200 --> 00:12:17,600
the security impact of those changes so

337
00:12:17,600 --> 00:12:19,760
sometimes those impacts are not obvious

338
00:12:19,760 --> 00:12:22,880
now threat modeling can be done at any

339
00:12:22,880 --> 00:12:24,000
stage of development

340
00:12:24,000 --> 00:12:26,399
but uh i would prefer doing that early

341
00:12:26,399 --> 00:12:29,120
so that findings can inform the design

342
00:12:29,120 --> 00:12:32,079
also to know that we can fit model in

343
00:12:32,079 --> 00:12:35,040
the entire cyber space now

344
00:12:35,040 --> 00:12:37,839
include this in the id as well as the

345
00:12:37,839 --> 00:12:38,720
ics or

346
00:12:38,720 --> 00:12:41,680
iot space now however ics street

347
00:12:41,680 --> 00:12:42,639
modeling

348
00:12:42,639 --> 00:12:45,760
is not yet fully implemented due to the

349
00:12:45,760 --> 00:12:48,959
excess of the time consumption so

350
00:12:48,959 --> 00:12:51,519
when when you're accessing or an

351
00:12:51,519 --> 00:12:53,360
existing system that has

352
00:12:53,360 --> 00:12:56,560
existing design documentation spend time

353
00:12:56,560 --> 00:12:58,240
reviewing the documentation

354
00:12:58,240 --> 00:13:01,360
and the documentation may be out of date

355
00:13:01,360 --> 00:13:03,120
but it requires you to gather new

356
00:13:03,120 --> 00:13:04,800
information to

357
00:13:04,800 --> 00:13:07,839
update your documentation

358
00:13:08,959 --> 00:13:12,880
so uh a simple example scenario where a

359
00:13:12,880 --> 00:13:15,120
server gets compromised because of

360
00:13:15,120 --> 00:13:17,200
vulnerable web components now

361
00:13:17,200 --> 00:13:20,079
another possibility being username and

362
00:13:20,079 --> 00:13:22,079
passwords get stolen due to

363
00:13:22,079 --> 00:13:25,760
social engineering or a simple guess

364
00:13:25,760 --> 00:13:27,760
now either of the ways once the server

365
00:13:27,760 --> 00:13:29,120
is compromised and

366
00:13:29,120 --> 00:13:31,519
adversary you can start pivoting and do

367
00:13:31,519 --> 00:13:32,720
some lateral movements

368
00:13:32,720 --> 00:13:35,760
and or my gran my drop some ransomware

369
00:13:35,760 --> 00:13:36,560
in the system

370
00:13:36,560 --> 00:13:39,680
which propagates and encrypts even rest

371
00:13:39,680 --> 00:13:40,480
of the systems

372
00:13:40,480 --> 00:13:43,760
so the company will get lost eventually

373
00:13:43,760 --> 00:13:46,320
now obviously there will be reputation

374
00:13:46,320 --> 00:13:47,760
loss which

375
00:13:47,760 --> 00:13:50,320
in turn will result in the price drop

376
00:13:50,320 --> 00:13:52,399
and there will be lots of shares

377
00:13:52,399 --> 00:13:55,199
blah blah blah so there are certain

378
00:13:55,199 --> 00:13:55,600
things

379
00:13:55,600 --> 00:13:58,800
to be taken care of

380
00:13:58,880 --> 00:14:01,199
now uh the most of the attack methods

381
00:14:01,199 --> 00:14:03,199
are related to application security that

382
00:14:03,199 --> 00:14:03,519
are

383
00:14:03,519 --> 00:14:06,320
well documented and have recommendation

384
00:14:06,320 --> 00:14:08,240
mitigations available

385
00:14:08,240 --> 00:14:10,079
it is important to note that because

386
00:14:10,079 --> 00:14:11,360
companies are

387
00:14:11,360 --> 00:14:14,079
only needed to report data breaches that

388
00:14:14,079 --> 00:14:14,959
involve

389
00:14:14,959 --> 00:14:17,920
personal or either payment information

390
00:14:17,920 --> 00:14:18,720
so

391
00:14:18,720 --> 00:14:21,279
some attack categories uh often go

392
00:14:21,279 --> 00:14:22,639
unpassed

393
00:14:22,639 --> 00:14:25,040
especially in industrial control systems

394
00:14:25,040 --> 00:14:26,720
and scada networks

395
00:14:26,720 --> 00:14:29,279
so many other industry companies within

396
00:14:29,279 --> 00:14:30,480
the space might not know

397
00:14:30,480 --> 00:14:33,839
a scada or application threat exists

398
00:14:33,839 --> 00:14:34,399
until

399
00:14:34,399 --> 00:14:37,440
they are targeted themselves now

400
00:14:37,440 --> 00:14:39,920
when when a data breach occurs uh

401
00:14:39,920 --> 00:14:41,120
attackers don't

402
00:14:41,120 --> 00:14:43,519
always utilize information or access

403
00:14:43,519 --> 00:14:45,680
again right away they may they may use

404
00:14:45,680 --> 00:14:47,680
it for later time being

405
00:14:47,680 --> 00:14:50,560
now sometimes they wait uh for a

406
00:14:50,560 --> 00:14:52,320
calculated opportunity

407
00:14:52,320 --> 00:14:55,519
uh so according to this tell report

408
00:14:55,519 --> 00:14:58,959
here most of them these are nothing but

409
00:14:58,959 --> 00:15:01,440
common application based attacks that uh

410
00:15:01,440 --> 00:15:04,480
overlap with the ics attacks

411
00:15:04,480 --> 00:15:07,839
and uh some of them are common attacks

412
00:15:07,839 --> 00:15:08,880
such as

413
00:15:08,880 --> 00:15:11,680
oauth top 10 maybe like broken

414
00:15:11,680 --> 00:15:13,519
authentication

415
00:15:13,519 --> 00:15:15,920
missing input validation improper access

416
00:15:15,920 --> 00:15:17,120
control

417
00:15:17,120 --> 00:15:21,519
csrfs cryptographic issues and so on

418
00:15:21,519 --> 00:15:24,800
so yeah i mean and under

419
00:15:24,800 --> 00:15:27,920
another part is uh about cyber bulges so

420
00:15:27,920 --> 00:15:30,240
cyber movies are nothing but our gallery

421
00:15:30,240 --> 00:15:33,040
of usual suspects that we prefer

422
00:15:33,040 --> 00:15:35,279
now they're malicious or troublesome

423
00:15:35,279 --> 00:15:36,560
people that may

424
00:15:36,560 --> 00:15:39,920
form some uh threat or threat for the

425
00:15:39,920 --> 00:15:41,360
i.t systems or

426
00:15:41,360 --> 00:15:45,199
processes so the list includes crackers

427
00:15:45,199 --> 00:15:48,399
or opportunistic abusers

428
00:15:48,399 --> 00:15:51,440
common criminals incompetent or

429
00:15:51,440 --> 00:15:54,800
annoyed users insiders or

430
00:15:54,800 --> 00:15:57,040
nation state operators it can be anybody

431
00:15:57,040 --> 00:15:58,000
you can think of

432
00:15:58,000 --> 00:16:01,279
though so to be able to understand the

433
00:16:01,279 --> 00:16:03,519
cyber security threats that are relevant

434
00:16:03,519 --> 00:16:05,279
to the systems you

435
00:16:05,279 --> 00:16:07,279
are protecting you need to understand

436
00:16:07,279 --> 00:16:08,399
two things now

437
00:16:08,399 --> 00:16:10,959
first of all what data and resources you

438
00:16:10,959 --> 00:16:12,320
need to protect

439
00:16:12,320 --> 00:16:14,639
and secondly you need to understand who

440
00:16:14,639 --> 00:16:16,240
are motivated to attack

441
00:16:16,240 --> 00:16:18,560
or who are your attackers or who may

442
00:16:18,560 --> 00:16:19,360
cause

443
00:16:19,360 --> 00:16:22,240
security problems even by mistake are

444
00:16:22,240 --> 00:16:22,639
they

445
00:16:22,639 --> 00:16:25,199
uh internal employees or they disrental

446
00:16:25,199 --> 00:16:25,920
employees

447
00:16:25,920 --> 00:16:28,959
it can be anyone so

448
00:16:28,959 --> 00:16:31,040
cyber security threats that we face here

449
00:16:31,040 --> 00:16:34,240
are different depending on if we are

450
00:16:34,240 --> 00:16:37,440
defending a power plant or compared to a

451
00:16:37,440 --> 00:16:40,560
mobile application for you know making

452
00:16:40,560 --> 00:16:41,519
hair

453
00:16:41,519 --> 00:16:44,639
uh haircut appointments or uh

454
00:16:44,639 --> 00:16:46,320
taking the appointments for booking

455
00:16:46,320 --> 00:16:48,160
pizzas or

456
00:16:48,160 --> 00:16:50,240
movies or consider anything that runs an

457
00:16:50,240 --> 00:16:52,000
application so

458
00:16:52,000 --> 00:16:55,199
uh cyber boogies will help you uh so you

459
00:16:55,199 --> 00:16:56,240
won't run out of

460
00:16:56,240 --> 00:16:59,440
any ideas or thoughts or when you find

461
00:16:59,440 --> 00:17:00,880
it difficult to

462
00:17:00,880 --> 00:17:04,240
uh think like a hacker or attacker

463
00:17:04,240 --> 00:17:06,959
so one one more thing that i would like

464
00:17:06,959 --> 00:17:08,079
to mention is

465
00:17:08,079 --> 00:17:11,520
you can also get cyber bogey cards uh

466
00:17:11,520 --> 00:17:14,559
tech online so you might you might want

467
00:17:14,559 --> 00:17:16,160
to check them out

468
00:17:16,160 --> 00:17:19,199
uh many companies and organizations

469
00:17:19,199 --> 00:17:22,640
uh find the stars daunting of thinking

470
00:17:22,640 --> 00:17:24,079
like an attacker first and

471
00:17:24,079 --> 00:17:27,119
running adversarial simulation but uh

472
00:17:27,119 --> 00:17:28,480
threat modeling does not have to be

473
00:17:28,480 --> 00:17:30,320
overwhelming uh

474
00:17:30,320 --> 00:17:32,799
thinking think like an attacker and see

475
00:17:32,799 --> 00:17:34,160
what you can do as an

476
00:17:34,160 --> 00:17:37,600
adversary in terms of damage or

477
00:17:37,600 --> 00:17:41,120
abusing the reputation of a company so

478
00:17:41,120 --> 00:17:43,919
what's my what's my malicious motivation

479
00:17:43,919 --> 00:17:44,480
what's the

480
00:17:44,480 --> 00:17:47,120
end goal over here does an attacker want

481
00:17:47,120 --> 00:17:48,400
to

482
00:17:48,400 --> 00:17:51,760
damage the company reputation uh

483
00:17:51,760 --> 00:17:55,039
is he known internally identity doing

484
00:17:55,039 --> 00:17:57,120
this for a personal gain or

485
00:17:57,120 --> 00:18:00,240
benefit or personal agenda so

486
00:18:00,240 --> 00:18:02,320
okay and even if there's a data breach

487
00:18:02,320 --> 00:18:04,559
what what have this tool and what is the

488
00:18:04,559 --> 00:18:07,039
relevant information do we have enough

489
00:18:07,039 --> 00:18:08,880
intuitive response and foreign

490
00:18:08,880 --> 00:18:10,080
capabilities

491
00:18:10,080 --> 00:18:11,679
in place to figure out such minor

492
00:18:11,679 --> 00:18:13,679
details so

493
00:18:13,679 --> 00:18:15,840
so that we can prepare and uh different

494
00:18:15,840 --> 00:18:17,280
the applications and

495
00:18:17,280 --> 00:18:19,600
our systems and infrastructure in the

496
00:18:19,600 --> 00:18:21,600
timely and safe manner

497
00:18:21,600 --> 00:18:25,039
now even if they get your credentials

498
00:18:25,039 --> 00:18:27,679
or they steal your if they see your

499
00:18:27,679 --> 00:18:29,679
credit card information

500
00:18:29,679 --> 00:18:32,400
um do we have proper authentications or

501
00:18:32,400 --> 00:18:34,400
do we have multi-factor authentications

502
00:18:34,400 --> 00:18:35,600
in place to

503
00:18:35,600 --> 00:18:37,760
prevent such unauthorized access right

504
00:18:37,760 --> 00:18:38,640
so

505
00:18:38,640 --> 00:18:40,640
uh what specific threats or whether

506
00:18:40,640 --> 00:18:42,080
abilities we care

507
00:18:42,080 --> 00:18:44,880
from our infrastructure and application

508
00:18:44,880 --> 00:18:47,200
requirements perspective

509
00:18:47,200 --> 00:18:51,120
so think about that uh

510
00:18:51,120 --> 00:18:54,640
okay so now left shift

511
00:18:54,640 --> 00:18:58,400
refers to moving security sooner

512
00:18:58,400 --> 00:19:00,880
in the development process that's uh

513
00:19:00,880 --> 00:19:02,080
that's done in the

514
00:19:02,080 --> 00:19:05,200
earlier part of the cycle so as the

515
00:19:05,200 --> 00:19:06,320
solution moved

516
00:19:06,320 --> 00:19:09,919
through stages of design develop

517
00:19:09,919 --> 00:19:12,960
build or test or broad

518
00:19:12,960 --> 00:19:15,919
so security was often a final step prior

519
00:19:15,919 --> 00:19:17,600
to the deployment it was

520
00:19:17,600 --> 00:19:20,720
never considered in the beginning but uh

521
00:19:20,720 --> 00:19:23,600
security was merely wrapped up around

522
00:19:23,600 --> 00:19:26,559
the outside of the application prior to

523
00:19:26,559 --> 00:19:29,520
release to the end user so in this step

524
00:19:29,520 --> 00:19:30,640
necessarily

525
00:19:30,640 --> 00:19:33,760
added time so left shift uh

526
00:19:33,760 --> 00:19:37,039
is the shift lift is the fix to uh

527
00:19:37,039 --> 00:19:38,880
this all these problems that i mentioned

528
00:19:38,880 --> 00:19:41,120
earlier so

529
00:19:41,120 --> 00:19:43,120
now when it comes to the process of

530
00:19:43,120 --> 00:19:44,480
threat modeling as we

531
00:19:44,480 --> 00:19:47,919
reach further uh it's hard to answer

532
00:19:47,919 --> 00:19:50,400
uh what's your threat model uh people

533
00:19:50,400 --> 00:19:51,679
often use in

534
00:19:51,679 --> 00:19:54,960
approach uh centered or models or

535
00:19:54,960 --> 00:19:58,400
their assets or models of attackers

536
00:19:58,400 --> 00:20:01,679
or adversaries now assets something but

537
00:20:01,679 --> 00:20:03,679
they're valuable things that you have

538
00:20:03,679 --> 00:20:05,760
they there are small number of people

539
00:20:05,760 --> 00:20:07,760
who will benefit from

540
00:20:07,760 --> 00:20:10,960
uh acid-centric threat modeling now uh

541
00:20:10,960 --> 00:20:11,679
security

542
00:20:11,679 --> 00:20:14,320
experts as well as less technical people

543
00:20:14,320 --> 00:20:15,600
may be

544
00:20:15,600 --> 00:20:18,320
able to contribute to trade modeling uh

545
00:20:18,320 --> 00:20:20,480
by saying focusing on this thing or

546
00:20:20,480 --> 00:20:22,000
focusing on this asset

547
00:20:22,000 --> 00:20:24,480
so you don't necessarily need to be able

548
00:20:24,480 --> 00:20:25,120
to be a

549
00:20:25,120 --> 00:20:27,200
security expert in order to do the

550
00:20:27,200 --> 00:20:30,000
threat modeling

551
00:20:30,400 --> 00:20:33,679
so when people uh bring up assets

552
00:20:33,679 --> 00:20:36,720
as part of the threat modeling activity

553
00:20:36,720 --> 00:20:37,760
they often mean

554
00:20:37,760 --> 00:20:41,600
something an attacker want to access

555
00:20:41,600 --> 00:20:44,880
or attack or want to control or attack

556
00:20:44,880 --> 00:20:46,480
or want to destroy

557
00:20:46,480 --> 00:20:49,919
so it is yeah it is easy to assume that

558
00:20:49,919 --> 00:20:50,799
uh because

559
00:20:50,799 --> 00:20:53,280
someone is really running your code they

560
00:20:53,280 --> 00:20:54,000
trust you

561
00:20:54,000 --> 00:20:58,240
by default and or you uh can trust them

562
00:20:58,240 --> 00:21:00,320
so your customers may have carefully

563
00:21:00,320 --> 00:21:02,640
audited the code they have

564
00:21:02,640 --> 00:21:04,720
received from you so they may believe

565
00:21:04,720 --> 00:21:05,760
that your

566
00:21:05,760 --> 00:21:08,159
organization is generally generally

567
00:21:08,159 --> 00:21:09,679
trustworthy

568
00:21:09,679 --> 00:21:11,760
without wanting to expose their secrets

569
00:21:11,760 --> 00:21:12,799
to you so

570
00:21:12,799 --> 00:21:16,000
you holding the secrets is typically a

571
00:21:16,000 --> 00:21:17,200
security posture

572
00:21:17,200 --> 00:21:20,240
for example if you hold backups of their

573
00:21:20,240 --> 00:21:21,760
cryptographic keys

574
00:21:21,760 --> 00:21:23,520
they may be subject to an information

575
00:21:23,520 --> 00:21:26,559
disclosure threat via a subpoena or

576
00:21:26,559 --> 00:21:29,280
the legal demand that you can demand to

577
00:21:29,280 --> 00:21:30,320
reveal to them

578
00:21:30,320 --> 00:21:33,520
so once we gather everything

579
00:21:33,520 --> 00:21:36,480
we can uh context and data and then make

580
00:21:36,480 --> 00:21:38,159
the data flow diagrams which are nothing

581
00:21:38,159 --> 00:21:39,520
but dfts

582
00:21:39,520 --> 00:21:41,280
and then accordingly we can rank the

583
00:21:41,280 --> 00:21:42,840
threads and then plan for the

584
00:21:42,840 --> 00:21:45,840
mitigations

585
00:21:46,640 --> 00:21:50,159
so uh adding adding boundaries to

586
00:21:50,159 --> 00:21:53,360
show who controls what is a

587
00:21:53,360 --> 00:21:57,039
special way or simple way to improve the

588
00:21:57,039 --> 00:21:59,520
diagram so you can pretty see that

589
00:21:59,520 --> 00:22:01,440
easily see that there are threads that

590
00:22:01,440 --> 00:22:04,080
cross those boundaries and are likely

591
00:22:04,080 --> 00:22:05,840
important ones and may be in a good

592
00:22:05,840 --> 00:22:08,480
place to start identifying threats

593
00:22:08,480 --> 00:22:10,000
now this boundaries are nothing but

594
00:22:10,000 --> 00:22:12,240
they're called trash boundaries and you

595
00:22:12,240 --> 00:22:14,000
should draw them whenever different

596
00:22:14,000 --> 00:22:14,640
people

597
00:22:14,640 --> 00:22:17,280
control different things so good

598
00:22:17,280 --> 00:22:18,640
examples of this are

599
00:22:18,640 --> 00:22:22,080
accounts or network interfaces or

600
00:22:22,080 --> 00:22:25,679
vms or almost any way you can argue for

601
00:22:25,679 --> 00:22:28,640
access to places so also in terms of

602
00:22:28,640 --> 00:22:29,600
security

603
00:22:29,600 --> 00:22:31,919
it would be better if you utilize

604
00:22:31,919 --> 00:22:34,400
standardized existing facilities but

605
00:22:34,400 --> 00:22:38,240
obviously we can always customize now

606
00:22:38,240 --> 00:22:41,200
you can even think of trust from the

607
00:22:41,200 --> 00:22:43,360
perspective of confidentiality

608
00:22:43,360 --> 00:22:47,039
and integrity uh for example a

609
00:22:47,039 --> 00:22:49,120
change in the access control levels in

610
00:22:49,120 --> 00:22:51,200
your application where

611
00:22:51,200 --> 00:22:54,320
a specific role or a privilege level is

612
00:22:54,320 --> 00:22:55,039
required

613
00:22:55,039 --> 00:22:58,960
to access a resource or

614
00:22:58,960 --> 00:23:02,640
operation uh would be a change in trust

615
00:23:02,640 --> 00:23:03,840
level

616
00:23:03,840 --> 00:23:07,440
so another example would be

617
00:23:07,440 --> 00:23:10,159
at an entry point in your application

618
00:23:10,159 --> 00:23:11,360
where you might uh

619
00:23:11,360 --> 00:23:13,919
not fully because the data passed to

620
00:23:13,919 --> 00:23:15,440
that entry point right

621
00:23:15,440 --> 00:23:18,720
so now uh

622
00:23:18,720 --> 00:23:21,600
now that once we know what uh more about

623
00:23:21,600 --> 00:23:22,480
the why

624
00:23:22,480 --> 00:23:24,559
and how threat modelling it is time to

625
00:23:24,559 --> 00:23:26,400
take a deeper look into

626
00:23:26,400 --> 00:23:28,320
uh the data flow diagrams which are

627
00:23:28,320 --> 00:23:30,559
something like the dfds

628
00:23:30,559 --> 00:23:33,679
so and uh that's quite interesting uh

629
00:23:33,679 --> 00:23:34,320
because

630
00:23:34,320 --> 00:23:36,880
it provides you with the common

631
00:23:36,880 --> 00:23:38,480
understanding of your

632
00:23:38,480 --> 00:23:41,279
application uh it also creates the

633
00:23:41,279 --> 00:23:42,480
opportunity to

634
00:23:42,480 --> 00:23:45,520
identify where the important data

635
00:23:45,520 --> 00:23:49,440
is coming from and how it is processed

636
00:23:49,440 --> 00:23:50,000
and

637
00:23:50,000 --> 00:23:53,360
stored and uh working with a data flow

638
00:23:53,360 --> 00:23:54,000
diagram

639
00:23:54,000 --> 00:23:57,039
is a focused approach to uh technical

640
00:23:57,039 --> 00:23:58,000
development

641
00:23:58,000 --> 00:24:01,279
uh where you do more research up front

642
00:24:01,279 --> 00:24:01,919
before

643
00:24:01,919 --> 00:24:04,559
you get into the coding phase so that's

644
00:24:04,559 --> 00:24:06,159
the prior part

645
00:24:06,159 --> 00:24:10,400
uh a data flow diagram where dfd has a

646
00:24:10,400 --> 00:24:14,000
unique set of elements uh to represent

647
00:24:14,000 --> 00:24:17,520
different entities in a data flow uh

648
00:24:17,520 --> 00:24:20,000
as shown here so you can see that there

649
00:24:20,000 --> 00:24:20,640
are

650
00:24:20,640 --> 00:24:22,960
four types of different elements process

651
00:24:22,960 --> 00:24:25,279
data flow data store

652
00:24:25,279 --> 00:24:28,480
and external entity and each of these

653
00:24:28,480 --> 00:24:29,279
elements have

654
00:24:29,279 --> 00:24:32,400
appearances such that processes are

655
00:24:32,400 --> 00:24:35,600
represented by rounded rectangle or

656
00:24:35,600 --> 00:24:38,559
circle or double circle concentric

657
00:24:38,559 --> 00:24:40,400
circles

658
00:24:40,400 --> 00:24:43,200
all the data that we have is represented

659
00:24:43,200 --> 00:24:44,840
by the arrows

660
00:24:44,840 --> 00:24:48,000
then all the data store

661
00:24:48,000 --> 00:24:50,320
we represented that by two parallel

662
00:24:50,320 --> 00:24:52,080
lines and

663
00:24:52,080 --> 00:24:54,480
uh external entity of course we have

664
00:24:54,480 --> 00:24:57,279
rectangles with corners and

665
00:24:57,279 --> 00:24:59,200
each of them has its own meaning

666
00:24:59,200 --> 00:25:02,640
associated like i mentioned

667
00:25:02,640 --> 00:25:05,360
so uh these are the data flow diagrams

668
00:25:05,360 --> 00:25:06,240
dfds

669
00:25:06,240 --> 00:25:09,520
based on uh elements of our previous

670
00:25:09,520 --> 00:25:10,080
table

671
00:25:10,080 --> 00:25:14,159
uh from this like i mentioned here so

672
00:25:14,159 --> 00:25:15,679
the processes are

673
00:25:15,679 --> 00:25:19,039
round rounded rectangles which contain

674
00:25:19,039 --> 00:25:19,600
text

675
00:25:19,600 --> 00:25:22,640
uh more efficiently than circles

676
00:25:22,640 --> 00:25:26,240
so straight lines are simpler to follow

677
00:25:26,240 --> 00:25:28,720
thus they are they are used rather than

678
00:25:28,720 --> 00:25:29,279
curves

679
00:25:29,279 --> 00:25:33,039
as you can see here so

680
00:25:33,039 --> 00:25:35,600
historically many descriptions of data

681
00:25:35,600 --> 00:25:36,720
flow diagrams

682
00:25:36,720 --> 00:25:40,159
uh contain both process elements

683
00:25:40,159 --> 00:25:43,520
and complex process elements

684
00:25:43,520 --> 00:25:47,600
so a process was depicted as a circle

685
00:25:47,600 --> 00:25:50,159
a complex process has two concentric

686
00:25:50,159 --> 00:25:51,520
circles so

687
00:25:51,520 --> 00:25:54,240
there's a difference now it isn't

688
00:25:54,240 --> 00:25:55,279
entirely clear

689
00:25:55,279 --> 00:25:57,600
however when to use a normal process

690
00:25:57,600 --> 00:25:58,640
versus a

691
00:25:58,640 --> 00:26:02,240
complex one so one possible rule is that

692
00:26:02,240 --> 00:26:05,520
anything that has a sub diagram uh

693
00:26:05,520 --> 00:26:08,960
should be a complex process so hence a

694
00:26:08,960 --> 00:26:12,080
data flow diagram gives you a graphical

695
00:26:12,080 --> 00:26:13,279
representation

696
00:26:13,279 --> 00:26:16,080
of the data flow through an uh

697
00:26:16,080 --> 00:26:17,360
information system

698
00:26:17,360 --> 00:26:20,960
so this was nothing but a classic

699
00:26:20,960 --> 00:26:24,320
or a traditional dfd model here and note

700
00:26:24,320 --> 00:26:25,360
that there are quite

701
00:26:25,360 --> 00:26:27,600
a few frequency for in the model

702
00:26:27,600 --> 00:26:30,400
implementation as i mentioned

703
00:26:30,400 --> 00:26:33,840
so there is a high level uh

704
00:26:33,840 --> 00:26:36,960
single feature uh level one diagram

705
00:26:36,960 --> 00:26:40,400
uh that uses an online conference

706
00:26:40,400 --> 00:26:41,840
management uh system

707
00:26:41,840 --> 00:26:44,799
as an example here so there there are

708
00:26:44,799 --> 00:26:46,480
there are various entries

709
00:26:46,480 --> 00:26:49,600
as part of the system now previously we

710
00:26:49,600 --> 00:26:50,799
saw that our

711
00:26:50,799 --> 00:26:52,799
external entities are represented by

712
00:26:52,799 --> 00:26:54,159
rectangle shapes so

713
00:26:54,159 --> 00:26:56,000
here you can see that uh we have

714
00:26:56,000 --> 00:26:57,840
administrator

715
00:26:57,840 --> 00:27:01,120
we have credit card processor bank

716
00:27:01,120 --> 00:27:03,279
conference attendee so all these

717
00:27:03,279 --> 00:27:04,559
rectangle

718
00:27:04,559 --> 00:27:07,679
entities are they are shapes and

719
00:27:07,679 --> 00:27:10,720
they all represent our entities so

720
00:27:10,720 --> 00:27:13,279
in our case we also have the admin the

721
00:27:13,279 --> 00:27:15,120
bank the organizer

722
00:27:15,120 --> 00:27:18,559
or the attendee or any other external

723
00:27:18,559 --> 00:27:19,120
entity

724
00:27:19,120 --> 00:27:21,679
so each of this player different role

725
00:27:21,679 --> 00:27:22,559
here

726
00:27:22,559 --> 00:27:24,640
for instance administrator creates

727
00:27:24,640 --> 00:27:25,679
conferences

728
00:27:25,679 --> 00:27:30,080
and makes financial transactions

729
00:27:30,080 --> 00:27:33,360
our processes are administration

730
00:27:33,360 --> 00:27:36,960
conference registration uh management

731
00:27:36,960 --> 00:27:38,880
that handles the data within our

732
00:27:38,880 --> 00:27:40,480
application

733
00:27:40,480 --> 00:27:43,600
uh we can also observe that our

734
00:27:43,600 --> 00:27:46,240
that all our financial data here is

735
00:27:46,240 --> 00:27:47,440
stored as

736
00:27:47,440 --> 00:27:50,480
data store element and all the

737
00:27:50,480 --> 00:27:52,880
errors represent our data flow element

738
00:27:52,880 --> 00:27:54,720
here you can see that we have single

739
00:27:54,720 --> 00:27:55,360
arrows

740
00:27:55,360 --> 00:27:58,080
we have we have double arrows we have

741
00:27:58,080 --> 00:27:58,640
parallel

742
00:27:58,640 --> 00:28:01,600
arrows represented in our data flow here

743
00:28:01,600 --> 00:28:02,240
so

744
00:28:02,240 --> 00:28:04,399
each and every arrow and each and every

745
00:28:04,399 --> 00:28:06,000
data structure has its own

746
00:28:06,000 --> 00:28:07,840
representation

747
00:28:07,840 --> 00:28:11,520
within a data flow diagram

748
00:28:12,000 --> 00:28:15,200
now stride is a nothing but

749
00:28:15,200 --> 00:28:18,320
uh it's a mnemonic for things that uh

750
00:28:18,320 --> 00:28:21,679
go wrong in security now it uh

751
00:28:21,679 --> 00:28:25,200
it stands for spoofing it stands for

752
00:28:25,200 --> 00:28:26,320
tempering

753
00:28:26,320 --> 00:28:30,080
repudiation information disclosure

754
00:28:30,080 --> 00:28:32,960
denial of service and uh elevation of

755
00:28:32,960 --> 00:28:34,320
privileges

756
00:28:34,320 --> 00:28:36,799
so let's let's break them individually

757
00:28:36,799 --> 00:28:38,000
here now

758
00:28:38,000 --> 00:28:40,559
uh spoofing is pretending to be uh

759
00:28:40,559 --> 00:28:41,760
something or

760
00:28:41,760 --> 00:28:45,279
some money or not now and tempering is

761
00:28:45,279 --> 00:28:47,039
modifying something you are not supposed

762
00:28:47,039 --> 00:28:49,120
to modify it it can

763
00:28:49,120 --> 00:28:52,159
include packets on wire or

764
00:28:52,159 --> 00:28:55,360
wireless pets on the disk

765
00:28:55,360 --> 00:28:57,760
or which is the memory which is nothing

766
00:28:57,760 --> 00:28:59,120
but your dram

767
00:28:59,120 --> 00:29:03,039
or your regular memory ram or

768
00:29:03,039 --> 00:29:05,520
repetition means uh claiming you didn't

769
00:29:05,520 --> 00:29:07,360
do something i mean regardless of

770
00:29:07,360 --> 00:29:09,200
whether you did it or not uh

771
00:29:09,200 --> 00:29:13,279
you can see that uh and for last last

772
00:29:13,279 --> 00:29:14,720
last is nothing but information

773
00:29:14,720 --> 00:29:16,399
disclosure as uh

774
00:29:16,399 --> 00:29:18,399
obvious is it's about exposing

775
00:29:18,399 --> 00:29:20,240
information to people

776
00:29:20,240 --> 00:29:23,520
who are not authorized to see it so uh

777
00:29:23,520 --> 00:29:27,440
if you're not sure where to start uh

778
00:29:27,440 --> 00:29:28,960
so you can start with the external

779
00:29:28,960 --> 00:29:31,360
entities or events which drive

780
00:29:31,360 --> 00:29:35,120
the activities so by that what i mean is

781
00:29:35,120 --> 00:29:36,080
there are not many

782
00:29:36,080 --> 00:29:37,919
uh there are many other valid approaches

783
00:29:37,919 --> 00:29:40,000
though so you you might start with the

784
00:29:40,000 --> 00:29:41,360
web browser

785
00:29:41,360 --> 00:29:43,760
uh might look for spoofing then

786
00:29:43,760 --> 00:29:44,960
tampering and

787
00:29:44,960 --> 00:29:47,520
so on so you can also start with the

788
00:29:47,520 --> 00:29:48,720
business logic if

789
00:29:48,720 --> 00:29:53,360
uh perhaps your lead developer for

790
00:29:53,360 --> 00:29:56,559
that component is in the room so

791
00:29:56,559 --> 00:29:58,640
whenever you choose to begin you you

792
00:29:58,640 --> 00:30:00,240
want to aspire to

793
00:30:00,240 --> 00:30:03,600
some level of organization so

794
00:30:03,600 --> 00:30:06,159
uh you could also go in stride order

795
00:30:06,159 --> 00:30:07,279
through the diagram

796
00:30:07,279 --> 00:30:10,240
as mentioned here

797
00:30:12,480 --> 00:30:15,360
so uh you can you can use details now

798
00:30:15,360 --> 00:30:16,480
how to apply star

799
00:30:16,480 --> 00:30:19,279
stride exactly but uh before talking

800
00:30:19,279 --> 00:30:21,919
that we can we have to mention that

801
00:30:21,919 --> 00:30:26,000
you can use details from our

802
00:30:26,000 --> 00:30:28,080
previous step here in the stride phase

803
00:30:28,080 --> 00:30:29,440
to

804
00:30:29,440 --> 00:30:31,440
identify threats relevant to your

805
00:30:31,440 --> 00:30:32,960
application scenario

806
00:30:32,960 --> 00:30:36,960
and context so now with stride you can

807
00:30:36,960 --> 00:30:39,360
flawlessly identify what what can go

808
00:30:39,360 --> 00:30:40,480
wrong in your

809
00:30:40,480 --> 00:30:44,159
uh design pattern or your implementation

810
00:30:44,159 --> 00:30:47,919
now uh we can spoof a program by

811
00:30:47,919 --> 00:30:50,960
starting a program of the same name

812
00:30:50,960 --> 00:30:53,679
or by pulling a program with that name

813
00:30:53,679 --> 00:30:54,480
or

814
00:30:54,480 --> 00:30:57,760
on the disk you can also spoof the users

815
00:30:57,760 --> 00:30:58,159
by

816
00:30:58,159 --> 00:31:00,080
capturing their authentication

817
00:31:00,080 --> 00:31:02,240
information by

818
00:31:02,240 --> 00:31:05,600
spoofing a site or by assuming they use

819
00:31:05,600 --> 00:31:07,679
the credentials or tokens across the

820
00:31:07,679 --> 00:31:08,880
sites

821
00:31:08,880 --> 00:31:11,760
or by brute forcing it can be done

822
00:31:11,760 --> 00:31:12,320
either

823
00:31:12,320 --> 00:31:16,000
online or it can be done offline

824
00:31:16,000 --> 00:31:19,120
or by elevating the privileges on their

825
00:31:19,120 --> 00:31:23,200
machines so you can also temper with the

826
00:31:23,200 --> 00:31:26,399
authentication database and then spoof

827
00:31:26,399 --> 00:31:29,919
with the falsified credentials so

828
00:31:29,919 --> 00:31:33,039
note that as you are using stride to uh

829
00:31:33,039 --> 00:31:35,919
look for threats you're simply

830
00:31:35,919 --> 00:31:38,000
enumerating the things that uh

831
00:31:38,000 --> 00:31:40,880
might go wrong so you're basically

832
00:31:40,880 --> 00:31:42,080
asking the questions

833
00:31:42,080 --> 00:31:46,720
who how why what how do you do it so

834
00:31:46,720 --> 00:31:48,559
there there's a series of questions that

835
00:31:48,559 --> 00:31:49,840
you need to follow to

836
00:31:49,840 --> 00:31:53,519
go through that now so

837
00:31:53,519 --> 00:31:56,320
note that uh you're using stride to look

838
00:31:56,320 --> 00:31:56,640
for

839
00:31:56,640 --> 00:31:59,679
thread so the exact mechanism for how it

840
00:31:59,679 --> 00:32:01,200
can go wrong or

841
00:32:01,200 --> 00:32:03,360
something that you can develop later and

842
00:32:03,360 --> 00:32:05,840
work with your rest of the team

843
00:32:05,840 --> 00:32:09,039
so i also like to mention that

844
00:32:09,039 --> 00:32:12,000
you will sometimes hear stride referred

845
00:32:12,000 --> 00:32:13,200
to as

846
00:32:13,200 --> 00:32:17,679
stride categories or the strike taxonomy

847
00:32:17,679 --> 00:32:19,519
these are the multiple names or

848
00:32:19,519 --> 00:32:21,360
nomenclatures uh

849
00:32:21,360 --> 00:32:24,399
referring to the strike category so this

850
00:32:24,399 --> 00:32:25,600
framework is

851
00:32:25,600 --> 00:32:28,240
the streaming is not helpful because the

852
00:32:28,240 --> 00:32:30,480
stride was not intended as

853
00:32:30,480 --> 00:32:33,840
nor is it generally useful for

854
00:32:33,840 --> 00:32:37,200
i would say categorization so

855
00:32:37,200 --> 00:32:40,399
the goal of the stride is to help you

856
00:32:40,399 --> 00:32:41,039
find

857
00:32:41,039 --> 00:32:45,360
attacks and then categorizing them

858
00:32:45,360 --> 00:32:48,080
uh might help you figure out the right

859
00:32:48,080 --> 00:32:50,320
defense controls or

860
00:32:50,320 --> 00:32:53,600
then it might be a waste of effort so

861
00:32:53,600 --> 00:32:57,440
be to be careful regarding that

862
00:32:57,440 --> 00:33:01,039
now uh earlier earlier we saw that the

863
00:33:01,039 --> 00:33:03,840
data flow diagram of a conference

864
00:33:03,840 --> 00:33:06,159
management system now

865
00:33:06,159 --> 00:33:08,559
this represents its physical view of the

866
00:33:08,559 --> 00:33:11,039
same conference management system

867
00:33:11,039 --> 00:33:14,320
now consider the scenario where we have

868
00:33:14,320 --> 00:33:17,200
uh hosted our infrastructure with the

869
00:33:17,200 --> 00:33:19,200
various components so

870
00:33:19,200 --> 00:33:22,320
we also have credit card processor over

871
00:33:22,320 --> 00:33:24,240
here we have the bank and

872
00:33:24,240 --> 00:33:26,880
uh that is used to process the financial

873
00:33:26,880 --> 00:33:28,960
data and then

874
00:33:28,960 --> 00:33:31,600
we have registration data into the

875
00:33:31,600 --> 00:33:33,679
database server

876
00:33:33,679 --> 00:33:36,799
uh a client on the other hand here wants

877
00:33:36,799 --> 00:33:37,440
to

878
00:33:37,440 --> 00:33:39,679
authenticate the credentials and log

879
00:33:39,679 --> 00:33:41,200
into the web pages

880
00:33:41,200 --> 00:33:44,399
within our directories here so note that

881
00:33:44,399 --> 00:33:45,760
there is nothing but

882
00:33:45,760 --> 00:33:48,960
developing a threat model for

883
00:33:48,960 --> 00:33:52,640
the conference management system so uh

884
00:33:52,640 --> 00:33:57,039
moving on to before before treating our

885
00:33:57,039 --> 00:33:59,919
stride tree uh it is important that we

886
00:33:59,919 --> 00:34:00,559
understand

887
00:34:00,559 --> 00:34:03,679
all the trust levels and boundaries

888
00:34:03,679 --> 00:34:05,679
corresponding to our scenario here

889
00:34:05,679 --> 00:34:08,480
so if you think from an attacker's

890
00:34:08,480 --> 00:34:09,839
perspective

891
00:34:09,839 --> 00:34:11,599
what could what would be the various

892
00:34:11,599 --> 00:34:12,879
entry points to

893
00:34:12,879 --> 00:34:16,800
log into the system or take a note

894
00:34:16,800 --> 00:34:20,079
of various possible endpoints so

895
00:34:20,079 --> 00:34:22,480
each of these entry points uh have

896
00:34:22,480 --> 00:34:23,839
predefined

897
00:34:23,839 --> 00:34:27,119
uh trust levels for the accesses

898
00:34:27,119 --> 00:34:30,399
uh for instance uh admin as well as a

899
00:34:30,399 --> 00:34:32,639
normal user with a

900
00:34:32,639 --> 00:34:35,839
valid login credentials can have access

901
00:34:35,839 --> 00:34:36,560
to

902
00:34:36,560 --> 00:34:39,679
a search engine page so um

903
00:34:39,679 --> 00:34:42,320
you can classify like who can enter into

904
00:34:42,320 --> 00:34:44,560
your system you can trick model and

905
00:34:44,560 --> 00:34:47,040
walk through all the process and then

906
00:34:47,040 --> 00:34:49,199
identify the endpoints your

907
00:34:49,199 --> 00:34:51,918
adversaries and then compare it with

908
00:34:51,918 --> 00:34:53,679
your thrust levels

909
00:34:53,679 --> 00:34:57,280
and break the boundaries

910
00:34:57,280 --> 00:35:00,560
so now our attack factor tree for

911
00:35:00,560 --> 00:35:03,839
spoofing uh

912
00:35:09,920 --> 00:35:13,359
social engineering now they might use

913
00:35:13,359 --> 00:35:13,839
drop

914
00:35:13,839 --> 00:35:17,280
on the channel and uh sniff some

915
00:35:17,280 --> 00:35:20,000
data and try to decode it and play

916
00:35:20,000 --> 00:35:21,599
around with it now

917
00:35:21,599 --> 00:35:25,359
they might they even might try xss and

918
00:35:25,359 --> 00:35:27,440
further escalate the crosstalk shifting

919
00:35:27,440 --> 00:35:29,440
within abd to

920
00:35:29,440 --> 00:35:33,440
chrfs for credential stealing and

921
00:35:33,440 --> 00:35:36,800
other disclosure methods include being a

922
00:35:36,800 --> 00:35:37,440
victim

923
00:35:37,440 --> 00:35:40,960
or fishing or either a spam so

924
00:35:40,960 --> 00:35:43,599
attacker can further try spoofing by

925
00:35:43,599 --> 00:35:46,000
spoofing the user id details or

926
00:35:46,000 --> 00:35:49,200
you can try password resets there are

927
00:35:49,200 --> 00:35:51,280
lots of mechanisms that they can

928
00:35:51,280 --> 00:35:52,800
implement here

929
00:35:52,800 --> 00:35:56,000
and lastly as a remediation we outlined

930
00:35:56,000 --> 00:35:56,720
them

931
00:35:56,720 --> 00:36:00,240
at the bottom level so

932
00:36:00,240 --> 00:36:03,359
uh within within our start tree here

933
00:36:03,359 --> 00:36:06,079
at the very top we we identify the third

934
00:36:06,079 --> 00:36:08,160
actor and then

935
00:36:08,160 --> 00:36:11,119
we create the branches the possible

936
00:36:11,119 --> 00:36:12,960
attacks and the possible attack

937
00:36:12,960 --> 00:36:13,839
scenarios

938
00:36:13,839 --> 00:36:16,720
with vectors and then at the very bottom

939
00:36:16,720 --> 00:36:17,280
we

940
00:36:17,280 --> 00:36:20,079
uh we design or recommend the medication

941
00:36:20,079 --> 00:36:22,240
uh at the bottom of the tree

942
00:36:22,240 --> 00:36:25,680
so okay so there is a similarity for

943
00:36:25,680 --> 00:36:29,760
tampering with system data integrity now

944
00:36:29,760 --> 00:36:33,920
several reasons here from malwares to

945
00:36:33,920 --> 00:36:37,119
potential uh leakage along with the

946
00:36:37,119 --> 00:36:40,800
extended causes such as uh no liberty

947
00:36:40,800 --> 00:36:41,520
assessments

948
00:36:41,520 --> 00:36:44,720
uh storing data in plain text uh no

949
00:36:44,720 --> 00:36:47,760
antivirus no antivirus solutions no av

950
00:36:47,760 --> 00:36:50,560
so uh we can have we can apply uh

951
00:36:50,560 --> 00:36:52,480
mitigation keys uh

952
00:36:52,480 --> 00:36:55,599
for this uh as shown here uh

953
00:36:55,599 --> 00:36:58,720
just in this diagram so uh

954
00:36:58,720 --> 00:37:01,040
problems related to reputation now but

955
00:37:01,040 --> 00:37:02,320
uh

956
00:37:02,320 --> 00:37:04,960
improper log management along with user

957
00:37:04,960 --> 00:37:05,760
management

958
00:37:05,760 --> 00:37:09,119
so a potential solution can be to

959
00:37:09,119 --> 00:37:12,560
implement a cm cm is uh security

960
00:37:12,560 --> 00:37:15,280
information event management

961
00:37:15,280 --> 00:37:18,640
uh for log monitoring you can also

962
00:37:18,640 --> 00:37:21,520
uh audit the user accounts and check for

963
00:37:21,520 --> 00:37:22,000
default

964
00:37:22,000 --> 00:37:24,240
passwords big credentials strong

965
00:37:24,240 --> 00:37:26,640
credentials

966
00:37:26,640 --> 00:37:30,480
you can also include mfas

967
00:37:30,480 --> 00:37:33,760
multi-factor authentications

968
00:37:33,760 --> 00:37:37,440
you can use the digital signatures

969
00:37:37,440 --> 00:37:41,440
for further prevention so

970
00:37:41,440 --> 00:37:43,359
ask ask this question what else can be

971
00:37:43,359 --> 00:37:45,680
leaked from the data

972
00:37:45,680 --> 00:37:49,359
information disclosure category so

973
00:37:49,359 --> 00:37:51,760
access control lists are not implemented

974
00:37:51,760 --> 00:37:52,880
here so

975
00:37:52,880 --> 00:37:54,560
you know there is a fine chance of

976
00:37:54,560 --> 00:37:56,320
session hijacking

977
00:37:56,320 --> 00:37:59,359
or injection based attacks as well

978
00:37:59,359 --> 00:38:02,079
now information due to errors from

979
00:38:02,079 --> 00:38:02,880
database

980
00:38:02,880 --> 00:38:06,079
also falls in the category now uh

981
00:38:06,079 --> 00:38:08,079
their prevent prevention tree is shown

982
00:38:08,079 --> 00:38:09,520
here below use

983
00:38:09,520 --> 00:38:12,720
access controlling uh secure session

984
00:38:12,720 --> 00:38:13,920
management

985
00:38:13,920 --> 00:38:17,680
input validation sanitization

986
00:38:17,680 --> 00:38:20,880
proper handling techniques for

987
00:38:20,880 --> 00:38:24,880
prevention so

988
00:38:24,880 --> 00:38:27,520
two more threat categories uh are shown

989
00:38:27,520 --> 00:38:28,880
here finally so

990
00:38:28,880 --> 00:38:31,440
there are uh there are several reasons

991
00:38:31,440 --> 00:38:32,800
for causing

992
00:38:32,800 --> 00:38:35,680
denial of service within a specific

993
00:38:35,680 --> 00:38:37,040
provider or within

994
00:38:37,040 --> 00:38:39,440
a specific service it can be through

995
00:38:39,440 --> 00:38:40,480
power failure

996
00:38:40,480 --> 00:38:45,119
storms or hurricanes tornadoes and

997
00:38:45,119 --> 00:38:48,400
uh icmb based attacks uh

998
00:38:48,400 --> 00:38:51,520
internet control message protocol or

999
00:38:51,520 --> 00:38:54,480
tcp sensor attack uh page nail of

1000
00:38:54,480 --> 00:38:55,920
service or

1001
00:38:55,920 --> 00:38:58,960
is there a domain defacement uh

1002
00:38:58,960 --> 00:39:02,640
so the solution would be to implement uh

1003
00:39:02,640 --> 00:39:05,440
intrusion detection systems to get rid

1004
00:39:05,440 --> 00:39:06,960
of botnets or

1005
00:39:06,960 --> 00:39:09,440
uh to manage the failover clusters for

1006
00:39:09,440 --> 00:39:11,680
resting the failures

1007
00:39:11,680 --> 00:39:14,720
um and uh alternative

1008
00:39:14,720 --> 00:39:17,760
uh would be to have uninterruptible

1009
00:39:17,760 --> 00:39:20,000
power supplies so ups

1010
00:39:20,000 --> 00:39:23,040
and uh you can also place vaps

1011
00:39:23,040 --> 00:39:26,320
or run pen tests or whatever

1012
00:39:26,320 --> 00:39:28,800
bt scans for preventing some known

1013
00:39:28,800 --> 00:39:29,920
attacks

1014
00:39:29,920 --> 00:39:32,960
but how can an attacker

1015
00:39:32,960 --> 00:39:35,599
gain access to the systems elevating

1016
00:39:35,599 --> 00:39:37,040
privileges

1017
00:39:37,040 --> 00:39:40,800
so known bugs or you know known cbs

1018
00:39:40,800 --> 00:39:43,440
broken authentication backdraw accounts

1019
00:39:43,440 --> 00:39:45,200
can be notorious

1020
00:39:45,200 --> 00:39:48,400
or similar prevention trees can be

1021
00:39:48,400 --> 00:39:51,119
drawn at the bottom level or for

1022
00:39:51,119 --> 00:39:55,040
elevation of the privileges as well

1023
00:39:55,440 --> 00:39:58,079
now let's say let's say if your

1024
00:39:58,079 --> 00:39:59,599
company's website where

1025
00:39:59,599 --> 00:40:02,400
defaced uh this could cause damage to

1026
00:40:02,400 --> 00:40:04,079
your company's reputation

1027
00:40:04,079 --> 00:40:07,760
of of course now which maintain cause

1028
00:40:07,760 --> 00:40:09,359
the loss of business

1029
00:40:09,359 --> 00:40:12,079
because of loss of confidence by your

1030
00:40:12,079 --> 00:40:13,599
users now

1031
00:40:13,599 --> 00:40:16,079
depending on the business you are in

1032
00:40:16,079 --> 00:40:16,640
attack

1033
00:40:16,640 --> 00:40:19,599
attacks that expose user information

1034
00:40:19,599 --> 00:40:21,839
could potentially result in the physical

1035
00:40:21,839 --> 00:40:22,319
threat

1036
00:40:22,319 --> 00:40:25,359
or maybe it may be loss of life to your

1037
00:40:25,359 --> 00:40:28,800
users or vaguely raising the impact of

1038
00:40:28,800 --> 00:40:30,079
threats for

1039
00:40:30,079 --> 00:40:33,680
uh allows exposure so a

1040
00:40:33,680 --> 00:40:36,319
variety of factors can implement the

1041
00:40:36,319 --> 00:40:38,880
likelihood of a threat

1042
00:40:38,880 --> 00:40:41,440
being carried out including how

1043
00:40:41,440 --> 00:40:42,560
difficult

1044
00:40:42,560 --> 00:40:44,960
the implementation of the threat is and

1045
00:40:44,960 --> 00:40:47,119
how rewarding it is

1046
00:40:47,119 --> 00:40:50,079
for the attacker now for instance if the

1047
00:40:50,079 --> 00:40:52,000
threat required a skilled

1048
00:40:52,000 --> 00:40:55,760
protector with tens of thousands

1049
00:40:55,760 --> 00:40:59,119
of dollars of computing resources to

1050
00:40:59,119 --> 00:40:59,760
implement

1051
00:40:59,760 --> 00:41:01,920
and the only reward was that they were

1052
00:41:01,920 --> 00:41:03,040
able to

1053
00:41:03,040 --> 00:41:05,760
gain access to information that is

1054
00:41:05,760 --> 00:41:06,480
always

1055
00:41:06,480 --> 00:41:09,920
public in some form so the likelihood is

1056
00:41:09,920 --> 00:41:11,119
very low for that

1057
00:41:11,119 --> 00:41:13,680
so also take a note of how likely the

1058
00:41:13,680 --> 00:41:15,119
third will occur

1059
00:41:15,119 --> 00:41:17,520
so once we have once we do that we

1060
00:41:17,520 --> 00:41:19,760
identify the risk owners and

1061
00:41:19,760 --> 00:41:22,800
agree on the risk mitigation as part of

1062
00:41:22,800 --> 00:41:24,720
risk handling mechanism with

1063
00:41:24,720 --> 00:41:28,319
risk owners and rest of the stakeholders

1064
00:41:28,319 --> 00:41:31,280
so then we provide the cool upgrades and

1065
00:41:31,280 --> 00:41:33,839
configuration updates and

1066
00:41:33,839 --> 00:41:37,040
prioritize everything accordingly and so

1067
00:41:37,040 --> 00:41:40,319
that would be our priority

1068
00:41:40,319 --> 00:41:43,839
so apart from apart from stride uh

1069
00:41:43,839 --> 00:41:46,880
we we have we also have a process for

1070
00:41:46,880 --> 00:41:47,440
attacks

1071
00:41:47,440 --> 00:41:49,760
uh simulation and threat analysis which

1072
00:41:49,760 --> 00:41:51,760
is nothing but a pasta

1073
00:41:51,760 --> 00:41:54,000
as a risk centric threat modding

1074
00:41:54,000 --> 00:41:55,200
approach

1075
00:41:55,200 --> 00:41:58,319
so we also have visual

1076
00:41:58,319 --> 00:42:02,480
agile and simple thread modeling

1077
00:42:02,480 --> 00:42:05,280
uh that is based on threat modeler and

1078
00:42:05,280 --> 00:42:08,240
automated offset modeling platform

1079
00:42:08,240 --> 00:42:11,680
now uh we know that uh trike was created

1080
00:42:11,680 --> 00:42:12,000
as

1081
00:42:12,000 --> 00:42:15,040
a security audit framework that uses

1082
00:42:15,040 --> 00:42:17,440
strict modeling as a technique

1083
00:42:17,440 --> 00:42:21,680
now it looks at threat modeling from

1084
00:42:21,680 --> 00:42:24,400
risk management and defensive

1085
00:42:24,400 --> 00:42:25,359
perspectives

1086
00:42:25,359 --> 00:42:29,760
and so trike has a vegan

1087
00:42:29,760 --> 00:42:31,760
sufficient documentation so that's why

1088
00:42:31,760 --> 00:42:33,440
we avoid using

1089
00:42:33,440 --> 00:42:36,800
that category for threat modeling

1090
00:42:36,800 --> 00:42:40,240
next we have htmm that is nothing but

1091
00:42:40,240 --> 00:42:43,359
hybrid threat modeling method now

1092
00:42:43,359 --> 00:42:47,680
htmm contains built-in prioritization

1093
00:42:47,680 --> 00:42:51,040
of fit mitigation now

1094
00:42:51,040 --> 00:42:54,079
there we see the mod is besides this

1095
00:42:54,079 --> 00:42:56,880
existing models and one of the models

1096
00:42:56,880 --> 00:42:59,200
that i'd like to mention is tread

1097
00:42:59,200 --> 00:43:01,520
uh which is just like a strike model but

1098
00:43:01,520 --> 00:43:04,079
uh thread model is outdated and we

1099
00:43:04,079 --> 00:43:06,720
we don't implement it anymore so i don't

1100
00:43:06,720 --> 00:43:09,520
integrate that

1101
00:43:10,319 --> 00:43:13,359
now uh there are different kinds of uh

1102
00:43:13,359 --> 00:43:15,359
threat modeling tools available on the

1103
00:43:15,359 --> 00:43:16,800
internet but uh

1104
00:43:16,800 --> 00:43:19,839
i can tell you that uh trade dragon

1105
00:43:19,839 --> 00:43:22,160
is straightforward and easy to

1106
00:43:22,160 --> 00:43:22,960
comprehend

1107
00:43:22,960 --> 00:43:26,480
now it includes system diagramming

1108
00:43:26,480 --> 00:43:29,920
and a rule engine to auto generate

1109
00:43:29,920 --> 00:43:31,280
threats and mitigation

1110
00:43:31,280 --> 00:43:34,720
so this is the tool intended to be used

1111
00:43:34,720 --> 00:43:36,000
by

1112
00:43:36,000 --> 00:43:38,240
software development teams that includes

1113
00:43:38,240 --> 00:43:39,760
developers

1114
00:43:39,760 --> 00:43:43,359
operations people devops folks

1115
00:43:43,359 --> 00:43:47,200
or user experience specialists so

1116
00:43:47,200 --> 00:43:49,760
third dragon uses the same stride

1117
00:43:49,760 --> 00:43:52,160
modeling framework as a baseline

1118
00:43:52,160 --> 00:43:55,280
for their threat modeling now it also

1119
00:43:55,280 --> 00:43:56,160
provides you

1120
00:43:56,160 --> 00:43:59,280
the option to add your threats

1121
00:43:59,280 --> 00:44:01,119
but does not provide you to change the

1122
00:44:01,119 --> 00:44:02,640
framework so

1123
00:44:02,640 --> 00:44:04,640
however the source code is available on

1124
00:44:04,640 --> 00:44:07,359
the kitab so if you want to

1125
00:44:07,359 --> 00:44:10,079
contribute towards embedding other

1126
00:44:10,079 --> 00:44:11,680
frameworks like uh

1127
00:44:11,680 --> 00:44:15,839
attack trees track or pasta just feel

1128
00:44:15,839 --> 00:44:17,520
free to sign up

1129
00:44:17,520 --> 00:44:20,800
so yeah threat modeling has different

1130
00:44:20,800 --> 00:44:21,520
features

1131
00:44:21,520 --> 00:44:24,400
now it allows you to create your own

1132
00:44:24,400 --> 00:44:25,280
attack trees

1133
00:44:25,280 --> 00:44:28,960
and write down your potential threats

1134
00:44:28,960 --> 00:44:32,560
so in this example this was a dfd

1135
00:44:32,560 --> 00:44:36,079
for sql injection prevention

1136
00:44:36,079 --> 00:44:38,480
so that's why i had written here there's

1137
00:44:38,480 --> 00:44:41,200
a potential blind sqli between the two

1138
00:44:41,200 --> 00:44:42,400
hosts because

1139
00:44:42,400 --> 00:44:45,599
i had two of my hosts running which were

1140
00:44:45,599 --> 00:44:49,040
a part of my back end so

1141
00:44:49,040 --> 00:44:51,440
again we uh have the microsoft thread

1142
00:44:51,440 --> 00:44:52,640
modding tool here

1143
00:44:52,640 --> 00:44:55,280
so i think this is a version 2020 new

1144
00:44:55,280 --> 00:44:56,560
version here

1145
00:44:56,560 --> 00:44:59,119
so uh this this there's nothing but uses

1146
00:44:59,119 --> 00:44:59,599
uh

1147
00:44:59,599 --> 00:45:03,119
data flow diagrams dfds and identifies

1148
00:45:03,119 --> 00:45:06,560
threats based on stride categorization

1149
00:45:06,560 --> 00:45:09,920
so uh besides this tool uh

1150
00:45:09,920 --> 00:45:11,920
threat modeler is an interesting tool

1151
00:45:11,920 --> 00:45:13,760
based on the vast

1152
00:45:13,760 --> 00:45:17,200
threat modeling technology vasd now

1153
00:45:17,200 --> 00:45:20,079
it is developed for uh current devops

1154
00:45:20,079 --> 00:45:20,720
teams

1155
00:45:20,720 --> 00:45:23,839
and it gives rooms for several

1156
00:45:23,839 --> 00:45:26,960
uh departments to work together with

1157
00:45:26,960 --> 00:45:28,240
csus and

1158
00:45:28,240 --> 00:45:32,400
other security experts so note that uh

1159
00:45:32,400 --> 00:45:34,720
microsoft uh thread modding tool uses

1160
00:45:34,720 --> 00:45:36,160
stride framework and

1161
00:45:36,160 --> 00:45:39,119
uh over here within our framework it

1162
00:45:39,119 --> 00:45:40,160
allows you to

1163
00:45:40,160 --> 00:45:43,440
create your own dfds and uh categorize

1164
00:45:43,440 --> 00:45:43,760
your

1165
00:45:43,760 --> 00:45:47,119
potential threats and risking them

1166
00:45:47,119 --> 00:45:47,920
according to

1167
00:45:47,920 --> 00:45:51,119
just like third dragon

1168
00:45:53,839 --> 00:45:57,680
so now in a company in a company what

1169
00:45:57,680 --> 00:45:59,040
threats would you consider

1170
00:45:59,040 --> 00:46:02,480
from a customer's perspective now

1171
00:46:02,480 --> 00:46:04,640
let's say we have three entities here we

1172
00:46:04,640 --> 00:46:06,079
have alice

1173
00:46:06,079 --> 00:46:09,839
we have bob and mallory in our company

1174
00:46:09,839 --> 00:46:10,880
network

1175
00:46:10,880 --> 00:46:14,400
now alice does all the auditing and uh

1176
00:46:14,400 --> 00:46:17,680
handling of all the user accounts

1177
00:46:17,680 --> 00:46:20,400
bob sees remote most of the time and

1178
00:46:20,400 --> 00:46:21,599
handles

1179
00:46:21,599 --> 00:46:25,680
client documents it can be anything from

1180
00:46:25,680 --> 00:46:28,720
insurance papers to the employee page

1181
00:46:28,720 --> 00:46:29,280
tabs

1182
00:46:29,280 --> 00:46:32,000
it can be anything or any other private

1183
00:46:32,000 --> 00:46:33,520
information

1184
00:46:33,520 --> 00:46:37,200
now mallory also has access to some

1185
00:46:37,200 --> 00:46:40,480
limited internal documents so they all

1186
00:46:40,480 --> 00:46:42,000
need username and

1187
00:46:42,000 --> 00:46:45,280
password for authentication here so uh

1188
00:46:45,280 --> 00:46:48,319
once you gather all the relevant data or

1189
00:46:48,319 --> 00:46:51,200
from the company for this particular

1190
00:46:51,200 --> 00:46:53,119
three users you can

1191
00:46:53,119 --> 00:46:55,280
always create a walkthrough you can ask

1192
00:46:55,280 --> 00:46:57,280
questions and then simulate your threat

1193
00:46:57,280 --> 00:47:00,240
model accordingly

1194
00:47:01,119 --> 00:47:04,400
so uh customers demand

1195
00:47:04,400 --> 00:47:07,680
secure products out of the box and so

1196
00:47:07,680 --> 00:47:09,920
security should be a top priority that

1197
00:47:09,920 --> 00:47:11,520
should be on the top of the mind of

1198
00:47:11,520 --> 00:47:12,880
everyone

1199
00:47:12,880 --> 00:47:15,760
but without a standard approach to

1200
00:47:15,760 --> 00:47:17,040
security it is

1201
00:47:17,040 --> 00:47:20,720
uh almost impossible to deliver on

1202
00:47:20,720 --> 00:47:24,000
the customers expectations so that's

1203
00:47:24,000 --> 00:47:25,839
where the security development life

1204
00:47:25,839 --> 00:47:26,319
cycle

1205
00:47:26,319 --> 00:47:29,839
sdl comes in now over the years

1206
00:47:29,839 --> 00:47:33,680
multiple sdlc models have emerged from

1207
00:47:33,680 --> 00:47:37,119
waterfall and i treat you to

1208
00:47:37,119 --> 00:47:39,920
more efficiently which is agile and ci

1209
00:47:39,920 --> 00:47:41,040
cd

1210
00:47:41,040 --> 00:47:43,680
which uh increases the speed and

1211
00:47:43,680 --> 00:47:46,000
frequency of development

1212
00:47:46,000 --> 00:47:49,359
so uh lack of the standard approach

1213
00:47:49,359 --> 00:47:53,520
to securing products causes problems so

1214
00:47:53,520 --> 00:47:55,920
for one thing vulnerabilities are in

1215
00:47:55,920 --> 00:47:56,960
rampant in

1216
00:47:56,960 --> 00:47:59,760
ship products they are everywhere so you

1217
00:47:59,760 --> 00:48:01,280
just need to hunt them

1218
00:48:01,280 --> 00:48:04,880
uh also that the triage and the response

1219
00:48:04,880 --> 00:48:06,559
needed to

1220
00:48:06,559 --> 00:48:09,280
deal with this are major resource things

1221
00:48:09,280 --> 00:48:09,680
saying

1222
00:48:09,680 --> 00:48:12,559
so there are lots of uh resources that

1223
00:48:12,559 --> 00:48:14,400
you would be needing lots of time and

1224
00:48:14,400 --> 00:48:16,240
efforts and energy to

1225
00:48:16,240 --> 00:48:18,880
triage every tickets and all these

1226
00:48:18,880 --> 00:48:20,000
phases

1227
00:48:20,000 --> 00:48:23,920
so the design fees of the sdl consists

1228
00:48:23,920 --> 00:48:24,640
of

1229
00:48:24,640 --> 00:48:28,160
activities that occur hopefully prior to

1230
00:48:28,160 --> 00:48:30,480
writing the code so that should be

1231
00:48:30,480 --> 00:48:32,640
before our build process

1232
00:48:32,640 --> 00:48:36,319
now secure design is about quantifying

1233
00:48:36,319 --> 00:48:36,559
an

1234
00:48:36,559 --> 00:48:40,079
architecture for either a single feature

1235
00:48:40,079 --> 00:48:43,200
or the entire product and then searching

1236
00:48:43,200 --> 00:48:44,559
for problems so

1237
00:48:44,559 --> 00:48:46,960
with with many systems the plane is in

1238
00:48:46,960 --> 00:48:48,000
the air as

1239
00:48:48,000 --> 00:48:51,599
the wings are being designed but the sdl

1240
00:48:51,599 --> 00:48:53,599
can survive even this craziness

1241
00:48:53,599 --> 00:48:57,440
so the key is to use threat modeling so

1242
00:48:57,440 --> 00:48:59,359
and i would highly recommend perform

1243
00:48:59,359 --> 00:49:00,720
threat modeling

1244
00:49:00,720 --> 00:49:03,760
preferably as early as possible in your

1245
00:49:03,760 --> 00:49:04,720
uh

1246
00:49:04,720 --> 00:49:08,079
hdlc cycle include early so

1247
00:49:08,079 --> 00:49:11,680
uh the testing fee should include uh

1248
00:49:11,680 --> 00:49:13,839
security testing dynamic security

1249
00:49:13,839 --> 00:49:16,000
testing that uses

1250
00:49:16,000 --> 00:49:20,240
automated devsecops tools to improve the

1251
00:49:20,240 --> 00:49:23,599
application security now uh

1252
00:49:23,599 --> 00:49:26,319
formal test activities includes secure

1253
00:49:26,319 --> 00:49:28,480
security functional test plan

1254
00:49:28,480 --> 00:49:30,559
or vulnerability scannings and

1255
00:49:30,559 --> 00:49:32,400
penetration testing

1256
00:49:32,400 --> 00:49:34,559
and uh vulnerability scanning uses

1257
00:49:34,559 --> 00:49:36,720
industry standard tools to determine

1258
00:49:36,720 --> 00:49:39,920
if any level of uh system level

1259
00:49:39,920 --> 00:49:42,000
vulnerabilities exist with uh

1260
00:49:42,000 --> 00:49:46,079
the application or the product itself so

1261
00:49:46,079 --> 00:49:49,119
keeping that in mind now within

1262
00:49:49,119 --> 00:49:52,400
within our sdlc uh within our software

1263
00:49:52,400 --> 00:49:54,160
development life cycle

1264
00:49:54,160 --> 00:49:56,240
best practices for security are

1265
00:49:56,240 --> 00:49:57,280
integrated

1266
00:49:57,280 --> 00:50:00,319
into the product now this practices may

1267
00:50:00,319 --> 00:50:01,119
come from

1268
00:50:01,119 --> 00:50:04,079
industry standards or be based on

1269
00:50:04,079 --> 00:50:06,240
responses to problems that have occurred

1270
00:50:06,240 --> 00:50:08,160
either in the past or maybe

1271
00:50:08,160 --> 00:50:11,280
it may be based on past decades now

1272
00:50:11,280 --> 00:50:14,000
requirements may take the classic form

1273
00:50:14,000 --> 00:50:16,000
stating that the protector

1274
00:50:16,000 --> 00:50:18,800
application must me or should or do

1275
00:50:18,800 --> 00:50:20,079
something

1276
00:50:20,079 --> 00:50:22,640
so one example might be that the product

1277
00:50:22,640 --> 00:50:23,920
must enforce a

1278
00:50:23,920 --> 00:50:26,319
minimum password length of maybe six

1279
00:50:26,319 --> 00:50:27,040
characters

1280
00:50:27,040 --> 00:50:30,400
eight characters lower combinations not

1281
00:50:30,400 --> 00:50:31,040
allowed

1282
00:50:31,040 --> 00:50:33,280
upper combination is not allowed use

1283
00:50:33,280 --> 00:50:35,680
multiple blah blah blah

1284
00:50:35,680 --> 00:50:38,800
so a solid thread model understands

1285
00:50:38,800 --> 00:50:43,040
a of our products attack surface then

1286
00:50:43,040 --> 00:50:45,119
it defines the most likely attacks that

1287
00:50:45,119 --> 00:50:46,079
will occur

1288
00:50:46,079 --> 00:50:49,200
through those interfaces and uh threat

1289
00:50:49,200 --> 00:50:51,839
model is only as good as mitigations

1290
00:50:51,839 --> 00:50:55,520
as it continues to fix the problems

1291
00:50:55,520 --> 00:50:58,400
uh but it is also crucial to identifying

1292
00:50:58,400 --> 00:50:59,599
security issues

1293
00:50:59,599 --> 00:51:02,000
early in the process like i mentioned

1294
00:51:02,000 --> 00:51:03,440
include sdlc

1295
00:51:03,440 --> 00:51:05,359
uh include threat modeling early in your

1296
00:51:05,359 --> 00:51:07,119
sjc process

1297
00:51:07,119 --> 00:51:10,000
so the sdl contains a few things

1298
00:51:10,000 --> 00:51:12,559
programmers must do to ensure that their

1299
00:51:12,559 --> 00:51:14,000
code has been

1300
00:51:14,000 --> 00:51:16,960
a best chance of being secure so the

1301
00:51:16,960 --> 00:51:18,640
process involves

1302
00:51:18,640 --> 00:51:21,599
a mixing of standards and automated

1303
00:51:21,599 --> 00:51:22,079
tools

1304
00:51:22,079 --> 00:51:26,160
so uh os software assurance

1305
00:51:26,160 --> 00:51:29,280
maturity model sam is an open

1306
00:51:29,280 --> 00:51:32,319
framework for implementing a strategy

1307
00:51:32,319 --> 00:51:33,280
for

1308
00:51:33,280 --> 00:51:35,760
software security to the specific risks

1309
00:51:35,760 --> 00:51:37,680
facing the organizations or

1310
00:51:37,680 --> 00:51:41,280
maybe companies also note that the other

1311
00:51:41,280 --> 00:51:43,280
models include a nice model

1312
00:51:43,280 --> 00:51:47,680
or the microsoft sdl model

1313
00:51:48,160 --> 00:51:51,920
so uh fit modeling helps protect sensory

1314
00:51:51,920 --> 00:51:52,800
data

1315
00:51:52,800 --> 00:51:55,599
uh with within the applications while

1316
00:51:55,599 --> 00:51:57,280
increasing the communication

1317
00:51:57,280 --> 00:52:00,880
and collaboration between the security

1318
00:52:00,880 --> 00:52:04,559
development and operation teams

1319
00:52:04,559 --> 00:52:06,640
it's not always easy to implement but

1320
00:52:06,640 --> 00:52:07,599
there are

1321
00:52:07,599 --> 00:52:10,480
great reasons for doing uh so properly

1322
00:52:10,480 --> 00:52:10,880
so

1323
00:52:10,880 --> 00:52:14,240
the end fruits are always useful now

1324
00:52:14,240 --> 00:52:15,920
also known that when threat modeling is

1325
00:52:15,920 --> 00:52:17,280
conducted on

1326
00:52:17,280 --> 00:52:19,200
a consistent basis throughout an

1327
00:52:19,200 --> 00:52:20,640
organization's

1328
00:52:20,640 --> 00:52:23,440
application portfolio secure designs

1329
00:52:23,440 --> 00:52:25,200
pattern begin to emerge that can be

1330
00:52:25,200 --> 00:52:26,960
documented and then you can

1331
00:52:26,960 --> 00:52:29,839
leverage that by application development

1332
00:52:29,839 --> 00:52:30,800
teams

1333
00:52:30,800 --> 00:52:32,800
so this again contributes to the

1334
00:52:32,800 --> 00:52:33,839
establishment of

1335
00:52:33,839 --> 00:52:37,280
a proactive circumference culture so

1336
00:52:37,280 --> 00:52:40,000
standard design patterns and

1337
00:52:40,000 --> 00:52:42,000
requirements developed from

1338
00:52:42,000 --> 00:52:45,119
set modeling can can go a long way

1339
00:52:45,119 --> 00:52:46,800
towards reducing

1340
00:52:46,800 --> 00:52:50,160
risk to the organization and also remove

1341
00:52:50,160 --> 00:52:51,760
a lot of variety

1342
00:52:51,760 --> 00:52:53,760
and complexity and security

1343
00:52:53,760 --> 00:52:55,440
architectures that uh

1344
00:52:55,440 --> 00:52:57,680
often leads to data beaches so that's a

1345
00:52:57,680 --> 00:52:59,520
problem

1346
00:52:59,520 --> 00:53:02,640
so uh okay so

1347
00:53:02,640 --> 00:53:04,720
uh most commonly asked question is how

1348
00:53:04,720 --> 00:53:06,000
do you know if a

1349
00:53:06,000 --> 00:53:08,880
trade model is complete now uh

1350
00:53:08,880 --> 00:53:10,960
unfortunately fit model analysis can

1351
00:53:10,960 --> 00:53:13,440
become quite non-linear often

1352
00:53:13,440 --> 00:53:16,800
recursive despite our best efforts to

1353
00:53:16,800 --> 00:53:19,520
torture the process into a sequence of

1354
00:53:19,520 --> 00:53:20,960
descript steps

1355
00:53:20,960 --> 00:53:23,520
so a threat model exercises much a

1356
00:53:23,520 --> 00:53:24,640
journey through

1357
00:53:24,640 --> 00:53:28,079
guesses firmly based on study and

1358
00:53:28,079 --> 00:53:30,960
experience as it is in the exercise in

1359
00:53:30,960 --> 00:53:31,520
applying

1360
00:53:31,520 --> 00:53:34,720
engineering certainties or principles

1361
00:53:34,720 --> 00:53:39,040
so security objectives specific are

1362
00:53:39,040 --> 00:53:42,000
subject a subset of project objectives

1363
00:53:42,000 --> 00:53:44,079
and you should use them to guide

1364
00:53:44,079 --> 00:53:47,200
your trade modeling efforts so you may

1365
00:53:47,200 --> 00:53:48,000
find it uh

1366
00:53:48,000 --> 00:53:50,319
helpful to think of security objectives

1367
00:53:50,319 --> 00:53:52,880
in terms of constraints so

1368
00:53:52,880 --> 00:53:55,680
let's say what do you not want to happen

1369
00:53:55,680 --> 00:53:56,160
for

1370
00:53:56,160 --> 00:53:59,280
uh for any for example an attacker must

1371
00:53:59,280 --> 00:54:00,000
not be

1372
00:54:00,000 --> 00:54:03,040
able to steal user credit card

1373
00:54:03,040 --> 00:54:04,880
related information or any other

1374
00:54:04,880 --> 00:54:06,400
credentials

1375
00:54:06,400 --> 00:54:08,640
so by identifying your key security

1376
00:54:08,640 --> 00:54:10,240
objectives you can determine

1377
00:54:10,240 --> 00:54:12,800
where to function or where to focus your

1378
00:54:12,800 --> 00:54:13,760
efforts

1379
00:54:13,760 --> 00:54:15,839
now identifying your objectives also

1380
00:54:15,839 --> 00:54:18,240
helps you to understand the goals of

1381
00:54:18,240 --> 00:54:20,800
potential attackers and concentrate on

1382
00:54:20,800 --> 00:54:22,480
those areas of your

1383
00:54:22,480 --> 00:54:25,040
application that require closer

1384
00:54:25,040 --> 00:54:26,480
attention

1385
00:54:26,480 --> 00:54:29,200
for example if you identify customer

1386
00:54:29,200 --> 00:54:31,359
account details as sensitive data that

1387
00:54:31,359 --> 00:54:32,240
needs

1388
00:54:32,240 --> 00:54:34,559
protecting then you can examine how

1389
00:54:34,559 --> 00:54:36,799
security the data is stored and

1390
00:54:36,799 --> 00:54:38,880
how access to the data is controlled and

1391
00:54:38,880 --> 00:54:41,359
audited exactly so

1392
00:54:41,359 --> 00:54:42,640
and hence we have to create a

1393
00:54:42,640 --> 00:54:45,040
step-by-step model based on uh

1394
00:54:45,040 --> 00:54:48,480
those needs exactly so

1395
00:54:48,480 --> 00:54:52,079
uh many times threats will be mitigated

1396
00:54:52,079 --> 00:54:55,200
uh by the addition of features uh which

1397
00:54:55,200 --> 00:54:56,240
can be designed

1398
00:54:56,240 --> 00:54:59,520
developed tested and delivered

1399
00:54:59,520 --> 00:55:02,079
much like other features so that is one

1400
00:55:02,079 --> 00:55:04,079
part of the departing thought so

1401
00:55:04,079 --> 00:55:06,480
it's also important to think about what

1402
00:55:06,480 --> 00:55:08,720
an attacker will do next or

1403
00:55:08,720 --> 00:55:11,520
given your mitigations uh are

1404
00:55:11,520 --> 00:55:12,720
implemented

1405
00:55:12,720 --> 00:55:15,520
how can they bypass the controls uh you

1406
00:55:15,520 --> 00:55:17,359
might think of threats and mitigations

1407
00:55:17,359 --> 00:55:19,599
like the black and white pieces on a

1408
00:55:19,599 --> 00:55:21,440
chessboard so

1409
00:55:21,440 --> 00:55:24,720
the attacker can move and when they move

1410
00:55:24,720 --> 00:55:26,720
their relationship to the pieces can

1411
00:55:26,720 --> 00:55:27,760
change

1412
00:55:27,760 --> 00:55:30,160
so as you design the mitigation ask what

1413
00:55:30,160 --> 00:55:32,160
an attacker can do once you deliver that

1414
00:55:32,160 --> 00:55:33,280
mitigation

1415
00:55:33,280 --> 00:55:35,599
how could they work around it and bypass

1416
00:55:35,599 --> 00:55:36,559
it uh

1417
00:55:36,559 --> 00:55:38,640
our third modeling uh should involve

1418
00:55:38,640 --> 00:55:40,799
imagining the various scenarios and how

1419
00:55:40,799 --> 00:55:42,720
we would react as well as

1420
00:55:42,720 --> 00:55:44,880
ask questions such as how do we

1421
00:55:44,880 --> 00:55:45,839
determine

1422
00:55:45,839 --> 00:55:48,319
legitimate versus uh you know fake

1423
00:55:48,319 --> 00:55:48,880
traffic

1424
00:55:48,880 --> 00:55:51,760
and what would be our approach uh if one

1425
00:55:51,760 --> 00:55:53,119
of our customers is

1426
00:55:53,119 --> 00:55:56,559
in uh the ddos attack or you know by

1427
00:55:56,559 --> 00:55:59,040
building things with security in mind

1428
00:55:59,040 --> 00:56:00,960
uh you can ensure that it's baked into

1429
00:56:00,960 --> 00:56:02,240
everything you do and

1430
00:56:02,240 --> 00:56:05,599
produce so taking a proactive approach

1431
00:56:05,599 --> 00:56:07,760
and imagining possible threats before

1432
00:56:07,760 --> 00:56:09,760
the uris results in

1433
00:56:09,760 --> 00:56:12,000
more securely designed systems

1434
00:56:12,000 --> 00:56:14,559
preventing vulnerabilities from

1435
00:56:14,559 --> 00:56:17,119
being included in the release and thus

1436
00:56:17,119 --> 00:56:17,839
having to

1437
00:56:17,839 --> 00:56:20,640
fix them later but uh it can also help

1438
00:56:20,640 --> 00:56:22,400
you prepare for the failure when it

1439
00:56:22,400 --> 00:56:23,359
happens in the

1440
00:56:23,359 --> 00:56:26,640
future so be prepared for that

1441
00:56:26,640 --> 00:56:30,000
so uh with all this in mind i uh i hope

1442
00:56:30,000 --> 00:56:31,920
that there were lesson singles and

1443
00:56:31,920 --> 00:56:33,839
you might leverage straight modeling

1444
00:56:33,839 --> 00:56:35,359
capabilities in

1445
00:56:35,359 --> 00:56:38,720
your organizations uh with your projects

1446
00:56:38,720 --> 00:56:42,000
uh so twitter dms are always open for me

1447
00:56:42,000 --> 00:56:45,839
feel free to drop me an email as well

1448
00:56:45,839 --> 00:56:49,520
thank you so much stay safe and

1449
00:56:49,520 --> 00:56:54,000
have a nice day i'll take the questions

1450
00:56:54,280 --> 00:56:57,280
now

