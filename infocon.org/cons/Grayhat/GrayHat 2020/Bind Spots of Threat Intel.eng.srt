1
00:00:00,220 --> 00:00:05,440
[Music]

2
00:00:05,440 --> 00:00:06,480
hello everyone

3
00:00:06,480 --> 00:00:09,040
my name is alex matrossov and i'm happy

4
00:00:09,040 --> 00:00:11,120
to present today on the gray cut

5
00:00:11,120 --> 00:00:12,400
conference

6
00:00:12,400 --> 00:00:14,639
i have very interesting topic to discuss

7
00:00:14,639 --> 00:00:15,679
with you today

8
00:00:15,679 --> 00:00:17,359
and it's blind spots of threat

9
00:00:17,359 --> 00:00:19,359
intelligence tied to hardware and

10
00:00:19,359 --> 00:00:20,080
firmware

11
00:00:20,080 --> 00:00:21,920
basically i want to discuss the

12
00:00:21,920 --> 00:00:23,519
challenges which we have

13
00:00:23,519 --> 00:00:26,960
uh to gain invisibility on the hardware

14
00:00:26,960 --> 00:00:28,480
and firmware levels

15
00:00:28,480 --> 00:00:31,599
and why actually i can cover these

16
00:00:31,599 --> 00:00:32,558
topics

17
00:00:32,558 --> 00:00:34,960
just because i spend a lot of years

18
00:00:34,960 --> 00:00:36,880
doing this kind of research

19
00:00:36,880 --> 00:00:38,960
i'm leading uh offensive security

20
00:00:38,960 --> 00:00:40,800
research at nvidia at the moment

21
00:00:40,800 --> 00:00:44,079
and i did a lot of different security

22
00:00:44,079 --> 00:00:47,920
research and tied to different

23
00:00:47,920 --> 00:00:51,039
hardware vendors in the past and also

24
00:00:51,039 --> 00:00:52,000
i'm doing

25
00:00:52,000 --> 00:00:55,120
security research science 1997

26
00:00:55,120 --> 00:00:56,879
mostly focused on the beginning on

27
00:00:56,879 --> 00:00:58,960
reverse engineering advanced threads

28
00:00:58,960 --> 00:01:02,160
and malware but switching my focus

29
00:01:02,160 --> 00:01:04,080
in the direction of the hardware and

30
00:01:04,080 --> 00:01:05,519
firmware security

31
00:01:05,519 --> 00:01:09,520
about 10 years ago so

32
00:01:09,520 --> 00:01:12,799
let's discuss why these problems is very

33
00:01:12,799 --> 00:01:13,600
important

34
00:01:13,600 --> 00:01:17,439
and actually it's getting more appointed

35
00:01:17,439 --> 00:01:19,439
in the moment because it's just getting

36
00:01:19,439 --> 00:01:21,040
worse and attackers start

37
00:01:21,040 --> 00:01:24,320
abusing this

38
00:01:24,840 --> 00:01:29,040
this let's say uh

39
00:01:29,119 --> 00:01:32,720
blind spots of the industry on the

40
00:01:32,720 --> 00:01:35,680
this kind of threats so uh first of all

41
00:01:35,680 --> 00:01:36,000
uh

42
00:01:36,000 --> 00:01:39,280
look on this picture and we have kind of

43
00:01:39,280 --> 00:01:42,240
like security industry visibility point

44
00:01:42,240 --> 00:01:45,520
where uh all the modern endpoints very

45
00:01:45,520 --> 00:01:46,880
good on the detection

46
00:01:46,880 --> 00:01:50,640
and very uh good understanding of the

47
00:01:50,640 --> 00:01:51,840
threat landscape

48
00:01:51,840 --> 00:01:55,360
but also we have uh modern persistence

49
00:01:55,360 --> 00:01:57,520
techniques which is basically

50
00:01:57,520 --> 00:02:01,119
under um under the water and actually

51
00:02:01,119 --> 00:02:03,920
invisible for most of the vendors and

52
00:02:03,920 --> 00:02:05,360
think about how many

53
00:02:05,360 --> 00:02:08,399
vendors actually covering

54
00:02:08,399 --> 00:02:10,479
hardware and addressing the hardware and

55
00:02:10,479 --> 00:02:12,000
firmware tracks

56
00:02:12,000 --> 00:02:14,239
and actually i would say not much and

57
00:02:14,239 --> 00:02:15,599
most of them focused

58
00:02:15,599 --> 00:02:18,879
on known attack vectors and

59
00:02:18,879 --> 00:02:23,120
they not really have experts on

60
00:02:23,120 --> 00:02:26,160
on these fields which is developing the

61
00:02:26,160 --> 00:02:27,120
mitigations

62
00:02:27,120 --> 00:02:29,599
and detection methods uh which is

63
00:02:29,599 --> 00:02:31,280
meaningful

64
00:02:31,280 --> 00:02:35,040
so uh if we talk about persistence

65
00:02:35,040 --> 00:02:38,160
let's have some introduction what kind

66
00:02:38,160 --> 00:02:38,879
of types of

67
00:02:38,879 --> 00:02:41,840
persistence we have and classical

68
00:02:41,840 --> 00:02:43,360
endpoint solutions

69
00:02:43,360 --> 00:02:46,480
uh covering boot sectors boot loaders

70
00:02:46,480 --> 00:02:49,120
file systems operating system level

71
00:02:49,120 --> 00:02:53,040
basically i would say it is covering

72
00:02:53,040 --> 00:02:55,840
operating system and some of the boot

73
00:02:55,840 --> 00:02:57,519
parts of the boot process

74
00:02:57,519 --> 00:03:01,519
on the later stages but hardware and

75
00:03:01,519 --> 00:03:04,400
firmware uh usually it is still a blind

76
00:03:04,400 --> 00:03:05,200
spot

77
00:03:05,200 --> 00:03:08,239
so basically we have a lot of a lot of

78
00:03:08,239 --> 00:03:08,959
different

79
00:03:08,959 --> 00:03:11,840
uh things which is can be applicable and

80
00:03:11,840 --> 00:03:13,680
come from the firmware level

81
00:03:13,680 --> 00:03:16,319
and basically this kind of threats is

82
00:03:16,319 --> 00:03:18,319
still invisible

83
00:03:18,319 --> 00:03:21,840
and if we think about

84
00:03:21,840 --> 00:03:24,720
what is industries detecting from the

85
00:03:24,720 --> 00:03:26,080
known threats uh

86
00:03:26,080 --> 00:03:28,799
coming from the public news and uh

87
00:03:28,799 --> 00:03:29,519
recently

88
00:03:29,519 --> 00:03:32,239
uh kaspersky lab detected mosaic

89
00:03:32,239 --> 00:03:34,080
regressor uefi implant

90
00:03:34,080 --> 00:03:38,640
which was based on the hiking team

91
00:03:38,640 --> 00:03:42,000
vector edk which is known at least for

92
00:03:42,000 --> 00:03:43,200
five years

93
00:03:43,200 --> 00:03:46,560
and actually they use exactly the same

94
00:03:46,560 --> 00:03:49,120
indicator of infection of the systems

95
00:03:49,120 --> 00:03:50,640
with u5 variable

96
00:03:50,640 --> 00:03:53,760
named fta so this indicator is literally

97
00:03:53,760 --> 00:03:55,120
five years old

98
00:03:55,120 --> 00:03:58,319
and it's still uh

99
00:03:58,319 --> 00:04:00,560
able to provide some persistence for

100
00:04:00,560 --> 00:04:03,280
their titles

101
00:04:03,519 --> 00:04:07,760
uh and one of the things which is

102
00:04:07,760 --> 00:04:10,319
actually really surprised to me it was

103
00:04:10,319 --> 00:04:12,480
mosaic regressor make a lot of noise yes

104
00:04:12,480 --> 00:04:14,319
the threat is interesting because it's

105
00:04:14,319 --> 00:04:16,320
tied to the firmware get detected in the

106
00:04:16,320 --> 00:04:17,040
wild

107
00:04:17,040 --> 00:04:20,238
but if we think about this um

108
00:04:20,238 --> 00:04:22,880
this threat is really lame so it doesn't

109
00:04:22,880 --> 00:04:23,280
have

110
00:04:23,280 --> 00:04:26,720
any new techniques used there it doesn't

111
00:04:26,720 --> 00:04:27,840
have any

112
00:04:27,840 --> 00:04:30,720
types of uh infection methods which is

113
00:04:30,720 --> 00:04:31,360
used

114
00:04:31,360 --> 00:04:34,880
there so basically we detect what was

115
00:04:34,880 --> 00:04:38,800
known and very old and even like uh

116
00:04:38,800 --> 00:04:41,680
low jacks implant uh which was detected

117
00:04:41,680 --> 00:04:42,639
by eset

118
00:04:42,639 --> 00:04:44,800
was more advanced compared to mosaic

119
00:04:44,800 --> 00:04:46,479
regressor but still

120
00:04:46,479 --> 00:04:50,320
was not using anything new logix just

121
00:04:50,320 --> 00:04:51,680
used which was known

122
00:04:51,680 --> 00:04:57,040
and actually already very well

123
00:04:57,440 --> 00:05:00,560
explained on the public

124
00:05:00,560 --> 00:05:03,759
so also if we think about

125
00:05:03,759 --> 00:05:07,759
why these problems exist why we don't

126
00:05:07,759 --> 00:05:08,560
detect

127
00:05:08,560 --> 00:05:11,759
anything new so first of all

128
00:05:11,759 --> 00:05:14,080
defensive technologies coming from the

129
00:05:14,080 --> 00:05:15,600
hardware vendor side

130
00:05:15,600 --> 00:05:18,160
in many cases disconnected from reality

131
00:05:18,160 --> 00:05:19,039
basically

132
00:05:19,039 --> 00:05:22,880
a people who who is architecting this

133
00:05:22,880 --> 00:05:26,400
security features they not really

134
00:05:26,400 --> 00:05:27,120
understand

135
00:05:27,120 --> 00:05:30,400
how real threats is working and how the

136
00:05:30,400 --> 00:05:32,320
attacker techniques and tactics

137
00:05:32,320 --> 00:05:36,400
is appears in reality and

138
00:05:36,400 --> 00:05:39,039
on the other hand we have endpoint

139
00:05:39,039 --> 00:05:40,240
vendors which is

140
00:05:40,240 --> 00:05:42,800
don't uh understand enough of the

141
00:05:42,800 --> 00:05:44,160
firmware specifics

142
00:05:44,160 --> 00:05:47,280
so basically uh most of the classical

143
00:05:47,280 --> 00:05:50,960
endpoint solution vendors

144
00:05:51,280 --> 00:05:54,479
mostly trying to apply the same

145
00:05:54,479 --> 00:05:55,520
approaches

146
00:05:55,520 --> 00:05:57,520
which they're using on that rating

147
00:05:57,520 --> 00:05:58,639
system level

148
00:05:58,639 --> 00:06:01,120
but the firmware world is very different

149
00:06:01,120 --> 00:06:04,240
and a lot of different

150
00:06:04,240 --> 00:06:07,919
things is exist on this level and

151
00:06:07,919 --> 00:06:11,360
just trying to think in the same way

152
00:06:11,360 --> 00:06:13,440
as we think in an operating system level

153
00:06:13,440 --> 00:06:15,919
detection it is actually wrong direction

154
00:06:15,919 --> 00:06:17,120
we're missing a lot

155
00:06:17,120 --> 00:06:21,280
and we don't cover specific

156
00:06:21,280 --> 00:06:25,520
specifics of this execution environment

157
00:06:25,520 --> 00:06:29,600
if we think about like

158
00:06:29,600 --> 00:06:33,440
what we have currently to describe a

159
00:06:33,440 --> 00:06:37,440
techniques and tactics of the attacker

160
00:06:37,440 --> 00:06:40,800
you will be always thinking about

161
00:06:40,800 --> 00:06:43,919
mitra attack right so framework and

162
00:06:43,919 --> 00:06:47,680
on the firmware we have

163
00:06:47,680 --> 00:06:50,960
most of the impact and detections

164
00:06:50,960 --> 00:06:53,919
which is recommended it's basically tied

165
00:06:53,919 --> 00:06:54,720
to the

166
00:06:54,720 --> 00:06:57,680
operating system level and as example we

167
00:06:57,680 --> 00:06:58,000
have

168
00:06:58,000 --> 00:07:01,599
also boot integrity but boot integrity

169
00:07:01,599 --> 00:07:02,080
doesn't

170
00:07:02,080 --> 00:07:05,599
guarantee visibility of the threat and

171
00:07:05,599 --> 00:07:08,479
if we talk about privileged account

172
00:07:08,479 --> 00:07:09,520
management

173
00:07:09,520 --> 00:07:12,639
uh os privileges not equal to the

174
00:07:12,639 --> 00:07:14,720
firmware level privileges

175
00:07:14,720 --> 00:07:18,319
and of course why uh

176
00:07:18,319 --> 00:07:20,880
updating the firmware you think you

177
00:07:20,880 --> 00:07:21,680
download

178
00:07:21,680 --> 00:07:23,759
and update your firmware from the start

179
00:07:23,759 --> 00:07:25,360
trusted source

180
00:07:25,360 --> 00:07:27,919
and you basically have a secure update

181
00:07:27,919 --> 00:07:29,280
uh

182
00:07:29,280 --> 00:07:33,360
in this case so it's no guarantee

183
00:07:33,360 --> 00:07:36,639
and it's why actually we have all these

184
00:07:36,639 --> 00:07:40,400
um problems around because also we don't

185
00:07:40,400 --> 00:07:41,759
understand much

186
00:07:41,759 --> 00:07:44,560
how the impact from the firmware level

187
00:07:44,560 --> 00:07:47,039
is coming to the operating system level

188
00:07:47,039 --> 00:07:47,440
so

189
00:07:47,440 --> 00:07:49,599
and broken integrity of course doesn't

190
00:07:49,599 --> 00:07:50,879
say much about

191
00:07:50,879 --> 00:07:53,199
the actual impact and what you have is

192
00:07:53,199 --> 00:07:54,160
inside

193
00:07:54,160 --> 00:07:56,400
inside the firmware what kind of implant

194
00:07:56,400 --> 00:07:57,520
or modification

195
00:07:57,520 --> 00:08:01,599
or malicious activity coming from there

196
00:08:01,840 --> 00:08:04,720
we don't have enough signals coming from

197
00:08:04,720 --> 00:08:06,319
the firmware and hardware

198
00:08:06,319 --> 00:08:08,240
like we're collecting from operating

199
00:08:08,240 --> 00:08:09,360
system level

200
00:08:09,360 --> 00:08:11,440
i was talking about that actually last

201
00:08:11,440 --> 00:08:13,680
year in my knot the advanced threats

202
00:08:13,680 --> 00:08:16,080
evolution research arm race

203
00:08:16,080 --> 00:08:20,080
and still i see i don't see

204
00:08:20,080 --> 00:08:22,000
the industry is shifting much in this

205
00:08:22,000 --> 00:08:24,080
direction and i would say

206
00:08:24,080 --> 00:08:26,479
without collaboration between uh

207
00:08:26,479 --> 00:08:28,000
hardware vendors

208
00:08:28,000 --> 00:08:31,120
uh and firmware owners and actually

209
00:08:31,120 --> 00:08:33,919
endpoint industry it will be no way how

210
00:08:33,919 --> 00:08:34,159
it

211
00:08:34,159 --> 00:08:36,958
can be developed meaningful solutions uh

212
00:08:36,958 --> 00:08:38,559
basically we have a three different

213
00:08:38,559 --> 00:08:40,958
worlds firmware hardware and operating

214
00:08:40,958 --> 00:08:42,080
system level

215
00:08:42,080 --> 00:08:45,200
and all of the all of them have a big

216
00:08:45,200 --> 00:08:46,480
security policies

217
00:08:46,480 --> 00:08:49,680
and transitions between them and this

218
00:08:49,680 --> 00:08:51,360
three different world mostly

219
00:08:51,360 --> 00:08:53,360
disconnected from each other

220
00:08:53,360 --> 00:08:57,120
so basically we have a

221
00:08:57,120 --> 00:08:59,200
platform boot process which is start

222
00:08:59,200 --> 00:09:00,560
from the hardware

223
00:09:00,560 --> 00:09:03,600
and come uh to the operating system

224
00:09:03,600 --> 00:09:04,480
level

225
00:09:04,480 --> 00:09:08,399
and we have uh actually lack of threat

226
00:09:08,399 --> 00:09:11,200
uh intelligence signals which is

227
00:09:11,200 --> 00:09:12,640
actually increasing

228
00:09:12,640 --> 00:09:15,120
uh go down to the stack tied to the

229
00:09:15,120 --> 00:09:17,440
hardware

230
00:09:17,440 --> 00:09:20,160
nowadays it is hard to spot real

231
00:09:20,160 --> 00:09:22,320
boundaries between actually hardware and

232
00:09:22,320 --> 00:09:24,320
firmware and operating system level

233
00:09:24,320 --> 00:09:25,120
because

234
00:09:25,120 --> 00:09:27,519
basically we have hardware which is

235
00:09:27,519 --> 00:09:29,680
passing control to the system firmware

236
00:09:29,680 --> 00:09:31,680
and system firmware it's actually

237
00:09:31,680 --> 00:09:35,360
looks like a real operating system

238
00:09:35,360 --> 00:09:38,800
and doing most of the job and just on

239
00:09:38,800 --> 00:09:40,720
the latest stage of the boot passing

240
00:09:40,720 --> 00:09:43,519
control to the bootloaders

241
00:09:43,519 --> 00:09:46,720
so but if we think about

242
00:09:46,720 --> 00:09:49,680
the number of uh reported issues for the

243
00:09:49,680 --> 00:09:50,399
firmware

244
00:09:50,399 --> 00:09:52,880
it's significantly increasing every year

245
00:09:52,880 --> 00:09:54,320
the statistics came

246
00:09:54,320 --> 00:09:57,360
from a national vulnerability database

247
00:09:57,360 --> 00:10:00,399
and if you look on the numbers of the

248
00:10:00,399 --> 00:10:00,959
trad

249
00:10:00,959 --> 00:10:05,360
so it's actually increasing every year

250
00:10:05,360 --> 00:10:07,440
also on another side as i mentioned

251
00:10:07,440 --> 00:10:08,399
before

252
00:10:08,399 --> 00:10:12,640
uh not all the security architects

253
00:10:12,640 --> 00:10:16,240
understand correctly uh how

254
00:10:16,240 --> 00:10:18,560
the secure platform transparency should

255
00:10:18,560 --> 00:10:21,519
be implemented as example

256
00:10:21,519 --> 00:10:25,279
uh tre uh one of uh look on this

257
00:10:25,279 --> 00:10:29,120
screenshot from uh ufi uh

258
00:10:29,120 --> 00:10:32,399
forum presentation so it's saying

259
00:10:32,399 --> 00:10:34,720
threats can be identified by analyzing

260
00:10:34,720 --> 00:10:36,240
the security requirements

261
00:10:36,240 --> 00:10:39,600
and what on and platform diagram yes

262
00:10:39,600 --> 00:10:43,200
it can be on the theoretical side but

263
00:10:43,200 --> 00:10:46,959
honestly it is very hard to spot

264
00:10:46,959 --> 00:10:49,440
the problems on the requirements and

265
00:10:49,440 --> 00:10:50,160
diagram

266
00:10:50,160 --> 00:10:51,920
so basically you need to have the real

267
00:10:51,920 --> 00:10:54,000
system you need to analyze the code you

268
00:10:54,000 --> 00:10:56,079
need to understand the architecture

269
00:10:56,079 --> 00:10:58,839
and only this transparency actually can

270
00:10:58,839 --> 00:11:01,519
provide

271
00:11:01,519 --> 00:11:04,959
the confidence on the visibility level

272
00:11:04,959 --> 00:11:07,600
so on another side we still have a lot

273
00:11:07,600 --> 00:11:08,560
of security through

274
00:11:08,560 --> 00:11:11,279
obscurity and actually it's evangelized

275
00:11:11,279 --> 00:11:11,920
by

276
00:11:11,920 --> 00:11:14,320
a firmware and hardware vendor so we

277
00:11:14,320 --> 00:11:16,720
have a

278
00:11:17,200 --> 00:11:20,720
a lot of different things which is just

279
00:11:20,720 --> 00:11:23,360
not documented as example we have intel

280
00:11:23,360 --> 00:11:24,160
buyers guard

281
00:11:24,160 --> 00:11:26,160
and intel boot guard technologies which

282
00:11:26,160 --> 00:11:28,320
is being

283
00:11:28,320 --> 00:11:31,040
publicly available with some details

284
00:11:31,040 --> 00:11:32,720
just because researchers

285
00:11:32,720 --> 00:11:37,200
reverse engineered them and then and

286
00:11:37,440 --> 00:11:39,680
may create some of the blog posts and

287
00:11:39,680 --> 00:11:41,920
documentation about these technologies

288
00:11:41,920 --> 00:11:43,519
but the vendors still

289
00:11:43,519 --> 00:11:46,800
don't publish an actual reference

290
00:11:46,800 --> 00:11:51,200
documentation about this technologies

291
00:11:51,200 --> 00:11:54,480
and please don't do the binaries

292
00:11:54,480 --> 00:11:58,320
share the technology specs and make uh

293
00:11:58,320 --> 00:12:01,680
this um more transparent for the

294
00:12:01,680 --> 00:12:02,880
industry

295
00:12:02,880 --> 00:12:05,120
because security choose obscurity

296
00:12:05,120 --> 00:12:07,040
doesn't work and we know this

297
00:12:07,040 --> 00:12:10,560
uh we learn these lessons

298
00:12:10,560 --> 00:12:13,440
from the past right so but why are we

299
00:12:13,440 --> 00:12:16,880
doing the same mistakes

300
00:12:17,360 --> 00:12:21,519
now right so also

301
00:12:21,519 --> 00:12:24,320
if you want to learn more about root kit

302
00:12:24,320 --> 00:12:26,079
and boot kits pay attention to my book

303
00:12:26,079 --> 00:12:27,040
reversing

304
00:12:27,040 --> 00:12:28,800
modern malware and next generation

305
00:12:28,800 --> 00:12:30,959
threads but

306
00:12:30,959 --> 00:12:33,040
it's not about the book look on this

307
00:12:33,040 --> 00:12:34,560
picture i really like this

308
00:12:34,560 --> 00:12:38,160
uh this um

309
00:12:38,160 --> 00:12:40,880
uh cover basically it is a kraken and it

310
00:12:40,880 --> 00:12:41,920
is a guy

311
00:12:41,920 --> 00:12:44,160
uh a little guy on the board which is

312
00:12:44,160 --> 00:12:45,200
trying to escape

313
00:12:45,200 --> 00:12:48,079
from uh from the kraken right so in this

314
00:12:48,079 --> 00:12:48,639
case

315
00:12:48,639 --> 00:12:50,880
it is a really persistent threat inside

316
00:12:50,880 --> 00:12:52,399
the hardware firmware

317
00:12:52,399 --> 00:12:54,240
and the security architect which is

318
00:12:54,240 --> 00:12:55,440
trying to

319
00:12:55,440 --> 00:13:00,160
survive in this very offensive world

320
00:13:00,160 --> 00:13:03,600
so but on another side we have

321
00:13:03,600 --> 00:13:06,880
actually a lot of problems

322
00:13:06,880 --> 00:13:09,279
with security boundaries we have

323
00:13:09,279 --> 00:13:11,360
different components across the system

324
00:13:11,360 --> 00:13:12,240
platform

325
00:13:12,240 --> 00:13:14,160
with the different firmwares inside

326
00:13:14,160 --> 00:13:15,519
right and

327
00:13:15,519 --> 00:13:18,720
all these components

328
00:13:18,720 --> 00:13:22,000
actually chat model it separately

329
00:13:22,000 --> 00:13:26,000
so but in the same case we have

330
00:13:26,000 --> 00:13:28,160
most of these components based in the

331
00:13:28,160 --> 00:13:30,639
same security boundary what that's mean

332
00:13:30,639 --> 00:13:32,320
if you attack one component

333
00:13:32,320 --> 00:13:34,959
it is easier to attack from this company

334
00:13:34,959 --> 00:13:35,680
and some

335
00:13:35,680 --> 00:13:39,519
more secure components around platform

336
00:13:39,519 --> 00:13:43,040
so and i believe uh

337
00:13:43,040 --> 00:13:46,560
currently this creating just

338
00:13:46,560 --> 00:13:49,040
more and more complexity on top of the

339
00:13:49,040 --> 00:13:50,480
system platforms

340
00:13:50,480 --> 00:13:53,279
and more and more components available

341
00:13:53,279 --> 00:13:54,000
and

342
00:13:54,000 --> 00:13:56,560
this situation getting worse in terms of

343
00:13:56,560 --> 00:13:58,560
security and trend modeling because it

344
00:13:58,560 --> 00:14:00,399
just

345
00:14:00,399 --> 00:14:03,519
you can't uh model uh

346
00:14:03,519 --> 00:14:07,360
for for uh full for for full hardware

347
00:14:07,360 --> 00:14:08,240
platform

348
00:14:08,240 --> 00:14:10,480
one single chat model because you have a

349
00:14:10,480 --> 00:14:12,639
lot of third-party components and you

350
00:14:12,639 --> 00:14:13,600
don't understand

351
00:14:13,600 --> 00:14:16,720
security and threat modeling about them

352
00:14:16,720 --> 00:14:19,440
fully right so you just use this ip on

353
00:14:19,440 --> 00:14:20,160
your

354
00:14:20,160 --> 00:14:23,199
uh on your hardware as example bluetooth

355
00:14:23,199 --> 00:14:26,079
stack network stack and a lot of others

356
00:14:26,079 --> 00:14:30,560
and also in the same case you just put

357
00:14:30,560 --> 00:14:31,120
in the

358
00:14:31,120 --> 00:14:34,399
in the very uh trusted place these

359
00:14:34,399 --> 00:14:35,279
components

360
00:14:35,279 --> 00:14:38,079
but they can attack differently and gain

361
00:14:38,079 --> 00:14:39,360
uh for the attacker

362
00:14:39,360 --> 00:14:42,839
different perspective for for the next

363
00:14:42,839 --> 00:14:44,079
uh

364
00:14:44,079 --> 00:14:45,839
for the next step for attack the

365
00:14:45,839 --> 00:14:47,279
platform

366
00:14:47,279 --> 00:14:50,720
so the system state transition between

367
00:14:50,720 --> 00:14:52,800
firmware layers and security boundaries

368
00:14:52,800 --> 00:14:54,320
defined by hardware but

369
00:14:54,320 --> 00:14:56,800
frequently verify it and the firmware

370
00:14:56,800 --> 00:14:58,680
which is create some level of

371
00:14:58,680 --> 00:15:00,000
inconsistency

372
00:15:00,000 --> 00:15:02,480
and give some additional opportunities

373
00:15:02,480 --> 00:15:05,440
for the attacker

374
00:15:06,480 --> 00:15:08,240
one of the interesting thing i was

375
00:15:08,240 --> 00:15:09,680
discovered it is

376
00:15:09,680 --> 00:15:13,600
basically you can disable the boot guard

377
00:15:13,600 --> 00:15:15,440
from operating system level

378
00:15:15,440 --> 00:15:18,800
during upgrade for windows 10 so

379
00:15:18,800 --> 00:15:21,440
and uh this research has been already

380
00:15:21,440 --> 00:15:23,920
presented in the last year on bucket

381
00:15:23,920 --> 00:15:24,720
asia and

382
00:15:24,720 --> 00:15:28,240
upcode 2019

383
00:15:28,800 --> 00:15:31,920
but think about how this works so

384
00:15:31,920 --> 00:15:34,240
you have wood guard techno intel

385
00:15:34,240 --> 00:15:36,079
woodguard technology which has been

386
00:15:36,079 --> 00:15:38,240
developed to armor secure boot process

387
00:15:38,240 --> 00:15:38,880
so

388
00:15:38,880 --> 00:15:43,199
basically the verification start

389
00:15:43,199 --> 00:15:45,120
verification of secure transition and

390
00:15:45,120 --> 00:15:47,920
chain of trust and from cpu reset

391
00:15:47,920 --> 00:15:50,800
and okay let's say everything is

392
00:15:50,800 --> 00:15:52,240
configured correctly

393
00:15:52,240 --> 00:15:55,519
and it's perfect implementation but you

394
00:15:55,519 --> 00:15:57,440
have platform configuration

395
00:15:57,440 --> 00:16:00,959
manufacturing mode which is um

396
00:16:00,959 --> 00:16:03,360
can be true and in this case

397
00:16:03,360 --> 00:16:06,320
verification in boot guard for dixie

398
00:16:06,320 --> 00:16:09,199
volume will be disabled so what that's

399
00:16:09,199 --> 00:16:09,839
mean

400
00:16:09,839 --> 00:16:13,360
if the attacker inject malicious implant

401
00:16:13,360 --> 00:16:14,959
in the dixie volume

402
00:16:14,959 --> 00:16:17,600
and enable this platform configuration

403
00:16:17,600 --> 00:16:19,519
data bit

404
00:16:19,519 --> 00:16:22,000
and just flash directly to the platform

405
00:16:22,000 --> 00:16:23,680
malicious update

406
00:16:23,680 --> 00:16:26,880
it can disable

407
00:16:26,880 --> 00:16:30,399
it can be basically disable any uh

408
00:16:30,399 --> 00:16:32,880
benefits from intel boot guard because

409
00:16:32,880 --> 00:16:33,920
it's just a

410
00:16:33,920 --> 00:16:36,560
basically backdoor which is disabling

411
00:16:36,560 --> 00:16:39,759
the technology on the fly right

412
00:16:39,759 --> 00:16:42,399
so complexity of modern firmware supply

413
00:16:42,399 --> 00:16:42,800
chain

414
00:16:42,800 --> 00:16:46,079
is very very complex and not controlled

415
00:16:46,079 --> 00:16:47,519
by hundred percent

416
00:16:47,519 --> 00:16:50,959
in the single harvard vendor so that's

417
00:16:50,959 --> 00:16:53,759
create actually a very interesting

418
00:16:53,759 --> 00:16:56,320
perspective where

419
00:16:56,320 --> 00:16:58,880
even owner of the platform doesn't have

420
00:16:58,880 --> 00:17:00,000
the full picture

421
00:17:00,000 --> 00:17:03,680
and visibility on their hardware

422
00:17:03,680 --> 00:17:06,720
also i really like this um

423
00:17:06,720 --> 00:17:09,839
picture of uh complexity of ufi

424
00:17:09,839 --> 00:17:10,959
ecosystem

425
00:17:10,959 --> 00:17:13,439
where we have a lot of different vendors

426
00:17:13,439 --> 00:17:14,559
and as example

427
00:17:14,559 --> 00:17:17,599
intel is owen in the reference code

428
00:17:17,599 --> 00:17:18,000
right

429
00:17:18,000 --> 00:17:20,799
so they are giving this reference code

430
00:17:20,799 --> 00:17:21,199
to

431
00:17:21,199 --> 00:17:23,839
independent buyers vendor developers

432
00:17:23,839 --> 00:17:25,679
like phoenix insight and american

433
00:17:25,679 --> 00:17:26,720
megatrends

434
00:17:26,720 --> 00:17:29,919
and these frameworks came to device

435
00:17:29,919 --> 00:17:32,320
manufacturers like foxcom

436
00:17:32,320 --> 00:17:36,320
and many others and basically after that

437
00:17:36,320 --> 00:17:40,400
actually it is came to

438
00:17:40,400 --> 00:17:42,480
original equipment manufacturers like

439
00:17:42,480 --> 00:17:43,760
deo lenovo and

440
00:17:43,760 --> 00:17:47,039
hp so in this case actually uh

441
00:17:47,039 --> 00:17:49,679
ecosystem of apple looks much more

442
00:17:49,679 --> 00:17:52,480
consistent because they try to avoid

443
00:17:52,480 --> 00:17:54,320
a lot of third parties involved in the

444
00:17:54,320 --> 00:17:56,240
development process

445
00:17:56,240 --> 00:17:59,440
but in the same way for most of the

446
00:17:59,440 --> 00:18:00,480
vendors

447
00:18:00,480 --> 00:18:03,840
this uh supply chain uh

448
00:18:03,840 --> 00:18:06,000
picture actually create a lot of uh

449
00:18:06,000 --> 00:18:08,559
complexity and additional layers

450
00:18:08,559 --> 00:18:11,840
as example also it is a lot of licensing

451
00:18:11,840 --> 00:18:14,000
agreements and drams is involved

452
00:18:14,000 --> 00:18:17,200
and as example if you have uh

453
00:18:17,200 --> 00:18:20,400
outdated uh code from american mega

454
00:18:20,400 --> 00:18:21,840
trends you're not getting

455
00:18:21,840 --> 00:18:24,080
new updates or even like fixing

456
00:18:24,080 --> 00:18:25,679
vulnerabilities from them

457
00:18:25,679 --> 00:18:28,799
and it's create some

458
00:18:28,799 --> 00:18:31,280
problems for who like a system because

459
00:18:31,280 --> 00:18:33,440
some of the platforms will be just stay

460
00:18:33,440 --> 00:18:36,559
insecure right and

461
00:18:36,559 --> 00:18:39,679
these examples actually show

462
00:18:39,679 --> 00:18:43,200
how the ecosystem of ufi firmware

463
00:18:43,200 --> 00:18:46,640
is broken in this case

464
00:18:46,720 --> 00:18:50,240
and what

465
00:18:50,240 --> 00:18:53,760
what about uh good old days with

466
00:18:53,760 --> 00:18:56,880
os bootloaders right so we have a bios

467
00:18:56,880 --> 00:19:00,240
which is basically uh boot master volume

468
00:19:00,240 --> 00:19:01,280
good record

469
00:19:01,280 --> 00:19:03,679
and it's pricing control to some

470
00:19:03,679 --> 00:19:06,160
bootstrap code and bootstrap code

471
00:19:06,160 --> 00:19:08,880
start boot manager which start window to

472
00:19:08,880 --> 00:19:10,799
ufi in u5

473
00:19:10,799 --> 00:19:14,160
world you have uh everything black box

474
00:19:14,160 --> 00:19:14,880
you have a

475
00:19:14,880 --> 00:19:17,039
firmware which is basically a little

476
00:19:17,039 --> 00:19:18,480
operating system

477
00:19:18,480 --> 00:19:21,520
which is executes

478
00:19:21,520 --> 00:19:24,400
all the stages and then passing control

479
00:19:24,400 --> 00:19:26,240
to the operating system level

480
00:19:26,240 --> 00:19:27,760
so basically it's not a lot of

481
00:19:27,760 --> 00:19:29,840
visibility from the operating system

482
00:19:29,840 --> 00:19:30,320
level

483
00:19:30,320 --> 00:19:33,439
on the firmware side

484
00:19:35,520 --> 00:19:38,240
but secure boot will save us all right

485
00:19:38,240 --> 00:19:39,760
so

486
00:19:39,760 --> 00:19:42,960
what happens uh basically we have

487
00:19:42,960 --> 00:19:46,080
as example this

488
00:19:47,120 --> 00:19:50,799
interesting example of the thread where

489
00:19:50,799 --> 00:19:53,760
it is just a simple ransomware which is

490
00:19:53,760 --> 00:19:54,559
block

491
00:19:54,559 --> 00:19:58,320
uh on some at some point uh ufi boot

492
00:19:58,320 --> 00:19:59,760
process and race

493
00:19:59,760 --> 00:20:03,039
uh ransom screen uh on on on

494
00:20:03,039 --> 00:20:06,640
on on your monitor or like

495
00:20:06,640 --> 00:20:09,120
or your laptop so basically the system

496
00:20:09,120 --> 00:20:10,400
just doesn't boot

497
00:20:10,400 --> 00:20:12,640
but if you look on this code it's just a

498
00:20:12,640 --> 00:20:14,159
few uh

499
00:20:14,159 --> 00:20:17,200
lines of the c code uh which is compiled

500
00:20:17,200 --> 00:20:19,360
as a dixie driver somebody injecting the

501
00:20:19,360 --> 00:20:20,640
firmware and flush it

502
00:20:20,640 --> 00:20:24,799
as if on with the physical access or

503
00:20:24,799 --> 00:20:27,280
basically

504
00:20:28,400 --> 00:20:31,360
or basically provide some ways of

505
00:20:31,360 --> 00:20:32,400
exploit

506
00:20:32,400 --> 00:20:35,840
for uh abusing remotely so uh

507
00:20:35,840 --> 00:20:38,480
in ufi firmware uh rootkits myths and

508
00:20:38,480 --> 00:20:39,200
reality

509
00:20:39,200 --> 00:20:43,360
and look at asia in 2017

510
00:20:43,360 --> 00:20:45,760
i was demonstrating the way how we can

511
00:20:45,760 --> 00:20:46,640
basically

512
00:20:46,640 --> 00:20:49,679
uh create the path

513
00:20:49,679 --> 00:20:51,840
of remote exploitation of the system

514
00:20:51,840 --> 00:20:53,679
with the different stages of course but

515
00:20:53,679 --> 00:20:57,840
persist in the end of the spy flash

516
00:20:58,799 --> 00:21:02,559
also interesting case uh with

517
00:21:02,559 --> 00:21:08,159
kaspersky bootloader sign it so right so

518
00:21:08,159 --> 00:21:12,559
not in the ufi ecosystem

519
00:21:12,559 --> 00:21:16,240
we basically don't have a controlled

520
00:21:16,240 --> 00:21:17,280
black list

521
00:21:17,280 --> 00:21:22,240
for uh uh duplicated bootloaders

522
00:21:22,240 --> 00:21:24,960
uh we have the blacklist which is stored

523
00:21:24,960 --> 00:21:26,240
in ufi.org

524
00:21:26,240 --> 00:21:30,640
but how many systems uh recently

525
00:21:30,640 --> 00:21:32,880
downloaded and duplicated of these

526
00:21:32,880 --> 00:21:34,000
bootloaders

527
00:21:34,000 --> 00:21:37,520
so basically i would say uh

528
00:21:37,520 --> 00:21:40,559
sign it it's not equal trusted

529
00:21:40,559 --> 00:21:42,320
and we learned this lesson from the

530
00:21:42,320 --> 00:21:44,240
operating system level

531
00:21:44,240 --> 00:21:47,280
a long time ago but on the firmware

532
00:21:47,280 --> 00:21:48,080
level

533
00:21:48,080 --> 00:21:51,120
this still learning about the same thing

534
00:21:51,120 --> 00:21:53,200
happening which we already been seeing

535
00:21:53,200 --> 00:21:55,679
before

536
00:21:56,320 --> 00:22:00,400
it also reminds me uh in west 16100

537
00:22:00,400 --> 00:22:03,120
uh presented at defcon where uh

538
00:22:03,120 --> 00:22:04,240
vulnerability

539
00:22:04,240 --> 00:22:08,080
allow tiger to install a

540
00:22:08,080 --> 00:22:09,840
vulnerable boot manager basically

541
00:22:09,840 --> 00:22:12,480
downgrade the boot manager and

542
00:22:12,480 --> 00:22:14,400
exploit the vulnerability which has been

543
00:22:14,400 --> 00:22:17,200
already known

544
00:22:17,280 --> 00:22:19,840
so we blindly trust anything which is

545
00:22:19,840 --> 00:22:22,720
sign it and come from the trusted source

546
00:22:22,720 --> 00:22:26,159
and it is why as example

547
00:22:26,159 --> 00:22:29,520
um the boot hall vulnerability was

548
00:22:29,520 --> 00:22:34,640
so painful because actually

549
00:22:34,640 --> 00:22:38,720
on the uf ecosystems for servers

550
00:22:38,720 --> 00:22:42,240
it's been i would say this problem's

551
00:22:42,240 --> 00:22:42,720
been

552
00:22:42,720 --> 00:22:46,320
quite known in the past but nobody pay

553
00:22:46,320 --> 00:22:47,760
attention for it

554
00:22:47,760 --> 00:22:51,600
and one of the problems been found by

555
00:22:51,600 --> 00:22:54,000
dimitra alex silk when he basically

556
00:22:54,000 --> 00:22:55,600
bypassed the secure boot

557
00:22:55,600 --> 00:22:58,960
uh on the hp proliant servers with a

558
00:22:58,960 --> 00:23:02,480
signed hpca uh grub

559
00:23:02,480 --> 00:23:05,280
and basically he found uh vulnerability

560
00:23:05,280 --> 00:23:07,039
which has allowed him to

561
00:23:07,039 --> 00:23:10,080
execute arbitrary code

562
00:23:10,080 --> 00:23:12,400
and basically avoid the secure boot on

563
00:23:12,400 --> 00:23:15,280
on that level

564
00:23:19,360 --> 00:23:23,120
so yep it is a

565
00:23:23,120 --> 00:23:26,400
example of bootloader and here is a

566
00:23:26,400 --> 00:23:29,440
vulnerability from the grub

567
00:23:29,440 --> 00:23:31,200
the diversity of the open source

568
00:23:31,200 --> 00:23:32,640
ecosystem actually

569
00:23:32,640 --> 00:23:35,840
bring even more

570
00:23:35,840 --> 00:23:38,159
to the boot process on the late stages

571
00:23:38,159 --> 00:23:38,960
because

572
00:23:38,960 --> 00:23:40,640
first of all it is a third-party

573
00:23:40,640 --> 00:23:43,360
modification it is outdated versions

574
00:23:43,360 --> 00:23:45,760
it is a hell of the finance versions as

575
00:23:45,760 --> 00:23:47,679
example which is a vulnerable but we

576
00:23:47,679 --> 00:23:48,400
don't know

577
00:23:48,400 --> 00:23:50,960
all of this vulnerable versions and we

578
00:23:50,960 --> 00:23:52,159
just

579
00:23:52,159 --> 00:23:54,480
let them go if somebody will be trying

580
00:23:54,480 --> 00:23:56,080
to downgrade it right so

581
00:23:56,080 --> 00:23:58,640
basically blacklisting in this case will

582
00:23:58,640 --> 00:23:59,440
be not

583
00:23:59,440 --> 00:24:02,880
really working correctly

584
00:24:03,120 --> 00:24:06,880
uh another good example of uh ecosystem

585
00:24:06,880 --> 00:24:08,640
vulnerabilities it will

586
00:24:08,640 --> 00:24:12,159
it is intel csma 201990

587
00:24:12,159 --> 00:24:15,840
where it was sesame bootrom affected

588
00:24:15,840 --> 00:24:18,640
it is unpatchable code and basically it

589
00:24:18,640 --> 00:24:20,720
is allow

590
00:24:20,720 --> 00:24:25,200
the attacker to uh to

591
00:24:25,520 --> 00:24:29,200
gain arbitrary physical access to the

592
00:24:29,200 --> 00:24:30,000
spy

593
00:24:30,000 --> 00:24:34,240
and basically create some

594
00:24:34,240 --> 00:24:38,799
arbitrary execution code so

595
00:24:38,799 --> 00:24:41,840
it is very hard to make

596
00:24:41,840 --> 00:24:44,720
a platform secure but it's even more

597
00:24:44,720 --> 00:24:45,600
harder

598
00:24:45,600 --> 00:24:47,679
to hunt this kind of threats because

599
00:24:47,679 --> 00:24:50,080
it's a lot of unknowns

600
00:24:50,080 --> 00:24:53,440
so the boot time software supply chain

601
00:24:53,440 --> 00:24:56,000
only increasing complexity and we don't

602
00:24:56,000 --> 00:24:58,159
have a good solution

603
00:24:58,159 --> 00:25:01,919
for for that yet

604
00:25:01,919 --> 00:25:04,240
uh i really like this picture which has

605
00:25:04,240 --> 00:25:06,799
been uh presented by rob wood

606
00:25:06,799 --> 00:25:10,960
uh on uh platform security summon 2019

607
00:25:10,960 --> 00:25:14,480
where he say we have uh this

608
00:25:14,480 --> 00:25:17,679
uh direction of increasing privileges

609
00:25:17,679 --> 00:25:20,000
tied to the hardware but in the same

610
00:25:20,000 --> 00:25:20,799
case

611
00:25:20,799 --> 00:25:23,360
the complexity of that attack surface

612
00:25:23,360 --> 00:25:24,400
it's even

613
00:25:24,400 --> 00:25:29,039
more uh it's even bigger

614
00:25:29,039 --> 00:25:32,720
so but let's talk about a bit about

615
00:25:32,720 --> 00:25:36,159
root of trust and uh nowadays

616
00:25:36,159 --> 00:25:39,760
uh it is uh it is a lot of companies

617
00:25:39,760 --> 00:25:40,640
talking about

618
00:25:40,640 --> 00:25:43,360
uh route of trust type to fpga and

619
00:25:43,360 --> 00:25:45,600
basically this custom route of trust

620
00:25:45,600 --> 00:25:47,520
it is interesting direction for

621
00:25:47,520 --> 00:25:49,039
especially for the cloud

622
00:25:49,039 --> 00:25:53,200
and data centers but

623
00:25:53,200 --> 00:25:56,159
how this route of trust break it in

624
00:25:56,159 --> 00:25:57,679
silicon

625
00:25:57,679 --> 00:26:01,039
can be attacked so first of all like uh

626
00:26:01,039 --> 00:26:04,880
remember this cisco trust and her attack

627
00:26:04,880 --> 00:26:08,559
from uh 2019 woodpecker

628
00:26:08,559 --> 00:26:12,240
and also from the talk from the defcon

629
00:26:12,240 --> 00:26:17,200
where the tiger been able to uh

630
00:26:17,360 --> 00:26:20,960
to attack the system and

631
00:26:20,960 --> 00:26:24,720
modify spy flash and bit code of

632
00:26:24,720 --> 00:26:27,760
fpga root of trust but in this

633
00:26:27,760 --> 00:26:31,200
in the other directions we have uh

634
00:26:31,200 --> 00:26:34,320
um this uh

635
00:26:34,320 --> 00:26:37,279
little bootloader inside the fpga fpga

636
00:26:37,279 --> 00:26:38,960
which is immutable right

637
00:26:38,960 --> 00:26:43,840
but not really so as example uh

638
00:26:43,840 --> 00:26:46,960
intel max 10 fpga been attacked

639
00:26:46,960 --> 00:26:51,120
and look uh i really highly recommend

640
00:26:51,120 --> 00:26:53,039
you to look on this presentation from

641
00:26:53,039 --> 00:26:54,480
the hardware io

642
00:26:54,480 --> 00:26:56,720
where

643
00:26:58,080 --> 00:27:01,440
sergey skribagata have been presenting

644
00:27:01,440 --> 00:27:05,360
the way how he can modify

645
00:27:05,360 --> 00:27:09,679
immutable bootloader inside the fpga

646
00:27:09,679 --> 00:27:12,480
basically we blindly trust anything

647
00:27:12,480 --> 00:27:14,159
which is baked in silicon

648
00:27:14,159 --> 00:27:16,480
because we believe what is in silicon it

649
00:27:16,480 --> 00:27:17,520
is secure

650
00:27:17,520 --> 00:27:20,559
but actually it is creating uh

651
00:27:20,559 --> 00:27:23,760
just more obscurity uh

652
00:27:23,760 --> 00:27:27,600
for um for us and for the attacker too

653
00:27:27,600 --> 00:27:28,399
of course

654
00:27:28,399 --> 00:27:31,440
but it is not being what is in silicon

655
00:27:31,440 --> 00:27:32,960
it is more secure

656
00:27:32,960 --> 00:27:35,440
we just understand less about the

657
00:27:35,440 --> 00:27:36,080
silicon

658
00:27:36,080 --> 00:27:38,559
because vendors try to make these

659
00:27:38,559 --> 00:27:42,000
technologies more obscure to us

660
00:27:42,000 --> 00:27:45,120
so and of course counter fight devices

661
00:27:45,120 --> 00:27:47,360
or hardware implants it's not a rare

662
00:27:47,360 --> 00:27:48,960
thing

663
00:27:48,960 --> 00:27:51,919
i would say if you interested in this

664
00:27:51,919 --> 00:27:54,159
direction look on the f-secure research

665
00:27:54,159 --> 00:27:55,440
where they found

666
00:27:55,440 --> 00:27:59,200
fake uh cisco uh cisco's

667
00:27:59,200 --> 00:28:02,880
with a counterfeit

668
00:28:04,720 --> 00:28:07,840
debug ports available on the boards so

669
00:28:07,840 --> 00:28:10,000
and it was basically the way how you can

670
00:28:10,000 --> 00:28:11,279
bypass on

671
00:28:11,279 --> 00:28:14,840
on all the updates uh verification and

672
00:28:14,840 --> 00:28:16,080
authentication

673
00:28:16,080 --> 00:28:19,520
on the platform so we really need to pay

674
00:28:19,520 --> 00:28:22,080
more attention to hidden attack surface

675
00:28:22,080 --> 00:28:24,000
in hardware and firmware

676
00:28:24,000 --> 00:28:26,720
and create more transparency and

677
00:28:26,720 --> 00:28:30,799
visibility level in this direction

678
00:28:30,799 --> 00:28:33,840
thank you very much greyhound khan and

679
00:28:33,840 --> 00:28:38,480
i will be glad to answer all your

680
00:28:39,480 --> 00:28:42,690
[Music]

681
00:28:42,840 --> 00:28:45,310
questions

682
00:28:45,310 --> 00:28:49,440
[Music]

683
00:28:49,440 --> 00:28:51,520
you

