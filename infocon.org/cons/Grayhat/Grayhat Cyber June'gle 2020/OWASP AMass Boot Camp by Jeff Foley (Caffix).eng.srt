1
00:00:00,320 --> 00:00:02,240
the broadcast is now starting all

2
00:00:02,240 --> 00:00:04,720
attendees are in listen only mode

3
00:00:04,720 --> 00:00:06,640
hey there everybody this is propaganda

4
00:00:06,640 --> 00:00:08,639
panda once again here to announce our

5
00:00:08,639 --> 00:00:11,040
next speaker for this next training

6
00:00:11,040 --> 00:00:14,240
today we have jeff foley he's a project

7
00:00:14,240 --> 00:00:14,719
leader

8
00:00:14,719 --> 00:00:17,920
at oas part of the amass project

9
00:00:17,920 --> 00:00:22,800
jeff how you doing good how's everybody

10
00:00:22,800 --> 00:00:24,320
everyone's on mute so they can't tell

11
00:00:24,320 --> 00:00:25,920
you but uh

12
00:00:25,920 --> 00:00:27,359
are you in our are you in our discord

13
00:00:27,359 --> 00:00:29,359
server jeff

14
00:00:29,359 --> 00:00:33,040
i am so for anybody who has questions

15
00:00:33,040 --> 00:00:34,480
and out there that they want to get some

16
00:00:34,480 --> 00:00:36,000
clarification on something that jeff

17
00:00:36,000 --> 00:00:37,760
talks about or you just have a question

18
00:00:37,760 --> 00:00:39,280
about something in general

19
00:00:39,280 --> 00:00:41,520
please go ahead and join the track one

20
00:00:41,520 --> 00:00:42,480
red team

21
00:00:42,480 --> 00:00:44,320
uh channel in our discord server that's

22
00:00:44,320 --> 00:00:45,760
where we're going to be monitoring

23
00:00:45,760 --> 00:00:47,520
and looking all those questions if you

24
00:00:47,520 --> 00:00:48,960
put questions in

25
00:00:48,960 --> 00:00:52,320
the uh good webinar we may get to it we

26
00:00:52,320 --> 00:00:53,760
might not get to it but our focus is

27
00:00:53,760 --> 00:00:55,199
going to be on the discord server so

28
00:00:55,199 --> 00:00:55,920
please

29
00:00:55,920 --> 00:00:57,920
and if you don't know how to get there

30
00:00:57,920 --> 00:00:59,280
just go to the website

31
00:00:59,280 --> 00:01:01,680
uh jungle.io and then take a look at the

32
00:01:01,680 --> 00:01:03,039
discord servers and you'll have the

33
00:01:03,039 --> 00:01:04,159
invite link

34
00:01:04,159 --> 00:01:07,119
there but jeff uh you know feel free to

35
00:01:07,119 --> 00:01:08,080
continue to

36
00:01:08,080 --> 00:01:09,360
introduce yourself talk a little bit

37
00:01:09,360 --> 00:01:10,640
about yourself and then we can get

38
00:01:10,640 --> 00:01:13,840
started with this training

39
00:01:16,000 --> 00:01:19,520
sounds good i'm just responding to

40
00:01:19,520 --> 00:01:22,399
something someone said

41
00:01:22,799 --> 00:01:26,159
yeah so

42
00:01:26,159 --> 00:01:28,080
uh and thank you for the great

43
00:01:28,080 --> 00:01:29,360
introduction yes i'm

44
00:01:29,360 --> 00:01:32,000
jeff foley i'm the project leader at oh

45
00:01:32,000 --> 00:01:33,119
wasp for

46
00:01:33,119 --> 00:01:37,439
the amass project and uh today

47
00:01:37,439 --> 00:01:40,240
i was going to cover a variety of topics

48
00:01:40,240 --> 00:01:41,920
topics that

49
00:01:41,920 --> 00:01:44,399
i've been told in the past people wanted

50
00:01:44,399 --> 00:01:47,439
to know more about or they felt

51
00:01:47,439 --> 00:01:50,560
maybe there's not clear documentation on

52
00:01:50,560 --> 00:01:52,159
some of these

53
00:01:52,159 --> 00:01:55,119
features i've also been told you know a

54
00:01:55,119 --> 00:01:56,719
mass is a

55
00:01:56,719 --> 00:01:58,320
some people have said a big a bit of a

56
00:01:58,320 --> 00:02:00,479
beast so there's a lot to

57
00:02:00,479 --> 00:02:03,840
potentially learn and

58
00:02:03,840 --> 00:02:05,360
you know i'd like to see people getting

59
00:02:05,360 --> 00:02:07,360
more value out of some of the

60
00:02:07,360 --> 00:02:11,520
powerful features that we've implemented

61
00:02:11,520 --> 00:02:12,720
but at the same time i was going to

62
00:02:12,720 --> 00:02:14,160
start kind of at ground zero so

63
00:02:14,160 --> 00:02:15,360
hopefully

64
00:02:15,360 --> 00:02:16,959
if no one's if some people haven't

65
00:02:16,959 --> 00:02:18,480
touched it before

66
00:02:18,480 --> 00:02:21,280
they could get started with what we're

67
00:02:21,280 --> 00:02:22,480
going to cover today

68
00:02:22,480 --> 00:02:23,840
but it's going to come pretty quick it

69
00:02:23,840 --> 00:02:26,319
might seem a little bit like fire hosing

70
00:02:26,319 --> 00:02:28,800
could lead to additional questions i'll

71
00:02:28,800 --> 00:02:29,520
try to leave

72
00:02:29,520 --> 00:02:32,560
time at the end so hopefully we can

73
00:02:32,560 --> 00:02:35,920
hit up some of those questions but

74
00:02:35,920 --> 00:02:38,160
we'll see how it goes i probably will

75
00:02:38,160 --> 00:02:39,920
not be able to do this

76
00:02:39,920 --> 00:02:42,480
and keep track of what people are saying

77
00:02:42,480 --> 00:02:44,000
in the discord

78
00:02:44,000 --> 00:02:46,959
at the same time so maybe if we could do

79
00:02:46,959 --> 00:02:48,800
a lot of the questions at the end

80
00:02:48,800 --> 00:02:50,800
that might make better use of the time

81
00:02:50,800 --> 00:02:54,160
that we have available today

82
00:02:54,400 --> 00:02:56,000
all right yeah i was gonna yeah i was

83
00:02:56,000 --> 00:02:57,280
gonna tell you jeff don't feel like you

84
00:02:57,280 --> 00:02:58,959
have to monitor discord at all

85
00:02:58,959 --> 00:03:02,319
um omar is there to help you

86
00:03:02,319 --> 00:03:04,640
in case someone has any questions that

87
00:03:04,640 --> 00:03:05,440
are like

88
00:03:05,440 --> 00:03:08,000
you know super urgent so i'm just just

89
00:03:08,000 --> 00:03:09,920
focus on your on the training that'll be

90
00:03:09,920 --> 00:03:10,800
awesome

91
00:03:10,800 --> 00:03:13,360
all right great

92
00:03:13,920 --> 00:03:17,680
okay so i usually at least start with a

93
00:03:17,680 --> 00:03:18,959
little bit of a summary of

94
00:03:18,959 --> 00:03:20,800
what it what is a mass in case like i

95
00:03:20,800 --> 00:03:22,560
said you just uh you've never heard of

96
00:03:22,560 --> 00:03:24,959
it you wanted to find out today

97
00:03:24,959 --> 00:03:28,319
so it's in-depth

98
00:03:28,319 --> 00:03:33,040
uh asset discovery and network mapping

99
00:03:33,040 --> 00:03:36,080
so that could be for

100
00:03:36,080 --> 00:03:39,280
red team or blue team purposes it's just

101
00:03:39,280 --> 00:03:40,720
so that

102
00:03:40,720 --> 00:03:42,799
if you want to see what your exposure on

103
00:03:42,799 --> 00:03:44,080
the internet is

104
00:03:44,080 --> 00:03:48,239
it's a pretty powerful tool for

105
00:03:48,239 --> 00:03:49,360
you know you could start with nothing

106
00:03:49,360 --> 00:03:52,080
but a domain name and end up finding out

107
00:03:52,080 --> 00:03:52,480
about

108
00:03:52,480 --> 00:03:55,840
assets you were not aware are exposed to

109
00:03:55,840 --> 00:03:56,879
the internet

110
00:03:56,879 --> 00:03:59,680
which in my experience working with

111
00:03:59,680 --> 00:04:01,120
corporations

112
00:04:01,120 --> 00:04:04,480
so far most of the time when we run them

113
00:04:04,480 --> 00:04:05,840
against these corporations that's

114
00:04:05,840 --> 00:04:07,280
exactly what happens is they end up

115
00:04:07,280 --> 00:04:08,159
finding out

116
00:04:08,159 --> 00:04:10,159
there's all sorts of things in their

117
00:04:10,159 --> 00:04:12,239
name space exposed on the internet that

118
00:04:12,239 --> 00:04:12,879
they didn't

119
00:04:12,879 --> 00:04:16,560
know about and haven't been tending to

120
00:04:16,560 --> 00:04:18,399
and in my opinion of course which i

121
00:04:18,399 --> 00:04:20,000
think is a popular opinion

122
00:04:20,000 --> 00:04:21,279
you can't protect it if you don't know

123
00:04:21,279 --> 00:04:23,040
what's there right

124
00:04:23,040 --> 00:04:24,400
and i've always found that to be a

125
00:04:24,400 --> 00:04:26,320
pretty

126
00:04:26,320 --> 00:04:29,759
important step in any security program

127
00:04:29,759 --> 00:04:31,199
let's make sure we understand exactly

128
00:04:31,199 --> 00:04:32,560
what the you know what i call the

129
00:04:32,560 --> 00:04:35,120
battlefield looks like

130
00:04:35,120 --> 00:04:38,560
so that we can not either protect it

131
00:04:38,560 --> 00:04:39,759
properly or

132
00:04:39,759 --> 00:04:43,759
plan our attack properly

133
00:04:43,759 --> 00:04:45,759
so that's always been the the goal of

134
00:04:45,759 --> 00:04:46,880
this project

135
00:04:46,880 --> 00:04:50,479
is let's help everyone

136
00:04:50,479 --> 00:04:56,160
become a little better at doing this

137
00:04:56,160 --> 00:04:59,360
so where do you find this

138
00:04:59,360 --> 00:05:02,479
uh project let me again

139
00:05:02,479 --> 00:05:07,520
assuming you haven't used it before

140
00:05:09,360 --> 00:05:12,880
so if you just google wasp

141
00:05:12,880 --> 00:05:16,880
mass the first thing that should come up

142
00:05:16,880 --> 00:05:20,800
is our repo on github

143
00:05:22,000 --> 00:05:24,000
and so i would definitely recommend

144
00:05:24,000 --> 00:05:25,440
everyone take

145
00:05:25,440 --> 00:05:27,440
take the time to uh read what we have

146
00:05:27,440 --> 00:05:29,520
here

147
00:05:29,520 --> 00:05:32,720
some of your questions could be uh

148
00:05:32,720 --> 00:05:36,000
answered right here you know and if not

149
00:05:36,000 --> 00:05:37,840
we're definitely interested in hearing

150
00:05:37,840 --> 00:05:39,520
what you perhaps think should be here

151
00:05:39,520 --> 00:05:40,720
that would have saved you time or

152
00:05:40,720 --> 00:05:43,280
anything like that don't hesitate to

153
00:05:43,280 --> 00:05:46,639
come to our discord uh please make that

154
00:05:46,639 --> 00:05:48,560
your first stop and then

155
00:05:48,560 --> 00:05:51,199
speak with us about honestly anything

156
00:05:51,199 --> 00:05:52,080
that comes

157
00:05:52,080 --> 00:05:55,520
comes to mind but there's some pretty

158
00:05:55,520 --> 00:05:56,960
good information here about

159
00:05:56,960 --> 00:06:00,560
uh getting started with installation

160
00:06:00,560 --> 00:06:02,080
uh where to find the documentation on

161
00:06:02,080 --> 00:06:04,319
how to use this

162
00:06:04,319 --> 00:06:06,639
some of our preferences on you know how

163
00:06:06,639 --> 00:06:08,400
do you interact with the project team if

164
00:06:08,400 --> 00:06:08,800
you

165
00:06:08,800 --> 00:06:10,319
if you want to be involved or you just

166
00:06:10,319 --> 00:06:12,639
have questions

167
00:06:12,639 --> 00:06:15,919
uh where to go if you are referencing

168
00:06:15,919 --> 00:06:17,840
this and you would like us to uh

169
00:06:17,840 --> 00:06:21,199
recognize that

170
00:06:21,199 --> 00:06:23,440
and so on so you know this is definitely

171
00:06:23,440 --> 00:06:24,960
the place to go this is where the action

172
00:06:24,960 --> 00:06:28,720
is happening that and the discord server

173
00:06:28,720 --> 00:06:31,520
as far as installation you have quite a

174
00:06:31,520 --> 00:06:32,400
few options

175
00:06:32,400 --> 00:06:35,280
if you're new to this i would recommend

176
00:06:35,280 --> 00:06:37,280
just go to the latest release

177
00:06:37,280 --> 00:06:41,120
and probably just start with

178
00:06:41,120 --> 00:06:43,039
you know grab the pre-built executable

179
00:06:43,039 --> 00:06:45,759
appropriate for your

180
00:06:45,759 --> 00:06:48,800
operating system because uh the other

181
00:06:48,800 --> 00:06:50,160
options are likely to

182
00:06:50,160 --> 00:06:53,680
come with complications that could

183
00:06:53,680 --> 00:06:55,280
you know get you on the wrong track i

184
00:06:55,280 --> 00:06:57,039
would say just get the executable start

185
00:06:57,039 --> 00:06:58,400
playing with it

186
00:06:58,400 --> 00:07:00,400
get familiar with it then you can worry

187
00:07:00,400 --> 00:07:02,560
about you know what what's the easiest

188
00:07:02,560 --> 00:07:04,479
way to deal with

189
00:07:04,479 --> 00:07:07,599
uh like an upgrade path or things that

190
00:07:07,599 --> 00:07:11,039
might lead to conveniences in the future

191
00:07:11,039 --> 00:07:14,240
and i would uh check this frequently

192
00:07:14,240 --> 00:07:16,720
you know this is updated pretty

193
00:07:16,720 --> 00:07:17,520
regularly with

194
00:07:17,520 --> 00:07:21,120
uh fixes and about every 30 days we try

195
00:07:21,120 --> 00:07:22,000
to make a

196
00:07:22,000 --> 00:07:25,759
a major or i guess it's actually it's a

197
00:07:25,759 --> 00:07:26,240
minor

198
00:07:26,240 --> 00:07:30,080
uh version of update

199
00:07:30,080 --> 00:07:34,639
so it's a pretty active project

200
00:07:34,639 --> 00:07:38,400
and the the fixes can be

201
00:07:38,400 --> 00:07:42,840
very you know have high impact on your

202
00:07:42,840 --> 00:07:44,400
experience

203
00:07:44,400 --> 00:07:46,240
i mean like as you can see here uh

204
00:07:46,240 --> 00:07:47,680
that's not what this one was released

205
00:07:47,680 --> 00:07:50,960
within the last 24 hours

206
00:07:52,960 --> 00:07:55,520
there are let me show you something real

207
00:07:55,520 --> 00:07:56,560
quick

208
00:07:56,560 --> 00:08:02,160
so if we go back and you go to

209
00:08:02,479 --> 00:08:05,599
the installation guide

210
00:08:05,759 --> 00:08:08,240
there are

211
00:08:09,039 --> 00:08:12,080
package managers out there that

212
00:08:12,080 --> 00:08:14,560
stay on top of this pretty well so as

213
00:08:14,560 --> 00:08:15,360
you can see uh

214
00:08:15,360 --> 00:08:19,440
cali freebsd black arch there's uh

215
00:08:19,440 --> 00:08:20,000
there's the

216
00:08:20,000 --> 00:08:23,520
uh our yeah so there's um

217
00:08:23,520 --> 00:08:26,000
there's a handful of these os's and

218
00:08:26,000 --> 00:08:27,280
their package measures where

219
00:08:27,280 --> 00:08:30,479
they're pretty up to date on the version

220
00:08:30,479 --> 00:08:32,559
you should be using

221
00:08:32,559 --> 00:08:34,240
and of course that's the probably the

222
00:08:34,240 --> 00:08:38,159
easiest way to get your hands on this

223
00:08:38,159 --> 00:08:40,240
but these are not maintained by this

224
00:08:40,240 --> 00:08:41,279
project

225
00:08:41,279 --> 00:08:43,839
those os's or the people responsible for

226
00:08:43,839 --> 00:08:45,120
those package managers

227
00:08:45,120 --> 00:08:47,920
uh pretty much have responsibility for

228
00:08:47,920 --> 00:08:49,040
the

229
00:08:49,040 --> 00:08:52,560
for that so the only ones that

230
00:08:52,560 --> 00:08:55,440
this project has control over is the

231
00:08:55,440 --> 00:08:56,800
homebrew

232
00:08:56,800 --> 00:08:59,200
installation and the snapcraft package

233
00:08:59,200 --> 00:09:01,040
manager which i would actually say

234
00:09:01,040 --> 00:09:02,320
unless you're only going to use the most

235
00:09:02,320 --> 00:09:04,560
basic features don't use this

236
00:09:04,560 --> 00:09:07,279
it comes with some heavy constraints

237
00:09:07,279 --> 00:09:09,040
that it puts on your use of the

238
00:09:09,040 --> 00:09:11,839
executable and it can reduce what you're

239
00:09:11,839 --> 00:09:14,480
able to do with it

240
00:09:14,480 --> 00:09:17,360
which they you know impose for security

241
00:09:17,360 --> 00:09:18,560
purposes

242
00:09:18,560 --> 00:09:20,480
but unless you know if you want to take

243
00:09:20,480 --> 00:09:21,920
full advantage of it i'd say either just

244
00:09:21,920 --> 00:09:23,040
go get the

245
00:09:23,040 --> 00:09:26,080
the executable or use one of these other

246
00:09:26,080 --> 00:09:27,519
third-party

247
00:09:27,519 --> 00:09:30,080
packages

248
00:09:31,040 --> 00:09:37,839
all right so with that i think we can

249
00:09:37,920 --> 00:09:39,839
let's take a quick look at documentation

250
00:09:39,839 --> 00:09:42,000
just so that

251
00:09:42,000 --> 00:09:45,279
people know where to find these things

252
00:09:47,360 --> 00:09:51,040
right so all of the documentation

253
00:09:51,040 --> 00:09:55,920
is under this directory right here

254
00:09:56,720 --> 00:09:59,680
i would definitely say

255
00:09:59,760 --> 00:10:02,240
uh read this real quick it's very short

256
00:10:02,240 --> 00:10:03,200
it's good to know

257
00:10:03,200 --> 00:10:06,720
your options take a look at these the

258
00:10:06,720 --> 00:10:09,519
the user guide is is a little boring but

259
00:10:09,519 --> 00:10:10,240
it has quite

260
00:10:10,240 --> 00:10:12,399
a lot of the details this tutorial is

261
00:10:12,399 --> 00:10:13,519
really great i would say

262
00:10:13,519 --> 00:10:15,760
take the time to read that it'll

263
00:10:15,760 --> 00:10:17,200
probably save you some

264
00:10:17,200 --> 00:10:20,640
some trouble uh getting started

265
00:10:20,640 --> 00:10:22,560
and then down the road if you plan on

266
00:10:22,560 --> 00:10:24,160
taking advantage of scripting

267
00:10:24,160 --> 00:10:26,160
definitely look at this this is where

268
00:10:26,160 --> 00:10:27,680
all the details

269
00:10:27,680 --> 00:10:30,839
are located for how to use the scripting

270
00:10:30,839 --> 00:10:33,839
engine

271
00:10:33,920 --> 00:10:35,519
all right so i think that covers some of

272
00:10:35,519 --> 00:10:38,480
the things i was hoping to

273
00:10:38,480 --> 00:10:42,320
have as a introduction

274
00:10:43,600 --> 00:10:45,120
if there's been any good questions that

275
00:10:45,120 --> 00:10:47,680
are relevant to this i would say

276
00:10:47,680 --> 00:10:49,040
if you want to let me know about it real

277
00:10:49,040 --> 00:10:51,200
quick

278
00:10:51,200 --> 00:10:52,560
you know i could hit that up before i

279
00:10:52,560 --> 00:11:01,839
move on to basic usage

280
00:11:06,959 --> 00:11:08,399
someone's typing but i'm not sure if

281
00:11:08,399 --> 00:11:15,839
that's an answer to my question

282
00:11:21,839 --> 00:11:24,959
all right while i'm waiting i'm gonna

283
00:11:26,079 --> 00:11:28,560
move along too so one question i have is

284
00:11:28,560 --> 00:11:29,440
can everyone see

285
00:11:29,440 --> 00:11:31,839
this terminal clear enough let me type a

286
00:11:31,839 --> 00:11:33,839
couple things

287
00:11:33,839 --> 00:11:36,880
like is this large enough

288
00:11:36,880 --> 00:11:43,839
for everyone to read this

289
00:11:50,800 --> 00:11:54,839
okay so one thing you you

290
00:11:54,839 --> 00:11:57,440
probably should know is so cali

291
00:11:57,440 --> 00:11:59,440
like i mentioned or i think i showed in

292
00:11:59,440 --> 00:12:01,279
the uh

293
00:12:01,279 --> 00:12:02,800
information about installation has its

294
00:12:02,800 --> 00:12:05,440
own package for this

295
00:12:05,440 --> 00:12:08,639
tool and when i just executed this

296
00:12:08,639 --> 00:12:10,880
that's what iran

297
00:12:10,880 --> 00:12:14,240
so this is one version

298
00:12:14,240 --> 00:12:17,680
behind her it's the version that

299
00:12:17,920 --> 00:12:20,399
the table indicated cali currently

300
00:12:20,399 --> 00:12:22,880
supports

301
00:12:23,040 --> 00:12:26,160
but i have installed the latest version

302
00:12:26,160 --> 00:12:29,360
in this directory

303
00:12:30,320 --> 00:12:32,880
so if you're ever wondering well how do

304
00:12:32,880 --> 00:12:33,920
i know which one i'm

305
00:12:33,920 --> 00:12:35,839
running or you know is this the one that

306
00:12:35,839 --> 00:12:37,440
i tried to install or is it you know the

307
00:12:37,440 --> 00:12:39,360
one that's been installed already

308
00:12:39,360 --> 00:12:41,040
you know this is how you figure it out

309
00:12:41,040 --> 00:12:42,399
it also i think it

310
00:12:42,399 --> 00:12:44,720
tells you which version uh each time you

311
00:12:44,720 --> 00:12:45,680
run it

312
00:12:45,680 --> 00:12:49,120
so but just as a heads up that's how you

313
00:12:49,120 --> 00:12:50,839
do that

314
00:12:50,839 --> 00:12:53,920
so you know some people

315
00:12:53,920 --> 00:12:57,440
come and uh ask us what

316
00:12:57,440 --> 00:12:58,959
what are the differences between the

317
00:12:58,959 --> 00:13:00,720
various modes how do you know how do i

318
00:13:00,720 --> 00:13:01,279
know which

319
00:13:01,279 --> 00:13:03,760
way to run this uh that suits my needs

320
00:13:03,760 --> 00:13:04,320
best

321
00:13:04,320 --> 00:13:06,320
so i'm gonna go over a few details about

322
00:13:06,320 --> 00:13:07,760
well how does this work and what you

323
00:13:07,760 --> 00:13:09,839
know what do some of these terms mean

324
00:13:09,839 --> 00:13:12,880
that uh get tossed around about a mass

325
00:13:12,880 --> 00:13:13,279
like

326
00:13:13,279 --> 00:13:16,800
the mode you're running in so

327
00:13:16,800 --> 00:13:20,320
to get started um it's important that

328
00:13:20,320 --> 00:13:21,519
people realize that

329
00:13:21,519 --> 00:13:24,320
many of the tools that do similar uh you

330
00:13:24,320 --> 00:13:26,399
know like subdomain enumeration or dns

331
00:13:26,399 --> 00:13:29,760
enumeration out there are very

332
00:13:29,760 --> 00:13:34,000
uh you know they just go out they go

333
00:13:34,000 --> 00:13:36,720
out and get the data a lot of them don't

334
00:13:36,720 --> 00:13:37,360
even do

335
00:13:37,360 --> 00:13:39,600
dns uh enumeration they just go out and

336
00:13:39,600 --> 00:13:41,600
get the data passively

337
00:13:41,600 --> 00:13:43,839
from various data sources they pull it

338
00:13:43,839 --> 00:13:44,800
down

339
00:13:44,800 --> 00:13:47,600
and then they just uh print out pretty

340
00:13:47,600 --> 00:13:48,079
much

341
00:13:48,079 --> 00:13:51,360
the unique results so that you're just

342
00:13:51,360 --> 00:13:54,560
getting a list of unique findings

343
00:13:54,560 --> 00:13:57,839
for the target domain

344
00:13:58,399 --> 00:14:04,160
but and that's what a math does if

345
00:14:04,240 --> 00:14:08,880
you run it like this if you if you say

346
00:14:09,279 --> 00:14:12,320
passive and then give it your

347
00:14:12,320 --> 00:14:16,959
target organization or domain

348
00:14:16,959 --> 00:14:18,639
and in that case the only thing it's

349
00:14:18,639 --> 00:14:20,800
going to do is what i just described

350
00:14:20,800 --> 00:14:21,920
it's going to it's going to go out to

351
00:14:21,920 --> 00:14:24,800
all the available data sources

352
00:14:24,800 --> 00:14:28,320
it's going to query for that and then

353
00:14:28,320 --> 00:14:31,440
pull the data back

354
00:14:31,440 --> 00:14:32,800
and it prints it out and then it's

355
00:14:32,800 --> 00:14:35,120
finished

356
00:14:35,120 --> 00:14:37,040
there's perhaps a few little things in

357
00:14:37,040 --> 00:14:39,040
between that it does but

358
00:14:39,040 --> 00:14:42,079
not really worth mentioning at this

359
00:14:42,079 --> 00:14:45,519
point in time but you can

360
00:14:45,519 --> 00:14:47,760
you can see from the fact that i i ran

361
00:14:47,760 --> 00:14:49,680
it with the source flag

362
00:14:49,680 --> 00:14:52,000
it's also telling us where did it get it

363
00:14:52,000 --> 00:14:53,279
from

364
00:14:53,279 --> 00:14:56,959
which i find pretty uh helpful

365
00:14:56,959 --> 00:14:58,880
so it will do this and make sure that

366
00:14:58,880 --> 00:15:00,959
it's received all the results that it

367
00:15:00,959 --> 00:15:02,880
can get from these

368
00:15:02,880 --> 00:15:05,120
data sources and then pretty soon you'll

369
00:15:05,120 --> 00:15:06,399
see it says all right there's nothing

370
00:15:06,399 --> 00:15:08,880
left to do

371
00:15:10,839 --> 00:15:12,160
quite

372
00:15:12,160 --> 00:15:15,199
so in my opinion though this is just the

373
00:15:15,199 --> 00:15:16,320
beginning

374
00:15:16,320 --> 00:15:19,600
of the pot of possibilities available to

375
00:15:19,600 --> 00:15:20,160
you

376
00:15:20,160 --> 00:15:23,279
for how to get this type of information

377
00:15:23,279 --> 00:15:25,519
it's what i used to refer to people when

378
00:15:25,519 --> 00:15:27,680
i was first developing this is like the

379
00:15:27,680 --> 00:15:31,600
the trampoline stage or the

380
00:15:31,600 --> 00:15:33,680
it's what gets the ball rolling it's

381
00:15:33,680 --> 00:15:35,680
it's where do we begin

382
00:15:35,680 --> 00:15:38,320
we have to start somewhere with okay we

383
00:15:38,320 --> 00:15:38,959
have this

384
00:15:38,959 --> 00:15:42,720
domain name so what what do we

385
00:15:42,720 --> 00:15:46,720
uh what do we first do with it to get

386
00:15:46,720 --> 00:15:47,279
some

387
00:15:47,279 --> 00:15:50,399
names so we can start poking around and

388
00:15:50,399 --> 00:15:53,040
finding more and these data sources are

389
00:15:53,040 --> 00:15:53,680
the

390
00:15:53,680 --> 00:15:54,880
place to begin where you can just say

391
00:15:54,880 --> 00:15:56,800
hey look i've got this domain name give

392
00:15:56,800 --> 00:15:58,800
me something give me something to

393
00:15:58,800 --> 00:16:02,880
start chewing on so

394
00:16:04,000 --> 00:16:06,639
but i i honestly rarely find myself

395
00:16:06,639 --> 00:16:07,279
using this

396
00:16:07,279 --> 00:16:10,639
it's it's the bare minimum

397
00:16:10,639 --> 00:16:13,680
instead if

398
00:16:13,680 --> 00:16:17,040
if you allow a mask to run in what i

399
00:16:17,040 --> 00:16:18,880
just considered normal mode or it's

400
00:16:18,880 --> 00:16:21,600
it's not passive it's not active in the

401
00:16:21,600 --> 00:16:22,720
sense that we're

402
00:16:22,720 --> 00:16:25,920
sending traffic directly to the target

403
00:16:25,920 --> 00:16:28,560
organization

404
00:16:28,959 --> 00:16:31,120
it's uh in between and what i mean by

405
00:16:31,120 --> 00:16:32,240
that is

406
00:16:32,240 --> 00:16:35,600
it's sending dns requests but i would

407
00:16:35,600 --> 00:16:38,320
kind of argue that

408
00:16:38,320 --> 00:16:41,519
that's not active at least in my opinion

409
00:16:41,519 --> 00:16:44,160
in the the sense that you're sending the

410
00:16:44,160 --> 00:16:46,959
dns request to the resolvers

411
00:16:46,959 --> 00:16:50,240
and since we're sending it

412
00:16:50,240 --> 00:16:52,320
with the flag saying we would prefer

413
00:16:52,320 --> 00:16:53,759
that

414
00:16:53,759 --> 00:16:55,680
you don't tell the authoritative name

415
00:16:55,680 --> 00:16:57,360
server where this came from

416
00:16:57,360 --> 00:17:00,560
although not all resolvers will

417
00:17:00,560 --> 00:17:04,160
adhere to that request uh

418
00:17:04,160 --> 00:17:05,919
and then the resolvers send the traffic

419
00:17:05,919 --> 00:17:07,599
to the authoritative name server

420
00:17:07,599 --> 00:17:09,599
that's controlled by the target

421
00:17:09,599 --> 00:17:10,959
organization

422
00:17:10,959 --> 00:17:14,160
i would say that's not really active

423
00:17:14,160 --> 00:17:15,839
i mean it is in the sense that there's

424
00:17:15,839 --> 00:17:18,319
the potential that your traffic could be

425
00:17:18,319 --> 00:17:19,520
received by

426
00:17:19,520 --> 00:17:21,280
that organization but it's also it's

427
00:17:21,280 --> 00:17:24,480
very like light or

428
00:17:24,480 --> 00:17:29,039
on far less likely to draw attention to

429
00:17:29,039 --> 00:17:31,919
your activity and many organizations i

430
00:17:31,919 --> 00:17:32,880
find this kind of

431
00:17:32,880 --> 00:17:34,640
funny actually many organizations don't

432
00:17:34,640 --> 00:17:37,679
notice it at all which i find concerning

433
00:17:37,679 --> 00:17:39,919
but

434
00:17:41,200 --> 00:17:44,559
with a mass active means

435
00:17:44,559 --> 00:17:47,679
that when you find something it will

436
00:17:47,679 --> 00:17:48,720
start to send

437
00:17:48,720 --> 00:17:52,559
traffic to those uh

438
00:17:52,559 --> 00:17:54,799
systems or assets so for instance it

439
00:17:54,799 --> 00:17:56,400
will attempt to

440
00:17:56,400 --> 00:18:00,160
reach out to the asset and see if it can

441
00:18:00,160 --> 00:18:04,000
pull tls certificates directly off

442
00:18:04,000 --> 00:18:07,440
the a web server if there is one

443
00:18:07,440 --> 00:18:10,480
if it finds name servers

444
00:18:10,480 --> 00:18:13,200
it will attempt to do zone transfers you

445
00:18:13,200 --> 00:18:14,960
know things that are

446
00:18:14,960 --> 00:18:17,360
far more attention getting you know

447
00:18:17,360 --> 00:18:18,080
you're going to

448
00:18:18,080 --> 00:18:20,320
draw attention to your activity by doing

449
00:18:20,320 --> 00:18:21,679
that

450
00:18:21,679 --> 00:18:25,520
uh than just making dns requests

451
00:18:25,520 --> 00:18:27,520
but that that's how i this is how i use

452
00:18:27,520 --> 00:18:30,000
it usually i say

453
00:18:30,000 --> 00:18:32,480
you know i don't identify a mode because

454
00:18:32,480 --> 00:18:33,039
you're all

455
00:18:33,039 --> 00:18:35,360
your alternative there's passive normal

456
00:18:35,360 --> 00:18:36,400
what i call normal

457
00:18:36,400 --> 00:18:39,360
and then active

458
00:18:39,440 --> 00:18:41,200
like i said right now that just means

459
00:18:41,200 --> 00:18:43,039
you're sending additional traffic to the

460
00:18:43,039 --> 00:18:43,919
target

461
00:18:43,919 --> 00:18:46,960
when the opportunity arises

462
00:18:46,960 --> 00:18:50,240
so this

463
00:18:50,240 --> 00:18:52,320
will start by doing the same thing that

464
00:18:52,320 --> 00:18:54,000
passive mode

465
00:18:54,000 --> 00:18:55,520
performs which is go out to the data

466
00:18:55,520 --> 00:18:57,440
sources grab the data that they're

467
00:18:57,440 --> 00:18:58,240
willing to give

468
00:18:58,240 --> 00:19:01,840
give us but then it starts this cyclic

469
00:19:01,840 --> 00:19:02,960
process

470
00:19:02,960 --> 00:19:06,400
where it takes those names

471
00:19:06,400 --> 00:19:10,320
it resolves them it gets ip addresses

472
00:19:10,320 --> 00:19:13,440
it then attempts to do reverse

473
00:19:13,440 --> 00:19:16,720
dns sweeps on

474
00:19:16,720 --> 00:19:21,280
ip addresses around the ips that we

475
00:19:21,280 --> 00:19:24,720
learned about it also

476
00:19:24,720 --> 00:19:27,840
uh will take the names that were

477
00:19:27,840 --> 00:19:29,919
successfully resolved and it will

478
00:19:29,919 --> 00:19:33,200
create uh permuted names that are

479
00:19:33,200 --> 00:19:35,120
similar to those names

480
00:19:35,120 --> 00:19:38,640
and see if those will if you turn on

481
00:19:38,640 --> 00:19:40,080
brute forcing which i'll show you more

482
00:19:40,080 --> 00:19:40,960
about later

483
00:19:40,960 --> 00:19:42,720
it will you know attempt to do brute

484
00:19:42,720 --> 00:19:44,640
forcing on the domain

485
00:19:44,640 --> 00:19:47,520
and the subdomains

486
00:19:48,480 --> 00:19:50,880
so those some of those features aren't

487
00:19:50,880 --> 00:19:52,000
available

488
00:19:52,000 --> 00:19:54,960
if you're purely in purely passive mode

489
00:19:54,960 --> 00:19:57,520
because there's no dns resolution

490
00:19:57,520 --> 00:20:01,280
or ability to query the names so we

491
00:20:01,280 --> 00:20:03,440
we have no feedback to say are these

492
00:20:03,440 --> 00:20:05,280
names legitimate

493
00:20:05,280 --> 00:20:08,640
or still in use and therefore there's no

494
00:20:08,640 --> 00:20:09,919
way to do the

495
00:20:09,919 --> 00:20:12,880
brute forcing there's no way to then you

496
00:20:12,880 --> 00:20:14,480
know get ips to then

497
00:20:14,480 --> 00:20:18,559
investigate the infrastructure further

498
00:20:18,880 --> 00:20:21,440
and that's what will happen if you allow

499
00:20:21,440 --> 00:20:23,919
a mass to

500
00:20:23,919 --> 00:20:26,400
use these additional features that like

501
00:20:26,400 --> 00:20:28,480
i said many other tools don't

502
00:20:28,480 --> 00:20:34,400
don't support

503
00:20:34,400 --> 00:20:36,000
all right so there's no need to really

504
00:20:36,000 --> 00:20:38,559
wait for this

505
00:20:42,320 --> 00:20:45,440
so as you see when i'm

506
00:20:45,440 --> 00:20:48,960
say tired of waiting for this

507
00:20:48,960 --> 00:20:50,720
you're seeing i'm just hitting uh

508
00:20:50,720 --> 00:20:53,280
control c to interrupt the process

509
00:20:53,280 --> 00:20:55,520
which it will catch and then assuming it

510
00:20:55,520 --> 00:20:56,960
can wrap up what was going on

511
00:20:56,960 --> 00:21:00,000
quick enough it will finish the process

512
00:21:00,000 --> 00:21:03,200
like it normally would by taking what it

513
00:21:03,200 --> 00:21:05,280
currently knows and then giving you the

514
00:21:05,280 --> 00:21:08,159
summary information at the bottom

515
00:21:08,159 --> 00:21:10,880
but the right way to do this if you

516
00:21:10,880 --> 00:21:12,159
would like to

517
00:21:12,159 --> 00:21:13,919
put a limit on how long it takes for

518
00:21:13,919 --> 00:21:16,000
your enumeration process

519
00:21:16,000 --> 00:21:19,600
to complete would not be to do what i

520
00:21:19,600 --> 00:21:20,320
just did

521
00:21:20,320 --> 00:21:22,880
for lots of reasons right one being it'd

522
00:21:22,880 --> 00:21:23,919
be difficult to

523
00:21:23,919 --> 00:21:27,360
script that probably or not convenient

524
00:21:27,360 --> 00:21:29,760
and it actually is not as clean within

525
00:21:29,760 --> 00:21:31,120
the amass

526
00:21:31,120 --> 00:21:34,320
program to do it the way i just did

527
00:21:34,320 --> 00:21:37,520
the better way would be to use a

528
00:21:37,520 --> 00:21:40,559
built-in feature that we have so

529
00:21:40,559 --> 00:21:42,840
let me show you so if we go to enum

530
00:21:42,840 --> 00:21:45,840
enum-h

531
00:21:47,039 --> 00:21:49,120
to get the help information right here

532
00:21:49,120 --> 00:21:51,280
we can see

533
00:21:51,280 --> 00:21:54,399
the timeout option

534
00:21:54,799 --> 00:21:56,799
so this lets you specify a number of

535
00:21:56,799 --> 00:21:58,480
minutes that you would like this to run

536
00:21:58,480 --> 00:22:00,000
before you just say okay look enough

537
00:22:00,000 --> 00:22:01,760
enough is enough

538
00:22:01,760 --> 00:22:03,120
you know maybe that depending on the

539
00:22:03,120 --> 00:22:05,039
size of your target maybe that's a few

540
00:22:05,039 --> 00:22:06,559
hours or something like that

541
00:22:06,559 --> 00:22:09,280
but this way you can be guaranteed that

542
00:22:09,280 --> 00:22:10,480
at that point

543
00:22:10,480 --> 00:22:13,840
within the enumeration process it will

544
00:22:13,840 --> 00:22:17,600
cleanly terminate the activity

545
00:22:17,600 --> 00:22:20,960
and conclude you know conclude the

546
00:22:20,960 --> 00:22:22,000
entire

547
00:22:22,000 --> 00:22:25,039
process or wrap it wrap it up or

548
00:22:25,039 --> 00:22:26,960
terminate it cleanly

549
00:22:26,960 --> 00:22:28,480
which will allow you to get all the

550
00:22:28,480 --> 00:22:31,440
output you were expecting

551
00:22:31,440 --> 00:22:35,440
and uh complete whatever workflow you

552
00:22:35,440 --> 00:22:38,799
you know have a mass involved in

553
00:22:38,799 --> 00:22:40,880
so i definitely recommend you use this

554
00:22:40,880 --> 00:22:43,360
instead

555
00:22:44,080 --> 00:22:45,520
i mean i would just let it finish

556
00:22:45,520 --> 00:22:47,919
personally but depending on your target

557
00:22:47,919 --> 00:22:49,679
and the way their infrastructure set up

558
00:22:49,679 --> 00:22:52,960
since a mass does uh perform a like

559
00:22:52,960 --> 00:22:55,120
exhaustive

560
00:22:55,120 --> 00:22:57,600
enumeration process there's really no

561
00:22:57,600 --> 00:22:59,200
guarantee as to how long this could take

562
00:22:59,200 --> 00:23:01,679
it'll take as long as it takes to

563
00:23:01,679 --> 00:23:05,679
finish in the enumeration for everything

564
00:23:05,679 --> 00:23:09,520
that i found so

565
00:23:09,520 --> 00:23:12,240
i i can't give you a time period as to

566
00:23:12,240 --> 00:23:14,480
how long exactly that will take

567
00:23:14,480 --> 00:23:15,919
because it's completely dependent on

568
00:23:15,919 --> 00:23:18,880
your target

569
00:23:18,880 --> 00:23:22,799
and end your own network performance

570
00:23:22,799 --> 00:23:25,679
like how many high performance resolvers

571
00:23:25,679 --> 00:23:26,880
you were able to give

572
00:23:26,880 --> 00:23:31,520
a mass and what your bandwidth is

573
00:23:31,679 --> 00:23:33,520
you know things that are outside of our

574
00:23:33,520 --> 00:23:35,360
control

575
00:23:35,360 --> 00:23:39,360
when we're uh implementing this

576
00:23:40,559 --> 00:23:43,678
all right so

577
00:23:45,200 --> 00:23:48,559
so that's kind of the long story for

578
00:23:48,559 --> 00:23:50,159
or at least what i can fit within this

579
00:23:50,159 --> 00:23:52,559
uh training session for what happens

580
00:23:52,559 --> 00:23:55,679
inside a mass and maybe to answer some

581
00:23:55,679 --> 00:23:56,880
people's questions about

582
00:23:56,880 --> 00:23:58,559
so why does it you know take so much

583
00:23:58,559 --> 00:24:00,320
longer for a mess versus

584
00:24:00,320 --> 00:24:02,840
some of the other tools that are purely

585
00:24:02,840 --> 00:24:05,840
passive

586
00:24:06,480 --> 00:24:09,840
one thing i uh people ask me quite a bit

587
00:24:09,840 --> 00:24:12,000
and i think is worth taking a quick look

588
00:24:12,000 --> 00:24:13,679
at is

589
00:24:13,679 --> 00:24:17,279
the configuration file

590
00:24:17,440 --> 00:24:20,159
so what i'll do

591
00:24:21,279 --> 00:24:26,559
let's go back to our repo

592
00:24:27,840 --> 00:24:32,159
because we have an example

593
00:24:32,159 --> 00:24:33,760
configuration file that you can start

594
00:24:33,760 --> 00:24:35,679
with

595
00:24:35,679 --> 00:24:39,840
that's right here and the link for it is

596
00:24:39,840 --> 00:24:42,880
right there so hopefully it's not too

597
00:24:42,880 --> 00:24:43,520
hard for

598
00:24:43,520 --> 00:24:47,039
people to find out about it

599
00:24:47,039 --> 00:24:50,080
but what is nice about this

600
00:24:50,080 --> 00:24:53,600
is a lot of the either defaults

601
00:24:53,600 --> 00:24:58,799
or you might say suggested values

602
00:24:58,799 --> 00:25:02,639
are in this example file

603
00:25:04,000 --> 00:25:07,679
so it gives you an idea of what you're

604
00:25:07,679 --> 00:25:08,720
working with

605
00:25:08,720 --> 00:25:11,120
if you either if you don't provide your

606
00:25:11,120 --> 00:25:14,000
own configuration

607
00:25:14,000 --> 00:25:16,559
or in some cases it gives you ideas for

608
00:25:16,559 --> 00:25:18,080
what

609
00:25:18,080 --> 00:25:20,240
are reasonable values if you're going to

610
00:25:20,240 --> 00:25:21,679
set this up yourself oh looks like

611
00:25:21,679 --> 00:25:23,600
there's a question let me

612
00:25:23,600 --> 00:25:26,320
wait a time out or for timeout to make a

613
00:25:26,320 --> 00:25:29,840
mess pause

614
00:25:31,120 --> 00:25:33,919
or after using the time well you have to

615
00:25:33,919 --> 00:25:34,960
start yeah

616
00:25:34,960 --> 00:25:38,080
okay so good question

617
00:25:38,720 --> 00:25:42,159
so the question was

618
00:25:42,159 --> 00:25:43,840
is it just that it you know terminates

619
00:25:43,840 --> 00:25:45,440
it or is can it pause it

620
00:25:45,440 --> 00:25:48,000
and then we can pick it back up again or

621
00:25:48,000 --> 00:25:49,200
do you have to start all over again

622
00:25:49,200 --> 00:25:51,360
so

623
00:25:53,520 --> 00:25:56,159
right now there's there's no uh

624
00:25:56,159 --> 00:25:57,760
implemented feature for

625
00:25:57,760 --> 00:26:00,880
pausing a mass

626
00:26:00,880 --> 00:26:04,000
and the the major reason being

627
00:26:04,000 --> 00:26:06,960
i mentioned a moment ago how it's a

628
00:26:06,960 --> 00:26:07,919
cyclic

629
00:26:07,919 --> 00:26:11,120
uh process so

630
00:26:11,120 --> 00:26:14,720
if we were going to support uh pausing

631
00:26:14,720 --> 00:26:17,200
we would have to be able to take

632
00:26:17,200 --> 00:26:19,760
basically a snapshot of exactly what

633
00:26:19,760 --> 00:26:20,960
this cyclic process

634
00:26:20,960 --> 00:26:23,919
looks like when when the indication

635
00:26:23,919 --> 00:26:24,720
comes in that

636
00:26:24,720 --> 00:26:27,600
it's time to pause and if there was any

637
00:26:27,600 --> 00:26:29,760
activity going on that was

638
00:26:29,760 --> 00:26:32,799
on the wire or over the network

639
00:26:32,799 --> 00:26:35,440
we'd either have to have a way of saying

640
00:26:35,440 --> 00:26:36,080
well when

641
00:26:36,080 --> 00:26:38,240
when we resume since that didn't finish

642
00:26:38,240 --> 00:26:39,760
yet then we have to fire up

643
00:26:39,760 --> 00:26:42,960
all these requests again

644
00:26:42,960 --> 00:26:44,960
or we'd have to be okay with some of

645
00:26:44,960 --> 00:26:47,840
them being lost

646
00:26:47,840 --> 00:26:51,279
and only say preserving the ones that

647
00:26:51,279 --> 00:26:53,440
didn't yet get sent out and even then

648
00:26:53,440 --> 00:26:55,120
we'd have to

649
00:26:55,120 --> 00:26:57,039
have a way of saving all those i guess

650
00:26:57,039 --> 00:26:58,320
the short version of what i'm trying to

651
00:26:58,320 --> 00:26:58,799
say is

652
00:26:58,799 --> 00:27:00,640
it would be almost a nightmare trying to

653
00:27:00,640 --> 00:27:03,120
keep track of all this

654
00:27:03,120 --> 00:27:04,960
since there's there's so much happening

655
00:27:04,960 --> 00:27:06,240
at any given moment

656
00:27:06,240 --> 00:27:09,840
within the mass so

657
00:27:09,840 --> 00:27:11,200
there's been plenty of people who have

658
00:27:11,200 --> 00:27:13,279
asked could you

659
00:27:13,279 --> 00:27:16,240
implement pausing and while i'm sure the

660
00:27:16,240 --> 00:27:17,360
answer is well

661
00:27:17,360 --> 00:27:21,440
technically yeah i'm sure it's feasible

662
00:27:21,440 --> 00:27:23,039
it's definitely not been something we

663
00:27:23,039 --> 00:27:25,279
wanted to do

664
00:27:25,279 --> 00:27:28,320
because it would be a lot of work and

665
00:27:28,320 --> 00:27:29,760
honestly i'm not really sure how many

666
00:27:29,760 --> 00:27:30,720
people

667
00:27:30,720 --> 00:27:34,080
feel the need to use it

668
00:27:34,080 --> 00:27:36,799
so i haven't been able to gauge whether

669
00:27:36,799 --> 00:27:37,679
it's really worth

670
00:27:37,679 --> 00:27:38,720
going through all the trouble of

671
00:27:38,720 --> 00:27:41,360
implementing it

672
00:27:42,399 --> 00:27:44,240
but one thing that perhaps would make

673
00:27:44,240 --> 00:27:45,520
people feel a little better about all

674
00:27:45,520 --> 00:27:46,559
this is

675
00:27:46,559 --> 00:27:50,720
when whatever amount of work you get

676
00:27:50,720 --> 00:27:53,600
that you accomplish

677
00:27:54,159 --> 00:27:55,919
uh during your enumeration so let's say

678
00:27:55,919 --> 00:27:57,520
you said okay i only have time to do

679
00:27:57,520 --> 00:27:58,799
this for one hour and then

680
00:27:58,799 --> 00:28:02,880
that's it i i gotta go um

681
00:28:02,880 --> 00:28:05,120
everything that is discovered during

682
00:28:05,120 --> 00:28:06,240
that period of time though

683
00:28:06,240 --> 00:28:10,640
is saved in in a graph database

684
00:28:10,640 --> 00:28:12,399
as long as you don't turn the feature

685
00:28:12,399 --> 00:28:14,159
off that i'm about to mention

686
00:28:14,159 --> 00:28:16,640
so it saves all this in a graph database

687
00:28:16,640 --> 00:28:18,240
and let's say when you

688
00:28:18,240 --> 00:28:22,720
uh then traveled somewhere else and

689
00:28:22,720 --> 00:28:24,399
got to where you need to be and found

690
00:28:24,399 --> 00:28:26,000
yourself now in a position to

691
00:28:26,000 --> 00:28:29,279
fire this back up when

692
00:28:29,279 --> 00:28:31,840
if you fire it back up with the same you

693
00:28:31,840 --> 00:28:34,640
know target organization

694
00:28:34,640 --> 00:28:36,240
it will take all the information that

695
00:28:36,240 --> 00:28:38,000
was

696
00:28:38,000 --> 00:28:40,240
learned you know discovered in your

697
00:28:40,240 --> 00:28:41,600
first enumeration

698
00:28:41,600 --> 00:28:44,399
or uh for that matter in any number of

699
00:28:44,399 --> 00:28:45,200
new

700
00:28:45,200 --> 00:28:48,159
previous enumerations it will take all

701
00:28:48,159 --> 00:28:50,000
that information and

702
00:28:50,000 --> 00:28:53,679
try to use it in your next enumeration

703
00:28:53,679 --> 00:28:56,320
so that it doesn't you don't lose

704
00:28:56,320 --> 00:28:58,159
anything that you already

705
00:28:58,159 --> 00:29:01,360
learned about previously

706
00:29:02,720 --> 00:29:05,840
so you know that helps i mean the only

707
00:29:05,840 --> 00:29:07,679
thing that's

708
00:29:07,679 --> 00:29:09,679
about that is it's still going to try to

709
00:29:09,679 --> 00:29:12,240
find all those things all over again

710
00:29:12,240 --> 00:29:14,640
but at least you can be pretty sure that

711
00:29:14,640 --> 00:29:16,080
if you found it before you're going to

712
00:29:16,080 --> 00:29:18,880
find it this time too

713
00:29:18,880 --> 00:29:20,320
and what and one reason that's really

714
00:29:20,320 --> 00:29:22,559
nice and part of the motivation for us

715
00:29:22,559 --> 00:29:25,200
implementing that was that when we

716
00:29:25,200 --> 00:29:27,360
created the tracking feature which is

717
00:29:27,360 --> 00:29:28,480
you know i'll show you a little bit more

718
00:29:28,480 --> 00:29:30,640
about that in a minute but it's

719
00:29:30,640 --> 00:29:33,760
what allows you to see what's changed

720
00:29:33,760 --> 00:29:35,760
from one enumeration to the next

721
00:29:35,760 --> 00:29:38,399
and just get the highlights like what's

722
00:29:38,399 --> 00:29:38,799
new

723
00:29:38,799 --> 00:29:42,320
what has been removed or what has

724
00:29:42,320 --> 00:29:46,799
moved within the infrastructure

725
00:29:46,960 --> 00:29:48,240
it's kind of hard to do that if you

726
00:29:48,240 --> 00:29:50,880
don't have some way of

727
00:29:50,880 --> 00:29:53,360
uh ensuring you know ensuring that we

728
00:29:53,360 --> 00:29:54,640
have

729
00:29:54,640 --> 00:29:58,240
consistency from one enumeration to the

730
00:29:58,240 --> 00:29:58,880
next

731
00:29:58,880 --> 00:30:01,919
you know if each time you run it each

732
00:30:01,919 --> 00:30:03,039
enumeration is kind of

733
00:30:03,039 --> 00:30:05,279
on its own and you're hoping that

734
00:30:05,279 --> 00:30:06,640
they're going to come up consistent each

735
00:30:06,640 --> 00:30:07,039
time

736
00:30:07,039 --> 00:30:09,440
it doesn't really work out that great

737
00:30:09,440 --> 00:30:10,399
since

738
00:30:10,399 --> 00:30:12,799
every single time you do this data

739
00:30:12,799 --> 00:30:15,520
sources could behave differently

740
00:30:15,520 --> 00:30:17,200
the networks could behave differently

741
00:30:17,200 --> 00:30:19,120
there's all sorts of reasons why you

742
00:30:19,120 --> 00:30:20,960
could come up with

743
00:30:20,960 --> 00:30:24,799
uh answers that are not exactly the same

744
00:30:24,799 --> 00:30:28,960
because again this isn't just using

745
00:30:28,960 --> 00:30:30,559
uh data but you know we're not just

746
00:30:30,559 --> 00:30:32,159
reaching out to databases and saying

747
00:30:32,159 --> 00:30:33,279
please

748
00:30:33,279 --> 00:30:35,440
give me what you know about this and

749
00:30:35,440 --> 00:30:37,120
then printing it out

750
00:30:37,120 --> 00:30:38,480
which is what a lot of these other tools

751
00:30:38,480 --> 00:30:40,640
are doing there's there's lots of

752
00:30:40,640 --> 00:30:41,919
factors that can cause

753
00:30:41,919 --> 00:30:44,720
a mass to get different results each

754
00:30:44,720 --> 00:30:46,799
time

755
00:30:46,799 --> 00:30:48,320
especially since some of these uh

756
00:30:48,320 --> 00:30:50,240
methods that we use

757
00:30:50,240 --> 00:30:54,960
also employ random guessing

758
00:30:54,960 --> 00:30:58,080
so you know one time you could get lucky

759
00:30:58,080 --> 00:31:00,880
and discover a name that you know the

760
00:31:00,880 --> 00:31:01,919
chances of you getting

761
00:31:01,919 --> 00:31:04,080
you know lucky the next time it's hard

762
00:31:04,080 --> 00:31:06,559
to say exactly what it will be

763
00:31:06,559 --> 00:31:08,399
but if it's saved you could think of it

764
00:31:08,399 --> 00:31:10,240
as we have it

765
00:31:10,240 --> 00:31:13,440
so we're going to get in the future

766
00:31:13,760 --> 00:31:14,960
so i don't know if that answers the

767
00:31:14,960 --> 00:31:18,799
question exactly um

768
00:31:18,799 --> 00:31:21,360
but maybe it at least partially solves

769
00:31:21,360 --> 00:31:22,480
the

770
00:31:22,480 --> 00:31:26,960
the problem of not having the

771
00:31:26,960 --> 00:31:28,640
pause feature someone it looks like

772
00:31:28,640 --> 00:31:30,399
someone just asked what's the optimum

773
00:31:30,399 --> 00:31:32,559
timeout value

774
00:31:32,559 --> 00:31:34,640
fair question but as i mentioned earlier

775
00:31:34,640 --> 00:31:36,159
really hard to say

776
00:31:36,159 --> 00:31:39,600
since my you know my answer would be

777
00:31:39,600 --> 00:31:42,480
it totally depends on your target for

778
00:31:42,480 --> 00:31:43,360
instance

779
00:31:43,360 --> 00:31:44,760
if you're doing it against you know

780
00:31:44,760 --> 00:31:48,000
owasp.org like i was a moment ago

781
00:31:48,000 --> 00:31:50,720
i would say oh well maybe the optimum

782
00:31:50,720 --> 00:31:52,240
value is

783
00:31:52,240 --> 00:31:54,799
5 to 10 minutes or whatever it takes to

784
00:31:54,799 --> 00:31:56,559
come up with the 18 different names i

785
00:31:56,559 --> 00:31:58,399
think it is that

786
00:31:58,399 --> 00:32:01,840
typically uh are discovered

787
00:32:02,240 --> 00:32:03,919
but if you're doing it against you know

788
00:32:03,919 --> 00:32:06,559
yahoo.com or something like that

789
00:32:06,559 --> 00:32:08,720
who knows it could be 48 hours or you

790
00:32:08,720 --> 00:32:10,080
know i don't i don't know how long it

791
00:32:10,080 --> 00:32:13,200
tends to take to finish that entire

792
00:32:13,200 --> 00:32:15,679
namespace but

793
00:32:15,679 --> 00:32:17,840
and it depends on also are you doing one

794
00:32:17,840 --> 00:32:19,039
domain name

795
00:32:19,039 --> 00:32:22,159
or are you doing say all

796
00:32:22,159 --> 00:32:25,360
20 or who knows how many that

797
00:32:25,360 --> 00:32:30,000
the target organization has registered

798
00:32:30,000 --> 00:32:32,240
because of course that's going to just

799
00:32:32,240 --> 00:32:35,200
add time to how long this takes

800
00:32:35,200 --> 00:32:38,640
so i wish i had an answer for you

801
00:32:39,200 --> 00:32:41,679
but yeah i'm afraid i don't it's one of

802
00:32:41,679 --> 00:32:42,880
these things that you'll you'll have to

803
00:32:42,880 --> 00:32:44,880
feel it out i suppose if you

804
00:32:44,880 --> 00:32:46,799
if you're keeping your eye on a

805
00:32:46,799 --> 00:32:49,200
particular organization

806
00:32:49,200 --> 00:32:51,120
whether that's because it's for say a

807
00:32:51,120 --> 00:32:53,760
bug bounty program or

808
00:32:53,760 --> 00:32:55,440
or because you're trying to protect that

809
00:32:55,440 --> 00:32:57,919
organization and you're monitoring its

810
00:32:57,919 --> 00:33:00,240
you know internet exposure i think

811
00:33:00,240 --> 00:33:01,279
you're

812
00:33:01,279 --> 00:33:04,480
you'll just have to feel out what is

813
00:33:04,480 --> 00:33:06,720
normal

814
00:33:06,720 --> 00:33:09,679
for uh or you know what you're typically

815
00:33:09,679 --> 00:33:10,399
seeing

816
00:33:10,399 --> 00:33:12,159
happening with that organization and

817
00:33:12,159 --> 00:33:13,279
then you're just going to have to kind

818
00:33:13,279 --> 00:33:14,000
of

819
00:33:14,000 --> 00:33:16,480
create your own configuration file that

820
00:33:16,480 --> 00:33:18,320
works well for you

821
00:33:18,320 --> 00:33:20,799
that's what i would do and it's what i

822
00:33:20,799 --> 00:33:21,519
have done

823
00:33:21,519 --> 00:33:24,720
for targets that i'm

824
00:33:24,720 --> 00:33:27,360
interested in

825
00:33:28,960 --> 00:33:32,559
all right so going back to the

826
00:33:32,559 --> 00:33:35,200
config file

827
00:33:36,320 --> 00:33:38,559
so some of these uh options in here

828
00:33:38,559 --> 00:33:39,600
while

829
00:33:39,600 --> 00:33:42,080
it's nice that they're available i i

830
00:33:42,080 --> 00:33:43,519
think i would say

831
00:33:43,519 --> 00:33:45,120
i actually find myself not using them

832
00:33:45,120 --> 00:33:47,200
very much for instance

833
00:33:47,200 --> 00:33:51,519
i think i rarely specify resolvers

834
00:33:51,519 --> 00:33:54,080
through my config file you know instead

835
00:33:54,080 --> 00:33:56,240
i think i i tend to

836
00:33:56,240 --> 00:33:59,600
keep a separate dot text file that has a

837
00:33:59,600 --> 00:34:02,799
resolver ip address on each line and i i

838
00:34:02,799 --> 00:34:04,640
feed that into my

839
00:34:04,640 --> 00:34:07,840
command line interface

840
00:34:08,239 --> 00:34:09,280
and i'll show you a little bit more

841
00:34:09,280 --> 00:34:11,679
about that in a minute

842
00:34:11,679 --> 00:34:12,879
so there's some things you can do in

843
00:34:12,879 --> 00:34:14,320
here that just because you can i'm not

844
00:34:14,320 --> 00:34:15,440
sure i would say that means

845
00:34:15,440 --> 00:34:18,399
that's what you want to do

846
00:34:19,119 --> 00:34:22,960
but there are some uh handy

847
00:34:22,960 --> 00:34:24,399
things in here like for instance if you

848
00:34:24,399 --> 00:34:26,639
know excuse me

849
00:34:26,639 --> 00:34:28,239
some of these data sources are just

850
00:34:28,239 --> 00:34:30,639
causing your process to take too long

851
00:34:30,639 --> 00:34:31,040
and

852
00:34:31,040 --> 00:34:33,679
you're not generally getting many

853
00:34:33,679 --> 00:34:34,719
results out of them

854
00:34:34,719 --> 00:34:37,040
or you know that a different data source

855
00:34:37,040 --> 00:34:39,040
always finds the same

856
00:34:39,040 --> 00:34:42,639
names then take them out

857
00:34:42,639 --> 00:34:45,040
you know because they they can add time

858
00:34:45,040 --> 00:34:46,399
to

859
00:34:46,399 --> 00:34:49,599
the overall you know the entire process

860
00:34:49,599 --> 00:34:51,119
so if you know that they're not working

861
00:34:51,119 --> 00:34:53,440
for you again you're feeling things out

862
00:34:53,440 --> 00:34:54,399
and you can kind of tell

863
00:34:54,399 --> 00:34:57,440
if it's not doing any good then

864
00:34:57,440 --> 00:34:58,800
remove them or if you're just not

865
00:34:58,800 --> 00:35:01,200
comfortable using them

866
00:35:01,200 --> 00:35:02,960
again take take them out and this is a

867
00:35:02,960 --> 00:35:04,960
great way to do that

868
00:35:04,960 --> 00:35:06,079
and so that you don't have to keep

869
00:35:06,079 --> 00:35:10,000
specifying it on the command line

870
00:35:11,280 --> 00:35:15,680
um let's see so brute forcing

871
00:35:15,680 --> 00:35:17,200
configuration options these are pretty

872
00:35:17,200 --> 00:35:18,560
important i'm going to talk a little bit

873
00:35:18,560 --> 00:35:19,839
more about them later though so i don't

874
00:35:19,839 --> 00:35:21,280
want to spend too much time here about

875
00:35:21,280 --> 00:35:21,680
it

876
00:35:21,680 --> 00:35:24,160
same thing with alterations but i would

877
00:35:24,160 --> 00:35:25,839
say if you really want to maximize on

878
00:35:25,839 --> 00:35:26,640
these features

879
00:35:26,640 --> 00:35:30,240
get to know what these things mean um

880
00:35:30,240 --> 00:35:33,040
i actually think

881
00:35:33,920 --> 00:35:37,119
the user's guide currently summarizes

882
00:35:37,119 --> 00:35:41,280
this the best but i also am pretty sure

883
00:35:41,280 --> 00:35:42,560
that we recently

884
00:35:42,560 --> 00:35:46,000
updated the repo wiki

885
00:35:46,000 --> 00:35:48,160
and i think there's an entire section of

886
00:35:48,160 --> 00:35:49,119
the wiki that

887
00:35:49,119 --> 00:35:52,800
is dedicated to just configuration

888
00:35:52,800 --> 00:35:55,280
options so that could be worth taking a

889
00:35:55,280 --> 00:35:56,880
look at if you're really

890
00:35:56,880 --> 00:35:59,839
dying to know about what you know how

891
00:35:59,839 --> 00:36:02,640
you can tweak this to your needs

892
00:36:02,640 --> 00:36:05,760
but usually the the probably the biggest

893
00:36:05,760 --> 00:36:07,200
reason everyone wants to use

894
00:36:07,200 --> 00:36:09,920
this file is because this is the only

895
00:36:09,920 --> 00:36:11,040
place

896
00:36:11,040 --> 00:36:13,119
at least currently where you can specify

897
00:36:13,119 --> 00:36:16,160
your api keys

898
00:36:16,400 --> 00:36:19,440
and i i don't know if it's the way you

899
00:36:19,440 --> 00:36:21,280
know the way i did this or what but i

900
00:36:21,280 --> 00:36:23,200
feel like i get a handful of people

901
00:36:23,200 --> 00:36:25,200
coming to me saying they have trouble

902
00:36:25,200 --> 00:36:26,480
doing this

903
00:36:26,480 --> 00:36:29,119
but so let me show you real quick you

904
00:36:29,119 --> 00:36:30,320
know what this

905
00:36:30,320 --> 00:36:32,320
would look like if you opened this

906
00:36:32,320 --> 00:36:34,560
example file up and you said okay

907
00:36:34,560 --> 00:36:37,920
you know i want to add census

908
00:36:37,920 --> 00:36:41,200
uh to my enumeration process which by

909
00:36:41,200 --> 00:36:43,440
the way it's already in there

910
00:36:43,440 --> 00:36:46,079
it's just some of these some of these

911
00:36:46,079 --> 00:36:47,040
don't work at all

912
00:36:47,040 --> 00:36:50,079
without a key some of them

913
00:36:50,079 --> 00:36:54,240
will kind of work without a key but

914
00:36:54,240 --> 00:36:56,880
very under very limited you know

915
00:36:56,880 --> 00:36:59,440
conditions

916
00:37:00,079 --> 00:37:03,200
and in those with the key

917
00:37:03,200 --> 00:37:07,040
you'll get maximum results

918
00:37:07,119 --> 00:37:10,079
but in order for it to work you have to

919
00:37:10,079 --> 00:37:10,640
remove

920
00:37:10,640 --> 00:37:13,839
these these uh

921
00:37:14,000 --> 00:37:17,040
pound signs so

922
00:37:17,040 --> 00:37:19,520
these are the comments right so

923
00:37:19,520 --> 00:37:21,280
currently these are commented out

924
00:37:21,280 --> 00:37:24,160
but in order for this to get picked up

925
00:37:24,160 --> 00:37:25,359
by

926
00:37:25,359 --> 00:37:29,520
the uh the program

927
00:37:29,520 --> 00:37:33,680
this uh section name has to be

928
00:37:33,680 --> 00:37:36,880
not commented this this isn't just here

929
00:37:36,880 --> 00:37:37,440
for

930
00:37:37,440 --> 00:37:40,880
like for looks it's it's uh

931
00:37:40,880 --> 00:37:42,640
it's just like the ones up here let me

932
00:37:42,640 --> 00:37:44,800
see

933
00:37:44,800 --> 00:37:46,560
i'm not sure if any of these are by okay

934
00:37:46,560 --> 00:37:48,160
so like this is the only section i'm

935
00:37:48,160 --> 00:37:49,040
seeing that

936
00:37:49,040 --> 00:37:53,599
is not commented by default in this file

937
00:37:53,599 --> 00:37:56,400
but it needs to be there in order for

938
00:37:56,400 --> 00:37:58,240
the information to be discovered and for

939
00:37:58,240 --> 00:38:00,400
it to be

940
00:38:00,400 --> 00:38:03,520
treated as a unique

941
00:38:03,520 --> 00:38:07,440
api key with an with a name

942
00:38:07,440 --> 00:38:10,720
which which has to match the name

943
00:38:10,720 --> 00:38:13,040
of the data source that's going to use

944
00:38:13,040 --> 00:38:14,240
it

945
00:38:14,240 --> 00:38:17,119
so it's really important and the

946
00:38:17,119 --> 00:38:19,599
examples you see in here

947
00:38:19,599 --> 00:38:21,839
some of them you'll see don't have the

948
00:38:21,839 --> 00:38:23,440
same

949
00:38:23,440 --> 00:38:26,000
uh attributes as all the other ones

950
00:38:26,000 --> 00:38:27,440
right

951
00:38:27,440 --> 00:38:30,800
and that's not coincidental or like oh

952
00:38:30,800 --> 00:38:32,160
we were just in the mood to call

953
00:38:32,160 --> 00:38:34,079
something else one day

954
00:38:34,079 --> 00:38:35,680
it's because for these that are already

955
00:38:35,680 --> 00:38:37,359
implemented

956
00:38:37,359 --> 00:38:40,240
that's what these have to be called in

957
00:38:40,240 --> 00:38:40,880
order for

958
00:38:40,880 --> 00:38:43,440
the authentication information to be

959
00:38:43,440 --> 00:38:46,240
received properly by

960
00:38:46,240 --> 00:38:51,759
the amass data source implementations

961
00:38:52,480 --> 00:38:54,240
so i would say pay close attention to

962
00:38:54,240 --> 00:38:56,079
what these look like

963
00:38:56,079 --> 00:38:59,680
just uncomment them and then provide

964
00:38:59,680 --> 00:39:00,000
your

965
00:39:00,000 --> 00:39:02,560
key if it's a key or your you know like

966
00:39:02,560 --> 00:39:05,119
username and password

967
00:39:05,119 --> 00:39:08,960
uh so that they're received properly by

968
00:39:08,960 --> 00:39:10,000
the

969
00:39:10,000 --> 00:39:13,200
program now the other thing is

970
00:39:13,200 --> 00:39:14,400
some of these have to be i don't know if

971
00:39:14,400 --> 00:39:16,560
there's any examples of this in here

972
00:39:16,560 --> 00:39:21,280
so another reason to mention it would be

973
00:39:21,280 --> 00:39:24,079
you're probably better off uh putting

974
00:39:24,079 --> 00:39:25,920
what whatever key

975
00:39:25,920 --> 00:39:30,079
you provide in quotes

976
00:39:30,079 --> 00:39:32,560
just in the strange case that it has

977
00:39:32,560 --> 00:39:34,000
unusual characters that would be

978
00:39:34,000 --> 00:39:36,240
interpreted in a strange way

979
00:39:36,240 --> 00:39:39,280
by ini parsing

980
00:39:39,280 --> 00:39:40,880
your best bet is put it in quotes and

981
00:39:40,880 --> 00:39:42,720
then it's just going to be treated as a

982
00:39:42,720 --> 00:39:46,079
string that will be passed as is

983
00:39:46,079 --> 00:39:48,800
to the program

984
00:39:50,560 --> 00:39:53,359
if you uh decide to make your own

985
00:39:53,359 --> 00:39:54,480
scripts

986
00:39:54,480 --> 00:39:57,440
for a mass there's nothing preventing

987
00:39:57,440 --> 00:39:58,880
you from

988
00:39:58,880 --> 00:40:02,079
adding your own uh

989
00:40:02,079 --> 00:40:04,400
sections in here like i said that match

990
00:40:04,400 --> 00:40:06,319
the name of your

991
00:40:06,319 --> 00:40:10,160
uh data source and providing your own

992
00:40:10,160 --> 00:40:13,520
key so you can you can kind of like take

993
00:40:13,520 --> 00:40:15,280
full control of this

994
00:40:15,280 --> 00:40:17,280
if you want there's also nothing

995
00:40:17,280 --> 00:40:20,319
preventing you from

996
00:40:23,440 --> 00:40:26,720
well let me be careful about that

997
00:40:26,720 --> 00:40:28,960
now in in your script the only the only

998
00:40:28,960 --> 00:40:30,720
data that will end up in the script

999
00:40:30,720 --> 00:40:34,079
that's related to uh the api keys

1000
00:40:34,079 --> 00:40:38,079
is the ones that match the name of your

1001
00:40:38,079 --> 00:40:41,839
your script so because it will only uh

1002
00:40:41,839 --> 00:40:45,279
map that into your script

1003
00:40:46,240 --> 00:40:50,078
all right so enough enough of that

1004
00:40:50,400 --> 00:40:52,880
one more thing i get asked about a lot

1005
00:40:52,880 --> 00:40:54,319
is

1006
00:40:54,319 --> 00:40:57,280
so a mass keeps a lot of this

1007
00:40:57,280 --> 00:40:58,000
information

1008
00:40:58,000 --> 00:41:01,760
somewhere and uh

1009
00:41:01,760 --> 00:41:03,839
people uh end up with a lot of questions

1010
00:41:03,839 --> 00:41:06,480
about this so

1011
00:41:06,480 --> 00:41:09,520
we call this the output directory

1012
00:41:09,520 --> 00:41:11,839
but there's some pretty important things

1013
00:41:11,839 --> 00:41:13,040
that

1014
00:41:13,040 --> 00:41:15,680
happen in this directory so if you don't

1015
00:41:15,680 --> 00:41:16,400
specify

1016
00:41:16,400 --> 00:41:19,520
anything related to the output directory

1017
00:41:19,520 --> 00:41:21,280
like in the case of this

1018
00:41:21,280 --> 00:41:24,800
let me move this up so in the case of

1019
00:41:24,800 --> 00:41:26,000
this right here

1020
00:41:26,000 --> 00:41:27,920
there's nothing about the output

1021
00:41:27,920 --> 00:41:29,280
directory in here so

1022
00:41:29,280 --> 00:41:34,000
a mass will put in the default location

1023
00:41:34,000 --> 00:41:38,880
so for linux that location is

1024
00:41:39,440 --> 00:41:43,839
in in this directory under a mass

1025
00:41:45,359 --> 00:41:50,160
so there's some important

1026
00:41:50,160 --> 00:41:53,759
uh files that get created in here

1027
00:41:54,160 --> 00:41:57,520
there's the output that

1028
00:41:57,520 --> 00:42:00,240
it's exactly the same as what ended up

1029
00:42:00,240 --> 00:42:01,520
on

1030
00:42:01,520 --> 00:42:04,160
standard out it just gets saved into

1031
00:42:04,160 --> 00:42:05,520
this file in case

1032
00:42:05,520 --> 00:42:07,359
you decide wow that was really great i

1033
00:42:07,359 --> 00:42:09,280
would like to i wish i had that saved

1034
00:42:09,280 --> 00:42:11,599
somewhere

1035
00:42:11,839 --> 00:42:16,000
then it's right here there's also a json

1036
00:42:16,000 --> 00:42:19,200
version of that data which has

1037
00:42:19,200 --> 00:42:22,400
more data in it than is provided in

1038
00:42:22,400 --> 00:42:24,720
standard out

1039
00:42:24,720 --> 00:42:27,040
there's also the log file which i would

1040
00:42:27,040 --> 00:42:28,480
say if you're having any trouble at all

1041
00:42:28,480 --> 00:42:29,280
with a mass

1042
00:42:29,280 --> 00:42:30,880
you definitely want to check this file

1043
00:42:30,880 --> 00:42:32,400
first because there's a really good

1044
00:42:32,400 --> 00:42:33,119
chance

1045
00:42:33,119 --> 00:42:34,720
the answer to your question is probably

1046
00:42:34,720 --> 00:42:37,280
in there um

1047
00:42:37,280 --> 00:42:39,520
of course it's also pretty it can get

1048
00:42:39,520 --> 00:42:41,839
pretty large

1049
00:42:41,839 --> 00:42:45,040
so i it's just like any log file if you

1050
00:42:45,040 --> 00:42:46,160
don't know what you're looking for you

1051
00:42:46,160 --> 00:42:47,920
might not find it

1052
00:42:47,920 --> 00:42:49,440
but i would say take a look at this and

1053
00:42:49,440 --> 00:42:52,720
see if there's any indicators as to what

1054
00:42:52,720 --> 00:42:57,359
happened in your situation

1055
00:42:57,520 --> 00:42:59,200
also be prepared for the possibility

1056
00:42:59,200 --> 00:43:01,040
that our

1057
00:43:01,040 --> 00:43:03,359
team could say please share your log

1058
00:43:03,359 --> 00:43:04,319
file with us

1059
00:43:04,319 --> 00:43:05,839
if you're going to come to us with like

1060
00:43:05,839 --> 00:43:07,599
troubleshooting

1061
00:43:07,599 --> 00:43:11,520
requests or anything like that this file

1062
00:43:11,520 --> 00:43:13,599
is the graph database it's the default

1063
00:43:13,599 --> 00:43:14,880
one that's saved

1064
00:43:14,880 --> 00:43:18,240
locally on your machine if you don't

1065
00:43:18,240 --> 00:43:19,920
tell it to use say a

1066
00:43:19,920 --> 00:43:22,319
you know a different graph database like

1067
00:43:22,319 --> 00:43:24,079
a gremlin

1068
00:43:24,079 --> 00:43:27,839
you know server or something like that

1069
00:43:28,000 --> 00:43:30,079
so this this is where a lot of the magic

1070
00:43:30,079 --> 00:43:32,640
is happening

1071
00:43:32,880 --> 00:43:34,640
also uh if you decide to use any

1072
00:43:34,640 --> 00:43:36,240
visualization features this is the

1073
00:43:36,240 --> 00:43:37,040
default

1074
00:43:37,040 --> 00:43:40,160
directory where it drops the files for

1075
00:43:40,160 --> 00:43:40,480
the

1076
00:43:40,480 --> 00:43:43,280
visualizations

1077
00:43:44,640 --> 00:43:47,040
so some other magic that kind of happens

1078
00:43:47,040 --> 00:43:48,640
in here that

1079
00:43:48,640 --> 00:43:50,960
people seem to sometimes have trouble

1080
00:43:50,960 --> 00:43:52,000
finding out about

1081
00:43:52,000 --> 00:43:55,040
is if you are comfortable using this

1082
00:43:55,040 --> 00:43:57,839
directory or whatever output directory

1083
00:43:57,839 --> 00:43:59,200
you want to use

1084
00:43:59,200 --> 00:44:02,480
um you can just put your configuration

1085
00:44:02,480 --> 00:44:03,359
file in here

1086
00:44:03,359 --> 00:44:05,319
as long as it has the same name

1087
00:44:05,319 --> 00:44:07,280
config.ini

1088
00:44:07,280 --> 00:44:09,440
and it will just get used automatically

1089
00:44:09,440 --> 00:44:10,480
you won't have to

1090
00:44:10,480 --> 00:44:14,079
tell a mask to use it

1091
00:44:15,200 --> 00:44:17,040
so that's that's pretty convenient but

1092
00:44:17,040 --> 00:44:19,119
if you would like to

1093
00:44:19,119 --> 00:44:22,400
uh not

1094
00:44:22,400 --> 00:44:24,960
put it in the output directory you can

1095
00:44:24,960 --> 00:44:26,160
just

1096
00:44:26,160 --> 00:44:28,240
use that flag and point it to wherever

1097
00:44:28,240 --> 00:44:30,000
the file is

1098
00:44:30,000 --> 00:44:32,319
but you can also change where the output

1099
00:44:32,319 --> 00:44:33,839
directory is by using that

1100
00:44:33,839 --> 00:44:35,520
flag so if you don't want to use the

1101
00:44:35,520 --> 00:44:36,960
default location

1102
00:44:36,960 --> 00:44:38,319
you can make any directory you want and

1103
00:44:38,319 --> 00:44:40,240
then just use this to say that's where i

1104
00:44:40,240 --> 00:44:41,119
want

1105
00:44:41,119 --> 00:44:44,240
the output directory to be which can be

1106
00:44:44,240 --> 00:44:45,760
kind of handy if you'd like to keep the

1107
00:44:45,760 --> 00:44:48,480
graph database

1108
00:44:48,480 --> 00:44:50,960
specific to say a target organization

1109
00:44:50,960 --> 00:44:52,000
that you're working with

1110
00:44:52,000 --> 00:44:54,000
you don't want all the results from all

1111
00:44:54,000 --> 00:44:56,400
your enumerations mixed up in the same

1112
00:44:56,400 --> 00:45:00,480
database so i'd kind of recommend maybe

1113
00:45:00,480 --> 00:45:03,680
coming up with a organization structure

1114
00:45:03,680 --> 00:45:04,160
for

1115
00:45:04,160 --> 00:45:08,000
for this the other thing too is

1116
00:45:08,000 --> 00:45:09,760
eventually these graph databases will

1117
00:45:09,760 --> 00:45:11,680
get larger if you're using

1118
00:45:11,680 --> 00:45:14,640
one database for every single you know

1119
00:45:14,640 --> 00:45:15,839
target that you're ever

1120
00:45:15,839 --> 00:45:19,839
pointing at

1121
00:45:21,680 --> 00:45:25,200
okay so a little bit more about

1122
00:45:25,200 --> 00:45:28,480
the tool before we jump into some of the

1123
00:45:28,480 --> 00:45:29,760
advanced features

1124
00:45:29,760 --> 00:45:33,520
so if you run this like that

1125
00:45:33,520 --> 00:45:35,760
it's pretty much gonna give you this as

1126
00:45:35,760 --> 00:45:37,280
its nice way of saying

1127
00:45:37,280 --> 00:45:40,319
well what did you want me to do

1128
00:45:42,319 --> 00:45:43,920
because of course it has no idea what

1129
00:45:43,920 --> 00:45:45,359
you're asking for

1130
00:45:45,359 --> 00:45:48,160
if you just put in the program name but

1131
00:45:48,160 --> 00:45:49,599
it will tell you

1132
00:45:49,599 --> 00:45:52,400
well with just the program name i can i

1133
00:45:52,400 --> 00:45:53,599
can give you these things

1134
00:45:53,599 --> 00:45:55,760
or here are the sub commands that you

1135
00:45:55,760 --> 00:46:00,160
have available to you

1136
00:46:00,160 --> 00:46:01,520
so the one that you know usually

1137
00:46:01,520 --> 00:46:03,280
everybody's using and you've seen me

1138
00:46:03,280 --> 00:46:05,280
using is the enum

1139
00:46:05,280 --> 00:46:08,400
uh sub command but which is is going to

1140
00:46:08,400 --> 00:46:09,200
handle

1141
00:46:09,200 --> 00:46:12,880
vertical uh domain name

1142
00:46:12,880 --> 00:46:15,839
correlation

1143
00:46:16,160 --> 00:46:18,880
so you give it the domain names and it's

1144
00:46:18,880 --> 00:46:20,640
going to dig deeper to find you

1145
00:46:20,640 --> 00:46:24,480
sub domain names and host names

1146
00:46:25,520 --> 00:46:27,119
but there are other features some of

1147
00:46:27,119 --> 00:46:29,440
which i've mentioned uh already

1148
00:46:29,440 --> 00:46:33,280
like tracking so that

1149
00:46:33,280 --> 00:46:36,400
this is where this is how you'd

1150
00:46:36,400 --> 00:46:39,440
mention that or specify that

1151
00:46:39,440 --> 00:46:41,440
i unfortunately do not have time to go

1152
00:46:41,440 --> 00:46:42,720
into each one of these

1153
00:46:42,720 --> 00:46:45,760
and show you all the features that they

1154
00:46:45,760 --> 00:46:48,880
support some of them are

1155
00:46:48,880 --> 00:46:51,200
far simpler than others right now you

1156
00:46:51,200 --> 00:46:52,160
know being the one that

1157
00:46:52,160 --> 00:46:56,079
you know has gotten the most attention

1158
00:46:56,079 --> 00:46:57,680
but depending on how you're using this i

1159
00:46:57,680 --> 00:46:59,920
would say this could be

1160
00:46:59,920 --> 00:47:03,200
very helpful for instance

1161
00:47:03,200 --> 00:47:04,720
you know some people in bug bounty have

1162
00:47:04,720 --> 00:47:06,640
told me that it's been really helpful to

1163
00:47:06,640 --> 00:47:09,760
have this so that when they're running

1164
00:47:09,760 --> 00:47:13,280
a new enumeration but they're only

1165
00:47:13,280 --> 00:47:14,000
interested in

1166
00:47:14,000 --> 00:47:17,359
you know learning about the new targets

1167
00:47:17,359 --> 00:47:20,559
that this saves them a lot of time

1168
00:47:20,559 --> 00:47:21,920
i would imagine you know that makes

1169
00:47:21,920 --> 00:47:23,599
perfect sense to me

1170
00:47:23,599 --> 00:47:24,960
i think that's what i would be doing too

1171
00:47:24,960 --> 00:47:26,960
is saying well let's run another

1172
00:47:26,960 --> 00:47:27,760
enumeration

1173
00:47:27,760 --> 00:47:30,720
and please only you know show me the

1174
00:47:30,720 --> 00:47:31,280
things that i

1175
00:47:31,280 --> 00:47:33,119
don't didn't already know so i'm not

1176
00:47:33,119 --> 00:47:35,839
wasting my time

1177
00:47:36,880 --> 00:47:39,280
the other one i would recommend people

1178
00:47:39,280 --> 00:47:40,720
take a look at is uh

1179
00:47:40,720 --> 00:47:44,319
the db sub command

1180
00:47:45,040 --> 00:47:47,200
so

1181
00:47:50,880 --> 00:47:52,640
probably the the nicest thing about this

1182
00:47:52,640 --> 00:47:54,240
is first of all

1183
00:47:54,240 --> 00:47:56,319
you could just tell it well show me

1184
00:47:56,319 --> 00:47:58,800
everything that i know about it

1185
00:47:58,800 --> 00:48:01,440
or that amass knows about a target so

1186
00:48:01,440 --> 00:48:04,480
for instance you could say

1187
00:48:04,839 --> 00:48:10,640
show and then say owasp.org

1188
00:48:11,680 --> 00:48:16,400
so so that way

1189
00:48:16,400 --> 00:48:19,119
what that will give you is everything

1190
00:48:19,119 --> 00:48:20,240
the database knows

1191
00:48:20,240 --> 00:48:23,520
about that target

1192
00:48:24,079 --> 00:48:26,960
and a lot of people i think are quick to

1193
00:48:26,960 --> 00:48:28,640
run the enum command and then just take

1194
00:48:28,640 --> 00:48:29,680
the results and say

1195
00:48:29,680 --> 00:48:33,119
that's everything at my disposal but

1196
00:48:33,119 --> 00:48:34,640
depending on how many times you've run

1197
00:48:34,640 --> 00:48:36,720
this enum command or

1198
00:48:36,720 --> 00:48:40,319
against that target and there's data in

1199
00:48:40,319 --> 00:48:42,240
the database

1200
00:48:42,240 --> 00:48:44,319
running this when you're done could

1201
00:48:44,319 --> 00:48:45,760
actually give you more

1202
00:48:45,760 --> 00:48:49,359
or a lot more than what came out of the

1203
00:48:49,359 --> 00:48:51,359
latest enumeration

1204
00:48:51,359 --> 00:48:52,880
another way to do that which perhaps

1205
00:48:52,880 --> 00:48:55,359
would be easier for your

1206
00:48:55,359 --> 00:48:56,880
workflow would be you can just say give

1207
00:48:56,880 --> 00:48:58,480
me the names

1208
00:48:58,480 --> 00:49:01,200
and then again just give it the domain

1209
00:49:01,200 --> 00:49:02,880
name

1210
00:49:02,880 --> 00:49:04,240
and it will just give you a list of

1211
00:49:04,240 --> 00:49:07,040
names that it knows about

1212
00:49:07,040 --> 00:49:08,559
you could also say give me the names

1213
00:49:08,559 --> 00:49:10,400
with the sources

1214
00:49:10,400 --> 00:49:12,160
if that's not useful to you then just

1215
00:49:12,160 --> 00:49:14,720
leave that out

1216
00:49:14,720 --> 00:49:16,400
you know i think a handful of people

1217
00:49:16,400 --> 00:49:18,240
have told me that this is what they

1218
00:49:18,240 --> 00:49:21,760
do when their enumeration is complete

1219
00:49:21,760 --> 00:49:24,160
especially if uh they're running the

1220
00:49:24,160 --> 00:49:27,040
same enumeration periodically

1221
00:49:27,040 --> 00:49:28,640
i think that's the right thing to do

1222
00:49:28,640 --> 00:49:30,079
that's what i would do to make sure i'm

1223
00:49:30,079 --> 00:49:31,839
getting all the

1224
00:49:31,839 --> 00:49:35,119
all the information available

1225
00:49:36,880 --> 00:49:39,280
i know people have asked me what what is

1226
00:49:39,280 --> 00:49:41,040
dns

1227
00:49:41,040 --> 00:49:43,680
so what i would say right now is don't

1228
00:49:43,680 --> 00:49:45,520
worry about it too much

1229
00:49:45,520 --> 00:49:47,359
because we're not done implementing it

1230
00:49:47,359 --> 00:49:48,960
uh we're just we're just getting started

1231
00:49:48,960 --> 00:49:51,200
kind of with it but what it will be

1232
00:49:51,200 --> 00:49:55,359
hopefully when we're done with it is

1233
00:49:55,359 --> 00:49:57,440
a way for you to take a bunch of names

1234
00:49:57,440 --> 00:49:58,720
that you already know about

1235
00:49:58,720 --> 00:50:00,720
so maybe you acquired them from other

1236
00:50:00,720 --> 00:50:02,160
tools or

1237
00:50:02,160 --> 00:50:04,800
or data sources that you know mass

1238
00:50:04,800 --> 00:50:06,079
doesn't have support for or something

1239
00:50:06,079 --> 00:50:07,280
like that

1240
00:50:07,280 --> 00:50:09,359
and if you provide those names to the

1241
00:50:09,359 --> 00:50:10,800
dns

1242
00:50:10,800 --> 00:50:13,839
sub command it will

1243
00:50:13,839 --> 00:50:15,599
resolve the names making sure that

1244
00:50:15,599 --> 00:50:18,000
they're legitimate or valid

1245
00:50:18,000 --> 00:50:23,119
and then add them to your database

1246
00:50:23,119 --> 00:50:26,720
so that way it's like a quick way to

1247
00:50:26,720 --> 00:50:29,920
ins insert them into the database

1248
00:50:29,920 --> 00:50:32,400
after a mask makes sure that they're

1249
00:50:32,400 --> 00:50:33,520
passing the

1250
00:50:33,520 --> 00:50:36,640
you know the test so to speak so it's

1251
00:50:36,640 --> 00:50:38,480
not really a replacement say for any

1252
00:50:38,480 --> 00:50:39,200
other

1253
00:50:39,200 --> 00:50:42,880
tool that would be doing the

1254
00:50:42,880 --> 00:50:44,880
dns resolution for you you know there's

1255
00:50:44,880 --> 00:50:46,640
already good tools out there for that

1256
00:50:46,640 --> 00:50:50,880
it's really more related to how to

1257
00:50:50,880 --> 00:50:54,800
use the mass database as like one

1258
00:50:55,119 --> 00:50:57,760
place of truth or one place to be

1259
00:50:57,760 --> 00:50:58,720
keeping

1260
00:50:58,720 --> 00:51:00,559
all the findings that you're you're

1261
00:51:00,559 --> 00:51:02,960
working with

1262
00:51:05,680 --> 00:51:07,280
now visualization is another one it's

1263
00:51:07,280 --> 00:51:09,119
kind of like track there's a handful of

1264
00:51:09,119 --> 00:51:10,160
things you can do with this

1265
00:51:10,160 --> 00:51:12,079
unfortunately i won't have time to go

1266
00:51:12,079 --> 00:51:13,920
over all of them today

1267
00:51:13,920 --> 00:51:16,640
i would recommend you take a look at it

1268
00:51:16,640 --> 00:51:18,079
i've heard lots of people tell me oh

1269
00:51:18,079 --> 00:51:19,760
when i first started using a mask

1270
00:51:19,760 --> 00:51:22,880
you know i only used enum and

1271
00:51:22,880 --> 00:51:25,200
i didn't know that visualization was an

1272
00:51:25,200 --> 00:51:27,040
option and then when they started using

1273
00:51:27,040 --> 00:51:28,000
it

1274
00:51:28,000 --> 00:51:30,960
they said it was very beneficial i'm a

1275
00:51:30,960 --> 00:51:32,640
very visual person i've

1276
00:51:32,640 --> 00:51:35,200
supported the visualizations since this

1277
00:51:35,200 --> 00:51:36,559
project first started

1278
00:51:36,559 --> 00:51:39,839
because i like to see

1279
00:51:39,839 --> 00:51:41,760
what these organizations look like on

1280
00:51:41,760 --> 00:51:44,319
the internet i find it easier to

1281
00:51:44,319 --> 00:51:47,839
dig into the infrastructure and and find

1282
00:51:47,839 --> 00:51:48,720
places that are

1283
00:51:48,720 --> 00:51:52,079
of interest by looking at it not just

1284
00:51:52,079 --> 00:51:55,440
reading the names in the ip addresses

1285
00:51:55,440 --> 00:51:58,400
so what i can show you is real quick is

1286
00:51:58,400 --> 00:51:59,680
that

1287
00:51:59,680 --> 00:52:02,000
when your enumeration is complete it's

1288
00:52:02,000 --> 00:52:03,760
really just a matter of

1289
00:52:03,760 --> 00:52:07,040
you know just say this let me show you

1290
00:52:07,040 --> 00:52:09,599
real quick the

1291
00:52:09,599 --> 00:52:12,640
options so

1292
00:52:12,640 --> 00:52:16,319
if your target is small d3 would

1293
00:52:16,319 --> 00:52:18,000
do the job like i think it can handle

1294
00:52:18,000 --> 00:52:20,880
somewhere between 500 and 1000

1295
00:52:20,880 --> 00:52:24,160
uh nodes before

1296
00:52:24,160 --> 00:52:27,680
you start overwhelming d3

1297
00:52:27,760 --> 00:52:30,480
the thing is for a lot of people their

1298
00:52:30,480 --> 00:52:32,800
targets are far larger than that

1299
00:52:32,800 --> 00:52:36,000
so you

1300
00:52:36,000 --> 00:52:37,920
at that point would probably need to use

1301
00:52:37,920 --> 00:52:40,480
something like

1302
00:52:40,960 --> 00:52:44,079
gephi or

1303
00:52:44,079 --> 00:52:47,119
maltego if you want to start looking at

1304
00:52:47,119 --> 00:52:50,160
much larger things

1305
00:52:50,400 --> 00:52:52,400
i kind of like maltego i think just

1306
00:52:52,400 --> 00:52:53,839
because i've used it for so long

1307
00:52:53,839 --> 00:52:55,680
that i'm used to it but gephi is a

1308
00:52:55,680 --> 00:52:58,079
really powerful tool as well

1309
00:52:58,079 --> 00:53:00,559
and graphistry is an excellent tool but

1310
00:53:00,559 --> 00:53:02,880
i'm not sure how much you can use it

1311
00:53:02,880 --> 00:53:07,200
for free i'd have to look into that

1312
00:53:07,200 --> 00:53:08,400
and i don't want to speak on their

1313
00:53:08,400 --> 00:53:11,119
behalf but it's an extremely powerful

1314
00:53:11,119 --> 00:53:12,559
tool and it can handle the largest

1315
00:53:12,559 --> 00:53:14,160
number of uh

1316
00:53:14,160 --> 00:53:16,079
you know the largest graphs of all the

1317
00:53:16,079 --> 00:53:19,119
options that a mass

1318
00:53:19,119 --> 00:53:21,599
has here like i said i just don't know

1319
00:53:21,599 --> 00:53:22,160
all the

1320
00:53:22,160 --> 00:53:24,800
the details of what it takes to be able

1321
00:53:24,800 --> 00:53:26,000
to use it but

1322
00:53:26,000 --> 00:53:29,119
i'd say definitely look into it i've

1323
00:53:29,119 --> 00:53:31,760
used it for targets that you know

1324
00:53:31,760 --> 00:53:34,720
give me tens of thousands or hundreds of

1325
00:53:34,720 --> 00:53:36,079
thousands of

1326
00:53:36,079 --> 00:53:38,800
uh findings and graphistry has no

1327
00:53:38,800 --> 00:53:39,920
trouble

1328
00:53:39,920 --> 00:53:43,839
generating the visualizations

1329
00:53:46,400 --> 00:53:48,079
okay so the way that you would use this

1330
00:53:48,079 --> 00:53:50,720
though is

1331
00:53:50,720 --> 00:53:53,920
you specify your type

1332
00:53:53,920 --> 00:53:57,760
of output and then give it

1333
00:53:57,760 --> 00:54:00,240
again the

1334
00:54:01,440 --> 00:54:03,440
the target you know domain or

1335
00:54:03,440 --> 00:54:05,839
organization

1336
00:54:05,839 --> 00:54:08,240
and what this will will do is it will

1337
00:54:08,240 --> 00:54:11,680
take the data that it knows about from

1338
00:54:11,680 --> 00:54:13,599
you know related to that target that's

1339
00:54:13,599 --> 00:54:14,960
in the database that you're

1340
00:54:14,960 --> 00:54:16,559
currently pointing to so right now that

1341
00:54:16,559 --> 00:54:18,000
would be the default one

1342
00:54:18,000 --> 00:54:19,359
if you know it's somewhere else then you

1343
00:54:19,359 --> 00:54:21,599
need to tell it that

1344
00:54:21,599 --> 00:54:25,280
and then when you run this

1345
00:54:25,280 --> 00:54:30,640
it puts it in that location i mentioned

1346
00:54:33,760 --> 00:54:38,160
under a file which is a mass underscore

1347
00:54:38,160 --> 00:54:40,880
the name of the visualization and then

1348
00:54:40,880 --> 00:54:42,240
whatever

1349
00:54:42,240 --> 00:54:44,400
you know file type is appropriate for

1350
00:54:44,400 --> 00:54:47,280
the output

1351
00:54:47,760 --> 00:54:49,920
so as you can see we already have a d3

1352
00:54:49,920 --> 00:54:53,359
here now there's a multi-go

1353
00:54:53,359 --> 00:54:55,359
the way the way the data is consumed is

1354
00:54:55,359 --> 00:54:56,400
based on

1355
00:54:56,400 --> 00:54:58,160
the program that has to consume it right

1356
00:54:58,160 --> 00:55:00,319
so with d3 it's just your browser

1357
00:55:00,319 --> 00:55:03,200
with the html with multigo of course you

1358
00:55:03,200 --> 00:55:05,440
have to have

1359
00:55:05,440 --> 00:55:08,400
uh multigo uh

1360
00:55:08,640 --> 00:55:12,078
if we go back to the types here

1361
00:55:13,359 --> 00:55:15,359
with this you have to have the gephy

1362
00:55:15,359 --> 00:55:16,559
program

1363
00:55:16,559 --> 00:55:18,319
and even with that i think you have to

1364
00:55:18,319 --> 00:55:19,760
kind of tweak the settings to make sure

1365
00:55:19,760 --> 00:55:20,960
it

1366
00:55:20,960 --> 00:55:24,240
uh renders it the way you like so anyway

1367
00:55:24,240 --> 00:55:26,400
you kind of have to play with the

1368
00:55:26,400 --> 00:55:29,440
programs or the systems that make

1369
00:55:29,440 --> 00:55:33,839
use of the data the easiest one being d3

1370
00:55:33,839 --> 00:55:34,799
because you just

1371
00:55:34,799 --> 00:55:38,160
open in your browser and you're good

1372
00:55:38,640 --> 00:55:40,799
looks like maybe we have some questions

1373
00:55:40,799 --> 00:55:42,240
so since the mass may yield different

1374
00:55:42,240 --> 00:55:43,839
results at later times

1375
00:55:43,839 --> 00:55:45,920
could you discuss about using the mass

1376
00:55:45,920 --> 00:55:48,319
track sub command can it be

1377
00:55:48,319 --> 00:55:50,079
done before or after enumerating a

1378
00:55:50,079 --> 00:55:52,400
target

1379
00:55:54,400 --> 00:55:56,960
all right so

1380
00:55:57,440 --> 00:56:00,720
you definitely have to use track after

1381
00:56:00,720 --> 00:56:02,720
you've enumerated the target and it has

1382
00:56:02,720 --> 00:56:06,399
to be enumerated at least two times

1383
00:56:06,799 --> 00:56:10,720
because it needs a before and an after

1384
00:56:10,720 --> 00:56:14,000
it needs to be able to say what was it

1385
00:56:14,000 --> 00:56:14,960
like before

1386
00:56:14,960 --> 00:56:17,839
what have we seen most recently and how

1387
00:56:17,839 --> 00:56:20,480
is it different

1388
00:56:20,640 --> 00:56:21,760
because that's what it's doing really

1389
00:56:21,760 --> 00:56:24,079
it's it's tracking

1390
00:56:24,079 --> 00:56:26,319
by saying let me show you what changed

1391
00:56:26,319 --> 00:56:28,640
from the last time

1392
00:56:28,640 --> 00:56:30,880
and let's say you have five different

1393
00:56:30,880 --> 00:56:33,200
enumerations

1394
00:56:33,200 --> 00:56:35,440
it will take everything it knew from the

1395
00:56:35,440 --> 00:56:37,119
previous four

1396
00:56:37,119 --> 00:56:39,440
and then take the most recent one and

1397
00:56:39,440 --> 00:56:45,760
tell you what's different

1398
00:56:45,760 --> 00:56:47,920
so

1399
00:56:51,119 --> 00:56:53,440
well i mean the exactly how it does that

1400
00:56:53,440 --> 00:56:54,559
can be

1401
00:56:54,559 --> 00:56:58,079
changed based on the uh

1402
00:56:58,079 --> 00:57:01,200
options that you give it i guess you

1403
00:57:01,200 --> 00:57:02,240
could say most of the time when you're

1404
00:57:02,240 --> 00:57:04,000
using it you can think of it as

1405
00:57:04,000 --> 00:57:06,240
it's going to tell you how this time was

1406
00:57:06,240 --> 00:57:08,400
different than the last time

1407
00:57:08,400 --> 00:57:10,240
but there are ways to say well i'd like

1408
00:57:10,240 --> 00:57:11,760
to know more than that

1409
00:57:11,760 --> 00:57:15,119
like show me you know how it's changed

1410
00:57:15,119 --> 00:57:16,640
over the course of

1411
00:57:16,640 --> 00:57:20,319
the time i've been monitoring it and

1412
00:57:20,319 --> 00:57:22,000
there's ways to ask it for more

1413
00:57:22,000 --> 00:57:23,520
information about that but

1414
00:57:23,520 --> 00:57:24,720
generally if you're just using the

1415
00:57:24,720 --> 00:57:27,119
default values it's just going to say

1416
00:57:27,119 --> 00:57:29,520
well this is how the most recent enum is

1417
00:57:29,520 --> 00:57:31,280
different than the last time

1418
00:57:31,280 --> 00:57:34,079
so you can get the highlights or the new

1419
00:57:34,079 --> 00:57:35,839
information

1420
00:57:35,839 --> 00:57:37,680
all right the question here was is there

1421
00:57:37,680 --> 00:57:39,119
a way to clear the database

1422
00:57:39,119 --> 00:57:42,559
easily or remove the entries

1423
00:57:42,559 --> 00:57:45,680
that's a good question so

1424
00:57:46,559 --> 00:57:48,079
at this point in time there's no way to

1425
00:57:48,079 --> 00:57:49,760
just say

1426
00:57:49,760 --> 00:57:52,240
there's bad information i want to take

1427
00:57:52,240 --> 00:57:53,440
that out

1428
00:57:53,440 --> 00:57:54,799
we are going to implement that because

1429
00:57:54,799 --> 00:57:58,960
we realize it needs to be in there

1430
00:57:59,280 --> 00:58:00,480
but right now you can't do that you

1431
00:58:00,480 --> 00:58:02,799
can't just say for instance like a mass

1432
00:58:02,799 --> 00:58:06,000
db and then remove

1433
00:58:06,000 --> 00:58:08,319
and give it say a subdomain name or

1434
00:58:08,319 --> 00:58:09,680
something like that

1435
00:58:09,680 --> 00:58:12,000
but we are going to and we're also going

1436
00:58:12,000 --> 00:58:13,280
to make sure that

1437
00:58:13,280 --> 00:58:15,599
things that are dependent on that

1438
00:58:15,599 --> 00:58:17,200
potentially get removed as well

1439
00:58:17,200 --> 00:58:19,680
so you would be able to specify like one

1440
00:58:19,680 --> 00:58:20,480
bad thing

1441
00:58:20,480 --> 00:58:23,280
and then it would be able to say right

1442
00:58:23,280 --> 00:58:23,680
but

1443
00:58:23,680 --> 00:58:25,119
all these other things were discovered

1444
00:58:25,119 --> 00:58:26,799
because of that so let's get them out of

1445
00:58:26,799 --> 00:58:28,319
here too

1446
00:58:28,319 --> 00:58:30,799
to kind of clean up but you can't do

1447
00:58:30,799 --> 00:58:32,400
that at this moment instead

1448
00:58:32,400 --> 00:58:34,559
you uh you pretty much have the option

1449
00:58:34,559 --> 00:58:35,440
of

1450
00:58:35,440 --> 00:58:38,640
live with what's in there or

1451
00:58:38,640 --> 00:58:41,760
get rid of it and start over or you

1452
00:58:41,760 --> 00:58:43,200
what i would probably do if i was

1453
00:58:43,200 --> 00:58:45,520
concerned about you know this data being

1454
00:58:45,520 --> 00:58:47,040
very important to me is i'd make sure i

1455
00:58:47,040 --> 00:58:48,960
back up the database each time i do

1456
00:58:48,960 --> 00:58:51,040
another enumeration

1457
00:58:51,040 --> 00:58:54,079
so that it's kind of like a snapshot

1458
00:58:54,079 --> 00:58:56,559
which you could just do by copying the

1459
00:58:56,559 --> 00:58:58,400
uh the bolt file

1460
00:58:58,400 --> 00:59:01,599
let me go back real quick

1461
00:59:03,440 --> 00:59:06,799
so this indexes that bolt file

1462
00:59:06,799 --> 00:59:09,119
you could just copy that and then do

1463
00:59:09,119 --> 00:59:10,559
another enumeration

1464
00:59:10,559 --> 00:59:12,319
as long as everything came out pretty

1465
00:59:12,319 --> 00:59:13,680
good you could just leave it

1466
00:59:13,680 --> 00:59:16,640
but if if there were say a lot of things

1467
00:59:16,640 --> 00:59:17,760
discovered that

1468
00:59:17,760 --> 00:59:20,640
you knew were false you know i'd say

1469
00:59:20,640 --> 00:59:21,359
well then

1470
00:59:21,359 --> 00:59:23,760
just replace the file with the backed up

1471
00:59:23,760 --> 00:59:25,119
file and

1472
00:59:25,119 --> 00:59:28,079
try again that way you don't lose any

1473
00:59:28,079 --> 00:59:29,119
good information that you've been

1474
00:59:29,119 --> 00:59:30,640
holding on to and

1475
00:59:30,640 --> 00:59:31,839
but you also don't have to live with all

1476
00:59:31,839 --> 00:59:33,680
the say garbage

1477
00:59:33,680 --> 00:59:37,119
that managed to get in we will

1478
00:59:37,119 --> 00:59:38,880
like i said be working on ways to do

1479
00:59:38,880 --> 00:59:40,240
this better in the future we just

1480
00:59:40,240 --> 00:59:41,200
haven't been able to do the

1481
00:59:41,200 --> 00:59:42,640
implementation yet

1482
00:59:42,640 --> 00:59:43,920
these are great things that if

1483
00:59:43,920 --> 00:59:45,680
contributors want to come and

1484
00:59:45,680 --> 00:59:47,839
help move these things along i would say

1485
00:59:47,839 --> 00:59:50,960
please uh meet us at the discord server

1486
00:59:50,960 --> 00:59:53,920
we'd be happy to talk

1487
00:59:54,400 --> 00:59:55,680
all right i think we're making our way

1488
00:59:55,680 --> 00:59:58,640
through this pretty good let's see

1489
00:59:58,640 --> 01:00:00,160
all right so the this is where i think

1490
01:00:00,160 --> 01:00:02,079
i'd like well i already showed a pretty

1491
01:00:02,079 --> 01:00:02,640
basic

1492
01:00:02,640 --> 01:00:08,078
uh demonstration

1493
01:00:08,799 --> 01:00:12,839
with uh oh wasp i get i think

1494
01:00:12,839 --> 01:00:15,839
given

1495
01:00:16,400 --> 01:00:19,440
let's look at one thing real quick since

1496
01:00:19,440 --> 01:00:19,760
i

1497
01:00:19,760 --> 01:00:23,440
sometimes get questions about this

1498
01:00:26,640 --> 01:00:29,839
so if i

1499
01:00:30,559 --> 01:00:33,680
put this in let's just fire it at the

1500
01:00:33,680 --> 01:00:34,559
same target just

1501
01:00:34,559 --> 01:00:37,200
because i don't want to have to worry

1502
01:00:37,200 --> 01:00:37,920
about

1503
01:00:37,920 --> 01:00:41,359
who we're revealing information on

1504
01:00:41,359 --> 01:00:43,040
otherwise i'd be happy to show you

1505
01:00:43,040 --> 01:00:45,839
something larger

1506
01:00:49,440 --> 01:00:52,559
but some people have asked me so

1507
01:00:52,559 --> 01:00:56,960
like what do some of these things mean

1508
01:00:56,960 --> 01:00:58,400
so i hope it's kind of clear all these

1509
01:00:58,400 --> 01:01:00,400
things up here

1510
01:01:00,400 --> 01:01:04,400
only take place when the data source

1511
01:01:04,400 --> 01:01:07,920
has received the request and it

1512
01:01:07,920 --> 01:01:10,960
it's ready to do the

1513
01:01:10,960 --> 01:01:14,400
um it's ready to do

1514
01:01:14,400 --> 01:01:17,520
the query

1515
01:01:17,520 --> 01:01:20,240
for what you're seeing here so where

1516
01:01:20,240 --> 01:01:22,480
this can be relevant

1517
01:01:22,480 --> 01:01:24,480
is if you're giving it more than one

1518
01:01:24,480 --> 01:01:26,799
domain

1519
01:01:26,799 --> 01:01:28,960
and you're curious as to well when did

1520
01:01:28,960 --> 01:01:30,799
it when did it get to the point where it

1521
01:01:30,799 --> 01:01:31,760
was ready to do

1522
01:01:31,760 --> 01:01:34,000
say the third domain or one of you know

1523
01:01:34,000 --> 01:01:36,079
one of the additional domains

1524
01:01:36,079 --> 01:01:39,920
this message is your indicator okay

1525
01:01:39,920 --> 01:01:42,400
you know it waited it did the um the

1526
01:01:42,400 --> 01:01:43,920
rate limiting weight

1527
01:01:43,920 --> 01:01:47,280
and it's it was now ready to

1528
01:01:47,280 --> 01:01:52,000
ask this data source about this target

1529
01:01:52,000 --> 01:01:55,520
so that's why these show up

1530
01:01:55,520 --> 01:01:57,280
it's it's for your awareness in case

1531
01:01:57,280 --> 01:01:59,039
you're watching this and you're curious

1532
01:01:59,039 --> 01:02:02,079
how far along are we

1533
01:02:02,319 --> 01:02:05,280
through the process i mean there's no

1534
01:02:05,280 --> 01:02:07,119
real way to just have a gauge that says

1535
01:02:07,119 --> 01:02:07,680
this is

1536
01:02:07,680 --> 01:02:09,760
the percentage that it's done since it's

1537
01:02:09,760 --> 01:02:12,160
a cyclic process that

1538
01:02:12,160 --> 01:02:15,440
it's very hard to tell what could

1539
01:02:15,440 --> 01:02:19,680
spike the activity and it's dynamic

1540
01:02:19,680 --> 01:02:21,119
but this at least gives you an idea of

1541
01:02:21,119 --> 01:02:22,720
well as far as

1542
01:02:22,720 --> 01:02:26,960
getting through the data sources

1543
01:02:26,960 --> 01:02:28,319
it gives you you know gives you an idea

1544
01:02:28,319 --> 01:02:30,400
of how far along you're

1545
01:02:30,400 --> 01:02:35,839
all right so for this information

1546
01:02:36,079 --> 01:02:37,839
you know hopefully it's somewhat clear

1547
01:02:37,839 --> 01:02:40,559
but i'm gonna

1548
01:02:40,559 --> 01:02:43,599
explain it all anyway

1549
01:02:43,680 --> 01:02:46,640
so this right here is a source and it's

1550
01:02:46,640 --> 01:02:46,960
one

1551
01:02:46,960 --> 01:02:50,400
it's only one source or that found

1552
01:02:50,400 --> 01:02:53,280
this name but let me tell you that the

1553
01:02:53,280 --> 01:02:54,240
chances are probably

1554
01:02:54,240 --> 01:02:57,039
very good that it's one of several

1555
01:02:57,039 --> 01:02:58,319
sources probably

1556
01:02:58,319 --> 01:03:00,400
that found it but since we're just

1557
01:03:00,400 --> 01:03:02,319
trying to keep this clean

1558
01:03:02,319 --> 01:03:05,440
one of the sources is selected and it's

1559
01:03:05,440 --> 01:03:06,880
random

1560
01:03:06,880 --> 01:03:09,119
for

1561
01:03:10,480 --> 01:03:12,240
you know this one found it it could be

1562
01:03:12,240 --> 01:03:14,160
based on timing

1563
01:03:14,160 --> 01:03:16,000
like if this one just found it way

1564
01:03:16,000 --> 01:03:18,240
faster than all the other ones then

1565
01:03:18,240 --> 01:03:19,760
you'll see something like this where a

1566
01:03:19,760 --> 01:03:22,079
bunch of them show up under the same

1567
01:03:22,079 --> 01:03:24,720
source because it's the only one that

1568
01:03:24,720 --> 01:03:25,920
knows about it right now

1569
01:03:25,920 --> 01:03:29,359
or found it so far but later in the

1570
01:03:29,359 --> 01:03:31,119
process there could easily be

1571
01:03:31,119 --> 01:03:34,160
other names where

1572
01:03:34,160 --> 01:03:37,520
uh say three different sources found it

1573
01:03:37,520 --> 01:03:39,039
and this is just the one that happened

1574
01:03:39,039 --> 01:03:41,520
to be picked to get credit for it so to

1575
01:03:41,520 --> 01:03:42,559
speak but

1576
01:03:42,559 --> 01:03:47,280
the graph knows about all of them

1577
01:03:47,280 --> 01:03:49,200
it's just that for out for output we're

1578
01:03:49,200 --> 01:03:51,920
only printing one

1579
01:03:51,920 --> 01:03:53,599
but this is the name obviously and then

1580
01:03:53,599 --> 01:03:55,200
these are the ip addresses

1581
01:03:55,200 --> 01:03:59,200
that this name resolved to now let me

1582
01:03:59,200 --> 01:04:02,240
mention here these names could be

1583
01:04:02,240 --> 01:04:05,359
c names they could be aliases

1584
01:04:05,359 --> 01:04:08,240
and you're still gonna end up with the

1585
01:04:08,240 --> 01:04:09,760
ip addresses

1586
01:04:09,760 --> 01:04:15,039
because a mass will follow the c names

1587
01:04:15,039 --> 01:04:18,480
until the a records or the

1588
01:04:18,480 --> 01:04:22,319
quad a records are discovered so

1589
01:04:22,319 --> 01:04:24,079
just because you see this name show up

1590
01:04:24,079 --> 01:04:26,799
here and it has ip addresses does not

1591
01:04:26,799 --> 01:04:29,599
necessarily mean that if you were to you

1592
01:04:29,599 --> 01:04:31,359
know do a dig on this name that you're

1593
01:04:31,359 --> 01:04:34,640
gonna find that it has these exact same

1594
01:04:34,640 --> 01:04:38,720
uh ip addresses

1595
01:04:38,720 --> 01:04:41,839
as a records that it has

1596
01:04:42,799 --> 01:04:46,160
so just a heads up that it's trying to

1597
01:04:46,160 --> 01:04:49,118
provide you with

1598
01:04:51,440 --> 01:04:52,880
i mean because if you were to use that

1599
01:04:52,880 --> 01:04:54,319
name that's where ultimately you're

1600
01:04:54,319 --> 01:04:56,240
going to end up going

1601
01:04:56,240 --> 01:04:58,000
but if you if you want to know exactly

1602
01:04:58,000 --> 01:05:01,039
what the like say the

1603
01:05:01,039 --> 01:05:03,119
you know the records look like for this

1604
01:05:03,119 --> 01:05:05,039
namespace then you're going to probably

1605
01:05:05,039 --> 01:05:06,240
have to do some of your own digging

1606
01:05:06,240 --> 01:05:06,880
because

1607
01:05:06,880 --> 01:05:09,440
that's not the intention of what this

1608
01:05:09,440 --> 01:05:13,359
out you know output was designed for

1609
01:05:14,799 --> 01:05:16,960
there's also uh some other twist to this

1610
01:05:16,960 --> 01:05:18,720
like for instance if uh

1611
01:05:18,720 --> 01:05:22,319
if the name was found using reverse dns

1612
01:05:22,319 --> 01:05:24,799
it could have been found by doing

1613
01:05:24,799 --> 01:05:27,440
reverse dns on a different ip

1614
01:05:27,440 --> 01:05:29,599
because the one that shows up here is

1615
01:05:29,599 --> 01:05:31,119
what happens when

1616
01:05:31,119 --> 01:05:32,960
we have the ip address we do the reverse

1617
01:05:32,960 --> 01:05:35,119
dns we get the name

1618
01:05:35,119 --> 01:05:38,400
and now we've resolved the name

1619
01:05:38,400 --> 01:05:40,160
forward you know doing forward

1620
01:05:40,160 --> 01:05:42,000
resolution

1621
01:05:42,000 --> 01:05:44,720
which creates the potential that you end

1622
01:05:44,720 --> 01:05:48,000
up getting a different ip address

1623
01:05:48,000 --> 01:05:51,200
for the forward resolution

1624
01:05:51,200 --> 01:05:53,920
so just some things that most of you i

1625
01:05:53,920 --> 01:05:55,520
imagine probably

1626
01:05:55,520 --> 01:05:58,640
don't care too much about but if you're

1627
01:05:58,640 --> 01:06:01,440
doing digging on the results these

1628
01:06:01,440 --> 01:06:03,119
things are likely to pop up and it could

1629
01:06:03,119 --> 01:06:04,160
cause you to say

1630
01:06:04,160 --> 01:06:07,200
why is this happening so it could be

1631
01:06:07,200 --> 01:06:10,960
helpful to know why so also

1632
01:06:10,960 --> 01:06:14,079
every minute

1633
01:06:14,559 --> 01:06:16,000
or approximately every minute you should

1634
01:06:16,000 --> 01:06:17,599
get this message

1635
01:06:17,599 --> 01:06:21,440
that comes up this is pretty important i

1636
01:06:21,440 --> 01:06:22,079
would say if

1637
01:06:22,079 --> 01:06:24,000
you're watching your process if this

1638
01:06:24,000 --> 01:06:25,280
isn't just like in some day you know

1639
01:06:25,280 --> 01:06:27,280
workflow somewhere

1640
01:06:27,280 --> 01:06:29,760
you're going to want to know some things

1641
01:06:29,760 --> 01:06:31,440
that pop up in here that show

1642
01:06:31,440 --> 01:06:33,119
you could have problems like for

1643
01:06:33,119 --> 01:06:35,599
instance if you're seeing

1644
01:06:35,599 --> 01:06:38,079
it say that the average retry is

1645
01:06:38,079 --> 01:06:38,880
required

1646
01:06:38,880 --> 01:06:43,440
is 100 then it's not working

1647
01:06:43,440 --> 01:06:44,799
maybe maybe you knew that already but

1648
01:06:44,799 --> 01:06:46,559
some people haven't

1649
01:06:46,559 --> 01:06:50,480
they've come asking me what that means

1650
01:06:50,559 --> 01:06:54,559
it means that none of your dns requests

1651
01:06:54,559 --> 01:06:59,440
are successful and it's retrying

1652
01:06:59,440 --> 01:07:01,119
it's doing nothing but retrying on all

1653
01:07:01,119 --> 01:07:03,520
the names

1654
01:07:03,839 --> 01:07:05,280
so you have a problem with your

1655
01:07:05,280 --> 01:07:07,599
resolvers

1656
01:07:07,599 --> 01:07:10,480
or your ability or a masses ability to

1657
01:07:10,480 --> 01:07:10,960
reach

1658
01:07:10,960 --> 01:07:14,640
the resolvers and things like that

1659
01:07:14,640 --> 01:07:17,839
also um if you if you're seeing the

1660
01:07:17,839 --> 01:07:18,400
average

1661
01:07:18,400 --> 01:07:22,240
queries performed at zero

1662
01:07:22,319 --> 01:07:24,559
that's that can be fine for a little

1663
01:07:24,559 --> 01:07:26,160
while at the end of the

1664
01:07:26,160 --> 01:07:27,839
enumeration it could just mean that it's

1665
01:07:27,839 --> 01:07:29,359
kind of like wrapping things up

1666
01:07:29,359 --> 01:07:31,440
and it's got a few things that it's

1667
01:07:31,440 --> 01:07:32,960
tidying up

1668
01:07:32,960 --> 01:07:34,960
and the dns isn't you know there's not a

1669
01:07:34,960 --> 01:07:38,319
whole lot of dns happening anymore

1670
01:07:38,400 --> 01:07:39,520
but what you should be seeing is

1671
01:07:39,520 --> 01:07:41,280
something like oh there's zero or one

1672
01:07:41,280 --> 01:07:42,960
per second and the average retries is

1673
01:07:42,960 --> 01:07:44,400
zero percent or something like that that

1674
01:07:44,400 --> 01:07:45,359
just means

1675
01:07:45,359 --> 01:07:47,200
it's tidying up the process you know the

1676
01:07:47,200 --> 01:07:50,400
enumeration and it's about to be done

1677
01:07:50,400 --> 01:07:53,200
but if you're seeing things like that in

1678
01:07:53,200 --> 01:07:54,400
the middle

1679
01:07:54,400 --> 01:07:58,720
of the enumeration then you have

1680
01:07:58,720 --> 01:08:02,640
issues or there's something wrong if

1681
01:08:02,640 --> 01:08:04,720
if it's not staying at a pretty steady

1682
01:08:04,720 --> 01:08:05,920
rate

1683
01:08:05,920 --> 01:08:09,280
throughout the enumeration

1684
01:08:09,520 --> 01:08:12,160
like i said until the end then

1685
01:08:12,160 --> 01:08:12,720
something's

1686
01:08:12,720 --> 01:08:14,720
not right and i mean it could it could

1687
01:08:14,720 --> 01:08:15,920
be

1688
01:08:15,920 --> 01:08:17,759
that maybe you don't have enough

1689
01:08:17,759 --> 01:08:20,000
resolvers and the ones you're using are

1690
01:08:20,000 --> 01:08:21,359
throttling you or you know

1691
01:08:21,359 --> 01:08:24,080
there's all sorts of network reasons or

1692
01:08:24,080 --> 01:08:26,080
reasons imposed by your

1693
01:08:26,080 --> 01:08:28,960
created by your network or the

1694
01:08:28,960 --> 01:08:31,600
infrastructure that could be

1695
01:08:31,600 --> 01:08:34,880
causing this so i just wanted to mention

1696
01:08:34,880 --> 01:08:35,759
some of these things

1697
01:08:35,759 --> 01:08:37,439
there there are indicators that are

1698
01:08:37,439 --> 01:08:38,799
printed out here that

1699
01:08:38,799 --> 01:08:40,799
again if you know what these things mean

1700
01:08:40,799 --> 01:08:42,880
it could help you

1701
01:08:42,880 --> 01:08:45,920
diagnose what's happening

1702
01:08:45,920 --> 01:08:46,960
i mean i hope this is pretty

1703
01:08:46,960 --> 01:08:49,439
straightforward but

1704
01:08:49,439 --> 01:08:50,560
you know this is just kind of

1705
01:08:50,560 --> 01:08:52,158
convenience information it tells you how

1706
01:08:52,158 --> 01:08:54,000
many names were discovered across what

1707
01:08:54,000 --> 01:08:57,120
types of data sources

1708
01:08:57,120 --> 01:08:59,759
and then it prints out where those names

1709
01:08:59,759 --> 01:09:01,839
were found

1710
01:09:01,839 --> 01:09:04,640
within the various asn's which can be

1711
01:09:04,640 --> 01:09:07,520
helpful when there's more than one asn

1712
01:09:07,520 --> 01:09:08,799
like for instance you know a company

1713
01:09:08,799 --> 01:09:10,560
that has its own asn and then it it's

1714
01:09:10,560 --> 01:09:12,158
using cloud resources and things like

1715
01:09:12,158 --> 01:09:13,679
that you're gonna get

1716
01:09:13,679 --> 01:09:16,080
these names spread across all all sorts

1717
01:09:16,080 --> 01:09:17,439
of uh

1718
01:09:17,439 --> 01:09:21,279
networks and

1719
01:09:21,279 --> 01:09:23,759
these uh numbers can be a little

1720
01:09:23,759 --> 01:09:25,359
interesting because

1721
01:09:25,359 --> 01:09:29,920
you know you could have say 100 names

1722
01:09:29,920 --> 01:09:31,759
but then the numbers if you tally them

1723
01:09:31,759 --> 01:09:33,279
up in here could be

1724
01:09:33,279 --> 01:09:35,439
more than that but what you want to keep

1725
01:09:35,439 --> 01:09:37,359
in mind is

1726
01:09:37,359 --> 01:09:39,759
ev the way it works is when the name

1727
01:09:39,759 --> 01:09:41,920
shows up let's say it has two ips

1728
01:09:41,920 --> 01:09:43,679
and that causes it to show up in two

1729
01:09:43,679 --> 01:09:44,960
different networks

1730
01:09:44,960 --> 01:09:47,520
then that one name is actually going to

1731
01:09:47,520 --> 01:09:48,560
cause

1732
01:09:48,560 --> 01:09:51,600
two no you know an increase in two

1733
01:09:51,600 --> 01:09:54,960
total uh in this column

1734
01:09:54,960 --> 01:09:58,000
so don't be too uh alarmed if you know

1735
01:09:58,000 --> 01:10:00,840
the numbers don't seem to match up

1736
01:10:00,840 --> 01:10:02,080
perfectly

1737
01:10:02,080 --> 01:10:04,400
and then uh obviously at the end here

1738
01:10:04,400 --> 01:10:06,080
what this is saying is okay

1739
01:10:06,080 --> 01:10:07,280
there's nothing more to do with the

1740
01:10:07,280 --> 01:10:09,920
enumeration and the reason it's just not

1741
01:10:09,920 --> 01:10:11,360
the program isn't finished yet is

1742
01:10:11,360 --> 01:10:13,440
because it's

1743
01:10:13,440 --> 01:10:15,600
moving the data into your database which

1744
01:10:15,600 --> 01:10:17,520
if that's local

1745
01:10:17,520 --> 01:10:19,199
would probably be pretty quick again it

1746
01:10:19,199 --> 01:10:21,360
depends on how large your target was

1747
01:10:21,360 --> 01:10:22,880
if you're using a different kind of

1748
01:10:22,880 --> 01:10:25,600
database it could be dependent on

1749
01:10:25,600 --> 01:10:28,560
the performance you have between where

1750
01:10:28,560 --> 01:10:28,960
mass

1751
01:10:28,960 --> 01:10:32,080
is and where your database is

1752
01:10:32,080 --> 01:10:33,920
or you know how fast your database or

1753
01:10:33,920 --> 01:10:37,440
database server is things like that

1754
01:10:38,159 --> 01:10:42,239
okay so

1755
01:10:42,640 --> 01:10:45,360
some of the the more advanced features

1756
01:10:45,360 --> 01:10:47,040
that

1757
01:10:47,040 --> 01:10:49,120
i what i find is a lot of people don't

1758
01:10:49,120 --> 01:10:50,640
underst you know know about these things

1759
01:10:50,640 --> 01:10:53,840
or they don't understand how they work

1760
01:10:54,080 --> 01:10:57,440
but i think are pretty important

1761
01:10:57,520 --> 01:11:00,640
especially for me where i i need

1762
01:11:00,640 --> 01:11:02,560
this kind of control you know whether

1763
01:11:02,560 --> 01:11:04,560
you do i guess uh you know it

1764
01:11:04,560 --> 01:11:08,880
depends on how you're using this but um

1765
01:11:09,760 --> 01:11:11,600
i like to be able to have fine green

1766
01:11:11,600 --> 01:11:12,880
control over

1767
01:11:12,880 --> 01:11:16,159
what data sources am i asking

1768
01:11:16,159 --> 01:11:19,199
to give me

1769
01:11:19,199 --> 01:11:20,400
you know give me data during my

1770
01:11:20,400 --> 01:11:22,480
enumeration

1771
01:11:22,480 --> 01:11:23,920
especially if i'm trying to make sure

1772
01:11:23,920 --> 01:11:26,080
one of them is working right

1773
01:11:26,080 --> 01:11:29,199
so you can do that with this

1774
01:11:29,199 --> 01:11:34,400
flag so you can say look for for this

1775
01:11:34,400 --> 01:11:36,719
for this like test i'm running you know

1776
01:11:36,719 --> 01:11:39,120
i only want to know

1777
01:11:39,120 --> 01:11:41,840
what this is saying so you could say

1778
01:11:41,840 --> 01:11:43,840
that

1779
01:11:43,840 --> 01:11:46,239
and you can really make sure that you're

1780
01:11:46,239 --> 01:11:48,159
seeing exactly what that

1781
01:11:48,159 --> 01:11:51,280
sends back if you do this so

1782
01:11:51,280 --> 01:11:53,520
that that combination right there allows

1783
01:11:53,520 --> 01:11:54,560
you to say

1784
01:11:54,560 --> 01:11:56,480
just don't don't don't do any other

1785
01:11:56,480 --> 01:11:57,920
fancy stuff just

1786
01:11:57,920 --> 01:12:01,280
query that and tell me what it comes

1787
01:12:01,280 --> 01:12:03,280
back

1788
01:12:03,280 --> 01:12:05,920
so that can be pretty handy especially

1789
01:12:05,920 --> 01:12:06,719
if you're just doing

1790
01:12:06,719 --> 01:12:08,640
like like i said like a sanity check or

1791
01:12:08,640 --> 01:12:09,840
something and you just want to make sure

1792
01:12:09,840 --> 01:12:12,800
that it's working for you

1793
01:12:14,480 --> 01:12:16,719
if you're going to not do it with

1794
01:12:16,719 --> 01:12:18,719
passive

1795
01:12:18,719 --> 01:12:21,360
like you want to turn on say several of

1796
01:12:21,360 --> 01:12:22,000
them

1797
01:12:22,000 --> 01:12:23,920
because that's just the way you wanted

1798
01:12:23,920 --> 01:12:27,120
to run your uh

1799
01:12:29,199 --> 01:12:32,239
your uh enumeration process

1800
01:12:32,239 --> 01:12:34,320
make sure you give it there's a few of

1801
01:12:34,320 --> 01:12:35,760
these that they're not turned on by

1802
01:12:35,760 --> 01:12:37,120
default

1803
01:12:37,120 --> 01:12:39,840
like i think we're going to fix this

1804
01:12:39,840 --> 01:12:41,199
there's a

1805
01:12:41,199 --> 01:12:43,120
feature request in right now to address

1806
01:12:43,120 --> 01:12:45,520
this but

1807
01:12:45,520 --> 01:12:48,320
right now if you were to do this it

1808
01:12:48,320 --> 01:12:48,880
probably

1809
01:12:48,880 --> 01:12:51,199
isn't going to show you anything because

1810
01:12:51,199 --> 01:12:52,239
you've told it

1811
01:12:52,239 --> 01:12:54,239
to only include that data source but

1812
01:12:54,239 --> 01:12:56,480
there's no data sources to

1813
01:12:56,480 --> 01:12:59,679
resolve the ip and infrastructure

1814
01:12:59,679 --> 01:13:01,440
information

1815
01:13:01,440 --> 01:13:06,480
like this or like

1816
01:13:06,719 --> 01:13:09,199
like that

1817
01:13:10,320 --> 01:13:13,840
some of at least one of these

1818
01:13:13,840 --> 01:13:17,440
uh you know needs to be in here

1819
01:13:17,440 --> 01:13:19,360
in order for it to take the names that

1820
01:13:19,360 --> 01:13:21,120
are found and then say okay well

1821
01:13:21,120 --> 01:13:23,520
tell me where that is or tell me what

1822
01:13:23,520 --> 01:13:26,239
network that's on

1823
01:13:26,560 --> 01:13:28,239
so these are just things i find people

1824
01:13:28,239 --> 01:13:29,920
coming to our discord

1825
01:13:29,920 --> 01:13:33,040
and asking because

1826
01:13:33,040 --> 01:13:35,920
i don't know because they

1827
01:13:36,239 --> 01:13:37,360
i'm not sure if it's because they didn't

1828
01:13:37,360 --> 01:13:40,159
look at the documentation or if it's

1829
01:13:40,159 --> 01:13:41,440
just because people don't talk about it

1830
01:13:41,440 --> 01:13:43,040
much

1831
01:13:43,040 --> 01:13:45,360
but i i think they're powerful features

1832
01:13:45,360 --> 01:13:46,800
that

1833
01:13:46,800 --> 01:13:48,480
it sounds to me like more people need to

1834
01:13:48,480 --> 01:13:50,480
know about them there's also an

1835
01:13:50,480 --> 01:13:53,520
exclude option so let's say you like all

1836
01:13:53,520 --> 01:13:55,600
of them except for a few

1837
01:13:55,600 --> 01:13:57,520
you would just like to turn off a couple

1838
01:13:57,520 --> 01:13:59,120
of them then you can do it

1839
01:13:59,120 --> 01:14:02,719
using this i want to see some activity

1840
01:14:02,719 --> 01:14:05,199
over here

1841
01:14:05,679 --> 01:14:07,520
all right so it sounds like people want

1842
01:14:07,520 --> 01:14:09,840
to know

1843
01:14:10,000 --> 01:14:13,520
uh what discord

1844
01:14:13,520 --> 01:14:17,040
is the amass discord

1845
01:14:18,400 --> 01:14:22,239
so this this should help right here

1846
01:14:25,280 --> 01:14:29,840
okay so

1847
01:14:32,239 --> 01:14:35,920
where was i all right so include and

1848
01:14:35,920 --> 01:14:36,960
exclude

1849
01:14:36,960 --> 01:14:38,239
i would say if that sounds like

1850
01:14:38,239 --> 01:14:40,719
something that uh pertains to your needs

1851
01:14:40,719 --> 01:14:44,640
take a look at that closely

1852
01:14:44,800 --> 01:14:47,520
you'll probably be happy that you know

1853
01:14:47,520 --> 01:14:48,080
about it and

1854
01:14:48,080 --> 01:14:49,840
they get acquainted with it like i said

1855
01:14:49,840 --> 01:14:51,199
we're going to make some improvements on

1856
01:14:51,199 --> 01:14:51,920
this

1857
01:14:51,920 --> 01:14:54,480
people have come and said well is it

1858
01:14:54,480 --> 01:14:55,760
possible that you could make some of

1859
01:14:55,760 --> 01:14:56,320
those

1860
01:14:56,320 --> 01:14:58,320
uh data sources related to net you know

1861
01:14:58,320 --> 01:14:59,920
infrastructure

1862
01:14:59,920 --> 01:15:01,840
uh default or like they can't be turned

1863
01:15:01,840 --> 01:15:04,880
off uh some people have said well

1864
01:15:04,880 --> 01:15:07,199
what if for whatever reason you know a

1865
01:15:07,199 --> 01:15:08,159
name

1866
01:15:08,159 --> 01:15:10,080
is resolved but then you can't get the

1867
01:15:10,080 --> 01:15:11,600
infrastructure information could you

1868
01:15:11,600 --> 01:15:12,080
just

1869
01:15:12,080 --> 01:15:14,159
print it out anyway and you know not

1870
01:15:14,159 --> 01:15:17,040
include the infrastructure information

1871
01:15:17,040 --> 01:15:20,239
uh that's a pretty good request i think

1872
01:15:20,239 --> 01:15:21,760
and we're considering doing that pretty

1873
01:15:21,760 --> 01:15:22,719
soon

1874
01:15:22,719 --> 01:15:24,640
so these are things that are kind of uh

1875
01:15:24,640 --> 01:15:25,760
in flux right now

1876
01:15:25,760 --> 01:15:27,920
you know we'd probably probably be

1877
01:15:27,920 --> 01:15:29,199
interested in hearing other people's

1878
01:15:29,199 --> 01:15:31,600
thoughts about it as well

1879
01:15:31,600 --> 01:15:35,520
and as a little bit to be determined

1880
01:15:35,679 --> 01:15:39,760
all right moving along

1881
01:15:39,760 --> 01:15:41,679
so i i feel like i get some questions

1882
01:15:41,679 --> 01:15:45,440
about brute forcing quite a bit

1883
01:15:45,440 --> 01:15:47,840
i hope nobody minds that i'm i'm

1884
01:15:47,840 --> 01:15:49,760
demonstrating this stuff but

1885
01:15:49,760 --> 01:15:51,040
i don't want to sit here and waste a lot

1886
01:15:51,040 --> 01:15:53,360
of time just staring at enumerations

1887
01:15:53,360 --> 01:15:54,719
complete

1888
01:15:54,719 --> 01:15:56,480
so instead what i what i'm trying to do

1889
01:15:56,480 --> 01:15:58,000
here i hope it's obvious is i'm trying

1890
01:15:58,000 --> 01:15:59,600
to show you

1891
01:15:59,600 --> 01:16:01,600
how you can potentially use this but you

1892
01:16:01,600 --> 01:16:02,719
know i don't want to sit here and watch

1893
01:16:02,719 --> 01:16:03,120
it

1894
01:16:03,120 --> 01:16:05,120
through forcing complete when i only

1895
01:16:05,120 --> 01:16:08,159
have like 30 minutes left to speak

1896
01:16:08,159 --> 01:16:11,040
with the audience so

1897
01:16:12,000 --> 01:16:13,760
what i'm going to show you is so how how

1898
01:16:13,760 --> 01:16:15,040
can you

1899
01:16:15,040 --> 01:16:18,640
get better control over this

1900
01:16:18,880 --> 01:16:22,000
so you understand you know how to make

1901
01:16:22,000 --> 01:16:24,000
it do exactly what you want to do

1902
01:16:24,000 --> 01:16:27,199
so brute forcing is not on by default

1903
01:16:27,199 --> 01:16:30,480
it's it's optional and uh frankly it's

1904
01:16:30,480 --> 01:16:31,040
because

1905
01:16:31,040 --> 01:16:33,360
it slows things down quite a bit it also

1906
01:16:33,360 --> 01:16:36,320
uses a lot of memory

1907
01:16:36,400 --> 01:16:38,000
uh because it causes a lot more names to

1908
01:16:38,000 --> 01:16:40,239
be generated and have to be

1909
01:16:40,239 --> 01:16:42,239
stored for a while and things like that

1910
01:16:42,239 --> 01:16:43,760
but we try to keep this under control

1911
01:16:43,760 --> 01:16:44,800
but

1912
01:16:44,800 --> 01:16:48,320
you know to some degree it you know how

1913
01:16:48,320 --> 01:16:50,000
much memory is used depends on how much

1914
01:16:50,000 --> 01:16:50,960
work you're making

1915
01:16:50,960 --> 01:16:55,520
a mess do but if you want to turn it on

1916
01:16:55,520 --> 01:16:57,199
you have to turn this flag on or you

1917
01:16:57,199 --> 01:16:58,880
have to turn the equivalent flag on in

1918
01:16:58,880 --> 01:16:59,520
your

1919
01:16:59,520 --> 01:17:02,560
config file which is under the forcing

1920
01:17:02,560 --> 01:17:03,040
section

1921
01:17:03,040 --> 01:17:06,159
you have to say active equals true

1922
01:17:06,159 --> 01:17:08,880
so but there's some other pretty

1923
01:17:08,880 --> 01:17:11,440
important things

1924
01:17:11,440 --> 01:17:14,239
if you turn this on it's only using the

1925
01:17:14,239 --> 01:17:15,440
word list

1926
01:17:15,440 --> 01:17:19,120
that is default for a mass in it and it

1927
01:17:19,120 --> 01:17:21,920
it's actually like embedded in the

1928
01:17:21,920 --> 01:17:23,760
executable

1929
01:17:23,760 --> 01:17:26,719
so it's kind of magically using it and

1930
01:17:26,719 --> 01:17:29,360
you don't realize it

1931
01:17:29,360 --> 01:17:31,520
but it's also pretty small i think it

1932
01:17:31,520 --> 01:17:34,320
has maybe like 2 000 words in it

1933
01:17:34,320 --> 01:17:36,719
you know so

1934
01:17:38,000 --> 01:17:39,600
obviously not the one you probably want

1935
01:17:39,600 --> 01:17:41,280
to be using

1936
01:17:41,280 --> 01:17:42,880
if you're really you know really trying

1937
01:17:42,880 --> 01:17:45,199
to

1938
01:17:47,280 --> 01:17:49,760
take advantage of this so what you do is

1939
01:17:49,760 --> 01:17:51,760
you use dash w

1940
01:17:51,760 --> 01:17:56,000
and point it to your own word list

1941
01:17:57,199 --> 01:17:59,839
so

1942
01:18:00,480 --> 01:18:02,719
that's great uh then you can you know

1943
01:18:02,719 --> 01:18:04,159
you've turned brute forcing on and now

1944
01:18:04,159 --> 01:18:05,040
you've said okay

1945
01:18:05,040 --> 01:18:08,960
you know use my preferred word list

1946
01:18:08,960 --> 01:18:10,400
and of course i'm sure you're aware of

1947
01:18:10,400 --> 01:18:12,000
all the various reasons why

1948
01:18:12,000 --> 01:18:13,199
you definitely want to have your own

1949
01:18:13,199 --> 01:18:14,560
word list whether it's because you just

1950
01:18:14,560 --> 01:18:15,600
want to

1951
01:18:15,600 --> 01:18:16,960
feel like you've got as many words as

1952
01:18:16,960 --> 01:18:18,239
possible or whether it's because the

1953
01:18:18,239 --> 01:18:19,760
words are relevant to the target

1954
01:18:19,760 --> 01:18:20,880
organization and you think it's

1955
01:18:20,880 --> 01:18:21,600
increasing

1956
01:18:21,600 --> 01:18:24,000
your your odds there's lots of great

1957
01:18:24,000 --> 01:18:27,280
reasons to uh

1958
01:18:27,280 --> 01:18:30,000
tweak your word list but the other thing

1959
01:18:30,000 --> 01:18:31,199
to note though about

1960
01:18:31,199 --> 01:18:34,960
a mass is that it does recursive

1961
01:18:34,960 --> 01:18:38,320
uh brute forcing

1962
01:18:38,400 --> 01:18:40,800
and and that is on by default when you

1963
01:18:40,800 --> 01:18:42,400
turn brute forcing on so you can either

1964
01:18:42,400 --> 01:18:43,920
turn it off

1965
01:18:43,920 --> 01:18:46,640
if you just don't like that idea or you

1966
01:18:46,640 --> 01:18:47,679
can use it

1967
01:18:47,679 --> 01:18:50,880
but i would recommend you consider how

1968
01:18:50,880 --> 01:18:52,640
it's controlled

1969
01:18:52,640 --> 01:18:56,080
so the way what i mean by that is

1970
01:18:56,080 --> 01:18:59,120
out of the box if if you just uh

1971
01:18:59,120 --> 01:19:02,400
throw that flag on you

1972
01:19:02,400 --> 01:19:05,199
you're getting recursive brute forcing

1973
01:19:05,199 --> 01:19:07,199
but it's only going to do the recursive

1974
01:19:07,199 --> 01:19:08,000
brute forcing

1975
01:19:08,000 --> 01:19:11,600
on a subdomain if it has seen

1976
01:19:11,600 --> 01:19:15,760
a label off of that name

1977
01:19:15,840 --> 01:19:20,640
so uh what does that mean exactly

1978
01:19:20,640 --> 01:19:26,159
so let me show you if i can uh

1979
01:19:28,480 --> 01:19:37,120
see if i can just fire this up

1980
01:19:37,120 --> 01:19:40,159
make it small enough

1981
01:19:41,520 --> 01:19:45,120
all right i'll go back to

1982
01:19:49,280 --> 01:19:52,400
so the

1983
01:19:52,400 --> 01:19:54,080
flag i'm talking about that controls

1984
01:19:54,080 --> 01:19:56,080
this is called min

1985
01:19:56,080 --> 01:20:00,080
or recursive and the default value is

1986
01:20:00,080 --> 01:20:01,600
one

1987
01:20:01,600 --> 01:20:06,800
so what that means is if you

1988
01:20:07,760 --> 01:20:09,840
so so if you if you uh leave it like

1989
01:20:09,840 --> 01:20:10,960
that it's going to do

1990
01:20:10,960 --> 01:20:13,440
brute forcing on the root domain no

1991
01:20:13,440 --> 01:20:14,239
matter what

1992
01:20:14,239 --> 01:20:15,520
like that's just going to happen right

1993
01:20:15,520 --> 01:20:17,440
away

1994
01:20:17,440 --> 01:20:19,280
but for recursive brute forcing to kick

1995
01:20:19,280 --> 01:20:22,159
in you'll need to

1996
01:20:22,159 --> 01:20:25,040
see a certain amount of names show up

1997
01:20:25,040 --> 01:20:26,800
and this is what i mean by that

1998
01:20:26,800 --> 01:20:30,239
so let's say there was a subdomain

1999
01:20:30,239 --> 01:20:34,639
we'll we'll call it a mass

2000
01:20:34,639 --> 01:20:37,760
at owasp.org

2001
01:20:38,000 --> 01:20:41,040
so if you only found that if that's the

2002
01:20:41,040 --> 01:20:41,760
only name that

2003
01:20:41,760 --> 01:20:45,760
that you discovered it would not start

2004
01:20:45,760 --> 01:20:47,280
recursive brute forcing

2005
01:20:47,280 --> 01:20:51,600
on the subdomain amass.owasp.org

2006
01:20:51,600 --> 01:20:53,199
because it would say well the number of

2007
01:20:53,199 --> 01:20:55,600
labels we've seen off of a mass

2008
01:20:55,600 --> 01:20:59,120
is zero so we're not going to start

2009
01:20:59,120 --> 01:21:03,040
recursive brute forcing but when

2010
01:21:03,040 --> 01:21:06,800
later in the process it finds

2011
01:21:08,920 --> 01:21:10,960
www.mass.owasp.org

2012
01:21:10,960 --> 01:21:13,600
it's now going to say oh well we've now

2013
01:21:13,600 --> 01:21:15,520
seen one label

2014
01:21:15,520 --> 01:21:18,800
off of a mass.wasp.org and the minimum

2015
01:21:18,800 --> 01:21:20,239
for recursive is one

2016
01:21:20,239 --> 01:21:24,040
so let's start recursive reforcing for

2017
01:21:24,040 --> 01:21:28,239
amass.owas.org and it'll it will begin

2018
01:21:28,239 --> 01:21:30,639
so the the question could be well what

2019
01:21:30,639 --> 01:21:32,480
if you don't like that behavior

2020
01:21:32,480 --> 01:21:33,840
like what if that's not what you had in

2021
01:21:33,840 --> 01:21:36,880
mind if your desire was

2022
01:21:36,880 --> 01:21:39,760
i want to brute force every single thing

2023
01:21:39,760 --> 01:21:41,520
that gets discovered

2024
01:21:41,520 --> 01:21:43,760
then what you probably want to do is

2025
01:21:43,760 --> 01:21:45,120
change this value to

2026
01:21:45,120 --> 01:21:48,880
zero so that it immediately begins brute

2027
01:21:48,880 --> 01:21:49,840
forcing

2028
01:21:49,840 --> 01:21:53,440
on every name it finds

2029
01:21:53,440 --> 01:21:55,199
i wouldn't recommend doing that unless

2030
01:21:55,199 --> 01:21:56,639
that's definitely you know that's

2031
01:21:56,639 --> 01:21:57,679
exactly what you

2032
01:21:57,679 --> 01:22:00,239
wanted because you're going to get a

2033
01:22:00,239 --> 01:22:02,320
whole lot of activity

2034
01:22:02,320 --> 01:22:05,280
for things that aren't going to yield

2035
01:22:05,280 --> 01:22:06,719
results

2036
01:22:06,719 --> 01:22:09,600
because it's going to try that for names

2037
01:22:09,600 --> 01:22:10,960
where it has no evidence

2038
01:22:10,960 --> 01:22:14,159
that this is an actual subdomain name

2039
01:22:14,159 --> 01:22:19,360
that has other names hanging off of it

2040
01:22:19,520 --> 01:22:21,840
but it's going to try it anyway because

2041
01:22:21,840 --> 01:22:22,840
he told it to

2042
01:22:22,840 --> 01:22:25,360
um and you'll end up you'll definitely

2043
01:22:25,360 --> 01:22:28,480
end up waiting a lot longer

2044
01:22:29,040 --> 01:22:31,280
so i i've found that one is a nicer

2045
01:22:31,280 --> 01:22:33,040
number to work with but you also could

2046
01:22:33,040 --> 01:22:35,199
find yourself saying yeah but i really

2047
01:22:35,199 --> 01:22:38,719
don't since so many subdomains have www

2048
01:22:38,719 --> 01:22:40,320
you know dot whatever the subdomain is

2049
01:22:40,320 --> 01:22:43,440
that you know root domain

2050
01:22:43,440 --> 01:22:45,360
i i don't really like one either you

2051
01:22:45,360 --> 01:22:47,440
know maybe that's not enough

2052
01:22:47,440 --> 01:22:49,440
i'd like to see two or three okay well

2053
01:22:49,440 --> 01:22:51,280
then change it to two or change it to

2054
01:22:51,280 --> 01:22:52,159
three

2055
01:22:52,159 --> 01:22:54,239
whatever works best like i said earlier

2056
01:22:54,239 --> 01:22:55,440
for your target

2057
01:22:55,440 --> 01:22:57,360
uh is really what you should pick and

2058
01:22:57,360 --> 01:22:58,960
these things can be put into your config

2059
01:22:58,960 --> 01:22:59,600
file

2060
01:22:59,600 --> 01:23:01,199
so that way you only have to figure this

2061
01:23:01,199 --> 01:23:03,040
out and go through the trouble of

2062
01:23:03,040 --> 01:23:05,199
specifying it one time and then you can

2063
01:23:05,199 --> 01:23:06,800
stop worrying about it

2064
01:23:06,800 --> 01:23:09,840
but i definitely say learn you know

2065
01:23:09,840 --> 01:23:12,080
remember what these things mean and uh

2066
01:23:12,080 --> 01:23:15,440
use them properly

2067
01:23:16,719 --> 01:23:18,400
unfortunately that's about as much as i

2068
01:23:18,400 --> 01:23:20,320
have time for with uh

2069
01:23:20,320 --> 01:23:23,360
brute forcing at least for what that

2070
01:23:23,360 --> 01:23:25,280
means to a mass i mean

2071
01:23:25,280 --> 01:23:28,000
you you could argue that uh alterations

2072
01:23:28,000 --> 01:23:29,520
is a type of brute forcing

2073
01:23:29,520 --> 01:23:33,199
but we break up the two

2074
01:23:33,199 --> 01:23:36,480
features in a mass

2075
01:23:37,679 --> 01:23:41,120
alteration name alterations are on by

2076
01:23:41,120 --> 01:23:42,800
default

2077
01:23:42,800 --> 01:23:45,360
so if you don't want them you actually

2078
01:23:45,360 --> 01:23:48,239
have to turn them off

2079
01:23:48,239 --> 01:23:50,080
which i'm pretty sure that's that's the

2080
01:23:50,080 --> 01:23:52,480
switch

2081
01:23:53,440 --> 01:23:58,000
yeah no alts so if you say no alts then

2082
01:23:58,000 --> 01:24:03,840
it's not going to do it

2083
01:24:05,280 --> 01:24:17,840
all right so

2084
01:24:18,159 --> 01:24:21,199
so if we leave them on

2085
01:24:21,199 --> 01:24:25,840
there are some powerful

2086
01:24:25,840 --> 01:24:29,040
configuration options

2087
01:24:29,199 --> 01:24:32,560
uh related to it so most of them though

2088
01:24:32,560 --> 01:24:36,080
are also on by default and i would say

2089
01:24:36,080 --> 01:24:39,679
unless you know for a fact that

2090
01:24:39,760 --> 01:24:41,600
they're it's generating a lot of

2091
01:24:41,600 --> 01:24:44,400
attempts and it's not really yielding

2092
01:24:44,400 --> 01:24:44,880
anything

2093
01:24:44,880 --> 01:24:46,800
for you i would say just leave them on

2094
01:24:46,800 --> 01:24:48,960
but if that's the case if you know that

2095
01:24:48,960 --> 01:24:49,920
it's it's

2096
01:24:49,920 --> 01:24:53,360
a problem you can turn them off in your

2097
01:24:53,360 --> 01:24:54,320
config file

2098
01:24:54,320 --> 01:24:57,679
we ran by these earlier uh they're under

2099
01:24:57,679 --> 01:24:59,679
they're in the config file and they're

2100
01:24:59,679 --> 01:25:01,520
they have boolean values right so you

2101
01:25:01,520 --> 01:25:02,400
could just say

2102
01:25:02,400 --> 01:25:03,920
i don't want to do number flipping or

2103
01:25:03,920 --> 01:25:06,719
you know i don't want to add numbers

2104
01:25:06,719 --> 01:25:08,000
you could turn those two things off and

2105
01:25:08,000 --> 01:25:10,840
then still leverage the other types of

2106
01:25:10,840 --> 01:25:13,520
alterations the big one though that

2107
01:25:13,520 --> 01:25:15,199
i think causes the most confusion

2108
01:25:15,199 --> 01:25:16,560
because those are easy right it's easy

2109
01:25:16,560 --> 01:25:16,960
to

2110
01:25:16,960 --> 01:25:19,440
understand what those mean i think and

2111
01:25:19,440 --> 01:25:20,719
then just say

2112
01:25:20,719 --> 01:25:23,440
if you want them off then turn them off

2113
01:25:23,440 --> 01:25:24,480
but

2114
01:25:24,480 --> 01:25:26,320
there's one in there called edit

2115
01:25:26,320 --> 01:25:28,639
distance

2116
01:25:28,639 --> 01:25:31,920
and its default value is equal to one

2117
01:25:31,920 --> 01:25:34,239
and you know i can completely understand

2118
01:25:34,239 --> 01:25:35,440
how

2119
01:25:35,440 --> 01:25:36,800
most people probably say i don't know

2120
01:25:36,800 --> 01:25:40,320
what that means and

2121
01:25:40,320 --> 01:25:42,960
so here's a as quick as i can describe

2122
01:25:42,960 --> 01:25:43,920
it

2123
01:25:43,920 --> 01:25:47,360
what that uh means

2124
01:25:47,360 --> 01:25:51,280
so there's a process under

2125
01:25:51,280 --> 01:25:54,480
uh name alterations it's called

2126
01:25:54,480 --> 01:25:58,960
actually let me let me see if i can just

2127
01:25:58,960 --> 01:26:01,360
know it

2128
01:26:03,120 --> 01:26:05,679
well it's not really it it's not worth

2129
01:26:05,679 --> 01:26:06,480
it since we're

2130
01:26:06,480 --> 01:26:08,080
running out on running out of time here

2131
01:26:08,080 --> 01:26:09,920
but

2132
01:26:09,920 --> 01:26:14,159
there's a fuzzy um

2133
01:26:15,440 --> 01:26:18,800
algorithm in the alterations

2134
01:26:18,800 --> 01:26:20,159
implementation where

2135
01:26:20,159 --> 01:26:23,679
it takes the resolved names

2136
01:26:23,679 --> 01:26:26,000
and it says well let's just change them

2137
01:26:26,000 --> 01:26:27,440
a little bit

2138
01:26:27,440 --> 01:26:31,280
so what that means is it adds

2139
01:26:31,280 --> 01:26:33,360
characters and numbers in various

2140
01:26:33,360 --> 01:26:34,719
locations

2141
01:26:34,719 --> 01:26:37,440
or pretty much in every single location

2142
01:26:37,440 --> 01:26:39,280
within the name

2143
01:26:39,280 --> 01:26:41,199
or at least it's the host name not the

2144
01:26:41,199 --> 01:26:44,080
whole entire name but

2145
01:26:44,480 --> 01:26:48,000
and it it'll add numbers

2146
01:26:48,000 --> 01:26:50,800
it will delete characters from the

2147
01:26:50,800 --> 01:26:52,159
resolved name

2148
01:26:52,159 --> 01:26:54,560
and it will take characters and

2149
01:26:54,560 --> 01:26:55,440
substitute

2150
01:26:55,440 --> 01:26:58,000
them for other characters so it just

2151
01:26:58,000 --> 01:26:58,800
kind of

2152
01:26:58,800 --> 01:27:02,159
makes little changes to them

2153
01:27:02,159 --> 01:27:05,840
to try and see if similar names exist

2154
01:27:05,840 --> 01:27:09,360
and the edit distance is

2155
01:27:09,360 --> 01:27:12,480
well how many times will it make these

2156
01:27:12,480 --> 01:27:13,520
changes

2157
01:27:13,520 --> 01:27:16,800
to a single resolved name before it says

2158
01:27:16,800 --> 01:27:17,280
okay

2159
01:27:17,280 --> 01:27:20,320
that's enough and then stop

2160
01:27:20,320 --> 01:27:23,760
you know and move on the default is one

2161
01:27:23,760 --> 01:27:24,719
so it just means

2162
01:27:24,719 --> 01:27:26,560
it's only going to do that it's only

2163
01:27:26,560 --> 01:27:28,080
going to take the original resolved name

2164
01:27:28,080 --> 01:27:29,600
and then

2165
01:27:29,600 --> 01:27:34,159
attempt those those things one time

2166
01:27:34,159 --> 01:27:38,159
and then that's it if you change that

2167
01:27:38,159 --> 01:27:42,960
to two what you're now saying is

2168
01:27:42,960 --> 01:27:46,000
so make the change and cycle the

2169
01:27:46,000 --> 01:27:47,920
result back into the process and do it

2170
01:27:47,920 --> 01:27:50,000
all over again

2171
01:27:50,000 --> 01:27:52,880
and it it creates a huge increase in the

2172
01:27:52,880 --> 01:27:53,920
number

2173
01:27:53,920 --> 01:27:56,960
of names generated

2174
01:27:56,960 --> 01:27:59,679
and it creates you know and they end up

2175
01:27:59,679 --> 01:28:02,320
attempting names that are

2176
01:28:02,320 --> 01:28:05,120
less similar

2177
01:28:05,520 --> 01:28:07,679
and you could do this quite a few times

2178
01:28:07,679 --> 01:28:08,719
you know number of times

2179
01:28:08,719 --> 01:28:11,040
by changing that edit distance value but

2180
01:28:11,040 --> 01:28:12,800
i wouldn't recommend it

2181
01:28:12,800 --> 01:28:14,800
because once you start getting you know

2182
01:28:14,800 --> 01:28:16,960
past like three

2183
01:28:16,960 --> 01:28:19,600
the number of names it's generating is

2184
01:28:19,600 --> 01:28:21,440
unbelievable

2185
01:28:21,440 --> 01:28:24,159
so i wouldn't recommend you do it but

2186
01:28:24,159 --> 01:28:25,679
that's what that is if you change the

2187
01:28:25,679 --> 01:28:27,600
value to zero

2188
01:28:27,600 --> 01:28:31,600
you will cause that algorithm to

2189
01:28:31,600 --> 01:28:33,360
not be used so maybe that's the most

2190
01:28:33,360 --> 01:28:35,120
important piece of information

2191
01:28:35,120 --> 01:28:36,880
in what i just shared with you is that

2192
01:28:36,880 --> 01:28:38,719
if you if you don't like

2193
01:28:38,719 --> 01:28:40,840
having that included in your name

2194
01:28:40,840 --> 01:28:42,960
alterations then just make it zero and

2195
01:28:42,960 --> 01:28:43,520
then

2196
01:28:43,520 --> 01:28:46,480
you don't have to worry about it

2197
01:28:46,560 --> 01:28:49,760
i kind of like that process i think it's

2198
01:28:49,760 --> 01:28:50,719
pretty powerful

2199
01:28:50,719 --> 01:28:53,920
what sometimes gets discovered so i like

2200
01:28:53,920 --> 01:28:55,440
just leaving it at one and seeing what

2201
01:28:55,440 --> 01:28:57,520
happens

2202
01:28:57,520 --> 01:29:01,040
so that

2203
01:29:01,040 --> 01:29:04,560
that's that the next thing i want to

2204
01:29:04,560 --> 01:29:05,679
cover before then

2205
01:29:05,679 --> 01:29:07,199
i try to use the rest of the time maybe

2206
01:29:07,199 --> 01:29:09,040
introducing you to our new scripting

2207
01:29:09,040 --> 01:29:10,159
engine is

2208
01:29:10,159 --> 01:29:13,760
i get a lot of questions about

2209
01:29:13,760 --> 01:29:16,800
how to manage your

2210
01:29:17,920 --> 01:29:20,880
dns resolvers

2211
01:29:22,840 --> 01:29:25,360
so

2212
01:29:25,360 --> 01:29:29,360
by default a mass has

2213
01:29:29,360 --> 01:29:31,520
i think it's something like eight either

2214
01:29:31,520 --> 01:29:32,800
eight or ten

2215
01:29:32,800 --> 01:29:36,639
um default dns

2216
01:29:36,639 --> 01:29:38,800
resolvers that it uses and they're

2217
01:29:38,800 --> 01:29:41,360
pretty high performance like that

2218
01:29:41,360 --> 01:29:44,320
they're they're you know they'll handle

2219
01:29:44,320 --> 01:29:45,199
quite a

2220
01:29:45,199 --> 01:29:50,480
lot of requests and with uh pretty low

2221
01:29:50,840 --> 01:29:52,400
latency

2222
01:29:52,400 --> 01:29:56,400
it it is not your dns resolver that

2223
01:29:56,400 --> 01:29:58,800
you've specified in your os

2224
01:29:58,800 --> 01:30:00,480
so sometimes this you know causes

2225
01:30:00,480 --> 01:30:02,000
confusion for people

2226
01:30:02,000 --> 01:30:03,520
you know they'll they'll come to us and

2227
01:30:03,520 --> 01:30:05,120
say well if i

2228
01:30:05,120 --> 01:30:08,880
do dig on my machine i can get

2229
01:30:08,880 --> 01:30:11,120
my machine to resolve that name but then

2230
01:30:11,120 --> 01:30:12,639
when i try to do it with a mask doesn't

2231
01:30:12,639 --> 01:30:13,840
work

2232
01:30:13,840 --> 01:30:16,639
why isn't it working and the reason

2233
01:30:16,639 --> 01:30:18,400
often ends up being because

2234
01:30:18,400 --> 01:30:20,560
a mass is using different dns resolvers

2235
01:30:20,560 --> 01:30:23,040
and they have blocking going on

2236
01:30:23,040 --> 01:30:26,800
for using any dns resolver other than

2237
01:30:26,800 --> 01:30:29,360
their default one or the one that you

2238
01:30:29,360 --> 01:30:30,560
know they're using in their home or

2239
01:30:30,560 --> 01:30:31,520
their

2240
01:30:31,520 --> 01:30:33,120
place where they work and things like

2241
01:30:33,120 --> 01:30:35,840
that

2242
01:30:36,239 --> 01:30:38,320
so something to keep in mind is that if

2243
01:30:38,320 --> 01:30:39,760
you if you want

2244
01:30:39,760 --> 01:30:42,159
dns to use the same resolver that your

2245
01:30:42,159 --> 01:30:43,679
system is using then you need to tell it

2246
01:30:43,679 --> 01:30:44,480
to

2247
01:30:44,480 --> 01:30:46,960
and you can you can do that by either

2248
01:30:46,960 --> 01:30:49,360
specifying it um

2249
01:30:49,360 --> 01:30:50,960
with dash r and then just giving it the

2250
01:30:50,960 --> 01:30:52,880
ip address you can

2251
01:30:52,880 --> 01:30:56,000
put this information in your config file

2252
01:30:56,000 --> 01:31:00,480
uh you can create a text file with

2253
01:31:00,480 --> 01:31:03,120
resolvers and then give it the rf flag

2254
01:31:03,120 --> 01:31:04,159
and the name you know

2255
01:31:04,159 --> 01:31:06,800
path to the file which is what i find

2256
01:31:06,800 --> 01:31:08,719
myself doing a lot of times

2257
01:31:08,719 --> 01:31:09,920
for a different reason that i'll go over

2258
01:31:09,920 --> 01:31:11,760
in a second

2259
01:31:11,760 --> 01:31:14,639
but i would definitely say make sure you

2260
01:31:14,639 --> 01:31:16,880
you are aware of

2261
01:31:16,880 --> 01:31:19,920
where is the mass actually going and

2262
01:31:19,920 --> 01:31:22,320
trying to find out about these names

2263
01:31:22,320 --> 01:31:23,760
like where is it doing the dns

2264
01:31:23,760 --> 01:31:24,719
resolution

2265
01:31:24,719 --> 01:31:28,080
or sending the queries to

2266
01:31:28,080 --> 01:31:29,920
the other thing is those uh default

2267
01:31:29,920 --> 01:31:31,520
resolvers that

2268
01:31:31,520 --> 01:31:34,239
it's using you're only going to be able

2269
01:31:34,239 --> 01:31:36,480
to

2270
01:31:37,360 --> 01:31:40,639
pound on those so long before

2271
01:31:40,639 --> 01:31:42,840
you're going to start to get problems

2272
01:31:42,840 --> 01:31:45,120
potentially i mean they're

2273
01:31:45,120 --> 01:31:47,440
for instance one of them is google which

2274
01:31:47,440 --> 01:31:48,800
is extremely high performance and

2275
01:31:48,800 --> 01:31:50,239
they're usually pretty good about

2276
01:31:50,239 --> 01:31:51,600
you know letting you do whatever you you

2277
01:31:51,600 --> 01:31:53,760
know query whatever you want but

2278
01:31:53,760 --> 01:31:55,520
eventually if you keep doing it long

2279
01:31:55,520 --> 01:31:56,560
enough and

2280
01:31:56,560 --> 01:31:59,920
in it at an intense level

2281
01:31:59,920 --> 01:32:02,159
google will start to wonder what's

2282
01:32:02,159 --> 01:32:03,920
happening

2283
01:32:03,920 --> 01:32:05,520
and you'll start getting interesting uh

2284
01:32:05,520 --> 01:32:07,360
behavior from google services and things

2285
01:32:07,360 --> 01:32:08,560
like that

2286
01:32:08,560 --> 01:32:12,159
so personally i wouldn't recommend you

2287
01:32:12,159 --> 01:32:13,520
use those default

2288
01:32:13,520 --> 01:32:16,719
resolvers if you're really gonna say

2289
01:32:16,719 --> 01:32:19,760
do some intense brute forcing or or

2290
01:32:19,760 --> 01:32:22,080
start cranking up the alterations

2291
01:32:22,080 --> 01:32:23,760
or you just have a huge target you know

2292
01:32:23,760 --> 01:32:27,120
this is gonna last a long time

2293
01:32:27,120 --> 01:32:31,760
i would use

2294
01:32:32,320 --> 01:32:34,880
a handy little tool i'll show you what

2295
01:32:34,880 --> 01:32:41,840
it is

2296
01:32:43,199 --> 01:32:45,919
we go here

2297
01:32:53,280 --> 01:32:55,280
so i would i would go to this project

2298
01:32:55,280 --> 01:32:57,519
here

2299
01:32:58,000 --> 01:33:01,040
and honestly what i do is i just

2300
01:33:01,040 --> 01:33:04,560
fire up the the docker image

2301
01:33:04,560 --> 01:33:07,679
it's extremely easy

2302
01:33:07,679 --> 01:33:11,040
and i would also say i mean

2303
01:33:11,040 --> 01:33:12,400
they're being conservative here in my

2304
01:33:12,400 --> 01:33:14,080
opinion i think they're just trying to

2305
01:33:14,080 --> 01:33:15,280
be careful that they don't get you in

2306
01:33:15,280 --> 01:33:15,840
trouble

2307
01:33:15,840 --> 01:33:19,040
but i have been able to uh

2308
01:33:19,040 --> 01:33:20,480
change this number to something more

2309
01:33:20,480 --> 01:33:22,719
like a hundred or 200

2310
01:33:22,719 --> 01:33:25,920
and the difference in performance is

2311
01:33:25,920 --> 01:33:28,480
unbelievable because this right here is

2312
01:33:28,480 --> 01:33:30,560
a huge number of

2313
01:33:30,560 --> 01:33:33,920
uh name servers and if you keep it at 20

2314
01:33:33,920 --> 01:33:34,560
threads

2315
01:33:34,560 --> 01:33:36,080
it could take a long time for this to

2316
01:33:36,080 --> 01:33:39,040
finish i would say fire that up to 100

2317
01:33:39,040 --> 01:33:40,000
or something like that

2318
01:33:40,000 --> 01:33:42,320
and it will finish in like i don't know

2319
01:33:42,320 --> 01:33:45,040
5 or 10 minutes

2320
01:33:45,600 --> 01:33:48,840
and then you're gonna end up with this

2321
01:33:48,840 --> 01:33:50,000
uh

2322
01:33:50,000 --> 01:33:52,800
file called resolvers.txt which is

2323
01:33:52,800 --> 01:33:54,159
probably going to have somewhere between

2324
01:33:54,159 --> 01:33:57,760
eight and nine thousand public dns

2325
01:33:57,760 --> 01:34:01,040
uh servers to work with

2326
01:34:01,040 --> 01:34:05,840
so at that point in time what i do

2327
01:34:07,040 --> 01:34:09,280
actually

2328
01:34:12,719 --> 01:34:16,080
is i take

2329
01:34:16,080 --> 01:34:19,520
the resolvers file

2330
01:34:19,520 --> 01:34:21,920
and i

2331
01:34:23,280 --> 01:34:26,719
i say give me like 50 of them

2332
01:34:26,719 --> 01:34:28,639
and then i usually create another one

2333
01:34:28,639 --> 01:34:30,639
called

2334
01:34:30,639 --> 01:34:34,159
something like that because you do not

2335
01:34:34,159 --> 01:34:35,280
need

2336
01:34:35,280 --> 01:34:37,600
thousands of resolvers or you shouldn't

2337
01:34:37,600 --> 01:34:39,040
i can't imagine why you would you might

2338
01:34:39,040 --> 01:34:40,960
need 100 or 200 or something like that

2339
01:34:40,960 --> 01:34:41,520
but

2340
01:34:41,520 --> 01:34:44,880
for most of what i do 50 is is

2341
01:34:44,880 --> 01:34:47,840
a pretty good number

2342
01:34:48,000 --> 01:34:50,719
he said what's the github page hold on a

2343
01:34:50,719 --> 01:34:51,600
second

2344
01:34:51,600 --> 01:34:53,520
unfortunately i think i just dropped

2345
01:34:53,520 --> 01:35:01,840
that but i can find it easy enough

2346
01:35:11,040 --> 01:35:12,400
oh someone else already put that in

2347
01:35:12,400 --> 01:35:15,199
there apparently

2348
01:35:15,199 --> 01:35:18,560
anyway there you go um now that's a

2349
01:35:18,560 --> 01:35:19,520
really good project

2350
01:35:19,520 --> 01:35:21,040
you should um you should have that in

2351
01:35:21,040 --> 01:35:23,440
your tool kit

2352
01:35:23,440 --> 01:35:25,440
like i said it's also so easy to deal

2353
01:35:25,440 --> 01:35:26,800
work with it because they have the dot

2354
01:35:26,800 --> 01:35:29,199
as the doctor image that way

2355
01:35:29,199 --> 01:35:30,320
you basically have to worry about two

2356
01:35:30,320 --> 01:35:32,320
commands build me the doctor image

2357
01:35:32,320 --> 01:35:34,239
and run the command just like they have

2358
01:35:34,239 --> 01:35:36,000
it there as i said

2359
01:35:36,000 --> 01:35:37,920
i would change the number of threads it

2360
01:35:37,920 --> 01:35:40,880
just makes it run faster

2361
01:35:40,880 --> 01:35:43,199
once you get the information though like

2362
01:35:43,199 --> 01:35:45,360
i said at least with a mass i would say

2363
01:35:45,360 --> 01:35:49,679
do not try to use thousands of resolvers

2364
01:35:49,679 --> 01:35:51,600
and let me tell you the the biggest

2365
01:35:51,600 --> 01:35:52,800
reason why

2366
01:35:52,800 --> 01:35:54,159
because some of them are still not going

2367
01:35:54,159 --> 01:35:56,320
to be good

2368
01:35:56,320 --> 01:36:00,400
so that dns validator is a great tool

2369
01:36:00,400 --> 01:36:02,800
but it will still miss them that are

2370
01:36:02,800 --> 01:36:06,159
going to give you false information

2371
01:36:06,880 --> 01:36:10,080
and it only takes one bad egg to then

2372
01:36:10,080 --> 01:36:12,800
throw off your enumeration which is

2373
01:36:12,800 --> 01:36:14,880
really irritating

2374
01:36:14,880 --> 01:36:18,320
so i would really say cut it down to

2375
01:36:18,320 --> 01:36:20,880
like 25 or 50 or something to increase

2376
01:36:20,880 --> 01:36:22,480
the chances that

2377
01:36:22,480 --> 01:36:25,760
the ones you selected from the pile

2378
01:36:25,760 --> 01:36:28,560
end up being legitimate ones are good

2379
01:36:28,560 --> 01:36:30,639
ones

2380
01:36:30,639 --> 01:36:33,760
and it it just isn't really worth trying

2381
01:36:33,760 --> 01:36:34,880
to use more

2382
01:36:34,880 --> 01:36:37,679
because it moving along if what i wanted

2383
01:36:37,679 --> 01:36:39,280
to show you is let's say you you now

2384
01:36:39,280 --> 01:36:41,280
have that file you have this file called

2385
01:36:41,280 --> 01:36:43,600
50 resolvers.txt

2386
01:36:43,600 --> 01:36:48,080
um when you use a mass

2387
01:36:48,560 --> 01:36:50,960
with the enum so you're going to give it

2388
01:36:50,960 --> 01:36:52,000
your usual stuff

2389
01:36:52,000 --> 01:36:53,119
and you're going to say yeah i want a

2390
01:36:53,119 --> 01:36:55,199
brute force and

2391
01:36:55,199 --> 01:36:56,880
all that all that and then you're going

2392
01:36:56,880 --> 01:36:58,480
to say okay

2393
01:36:58,480 --> 01:37:00,959
so now

2394
01:37:03,600 --> 01:37:04,840
you're going to give it 50

2395
01:37:04,840 --> 01:37:07,280
resolvers.tech

2396
01:37:07,280 --> 01:37:10,480
to the rf flag and then you know

2397
01:37:10,480 --> 01:37:11,199
whatever

2398
01:37:11,199 --> 01:37:15,679
uh target you're going after

2399
01:37:15,679 --> 01:37:17,360
but there's one more cap here one more

2400
01:37:17,360 --> 01:37:19,360
thing so now so you've got

2401
01:37:19,360 --> 01:37:20,960
50 resolvers at your disposal now

2402
01:37:20,960 --> 01:37:24,080
instead of 8 or 10 or whatever it is

2403
01:37:24,080 --> 01:37:26,639
but it's still going to have the default

2404
01:37:26,639 --> 01:37:27,840
number of

2405
01:37:27,840 --> 01:37:31,199
dns queries that are allowed to

2406
01:37:31,199 --> 01:37:34,880
be happening at the same time which

2407
01:37:34,880 --> 01:37:38,000
that default that mass uses for that

2408
01:37:38,000 --> 01:37:41,119
for that number is based on the fact

2409
01:37:41,119 --> 01:37:42,719
that it's assuming it's going to use 8

2410
01:37:42,719 --> 01:37:43,760
or 10

2411
01:37:43,760 --> 01:37:47,600
resolvers and also just that

2412
01:37:47,600 --> 01:37:50,639
this number is a bit dependent on your

2413
01:37:50,639 --> 01:37:51,040
own

2414
01:37:51,040 --> 01:37:52,880
network performance like some people

2415
01:37:52,880 --> 01:37:54,639
want the number to be low

2416
01:37:54,639 --> 01:37:56,480
because they say their bandwidth can

2417
01:37:56,480 --> 01:37:58,239
only handle you know so many of these

2418
01:37:58,239 --> 01:38:01,440
requests going out at once

2419
01:38:01,440 --> 01:38:03,040
so maybe you'll be forced to always keep

2420
01:38:03,040 --> 01:38:04,960
the number low but for instance a number

2421
01:38:04,960 --> 01:38:06,719
that works pretty good for me

2422
01:38:06,719 --> 01:38:10,480
if i have 50 resolvers is

2423
01:38:10,480 --> 01:38:13,840
so if i change it

2424
01:38:13,840 --> 01:38:17,600
to its max dns queries

2425
01:38:17,600 --> 01:38:20,880
is the flag and there's similar named

2426
01:38:20,880 --> 01:38:25,280
things in your config file um

2427
01:38:25,280 --> 01:38:26,639
you know so that you could change this

2428
01:38:26,639 --> 01:38:29,840
permanently but i i kind of like

2429
01:38:29,840 --> 01:38:33,119
20 000 as the number

2430
01:38:33,119 --> 01:38:34,800
that combination works really good 20

2431
01:38:34,800 --> 01:38:37,040
000 uh

2432
01:38:37,040 --> 01:38:39,040
dns queries that can be happening in any

2433
01:38:39,040 --> 01:38:40,800
given moment

2434
01:38:40,800 --> 01:38:44,639
across 50 dns resolvers

2435
01:38:44,639 --> 01:38:46,639
that that tends to give me some pretty

2436
01:38:46,639 --> 01:38:48,159
good results where

2437
01:38:48,159 --> 01:38:49,520
during your enumeration you know you

2438
01:38:49,520 --> 01:38:51,840
could be seeing like

2439
01:38:51,840 --> 01:38:56,080
15 000 dns uh requests

2440
01:38:56,080 --> 01:38:59,840
per second

2441
01:39:00,239 --> 01:39:01,679
you start playing with the numbers too

2442
01:39:01,679 --> 01:39:04,000
much or you start you know

2443
01:39:04,000 --> 01:39:06,000
like shifting those numbers around a

2444
01:39:06,000 --> 01:39:07,280
whole lot and

2445
01:39:07,280 --> 01:39:09,040
you can quickly start seeing the

2446
01:39:09,040 --> 01:39:11,119
performance you're getting

2447
01:39:11,119 --> 01:39:14,239
change or go downhill so be

2448
01:39:14,239 --> 01:39:16,000
you know feel free of course to play

2449
01:39:16,000 --> 01:39:18,800
with it but

2450
01:39:20,239 --> 01:39:23,040
you know it's a it's a bit of a there's

2451
01:39:23,040 --> 01:39:24,400
a little bit of magic i think going on

2452
01:39:24,400 --> 01:39:25,199
with

2453
01:39:25,199 --> 01:39:28,320
what creates the best uh

2454
01:39:28,320 --> 01:39:32,400
situation all right unfortunately i'm

2455
01:39:32,400 --> 01:39:36,320
i'm kind of uh running out of time here

2456
01:39:36,800 --> 01:39:38,480
but that's a pretty important topic i

2457
01:39:38,480 --> 01:39:40,159
mean personally i've played with that

2458
01:39:40,159 --> 01:39:42,239
for quite a long time

2459
01:39:42,239 --> 01:39:44,480
and

2460
01:39:45,760 --> 01:39:47,840
you know it can have quite an impact on

2461
01:39:47,840 --> 01:39:50,239
whether this ends up taking you know

2462
01:39:50,239 --> 01:39:52,159
48 hours to complete or whether it ends

2463
01:39:52,159 --> 01:39:54,080
up happening

2464
01:39:54,080 --> 01:39:58,080
while you're eating dinner so

2465
01:39:58,639 --> 01:40:00,480
i'm gonna i'm gonna skip any more any

2466
01:40:00,480 --> 01:40:01,920
additional details about

2467
01:40:01,920 --> 01:40:03,679
visualizations i i went over it a little

2468
01:40:03,679 --> 01:40:06,239
bit it's a nice it's a fun topic i would

2469
01:40:06,239 --> 01:40:07,199
say play with it

2470
01:40:07,199 --> 01:40:10,080
it's great but i'd like to have a moment

2471
01:40:10,080 --> 01:40:11,760
to

2472
01:40:11,760 --> 01:40:16,159
show you at least or introduce you to

2473
01:40:16,159 --> 01:40:19,280
our scripting engine

2474
01:40:19,520 --> 01:40:23,199
so a couple quick things

2475
01:40:23,199 --> 01:40:27,678
one is just a reminder

2476
01:40:29,600 --> 01:40:33,840
so by default this this is where

2477
01:40:34,080 --> 01:40:36,000
the magic happens right with output and

2478
01:40:36,000 --> 01:40:39,040
things like that for a mass

2479
01:40:39,040 --> 01:40:42,880
but another like little hidden uh

2480
01:40:43,040 --> 01:40:48,239
thing here is that if in this directory

2481
01:40:48,840 --> 01:40:51,360
you

2482
01:40:51,360 --> 01:40:54,559
you create another directory

2483
01:40:57,040 --> 01:41:00,000
call it scripts

2484
01:41:01,280 --> 01:41:04,800
a mass will look there automatically

2485
01:41:04,800 --> 01:41:08,880
and it will look for ads or

2486
01:41:08,880 --> 01:41:12,560
a mass data source scripts

2487
01:41:13,040 --> 01:41:16,400
and it will attempt to load them up as

2488
01:41:16,400 --> 01:41:18,159
additional data sources in your

2489
01:41:18,159 --> 01:41:20,639
enumeration

2490
01:41:20,639 --> 01:41:24,239
these scripts are lua scripts

2491
01:41:24,239 --> 01:41:29,280
they're kind of similar to nmap

2492
01:41:31,119 --> 01:41:34,400
nse groups

2493
01:41:35,679 --> 01:41:38,639
so there's there's like i said at the

2494
01:41:38,639 --> 01:41:40,080
beginning there's a whole

2495
01:41:40,080 --> 01:41:43,600
uh like documentation file on

2496
01:41:43,600 --> 01:41:45,360
so what are these and you know how do

2497
01:41:45,360 --> 01:41:47,360
you write them and

2498
01:41:47,360 --> 01:41:48,880
and things like that and actually it's a

2499
01:41:48,880 --> 01:41:50,719
bit of a work in progress i would say be

2500
01:41:50,719 --> 01:41:53,280
prepared for the possibility that

2501
01:41:53,280 --> 01:41:55,520
we will be expanding it maybe even

2502
01:41:55,520 --> 01:41:56,560
changing things

2503
01:41:56,560 --> 01:41:59,119
a little bit as we keep moving forward

2504
01:41:59,119 --> 01:42:00,719
with it

2505
01:42:00,719 --> 01:42:03,679
but it's quite powerful that you could

2506
01:42:03,679 --> 01:42:04,560
just have uh

2507
01:42:04,560 --> 01:42:06,320
say your own database where you're

2508
01:42:06,320 --> 01:42:08,320
keeping some of this information

2509
01:42:08,320 --> 01:42:10,080
and you just want the ability to pull

2510
01:42:10,080 --> 01:42:11,440
what's in there

2511
01:42:11,440 --> 01:42:14,639
into your mass enumerations

2512
01:42:14,639 --> 01:42:17,040
and now you can and you don't have to

2513
01:42:17,040 --> 01:42:19,760
ask us to make it possible for you or

2514
01:42:19,760 --> 01:42:22,400
share any any of the any of that with

2515
01:42:22,400 --> 01:42:24,560
anybody else

2516
01:42:24,560 --> 01:42:27,199
or it could be as simple as you write

2517
01:42:27,199 --> 01:42:28,560
one of these scripts to pull

2518
01:42:28,560 --> 01:42:31,840
data out of a file or something you know

2519
01:42:31,840 --> 01:42:33,920
that it could be any anything that you

2520
01:42:33,920 --> 01:42:35,760
can do in this lua environment

2521
01:42:35,760 --> 01:42:39,199
which is quite a bit actually um

2522
01:42:39,199 --> 01:42:42,880
you can do these in your ads scripts

2523
01:42:42,880 --> 01:42:44,400
so what i was going to say is let's just

2524
01:42:44,400 --> 01:42:46,800
look at one of these

2525
01:42:46,800 --> 01:42:48,159
fire this back up i guess i should have

2526
01:42:48,159 --> 01:42:50,960
just kept this open

2527
01:42:55,119 --> 01:42:58,480
so if you're in the repo the place where

2528
01:42:58,480 --> 01:42:59,360
we currently

2529
01:42:59,360 --> 01:43:02,800
have these is under resources

2530
01:43:02,800 --> 01:43:07,119
and scripts and they're broken out

2531
01:43:07,119 --> 01:43:11,600
by the type of data source that it is

2532
01:43:11,600 --> 01:43:14,560
so like as an example under this there's

2533
01:43:14,560 --> 01:43:15,440
there's only one

2534
01:43:15,440 --> 01:43:16,880
right now because it's the

2535
01:43:16,880 --> 01:43:19,119
implementation for

2536
01:43:19,119 --> 01:43:24,480
our brute forcing and every

2537
01:43:24,480 --> 01:43:28,239
one of these scripts has to have

2538
01:43:28,239 --> 01:43:32,000
um a global

2539
01:43:32,000 --> 01:43:34,000
these two global variables that are the

2540
01:43:34,000 --> 01:43:36,560
name which needs to be unique

2541
01:43:36,560 --> 01:43:40,159
across all the script names

2542
01:43:40,159 --> 01:43:44,400
and this uh type which

2543
01:43:44,400 --> 01:43:46,560
should be one of the i mean actually it

2544
01:43:46,560 --> 01:43:48,080
could be it could be anything

2545
01:43:48,080 --> 01:43:50,480
you want to call it but if you're hoping

2546
01:43:50,480 --> 01:43:51,679
that it

2547
01:43:51,679 --> 01:43:54,320
participates well with the rest of the

2548
01:43:54,320 --> 01:43:56,480
mass process it really should be

2549
01:43:56,480 --> 01:43:58,159
one of the types that's indicated or

2550
01:43:58,159 --> 01:44:01,599
shared in the documentation

2551
01:44:02,719 --> 01:44:05,440
but then the rest in here is a you know

2552
01:44:05,440 --> 01:44:06,239
a lot of it is

2553
01:44:06,239 --> 01:44:09,440
what you want to do with it now the

2554
01:44:09,440 --> 01:44:12,000
these here and again this is in the

2555
01:44:12,000 --> 01:44:13,119
documentation

2556
01:44:13,119 --> 01:44:16,080
these are special function names and

2557
01:44:16,080 --> 01:44:17,360
they're callbacks

2558
01:44:17,360 --> 01:44:22,559
so they're and so uh this one down here

2559
01:44:23,600 --> 01:44:27,199
so these are like events that take place

2560
01:44:27,199 --> 01:44:29,679
inside of a mass and when those events

2561
01:44:29,679 --> 01:44:31,040
happen

2562
01:44:31,040 --> 01:44:32,960
uh they let the data sources know about

2563
01:44:32,960 --> 01:44:34,560
it

2564
01:44:34,560 --> 01:44:36,960
in hope that you know the data sources

2565
01:44:36,960 --> 01:44:38,719
will receive the information and then

2566
01:44:38,719 --> 01:44:41,920
come up with more information it's part

2567
01:44:41,920 --> 01:44:43,679
of that cyclic process i mentioned

2568
01:44:43,679 --> 01:44:48,239
earlier so these are the events

2569
01:44:48,239 --> 01:44:52,159
and then uh for instance in this

2570
01:44:52,159 --> 01:44:56,000
uh data source these are like support

2571
01:44:56,000 --> 01:44:57,600
routines

2572
01:44:57,600 --> 01:45:02,960
that are just helping it do its job

2573
01:45:02,960 --> 01:45:05,280
so this is this is a fairly well i mean

2574
01:45:05,280 --> 01:45:06,960
actually this is somewhat complicated

2575
01:45:06,960 --> 01:45:08,080
let me show you one that is

2576
01:45:08,080 --> 01:45:10,400
extremely simple just give an idea of

2577
01:45:10,400 --> 01:45:12,480
how easy these can be to write

2578
01:45:12,480 --> 01:45:16,719
um like a pretty typical one

2579
01:45:16,719 --> 01:45:19,119
actually let's look at scraping there's

2580
01:45:19,119 --> 01:45:20,080
some

2581
01:45:20,080 --> 01:45:24,880
good ones in here so

2582
01:45:25,280 --> 01:45:27,360
so for this one the only thing it has is

2583
01:45:27,360 --> 01:45:29,040
a name a type

2584
01:45:29,040 --> 01:45:31,360
it has a start routine in order to set

2585
01:45:31,360 --> 01:45:32,320
the rate limit

2586
01:45:32,320 --> 01:45:34,880
so that it doesn't call on this service

2587
01:45:34,880 --> 01:45:37,600
more than once a second

2588
01:45:37,600 --> 01:45:40,800
and then all it does is take the name

2589
01:45:40,800 --> 01:45:45,600
and do this client http request

2590
01:45:45,600 --> 01:45:48,000
and send it to this function that

2591
01:45:48,000 --> 01:45:48,800
handles that

2592
01:45:48,800 --> 01:45:52,320
and scrapes the results

2593
01:45:52,320 --> 01:45:54,400
and then it just has this function down

2594
01:45:54,400 --> 01:45:55,679
here that says

2595
01:45:55,679 --> 01:45:59,360
build me the url that's based on the

2596
01:45:59,360 --> 01:46:02,639
the data source and the domain name but

2597
01:46:02,639 --> 01:46:04,320
that's it you know it just says where do

2598
01:46:04,320 --> 01:46:05,679
i go to find this stuff

2599
01:46:05,679 --> 01:46:08,159
and then it sends it to scrape and

2600
01:46:08,159 --> 01:46:10,320
scrape does the

2601
01:46:10,320 --> 01:46:14,400
client http request and scrapes the

2602
01:46:14,400 --> 01:46:17,440
response for um

2603
01:46:17,440 --> 01:46:19,520
not just for that domain name but

2604
01:46:19,520 --> 01:46:21,440
actually it scrapes it for

2605
01:46:21,440 --> 01:46:25,440
any domain or subdomain name

2606
01:46:25,440 --> 01:46:30,159
that is in scope for

2607
01:46:30,159 --> 01:46:33,040
the enumeration process so it's kind of

2608
01:46:33,040 --> 01:46:34,080
convenient that it

2609
01:46:34,080 --> 01:46:35,520
kind of does a lot of the legwork for

2610
01:46:35,520 --> 01:46:37,679
you but that that

2611
01:46:37,679 --> 01:46:39,440
probably represents what i would say is

2612
01:46:39,440 --> 01:46:40,719
one of the simplest

2613
01:46:40,719 --> 01:46:44,480
scripts that is available by default

2614
01:46:44,480 --> 01:46:46,400
inside of a mask

2615
01:46:46,400 --> 01:46:49,920
but it can be just as easy for you to

2616
01:46:49,920 --> 01:46:53,600
write your own someone said

2617
01:46:53,600 --> 01:46:56,880
can you make it list out cnames that it

2618
01:46:56,880 --> 01:46:57,440
finds

2619
01:46:57,440 --> 01:46:59,600
as well as where it eventually resolves

2620
01:46:59,600 --> 01:47:01,760
to

2621
01:47:02,320 --> 01:47:05,600
yeah so let's see let's uh

2622
01:47:05,600 --> 01:47:09,840
take a step back

2623
01:47:09,920 --> 01:47:13,440
i'll just go back to brute forcing for a

2624
01:47:13,440 --> 01:47:15,678
minute

2625
01:47:16,159 --> 01:47:20,400
so if you look in here under resolved

2626
01:47:20,560 --> 01:47:23,920
there's some uh types of

2627
01:47:23,920 --> 01:47:26,800
responses that i guess you could say

2628
01:47:26,800 --> 01:47:28,880
they're not good enough

2629
01:47:28,880 --> 01:47:31,920
to kick off brute forcing

2630
01:47:31,920 --> 01:47:34,080
so you can see in here we say well first

2631
01:47:34,080 --> 01:47:37,040
of all we better have some records

2632
01:47:37,040 --> 01:47:40,320
and or or

2633
01:47:44,000 --> 01:47:47,520
if it has a cname record or

2634
01:47:47,520 --> 01:47:51,520
doesn't have a records essentially

2635
01:47:51,520 --> 01:47:54,320
or you know a or quad a records then

2636
01:47:54,320 --> 01:47:54,880
just

2637
01:47:54,880 --> 01:47:58,480
leave because it means this this isn't

2638
01:47:58,480 --> 01:47:59,360
what we want

2639
01:47:59,360 --> 01:48:02,560
in order to kick off recursive uh

2640
01:48:02,560 --> 01:48:05,760
brute forcing but

2641
01:48:05,760 --> 01:48:07,199
so you know so the question was well

2642
01:48:07,199 --> 01:48:09,920
could you have it list out cnames

2643
01:48:09,920 --> 01:48:13,679
list out is a bit of an interesting

2644
01:48:13,679 --> 01:48:18,400
like question or idea because a mass

2645
01:48:18,400 --> 01:48:19,920
isn't really designed to

2646
01:48:19,920 --> 01:48:23,920
to let you like customize the output

2647
01:48:24,080 --> 01:48:25,679
so you'd probably have to think about

2648
01:48:25,679 --> 01:48:27,360
well so

2649
01:48:27,360 --> 01:48:28,800
what do you what do you want to do with

2650
01:48:28,800 --> 01:48:30,480
the output

2651
01:48:30,480 --> 01:48:32,159
there's nothing preventing you currently

2652
01:48:32,159 --> 01:48:34,239
at least in these scripts from just

2653
01:48:34,239 --> 01:48:34,719
saying

2654
01:48:34,719 --> 01:48:37,440
print what you want like you can

2655
01:48:37,440 --> 01:48:38,400
literally just write

2656
01:48:38,400 --> 01:48:40,000
print and then give it a string and it

2657
01:48:40,000 --> 01:48:42,000
will print it out

2658
01:48:42,000 --> 01:48:44,719
so i suppose at least at this point in

2659
01:48:44,719 --> 01:48:46,000
time you could create your

2660
01:48:46,000 --> 01:48:50,239
own output and maybe tag it or something

2661
01:48:50,239 --> 01:48:52,080
so that you know how to parse it out

2662
01:48:52,080 --> 01:48:54,639
and there's nothing preventing you from

2663
01:48:54,639 --> 01:48:57,119
doing that

2664
01:48:58,239 --> 01:49:01,040
but i'm not sure how you would if you're

2665
01:49:01,040 --> 01:49:02,320
trying to do it within

2666
01:49:02,320 --> 01:49:05,360
a mask you know the amass typical

2667
01:49:05,360 --> 01:49:07,199
like output that it provides i don't

2668
01:49:07,199 --> 01:49:10,000
know if there's a easy way to say

2669
01:49:10,000 --> 01:49:13,599
uh here's a name and you know it

2670
01:49:13,599 --> 01:49:16,639
it looks like it could be of interest

2671
01:49:16,639 --> 01:49:17,920
because it's a c name

2672
01:49:17,920 --> 01:49:20,960
and points to something that

2673
01:49:20,960 --> 01:49:22,719
you know isn't isn't registered anymore

2674
01:49:22,719 --> 01:49:24,480
or something like that

2675
01:49:24,480 --> 01:49:29,199
if that's where you're going with us but

2676
01:49:29,199 --> 01:49:31,920
anyway the sky's the limit kind of and

2677
01:49:31,920 --> 01:49:33,679
you can obviously by using this uh

2678
01:49:33,679 --> 01:49:35,040
records

2679
01:49:35,040 --> 01:49:39,199
um argument or parameter here

2680
01:49:39,199 --> 01:49:43,839
you can do quite a bit actually

2681
01:49:44,320 --> 01:49:47,599
to try to understand well this name what

2682
01:49:47,599 --> 01:49:50,560
what was it or how how did how did it

2683
01:49:50,560 --> 01:49:51,920
get discovered

2684
01:49:51,920 --> 01:49:53,920
you know is it a c name is it and the

2685
01:49:53,920 --> 01:49:55,520
other thing too is right now there's a

2686
01:49:55,520 --> 01:49:56,000
there's a

2687
01:49:56,000 --> 01:49:59,119
somewhat limited list of record types

2688
01:49:59,119 --> 01:49:59,520
that

2689
01:49:59,520 --> 01:50:03,119
a mass looks for but i think you'll find

2690
01:50:03,119 --> 01:50:05,520
that there's a

2691
01:50:05,520 --> 01:50:09,360
um feature request to extend to that

2692
01:50:09,360 --> 01:50:13,119
which i'm very you know

2693
01:50:13,119 --> 01:50:16,159
in favor of because i'd love to see

2694
01:50:16,159 --> 01:50:20,080
other dns record types

2695
01:50:20,080 --> 01:50:22,239
be something you could ask it to

2696
01:50:22,239 --> 01:50:23,520
investigate for you as part of your

2697
01:50:23,520 --> 01:50:25,599
enumeration

2698
01:50:25,599 --> 01:50:28,639
and when that does get implemented those

2699
01:50:28,639 --> 01:50:30,960
uh other types of records would show up

2700
01:50:30,960 --> 01:50:32,159
in in this

2701
01:50:32,159 --> 01:50:34,880
parameter so you could you could ask

2702
01:50:34,880 --> 01:50:36,639
amass to look for those things and then

2703
01:50:36,639 --> 01:50:37,119
your

2704
01:50:37,119 --> 01:50:38,880
your script could say well i'm

2705
01:50:38,880 --> 01:50:42,320
interested in knowing when they're found

2706
01:50:44,159 --> 01:50:47,440
he said was specifically about the brute

2707
01:50:47,440 --> 01:50:48,560
force just to

2708
01:50:48,560 --> 01:50:53,840
include it in the results

2709
01:51:00,320 --> 01:51:02,719
yeah i mean i'm not sure what you not

2710
01:51:02,719 --> 01:51:04,840
sure what you mean

2711
01:51:04,840 --> 01:51:07,280
but the reason that we

2712
01:51:07,280 --> 01:51:12,000
do not um acknowledge the cnames is that

2713
01:51:12,000 --> 01:51:15,840
so the chances that you adding labels to

2714
01:51:15,840 --> 01:51:17,760
a c name

2715
01:51:17,760 --> 01:51:21,280
in it finding additional like legitimate

2716
01:51:21,280 --> 01:51:21,920
names

2717
01:51:21,920 --> 01:51:25,119
is kind of uh low maybe not impossible

2718
01:51:25,119 --> 01:51:27,280
but

2719
01:51:28,560 --> 01:51:31,920
but that's why we take those out is that

2720
01:51:31,920 --> 01:51:34,480
it's trying to make make sure that this

2721
01:51:34,480 --> 01:51:35,360
is a

2722
01:51:35,360 --> 01:51:37,679
an actual sub domain name like a proper

2723
01:51:37,679 --> 01:51:39,119
subdomain name

2724
01:51:39,119 --> 01:51:42,320
that will have you know

2725
01:51:42,320 --> 01:51:45,520
potentially many labels off of it

2726
01:51:45,520 --> 01:51:48,800
to be discovered

2727
01:51:48,800 --> 01:51:50,239
and in the past when we didn't check for

2728
01:51:50,239 --> 01:51:53,519
things like that it was a bit of a

2729
01:51:53,599 --> 01:51:57,520
like we didn't like the results

2730
01:51:58,800 --> 01:52:00,639
but one it brings up an interesting

2731
01:52:00,639 --> 01:52:02,000
point um there's

2732
01:52:02,000 --> 01:52:05,119
nothing stopping anyone that uses this

2733
01:52:05,119 --> 01:52:07,040
from writing say their own brute forcing

2734
01:52:07,040 --> 01:52:07,840
script

2735
01:52:07,840 --> 01:52:09,840
that's part of part of why i love having

2736
01:52:09,840 --> 01:52:12,800
this engine is so this is our default

2737
01:52:12,800 --> 01:52:15,599
brute forcing script but you could write

2738
01:52:15,599 --> 01:52:17,360
your own

2739
01:52:17,360 --> 01:52:18,719
and just give it a different name and

2740
01:52:18,719 --> 01:52:21,840
you could you could not use this one

2741
01:52:21,840 --> 01:52:26,000
or or use it and also use yours

2742
01:52:26,000 --> 01:52:28,840
that maybe does something just a little

2743
01:52:28,840 --> 01:52:30,960
differently

2744
01:52:30,960 --> 01:52:32,480
uh same thing with the name alterations

2745
01:52:32,480 --> 01:52:34,000
like you could have an idea for your own

2746
01:52:34,000 --> 01:52:34,560
nemo

2747
01:52:34,560 --> 01:52:35,840
you know your own way of permuting the

2748
01:52:35,840 --> 01:52:38,639
names and you could

2749
01:52:38,639 --> 01:52:42,000
add it in and that way maybe you could

2750
01:52:42,000 --> 01:52:43,199
uh feel like you're getting

2751
01:52:43,199 --> 01:52:46,560
more complete you know coverage

2752
01:52:46,560 --> 01:52:48,080
of all the things you want to attempt

2753
01:52:48,080 --> 01:52:49,840
against the targets

2754
01:52:49,840 --> 01:52:51,679
that's why we we created this engine is

2755
01:52:51,679 --> 01:52:53,760
so that now the sky's the limit you

2756
01:52:53,760 --> 01:52:56,080
could you could do anything

2757
01:52:56,080 --> 01:52:58,800
in these scripts including uh running

2758
01:52:58,800 --> 01:53:00,159
other tools

2759
01:53:00,159 --> 01:53:03,599
that also do this kind of activity like

2760
01:53:03,599 --> 01:53:05,760
uh subdomain enumeration and then just

2761
01:53:05,760 --> 01:53:07,840
take the results from those tools and

2762
01:53:07,840 --> 01:53:10,400
feed them into this process so that you

2763
01:53:10,400 --> 01:53:12,159
can take full advantage of the cyclic

2764
01:53:12,159 --> 01:53:13,360
process and the fact that all the

2765
01:53:13,360 --> 01:53:17,360
results are getting saved in one place

2766
01:53:19,520 --> 01:53:22,880
all right so i'm out of time but i did

2767
01:53:22,880 --> 01:53:24,000
get a chance to

2768
01:53:24,000 --> 01:53:25,679
hit a lot of the topics i wanted to hit

2769
01:53:25,679 --> 01:53:28,560
here uh the only thing i wanted to add

2770
01:53:28,560 --> 01:53:29,360
is

2771
01:53:29,360 --> 01:53:32,320
uh please thank quantirian for making it

2772
01:53:32,320 --> 01:53:35,280
possible for me to attend this they

2773
01:53:35,280 --> 01:53:40,080
supported me being here

2774
01:53:40,080 --> 01:53:42,159
and they are definitely in support of

2775
01:53:42,159 --> 01:53:43,199
how important

2776
01:53:43,199 --> 01:53:46,000
asset discovery is to your security uh

2777
01:53:46,000 --> 01:53:47,199
program

2778
01:53:47,199 --> 01:53:49,280
also like i kind of mentioned earlier if

2779
01:53:49,280 --> 01:53:50,480
you want to participate

2780
01:53:50,480 --> 01:53:53,360
uh in this project please come to our

2781
01:53:53,360 --> 01:53:54,960
discord server we'll be happy to talk

2782
01:53:54,960 --> 01:53:55,760
about

2783
01:53:55,760 --> 01:53:57,360
just about anything with you that

2784
01:53:57,360 --> 01:53:59,040
relates to a mass

2785
01:53:59,040 --> 01:54:02,480
and that goes that goes for becoming

2786
01:54:02,480 --> 01:54:05,199
contributors

2787
01:54:05,760 --> 01:54:08,880
and also um

2788
01:54:08,880 --> 01:54:11,360
if you have any questions that you about

2789
01:54:11,360 --> 01:54:12,960
things you think are wrong

2790
01:54:12,960 --> 01:54:16,080
say with the project or the the tool

2791
01:54:16,080 --> 01:54:18,560
i would recommend come to the repo sorry

2792
01:54:18,560 --> 01:54:20,639
come to the discord server first

2793
01:54:20,639 --> 01:54:22,560
let's talk about it and then if we can

2794
01:54:22,560 --> 01:54:24,239
conclude it definitely is a bug or

2795
01:54:24,239 --> 01:54:25,280
something like that

2796
01:54:25,280 --> 01:54:28,239
we'll put in the appropriate uh issue

2797
01:54:28,239 --> 01:54:28,960
issue uh

2798
01:54:28,960 --> 01:54:31,599
or like feature request or whatever is

2799
01:54:31,599 --> 01:54:32,239
relevant

2800
01:54:32,239 --> 01:54:35,360
to the discussion all right thank you

2801
01:54:35,360 --> 01:54:36,320
very much

2802
01:54:36,320 --> 01:54:39,920
i hope this was valuable to everyone

2803
01:54:44,560 --> 01:54:51,040
let's see is there

2804
01:54:51,040 --> 01:54:54,639
someone that's going to conclude or

2805
01:54:55,199 --> 01:54:58,960
jump in yeah definitely i can jump in so

2806
01:54:58,960 --> 01:55:01,599
uh thank you jeff for doing this we

2807
01:55:01,599 --> 01:55:03,280
really do appreciate that

2808
01:55:03,280 --> 01:55:04,960
uh there are some additional questions

2809
01:55:04,960 --> 01:55:06,639
you know feel free to drop them into the

2810
01:55:06,639 --> 01:55:08,080
track one red team

2811
01:55:08,080 --> 01:55:10,000
currently on twitch and all of the

2812
01:55:10,000 --> 01:55:11,840
streaming platforms we have our closing

2813
01:55:11,840 --> 01:55:13,280
ceremonies so if you want to tune in to

2814
01:55:13,280 --> 01:55:13,840
that

2815
01:55:13,840 --> 01:55:16,960
please feel free and do so but for now

2816
01:55:16,960 --> 01:55:17,920
we're going to go ahead and end the

2817
01:55:17,920 --> 01:55:18,719
broadcast and

2818
01:55:18,719 --> 01:55:21,040
end this particular webinar and thank

2819
01:55:21,040 --> 01:55:27,599
you all for joining

