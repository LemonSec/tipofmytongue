1
00:00:00,000 --> 00:00:15,389
<font color="#E5E5E5">mashaallah 90mm</font><font color="#CCCCCC"> Paula's security Publius</font>

2
00:00:03,899 --> 00:00:17,699
<font color="#E5E5E5">removal hello everyone um first of all</font>

3
00:00:15,389 --> 00:00:20,460
really sorry for not speaking in Russian

4
00:00:17,699 --> 00:00:22,590
<font color="#E5E5E5">but my Russian is really rusty I come</font>

5
00:00:20,460 --> 00:00:24,869
from Bulgaria and I understand most of

6
00:00:22,590 --> 00:00:30,300
the stuff you guys are saying but<font color="#E5E5E5"> I</font>

7
00:00:24,869 --> 00:00:32,460
can't really<font color="#E5E5E5"> talk</font><font color="#CCCCCC"> in Russian so I do</font>

8
00:00:30,300 --> 00:00:37,020
security research for a company called

9
00:00:32,460 --> 00:00:40,500
<font color="#CCCCCC">mwr in the UK and</font><font color="#E5E5E5"> the talk today will be</font>

10
00:00:37,020 --> 00:00:42,420
about pen testing mpls networks and pls

11
00:00:40,500 --> 00:00:45,450
is basically a service provider

12
00:00:42,420 --> 00:00:48,390
technology that<font color="#E5E5E5"> i'll</font><font color="#CCCCCC"> be talking about in</font>

13
00:00:45,450 --> 00:00:51,059
details in just a moment so the agenda

14
00:00:48,390 --> 00:00:54,809
<font color="#CCCCCC">for today is a quick overview</font><font color="#E5E5E5"> of what</font>

15
00:00:51,059 --> 00:00:58,230
mpls is some quick respectin of some

16
00:00:54,809 --> 00:01:00,059
previous mpls research and then moving

17
00:00:58,230 --> 00:01:02,819
on<font color="#CCCCCC"> to the interesting bits of the disk</font>

18
00:01:00,059 --> 00:01:06,710
talk which is reconnaissance for mpls

19
00:01:02,820 --> 00:01:09,090
networks<font color="#CCCCCC"> I'm introducing</font><font color="#E5E5E5"> a vrf hopping</font>

20
00:01:06,710 --> 00:01:12,149
which is an interesting attack for

21
00:01:09,090 --> 00:01:16,799
breaking out<font color="#CCCCCC"> of mpls VPN</font><font color="#E5E5E5"> and then I'll</font>

22
00:01:12,150 --> 00:01:18,810
give some advice on securing and

23
00:01:16,799 --> 00:01:20,970
hardening<font color="#CCCCCC"> mpls network exam pls</font>

24
00:01:18,810 --> 00:01:23,869
environments and of course a few ideas

25
00:01:20,970 --> 00:01:27,570
on improving this research and<font color="#E5E5E5"> probably</font>

26
00:01:23,869 --> 00:01:32,220
ideas on building up on the research for

27
00:01:27,570 --> 00:01:36,559
the purpose of extending<font color="#CCCCCC"> it so what</font><font color="#E5E5E5"> is</font>

28
00:01:32,220 --> 00:01:39,360
mpls mpls is the most widely used

29
00:01:36,560 --> 00:01:43,320
mechanism if you want technology<font color="#CCCCCC"> in</font>

30
00:01:39,360 --> 00:01:47,880
service provider networks its lair 2.5

31
00:01:43,320 --> 00:01:49,320
protocol used in telecommunication

32
00:01:47,880 --> 00:01:52,079
networks high-performance

33
00:01:49,320 --> 00:01:55,048
telecommunications networks where the

34
00:01:52,079 --> 00:01:59,548
reliability of the communication<font color="#E5E5E5"> is kind</font>

35
00:01:55,049 --> 00:02:01,590
of critical<font color="#E5E5E5"> and basically this protocol</font>

36
00:01:59,549 --> 00:02:04,350
is designed for the purpose of

37
00:02:01,590 --> 00:02:07,259
processing information as fast as

38
00:02:04,350 --> 00:02:11,700
<font color="#CCCCCC">possible from point A to point B and the</font>

39
00:02:07,259 --> 00:02:13,230
way it works is by looking up labels as

40
00:02:11,700 --> 00:02:16,109
opposed to looking up

41
00:02:13,230 --> 00:02:18,090
<font color="#CCCCCC">Nation IP addresses</font><font color="#E5E5E5"> and that's were the</font>

42
00:02:16,110 --> 00:02:21,209
efficiency comes from because<font color="#CCCCCC"> the</font>

43
00:02:18,090 --> 00:02:23,519
structure of an MPLS label is a lot less

44
00:02:21,209 --> 00:02:25,980
complicated compared to a destination IP

45
00:02:23,519 --> 00:02:29,730
address and the process of looking up a

46
00:02:25,980 --> 00:02:32,548
label in a label information base is a

47
00:02:29,730 --> 00:02:34,440
lot less complicated compared to looking

48
00:02:32,549 --> 00:02:39,230
up a destination address in a routing

49
00:02:34,440 --> 00:02:39,230
table so that's the main difference

50
00:02:39,260 --> 00:02:44,459
there<font color="#E5E5E5"> is only a single longest prefix</font>

51
00:02:42,060 --> 00:02:47,099
match when the<font color="#CCCCCC"> traffic is handled at the</font>

52
00:02:44,459 --> 00:02:50,450
<font color="#E5E5E5">edge of the MPLS</font><font color="#CCCCCC"> network and from their</font>

53
00:02:47,099 --> 00:02:54,780
own and the only transition is based on

54
00:02:50,450 --> 00:02:58,290
looking<font color="#E5E5E5"> up label values so a lot of</font>

55
00:02:54,780 --> 00:03:01,680
<font color="#CCCCCC">providers and they build VPN services on</font>

56
00:02:58,290 --> 00:03:05,129
top of mpls and these<font color="#CCCCCC"> are layer three</font>

57
00:03:01,680 --> 00:03:08,989
services or layer two services in this

58
00:03:05,129 --> 00:03:16,200
talk I'll be am reviewing at layer<font color="#E5E5E5"> three</font>

59
00:03:08,989 --> 00:03:18,450
architectures so there<font color="#E5E5E5"> is a few things I</font>

60
00:03:16,200 --> 00:03:21,810
need<font color="#E5E5E5"> to mention before proceeding</font><font color="#CCCCCC"> with</font>

61
00:03:18,450 --> 00:03:23,488
the actual content and these are terms

62
00:03:21,810 --> 00:03:26,069
that I'll be using throughout the talk

63
00:03:23,489 --> 00:03:33,440
and you don't have<font color="#E5E5E5"> to remember all of</font>

64
00:03:26,069 --> 00:03:36,480
these but excuse me but and you have to

65
00:03:33,440 --> 00:03:38,280
understand some basics about how mpls

66
00:03:36,480 --> 00:03:42,810
functions and what are the devices

67
00:03:38,280 --> 00:03:46,109
involved in an MPLS process so<font color="#E5E5E5"> I already</font>

68
00:03:42,810 --> 00:03:47,880
mentioned mpls works with labels<font color="#E5E5E5"> there's</font>

69
00:03:46,109 --> 00:03:50,340
<font color="#E5E5E5">three operations defined for these</font>

70
00:03:47,880 --> 00:03:52,859
labels pushing labels on a stack popping

71
00:03:50,340 --> 00:03:56,250
labels of<font color="#E5E5E5"> a stack and swapping labels on</font>

72
00:03:52,859 --> 00:04:00,980
the stack and these labels are at sweat

73
00:03:56,250 --> 00:04:03,450
our<font color="#E5E5E5"> 20 bit values and the first</font><font color="#CCCCCC"> 12 16</font>

74
00:04:00,980 --> 00:04:05,429
labels are reserved for special purposes

75
00:04:03,450 --> 00:04:10,410
I'll be probably mentioning some of

76
00:04:05,430 --> 00:04:13,260
these in a bit devices<font color="#CCCCCC"> reham devices</font>

77
00:04:10,410 --> 00:04:17,909
that process mpls traffic are called

78
00:04:13,260 --> 00:04:20,789
label switching routers or LSO's the

79
00:04:17,910 --> 00:04:23,270
provider router is a router that stands

80
00:04:20,789 --> 00:04:26,570
somewhere within the core of<font color="#E5E5E5"> the</font><font color="#CCCCCC"> network</font>

81
00:04:23,270 --> 00:04:29,659
processing pure mpls traffic lay

82
00:04:26,570 --> 00:04:31,969
edge router is an MPLS enabled service

83
00:04:29,660 --> 00:04:34,310
provider device that processes mpls

84
00:04:31,970 --> 00:04:37,520
traffic but also handles the ingress

85
00:04:34,310 --> 00:04:40,370
customer traffic translating IP traffic

86
00:04:37,520 --> 00:04:43,669
into mpls traffic this one is also

87
00:04:40,370 --> 00:04:45,860
called provider edge device and there is

88
00:04:43,670 --> 00:04:49,250
the label switch path which is the

89
00:04:45,860 --> 00:04:51,800
logical circuit<font color="#E5E5E5"> from circuit from one</font>

90
00:04:49,250 --> 00:04:53,900
end of the MPLS<font color="#CCCCCC"> network to the other end</font>

91
00:04:51,800 --> 00:04:59,450
<font color="#E5E5E5">of the MPLS</font><font color="#CCCCCC"> Network and it kind of</font>

92
00:04:53,900 --> 00:05:02,090
defines a virtual tunnel where the

93
00:04:59,450 --> 00:05:04,789
customer traffic would flow<font color="#E5E5E5"> customer</font>

94
00:05:02,090 --> 00:05:06,830
edge device is<font color="#CCCCCC"> the customer device</font>

95
00:05:04,790 --> 00:05:08,630
connecting to the service provider

96
00:05:06,830 --> 00:05:11,200
infrastructure so it's basically the

97
00:05:08,630 --> 00:05:13,250
last device from<font color="#CCCCCC"> the customer site</font>

98
00:05:11,200 --> 00:05:17,840
connecting<font color="#CCCCCC"> to the provider Reggie</font>

99
00:05:13,250 --> 00:05:20,330
provide a reg<font color="#CCCCCC"> rolla now I need to</font>

100
00:05:17,840 --> 00:05:24,169
introduce<font color="#E5E5E5"> another term called virtual</font>

101
00:05:20,330 --> 00:05:26,180
routing and forwarding virtual routing

102
00:05:24,170 --> 00:05:28,730
and forwarding allows multiple instances

103
00:05:26,180 --> 00:05:31,520
of<font color="#E5E5E5"> a routing table to exist and operate</font>

104
00:05:28,730 --> 00:05:33,920
at the same time on<font color="#E5E5E5"> the same device so</font>

105
00:05:31,520 --> 00:05:36,620
if you know about<font color="#CCCCCC"> VLANs you can</font><font color="#E5E5E5"> think</font>

106
00:05:33,920 --> 00:05:40,330
about a vrf as the<font color="#CCCCCC"> equivalent of a VLAN</font>

107
00:05:36,620 --> 00:05:43,040
on layer<font color="#CCCCCC"> three you</font><font color="#E5E5E5"> can you can have</font>

108
00:05:40,330 --> 00:05:45,169
separate routers basically separate

109
00:05:43,040 --> 00:05:48,710
virtual instances of a rather running on

110
00:05:45,170 --> 00:05:50,750
top of the same physical router one

111
00:05:48,710 --> 00:05:53,450
thing<font color="#E5E5E5"> to mention and to remember</font><font color="#CCCCCC"> is that</font>

112
00:05:50,750 --> 00:05:58,460
<font color="#E5E5E5">VRS are only locally significant to the</font>

113
00:05:53,450 --> 00:06:00,950
device where these<font color="#CCCCCC"> are configured so</font>

114
00:05:58,460 --> 00:06:04,159
this<font color="#CCCCCC"> is a really basic example of what</font>

115
00:06:00,950 --> 00:06:06,289
an MPLS<font color="#CCCCCC"> network would look like you see</font>

116
00:06:04,160 --> 00:06:09,410
the customer edge device as i mentioned

117
00:06:06,290 --> 00:06:13,010
<font color="#E5E5E5">that stir the device connecting the</font>

118
00:06:09,410 --> 00:06:14,900
customer to the provider this customer

119
00:06:13,010 --> 00:06:18,140
edged device connecting to the provider

120
00:06:14,900 --> 00:06:21,280
edge device from the from the<font color="#E5E5E5"> service</font>

121
00:06:18,140 --> 00:06:25,240
provider side within the MPLS<font color="#CCCCCC"> network</font>

122
00:06:21,280 --> 00:06:28,609
you have<font color="#E5E5E5"> mpls routers processing pure</font>

123
00:06:25,240 --> 00:06:31,760
mpls traffic these are called core mpls

124
00:06:28,610 --> 00:06:34,130
devices or just provider edge devices on

125
00:06:31,760 --> 00:06:37,990
the other side of<font color="#E5E5E5"> the scheme you</font><font color="#CCCCCC"> have to</font>

126
00:06:34,130 --> 00:06:37,990
be exactly same equivalent

127
00:06:38,569 --> 00:06:45,710
a few<font color="#E5E5E5"> more words on mpls um what does an</font>

128
00:06:43,610 --> 00:06:51,379
<font color="#E5E5E5">mpls hair that look like and where these</font>

129
00:06:45,710 --> 00:06:54,049
headers sits so mpls as I said um it

130
00:06:51,379 --> 00:06:56,629
works with processing labels these

131
00:06:54,050 --> 00:06:58,929
labels are stored these information

132
00:06:56,629 --> 00:07:01,599
about the labels is stored in a

133
00:06:58,929 --> 00:07:05,270
equivalent of a routing table called

134
00:07:01,599 --> 00:07:07,339
label information base and of<font color="#CCCCCC"> course a</font>

135
00:07:05,270 --> 00:07:12,378
look up in the<font color="#CCCCCC"> label information based</font>

136
00:07:07,339 --> 00:07:14,509
would give you a destination for the LSP

137
00:07:12,379 --> 00:07:17,869
according to<font color="#E5E5E5"> the label and</font><font color="#CCCCCC"> the</font>

138
00:07:14,509 --> 00:07:21,050
destination<font color="#CCCCCC"> your processing for mpls</font>

139
00:07:17,869 --> 00:07:23,180
encapsulation<font color="#E5E5E5"> and how does this work so</font>

140
00:07:21,050 --> 00:07:25,129
basically at the<font color="#E5E5E5"> at the edge of the</font>

141
00:07:23,180 --> 00:07:28,219
network you see the provider edge device

142
00:07:25,129 --> 00:07:31,369
it receives IP traffic<font color="#CCCCCC"> these IP traffic</font>

143
00:07:28,219 --> 00:07:33,919
needs to be encapsulated in mpls before

144
00:07:31,369 --> 00:07:36,949
it is processed further within the MPLS

145
00:07:33,919 --> 00:07:39,469
<font color="#CCCCCC">network so at the edge of this network</font>

146
00:07:36,949 --> 00:07:42,409
the provided edge device will take the

147
00:07:39,469 --> 00:07:44,419
IP traffic stick and mpls header in

148
00:07:42,409 --> 00:07:47,300
between the<font color="#E5E5E5"> internet header and the IP</font>

149
00:07:44,419 --> 00:07:50,649
header and that's why the MPLS a

150
00:07:47,300 --> 00:07:53,360
protocol is called a layer 2.5 protocol

151
00:07:50,649 --> 00:07:55,430
the interesting thing is<font color="#E5E5E5"> I already</font>

152
00:07:53,360 --> 00:07:57,229
<font color="#CCCCCC">mentioned you have three operations for</font>

153
00:07:55,430 --> 00:07:59,959
the labels<font color="#E5E5E5"> pushing popping and swapping</font>

154
00:07:57,229 --> 00:08:04,339
and that's<font color="#CCCCCC"> because you can have multiple</font>

155
00:07:59,959 --> 00:08:06,709
mpls<font color="#E5E5E5"> Heather as MPLS headers stick on</font>

156
00:08:04,339 --> 00:08:09,439
top of<font color="#E5E5E5"> each other so you can imagine you</font>

157
00:08:06,709 --> 00:08:10,939
<font color="#E5E5E5">can have three or four mpls headers</font>

158
00:08:09,439 --> 00:08:13,029
depending on the complexity of the

159
00:08:10,939 --> 00:08:17,019
network and and the traffic engineering

160
00:08:13,029 --> 00:08:19,999
strategies for<font color="#CCCCCC"> the service provider</font>

161
00:08:17,019 --> 00:08:23,419
that's what an MPLS header look like and

162
00:08:19,999 --> 00:08:26,509
I already<font color="#E5E5E5"> mentioned the label field is a</font>

163
00:08:23,419 --> 00:08:28,849
20-bit field it's an integer value the

164
00:08:26,509 --> 00:08:30,589
experimental field as far as<font color="#CCCCCC"> I know as</font>

165
00:08:28,849 --> 00:08:34,098
far as I can remember<font color="#E5E5E5"> is not being used</font>

166
00:08:30,589 --> 00:08:36,649
at the moment um I don't<font color="#CCCCCC"> think I'll</font>

167
00:08:34,099 --> 00:08:39,409
perform the demos anyway now I'm not

168
00:08:36,649 --> 00:08:42,799
doing it because it will take way too

169
00:08:39,409 --> 00:08:46,279
long for my software to boot that's fine

170
00:08:42,799 --> 00:08:48,889
um the experimental field not being used

171
00:08:46,279 --> 00:08:51,660
as<font color="#E5E5E5"> I said at the bottom of</font><font color="#CCCCCC"> this label</font>

172
00:08:48,889 --> 00:08:56,160
stack means whether

173
00:08:51,660 --> 00:08:57,990
is the bottom mpls<font color="#CCCCCC"> header in the series</font>

174
00:08:56,160 --> 00:09:02,310
of mpls together is if there is more

175
00:08:57,990 --> 00:09:04,319
<font color="#E5E5E5">than</font><font color="#CCCCCC"> one of those and the TTL is exactly</font>

176
00:09:02,310 --> 00:09:07,170
the equivalent of the TTL in an IP

177
00:09:04,319 --> 00:09:11,610
header it is used for preventing loops

178
00:09:07,170 --> 00:09:14,339
within the network so a little bit<font color="#E5E5E5"> of</font>

179
00:09:11,610 --> 00:09:17,790
retrospection a little bit about some

180
00:09:14,339 --> 00:09:20,279
mpls research performed in the past in

181
00:09:17,790 --> 00:09:22,019
the past the most notable research that

182
00:09:20,279 --> 00:09:26,399
<font color="#CCCCCC">I would</font><font color="#E5E5E5"> like to</font><font color="#CCCCCC"> mention is the one from</font>

183
00:09:22,019 --> 00:09:29,610
<font color="#E5E5E5">an array from aaron w from 2006 another</font>

184
00:09:26,399 --> 00:09:31,769
really good piece of<font color="#E5E5E5"> research is mpls</font>

185
00:09:29,610 --> 00:09:35,540
security overview from<font color="#CCCCCC"> torsten fisher</font>

186
00:09:31,769 --> 00:09:38,339
from<font color="#E5E5E5"> irm one year later and just</font>

187
00:09:35,540 --> 00:09:41,250
<font color="#CCCCCC">recently there is</font><font color="#E5E5E5"> a nice interesting</font>

188
00:09:38,339 --> 00:09:44,819
blog from<font color="#CCCCCC"> portcullis labs about the</font>

189
00:09:41,250 --> 00:09:47,759
basics of pen testing mpls networks so

190
00:09:44,819 --> 00:09:51,949
what is<font color="#E5E5E5"> coming for most of the species</font>

191
00:09:47,759 --> 00:09:54,629
of research is<font color="#CCCCCC"> that they assume</font><font color="#E5E5E5"> that</font>

192
00:09:51,949 --> 00:09:56,459
there must be a Miss configuration in

193
00:09:54,629 --> 00:09:59,579
the service provider network to perform

194
00:09:56,459 --> 00:10:01,500
most of the critical attacks so they

195
00:09:59,579 --> 00:10:03,989
assume that either there is<font color="#E5E5E5"> a Miss</font>

196
00:10:01,500 --> 00:10:06,209
configuration or that an attacker is

197
00:10:03,990 --> 00:10:09,810
able to already get access to the core

198
00:10:06,209 --> 00:10:12,180
of<font color="#E5E5E5"> the network so if you're</font><font color="#CCCCCC"> an attacker</font>

199
00:10:09,810 --> 00:10:14,008
and<font color="#E5E5E5"> you have access to the MPLS core</font>

200
00:10:12,180 --> 00:10:16,290
it's pretty much game over because from

201
00:10:14,009 --> 00:10:21,930
the MPLS core you can<font color="#CCCCCC"> manipulate labels</font>

202
00:10:16,290 --> 00:10:23,579
you can jump via VPNs and you can kind

203
00:10:21,930 --> 00:10:27,899
of mess with<font color="#E5E5E5"> traffic engineering</font>

204
00:10:23,579 --> 00:10:29,729
strategies in the<font color="#E5E5E5"> network so that's</font>

205
00:10:27,899 --> 00:10:34,170
that's the most common thing for these

206
00:10:29,730 --> 00:10:36,600
pieces of<font color="#E5E5E5"> research so far I'm going to</font>

207
00:10:34,170 --> 00:10:39,300
<font color="#E5E5E5">start with mpls reconnaissance imaging</font>

208
00:10:36,600 --> 00:10:44,490
that<font color="#E5E5E5"> you're a client or performing a pen</font>

209
00:10:39,300 --> 00:10:46,529
test for an MPLS provider the most basic

210
00:10:44,490 --> 00:10:50,699
<font color="#E5E5E5">thing that you can do right</font><font color="#CCCCCC"> at the</font>

211
00:10:46,529 --> 00:10:52,379
beginning is reconnaissance based on the

212
00:10:50,699 --> 00:10:54,870
physical connectivity to the service

213
00:10:52,379 --> 00:10:57,389
provider device that is you have layer 2

214
00:10:54,870 --> 00:10:59,790
connectivity and and based on this layer

215
00:10:57,389 --> 00:11:01,439
to connectivity can get information such

216
00:10:59,790 --> 00:11:05,569
as the mac address of the remotes a

217
00:11:01,439 --> 00:11:09,209
remote system based on that you<font color="#E5E5E5"> can</font>

218
00:11:05,569 --> 00:11:11,819
kind of get<font color="#CCCCCC"> an idea about</font><font color="#E5E5E5"> the vendor of</font>

219
00:11:09,209 --> 00:11:16,529
<font color="#E5E5E5">the system sitting between you and the</font>

220
00:11:11,819 --> 00:11:18,750
MPLS Network which may<font color="#E5E5E5"> be useful packet</font>

221
00:11:16,529 --> 00:11:21,480
capturing may be useful because a lot of

222
00:11:18,750 --> 00:11:24,839
<font color="#CCCCCC">providers forget to kind</font><font color="#E5E5E5"> of filter</font>

223
00:11:21,480 --> 00:11:27,180
management protocol such as lldp CDP<font color="#CCCCCC"> mmm</font>

224
00:11:24,839 --> 00:11:29,220
NDP these are layer two protocols used

225
00:11:27,180 --> 00:11:31,170
for advertising a lot of useful

226
00:11:29,220 --> 00:11:36,480
information<font color="#E5E5E5"> to an attacker so for</font>

227
00:11:31,170 --> 00:11:39,300
example lldp used for used by howie HP

228
00:11:36,480 --> 00:11:42,360
juniper and other providers<font color="#E5E5E5"> CDP is</font>

229
00:11:39,300 --> 00:11:44,550
another one from cisco a proprietary 1m

230
00:11:42,360 --> 00:11:46,230
NDP is another one from my critique as

231
00:11:44,550 --> 00:11:50,459
far as<font color="#CCCCCC"> i can remember</font><font color="#E5E5E5"> and all of these</font>

232
00:11:46,230 --> 00:11:53,550
protocols they advertise a bunch of data

233
00:11:50,459 --> 00:11:55,500
related to<font color="#E5E5E5"> the system such as the</font>

234
00:11:53,550 --> 00:11:58,199
<font color="#E5E5E5">operating system version the firmware</font>

235
00:11:55,500 --> 00:12:00,959
version this firmware revision the

236
00:11:58,199 --> 00:12:02,790
number<font color="#E5E5E5"> of interfaces on this system</font><font color="#CCCCCC"> and</font>

237
00:12:00,959 --> 00:12:05,638
in certain cases some configuration

238
00:12:02,790 --> 00:12:07,649
specifics related to the system so by

239
00:12:05,639 --> 00:12:09,809
default most of these devices they would

240
00:12:07,649 --> 00:12:12,420
advertise this freely on every single

241
00:12:09,809 --> 00:12:14,399
interface and if the service provider

242
00:12:12,420 --> 00:12:15,930
forgets to kind<font color="#E5E5E5"> of filter this sort of</font>

243
00:12:14,399 --> 00:12:19,199
traffic you<font color="#CCCCCC"> can easily</font><font color="#E5E5E5"> get this</font>

244
00:12:15,930 --> 00:12:23,040
information for free in certain<font color="#CCCCCC"> cases</font>

245
00:12:19,199 --> 00:12:25,949
and a lot um a lot less often i would

246
00:12:23,040 --> 00:12:29,009
say you may get misconfigured service

247
00:12:25,949 --> 00:12:31,979
provider devices advertising and routing

248
00:12:29,009 --> 00:12:34,889
protocol information on to the customer

249
00:12:31,980 --> 00:12:37,970
interface and so basically<font color="#E5E5E5"> a service</font>

250
00:12:34,889 --> 00:12:41,490
provider trying<font color="#E5E5E5"> to establish an ospf</font>

251
00:12:37,970 --> 00:12:44,189
ospf session with a customer<font color="#E5E5E5"> without</font>

252
00:12:41,490 --> 00:12:45,959
<font color="#E5E5E5">even realizing it and so as</font><font color="#CCCCCC"> i said a lot</font>

253
00:12:44,189 --> 00:12:48,540
less often but you may still see that

254
00:12:45,959 --> 00:12:51,180
and the last one and<font color="#CCCCCC"> i guess the</font><font color="#E5E5E5"> most</font>

255
00:12:48,540 --> 00:12:53,250
obvious<font color="#E5E5E5"> one is to perform an upward scan</font>

256
00:12:51,180 --> 00:12:55,469
on the service provider device that you

257
00:12:53,250 --> 00:12:56,759
are directly connected to<font color="#E5E5E5"> and you can</font>

258
00:12:55,470 --> 00:13:01,800
<font color="#E5E5E5">get information about the running</font>

259
00:12:56,759 --> 00:13:05,209
services on that so according<font color="#CCCCCC"> to these</font>

260
00:13:01,800 --> 00:13:08,128
RFC called security<font color="#E5E5E5"> of</font><font color="#CCCCCC"> bgp mpls IP VPNs</font>

261
00:13:05,209 --> 00:13:09,930
it is recommended for the service

262
00:13:08,129 --> 00:13:13,259
provider as well for as well for the

263
00:13:09,930 --> 00:13:17,089
customers to kind of hide and obscure

264
00:13:13,259 --> 00:13:19,080
the structure of<font color="#E5E5E5"> the MPLS</font><font color="#CCCCCC"> network so</font>

265
00:13:17,089 --> 00:13:21,630
basically if I'm

266
00:13:19,080 --> 00:13:24,600
pls customer let me see if I have<font color="#CCCCCC"> my</font>

267
00:13:21,630 --> 00:13:26,760
diagram if<font color="#CCCCCC"> I'm an mpls customer on</font>

268
00:13:24,600 --> 00:13:29,130
client site a and<font color="#CCCCCC"> Clyde side be</font>

269
00:13:26,760 --> 00:13:30,960
basically having to remote offices and I

270
00:13:29,130 --> 00:13:33,840
want secure connectivity between two

271
00:13:30,960 --> 00:13:36,840
these two offices when I send traffic

272
00:13:33,840 --> 00:13:39,380
from office to office be I shouldn't<font color="#E5E5E5"> be</font>

273
00:13:36,840 --> 00:13:41,820
able<font color="#E5E5E5"> to reveal any details about the</font>

274
00:13:39,380 --> 00:13:44,850
interconnections in the service provider

275
00:13:41,820 --> 00:13:46,800
network basically I should have no idea

276
00:13:44,850 --> 00:13:48,960
about the number of<font color="#E5E5E5"> intermediate devices</font>

277
00:13:46,800 --> 00:13:51,420
the IP addresses of these devices and

278
00:13:48,960 --> 00:13:53,910
the<font color="#CCCCCC"> label information used for</font>

279
00:13:51,420 --> 00:13:56,760
forwarding<font color="#E5E5E5"> this traffic so basically</font>

280
00:13:53,910 --> 00:14:00,300
these RFC tells you that you should be

281
00:13:56,760 --> 00:14:02,520
able to hide your network and you should

282
00:14:00,300 --> 00:14:07,530
do<font color="#CCCCCC"> that as part of the security best</font>

283
00:14:02,520 --> 00:14:09,870
practices how is this thing<font color="#E5E5E5"> achieved in</font>

284
00:14:07,530 --> 00:14:11,910
mpls networks there are sooo mechanisms

285
00:14:09,870 --> 00:14:14,970
one of them called I PTT of propagation

286
00:14:11,910 --> 00:14:18,329
the other one called ICMP tunneling IP

287
00:14:14,970 --> 00:14:22,830
TTL propagation is the process of taking

288
00:14:18,330 --> 00:14:26,430
IP traffic IP packets copying the TTL

289
00:14:22,830 --> 00:14:28,560
into the decrementing the<font color="#CCCCCC"> ttls copied</font>

290
00:14:26,430 --> 00:14:31,199
from the IP header and sticking it into

291
00:14:28,560 --> 00:14:33,089
an MPLS header so basically at the edge

292
00:14:31,200 --> 00:14:36,420
of the network the provider edge device

293
00:14:33,090 --> 00:14:39,210
takes the packet process the IP header

294
00:14:36,420 --> 00:14:42,599
processes the IP header and and takes

295
00:14:39,210 --> 00:14:45,240
the TTL and this is enabled by default

296
00:14:42,600 --> 00:14:48,630
for most of the vendors if not for all

297
00:14:45,240 --> 00:14:52,830
of them and propagating the TTL means

298
00:14:48,630 --> 00:14:55,200
that an attacker may be able<font color="#CCCCCC"> to reveal</font>

299
00:14:52,830 --> 00:14:58,140
the number of intermediate devices by

300
00:14:55,200 --> 00:15:00,810
manipulating the<font color="#E5E5E5"> TTL value I will see</font>

301
00:14:58,140 --> 00:15:04,230
that in a bit ICMP tunneling is another

302
00:15:00,810 --> 00:15:09,119
one so imagine again let's get to the

303
00:15:04,230 --> 00:15:11,640
diagram I'm trace routing from customer

304
00:15:09,120 --> 00:15:14,430
site a to customers<font color="#E5E5E5"> so I'd be if there</font>

305
00:15:11,640 --> 00:15:18,630
is an ICMP error message generated along

306
00:15:14,430 --> 00:15:21,300
the<font color="#CCCCCC"> LSP along the path between my office</font>

307
00:15:18,630 --> 00:15:23,340
a and my office be this ICMP error

308
00:15:21,300 --> 00:15:26,699
message needs to be routed back to me

309
00:15:23,340 --> 00:15:29,100
but the core mpls devices would have no

310
00:15:26,700 --> 00:15:31,640
idea<font color="#CCCCCC"> about routing this ICMP error</font>

311
00:15:29,100 --> 00:15:32,700
message back<font color="#CCCCCC"> to my originating point</font>

312
00:15:31,640 --> 00:15:33,930
because

313
00:15:32,700 --> 00:15:36,240
of the lack of routing information

314
00:15:33,930 --> 00:15:39,349
remember that the core devices would

315
00:15:36,240 --> 00:15:44,280
only process data and traffic based on

316
00:15:39,350 --> 00:15:46,800
the labels so imagine there is a TTL

317
00:15:44,280 --> 00:15:50,100
time exceeded generated somewhere in the

318
00:15:46,800 --> 00:15:52,319
service provider network this ICMP error

319
00:15:50,100 --> 00:15:55,080
message needs to be forwarded all the

320
00:15:52,320 --> 00:15:58,200
way to the far end of the vrf to the far

321
00:15:55,080 --> 00:16:00,960
end of the MPLS<font color="#CCCCCC"> network to the provider</font>

322
00:15:58,200 --> 00:16:03,930
edge device before it gets routed back

323
00:16:00,960 --> 00:16:05,850
to the originating point so that's the

324
00:16:03,930 --> 00:16:07,859
purpose of ICMP<font color="#CCCCCC"> tunneling if there</font><font color="#E5E5E5"> is no</font>

325
00:16:05,850 --> 00:16:09,960
ICMP tunneling there is no way for an

326
00:16:07,860 --> 00:16:14,120
MPLS device to get the error message

327
00:16:09,960 --> 00:16:16,680
back to<font color="#CCCCCC"> the</font><font color="#E5E5E5"> client so this is</font><font color="#CCCCCC"> the sample</font>

328
00:16:14,120 --> 00:16:20,100
mpls topology<font color="#CCCCCC"> that I'll</font><font color="#E5E5E5"> be using for</font>

329
00:16:16,680 --> 00:16:21,870
most of the examples and unfortunately

330
00:16:20,100 --> 00:16:26,520
not for the demos because I won't be

331
00:16:21,870 --> 00:16:30,330
<font color="#E5E5E5">able to do them you have a customer with</font>

332
00:16:26,520 --> 00:16:34,710
two remote offices connected via an MPLS

333
00:16:30,330 --> 00:16:40,640
layer 3 VPN and there is<font color="#CCCCCC"> one core device</font>

334
00:16:34,710 --> 00:16:43,560
and to provide their edges so let's say

335
00:16:40,640 --> 00:16:45,720
ICMP tunneling is enabled<font color="#CCCCCC"> and IP TTL</font>

336
00:16:43,560 --> 00:16:49,979
propagation is enabled as well this

337
00:16:45,720 --> 00:16:52,170
means that I<font color="#CCCCCC"> am able to force a provider</font>

338
00:16:49,980 --> 00:16:54,420
edge device to use<font color="#E5E5E5"> a specific TTL and</font>

339
00:16:52,170 --> 00:16:56,969
this TTL would eventually expire

340
00:16:54,420 --> 00:17:00,479
somewhere within the MPLS<font color="#CCCCCC"> network when</font>

341
00:16:56,970 --> 00:17:03,330
<font color="#E5E5E5">these TTL expires there is an ICMP timex</font>

342
00:17:00,480 --> 00:17:06,000
TTL time exceeded message generated and

343
00:17:03,330 --> 00:17:08,250
this TTL and these ICMP message is

344
00:17:06,000 --> 00:17:10,760
routed back to me<font color="#CCCCCC"> because of</font><font color="#E5E5E5"> the ICMP</font>

345
00:17:08,250 --> 00:17:14,369
<font color="#E5E5E5">tunnelling being enabled so in this case</font>

346
00:17:10,760 --> 00:17:16,770
in an insecure configuration you can

347
00:17:14,369 --> 00:17:20,369
reveal the IP addresses for the<font color="#E5E5E5"> internal</font>

348
00:17:16,770 --> 00:17:26,400
network as well<font color="#CCCCCC"> as the MPLS labels used</font>

349
00:17:20,369 --> 00:17:28,500
within the MPLS<font color="#E5E5E5"> network in a nutshell to</font>

350
00:17:26,400 --> 00:17:30,990
have a secure configuration you need to

351
00:17:28,500 --> 00:17:34,200
disable TTL propagation and you need to

352
00:17:30,990 --> 00:17:36,300
disable ICMP tunneling you need to

353
00:17:34,200 --> 00:17:38,640
disable IP<font color="#E5E5E5"> detail propagation at the</font>

354
00:17:36,300 --> 00:17:41,070
edge of the network because that's where

355
00:17:38,640 --> 00:17:43,380
the<font color="#E5E5E5"> TTL propagation happens and you need</font>

356
00:17:41,070 --> 00:17:46,510
to disable ICMP tunneling all along the

357
00:17:43,380 --> 00:17:49,380
LSB so basically every single mpls

358
00:17:46,510 --> 00:17:52,810
if i<font color="#E5E5E5"> should have ICMP tunneling disabled</font>

359
00:17:49,380 --> 00:17:56,880
now let's<font color="#CCCCCC"> consider a secure scenario</font>

360
00:17:52,810 --> 00:17:59,860
where ICMP channeling is disabled and

361
00:17:56,880 --> 00:18:02,740
TTL propagation<font color="#E5E5E5"> I PTT of propagation is</font>

362
00:17:59,860 --> 00:18:06,040
disabled as well so the first and most

363
00:18:02,740 --> 00:18:08,200
basic question is how would I know<font color="#E5E5E5"> about</font>

364
00:18:06,040 --> 00:18:10,450
the number of<font color="#E5E5E5"> intermediate devices</font>

365
00:18:08,200 --> 00:18:13,600
between my customers<font color="#CCCCCC"> I a and customers</font>

366
00:18:10,450 --> 00:18:15,490
<font color="#CCCCCC">I'd be that's not really useful</font>

367
00:18:13,600 --> 00:18:19,120
information but it's a good<font color="#CCCCCC"> start for us</font>

368
00:18:15,490 --> 00:18:22,000
so a<font color="#E5E5E5"> basic enumeration technique may</font>

369
00:18:19,120 --> 00:18:25,570
reveal the number of these devices this

370
00:18:22,000 --> 00:18:29,770
consists of<font color="#E5E5E5"> pre encapsulating ICMP echo</font>

371
00:18:25,570 --> 00:18:33,490
request in mpls using sequentially

372
00:18:29,770 --> 00:18:35,379
incrementing TTL again this applies only

373
00:18:33,490 --> 00:18:37,570
to a few vendors that I've been<font color="#E5E5E5"> able to</font>

374
00:18:35,380 --> 00:18:39,040
test a certain amount of vendors was

375
00:18:37,570 --> 00:18:42,070
enough were unaffected by this

376
00:18:39,040 --> 00:18:45,159
particular technique<font color="#CCCCCC"> the prerequisite</font>

377
00:18:42,070 --> 00:18:47,860
for this attack<font color="#E5E5E5"> to work is for a p a</font>

378
00:18:45,160 --> 00:18:51,670
provider edge device to process mpls

379
00:18:47,860 --> 00:18:53,560
traffic received on an IP interface now

380
00:18:51,670 --> 00:18:55,360
this may be either because of a Miss

381
00:18:53,560 --> 00:19:00,970
configuration or because<font color="#CCCCCC"> of a faulty</font>

382
00:18:55,360 --> 00:19:04,540
implementation<font color="#CCCCCC"> hmm excuse me</font><font color="#E5E5E5"> so that's</font>

383
00:19:00,970 --> 00:19:07,930
<font color="#E5E5E5">the way we craft the packets and imagine</font>

384
00:19:04,540 --> 00:19:09,730
I'm executing this commands this is this

385
00:19:07,930 --> 00:19:12,370
is output from skippy imaging<font color="#CCCCCC"> I'm</font>

386
00:19:09,730 --> 00:19:16,900
executing this commands em from client

387
00:19:12,370 --> 00:19:19,270
site a device first of all loading the

388
00:19:16,900 --> 00:19:23,440
MPLS module which is not included<font color="#CCCCCC"> by</font>

389
00:19:19,270 --> 00:19:25,900
default then preparing the ethernet

390
00:19:23,440 --> 00:19:27,910
frame with the source MAC address of the

391
00:19:25,900 --> 00:19:29,830
client side a device and the destination

392
00:19:27,910 --> 00:19:32,740
MAC address of the provider edge device

393
00:19:29,830 --> 00:19:35,919
the next layer on top of that is mpls

394
00:19:32,740 --> 00:19:39,160
and in this case using labels 0 and 4

395
00:19:35,920 --> 00:19:40,720
TTL<font color="#CCCCCC"> I'm using</font><font color="#E5E5E5"> a range 0 to 4 so</font>

396
00:19:39,160 --> 00:19:43,210
basically this will generate four

397
00:19:40,720 --> 00:19:47,740
packets with sequential incrementing TT

398
00:19:43,210 --> 00:19:52,300
else for for the IP layer<font color="#CCCCCC"> I use source</font>

399
00:19:47,740 --> 00:19:54,580
them such as the<font color="#CCCCCC"> client saw a IP address</font>

400
00:19:52,300 --> 00:19:57,010
and the destination<font color="#E5E5E5"> I use the</font>

401
00:19:54,580 --> 00:19:59,360
destination on<font color="#CCCCCC"> the other side of the</font><font color="#E5E5E5"> vrf</font>

402
00:19:57,010 --> 00:20:02,929
which is client-side be

403
00:19:59,360 --> 00:20:04,909
and on top of IP I stick an ICMP echo

404
00:20:02,929 --> 00:20:08,059
request I guess this would work with

405
00:20:04,910 --> 00:20:12,049
with pretty much any protocol for

406
00:20:08,059 --> 00:20:17,090
example tcp or UDP so the output from

407
00:20:12,049 --> 00:20:21,320
<font color="#CCCCCC">this is roughly about that you can see</font>

408
00:20:17,090 --> 00:20:24,860
that<font color="#E5E5E5"> these are for mpls packets for mpls</font>

409
00:20:21,320 --> 00:20:27,770
datagrams being sent and for the<font color="#E5E5E5"> first</font>

410
00:20:24,860 --> 00:20:30,860
three of those<font color="#CCCCCC"> I get an ICMP time</font>

411
00:20:27,770 --> 00:20:35,240
exceeded in transit so basically this

412
00:20:30,860 --> 00:20:38,209
means that<font color="#CCCCCC"> if I send a pre labeled ICMP</font>

413
00:20:35,240 --> 00:20:40,040
request with TTL<font color="#CCCCCC"> zero the provider edge</font>

414
00:20:38,210 --> 00:20:41,750
device would know the number of

415
00:20:40,040 --> 00:20:43,940
intermediate devices and it would

416
00:20:41,750 --> 00:20:46,730
calculate it for me and it would say

417
00:20:43,940 --> 00:20:49,220
<font color="#E5E5E5">zero wouldn't do the job so then I can</font>

418
00:20:46,730 --> 00:20:52,700
repeat this task with incrementing the

419
00:20:49,220 --> 00:20:55,790
TTL in this case<font color="#E5E5E5"> one and and again the</font>

420
00:20:52,700 --> 00:20:57,770
provider edge device would politely tell

421
00:20:55,790 --> 00:20:59,809
me kindly<font color="#E5E5E5"> tell me that this wouldn't</font>

422
00:20:57,770 --> 00:21:03,679
work as well this<font color="#E5E5E5"> wouldn't work either</font>

423
00:20:59,809 --> 00:21:05,720
and so<font color="#E5E5E5"> basically that's the way I can</font>

424
00:21:03,679 --> 00:21:07,610
<font color="#E5E5E5">reveal the number of intermediate vices</font>

425
00:21:05,720 --> 00:21:12,110
as I said nothing really interesting so

426
00:21:07,610 --> 00:21:14,299
far but<font color="#E5E5E5"> it's good to</font><font color="#CCCCCC"> know roughly the</font>

427
00:21:12,110 --> 00:21:16,070
size of the service provider network

428
00:21:14,299 --> 00:21:18,950
you're dealing with roughly the size of

429
00:21:16,070 --> 00:21:24,049
the MPLS<font color="#E5E5E5"> network that sits in between</font>

430
00:21:18,950 --> 00:21:26,780
your office a and your office be so the

431
00:21:24,049 --> 00:21:31,400
next and i guess most obvious thing to

432
00:21:26,780 --> 00:21:33,678
do is to reveal some mpls service

433
00:21:31,400 --> 00:21:36,910
provider devices IP addresses that are

434
00:21:33,679 --> 00:21:40,100
used within the internal network<font color="#E5E5E5"> and</font>

435
00:21:36,910 --> 00:21:42,230
again consider a secure securely

436
00:21:40,100 --> 00:21:45,320
configured device securely configured

437
00:21:42,230 --> 00:21:47,450
network you have no IP TTL propagation

438
00:21:45,320 --> 00:21:49,850
you have no ICMP tunneling if you

439
00:21:47,450 --> 00:21:52,490
perform a trace<font color="#CCCCCC"> wrap from one side of</font>

440
00:21:49,850 --> 00:21:54,080
the<font color="#CCCCCC"> vrf to the other side of the vrf you</font>

441
00:21:52,490 --> 00:21:57,350
would only be able to<font color="#E5E5E5"> see the IP address</font>

442
00:21:54,080 --> 00:22:03,168
of your own gateway and the destination

443
00:21:57,350 --> 00:22:06,678
address at the far end of the vrf now

444
00:22:03,169 --> 00:22:10,460
this<font color="#E5E5E5"> is really sloppy are kind of stupid</font>

445
00:22:06,679 --> 00:22:13,250
and non-intuitive I so when<font color="#CCCCCC"> I spoke to</font>

446
00:22:10,460 --> 00:22:15,050
you<font color="#E5E5E5"> know from errand w he was really</font>

447
00:22:13,250 --> 00:22:17,600
price to see this working and he was

448
00:22:15,050 --> 00:22:19,730
like wow I didn't really<font color="#CCCCCC"> think about it</font>

449
00:22:17,600 --> 00:22:22,730
because it's<font color="#E5E5E5"> non-intuitive it shouldn't</font>

450
00:22:19,730 --> 00:22:25,700
work by design what is this is basically

451
00:22:22,730 --> 00:22:29,450
sending an ICMP request to<font color="#CCCCCC"> the other far</font>

452
00:22:25,700 --> 00:22:32,000
end of the vrf as you can see here but

453
00:22:29,450 --> 00:22:35,450
the only<font color="#CCCCCC"> difference is that</font><font color="#E5E5E5"> I enable</font>

454
00:22:32,000 --> 00:22:38,540
that the IP record drought option in the

455
00:22:35,450 --> 00:22:42,020
IP header the IP record route option

456
00:22:38,540 --> 00:22:45,020
basically allows the intermediate

457
00:22:42,020 --> 00:22:48,290
devices to include their IP addresses in

458
00:22:45,020 --> 00:22:52,120
the<font color="#CCCCCC"> IP header</font><font color="#E5E5E5"> on the way back from the</font>

459
00:22:48,290 --> 00:22:54,830
from the destination to the source and

460
00:22:52,120 --> 00:22:56,780
so basically every single<font color="#CCCCCC"> intermediate</font>

461
00:22:54,830 --> 00:22:59,149
device should consider the egress

462
00:22:56,780 --> 00:23:01,250
interface take the IP address of the

463
00:22:59,150 --> 00:23:04,610
egress interface for this traffic and

464
00:23:01,250 --> 00:23:08,180
stick it into the IPR our header the

465
00:23:04,610 --> 00:23:12,139
reason this student work is because mpls

466
00:23:08,180 --> 00:23:15,260
is a layer<font color="#CCCCCC"> 2 2.5 protocol it's below IP</font>

467
00:23:12,140 --> 00:23:19,910
and the MPLS enabled devices should not

468
00:23:15,260 --> 00:23:21,800
process data above the MPLS layer I mean

469
00:23:19,910 --> 00:23:23,930
that's the purpose of mpls and that's

470
00:23:21,800 --> 00:23:26,899
why it is being so efficient in

471
00:23:23,930 --> 00:23:28,550
forwarding traffic so fast because it

472
00:23:26,900 --> 00:23:31,160
<font color="#E5E5E5">would only look up the label information</font>

473
00:23:28,550 --> 00:23:33,169
as opposed to looking up the IP IP

474
00:23:31,160 --> 00:23:36,830
header information and the IP record

475
00:23:33,170 --> 00:23:40,850
route option is is included in the IP

476
00:23:36,830 --> 00:23:43,760
header so in this case with a secure

477
00:23:40,850 --> 00:23:46,520
configuration<font color="#CCCCCC"> you're</font><font color="#E5E5E5"> able</font><font color="#CCCCCC"> to get to IP</font>

478
00:23:43,760 --> 00:23:49,850
addresses for the MPLS intermediate

479
00:23:46,520 --> 00:23:53,750
devices again I have no idea<font color="#CCCCCC"> why this</font>

480
00:23:49,850 --> 00:23:55,250
was the case I had a conversation with

481
00:23:53,750 --> 00:23:57,860
some of the guys<font color="#E5E5E5"> from the incident</font>

482
00:23:55,250 --> 00:24:00,080
<font color="#E5E5E5">response for a few of for a few of the</font>

483
00:23:57,860 --> 00:24:02,419
affected vendors and there they were

484
00:24:00,080 --> 00:24:04,310
like well we have no<font color="#E5E5E5"> idea why this works</font>

485
00:24:02,420 --> 00:24:06,350
this shouldn't work by design they

486
00:24:04,310 --> 00:24:09,200
shouldn't work by standard that's that's

487
00:24:06,350 --> 00:24:12,469
how mpls is supposed to work not to

488
00:24:09,200 --> 00:24:14,570
process<font color="#E5E5E5"> IP information on the way from</font>

489
00:24:12,470 --> 00:24:18,290
one side of the vrf to the other side of

490
00:24:14,570 --> 00:24:20,929
<font color="#E5E5E5">the vrf so at the moment the information</font>

491
00:24:18,290 --> 00:24:23,178
we have<font color="#E5E5E5"> consists of the number of</font>

492
00:24:20,930 --> 00:24:25,520
intermediate devices and a couple of IP

493
00:24:23,179 --> 00:24:27,170
addresses for these devices now because

494
00:24:25,520 --> 00:24:31,220
we know<font color="#E5E5E5"> how I p record</font>

495
00:24:27,170 --> 00:24:33,800
<font color="#CCCCCC">our option works is it gives us the</font>

496
00:24:31,220 --> 00:24:36,050
information that<font color="#E5E5E5"> we have the IP</font>

497
00:24:33,800 --> 00:24:39,950
addresses for the egress interfaces so

498
00:24:36,050 --> 00:24:43,909
basically the IP addresses used by the

499
00:24:39,950 --> 00:24:46,640
MPLS devices on the way back so when we

500
00:24:43,910 --> 00:24:48,860
<font color="#E5E5E5">send traffic this traffic is being sent</font>

501
00:24:46,640 --> 00:24:50,960
back to us the reply is being sent back

502
00:24:48,860 --> 00:24:54,110
to us<font color="#E5E5E5"> and these IP addresses are popped</font>

503
00:24:50,960 --> 00:25:01,010
in the in the<font color="#E5E5E5"> IP record right option</font>

504
00:24:54,110 --> 00:25:05,479
<font color="#CCCCCC">ciara IP record our options field so one</font>

505
00:25:01,010 --> 00:25:09,560
thing<font color="#CCCCCC"> we can try is to send IP traffic</font>

506
00:25:05,480 --> 00:25:13,130
to any of these intermediate devices by

507
00:25:09,560 --> 00:25:18,260
definition and this should<font color="#E5E5E5"> not work</font>

508
00:25:13,130 --> 00:25:20,990
because technically we are in in an

509
00:25:18,260 --> 00:25:24,110
isolated vrf environment that have has

510
00:25:20,990 --> 00:25:26,510
no overlap with<font color="#CCCCCC"> their and with any other</font>

511
00:25:24,110 --> 00:25:29,389
vrf or in certain cases the management

512
00:25:26,510 --> 00:25:31,820
vrf or you can consider the global

513
00:25:29,390 --> 00:25:34,370
routing table as kind of a default vrf

514
00:25:31,820 --> 00:25:38,740
so basically we should not be<font color="#CCCCCC"> able to</font>

515
00:25:34,370 --> 00:25:42,790
<font color="#E5E5E5">send traffic outside of our own vrf in</font>

516
00:25:38,740 --> 00:25:46,220
only one or I<font color="#E5E5E5"> think two</font><font color="#CCCCCC"> of the cases and</font>

517
00:25:42,790 --> 00:25:49,190
this was not really true so<font color="#E5E5E5"> basically</font>

518
00:25:46,220 --> 00:25:53,030
once we get the IP addresses point 1<font color="#E5E5E5"> and</font>

519
00:25:49,190 --> 00:25:55,610
point 6 we can kind<font color="#E5E5E5"> of intelligently</font>

520
00:25:53,030 --> 00:25:58,460
guess the<font color="#CCCCCC"> other side of the connection</font>

521
00:25:55,610 --> 00:25:59,870
because in an MPLS Network most of these

522
00:25:58,460 --> 00:26:03,290
connections would<font color="#E5E5E5"> be point-to-point</font>

523
00:25:59,870 --> 00:26:05,540
connections and if if these are properly

524
00:26:03,290 --> 00:26:07,700
configured network devices they should

525
00:26:05,540 --> 00:26:09,889
use a<font color="#CCCCCC"> slash</font><font color="#E5E5E5"> thoroughly subnet mask which</font>

526
00:26:07,700 --> 00:26:12,020
allows only<font color="#CCCCCC"> for two valid IP addresses</font>

527
00:26:09,890 --> 00:26:14,930
to be used on the network so<font color="#CCCCCC"> we</font><font color="#E5E5E5"> can kind</font>

528
00:26:12,020 --> 00:26:16,610
of assume what is the IP<font color="#CCCCCC"> address on the</font>

529
00:26:14,930 --> 00:26:21,110
other side of the<font color="#E5E5E5"> point-to-point link in</font>

530
00:26:16,610 --> 00:26:23,510
this<font color="#E5E5E5"> case we can kind</font><font color="#CCCCCC"> of guess the 2.2</font>

531
00:26:21,110 --> 00:26:27,649
IP address used on the provider edge

532
00:26:23,510 --> 00:26:30,800
device towards us and in this particular

533
00:26:27,650 --> 00:26:32,870
case I can't really say the name of<font color="#E5E5E5"> the</font>

534
00:26:30,800 --> 00:26:35,450
vendor but we've been<font color="#E5E5E5"> able to send</font>

535
00:26:32,870 --> 00:26:38,209
traffic directly to an MPLS enabled

536
00:26:35,450 --> 00:26:41,120
interface part of the MPLS<font color="#CCCCCC"> network why</font>

537
00:26:38,210 --> 00:26:44,240
is this bad this is kind of<font color="#E5E5E5"> bad because</font>

538
00:26:41,120 --> 00:26:46,699
is an unmet work administrator a network

539
00:26:44,240 --> 00:26:48,230
engineer would consider the MPLS<font color="#CCCCCC"> network</font>

540
00:26:46,700 --> 00:26:52,850
to not be accessible from the outside

541
00:26:48,230 --> 00:26:55,640
world so imagine they have ssh running

542
00:26:52,850 --> 00:26:57,860
on the MPLS enabled devices but they've

543
00:26:55,640 --> 00:27:00,260
been smart enough to filter SSH on the

544
00:26:57,860 --> 00:27:03,229
customer interfaces but still allow ssh

545
00:27:00,260 --> 00:27:06,110
within the network itself<font color="#E5E5E5"> so in this</font>

546
00:27:03,230 --> 00:27:08,390
case<font color="#CCCCCC"> SSH would not be accessible on the</font>

547
00:27:06,110 --> 00:27:11,300
customer facing interface but it would

548
00:27:08,390 --> 00:27:13,940
still be accessible on the MPLS enabled

549
00:27:11,300 --> 00:27:16,220
interface so being<font color="#E5E5E5"> able to send traffic</font>

550
00:27:13,940 --> 00:27:18,200
and receive traffic back from an MPLS

551
00:27:16,220 --> 00:27:26,030
enable interface is<font color="#E5E5E5"> bad for that</font>

552
00:27:18,200 --> 00:27:29,179
particular reason as we so there's two

553
00:27:26,030 --> 00:27:32,360
or three kind of so far<font color="#E5E5E5"> minor issues</font>

554
00:27:29,179 --> 00:27:35,179
with mpls implementations<font color="#CCCCCC"> I tested about</font>

555
00:27:32,360 --> 00:27:38,928
six or seven implementations one vector

556
00:27:35,179 --> 00:27:41,150
<font color="#CCCCCC">11</font><font color="#E5E5E5"> vendor was unaffected a few vendors</font>

557
00:27:38,929 --> 00:27:43,220
were affected by<font color="#E5E5E5"> one or</font><font color="#CCCCCC"> more of these</font>

558
00:27:41,150 --> 00:27:46,220
issues<font color="#CCCCCC"> and one vendor was affected by</font>

559
00:27:43,220 --> 00:27:48,770
all of these issues an interesting<font color="#CCCCCC"> thing</font>

560
00:27:46,220 --> 00:27:51,350
<font color="#CCCCCC">to check is basically perform these</font>

561
00:27:48,770 --> 00:27:53,750
tests in a network where there's

562
00:27:51,350 --> 00:27:55,520
multiple vendors basically having a

563
00:27:53,750 --> 00:27:57,800
provider edge device from vendor<font color="#CCCCCC"> X</font>

564
00:27:55,520 --> 00:28:00,350
provider<font color="#E5E5E5"> clora device from vendor why</font>

565
00:27:57,800 --> 00:28:03,980
and another provider<font color="#E5E5E5"> wretch from vendor</font>

566
00:28:00,350 --> 00:28:05,990
is let's say because I assume results

567
00:28:03,980 --> 00:28:07,580
would differ because of the various

568
00:28:05,990 --> 00:28:11,870
vulnerabilities affecting various

569
00:28:07,580 --> 00:28:15,260
vendors so that was about mpls

570
00:28:11,870 --> 00:28:19,219
reconnaissance this was the port where

571
00:28:15,260 --> 00:28:22,220
we kind of get and gather as much

572
00:28:19,220 --> 00:28:24,260
information as we<font color="#E5E5E5"> can about the service</font>

573
00:28:22,220 --> 00:28:28,390
provider network without any active

574
00:28:24,260 --> 00:28:31,910
attacks without any interruptions or

575
00:28:28,390 --> 00:28:37,330
kind of<font color="#E5E5E5"> aggressive offensive traffic</font>

576
00:28:31,910 --> 00:28:39,530
being sent now imaging i mentioned

577
00:28:37,330 --> 00:28:42,590
imagine<font color="#E5E5E5"> i'm sorry i remember i mentioned</font>

578
00:28:39,530 --> 00:28:44,720
we<font color="#CCCCCC"> are hoping what what is vrf actually</font>

579
00:28:42,590 --> 00:28:48,470
now<font color="#CCCCCC"> i need to introduce what vrf</font><font color="#E5E5E5"> hopping</font>

580
00:28:44,720 --> 00:28:52,100
is<font color="#CCCCCC"> um as</font><font color="#E5E5E5"> I</font><font color="#CCCCCC"> said Vera if you can</font><font color="#E5E5E5"> think</font>

581
00:28:48,470 --> 00:28:54,770
<font color="#E5E5E5">about the vrf as kind of a virtualized</font>

582
00:28:52,100 --> 00:28:56,959
network if you know

583
00:28:54,770 --> 00:29:00,470
about<font color="#CCCCCC"> VLANs</font><font color="#E5E5E5"> I assume most of you would</font>

584
00:28:56,960 --> 00:29:03,500
be<font color="#E5E5E5"> um most of you would know about</font>

585
00:29:00,470 --> 00:29:05,480
villains so vrf is exactly the

586
00:29:03,500 --> 00:29:06,830
equivalent of villains on layer<font color="#E5E5E5"> 3 you</font>

587
00:29:05,480 --> 00:29:09,140
should not<font color="#E5E5E5"> be</font><font color="#CCCCCC"> able</font><font color="#E5E5E5"> to break out of your</font>

588
00:29:06,830 --> 00:29:12,470
VLAN without using some sort of

589
00:29:09,140 --> 00:29:15,830
techniques like double tagging and it's

590
00:29:12,470 --> 00:29:18,020
pretty<font color="#E5E5E5"> much similar for vr af-s vr f</font>

591
00:29:15,830 --> 00:29:20,810
hoping would mean breaking<font color="#E5E5E5"> out of the</font>

592
00:29:18,020 --> 00:29:24,139
vrf and sending traffic onto another vrf

593
00:29:20,810 --> 00:29:26,210
pretty much like villain hoping this

594
00:29:24,140 --> 00:29:29,260
would allow for either reaching other

595
00:29:26,210 --> 00:29:32,000
customers of the<font color="#E5E5E5"> network or eventually</font>

596
00:29:29,260 --> 00:29:33,590
sending traffic to an MPLS enabled

597
00:29:32,000 --> 00:29:36,350
service provider device part of a

598
00:29:33,590 --> 00:29:39,169
management vrf so most of the service

599
00:29:36,350 --> 00:29:41,090
providers they would use as specifically

600
00:29:39,170 --> 00:29:44,030
configured<font color="#CCCCCC"> vrf or accessing their own</font>

601
00:29:41,090 --> 00:29:45,919
devices called the management vrf if

602
00:29:44,030 --> 00:29:47,750
there<font color="#E5E5E5"> is no management vrf you can think</font>

603
00:29:45,920 --> 00:29:52,340
<font color="#E5E5E5">about the global routing table as the</font>

604
00:29:47,750 --> 00:29:55,550
management vrf how is we are hoping

605
00:29:52,340 --> 00:29:58,100
achieved well this<font color="#CCCCCC"> is achieved by pre</font>

606
00:29:55,550 --> 00:30:00,200
labeling mpls traffic and sending<font color="#E5E5E5"> it on</font>

607
00:29:58,100 --> 00:30:02,090
to the provider edge and relying on the

608
00:30:00,200 --> 00:30:05,330
fact that a provider edge device will in

609
00:30:02,090 --> 00:30:08,149
certain cases process mpls encapsulated

610
00:30:05,330 --> 00:30:10,250
traffic sometimes due to miss

611
00:30:08,150 --> 00:30:17,240
configurations sometimes due to a

612
00:30:10,250 --> 00:30:19,730
problematic implementation um what is a

613
00:30:17,240 --> 00:30:22,610
potential complication for a vrf hopping

614
00:30:19,730 --> 00:30:26,500
attack well that could<font color="#CCCCCC"> be the fact that</font>

615
00:30:22,610 --> 00:30:29,810
a lot of service providers would use

616
00:30:26,500 --> 00:30:35,690
overlapping IP address spaces for your

617
00:30:29,810 --> 00:30:38,570
customers so in this case there<font color="#E5E5E5"> are sooo</font>

618
00:30:35,690 --> 00:30:41,060
customers imaging these two customers

619
00:30:38,570 --> 00:30:44,210
they may have the exactly same identical

620
00:30:41,060 --> 00:30:46,669
IP address space now for the sake of the

621
00:30:44,210 --> 00:30:48,410
example<font color="#E5E5E5"> I'm using separate IP address</font>

622
00:30:46,670 --> 00:30:51,050
spaces<font color="#CCCCCC"> non-overlapping address spaces</font>

623
00:30:48,410 --> 00:30:52,850
but it is<font color="#E5E5E5"> absolutely possible and it</font>

624
00:30:51,050 --> 00:30:55,159
would<font color="#CCCCCC"> be absolutely fine for a service</font>

625
00:30:52,850 --> 00:30:59,389
provider and a customer<font color="#CCCCCC"> to use</font>

626
00:30:55,160 --> 00:31:01,100
overlapping address spaces so there are

627
00:30:59,390 --> 00:31:03,320
<font color="#E5E5E5">still things we can</font><font color="#CCCCCC"> do it via of hoping</font>

628
00:31:01,100 --> 00:31:05,179
as<font color="#E5E5E5"> I said attacking mpls clients or</font>

629
00:31:03,320 --> 00:31:07,070
attacking service provider devices and

630
00:31:05,180 --> 00:31:08,179
I'm gonna start with attacking mpls

631
00:31:07,070 --> 00:31:11,090
clients

632
00:31:08,179 --> 00:31:13,159
so as I said customer traffic is

633
00:31:11,090 --> 00:31:16,519
supposed to flow within a dedicated vrf

634
00:31:13,159 --> 00:31:18,740
and customer different customers traffic

635
00:31:16,519 --> 00:31:22,309
should not mix together it should flow

636
00:31:18,740 --> 00:31:24,200
only<font color="#CCCCCC"> within the dedicated vrf there is</font>

637
00:31:22,309 --> 00:31:26,450
no interview ref communication by

638
00:31:24,200 --> 00:31:29,169
default unless this is explicitly

639
00:31:26,450 --> 00:31:32,539
configured via some sort of<font color="#CCCCCC"> wrap leaking</font>

640
00:31:29,169 --> 00:31:35,509
<font color="#CCCCCC">wrap licking means leaking information</font>

641
00:31:32,539 --> 00:31:38,090
from one vrf into another vrf or from

642
00:31:35,509 --> 00:31:40,389
the global routing table into a vrf or

643
00:31:38,090 --> 00:31:43,759
from a vrf into the global routing table

644
00:31:40,389 --> 00:31:46,998
but by default<font color="#E5E5E5"> that's not configured and</font>

645
00:31:43,759 --> 00:31:49,129
if you configure a vrf separate<font color="#E5E5E5"> vrf</font>

646
00:31:46,999 --> 00:31:51,519
<font color="#CCCCCC">these vrf should stay completely</font>

647
00:31:49,129 --> 00:31:57,080
independent without leaking any routes

648
00:31:51,519 --> 00:31:59,330
between each<font color="#E5E5E5"> other so attacking other</font>

649
00:31:57,080 --> 00:32:03,139
clients means that will be basically

650
00:31:59,330 --> 00:32:06,259
jumping VPNs or<font color="#E5E5E5"> so-called</font><font color="#CCCCCC"> via refs and</font>

651
00:32:03,139 --> 00:32:10,519
we'll be able<font color="#E5E5E5"> to reach other customers a</font>

652
00:32:06,259 --> 00:32:13,639
<font color="#E5E5E5">customer edge devices so this</font><font color="#CCCCCC"> is</font><font color="#E5E5E5"> the</font>

653
00:32:10,519 --> 00:32:15,639
example that<font color="#CCCCCC"> I'm</font><font color="#E5E5E5"> going</font><font color="#CCCCCC"> to</font><font color="#E5E5E5"> use for what I</font>

654
00:32:13,639 --> 00:32:17,658
intended<font color="#CCCCCC"> to be a</font><font color="#E5E5E5"> couple of demos</font>

655
00:32:15,639 --> 00:32:20,360
unfortunately not performing<font color="#CCCCCC"> them due to</font>

656
00:32:17,659 --> 00:32:25,490
<font color="#E5E5E5">some technical issues so we have</font>

657
00:32:20,360 --> 00:32:27,320
customer a who stays with envy RFA we

658
00:32:25,490 --> 00:32:30,379
have customer be who stays with envy our

659
00:32:27,320 --> 00:32:33,499
FB these are the yellow one and the<font color="#E5E5E5"> blue</font>

660
00:32:30,379 --> 00:32:36,980
one customer a and customer be they have

661
00:32:33,499 --> 00:32:40,669
<font color="#E5E5E5">two remote offices each customer pays</font>

662
00:32:36,980 --> 00:32:49,610
devices are r1 and r2 and customer be

663
00:32:40,669 --> 00:32:52,669
devices are r3 and r4 so I'm pretending

664
00:32:49,610 --> 00:32:56,418
to be the attacker in VA FA pretending

665
00:32:52,669 --> 00:32:58,999
to be device are one if I send icmp echo

666
00:32:56,419 --> 00:33:02,149
request to a device that resides on a

667
00:32:58,999 --> 00:33:05,119
different VF than my own vrf and this

668
00:33:02,149 --> 00:33:06,979
should not<font color="#E5E5E5"> eventually should not reach</font>

669
00:33:05,119 --> 00:33:09,549
<font color="#CCCCCC">the remote device should be discarded</font>

670
00:33:06,980 --> 00:33:12,799
right at the edge of the MPLS<font color="#CCCCCC"> Network</font>

671
00:33:09,549 --> 00:33:15,289
and as we can<font color="#E5E5E5"> see we have one hundred</font>

672
00:33:12,799 --> 00:33:17,658
percent packet loss not receiving

673
00:33:15,289 --> 00:33:20,260
anything at all no ICMP error messages

674
00:33:17,659 --> 00:33:24,530
generated whatsoever

675
00:33:20,260 --> 00:33:27,020
so on<font color="#CCCCCC"> our for which again resides in a</font>

676
00:33:24,530 --> 00:33:29,809
different vrf and we enable ICMP

677
00:33:27,020 --> 00:33:32,900
debugging just so we can see the ICMP

678
00:33:29,809 --> 00:33:38,178
messages as they arrive at the provider

679
00:33:32,900 --> 00:33:40,250
a provider to customer interface then we

680
00:33:38,179 --> 00:33:44,809
proceed with crafting packets again with

681
00:33:40,250 --> 00:33:46,970
scaping loading the MPLS module<font color="#E5E5E5"> Ethernet</font>

682
00:33:44,809 --> 00:33:52,730
nothing interesting about it<font color="#E5E5E5"> then for</font>

683
00:33:46,970 --> 00:33:55,130
mpls TTL 64 or any TTL that would be big

684
00:33:52,730 --> 00:33:58,490
enough for traversing the network and

685
00:33:55,130 --> 00:34:02,120
for a range in this case I use 1000 to

686
00:33:58,490 --> 00:34:04,730
1500 now these depends on the on the

687
00:34:02,120 --> 00:34:07,820
size of the service provider network and

688
00:34:04,730 --> 00:34:10,219
it also depends on the vendor systems on

689
00:34:07,820 --> 00:34:13,040
the vendor implementation some vendors

690
00:34:10,219 --> 00:34:15,949
would start assigning labels from 16

691
00:34:13,040 --> 00:34:19,610
which<font color="#CCCCCC"> is the last the first non-reserved</font>

692
00:34:15,949 --> 00:34:22,310
label some some vendors<font color="#CCCCCC"> start assigning</font>

693
00:34:19,610 --> 00:34:25,250
<font color="#E5E5E5">labels from 100 some of them would start</font>

694
00:34:22,310 --> 00:34:27,949
from<font color="#E5E5E5"> 1000 so having an idea about the</font>

695
00:34:25,250 --> 00:34:30,590
vendors you are dealing<font color="#E5E5E5"> with it would</font>

696
00:34:27,949 --> 00:34:33,408
only<font color="#E5E5E5"> make your life easier because you</font>

697
00:34:30,590 --> 00:34:36,139
can kind of safely assume the range of

698
00:34:33,409 --> 00:34:40,159
labels that are valid and configured by

699
00:34:36,139 --> 00:34:43,790
default on these devices so IP source is

700
00:34:40,159 --> 00:34:47,359
the source of our one IP destination is

701
00:34:43,790 --> 00:34:53,929
the<font color="#E5E5E5"> source of our for again</font><font color="#CCCCCC"> sourcing one</font>

702
00:34:47,359 --> 00:34:57,350
vrf destination in another vrf now on

703
00:34:53,929 --> 00:35:00,950
our<font color="#CCCCCC"> four we can see that</font><font color="#E5E5E5"> two out of five</font>

704
00:34:57,350 --> 00:35:03,770
hundred packets actually reached the

705
00:35:00,950 --> 00:35:10,540
destination basically performing what is

706
00:35:03,770 --> 00:35:13,310
what I<font color="#E5E5E5"> called vrf hoping for some</font><font color="#CCCCCC"> reason</font>

707
00:35:10,540 --> 00:35:15,770
to out of these<font color="#CCCCCC"> 500 reach the</font>

708
00:35:13,310 --> 00:35:19,130
destination initially I assume only<font color="#E5E5E5"> one</font>

709
00:35:15,770 --> 00:35:23,480
<font color="#CCCCCC">would do that but further investigating</font>

710
00:35:19,130 --> 00:35:26,660
turned out that revealed that I do<font color="#CCCCCC"> to</font>

711
00:35:23,480 --> 00:35:29,240
miss configuration issues we can smuggle

712
00:35:26,660 --> 00:35:31,460
more than one request in a properly

713
00:35:29,240 --> 00:35:33,560
configure environment I<font color="#E5E5E5"> think the result</font>

714
00:35:31,460 --> 00:35:36,500
was only a single<font color="#E5E5E5"> packet</font>

715
00:35:33,560 --> 00:35:44,330
is because of the assignment for the

716
00:35:36,500 --> 00:35:47,060
labels now<font color="#CCCCCC"> this was via ref hopping</font>

717
00:35:44,330 --> 00:35:48,680
performed against<font color="#E5E5E5"> clients and perform</font>

718
00:35:47,060 --> 00:35:51,950
for the purpose of reaching customer

719
00:35:48,680 --> 00:35:55,730
edge devices as I mentioned<font color="#CCCCCC"> there is</font>

720
00:35:51,950 --> 00:35:58,220
also the possibility of attacking

721
00:35:55,730 --> 00:36:01,550
service provider devices devices that

722
00:35:58,220 --> 00:36:04,100
reside on<font color="#CCCCCC"> the service provider network</font>

723
00:36:01,550 --> 00:36:07,000
that is supposed<font color="#E5E5E5"> to be kind of invisible</font>

724
00:36:04,100 --> 00:36:10,940
and transparent from a customer customer

725
00:36:07,000 --> 00:36:13,250
point of view and as I said<font color="#E5E5E5"> these are</font>

726
00:36:10,940 --> 00:36:15,680
either configured to be part of some

727
00:36:13,250 --> 00:36:18,200
sort of<font color="#E5E5E5"> management erf or by default</font>

728
00:36:15,680 --> 00:36:20,960
part of the global routing table that

729
00:36:18,200 --> 00:36:26,660
<font color="#CCCCCC">you can</font><font color="#E5E5E5"> imagine is some sort of a global</font>

730
00:36:20,960 --> 00:36:29,300
vrf in this case and<font color="#E5E5E5"> I already have the</font>

731
00:36:26,660 --> 00:36:33,470
IP<font color="#CCCCCC"> address for</font><font color="#E5E5E5"> the provider core device</font>

732
00:36:29,300 --> 00:36:36,290
the PD voice and so if i<font color="#CCCCCC"> send icmp echo</font>

733
00:36:33,470 --> 00:36:38,589
request to this device<font color="#E5E5E5"> and none of these</font>

734
00:36:36,290 --> 00:36:41,240
would eventually reach the destination

735
00:36:38,590 --> 00:36:49,880
because these are discarded at the edge

736
00:36:41,240 --> 00:36:51,859
of the of the MPLS<font color="#CCCCCC"> Network now typing</font>

737
00:36:49,880 --> 00:36:56,500
these commands on the<font color="#CCCCCC"> P device would</font>

738
00:36:51,860 --> 00:36:59,210
enable ICMP debugging and would enable

739
00:36:56,500 --> 00:37:03,260
kind of logging on the terminal that<font color="#E5E5E5"> I'm</font>

740
00:36:59,210 --> 00:37:05,900
currently logged on and again performing

741
00:37:03,260 --> 00:37:09,260
this exactly same thing but only

742
00:37:05,900 --> 00:37:10,820
changing the destination IP address to

743
00:37:09,260 --> 00:37:14,150
the destination<font color="#CCCCCC"> IP address of the</font>

744
00:37:10,820 --> 00:37:17,870
provider core device and this would get

745
00:37:14,150 --> 00:37:20,330
me again to ICMP echo request arriving

746
00:37:17,870 --> 00:37:23,480
at the destination and<font color="#CCCCCC"> two ICMP echo</font>

747
00:37:20,330 --> 00:37:25,490
replace generated at the<font color="#E5E5E5"> destination now</font>

748
00:37:23,480 --> 00:37:26,810
because at the destination the device

749
00:37:25,490 --> 00:37:29,209
would have no information whatsoever

750
00:37:26,810 --> 00:37:33,350
about routing this information back<font color="#CCCCCC"> to</font>

751
00:37:29,210 --> 00:37:36,620
me this icmp echo replies would never

752
00:37:33,350 --> 00:37:38,839
reach the originating point in this case

753
00:37:36,620 --> 00:37:42,109
<font color="#E5E5E5">basically i will have absolutely no idea</font>

754
00:37:38,840 --> 00:37:44,240
whether my traffic was successfully

755
00:37:42,110 --> 00:37:47,110
delivered to the destination because<font color="#CCCCCC"> of</font>

756
00:37:44,240 --> 00:37:47,109
the lack of response

757
00:37:47,519 --> 00:37:51,038
basically this<font color="#CCCCCC"> is the exactly same</font>

758
00:37:49,359 --> 00:37:53,949
limitation that you face when you

759
00:37:51,039 --> 00:37:57,039
perform<font color="#CCCCCC"> villa and hoping</font><font color="#E5E5E5"> attacks this is</font>

760
00:37:53,949 --> 00:37:59,769
this may be useful against stateless

761
00:37:57,039 --> 00:38:06,489
<font color="#CCCCCC">protocols protocol transported over UDP</font>

762
00:37:59,769 --> 00:38:12,008
such as SNMP or<font color="#E5E5E5"> tftp or universal plug</font>

763
00:38:06,489 --> 00:38:15,729
and play etc etc<font color="#CCCCCC"> ok I'm kind of running</font>

764
00:38:12,009 --> 00:38:21,039
<font color="#E5E5E5">out of time so we show these are some</font>

765
00:38:15,729 --> 00:38:23,919
kind<font color="#E5E5E5"> of serious limitations that apply</font>

766
00:38:21,039 --> 00:38:27,299
to a classic<font color="#CCCCCC"> vrf hopping attack because</font>

767
00:38:23,920 --> 00:38:31,599
of<font color="#E5E5E5"> the lack of response received at the</font>

768
00:38:27,299 --> 00:38:34,119
originating point what can<font color="#E5E5E5"> we do is to</font>

769
00:38:31,599 --> 00:38:35,739
consider a couple of scenarios in this

770
00:38:34,119 --> 00:38:39,699
case a couple of scenarios one of them

771
00:38:35,739 --> 00:38:42,640
relies on<font color="#CCCCCC"> a misconfigured kind of poorly</font>

772
00:38:39,699 --> 00:38:45,579
configured customer edge device the

773
00:38:42,640 --> 00:38:48,930
other one relies on a particular network

774
00:38:45,579 --> 00:38:52,569
design again kind of poor network<font color="#E5E5E5"> design</font>

775
00:38:48,930 --> 00:38:54,698
so the first one is blind<font color="#CCCCCC"> cr8</font>

776
00:38:52,569 --> 00:38:57,009
configuration as you saw we can send

777
00:38:54,699 --> 00:38:58,539
traffic to a customer edge device but

778
00:38:57,009 --> 00:39:02,049
there<font color="#E5E5E5"> is no way for us</font><font color="#CCCCCC"> to see the</font>

779
00:38:58,539 --> 00:39:04,150
response so if<font color="#E5E5E5"> we have a configuration</font>

780
00:39:02,049 --> 00:39:07,420
file for remote device let's say in a

781
00:39:04,150 --> 00:39:09,759
pen test scenario and we know the SNMP

782
00:39:07,420 --> 00:39:13,019
is enabled on<font color="#E5E5E5"> a customer edge device and</font>

783
00:39:09,759 --> 00:39:16,180
<font color="#CCCCCC">these SNMP service is accessible on the</font>

784
00:39:13,019 --> 00:39:18,069
customer edge to provide a reg link we

785
00:39:16,180 --> 00:39:20,109
should be able to reach the SNMP service

786
00:39:18,069 --> 00:39:25,329
but there would be no way for us<font color="#CCCCCC"> to see</font>

787
00:39:20,109 --> 00:39:29,078
the SNMP reply basically<font color="#E5E5E5"> we can force</font>

788
00:39:25,329 --> 00:39:31,449
the remote system to pre encapsulate its

789
00:39:29,079 --> 00:39:33,759
<font color="#E5E5E5">traffic in mpls before the reply sent</font>

790
00:39:31,449 --> 00:39:36,880
back how is this done well<font color="#E5E5E5"> basically we</font>

791
00:39:33,759 --> 00:39:39,549
define a static route for ourself and we

792
00:39:36,880 --> 00:39:42,279
defined what is called an MPLS static

793
00:39:39,549 --> 00:39:44,410
binding<font color="#CCCCCC"> rope this static binding rule</font>

794
00:39:42,279 --> 00:39:46,479
would tell the device that<font color="#E5E5E5"> specific</font>

795
00:39:44,410 --> 00:39:49,089
traffic particular<font color="#E5E5E5"> traffic needs to be</font>

796
00:39:46,479 --> 00:39:54,640
mpls pretty encapsulated sent to the

797
00:39:49,089 --> 00:39:57,279
provider edge device as opposed to be as

798
00:39:54,640 --> 00:39:58,970
opposed to being clean a clear IP

799
00:39:57,279 --> 00:40:01,640
traffic

800
00:39:58,970 --> 00:40:04,060
the limitations of this well first of

801
00:40:01,640 --> 00:40:07,359
all we<font color="#E5E5E5"> need to perform SNMP right axis</font>

802
00:40:04,060 --> 00:40:09,920
community<font color="#CCCCCC"> strength brute force and</font>

803
00:40:07,360 --> 00:40:12,140
depending on the configuration and

804
00:40:09,920 --> 00:40:15,650
password policies that may not<font color="#E5E5E5"> be</font>

805
00:40:12,140 --> 00:40:19,160
<font color="#E5E5E5">applicable and another complication and</font>

806
00:40:15,650 --> 00:40:20,960
limitation is that<font color="#E5E5E5"> certain management</font>

807
00:40:19,160 --> 00:40:24,830
information basis would have this

808
00:40:20,960 --> 00:40:27,080
particular object<font color="#E5E5E5"> identifiers as read</font>

809
00:40:24,830 --> 00:40:29,090
only or would change these object

810
00:40:27,080 --> 00:40:32,840
identifier from version to another

811
00:40:29,090 --> 00:40:36,440
version but the way to<font color="#E5E5E5"> perform this is</font>

812
00:40:32,840 --> 00:40:38,480
<font color="#E5E5E5">basically the way we did the</font>

813
00:40:36,440 --> 00:40:41,300
demonstration for vrf hopping but

814
00:40:38,480 --> 00:40:45,380
instead<font color="#CCCCCC"> of having ICMP echo requests we</font>

815
00:40:41,300 --> 00:40:48,260
have SNMP wrapped in UDP<font color="#E5E5E5"> and these SNMP</font>

816
00:40:45,380 --> 00:40:50,930
basically tells the remote device that a

817
00:40:48,260 --> 00:40:53,630
<font color="#E5E5E5">particular object ID needs to be set to</font>

818
00:40:50,930 --> 00:40:56,240
a particular value<font color="#E5E5E5"> and again</font>

819
00:40:53,630 --> 00:40:59,390
<font color="#E5E5E5">brute-forcing generating 500 packets</font>

820
00:40:56,240 --> 00:41:01,700
having fingers crossed and hoping the

821
00:40:59,390 --> 00:41:04,549
<font color="#E5E5E5">hour traffic reaches the destination and</font>

822
00:41:01,700 --> 00:41:07,419
that we<font color="#E5E5E5"> have the right community string</font>

823
00:41:04,550 --> 00:41:10,580
so in this case<font color="#E5E5E5"> you have</font><font color="#CCCCCC"> 500 packets</font>

824
00:41:07,420 --> 00:41:12,170
with with only one single community

825
00:41:10,580 --> 00:41:14,540
string but if you have a dictionary

826
00:41:12,170 --> 00:41:16,550
<font color="#E5E5E5">lists imagine</font><font color="#CCCCCC"> for every</font><font color="#E5E5E5"> single community</font>

827
00:41:14,540 --> 00:41:19,009
string you would have<font color="#CCCCCC"> to send 500</font>

828
00:41:16,550 --> 00:41:24,860
packets so again not exactly practical

829
00:41:19,010 --> 00:41:27,620
but still getting of somewhere now this

830
00:41:24,860 --> 00:41:32,540
scenario relies on kind of poorly

831
00:41:27,620 --> 00:41:35,180
designed client network imagine arm as a

832
00:41:32,540 --> 00:41:37,250
company I have remote offices I want the

833
00:41:35,180 --> 00:41:40,220
communication between between these two

834
00:41:37,250 --> 00:41:42,710
<font color="#CCCCCC">officers to be as secure and as reliable</font>

835
00:41:40,220 --> 00:41:45,830
as possible so I go<font color="#E5E5E5"> to an MPLS service</font>

836
00:41:42,710 --> 00:41:47,780
provider get an MPLS VPN from office<font color="#E5E5E5"> one</font>

837
00:41:45,830 --> 00:41:50,150
<font color="#E5E5E5">to office</font><font color="#CCCCCC"> to but for the rest</font><font color="#E5E5E5"> of</font><font color="#CCCCCC"> my</font>

838
00:41:47,780 --> 00:41:52,640
traffic I would still use internet and

839
00:41:50,150 --> 00:41:55,150
this internet connectivity would be

840
00:41:52,640 --> 00:42:01,580
completely separate from the mpls VPN

841
00:41:55,150 --> 00:42:03,050
connectivity again design prerequisites

842
00:42:01,580 --> 00:42:05,540
having internet connectivity via

843
00:42:03,050 --> 00:42:08,300
separate link and the attack scenario

844
00:42:05,540 --> 00:42:10,109
for that is vrf<font color="#E5E5E5"> hopping with a spoofed</font>

845
00:42:08,300 --> 00:42:12,480
IP address

846
00:42:10,109 --> 00:42:15,029
forcing the victim into generating and

847
00:42:12,480 --> 00:42:18,720
sending responses to an<font color="#CCCCCC"> internet facing</font>

848
00:42:15,029 --> 00:42:22,019
attack control device limitations again

849
00:42:18,720 --> 00:42:25,410
that's a poor<font color="#CCCCCC"> network design decision</font>

850
00:42:22,019 --> 00:42:27,299
<font color="#E5E5E5">it's mitigated and committee gated by</font>

851
00:42:25,410 --> 00:42:30,118
adequately configured traffic filtering

852
00:42:27,299 --> 00:42:32,190
policies and overlapping IP address

853
00:42:30,119 --> 00:42:35,190
spaces would cause some serious problems

854
00:42:32,190 --> 00:42:38,789
and not even entirely sure if<font color="#E5E5E5"> it's</font>

855
00:42:35,190 --> 00:42:42,029
practically possible so that's the

856
00:42:38,789 --> 00:42:44,789
<font color="#E5E5E5">attack scenario for that one vrf hoping</font>

857
00:42:42,029 --> 00:42:50,009
with a spoofed source IP address in this

858
00:42:44,789 --> 00:42:54,299
case<font color="#E5E5E5"> I pretend to be IP address 101 101</font>

859
00:42:50,009 --> 00:42:57,720
101 101 performing vrf hoping sending

860
00:42:54,299 --> 00:43:01,349
this pre encapsulated mpls traffic onto

861
00:42:57,720 --> 00:43:03,269
our for you see the request<font color="#E5E5E5"> as being</font>

862
00:43:01,349 --> 00:43:07,099
captured on the<font color="#E5E5E5"> interface between our</font>

863
00:43:03,269 --> 00:43:10,140
<font color="#CCCCCC">floor and the provider edge device so</font>

864
00:43:07,099 --> 00:43:13,130
when<font color="#E5E5E5"> the from when the provider</font><font color="#CCCCCC"> is when</font>

865
00:43:10,140 --> 00:43:16,890
the r4 device takes these packets

866
00:43:13,130 --> 00:43:18,930
inspects the source IP address it sees

867
00:43:16,890 --> 00:43:23,578
that the source IP address has been<font color="#E5E5E5"> set</font>

868
00:43:18,930 --> 00:43:26,339
to 101 101 101 101 and because this 101

869
00:43:23,579 --> 00:43:30,059
IP address is somewhere on<font color="#E5E5E5"> the internet</font>

870
00:43:26,339 --> 00:43:32,730
because<font color="#E5E5E5"> it's a public IP it assumes that</font>

871
00:43:30,059 --> 00:43:38,640
it's safe to send the response back onto

872
00:43:32,730 --> 00:43:41,039
the<font color="#E5E5E5"> internet connected link so basically</font>

873
00:43:38,640 --> 00:43:44,400
that's the way we achieve some sort of

874
00:43:41,039 --> 00:43:48,799
two-way communication by only triggering

875
00:43:44,400 --> 00:43:52,769
it initially<font color="#E5E5E5"> from from an MPLS facing</font>

876
00:43:48,799 --> 00:43:56,069
interface now that was pretty much it

877
00:43:52,769 --> 00:43:57,709
about mpls reconnaissance in<font color="#CCCCCC"> VF hopping</font>

878
00:43:56,069 --> 00:44:00,660
a little bit about hardening the

879
00:43:57,710 --> 00:44:02,339
environment now<font color="#E5E5E5"> I'm disabled I've detail</font>

880
00:44:00,660 --> 00:44:04,950
propagation at the edge of the MPLS

881
00:44:02,339 --> 00:44:08,038
domain and disabled I've simply

882
00:44:04,950 --> 00:44:09,390
<font color="#E5E5E5">tunneling along the LSB disabled</font>

883
00:44:08,039 --> 00:44:11,670
management protocols and unwanted

884
00:44:09,390 --> 00:44:13,348
services<font color="#E5E5E5"> on</font><font color="#CCCCCC"> customer facing interfaces</font>

885
00:44:11,670 --> 00:44:16,859
so basically<font color="#E5E5E5"> cutting down the attack</font>

886
00:44:13,349 --> 00:44:19,559
surface and generalized TTL security

887
00:44:16,859 --> 00:44:22,470
mechanism is a mechanism<font color="#CCCCCC"> that prevents a</font>

888
00:44:19,559 --> 00:44:23,310
router from processing certain traffic

889
00:44:22,470 --> 00:44:27,240
on

890
00:44:23,310 --> 00:44:29,040
based on the TTL value so basically by

891
00:44:27,240 --> 00:44:31,470
knowing the size of your<font color="#E5E5E5"> next work you</font>

892
00:44:29,040 --> 00:44:34,320
can<font color="#CCCCCC"> safely assume that</font><font color="#E5E5E5"> TTL values</font>

893
00:44:31,470 --> 00:44:38,730
<font color="#CCCCCC">outside of a</font><font color="#E5E5E5"> specific range are kind of</font>

894
00:44:34,320 --> 00:44:42,180
forged by a by a<font color="#CCCCCC"> customer and in general</font>

895
00:44:38,730 --> 00:44:44,520
<font color="#E5E5E5">on it is recommended</font><font color="#CCCCCC"> to follow the best</font>

896
00:44:42,180 --> 00:44:47,540
practices as specified in the security

897
00:44:44,520 --> 00:44:50,520
framework for mpls and<font color="#CCCCCC"> G mpls networks</font>

898
00:44:47,540 --> 00:44:52,380
now some general guidelines not

899
00:44:50,520 --> 00:44:54,960
specifically related not necessarily

900
00:44:52,380 --> 00:44:57,300
related to mpls and you should always

901
00:44:54,960 --> 00:44:59,070
assume a presence of<font color="#E5E5E5"> some sort of</font>

902
00:44:57,300 --> 00:45:00,570
malicious or compromised client so

903
00:44:59,070 --> 00:45:04,200
basically if you're a service<font color="#CCCCCC"> provider</font>

904
00:45:00,570 --> 00:45:06,990
never assume that a client<font color="#E5E5E5"> is absolutely</font>

905
00:45:04,200 --> 00:45:08,730
safe to connect to and restrictive

906
00:45:06,990 --> 00:45:11,520
access control<font color="#CCCCCC"> list should</font><font color="#E5E5E5"> be</font><font color="#CCCCCC"> in</font><font color="#E5E5E5"> place</font>

907
00:45:08,730 --> 00:45:13,200
for<font color="#E5E5E5"> all</font><font color="#CCCCCC"> of the</font><font color="#E5E5E5"> LSI devices as I said</font>

908
00:45:11,520 --> 00:45:14,940
<font color="#E5E5E5">most of the service providers rely on</font>

909
00:45:13,200 --> 00:45:16,680
the fact that the MPLS<font color="#E5E5E5"> network should</font>

910
00:45:14,940 --> 00:45:18,990
<font color="#E5E5E5">not be reachable from the outside world</font>

911
00:45:16,680 --> 00:45:22,169
<font color="#E5E5E5">so they have ssh enable on every single</font>

912
00:45:18,990 --> 00:45:24,959
device without filtering traffic from

913
00:45:22,170 --> 00:45:27,300
within the MPLS<font color="#CCCCCC"> network for</font><font color="#E5E5E5"> the purpose</font>

914
00:45:24,960 --> 00:45:30,480
of securely accessing<font color="#CCCCCC"> LS already voices</font>

915
00:45:27,300 --> 00:45:34,140
it's good to have<font color="#E5E5E5"> a management vrf with</font>

916
00:45:30,480 --> 00:45:37,080
white list for only admin workstations

917
00:45:34,140 --> 00:45:39,960
for example secure management protocols

918
00:45:37,080 --> 00:45:43,049
I guess that's absolutely obvious using

919
00:45:39,960 --> 00:45:47,040
SNMP version three https and ssh as

920
00:45:43,050 --> 00:45:50,040
opposed to an SNMP one or two HTTP and

921
00:45:47,040 --> 00:45:51,920
telnet now the routing protocols and the

922
00:45:50,040 --> 00:45:55,259
MPLS signaling protocol<font color="#CCCCCC"> should be</font>

923
00:45:51,920 --> 00:45:57,090
authenticated mpls signaling protocols

924
00:45:55,260 --> 00:45:59,910
are the protocols used for distributing

925
00:45:57,090 --> 00:46:04,470
label information across the across the

926
00:45:59,910 --> 00:46:06,420
MPLS provider network<font color="#E5E5E5"> unica unicast</font>

927
00:46:04,470 --> 00:46:09,149
reverse back forwarding is a mechanism

928
00:46:06,420 --> 00:46:12,890
as far as<font color="#CCCCCC"> I know implemented it's in</font>

929
00:46:09,150 --> 00:46:18,420
Cisco devices this<font color="#E5E5E5"> mechanism basically</font>

930
00:46:12,890 --> 00:46:21,180
captures attempts for forging source IP

931
00:46:18,420 --> 00:46:23,070
addresses and if a source IP address is

932
00:46:21,180 --> 00:46:26,040
never supposed<font color="#E5E5E5"> to be seen on a</font>

933
00:46:23,070 --> 00:46:29,970
particular interface IP IP traffic is

934
00:46:26,040 --> 00:46:32,070
discarded centralized authentication

935
00:46:29,970 --> 00:46:34,140
authorization and accounting services

936
00:46:32,070 --> 00:46:35,490
and some sort of centralized logging is

937
00:46:34,140 --> 00:46:39,990
highly recommended

938
00:46:35,490 --> 00:46:41,879
if not mandatory and<font color="#E5E5E5"> what I find most</font>

939
00:46:39,990 --> 00:46:44,790
useful is having some sort of secure

940
00:46:41,880 --> 00:46:47,460
configuration baseline so<font color="#E5E5E5"> basically when</font>

941
00:46:44,790 --> 00:46:50,190
<font color="#CCCCCC">you start configuring your device you</font>

942
00:46:47,460 --> 00:46:51,720
<font color="#E5E5E5">need to come up with a fully</font><font color="#CCCCCC"> assess</font>

943
00:46:50,190 --> 00:46:53,460
configuration fully hardened

944
00:46:51,720 --> 00:46:55,770
configuration and then replicate this

945
00:46:53,460 --> 00:46:58,800
configuration across the devices within

946
00:46:55,770 --> 00:47:00,600
the network you need to keep track of

947
00:46:58,800 --> 00:47:04,950
every<font color="#E5E5E5"> single change that you make to the</font>

948
00:47:00,600 --> 00:47:06,868
configuration file and and<font color="#E5E5E5"> basically you</font>

949
00:47:04,950 --> 00:47:09,868
need to approve every single change

950
00:47:06,869 --> 00:47:13,740
before it is it before it is committed

951
00:47:09,869 --> 00:47:16,650
in the network a couple of ideas for

952
00:47:13,740 --> 00:47:19,319
<font color="#CCCCCC">future research or building building on</font>

953
00:47:16,650 --> 00:47:21,060
top of that<font color="#E5E5E5"> one and</font><font color="#CCCCCC"> basically we need</font>

954
00:47:19,320 --> 00:47:23,070
<font color="#E5E5E5">some sort of improvement for the vrf</font>

955
00:47:21,060 --> 00:47:25,799
hoping attack scenarios because as you

956
00:47:23,070 --> 00:47:28,350
can see right right now we rely on

957
00:47:25,800 --> 00:47:31,619
either a misconfigured device or some

958
00:47:28,350 --> 00:47:33,600
sort of poorly designed network we need

959
00:47:31,619 --> 00:47:36,240
to explore some other UDP protocols that

960
00:47:33,600 --> 00:47:39,480
may be abused remotely without having

961
00:47:36,240 --> 00:47:41,759
misconfigurations an interesting topic

962
00:47:39,480 --> 00:47:43,230
to look at is mpls signaling protocols

963
00:47:41,760 --> 00:47:45,510
as<font color="#E5E5E5"> I mentioned these are the protocols</font>

964
00:47:43,230 --> 00:47:49,080
that are we used to kind<font color="#E5E5E5"> of sink the</font>

965
00:47:45,510 --> 00:47:53,190
label information basis for the Ellis or

966
00:47:49,080 --> 00:47:56,009
devices and again fuzzing is always an

967
00:47:53,190 --> 00:48:00,600
option I think I found just<font color="#CCCCCC"> a couple of</font>

968
00:47:56,010 --> 00:48:03,570
bucks<font color="#E5E5E5"> by basic fuzzing using</font><font color="#CCCCCC"> Sully l2 so</font>

969
00:48:00,600 --> 00:48:06,450
having a proper mpls father n mpls

970
00:48:03,570 --> 00:48:09,030
related protocols father is definitely

971
00:48:06,450 --> 00:48:10,950
something to look at in the<font color="#E5E5E5"> future a</font>

972
00:48:09,030 --> 00:48:13,320
couple of acknowledgments<font color="#CCCCCC"> I want to</font>

973
00:48:10,950 --> 00:48:15,569
<font color="#E5E5E5">thank a bunch of guys</font><font color="#CCCCCC"> from mwr labs for</font>

974
00:48:13,320 --> 00:48:18,359
giving me the opportunity testing an

975
00:48:15,570 --> 00:48:21,210
MPLS production<font color="#CCCCCC"> network</font><font color="#E5E5E5"> I want to thank</font>

976
00:48:18,359 --> 00:48:23,390
Pavel Stefan off really good friend of

977
00:48:21,210 --> 00:48:27,359
mine for a kind<font color="#E5E5E5"> of helping me with</font>

978
00:48:23,390 --> 00:48:31,980
various mpls setups today I had<font color="#E5E5E5"> to build</font>

979
00:48:27,359 --> 00:48:35,009
up before<font color="#CCCCCC"> pen testing him so that was</font>

980
00:48:31,980 --> 00:48:38,460
pretty much it if you have any questions

981
00:48:35,010 --> 00:48:41,510
I'm happy to take them now or maybe drop

982
00:48:38,460 --> 00:48:41,510
me sometime later

983
00:48:58,739 --> 00:49:07,749
yeah so in your<font color="#E5E5E5"> spoofed packets for vrf</font>

984
00:49:04,359 --> 00:49:11,109
hopping and the ICMP packets that

985
00:49:07,749 --> 00:49:15,959
actually<font color="#E5E5E5"> got the echo replies back are</font>

986
00:49:11,109 --> 00:49:19,869
you just putting additional mpls header

987
00:49:15,959 --> 00:49:22,479
when normally you would not<font color="#E5E5E5"> have it yeah</font>

988
00:49:19,869 --> 00:49:26,650
exactly and put the labels from thousand

989
00:49:22,479 --> 00:49:29,468
to fifteen hundred and<font color="#CCCCCC"> send five hundred</font>

990
00:49:26,650 --> 00:49:34,239
packets yeah that's<font color="#CCCCCC"> exactly so basically</font>

991
00:49:29,469 --> 00:49:37,259
<font color="#E5E5E5">in certain cases a provider edge device</font>

992
00:49:34,239 --> 00:49:40,739
would not process pre encapsulated ICMP

993
00:49:37,259 --> 00:49:43,420
pre encapsulated in mpls ICMP traffic

994
00:49:40,739 --> 00:49:46,509
but a bunch of vendors were found to

995
00:49:43,420 --> 00:49:48,880
having mpls globally enabled and not

996
00:49:46,509 --> 00:49:51,009
having<font color="#E5E5E5"> the option of disabling mpls on a</font>

997
00:49:48,880 --> 00:49:53,170
<font color="#E5E5E5">particular interface so by default a</font>

998
00:49:51,009 --> 00:49:56,949
client when generating an ICMP echo

999
00:49:53,170 --> 00:50:00,420
request it would send it encapsulated in

1000
00:49:56,949 --> 00:50:03,849
IP but for this<font color="#E5E5E5"> attack to work you can</font>

1001
00:50:00,420 --> 00:50:05,559
encapsulate this IP encapsulating ICMP

1002
00:50:03,849 --> 00:50:07,930
and capsulate the whole thing in mpls

1003
00:50:05,559 --> 00:50:09,969
and relying on the fact that a<font color="#E5E5E5"> bunch of</font>

1004
00:50:07,930 --> 00:50:12,129
vendors are affected by this and would

1005
00:50:09,969 --> 00:50:14,890
process the MPLS traffic on an IP

1006
00:50:12,130 --> 00:50:18,160
interface so yeah that's that's how it

1007
00:50:14,890 --> 00:50:21,129
works<font color="#CCCCCC"> okay and the status</font><font color="#E5E5E5"> of research is</font>

1008
00:50:18,160 --> 00:50:24,578
that<font color="#E5E5E5"> some injection is possible but</font>

1009
00:50:21,130 --> 00:50:33,579
there is no research<font color="#E5E5E5"> on leaking from</font>

1010
00:50:24,579 --> 00:50:36,969
other vrf right again so you succeeded

1011
00:50:33,579 --> 00:50:40,749
putting some traffic from vrf a tu verus

1012
00:50:36,969 --> 00:50:44,079
be but uh was there<font color="#E5E5E5"> any possibility of</font>

1013
00:50:40,749 --> 00:50:45,999
like sniffing packets yeah you're right

1014
00:50:44,079 --> 00:50:50,319
<font color="#CCCCCC">sure yeah I got the question so yeah</font>

1015
00:50:45,999 --> 00:50:53,558
there was no way I found<font color="#E5E5E5"> no way to kind</font>

1016
00:50:50,319 --> 00:50:55,690
of leak traffic outside of a vrf or in

1017
00:50:53,559 --> 00:50:59,289
most of the cases even get a response

1018
00:50:55,690 --> 00:51:01,630
<font color="#CCCCCC">back so this is exactly the equivalent</font>

1019
00:50:59,289 --> 00:51:03,670
of ill and hoping most of the time if

1020
00:51:01,630 --> 00:51:05,589
you<font color="#E5E5E5"> don't have a misconfigured network</font>

1021
00:51:03,670 --> 00:51:07,060
or a poorly designed<font color="#CCCCCC"> ex work you will</font>

1022
00:51:05,589 --> 00:51:10,830
never receive the request back

1023
00:51:07,060 --> 00:51:10,830
okay all right thank you that's it

1024
00:51:20,069 --> 00:51:27,640
how did a speaking to this following any

1025
00:51:24,640 --> 00:51:29,979
<font color="#E5E5E5">in the wild scenarios where this</font>

1026
00:51:27,640 --> 00:51:32,609
happened where attackers were caught

1027
00:51:29,979 --> 00:51:39,928
doing that or trying to infiltrate an an

1028
00:51:32,609 --> 00:51:43,390
<font color="#CCCCCC">mpls provider to miss miss configure the</font>

1029
00:51:39,929 --> 00:51:45,789
not as far as<font color="#E5E5E5"> i know and i guess for</font>

1030
00:51:43,390 --> 00:51:47,949
most of the attackers it would be easier

1031
00:51:45,789 --> 00:51:51,249
to<font color="#E5E5E5"> kind of break in the data center and</font>

1032
00:51:47,949 --> 00:51:54,699
get physical connectivity to the network

1033
00:51:51,249 --> 00:51:58,178
but as far as<font color="#CCCCCC"> i know there haven't been</font>

1034
00:51:54,699 --> 00:52:02,499
any vulnerabilities published right

1035
00:51:58,179 --> 00:52:05,410
until<font color="#CCCCCC"> i reported some of these so caught</font>

1036
00:52:02,499 --> 00:52:15,819
in the wild<font color="#CCCCCC"> I'm probably safely to</font>

1037
00:52:05,410 --> 00:52:21,038
assume no actually<font color="#E5E5E5"> I would like</font><font color="#CCCCCC"> to</font>

1038
00:52:15,819 --> 00:52:28,058
<font color="#E5E5E5">answer to previous version because we</font>

1039
00:52:21,039 --> 00:52:33,459
had once almost the same work project to

1040
00:52:28,059 --> 00:52:38,999
test a network with mpls subsystem

1041
00:52:33,459 --> 00:52:41,678
something like that and actually we

1042
00:52:38,999 --> 00:52:45,038
successfully attacked in pls core

1043
00:52:41,679 --> 00:52:53,890
network and get what access into it yes

1044
00:52:45,039 --> 00:52:58,269
but<font color="#CCCCCC"> mm but we used I don't know common</font>

1045
00:52:53,890 --> 00:53:00,219
ways to hug something like so it was not

1046
00:52:58,269 --> 00:53:02,709
<font color="#E5E5E5">an issue with an MPLS configuration but</font>

1047
00:53:00,219 --> 00:53:08,559
rather there yeah<font color="#CCCCCC"> a</font><font color="#E5E5E5"> kind of variation of</font>

1048
00:53:02,709 --> 00:53:11,038
devices yeah but if if we would know

1049
00:53:08,559 --> 00:53:14,709
<font color="#E5E5E5">these information that you told us today</font>

1050
00:53:11,039 --> 00:53:19,839
it was it would be really useful<font color="#E5E5E5"> for us</font>

1051
00:53:14,709 --> 00:53:22,529
so thank you<font color="#E5E5E5"> thanks it would be nice to</font>

1052
00:53:19,839 --> 00:53:22,529
have a chat anyway

1053
00:53:27,450 --> 00:53:31,140
okay thanks guys

