1
00:00:00,000 --> 00:00:11,040
to get my team win policy community and
probably at some of us

2
00:00:11,040 --> 00:00:18,270
hello everyone first of all really sorry
for not speaking in Russian but my

3
00:00:18,270 --> 00:00:22,759
russians really rusty I come from
Bulgaria and I understand most of the

4
00:00:22,759 --> 00:00:31,029
stuff you guys are saying I can't really
talk and Russian so I do security

5
00:00:31,029 --> 00:00:37,739
research for a company called MWR andy
kay and talk today will be about 10

6
00:00:37,739 --> 00:00:43,370
testing MPLS networks and pls is
basically a service provider technology

7
00:00:43,370 --> 00:00:49,470
that I'll be talking about 10 details in
just a moment so the agenda for today is

8
00:00:49,470 --> 00:00:56,350
a quick overview of what MPLS is some
quick inspection of some previous MPLS

9
00:00:56,350 --> 00:01:00,810
research and then moving on to the
interesting bits of the test talk which

10
00:01:00,810 --> 00:01:08,070
is reconnaissance for MPLS networks
introducing a VRF hoping which is an

11
00:01:08,070 --> 00:01:14,470
interesting attack for breaking out of
MPLS VPNs and then I'll give some advice

12
00:01:14,470 --> 00:01:20,800
on securing and hardening MPLS networks
MPLS environments and of course a few

13
00:01:20,800 --> 00:01:26,700
ideas on improving this research and
probably ideas on building up on that

14
00:01:26,700 --> 00:01:35,490
research for the purpose of extending it
so what is MPLS MPLS is the most widely

15
00:01:35,490 --> 00:01:41,880
East mechanism if you want to ecology
and service provided thats fucks its

16
00:01:41,880 --> 00:01:48,610
lair 2.5 protocol used and
telecommunication networks

17
00:01:48,610 --> 00:01:53,289
high-performance telecommunications
networks where the reliability of the

18
00:01:53,290 --> 00:02:01,030
communication is kind of critical
basically this protocol is design for

19
00:02:01,030 --> 00:02:06,560
the purpose of processing information as
fast as possible from point A to point B

20
00:02:06,560 --> 00:02:08,110
and the way it works

21
00:02:08,110 --> 00:02:15,590
ace by looking up labels as opposed to
looking up destination IP addresses and

22
00:02:15,590 --> 00:02:20,510
that's where the efficiency comes from
because their structure of an MPLS label

23
00:02:20,510 --> 00:02:24,760
is a lot less complicated compared to
their destination IP address and the

24
00:02:24,760 --> 00:02:30,250
process of looking up a label label
information base is a lot less

25
00:02:30,250 --> 00:02:34,870
complicated compared to looking up a
destination address in a routing table

26
00:02:34,870 --> 00:02:43,110
so that's the main d friends there is
only a single longest prefix match when

27
00:02:43,110 --> 00:02:48,540
the traffic is handling Thu vien Telus
network and from there on the only

28
00:02:48,540 --> 00:02:57,099
transition is based on looking up label
Alice so a lot of providers they build

29
00:02:57,099 --> 00:03:05,099
VPN services on top of MPLS layer free
services or layer 2 services in this

30
00:03:05,099 --> 00:03:16,170
talk I'll be reviewing a layer 3
architectures so there is a few things I

31
00:03:16,170 --> 00:03:20,649
need to mention before proceeding with
the actual content

32
00:03:20,650 --> 00:03:25,500
these are the terms they'll be using
throughout the talk you don't have to

33
00:03:25,500 --> 00:03:35,379
remember all of these but excuse me but
you have to understand some basics about

34
00:03:35,379 --> 00:03:42,948
how MPLS functions and what our devices
involved in an MPLS process so I already

35
00:03:42,949 --> 00:03:47,919
mention MPLS works with labels there are
three operations defined for these

36
00:03:47,919 --> 00:03:52,750
labels pushing labels on a stack popping
labels off a stack and swapping labels

37
00:03:52,750 --> 00:04:00,239
on the stack these labels are at sweat
our twenty be values and the first 12 16

38
00:04:00,239 --> 00:04:05,459
labels are reserved for special purposes
I'll be probably mentioning some of

39
00:04:05,459 --> 00:04:06,889
these in a bit

40
00:04:06,889 --> 00:04:14,919
devices in Device is that process MPLS
traffic record label switching routers

41
00:04:14,919 --> 00:04:21,978
or lso's the provide the reality is a
route that stands somewhere within the

42
00:04:21,978 --> 00:04:28,550
core of the network processing pure MPLS
traffic labor edge router is an MPLS

43
00:04:28,550 --> 00:04:33,550
enabled service provider revised
processes MPLS traffic but also hand

44
00:04:33,550 --> 00:04:39,010
those the ingress customer traffic
translates IP traffic into MPLS traffic

45
00:04:39,010 --> 00:04:44,740
this one is also called provider edge
device and there is the label switched

46
00:04:44,740 --> 00:04:51,260
path which is the logical sir quick from
circuit from one end of the MPLS network

47
00:04:51,260 --> 00:04:57,380
to the other end of the MPLS network and
it kind of defines their children out

48
00:04:57,380 --> 00:05:04,450
where the customer traffic will flow
customer edge device is the customer

49
00:05:04,450 --> 00:05:08,060
device connecting to their service
provider infrastructure so it's

50
00:05:08,060 --> 00:05:12,590
basically the last device from the
customer's site connecting to their

51
00:05:12,590 --> 00:05:20,780
private provider right rather now I need
to introduce another cold your children

52
00:05:20,780 --> 00:05:26,619
and forwarding their children in from
watering allows multiple instances of a

53
00:05:26,620 --> 00:05:31,800
routing table to exist and operate at
the same time on the same device so if

54
00:05:31,800 --> 00:05:36,820
you know about VLANs you can think about
a VRF as the equivalent of a VLAN on

55
00:05:36,820 --> 00:05:43,349
layer 3 you can you can have separate
browsers basically separate virtual

56
00:05:43,350 --> 00:05:49,130
instances of a rather running on top of
the same physical rather one thing to

57
00:05:49,130 --> 00:05:53,400
mention and to remember is that the
arrests are only likely significance of

58
00:05:53,400 --> 00:06:01,010
the device where these are configured so
this is a really basic example of what

59
00:06:01,010 --> 00:06:06,110
an MPLS network would look like you see
the customer edge device as I mentioned

60
00:06:06,110 --> 00:06:13,860
that the device connecting the customer
to provide these customer edged device

61
00:06:13,860 --> 00:06:18,150
connecting to the provider at each
device from the cut from the service

62
00:06:18,150 --> 00:06:26,280
provider side within the MPLS network
you have MPLS this processing pure MPLS

63
00:06:26,280 --> 00:06:32,299
traffic these are called core MPLS
devices or just provider edge devices on

64
00:06:32,300 --> 00:06:39,680
the other side of the scheme you have
the exactly same equivalent a few more

65
00:06:39,680 --> 00:06:46,590
words on MPLS and what does and then pls
have a look like and where these headers

66
00:06:46,590 --> 00:06:55,619
it's so MPLS as I said processing labels
these labels are stored

67
00:06:55,620 --> 00:07:00,830
these information about the labels is
stored in an equivalent of a routing

68
00:07:00,830 --> 00:07:06,500
table cold label information base and of
course I look up in the label

69
00:07:06,500 --> 00:07:13,650
information base would give you a
destination for the LSB according to the

70
00:07:13,650 --> 00:07:20,530
label and a destination your processing
for MPLS encapsulation and how does this

71
00:07:20,530 --> 00:07:25,260
work so basically at the edge of the
network you see the provider edge device

72
00:07:25,260 --> 00:07:31,390
it receives IP traffic these IP traffic
needs to be encapsulated in MPLS before

73
00:07:31,390 --> 00:07:36,890
it is processed further within the MPLS
network so at the edge of this network

74
00:07:36,890 --> 00:07:42,909
the prior age device will take the IP
traffic stickin' MPLS here in between

75
00:07:42,910 --> 00:07:47,980
the internet head up and the IP header
and that's why the MPLS a product is

76
00:07:47,980 --> 00:07:54,020
called a layer 2.5 protocol the
interesting thing is I already mentioned

77
00:07:54,020 --> 00:07:58,430
you have three operations for the labels
pushing popping in swapping and that's

78
00:07:58,430 --> 00:08:04,670
because you can have multiple MPLS
Heather as MPLS headers stick on top of

79
00:08:04,670 --> 00:08:09,500
each other so you can imagine you can
have three or four MPLS headers

80
00:08:09,500 --> 00:08:13,000
depending on the complexity of the
network and and the traffic engineering

81
00:08:13,000 --> 00:08:20,750
strategies for the service provider
that's what an MPLS had a look like I

82
00:08:20,750 --> 00:08:26,540
already mentioned the label field is
twenty Bates field it's a name to the

83
00:08:26,540 --> 00:08:30,660
experimental field as far as I know as
far as I can remember is not being used

84
00:08:30,660 --> 00:08:36,670
at the moment I don't think are
performed at Emma's anyway now I'm not

85
00:08:36,669 --> 00:08:44,670
doing it because it will take way too
long for my software to boot the

86
00:08:44,670 --> 00:08:49,180
experimental field not being used as I
say the bottom of this label stack

87
00:08:49,180 --> 00:08:57,750
maynes by there this is Heather in the
series of MPLS here there is if there is

88
00:08:57,750 --> 00:08:59,420
more than one of those

89
00:08:59,420 --> 00:09:05,420
and the TTL ace exactly the equivalent
of the TCON an IP here there are eight

90
00:09:05,420 --> 00:09:11,640
keys used for preventing loops within
the network so a little bit of

91
00:09:11,640 --> 00:09:17,880
retrospection a little bit about some
MPLS research performed in the past in

92
00:09:17,880 --> 00:09:22,280
the past the most notable research that
would like to mention as the one from an

93
00:09:22,280 --> 00:09:29,640
array from Aaron W from 2006 another
really good piece of research is MPLS

94
00:09:29,640 --> 00:09:36,330
security overview from Carson Fisher
from Meijer am late and just recently

95
00:09:36,330 --> 00:09:42,280
there is a nice interesting blog from
Cali slabs about the basics of pen

96
00:09:42,280 --> 00:09:48,920
testing MPLS networks so what is coming
for most of these pieces of research is

97
00:09:48,920 --> 00:09:55,069
that they assume that there must be a
Miss conflagration in the service

98
00:09:55,070 --> 00:10:00,340
provider network to perform most of the
critical attacks so they assume that

99
00:10:00,340 --> 00:10:05,250
either there is a misconfiguration or
that an attacker is able to over 80 get

100
00:10:05,250 --> 00:10:11,170
access to the core of the network so if
you're an attack and you have access to

101
00:10:11,170 --> 00:10:15,260
the MPLS core it's pretty much came over
because from the MPLS core you can

102
00:10:15,260 --> 00:10:18,450
manipulate labels can jump

103
00:10:18,450 --> 00:10:24,650
VPNs and you can kind of mess with
traffic engineering strategies in the

104
00:10:24,650 --> 00:10:30,220
network as so that's that's the most
common thing for these pieces of

105
00:10:30,220 --> 00:10:37,490
research so far I'm gonna start MPLS
reconnaissance imagine that you are a

106
00:10:37,490 --> 00:10:45,150
client or performing a pen test for an
MPLS provider the most basic thing that

107
00:10:45,150 --> 00:10:47,910
you can do right in the beginning

108
00:10:47,910 --> 00:10:52,850
reconnaissance based on the physical
connectivity to the service provider

109
00:10:52,850 --> 00:10:57,600
device that easy have later took an
activity and based on these Larry took

110
00:10:57,600 --> 00:11:02,010
an activity can get information such as
the MAC address of the remote remote

111
00:11:02,010 --> 00:11:10,390
system based on that you can kind of get
an idea about the defender of the system

112
00:11:10,390 --> 00:11:13,080
sitting between und MPLS network

113
00:11:13,080 --> 00:11:19,470
which may be useful packet capturing may
be useful because a lot of providers

114
00:11:19,470 --> 00:11:25,790
forget to kind of filter management
protocol such as LLDP CD p.m. M&D PD's

115
00:11:25,790 --> 00:11:29,699
are layer 2 protocol is used for
advertising a lot of useful information

116
00:11:29,700 --> 00:11:37,610
to an attacker so for example LDP used
for use by phpdug pot and other

117
00:11:37,610 --> 00:11:43,650
providers CDP is another one from Cisco
a proprietary 1 I'm NDP is another one

118
00:11:43,650 --> 00:11:47,449
from my critique as far as I can
remember and all of these protocols they

119
00:11:47,450 --> 00:11:54,470
advertise a bunch of data related to the
system such as the operating system

120
00:11:54,470 --> 00:11:59,500
version the firmware version firmware
version the number of interfaces on

121
00:11:59,500 --> 00:12:04,150
their system and in certain cases some
configuration specifics related to the

122
00:12:04,150 --> 00:12:08,310
system I so by default most of these
devices they would have retired

123
00:12:08,310 --> 00:12:13,420
extremely on every single interface and
if the service provider forget to kind

124
00:12:13,420 --> 00:12:18,630
of feel the sort of traffic you can
easily get this information for free in

125
00:12:18,630 --> 00:12:25,010
certain cases a lot a lot less often and
let's say you may get misconfigured

126
00:12:25,010 --> 00:12:31,530
service provider devices advertising
routing protocol information on to the

127
00:12:31,530 --> 00:12:36,699
customer interface so basically a
service provider trying to establish a

128
00:12:36,700 --> 00:12:44,070
nice PDF PDF session with a custom out
without even realizing it so as I said a

129
00:12:44,070 --> 00:12:48,370
lot less often but you may still see
that and the last one and I guess the

130
00:12:48,370 --> 00:12:53,000
most obvious one is to perform a port
scan on this service provider device

131
00:12:53,000 --> 00:12:56,590
that you are directly connected to and
you can get information about the

132
00:12:56,590 --> 00:13:05,400
running services so according to these
RNC called security of BGP MPLS IP VPNs

133
00:13:05,400 --> 00:13:09,890
it is recommended for the service
provider as well as well for the

134
00:13:09,890 --> 00:13:15,460
customers to kind of hide and obscure
there at the structure of the MPLS

135
00:13:15,460 --> 00:13:22,100
network so basically if I'm name pls
customer let me see if I have my diagram

136
00:13:22,100 --> 00:13:26,510
if I am an MPLS customer on client side
and clients

137
00:13:26,510 --> 00:13:30,120
I'd be basically heading to remote
offices and I want secure connectivity

138
00:13:30,120 --> 00:13:36,180
between to these two offices when I send
traffic from office to office be I

139
00:13:36,180 --> 00:13:41,140
shouldn't be able to reveal any details
about the interconnections in the

140
00:13:41,140 --> 00:13:42,939
service provider network

141
00:13:42,940 --> 00:13:47,050
basically I should have no idea about
the number of intermediate devices the

142
00:13:47,050 --> 00:13:52,370
IP addresses of these devices and the
label information used for forwarding

143
00:13:52,370 --> 00:13:58,370
traffic so basically these out of C
tells you that you should be able to

144
00:13:58,370 --> 00:14:02,530
hide your next work and you should do
that as part of the security best

145
00:14:02,530 --> 00:14:06,699
practices how is this thing

146
00:14:06,700 --> 00:14:10,840
achieved in MPLS networks there seemed
like any sums one of them called I

147
00:14:10,840 --> 00:14:16,390
potential propagation dead-on cold ICMP
tunneling I PTL propagation is the

148
00:14:16,390 --> 00:14:24,069
process of taking I P trap fake IP
packets hoping the TCL into the attic

149
00:14:24,070 --> 00:14:29,720
preventing the TTL ask copied from the
IP header and sticking into an MPLS head

150
00:14:29,720 --> 00:14:33,520
up so basically at the edge of the
network the provider edge device takes

151
00:14:33,520 --> 00:14:42,010
the pockets process the IP header across
is the IP header and takes TTL this is

152
00:14:42,010 --> 00:14:46,240
enabled by default for most of the
vendors if not for all of them and

153
00:14:46,240 --> 00:14:53,600
propagating GTL main steps and attacker
may be able to reveal the number of

154
00:14:53,600 --> 00:14:59,010
intermediate devices by manipulating the
TTL value will see that in a bit

155
00:14:59,010 --> 00:15:07,710
ICMP tunneling is another one so imagine
again let's get to the diagram I'm trace

156
00:15:07,710 --> 00:15:12,910
routing from customers site 8 customer
site be if there is an ICMP error

157
00:15:12,910 --> 00:15:19,670
message generated along the LSB along
the path between my office and my office

158
00:15:19,670 --> 00:15:25,689
be these ICMP error message needs to be
routed back to me but the core MPLS

159
00:15:25,690 --> 00:15:31,620
devices would have no idea about writing
this message back to my originating

160
00:15:31,620 --> 00:15:34,510
point because of the lack of routing
information

161
00:15:34,510 --> 00:15:38,120
remember that the core devices will only
process data

162
00:15:38,120 --> 00:15:45,120
and traffic based on the labels so
imagine there's a TTL time exceed it

163
00:15:45,120 --> 00:15:48,540
generate it somewhere in the service
provider network

164
00:15:48,540 --> 00:15:54,640
ICMP error message needs to be sure that
all the way to the Father and of the VRF

165
00:15:54,640 --> 00:16:00,380
to the far end of MPLS network for the
provider edge device before it gets

166
00:16:00,380 --> 00:16:05,500
routed back to the originating point so
that's the purpose of ICMP tunneling if

167
00:16:05,500 --> 00:16:09,920
there is no ICMP tiling there's no way
for an MPLS device to get the error

168
00:16:09,920 --> 00:16:16,219
message back to the client so this is
the sample MPLS topology that I'll be

169
00:16:16,220 --> 00:16:21,490
using for most of the examples and
unfortunately not for a demo is because

170
00:16:21,490 --> 00:16:30,220
I won't be able to them you have to
remote offices can access it via an MPLS

171
00:16:30,220 --> 00:16:39,310
layer 3 VPN and there is one quarter
device and to provide their ages so

172
00:16:39,310 --> 00:16:44,810
let's say ICMP tunneling is enabled and
I potential propagation is enabled as

173
00:16:44,810 --> 00:16:51,010
well this means that I am able to see
forests a provider edge device to use a

174
00:16:51,010 --> 00:16:55,459
specific TTL and East et al would
eventually expire somewhere within the

175
00:16:55,459 --> 00:17:02,209
MPLS network when these TTL exposure is
there is an ICMP timex TTL time exceeded

176
00:17:02,209 --> 00:17:06,980
message generated and the TTL and these
ICMP messages routed back to me because

177
00:17:06,980 --> 00:17:13,760
of the ICMP timing being enabled so in
this case in an insecure configuration

178
00:17:13,760 --> 00:17:18,990
we can reveal the IP addresses for the
internal network as well as the MPLS

179
00:17:18,990 --> 00:17:26,390
labels used within the MPLS network in a
nutshell

180
00:17:26,390 --> 00:17:30,990
have a secure configuration in a to
disable TTL propagation and you need to

181
00:17:30,990 --> 00:17:36,309
disable ICMP tunneling I you need to
disable IP detail propagation at the

182
00:17:36,309 --> 00:17:40,950
edge of the network because that's where
the teacher propagation happens and you

183
00:17:40,950 --> 00:17:46,460
need to disable ICMP timing all along
the LSB so basically every single MPLS

184
00:17:46,460 --> 00:17:49,900
if I should have ICMP tunneling disables

185
00:17:49,900 --> 00:17:57,870
now let's consider secure scenario where
ICMP channeling is disabled and CTO

186
00:17:57,870 --> 00:18:03,199
propagation IPL propagation he said well
as well so the first and most basic

187
00:18:03,200 --> 00:18:08,620
question ace how would I know about the
number of intermediate devices between

188
00:18:08,620 --> 00:18:14,399
my customers paying customers side B
that's not really useful information but

189
00:18:14,400 --> 00:18:20,090
it's a good start for us so a basic
animation technique may reveal the

190
00:18:20,090 --> 00:18:25,889
number of these devices at this consists
of three encapsulating ICMP echo request

191
00:18:25,890 --> 00:18:33,750
in MPLS using sequential incrementing
teaching else again this applies only to

192
00:18:33,750 --> 00:18:37,610
a few vendors that I've been able to
test a certain amount of vendors was

193
00:18:37,610 --> 00:18:44,000
unaffected by these particular technique
a prerequisite for this attack to work

194
00:18:44,000 --> 00:18:50,260
is for a pee a provider edge device to
process MPLS traffic received on an IP

195
00:18:50,260 --> 00:18:54,879
interface now these may be either
because of a misconfiguration or because

196
00:18:54,880 --> 00:19:03,140
of a faulty implementation excuse me so
that's the way we craft the packets and

197
00:19:03,140 --> 00:19:09,270
imagine I'm executing this command this
is this is output from escapee

198
00:19:09,270 --> 00:19:13,500
mhm executing this command from clients
I a device

199
00:19:13,500 --> 00:19:21,560
first of all loading their MPLS module
which is not included by default then

200
00:19:21,560 --> 00:19:26,649
preparing the Ethernet frame with the
source MAC address of the client side a

201
00:19:26,650 --> 00:19:31,000
device and the destination MAC address
of the provider edge device the next

202
00:19:31,000 --> 00:19:36,610
layer on top of that is MPLS in this
case using labels Hira and 40 CEO I'm

203
00:19:36,610 --> 00:19:41,790
using range 0 to four so basically these
will generate four packets with

204
00:19:41,790 --> 00:19:49,770
sequential incriminating details for for
the IP layer I use soros suggest the

205
00:19:49,770 --> 00:19:55,680
client-side AIP I trash and the
destination I used the destination on

206
00:19:55,680 --> 00:19:59,670
the other side of the VRF which he's
client-side be

207
00:19:59,670 --> 00:20:04,950
and on top of IPI stick and ICMP echo
request I guess this will work with

208
00:20:04,950 --> 00:20:13,650
pretty much any protocol for example TCP
or UDP so the output from this ace

209
00:20:13,650 --> 00:20:21,510
roughly about that you can see that
these are for MPLS packets for MPLS

210
00:20:21,510 --> 00:20:27,870
datagrams being sent and for the first
three of those I get an ICMP time

211
00:20:27,870 --> 00:20:35,169
exceeded in transit so basically this
means that if I send relabeled ICMP

212
00:20:35,170 --> 00:20:40,080
request with TTL 0 the provider age
device would know the number of

213
00:20:40,080 --> 00:20:44,639
intermediate devices and it was
calculated for me and it would say 0

214
00:20:44,640 --> 00:20:49,880
wouldn't get a job so then I can repeat
this tasked with implementing the TTL

215
00:20:49,880 --> 00:20:56,590
and this case one and again the provider
edge device will politely tell me kindly

216
00:20:56,590 --> 00:21:02,520
tell me that they wouldn't look as well
it wasn't working so basically that's

217
00:21:02,520 --> 00:21:06,470
the way I can remove the number of
intermediate devices as I said nothing

218
00:21:06,470 --> 00:21:13,530
really interesting so far it's get to
know roughly the size of the service

219
00:21:13,530 --> 00:21:18,060
provider network you're dealing with
roughly the size of the MPLS network

220
00:21:18,060 --> 00:21:25,520
that sits in between your office a any
or all of his pay so the next and i

221
00:21:25,520 --> 00:21:31,960
guess most obvious thing to do is to
reveal some MPLS service provider

222
00:21:31,960 --> 00:21:37,950
device's IP addresses that are used
within the internal network again

223
00:21:37,950 --> 00:21:42,990
consider secure security configure
device security configure network you

224
00:21:42,990 --> 00:21:48,280
have no idea detail propagation you have
no ICMP tunneling if you perform trace

225
00:21:48,280 --> 00:21:52,290
route from one side of the VREF to the
other side of the VRF

226
00:21:52,290 --> 00:21:56,810
you would only be able to see the IP
address of your own gateway and the

227
00:21:56,810 --> 00:22:06,169
destination address at the far end of
the era now this is really sloppy kinda

228
00:22:06,170 --> 00:22:12,770
stupid and on into it if I so when I
spoke to in our from around W he was

229
00:22:12,770 --> 00:22:13,090
real

230
00:22:13,090 --> 00:22:17,399
surprised to see this working and he was
like wow I didn't really think about

231
00:22:17,400 --> 00:22:22,250
that because it's not going to 88
children were by design what is this is

232
00:22:22,250 --> 00:22:27,790
basically sending an ICMP request to the
other far end of the Viera as you can

233
00:22:27,790 --> 00:22:35,360
see here but the only difference is that
I enable IP record of drought option in

234
00:22:35,360 --> 00:22:42,100
the IP header the IP record option
basically allows the intermediate

235
00:22:42,100 --> 00:22:48,189
devices to include their IP addresses in
the IP header on the way back from the

236
00:22:48,190 --> 00:22:54,860
from the destination to the source so
basically everything of intermediate

237
00:22:54,860 --> 00:22:59,189
device should consider the egress
interface take the IP address of the

238
00:22:59,190 --> 00:23:05,050
egress interface for these traffic and
stick it into the IPR are the reason

239
00:23:05,050 --> 00:23:13,190
this shouldn't worry is because I'm pls
to 2.5 protocol it's below IP and MPLS

240
00:23:13,190 --> 00:23:20,280
enabled devices should not process date
above the MPLS layer I mean that's the

241
00:23:20,280 --> 00:23:24,629
purpose of MPLS and that's why he's
being so if we shouldn't end forwarding

242
00:23:24,630 --> 00:23:29,760
traffic so fast because it will only
look up the label information as opposed

243
00:23:29,760 --> 00:23:33,960
to looking up the IP IP header
information and the IP address option

244
00:23:33,960 --> 00:23:42,310
ace is included in the IP header so in
this case to secure configuration you're

245
00:23:42,310 --> 00:23:49,159
able to get to IP addresses for MPLS
intermediate devices again I have no

246
00:23:49,160 --> 00:23:54,580
idea why this was the case I had a
conversation with some of the guys from

247
00:23:54,580 --> 00:23:59,210
the incident response for a few of for a
few of the affected vendors and there

248
00:23:59,210 --> 00:24:04,650
are they were like wow we have no idea
why he shouldn't buy these I shouldn't

249
00:24:04,650 --> 00:24:10,380
let a bystander that's that's how MPLS
is supposed to work not to process IP

250
00:24:10,380 --> 00:24:16,780
information on the way from one side to
the other side of them so at the moment

251
00:24:16,780 --> 00:24:22,700
the information we have consists of the
number of intermediate devices and a

252
00:24:22,700 --> 00:24:25,010
couple of IP addresses for these devices

253
00:24:25,010 --> 00:24:31,200
now because we know how I peed record
option works is it gives us the

254
00:24:31,200 --> 00:24:35,930
information that we have to the IP
addresses for the aggressing two phases

255
00:24:35,930 --> 00:24:44,210
so basically the IP address used by DMK
less on the way back so when we sent

256
00:24:44,210 --> 00:24:47,630
traffic this traffic is being sent back
to us

257
00:24:47,630 --> 00:24:52,610
the replies being sent back to us and
these IP addresses are popped in India I

258
00:24:52,610 --> 00:25:03,810
P record options had a record options
field one thing we can try east to send

259
00:25:03,810 --> 00:25:12,870
IP traffic to any of these intermediate
devices by definition and you should not

260
00:25:12,870 --> 00:25:21,189
worry because technically we are in an
isolated environment that helps has no

261
00:25:21,190 --> 00:25:28,310
overlap wait there any other view or in
certain cases the management VRF or you

262
00:25:28,310 --> 00:25:33,679
can consider it a global routing table
as kind of a default VRF so basically we

263
00:25:33,680 --> 00:25:38,470
should not be able to send traffic
outside of our own behalf

264
00:25:38,470 --> 00:25:45,650
only one or I think two of their cases
and case was not really true so

265
00:25:45,650 --> 00:25:52,130
basically once we get the IP addresses
point one and point six we can kind of

266
00:25:52,130 --> 00:25:57,410
intending gently guests the other side
of the connection be case in an MPLS

267
00:25:57,410 --> 00:26:02,520
network most of these connections will
be point-to-point connections and if if

268
00:26:02,520 --> 00:26:07,170
these are properly configure network
devices they should use a / 30 subnet

269
00:26:07,170 --> 00:26:11,470
mask which allows only 42 Valley IP
addresses to be used on the network so

270
00:26:11,470 --> 00:26:15,530
we can kind of assume what is the IP
address on the other side of the

271
00:26:15,530 --> 00:26:22,870
point-to-point link in this case we can
kind of guessed 2.2 IP address used on

272
00:26:22,870 --> 00:26:30,250
the provider edge device told us and in
this particular case I can't really say

273
00:26:30,250 --> 00:26:34,920
the name of the end up but we've been
able to send traffic directly to an MPLS

274
00:26:34,920 --> 00:26:37,970
enable interface part of the MPLS
network

275
00:26:37,970 --> 00:26:43,960
why use these bad this is kinda bad
because I network administrator and

276
00:26:43,960 --> 00:26:47,990
network engineer at would consider the
MPLS network to not be accessible from

277
00:26:47,990 --> 00:26:54,930
the outside world so imagine they have
s8 running on da MPLS enabled devices

278
00:26:54,930 --> 00:26:59,370
but they've been smart enough to feel
their SSH on the custom interfaces but

279
00:26:59,370 --> 00:27:04,979
still allow SSH within the network
itself so in this case I say it would

280
00:27:04,980 --> 00:27:08,830
not be accessible on the customer-facing
interface but it would still be

281
00:27:08,830 --> 00:27:14,389
accessible on the MPLS enabled interface
so being able to send traffic and

282
00:27:14,390 --> 00:27:18,440
receive traffic back from an MPLS label
interface is back for that particular

283
00:27:18,440 --> 00:27:28,220
reason there is two or three kind of so
far

284
00:27:28,220 --> 00:27:33,120
minor issues with MPLS implementations I
tested about six or seven

285
00:27:33,120 --> 00:27:39,879
implementations one Vic 3011 vendor was
unaffected a few vendors were affected

286
00:27:39,880 --> 00:27:43,870
by one or more of these issues and one
vendor was affected by all of these

287
00:27:43,870 --> 00:27:49,949
issues an interesting thing to check is
basically perform these tests in a

288
00:27:49,950 --> 00:27:54,750
network where there's multiple vendors
basically having a provider edge device

289
00:27:54,750 --> 00:27:59,270
from vendor X provide a recording device
from vendor why and another provider

290
00:27:59,270 --> 00:28:04,340
directly from vendor is let's say
because I assume results will differ

291
00:28:04,340 --> 00:28:11,100
because of the various former be
expecting various lenders so that was

292
00:28:11,100 --> 00:28:21,500
about where we kind of get and gather as
much information as we can about the

293
00:28:21,500 --> 00:28:27,450
service provider network without any
activity tax without any interruptions

294
00:28:27,450 --> 00:28:34,080
or kind of aggressive offensive traffic
being sent

295
00:28:34,080 --> 00:28:40,570
now imagine I mention imagine I'm sorry
every member I mentioned here s hoping

296
00:28:40,570 --> 00:28:47,168
what what what is VRF actually now I
need to introduce what VRF hoping is as

297
00:28:47,169 --> 00:28:54,140
I said via if you can think about it as
kind of a virtualized network if you

298
00:28:54,140 --> 00:29:00,500
know about VLANs I assume most of you
would be most of you would know about

299
00:29:00,500 --> 00:29:05,529
the Alliance so is exactly the
equivalent of VLANs on later free you

300
00:29:05,529 --> 00:29:09,139
should not be able to break out of your
VLAN without using some sort of

301
00:29:09,139 --> 00:29:15,510
techniques like double tagging and it's
pretty much similar for the refs

302
00:29:15,510 --> 00:29:20,200
hoping would mean breaking out of the
viewer and sending traffic onto another

303
00:29:20,200 --> 00:29:26,250
VRF pretty much like VLAN hoping this
would allow for either reaching other

304
00:29:26,250 --> 00:29:32,039
customers of the network or even Chile
sending traffic to an MPLS enabled

305
00:29:32,039 --> 00:29:36,029
service provided advice part of a
management fee address so most of the

306
00:29:36,029 --> 00:29:40,289
service providers they would use as a
specifically configured via ref for

307
00:29:40,289 --> 00:29:44,970
accessing their own devices called the
management VRF if there is no management

308
00:29:44,970 --> 00:29:51,510
via if you can think about the global
routing table as the management VRF how

309
00:29:51,510 --> 00:29:58,299
hoping achieved well this is achieved by
relabeling MPLS traffic and sending onto

310
00:29:58,299 --> 00:30:02,029
the provider edge and relying on the
fact that a provider edge device within

311
00:30:02,029 --> 00:30:07,990
certain cases process and pls
encapsulated traffic sometimes due to

312
00:30:07,990 --> 00:30:17,429
meet conflagrations sometimes due to a
problematic implementation is a

313
00:30:17,429 --> 00:30:24,919
potential complication for a VRF hoping
attack could be the fact that a lot of

314
00:30:24,919 --> 00:30:29,899
service providers would use overlapping
IP address spaces for a further our

315
00:30:29,899 --> 00:30:38,850
customers so in this case and they're so
customers imagined Easter customers they

316
00:30:38,850 --> 00:30:44,230
may have the exactly same identical IP
address space now for the sake of the

317
00:30:44,230 --> 00:30:45,590
example I'm using

318
00:30:45,590 --> 00:30:49,449
separate IP address spaces
non-overlapping outdoor spaces but it is

319
00:30:49,450 --> 00:30:53,299
absolutely possible and it would be
absolutely fine for a service provided

320
00:30:53,299 --> 00:30:59,830
and a customer to use overlapping
outdoor spaces so there are still things

321
00:30:59,830 --> 00:31:03,750
we can do it via rev hoping as I say
attacking MPLS client's or attacking

322
00:31:03,750 --> 00:31:09,289
service provider devices and I'm gonna
start attacking MPLS clients so as I

323
00:31:09,289 --> 00:31:13,640
said customer traffic is supposed to
flow within a dedicated staff and

324
00:31:13,640 --> 00:31:18,850
customers different customers traffic
should not mix to get up it should flow

325
00:31:18,850 --> 00:31:24,840
only within the dedicated VREF there is
no interference communication by default

326
00:31:24,840 --> 00:31:31,110
unless this is explicitly configured
fire some sort of leaking leaking means

327
00:31:31,110 --> 00:31:36,178
leaking information from one theory into
another via rail for from the global

328
00:31:36,179 --> 00:31:39,649
routing table into a very far from
obvious reference to the global routing

329
00:31:39,649 --> 00:31:46,178
table but by default now that's not
configured anything configure of ERF a

330
00:31:46,179 --> 00:31:47,289
separate VRS

331
00:31:47,289 --> 00:31:52,830
should stay completely independent
without leaking any routes between each

332
00:31:52,830 --> 00:32:00,939
other so attacking her client's means
that we will be basically jumping VPNs

333
00:32:00,940 --> 00:32:07,140
or so-called via UPS and we will be able
to reach their customers customer H

334
00:32:07,140 --> 00:32:15,250
devices so this example I'm gonna use
for what I intended to be a couple of

335
00:32:15,250 --> 00:32:20,380
them also unfortunately not performing
them to some technical issues so we have

336
00:32:20,380 --> 00:32:28,640
customer aide who stays within VFA we
have customers who stays within via FB

337
00:32:28,640 --> 00:32:33,409
these are the yellow one and the blue
one customer a and customer be they have

338
00:32:33,409 --> 00:32:39,850
to remote offices each customer aids
devices are of one and order to and

339
00:32:39,850 --> 00:32:47,240
customer be devices are free and are for

340
00:32:47,240 --> 00:32:54,040
so I am pretending to be the attack in
the FA a pretending to be device armond

341
00:32:54,040 --> 00:32:59,750
if I sent ICMP echo request to a device
that resides on a different direction

342
00:32:59,750 --> 00:33:05,590
than my own VRF and they should
eventually should not reach the remote

343
00:33:05,590 --> 00:33:10,860
device should be discouraged right on
the edge of the MPLS network and as we

344
00:33:10,860 --> 00:33:16,340
can see we have hundred-percent packet
loss not receiving anything at all no

345
00:33:16,340 --> 00:33:24,459
ICMP error messages generated whatsoever
so on are a whore which again resides in

346
00:33:24,460 --> 00:33:30,700
a different VRF we enable ICMP debugging
just so we can see the ICMP messages as

347
00:33:30,700 --> 00:33:38,650
they arrive at the provider are provided
to customer interface then we proceeded

348
00:33:38,650 --> 00:33:44,890
with crafting packets again we took AP
loading the MPLS module if internet

349
00:33:44,890 --> 00:33:52,760
nothing interesting about it then for
MPLS TTL 64 or any TTL that will be big

350
00:33:52,760 --> 00:33:57,720
enough for traversing the network and
for a crane which in this case I used

351
00:33:57,720 --> 00:34:04,630
1000 to 1500 now these depends on the on
the size of the service provider network

352
00:34:04,630 --> 00:34:09,510
and it also depends on the vendor
systems on the vendor implementation

353
00:34:09,510 --> 00:34:14,960
some vendors would start assigning
labels from 16 which is the last the

354
00:34:14,960 --> 00:34:20,490
first non-preserved label some some
vendors will start assigning labels from

355
00:34:20,489 --> 00:34:25,259
100 some of them will start from one
thousand so having an idea about the

356
00:34:25,260 --> 00:34:31,020
vendors you are dealing with would only
make your life easier because you can

357
00:34:31,020 --> 00:34:34,469
kind of safely assume the range of
labels

358
00:34:34,469 --> 00:34:40,279
failure and configured by default on
these devices so I P source is the

359
00:34:40,280 --> 00:34:47,830
source of our one IP destination is the
source of our four again so racine 10

360
00:34:47,830 --> 00:34:56,219
destination in our bureau weekend

361
00:34:56,219 --> 00:35:03,810
500 packets actually reached the
destination basically performing work is

362
00:35:03,810 --> 00:35:13,340
what I called VRF hoping for some reason
two out of the five hundred reached our

363
00:35:13,340 --> 00:35:18,080
destination initially I assume only one
would do that but if they're

364
00:35:18,080 --> 00:35:24,420
investigating turned out that revealed
that and you to miss configuration

365
00:35:24,420 --> 00:35:29,560
issues we can smuggle more than one
request in a properly configured

366
00:35:29,560 --> 00:35:35,100
environment I think the result was only
a single packets because because of the

367
00:35:35,100 --> 00:35:47,319
assignment for the labels now this was
hoping against clients and perform for

368
00:35:47,320 --> 00:35:52,430
the purpose of reaching customer edge
devices as I mentioned there is always

369
00:35:52,430 --> 00:35:58,950
the possibility of attacking service
provider devices devices that reside on

370
00:35:58,950 --> 00:36:04,560
the service provider network that is
supposed to be kind of in vivo en

371
00:36:04,560 --> 00:36:10,570
Tranzit transparent from a customer
customer point of view and as I said

372
00:36:10,570 --> 00:36:14,180
these are it either a computer to be
part of some sort of Management the

373
00:36:14,180 --> 00:36:19,080
address or by default part of the global
routing table let you can imagine he

374
00:36:19,080 --> 00:36:27,430
some sort of a global view record in
this case I already have the IP address

375
00:36:27,430 --> 00:36:33,600
for the provider according vice and the
pea device so if I send ICMP echo

376
00:36:33,600 --> 00:36:38,270
request to this device known of these
would eventually reach the destination

377
00:36:38,270 --> 00:36:49,850
because these are discarded at the edge
of the of the MPLS network now writing

378
00:36:49,850 --> 00:36:55,850
these commands on the P device would
enable ICMP debugging and would enable

379
00:36:55,850 --> 00:37:03,430
kind of logging on the terminology I'm
currently logged on again performing the

380
00:37:03,430 --> 00:37:06,750
exactly same thing but only changing the

381
00:37:06,750 --> 00:37:11,380
destination IP address to the
destination IP address of the provider

382
00:37:11,380 --> 00:37:18,230
Corey device and this would get me again
to ICMP echo request arriving at the

383
00:37:18,230 --> 00:37:23,930
destination and to ICMP equity price
generated at the destination now because

384
00:37:23,930 --> 00:37:27,970
at the destination device will have no
information whatsoever about routing

385
00:37:27,970 --> 00:37:35,020
this information back to me these ICMP
echo replys would never reach the

386
00:37:35,020 --> 00:37:39,540
originating point in this case basically
I will have absolutely no idea whether

387
00:37:39,540 --> 00:37:44,630
my traffic was successfully delivered to
the destination because of the lack of

388
00:37:44,630 --> 00:37:51,070
response basically this is the exactly
same limitation that you face when you

389
00:37:51,070 --> 00:37:57,980
perform VLAN hoping attacks against
stateless protocol

390
00:37:57,980 --> 00:38:06,780
optical transport over UDP such as SNMP
or a TFTP or Universal Plug and Play

391
00:38:06,780 --> 00:38:15,740
etcetera etcetera ok I'm kind of running
out of time so we saw these are some

392
00:38:15,740 --> 00:38:24,750
kind of serious limitations apply to a
classic VRF hopping at SAC because of

393
00:38:24,750 --> 00:38:31,620
the lack of response received at
originating point what can we do is to

394
00:38:31,620 --> 00:38:35,790
consider a couple of scenarios in this
case a couple of scenarios one of them

395
00:38:35,790 --> 00:38:40,750
realize on a misconfigured kind of
poorly configured

396
00:38:40,750 --> 00:38:47,060
device the other one relies on
particular network design again kind of

397
00:38:47,060 --> 00:38:54,230
poor network design so the first line is
blind see configuration as you so we can

398
00:38:54,230 --> 00:38:58,490
send traffic to a customer edge device
but there is no way for us to see the

399
00:38:58,490 --> 00:39:04,169
response so if we have a configuration
file for a remote device let's say in a

400
00:39:04,170 --> 00:39:10,500
pen test scenario and we know that SNMP
is enabled on a customer edge device and

401
00:39:10,500 --> 00:39:16,400
the SNMP service is accessible on the
edge to provide a ride chillin we should

402
00:39:16,400 --> 00:39:19,840
be able to reach the SNMP service but
there will be no way for us

403
00:39:19,840 --> 00:39:27,670
to see the SNMP reply basically out
weakened forests the remote system to

404
00:39:27,670 --> 00:39:33,190
encapsulate its traffic in MPLS before
the reply sent back how he's done well

405
00:39:33,190 --> 00:39:38,610
basically we define a static route for
ourself and we define what is called an

406
00:39:38,610 --> 00:39:43,620
MPLS static binding role these data
mining rule would tell the device that

407
00:39:43,620 --> 00:39:48,220
specific traffic particular Traffic
needs to be a killing spree encapsulated

408
00:39:48,220 --> 00:39:55,189
sent to the driving range device as
opposed to being as opposed to being

409
00:39:55,190 --> 00:40:02,110
clean a clear IP traffic the limitations
of this well first of all we need to

410
00:40:02,110 --> 00:40:08,370
perform SNMP right axis community
strengths book force and depending on

411
00:40:08,370 --> 00:40:14,029
the configuration and password policies
that may not be applicable

412
00:40:14,030 --> 00:40:19,400
another complication in imitation ace
that certain management information

413
00:40:19,400 --> 00:40:26,100
basis would have these particular object
identify areas as readonly or what

414
00:40:26,100 --> 00:40:31,740
changed his object identifier is from
version to another version but the way

415
00:40:31,740 --> 00:40:38,209
to perform this is basically the way we
did the demonstration for VRF hoping

416
00:40:38,210 --> 00:40:45,390
instead of having ICMP echo requests we
have SNMP erupting UDP and these SNMP

417
00:40:45,390 --> 00:40:50,770
basically tells the remote device that a
particular object idea needs to be set

418
00:40:50,770 --> 00:40:57,490
to a particular value and again forcing
generating 500 packets having fingers

419
00:40:57,490 --> 00:41:02,350
crossed and hoping to our traffic
reaches its destination and that was

420
00:41:02,350 --> 00:41:09,910
hefty the right community string so in
this case you have 500 packets only one

421
00:41:09,910 --> 00:41:13,560
single community strength but if you
have a dictionary lists imagine for

422
00:41:13,560 --> 00:41:18,240
every single community string you would
have to send 500 packet so again not

423
00:41:18,240 --> 00:41:23,868
exactly practical but still getting us
somewhere

424
00:41:23,869 --> 00:41:31,470
now these scenarios relies on a kind of
poorly designed client network imagine

425
00:41:31,470 --> 00:41:36,819
as a company I have remote offices I
want the communication between between

426
00:41:36,819 --> 00:41:42,299
these two officers to be a secure and as
reliable as possible so I go to an MPLS

427
00:41:42,299 --> 00:41:47,609
service provider get an MPLS VPN from
office to office too but for the rest of

428
00:41:47,609 --> 00:41:52,650
my traffic I would still use internet
and these internet connectivity will be

429
00:41:52,650 --> 00:42:01,579
completely separate from the MPLS VPN
connectivity again design project was it

430
00:42:01,579 --> 00:42:05,599
having internet connectivity via
separate link and the attack scenario

431
00:42:05,599 --> 00:42:09,640
for their is hoping with a spoofed IP
address

432
00:42:09,640 --> 00:42:15,049
forcing the victim into generating and
sending responses to an Internet facing

433
00:42:15,049 --> 00:42:21,200
attack control device limitations again
that's a poor network design and

434
00:42:21,200 --> 00:42:27,149
decision it's mitigated and mitigated by
adequately configured traffic filtering

435
00:42:27,150 --> 00:42:32,430
policies and overlapping IP address
spaces would cause some serious problems

436
00:42:32,430 --> 00:42:38,868
and not even entirely sure if it's
practically possible so that's the

437
00:42:38,869 --> 00:42:41,430
attack scenario for that one

438
00:42:41,430 --> 00:42:47,769
hopping with a spoofed source IP address
in this case I pretend to be an IP

439
00:42:47,769 --> 00:42:52,470
address 101 101 101 101

440
00:42:52,470 --> 00:43:00,140
hoping sending these pre encapsulated
MPLS traffic onto our for you see the

441
00:43:00,140 --> 00:43:03,920
request is being captured on the
interface between Darfur and the

442
00:43:03,920 --> 00:43:10,769
provider H device so when the problem
when the provider age when the IRA for

443
00:43:10,769 --> 00:43:17,339
device takes these packets inspects the
source IP address it seems that the

444
00:43:17,339 --> 00:43:23,390
source IP address has been set to 101
101 101 in 1001 and because this one on

445
00:43:23,390 --> 00:43:29,009
one IP address a somewhere on the
internet because it's a public IP it

446
00:43:29,009 --> 00:43:33,239
assumes that it's safe to send the
response back onto their

447
00:43:33,239 --> 00:43:34,940
internet-connected playing

448
00:43:34,940 --> 00:43:43,240
so basically that's the way we achieve
some sort of two-way communication by

449
00:43:43,240 --> 00:43:52,319
only figuring initially from from an
MPLS facing interface now that was

450
00:43:52,319 --> 00:43:56,349
pretty much it about I'm here less
reconnaissance in VRF hoping a little

451
00:43:56,349 --> 00:44:01,440
bit about hardening their environment
now disabled i've detail propagation at

452
00:44:01,440 --> 00:44:06,380
the edge of the MPLS domain and he's
able i dnt tunneling along the LSB

453
00:44:06,380 --> 00:44:10,750
disabled management protocols and
unwanted services and customer-facing

454
00:44:10,750 --> 00:44:16,410
interfaces are basically cutting down
the attack surface generalized et al

455
00:44:16,410 --> 00:44:21,950
security mechanism is a mechanism that
prevents her from processing certain

456
00:44:21,950 --> 00:44:28,379
traffic only based on the resale value
so basically by knowing the size of your

457
00:44:28,380 --> 00:44:33,560
network you can safely assume that CTL
values outside of a specific range are

458
00:44:33,560 --> 00:44:41,369
kind of forged by by a customer and in
general it he's recommended to follow

459
00:44:41,369 --> 00:44:46,180
the best practices as specified and the
security framework for MPLS MPLS

460
00:44:46,180 --> 00:44:52,399
networks now some general guidelines not
specifically related not necessarily

461
00:44:52,400 --> 00:44:57,920
related to MPLS you should always assume
a presence of some sort of militias are

462
00:44:57,920 --> 00:45:02,030
compromised client so basically if
you're a service provider never assume

463
00:45:02,030 --> 00:45:08,079
that a client is absolutely safe to
connect restrictive access control list

464
00:45:08,079 --> 00:45:12,290
should be in place for all of the LSR
devices as I said most of the service

465
00:45:12,290 --> 00:45:16,060
providers rely on the fact that the MPLS
network should not be reachable from the

466
00:45:16,060 --> 00:45:22,200
outside world so they have SSH enabled
device without field three traffic from

467
00:45:22,200 --> 00:45:27,779
within the MPLS network for the purpose
of security accessing LSR devices it get

468
00:45:27,780 --> 00:45:34,180
it get to have a management the area
with white lace for only workstations

469
00:45:34,180 --> 00:45:39,970
for example secure management protocol's
I guess that's absolutely obvious is an

470
00:45:39,970 --> 00:45:47,098
SNMP version three HTTPS and SSH as
opposed to an SNMP one or two HTTP and

471
00:45:47,099 --> 00:45:47,700
Telnet

472
00:45:47,700 --> 00:45:52,770
now the routing protocols and the MPLS
signaling protocol should be about 20

473
00:45:52,770 --> 00:45:57,660
gated MPLS signaling protocols are
protocols used for distributing label

474
00:45:57,660 --> 00:46:02,180
information across across the MPLS
provider network

475
00:46:02,180 --> 00:46:08,569
unicast reversed by forwarding is a
mechanism as far as I know implemented

476
00:46:08,570 --> 00:46:17,730
it's in Cisco devices this mechanism
basically captures attempt for foraging

477
00:46:17,730 --> 00:46:23,079
source IP addresses and if a source IP
address is never supposed to be seen on

478
00:46:23,079 --> 00:46:29,599
a particular interface IP traffic is
discovered a centralized authentication

479
00:46:29,599 --> 00:46:34,170
authorization and accounting services
and some sort of centralized logging is

480
00:46:34,170 --> 00:46:41,290
highly recommend it if not mandatory and
what I find most useful is having some

481
00:46:41,290 --> 00:46:47,170
sort of security configuration baseline
so basically when you start your device

482
00:46:47,170 --> 00:46:52,829
you need to come up with Gration fully
hard and configuration and then

483
00:46:52,829 --> 00:46:58,400
replicate this configuration across
devices within the network you need to

484
00:46:58,400 --> 00:47:03,099
keep track of every single change that
you make to the configuration file and

485
00:47:03,099 --> 00:47:09,369
basically you need to approve every
single change before a tease before it

486
00:47:09,369 --> 00:47:16,910
is committed in the next couple of ideas
for future research or building on top

487
00:47:16,910 --> 00:47:21,379
of that month and basically we need some
sort of improvement for the VRF hopping

488
00:47:21,380 --> 00:47:26,290
attack scenarios because as you can see
right now we rely on either a

489
00:47:26,290 --> 00:47:31,839
misconfigured device or some sort of
poorly designed network we need to

490
00:47:31,839 --> 00:47:36,270
explore some other UDP protocols that
may be abusive remotely without having

491
00:47:36,270 --> 00:47:41,310
these configurations an interesting
topic to look at is MPLS signaling

492
00:47:41,310 --> 00:47:45,140
protocols as I mentioned these are the
protocols that are used to kind of sync

493
00:47:45,140 --> 00:47:53,220
the label information basis for the LSR
devices and again i think is always an

494
00:47:53,220 --> 00:47:58,720
option I think I found just a couple of
bucks on by a basic fuzzing using

495
00:47:58,720 --> 00:48:00,029
something else

496
00:48:00,030 --> 00:48:06,460
so having a proper MPLS fuzzy and MPLS
related protocols faza ASAP definitely

497
00:48:06,460 --> 00:48:08,780
something to look at in the future

498
00:48:08,780 --> 00:48:13,930
couple of acknowledgement on thanks a
bunch of guys from MWR labs for giving

499
00:48:13,930 --> 00:48:18,540
me the opportunity of testing and MPLS
production that's what I want to thank

500
00:48:18,540 --> 00:48:25,540
really good friend of mine for a kind of
helping me weights various MPLS set-ups

501
00:48:25,540 --> 00:48:34,150
today I had to build before been testing
him so that was pretty much it if you

502
00:48:34,150 --> 00:48:57,240
have any questions i'm happy to take
them now or maybe drop me sometime later

503
00:48:57,240 --> 00:49:11,549
shopping and ICMP packets that actually
got the replies back are you just

504
00:49:11,550 --> 00:49:19,770
putting additional MPLS header when
normally you would not have it

505
00:49:19,770 --> 00:49:27,780
yeah exactly and put the labels from
1000 to 1500 and 2500 packets yeah

506
00:49:27,780 --> 00:49:34,700
that's exactly so basically in certain
cases provider edge device will not

507
00:49:34,700 --> 00:49:35,689
process

508
00:49:35,690 --> 00:49:42,690
encapsulated ICMP ping capitulated in
MPLS ICMP traffic but a bunch of vendors

509
00:49:42,690 --> 00:49:47,480
were found to having MPLS globally
enabled and not having the option of

510
00:49:47,480 --> 00:49:52,560
disabling MPLS on a particular interface
so by default a client when generating

511
00:49:52,560 --> 00:49:58,480
an ICMP echo request it would send it
encapsulated in IP but for release

512
00:49:58,480 --> 00:50:04,550
attack to work he can encapsulate the IP
encapsulating ICM pink up select the

513
00:50:04,550 --> 00:50:08,540
whole thing in MPLS and relying on the
fact that a bunch of vendors are

514
00:50:08,540 --> 00:50:14,050
affected by this and we'll trusses the
MPLS traffic on an IP interface so yeah

515
00:50:14,050 --> 00:50:19,619
that's that's how it works and the
status of research is that some

516
00:50:19,619 --> 00:50:26,330
injections possible but there is no
research on leaking from other VRF right

517
00:50:26,330 --> 00:50:40,100
again so you succeeded putting some
traffic from a to be but was there any

518
00:50:40,100 --> 00:50:46,100
possibility of like sniffing packets
yeah you're right the question so yet

519
00:50:46,100 --> 00:50:53,140
there was no way I have found no way to
kinda like traffic outside of a VRF

520
00:50:53,140 --> 00:50:59,400
in most of the cases even get a response
back so they see exactly equivalent of

521
00:50:59,400 --> 00:51:04,070
you and hoping most of the time if you
don't have a misconfigured network or

522
00:51:04,070 --> 00:51:20,460
poorly designed at work you will never
see the request back thank you

523
00:51:20,460 --> 00:51:32,490
any in the wild attackers were caught
doing that or trying to infiltrate them

524
00:51:32,490 --> 00:51:43,359
and MPLS provider to miss most msconfig
and not as far as I now and I guess for

525
00:51:43,359 --> 00:51:48,109
most of the attackers it would be easier
to kind of break in the datacenter and

526
00:51:48,109 --> 00:51:55,180
get physical connectivity to the network
but as far as I know there has been any

527
00:51:55,180 --> 00:52:02,770
fun to be a tease published right and
toi reported some of these so caught in

528
00:52:02,770 --> 00:52:12,210
the wild probably safe to assume no

529
00:52:12,210 --> 00:52:34,250
because we had once worked to death and
network with MPLS something like that

530
00:52:34,250 --> 00:52:45,410
and actually successfully attacked MPLS
core network and get access into it but

531
00:52:45,410 --> 00:52:58,589
we used I don't know common ways to hide
something like so it was not an issue

532
00:52:58,589 --> 00:53:05,119
with an MPLS configuration but rather
than mine operation of devices yeah but

533
00:53:05,119 --> 00:53:13,560
we would not always easy information
that he told us today it was it would be

534
00:53:13,560 --> 00:53:20,680
really useful so saying thanks it would
be nice to have a chat anyway

