1
00:00:00,000 --> 00:00:11,590
German all know perot fighting but I was
recently quoted me to come in person or

2
00:00:11,590 --> 00:00:14,589
one thanks for coming to my hotel room

3
00:00:14,589 --> 00:00:18,949
Capcom I want earlier 4 o'clock about
hiking virtual appliances but I'm going

4
00:00:18,949 --> 00:00:24,039
to today so my first time doing that so
hopefully I voices with me and you all

5
00:00:24,039 --> 00:00:28,760
can understand pretty well to go pretty
well he said my name is Jeremy brown and

6
00:00:28,760 --> 00:00:30,039
today

7
00:00:30,039 --> 00:00:34,590
browser posing with a twist to this is a
project that I worked on for a while

8
00:00:34,590 --> 00:00:39,309
pass this year and it kind of you know I
had a few different products have been

9
00:00:39,309 --> 00:00:45,899
working on it we're been consulting and
this is one that I didn't finish but

10
00:00:45,899 --> 00:00:49,300
there are still a lot of work to do
around it but I thought it was important

11
00:00:49,300 --> 00:00:53,300
enough to share and I really wanted to
get the algorithm out there and get

12
00:00:53,300 --> 00:00:56,788
people interested in if you already have
your own voting framework I think this

13
00:00:56,789 --> 00:01:01,890
config pretty nicely with what you
already have as a mutator I want to show

14
00:01:01,890 --> 00:01:08,700
you today with a twist and a shake and
I'll get to it for a quick run through

15
00:01:08,700 --> 00:01:12,700
the agenda are going to the introduction
talk about them target architecture

16
00:01:12,700 --> 00:01:19,090
infrastructure notes this target is
getting very well of browser but really

17
00:01:19,090 --> 00:01:23,580
it's you can apply it still other things
do what other PDF readers things like

18
00:01:23,580 --> 00:01:28,720
that and then talk about shake it the
the neutral that gets really sassou

19
00:01:28,720 --> 00:01:33,329
stocks down I'm actually gonna see guys
can play around with it but it's the

20
00:01:33,329 --> 00:01:38,720
implementation of the technique of come
up with i think is somewhat novel I'm

21
00:01:38,720 --> 00:01:42,100
gonna say a hundred percent novel but I
think that is definitely something I

22
00:01:42,100 --> 00:01:43,149
haven't seen

23
00:01:43,150 --> 00:01:48,200
so much publicly talk about some of the
things that are related to it and then

24
00:01:48,200 --> 00:01:56,960
talk about that and then go to the
conclusion and and go from there so you

25
00:01:56,960 --> 00:02:00,820
know my name an independent research
consultant at the moment I used to work

26
00:02:00,820 --> 00:02:06,580
for Microsoft doing Windows Phone Xbox
security I'll send them our production

27
00:02:06,580 --> 00:02:10,169
center so got a lot of exposure to
antivirus stuff little more than I

28
00:02:10,169 --> 00:02:15,170
wanted to understand more insecure in
software security so ended up moving to

29
00:02:15,170 --> 00:02:21,089
the windows team at that time also we're
terrible you probably have used Nexus

30
00:02:21,090 --> 00:02:25,920
before I read quite a few Nexus plugins
in the past and also doesn't reverse

31
00:02:25,920 --> 00:02:31,010
engineering wasn't tenable trying to
find more of these subtle soul patches

32
00:02:31,010 --> 00:02:36,480
fun times so to be clear we're not
covering today

33
00:02:36,480 --> 00:02:41,769
comprehensive browser fundamentals is
way too big topic take way too long just

34
00:02:41,770 --> 00:02:45,360
don't wanna give you enough just to get
your feet wet and to rent you can look

35
00:02:45,360 --> 00:02:50,100
at the Tax Service and and know what's
out there and I'm really focusing on

36
00:02:50,100 --> 00:02:54,579
rendering engines there's tons of tax
services and that definitely things

37
00:02:54,580 --> 00:03:00,220
around the sandbox and IPC but at this
talk and what shake it actually does the

38
00:03:00,220 --> 00:03:04,910
deposit I'll be talking about it's
mostly unless accidentally attack

39
00:03:04,910 --> 00:03:07,900
something else it's gonna be like
finding bugs in the rendering engine

40
00:03:07,900 --> 00:03:13,580
most likely

41
00:03:13,580 --> 00:03:17,590
when I am going to covering as I said
the fuzzy imaging engine part of the

42
00:03:17,590 --> 00:03:23,750
puzzle buzzing is not you know you need
to complete system to fight the mutator

43
00:03:23,750 --> 00:03:28,970
or the generator or you know whatever
system you have to whatever technique of

44
00:03:28,970 --> 00:03:32,270
using it's just part of the puzzle of a
bigger picture you need infrastructure

45
00:03:32,270 --> 00:03:37,960
you need you know things around helper
things to copy repros and and try to

46
00:03:37,960 --> 00:03:42,400
debug crashes and and get things like
that so I'm not talking about I wouldn't

47
00:03:42,400 --> 00:03:47,220
say shake it shake it is not a father
how long it is a mutator it's a somewhat

48
00:03:47,220 --> 00:03:51,730
novel way to mutate data that has had a
little bit of success in incubation

49
00:03:51,730 --> 00:03:57,769
browsers in particular but is not a
complete Pfizer and of course we work

50
00:03:57,770 --> 00:04:04,380
with the grammar based carcinogens so
you can have scripting engine JavaScript

51
00:04:04,380 --> 00:04:10,090
HTML and even PDS again PDF readers
interpret JavaScript so this could be a

52
00:04:10,090 --> 00:04:15,600
pic law in that area as well and yeah
I'm not claiming outflows is as good as

53
00:04:15,600 --> 00:04:20,339
being naggy he's professional down a lot
of really great talks on it so if you if

54
00:04:20,339 --> 00:04:24,109
you want to really great talk about
fussing I was just one of those talks we

55
00:04:24,110 --> 00:04:27,460
really get going to get a lot of hard
lessons I've learned

56
00:04:27,460 --> 00:04:35,120
when covering browser fussing with with
with how I'm doing here so I again

57
00:04:35,120 --> 00:04:39,410
remind reduction I didn't want to
research just to sit on the box I really

58
00:04:39,410 --> 00:04:43,639
felt like this is something I worked a
lot on and you know there's still work

59
00:04:43,639 --> 00:04:47,160
to be done as I said but I think that is
worth sharing and I didn't want to just

60
00:04:47,160 --> 00:04:51,449
a lot of people have products the just
and you have a great idea and you work

61
00:04:51,449 --> 00:04:55,199
on it for a while and maybe it doesn't
go the way you want to go or maybe it

62
00:04:55,199 --> 00:04:58,949
goes that way but you know you just
never finish it or things like that and

63
00:04:58,949 --> 00:05:02,340
I didn't want to be when this project I
wanted to get the research out there in

64
00:05:02,340 --> 00:05:07,859
hopes that people will be able to take
this and convert it to an input in

65
00:05:07,860 --> 00:05:11,169
places where maybe there have been more
structure in place and this is just the

66
00:05:11,169 --> 00:05:19,299
easy tap-in example but again there's a
lot of talks to detail the process of

67
00:05:19,300 --> 00:05:24,150
you know how the voting process goes i
wanna talk to you about the engine and

68
00:05:24,150 --> 00:05:31,580
talk about those details as well so I
tax service overview saying you're

69
00:05:31,580 --> 00:05:33,990
looking for bugs in a product you got
into the attack serbs you gotta know

70
00:05:33,990 --> 00:05:40,759
what you're trying to find bugs so it's
not a guy a Pangolin actually becoming

71
00:05:40,759 --> 00:05:44,349
one of my favorite animals because you
can seize all curled up and you gotta

72
00:05:44,349 --> 00:05:49,699
kinda hope to see where you can attack
them so that's kinda way I would

73
00:05:49,699 --> 00:05:55,389
visualize an animalistic attack surface
so all the credit goes to Chris Ross

74
00:05:55,389 --> 00:06:00,280
from leaf SEC now Yahoo but he had a
really great presentation and I wish you

75
00:06:00,280 --> 00:06:05,900
could see all the reference well I guess
you can say about this this is the tax

76
00:06:05,900 --> 00:06:10,690
office or chrome and I just want to make
it clear what we're looking at what what

77
00:06:10,690 --> 00:06:14,680
we're what the father shine exposures
bugs in the rendering process that means

78
00:06:14,680 --> 00:06:18,789
VA you know WebKit which is now blamed
of course and you know may incidentally

79
00:06:18,789 --> 00:06:22,550
look at some bugs that PAP I think

80
00:06:22,550 --> 00:06:27,130
and but the native pride as well also
may be deprecated anyways we're not

81
00:06:27,130 --> 00:06:31,930
looking at the broader process when I
look at PC or some of that stuff we're

82
00:06:31,930 --> 00:06:38,150
looking at the rendering process so
focused on that and for the reader

83
00:06:38,150 --> 00:06:43,099
perspective this is 25 from Adobe from
their security team about protecting

84
00:06:43,100 --> 00:06:47,910
mode and it does a good job of detailing
like how they talk to the filesystem how

85
00:06:47,910 --> 00:06:51,820
they ought to the OS reading and writing
and again we're looking at the render

86
00:06:51,820 --> 00:06:58,870
the reader part the which is Sam boxed
nowadays but not looking at IBC for this

87
00:06:58,870 --> 00:07:04,910
kind of mutational miss mutational
fussing and so does the options are a

88
00:07:04,910 --> 00:07:08,040
few different options here you can go
back and forth on it but I think that

89
00:07:08,040 --> 00:07:10,940
the three main general ones want to talk
about today

90
00:07:10,940 --> 00:07:16,500
briefly generation so you know you
either have expected have a file format

91
00:07:16,500 --> 00:07:21,150
you have something and you create data
based upon that that's one technique and

92
00:07:21,150 --> 00:07:25,010
you can you can use investing impeached
as a really good example here you know

93
00:07:25,010 --> 00:07:28,980
it can do different things but
generation is really good at you know

94
00:07:28,980 --> 00:07:33,320
you describe the file format it
generates data and you go from there so

95
00:07:33,320 --> 00:07:42,270
peaches kind of example for generation
mutation the canonical example here it's

96
00:07:42,270 --> 00:07:45,270
a pretty interesting father that there's
a lot of it flipped by flipping

97
00:07:45,270 --> 00:07:51,859
different ways to mutate data and try to
put something that may crash program

98
00:07:51,860 --> 00:07:56,600
says to be a generation mutation and
then you have kind of evolutionary some

99
00:07:56,600 --> 00:08:00,360
evolutionary I'm calling it and we're
going to get this example calls AFL is

100
00:08:00,360 --> 00:08:04,990
an amazing father found actually put a
few bugs using it and I wanna call this

101
00:08:04,990 --> 00:08:10,200
one code assisted because it uses
instrumentation to then figure out you

102
00:08:10,200 --> 00:08:15,530
know what the best passer to go down and
actually really really most academic

103
00:08:15,530 --> 00:08:21,260
closer but actually works so this is
this is something you can apply to any

104
00:08:21,260 --> 00:08:26,510
time crashes that's why I really want to
use as an example of the Revolutionary

105
00:08:26,510 --> 00:08:29,650
Guard assisted interpretation fuzzing
found bugs

106
00:08:29,650 --> 00:08:37,900
and I mean you name it PHP OpenSSL open
as a date even and it's it's it's kind

107
00:08:37,900 --> 00:08:44,010
of it's more local right now but you can
actually modified it before and I know

108
00:08:44,010 --> 00:08:49,100
other people have 225 remote server so I
think a guy did some stuff doesn't bind

109
00:08:49,100 --> 00:08:54,540
DNS server offer us a little bit of
something drop their open the situation

110
00:08:54,540 --> 00:08:59,290
so you can modify it and you know why
some rights and harnesses to do remote

111
00:08:59,290 --> 00:09:05,209
doesn't with us so we don't have an exam
pool of today's modern code assisting

112
00:09:05,209 --> 00:09:10,279
buzzing so those are three of three
thousand options you know you can go

113
00:09:10,279 --> 00:09:13,980
back and forth on it but that those are
three main ones so infrastructure

114
00:09:13,980 --> 00:09:18,620
another thing with with fussing you need
infrastructure so like I said before

115
00:09:18,620 --> 00:09:24,190
there's more pieces to the puzzle then
just a mutator or generator or code

116
00:09:24,190 --> 00:09:27,730
instrumentation in my opinion

117
00:09:27,730 --> 00:09:31,450
have a more complete fucking framework
you know you need the engine of course

118
00:09:31,450 --> 00:09:37,089
you need harnesses you need stuff that
will allow you to get a deeper peek at

119
00:09:37,089 --> 00:09:42,390
your target you need infrastructure you
need you know BMC need visit his

120
00:09:42,390 --> 00:09:46,830
physical hardware whatever it is you
need be able to scale too much more

121
00:09:46,830 --> 00:09:50,950
effectively like that target specific
support I know how many times I know you

122
00:09:50,950 --> 00:09:54,720
may run into before too we're trying to
find bugs in a program you're kinda

123
00:09:54,720 --> 00:09:59,560
fuzzy you're trying to lose his memory
and there's a something you know either

124
00:09:59,560 --> 00:10:03,229
blocking you from doing that it has some
special memory manager they can't quite

125
00:10:03,230 --> 00:10:09,120
get good crash output for or has anti
but the bugcheck the bugging enabled for

126
00:10:09,120 --> 00:10:13,680
much different options for the something
trying to block you from causing it or

127
00:10:13,680 --> 00:10:19,290
maybe it just really it's just
unfriendly to people finding bugs so a

128
00:10:19,290 --> 00:10:22,740
lot of browsers you gotta figure out
these crazy command line things even get

129
00:10:22,740 --> 00:10:26,089
them running correctly and all you want
to do is a process of web page you don't

130
00:10:26,089 --> 00:10:30,770
care about plugins are all this other
stuff so target specific report is super

131
00:10:30,770 --> 00:10:34,170
important and a helper program single
copy reproduce for you things that will

132
00:10:34,170 --> 00:10:38,689
talk to a database of all things to help
you make sense of the data you get back

133
00:10:38,690 --> 00:10:40,940
from fussing super important

134
00:10:40,940 --> 00:10:49,080
so then posing engine generator perspex
mutator with different algorithms and

135
00:10:49,080 --> 00:10:53,410
instrumentation LocalSystem harnesses if
you're visiting locally you know you

136
00:10:53,410 --> 00:10:57,630
need to bug harness cause crashes in a
file system monitor maybe to catch

137
00:10:57,630 --> 00:11:01,790
things interesting reads and writes and
they flee a dedicated database server

138
00:11:01,790 --> 00:11:07,780
and a couple things locally can work but
it's really not the best scalable way to

139
00:11:07,780 --> 00:11:15,520
do it and then failing infrastructure
said you need p.m. hypervisors an army

140
00:11:15,520 --> 00:11:19,939
of droids favorite ones from Jada talks
tough thing for the Android a lot with

141
00:11:19,940 --> 00:11:24,820
those are even utilizing cloud providers
and there's a lot of ABS you have

142
00:11:24,820 --> 00:11:31,420
Microsoft Azure stuff you know if you
trust him with your data and maybe using

143
00:11:31,420 --> 00:11:39,020
for failing to report you need to have
templates nothing especially permutation

144
00:11:39,020 --> 00:11:44,449
funding to military must have something
you take right you know part mutation

145
00:11:44,450 --> 00:11:47,970
you take a good known good following
they can make it possibly a bad file

146
00:11:47,970 --> 00:11:52,990
that actually parson hopefully trying to
bug and one of the hardest to support

147
00:11:52,990 --> 00:11:58,600
examples I've had here went up to bug by
Mario bailiffs great guy great framework

148
00:11:58,600 --> 00:12:03,170
and a lot of work into Skype on
framework very first of all kinds of

149
00:12:03,170 --> 00:12:04,400
options for interpretation

150
00:12:04,400 --> 00:12:08,720
it's just amazing piece of work but when
I was using it for to do part of this

151
00:12:08,720 --> 00:12:13,250
project I was running into some issues
around you know kind of a bottleneck of

152
00:12:13,250 --> 00:12:16,530
the database server so it doesn't so
much and has so many machines running

153
00:12:16,530 --> 00:12:20,910
that the server I had a dedicated
hardware for this as well actually

154
00:12:20,910 --> 00:12:25,380
couldn't process everything on time so
you know we had either you know

155
00:12:25,380 --> 00:12:29,600
duplication of data or we had just a ton
of injuries that were horrible sort

156
00:12:29,600 --> 00:12:33,589
through using traditional methods of you
know using Siebel Server something like

157
00:12:33,589 --> 00:12:38,820
that and again before there if if you
know there's modern memory protection

158
00:12:38,820 --> 00:12:45,100
member protections that will try to make
it harder for you to even the attached

159
00:12:45,100 --> 00:12:47,080
to the process or maybe

160
00:12:47,080 --> 00:12:50,320
you know you got a huge amount of
threads it creates different processes

161
00:12:50,320 --> 00:12:54,760
and you gotta figure out which one it is
just becomes a mess and you can expect a

162
00:12:54,760 --> 00:12:57,560
you know maybe open source framework to
catch up for that

163
00:12:57,560 --> 00:13:03,380
catch up to big changes like that but we
have to bug xoxo former colleague

164
00:13:03,380 --> 00:13:10,189
recommended but targets to the report
support is hard to keep ahead with the

165
00:13:10,190 --> 00:13:16,190
other major corporations finding out all
these different targets and helpers so

166
00:13:16,190 --> 00:13:20,370
great have Paul's restore support things
like that you don't want to be funding

167
00:13:20,370 --> 00:13:24,490
for ever and then something breaks and
then it's like I gotta start from the

168
00:13:24,490 --> 00:13:28,390
first test cases you know you can write
different things to handle that but

169
00:13:28,390 --> 00:13:33,260
that's a good thing to have automatic
repro and generations will my favorite

170
00:13:33,260 --> 00:13:38,930
actually wrote a device driver Pfizer
few months ago and my favorite features

171
00:13:38,930 --> 00:13:45,000
was not even the fun part of it but it
was for every crash that occurred it

172
00:13:45,000 --> 00:13:49,800
would create a proof of concept
literally a compile and run it and you

173
00:13:49,800 --> 00:13:54,370
can repair the crash so that is really
really important for forklift trucks

174
00:13:54,370 --> 00:13:59,060
were having stuff like that makes your
life much easier

175
00:13:59,060 --> 00:14:02,349
back and make them in support you know
you don't want to be thrown at 10

176
00:14:02,350 --> 00:14:07,530
megabyte file something when you know
you're only funding 32 K the file or one

177
00:14:07,530 --> 00:14:11,400
K the follower you know something like
that so installation code coverage

178
00:14:11,400 --> 00:14:17,180
obvious things here so go into shake it

179
00:14:17,180 --> 00:14:22,969
the commutator want to discuss

180
00:14:22,970 --> 00:14:27,319
but before we going to look at the
current tooling around your browser does

181
00:14:27,319 --> 00:14:33,189
so we have crossroads cross document
binding father Biochem to fuck was asked

182
00:14:33,189 --> 00:14:39,170
you from Google it's similar concept
shaken as it's like some reviews reuses

183
00:14:39,170 --> 00:14:42,639
input fragments but doesn't limit
differently and chops files look

184
00:14:42,639 --> 00:14:47,220
different way so the exact algorithm
with this is is a little different

185
00:14:47,220 --> 00:14:52,459
fascinator organizes a collection of
input and and build all the test cases

186
00:14:52,459 --> 00:14:56,790
from that another interesting concept
still use it was actually one the newer

187
00:14:56,790 --> 00:15:01,889
ones may be academic project which
University came out of that was

188
00:15:01,889 --> 00:15:09,370
interesting one that you can use your
browser's jna SunTrust is a javascript

189
00:15:09,370 --> 00:15:15,399
specific closer from Jesse Robredo man
accused me from my Mozilla penalty box

190
00:15:15,399 --> 00:15:18,089
with this still in use today still
relevant

191
00:15:18,089 --> 00:15:24,800
probably a few for five years ago but he
uses a generational method to create

192
00:15:24,800 --> 00:15:30,719
test cases for JavaScript so you have a
huge housing or go to to know the

193
00:15:30,720 --> 00:15:35,110
grammar and create interesting suffering
that any link does this is what I looked

194
00:15:35,110 --> 00:15:39,809
at really recently and it's kinda like
transfers again it does reviews into

195
00:15:39,809 --> 00:15:43,339
fragments but the way that it does it
they all do it in a kind of a different

196
00:15:43,339 --> 00:15:50,050
way and it is a grammar based further
and this one from Mozilla joint or

197
00:15:50,050 --> 00:15:54,370
muscle and Saarland University so all
these are the current tooling account to

198
00:15:54,370 --> 00:15:59,439
give you a look at what what tools are
available and you know why why should it

199
00:15:59,439 --> 00:16:02,719
will be different and I hope you and I
was kind of hard to tell from the brief

200
00:16:02,720 --> 00:16:07,220
description but it does do in a
different way and that's when presenting

201
00:16:07,220 --> 00:16:13,519
at force the same thing I wouldn't be
here so deep again deviations from from

202
00:16:13,519 --> 00:16:18,610
shake it so you can have a dictionary
and testing so dictionary defining a

203
00:16:18,610 --> 00:16:21,350
dictionary of a balanced tokens and then
replacing the

204
00:16:21,350 --> 00:16:26,860
either by choice by strategy or randomly
and enlisting either duplicating or

205
00:16:26,860 --> 00:16:31,760
multiple multiplying tokens in a way you
know you could think of it as like a

206
00:16:31,760 --> 00:16:36,400
skating statements that always you know
are nested if statements even even

207
00:16:36,400 --> 00:16:42,069
recursion can can work here to find bugs
but these are both of these are

208
00:16:42,070 --> 00:16:47,390
deviations from the way she can handle
these things so here's the high-level

209
00:16:47,390 --> 00:16:53,480
algorithm we have you guys know that
lady on the left right Taylor Swift show

210
00:16:53,480 --> 00:16:59,280
her and a shake it that is a high level
of them in a senior guys know that joke

211
00:16:59,280 --> 00:17:06,660
but here is an even higher level diagram
if you can tolerate it so it is very

212
00:17:06,660 --> 00:17:11,710
base you know you give it a for example
would give HTML file a small file has a

213
00:17:11,710 --> 00:17:15,560
bunch of methods attributes may be
called functions are defined things like

214
00:17:15,560 --> 00:17:20,389
that you put into the mutator and spits
out something that is going to be great

215
00:17:20,390 --> 00:17:27,950
hopefully you know the point here is to
get it from the shake things up so I can

216
00:17:27,950 --> 00:17:31,810
I like to use the analogy put something
in a jar and you put a bunch of methods

217
00:17:31,810 --> 00:17:34,840
functions everything that chart take
them up and they replace them in

218
00:17:34,840 --> 00:17:38,620
different directions to see what you can
get to maybe have some interesting

219
00:17:38,620 --> 00:17:45,260
memory access corruption and things from
that so again how shake it takes a

220
00:17:45,260 --> 00:17:51,190
collection of tokens or changing rules
so changeable just another word for

221
00:17:51,190 --> 00:17:57,000
tokens a little more descriptive in this
case and it it parses a file and create

222
00:17:57,000 --> 00:18:02,180
a list of the change roles with data and
position it switches the data a random

223
00:18:02,180 --> 00:18:07,620
positions and then it fixes all backup
and generating new test case this idea

224
00:18:07,620 --> 00:18:11,560
is simple I give you that but the
implementation of doing that is little

225
00:18:11,560 --> 00:18:17,330
more complex and having done that over
thousands of iterations you can find you

226
00:18:17,330 --> 00:18:21,570
can get some really good mutations
something that you couldn't do with the

227
00:18:21,570 --> 00:18:26,870
generational Pfizer and that the other
friends I mentioned before just don't do

228
00:18:26,870 --> 00:18:35,149
they do do reuse but its reuse is not
necessarily shaking it as a zero so

229
00:18:35,150 --> 00:18:41,240
process how would you use it for example
Sep 13 template so it can be a simple

230
00:18:41,240 --> 00:18:46,800
XML JavaScript again like I mentioned
PDF state Javascript or they can run

231
00:18:46,800 --> 00:18:52,659
JavaScript so you can get the invitation
I have you been treated a PDF file it

232
00:18:52,660 --> 00:18:57,020
will find the JavaScript based on
heuristics of course and use that to

233
00:18:57,020 --> 00:19:02,290
collect all the tokens and then mixing
up in in in the way that works it could

234
00:19:02,290 --> 00:19:09,480
handle simple or complex so I can handle
as simple as you know 22 tokens for

235
00:19:09,480 --> 00:19:13,380
example you know you have to be able
solution obviously organ handle

236
00:19:13,380 --> 00:19:17,929
something this is a huge might even take
some huge page of a random website on

237
00:19:17,929 --> 00:19:22,090
the internet and feed it to take it and
it will speed up mutations will probably

238
00:19:22,090 --> 00:19:27,520
burn your CPU up cuz it's actually not
that I meant to handle it quite that but

239
00:19:27,520 --> 00:19:32,139
there's a threshold but still it will it
will create a very very unique and

240
00:19:32,140 --> 00:19:37,770
mutated examples and as you'll see I'll
go over his found it interesting books

241
00:19:37,770 --> 00:19:44,590
with it so implementation wife if you
mean people in here in OC sharp don't

242
00:19:44,590 --> 00:19:51,490
care about it after I start using it I
kinda like it a lot so the

243
00:19:51,490 --> 00:19:56,320
implementation I have has no trace email
JavaScript JavaScript you can shake it

244
00:19:56,320 --> 00:20:00,689
to function and it was taken to find all
the tokens and of course needs at least

245
00:20:00,690 --> 00:20:06,710
two to perform mutation and i'd text for
this but you know that it's probably the

246
00:20:06,710 --> 00:20:10,420
most straightforward way to do it than
actually a ton of time coming up with

247
00:20:10,420 --> 00:20:11,440
all the different

248
00:20:11,440 --> 00:20:17,140
just one case for regex you can see I'm
doing like some crazy negatively behinds

249
00:20:17,140 --> 00:20:21,049
and possibly heads and you don't learn
all this stuff

250
00:20:21,049 --> 00:20:24,899
just copy and paste gonna do this later
on with your own stuff way too much time

251
00:20:24,899 --> 00:20:26,590
to to get this correct

252
00:20:26,590 --> 00:20:31,090
has a bunch of heuristics to find a
bunch of interesting things like you

253
00:20:31,090 --> 00:20:38,249
know things in case statements variables
attributes method calls

254
00:20:38,249 --> 00:20:41,879
anything that would be interesting if
you took it from one place and put it in

255
00:20:41,879 --> 00:20:48,299
another and the browser is super super
horrible things like that it's basically

256
00:20:48,299 --> 00:20:52,769
like you know the other related news
brother cousin and her brother research

257
00:20:52,769 --> 00:20:56,649
all you know it's a playground so
whatever you tell to do its gonna at

258
00:20:56,649 --> 00:20:59,399
least try to do it and if you don't have
a role to say it's not going to do it

259
00:20:59,399 --> 00:21:03,729
you know then you may get some
interesting results therefore eventually

260
00:21:03,730 --> 00:21:11,739
security bugs hopefully so if token
matches successful same token continue

261
00:21:11,739 --> 00:21:16,559
and then we have shaped US shuttle and
this generates from the end chooses a

262
00:21:16,559 --> 00:21:22,220
random index and remove items from the
pool until exhaustion I know that makes

263
00:21:22,220 --> 00:21:28,210
no sense when you say like that but yeah
just take a moment to consume if you're

264
00:21:28,210 --> 00:21:37,460
really interested in and that the way
that it works but it it took was

265
00:21:37,460 --> 00:21:44,049
exhausting makes everything until you're
done and after shuffling that we build

266
00:21:44,049 --> 00:21:48,440
up the mutations so for each sample
position we take the new data and the

267
00:21:48,440 --> 00:21:54,100
position where is that and we insert it
but also we have a huge other step we

268
00:21:54,100 --> 00:21:57,080
don't we can just worry about the tokens
we have to worry about all the other

269
00:21:57,080 --> 00:22:03,629
data that was in the was in the eighties
you know the input so we can just put

270
00:22:03,629 --> 00:22:06,899
all mutation bed together because now
you know that's not very useful we need

271
00:22:06,899 --> 00:22:10,279
to fix the back in a way where it looks
legit it looks like the original file

272
00:22:10,279 --> 00:22:17,090
except everything is screwed up in it in
a strategic way

273
00:22:17,090 --> 00:22:22,050
so after that we write output and repeat
as many times as you want you can do a

274
00:22:22,050 --> 00:22:26,060
million Haitians are actually did a
million iterations bidding on your input

275
00:22:26,060 --> 00:22:30,820
it can take a law or not any on your
computer power force obviously don't

276
00:22:30,820 --> 00:22:35,200
care about collisions here I just give
her one shot wounds Security as programs

277
00:22:35,200 --> 00:22:38,720
no security sensitive so don't worry
about the collision to forget them

278
00:22:38,720 --> 00:22:44,810
fine don't do that otherwise I'm
obviously so example template again I

279
00:22:44,810 --> 00:22:48,290
thought about all the tax attributes
functions object parameters methods

280
00:22:48,290 --> 00:22:54,409
these are all really good stuff because
if we make a function call maybe the

281
00:22:54,410 --> 00:22:59,570
function doesn't exist maybe we redefine
the name of the function maybe the

282
00:22:59,570 --> 00:23:04,649
attribute is valid in one case but not a
valid another there's all kinds of

283
00:23:04,650 --> 00:23:09,290
things that go wrong here and the way
the browser's interpreting it it's kind

284
00:23:09,290 --> 00:23:14,320
of looking to make mistakes and again a
smile all these purses super forgiving

285
00:23:14,320 --> 00:23:19,139
so it doesn't matter what you feed them
they're gonna try to render it in 99% of

286
00:23:19,140 --> 00:23:27,830
cases so I was just ok this is better so
there's a line in the middle

287
00:23:27,830 --> 00:23:34,730
ok so a little deeper view so we get a
list of all the functions methods tag

288
00:23:34,730 --> 00:23:40,060
that's really all that stuff you know we
have to listen this point we found we

289
00:23:40,060 --> 00:23:45,500
take those lists to list and then we fix
everything back up positions data and we

290
00:23:45,500 --> 00:23:52,510
output it again to the apathy in just a
little deeper microscope on that was

291
00:23:52,510 --> 00:23:59,629
clear how the heater works
implementation wise at this point so

292
00:23:59,630 --> 00:24:04,790
again the strategy here is trying to
confuse the rendering engine were mixing

293
00:24:04,790 --> 00:24:09,129
everything we can basically and we're
trying to put the browser into a weird

294
00:24:09,130 --> 00:24:14,160
state a weird state where it's likely to
make mistakes it's likely to access

295
00:24:14,160 --> 00:24:18,940
memory in an interesting way it's likely
to read memory interesting way

296
00:24:18,940 --> 00:24:23,440
that's what we're looking for is memory
corruption vulnerabilities out of out of

297
00:24:23,440 --> 00:24:25,450
this technique with something with them

298
00:24:25,450 --> 00:24:34,860
mutating so mutate example dunno I give
you one very contrived example I'll give

299
00:24:34,860 --> 00:24:40,729
you two or three of the ones that I
actually read a couple days ago so this

300
00:24:40,730 --> 00:24:45,680
one I don't have the originals these are
just a mutated copies you can see it

301
00:24:45,680 --> 00:24:49,400
kind of looks pretty interesting you can
see Jerry jQuery is making such a crazy

302
00:24:49,400 --> 00:24:55,640
calls with just weird they have been
passed in its calling doc click method I

303
00:24:55,640 --> 00:24:59,640
don't even know that clicks of a legit
decree method maybe it's not what

304
00:24:59,640 --> 00:25:05,580
happens if it does you know some of the
attributes Rd being defined as it is

305
00:25:05,580 --> 00:25:12,429
these recipes been defined a slow you
know we have URLs being defined

306
00:25:12,430 --> 00:25:18,120
serendipitously all tags everything just
screwed up with this and we have a

307
00:25:18,120 --> 00:25:23,030
function defined call on the jQuery for
the previous call function which is also

308
00:25:23,030 --> 00:25:30,310
passing a member object recipe for bucks
hopefully and this one so this was

309
00:25:30,310 --> 00:25:34,780
actually in javascript and this is one
of everyone's messing with JavaScript

310
00:25:34,780 --> 00:25:39,690
because we can you know and in the CSS
properties which you know this is

311
00:25:39,690 --> 00:25:43,080
probably gonna be invalid and/or gonna
work but wish I prompting calls in the

312
00:25:43,080 --> 00:25:50,260
CSS properties were declaring variables
that are using Internet HTML who knows

313
00:25:50,260 --> 00:25:56,210
that even valid it could be inserted in
certain cases and certain cases not but

314
00:25:56,210 --> 00:26:04,330
it may try to reference it anyways so
often stuff here and this one you know

315
00:26:04,330 --> 00:26:06,250
we're trying to think this is

316
00:26:06,250 --> 00:26:13,100
yeah we're doing some XML and RSS SVG
that this is like a mutated SVG file

317
00:26:13,100 --> 00:26:15,100
where we're trying to

318
00:26:15,100 --> 00:26:20,230
make assigning variables to function
calls and get a return values were

319
00:26:20,230 --> 00:26:23,580
getting we're setting all kinds of
different attributes and methods to two

320
00:26:23,580 --> 00:26:29,379
wild things and we're just reading habit
basically creating havoc on the render

321
00:26:29,380 --> 00:26:33,840
an attempt to find books and these are
some interesting examples that can be

322
00:26:33,840 --> 00:26:44,580
generated using a computer except in the
process once you generate the mutated

323
00:26:44,580 --> 00:26:49,580
files you want take that collection of
my webserver put on the file server you

324
00:26:49,580 --> 00:26:53,428
know this is this is where the bug
harness comes in for your help your help

325
00:26:53,429 --> 00:26:59,770
helper files your target specific
support where you're able to make it

326
00:26:59,770 --> 00:27:03,139
accessible to the browser either to
command line or through maybe you have

327
00:27:03,140 --> 00:27:08,620
some cooking function that just makes it
flip the page to the next iteration you

328
00:27:08,620 --> 00:27:12,090
know however you want to set that up but
the step to the process get to the

329
00:27:12,090 --> 00:27:20,820
target and 73 after you turn over the
collection again highly recommend using

330
00:27:20,820 --> 00:27:22,090
a database of some sort

331
00:27:22,090 --> 00:27:25,559
try not to do it locally sequel I it's
good for some things but it's going to

332
00:27:25,559 --> 00:27:28,030
create a bottleneck on your local
machine if you try to do that and then

333
00:27:28,030 --> 00:27:31,330
you have to collect all the databases
and merge them into a mess so

334
00:27:31,330 --> 00:27:36,939
centralized database reporting when
you're posing is simply one approach to

335
00:27:36,940 --> 00:27:44,740
do it and I hope we get some prompting
clashes that began implementation

336
00:27:44,740 --> 00:27:50,789
written in C sharp is completely
portable and I will make the the tool

337
00:27:50,789 --> 00:27:56,710
available fully functioning tool give
some input either shemale JavaScript XML

338
00:27:56,710 --> 00:28:04,000
or get a PDF file let me take that
JavaScript see what happens

339
00:28:04,000 --> 00:28:05,320
patient so

340
00:28:05,320 --> 00:28:09,480
when I first heard this talk I told you
that this is one of projects that I kind

341
00:28:09,480 --> 00:28:13,610
of our time for a while I fell off the
leaders in the lessons I learned from it

342
00:28:13,610 --> 00:28:18,799
and there were some hard lessons to make
actually came across them prompting

343
00:28:18,799 --> 00:28:25,100
crashes for example and Chrome and
Firefox and apparently opera Labs logo

344
00:28:25,100 --> 00:28:29,830
down there but I wasn't able to
determine first of all of the crash

345
00:28:29,830 --> 00:28:34,250
there from the render or they were from
the task at a tree singer's Asian issues

346
00:28:34,250 --> 00:28:39,919
so kind of a fail there and you can't
really hard to say because I kept

347
00:28:39,919 --> 00:28:44,230
getting the bottleneck with the with the
infrastructure I was using database

348
00:28:44,230 --> 00:28:48,179
server but the database server is
getting so overloaded that it was really

349
00:28:48,179 --> 00:28:52,340
hard to get repros and when I did get
repros it was hard to determine which

350
00:28:52,340 --> 00:28:56,490
one was affecting the target that was
made a crash so there were actually

351
00:28:56,490 --> 00:29:00,360
interesting Crashers but through
infrastructure problem was really hard

352
00:29:00,360 --> 00:29:07,189
to to have an unmanned and bug after
that but a few of them they can buy for

353
00:29:07,190 --> 00:29:11,570
example there was defined multiple
crashes again this information this I

354
00:29:11,570 --> 00:29:15,710
don't have the full scale infrastructure
but using this in a minimal

355
00:29:15,710 --> 00:29:17,950
infrastructure these are the results

356
00:29:17,950 --> 00:29:24,220
few crashes and WebKit WebKit GDK
against some of them didn't repro there

357
00:29:24,220 --> 00:29:29,789
was an invalid access and garbage
collection sounds interesting and

358
00:29:29,789 --> 00:29:33,169
remarkable crashing caged email
countries that also is trying to use

359
00:29:33,169 --> 00:29:38,909
else doesn't conquer bit but mostly just
continues memory allocation copies not

360
00:29:38,909 --> 00:29:45,570
really interesting different exploitable
buggin netzer and never heard of it

361
00:29:45,570 --> 00:29:50,539
fine it's a really embedded throughout
your embedded browser for a lot of

362
00:29:50,539 --> 00:29:56,750
embedded devices it was a corruption of
internal structure and it was

363
00:29:56,750 --> 00:30:02,960
triggered by mutated Tag property so
when does it start and shake it mutated

364
00:30:02,960 --> 00:30:06,390
the file and use it for causing it

365
00:30:06,390 --> 00:30:10,680
corrupted one of the tags and replaced
it with an invalid one from another part

366
00:30:10,680 --> 00:30:17,620
the file and and affordability and other
crashing photon photon is kind of like

367
00:30:17,620 --> 00:30:21,100
it opens doors to the OC plugin

368
00:30:21,100 --> 00:30:26,639
not plugin for vlc but we'll see plugin
for browser and it was again

369
00:30:26,640 --> 00:30:30,520
triggered by parsing multimedia content
towns so you know where you put try to

370
00:30:30,520 --> 00:30:36,200
put music in bed music and videos into a
web page its mutation there and was able

371
00:30:36,200 --> 00:30:45,630
to find an interesting crash challenges
lessons learned definitely having a

372
00:30:45,630 --> 00:30:50,420
comprehensive harness something able to
scale give you a much smoother process

373
00:30:50,420 --> 00:30:55,830
smooth and I had at that time that a
complete system is set to be successful

374
00:30:55,830 --> 00:30:59,830
again these are just incubation results
this is one reason I really want to go

375
00:30:59,830 --> 00:31:04,090
out there have been a few friends of
mine have had a look at it as well and

376
00:31:04,090 --> 00:31:14,550
we're trying to really get a good
infrastructure and texture not so if you

377
00:31:14,550 --> 00:31:17,760
have an infrastructure if you have a
fucking sure infrastructure are ready

378
00:31:17,760 --> 00:31:23,180
and I some of the ones for example
poisons nightmare pfizer has ever seen

379
00:31:23,180 --> 00:31:27,530
his talk on that dimension anti virus
research anything you have a home if you

380
00:31:27,530 --> 00:31:33,060
already have a framework set up for this
blood for you to either reimbursement

381
00:31:33,060 --> 00:31:36,960
check it and whatever language your
frameworks in or take shape itself just

382
00:31:36,960 --> 00:31:42,870
use as a mutator host the files and run
it through C having a look and then even

383
00:31:42,870 --> 00:31:46,510
perhaps a medical examiner model there's
a lot of housing modules tremendously

384
00:31:46,510 --> 00:31:53,420
and it would be too hard to support over
there as well so i think is more than

385
00:31:53,420 --> 00:31:54,200
mutation engine

386
00:31:54,200 --> 00:31:58,250
in this case I'm showing you mutation
engine because I believe this one

387
00:31:58,250 --> 00:32:03,160
somewhat novel we need more than that to
be really successful I think she has a

388
00:32:03,160 --> 00:32:08,830
10 potential and the investment on
tolling is paramount

389
00:32:08,830 --> 00:32:12,820
the investment that put into this and
even even though is an incubation I got

390
00:32:12,820 --> 00:32:17,129
some interesting results for them for
the work I put into this and again more

391
00:32:17,130 --> 00:32:21,470
complexity more bucks that that's a
given code review can be really

392
00:32:21,470 --> 00:32:27,340
expensive and if it's if it's for
something that's really complex data

393
00:32:27,340 --> 00:32:32,929
it's been hard to get right anyways can
be really hard to know and to to study

394
00:32:32,930 --> 00:32:37,100
the following order to get everything
out of it again wanting bugs mainly

395
00:32:37,100 --> 00:32:41,870
Pinterest is great for that really sees
offer becoming simpler seems like

396
00:32:41,870 --> 00:32:45,909
nothing is going to die I keep hearing
office instead we got all these

397
00:32:45,910 --> 00:32:46,680
companies right

398
00:32:46,680 --> 00:32:51,340
others are still tons of bugs everyday
things instead I don't think it's going

399
00:32:51,340 --> 00:32:56,310
anywhere I think software is getting
more complex not getting simpler and I

400
00:32:56,310 --> 00:33:00,520
mean maybe longing for its gone but
there's there's a ton more than that

401
00:33:00,520 --> 00:33:08,639
probably coming up tomorrow and I want
to display your sandboxes cannot save

402
00:33:08,640 --> 00:33:13,040
you from bugs you just need one more STL
can save you from bugs they're just too

403
00:33:13,040 --> 00:33:18,310
much code 905 medications can save you
from Bugzilla make you need you no

404
00:33:18,310 --> 00:33:23,629
longer want to read exploit for and also
a managed code is a positive step in

405
00:33:23,630 --> 00:33:26,410
this direction you don't have to deal
with a lot of the issues you do in C and

406
00:33:26,410 --> 00:33:36,140
C++ so and that is what I got so I will
go to guys really depression

407
00:33:36,140 --> 00:33:44,080
questions

408
00:33:44,080 --> 00:33:50,689
I don't think my clothes on

409
00:33:50,690 --> 00:33:57,780
I'm sorry maybe I wasn't really careful
when listening to you and I couldn't get

410
00:33:57,780 --> 00:34:06,590
your joke about us we've done shake it
but how you detected box drawers

411
00:34:06,590 --> 00:34:10,699
debugger awesome instrumentation maybe
so

412
00:34:10,699 --> 00:34:16,699
so when I talk about went out the bug
framework talked about the back to real

413
00:34:16,699 --> 00:34:21,219
quick so I used as a framework to do a
lot of things for attaching to the

414
00:34:21,219 --> 00:34:22,149
process

415
00:34:22,149 --> 00:34:30,659
22 lots of process to get crashes to
send them to the database so go back

416
00:34:30,659 --> 00:34:32,510
there real quick

417
00:34:32,510 --> 00:34:38,169
yeah so when a bug that is the framework
I used for the harness and that's what I

418
00:34:38,168 --> 00:34:43,009
was talking about I did run into some
issues and bottleneck issues some more

419
00:34:43,010 --> 00:34:47,720
modern browsers keep changing the way
they they may be the memory manager some

420
00:34:47,719 --> 00:34:51,678
comment about the bug techniques so that
was it hard for the maintainer for this

421
00:34:51,679 --> 00:34:55,859
project even though the great framework
it hard for him to keep up with the new

422
00:34:55,859 --> 00:35:00,339
changes like that so it doesn't work for
every target it seems that does

423
00:35:00,339 --> 00:35:08,070
something minor instrumentation right
yes it does but own region are some

424
00:35:08,070 --> 00:35:13,330
popular framework be no real maybe
something else

425
00:35:13,330 --> 00:35:19,250
yes so there is there's potential here
for a pin for this again I have worked

426
00:35:19,250 --> 00:35:25,730
with him before he went to work with so
I guess that would be the reason I

427
00:35:25,730 --> 00:35:30,510
didn't go with here as I was trying to
get the bug to work for the time I had

428
00:35:30,510 --> 00:35:35,770
to work on the project but can can be a
solution here for that assuming it's

429
00:35:35,770 --> 00:35:40,530
able to you know if they will stand up
to 2,000 the modern and cuddle bug stuff

430
00:35:40,530 --> 00:35:44,140
that's going on I know what it would
affect it but there's still some really

431
00:35:44,140 --> 00:35:48,520
subtle things for certain targets like
chrome for example is kind of a pain in

432
00:35:48,520 --> 00:35:52,560
the butt of the bug sometimes so I'll be
interested to hear his thoughts from pan

433
00:35:52,560 --> 00:35:57,509
on Chrome 44

434
00:35:57,509 --> 00:36:08,869
thank you thank you any other questions
that we have one here for the

435
00:36:08,869 --> 00:36:10,189
presentation

436
00:36:10,189 --> 00:36:16,319
Amy rides would you have developed to
Randy's

437
00:36:16,319 --> 00:36:28,859
concept browsers mainly browse their
engines and thousands and you like i

438
00:36:28,859 --> 00:36:31,709
havent ABI

439
00:36:31,709 --> 00:36:46,379
except for example right up two points
on that one did not mention that there

440
00:36:46,380 --> 00:36:51,409
are some API is where it would be easier
instead of running the browser you just

441
00:36:51,409 --> 00:36:55,539
run you know passes fascinated directly
today that it does very good point point

442
00:36:55,539 --> 00:37:00,880
I would say that you that wouldn't work
in a lot of a lot of cases where you can

443
00:37:00,880 --> 00:37:04,799
actually rip out the render from the
process for the target but some of the

444
00:37:04,799 --> 00:37:09,739
clothes horse ones is once you can't
really look after that so you know

445
00:37:09,739 --> 00:37:13,489
you're envisioning where you have like
every browser engine every render and

446
00:37:13,489 --> 00:37:17,829
you can just call them without having to
start the target things like that will

447
00:37:17,829 --> 00:37:22,429
be great but we don't have all the
source code that I know I don't have to

448
00:37:22,429 --> 00:37:25,959
go to all these all the different
browser so that like Internet Explorer

449
00:37:25,959 --> 00:37:29,078
10 trunk open source projects for us

450
00:37:29,079 --> 00:37:34,949
opera think is sure that would work for
a lot of grandeur browser browser

451
00:37:34,949 --> 00:37:39,109
rendering engines but I don't think
there's universal approach for that I'm

452
00:37:39,109 --> 00:37:42,840
aware of but it would be great

453
00:37:42,840 --> 00:37:47,520
kind of deal for the project

454
00:37:47,520 --> 00:37:54,850
just now we were released into another
report as a presentation regarding

455
00:37:54,850 --> 00:37:59,620
medical approach to structuring

456
00:37:59,620 --> 00:38:13,170
yeah they say you're attempting to
generalize the concept of injection it's

457
00:38:13,170 --> 00:38:20,550
not exactly what you are doing but you
probably could use abroad because Jack

458
00:38:20,550 --> 00:38:22,270
needs

459
00:38:22,270 --> 00:38:24,369
well-defined grammar too

460
00:38:24,369 --> 00:38:31,930
to define what these injections and
shopping needs the same actually

461
00:38:31,930 --> 00:38:36,819
injection into the by the process right
there were talking about injecting code

462
00:38:36,819 --> 00:38:40,259
into the process to hook something
anything anywhere

463
00:38:40,259 --> 00:38:47,230
ok did trying to make it as ok there's a
lot of new technologies make it harder

464
00:38:47,230 --> 00:38:53,900
there he can for example along the
process you can figure you can't even

465
00:38:53,900 --> 00:39:00,279
the bug they're like either signed by
Microsoft for example or there there's

466
00:39:00,279 --> 00:39:04,499
some technology that makes it where it's
even harder to reverse engineer reverse

467
00:39:04,499 --> 00:39:09,740
engineering but harder to attach to it
and they're going to buy passes for that

468
00:39:09,740 --> 00:39:15,328
yeah universal way to do that I like
that and he's overcome some obstacles

469
00:39:15,329 --> 00:39:20,770
from engineering side of the target as
well yeah but I meant more

470
00:39:20,770 --> 00:39:27,410
the collegian behind it so they use
their engine for injections and I think

471
00:39:27,410 --> 00:39:33,279
you can reuse it were slightly modified
for your business

472
00:39:33,280 --> 00:39:41,140
generic enough to to reuse of proposing
to get a paper else happening attention

473
00:39:41,140 --> 00:39:47,170
it was a Russian Russian this question
thank you

474
00:39:47,170 --> 00:39:55,010
anyone else just a simple question do
tell us we should

475
00:39:55,010 --> 00:40:03,940
broad is the most safely to your
question

476
00:40:03,940 --> 00:40:14,860
I don't know the answer to that is
really yeah I don't know I would say the

477
00:40:14,860 --> 00:40:19,870
system looking at so when I think alike
secure browsing when I look at systems

478
00:40:19,870 --> 00:40:25,180
that are and I hate to like go to the
tap away in like all the you know the

479
00:40:25,180 --> 00:40:28,270
Apple way of like having everything
isolated and everything where you can't

480
00:40:28,270 --> 00:40:32,740
run your own code but that seems to be
like code integrity and you know signing

481
00:40:32,740 --> 00:40:38,450
seems to be really good solution for
even if you have a bug you know being

482
00:40:38,450 --> 00:40:42,100
able to put different stuff on the
system to exploit it and making payloads

483
00:40:42,100 --> 00:40:44,100
that much harder to run in memory

484
00:40:44,100 --> 00:40:48,450
there's always somebody passes going to
remove the restriction but instead of

485
00:40:48,450 --> 00:40:54,430
entering what the most your browser does
say look at the platform and you won't

486
00:40:54,430 --> 00:41:04,970
have to worry about it so much better
and get involved if you want your plan

487
00:41:04,970 --> 00:41:10,669
thank you any more questions

488
00:41:10,670 --> 00:41:20,570
the box is floating around you would
like the box

489
00:41:20,570 --> 00:41:28,200
alright I'll be around and I'll be home
whatever time it is there I got here

490
00:41:28,200 --> 00:41:33,080
today so confused on circadian rhythms
this point but I'm gonna upload the

491
00:41:33,080 --> 00:41:37,240
tools they get home and let me know if
you have any more questions and I'll be

492
00:41:37,240 --> 00:41:37,979
around in

493
00:41:37,980 --> 00:41:40,359
we see all tonight or somewhere tomorrow
thank you very much

