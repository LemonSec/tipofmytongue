1
00:00:01,230 --> 00:00:05,430
[Music]

2
00:00:10,280 --> 00:00:16,830
hi<font color="#E5E5E5"> everybody so today we're trying to</font>

3
00:00:14,460 --> 00:00:20,310
show you how you can<font color="#CCCCCC"> turning your</font><font color="#E5E5E5"> BMC</font>

4
00:00:16,830 --> 00:00:22,320
into a revolving<font color="#CCCCCC"> door so here is a</font>

5
00:00:20,310 --> 00:00:25,049
fabulous<font color="#E5E5E5"> pair</font><font color="#CCCCCC"> ago Alex</font><font color="#E5E5E5"> on Gaza and</font>

6
00:00:22,320 --> 00:00:26,550
<font color="#CCCCCC">myself</font><font color="#E5E5E5"> shall fetch</font><font color="#CCCCCC"> Annie if you need</font>

7
00:00:25,050 --> 00:00:28,619
something more<font color="#E5E5E5"> about us everything has</font>

8
00:00:26,550 --> 00:00:30,650
been already<font color="#CCCCCC"> leaked on internet</font><font color="#E5E5E5"> so feel</font>

9
00:00:28,619 --> 00:00:33,870
free to go there

10
00:00:30,650 --> 00:00:33,870
[Music]

11
00:00:36,350 --> 00:00:40,219
sorry guys<font color="#CCCCCC"> is</font><font color="#E5E5E5"> not working</font>

12
00:00:52,140 --> 00:01:01,920
<font color="#E5E5E5">okay oh no it's okay</font>

13
00:01:06,330 --> 00:01:09,629
[Music]

14
00:01:09,680 --> 00:01:15,480
so let's first<font color="#CCCCCC"> for the</font><font color="#E5E5E5"> first</font>

15
00:01:11,970 --> 00:01:19,470
<font color="#E5E5E5">introduction so we're talking about BMC</font>

16
00:01:15,480 --> 00:01:23,580
so<font color="#CCCCCC"> desmos management controller so we</font>

17
00:01:19,470 --> 00:01:26,789
<font color="#CCCCCC">are focused on the HP</font><font color="#E5E5E5"> system</font><font color="#CCCCCC"> it's ILO</font>

18
00:01:23,580 --> 00:01:30,620
BMC so this talk was covers a version

19
00:01:26,790 --> 00:01:33,570
for<font color="#CCCCCC"> that has been an entire middle of</font>

20
00:01:30,620 --> 00:01:38,220
2017 and but also we are introduced some

21
00:01:33,570 --> 00:01:39,690
part on<font color="#CCCCCC"> io5 about Eylau itself it's a</font>

22
00:01:38,220 --> 00:01:42,870
standalone system<font color="#E5E5E5"> so there is a</font>

23
00:01:39,690 --> 00:01:45,120
dedicated<font color="#E5E5E5"> ARM processor there is</font><font color="#CCCCCC"> a few</font>

24
00:01:42,870 --> 00:01:47,160
<font color="#E5E5E5">more stones an on-chip dedicated ram</font>

25
00:01:45,120 --> 00:01:50,460
<font color="#E5E5E5">chip did you get the network interfaces</font>

26
00:01:47,160 --> 00:01:54,270
and the last but not<font color="#E5E5E5"> least you should</font>

27
00:01:50,460 --> 00:01:56,399
<font color="#CCCCCC">know that if you plug the server so if</font>

28
00:01:54,270 --> 00:01:58,440
you make the power on the server<font color="#E5E5E5"> I lost</font>

29
00:01:56,400 --> 00:02:01,290
at you don't<font color="#E5E5E5"> need to boot the server to</font>

30
00:01:58,440 --> 00:02:04,050
that I<font color="#E5E5E5"> do need to</font><font color="#CCCCCC"> be start it's already</font>

31
00:02:01,290 --> 00:02:09,810
<font color="#E5E5E5">a start</font><font color="#CCCCCC"> as soon</font><font color="#E5E5E5"> as you plug the server</font>

32
00:02:04,050 --> 00:02:11,790
<font color="#E5E5E5">on the power about the design one really</font>

33
00:02:09,810 --> 00:02:13,530
<font color="#E5E5E5">interesting features on</font><font color="#CCCCCC"> I low</font><font color="#E5E5E5"> so you</font>

34
00:02:11,790 --> 00:02:16,560
have a direct<font color="#CCCCCC"> access to the</font><font color="#E5E5E5"> O's memory</font>

35
00:02:13,530 --> 00:02:19,020
<font color="#E5E5E5">so it means</font><font color="#CCCCCC"> that if you can open access</font>

36
00:02:16,560 --> 00:02:19,380
an idle you can reach with<font color="#CCCCCC"> a DMA the</font>

37
00:02:19,020 --> 00:02:23,660
<font color="#CCCCCC">Aust</font>

38
00:02:19,380 --> 00:02:26,489
memory we come back to<font color="#CCCCCC"> later on</font><font color="#E5E5E5"> g-spot</font>

39
00:02:23,660 --> 00:02:28,200
this<font color="#E5E5E5"> year it was being the</font><font color="#CCCCCC"> Euro of the</font>

40
00:02:26,489 --> 00:02:31,680
<font color="#CCCCCC">BMC</font><font color="#E5E5E5"> there is a lot</font><font color="#CCCCCC"> of presentation</font>

41
00:02:28,200 --> 00:02:33,238
around BMC<font color="#E5E5E5"> some people that published</font>

42
00:02:31,680 --> 00:02:35,280
during blackhat so there is a guy from

43
00:02:33,239 --> 00:02:38,220
immunities that<font color="#E5E5E5"> introduced a lot of</font>

44
00:02:35,280 --> 00:02:42,000
children are between<font color="#CCCCCC"> BMC from Dell from</font>

45
00:02:38,220 --> 00:02:43,739
<font color="#E5E5E5">Drac also from HP ILO ourself and the</font>

46
00:02:42,000 --> 00:02:46,050
people<font color="#E5E5E5"> from</font><font color="#CCCCCC"> Eclipse terms</font><font color="#E5E5E5"> that also</font>

47
00:02:43,739 --> 00:02:50,430
present some stuff<font color="#E5E5E5"> and the cyber micro</font>

48
00:02:46,050 --> 00:02:51,930
<font color="#E5E5E5">BMC there is also the our stuff so</font>

49
00:02:50,430 --> 00:02:53,459
<font color="#E5E5E5">that's</font><font color="#CCCCCC"> a publish in the</font><font color="#E5E5E5"> beginning of the</font>

50
00:02:51,930 --> 00:02:55,500
year<font color="#E5E5E5"> and in the middle of the years</font>

51
00:02:53,459 --> 00:02:57,570
about<font color="#E5E5E5"> all we can compromise the web</font>

52
00:02:55,500 --> 00:03:01,500
<font color="#E5E5E5">server</font><font color="#CCCCCC"> you know we can compromise</font><font color="#E5E5E5"> also</font>

53
00:02:57,570 --> 00:03:06,230
stream where as a previous research<font color="#CCCCCC"> that</font>

54
00:03:01,500 --> 00:03:10,019
we<font color="#E5E5E5"> publish and allow us to make</font><font color="#CCCCCC"> a good</font>

55
00:03:06,230 --> 00:03:12,390
<font color="#E5E5E5">to detect a good reliability</font><font color="#CCCCCC"> one of them</font>

56
00:03:10,019 --> 00:03:14,160
<font color="#CCCCCC">is a bypass</font><font color="#E5E5E5"> of the authentication on the</font>

57
00:03:12,390 --> 00:03:15,480
web servers<font color="#E5E5E5"> and the other one was</font><font color="#CCCCCC"> very</font>

58
00:03:14,160 --> 00:03:17,370
<font color="#E5E5E5">interesting is a remote command</font>

59
00:03:15,480 --> 00:03:19,078
execution which allow us<font color="#CCCCCC"> to have a</font>

60
00:03:17,370 --> 00:03:20,490
direct access<font color="#E5E5E5"> to the</font><font color="#CCCCCC"> O's memory with</font><font color="#E5E5E5"> a</font>

61
00:03:19,079 --> 00:03:23,350
DMR access

62
00:03:20,490 --> 00:03:25,630
the last part of the previous<font color="#CCCCCC"> research</font>

63
00:03:23,350 --> 00:03:27,880
<font color="#CCCCCC">it's all weekend</font><font color="#E5E5E5"> back doors</font><font color="#CCCCCC"> I love for</font>

64
00:03:25,630 --> 00:03:30,910
<font color="#E5E5E5">film where and now you can add the</font>

65
00:03:27,880 --> 00:03:33,130
militia<font color="#E5E5E5"> stream</font><font color="#CCCCCC"> wherein I love for and be</font>

66
00:03:30,910 --> 00:03:36,340
persistent<font color="#E5E5E5"> and add some fish sauce to</font>

67
00:03:33,130 --> 00:03:38,950
<font color="#E5E5E5">either so all this stuff has been</font>

68
00:03:36,340 --> 00:03:41,310
<font color="#E5E5E5">already presented so feel free to be</font>

69
00:03:38,950 --> 00:03:46,060
back on<font color="#E5E5E5"> the link that we provide</font>

70
00:03:41,310 --> 00:03:48,880
<font color="#CCCCCC">previously now in terms of the red</font>

71
00:03:46,060 --> 00:03:51,280
teaming so I don't know for<font color="#E5E5E5"> you but I'm</font>

72
00:03:48,880 --> 00:03:54,820
come from the pen test field and

73
00:03:51,280 --> 00:03:57,820
environment so as<font color="#CCCCCC"> usual if you</font><font color="#E5E5E5"> grab the</font>

74
00:03:54,820 --> 00:04:00,280
<font color="#CCCCCC">password from ipmi</font><font color="#E5E5E5"> you can say okay I</font>

75
00:03:57,820 --> 00:04:02,290
know the default password from your<font color="#CCCCCC"> ipmi</font>

76
00:04:00,280 --> 00:04:05,410
so what I<font color="#E5E5E5"> can do is</font><font color="#CCCCCC"> just to reboot your</font>

77
00:04:02,290 --> 00:04:07,090
<font color="#E5E5E5">server on the ISO and then booting</font><font color="#CCCCCC"> the</font>

78
00:04:05,410 --> 00:04:08,739
system and<font color="#E5E5E5"> this I saw and rich the</font>

79
00:04:07,090 --> 00:04:10,750
associative data that not be<font color="#E5E5E5"> encrypted</font>

80
00:04:08,739 --> 00:04:14,620
on the<font color="#CCCCCC"> our</font><font color="#E5E5E5"> drive but if you do that you</font>

81
00:04:10,750 --> 00:04:16,750
are<font color="#E5E5E5"> not really still see and</font><font color="#CCCCCC"> Minnesota</font>

82
00:04:14,620 --> 00:04:19,440
can catch you easily because<font color="#E5E5E5"> yeah</font><font color="#CCCCCC"> reboot</font>

83
00:04:16,750 --> 00:04:22,120
of the<font color="#E5E5E5"> system was not really a</font><font color="#CCCCCC"> steal see</font>

84
00:04:19,440 --> 00:04:24,760
now as a<font color="#CCCCCC"> notch of the very empty that we</font>

85
00:04:22,120 --> 00:04:25,240
pre published previously<font color="#E5E5E5"> what's changed</font>

86
00:04:24,760 --> 00:04:27,250
a deal

87
00:04:25,240 --> 00:04:31,479
<font color="#E5E5E5">change and deal because we can really</font>

88
00:04:27,250 --> 00:04:33,190
have a direct<font color="#E5E5E5"> access to the memory so we</font>

89
00:04:31,479 --> 00:04:34,690
can ask<font color="#E5E5E5"> more</font><font color="#CCCCCC"> discs right we don't</font><font color="#E5E5E5"> need</font>

90
00:04:33,190 --> 00:04:36,790
to reboot the system we don't<font color="#E5E5E5"> need to do</font>

91
00:04:34,690 --> 00:04:42,100
something about the<font color="#E5E5E5"> operating system we</font>

92
00:04:36,790 --> 00:04:43,600
<font color="#CCCCCC">just reach the memory through</font><font color="#E5E5E5"> ILO and if</font>

93
00:04:42,100 --> 00:04:45,610
you can<font color="#CCCCCC"> backdoor the frame where you can</font>

94
00:04:43,600 --> 00:04:47,080
have a persistent<font color="#E5E5E5"> way and it's not</font>

95
00:04:45,610 --> 00:04:49,240
correlate with the<font color="#E5E5E5"> operating</font><font color="#CCCCCC"> system so</font>

96
00:04:47,080 --> 00:04:51,460
<font color="#CCCCCC">you</font><font color="#E5E5E5"> can store some malicious code in the</font>

97
00:04:49,240 --> 00:04:53,350
ILO which the<font color="#E5E5E5"> operating system without</font>

98
00:04:51,460 --> 00:04:55,359
any interaction of the operating system

99
00:04:53,350 --> 00:04:59,550
<font color="#E5E5E5">so that's why it's really still see and</font>

100
00:04:55,360 --> 00:05:02,020
really discreet if you can with<font color="#CCCCCC"> Ram</font>

101
00:04:59,550 --> 00:05:03,460
that's really good

102
00:05:02,020 --> 00:05:06,340
<font color="#E5E5E5">for pen tester because</font><font color="#CCCCCC"> if you can do</font>

103
00:05:03,460 --> 00:05:08,620
<font color="#E5E5E5">that you know</font><font color="#CCCCCC"> that PCI leach for example</font>

104
00:05:06,340 --> 00:05:10,630
although use this<font color="#E5E5E5"> kind</font><font color="#CCCCCC"> of attack you can</font>

105
00:05:08,620 --> 00:05:12,190
unlock the windows of<font color="#CCCCCC"> Education you can</font>

106
00:05:10,630 --> 00:05:14,110
work across some provide<font color="#CCCCCC"> K or some</font>

107
00:05:12,190 --> 00:05:16,229
secret<font color="#CCCCCC"> in the memory so you</font><font color="#E5E5E5"> can do a lot</font>

108
00:05:14,110 --> 00:05:21,100
<font color="#CCCCCC">of think if</font><font color="#E5E5E5"> you can redirect is a memory</font>

109
00:05:16,229 --> 00:05:24,070
by the way if you know<font color="#CCCCCC"> a PC PC</font><font color="#E5E5E5"> ouch this</font>

110
00:05:21,100 --> 00:05:26,500
tool<font color="#E5E5E5"> can be</font><font color="#CCCCCC"> interconnect</font><font color="#E5E5E5"> with our attack</font>

111
00:05:24,070 --> 00:05:30,419
and maybe in<font color="#E5E5E5"> the future we can publish</font>

112
00:05:26,500 --> 00:05:30,419
<font color="#E5E5E5">some result about this kind of tools</font>

113
00:05:31,270 --> 00:05:36,219
in the best world<font color="#E5E5E5"> what I know</font>

114
00:05:34,000 --> 00:05:37,419
infrastructure or what<font color="#CCCCCC"> arena of a</font>

115
00:05:36,220 --> 00:05:41,620
structure should be<font color="#E5E5E5"> looked like it's</font>

116
00:05:37,419 --> 00:05:44,169
like<font color="#E5E5E5"> that you should have</font><font color="#CCCCCC"> a stop protein</font>

117
00:05:41,620 --> 00:05:46,660
but<font color="#E5E5E5"> you should have a dedicated in in a</font>

118
00:05:44,169 --> 00:05:49,990
cable<font color="#E5E5E5"> administration</font><font color="#CCCCCC"> Delon</font><font color="#E5E5E5"> you should</font>

119
00:05:46,660 --> 00:05:54,039
have a<font color="#E5E5E5"> sexual</font><font color="#CCCCCC"> DMZ and initially</font><font color="#E5E5E5"> the</font><font color="#CCCCCC"> back</font>

120
00:05:49,990 --> 00:05:58,139
<font color="#CCCCCC">end</font><font color="#E5E5E5"> so usually no one nor across can</font>

121
00:05:54,039 --> 00:06:02,259
reach<font color="#E5E5E5"> the onion</font><font color="#CCCCCC"> villain but</font><font color="#E5E5E5"> if you can</font>

122
00:05:58,139 --> 00:06:03,880
compromise the<font color="#CCCCCC"> aust enriched Idol in</font><font color="#E5E5E5"> 420</font>

123
00:06:02,259 --> 00:06:06,130
<font color="#E5E5E5">is there is a lot</font><font color="#CCCCCC"> of</font><font color="#E5E5E5"> ILO has been</font>

124
00:06:03,880 --> 00:06:08,380
<font color="#E5E5E5">exposing</font><font color="#CCCCCC"> internet</font><font color="#E5E5E5"> it's pretty well but</font>

125
00:06:06,130 --> 00:06:10,419
it's<font color="#CCCCCC"> like that people</font><font color="#E5E5E5"> just plug</font><font color="#CCCCCC"> I go and</font>

126
00:06:08,380 --> 00:06:12,669
internet and you<font color="#CCCCCC"> can reach it</font><font color="#E5E5E5"> so if you</font>

127
00:06:10,419 --> 00:06:15,549
can<font color="#CCCCCC"> break</font><font color="#E5E5E5"> I hope you can reach the</font>

128
00:06:12,669 --> 00:06:18,789
routing<font color="#E5E5E5"> system</font><font color="#CCCCCC"> via ZD Emma</font><font color="#E5E5E5"> but if you</font>

129
00:06:15,550 --> 00:06:21,130
already have an access to<font color="#E5E5E5"> the I know you</font>

130
00:06:18,789 --> 00:06:24,280
can also have a<font color="#E5E5E5"> lateral movement from</font><font color="#CCCCCC"> I</font>

131
00:06:21,130 --> 00:06:26,320
<font color="#E5E5E5">low and on the administration's Ellen so</font>

132
00:06:24,280 --> 00:06:28,059
it means<font color="#CCCCCC"> that</font><font color="#E5E5E5"> you can compromise the</font>

133
00:06:26,320 --> 00:06:29,590
other i/o interfaces<font color="#E5E5E5"> and if you</font>

134
00:06:28,060 --> 00:06:31,599
compromise<font color="#E5E5E5"> also those are either</font>

135
00:06:29,590 --> 00:06:34,359
interfaces you can compromise<font color="#CCCCCC"> the O's</font>

136
00:06:31,599 --> 00:06:36,310
<font color="#E5E5E5">ill safe and then you can have a really</font>

137
00:06:34,360 --> 00:06:38,979
interesting lateral movement on the<font color="#E5E5E5"> amid</font>

138
00:06:36,310 --> 00:06:41,259
fashion<font color="#E5E5E5"> villain</font><font color="#CCCCCC"> that I say if you</font>

139
00:06:38,979 --> 00:06:43,750
compromise<font color="#CCCCCC"> I</font><font color="#E5E5E5"> low but let's see maybe you</font>

140
00:06:41,259 --> 00:06:46,960
can compromise<font color="#E5E5E5"> us to reach I low so</font>

141
00:06:43,750 --> 00:06:52,930
that's why<font color="#CCCCCC"> Fabian maybe make more</font>

142
00:06:46,960 --> 00:06:56,370
information about<font color="#E5E5E5"> that hi everyone</font><font color="#CCCCCC"> so as</font>

143
00:06:52,930 --> 00:06:58,810
I<font color="#E5E5E5"> just told you we first focused on</font>

144
00:06:56,370 --> 00:07:01,030
compromising the<font color="#CCCCCC"> ILO</font><font color="#E5E5E5"> to then compromise</font>

145
00:06:58,810 --> 00:07:04,479
the<font color="#E5E5E5"> host and for this specific research</font>

146
00:07:01,030 --> 00:07:06,969
we try to see how to compromise the ILO

147
00:07:04,479 --> 00:07:09,159
drive<font color="#E5E5E5"> directly from the from the host so</font>

148
00:07:06,969 --> 00:07:12,699
we can compromise the<font color="#E5E5E5"> I love from</font><font color="#CCCCCC"> both</font>

149
00:07:09,159 --> 00:07:16,419
sides<font color="#CCCCCC"> so quick recap of</font><font color="#E5E5E5"> the architecture</font>

150
00:07:12,699 --> 00:07:19,719
of<font color="#E5E5E5"> an HP server so</font><font color="#CCCCCC"> while there</font><font color="#E5E5E5"> are in</font>

151
00:07:16,419 --> 00:07:22,090
fact<font color="#E5E5E5"> two really separated systems in the</font>

152
00:07:19,719 --> 00:07:24,310
server so the the<font color="#CCCCCC"> first on</font><font color="#E5E5E5"> the left is</font>

153
00:07:22,090 --> 00:07:28,539
the main CPUs are usually an<font color="#E5E5E5"> intel cpu</font>

154
00:07:24,310 --> 00:07:30,820
with x86<font color="#E5E5E5"> architecture running a standard</font>

155
00:07:28,539 --> 00:07:32,590
<font color="#E5E5E5">operating system so here</font><font color="#CCCCCC"> linux kernel</font>

156
00:07:30,820 --> 00:07:35,320
with<font color="#E5E5E5"> all these process in new zealand</font>

157
00:07:32,590 --> 00:07:38,919
<font color="#E5E5E5">and on the other</font><font color="#CCCCCC"> side so you have this</font>

158
00:07:35,320 --> 00:07:42,039
arm CPU running<font color="#CCCCCC"> real-time operating</font>

159
00:07:38,919 --> 00:07:43,000
system called integrity which is not so

160
00:07:42,039 --> 00:07:45,010
<font color="#CCCCCC">different</font>

161
00:07:43,000 --> 00:07:48,760
<font color="#E5E5E5">on the classical operating systems you</font>

162
00:07:45,010 --> 00:07:51,310
have<font color="#CCCCCC"> a</font><font color="#E5E5E5"> kernel and if I use tasks running</font>

163
00:07:48,760 --> 00:07:53,710
in<font color="#CCCCCC"> userland so</font><font color="#E5E5E5"> task is the name in fact</font>

164
00:07:51,310 --> 00:07:56,590
for like processes in a normal operating

165
00:07:53,710 --> 00:07:59,340
system and these<font color="#E5E5E5"> two system will</font>

166
00:07:56,590 --> 00:08:03,549
communicate through the PCI<font color="#E5E5E5"> Express link</font>

167
00:07:59,340 --> 00:08:07,119
<font color="#E5E5E5">so hole which will</font><font color="#CCCCCC"> be said in this part</font>

168
00:08:03,550 --> 00:08:09,310
applies on idle for<font color="#E5E5E5"> but can also be</font>

169
00:08:07,120 --> 00:08:15,100
<font color="#CCCCCC">valid for</font><font color="#E5E5E5"> the new version I</font><font color="#CCCCCC"> defy with</font>

170
00:08:09,310 --> 00:08:16,840
<font color="#E5E5E5">some slight</font><font color="#CCCCCC"> changes so</font><font color="#E5E5E5"> to to analyze how</font>

171
00:08:15,100 --> 00:08:18,610
the house was able to<font color="#E5E5E5"> communicate with</font>

172
00:08:16,840 --> 00:08:23,109
the ILO<font color="#CCCCCC"> we first started to</font><font color="#E5E5E5"> look at the</font>

173
00:08:18,610 --> 00:08:25,870
available tuning the<font color="#CCCCCC"> Linux channel</font><font color="#E5E5E5"> has</font>

174
00:08:23,110 --> 00:08:27,910
an<font color="#CCCCCC"> offensive driver called HP ILO</font><font color="#E5E5E5"> which</font>

175
00:08:25,870 --> 00:08:29,500
exposes some character<font color="#CCCCCC"> devices to</font>

176
00:08:27,910 --> 00:08:31,810
<font color="#CCCCCC">communicate with I low</font>

177
00:08:29,500 --> 00:08:33,520
it requires root permissions on<font color="#CCCCCC"> the</font>

178
00:08:31,810 --> 00:08:36,610
operating<font color="#E5E5E5"> system to</font><font color="#CCCCCC"> be allowed to</font><font color="#E5E5E5"> talk</font>

179
00:08:33,520 --> 00:08:39,728
with these<font color="#E5E5E5"> devices and on the other side</font>

180
00:08:36,610 --> 00:08:44,169
<font color="#CCCCCC">you also have HPE proprietary tools such</font>

181
00:08:39,729 --> 00:08:46,750
as<font color="#E5E5E5"> HP and CFG which allows to get and</font>

182
00:08:44,169 --> 00:08:50,140
modify some configuration parameters of

183
00:08:46,750 --> 00:08:53,380
the ILO<font color="#E5E5E5"> and finally when you download</font>

184
00:08:50,140 --> 00:08:56,020
the firmware<font color="#E5E5E5"> update for</font><font color="#CCCCCC"> Eylau it embeds</font>

185
00:08:53,380 --> 00:08:58,980
a binary<font color="#E5E5E5"> which is called flash</font><font color="#CCCCCC"> I love</font>

186
00:08:56,020 --> 00:09:01,420
<font color="#CCCCCC">raw</font><font color="#E5E5E5"> binary which allows from the host to</font>

187
00:08:58,980 --> 00:09:04,300
install a new femur of the on the<font color="#E5E5E5"> a low</font>

188
00:09:01,420 --> 00:09:05,560
so it<font color="#E5E5E5"> shall be</font><font color="#CCCCCC"> able also to understand</font>

189
00:09:04,300 --> 00:09:11,349
the communication mechanism with the

190
00:09:05,560 --> 00:09:14,339
<font color="#E5E5E5">with the</font><font color="#CCCCCC"> idol if we look at the idler</font>

191
00:09:11,350 --> 00:09:16,990
from a<font color="#E5E5E5"> Linux point of view it is simply</font>

192
00:09:14,339 --> 00:09:20,470
<font color="#E5E5E5">PCI device which can be seen</font><font color="#CCCCCC"> with the</font>

193
00:09:16,990 --> 00:09:23,589
<font color="#CCCCCC">RSPCA</font><font color="#E5E5E5"> command and if we look at the main</font>

194
00:09:20,470 --> 00:09:25,600
memory mapping we have values<font color="#E5E5E5"> chunks of</font>

195
00:09:23,589 --> 00:09:29,080
memory which has used by these<font color="#E5E5E5"> drivers</font>

196
00:09:25,600 --> 00:09:32,530
and which in fact allowed to<font color="#CCCCCC"> communicate</font>

197
00:09:29,080 --> 00:09:35,020
with the ILO<font color="#CCCCCC"> the communication is</font><font color="#E5E5E5"> done</font>

198
00:09:32,530 --> 00:09:37,900
by channels we have<font color="#CCCCCC"> usually between</font><font color="#E5E5E5"> 8</font>

199
00:09:35,020 --> 00:09:40,660
and 24 channels which are set up in

200
00:09:37,900 --> 00:09:44,610
<font color="#E5E5E5">these shared memory areas and these</font>

201
00:09:40,660 --> 00:09:48,400
channels<font color="#CCCCCC"> have</font><font color="#E5E5E5"> a simple</font><font color="#CCCCCC"> micro</font><font color="#E5E5E5"> structure</font>

202
00:09:44,610 --> 00:09:51,070
on the<font color="#CCCCCC"> other side there is</font><font color="#E5E5E5"> a specific</font>

203
00:09:48,400 --> 00:09:52,930
<font color="#E5E5E5">task which</font><font color="#CCCCCC"> is called chief for channel</font>

204
00:09:51,070 --> 00:09:55,060
interface which is<font color="#E5E5E5"> in</font><font color="#CCCCCC"> charge of</font>

205
00:09:52,930 --> 00:09:56,680
receiving<font color="#E5E5E5"> the messages from the host and</font>

206
00:09:55,060 --> 00:09:58,930
underling them so

207
00:09:56,680 --> 00:10:01,180
what it does is simply<font color="#E5E5E5"> waiting</font><font color="#CCCCCC"> for</font>

208
00:09:58,930 --> 00:10:03,638
<font color="#E5E5E5">messages from the host dispatching the</font>

209
00:10:01,180 --> 00:10:06,670
correct<font color="#E5E5E5"> command to a specific command</font>

210
00:10:03,639 --> 00:10:09,970
and<font color="#CCCCCC"> ler</font><font color="#E5E5E5"> or sending the command to</font>

211
00:10:06,670 --> 00:10:13,990
another task<font color="#E5E5E5"> because you can talk</font>

212
00:10:09,970 --> 00:10:15,550
directly<font color="#CCCCCC"> to other other tasks the the</font>

213
00:10:13,990 --> 00:10:18,160
message from at it quite<font color="#E5E5E5"> simple you</font><font color="#CCCCCC"> have</font>

214
00:10:15,550 --> 00:10:20,439
a land command ID a destination ID which

215
00:10:18,160 --> 00:10:23,019
tells which task is the final

216
00:10:20,439 --> 00:10:26,019
<font color="#CCCCCC">destination</font><font color="#E5E5E5"> and finally a specific data</font>

217
00:10:23,019 --> 00:10:27,309
for<font color="#E5E5E5"> the</font><font color="#CCCCCC"> fod</font><font color="#E5E5E5"> command and the important</font>

218
00:10:26,019 --> 00:10:30,689
<font color="#CCCCCC">thing</font><font color="#E5E5E5"> is that by default there's no</font>

219
00:10:27,309 --> 00:10:33,670
authentication so the host is considered

220
00:10:30,689 --> 00:10:36,009
secure from<font color="#E5E5E5"> the from the</font><font color="#CCCCCC"> high/low you</font>

221
00:10:33,670 --> 00:10:39,910
can you can always by default<font color="#CCCCCC"> talk to</font>

222
00:10:36,009 --> 00:10:42,759
the ILO from the host about<font color="#CCCCCC"> the commands</font>

223
00:10:39,910 --> 00:10:45,639
which are handled<font color="#E5E5E5"> by chief we have more</font>

224
00:10:42,759 --> 00:10:48,490
than 100 commands<font color="#E5E5E5"> some simple commands</font>

225
00:10:45,639 --> 00:10:49,990
<font color="#E5E5E5">such as getting setting some some</font>

226
00:10:48,490 --> 00:10:52,269
configuration settings the network

227
00:10:49,990 --> 00:10:55,869
configuration of the I load the server

228
00:10:52,269 --> 00:10:58,269
information<font color="#CCCCCC"> etc and some are more</font>

229
00:10:55,869 --> 00:11:01,059
<font color="#E5E5E5">dangerous for example you have cumin</font>

230
00:10:58,269 --> 00:11:02,800
<font color="#E5E5E5">cumin 70 which allows to read the ILO</font>

231
00:11:01,059 --> 00:11:05,889
EEPROM containing all<font color="#CCCCCC"> the factory</font>

232
00:11:02,800 --> 00:11:08,769
setting<font color="#CCCCCC"> of the ILO</font><font color="#E5E5E5"> which includes the</font>

233
00:11:05,889 --> 00:11:10,629
default administrator password<font color="#E5E5E5"> usually</font>

234
00:11:08,769 --> 00:11:12,040
<font color="#CCCCCC">Nilo this password is</font><font color="#E5E5E5"> not changed</font>

235
00:11:10,629 --> 00:11:13,779
because it's quite convenient it's

236
00:11:12,040 --> 00:11:17,410
written on the<font color="#E5E5E5"> server so you can use it</font>

237
00:11:13,779 --> 00:11:19,660
<font color="#E5E5E5">if you forgot the</font><font color="#CCCCCC"> other</font><font color="#E5E5E5"> passwords</font><font color="#CCCCCC"> there</font>

238
00:11:17,410 --> 00:11:22,929
are commands<font color="#CCCCCC"> also to flush a new</font>

239
00:11:19,660 --> 00:11:26,230
firmware so command 15<font color="#CCCCCC"> +</font><font color="#E5E5E5"> 52 and finally</font>

240
00:11:22,929 --> 00:11:28,179
there<font color="#CCCCCC"> are also commands to add new</font>

241
00:11:26,230 --> 00:11:32,949
accounts on the ILO including

242
00:11:28,179 --> 00:11:35,439
administrator accounts so to<font color="#E5E5E5"> show you</font>

243
00:11:32,949 --> 00:11:38,349
<font color="#E5E5E5">how is it to communicate</font><font color="#CCCCCC"> with ILO from</font>

244
00:11:35,439 --> 00:11:41,889
<font color="#CCCCCC">linacs</font><font color="#E5E5E5"> here is a simple</font><font color="#CCCCCC"> communication in</font>

245
00:11:38,350 --> 00:11:44,529
<font color="#E5E5E5">six lines of Python which use the</font>

246
00:11:41,889 --> 00:11:46,929
command 70 I show<font color="#E5E5E5"> I</font><font color="#CCCCCC"> should</font><font color="#E5E5E5"> before to</font>

247
00:11:44,529 --> 00:11:48,970
tribute trial the content of the<font color="#E5E5E5"> EEPROM</font>

248
00:11:46,929 --> 00:11:50,799
so you can see that<font color="#E5E5E5"> with six lines of</font>

249
00:11:48,970 --> 00:11:52,749
<font color="#E5E5E5">Python you can reach drive the default</font>

250
00:11:50,799 --> 00:11:58,869
administrator password stored in the

251
00:11:52,749 --> 00:12:01,990
indie drama<font color="#E5E5E5"> so know that we studied this</font>

252
00:11:58,869 --> 00:12:03,970
commands we focused on the<font color="#E5E5E5"> firmware date</font>

253
00:12:01,990 --> 00:12:06,879
command<font color="#E5E5E5"> because it was quite interesting</font>

254
00:12:03,970 --> 00:12:08,949
<font color="#E5E5E5">for us it involves complex file format</font>

255
00:12:06,879 --> 00:12:10,990
parsing it has various signature checks

256
00:12:08,949 --> 00:12:13,990
and if we find<font color="#CCCCCC"> Aven error</font>

257
00:12:10,990 --> 00:12:17,910
<font color="#CCCCCC">in this indiscriminantly we might be</font>

258
00:12:13,990 --> 00:12:21,060
<font color="#CCCCCC">able</font><font color="#E5E5E5"> to flush a modified firmware with</font>

259
00:12:17,910 --> 00:12:24,490
by<font color="#E5E5E5"> bypassing the signature checks and</font>

260
00:12:21,060 --> 00:12:26,500
another advantage<font color="#CCCCCC"> is that this the</font>

261
00:12:24,490 --> 00:12:30,160
ephemeral<font color="#E5E5E5"> dick process is available</font><font color="#CCCCCC"> both</font>

262
00:12:26,500 --> 00:12:32,440
from the from the host and from the web

263
00:12:30,160 --> 00:12:35,199
server interface<font color="#CCCCCC"> of the I hope so</font>

264
00:12:32,440 --> 00:12:37,690
a vulnerability<font color="#CCCCCC"> needs would be</font><font color="#E5E5E5"> would be</font>

265
00:12:35,200 --> 00:12:42,459
trigger about by both both sides of the

266
00:12:37,690 --> 00:12:45,610
ILO so let's have a look at the<font color="#E5E5E5"> few more</font>

267
00:12:42,459 --> 00:12:47,229
deep process so first when you decide to

268
00:12:45,610 --> 00:12:50,680
<font color="#CCCCCC">flash</font><font color="#E5E5E5"> in your firmware the firmware is</font>

269
00:12:47,230 --> 00:12:52,570
sent<font color="#CCCCCC"> to either</font><font color="#E5E5E5"> chief if we if</font><font color="#CCCCCC"> you</font><font color="#E5E5E5"> ask it</font>

270
00:12:50,680 --> 00:12:55,479
by your<font color="#CCCCCC"> body</font><font color="#E5E5E5"> host</font><font color="#CCCCCC"> or the webserver if</font>

271
00:12:52,570 --> 00:12:57,880
you ask it by the network interface<font color="#E5E5E5"> this</font>

272
00:12:55,480 --> 00:13:00,339
firmware<font color="#E5E5E5"> is sent to a new task which is</font>

273
00:12:57,880 --> 00:13:05,279
<font color="#CCCCCC">called fume which</font><font color="#E5E5E5"> is the firmware update</font>

274
00:13:00,339 --> 00:13:07,300
manager this task will perform a first

275
00:13:05,279 --> 00:13:09,520
<font color="#CCCCCC">validation of the file format and</font><font color="#E5E5E5"> the</font>

276
00:13:07,300 --> 00:13:11,920
<font color="#CCCCCC">wall signature of the frame where it</font>

277
00:13:09,520 --> 00:13:13,420
will then<font color="#CCCCCC"> ask the integrated kernel to</font>

278
00:13:11,920 --> 00:13:15,490
perform additional<font color="#CCCCCC"> signature</font>

279
00:13:13,420 --> 00:13:17,979
verifications<font color="#E5E5E5"> and if everything goes</font>

280
00:13:15,490 --> 00:13:21,160
well<font color="#E5E5E5"> it will ask the SPI service to</font>

281
00:13:17,980 --> 00:13:27,220
finally write the<font color="#E5E5E5"> firmware on the</font><font color="#CCCCCC"> spi</font>

282
00:13:21,160 --> 00:13:31,120
<font color="#E5E5E5">flash so recap of the firmware file</font>

283
00:13:27,220 --> 00:13:33,700
format so the<font color="#CCCCCC"> film</font><font color="#E5E5E5"> is basically composed</font>

284
00:13:31,120 --> 00:13:36,399
of three blocks<font color="#CCCCCC"> first as a</font><font color="#E5E5E5"> fingerprint</font>

285
00:13:33,700 --> 00:13:38,770
header then some certificates and then

286
00:13:36,399 --> 00:13:42,070
<font color="#E5E5E5">the HPI image blob which is the actual</font>

287
00:13:38,770 --> 00:13:44,439
firmware in the fingerprint<font color="#E5E5E5"> part you</font>

288
00:13:42,070 --> 00:13:50,100
simply have<font color="#E5E5E5"> the hash tip and the</font>

289
00:13:44,440 --> 00:13:52,899
signature of the wall<font color="#CCCCCC"> HPI</font><font color="#E5E5E5"> made</font><font color="#CCCCCC"> via mail</font>

290
00:13:50,100 --> 00:13:56,709
so<font color="#E5E5E5"> this is this part</font><font color="#CCCCCC"> which is handled by</font>

291
00:13:52,899 --> 00:13:58,600
<font color="#CCCCCC">the</font><font color="#E5E5E5"> film task so this HP signed Phi</font>

292
00:13:56,709 --> 00:14:01,329
Gamma fingerprint header is passed line

293
00:13:58,600 --> 00:14:04,300
by line by fume and the hash and

294
00:14:01,329 --> 00:14:06,579
signatures elemental verified<font color="#E5E5E5"> then the</font>

295
00:14:04,300 --> 00:14:08,859
hash of<font color="#E5E5E5"> the HPI image block is computed</font>

296
00:14:06,579 --> 00:14:13,750
and the simulator is checked with the

297
00:14:08,860 --> 00:14:17,050
<font color="#E5E5E5">hot coded HP public key if we</font><font color="#CCCCCC"> look at</font>

298
00:14:13,750 --> 00:14:19,660
the<font color="#E5E5E5"> HPI image block</font><font color="#CCCCCC"> h it's in fact</font>

299
00:14:17,050 --> 00:14:22,779
composed of three other blocks<font color="#CCCCCC"> there are</font>

300
00:14:19,660 --> 00:14:23,750
<font color="#E5E5E5">the</font><font color="#CCCCCC"> channel and signature components</font>

301
00:14:22,779 --> 00:14:26,120
which are<font color="#E5E5E5"> compress</font>

302
00:14:23,750 --> 00:14:28,670
<font color="#E5E5E5">and signed and also a small bootloader</font>

303
00:14:26,120 --> 00:14:33,740
which is not<font color="#E5E5E5"> compressed and not signing</font>

304
00:14:28,670 --> 00:14:35,599
it's a<font color="#E5E5E5"> an arm assembly step during</font><font color="#CCCCCC"> the</font>

305
00:14:33,740 --> 00:14:37,640
boot process of the<font color="#E5E5E5"> I</font><font color="#CCCCCC"> lo</font><font color="#E5E5E5"> first</font><font color="#CCCCCC"> the</font><font color="#E5E5E5"> boot</font>

306
00:14:35,600 --> 00:14:39,470
<font color="#E5E5E5">order</font><font color="#CCCCCC"> executes it has code to load and</font>

307
00:14:37,640 --> 00:14:42,470
verify the key on<font color="#E5E5E5"> our signature then the</font>

308
00:14:39,470 --> 00:14:44,900
channel<font color="#E5E5E5"> which with load and verify the</font>

309
00:14:42,470 --> 00:14:46,700
user<font color="#E5E5E5"> and signature but the boot raider</font>

310
00:14:44,900 --> 00:14:49,689
is never verified in the<font color="#E5E5E5"> boot process</font>

311
00:14:46,700 --> 00:14:52,610
[Music]

312
00:14:49,690 --> 00:14:55,370
<font color="#CCCCCC">this is the the the verification of</font><font color="#E5E5E5"> the</font>

313
00:14:52,610 --> 00:14:58,370
signature of the<font color="#CCCCCC"> user lanolin images is</font>

314
00:14:55,370 --> 00:15:01,490
done in the canal<font color="#CCCCCC"> there is a</font><font color="#E5E5E5"> specific</font>

315
00:14:58,370 --> 00:15:03,760
channel task called<font color="#E5E5E5"> GK IMG which exposes</font>

316
00:15:01,490 --> 00:15:07,040
<font color="#E5E5E5">a specific resource to Jerusalem</font><font color="#CCCCCC"> tasks</font>

317
00:15:03,760 --> 00:15:10,130
<font color="#E5E5E5">it also exposes</font><font color="#CCCCCC"> ten common handles and</font>

318
00:15:07,040 --> 00:15:12,380
<font color="#CCCCCC">rows and for example command to allows</font><font color="#E5E5E5"> a</font>

319
00:15:10,130 --> 00:15:15,189
<font color="#CCCCCC">user on task to ask to verify the</font>

320
00:15:12,380 --> 00:15:18,290
signature of the channel and userland

321
00:15:15,190 --> 00:15:20,150
components<font color="#E5E5E5"> so it will first decrypt the</font>

322
00:15:18,290 --> 00:15:21,709
embedded signature it will compute a

323
00:15:20,150 --> 00:15:24,350
hash<font color="#E5E5E5"> and compared</font><font color="#CCCCCC"> to the decrypted</font>

324
00:15:21,710 --> 00:15:29,120
signatures and finally<font color="#E5E5E5"> try to decompress</font>

325
00:15:24,350 --> 00:15:32,510
<font color="#E5E5E5">the the the the</font><font color="#CCCCCC"> image to be sure</font><font color="#E5E5E5"> that</font>

326
00:15:29,120 --> 00:15:34,700
the compression<font color="#CCCCCC"> is</font><font color="#E5E5E5"> a key and we also</font>

327
00:15:32,510 --> 00:15:36,830
found out there's a specific handler

328
00:15:34,700 --> 00:15:38,510
<font color="#CCCCCC">also to</font><font color="#E5E5E5"> change the key used to verify</font>

329
00:15:36,830 --> 00:15:42,710
<font color="#E5E5E5">the signature it would be important</font>

330
00:15:38,510 --> 00:15:45,200
later so quick recap<font color="#CCCCCC"> about the signature</font>

331
00:15:42,710 --> 00:15:47,480
check<font color="#CCCCCC"> in fact signature</font><font color="#E5E5E5"> are checked in</font>

332
00:15:45,200 --> 00:15:50,750
three different<font color="#CCCCCC"> steps first steps in</font><font color="#E5E5E5"> the</font>

333
00:15:47,480 --> 00:15:52,850
fume<font color="#E5E5E5"> task the wall hpmh signature is</font>

334
00:15:50,750 --> 00:15:55,250
checked<font color="#E5E5E5"> the second part in the channel</font>

335
00:15:52,850 --> 00:15:57,890
we in which userland and channel image

336
00:15:55,250 --> 00:16:00,500
is<font color="#E5E5E5"> a signature also checked and finally</font>

337
00:15:57,890 --> 00:16:04,189
when the<font color="#CCCCCC"> I</font><font color="#E5E5E5"> low will boot</font><font color="#CCCCCC"> there's a kind</font>

338
00:16:00,500 --> 00:16:06,650
of secure boot chain when<font color="#E5E5E5"> where channel</font>

339
00:16:04,190 --> 00:16:07,850
and user land signature object but the

340
00:16:06,650 --> 00:16:09,500
bootloader<font color="#E5E5E5"> is not signed and the</font>

341
00:16:07,850 --> 00:16:12,140
<font color="#CCCCCC">bootloader is</font><font color="#E5E5E5"> never checked in the</font><font color="#CCCCCC"> inter</font>

342
00:16:09,500 --> 00:16:13,880
boot in<font color="#E5E5E5"> the boot process</font><font color="#CCCCCC"> so it means</font>

343
00:16:12,140 --> 00:16:15,020
<font color="#E5E5E5">that with a single</font><font color="#CCCCCC"> userland</font>

344
00:16:13,880 --> 00:16:18,380
vulnerability<font color="#CCCCCC"> Nilo</font>

345
00:16:15,020 --> 00:16:21,140
we are<font color="#CCCCCC"> able to</font><font color="#E5E5E5"> write a new firmware on</font>

346
00:16:18,380 --> 00:16:23,839
<font color="#CCCCCC">the on the flash by asking the SPI</font>

347
00:16:21,140 --> 00:16:26,620
service then the bootloader can be

348
00:16:23,839 --> 00:16:28,490
modified<font color="#E5E5E5"> to allow</font>

349
00:16:26,620 --> 00:16:30,410
<font color="#E5E5E5">loading a channel with an invalid</font>

350
00:16:28,490 --> 00:16:32,660
signature in turn the<font color="#CCCCCC"> channel can be</font>

351
00:16:30,410 --> 00:16:34,640
<font color="#E5E5E5">modified</font><font color="#CCCCCC"> to allow the loading</font><font color="#E5E5E5"> of a user</font>

352
00:16:32,660 --> 00:16:36,920
on with an invalid signature<font color="#E5E5E5"> and finally</font>

353
00:16:34,640 --> 00:16:42,139
we can<font color="#E5E5E5"> insert a</font><font color="#CCCCCC"> background in the</font>

354
00:16:36,920 --> 00:16:44,238
<font color="#CCCCCC">I know user lanlan so we then had a look</font>

355
00:16:42,139 --> 00:16:47,989
at a few<font color="#CCCCCC"> mas</font>

356
00:16:44,239 --> 00:16:50,989
handling the<font color="#CCCCCC"> fingerprint header and we</font>

357
00:16:47,989 --> 00:16:53,839
<font color="#E5E5E5">quickly find this specific</font><font color="#CCCCCC"> function</font><font color="#E5E5E5"> in</font>

358
00:16:50,989 --> 00:16:55,399
which<font color="#E5E5E5"> it passes the ID header and we</font><font color="#CCCCCC"> saw</font>

359
00:16:53,839 --> 00:16:59,629
this<font color="#E5E5E5"> with this call to the function red</font>

360
00:16:55,399 --> 00:17:03,769
line in red<font color="#CCCCCC"> in which local stack buffer</font>

361
00:16:59,629 --> 00:17:06,110
is passed without any any size so this

362
00:17:03,769 --> 00:17:07,970
is not<font color="#CCCCCC"> always a</font><font color="#E5E5E5"> good idea and if we look</font>

363
00:17:06,109 --> 00:17:10,428
in fact at the<font color="#CCCCCC"> redline function we can</font>

364
00:17:07,970 --> 00:17:13,490
<font color="#CCCCCC">see that the no check on the size of the</font>

365
00:17:10,429 --> 00:17:15,230
buffer so there's a he retrieve your

366
00:17:13,490 --> 00:17:20,000
<font color="#E5E5E5">buffer overflow in the passing of this</font>

367
00:17:15,230 --> 00:17:23,480
header this means that it could be

368
00:17:20,000 --> 00:17:25,099
<font color="#E5E5E5">exploited we first tried</font><font color="#CCCCCC"> to exploit it</font>

369
00:17:23,480 --> 00:17:27,709
without code execution<font color="#E5E5E5"> because it would</font>

370
00:17:25,099 --> 00:17:30,350
be easier<font color="#E5E5E5"> so we</font><font color="#CCCCCC"> wanted</font><font color="#E5E5E5"> to</font><font color="#CCCCCC"> just</font><font color="#E5E5E5"> redirect</font>

371
00:17:27,709 --> 00:17:32,720
the exaction flow to simply bypass<font color="#E5E5E5"> the</font>

372
00:17:30,350 --> 00:17:35,178
signature value validation and let<font color="#E5E5E5"> fume</font>

373
00:17:32,720 --> 00:17:38,360
continue to filter<font color="#CCCCCC"> a few more but in</font>

374
00:17:35,179 --> 00:17:40,250
fact we had<font color="#CCCCCC"> the problem with the</font><font color="#E5E5E5"> D check</font>

375
00:17:38,360 --> 00:17:43,340
in the canal which will fail so<font color="#CCCCCC"> we</font>

376
00:17:40,250 --> 00:17:45,649
couldn't do<font color="#CCCCCC"> that so</font><font color="#E5E5E5"> finally we decided</font>

377
00:17:43,340 --> 00:17:48,559
<font color="#E5E5E5">to</font><font color="#CCCCCC"> exploit</font><font color="#E5E5E5"> it with code execution by</font>

378
00:17:45,649 --> 00:17:51,408
<font color="#CCCCCC">your watching a specific</font><font color="#E5E5E5"> shell code</font><font color="#CCCCCC"> the</font>

379
00:17:48,559 --> 00:17:53,690
<font color="#E5E5E5">chance here is that the</font><font color="#CCCCCC"> I lo system does</font>

380
00:17:51,409 --> 00:17:57,049
not have<font color="#E5E5E5"> security mitigations of such as</font>

381
00:17:53,690 --> 00:17:59,570
a SLR<font color="#CCCCCC"> or no NX</font><font color="#E5E5E5"> so a shell code had</font><font color="#CCCCCC"> been</font>

382
00:17:57,049 --> 00:18:01,129
returned<font color="#E5E5E5"> in the framework file which is</font>

383
00:17:59,570 --> 00:18:05,149
<font color="#E5E5E5">loaded at</font><font color="#CCCCCC"> the fixed addressed</font><font color="#E5E5E5"> memory and</font>

384
00:18:01,130 --> 00:18:07,490
we can just<font color="#E5E5E5"> jump</font><font color="#CCCCCC"> on it</font><font color="#E5E5E5"> and then the</font><font color="#CCCCCC"> the</font>

385
00:18:05,149 --> 00:18:09,469
shell code content can simply be to talk

386
00:18:07,490 --> 00:18:11,389
to the SPI<font color="#E5E5E5"> service to ask him to</font>

387
00:18:09,470 --> 00:18:15,559
actually write<font color="#E5E5E5"> the firmware on</font><font color="#CCCCCC"> the flash</font>

388
00:18:11,389 --> 00:18:18,350
<font color="#E5E5E5">or we can simply change the GK image key</font>

389
00:18:15,559 --> 00:18:21,399
resign the<font color="#CCCCCC"> firmware</font><font color="#E5E5E5"> with our own key and</font>

390
00:18:18,350 --> 00:18:24,110
let<font color="#CCCCCC"> fume</font><font color="#E5E5E5"> continue the process normally</font>

391
00:18:21,399 --> 00:18:27,080
so this vulnerability<font color="#E5E5E5"> has been reported</font>

392
00:18:24,110 --> 00:18:29,360
to HP in May it<font color="#E5E5E5"> does be it impacts both</font>

393
00:18:27,080 --> 00:18:31,549
<font color="#E5E5E5">I look for on which we did the research</font>

394
00:18:29,360 --> 00:18:35,000
and I love<font color="#CCCCCC"> 5</font><font color="#E5E5E5"> the new version but she has</font>

395
00:18:31,549 --> 00:18:36,710
been<font color="#CCCCCC"> available it is both</font><font color="#E5E5E5"> remote and</font>

396
00:18:35,000 --> 00:18:38,600
local<font color="#E5E5E5"> code execution because you can</font>

397
00:18:36,710 --> 00:18:41,120
either export it<font color="#CCCCCC"> from the web server of</font>

398
00:18:38,600 --> 00:18:47,120
the<font color="#CCCCCC"> ILO</font><font color="#E5E5E5"> or from the host running on the</font>

399
00:18:41,120 --> 00:18:49,668
server so well now you can tell that

400
00:18:47,120 --> 00:18:50,409
while there are<font color="#E5E5E5"> several vulnerabilities</font>

401
00:18:49,669 --> 00:18:52,360
in<font color="#CCCCCC"> I low</font>

402
00:18:50,410 --> 00:18:54,940
dangerous<font color="#E5E5E5"> okay I will disable it on my</font>

403
00:18:52,360 --> 00:18:56,740
server so<font color="#E5E5E5"> here we disable the I'll on a</font>

404
00:18:54,940 --> 00:18:59,980
<font color="#CCCCCC">1-over</font><font color="#E5E5E5"> server so</font><font color="#CCCCCC"> you can see here that</font>

405
00:18:56,740 --> 00:19:02,710
<font color="#E5E5E5">Idaho is disabled</font><font color="#CCCCCC"> but</font><font color="#E5E5E5"> unfortunately when</font>

406
00:18:59,980 --> 00:19:04,930
you disable a<font color="#E5E5E5"> Leo</font><font color="#CCCCCC"> it's only</font><font color="#E5E5E5"> disables the</font>

407
00:19:02,710 --> 00:19:07,090
network part<font color="#E5E5E5"> on one side but from the</font>

408
00:19:04,930 --> 00:19:10,090
<font color="#E5E5E5">host</font><font color="#CCCCCC"> i lo</font><font color="#E5E5E5"> is still running you can still</font>

409
00:19:07,090 --> 00:19:12,730
communicate with it<font color="#E5E5E5"> so here's the the</font>

410
00:19:10,090 --> 00:19:15,370
<font color="#E5E5E5">code</font><font color="#CCCCCC"> example I showed before to retrieve</font>

411
00:19:12,730 --> 00:19:17,440
the content of the<font color="#E5E5E5"> IOA prom so even if</font>

412
00:19:15,370 --> 00:19:20,290
you disable<font color="#E5E5E5"> the</font><font color="#CCCCCC"> I</font><font color="#E5E5E5"> lo you can still</font>

413
00:19:17,440 --> 00:19:22,960
communicate with it on on the host you

414
00:19:20,290 --> 00:19:28,090
<font color="#CCCCCC">can still flush back door somewhere</font><font color="#E5E5E5"> and</font>

415
00:19:22,960 --> 00:19:30,520
then<font color="#E5E5E5"> well so we already proved that</font>

416
00:19:28,090 --> 00:19:32,649
<font color="#E5E5E5">firmware</font><font color="#CCCCCC"> backdooring was possible it was</font>

417
00:19:30,520 --> 00:19:35,560
the subject of<font color="#CCCCCC"> for previous presentation</font>

418
00:19:32,650 --> 00:19:39,550
on<font color="#CCCCCC"> i</font><font color="#E5E5E5"> lo we added in fact an end point in</font>

419
00:19:35,560 --> 00:19:41,530
the web server<font color="#CCCCCC"> to 200 s to have direct</font>

420
00:19:39,550 --> 00:19:43,510
read and write memory<font color="#E5E5E5"> access on the host</font>

421
00:19:41,530 --> 00:19:46,690
and install<font color="#E5E5E5"> memory on</font><font color="#CCCCCC"> the back door and</font>

422
00:19:43,510 --> 00:19:48,610
now with the new vulnerability we are

423
00:19:46,690 --> 00:19:51,070
<font color="#CCCCCC">able to</font><font color="#E5E5E5"> do it directly from the host and</font>

424
00:19:48,610 --> 00:19:53,260
even if i lo is disabled<font color="#CCCCCC"> so we can</font>

425
00:19:51,070 --> 00:19:56,260
install a persistent host back door in

426
00:19:53,260 --> 00:19:59,440
the<font color="#CCCCCC"> ILO hardware and then these</font><font color="#E5E5E5"> back</font>

427
00:19:56,260 --> 00:20:04,629
<font color="#CCCCCC">door will push</font><font color="#E5E5E5"> and memory</font><font color="#CCCCCC"> only back</font>

428
00:19:59,440 --> 00:20:06,790
<font color="#E5E5E5">draws on</font><font color="#CCCCCC"> the host</font><font color="#E5E5E5"> and now comes item 5</font>

429
00:20:04,630 --> 00:20:10,270
the new version of a low and<font color="#E5E5E5"> so I will</font>

430
00:20:06,790 --> 00:20:13,780
let Alex to tell you about<font color="#E5E5E5"> that so in</font>

431
00:20:10,270 --> 00:20:16,629
the middle<font color="#E5E5E5"> of 2017 HP released a new</font>

432
00:20:13,780 --> 00:20:19,690
version of<font color="#E5E5E5"> servers which is a generation</font>

433
00:20:16,630 --> 00:20:23,770
10 of HP servers which embeds<font color="#E5E5E5"> a new</font>

434
00:20:19,690 --> 00:20:25,780
version of<font color="#CCCCCC"> i/o</font><font color="#E5E5E5"> systems</font><font color="#CCCCCC"> what</font><font color="#E5E5E5"> we wanted</font><font color="#CCCCCC"> to</font>

435
00:20:23,770 --> 00:20:27,960
<font color="#E5E5E5">know what</font><font color="#CCCCCC"> where</font><font color="#E5E5E5"> motivation was simply to</font>

436
00:20:25,780 --> 00:20:29,889
assess evolution of the attack surface

437
00:20:27,960 --> 00:20:31,420
it was<font color="#E5E5E5"> not to compete when a</font>

438
00:20:29,890 --> 00:20:33,220
<font color="#E5E5E5">vulnerability research campaign was</font>

439
00:20:31,420 --> 00:20:36,400
that's<font color="#E5E5E5"> not what we are</font><font color="#CCCCCC"> looking</font><font color="#E5E5E5"> for and</font>

440
00:20:33,220 --> 00:20:37,930
our focus was really on a<font color="#E5E5E5"> specific</font>

441
00:20:36,400 --> 00:20:41,620
feature<font color="#E5E5E5"> which could be a game</font><font color="#CCCCCC"> changer</font>

442
00:20:37,930 --> 00:20:43,660
<font color="#CCCCCC">from</font><font color="#E5E5E5"> this servers which is a silicon</font>

443
00:20:41,620 --> 00:20:45,850
root of trust<font color="#CCCCCC"> but</font><font color="#E5E5E5"> they call it a silicon</font>

444
00:20:43,660 --> 00:20:48,160
would have to ask<font color="#E5E5E5"> something</font><font color="#CCCCCC"> like a</font>

445
00:20:45,850 --> 00:20:50,459
secure boot<font color="#E5E5E5"> so the idea is to</font><font color="#CCCCCC"> have an</font>

446
00:20:48,160 --> 00:20:54,070
<font color="#CCCCCC">odd</font><font color="#E5E5E5"> rare</font><font color="#CCCCCC"> root of trust</font><font color="#E5E5E5"> with our own</font>

447
00:20:50,460 --> 00:20:57,700
processor as it which will<font color="#CCCCCC"> validate</font><font color="#E5E5E5"> the</font>

448
00:20:54,070 --> 00:20:59,230
firmware of<font color="#CCCCCC"> the</font><font color="#E5E5E5"> ILO's first and then the</font>

449
00:20:57,700 --> 00:21:03,850
trust will be transmitted through<font color="#E5E5E5"> the</font>

450
00:20:59,230 --> 00:21:06,549
<font color="#E5E5E5">next steps so we needed a nutrient to do</font>

451
00:21:03,850 --> 00:21:09,668
here about<font color="#CCCCCC"> one unreadable server not</font><font color="#E5E5E5"> too</font>

452
00:21:06,549 --> 00:21:13,690
expensive<font color="#CCCCCC"> it has a giant</font><font color="#E5E5E5"> n it is</font><font color="#CCCCCC"> urgent</font>

453
00:21:09,669 --> 00:21:17,440
<font color="#E5E5E5">n so it has a low five</font><font color="#CCCCCC"> and that's</font><font color="#E5E5E5"> on</font>

454
00:21:13,690 --> 00:21:20,200
this<font color="#CCCCCC"> adware</font><font color="#E5E5E5"> that we were</font><font color="#CCCCCC"> rocking</font><font color="#E5E5E5"> just</font>

455
00:21:17,440 --> 00:21:22,470
few quick check on the<font color="#E5E5E5"> Mo's abroad we</font>

456
00:21:20,200 --> 00:21:25,510
can see there is was<font color="#CCCCCC"> some memory on the</font>

457
00:21:22,470 --> 00:21:28,960
below<font color="#E5E5E5"> on the top of the</font><font color="#CCCCCC"> picture we have</font>

458
00:21:25,510 --> 00:21:31,210
the flash memory<font color="#CCCCCC"> the same as on the ps4</font>

459
00:21:28,960 --> 00:21:34,630
<font color="#CCCCCC">watch ready and in the middle we have a</font>

460
00:21:31,210 --> 00:21:36,610
low a low chip<font color="#E5E5E5"> we didn't found</font>

461
00:21:34,630 --> 00:21:39,039
information<font color="#E5E5E5"> about this I load ship</font>

462
00:21:36,610 --> 00:21:41,889
<font color="#E5E5E5">specifically from the</font><font color="#CCCCCC"> film where</font><font color="#E5E5E5"> we</font>

463
00:21:39,039 --> 00:21:45,280
discovered it is built around cortex a9

464
00:21:41,890 --> 00:21:48,490
<font color="#CCCCCC">M IRM processor</font><font color="#E5E5E5"> but we don't know what</font>

465
00:21:45,280 --> 00:21:50,260
<font color="#CCCCCC">it's secure boot</font><font color="#E5E5E5"> capabilities is</font>

466
00:21:48,490 --> 00:21:51,669
cryptographic capabilities<font color="#E5E5E5"> we don't know</font>

467
00:21:50,260 --> 00:21:54,789
about<font color="#E5E5E5"> that</font>

468
00:21:51,669 --> 00:21:56,020
just findings<font color="#E5E5E5"> also when we are</font>

469
00:21:54,789 --> 00:21:58,539
<font color="#E5E5E5">researching some marking of the</font>

470
00:21:56,020 --> 00:22:00,760
<font color="#E5E5E5">motherboard we discovered some</font><font color="#CCCCCC"> export</font><font color="#E5E5E5"> or</font>

471
00:21:58,539 --> 00:22:03,760
customs documents which may be linked to

472
00:22:00,760 --> 00:22:06,220
a restaurant<font color="#CCCCCC"> corporation Chinese company</font>

473
00:22:03,760 --> 00:22:10,600
that may be responsible<font color="#CCCCCC"> for</font><font color="#E5E5E5"> the design</font>

474
00:22:06,220 --> 00:22:12,870
of the ball<font color="#CCCCCC"> so we have a new system so a</font>

475
00:22:10,600 --> 00:22:15,668
new<font color="#CCCCCC"> humor format we needed to analyze</font><font color="#E5E5E5"> it</font>

476
00:22:12,870 --> 00:22:18,489
<font color="#CCCCCC">the film where is 32 megabyte</font><font color="#E5E5E5"> it's</font>

477
00:22:15,669 --> 00:22:22,120
wrapped into an HP image<font color="#E5E5E5"> sign container</font>

478
00:22:18,490 --> 00:22:24,429
exactly like an<font color="#E5E5E5"> ILO for it contains a</font>

479
00:22:22,120 --> 00:22:26,049
good block<font color="#CCCCCC"> ten thousand bytes</font><font color="#E5E5E5"> at the end</font>

480
00:22:24,429 --> 00:22:28,090
of the<font color="#E5E5E5"> frame rail and at the</font><font color="#CCCCCC"> beginning</font>

481
00:22:26,049 --> 00:22:30,280
<font color="#E5E5E5">we have a list of modules there is to</font>

482
00:22:28,090 --> 00:22:33,459
copy of each modules<font color="#E5E5E5"> must probably</font><font color="#CCCCCC"> for</font>

483
00:22:30,280 --> 00:22:36,520
<font color="#E5E5E5">fault tolerance when writing in</font><font color="#CCCCCC"> nor</font>

484
00:22:33,460 --> 00:22:40,480
memory<font color="#CCCCCC"> each</font><font color="#E5E5E5"> module is described by radar</font>

485
00:22:36,520 --> 00:22:43,360
and<font color="#E5E5E5"> is of course sign just to give you a</font>

486
00:22:40,480 --> 00:22:45,880
preview<font color="#CCCCCC"> of the reader here for a channel</font>

487
00:22:43,360 --> 00:22:47,678
we have<font color="#CCCCCC"> hue important fields at the be</font>

488
00:22:45,880 --> 00:22:50,530
at the very beginning and<font color="#E5E5E5"> at the end we</font>

489
00:22:47,679 --> 00:22:53,890
have a magic<font color="#CCCCCC"> we have a type</font><font color="#E5E5E5"> which will</font>

490
00:22:50,530 --> 00:22:56,289
indicate what kind<font color="#E5E5E5"> of module it is if</font>

491
00:22:53,890 --> 00:22:59,350
it's a<font color="#CCCCCC"> Canon</font><font color="#E5E5E5"> user on or one of the</font><font color="#CCCCCC"> tubu</font>

492
00:22:56,289 --> 00:23:01,030
<font color="#CCCCCC">traders</font><font color="#E5E5E5"> we have the CRC's and at the end</font>

493
00:22:59,350 --> 00:23:03,939
<font color="#E5E5E5">of the module we have possibly two</font>

494
00:23:01,030 --> 00:23:08,590
signatures<font color="#CCCCCC"> or</font><font color="#E5E5E5"> the module we found only</font>

495
00:23:03,940 --> 00:23:10,240
use one signature<font color="#CCCCCC"> okay so know</font><font color="#E5E5E5"> we are we</font>

496
00:23:08,590 --> 00:23:12,850
are<font color="#E5E5E5"> able to pass later we are able to</font>

497
00:23:10,240 --> 00:23:14,470
<font color="#E5E5E5">pass to pass</font><font color="#CCCCCC"> sir is the list of all the</font>

498
00:23:12,850 --> 00:23:15,730
<font color="#E5E5E5">modules that are embedded within the</font>

499
00:23:14,470 --> 00:23:19,780
<font color="#E5E5E5">camera</font>

500
00:23:15,730 --> 00:23:22,930
we so there are 10<font color="#CCCCCC"> of them including the</font>

501
00:23:19,780 --> 00:23:25,210
bootblack Aegean<font color="#E5E5E5"> so just to know to give</font>

502
00:23:22,930 --> 00:23:27,190
you a preview<font color="#CCCCCC"> of the boot chain of the</font>

503
00:23:25,210 --> 00:23:29,290
idea for<font color="#CCCCCC"> our system so we have</font><font color="#E5E5E5"> the boot</font>

504
00:23:27,190 --> 00:23:31,330
<font color="#CCCCCC">ROM which is located inside the</font><font color="#E5E5E5"> ESSEC</font>

505
00:23:29,290 --> 00:23:34,750
which will pass<font color="#E5E5E5"> the shank</font><font color="#CCCCCC"> to secure</font>

506
00:23:31,330 --> 00:23:36,699
<font color="#E5E5E5">micro boots then to neighbor 9 which in</font>

507
00:23:34,750 --> 00:23:39,790
terms will go to the canal and<font color="#E5E5E5"> then to</font>

508
00:23:36,700 --> 00:23:41,740
the user<font color="#E5E5E5"> none</font><font color="#CCCCCC"> we don't have any cues if</font>

509
00:23:39,790 --> 00:23:43,899
they have<font color="#E5E5E5"> developed this bootloader</font>

510
00:23:41,740 --> 00:23:47,080
<font color="#E5E5E5">secure micro boot and by 9 by</font><font color="#CCCCCC"> themself</font>

511
00:23:43,900 --> 00:23:49,570
or<font color="#E5E5E5"> user apart from I don't know I know</font>

512
00:23:47,080 --> 00:23:50,530
<font color="#E5E5E5">their company's SDK of we don't know</font>

513
00:23:49,570 --> 00:23:55,030
<font color="#CCCCCC">about</font><font color="#E5E5E5"> that if you have the information</font>

514
00:23:50,530 --> 00:23:58,050
we<font color="#E5E5E5"> would be</font><font color="#CCCCCC"> very interested so no we are</font>

515
00:23:55,030 --> 00:24:01,450
going to try<font color="#CCCCCC"> to attack this secure boot</font>

516
00:23:58,050 --> 00:24:04,690
<font color="#CCCCCC">and we will begin by is a very start of</font>

517
00:24:01,450 --> 00:24:07,060
the boot chain which<font color="#CCCCCC"> is the boot rom yes</font>

518
00:24:04,690 --> 00:24:09,640
about<font color="#E5E5E5"> oh it is rocking is that the boot</font>

519
00:24:07,060 --> 00:24:11,230
<font color="#CCCCCC">rom will need the DDR memory</font><font color="#E5E5E5"> and map the</font>

520
00:24:09,640 --> 00:24:13,210
world firmware into the<font color="#E5E5E5"> memory at the</font>

521
00:24:11,230 --> 00:24:15,850
top of the memory at the<font color="#E5E5E5"> eye addresses</font>

522
00:24:13,210 --> 00:24:19,600
<font color="#E5E5E5">it will then first verify the signature</font>

523
00:24:15,850 --> 00:24:21,760
<font color="#E5E5E5">from SMB 0</font><font color="#CCCCCC"> header so one</font><font color="#E5E5E5"> at the very top</font>

524
00:24:19,600 --> 00:24:24,730
<font color="#E5E5E5">of the memory which will check the</font><font color="#CCCCCC"> eight</font>

525
00:24:21,760 --> 00:24:26,890
first eight thousand bytes<font color="#E5E5E5"> then it will</font>

526
00:24:24,730 --> 00:24:29,380
verify<font color="#E5E5E5"> the signature from</font><font color="#CCCCCC"> smb1</font>

527
00:24:26,890 --> 00:24:30,640
<font color="#E5E5E5">header and if everything is good it</font>

528
00:24:29,380 --> 00:24:33,250
which we<font color="#E5E5E5"> go so armed with</font><font color="#CCCCCC"> that vector</font>

529
00:24:30,640 --> 00:24:35,700
and then start the<font color="#CCCCCC"> execution of the</font>

530
00:24:33,250 --> 00:24:38,230
first stage boot for<font color="#E5E5E5"> secure microbots</font>

531
00:24:35,700 --> 00:24:41,830
<font color="#CCCCCC">its own your guess about the behavior of</font>

532
00:24:38,230 --> 00:24:44,440
<font color="#E5E5E5">the</font><font color="#CCCCCC"> bottom now as a secure micro boot is</font>

533
00:24:41,830 --> 00:24:47,050
a minimalistic<font color="#E5E5E5"> first stage boot Raider</font>

534
00:24:44,440 --> 00:24:49,780
<font color="#E5E5E5">it does very few things UCP</font>

535
00:24:47,050 --> 00:24:52,720
installations it seems to access some

536
00:24:49,780 --> 00:24:55,780
kind of<font color="#E5E5E5"> persistent memory with some</font>

537
00:24:52,720 --> 00:24:58,150
configuration information yes speaking

538
00:24:55,780 --> 00:25:00,970
<font color="#E5E5E5">about the processor it's an RM but it</font>

539
00:24:58,150 --> 00:25:03,580
doesn't use at resin at all some

540
00:25:00,970 --> 00:25:05,230
interesting point is that<font color="#E5E5E5"> this first</font>

541
00:25:03,580 --> 00:25:08,620
stage<font color="#CCCCCC"> bootloader</font><font color="#E5E5E5"> actually exposed a</font>

542
00:25:05,230 --> 00:25:12,280
quite large<font color="#E5E5E5"> ipi something like sixty</font>

543
00:25:08,620 --> 00:25:13,929
<font color="#E5E5E5">functions and it will then load next the</font>

544
00:25:12,280 --> 00:25:18,629
<font color="#E5E5E5">second stage would</font><font color="#CCCCCC"> further which</font><font color="#E5E5E5"> is knee</font>

545
00:25:13,930 --> 00:25:22,330
benign<font color="#E5E5E5"> in most in the nominal behavior</font>

546
00:25:18,630 --> 00:25:24,730
when<font color="#E5E5E5"> secure</font><font color="#CCCCCC"> mark</font><font color="#E5E5E5"> boot load the next</font>

547
00:25:22,330 --> 00:25:26,500
stage booted<font color="#CCCCCC"> or</font><font color="#E5E5E5"> it is</font><font color="#CCCCCC"> past configuring</font>

548
00:25:24,730 --> 00:25:29,340
what we have called a<font color="#E5E5E5"> configuration it's</font>

549
00:25:26,500 --> 00:25:32,100
like a<font color="#E5E5E5"> job description job description</font>

550
00:25:29,340 --> 00:25:34,290
you<font color="#E5E5E5"> wear in memory you have to look for</font>

551
00:25:32,100 --> 00:25:37,260
the next<font color="#E5E5E5"> module to load</font>

552
00:25:34,290 --> 00:25:40,110
what kind of modules<font color="#E5E5E5"> you are looking for</font>

553
00:25:37,260 --> 00:25:42,210
where to<font color="#CCCCCC"> wear my movie you</font><font color="#E5E5E5"> will load the</font>

554
00:25:40,110 --> 00:25:45,030
reader<font color="#E5E5E5"> the boom boom is the main body</font>

555
00:25:42,210 --> 00:25:47,190
<font color="#CCCCCC">the actual code of the next modules some</font>

556
00:25:45,030 --> 00:25:51,149
<font color="#CCCCCC">security parameters we will come back</font><font color="#E5E5E5"> to</font>

557
00:25:47,190 --> 00:25:52,500
this point later<font color="#E5E5E5"> and yeah to find the</font>

558
00:25:51,150 --> 00:25:54,780
module<font color="#E5E5E5"> in memory it applies a quite</font>

559
00:25:52,500 --> 00:26:00,330
<font color="#CCCCCC">basic algorithm</font><font color="#E5E5E5"> matching the start and</font>

560
00:25:54,780 --> 00:26:04,139
end magic with the module types<font color="#CCCCCC"> speaking</font>

561
00:26:00,330 --> 00:26:06,179
<font color="#E5E5E5">about the types passing the array is</font>

562
00:26:04,140 --> 00:26:09,330
quite simple<font color="#CCCCCC"> frier</font><font color="#E5E5E5"> in this</font><font color="#CCCCCC"> canal</font>

563
00:26:06,180 --> 00:26:11,700
<font color="#CCCCCC">configuration we have three possible</font>

564
00:26:09,330 --> 00:26:14,100
<font color="#E5E5E5">types that can</font><font color="#CCCCCC"> be loaded a B</font><font color="#E5E5E5"> and C and</font>

565
00:26:11,700 --> 00:26:18,780
from<font color="#E5E5E5"> human we can have the</font><font color="#CCCCCC"> description</font>

566
00:26:14,100 --> 00:26:21,449
<font color="#E5E5E5">of these different types another in very</font>

567
00:26:18,780 --> 00:26:23,149
important field of<font color="#E5E5E5"> this current</font>

568
00:26:21,450 --> 00:26:26,550
configuration<font color="#E5E5E5"> is</font><font color="#CCCCCC"> a</font><font color="#E5E5E5"> security parameter</font>

569
00:26:23,150 --> 00:26:29,250
actually<font color="#E5E5E5"> two bits</font><font color="#CCCCCC"> are more important and</font>

570
00:26:26,550 --> 00:26:30,870
<font color="#CCCCCC">users</font><font color="#E5E5E5"> the first one tells you if the</font>

571
00:26:29,250 --> 00:26:32,970
<font color="#E5E5E5">boot will be verbal or not and the</font>

572
00:26:30,870 --> 00:26:34,979
second one will tell you if you use or

573
00:26:32,970 --> 00:26:38,370
not at work with purposes<font color="#CCCCCC"> though this</font>

574
00:26:34,980 --> 00:26:41,280
creep<font color="#E5E5E5"> repressor is only used to to</font>

575
00:26:38,370 --> 00:26:46,139
compute the ash of of the module for

576
00:26:41,280 --> 00:26:48,360
integrity<font color="#CCCCCC"> so oh</font><font color="#E5E5E5"> all the module was a</font>

577
00:26:46,140 --> 00:26:51,330
cryptographic integrity of the module<font color="#E5E5E5"> is</font>

578
00:26:48,360 --> 00:26:54,929
verified or the<font color="#E5E5E5"> signature is verified so</font>

579
00:26:51,330 --> 00:26:58,199
as we saw before<font color="#CCCCCC"> up to two signatures</font>

580
00:26:54,930 --> 00:26:59,880
can<font color="#CCCCCC"> be used and stirred insider the</font>

581
00:26:58,200 --> 00:27:04,350
signature is the basic<font color="#E5E5E5"> error</font><font color="#CCCCCC"> say</font><font color="#E5E5E5"> one</font>

582
00:26:59,880 --> 00:27:06,660
using a 4096 bit key<font color="#E5E5E5"> and at the end of</font>

583
00:27:04,350 --> 00:27:08,580
secure<font color="#CCCCCC"> MicroBot we found a flat array of</font>

584
00:27:06,660 --> 00:27:10,290
<font color="#CCCCCC">binghams</font><font color="#E5E5E5"> which actually contains</font><font color="#CCCCCC"> the</font>

585
00:27:08,580 --> 00:27:15,540
exponents<font color="#E5E5E5"> that will be used followed by</font>

586
00:27:10,290 --> 00:27:18,270
<font color="#E5E5E5">six public use so if you</font><font color="#CCCCCC"> remember</font><font color="#E5E5E5"> from</font>

587
00:27:15,540 --> 00:27:20,970
<font color="#CCCCCC">the</font><font color="#E5E5E5"> ADA we say there</font><font color="#CCCCCC"> is</font><font color="#E5E5E5"> two index</font>

588
00:27:18,270 --> 00:27:24,000
<font color="#E5E5E5">actually this index will tell you which</font>

589
00:27:20,970 --> 00:27:26,670
public keys<font color="#E5E5E5"> you will select from</font><font color="#CCCCCC"> euro</font>

590
00:27:24,000 --> 00:27:27,930
store and to verify<font color="#CCCCCC"> to decrypt the</font>

591
00:27:26,670 --> 00:27:30,300
signature<font color="#CCCCCC"> that are embedded in the</font>

592
00:27:27,930 --> 00:27:33,410
<font color="#CCCCCC">reader and then to verify the ash</font><font color="#E5E5E5"> that</font>

593
00:27:30,300 --> 00:27:36,690
of<font color="#CCCCCC"> the actual module next modules</font><font color="#E5E5E5"> body</font>

594
00:27:33,410 --> 00:27:38,400
<font color="#E5E5E5">so that's how it works something</font>

595
00:27:36,690 --> 00:27:40,050
<font color="#CCCCCC">interesting we discovered while we were</font>

596
00:27:38,400 --> 00:27:42,630
<font color="#E5E5E5">seeing is</font><font color="#CCCCCC"> that when it computes the</font>

597
00:27:40,050 --> 00:27:42,960
integrity of the next module<font color="#E5E5E5"> some fields</font>

598
00:27:42,630 --> 00:27:46,980
of

599
00:27:42,960 --> 00:27:50,789
are not<font color="#E5E5E5"> covered by by Seleucia she's</font>

600
00:27:46,980 --> 00:27:53,159
<font color="#E5E5E5">also integral the ash computation so</font>

601
00:27:50,789 --> 00:27:55,559
there's<font color="#E5E5E5"> four bytes that</font><font color="#CCCCCC"> are emitted</font><font color="#E5E5E5"> from</font>

602
00:27:53,159 --> 00:27:57,299
<font color="#E5E5E5">the</font><font color="#CCCCCC"> adder</font><font color="#E5E5E5"> so it was quite strange we are</font>

603
00:27:55,559 --> 00:27:59,010
<font color="#CCCCCC">a bit suspicious</font><font color="#E5E5E5"> around it and we were</font>

604
00:27:57,299 --> 00:28:02,450
<font color="#E5E5E5">looking for and actually</font><font color="#CCCCCC"> these two index</font>

605
00:27:59,010 --> 00:28:05,190
fields are not covered<font color="#CCCCCC"> by the integrity</font>

606
00:28:02,450 --> 00:28:07,710
<font color="#E5E5E5">kind of strange but actually we didn't</font>

607
00:28:05,190 --> 00:28:10,230
found some way<font color="#E5E5E5"> to exploit these things</font>

608
00:28:07,710 --> 00:28:12,210
<font color="#E5E5E5">one hypothesis could be that it is used</font>

609
00:28:10,230 --> 00:28:15,059
for<font color="#E5E5E5"> post of</font><font color="#CCCCCC"> cross signatures by</font>

610
00:28:12,210 --> 00:28:16,380
different entities<font color="#E5E5E5"> but you know just for</font>

611
00:28:15,059 --> 00:28:20,700
fun<font color="#CCCCCC"> we'll</font><font color="#E5E5E5"> just keep in</font><font color="#CCCCCC"> mind</font><font color="#E5E5E5"> that the</font>

612
00:28:16,380 --> 00:28:23,730
index fields<font color="#E5E5E5"> some looks suspicious so</font>

613
00:28:20,700 --> 00:28:25,740
<font color="#CCCCCC">now we progress into the boot chain</font><font color="#E5E5E5"> we</font>

614
00:28:23,730 --> 00:28:27,659
have<font color="#CCCCCC"> bootrom as</font><font color="#E5E5E5"> ready to secure</font><font color="#CCCCCC"> micro</font>

615
00:28:25,740 --> 00:28:29,399
boots secure micro boot has studied<font color="#CCCCCC"> near</font>

616
00:28:27,659 --> 00:28:32,549
<font color="#CCCCCC">benign and then the benign</font><font color="#E5E5E5"> will try to</font>

617
00:28:29,399 --> 00:28:35,699
<font color="#CCCCCC">load the kernel actually</font><font color="#E5E5E5"> to do that</font><font color="#CCCCCC"> it</font>

618
00:28:32,549 --> 00:28:39,330
will<font color="#E5E5E5"> reuse the primitives exposed by the</font>

619
00:28:35,700 --> 00:28:41,279
second marker boot<font color="#E5E5E5"> API</font><font color="#CCCCCC"> it will ask which</font>

620
00:28:39,330 --> 00:28:43,678
we call a function which is<font color="#CCCCCC"> something</font>

621
00:28:41,279 --> 00:28:45,360
like IDL open and secure<font color="#E5E5E5"> Mac robot will</font>

622
00:28:43,679 --> 00:28:47,909
verify the signature<font color="#CCCCCC"> of the canal load</font>

623
00:28:45,360 --> 00:28:52,559
it into<font color="#CCCCCC"> memory</font><font color="#E5E5E5"> and if everything is good</font>

624
00:28:47,909 --> 00:28:56,940
<font color="#E5E5E5">nearby</font><font color="#CCCCCC"> nine will</font><font color="#E5E5E5"> jumps onto the color</font><font color="#CCCCCC"> no</font>

625
00:28:52,559 --> 00:29:00,299
we are in the kernel next step<font color="#CCCCCC"> actually</font>

626
00:28:56,940 --> 00:29:03,390
I love<font color="#CCCCCC"> 5-channel as almost</font><font color="#E5E5E5"> the exact</font>

627
00:29:00,299 --> 00:29:04,740
<font color="#E5E5E5">same code as the one that</font><font color="#CCCCCC"> this present</font>

628
00:29:03,390 --> 00:29:07,860
is<font color="#CCCCCC"> secure microbots</font>

629
00:29:04,740 --> 00:29:09,990
but<font color="#E5E5E5"> almost the canal</font><font color="#CCCCCC"> an interest one</font>

630
00:29:07,860 --> 00:29:13,250
single public key which is called the

631
00:29:09,990 --> 00:29:15,720
legacy key<font color="#E5E5E5"> it actually is</font><font color="#CCCCCC"> the same as</font>

632
00:29:13,250 --> 00:29:20,130
<font color="#E5E5E5">the same as the one that is used to sign</font>

633
00:29:15,720 --> 00:29:23,279
<font color="#CCCCCC">I love four components</font><font color="#E5E5E5"> so back into a</font>

634
00:29:20,130 --> 00:29:25,590
low five<font color="#E5E5E5"> channel we have a function that</font>

635
00:29:23,279 --> 00:29:28,020
we have<font color="#CCCCCC"> called Lots neutrons that will</font>

636
00:29:25,590 --> 00:29:30,449
try<font color="#CCCCCC"> to load one of</font><font color="#E5E5E5"> the</font><font color="#CCCCCC"> two other two</font>

637
00:29:28,020 --> 00:29:32,158
signatures from<font color="#CCCCCC"> zero and actually</font><font color="#E5E5E5"> inside</font>

638
00:29:30,450 --> 00:29:34,320
<font color="#E5E5E5">this function there</font><font color="#CCCCCC"> is kind of a broken</font>

639
00:29:32,159 --> 00:29:39,029
logic first<font color="#CCCCCC"> it</font><font color="#E5E5E5"> will try</font><font color="#CCCCCC"> to load the</font>

640
00:29:34,320 --> 00:29:42,299
<font color="#E5E5E5">first</font><font color="#CCCCCC"> signature</font><font color="#E5E5E5"> from index 1 and it can</font>

641
00:29:39,029 --> 00:29:45,750
fail<font color="#CCCCCC"> and on the and the next it</font><font color="#E5E5E5"> will try</font>

642
00:29:42,299 --> 00:29:47,530
to<font color="#E5E5E5"> load the second second signature</font><font color="#CCCCCC"> and</font>

643
00:29:45,750 --> 00:29:49,510
load legacy

644
00:29:47,530 --> 00:29:52,870
the second<font color="#CCCCCC"> resiliency</font><font color="#E5E5E5"> key from</font><font color="#CCCCCC"> the</font>

645
00:29:49,510 --> 00:29:54,670
second index<font color="#E5E5E5"> and or guess is that at</font>

646
00:29:52,870 --> 00:29:59,050
this time the developer made the

647
00:29:54,670 --> 00:30:01,330
hypothesis that even if<font color="#E5E5E5"> even</font><font color="#CCCCCC"> if the load</font>

648
00:29:59,050 --> 00:30:03,700
legacy key failed<font color="#CCCCCC"> for index - it</font><font color="#E5E5E5"> means</font>

649
00:30:01,330 --> 00:30:07,330
that the first one<font color="#CCCCCC"> I</font><font color="#E5E5E5"> succeeded find x1</font>

650
00:30:03,700 --> 00:30:08,500
but which is actually false<font color="#E5E5E5"> so what</font>

651
00:30:07,330 --> 00:30:11,110
happened

652
00:30:08,500 --> 00:30:12,910
what can happen is actually<font color="#E5E5E5"> the</font><font color="#CCCCCC"> load a</font>

653
00:30:11,110 --> 00:30:15,250
<font color="#CCCCCC">Jesse key will fail for index</font><font color="#E5E5E5"> 1 and</font>

654
00:30:12,910 --> 00:30:17,200
index 2 and the two signature fields

655
00:30:15,250 --> 00:30:19,990
will be<font color="#E5E5E5"> left untouched</font><font color="#CCCCCC"> and at the end</font>

656
00:30:17,200 --> 00:30:21,670
the<font color="#CCCCCC"> kernel will compress</font><font color="#E5E5E5"> as a ash value</font>

657
00:30:19,990 --> 00:30:23,680
it has computed with the<font color="#E5E5E5"> module tested</font>

658
00:30:21,670 --> 00:30:26,440
<font color="#E5E5E5">in memory with an untouched</font>

659
00:30:23,680 --> 00:30:28,560
<font color="#CCCCCC">cygwin field and actually</font><font color="#E5E5E5"> this time it</font>

660
00:30:26,440 --> 00:30:31,150
is quite<font color="#E5E5E5"> exploitable yes</font>

661
00:30:28,560 --> 00:30:33,100
so all that we have to do to exploit

662
00:30:31,150 --> 00:30:35,830
this is we will<font color="#E5E5E5"> extract the fume rare</font>

663
00:30:33,100 --> 00:30:38,080
and yet I know<font color="#CCCCCC"> 5 user on the compressed</font>

664
00:30:35,830 --> 00:30:40,030
insert whatever whatever we want

665
00:30:38,080 --> 00:30:42,669
backdoor into it and then we compress it

666
00:30:40,030 --> 00:30:46,060
then we will set index 1<font color="#CCCCCC"> and 2 to</font><font color="#E5E5E5"> rock</font>

667
00:30:42,670 --> 00:30:48,160
values update<font color="#E5E5E5"> all</font><font color="#CCCCCC"> the sizes</font><font color="#E5E5E5"> and</font><font color="#CCCCCC"> CRC's to</font>

668
00:30:46,060 --> 00:30:50,169
be correct<font color="#E5E5E5"> and we will simply compute</font>

669
00:30:48,160 --> 00:30:52,570
the cryptographic<font color="#CCCCCC"> hash of on you</font><font color="#E5E5E5"> by door</font>

670
00:30:50,170 --> 00:30:55,420
<font color="#E5E5E5">userland and we will update cygwin</font>

671
00:30:52,570 --> 00:30:57,939
filled with ash value<font color="#E5E5E5"> farmer Bob just</font>

672
00:30:55,420 --> 00:31:00,310
that<font color="#E5E5E5"> just like that and then we can use</font>

673
00:30:57,940 --> 00:31:02,200
the vulnerabilities that<font color="#CCCCCC"> have been</font>

674
00:31:00,310 --> 00:31:05,800
planted<font color="#E5E5E5"> to you for example to purge the</font>

675
00:31:02,200 --> 00:31:08,820
fume where and it should<font color="#CCCCCC"> Rock actually</font>

676
00:31:05,800 --> 00:31:13,320
not<font color="#E5E5E5"> quite yet we will see why</font>

677
00:31:08,820 --> 00:31:13,320
actually we screw up a little

678
00:31:14,500 --> 00:31:19,510
and all that we<font color="#E5E5E5"> got at the time was</font>

679
00:31:16,750 --> 00:31:22,810
<font color="#E5E5E5">bling humans</font><font color="#CCCCCC"> are</font><font color="#E5E5E5"> broad the server wasn't</font>

680
00:31:19,510 --> 00:31:25,330
started at all but I know<font color="#E5E5E5"> services seems</font>

681
00:31:22,810 --> 00:31:27,760
up like SSH or web server<font color="#CCCCCC"> but seems</font>

682
00:31:25,330 --> 00:31:29,949
quite<font color="#E5E5E5"> broken or unresponsive we were uh</font>

683
00:31:27,760 --> 00:31:33,430
not able<font color="#CCCCCC"> to flash anymore a new VMware</font>

684
00:31:29,950 --> 00:31:35,740
so<font color="#E5E5E5"> we are kind</font><font color="#CCCCCC"> of stuck</font><font color="#E5E5E5"> we needed more</font>

685
00:31:33,430 --> 00:31:38,440
information<font color="#CCCCCC"> when we are doing researches</font>

686
00:31:35,740 --> 00:31:40,990
on<font color="#CCCCCC"> I loafer we had some solid put from</font>

687
00:31:38,440 --> 00:31:43,510
our micro servers<font color="#E5E5E5"> so that's what we did</font>

688
00:31:40,990 --> 00:31:45,940
we<font color="#CCCCCC"> started probing some pins on top of a</font>

689
00:31:43,510 --> 00:31:49,450
low<font color="#CCCCCC"> 5 system</font><font color="#E5E5E5"> to see if we can get the</font>

690
00:31:45,940 --> 00:31:52,150
same as<font color="#E5E5E5"> I had put so we got to logic</font>

691
00:31:49,450 --> 00:31:54,250
<font color="#CCCCCC">analyzer and</font><font color="#E5E5E5"> studied probing</font><font color="#CCCCCC"> on the</font>

692
00:31:52,150 --> 00:31:57,130
<font color="#CCCCCC">mossad app free</font><font color="#E5E5E5"> for us there is two</font>

693
00:31:54,250 --> 00:31:58,750
slots or<font color="#CCCCCC"> four pins which provide a</font>

694
00:31:57,130 --> 00:32:00,370
celluloid put one of them seems to<font color="#CCCCCC"> be</font>

695
00:31:58,750 --> 00:32:01,420
for<font color="#CCCCCC"> us a</font><font color="#E5E5E5"> power management controller the</font>

696
00:32:00,370 --> 00:32:04,959
other one for

697
00:32:01,420 --> 00:32:07,480
<font color="#E5E5E5">I</font><font color="#CCCCCC"> do systems so yeah we started plugging</font>

698
00:32:04,960 --> 00:32:10,300
into this<font color="#CCCCCC"> I would put also to plug into</font>

699
00:32:07,480 --> 00:32:13,870
<font color="#E5E5E5">the flash to write specific bits at some</font>

700
00:32:10,300 --> 00:32:15,220
points<font color="#CCCCCC"> just an</font><font color="#E5E5E5"> example</font><font color="#CCCCCC"> of</font><font color="#E5E5E5"> the</font><font color="#CCCCCC"> output</font><font color="#E5E5E5"> of</font>

701
00:32:13,870 --> 00:32:17,379
the program<font color="#E5E5E5"> management controller</font><font color="#CCCCCC"> but</font>

702
00:32:15,220 --> 00:32:20,860
more importantly we get the logs of the

703
00:32:17,380 --> 00:32:23,190
<font color="#CCCCCC">ILO systems and at the end of it we we</font>

704
00:32:20,860 --> 00:32:26,770
found<font color="#E5E5E5"> that there was some kind of error</font>

705
00:32:23,190 --> 00:32:29,320
in the loading<font color="#E5E5E5"> of the</font><font color="#CCCCCC"> task</font><font color="#E5E5E5"> of the</font><font color="#CCCCCC"> Ilia</font>

706
00:32:26,770 --> 00:32:32,710
<font color="#CCCCCC">file system and using that information</font>

707
00:32:29,320 --> 00:32:35,830
<font color="#E5E5E5">we were able to see where or whether our</font>

708
00:32:32,710 --> 00:32:39,400
mistakes actually<font color="#E5E5E5"> actually we screw up</font>

709
00:32:35,830 --> 00:32:41,439
when we were back during<font color="#E5E5E5"> the new user</font>

710
00:32:39,400 --> 00:32:43,360
<font color="#E5E5E5">none we add some bad decompression cards</font>

711
00:32:41,440 --> 00:32:45,850
that we are the reversed back when we

712
00:32:43,360 --> 00:32:48,189
are<font color="#E5E5E5"> doing some</font><font color="#CCCCCC"> River</font><font color="#E5E5E5"> some researches on</font>

713
00:32:45,850 --> 00:32:50,320
<font color="#E5E5E5">a low</font><font color="#CCCCCC"> flow systems and you</font><font color="#E5E5E5"> can use a</font>

714
00:32:48,190 --> 00:32:52,300
very light error in the elf<font color="#E5E5E5"> processor of</font>

715
00:32:50,320 --> 00:32:54,939
<font color="#E5E5E5">the interview system so the system is</font>

716
00:32:52,300 --> 00:32:56,500
<font color="#E5E5E5">Alfe running but not enough and that's</font>

717
00:32:54,940 --> 00:32:59,800
<font color="#CCCCCC">why the kernel does not pop some</font>

718
00:32:56,500 --> 00:33:02,260
recovery<font color="#CCCCCC"> FTP server</font><font color="#E5E5E5"> so we fixed</font>

719
00:32:59,800 --> 00:33:04,510
everything<font color="#CCCCCC"> we flipped one byte</font><font color="#E5E5E5"> directly</font>

720
00:33:02,260 --> 00:33:06,070
writing<font color="#CCCCCC"> the new flash memory</font><font color="#E5E5E5"> to frost</font>

721
00:33:04,510 --> 00:33:08,220
the kernel to enter into recovery mode

722
00:33:06,070 --> 00:33:10,929
<font color="#E5E5E5">partially did image him where</font><font color="#CCCCCC"> to restore</font>

723
00:33:08,220 --> 00:33:15,220
<font color="#CCCCCC">same States and then we fixed for the</font>

724
00:33:10,930 --> 00:33:18,760
<font color="#E5E5E5">compression algorithm which by a TN z 27</font>

725
00:33:15,220 --> 00:33:21,220
<font color="#E5E5E5">and I also at the</font><font color="#CCCCCC"> end we discovered that</font>

726
00:33:18,760 --> 00:33:22,690
<font color="#E5E5E5">we doesn't need to recompress or use</font>

727
00:33:21,220 --> 00:33:24,580
<font color="#CCCCCC">backdoor dues</font><font color="#E5E5E5"> around because we have</font>

728
00:33:22,690 --> 00:33:28,600
enough room in the film where to leave

729
00:33:24,580 --> 00:33:31,330
it and<font color="#E5E5E5"> compress so now we'll show you a</font>

730
00:33:28,600 --> 00:33:39,909
demo where<font color="#E5E5E5"> we have a backdoor femur if</font>

731
00:33:31,330 --> 00:33:41,740
we can<font color="#E5E5E5"> switch to the video</font><font color="#CCCCCC"> okay</font><font color="#E5E5E5"> so here</font>

732
00:33:39,910 --> 00:33:44,080
the the demo you<font color="#CCCCCC"> have the celluloid put</font>

733
00:33:41,740 --> 00:33:48,690
the<font color="#E5E5E5"> host running Linux and finally the</font>

734
00:33:44,080 --> 00:33:51,550
attacker laptop<font color="#E5E5E5"> so if we first check the</font>

735
00:33:48,690 --> 00:33:55,660
<font color="#CCCCCC">ssh banner of the</font><font color="#E5E5E5"> ILO everything is</font>

736
00:33:51,550 --> 00:33:57,430
normal for now<font color="#CCCCCC"> and</font><font color="#E5E5E5"> now on the line x</font>

737
00:33:55,660 --> 00:34:00,250
house we will try to<font color="#CCCCCC"> flash a backdoor</font>

738
00:33:57,430 --> 00:34:01,840
<font color="#E5E5E5">somewhere here it embeds</font><font color="#CCCCCC"> the exploit for</font>

739
00:34:00,250 --> 00:34:04,540
the previous will never<font color="#CCCCCC"> reach in</font><font color="#E5E5E5"> fume</font>

740
00:34:01,840 --> 00:34:07,629
and we also modified it to<font color="#E5E5E5"> change</font><font color="#CCCCCC"> it to</font>

741
00:34:04,540 --> 00:34:10,120
<font color="#CCCCCC">indexes to bypass the secure boot</font><font color="#E5E5E5"> so if</font>

742
00:34:07,630 --> 00:34:11,620
we first try<font color="#CCCCCC"> to flash it well it tells</font>

743
00:34:10,120 --> 00:34:13,580
us<font color="#CCCCCC"> that it can flash it</font><font color="#E5E5E5"> because the</font>

744
00:34:11,620 --> 00:34:15,859
<font color="#E5E5E5">version is lower than the version</font>

745
00:34:13,580 --> 00:34:18,259
currently installed but well if we<font color="#CCCCCC"> ask</font>

746
00:34:15,860 --> 00:34:21,140
him kindly<font color="#E5E5E5"> it will allow us to to do the</font>

747
00:34:18,260 --> 00:34:23,480
journal grade so know the actual

748
00:34:21,139 --> 00:34:25,310
flashing starts this part has been

749
00:34:23,480 --> 00:34:27,740
accelerated a bit<font color="#CCCCCC"> because it takes a</font>

750
00:34:25,310 --> 00:34:29,840
long time<font color="#E5E5E5"> to send a film where and to an</font>

751
00:34:27,739 --> 00:34:32,359
effectively<font color="#E5E5E5"> flash it on the</font><font color="#CCCCCC"> on the spi</font>

752
00:34:29,840 --> 00:34:35,720
flash<font color="#E5E5E5"> and well when the flash is indeed</font>

753
00:34:32,360 --> 00:34:38,060
<font color="#E5E5E5">the</font><font color="#CCCCCC"> ailu reboots and we can see</font><font color="#E5E5E5"> that</font>

754
00:34:35,719 --> 00:34:42,859
<font color="#CCCCCC">while everything goes well the I lo</font>

755
00:34:38,060 --> 00:34:47,090
finally gets its IP address<font color="#E5E5E5"> and now if</font>

756
00:34:42,860 --> 00:34:50,510
<font color="#E5E5E5">we check the ssh banner</font><font color="#CCCCCC"> we can see</font><font color="#E5E5E5"> that</font>

757
00:34:47,090 --> 00:34:54,520
we successfully changed the the banner

758
00:34:50,510 --> 00:34:54,520
and<font color="#E5E5E5"> there's</font><font color="#CCCCCC"> compromise the ILO firmware</font>

759
00:34:57,130 --> 00:35:06,560
thank<font color="#E5E5E5"> you thank you</font>

760
00:35:04,370 --> 00:35:08,990
so at this point<font color="#E5E5E5"> we're able to push</font>

761
00:35:06,560 --> 00:35:11,779
whatever<font color="#E5E5E5"> use the known we want inserting</font>

762
00:35:08,990 --> 00:35:14,060
backdoor into a web server component<font color="#CCCCCC"> ssh</font>

763
00:35:11,780 --> 00:35:16,760
components or whatever we want<font color="#CCCCCC"> we will</font>

764
00:35:14,060 --> 00:35:18,470
<font color="#E5E5E5">put it this</font><font color="#CCCCCC"> to HP e at the beginning of</font>

765
00:35:16,760 --> 00:35:23,840
<font color="#CCCCCC">september and they release quite quickly</font>

766
00:35:18,470 --> 00:35:25,850
<font color="#E5E5E5">fix i lo</font><font color="#CCCCCC"> v 1.37</font><font color="#E5E5E5"> then i meet a local</font>

767
00:35:23,840 --> 00:35:29,990
bypass of security restriction in few

768
00:35:25,850 --> 00:35:32,270
more updates but with this fix we have

769
00:35:29,990 --> 00:35:35,870
<font color="#E5E5E5">some big</font><font color="#CCCCCC"> insanity actually because we</font>

770
00:35:32,270 --> 00:35:37,820
reversed<font color="#E5E5E5"> all they did the fix so of</font>

771
00:35:35,870 --> 00:35:41,359
course the canal logic is fixed<font color="#CCCCCC"> so the</font>

772
00:35:37,820 --> 00:35:43,310
the logic error is corrected<font color="#E5E5E5"> but first</font>

773
00:35:41,360 --> 00:35:46,400
stage second stage<font color="#E5E5E5"> would color a still</font>

774
00:35:43,310 --> 00:35:48,320
totally unchanged<font color="#E5E5E5"> and in the we have</font>

775
00:35:46,400 --> 00:35:50,510
actually legitimately<font color="#CCCCCC"> sign venerable</font>

776
00:35:48,320 --> 00:35:52,340
<font color="#E5E5E5">channels and what an attacker could do</font>

777
00:35:50,510 --> 00:35:54,500
is to build some<font color="#CCCCCC"> kind of Frankenstein</font>

778
00:35:52,340 --> 00:35:58,940
<font color="#E5E5E5">firmware using our venerable channel and</font>

779
00:35:54,500 --> 00:36:02,630
new new<font color="#E5E5E5"> modules new user</font><font color="#CCCCCC"> on bio</font><font color="#E5E5E5"> modules</font>

780
00:35:58,940 --> 00:36:04,070
<font color="#E5E5E5">so we don't know oh the under or if</font>

781
00:36:02,630 --> 00:36:05,330
<font color="#CCCCCC">they're</font><font color="#E5E5E5"> able to endure</font><font color="#CCCCCC"> the revocation</font><font color="#E5E5E5"> of</font>

782
00:36:04,070 --> 00:36:08,510
<font color="#E5E5E5">this venerable</font>

783
00:36:05,330 --> 00:36:11,750
sign<font color="#E5E5E5"> kernels</font><font color="#CCCCCC"> so it's a big issue</font><font color="#E5E5E5"> we have</font>

784
00:36:08,510 --> 00:36:13,400
also tried<font color="#CCCCCC"> to downgrade</font><font color="#E5E5E5"> a firmware to to</font>

785
00:36:11,750 --> 00:36:13,880
update to a fixed<font color="#E5E5E5"> version of the</font>

786
00:36:13,400 --> 00:36:16,910
<font color="#E5E5E5">fumarole</font>

787
00:36:13,880 --> 00:36:18,740
<font color="#CCCCCC">I load SATA 7 and that no greater to a</font>

788
00:36:16,910 --> 00:36:21,140
venerable<font color="#CCCCCC"> Russian</font><font color="#E5E5E5"> and it</font><font color="#CCCCCC"> rocks perfectly</font>

789
00:36:18,740 --> 00:36:23,120
so it's a big issue because<font color="#E5E5E5"> we still</font>

790
00:36:21,140 --> 00:36:25,160
have<font color="#CCCCCC"> a nature an attack vector</font><font color="#E5E5E5"> at a</font>

791
00:36:23,120 --> 00:36:27,230
physical attack vector like typical

792
00:36:25,160 --> 00:36:28,790
<font color="#CCCCCC">sebacean attack but also logical</font><font color="#E5E5E5"> in</font>

793
00:36:27,230 --> 00:36:30,859
<font color="#E5E5E5">a new vulnerability is found in the web</font>

794
00:36:28,790 --> 00:36:34,070
server<font color="#CCCCCC"> or anything it could and we can</font>

795
00:36:30,859 --> 00:36:38,180
access the<font color="#E5E5E5"> SPH</font><font color="#CCCCCC"> spi</font><font color="#E5E5E5"> flash memory sorry we</font>

796
00:36:34,070 --> 00:36:41,960
can do the exact same thing<font color="#E5E5E5"> so to</font>

797
00:36:38,180 --> 00:36:44,419
conclude<font color="#E5E5E5"> we about thrust for our system</font>

798
00:36:41,960 --> 00:36:46,640
<font color="#E5E5E5">we have a very large attack surface both</font>

799
00:36:44,420 --> 00:36:49,369
on the administration and on the

800
00:36:46,640 --> 00:36:51,440
<font color="#E5E5E5">production</font><font color="#CCCCCC"> side like Fabian demonstrated</font>

801
00:36:49,369 --> 00:36:52,850
we can attack<font color="#E5E5E5"> i lo from just as well and</font>

802
00:36:51,440 --> 00:36:54,830
that's very important

803
00:36:52,850 --> 00:36:56,540
and patch system are going<font color="#CCCCCC"> to get right</font>

804
00:36:54,830 --> 00:36:58,670
<font color="#CCCCCC">already it's a dreamland</font><font color="#E5E5E5"> for</font><font color="#CCCCCC"> lateral</font>

805
00:36:56,540 --> 00:37:00,710
movements<font color="#CCCCCC"> network is relation is a</font>

806
00:36:58,670 --> 00:37:03,050
<font color="#CCCCCC">must-have but as we saw it's not</font>

807
00:37:00,710 --> 00:37:03,560
sufficient<font color="#E5E5E5"> this asset should really be</font>

808
00:37:03,050 --> 00:37:06,859
monitored

809
00:37:03,560 --> 00:37:09,650
and<font color="#CCCCCC"> up-to-date keep up</font><font color="#E5E5E5"> to date very</font>

810
00:37:06,859 --> 00:37:11,720
carefree<font color="#E5E5E5"> some very simple</font><font color="#CCCCCC"> hardening can</font>

811
00:37:09,650 --> 00:37:13,490
<font color="#CCCCCC">be done we can you can disable</font><font color="#E5E5E5"> I play me</font>

812
00:37:11,720 --> 00:37:15,140
<font color="#E5E5E5">over on you can also disable XML data</font>

813
00:37:13,490 --> 00:37:18,439
output which<font color="#E5E5E5"> will</font><font color="#CCCCCC"> will use some</font>

814
00:37:15,140 --> 00:37:21,589
information<font color="#E5E5E5"> Nick speaking about</font><font color="#CCCCCC"> I lo v</font>

815
00:37:18,440 --> 00:37:23,570
no<font color="#E5E5E5"> not specifically some good news and</font>

816
00:37:21,590 --> 00:37:25,000
new features<font color="#E5E5E5"> I cannae over run is</font>

817
00:37:23,570 --> 00:37:28,130
disabled by default which is<font color="#E5E5E5"> great</font>

818
00:37:25,000 --> 00:37:30,800
there's new HTML console and lots of new

819
00:37:28,130 --> 00:37:34,910
features<font color="#E5E5E5"> are like</font><font color="#CCCCCC"> backup</font><font color="#E5E5E5"> things</font><font color="#CCCCCC"> like</font>

820
00:37:30,800 --> 00:37:36,680
that<font color="#E5E5E5"> but at the cross the system design</font>

821
00:37:34,910 --> 00:37:38,990
<font color="#CCCCCC">is but it's basically the same eyes</font><font color="#E5E5E5"> I</font>

822
00:37:36,680 --> 00:37:41,450
love<font color="#E5E5E5"> raw it is</font><font color="#CCCCCC"> still as the integrity</font><font color="#E5E5E5"> of</font>

823
00:37:38,990 --> 00:37:43,490
<font color="#CCCCCC">rating</font><font color="#E5E5E5"> systems but there are still</font><font color="#CCCCCC"> no</font>

824
00:37:41,450 --> 00:37:46,100
<font color="#CCCCCC">are during the first scenes s like</font><font color="#E5E5E5"> we</font>

825
00:37:43,490 --> 00:37:47,629
should expect<font color="#CCCCCC"> seller onyx in</font><font color="#E5E5E5"> a that and</font>

826
00:37:46,100 --> 00:37:50,690
of<font color="#CCCCCC"> course</font><font color="#E5E5E5"> we can expect more</font>

827
00:37:47,630 --> 00:37:52,820
vulnerabilities in<font color="#CCCCCC"> this codes the</font>

828
00:37:50,690 --> 00:37:54,710
<font color="#E5E5E5">silicon root of trust secure boot is</font>

829
00:37:52,820 --> 00:37:56,540
clearly a step in the right<font color="#E5E5E5"> direction</font><font color="#CCCCCC"> it</font>

830
00:37:54,710 --> 00:37:59,030
should<font color="#CCCCCC"> have</font><font color="#E5E5E5"> been a killer features to</font>

831
00:37:56,540 --> 00:38:01,160
prevent long-term<font color="#CCCCCC"> compromise of this</font>

832
00:37:59,030 --> 00:38:04,640
asset<font color="#CCCCCC"> long-term compromise of the I love</font>

833
00:38:01,160 --> 00:38:06,109
<font color="#E5E5E5">5 p.m. where but actually right now it</font>

834
00:38:04,640 --> 00:38:07,940
seems<font color="#E5E5E5"> like totally enjoyed by</font><font color="#CCCCCC"> Rick</font>

835
00:38:06,109 --> 00:38:11,060
design and a<font color="#E5E5E5"> flawed implementation and</font>

836
00:38:07,940 --> 00:38:13,100
of course there<font color="#E5E5E5"> is this big questions</font>

837
00:38:11,060 --> 00:38:15,440
about<font color="#CCCCCC"> the possibility to replicate the</font>

838
00:38:13,100 --> 00:38:18,319
signatures of<font color="#CCCCCC"> the</font><font color="#E5E5E5"> neural channel we've</font>

839
00:38:15,440 --> 00:38:20,300
asked the questions<font color="#E5E5E5"> to HP many times</font>

840
00:38:18,320 --> 00:38:22,150
that<font color="#CCCCCC"> do you never receive some answer on</font>

841
00:38:20,300 --> 00:38:25,430
this point

842
00:38:22,150 --> 00:38:27,410
yeah we just before<font color="#E5E5E5"> closing this talk</font>

843
00:38:25,430 --> 00:38:30,830
we'd like to thank so HP pay such a team

844
00:38:27,410 --> 00:38:32,180
<font color="#E5E5E5">because we are doing these responses we</font>

845
00:38:30,830 --> 00:38:33,170
<font color="#CCCCCC">have built some kind of good working</font>

846
00:38:32,180 --> 00:38:38,390
relationship<font color="#CCCCCC"> with</font><font color="#E5E5E5"> them we appreciate</font>

847
00:38:33,170 --> 00:38:40,549
<font color="#E5E5E5">that</font><font color="#CCCCCC"> - thank you or</font><font color="#E5E5E5"> cell or teams</font>

848
00:38:38,390 --> 00:38:42,259
just give her a<font color="#E5E5E5"> couple of days</font><font color="#CCCCCC"> and</font><font color="#E5E5E5"> we</font>

849
00:38:40,549 --> 00:38:44,209
will publish<font color="#E5E5E5"> the script and tools we</font>

850
00:38:42,259 --> 00:38:47,829
have used for history<font color="#E5E5E5"> on</font><font color="#CCCCCC"> a github</font>

851
00:38:44,209 --> 00:38:49,910
<font color="#E5E5E5">project for this</font><font color="#CCCCCC"> I know researches</font><font color="#E5E5E5"> and</font>

852
00:38:47,829 --> 00:38:51,920
<font color="#CCCCCC">just be focusing and so we'd</font><font color="#E5E5E5"> like</font><font color="#CCCCCC"> to</font>

853
00:38:49,910 --> 00:38:53,239
share some quotes we found why we're

854
00:38:51,920 --> 00:38:57,229
asking<font color="#E5E5E5"> the code something we always</font>

855
00:38:53,239 --> 00:38:59,089
appreciate<font color="#E5E5E5"> the</font><font color="#CCCCCC"> regressors and also we</font>

856
00:38:57,229 --> 00:39:02,209
would<font color="#E5E5E5"> like</font><font color="#CCCCCC"> to say hi to handy</font><font color="#E5E5E5"> which is</font>

857
00:38:59,089 --> 00:39:04,369
he<font color="#E5E5E5"> was here and yes thank you very</font><font color="#CCCCCC"> much</font>

858
00:39:02,209 --> 00:39:06,410
<font color="#E5E5E5">for</font><font color="#CCCCCC"> your</font><font color="#E5E5E5"> attentions and if you have any</font>

859
00:39:04,369 --> 00:39:11,289
questions<font color="#CCCCCC"> no or during the conference do</font>

860
00:39:06,410 --> 00:39:11,288
not hesitate to come to us thank you

861
00:39:13,870 --> 00:39:49,388
[Music]

