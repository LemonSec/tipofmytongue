1
00:00:01,230 --> 00:00:05,430
[Music]

2
00:00:08,389 --> 00:00:15,690
good morning<font color="#CCCCCC"> everyone i'm rancher and</font>

3
00:00:12,740 --> 00:00:19,170
<font color="#CCCCCC">we're</font><font color="#E5E5E5"> glad</font><font color="#CCCCCC"> to come</font><font color="#E5E5E5"> here and share my</font>

4
00:00:15,690 --> 00:00:19,770
research with you<font color="#CCCCCC"> at virgin eyes</font><font color="#E5E5E5"> my talk</font>

5
00:00:19,170 --> 00:00:23,420
<font color="#E5E5E5">today</font>

6
00:00:19,770 --> 00:00:26,009
it's from graphic<font color="#E5E5E5"> mode through god mode</font>

7
00:00:23,420 --> 00:00:31,859
<font color="#E5E5E5">discovery vulnerabilities or GPU</font>

8
00:00:26,010 --> 00:00:35,670
virtualization are you know for for a

9
00:00:31,859 --> 00:00:39,510
<font color="#E5E5E5">transition plan</font><font color="#CCCCCC"> for the virtual GPU is</font>

10
00:00:35,670 --> 00:00:42,329
very important<font color="#E5E5E5"> so let's put this</font>

11
00:00:39,510 --> 00:00:44,820
presentation will introduce a general

12
00:00:42,329 --> 00:00:51,809
way<font color="#CCCCCC"> to analyze</font><font color="#E5E5E5"> the complete</font>

13
00:00:44,820 --> 00:00:54,629
implementation of virtual GPU am a

14
00:00:51,809 --> 00:00:57,209
<font color="#E5E5E5">security researcher of distance security</font>

15
00:00:54,629 --> 00:01:00,449
channel lab my telework<font color="#E5E5E5"> is park yeongjin</font>

16
00:00:57,210 --> 00:01:04,080
<font color="#E5E5E5">and focus on Windows kernel research</font>

17
00:01:00,449 --> 00:01:06,890
before but recently I have paid some

18
00:01:04,080 --> 00:01:14,759
attention<font color="#E5E5E5"> about virtualization security</font>

19
00:01:06,890 --> 00:01:17,700
you can find me on<font color="#E5E5E5"> Twitter</font><font color="#CCCCCC"> the director</font>

20
00:01:14,760 --> 00:01:24,900
or my teen is<font color="#E5E5E5"> vendor one of the most</font>

21
00:01:17,700 --> 00:01:27,119
<font color="#E5E5E5">famous hacker in China and we we had</font>

22
00:01:24,900 --> 00:01:30,829
<font color="#E5E5E5">Wonder Ponton</font><font color="#CCCCCC"> accommodation this</font><font color="#E5E5E5"> last</font>

23
00:01:27,119 --> 00:01:33,930
year for<font color="#CCCCCC"> each</font><font color="#E5E5E5"> category and we are hiring</font>

24
00:01:30,829 --> 00:01:36,600
anyone want her<font color="#E5E5E5"> job for security</font>

25
00:01:33,930 --> 00:01:40,110
research or<font color="#CCCCCC"> just for hunting</font><font color="#E5E5E5"> please</font>

26
00:01:36,600 --> 00:01:48,270
contact us the Twitter account of<font color="#E5E5E5"> my</font>

27
00:01:40,110 --> 00:01:52,649
team is general<font color="#CCCCCC"> liable the talk</font><font color="#E5E5E5"> the</font>

28
00:01:48,270 --> 00:01:55,439
<font color="#CCCCCC">talking includes</font><font color="#E5E5E5"> four parts at first</font><font color="#CCCCCC"> we</font>

29
00:01:52,649 --> 00:01:59,520
<font color="#CCCCCC">- we were to some basic understanding</font>

30
00:01:55,439 --> 00:02:02,189
about the virtual GPU the second I'm

31
00:01:59,520 --> 00:02:06,270
going to<font color="#E5E5E5"> ever introduce my method to</font>

32
00:02:02,189 --> 00:02:09,389
analyze the<font color="#CCCCCC"> CPU virtualization after</font>

33
00:02:06,270 --> 00:02:13,319
that I will<font color="#CCCCCC"> use</font><font color="#E5E5E5"> hyper-v and the</font><font color="#CCCCCC"> rim well</font>

34
00:02:09,389 --> 00:02:14,119
as<font color="#CCCCCC"> vdl</font><font color="#E5E5E5"> as examples to explain how to</font>

35
00:02:13,319 --> 00:02:17,810
find

36
00:02:14,120 --> 00:02:19,069
attack surface over GPU<font color="#E5E5E5"> rasterization</font><font color="#CCCCCC"> at</font>

37
00:02:17,810 --> 00:02:22,250
last

38
00:02:19,069 --> 00:02:31,869
<font color="#E5E5E5">I've disclosed several</font><font color="#CCCCCC"> Vernor abilities</font>

39
00:02:22,250 --> 00:02:35,110
<font color="#CCCCCC">I</font><font color="#E5E5E5"> have found now let's begin</font><font color="#CCCCCC"> in general</font>

40
00:02:31,870 --> 00:02:39,140
there are<font color="#E5E5E5"> three</font><font color="#CCCCCC"> different device</font>

41
00:02:35,110 --> 00:02:41,030
<font color="#E5E5E5">virtualization therefore virtualization</font>

42
00:02:39,140 --> 00:02:44,839
device with<font color="#CCCCCC"> power of virtualization</font><font color="#E5E5E5"> and</font>

43
00:02:41,030 --> 00:02:50,000
the<font color="#E5E5E5"> hardware assist with irritation in</font>

44
00:02:44,840 --> 00:02:51,980
fact this talk<font color="#CCCCCC"> mainly district many</font>

45
00:02:50,000 --> 00:02:57,410
discussed the power of virtualization

46
00:02:51,980 --> 00:03:01,480
device this kind of<font color="#E5E5E5"> which</font><font color="#CCCCCC"> this</font><font color="#E5E5E5"> kind of</font>

47
00:02:57,410 --> 00:03:05,900
<font color="#E5E5E5">virtual device the guests must install</font>

48
00:03:01,480 --> 00:03:11,420
driver or modify the kernel of gas

49
00:03:05,900 --> 00:03:15,920
system so that<font color="#E5E5E5"> Lucas can transfer</font>

50
00:03:11,420 --> 00:03:27,798
<font color="#E5E5E5">information via shared memory or data</font>

51
00:03:15,920 --> 00:03:30,048
channel<font color="#E5E5E5"> with host the picture shows how</font>

52
00:03:27,799 --> 00:03:33,769
the operating<font color="#E5E5E5"> system</font><font color="#CCCCCC"> used the</font><font color="#E5E5E5"> graphic</font>

53
00:03:30,049 --> 00:03:37,250
<font color="#E5E5E5">card the application costs the 3d</font>

54
00:03:33,769 --> 00:03:41,150
graphics<font color="#E5E5E5"> lab function</font><font color="#CCCCCC"> under graphics lab</font>

55
00:03:37,250 --> 00:03:43,700
such as the red<font color="#E5E5E5"> xvd sends the renting</font>

56
00:03:41,150 --> 00:03:46,130
<font color="#E5E5E5">commands to the graphic</font><font color="#CCCCCC"> card driver and</font>

57
00:03:43,700 --> 00:03:53,149
the driver interacts with the graphic

58
00:03:46,130 --> 00:03:58,489
card for virtual GPU the workflow like

59
00:03:53,150 --> 00:04:02,060
<font color="#CCCCCC">list the virtual graphic driver inside</font>

60
00:03:58,489 --> 00:04:05,959
the castle<font color="#E5E5E5"> cannot directly work with</font><font color="#CCCCCC"> the</font>

61
00:04:02,060 --> 00:04:08,989
physic graphic card so the display

62
00:04:05,959 --> 00:04:12,620
<font color="#E5E5E5">request from</font><font color="#CCCCCC"> caster will be transferred</font>

63
00:04:08,989 --> 00:04:14,690
<font color="#CCCCCC">to</font><font color="#E5E5E5"> the host device emulator</font><font color="#CCCCCC"> and then the</font>

64
00:04:12,620 --> 00:04:17,539
code on host we are called<font color="#E5E5E5"> a graphic</font>

65
00:04:14,690 --> 00:04:23,840
library function<font color="#E5E5E5"> to complete but the</font>

66
00:04:17,539 --> 00:04:28,330
display<font color="#CCCCCC"> tasks or renting commands in</font>

67
00:04:23,840 --> 00:04:32,239
fact<font color="#E5E5E5"> I don't</font><font color="#CCCCCC"> have many experience about</font>

68
00:04:28,330 --> 00:04:35,229
<font color="#E5E5E5">virtualization but I just I just start</font>

69
00:04:32,240 --> 00:04:44,450
this research based on<font color="#E5E5E5"> my knowledge</font>

70
00:04:35,229 --> 00:04:47,210
<font color="#E5E5E5">about the</font><font color="#CCCCCC"> windows</font><font color="#E5E5E5"> kernel so I just hope</font>

71
00:04:44,450 --> 00:04:54,800
you guys are also<font color="#E5E5E5"> familiar with the</font>

72
00:04:47,210 --> 00:05:01,669
windows<font color="#CCCCCC"> Koerner the synthetic</font><font color="#E5E5E5"> graphic</font>

73
00:04:54,800 --> 00:05:05,360
art it's a para virtualized the device

74
00:05:01,669 --> 00:05:08,120
it could be could<font color="#CCCCCC"> be</font><font color="#E5E5E5"> it could be a good</font>

75
00:05:05,360 --> 00:05:08,900
choice<font color="#CCCCCC"> if</font><font color="#E5E5E5"> we start from the guest</font>

76
00:05:08,120 --> 00:05:12,409
<font color="#E5E5E5">miniport</font>

77
00:05:08,900 --> 00:05:18,049
drivers for the<font color="#CCCCCC"> para</font><font color="#E5E5E5"> virtualization</font>

78
00:05:12,409 --> 00:05:20,930
device<font color="#E5E5E5"> the</font><font color="#CCCCCC"> platform should modify the</font>

79
00:05:18,050 --> 00:05:27,979
guest corner or<font color="#E5E5E5"> load driver in the guest</font>

80
00:05:20,930 --> 00:05:31,880
so for for the<font color="#CCCCCC"> windows</font><font color="#E5E5E5"> system the</font>

81
00:05:27,979 --> 00:05:32,510
graphic driver<font color="#E5E5E5"> the graphic lacroix free</font>

82
00:05:31,880 --> 00:05:38,140
driver

83
00:05:32,510 --> 00:05:38,140
it must contains a mini pot drivers

84
00:05:38,510 --> 00:05:44,550
we need some basic<font color="#CCCCCC"> understanding about</font>

85
00:05:41,820 --> 00:05:54,420
the Windows display driver<font color="#E5E5E5"> motor</font>

86
00:05:44,550 --> 00:05:57,930
let's<font color="#E5E5E5"> look at the</font><font color="#CCCCCC"> tea sweetie let's look</font>

87
00:05:54,420 --> 00:06:03,000
<font color="#E5E5E5">at the digital library on left the TCD</font>

88
00:05:57,930 --> 00:06:05,610
<font color="#CCCCCC">wrong han from user mode interacts with</font>

89
00:06:03,000 --> 00:06:10,620
the kernel<font color="#CCCCCC"> mode the red X graphic</font>

90
00:06:05,610 --> 00:06:11,220
<font color="#CCCCCC">Koerner subsystem and the</font><font color="#E5E5E5"> Dirac X</font>

91
00:06:10,620 --> 00:06:13,290
<font color="#CCCCCC">Koerner</font>

92
00:06:11,220 --> 00:06:17,070
<font color="#CCCCCC">they are called the interface function</font>

93
00:06:13,290 --> 00:06:20,400
of display miniport driver<font color="#E5E5E5"> so what we</font>

94
00:06:17,070 --> 00:06:29,640
care about is the mini pot driver of the

95
00:06:20,400 --> 00:06:32,570
<font color="#E5E5E5">graphic card in top</font><font color="#CCCCCC"> with EDM framework</font>

96
00:06:29,640 --> 00:06:36,360
<font color="#E5E5E5">the graphic card vendor should implement</font>

97
00:06:32,570 --> 00:06:41,040
display driver in<font color="#E5E5E5"> user mode and the mini</font>

98
00:06:36,360 --> 00:06:43,260
port driver<font color="#E5E5E5"> in</font><font color="#CCCCCC"> kana mode for example</font><font color="#E5E5E5"> the</font>

99
00:06:41,040 --> 00:06:44,270
<font color="#E5E5E5">hyper video sees is the mini pot flower</font>

100
00:06:43,260 --> 00:06:47,820
<font color="#CCCCCC">of a</font><font color="#E5E5E5"> happy</font>

101
00:06:44,270 --> 00:06:56,490
the women sweetie<font color="#CCCCCC"> NPCs</font><font color="#E5E5E5"> is miniport</font>

102
00:06:47,820 --> 00:06:59,849
driver of when we're at<font color="#CCCCCC"> vda the mini pot</font>

103
00:06:56,490 --> 00:07:04,290
<font color="#E5E5E5">driver should register the</font><font color="#CCCCCC"> tier 8 X</font>

104
00:06:59,850 --> 00:07:06,690
<font color="#E5E5E5">interface functions so the graphic</font>

105
00:07:04,290 --> 00:07:11,040
library display commands<font color="#E5E5E5"> could be passed</font>

106
00:07:06,690 --> 00:07:20,810
from the<font color="#CCCCCC"> Direct</font><font color="#E5E5E5"> X curve through the mini</font>

107
00:07:11,040 --> 00:07:20,810
pot driver<font color="#CCCCCC"> let's</font><font color="#E5E5E5"> down related models</font>

108
00:07:21,140 --> 00:07:29,400
this<font color="#CCCCCC"> is a context from</font><font color="#E5E5E5"> the DVD live the</font>

109
00:07:26,760 --> 00:07:33,690
city vice-president function called<font color="#E5E5E5"> the</font>

110
00:07:29,400 --> 00:07:37,020
<font color="#CCCCCC">nggg di di da di render function and the</font>

111
00:07:33,690 --> 00:07:39,240
red<font color="#CCCCCC"> X corner called</font><font color="#E5E5E5"> the VM</font><font color="#CCCCCC"> TDI</font><font color="#E5E5E5"> render</font>

112
00:07:37,020 --> 00:07:43,169
function the women TDI render function

113
00:07:39,240 --> 00:07:47,750
is implemented<font color="#CCCCCC"> by the women 3d and</font>

114
00:07:43,170 --> 00:07:47,750
<font color="#E5E5E5">pieces by the main portal driver</font>

115
00:07:49,759 --> 00:07:57,810
so we can<font color="#E5E5E5"> get some clue conclusions for</font>

116
00:07:55,610 --> 00:08:01,349
paravirtualized<font color="#CCCCCC"> coffee</font><font color="#E5E5E5"> cup</font>

117
00:07:57,810 --> 00:08:04,560
<font color="#CCCCCC">mini pot drivers she would come through</font>

118
00:08:01,349 --> 00:08:07,639
<font color="#E5E5E5">the communicate with the host how to</font>

119
00:08:04,560 --> 00:08:10,349
send<font color="#E5E5E5"> the render command to host</font>

120
00:08:07,639 --> 00:08:13,949
different device different<font color="#E5E5E5"> virtual</font>

121
00:08:10,349 --> 00:08:19,259
device design the<font color="#E5E5E5"> different ways</font><font color="#CCCCCC"> we can</font>

122
00:08:13,949 --> 00:08:22,319
find attack surface here now we look at

123
00:08:19,259 --> 00:08:30,360
the richer graphic card or card overt<font color="#E5E5E5"> or</font>

124
00:08:22,319 --> 00:08:32,279
<font color="#E5E5E5">heavy the</font><font color="#CCCCCC"> mini box driver of the</font>

125
00:08:30,360 --> 00:08:36,029
<font color="#E5E5E5">miniature the mean fault driver in cast</font>

126
00:08:32,279 --> 00:08:39,059
is hyper video<font color="#CCCCCC"> sees</font><font color="#E5E5E5"> and you see</font><font color="#CCCCCC"> that</font>

127
00:08:36,029 --> 00:08:47,670
display adapter<font color="#E5E5E5"> guest is Microsoft</font>

128
00:08:39,059 --> 00:08:51,268
hyper-v video but the happy we the<font color="#E5E5E5"> happy</font>

129
00:08:47,670 --> 00:08:55,890
video<font color="#E5E5E5"> this is a display</font><font color="#CCCCCC"> only driver</font><font color="#E5E5E5"> it</font>

130
00:08:51,269 --> 00:08:59,100
means a breeder cannot fully support the

131
00:08:55,890 --> 00:09:02,610
3d acceleration functions for<font color="#E5E5E5"> tableau</font>

132
00:08:59,100 --> 00:09:06,899
<font color="#E5E5E5">TDM framework if our mini port driver is</font>

133
00:09:02,610 --> 00:09:11,640
registered as a display only driver<font color="#E5E5E5"> it</font>

134
00:09:06,899 --> 00:09:17,970
is possible to implement<font color="#E5E5E5"> only a few</font>

135
00:09:11,640 --> 00:09:22,579
interface so the<font color="#CCCCCC"> hyper video the happy</font>

136
00:09:17,970 --> 00:09:30,930
video<font color="#E5E5E5"> cannot support the random part of</font>

137
00:09:22,579 --> 00:09:37,910
the virtual<font color="#E5E5E5"> GPU functions</font><font color="#CCCCCC"> this is the</font>

138
00:09:30,930 --> 00:09:41,430
code of the Linux video driver and the

139
00:09:37,910 --> 00:09:43,500
the<font color="#CCCCCC"> wind bus</font><font color="#E5E5E5"> prac provide a</font>

140
00:09:41,430 --> 00:09:51,870
<font color="#E5E5E5">communication channel between cast and</font>

141
00:09:43,500 --> 00:09:55,350
host<font color="#E5E5E5"> if you want to know more internals</font>

142
00:09:51,870 --> 00:10:00,390
about<font color="#CCCCCC"> REM bus layers</font><font color="#E5E5E5"> earth dies</font><font color="#CCCCCC"> type</font>

143
00:09:55,350 --> 00:10:01,920
<font color="#CCCCCC">into high berea</font><font color="#E5E5E5"> a architecture and their</font>

144
00:10:00,390 --> 00:10:04,949
vulnerabilities

145
00:10:01,920 --> 00:10:07,610
it's presented by Microsoft at<font color="#CCCCCC"> blackhat</font>

146
00:10:04,950 --> 00:10:07,610
<font color="#CCCCCC">of this year</font>

147
00:10:09,440 --> 00:10:17,670
<font color="#E5E5E5">okay</font><font color="#CCCCCC"> I just said</font><font color="#E5E5E5"> hyper video is a</font>

148
00:10:14,130 --> 00:10:22,709
display<font color="#CCCCCC"> only driver</font><font color="#E5E5E5"> so happier cannot</font>

149
00:10:17,670 --> 00:10:25,829
support of 3d acceleration<font color="#CCCCCC"> pattern</font>

150
00:10:22,709 --> 00:10:30,899
Microsoft designed<font color="#E5E5E5"> the removed effects</font>

151
00:10:25,829 --> 00:10:36,120
to support for<font color="#E5E5E5"> GPU which ization remote</font>

152
00:10:30,899 --> 00:10:39,990
effects is not enabled by<font color="#CCCCCC"> default</font><font color="#E5E5E5"> we</font>

153
00:10:36,120 --> 00:10:45,149
should add a hardware the remote effects

154
00:10:39,990 --> 00:10:50,700
<font color="#CCCCCC">3d video adapter</font><font color="#E5E5E5"> then it will install</font>

155
00:10:45,149 --> 00:10:54,209
remote<font color="#CCCCCC"> effects drivers for the</font><font color="#E5E5E5"> guest</font><font color="#CCCCCC"> the</font>

156
00:10:50,700 --> 00:10:57,779
<font color="#E5E5E5">guest on the gas letís play adapter now</font>

157
00:10:54,209 --> 00:11:03,560
is Microsoft the remote<font color="#E5E5E5"> F remote FX</font>

158
00:10:57,779 --> 00:11:03,560
graphic device<font color="#CCCCCC"> is</font><font color="#E5E5E5"> not have a video now</font>

159
00:11:06,860 --> 00:11:16,110
the remote effects models on the<font color="#E5E5E5"> guest</font>

160
00:11:12,110 --> 00:11:24,149
what we care about is the meaning port

161
00:11:16,110 --> 00:11:28,019
<font color="#CCCCCC">Ivor</font><font color="#E5E5E5"> our DVD can disease for remote</font>

162
00:11:24,149 --> 00:11:31,800
effects the device emulator is not in

163
00:11:28,019 --> 00:11:36,690
the enthalpy<font color="#CCCCCC"> process</font><font color="#E5E5E5"> the host will start</font>

164
00:11:31,800 --> 00:11:44,880
a new process our<font color="#CCCCCC"> DV</font><font color="#E5E5E5"> GM for each virtual</font>

165
00:11:36,690 --> 00:11:49,800
machine<font color="#CCCCCC"> ok</font><font color="#E5E5E5"> with we we still look at the</font>

166
00:11:44,880 --> 00:11:52,620
<font color="#E5E5E5">minimal driver we start we</font><font color="#CCCCCC"> can start</font>

167
00:11:49,800 --> 00:11:55,609
with the key function but this V DT D I

168
00:11:52,620 --> 00:11:55,610
submit command

169
00:12:00,440 --> 00:12:06,199
in the mid post driver<font color="#E5E5E5"> or</font><font color="#CCCCCC"> have we</font><font color="#E5E5E5"> are in</font>

170
00:12:03,529 --> 00:12:09,110
the mid<font color="#CCCCCC"> part driver of</font><font color="#E5E5E5"> a remote FX the</font>

171
00:12:06,199 --> 00:12:12,258
<font color="#CCCCCC">DCT TDI submit command function called</font>

172
00:12:09,110 --> 00:12:14,449
the dma engine<font color="#CCCCCC"> submitted function in the</font>

173
00:12:12,259 --> 00:12:18,350
dma engine submit<font color="#CCCCCC"> function we can see</font>

174
00:12:14,449 --> 00:12:22,008
<font color="#CCCCCC">that the code the code to some operation</font>

175
00:12:18,350 --> 00:12:25,639
about a<font color="#CCCCCC"> event Queen when I reveal all</font>

176
00:12:22,009 --> 00:12:29,930
<font color="#CCCCCC">the</font><font color="#E5E5E5"> functions of dma engine class I have</font>

177
00:12:25,639 --> 00:12:32,300
found I have found that the true<font color="#E5E5E5"> command</font>

178
00:12:29,930 --> 00:12:37,128
<font color="#E5E5E5">handler function is the PMA engine</font>

179
00:12:32,300 --> 00:12:41,300
process DMA the whole process<font color="#E5E5E5"> looks like</font>

180
00:12:37,129 --> 00:12:46,449
<font color="#CCCCCC">this when the menopause driver the RVT</font>

181
00:12:41,300 --> 00:12:49,969
the<font color="#CCCCCC"> RVT G</font><font color="#E5E5E5"> came disease when this driver</font>

182
00:12:46,449 --> 00:12:54,199
utilized<font color="#E5E5E5"> it will create a workers width</font>

183
00:12:49,970 --> 00:12:57,139
<font color="#E5E5E5">and when a user called that submit</font>

184
00:12:54,199 --> 00:13:00,579
command function the dma engine will

185
00:12:57,139 --> 00:13:05,899
send the command<font color="#CCCCCC"> to</font><font color="#E5E5E5"> list workers rate</font>

186
00:13:00,579 --> 00:13:15,229
and the process<font color="#CCCCCC"> DMA function we are tear</font>

187
00:13:05,899 --> 00:13:20,350
tear<font color="#E5E5E5"> vist</font><font color="#CCCCCC"> the</font><font color="#E5E5E5"> command buffer</font><font color="#CCCCCC"> this is the</font>

188
00:13:15,230 --> 00:13:26,600
code<font color="#E5E5E5"> of process DMA function the path</font>

189
00:13:20,350 --> 00:13:30,500
the path the red color<font color="#CCCCCC"> la path is</font><font color="#E5E5E5"> the</font>

190
00:13:26,600 --> 00:13:35,899
path<font color="#E5E5E5"> the memory data is copied from</font><font color="#CCCCCC"> the</font>

191
00:13:30,500 --> 00:13:40,399
user space so if you are familiar<font color="#E5E5E5"> with</font>

192
00:13:35,899 --> 00:13:42,889
<font color="#E5E5E5">the winners graphic subsystem it will be</font>

193
00:13:40,399 --> 00:13:45,350
easy<font color="#CCCCCC"> to understand</font><font color="#E5E5E5"> the loop here is</font>

194
00:13:42,889 --> 00:13:49,699
called different graphic processing

195
00:13:45,350 --> 00:13:58,100
functions such as<font color="#E5E5E5"> same the clear-cut</font>

196
00:13:49,699 --> 00:14:01,430
<font color="#E5E5E5">plant</font><font color="#CCCCCC"> same the alpha plant we can catch</font>

197
00:13:58,100 --> 00:14:04,189
the functions by learn and the p-funk a

198
00:14:01,430 --> 00:14:09,309
present<font color="#E5E5E5"> the X function is used to</font>

199
00:14:04,189 --> 00:14:09,309
<font color="#E5E5E5">transmit to read acts</font><font color="#CCCCCC"> related commands</font>

200
00:14:10,380 --> 00:14:18,390
as you see in this function called<font color="#E5E5E5"> the</font>

201
00:14:14,730 --> 00:14:21,180
TVM channel we write buffer to transfer

202
00:14:18,390 --> 00:14:27,180
<font color="#CCCCCC">the red act command to the</font><font color="#E5E5E5"> host the</font><font color="#CCCCCC"> gvm</font>

203
00:14:21,180 --> 00:14:35,339
channel is a class about<font color="#CCCCCC"> Limbaugh's now</font>

204
00:14:27,180 --> 00:14:38,839
case study the<font color="#CCCCCC"> CVE 2018 847</font><font color="#E5E5E5"> one removed</font>

205
00:14:35,340 --> 00:14:42,120
<font color="#E5E5E5">FX virtual GPU miniport driver</font>

206
00:14:38,840 --> 00:14:44,490
<font color="#E5E5E5">escalation of probability</font><font color="#CCCCCC"> I have</font>

207
00:14:42,120 --> 00:14:50,990
reported<font color="#CCCCCC"> about ten</font><font color="#E5E5E5"> bucks to Microsoft</font>

208
00:14:44,490 --> 00:14:55,550
but only<font color="#E5E5E5"> get one</font><font color="#CCCCCC"> TV one of the users</font>

209
00:14:50,990 --> 00:14:55,550
simply transfer<font color="#CCCCCC"> poro</font><font color="#E5E5E5"> flow</font>

210
00:15:04,100 --> 00:15:12,900
the third the third parameter<font color="#CCCCCC"> the</font><font color="#E5E5E5"> third</font>

211
00:15:08,490 --> 00:15:16,110
<font color="#E5E5E5">parameter the private data the public</font>

212
00:15:12,900 --> 00:15:26,400
<font color="#CCCCCC">data is copied from the use</font><font color="#E5E5E5"> of space so</font>

213
00:15:16,110 --> 00:15:31,430
the value of the<font color="#CCCCCC"> value of will be</font><font color="#E5E5E5"> 15 is</font>

214
00:15:26,400 --> 00:15:34,980
derived from private data<font color="#E5E5E5"> of said 48</font>

215
00:15:31,430 --> 00:15:40,829
underside of a copy is calculated

216
00:15:34,980 --> 00:15:46,170
according to<font color="#CCCCCC"> V 15 so when when a</font>

217
00:15:40,830 --> 00:15:49,170
<font color="#E5E5E5">function called</font><font color="#CCCCCC"> the man move the size of</font>

218
00:15:46,170 --> 00:15:53,729
the copy can be<font color="#E5E5E5"> cultured controlled by</font>

219
00:15:49,170 --> 00:15:57,860
the user<font color="#CCCCCC"> so it is</font><font color="#E5E5E5"> it will cause a</font>

220
00:15:53,730 --> 00:15:57,860
current airport<font color="#CCCCCC"> flow here</font>

221
00:16:08,160 --> 00:16:13,800
the proof code<font color="#CCCCCC"> a proof of code looked</font>

222
00:16:10,560 --> 00:16:15,839
like<font color="#CCCCCC"> this for the allocation structure</font>

223
00:16:13,800 --> 00:16:19,770
<font color="#CCCCCC">Lackey feared private data is</font>

224
00:16:15,840 --> 00:16:21,840
initialized to<font color="#E5E5E5"> city then we call the</font>

225
00:16:19,770 --> 00:16:24,060
same<font color="#CCCCCC"> D transfer function the simply</font>

226
00:16:21,840 --> 00:16:29,400
transfer<font color="#CCCCCC"> actually called the stop main</font>

227
00:16:24,060 --> 00:16:32,130
function<font color="#CCCCCC"> submit a</font><font color="#E5E5E5"> command function then</font>

228
00:16:29,400 --> 00:16:34,709
we can<font color="#CCCCCC"> observe the</font><font color="#E5E5E5"> memory when the dma</font>

229
00:16:32,130 --> 00:16:40,770
engine<font color="#CCCCCC"> commanders transfer function is</font>

230
00:16:34,710 --> 00:16:50,550
<font color="#E5E5E5">executed here the r8 adjuster is the</font>

231
00:16:40,770 --> 00:16:54,870
private data under value and the<font color="#CCCCCC"> cure</font><font color="#E5E5E5"> of</font>

232
00:16:50,550 --> 00:16:58,280
<font color="#CCCCCC">this value will be cccccc solar side</font>

233
00:16:54,870 --> 00:16:58,280
very very<font color="#CCCCCC"> big</font>

234
00:17:05,540 --> 00:17:09,159
now it's the<font color="#E5E5E5"> time time</font>

235
00:17:24,920 --> 00:17:34,170
this video was recorded<font color="#CCCCCC"> in</font><font color="#E5E5E5"> August but</font>

236
00:17:30,050 --> 00:17:37,129
the<font color="#E5E5E5"> issue is</font><font color="#CCCCCC"> just fixed this is just</font>

237
00:17:34,170 --> 00:17:37,130
fixed<font color="#E5E5E5"> with moms</font>

238
00:17:49,060 --> 00:17:51,929
<font color="#CCCCCC">to France</font>

239
00:17:55,539 --> 00:17:59,190
<font color="#E5E5E5">then we call system</font>

240
00:18:04,609 --> 00:18:09,859
now we<font color="#E5E5E5"> talk</font><font color="#CCCCCC"> about the villanelle SVD a</font>

241
00:18:13,429 --> 00:18:20,609
for him where the<font color="#E5E5E5"> rim truth will</font><font color="#CCCCCC"> be</font>

242
00:18:17,219 --> 00:18:23,700
installed by default the display adapter

243
00:18:20,609 --> 00:18:34,080
of<font color="#E5E5E5"> the caste system is when we</font><font color="#CCCCCC"> are at</font>

244
00:18:23,700 --> 00:18:38,339
vgs-vt the<font color="#E5E5E5"> whim we are SVG sweetie</font>

245
00:18:34,080 --> 00:18:42,509
<font color="#E5E5E5">perfect cut confer the support the 3d</font>

246
00:18:38,339 --> 00:18:45,658
<font color="#E5E5E5">graphics factors fetchers it is also a</font>

247
00:18:42,509 --> 00:18:47,969
para virtualized<font color="#E5E5E5"> graphic</font><font color="#CCCCCC"> card so the</font>

248
00:18:45,659 --> 00:18:51,749
trainer model should be<font color="#CCCCCC"> interred in a</font>

249
00:18:47,969 --> 00:18:53,029
caste system the<font color="#E5E5E5"> use model that display</font>

250
00:18:51,749 --> 00:19:02,429
driver

251
00:18:53,029 --> 00:19:08,279
it contains<font color="#CCCCCC"> true-to-life the VM 3 tu</font><font color="#E5E5E5"> n64</font>

252
00:19:02,429 --> 00:19:13,019
and<font color="#E5E5E5"> the VM 3d um 6</font><font color="#CCCCCC"> 4 10 140 CT night</font>

253
00:19:08,279 --> 00:19:17,330
<font color="#E5E5E5">version and 140</font><font color="#CCCCCC"> c-140</font><font color="#E5E5E5"> City tongue the</font>

254
00:19:13,019 --> 00:19:17,330
<font color="#E5E5E5">meaningful driver is VM 3d NPCs</font>

255
00:19:26,010 --> 00:19:31,620
let's let's take<font color="#E5E5E5"> a look at least feature</font>

256
00:19:28,700 --> 00:19:35,010
<font color="#CCCCCC">the virtual graphic driver in the guest</font>

257
00:19:31,620 --> 00:19:39,299
received a command<font color="#E5E5E5"> from the TCP light</font>

258
00:19:35,010 --> 00:19:44,690
function and forwards it<font color="#E5E5E5"> tularemia</font><font color="#CCCCCC"> vmx</font>

259
00:19:39,299 --> 00:19:57,000
<font color="#E5E5E5">process all on a host</font><font color="#CCCCCC"> and the</font><font color="#E5E5E5"> host color</font>

260
00:19:44,690 --> 00:20:00,540
<font color="#CCCCCC">DCT lab functions this</font><font color="#E5E5E5"> is less VGA it is</font>

261
00:19:57,000 --> 00:20:07,890
explained it<font color="#E5E5E5"> explained great detail by</font>

262
00:20:00,540 --> 00:20:14,750
<font color="#CCCCCC">para paper we mainly focus on command fi</font>

263
00:20:07,890 --> 00:20:19,380
fo buffer here as I<font color="#CCCCCC"> mentioned earlier a</font>

264
00:20:14,750 --> 00:20:21,960
synthetic graphic cut must have<font color="#CCCCCC"> taught</font>

265
00:20:19,380 --> 00:20:25,650
her<font color="#E5E5E5"> trans transfer of channel between</font>

266
00:20:21,960 --> 00:20:30,660
the<font color="#E5E5E5"> guest and the</font><font color="#CCCCCC"> host for SVD</font><font color="#E5E5E5"> a</font><font color="#CCCCCC"> its</font>

267
00:20:25,650 --> 00:20:34,679
command fi fo buffer if a queen<font color="#E5E5E5"> that</font>

268
00:20:30,660 --> 00:20:40,200
hold a series it<font color="#CCCCCC"> look come</font><font color="#E5E5E5"> on fi fo</font>

269
00:20:34,679 --> 00:20:45,360
<font color="#E5E5E5">bother it is a queen let's hold a series</font>

270
00:20:40,200 --> 00:20:50,669
of<font color="#E5E5E5"> commands and the</font><font color="#CCCCCC"> guest concerned</font>

271
00:20:45,360 --> 00:20:56,299
<font color="#E5E5E5">these commands to</font><font color="#CCCCCC"> a host by write</font><font color="#E5E5E5"> a</font>

272
00:20:50,669 --> 00:20:56,299
space pirate<font color="#CCCCCC"> Earth Patrick</font><font color="#E5E5E5"> I</font><font color="#CCCCCC"> approach</font>

273
00:20:56,840 --> 00:21:02,699
the room area

274
00:20:59,010 --> 00:21:07,230
the women error<font color="#E5E5E5"> vmx process we are</font>

275
00:21:02,700 --> 00:21:11,280
<font color="#E5E5E5">create</font><font color="#CCCCCC"> svgs wait</font><font color="#E5E5E5"> to process if I am no</font>

276
00:21:07,230 --> 00:21:13,290
to process<font color="#E5E5E5"> fi fo command buffer the</font>

277
00:21:11,280 --> 00:21:16,500
<font color="#CCCCCC">meaningful driver in the guest writes</font>

278
00:21:13,290 --> 00:21:20,668
the commands<font color="#E5E5E5"> to</font><font color="#CCCCCC"> fi</font><font color="#E5E5E5"> fo buffer and then</font>

279
00:21:16,500 --> 00:21:23,660
not file as radiation<font color="#E5E5E5"> to it by</font><font color="#CCCCCC"> write the</font>

280
00:21:20,669 --> 00:21:23,660
airport

281
00:21:27,460 --> 00:21:37,220
<font color="#CCCCCC">laris SVD a command function table in</font>

282
00:21:31,010 --> 00:21:41,240
<font color="#E5E5E5">the room where the MMX process if we if</font>

283
00:21:37,220 --> 00:21:46,250
we<font color="#E5E5E5"> locate the code in either we will</font>

284
00:21:41,240 --> 00:21:50,630
find out that this loop is reading<font color="#CCCCCC"> fi FL</font>

285
00:21:46,250 --> 00:21:53,710
buffer and the<font color="#CCCCCC"> color handler function</font>

286
00:21:50,630 --> 00:22:02,000
call<font color="#E5E5E5"> a command handler function</font>

287
00:21:53,710 --> 00:22:05,600
according their command<font color="#E5E5E5"> ID a reputed</font>

288
00:22:02,000 --> 00:22:16,299
shows<font color="#CCCCCC"> there's many layers many command</font>

289
00:22:05,600 --> 00:22:16,299
hundred functions sorry sorry sorry

290
00:22:22,540 --> 00:22:25,409
sorry

291
00:22:29,160 --> 00:22:38,740
<font color="#E5E5E5">let's see there are six basic types of</font>

292
00:22:33,270 --> 00:22:41,320
objects in<font color="#E5E5E5"> the mail</font><font color="#CCCCCC"> SVD a the MLP</font><font color="#E5E5E5"> object</font>

293
00:22:38,740 --> 00:22:44,010
<font color="#E5E5E5">the surface object the contest object a</font>

294
00:22:41,320 --> 00:22:50,070
shader object and the DX context object

295
00:22:44,010 --> 00:22:55,300
so the shader object is<font color="#E5E5E5"> lots of become</font>

296
00:22:50,070 --> 00:23:00,100
<font color="#CCCCCC">factory Lavigne well support shader</font>

297
00:22:55,300 --> 00:23:07,300
model one version to<font color="#CCCCCC"> share the model 5</font>

298
00:23:00,100 --> 00:23:12,340
vision and the window contains various

299
00:23:07,300 --> 00:23:17,700
type of shattered the P the P shader<font color="#CCCCCC"> the</font>

300
00:23:12,340 --> 00:23:21,750
vertex shader<font color="#E5E5E5"> and the geometry</font><font color="#CCCCCC"> shader</font>

301
00:23:17,700 --> 00:23:25,630
the many as<font color="#E5E5E5"> VDS</font><font color="#CCCCCC"> 3d commands</font><font color="#E5E5E5"> where</font>

302
00:23:21,750 --> 00:23:38,080
trigger<font color="#CCCCCC"> will</font><font color="#E5E5E5"> post all translates</font><font color="#CCCCCC"> the</font>

303
00:23:25,630 --> 00:23:42,540
shader bad code so we just understand

304
00:23:38,080 --> 00:23:46,060
the shader<font color="#E5E5E5"> on</font><font color="#CCCCCC"> a</font><font color="#E5E5E5"> left unless there is a</font>

305
00:23:42,540 --> 00:23:50,470
shader code written by a<font color="#CCCCCC"> high level</font>

306
00:23:46,060 --> 00:23:54,220
shader language<font color="#E5E5E5"> the V X function the</font><font color="#CCCCCC"> vs</font>

307
00:23:50,470 --> 00:23:57,540
function<font color="#E5E5E5"> we present the operation of</font>

308
00:23:54,220 --> 00:24:01,840
vertex shader<font color="#E5E5E5"> the px' function is</font>

309
00:23:57,540 --> 00:24:04,710
operation<font color="#CCCCCC"> define different</font><font color="#E5E5E5"> it's a little</font>

310
00:24:01,840 --> 00:24:08,169
<font color="#E5E5E5">operation</font><font color="#CCCCCC"> define of the picture shader</font>

311
00:24:04,710 --> 00:24:15,840
this called a profound effect all right

312
00:24:08,170 --> 00:24:15,840
picture is a rotating<font color="#E5E5E5"> color Cuba</font>

313
00:24:28,230 --> 00:24:39,730
this code this code shows<font color="#CCCCCC"> the vertex the</font>

314
00:24:33,310 --> 00:24:43,210
<font color="#CCCCCC">vertex shader</font><font color="#E5E5E5"> creation the PCT device</font>

315
00:24:39,730 --> 00:24:47,620
creates vertex shader function this

316
00:24:43,210 --> 00:24:56,220
function<font color="#CCCCCC"> will actually</font><font color="#E5E5E5"> generate shader</font>

317
00:24:47,620 --> 00:25:03,429
bad code inside the<font color="#CCCCCC"> rod</font><font color="#E5E5E5"> the raw</font><font color="#CCCCCC"> data of</font>

318
00:24:56,220 --> 00:25:06,430
compiled shader as the picture shows<font color="#E5E5E5"> we</font>

319
00:25:03,430 --> 00:25:10,480
can found some<font color="#CCCCCC"> text</font><font color="#E5E5E5"> the</font><font color="#CCCCCC"> TX busy in</font>

320
00:25:06,430 --> 00:25:15,340
header<font color="#E5E5E5"> it's a magic sick it's a Mac</font><font color="#CCCCCC"> T is</font>

321
00:25:10,480 --> 00:25:18,370
a magic signature the<font color="#E5E5E5"> Green Line</font><font color="#CCCCCC"> shows</font>

322
00:25:15,340 --> 00:25:21,639
the Green Line<font color="#CCCCCC"> shows the shader compiler</font>

323
00:25:18,370 --> 00:25:26,379
version and the right and<font color="#E5E5E5"> the red line</font>

324
00:25:21,640 --> 00:25:37,240
<font color="#CCCCCC">shows the</font><font color="#E5E5E5"> sh t are identified a</font>

325
00:25:26,380 --> 00:25:40,870
<font color="#E5E5E5">start-over say the bad code forecast the</font>

326
00:25:37,240 --> 00:25:45,370
application calls<font color="#E5E5E5"> the</font><font color="#CCCCCC"> tcp</font><font color="#E5E5E5"> labs functions</font>

327
00:25:40,870 --> 00:25:52,330
to generate the shader<font color="#CCCCCC"> / code which is</font>

328
00:25:45,370 --> 00:25:54,429
which then passed to<font color="#E5E5E5"> the</font><font color="#CCCCCC"> vm 3d um the</font>

329
00:25:52,330 --> 00:25:58,210
SVD<font color="#E5E5E5"> a user mode that is</font><font color="#CCCCCC"> played driver</font>

330
00:25:54,430 --> 00:26:01,900
and<font color="#CCCCCC"> share the bar code</font><font color="#E5E5E5"> will be</font>

331
00:25:58,210 --> 00:26:06,790
transferred to<font color="#E5E5E5"> VM sweetie NPCs the</font>

332
00:26:01,900 --> 00:26:10,150
minimal driver and the minimal driver we

333
00:26:06,790 --> 00:26:14,290
appealed the<font color="#CCCCCC"> Builder</font><font color="#E5E5E5"> as we built a</font>

334
00:26:10,150 --> 00:26:17,400
series of<font color="#E5E5E5"> SVD SVD commands and send them</font>

335
00:26:14,290 --> 00:26:17,399
<font color="#E5E5E5">to the host</font>

336
00:26:21,830 --> 00:26:29,030
after the shipper code is passed<font color="#E5E5E5"> to levy</font>

337
00:26:25,350 --> 00:26:33,090
them well that<font color="#CCCCCC"> makes process in a host</font>

338
00:26:29,030 --> 00:26:36,120
the when we are<font color="#CCCCCC"> live max</font><font color="#E5E5E5"> will create the</font>

339
00:26:33,090 --> 00:26:40,439
shader<font color="#E5E5E5"> objects afterwards in many</font>

340
00:26:36,120 --> 00:26:44,459
commands<font color="#E5E5E5"> for temple TX</font><font color="#CCCCCC"> draw</font><font color="#E5E5E5"> a DX draw in</font>

341
00:26:40,440 --> 00:26:48,270
test these commands via trigger

342
00:26:44,460 --> 00:26:51,900
translation for the shader<font color="#CCCCCC"> so the</font>

343
00:26:48,270 --> 00:27:02,010
shaders translation is a big landscape

344
00:26:51,900 --> 00:27:06,360
of attack so we<font color="#CCCCCC"> can send the SVD a</font>

345
00:27:02,010 --> 00:27:10,950
command<font color="#E5E5E5"> directly for fighting first we</font>

346
00:27:06,360 --> 00:27:15,500
<font color="#CCCCCC">should define MLP object to get a NOP</font>

347
00:27:10,950 --> 00:27:23,540
<font color="#CCCCCC">idea</font><font color="#E5E5E5"> and with</font><font color="#CCCCCC"> write our shader bad code</font>

348
00:27:15,500 --> 00:27:27,750
in the base address memory and<font color="#E5E5E5"> second we</font>

349
00:27:23,540 --> 00:27:31,290
we send a recent era txt file share the

350
00:27:27,750 --> 00:27:33,690
command to get a shader<font color="#E5E5E5"> object ID and we</font>

351
00:27:31,290 --> 00:27:37,980
combined and then we<font color="#CCCCCC"> combine the shader</font>

352
00:27:33,690 --> 00:27:42,120
<font color="#E5E5E5">ID with the up with the MLP ID and then</font>

353
00:27:37,980 --> 00:27:45,480
we can call we can send the<font color="#E5E5E5"> access say</font>

354
00:27:42,120 --> 00:27:51,989
the accept shader command<font color="#E5E5E5"> a</font><font color="#CCCCCC"> shell object</font>

355
00:27:45,480 --> 00:27:56,720
should<font color="#CCCCCC"> be created</font><font color="#E5E5E5"> case study about the</font>

356
00:27:51,990 --> 00:28:02,460
SVD a shader vulnerabilities the CVE

357
00:27:56,720 --> 00:28:05,160
<font color="#CCCCCC">2018 six nine six sees the vulnerable</font>

358
00:28:02,460 --> 00:28:08,820
version of VMware Workstation contains

359
00:28:05,160 --> 00:28:13,520
an<font color="#CCCCCC"> out of bounds read venerable</font><font color="#E5E5E5"> key in</font>

360
00:28:08,820 --> 00:28:17,428
<font color="#E5E5E5">shaded translation we can provide a</font>

361
00:28:13,520 --> 00:28:24,540
specially crafted<font color="#E5E5E5"> vertex shader</font><font color="#CCCCCC"> per code</font>

362
00:28:17,429 --> 00:28:26,160
to trigger this vulnerability the crash

363
00:28:24,540 --> 00:28:30,659
<font color="#E5E5E5">spec</font>

364
00:28:26,160 --> 00:28:34,710
when the host<font color="#E5E5E5"> when a host executes the</font>

365
00:28:30,660 --> 00:28:37,800
extra in text command<font color="#E5E5E5"> it will trigger it</font>

366
00:28:34,710 --> 00:28:45,180
<font color="#E5E5E5">virtually invalid</font><font color="#CCCCCC"> in memory address</font>

367
00:28:37,800 --> 00:28:56,010
<font color="#E5E5E5">access the specific shader bad code as</font>

368
00:28:45,180 --> 00:29:00,570
the<font color="#E5E5E5"> picture shows the index the index of</font>

369
00:28:56,010 --> 00:29:05,250
output register<font color="#E5E5E5"> the index of outputting</font>

370
00:29:00,570 --> 00:29:11,870
<font color="#E5E5E5">you gesture has been overwrite to a</font>

371
00:29:05,250 --> 00:29:15,360
where<font color="#CCCCCC"> peek to a web big index for for</font>

372
00:29:11,870 --> 00:29:24,350
for<font color="#CCCCCC"> a vertex shader</font><font color="#E5E5E5"> the</font><font color="#CCCCCC"> next</font><font color="#E5E5E5"> count of</font>

373
00:29:15,360 --> 00:29:27,780
the output register is only in<font color="#E5E5E5"> 16 so</font>

374
00:29:24,350 --> 00:29:31,139
when when the host<font color="#CCCCCC"> translate we know how</font>

375
00:29:27,780 --> 00:29:40,740
to<font color="#CCCCCC"> translate the shader</font><font color="#E5E5E5"> bad code with a</font>

376
00:29:31,140 --> 00:29:44,550
very big index of output<font color="#CCCCCC"> register</font><font color="#E5E5E5"> we can</font>

377
00:29:40,740 --> 00:29:48,680
see that<font color="#E5E5E5"> the</font><font color="#CCCCCC"> icx of gesture the value of</font>

378
00:29:44,550 --> 00:30:02,820
a<font color="#E5E5E5"> CX is the index of output</font><font color="#CCCCCC"> register</font>

379
00:29:48,680 --> 00:30:05,490
<font color="#E5E5E5">much much higher much x 4 so</font><font color="#CCCCCC"> here</font><font color="#E5E5E5"> due to</font>

380
00:30:02,820 --> 00:30:08,929
<font color="#E5E5E5">lack of validation for the route that</font>

381
00:30:05,490 --> 00:30:13,970
<font color="#CCCCCC">register index here</font><font color="#E5E5E5"> we trigger</font>

382
00:30:08,930 --> 00:30:13,970
<font color="#CCCCCC">out-of-bounds memory access</font>

383
00:30:16,680 --> 00:30:27,080
now we look at a different<font color="#E5E5E5"> sample</font><font color="#CCCCCC"> it's a</font>

384
00:30:23,540 --> 00:30:32,790
it's a<font color="#CCCCCC"> Outer Banks</font><font color="#E5E5E5"> read in the purse</font>

385
00:30:27,080 --> 00:30:35,189
shader function the specific flow<font color="#CCCCCC"> exists</font>

386
00:30:32,790 --> 00:30:38,520
within the shader for<font color="#CCCCCC"> path</font><font color="#E5E5E5"> called the</font>

387
00:30:35,190 --> 00:30:41,520
<font color="#E5E5E5">first function this issue we</font><font color="#CCCCCC"> thought</font>

388
00:30:38,520 --> 00:30:47,330
from<font color="#E5E5E5"> the lack of</font><font color="#CCCCCC"> a proper</font><font color="#E5E5E5"> validation of</font>

389
00:30:41,520 --> 00:30:51,480
the use of<font color="#E5E5E5"> supreme so the user data</font><font color="#CCCCCC"> so</font>

390
00:30:47,330 --> 00:30:58,100
in the purse in a post<font color="#CCCCCC"> function it will</font>

391
00:30:51,480 --> 00:30:58,100
read past the<font color="#CCCCCC"> end of</font><font color="#E5E5E5"> the shader memory</font>

392
00:30:59,750 --> 00:31:09,270
the<font color="#CCCCCC"> crash</font><font color="#E5E5E5"> looks like</font><font color="#CCCCCC"> least when the host</font>

393
00:31:04,580 --> 00:31:12,629
executes a DXF shader command it<font color="#CCCCCC"> called</font>

394
00:31:09,270 --> 00:31:19,200
it called<font color="#E5E5E5"> the purse</font><font color="#CCCCCC"> shade for function</font>

395
00:31:12,630 --> 00:31:27,870
and<font color="#E5E5E5"> the RS</font><font color="#CCCCCC"> I register here it had point</font>

396
00:31:19,200 --> 00:31:32,060
<font color="#CCCCCC">help</font><font color="#E5E5E5"> on invalid memory address</font><font color="#CCCCCC"> this is</font>

397
00:31:27,870 --> 00:31:36,060
<font color="#CCCCCC">our crafted shade there instructions</font><font color="#E5E5E5"> as</font>

398
00:31:32,060 --> 00:31:39,330
you<font color="#E5E5E5"> see the last</font><font color="#CCCCCC"> instruction</font><font color="#E5E5E5"> that last</font>

399
00:31:36,060 --> 00:31:43,350
instruction had had been<font color="#CCCCCC"> modified it</font>

400
00:31:39,330 --> 00:31:47,939
should be<font color="#E5E5E5"> worth it should be read so the</font>

401
00:31:43,350 --> 00:31:51,179
<font color="#E5E5E5">shaded via P and here</font><font color="#CCCCCC"> but now the</font>

402
00:31:47,940 --> 00:31:55,020
instruction is<font color="#CCCCCC"> overwrite through</font><font color="#E5E5E5"> air D</font>

403
00:31:51,180 --> 00:32:01,260
the<font color="#CCCCCC"> LD instruction it means French</font><font color="#E5E5E5"> data</font>

404
00:31:55,020 --> 00:32:09,450
<font color="#E5E5E5">it means fetch data from a buffer so the</font>

405
00:32:01,260 --> 00:32:11,070
shader<font color="#E5E5E5"> purse function cannot cannot the</font>

406
00:32:09,450 --> 00:32:14,910
shell appreciate<font color="#E5E5E5"> the first function we</font>

407
00:32:11,070 --> 00:32:21,750
are read the data<font color="#E5E5E5"> passed the last the</font>

408
00:32:14,910 --> 00:32:25,950
last<font color="#CCCCCC"> instruction when the when the</font><font color="#E5E5E5"> crash</font>

409
00:32:21,750 --> 00:32:29,010
occurred<font color="#E5E5E5"> we can see that the</font><font color="#CCCCCC"> RPX</font>

410
00:32:25,950 --> 00:32:30,450
register<font color="#E5E5E5"> the objects will just eight</font>

411
00:32:29,010 --> 00:32:35,490
point<font color="#E5E5E5"> two</font>

412
00:32:30,450 --> 00:32:39,570
and Avila<font color="#CCCCCC"> shade a barcode memory the</font>

413
00:32:35,490 --> 00:32:44,730
<font color="#CCCCCC">read</font><font color="#E5E5E5"> cada</font><font color="#CCCCCC"> loretta color the 2d is</font><font color="#E5E5E5"> it's</font>

414
00:32:39,570 --> 00:32:48,300
the value<font color="#E5E5E5"> of air the instruction and the</font>

415
00:32:44,730 --> 00:32:52,500
purse function via read past we read

416
00:32:48,300 --> 00:32:53,760
<font color="#CCCCCC">past the Trudy and</font><font color="#E5E5E5"> the</font><font color="#CCCCCC"> Riddler t0 the</font>

417
00:32:52,500 --> 00:32:57,560
teaser<font color="#E5E5E5"> de xira</font>

418
00:32:53,760 --> 00:33:01,890
as as a<font color="#CCCCCC"> shader instruction and a person</font>

419
00:32:57,560 --> 00:33:06,030
so it's<font color="#E5E5E5"> there</font>

420
00:33:01,890 --> 00:33:10,440
read it read<font color="#E5E5E5"> it will read the T 0 T 0 T</font>

421
00:33:06,030 --> 00:33:16,230
0<font color="#CCCCCC"> 0 as the value of the opcode front and</font>

422
00:33:10,440 --> 00:33:22,980
in<font color="#E5E5E5"> in this loop in this loop the opcode</font>

423
00:33:16,230 --> 00:33:25,160
and it<font color="#E5E5E5"> will be pointed to</font><font color="#CCCCCC"> a invalid</font>

424
00:33:22,980 --> 00:33:25,160
address

425
00:33:29,999 --> 00:33:35,670
<font color="#CCCCCC">here</font>

426
00:33:32,940 --> 00:33:40,590
<font color="#E5E5E5">okay</font>

427
00:33:35,670 --> 00:33:45,530
it's a nano demo it's a escape from gas

428
00:33:40,590 --> 00:33:45,530
<font color="#E5E5E5">- host okay</font>

429
00:33:50,670 --> 00:34:00,840
the VMware Workstation version is 15 the

430
00:33:54,750 --> 00:34:06,210
latest version the<font color="#CCCCCC"> escaper</font><font color="#E5E5E5"> is the expert</font>

431
00:34:00,840 --> 00:34:10,259
and the<font color="#CCCCCC"> past a calculator</font><font color="#E5E5E5"> and you see</font>

432
00:34:06,210 --> 00:34:13,520
that this<font color="#E5E5E5"> process created by</font><font color="#CCCCCC"> eleven way</font>

433
00:34:10,260 --> 00:34:13,520
of the MX process

434
00:34:15,020 --> 00:34:50,889
[Applause]

435
00:34:17,730 --> 00:34:50,889
[Music]

