1
00:00:10,900 --> 00:00:16,299
so hello I'm<font color="#E5E5E5"> Cu from Purdue University</font>

2
00:00:13,590 --> 00:00:18,250
<font color="#E5E5E5">it is my honor to be given</font><font color="#CCCCCC"> the</font><font color="#E5E5E5"> chance to</font>

3
00:00:16,299 --> 00:00:21,640
<font color="#CCCCCC">come</font><font color="#E5E5E5"> here</font><font color="#CCCCCC"> to talk about latest work</font>

4
00:00:18,250 --> 00:00:23,770
called<font color="#CCCCCC"> sim set on finding semantic</font>

5
00:00:21,640 --> 00:00:26,619
problems in<font color="#E5E5E5"> software code that does</font>

6
00:00:23,770 --> 00:00:28,450
x.509 certificate validation so this is

7
00:00:26,619 --> 00:00:31,150
a<font color="#E5E5E5"> joint work</font><font color="#CCCCCC"> with</font><font color="#E5E5E5"> Omar</font><font color="#CCCCCC"> from the U of</font>

8
00:00:28,450 --> 00:00:33,790
Iowa<font color="#CCCCCC"> Christina who also happened to be</font>

9
00:00:31,150 --> 00:00:35,710
<font color="#E5E5E5">the section chief from not Easton</font><font color="#CCCCCC"> and</font>

10
00:00:33,790 --> 00:00:38,760
<font color="#E5E5E5">then do</font><font color="#CCCCCC"> Hongki</font><font color="#E5E5E5"> as well as my two</font>

11
00:00:35,710 --> 00:00:42,519
<font color="#CCCCCC">advisers Anika turning away from Purdue</font>

12
00:00:38,760 --> 00:00:45,280
to begin with Xbox<font color="#E5E5E5"> Online has long been</font>

13
00:00:42,519 --> 00:00:47,949
<font color="#CCCCCC">used in</font><font color="#E5E5E5"> TRS as a way of doing</font>

14
00:00:45,280 --> 00:00:50,100
authentication<font color="#E5E5E5"> and key diversion it is</font>

15
00:00:47,949 --> 00:00:52,210
worth noting that<font color="#E5E5E5"> many times the</font>

16
00:00:50,100 --> 00:00:54,340
<font color="#CCCCCC">confidentiality and integrity guarantee</font>

17
00:00:52,210 --> 00:00:58,539
that years provides<font color="#E5E5E5"> are kind of build on</font>

18
00:00:54,340 --> 00:01:01,449
top<font color="#CCCCCC"> of the ability of doing</font><font color="#E5E5E5"> those to the</font>

19
00:00:58,539 --> 00:01:03,579
<font color="#CCCCCC">x.509 PGI realizes the concept of</font>

20
00:01:01,449 --> 00:01:05,379
<font color="#E5E5E5">so-called chain of trust what it means</font>

21
00:01:03,579 --> 00:01:08,350
is that given<font color="#CCCCCC"> a chain of certificates</font>

22
00:01:05,379 --> 00:01:11,260
<font color="#E5E5E5">from a server</font><font color="#CCCCCC"> a client is expected to</font>

23
00:01:08,350 --> 00:01:13,869
verify the chain of search and see

24
00:01:11,260 --> 00:01:17,050
whether<font color="#E5E5E5"> he can extend the trust from a</font>

25
00:01:13,870 --> 00:01:19,330
trusted<font color="#CCCCCC"> root CA down to a intermediary</font>

26
00:01:17,050 --> 00:01:22,509
<font color="#E5E5E5">cert and then all the way down</font><font color="#CCCCCC"> to the</font>

27
00:01:19,330 --> 00:01:25,030
one<font color="#CCCCCC"> of</font><font color="#E5E5E5"> the server sounds easy enough</font><font color="#CCCCCC"> I</font>

28
00:01:22,510 --> 00:01:27,790
guess but from yesterday's talk

29
00:01:25,030 --> 00:01:30,010
yesterday<font color="#E5E5E5"> yes min told us in her talk on</font>

30
00:01:27,790 --> 00:01:33,700
cryptographic API<font color="#CCCCCC"> I think none of</font><font color="#E5E5E5"> the</font>

31
00:01:30,010 --> 00:01:35,140
<font color="#CCCCCC">participant in her</font><font color="#E5E5E5"> user study managed to</font>

32
00:01:33,700 --> 00:01:38,110
implement certificate validation

33
00:01:35,140 --> 00:01:40,300
correctly<font color="#E5E5E5"> and also</font><font color="#CCCCCC"> we talked to some</font>

34
00:01:38,110 --> 00:01:42,190
developers of<font color="#CCCCCC"> TRS libraries and they</font>

35
00:01:40,300 --> 00:01:44,770
some<font color="#CCCCCC"> of them seem to have somewhat</font>

36
00:01:42,190 --> 00:01:48,009
negative<font color="#E5E5E5"> feelings towards the task of</font>

37
00:01:44,770 --> 00:01:49,330
implementing support for<font color="#CCCCCC"> x.509 so it</font>

38
00:01:48,010 --> 00:01:51,580
turns out<font color="#E5E5E5"> that</font><font color="#CCCCCC"> what makes it difficult</font>

39
00:01:49,330 --> 00:01:54,370
is that<font color="#CCCCCC"> apart from</font><font color="#E5E5E5"> the cryptographic</font>

40
00:01:51,580 --> 00:01:55,810
signatures on certificates you have<font color="#E5E5E5"> just</font>

41
00:01:54,370 --> 00:01:57,820
so many other<font color="#CCCCCC"> different things</font><font color="#E5E5E5"> that you</font>

42
00:01:55,810 --> 00:02:00,130
<font color="#E5E5E5">have to check so for example you'll be</font>

43
00:01:57,820 --> 00:02:02,710
given different<font color="#E5E5E5"> names that are made of</font>

44
00:02:00,130 --> 00:02:04,810
<font color="#E5E5E5">multiple attributes and you are expected</font>

45
00:02:02,710 --> 00:02:06,610
to match them up and then you also have

46
00:02:04,810 --> 00:02:08,500
<font color="#CCCCCC">to do</font><font color="#E5E5E5"> some</font><font color="#CCCCCC"> daytime</font><font color="#E5E5E5"> checking which turns</font>

47
00:02:06,610 --> 00:02:10,810
<font color="#E5E5E5">out</font><font color="#CCCCCC"> to be also</font><font color="#E5E5E5"> surprisingly</font><font color="#CCCCCC"> difficult</font>

48
00:02:08,500 --> 00:02:12,879
<font color="#E5E5E5">and perhaps more importantly you are</font>

49
00:02:10,810 --> 00:02:14,920
<font color="#CCCCCC">given some</font><font color="#E5E5E5"> optional but possibly</font>

50
00:02:12,879 --> 00:02:18,880
<font color="#E5E5E5">critical extensions that you have to get</font>

51
00:02:14,920 --> 00:02:21,640
<font color="#E5E5E5">processed correctly now if an</font>

52
00:02:18,880 --> 00:02:23,180
implementation is deviating from<font color="#E5E5E5"> the</font>

53
00:02:21,640 --> 00:02:26,420
specification<font color="#CCCCCC"> it can</font>

54
00:02:23,180 --> 00:02:28,219
come in two<font color="#CCCCCC"> different flavors so for</font>

55
00:02:26,420 --> 00:02:30,409
<font color="#E5E5E5">example with an implementation turns out</font>

56
00:02:28,219 --> 00:02:32,060
to<font color="#CCCCCC"> be overly permissive</font><font color="#E5E5E5"> then you might</font>

57
00:02:30,409 --> 00:02:35,269
<font color="#E5E5E5">be susceptible to different kinds of</font>

58
00:02:32,060 --> 00:02:36,829
attacks<font color="#CCCCCC"> and if the implementation is</font>

59
00:02:35,269 --> 00:02:40,609
overly restrictive then you might lose

60
00:02:36,829 --> 00:02:43,549
surface we<font color="#E5E5E5"> noticed that in recent years</font>

61
00:02:40,609 --> 00:02:46,159
<font color="#CCCCCC">there's a huge</font><font color="#E5E5E5"> demand for internet</font>

62
00:02:43,549 --> 00:02:48,349
<font color="#E5E5E5">connected and</font><font color="#CCCCCC"> better systems and because</font>

63
00:02:46,159 --> 00:02:51,040
they have<font color="#E5E5E5"> generally very limited amount</font>

64
00:02:48,349 --> 00:02:53,388
<font color="#E5E5E5">of</font><font color="#CCCCCC"> resources as</font><font color="#E5E5E5"> far</font><font color="#CCCCCC"> as processing power</font>

65
00:02:51,040 --> 00:02:55,819
<font color="#CCCCCC">developers have been making new TRS</font>

66
00:02:53,389 --> 00:02:57,409
libraries for these<font color="#E5E5E5"> platforms generally</font>

67
00:02:55,819 --> 00:02:59,540
these libraries would be written<font color="#CCCCCC"> in C</font>

68
00:02:57,409 --> 00:03:02,388
<font color="#CCCCCC">and they are heavily</font><font color="#E5E5E5"> optimized to kind</font>

69
00:02:59,540 --> 00:03:04,608
of make them run better on<font color="#E5E5E5"> resource</font>

70
00:03:02,389 --> 00:03:06,230
restricted platforms and we notice<font color="#CCCCCC"> that</font>

71
00:03:04,609 --> 00:03:08,599
there are multiple such libraries being

72
00:03:06,230 --> 00:03:11,418
released<font color="#CCCCCC"> under the open source license</font>

73
00:03:08,599 --> 00:03:13,548
<font color="#E5E5E5">and perhaps because of their</font><font color="#CCCCCC"> impeccable</font>

74
00:03:11,419 --> 00:03:16,519
performance advantages<font color="#E5E5E5"> over the</font>

75
00:03:13,549 --> 00:03:18,319
traditional and perhaps<font color="#E5E5E5"> heavier</font><font color="#CCCCCC"> TLS</font>

76
00:03:16,519 --> 00:03:20,450
libraries<font color="#E5E5E5"> we are seeing a new trend</font><font color="#CCCCCC"> of</font>

77
00:03:18,319 --> 00:03:22,159
app developers trying<font color="#E5E5E5"> to take</font><font color="#CCCCCC"> advantage</font>

78
00:03:20,450 --> 00:03:24,679
of<font color="#E5E5E5"> these smaller green libraries in</font>

79
00:03:22,159 --> 00:03:28,010
<font color="#E5E5E5">their day to day app development even on</font>

80
00:03:24,680 --> 00:03:31,129
desktop platforms hence the focus<font color="#E5E5E5"> of our</font>

81
00:03:28,010 --> 00:03:34,608
<font color="#CCCCCC">research is to expose non-compliance in</font>

82
00:03:31,129 --> 00:03:37,129
<font color="#CCCCCC">xo9 certificate verification in</font><font color="#E5E5E5"> small</font>

83
00:03:34,609 --> 00:03:39,530
footprint<font color="#E5E5E5"> iOS libraries and for that</font>

84
00:03:37,129 --> 00:03:42,620
we'll take our C<font color="#CCCCCC"> 5280 as our main</font>

85
00:03:39,530 --> 00:03:45,620
reference the motivation for this paper

86
00:03:42,620 --> 00:03:47,359
<font color="#E5E5E5">is simple given small footprint small</font>

87
00:03:45,620 --> 00:03:49,549
<font color="#E5E5E5">codebase it should not be the</font><font color="#CCCCCC"> case that</font>

88
00:03:47,359 --> 00:03:53,389
the library is kind of compromising<font color="#E5E5E5"> and</font>

89
00:03:49,549 --> 00:03:55,609
sacrificing<font color="#E5E5E5"> too much of security and</font>

90
00:03:53,389 --> 00:03:58,699
<font color="#E5E5E5">because</font><font color="#CCCCCC"> GRS is such a critical</font><font color="#E5E5E5"> part of</font>

91
00:03:55,609 --> 00:04:02,000
our<font color="#CCCCCC"> modern</font><font color="#E5E5E5"> day security it has been</font>

92
00:03:58,699 --> 00:04:03,799
studied a lot and<font color="#CCCCCC"> when it</font><font color="#E5E5E5"> comes to</font>

93
00:04:02,000 --> 00:04:05,689
testing<font color="#CCCCCC"> software implementation I think</font>

94
00:04:03,799 --> 00:04:07,750
<font color="#CCCCCC">black</font><font color="#E5E5E5"> box</font><font color="#CCCCCC"> fighting has</font><font color="#E5E5E5"> been kind of the</font>

95
00:04:05,689 --> 00:04:10,310
<font color="#E5E5E5">prominent the most prominent approach</font>

96
00:04:07,750 --> 00:04:12,139
<font color="#E5E5E5">where researchers</font><font color="#CCCCCC"> try to look into the</font>

97
00:04:10,310 --> 00:04:14,389
problem of you know<font color="#E5E5E5"> protocol say machine</font>

98
00:04:12,139 --> 00:04:16,549
translation kind of problems as well<font color="#E5E5E5"> as</font>

99
00:04:14,389 --> 00:04:18,709
<font color="#E5E5E5">a highly relevant paper that also got</font>

100
00:04:16,548 --> 00:04:20,870
published at<font color="#E5E5E5"> SNP</font><font color="#CCCCCC"> three years</font><font color="#E5E5E5"> ago which</font>

101
00:04:18,709 --> 00:04:24,199
<font color="#E5E5E5">also looked into</font><font color="#CCCCCC"> the problem of</font><font color="#E5E5E5"> xf9</font>

102
00:04:20,870 --> 00:04:26,389
certificate validation so the

103
00:04:24,199 --> 00:04:29,419
observation<font color="#CCCCCC"> that we use into developing</font>

104
00:04:26,389 --> 00:04:31,520
our approach is<font color="#CCCCCC"> that given a universe of</font>

105
00:04:29,419 --> 00:04:34,010
all the possible input certifications

106
00:04:31,520 --> 00:04:36,620
<font color="#CCCCCC">a library essentially does wanted it</font>

107
00:04:34,010 --> 00:04:39,169
splits<font color="#E5E5E5"> the universe into two possible</font>

108
00:04:36,620 --> 00:04:42,410
smaller universes<font color="#E5E5E5"> one that it accepts</font>

109
00:04:39,169 --> 00:04:44,240
and one that it rejects with that in

110
00:04:42,410 --> 00:04:47,090
mind our white box approach goes like

111
00:04:44,240 --> 00:04:49,580
this<font color="#E5E5E5"> so</font><font color="#CCCCCC"> for</font><font color="#E5E5E5"> each of the library</font><font color="#CCCCCC"> we fit</font>

112
00:04:47,090 --> 00:04:52,159
them<font color="#CCCCCC"> input that we refer to</font><font color="#E5E5E5"> as same set</font>

113
00:04:49,580 --> 00:04:55,310
and symbolically execute<font color="#CCCCCC"> the portion of</font>

114
00:04:52,160 --> 00:04:58,340
<font color="#E5E5E5">the code that is in charge of validating</font>

115
00:04:55,310 --> 00:05:01,910
<font color="#CCCCCC">certificates the purpose of that is to</font>

116
00:04:58,340 --> 00:05:05,560
approximate<font color="#E5E5E5"> the two universes and have</font>

117
00:05:01,910 --> 00:05:08,150
them<font color="#CCCCCC"> represented in logical formulas</font>

118
00:05:05,560 --> 00:05:10,280
given<font color="#E5E5E5"> the availability of multiple</font>

119
00:05:08,150 --> 00:05:13,638
different<font color="#CCCCCC"> open</font><font color="#E5E5E5"> source implementations we</font>

120
00:05:10,280 --> 00:05:16,099
can do a<font color="#E5E5E5"> differential testing by doing a</font>

121
00:05:13,639 --> 00:05:18,139
<font color="#CCCCCC">pairwise cross-validation so different</font>

122
00:05:16,100 --> 00:05:21,110
<font color="#E5E5E5">given two</font><font color="#CCCCCC"> different implementations if</font>

123
00:05:18,139 --> 00:05:23,389
you can find such a certificate<font color="#E5E5E5"> that one</font>

124
00:05:21,110 --> 00:05:25,789
library<font color="#E5E5E5"> would accept and one would</font>

125
00:05:23,389 --> 00:05:28,400
reject then you have a discrepancy

126
00:05:25,789 --> 00:05:30,560
<font color="#CCCCCC">design exercise problem</font><font color="#E5E5E5"> and because</font>

127
00:05:28,400 --> 00:05:33,320
<font color="#CCCCCC">these approximations are in logic</font>

128
00:05:30,560 --> 00:05:34,520
formers with the help of SMT software

129
00:05:33,320 --> 00:05:37,130
you<font color="#E5E5E5"> can do all these kind of</font>

130
00:05:34,520 --> 00:05:38,599
automatically now you might be<font color="#CCCCCC"> thinking</font>

131
00:05:37,130 --> 00:05:41,090
that<font color="#E5E5E5"> this</font><font color="#CCCCCC"> sounds</font><font color="#E5E5E5"> too good to be</font><font color="#CCCCCC"> true</font>

132
00:05:38,600 --> 00:05:44,120
<font color="#E5E5E5">because</font><font color="#CCCCCC"> civil execution</font><font color="#E5E5E5"> is simply</font>

133
00:05:41,090 --> 00:05:46,130
unscalable<font color="#E5E5E5"> now indeed symbolic location</font>

134
00:05:44,120 --> 00:05:49,340
<font color="#E5E5E5">is cursed by the problem of path</font>

135
00:05:46,130 --> 00:05:51,440
explosion<font color="#CCCCCC"> where first</font><font color="#E5E5E5"> of all you</font>

136
00:05:49,340 --> 00:05:52,909
essentially<font color="#E5E5E5"> each conditional statement</font>

137
00:05:51,440 --> 00:05:56,570
contributes to a multiplicative<font color="#E5E5E5"> factor</font>

138
00:05:52,910 --> 00:05:58,099
<font color="#CCCCCC">and things get</font><font color="#E5E5E5"> particularly bad when you</font>

139
00:05:56,570 --> 00:06:01,430
<font color="#E5E5E5">have loops that</font><font color="#CCCCCC"> are depending on</font>

140
00:05:58,099 --> 00:06:03,169
symbolic values<font color="#E5E5E5"> so to make</font><font color="#CCCCCC"> symbolic</font>

141
00:06:01,430 --> 00:06:06,979
execution practical for<font color="#CCCCCC"> our particular</font>

142
00:06:03,169 --> 00:06:08,510
research problem we make<font color="#E5E5E5"> instead of</font>

143
00:06:06,979 --> 00:06:11,060
making a whole<font color="#CCCCCC"> certificate chain</font>

144
00:06:08,510 --> 00:06:14,659
symbolic<font color="#E5E5E5"> we make concrete values with</font>

145
00:06:11,060 --> 00:06:17,620
<font color="#E5E5E5">symbolic values think of the thing about</font>

146
00:06:14,660 --> 00:06:20,479
<font color="#E5E5E5">x.509 certificates in</font><font color="#CCCCCC"> BR encoding</font>

147
00:06:17,620 --> 00:06:23,960
essentially a encoded<font color="#CCCCCC"> cert would be a</font>

148
00:06:20,479 --> 00:06:26,570
tree of tag<font color="#E5E5E5"> length and value triplets</font>

149
00:06:23,960 --> 00:06:29,750
where value can be<font color="#E5E5E5"> further recursively</font>

150
00:06:26,570 --> 00:06:32,870
defined by more<font color="#CCCCCC"> TFE triplets so the key</font>

151
00:06:29,750 --> 00:06:37,160
idea<font color="#CCCCCC"> here is to</font><font color="#E5E5E5"> keep T and L to be</font>

152
00:06:32,870 --> 00:06:39,650
concrete<font color="#CCCCCC"> and</font><font color="#E5E5E5"> then for the leaf node the</font>

153
00:06:37,160 --> 00:06:41,570
leaf<font color="#E5E5E5"> V notes that correspond to a</font>

154
00:06:39,650 --> 00:06:45,710
certificate<font color="#CCCCCC"> fields and extensions you</font>

155
00:06:41,570 --> 00:06:48,979
can<font color="#CCCCCC"> make them symbolic we also try to</font>

156
00:06:45,710 --> 00:06:50,270
limit our scope for our analysis<font color="#E5E5E5"> and we</font>

157
00:06:48,979 --> 00:06:52,609
also draw<font color="#CCCCCC"> some more can</font>

158
00:06:50,270 --> 00:06:55,130
<font color="#E5E5E5">domain-specific observations so first of</font>

159
00:06:52,610 --> 00:06:57,050
<font color="#E5E5E5">all we don't try</font><font color="#CCCCCC"> to comment</font><font color="#E5E5E5"> on whether</font>

160
00:06:55,130 --> 00:07:00,590
the<font color="#E5E5E5"> amendment Asians are doing correctly</font>

161
00:06:57,050 --> 00:07:03,050
<font color="#E5E5E5">in terms</font><font color="#CCCCCC"> of cryptography</font><font color="#E5E5E5"> and we also try</font>

162
00:07:00,590 --> 00:07:04,429
to<font color="#CCCCCC"> simplify the string matching which I</font>

163
00:07:03,050 --> 00:07:07,040
think the next talk in the session<font color="#E5E5E5"> would</font>

164
00:07:04,430 --> 00:07:08,630
give us a bit more insight<font color="#CCCCCC"> on that</font>

165
00:07:07,040 --> 00:07:10,340
and finally we break the original

166
00:07:08,630 --> 00:07:12,110
problem into smaller<font color="#E5E5E5"> independence a</font>

167
00:07:10,340 --> 00:07:13,310
problem where<font color="#E5E5E5"> we essentially make</font>

168
00:07:12,110 --> 00:07:16,910
<font color="#E5E5E5">different things</font>

169
00:07:13,310 --> 00:07:19,130
symbolic<font color="#CCCCCC"> at</font><font color="#E5E5E5"> different times</font><font color="#CCCCCC"> with all</font>

170
00:07:16,910 --> 00:07:21,380
that said I<font color="#CCCCCC"> think now would be a good</font>

171
00:07:19,130 --> 00:07:23,870
time to<font color="#CCCCCC"> show you some of our findings</font><font color="#E5E5E5"> we</font>

172
00:07:21,380 --> 00:07:26,300
have a lot<font color="#CCCCCC"> of findings so I cannot go</font>

173
00:07:23,870 --> 00:07:29,420
<font color="#CCCCCC">two of them I</font><font color="#E5E5E5"> will</font><font color="#CCCCCC"> encourage</font><font color="#E5E5E5"> you to read</font>

174
00:07:26,300 --> 00:07:31,430
our paper if<font color="#CCCCCC"> you have the time</font><font color="#E5E5E5"> so we</font>

175
00:07:29,420 --> 00:07:33,920
applied our<font color="#E5E5E5"> approach into testing</font><font color="#CCCCCC"> nine</font>

176
00:07:31,430 --> 00:07:36,080
implementations from four<font color="#CCCCCC"> different</font>

177
00:07:33,920 --> 00:07:39,770
families<font color="#E5E5E5"> of the earth libraries that are</font>

178
00:07:36,080 --> 00:07:42,469
<font color="#E5E5E5">actively being used and deployed on real</font>

179
00:07:39,770 --> 00:07:44,870
IOT products<font color="#E5E5E5"> as well</font><font color="#CCCCCC"> as on desktop app</font>

180
00:07:42,470 --> 00:07:47,620
development<font color="#E5E5E5"> and we found the total</font>

181
00:07:44,870 --> 00:07:50,990
number of 48<font color="#E5E5E5"> instances of non-compliance</font>

182
00:07:47,620 --> 00:07:53,300
<font color="#CCCCCC">and you might</font><font color="#E5E5E5"> have noticed that I</font>

183
00:07:50,990 --> 00:07:55,640
switched<font color="#E5E5E5"> the template midway through I</font>

184
00:07:53,300 --> 00:07:56,810
am hoping that the red color would wake

185
00:07:55,640 --> 00:07:59,780
you up<font color="#E5E5E5"> because have something</font>

186
00:07:56,810 --> 00:08:02,630
interesting<font color="#CCCCCC"> to show you</font><font color="#E5E5E5"> to summarize our</font>

187
00:07:59,780 --> 00:08:04,609
<font color="#E5E5E5">findings we found numerous certificate</font>

188
00:08:02,630 --> 00:08:07,969
fields and extensions<font color="#E5E5E5"> not being checked</font>

189
00:08:04,610 --> 00:08:11,300
and some libraries with a<font color="#E5E5E5"> mishandle and</font>

190
00:08:07,970 --> 00:08:13,670
recognized<font color="#E5E5E5"> critical extensions and we</font>

191
00:08:11,300 --> 00:08:15,590
also found<font color="#E5E5E5"> in completing implementation</font>

192
00:08:13,670 --> 00:08:17,330
in some of the libraries it looks like

193
00:08:15,590 --> 00:08:20,060
<font color="#E5E5E5">the developer wanted to add certain</font>

194
00:08:17,330 --> 00:08:21,560
features but perhaps<font color="#E5E5E5"> due</font><font color="#CCCCCC"> to release</font><font color="#E5E5E5"> that</font>

195
00:08:20,060 --> 00:08:24,280
line they didn't get to<font color="#E5E5E5"> finish it</font>

196
00:08:21,560 --> 00:08:27,950
<font color="#CCCCCC">completely and then we also found</font>

197
00:08:24,280 --> 00:08:30,289
<font color="#E5E5E5">incorrect interpretations of some</font>

198
00:08:27,950 --> 00:08:32,299
semantic meanings of certain certificate

199
00:08:30,290 --> 00:08:36,500
fields and<font color="#CCCCCC"> expansions</font><font color="#E5E5E5"> as well as the</font>

200
00:08:32,299 --> 00:08:38,719
outsi itself so the first piece of

201
00:08:36,500 --> 00:08:41,419
interesting new finding is that<font color="#CCCCCC"> we found</font>

202
00:08:38,720 --> 00:08:44,510
in multiple<font color="#E5E5E5"> libraries they are</font>

203
00:08:41,419 --> 00:08:47,599
misinterpreting the<font color="#CCCCCC"> 2-byte year of UTC</font>

204
00:08:44,510 --> 00:08:49,760
time so the<font color="#CCCCCC"> r3 says for UTC time the</font>

205
00:08:47,600 --> 00:08:54,350
expected range of the year should<font color="#CCCCCC"> be</font>

206
00:08:49,760 --> 00:08:56,920
between<font color="#CCCCCC"> 1950 to 2049 unfortunately for</font>

207
00:08:54,350 --> 00:08:59,530
<font color="#E5E5E5">matrix</font><font color="#CCCCCC"> s facility put the boundary at 95</font>

208
00:08:56,920 --> 00:09:03,670
<font color="#E5E5E5">effectively implementing a range between</font>

209
00:08:59,530 --> 00:09:06,040
1996<font color="#E5E5E5"> to 2095</font><font color="#CCCCCC"> this has a</font>

210
00:09:03,670 --> 00:09:09,189
severe implication because certificates

211
00:09:06,040 --> 00:09:11,949
that got expired in back in 1995 would

212
00:09:09,190 --> 00:09:14,290
<font color="#E5E5E5">be considered to expire</font><font color="#CCCCCC"> in</font><font color="#E5E5E5"> 2095 which</font>

213
00:09:11,950 --> 00:09:19,870
reminds<font color="#CCCCCC"> me of a certain</font><font color="#E5E5E5"> famous sci-fi</font>

214
00:09:14,290 --> 00:09:21,849
movie a similar issue exists in<font color="#E5E5E5"> tropical</font>

215
00:09:19,870 --> 00:09:23,440
<font color="#E5E5E5">system but the mistake is actually</font>

216
00:09:21,850 --> 00:09:28,030
different<font color="#CCCCCC"> because they</font><font color="#E5E5E5"> put a boundary at</font>

217
00:09:23,440 --> 00:09:30,730
89<font color="#CCCCCC"> and we also found</font><font color="#E5E5E5"> that</font><font color="#CCCCCC"> ax ers</font><font color="#E5E5E5"> has a</font>

218
00:09:28,030 --> 00:09:33,720
similar<font color="#CCCCCC"> problem</font><font color="#E5E5E5"> but</font><font color="#CCCCCC"> it looks like</font><font color="#E5E5E5"> the</font>

219
00:09:30,730 --> 00:09:36,640
developer perhaps which read the<font color="#CCCCCC"> RFC</font>

220
00:09:33,720 --> 00:09:39,730
<font color="#CCCCCC">because it's only off by one however</font><font color="#E5E5E5"> the</font>

221
00:09:36,640 --> 00:09:42,880
the problem of having some boundary

222
00:09:39,730 --> 00:09:49,180
cases<font color="#CCCCCC"> got shifted by</font><font color="#E5E5E5"> 100 years would</font>

223
00:09:42,880 --> 00:09:50,860
still be the<font color="#CCCCCC"> same a second highlight</font><font color="#E5E5E5"> of</font>

224
00:09:49,180 --> 00:09:53,109
<font color="#E5E5E5">our findings would be how sometimes</font>

225
00:09:50,860 --> 00:09:56,020
libraries would opt<font color="#CCCCCC"> for a lags</font>

226
00:09:53,110 --> 00:09:58,420
comparison logic<font color="#CCCCCC"> take this as an example</font>

227
00:09:56,020 --> 00:10:01,270
<font color="#CCCCCC">so on certificates you can have this</font>

228
00:09:58,420 --> 00:10:03,579
extended<font color="#E5E5E5"> key usage extension which</font>

229
00:10:01,270 --> 00:10:06,310
mandates the purposes of a key that can

230
00:10:03,580 --> 00:10:10,180
<font color="#E5E5E5">be useful and purposes are uniquely</font>

231
00:10:06,310 --> 00:10:11,949
identified by object<font color="#E5E5E5"> identifier for</font>

232
00:10:10,180 --> 00:10:15,479
example server authentication would have

233
00:10:11,950 --> 00:10:15,480
this particular<font color="#E5E5E5"> ID</font>

234
00:10:15,750 --> 00:10:21,490
unfortunately in both<font color="#CCCCCC"> Matrix</font><font color="#E5E5E5"> SSL</font><font color="#CCCCCC"> and</font>

235
00:10:18,370 --> 00:10:24,340
move SSL instead of trying to match the

236
00:10:21,490 --> 00:10:27,130
bite exactly<font color="#E5E5E5"> they just take a summation</font>

237
00:10:24,340 --> 00:10:28,900
of the<font color="#CCCCCC"> encoded bytes and then try</font><font color="#E5E5E5"> to</font>

238
00:10:27,130 --> 00:10:33,280
<font color="#E5E5E5">imagine</font><font color="#CCCCCC"> leda something so in this scheme</font>

239
00:10:28,900 --> 00:10:35,980
they take 71<font color="#E5E5E5"> to represent server</font>

240
00:10:33,280 --> 00:10:39,310
authentication<font color="#E5E5E5"> now this is problematic</font>

241
00:10:35,980 --> 00:10:42,640
<font color="#CCCCCC">because ou IDs are meant to be unique</font>

242
00:10:39,310 --> 00:10:45,609
hierarchically where<font color="#E5E5E5"> whereas the</font>

243
00:10:42,640 --> 00:10:48,310
summation of<font color="#E5E5E5"> bytes is not and this is an</font>

244
00:10:45,610 --> 00:10:51,160
example of implementations being overly

245
00:10:48,310 --> 00:10:53,050
permissive<font color="#E5E5E5"> because some garbage IDs</font>

246
00:10:51,160 --> 00:10:55,980
<font color="#CCCCCC">would be considered</font><font color="#E5E5E5"> to be meaningful and</font>

247
00:10:53,050 --> 00:10:59,079
it also presents a compatibility issue

248
00:10:55,980 --> 00:11:01,740
because some legitimate custom or IDs

249
00:10:59,080 --> 00:11:06,010
<font color="#E5E5E5">would be miss recognized</font><font color="#CCCCCC"> if their sums</font>

250
00:11:01,740 --> 00:11:09,340
happen to collide<font color="#E5E5E5"> and then we also found</font>

251
00:11:06,010 --> 00:11:10,720
<font color="#CCCCCC">that in a x-ers</font><font color="#E5E5E5"> given subject names and</font>

252
00:11:09,340 --> 00:11:13,570
issuer names with multiple attributes

253
00:11:10,720 --> 00:11:15,940
<font color="#CCCCCC">they do not</font><font color="#E5E5E5"> check country state and</font>

254
00:11:13,570 --> 00:11:16,560
locality meaning<font color="#E5E5E5"> that if you</font><font color="#CCCCCC"> have a</font><font color="#E5E5E5"> see</font>

255
00:11:15,940 --> 00:11:19,110
<font color="#E5E5E5">in the</font>

256
00:11:16,560 --> 00:11:21,420
<font color="#CCCCCC">u.s. and hypothetically you have a CA</font><font color="#E5E5E5"> of</font>

257
00:11:19,110 --> 00:11:26,220
the same name in Australia<font color="#CCCCCC"> the two would</font>

258
00:11:21,420 --> 00:11:28,500
be considered to match<font color="#E5E5E5"> and then we also</font>

259
00:11:26,220 --> 00:11:30,990
found<font color="#E5E5E5"> an ineffective sanity check in</font>

260
00:11:28,500 --> 00:11:32,820
matrix<font color="#E5E5E5"> SSL so the function</font><font color="#CCCCCC"> that I'm</font>

261
00:11:30,990 --> 00:11:35,550
showing<font color="#E5E5E5"> you here on the screen</font><font color="#CCCCCC"> its</font>

262
00:11:32,820 --> 00:11:39,450
<font color="#E5E5E5">purpose is to perform some basic sanity</font>

263
00:11:35,550 --> 00:11:41,760
check on input<font color="#CCCCCC"> eight strings however</font>

264
00:11:39,450 --> 00:11:44,339
<font color="#CCCCCC">because of</font><font color="#E5E5E5"> the if conditions are pretty</font>

265
00:11:41,760 --> 00:11:47,189
<font color="#E5E5E5">much all of</font><font color="#CCCCCC"> them unsatisfiable</font><font color="#E5E5E5"> it</font>

266
00:11:44,339 --> 00:11:50,010
<font color="#E5E5E5">actually never rejects</font><font color="#CCCCCC"> any strings due</font>

267
00:11:47,190 --> 00:11:54,750
<font color="#CCCCCC">to a incorrect usage of the logical</font>

268
00:11:50,010 --> 00:11:56,490
operator for a<font color="#E5E5E5"> scientific curiosity we</font>

269
00:11:54,750 --> 00:11:59,420
also revisited<font color="#E5E5E5"> some of the libraries</font>

270
00:11:56,490 --> 00:12:01,589
that<font color="#E5E5E5"> the previous passing paper tested</font>

271
00:11:59,420 --> 00:12:05,400
<font color="#E5E5E5">specifically we have some new findings</font>

272
00:12:01,589 --> 00:12:07,640
<font color="#E5E5E5">regarding these two libraries first in</font>

273
00:12:05,400 --> 00:12:11,069
<font color="#CCCCCC">science SL we notice that there is a</font>

274
00:12:07,640 --> 00:12:13,610
hidden coding mistake in the parsing

275
00:12:11,070 --> 00:12:16,260
code that parses certificate<font color="#CCCCCC"> expansions</font>

276
00:12:13,610 --> 00:12:18,960
<font color="#E5E5E5">it turns out that this piece of</font><font color="#CCCCCC"> code is</font>

277
00:12:16,260 --> 00:12:23,460
a lot like a poor grad student both of

278
00:12:18,960 --> 00:12:25,440
them are<font color="#CCCCCC"> missing a break this</font><font color="#E5E5E5"> is bad</font>

279
00:12:23,460 --> 00:12:27,839
because the parser is incorrectly

280
00:12:25,440 --> 00:12:29,100
parting certificates tensions with which

281
00:12:27,839 --> 00:12:32,820
means in the<font color="#CCCCCC"> end you have some</font>

282
00:12:29,100 --> 00:12:34,560
extensions<font color="#CCCCCC"> mishandled our speculation</font>

283
00:12:32,820 --> 00:12:37,170
here is that because<font color="#CCCCCC"> this bug given</font>

284
00:12:34,560 --> 00:12:39,630
concrete test cases<font color="#CCCCCC"> doesn't seem to</font>

285
00:12:37,170 --> 00:12:42,240
trigger a observable crash perhaps it

286
00:12:39,630 --> 00:12:45,180
would have been<font color="#E5E5E5"> hard for</font><font color="#CCCCCC"> pausing to kind</font>

287
00:12:42,240 --> 00:12:47,310
of catch this bug also inside the cell

288
00:12:45,180 --> 00:12:49,979
we found the overly restrictive time

289
00:12:47,310 --> 00:12:52,140
check recorded<font color="#E5E5E5"> on certificates the</font>

290
00:12:49,980 --> 00:12:55,200
validity periods are meant to<font color="#E5E5E5"> be</font>

291
00:12:52,140 --> 00:12:57,630
<font color="#CCCCCC">inclusive but we found a hidden coding</font>

292
00:12:55,200 --> 00:12:59,820
mystic in the<font color="#CCCCCC"> functions that does</font>

293
00:12:57,630 --> 00:13:02,040
<font color="#CCCCCC">daytime</font><font color="#E5E5E5"> checking so if you look at the</font>

294
00:12:59,820 --> 00:13:05,339
function<font color="#E5E5E5"> names they're showing correct</font>

295
00:13:02,040 --> 00:13:07,199
intention but if you look closer<font color="#CCCCCC"> the</font>

296
00:13:05,339 --> 00:13:09,420
<font color="#E5E5E5">negation of greater than</font><font color="#CCCCCC"> is less than or</font>

297
00:13:07,200 --> 00:13:11,250
<font color="#CCCCCC">equal to not less than and because of</font>

298
00:13:09,420 --> 00:13:13,199
that<font color="#CCCCCC"> sighs SSL turns out to be overly</font>

299
00:13:11,250 --> 00:13:15,839
restrictive<font color="#E5E5E5"> since they would be</font>

300
00:13:13,200 --> 00:13:18,480
incorrectly rejecting some valid<font color="#CCCCCC"> suits</font>

301
00:13:15,839 --> 00:13:20,570
<font color="#E5E5E5">because this is a specific boundary case</font>

302
00:13:18,480 --> 00:13:23,250
among<font color="#E5E5E5"> a large number of</font><font color="#CCCCCC"> possible values</font>

303
00:13:20,570 --> 00:13:25,709
<font color="#CCCCCC">perhaps it</font><font color="#E5E5E5"> would be difficult for</font>

304
00:13:23,250 --> 00:13:28,110
unguided passing to perhaps<font color="#E5E5E5"> hit this</font>

305
00:13:25,709 --> 00:13:30,060
part one

306
00:13:28,110 --> 00:13:32,670
<font color="#CCCCCC">for discussion that we have is</font><font color="#E5E5E5"> regarding</font>

307
00:13:30,060 --> 00:13:35,819
the<font color="#CCCCCC"> puddling constraint</font><font color="#E5E5E5"> in</font><font color="#CCCCCC"> size of zero</font>

308
00:13:32,670 --> 00:13:38,189
<font color="#E5E5E5">and polar</font><font color="#CCCCCC"> so putting's constraint is a</font>

309
00:13:35,820 --> 00:13:41,579
part<font color="#E5E5E5"> of the basic constraint extension</font>

310
00:13:38,190 --> 00:13:43,620
it is used by<font color="#CCCCCC"> upper-level issuing</font><font color="#E5E5E5"> CAS to</font>

311
00:13:41,579 --> 00:13:45,510
restrict the<font color="#CCCCCC"> length of a chain of</font>

312
00:13:43,620 --> 00:13:48,959
certificate<font color="#E5E5E5"> that you can</font><font color="#CCCCCC"> construct from</font>

313
00:13:45,510 --> 00:13:51,450
<font color="#E5E5E5">here on now in the previous work it has</font>

314
00:13:48,959 --> 00:13:53,729
been<font color="#E5E5E5"> reported that both</font><font color="#CCCCCC"> size</font><font color="#E5E5E5"> SL and</font>

315
00:13:51,450 --> 00:13:55,740
<font color="#CCCCCC">polarization</font><font color="#E5E5E5"> are incorrectly rejecting</font>

316
00:13:53,730 --> 00:13:59,490
<font color="#CCCCCC">such regarding some corner cases</font><font color="#E5E5E5"> of</font>

317
00:13:55,740 --> 00:14:02,250
checking<font color="#E5E5E5"> puzzling</font><font color="#CCCCCC"> coloring however our</font>

318
00:13:59,490 --> 00:14:04,589
findings suggest<font color="#CCCCCC"> that both</font><font color="#E5E5E5"> is SL and</font>

319
00:14:02,250 --> 00:14:06,240
polar system<font color="#CCCCCC"> along with wool versus oh</font>

320
00:14:04,589 --> 00:14:09,240
and crop<font color="#CCCCCC"> against or so they do not check</font>

321
00:14:06,240 --> 00:14:10,320
<font color="#CCCCCC">path length constraint at all so it</font>

322
00:14:09,240 --> 00:14:13,019
cannot<font color="#E5E5E5"> be the case that they are</font>

323
00:14:10,320 --> 00:14:16,079
incorrectly rejecting<font color="#E5E5E5"> suit</font><font color="#CCCCCC"> due to this</font>

324
00:14:13,019 --> 00:14:19,200
reason<font color="#E5E5E5"> our speculation here would be</font>

325
00:14:16,079 --> 00:14:22,109
perhaps<font color="#E5E5E5"> the first testing cases that</font>

326
00:14:19,200 --> 00:14:24,540
they<font color="#E5E5E5"> generated and used to serve as</font>

327
00:14:22,110 --> 00:14:26,160
<font color="#CCCCCC">evidence for</font><font color="#E5E5E5"> this particular claim</font><font color="#CCCCCC"> also</font>

328
00:14:24,540 --> 00:14:28,680
<font color="#E5E5E5">happen to contain multiple other</font>

329
00:14:26,160 --> 00:14:30,779
problems<font color="#E5E5E5"> that triggered a rejection in</font>

330
00:14:28,680 --> 00:14:35,779
the<font color="#E5E5E5"> libraries</font><font color="#CCCCCC"> hence resulting in a small</font>

331
00:14:30,779 --> 00:14:38,300
inaccuracy<font color="#E5E5E5"> in the claim to summarize</font>

332
00:14:35,779 --> 00:14:40,380
x.509 certificate validation

333
00:14:38,300 --> 00:14:42,779
<font color="#E5E5E5">unfortunately in all the tested</font>

334
00:14:40,380 --> 00:14:46,260
libraries they awesome what<font color="#CCCCCC"> DVA from</font>

335
00:14:42,779 --> 00:14:48,930
actually<font color="#CCCCCC"> 50</font><font color="#E5E5E5"> to</font><font color="#CCCCCC"> 80 and app developers</font>

336
00:14:46,260 --> 00:14:52,230
might not know all these intricacies<font color="#E5E5E5"> all</font>

337
00:14:48,930 --> 00:14:54,660
these details<font color="#E5E5E5"> so</font><font color="#CCCCCC"> we propose a white box</font>

338
00:14:52,230 --> 00:14:56,490
<font color="#E5E5E5">approach for exposing these</font><font color="#CCCCCC"> non</font>

339
00:14:54,660 --> 00:14:59,910
<font color="#CCCCCC">compliance</font><font color="#E5E5E5"> and semantic level</font><font color="#CCCCCC"> kind of</font>

340
00:14:56,490 --> 00:15:01,740
problems<font color="#E5E5E5"> and our experiments turn out to</font>

341
00:14:59,910 --> 00:15:04,410
be<font color="#E5E5E5"> quite fruitful</font><font color="#CCCCCC"> we found numerous</font>

342
00:15:01,740 --> 00:15:08,850
<font color="#E5E5E5">problems</font><font color="#CCCCCC"> have them reported and many of</font>

343
00:15:04,410 --> 00:15:11,640
them got fixed<font color="#E5E5E5"> as a final</font><font color="#CCCCCC"> takeaway my</font>

344
00:15:08,850 --> 00:15:13,949
advice<font color="#CCCCCC"> to app developers would be to</font>

345
00:15:11,640 --> 00:15:15,839
upgrade<font color="#CCCCCC"> try to upgrade</font><font color="#E5E5E5"> to newer</font><font color="#CCCCCC"> versions</font>

346
00:15:13,949 --> 00:15:18,029
of<font color="#E5E5E5"> the</font><font color="#CCCCCC"> TS libraries</font><font color="#E5E5E5"> that you are using</font>

347
00:15:15,839 --> 00:15:20,640
and I'm pretty<font color="#CCCCCC"> sure I'm not the first</font>

348
00:15:18,029 --> 00:15:22,410
<font color="#E5E5E5">one to say this many different people</font>

349
00:15:20,640 --> 00:15:25,410
have been talking<font color="#E5E5E5"> about this from</font>

350
00:15:22,410 --> 00:15:29,219
<font color="#CCCCCC">different</font><font color="#E5E5E5"> perspective so looking from</font>

351
00:15:25,410 --> 00:15:31,740
<font color="#E5E5E5">the context of certificate validation</font>

352
00:15:29,220 --> 00:15:33,410
I think newer versions of<font color="#CCCCCC"> TS libraries</font>

353
00:15:31,740 --> 00:15:36,329
generally they have<font color="#E5E5E5"> more bug fixes</font>

354
00:15:33,410 --> 00:15:39,120
<font color="#E5E5E5">better capability of handling</font><font color="#CCCCCC"> complex</font>

355
00:15:36,329 --> 00:15:41,160
inputs<font color="#E5E5E5"> such as extensions and generally</font>

356
00:15:39,120 --> 00:15:44,339
they also have a more<font color="#CCCCCC"> rigorous</font>

357
00:15:41,160 --> 00:15:46,199
certificate validation logic<font color="#E5E5E5"> and with</font>

358
00:15:44,339 --> 00:15:47,639
that I'll end my talk and I'll be more

359
00:15:46,199 --> 00:16:02,189
than<font color="#E5E5E5"> happy</font><font color="#CCCCCC"> to take questions from the</font>

360
00:15:47,639 --> 00:16:03,930
<font color="#CCCCCC">audience thank</font><font color="#E5E5E5"> you hello I'm Thomas</font>

361
00:16:02,189 --> 00:16:07,410
Costa<font color="#CCCCCC"> from Qualcomm thank you for the</font>

362
00:16:03,930 --> 00:16:10,109
talk<font color="#CCCCCC"> I have a question</font><font color="#E5E5E5"> about the the</font>

363
00:16:07,410 --> 00:16:14,519
<font color="#E5E5E5">part where you compare the equivalence</font>

364
00:16:10,110 --> 00:16:16,589
of constraints<font color="#CCCCCC"> I was wondering if I</font>

365
00:16:14,519 --> 00:16:19,860
understand correctly you would execute

366
00:16:16,589 --> 00:16:22,529
<font color="#E5E5E5">multiple implementations of certain</font>

367
00:16:19,860 --> 00:16:25,500
library of you know certain

368
00:16:22,529 --> 00:16:28,230
functionality<font color="#E5E5E5"> using symbolic execution</font>

369
00:16:25,500 --> 00:16:30,269
<font color="#CCCCCC">right but then to compare the</font>

370
00:16:28,230 --> 00:16:32,579
<font color="#CCCCCC">equivalence you would need to know sort</font>

371
00:16:30,269 --> 00:16:35,639
<font color="#E5E5E5">of like which paths you compare in each</font>

372
00:16:32,579 --> 00:16:38,939
of<font color="#CCCCCC"> these</font><font color="#E5E5E5"> libraries</font><font color="#CCCCCC"> right</font><font color="#E5E5E5"> right so I</font>

373
00:16:35,639 --> 00:16:40,740
<font color="#CCCCCC">think so first of all for each libraries</font>

374
00:16:38,939 --> 00:16:43,199
you essentially extracted<font color="#E5E5E5"> path</font>

375
00:16:40,740 --> 00:16:46,170
constraints that are kind<font color="#E5E5E5"> of describing</font>

376
00:16:43,199 --> 00:16:49,139
the two universes you know accepting and

377
00:16:46,170 --> 00:16:52,649
rejecting and as long<font color="#CCCCCC"> as you keep the</font>

378
00:16:49,139 --> 00:16:54,930
symbolic variables<font color="#E5E5E5"> kind of of the same</font>

379
00:16:52,649 --> 00:16:59,310
name then you can rather easily<font color="#E5E5E5"> compare</font>

380
00:16:54,930 --> 00:17:01,229
<font color="#CCCCCC">the two of them so are you asking the</font>

381
00:16:59,310 --> 00:17:02,880
problem of translating<font color="#E5E5E5"> one path</font>

382
00:17:01,230 --> 00:17:05,400
constraint<font color="#E5E5E5"> from one library</font><font color="#CCCCCC"> to another</font>

383
00:17:02,880 --> 00:17:07,619
<font color="#CCCCCC">like</font><font color="#E5E5E5"> yes exactly</font><font color="#CCCCCC"> right so</font><font color="#E5E5E5"> that's the</font>

384
00:17:05,400 --> 00:17:09,600
kind of also<font color="#E5E5E5"> the beauty of doing this at</font>

385
00:17:07,619 --> 00:17:11,399
the symbolic level<font color="#E5E5E5"> so as long</font><font color="#CCCCCC"> as you</font>

386
00:17:09,599 --> 00:17:13,889
have the symbolic variables of the same

387
00:17:11,400 --> 00:17:16,829
name then<font color="#E5E5E5"> they are the same variable to</font>

388
00:17:13,890 --> 00:17:19,230
a say SMT solver<font color="#E5E5E5"> so it's you don't</font>

389
00:17:16,829 --> 00:17:21,569
<font color="#CCCCCC">really have this translation problem or</font>

390
00:17:19,230 --> 00:17:23,640
ontological problem<font color="#E5E5E5"> between different</font>

391
00:17:21,569 --> 00:17:26,280
implementations because the variables

392
00:17:23,640 --> 00:17:29,549
that<font color="#CCCCCC"> we have we gave the name</font><font color="#E5E5E5"> to them we</font>

393
00:17:26,280 --> 00:17:31,918
are<font color="#E5E5E5"> not looking at the code variables we</font>

394
00:17:29,549 --> 00:17:34,500
have a variable<font color="#E5E5E5"> that we named which</font>

395
00:17:31,919 --> 00:17:37,500
correspond to some certificate fields

396
00:17:34,500 --> 00:17:40,200
and extensions that<font color="#CCCCCC"> we know of and</font><font color="#E5E5E5"> the</font>

397
00:17:37,500 --> 00:17:44,190
two of<font color="#E5E5E5"> them would match up thank you</font>

398
00:17:40,200 --> 00:17:46,440
<font color="#CCCCCC">very</font><font color="#E5E5E5"> much thank you yeah</font><font color="#CCCCCC"> I</font><font color="#E5E5E5"> Philip</font><font color="#CCCCCC"> your</font>

399
00:17:44,190 --> 00:17:48,960
<font color="#CCCCCC">honor with</font><font color="#E5E5E5"> a</font><font color="#CCCCCC"> PFL thank you for your talk</font>

400
00:17:46,440 --> 00:17:52,409
<font color="#CCCCCC">can you elaborate a little bit more on</font>

401
00:17:48,960 --> 00:17:54,220
<font color="#E5E5E5">how</font><font color="#CCCCCC"> you came to</font><font color="#E5E5E5"> how you selected the</font>

402
00:17:52,409 --> 00:17:57,100
libraries<font color="#E5E5E5"> for your analysis</font>

403
00:17:54,220 --> 00:18:00,130
as you did and for<font color="#CCCCCC"> example</font><font color="#E5E5E5"> I missed like</font>

404
00:17:57,100 --> 00:18:03,549
libraries like<font color="#CCCCCC"> OpenSSL and so on</font><font color="#E5E5E5"> right</font>

405
00:18:00,130 --> 00:18:07,030
so that's a very<font color="#E5E5E5"> good question</font><font color="#CCCCCC"> so we</font>

406
00:18:03,549 --> 00:18:09,668
started looking<font color="#E5E5E5"> at small implementations</font>

407
00:18:07,030 --> 00:18:12,668
<font color="#CCCCCC">because they are</font><font color="#E5E5E5"> useful and they also</font>

408
00:18:09,669 --> 00:18:15,510
easier to<font color="#E5E5E5"> analyze</font><font color="#CCCCCC"> to be honest</font><font color="#E5E5E5"> and then</font>

409
00:18:12,669 --> 00:18:19,270
<font color="#CCCCCC">due</font><font color="#E5E5E5"> to obviously their lines</font>

410
00:18:15,510 --> 00:18:22,510
<font color="#CCCCCC">whee-hee we got our story and we kind</font><font color="#E5E5E5"> of</font>

411
00:18:19,270 --> 00:18:24,700
decided to do the<font color="#E5E5E5"> small between</font>

412
00:18:22,510 --> 00:18:26,500
libraries<font color="#CCCCCC"> and surprisingly there are</font>

413
00:18:24,700 --> 00:18:28,419
actually new libraries that<font color="#CCCCCC"> are still</font>

414
00:18:26,500 --> 00:18:30,970
being<font color="#E5E5E5"> made so I think one week before</font>

415
00:18:28,419 --> 00:18:32,980
the<font color="#CCCCCC"> Oakland</font><font color="#E5E5E5"> deadline we found a new you</font>

416
00:18:30,970 --> 00:18:34,480
<font color="#E5E5E5">know small foreign libraries that's</font>

417
00:18:32,980 --> 00:18:37,240
being<font color="#E5E5E5"> made and</font><font color="#CCCCCC"> people</font><font color="#E5E5E5"> actually using</font>

418
00:18:34,480 --> 00:18:39,760
<font color="#E5E5E5">them so it turns</font><font color="#CCCCCC"> out</font><font color="#E5E5E5"> to be quite</font><font color="#CCCCCC"> ok for</font>

419
00:18:37,240 --> 00:18:41,789
<font color="#E5E5E5">us to analyze this and and I</font><font color="#CCCCCC"> think it's</font>

420
00:18:39,760 --> 00:18:44,590
useful<font color="#CCCCCC"> and speaking of the baker</font>

421
00:18:41,789 --> 00:18:48,309
<font color="#E5E5E5">libraries we are actually actively</font>

422
00:18:44,590 --> 00:18:50,789
working on those<font color="#CCCCCC"> open SSL</font><font color="#E5E5E5"> NSS and canoe</font>

423
00:18:48,309 --> 00:18:53,530
TRS<font color="#E5E5E5"> and also some other possible</font>

424
00:18:50,789 --> 00:18:56,230
implementations<font color="#CCCCCC"> a.x organizer is also</font>

425
00:18:53,530 --> 00:18:57,490
being using perhaps<font color="#CCCCCC"> IPSec</font><font color="#E5E5E5"> i ke those</font>

426
00:18:56,230 --> 00:19:00,549
kind of scenarios we're also looking

427
00:18:57,490 --> 00:19:04,770
<font color="#E5E5E5">into that so we are kind of working on</font>

428
00:19:00,549 --> 00:19:08,168
<font color="#CCCCCC">follow-up work ok</font><font color="#E5E5E5"> thank you thank you</font>

429
00:19:04,770 --> 00:19:10,418
<font color="#E5E5E5">hey you</font><font color="#CCCCCC"> SML ski university Baku ma I</font>

430
00:19:08,169 --> 00:19:14,200
would like to ask so what would<font color="#E5E5E5"> need to</font>

431
00:19:10,419 --> 00:19:16,750
be done to use this<font color="#E5E5E5"> approach</font><font color="#CCCCCC"> to verify</font>

432
00:19:14,200 --> 00:19:23,620
<font color="#E5E5E5">TLS implementations not only certificate</font>

433
00:19:16,750 --> 00:19:26,110
<font color="#CCCCCC">our think I think here we're looking at</font>

434
00:19:23,620 --> 00:19:29,500
<font color="#CCCCCC">a</font><font color="#E5E5E5"> different problem so we are focusing</font>

435
00:19:26,110 --> 00:19:33,070
on<font color="#E5E5E5"> kind of the semantics</font><font color="#CCCCCC"> less of</font>

436
00:19:29,500 --> 00:19:34,690
verifying or validating certificate<font color="#CCCCCC"> it</font>

437
00:19:33,070 --> 00:19:36,700
doesn't really have a like a back and

438
00:19:34,690 --> 00:19:39,549
forth<font color="#E5E5E5"> different messages exchanged and</font>

439
00:19:36,700 --> 00:19:42,280
it's also not like<font color="#E5E5E5"> in</font><font color="#CCCCCC"> ers</font><font color="#E5E5E5"> you have a</font>

440
00:19:39,549 --> 00:19:45,370
somewhat<font color="#E5E5E5"> or rather complicated actually</font>

441
00:19:42,280 --> 00:19:47,500
<font color="#CCCCCC">say machine</font><font color="#E5E5E5"> and you don't also</font><font color="#CCCCCC"> have a</font>

442
00:19:45,370 --> 00:19:49,059
lot of<font color="#E5E5E5"> kind of cipher</font><font color="#CCCCCC"> suites and</font>

443
00:19:47,500 --> 00:19:51,970
<font color="#CCCCCC">handshake messages to choose from</font>

444
00:19:49,059 --> 00:19:53,350
that's so I think in<font color="#CCCCCC"> here steps one of</font>

445
00:19:51,970 --> 00:19:55,360
the most difficult<font color="#E5E5E5"> things</font><font color="#CCCCCC"> but</font><font color="#E5E5E5"> here we</font>

446
00:19:53,350 --> 00:19:57,610
don't really have that<font color="#E5E5E5"> so it's actually</font>

447
00:19:55,360 --> 00:20:00,490
given the input what kind<font color="#E5E5E5"> of scrutiny</font>

448
00:19:57,610 --> 00:20:02,649
<font color="#E5E5E5">the library imposes on before deciding</font>

449
00:20:00,490 --> 00:20:04,230
to accept it<font color="#E5E5E5"> so I think these two are</font>

450
00:20:02,649 --> 00:20:05,550
<font color="#E5E5E5">quite different</font>

451
00:20:04,230 --> 00:20:09,570
thank you

452
00:20:05,550 --> 00:20:11,760
and I still can I steal<font color="#E5E5E5"> five seconds</font><font color="#CCCCCC"> I</font>

453
00:20:09,570 --> 00:20:13,830
think I will<font color="#E5E5E5"> also like to share with you</font>

454
00:20:11,760 --> 00:20:15,840
the name<font color="#CCCCCC"> of our paper so I talked to</font>

455
00:20:13,830 --> 00:20:17,250
<font color="#CCCCCC">some other</font><font color="#E5E5E5"> researchers the other day and</font>

456
00:20:15,840 --> 00:20:19,139
they were<font color="#CCCCCC"> saying that</font><font color="#E5E5E5"> oh because you are</font>

457
00:20:17,250 --> 00:20:21,840
<font color="#CCCCCC">mixing concrete values with</font><font color="#E5E5E5"> symbolic</font>

458
00:20:19,140 --> 00:20:23,760
values<font color="#E5E5E5"> isn't it</font><font color="#CCCCCC"> Khan colic</font><font color="#E5E5E5"> and my answer</font>

459
00:20:21,840 --> 00:20:26,520
<font color="#CCCCCC">to</font><font color="#E5E5E5"> them were simple was simple actually</font>

460
00:20:23,760 --> 00:20:28,200
<font color="#CCCCCC">because if I named my paper concert it</font>

461
00:20:26,520 --> 00:20:32,360
would be rather confusing<font color="#E5E5E5"> and weird so</font>

462
00:20:28,200 --> 00:20:32,360
we kept<font color="#E5E5E5"> the name same set thank</font>

463
00:20:32,690 --> 00:20:36,519
[Applause]

