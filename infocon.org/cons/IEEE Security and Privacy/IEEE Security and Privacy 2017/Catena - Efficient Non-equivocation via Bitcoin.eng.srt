1
00:00:09,230 --> 00:00:14,750
so hi<font color="#E5E5E5"> everybody my name is</font><font color="#CCCCCC"> Ellie and</font>

2
00:00:12,219 --> 00:00:17,180
today I'll be<font color="#E5E5E5"> talking about</font><font color="#CCCCCC"> Katina</font><font color="#E5E5E5"> which</font>

3
00:00:14,750 --> 00:00:18,790
is an efficient<font color="#E5E5E5"> verify non equivocation</font>

4
00:00:17,180 --> 00:00:20,930
scheme<font color="#E5E5E5"> built on top of Bitcoin and</font>

5
00:00:18,790 --> 00:00:23,090
<font color="#E5E5E5">Katina is actually a very simple idea</font>

6
00:00:20,930 --> 00:00:25,210
<font color="#CCCCCC">but it has surprisingly powerful</font>

7
00:00:23,090 --> 00:00:27,590
applications<font color="#E5E5E5"> like public key directories</font>

8
00:00:25,210 --> 00:00:29,869
<font color="#CCCCCC">so let</font><font color="#E5E5E5"> me start by</font><font color="#CCCCCC"> explaining the title</font>

9
00:00:27,590 --> 00:00:32,329
<font color="#CCCCCC">so what is this</font><font color="#E5E5E5"> non equivocation thing</font>

10
00:00:29,869 --> 00:00:34,100
<font color="#E5E5E5">and to</font><font color="#CCCCCC"> explain this or</font><font color="#E5E5E5"> use a public key</font>

11
00:00:32,329 --> 00:00:36,200
directory as an example<font color="#E5E5E5"> and this</font>

12
00:00:34,100 --> 00:00:39,469
directory<font color="#E5E5E5"> every time period I would</font>

13
00:00:36,200 --> 00:00:41,840
publish a<font color="#E5E5E5"> digest</font><font color="#CCCCCC"> si of the directory and</font>

14
00:00:39,469 --> 00:00:42,500
<font color="#CCCCCC">that</font><font color="#E5E5E5"> digest is simply a</font><font color="#CCCCCC"> Merkel</font><font color="#E5E5E5"> three</font>

15
00:00:41,840 --> 00:00:45,620
hash

16
00:00:42,500 --> 00:00:47,600
so what<font color="#E5E5E5"> non equivocation says is</font><font color="#CCCCCC"> that at</font>

17
00:00:45,620 --> 00:00:51,019
every<font color="#E5E5E5"> time period</font><font color="#CCCCCC"> I the server only</font>

18
00:00:47,600 --> 00:00:53,480
publishes a single unique digest<font color="#E5E5E5"> si so</font>

19
00:00:51,020 --> 00:00:55,910
for<font color="#E5E5E5"> instance at time one Baba now let's</font>

20
00:00:53,480 --> 00:00:58,129
see the same directory<font color="#E5E5E5"> s1 and when the</font>

21
00:00:55,910 --> 00:01:00,500
directory is updated at time<font color="#CCCCCC"> Atlas and</font>

22
00:00:58,130 --> 00:01:03,350
Bob and<font color="#E5E5E5"> others will see the same history</font>

23
00:01:00,500 --> 00:01:05,479
of digests s1 and s2<font color="#E5E5E5"> so this is good</font>

24
00:01:03,350 --> 00:01:08,659
because<font color="#CCCCCC"> Allison Bob can monitor their</font>

25
00:01:05,479 --> 00:01:10,970
own public keys and detect impersonation

26
00:01:08,659 --> 00:01:15,289
<font color="#E5E5E5">so in this case Alice checks she's okay</font>

27
00:01:10,970 --> 00:01:16,729
Bob checks he's okay and<font color="#E5E5E5"> what this means</font>

28
00:01:15,289 --> 00:01:18,950
<font color="#E5E5E5">is that if a server wants to impersonate</font>

29
00:01:16,729 --> 00:01:21,079
Alice or Bob<font color="#E5E5E5"> it has to do so in plain</font>

30
00:01:18,950 --> 00:01:23,659
sight<font color="#E5E5E5"> so</font><font color="#CCCCCC"> for instance here the server</font>

31
00:01:21,079 --> 00:01:26,178
inserted a fake key for<font color="#E5E5E5"> Alice the trick</font>

32
00:01:23,659 --> 00:01:28,219
Bob<font color="#E5E5E5"> into using it but because of non</font>

33
00:01:26,179 --> 00:01:30,770
equivocation Alice and Bob see the same

34
00:01:28,219 --> 00:01:32,809
directory and Alice can detect this<font color="#E5E5E5"> fake</font>

35
00:01:30,770 --> 00:01:34,880
key this<font color="#E5E5E5"> is not to say</font><font color="#CCCCCC"> that</font><font color="#E5E5E5"> their</font>

36
00:01:32,810 --> 00:01:36,950
secrecy<font color="#E5E5E5"> is preserved because Bob could</font>

37
00:01:34,880 --> 00:01:38,869
use<font color="#E5E5E5"> that key anyway before Alice have a</font>

38
00:01:36,950 --> 00:01:41,630
chance to detect it and yell<font color="#CCCCCC"> to the</font>

39
00:01:38,869 --> 00:01:43,789
<font color="#E5E5E5">world that she's been impersonated but</font>

40
00:01:41,630 --> 00:01:47,179
this is to say that<font color="#CCCCCC"> such</font><font color="#E5E5E5"> attacks don't</font>

41
00:01:43,789 --> 00:01:49,189
<font color="#E5E5E5">go undetected which is a step forward</font><font color="#CCCCCC"> so</font>

42
00:01:47,179 --> 00:01:51,200
to summarize non equivocation just

43
00:01:49,189 --> 00:01:53,538
simply means saying the same thing to

44
00:01:51,200 --> 00:01:55,729
all<font color="#CCCCCC"> of the</font><font color="#E5E5E5"> people even if the thing</font>

45
00:01:53,539 --> 00:01:58,219
you're saying is incorrect at the

46
00:01:55,729 --> 00:01:59,810
application layer like this<font color="#E5E5E5"> statement</font><font color="#CCCCCC"> 2</font>

47
00:01:58,219 --> 00:02:01,339
<font color="#E5E5E5">here where Alice was impersonated at</font>

48
00:01:59,810 --> 00:02:04,520
least we can detect such incorrect

49
00:02:01,340 --> 00:02:06,380
statements<font color="#CCCCCC"> now what is equivocation well</font>

50
00:02:04,520 --> 00:02:08,899
at time<font color="#CCCCCC"> two the malicious server</font><font color="#E5E5E5"> could</font>

51
00:02:06,380 --> 00:02:11,720
simply publish to<font color="#CCCCCC"> digests s 2 and s 2</font>

52
00:02:08,899 --> 00:02:14,150
<font color="#CCCCCC">Prime so when s two Alice's key is left</font>

53
00:02:11,720 --> 00:02:16,940
<font color="#E5E5E5">intact but Bob is impersonated in s 2</font>

54
00:02:14,150 --> 00:02:18,560
<font color="#CCCCCC">Prime</font><font color="#E5E5E5"> Bob's key is left intact but Alice</font>

55
00:02:16,940 --> 00:02:20,959
<font color="#E5E5E5">is impersonated</font>

56
00:02:18,560 --> 00:02:22,819
so when<font color="#E5E5E5"> Alice checks in her view</font>

57
00:02:20,959 --> 00:02:25,010
<font color="#E5E5E5">everything seems fine her key is the</font>

58
00:02:22,819 --> 00:02:26,390
same<font color="#E5E5E5"> however Bob is impersonated there</font>

59
00:02:25,010 --> 00:02:29,149
and Alice will use a<font color="#E5E5E5"> fake</font>

60
00:02:26,390 --> 00:02:30,890
<font color="#E5E5E5">Keifer Bob when Bob checks in his view</font>

61
00:02:29,150 --> 00:02:32,900
<font color="#E5E5E5">everything seems</font><font color="#CCCCCC"> fine but Alice</font>

62
00:02:30,890 --> 00:02:35,660
<font color="#CCCCCC">impersonated and Bob</font><font color="#E5E5E5"> will use a</font><font color="#CCCCCC"> fake key</font>

63
00:02:32,900 --> 00:02:37,520
for Alice<font color="#CCCCCC"> so as a result and then in the</font>

64
00:02:35,660 --> 00:02:39,620
<font color="#E5E5E5">middle attack is possible and this is</font>

65
00:02:37,520 --> 00:02:41,540
<font color="#E5E5E5">kind of undetectable Alice and Bob don't</font>

66
00:02:39,620 --> 00:02:43,370
have a way<font color="#E5E5E5"> to check that</font><font color="#CCCCCC"> they are seeing</font>

67
00:02:41,540 --> 00:02:45,260
the same<font color="#E5E5E5"> directory for that</font><font color="#CCCCCC"> they</font><font color="#E5E5E5"> would</font>

68
00:02:43,370 --> 00:02:46,580
need<font color="#E5E5E5"> a secure Channel but that's what</font>

69
00:02:45,260 --> 00:02:47,810
they're<font color="#E5E5E5"> using the</font><font color="#CCCCCC"> public</font><font color="#E5E5E5"> key directory</font>

70
00:02:46,580 --> 00:02:50,060
for in the<font color="#E5E5E5"> first place to establish</font>

71
00:02:47,810 --> 00:02:51,350
<font color="#E5E5E5">that's with your</font><font color="#CCCCCC"> channel</font><font color="#E5E5E5"> so this is kind</font>

72
00:02:50,060 --> 00:02:53,030
of<font color="#E5E5E5"> a bummer if</font><font color="#CCCCCC"> you say different</font><font color="#E5E5E5"> things</font>

73
00:02:51,350 --> 00:02:55,130
<font color="#E5E5E5">to different people</font><font color="#CCCCCC"> in</font><font color="#E5E5E5"> a public</font><font color="#CCCCCC"> key</font>

74
00:02:53,030 --> 00:02:57,830
directory you can equivocate and you can

75
00:02:55,130 --> 00:02:59,930
man in the middle your users<font color="#CCCCCC"> so we'd</font>

76
00:02:57,830 --> 00:03:01,970
like<font color="#E5E5E5"> to</font><font color="#CCCCCC"> solve this and this comes up a</font>

77
00:02:59,930 --> 00:03:03,830
lot in public<font color="#E5E5E5"> key distributions for</font><font color="#CCCCCC"> HTTP</font>

78
00:03:01,970 --> 00:03:05,480
<font color="#CCCCCC">secure messaging</font><font color="#E5E5E5"> and pretty much any</font>

79
00:03:03,830 --> 00:03:07,910
work that<font color="#CCCCCC"> says we assume a PKI</font>

80
00:03:05,480 --> 00:03:10,220
<font color="#E5E5E5">and it also comes up in tor directory</font>

81
00:03:07,910 --> 00:03:11,900
servers which can equivocate to victims

82
00:03:10,220 --> 00:03:15,019
about the set of onion relays and the

83
00:03:11,900 --> 00:03:17,180
anonymize them and it comes up in

84
00:03:15,019 --> 00:03:19,070
software transparency schemes<font color="#CCCCCC"> where a</font>

85
00:03:17,180 --> 00:03:21,290
<font color="#E5E5E5">software</font><font color="#CCCCCC"> vendor like Bitcoin itself</font>

86
00:03:19,070 --> 00:03:22,579
would like to make<font color="#CCCCCC"> sure a no malicious</font>

87
00:03:21,290 --> 00:03:23,269
binaries and<font color="#E5E5E5"> hits name have been</font>

88
00:03:22,580 --> 00:03:24,640
<font color="#E5E5E5">published</font>

89
00:03:23,269 --> 00:03:26,420
just like in public<font color="#E5E5E5"> key distribution</font>

90
00:03:24,640 --> 00:03:28,220
<font color="#E5E5E5">Bitcoin needs to see the same</font>

91
00:03:26,420 --> 00:03:31,640
transparency log as all of the people

92
00:03:28,220 --> 00:03:33,620
<font color="#E5E5E5">downloading Bitcoin so what are</font><font color="#CCCCCC"> our</font>

93
00:03:31,640 --> 00:03:36,140
<font color="#E5E5E5">contributions so we built this Bitcoin</font>

94
00:03:33,620 --> 00:03:38,570
based append-only<font color="#CCCCCC"> lured that is as hard</font>

95
00:03:36,140 --> 00:03:40,880
to<font color="#E5E5E5"> forecast the Bitcoin blockchain but</font>

96
00:03:38,570 --> 00:03:42,320
<font color="#E5E5E5">importantly it's efficiently verifiable</font>

97
00:03:40,880 --> 00:03:44,959
you don't have to download full blocks

98
00:03:42,320 --> 00:03:47,090
<font color="#CCCCCC">the verifier log in particular you will</font>

99
00:03:44,959 --> 00:03:49,459
need to<font color="#E5E5E5"> download</font><font color="#CCCCCC"> 600 bytes per statement</font>

100
00:03:47,090 --> 00:03:51,320
<font color="#E5E5E5">a statement is something like a Merkel</font>

101
00:03:49,459 --> 00:03:53,269
tree hash<font color="#E5E5E5"> a publicly directory digest</font>

102
00:03:51,320 --> 00:03:54,680
<font color="#E5E5E5">and you only need to download 80 bytes</font>

103
00:03:53,269 --> 00:03:57,680
for<font color="#CCCCCC"> a Bitcoin block you don't need to</font>

104
00:03:54,680 --> 00:03:59,180
download<font color="#E5E5E5"> the whole block</font><font color="#CCCCCC"> and we</font>

105
00:03:57,680 --> 00:04:02,090
implemented<font color="#CCCCCC"> this in</font><font color="#E5E5E5"> Java and our code is</font>

106
00:03:59,180 --> 00:04:04,400
open<font color="#CCCCCC"> source so the</font><font color="#E5E5E5"> outline for the talk</font>

107
00:04:02,090 --> 00:04:05,930
will<font color="#CCCCCC"> be first let's go over Bitcoin and</font>

108
00:04:04,400 --> 00:04:08,209
explain how Bitcoin transactions work

109
00:04:05,930 --> 00:04:09,440
and how Bitcoin preventible spends this

110
00:04:08,209 --> 00:04:11,750
<font color="#E5E5E5">is super important to actually</font>

111
00:04:09,440 --> 00:04:14,359
understand how<font color="#CCCCCC"> Catina works then I'll go</font>

112
00:04:11,750 --> 00:04:18,260
<font color="#CCCCCC">over previous work then I'll go</font><font color="#E5E5E5"> over our</font>

113
00:04:14,360 --> 00:04:19,940
design<font color="#CCCCCC"> and how</font><font color="#E5E5E5"> to scale it okay so this</font>

114
00:04:18,260 --> 00:04:22,460
thing<font color="#E5E5E5"> comes</font><font color="#CCCCCC"> up a lot</font><font color="#E5E5E5"> these</font><font color="#CCCCCC"> days what is</font>

115
00:04:19,940 --> 00:04:24,469
this<font color="#E5E5E5"> blockchain is just a hash</font><font color="#CCCCCC"> chain of</font>

116
00:04:22,460 --> 00:04:27,320
<font color="#E5E5E5">blocks block and contains a hash of</font>

117
00:04:24,470 --> 00:04:29,300
<font color="#E5E5E5">block and minus</font><font color="#CCCCCC"> 1 so each</font><font color="#E5E5E5"> block</font><font color="#CCCCCC"> has a</font>

118
00:04:27,320 --> 00:04:31,780
hash pointer to the previous block and

119
00:04:29,300 --> 00:04:33,950
the arrows indicate<font color="#E5E5E5"> hash pointers here</font>

120
00:04:31,780 --> 00:04:36,799
<font color="#CCCCCC">each block has a Merkle</font><font color="#E5E5E5"> tree of</font>

121
00:04:33,950 --> 00:04:39,110
transactions<font color="#E5E5E5"> and everybody agrees on</font>

122
00:04:36,800 --> 00:04:40,330
<font color="#CCCCCC">this hash chain of</font><font color="#E5E5E5"> blocks the a</font>

123
00:04:39,110 --> 00:04:42,430
<font color="#CCCCCC">proof-of-work</font><font color="#E5E5E5"> and</font>

124
00:04:40,330 --> 00:04:45,520
which I won't<font color="#E5E5E5"> talk about too much</font><font color="#CCCCCC"> but we</font>

125
00:04:42,430 --> 00:04:47,290
do assume that<font color="#E5E5E5"> it works so attacks like</font>

126
00:04:45,520 --> 00:04:49,479
the one Maria described are<font color="#E5E5E5"> problematic</font>

127
00:04:47,290 --> 00:04:51,810
<font color="#E5E5E5">and we do need</font><font color="#CCCCCC"> to fix those</font><font color="#E5E5E5"> in order for</font>

128
00:04:49,480 --> 00:04:54,460
our assumptions to be to be reasonable

129
00:04:51,810 --> 00:04:56,260
<font color="#CCCCCC">so let's talk about</font><font color="#E5E5E5"> Bitcoin transactions</font>

130
00:04:54,460 --> 00:04:57,640
they have two<font color="#E5E5E5"> purposes the first purpose</font>

131
00:04:56,260 --> 00:05:00,610
is to just mint coins

132
00:04:57,640 --> 00:05:02,620
so here transaction<font color="#E5E5E5"> a says hey look ugly</font>

133
00:05:00,610 --> 00:05:06,040
<font color="#E5E5E5">key Alice Alice with public key Alice</font>

134
00:05:02,620 --> 00:05:08,080
minted<font color="#E5E5E5"> for bitcoins and says that is it</font>

135
00:05:06,040 --> 00:05:09,940
has this<font color="#E5E5E5"> thing called a transaction</font>

136
00:05:08,080 --> 00:05:12,190
output that little circle over there<font color="#E5E5E5"> and</font>

137
00:05:09,940 --> 00:05:15,130
the output<font color="#E5E5E5"> just specifies the</font><font color="#CCCCCC"> number of</font>

138
00:05:12,190 --> 00:05:16,930
coins and who owns them<font color="#CCCCCC"> and the second</font>

139
00:05:15,130 --> 00:05:18,700
<font color="#E5E5E5">purpose</font><font color="#CCCCCC"> is to transfer these coins so</font>

140
00:05:16,930 --> 00:05:20,620
Alice might want to give<font color="#CCCCCC"> three</font><font color="#E5E5E5"> coins to</font>

141
00:05:18,700 --> 00:05:23,020
Bob and leave a fee to<font color="#E5E5E5"> the Bitcoin</font>

142
00:05:20,620 --> 00:05:24,670
<font color="#E5E5E5">miners who managed this blockchain and</font>

143
00:05:23,020 --> 00:05:26,770
<font color="#E5E5E5">for that Alice would create this</font>

144
00:05:24,670 --> 00:05:30,250
<font color="#E5E5E5">transaction be with another output that</font>

145
00:05:26,770 --> 00:05:32,680
says bkb has three bitcoins<font color="#E5E5E5"> so now the</font>

146
00:05:30,250 --> 00:05:34,570
<font color="#E5E5E5">question is how do how do we link this</font>

147
00:05:32,680 --> 00:05:36,340
transaction<font color="#E5E5E5"> to</font><font color="#CCCCCC"> the previous one we do</font>

148
00:05:34,570 --> 00:05:38,710
that via something<font color="#E5E5E5"> called a transaction</font>

149
00:05:36,340 --> 00:05:41,349
<font color="#E5E5E5">input the transaction input has a hash</font>

150
00:05:38,710 --> 00:05:44,320
pointer<font color="#CCCCCC"> the output being spent</font>

151
00:05:41,350 --> 00:05:46,350
so here transaction a is being referred

152
00:05:44,320 --> 00:05:49,360
to<font color="#E5E5E5"> by the input and transaction B and</font>

153
00:05:46,350 --> 00:05:51,100
more importantly transaction<font color="#E5E5E5"> bees import</font>

154
00:05:49,360 --> 00:05:53,650
<font color="#E5E5E5">has a signature that authorizes the</font>

155
00:05:51,100 --> 00:05:57,300
transfers the transfer<font color="#CCCCCC"> of coins from</font><font color="#E5E5E5"> TX</font>

156
00:05:53,650 --> 00:05:59,469
<font color="#E5E5E5">A's output to TX P is output so</font>

157
00:05:57,300 --> 00:06:01,300
<font color="#E5E5E5">furthermore what you can do in</font><font color="#CCCCCC"> Bitcoin</font>

158
00:05:59,470 --> 00:06:02,860
is you can embed data<font color="#E5E5E5"> in transactions so</font>

159
00:06:01,300 --> 00:06:05,260
we actually<font color="#E5E5E5"> leverage this to build a log</font>

160
00:06:02,860 --> 00:06:08,980
<font color="#E5E5E5">Alice can put up to 80 bytes in in that</font>

161
00:06:05,260 --> 00:06:10,690
transaction<font color="#E5E5E5"> exp</font><font color="#CCCCCC"> yeah so to summarize</font>

162
00:06:08,980 --> 00:06:12,430
<font color="#CCCCCC">here Alice</font><font color="#E5E5E5"> gave</font><font color="#CCCCCC"> Berkeley bitcoins</font>

163
00:06:10,690 --> 00:06:15,880
Bitcoin miners collected one Bitcoin<font color="#CCCCCC"> at</font>

164
00:06:12,430 --> 00:06:18,160
<font color="#CCCCCC">a</font><font color="#E5E5E5"> fee output specify coins and who only</font>

165
00:06:15,880 --> 00:06:19,960
<font color="#E5E5E5">those coins</font><font color="#CCCCCC"> at the public key inputs</font>

166
00:06:18,160 --> 00:06:22,720
have hash pointers<font color="#CCCCCC"> two outputs being</font>

167
00:06:19,960 --> 00:06:25,570
spent and specify a signature<font color="#E5E5E5"> under that</font>

168
00:06:22,720 --> 00:06:28,690
outputs public key<font color="#E5E5E5"> and this can keep</font>

169
00:06:25,570 --> 00:06:30,190
going<font color="#E5E5E5"> Bob can give Carol his bitcoins</font><font color="#CCCCCC"> he</font>

170
00:06:28,690 --> 00:06:32,950
can transfer to bitcoins<font color="#E5E5E5"> to Carol pay</font>

171
00:06:30,190 --> 00:06:35,469
one Bitcoin<font color="#CCCCCC"> to the</font><font color="#E5E5E5"> Bitcoin miners and so</font>

172
00:06:32,950 --> 00:06:37,000
on and so forth<font color="#E5E5E5"> and importantly what</font>

173
00:06:35,470 --> 00:06:40,090
<font color="#CCCCCC">Bitcoin actually guarantees is there</font>

174
00:06:37,000 --> 00:06:41,770
cannot be double<font color="#E5E5E5"> spent so here for</font>

175
00:06:40,090 --> 00:06:43,719
<font color="#E5E5E5">example</font><font color="#CCCCCC"> the way Bitcoin does that is by</font>

176
00:06:41,770 --> 00:06:45,760
<font color="#CCCCCC">maintaining this very simple invariant</font>

177
00:06:43,720 --> 00:06:47,860
<font color="#E5E5E5">it just says</font><font color="#CCCCCC"> that a transaction</font><font color="#E5E5E5"> output</font>

178
00:06:45,760 --> 00:06:50,200
<font color="#E5E5E5">can only be referred</font><font color="#CCCCCC"> to</font><font color="#E5E5E5"> by a single</font>

179
00:06:47,860 --> 00:06:52,170
<font color="#E5E5E5">transaction input so this</font><font color="#CCCCCC"> picture right</font>

180
00:06:50,200 --> 00:06:53,310
<font color="#E5E5E5">here simply cannot happen in</font>

181
00:06:52,170 --> 00:06:55,680
you cannot have two<font color="#CCCCCC"> different</font>

182
00:06:53,310 --> 00:06:57,780
transactions that have inputs pointing

183
00:06:55,680 --> 00:07:00,150
to the same output<font color="#CCCCCC"> Bitcoin doesn't allow</font>

184
00:06:57,780 --> 00:07:03,869
to do you do that Bitcoin miners prevent

185
00:07:00,150 --> 00:07:05,370
that from happening<font color="#CCCCCC"> so the</font><font color="#E5E5E5"> moral of the</font>

186
00:07:03,870 --> 00:07:07,290
story<font color="#E5E5E5"> here</font><font color="#CCCCCC"> why did I tell</font><font color="#E5E5E5"> you all of</font>

187
00:07:05,370 --> 00:07:08,550
this the<font color="#E5E5E5"> reason I</font><font color="#CCCCCC"> told you all this is</font>

188
00:07:07,290 --> 00:07:10,500
<font color="#CCCCCC">because I</font><font color="#E5E5E5"> want you guys</font><font color="#CCCCCC"> to</font><font color="#E5E5E5"> look at this</font>

189
00:07:08,550 --> 00:07:12,690
<font color="#E5E5E5">picture</font><font color="#CCCCCC"> and understand that</font><font color="#E5E5E5"> either</font><font color="#CCCCCC"> tx2</font>

190
00:07:10,500 --> 00:07:15,420
can<font color="#E5E5E5"> be in the blockchain or</font><font color="#CCCCCC"> txp</font><font color="#E5E5E5"> Prime</font>

191
00:07:12,690 --> 00:07:17,490
but not both<font color="#CCCCCC"> so when I first</font><font color="#E5E5E5"> realize</font>

192
00:07:15,420 --> 00:07:19,230
this<font color="#CCCCCC"> I thought</font><font color="#E5E5E5"> this was</font><font color="#CCCCCC"> really cool</font>

193
00:07:17,490 --> 00:07:20,790
because if we can put statements in

194
00:07:19,230 --> 00:07:23,640
these transactions we<font color="#CCCCCC"> can also</font>

195
00:07:20,790 --> 00:07:25,710
implicitly<font color="#E5E5E5"> prevent</font><font color="#CCCCCC"> equivocation</font><font color="#E5E5E5"> so now</font>

196
00:07:23,640 --> 00:07:27,690
we can<font color="#E5E5E5"> either have s2 or</font><font color="#CCCCCC"> s3</font><font color="#E5E5E5"> Prime but</font>

197
00:07:25,710 --> 00:07:29,370
not both<font color="#CCCCCC"> so this</font><font color="#E5E5E5"> is the key idea</font><font color="#CCCCCC"> behind</font>

198
00:07:27,690 --> 00:07:32,430
<font color="#CCCCCC">Catina and it's actually a</font><font color="#E5E5E5"> very simple</font>

199
00:07:29,370 --> 00:07:35,610
<font color="#CCCCCC">realization so okay</font><font color="#E5E5E5"> let's go over</font><font color="#CCCCCC"> a</font>

200
00:07:32,430 --> 00:07:37,590
previous<font color="#E5E5E5"> work now so the way previous</font>

201
00:07:35,610 --> 00:07:39,690
work builds a log<font color="#E5E5E5"> on top of Bitcoin is</font>

202
00:07:37,590 --> 00:07:40,979
<font color="#E5E5E5">by just embedding statements and</font>

203
00:07:39,690 --> 00:07:42,900
transactions<font color="#E5E5E5"> but they're kind of</font>

204
00:07:40,980 --> 00:07:44,970
unrestricted about how these

205
00:07:42,900 --> 00:07:46,650
transactions relate to one another<font color="#E5E5E5"> so as</font>

206
00:07:44,970 --> 00:07:48,870
a result<font color="#E5E5E5"> if I want to be certain that</font>

207
00:07:46,650 --> 00:07:50,489
there's no s3 Prime<font color="#E5E5E5"> and the blockchain</font><font color="#CCCCCC"> I</font>

208
00:07:48,870 --> 00:07:52,530
can't do any<font color="#CCCCCC"> better</font><font color="#E5E5E5"> than downloading</font>

209
00:07:50,490 --> 00:07:54,600
full blocks<font color="#E5E5E5"> to be sure that I</font><font color="#CCCCCC"> haven't</font>

210
00:07:52,530 --> 00:07:56,789
<font color="#CCCCCC">missed the</font><font color="#E5E5E5"> data</font><font color="#CCCCCC"> stream prime I could ask</font>

211
00:07:54,600 --> 00:07:59,940
a Bitcoin tears appear not to filter the

212
00:07:56,790 --> 00:08:01,830
block for me<font color="#E5E5E5"> but that node</font><font color="#CCCCCC"> My Luck or I</font>

213
00:07:59,940 --> 00:08:04,140
would<font color="#E5E5E5"> be vulnerable to</font><font color="#CCCCCC"> Sibyl attacks on</font>

214
00:08:01,830 --> 00:08:05,789
the Bitcoin peer-to-peer network<font color="#E5E5E5"> where a</font>

215
00:08:04,140 --> 00:08:08,460
bunch of malicious nodes are created

216
00:08:05,790 --> 00:08:11,400
<font color="#E5E5E5">that just lied to</font><font color="#CCCCCC"> me so this</font><font color="#E5E5E5"> is not not</font>

217
00:08:08,460 --> 00:08:13,229
<font color="#E5E5E5">not</font><font color="#CCCCCC"> very good for efficiency so our work</font>

218
00:08:11,400 --> 00:08:15,330
simply requires that<font color="#CCCCCC"> a new transaction</font>

219
00:08:13,229 --> 00:08:17,909
<font color="#CCCCCC">spends the previous one</font><font color="#E5E5E5"> so</font><font color="#CCCCCC"> the</font>

220
00:08:15,330 --> 00:08:19,560
simplicity tells us that there's there

221
00:08:17,910 --> 00:08:21,180
cannot be an inconsistent<font color="#CCCCCC"> statement</font>

222
00:08:19,560 --> 00:08:23,550
because it<font color="#E5E5E5"> would require a double</font><font color="#CCCCCC"> scrim</font>

223
00:08:21,180 --> 00:08:26,070
<font color="#E5E5E5">so basically the</font><font color="#CCCCCC"> difference is quite</font>

224
00:08:23,550 --> 00:08:28,640
simple it's<font color="#CCCCCC"> just this if I had one slide</font>

225
00:08:26,070 --> 00:08:33,659
for<font color="#E5E5E5"> the presentation this would be it</font>

226
00:08:28,640 --> 00:08:35,460
<font color="#CCCCCC">okay so let's talk about</font><font color="#E5E5E5"> the design in</font>

227
00:08:33,659 --> 00:08:37,140
more detail we have<font color="#E5E5E5"> this thing called</font><font color="#CCCCCC"> a</font>

228
00:08:35,460 --> 00:08:38,640
lock server so this can be<font color="#E5E5E5"> the public</font>

229
00:08:37,140 --> 00:08:42,630
key directory<font color="#CCCCCC"> that I talked about before</font>

230
00:08:38,640 --> 00:08:44,699
and it starts<font color="#E5E5E5"> with some bitcoins</font><font color="#CCCCCC"> and to</font>

231
00:08:42,630 --> 00:08:46,470
start<font color="#E5E5E5"> the log it issues something called</font>

232
00:08:44,700 --> 00:08:47,970
the Genesis transaction of the<font color="#E5E5E5"> log this</font>

233
00:08:46,470 --> 00:08:51,089
is the first<font color="#E5E5E5"> transaction in the log and</font>

234
00:08:47,970 --> 00:08:53,640
<font color="#E5E5E5">it's basically the logs public key and</font>

235
00:08:51,089 --> 00:08:55,830
the way it<font color="#E5E5E5"> does it is by</font><font color="#CCCCCC"> just sending</font>

236
00:08:53,640 --> 00:08:58,589
coins from itself<font color="#E5E5E5"> back to itself and</font>

237
00:08:55,830 --> 00:09:00,660
paying a fee in the process<font color="#E5E5E5"> and now to</font>

238
00:08:58,589 --> 00:09:03,630
issue the<font color="#E5E5E5"> first statement in the log it</font>

239
00:09:00,660 --> 00:09:05,130
creates<font color="#E5E5E5"> TX 1 TX 1 has an input</font><font color="#CCCCCC"> that</font>

240
00:09:03,630 --> 00:09:07,590
spends<font color="#CCCCCC"> gtx</font>

241
00:09:05,130 --> 00:09:09,810
put coins<font color="#E5E5E5"> are again being sent from the</font>

242
00:09:07,590 --> 00:09:12,120
server back to<font color="#CCCCCC"> the server and because</font>

243
00:09:09,810 --> 00:09:14,489
<font color="#CCCCCC">tx1 spends</font><font color="#E5E5E5"> gtx there cannot be an</font>

244
00:09:12,120 --> 00:09:16,740
<font color="#E5E5E5">inconsistent</font><font color="#CCCCCC"> tx1 prime that commits a</font>

245
00:09:14,490 --> 00:09:20,490
<font color="#CCCCCC">statement s1</font><font color="#E5E5E5"> prime because that would</font>

246
00:09:16,740 --> 00:09:21,720
<font color="#E5E5E5">require a double</font><font color="#CCCCCC"> spend and so on and so</font>

247
00:09:20,490 --> 00:09:23,910
forth if you want to<font color="#E5E5E5"> issue the next</font>

248
00:09:21,720 --> 00:09:25,920
<font color="#E5E5E5">statement you create a tx2 that's</font><font color="#CCCCCC"> n</font><font color="#E5E5E5"> CX</font>

249
00:09:23,910 --> 00:09:27,180
on<font color="#E5E5E5"> coins are being sent again from</font>

250
00:09:25,920 --> 00:09:29,280
server back<font color="#CCCCCC"> to server</font>

251
00:09:27,180 --> 00:09:31,560
inconsistent statements cannot happen

252
00:09:29,280 --> 00:09:32,699
without a double<font color="#E5E5E5"> spend so what this</font>

253
00:09:31,560 --> 00:09:35,160
<font color="#E5E5E5">means</font><font color="#CCCCCC"> is that if the</font><font color="#E5E5E5"> server is</font>

254
00:09:32,700 --> 00:09:37,410
compromised it still cannot equivocate

255
00:09:35,160 --> 00:09:40,140
so in<font color="#E5E5E5"> particular here if the server</font>

256
00:09:37,410 --> 00:09:42,390
wants<font color="#E5E5E5"> the issue</font><font color="#CCCCCC"> two statements s3 and s3</font>

257
00:09:40,140 --> 00:09:46,290
prime it has to<font color="#CCCCCC"> double spend the output</font>

258
00:09:42,390 --> 00:09:48,270
in pxq which Bitcoin miners prevent so

259
00:09:46,290 --> 00:09:50,400
this is nice because<font color="#CCCCCC"> it's</font><font color="#E5E5E5"> hard to fork</font>

260
00:09:48,270 --> 00:09:51,840
as the Bitcoin blockchain<font color="#CCCCCC"> to double</font>

261
00:09:50,400 --> 00:09:54,540
spend<font color="#E5E5E5"> in Bitcoin the best you can hope</font>

262
00:09:51,840 --> 00:09:55,740
to do is<font color="#E5E5E5"> for the blockchain</font><font color="#CCCCCC"> but</font><font color="#E5E5E5"> it's</font>

263
00:09:54,540 --> 00:09:58,829
<font color="#E5E5E5">efficient to verify and I'll talk about</font>

264
00:09:55,740 --> 00:10:01,530
that in<font color="#E5E5E5"> a second</font><font color="#CCCCCC"> the disadvantages</font>

265
00:09:58,830 --> 00:10:03,390
<font color="#E5E5E5">however are</font><font color="#CCCCCC"> that</font><font color="#E5E5E5"> before we can accept</font><font color="#CCCCCC"> a</font>

266
00:10:01,530 --> 00:10:04,980
<font color="#CCCCCC">steal for</font><font color="#E5E5E5"> example we need to wait</font><font color="#CCCCCC"> for</font>

267
00:10:03,390 --> 00:10:07,680
six<font color="#E5E5E5"> more blocks that we built on top of</font>

268
00:10:04,980 --> 00:10:08,880
block<font color="#CCCCCC"> n and this</font><font color="#E5E5E5"> is just a heuristic</font><font color="#CCCCCC"> and</font>

269
00:10:07,680 --> 00:10:11,939
practice you<font color="#E5E5E5"> might actually want to do</font>

270
00:10:08,880 --> 00:10:14,189
more<font color="#E5E5E5"> so that that amounts around</font><font color="#CCCCCC"> an hour</font>

271
00:10:11,940 --> 00:10:16,710
delay before<font color="#CCCCCC"> you can accept the</font>

272
00:10:14,190 --> 00:10:18,510
statement and<font color="#E5E5E5"> the other thing is that</font>

273
00:10:16,710 --> 00:10:22,680
<font color="#E5E5E5">you can only issue a statement every</font><font color="#CCCCCC"> ten</font>

274
00:10:18,510 --> 00:10:24,150
minutes<font color="#E5E5E5"> this is because it doesn't make</font>

275
00:10:22,680 --> 00:10:25,410
sense to issue two statements in a block

276
00:10:24,150 --> 00:10:27,090
you<font color="#CCCCCC"> might</font><font color="#E5E5E5"> as</font><font color="#CCCCCC"> well just merge them into a</font>

277
00:10:25,410 --> 00:10:29,130
single statement<font color="#E5E5E5"> and Bitcoin blocks are</font>

278
00:10:27,090 --> 00:10:30,720
published every<font color="#CCCCCC"> ten minutes and we have</font>

279
00:10:29,130 --> 00:10:32,490
to pay Bitcoin transaction fees to do

280
00:10:30,720 --> 00:10:33,780
this and when<font color="#E5E5E5"> we go to paper the</font><font color="#CCCCCC"> fees</font>

281
00:10:32,490 --> 00:10:35,670
were low I<font color="#CCCCCC"> think they were</font><font color="#E5E5E5"> around 12</font>

282
00:10:33,780 --> 00:10:40,980
cents<font color="#E5E5E5"> I</font><font color="#CCCCCC"> think now however</font><font color="#E5E5E5"> they're more</font>

283
00:10:35,670 --> 00:10:42,930
like 70 cents<font color="#E5E5E5"> Bitcoin went up</font><font color="#CCCCCC"> so let's</font>

284
00:10:40,980 --> 00:10:45,210
talk about how clients verify this<font color="#E5E5E5"> log</font>

285
00:10:42,930 --> 00:10:47,189
<font color="#E5E5E5">so suppose I</font><font color="#CCCCCC"> have a mobile phone that is</font>

286
00:10:45,210 --> 00:10:48,780
a let's say a messaging app like

287
00:10:47,190 --> 00:10:51,390
whatsapp and I have<font color="#E5E5E5"> this lock server</font>

288
00:10:48,780 --> 00:10:53,220
that<font color="#E5E5E5"> is what tasks public</font><font color="#CCCCCC"> key directory</font>

289
00:10:51,390 --> 00:10:54,569
server<font color="#CCCCCC"> and I have the Bitcoin</font>

290
00:10:53,220 --> 00:10:56,520
peer-to-peer network which stores the

291
00:10:54,570 --> 00:10:59,220
<font color="#E5E5E5">blockchain and it has around</font><font color="#CCCCCC"> 7,000</font><font color="#E5E5E5"> nodes</font>

292
00:10:56,520 --> 00:11:01,020
in<font color="#E5E5E5"> order to audit the log I need to have</font>

293
00:10:59,220 --> 00:11:02,310
the logs<font color="#E5E5E5"> Genesis transaction so this is</font>

294
00:11:01,020 --> 00:11:04,410
important to understand this<font color="#CCCCCC"> is the</font>

295
00:11:02,310 --> 00:11:06,780
<font color="#E5E5E5">public key</font><font color="#CCCCCC"> of</font><font color="#E5E5E5"> the log I</font><font color="#CCCCCC"> can only prevent</font>

296
00:11:04,410 --> 00:11:08,760
<font color="#CCCCCC">equivocation with respect to a log</font><font color="#E5E5E5"> and I</font>

297
00:11:06,780 --> 00:11:10,949
need to<font color="#E5E5E5"> identify a log with a Genesis</font>

298
00:11:08,760 --> 00:11:13,080
transaction so once I have that I need

299
00:11:10,950 --> 00:11:15,420
to<font color="#E5E5E5"> get it from a trusted source</font><font color="#CCCCCC"> I ensure</font>

300
00:11:13,080 --> 00:11:17,790
that<font color="#E5E5E5"> all the statements I get are linear</font>

301
00:11:15,420 --> 00:11:18,870
history<font color="#CCCCCC"> of statements so the way I do</font>

302
00:11:17,790 --> 00:11:20,219
that is I<font color="#CCCCCC"> asked</font>

303
00:11:18,870 --> 00:11:22,350
<font color="#CCCCCC">Bitcoin peer-to-peer network hey what</font>

304
00:11:20,220 --> 00:11:24,690
<font color="#CCCCCC">are the</font><font color="#E5E5E5"> next block headers</font><font color="#CCCCCC"> I get back</font>

305
00:11:22,350 --> 00:11:26,700
the headers<font color="#CCCCCC"> there 80 bytes each I verify</font>

306
00:11:24,690 --> 00:11:28,290
the proof<font color="#E5E5E5"> of work then I</font><font color="#CCCCCC"> ask the</font><font color="#E5E5E5"> log</font>

307
00:11:26,700 --> 00:11:30,660
server<font color="#E5E5E5"> hey what's the first statement in</font>

308
00:11:28,290 --> 00:11:32,910
the<font color="#E5E5E5"> log this guy tells</font><font color="#CCCCCC"> me hey</font><font color="#E5E5E5"> look it's</font>

309
00:11:30,660 --> 00:11:35,100
<font color="#E5E5E5">the x1 it has the statement 1 in it</font>

310
00:11:32,910 --> 00:11:38,189
here's a muckle proof and this<font color="#E5E5E5"> whole</font>

311
00:11:35,100 --> 00:11:41,430
thing<font color="#E5E5E5"> is just 600 bytes</font><font color="#CCCCCC"> I check that</font><font color="#E5E5E5"> tx1</font>

312
00:11:38,190 --> 00:11:43,050
<font color="#E5E5E5">spent GTX I check that</font><font color="#CCCCCC"> tx1 is in</font><font color="#E5E5E5"> the</font>

313
00:11:41,430 --> 00:11:45,180
Bitcoin<font color="#E5E5E5"> blockchain by verifying the</font>

314
00:11:43,050 --> 00:11:48,029
<font color="#CCCCCC">miracle proof and I keep doing this I</font>

315
00:11:45,180 --> 00:11:50,010
ask<font color="#E5E5E5"> for</font><font color="#CCCCCC"> four new block headers I</font><font color="#E5E5E5"> ask for</font>

316
00:11:48,029 --> 00:11:51,630
the<font color="#E5E5E5"> next statement</font><font color="#CCCCCC"> I verified that the</font>

317
00:11:50,010 --> 00:11:53,580
transaction<font color="#E5E5E5"> spent the previous</font><font color="#CCCCCC"> one I</font>

318
00:11:51,630 --> 00:11:55,920
<font color="#CCCCCC">verify that the transaction is part of</font>

319
00:11:53,580 --> 00:11:57,720
<font color="#E5E5E5">the Bitcoin blockchain</font><font color="#CCCCCC"> and as a result I</font>

320
00:11:55,920 --> 00:11:59,819
get<font color="#CCCCCC"> non</font><font color="#E5E5E5"> equivocation if I wait for</font>

321
00:11:57,720 --> 00:12:03,420
sufficient Bitcoin blocks on<font color="#E5E5E5"> top of</font>

322
00:11:59,820 --> 00:12:04,980
block and here for<font color="#E5E5E5"> example so this is</font>

323
00:12:03,420 --> 00:12:07,709
great<font color="#CCCCCC"> because we only</font><font color="#E5E5E5"> need to download</font>

324
00:12:04,980 --> 00:12:09,000
very little data in particular<font color="#E5E5E5"> with</font><font color="#CCCCCC"> the</font>

325
00:12:07,710 --> 00:12:11,339
current size<font color="#E5E5E5"> of the Bitcoin blockchain</font>

326
00:12:09,000 --> 00:12:14,220
if we had 10,000 statements in a log we

327
00:12:11,339 --> 00:12:15,990
were only bound with 41 megabytes which

328
00:12:14,220 --> 00:12:17,310
is an improvement over<font color="#CCCCCC"> previous work</font>

329
00:12:15,990 --> 00:12:19,080
which kind<font color="#E5E5E5"> of requires you to download</font>

330
00:12:17,310 --> 00:12:22,770
full blocks to be really<font color="#CCCCCC"> certain you're</font>

331
00:12:19,080 --> 00:12:26,610
not<font color="#E5E5E5"> being equivocated</font><font color="#CCCCCC"> -</font><font color="#E5E5E5"> okay so let's</font>

332
00:12:22,770 --> 00:12:27,990
talk<font color="#CCCCCC"> about</font><font color="#E5E5E5"> scalability so this is kind</font>

333
00:12:26,610 --> 00:12:30,089
of a<font color="#CCCCCC"> problem</font><font color="#E5E5E5"> because the Bitcoin</font>

334
00:12:27,990 --> 00:12:33,630
peer-to-peer network only<font color="#CCCCCC"> has</font><font color="#E5E5E5"> 7,000 full</font>

335
00:12:30,089 --> 00:12:36,060
nodes and each node<font color="#E5E5E5"> has around 117</font>

336
00:12:33,630 --> 00:12:37,500
connections I believe and<font color="#E5E5E5"> that amounts</font>

337
00:12:36,060 --> 00:12:39,420
to<font color="#CCCCCC"> around</font><font color="#E5E5E5"> eight hundred</font><font color="#CCCCCC"> and</font><font color="#E5E5E5"> nineteen</font>

338
00:12:37,500 --> 00:12:42,000
thousand<font color="#E5E5E5"> incoming connections that this</font>

339
00:12:39,420 --> 00:12:43,500
network supports so if we had a bunch<font color="#E5E5E5"> of</font>

340
00:12:42,000 --> 00:12:45,900
<font color="#CCCCCC">Catina clients for a</font><font color="#E5E5E5"> public key</font>

341
00:12:43,500 --> 00:12:48,930
directory for<font color="#E5E5E5"> a popular app like what's</font>

342
00:12:45,900 --> 00:12:51,870
app and each client opens up around<font color="#CCCCCC"> 8</font>

343
00:12:48,930 --> 00:12:54,329
connections to this network<font color="#E5E5E5"> we kind of</font>

344
00:12:51,870 --> 00:12:57,180
unintentionally<font color="#CCCCCC"> DDoS</font><font color="#E5E5E5"> Bitcoin and</font>

345
00:12:54,330 --> 00:12:59,310
<font color="#E5E5E5">obviously we don't want</font><font color="#CCCCCC"> to do that so so</font>

346
00:12:57,180 --> 00:13:01,349
to fix this<font color="#CCCCCC"> problem</font><font color="#E5E5E5"> we introduce this</font>

347
00:12:59,310 --> 00:13:03,150
thing called the<font color="#E5E5E5"> hello relay</font><font color="#CCCCCC"> network and</font>

348
00:13:01,350 --> 00:13:04,740
<font color="#E5E5E5">this is just a way to scale up to the</font>

349
00:13:03,150 --> 00:13:07,170
<font color="#CCCCCC">Bitcoin</font><font color="#E5E5E5"> core</font><font color="#CCCCCC"> due to peer networks</font>

350
00:13:04,740 --> 00:13:09,450
<font color="#E5E5E5">capacity for incoming</font><font color="#CCCCCC"> connections and</font>

351
00:13:07,170 --> 00:13:10,469
the setter relay<font color="#CCCCCC"> network</font><font color="#E5E5E5"> just</font><font color="#CCCCCC"> download</font>

352
00:13:09,450 --> 00:13:12,240
<font color="#E5E5E5">the block letters from the Bitcoin</font>

353
00:13:10,470 --> 00:13:14,580
peer-to-peer network and allows<font color="#CCCCCC"> Catina</font>

354
00:13:12,240 --> 00:13:16,890
clients to fetch those block headers<font color="#E5E5E5"> so</font>

355
00:13:14,580 --> 00:13:18,540
now<font color="#E5E5E5"> or the Catena clients can connect to</font>

356
00:13:16,890 --> 00:13:20,610
this network and request block headers

357
00:13:18,540 --> 00:13:22,529
<font color="#E5E5E5">and we can implement this in a bunch of</font>

358
00:13:20,610 --> 00:13:24,270
ways with volunteer nodes with existing

359
00:13:22,529 --> 00:13:26,400
blockchain explorers like blockchain

360
00:13:24,270 --> 00:13:27,060
that info<font color="#E5E5E5"> with Facebook feeds Twitter</font>

361
00:13:26,400 --> 00:13:28,650
feeds

362
00:13:27,060 --> 00:13:30,359
<font color="#E5E5E5">github feeds and so on and so forth</font>

363
00:13:28,650 --> 00:13:31,410
<font color="#E5E5E5">there's actually one implementation in</font>

364
00:13:30,360 --> 00:13:33,389
<font color="#CCCCCC">etherium that</font>

365
00:13:31,410 --> 00:13:35,339
that serves<font color="#CCCCCC"> Bitcoin headers</font><font color="#E5E5E5"> we had the</font>

366
00:13:33,389 --> 00:13:37,680
<font color="#CCCCCC">etherion watching</font><font color="#E5E5E5"> and there's a bunch of</font>

367
00:13:35,339 --> 00:13:39,540
way to building this<font color="#E5E5E5"> and importantly if</font>

368
00:13:37,680 --> 00:13:42,239
someone hacks the<font color="#CCCCCC"> setter relay Network</font>

369
00:13:39,540 --> 00:13:44,939
<font color="#CCCCCC">it doesn't by itself</font><font color="#E5E5E5"> allow him to</font>

370
00:13:42,240 --> 00:13:46,829
equivocate<font color="#CCCCCC"> the attacker still needs to</font>

371
00:13:44,940 --> 00:13:48,540
<font color="#E5E5E5">take</font><font color="#CCCCCC"> advantage</font><font color="#E5E5E5"> of an accidental fork in</font>

372
00:13:46,829 --> 00:13:51,060
<font color="#E5E5E5">this point or the attacker still needs</font>

373
00:13:48,540 --> 00:13:52,439
to<font color="#CCCCCC"> adversarially mine</font><font color="#E5E5E5"> however if the</font>

374
00:13:51,060 --> 00:13:55,199
attacker does have control<font color="#CCCCCC"> of</font><font color="#E5E5E5"> this</font>

375
00:13:52,439 --> 00:13:57,269
network<font color="#CCCCCC"> adversely mining attacks can be</font>

376
00:13:55,199 --> 00:13:59,189
somewhat easier<font color="#E5E5E5"> but the same thing is</font>

377
00:13:57,269 --> 00:14:00,990
true for<font color="#CCCCCC"> an attacker who would control</font>

378
00:13:59,189 --> 00:14:02,490
<font color="#CCCCCC">the Bitcoin peer-to-peer network</font><font color="#E5E5E5"> so in</font>

379
00:14:00,990 --> 00:14:06,029
that sense we hope that we haven't

380
00:14:02,490 --> 00:14:07,410
<font color="#E5E5E5">introduced too much bigger assumption</font>

381
00:14:06,029 --> 00:14:10,009
than the Bitcoin peer-to-peer network

382
00:14:07,410 --> 00:14:12,930
<font color="#CCCCCC">this</font><font color="#E5E5E5"> is really just</font><font color="#CCCCCC"> an extension of</font><font color="#E5E5E5"> it</font>

383
00:14:10,009 --> 00:14:14,850
yeah so to conclude<font color="#E5E5E5"> what we did here is</font>

384
00:14:12,930 --> 00:14:16,739
we enabled applications to officially

385
00:14:14,850 --> 00:14:19,350
leverage bitcoins publicly verifiable

386
00:14:16,740 --> 00:14:21,750
consensus<font color="#E5E5E5"> so</font><font color="#CCCCCC"> clients</font><font color="#E5E5E5"> only need to</font>

387
00:14:19,350 --> 00:14:24,180
download<font color="#E5E5E5"> transactions selectively rather</font>

388
00:14:21,750 --> 00:14:26,759
than the full blockchain<font color="#CCCCCC"> this amounts to</font>

389
00:14:24,180 --> 00:14:29,579
downloading 41 megabytes<font color="#CCCCCC"> for a small log</font>

390
00:14:26,759 --> 00:14:31,920
rather than<font color="#CCCCCC"> gigabytes and why I think</font>

391
00:14:29,579 --> 00:14:33,810
<font color="#E5E5E5">this matters is because</font><font color="#CCCCCC"> we can hopefully</font>

392
00:14:31,920 --> 00:14:35,339
<font color="#E5E5E5">build better public key directories with</font>

393
00:14:33,810 --> 00:14:36,779
this we<font color="#E5E5E5"> can maybe secure things like</font>

394
00:14:35,339 --> 00:14:39,480
certificate transparency against

395
00:14:36,779 --> 00:14:40,949
equivocation we can build<font color="#E5E5E5"> pork</font>

396
00:14:39,480 --> 00:14:43,079
<font color="#E5E5E5">intestines transparency on top of</font><font color="#CCCCCC"> them</font>

397
00:14:40,949 --> 00:14:44,639
on top of this we can<font color="#CCCCCC"> definitely build</font>

398
00:14:43,079 --> 00:14:46,560
software transparency schemes very

399
00:14:44,639 --> 00:14:48,420
easily with<font color="#E5E5E5"> the Catena log and in</font>

400
00:14:46,560 --> 00:14:50,758
general we<font color="#CCCCCC"> can take any fork consistent</font>

401
00:14:48,420 --> 00:14:54,269
<font color="#CCCCCC">system and give it full consistencies of</font>

402
00:14:50,759 --> 00:14:57,060
things like<font color="#CCCCCC"> sundar sporks</font><font color="#E5E5E5"> integrity so</font>

403
00:14:54,269 --> 00:14:59,189
on and so forth<font color="#CCCCCC"> and yeah</font><font color="#E5E5E5"> for more please</font>

404
00:14:57,060 --> 00:15:00,839
read<font color="#E5E5E5"> our paper and I'll leave you with</font>

405
00:14:59,189 --> 00:15:04,849
<font color="#CCCCCC">this picture of previous</font><font color="#E5E5E5"> work in our</font>

406
00:15:00,839 --> 00:15:04,850
system<font color="#CCCCCC"> and our coders at that edges</font>

407
00:15:04,900 --> 00:15:13,319
[Applause]

408
00:15:14,580 --> 00:15:20,560
hi<font color="#CCCCCC"> Christina in</font><font color="#E5E5E5"> territorial Northeastern</font>

409
00:15:17,350 --> 00:15:23,890
<font color="#E5E5E5">University</font><font color="#CCCCCC"> so it seems that what you</font>

410
00:15:20,560 --> 00:15:25,959
really need is this<font color="#E5E5E5"> abstraction of</font>

411
00:15:23,890 --> 00:15:28,150
system like digital currencies and<font color="#CCCCCC"> the</font>

412
00:15:25,960 --> 00:15:31,120
double spending<font color="#CCCCCC"> Bitcoin</font><font color="#E5E5E5"> is one of the</font>

413
00:15:28,150 --> 00:15:33,130
many<font color="#E5E5E5"> did you think about I mean you're</font>

414
00:15:31,120 --> 00:15:35,080
<font color="#E5E5E5">coming from MIT sa room and there's</font>

415
00:15:33,130 --> 00:15:38,560
several other zero cash and so did you

416
00:15:35,080 --> 00:15:41,230
look at other Bitcoin like systems and

417
00:15:38,560 --> 00:15:43,810
what is<font color="#E5E5E5"> exactly what you need</font><font color="#CCCCCC"> from</font><font color="#E5E5E5"> them</font>

418
00:15:41,230 --> 00:15:45,570
and how generalizable is what you

419
00:15:43,810 --> 00:15:48,520
<font color="#CCCCCC">propose because</font><font color="#E5E5E5"> for</font><font color="#CCCCCC"> example there are</font>

420
00:15:45,570 --> 00:15:50,410
attacks<font color="#E5E5E5"> against Bitcoin double spending</font>

421
00:15:48,520 --> 00:15:53,050
and why majority is not enough<font color="#CCCCCC"> into</font>

422
00:15:50,410 --> 00:15:55,180
things like<font color="#E5E5E5"> right yeah so I did look at</font>

423
00:15:53,050 --> 00:15:56,620
<font color="#E5E5E5">it</font><font color="#CCCCCC"> here</font><font color="#E5E5E5"> iam</font><font color="#CCCCCC"> I think the the reason I</font>

424
00:15:55,180 --> 00:15:58,510
didn't use<font color="#CCCCCC"> etherium is because it has</font>

425
00:15:56,620 --> 00:15:59,980
these other problems<font color="#CCCCCC"> with</font><font color="#E5E5E5"> it's</font><font color="#CCCCCC"> perfect</font>

426
00:15:58,510 --> 00:16:02,680
<font color="#CCCCCC">for consensus</font><font color="#E5E5E5"> that people wrote papers</font>

427
00:15:59,980 --> 00:16:04,660
<font color="#E5E5E5">on the other reason is that</font><font color="#CCCCCC"> etherion</font>

428
00:16:02,680 --> 00:16:07,589
<font color="#CCCCCC">block</font><font color="#E5E5E5"> headers are too large actually</font>

429
00:16:04,660 --> 00:16:09,969
much<font color="#E5E5E5"> larger than Bitcoin block letters</font>

430
00:16:07,590 --> 00:16:12,010
<font color="#CCCCCC">this is not in the</font><font color="#E5E5E5"> paper I</font><font color="#CCCCCC"> just realized</font>

431
00:16:09,970 --> 00:16:13,690
that after<font color="#E5E5E5"> actually and another reason</font>

432
00:16:12,010 --> 00:16:15,340
was at the time when we wrote the paper

433
00:16:13,690 --> 00:16:18,010
<font color="#E5E5E5">we wanted to implement this and there</font>

434
00:16:15,340 --> 00:16:20,170
was no way to do light verification in

435
00:16:18,010 --> 00:16:22,270
<font color="#CCCCCC">aetherium this changed by the</font><font color="#E5E5E5"> time our</font>

436
00:16:20,170 --> 00:16:23,740
<font color="#E5E5E5">paper got accepted</font><font color="#CCCCCC"> so I could see this</font>

437
00:16:22,270 --> 00:16:24,970
<font color="#E5E5E5">being</font><font color="#CCCCCC"> also done in aetherium and would</font>

438
00:16:23,740 --> 00:16:26,260
be interesting<font color="#CCCCCC"> to see what the bandwidth</font>

439
00:16:24,970 --> 00:16:28,060
would be because<font color="#E5E5E5"> the Tyrian blocks</font>

440
00:16:26,260 --> 00:16:30,010
<font color="#CCCCCC">headers are bigger and</font><font color="#E5E5E5"> there's more of</font>

441
00:16:28,060 --> 00:16:35,650
<font color="#E5E5E5">them uses a different consensus</font>

442
00:16:30,010 --> 00:16:38,290
algorithm<font color="#CCCCCC"> hey Alistair Chicago's</font>

443
00:16:35,650 --> 00:16:41,020
<font color="#E5E5E5">acquittal so I'm going to stick into</font>

444
00:16:38,290 --> 00:16:43,510
yourself bits of it<font color="#E5E5E5"> as hard to fork as a</font>

445
00:16:41,020 --> 00:16:46,060
Bitcoin the thing is that it's<font color="#CCCCCC"> not</font>

446
00:16:43,510 --> 00:16:48,040
extremely<font color="#E5E5E5"> hard for Bitcoin we just don't</font>

447
00:16:46,060 --> 00:16:49,540
do it<font color="#CCCCCC"> because you you're going</font><font color="#E5E5E5"> to double</font>

448
00:16:48,040 --> 00:16:51,550
spend<font color="#CCCCCC"> five</font><font color="#E5E5E5"> bitcoins</font><font color="#CCCCCC"> to know that much</font>

449
00:16:49,540 --> 00:16:54,370
money<font color="#E5E5E5"> right but once you move to</font><font color="#CCCCCC"> that</font>

450
00:16:51,550 --> 00:16:56,349
double spending<font color="#E5E5E5"> is</font><font color="#CCCCCC"> actually attaching</font>

451
00:16:54,370 --> 00:16:59,230
into<font color="#E5E5E5"> an encryption aren't you worried</font>

452
00:16:56,350 --> 00:17:02,410
<font color="#CCCCCC">that this makes Bitcoin more vulnerable</font>

453
00:16:59,230 --> 00:17:04,180
<font color="#CCCCCC">to</font><font color="#E5E5E5"> such attacks by using</font><font color="#CCCCCC"> it and in the</font>

454
00:17:02,410 --> 00:17:06,459
process<font color="#CCCCCC"> will actually break</font><font color="#E5E5E5"> a bit going</font>

455
00:17:04,180 --> 00:17:09,370
<font color="#E5E5E5">because the letter agencies would try</font><font color="#CCCCCC"> to</font>

456
00:17:06,459 --> 00:17:11,260
<font color="#E5E5E5">double spend right yeah so that's a very</font>

457
00:17:09,369 --> 00:17:13,089
<font color="#E5E5E5">good point</font><font color="#CCCCCC"> how hard is it the</font><font color="#E5E5E5"> fourth</font>

458
00:17:11,260 --> 00:17:15,069
Bitcoin<font color="#E5E5E5"> and will it get harder if we</font>

459
00:17:13,089 --> 00:17:17,980
build other<font color="#CCCCCC"> things on top of it like</font>

460
00:17:15,069 --> 00:17:20,619
<font color="#CCCCCC">this or like colored coins</font><font color="#E5E5E5"> and people</font>

461
00:17:17,980 --> 00:17:21,910
have looked at<font color="#E5E5E5"> this</font><font color="#CCCCCC"> and I don't</font><font color="#E5E5E5"> have</font><font color="#CCCCCC"> any</font>

462
00:17:20,619 --> 00:17:25,089
answers<font color="#CCCCCC"> to that question</font>

463
00:17:21,910 --> 00:17:27,220
I really don't<font color="#E5E5E5"> know I hope that Bitcoin</font>

464
00:17:25,089 --> 00:17:30,730
<font color="#CCCCCC">becomes useful enough and</font><font color="#E5E5E5"> people want to</font>

465
00:17:27,220 --> 00:17:34,510
further secure it and<font color="#E5E5E5"> it'll be hard to</font>

466
00:17:30,730 --> 00:17:37,660
fork<font color="#CCCCCC"> so far we've had</font><font color="#E5E5E5"> accidental Forks</font><font color="#CCCCCC"> I</font>

467
00:17:34,510 --> 00:17:39,280
hope I hope<font color="#E5E5E5"> it withstands attacks that's</font>

468
00:17:37,660 --> 00:17:41,980
all I can<font color="#E5E5E5"> say</font><font color="#CCCCCC"> I think there was a paper</font>

469
00:17:39,280 --> 00:17:44,350
in<font color="#E5E5E5"> CCS from</font><font color="#CCCCCC"> a</font><font color="#E5E5E5"> service showing like how</font>

470
00:17:41,980 --> 00:17:47,050
hard it is<font color="#CCCCCC"> for Bitcoin and like you can</font>

471
00:17:44,350 --> 00:17:49,300
double spend if it's worth like a few

472
00:17:47,050 --> 00:17:52,899
thousand<font color="#E5E5E5"> K dollars</font><font color="#CCCCCC"> right</font><font color="#E5E5E5"> yes you know</font>

473
00:17:49,300 --> 00:17:54,790
<font color="#E5E5E5">that</font><font color="#CCCCCC"> mass yeah for NSA to</font><font color="#E5E5E5"> add</font><font color="#CCCCCC"> the</font>

474
00:17:52,900 --> 00:17:58,620
breaking<font color="#CCCCCC"> internal</font><font color="#E5E5E5"> encryption right right</font>

475
00:17:54,790 --> 00:18:01,659
<font color="#CCCCCC">it couldn't</font><font color="#E5E5E5"> yeah that could be sure yeah</font>

476
00:17:58,620 --> 00:18:04,239
so at the moment<font color="#E5E5E5"> you listed a few of the</font>

477
00:18:01,660 --> 00:18:06,280
applications<font color="#CCCCCC"> of this</font><font color="#E5E5E5"> which makes sense</font>

478
00:18:04,240 --> 00:18:08,110
when it costs<font color="#E5E5E5"> well for 70 cents</font><font color="#CCCCCC"> are</font>

479
00:18:06,280 --> 00:18:09,820
there more applications you have in mind

480
00:18:08,110 --> 00:18:12,459
<font color="#CCCCCC">that</font><font color="#E5E5E5"> you could use if it only cost one</font>

481
00:18:09,820 --> 00:18:18,460
<font color="#CCCCCC">Center</font><font color="#E5E5E5"> Microsoft to do a non</font>

482
00:18:12,460 --> 00:18:20,320
equivocation hmm you know<font color="#CCCCCC"> I didn't</font>

483
00:18:18,460 --> 00:18:22,230
<font color="#E5E5E5">really</font><font color="#CCCCCC"> think about that too much</font><font color="#E5E5E5"> I was</font>

484
00:18:20,320 --> 00:18:24,909
so excited<font color="#CCCCCC"> about public key distribution</font>

485
00:18:22,230 --> 00:18:27,360
<font color="#E5E5E5">I'm like wow this</font><font color="#CCCCCC"> is</font><font color="#E5E5E5"> really cool</font>

486
00:18:24,910 --> 00:18:29,050
<font color="#CCCCCC">Oh everybody is</font><font color="#E5E5E5"> just doing it slightly</font>

487
00:18:27,360 --> 00:18:31,570
inefficiently and<font color="#E5E5E5"> you can do it</font>

488
00:18:29,050 --> 00:18:38,050
efficiently<font color="#CCCCCC"> I think public</font><font color="#E5E5E5"> distribution</font>

489
00:18:31,570 --> 00:18:38,530
<font color="#E5E5E5">is the killer app not sure I'll get back</font>

490
00:18:38,050 --> 00:18:41,770
to you on<font color="#CCCCCC"> it</font>

491
00:18:38,530 --> 00:18:47,510
<font color="#E5E5E5">okay all right let's think</font><font color="#CCCCCC"> ally</font>

492
00:18:41,770 --> 00:18:47,510
[Applause]

