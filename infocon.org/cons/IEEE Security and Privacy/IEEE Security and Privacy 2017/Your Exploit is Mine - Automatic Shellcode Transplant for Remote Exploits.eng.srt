1
00:00:06,689 --> 00:00:14,860
good morning everyone so we find

2
00:00:11,740 --> 00:00:17,619
vulnerabilities<font color="#E5E5E5"> in programs and we write</font>

3
00:00:14,860 --> 00:00:18,900
exploits<font color="#E5E5E5"> to take advantage of those</font>

4
00:00:17,619 --> 00:00:22,810
<font color="#E5E5E5">vulnerabilities</font>

5
00:00:18,900 --> 00:00:27,278
however ranking<font color="#CCCCCC"> IX would if actually</font>

6
00:00:22,810 --> 00:00:31,418
like an art which is<font color="#CCCCCC"> time-consuming</font>

7
00:00:27,279 --> 00:00:34,630
even for<font color="#E5E5E5"> skillful hackers so once we</font>

8
00:00:31,419 --> 00:00:37,660
<font color="#CCCCCC">capture an exploit it</font><font color="#E5E5E5"> would be great if</font>

9
00:00:34,630 --> 00:00:40,719
we<font color="#CCCCCC"> can just reuse it without manually</font>

10
00:00:37,660 --> 00:00:44,949
analyzing it<font color="#E5E5E5"> and developing a new one by</font>

11
00:00:40,719 --> 00:00:49,390
<font color="#CCCCCC">ourselves but</font><font color="#E5E5E5"> how can we do that how can</font>

12
00:00:44,949 --> 00:00:51,849
<font color="#E5E5E5">we easily</font><font color="#CCCCCC"> reuse their exploits</font><font color="#E5E5E5"> I'm</font>

13
00:00:49,390 --> 00:00:54,999
<font color="#E5E5E5">Tiffany and today I'm going to</font><font color="#CCCCCC"> present</font>

14
00:00:51,850 --> 00:00:58,019
our<font color="#E5E5E5"> work your exploit is my automatic</font>

15
00:00:54,999 --> 00:01:01,989
<font color="#CCCCCC">shellcode transplant for remote exploits</font>

16
00:00:58,019 --> 00:01:04,839
this is joint work with<font color="#E5E5E5"> fish Wong Yuen</font>

17
00:01:01,989 --> 00:01:06,820
hostage<font color="#E5E5E5"> building and Demi Brantley we</font>

18
00:01:04,839 --> 00:01:16,120
are from Carnegie<font color="#CCCCCC"> Mellon University and</font>

19
00:01:06,820 --> 00:01:17,639
UC Santa Barbara<font color="#CCCCCC"> ok</font><font color="#E5E5E5"> let's start there</font>

20
00:01:16,120 --> 00:01:21,460
are many different<font color="#E5E5E5"> kinds of actually</font>

21
00:01:17,640 --> 00:01:24,220
there are denied service<font color="#CCCCCC"> exploit</font><font color="#E5E5E5"> web</font>

22
00:01:21,460 --> 00:01:28,000
application exploits<font color="#E5E5E5"> of remote exploits</font>

23
00:01:24,220 --> 00:01:31,390
in our talk we are<font color="#E5E5E5"> going</font><font color="#CCCCCC"> to focus on a</font>

24
00:01:28,000 --> 00:01:33,690
particular kind<font color="#CCCCCC"> of</font><font color="#E5E5E5"> remote exploits which</font>

25
00:01:31,390 --> 00:01:35,670
is<font color="#CCCCCC"> also one of the most dangerous</font>

26
00:01:33,690 --> 00:01:38,470
<font color="#CCCCCC">exploits</font>

27
00:01:35,670 --> 00:01:41,560
we call it control<font color="#CCCCCC"> flaw hijacking</font>

28
00:01:38,470 --> 00:01:44,980
exploit<font color="#E5E5E5"> a control flow hijacking exploit</font>

29
00:01:41,560 --> 00:01:48,280
is a<font color="#E5E5E5"> input that delays the control flow</font>

30
00:01:44,980 --> 00:01:50,470
of the<font color="#CCCCCC"> program and let the program to</font>

31
00:01:48,280 --> 00:01:55,480
carry out<font color="#E5E5E5"> the malicious computation</font>

32
00:01:50,470 --> 00:01:57,910
<font color="#E5E5E5">controlled by the attacker the malicious</font>

33
00:01:55,480 --> 00:02:00,670
<font color="#CCCCCC">computation is the payload of</font><font color="#E5E5E5"> the</font>

34
00:01:57,910 --> 00:02:04,600
<font color="#E5E5E5">control flow hijacking exploit and we</font>

35
00:02:00,670 --> 00:02:07,390
call it shellcode different<font color="#E5E5E5"> people have</font>

36
00:02:04,600 --> 00:02:11,980
different<font color="#E5E5E5"> purposes of attacking and thus</font>

37
00:02:07,390 --> 00:02:15,730
they<font color="#E5E5E5"> will have different shellcode this</font>

38
00:02:11,980 --> 00:02:19,450
is show code for<font color="#E5E5E5"> example suppose we</font><font color="#CCCCCC"> have</font>

39
00:02:15,730 --> 00:02:20,079
<font color="#E5E5E5">and an exploit from the others and their</font>

40
00:02:19,450 --> 00:02:23,920
shellcode

41
00:02:20,080 --> 00:02:27,100
<font color="#E5E5E5">is to steal a file from</font><font color="#CCCCCC"> Austria file for</font>

42
00:02:23,920 --> 00:02:33,310
their<font color="#E5E5E5"> shellcode however our old</font>

43
00:02:27,100 --> 00:02:36,130
<font color="#E5E5E5">shellcode is to install malware so to</font>

44
00:02:33,310 --> 00:02:39,700
reuse the existing<font color="#CCCCCC"> exploit</font><font color="#E5E5E5"> we need to</font>

45
00:02:36,130 --> 00:02:44,049
change the shellcode<font color="#E5E5E5"> to ours and we call</font>

46
00:02:39,700 --> 00:02:47,440
it shellcode transplant after<font color="#CCCCCC"> first</font>

47
00:02:44,050 --> 00:02:50,410
class it seems that<font color="#E5E5E5"> Shoko transplant is</font>

48
00:02:47,440 --> 00:02:53,859
easy all you<font color="#E5E5E5"> need</font><font color="#CCCCCC"> to do is to strip</font><font color="#E5E5E5"> up</font>

49
00:02:50,410 --> 00:02:57,450
the original<font color="#CCCCCC"> exploit and put your own</font>

50
00:02:53,860 --> 00:03:00,790
shell<font color="#E5E5E5"> code to the existing exploit</font>

51
00:02:57,450 --> 00:03:04,179
however the<font color="#E5E5E5"> shellcode</font><font color="#CCCCCC"> that is actually</font>

52
00:03:00,790 --> 00:03:07,950
executed<font color="#E5E5E5"> may not be exactly the same</font><font color="#CCCCCC"> as</font>

53
00:03:04,180 --> 00:03:11,230
what we see in acts<font color="#E5E5E5"> lloyd when a program</font>

54
00:03:07,950 --> 00:03:14,049
<font color="#CCCCCC">processed and</font><font color="#E5E5E5"> actually as an input it</font>

55
00:03:11,230 --> 00:03:17,019
may<font color="#E5E5E5"> change the</font><font color="#CCCCCC"> input bytes to other</font>

56
00:03:14,050 --> 00:03:19,330
<font color="#E5E5E5">values in</font><font color="#CCCCCC"> order</font><font color="#E5E5E5"> to generate a new</font>

57
00:03:17,020 --> 00:03:23,110
<font color="#E5E5E5">successful export we need to figure out</font>

58
00:03:19,330 --> 00:03:25,780
how the program<font color="#E5E5E5"> process this</font><font color="#CCCCCC"> input so</font>

59
00:03:23,110 --> 00:03:30,760
that<font color="#CCCCCC"> after processing</font><font color="#E5E5E5"> we will get the</font>

60
00:03:25,780 --> 00:03:33,489
expected shellcode in the end to

61
00:03:30,760 --> 00:03:36,730
identify how the program processes this

62
00:03:33,489 --> 00:03:40,750
input<font color="#CCCCCC"> service</font><font color="#E5E5E5"> work uses symbolic</font>

63
00:03:36,730 --> 00:03:44,590
execution where it assigns the input to

64
00:03:40,750 --> 00:03:45,730
sing<font color="#E5E5E5"> both and execute this program as</font>

65
00:03:44,590 --> 00:03:47,890
symbolically

66
00:03:45,730 --> 00:03:50,950
and to<font color="#E5E5E5"> the work the program goes</font><font color="#CCCCCC"> to</font><font color="#E5E5E5"> the</font>

67
00:03:47,890 --> 00:03:54,579
exploitable<font color="#E5E5E5"> stage where we're</font><font color="#CCCCCC"> about to</font>

68
00:03:50,950 --> 00:03:57,518
start where we're about<font color="#E5E5E5"> to start</font>

69
00:03:54,580 --> 00:04:00,489
executing<font color="#E5E5E5"> the shellcode well you see</font>

70
00:03:57,519 --> 00:04:02,709
this<font color="#E5E5E5"> is pretty dangerous</font><font color="#CCCCCC"> close so</font><font color="#E5E5E5"> the</font>

71
00:04:00,489 --> 00:04:07,890
<font color="#CCCCCC">speed the screen goes dark a</font><font color="#E5E5E5"> little bit</font>

72
00:04:02,709 --> 00:04:07,890
<font color="#CCCCCC">it</font><font color="#E5E5E5"> just yes cool all right</font>

73
00:04:09,820 --> 00:04:16,298
<font color="#E5E5E5">okay let me</font><font color="#CCCCCC"> go to do so now we're at</font><font color="#E5E5E5"> the</font>

74
00:04:13,180 --> 00:04:19,030
exploitable<font color="#E5E5E5"> safe and the second step is</font>

75
00:04:16,298 --> 00:04:22,479
to concretize the input with<font color="#CCCCCC"> the</font>

76
00:04:19,029 --> 00:04:25,059
replacement shellcode from the first

77
00:04:22,479 --> 00:04:27,909
step<font color="#E5E5E5"> we'll have the past conference</font>

78
00:04:25,060 --> 00:04:30,160
which is<font color="#E5E5E5"> the conference for letting the</font>

79
00:04:27,910 --> 00:04:32,800
program to reach the actual<font color="#E5E5E5"> both date</font>

80
00:04:30,160 --> 00:04:35,500
and for<font color="#E5E5E5"> the second part</font><font color="#CCCCCC"> we get</font>

81
00:04:32,800 --> 00:04:38,500
shellcodes<font color="#E5E5E5"> conference which requires the</font>

82
00:04:35,500 --> 00:04:41,949
program to execute<font color="#E5E5E5"> exactly what we want</font>

83
00:04:38,500 --> 00:04:43,960
for<font color="#CCCCCC"> shellcode and finally we could solve</font>

84
00:04:41,949 --> 00:04:46,810
the constraints<font color="#E5E5E5"> get it satisfy the</font>

85
00:04:43,960 --> 00:04:52,690
solution and<font color="#E5E5E5"> that can be used as an</font>

86
00:04:46,810 --> 00:04:55,979
<font color="#E5E5E5">excellent however there may not exist</font>

87
00:04:52,690 --> 00:04:59,050
<font color="#E5E5E5">aesthetics</font><font color="#CCCCCC"> for</font><font color="#E5E5E5"> solution for example</font>

88
00:04:55,979 --> 00:05:02,469
<font color="#E5E5E5">suppose we have</font><font color="#CCCCCC"> a vulnerable program</font>

89
00:04:59,050 --> 00:05:05,830
saying<font color="#E5E5E5"> only</font><font color="#CCCCCC"> its</font><font color="#E5E5E5"> as K is equal to</font><font color="#CCCCCC"> 2 it</font>

90
00:05:02,470 --> 00:05:08,800
goes to a vulnerable parabola<font color="#CCCCCC"> Roble</font>

91
00:05:05,830 --> 00:05:10,719
function<font color="#E5E5E5"> and in case in this case to</font>

92
00:05:08,800 --> 00:05:14,469
trigger the vulnerability we have to

93
00:05:10,719 --> 00:05:18,550
have<font color="#CCCCCC"> F</font><font color="#E5E5E5"> K is equal to 2 on the other hand</font>

94
00:05:14,469 --> 00:05:21,129
one we concretize the<font color="#CCCCCC"> shellcode</font><font color="#E5E5E5"> to the</font>

95
00:05:18,550 --> 00:05:24,159
symbolic memory<font color="#E5E5E5"> we may have some</font>

96
00:05:21,129 --> 00:05:29,099
contrasting well<font color="#CCCCCC"> SK has</font><font color="#E5E5E5"> to be equal</font><font color="#CCCCCC"> to 1</font>

97
00:05:24,159 --> 00:05:32,050
<font color="#CCCCCC">these</font><font color="#E5E5E5"> two conference are</font><font color="#CCCCCC"> contradict</font><font color="#E5E5E5"> and</font>

98
00:05:29,099 --> 00:05:34,330
another possibility is<font color="#E5E5E5"> that there is</font>

99
00:05:32,050 --> 00:05:36,009
<font color="#E5E5E5">still a contradiction between the path</font>

100
00:05:34,330 --> 00:05:38,919
constraint and the show called

101
00:05:36,009 --> 00:05:41,199
conference<font color="#E5E5E5"> however the path</font><font color="#CCCCCC"> constraints</font>

102
00:05:38,919 --> 00:05:44,349
may not be necessary to<font color="#E5E5E5"> trigger the</font>

103
00:05:41,199 --> 00:05:46,599
vulnerability for example suppose we

104
00:05:44,349 --> 00:05:50,080
<font color="#CCCCCC">have this piece of chips the source code</font>

105
00:05:46,599 --> 00:05:53,469
<font color="#E5E5E5">and we have if</font><font color="#CCCCCC"> at</font><font color="#E5E5E5"> K is equal</font><font color="#CCCCCC"> to 2</font><font color="#E5E5E5"> it</font>

106
00:05:50,080 --> 00:05:56,800
does blah and then a cause of vulnerable

107
00:05:53,469 --> 00:05:58,479
function in this case<font color="#E5E5E5"> we doesn't have to</font>

108
00:05:56,800 --> 00:06:01,330
make<font color="#CCCCCC"> SK is equal to 2</font>

109
00:05:58,479 --> 00:06:03,370
however<font color="#CCCCCC"> 1 we do symbolic execution the</font>

110
00:06:01,330 --> 00:06:06,099
<font color="#E5E5E5">symbolic</font><font color="#CCCCCC"> tryst goes into this</font><font color="#E5E5E5"> if</font>

111
00:06:03,370 --> 00:06:11,199
<font color="#CCCCCC">statement and make come up with this</font>

112
00:06:06,099 --> 00:06:13,599
<font color="#E5E5E5">contrast a as K is equal</font><font color="#CCCCCC"> to</font><font color="#E5E5E5"> 2 so the</font>

113
00:06:11,199 --> 00:06:18,069
question is how are<font color="#CCCCCC"> we</font><font color="#E5E5E5"> going</font><font color="#CCCCCC"> to resolve</font>

114
00:06:13,599 --> 00:06:21,370
those contradiction so we<font color="#E5E5E5"> propose our</font>

115
00:06:18,069 --> 00:06:24,550
<font color="#CCCCCC">word shell swap</font><font color="#E5E5E5"> which is based on</font>

116
00:06:21,370 --> 00:06:27,250
<font color="#E5E5E5">symbolic execution</font><font color="#CCCCCC"> and in</font><font color="#E5E5E5"> addition we</font>

117
00:06:24,550 --> 00:06:29,889
propose<font color="#E5E5E5"> two methods to resolve those</font>

118
00:06:27,250 --> 00:06:32,349
contradictions<font color="#E5E5E5"> the first method is</font>

119
00:06:29,889 --> 00:06:34,270
called<font color="#CCCCCC"> passed</font><font color="#E5E5E5"> mini which is basically to</font>

120
00:06:32,349 --> 00:06:36,639
change the path<font color="#E5E5E5"> constraints and the</font>

121
00:06:34,270 --> 00:06:38,378
second is<font color="#CCCCCC"> called layout remediation</font>

122
00:06:36,639 --> 00:06:41,710
which is to change the<font color="#CCCCCC"> shell code</font>

123
00:06:38,379 --> 00:06:46,490
conference let's start with layout

124
00:06:41,710 --> 00:06:48,380
remediation first layout

125
00:06:46,490 --> 00:06:50,870
mediation<font color="#E5E5E5"> is to change the</font><font color="#CCCCCC"> shellcode</font>

126
00:06:48,380 --> 00:06:53,199
<font color="#E5E5E5">conference by changing the gelcoat</font>

127
00:06:50,870 --> 00:06:56,720
<font color="#E5E5E5">layout in the memory</font>

128
00:06:53,199 --> 00:07:01,630
traditionally review shellcode as an

129
00:06:56,720 --> 00:07:05,120
entire chunk<font color="#E5E5E5"> composed by instruction</font>

130
00:07:01,630 --> 00:07:06,919
however<font color="#E5E5E5"> we can view it another way why</font>

131
00:07:05,120 --> 00:07:09,199
<font color="#E5E5E5">don't we just separate those</font>

132
00:07:06,919 --> 00:07:12,229
instructions<font color="#E5E5E5"> and link them by jump</font>

133
00:07:09,199 --> 00:07:15,560
instruction<font color="#E5E5E5"> in this way we can come</font><font color="#CCCCCC"> up</font>

134
00:07:12,229 --> 00:07:17,419
<font color="#CCCCCC">with</font><font color="#E5E5E5"> different layouts to try the</font>

135
00:07:15,560 --> 00:07:20,240
<font color="#E5E5E5">different layouts we're going to do it</font>

136
00:07:17,419 --> 00:07:23,630
in the following<font color="#CCCCCC"> way</font><font color="#E5E5E5"> we'll start with</font>

137
00:07:20,240 --> 00:07:26,780
the first<font color="#E5E5E5"> instruction try to located it</font>

138
00:07:23,630 --> 00:07:30,110
in the memory<font color="#CCCCCC"> and</font><font color="#E5E5E5"> see how the conference</font>

139
00:07:26,780 --> 00:07:33,109
<font color="#E5E5E5">goes if so far worse do have a</font>

140
00:07:30,110 --> 00:07:36,050
satisfiable solution then we're<font color="#E5E5E5"> happy</font>

141
00:07:33,110 --> 00:07:38,979
<font color="#CCCCCC">we're going</font><font color="#E5E5E5"> to continue if not we're</font>

142
00:07:36,050 --> 00:07:43,970
going<font color="#CCCCCC"> to relocate</font><font color="#E5E5E5"> the first instruction</font>

143
00:07:38,979 --> 00:07:48,500
<font color="#E5E5E5">suppose we</font><font color="#CCCCCC"> are happy and let's come to</font>

144
00:07:43,970 --> 00:07:51,560
the<font color="#E5E5E5"> next instruction now when we try</font><font color="#CCCCCC"> to</font>

145
00:07:48,500 --> 00:07:54,710
<font color="#E5E5E5">put the</font><font color="#CCCCCC"> next instruction into the</font><font color="#E5E5E5"> memory</font>

146
00:07:51,560 --> 00:07:56,180
we realize that well<font color="#E5E5E5"> there is a shell</font>

147
00:07:54,710 --> 00:07:58,340
<font color="#CCCCCC">called country</font><font color="#E5E5E5"> which is contradict with</font>

148
00:07:56,180 --> 00:08:01,490
the path<font color="#E5E5E5"> constraint so we cannot locate</font>

149
00:07:58,340 --> 00:08:04,698
<font color="#CCCCCC">the second instruction</font><font color="#E5E5E5"> there what are</font><font color="#CCCCCC"> we</font>

150
00:08:01,490 --> 00:08:07,190
going to<font color="#E5E5E5"> do we're going</font><font color="#CCCCCC"> to try to find a</font>

151
00:08:04,699 --> 00:08:10,190
jump instructions<font color="#CCCCCC"> located after the</font>

152
00:08:07,190 --> 00:08:12,590
first instruction<font color="#CCCCCC"> and see if the</font><font color="#E5E5E5"> jump</font>

153
00:08:10,190 --> 00:08:15,440
instruction<font color="#CCCCCC"> fits with the original</font>

154
00:08:12,590 --> 00:08:17,810
layout<font color="#E5E5E5"> and if it does we</font><font color="#CCCCCC"> will continue</font>

155
00:08:15,440 --> 00:08:21,319
locating the rest of these instructions

156
00:08:17,810 --> 00:08:25,909
<font color="#CCCCCC">and in the end we</font><font color="#E5E5E5"> finish all the</font>

157
00:08:21,319 --> 00:08:28,009
locations<font color="#E5E5E5"> for those instructions in this</font>

158
00:08:25,909 --> 00:08:31,190
way we<font color="#E5E5E5"> change the shellcode</font><font color="#CCCCCC"> Conference</font>

159
00:08:28,009 --> 00:08:34,969
from<font color="#CCCCCC"> SK is equal to two previously and</font>

160
00:08:31,190 --> 00:08:37,279
<font color="#CCCCCC">two FK plus</font><font color="#E5E5E5"> 3 is equal</font><font color="#CCCCCC"> to</font><font color="#E5E5E5"> 2 because</font>

161
00:08:34,969 --> 00:08:42,829
remove the position of the second

162
00:08:37,279 --> 00:08:46,279
<font color="#E5E5E5">instruction however</font><font color="#CCCCCC"> layout remediation</font>

163
00:08:42,828 --> 00:08:48,109
<font color="#E5E5E5">may fail and this is because when we add</font>

164
00:08:46,279 --> 00:08:51,020
those jump instructions<font color="#E5E5E5"> and</font><font color="#CCCCCC"> we'll</font>

165
00:08:48,110 --> 00:08:53,240
receive those memories that<font color="#E5E5E5"> might be</font>

166
00:08:51,020 --> 00:08:56,870
contradict<font color="#E5E5E5"> with the</font><font color="#CCCCCC"> path conference we</font>

167
00:08:53,240 --> 00:08:57,960
somehow<font color="#E5E5E5"> misses many spaces we resume</font>

168
00:08:56,870 --> 00:09:00,510
them and in

169
00:08:57,960 --> 00:09:02,790
and women do not have<font color="#E5E5E5"> enough space</font><font color="#CCCCCC"> to</font>

170
00:09:00,510 --> 00:09:06,750
put<font color="#E5E5E5"> all the instructions in a</font><font color="#CCCCCC"> shellcode</font>

171
00:09:02,790 --> 00:09:09,599
<font color="#E5E5E5">in this way we'll look back to the past</font>

172
00:09:06,750 --> 00:09:12,480
conference<font color="#E5E5E5"> and to find out those soup</font>

173
00:09:09,600 --> 00:09:14,250
Everest<font color="#CCCCCC"> functions to Paris</font><font color="#E5E5E5"> conference</font>

174
00:09:12,480 --> 00:09:16,860
<font color="#E5E5E5">and try to see how we're going to</font>

175
00:09:14,250 --> 00:09:22,200
<font color="#E5E5E5">resolve them and we call this step as</font>

176
00:09:16,860 --> 00:09:25,200
path<font color="#E5E5E5"> meeting</font><font color="#CCCCCC"> top</font><font color="#E5E5E5"> meeting also starts</font>

177
00:09:22,200 --> 00:09:29,040
with adding<font color="#E5E5E5"> the</font><font color="#CCCCCC"> shellcode instruction</font>

178
00:09:25,200 --> 00:09:32,040
one by one<font color="#E5E5E5"> the difference is that when</font>

179
00:09:29,040 --> 00:09:34,589
there is<font color="#CCCCCC"> no satisfiable solution after</font>

180
00:09:32,040 --> 00:09:37,740
adding a particular<font color="#E5E5E5"> instruction we</font>

181
00:09:34,589 --> 00:09:41,160
identify the conflict conference<font color="#E5E5E5"> using</font><font color="#CCCCCC"> n</font>

182
00:09:37,740 --> 00:09:44,180
set core and we find out the branch<font color="#CCCCCC"> that</font>

183
00:09:41,160 --> 00:09:47,969
introduces this conflict<font color="#E5E5E5"> constraints and</font>

184
00:09:44,180 --> 00:09:53,370
then we start<font color="#E5E5E5"> path exploration starting</font>

185
00:09:47,970 --> 00:09:56,820
from<font color="#CCCCCC"> this path when we just pass</font>

186
00:09:53,370 --> 00:10:00,270
explorations<font color="#E5E5E5"> we restricted by requiring</font>

187
00:09:56,820 --> 00:10:04,050
<font color="#E5E5E5">that all explored paths can only deviate</font>

188
00:10:00,270 --> 00:10:06,449
<font color="#CCCCCC">once if the original path takes one</font>

189
00:10:04,050 --> 00:10:08,969
branch and the explore path takes

190
00:10:06,450 --> 00:10:12,750
another branch we say the export paths

191
00:10:08,970 --> 00:10:15,660
<font color="#E5E5E5">deviate from the original path when the</font>

192
00:10:12,750 --> 00:10:18,540
path joins together the<font color="#E5E5E5"> explore tasks</font>

193
00:10:15,660 --> 00:10:23,910
must follow all the rest of the branches

194
00:10:18,540 --> 00:10:27,270
that<font color="#E5E5E5"> original path takes for example if</font>

195
00:10:23,910 --> 00:10:32,810
we start<font color="#CCCCCC"> with</font><font color="#E5E5E5"> path expression at this if</font>

196
00:10:27,270 --> 00:10:36,329
statement<font color="#CCCCCC"> and one possible path is to</font>

197
00:10:32,810 --> 00:10:39,060
say if<font color="#E5E5E5"> as K is not equal to</font><font color="#CCCCCC"> one so we</font>

198
00:10:36,330 --> 00:10:42,270
<font color="#CCCCCC">will not call the function</font><font color="#E5E5E5"> blah and we</font>

199
00:10:39,060 --> 00:10:45,000
<font color="#CCCCCC">go to the vulnerable function</font><font color="#E5E5E5"> in this</font>

200
00:10:42,270 --> 00:10:48,660
way we change<font color="#E5E5E5"> the path constraint from</font>

201
00:10:45,000 --> 00:10:51,180
<font color="#E5E5E5">FK is equal to 1 to FK is not equal to 1</font>

202
00:10:48,660 --> 00:10:53,029
and<font color="#CCCCCC"> now the path constraints are no</font>

203
00:10:51,180 --> 00:10:56,130
longer contradict with the original

204
00:10:53,029 --> 00:11:03,510
shellcode conference and we are<font color="#E5E5E5"> very</font>

205
00:10:56,130 --> 00:11:06,540
happy<font color="#CCCCCC"> ok to evaluate our work we got</font><font color="#E5E5E5"> 20</font>

206
00:11:03,510 --> 00:11:09,930
original<font color="#E5E5E5"> exploit from the cyber branch</font>

207
00:11:06,540 --> 00:11:11,520
<font color="#E5E5E5">challenge and meanwhile we have 5 pieces</font>

208
00:11:09,930 --> 00:11:14,069
<font color="#E5E5E5">of new show</font>

209
00:11:11,520 --> 00:11:17,310
<font color="#E5E5E5">odhh indifference lens in different</font>

210
00:11:14,070 --> 00:11:21,330
members of<font color="#E5E5E5"> instructions and created by</font>

211
00:11:17,310 --> 00:11:24,959
different<font color="#E5E5E5"> authors in total we have 20</font>

212
00:11:21,330 --> 00:11:30,570
times<font color="#E5E5E5"> 5 which is equal to 100</font><font color="#CCCCCC"> different</font>

213
00:11:24,960 --> 00:11:36,390
cases<font color="#E5E5E5"> we found that while previous work</font>

214
00:11:30,570 --> 00:11:43,380
is able to generate 31 exploit<font color="#CCCCCC"> shell</font>

215
00:11:36,390 --> 00:11:45,840
swap generated 85 exploit among which 57

216
00:11:43,380 --> 00:11:49,350
exploits<font color="#E5E5E5"> are generated by layout</font>

217
00:11:45,840 --> 00:11:54,390
remediation and 28 more exports<font color="#E5E5E5"> are</font>

218
00:11:49,350 --> 00:11:58,290
generated by<font color="#CCCCCC"> path meeting our</font><font color="#E5E5E5"> evaluation</font>

219
00:11:54,390 --> 00:12:01,130
showed that shell swap can generate<font color="#CCCCCC"> 2</font>

220
00:11:58,290 --> 00:12:03,719
times more than previous<font color="#CCCCCC"> work it and</font>

221
00:12:01,130 --> 00:12:09,090
both layout<font color="#CCCCCC"> remediation</font><font color="#E5E5E5"> and path</font>

222
00:12:03,720 --> 00:12:12,930
<font color="#CCCCCC">meetings are necessary we also evaluate</font>

223
00:12:09,090 --> 00:12:15,090
our system shell swap in terms of the

224
00:12:12,930 --> 00:12:18,449
<font color="#CCCCCC">performance</font><font color="#E5E5E5"> of generating those new</font>

225
00:12:15,090 --> 00:12:23,040
<font color="#CCCCCC">exploits</font><font color="#E5E5E5"> and we show it in this chart</font>

226
00:12:18,450 --> 00:12:26,810
<font color="#E5E5E5">the</font><font color="#CCCCCC"> x-axis are those exploits</font><font color="#E5E5E5"> sorted by</font>

227
00:12:23,040 --> 00:12:30,689
time<font color="#E5E5E5"> in sending other and y-axis is the</font>

228
00:12:26,810 --> 00:12:35,069
<font color="#CCCCCC">time spent in seconds and it's in</font>

229
00:12:30,690 --> 00:12:37,770
<font color="#E5E5E5">logarithmic scale for all exploit we</font>

230
00:12:35,070 --> 00:12:40,830
found that more<font color="#CCCCCC"> than 70%</font><font color="#E5E5E5"> of those</font>

231
00:12:37,770 --> 00:12:44,610
<font color="#E5E5E5">actuals can be generated within</font><font color="#CCCCCC"> 3</font>

232
00:12:40,830 --> 00:12:47,370
minutes<font color="#CCCCCC"> and this</font><font color="#E5E5E5"> means that if</font><font color="#CCCCCC"> you</font><font color="#E5E5E5"> spend</font>

233
00:12:44,610 --> 00:12:49,740
<font color="#E5E5E5">three minutes</font><font color="#CCCCCC"> just wait</font><font color="#E5E5E5"> there sleep</font>

234
00:12:47,370 --> 00:12:52,530
there or well get<font color="#E5E5E5"> a coffee tea whatever</font>

235
00:12:49,740 --> 00:12:55,320
<font color="#CCCCCC">when</font><font color="#E5E5E5"> you come back you get a new effort</font>

236
00:12:52,530 --> 00:13:02,180
<font color="#E5E5E5">and this is much faster</font><font color="#CCCCCC"> than human</font>

237
00:12:55,320 --> 00:13:04,770
analysis<font color="#E5E5E5"> ok in conclusion we show that</font>

238
00:13:02,180 --> 00:13:07,290
<font color="#E5E5E5">reusing cultural flow hijacking exploits</font>

239
00:13:04,770 --> 00:13:11,579
<font color="#E5E5E5">can be done automatically this is</font>

240
00:13:07,290 --> 00:13:15,270
possible<font color="#E5E5E5"> and symbolic execution plus our</font>

241
00:13:11,580 --> 00:13:16,500
two methods<font color="#CCCCCC"> makes this possible</font><font color="#E5E5E5"> the</font>

242
00:13:15,270 --> 00:13:19,110
first<font color="#E5E5E5"> method is called layout</font>

243
00:13:16,500 --> 00:13:21,390
remediation basic is to change the

244
00:13:19,110 --> 00:13:23,490
layout of the<font color="#CCCCCC"> shellcode and thus change</font>

245
00:13:21,390 --> 00:13:25,020
<font color="#CCCCCC">the conference cost by the shell code</font>

246
00:13:23,490 --> 00:13:27,180
<font color="#E5E5E5">and a second</font>

247
00:13:25,020 --> 00:13:30,270
<font color="#E5E5E5">protests called</font><font color="#CCCCCC"> paths meeting</font><font color="#E5E5E5"> which is</font>

248
00:13:27,180 --> 00:13:32,939
to change the<font color="#E5E5E5"> path executing and</font><font color="#CCCCCC"> lead</font>

249
00:13:30,270 --> 00:13:35,270
the<font color="#CCCCCC"> program to be exploitable and in</font>

250
00:13:32,940 --> 00:13:39,330
<font color="#E5E5E5">this way we change the</font><font color="#CCCCCC"> path conference</font>

251
00:13:35,270 --> 00:13:42,180
we<font color="#E5E5E5"> propose system shell swap which is</font>

252
00:13:39,330 --> 00:13:46,740
able<font color="#CCCCCC"> to generate 85</font><font color="#E5E5E5"> percent of the new</font>

253
00:13:42,180 --> 00:13:49,170
<font color="#E5E5E5">exploit and among them 70 percent plus</font>

254
00:13:46,740 --> 00:13:52,520
of<font color="#E5E5E5"> the successful exports can be</font>

255
00:13:49,170 --> 00:14:01,829
automatically generated<font color="#CCCCCC"> in</font><font color="#E5E5E5"> three minutes</font>

256
00:13:52,520 --> 00:14:03,960
<font color="#E5E5E5">thank you yep question please yes hi</font>

257
00:14:01,830 --> 00:14:07,080
it's a very<font color="#CCCCCC"> interesting work I have a</font>

258
00:14:03,960 --> 00:14:10,290
question about the past needing so you

259
00:14:07,080 --> 00:14:12,930
do pass a meeting<font color="#E5E5E5"> only when you can't</font>

260
00:14:10,290 --> 00:14:15,540
find<font color="#CCCCCC"> the satisfactory</font><font color="#E5E5E5"> solution to the</font>

261
00:14:12,930 --> 00:14:17,910
lava<font color="#E5E5E5"> constraint so why don't you do that</font>

262
00:14:15,540 --> 00:14:19,860
<font color="#E5E5E5">effectively because if you know the</font>

263
00:14:17,910 --> 00:14:23,250
control flow graph<font color="#CCCCCC"> then you'll know</font>

264
00:14:19,860 --> 00:14:26,670
which branches are<font color="#E5E5E5"> critical are the</font>

265
00:14:23,250 --> 00:14:29,460
prerequisites for<font color="#E5E5E5"> reaching the ulnar</font>

266
00:14:26,670 --> 00:14:32,660
both statements<font color="#CCCCCC"> and which conditionals</font>

267
00:14:29,460 --> 00:14:35,700
are unimportant<font color="#CCCCCC"> so if you</font><font color="#E5E5E5"> remove all the</font>

268
00:14:32,660 --> 00:14:38,219
<font color="#E5E5E5">unimportant branches then that would</font>

269
00:14:35,700 --> 00:14:40,380
make your no<font color="#CCCCCC"> constraint solver much</font>

270
00:14:38,220 --> 00:14:45,030
easier so it didn't have you thought<font color="#CCCCCC"> of</font>

271
00:14:40,380 --> 00:14:46,860
that<font color="#CCCCCC"> so for</font><font color="#E5E5E5"> us I think the problem is we</font>

272
00:14:45,030 --> 00:14:49,040
don't<font color="#CCCCCC"> know which function</font><font color="#E5E5E5"> is the</font>

273
00:14:46,860 --> 00:14:52,590
vulnerable function<font color="#E5E5E5"> well we don't know</font>

274
00:14:49,040 --> 00:14:56,040
how<font color="#E5E5E5"> to reach this</font><font color="#CCCCCC"> exportable state until</font>

275
00:14:52,590 --> 00:14:58,260
we do<font color="#E5E5E5"> the symbolic execution</font><font color="#CCCCCC"> so after we</font>

276
00:14:56,040 --> 00:15:01,410
finish this invalid execution<font color="#E5E5E5"> basically</font>

277
00:14:58,260 --> 00:15:03,720
<font color="#E5E5E5">it's we go for only one trace because we</font>

278
00:15:01,410 --> 00:15:06,390
have the<font color="#E5E5E5"> original exploit its input and</font>

279
00:15:03,720 --> 00:15:08,690
we don't explore all the possible paths

280
00:15:06,390 --> 00:15:11,880
we just go<font color="#CCCCCC"> through the</font><font color="#E5E5E5"> particular branch</font>

281
00:15:08,690 --> 00:15:14,370
<font color="#CCCCCC">instructed</font><font color="#E5E5E5"> by the original</font><font color="#CCCCCC"> input so at</font>

282
00:15:11,880 --> 00:15:17,490
<font color="#E5E5E5">that point we don't know what other</font>

283
00:15:14,370 --> 00:15:19,200
branch<font color="#E5E5E5"> are important or not which is the</font>

284
00:15:17,490 --> 00:15:22,140
reason<font color="#E5E5E5"> why we started the exploration</font>

285
00:15:19,200 --> 00:15:24,860
based<font color="#E5E5E5"> on the unsatisfiable point and why</font>

286
00:15:22,140 --> 00:15:28,020
try<font color="#E5E5E5"> to you</font><font color="#CCCCCC"> know just walk around</font><font color="#E5E5E5"> and</font>

287
00:15:24,860 --> 00:15:31,500
explore a little<font color="#E5E5E5"> bit but we want to</font>

288
00:15:28,020 --> 00:15:33,210
<font color="#E5E5E5">avoid or</font><font color="#CCCCCC"> residential avoid I should</font><font color="#E5E5E5"> say</font>

289
00:15:31,500 --> 00:15:36,180
mitigate the possible path<font color="#E5E5E5"> exposure</font>

290
00:15:33,210 --> 00:15:37,920
<font color="#E5E5E5">which is the reason</font><font color="#CCCCCC"> why we say we the</font>

291
00:15:36,180 --> 00:15:41,880
new<font color="#E5E5E5"> explore path has to</font>

292
00:15:37,920 --> 00:15:45,569
<font color="#CCCCCC">our debate once only but when you try to</font>

293
00:15:41,880 --> 00:15:47,220
solve the constraint<font color="#CCCCCC"> you</font><font color="#E5E5E5"> found that it</font>

294
00:15:45,570 --> 00:15:50,070
can be solved because there's a conflict

295
00:15:47,220 --> 00:15:53,839
at<font color="#E5E5E5"> that stage</font><font color="#CCCCCC"> why don't you remove all</font>

296
00:15:50,070 --> 00:15:57,480
<font color="#E5E5E5">the conditionals that are</font><font color="#CCCCCC"> important for</font>

297
00:15:53,839 --> 00:16:00,149
<font color="#E5E5E5">going down</font><font color="#CCCCCC"> this path because I</font><font color="#E5E5E5"> don't</font>

298
00:15:57,480 --> 00:16:03,540
know what conditions are<font color="#E5E5E5"> important at</font>

299
00:16:00,149 --> 00:16:05,699
what which conditions are important what

300
00:16:03,540 --> 00:16:09,180
I only know is what constraints are

301
00:16:05,699 --> 00:16:13,109
conflict or what is this<font color="#E5E5E5"> and set core</font>

302
00:16:09,180 --> 00:16:15,359
for solving this conference and to

303
00:16:13,110 --> 00:16:19,079
figure<font color="#CCCCCC"> it out which is important or not</font>

304
00:16:15,360 --> 00:16:21,209
<font color="#E5E5E5">that is exactly what's happening done</font>

305
00:16:19,079 --> 00:16:22,920
and but if you have the control flow

306
00:16:21,209 --> 00:16:26,099
graph<font color="#CCCCCC"> you</font><font color="#E5E5E5"> know that information</font><font color="#CCCCCC"> right</font>

307
00:16:22,920 --> 00:16:27,689
because right<font color="#CCCCCC"> sorry</font><font color="#E5E5E5"> sorry</font><font color="#CCCCCC"> to interrupt I</font>

308
00:16:26,100 --> 00:16:29,130
mean you know the branch but you don't

309
00:16:27,690 --> 00:16:30,959
know which<font color="#E5E5E5"> one is important</font>

310
00:16:29,130 --> 00:16:35,130
<font color="#CCCCCC">Oh get me back we</font><font color="#E5E5E5"> should take this</font>

311
00:16:30,959 --> 00:16:38,489
offline<font color="#CCCCCC"> yeah yes let's talk it</font><font color="#E5E5E5"> so from</font>

312
00:16:35,130 --> 00:16:41,639
<font color="#E5E5E5">our si</font><font color="#CCCCCC"> labs very interesting work</font><font color="#E5E5E5"> have a</font>

313
00:16:38,490 --> 00:16:45,570
particular<font color="#E5E5E5"> question about how the orange</font>

314
00:16:41,639 --> 00:16:49,230
enol<font color="#E5E5E5"> Orangina exploit others react to</font>

315
00:16:45,570 --> 00:16:51,480
your approach<font color="#CCCCCC"> so what if the</font><font color="#E5E5E5"> exploit</font>

316
00:16:49,230 --> 00:16:53,730
others think that<font color="#CCCCCC"> they are code is</font>

317
00:16:51,480 --> 00:16:56,640
<font color="#CCCCCC">they're</font><font color="#E5E5E5"> very important the property they</font>

318
00:16:53,730 --> 00:16:59,070
want<font color="#E5E5E5"> to protect their code like from the</font>

319
00:16:56,640 --> 00:17:00,649
analyze the bio approach like I<font color="#E5E5E5"> don't</font>

320
00:16:59,070 --> 00:17:03,449
know they do maybe some kind<font color="#E5E5E5"> of</font>

321
00:17:00,649 --> 00:17:06,449
confiscation<font color="#E5E5E5"> so have you thought about</font>

322
00:17:03,449 --> 00:17:09,178
this is a real issue<font color="#CCCCCC"> I just want to get</font>

323
00:17:06,449 --> 00:17:11,370
<font color="#CCCCCC">to some comments on that</font><font color="#E5E5E5"> yeah so this is</font>

324
00:17:09,179 --> 00:17:15,720
a<font color="#E5E5E5"> good question</font><font color="#CCCCCC"> it's possible</font><font color="#E5E5E5"> that the</font>

325
00:17:11,369 --> 00:17:19,049
<font color="#CCCCCC">original attackers do some</font><font color="#E5E5E5"> encryption or</font>

326
00:17:15,720 --> 00:17:22,589
<font color="#E5E5E5">alpha station in order to mess up our</font>

327
00:17:19,049 --> 00:17:24,720
method and we don't have the veneration

328
00:17:22,589 --> 00:17:27,928
<font color="#E5E5E5">in this regard but</font><font color="#CCCCCC"> I</font><font color="#E5E5E5"> think this is</font>

329
00:17:24,720 --> 00:17:32,309
actually<font color="#E5E5E5"> an interesting director to look</font>

330
00:17:27,929 --> 00:17:35,630
in the<font color="#CCCCCC"> future and actually we</font><font color="#E5E5E5"> have</font><font color="#CCCCCC"> our</font>

331
00:17:32,309 --> 00:17:38,490
<font color="#E5E5E5">going work in terms of this particular</font>

332
00:17:35,630 --> 00:17:40,790
direction<font color="#E5E5E5"> and hopefully we</font><font color="#CCCCCC"> can get</font>

333
00:17:38,490 --> 00:17:43,320
accepted<font color="#E5E5E5"> somewhere else in the</font><font color="#CCCCCC"> future</font>

334
00:17:40,790 --> 00:17:45,178
and this<font color="#CCCCCC"> is very</font><font color="#E5E5E5"> interesting work I have</font>

335
00:17:43,320 --> 00:17:47,070
a<font color="#CCCCCC"> high-level</font><font color="#E5E5E5"> question</font><font color="#CCCCCC"> and</font><font color="#E5E5E5"> in the real</font>

336
00:17:45,179 --> 00:17:48,560
world<font color="#E5E5E5"> you</font><font color="#CCCCCC"> notice I just wondering what</font>

337
00:17:47,070 --> 00:17:51,710
<font color="#E5E5E5">the</font><font color="#CCCCCC"> real-world impact of</font>

338
00:17:48,560 --> 00:17:54,409
and the new technique and have you seen

339
00:17:51,710 --> 00:17:56,560
in the real world the attacker

340
00:17:54,410 --> 00:17:58,670
<font color="#E5E5E5">continuously you know changes their</font>

341
00:17:56,560 --> 00:18:00,800
<font color="#E5E5E5">shellcode you know just to winning the</font>

342
00:17:58,670 --> 00:18:01,280
<font color="#E5E5E5">thing</font><font color="#CCCCCC"> maxpro and the front defender we</font>

343
00:18:00,800 --> 00:18:03,830
want

344
00:18:01,280 --> 00:18:06,350
shouldn't it be easier just go for<font color="#E5E5E5"> that</font>

345
00:18:03,830 --> 00:18:10,250
<font color="#E5E5E5">bro itself</font><font color="#CCCCCC"> and in this way</font><font color="#E5E5E5"> you know you</font>

346
00:18:06,350 --> 00:18:12,889
<font color="#CCCCCC">shut door and prevent all kinds of shell</font>

347
00:18:10,250 --> 00:18:17,750
code to be executed around<font color="#CCCCCC"> whilst</font><font color="#E5E5E5"> attack</font>

348
00:18:12,890 --> 00:18:21,440
happens that makes<font color="#E5E5E5"> that yeah I mean this</font>

349
00:18:17,750 --> 00:18:25,190
is a possibility which is<font color="#E5E5E5"> attacker will</font>

350
00:18:21,440 --> 00:18:26,330
continually change their show code<font color="#CCCCCC"> have</font>

351
00:18:25,190 --> 00:18:29,690
you seen these things<font color="#CCCCCC"> in the real world</font>

352
00:18:26,330 --> 00:18:33,290
<font color="#CCCCCC">I haven't seen this in the real world</font>

353
00:18:29,690 --> 00:18:35,840
<font color="#CCCCCC">but yeah what we well I think maybe this</font>

354
00:18:33,290 --> 00:18:38,360
based<font color="#E5E5E5"> on my limited experience on them I</font>

355
00:18:35,840 --> 00:18:40,879
<font color="#E5E5E5">can see these things</font><font color="#CCCCCC"> for for</font><font color="#E5E5E5"> the you</font>

356
00:18:38,360 --> 00:18:44,199
<font color="#CCCCCC">know</font><font color="#E5E5E5"> CTF or you know this is</font><font color="#CCCCCC"> very useful</font>

357
00:18:40,880 --> 00:18:46,940
well what the thing<font color="#CCCCCC"> is</font><font color="#E5E5E5"> yes</font><font color="#CCCCCC"> CGS</font><font color="#E5E5E5"> is</font>

358
00:18:44,200 --> 00:18:51,680
probably a using scenario for this

359
00:18:46,940 --> 00:18:53,030
regard<font color="#CCCCCC"> but</font><font color="#E5E5E5"> also what we want to well I</font>

360
00:18:51,680 --> 00:18:55,790
<font color="#E5E5E5">think what part of the goal for this</font>

361
00:18:53,030 --> 00:18:57,889
<font color="#CCCCCC">research is to</font><font color="#E5E5E5"> inspire people that hey</font>

362
00:18:55,790 --> 00:19:00,860
next<font color="#E5E5E5"> time we'll attack</font><font color="#CCCCCC"> we need to</font><font color="#E5E5E5"> think</font>

363
00:18:57,890 --> 00:19:02,900
<font color="#E5E5E5">about the possible</font><font color="#CCCCCC"> a technique that</font>

364
00:19:00,860 --> 00:19:04,729
<font color="#CCCCCC">people</font><font color="#E5E5E5"> may come up</font><font color="#CCCCCC"> with</font><font color="#E5E5E5"> attacks right</font>

365
00:19:02,900 --> 00:19:06,610
after you<font color="#CCCCCC"> and attack back to you and</font>

366
00:19:04,730 --> 00:19:09,950
this<font color="#E5E5E5"> comes to</font><font color="#CCCCCC"> the</font><font color="#E5E5E5"> collateral damage</font><font color="#CCCCCC"> and</font>

367
00:19:06,610 --> 00:19:12,469
actually we do<font color="#CCCCCC"> have some research based</font>

368
00:19:09,950 --> 00:19:15,730
on<font color="#CCCCCC"> the collateral damage and we have</font>

369
00:19:12,470 --> 00:19:18,550
some<font color="#E5E5E5"> interesting game theoretical</font>

370
00:19:15,730 --> 00:19:23,020
<font color="#CCCCCC">observations based on the existence</font><font color="#E5E5E5"> of</font>

371
00:19:18,550 --> 00:19:25,060
such<font color="#E5E5E5"> piece of technique thank you</font><font color="#CCCCCC"> thanks</font>

372
00:19:23,020 --> 00:19:30,220
<font color="#CCCCCC">alright let's thank your sister again</font>

373
00:19:25,060 --> 00:19:30,220
[Applause]

