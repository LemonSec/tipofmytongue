1
00:00:07,969 --> 00:00:12,990
<font color="#CCCCCC">all right thanks</font><font color="#E5E5E5"> everybody</font><font color="#CCCCCC"> I'm Ben</font>

2
00:00:11,309 --> 00:00:13,989
fuller that's an<font color="#E5E5E5"> S okay</font><font color="#CCCCCC"> so it's</font><font color="#E5E5E5"> going to</font>

3
00:00:12,990 --> 00:00:18,310
be necessary

4
00:00:13,990 --> 00:00:20,680
<font color="#CCCCCC">incomplete I think I have 14 out of 186</font>

5
00:00:18,310 --> 00:00:23,668
citations in the<font color="#E5E5E5"> talk so that's a rough</font>

6
00:00:20,680 --> 00:00:26,560
approximation<font color="#CCCCCC"> of how much</font><font color="#E5E5E5"> content I</font><font color="#CCCCCC"> have</font>

7
00:00:23,669 --> 00:00:30,699
<font color="#E5E5E5">this is joint work</font><font color="#CCCCCC"> with my onk arkady</font>

8
00:00:26,560 --> 00:00:33,580
<font color="#CCCCCC">emily ariel vijay</font><font color="#E5E5E5"> rich</font><font color="#CCCCCC"> Darby and</font><font color="#E5E5E5"> Rob and</font>

9
00:00:30,699 --> 00:00:35,320
<font color="#E5E5E5">I think that's the whole list</font><font color="#CCCCCC"> so we're</font>

10
00:00:33,580 --> 00:00:37,750
going to<font color="#E5E5E5"> be talking</font><font color="#CCCCCC"> about the trade-off</font>

11
00:00:35,320 --> 00:00:42,540
<font color="#CCCCCC">between data</font><font color="#E5E5E5"> utility and data privacy</font><font color="#CCCCCC"> in</font>

12
00:00:37,750 --> 00:00:44,830
particular large large data storage so

13
00:00:42,540 --> 00:00:47,320
<font color="#CCCCCC">we've covered this many times in</font><font color="#E5E5E5"> the</font>

14
00:00:44,830 --> 00:00:49,659
symposium<font color="#E5E5E5"> so far but data has tremendous</font>

15
00:00:47,320 --> 00:00:51,489
<font color="#CCCCCC">value to</font><font color="#E5E5E5"> organizations</font><font color="#CCCCCC"> it's its</font>

16
00:00:49,659 --> 00:00:52,960
<font color="#E5E5E5">lifeblood of a lot of companies</font><font color="#CCCCCC"> in fact</font>

17
00:00:51,489 --> 00:00:54,489
there's even<font color="#CCCCCC"> websites you can</font><font color="#E5E5E5"> go</font><font color="#CCCCCC"> to</font>

18
00:00:52,960 --> 00:00:55,930
where you can find<font color="#CCCCCC"> out how much your</font>

19
00:00:54,489 --> 00:00:58,180
data is worth and I'm sure<font color="#E5E5E5"> they steal it</font>

20
00:00:55,930 --> 00:01:00,190
<font color="#CCCCCC">as soon as you</font><font color="#E5E5E5"> you tell them how much</font>

21
00:00:58,180 --> 00:01:01,989
it's<font color="#CCCCCC"> worth but you can you</font><font color="#E5E5E5"> can kind</font><font color="#CCCCCC"> of</font>

22
00:01:00,190 --> 00:01:05,259
<font color="#CCCCCC">figure out</font><font color="#E5E5E5"> how much value you</font><font color="#CCCCCC"> have based</font>

23
00:01:01,989 --> 00:01:07,750
on your<font color="#E5E5E5"> privacy so organizations</font>

24
00:01:05,260 --> 00:01:09,670
rightfully take a lot<font color="#CCCCCC"> of</font><font color="#E5E5E5"> pride in being</font>

25
00:01:07,750 --> 00:01:11,619
<font color="#E5E5E5">caretakers of the state and it</font><font color="#CCCCCC"> has</font>

26
00:01:09,670 --> 00:01:14,710
tremendous<font color="#CCCCCC"> value to them but</font><font color="#E5E5E5"> anytime you</font>

27
00:01:11,619 --> 00:01:17,110
have<font color="#E5E5E5"> value it also creates risk so we</font>

28
00:01:14,710 --> 00:01:18,729
don't<font color="#E5E5E5"> need to list the the large number</font>

29
00:01:17,110 --> 00:01:21,100
of<font color="#E5E5E5"> privacy breaches but I'm going to do</font>

30
00:01:18,729 --> 00:01:24,250
it anyways these vary across sectors

31
00:01:21,100 --> 00:01:26,408
from defense industry to consumer to

32
00:01:24,250 --> 00:01:29,859
government to<font color="#E5E5E5"> academia to whatever you</font>

33
00:01:26,409 --> 00:01:31,539
want to to cheating on spouses<font color="#CCCCCC"> and</font><font color="#E5E5E5"> this</font>

34
00:01:29,859 --> 00:01:33,939
led last year to Bruce and<font color="#CCCCCC"> I are saying</font>

35
00:01:31,539 --> 00:01:35,409
that data is a toxic asset<font color="#E5E5E5"> so the</font>

36
00:01:33,939 --> 00:01:38,079
question we want<font color="#E5E5E5"> to ask is is it</font>

37
00:01:35,409 --> 00:01:40,359
<font color="#E5E5E5">possible to</font><font color="#CCCCCC"> balance</font><font color="#E5E5E5"> this this</font>

38
00:01:38,079 --> 00:01:42,249
tremendously<font color="#E5E5E5"> huge value that exists in</font>

39
00:01:40,359 --> 00:01:44,380
having data stored and<font color="#E5E5E5"> processed and</font>

40
00:01:42,249 --> 00:01:48,899
searched on along<font color="#CCCCCC"> with the risk that</font>

41
00:01:44,380 --> 00:01:51,640
<font color="#CCCCCC">comes from having this data okay so I</font>

42
00:01:48,899 --> 00:01:53,200
identify as a cryptographer as do some

43
00:01:51,640 --> 00:01:54,909
<font color="#E5E5E5">people</font><font color="#CCCCCC"> in the</font><font color="#E5E5E5"> room the natural thing I</font>

44
00:01:53,200 --> 00:01:56,909
would say is if there's risk to data

45
00:01:54,909 --> 00:02:00,999
<font color="#CCCCCC">compromised we should be encrypting data</font>

46
00:01:56,909 --> 00:02:03,159
and it's not quite<font color="#CCCCCC"> clear what that</font><font color="#E5E5E5"> means</font>

47
00:02:00,999 --> 00:02:05,109
if I<font color="#CCCCCC"> have a large data set I want to</font>

48
00:02:03,159 --> 00:02:07,030
search over generally we<font color="#CCCCCC"> have this</font><font color="#E5E5E5"> set</font>

49
00:02:05,109 --> 00:02:08,199
<font color="#E5E5E5">up where we have a bunch of</font><font color="#CCCCCC"> clients</font>

50
00:02:07,030 --> 00:02:11,020
connecting to a bunch of different

51
00:02:08,199 --> 00:02:13,179
database servers with data provided<font color="#E5E5E5"> by</font>

52
00:02:11,020 --> 00:02:15,160
some owner<font color="#E5E5E5"> and this is all process on</font>

53
00:02:13,180 --> 00:02:16,900
some back-end<font color="#E5E5E5"> storage so I'm going to</font>

54
00:02:15,160 --> 00:02:18,940
consider a<font color="#E5E5E5"> slightly simplified model</font>

55
00:02:16,900 --> 00:02:20,980
today<font color="#E5E5E5"> where we only have a single</font><font color="#CCCCCC"> client</font>

56
00:02:18,940 --> 00:02:22,690
and a single<font color="#CCCCCC"> database server</font><font color="#E5E5E5"> if you're</font>

57
00:02:20,980 --> 00:02:23,619
<font color="#E5E5E5">interested in the more complex setting</font>

58
00:02:22,690 --> 00:02:26,340
come talk to<font color="#CCCCCC"> me</font>

59
00:02:23,620 --> 00:02:29,190
<font color="#E5E5E5">not everything translates over to this</font>

60
00:02:26,340 --> 00:02:31,200
more complex<font color="#E5E5E5"> setting so when I say let's</font>

61
00:02:29,190 --> 00:02:33,480
encrypt data well Who am<font color="#E5E5E5"> I</font><font color="#CCCCCC"> trying to</font>

62
00:02:31,200 --> 00:02:35,970
protect from<font color="#E5E5E5"> what what threat do we care</font>

63
00:02:33,480 --> 00:02:38,369
about<font color="#E5E5E5"> well one thing we could talk about</font>

64
00:02:35,970 --> 00:02:41,160
is<font color="#CCCCCC"> just an adversary sitting sitting</font><font color="#E5E5E5"> on</font>

65
00:02:38,370 --> 00:02:43,319
the network somewhere<font color="#CCCCCC"> and here it's</font>

66
00:02:41,160 --> 00:02:45,629
clear what we do right we<font color="#CCCCCC"> use standard</font>

67
00:02:43,319 --> 00:02:48,859
protection mechanisms such as TLS to

68
00:02:45,629 --> 00:02:51,750
protect these channels<font color="#E5E5E5"> okay</font>

69
00:02:48,860 --> 00:02:53,819
now you could also<font color="#E5E5E5"> consider well maybe</font>

70
00:02:51,750 --> 00:02:56,879
what we care<font color="#CCCCCC"> about is an adversary</font><font color="#E5E5E5"> who</font>

71
00:02:53,819 --> 00:02:59,280
<font color="#E5E5E5">compromises the backend storage system</font>

72
00:02:56,879 --> 00:03:03,090
<font color="#CCCCCC">and here again</font><font color="#E5E5E5"> we have we have pretty</font>

73
00:02:59,280 --> 00:03:05,610
reasonable solutions<font color="#CCCCCC"> in fact laws such</font>

74
00:03:03,090 --> 00:03:07,410
<font color="#E5E5E5">as HIPAA require you to</font><font color="#CCCCCC"> encrypt data at</font>

75
00:03:05,610 --> 00:03:10,680
rest<font color="#E5E5E5"> and this capability exists in many</font>

76
00:03:07,410 --> 00:03:13,280
modern databases<font color="#CCCCCC"> you have kind of the</font>

77
00:03:10,680 --> 00:03:16,049
<font color="#CCCCCC">coarse-grained</font><font color="#E5E5E5"> just encrypt the</font><font color="#CCCCCC"> entire</font>

78
00:03:13,280 --> 00:03:18,780
data set on on storage and<font color="#E5E5E5"> then</font>

79
00:03:16,049 --> 00:03:20,400
<font color="#CCCCCC">modern-day</font><font color="#E5E5E5"> databases also allow you more</font>

80
00:03:18,780 --> 00:03:22,920
<font color="#E5E5E5">fine-grained encryption so you can</font>

81
00:03:20,400 --> 00:03:26,190
encrypt<font color="#E5E5E5"> for example a single</font><font color="#CCCCCC"> attribute a</font>

82
00:03:22,920 --> 00:03:28,349
single column under a<font color="#E5E5E5"> particular key so</font>

83
00:03:26,190 --> 00:03:31,380
this we we have a pretty<font color="#E5E5E5"> good handle on</font>

84
00:03:28,349 --> 00:03:33,510
how<font color="#CCCCCC"> to do - well you</font><font color="#E5E5E5"> might say well the</font>

85
00:03:31,380 --> 00:03:35,760
<font color="#CCCCCC">thing we're worried about is actually</font>

86
00:03:33,510 --> 00:03:38,190
having having<font color="#E5E5E5"> a malicious client and</font>

87
00:03:35,760 --> 00:03:40,649
here the<font color="#E5E5E5"> issue isn't really providing</font>

88
00:03:38,190 --> 00:03:43,709
encryption but<font color="#E5E5E5"> it's it's providing good</font>

89
00:03:40,650 --> 00:03:45,810
access control on the server<font color="#E5E5E5"> and and</font>

90
00:03:43,709 --> 00:03:47,489
this<font color="#E5E5E5"> I won't say we've solved this</font>

91
00:03:45,810 --> 00:03:50,549
problem but<font color="#CCCCCC"> we at least know</font><font color="#E5E5E5"> that the</font>

92
00:03:47,489 --> 00:03:52,410
right place to look for this<font color="#CCCCCC"> okay what</font>

93
00:03:50,549 --> 00:03:54,810
<font color="#E5E5E5">we're mostly going to talk about in this</font>

94
00:03:52,410 --> 00:03:56,910
talk<font color="#E5E5E5"> is what happens when you have an</font>

95
00:03:54,810 --> 00:04:01,530
adversary looking at your database

96
00:03:56,910 --> 00:04:03,900
server itself<font color="#CCCCCC"> and here providing</font>

97
00:04:01,530 --> 00:04:05,940
protection seems a lot<font color="#E5E5E5"> more difficult</font>

98
00:04:03,900 --> 00:04:08,310
and<font color="#E5E5E5"> the reason for</font><font color="#CCCCCC"> this is</font><font color="#E5E5E5"> that the</font>

99
00:04:05,940 --> 00:04:12,690
server still needs to<font color="#E5E5E5"> be able to process</font>

100
00:04:08,310 --> 00:04:15,750
queries right<font color="#E5E5E5"> if</font><font color="#CCCCCC"> I have 100 terabyte</font>

101
00:04:12,690 --> 00:04:18,060
database as a server I need to be able

102
00:04:15,750 --> 00:04:20,160
<font color="#CCCCCC">to get you the hundred</font><font color="#E5E5E5"> relevant records</font>

103
00:04:18,060 --> 00:04:22,229
<font color="#E5E5E5">and so I need to be able to figure out</font>

104
00:04:20,160 --> 00:04:23,610
what those records are and so there

105
00:04:22,229 --> 00:04:25,889
seems to<font color="#CCCCCC"> be this inherent tension</font>

106
00:04:23,610 --> 00:04:28,620
between the server<font color="#E5E5E5"> has to learn</font>

107
00:04:25,889 --> 00:04:30,630
something<font color="#CCCCCC"> in order</font><font color="#E5E5E5"> to</font><font color="#CCCCCC"> actually give the</font>

108
00:04:28,620 --> 00:04:32,370
client back the right records<font color="#CCCCCC"> but we</font>

109
00:04:30,630 --> 00:04:36,229
<font color="#E5E5E5">don't want it to learn</font><font color="#CCCCCC"> anything</font><font color="#E5E5E5"> because</font>

110
00:04:32,370 --> 00:04:38,700
then this<font color="#E5E5E5"> data could be compromised</font><font color="#CCCCCC"> okay</font>

111
00:04:36,229 --> 00:04:39,840
so we're going<font color="#CCCCCC"> to</font><font color="#E5E5E5"> talk about today</font>

112
00:04:38,700 --> 00:04:41,849
cryptographically

113
00:04:39,840 --> 00:04:44,369
<font color="#CCCCCC">protected search</font><font color="#E5E5E5"> and this is a set of</font>

114
00:04:41,850 --> 00:04:46,470
schemes that explore this<font color="#E5E5E5"> trade-off so</font>

115
00:04:44,370 --> 00:04:49,940
they try<font color="#CCCCCC"> and say can we</font><font color="#E5E5E5"> get the the</font><font color="#CCCCCC"> most</font>

116
00:04:46,470 --> 00:04:52,650
risk the least risk possible<font color="#E5E5E5"> out of</font>

117
00:04:49,940 --> 00:04:55,229
<font color="#E5E5E5">storing this large-scale data at the</font>

118
00:04:52,650 --> 00:04:56,849
<font color="#E5E5E5">same time keep</font><font color="#CCCCCC"> keep all the rich utility</font>

119
00:04:55,229 --> 00:04:59,699
that we've we've come to know and<font color="#CCCCCC"> love</font>

120
00:04:56,850 --> 00:05:03,600
from databases<font color="#E5E5E5"> which there's an entire</font>

121
00:04:59,699 --> 00:05:06,570
great community<font color="#E5E5E5"> that drives</font><font color="#CCCCCC"> value out of</font>

122
00:05:03,600 --> 00:05:08,580
these<font color="#E5E5E5"> large-scale data sets</font><font color="#CCCCCC"> the first</font>

123
00:05:06,570 --> 00:05:10,469
<font color="#CCCCCC">strawman you can talk about is well we</font>

124
00:05:08,580 --> 00:05:12,300
just<font color="#E5E5E5"> we don't worry about the server at</font>

125
00:05:10,470 --> 00:05:14,880
all we encrypt<font color="#E5E5E5"> data at rest and this has</font>

126
00:05:12,300 --> 00:05:17,190
high<font color="#E5E5E5"> risk to it but high utility</font><font color="#CCCCCC"> because</font>

127
00:05:14,880 --> 00:05:18,719
the server can<font color="#E5E5E5"> do anything it wants</font><font color="#CCCCCC"> the</font>

128
00:05:17,190 --> 00:05:22,050
second<font color="#E5E5E5"> strawman which</font><font color="#CCCCCC"> i</font><font color="#E5E5E5"> briefly</font>

129
00:05:18,720 --> 00:05:24,300
mentioned<font color="#E5E5E5"> is well we just we</font><font color="#CCCCCC"> don't have</font>

130
00:05:22,050 --> 00:05:26,010
the server<font color="#E5E5E5"> process at all every query it</font>

131
00:05:24,300 --> 00:05:28,950
gives you back<font color="#CCCCCC"> the entire data set</font>

132
00:05:26,010 --> 00:05:30,900
obviously this has lower risk but you're

133
00:05:28,950 --> 00:05:33,840
not going to<font color="#E5E5E5"> scale up to any</font><font color="#CCCCCC"> reasonable</font>

134
00:05:30,900 --> 00:05:36,060
<font color="#CCCCCC">size database</font><font color="#E5E5E5"> I also want to mention I'm</font>

135
00:05:33,840 --> 00:05:38,359
not going to talk<font color="#CCCCCC"> about homomorphic</font>

136
00:05:36,060 --> 00:05:41,490
encryption or multi-party computation

137
00:05:38,360 --> 00:05:44,160
<font color="#CCCCCC">these techniques</font><font color="#E5E5E5"> although they solve the</font>

138
00:05:41,490 --> 00:05:46,370
problem in theory<font color="#CCCCCC"> are still way</font><font color="#E5E5E5"> too slow</font>

139
00:05:44,160 --> 00:05:48,900
to use for any practical<font color="#CCCCCC"> sized data</font><font color="#E5E5E5"> sets</font>

140
00:05:46,370 --> 00:05:51,030
<font color="#E5E5E5">okay</font>

141
00:05:48,900 --> 00:05:52,799
<font color="#CCCCCC">I've been</font><font color="#E5E5E5"> calling this cryptographically</font>

142
00:05:51,030 --> 00:05:54,388
protected search there's some other

143
00:05:52,800 --> 00:05:55,979
terms in the literature including

144
00:05:54,389 --> 00:05:58,500
symmetric searchable encryption<font color="#E5E5E5"> and</font>

145
00:05:55,979 --> 00:06:00,630
property preserving encryption<font color="#E5E5E5"> this is</font>

146
00:05:58,500 --> 00:06:03,000
an<font color="#E5E5E5"> umbrella term over both</font><font color="#CCCCCC"> of those and</font>

147
00:06:00,630 --> 00:06:05,639
so the reason why we thought it<font color="#CCCCCC"> was</font>

148
00:06:03,000 --> 00:06:08,130
important to systemize this is well one

149
00:06:05,639 --> 00:06:11,070
there's<font color="#E5E5E5"> been a large volume of work we</font>

150
00:06:08,130 --> 00:06:12,750
<font color="#E5E5E5">have I think</font><font color="#CCCCCC"> I</font><font color="#E5E5E5"> counted</font><font color="#CCCCCC"> 50-plus papers on</font>

151
00:06:11,070 --> 00:06:15,719
ePrint<font color="#CCCCCC"> and this there are multiple</font>

152
00:06:12,750 --> 00:06:18,599
sessions<font color="#E5E5E5"> at CCS last year there's I</font>

153
00:06:15,720 --> 00:06:19,080
think<font color="#CCCCCC"> at least four papers</font><font color="#E5E5E5"> at SNP this</font>

154
00:06:18,599 --> 00:06:21,900
year

155
00:06:19,080 --> 00:06:23,580
<font color="#E5E5E5">second we've seen with the explosion of</font>

156
00:06:21,900 --> 00:06:26,099
secure messaging we've also seen

157
00:06:23,580 --> 00:06:27,990
explosion in commercial products that

158
00:06:26,099 --> 00:06:30,300
<font color="#E5E5E5">are doing protected database search and</font>

159
00:06:27,990 --> 00:06:32,160
these vary from from<font color="#E5E5E5"> startups whose</font>

160
00:06:30,300 --> 00:06:34,380
entire business model<font color="#CCCCCC"> is on protected</font>

161
00:06:32,160 --> 00:06:36,720
<font color="#E5E5E5">search to large companies like Google</font>

162
00:06:34,380 --> 00:06:38,580
<font color="#E5E5E5">and Microsoft in addition you've seen</font>

163
00:06:36,720 --> 00:06:42,500
large-scale government investment<font color="#E5E5E5"> in</font>

164
00:06:38,580 --> 00:06:44,849
<font color="#E5E5E5">this</font><font color="#CCCCCC"> project</font><font color="#E5E5E5"> so</font><font color="#CCCCCC"> I Arfa which is the</font>

165
00:06:42,500 --> 00:06:46,560
<font color="#E5E5E5">Intelligence version of DARPA</font>

166
00:06:44,849 --> 00:06:49,590
has been<font color="#E5E5E5"> working on this problem for</font>

167
00:06:46,560 --> 00:06:52,349
since 2006 and and our team served as

168
00:06:49,590 --> 00:06:53,609
the<font color="#E5E5E5"> evaluation team for that project</font><font color="#CCCCCC"> so</font>

169
00:06:52,349 --> 00:06:55,560
you've seen in

170
00:06:53,610 --> 00:07:02,069
investment and<font color="#E5E5E5"> interest</font><font color="#CCCCCC"> from a wide</font>

171
00:06:55,560 --> 00:07:04,590
variety<font color="#E5E5E5"> of actors okay but just</font><font color="#CCCCCC"> interest</font>

172
00:07:02,069 --> 00:07:06,419
<font color="#E5E5E5">in a space</font><font color="#CCCCCC"> isn't enough of a reason to</font>

173
00:07:04,590 --> 00:07:08,310
systematize<font color="#CCCCCC"> the other thing</font><font color="#E5E5E5"> that's</font>

174
00:07:06,419 --> 00:07:10,530
<font color="#CCCCCC">really important is I laid out this</font><font color="#E5E5E5"> X</font>

175
00:07:08,310 --> 00:07:13,050
and<font color="#CCCCCC"> y-axis and I said there's data</font>

176
00:07:10,530 --> 00:07:16,378
functionality and and risk of data

177
00:07:13,050 --> 00:07:18,509
compromise<font color="#E5E5E5"> it's not clear what either of</font>

178
00:07:16,379 --> 00:07:19,889
those things<font color="#E5E5E5"> means</font><font color="#CCCCCC"> and so what I'm going</font>

179
00:07:18,509 --> 00:07:21,449
<font color="#E5E5E5">to try and walk through in the rest of</font>

180
00:07:19,889 --> 00:07:23,699
the talk is<font color="#CCCCCC"> how we try and pin down a</font>

181
00:07:21,449 --> 00:07:25,650
little<font color="#E5E5E5"> bit more what do we actually mean</font>

182
00:07:23,699 --> 00:07:28,319
when we say oh yeah something<font color="#E5E5E5"> has very</font>

183
00:07:25,650 --> 00:07:29,638
low<font color="#E5E5E5"> risk and very high utility</font><font color="#CCCCCC"> and I'm</font>

184
00:07:28,319 --> 00:07:33,319
going<font color="#CCCCCC"> to start with the risk of data</font>

185
00:07:29,639 --> 00:07:35,879
<font color="#CCCCCC">compromise okay</font>

186
00:07:33,319 --> 00:07:37,620
cryptographers love love making up

187
00:07:35,879 --> 00:07:39,240
definitions<font color="#CCCCCC"> so you think this would</font><font color="#E5E5E5"> be</font>

188
00:07:37,620 --> 00:07:41,099
kind of an<font color="#E5E5E5"> easy thing we'd come up with</font>

189
00:07:39,240 --> 00:07:43,830
three or four definitions<font color="#E5E5E5"> of security</font>

190
00:07:41,099 --> 00:07:45,688
and then we'd say oh<font color="#E5E5E5"> this one's stronger</font>

191
00:07:43,830 --> 00:07:47,580
than this and<font color="#CCCCCC"> and this</font><font color="#E5E5E5"> is kind of the</font>

192
00:07:45,689 --> 00:07:49,830
strongest definition of<font color="#E5E5E5"> security</font><font color="#CCCCCC"> that's</font>

193
00:07:47,580 --> 00:07:52,109
not what happens at<font color="#CCCCCC"> all in this space</font>

194
00:07:49,830 --> 00:07:55,430
and the reason<font color="#CCCCCC"> for that is because</font>

195
00:07:52,110 --> 00:07:57,900
<font color="#CCCCCC">protected search schemes to be efficient</font>

196
00:07:55,430 --> 00:08:00,449
<font color="#E5E5E5">necessarily reveal some</font><font color="#CCCCCC"> information</font>

197
00:07:57,900 --> 00:08:03,539
about<font color="#E5E5E5"> either the underlying data set the</font>

198
00:08:00,449 --> 00:08:05,310
query<font color="#E5E5E5"> or the</font><font color="#CCCCCC"> result</font><font color="#E5E5E5"> set you have to do</font>

199
00:08:03,539 --> 00:08:08,729
this if you want<font color="#CCCCCC"> to get anything</font><font color="#E5E5E5"> close</font>

200
00:08:05,310 --> 00:08:11,879
<font color="#CCCCCC">to unprotected database on performance</font>

201
00:08:08,729 --> 00:08:15,990
<font color="#E5E5E5">and this information</font><font color="#CCCCCC"> is called leakage</font>

202
00:08:11,879 --> 00:08:18,080
or information leakage and this makes

203
00:08:15,990 --> 00:08:21,360
things<font color="#E5E5E5"> really tricky because you can</font>

204
00:08:18,080 --> 00:08:24,029
provide the strongest<font color="#E5E5E5"> looking definition</font>

205
00:08:21,360 --> 00:08:26,370
and then provide leakage to one party

206
00:08:24,029 --> 00:08:28,439
<font color="#CCCCCC">that says oh they learn all</font><font color="#E5E5E5"> the</font><font color="#CCCCCC"> secret</font>

207
00:08:26,370 --> 00:08:30,960
<font color="#CCCCCC">state in the system</font><font color="#E5E5E5"> you</font><font color="#CCCCCC"> can go through a</font>

208
00:08:28,439 --> 00:08:35,479
perfectly valid looking security proof

209
00:08:30,960 --> 00:08:38,299
while providing no protection at all and

210
00:08:35,479 --> 00:08:41,250
what what we<font color="#E5E5E5"> find is in the literature</font>

211
00:08:38,299 --> 00:08:43,078
<font color="#E5E5E5">everybody does they they come up with</font>

212
00:08:41,250 --> 00:08:45,300
leakage functions that make their proofs

213
00:08:43,078 --> 00:08:47,160
work and so you can have<font color="#E5E5E5"> two</font><font color="#CCCCCC"> different</font>

214
00:08:45,300 --> 00:08:50,099
papers<font color="#CCCCCC"> that are leaking the</font><font color="#E5E5E5"> exact same</font>

215
00:08:47,160 --> 00:08:51,630
things<font color="#CCCCCC"> but they are stated in different</font>

216
00:08:50,100 --> 00:08:53,399
ways and it's not<font color="#E5E5E5"> possible</font><font color="#CCCCCC"> for two</font>

217
00:08:51,630 --> 00:08:56,310
people<font color="#CCCCCC"> to tell and so there's been no</font>

218
00:08:53,399 --> 00:08:57,930
<font color="#E5E5E5">way to</font><font color="#CCCCCC"> actually compare</font><font color="#E5E5E5"> is the system</font>

219
00:08:56,310 --> 00:09:00,810
more<font color="#CCCCCC"> or less secure than this</font><font color="#E5E5E5"> other</font>

220
00:08:57,930 --> 00:09:03,120
system<font color="#E5E5E5"> okay so one of the things we did</font>

221
00:09:00,810 --> 00:09:05,699
in this work is we defined a common

222
00:09:03,120 --> 00:09:07,320
<font color="#CCCCCC">language for</font><font color="#E5E5E5"> leakage and we define five</font>

223
00:09:05,699 --> 00:09:11,219
types of leakage of<font color="#CCCCCC"> increase</font>

224
00:09:07,320 --> 00:09:14,279
impact<font color="#CCCCCC"> so the first</font><font color="#E5E5E5"> we call structure</font>

225
00:09:11,220 --> 00:09:17,730
and this<font color="#E5E5E5"> is information that</font><font color="#CCCCCC"> can only be</font>

226
00:09:14,279 --> 00:09:20,300
hidden by padding so if you have a query

227
00:09:17,730 --> 00:09:23,220
result set that<font color="#E5E5E5"> returns three records</font>

228
00:09:20,300 --> 00:09:25,290
you have to leak<font color="#E5E5E5"> that information unless</font>

229
00:09:23,220 --> 00:09:27,360
you're<font color="#E5E5E5"> just going to Pat it</font><font color="#CCCCCC"> and you can</font>

230
00:09:25,290 --> 00:09:30,630
<font color="#CCCCCC">pad on kind</font><font color="#E5E5E5"> of a small scale but</font><font color="#CCCCCC"> there's</font>

231
00:09:27,360 --> 00:09:32,370
<font color="#E5E5E5">very little hope that somebody at the</font>

232
00:09:30,630 --> 00:09:33,839
server is not<font color="#CCCCCC"> going to be able to</font>

233
00:09:32,370 --> 00:09:35,970
distinguish<font color="#CCCCCC"> between a query</font><font color="#E5E5E5"> that returns</font>

234
00:09:33,839 --> 00:09:38,579
zero records and one that returns a

235
00:09:35,970 --> 00:09:40,199
million you're not going to make every

236
00:09:38,579 --> 00:09:43,199
single query<font color="#E5E5E5"> you process return a</font>

237
00:09:40,199 --> 00:09:45,300
million records<font color="#CCCCCC"> okay</font><font color="#E5E5E5"> so this is the</font>

238
00:09:43,199 --> 00:09:47,490
least<font color="#E5E5E5"> harmful but actually the example</font>

239
00:09:45,300 --> 00:09:48,689
<font color="#E5E5E5">I'm going to show coming up</font><font color="#CCCCCC"> only</font><font color="#E5E5E5"> relies</font>

240
00:09:47,490 --> 00:09:50,910
on this<font color="#E5E5E5"> information</font>

241
00:09:48,690 --> 00:09:53,279
the second type we call<font color="#CCCCCC"> identifier z'</font>

242
00:09:50,910 --> 00:09:55,439
<font color="#E5E5E5">and this is not information about the</font>

243
00:09:53,279 --> 00:09:57,389
<font color="#E5E5E5">underlying data itself but</font><font color="#CCCCCC"> is</font>

244
00:09:55,440 --> 00:10:00,360
information<font color="#CCCCCC"> that</font><font color="#E5E5E5"> persists throughout</font>

245
00:09:57,389 --> 00:10:02,699
time<font color="#E5E5E5"> so you might learn</font><font color="#CCCCCC"> that the same</font>

246
00:10:00,360 --> 00:10:04,980
data record is returned across multiple

247
00:10:02,699 --> 00:10:08,430
queries<font color="#E5E5E5"> without learning anything about</font>

248
00:10:04,980 --> 00:10:10,199
<font color="#CCCCCC">the underlying</font><font color="#E5E5E5"> data</font><font color="#CCCCCC"> okay</font><font color="#E5E5E5"> third we call</font>

249
00:10:08,430 --> 00:10:12,599
<font color="#E5E5E5">predicate switch is identifies that</font>

250
00:10:10,199 --> 00:10:14,010
persist over time<font color="#E5E5E5"> as well as a bit of</font>

251
00:10:12,600 --> 00:10:15,959
<font color="#E5E5E5">information this might be some</font>

252
00:10:14,010 --> 00:10:18,230
statistics about<font color="#CCCCCC"> the</font><font color="#E5E5E5"> data without</font>

253
00:10:15,959 --> 00:10:21,420
revealing<font color="#E5E5E5"> the actual record itself</font><font color="#CCCCCC"> a</font>

254
00:10:18,230 --> 00:10:24,149
quality which allows you to<font color="#E5E5E5"> test if two</font>

255
00:10:21,420 --> 00:10:26,130
fields<font color="#E5E5E5"> are equal and essentially allows</font>

256
00:10:24,149 --> 00:10:26,819
you to compute<font color="#E5E5E5"> frequencies statistics</font>

257
00:10:26,130 --> 00:10:29,430
over the data

258
00:10:26,819 --> 00:10:31,260
and lastly<font color="#CCCCCC"> ordering which allows you to</font>

259
00:10:29,430 --> 00:10:34,079
<font color="#E5E5E5">not</font><font color="#CCCCCC"> only test equality but come up</font><font color="#E5E5E5"> with</font>

260
00:10:31,260 --> 00:10:36,720
a fully ordered list of<font color="#E5E5E5"> attributes</font>

261
00:10:34,079 --> 00:10:41,040
there's an implicit<font color="#CCCCCC"> six</font><font color="#E5E5E5"> type which is</font>

262
00:10:36,720 --> 00:10:43,019
just you reveal<font color="#CCCCCC"> the data</font><font color="#E5E5E5"> okay now what</font>

263
00:10:41,040 --> 00:10:44,610
we find is not<font color="#E5E5E5"> only are these there are</font>

264
00:10:43,019 --> 00:10:46,050
these<font color="#E5E5E5"> five different types of leakage</font>

265
00:10:44,610 --> 00:10:48,329
<font color="#E5E5E5">but we find that</font><font color="#CCCCCC"> there are schemes</font><font color="#E5E5E5"> that</font>

266
00:10:46,050 --> 00:10:51,389
leak this<font color="#E5E5E5"> information</font><font color="#CCCCCC"> at initialization</font>

267
00:10:48,329 --> 00:10:52,769
for the entire data<font color="#E5E5E5"> set and then there's</font>

268
00:10:51,389 --> 00:10:56,939
schemes that only leak this<font color="#E5E5E5"> information</font>

269
00:10:52,769 --> 00:10:59,819
<font color="#CCCCCC">at query for the relevant records and we</font>

270
00:10:56,939 --> 00:11:01,649
we find that essentially all all<font color="#E5E5E5"> ten of</font>

271
00:10:59,819 --> 00:11:03,870
<font color="#CCCCCC">these possibilities exist in the</font>

272
00:11:01,649 --> 00:11:06,000
<font color="#E5E5E5">literature somewhere and the reason this</font>

273
00:11:03,870 --> 00:11:07,620
<font color="#CCCCCC">is important</font><font color="#E5E5E5"> is in the last couple</font><font color="#CCCCCC"> of</font>

274
00:11:06,000 --> 00:11:09,300
<font color="#E5E5E5">years we've</font><font color="#CCCCCC"> seen</font><font color="#E5E5E5"> people take these</font>

275
00:11:07,620 --> 00:11:11,699
leakage functions and turn them into

276
00:11:09,300 --> 00:11:13,589
actual practical attacks<font color="#E5E5E5"> so I'm going to</font>

277
00:11:11,699 --> 00:11:15,779
give just<font color="#CCCCCC"> a toy example of what those</font>

278
00:11:13,589 --> 00:11:17,730
attacks look like right now<font color="#CCCCCC"> so we have</font>

279
00:11:15,779 --> 00:11:19,800
<font color="#CCCCCC">an example Hospital data</font><font color="#E5E5E5"> set we have</font>

280
00:11:17,730 --> 00:11:21,030
birth month length of stay gender

281
00:11:19,800 --> 00:11:23,490
diagnosis and

282
00:11:21,030 --> 00:11:25,170
<font color="#CCCCCC">Social Security number</font><font color="#E5E5E5"> okay</font><font color="#CCCCCC"> and all</font>

283
00:11:23,490 --> 00:11:27,690
we're going<font color="#E5E5E5"> to assume is that the server</font>

284
00:11:25,170 --> 00:11:30,060
sees which field is queried how many

285
00:11:27,690 --> 00:11:32,790
<font color="#E5E5E5">records come back and that records are</font>

286
00:11:30,060 --> 00:11:34,410
identifiable<font color="#E5E5E5"> okay</font><font color="#CCCCCC"> I'm not</font><font color="#E5E5E5"> going</font><font color="#CCCCCC"> to</font>

287
00:11:32,790 --> 00:11:38,250
assume<font color="#E5E5E5"> anything else about the way this</font>

288
00:11:34,410 --> 00:11:40,439
<font color="#E5E5E5">system works</font><font color="#CCCCCC"> and so what we</font><font color="#E5E5E5"> can do is</font>

289
00:11:38,250 --> 00:11:42,120
<font color="#E5E5E5">just based on seeing these queries where</font>

290
00:11:40,440 --> 00:11:44,460
we know<font color="#E5E5E5"> nothing about what</font><font color="#CCCCCC"> was queried</font>

291
00:11:42,120 --> 00:11:47,700
we can build a histogram<font color="#E5E5E5"> where the x</font>

292
00:11:44,460 --> 00:11:51,090
<font color="#E5E5E5">axis rather than having true values just</font>

293
00:11:47,700 --> 00:11:52,920
<font color="#E5E5E5">has some masked values okay and</font><font color="#CCCCCC"> I just</font>

294
00:11:51,090 --> 00:11:55,560
create this<font color="#E5E5E5"> unique</font><font color="#CCCCCC"> identifier based on</font>

295
00:11:52,920 --> 00:11:57,300
these<font color="#CCCCCC"> masked values so what I can then</font>

296
00:11:55,560 --> 00:11:59,310
do<font color="#CCCCCC"> is we've we've heard about</font>

297
00:11:57,300 --> 00:12:01,680
<font color="#E5E5E5">differential privacy already today</font><font color="#CCCCCC"> I can</font>

298
00:11:59,310 --> 00:12:03,569
use statistical priors<font color="#E5E5E5"> so I can go for</font>

299
00:12:01,680 --> 00:12:07,589
<font color="#E5E5E5">example to the National Institutes of</font>

300
00:12:03,570 --> 00:12:09,930
Health<font color="#E5E5E5"> and I can download how long</font>

301
00:12:07,590 --> 00:12:13,710
people stay<font color="#E5E5E5"> in hospitals</font><font color="#CCCCCC"> and this is</font>

302
00:12:09,930 --> 00:12:17,459
this<font color="#CCCCCC"> is on your</font><font color="#E5E5E5"> right</font>

303
00:12:13,710 --> 00:12:20,100
on<font color="#E5E5E5"> your left this is how long people</font>

304
00:12:17,460 --> 00:12:21,690
stay<font color="#E5E5E5"> in hospitals so the longest most</font>

305
00:12:20,100 --> 00:12:25,680
people stay in hospitals<font color="#E5E5E5"> for</font><font color="#CCCCCC"> four days</font>

306
00:12:21,690 --> 00:12:28,410
<font color="#E5E5E5">and so we can actually then recover</font><font color="#CCCCCC"> okay</font>

307
00:12:25,680 --> 00:12:31,439
<font color="#CCCCCC">that query that</font><font color="#E5E5E5"> we saw was for people</font>

308
00:12:28,410 --> 00:12:33,870
staying in hospitals in<font color="#E5E5E5"> four days okay</font>

309
00:12:31,440 --> 00:12:36,990
now this is<font color="#E5E5E5"> a very simple attack we're</font>

310
00:12:33,870 --> 00:12:38,370
just basically matching histograms<font color="#E5E5E5"> but</font>

311
00:12:36,990 --> 00:12:40,470
you can<font color="#E5E5E5"> make this attack a lot more</font>

312
00:12:38,370 --> 00:12:42,840
<font color="#CCCCCC">sophisticated in fact people do this and</font>

313
00:12:40,470 --> 00:12:44,580
<font color="#E5E5E5">they</font><font color="#CCCCCC"> do this</font><font color="#E5E5E5"> well for one</font><font color="#CCCCCC"> reason they do</font>

314
00:12:42,840 --> 00:12:48,060
it if their statistical prior is

315
00:12:44,580 --> 00:12:49,860
inaccurate<font color="#CCCCCC"> or if if the number</font><font color="#E5E5E5"> of</font>

316
00:12:48,060 --> 00:12:51,530
<font color="#CCCCCC">records returned by queries is much</font>

317
00:12:49,860 --> 00:12:55,200
closer<font color="#CCCCCC"> than what</font><font color="#E5E5E5"> we see in</font><font color="#CCCCCC"> this diagram</font>

318
00:12:51,530 --> 00:12:58,199
<font color="#CCCCCC">and importantly this this attack is only</font>

319
00:12:55,200 --> 00:12:59,760
<font color="#E5E5E5">going after</font><font color="#CCCCCC"> a single</font><font color="#E5E5E5"> field here a lot of</font>

320
00:12:58,200 --> 00:13:02,340
leakage attacks<font color="#E5E5E5"> actually exploit</font>

321
00:12:59,760 --> 00:13:04,260
correlation between fields<font color="#E5E5E5"> so for</font>

322
00:13:02,340 --> 00:13:06,990
<font color="#E5E5E5">example length of stay and gender are</font>

323
00:13:04,260 --> 00:13:11,060
correlated men tend<font color="#E5E5E5"> to stay in hospital</font>

324
00:13:06,990 --> 00:13:14,970
<font color="#E5E5E5">for longer time than women do okay um</font>

325
00:13:11,060 --> 00:13:18,390
and so what we find based on this this

326
00:13:14,970 --> 00:13:20,490
leakage language is we find three main

327
00:13:18,390 --> 00:13:23,189
approaches to protect a database search

328
00:13:20,490 --> 00:13:25,710
<font color="#E5E5E5">the first of these we call the legacy</font>

329
00:13:23,190 --> 00:13:29,520
approach and these are schemes<font color="#E5E5E5"> that try</font>

330
00:13:25,710 --> 00:13:30,690
and not modify a database engine that

331
00:13:29,520 --> 00:13:32,010
already exists<font color="#CCCCCC"> and</font>

332
00:13:30,690 --> 00:13:35,460
so what they're trying<font color="#CCCCCC"> to do is they're</font>

333
00:13:32,010 --> 00:13:37,710
<font color="#CCCCCC">trying</font><font color="#E5E5E5"> to insert and query for encrypted</font>

334
00:13:35,460 --> 00:13:40,080
data<font color="#CCCCCC"> and the great thing about this</font>

335
00:13:37,710 --> 00:13:43,170
approach<font color="#E5E5E5"> is</font><font color="#CCCCCC"> that it</font><font color="#E5E5E5"> inherits any new</font>

336
00:13:40,080 --> 00:13:46,560
database<font color="#E5E5E5"> advanced that you</font><font color="#CCCCCC"> get if you</font>

337
00:13:43,170 --> 00:13:49,380
come up<font color="#CCCCCC"> with</font><font color="#E5E5E5"> a faster version of a B+</font>

338
00:13:46,560 --> 00:13:51,500
tree this automatically<font color="#E5E5E5"> gets faster but</font>

339
00:13:49,380 --> 00:13:54,090
these schemes<font color="#E5E5E5"> tend to leak at</font>

340
00:13:51,500 --> 00:13:56,880
initialization time about the entire

341
00:13:54,090 --> 00:13:59,100
data set and it's worth noting<font color="#CCCCCC"> that most</font>

342
00:13:56,880 --> 00:14:02,180
commercial products use some variant of

343
00:13:59,100 --> 00:14:05,670
a legacy scheme the other<font color="#E5E5E5"> approach is</font>

344
00:14:02,180 --> 00:14:08,880
what we call custom and so here people

345
00:14:05,670 --> 00:14:10,740
<font color="#E5E5E5">rip out the the unprotected database and</font>

346
00:14:08,880 --> 00:14:12,950
build<font color="#E5E5E5"> a new database from scratch that</font>

347
00:14:10,740 --> 00:14:16,050
<font color="#CCCCCC">is designed to</font><font color="#E5E5E5"> handle</font>

348
00:14:12,950 --> 00:14:19,170
protected search queries these schemes

349
00:14:16,050 --> 00:14:21,120
tend to only leak at query time and tend

350
00:14:19,170 --> 00:14:23,400
<font color="#E5E5E5">to have lower leakage but also worse</font>

351
00:14:21,120 --> 00:14:25,920
<font color="#CCCCCC">performance than legacy scheme</font><font color="#E5E5E5"> we also</font>

352
00:14:23,400 --> 00:14:29,069
single out a subclass of this that we

353
00:14:25,920 --> 00:14:31,050
call it oblivious schemes<font color="#E5E5E5"> that really</font>

354
00:14:29,070 --> 00:14:33,720
work to hide<font color="#CCCCCC"> identifier is between</font>

355
00:14:31,050 --> 00:14:35,520
repeated queries<font color="#E5E5E5"> and so they leak only</font>

356
00:14:33,720 --> 00:14:37,500
structure<font color="#E5E5E5"> but currently they they</font>

357
00:14:35,520 --> 00:14:41,850
require<font color="#E5E5E5"> multiple servers to get</font>

358
00:14:37,500 --> 00:14:45,510
something close<font color="#E5E5E5"> to efficiency and so</font>

359
00:14:41,850 --> 00:14:48,110
what we find is<font color="#CCCCCC"> that security</font><font color="#E5E5E5"> wise these</font>

360
00:14:45,510 --> 00:14:50,880
these<font color="#E5E5E5"> three types have very different</font>

361
00:14:48,110 --> 00:14:53,280
performance functionality guarantees as

362
00:14:50,880 --> 00:14:55,410
well as<font color="#E5E5E5"> security guarantees and we find</font>

363
00:14:53,280 --> 00:14:57,449
that<font color="#E5E5E5"> legacy schemes are most appropriate</font>

364
00:14:55,410 --> 00:15:00,540
<font color="#CCCCCC">to use when your data has high entropy</font>

365
00:14:57,450 --> 00:15:02,430
<font color="#CCCCCC">and a sparse</font><font color="#E5E5E5"> custom systems provide much</font>

366
00:15:00,540 --> 00:15:05,160
better security guarantees if you're

367
00:15:02,430 --> 00:15:07,319
only going to<font color="#CCCCCC"> be</font><font color="#E5E5E5"> getting a small</font>

368
00:15:05,160 --> 00:15:09,480
fraction<font color="#E5E5E5"> of the database back in queries</font>

369
00:15:07,320 --> 00:15:11,700
and finally oblivious<font color="#CCCCCC"> scheme</font><font color="#E5E5E5"> should be</font>

370
00:15:09,480 --> 00:15:13,440
<font color="#E5E5E5">using if you're you should be using if</font>

371
00:15:11,700 --> 00:15:17,250
you're<font color="#E5E5E5"> regularly getting a large</font>

372
00:15:13,440 --> 00:15:18,990
fraction of the database back so that's

373
00:15:17,250 --> 00:15:20,670
what I wanted to<font color="#E5E5E5"> say</font><font color="#CCCCCC"> about security and</font>

374
00:15:18,990 --> 00:15:23,370
time I have left<font color="#E5E5E5"> I'll talk about</font>

375
00:15:20,670 --> 00:15:27,150
functionality<font color="#CCCCCC"> okay so I'll talk about</font>

376
00:15:23,370 --> 00:15:29,760
utility now utility we review is some

377
00:15:27,150 --> 00:15:33,959
convex combination of<font color="#E5E5E5"> functionality and</font>

378
00:15:29,760 --> 00:15:35,330
<font color="#E5E5E5">performance and so the first thing we</font>

379
00:15:33,960 --> 00:15:37,440
did<font color="#CCCCCC"> is we developed</font><font color="#E5E5E5"> a database</font>

380
00:15:35,330 --> 00:15:39,000
instrumentation platform as<font color="#E5E5E5"> well</font><font color="#CCCCCC"> as</font><font color="#E5E5E5"> the</font>

381
00:15:37,440 --> 00:15:41,339
<font color="#E5E5E5">data and query</font><font color="#CCCCCC"> generator that's been</font>

382
00:15:39,000 --> 00:15:44,209
used in a lot of prior work<font color="#E5E5E5"> to come up</font>

383
00:15:41,339 --> 00:15:46,059
with their performance results<font color="#CCCCCC"> the</font>

384
00:15:44,209 --> 00:15:49,040
should be open sourced<font color="#CCCCCC"> within the week</font>

385
00:15:46,059 --> 00:15:52,368
<font color="#CCCCCC">but you can bother</font><font color="#E5E5E5"> me and I'll tell you</font>

386
00:15:49,040 --> 00:15:54,110
when it<font color="#E5E5E5"> gets out</font><font color="#CCCCCC"> and so this is this</font><font color="#E5E5E5"> is</font>

387
00:15:52,369 --> 00:15:55,999
how we characterize performance of these

388
00:15:54,110 --> 00:15:59,559
<font color="#E5E5E5">schemes and we test them</font><font color="#CCCCCC"> at large scale</font>

389
00:15:55,999 --> 00:15:59,559
up<font color="#E5E5E5"> to up to terabytes</font>

390
00:15:59,679 --> 00:16:04,369
the second thing which is how do<font color="#E5E5E5"> we</font>

391
00:16:02,809 --> 00:16:06,889
measure functionality is a little bit

392
00:16:04,369 --> 00:16:08,540
more different<font color="#E5E5E5"> difficult the natural</font>

393
00:16:06,889 --> 00:16:10,670
thing<font color="#CCCCCC"> you might</font><font color="#E5E5E5"> want to do is say well</font>

394
00:16:08,540 --> 00:16:13,550
<font color="#E5E5E5">what fraction of an unprotected database</font>

395
00:16:10,670 --> 00:16:16,368
<font color="#CCCCCC">language is supported but</font><font color="#E5E5E5"> no</font>

396
00:16:13,550 --> 00:16:18,378
cryptographer goes out in and the first

397
00:16:16,369 --> 00:16:20,240
thing they do is<font color="#CCCCCC"> implement</font><font color="#E5E5E5"> syntactic</font>

398
00:16:18,379 --> 00:16:22,850
sugar<font color="#CCCCCC"> they want to focus on core</font>

399
00:16:20,240 --> 00:16:25,429
functionality<font color="#E5E5E5"> and so we we find systems</font>

400
00:16:22,850 --> 00:16:28,459
actually<font color="#CCCCCC"> do is</font><font color="#E5E5E5"> they focus on one</font><font color="#CCCCCC"> or two</font>

401
00:16:25,429 --> 00:16:30,619
<font color="#E5E5E5">base queries</font><font color="#CCCCCC"> using cryptography and the</font>

402
00:16:28,459 --> 00:16:32,599
examples we find the literature or<font color="#E5E5E5"> key</font>

403
00:16:30,619 --> 00:16:35,089
<font color="#E5E5E5">word equality range search boolean</font>

404
00:16:32,600 --> 00:16:37,970
combination<font color="#E5E5E5"> and some specialized systems</font>

405
00:16:35,089 --> 00:16:40,129
<font color="#E5E5E5">and then what they do is they combine</font>

406
00:16:37,970 --> 00:16:41,569
these<font color="#E5E5E5"> base queries in a</font><font color="#CCCCCC"> blackbox way</font><font color="#E5E5E5"> in</font>

407
00:16:40,129 --> 00:16:43,939
a way<font color="#E5E5E5"> that doesn't depend on</font><font color="#CCCCCC"> the</font>

408
00:16:41,569 --> 00:16:46,550
cryptographic implementation so for

409
00:16:43,939 --> 00:16:48,199
example you can turn a range search into

410
00:16:46,550 --> 00:16:51,829
a<font color="#E5E5E5"> quality search we're just searching</font>

411
00:16:48,199 --> 00:16:53,479
<font color="#E5E5E5">for everything between</font><font color="#CCCCCC"> a a and this</font><font color="#E5E5E5"> this</font>

412
00:16:51,829 --> 00:16:56,388
approach is important because it<font color="#E5E5E5"> allows</font>

413
00:16:53,480 --> 00:16:58,309
<font color="#E5E5E5">you to expand functionality quickly but</font>

414
00:16:56,389 --> 00:17:00,889
it also tends to be<font color="#E5E5E5"> less efficient and</font>

415
00:16:58,309 --> 00:17:06,428
have more leakage so both of<font color="#E5E5E5"> these</font>

416
00:17:00,889 --> 00:17:09,020
approaches we we<font color="#E5E5E5"> find are valid so I</font>

417
00:17:06,429 --> 00:17:12,230
said that the the thing we'd really like

418
00:17:09,020 --> 00:17:14,240
<font color="#CCCCCC">to do is ask what what fraction of the</font>

419
00:17:12,230 --> 00:17:15,079
language is supported and<font color="#E5E5E5"> that seems to</font>

420
00:17:14,240 --> 00:17:17,240
<font color="#CCCCCC">be difficult</font>

421
00:17:15,079 --> 00:17:19,849
what's a little<font color="#CCCCCC"> bit</font><font color="#E5E5E5"> more manageable</font><font color="#CCCCCC"> is</font>

422
00:17:17,240 --> 00:17:22,760
we<font color="#CCCCCC"> actually find that unprotected</font>

423
00:17:19,849 --> 00:17:25,730
systems have the<font color="#CCCCCC"> same approach</font><font color="#E5E5E5"> they come</font>

424
00:17:22,760 --> 00:17:27,529
up with a mathematical<font color="#E5E5E5"> basis for for</font>

425
00:17:25,730 --> 00:17:29,419
<font color="#E5E5E5">queries that they want</font><font color="#CCCCCC"> answer and</font><font color="#E5E5E5"> then</font>

426
00:17:27,529 --> 00:17:31,820
everything else<font color="#E5E5E5"> is answered using a</font>

427
00:17:29,419 --> 00:17:34,549
combination of<font color="#E5E5E5"> those queries particular</font>

428
00:17:31,820 --> 00:17:37,928
<font color="#E5E5E5">SQL has the set theoretic mathematical</font>

429
00:17:34,549 --> 00:17:40,639
basis of of Union<font color="#CCCCCC"> set difference</font><font color="#E5E5E5"> join</font>

430
00:17:37,929 --> 00:17:42,890
projection and selection and so<font color="#E5E5E5"> rather</font>

431
00:17:40,640 --> 00:17:44,419
<font color="#E5E5E5">than trying to evaluate the entire SQL</font>

432
00:17:42,890 --> 00:17:46,640
language<font color="#E5E5E5"> we just look at these five</font>

433
00:17:44,419 --> 00:17:48,140
things<font color="#E5E5E5"> and ask have we covered these</font>

434
00:17:46,640 --> 00:17:50,149
base queries and do we know<font color="#E5E5E5"> how to</font>

435
00:17:48,140 --> 00:17:52,909
combine<font color="#E5E5E5"> them together in the same way</font>

436
00:17:50,149 --> 00:17:56,389
<font color="#CCCCCC">that you</font><font color="#E5E5E5"> can in an SQL system and we</font>

437
00:17:52,909 --> 00:17:57,960
find<font color="#E5E5E5"> this is</font><font color="#CCCCCC"> really important for for</font>

438
00:17:56,389 --> 00:17:59,428
well the first thing we

439
00:17:57,960 --> 00:18:02,010
<font color="#E5E5E5">mind is</font><font color="#CCCCCC"> that when we look at</font><font color="#E5E5E5"> this</font>

440
00:17:59,429 --> 00:18:03,240
approach we can<font color="#E5E5E5"> say oh yes</font><font color="#CCCCCC"> we have four</font>

441
00:18:02,010 --> 00:18:04,590
out of the five<font color="#E5E5E5"> of these pretty</font>

442
00:18:03,240 --> 00:18:06,450
<font color="#CCCCCC">well-covered and there's some more work</font>

443
00:18:04,590 --> 00:18:08,490
<font color="#E5E5E5">that</font><font color="#CCCCCC"> needs to</font><font color="#E5E5E5"> be done</font><font color="#CCCCCC"> unjoined so this</font>

444
00:18:06,450 --> 00:18:11,159
allows<font color="#CCCCCC"> us as a community to</font><font color="#E5E5E5"> focus our</font>

445
00:18:08,490 --> 00:18:13,049
<font color="#E5E5E5">efforts a little bit more and the second</font>

446
00:18:11,159 --> 00:18:17,279
thing<font color="#E5E5E5"> it allows</font><font color="#CCCCCC"> us</font><font color="#E5E5E5"> to do is look forward</font>

447
00:18:13,049 --> 00:18:19,379
so SQL<font color="#E5E5E5"> was introduced in 1970 and it</font>

448
00:18:17,279 --> 00:18:22,679
<font color="#E5E5E5">became the dominant database paradigm in</font>

449
00:18:19,380 --> 00:18:25,020
1970 with commercial<font color="#CCCCCC"> open source systems</font>

450
00:18:22,679 --> 00:18:26,700
<font color="#E5E5E5">and so when cryptographers started</font>

451
00:18:25,020 --> 00:18:29,340
working on protected search in the<font color="#E5E5E5"> mid</font>

452
00:18:26,700 --> 00:18:31,890
<font color="#CCCCCC">90s we said oh yes we'll go secure SQL</font>

453
00:18:29,340 --> 00:18:33,779
and we went off into crypto land and

454
00:18:31,890 --> 00:18:36,149
started<font color="#CCCCCC"> doing that and</font><font color="#E5E5E5"> while we were</font>

455
00:18:33,779 --> 00:18:38,130
<font color="#E5E5E5">doing that</font><font color="#CCCCCC"> for the</font><font color="#E5E5E5"> last 20 years you</font><font color="#CCCCCC"> had</font>

456
00:18:36,149 --> 00:18:39,809
no sequel<font color="#CCCCCC"> key-value come out you had</font>

457
00:18:38,130 --> 00:18:41,580
graph<font color="#E5E5E5"> databases come out you had new</font>

458
00:18:39,809 --> 00:18:43,678
sequel come out you had<font color="#CCCCCC"> poly</font><font color="#E5E5E5"> store</font>

459
00:18:41,580 --> 00:18:47,010
databases come out we're now four to

460
00:18:43,679 --> 00:18:48,990
five database generations<font color="#CCCCCC"> behind</font><font color="#E5E5E5"> and so</font>

461
00:18:47,010 --> 00:18:51,960
<font color="#E5E5E5">the question to ask is</font><font color="#CCCCCC"> how can we</font>

462
00:18:48,990 --> 00:18:54,029
possibly catch up if we start working on

463
00:18:51,960 --> 00:18:56,490
key value systems now well they're going

464
00:18:54,029 --> 00:18:59,070
<font color="#E5E5E5">to be six generations behind when</font><font color="#CCCCCC"> we</font>

465
00:18:56,490 --> 00:19:01,409
catch up the last thing I want to<font color="#E5E5E5"> leave</font>

466
00:18:59,070 --> 00:19:03,990
<font color="#CCCCCC">with</font><font color="#E5E5E5"> is we think this basis and</font>

467
00:19:01,409 --> 00:19:06,320
combination<font color="#E5E5E5"> approach is the key to</font>

468
00:19:03,990 --> 00:19:08,399
getting protected search<font color="#E5E5E5"> up to</font>

469
00:19:06,320 --> 00:19:11,520
unprotected database search and getting

470
00:19:08,399 --> 00:19:13,320
it actually used in<font color="#E5E5E5"> the real world in</font>

471
00:19:11,520 --> 00:19:15,809
<font color="#E5E5E5">particular we're advocating a three</font>

472
00:19:13,320 --> 00:19:18,120
pronged approach which is cryptographers

473
00:19:15,809 --> 00:19:20,520
and database experts work together to do

474
00:19:18,120 --> 00:19:22,320
three things<font color="#E5E5E5"> first we identify base</font>

475
00:19:20,520 --> 00:19:24,120
queries they're going to be used across

476
00:19:22,320 --> 00:19:25,799
database paradigms and make these as

477
00:19:24,120 --> 00:19:30,090
efficient as<font color="#CCCCCC"> possible for example</font>

478
00:19:25,799 --> 00:19:32,610
<font color="#E5E5E5">keyword equality second we say does</font>

479
00:19:30,090 --> 00:19:35,250
doesn't<font color="#CCCCCC"> an emerging database paradigm</font>

480
00:19:32,610 --> 00:19:37,559
does it have<font color="#CCCCCC"> new base queries or does it</font>

481
00:19:35,250 --> 00:19:39,330
just<font color="#E5E5E5"> focus on on different functionality</font>

482
00:19:37,559 --> 00:19:42,270
aspects than what we've<font color="#CCCCCC"> seen before</font><font color="#E5E5E5"> and</font>

483
00:19:39,330 --> 00:19:44,460
then we quickly<font color="#E5E5E5"> fill these gaps using</font>

484
00:19:42,270 --> 00:19:47,250
combination approach so that<font color="#CCCCCC"> we're not</font>

485
00:19:44,460 --> 00:19:48,690
<font color="#CCCCCC">always trying to redesign</font><font color="#E5E5E5"> crypto from</font>

486
00:19:47,250 --> 00:19:50,520
the ground up<font color="#CCCCCC"> every time there's a new</font>

487
00:19:48,690 --> 00:19:54,289
database paradigm<font color="#E5E5E5"> and with that I'll</font>

488
00:19:50,520 --> 00:19:54,289
stop<font color="#CCCCCC"> and take questions thanks everyone</font>

489
00:19:58,650 --> 00:20:08,860
so we have some<font color="#E5E5E5"> some time for</font><font color="#CCCCCC"> questions</font>

490
00:20:02,620 --> 00:20:11,139
<font color="#CCCCCC">so I'll start and I was wondering I you</font>

491
00:20:08,860 --> 00:20:13,840
know the the approach that you outline

492
00:20:11,140 --> 00:20:15,370
<font color="#CCCCCC">of securing the sequel operations makes</font>

493
00:20:13,840 --> 00:20:17,350
makes a lot of sense<font color="#E5E5E5"> but I wonder</font><font color="#CCCCCC"> you</font>

494
00:20:15,370 --> 00:20:19,360
<font color="#E5E5E5">know not in that we're in the age of</font>

495
00:20:17,350 --> 00:20:21,129
data<font color="#E5E5E5"> analytics and machine</font><font color="#CCCCCC"> learning and</font>

496
00:20:19,360 --> 00:20:24,760
<font color="#CCCCCC">data mining</font><font color="#E5E5E5"> yeah now what role do you</font>

497
00:20:21,130 --> 00:20:26,590
<font color="#E5E5E5">see</font><font color="#CCCCCC"> - you know approaches that will</font>

498
00:20:24,760 --> 00:20:28,990
provide<font color="#E5E5E5"> some try to provide some</font><font color="#CCCCCC"> sort of</font>

499
00:20:26,590 --> 00:20:31,389
security for these types of inferences

500
00:20:28,990 --> 00:20:33,460
<font color="#E5E5E5">made on the data yeah I think this is a</font>

501
00:20:31,390 --> 00:20:35,049
hugely important question<font color="#CCCCCC"> so one of the</font>

502
00:20:33,460 --> 00:20:37,840
one<font color="#CCCCCC"> of</font><font color="#E5E5E5"> the things that I didn't talk</font>

503
00:20:35,049 --> 00:20:40,540
<font color="#CCCCCC">about we we did the same question of how</font>

504
00:20:37,840 --> 00:20:42,939
much<font color="#CCCCCC"> of</font><font color="#E5E5E5"> no SQL have we covered and</font><font color="#CCCCCC"> there</font>

505
00:20:40,540 --> 00:20:44,918
the like we find the main gap is

506
00:20:42,940 --> 00:20:46,240
actually<font color="#CCCCCC"> keeping up with insert rates we</font>

507
00:20:44,919 --> 00:20:49,540
actually had the query functionality

508
00:20:46,240 --> 00:20:51,700
down pretty<font color="#E5E5E5"> well</font><font color="#CCCCCC"> one of the things the</font>

509
00:20:49,540 --> 00:20:54,730
community<font color="#E5E5E5"> has done a</font><font color="#CCCCCC"> very poor job in is</font>

510
00:20:51,700 --> 00:20:57,400
is with graph analytics<font color="#CCCCCC"> and these are</font>

511
00:20:54,730 --> 00:21:00,130
<font color="#CCCCCC">often done</font><font color="#E5E5E5"> in sparse sparse matrix</font>

512
00:20:57,400 --> 00:21:02,080
computations<font color="#E5E5E5"> and so we need algorithms</font>

513
00:21:00,130 --> 00:21:04,660
that not only are doing matrix multiply

514
00:21:02,080 --> 00:21:06,610
in addition<font color="#E5E5E5"> but are doing</font><font color="#CCCCCC"> this over</font>

515
00:21:04,660 --> 00:21:08,950
sparse matrices that<font color="#E5E5E5"> are stored securely</font>

516
00:21:06,610 --> 00:21:10,600
<font color="#E5E5E5">so I</font><font color="#CCCCCC"> think it's a great area to</font><font color="#E5E5E5"> look at</font>

517
00:21:08,950 --> 00:21:12,370
and the community is just<font color="#E5E5E5"> starting to</font>

518
00:21:10,600 --> 00:21:14,139
realize there's some work in the last

519
00:21:12,370 --> 00:21:16,360
couple<font color="#CCCCCC"> of years on graph analytics but</font>

520
00:21:14,140 --> 00:21:20,200
it's it's it's<font color="#CCCCCC"> very fresh and it's a</font>

521
00:21:16,360 --> 00:21:22,120
very<font color="#E5E5E5"> fertile ground all right well let's</font>

522
00:21:20,200 --> 00:21:26,440
think<font color="#E5E5E5"> the speaker wants more</font>

523
00:21:22,120 --> 00:21:26,439
[Applause]

