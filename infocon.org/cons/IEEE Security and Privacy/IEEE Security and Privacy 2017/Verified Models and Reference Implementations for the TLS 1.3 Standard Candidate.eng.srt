1
00:00:08,170 --> 00:00:12,110
so this is another paper<font color="#E5E5E5"> about G let's</font>

2
00:00:10,430 --> 00:00:14,960
country<font color="#E5E5E5"> and like see ascetic said this</font>

3
00:00:12,110 --> 00:00:16,640
is a new beautiful version<font color="#CCCCCC"> of TLS</font><font color="#E5E5E5"> which</font>

4
00:00:14,960 --> 00:00:19,039
has been completely<font color="#CCCCCC"> redesigned from</font>

5
00:00:16,640 --> 00:00:21,500
scratch<font color="#CCCCCC"> and after 20 versions</font><font color="#E5E5E5"> is pretty</font>

6
00:00:19,039 --> 00:00:23,240
<font color="#E5E5E5">much ready for</font><font color="#CCCCCC"> Standardization now so</font>

7
00:00:21,500 --> 00:00:25,040
it's worth asking and remembering why

8
00:00:23,240 --> 00:00:27,830
did we need<font color="#E5E5E5"> a new protocol well the</font>

9
00:00:25,040 --> 00:00:30,049
first reason<font color="#E5E5E5"> is security the number of</font>

10
00:00:27,830 --> 00:00:31,759
broken crypto constructions in TLS<font color="#CCCCCC"> 1-2</font>

11
00:00:30,050 --> 00:00:33,320
and earlier<font color="#CCCCCC"> versions had gotten so large</font>

12
00:00:31,760 --> 00:00:35,300
that<font color="#E5E5E5"> people decided they needed to</font>

13
00:00:33,320 --> 00:00:37,039
<font color="#E5E5E5">completely redesign it from scratch</font><font color="#CCCCCC"> and</font>

14
00:00:35,300 --> 00:00:38,750
if you don't remember<font color="#E5E5E5"> what these broken</font>

15
00:00:37,039 --> 00:00:40,969
constructions are<font color="#E5E5E5"> maybe you</font><font color="#CCCCCC"> remember all</font>

16
00:00:38,750 --> 00:00:42,829
the<font color="#E5E5E5"> catchy attack attacks that came out</font>

17
00:00:40,969 --> 00:00:45,050
<font color="#CCCCCC">over the last few years</font><font color="#E5E5E5"> almost</font><font color="#CCCCCC"> all of</font>

18
00:00:42,829 --> 00:00:47,589
which rely on breaking and exploiting

19
00:00:45,050 --> 00:00:50,178
legacy crypto<font color="#CCCCCC"> in Tellez</font>

20
00:00:47,589 --> 00:00:52,819
the second reason like<font color="#CCCCCC"> Cedric also said</font>

21
00:00:50,179 --> 00:00:54,829
was efficiency<font color="#CCCCCC"> you know to reduce</font><font color="#E5E5E5"> the</font>

22
00:00:52,819 --> 00:00:56,979
number of<font color="#E5E5E5"> round trips you need to wait</font>

23
00:00:54,829 --> 00:01:00,019
for before<font color="#E5E5E5"> you can start exchanging data</font>

24
00:00:56,979 --> 00:01:02,030
so both secure and<font color="#E5E5E5"> more efficient</font><font color="#CCCCCC"> the</font>

25
00:01:00,019 --> 00:01:03,229
seems like too<font color="#CCCCCC"> good to be true because</font>

26
00:01:02,030 --> 00:01:05,479
<font color="#E5E5E5">and of course there are trade-offs</font>

27
00:01:03,229 --> 00:01:08,030
between<font color="#E5E5E5"> put these are potentially</font>

28
00:01:05,479 --> 00:01:10,850
contradictory<font color="#E5E5E5"> goals so the protocol</font>

29
00:01:08,030 --> 00:01:13,480
needs<font color="#CCCCCC"> extensive security</font><font color="#E5E5E5"> analysis</font><font color="#CCCCCC"> before</font>

30
00:01:10,850 --> 00:01:16,399
deployment<font color="#CCCCCC"> and consequently the IETF</font>

31
00:01:13,480 --> 00:01:17,870
decided to ask the<font color="#E5E5E5"> Academy community</font><font color="#CCCCCC"> at</font>

32
00:01:16,400 --> 00:01:19,610
large<font color="#E5E5E5"> to come and help</font><font color="#CCCCCC"> them formally</font>

33
00:01:17,870 --> 00:01:21,410
analyze the protocol<font color="#E5E5E5"> before it is</font>

34
00:01:19,610 --> 00:01:22,880
standardized<font color="#E5E5E5"> and there was a very</font><font color="#CCCCCC"> good</font>

35
00:01:21,410 --> 00:01:28,070
response<font color="#E5E5E5"> to this they've been proofs</font>

36
00:01:22,880 --> 00:01:30,649
<font color="#E5E5E5">about the protocol in crypto proofs</font>

37
00:01:28,070 --> 00:01:31,910
<font color="#E5E5E5">symbolic proofs and</font><font color="#CCCCCC"> the D</font><font color="#E5E5E5"> as we've seen</font>

38
00:01:30,650 --> 00:01:33,620
<font color="#E5E5E5">even a verified implementations</font><font color="#CCCCCC"> at</font><font color="#E5E5E5"> a</font>

39
00:01:31,910 --> 00:01:34,899
core protocol<font color="#E5E5E5"> in our paper we do a</font>

40
00:01:33,620 --> 00:01:37,340
little<font color="#E5E5E5"> bit of all three</font><font color="#CCCCCC"> of</font><font color="#E5E5E5"> these things</font>

41
00:01:34,900 --> 00:01:40,160
so we've got a bunch of proofs of the

42
00:01:37,340 --> 00:01:44,240
protocol sorry done<font color="#CCCCCC"> is it</font><font color="#E5E5E5"> secure</font>

43
00:01:40,160 --> 00:01:45,740
can we just<font color="#E5E5E5"> can you go home well the key</font>

44
00:01:44,240 --> 00:01:46,670
question here<font color="#E5E5E5"> for from a practical</font>

45
00:01:45,740 --> 00:01:49,399
viewpoint from<font color="#E5E5E5"> real practitioners</font>

46
00:01:46,670 --> 00:01:50,990
<font color="#E5E5E5">viewpoint is if today we took TLS 1 3</font>

47
00:01:49,400 --> 00:01:53,510
and we deployed<font color="#CCCCCC"> it on servers that are</font>

48
00:01:50,990 --> 00:01:54,979
<font color="#CCCCCC">already running TLS</font><font color="#E5E5E5"> 1 2 then would it</font>

49
00:01:53,510 --> 00:01:56,870
expose new<font color="#E5E5E5"> attacks will it prevent</font>

50
00:01:54,980 --> 00:02:00,380
previous attacks<font color="#E5E5E5"> how confident can we be</font>

51
00:01:56,870 --> 00:02:01,580
and this<font color="#E5E5E5"> is</font><font color="#CCCCCC"> a</font><font color="#E5E5E5"> question which</font><font color="#CCCCCC"> normally</font>

52
00:02:00,380 --> 00:02:03,830
with so many crew should<font color="#CCCCCC"> be easy to</font>

53
00:02:01,580 --> 00:02:05,330
answer<font color="#CCCCCC"> where in the context of TLS the</font>

54
00:02:03,830 --> 00:02:08,179
relationship between TLS and<font color="#E5E5E5"> its proofs</font>

55
00:02:05,330 --> 00:02:09,889
<font color="#CCCCCC">have had a checkered past let's say we</font>

56
00:02:08,179 --> 00:02:12,860
have<font color="#E5E5E5"> been various proofs of earlier</font>

57
00:02:09,889 --> 00:02:14,809
<font color="#CCCCCC">versions of TLS which did</font><font color="#E5E5E5"> not find</font>

58
00:02:12,860 --> 00:02:17,690
attacks which<font color="#CCCCCC"> were found various many</font>

59
00:02:14,810 --> 00:02:20,090
years later<font color="#E5E5E5"> for and this is because</font>

60
00:02:17,690 --> 00:02:21,620
<font color="#E5E5E5">proof</font><font color="#CCCCCC"> sense of TLS have typically relied</font>

61
00:02:20,090 --> 00:02:23,569
on<font color="#E5E5E5"> simplified models</font>

62
00:02:21,620 --> 00:02:25,069
of the protocol and<font color="#CCCCCC"> a gap</font><font color="#E5E5E5"> between these</font>

63
00:02:23,569 --> 00:02:27,679
models<font color="#CCCCCC"> in</font><font color="#E5E5E5"> the deployed protocol was so</font>

64
00:02:25,069 --> 00:02:31,099
large<font color="#E5E5E5"> that</font><font color="#CCCCCC"> attacks</font><font color="#E5E5E5"> slipped through for</font>

65
00:02:27,680 --> 00:02:32,840
example<font color="#CCCCCC"> some early proofs ignored</font><font color="#E5E5E5"> a ugly</font>

66
00:02:31,099 --> 00:02:34,220
implementation details like title<font color="#E5E5E5"> and so</font>

67
00:02:32,840 --> 00:02:36,290
they can they<font color="#E5E5E5"> not think about</font><font color="#CCCCCC"> tithing</font>

68
00:02:34,220 --> 00:02:38,739
<font color="#CCCCCC">Oracle attacks</font><font color="#E5E5E5"> other proofs including</font>

69
00:02:36,290 --> 00:02:41,420
<font color="#E5E5E5">those when developed by me and my group</font>

70
00:02:38,739 --> 00:02:43,910
<font color="#CCCCCC">for example would ignore composition</font>

71
00:02:41,420 --> 00:02:45,379
between popular protocol popular<font color="#E5E5E5"> modes</font>

72
00:02:43,910 --> 00:02:46,879
<font color="#CCCCCC">of</font><font color="#E5E5E5"> protocol and unpopular</font><font color="#CCCCCC"> modes of</font>

73
00:02:45,379 --> 00:02:49,190
protocol like renegotiation<font color="#E5E5E5"> and you</font>

74
00:02:46,879 --> 00:02:51,260
would miss some attacks there sometimes

75
00:02:49,190 --> 00:02:53,090
the proofs<font color="#E5E5E5"> will have the crypto</font>

76
00:02:51,260 --> 00:02:54,890
assumptions that were<font color="#CCCCCC"> much</font><font color="#E5E5E5"> stronger than</font>

77
00:02:53,090 --> 00:02:56,599
<font color="#E5E5E5">those used in the protocol for example</font>

78
00:02:54,890 --> 00:02:58,250
<font color="#CCCCCC">you'd assume that all the hash functions</font>

79
00:02:56,599 --> 00:03:00,488
using<font color="#E5E5E5"> the</font><font color="#CCCCCC"> protocol a collision resistant</font>

80
00:02:58,250 --> 00:03:02,930
well the deployed<font color="#CCCCCC"> protocol would use md5</font>

81
00:03:00,489 --> 00:03:04,670
<font color="#E5E5E5">so these gaps that you have between the</font>

82
00:03:02,930 --> 00:03:06,560
models and implementation led<font color="#E5E5E5"> to a whole</font>

83
00:03:04,670 --> 00:03:09,048
<font color="#CCCCCC">bunch of attacks</font><font color="#E5E5E5"> and so now before</font><font color="#CCCCCC"> we</font>

84
00:03:06,560 --> 00:03:11,209
certify<font color="#CCCCCC"> the ls1 3 it would be</font><font color="#E5E5E5"> good to</font>

85
00:03:09,049 --> 00:03:13,370
sort<font color="#E5E5E5"> of ensure for ourselves</font><font color="#CCCCCC"> that</font><font color="#E5E5E5"> our</font>

86
00:03:11,209 --> 00:03:15,260
TLS the new<font color="#CCCCCC"> brand new telephone three</font>

87
00:03:13,370 --> 00:03:18,290
proofs are not<font color="#E5E5E5"> falling prey to the same</font>

88
00:03:15,260 --> 00:03:20,390
traps to this end we propose<font color="#E5E5E5"> our</font>

89
00:03:18,290 --> 00:03:22,700
approach which and we advocate the<font color="#CCCCCC"> use</font>

90
00:03:20,390 --> 00:03:24,319
of mechanized<font color="#E5E5E5"> proofs and automated</font>

91
00:03:22,700 --> 00:03:26,268
verification tools to<font color="#E5E5E5"> handle the</font>

92
00:03:24,319 --> 00:03:28,429
complexity of the whole protocol and to

93
00:03:26,269 --> 00:03:29,959
enable<font color="#E5E5E5"> because we think these mechanized</font>

94
00:03:28,430 --> 00:03:32,269
<font color="#E5E5E5">codes are easier to maintain</font><font color="#CCCCCC"> over time</font>

95
00:03:29,959 --> 00:03:35,600
and add features<font color="#CCCCCC"> to andrey verify the</font>

96
00:03:32,269 --> 00:03:37,880
properties than a hand proof<font color="#E5E5E5"> would</font><font color="#CCCCCC"> be we</font>

97
00:03:35,600 --> 00:03:40,400
advocate the<font color="#CCCCCC"> use of</font><font color="#E5E5E5"> symbolic analysis to</font>

98
00:03:37,880 --> 00:03:42,470
test the protocol against large classes

99
00:03:40,400 --> 00:03:43,840
<font color="#E5E5E5">of known attacks so</font><font color="#CCCCCC"> that we can find</font>

100
00:03:42,470 --> 00:03:46,639
attacks like downgrade attacks

101
00:03:43,840 --> 00:03:48,620
<font color="#E5E5E5">automatically</font><font color="#CCCCCC"> you want to build</font><font color="#E5E5E5"> a</font>

102
00:03:46,639 --> 00:03:51,079
mechanically checked cryptographic proof

103
00:03:48,620 --> 00:03:53,180
of the<font color="#E5E5E5"> protocol like for example the one</font>

104
00:03:51,079 --> 00:03:54,470
<font color="#CCCCCC">that the meteor's</font><font color="#E5E5E5"> project is building so</font>

105
00:03:53,180 --> 00:03:56,090
<font color="#CCCCCC">that we can explore</font><font color="#E5E5E5"> the various</font>

106
00:03:54,470 --> 00:03:57,650
cryptographic assumptions that may or

107
00:03:56,090 --> 00:04:00,500
<font color="#CCCCCC">may not be</font><font color="#E5E5E5"> needed for the security of</font>

108
00:03:57,650 --> 00:04:01,790
the protocol<font color="#E5E5E5"> and finally we want</font><font color="#CCCCCC"> to</font>

109
00:04:00,500 --> 00:04:04,880
synchronize our<font color="#CCCCCC"> symbolic and</font>

110
00:04:01,790 --> 00:04:06,858
computational models with<font color="#E5E5E5"> the RFC itself</font>

111
00:04:04,880 --> 00:04:08,989
and make sure that we are<font color="#E5E5E5"> not too far</font>

112
00:04:06,859 --> 00:04:10,940
<font color="#CCCCCC">from the standard and to this end what</font>

113
00:04:08,989 --> 00:04:12,079
we advocate<font color="#E5E5E5"> is using a reference</font>

114
00:04:10,940 --> 00:04:13,849
<font color="#CCCCCC">implementation which have developed</font>

115
00:04:12,079 --> 00:04:15,709
called<font color="#E5E5E5"> s TLS and exporter matically</font>

116
00:04:13,849 --> 00:04:19,399
extracting<font color="#E5E5E5"> the core protocol</font>

117
00:04:15,709 --> 00:04:21,260
functionality<font color="#E5E5E5"> from it so in an ideal</font>

118
00:04:19,399 --> 00:04:23,330
<font color="#E5E5E5">world this is what you would have we</font>

119
00:04:21,260 --> 00:04:25,639
<font color="#CCCCCC">would write one more</font><font color="#E5E5E5"> rule in our setting</font>

120
00:04:23,330 --> 00:04:26,930
<font color="#E5E5E5">it's like one model for TLS</font><font color="#CCCCCC"> 1 3 and use</font>

121
00:04:25,639 --> 00:04:28,630
it in three ways we'd use it for

122
00:04:26,930 --> 00:04:31,520
symbolic analysis to find<font color="#CCCCCC"> attacks</font>

123
00:04:28,630 --> 00:04:32,840
<font color="#CCCCCC">fix them refined attacks and so on once</font>

124
00:04:31,520 --> 00:04:34,250
you can't find any<font color="#E5E5E5"> more attacks in the</font>

125
00:04:32,840 --> 00:04:35,388
symbolic<font color="#E5E5E5"> world</font><font color="#CCCCCC"> we would do a</font>

126
00:04:34,250 --> 00:04:36,830
computational proof

127
00:04:35,389 --> 00:04:38,300
and once you have<font color="#CCCCCC"> been welcome to</font>

128
00:04:36,830 --> 00:04:39,740
<font color="#E5E5E5">computational proof you would use the</font>

129
00:04:38,300 --> 00:04:42,259
<font color="#CCCCCC">same model</font><font color="#E5E5E5"> as</font><font color="#CCCCCC"> part of a</font><font color="#E5E5E5"> reference</font>

130
00:04:39,740 --> 00:04:44,539
implementation<font color="#E5E5E5"> what we have right now is</font>

131
00:04:42,259 --> 00:04:46,669
<font color="#E5E5E5">not as nice</font><font color="#CCCCCC"> as this what we have is a</font>

132
00:04:44,539 --> 00:04:47,870
tool chain that<font color="#E5E5E5"> we write three different</font>

133
00:04:46,669 --> 00:04:49,669
artifacts a symbolic<font color="#CCCCCC"> model a</font>

134
00:04:47,870 --> 00:04:51,590
computational model<font color="#CCCCCC"> and a</font><font color="#E5E5E5"> reference</font>

135
00:04:49,669 --> 00:04:53,419
<font color="#E5E5E5">implementation and we link them together</font>

136
00:04:51,590 --> 00:04:55,429
using<font color="#E5E5E5"> a combination of automated tools</font>

137
00:04:53,419 --> 00:04:57,169
<font color="#E5E5E5">and manual edits and so on so it's a</font>

138
00:04:55,430 --> 00:04:59,719
<font color="#E5E5E5">it's not as nice</font><font color="#CCCCCC"> of the pictures if you</font>

139
00:04:57,169 --> 00:05:02,780
<font color="#E5E5E5">would like to</font><font color="#CCCCCC"> be AK</font><font color="#E5E5E5"> when you when this</font>

140
00:04:59,719 --> 00:05:04,340
process<font color="#CCCCCC"> ends so in the</font><font color="#E5E5E5"> rest of this talk</font>

141
00:05:02,780 --> 00:05:06,049
what I'm going to do is sort<font color="#E5E5E5"> of show you</font>

142
00:05:04,340 --> 00:05:09,229
<font color="#CCCCCC">some snippets</font><font color="#E5E5E5"> of what we can achieve</font>

143
00:05:06,050 --> 00:05:12,229
<font color="#E5E5E5">with the student and for the most of the</font>

144
00:05:09,229 --> 00:05:14,479
details<font color="#E5E5E5"> that</font><font color="#CCCCCC"> are for you to the paper</font><font color="#E5E5E5"> so</font>

145
00:05:12,229 --> 00:05:16,310
the first example I'd like<font color="#CCCCCC"> to look at is</font>

146
00:05:14,479 --> 00:05:19,580
how you can<font color="#E5E5E5"> use symbolic analysis to</font>

147
00:05:16,310 --> 00:05:20,810
find downgrade attacks<font color="#E5E5E5"> so here is the</font>

148
00:05:19,580 --> 00:05:23,449
list of<font color="#E5E5E5"> the attacks that I</font><font color="#CCCCCC"> flashed</font>

149
00:05:20,810 --> 00:05:25,550
<font color="#CCCCCC">earlier on slide 1</font><font color="#E5E5E5"> these are all fairly</font>

150
00:05:23,449 --> 00:05:27,529
recent attacks on<font color="#E5E5E5"> legacy crypto use in</font>

151
00:05:25,550 --> 00:05:29,029
TLS<font color="#CCCCCC"> and when you look at</font><font color="#E5E5E5"> this list the</font>

152
00:05:27,529 --> 00:05:31,460
<font color="#CCCCCC">first question many people ask is why</font>

153
00:05:29,029 --> 00:05:33,560
are TLS library still supporting such

154
00:05:31,460 --> 00:05:34,729
own obsolete crypto mechanisms that we

155
00:05:33,560 --> 00:05:36,529
should<font color="#E5E5E5"> have gotten rid of long time ago</font>

156
00:05:34,729 --> 00:05:38,840
the answer for<font color="#E5E5E5"> all</font><font color="#CCCCCC"> of</font><font color="#E5E5E5"> these things is</font>

157
00:05:36,529 --> 00:05:40,279
always backwards compatibility<font color="#CCCCCC"> why not</font>

158
00:05:38,840 --> 00:05:43,698
just forget<font color="#CCCCCC"> about this like if you--if</font>

159
00:05:40,279 --> 00:05:46,190
<font color="#CCCCCC">TLS 1.3 is deployed today it's</font><font color="#E5E5E5"> going to</font>

160
00:05:43,699 --> 00:05:47,360
be deployed alongside TLS 1.2<font color="#E5E5E5"> because of</font>

161
00:05:46,190 --> 00:05:49,490
course not everybody<font color="#E5E5E5"> is going</font><font color="#CCCCCC"> to be</font>

162
00:05:47,360 --> 00:05:50,900
supporting TLS 1.2 and<font color="#CCCCCC"> a 1 you're</font><font color="#E5E5E5"> going</font>

163
00:05:49,490 --> 00:05:53,089
<font color="#CCCCCC">to have to have an implementation</font><font color="#E5E5E5"> to</font><font color="#CCCCCC"> the</font>

164
00:05:50,900 --> 00:05:55,580
CLS<font color="#CCCCCC"> 1/3 and 1/2</font><font color="#E5E5E5"> for backwards</font>

165
00:05:53,089 --> 00:05:57,379
compatibility<font color="#CCCCCC"> but</font><font color="#E5E5E5"> that</font><font color="#CCCCCC"> raises a new</font>

166
00:05:55,580 --> 00:05:59,990
question<font color="#E5E5E5"> right so the good news is that</font>

167
00:05:57,379 --> 00:06:01,279
TLS 1/3 doesn't have any weak crypto the

168
00:05:59,990 --> 00:06:03,620
bad news is it's going<font color="#E5E5E5"> to be running</font>

169
00:06:01,279 --> 00:06:05,659
<font color="#E5E5E5">alongside TLS 1/2 which does have all</font>

170
00:06:03,620 --> 00:06:08,000
the<font color="#CCCCCC"> suite crypto so how do we</font><font color="#E5E5E5"> know that</font>

171
00:06:05,659 --> 00:06:10,400
TLS 1/3 will still be secure<font color="#E5E5E5"> if it is</font>

172
00:06:08,000 --> 00:06:12,740
deployed<font color="#E5E5E5"> alongside</font><font color="#CCCCCC"> older</font><font color="#E5E5E5"> versions of the</font>

173
00:06:10,400 --> 00:06:14,419
protocol<font color="#E5E5E5"> in particular we've added about</font>

174
00:06:12,740 --> 00:06:16,849
downgrade attacks<font color="#E5E5E5"> can a</font>

175
00:06:14,419 --> 00:06:19,159
<font color="#CCCCCC">man-in-the-middle attack err</font><font color="#E5E5E5"> take to a</font>

176
00:06:16,849 --> 00:06:20,569
connection<font color="#CCCCCC"> between</font><font color="#E5E5E5"> two TLS 1.3 peers who</font>

177
00:06:19,159 --> 00:06:23,089
should<font color="#E5E5E5"> really be talking 1.3 and</font>

178
00:06:20,569 --> 00:06:26,000
downgrade them to use weak crypto or an

179
00:06:23,089 --> 00:06:28,159
old version or something<font color="#CCCCCC"> like that in</font>

180
00:06:26,000 --> 00:06:30,080
<font color="#E5E5E5">order to find such attacks and to disk</font>

181
00:06:28,159 --> 00:06:32,270
<font color="#E5E5E5">and to be assured</font><font color="#CCCCCC"> that such</font><font color="#E5E5E5"> attacks</font>

182
00:06:30,080 --> 00:06:33,770
don't<font color="#E5E5E5"> exist until</font><font color="#CCCCCC"> s13 the first thing</font>

183
00:06:32,270 --> 00:06:36,469
you have<font color="#CCCCCC"> to do is to model weak crypto</font>

184
00:06:33,770 --> 00:06:38,419
<font color="#E5E5E5">right this is a bit unusual in symbolic</font>

185
00:06:36,469 --> 00:06:40,520
analysis because symbolic analysis

186
00:06:38,419 --> 00:06:43,190
called<font color="#CCCCCC"> dollar-euro models typically</font>

187
00:06:40,520 --> 00:06:44,659
<font color="#E5E5E5">treat the cryptographic primitives as</font>

188
00:06:43,190 --> 00:06:46,610
perfect black boxes

189
00:06:44,660 --> 00:06:48,710
instead what we do<font color="#E5E5E5"> is we model them as</font>

190
00:06:46,610 --> 00:06:50,510
agile<font color="#E5E5E5"> functions that take the algorithm</font>

191
00:06:48,710 --> 00:06:52,070
of<font color="#CCCCCC"> the</font><font color="#E5E5E5"> parameter if the</font><font color="#CCCCCC"> algorithm is</font>

192
00:06:50,510 --> 00:06:54,140
strong<font color="#E5E5E5"> then it behaves just like a</font>

193
00:06:52,070 --> 00:06:56,030
<font color="#E5E5E5">perfect black box if the algorithm is</font>

194
00:06:54,140 --> 00:06:59,810
weak then it's catastrophically broken

195
00:06:56,030 --> 00:07:01,340
<font color="#E5E5E5">okay for example if you wanted model</font>

196
00:06:59,810 --> 00:07:03,500
diffie-hellman X key exchange<font color="#E5E5E5"> on the</font>

197
00:07:01,340 --> 00:07:07,489
lesson<font color="#E5E5E5"> side is the classic ideal</font>

198
00:07:03,500 --> 00:07:09,710
diffie-hellman key<font color="#E5E5E5"> a kind of equation in</font>

199
00:07:07,490 --> 00:07:11,480
<font color="#CCCCCC">Polaris it says a</font><font color="#E5E5E5"> G to the X to the y</font>

200
00:07:09,710 --> 00:07:13,280
<font color="#CCCCCC">equals e to</font><font color="#E5E5E5"> the Y to the</font><font color="#CCCCCC"> X you cannot</font>

201
00:07:11,480 --> 00:07:15,380
learn G to the X Y without knowing X or

202
00:07:13,280 --> 00:07:17,330
Y and<font color="#E5E5E5"> this kind of things</font><font color="#CCCCCC"> now on the</font>

203
00:07:15,380 --> 00:07:19,610
right hand<font color="#CCCCCC"> side is our agile version if</font>

204
00:07:17,330 --> 00:07:21,890
<font color="#E5E5E5">you provided a strong defy human group</font>

205
00:07:19,610 --> 00:07:23,810
<font color="#E5E5E5">it behaves exactly like the ideal one if</font>

206
00:07:21,890 --> 00:07:26,539
you<font color="#CCCCCC"> provided</font><font color="#E5E5E5"> a weakness in one group it</font>

207
00:07:23,810 --> 00:07:28,610
it degenerates<font color="#CCCCCC"> so that all computations</font>

208
00:07:26,540 --> 00:07:30,140
<font color="#E5E5E5">return to you the same degenerate</font>

209
00:07:28,610 --> 00:07:33,200
<font color="#E5E5E5">elements which you call</font><font color="#CCCCCC"> the pile element</font>

210
00:07:30,140 --> 00:07:35,570
<font color="#E5E5E5">think of it as</font><font color="#CCCCCC"> a</font><font color="#E5E5E5"> zero in a similar way</font>

211
00:07:33,200 --> 00:07:37,820
<font color="#E5E5E5">we can model weak algorithms for all the</font>

212
00:07:35,570 --> 00:07:39,200
other constructions<font color="#E5E5E5"> and TLS now the</font><font color="#CCCCCC"> are</font>

213
00:07:37,820 --> 00:07:40,969
modeling of the weak constructions is

214
00:07:39,200 --> 00:07:43,250
actually overly conservative<font color="#CCCCCC"> we are</font>

215
00:07:40,970 --> 00:07:45,080
rarely treating them as trivially broken

216
00:07:43,250 --> 00:07:46,970
and of course if you find an attack

217
00:07:45,080 --> 00:07:48,740
based on<font color="#E5E5E5"> the crypto it's most likely</font><font color="#CCCCCC"> not</font>

218
00:07:46,970 --> 00:07:51,170
<font color="#CCCCCC">going to</font><font color="#E5E5E5"> be</font><font color="#CCCCCC"> always practical</font><font color="#E5E5E5"> and</font>

219
00:07:48,740 --> 00:07:52,520
practical exploitable but that's not<font color="#CCCCCC"> our</font>

220
00:07:51,170 --> 00:07:55,850
goal main are trying to find practical

221
00:07:52,520 --> 00:07:58,400
exploit we're trying to say if TLS<font color="#E5E5E5"> 1.3</font>

222
00:07:55,850 --> 00:08:00,650
is still secure if it is composed with

223
00:07:58,400 --> 00:08:02,450
older<font color="#CCCCCC"> versions of</font><font color="#E5E5E5"> the protocol whose</font>

224
00:08:00,650 --> 00:08:05,960
crypto whose legacy crypto might be

225
00:08:02,450 --> 00:08:07,310
catastrophically<font color="#E5E5E5"> broken so after</font>

226
00:08:05,960 --> 00:08:09,440
modeling the crypto the next step is

227
00:08:07,310 --> 00:08:13,570
modeling the protocol<font color="#E5E5E5"> itself</font><font color="#CCCCCC"> 1 on the</font>

228
00:08:09,440 --> 00:08:16,880
right<font color="#E5E5E5"> hand</font><font color="#CCCCCC"> side is the full TLS 1.31 RTT</font>

229
00:08:13,570 --> 00:08:18,890
handshake and<font color="#CCCCCC"> it's key</font><font color="#E5E5E5"> schedule the</font>

230
00:08:16,880 --> 00:08:21,560
details are<font color="#CCCCCC"> unimportant it</font><font color="#E5E5E5"> basically has</font>

231
00:08:18,890 --> 00:08:23,270
12 messages<font color="#CCCCCC"> and</font><font color="#E5E5E5"> 3 slides 16 sets of</font>

232
00:08:21,560 --> 00:08:25,130
derived keys and then it<font color="#E5E5E5"> doesn't</font><font color="#CCCCCC"> the key</font>

233
00:08:23,270 --> 00:08:27,169
exchange so it looks kind<font color="#CCCCCC"> of complicated</font>

234
00:08:25,130 --> 00:08:31,390
<font color="#CCCCCC">and if you add to it</font><font color="#E5E5E5"> the</font><font color="#CCCCCC"> ppreciate key</font>

235
00:08:27,169 --> 00:08:33,380
<font color="#E5E5E5">base protocol and also TLS 1.2 and other</font>

236
00:08:31,390 --> 00:08:34,669
legacy versions that<font color="#E5E5E5"> you might want to</font>

237
00:08:33,380 --> 00:08:37,219
include in your model to<font color="#CCCCCC"> check for</font>

238
00:08:34,669 --> 00:08:38,840
downgrade<font color="#E5E5E5"> it will see when more complex</font>

239
00:08:37,219 --> 00:08:40,370
<font color="#E5E5E5">but actually this is</font><font color="#CCCCCC"> exactly the kind</font><font color="#E5E5E5"> of</font>

240
00:08:38,840 --> 00:08:42,289
thing where tools like<font color="#E5E5E5"> roverís and</font>

241
00:08:40,370 --> 00:08:43,789
<font color="#CCCCCC">tamarind</font><font color="#E5E5E5"> are designed to do</font><font color="#CCCCCC"> so writing a</font>

242
00:08:42,289 --> 00:08:45,140
model<font color="#E5E5E5"> for</font><font color="#CCCCCC"> that one and</font><font color="#E5E5E5"> then transcribing</font>

243
00:08:43,789 --> 00:08:47,180
it<font color="#CCCCCC"> in</font><font color="#E5E5E5"> provence is actually very easy</font>

244
00:08:45,140 --> 00:08:48,650
<font color="#CCCCCC">it's takes about</font><font color="#E5E5E5"> a thousand lines of</font>

245
00:08:47,180 --> 00:08:52,280
code one of your students<font color="#E5E5E5"> could do it in</font>

246
00:08:48,650 --> 00:08:54,350
a few<font color="#E5E5E5"> days maybe a day even but the key</font>

247
00:08:52,280 --> 00:08:56,240
effort here is on how<font color="#E5E5E5"> to specify the</font>

248
00:08:54,350 --> 00:08:57,370
security queries and how to do the

249
00:08:56,240 --> 00:09:00,010
<font color="#CCCCCC">verification</font>

250
00:08:57,370 --> 00:09:01,720
so for example<font color="#CCCCCC"> the you might want to</font>

251
00:09:00,010 --> 00:09:03,130
<font color="#E5E5E5">write our security goals and our</font>

252
00:09:01,720 --> 00:09:05,440
<font color="#E5E5E5">security goal to be the standard ones</font>

253
00:09:03,130 --> 00:09:07,120
messages between honest peers<font color="#E5E5E5"> should be</font>

254
00:09:05,440 --> 00:09:09,220
secret<font color="#E5E5E5"> should be authentic should not be</font>

255
00:09:07,120 --> 00:09:12,070
replayable<font color="#E5E5E5"> should be forward secret and</font>

256
00:09:09,220 --> 00:09:13,540
so on<font color="#CCCCCC"> and preventive the syntax of these</font>

257
00:09:12,070 --> 00:09:15,280
kinds<font color="#E5E5E5"> of queries roughly looks like the</font>

258
00:09:13,540 --> 00:09:17,170
<font color="#E5E5E5">thing in the bottom</font><font color="#CCCCCC"> we</font><font color="#E5E5E5"> are asking</font>

259
00:09:15,280 --> 00:09:19,300
whether a<font color="#E5E5E5"> method sent between from an</font>

260
00:09:17,170 --> 00:09:22,209
anonymous client like a browser to<font color="#CCCCCC"> a</font>

261
00:09:19,300 --> 00:09:25,359
server<font color="#CCCCCC"> F over a connection con is secret</font>

262
00:09:22,210 --> 00:09:27,640
<font color="#E5E5E5">and we</font><font color="#CCCCCC"> asked in</font><font color="#E5E5E5"> Proverbs please tell me</font>

263
00:09:25,360 --> 00:09:29,200
if the attacker can learn this value

264
00:09:27,640 --> 00:09:31,420
which<font color="#CCCCCC"> is what the query at the bottom</font>

265
00:09:29,200 --> 00:09:33,430
means<font color="#E5E5E5"> if you</font><font color="#CCCCCC"> ask prover if this query</font>

266
00:09:31,420 --> 00:09:35,979
for TLS<font color="#CCCCCC"> 1/3 the</font><font color="#E5E5E5"> first thing</font><font color="#CCCCCC"> it'll say is</font>

267
00:09:33,430 --> 00:09:37,420
no this<font color="#E5E5E5"> is not</font><font color="#CCCCCC"> true because</font><font color="#E5E5E5"> there is a</font>

268
00:09:35,980 --> 00:09:39,850
possibility<font color="#CCCCCC"> that the attacker may have</font>

269
00:09:37,420 --> 00:09:41,469
compromised the<font color="#CCCCCC"> server's key so then you</font>

270
00:09:39,850 --> 00:09:43,450
<font color="#E5E5E5">evolve</font><font color="#CCCCCC"> did you define the</font><font color="#E5E5E5"> query you say</font>

271
00:09:41,470 --> 00:09:46,090
well<font color="#CCCCCC"> okay so is that the</font><font color="#E5E5E5"> only way the</font>

272
00:09:43,450 --> 00:09:47,260
attacker can know the<font color="#CCCCCC"> message and 12</font>

273
00:09:46,090 --> 00:09:48,820
<font color="#CCCCCC">resist know there's another counter</font>

274
00:09:47,260 --> 00:09:51,030
example the authenticated encryption

275
00:09:48,820 --> 00:09:54,100
algorithm<font color="#E5E5E5"> that you use might be weak and</font>

276
00:09:51,030 --> 00:09:57,160
so on so you keep refining it until you

277
00:09:54,100 --> 00:09:59,260
finally get<font color="#E5E5E5"> your strongest secrecy query</font>

278
00:09:57,160 --> 00:10:01,089
<font color="#E5E5E5">that you can prove in the sense that</font>

279
00:09:59,260 --> 00:10:03,220
<font color="#CCCCCC">proverbs cannot find any example</font><font color="#E5E5E5"> contra</font>

280
00:10:01,090 --> 00:10:04,930
example on it and this<font color="#E5E5E5"> is</font><font color="#CCCCCC"> the strongest</font>

281
00:10:03,220 --> 00:10:06,010
query in the sense that every one of<font color="#E5E5E5"> the</font>

282
00:10:04,930 --> 00:10:07,449
disjunction that you see that

283
00:10:06,010 --> 00:10:10,540
corresponds<font color="#E5E5E5"> to a well-known attack on</font>

284
00:10:07,450 --> 00:10:11,860
the protocol<font color="#E5E5E5"> and it also is</font><font color="#CCCCCC"> necessary if</font>

285
00:10:10,540 --> 00:10:13,959
you remove it<font color="#CCCCCC"> the query no longer</font>

286
00:10:11,860 --> 00:10:16,990
succeeds<font color="#CCCCCC"> to providers and</font><font color="#E5E5E5"> find a counter</font>

287
00:10:13,960 --> 00:10:20,560
example so one way of<font color="#CCCCCC"> reading</font><font color="#E5E5E5"> that in</font>

288
00:10:16,990 --> 00:10:22,360
English is the following messages on TLS

289
00:10:20,560 --> 00:10:24,699
<font color="#CCCCCC">1 3</font><font color="#E5E5E5"> connections between honest peers are</font>

290
00:10:22,360 --> 00:10:26,560
kept secret<font color="#CCCCCC"> as</font><font color="#E5E5E5"> long as the following</font><font color="#CCCCCC"> 4</font>

291
00:10:24,700 --> 00:10:27,970
conditions<font color="#E5E5E5"> hold the first word as</font>

292
00:10:26,560 --> 00:10:29,739
expected the authenticated encryption

293
00:10:27,970 --> 00:10:31,420
algorithm should<font color="#CCCCCC"> be strong that the fee</font>

294
00:10:29,740 --> 00:10:33,490
<font color="#CCCCCC">Hellman group used on this</font><font color="#E5E5E5"> connection</font>

295
00:10:31,420 --> 00:10:35,589
<font color="#E5E5E5">should be strong etcetera the next</font><font color="#CCCCCC"> -</font>

296
00:10:33,490 --> 00:10:38,590
actually the show us something about

297
00:10:35,590 --> 00:10:41,140
<font color="#E5E5E5">downgrades it says that the server</font>

298
00:10:38,590 --> 00:10:42,820
<font color="#CCCCCC">should not use a weak hash function</font><font color="#E5E5E5"> -</font>

299
00:10:41,140 --> 00:10:45,819
for<font color="#CCCCCC"> signature signing with its</font><font color="#E5E5E5"> private</font>

300
00:10:42,820 --> 00:10:49,060
key on any connection<font color="#E5E5E5"> if on</font><font color="#CCCCCC"> some other</font>

301
00:10:45,820 --> 00:10:51,640
TLS 1.2 connection the server<font color="#CCCCCC"> uses used</font>

302
00:10:49,060 --> 00:10:54,459
as public<font color="#E5E5E5"> key uses gravity to sign using</font>

303
00:10:51,640 --> 00:10:58,630
<font color="#E5E5E5">a md5 for example that signature could</font>

304
00:10:54,460 --> 00:11:01,320
<font color="#E5E5E5">be then used to break your TLS 1.3</font>

305
00:10:58,630 --> 00:11:03,730
security similarly if the server

306
00:11:01,320 --> 00:11:06,280
participates in an RSA key exchange

307
00:11:03,730 --> 00:11:09,370
using<font color="#E5E5E5"> is using the same</font><font color="#CCCCCC"> certificate as</font>

308
00:11:06,280 --> 00:11:10,810
it's using<font color="#E5E5E5"> for for TLS 1.3 then a black</font>

309
00:11:09,370 --> 00:11:12,520
<font color="#E5E5E5">and</font><font color="#CCCCCC"> baakir attack on the TLS</font><font color="#E5E5E5"> 1</font>

310
00:11:10,810 --> 00:11:14,229
point<font color="#E5E5E5"> to key exchange could then be</font><font color="#CCCCCC"> used</font>

311
00:11:12,520 --> 00:11:15,850
to forge signatures<font color="#E5E5E5"> for</font><font color="#CCCCCC"> telephone</font>

312
00:11:14,230 --> 00:11:18,580
country and this<font color="#CCCCCC"> is a well-known</font><font color="#E5E5E5"> attack</font>

313
00:11:15,850 --> 00:11:21,430
also published one year<font color="#CCCCCC"> ago I think</font><font color="#E5E5E5"> is</font>

314
00:11:18,580 --> 00:11:24,010
Erick<font color="#E5E5E5"> so these are these are all known</font>

315
00:11:21,430 --> 00:11:25,870
problems of the of the of the<font color="#CCCCCC"> specs but</font>

316
00:11:24,010 --> 00:11:27,790
our analysis confirms that these<font color="#E5E5E5"> are the</font>

317
00:11:25,870 --> 00:11:30,310
only<font color="#E5E5E5"> conditions that you need for</font>

318
00:11:27,790 --> 00:11:31,689
downgrade<font color="#E5E5E5"> resilience</font><font color="#CCCCCC"> 14s 1.3 in</font>

319
00:11:30,310 --> 00:11:34,209
<font color="#E5E5E5">particular it identifies the weak</font>

320
00:11:31,690 --> 00:11:36,339
algorithms in TLS<font color="#CCCCCC"> 1 - RSA key exchange</font>

321
00:11:34,210 --> 00:11:38,290
<font color="#CCCCCC">make hash functions</font><font color="#E5E5E5"> that you must</font>

322
00:11:36,339 --> 00:11:41,950
disable if you want<font color="#E5E5E5"> to safely composite</font>

323
00:11:38,290 --> 00:11:43,569
with TLS<font color="#CCCCCC"> 1</font><font color="#E5E5E5"> 3 so that was the symbolic</font>

324
00:11:41,950 --> 00:11:45,370
analysis so the second part<font color="#E5E5E5"> is</font><font color="#CCCCCC"> about</font>

325
00:11:43,570 --> 00:11:50,290
building<font color="#E5E5E5"> up to a mechanized</font>

326
00:11:45,370 --> 00:11:52,089
cryptographic proof<font color="#CCCCCC"> so this one this</font>

327
00:11:50,290 --> 00:11:53,529
part we do it in crypto<font color="#CCCCCC"> village</font><font color="#E5E5E5"> so what</font>

328
00:11:52,089 --> 00:11:55,750
we did<font color="#E5E5E5"> was</font><font color="#CCCCCC"> we took the same protocol</font>

329
00:11:53,529 --> 00:11:58,540
that we talked about the long protocol

330
00:11:55,750 --> 00:12:00,160
<font color="#E5E5E5">and in the symbolic model and we broke</font>

331
00:11:58,540 --> 00:12:02,020
<font color="#E5E5E5">it</font><font color="#CCCCCC"> up into several component and we</font>

332
00:12:00,160 --> 00:12:03,850
modeled it in cryptography<font color="#E5E5E5"> so one</font>

333
00:12:02,020 --> 00:12:04,800
<font color="#E5E5E5">component was the handshake protocol</font>

334
00:12:03,850 --> 00:12:07,570
that uses

335
00:12:04,800 --> 00:12:08,949
<font color="#CCCCCC">pre-shared keys one was the handshake</font>

336
00:12:07,570 --> 00:12:10,839
protocol that<font color="#CCCCCC"> doesn't use ppreciate keys</font>

337
00:12:08,950 --> 00:12:12,400
and the third is a record layer<font color="#E5E5E5"> protocol</font>

338
00:12:10,839 --> 00:12:15,339
which<font color="#E5E5E5"> also combines with it the key</font>

339
00:12:12,400 --> 00:12:19,600
update protocol and the 0 RT t 1 RT t

340
00:12:15,339 --> 00:12:21,670
0.5<font color="#CCCCCC"> our key key data exchange so we note</font>

341
00:12:19,600 --> 00:12:23,230
that in in the<font color="#E5E5E5"> crypto riff model because</font>

342
00:12:21,670 --> 00:12:25,540
of<font color="#CCCCCC"> the reasons</font><font color="#E5E5E5"> I'll show you a little</font>

343
00:12:23,230 --> 00:12:27,160
<font color="#E5E5E5">bit later we do not model all</font><font color="#CCCCCC"> the other</font>

344
00:12:25,540 --> 00:12:29,380
features<font color="#CCCCCC"> that I talked about in symbolic</font>

345
00:12:27,160 --> 00:12:31,900
<font color="#CCCCCC">model we don't</font><font color="#E5E5E5"> model in legacy crypto we</font>

346
00:12:29,380 --> 00:12:33,460
don't model negotiation and<font color="#E5E5E5"> we</font><font color="#CCCCCC"> also</font><font color="#E5E5E5"> done</font>

347
00:12:31,900 --> 00:12:34,959
<font color="#E5E5E5">mortal other features of the protocol</font>

348
00:12:33,460 --> 00:12:35,670
<font color="#E5E5E5">like post handshake authentication and</font>

349
00:12:34,960 --> 00:12:38,380
so on

350
00:12:35,670 --> 00:12:39,910
but even so the full model<font color="#CCCCCC"> the</font>

351
00:12:38,380 --> 00:12:42,060
<font color="#CCCCCC">cryptographic</font><font color="#E5E5E5"> model is actually quite</font>

352
00:12:39,910 --> 00:12:43,900
<font color="#E5E5E5">large it's five thousand lines of code</font>

353
00:12:42,060 --> 00:12:45,189
including<font color="#E5E5E5"> about two thousand five</font>

354
00:12:43,900 --> 00:12:46,630
<font color="#E5E5E5">hundred lines of cryptographic</font>

355
00:12:45,190 --> 00:12:48,120
assumptions and this already<font color="#CCCCCC"> gives</font><font color="#E5E5E5"> you</font>

356
00:12:46,630 --> 00:12:50,110
an idea<font color="#CCCCCC"> of where</font><font color="#E5E5E5"> the effort</font><font color="#CCCCCC"> in the</font>

357
00:12:48,120 --> 00:12:51,940
<font color="#CCCCCC">cryptographic proof is going to be so</font>

358
00:12:50,110 --> 00:12:54,010
I'm going to<font color="#E5E5E5"> be on precisely specifying</font>

359
00:12:51,940 --> 00:12:57,730
the assumptions and doing doing the

360
00:12:54,010 --> 00:12:59,439
<font color="#CCCCCC">proofs so crypto</font><font color="#E5E5E5"> wave proofs are not</font>

361
00:12:57,730 --> 00:13:01,180
push buttons or probe in progress you

362
00:12:59,440 --> 00:13:02,680
<font color="#CCCCCC">ask you give the model</font><font color="#E5E5E5"> and you ask the</font>

363
00:13:01,180 --> 00:13:04,089
query and<font color="#E5E5E5"> so over it will give you a</font>

364
00:13:02,680 --> 00:13:06,219
counter<font color="#E5E5E5"> example</font><font color="#CCCCCC"> it was like really</font><font color="#E5E5E5"> a</font>

365
00:13:04,089 --> 00:13:07,420
<font color="#E5E5E5">push-button</font><font color="#CCCCCC"> tool in the Proverbs the</font>

366
00:13:06,220 --> 00:13:08,709
tool to send<font color="#CCCCCC"> Europe</font><font color="#E5E5E5"> the proofs</font><font color="#CCCCCC"> or</font>

367
00:13:07,420 --> 00:13:10,449
<font color="#CCCCCC">semi-automated they require user</font>

368
00:13:08,709 --> 00:13:11,979
guidance<font color="#CCCCCC"> to prove themselves are a</font>

369
00:13:10,450 --> 00:13:14,470
sequence<font color="#CCCCCC"> of game transformation when the</font>

370
00:13:11,980 --> 00:13:15,940
user tells you sometimes has to guide to

371
00:13:14,470 --> 00:13:18,400
the prover into doing the right

372
00:13:15,940 --> 00:13:19,720
transformations<font color="#E5E5E5"> each step relies on some</font>

373
00:13:18,400 --> 00:13:21,370
very<font color="#E5E5E5"> very precise</font><font color="#CCCCCC"> cryptographic</font>

374
00:13:19,720 --> 00:13:23,890
<font color="#E5E5E5">assumption on some primitive</font><font color="#CCCCCC"> use by the</font>

375
00:13:21,370 --> 00:13:24,430
protocol<font color="#E5E5E5"> the overall verification</font>

376
00:13:23,890 --> 00:13:26,649
strategy

377
00:13:24,430 --> 00:13:28,449
<font color="#E5E5E5">using cryptography is actually quite</font>

378
00:13:26,649 --> 00:13:30,399
<font color="#E5E5E5">similar to the kind of paper crypto</font>

379
00:13:28,450 --> 00:13:32,380
proof for TLS<font color="#CCCCCC"> 1.3 that</font><font color="#E5E5E5"> have</font><font color="#CCCCCC"> already been</font>

380
00:13:30,399 --> 00:13:33,820
published<font color="#E5E5E5"> but there are some quirks of</font>

381
00:13:32,380 --> 00:13:35,350
the tool and sometimes some limitations

382
00:13:33,820 --> 00:13:37,060
of the tool that<font color="#CCCCCC"> may force you to use</font><font color="#E5E5E5"> a</font>

383
00:13:35,350 --> 00:13:41,410
slightly stronger assumption or slightly

384
00:13:37,060 --> 00:13:44,079
<font color="#CCCCCC">different good</font><font color="#E5E5E5"> strategy so let's let's</font>

385
00:13:41,410 --> 00:13:47,500
<font color="#CCCCCC">just look at</font><font color="#E5E5E5"> the</font><font color="#CCCCCC"> assumptions right so to</font>

386
00:13:44,080 --> 00:13:49,540
prove TLS 1.3<font color="#E5E5E5"> draft 18 secure we make a</font>

387
00:13:47,500 --> 00:13:51,580
number of assumptions on the on the core

388
00:13:49,540 --> 00:13:53,620
crypto<font color="#E5E5E5"> primitive some of them are</font><font color="#CCCCCC"> bog</font>

389
00:13:51,580 --> 00:13:55,660
<font color="#CCCCCC">standard</font><font color="#E5E5E5"> so the diffie-hellman</font><font color="#CCCCCC"> root</font>

390
00:13:53,620 --> 00:13:58,120
<font color="#CCCCCC">spurs must satisfy gaps</font><font color="#E5E5E5"> if you Hellman</font>

391
00:13:55,660 --> 00:13:59,589
the signatures must<font color="#E5E5E5"> be unforgeable hash</font>

392
00:13:58,120 --> 00:14:01,450
functions must be collision resistant

393
00:13:59,589 --> 00:14:04,029
<font color="#E5E5E5">the authenticated encryption must be</font>

394
00:14:01,450 --> 00:14:06,040
authenticated encryption<font color="#CCCCCC"> whatever right</font>

395
00:14:04,029 --> 00:14:08,589
and<font color="#E5E5E5"> these assumptions</font><font color="#CCCCCC"> even though they</font>

396
00:14:06,040 --> 00:14:11,380
are kind<font color="#E5E5E5"> of somewhat strong are</font>

397
00:14:08,589 --> 00:14:13,029
justified at least in TLS 1.3 by the

398
00:14:11,380 --> 00:14:14,740
fact that in fact<font color="#E5E5E5"> there is no</font>

399
00:14:13,029 --> 00:14:16,660
<font color="#E5E5E5">inconsistency between these assumptions</font>

400
00:14:14,740 --> 00:14:20,230
and<font color="#E5E5E5"> what what the standard has the</font>

401
00:14:16,660 --> 00:14:23,920
standard only mandates<font color="#E5E5E5"> strong algorithms</font>

402
00:14:20,230 --> 00:14:25,240
<font color="#E5E5E5">for all of these primitives an addition</font>

403
00:14:23,920 --> 00:14:27,610
to these standard primitives there are

404
00:14:25,240 --> 00:14:29,410
some more unusual assumption that<font color="#CCCCCC"> you</font>

405
00:14:27,610 --> 00:14:31,270
need in order for a proof and some of

406
00:14:29,410 --> 00:14:33,640
these<font color="#E5E5E5"> assumptions are sort of intriguing</font>

407
00:14:31,270 --> 00:14:35,110
let's say so the first one<font color="#E5E5E5"> is that the</font>

408
00:14:33,640 --> 00:14:37,750
<font color="#E5E5E5">the shared seeker completed by the</font>

409
00:14:35,110 --> 00:14:40,540
elliptic curve diffie-hellman cannot be

410
00:14:37,750 --> 00:14:42,700
a<font color="#E5E5E5"> sequence of zeros</font><font color="#CCCCCC"> and this is because</font>

411
00:14:40,540 --> 00:14:44,650
if it works sequence of zeros in<font color="#E5E5E5"> our</font>

412
00:14:42,700 --> 00:14:46,870
<font color="#E5E5E5">proof at least there is a there</font><font color="#CCCCCC"> is an</font>

413
00:14:44,650 --> 00:14:49,990
ambiguity between<font color="#CCCCCC"> PSK only handshakes</font>

414
00:14:46,870 --> 00:14:51,310
and<font color="#CCCCCC"> PS ke</font><font color="#E5E5E5"> cbhe</font><font color="#CCCCCC"> hatrocks in general you</font>

415
00:14:49,990 --> 00:14:52,600
may want<font color="#CCCCCC"> to</font><font color="#E5E5E5"> avoid this case anyway</font>

416
00:14:51,310 --> 00:14:55,209
<font color="#CCCCCC">because it</font><font color="#E5E5E5"> probably indicates that</font>

417
00:14:52,600 --> 00:14:58,060
<font color="#CCCCCC">you're you're</font><font color="#E5E5E5"> in a small subgroup but</font>

418
00:14:55,209 --> 00:14:59,410
that's that's<font color="#E5E5E5"> an independent concern we</font>

419
00:14:58,060 --> 00:15:01,479
also require<font color="#E5E5E5"> that</font><font color="#CCCCCC"> the shared seekers</font>

420
00:14:59,410 --> 00:15:02,890
don't have that form<font color="#E5E5E5"> there that sort</font><font color="#CCCCCC"> of</font>

421
00:15:01,480 --> 00:15:03,250
<font color="#E5E5E5">ugly</font><font color="#CCCCCC"> looking form in the</font><font color="#E5E5E5"> middle of the</font>

422
00:15:02,890 --> 00:15:05,290
slide

423
00:15:03,250 --> 00:15:06,910
and that's because if it has exactly

424
00:15:05,290 --> 00:15:08,500
<font color="#E5E5E5">that form then we have collisions</font>

425
00:15:06,910 --> 00:15:10,420
between different stages of<font color="#E5E5E5"> the key</font>

426
00:15:08,500 --> 00:15:13,480
schedule<font color="#E5E5E5"> where certain keys which are</font>

427
00:15:10,420 --> 00:15:14,920
generated at stage a could<font color="#CCCCCC"> be could be</font>

428
00:15:13,480 --> 00:15:17,170
confused for<font color="#E5E5E5"> the keys</font><font color="#CCCCCC"> that are</font><font color="#E5E5E5"> generated</font>

429
00:15:14,920 --> 00:15:18,790
a stage<font color="#CCCCCC"> B</font><font color="#E5E5E5"> is a</font><font color="#CCCCCC"> fairly technical concern</font>

430
00:15:17,170 --> 00:15:21,399
probably does not reflect a real attack

431
00:15:18,790 --> 00:15:22,899
<font color="#CCCCCC">but</font><font color="#E5E5E5"> this ambiguity</font><font color="#CCCCCC"> is kind of</font><font color="#E5E5E5"> causes our</font>

432
00:15:21,399 --> 00:15:24,970
proofs<font color="#E5E5E5"> to not succeed so we actually</font>

433
00:15:22,899 --> 00:15:27,000
<font color="#E5E5E5">need</font><font color="#CCCCCC"> to say that</font><font color="#E5E5E5"> this cannot happen in</font>

434
00:15:24,970 --> 00:15:29,620
order<font color="#E5E5E5"> for</font><font color="#CCCCCC"> for approves to</font><font color="#E5E5E5"> succeed</font>

435
00:15:27,000 --> 00:15:31,029
interestingly this particular ambiguity

436
00:15:29,620 --> 00:15:33,100
was independently<font color="#E5E5E5"> discovered and</font>

437
00:15:31,029 --> 00:15:35,529
discussed on the TLS mailing list<font color="#E5E5E5"> and</font>

438
00:15:33,100 --> 00:15:37,590
since then there's<font color="#CCCCCC"> a</font><font color="#E5E5E5"> change in draft 18</font>

439
00:15:35,529 --> 00:15:38,820
which exactly addresses this

440
00:15:37,590 --> 00:15:40,680
<font color="#E5E5E5">and so this assumption is no longer</font>

441
00:15:38,820 --> 00:15:42,510
needed<font color="#E5E5E5"> this</font><font color="#CCCCCC"> kind of shows you how the</font>

442
00:15:40,680 --> 00:15:45,359
analysis may sometimes uncover some

443
00:15:42,510 --> 00:15:48,330
assumptions which which<font color="#E5E5E5"> actually have an</font>

444
00:15:45,360 --> 00:15:51,300
impact<font color="#CCCCCC"> on the on</font><font color="#E5E5E5"> the on the on the way</font>

445
00:15:48,330 --> 00:15:52,500
the standard should be design<font color="#E5E5E5"> finally we</font>

446
00:15:51,300 --> 00:15:54,660
<font color="#E5E5E5">need a bunch of assumptions for</font><font color="#CCCCCC"> each</font>

447
00:15:52,500 --> 00:15:56,280
mark in particular and somewhat unusual

448
00:15:54,660 --> 00:15:57,600
assumptions<font color="#CCCCCC"> to account for all</font><font color="#E5E5E5"> the</font>

449
00:15:56,280 --> 00:16:01,740
different ways<font color="#E5E5E5"> that</font><font color="#CCCCCC"> it's used in</font><font color="#E5E5E5"> the</font>

450
00:15:57,600 --> 00:16:04,410
protocol so once we have<font color="#E5E5E5"> done this</font><font color="#CCCCCC"> right</font>

451
00:16:01,740 --> 00:16:05,850
once<font color="#E5E5E5"> you have done all this proof we</font>

452
00:16:04,410 --> 00:16:07,439
need to<font color="#E5E5E5"> kind of for the different stages</font>

453
00:16:05,850 --> 00:16:09,330
<font color="#CCCCCC">you need to put them</font><font color="#E5E5E5"> together so we have</font>

454
00:16:07,440 --> 00:16:11,070
a proof for the TLS protocol<font color="#E5E5E5"> that</font>

455
00:16:09,330 --> 00:16:15,900
pre-shared keys<font color="#E5E5E5"> proof for the TLS</font>

456
00:16:11,070 --> 00:16:17,100
<font color="#E5E5E5">protocol with the with the without</font>

457
00:16:15,900 --> 00:16:18,840
pre-shared<font color="#E5E5E5"> keys another one for the</font>

458
00:16:17,100 --> 00:16:20,370
record<font color="#E5E5E5"> layer you want to show that the</font>

459
00:16:18,840 --> 00:16:22,680
key generated<font color="#E5E5E5"> without pre-shared keys</font>

460
00:16:20,370 --> 00:16:24,570
<font color="#E5E5E5">can now be used as a</font><font color="#CCCCCC"> preciate key for</font>

461
00:16:22,680 --> 00:16:26,219
the<font color="#E5E5E5"> next handshake so it can be used for</font>

462
00:16:24,570 --> 00:16:27,720
<font color="#E5E5E5">the function you want to show that the</font>

463
00:16:26,220 --> 00:16:29,910
key generated<font color="#E5E5E5"> by both can be used</font><font color="#CCCCCC"> by the</font>

464
00:16:27,720 --> 00:16:31,140
record layer safely and the keys of the

465
00:16:29,910 --> 00:16:33,480
record layer themselves can be<font color="#E5E5E5"> used</font><font color="#CCCCCC"> for</font>

466
00:16:31,140 --> 00:16:35,280
key update and this whole proof<font color="#E5E5E5"> these</font>

467
00:16:33,480 --> 00:16:37,020
compositions are done by<font color="#CCCCCC"> hand they are</font>

468
00:16:35,280 --> 00:16:39,060
<font color="#CCCCCC">not by done by crypto various</font><font color="#E5E5E5"> kind of</font>

469
00:16:37,020 --> 00:16:42,390
involved but<font color="#E5E5E5"> at the</font><font color="#CCCCCC"> end of it you</font><font color="#E5E5E5"> get a</font>

470
00:16:39,060 --> 00:16:45,270
<font color="#CCCCCC">flu</font><font color="#E5E5E5"> for the whole protocol so we done</font>

471
00:16:42,390 --> 00:16:46,920
symbolic analysis<font color="#E5E5E5"> we've done we've we</font>

472
00:16:45,270 --> 00:16:48,990
<font color="#E5E5E5">have done a typical</font><font color="#CCCCCC"> proofs now how do</font><font color="#E5E5E5"> we</font>

473
00:16:46,920 --> 00:16:50,490
link this to a reference implementation

474
00:16:48,990 --> 00:16:54,300
so<font color="#CCCCCC"> that we know that we're not missing</font>

475
00:16:50,490 --> 00:16:55,980
<font color="#CCCCCC">details so we built a our own</font><font color="#E5E5E5"> difference</font>

476
00:16:54,300 --> 00:16:58,709
implementation of TLS called rescue<font color="#E5E5E5"> LS</font>

477
00:16:55,980 --> 00:17:00,450
<font color="#CCCCCC">it</font><font color="#E5E5E5"> suppose TLS 1.0 to 1.3 it interrupts</font>

478
00:16:58,710 --> 00:17:03,210
it all<font color="#E5E5E5"> draft 20 implementations out</font>

479
00:17:00,450 --> 00:17:05,580
<font color="#CCCCCC">there right now and it's written</font><font color="#E5E5E5"> in</font>

480
00:17:03,210 --> 00:17:08,610
<font color="#CCCCCC">javascript that</font><font color="#E5E5E5"> is primarily because of</font>

481
00:17:05,579 --> 00:17:10,290
<font color="#E5E5E5">two reasons</font><font color="#CCCCCC"> a it's</font><font color="#E5E5E5"> very easy</font><font color="#CCCCCC"> to deploy B</font>

482
00:17:08,609 --> 00:17:13,290
we<font color="#E5E5E5"> already had tools for analyzing</font>

483
00:17:10,290 --> 00:17:15,060
<font color="#CCCCCC">JavaScript code but as a consequence</font>

484
00:17:13,290 --> 00:17:16,440
it's also really clear<font color="#CCCCCC"> that this this</font>

485
00:17:15,060 --> 00:17:18,030
implementation is<font color="#E5E5E5"> meant for earlier</font>

486
00:17:16,440 --> 00:17:21,000
doctors researchers this<font color="#E5E5E5"> kind of thing</font>

487
00:17:18,030 --> 00:17:22,829
it's not for production<font color="#E5E5E5"> use here so from</font>

488
00:17:21,000 --> 00:17:25,650
<font color="#E5E5E5">this implementation we extract the core</font>

489
00:17:22,829 --> 00:17:28,379
protocol functions<font color="#E5E5E5"> functionality using a</font>

490
00:17:25,650 --> 00:17:29,880
tool that I will describe and then we

491
00:17:28,380 --> 00:17:31,830
can<font color="#E5E5E5"> we can integrate that into our</font>

492
00:17:29,880 --> 00:17:33,420
progress model to our<font color="#CCCCCC"> into the model</font>

493
00:17:31,830 --> 00:17:35,220
<font color="#E5E5E5">that we're using and in this way we can</font>

494
00:17:33,420 --> 00:17:38,250
keep the implementation and our models

495
00:17:35,220 --> 00:17:40,710
in sync<font color="#CCCCCC"> and this kind of procedure</font>

496
00:17:38,250 --> 00:17:42,900
ensures<font color="#CCCCCC"> that in our models we did</font><font color="#E5E5E5"> not</font>

497
00:17:40,710 --> 00:17:44,580
<font color="#E5E5E5">forget some crucial RFC implementation</font>

498
00:17:42,900 --> 00:17:46,740
details because<font color="#E5E5E5"> we are forced to keep it</font>

499
00:17:44,580 --> 00:17:48,120
in<font color="#E5E5E5"> sync with the</font><font color="#CCCCCC"> implementation but note</font>

500
00:17:46,740 --> 00:17:49,770
that<font color="#CCCCCC"> although we are verifying this</font>

501
00:17:48,120 --> 00:17:51,239
little<font color="#E5E5E5"> code protocol part they</font><font color="#CCCCCC"> are not</font>

502
00:17:49,770 --> 00:17:54,059
verifying most of the<font color="#CCCCCC"> implementation</font>

503
00:17:51,240 --> 00:17:55,679
nowhere near as a verified

504
00:17:54,059 --> 00:17:58,649
implementation in the<font color="#E5E5E5"> sense of me TLS</font>

505
00:17:55,679 --> 00:18:00,090
<font color="#CCCCCC">like Cedric was describing the</font>

506
00:17:58,650 --> 00:18:02,309
architecture of the ref<font color="#CCCCCC"> TLS is as</font>

507
00:18:00,090 --> 00:18:03,899
follows<font color="#E5E5E5"> on top we have the application</font>

508
00:18:02,309 --> 00:18:06,240
which is written<font color="#E5E5E5"> in JavaScript</font><font color="#CCCCCC"> it could</font>

509
00:18:03,900 --> 00:18:08,490
be like an order or a<font color="#E5E5E5"> lecture on at in</font>

510
00:18:06,240 --> 00:18:10,260
the<font color="#E5E5E5"> middle of the protocol layer which</font>

511
00:18:08,490 --> 00:18:12,420
is<font color="#E5E5E5"> again divided it's divided into three</font>

512
00:18:10,260 --> 00:18:14,790
it's all written in flow this statically

513
00:18:12,420 --> 00:18:17,309
typed<font color="#E5E5E5"> variant of JavaScript</font><font color="#CCCCCC"> that comes</font>

514
00:18:14,790 --> 00:18:20,700
from<font color="#E5E5E5"> Facebook</font><font color="#CCCCCC"> in the middle of it we</font>

515
00:18:17,309 --> 00:18:22,830
identify and isolate<font color="#E5E5E5"> a core protocol</font>

516
00:18:20,700 --> 00:18:24,420
module and this core protocol module has

517
00:18:22,830 --> 00:18:26,070
the protocol<font color="#E5E5E5"> state machine and</font><font color="#CCCCCC"> all</font><font color="#E5E5E5"> the</font>

518
00:18:24,420 --> 00:18:27,570
<font color="#CCCCCC">control element informations the keys of</font>

519
00:18:26,070 --> 00:18:30,720
the<font color="#E5E5E5"> protocol are all kept isolated</font>

520
00:18:27,570 --> 00:18:32,309
<font color="#CCCCCC">within</font><font color="#E5E5E5"> this module this module the score</font>

521
00:18:30,720 --> 00:18:34,290
is written in a language<font color="#CCCCCC"> called Pro</font>

522
00:18:32,309 --> 00:18:36,629
script which was<font color="#E5E5E5"> presented at euro SNP</font>

523
00:18:34,290 --> 00:18:38,610
last month and this<font color="#E5E5E5"> is</font><font color="#CCCCCC"> a</font><font color="#E5E5E5"> type subset</font>

524
00:18:36,630 --> 00:18:40,740
<font color="#E5E5E5">JavaScript subset which whose main</font>

525
00:18:38,610 --> 00:18:43,678
feature is that you can<font color="#CCCCCC"> extract</font><font color="#E5E5E5"> code</font>

526
00:18:40,740 --> 00:18:45,750
<font color="#CCCCCC">probative model from</font><font color="#E5E5E5"> it so from this</font>

527
00:18:43,679 --> 00:18:47,940
<font color="#E5E5E5">code protocol model you can extract out</font>

528
00:18:45,750 --> 00:18:49,440
<font color="#CCCCCC">prover</font><font color="#E5E5E5"> if a fragment of a probative</font>

529
00:18:47,940 --> 00:18:51,960
model and extended with<font color="#E5E5E5"> queries and</font>

530
00:18:49,440 --> 00:18:53,550
<font color="#CCCCCC">top-level processes and</font><font color="#E5E5E5"> an analyzer so</font>

531
00:18:51,960 --> 00:18:56,900
that allows<font color="#CCCCCC"> us to keep our previous</font>

532
00:18:53,550 --> 00:19:00,450
models and the code in some sort of sync

533
00:18:56,900 --> 00:19:02,700
<font color="#E5E5E5">so more details</font><font color="#CCCCCC"> in</font><font color="#E5E5E5"> the paper just a</font>

534
00:19:00,450 --> 00:19:04,380
summary<font color="#CCCCCC"> of results</font><font color="#E5E5E5"> we presented symbolic</font>

535
00:19:02,700 --> 00:19:06,000
<font color="#E5E5E5">analysis cryptographic</font><font color="#CCCCCC"> clues and</font><font color="#E5E5E5"> a</font>

536
00:19:04,380 --> 00:19:08,970
reference<font color="#E5E5E5"> implementation of TLS once we</font>

537
00:19:06,000 --> 00:19:10,470
draft<font color="#E5E5E5"> again but our work comes with many</font>

538
00:19:08,970 --> 00:19:12,360
limitations<font color="#E5E5E5"> and there's lots of ongoing</font>

539
00:19:10,470 --> 00:19:14,880
<font color="#CCCCCC">work to</font><font color="#E5E5E5"> kind</font><font color="#CCCCCC"> of have to improve on this</font>

540
00:19:12,360 --> 00:19:16,350
<font color="#E5E5E5">our symbolic model in ignores many</font>

541
00:19:14,880 --> 00:19:18,780
features<font color="#CCCCCC"> of the protocols which we would</font>

542
00:19:16,350 --> 00:19:20,820
like<font color="#CCCCCC"> to</font><font color="#E5E5E5"> add cryptographic</font><font color="#CCCCCC"> truth includes</font>

543
00:19:18,780 --> 00:19:23,760
many features<font color="#CCCCCC"> of the</font><font color="#E5E5E5"> protocol as</font><font color="#CCCCCC"> well or</font>

544
00:19:20,820 --> 00:19:25,230
in verified<font color="#CCCCCC"> our reference implementation</font>

545
00:19:23,760 --> 00:19:26,580
only<font color="#CCCCCC"> a very small fragment of</font><font color="#E5E5E5"> it is</font>

546
00:19:25,230 --> 00:19:28,470
<font color="#E5E5E5">verified it has a large trusted</font>

547
00:19:26,580 --> 00:19:30,210
computing base<font color="#E5E5E5"> so all of these results</font>

548
00:19:28,470 --> 00:19:32,130
should<font color="#E5E5E5"> be taken with a grain of salt but</font>

549
00:19:30,210 --> 00:19:35,130
I think we have<font color="#CCCCCC"> shown that our proof</font>

550
00:19:32,130 --> 00:19:37,230
methodology and<font color="#E5E5E5"> to chain is useful for</font>

551
00:19:35,130 --> 00:19:39,059
for<font color="#CCCCCC"> a</font><font color="#E5E5E5"> comprehensive analysis for a</font>

552
00:19:37,230 --> 00:19:42,000
<font color="#E5E5E5">complicated protocol like TLS</font><font color="#CCCCCC"> one tree</font>

553
00:19:39,059 --> 00:19:43,590
so the<font color="#E5E5E5"> all our code and models are under</font>

554
00:19:42,000 --> 00:19:46,470
active<font color="#CCCCCC"> development as you will see at</font>

555
00:19:43,590 --> 00:19:49,050
the<font color="#E5E5E5"> gate</font><font color="#CCCCCC"> log at that at</font><font color="#E5E5E5"> that URL</font><font color="#CCCCCC"> but I</font>

556
00:19:46,470 --> 00:19:51,750
welcome you to<font color="#E5E5E5"> download them and send us</font>

557
00:19:49,050 --> 00:19:53,080
comments on any of this and I<font color="#E5E5E5"> think I'm</font>

558
00:19:51,750 --> 00:19:59,810
done<font color="#E5E5E5"> thank</font><font color="#CCCCCC"> you</font>

559
00:19:53,080 --> 00:19:59,810
[Applause]

560
00:20:01,070 --> 00:20:06,419
one of the most beautiful things<font color="#CCCCCC"> in</font><font color="#E5E5E5"> the</font>

561
00:20:04,140 --> 00:20:10,620
paper<font color="#E5E5E5"> from</font><font color="#CCCCCC"> two years ago</font>

562
00:20:06,420 --> 00:20:13,970
was the<font color="#CCCCCC"> the</font><font color="#E5E5E5"> side by</font><font color="#CCCCCC"> side graphics</font><font color="#E5E5E5"> with</font>

563
00:20:10,620 --> 00:20:16,530
the red and<font color="#E5E5E5"> the green</font><font color="#CCCCCC"> showing all of</font><font color="#E5E5E5"> the</font>

564
00:20:13,970 --> 00:20:19,080
pads<font color="#CCCCCC"> that should not have been there or</font>

565
00:20:16,530 --> 00:20:21,720
that<font color="#E5E5E5"> we're very surprising</font><font color="#CCCCCC"> I wonder</font>

566
00:20:19,080 --> 00:20:24,659
whether in this case you didn't need to

567
00:20:21,720 --> 00:20:26,460
do<font color="#CCCCCC"> that because you have in the</font>

568
00:20:24,660 --> 00:20:30,420
reference implementation<font color="#E5E5E5"> gotten rid of</font>

569
00:20:26,460 --> 00:20:33,030
<font color="#E5E5E5">all</font><font color="#CCCCCC"> of those pads</font><font color="#E5E5E5"> so a good question</font>

570
00:20:30,420 --> 00:20:34,830
actually one of the main design points

571
00:20:33,030 --> 00:20:36,920
for the<font color="#CCCCCC"> ferrata</font><font color="#E5E5E5"> fence implementation was</font>

572
00:20:34,830 --> 00:20:41,250
to design<font color="#E5E5E5"> a very simple state machine</font>

573
00:20:36,920 --> 00:20:42,750
which avoids a<font color="#E5E5E5"> lot of those a lot of</font>

574
00:20:41,250 --> 00:20:45,750
<font color="#E5E5E5">those craziness</font><font color="#CCCCCC"> from the</font><font color="#E5E5E5"> missing</font><font color="#CCCCCC"> State</font>

575
00:20:42,750 --> 00:20:47,550
of the<font color="#CCCCCC"> Union</font><font color="#E5E5E5"> paper</font><font color="#CCCCCC"> but this is not the</font>

576
00:20:45,750 --> 00:20:50,220
<font color="#CCCCCC">final answer</font><font color="#E5E5E5"> the in messy</font><font color="#CCCCCC"> state even</font>

577
00:20:47,550 --> 00:20:51,659
<font color="#E5E5E5">analyzing other implementations</font><font color="#CCCCCC"> Els 1.3</font>

578
00:20:50,220 --> 00:20:53,670
implementations are just being<font color="#E5E5E5"> pushed</font>

579
00:20:51,660 --> 00:20:55,260
out right now and I'm totally

580
00:20:53,670 --> 00:20:56,610
anticipating that<font color="#E5E5E5"> some student and the</font>

581
00:20:55,260 --> 00:20:58,350
audience will take a look at all of<font color="#E5E5E5"> them</font>

582
00:20:56,610 --> 00:21:00,149
and<font color="#CCCCCC"> find</font><font color="#E5E5E5"> lots of green and red arrows on</font>

583
00:20:58,350 --> 00:21:03,709
them in the next six to eight<font color="#E5E5E5"> months as</font>

584
00:21:00,150 --> 00:21:03,710
well thank you

