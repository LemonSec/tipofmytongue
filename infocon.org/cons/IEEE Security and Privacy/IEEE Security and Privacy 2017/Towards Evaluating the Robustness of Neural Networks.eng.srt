1
00:00:08,170 --> 00:00:12,969
<font color="#E5E5E5">okay hi so my</font><font color="#CCCCCC"> name</font><font color="#E5E5E5"> is</font><font color="#CCCCCC"> Nicolas</font><font color="#E5E5E5"> and I'm</font>

2
00:00:12,080 --> 00:00:14,260
going to talk

3
00:00:12,970 --> 00:00:16,600
my paper towards evaluating the

4
00:00:14,260 --> 00:00:18,130
robustness of<font color="#E5E5E5"> neural networks and this</font>

5
00:00:16,600 --> 00:00:21,160
is joint work with<font color="#E5E5E5"> my</font><font color="#CCCCCC"> adviser</font><font color="#E5E5E5"> Dave</font>

6
00:00:18,130 --> 00:00:22,570
Wagner<font color="#E5E5E5"> so before I talk</font><font color="#CCCCCC"> about</font><font color="#E5E5E5"> anything</font>

7
00:00:21,160 --> 00:00:24,430
<font color="#E5E5E5">related to security let me give you a</font>

8
00:00:22,570 --> 00:00:26,080
<font color="#CCCCCC">little background on the machine</font>

9
00:00:24,430 --> 00:00:27,430
learning side of things<font color="#CCCCCC"> so for the</font>

10
00:00:26,080 --> 00:00:29,229
purposes of<font color="#E5E5E5"> this talk I'm</font><font color="#CCCCCC"> going to</font><font color="#E5E5E5"> give</font>

11
00:00:27,430 --> 00:00:32,500
us focusing on neural networks which you

12
00:00:29,230 --> 00:00:33,730
can basically think of as a function

13
00:00:32,500 --> 00:00:35,890
with some trainable parameters that's

14
00:00:33,730 --> 00:00:38,529
going to learn some<font color="#E5E5E5"> kind of mapping so</font>

15
00:00:35,890 --> 00:00:40,540
this might<font color="#CCCCCC"> be given an image classify</font><font color="#E5E5E5"> it</font>

16
00:00:38,530 --> 00:00:43,180
as a cat or a dog<font color="#CCCCCC"> giving a review</font>

17
00:00:40,540 --> 00:00:46,330
classified as good<font color="#CCCCCC"> or bad given a file</font>

18
00:00:43,180 --> 00:00:48,040
<font color="#E5E5E5">say it's malware or</font><font color="#CCCCCC"> a benign nor could</font>

19
00:00:46,330 --> 00:00:48,970
do<font color="#E5E5E5"> many types of things but for this</font>

20
00:00:48,040 --> 00:00:50,890
talk on they<font color="#E5E5E5"> look at just the</font>

21
00:00:48,970 --> 00:00:53,110
classification side of things<font color="#E5E5E5"> so</font><font color="#CCCCCC"> just</font>

22
00:00:50,890 --> 00:00:54,760
<font color="#CCCCCC">known that were some classification so</font>

23
00:00:53,110 --> 00:00:55,600
the image<font color="#E5E5E5"> everyone always shows you when</font>

24
00:00:54,760 --> 00:00:58,120
they<font color="#E5E5E5"> want to show you a neural network</font>

25
00:00:55,600 --> 00:00:58,990
<font color="#E5E5E5">looks something like this and the idea</font>

26
00:00:58,120 --> 00:01:01,690
<font color="#CCCCCC">is very</font><font color="#E5E5E5"> simple</font>

27
00:00:58,990 --> 00:01:03,040
<font color="#CCCCCC">we</font><font color="#E5E5E5"> have basically a graph with weights</font>

28
00:01:01,690 --> 00:01:05,530
on the edges<font color="#E5E5E5"> what we're going to put</font>

29
00:01:03,040 --> 00:01:07,049
values in the nodes<font color="#E5E5E5"> we start out by</font>

30
00:01:05,530 --> 00:01:09,430
<font color="#E5E5E5">feeding the input with some kind of rod</font>

31
00:01:07,049 --> 00:01:10,750
representation of the values<font color="#E5E5E5"> so I'm</font>

32
00:01:09,430 --> 00:01:12,369
going to<font color="#E5E5E5"> looking at image</font><font color="#CCCCCC"> classification</font>

33
00:01:10,750 --> 00:01:14,759
in particular<font color="#E5E5E5"> so we're going to feed in</font>

34
00:01:12,369 --> 00:01:16,810
<font color="#E5E5E5">the raw values under the very left and</font>

35
00:01:14,759 --> 00:01:18,580
then what we're<font color="#E5E5E5"> going to do is we're</font>

36
00:01:16,810 --> 00:01:19,900
<font color="#E5E5E5">going to take these values multiply them</font>

37
00:01:18,580 --> 00:01:21,940
by the weights<font color="#E5E5E5"> add things together and</font>

38
00:01:19,900 --> 00:01:23,290
go layer by<font color="#CCCCCC"> layer</font><font color="#E5E5E5"> computing the values</font>

39
00:01:21,940 --> 00:01:24,520
<font color="#CCCCCC">that's</font><font color="#E5E5E5"> next layer on the next layer</font><font color="#CCCCCC"> on</font>

40
00:01:23,290 --> 00:01:27,430
the next layer until<font color="#E5E5E5"> finally we get some</font>

41
00:01:24,520 --> 00:01:28,780
<font color="#E5E5E5">outputs and if we did</font><font color="#CCCCCC"> it</font><font color="#E5E5E5"> exactly as</font>

42
00:01:27,430 --> 00:01:30,250
described here<font color="#E5E5E5"> that would almost work</font>

43
00:01:28,780 --> 00:01:32,200
<font color="#E5E5E5">except with the fact this would be an</font>

44
00:01:30,250 --> 00:01:34,150
entirely<font color="#E5E5E5"> linear function and that</font>

45
00:01:32,200 --> 00:01:35,620
wouldn't<font color="#E5E5E5"> be</font><font color="#CCCCCC"> very useful</font><font color="#E5E5E5"> and so instead</font>

46
00:01:34,150 --> 00:01:37,450
what we do<font color="#E5E5E5"> is we</font><font color="#CCCCCC"> apply a single</font>

47
00:01:35,620 --> 00:01:39,610
non-linearity<font color="#E5E5E5"> at some of these</font>

48
00:01:37,450 --> 00:01:41,590
intermediate<font color="#E5E5E5"> nodes the most commonly</font>

49
00:01:39,610 --> 00:01:43,600
used<font color="#E5E5E5"> function here is known as</font><font color="#CCCCCC"> well.you</font>

50
00:01:41,590 --> 00:01:45,850
<font color="#CCCCCC">it's basically</font><font color="#E5E5E5"> just take the max of 0</font><font color="#CCCCCC"> in</font>

51
00:01:43,600 --> 00:01:46,720
the<font color="#E5E5E5"> original function</font><font color="#CCCCCC"> and then we end up</font>

52
00:01:45,850 --> 00:01:49,059
<font color="#E5E5E5">with something that</font><font color="#CCCCCC"> looks sorta like</font>

53
00:01:46,720 --> 00:01:50,470
<font color="#CCCCCC">this where we have</font><font color="#E5E5E5"> applied some initial</font>

54
00:01:49,060 --> 00:01:51,940
<font color="#E5E5E5">inputs do some multiplications and</font>

55
00:01:50,470 --> 00:01:54,010
additions and<font color="#E5E5E5"> a single nonlinear</font><font color="#CCCCCC"> to</font>

56
00:01:51,940 --> 00:01:55,509
every node but we do a lot of<font color="#E5E5E5"> those and</font>

57
00:01:54,010 --> 00:01:59,590
so we can represent<font color="#E5E5E5"> basically any</font>

58
00:01:55,510 --> 00:02:02,229
function we<font color="#E5E5E5"> want with neural networks so</font>

59
00:01:59,590 --> 00:02:03,640
the output of<font color="#E5E5E5"> a neural network is going</font>

60
00:02:02,229 --> 00:02:06,700
to be a<font color="#CCCCCC"> probability distribution over</font>

61
00:02:03,640 --> 00:02:08,440
the values so if we have<font color="#E5E5E5"> output being P</font>

62
00:02:06,700 --> 00:02:10,209
and Q<font color="#CCCCCC"> and some other things then we say</font>

63
00:02:08,440 --> 00:02:12,010
<font color="#CCCCCC">that P is</font><font color="#E5E5E5"> the probability of class</font><font color="#CCCCCC"> 1 and</font>

64
00:02:10,209 --> 00:02:16,450
Q is the<font color="#CCCCCC"> probability of</font><font color="#E5E5E5"> class 2 and so</font>

65
00:02:12,010 --> 00:02:18,519
<font color="#CCCCCC">on for all</font><font color="#E5E5E5"> the other outputs in order to</font>

66
00:02:16,450 --> 00:02:20,500
train a neural network<font color="#E5E5E5"> we define some</font>

67
00:02:18,519 --> 00:02:23,080
type of<font color="#E5E5E5"> loss function which is a measure</font>

68
00:02:20,500 --> 00:02:24,580
of how<font color="#CCCCCC"> accurate the network is the idea</font>

69
00:02:23,080 --> 00:02:25,130
is the network loss function<font color="#E5E5E5"> is very</font>

70
00:02:24,580 --> 00:02:26,930
small

71
00:02:25,130 --> 00:02:29,299
very accurate<font color="#CCCCCC"> and the loss function is</font>

72
00:02:26,930 --> 00:02:30,890
high if<font color="#E5E5E5"> network is not accurate and then</font>

73
00:02:29,300 --> 00:02:32,510
we use the<font color="#E5E5E5"> process</font><font color="#CCCCCC"> known as gradient</font>

74
00:02:30,890 --> 00:02:35,450
<font color="#E5E5E5">descent</font><font color="#CCCCCC"> in order to actually</font><font color="#E5E5E5"> make the</font>

75
00:02:32,510 --> 00:02:37,489
network<font color="#CCCCCC"> but something is useful so we do</font>

76
00:02:35,450 --> 00:02:42,049
here is<font color="#CCCCCC"> we start at some random point in</font>

77
00:02:37,490 --> 00:02:43,520
<font color="#CCCCCC">the tree in</font><font color="#E5E5E5"> the space and we slowly take</font>

78
00:02:42,050 --> 00:02:45,200
steps trying to minimize the<font color="#E5E5E5"> loss</font>

79
00:02:43,520 --> 00:02:46,280
function at each<font color="#E5E5E5"> step so we start off</font>

80
00:02:45,200 --> 00:02:48,290
somewhere here in the<font color="#E5E5E5"> middle we'll go a</font>

81
00:02:46,280 --> 00:02:49,910
little bit closer to a minimum value

82
00:02:48,290 --> 00:02:51,829
<font color="#CCCCCC">take another step</font><font color="#E5E5E5"> put a little bit</font>

83
00:02:49,910 --> 00:02:52,910
smaller a<font color="#CCCCCC"> little</font><font color="#E5E5E5"> tip them smaller and</font>

84
00:02:51,830 --> 00:02:54,140
keep<font color="#E5E5E5"> going until we end up with</font>

85
00:02:52,910 --> 00:02:56,329
something<font color="#E5E5E5"> which</font><font color="#CCCCCC"> is a reasonable</font>

86
00:02:54,140 --> 00:02:59,149
approximation of the smallest value<font color="#E5E5E5"> we</font>

87
00:02:56,330 --> 00:02:59,960
can find<font color="#E5E5E5"> so this is basically everything</font>

88
00:02:59,150 --> 00:03:01,160
<font color="#CCCCCC">you need to know about neural networks</font>

89
00:02:59,960 --> 00:03:02,420
<font color="#CCCCCC">from my talk there are sort of two</font>

90
00:03:01,160 --> 00:03:03,920
important<font color="#CCCCCC"> things the first</font><font color="#E5E5E5"> thing</font><font color="#CCCCCC"> you</font>

91
00:03:02,420 --> 00:03:05,570
<font color="#CCCCCC">need to know is that</font><font color="#E5E5E5"> you know it's a</font>

92
00:03:03,920 --> 00:03:06,559
highly nonlinear and the second thing<font color="#E5E5E5"> is</font>

93
00:03:05,570 --> 00:03:11,810
the<font color="#E5E5E5"> point to know is the process of</font>

94
00:03:06,560 --> 00:03:13,400
<font color="#E5E5E5">gradient descent</font><font color="#CCCCCC"> okay</font><font color="#E5E5E5"> so that's what</font>

95
00:03:11,810 --> 00:03:15,620
their lyrics are<font color="#CCCCCC"> now so are</font><font color="#E5E5E5"> we why we</font>

96
00:03:13,400 --> 00:03:17,750
care<font color="#CCCCCC"> about them so the image that</font>

97
00:03:15,620 --> 00:03:19,850
<font color="#E5E5E5">contest</font><font color="#CCCCCC"> is a relatively famous contest</font>

98
00:03:17,750 --> 00:03:21,500
there was<font color="#CCCCCC"> released in</font><font color="#E5E5E5"> 2009 the objective</font>

99
00:03:19,850 --> 00:03:23,840
is you're given some type of<font color="#E5E5E5"> image</font><font color="#CCCCCC"> and</font>

100
00:03:21,500 --> 00:03:26,060
you<font color="#E5E5E5"> want to</font><font color="#CCCCCC"> classify this</font><font color="#E5E5E5"> image into one</font>

101
00:03:23,840 --> 00:03:27,740
of a thousand<font color="#E5E5E5"> different classes so this</font>

102
00:03:26,060 --> 00:03:30,140
image is<font color="#CCCCCC"> of a dog</font><font color="#E5E5E5"> and so the output</font><font color="#CCCCCC"> of</font>

103
00:03:27,740 --> 00:03:31,490
the classifier should be dog and there

104
00:03:30,140 --> 00:03:32,779
are a thousand other classes there's

105
00:03:31,490 --> 00:03:36,490
school bus and hummingbird and

106
00:03:32,780 --> 00:03:40,250
everything you can<font color="#CCCCCC"> imagine</font><font color="#E5E5E5"> so in 2011</font>

107
00:03:36,490 --> 00:03:43,130
<font color="#CCCCCC">the best team well in this contest</font>

108
00:03:40,250 --> 00:03:45,160
managed to get<font color="#E5E5E5"> 75% accuracy and no one</font>

109
00:03:43,130 --> 00:03:46,790
<font color="#E5E5E5">was using neural networks at this time</font>

110
00:03:45,160 --> 00:03:48,109
<font color="#CCCCCC">seventy-five percent</font><font color="#E5E5E5"> I could see is</font>

111
00:03:46,790 --> 00:03:50,120
still reasonably accurate but there's a

112
00:03:48,110 --> 00:03:52,610
lot<font color="#E5E5E5"> of game we can still have and so the</font>

113
00:03:50,120 --> 00:03:53,690
<font color="#E5E5E5">following year</font><font color="#CCCCCC"> one team decided they</font>

114
00:03:52,610 --> 00:03:55,580
were<font color="#E5E5E5"> going to try</font><font color="#CCCCCC"> using neural networks</font>

115
00:03:53,690 --> 00:03:57,800
<font color="#CCCCCC">that increase the accuracy</font><font color="#E5E5E5"> to</font><font color="#CCCCCC"> 85 percent</font>

116
00:03:55,580 --> 00:04:00,800
nearly bringing the error rate down by a

117
00:03:57,800 --> 00:04:02,600
<font color="#E5E5E5">factor of</font><font color="#CCCCCC"> two only one team used neural</font>

118
00:04:00,800 --> 00:04:04,459
networks in this year<font color="#E5E5E5"> and they did the</font>

119
00:04:02,600 --> 00:04:05,540
<font color="#E5E5E5">best and so the power of neural networks</font>

120
00:04:04,459 --> 00:04:08,120
can<font color="#CCCCCC"> be</font><font color="#E5E5E5"> seen by the fact that the</font>

121
00:04:05,540 --> 00:04:10,340
following<font color="#CCCCCC"> year every</font><font color="#E5E5E5"> single team and had</font>

122
00:04:08,120 --> 00:04:11,810
a cop submission<font color="#CCCCCC"> use</font><font color="#E5E5E5"> neural networks so</font>

123
00:04:10,340 --> 00:04:13,990
<font color="#CCCCCC">we go</font><font color="#E5E5E5"> from no one using neural networks</font>

124
00:04:11,810 --> 00:04:16,250
in 2011 to<font color="#E5E5E5"> everyone using them in 2013</font>

125
00:04:13,990 --> 00:04:20,209
<font color="#E5E5E5">and no</font><font color="#CCCCCC"> now it's a</font><font color="#E5E5E5"> really powerful and</font>

126
00:04:16,250 --> 00:04:21,079
today we have<font color="#CCCCCC"> 97% accuracy on this</font>

127
00:04:20,209 --> 00:04:24,200
contest

128
00:04:21,079 --> 00:04:25,789
so really<font color="#CCCCCC"> neural</font><font color="#E5E5E5"> networks give us the</font>

129
00:04:24,200 --> 00:04:27,289
best<font color="#CCCCCC"> results if you can</font><font color="#E5E5E5"> think of any</font>

130
00:04:25,790 --> 00:04:29,090
task<font color="#E5E5E5"> that you wanted to apply machine</font>

131
00:04:27,290 --> 00:04:30,320
learning<font color="#E5E5E5"> to chances are neural networks</font>

132
00:04:29,090 --> 00:04:31,119
give you better accuracy than<font color="#E5E5E5"> anything</font>

133
00:04:30,320 --> 00:04:34,130
else

134
00:04:31,120 --> 00:04:35,510
so that's all great<font color="#CCCCCC"> in everything</font><font color="#E5E5E5"> but</font>

135
00:04:34,130 --> 00:04:37,669
<font color="#E5E5E5">this is security</font><font color="#CCCCCC"> conference and so I'm</font>

136
00:04:35,510 --> 00:04:38,688
going<font color="#E5E5E5"> to tell you that if Akash and the</font>

137
00:04:37,669 --> 00:04:41,359
catch<font color="#E5E5E5"> is that there</font>

138
00:04:38,689 --> 00:04:44,539
it's<font color="#CCCCCC"> very very easy</font><font color="#E5E5E5"> to fool</font><font color="#CCCCCC"> and in</font>

139
00:04:41,360 --> 00:04:48,559
<font color="#CCCCCC">particular</font><font color="#E5E5E5"> I'm going to say is that if</font>

140
00:04:44,539 --> 00:04:52,878
you give me some image X and any label

141
00:04:48,559 --> 00:04:55,159
you want<font color="#CCCCCC"> T then</font><font color="#E5E5E5"> I can find in an input X</font>

142
00:04:52,879 --> 00:04:57,499
prime which is<font color="#E5E5E5"> very close to X but so</font>

143
00:04:55,159 --> 00:05:00,529
this network<font color="#E5E5E5"> when classified on X</font><font color="#CCCCCC"> Prime</font>

144
00:04:57,499 --> 00:05:03,079
will tell me<font color="#E5E5E5"> label</font><font color="#CCCCCC"> T this is sort of bad</font>

145
00:05:00,529 --> 00:05:05,808
it means that if I show<font color="#CCCCCC"> you these two</font>

146
00:05:03,079 --> 00:05:07,669
images<font color="#E5E5E5"> of a dog</font><font color="#CCCCCC"> and ask a network to</font>

147
00:05:05,809 --> 00:05:09,889
classify them<font color="#E5E5E5"> it will tell</font><font color="#CCCCCC"> me</font><font color="#E5E5E5"> the left</font>

148
00:05:07,669 --> 00:05:10,938
one<font color="#CCCCCC"> on</font><font color="#E5E5E5"> the left is correctly a dog but</font>

149
00:05:09,889 --> 00:05:13,879
tell me<font color="#E5E5E5"> the one</font><font color="#CCCCCC"> on the right is a</font>

150
00:05:10,939 --> 00:05:15,199
hummingbird<font color="#E5E5E5"> and clearly this is not none</font>

151
00:05:13,879 --> 00:05:17,779
<font color="#CCCCCC">of us with</font><font color="#E5E5E5"> the hummingbird</font>

152
00:05:15,199 --> 00:05:19,399
but this network<font color="#E5E5E5"> has made this decision</font>

153
00:05:17,779 --> 00:05:21,829
<font color="#CCCCCC">and so what</font><font color="#E5E5E5"> this talk</font><font color="#CCCCCC"> is when</font><font color="#E5E5E5"> we talking</font>

154
00:05:19,399 --> 00:05:23,949
<font color="#CCCCCC">about</font><font color="#E5E5E5"> is how I managed to do this what</font>

155
00:05:21,829 --> 00:05:28,759
do we do it<font color="#E5E5E5"> actually make this possible</font>

156
00:05:23,949 --> 00:05:30,529
<font color="#CCCCCC">so brief</font><font color="#E5E5E5"> model</font><font color="#CCCCCC"> I'm going to</font><font color="#E5E5E5"> assume</font><font color="#CCCCCC"> that</font>

157
00:05:28,759 --> 00:05:33,409
the adversary<font color="#E5E5E5"> has complete</font><font color="#CCCCCC"> access to</font><font color="#E5E5E5"> the</font>

158
00:05:30,529 --> 00:05:34,699
model in all of the<font color="#CCCCCC"> parameters</font><font color="#E5E5E5"> some good</font>

159
00:05:33,409 --> 00:05:36,409
work has been shown<font color="#CCCCCC"> that actually you</font>

160
00:05:34,699 --> 00:05:37,639
can<font color="#E5E5E5"> relax this assumption but for the</font>

161
00:05:36,409 --> 00:05:38,959
purpose<font color="#E5E5E5"> of this talk let's just assume</font>

162
00:05:37,639 --> 00:05:41,419
<font color="#CCCCCC">that the adversary have complete</font><font color="#E5E5E5"> access</font>

163
00:05:38,959 --> 00:05:43,729
to<font color="#E5E5E5"> the model and their goal is going to</font>

164
00:05:41,419 --> 00:05:46,459
<font color="#E5E5E5">be to construct adversarial examples to</font>

165
00:05:43,729 --> 00:05:49,039
construct these fooling images on this

166
00:05:46,459 --> 00:05:51,019
<font color="#E5E5E5">network the other thing to know about</font>

167
00:05:49,039 --> 00:05:52,759
adversarial examples<font color="#E5E5E5"> is there's been a</font>

168
00:05:51,019 --> 00:05:53,989
huge<font color="#E5E5E5"> amount of work attempting to</font>

169
00:05:52,759 --> 00:05:55,219
prevent adversarial examples<font color="#CCCCCC"> from</font>

170
00:05:53,989 --> 00:05:56,989
networks this<font color="#CCCCCC"> is just the papers I'm</font>

171
00:05:55,219 --> 00:05:59,389
aware<font color="#CCCCCC"> of from last year</font><font color="#E5E5E5"> and a half that</font>

172
00:05:56,989 --> 00:06:01,638
<font color="#E5E5E5">try and remove adversarial examples from</font>

173
00:05:59,389 --> 00:06:04,039
<font color="#E5E5E5">neural networks and there's a lot of</font><font color="#CCCCCC"> it</font>

174
00:06:01,639 --> 00:06:05,539
and so the<font color="#E5E5E5"> question is which</font><font color="#CCCCCC"> of these</font>

175
00:06:04,039 --> 00:06:07,099
are good approaches in<font color="#CCCCCC"> which of these</font>

176
00:06:05,539 --> 00:06:10,039
aren't<font color="#E5E5E5"> good approaches then that can be</font>

177
00:06:07,099 --> 00:06:11,719
broken<font color="#E5E5E5"> and so for this talk what I'm</font>

178
00:06:10,039 --> 00:06:13,669
going to<font color="#E5E5E5"> be focusing on is asking the</font>

179
00:06:11,719 --> 00:06:16,009
<font color="#E5E5E5">question how</font><font color="#CCCCCC"> should we evaluate if a</font>

180
00:06:13,669 --> 00:06:17,329
defense is actually<font color="#E5E5E5"> effective how do we</font>

181
00:06:16,009 --> 00:06:21,739
know which<font color="#CCCCCC"> of these defenses work in</font>

182
00:06:17,329 --> 00:06:23,779
which of them don't so to do that you

183
00:06:21,739 --> 00:06:26,899
can consider in general<font color="#CCCCCC"> two</font><font color="#E5E5E5"> different</font>

184
00:06:23,779 --> 00:06:29,209
ways of evaluating<font color="#E5E5E5"> robustness the first</font>

185
00:06:26,899 --> 00:06:31,099
way you<font color="#E5E5E5"> can evaluate robustness is to</font>

186
00:06:29,209 --> 00:06:33,469
construct a proof<font color="#E5E5E5"> and you can say</font>

187
00:06:31,099 --> 00:06:35,089
<font color="#E5E5E5">something</font><font color="#CCCCCC"> like</font><font color="#E5E5E5"> for any two inputs that</font>

188
00:06:33,469 --> 00:06:36,769
<font color="#E5E5E5">are closer than Delta</font><font color="#CCCCCC"> there are outputs</font>

189
00:06:35,089 --> 00:06:39,289
differ by no more<font color="#CCCCCC"> than epsilon</font><font color="#E5E5E5"> and</font>

190
00:06:36,769 --> 00:06:40,489
therefore the<font color="#E5E5E5"> network is secure and</font><font color="#CCCCCC"> that</font>

191
00:06:39,289 --> 00:06:42,709
would be great and<font color="#E5E5E5"> some people have</font>

192
00:06:40,489 --> 00:06:44,119
<font color="#E5E5E5">tried that but the main limitation is</font>

193
00:06:42,709 --> 00:06:45,979
<font color="#E5E5E5">that these approaches scale to network</font>

194
00:06:44,119 --> 00:06:48,319
with tens or maybe hundreds<font color="#E5E5E5"> of neurons</font>

195
00:06:45,979 --> 00:06:50,080
<font color="#CCCCCC">but the approach that</font><font color="#E5E5E5"> we use in</font><font color="#CCCCCC"> practice</font>

196
00:06:48,319 --> 00:06:51,819
have millions of neurons

197
00:06:50,080 --> 00:06:53,530
and so we really are five orders of

198
00:06:51,819 --> 00:06:55,960
magnitude<font color="#CCCCCC"> away</font><font color="#E5E5E5"> from being able to use</font>

199
00:06:53,530 --> 00:06:57,250
<font color="#CCCCCC">these approaches in practice so allowing</font>

200
00:06:55,960 --> 00:06:59,859
<font color="#E5E5E5">the focus on</font><font color="#CCCCCC"> doing on my talk is</font>

201
00:06:57,250 --> 00:07:02,050
constructing an attack and say that if

202
00:06:59,860 --> 00:07:04,479
you can apply this<font color="#E5E5E5"> attack to your</font>

203
00:07:02,050 --> 00:07:07,030
defense<font color="#E5E5E5"> and it succeeds then the</font>

204
00:07:04,479 --> 00:07:11,020
robustness<font color="#CCCCCC"> of your</font><font color="#E5E5E5"> defense is no greater</font>

205
00:07:07,030 --> 00:07:13,090
than<font color="#CCCCCC"> whatever I can</font><font color="#E5E5E5"> do with my attack so</font>

206
00:07:11,020 --> 00:07:14,438
how do we mount<font color="#E5E5E5"> this attack well we</font>

207
00:07:13,090 --> 00:07:16,479
basically<font color="#E5E5E5"> have two key insights the</font>

208
00:07:14,439 --> 00:07:18,009
first key insight is that<font color="#E5E5E5"> gradient</font>

209
00:07:16,479 --> 00:07:19,539
descent which is this process<font color="#CCCCCC"> we used to</font>

210
00:07:18,009 --> 00:07:21,819
<font color="#CCCCCC">train neural networks</font><font color="#E5E5E5"> works very well</font>

211
00:07:19,539 --> 00:07:26,020
<font color="#E5E5E5">and so can we try and</font><font color="#CCCCCC"> use this approach</font>

212
00:07:21,819 --> 00:07:27,819
<font color="#E5E5E5">to attack them too so we try to do this</font>

213
00:07:26,020 --> 00:07:29,859
and to<font color="#CCCCCC"> do that you need some kind of</font>

214
00:07:27,819 --> 00:07:30,969
function you<font color="#E5E5E5"> want to minimize</font><font color="#CCCCCC"> and so the</font>

215
00:07:29,860 --> 00:07:32,620
<font color="#E5E5E5">function I choose to minimize</font><font color="#CCCCCC"> looks</font>

216
00:07:30,969 --> 00:07:34,000
something<font color="#CCCCCC"> like this and what it's going</font>

217
00:07:32,620 --> 00:07:36,280
<font color="#CCCCCC">to say is I</font><font color="#E5E5E5"> want</font><font color="#CCCCCC"> to</font><font color="#E5E5E5"> minimize the</font>

218
00:07:34,000 --> 00:07:39,280
<font color="#E5E5E5">distance between the valid image X and</font>

219
00:07:36,280 --> 00:07:41,198
the adversarial example X prime such

220
00:07:39,280 --> 00:07:43,059
that<font color="#CCCCCC"> two</font><font color="#E5E5E5"> things are true the first thing</font>

221
00:07:41,199 --> 00:07:45,099
that has<font color="#CCCCCC"> to be true is we have to have</font>

222
00:07:43,060 --> 00:07:47,139
<font color="#CCCCCC">that X prime is actually</font><font color="#E5E5E5"> classified</font><font color="#CCCCCC"> as</font>

223
00:07:45,099 --> 00:07:48,849
the target class<font color="#CCCCCC"> T that I want otherwise</font>

224
00:07:47,139 --> 00:07:50,469
it's not an adversarial example<font color="#E5E5E5"> and the</font>

225
00:07:48,849 --> 00:07:52,599
second<font color="#E5E5E5"> thing is that X</font><font color="#CCCCCC"> prime</font><font color="#E5E5E5"> has to be</font>

226
00:07:50,469 --> 00:07:54,310
valid image<font color="#E5E5E5"> whereby valid here I</font><font color="#CCCCCC"> just</font>

227
00:07:52,599 --> 00:07:56,319
mean relatively simple thing that<font color="#CCCCCC"> like</font>

228
00:07:54,310 --> 00:07:59,710
each pixel value is<font color="#E5E5E5"> discrete between 0</font>

229
00:07:56,319 --> 00:08:01,240
and 255<font color="#E5E5E5"> so you can try this you</font><font color="#CCCCCC"> apply</font>

230
00:07:59,710 --> 00:08:02,650
gradient<font color="#E5E5E5"> descent to this and see what</font>

231
00:08:01,240 --> 00:08:04,509
<font color="#E5E5E5">happens and you would realize that it</font>

232
00:08:02,650 --> 00:08:06,789
<font color="#E5E5E5">fails completely and the reason why it</font>

233
00:08:04,509 --> 00:08:08,789
fails in this case is that<font color="#E5E5E5"> these</font>

234
00:08:06,789 --> 00:08:10,930
nonlinear constraints are very hard

235
00:08:08,789 --> 00:08:13,690
<font color="#CCCCCC">gradient descent</font><font color="#E5E5E5"> works well over smooth</font>

236
00:08:10,930 --> 00:08:15,339
boundaries but we're evaluating a neural

237
00:08:13,690 --> 00:08:17,710
network<font color="#E5E5E5"> in the constraint which makes</font>

238
00:08:15,339 --> 00:08:19,479
very very<font color="#CCCCCC"> difficult so instead what we</font>

239
00:08:17,710 --> 00:08:21,339
do is we take a trick from<font color="#E5E5E5"> the convex</font>

240
00:08:19,479 --> 00:08:22,750
optimization literature<font color="#E5E5E5"> and we move the</font>

241
00:08:21,339 --> 00:08:24,849
difficult constraint<font color="#E5E5E5"> into the objective</font>

242
00:08:22,750 --> 00:08:26,080
<font color="#CCCCCC">function and so we give avoid</font>

243
00:08:24,849 --> 00:08:28,419
reformulations that<font color="#E5E5E5"> looks sort</font><font color="#CCCCCC"> of</font>

244
00:08:26,080 --> 00:08:31,240
something<font color="#E5E5E5"> like this moga is still going</font>

245
00:08:28,419 --> 00:08:32,890
<font color="#E5E5E5">to minimize the distance between valid</font>

246
00:08:31,240 --> 00:08:34,539
image<font color="#E5E5E5"> X in the</font><font color="#CCCCCC"> adversary example X Prime</font>

247
00:08:32,890 --> 00:08:37,059
but now we're<font color="#E5E5E5"> going</font><font color="#CCCCCC"> to also introduce</font>

248
00:08:34,539 --> 00:08:39,399
some<font color="#E5E5E5"> new function G which we're going to</font>

249
00:08:37,059 --> 00:08:41,169
apply<font color="#E5E5E5"> to the</font><font color="#CCCCCC"> aperture example X</font><font color="#E5E5E5"> Prime we</font>

250
00:08:39,399 --> 00:08:42,458
still have the<font color="#CCCCCC"> 1</font><font color="#E5E5E5"> constraints that the</font>

251
00:08:41,169 --> 00:08:44,019
<font color="#E5E5E5">image is valid but this is sort</font><font color="#CCCCCC"> of a</font>

252
00:08:42,458 --> 00:08:45,880
nice convex region<font color="#E5E5E5"> is that easy to</font>

253
00:08:44,019 --> 00:08:48,220
<font color="#CCCCCC">handle so the question</font><font color="#E5E5E5"> here</font><font color="#CCCCCC"> is</font><font color="#E5E5E5"> what is</font>

254
00:08:45,880 --> 00:08:49,779
<font color="#E5E5E5">this what is</font><font color="#CCCCCC"> this function G the</font>

255
00:08:48,220 --> 00:08:52,120
<font color="#E5E5E5">function G is just some kind</font><font color="#CCCCCC"> of loss</font>

256
00:08:49,779 --> 00:08:55,360
function that<font color="#CCCCCC"> describes how close we are</font>

257
00:08:52,120 --> 00:08:58,240
to being classified as T with the idea

258
00:08:55,360 --> 00:09:00,790
being that if G of<font color="#CCCCCC"> X prime is less than</font>

259
00:08:58,240 --> 00:09:01,310
<font color="#E5E5E5">or</font><font color="#CCCCCC"> equal</font><font color="#E5E5E5"> to 0 then we have that f of X</font>

260
00:09:00,790 --> 00:09:03,800
prime<font color="#E5E5E5"> is</font>

261
00:09:01,310 --> 00:09:05,540
being classified as<font color="#E5E5E5"> T and if</font><font color="#CCCCCC"> gmx</font><font color="#E5E5E5"> time is</font>

262
00:09:03,800 --> 00:09:07,189
greater than<font color="#E5E5E5"> zero then</font><font color="#CCCCCC"> we're not yet</font>

263
00:09:05,540 --> 00:09:08,810
classified<font color="#CCCCCC"> as T and hopefully</font><font color="#E5E5E5"> it's sort</font>

264
00:09:07,190 --> 00:09:12,110
<font color="#E5E5E5">of smoothly interval in</font><font color="#CCCCCC"> between these</font>

265
00:09:08,810 --> 00:09:14,479
two results<font color="#CCCCCC"> what's an</font><font color="#E5E5E5"> example of</font><font color="#CCCCCC"> this</font>

266
00:09:12,110 --> 00:09:15,590
function well one example<font color="#E5E5E5"> that you</font><font color="#CCCCCC"> can</font>

267
00:09:14,480 --> 00:09:17,779
think<font color="#E5E5E5"> of which</font><font color="#CCCCCC"> is sort of the</font><font color="#E5E5E5"> simple</font>

268
00:09:15,590 --> 00:09:21,230
<font color="#CCCCCC">example</font><font color="#E5E5E5"> is to say well take the network</font>

269
00:09:17,779 --> 00:09:23,660
<font color="#E5E5E5">we'll evaluate it on this</font><font color="#CCCCCC"> input X prime</font>

270
00:09:21,230 --> 00:09:26,779
<font color="#CCCCCC">will</font><font color="#E5E5E5"> look at the probability</font><font color="#CCCCCC"> of class</font><font color="#E5E5E5"> T</font>

271
00:09:23,660 --> 00:09:28,069
and subtract<font color="#E5E5E5"> that from one so what's</font>

272
00:09:26,779 --> 00:09:30,320
what does it look<font color="#E5E5E5"> like well it's the</font>

273
00:09:28,070 --> 00:09:32,930
network<font color="#CCCCCC"> f of</font><font color="#E5E5E5"> X</font><font color="#CCCCCC"> Prime says the</font>

274
00:09:30,320 --> 00:09:35,930
<font color="#CCCCCC">probability of</font><font color="#E5E5E5"> T is</font><font color="#CCCCCC"> 1 then</font><font color="#E5E5E5"> we end up</font>

275
00:09:32,930 --> 00:09:38,029
<font color="#E5E5E5">with 1 minus 1</font><font color="#CCCCCC"> and 0 and conversely</font><font color="#E5E5E5"> if</font>

276
00:09:35,930 --> 00:09:41,989
<font color="#CCCCCC">we say</font><font color="#E5E5E5"> that F prime says the probability</font>

277
00:09:38,029 --> 00:09:43,730
<font color="#CCCCCC">of T is 0 then</font><font color="#E5E5E5"> we end up with 1 minus 0</font>

278
00:09:41,990 --> 00:09:46,220
<font color="#E5E5E5">is</font><font color="#CCCCCC"> 1 so</font><font color="#E5E5E5"> we're maximized when we're not</font>

279
00:09:43,730 --> 00:09:48,770
necessarily example and minimized<font color="#E5E5E5"> when</font>

280
00:09:46,220 --> 00:09:50,810
<font color="#E5E5E5">we are so that's the first important</font>

281
00:09:48,770 --> 00:09:53,540
thing<font color="#E5E5E5"> to do is to use we decide to just</font>

282
00:09:50,810 --> 00:09:55,760
<font color="#E5E5E5">do this formulation for us the second</font>

283
00:09:53,540 --> 00:09:57,020
thing that's important is<font color="#CCCCCC"> that actually</font>

284
00:09:55,760 --> 00:09:58,610
the last<font color="#CCCCCC"> function you choose is very</font>

285
00:09:57,020 --> 00:09:59,930
important and in particularly the

286
00:09:58,610 --> 00:10:01,460
previous loss function I gave you is

287
00:09:59,930 --> 00:10:03,589
actually<font color="#CCCCCC"> not</font><font color="#E5E5E5"> very</font><font color="#CCCCCC"> a good very good loss</font>

288
00:10:01,460 --> 00:10:05,120
function<font color="#CCCCCC"> and formulating good 1 is</font>

289
00:10:03,589 --> 00:10:06,530
relatively difficult and requires some

290
00:10:05,120 --> 00:10:09,500
<font color="#E5E5E5">math and so I'm not really gonna</font><font color="#CCCCCC"> talk</font>

291
00:10:06,530 --> 00:10:12,980
too much about<font color="#E5E5E5"> that</font><font color="#CCCCCC"> in</font><font color="#E5E5E5"> this talk now but</font>

292
00:10:09,500 --> 00:10:15,500
<font color="#E5E5E5">the details are all</font><font color="#CCCCCC"> in the paper so now</font>

293
00:10:12,980 --> 00:10:16,580
<font color="#CCCCCC">let's talk about how we evaluate this</font>

294
00:10:15,500 --> 00:10:20,320
how do we know if this<font color="#E5E5E5"> approach that</font>

295
00:10:16,580 --> 00:10:23,300
<font color="#CCCCCC">I've given</font><font color="#E5E5E5"> you is actually effective</font>

296
00:10:20,320 --> 00:10:24,620
<font color="#CCCCCC">does this actually work</font><font color="#E5E5E5"> and again</font><font color="#CCCCCC"> in the</font>

297
00:10:23,300 --> 00:10:26,300
paper there<font color="#E5E5E5"> are all sorts of tables and</font>

298
00:10:24,620 --> 00:10:27,830
everything<font color="#CCCCCC"> that's really fun to</font><font color="#E5E5E5"> talk</font>

299
00:10:26,300 --> 00:10:29,060
<font color="#CCCCCC">about</font><font color="#E5E5E5"> so let me give you</font><font color="#CCCCCC"> two different</font>

300
00:10:27,830 --> 00:10:32,900
<font color="#E5E5E5">ways that</font><font color="#CCCCCC"> I</font><font color="#E5E5E5"> can evaluate this on the</font>

301
00:10:29,060 --> 00:10:35,150
talk the first thing I<font color="#E5E5E5"> can do is I can</font>

302
00:10:32,900 --> 00:10:36,680
compare this to other<font color="#E5E5E5"> attacks so people</font>

303
00:10:35,150 --> 00:10:38,329
have published previous methods of

304
00:10:36,680 --> 00:10:40,310
generating<font color="#CCCCCC"> these types</font><font color="#E5E5E5"> of attacks and I</font>

305
00:10:38,330 --> 00:10:42,950
can compare how well<font color="#CCCCCC"> we do</font><font color="#E5E5E5"> to compare</font><font color="#CCCCCC"> it</font>

306
00:10:40,310 --> 00:10:43,930
<font color="#E5E5E5">to how well they do so I'm going</font><font color="#CCCCCC"> to</font><font color="#E5E5E5"> do</font>

307
00:10:42,950 --> 00:10:46,700
is<font color="#CCCCCC"> going to</font><font color="#E5E5E5"> show you some image here</font>

308
00:10:43,930 --> 00:10:48,589
<font color="#E5E5E5">this is an image of a handwritten digit</font>

309
00:10:46,700 --> 00:10:50,000
<font color="#E5E5E5">7 this</font><font color="#CCCCCC"> is from an image classification</font>

310
00:10:48,589 --> 00:10:51,470
task where you we've given handwritten

311
00:10:50,000 --> 00:10:54,650
digits from 0 to 9 you have<font color="#E5E5E5"> to classify</font>

312
00:10:51,470 --> 00:10:56,600
<font color="#CCCCCC">what the digit is</font><font color="#E5E5E5"> the previous state</font><font color="#CCCCCC"> of</font>

313
00:10:54,650 --> 00:10:59,260
<font color="#CCCCCC">the</font><font color="#E5E5E5"> art could give you something</font><font color="#CCCCCC"> like</font>

314
00:10:56,600 --> 00:11:01,850
this where you modify the image

315
00:10:59,260 --> 00:11:03,860
<font color="#E5E5E5">relatively noticeable modification to</font>

316
00:11:01,850 --> 00:11:06,589
<font color="#CCCCCC">produce a different</font><font color="#E5E5E5"> different image</font>

317
00:11:03,860 --> 00:11:08,480
which<font color="#CCCCCC"> is now classified as an</font><font color="#E5E5E5"> eight-hour</font>

318
00:11:06,589 --> 00:11:11,150
attack can do somewhat better<font color="#CCCCCC"> and only</font>

319
00:11:08,480 --> 00:11:13,160
<font color="#CCCCCC">make a smaller change</font><font color="#E5E5E5"> but this is sort</font>

320
00:11:11,150 --> 00:11:15,020
<font color="#CCCCCC">of in the</font><font color="#E5E5E5"> best case in the worst case if</font>

321
00:11:13,160 --> 00:11:17,930
you<font color="#E5E5E5"> want to turn this image into a</font><font color="#CCCCCC"> 7</font>

322
00:11:15,020 --> 00:11:19,100
of<font color="#CCCCCC"> so</font><font color="#E5E5E5"> from a</font><font color="#CCCCCC"> 7 into a</font><font color="#E5E5E5"> 0</font><font color="#CCCCCC"> previous attacks</font>

323
00:11:17,930 --> 00:11:21,920
<font color="#CCCCCC">would have to make a relatively large</font>

324
00:11:19,100 --> 00:11:24,740
change<font color="#E5E5E5"> and well in destroy most of the</font>

325
00:11:21,920 --> 00:11:26,660
<font color="#E5E5E5">image our attacks makes a much smaller</font>

326
00:11:24,740 --> 00:11:28,370
change and are<font color="#E5E5E5"> still effective at</font>

327
00:11:26,660 --> 00:11:31,040
constructing<font color="#E5E5E5"> this image to make</font><font color="#CCCCCC"> it a</font>

328
00:11:28,370 --> 00:11:32,810
zero so this<font color="#E5E5E5"> is</font><font color="#CCCCCC"> autumn on one small</font><font color="#E5E5E5"> data</font>

329
00:11:31,040 --> 00:11:34,000
set benchmark<font color="#E5E5E5"> let me let me again show</font>

330
00:11:32,810 --> 00:11:35,869
you the same image I showed<font color="#CCCCCC"> you earlier</font>

331
00:11:34,000 --> 00:11:37,760
<font color="#CCCCCC">where</font><font color="#E5E5E5"> the image on the left is</font>

332
00:11:35,870 --> 00:11:40,060
<font color="#E5E5E5">classified as a dog and the image on</font><font color="#CCCCCC"> the</font>

333
00:11:37,760 --> 00:11:42,290
<font color="#E5E5E5">right</font><font color="#CCCCCC"> is classified as a hummingbird</font>

334
00:11:40,060 --> 00:11:44,029
<font color="#CCCCCC">this is the generator</font><font color="#E5E5E5"> of</font><font color="#CCCCCC"> a large R</font>

335
00:11:42,290 --> 00:11:46,189
attack<font color="#E5E5E5"> and it's the first attack that</font>

336
00:11:44,029 --> 00:11:48,080
can generate effective attacks on images

337
00:11:46,190 --> 00:11:50,450
of<font color="#E5E5E5"> this size where we're minimizing the</font>

338
00:11:48,080 --> 00:11:51,890
<font color="#CCCCCC">total number of pixels changed since</font>

339
00:11:50,450 --> 00:11:53,540
it's<font color="#E5E5E5"> probably pretty hard</font><font color="#CCCCCC"> to see the</font>

340
00:11:51,890 --> 00:11:55,880
<font color="#E5E5E5">distortion here let me zoom in a little</font>

341
00:11:53,540 --> 00:11:57,319
<font color="#E5E5E5">bit on</font><font color="#CCCCCC"> the</font><font color="#E5E5E5"> face of the dog and you might</font>

342
00:11:55,880 --> 00:12:00,410
be able<font color="#CCCCCC"> to see that there are</font><font color="#E5E5E5"> a couple</font>

343
00:11:57,320 --> 00:12:01,760
<font color="#CCCCCC">of pixels</font><font color="#E5E5E5"> here</font><font color="#CCCCCC"> where we switch the pixel</font>

344
00:12:00,410 --> 00:12:04,520
from one value to something<font color="#E5E5E5"> else</font>

345
00:12:01,760 --> 00:12:06,470
in total<font color="#CCCCCC"> we switch to about 200 pixels</font>

346
00:12:04,520 --> 00:12:09,370
of several hundred thousand so the total

347
00:12:06,470 --> 00:12:11,540
<font color="#CCCCCC">distortion is about 0.1% of</font><font color="#E5E5E5"> the pixels</font>

348
00:12:09,370 --> 00:12:15,230
the other important thing to note<font color="#E5E5E5"> is</font>

349
00:12:11,540 --> 00:12:16,910
that these images are classified more

350
00:12:15,230 --> 00:12:19,459
strongly<font color="#CCCCCC"> and me as the adversarial class</font>

351
00:12:16,910 --> 00:12:20,360
<font color="#E5E5E5">then does the</font><font color="#CCCCCC"> original class so neural</font>

352
00:12:19,459 --> 00:12:23,660
networks will give you confidence

353
00:12:20,360 --> 00:12:25,010
<font color="#E5E5E5">results back and</font><font color="#CCCCCC"> will</font><font color="#E5E5E5"> say with what</font>

354
00:12:23,660 --> 00:12:27,260
confidence it thinks that the

355
00:12:25,010 --> 00:12:29,029
classification<font color="#E5E5E5"> is in so in</font><font color="#CCCCCC"> particular</font>

356
00:12:27,260 --> 00:12:30,770
<font color="#E5E5E5">for</font><font color="#CCCCCC"> this</font><font color="#E5E5E5"> neural network it will think</font>

357
00:12:29,029 --> 00:12:33,649
that<font color="#CCCCCC"> the consequence</font><font color="#E5E5E5"> of this dog is only</font>

358
00:12:30,770 --> 00:12:34,520
83<font color="#E5E5E5"> percent but it's</font><font color="#CCCCCC"> 98 percent sure this</font>

359
00:12:33,649 --> 00:12:36,560
thing<font color="#CCCCCC"> is a</font><font color="#E5E5E5"> hummingbird</font>

360
00:12:34,520 --> 00:12:37,459
<font color="#CCCCCC">it's not unique to</font><font color="#E5E5E5"> my results</font><font color="#CCCCCC"> this</font><font color="#E5E5E5"> is</font>

361
00:12:36,560 --> 00:12:39,709
sort of a general<font color="#E5E5E5"> thing that's</font>

362
00:12:37,459 --> 00:12:42,770
<font color="#CCCCCC">well-known is</font><font color="#E5E5E5"> that you can do this with</font>

363
00:12:39,709 --> 00:12:45,529
high<font color="#E5E5E5"> confidence so the other way that</font>

364
00:12:42,770 --> 00:12:48,680
you<font color="#E5E5E5"> can evaluate attacks is then to try</font>

365
00:12:45,529 --> 00:12:50,360
and<font color="#E5E5E5"> break existing defenses</font><font color="#CCCCCC"> and so that</font>

366
00:12:48,680 --> 00:12:52,609
what we do is we look<font color="#E5E5E5"> at that list of</font>

367
00:12:50,360 --> 00:12:54,290
<font color="#CCCCCC">defenses and we say let's look</font><font color="#E5E5E5"> at the</font>

368
00:12:52,610 --> 00:12:56,149
strongest<font color="#E5E5E5"> one that was available</font><font color="#CCCCCC"> let's</font>

369
00:12:54,290 --> 00:12:57,490
try and break<font color="#CCCCCC"> that one and so the</font>

370
00:12:56,149 --> 00:12:59,870
strongest defense that we were aware of

371
00:12:57,490 --> 00:13:03,200
was the paper<font color="#E5E5E5"> that published last year</font>

372
00:12:59,870 --> 00:13:05,750
<font color="#E5E5E5">here called defensive distillation and</font>

373
00:13:03,200 --> 00:13:08,149
what we show is that<font color="#E5E5E5"> when we apply our</font>

374
00:13:05,750 --> 00:13:10,459
attack to<font color="#E5E5E5"> this defense we completely</font>

375
00:13:08,149 --> 00:13:12,890
defeat this defense and show<font color="#E5E5E5"> that it</font>

376
00:13:10,459 --> 00:13:15,459
<font color="#CCCCCC">basically adds very little robustness so</font>

377
00:13:12,890 --> 00:13:19,819
if you look at<font color="#E5E5E5"> the same plots of images</font>

378
00:13:15,459 --> 00:13:23,630
<font color="#CCCCCC">here I have some digits</font><font color="#E5E5E5"> Henry</font><font color="#CCCCCC"> and digits</font>

379
00:13:19,820 --> 00:13:26,360
of a three<font color="#E5E5E5"> previous attacks fail almost</font>

380
00:13:23,630 --> 00:13:28,800
<font color="#E5E5E5">entirely on defensive distillation</font><font color="#CCCCCC"> the</font>

381
00:13:26,360 --> 00:13:32,430
<font color="#E5E5E5">success rate goes</font><font color="#CCCCCC"> from 99% on valid</font>

382
00:13:28,800 --> 00:13:35,010
images to less than<font color="#E5E5E5"> 1% on images</font><font color="#CCCCCC"> sorry</font>

383
00:13:32,430 --> 00:13:37,260
<font color="#CCCCCC">99 percent on undefended networks</font><font color="#E5E5E5"> to</font>

384
00:13:35,010 --> 00:13:39,480
less than<font color="#E5E5E5"> 1% on networks that are</font>

385
00:13:37,260 --> 00:13:41,339
defended with defensive distillation<font color="#CCCCCC"> our</font>

386
00:13:39,480 --> 00:13:43,350
<font color="#CCCCCC">attacks though succeed fill with</font><font color="#E5E5E5"> 100%</font>

387
00:13:41,339 --> 00:13:44,940
<font color="#CCCCCC">permeability and the distortion is not</font>

388
00:13:43,350 --> 00:13:50,399
significantly larger than<font color="#E5E5E5"> on the</font>

389
00:13:44,940 --> 00:13:52,860
original inputs<font color="#CCCCCC"> ok</font><font color="#E5E5E5"> so then let me give</font>

390
00:13:50,399 --> 00:13:54,240
you<font color="#CCCCCC"> all a brief conclusion you're</font>

391
00:13:52,860 --> 00:13:55,980
<font color="#E5E5E5">building a</font><font color="#CCCCCC"> defense what you need you to</font>

392
00:13:54,240 --> 00:13:57,690
evaluate<font color="#E5E5E5"> it there are basically two</font>

393
00:13:55,980 --> 00:13:58,440
things<font color="#E5E5E5"> you</font><font color="#CCCCCC"> should do</font><font color="#E5E5E5"> the first thing you</font>

394
00:13:57,690 --> 00:14:00,570
should<font color="#CCCCCC"> do is you should release your</font>

395
00:13:58,440 --> 00:14:02,850
source code<font color="#CCCCCC"> this</font><font color="#E5E5E5"> is very much an</font>

396
00:14:00,570 --> 00:14:04,440
empirical science<font color="#CCCCCC"> it's</font><font color="#E5E5E5"> very hard to tell</font>

397
00:14:02,850 --> 00:14:07,230
given some description<font color="#E5E5E5"> of an algorithm</font>

398
00:14:04,440 --> 00:14:09,000
whether<font color="#E5E5E5"> or not it works by releasing</font>

399
00:14:07,230 --> 00:14:10,350
<font color="#E5E5E5">your source you make it so</font><font color="#CCCCCC"> that other</font>

400
00:14:09,000 --> 00:14:12,420
people can effectively<font color="#CCCCCC"> evaluate your</font>

401
00:14:10,350 --> 00:14:14,459
defenses<font color="#CCCCCC"> and someone</font><font color="#E5E5E5"> like me</font><font color="#CCCCCC"> doesn't go</font>

402
00:14:12,420 --> 00:14:16,979
<font color="#CCCCCC">after we implement it and can just look</font>

403
00:14:14,459 --> 00:14:18,359
at what the actual<font color="#E5E5E5"> implementation the</font>

404
00:14:16,980 --> 00:14:19,829
second thing you should<font color="#E5E5E5"> do is you should</font>

405
00:14:18,360 --> 00:14:21,899
evaluate against the strongest<font color="#CCCCCC"> attack</font>

406
00:14:19,829 --> 00:14:23,099
possible today that means<font color="#E5E5E5"> you should</font>

407
00:14:21,899 --> 00:14:25,709
evaluate<font color="#E5E5E5"> against</font><font color="#CCCCCC"> the attack that I'm</font>

408
00:14:23,100 --> 00:14:26,760
presenting<font color="#CCCCCC"> here but in the future</font><font color="#E5E5E5"> when</font>

409
00:14:25,709 --> 00:14:28,140
someone<font color="#CCCCCC"> else</font><font color="#E5E5E5"> comes up</font><font color="#CCCCCC"> with a stronger</font>

410
00:14:26,760 --> 00:14:32,160
attack<font color="#E5E5E5"> you should be evaluating against</font>

411
00:14:28,140 --> 00:14:34,529
<font color="#E5E5E5">theirs</font><font color="#CCCCCC"> robustness against weak attacks</font>

412
00:14:32,160 --> 00:14:36,149
<font color="#E5E5E5">does not exactly tell you very much as</font>

413
00:14:34,529 --> 00:14:37,680
we saw with defensive distillation<font color="#CCCCCC"> it</font>

414
00:14:36,149 --> 00:14:40,700
succeeded<font color="#E5E5E5"> with basically 100%</font>

415
00:14:37,680 --> 00:14:43,229
probability<font color="#E5E5E5"> against weaker attacks but</font>

416
00:14:40,700 --> 00:14:47,160
again stronger attacks<font color="#E5E5E5"> it</font><font color="#CCCCCC"> fails</font><font color="#E5E5E5"> with</font>

417
00:14:43,230 --> 00:14:48,959
100% permeability so given<font color="#CCCCCC"> those studies</font>

418
00:14:47,160 --> 00:14:51,270
<font color="#CCCCCC">released source code I have released all</font>

419
00:14:48,959 --> 00:14:52,979
<font color="#CCCCCC">of my</font><font color="#E5E5E5"> attacks online</font><font color="#CCCCCC"> I encourage</font><font color="#E5E5E5"> you to</font>

420
00:14:51,270 --> 00:14:55,500
<font color="#E5E5E5">take it to look at them download them</font>

421
00:14:52,980 --> 00:14:56,700
and use this against<font color="#E5E5E5"> your defenses and</font>

422
00:14:55,500 --> 00:14:59,459
hopefully we<font color="#E5E5E5"> can use this to construct</font>

423
00:14:56,700 --> 00:15:00,750
better attacks<font color="#E5E5E5"> and better defenses thank</font>

424
00:14:59,459 --> 00:15:02,119
you<font color="#E5E5E5"> very much</font><font color="#CCCCCC"> and</font><font color="#E5E5E5"> I'll take any</font>

425
00:15:00,750 --> 00:15:08,940
<font color="#CCCCCC">questions</font>

426
00:15:02,120 --> 00:15:12,070
[Applause]

427
00:15:08,940 --> 00:15:15,279
but I<font color="#CCCCCC"> Christine Anita wrote our own</font>

428
00:15:12,070 --> 00:15:17,560
Northeastern University<font color="#CCCCCC"> thank you very</font>

429
00:15:15,279 --> 00:15:18,880
<font color="#CCCCCC">much this was very very interesting and</font>

430
00:15:17,560 --> 00:15:21,250
<font color="#E5E5E5">I'm very happy</font><font color="#CCCCCC"> to see that</font><font color="#E5E5E5"> people</font>

431
00:15:18,880 --> 00:15:23,770
started<font color="#CCCCCC"> taking attacks against machine</font>

432
00:15:21,250 --> 00:15:25,120
learning seriously can you comment on

433
00:15:23,770 --> 00:15:27,910
the<font color="#CCCCCC"> cost</font>

434
00:15:25,120 --> 00:15:30,339
<font color="#CCCCCC">slash overhead of creating the attacks</font>

435
00:15:27,910 --> 00:15:32,890
<font color="#E5E5E5">that we talked about yes sorry I should</font>

436
00:15:30,339 --> 00:15:34,690
have<font color="#E5E5E5"> mentioned that in my talk so the</font>

437
00:15:32,890 --> 00:15:36,790
the approach<font color="#CCCCCC"> that I take is relatively</font>

438
00:15:34,690 --> 00:15:38,100
slow it takes<font color="#E5E5E5"> you know maybe 30 seconds</font>

439
00:15:36,790 --> 00:15:40,540
<font color="#E5E5E5">in our minute to generate an attack</font>

440
00:15:38,100 --> 00:15:42,580
there are<font color="#E5E5E5"> approaching system that</font>

441
00:15:40,540 --> 00:15:44,349
<font color="#E5E5E5">generate attacks much more rapidly but</font>

442
00:15:42,580 --> 00:15:46,060
the results are about four or<font color="#CCCCCC"> five times</font>

443
00:15:44,350 --> 00:15:47,860
<font color="#CCCCCC">worse depending</font><font color="#E5E5E5"> or depending on which</font>

444
00:15:46,060 --> 00:15:50,439
maybe<font color="#E5E5E5"> you can get around to exports</font>

445
00:15:47,860 --> 00:15:51,820
depending what you do but so I mean it

446
00:15:50,440 --> 00:15:54,700
<font color="#E5E5E5">depends</font><font color="#CCCCCC"> on what your goal is</font><font color="#E5E5E5"> if your</font>

447
00:15:51,820 --> 00:15:56,080
goal is<font color="#CCCCCC"> to</font><font color="#E5E5E5"> generate attacks that that</font>

448
00:15:54,700 --> 00:15:57,760
evaluate<font color="#E5E5E5"> that were busted I don't think</font>

449
00:15:56,080 --> 00:15:59,110
time should really be important as long

450
00:15:57,760 --> 00:16:00,640
as you can do it<font color="#E5E5E5"> like relatively</font>

451
00:15:59,110 --> 00:16:02,470
efficiently<font color="#CCCCCC"> a couple</font><font color="#E5E5E5"> hours I</font><font color="#CCCCCC"> think is</font>

452
00:16:00,640 --> 00:16:04,089
<font color="#CCCCCC">reasonable but</font><font color="#E5E5E5"> if your goal</font><font color="#CCCCCC"> is to</font><font color="#E5E5E5"> try</font>

453
00:16:02,470 --> 00:16:06,070
and<font color="#CCCCCC"> actually use these attacks for some</font>

454
00:16:04,089 --> 00:16:07,270
like<font color="#E5E5E5"> real time process maybe you care</font>

455
00:16:06,070 --> 00:16:14,380
<font color="#E5E5E5">about time but I don't think it's all</font>

456
00:16:07,270 --> 00:16:15,670
that<font color="#E5E5E5"> important thank you yeah hi my name</font>

457
00:16:14,380 --> 00:16:19,180
is tamas<font color="#E5E5E5"> hoon from George Mason</font>

458
00:16:15,670 --> 00:16:21,550
<font color="#CCCCCC">University thanks for your nice talk</font><font color="#E5E5E5"> my</font>

459
00:16:19,180 --> 00:16:23,500
question is I<font color="#CCCCCC"> I</font><font color="#E5E5E5"> don't know if I</font><font color="#CCCCCC"> miss</font>

460
00:16:21,550 --> 00:16:25,359
<font color="#E5E5E5">that</font><font color="#CCCCCC"> part or not</font><font color="#E5E5E5"> but I understand that</font>

461
00:16:23,500 --> 00:16:28,270
<font color="#CCCCCC">the goal is you want to</font><font color="#E5E5E5"> minimize the</font>

462
00:16:25,360 --> 00:16:29,950
<font color="#CCCCCC">number of perturbations that</font><font color="#E5E5E5"> you make to</font>

463
00:16:28,270 --> 00:16:31,449
<font color="#E5E5E5">an image right yes but how did</font><font color="#CCCCCC"> you</font>

464
00:16:29,950 --> 00:16:33,700
choose<font color="#E5E5E5"> the pixels that</font><font color="#CCCCCC"> you want to</font>

465
00:16:31,450 --> 00:16:36,130
change the values okay<font color="#CCCCCC"> so on another</font>

466
00:16:33,700 --> 00:16:39,279
machine<font color="#E5E5E5"> learning or yes so that is good</font>

467
00:16:36,130 --> 00:16:40,750
<font color="#E5E5E5">question so we so</font><font color="#CCCCCC"> we show that so there</font>

468
00:16:39,279 --> 00:16:43,000
are a bunch<font color="#E5E5E5"> of ways you can call the</font>

469
00:16:40,750 --> 00:16:45,040
image to adjust cloaks we look at three

470
00:16:43,000 --> 00:16:47,110
different distance metrics one of them

471
00:16:45,040 --> 00:16:49,300
is like l2 which is standard Euclidean

472
00:16:47,110 --> 00:16:51,459
<font color="#E5E5E5">root-mean-square</font><font color="#CCCCCC"> but when</font><font color="#E5E5E5"> I showed you</font>

473
00:16:49,300 --> 00:16:53,140
our examples example what was known as

474
00:16:51,459 --> 00:16:56,469
l0<font color="#CCCCCC"> which you want to minimize</font><font color="#E5E5E5"> the</font><font color="#CCCCCC"> number</font>

475
00:16:53,140 --> 00:16:59,079
of pixels<font color="#E5E5E5"> so for</font><font color="#CCCCCC"> that one</font><font color="#E5E5E5"> well we have</font>

476
00:16:56,470 --> 00:17:01,120
an approach that<font color="#E5E5E5"> basically starts off by</font>

477
00:16:59,079 --> 00:17:02,800
letting you modify every pixel and

478
00:17:01,120 --> 00:17:04,929
slowly shrink this set of modified

479
00:17:02,800 --> 00:17:06,909
pixels until you end up modifying<font color="#E5E5E5"> very</font>

480
00:17:04,929 --> 00:17:09,579
few pixels and finally the<font color="#E5E5E5"> thing that</font>

481
00:17:06,910 --> 00:17:10,750
<font color="#E5E5E5">only we can</font><font color="#CCCCCC"> do is we can modify under a</font>

482
00:17:09,579 --> 00:17:13,089
different<font color="#E5E5E5"> distance metric where we</font>

483
00:17:10,750 --> 00:17:15,069
instead say that we want to<font color="#E5E5E5"> change not</font>

484
00:17:13,089 --> 00:17:17,139
change the fewest number of pixels but

485
00:17:15,069 --> 00:17:19,959
make<font color="#E5E5E5"> a small change</font><font color="#CCCCCC"> to each individual</font>

486
00:17:17,140 --> 00:17:21,880
pixel<font color="#E5E5E5"> so I have a slide</font><font color="#CCCCCC"> for</font><font color="#E5E5E5"> that</font>

487
00:17:19,959 --> 00:17:24,149
that shows this one so whereas

488
00:17:21,880 --> 00:17:27,010
previously there<font color="#CCCCCC"> were</font><font color="#E5E5E5"> some pixels that</font>

489
00:17:24,148 --> 00:17:29,678
<font color="#CCCCCC">were</font><font color="#E5E5E5"> very clearly changed</font><font color="#CCCCCC"> if you make a</font>

490
00:17:27,010 --> 00:17:31,510
change<font color="#CCCCCC"> to</font><font color="#E5E5E5"> every pixel by only</font><font color="#CCCCCC"> a very</font>

491
00:17:29,679 --> 00:17:33,909
small<font color="#CCCCCC"> amount</font><font color="#E5E5E5"> I can do this by only</font>

492
00:17:31,510 --> 00:17:35,440
flipping the lowest bit and so in

493
00:17:33,909 --> 00:17:37,990
particular<font color="#E5E5E5"> I can only flip blows bit and</font>

494
00:17:35,440 --> 00:17:39,039
target any class you<font color="#CCCCCC"> want and so this is</font>

495
00:17:37,990 --> 00:17:40,870
<font color="#E5E5E5">something that</font><font color="#CCCCCC"> other people have shown</font>

496
00:17:39,039 --> 00:17:41,799
<font color="#CCCCCC">too</font><font color="#E5E5E5"> but it's sort</font><font color="#CCCCCC"> of a</font><font color="#E5E5E5"> different</font>

497
00:17:40,870 --> 00:17:45,639
distance metric whichever one you

498
00:17:41,799 --> 00:17:49,179
consider most useful<font color="#CCCCCC"> hi Annie Clark</font>

499
00:17:45,640 --> 00:17:52,750
<font color="#E5E5E5">Paterno from Penn State University</font><font color="#CCCCCC"> so in</font>

500
00:17:49,179 --> 00:17:55,270
your thank you very<font color="#CCCCCC"> table in</font><font color="#E5E5E5"> your</font>

501
00:17:52,750 --> 00:18:00,460
presentation you<font color="#CCCCCC"> assumed white box</font><font color="#E5E5E5"> yeah</font>

502
00:17:55,270 --> 00:18:02,200
right model<font color="#E5E5E5"> and could you comment on</font><font color="#CCCCCC"> the</font>

503
00:18:00,460 --> 00:18:06,220
strength of<font color="#E5E5E5"> your attack in black box</font>

504
00:18:02,200 --> 00:18:07,960
settings<font color="#E5E5E5"> yes</font><font color="#CCCCCC"> so basically</font><font color="#E5E5E5"> to use</font><font color="#CCCCCC"> the</font>

505
00:18:06,220 --> 00:18:11,049
attacks<font color="#E5E5E5"> where you don't assume the model</font>

506
00:18:07,960 --> 00:18:14,380
what<font color="#E5E5E5"> you do is you</font><font color="#CCCCCC"> use the approach that</font>

507
00:18:11,049 --> 00:18:17,770
<font color="#CCCCCC">you've actually done</font><font color="#E5E5E5"> and you you train</font>

508
00:18:14,380 --> 00:18:19,210
your<font color="#CCCCCC"> own model so I</font><font color="#E5E5E5"> assume the defender</font>

509
00:18:17,770 --> 00:18:21,250
has<font color="#E5E5E5"> their model when I'm going to</font><font color="#CCCCCC"> I'm</font>

510
00:18:19,210 --> 00:18:22,480
going<font color="#CCCCCC"> to train my own model</font><font color="#E5E5E5"> in sort of</font><font color="#CCCCCC"> a</font>

511
00:18:21,250 --> 00:18:24,730
<font color="#E5E5E5">similar way that they use the Train</font>

512
00:18:22,480 --> 00:18:26,049
bears<font color="#E5E5E5"> and hope that the two models end</font>

513
00:18:24,730 --> 00:18:27,730
up learning<font color="#E5E5E5"> sort of the same decision</font>

514
00:18:26,049 --> 00:18:29,950
boundary<font color="#E5E5E5"> and then what I'm going to do</font>

515
00:18:27,730 --> 00:18:31,809
is on<font color="#E5E5E5"> the agenda attack on my</font><font color="#CCCCCC"> end model</font>

516
00:18:29,950 --> 00:18:33,520
<font color="#E5E5E5">and then it turns out there's a</font><font color="#CCCCCC"> property</font>

517
00:18:31,809 --> 00:18:35,020
<font color="#CCCCCC">close</font><font color="#E5E5E5"> transfer</font><font color="#CCCCCC"> ability that the attack</font>

518
00:18:33,520 --> 00:18:37,179
on<font color="#E5E5E5"> my model actually is effective on</font>

519
00:18:35,020 --> 00:18:38,980
<font color="#CCCCCC">your model</font><font color="#E5E5E5"> and so if I don't</font><font color="#CCCCCC"> actually</font>

520
00:18:37,179 --> 00:18:41,289
know what your model<font color="#CCCCCC"> is then I</font><font color="#E5E5E5"> can use</font>

521
00:18:38,980 --> 00:18:42,940
this<font color="#E5E5E5"> approach to still attack your model</font>

522
00:18:41,289 --> 00:18:43,899
even<font color="#E5E5E5"> if I have don't have actual</font><font color="#CCCCCC"> access</font>

523
00:18:42,940 --> 00:18:47,260
<font color="#CCCCCC">to</font><font color="#E5E5E5"> parameters</font>

524
00:18:43,899 --> 00:18:50,260
I guess my question<font color="#E5E5E5"> is have you compared</font>

525
00:18:47,260 --> 00:18:54,490
<font color="#E5E5E5">the main perturbation of the</font><font color="#CCCCCC"> inputs that</font>

526
00:18:50,260 --> 00:18:56,890
<font color="#CCCCCC">you</font><font color="#E5E5E5"> produce in black box settings and</font>

527
00:18:54,490 --> 00:18:59,309
that<font color="#E5E5E5"> transfer to</font><font color="#CCCCCC"> other</font><font color="#E5E5E5"> models okay yeah</font>

528
00:18:56,890 --> 00:19:01,779
so do these approaches work to transfer

529
00:18:59,309 --> 00:19:03,399
so yes<font color="#CCCCCC"> so you can actually with the</font>

530
00:19:01,779 --> 00:19:07,210
approach<font color="#CCCCCC"> that I've outlined control the</font>

531
00:19:03,399 --> 00:19:09,850
contents<font color="#E5E5E5"> of the attacks and and use it</font>

532
00:19:07,210 --> 00:19:11,289
to<font color="#E5E5E5"> generate attacks that do transfer in</font>

533
00:19:09,850 --> 00:19:13,178
<font color="#E5E5E5">order to make</font><font color="#CCCCCC"> attacks that transfer</font>

534
00:19:11,289 --> 00:19:16,120
effectively you do need to<font color="#E5E5E5"> increase with</font>

535
00:19:13,179 --> 00:19:17,770
<font color="#E5E5E5">the sorption</font><font color="#CCCCCC"> and how much do you think</font>

536
00:19:16,120 --> 00:19:20,559
the distortion depends on the defense

537
00:19:17,770 --> 00:19:21,879
<font color="#E5E5E5">and depends on how close you can</font>

538
00:19:20,559 --> 00:19:23,440
<font color="#CCCCCC">actually get to the other model so if</font>

539
00:19:21,880 --> 00:19:25,299
you make if you assume that<font color="#E5E5E5"> I know</font>

540
00:19:23,440 --> 00:19:26,770
nothing<font color="#CCCCCC"> about</font><font color="#E5E5E5"> the other model now the</font>

541
00:19:25,299 --> 00:19:29,080
distortion needs to<font color="#E5E5E5"> may be increased by</font>

542
00:19:26,770 --> 00:19:30,410
a<font color="#CCCCCC"> factor of two or three</font><font color="#E5E5E5"> but if you</font>

543
00:19:29,080 --> 00:19:32,418
assume<font color="#CCCCCC"> that I have</font>

544
00:19:30,410 --> 00:19:33,890
so I can sort<font color="#CCCCCC"> of Oracle queries against</font>

545
00:19:32,419 --> 00:19:37,220
<font color="#CCCCCC">the other model</font><font color="#E5E5E5"> then you</font><font color="#CCCCCC"> can</font><font color="#E5E5E5"> reduce that</font>

546
00:19:33,890 --> 00:19:39,140
<font color="#E5E5E5">by a fairly large amount</font><font color="#CCCCCC"> okay thank you</font>

547
00:19:37,220 --> 00:19:41,600
<font color="#CCCCCC">I just want to mention</font><font color="#E5E5E5"> that we have</font><font color="#CCCCCC"> a</font>

548
00:19:39,140 --> 00:19:43,700
poster<font color="#E5E5E5"> this evening on the extending</font>

549
00:19:41,600 --> 00:19:45,049
<font color="#CCCCCC">defensive distillation to mitigate some</font>

550
00:19:43,700 --> 00:19:52,580
of these<font color="#CCCCCC"> attacks</font>

551
00:19:45,049 --> 00:19:53,690
thank you<font color="#E5E5E5"> le canal</font><font color="#CCCCCC"> suffer</font><font color="#E5E5E5"> engineering</font>

552
00:19:52,580 --> 00:19:54,949
<font color="#CCCCCC">Institute thank you for an interesting</font>

553
00:19:53,690 --> 00:19:56,660
talk one thing<font color="#E5E5E5"> which I noticed about</font>

554
00:19:54,950 --> 00:19:58,940
<font color="#CCCCCC">your technique is</font><font color="#E5E5E5"> that it will always</font>

555
00:19:56,660 --> 00:20:00,890
<font color="#E5E5E5">eventually perturb the image to a point</font>

556
00:19:58,940 --> 00:20:02,690
where something will be changed so<font color="#CCCCCC"> there</font>

557
00:20:00,890 --> 00:20:04,789
way that you can assess a metric by

558
00:20:02,690 --> 00:20:06,799
which here's the amount to<font color="#E5E5E5"> which we need</font>

559
00:20:04,789 --> 00:20:09,320
<font color="#E5E5E5">to</font><font color="#CCCCCC"> return</font><font color="#E5E5E5"> the</font><font color="#CCCCCC"> image so that we can</font>

560
00:20:06,799 --> 00:20:10,520
actually<font color="#CCCCCC"> form a model yes so there</font><font color="#E5E5E5"> are</font>

561
00:20:09,320 --> 00:20:12,439
<font color="#E5E5E5">sort of two types of attacks there are</font>

562
00:20:10,520 --> 00:20:13,908
attacks that will<font color="#E5E5E5"> always succeed by the</font>

563
00:20:12,440 --> 00:20:15,590
<font color="#E5E5E5">slightest eventually just turning the</font>

564
00:20:13,909 --> 00:20:17,240
indigenous actually recognizes the other

565
00:20:15,590 --> 00:20:18,678
class and just you're trying to minimize

566
00:20:17,240 --> 00:20:20,570
<font color="#CCCCCC">the total distortion</font><font color="#E5E5E5"> and there are</font>

567
00:20:18,679 --> 00:20:22,429
another type<font color="#E5E5E5"> of attacks that say you can</font>

568
00:20:20,570 --> 00:20:25,158
only distort by most this much and<font color="#E5E5E5"> let's</font>

569
00:20:22,429 --> 00:20:27,740
do as<font color="#E5E5E5"> best as</font><font color="#CCCCCC"> you can and so my approach</font>

570
00:20:25,159 --> 00:20:29,240
<font color="#E5E5E5">takes the former's approach and says</font>

571
00:20:27,740 --> 00:20:30,740
that all<font color="#E5E5E5"> time minimizing</font><font color="#CCCCCC"> total</font>

572
00:20:29,240 --> 00:20:32,299
distortion<font color="#E5E5E5"> and if you want you</font><font color="#CCCCCC"> can just</font>

573
00:20:30,740 --> 00:20:35,510
<font color="#E5E5E5">set a threshold at any given point and</font>

574
00:20:32,299 --> 00:20:37,190
<font color="#E5E5E5">say if I've done more</font><font color="#CCCCCC"> than this</font><font color="#E5E5E5"> to just</font>

575
00:20:35,510 --> 00:20:38,720
<font color="#E5E5E5">report failure but since the objective</font>

576
00:20:37,190 --> 00:20:43,370
<font color="#CCCCCC">is to minimize the total</font><font color="#E5E5E5"> amount of</font>

577
00:20:38,720 --> 00:20:44,820
distortion<font color="#E5E5E5"> it very rarely fails thank</font>

578
00:20:43,370 --> 00:20:50,429
you

579
00:20:44,820 --> 00:20:50,429
[Applause]

