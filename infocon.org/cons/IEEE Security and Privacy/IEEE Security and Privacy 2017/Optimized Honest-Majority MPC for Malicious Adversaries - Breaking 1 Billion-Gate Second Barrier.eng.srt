1
00:00:06,410 --> 00:00:13,340
hello everyone so in this<font color="#CCCCCC"> dr. will</font>

2
00:00:10,230 --> 00:00:13,340
present<font color="#CCCCCC"> a</font><font color="#E5E5E5"> log on</font>

3
00:00:13,550 --> 00:00:18,920
<font color="#CCCCCC">raishin we did not majority breaking the</font>

4
00:00:16,070 --> 00:00:22,189
billion gate<font color="#E5E5E5"> per second barrier it is a</font>

5
00:00:18,920 --> 00:00:28,490
<font color="#E5E5E5">joint work of the NEC team and</font><font color="#CCCCCC"> Babylon</font>

6
00:00:22,189 --> 00:00:31,369
<font color="#CCCCCC">University</font><font color="#E5E5E5"> okay so</font><font color="#CCCCCC"> in secure multi-party</font>

7
00:00:28,490 --> 00:00:33,560
<font color="#CCCCCC">computation or NPC we have a set</font><font color="#E5E5E5"> of</font>

8
00:00:31,369 --> 00:00:35,320
parties wish to compute<font color="#CCCCCC"> jointly some</font>

9
00:00:33,560 --> 00:00:38,270
functionality on<font color="#E5E5E5"> the private input</font>

10
00:00:35,320 --> 00:00:41,000
<font color="#E5E5E5">without revealing anything about the</font>

11
00:00:38,270 --> 00:00:43,850
<font color="#CCCCCC">output of the</font><font color="#E5E5E5"> computation there are many</font>

12
00:00:41,000 --> 00:00:48,199
<font color="#CCCCCC">applications</font><font color="#E5E5E5"> so this basically whenever</font>

13
00:00:43,850 --> 00:00:50,210
<font color="#CCCCCC">you have a problem</font><font color="#E5E5E5"> that involves this</font>

14
00:00:48,199 --> 00:00:55,129
beauty competition<font color="#E5E5E5"> over some sensitive</font>

15
00:00:50,210 --> 00:00:57,769
data<font color="#CCCCCC"> NPC could be the</font><font color="#E5E5E5"> answer when</font>

16
00:00:55,129 --> 00:01:01,218
designing the<font color="#CCCCCC"> Q protocols there are two</font>

17
00:00:57,769 --> 00:01:04,819
main threat model the first is the weak

18
00:01:01,219 --> 00:01:07,130
semi honest model well we well we<font color="#CCCCCC"> assume</font>

19
00:01:04,819 --> 00:01:09,199
<font color="#E5E5E5">that the parties follow the</font><font color="#CCCCCC"> protocols</font>

20
00:01:07,130 --> 00:01:11,300
<font color="#E5E5E5">but may want to learn more than they</font><font color="#CCCCCC"> are</font>

21
00:01:09,200 --> 00:01:13,340
allowed to<font color="#E5E5E5"> and this program will</font><font color="#CCCCCC"> be</font>

22
00:01:11,300 --> 00:01:15,140
elliptic malicious model where the

23
00:01:13,340 --> 00:01:16,610
parties can actually can basically do

24
00:01:15,140 --> 00:01:19,130
whatever<font color="#E5E5E5"> they want and we cannot assume</font>

25
00:01:16,610 --> 00:01:20,810
anything<font color="#E5E5E5"> about their behavior now the</font>

26
00:01:19,130 --> 00:01:23,089
current situation<font color="#E5E5E5"> the current status of</font>

27
00:01:20,810 --> 00:01:26,150
the<font color="#E5E5E5"> NPC field is that there are already</font>

28
00:01:23,090 --> 00:01:29,300
some<font color="#CCCCCC"> real-world problems that we can</font>

29
00:01:26,150 --> 00:01:32,570
solve using<font color="#CCCCCC"> NPC there are</font><font color="#E5E5E5"> several</font>

30
00:01:29,300 --> 00:01:35,390
companies which have a product<font color="#CCCCCC"> that are</font>

31
00:01:32,570 --> 00:01:37,910
based on NPC<font color="#CCCCCC"> but in many other cases NPC</font>

32
00:01:35,390 --> 00:01:40,190
is not considered<font color="#E5E5E5"> faster efficient</font>

33
00:01:37,910 --> 00:01:43,280
<font color="#E5E5E5">enough</font><font color="#CCCCCC"> to solve real-world</font><font color="#E5E5E5"> problem and</font>

34
00:01:40,190 --> 00:01:46,130
this<font color="#CCCCCC"> is</font><font color="#E5E5E5"> especially</font><font color="#CCCCCC"> - so when we deal</font>

35
00:01:43,280 --> 00:01:50,480
with<font color="#E5E5E5"> malicious observatory's in this</font>

36
00:01:46,130 --> 00:01:52,699
works<font color="#E5E5E5"> we show that loud scale</font><font color="#CCCCCC"> secure</font>

37
00:01:50,480 --> 00:01:54,950
<font color="#CCCCCC">three</font><font color="#E5E5E5"> party computation is</font><font color="#CCCCCC"> protocol</font><font color="#E5E5E5"> even</font>

38
00:01:52,700 --> 00:01:58,040
<font color="#E5E5E5">when we require the</font><font color="#CCCCCC"> Qt in the presence</font>

39
00:01:54,950 --> 00:02:00,170
of<font color="#CCCCCC"> only</font><font color="#E5E5E5"> cheesery and we provide some</font>

40
00:01:58,040 --> 00:02:01,640
<font color="#CCCCCC">general techniques for including so</font>

41
00:02:00,170 --> 00:02:03,830
improving the frequency of protocols

42
00:02:01,640 --> 00:02:05,630
that<font color="#CCCCCC"> are</font><font color="#E5E5E5"> based on the cut and choose</font>

43
00:02:03,830 --> 00:02:08,899
<font color="#CCCCCC">methods</font><font color="#E5E5E5"> that I will present in a few</font>

44
00:02:05,630 --> 00:02:10,609
minutes so in our setting we have three

45
00:02:08,899 --> 00:02:12,950
parties<font color="#CCCCCC"> which to compute Georgie some</font>

46
00:02:10,610 --> 00:02:15,200
functionality<font color="#E5E5E5"> we assume an honest</font>

47
00:02:12,950 --> 00:02:17,268
majority<font color="#E5E5E5"> exist which means that exactly</font>

48
00:02:15,200 --> 00:02:20,599
one of<font color="#CCCCCC"> the parties may be caught</font><font color="#E5E5E5"> can be</font>

49
00:02:17,269 --> 00:02:23,840
corrupted<font color="#E5E5E5"> maliciously corrupted we</font>

50
00:02:20,599 --> 00:02:26,209
assume that the<font color="#E5E5E5"> functionality is</font>

51
00:02:23,840 --> 00:02:27,420
represented by a boolean circuit and we

52
00:02:26,210 --> 00:02:29,820
consider security

53
00:02:27,420 --> 00:02:31,950
which means that the security

54
00:02:29,820 --> 00:02:34,769
requirement is that if the<font color="#CCCCCC"> Cohasset</font>

55
00:02:31,950 --> 00:02:40,739
<font color="#CCCCCC">salty chips then the honest parties</font><font color="#E5E5E5"> will</font>

56
00:02:34,770 --> 00:02:42,570
detect it and<font color="#E5E5E5"> about the computation okay</font>

57
00:02:40,740 --> 00:02:44,880
now when we measure the<font color="#CCCCCC"> performance</font><font color="#E5E5E5"> of</font>

58
00:02:42,570 --> 00:02:47,549
protocols there are two main ways<font color="#CCCCCC"> to do</font>

59
00:02:44,880 --> 00:02:49,470
that<font color="#E5E5E5"> so the</font><font color="#CCCCCC"> first way is to measure how</font>

60
00:02:47,550 --> 00:02:51,330
much time it takes<font color="#E5E5E5"> to compute a single</font>

61
00:02:49,470 --> 00:02:53,459
function<font color="#CCCCCC"> this is</font><font color="#E5E5E5"> what we call the latent</font>

62
00:02:51,330 --> 00:02:55,500
latent<font color="#CCCCCC"> Abel protocol</font><font color="#E5E5E5"> on the other hand</font>

63
00:02:53,459 --> 00:02:57,870
we could measure how<font color="#E5E5E5"> many function we</font>

64
00:02:55,500 --> 00:02:59,520
can compute in let's say<font color="#E5E5E5"> one second</font>

65
00:02:57,870 --> 00:03:02,190
which is<font color="#E5E5E5"> what we call this throughput</font>

66
00:02:59,520 --> 00:03:03,959
now these are<font color="#E5E5E5"> not just two ways to</font>

67
00:03:02,190 --> 00:03:06,720
measure performance but actually two

68
00:03:03,959 --> 00:03:10,320
different<font color="#CCCCCC"> goals</font><font color="#E5E5E5"> the template that</font><font color="#CCCCCC"> out</font>

69
00:03:06,720 --> 00:03:12,260
from<font color="#E5E5E5"> the data into in two different</font>

70
00:03:10,320 --> 00:03:14,760
approaches<font color="#E5E5E5"> of how to design a protocol</font>

71
00:03:12,260 --> 00:03:17,220
specifically if<font color="#CCCCCC"> we want to achieve low</font>

72
00:03:14,760 --> 00:03:20,160
latency then usually we<font color="#E5E5E5"> would like to</font>

73
00:03:17,220 --> 00:03:22,620
<font color="#E5E5E5">have to minimize the number of grounds</font>

74
00:03:20,160 --> 00:03:24,480
of communication<font color="#E5E5E5"> this will be</font><font color="#CCCCCC"> usually</font>

75
00:03:22,620 --> 00:03:26,790
done using<font color="#E5E5E5"> the garbled circuit approach</font>

76
00:03:24,480 --> 00:03:28,738
<font color="#E5E5E5">where you have several or no</font>

77
00:03:26,790 --> 00:03:32,280
communication but in each one<font color="#E5E5E5"> you send a</font>

78
00:03:28,739 --> 00:03:34,230
large amount of data<font color="#CCCCCC"> the parties send an</font>

79
00:03:32,280 --> 00:03:38,580
encrypted version<font color="#E5E5E5"> of the circuit so this</font>

80
00:03:34,230 --> 00:03:41,790
is big messages on the other<font color="#E5E5E5"> end if you</font>

81
00:03:38,580 --> 00:03:44,489
want<font color="#E5E5E5"> to achieve high throughput then you</font>

82
00:03:41,790 --> 00:03:46,609
will it usually care less about<font color="#E5E5E5"> low</font>

83
00:03:44,489 --> 00:03:50,130
bandwidth and simple computation

84
00:03:46,610 --> 00:03:51,989
<font color="#E5E5E5">computations and we will tell</font><font color="#CCCCCC"> that about</font>

85
00:03:50,130 --> 00:03:54,090
<font color="#E5E5E5">the number</font><font color="#CCCCCC"> of one</font><font color="#E5E5E5"> the communication and</font>

86
00:03:51,989 --> 00:03:54,600
<font color="#CCCCCC">more about low bandwidth and simple</font>

87
00:03:54,090 --> 00:03:58,130
computation

88
00:03:54,600 --> 00:04:00,989
the<font color="#E5E5E5"> reason for</font><font color="#CCCCCC"> that</font><font color="#E5E5E5"> is because</font><font color="#CCCCCC"> even</font><font color="#E5E5E5"> if a</font>

89
00:03:58,130 --> 00:04:03,840
party wait for messages to arrive then

90
00:04:00,989 --> 00:04:05,519
meanwhile<font color="#E5E5E5"> you can</font><font color="#CCCCCC"> start the</font><font color="#E5E5E5"> next</font>

91
00:04:03,840 --> 00:04:08,250
<font color="#E5E5E5">computation so in this case we will</font>

92
00:04:05,519 --> 00:04:10,590
focus on pipelining the computation<font color="#E5E5E5"> in</font>

93
00:04:08,250 --> 00:04:11,910
<font color="#E5E5E5">order to achieve high throughput and</font>

94
00:04:10,590 --> 00:04:15,239
this will be done using the<font color="#CCCCCC"> fixed</font>

95
00:04:11,910 --> 00:04:20,010
<font color="#CCCCCC">sharing approach</font><font color="#E5E5E5"> in our case this is our</font>

96
00:04:15,239 --> 00:04:21,239
goal to<font color="#CCCCCC"> achieve high throughput and we</font>

97
00:04:20,010 --> 00:04:25,289
will follow<font color="#E5E5E5"> this approach the speaker</font>

98
00:04:21,238 --> 00:04:26,909
sharing approach<font color="#E5E5E5"> so the the starting</font>

99
00:04:25,290 --> 00:04:29,790
point of our work is the malicious

100
00:04:26,910 --> 00:04:31,950
protocol from<font color="#CCCCCC"> a previous</font><font color="#E5E5E5"> work of ours</font>

101
00:04:29,790 --> 00:04:34,140
works in the following way there is an

102
00:04:31,950 --> 00:04:37,590
<font color="#E5E5E5">online protocol where the parties share</font>

103
00:04:34,140 --> 00:04:38,260
<font color="#CCCCCC">their inputs using</font><font color="#E5E5E5"> some</font><font color="#CCCCCC"> signature skin</font>

104
00:04:37,590 --> 00:04:41,409
and then

105
00:04:38,260 --> 00:04:44,770
they run<font color="#CCCCCC"> cheap semi honest protocol to</font>

106
00:04:41,410 --> 00:04:47,110
compute the circuit and then before we

107
00:04:44,770 --> 00:04:49,450
reconcile the values on the<font color="#E5E5E5"> output while</font>

108
00:04:47,110 --> 00:04:51,340
<font color="#E5E5E5">we have a verification set because in</font>

109
00:04:49,450 --> 00:04:53,080
<font color="#E5E5E5">the thermos protocol obviously the</font>

110
00:04:51,340 --> 00:04:55,030
cohabit<font color="#CCCCCC"> Alex might have stated so we</font>

111
00:04:53,080 --> 00:04:58,120
need a verification<font color="#CCCCCC"> state</font><font color="#E5E5E5"> well we verify</font>

112
00:04:55,030 --> 00:04:59,969
all ends get and<font color="#CCCCCC"> gates</font><font color="#E5E5E5"> computation why</font>

113
00:04:58,120 --> 00:05:02,380
only<font color="#CCCCCC"> and gates</font><font color="#E5E5E5"> because in other gates</font>

114
00:04:59,970 --> 00:05:03,940
the computation is locally<font color="#CCCCCC"> you don't</font>

115
00:05:02,380 --> 00:05:05,350
need to have any interaction and

116
00:05:03,940 --> 00:05:07,290
<font color="#CCCCCC">therefore the corrupted party cannot</font>

117
00:05:05,350 --> 00:05:08,920
cheat<font color="#CCCCCC"> so</font><font color="#E5E5E5"> only in</font><font color="#CCCCCC"> n gate we have</font>

118
00:05:07,290 --> 00:05:11,170
<font color="#E5E5E5">interaction and therefore we need to</font>

119
00:05:08,920 --> 00:05:15,430
<font color="#E5E5E5">verify that the computation was correct</font>

120
00:05:11,170 --> 00:05:17,260
<font color="#E5E5E5">this</font><font color="#CCCCCC"> is done</font><font color="#E5E5E5"> using random multiplication</font>

121
00:05:15,430 --> 00:05:20,790
tables that we generate in a purpose

122
00:05:17,260 --> 00:05:24,430
testing<font color="#E5E5E5"> protocol in an offline protocol</font>

123
00:05:20,790 --> 00:05:28,270
<font color="#CCCCCC">out and if we use the</font><font color="#E5E5E5"> parameters that</font>

124
00:05:24,430 --> 00:05:30,040
will<font color="#E5E5E5"> be soon</font><font color="#CCCCCC"> that'll soon present</font><font color="#E5E5E5"> we</font>

125
00:05:28,270 --> 00:05:32,320
have<font color="#CCCCCC"> that</font><font color="#E5E5E5"> on a protocol is pretty cheap</font>

126
00:05:30,040 --> 00:05:34,600
<font color="#E5E5E5">it requires communication of</font><font color="#CCCCCC"> 3 bits per</font>

127
00:05:32,320 --> 00:05:37,390
<font color="#E5E5E5">an gate for each party and the often</font>

128
00:05:34,600 --> 00:05:39,400
<font color="#E5E5E5">protocol is the bottleneck which</font>

129
00:05:37,390 --> 00:05:42,539
requires each party to<font color="#E5E5E5"> send to send</font>

130
00:05:39,400 --> 00:05:44,859
<font color="#CCCCCC">seven bits per N gate</font><font color="#E5E5E5"> we measure it</font><font color="#CCCCCC"> by</font>

131
00:05:42,540 --> 00:05:46,420
how many bits<font color="#CCCCCC"> for n guys because this</font>

132
00:05:44,860 --> 00:05:48,760
what<font color="#E5E5E5"> determines eventually the</font>

133
00:05:46,420 --> 00:05:51,220
throughput of<font color="#E5E5E5"> the protocol so in this</font>

134
00:05:48,760 --> 00:05:53,080
work is focused<font color="#E5E5E5"> on making the purpose of</font>

135
00:05:51,220 --> 00:05:57,280
a protocol<font color="#CCCCCC"> less</font><font color="#E5E5E5"> of</font><font color="#CCCCCC"> a bottleneck this</font>

136
00:05:53,080 --> 00:05:59,020
will be our<font color="#CCCCCC"> focus here so how do</font><font color="#E5E5E5"> we</font>

137
00:05:57,280 --> 00:06:00,640
generate<font color="#E5E5E5"> these multiplication triples</font><font color="#CCCCCC"> so</font>

138
00:05:59,020 --> 00:06:02,799
<font color="#CCCCCC">first what is a multiplication table or</font>

139
00:06:00,640 --> 00:06:05,169
run the multiplication table so this<font color="#E5E5E5"> is</font>

140
00:06:02,800 --> 00:06:08,020
the triple of shell AB&C that<font color="#CCCCCC"> is shared</font>

141
00:06:05,170 --> 00:06:10,420
among the<font color="#E5E5E5"> parties such that a and</font><font color="#CCCCCC"> B are</font>

142
00:06:08,020 --> 00:06:12,549
<font color="#E5E5E5">sharing of random values that are not</font>

143
00:06:10,420 --> 00:06:16,420
<font color="#E5E5E5">known to</font><font color="#CCCCCC"> any of the</font><font color="#E5E5E5"> parties and C is</font>

144
00:06:12,550 --> 00:06:19,000
equals equals a times B now in<font color="#CCCCCC"> our</font>

145
00:06:16,420 --> 00:06:21,220
protocol<font color="#E5E5E5"> we can generate the random</font>

146
00:06:19,000 --> 00:06:24,010
sharing without any interaction and then

147
00:06:21,220 --> 00:06:29,050
we<font color="#CCCCCC"> generate the shelling of</font><font color="#E5E5E5"> C of a times</font>

148
00:06:24,010 --> 00:06:30,460
B using a semi honest protocol some

149
00:06:29,050 --> 00:06:33,130
other<font color="#CCCCCC"> falsification protocol this</font>

150
00:06:30,460 --> 00:06:34,690
process<font color="#CCCCCC"> requires only one</font><font color="#E5E5E5"> bit of</font>

151
00:06:33,130 --> 00:06:36,280
<font color="#CCCCCC">communication so this is a very cheap</font>

152
00:06:34,690 --> 00:06:38,110
process but of course because the

153
00:06:36,280 --> 00:06:39,520
<font color="#E5E5E5">40-mile is cheaper</font><font color="#CCCCCC"> than the the</font>

154
00:06:38,110 --> 00:06:43,330
multiplication table that we generate

155
00:06:39,520 --> 00:06:44,859
could may not be<font color="#E5E5E5"> correct</font><font color="#CCCCCC"> so how do we</font>

156
00:06:43,330 --> 00:06:46,359
<font color="#E5E5E5">verify that</font><font color="#CCCCCC"> the proposal that</font><font color="#E5E5E5"> we</font>

157
00:06:44,860 --> 00:06:49,780
generate<font color="#CCCCCC"> out go back so this is done</font>

158
00:06:46,360 --> 00:06:50,810
using we cut and choose methods how does

159
00:06:49,780 --> 00:06:54,530
<font color="#E5E5E5">it work the</font>

160
00:06:50,810 --> 00:06:56,990
start by<font color="#E5E5E5"> generating many many me triples</font>

161
00:06:54,530 --> 00:06:59,719
let's say<font color="#CCCCCC"> M crippled in a semi</font><font color="#E5E5E5"> on its</font>

162
00:06:56,990 --> 00:07:04,010
way so these people<font color="#E5E5E5"> might be incorrect</font>

163
00:06:59,720 --> 00:07:05,900
<font color="#CCCCCC">and then we randomly</font><font color="#E5E5E5"> promote these</font>

164
00:07:04,010 --> 00:07:08,090
triples<font color="#CCCCCC"> the</font><font color="#E5E5E5"> label suppose we randomly</font>

165
00:07:05,900 --> 00:07:10,400
promote it and the key here<font color="#E5E5E5"> is</font><font color="#CCCCCC"> that the</font>

166
00:07:08,090 --> 00:07:12,500
permutation<font color="#E5E5E5"> cannot be known to any of</font>

167
00:07:10,400 --> 00:07:14,060
the<font color="#E5E5E5"> parties before they finished</font>

168
00:07:12,500 --> 00:07:19,280
generating<font color="#CCCCCC"> all the tables in the</font>

169
00:07:14,060 --> 00:07:21,440
previous<font color="#E5E5E5"> step this</font><font color="#CCCCCC"> is this is a key</font><font color="#E5E5E5"> this</font>

170
00:07:19,280 --> 00:07:25,630
<font color="#E5E5E5">is key for</font><font color="#CCCCCC"> the security of the protocol</font>

171
00:07:21,440 --> 00:07:29,380
<font color="#E5E5E5">to hold so after we promoted randomly to</font>

172
00:07:25,630 --> 00:07:32,270
be the triple then we open<font color="#CCCCCC"> the first</font>

173
00:07:29,380 --> 00:07:34,070
<font color="#E5E5E5">triples in the array by opening I mean</font>

174
00:07:32,270 --> 00:07:36,289
that the actual values of<font color="#E5E5E5"> a bill to the</font>

175
00:07:34,070 --> 00:07:37,280
parties<font color="#E5E5E5"> and then if one of the open</font>

176
00:07:36,290 --> 00:07:38,870
<font color="#E5E5E5">tables is incorrect</font>

177
00:07:37,280 --> 00:07:42,440
then the<font color="#E5E5E5"> honest parties will be texted</font>

178
00:07:38,870 --> 00:07:44,300
and about the computation<font color="#E5E5E5"> so this is the</font>

179
00:07:42,440 --> 00:07:47,630
first<font color="#E5E5E5"> test that we</font><font color="#CCCCCC"> have to ensure that</font>

180
00:07:44,300 --> 00:07:50,570
the triples are correct then if we pass

181
00:07:47,630 --> 00:07:52,880
this test we take the remaining triples

182
00:07:50,570 --> 00:07:55,190
<font color="#E5E5E5">and split them into n buckets of equal</font>

183
00:07:52,880 --> 00:08:00,440
size in each<font color="#E5E5E5"> bucket we have better</font>

184
00:07:55,190 --> 00:08:03,520
triple<font color="#E5E5E5"> okay and then and then we have</font>

185
00:08:00,440 --> 00:08:06,289
this sub protocol in our protocol that

186
00:08:03,520 --> 00:08:08,530
allows<font color="#CCCCCC"> us to verify</font><font color="#E5E5E5"> the correctness of</font>

187
00:08:06,289 --> 00:08:11,240
one<font color="#E5E5E5"> triple using another so we run this</font>

188
00:08:08,530 --> 00:08:13,419
subcortical many times each time to

189
00:08:11,240 --> 00:08:16,220
verify<font color="#CCCCCC"> the first triple in each</font><font color="#E5E5E5"> bucket</font>

190
00:08:13,419 --> 00:08:19,219
<font color="#E5E5E5">using the other beta minus</font><font color="#CCCCCC"> one triples</font>

191
00:08:16,220 --> 00:08:21,680
and the property<font color="#E5E5E5"> that we</font><font color="#CCCCCC"> have here is</font>

192
00:08:19,220 --> 00:08:24,289
that<font color="#CCCCCC"> if one of the buckets</font><font color="#E5E5E5"> is mixed</font>

193
00:08:21,680 --> 00:08:27,110
mixed meaning that it contains both

194
00:08:24,289 --> 00:08:28,430
correct and incorrect<font color="#E5E5E5"> labels then the</font>

195
00:08:27,110 --> 00:08:30,710
<font color="#CCCCCC">onus</font><font color="#E5E5E5"> parties will detect it with</font>

196
00:08:28,430 --> 00:08:33,530
probability<font color="#CCCCCC"> one and a boat so the only</font>

197
00:08:30,710 --> 00:08:37,130
<font color="#E5E5E5">way that the</font><font color="#CCCCCC"> gratata team a win by</font>

198
00:08:33,530 --> 00:08:39,429
general<font color="#E5E5E5"> by generating</font><font color="#CCCCCC"> a bad result</font><font color="#E5E5E5"> by</font>

199
00:08:37,130 --> 00:08:42,490
output<font color="#CCCCCC"> bad</font><font color="#E5E5E5"> people from the</font>

200
00:08:39,429 --> 00:08:45,680
<font color="#E5E5E5">pre-processing protocol is by having</font>

201
00:08:42,490 --> 00:08:47,209
<font color="#E5E5E5">only fully bad backers this is of course</font>

202
00:08:45,680 --> 00:08:48,920
<font color="#CCCCCC">opens with small probability because</font>

203
00:08:47,209 --> 00:08:50,119
there is a<font color="#E5E5E5"> random permutation and that</font>

204
00:08:48,920 --> 00:08:53,120
<font color="#E5E5E5">whether it does not know the random</font>

205
00:08:50,120 --> 00:08:56,089
<font color="#CCCCCC">permutation in advance</font><font color="#E5E5E5"> so if we</font><font color="#CCCCCC"> passed</font>

206
00:08:53,120 --> 00:08:58,970
all these tests then we take the<font color="#E5E5E5"> first</font>

207
00:08:56,089 --> 00:09:01,220
paper in each bucket<font color="#E5E5E5"> and output it from</font>

208
00:08:58,970 --> 00:09:02,990
with<font color="#E5E5E5"> representing and it is</font>

209
00:09:01,220 --> 00:09:04,910
the<font color="#CCCCCC"> emphasis and random</font><font color="#E5E5E5"> people that we</font>

210
00:09:02,990 --> 00:09:09,170
<font color="#CCCCCC">use later</font><font color="#E5E5E5"> in the online protocol to</font>

211
00:09:04,910 --> 00:09:11,779
verify all<font color="#E5E5E5"> engage</font><font color="#CCCCCC"> from</font><font color="#E5E5E5"> computations so</font>

212
00:09:09,170 --> 00:09:14,870
if we look<font color="#E5E5E5"> at the communication</font><font color="#CCCCCC"> cost</font>

213
00:09:11,779 --> 00:09:17,540
<font color="#E5E5E5">responses we obtain this formula okay</font>

214
00:09:14,870 --> 00:09:20,300
which not<font color="#CCCCCC"> surprisingly depend on n</font><font color="#E5E5E5"> the</font>

215
00:09:17,540 --> 00:09:22,250
number<font color="#E5E5E5"> of people that we output better</font>

216
00:09:20,300 --> 00:09:25,670
<font color="#E5E5E5">is the size of the bucket and C is a</font>

217
00:09:22,250 --> 00:09:29,689
number of triples that<font color="#CCCCCC"> we open obviously</font>

218
00:09:25,670 --> 00:09:33,310
<font color="#CCCCCC">if we want to</font><font color="#E5E5E5"> minimize the cost of the</font>

219
00:09:29,689 --> 00:09:36,110
protocol<font color="#E5E5E5"> we would like</font><font color="#CCCCCC"> to reduce the</font>

220
00:09:33,310 --> 00:09:38,449
parameters beta MC<font color="#E5E5E5"> on the</font><font color="#CCCCCC"> running on the</font>

221
00:09:36,110 --> 00:09:41,149
<font color="#E5E5E5">other end the cheating probability of</font>

222
00:09:38,449 --> 00:09:42,790
the of the success<font color="#E5E5E5"> fitting probability</font>

223
00:09:41,149 --> 00:09:45,740
of the adultery<font color="#E5E5E5"> also depends on these</font>

224
00:09:42,790 --> 00:09:48,680
values on these<font color="#E5E5E5"> parameters what we have</font>

225
00:09:45,740 --> 00:09:50,089
here is some<font color="#E5E5E5"> trade-offs if we want lower</font>

226
00:09:48,680 --> 00:09:53,000
cheating probabilities than we would

227
00:09:50,089 --> 00:09:54,709
<font color="#CCCCCC">like to increase</font><font color="#E5E5E5"> better and see if you</font>

228
00:09:53,000 --> 00:09:57,199
like better efficiency then we would

229
00:09:54,709 --> 00:10:00,560
like to<font color="#CCCCCC"> reduce latency</font><font color="#E5E5E5"> anyway in our</font>

230
00:09:57,199 --> 00:10:02,628
protocol in the starting in the starting

231
00:10:00,560 --> 00:10:05,359
point<font color="#E5E5E5"> protocol to achieve</font><font color="#CCCCCC"> 10 bits</font>

232
00:10:02,629 --> 00:10:08,839
renegade<font color="#E5E5E5"> as I presented in a few slides</font>

233
00:10:05,360 --> 00:10:11,389
<font color="#E5E5E5">earlier then we set beta MC to be equal</font>

234
00:10:08,839 --> 00:10:15,620
<font color="#CCCCCC">to</font><font color="#E5E5E5"> 3</font><font color="#CCCCCC"> meaning that we decided each bucket</font>

235
00:10:11,389 --> 00:10:19,819
is<font color="#CCCCCC"> 3 3 triple</font><font color="#E5E5E5"> and we open overall only 3</font>

236
00:10:15,620 --> 00:10:23,000
triples<font color="#CCCCCC"> ok so and</font><font color="#E5E5E5"> then with this we</font>

237
00:10:19,819 --> 00:10:25,099
achieve communication of<font color="#CCCCCC"> 10 bits per M</font>

238
00:10:23,000 --> 00:10:30,459
<font color="#CCCCCC">bit so we started by implementing this</font>

239
00:10:25,100 --> 00:10:33,529
<font color="#E5E5E5">based</font><font color="#CCCCCC"> on protocol and this</font><font color="#E5E5E5"> yield</font>

240
00:10:30,459 --> 00:10:37,369
throughput of half billion<font color="#CCCCCC"> tenge to a</font>

241
00:10:33,529 --> 00:10:39,319
second<font color="#E5E5E5"> what we will see soon that we can</font>

242
00:10:37,370 --> 00:10:40,250
double<font color="#E5E5E5"> the throughput and break the one</font>

243
00:10:39,319 --> 00:10:43,009
being an<font color="#CCCCCC"> engaged</font>

244
00:10:40,250 --> 00:10:46,430
the second area so the first thing we

245
00:10:43,009 --> 00:10:48,470
did<font color="#CCCCCC"> is to benchmark the results okay I</font>

246
00:10:46,430 --> 00:10:50,899
don't<font color="#E5E5E5"> know if</font><font color="#CCCCCC"> you</font><font color="#E5E5E5"> consider in the circle</font>

247
00:10:48,470 --> 00:10:53,389
<font color="#E5E5E5">so the first major bottleneck of the fun</font>

248
00:10:50,899 --> 00:10:54,589
is the shuffling<font color="#E5E5E5"> of the data we shuffle</font>

249
00:10:53,389 --> 00:10:57,500
a very large array the random

250
00:10:54,589 --> 00:11:01,160
permutation and this comes<font color="#E5E5E5"> with a cost</font>

251
00:10:57,500 --> 00:11:03,170
and the reason why it is so<font color="#CCCCCC"> expensive</font><font color="#E5E5E5"> is</font>

252
00:11:01,160 --> 00:11:05,569
because we have cache misses<font color="#E5E5E5"> we use the</font>

253
00:11:03,170 --> 00:11:08,349
<font color="#CCCCCC">fisher get</font><font color="#E5E5E5"> algorithm so we every time we</font>

254
00:11:05,569 --> 00:11:12,530
swept to<font color="#CCCCCC"> two cells in the array</font><font color="#E5E5E5"> and this</font>

255
00:11:08,350 --> 00:11:15,290
and this brings<font color="#CCCCCC"> kashmir</font>

256
00:11:12,530 --> 00:11:18,680
so the size of our first optimization<font color="#CCCCCC"> is</font>

257
00:11:15,290 --> 00:11:22,370
an optimization<font color="#CCCCCC"> to join of constructing</font>

258
00:11:18,680 --> 00:11:23,900
a<font color="#CCCCCC"> cache efficient shuffling without</font>

259
00:11:22,370 --> 00:11:26,630
going into all the<font color="#E5E5E5"> details</font><font color="#CCCCCC"> the idea here</font>

260
00:11:23,900 --> 00:11:28,340
that<font color="#E5E5E5"> we take an array we split it into</font>

261
00:11:26,630 --> 00:11:31,820
<font color="#E5E5E5">breaking into sub arrays</font>

262
00:11:28,340 --> 00:11:34,640
then we shuttle random shuffle each sub

263
00:11:31,820 --> 00:11:36,980
array separately and then we shuffle the

264
00:11:34,640 --> 00:11:40,040
sub arrays in the in the large array

265
00:11:36,980 --> 00:11:41,690
well the last the last<font color="#CCCCCC"> step is done not</font>

266
00:11:40,040 --> 00:11:43,730
we<font color="#CCCCCC"> don't</font><font color="#E5E5E5"> in life that we don't shuffle</font>

267
00:11:41,690 --> 00:11:45,620
<font color="#E5E5E5">physically we don't move physically that</font>

268
00:11:43,730 --> 00:11:47,780
the server<font color="#E5E5E5"> is physically in the</font>

269
00:11:45,620 --> 00:11:50,290
<font color="#CCCCCC">independently we</font><font color="#E5E5E5"> only</font><font color="#CCCCCC"> Mews</font><font color="#E5E5E5"> in X table</font>

270
00:11:47,780 --> 00:11:52,189
and shuffle the<font color="#CCCCCC"> innocent so the</font>

271
00:11:50,290 --> 00:11:53,750
happening of<font color="#CCCCCC"> this a variety in</font><font color="#E5E5E5"> the</font>

272
00:11:52,190 --> 00:11:58,010
suffering of<font color="#CCCCCC"> this always</font><font color="#E5E5E5"> actually move</font>

273
00:11:53,750 --> 00:12:00,650
the move move physically the<font color="#E5E5E5"> we move the</font>

274
00:11:58,010 --> 00:12:03,439
data from<font color="#CCCCCC"> one place to another but</font><font color="#E5E5E5"> the</font>

275
00:12:00,650 --> 00:12:07,329
burden<font color="#CCCCCC"> is but for the shuffling</font><font color="#E5E5E5"> of</font><font color="#CCCCCC"> the</font>

276
00:12:03,440 --> 00:12:11,270
<font color="#CCCCCC">read in</font><font color="#E5E5E5"> the in the big array we use</font>

277
00:12:07,330 --> 00:12:14,780
<font color="#CCCCCC">index</font><font color="#E5E5E5"> table</font><font color="#CCCCCC"> so so eventually we only</font>

278
00:12:11,270 --> 00:12:17,530
shuffle<font color="#E5E5E5"> each time small arrays and</font><font color="#CCCCCC"> then</font>

279
00:12:14,780 --> 00:12:21,199
we<font color="#E5E5E5"> it fit into the cache and then we can</font>

280
00:12:17,530 --> 00:12:23,270
and then the cache misses the point here

281
00:12:21,200 --> 00:12:25,250
is that this is not a<font color="#CCCCCC"> random permutation</font>

282
00:12:23,270 --> 00:12:26,720
<font color="#E5E5E5">so we started we had</font><font color="#CCCCCC"> at the beginning</font>

283
00:12:25,250 --> 00:12:29,900
random<font color="#E5E5E5"> permutation now we don't have</font>

284
00:12:26,720 --> 00:12:31,940
<font color="#E5E5E5">even so we managed</font><font color="#CCCCCC"> to prove that with</font>

285
00:12:29,900 --> 00:12:34,010
only changing only<font color="#E5E5E5"> slightly the power</font>

286
00:12:31,940 --> 00:12:37,370
<font color="#CCCCCC">matters we still achieve</font><font color="#E5E5E5"> the same level</font>

287
00:12:34,010 --> 00:12:39,140
of security<font color="#E5E5E5"> specifically as you can see</font>

288
00:12:37,370 --> 00:12:41,660
we are means the same we<font color="#E5E5E5"> are the same</font>

289
00:12:39,140 --> 00:12:44,840
<font color="#E5E5E5">communication we need</font><font color="#CCCCCC"> the same</font><font color="#E5E5E5"> the same</font>

290
00:12:41,660 --> 00:12:46,420
size<font color="#CCCCCC"> the same size</font><font color="#E5E5E5"> same</font><font color="#CCCCCC"> packet size but</font>

291
00:12:44,840 --> 00:12:49,430
we need to open<font color="#E5E5E5"> a little bit more</font>

292
00:12:46,420 --> 00:12:51,589
triples thousand papers but it is not

293
00:12:49,430 --> 00:12:54,380
<font color="#E5E5E5">very significant we generate million</font>

294
00:12:51,590 --> 00:12:56,360
people so<font color="#E5E5E5"> to open one thousand</font><font color="#CCCCCC"> table is</font>

295
00:12:54,380 --> 00:12:59,840
<font color="#CCCCCC">not significant and</font><font color="#E5E5E5"> with this</font>

296
00:12:56,360 --> 00:13:02,960
<font color="#E5E5E5">optimization we managed to increase the</font>

297
00:12:59,840 --> 00:13:05,660
<font color="#E5E5E5">support by</font><font color="#CCCCCC"> 25%</font><font color="#E5E5E5"> so we are getting close</font>

298
00:13:02,960 --> 00:13:08,060
<font color="#CCCCCC">to</font><font color="#E5E5E5"> our goal of achieving 1 billion and</font>

299
00:13:05,660 --> 00:13:11,060
<font color="#CCCCCC">gates per second</font><font color="#E5E5E5"> our second optimization</font>

300
00:13:08,060 --> 00:13:12,619
<font color="#E5E5E5">which I won't go into</font><font color="#CCCCCC"> the details is</font>

301
00:13:11,060 --> 00:13:14,479
reducing the size of<font color="#CCCCCC"> the bucket and</font>

302
00:13:12,620 --> 00:13:16,970
therefore reducing the communication<font color="#E5E5E5"> of</font>

303
00:13:14,480 --> 00:13:21,260
<font color="#E5E5E5">the protocol so the intuition here</font><font color="#CCCCCC"> is</font>

304
00:13:16,970 --> 00:13:22,700
that we can so each time we compute an<font color="#CCCCCC"> N</font>

305
00:13:21,260 --> 00:13:24,680
<font color="#E5E5E5">guy to actually generate also</font>

306
00:13:22,700 --> 00:13:26,869
multiplication tables so we<font color="#E5E5E5"> can treat</font><font color="#CCCCCC"> it</font>

307
00:13:24,680 --> 00:13:29,300
if it was one of<font color="#CCCCCC"> the triples in the</font>

308
00:13:26,869 --> 00:13:30,949
bucket of course it is not exactly it is

309
00:13:29,300 --> 00:13:33,199
<font color="#CCCCCC">not a random multiplication table so it</font>

310
00:13:30,949 --> 00:13:35,329
is not that<font color="#CCCCCC"> straight photon but</font><font color="#E5E5E5"> we have</font>

311
00:13:33,199 --> 00:13:36,769
this process that we call on the

312
00:13:35,329 --> 00:13:38,868
magnification

313
00:13:36,769 --> 00:13:41,809
well we choose at random<font color="#E5E5E5"> a triple that</font>

314
00:13:38,869 --> 00:13:44,869
is used<font color="#E5E5E5"> to verify in the online and by</font>

315
00:13:41,809 --> 00:13:47,899
this we kind<font color="#E5E5E5"> of match it and get people</font>

316
00:13:44,869 --> 00:13:50,869
to<font color="#CCCCCC"> about it from</font><font color="#E5E5E5"> the offline</font>

317
00:13:47,899 --> 00:13:53,929
this increases the computational work in

318
00:13:50,869 --> 00:13:56,300
the online<font color="#CCCCCC"> a</font><font color="#E5E5E5"> little bit but it allowed</font>

319
00:13:53,929 --> 00:13:58,670
us<font color="#CCCCCC"> to</font><font color="#E5E5E5"> reduce the</font><font color="#CCCCCC"> size of</font><font color="#E5E5E5"> the package</font>

320
00:13:56,300 --> 00:14:00,349
from<font color="#E5E5E5"> 2 from 3 to 2 and therefore reduce</font>

321
00:13:58,670 --> 00:14:03,170
the communication for 10 bits per and

322
00:14:00,350 --> 00:14:07,279
gave the<font color="#E5E5E5"> 7 bits per engage and this</font>

323
00:14:03,170 --> 00:14:10,610
brings us to almost our goal<font color="#CCCCCC"> we're</font>

324
00:14:07,279 --> 00:14:15,079
getting close<font color="#CCCCCC"> we are</font><font color="#E5E5E5"> going to</font><font color="#CCCCCC"> close at</font>

325
00:14:10,610 --> 00:14:18,920
this<font color="#E5E5E5"> point</font><font color="#CCCCCC"> we went back to to</font><font color="#E5E5E5"> the</font>

326
00:14:15,079 --> 00:14:20,628
benchmarking of the<font color="#CCCCCC"> overall protocol</font><font color="#E5E5E5"> now</font>

327
00:14:18,920 --> 00:14:22,399
things have changed<font color="#E5E5E5"> bottlenecks that we</font>

328
00:14:20,629 --> 00:14:24,709
have seen<font color="#E5E5E5"> before not already are not</font>

329
00:14:22,399 --> 00:14:26,240
<font color="#E5E5E5">béchamel bottlenecks anymore but now</font>

330
00:14:24,709 --> 00:14:27,859
<font color="#CCCCCC">there is a new</font><font color="#E5E5E5"> button</font><font color="#CCCCCC"> egg I don't know</font>

331
00:14:26,240 --> 00:14:31,850
if you consider<font color="#CCCCCC"> the world the world</font>

332
00:14:27,860 --> 00:14:34,249
<font color="#E5E5E5">share 256 it appears everywhere and this</font>

333
00:14:31,850 --> 00:14:36,410
was this was<font color="#CCCCCC"> not about the</font><font color="#E5E5E5"> necklace all</font>

334
00:14:34,249 --> 00:14:39,800
but in our portable there is some step

335
00:14:36,410 --> 00:14:43,129
<font color="#CCCCCC">as part of the</font><font color="#E5E5E5"> verification well we will</font>

336
00:14:39,800 --> 00:14:45,079
<font color="#E5E5E5">report it compare</font><font color="#CCCCCC"> their views</font><font color="#E5E5E5"> this</font><font color="#CCCCCC"> is</font>

337
00:14:43,129 --> 00:14:46,610
done by they accumulate<font color="#E5E5E5"> the view that</font>

338
00:14:45,079 --> 00:14:48,649
we've seen during the computation and

339
00:14:46,610 --> 00:14:52,129
<font color="#E5E5E5">then they hash it and then they compare</font>

340
00:14:48,649 --> 00:14:54,529
the etching the the hash values so this

341
00:14:52,129 --> 00:14:57,439
now this has become a bottleneck so what

342
00:14:54,529 --> 00:14:59,990
we did<font color="#E5E5E5"> here it replace the share 256</font>

343
00:14:57,439 --> 00:15:03,769
with<font color="#E5E5E5"> GMAC</font><font color="#CCCCCC"> while it's efficient</font>

344
00:14:59,990 --> 00:15:05,240
I<font color="#CCCCCC"> included</font><font color="#E5E5E5"> to</font><font color="#CCCCCC"> redeem</font><font color="#E5E5E5"> later but but this</font>

345
00:15:03,769 --> 00:15:07,220
<font color="#E5E5E5">allows</font><font color="#CCCCCC"> us to</font><font color="#E5E5E5"> use for</font><font color="#CCCCCC"> DeMuth we can</font>

346
00:15:05,240 --> 00:15:10,339
implement it very efficiently with<font color="#CCCCCC"> AES</font>

347
00:15:07,220 --> 00:15:12,139
<font color="#CCCCCC">and I</font><font color="#E5E5E5"> and this is this reduces</font><font color="#CCCCCC"> costs</font>

348
00:15:10,339 --> 00:15:14,410
significantly<font color="#E5E5E5"> and using this</font>

349
00:15:12,139 --> 00:15:19,519
<font color="#E5E5E5">optimization we were</font><font color="#CCCCCC"> men we managed to</font>

350
00:15:14,410 --> 00:15:23,179
<font color="#CCCCCC">achieve our goal and this brings us to</font>

351
00:15:19,519 --> 00:15:24,829
<font color="#CCCCCC">one point one and gate per second and we</font>

352
00:15:23,179 --> 00:15:30,679
managed to<font color="#E5E5E5"> break the 1 billion</font><font color="#CCCCCC"> mk2 the</font>

353
00:15:24,829 --> 00:15:33,349
second<font color="#CCCCCC"> yeah so to sum up we demonstrated</font>

354
00:15:30,679 --> 00:15:35,480
that<font color="#CCCCCC"> it is possible to achieve fast rate</font>

355
00:15:33,350 --> 00:15:36,829
<font color="#E5E5E5">even</font><font color="#CCCCCC"> so malicious abilities in a very</font>

356
00:15:35,480 --> 00:15:38,820
specific<font color="#E5E5E5"> on setting the three party</font>

357
00:15:36,829 --> 00:15:42,839
settings<font color="#E5E5E5"> but it is</font>

358
00:15:38,820 --> 00:15:44,790
much more than in any previous vlog<font color="#CCCCCC"> so</font>

359
00:15:42,839 --> 00:15:46,470
we achieve<font color="#E5E5E5"> great so I didn't say at the</font>

360
00:15:44,790 --> 00:15:48,779
beginning<font color="#CCCCCC"> but</font><font color="#E5E5E5"> we're also implementing</font>

361
00:15:46,470 --> 00:15:52,769
the semi<font color="#E5E5E5"> honest protocol by itself and</font>

362
00:15:48,779 --> 00:15:55,470
this achieves a<font color="#CCCCCC"> super 7 billion MVA to</font>

363
00:15:52,769 --> 00:15:59,730
the second so the<font color="#E5E5E5"> malicious protocol is</font>

364
00:15:55,470 --> 00:16:02,339
<font color="#CCCCCC">only</font><font color="#E5E5E5"> seven times slower than the semi</font>

365
00:15:59,730 --> 00:16:05,399
honest protocol 1 billion and gates per

366
00:16:02,339 --> 00:16:07,589
second which which can<font color="#E5E5E5"> be translated to</font>

367
00:16:05,399 --> 00:16:09,990
assuming<font color="#CCCCCC"> that let's say that we want to</font>

368
00:16:07,589 --> 00:16:13,850
<font color="#E5E5E5">compute</font><font color="#CCCCCC"> the NH function so this</font>

369
00:16:09,990 --> 00:16:16,380
translates into modem to<font color="#E5E5E5"> 100,000 a</font><font color="#CCCCCC"> year</font>

370
00:16:13,850 --> 00:16:19,829
<font color="#E5E5E5">operations per second and we believe</font>

371
00:16:16,380 --> 00:16:23,339
<font color="#CCCCCC">that this before can significally extend</font>

372
00:16:19,829 --> 00:16:25,670
the application<font color="#CCCCCC"> for empathy</font><font color="#E5E5E5"> thank you</font>

373
00:16:23,339 --> 00:16:25,670
<font color="#E5E5E5">very much</font>

374
00:16:30,420 --> 00:16:44,378
three essential questions<font color="#CCCCCC"> -</font>

375
00:16:42,579 --> 00:16:45,910
from George<font color="#CCCCCC"> Mason University</font><font color="#E5E5E5"> that was</font>

376
00:16:44,379 --> 00:16:48,459
<font color="#E5E5E5">very nice fact I really</font><font color="#CCCCCC"> enjoyed it</font>

377
00:16:45,910 --> 00:16:50,439
my question is regard to the shuffling

378
00:16:48,459 --> 00:16:52,029
process that you<font color="#E5E5E5"> are doing so in the</font>

379
00:16:50,439 --> 00:16:53,949
shuffling<font color="#E5E5E5"> all the parties are involved</font>

380
00:16:52,029 --> 00:16:55,540
<font color="#E5E5E5">or</font><font color="#CCCCCC"> just shuffling who is that they're</font>

381
00:16:53,949 --> 00:16:57,670
<font color="#E5E5E5">doing the shuffling basically in this</font>

382
00:16:55,540 --> 00:16:59,980
process<font color="#E5E5E5"> how did they do the settling yes</font>

383
00:16:57,670 --> 00:17:02,139
<font color="#CCCCCC">give</font><font color="#E5E5E5"> my smart enough men</font><font color="#CCCCCC"> in</font><font color="#E5E5E5"> it so this</font>

384
00:16:59,980 --> 00:17:04,630
<font color="#E5E5E5">what we</font><font color="#CCCCCC"> do here is that the gender</font><font color="#E5E5E5"> the</font>

385
00:17:02,139 --> 00:17:06,970
parties<font color="#E5E5E5"> communicate to generate a seed</font>

386
00:17:04,630 --> 00:17:10,539
and then<font color="#E5E5E5"> they use absurd random</font>

387
00:17:06,970 --> 00:17:12,309
generator to jump to generate using<font color="#E5E5E5"> the</font>

388
00:17:10,539 --> 00:17:14,648
seed as much as random it as they<font color="#E5E5E5"> need</font>

389
00:17:12,309 --> 00:17:16,510
<font color="#E5E5E5">so eventually they need only to commit</font>

390
00:17:14,648 --> 00:17:19,029
this is constant communication for

391
00:17:16,510 --> 00:17:21,369
generating the same<font color="#CCCCCC"> bit</font><font color="#E5E5E5"> is done by they</font>

392
00:17:19,029 --> 00:17:22,959
generate random<font color="#E5E5E5"> sharing and openings and</font>

393
00:17:21,369 --> 00:17:24,458
then<font color="#E5E5E5"> they have a state and then they can</font>

394
00:17:22,959 --> 00:17:26,139
<font color="#E5E5E5">use it to</font><font color="#CCCCCC"> generate as much as a random</font>

395
00:17:24,459 --> 00:17:28,360
<font color="#CCCCCC">message</font><font color="#E5E5E5"> we can so in terms of</font>

396
00:17:26,138 --> 00:17:30,820
communication this does not cost<font color="#E5E5E5"> much</font>

397
00:17:28,359 --> 00:17:32,260
<font color="#CCCCCC">but as we extend it comes with a</font>

398
00:17:30,820 --> 00:17:35,500
<font color="#E5E5E5">community for combinations are thoughts</font>

399
00:17:32,260 --> 00:17:38,019
<font color="#E5E5E5">that we</font><font color="#CCCCCC"> manage to produce do you need it</font>

400
00:17:35,500 --> 00:17:41,320
to<font color="#E5E5E5"> be</font><font color="#CCCCCC"> like generate</font><font color="#E5E5E5"> all the possible</font>

401
00:17:38,019 --> 00:17:42,100
permutations or just<font color="#E5E5E5"> no it's</font><font color="#CCCCCC"> the one</font>

402
00:17:41,320 --> 00:17:44,590
permutation

403
00:17:42,100 --> 00:17:48,750
well one<font color="#CCCCCC"> commission</font><font color="#E5E5E5"> that the parties</font>

404
00:17:44,590 --> 00:17:48,750
don't know in<font color="#CCCCCC"> advance and</font><font color="#E5E5E5"> that's enough</font>

405
00:17:49,679 --> 00:17:55,000
so the questions are gathering detecting

406
00:17:53,139 --> 00:17:58,120
who actually deviated from the<font color="#CCCCCC"> photocard</font>

407
00:17:55,000 --> 00:17:59,470
<font color="#CCCCCC">so can</font><font color="#E5E5E5"> you really say on do you have</font>

408
00:17:58,120 --> 00:17:59,949
enough evidence to<font color="#CCCCCC"> blame</font><font color="#E5E5E5"> one of the</font>

409
00:17:59,470 --> 00:18:01,840
<font color="#CCCCCC">parties</font>

410
00:17:59,950 --> 00:18:03,730
no<font color="#CCCCCC"> anyway basically with the rich</font>

411
00:18:01,840 --> 00:18:06,490
<font color="#CCCCCC">sketches</font><font color="#E5E5E5"> magically think that it's</font>

412
00:18:03,730 --> 00:18:08,559
really<font color="#E5E5E5"> difficult to rattle off from the</font>

413
00:18:06,490 --> 00:18:10,659
<font color="#E5E5E5">moral values</font><font color="#CCCCCC"> you know well we don't know</font>

414
00:18:08,559 --> 00:18:13,360
who when the<font color="#CCCCCC"> party is</font><font color="#E5E5E5"> about they don't</font>

415
00:18:10,659 --> 00:18:15,610
<font color="#E5E5E5">know who cheated no we don't know the</font>

416
00:18:13,360 --> 00:18:18,879
alcohol protocols that can<font color="#CCCCCC"> achieve</font><font color="#E5E5E5"> that</font>

417
00:18:15,610 --> 00:18:21,309
but<font color="#E5E5E5"> not nothing this protocol now and</font>

418
00:18:18,880 --> 00:18:24,070
it's<font color="#CCCCCC"> something that would</font><font color="#E5E5E5"> be much more</font>

419
00:18:21,309 --> 00:18:26,860
<font color="#E5E5E5">exposure is obvious it would be</font>

420
00:18:24,070 --> 00:18:28,330
difficult<font color="#E5E5E5"> it will come it will reduce</font>

421
00:18:26,860 --> 00:18:30,279
<font color="#E5E5E5">the efficiency of the protocol it won't</font>

422
00:18:28,330 --> 00:18:32,879
be easy<font color="#E5E5E5"> especially in the secret sharing</font>

423
00:18:30,279 --> 00:18:40,720
approach<font color="#CCCCCC"> it's not</font><font color="#E5E5E5"> that easy to do</font><font color="#CCCCCC"> that</font>

424
00:18:32,880 --> 00:18:41,400
<font color="#E5E5E5">okay any other questions</font><font color="#CCCCCC"> all so maybe</font>

425
00:18:40,720 --> 00:18:43,380
<font color="#E5E5E5">when</font>

426
00:18:41,400 --> 00:18:46,230
that's when so<font color="#CCCCCC"> what kind of what can you</font>

427
00:18:43,380 --> 00:18:48,480
do with 1 billion<font color="#E5E5E5"> get the old a yes</font>

428
00:18:46,230 --> 00:18:51,120
<font color="#CCCCCC">what</font><font color="#E5E5E5"> so typical non cryptographic</font>

429
00:18:48,480 --> 00:18:53,550
applications<font color="#E5E5E5"> with one</font><font color="#CCCCCC"> vision</font><font color="#E5E5E5"> gets wet</font>

430
00:18:51,120 --> 00:18:55,830
<font color="#E5E5E5">value ah the rich</font><font color="#CCCCCC"> Wendy says that's</font>

431
00:18:53,550 --> 00:18:59,820
where was<font color="#E5E5E5"> the 1 million dollar question</font>

432
00:18:55,830 --> 00:19:03,210
as I have nothing in mind but we thought

433
00:18:59,820 --> 00:19:09,260
<font color="#CCCCCC">about a few things um I don't have</font>

434
00:19:03,210 --> 00:19:09,260
something<font color="#CCCCCC"> basically</font><font color="#E5E5E5"> in my mind</font><font color="#CCCCCC"> you</font><font color="#E5E5E5"> will</font>

435
00:19:09,790 --> 00:19:15,879
[Applause]

