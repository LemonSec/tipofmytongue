1
00:00:07,750 --> 00:00:11,730
hi everyone so I am

2
00:00:11,850 --> 00:00:18,490
in France<font color="#CCCCCC"> I will present</font>

3
00:00:15,100 --> 00:00:20,590
<font color="#CCCCCC">a video discussion of malware and this</font>

4
00:00:18,490 --> 00:00:22,720
is joint work with<font color="#E5E5E5"> a hold on Davi the</font>

5
00:00:20,590 --> 00:00:25,810
<font color="#E5E5E5">Android</font><font color="#CCCCCC"> Mario with</font><font color="#E5E5E5"> working at your</font><font color="#CCCCCC"> yard</font>

6
00:00:22,720 --> 00:00:28,360
<font color="#E5E5E5">friends so in a nutshell what</font><font color="#CCCCCC"> is</font><font color="#E5E5E5"> it</font>

7
00:00:25,810 --> 00:00:29,950
about were interested in<font color="#E5E5E5"> designing</font>

8
00:00:28,360 --> 00:00:33,010
automatic methods for malware

9
00:00:29,950 --> 00:00:35,650
notification<font color="#E5E5E5"> we notify the problem of</font>

10
00:00:33,010 --> 00:00:38,650
invisibility question<font color="#E5E5E5"> an important</font>

11
00:00:35,650 --> 00:00:40,809
problem<font color="#CCCCCC"> which is mostly a blind spot to</font>

12
00:00:38,650 --> 00:00:42,820
Toronto thematic<font color="#E5E5E5"> technique and so we</font>

13
00:00:40,809 --> 00:00:45,040
propose an efficient focused and precise

14
00:00:42,820 --> 00:00:47,739
<font color="#E5E5E5">method for solving this infeasibility</font>

15
00:00:45,040 --> 00:00:52,960
question<font color="#E5E5E5"> and we will put on</font><font color="#CCCCCC"> some from</font>

16
00:00:47,739 --> 00:00:55,059
very<font color="#E5E5E5"> promisingly</font><font color="#CCCCCC"> studies so first why</font>

17
00:00:52,960 --> 00:00:58,000
are<font color="#CCCCCC"> we interested</font><font color="#E5E5E5"> in manual duplication</font>

18
00:00:55,059 --> 00:01:01,180
so typically in my well you<font color="#E5E5E5"> can ever</font>

19
00:00:58,000 --> 00:01:03,370
want to<font color="#E5E5E5"> detect them or in some kind of</font>

20
00:01:01,180 --> 00:01:06,820
situation<font color="#E5E5E5"> you</font><font color="#CCCCCC"> really want to understand</font>

21
00:01:03,370 --> 00:01:09,548
them<font color="#CCCCCC"> so take a take the case of</font><font color="#E5E5E5"> apt</font>

22
00:01:06,820 --> 00:01:11,770
advanced persistent threat<font color="#CCCCCC"> so these are</font>

23
00:01:09,549 --> 00:01:13,810
targeting<font color="#CCCCCC"> by well written</font><font color="#E5E5E5"> by experts and</font>

24
00:01:11,770 --> 00:01:17,949
with lots of attack and defense

25
00:01:13,810 --> 00:01:21,909
<font color="#CCCCCC">abilities at some point on she</font>

26
00:01:17,950 --> 00:01:24,520
<font color="#CCCCCC">understand you have been act by some apt</font>

27
00:01:21,909 --> 00:01:26,530
very some<font color="#E5E5E5"> guys somewhere which must try</font>

28
00:01:24,520 --> 00:01:28,390
to find<font color="#CCCCCC"> them by</font><font color="#E5E5E5"> where and until it is</font>

29
00:01:26,530 --> 00:01:32,049
done<font color="#CCCCCC"> we</font><font color="#E5E5E5"> must try to understand it in</font>

30
00:01:28,390 --> 00:01:35,200
<font color="#CCCCCC">order to try to see what's</font><font color="#E5E5E5"> going on and</font>

31
00:01:32,049 --> 00:01:36,969
to try<font color="#CCCCCC"> to mitigate</font><font color="#E5E5E5"> the attack and to fix</font>

32
00:01:35,200 --> 00:01:39,399
and clean what can be fixed and<font color="#E5E5E5"> clean</font>

33
00:01:36,969 --> 00:01:41,619
and to further improve<font color="#CCCCCC"> our</font><font color="#E5E5E5"> line of</font>

34
00:01:39,399 --> 00:01:44,259
defense<font color="#E5E5E5"> but this is highly difficult</font>

35
00:01:41,619 --> 00:01:46,179
task<font color="#CCCCCC"> because this kind of</font><font color="#E5E5E5"> sophisticated</font>

36
00:01:44,259 --> 00:01:48,880
in my way<font color="#E5E5E5"> are highly protected by</font>

37
00:01:46,179 --> 00:01:51,630
obfuscation<font color="#E5E5E5"> which are meant to make</font>

38
00:01:48,880 --> 00:01:55,630
<font color="#CCCCCC">reverse</font><font color="#E5E5E5"> engineering very difficult and</font>

39
00:01:51,630 --> 00:01:57,460
so basically it is<font color="#E5E5E5"> what we want to</font><font color="#CCCCCC"> do to</font>

40
00:01:55,630 --> 00:02:00,490
add this<font color="#CCCCCC"> kind of</font><font color="#E5E5E5"> malware comprehension</font>

41
00:01:57,460 --> 00:02:04,509
activities by providing<font color="#CCCCCC"> automatic tools</font>

42
00:02:00,490 --> 00:02:08,070
to<font color="#E5E5E5"> to a low to combat</font><font color="#CCCCCC"> occupation at this</font>

43
00:02:04,509 --> 00:02:08,070
to identify<font color="#E5E5E5"> them and simplify them</font>

44
00:02:08,520 --> 00:02:15,790
so reverse engineering is<font color="#E5E5E5"> a broad as a</font>

45
00:02:13,450 --> 00:02:17,859
broad scope but<font color="#CCCCCC"> Co interested in the</font>

46
00:02:15,790 --> 00:02:20,470
very<font color="#E5E5E5"> basic first step here which</font><font color="#CCCCCC"> is just</font>

47
00:02:17,860 --> 00:02:22,630
<font color="#E5E5E5">corrected as some</font><font color="#CCCCCC"> little C&T</font><font color="#E5E5E5"> recovery</font>

48
00:02:20,470 --> 00:02:25,150
for control flow graph recovery<font color="#E5E5E5"> so</font>

49
00:02:22,630 --> 00:02:26,710
basically what we want to<font color="#E5E5E5"> do is to find</font>

50
00:02:25,150 --> 00:02:27,580
<font color="#E5E5E5">the set</font><font color="#CCCCCC"> of instructions of the malware</font>

51
00:02:26,710 --> 00:02:30,610
<font color="#E5E5E5">and</font>

52
00:02:27,580 --> 00:02:35,380
<font color="#E5E5E5">ideally</font><font color="#CCCCCC"> it's control flow graph</font><font color="#E5E5E5"> okay</font>

53
00:02:30,610 --> 00:02:37,720
it's very<font color="#CCCCCC"> a first step but already</font><font color="#E5E5E5"> on</font>

54
00:02:35,380 --> 00:02:40,150
genuine<font color="#E5E5E5"> card is not so easy because on</font>

55
00:02:37,720 --> 00:02:42,520
<font color="#E5E5E5">binary code you</font><font color="#CCCCCC"> don't have a very</font><font color="#E5E5E5"> clear</font>

56
00:02:40,150 --> 00:02:46,090
separation<font color="#E5E5E5"> on what is good and what is</font>

57
00:02:42,520 --> 00:02:49,240
data you have a so this<font color="#E5E5E5"> dynamic jump</font>

58
00:02:46,090 --> 00:02:52,150
like jump a is in that case statically

59
00:02:49,240 --> 00:02:53,500
you cannot know where what<font color="#CCCCCC"> is the next</font>

60
00:02:52,150 --> 00:02:56,080
<font color="#E5E5E5">in truth where is the next instruction</font>

61
00:02:53,500 --> 00:02:59,890
because it depends on<font color="#E5E5E5"> the value and the</font>

62
00:02:56,080 --> 00:03:02,890
runtime<font color="#E5E5E5"> value of</font><font color="#CCCCCC"> regs</font><font color="#E5E5E5"> so already</font><font color="#CCCCCC"> start</font>

63
00:02:59,890 --> 00:03:04,480
<font color="#CCCCCC">so easy</font><font color="#E5E5E5"> but in the case of malware when</font>

64
00:03:02,890 --> 00:03:07,839
you have a sophistication it just become

65
00:03:04,480 --> 00:03:09,970
a<font color="#CCCCCC"> nightmare so obfuscation I</font><font color="#E5E5E5"> mean to</font>

66
00:03:07,840 --> 00:03:12,550
<font color="#E5E5E5">make a cut out to reverse there are many</font>

67
00:03:09,970 --> 00:03:14,350
many different<font color="#E5E5E5"> kind of optimization like</font>

68
00:03:12,550 --> 00:03:16,300
<font color="#E5E5E5">you can think of search modification</font>

69
00:03:14,350 --> 00:03:17,890
when you have the first layer which

70
00:03:16,300 --> 00:03:20,620
<font color="#E5E5E5">right the second layer which why the</font>

71
00:03:17,890 --> 00:03:23,649
first layer<font color="#CCCCCC"> and so on</font><font color="#E5E5E5"> and at the</font><font color="#CCCCCC"> end</font><font color="#E5E5E5"> you</font>

72
00:03:20,620 --> 00:03:25,930
have<font color="#CCCCCC"> a real payload you have encryption</font>

73
00:03:23,650 --> 00:03:28,030
the authorization code overlapping<font color="#CCCCCC"> back</font>

74
00:03:25,930 --> 00:03:30,670
<font color="#CCCCCC">predicate</font><font color="#E5E5E5"> and so on so many of these</font>

75
00:03:28,030 --> 00:03:34,270
different<font color="#CCCCCC"> techniques and</font><font color="#E5E5E5"> you can combine</font>

76
00:03:30,670 --> 00:03:38,530
<font color="#E5E5E5">them to make the code really up to under</font>

77
00:03:34,270 --> 00:03:40,540
<font color="#E5E5E5">stop so as running example we use</font><font color="#CCCCCC"> of</font>

78
00:03:38,530 --> 00:03:43,270
<font color="#CCCCCC">acrylic eight and caustic tempering so</font>

79
00:03:40,540 --> 00:03:44,739
just<font color="#E5E5E5"> quick definition so in attack</font>

80
00:03:43,270 --> 00:03:46,600
predicate you<font color="#CCCCCC"> are using your some</font>

81
00:03:44,739 --> 00:03:49,470
branching condition but which are<font color="#E5E5E5"> always</font>

82
00:03:46,600 --> 00:03:52,390
ever always<font color="#CCCCCC"> true or ever always</font><font color="#E5E5E5"> fast and</font>

83
00:03:49,470 --> 00:03:54,700
typically the trick is that the dead

84
00:03:52,390 --> 00:03:58,140
branch will point to some<font color="#CCCCCC"> spurious</font><font color="#E5E5E5"> code</font>

85
00:03:54,700 --> 00:04:01,450
and the<font color="#CCCCCC"> doll is but the reducer of</font>

86
00:03:58,140 --> 00:04:03,850
analysis tool<font color="#E5E5E5"> waste its time in this</font>

87
00:04:01,450 --> 00:04:08,170
<font color="#CCCCCC">stores code rather than in the malicious</font>

88
00:04:03,850 --> 00:04:11,799
code you can also use tag tampering so

89
00:04:08,170 --> 00:04:13,899
in that case you will<font color="#E5E5E5"> treat the reverser</font>

90
00:04:11,800 --> 00:04:16,418
by modifying<font color="#E5E5E5"> written</font><font color="#CCCCCC"> instruction</font><font color="#E5E5E5"> so</font><font color="#CCCCCC"> that</font>

91
00:04:13,900 --> 00:04:18,640
we<font color="#E5E5E5"> don't go back</font><font color="#CCCCCC"> to their colleague</font><font color="#E5E5E5"> but</font>

92
00:04:16,418 --> 00:04:20,380
<font color="#E5E5E5">somewhere</font><font color="#CCCCCC"> else so in that case the</font>

93
00:04:18,640 --> 00:04:26,620
written site will<font color="#E5E5E5"> also be some</font><font color="#CCCCCC"> spurious</font>

94
00:04:20,380 --> 00:04:28,480
<font color="#E5E5E5">code and it also either will target so</font>

95
00:04:26,620 --> 00:04:33,160
clearly standard<font color="#E5E5E5"> adjustably techniques</font>

96
00:04:28,480 --> 00:04:35,440
are not enough<font color="#E5E5E5"> so I'm nervous</font><font color="#CCCCCC"> for</font><font color="#E5E5E5"> small</font>

97
00:04:33,160 --> 00:04:38,240
graph suppose<font color="#E5E5E5"> that you have one dynamic</font>

98
00:04:35,440 --> 00:04:41,330
jump and suppose<font color="#CCCCCC"> that the</font><font color="#E5E5E5"> read</font>

99
00:04:38,240 --> 00:04:45,410
red circle<font color="#CCCCCC"> are</font><font color="#E5E5E5"> represent some spurious</font>

100
00:04:41,330 --> 00:04:48,440
<font color="#CCCCCC">code then if you use some static basic</font>

101
00:04:45,410 --> 00:04:50,210
static analysis<font color="#E5E5E5"> these assembly on</font><font color="#CCCCCC"> to</font>

102
00:04:48,440 --> 00:04:52,190
<font color="#CCCCCC">reach with</font><font color="#E5E5E5"> jumble the dynamic</font><font color="#CCCCCC"> gems you</font>

103
00:04:50,210 --> 00:04:54,020
<font color="#E5E5E5">can you</font><font color="#CCCCCC"> cannot go further</font><font color="#E5E5E5"> because</font><font color="#CCCCCC"> you</font>

104
00:04:52,190 --> 00:04:57,080
can unsigned the dynamic of<font color="#E5E5E5"> a dynamic</font>

105
00:04:54,020 --> 00:05:00,139
<font color="#E5E5E5">target if a dynamic gem is a little bit</font>

106
00:04:57,080 --> 00:05:02,109
of<font color="#CCCCCC"> pisghetti</font><font color="#E5E5E5"> and you can also be lured</font>

107
00:05:00,139 --> 00:05:04,669
into going<font color="#E5E5E5"> into this produce code</font>

108
00:05:02,110 --> 00:05:06,759
basically<font color="#E5E5E5"> static analysis is way too</font>

109
00:05:04,669 --> 00:05:09,139
much<font color="#E5E5E5"> pressure</font><font color="#CCCCCC"> in the sophistication</font>

110
00:05:06,759 --> 00:05:12,560
<font color="#E5E5E5">especially on to access</font><font color="#CCCCCC"> magnification</font>

111
00:05:09,139 --> 00:05:14,330
encryption and so on<font color="#CCCCCC"> it</font><font color="#E5E5E5"> just too hard so</font>

112
00:05:12,560 --> 00:05:17,479
there is<font color="#E5E5E5"> another</font><font color="#CCCCCC"> way which is dynamic</font>

113
00:05:14,330 --> 00:05:19,490
analysis<font color="#E5E5E5"> basically</font><font color="#CCCCCC"> you run or emulate</font>

114
00:05:17,479 --> 00:05:21,440
the program and you see what happens<font color="#CCCCCC"> so</font>

115
00:05:19,490 --> 00:05:24,860
<font color="#CCCCCC">by</font><font color="#E5E5E5"> definition you cannot go into</font>

116
00:05:21,440 --> 00:05:27,440
spurious code<font color="#E5E5E5"> you can also find some</font>

117
00:05:24,860 --> 00:05:31,250
dynamic<font color="#E5E5E5"> gem you can go through</font><font color="#CCCCCC"> safe</font>

118
00:05:27,440 --> 00:05:33,680
modification or encryption but you can

119
00:05:31,250 --> 00:05:38,330
meet a large part of<font color="#E5E5E5"> a program which is</font>

120
00:05:33,680 --> 00:05:40,789
a problem<font color="#CCCCCC"> a few years ago some people</font>

121
00:05:38,330 --> 00:05:44,570
<font color="#E5E5E5">like Christopher Craig I love Sonja</font>

122
00:05:40,789 --> 00:05:46,909
<font color="#CCCCCC">Doble</font><font color="#E5E5E5"> advocate to use dynamic symbolic</font>

123
00:05:44,570 --> 00:05:49,159
execution in<font color="#E5E5E5"> the context of</font><font color="#CCCCCC"> wizards</font>

124
00:05:46,909 --> 00:05:51,860
engineering so quickly what is dynamic

125
00:05:49,159 --> 00:05:54,190
symbolic execution<font color="#CCCCCC"> it comes from formal</font>

126
00:05:51,860 --> 00:05:56,960
verification and<font color="#CCCCCC"> the key insight is that</font>

127
00:05:54,190 --> 00:05:59,180
if you have a single<font color="#CCCCCC"> pass of</font><font color="#E5E5E5"> a program</font>

128
00:05:56,960 --> 00:06:01,099
it's quite easy to be in the formula

129
00:05:59,180 --> 00:06:04,340
which<font color="#E5E5E5"> represent exactly the cross friend</font>

130
00:06:01,099 --> 00:06:07,130
by<font color="#E5E5E5"> the input must</font><font color="#CCCCCC"> obey to follow this</font>

131
00:06:04,340 --> 00:06:10,729
path<font color="#E5E5E5"> and you will send the formula to a</font>

132
00:06:07,130 --> 00:06:12,590
server and<font color="#E5E5E5"> if you get some some input</font>

133
00:06:10,729 --> 00:06:15,919
when you will cover<font color="#E5E5E5"> the top and if you</font>

134
00:06:12,590 --> 00:06:18,830
iterate over<font color="#E5E5E5"> that when you will get a</font>

135
00:06:15,919 --> 00:06:20,690
coverage of the code and naturally it

136
00:06:18,830 --> 00:06:22,940
can be<font color="#E5E5E5"> using the office keishon because</font>

137
00:06:20,690 --> 00:06:25,849
with each new input who you will find

138
00:06:22,940 --> 00:06:27,380
you<font color="#E5E5E5"> read execution path so and it's very</font>

139
00:06:25,849 --> 00:06:29,570
robust<font color="#E5E5E5"> because</font><font color="#CCCCCC"> there is this dynamic</font>

140
00:06:27,380 --> 00:06:33,199
<font color="#E5E5E5">part which kind of</font><font color="#CCCCCC"> gain and</font>

141
00:06:29,570 --> 00:06:34,699
<font color="#CCCCCC">internalization steroid so it's quite</font>

142
00:06:33,199 --> 00:06:36,470
good to<font color="#E5E5E5"> find a new part and to</font>

143
00:06:34,699 --> 00:06:37,039
<font color="#CCCCCC">complement dynamic even if it's still</font>

144
00:06:36,470 --> 00:06:39,970
incomplete

145
00:06:37,039 --> 00:06:42,979
<font color="#CCCCCC">ok so it is gender have been very nice</font>

146
00:06:39,970 --> 00:06:45,860
<font color="#CCCCCC">case study so in the end</font><font color="#E5E5E5"> of the story</font>

147
00:06:42,979 --> 00:06:47,650
not exactly because basically dynamic

148
00:06:45,860 --> 00:06:49,840
symbolic execution can only<font color="#CCCCCC"> pull</font>

149
00:06:47,650 --> 00:06:52,448
but something is feasible<font color="#CCCCCC"> I can take</font>

150
00:06:49,840 --> 00:06:55,869
this from<font color="#E5E5E5"> Target</font><font color="#CCCCCC"> I can go I</font><font color="#E5E5E5"> can take</font>

151
00:06:52,449 --> 00:06:58,780
this branch and so on<font color="#E5E5E5"> but in Reverse</font>

152
00:06:55,870 --> 00:07:01,060
in many situation you want<font color="#E5E5E5"> to answer</font>

153
00:06:58,780 --> 00:07:03,580
more like some infeasibility question

154
00:07:01,060 --> 00:07:06,040
let us<font color="#CCCCCC"> imagine that your dynamic</font>

155
00:07:03,580 --> 00:07:08,349
analysis didn't manage<font color="#CCCCCC"> to go to one</font>

156
00:07:06,040 --> 00:07:10,120
particular branch<font color="#E5E5E5"> you would like to be</font>

157
00:07:08,350 --> 00:07:12,400
able<font color="#E5E5E5"> to prove that the branch is indeed</font>

158
00:07:10,120 --> 00:07:15,280
<font color="#E5E5E5">infeasible that it is some bug predicate</font>

159
00:07:12,400 --> 00:07:18,099
or that some return instruction will

160
00:07:15,280 --> 00:07:22,719
always go back<font color="#CCCCCC"> to its color - to the</font>

161
00:07:18,100 --> 00:07:26,740
good return<font color="#CCCCCC"> site</font><font color="#E5E5E5"> even if you are on</font><font color="#CCCCCC"> a</font>

162
00:07:22,720 --> 00:07:28,690
<font color="#CCCCCC">strict</font><font color="#E5E5E5"> wave</font><font color="#CCCCCC"> or if you are some dynamic</font>

163
00:07:26,740 --> 00:07:32,410
<font color="#E5E5E5">zone but you have found all the dynamic</font>

164
00:07:28,690 --> 00:07:34,300
targets<font color="#E5E5E5"> and you can have more this kind</font>

165
00:07:32,410 --> 00:07:37,539
of questioning<font color="#E5E5E5"> where we kind of</font>

166
00:07:34,300 --> 00:07:39,520
<font color="#CCCCCC">obfuscation or schemes but</font><font color="#E5E5E5"> dynamic</font>

167
00:07:37,539 --> 00:07:41,860
symbolic execution and dynamic analysis

168
00:07:39,520 --> 00:07:42,698
by definition<font color="#E5E5E5"> cannot answer to that kind</font>

169
00:07:41,860 --> 00:07:45,130
of question

170
00:07:42,699 --> 00:07:49,030
because it would<font color="#E5E5E5"> require to enumerate</font>

171
00:07:45,130 --> 00:07:51,280
<font color="#E5E5E5">all paths which is infeasible</font><font color="#CCCCCC"> okay so</font>

172
00:07:49,030 --> 00:07:54,309
this is<font color="#CCCCCC"> our challenge we want to</font><font color="#E5E5E5"> design</font>

173
00:07:51,280 --> 00:07:56,619
<font color="#E5E5E5">a tool to check when feasibility</font>

174
00:07:54,310 --> 00:08:00,039
question in obfuscated code and we want

175
00:07:56,620 --> 00:08:01,960
to scan<font color="#CCCCCC"> to real realistic manual size to</font>

176
00:08:00,039 --> 00:08:04,810
be reduced to applications such as

177
00:08:01,960 --> 00:08:06,969
<font color="#CCCCCC">stress modification to be precise and to</font>

178
00:08:04,810 --> 00:08:09,880
be generic<font color="#CCCCCC"> so that we can endure the</font>

179
00:08:06,970 --> 00:08:12,460
world kind of infallibility question so

180
00:08:09,880 --> 00:08:14,200
in the rest<font color="#E5E5E5"> of the talk I will</font><font color="#CCCCCC"> confuse</font>

181
00:08:12,460 --> 00:08:15,940
<font color="#E5E5E5">on a back pocket</font><font color="#CCCCCC"> and stacked on terrain</font>

182
00:08:14,200 --> 00:08:20,469
<font color="#E5E5E5">but the technique can apply to many</font>

183
00:08:15,940 --> 00:08:22,870
other obfuscation schemes<font color="#CCCCCC"> okay</font>

184
00:08:20,470 --> 00:08:25,720
so<font color="#CCCCCC"> a</font><font color="#E5E5E5"> proposal in a free world we call it</font>

185
00:08:22,870 --> 00:08:27,639
<font color="#CCCCCC">back up bondage</font><font color="#E5E5E5"> angle it execution so</font>

186
00:08:25,720 --> 00:08:29,710
the first key insight<font color="#CCCCCC"> is that</font><font color="#E5E5E5"> since we</font>

187
00:08:27,639 --> 00:08:32,169
want to<font color="#E5E5E5"> be very precise and</font><font color="#CCCCCC"> to be able</font>

188
00:08:29,710 --> 00:08:34,329
<font color="#CCCCCC">to</font><font color="#E5E5E5"> reason about</font><font color="#CCCCCC"> mid-level operation</font>

189
00:08:32,169 --> 00:08:36,250
modular arithmetic memory and so on we

190
00:08:34,330 --> 00:08:39,820
need to<font color="#CCCCCC"> us on some very</font><font color="#E5E5E5"> good reasoning</font>

191
00:08:36,250 --> 00:08:41,169
from some logical reasoning<font color="#CCCCCC"> but</font><font color="#E5E5E5"> in</font>

192
00:08:39,820 --> 00:08:43,479
vectors in<font color="#CCCCCC"> somewhere we need to have</font>

193
00:08:41,169 --> 00:08:46,290
some kind of finite path or finite

194
00:08:43,479 --> 00:08:51,640
constraints<font color="#E5E5E5"> find out something somewhere</font>

195
00:08:46,290 --> 00:08:53,380
so this is a problem so actually we can

196
00:08:51,640 --> 00:08:55,300
prove this in facility program by

197
00:08:53,380 --> 00:08:58,900
reasoning<font color="#E5E5E5"> backward in a bounding manner</font>

198
00:08:55,300 --> 00:09:00,800
so if we same facility<font color="#CCCCCC"> webinar of some</font>

199
00:08:58,900 --> 00:09:03,949
kind of legibility condition at some

200
00:09:00,800 --> 00:09:05,959
<font color="#E5E5E5">in the program by going backward</font><font color="#CCCCCC"> we are</font>

201
00:09:03,950 --> 00:09:08,750
just<font color="#E5E5E5"> gathering all the constraint</font><font color="#CCCCCC"> or the</font>

202
00:09:05,959 --> 00:09:12,189
set<font color="#E5E5E5"> of states of predecessors to</font><font color="#CCCCCC"> this</font>

203
00:09:08,750 --> 00:09:19,089
<font color="#CCCCCC">which ability</font><font color="#E5E5E5"> constraints and if at some</font>

204
00:09:12,190 --> 00:09:22,610
<font color="#E5E5E5">step</font><font color="#CCCCCC"> K which resets become empty then</font>

205
00:09:19,089 --> 00:09:24,470
<font color="#CCCCCC">obviously</font><font color="#E5E5E5"> or which ability constraint</font>

206
00:09:22,610 --> 00:09:27,050
has no predecessor and it cannot<font color="#E5E5E5"> be</font>

207
00:09:24,470 --> 00:09:30,410
<font color="#E5E5E5">fulfilled so it is infinite</font><font color="#CCCCCC"> volume so</font>

208
00:09:27,050 --> 00:09:33,019
this<font color="#E5E5E5"> is an effective way</font><font color="#CCCCCC"> to prove vision</font>

209
00:09:30,410 --> 00:09:34,760
feasibility and we have to rely on me on

210
00:09:33,019 --> 00:09:38,480
<font color="#E5E5E5">a finite</font><font color="#CCCCCC"> number of</font><font color="#E5E5E5"> paths actually a</font>

211
00:09:34,760 --> 00:09:40,490
finite number<font color="#CCCCCC"> of suffix so this is very</font>

212
00:09:38,480 --> 00:09:43,310
<font color="#CCCCCC">good</font><font color="#E5E5E5"> because we</font><font color="#CCCCCC"> can use it without your</font>

213
00:09:40,490 --> 00:09:45,470
own solvent and this<font color="#E5E5E5"> is a very efficient</font>

214
00:09:43,310 --> 00:09:47,689
because it it<font color="#E5E5E5"> doesn't depend on some to</font>

215
00:09:45,470 --> 00:09:51,110
a slave or program size that on the

216
00:09:47,690 --> 00:09:54,410
bound<font color="#E5E5E5"> K and</font><font color="#CCCCCC"> we totally of control on</font>

217
00:09:51,110 --> 00:09:56,390
this<font color="#CCCCCC"> body</font><font color="#E5E5E5"> shape</font><font color="#CCCCCC"> okay great but still</font>

218
00:09:54,410 --> 00:09:59,689
there is<font color="#CCCCCC"> a another</font><font color="#E5E5E5"> problem we need</font><font color="#CCCCCC"> to do</font>

219
00:09:56,390 --> 00:10:02,510
some backward reasoning on binary<font color="#E5E5E5"> but</font>

220
00:09:59,690 --> 00:10:04,640
how do<font color="#E5E5E5"> you do that on source code C code</font>

221
00:10:02,510 --> 00:10:06,890
<font color="#E5E5E5">it's quite easy to do backward reasoning</font>

222
00:10:04,640 --> 00:10:09,230
but on binary<font color="#E5E5E5"> code you can have dynamic</font>

223
00:10:06,890 --> 00:10:12,170
jump<font color="#E5E5E5"> you can have encryption</font><font color="#CCCCCC"> you can</font>

224
00:10:09,230 --> 00:10:15,410
obsess modification<font color="#E5E5E5"> it seems to be</font><font color="#CCCCCC"> very</font>

225
00:10:12,170 --> 00:10:17,990
hard<font color="#CCCCCC"> to go backward what does it mean so</font>

226
00:10:15,410 --> 00:10:20,029
this<font color="#E5E5E5"> is the third insight we first start</font>

227
00:10:17,990 --> 00:10:22,190
with<font color="#E5E5E5"> some dynamic partial recovery of</font>

228
00:10:20,029 --> 00:10:24,920
the control<font color="#CCCCCC"> flow graph like a</font><font color="#E5E5E5"> dynamic</font>

229
00:10:22,190 --> 00:10:27,110
analysis it will<font color="#CCCCCC"> sort partially</font><font color="#E5E5E5"> some</font>

230
00:10:24,920 --> 00:10:29,599
part of encryption<font color="#CCCCCC"> such modification</font>

231
00:10:27,110 --> 00:10:32,690
dynamic jump and so on and when we<font color="#CCCCCC"> do</font>

232
00:10:29,600 --> 00:10:35,480
the backward<font color="#E5E5E5"> bonds in resonant and this</font>

233
00:10:32,690 --> 00:10:37,760
bring robustness<font color="#E5E5E5"> to the methods so we</font>

234
00:10:35,480 --> 00:10:40,000
<font color="#CCCCCC">get</font><font color="#E5E5E5"> precision we get efficiency we get</font>

235
00:10:37,760 --> 00:10:42,620
your business<font color="#E5E5E5"> so everything is perfect</font>

236
00:10:40,000 --> 00:10:44,839
<font color="#CCCCCC">obviously things are not so simple</font>

237
00:10:42,620 --> 00:10:48,100
because<font color="#E5E5E5"> in formal verification you</font>

238
00:10:44,839 --> 00:10:50,329
<font color="#E5E5E5">cannot get everything for free so</font>

239
00:10:48,100 --> 00:10:52,579
<font color="#CCCCCC">operable is</font><font color="#E5E5E5"> that we got both false</font>

240
00:10:50,329 --> 00:10:54,800
negative and<font color="#E5E5E5"> false positive so we</font>

241
00:10:52,579 --> 00:10:56,899
typically<font color="#CCCCCC"> are</font><font color="#E5E5E5"> false negative</font><font color="#CCCCCC"> we because</font>

242
00:10:54,800 --> 00:11:00,019
we are from<font color="#CCCCCC"> that one bonded with a bound</font>

243
00:10:56,899 --> 00:11:03,560
of reasoning so basically we can<font color="#E5E5E5"> leave</font>

244
00:11:00,019 --> 00:11:05,899
some<font color="#CCCCCC"> in feasibility proof because if the</font>

245
00:11:03,560 --> 00:11:09,560
<font color="#CCCCCC">boundary is too small we will not gather</font>

246
00:11:05,899 --> 00:11:11,600
enough constraints to understand<font color="#E5E5E5"> but the</font>

247
00:11:09,560 --> 00:11:12,498
set of predecessor is<font color="#E5E5E5"> empty</font><font color="#CCCCCC"> in some way</font>

248
00:11:11,600 --> 00:11:15,529
we we need

249
00:11:12,499 --> 00:11:17,059
<font color="#CCCCCC">confirmed if monstrance</font><font color="#E5E5E5"> okay within the</font>

250
00:11:15,529 --> 00:11:20,479
usual<font color="#CCCCCC"> trade off of this kind of</font>

251
00:11:17,059 --> 00:11:22,999
reasoning<font color="#E5E5E5"> so the</font><font color="#CCCCCC"> usual solution is to</font>

252
00:11:20,479 --> 00:11:25,639
<font color="#E5E5E5">increase game it is more</font><font color="#CCCCCC"> expensive but</font>

253
00:11:22,999 --> 00:11:27,829
you<font color="#CCCCCC"> prove more</font><font color="#E5E5E5"> things but here we</font><font color="#CCCCCC"> can</font>

254
00:11:25,639 --> 00:11:30,949
also<font color="#E5E5E5"> have a</font><font color="#CCCCCC"> false positive so this is</font>

255
00:11:27,829 --> 00:11:33,108
more original<font color="#CCCCCC"> so</font><font color="#E5E5E5"> it means that we can</font>

256
00:11:30,949 --> 00:11:35,029
move<font color="#CCCCCC"> we</font><font color="#E5E5E5"> left at infinity</font><font color="#CCCCCC"> why that</font>

257
00:11:33,109 --> 00:11:37,489
because the control flow graph can be

258
00:11:35,029 --> 00:11:40,969
<font color="#CCCCCC">too</font><font color="#E5E5E5"> partial and in some way we will</font><font color="#CCCCCC"> make</font>

259
00:11:37,489 --> 00:11:43,689
some civics<font color="#E5E5E5"> and it's kind of missing</font>

260
00:11:40,969 --> 00:11:46,609
some<font color="#CCCCCC"> guarantees constraints so we</font><font color="#E5E5E5"> can</font>

261
00:11:43,689 --> 00:11:49,459
prove that<font color="#E5E5E5"> something is empty just</font>

262
00:11:46,609 --> 00:11:52,789
because we<font color="#E5E5E5"> don't</font><font color="#CCCCCC"> have we have missed</font>

263
00:11:49,459 --> 00:11:54,888
<font color="#CCCCCC">some awesome surfing's so</font><font color="#E5E5E5"> your view is</font>

264
00:11:52,789 --> 00:11:58,279
an interplay<font color="#E5E5E5"> which is a bit problematic</font>

265
00:11:54,889 --> 00:12:02,269
because if we increase K too much in

266
00:11:58,279 --> 00:12:04,789
<font color="#E5E5E5">some way we risk to</font><font color="#CCCCCC"> a sincere G which is</font>

267
00:12:02,269 --> 00:12:06,859
far too partial<font color="#CCCCCC"> and then we will</font>

268
00:12:04,789 --> 00:12:10,459
<font color="#E5E5E5">decrease</font><font color="#CCCCCC"> five-</font><font color="#E5E5E5"> but increase false</font>

269
00:12:06,859 --> 00:12:13,219
<font color="#E5E5E5">positive okay but the technique of</font>

270
00:12:10,459 --> 00:12:15,559
solute so we still<font color="#CCCCCC"> want to</font><font color="#E5E5E5"> to</font><font color="#CCCCCC"> add</font><font color="#E5E5E5"> it and</font>

271
00:12:13,219 --> 00:12:18,079
<font color="#CCCCCC">to make it practical so we</font><font color="#E5E5E5"> don't have</font>

272
00:12:15,559 --> 00:12:20,929
beautiful terrain budget but at least we

273
00:12:18,079 --> 00:12:24,378
<font color="#E5E5E5">do</font><font color="#CCCCCC"> a some</font><font color="#E5E5E5"> control experimental</font><font color="#CCCCCC"> in gluten</font>

274
00:12:20,929 --> 00:12:27,139
<font color="#E5E5E5">truth so that we can check that in</font>

275
00:12:24,379 --> 00:12:30,289
practice<font color="#E5E5E5"> we are very low rate</font><font color="#CCCCCC"> of false</font>

276
00:12:27,139 --> 00:12:33,349
positive and false negative<font color="#E5E5E5"> and actually</font>

277
00:12:30,289 --> 00:12:34,939
<font color="#CCCCCC">weather so</font><font color="#E5E5E5"> that is a CFG complete and</font>

278
00:12:33,349 --> 00:12:38,749
not<font color="#E5E5E5"> partial when we don't have any false</font>

279
00:12:34,939 --> 00:12:40,969
positive<font color="#CCCCCC"> ok so we</font><font color="#E5E5E5"> have done three kind</font>

280
00:12:38,749 --> 00:12:43,429
<font color="#E5E5E5">of experimental evaluation so some</font>

281
00:12:40,970 --> 00:12:45,739
<font color="#E5E5E5">control experiments with</font><font color="#CCCCCC"> grunge off to</font>

282
00:12:43,429 --> 00:12:47,749
assess the position of the method<font color="#E5E5E5"> some</font>

283
00:12:45,739 --> 00:12:49,819
logical experiments<font color="#E5E5E5"> and patches to</font>

284
00:12:47,749 --> 00:12:51,589
assess the<font color="#E5E5E5"> scalability and robustness of</font>

285
00:12:49,819 --> 00:12:53,149
the<font color="#E5E5E5"> methods and the</font><font color="#CCCCCC"> tested on the</font>

286
00:12:51,589 --> 00:12:58,339
external malware to assess the

287
00:12:53,149 --> 00:13:00,319
usefulness of<font color="#E5E5E5"> the net so</font><font color="#CCCCCC"> briefly for</font>

288
00:12:58,339 --> 00:13:02,659
control experiments we have taken<font color="#E5E5E5"> some</font>

289
00:13:00,319 --> 00:13:06,649
<font color="#CCCCCC">obvious open source</font><font color="#E5E5E5"> application tools so</font>

290
00:13:02,659 --> 00:13:09,769
that<font color="#CCCCCC"> we can</font><font color="#E5E5E5"> clearly have control on the</font>

291
00:13:06,649 --> 00:13:11,719
kind<font color="#E5E5E5"> of obfuscation which are inserted</font>

292
00:13:09,769 --> 00:13:13,279
and<font color="#CCCCCC"> we perfectly know where</font><font color="#E5E5E5"> or</font>

293
00:13:11,719 --> 00:13:15,190
<font color="#E5E5E5">discussion are and where they</font><font color="#CCCCCC"> are not</font>

294
00:13:13,279 --> 00:13:17,350
and

295
00:13:15,190 --> 00:13:19,390
we check for<font color="#CCCCCC"> back</font><font color="#E5E5E5"> predicates and</font><font color="#CCCCCC"> spec</font>

296
00:13:17,350 --> 00:13:21,520
<font color="#E5E5E5">tampering so typically for back</font>

297
00:13:19,390 --> 00:13:24,250
<font color="#CCCCCC">predicates with a point with a value of</font>

298
00:13:21,520 --> 00:13:28,750
<font color="#E5E5E5">the point of 16 we get some error ratio</font>

299
00:13:24,250 --> 00:13:30,910
of 3.5 percent and no<font color="#CCCCCC"> first- and this</font><font color="#E5E5E5"> is</font>

300
00:13:28,750 --> 00:13:33,940
<font color="#E5E5E5">quite reduced to the</font><font color="#CCCCCC"> bunker basically we</font>

301
00:13:30,910 --> 00:13:38,290
born<font color="#CCCCCC"> between</font><font color="#E5E5E5"> 8 and 30</font><font color="#CCCCCC"> wizards are very</font>

302
00:13:33,940 --> 00:13:40,470
good up to 15<font color="#E5E5E5"> it's still 50s</font><font color="#CCCCCC"> still</font><font color="#E5E5E5"> quite</font>

303
00:13:38,290 --> 00:13:44,079
decent<font color="#CCCCCC"> and</font><font color="#E5E5E5"> it's very efficient with a</font>

304
00:13:40,470 --> 00:13:46,660
0.0 that second per query and we also

305
00:13:44,080 --> 00:13:48,850
very good result inspector purring so

306
00:13:46,660 --> 00:13:51,640
interview<font color="#E5E5E5"> this control experiment on one</font>

307
00:13:48,850 --> 00:13:56,940
for valuable that the technique is<font color="#CCCCCC"> very</font>

308
00:13:51,640 --> 00:13:59,410
precise in practice<font color="#CCCCCC"> concerning</font><font color="#E5E5E5"> peckers</font>

309
00:13:56,940 --> 00:14:02,220
<font color="#CCCCCC">well</font><font color="#E5E5E5"> we could</font><font color="#CCCCCC"> also Packers are</font>

310
00:13:59,410 --> 00:14:04,600
legitimate software protection<font color="#CCCCCC"> tools</font>

311
00:14:02,220 --> 00:14:07,000
<font color="#CCCCCC">they are</font><font color="#E5E5E5"> very representative of</font>

312
00:14:04,600 --> 00:14:10,210
state-of-the-art<font color="#E5E5E5"> protection basically</font>

313
00:14:07,000 --> 00:14:12,460
<font color="#E5E5E5">four basic malware Packers of salt line</font>

314
00:14:10,210 --> 00:14:14,470
of<font color="#E5E5E5"> defense and they combine many</font>

315
00:14:12,460 --> 00:14:16,330
techniques you can have sex modification

316
00:14:14,470 --> 00:14:18,880
and clip<font color="#CCCCCC"> shown a pack</font><font color="#E5E5E5"> predicate and so</font>

317
00:14:16,330 --> 00:14:22,170
on so<font color="#E5E5E5"> our</font><font color="#CCCCCC"> experiment</font><font color="#E5E5E5"> show that the</font>

318
00:14:18,880 --> 00:14:26,050
<font color="#E5E5E5">technique scale</font><font color="#CCCCCC"> and significant raise</font>

319
00:14:22,170 --> 00:14:28,209
<font color="#CCCCCC">its</font><font color="#E5E5E5"> colossal</font><font color="#CCCCCC"> on a</font><font color="#E5E5E5"> very realistic</font>

320
00:14:26,050 --> 00:14:29,709
protection so all the backers<font color="#CCCCCC"> are</font>

321
00:14:28,210 --> 00:14:32,860
mentioning here are combining<font color="#E5E5E5"> size</font>

322
00:14:29,710 --> 00:14:35,740
magnification and<font color="#E5E5E5"> over protection</font><font color="#CCCCCC"> we're</font>

323
00:14:32,860 --> 00:14:39,550
interested in and we managed<font color="#CCCCCC"> to find</font>

324
00:14:35,740 --> 00:14:41,650
some<font color="#E5E5E5"> time many of back predicate or many</font>

325
00:14:39,550 --> 00:14:43,569
interesting facts on caustic contouring

326
00:14:41,650 --> 00:14:45,699
<font color="#E5E5E5">on this example showing that the</font>

327
00:14:43,570 --> 00:14:50,860
technique<font color="#E5E5E5"> on realistic condition can</font>

328
00:14:45,700 --> 00:14:54,730
find our useful things finally<font color="#E5E5E5"> the study</font>

329
00:14:50,860 --> 00:14:56,710
of external malware which is part of the

330
00:14:54,730 --> 00:15:01,510
acting tools that were used<font color="#E5E5E5"> for virgin</font>

331
00:14:56,710 --> 00:15:04,600
see GNC<font color="#CCCCCC"> AK</font><font color="#E5E5E5"> on the</font><font color="#CCCCCC"> last</font><font color="#E5E5E5"> fall</font><font color="#CCCCCC"> we got two</font>

332
00:15:01,510 --> 00:15:07,750
already obfuscated samples from this

333
00:15:04,600 --> 00:15:09,490
<font color="#E5E5E5">external malware with a quick manual</font>

334
00:15:07,750 --> 00:15:12,100
inspection it turned out<font color="#E5E5E5"> that there were</font>

335
00:15:09,490 --> 00:15:14,290
many attack predicates<font color="#CCCCCC"> in ramen so all</font>

336
00:15:12,100 --> 00:15:16,570
those<font color="#E5E5E5"> words to detect and remove as much</font>

337
00:15:14,290 --> 00:15:19,900
as this protection<font color="#E5E5E5"> that</font><font color="#CCCCCC"> we can by using</font>

338
00:15:16,570 --> 00:15:22,750
a<font color="#E5E5E5"> technique we were well to identify 50%</font>

339
00:15:19,900 --> 00:15:24,310
<font color="#CCCCCC">of</font><font color="#E5E5E5"> the</font><font color="#CCCCCC"> code that's produce</font><font color="#E5E5E5"> in a foodie</font>

340
00:15:22,750 --> 00:15:27,010
automatic manner and in less than<font color="#E5E5E5"> three</font>

341
00:15:24,310 --> 00:15:29,319
hours<font color="#E5E5E5"> when with the produce produced</font>

342
00:15:27,010 --> 00:15:31,870
some<font color="#CCCCCC"> of</font><font color="#E5E5E5"> the code was dead</font>

343
00:15:29,320 --> 00:15:35,020
<font color="#CCCCCC">because of a backpack aid and some</font><font color="#E5E5E5"> of</font>

344
00:15:31,870 --> 00:15:37,870
the<font color="#E5E5E5"> goods were was only used to compute</font>

345
00:15:35,020 --> 00:15:40,420
a<font color="#CCCCCC"> bag predicate so it was</font><font color="#E5E5E5"> totally</font>

346
00:15:37,870 --> 00:15:43,120
useless<font color="#E5E5E5"> so after that we are able</font><font color="#CCCCCC"> to</font>

347
00:15:40,420 --> 00:15:46,000
pinpoint in the code where this<font color="#E5E5E5"> produce</font>

348
00:15:43,120 --> 00:15:48,930
<font color="#E5E5E5">instruction are and so for example of a</font>

349
00:15:46,000 --> 00:15:52,240
first sample from a code which has

350
00:15:48,930 --> 00:15:57,130
<font color="#E5E5E5">500,000</font><font color="#CCCCCC"> lower instruction we can see</font>

351
00:15:52,240 --> 00:16:01,090
that only<font color="#CCCCCC"> 2018 280,000 instruction are</font>

352
00:15:57,130 --> 00:16:03,480
indeed useful so<font color="#E5E5E5"> we know this was</font>

353
00:16:01,090 --> 00:16:07,450
considered<font color="#E5E5E5"> as a clear success</font><font color="#CCCCCC"> of an</font>

354
00:16:03,480 --> 00:16:09,460
application<font color="#E5E5E5"> of an</font><font color="#CCCCCC"> effort a quick</font>

355
00:16:07,450 --> 00:16:10,930
description<font color="#E5E5E5"> of potential control module</font>

356
00:16:09,460 --> 00:16:14,950
<font color="#CCCCCC">to our approach and potentially</font>

357
00:16:10,930 --> 00:16:17,469
medication<font color="#CCCCCC"> too so the first natural</font>

358
00:16:14,950 --> 00:16:19,750
attack against<font color="#CCCCCC"> a technique is to try to</font>

359
00:16:17,470 --> 00:16:25,090
<font color="#CCCCCC">have long dependency chains</font><font color="#E5E5E5"> to try to</font>

360
00:16:19,750 --> 00:16:27,250
event about<font color="#E5E5E5"> them first</font><font color="#CCCCCC"> the thing is we</font>

361
00:16:25,090 --> 00:16:29,230
do not require<font color="#E5E5E5"> we do not always require</font>

362
00:16:27,250 --> 00:16:31,450
<font color="#E5E5E5">to</font><font color="#CCCCCC"> have a version of dependency to be</font>

363
00:16:29,230 --> 00:16:35,290
able<font color="#E5E5E5"> to conclude</font><font color="#CCCCCC"> UN satisfiability for</font>

364
00:16:31,450 --> 00:16:38,950
example in the external malware there is

365
00:16:35,290 --> 00:16:41,650
some dependency of<font color="#E5E5E5"> length 230</font><font color="#CCCCCC"> something</font>

366
00:16:38,950 --> 00:16:44,410
and we can determine feasibility while

367
00:16:41,650 --> 00:16:47,230
<font color="#CCCCCC">our bound is</font><font color="#E5E5E5"> only 16 so we don't always</font>

368
00:16:44,410 --> 00:16:49,449
need<font color="#CCCCCC"> to call all the dependency</font><font color="#E5E5E5"> so don't</font>

369
00:16:47,230 --> 00:16:51,430
I think<font color="#CCCCCC"> a</font><font color="#E5E5E5"> very good mitigation again</font>

370
00:16:49,450 --> 00:16:53,589
that is to use a more flexible notion of

371
00:16:51,430 --> 00:16:56,170
bound not<font color="#CCCCCC"> based on control</font><font color="#E5E5E5"> flow but for</font>

372
00:16:53,589 --> 00:16:58,270
example<font color="#CCCCCC"> data dependency formula size</font>

373
00:16:56,170 --> 00:17:00,520
complexity or<font color="#E5E5E5"> things like</font><font color="#CCCCCC"> that so</font>

374
00:16:58,270 --> 00:17:02,170
<font color="#CCCCCC">together with simplification of a</font>

375
00:17:00,520 --> 00:17:04,900
formula size I think<font color="#CCCCCC"> it's a very</font><font color="#E5E5E5"> good</font>

376
00:17:02,170 --> 00:17:08,220
mitigation<font color="#CCCCCC"> when you can also insert many</font>

377
00:17:04,900 --> 00:17:10,780
artists or<font color="#E5E5E5"> predicates in your in your</font>

378
00:17:08,220 --> 00:17:12,579
obfuscation screen because basically

379
00:17:10,780 --> 00:17:17,410
when<font color="#E5E5E5"> you add some time out we don't know</font>

380
00:17:12,579 --> 00:17:19,030
what to do with it but the thing is

381
00:17:17,410 --> 00:17:19,959
<font color="#CCCCCC">without technique we don't have a</font><font color="#E5E5E5"> normal</font>

382
00:17:19,030 --> 00:17:22,839
<font color="#CCCCCC">time</font><font color="#E5E5E5"> out</font>

383
00:17:19,959 --> 00:17:25,390
so<font color="#E5E5E5"> already</font><font color="#CCCCCC"> declarer</font><font color="#E5E5E5"> triggering</font><font color="#CCCCCC"> data</font>

384
00:17:22,839 --> 00:17:29,379
<font color="#CCCCCC">and/or time out already give us some</font>

385
00:17:25,390 --> 00:17:31,450
insight and then we can for example<font color="#E5E5E5"> it</font>

386
00:17:29,380 --> 00:17:33,200
can give<font color="#E5E5E5"> us</font><font color="#CCCCCC"> an</font><font color="#E5E5E5"> opportunity for example</font>

387
00:17:31,450 --> 00:17:35,090
to find<font color="#E5E5E5"> infeasible patterns to</font>

388
00:17:33,200 --> 00:17:38,419
and the technique by<font color="#CCCCCC"> pattern-matching</font>

389
00:17:35,090 --> 00:17:40,760
<font color="#E5E5E5">and then we</font><font color="#CCCCCC"> cannot comment</font><font color="#E5E5E5"> on TV</font><font color="#CCCCCC"> i Namek</font>

390
00:17:38,419 --> 00:17:44,870
tricks<font color="#E5E5E5"> but we can also use a stone the</font>

391
00:17:40,760 --> 00:17:47,600
appropriate mitigation<font color="#E5E5E5"> so basically this</font>

392
00:17:44,870 --> 00:17:50,330
is<font color="#E5E5E5"> the respect of yard we push the</font>

393
00:17:47,600 --> 00:17:54,260
<font color="#E5E5E5">harmless cover so</font><font color="#CCCCCC"> that we write</font><font color="#E5E5E5"> about</font>

394
00:17:50,330 --> 00:17:56,449
<font color="#E5E5E5">for our designers so the conclusion and</font>

395
00:17:54,260 --> 00:17:58,010
take<font color="#E5E5E5"> away what has been done we identify</font>

396
00:17:56,450 --> 00:17:59,720
this<font color="#CCCCCC"> in credibility question as a</font>

397
00:17:58,010 --> 00:18:01,940
<font color="#CCCCCC">blind-spot of current automatic</font>

398
00:17:59,720 --> 00:18:03,919
duplication techniques we propose an

399
00:18:01,940 --> 00:18:06,019
efficient<font color="#CCCCCC"> or distant precise method for</font>

400
00:18:03,919 --> 00:18:08,840
solving them and we propose control

401
00:18:06,019 --> 00:18:10,639
experiments and our<font color="#CCCCCC"> case studies we</font>

402
00:18:08,840 --> 00:18:12,168
think that semantic analysis can change

403
00:18:10,639 --> 00:18:13,879
regaining the fish station as<font color="#CCCCCC"> it</font>

404
00:18:12,169 --> 00:18:15,620
complement existing approach and it

405
00:18:13,880 --> 00:18:19,190
opened the<font color="#CCCCCC"> way to fruitful combination</font>

406
00:18:15,620 --> 00:18:20,840
between static<font color="#E5E5E5"> dynamic and symbolic it</font>

407
00:18:19,190 --> 00:18:23,539
turns out that formal<font color="#E5E5E5"> method can be</font>

408
00:18:20,840 --> 00:18:25,939
<font color="#E5E5E5">useful for malware which by this</font>

409
00:18:23,539 --> 00:18:28,250
trenchcoat angle<font color="#CCCCCC"> complexity</font><font color="#E5E5E5"> but they</font>

410
00:18:25,940 --> 00:18:31,100
will<font color="#E5E5E5"> be strongly adaptive you need</font><font color="#CCCCCC"> what</font>

411
00:18:28,250 --> 00:18:33,080
<font color="#E5E5E5">the space and scalability in occurs we</font>

412
00:18:31,100 --> 00:18:35,240
achieve this by<font color="#E5E5E5"> accepting to both</font>

413
00:18:33,080 --> 00:18:37,939
correctness<font color="#E5E5E5"> and completeness but in a</font>

414
00:18:35,240 --> 00:18:39,950
very controlled way<font color="#E5E5E5"> and this wizard have</font>

415
00:18:37,940 --> 00:18:41,600
been implemented into<font color="#CCCCCC"> the</font><font color="#E5E5E5"> basic platform</font>

416
00:18:39,950 --> 00:18:44,620
and were looking for collaboration and

417
00:18:41,600 --> 00:18:49,620
user thank

418
00:18:44,620 --> 00:18:58,928
[Applause]

419
00:18:49,620 --> 00:19:02,590
<font color="#CCCCCC">are many questions here amongst you from</font>

420
00:18:58,929 --> 00:19:06,549
Penn State<font color="#CCCCCC"> a very good</font><font color="#E5E5E5"> job</font><font color="#CCCCCC"> I see you</font>

421
00:19:02,590 --> 00:19:09,850
mentioned<font color="#E5E5E5"> I'll predicate so I see you</font>

422
00:19:06,549 --> 00:19:12,299
handle<font color="#CCCCCC"> all those quick predicates that</font><font color="#E5E5E5"> I</font>

423
00:19:09,850 --> 00:19:15,580
always<font color="#E5E5E5"> evaluated to true or false right</font>

424
00:19:12,299 --> 00:19:18,129
yeah so as far<font color="#CCCCCC"> as I know there are also</font>

425
00:19:15,580 --> 00:19:21,520
other<font color="#CCCCCC"> kinds of</font><font color="#E5E5E5"> all paper</font><font color="#CCCCCC"> voting</font>

426
00:19:18,130 --> 00:19:23,890
<font color="#CCCCCC">predicates</font><font color="#E5E5E5"> in different execution the</font>

427
00:19:21,520 --> 00:19:26,799
<font color="#E5E5E5">predicate itself can be evaluated</font><font color="#CCCCCC"> to</font>

428
00:19:23,890 --> 00:19:29,440
different<font color="#E5E5E5"> values</font><font color="#CCCCCC"> so can you handle those</font>

429
00:19:26,799 --> 00:19:31,840
<font color="#CCCCCC">cases or can provide some clues</font><font color="#E5E5E5"> to</font>

430
00:19:29,440 --> 00:19:33,549
detect them<font color="#CCCCCC"> I am sorry I don't</font>

431
00:19:31,840 --> 00:19:36,428
understand<font color="#CCCCCC"> where your</font><font color="#E5E5E5"> question could you</font>

432
00:19:33,549 --> 00:19:38,520
speak a bit<font color="#CCCCCC"> louder</font><font color="#E5E5E5"> please what could you</font>

433
00:19:36,429 --> 00:19:45,070
speak a<font color="#E5E5E5"> bit louder please</font>

434
00:19:38,520 --> 00:19:48,730
<font color="#E5E5E5">okay so I mean those are other kind of</font>

435
00:19:45,070 --> 00:19:50,639
dynamical predicates<font color="#E5E5E5"> which the value</font>

436
00:19:48,730 --> 00:19:55,960
itself can be different in different

437
00:19:50,640 --> 00:19:59,770
<font color="#E5E5E5">executions so</font><font color="#CCCCCC"> can your tour handle those</font>

438
00:19:55,960 --> 00:20:01,690
and also<font color="#CCCCCC"> predicates</font><font color="#E5E5E5"> yeah</font><font color="#CCCCCC"> basically there</font>

439
00:19:59,770 --> 00:20:03,910
are other ways<font color="#CCCCCC"> to make a</font><font color="#E5E5E5"> pact predicates</font>

440
00:20:01,690 --> 00:20:06,940
<font color="#E5E5E5">like for example here we</font><font color="#CCCCCC"> consider mostly</font>

441
00:20:03,910 --> 00:20:09,669
arithmetics<font color="#E5E5E5"> predicates which are we just</font>

442
00:20:06,940 --> 00:20:11,530
<font color="#E5E5E5">one</font><font color="#CCCCCC"> for techniques</font><font color="#E5E5E5"> but you can also for</font>

443
00:20:09,669 --> 00:20:14,140
example<font color="#E5E5E5"> attack predicates which are</font>

444
00:20:11,530 --> 00:20:16,350
built on which take advantage<font color="#CCCCCC"> of</font>

445
00:20:14,140 --> 00:20:18,429
somewhat afraid<font color="#E5E5E5"> of thinking like that</font>

446
00:20:16,350 --> 00:20:19,990
<font color="#E5E5E5">inverted it's more difficult</font><font color="#CCCCCC"> to know</font>

447
00:20:18,429 --> 00:20:24,970
technique because of the symbolic

448
00:20:19,990 --> 00:20:27,790
reasoning does important that does it

449
00:20:24,970 --> 00:20:30,330
answer<font color="#E5E5E5"> to your question yeah kind of</font>

450
00:20:27,790 --> 00:20:30,330
thank you

451
00:20:31,709 --> 00:20:36,749
hello good<font color="#E5E5E5"> talk I'm turning from</font>

452
00:20:33,779 --> 00:20:39,659
Microsoft<font color="#E5E5E5"> one question so if you are a</font>

453
00:20:36,749 --> 00:20:45,989
<font color="#CCCCCC">Miller writer how are you going</font><font color="#E5E5E5"> to</font><font color="#CCCCCC"> fit</font>

454
00:20:39,659 --> 00:20:46,759
your<font color="#E5E5E5"> own</font><font color="#CCCCCC"> deification</font><font color="#E5E5E5"> tool</font><font color="#CCCCCC"> what some ha</font>

455
00:20:45,989 --> 00:20:50,099
<font color="#CCCCCC">ha</font>

456
00:20:46,759 --> 00:20:53,149
here you are sort<font color="#E5E5E5"> of work right</font><font color="#CCCCCC"> okay so</font>

457
00:20:50,099 --> 00:20:56,070
there are<font color="#CCCCCC"> more details in the</font><font color="#E5E5E5"> paper so I</font>

458
00:20:53,149 --> 00:20:57,988
<font color="#E5E5E5">think these are quite interesting ways</font>

459
00:20:56,070 --> 00:20:59,968
of<font color="#E5E5E5"> seeing your how</font><font color="#CCCCCC"> two different</font>

460
00:20:57,989 --> 00:21:03,259
techniques<font color="#E5E5E5"> there is also some quite</font>

461
00:20:59,969 --> 00:21:05,179
recent paper by your ballet school and

462
00:21:03,259 --> 00:21:08,579
by<font color="#E5E5E5"> submission</font>

463
00:21:05,179 --> 00:21:14,129
<font color="#CCCCCC">Manasquan Doughboy at the exact this you</font>

464
00:21:08,579 --> 00:21:16,559
know last<font color="#E5E5E5"> year where we</font><font color="#CCCCCC"> are</font><font color="#E5E5E5"> from the</font>

465
00:21:14,129 --> 00:21:21,029
study of how defeating somebody<font color="#CCCCCC"> Kings</font>

466
00:21:16,559 --> 00:21:23,070
equation for<font color="#CCCCCC"> widows so they consider the</font>

467
00:21:21,029 --> 00:21:24,719
<font color="#CCCCCC">standoff forward America execution but</font><font color="#E5E5E5"> I</font>

468
00:21:23,070 --> 00:21:27,408
think most of the<font color="#CCCCCC"> techniques may be</font>

469
00:21:24,719 --> 00:21:30,719
useful in<font color="#E5E5E5"> the context of this work</font><font color="#CCCCCC"> but</font>

470
00:21:27,409 --> 00:21:33,570
<font color="#E5E5E5">clearly we still need to think we don't</font>

471
00:21:30,719 --> 00:21:36,299
<font color="#E5E5E5">always agree with Sebastian</font><font color="#CCCCCC"> on what what</font>

472
00:21:33,570 --> 00:21:38,609
can<font color="#CCCCCC"> be well</font><font color="#E5E5E5"> what can be done or</font><font color="#CCCCCC"> not so</font>

473
00:21:36,299 --> 00:21:41,450
clearly the<font color="#E5E5E5"> cat-and-mouse game is still</font>

474
00:21:38,609 --> 00:21:44,820
<font color="#E5E5E5">going on and we need to push it further</font>

475
00:21:41,450 --> 00:21:47,700
so have using any like Miller samples

476
00:21:44,820 --> 00:21:51,208
the the tool cannot give us<font color="#E5E5E5"> the</font><font color="#CCCCCC"> office</font>

477
00:21:47,700 --> 00:21:53,309
<font color="#CCCCCC">Cape oh you know the problem with the</font>

478
00:21:51,209 --> 00:21:55,859
<font color="#CCCCCC">office occasion is</font><font color="#E5E5E5"> always you never</font>

479
00:21:53,309 --> 00:21:58,229
ready<font color="#E5E5E5"> no it's already do press K to a</font>

480
00:21:55,859 --> 00:22:00,299
<font color="#CCCCCC">malware or</font><font color="#E5E5E5"> not what we can do is that</font>

481
00:21:58,229 --> 00:22:04,559
when the tool<font color="#E5E5E5"> pinpoints on a back pocket</font>

482
00:22:00,299 --> 00:22:07,889
<font color="#CCCCCC">then we can go and see and</font><font color="#E5E5E5"> notice this</font>

483
00:22:04,559 --> 00:22:10,428
is<font color="#E5E5E5"> ready on a back pocket or not</font><font color="#CCCCCC"> but you</font>

484
00:22:07,889 --> 00:22:13,349
can have<font color="#E5E5E5"> also many other kind of</font>

485
00:22:10,429 --> 00:22:14,879
protection and if you are totally<font color="#E5E5E5"> not a</font>

486
00:22:13,349 --> 00:22:18,869
well the<font color="#E5E5E5"> kind of protection may be able</font>

487
00:22:14,879 --> 00:22:21,199
<font color="#CCCCCC">to</font><font color="#E5E5E5"> just miss a panel some something okay</font>

488
00:22:18,869 --> 00:22:23,980
I'd<font color="#E5E5E5"> like to talk to the offline thanks</font>

489
00:22:21,200 --> 00:22:25,880
thank the speaker<font color="#CCCCCC"> again</font>

490
00:22:23,980 --> 00:22:28,880
[Applause]

491
00:22:25,880 --> 00:22:28,880
and

