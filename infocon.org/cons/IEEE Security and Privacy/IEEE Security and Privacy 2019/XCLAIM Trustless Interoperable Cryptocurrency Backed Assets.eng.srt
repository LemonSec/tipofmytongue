1
00:00:09,110 --> 00:00:13,750
okay cool

2
00:00:11,830 --> 00:00:14,950
name's Alex a I'm a busy student at the

3
00:00:13,750 --> 00:00:15,680
Imperial College in London and a

4
00:00:14,950 --> 00:00:17,530
researcher

5
00:00:15,680 --> 00:00:19,550
research and today I'll be talking about

6
00:00:17,530 --> 00:00:20,900
exclaim a new approach towards

7
00:00:19,550 --> 00:00:24,110
blockchain to probability with

8
00:00:20,900 --> 00:00:25,549
cryptocurrency backed assets now this is

9
00:00:24,110 --> 00:00:26,900
what joint work with people from the

10
00:00:25,550 --> 00:00:29,000
imperial college lab for cryptocurrency

11
00:00:26,900 --> 00:00:31,459
research engineering and Domenic is

12
00:00:29,000 --> 00:00:33,170
showing the audience as well so the

13
00:00:31,460 --> 00:00:34,820
motivation behind this research is quite

14
00:00:33,170 --> 00:00:36,500
simple there exist over 2,000

15
00:00:34,820 --> 00:00:38,510
cryptocurrencies which different design

16
00:00:36,500 --> 00:00:40,550
and purpose and what we would like to

17
00:00:38,510 --> 00:00:43,550
achieve is trustless and scalable cross

18
00:00:40,550 --> 00:00:45,440
chain communication now I think we can

19
00:00:43,550 --> 00:00:46,760
all agree to some extent that the

20
00:00:45,440 --> 00:00:48,890
history of theft and loss that we've

21
00:00:46,760 --> 00:00:50,989
seen in cryptocurrencies and Bitcoin is

22
00:00:48,890 --> 00:00:53,329
mostly related to centralized providers

23
00:00:50,989 --> 00:00:54,739
and as a character movement recently so

24
00:00:53,329 --> 00:00:56,960
called the centralized exchanges have

25
00:00:54,739 --> 00:00:58,489
appeared now while I should not discuss

26
00:00:56,960 --> 00:01:00,320
their security and trust assumptions

27
00:00:58,489 --> 00:01:01,459
what we do know is that the account for

28
00:01:00,320 --> 00:01:04,459
a very small fraction of the overall

29
00:01:01,460 --> 00:01:06,800
volume and they don't operate cross

30
00:01:04,459 --> 00:01:10,339
chain so most of these systems actually

31
00:01:06,800 --> 00:01:14,060
only offer trades on years of 0 C 20

32
00:01:10,340 --> 00:01:15,470
tokens on aetherium now atomic cross

33
00:01:14,060 --> 00:01:16,759
chains flops using hash time lock

34
00:01:15,470 --> 00:01:19,820
contracts has been have been around

35
00:01:16,759 --> 00:01:21,770
since 2012 and we've heard about how he

36
00:01:19,820 --> 00:01:24,080
chose his work but the challenges that

37
00:01:21,770 --> 00:01:25,880
we have here is that both users or all

38
00:01:24,080 --> 00:01:27,560
users who interact in the swap must be

39
00:01:25,880 --> 00:01:30,289
online throughout the entire trading

40
00:01:27,560 --> 00:01:31,460
protocol and the most monitor of block

41
00:01:30,290 --> 00:01:33,439
chains throughout the entire trading

42
00:01:31,460 --> 00:01:35,089
protocol as well furthermore they must

43
00:01:33,439 --> 00:01:36,589
establish out of bound channels before

44
00:01:35,090 --> 00:01:38,780
each swap because they need to exchange

45
00:01:36,590 --> 00:01:40,490
so clarification transactions without

46
00:01:38,780 --> 00:01:42,080
these certification transactions funds

47
00:01:40,490 --> 00:01:43,339
could be lost and locked up and

48
00:01:42,080 --> 00:01:44,780
definitely if one of the two parties

49
00:01:43,340 --> 00:01:47,930
crashes at the wrong time

50
00:01:44,780 --> 00:01:49,939
and another more usable aspect of this

51
00:01:47,930 --> 00:01:52,729
is that we don't really have a standard

52
00:01:49,939 --> 00:01:53,600
for hoc contracts even in Bitcoin there

53
00:01:52,729 --> 00:01:55,340
are different ways that we could

54
00:01:53,600 --> 00:01:56,990
construct the scripts and across block

55
00:01:55,340 --> 00:01:58,250
chains it makes quite difficult for

56
00:01:56,990 --> 00:02:01,810
developers and implications to

57
00:01:58,250 --> 00:02:03,890
seamlessly integrate them now

58
00:02:01,810 --> 00:02:06,290
cryptocurrency backed assets for a lower

59
00:02:03,890 --> 00:02:08,660
quite simple idea what we want to do is

60
00:02:06,290 --> 00:02:10,399
we lock up some coins an explosion a or

61
00:02:08,660 --> 00:02:12,290
in Bitcoin as we using this example and

62
00:02:10,399 --> 00:02:14,209
we create a one to one more presentation

63
00:02:12,290 --> 00:02:14,720
on another blockchain for example on

64
00:02:14,209 --> 00:02:16,549
aetherium

65
00:02:14,720 --> 00:02:18,609
that means we create one to one backed

66
00:02:16,549 --> 00:02:20,989
Bitcoin tokens on aetherium

67
00:02:18,610 --> 00:02:22,760
now the idea is that once you have these

68
00:02:20,989 --> 00:02:24,410
Bitcoin bat tokens and if you can use

69
00:02:22,760 --> 00:02:25,560
them just like the native asset that

70
00:02:24,410 --> 00:02:27,150
means we can actually

71
00:02:25,560 --> 00:02:28,950
the centralized exchange is making them

72
00:02:27,150 --> 00:02:30,569
cross-chain who can use them in payment

73
00:02:28,950 --> 00:02:32,640
channels as before today making them

74
00:02:30,569 --> 00:02:34,980
operate cross chain and we can use them

75
00:02:32,640 --> 00:02:37,260
to build more potent atomic shop

76
00:02:34,980 --> 00:02:39,450
constructions or stuff like stable coins

77
00:02:37,260 --> 00:02:41,040
now once we're finished with these

78
00:02:39,450 --> 00:02:42,720
features we want to go back to the

79
00:02:41,040 --> 00:02:45,090
Bitcoin side and for this we destroy the

80
00:02:42,720 --> 00:02:46,560
tokens and receive the Bitcoin now the

81
00:02:45,090 --> 00:02:49,680
question that probably most of you are

82
00:02:46,560 --> 00:02:51,510
asking is how do we achieve that the

83
00:02:49,680 --> 00:02:53,069
Bitcoin are released only when the

84
00:02:51,510 --> 00:02:54,600
tokens are discharged in etherium and

85
00:02:53,069 --> 00:02:57,060
this is indeed a problem because bitcoin

86
00:02:54,600 --> 00:02:59,609
is not aware of any events that happen

87
00:02:57,060 --> 00:03:01,050
on the etherium side so the first thing

88
00:02:59,610 --> 00:03:03,480
that comes to our mind is well could we

89
00:03:01,050 --> 00:03:06,540
use hash table contracts the main tool

90
00:03:03,480 --> 00:03:09,000
used in Bitcoin script and unfortunately

91
00:03:06,540 --> 00:03:11,250
no because either we would have to

92
00:03:09,000 --> 00:03:12,510
create and store secrets in a smart

93
00:03:11,250 --> 00:03:15,420
contract which is not possible with

94
00:03:12,510 --> 00:03:17,700
permission or setting not yet at least

95
00:03:15,420 --> 00:03:19,500
and the other problem is that in HT LCS

96
00:03:17,700 --> 00:03:21,359
we need to know upfront who will be the

97
00:03:19,500 --> 00:03:23,730
person who receives the coins from this

98
00:03:21,360 --> 00:03:25,650
lock which is not really usable in our

99
00:03:23,730 --> 00:03:27,060
scenario because if I create an asset

100
00:03:25,650 --> 00:03:28,709
which is backed I want to trade it to

101
00:03:27,060 --> 00:03:31,320
anyone I don't know upfront you'll

102
00:03:28,709 --> 00:03:33,000
receive it in the end so we need some

103
00:03:31,320 --> 00:03:34,560
kind of intermediary on Bitcoin and

104
00:03:33,000 --> 00:03:36,959
obviously this intermediary you should

105
00:03:34,560 --> 00:03:39,060
be trustless so if we look at the system

106
00:03:36,959 --> 00:03:41,130
model and I'll skip through the may not

107
00:03:39,060 --> 00:03:43,049
the simple actors here we have two

108
00:03:41,130 --> 00:03:44,880
intermediaries we have the vaults which

109
00:03:43,049 --> 00:03:46,320
is responsible for locking and holding

110
00:03:44,880 --> 00:03:47,850
the Bitcoin and the Bitcoin side and

111
00:03:46,320 --> 00:03:50,970
then redeeming them to the user once

112
00:03:47,850 --> 00:03:52,760
called for and a smart contract which

113
00:03:50,970 --> 00:03:55,320
ensures that the vault behaves correctly

114
00:03:52,760 --> 00:03:57,540
specifically the vault is collateralized

115
00:03:55,320 --> 00:04:00,480
in this smart contract and must prove

116
00:03:57,540 --> 00:04:01,858
correct behavior to it now if we look at

117
00:04:00,480 --> 00:04:03,328
the smart contract we see the quite a

118
00:04:01,859 --> 00:04:04,890
lot of stuff is going on there and I

119
00:04:03,329 --> 00:04:06,540
recommend you to look at the paper I

120
00:04:04,890 --> 00:04:08,250
won't have time to go through all the

121
00:04:06,540 --> 00:04:10,019
details right now but one thing that

122
00:04:08,250 --> 00:04:12,329
we'd like to highlight is the chain rule

123
00:04:10,019 --> 00:04:14,280
a specifically for those of you who are

124
00:04:12,329 --> 00:04:15,780
not familiar with the terminology the

125
00:04:14,280 --> 00:04:18,600
chain a chain really can be seen as a

126
00:04:15,780 --> 00:04:20,579
cross chain SV or light client as such

127
00:04:18,600 --> 00:04:23,060
it allows us to verify events in

128
00:04:20,579 --> 00:04:25,530
agreement on a state across block chains

129
00:04:23,060 --> 00:04:26,820
on the example of Bitcoin and etherium

130
00:04:25,530 --> 00:04:28,469
this means that we can check that a

131
00:04:26,820 --> 00:04:30,300
transaction was indeed included in the

132
00:04:28,470 --> 00:04:32,700
Bitcoin blockchain and have this as an

133
00:04:30,300 --> 00:04:34,800
event trigger on the theorem site on the

134
00:04:32,700 --> 00:04:36,479
high level it operates just like an SPD

135
00:04:34,800 --> 00:04:37,810
client we store the block headers and

136
00:04:36,479 --> 00:04:39,400
then I use

137
00:04:37,810 --> 00:04:40,810
can submit the transaction inclusion

138
00:04:39,400 --> 00:04:42,310
proof specifically the hash of the

139
00:04:40,810 --> 00:04:44,919
transaction and the path to this

140
00:04:42,310 --> 00:04:49,090
transaction in the Merkle tree of the

141
00:04:44,919 --> 00:04:50,409
block now before we come to the

142
00:04:49,090 --> 00:04:52,299
protocols let's talk about the system

143
00:04:50,410 --> 00:04:53,530
requirements so we've heard that we need

144
00:04:52,300 --> 00:04:55,060
smart contracts on the issuing

145
00:04:53,530 --> 00:04:56,619
blockchain because we need to have chain

146
00:04:55,060 --> 00:04:59,620
relays we need to have collateralization

147
00:04:56,620 --> 00:05:02,620
and we need to have on chain assets like

148
00:04:59,620 --> 00:05:04,690
tokens however one thing that we try to

149
00:05:02,620 --> 00:05:06,370
achieve is that we do not have any

150
00:05:04,690 --> 00:05:08,139
requirements for the backing blockchain

151
00:05:06,370 --> 00:05:09,880
essentially the only thing that we need

152
00:05:08,139 --> 00:05:12,010
to be able to do is transfer assets

153
00:05:09,880 --> 00:05:13,840
between users and this will in theory

154
00:05:12,010 --> 00:05:16,510
support any blockchain you support

155
00:05:13,840 --> 00:05:18,190
Bitcoin litecoin and so on obviously

156
00:05:16,510 --> 00:05:20,349
should we have smart contracts on both

157
00:05:18,190 --> 00:05:21,729
sides this makes things easier and we

158
00:05:20,350 --> 00:05:24,960
can automate and optimize the process

159
00:05:21,729 --> 00:05:28,780
and more details on this in the paper

160
00:05:24,960 --> 00:05:30,219
now let's talk about the protocols so as

161
00:05:28,780 --> 00:05:31,840
mentioned the first thing that happens

162
00:05:30,220 --> 00:05:34,360
is that the vault and this can be any

163
00:05:31,840 --> 00:05:35,919
user we make no restriction to this must

164
00:05:34,360 --> 00:05:37,660
lock up collateral and the theorist

165
00:05:35,919 --> 00:05:40,630
might contract and this collateral also

166
00:05:37,660 --> 00:05:42,160
defines how many bit compact tokens can

167
00:05:40,630 --> 00:05:43,780
be issued with this vault now again I

168
00:05:42,160 --> 00:05:45,850
use Bitcoin a theorem as an example for

169
00:05:43,780 --> 00:05:48,190
for simplicity but again we support

170
00:05:45,850 --> 00:05:50,110
different objects now what will happen

171
00:05:48,190 --> 00:05:51,580
next is that Alice who has Bitcoin and

172
00:05:50,110 --> 00:05:54,250
wants to issue a bit come back tokens

173
00:05:51,580 --> 00:05:56,440
will send Bitcoin to the vault and then

174
00:05:54,250 --> 00:05:58,900
she will instantly submit a proof to the

175
00:05:56,440 --> 00:06:00,160
smart contract to the channel a showing

176
00:05:58,900 --> 00:06:02,289
that this transaction has been included

177
00:06:00,160 --> 00:06:03,640
in the Bitcoin main chain obviously you

178
00:06:02,289 --> 00:06:05,950
should wait for the confirmation and the

179
00:06:03,640 --> 00:06:08,139
security parameters to apply now the

180
00:06:05,950 --> 00:06:10,060
chain will able verify this and confirm

181
00:06:08,139 --> 00:06:11,950
to our smart contract that the lock has

182
00:06:10,060 --> 00:06:13,330
been executed correctly and the smart

183
00:06:11,950 --> 00:06:15,550
contract will release the tokens to

184
00:06:13,330 --> 00:06:17,289
Alice now what we do notice here is that

185
00:06:15,550 --> 00:06:19,900
the vault can be offline throughout this

186
00:06:17,289 --> 00:06:21,430
entire process even more it cannot

187
00:06:19,900 --> 00:06:23,770
prevent Alice from issuing these tokens

188
00:06:21,430 --> 00:06:25,600
the once the collateral is locked the

189
00:06:23,770 --> 00:06:27,940
vault has no influence about who will be

190
00:06:25,600 --> 00:06:29,710
using the system there is however one

191
00:06:27,940 --> 00:06:32,590
problem Alice should only issue the

192
00:06:29,710 --> 00:06:34,630
tokens if the collateral is there but

193
00:06:32,590 --> 00:06:36,150
this can there probably this can lead to

194
00:06:34,630 --> 00:06:39,219
a problem with race conditions

195
00:06:36,150 --> 00:06:41,289
specifically to users or more users can

196
00:06:39,220 --> 00:06:42,820
try to issue at the same time for the

197
00:06:41,289 --> 00:06:44,680
same amount of collateral and only one

198
00:06:42,820 --> 00:06:47,469
of them will have their asset secured

199
00:06:44,680 --> 00:06:49,240
and the other problem is that the vault

200
00:06:47,470 --> 00:06:51,050
could try to withdraw collateral before

201
00:06:49,240 --> 00:06:53,090
Alice or anyone else finished

202
00:06:51,050 --> 00:06:54,710
the process and submits the proof and

203
00:06:53,090 --> 00:06:56,690
this can be due to latency issues

204
00:06:54,710 --> 00:06:58,940
synchronization of two chains or denial

205
00:06:56,690 --> 00:07:00,680
of service attacks so we introduced two

206
00:06:58,940 --> 00:07:02,599
simple but quite effective mechanisms

207
00:07:00,680 --> 00:07:04,099
the first is straightforward we forbid

208
00:07:02,599 --> 00:07:05,870
the vault to withdraw collaterals

209
00:07:04,099 --> 00:07:07,580
instantly but we have a delay phase

210
00:07:05,870 --> 00:07:09,319
where the contract waits for ongoing

211
00:07:07,580 --> 00:07:12,229
issue processes to be finalized and

212
00:07:09,319 --> 00:07:14,210
secondly we use collateralized issue

213
00:07:12,229 --> 00:07:15,710
commitments specifically before sending

214
00:07:14,210 --> 00:07:17,388
coins to the vault

215
00:07:15,710 --> 00:07:19,310
Alice registers a commitment to issue

216
00:07:17,389 --> 00:07:21,379
that to initiate the issue process in

217
00:07:19,310 --> 00:07:23,990
the smart contract and this temporarily

218
00:07:21,379 --> 00:07:26,090
blocks the necessary collateral of the

219
00:07:23,990 --> 00:07:28,460
vault and allows Alice to proceed with

220
00:07:26,090 --> 00:07:30,378
the issue process now obviously Alice

221
00:07:28,460 --> 00:07:32,628
has a malicious person she could try to

222
00:07:30,379 --> 00:07:34,819
grief the system by continuously locking

223
00:07:32,629 --> 00:07:36,560
up collateral so this way to prevent

224
00:07:34,819 --> 00:07:38,419
this we require some minimum amount of

225
00:07:36,560 --> 00:07:40,340
collateral to be provided by Alice which

226
00:07:38,419 --> 00:07:44,840
will be slashed if she does not finalize

227
00:07:40,340 --> 00:07:47,119
the issue process now the trading and

228
00:07:44,840 --> 00:07:48,799
the features are in principle outside of

229
00:07:47,120 --> 00:07:50,000
expen protocol you can do anything with

230
00:07:48,800 --> 00:07:52,069
these assets as if they were native

231
00:07:50,000 --> 00:07:54,680
tokens on the bit underneath areum for

232
00:07:52,069 --> 00:07:56,270
example now let's assume Bob receives a

233
00:07:54,680 --> 00:07:58,219
bid come back tokens and would like to

234
00:07:56,270 --> 00:08:00,409
go back to bed crime so for this he

235
00:07:58,219 --> 00:08:02,690
locks these tokens in the bit come sorry

236
00:08:00,409 --> 00:08:04,490
in the smart contract and the smart

237
00:08:02,690 --> 00:08:05,810
contract issues and events and this is

238
00:08:04,490 --> 00:08:07,400
the first time when the vault has to

239
00:08:05,810 --> 00:08:09,440
come online and do something because the

240
00:08:07,400 --> 00:08:12,590
vault observes this event and proceeds

241
00:08:09,440 --> 00:08:15,020
to release the bit come to Bob and then

242
00:08:12,590 --> 00:08:16,669
to finish the protocol correctly the

243
00:08:15,020 --> 00:08:18,440
vault submits a proof that it behaved

244
00:08:16,669 --> 00:08:20,690
correctly to the chain relay and they

245
00:08:18,440 --> 00:08:22,279
train oblate will then verify this and

246
00:08:20,690 --> 00:08:24,259
only then the contract will release the

247
00:08:22,279 --> 00:08:26,870
collateral to the vault if the vault

248
00:08:24,259 --> 00:08:29,270
goes offline or misbehaves Bob will be

249
00:08:26,870 --> 00:08:31,129
reimbursed for this value but for his

250
00:08:29,270 --> 00:08:32,659
loss in ether so essentially what

251
00:08:31,129 --> 00:08:34,430
happens is in the worst case Bob just

252
00:08:32,659 --> 00:08:36,380
gets back to the ether instead of the

253
00:08:34,429 --> 00:08:37,968
Bitcoin but the question you may ask

254
00:08:36,380 --> 00:08:39,529
yourself well what about exchange rates

255
00:08:37,969 --> 00:08:41,510
because this is kind of a problem here

256
00:08:39,529 --> 00:08:44,208
so what we need to do is we need to find

257
00:08:41,510 --> 00:08:46,310
ways how to mitigate exchange rate

258
00:08:44,208 --> 00:08:47,899
fluctuations and I'll skip over this but

259
00:08:46,310 --> 00:08:50,119
we have three main points that we use

260
00:08:47,899 --> 00:08:52,339
we've reused over collateralization and

261
00:08:50,120 --> 00:08:55,339
a layered collateral adjustment

262
00:08:52,339 --> 00:08:57,680
mechanism where the votes to behave

263
00:08:55,339 --> 00:08:59,810
correctly the over a long time they can

264
00:08:57,680 --> 00:09:02,420
adjust the collateral and to make sure

265
00:08:59,810 --> 00:09:04,119
that the sister operates correctly for a

266
00:09:02,420 --> 00:09:05,969
short-term fluctuations that over

267
00:09:04,120 --> 00:09:08,170
what relation does protect us and

268
00:09:05,970 --> 00:09:09,880
finally we have a feature called the

269
00:09:08,170 --> 00:09:11,800
automatic liquidation which can be

270
00:09:09,880 --> 00:09:13,750
obtained opt-outs but essentially what

271
00:09:11,800 --> 00:09:16,689
happens is that should the collateral

272
00:09:13,750 --> 00:09:19,420
rates of the vaults fall too low or too

273
00:09:16,690 --> 00:09:20,740
close to the moment when from game

274
00:09:19,420 --> 00:09:23,110
theoretic perspective it no longer makes

275
00:09:20,740 --> 00:09:25,170
sense to bathe correctly a contract will

276
00:09:23,110 --> 00:09:27,460
trigger the reading process and

277
00:09:25,170 --> 00:09:29,500
essentially what will happen then if

278
00:09:27,460 --> 00:09:30,850
this is for example done 5% or more the

279
00:09:29,500 --> 00:09:32,380
threshold that users will just have a

280
00:09:30,850 --> 00:09:34,779
beneficial exchange of bit Commerce's

281
00:09:32,380 --> 00:09:37,240
ether and then they can use is easier to

282
00:09:34,779 --> 00:09:39,310
buy Bitcoin later again now the

283
00:09:37,240 --> 00:09:41,140
triggering of this can be implemented in

284
00:09:39,310 --> 00:09:43,180
different manners but in the worst case

285
00:09:41,140 --> 00:09:44,980
it requires one single transaction by an

286
00:09:43,180 --> 00:09:48,910
honest user or a watchtower to trigger

287
00:09:44,980 --> 00:09:50,529
the liquidation process now to highlight

288
00:09:48,910 --> 00:09:53,860
the system properties of our system of

289
00:09:50,529 --> 00:09:56,230
this I think the most important three

290
00:09:53,860 --> 00:09:58,900
are consistency that is we ensure that

291
00:09:56,230 --> 00:10:00,820
bit compact tokens or cryptic currency

292
00:09:58,900 --> 00:10:02,920
backed assets are only created if the

293
00:10:00,820 --> 00:10:05,020
corresponding proof is submitted we

294
00:10:02,920 --> 00:10:07,569
guarantee that users will either receive

295
00:10:05,020 --> 00:10:10,750
for example Bitcoin all be reimbursing

296
00:10:07,570 --> 00:10:12,160
ether and we have the property of

297
00:10:10,750 --> 00:10:13,750
lightness essentially you don't need

298
00:10:12,160 --> 00:10:15,850
anyone else to create a bit come back

299
00:10:13,750 --> 00:10:17,560
token except yourself you can register

300
00:10:15,850 --> 00:10:20,020
as a vault you can be the person who

301
00:10:17,560 --> 00:10:21,670
issues the process and it's a zero-sum

302
00:10:20,020 --> 00:10:25,029
game so it makes no sense to try to

303
00:10:21,670 --> 00:10:27,010
collude among parties yeah and another

304
00:10:25,029 --> 00:10:28,480
interesting feature is that we achieve

305
00:10:27,010 --> 00:10:30,310
scale out that means the more collateral

306
00:10:28,480 --> 00:10:31,839
is locked up the more vaults participate

307
00:10:30,310 --> 00:10:33,369
the more bit come back tokens or

308
00:10:31,839 --> 00:10:34,920
cryptocurrency back assets we can issue

309
00:10:33,370 --> 00:10:38,230
in the system

310
00:10:34,920 --> 00:10:39,790
now we implement exclaim on aetherium in

311
00:10:38,230 --> 00:10:43,089
solidity and deployed an eruption test

312
00:10:39,790 --> 00:10:45,029
Network we initially use the BTC relay

313
00:10:43,089 --> 00:10:47,950
server implementation which is by now

314
00:10:45,029 --> 00:10:49,180
quite deprecated it's not very efficient

315
00:10:47,950 --> 00:10:51,339
so we have a newer implementation as

316
00:10:49,180 --> 00:10:54,900
well and the costs that are in the

317
00:10:51,339 --> 00:10:57,220
slides are actually even cheaper by now

318
00:10:54,900 --> 00:10:59,069
so yeah the Koch core is also open

319
00:10:57,220 --> 00:11:02,830
source we can check it out on github and

320
00:10:59,070 --> 00:11:04,390
so as we can see at the time of writing

321
00:11:02,830 --> 00:11:06,880
it costs approximately one US dollar

322
00:11:04,390 --> 00:11:08,170
slightly more to issue an arbitrary

323
00:11:06,880 --> 00:11:10,150
amount of bit compact tokens and

324
00:11:08,170 --> 00:11:12,969
etherium perform a swap and then redeem

325
00:11:10,150 --> 00:11:14,530
these tokens back for Bitcoin and we can

326
00:11:12,970 --> 00:11:16,180
see also from performance and from the

327
00:11:14,530 --> 00:11:17,649
duration of the protocol the most the

328
00:11:16,180 --> 00:11:19,680
largest bottleneck is actually

329
00:11:17,649 --> 00:11:22,240
on the confirmation rates we need there

330
00:11:19,680 --> 00:11:23,739
now to put this into perspective to

331
00:11:22,240 --> 00:11:26,170
traditional atomic swaps will implement

332
00:11:23,740 --> 00:11:28,809
hoc swaps between Bitcoin theorem and

333
00:11:26,170 --> 00:11:32,019
compare performance and and and costs to

334
00:11:28,809 --> 00:11:34,300
our protocol and exclaim a performance

335
00:11:32,019 --> 00:11:36,759
hdl-c swaps after the second swap and

336
00:11:34,300 --> 00:11:38,649
the reason is that in hdl-c swaps you

337
00:11:36,759 --> 00:11:40,149
have to establish a channel upfront you

338
00:11:38,649 --> 00:11:43,839
have to do the synchronization between

339
00:11:40,149 --> 00:11:45,759
two block chains and this happens on

340
00:11:43,839 --> 00:11:48,550
chain and you do this process for each

341
00:11:45,759 --> 00:11:49,959
swap each time it's memory list the next

342
00:11:48,550 --> 00:11:51,910
claim would do this process once in the

343
00:11:49,959 --> 00:11:53,979
beginning and then you can trade the

344
00:11:51,910 --> 00:11:56,110
credit tokens on as if they were native

345
00:11:53,980 --> 00:11:57,850
assets and you obviously can put the

346
00:11:56,110 --> 00:12:00,040
native asset off chain as well if you

347
00:11:57,850 --> 00:12:02,139
use payment channels and this is why

348
00:12:00,040 --> 00:12:04,118
exclaimed for a thousand swaps is 96

349
00:12:02,139 --> 00:12:08,499
percent faster and 65 percent cheaper

350
00:12:04,119 --> 00:12:09,910
than traditional htc swaps now I do have

351
00:12:08,499 --> 00:12:11,740
a bit of time so let's talk about the

352
00:12:09,910 --> 00:12:13,269
challenges in ongoing work so one thing

353
00:12:11,740 --> 00:12:15,339
is that we need to find out how to make

354
00:12:13,269 --> 00:12:17,199
chain relays more efficient at the

355
00:12:15,339 --> 00:12:18,850
moment it will cost us between five and

356
00:12:17,199 --> 00:12:21,059
ten thousand dollars depending on the

357
00:12:18,850 --> 00:12:23,290
price fluctuations and amounts of

358
00:12:21,059 --> 00:12:25,719
transactions we need to prove per year

359
00:12:23,290 --> 00:12:27,160
to maintain the chain relay now this may

360
00:12:25,720 --> 00:12:28,870
seem a lot for a company this is

361
00:12:27,160 --> 00:12:30,610
actually not really much of a lot of

362
00:12:28,870 --> 00:12:32,439
money but still we would like to reduce

363
00:12:30,610 --> 00:12:34,029
the costs and for this we can use

364
00:12:32,439 --> 00:12:35,800
techniques like neko pauses as we've

365
00:12:34,029 --> 00:12:38,079
heard today for flight clients which

366
00:12:35,800 --> 00:12:39,819
tried to promote listicle ii reduce the

367
00:12:38,079 --> 00:12:41,859
blocks amount of blocks that you need to

368
00:12:39,819 --> 00:12:43,120
submit to the chain relay and we were

369
00:12:41,860 --> 00:12:45,910
looking into other techniques at the

370
00:12:43,120 --> 00:12:47,490
moment and yeah so basically we can

371
00:12:45,910 --> 00:12:49,929
reduce the cost for the verification

372
00:12:47,490 --> 00:12:52,149
significantly despite them already being

373
00:12:49,929 --> 00:12:54,009
quite low now another thing is that

374
00:12:52,149 --> 00:12:55,839
would obviously like to reduce the

375
00:12:54,009 --> 00:12:57,519
unchained broadcast during every

376
00:12:55,839 --> 00:12:59,379
protocol and we can try to put this

377
00:12:57,519 --> 00:13:03,490
whole thing off chain using payment

378
00:12:59,379 --> 00:13:05,199
channels so we're shortly actually if

379
00:13:03,490 --> 00:13:06,639
we're nearly finishing protocol we can

380
00:13:05,199 --> 00:13:09,519
do the whole process of chain which

381
00:13:06,639 --> 00:13:11,470
reduces cost further and then Dominic is

382
00:13:09,519 --> 00:13:13,299
also working on incentives for the fee

383
00:13:11,470 --> 00:13:15,249
market of vaults because obviously you

384
00:13:13,299 --> 00:13:17,019
need to incentivize correct behavior of

385
00:13:15,249 --> 00:13:18,779
the participants and you need to create

386
00:13:17,019 --> 00:13:20,230
a fee market for people to be willingly

387
00:13:18,779 --> 00:13:23,259
holding

388
00:13:20,230 --> 00:13:24,670
Bitcoin back tokens and potentially

389
00:13:23,259 --> 00:13:26,709
could also have different roles right

390
00:13:24,670 --> 00:13:28,299
it's you can have the vault to just

391
00:13:26,709 --> 00:13:30,459
access the intermediary and other people

392
00:13:28,299 --> 00:13:33,220
who offer the bid come back tokens

393
00:13:30,460 --> 00:13:34,930
service providers and finally one major

394
00:13:33,220 --> 00:13:36,520
issue that we do have are the

395
00:13:34,930 --> 00:13:38,859
centralized exchange with Oracle's at

396
00:13:36,520 --> 00:13:40,630
the moment we would have to query or

397
00:13:38,860 --> 00:13:43,390
aggregates the exchange rate from

398
00:13:40,630 --> 00:13:44,950
different centralized providers now one

399
00:13:43,390 --> 00:13:47,020
thing that I do want to mention since I

400
00:13:44,950 --> 00:13:48,940
have time is that if sufficient people

401
00:13:47,020 --> 00:13:51,010
use exclaim verb and create bit comeback

402
00:13:48,940 --> 00:13:53,350
tokens and aetherium and then trade them

403
00:13:51,010 --> 00:13:55,120
on the etherium platform each trade is

404
00:13:53,350 --> 00:13:56,560
registered on the blockchain even in the

405
00:13:55,120 --> 00:13:57,940
centralized exchanges and this allows us

406
00:13:56,560 --> 00:14:00,369
to extract some additional information

407
00:13:57,940 --> 00:14:02,380
and exchange rates specifically we see

408
00:14:00,370 --> 00:14:05,830
on the receipt exchange with the people

409
00:14:02,380 --> 00:14:07,720
agreed upon which kind of can help us to

410
00:14:05,830 --> 00:14:09,280
estimate it to double check whether the

411
00:14:07,720 --> 00:14:11,140
exchanges that are fed by central's

412
00:14:09,280 --> 00:14:13,390
providers into the contract are actually

413
00:14:11,140 --> 00:14:15,730
correct and in the long term because we

414
00:14:13,390 --> 00:14:17,590
could even claim that exclaim could

415
00:14:15,730 --> 00:14:19,000
boots up its own Oracle service if

416
00:14:17,590 --> 00:14:22,930
sufficient people actually use the

417
00:14:19,000 --> 00:14:24,700
system so yeah thanks for your attention

418
00:14:22,930 --> 00:14:26,859
I'm happy to the questions we have a

419
00:14:24,700 --> 00:14:29,010
website with the summary and code is

420
00:14:26,860 --> 00:14:29,010
online

421
00:14:30,470 --> 00:14:42,440
[Applause]

422
00:14:32,300 --> 00:14:44,569
thank you very much questions hi earlier

423
00:14:42,440 --> 00:14:47,420
I asked a question related to taxes so

424
00:14:44,570 --> 00:14:50,240
my question here is similar if I am

425
00:14:47,420 --> 00:14:52,610
acting as a vault and I'm holding this

426
00:14:50,240 --> 00:14:54,770
currency but I can't use it I'm not sure

427
00:14:52,610 --> 00:14:56,510
how that would affect my taxes if I

428
00:14:54,770 --> 00:14:57,709
would somehow have to explain like I

429
00:14:56,510 --> 00:15:00,020
don't actually I didn't actually gain

430
00:14:57,709 --> 00:15:02,119
any money and in the same way if I

431
00:15:00,020 --> 00:15:04,310
understand correctly when you converted

432
00:15:02,120 --> 00:15:06,260
from Bitcoin to aetherium you locked up

433
00:15:04,310 --> 00:15:08,689
the Bitcoin so you lost access to it but

434
00:15:06,260 --> 00:15:12,140
it's still arguably yours and then you

435
00:15:08,690 --> 00:15:13,940
gain an equal amount of aetherium so I'm

436
00:15:12,140 --> 00:15:15,560
worried that the IRS is gonna say ah you

437
00:15:13,940 --> 00:15:19,070
have twice as much money pay us the

438
00:15:15,560 --> 00:15:21,500
taxes can you explain how taxes might

439
00:15:19,070 --> 00:15:24,770
relate to these vaults so the thing is

440
00:15:21,500 --> 00:15:26,480
as previously mentioned you don't get a

441
00:15:24,770 --> 00:15:28,520
theorem in fact you just get the what

442
00:15:26,480 --> 00:15:32,480
one representation of a Bitcoin so you

443
00:15:28,520 --> 00:15:33,949
don't create new value so I don't see I

444
00:15:32,480 --> 00:15:35,630
don't see that you actually are gaining

445
00:15:33,950 --> 00:15:37,670
anything as a user from creating a bit

446
00:15:35,630 --> 00:15:39,439
come back token value the exchange rate

447
00:15:37,670 --> 00:15:42,649
should be the same you you get one token

448
00:15:39,440 --> 00:15:44,779
is one Bitcoin as the vault who holds

449
00:15:42,649 --> 00:15:45,950
these bitcoins well but you can prove

450
00:15:44,779 --> 00:15:48,020
that either or not yours I mean

451
00:15:45,950 --> 00:15:49,339
essentially if you misbehave you you you

452
00:15:48,020 --> 00:15:51,140
steal the bit come but you lose all your

453
00:15:49,339 --> 00:15:54,620
ether and you actually will make loss

454
00:15:51,140 --> 00:15:57,380
I'm not attack attack attacks expert so

455
00:15:54,620 --> 00:15:59,959
it's hard for me to argue how the IRA

456
00:15:57,380 --> 00:16:02,149
will see this but essentially you could

457
00:15:59,959 --> 00:16:03,859
argue that misbehaving and trying to

458
00:16:02,149 --> 00:16:05,060
make a profit from stealing a bit Clara

459
00:16:03,860 --> 00:16:07,820
not yours will actually lead to you

460
00:16:05,060 --> 00:16:13,609
losing money how this applies to the

461
00:16:07,820 --> 00:16:17,950
taxation I cannot say yeah other more

462
00:16:13,610 --> 00:16:17,950
questions before we have lunch

463
00:16:26,390 --> 00:16:31,620
I'm curious about how this relates to

464
00:16:29,400 --> 00:16:32,760
the talking sidechain so I recognize

465
00:16:31,620 --> 00:16:34,560
that you were probably preparing for

466
00:16:32,760 --> 00:16:37,340
your talk but if you have some take on

467
00:16:34,560 --> 00:16:41,849
it I would be curious to learn about it

468
00:16:37,340 --> 00:16:43,770
I guess is best to to chat a flying with

469
00:16:41,850 --> 00:16:45,480
me and Denise s afterwards to see how

470
00:16:43,770 --> 00:16:47,699
these things compare but essentially so

471
00:16:45,480 --> 00:16:50,160
the science paper has a mechanism for

472
00:16:47,700 --> 00:16:51,930
proof of stake in this case we try to

473
00:16:50,160 --> 00:16:53,430
make this as generic as possible and to

474
00:16:51,930 --> 00:16:54,420
say well we don't have any requirements

475
00:16:53,430 --> 00:16:56,130
for smart contracts in the backend

476
00:16:54,420 --> 00:16:57,360
blockchain and we try to support Bitcoin

477
00:16:56,130 --> 00:16:59,880
as it's one of the largest

478
00:16:57,360 --> 00:17:02,310
cryptocurrencies out there but yeah the

479
00:16:59,880 --> 00:17:04,410
ideas and the core thing behind these

480
00:17:02,310 --> 00:17:06,119
principles is similar the terms are

481
00:17:04,410 --> 00:17:06,959
different and I guess the use case is

482
00:17:06,119 --> 00:17:08,938
slightly different as well in the

483
00:17:06,959 --> 00:17:14,310
motivation but yeah I guess we're both

484
00:17:08,939 --> 00:17:18,750
happy to chat afterwards and compare one

485
00:17:14,310 --> 00:17:20,669
more question maybe no question

486
00:17:18,750 --> 00:17:23,449
everybody's hungry then thank you very

487
00:17:20,670 --> 00:17:23,449
much again

488
00:17:23,810 --> 00:17:26,899
[Applause]

