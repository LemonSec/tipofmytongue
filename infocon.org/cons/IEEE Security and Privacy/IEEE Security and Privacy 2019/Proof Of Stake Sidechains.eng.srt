1
00:00:09,019 --> 00:00:16,410
okay hello everyone I will talk today

2
00:00:12,120 --> 00:00:18,090
about proof of steak site chance so this

3
00:00:16,410 --> 00:00:21,720
is collaborative work with my colleagues

4
00:00:18,090 --> 00:00:23,189
Peter guy and a girl okay yes so let me

5
00:00:21,720 --> 00:00:26,698
start with describing the problem we're

6
00:00:23,189 --> 00:00:28,859
trying to solve so we're trying to solve

7
00:00:26,699 --> 00:00:30,869
this problem for in particular proof of

8
00:00:28,859 --> 00:00:33,809
steak luck change so I will focus on

9
00:00:30,869 --> 00:00:36,660
this topic in this work and this will be

10
00:00:33,809 --> 00:00:38,790
based on the formalization we have for

11
00:00:36,660 --> 00:00:41,159
proof of steak block chains called

12
00:00:38,790 --> 00:00:43,350
Navarro's so this is a protocol that is

13
00:00:41,159 --> 00:00:46,199
pre-existing and it's a provably secure

14
00:00:43,350 --> 00:00:48,269
proof of steak protocol so the problem

15
00:00:46,199 --> 00:00:51,449
we're trying to solve here is the

16
00:00:48,269 --> 00:00:53,460
following currently when people use

17
00:00:51,449 --> 00:00:54,839
Bitcoin and etherium they use Bitcoin

18
00:00:53,460 --> 00:00:57,210
for a specific reason and they use a

19
00:00:54,839 --> 00:01:00,930
theorem for a different reason they use

20
00:00:57,210 --> 00:01:03,269
Bitcoin for its safety and relative

21
00:01:00,930 --> 00:01:05,339
stability and low volatility compared to

22
00:01:03,269 --> 00:01:09,240
let's say theorem on the other hand they

23
00:01:05,339 --> 00:01:11,610
would use a theorem to to have a future

24
00:01:09,240 --> 00:01:13,830
completeness during completeness and the

25
00:01:11,610 --> 00:01:15,300
nice features of smart contracts so we

26
00:01:13,830 --> 00:01:17,840
see here there's two different block

27
00:01:15,300 --> 00:01:20,700
chains that give different features and

28
00:01:17,840 --> 00:01:25,020
they cannot necessarily be easily

29
00:01:20,700 --> 00:01:27,050
combined in particular the safety of

30
00:01:25,020 --> 00:01:30,179
Bitcoin comes exactly from the fact that

31
00:01:27,050 --> 00:01:32,610
it's code base is limited and they don't

32
00:01:30,180 --> 00:01:36,120
accept too many feature-rich feature

33
00:01:32,610 --> 00:01:37,440
requests so what we're trying to do here

34
00:01:36,120 --> 00:01:39,690
is we're trying to create a

35
00:01:37,440 --> 00:01:41,580
cryptocurrency in which you will have

36
00:01:39,690 --> 00:01:42,780
multiple block chains and we would like

37
00:01:41,580 --> 00:01:44,280
these block chains to be able to

38
00:01:42,780 --> 00:01:47,190
communicate with one another and

39
00:01:44,280 --> 00:01:49,170
exchange information and value and this

40
00:01:47,190 --> 00:01:50,520
is useful because if you have two block

41
00:01:49,170 --> 00:01:53,850
chains you can have different features

42
00:01:50,520 --> 00:01:57,750
on each of them we start with this block

43
00:01:53,850 --> 00:01:59,820
chain here which I will call SL for

44
00:01:57,750 --> 00:02:02,640
settlement layer and this will play the

45
00:01:59,820 --> 00:02:05,580
role of Bitcoin in the current

46
00:02:02,640 --> 00:02:07,290
cryptocurrency world so it has the

47
00:02:05,580 --> 00:02:08,929
Genesis block and a few other blocks and

48
00:02:07,290 --> 00:02:12,659
there's some transactions going on there

49
00:02:08,929 --> 00:02:14,849
and we intend this to be a limited

50
00:02:12,659 --> 00:02:17,190
feature of blockchain so not not to have

51
00:02:14,849 --> 00:02:20,250
many abilities other than moving money

52
00:02:17,190 --> 00:02:21,609
around and we hope people will use this

53
00:02:20,250 --> 00:02:23,830
as a

54
00:02:21,610 --> 00:02:25,960
savings blockchain where they keep their

55
00:02:23,830 --> 00:02:27,580
money safe but they don't have all the

56
00:02:25,960 --> 00:02:30,190
nice features of a smart contract

57
00:02:27,580 --> 00:02:31,870
blockchain let's say and then we plan to

58
00:02:30,190 --> 00:02:34,210
create a network of fluxions I will just

59
00:02:31,870 --> 00:02:36,880
show the case of making to block chains

60
00:02:34,210 --> 00:02:39,820
here this naturally extends to having

61
00:02:36,880 --> 00:02:41,740
multiple block chains so we start by

62
00:02:39,820 --> 00:02:44,410
introducing a second blockchain the

63
00:02:41,740 --> 00:02:45,640
computation layer and that's the

64
00:02:44,410 --> 00:02:48,520
separate lock chain with a separate

65
00:02:45,640 --> 00:02:50,529
Genesis block and it evolves

66
00:02:48,520 --> 00:02:53,290
independently of the settlement layer

67
00:02:50,530 --> 00:02:57,430
and in the computation layer we want to

68
00:02:53,290 --> 00:02:58,840
have feature rich smart contracts so the

69
00:02:57,430 --> 00:03:01,000
problem we're trying to solve here is

70
00:02:58,840 --> 00:03:02,590
how do you move money from the

71
00:03:01,000 --> 00:03:03,970
settlement layer to the computation

72
00:03:02,590 --> 00:03:06,910
layer and then how do you move it back

73
00:03:03,970 --> 00:03:10,180
so we want these two chains to work with

74
00:03:06,910 --> 00:03:11,590
one shared cryptocurrency and the users

75
00:03:10,180 --> 00:03:13,870
to be able to hold the money wherever

76
00:03:11,590 --> 00:03:16,450
they need it to be either for saving or

77
00:03:13,870 --> 00:03:17,920
for useful features so you can think of

78
00:03:16,450 --> 00:03:19,750
the settlement layer as a savings

79
00:03:17,920 --> 00:03:22,540
account and the computation layer as

80
00:03:19,750 --> 00:03:23,980
they as a checking account where you can

81
00:03:22,540 --> 00:03:28,660
move your money around more and more

82
00:03:23,980 --> 00:03:30,310
easily and with more features right so

83
00:03:28,660 --> 00:03:33,220
what we want to achieve here and this is

84
00:03:30,310 --> 00:03:35,320
our contribution with this is when you

85
00:03:33,220 --> 00:03:37,269
have some money in the settlement layer

86
00:03:35,320 --> 00:03:39,910
you do a transaction here on the setna

87
00:03:37,269 --> 00:03:41,560
layer and that transaction destroys a

88
00:03:39,910 --> 00:03:43,540
coin here in the settlement layer and

89
00:03:41,560 --> 00:03:45,850
then a new coin appears in the

90
00:03:43,540 --> 00:03:47,380
computation layer then you can move that

91
00:03:45,850 --> 00:03:48,760
corner round in the computation layer

92
00:03:47,380 --> 00:03:50,859
and then whenever you want you can do

93
00:03:48,760 --> 00:03:52,989
another transaction over here destroy

94
00:03:50,860 --> 00:03:55,420
the coin in the computation layer do a

95
00:03:52,989 --> 00:03:57,400
transaction to do that and then a new

96
00:03:55,420 --> 00:03:59,230
coin appears in the settlement layer so

97
00:03:57,400 --> 00:04:01,660
with these destruction and creation

98
00:03:59,230 --> 00:04:03,488
transactions you're essentially able to

99
00:04:01,660 --> 00:04:07,510
move assets from one chain to another

100
00:04:03,489 --> 00:04:10,269
like that and of course this coin here

101
00:04:07,510 --> 00:04:13,540
can change hands maybe be split up or

102
00:04:10,269 --> 00:04:15,519
merged into you can split up a coin into

103
00:04:13,540 --> 00:04:20,738
its denominations and only move part of

104
00:04:15,519 --> 00:04:22,650
it back and so on right so if you

105
00:04:20,738 --> 00:04:26,020
already have a settlement layer

106
00:04:22,650 --> 00:04:28,390
blockchain the computation layer can

107
00:04:26,020 --> 00:04:30,940
start later on so it can have a Genesis

108
00:04:28,390 --> 00:04:32,260
block that starts later on and this is

109
00:04:30,940 --> 00:04:34,150
what we proposed on this paper if you

110
00:04:32,260 --> 00:04:35,020
have an existing blockchain you can do

111
00:04:34,150 --> 00:04:36,549
it you can

112
00:04:35,020 --> 00:04:38,409
create a new block chain that will

113
00:04:36,550 --> 00:04:41,440
function as a computational layer later

114
00:04:38,410 --> 00:04:43,810
on now the system that I'm discussing

115
00:04:41,440 --> 00:04:45,400
here is not applicable to known block

116
00:04:43,810 --> 00:04:47,110
chains such as Bitcoin and the theorem

117
00:04:45,400 --> 00:04:49,419
because there are proof-of-work block

118
00:04:47,110 --> 00:04:50,860
chains this works for proof of stake but

119
00:04:49,420 --> 00:04:52,630
what we're doing is applicable to the

120
00:04:50,860 --> 00:04:55,630
Cardinal block chain and we're doing an

121
00:04:52,630 --> 00:04:59,469
implementation there so this is our our

122
00:04:55,630 --> 00:05:01,060
application for this right so what we

123
00:04:59,470 --> 00:05:03,460
propose here is to have two types of

124
00:05:01,060 --> 00:05:05,950
notes the first kind of note is a

125
00:05:03,460 --> 00:05:07,989
settlement layer node and this is a node

126
00:05:05,950 --> 00:05:09,760
that only looks at the settlement layer

127
00:05:07,990 --> 00:05:10,930
and then you have a different type of

128
00:05:09,760 --> 00:05:14,409
node a second type of node which is

129
00:05:10,930 --> 00:05:16,660
called the SCL node a settlement and

130
00:05:14,410 --> 00:05:19,300
computational layer node and these nodes

131
00:05:16,660 --> 00:05:22,150
monitor both these block chains so if

132
00:05:19,300 --> 00:05:23,860
somebody is interested in running on the

133
00:05:22,150 --> 00:05:25,330
computation layer they can look at both

134
00:05:23,860 --> 00:05:27,280
boxing's they can they're not can

135
00:05:25,330 --> 00:05:29,109
connect to both but if they're just

136
00:05:27,280 --> 00:05:30,849
settlement layer notes their code is

137
00:05:29,110 --> 00:05:33,060
really simple it only looks at the

138
00:05:30,850 --> 00:05:34,930
segment layer blockchain now the

139
00:05:33,060 --> 00:05:37,630
challenge of this is how do we move

140
00:05:34,930 --> 00:05:39,880
money in and out when these miners don't

141
00:05:37,630 --> 00:05:42,670
necessarily look at both doctrines well

142
00:05:39,880 --> 00:05:44,230
moving money out of the of the

143
00:05:42,670 --> 00:05:47,470
settlement layer and into the

144
00:05:44,230 --> 00:05:50,350
computation layer is the easy part

145
00:05:47,470 --> 00:05:53,830
you do a rate so this is the lifecycle

146
00:05:50,350 --> 00:05:55,630
of money basically it starts by living

147
00:05:53,830 --> 00:05:57,340
in the settlement layer and the sediment

148
00:05:55,630 --> 00:05:58,900
layer is also where the macroeconomic

149
00:05:57,340 --> 00:06:01,570
policy of the currency is applied it's

150
00:05:58,900 --> 00:06:03,489
where new coins are minted and so on and

151
00:06:01,570 --> 00:06:04,900
it moves around there at some point

152
00:06:03,490 --> 00:06:06,190
there is a special transaction that

153
00:06:04,900 --> 00:06:07,960
restores the money and that's confirmed

154
00:06:06,190 --> 00:06:09,190
in the settlement layer and then a

155
00:06:07,960 --> 00:06:10,750
follow-up transaction creates

156
00:06:09,190 --> 00:06:14,320
corresponding money in the computation

157
00:06:10,750 --> 00:06:15,640
layer when we move money back in from

158
00:06:14,320 --> 00:06:17,530
the computation layer into the

159
00:06:15,640 --> 00:06:20,260
settlement layer this is the harder part

160
00:06:17,530 --> 00:06:22,299
and again you have the same life cycle

161
00:06:20,260 --> 00:06:24,130
you have some money that lives in the

162
00:06:22,300 --> 00:06:26,110
computational layer it was moved there

163
00:06:24,130 --> 00:06:27,850
previously and then there's a special

164
00:06:26,110 --> 00:06:29,740
transaction that destroys this money in

165
00:06:27,850 --> 00:06:31,180
the computation layer and a follow-up

166
00:06:29,740 --> 00:06:33,670
transaction within the settlement layer

167
00:06:31,180 --> 00:06:35,830
that creates the corresponding new money

168
00:06:33,670 --> 00:06:38,290
the challenge is validating this

169
00:06:35,830 --> 00:06:40,180
creation transaction in each case to

170
00:06:38,290 --> 00:06:42,930
ensure that the respective amount has

171
00:06:40,180 --> 00:06:46,570
been destroyed in the remote blockchain

172
00:06:42,930 --> 00:06:47,580
so this is how it looks and here's why

173
00:06:46,570 --> 00:06:49,949
it's easy

174
00:06:47,580 --> 00:06:51,688
do the one-way thing and this is one

175
00:06:49,949 --> 00:06:53,789
type of note that we propose it's called

176
00:06:51,689 --> 00:06:56,099
a direct observation method so if you

177
00:06:53,789 --> 00:06:58,318
have an s CL node that monitors both

178
00:06:56,099 --> 00:07:00,180
both blockchains that's easy for them to

179
00:06:58,319 --> 00:07:03,360
verify that this money creation

180
00:07:00,180 --> 00:07:05,009
transaction is actually valid and the

181
00:07:03,360 --> 00:07:07,080
reason is because because they monitor

182
00:07:05,009 --> 00:07:10,319
both these blob chains they can wait for

183
00:07:07,080 --> 00:07:12,539
confirmation on the top blockchain for

184
00:07:10,319 --> 00:07:14,219
the money destruction transaction they

185
00:07:12,539 --> 00:07:15,599
wait a couple blocks for the transaction

186
00:07:14,219 --> 00:07:17,969
to be confirmed and after that is

187
00:07:15,599 --> 00:07:19,590
happening that has happened then they

188
00:07:17,969 --> 00:07:21,330
can verify the code money creation

189
00:07:19,590 --> 00:07:22,770
transaction at the bottom because they

190
00:07:21,330 --> 00:07:24,900
connect to both these networks and they

191
00:07:22,770 --> 00:07:26,909
monitor both block chains by direct

192
00:07:24,900 --> 00:07:29,340
observation this is basically trivial

193
00:07:26,909 --> 00:07:31,830
the difficult problem is moving money

194
00:07:29,340 --> 00:07:34,349
back because the settlement layer nodes

195
00:07:31,830 --> 00:07:36,030
the SL nodes even though we want them to

196
00:07:34,349 --> 00:07:37,469
validate all the transactions that get

197
00:07:36,030 --> 00:07:39,929
confirmed within the settlement layer

198
00:07:37,469 --> 00:07:41,610
they are not looking at blocks in the

199
00:07:39,930 --> 00:07:43,500
computation layer they don't they don't

200
00:07:41,610 --> 00:07:45,330
look at all the transactions over there

201
00:07:43,500 --> 00:07:46,979
and we don't want to send them all the

202
00:07:45,330 --> 00:07:48,779
transactions of the computation layer or

203
00:07:46,979 --> 00:07:50,938
all the blocks of the computation layer

204
00:07:48,779 --> 00:07:52,800
so the this is the isolation challenge

205
00:07:50,939 --> 00:07:54,389
we want the settlement layer miners to

206
00:07:52,800 --> 00:07:56,400
learn about some information that

207
00:07:54,389 --> 00:07:59,430
happens on the computation layer but

208
00:07:56,400 --> 00:08:02,039
without without actually connecting to

209
00:07:59,430 --> 00:08:04,229
it and of course we cannot just send

210
00:08:02,039 --> 00:08:05,460
them the transaction because they need

211
00:08:04,229 --> 00:08:07,378
to know whether that transaction has

212
00:08:05,460 --> 00:08:09,539
been confirmed on the computation layer

213
00:08:07,379 --> 00:08:12,690
they need to deal with box and reorg and

214
00:08:09,539 --> 00:08:14,699
so on and so forth so in order to solve

215
00:08:12,690 --> 00:08:16,889
this problem what we do is we

216
00:08:14,699 --> 00:08:21,389
synchronize the epochs of these two

217
00:08:16,889 --> 00:08:23,009
chains and I should remind you in the

218
00:08:21,389 --> 00:08:27,419
Ouroboros blockchain in the proof of

219
00:08:23,009 --> 00:08:31,259
work the epochs are periods of time

220
00:08:27,419 --> 00:08:34,588
where you have blocks and the there's

221
00:08:31,259 --> 00:08:36,959
lots of time where in each slot there is

222
00:08:34,589 --> 00:08:40,500
an elected leader which is responsible

223
00:08:36,958 --> 00:08:41,939
for creating a block so the leader

224
00:08:40,500 --> 00:08:42,630
election happens at the beginning of

225
00:08:41,940 --> 00:08:44,970
every epoch

226
00:08:42,630 --> 00:08:47,070
and then the leaders are elected for the

227
00:08:44,970 --> 00:08:48,600
rest of the epoch and then at the end of

228
00:08:47,070 --> 00:08:51,920
the epoch there's a new election process

229
00:08:48,600 --> 00:08:55,019
that takes place so given this we

230
00:08:51,920 --> 00:08:57,360
synchronize these these periods these

231
00:08:55,019 --> 00:08:59,090
epochs between the two layers and once

232
00:08:57,360 --> 00:09:04,010
we have done that here's the

233
00:08:59,090 --> 00:09:06,860
the insight for this solution so in this

234
00:09:04,010 --> 00:09:10,340
in the computation layer the computation

235
00:09:06,860 --> 00:09:13,640
layer during the during the during each

236
00:09:10,340 --> 00:09:16,700
epoch they elect a small committee of

237
00:09:13,640 --> 00:09:19,430
people which will be responsible for

238
00:09:16,700 --> 00:09:21,350
passing data to the settlement layer and

239
00:09:19,430 --> 00:09:23,300
they will do that by signing off a

240
00:09:21,350 --> 00:09:25,130
certificate that says here's what

241
00:09:23,300 --> 00:09:26,599
happens in the computation layer but

242
00:09:25,130 --> 00:09:28,400
what we want is this committee we don't

243
00:09:26,600 --> 00:09:30,380
want this to be a federation we don't

244
00:09:28,400 --> 00:09:32,380
want this to be centralized we want this

245
00:09:30,380 --> 00:09:36,080
to be representative of the underlying

246
00:09:32,380 --> 00:09:39,530
stake so based on the idea that the

247
00:09:36,080 --> 00:09:40,970
majority of stake is honest in the epoch

248
00:09:39,530 --> 00:09:44,000
which is an assumption that the oral

249
00:09:40,970 --> 00:09:46,340
voters paper makes the committee that is

250
00:09:44,000 --> 00:09:49,730
elected here we want we wanted to

251
00:09:46,340 --> 00:09:52,100
preserve this honest majority so this

252
00:09:49,730 --> 00:09:54,650
means that we will not introduce any

253
00:09:52,100 --> 00:09:57,380
additional security assumptions compared

254
00:09:54,650 --> 00:09:59,630
to what the bare protocol has with one

255
00:09:57,380 --> 00:10:01,939
blockchain now in order to do the

256
00:09:59,630 --> 00:10:05,120
election what we do is we take the last

257
00:10:01,940 --> 00:10:07,270
two case lots of the epoch where this K

258
00:10:05,120 --> 00:10:09,440
is the common prefix parameter of the

259
00:10:07,270 --> 00:10:11,060
backbone work and the order voters work

260
00:10:09,440 --> 00:10:14,120
it's the number of locks you need to

261
00:10:11,060 --> 00:10:16,099
wait for confirmation and then we take

262
00:10:14,120 --> 00:10:18,860
the last two key slots of each epoch and

263
00:10:16,100 --> 00:10:21,070
within there we find who are the elected

264
00:10:18,860 --> 00:10:23,990
who are the elected leaders of that and

265
00:10:21,070 --> 00:10:27,350
those are the people the two K people

266
00:10:23,990 --> 00:10:30,110
which will be responsible for forming

267
00:10:27,350 --> 00:10:33,400
this committee and for large enough K

268
00:10:30,110 --> 00:10:36,160
the probability that the majority of

269
00:10:33,400 --> 00:10:38,900
people within this committee will be

270
00:10:36,160 --> 00:10:40,370
adversarial is negligible provided that

271
00:10:38,900 --> 00:10:42,920
we have honest majority in the

272
00:10:40,370 --> 00:10:44,240
underlying stick so this this committee

273
00:10:42,920 --> 00:10:46,640
it's important to know that it's not a

274
00:10:44,240 --> 00:10:47,900
federation because it changes for from

275
00:10:46,640 --> 00:10:52,100
epoch to epoch it's a different

276
00:10:47,900 --> 00:10:54,620
committee from epoch to epoch okay so we

277
00:10:52,100 --> 00:10:57,290
take the last two k - k slots and these

278
00:10:54,620 --> 00:11:00,050
are the people that will will be signing

279
00:10:57,290 --> 00:11:02,030
off these sort of transfers from the

280
00:11:00,050 --> 00:11:05,240
computation later back to the settlement

281
00:11:02,030 --> 00:11:07,339
layer so here's what happens you have

282
00:11:05,240 --> 00:11:09,620
three epochs here epoch seven eight and

283
00:11:07,340 --> 00:11:10,760
nine at a poke eight we have some

284
00:11:09,620 --> 00:11:12,740
transactions that

285
00:11:10,760 --> 00:11:15,019
happened and these transactions are

286
00:11:12,740 --> 00:11:17,779
collected into a compact miracle tree

287
00:11:15,019 --> 00:11:20,389
and then that Merkle tree is signed off

288
00:11:17,779 --> 00:11:22,600
by the committee which was elected for

289
00:11:20,389 --> 00:11:25,130
e-book eight so there is 2k signatures

290
00:11:22,600 --> 00:11:26,449
in the optimistic case or if there's

291
00:11:25,130 --> 00:11:28,760
some malicious people that are not

292
00:11:26,449 --> 00:11:31,490
willing to do the signature there's K

293
00:11:28,760 --> 00:11:34,160
plus-1 signatures and the majority of

294
00:11:31,490 --> 00:11:36,920
them will sign the majority of the stake

295
00:11:34,160 --> 00:11:38,569
here were saying for the fact that this

296
00:11:36,920 --> 00:11:40,550
money is moving away and this

297
00:11:38,570 --> 00:11:43,370
certificate is then posted on the

298
00:11:40,550 --> 00:11:44,329
settlement layer blockchain and in our

299
00:11:43,370 --> 00:11:47,829
paper we have an interesting

300
00:11:44,329 --> 00:11:50,479
construction where these K plus 1 or 2 K

301
00:11:47,829 --> 00:11:52,519
signatures can be nicely aggregated into

302
00:11:50,480 --> 00:11:54,350
a very short signature and then on the

303
00:11:52,519 --> 00:11:56,810
other side the signature verification is

304
00:11:54,350 --> 00:11:58,610
a simple signature verification it's a

305
00:11:56,810 --> 00:12:01,518
it's a protocol that looks exactly like

306
00:11:58,610 --> 00:12:05,570
standard signature verification so you

307
00:12:01,519 --> 00:12:08,449
can do that now the question is how does

308
00:12:05,570 --> 00:12:10,389
the settlement layer know who is the

309
00:12:08,449 --> 00:12:13,189
correct committee because the

310
00:12:10,389 --> 00:12:16,430
committee's stake on the computational

311
00:12:13,190 --> 00:12:19,550
layer evolves with time and this the

312
00:12:16,430 --> 00:12:22,670
settlement layer miners do not know how

313
00:12:19,550 --> 00:12:25,160
this evolution has taken place in order

314
00:12:22,670 --> 00:12:26,959
to do that when the computation layer is

315
00:12:25,160 --> 00:12:29,870
first created during its Genesis block

316
00:12:26,959 --> 00:12:32,268
it has a certain stake distribution now

317
00:12:29,870 --> 00:12:35,389
that stake distribution is known to the

318
00:12:32,269 --> 00:12:38,449
settlement layer miners so that's the

319
00:12:35,389 --> 00:12:41,750
base of the induction and then as the

320
00:12:38,449 --> 00:12:44,779
epochs evolve the elected committee that

321
00:12:41,750 --> 00:12:47,750
voted for which transactions took place

322
00:12:44,779 --> 00:12:50,269
on the computation layer also votes on a

323
00:12:47,750 --> 00:12:51,889
different statement that says what is

324
00:12:50,269 --> 00:12:53,959
the new Committee on the computation

325
00:12:51,889 --> 00:12:55,610
layer so the previous committee of the

326
00:12:53,959 --> 00:12:57,709
previous epoch in the computation layer

327
00:12:55,610 --> 00:12:59,269
they sign a certificate that says these

328
00:12:57,709 --> 00:13:00,888
are the transactions that took place and

329
00:12:59,269 --> 00:13:04,000
this is the new committee for the new

330
00:13:00,889 --> 00:13:07,130
epoch and they make this certificate

331
00:13:04,000 --> 00:13:12,199
statement they post it on the settlement

332
00:13:07,130 --> 00:13:14,720
layer once every epoch and now one very

333
00:13:12,199 --> 00:13:16,430
interesting property that we are were

334
00:13:14,720 --> 00:13:18,980
able to prove in this paper is the

335
00:13:16,430 --> 00:13:21,349
thermal property and this was one of the

336
00:13:18,980 --> 00:13:24,130
original goals of side-chains from the

337
00:13:21,350 --> 00:13:26,440
time they were first envisioned

338
00:13:24,130 --> 00:13:28,840
and this is the federal property and the

339
00:13:26,440 --> 00:13:29,950
idea is if in the computational layer

340
00:13:28,840 --> 00:13:32,530
you have some sort of catastrophic

341
00:13:29,950 --> 00:13:34,780
failure for example there is a

342
00:13:32,530 --> 00:13:37,060
catastrophic bug which allows arbitrary

343
00:13:34,780 --> 00:13:39,160
money creation the settlement layer is

344
00:13:37,060 --> 00:13:41,560
protected and this is how we ensure the

345
00:13:39,160 --> 00:13:44,260
safety of the settlement layer the way

346
00:13:41,560 --> 00:13:46,060
we do that is quite simple really when

347
00:13:44,260 --> 00:13:47,530
you have an incoming transaction an

348
00:13:46,060 --> 00:13:49,510
infinite incoming transfer into the

349
00:13:47,530 --> 00:13:51,880
settlement layer the settlement layer

350
00:13:49,510 --> 00:13:53,410
node verifies that the total amount that

351
00:13:51,880 --> 00:13:55,570
went out of the settlement layer and

352
00:13:53,410 --> 00:13:57,400
into the computation layer must be more

353
00:13:55,570 --> 00:13:59,260
than what came back in so you cannot

354
00:13:57,400 --> 00:14:01,449
bring more money in from the computation

355
00:13:59,260 --> 00:14:04,270
layer into the settlement layer than one

356
00:14:01,450 --> 00:14:06,520
went out the the challenge here

357
00:14:04,270 --> 00:14:09,250
technically is to be able to prove this

358
00:14:06,520 --> 00:14:12,970
and in order to do that what we do is we

359
00:14:09,250 --> 00:14:14,470
introduce a an interesting definition of

360
00:14:12,970 --> 00:14:17,470
what it means for a sidechain to be

361
00:14:14,470 --> 00:14:20,590
secure and I have it as a as an extra

362
00:14:17,470 --> 00:14:23,440
slide here at the end so I'm not going

363
00:14:20,590 --> 00:14:25,450
to read that but I invite you to go to

364
00:14:23,440 --> 00:14:27,550
our paper and read this definition I

365
00:14:25,450 --> 00:14:29,440
think it's very interesting because we

366
00:14:27,550 --> 00:14:31,750
this is something that we recommend that

367
00:14:29,440 --> 00:14:35,620
researchers adopt when they want to

368
00:14:31,750 --> 00:14:38,340
prove cross chain transfer security so

369
00:14:35,620 --> 00:14:41,380
we have very interesting formalism and

370
00:14:38,340 --> 00:14:43,090
mathematics going on here and I would be

371
00:14:41,380 --> 00:14:45,430
very happy to see that being adopted in

372
00:14:43,090 --> 00:14:49,570
other papers I think it's a very useful

373
00:14:45,430 --> 00:14:52,060
formalism and with that I would like to

374
00:14:49,570 --> 00:14:54,970
show you some more papers other than our

375
00:14:52,060 --> 00:14:57,069
currently presented paper here the rest

376
00:14:54,970 --> 00:14:59,410
of the papers that I have here there's

377
00:14:57,070 --> 00:15:02,260
one that was presented in Fc earlier

378
00:14:59,410 --> 00:15:04,420
this year and a few others from our

379
00:15:02,260 --> 00:15:06,910
group and these show how to do the same

380
00:15:04,420 --> 00:15:10,180
thing with proof of work so actually

381
00:15:06,910 --> 00:15:12,219
with with this we complete the schema

382
00:15:10,180 --> 00:15:13,959
for proof of stake and now we can do

383
00:15:12,220 --> 00:15:17,320
these things to a proof of work and

384
00:15:13,960 --> 00:15:18,910
proof of stake and in fact the scheme

385
00:15:17,320 --> 00:15:20,560
that I showed you today I showed it to

386
00:15:18,910 --> 00:15:23,260
you in terms of creating a new

387
00:15:20,560 --> 00:15:25,119
blockchain that that does this but in

388
00:15:23,260 --> 00:15:27,310
fact it's possible to reach or fit

389
00:15:25,120 --> 00:15:29,080
existing block chains both improve of

390
00:15:27,310 --> 00:15:30,609
stake and proof of work to have these

391
00:15:29,080 --> 00:15:32,650
kind of features so to create a new

392
00:15:30,610 --> 00:15:34,780
chain that is able to communicate as

393
00:15:32,650 --> 00:15:37,120
well as to build communication between

394
00:15:34,780 --> 00:15:38,949
two existing block chains so no

395
00:15:37,120 --> 00:15:41,230
our parent relationship between the

396
00:15:38,950 --> 00:15:44,290
blockchains but to existing blockchains

397
00:15:41,230 --> 00:15:46,480
for example we could interconnect Cardno

398
00:15:44,290 --> 00:15:48,010
a proof of stake blockchain with theorem

399
00:15:46,480 --> 00:15:51,010
a proof-of-work blockchain

400
00:15:48,010 --> 00:15:52,990
both of which are currently stand-alone

401
00:15:51,010 --> 00:15:55,870
and they don't have this feature of

402
00:15:52,990 --> 00:15:57,760
building so we can retrofit it later on

403
00:15:55,870 --> 00:16:00,880
so this is described in this series of

404
00:15:57,760 --> 00:16:10,120
works and with that I'll be happy to

405
00:16:00,880 --> 00:16:17,320
take your questions thank you how much

406
00:16:10,120 --> 00:16:19,480
questions yes I looked at the tales from

407
00:16:17,320 --> 00:16:21,070
Samsung Research America my question is

408
00:16:19,480 --> 00:16:23,680
a little out of scope so it's okay if

409
00:16:21,070 --> 00:16:26,800
you'd like to discuss offline okay I'm

410
00:16:23,680 --> 00:16:30,640
very curious about side chains and their

411
00:16:26,800 --> 00:16:32,829
implications for taxes I think trying to

412
00:16:30,640 --> 00:16:35,339
explain your taxes where you convert

413
00:16:32,830 --> 00:16:37,089
from it's essentially sometimes the same

414
00:16:35,339 --> 00:16:39,190
cryptocurrency there are one-to-one

415
00:16:37,089 --> 00:16:40,750
ratios but sometimes they're not as you

416
00:16:39,190 --> 00:16:43,390
described like combining proof of stake

417
00:16:40,750 --> 00:16:45,820
and proof of a proof of work block

418
00:16:43,390 --> 00:16:48,400
chains together do you have any thoughts

419
00:16:45,820 --> 00:16:50,650
on tax implications of needing to

420
00:16:48,400 --> 00:16:53,199
convert between different tokens yeah

421
00:16:50,650 --> 00:16:55,390
very rapidly often okay so in this

422
00:16:53,200 --> 00:16:56,770
construction the cryptocurrency remains

423
00:16:55,390 --> 00:16:58,360
the same between two different block

424
00:16:56,770 --> 00:17:00,490
chains so that's a very interesting

425
00:16:58,360 --> 00:17:02,680
property if you have a chain that lives

426
00:17:00,490 --> 00:17:03,760
on one blockchain if you have an asset

427
00:17:02,680 --> 00:17:05,319
that lives on one blockchain and you

428
00:17:03,760 --> 00:17:07,990
move it with those mechanism to another

429
00:17:05,319 --> 00:17:09,550
it retains its nature so basically this

430
00:17:07,990 --> 00:17:10,630
allows us to separate the notion of a

431
00:17:09,550 --> 00:17:12,669
blockchain from the notion of a

432
00:17:10,630 --> 00:17:15,040
cryptocurrency and have multiple log

433
00:17:12,670 --> 00:17:16,750
chains holds the same cryptocurrency for

434
00:17:15,040 --> 00:17:18,670
example using this method you would be

435
00:17:16,750 --> 00:17:20,770
able to move for instance and a theorem

436
00:17:18,670 --> 00:17:22,209
token from the etherium deduction into

437
00:17:20,770 --> 00:17:24,220
the car now no blockchain and it would

438
00:17:22,209 --> 00:17:26,380
retain its nature so for tax purposes

439
00:17:24,220 --> 00:17:30,400
you could probably argue that this is

440
00:17:26,380 --> 00:17:31,540
the same token yeah it's still on the

441
00:17:30,400 --> 00:17:34,240
theorem even though it lives on a

442
00:17:31,540 --> 00:17:36,428
different blockchain yeah so when the

443
00:17:34,240 --> 00:17:37,990
committee signs off on a destruction of

444
00:17:36,429 --> 00:17:39,880
a coin or a new committee are they

445
00:17:37,990 --> 00:17:43,210
providing some sort of Byzantine

446
00:17:39,880 --> 00:17:44,830
consensus or is it weaker than that so

447
00:17:43,210 --> 00:17:46,360
because the committee is so this is an

448
00:17:44,830 --> 00:17:50,949
inductive argument if the committee of

449
00:17:46,360 --> 00:17:51,439
Ipoh j is honest then they will sign the

450
00:17:50,950 --> 00:17:53,629
committee of

451
00:17:51,440 --> 00:17:56,059
bojay plus 1 by assumption that they're

452
00:17:53,629 --> 00:17:58,309
honest in epoch J they will provide a

453
00:17:56,059 --> 00:18:00,769
truthful signature and then that passes

454
00:17:58,309 --> 00:18:03,049
control to epoch J plus 1 and then the

455
00:18:00,769 --> 00:18:05,269
epoch J committee is no longer valid and

456
00:18:03,049 --> 00:18:08,000
the epoch J plus 1 committee is now

457
00:18:05,269 --> 00:18:09,799
valid the only assumption we make for

458
00:18:08,000 --> 00:18:12,320
that is that there is honest majority in

459
00:18:09,799 --> 00:18:14,809
the underlying steak the way that we do

460
00:18:12,320 --> 00:18:17,809
the election we choose to K people that

461
00:18:14,809 --> 00:18:20,830
are an unbiased sample of the underlying

462
00:18:17,809 --> 00:18:24,408
steak so we can conclude from that that

463
00:18:20,830 --> 00:18:26,269
the k plus 1 of the committee of the 2k

464
00:18:24,409 --> 00:18:30,289
people will be honest and there's a

465
00:18:26,269 --> 00:18:33,129
proof of that in our paper we have done

466
00:18:30,289 --> 00:18:33,129
more questions

467
00:18:36,460 --> 00:18:41,990
hi isn't the security of the base

468
00:18:40,070 --> 00:18:44,059
settlement layer reliant on your top

469
00:18:41,990 --> 00:18:46,250
layers now if the adversary breaks into

470
00:18:44,059 --> 00:18:48,230
one of the top layers somehow in one of

471
00:18:46,250 --> 00:18:51,259
the committee's in one particular epoch

472
00:18:48,230 --> 00:18:54,009
and he manages to send some transactions

473
00:18:51,259 --> 00:18:56,090
to the settlement layer doesn't this

474
00:18:54,009 --> 00:18:57,529
essentially corrupt the base settlement

475
00:18:56,090 --> 00:18:59,449
layer in other words this is like a

476
00:18:57,529 --> 00:19:02,360
single point of failure for your whole

477
00:18:59,450 --> 00:19:04,639
side chains yeah so this is exactly the

478
00:19:02,360 --> 00:19:06,620
formal property that we have if there is

479
00:19:04,639 --> 00:19:08,719
some corruption in the computation layer

480
00:19:06,620 --> 00:19:10,428
the only thing that can be affected are

481
00:19:08,720 --> 00:19:12,500
accounts within the computation layer

482
00:19:10,429 --> 00:19:14,360
the settlement layer macroeconomic

483
00:19:12,500 --> 00:19:16,100
policy and accounts cannot be affected

484
00:19:14,360 --> 00:19:18,408
and the reason that we're able to

485
00:19:16,100 --> 00:19:20,689
achieve that is exactly because the

486
00:19:18,409 --> 00:19:22,700
settlement layer miners they verify that

487
00:19:20,690 --> 00:19:25,370
the amount that comes in is no more than

488
00:19:22,700 --> 00:19:27,500
what went out so computation layer

489
00:19:25,370 --> 00:19:29,418
people can potentially lose their money

490
00:19:27,500 --> 00:19:31,340
if there's a bug in the computation

491
00:19:29,419 --> 00:19:33,710
layer but if there's a bug in the

492
00:19:31,340 --> 00:19:37,399
computation layer the settlement layer

493
00:19:33,710 --> 00:19:39,110
cannot have more money imported in than

494
00:19:37,399 --> 00:19:45,969
one went out and so its value will be

495
00:19:39,110 --> 00:19:45,969
retained much thank you

