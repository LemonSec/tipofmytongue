1
00:00:09,080 --> 00:00:14,700
thank you for the introduction so today

2
00:00:12,870 --> 00:00:17,009
I want to present our joint work of the

3
00:00:14,700 --> 00:00:20,610
unit University of our shell and the

4
00:00:17,009 --> 00:00:23,460
applied crypto at tu Darmstadt so to

5
00:00:20,610 --> 00:00:25,140
start off with the light motivation when

6
00:00:23,460 --> 00:00:27,210
we think about cryptocurrencies then

7
00:00:25,140 --> 00:00:29,580
there is a problem that block chains do

8
00:00:27,210 --> 00:00:31,470
not scale very well so blockchain is the

9
00:00:29,580 --> 00:00:34,199
main ingredient for cryptocurrency and

10
00:00:31,470 --> 00:00:36,989
it consists of a chain of blocks where

11
00:00:34,199 --> 00:00:39,780
every block contains transactions so

12
00:00:36,989 --> 00:00:42,979
when Alice wants to send transaction to

13
00:00:39,780 --> 00:00:46,589
Bob she proposes this transaction to the

14
00:00:42,979 --> 00:00:48,780
underlying cryptocurrency network which

15
00:00:46,589 --> 00:00:52,650
will eventually publish this transaction

16
00:00:48,780 --> 00:00:54,629
in a new block of the blockchain so Bob

17
00:00:52,650 --> 00:00:56,549
can at any point then look in the

18
00:00:54,629 --> 00:00:58,619
blockchain and see if this transaction

19
00:00:56,549 --> 00:01:01,500
was included and knows whether he got

20
00:00:58,619 --> 00:01:03,780
the money so the good thing about this

21
00:01:01,500 --> 00:01:06,000
technology is that allows payments

22
00:01:03,780 --> 00:01:09,210
without a central intermediary like a

23
00:01:06,000 --> 00:01:11,670
bank but the problem is that it is

24
00:01:09,210 --> 00:01:14,309
actually not quite as convenient as we

25
00:01:11,670 --> 00:01:16,650
would like it to be in particular

26
00:01:14,310 --> 00:01:21,360
whenever the decentralized network of

27
00:01:16,650 --> 00:01:23,160
the cryptocurrency has to has to create

28
00:01:21,360 --> 00:01:25,560
a new block this takes actually quite

29
00:01:23,160 --> 00:01:28,140
some time and it might take minutes up

30
00:01:25,560 --> 00:01:29,760
to even hours until Bob knows that this

31
00:01:28,140 --> 00:01:32,970
transaction has been included and

32
00:01:29,760 --> 00:01:35,550
confirmed on top of this the

33
00:01:32,970 --> 00:01:37,650
cryptographic network underlying the

34
00:01:35,550 --> 00:01:40,530
blockchain wants to be paid for this

35
00:01:37,650 --> 00:01:43,230
service so there is transaction fees for

36
00:01:40,530 --> 00:01:45,060
every transaction it might not be a

37
00:01:43,230 --> 00:01:47,010
problem when you want to send thousands

38
00:01:45,060 --> 00:01:49,020
of dollars but when we talk about very

39
00:01:47,010 --> 00:01:51,720
very small payments this is actually

40
00:01:49,020 --> 00:01:55,408
quite an issue so the goal of our work

41
00:01:51,720 --> 00:01:58,350
is to change or to adapt this technology

42
00:01:55,409 --> 00:02:01,080
to allow micro transactions so really

43
00:01:58,350 --> 00:02:04,350
really small really fast payments that

44
00:02:01,080 --> 00:02:06,900
do not require many fees that can be

45
00:02:04,350 --> 00:02:08,669
executed almost instantly that are as

46
00:02:06,900 --> 00:02:11,299
secure as a normal transaction over the

47
00:02:08,669 --> 00:02:16,220
blockchain and that do not rely on any

48
00:02:11,299 --> 00:02:18,990
assumptions on connectivity to a network

49
00:02:16,220 --> 00:02:20,940
so how do we want to build this we want

50
00:02:18,990 --> 00:02:23,490
to build this with smart contracts

51
00:02:20,940 --> 00:02:25,470
contract is a piece of code which can be

52
00:02:23,490 --> 00:02:27,870
deployed to a blockchain some

53
00:02:25,470 --> 00:02:30,320
cryptocurrencies most notably aetherium

54
00:02:27,870 --> 00:02:33,870
specialized on smart contracts and

55
00:02:30,320 --> 00:02:36,959
parties can send coins to a contract

56
00:02:33,870 --> 00:02:40,350
which stores this money and can be

57
00:02:36,960 --> 00:02:42,620
triggered to execute code or evaluate

58
00:02:40,350 --> 00:02:45,269
data and then pay out these coins again

59
00:02:42,620 --> 00:02:47,580
but every time a contract is triggered

60
00:02:45,270 --> 00:02:49,650
that's again a transaction meaning we

61
00:02:47,580 --> 00:02:53,070
have to wait quite quite some time until

62
00:02:49,650 --> 00:02:54,720
this happens and it costs again money in

63
00:02:53,070 --> 00:02:59,570
this case the transaction fees are

64
00:02:54,720 --> 00:03:02,790
called gas so to give you a very short

65
00:02:59,570 --> 00:03:05,340
overview about our contribution the goal

66
00:03:02,790 --> 00:03:08,280
is to get micro transactions to

67
00:03:05,340 --> 00:03:09,900
cryptographic currencies and we want

68
00:03:08,280 --> 00:03:14,850
them to have these properties to be

69
00:03:09,900 --> 00:03:16,290
cheap fast offline and secure the whole

70
00:03:14,850 --> 00:03:18,960
system should be based on smart

71
00:03:16,290 --> 00:03:20,640
contracts and it should be it should

72
00:03:18,960 --> 00:03:22,200
work in a hub like network where

73
00:03:20,640 --> 00:03:26,190
everyone is connected to everyone else

74
00:03:22,200 --> 00:03:28,140
with at most one hub in particularly we

75
00:03:26,190 --> 00:03:30,150
are going to propose two types of

76
00:03:28,140 --> 00:03:31,920
payment channels the first one is a

77
00:03:30,150 --> 00:03:33,870
direct connection between two party

78
00:03:31,920 --> 00:03:36,390
which is based on a smart contract on

79
00:03:33,870 --> 00:03:38,640
the blockchain and the second one is a

80
00:03:36,390 --> 00:03:41,369
virtual channel which works in this hub

81
00:03:38,640 --> 00:03:43,890
network and relies not directly on the

82
00:03:41,370 --> 00:03:48,000
blockchain but on two underlying ledger

83
00:03:43,890 --> 00:03:51,000
based channels so after I give you a

84
00:03:48,000 --> 00:03:53,220
short motivation I now want to show you

85
00:03:51,000 --> 00:03:56,459
how to build such a ledger payment

86
00:03:53,220 --> 00:03:58,170
channel these kind of payment channels

87
00:03:56,459 --> 00:04:00,269
have been proposed in other literature's

88
00:03:58,170 --> 00:04:01,768
literature's as well most notably you

89
00:04:00,269 --> 00:04:05,280
might have heard about the lightning

90
00:04:01,769 --> 00:04:06,840
Bitcoin Lightning Network and the idea

91
00:04:05,280 --> 00:04:08,640
is always quite similar as you have

92
00:04:06,840 --> 00:04:11,190
three phases of a channel first you have

93
00:04:08,640 --> 00:04:13,410
to open it or fund it then it can be

94
00:04:11,190 --> 00:04:14,180
updated and last but not least it has to

95
00:04:13,410 --> 00:04:17,640
be closed again

96
00:04:14,180 --> 00:04:20,100
so if Alice and Bob want to open such a

97
00:04:17,640 --> 00:04:23,039
channel they create a channel contract

98
00:04:20,100 --> 00:04:25,620
and submit their funds into it so Alice

99
00:04:23,040 --> 00:04:28,500
locks the a coins and Bob locks CB coins

100
00:04:25,620 --> 00:04:29,820
now that the channel is funded we

101
00:04:28,500 --> 00:04:32,610
actually can't forget about the smart

102
00:04:29,820 --> 00:04:34,050
contract for now the channel can be now

103
00:04:32,610 --> 00:04:35,819
used off chain with

104
00:04:34,050 --> 00:04:37,940
out talking to the blockchain the

105
00:04:35,819 --> 00:04:41,629
cryptocurrency or the smart contract and

106
00:04:37,940 --> 00:04:44,539
the state of this channel is always

107
00:04:41,629 --> 00:04:47,580
displayed in a tuple which consists of

108
00:04:44,539 --> 00:04:52,020
the balance for Ellis the balance of Bob

109
00:04:47,580 --> 00:04:53,758
and a version counter this V so the

110
00:04:52,020 --> 00:04:56,669
initial balance that Alice and Bob have

111
00:04:53,759 --> 00:04:59,490
is the coins that I paid in the coins of

112
00:04:56,669 --> 00:05:01,229
B Point paid in and the version zero if

113
00:04:59,490 --> 00:05:03,840
Bob now wants to send some money to

114
00:05:01,229 --> 00:05:07,469
Ellis that say five points he proposes a

115
00:05:03,840 --> 00:05:09,960
new state which where he has five coins

116
00:05:07,469 --> 00:05:12,270
less and Ellis has five coins more so

117
00:05:09,960 --> 00:05:15,419
the new state of the channel has version

118
00:05:12,270 --> 00:05:17,430
1 and updated balances he proposes to

119
00:05:15,419 --> 00:05:20,190
state to Alice by sending her a message

120
00:05:17,430 --> 00:05:22,139
and what's important now is that he also

121
00:05:20,190 --> 00:05:24,300
includes a digital signature over this

122
00:05:22,139 --> 00:05:26,940
new state to show that he approved with

123
00:05:24,300 --> 00:05:29,669
this Alice will then verify that

124
00:05:26,940 --> 00:05:32,639
computed this correctly and confirmed

125
00:05:29,669 --> 00:05:35,609
this transaction by sending her

126
00:05:32,639 --> 00:05:37,620
signature back to Bob now both of these

127
00:05:35,610 --> 00:05:41,069
parties have an updated state with

128
00:05:37,620 --> 00:05:42,870
version number 1 and the counter

129
00:05:41,069 --> 00:05:45,000
signature of the other party so they can

130
00:05:42,870 --> 00:05:46,590
actually forget about the old state they

131
00:05:45,000 --> 00:05:49,380
only have to store at the latest state

132
00:05:46,590 --> 00:05:51,810
of the channel and what's really nice

133
00:05:49,380 --> 00:05:53,550
about this setup is that at this point

134
00:05:51,810 --> 00:05:55,770
they can do this as many times as they

135
00:05:53,550 --> 00:05:58,440
want they can just send these two

136
00:05:55,770 --> 00:06:00,150
messages to send a payment and they can

137
00:05:58,440 --> 00:06:02,190
do this as many times as they want and

138
00:06:00,150 --> 00:06:05,878
as fast as they can basically send two

139
00:06:02,190 --> 00:06:08,669
messages they can even be connected over

140
00:06:05,879 --> 00:06:10,199
some near-field communication technology

141
00:06:08,669 --> 00:06:13,139
we don't even need the internet for this

142
00:06:10,199 --> 00:06:15,150
basically and it's also secure and why

143
00:06:13,139 --> 00:06:16,770
it's secure gets a little bit clearer

144
00:06:15,150 --> 00:06:19,440
when we look at the third step the

145
00:06:16,770 --> 00:06:21,930
closing step where we have to go back to

146
00:06:19,440 --> 00:06:24,569
the channel so Elias proposes her latest

147
00:06:21,930 --> 00:06:26,460
state to the channel contract which were

148
00:06:24,569 --> 00:06:28,740
then first of all verifies if this is

149
00:06:26,460 --> 00:06:31,080
correct state so if no money has been

150
00:06:28,740 --> 00:06:33,509
created and it has been approved by both

151
00:06:31,080 --> 00:06:35,190
Alice and Bob the pendant channel

152
00:06:33,509 --> 00:06:38,310
doesn't actually do anything basically

153
00:06:35,190 --> 00:06:40,590
waits until Bob also sends his input

154
00:06:38,310 --> 00:06:42,120
this is important because Ellis could

155
00:06:40,590 --> 00:06:44,609
have lied about the latest state and

156
00:06:42,120 --> 00:06:46,230
sent an outdated version where maybe she

157
00:06:44,610 --> 00:06:48,810
owns a little bit more money than Bob

158
00:06:46,230 --> 00:06:51,180
so Bob now has enough time to see that

159
00:06:48,810 --> 00:06:53,430
his input is required on chain and sent

160
00:06:51,180 --> 00:06:56,040
this message he also sends his latest

161
00:06:53,430 --> 00:06:58,290
aid and if it's valid the channel

162
00:06:56,040 --> 00:07:00,720
contract can now compare these two

163
00:06:58,290 --> 00:07:03,930
states and select the newer version of

164
00:07:00,720 --> 00:07:08,010
two of them and payout the balances

165
00:07:03,930 --> 00:07:09,750
accordingly so as you can see this kind

166
00:07:08,010 --> 00:07:12,960
of channel is secured whenever the

167
00:07:09,750 --> 00:07:14,520
parties closely check whatever they sign

168
00:07:12,960 --> 00:07:16,940
because then they have the guarantee

169
00:07:14,520 --> 00:07:19,440
that they can always enforce whatever

170
00:07:16,940 --> 00:07:21,240
has been signed to them so if Bob

171
00:07:19,440 --> 00:07:25,140
promised a payment to Alice she knows

172
00:07:21,240 --> 00:07:27,510
she can enforce it this way so now let's

173
00:07:25,140 --> 00:07:29,310
go a step further and look at how we can

174
00:07:27,510 --> 00:07:33,360
build a virtual payment channel from to

175
00:07:29,310 --> 00:07:34,920
existing ledger payment channels this is

176
00:07:33,360 --> 00:07:36,720
also something which has been looked

177
00:07:34,920 --> 00:07:38,400
into from in the literature and most

178
00:07:36,720 --> 00:07:42,470
notably in the Bitcoin lightning Network

179
00:07:38,400 --> 00:07:45,150
paper and it has been considered how to

180
00:07:42,470 --> 00:07:47,940
route a transaction over an intermediary

181
00:07:45,150 --> 00:07:49,979
so in this case the intermediary here is

182
00:07:47,940 --> 00:07:52,140
called Ingrid and we have two channels

183
00:07:49,980 --> 00:07:54,270
one connecting Ellison Ingrid and one

184
00:07:52,140 --> 00:07:56,820
connecting Ingrid and Bob and now we can

185
00:07:54,270 --> 00:07:58,650
use her to route payment so in the

186
00:07:56,820 --> 00:08:01,740
Lightning Network this is called hash

187
00:07:58,650 --> 00:08:03,840
time log contracts and it works in a

188
00:08:01,740 --> 00:08:06,270
very simplified manner as follows Bob

189
00:08:03,840 --> 00:08:09,239
tells Alice that he wants to have want

190
00:08:06,270 --> 00:08:11,549
wants to send her payment allison goes

191
00:08:09,240 --> 00:08:14,040
to Ingrid and says hey look Bob wants to

192
00:08:11,550 --> 00:08:15,960
pay me some money and Ingrid says okay I

193
00:08:14,040 --> 00:08:18,120
promise you that I will give you that

194
00:08:15,960 --> 00:08:20,969
money if Bob gives me the money first

195
00:08:18,120 --> 00:08:23,570
and then she talks to Bob who will

196
00:08:20,970 --> 00:08:26,490
eventually send her the coin and then

197
00:08:23,570 --> 00:08:28,980
Ingrid fulfills her promise by sending

198
00:08:26,490 --> 00:08:31,080
another coin to Alice so this is really

199
00:08:28,980 --> 00:08:32,789
nice because it allows Alice and Bob to

200
00:08:31,080 --> 00:08:34,439
send payments without going down to the

201
00:08:32,789 --> 00:08:36,689
blockchain without opening a new channel

202
00:08:34,440 --> 00:08:38,370
or all this kind of stuff but the

203
00:08:36,690 --> 00:08:40,410
problem here is that it doesn't quite

204
00:08:38,370 --> 00:08:42,200
allow us to have micro transactions

205
00:08:40,409 --> 00:08:44,520
because every time we want such a

206
00:08:42,200 --> 00:08:46,440
payment to happen there's a lot of

207
00:08:44,520 --> 00:08:48,540
communication going on and inward is

208
00:08:46,440 --> 00:08:51,090
highly involved and of course she wants

209
00:08:48,540 --> 00:08:53,459
to be paid for this service she also has

210
00:08:51,090 --> 00:08:55,410
to be highly available for this and her

211
00:08:53,460 --> 00:08:57,399
availability limits the throughput of

212
00:08:55,410 --> 00:09:00,199
this kind of pain

213
00:08:57,399 --> 00:09:02,630
so what we want instead is actually

214
00:09:00,199 --> 00:09:05,389
build a new layer a new channel between

215
00:09:02,630 --> 00:09:08,060
Alice and Bob using Ingrid as backup

216
00:09:05,389 --> 00:09:09,649
but actually not involving her and this

217
00:09:08,060 --> 00:09:11,630
again gives us a nice features that we

218
00:09:09,649 --> 00:09:14,600
wanted to have micropayment ready

219
00:09:11,630 --> 00:09:16,610
channel so how do we build this well

220
00:09:14,600 --> 00:09:19,339
it's actually quite similar to before we

221
00:09:16,610 --> 00:09:20,930
have the open update and closed phases

222
00:09:19,339 --> 00:09:22,670
but instead of going to the blockchain

223
00:09:20,930 --> 00:09:26,599
for the opening closed we now go to

224
00:09:22,670 --> 00:09:28,519
Ingrid so Ellis proposes to Ingrid let's

225
00:09:26,600 --> 00:09:31,190
open let's update this channel between

226
00:09:28,519 --> 00:09:33,050
us in the following way one coin is

227
00:09:31,190 --> 00:09:34,250
subtracted on my side one coin is

228
00:09:33,050 --> 00:09:37,130
obstructed on your side

229
00:09:34,250 --> 00:09:39,470
so the two coins that are suddenly now

230
00:09:37,130 --> 00:09:41,560
not in the balances are locked for this

231
00:09:39,470 --> 00:09:44,480
virtual channel between Alice and Bob

232
00:09:41,560 --> 00:09:46,279
Ingrid waits until Bob also confirms or

233
00:09:44,480 --> 00:09:48,589
also proposes such an update on the

234
00:09:46,279 --> 00:09:51,470
other side and then agrees and says okay

235
00:09:48,589 --> 00:09:53,509
great let's open such a channel at this

236
00:09:51,470 --> 00:09:56,120
point again we have a new layer a new

237
00:09:53,509 --> 00:09:57,350
channel between Alice and Bob and Ingrid

238
00:09:56,120 --> 00:10:00,380
doesn't have to be involved at this

239
00:09:57,350 --> 00:10:01,579
point what they have to know at what

240
00:10:00,380 --> 00:10:03,980
that is involved need to know for this

241
00:10:01,579 --> 00:10:08,359
is the confirmation from Ingrid that she

242
00:10:03,980 --> 00:10:10,190
agreed to opening such a channel and the

243
00:10:08,360 --> 00:10:12,079
new channel is funded now from one side

244
00:10:10,190 --> 00:10:14,269
from Alice's side with one coin and from

245
00:10:12,079 --> 00:10:16,969
Bob side with one coin as well the

246
00:10:14,269 --> 00:10:19,010
update is pretty much identical to what

247
00:10:16,970 --> 00:10:21,019
we've seen before so we have a channel

248
00:10:19,010 --> 00:10:23,060
state and if Bob wants have sent his

249
00:10:21,019 --> 00:10:25,279
coin to Ellis he proposes the news state

250
00:10:23,060 --> 00:10:28,189
where she gets this coin since his

251
00:10:25,279 --> 00:10:30,949
census statement and a signature and so

252
00:10:28,190 --> 00:10:33,110
on so again they do the update as many

253
00:10:30,949 --> 00:10:35,089
times as they want and once they want to

254
00:10:33,110 --> 00:10:38,060
close the channel again they go down to

255
00:10:35,089 --> 00:10:40,639
Ingrid Alice sends the latest version of

256
00:10:38,060 --> 00:10:42,888
the virtual Channel state to Ingrid and

257
00:10:40,639 --> 00:10:45,709
includes her own signature in Bob's to

258
00:10:42,889 --> 00:10:47,660
say look here's proof both of us are

259
00:10:45,709 --> 00:10:49,638
completely fine with this state

260
00:10:47,660 --> 00:10:51,529
Ingrid now needs to make sure that this

261
00:10:49,639 --> 00:10:54,439
is the latest date so she again also

262
00:10:51,529 --> 00:10:56,420
asks Bob if Bob sends the same statement

263
00:10:54,439 --> 00:10:58,459
she knows that they agree on whatever

264
00:10:56,420 --> 00:11:00,259
distribution in that virtual channel

265
00:10:58,459 --> 00:11:02,449
should have happened and then she

266
00:11:00,259 --> 00:11:04,699
proposes an update to the underlying

267
00:11:02,449 --> 00:11:07,790
little channel so to update these two

268
00:11:04,699 --> 00:11:09,260
channels in the following way

269
00:11:07,790 --> 00:11:11,599
that the two coins that were blocked

270
00:11:09,260 --> 00:11:14,540
before are now unlocked in the favor of

271
00:11:11,600 --> 00:11:16,730
the left side so in this channel Ellis

272
00:11:14,540 --> 00:11:18,860
gets the two coins which means that

273
00:11:16,730 --> 00:11:20,180
Ingrid actually lost the coin but that's

274
00:11:18,860 --> 00:11:22,160
not a problem because under the other

275
00:11:20,180 --> 00:11:24,260
channel she actually gets the two coins

276
00:11:22,160 --> 00:11:27,439
that were locked before in her favor and

277
00:11:24,260 --> 00:11:29,390
Bob lost one coin so Ingrid stays

278
00:11:27,440 --> 00:11:31,580
financially neutral she didn't lose any

279
00:11:29,390 --> 00:11:33,800
coins but on the other hand has a coin

280
00:11:31,580 --> 00:11:36,560
less and Ellis has a coin more so the

281
00:11:33,800 --> 00:11:38,209
payment happened this financial

282
00:11:36,560 --> 00:11:40,369
neutrality is actually one of the

283
00:11:38,210 --> 00:11:45,560
important security properties that we

284
00:11:40,370 --> 00:11:47,630
wanted to prove in our work so this is

285
00:11:45,560 --> 00:11:49,339
one property another one is that all of

286
00:11:47,630 --> 00:11:51,410
the parties involved in a channel always

287
00:11:49,340 --> 00:11:53,420
have to have consensus on whether a

288
00:11:51,410 --> 00:11:57,079
channel has been opened updated or

289
00:11:53,420 --> 00:11:59,689
closed third property is that whenever

290
00:11:57,080 --> 00:12:01,820
someone promised to pay a person by

291
00:11:59,690 --> 00:12:03,890
sending a signature in a new state the

292
00:12:01,820 --> 00:12:06,290
other person has the guarantee that you

293
00:12:03,890 --> 00:12:09,530
can enforce this payment guarantee

294
00:12:06,290 --> 00:12:11,209
payout and for Ingrid it's very

295
00:12:09,530 --> 00:12:12,890
important that she knows that at some

296
00:12:11,210 --> 00:12:15,470
point the coins that she looked for

297
00:12:12,890 --> 00:12:18,020
Alice Bob can be unlocked again and for

298
00:12:15,470 --> 00:12:20,510
this purpose the virtual channel has now

299
00:12:18,020 --> 00:12:22,730
another property of validity so a fixed

300
00:12:20,510 --> 00:12:24,830
time for which this channel in the

301
00:12:22,730 --> 00:12:26,600
channel is her life and Ingrid cannot do

302
00:12:24,830 --> 00:12:29,360
anything about this but after this

303
00:12:26,600 --> 00:12:32,060
validity past Ingrid can request to

304
00:12:29,360 --> 00:12:33,530
close this channel and of course this

305
00:12:32,060 --> 00:12:36,500
has to hold even if all the other

306
00:12:33,530 --> 00:12:38,900
players Klute this is only an informal

307
00:12:36,500 --> 00:12:40,940
overview of the security properties that

308
00:12:38,900 --> 00:12:43,459
we analyzed but in the paper we did a

309
00:12:40,940 --> 00:12:48,680
thorough modeling and you see proof of

310
00:12:43,460 --> 00:12:51,230
these protocols let's also look at the

311
00:12:48,680 --> 00:12:53,359
performance of this so we compare three

312
00:12:51,230 --> 00:12:55,750
scenarios first the ledger channel which

313
00:12:53,360 --> 00:12:58,160
is opened and closed on chained and

314
00:12:55,750 --> 00:13:00,230
updated completely off chain directly

315
00:12:58,160 --> 00:13:01,310
between Alice and Bob so here this blue

316
00:13:00,230 --> 00:13:04,280
color means we get this nice

317
00:13:01,310 --> 00:13:06,400
micropayment properties and the closing

318
00:13:04,280 --> 00:13:08,660
we have actually two different

319
00:13:06,400 --> 00:13:11,990
possibilities the first case is where

320
00:13:08,660 --> 00:13:14,300
Alice and Bob degree and no problem

321
00:13:11,990 --> 00:13:16,400
occurred and the disagreement case where

322
00:13:14,300 --> 00:13:18,380
suddenly some problem happens one person

323
00:13:16,400 --> 00:13:19,370
goes offline or they start sending

324
00:13:18,380 --> 00:13:22,720
different state

325
00:13:19,370 --> 00:13:25,160
States so we implemented

326
00:13:22,720 --> 00:13:28,910
proof-of-concept smart contract for this

327
00:13:25,160 --> 00:13:30,439
and measured the costs for this actually

328
00:13:28,910 --> 00:13:33,140
due to the rapid changing in

329
00:13:30,440 --> 00:13:38,810
cryptocurrency values this value is

330
00:13:33,140 --> 00:13:41,300
currently halfed and so a ledger channel

331
00:13:38,810 --> 00:13:43,699
has to be a letter channel has to be

332
00:13:41,300 --> 00:13:47,329
closed open and closed on chain and this

333
00:13:43,700 --> 00:13:49,700
can take either 50 cents to close or 55

334
00:13:47,330 --> 00:13:51,740
cents because this agreement is always a

335
00:13:49,700 --> 00:13:54,650
little bit more expensive than agreement

336
00:13:51,740 --> 00:13:57,680
in the lightning construction the hash

337
00:13:54,650 --> 00:13:59,420
time lock network we don't really have

338
00:13:57,680 --> 00:14:01,310
open and close of a channel but we can

339
00:13:59,420 --> 00:14:03,849
send transactions via Ingrid so every

340
00:14:01,310 --> 00:14:06,319
time Ingrid is involved and only in case

341
00:14:03,850 --> 00:14:08,660
someone of them disagrees goes offline

342
00:14:06,320 --> 00:14:11,270
or starts misbehaving we have to go down

343
00:14:08,660 --> 00:14:12,980
on chain the same happens in the virtual

344
00:14:11,270 --> 00:14:16,100
channel only in the very worst case we

345
00:14:12,980 --> 00:14:18,230
go on chain but the channel can be open

346
00:14:16,100 --> 00:14:20,450
and closed with Ingrid and completely

347
00:14:18,230 --> 00:14:21,980
updated off chain directly between Alice

348
00:14:20,450 --> 00:14:24,500
and Bob so here we have again the nice

349
00:14:21,980 --> 00:14:26,690
micro payment properties a nice

350
00:14:24,500 --> 00:14:28,279
observation in this case is that the fee

351
00:14:26,690 --> 00:14:30,589
model for Ingrid actually changes a

352
00:14:28,279 --> 00:14:32,689
little bit in these two cases so in the

353
00:14:30,589 --> 00:14:34,790
hash time lock network Ingrid is paid

354
00:14:32,690 --> 00:14:36,770
for every transaction is routed over her

355
00:14:34,790 --> 00:14:39,920
so for every transaction she gets a fee

356
00:14:36,770 --> 00:14:41,900
in the virtual channel she is paid for

357
00:14:39,920 --> 00:14:45,829
the time that she has to lock the money

358
00:14:41,900 --> 00:14:49,040
so for this validity time so the

359
00:14:45,830 --> 00:14:53,540
business or the applications when which

360
00:14:49,040 --> 00:14:54,800
channel makes sense also changes okay

361
00:14:53,540 --> 00:14:58,279
now I want to give you a quick summary

362
00:14:54,800 --> 00:15:00,430
because I'm running out of time in this

363
00:14:58,279 --> 00:15:03,439
work we proposed a new formalism for

364
00:15:00,430 --> 00:15:05,209
payment channels and a new construction

365
00:15:03,440 --> 00:15:07,160
called virtual payment channels which

366
00:15:05,209 --> 00:15:09,109
can be open and closed without going to

367
00:15:07,160 --> 00:15:13,790
the blockchain and can be updated

368
00:15:09,110 --> 00:15:15,260
without the intermediary virtual payment

369
00:15:13,790 --> 00:15:17,540
channels and payment channels have the

370
00:15:15,260 --> 00:15:19,130
same assumptions as the underlying

371
00:15:17,540 --> 00:15:21,079
blockchain system so we trust the

372
00:15:19,130 --> 00:15:23,180
majority of the network but not anyone

373
00:15:21,080 --> 00:15:24,620
else in particular especially not the

374
00:15:23,180 --> 00:15:27,680
other side of the payment channel or

375
00:15:24,620 --> 00:15:30,380
Ingrid we also prove that this is secure

376
00:15:27,680 --> 00:15:31,650
in the UC model and we have been working

377
00:15:30,380 --> 00:15:34,590
on some extent

378
00:15:31,650 --> 00:15:36,420
the first one is where we said to keep a

379
00:15:34,590 --> 00:15:38,190
mention of the school but since we are

380
00:15:36,420 --> 00:15:39,870
in a smart contract world we also want

381
00:15:38,190 --> 00:15:41,580
smart contracts to run inside of

382
00:15:39,870 --> 00:15:44,190
channels so that's called a state

383
00:15:41,580 --> 00:15:46,940
channel and this has been proposed this

384
00:15:44,190 --> 00:15:49,620
has been presented at CCS last year and

385
00:15:46,940 --> 00:15:51,870
another extension is where we went from

386
00:15:49,620 --> 00:15:54,750
the two-party case to the end party case

387
00:15:51,870 --> 00:15:58,350
and this has been presented at your

388
00:15:54,750 --> 00:16:10,500
crypt today actually so yes thank you

389
00:15:58,350 --> 00:16:15,830
very much for your attention thank you

390
00:16:10,500 --> 00:16:15,830
very much so we have time for questions

391
00:16:19,730 --> 00:16:23,880
thanks for the great work I have a

392
00:16:22,560 --> 00:16:26,040
question regarding your comment on

393
00:16:23,880 --> 00:16:28,050
offline being offline and exchanging

394
00:16:26,040 --> 00:16:29,910
data without having an internet

395
00:16:28,050 --> 00:16:31,079
connection obviously one of the two

396
00:16:29,910 --> 00:16:32,400
parties can't have an internet

397
00:16:31,080 --> 00:16:34,550
connection address early close the

398
00:16:32,400 --> 00:16:37,170
channel so how do you suggest we

399
00:16:34,550 --> 00:16:39,900
mitigate that as through watchtowers or

400
00:16:37,170 --> 00:16:41,849
what is your solution here yes so that's

401
00:16:39,900 --> 00:16:45,150
right the object offline assumption is

402
00:16:41,850 --> 00:16:46,620
only a short term so you have to from

403
00:16:45,150 --> 00:16:48,209
time to time look at the blockchain to

404
00:16:46,620 --> 00:16:51,180
see if the other party started closing

405
00:16:48,210 --> 00:16:52,980
the channel for the direct payment you

406
00:16:51,180 --> 00:16:55,319
don't need a connection and an online

407
00:16:52,980 --> 00:16:57,480
connection but for the security of the

408
00:16:55,320 --> 00:17:00,150
underlying protocol you have to specify

409
00:16:57,480 --> 00:17:01,800
the time interval that you have to look

410
00:17:00,150 --> 00:17:04,950
at the blockchain and watchtowers is

411
00:17:01,800 --> 00:17:06,960
actually a nice idea which helps to

412
00:17:04,950 --> 00:17:09,210
outsource this service of watching the

413
00:17:06,960 --> 00:17:13,700
blockchain to a third party and that's a

414
00:17:09,210 --> 00:17:13,700
very interesting ongoing work yep

415
00:17:19,700 --> 00:17:25,040
I looked as the tells from Samsung

416
00:17:22,160 --> 00:17:28,070
research America this may be a naive

417
00:17:25,040 --> 00:17:30,980
question but it are there any potential

418
00:17:28,069 --> 00:17:32,240
timing exploits when someone makes a

419
00:17:30,980 --> 00:17:35,570
payment as you said the value of

420
00:17:32,240 --> 00:17:38,690
cryptocurrency changes very very fast so

421
00:17:35,570 --> 00:17:40,790
could you get some cooperation to only

422
00:17:38,690 --> 00:17:42,620
accept the payment or only allow the

423
00:17:40,790 --> 00:17:44,600
transaction to come through if the

424
00:17:42,620 --> 00:17:47,899
currency has gone up this would be

425
00:17:44,600 --> 00:17:50,030
similar to getting an option I have the

426
00:17:47,900 --> 00:17:51,740
option to receive your money or I'll

427
00:17:50,030 --> 00:17:53,870
just wait and let it timeout if the

428
00:17:51,740 --> 00:17:56,180
currency has not raised in value while

429
00:17:53,870 --> 00:17:59,209
I'm working on receiving the transaction

430
00:17:56,180 --> 00:18:01,820
okay so yes that's an important issue

431
00:17:59,210 --> 00:18:03,440
that if you have a payment journalist

432
00:18:01,820 --> 00:18:04,939
where you lock up money for a certain

433
00:18:03,440 --> 00:18:07,430
amount of time and then you only talk

434
00:18:04,940 --> 00:18:11,390
about absolute coin values not about the

435
00:18:07,430 --> 00:18:12,380
actual US dollar value of whatever

436
00:18:11,390 --> 00:18:15,200
you're talking about

437
00:18:12,380 --> 00:18:16,580
so if someone proposes a payment which

438
00:18:15,200 --> 00:18:18,200
is unattractive to you you can always

439
00:18:16,580 --> 00:18:21,340
say no I don't want to receive this

440
00:18:18,200 --> 00:18:21,340
payment and not confirm it

441
00:18:33,860 --> 00:18:39,889
yes so you have to if you promise money

442
00:18:37,760 --> 00:18:41,270
in the first time and then you at some

443
00:18:39,890 --> 00:18:44,060
point and then you wait a lot of time

444
00:18:41,270 --> 00:18:46,610
until the price of it increased a lot

445
00:18:44,060 --> 00:18:48,560
then this money that was promised to you

446
00:18:46,610 --> 00:18:50,139
might be worth much more than at the

447
00:18:48,560 --> 00:18:52,250
point where it was promised to you and

448
00:18:50,140 --> 00:18:55,160
there's not much you can do about it

449
00:18:52,250 --> 00:19:00,800
except for closing the channel whenever

450
00:18:55,160 --> 00:19:03,650
it starts becoming unattractive thanks

451
00:19:00,800 --> 00:19:05,629
for a great talk would it be easy for

452
00:19:03,650 --> 00:19:07,190
Ingrid to do a conversion between

453
00:19:05,630 --> 00:19:10,100
different block chains or even different

454
00:19:07,190 --> 00:19:13,220
cryptocurrencies yeah that's a very

455
00:19:10,100 --> 00:19:15,290
interesting question and yes this is

456
00:19:13,220 --> 00:19:16,880
possible it's not in the works right now

457
00:19:15,290 --> 00:19:19,220
the people are working on this and

458
00:19:16,880 --> 00:19:21,560
there's especially with the virtual

459
00:19:19,220 --> 00:19:23,270
channel there's a nice idea of having

460
00:19:21,560 --> 00:19:24,500
like a Bitcoin channel and a serum

461
00:19:23,270 --> 00:19:26,030
channel and then a virtual connection

462
00:19:24,500 --> 00:19:31,130
between two parties in different

463
00:19:26,030 --> 00:19:34,600
currencies so yeah we are running out of

464
00:19:31,130 --> 00:19:34,600
time thank you very much again

465
00:19:34,820 --> 00:19:39,320
[Applause]

