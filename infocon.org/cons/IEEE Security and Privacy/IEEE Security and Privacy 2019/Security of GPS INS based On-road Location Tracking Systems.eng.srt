1
00:00:09,940 --> 00:00:15,549
hello everyone thank you for attending

2
00:00:12,070 --> 00:00:18,130
this talk location information is

3
00:00:15,549 --> 00:00:21,880
critical for many navigation and

4
00:00:18,130 --> 00:00:23,918
tracking applications GPA GPS is the de

5
00:00:21,880 --> 00:00:26,830
facto standard that enables avoid

6
00:00:23,919 --> 00:00:29,349
adoption of these applications one

7
00:00:26,830 --> 00:00:32,080
serious problem with GPS however is that

8
00:00:29,349 --> 00:00:34,780
it is shown to be vulnerable to signal

9
00:00:32,080 --> 00:00:36,879
spoofing attacks this is because of a

10
00:00:34,780 --> 00:00:39,670
lack of authentication in the standard

11
00:00:36,879 --> 00:00:42,010
and also because the power level of the

12
00:00:39,670 --> 00:00:46,239
real signal is quite weak in the order

13
00:00:42,010 --> 00:00:48,489
of nano watts as such a receiver has no

14
00:00:46,239 --> 00:00:51,280
way of differentiating between real and

15
00:00:48,489 --> 00:00:54,129
fake signals and this enables an

16
00:00:51,280 --> 00:00:57,370
attacker to force a receiver to lock

17
00:00:54,129 --> 00:01:01,300
onto fake signals by transmitting these

18
00:00:57,370 --> 00:01:04,089
signals as a slightly higher power there

19
00:01:01,300 --> 00:01:06,850
is significant research in the area of

20
00:01:04,089 --> 00:01:10,420
GPS spoofing that shows how serious this

21
00:01:06,850 --> 00:01:13,419
vulnerability is using cheap and readily

22
00:01:10,420 --> 00:01:16,300
available software-defined radios it is

23
00:01:13,420 --> 00:01:19,450
currently possible to change the course

24
00:01:16,300 --> 00:01:22,630
of a ship or even force a drone to land

25
00:01:19,450 --> 00:01:25,030
in a hostile area there are many other

26
00:01:22,630 --> 00:01:27,310
implications such as the possibility for

27
00:01:25,030 --> 00:01:29,470
a criminal to escape by spoofing their

28
00:01:27,310 --> 00:01:31,450
location or it can be something as

29
00:01:29,470 --> 00:01:34,289
simple as cheating in a game like

30
00:01:31,450 --> 00:01:34,289
Pokemon go

31
00:01:34,500 --> 00:01:40,330
so inertial navigation systems or I

32
00:01:37,780 --> 00:01:42,520
honest have been considered as a popular

33
00:01:40,330 --> 00:01:45,160
complementary system especially in road

34
00:01:42,520 --> 00:01:47,800
transportation many big companies like

35
00:01:45,160 --> 00:01:50,738
vector nav Honeywell and NAVTEQ have

36
00:01:47,800 --> 00:01:52,959
deployed GPS Ina's based systems for

37
00:01:50,739 --> 00:01:56,500
improved navigation and tracking of

38
00:01:52,959 --> 00:01:58,950
vehicles even though sensors are

39
00:01:56,500 --> 00:02:01,720
inherently noisy and drift over time

40
00:01:58,950 --> 00:02:04,020
these constraints in the road networks

41
00:02:01,720 --> 00:02:07,869
themselves still allow for better

42
00:02:04,020 --> 00:02:10,389
navigation applications moreover these

43
00:02:07,869 --> 00:02:12,370
sensors are resilient to spoofing and

44
00:02:10,389 --> 00:02:14,859
jamming attacks which makes them very

45
00:02:12,370 --> 00:02:19,420
attractive for use in tracking

46
00:02:14,860 --> 00:02:22,330
applications this work is one of the

47
00:02:19,420 --> 00:02:23,530
first to study the security of GPS is

48
00:02:22,330 --> 00:02:28,120
based on Road law

49
00:02:23,530 --> 00:02:30,850
tracking systems we answer the questions

50
00:02:28,120 --> 00:02:33,550
such as can a driver of a vehicle

51
00:02:30,850 --> 00:02:35,260
carrying high-value commodities prove

52
00:02:33,550 --> 00:02:37,450
their assigned route and travel to

53
00:02:35,260 --> 00:02:40,630
destinations without detection by a

54
00:02:37,450 --> 00:02:42,459
monitoring center if this is possible

55
00:02:40,630 --> 00:02:44,920
how far can they actually deviate from

56
00:02:42,459 --> 00:02:47,110
the intended destination another

57
00:02:44,920 --> 00:02:49,720
question could be can a payroll with a

58
00:02:47,110 --> 00:02:51,670
GPS I honest ankle monitor prove their

59
00:02:49,720 --> 00:02:56,260
location and travel two routes without

60
00:02:51,670 --> 00:02:58,809
detection we study the security of these

61
00:02:56,260 --> 00:03:02,410
systems by building algorithms that

62
00:02:58,810 --> 00:03:04,959
generate thousands of routes to

63
00:03:02,410 --> 00:03:09,489
different destinations these routes are

64
00:03:04,959 --> 00:03:12,489
generated such that they they completely

65
00:03:09,489 --> 00:03:17,920
evade GPS is based location tracking

66
00:03:12,489 --> 00:03:20,290
systems during the initial reviews of

67
00:03:17,920 --> 00:03:22,000
our paper one of the reviewers commented

68
00:03:20,290 --> 00:03:24,670
about the difficulty of real-time

69
00:03:22,000 --> 00:03:28,000
spoofing due to variability in traffic

70
00:03:24,670 --> 00:03:30,880
conditions that prompted us to implement

71
00:03:28,000 --> 00:03:33,400
the first real-time integrated GPS ina

72
00:03:30,880 --> 00:03:36,000
spoofer that accounts for traffic

73
00:03:33,400 --> 00:03:38,650
fluidity traffic lights and stop signs

74
00:03:36,000 --> 00:03:42,100
this poofer dynamically generates

75
00:03:38,650 --> 00:03:44,380
spoofing signals based on the real GPS

76
00:03:42,100 --> 00:03:49,120
signal and it works quite well in the

77
00:03:44,380 --> 00:03:51,790
real world so in this attack the goal of

78
00:03:49,120 --> 00:03:55,420
an attacker is to spoof their location

79
00:03:51,790 --> 00:03:58,540
and drive a route that is different from

80
00:03:55,420 --> 00:04:01,298
their intended route this attacker first

81
00:03:58,540 --> 00:04:03,400
downloads a road network of the city and

82
00:04:01,299 --> 00:04:07,269
then constructs a graph from this

83
00:04:03,400 --> 00:04:09,579
network next whenever the attacker wants

84
00:04:07,269 --> 00:04:12,579
to spoof their destination they give

85
00:04:09,579 --> 00:04:16,180
their source and destination as input to

86
00:04:12,579 --> 00:04:18,850
an attack algorithm this algorithm first

87
00:04:16,180 --> 00:04:21,250
generates a set of spoof routes that are

88
00:04:18,850 --> 00:04:24,970
alternative routes an attacker can take

89
00:04:21,250 --> 00:04:27,460
to drive to the intended destination the

90
00:04:24,970 --> 00:04:30,580
idea behind these proof routes is to

91
00:04:27,460 --> 00:04:33,609
find routes that have a high likelihood

92
00:04:30,580 --> 00:04:37,419
of topologically similar routes to other

93
00:04:33,610 --> 00:04:40,450
destinations of the city now

94
00:04:37,420 --> 00:04:44,890
the algorithm uses these poof routes as

95
00:04:40,450 --> 00:04:47,440
input inputs to generate hundreds of

96
00:04:44,890 --> 00:04:49,900
escape routes and these escape routes

97
00:04:47,440 --> 00:04:52,330
are the ones that the attacker will take

98
00:04:49,900 --> 00:04:54,310
to drive to different destinations

99
00:04:52,330 --> 00:04:58,419
without detection by a GPS I honest

100
00:04:54,310 --> 00:05:01,180
tracking system finally the attacker

101
00:04:58,420 --> 00:05:03,970
chooses a pair of spoof and escape

102
00:05:01,180 --> 00:05:06,790
routes to reach a specific destination

103
00:05:03,970 --> 00:05:11,130
and they feed this pair to a real-time

104
00:05:06,790 --> 00:05:13,990
GPS spoofer to execute the final attack

105
00:05:11,130 --> 00:05:16,870
here is a more visual representation of

106
00:05:13,990 --> 00:05:19,240
this attack in this specific case the

107
00:05:16,870 --> 00:05:21,880
attacker is expected to travel from the

108
00:05:19,240 --> 00:05:24,760
green marker to the red marker and the

109
00:05:21,880 --> 00:05:28,330
green line here shows the shortest route

110
00:05:24,760 --> 00:05:30,670
between these end points however when

111
00:05:28,330 --> 00:05:34,030
these endpoints are given as input to an

112
00:05:30,670 --> 00:05:36,730
attack algorithm the algorithm computes

113
00:05:34,030 --> 00:05:40,989
a set of spoof routes that are

114
00:05:36,730 --> 00:05:43,930
represented here by the red lines now

115
00:05:40,990 --> 00:05:47,830
the algorithm uses the spoof routes as

116
00:05:43,930 --> 00:05:49,990
input to generate escape routes and two

117
00:05:47,830 --> 00:05:52,960
of them are shown here by the blue lines

118
00:05:49,990 --> 00:05:55,540
so you'll observe that these blue lines

119
00:05:52,960 --> 00:05:58,299
that is the escape routes and add a

120
00:05:55,540 --> 00:06:01,870
destination different from the red line

121
00:05:58,300 --> 00:06:05,080
that is a spoof route however they are

122
00:06:01,870 --> 00:06:08,140
very similar in terms of turn angles and

123
00:06:05,080 --> 00:06:10,419
curvatures so using this technique an

124
00:06:08,140 --> 00:06:13,210
attacker can generate hundreds or

125
00:06:10,420 --> 00:06:15,970
possibly thousands of escape routes to

126
00:06:13,210 --> 00:06:17,830
different destinations of a city in this

127
00:06:15,970 --> 00:06:20,500
specific case you can see that the

128
00:06:17,830 --> 00:06:25,630
attacker would be able to cover almost a

129
00:06:20,500 --> 00:06:27,550
quarter of central Manhattan so moving

130
00:06:25,630 --> 00:06:29,320
on to our technique I'll explain the

131
00:06:27,550 --> 00:06:32,110
graph construction first using an

132
00:06:29,320 --> 00:06:34,510
example road network in this specific

133
00:06:32,110 --> 00:06:38,950
network the edges that are represented

134
00:06:34,510 --> 00:06:40,810
by the red dots form the graph the

135
00:06:38,950 --> 00:06:44,110
intersections are form the graph edges

136
00:06:40,810 --> 00:06:46,690
and they contain the turn angle with the

137
00:06:44,110 --> 00:06:48,700
connected vertices the route between

138
00:06:46,690 --> 00:06:50,030
these intersections form the graph

139
00:06:48,700 --> 00:06:52,490
vertices and they

140
00:06:50,030 --> 00:06:55,369
contain the road curvature and the

141
00:06:52,490 --> 00:06:57,560
travel time between the endpoints this

142
00:06:55,370 --> 00:07:02,480
specific road network translates to the

143
00:06:57,560 --> 00:07:04,400
graph that is shown so previously I had

144
00:07:02,480 --> 00:07:07,130
mentioned that an attacker can travel

145
00:07:04,400 --> 00:07:09,469
using spoof routes that maximize the

146
00:07:07,130 --> 00:07:11,409
likelihood of finding topologically

147
00:07:09,470 --> 00:07:15,440
similar routes to other destinations

148
00:07:11,410 --> 00:07:17,450
this can be done by scoring and sorting

149
00:07:15,440 --> 00:07:19,310
routes based on the probability of

150
00:07:17,450 --> 00:07:22,099
occurrence in other sections of the

151
00:07:19,310 --> 00:07:23,990
graph for example if you look at the

152
00:07:22,100 --> 00:07:26,420
turn and curvature distribution of

153
00:07:23,990 --> 00:07:28,700
Manhattan you'll observe that the

154
00:07:26,420 --> 00:07:30,680
probability of 90-degree turns and

155
00:07:28,700 --> 00:07:33,740
straight roads is much higher than the

156
00:07:30,680 --> 00:07:36,260
others intuitively a route that has a

157
00:07:33,740 --> 00:07:38,510
higher likelihood of spoofing would most

158
00:07:36,260 --> 00:07:42,260
likely contain all 90-degree turns and

159
00:07:38,510 --> 00:07:44,360
straight roads in fact this is true for

160
00:07:42,260 --> 00:07:46,340
all major cities of the world I'll

161
00:07:44,360 --> 00:07:48,800
discuss these cities during evaluation

162
00:07:46,340 --> 00:07:51,109
however here you'll observe that all of

163
00:07:48,800 --> 00:07:55,700
them have a majority of 90-degree turns

164
00:07:51,110 --> 00:07:57,740
and straight roads the algorithm for

165
00:07:55,700 --> 00:07:59,300
generating these spoof routes is an

166
00:07:57,740 --> 00:08:02,240
extension of the DEF first search

167
00:07:59,300 --> 00:08:05,180
algorithm these extensions are very

168
00:08:02,240 --> 00:08:07,370
specific to the attack so I'm going to

169
00:08:05,180 --> 00:08:10,130
abstract away from the technical details

170
00:08:07,370 --> 00:08:13,820
and they are all described in detail in

171
00:08:10,130 --> 00:08:17,659
our paper however at a high level this

172
00:08:13,820 --> 00:08:20,180
algorithm filters all the routes that

173
00:08:17,660 --> 00:08:22,790
are unlikely to reach the desk unlikely

174
00:08:20,180 --> 00:08:26,090
to be taken by a regular user to reach a

175
00:08:22,790 --> 00:08:27,920
specific destination a good example of

176
00:08:26,090 --> 00:08:30,200
filtering could be a route that keeps

177
00:08:27,920 --> 00:08:33,590
moving south when the destination is

178
00:08:30,200 --> 00:08:36,289
actually too busy North the algorithm

179
00:08:33,590 --> 00:08:39,260
scores all these remaining valid routes

180
00:08:36,289 --> 00:08:40,939
using compound probabilities based on

181
00:08:39,260 --> 00:08:45,530
the turn and curvature distribution of

182
00:08:40,940 --> 00:08:48,410
the city as I described previously in

183
00:08:45,530 --> 00:08:51,319
the end this algorithm selects the top

184
00:08:48,410 --> 00:08:54,050
scoring routes as these poof routes and

185
00:08:51,320 --> 00:08:57,560
they are given as inputs to generate the

186
00:08:54,050 --> 00:09:00,949
escape routes in our evaluation we chose

187
00:08:57,560 --> 00:09:03,050
the top hundred spoof routes in order to

188
00:09:00,950 --> 00:09:03,800
perform simulations for thousands of

189
00:09:03,050 --> 00:09:06,529
different routes

190
00:09:03,800 --> 00:09:08,868
however this attack performance can be

191
00:09:06,529 --> 00:09:12,860
significantly improved by choosing many

192
00:09:08,869 --> 00:09:16,819
more top routes a question that now

193
00:09:12,860 --> 00:09:18,619
arises is now that we have accept or

194
00:09:16,819 --> 00:09:21,949
spoof routes how do we use them to

195
00:09:18,619 --> 00:09:24,139
generate escape routes this can be done

196
00:09:21,949 --> 00:09:26,569
by exploiting the inherent noise that

197
00:09:24,139 --> 00:09:29,809
impacts accelerometers gyroscopes and

198
00:09:26,569 --> 00:09:31,849
magnetometer sensors for this work we

199
00:09:29,809 --> 00:09:34,819
use an open data set of sensor

200
00:09:31,850 --> 00:09:37,069
recordings for 140 routes and calculated

201
00:09:34,819 --> 00:09:39,799
how much this sensor data deviated from

202
00:09:37,069 --> 00:09:42,110
the true expected values this slide

203
00:09:39,799 --> 00:09:43,999
shows the accelerometer bearing turn and

204
00:09:42,110 --> 00:09:47,029
curvature errors calculated from the

205
00:09:43,999 --> 00:09:49,519
sensor data and in our algorithm we set

206
00:09:47,029 --> 00:09:52,100
the error threshold to 75 percentile of

207
00:09:49,519 --> 00:09:53,959
these values this essentially means that

208
00:09:52,100 --> 00:09:56,600
the attack algorithm uses much more

209
00:09:53,959 --> 00:09:58,939
accurate sensors then those use in this

210
00:09:56,600 --> 00:10:02,689
data set and those typically present in

211
00:09:58,939 --> 00:10:05,209
most modern smartphones the escape

212
00:10:02,689 --> 00:10:07,929
routes generation algorithm must ensure

213
00:10:05,209 --> 00:10:10,489
that the output escape routes are

214
00:10:07,929 --> 00:10:13,369
topologically very similar to the input

215
00:10:10,490 --> 00:10:15,170
spoof routes while also accounting for

216
00:10:13,369 --> 00:10:17,389
the fact that these routes may contain

217
00:10:15,170 --> 00:10:20,389
different curvatures turn angles and

218
00:10:17,389 --> 00:10:24,999
route distances and the filtering here

219
00:10:20,389 --> 00:10:26,899
ensures that the error all the

220
00:10:24,999 --> 00:10:28,749
differences are within the error

221
00:10:26,899 --> 00:10:31,160
thresholds that were defined previously

222
00:10:28,749 --> 00:10:35,059
again you can read about all these

223
00:10:31,160 --> 00:10:39,199
techniques in our paper moving on to the

224
00:10:35,059 --> 00:10:41,480
real-time spoofer so I must emphasize

225
00:10:39,199 --> 00:10:43,639
that even though we build this system

226
00:10:41,480 --> 00:10:45,799
for road networks this is a generic

227
00:10:43,639 --> 00:10:48,259
system that can be used across different

228
00:10:45,799 --> 00:10:51,439
scenarios impacting drones ships

229
00:10:48,259 --> 00:10:54,199
aircrafts etc in our knowledge this is

230
00:10:51,439 --> 00:10:56,179
the first implementation that accounts

231
00:10:54,199 --> 00:10:59,290
for varying conditions such as traffic

232
00:10:56,179 --> 00:11:02,029
fluidity traffic lights and stop signs

233
00:10:59,290 --> 00:11:03,919
the implementation of this poofer is not

234
00:11:02,029 --> 00:11:06,470
trivial because algorithms must be

235
00:11:03,919 --> 00:11:08,989
implemented that can compute locations

236
00:11:06,470 --> 00:11:12,139
in real time and transmit them quickly

237
00:11:08,989 --> 00:11:15,079
before a GPS lock is released the way

238
00:11:12,139 --> 00:11:16,940
our spoofer works is that it maintains a

239
00:11:15,079 --> 00:11:20,120
mapping or spoof and s

240
00:11:16,940 --> 00:11:22,520
locations on reset of the drivers real

241
00:11:20,120 --> 00:11:25,010
location it efficiently computes the

242
00:11:22,520 --> 00:11:27,800
location and bearing to spoof typically

243
00:11:25,010 --> 00:11:30,110
within 5 milliseconds and then parallely

244
00:11:27,800 --> 00:11:33,520
sends a location to a GPS spoofer and

245
00:11:30,110 --> 00:11:36,140
the bearing to a magnetometer spoofer

246
00:11:33,520 --> 00:11:39,260
let's look at a video demonstration on

247
00:11:36,140 --> 00:11:41,390
this poofer so the phone on the right

248
00:11:39,260 --> 00:11:44,150
shows the true location while the one on

249
00:11:41,390 --> 00:11:46,189
the left shows the spoof location and on

250
00:11:44,150 --> 00:11:51,110
the very left is our implementation of

251
00:11:46,190 --> 00:11:53,180
the GPS - spoofer so now this first

252
00:11:51,110 --> 00:11:56,300
scenario would show a synchronized turn

253
00:11:53,180 --> 00:11:58,310
between the true route and the spoof

254
00:11:56,300 --> 00:12:00,800
route and you'll observe that both of

255
00:11:58,310 --> 00:12:05,660
them turn at exactly the same time at

256
00:12:00,800 --> 00:12:08,109
different locations of the map so now

257
00:12:05,660 --> 00:12:11,120
this other scenario would show a

258
00:12:08,110 --> 00:12:13,730
synchronized talk between the real and

259
00:12:11,120 --> 00:12:16,430
the spoof route and you'll observe that

260
00:12:13,730 --> 00:12:18,910
both of them stop at exactly the same

261
00:12:16,430 --> 00:12:23,209
time at different locations

262
00:12:18,910 --> 00:12:25,790
eventually the destination that is shown

263
00:12:23,210 --> 00:12:28,370
by the true route and the destination

264
00:12:25,790 --> 00:12:31,760
shown by the spoof route would be two

265
00:12:28,370 --> 00:12:34,580
different locations on the map and in

266
00:12:31,760 --> 00:12:41,240
this specific case they are about 1.5

267
00:12:34,580 --> 00:12:45,020
kilometers away from each other moving

268
00:12:41,240 --> 00:12:47,870
on we evaluated this spoofer used by

269
00:12:45,020 --> 00:12:49,699
driving ten routes in boston during

270
00:12:47,870 --> 00:12:52,280
these routes we observe that we did not

271
00:12:49,700 --> 00:12:54,950
lose a lot even once and the maximum

272
00:12:52,280 --> 00:12:56,780
delay in calculating the location and

273
00:12:54,950 --> 00:12:59,450
bearing to spoof was at most 60

274
00:12:56,780 --> 00:13:02,030
milliseconds moreover all these sensor

275
00:12:59,450 --> 00:13:04,280
errors were within the error threshold

276
00:13:02,030 --> 00:13:06,260
that were defined which suggests that

277
00:13:04,280 --> 00:13:10,850
this poofer works quite well in the real

278
00:13:06,260 --> 00:13:13,760
world we the attack alghero algorithm

279
00:13:10,850 --> 00:13:16,400
was evaluated using simulations intent

280
00:13:13,760 --> 00:13:18,980
global cities these cities were chosen

281
00:13:16,400 --> 00:13:22,069
as they are all major logistics hubs and

282
00:13:18,980 --> 00:13:24,350
they represent diverse road networks for

283
00:13:22,070 --> 00:13:27,380
example Manhattan and Chicago represent

284
00:13:24,350 --> 00:13:29,610
grid like structures while London and

285
00:13:27,380 --> 00:13:32,670
Paris represent high variability in

286
00:13:29,610 --> 00:13:34,829
angles and curvatures for each city we

287
00:13:32,670 --> 00:13:38,670
generated thousand routes using random

288
00:13:34,829 --> 00:13:41,160
residential and office locations this

289
00:13:38,670 --> 00:13:44,880
slide shows the maximum displacement and

290
00:13:41,160 --> 00:13:47,850
attacker can achieve for every route in

291
00:13:44,880 --> 00:13:50,100
simulations and here you'll observe that

292
00:13:47,850 --> 00:13:53,459
in grid like cities like Manhattan and

293
00:13:50,100 --> 00:13:55,500
Chicago about 50% of the routes have a

294
00:13:53,459 --> 00:13:57,810
displacement higher than 10 kilometers

295
00:13:55,500 --> 00:13:59,610
and 20% of the routes have a

296
00:13:57,810 --> 00:14:03,060
displacement even higher than 20

297
00:13:59,610 --> 00:14:05,730
kilometers in the others majority of the

298
00:14:03,060 --> 00:14:07,380
other cities about 10% of the routes

299
00:14:05,730 --> 00:14:10,890
have a displacement higher than 10

300
00:14:07,380 --> 00:14:13,079
kilometers in all these cities there are

301
00:14:10,890 --> 00:14:16,170
several routes with displacements even

302
00:14:13,079 --> 00:14:19,019
as high as 30 to 40 kilometers which is

303
00:14:16,170 --> 00:14:22,709
significant deviation for an attacker

304
00:14:19,019 --> 00:14:25,680
from the intended destination this

305
00:14:22,709 --> 00:14:28,069
second evaluation metric represents the

306
00:14:25,680 --> 00:14:30,390
amount of area and attacker can cover

307
00:14:28,070 --> 00:14:35,910
provided they are willing to walk about

308
00:14:30,390 --> 00:14:38,040
50 meters from the parking location we

309
00:14:35,910 --> 00:14:41,250
defined the total area of coverage as a

310
00:14:38,040 --> 00:14:42,779
circle where the source is the center

311
00:14:41,250 --> 00:14:44,699
and the Euclidean distance to the

312
00:14:42,779 --> 00:14:47,370
destination is the radius of this circle

313
00:14:44,699 --> 00:14:49,050
and the area of the escape destinations

314
00:14:47,370 --> 00:14:54,720
are calculated using Monte Carlo

315
00:14:49,050 --> 00:14:57,540
simulations this result shows that in

316
00:14:54,720 --> 00:15:01,050
cities like Manhattan and Chicago even

317
00:14:57,540 --> 00:15:03,510
four routes as long as 10 kilometers is

318
00:15:01,050 --> 00:15:05,640
possible for an attacker to cover about

319
00:15:03,510 --> 00:15:08,910
eight to ten percent of the total

320
00:15:05,640 --> 00:15:12,149
coverage area given that an area of a

321
00:15:08,910 --> 00:15:14,430
circle increases quadratically 10% is

322
00:15:12,149 --> 00:15:17,570
actually a significant area and attacker

323
00:15:14,430 --> 00:15:20,969
can cover using this attack

324
00:15:17,570 --> 00:15:24,180
finally the countermeasures we propose a

325
00:15:20,970 --> 00:15:26,010
secure routes algorithm that gives

326
00:15:24,180 --> 00:15:28,349
comparable performance to using

327
00:15:26,010 --> 00:15:30,870
military-grade sensors without deploying

328
00:15:28,350 --> 00:15:33,600
any new infrastructure the way this

329
00:15:30,870 --> 00:15:35,880
algorithm works is that it essentially

330
00:15:33,600 --> 00:15:37,860
reverses the scoring function or the

331
00:15:35,880 --> 00:15:41,430
spoofed routes generation algorithm as

332
00:15:37,860 --> 00:15:43,440
such it produces a set of routes that

333
00:15:41,430 --> 00:15:46,500
have a low likelihood of spoof

334
00:15:43,440 --> 00:15:48,959
and it chooses one specific route as a

335
00:15:46,500 --> 00:15:52,019
secure route that outputs the least

336
00:15:48,959 --> 00:15:54,388
number of escape destinations this slide

337
00:15:52,019 --> 00:15:56,579
shows the results of the evaluation for

338
00:15:54,389 --> 00:15:59,899
this algorithm using the same router

339
00:15:56,579 --> 00:16:02,099
simulation and here you can observe a

340
00:15:59,899 --> 00:16:05,040
significant reduction in the attack

341
00:16:02,100 --> 00:16:07,259
performance therefore we contend that

342
00:16:05,040 --> 00:16:09,899
using our secure routes algorithm

343
00:16:07,259 --> 00:16:11,970
alongside more accurate sensors in the

344
00:16:09,899 --> 00:16:14,910
future there is a potential to

345
00:16:11,970 --> 00:16:23,910
completely mitigate this threat thank

346
00:16:14,910 --> 00:16:25,889
you and I'm ready for questions the

347
00:16:23,910 --> 00:16:28,290
Niemen affiliation is not like prosper

348
00:16:25,889 --> 00:16:32,310
and Department of Defense it seems that

349
00:16:28,290 --> 00:16:35,219
this is again is works best in cities do

350
00:16:32,310 --> 00:16:37,018
you have any metrics of what road

351
00:16:35,220 --> 00:16:42,779
density you need more it starts breaking

352
00:16:37,019 --> 00:16:45,449
down so it doesn't really work well in

353
00:16:42,779 --> 00:16:49,079
cities or a rural area

354
00:16:45,449 --> 00:16:51,240
what depends like what makes this attack

355
00:16:49,079 --> 00:16:53,519
work is the kind of the road structure

356
00:16:51,240 --> 00:16:54,839
like for example if you have some

357
00:16:53,519 --> 00:16:57,209
structure where there are a lot of

358
00:16:54,839 --> 00:16:58,829
90-degree turns and straight roads then

359
00:16:57,209 --> 00:17:00,839
this attack is going to work quite well

360
00:16:58,829 --> 00:17:04,230
it doesn't matter if it's a rural

361
00:17:00,839 --> 00:17:05,130
network in fact if the blocks are much

362
00:17:04,230 --> 00:17:08,339
further apart

363
00:17:05,130 --> 00:17:10,559
that gives the acts like the error in

364
00:17:08,339 --> 00:17:12,809
the accelerator meter increases further

365
00:17:10,559 --> 00:17:16,520
which would make this attack work even

366
00:17:12,809 --> 00:17:23,579
better in that specific case scenario

367
00:17:16,520 --> 00:17:24,959
any other questions thank you for the

368
00:17:23,579 --> 00:17:26,369
talk he was really interesting my name

369
00:17:24,959 --> 00:17:27,150
is Daniel from University of

370
00:17:26,369 --> 00:17:31,979
Pennsylvania

371
00:17:27,150 --> 00:17:33,240
I was wondering so one that this all

372
00:17:31,980 --> 00:17:35,370
depended on the fact that you could

373
00:17:33,240 --> 00:17:37,740
spoof the GPS coordinates mhm

374
00:17:35,370 --> 00:17:39,209
this is maybe a bit tangential to the

375
00:17:37,740 --> 00:17:43,140
work but what do you think is the

376
00:17:39,210 --> 00:17:46,049
feasibility of having the GPS signals be

377
00:17:43,140 --> 00:17:49,020
signed and would that allow you to have

378
00:17:46,049 --> 00:17:54,059
like very secure GPS that would so I

379
00:17:49,020 --> 00:17:56,770
mean there are military since GPS which

380
00:17:54,059 --> 00:18:01,360
have some cryptographic mechanisms to

381
00:17:56,770 --> 00:18:03,430
protect them in case of such GPS then

382
00:18:01,360 --> 00:18:05,080
yeah I mean I don't think this attack is

383
00:18:03,430 --> 00:18:07,120
going to work because this relies on the

384
00:18:05,080 --> 00:18:09,909
fact that these GPS signals can be

385
00:18:07,120 --> 00:18:12,010
spoofed yeah which is pretty much all

386
00:18:09,910 --> 00:18:16,680
commercial GPS applications out there

387
00:18:12,010 --> 00:18:19,629
yeah any other questions

388
00:18:16,680 --> 00:18:21,100
so you mentioned your potential defense

389
00:18:19,630 --> 00:18:23,140
do you think it's ready to be deployed

390
00:18:21,100 --> 00:18:23,439
say and like ride-sharing apps or things

391
00:18:23,140 --> 00:18:25,030
like that

392
00:18:23,440 --> 00:18:27,670
are there other hurdles that you have to

393
00:18:25,030 --> 00:18:30,280
get over first yeah I mean one

394
00:18:27,670 --> 00:18:33,880
disadvantage of this system is that it's

395
00:18:30,280 --> 00:18:37,570
it's a probabilistic system okay so I

396
00:18:33,880 --> 00:18:40,360
mean you cannot guarantee that the

397
00:18:37,570 --> 00:18:43,179
countermeasure would protect against all

398
00:18:40,360 --> 00:18:45,040
Pacific possible scenarios so yes I mean

399
00:18:43,180 --> 00:18:50,350
this is definitely a good system for

400
00:18:45,040 --> 00:18:52,030
deploying now but they must like we are

401
00:18:50,350 --> 00:18:54,389
also looking at certain techniques that

402
00:18:52,030 --> 00:18:57,310
can be improved to make it foolproof I

403
00:18:54,390 --> 00:19:01,500
mean like just not make it possible in

404
00:18:57,310 --> 00:19:03,550
any different any specific road network

405
00:19:01,500 --> 00:19:06,720
all right what's going to speak here

406
00:19:03,550 --> 00:19:06,720
again thank you

