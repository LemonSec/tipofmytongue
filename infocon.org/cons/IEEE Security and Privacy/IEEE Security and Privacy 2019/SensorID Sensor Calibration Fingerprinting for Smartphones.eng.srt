1
00:00:08,540 --> 00:00:13,280
and I'm standing I'm from the University

2
00:00:11,360 --> 00:00:16,009
of Cambridge and today I'm going to

3
00:00:13,280 --> 00:00:17,090
present my recent work regarding sensor

4
00:00:16,010 --> 00:00:20,330
calibration fingerprinting for

5
00:00:17,090 --> 00:00:21,470
smartphones and this is a joint work

6
00:00:20,330 --> 00:00:24,139
with my supervisor

7
00:00:21,470 --> 00:00:28,549
Alistair Beresford and Ian Sherrod from

8
00:00:24,140 --> 00:00:31,220
the parlament so what is device

9
00:00:28,550 --> 00:00:32,780
fingerprinting well device

10
00:00:31,220 --> 00:00:36,379
fingerprinting is a technique to

11
00:00:32,780 --> 00:00:39,260
generate unique identifiers or sometimes

12
00:00:36,380 --> 00:00:42,980
called a fingerprint of a device it has

13
00:00:39,260 --> 00:00:45,349
many use cases for example it has been

14
00:00:42,980 --> 00:00:50,089
used to protect against identity theft

15
00:00:45,350 --> 00:00:53,540
and credit-card fraud however is more

16
00:00:50,090 --> 00:00:55,310
often used by advertisers to monitor

17
00:00:53,540 --> 00:00:58,790
your activities and to study your

18
00:00:55,310 --> 00:01:00,890
personal interests for example I am sure

19
00:00:58,790 --> 00:01:02,810
many of you had experience on finding

20
00:01:00,890 --> 00:01:05,119
that right after you search something in

21
00:01:02,810 --> 00:01:06,590
a shopping app and the relevant

22
00:01:05,119 --> 00:01:08,479
advertisement just popped up in some

23
00:01:06,590 --> 00:01:11,960
random website and that's device

24
00:01:08,479 --> 00:01:14,030
fingerprinting if you think of the use

25
00:01:11,960 --> 00:01:17,300
case of the whistleblower then the

26
00:01:14,030 --> 00:01:19,670
consequences is even more severe because

27
00:01:17,300 --> 00:01:21,740
the attackers in this case could simply

28
00:01:19,670 --> 00:01:24,530
buy or inject some advertisement on the

29
00:01:21,740 --> 00:01:26,000
news website and this could help them

30
00:01:24,530 --> 00:01:29,960
uncover the identity of the

31
00:01:26,000 --> 00:01:32,540
whistleblower so to protect against the

32
00:01:29,960 --> 00:01:34,610
device fingerprinting both iOS and

33
00:01:32,540 --> 00:01:39,409
Android have deployed a set of

34
00:01:34,610 --> 00:01:40,970
countermeasures for example iOS the

35
00:01:39,409 --> 00:01:42,560
developers has no access to a phone

36
00:01:40,970 --> 00:01:45,289
number or the MAC address of the

37
00:01:42,560 --> 00:01:46,940
hardware modules while Android this is

38
00:01:45,290 --> 00:01:51,710
enforced by permission based access

39
00:01:46,940 --> 00:01:54,979
control nevertheless there is a major

40
00:01:51,710 --> 00:01:58,548
piece that is has been neglected in the

41
00:01:54,979 --> 00:02:02,030
current measures and that is the motion

42
00:01:58,549 --> 00:02:03,850
sensors so modern smartphones typically

43
00:02:02,030 --> 00:02:06,830
include a set of motion sensors

44
00:02:03,850 --> 00:02:08,449
including the accelerometer which

45
00:02:06,830 --> 00:02:11,569
measures the acceleration of the device

46
00:02:08,449 --> 00:02:13,939
the gyroscope which measures the

47
00:02:11,569 --> 00:02:15,920
rotation of the device and the

48
00:02:13,939 --> 00:02:19,608
magnetometer which measures the magnetic

49
00:02:15,920 --> 00:02:22,649
magnetic field around the device data

50
00:02:19,609 --> 00:02:25,200
from these sensors can be accessed by

51
00:02:22,650 --> 00:02:27,510
from either a mobile app or from a

52
00:02:25,200 --> 00:02:29,010
mobile website and it does not require

53
00:02:27,510 --> 00:02:32,760
any user permissions or user

54
00:02:29,010 --> 00:02:35,849
interactions we find that this is pretty

55
00:02:32,760 --> 00:02:37,440
dangerous because we have proposed a new

56
00:02:35,849 --> 00:02:39,390
type of device fingerprinting attack

57
00:02:37,440 --> 00:02:41,909
which we called the calibration

58
00:02:39,390 --> 00:02:45,119
fingerprinting attack so this attack

59
00:02:41,909 --> 00:02:47,280
works by inferring the calibration data

60
00:02:45,120 --> 00:02:48,930
of these sensors by simply analyzing the

61
00:02:47,280 --> 00:02:53,190
sensor outputs which does not require

62
00:02:48,930 --> 00:02:55,170
any permission and further furthermore

63
00:02:53,190 --> 00:02:57,329
we can use the calibration data because

64
00:02:55,170 --> 00:02:58,980
normally if they do calibration is most

65
00:02:57,329 --> 00:03:00,989
likely to be per device calibration and

66
00:02:58,980 --> 00:03:04,440
we can use this data to uniquely

67
00:03:00,989 --> 00:03:06,299
fingerprint every device we found this

68
00:03:04,440 --> 00:03:08,159
attack extremely efficient and effective

69
00:03:06,299 --> 00:03:11,700
the whole attack takes less than one

70
00:03:08,159 --> 00:03:13,709
second and it as I said earlier it can

71
00:03:11,700 --> 00:03:15,988
be launched from either website or an

72
00:03:13,709 --> 00:03:18,780
app and it can actually generate a

73
00:03:15,989 --> 00:03:20,909
globally unique identifier even for the

74
00:03:18,780 --> 00:03:26,329
homogeneous devices such as the iPhones

75
00:03:20,909 --> 00:03:28,649
or iPads and here's a demo of the attack

76
00:03:26,329 --> 00:03:31,620
so here we have two iPhone terrorist

77
00:03:28,650 --> 00:03:33,690
devices on the desk and this website

78
00:03:31,620 --> 00:03:37,319
generates the calibration fingerprint of

79
00:03:33,690 --> 00:03:39,269
the gyroscope for each device as you can

80
00:03:37,319 --> 00:03:41,399
see here these two iPhone has devices

81
00:03:39,269 --> 00:03:45,690
have a different fingerprint which is a

82
00:03:41,400 --> 00:03:50,819
three by three matrix so how does this

83
00:03:45,690 --> 00:03:53,010
attack work well the motion sensors are

84
00:03:50,819 --> 00:03:56,040
suffering for different types of

85
00:03:53,010 --> 00:03:58,048
deterministic errors or often called the

86
00:03:56,040 --> 00:04:02,418
systematic errors due to manufacture

87
00:03:58,049 --> 00:04:04,980
imperfections and this is inevitable and

88
00:04:02,419 --> 00:04:07,829
in general these errors can be

89
00:04:04,980 --> 00:04:10,440
classified into three categories the

90
00:04:07,829 --> 00:04:12,949
scale error which means the axis of the

91
00:04:10,440 --> 00:04:16,709
sensors is different from the design and

92
00:04:12,949 --> 00:04:18,930
no Auto analogy which means the axis of

93
00:04:16,709 --> 00:04:21,500
the sensors are not perpetuate which

94
00:04:18,930 --> 00:04:23,940
other and also the pious

95
00:04:21,500 --> 00:04:25,560
which means the reference point of the

96
00:04:23,940 --> 00:04:30,330
sensor is different from the nominal

97
00:04:25,560 --> 00:04:33,659
value Corson's accuracy is often crucial

98
00:04:30,330 --> 00:04:35,940
and therefore some manufacturers may

99
00:04:33,659 --> 00:04:39,440
choose to do factory calibration to

100
00:04:35,940 --> 00:04:39,440
compensated for these types of errors

101
00:04:39,620 --> 00:04:46,560
sorry in particular three different

102
00:04:44,610 --> 00:04:50,580
types of calibration matrices would be

103
00:04:46,560 --> 00:04:52,380
calculated and the format of these

104
00:04:50,580 --> 00:04:54,900
matrices is shown on this slide and each

105
00:04:52,380 --> 00:04:59,040
of them is correspond to the one the

106
00:04:54,900 --> 00:05:01,200
type of arrow on the left and during the

107
00:04:59,040 --> 00:05:03,360
factory calibration after the

108
00:05:01,200 --> 00:05:05,340
manufacturer got these matrices they

109
00:05:03,360 --> 00:05:07,440
would bake this data into the

110
00:05:05,340 --> 00:05:09,679
non-volatile memory of the device and

111
00:05:07,440 --> 00:05:15,180
this data will not be changed afterwards

112
00:05:09,680 --> 00:05:18,180
which means is consistent over time in

113
00:05:15,180 --> 00:05:20,940
general motion sensors would first

114
00:05:18,180 --> 00:05:23,700
convert the analog environmental

115
00:05:20,940 --> 00:05:25,500
measurements to a digital value through

116
00:05:23,700 --> 00:05:29,250
a component called the analog to digital

117
00:05:25,500 --> 00:05:32,130
converter and then this calibration

118
00:05:29,250 --> 00:05:34,260
matrices would be applied to the ADC

119
00:05:32,130 --> 00:05:37,409
outputs to generate the accurate sensor

120
00:05:34,260 --> 00:05:38,700
readings using the formula here and the

121
00:05:37,410 --> 00:05:40,350
formula up there can be further

122
00:05:38,700 --> 00:05:43,770
simplifying to the formula down below

123
00:05:40,350 --> 00:05:46,230
and the objective of our attack is quite

124
00:05:43,770 --> 00:05:49,080
straightforward because we know the

125
00:05:46,230 --> 00:05:53,340
sensor output which is the matrix so

126
00:05:49,080 --> 00:05:57,599
here and our objective is to recover the

127
00:05:53,340 --> 00:06:01,020
value of the gain matrix G here is how

128
00:05:57,600 --> 00:06:04,860
the attack works we first collect a few

129
00:06:01,020 --> 00:06:06,539
data samples from the sensor then by

130
00:06:04,860 --> 00:06:08,730
subtracting the conservative sensor

131
00:06:06,540 --> 00:06:11,120
measurements we can effectively remove

132
00:06:08,730 --> 00:06:13,440
the BIOS from this equation and

133
00:06:11,120 --> 00:06:16,440
eventually we can get a formula down

134
00:06:13,440 --> 00:06:20,540
below which is Delta equals to the gain

135
00:06:16,440 --> 00:06:23,460
matrix G times the matrix Delta a

136
00:06:20,540 --> 00:06:25,110
however with the only know the value of

137
00:06:23,460 --> 00:06:28,049
Delta L which is the difference between

138
00:06:25,110 --> 00:06:30,870
the sensor outputs and normally it would

139
00:06:28,050 --> 00:06:32,490
be impractical to infer the value of the

140
00:06:30,870 --> 00:06:35,640
gain matrix G here because we don't know

141
00:06:32,490 --> 00:06:38,150
what the Delta A would be but there are

142
00:06:35,640 --> 00:06:41,880
some nice properties we can exploit here

143
00:06:38,150 --> 00:06:45,690
first of all we know that the output of

144
00:06:41,880 --> 00:06:48,060
a DC can only be an integer which means

145
00:06:45,690 --> 00:06:49,710
that the matrix the other a here only

146
00:06:48,060 --> 00:06:52,200
has integer values

147
00:06:49,710 --> 00:06:55,020
and we also know that the game matrix

148
00:06:52,200 --> 00:06:57,120
here it's close to its nominal value

149
00:06:55,020 --> 00:07:00,359
which means the value that sensor is

150
00:06:57,120 --> 00:07:03,440
designed to operate at and this value is

151
00:07:00,360 --> 00:07:06,300
often documented in the datasheet and

152
00:07:03,440 --> 00:07:08,670
these properties allows us to infer the

153
00:07:06,300 --> 00:07:12,750
value of Delta a and further estimate

154
00:07:08,670 --> 00:07:16,020
the value of the gain matrix G here so

155
00:07:12,750 --> 00:07:18,990
here is the example this graph shows the

156
00:07:16,020 --> 00:07:23,370
gyroscope output from two devices the

157
00:07:18,990 --> 00:07:24,690
Samsung Galaxy s8 and iPhone 10 one

158
00:07:23,370 --> 00:07:26,730
thing you can notice here is that there

159
00:07:24,690 --> 00:07:29,160
is a clear quantization on the sensor

160
00:07:26,730 --> 00:07:34,260
output and this is because ADC values

161
00:07:29,160 --> 00:07:36,510
are integers if we subtract I'm sorry if

162
00:07:34,260 --> 00:07:38,700
we subtract the sensor outputs as we

163
00:07:36,510 --> 00:07:42,060
talked earlier then we can get a figure

164
00:07:38,700 --> 00:07:44,849
here if a sensor is not factory

165
00:07:42,060 --> 00:07:46,500
calibrated then all the values within a

166
00:07:44,850 --> 00:07:49,050
single quantile would be the same value

167
00:07:46,500 --> 00:07:52,410
and this is the case for the Samsung

168
00:07:49,050 --> 00:07:54,420
Galaxy s8 but you can for a 20 but

169
00:07:52,410 --> 00:07:56,730
clearly notice that there is a strong

170
00:07:54,420 --> 00:07:59,820
fluctuation in the quantile between the

171
00:07:56,730 --> 00:08:02,370
two black dashed lines and this is a

172
00:07:59,820 --> 00:08:05,990
proof that the gyroscopes in the iPhone

173
00:08:02,370 --> 00:08:08,610
10 is factory calibrated furthermore

174
00:08:05,990 --> 00:08:12,060
thanks to the clear quantization we can

175
00:08:08,610 --> 00:08:14,460
also know the value of Delta a for each

176
00:08:12,060 --> 00:08:19,350
data point by simply observing which

177
00:08:14,460 --> 00:08:21,299
quantities poi slicing and in many cases

178
00:08:19,350 --> 00:08:23,790
we don't really know the nominal value

179
00:08:21,300 --> 00:08:26,340
of the gain matrix because especially

180
00:08:23,790 --> 00:08:27,620
for iOS devices the data sheet is not

181
00:08:26,340 --> 00:08:30,989
available to the public

182
00:08:27,620 --> 00:08:33,690
but is not a big issue because we can

183
00:08:30,990 --> 00:08:35,610
still estimate the value of the nominal

184
00:08:33,690 --> 00:08:38,280
gain using the distance between the

185
00:08:35,610 --> 00:08:43,230
adjacent one house as shown on this

186
00:08:38,280 --> 00:08:46,260
slide and this diagram illustrates the

187
00:08:43,230 --> 00:08:48,780
major steps to recover the value of the

188
00:08:46,260 --> 00:08:51,569
gain matrix and to further generate the

189
00:08:48,780 --> 00:08:53,339
calibration fingerprint so the

190
00:08:51,570 --> 00:08:55,830
calibration fingerprint is just another

191
00:08:53,340 --> 00:08:57,900
representation of the gain matrix based

192
00:08:55,830 --> 00:09:00,180
on the device model because we found

193
00:08:57,900 --> 00:09:03,590
that different mass models use different

194
00:09:00,180 --> 00:09:05,390
representations of this gain matrix

195
00:09:03,590 --> 00:09:07,970
and we already talked with the first

196
00:09:05,390 --> 00:09:11,780
three steps which allows us to recover

197
00:09:07,970 --> 00:09:13,850
the value of the ADC and once we have

198
00:09:11,780 --> 00:09:16,490
the value of the Delta a and we know

199
00:09:13,850 --> 00:09:18,770
Delta o and then the linear algebra

200
00:09:16,490 --> 00:09:23,570
would allow us to estimate the value of

201
00:09:18,770 --> 00:09:25,640
the matrix the gain matrix G here in

202
00:09:23,570 --> 00:09:26,420
practice we found that in order to pull

203
00:09:25,640 --> 00:09:28,460
off this attack

204
00:09:26,420 --> 00:09:30,260
you only need around 100 data samples

205
00:09:28,460 --> 00:09:33,770
which you can easily collect weight in

206
00:09:30,260 --> 00:09:36,200
one second you may also notice that here

207
00:09:33,770 --> 00:09:38,810
we have an improved approach and this

208
00:09:36,200 --> 00:09:41,330
approach the improved method ensures

209
00:09:38,810 --> 00:09:43,489
that even if the device is under intense

210
00:09:41,330 --> 00:09:46,430
movement for example if you are shaking

211
00:09:43,490 --> 00:09:48,380
your device this algorithm consider

212
00:09:46,430 --> 00:09:53,390
generates the fingerprints quickly and

213
00:09:48,380 --> 00:09:56,090
we are reliably so just to fresh the

214
00:09:53,390 --> 00:10:01,699
memory this is the gyroscope calibration

215
00:09:56,090 --> 00:10:04,760
fingerprint in the previous demo a part

216
00:10:01,700 --> 00:10:07,640
phone telescope we found that the

217
00:10:04,760 --> 00:10:10,850
magnetometer in iOS devices is also

218
00:10:07,640 --> 00:10:12,770
factory calibrated but different from

219
00:10:10,850 --> 00:10:14,840
the gyroscope the magnetometer the

220
00:10:12,770 --> 00:10:17,000
calibration behavior in the magnetometer

221
00:10:14,840 --> 00:10:20,450
is more different across the different

222
00:10:17,000 --> 00:10:22,820
models for example you can clearly

223
00:10:20,450 --> 00:10:24,830
notice that a stronger fluctuation in

224
00:10:22,820 --> 00:10:28,520
the iPhone 10s max than the one for the

225
00:10:24,830 --> 00:10:31,010
iPhone 5s but it nevertheless our

226
00:10:28,520 --> 00:10:32,960
approach is applicable for all iOS

227
00:10:31,010 --> 00:10:37,880
device models and can generate the

228
00:10:32,960 --> 00:10:40,010
fingerprint reliably furthermore we also

229
00:10:37,880 --> 00:10:43,760
found that the Google picks or - and

230
00:10:40,010 --> 00:10:46,400
pixel three the the accelerometer is

231
00:10:43,760 --> 00:10:49,550
also factory calibrated and can also be

232
00:10:46,400 --> 00:10:51,680
fingerprinted using the same approach we

233
00:10:49,550 --> 00:10:53,390
defined the sense ID adds a collection

234
00:10:51,680 --> 00:10:57,319
of distinctive sensor calibration

235
00:10:53,390 --> 00:11:00,500
fingerprints which means for iOS devices

236
00:10:57,320 --> 00:11:03,470
this includes both the gyro ID and the

237
00:11:00,500 --> 00:11:07,910
mac ID and for google pixel devices it

238
00:11:03,470 --> 00:11:12,290
includes the ik ID and here is how this

239
00:11:07,910 --> 00:11:14,660
IDs look like one thing you can clearly

240
00:11:12,290 --> 00:11:17,059
notice here that the ACT ID is like

241
00:11:14,660 --> 00:11:19,549
looks quite different from the other two

242
00:11:17,059 --> 00:11:22,879
and the reason for that is we found that

243
00:11:19,549 --> 00:11:25,339
in google pixel 3 they actually mapped

244
00:11:22,879 --> 00:11:27,739
the calibration parameters to a local

245
00:11:25,339 --> 00:11:29,449
file system so if you have the root

246
00:11:27,739 --> 00:11:31,279
access of your device of your Android

247
00:11:29,449 --> 00:11:33,108
device then you can actually read out

248
00:11:31,279 --> 00:11:36,889
these calibration parameters from these

249
00:11:33,109 --> 00:11:39,049
files and this serves as a grunt chose

250
00:11:36,889 --> 00:11:42,109
for our approach because we compare the

251
00:11:39,049 --> 00:11:44,539
the gain matrix we estimate it with with

252
00:11:42,109 --> 00:11:48,589
the measurements written in this file

253
00:11:44,539 --> 00:11:50,509
and they're exactly the same so now that

254
00:11:48,589 --> 00:11:53,269
we know that we can generate this

255
00:11:50,509 --> 00:11:56,659
anxiety the next important question is

256
00:11:53,269 --> 00:11:59,329
how unique is this fingerprint to answer

257
00:11:56,659 --> 00:12:01,309
this question we compared our approach

258
00:11:59,329 --> 00:12:04,128
with another fingerprinting framework

259
00:12:01,309 --> 00:12:04,909
called the fingerprint gs2 which

260
00:12:04,129 --> 00:12:07,399
utilizes

261
00:12:04,909 --> 00:12:09,559
a set of traditional browser

262
00:12:07,399 --> 00:12:12,949
fingerprinting techniques including the

263
00:12:09,559 --> 00:12:15,439
cameras fingerprinting so here

264
00:12:12,949 --> 00:12:18,829
the group size means the number of

265
00:12:15,439 --> 00:12:21,199
devices sharing the same fingerprint so

266
00:12:18,829 --> 00:12:26,179
for example as you can save all the

267
00:12:21,199 --> 00:12:28,968
fingerprint GS to 45 out of 870 devices

268
00:12:26,179 --> 00:12:32,119
have same have the same fingerprint and

269
00:12:28,969 --> 00:12:35,239
another 36 of them has another

270
00:12:32,119 --> 00:12:38,659
fingerprint but all devices has the

271
00:12:35,239 --> 00:12:40,669
unique ID and this proves that both the

272
00:12:38,659 --> 00:12:42,589
chera ID and the mac ID has more entropy

273
00:12:40,669 --> 00:12:44,689
than the fingerprint just to which

274
00:12:42,589 --> 00:12:47,929
stands for traditional browser

275
00:12:44,689 --> 00:12:49,819
fingerprinting techniques and to

276
00:12:47,929 --> 00:12:53,629
quantitatively analyzing the entropy of

277
00:12:49,819 --> 00:12:57,259
the society we collected sensor data

278
00:12:53,629 --> 00:13:00,469
from 870 iOS devices while crowd

279
00:12:57,259 --> 00:13:02,899
sourcing platforms to ensure that we

280
00:13:00,469 --> 00:13:05,359
didn't overestimating the entropy of the

281
00:13:02,899 --> 00:13:07,099
society we also studied whether there

282
00:13:05,359 --> 00:13:10,189
are some correlations between the values

283
00:13:07,099 --> 00:13:11,689
in this in the society and answer is yes

284
00:13:10,189 --> 00:13:15,049
they do have some called strong

285
00:13:11,689 --> 00:13:17,748
correlations and shown on this slide so

286
00:13:15,049 --> 00:13:19,789
basically the graph shows that the

287
00:13:17,749 --> 00:13:22,789
relationship between array true values

288
00:13:19,789 --> 00:13:24,799
in the Jaro ID here and if the

289
00:13:22,789 --> 00:13:26,598
scatterplot appears to be a strict line

290
00:13:24,799 --> 00:13:28,899
it means that there is a strong

291
00:13:26,599 --> 00:13:30,620
correlation between those two values so

292
00:13:28,899 --> 00:13:35,060
in this figure I'm

293
00:13:30,620 --> 00:13:37,370
this junk related pass in red and for

294
00:13:35,060 --> 00:13:38,869
this junk related the past were deleted

295
00:13:37,370 --> 00:13:41,780
one of them in the entropy calculation

296
00:13:38,870 --> 00:13:45,590
to avoid the overestimating the over

297
00:13:41,780 --> 00:13:48,949
estimation of the entropy and as a

298
00:13:45,590 --> 00:13:52,070
result we estimate that the gyro ID

299
00:13:48,950 --> 00:13:55,190
itself has around 42 bits of entropy and

300
00:13:52,070 --> 00:13:58,190
the mag ID has around 25 bits of entropy

301
00:13:55,190 --> 00:14:00,380
but this is for the iphone 6 iphone 6s

302
00:13:58,190 --> 00:14:03,830
model because this is the most popular

303
00:14:00,380 --> 00:14:05,870
device model we have in our data set so

304
00:14:03,830 --> 00:14:08,180
what are these entropy means it

305
00:14:05,870 --> 00:14:10,370
basically means that the chance of you

306
00:14:08,180 --> 00:14:12,109
having two iPhone 6's devices sharing

307
00:14:10,370 --> 00:14:14,420
the same fingerprint is pretty low as

308
00:14:12,110 --> 00:14:22,090
you can see here indicating that this is

309
00:14:14,420 --> 00:14:25,339
a globally unique fingerprint story and

310
00:14:22,090 --> 00:14:28,460
to mitigate this attack we proposed two

311
00:14:25,340 --> 00:14:31,430
options the first option is to add noise

312
00:14:28,460 --> 00:14:35,000
to the 80 state outputs this could help

313
00:14:31,430 --> 00:14:37,189
to obfuscate the quantization and the

314
00:14:35,000 --> 00:14:38,810
second option is to run the sense

315
00:14:37,190 --> 00:14:40,550
outputs to the multiple of the normal

316
00:14:38,810 --> 00:14:42,489
again and this would remove the

317
00:14:40,550 --> 00:14:45,349
fluctuation we saw earlier in the graph

318
00:14:42,490 --> 00:14:47,390
but there is orbit the third option here

319
00:14:45,350 --> 00:14:49,490
which is the most secure option among

320
00:14:47,390 --> 00:14:54,770
the three that is to remove the access

321
00:14:49,490 --> 00:14:57,590
to the motion sensor at once and so we

322
00:14:54,770 --> 00:15:01,040
reported this issue to Apple last year

323
00:14:57,590 --> 00:15:03,440
and Apple in the recent release of ours

324
00:15:01,040 --> 00:15:06,290
to appoint to Apple adopted our first

325
00:15:03,440 --> 00:15:09,410
option which added noise to the sensor

326
00:15:06,290 --> 00:15:12,020
outputs and they further removed the

327
00:15:09,410 --> 00:15:15,530
sensor access in Mobile Safari by

328
00:15:12,020 --> 00:15:18,319
default however this is not currently

329
00:15:15,530 --> 00:15:20,150
not implemented in WebKit which means

330
00:15:18,320 --> 00:15:23,270
the sensor data is still accessible in

331
00:15:20,150 --> 00:15:27,800
our Chrome or Firefox in other browsers

332
00:15:23,270 --> 00:15:30,560
in general and we also reported this

333
00:15:27,800 --> 00:15:33,170
issue to Google last year in December

334
00:15:30,560 --> 00:15:35,170
and so far they haven't effects this one

335
00:15:33,170 --> 00:15:37,370
a bit yet so if you have a pixel devices

336
00:15:35,170 --> 00:15:41,680
the attacker can still fingerprint you

337
00:15:37,370 --> 00:15:44,140
using this approach so to conclude we

338
00:15:41,680 --> 00:15:45,910
have proposed a

339
00:15:44,140 --> 00:15:48,310
type of device fingerprinting tackle

340
00:15:45,910 --> 00:15:50,769
attack called the calibration

341
00:15:48,310 --> 00:15:53,380
fingerprinting attack that can track

342
00:15:50,769 --> 00:15:57,040
users across apps and websites and is

343
00:15:53,380 --> 00:15:59,019
extremely efficient and effective and I

344
00:15:57,040 --> 00:16:03,519
think the highlight of this attack is

345
00:15:59,019 --> 00:16:06,760
that way basic we highlighted that so

346
00:16:03,519 --> 00:16:08,170
this normally the calibration pattern is

347
00:16:06,760 --> 00:16:10,540
not something that you wouldn't normally

348
00:16:08,170 --> 00:16:12,790
concerned consider as a privacy concern

349
00:16:10,540 --> 00:16:16,420
because it's basically a trade-off

350
00:16:12,790 --> 00:16:18,279
between utility and privacy but we had

351
00:16:16,420 --> 00:16:21,099
at you that this actually is also a

352
00:16:18,279 --> 00:16:25,390
source a major source that exposes a lot

353
00:16:21,100 --> 00:16:28,000
of the personal information and we show

354
00:16:25,390 --> 00:16:30,819
that this attack is extremely efficient

355
00:16:28,000 --> 00:16:34,870
because it can uniquely fingerprint

356
00:16:30,820 --> 00:16:38,440
sandbox and homogeneous devices such as

357
00:16:34,870 --> 00:16:40,360
iPhone and iPad and if you're interested

358
00:16:38,440 --> 00:16:44,019
in this work you can find more details

359
00:16:40,360 --> 00:16:46,779
on our website since ID d'Orsay out or

360
00:16:44,019 --> 00:16:49,180
can not act or he okay and if you are

361
00:16:46,779 --> 00:16:51,399
running an iOS version is that is below

362
00:16:49,180 --> 00:16:53,260
twelve point two you can actually find

363
00:16:51,399 --> 00:16:55,120
out what your gyroscope fingerprint

364
00:16:53,260 --> 00:16:57,459
looks like on our website because

365
00:16:55,120 --> 00:17:00,519
there's a proof of concept implemented

366
00:16:57,459 --> 00:17:08,260
in JavaScript to do that okay thanks a

367
00:17:00,519 --> 00:17:09,880
lot for the talk thanks for coming we

368
00:17:08,260 --> 00:17:13,530
have time for a couple questions if

369
00:17:09,880 --> 00:17:13,530
folks can line up at the mics

370
00:17:21,480 --> 00:17:25,799
thank you for the interesting talk and

371
00:17:23,579 --> 00:17:27,480
my name is Alma Mannion from University

372
00:17:25,799 --> 00:17:29,158
in Germany and regarding your

373
00:17:27,480 --> 00:17:32,279
countermeasures you have option one two

374
00:17:29,159 --> 00:17:34,289
three yeah I didn't get the difference

375
00:17:32,279 --> 00:17:36,779
between option one and option two is

376
00:17:34,289 --> 00:17:38,820
there any scientifically speaking the

377
00:17:36,779 --> 00:17:42,779
same to add noise or to round the sensor

378
00:17:38,820 --> 00:17:44,760
output so both of them are not are not

379
00:17:42,779 --> 00:17:47,059
like completely secure because you can

380
00:17:44,760 --> 00:17:51,750
still do this attack using probability

381
00:17:47,059 --> 00:17:54,059
like attacks yeah right but wait I don't

382
00:17:51,750 --> 00:17:56,010
have like quantitative like analysis

383
00:17:54,059 --> 00:17:57,960
about which one of them is more secure

384
00:17:56,010 --> 00:17:59,610
because especially for the first option

385
00:17:57,960 --> 00:18:02,760
it really depends on which noise you are

386
00:17:59,610 --> 00:18:04,320
adding to the ADC for example we

387
00:18:02,760 --> 00:18:07,019
proposed adding a uniform distribution

388
00:18:04,320 --> 00:18:11,269
noise but it's more secure to add it

389
00:18:07,019 --> 00:18:14,850
like Gaussian noise to the outputs and

390
00:18:11,269 --> 00:18:16,799
that in that way the effectiveness of

391
00:18:14,850 --> 00:18:18,529
the first option is like differs a lot

392
00:18:16,799 --> 00:18:22,730
depending on the noise you are adding

393
00:18:18,529 --> 00:18:25,669
okay thank you thank you

394
00:18:22,730 --> 00:18:28,740
any other questions

395
00:18:25,669 --> 00:18:30,899
so one question I have is this seems to

396
00:18:28,740 --> 00:18:33,630
pop up a lot as mobile phones have tons

397
00:18:30,899 --> 00:18:35,340
of sensors available on them do you

398
00:18:33,630 --> 00:18:37,080
think there's a general purpose strategy

399
00:18:35,340 --> 00:18:38,908
to solving this so do you think you have

400
00:18:37,080 --> 00:18:39,449
to do something unique for each of these

401
00:18:38,909 --> 00:18:42,120
cases

402
00:18:39,450 --> 00:18:43,500
you mean for other sensors yeah or like

403
00:18:42,120 --> 00:18:44,610
all the different measurements you can

404
00:18:43,500 --> 00:18:46,470
collect from your phone it seems like

405
00:18:44,610 --> 00:18:48,059
fingerprinting is a huge problem yes so

406
00:18:46,470 --> 00:18:50,340
this approach is not just restricted

407
00:18:48,059 --> 00:18:51,000
motion sensors there are other sensors

408
00:18:50,340 --> 00:18:52,949
that I know you

409
00:18:51,000 --> 00:18:54,750
you can basically fingerprint using the

410
00:18:52,950 --> 00:18:56,130
similar approach so do you think it's

411
00:18:54,750 --> 00:18:58,260
just a function of being able to

412
00:18:56,130 --> 00:18:59,760
identify wherever this might crop up or

413
00:18:58,260 --> 00:19:01,679
do you think there's a more elegant

414
00:18:59,760 --> 00:19:03,450
solution - I didn't like stopping this

415
00:19:01,679 --> 00:19:07,740
before you have to write another paper

416
00:19:03,450 --> 00:19:09,659
on the next sensor III I don't think I

417
00:19:07,740 --> 00:19:13,950
will write another paper above another

418
00:19:09,659 --> 00:19:15,870
sensor if that approach is similar but

419
00:19:13,950 --> 00:19:18,029
if the calibration behavior is different

420
00:19:15,870 --> 00:19:21,059
from the model that we used here then I

421
00:19:18,029 --> 00:19:22,960
might yeah cool well thank you speaker

422
00:19:21,059 --> 00:19:23,389
again thank you

423
00:19:22,960 --> 00:19:27,079
you

424
00:19:23,390 --> 00:19:27,079
[Applause]

