1
00:00:01,040 --> 00:00:03,199
uh good afternoon everyone my name is

2
00:00:03,199 --> 00:00:05,520
jenyang woo a fifth year phd student

3
00:00:05,520 --> 00:00:08,960
from purdue university i'd like to

4
00:00:08,960 --> 00:00:10,880
report our work for a moment of driven

5
00:00:10,880 --> 00:00:12,480
discovery of bluetooth design

6
00:00:12,480 --> 00:00:14,719
vulnerabilities

7
00:00:14,719 --> 00:00:16,880
so why are we interested in bluetooth

8
00:00:16,880 --> 00:00:18,960
security at the first place

9
00:00:18,960 --> 00:00:21,760
because bluetooth devices are everywhere

10
00:00:21,760 --> 00:00:23,519
according to the bluetooth special

11
00:00:23,519 --> 00:00:25,519
interest group there will be over seven

12
00:00:25,519 --> 00:00:28,640
billion bluetooth devices over the world

13
00:00:28,640 --> 00:00:31,760
meanwhile bluetooth device is vulnerable

14
00:00:31,760 --> 00:00:33,520
there are many attacks that have been

15
00:00:33,520 --> 00:00:36,000
covered by the tech meters and among

16
00:00:36,000 --> 00:00:37,840
these attacks some are caused by the

17
00:00:37,840 --> 00:00:40,239
design flaws in the specification

18
00:00:40,239 --> 00:00:43,840
and one such design floor in the

19
00:00:43,840 --> 00:00:47,200
can affect billions of bluetooth devices

20
00:00:47,200 --> 00:00:50,239
and at the same time formal analysis is

21
00:00:50,239 --> 00:00:52,640
an effective approach to discover such

22
00:00:52,640 --> 00:00:54,480
design vulnerabilities

23
00:00:54,480 --> 00:00:56,719
so in this work we utilize the form

24
00:00:56,719 --> 00:00:58,719
analysis technique to automatically

25
00:00:58,719 --> 00:01:00,480
discover the bluetooth design

26
00:01:00,480 --> 00:01:03,600
vulnerabilities in the specification

27
00:01:03,600 --> 00:01:05,680
so first let me

28
00:01:05,680 --> 00:01:07,439
provide some background knowledge about

29
00:01:07,439 --> 00:01:08,640
bluetooth

30
00:01:08,640 --> 00:01:10,560
there are three different protocols in

31
00:01:10,560 --> 00:01:13,200
bluetooth the bluetooth classic which is

32
00:01:13,200 --> 00:01:16,000
usually used for audio streaming

33
00:01:16,000 --> 00:01:17,840
the bluetooth low energy which is

34
00:01:17,840 --> 00:01:20,159
usually used for data transmission with

35
00:01:20,159 --> 00:01:22,479
low power consumption and

36
00:01:22,479 --> 00:01:24,880
the relatively new bluetooth mesh which

37
00:01:24,880 --> 00:01:27,200
is built on ble advertising to form a

38
00:01:27,200 --> 00:01:29,040
mesh network

39
00:01:29,040 --> 00:01:31,360
the specification has built in security

40
00:01:31,360 --> 00:01:34,640
mechanisms to provide uh secure sorry to

41
00:01:34,640 --> 00:01:37,280
provide authenticity and confidentiality

42
00:01:37,280 --> 00:01:38,479
guarantees

43
00:01:38,479 --> 00:01:40,720
to achieve these guarantees

44
00:01:40,720 --> 00:01:42,799
the communicating device first need to

45
00:01:42,799 --> 00:01:45,200
agree on a shared secret key

46
00:01:45,200 --> 00:01:47,360
in the key sharing phase by using the

47
00:01:47,360 --> 00:01:49,920
pairing protocol in bcboe or the

48
00:01:49,920 --> 00:01:52,640
provisioning protocol in bluetooth mesh

49
00:01:52,640 --> 00:01:54,640
and after that in the data transmission

50
00:01:54,640 --> 00:01:57,439
phase the communicating device used the

51
00:01:57,439 --> 00:01:58,960
shared secret key to perform

52
00:01:58,960 --> 00:02:01,200
authentication and encryption

53
00:02:01,200 --> 00:02:03,439
so in this paper we focus on the

54
00:02:03,439 --> 00:02:05,680
security related protocols in these two

55
00:02:05,680 --> 00:02:07,439
phases

56
00:02:07,439 --> 00:02:09,360
to begin with we conducted a literature

57
00:02:09,360 --> 00:02:12,160
study study on existing bluetooth form

58
00:02:12,160 --> 00:02:13,440
analysis

59
00:02:13,440 --> 00:02:16,000
so as the table shows

60
00:02:16,000 --> 00:02:18,879
existing works only consider the numeric

61
00:02:18,879 --> 00:02:21,200
comparison mode in the bcbi pairing

62
00:02:21,200 --> 00:02:23,280
without considering other

63
00:02:23,280 --> 00:02:26,400
modes or mode combinations however it is

64
00:02:26,400 --> 00:02:29,120
important because attacker may

65
00:02:29,120 --> 00:02:31,519
exploit a specific combination of these

66
00:02:31,519 --> 00:02:34,720
modes to launch the attack

67
00:02:34,720 --> 00:02:37,440
and the existing work does not consider

68
00:02:37,440 --> 00:02:39,280
the case sharing and the data

69
00:02:39,280 --> 00:02:41,599
transmission phase at the same time and

70
00:02:41,599 --> 00:02:44,080
in addition exist student works do not

71
00:02:44,080 --> 00:02:46,400
consider the compromised device scenario

72
00:02:46,400 --> 00:02:48,400
in all possible cases

73
00:02:48,400 --> 00:02:50,480
and most importantly none of the

74
00:02:50,480 --> 00:02:53,920
existing works covered bluetooth mesh

75
00:02:53,920 --> 00:02:55,680
so we want to build a formal model

76
00:02:55,680 --> 00:02:57,840
covering all these uh

77
00:02:57,840 --> 00:03:00,080
aspects of bluetooth

78
00:03:00,080 --> 00:03:02,319
so in detail we want our model to cover

79
00:03:02,319 --> 00:03:05,599
bcbo and mesh specifically for the key

80
00:03:05,599 --> 00:03:06,959
sharing phase

81
00:03:06,959 --> 00:03:08,239
our model should

82
00:03:08,239 --> 00:03:10,640
cover the pairing protocol in bcboe and

83
00:03:10,640 --> 00:03:13,599
provisioning protocol in bluetooth mesh

84
00:03:13,599 --> 00:03:16,159
and in the data transmission phase

85
00:03:16,159 --> 00:03:18,080
we want to model the authentication and

86
00:03:18,080 --> 00:03:20,640
the encryption procedure in bcbo and

87
00:03:20,640 --> 00:03:21,519
mesh

88
00:03:21,519 --> 00:03:23,280
in addition we also consider a

89
00:03:23,280 --> 00:03:24,799
communicating device might be

90
00:03:24,799 --> 00:03:26,879
compromised

91
00:03:26,879 --> 00:03:30,000
so in the key sharing phase we assume

92
00:03:30,000 --> 00:03:31,920
the attacker has the capabilities

93
00:03:31,920 --> 00:03:34,159
defined in the delve your

94
00:03:34,159 --> 00:03:35,599
attack model

95
00:03:35,599 --> 00:03:37,760
meaning that an attacker can

96
00:03:37,760 --> 00:03:39,360
intercept

97
00:03:39,360 --> 00:03:41,920
evol drop and modify the messages

98
00:03:41,920 --> 00:03:44,720
exchanged between communicating devices

99
00:03:44,720 --> 00:03:47,120
instead transmission phase besides the

100
00:03:47,120 --> 00:03:50,080
devio attack model we also assume

101
00:03:50,080 --> 00:03:52,000
one communicating device might be

102
00:03:52,000 --> 00:03:54,159
semi-compromised

103
00:03:54,159 --> 00:03:56,640
uh and on the semiconductor compromise

104
00:03:56,640 --> 00:03:58,799
the device we assume the attacker does

105
00:03:58,799 --> 00:04:00,480
not have the root permission

106
00:04:00,480 --> 00:04:01,680
for example

107
00:04:01,680 --> 00:04:03,599
a user may install a malicious app on

108
00:04:03,599 --> 00:04:05,519
her android phone with bluetooth

109
00:04:05,519 --> 00:04:07,280
permissions

110
00:04:07,280 --> 00:04:09,280
usually this malicious app does not have

111
00:04:09,280 --> 00:04:11,519
the root permission however it can still

112
00:04:11,519 --> 00:04:13,360
access the bluetooth functionalities

113
00:04:13,360 --> 00:04:17,199
provided by the android framework

114
00:04:17,199 --> 00:04:19,199
so to build a comprehensive model there

115
00:04:19,199 --> 00:04:20,639
are several challenges need to be

116
00:04:20,639 --> 00:04:22,800
addressed the first one is the

117
00:04:22,800 --> 00:04:24,960
complexity of the

118
00:04:24,960 --> 00:04:27,199
protocol for example there are four

119
00:04:27,199 --> 00:04:29,759
different modes in the bcboe pairing

120
00:04:29,759 --> 00:04:31,440
protocol and eight different modes in

121
00:04:31,440 --> 00:04:33,600
the provisioning protocol and what's

122
00:04:33,600 --> 00:04:35,759
worse when device might support

123
00:04:35,759 --> 00:04:38,160
different combinations of these modes

124
00:04:38,160 --> 00:04:40,720
so to address this challenge we

125
00:04:40,720 --> 00:04:42,960
adopted a modular design for our model

126
00:04:42,960 --> 00:04:45,840
specifically we design

127
00:04:45,840 --> 00:04:47,040
each sub

128
00:04:47,040 --> 00:04:50,080
protocol or a step in a protocol as an

129
00:04:50,080 --> 00:04:52,000
individual module

130
00:04:52,000 --> 00:04:54,720
and then we abstract the fixed input and

131
00:04:54,720 --> 00:04:57,680
output phases between those modules

132
00:04:57,680 --> 00:05:01,120
as such when we model a mode of

133
00:05:01,120 --> 00:05:03,680
protocol we can splice crease body

134
00:05:03,680 --> 00:05:05,120
modules together

135
00:05:05,120 --> 00:05:07,280
if we want to model another mode or

136
00:05:07,280 --> 00:05:09,680
other mode combinations of this protocol

137
00:05:09,680 --> 00:05:12,320
most of the modules can be reused

138
00:05:12,320 --> 00:05:13,919
so let me use the

139
00:05:13,919 --> 00:05:16,479
our model of the bcbo pairing as an

140
00:05:16,479 --> 00:05:18,720
example to illustrate how we address

141
00:05:18,720 --> 00:05:20,560
this challenge

142
00:05:20,560 --> 00:05:22,840
so there are four steps in the pairing

143
00:05:22,840 --> 00:05:25,360
protocol and in step two there are four

144
00:05:25,360 --> 00:05:27,600
different modes so we model each step

145
00:05:27,600 --> 00:05:29,759
and each mode in step two as an

146
00:05:29,759 --> 00:05:31,280
individual model

147
00:05:31,280 --> 00:05:33,199
and then we abstract three fixed

148
00:05:33,199 --> 00:05:36,000
interfaces between those four steps

149
00:05:36,000 --> 00:05:38,160
to align with our tech model the central

150
00:05:38,160 --> 00:05:39,600
and peripheral device communicate

151
00:05:39,600 --> 00:05:41,280
through our open channel

152
00:05:41,280 --> 00:05:43,680
and then we could combine those models

153
00:05:43,680 --> 00:05:46,800
to compose a four particle

154
00:05:46,800 --> 00:05:48,880
for example those four models represent

155
00:05:48,880 --> 00:05:51,280
a device that supports only the

156
00:05:51,280 --> 00:05:53,600
numerical comparison mode of the pairing

157
00:05:53,600 --> 00:05:54,880
protocol

158
00:05:54,880 --> 00:05:57,199
if we replace the numeric comparison

159
00:05:57,199 --> 00:06:00,000
model with the just works model it means

160
00:06:00,000 --> 00:06:02,240
that the device supports only the just

161
00:06:02,240 --> 00:06:05,280
works mode of the pairing protocol

162
00:06:05,280 --> 00:06:08,560
if we keep both models it means that

163
00:06:08,560 --> 00:06:11,199
this device supports both the numerical

164
00:06:11,199 --> 00:06:13,600
comparison and the just works modes of

165
00:06:13,600 --> 00:06:15,280
the pairing particle

166
00:06:15,280 --> 00:06:17,520
and we use a similar way to model the

167
00:06:17,520 --> 00:06:21,199
provisioning protocol for bluetooth mesh

168
00:06:21,199 --> 00:06:24,800
more details can be found in our paper

169
00:06:24,800 --> 00:06:26,479
the the second challenge is the

170
00:06:26,479 --> 00:06:28,800
coexistence of protocol stacks for

171
00:06:28,800 --> 00:06:32,240
example one device may only support when

172
00:06:32,240 --> 00:06:34,560
bluetooth stack such as bc

173
00:06:34,560 --> 00:06:37,280
and another device may support all three

174
00:06:37,280 --> 00:06:40,240
different stacks and even if one device

175
00:06:40,240 --> 00:06:42,240
supports all three stacks

176
00:06:42,240 --> 00:06:44,639
only one stack might be used in the data

177
00:06:44,639 --> 00:06:46,240
transmission

178
00:06:46,240 --> 00:06:49,840
to cover all these cases we uh follow

179
00:06:49,840 --> 00:06:52,560
the modular design and design each stack

180
00:06:52,560 --> 00:06:54,800
as an individual model

181
00:06:54,800 --> 00:06:58,160
so we can combine those different stack

182
00:06:58,160 --> 00:07:00,240
models to model a device with different

183
00:07:00,240 --> 00:07:02,720
stack capabilities

184
00:07:02,720 --> 00:07:04,880
and the third challenge is how to model

185
00:07:04,880 --> 00:07:07,440
a semi-compromised device

186
00:07:07,440 --> 00:07:10,400
informal analysis approach to model or

187
00:07:10,400 --> 00:07:12,960
compromise the device is to send the

188
00:07:12,960 --> 00:07:15,199
secret key to the attacker

189
00:07:15,199 --> 00:07:17,919
however is not suitable in our case

190
00:07:17,919 --> 00:07:20,160
because on bluetooth devices such as

191
00:07:20,160 --> 00:07:23,039
android phones and the linux laptops

192
00:07:23,039 --> 00:07:25,280
it requires the root permission to

193
00:07:25,280 --> 00:07:27,759
access the secret key of bluetooth

194
00:07:27,759 --> 00:07:29,759
however on a

195
00:07:29,759 --> 00:07:31,919
device the attacker does not have the

196
00:07:31,919 --> 00:07:35,599
root permission to access the secret key

197
00:07:35,599 --> 00:07:38,319
to address this challenge we propose a

198
00:07:38,319 --> 00:07:40,479
two layer design which has an

199
00:07:40,479 --> 00:07:44,000
application layer and a stack layer the

200
00:07:44,000 --> 00:07:46,560
stack layer can access the secret key to

201
00:07:46,560 --> 00:07:48,800
perform authentication and encryption

202
00:07:48,800 --> 00:07:51,199
while the application layer determines

203
00:07:51,199 --> 00:07:53,599
what data to send or receive and then we

204
00:07:53,599 --> 00:07:55,360
use an open channel between these two

205
00:07:55,360 --> 00:07:57,039
layers to model the attacker's

206
00:07:57,039 --> 00:07:58,479
capability

207
00:07:58,479 --> 00:08:01,360
that she cannot access the secret key

208
00:08:01,360 --> 00:08:04,000
but she can still access the bluetooth

209
00:08:04,000 --> 00:08:06,160
functionalities

210
00:08:06,160 --> 00:08:08,879
and we use our model of the data

211
00:08:08,879 --> 00:08:11,520
transmission phase to illustrate how we

212
00:08:11,520 --> 00:08:13,520
address these two challenges

213
00:08:13,520 --> 00:08:15,840
we model a device has two layers

214
00:08:15,840 --> 00:08:19,039
application layer and a stack layer

215
00:08:19,039 --> 00:08:22,000
and for each application and a stack we

216
00:08:22,000 --> 00:08:25,280
model it as an individual model

217
00:08:25,280 --> 00:08:27,039
to align with our attack model the

218
00:08:27,039 --> 00:08:28,800
centroid peripheral device communicates

219
00:08:28,800 --> 00:08:30,560
through an open channel

220
00:08:30,560 --> 00:08:33,200
if the device is not compromised these

221
00:08:33,200 --> 00:08:35,120
two layers communicate through a secure

222
00:08:35,120 --> 00:08:37,839
channel and if the device is

223
00:08:37,839 --> 00:08:40,320
semi-compromised

224
00:08:40,320 --> 00:08:42,000
these two layers communicate through an

225
00:08:42,000 --> 00:08:43,839
open channel

226
00:08:43,839 --> 00:08:46,800
and then we could combine those modules

227
00:08:46,800 --> 00:08:49,360
to model a device with different stack

228
00:08:49,360 --> 00:08:52,000
capabilities and connectivities for

229
00:08:52,000 --> 00:08:54,160
example these two models represent a

230
00:08:54,160 --> 00:08:57,519
device that only supports a bc stack and

231
00:08:57,519 --> 00:08:59,760
the bc stack is used during the data

232
00:08:59,760 --> 00:09:01,200
transmission

233
00:09:01,200 --> 00:09:03,440
if we add one more ble stack model it

234
00:09:03,440 --> 00:09:04,800
means that

235
00:09:04,800 --> 00:09:07,120
when device supports both bc and bi

236
00:09:07,120 --> 00:09:09,920
stacks but only the bc stack is used

237
00:09:09,920 --> 00:09:12,399
during the data transmission if we add

238
00:09:12,399 --> 00:09:15,600
another ble f model it means both stacks

239
00:09:15,600 --> 00:09:17,839
are supported by a device and both are

240
00:09:17,839 --> 00:09:20,959
used in the data transmission

241
00:09:20,959 --> 00:09:23,200
after solving those challenges and

242
00:09:23,200 --> 00:09:25,360
building our model we analyze the

243
00:09:25,360 --> 00:09:27,760
specification and extract the security

244
00:09:27,760 --> 00:09:31,519
properties to verify against our model

245
00:09:31,519 --> 00:09:33,839
specifically for the bcboe pairing

246
00:09:33,839 --> 00:09:36,080
protocol we verify the authenticity

247
00:09:36,080 --> 00:09:37,120
property

248
00:09:37,120 --> 00:09:39,839
we verify this property by verifying the

249
00:09:39,839 --> 00:09:41,760
correspondence of certain messages in

250
00:09:41,760 --> 00:09:43,040
the protocol

251
00:09:43,040 --> 00:09:45,120
if this property holds it means that the

252
00:09:45,120 --> 00:09:48,160
two communicating devices can properly

253
00:09:48,160 --> 00:09:51,600
authenticate each other

254
00:09:51,600 --> 00:09:53,519
for the mesh provisioning protocol

255
00:09:53,519 --> 00:09:55,600
besides the authenticity property we

256
00:09:55,600 --> 00:09:57,440
also verify the secrecy and strong

257
00:09:57,440 --> 00:10:00,240
secrecy of the secret key transmitted

258
00:10:00,240 --> 00:10:02,240
during the provision

259
00:10:02,240 --> 00:10:04,560
if the secrecy property holds it means

260
00:10:04,560 --> 00:10:06,880
that the attacker cannot get the secret

261
00:10:06,880 --> 00:10:08,480
key in plain text

262
00:10:08,480 --> 00:10:10,399
well if the strong secrecy property

263
00:10:10,399 --> 00:10:12,160
holds it means that

264
00:10:12,160 --> 00:10:14,480
the attacker cannot tell

265
00:10:14,480 --> 00:10:18,000
whether the secret key changes or not

266
00:10:18,000 --> 00:10:20,079
and in the data transmission phase we

267
00:10:20,079 --> 00:10:22,240
verify the secrecy property of the

268
00:10:22,240 --> 00:10:26,720
transmitted data in bcbo and mesh

269
00:10:26,720 --> 00:10:29,040
we implement our model using program and

270
00:10:29,040 --> 00:10:31,360
verify the property i mentioned and we

271
00:10:31,360 --> 00:10:33,519
detect h2 violations

272
00:10:33,519 --> 00:10:35,519
some of the violations are corresponding

273
00:10:35,519 --> 00:10:37,760
to the five known weaknesses such as bad

274
00:10:37,760 --> 00:10:40,079
bluetooth attacks lisa and method

275
00:10:40,079 --> 00:10:42,240
confusion attacks the others are

276
00:10:42,240 --> 00:10:44,399
corresponding to new issues

277
00:10:44,399 --> 00:10:46,640
the first issue lies in the mesh

278
00:10:46,640 --> 00:10:48,720
provisioning protocol which allows an

279
00:10:48,720 --> 00:10:50,720
attacker to steal the secret key from

280
00:10:50,720 --> 00:10:52,079
the provisioner

281
00:10:52,079 --> 00:10:55,120
and the second issue affects both the

282
00:10:55,120 --> 00:10:58,320
bcb or idiostack devices which allows an

283
00:10:58,320 --> 00:11:00,240
attacker to illegally access the

284
00:11:00,240 --> 00:11:04,160
bluetooth services across bcbo stats

285
00:11:04,160 --> 00:11:07,279
i'll briefly introduce this to attacks

286
00:11:07,279 --> 00:11:09,839
let's start with the improvement attack

287
00:11:09,839 --> 00:11:11,519
at the beginning of the provisioning the

288
00:11:11,519 --> 00:11:13,279
provisioner and the device exchange

289
00:11:13,279 --> 00:11:14,959
their public keys

290
00:11:14,959 --> 00:11:17,760
during which the attacker can act as the

291
00:11:17,760 --> 00:11:19,200
man in the middle

292
00:11:19,200 --> 00:11:21,920
so that the provisioner and attacker can

293
00:11:21,920 --> 00:11:23,760
derive the same

294
00:11:23,760 --> 00:11:25,200
difficulty key

295
00:11:25,200 --> 00:11:27,760
and then the device

296
00:11:27,760 --> 00:11:29,519
display a random number are into the

297
00:11:29,519 --> 00:11:32,079
user and the user input this name this

298
00:11:32,079 --> 00:11:34,880
number on the provisioner

299
00:11:34,880 --> 00:11:36,480
and then the provisioner generates

300
00:11:36,480 --> 00:11:38,160
another random number of p and

301
00:11:38,160 --> 00:11:40,399
calculated a commitment value based on

302
00:11:40,399 --> 00:11:41,680
this rp

303
00:11:41,680 --> 00:11:43,920
and then the provisioner sends this

304
00:11:43,920 --> 00:11:46,560
committed value cp to the device

305
00:11:46,560 --> 00:11:48,720
at this time the attacker can intercept

306
00:11:48,720 --> 00:11:51,360
this packet record this value and

307
00:11:51,360 --> 00:11:52,560
replace

308
00:11:52,560 --> 00:11:54,800
this package to the provisioner and then

309
00:11:54,800 --> 00:11:56,959
the provisioner sends the random number

310
00:11:56,959 --> 00:12:00,160
rp to the device the attacker does the

311
00:12:00,160 --> 00:12:02,880
same for the rp

312
00:12:02,880 --> 00:12:06,480
and we play this rp to the provisioner

313
00:12:06,480 --> 00:12:10,160
because of the record record and replay

314
00:12:10,160 --> 00:12:12,880
of cpr and rp the attacker can bypass

315
00:12:12,880 --> 00:12:16,079
the authentication uh at the provisional

316
00:12:16,079 --> 00:12:17,200
site

317
00:12:17,200 --> 00:12:19,600
after that the provisioner derives a

318
00:12:19,600 --> 00:12:22,560
session key and uses this session key to

319
00:12:22,560 --> 00:12:25,360
encrypt a secret key and sends this

320
00:12:25,360 --> 00:12:27,360
secret key to the device

321
00:12:27,360 --> 00:12:30,560
because all the values used to derive

322
00:12:30,560 --> 00:12:32,399
the session key are known to the

323
00:12:32,399 --> 00:12:34,160
attacker the attacker can derive the

324
00:12:34,160 --> 00:12:36,240
same session key and use

325
00:12:36,240 --> 00:12:38,639
this session key to decrypt the mesh

326
00:12:38,639 --> 00:12:42,399
message to get the secret key in plain

327
00:12:42,399 --> 00:12:43,920
text

328
00:12:43,920 --> 00:12:46,399
we reported this issue to bluetooth seek

329
00:12:46,399 --> 00:12:48,240
and we were told that we independently

330
00:12:48,240 --> 00:12:50,560
discovered this issue with another group

331
00:12:50,560 --> 00:12:53,839
and we get a cv assigned

332
00:12:53,839 --> 00:12:56,639
for the cia attack we assume alice and

333
00:12:56,639 --> 00:13:00,079
bob are dual stack devices and

334
00:13:00,079 --> 00:13:02,639
they want to communicate only through

335
00:13:02,639 --> 00:13:05,279
ble so to achieve this

336
00:13:05,279 --> 00:13:07,440
the user first need to pair alice with

337
00:13:07,440 --> 00:13:10,000
bob through ble and during the pairing a

338
00:13:10,000 --> 00:13:12,800
secret key of boe is generated

339
00:13:12,800 --> 00:13:14,880
and after that the upliab boe

340
00:13:14,880 --> 00:13:17,600
application can exchange the data that

341
00:13:17,600 --> 00:13:20,560
is encrypted using this secret key

342
00:13:20,560 --> 00:13:22,480
however during the

343
00:13:22,480 --> 00:13:26,160
pairing of voe because of the cross

344
00:13:26,160 --> 00:13:28,800
stack kd revision featuring bluetooth

345
00:13:28,800 --> 00:13:31,200
the secret key of bc is also

346
00:13:31,200 --> 00:13:33,680
automatically generated

347
00:13:33,680 --> 00:13:36,399
so in this case if bob is a semicrop

348
00:13:36,399 --> 00:13:38,800
compromised with a malicious app then

349
00:13:38,800 --> 00:13:42,079
the attacker can you exploit the bc

350
00:13:42,079 --> 00:13:45,360
secret key and illegally access the bc

351
00:13:45,360 --> 00:13:49,120
service on alice such as inject keyboard

352
00:13:49,120 --> 00:13:51,519
strokes

353
00:13:51,519 --> 00:13:53,760
in a sense this attack is kind of

354
00:13:53,760 --> 00:13:55,600
similar to another attack called

355
00:13:55,600 --> 00:13:56,800
bluetooth

356
00:13:56,800 --> 00:13:59,440
because both are caused by the same

357
00:13:59,440 --> 00:14:01,519
issue the cross-step key duration

358
00:14:01,519 --> 00:14:02,880
feature

359
00:14:02,880 --> 00:14:05,120
however these two attacks has different

360
00:14:05,120 --> 00:14:08,079
idea models for the cr attack we assume

361
00:14:08,079 --> 00:14:11,920
one device is semi-compromised

362
00:14:11,920 --> 00:14:15,040
but the victim device does not

363
00:14:15,040 --> 00:14:16,880
accept new pairings

364
00:14:16,880 --> 00:14:19,360
but in the bluetooth attack

365
00:14:19,360 --> 00:14:22,639
it assumes the victim device accepts new

366
00:14:22,639 --> 00:14:26,399
pairings with a malicious device

367
00:14:26,560 --> 00:14:28,160
of course there are some limitations in

368
00:14:28,160 --> 00:14:31,680
our current work so the first is we use

369
00:14:31,680 --> 00:14:33,839
the standard modeling of difficulty in

370
00:14:33,839 --> 00:14:35,440
progressive so

371
00:14:35,440 --> 00:14:37,760
we may miss some attack against the

372
00:14:37,760 --> 00:14:39,839
difficult man protocol

373
00:14:39,839 --> 00:14:41,760
and the second is in our current model

374
00:14:41,760 --> 00:14:43,519
we do not support the

375
00:14:43,519 --> 00:14:45,760
unlimited sessions

376
00:14:45,760 --> 00:14:48,079
executing in parallel for the key

377
00:14:48,079 --> 00:14:49,839
sharing protocols

378
00:14:49,839 --> 00:14:52,000
and lastly in our current model we do

379
00:14:52,000 --> 00:14:53,920
not cover the lexi protocols in

380
00:14:53,920 --> 00:14:56,479
bluetooth

381
00:14:56,959 --> 00:14:59,680
to sum up we conducted a literature

382
00:14:59,680 --> 00:15:01,440
study on existing bluetooth formal

383
00:15:01,440 --> 00:15:04,079
analysis and they realized that none of

384
00:15:04,079 --> 00:15:06,079
the existing work

385
00:15:06,079 --> 00:15:08,800
covers all aspects of bluetooth

386
00:15:08,800 --> 00:15:10,480
so we built a comprehensive model

387
00:15:10,480 --> 00:15:12,320
covering both the key sharing and data

388
00:15:12,320 --> 00:15:15,040
transmission phase in bcbo and mesh we

389
00:15:15,040 --> 00:15:17,440
verified the properties extracted from

390
00:15:17,440 --> 00:15:20,399
the specification and

391
00:15:20,399 --> 00:15:22,720
detected five nodes known weaknesses as

392
00:15:22,720 --> 00:15:25,760
well as two new issues and our model is

393
00:15:25,760 --> 00:15:28,720
publicly available

394
00:15:28,720 --> 00:15:31,120
that's all for my presentation i'll be

395
00:15:31,120 --> 00:15:33,440
on the job market later this year

396
00:15:33,440 --> 00:15:36,000
thank you so much for listening and i'd

397
00:15:36,000 --> 00:15:38,079
like to take questions

398
00:15:38,079 --> 00:15:39,360
great

399
00:15:39,360 --> 00:15:41,600
wonderful talk

400
00:15:41,600 --> 00:15:43,519
if you have any questions please use the

401
00:15:43,519 --> 00:15:46,160
microphone

402
00:15:50,560 --> 00:15:52,000
maybe i will start with the question

403
00:15:52,000 --> 00:15:54,880
first can you go to page 15 about the

404
00:15:54,880 --> 00:15:56,720
second attack i think that that's very

405
00:15:56,720 --> 00:15:57,839
interesting

406
00:15:57,839 --> 00:15:59,759
i have a minor question about this

407
00:15:59,759 --> 00:16:01,600
attack so in this attack can the

408
00:16:01,600 --> 00:16:03,120
malicious app

409
00:16:03,120 --> 00:16:06,000
uh can the malaysia type abuse the key

410
00:16:06,000 --> 00:16:09,519
in the ble stack instead of in the

411
00:16:09,519 --> 00:16:14,720
bc classic stack uh yes because uh the

412
00:16:14,720 --> 00:16:17,440
cluster stacker key derivation allows

413
00:16:17,440 --> 00:16:19,839
the k division from

414
00:16:19,839 --> 00:16:22,639
ble to bc it also allows the creative

415
00:16:22,639 --> 00:16:26,399
derivation from bc to boe so if lsl and

416
00:16:26,399 --> 00:16:29,040
bob only communicating through bc

417
00:16:29,040 --> 00:16:31,440
the key of bie will also automatically

418
00:16:31,440 --> 00:16:34,639
generate it great great yeah so

419
00:16:34,639 --> 00:16:37,120
so uh you said that in a paper you said

420
00:16:37,120 --> 00:16:39,440
that the bluetooth organization did not

421
00:16:39,440 --> 00:16:41,199
acknowledge this at the vulnerability

422
00:16:41,199 --> 00:16:43,839
but only take it at the issue

423
00:16:43,839 --> 00:16:46,720
uh yes so uh do they have a plan my

424
00:16:46,720 --> 00:16:49,920
question do they have a plan to separate

425
00:16:49,920 --> 00:16:53,519
the two stacks between ble and bc

426
00:16:53,519 --> 00:16:56,639
as far as i know they do not have such a

427
00:16:56,639 --> 00:16:57,600
plan

428
00:16:57,600 --> 00:17:00,720
so uh for our report to uh bluetooth

429
00:17:00,720 --> 00:17:02,959
thing about this issue

430
00:17:02,959 --> 00:17:04,959
it's a very long story

431
00:17:04,959 --> 00:17:07,359
but a long story short uh the sake of

432
00:17:07,359 --> 00:17:10,640
things is i intended feature for

433
00:17:10,640 --> 00:17:13,359
bcb or audio stack devices

434
00:17:13,359 --> 00:17:15,199
we think it's primarily for the us

435
00:17:15,199 --> 00:17:18,079
experience because

436
00:17:18,079 --> 00:17:19,919
when alice and bob

437
00:17:19,919 --> 00:17:22,559
pair with each other only one period is

438
00:17:22,559 --> 00:17:24,640
needed after that

439
00:17:24,640 --> 00:17:28,319
either you use a bc stack or b boe stack

440
00:17:28,319 --> 00:17:30,640
no more parent is needed but if you

441
00:17:30,640 --> 00:17:33,520
separate those uh if we if you want to

442
00:17:33,520 --> 00:17:37,120
use both stacks you need to pair twice

443
00:17:37,120 --> 00:17:38,640
okay that makes sense they have to

444
00:17:38,640 --> 00:17:40,880
strike between the balance betw

445
00:17:40,880 --> 00:17:42,880
between security and the usability they

446
00:17:42,880 --> 00:17:44,320
have to strike the benefits okay that

447
00:17:44,320 --> 00:17:46,880
makes sense okay any question from the

448
00:17:46,880 --> 00:17:49,360
audience

449
00:17:50,480 --> 00:17:52,640
so maybe i have another question for you

450
00:17:52,640 --> 00:17:55,919
yeah so uh did you guys run real

451
00:17:55,919 --> 00:17:58,640
internet attacks experiments with the

452
00:17:58,640 --> 00:18:02,480
real devices uh yes actually we

453
00:18:02,480 --> 00:18:04,000
evaluated these two attacks on

454
00:18:04,000 --> 00:18:05,760
real-world devices for the bloomberg

455
00:18:05,760 --> 00:18:10,960
attack we have tested 25 different

456
00:18:10,960 --> 00:18:12,840
bluetooth mesh

457
00:18:12,840 --> 00:18:15,120
implementations from different vendors

458
00:18:15,120 --> 00:18:17,600
on different platforms and we found that

459
00:18:17,600 --> 00:18:21,760
20 of them are affected and for this cr

460
00:18:21,760 --> 00:18:25,120
tech we evaluated on the six devices and

461
00:18:25,120 --> 00:18:27,840
five of them are affected the other one

462
00:18:27,840 --> 00:18:32,160
that is not affected is due to a

463
00:18:32,160 --> 00:18:34,320
implementation bug

464
00:18:34,320 --> 00:18:37,520
so yeah that's what the evaluation of

465
00:18:37,520 --> 00:18:38,960
evaluation with these two attacks on

466
00:18:38,960 --> 00:18:40,559
real world devices

467
00:18:40,559 --> 00:18:43,280
okay great great sounds good

468
00:18:43,280 --> 00:18:46,799
all right wonderful uh

469
00:18:46,799 --> 00:18:48,559
let me double check if there's any

470
00:18:48,559 --> 00:18:51,280
online questions

471
00:18:52,000 --> 00:18:53,440
okay

472
00:18:53,440 --> 00:18:55,520
okay i think they're very good and

473
00:18:55,520 --> 00:18:57,679
i think this will conclude this session

474
00:18:57,679 --> 00:18:59,760
thank you all for for your participation

475
00:18:59,760 --> 00:19:01,280
let's welcome let's thank the speaker

476
00:19:01,280 --> 00:19:02,880
again

477
00:19:02,880 --> 00:19:05,819
[Applause]

