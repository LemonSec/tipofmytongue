1
00:00:00,080 --> 00:00:02,159
good afternoon everyone i'm jinjang from

2
00:00:02,159 --> 00:00:04,160
the national university of singapore

3
00:00:04,160 --> 00:00:06,240
it's my pleasure to present our recent

4
00:00:06,240 --> 00:00:08,880
work share water recommendation guided

5
00:00:08,880 --> 00:00:11,280
separate threat analysis using system

6
00:00:11,280 --> 00:00:12,880
audit records

7
00:00:12,880 --> 00:00:15,120
this is a joint work with xiang

8
00:00:15,120 --> 00:00:18,800
hao yin vong malvajr zhinkai tencen and

9
00:00:18,800 --> 00:00:21,119
geno

10
00:00:21,199 --> 00:00:23,600
recently we have been witnessing a rapid

11
00:00:23,600 --> 00:00:25,599
escalation of cyber threats that

12
00:00:25,599 --> 00:00:27,119
intentionally targeted large

13
00:00:27,119 --> 00:00:29,439
organizations while performing these

14
00:00:29,439 --> 00:00:32,719
attacks attackers inevitably

15
00:00:32,719 --> 00:00:34,880
leaves footprints in the victim

16
00:00:34,880 --> 00:00:37,200
substance a common question faced by

17
00:00:37,200 --> 00:00:39,760
security analysts is how to combat these

18
00:00:39,760 --> 00:00:41,760
cyber threats using

19
00:00:41,760 --> 00:00:44,719
attackers for prints

20
00:00:44,719 --> 00:00:47,280
audio records are common

21
00:00:47,280 --> 00:00:48,480
footprint

22
00:00:48,480 --> 00:00:50,879
which proves to be a valuable data

23
00:00:50,879 --> 00:00:53,440
source for analyzing cyber threat

24
00:00:53,440 --> 00:00:55,600
they can provide a low level view into

25
00:00:55,600 --> 00:00:58,000
system by monitoring system entity

26
00:00:58,000 --> 00:00:59,440
interactions

27
00:00:59,440 --> 00:01:02,239
for example when an attacker is filtered

28
00:01:02,239 --> 00:01:05,119
sensitive data the password file his

29
00:01:05,119 --> 00:01:07,760
activities will be recorded as system

30
00:01:07,760 --> 00:01:11,680
course in the audio records

31
00:01:11,680 --> 00:01:14,080
to facilitate attack detection and the

32
00:01:14,080 --> 00:01:16,720
investigation audio records are usually

33
00:01:16,720 --> 00:01:18,799
navigated through a prevalence graph

34
00:01:18,799 --> 00:01:20,880
that describes the system's historical

35
00:01:20,880 --> 00:01:22,320
context

36
00:01:22,320 --> 00:01:25,200
here by following the data provenance we

37
00:01:25,200 --> 00:01:27,600
can find that the password file is

38
00:01:27,600 --> 00:01:29,600
linked to a remote server through

39
00:01:29,600 --> 00:01:32,159
malicious executables

40
00:01:32,159 --> 00:01:34,640
in general system audit team connects

41
00:01:34,640 --> 00:01:37,040
several separate attack steps

42
00:01:37,040 --> 00:01:39,200
presenting the overall attack scenarios

43
00:01:39,200 --> 00:01:42,159
for security analyst

44
00:01:42,159 --> 00:01:45,119
based on how audio records are used for

45
00:01:45,119 --> 00:01:47,680
service rate analysis existing work can

46
00:01:47,680 --> 00:01:51,399
be categorized into three directions

47
00:01:51,399 --> 00:01:53,840
statistics-based approaches quantify

48
00:01:53,840 --> 00:01:57,119
audio records degrees of suspicion by by

49
00:01:57,119 --> 00:01:59,360
their historical frequency

50
00:01:59,360 --> 00:02:01,280
however the primary concern for this

51
00:02:01,280 --> 00:02:03,840
nano research is a number of

52
00:02:03,840 --> 00:02:06,719
force positives generated by rare

53
00:02:06,719 --> 00:02:09,878
but benign system activities

54
00:02:09,878 --> 00:02:12,080
specification-based approaches can

55
00:02:12,080 --> 00:02:15,120
maintain a low level or low voltage rate

56
00:02:15,120 --> 00:02:17,520
by mapping audio records against the

57
00:02:17,520 --> 00:02:20,080
knowledge base of security policies

58
00:02:20,080 --> 00:02:23,040
however such security policies are are

59
00:02:23,040 --> 00:02:25,280
usually can consumer and error prone to

60
00:02:25,280 --> 00:02:27,599
develop because they heavily depend on

61
00:02:27,599 --> 00:02:29,760
as per knowledge

62
00:02:29,760 --> 00:02:31,920
learning-based approaches typically

63
00:02:31,920 --> 00:02:34,800
train a model of benign behaviors and

64
00:02:34,800 --> 00:02:38,640
then detect deviations as cyber attacks

65
00:02:38,640 --> 00:02:41,360
unfortunately current learning based

66
00:02:41,360 --> 00:02:43,680
approaches only produce detection

67
00:02:43,680 --> 00:02:46,480
signals at the core screen level

68
00:02:46,480 --> 00:02:48,879
specifically behavior level

69
00:02:48,879 --> 00:02:51,599
which requires intensive manual efforts

70
00:02:51,599 --> 00:02:52,959
to review

71
00:02:52,959 --> 00:02:55,840
individual audio records in behaviors

72
00:02:55,840 --> 00:02:59,360
for attack investigation

73
00:02:59,760 --> 00:03:02,080
in this work we aim to address these

74
00:03:02,080 --> 00:03:04,319
limitations

75
00:03:04,319 --> 00:03:07,120
our solution is based on the observation

76
00:03:07,120 --> 00:03:09,840
that cyber threats can be revealed by

77
00:03:09,840 --> 00:03:12,400
determining how likely a system entity

78
00:03:12,400 --> 00:03:14,480
would interact with another system

79
00:03:14,480 --> 00:03:16,239
entity

80
00:03:16,239 --> 00:03:19,440
in particular unlikely or unintended

81
00:03:19,440 --> 00:03:22,480
system entity interactions would reveal

82
00:03:22,480 --> 00:03:24,720
cyber threats

83
00:03:24,720 --> 00:03:27,280
for example sensitive files normally do

84
00:03:27,280 --> 00:03:30,000
not interact with the public networks

85
00:03:30,000 --> 00:03:33,200
which otherwise indicate the daytime

86
00:03:33,200 --> 00:03:35,760
filtration activity

87
00:03:35,760 --> 00:03:38,480
such likelihood can be estimated using

88
00:03:38,480 --> 00:03:42,080
historical system nt interactions

89
00:03:42,080 --> 00:03:44,480
for example if we observe that this

90
00:03:44,480 --> 00:03:46,400
gtcache process

91
00:03:46,400 --> 00:03:47,280
has

92
00:03:47,280 --> 00:03:50,400
interact with the process status file

93
00:03:50,400 --> 00:03:53,200
then it's reasonable for this process to

94
00:03:53,200 --> 00:03:56,239
communicate or access another process

95
00:03:56,239 --> 00:03:58,720
data file

96
00:03:58,720 --> 00:04:01,680
this problem is similar to a

97
00:04:01,680 --> 00:04:04,080
recommendation task

98
00:04:04,080 --> 00:04:06,560
where the primary goal is to determine

99
00:04:06,560 --> 00:04:09,439
how likely a user would would interact

100
00:04:09,439 --> 00:04:11,920
with an item

101
00:04:11,920 --> 00:04:13,680
earlier recommendation systems

102
00:04:13,680 --> 00:04:16,079
comprehend user preferences

103
00:04:16,079 --> 00:04:18,399
by finding similar users

104
00:04:18,399 --> 00:04:22,639
using historical user item interactions

105
00:04:22,639 --> 00:04:26,320
to illustrate this idea we use a

106
00:04:26,320 --> 00:04:28,560
movie recommendation scenario where

107
00:04:28,560 --> 00:04:30,560
alice is a targeted user for

108
00:04:30,560 --> 00:04:32,479
recommendation

109
00:04:32,479 --> 00:04:35,360
since both eddies and bob have watched

110
00:04:35,360 --> 00:04:37,520
the ironman

111
00:04:37,520 --> 00:04:40,560
recommendation systems would uh would

112
00:04:40,560 --> 00:04:45,040
consider these two users users similar

113
00:04:45,040 --> 00:04:47,280
and because the source is bob's favorite

114
00:04:47,280 --> 00:04:50,000
movie recommendation systems would also

115
00:04:50,000 --> 00:04:52,880
recommend the store to edis because

116
00:04:52,880 --> 00:04:56,000
she is similar to bob

117
00:04:56,000 --> 00:04:57,919
unfortunately

118
00:04:57,919 --> 00:05:00,800
user item interactions are insufficient

119
00:05:00,800 --> 00:05:02,720
to recommend

120
00:05:02,720 --> 00:05:06,240
items that are disconnected in user in

121
00:05:06,240 --> 00:05:08,320
historical interactions

122
00:05:08,320 --> 00:05:10,880
for example the avengers queue

123
00:05:10,880 --> 00:05:12,639
to address this issue

124
00:05:12,639 --> 00:05:14,960
modern recommendation systems would

125
00:05:14,960 --> 00:05:17,840
adopt i-10 site information to form a

126
00:05:17,840 --> 00:05:20,160
high-order connectivity that links the

127
00:05:20,160 --> 00:05:22,560
similar items

128
00:05:22,560 --> 00:05:24,560
here because the iron man and the

129
00:05:24,560 --> 00:05:26,880
avengers are connected through

130
00:05:26,880 --> 00:05:29,360
multi-hall passes based on action and

131
00:05:29,360 --> 00:05:31,280
the marvel studios

132
00:05:31,280 --> 00:05:33,440
modern recommendation systems would

133
00:05:33,440 --> 00:05:35,919
recommend the addis to the avengers

134
00:05:35,919 --> 00:05:39,440
because it's similar to airmen

135
00:05:39,440 --> 00:05:40,960
the little woman would not be

136
00:05:40,960 --> 00:05:43,919
recommended because it's disconnected to

137
00:05:43,919 --> 00:05:46,400
addis

138
00:05:47,039 --> 00:05:49,759
inspired by recommendations

139
00:05:49,759 --> 00:05:52,240
we make an observation that similar

140
00:05:52,240 --> 00:05:55,360
system entities in audio records would

141
00:05:55,360 --> 00:05:58,800
share preferences on interactions

142
00:05:58,800 --> 00:06:01,600
for example sensitive data do not like

143
00:06:01,600 --> 00:06:05,199
interacting with the public networks

144
00:06:05,199 --> 00:06:07,120
and to uncover system entities

145
00:06:07,120 --> 00:06:08,400
similarities

146
00:06:08,400 --> 00:06:10,240
we aim to identify high order

147
00:06:10,240 --> 00:06:12,639
connectivity based on sign information

148
00:06:12,639 --> 00:06:15,120
of system entities

149
00:06:15,120 --> 00:06:17,919
for example if we observe that two

150
00:06:17,919 --> 00:06:20,560
process status files are called were

151
00:06:20,560 --> 00:06:23,039
correlated through process status

152
00:06:23,039 --> 00:06:24,160
information

153
00:06:24,160 --> 00:06:26,000
then we would determine that they are

154
00:06:26,000 --> 00:06:28,800
similar and share the preferences of

155
00:06:28,800 --> 00:06:32,720
interacting with the gt cache process

156
00:06:32,720 --> 00:06:35,680
as we as a result we can formulate a

157
00:06:35,680 --> 00:06:38,639
several thread analysis in audio records

158
00:06:38,639 --> 00:06:40,960
as a recommendation task

159
00:06:40,960 --> 00:06:43,680
which models how likely a system entity

160
00:06:43,680 --> 00:06:48,240
would prefer its interactive entities

161
00:06:48,240 --> 00:06:50,400
to perform recommendations on audio

162
00:06:50,400 --> 00:06:51,520
records

163
00:06:51,520 --> 00:06:53,599
we propose shield water

164
00:06:53,599 --> 00:06:56,000
it takes the system records

165
00:06:56,000 --> 00:06:57,440
as input

166
00:06:57,440 --> 00:07:00,720
and then generate a graph neon a graph a

167
00:07:00,720 --> 00:07:02,400
noise graph

168
00:07:02,400 --> 00:07:04,240
and based on this notch graph

169
00:07:04,240 --> 00:07:06,479
sharewatcher will trim a

170
00:07:06,479 --> 00:07:09,120
recommendation model to recommend the

171
00:07:09,120 --> 00:07:12,000
adversarial system entity interactions

172
00:07:12,000 --> 00:07:15,360
to security analyst

173
00:07:15,440 --> 00:07:19,120
first given audio records and encodes

174
00:07:19,120 --> 00:07:21,840
we pass them into a provenance graph

175
00:07:21,840 --> 00:07:23,840
where the nodes in the graph assist

176
00:07:23,840 --> 00:07:27,120
entities for example a process a file or

177
00:07:27,120 --> 00:07:28,400
circuit

178
00:07:28,400 --> 00:07:32,000
and the edges denote the system course

179
00:07:32,000 --> 00:07:35,479
we consider that two system entities are

180
00:07:35,479 --> 00:07:37,120
interacted

181
00:07:37,120 --> 00:07:40,080
as long as there is a path that links

182
00:07:40,080 --> 00:07:42,160
these two system entities in a

183
00:07:42,160 --> 00:07:44,240
provenance graph

184
00:07:44,240 --> 00:07:46,800
and here we extract all the system

185
00:07:46,800 --> 00:07:50,879
entities into a bipartite graph

186
00:07:50,960 --> 00:07:52,720
while system entities society

187
00:07:52,720 --> 00:07:55,520
information plays an important role in

188
00:07:55,520 --> 00:07:58,000
uncovering their semantics

189
00:07:58,000 --> 00:08:00,400
such information is not encoded in a

190
00:08:00,400 --> 00:08:03,360
province graph or by pathograph

191
00:08:03,360 --> 00:08:05,919
however a recent study has shown that

192
00:08:05,919 --> 00:08:08,400
such psychic information can be inferred

193
00:08:08,400 --> 00:08:10,400
from the context in which system

194
00:08:10,400 --> 00:08:12,879
entities are used

195
00:08:12,879 --> 00:08:15,199
as a result to incorporate high order

196
00:08:15,199 --> 00:08:17,919
connectivity as in recommendations

197
00:08:17,919 --> 00:08:20,879
we combine system entity contacts that

198
00:08:20,879 --> 00:08:23,199
represent the site information and the

199
00:08:23,199 --> 00:08:26,080
system entity interactions into a noise

200
00:08:26,080 --> 00:08:27,840
graph

201
00:08:27,840 --> 00:08:30,720
in this work we represent a north graph

202
00:08:30,720 --> 00:08:33,120
as a set of trebles

203
00:08:33,120 --> 00:08:36,159
this treble consists of three elements

204
00:08:36,159 --> 00:08:37,200
a head

205
00:08:37,200 --> 00:08:40,880
a radiation and a tail head and really

206
00:08:40,880 --> 00:08:43,440
head and the tail here represent the

207
00:08:43,440 --> 00:08:45,200
system entities

208
00:08:45,200 --> 00:08:47,920
and the relation denotes the system core

209
00:08:47,920 --> 00:08:48,720
or

210
00:08:48,720 --> 00:08:51,440
interactions

211
00:08:52,160 --> 00:08:54,480
taking the knowledge graph as input our

212
00:08:54,480 --> 00:08:56,800
key idea is to use different other

213
00:08:56,800 --> 00:08:59,680
connectivities in the graph to model the

214
00:08:59,680 --> 00:09:03,600
likelihood of system entity interactions

215
00:09:03,600 --> 00:09:06,560
towards this end we first model first

216
00:09:06,560 --> 00:09:09,360
order connectivity to parameterize

217
00:09:09,360 --> 00:09:12,160
system entities as embeddings

218
00:09:12,160 --> 00:09:14,320
then we try to model higher order

219
00:09:14,320 --> 00:09:16,800
connectivity by propagating embeddings

220
00:09:16,800 --> 00:09:18,560
from neighbors with a graph neural

221
00:09:18,560 --> 00:09:19,920
network

222
00:09:19,920 --> 00:09:21,519
at last

223
00:09:21,519 --> 00:09:24,399
we classify system entity interactions

224
00:09:24,399 --> 00:09:27,040
into normal and anomalous

225
00:09:27,040 --> 00:09:29,200
in what follows

226
00:09:29,200 --> 00:09:33,120
i will elaborate on these phases

227
00:09:34,160 --> 00:09:36,800
by modeling first half connections or

228
00:09:36,800 --> 00:09:39,680
first order connectivity in a program

229
00:09:39,680 --> 00:09:42,399
you know notch graph we aim to map

230
00:09:42,399 --> 00:09:45,360
system entities into a battery space to

231
00:09:45,360 --> 00:09:48,320
preserve their semantics

232
00:09:48,320 --> 00:09:51,200
our intuition is to use a system contact

233
00:09:51,200 --> 00:09:53,760
context to decide the semantics of

234
00:09:53,760 --> 00:09:55,920
system entities

235
00:09:55,920 --> 00:09:58,320
to do so we use a knowledge graph

236
00:09:58,320 --> 00:10:00,720
embedding method chance r

237
00:10:00,720 --> 00:10:04,800
at its core is to use head plus relation

238
00:10:04,800 --> 00:10:06,399
to define tail

239
00:10:06,399 --> 00:10:09,839
in node graphs tables

240
00:10:09,839 --> 00:10:11,839
it's worth mentioning that trends are

241
00:10:11,839 --> 00:10:14,160
will assign distinct semantics of

242
00:10:14,160 --> 00:10:17,040
individual system entities conditioned

243
00:10:17,040 --> 00:10:19,440
on different relations

244
00:10:19,440 --> 00:10:22,720
for example if this gt cache is used on

245
00:10:22,720 --> 00:10:25,839
the right and unlink relation context

246
00:10:25,839 --> 00:10:27,440
it will be given two different

247
00:10:27,440 --> 00:10:28,560
embeddings

248
00:10:28,560 --> 00:10:32,640
which indicates different semantics

249
00:10:32,640 --> 00:10:35,200
beyond the first half connections

250
00:10:35,200 --> 00:10:38,800
multi-hub passes are inherent in a

251
00:10:38,800 --> 00:10:40,880
noisy graph

252
00:10:40,880 --> 00:10:43,120
such high order connectivity not only

253
00:10:43,120 --> 00:10:45,440
supplement similarities among system

254
00:10:45,440 --> 00:10:48,240
entities but also exhibit how system

255
00:10:48,240 --> 00:10:51,120
entities influence each other

256
00:10:51,120 --> 00:10:53,360
the left two half pass shows the

257
00:10:53,360 --> 00:10:55,680
similarity between two process data

258
00:10:55,680 --> 00:10:58,560
files because they both interact with

259
00:10:58,560 --> 00:11:02,000
the gt process the write three hard pass

260
00:11:02,000 --> 00:11:04,000
describes how the password file is

261
00:11:04,000 --> 00:11:07,279
transmitted out of an enterprise

262
00:11:07,279 --> 00:11:10,800
to model such high order connectivity

263
00:11:10,800 --> 00:11:12,959
we adopt a graph neural network to

264
00:11:12,959 --> 00:11:15,360
iteratively propagate information along

265
00:11:15,360 --> 00:11:17,760
with the multi-hard passes in a notch

266
00:11:17,760 --> 00:11:19,920
graph

267
00:11:19,920 --> 00:11:22,399
afterwards we aggregate the embeddings

268
00:11:22,399 --> 00:11:25,040
from all the propagation iterations to

269
00:11:25,040 --> 00:11:28,160
form the final system entity interact in

270
00:11:28,160 --> 00:11:31,680
system mdt semantics

271
00:11:32,160 --> 00:11:35,040
after obtaining system entity intel uh

272
00:11:35,040 --> 00:11:35,760
in

273
00:11:35,760 --> 00:11:37,120
embeddings

274
00:11:37,120 --> 00:11:39,920
we apply inner product on them to

275
00:11:39,920 --> 00:11:42,240
predict how likely a system entity would

276
00:11:42,240 --> 00:11:44,880
not interact with another entity

277
00:11:44,880 --> 00:11:46,880
if the likelihood is beyond our

278
00:11:46,880 --> 00:11:49,600
predefined stress code we would classify

279
00:11:49,600 --> 00:11:51,360
the interaction

280
00:11:51,360 --> 00:11:54,399
as a potential service threat

281
00:11:54,399 --> 00:11:56,800
to keep up with involving system entity

282
00:11:56,800 --> 00:11:59,440
interactions will also enable dynamic

283
00:11:59,440 --> 00:12:02,000
updates of our recombination model

284
00:12:02,000 --> 00:12:05,600
using ns feedback on detection signals

285
00:12:05,600 --> 00:12:07,839
the details of such model update can be

286
00:12:07,839 --> 00:12:10,720
found in your paper

287
00:12:10,720 --> 00:12:13,760
to evaluate shield water we use the six

288
00:12:13,760 --> 00:12:16,560
real world cyber attacks simulated in a

289
00:12:16,560 --> 00:12:18,560
test ban environment

290
00:12:18,560 --> 00:12:21,040
and the four apt attacks from the darpa

291
00:12:21,040 --> 00:12:23,519
transparent computing tc

292
00:12:23,519 --> 00:12:25,519
dataset

293
00:12:25,519 --> 00:12:28,480
we focus on uh evaluating the following

294
00:12:28,480 --> 00:12:29,760
aspects

295
00:12:29,760 --> 00:12:32,000
how effective is shift watcher as a

296
00:12:32,000 --> 00:12:34,000
threat detection signal

297
00:12:34,000 --> 00:12:36,079
to what extent do different other

298
00:12:36,079 --> 00:12:38,240
information facilitate several threat

299
00:12:38,240 --> 00:12:40,079
analysis

300
00:12:40,079 --> 00:12:42,240
and how efficient is shear water in

301
00:12:42,240 --> 00:12:44,639
deployment

302
00:12:44,639 --> 00:12:46,880
in terms of shell washer's effectiveness

303
00:12:46,880 --> 00:12:49,360
in cyberspread detection we aim to

304
00:12:49,360 --> 00:12:51,760
identify service threats based on system

305
00:12:51,760 --> 00:12:55,120
entity interactions in the participation

306
00:12:55,120 --> 00:12:57,680
and the simulated data center

307
00:12:57,680 --> 00:13:01,360
the wrtc data set has over 68 thousand

308
00:13:01,360 --> 00:13:04,639
munitious interactions and around 8

309
00:13:04,639 --> 00:13:07,360
million benign interactions

310
00:13:07,360 --> 00:13:10,000
our experiment result shows that shea

311
00:13:10,000 --> 00:13:12,240
washer only misses 10

312
00:13:12,240 --> 00:13:15,440
malicious interactions and its overall

313
00:13:15,440 --> 00:13:19,360
phosphate rate is well below 1

314
00:13:19,360 --> 00:13:21,680
as for the simulator data set it

315
00:13:21,680 --> 00:13:25,360
consists of 39 malicious interactions

316
00:13:25,360 --> 00:13:27,360
two of which are missed by the shield

317
00:13:27,360 --> 00:13:29,600
watcher

318
00:13:29,600 --> 00:13:31,519
from this table we can see that shea

319
00:13:31,519 --> 00:13:33,440
watcher can distinguish benign and

320
00:13:33,440 --> 00:13:35,760
malicious interactions with a higher

321
00:13:35,760 --> 00:13:37,839
accuracy

322
00:13:37,839 --> 00:13:40,320
to um to answer how different order

323
00:13:40,320 --> 00:13:42,480
connectivity facilitates several strain

324
00:13:42,480 --> 00:13:43,839
analysis

325
00:13:43,839 --> 00:13:46,079
we compare different knowledge graph

326
00:13:46,079 --> 00:13:48,320
embedding algorithms and study the

327
00:13:48,320 --> 00:13:50,240
importance of high order information

328
00:13:50,240 --> 00:13:54,160
propagated by our graph neural networks

329
00:13:54,160 --> 00:13:56,959
the results are summarized in this table

330
00:13:56,959 --> 00:13:59,360
the combination of trends r plus graph

331
00:13:59,360 --> 00:14:01,360
neural network represents our share

332
00:14:01,360 --> 00:14:02,639
watcher

333
00:14:02,639 --> 00:14:04,320
compared with one holding coding

334
00:14:04,320 --> 00:14:06,399
transient and transaction

335
00:14:06,399 --> 00:14:08,959
transar's advantage is to distinguish

336
00:14:08,959 --> 00:14:12,000
semantics of system entities conditioned

337
00:14:12,000 --> 00:14:15,519
on different religions

338
00:14:15,680 --> 00:14:17,839
we observed that shield watcher achieves

339
00:14:17,839 --> 00:14:20,880
the best performance in terms of the auc

340
00:14:20,880 --> 00:14:22,240
venues

341
00:14:22,240 --> 00:14:24,160
which implies that high order

342
00:14:24,160 --> 00:14:26,240
information is beneficial for cyber

343
00:14:26,240 --> 00:14:27,920
threat analysis

344
00:14:27,920 --> 00:14:30,160
and it's important to distinguish

345
00:14:30,160 --> 00:14:33,120
different semantics for such for system

346
00:14:33,120 --> 00:14:35,199
entities under different relation

347
00:14:35,199 --> 00:14:37,600
contexts

348
00:14:37,600 --> 00:14:39,440
we measure share watchers wrong time

349
00:14:39,440 --> 00:14:43,120
overhead on the public dot rtc data set

350
00:14:43,120 --> 00:14:45,120
at different phases

351
00:14:45,120 --> 00:14:48,000
we perform all experiments five times

352
00:14:48,000 --> 00:14:49,839
and report the main results in this

353
00:14:49,839 --> 00:14:51,199
table

354
00:14:51,199 --> 00:14:52,880
from the table we can see that

355
00:14:52,880 --> 00:14:54,639
sharewatcher can pinpoint service

356
00:14:54,639 --> 00:14:57,360
threats for nearly a medium system

357
00:14:57,360 --> 00:14:59,920
entity interactions within several

358
00:14:59,920 --> 00:15:01,519
seconds

359
00:15:01,519 --> 00:15:03,279
we would like to point out that we

360
00:15:03,279 --> 00:15:05,519
obtain these results

361
00:15:05,519 --> 00:15:06,800
by running

362
00:15:06,800 --> 00:15:09,040
sharewater on a gpu machine

363
00:15:09,040 --> 00:15:12,079
by further evaluating shearwater on cpu

364
00:15:12,079 --> 00:15:14,639
machines we observe that shield watcher

365
00:15:14,639 --> 00:15:17,519
can still finish system entity classif

366
00:15:17,519 --> 00:15:19,839
system entity in action interaction

367
00:15:19,839 --> 00:15:22,959
classification within four minutes which

368
00:15:22,959 --> 00:15:24,800
is still practical in real-world

369
00:15:24,800 --> 00:15:27,600
scenarios

370
00:15:27,600 --> 00:15:28,880
to conclude

371
00:15:28,880 --> 00:15:30,399
to conclude

372
00:15:30,399 --> 00:15:33,120
nowadays we have been every cyber

373
00:15:33,120 --> 00:15:35,600
threats are everywhere leaving traces of

374
00:15:35,600 --> 00:15:38,000
shades in the vatican systems

375
00:15:38,000 --> 00:15:41,040
to reveal these sheets we propose a

376
00:15:41,040 --> 00:15:43,600
sharewater to analyze cyber threats

377
00:15:43,600 --> 00:15:45,920
through recommendations on system entity

378
00:15:45,920 --> 00:15:47,519
interactions

379
00:15:47,519 --> 00:15:50,320
it models a system entity's preferences

380
00:15:50,320 --> 00:15:53,040
on its interactive entities

381
00:15:53,040 --> 00:15:56,000
our key insights are that similar system

382
00:15:56,000 --> 00:15:57,040
entity

383
00:15:57,040 --> 00:15:59,360
entities would share preferences on

384
00:15:59,360 --> 00:16:00,639
interactions

385
00:16:00,639 --> 00:16:02,880
and higher order information can better

386
00:16:02,880 --> 00:16:05,920
correlate similar system entities even

387
00:16:05,920 --> 00:16:07,759
though they are disconnected in a

388
00:16:07,759 --> 00:16:10,560
problems graph

389
00:16:10,639 --> 00:16:12,240
thank you for your time and attention

390
00:16:12,240 --> 00:16:15,839
i'm happy to see any question

391
00:16:16,590 --> 00:16:19,729
[Applause]

392
00:16:21,040 --> 00:16:23,839
thank you very much for the presentation

393
00:16:23,839 --> 00:16:24,720
i

394
00:16:24,720 --> 00:16:27,440
am gonna coordinate the q a we have time

395
00:16:27,440 --> 00:16:29,279
for a few questions uh

396
00:16:29,279 --> 00:16:31,360
i'm keeping an eye on i'm keeping an eye

397
00:16:31,360 --> 00:16:33,360
also in the online

398
00:16:33,360 --> 00:16:35,440
platform from our audience that is

399
00:16:35,440 --> 00:16:38,399
following us from home

400
00:16:38,399 --> 00:16:40,560
if you have any question could you walk

401
00:16:40,560 --> 00:16:43,359
through the microphone

402
00:16:52,000 --> 00:16:54,480
can we turn on the microphone for the

403
00:16:54,480 --> 00:16:57,720
q a

404
00:17:14,880 --> 00:17:16,640
i mean for the sake of simplicity i'm

405
00:17:16,640 --> 00:17:18,720
gonna give

406
00:17:18,720 --> 00:17:20,400
my mic

407
00:17:20,400 --> 00:17:21,760
thank you

408
00:17:21,760 --> 00:17:24,079
that's very interesting talk

409
00:17:24,079 --> 00:17:25,919
my question simple

410
00:17:25,919 --> 00:17:27,839
i noticed that the false positive rate

411
00:17:27,839 --> 00:17:28,559
is

412
00:17:28,559 --> 00:17:31,840
low i mean 0.33 percent it's a great but

413
00:17:31,840 --> 00:17:34,080
we're given 8 million

414
00:17:34,080 --> 00:17:36,000
interactions i mean still this is a big

415
00:17:36,000 --> 00:17:37,440
number i mean

416
00:17:37,440 --> 00:17:39,039
is this manageable i mean we're talking

417
00:17:39,039 --> 00:17:39,840
about

418
00:17:39,840 --> 00:17:42,080
10 000 false positives in absolute

419
00:17:42,080 --> 00:17:43,440
numbers

420
00:17:43,440 --> 00:17:44,559
so

421
00:17:44,559 --> 00:17:46,320
are you satisfied with this how can we

422
00:17:46,320 --> 00:17:48,160
do better

423
00:17:48,160 --> 00:17:50,960
okay thanks for the question uh so first

424
00:17:50,960 --> 00:17:53,360
of all we have uh i need to acknowledge

425
00:17:53,360 --> 00:17:54,799
that like

426
00:17:54,799 --> 00:17:58,320
most anomaly detectors or detectors

427
00:17:58,320 --> 00:18:01,360
share watcher inherits the limitation of

428
00:18:01,360 --> 00:18:04,640
of a high phosphate rate uh because it

429
00:18:04,640 --> 00:18:06,799
detects the anomalous system entity

430
00:18:06,799 --> 00:18:09,120
interaction size cyber stress

431
00:18:09,120 --> 00:18:10,480
and

432
00:18:10,480 --> 00:18:13,039
we uh so first of all shear washer is

433
00:18:13,039 --> 00:18:15,679
used to perform the substrate analysis

434
00:18:15,679 --> 00:18:18,240
and produce the detection signals for

435
00:18:18,240 --> 00:18:19,760
security analysts

436
00:18:19,760 --> 00:18:23,200
and if the security analyst finds that

437
00:18:23,200 --> 00:18:24,880
for supportives

438
00:18:24,880 --> 00:18:27,120
are too many to analyze

439
00:18:27,120 --> 00:18:29,840
we suggest that the security analyst to

440
00:18:29,840 --> 00:18:33,440
use further technologies for example the

441
00:18:33,440 --> 00:18:35,760
threat another trend energy systems to

442
00:18:35,760 --> 00:18:38,799
render all of these uh malicious system

443
00:18:38,799 --> 00:18:41,840
entity interactions so that analysts can

444
00:18:41,840 --> 00:18:45,200
focus on the most important ones

445
00:18:45,200 --> 00:18:47,360
and i believe

446
00:18:47,360 --> 00:18:48,720
this is uh

447
00:18:48,720 --> 00:18:51,600
an open question for all the cyber

448
00:18:51,600 --> 00:18:55,360
threat detection systems and we also

449
00:18:55,360 --> 00:18:57,919
will focus on solving or mitigating this

450
00:18:57,919 --> 00:19:00,799
type of question in our future work

451
00:19:00,799 --> 00:19:03,120
thanks

452
00:19:04,000 --> 00:19:05,679
do we have other questions from the

453
00:19:05,679 --> 00:19:08,080
audience

454
00:19:08,080 --> 00:19:11,840
i just have a small curiosity like

455
00:19:12,160 --> 00:19:15,600
do you feel that this recommendation

456
00:19:15,600 --> 00:19:17,679
system principles could

457
00:19:17,679 --> 00:19:20,000
be extended also to other domains such

458
00:19:20,000 --> 00:19:21,840
as in code analysis

459
00:19:21,840 --> 00:19:23,679
or do you think that these principles

460
00:19:23,679 --> 00:19:27,280
apply already to the audit logs

461
00:19:27,280 --> 00:19:29,520
like the this relationship between the

462
00:19:29,520 --> 00:19:31,440
recommendation systems information

463
00:19:31,440 --> 00:19:34,640
propagation that you use here

464
00:19:34,640 --> 00:19:36,480
and other domains such as program

465
00:19:36,480 --> 00:19:38,480
analysis and code analysis maybe from

466
00:19:38,480 --> 00:19:40,240
our deduction yeah

467
00:19:40,240 --> 00:19:43,200
so yeah that's a very good question

468
00:19:43,200 --> 00:19:46,320
so um

469
00:19:47,120 --> 00:19:49,679
so to my knowledge or to our knowledge

470
00:19:49,679 --> 00:19:51,120
we are the first to use the

471
00:19:51,120 --> 00:19:53,840
recommendation engines

472
00:19:53,840 --> 00:19:57,360
to find further establishment analysis

473
00:19:57,360 --> 00:19:59,360
and this is because we find that the

474
00:19:59,360 --> 00:20:01,840
information propagation in a notch graph

475
00:20:01,840 --> 00:20:04,320
original province graph or build upon

476
00:20:04,320 --> 00:20:06,880
audio records are quite important to

477
00:20:06,880 --> 00:20:08,640
detect service threats

478
00:20:08,640 --> 00:20:11,679
so we believe that recombination

479
00:20:11,679 --> 00:20:14,320
systems or recombination engines can be

480
00:20:14,320 --> 00:20:17,280
a possible future directions for other

481
00:20:17,280 --> 00:20:18,480
security

482
00:20:18,480 --> 00:20:20,960
fields for example the source code

483
00:20:20,960 --> 00:20:23,919
analysis and the binary analysis because

484
00:20:23,919 --> 00:20:25,760
in source code and or

485
00:20:25,760 --> 00:20:27,440
program analysis because in program

486
00:20:27,440 --> 00:20:30,000
analysis we sometimes will construct a

487
00:20:30,000 --> 00:20:31,679
graph for example control

488
00:20:31,679 --> 00:20:33,919
control flow graph or code property

489
00:20:33,919 --> 00:20:36,720
graph out of programs and

490
00:20:36,720 --> 00:20:38,720
since the information propagation is

491
00:20:38,720 --> 00:20:40,880
also important in program analysis maybe

492
00:20:40,880 --> 00:20:43,440
we can use this recombination engine as

493
00:20:43,440 --> 00:20:45,919
a searching engine to find interesting

494
00:20:45,919 --> 00:20:49,039
interactions or activities for us to

495
00:20:49,039 --> 00:20:51,919
analyze some malicious activities

496
00:20:51,919 --> 00:20:54,159
thank you thanks let's have another

497
00:20:54,159 --> 00:20:58,200
round of applause for our speaker

