1
00:00:00,560 --> 00:00:02,639
okay thank you for the introduction uh

2
00:00:02,639 --> 00:00:04,080
so yeah i'm presenting a text on

3
00:00:04,080 --> 00:00:05,920
wireless co-existence

4
00:00:05,920 --> 00:00:07,839
my name is jessica clarsen and this is

5
00:00:07,839 --> 00:00:09,519
joint work with francesco gringoly

6
00:00:09,519 --> 00:00:12,799
michael hermann and matthias holik

7
00:00:12,799 --> 00:00:13,679
so

8
00:00:13,679 --> 00:00:15,519
in a wireless coexistence attack the

9
00:00:15,519 --> 00:00:17,359
idea is you have different wireless

10
00:00:17,359 --> 00:00:19,680
chips and for example now the bluetooth

11
00:00:19,680 --> 00:00:22,240
chip could try to attack the wi-fi chip

12
00:00:22,240 --> 00:00:25,039
on the same device

13
00:00:25,039 --> 00:00:26,880
and this is possible like if you look

14
00:00:26,880 --> 00:00:28,720
onto a modern phone

15
00:00:28,720 --> 00:00:32,000
of any vendor you have shared components

16
00:00:32,000 --> 00:00:35,200
within radios or connections in between

17
00:00:35,200 --> 00:00:36,320
radios

18
00:00:36,320 --> 00:00:37,840
so even though they're like all

19
00:00:37,840 --> 00:00:40,000
different technologies and separate

20
00:00:40,000 --> 00:00:43,040
ships some of this is shared and could

21
00:00:43,040 --> 00:00:44,719
be exploited

22
00:00:44,719 --> 00:00:46,960
so in this paper for example we

23
00:00:46,960 --> 00:00:49,360
show that the bluetooth chip can get

24
00:00:49,360 --> 00:00:52,000
code execution on the wi-fi component

25
00:00:52,000 --> 00:00:54,399
but also there's other possibilities so

26
00:00:54,399 --> 00:00:56,239
for example last week at weissec i

27
00:00:56,239 --> 00:00:58,559
presented a paper that shows that the

28
00:00:58,559 --> 00:01:00,879
bluetooth nfc and other whiteband ship

29
00:01:00,879 --> 00:01:02,800
stay on when the phone is powered off

30
00:01:02,800 --> 00:01:06,400
and they also are interconnected

31
00:01:06,400 --> 00:01:07,920
and of course vendors don't do this

32
00:01:07,920 --> 00:01:09,439
because they say hey we want a new

33
00:01:09,439 --> 00:01:12,320
attack surface but the uh yeah

34
00:01:12,320 --> 00:01:14,720
motivation behind this is like mainly

35
00:01:14,720 --> 00:01:16,400
performance so

36
00:01:16,400 --> 00:01:19,040
um in a wireless medium you have for

37
00:01:19,040 --> 00:01:20,960
example wi-fi and bluetooth they both

38
00:01:20,960 --> 00:01:23,759
transmit on 2.4 gigahertz and also some

39
00:01:23,759 --> 00:01:26,880
lte carriers are on the same frequency

40
00:01:26,880 --> 00:01:28,240
and because of this they need to

41
00:01:28,240 --> 00:01:30,079
schedule packets so you cannot transmit

42
00:01:30,079 --> 00:01:32,000
two packets on the same frequency of

43
00:01:32,000 --> 00:01:34,320
wifi and bluetooth and also not receive

44
00:01:34,320 --> 00:01:35,840
so you have to

45
00:01:35,840 --> 00:01:37,920
talk to each other kind of to coordinate

46
00:01:37,920 --> 00:01:39,439
this

47
00:01:39,439 --> 00:01:42,079
and because it's a shared medium anyway

48
00:01:42,079 --> 00:01:43,840
you can already

49
00:01:43,840 --> 00:01:45,520
minimize hardware costs because you can

50
00:01:45,520 --> 00:01:47,920
say okay we now share also the 2.4

51
00:01:47,920 --> 00:01:49,520
gigahertz antenna

52
00:01:49,520 --> 00:01:51,280
this saves you some cost you can also

53
00:01:51,280 --> 00:01:53,280
have memory components in this

54
00:01:53,280 --> 00:01:55,360
transmission chain that you share it

55
00:01:55,360 --> 00:01:57,200
just makes it cheaper

56
00:01:57,200 --> 00:01:59,759
and then another motivation can be power

57
00:01:59,759 --> 00:02:02,000
saving so for example some protocols

58
00:02:02,000 --> 00:02:04,240
have like bluetooth and ultra whiteband

59
00:02:04,240 --> 00:02:05,119
and then

60
00:02:05,119 --> 00:02:07,439
the bluetooth chip can't just vague

61
00:02:07,439 --> 00:02:10,080
ultraviolet when it is needed so that

62
00:02:10,080 --> 00:02:11,840
you just save power in the whole

63
00:02:11,840 --> 00:02:13,200
protocol

64
00:02:13,200 --> 00:02:15,040
and sometimes there are new features so

65
00:02:15,040 --> 00:02:16,720
the work that i presented last week at

66
00:02:16,720 --> 00:02:18,080
vystic was

67
00:02:18,080 --> 00:02:20,080
i think motivated by the digital clarity

68
00:02:20,080 --> 00:02:22,800
3.0 and the digital car key uses

69
00:02:22,800 --> 00:02:25,280
bluetooth and ultraviolet band and it's

70
00:02:25,280 --> 00:02:26,959
also connected to the nfc secure

71
00:02:26,959 --> 00:02:28,879
elements so that's like all different

72
00:02:28,879 --> 00:02:31,599
motivations to have these hardwired

73
00:02:31,599 --> 00:02:35,359
connections in between those chips

74
00:02:35,680 --> 00:02:36,640
so

75
00:02:36,640 --> 00:02:38,160
many manufacturers have these

76
00:02:38,160 --> 00:02:40,319
connections but now the question is like

77
00:02:40,319 --> 00:02:43,840
can we also exploit this feature

78
00:02:43,840 --> 00:02:45,519
and of course the answer is yes

79
00:02:45,519 --> 00:02:48,080
otherwise i wouldn't be here um so i

80
00:02:48,080 --> 00:02:50,080
mainly looked into a broadcom and

81
00:02:50,080 --> 00:02:52,480
cypress chips so that's a very big

82
00:02:52,480 --> 00:02:54,879
manufacturer like their chips are used

83
00:02:54,879 --> 00:02:56,879
in all iphones up to the most recent

84
00:02:56,879 --> 00:02:59,519
iphone in many samsung phones

85
00:02:59,519 --> 00:03:01,200
in the raspberry pi so you can find

86
00:03:01,200 --> 00:03:03,360
those ship really everywhere and i think

87
00:03:03,360 --> 00:03:05,200
every one of you has like

88
00:03:05,200 --> 00:03:07,680
a device with one of those chips

89
00:03:07,680 --> 00:03:10,560
and then we also for comparison got some

90
00:03:10,560 --> 00:03:13,040
chips from silicon lab so that's not as

91
00:03:13,040 --> 00:03:15,280
big as a manufacturer but still a good

92
00:03:15,280 --> 00:03:17,599
market share and they have a coexistence

93
00:03:17,599 --> 00:03:20,080
development kit which was very nice for

94
00:03:20,080 --> 00:03:21,920
analysis so and also had some

95
00:03:21,920 --> 00:03:24,159
documentation and we found that

96
00:03:24,159 --> 00:03:26,239
internship attacks are possible so we

97
00:03:26,239 --> 00:03:28,400
found like denial of service like one

98
00:03:28,400 --> 00:03:30,239
chip test i don't know i'm transmitting

99
00:03:30,239 --> 00:03:32,560
please never transmit this is possible

100
00:03:32,560 --> 00:03:34,879
for all the manufacturers

101
00:03:34,879 --> 00:03:36,959
and because they coordinate packet

102
00:03:36,959 --> 00:03:39,280
transmission and other information

103
00:03:39,280 --> 00:03:41,920
you can also leak some information

104
00:03:41,920 --> 00:03:43,599
between those chips

105
00:03:43,599 --> 00:03:45,920
and we found code execution which we

106
00:03:45,920 --> 00:03:47,519
only confirmed for the broadcom and

107
00:03:47,519 --> 00:03:49,200
cypress strips but who knows maybe

108
00:03:49,200 --> 00:03:51,360
there's other vendors with like

109
00:03:51,360 --> 00:03:53,360
similar vulnerabilities

110
00:03:53,360 --> 00:03:55,760
and because of limited time i'm now only

111
00:03:55,760 --> 00:03:57,599
going to show you like two of those

112
00:03:57,599 --> 00:04:00,159
attacks but you can find more attacks in

113
00:04:00,159 --> 00:04:02,640
the paper

114
00:04:03,040 --> 00:04:05,120
so previously i've been working

115
00:04:05,120 --> 00:04:07,920
a lot on bluetooth security and

116
00:04:07,920 --> 00:04:10,239
when developing a framework for

117
00:04:10,239 --> 00:04:13,920
bluetooth chip patching i found already

118
00:04:13,920 --> 00:04:16,160
a vulnerability in there and then a

119
00:04:16,160 --> 00:04:18,238
student i supervised developed

120
00:04:18,238 --> 00:04:20,639
fuzzer with emulation

121
00:04:20,639 --> 00:04:22,639
and he found even more

122
00:04:22,639 --> 00:04:24,479
uh remote code execution vulnerabilities

123
00:04:24,479 --> 00:04:26,400
on bluetooth chip so we thought like

124
00:04:26,400 --> 00:04:29,040
it's a good idea to like start

125
00:04:29,040 --> 00:04:31,840
with bluetooth as the entry point uh to

126
00:04:31,840 --> 00:04:33,360
a system

127
00:04:33,360 --> 00:04:35,040
now the thing is like cutoff is a bit

128
00:04:35,040 --> 00:04:37,440
limited like even if you would manage to

129
00:04:37,440 --> 00:04:39,280
escalate into the operating system which

130
00:04:39,280 --> 00:04:41,440
you are not if you're on the chip

131
00:04:41,440 --> 00:04:43,040
it's sandboxed

132
00:04:43,040 --> 00:04:44,080
and then

133
00:04:44,080 --> 00:04:45,919
the escalation to the operating system

134
00:04:45,919 --> 00:04:47,840
is also complex because it's connected

135
00:04:47,840 --> 00:04:50,400
via ur that's a very limited serial

136
00:04:50,400 --> 00:04:52,560
protocol so probably programmers will

137
00:04:52,560 --> 00:04:54,639
not make that many mistakes in the

138
00:04:54,639 --> 00:04:55,759
driver

139
00:04:55,759 --> 00:04:57,600
but bluetooth is interesting like it's

140
00:04:57,600 --> 00:04:59,360
warmable you can

141
00:04:59,360 --> 00:05:01,440
initiate a connection and receive a

142
00:05:01,440 --> 00:05:02,560
connection so you could build a

143
00:05:02,560 --> 00:05:04,960
bluetooth form but then this worm is

144
00:05:04,960 --> 00:05:05,680
like

145
00:05:05,680 --> 00:05:07,680
unstoppable like it has no internet back

146
00:05:07,680 --> 00:05:10,479
channel so yeah i don't know but it has

147
00:05:10,479 --> 00:05:12,000
interesting properties

148
00:05:12,000 --> 00:05:13,520
now if you look into

149
00:05:13,520 --> 00:05:16,560
wi-fi i mean on the operating system

150
00:05:16,560 --> 00:05:18,160
on the operating system level it's also

151
00:05:18,160 --> 00:05:20,639
sandbox but it's connected via pci

152
00:05:20,639 --> 00:05:22,560
express and that's a

153
00:05:22,560 --> 00:05:24,720
way more powerful interface

154
00:05:24,720 --> 00:05:26,720
also meaning that it's more likely that

155
00:05:26,720 --> 00:05:29,199
programmers make mistakes in here and

156
00:05:29,199 --> 00:05:31,440
wi-fi allows internet access

157
00:05:31,440 --> 00:05:34,000
it also like on a chip level without any

158
00:05:34,000 --> 00:05:35,919
escalation already knows the network key

159
00:05:35,919 --> 00:05:37,759
of the wi-fi that you're currently

160
00:05:37,759 --> 00:05:39,680
connected to to decrypt and encrypt

161
00:05:39,680 --> 00:05:40,880
packets

162
00:05:40,880 --> 00:05:42,960
so it's just two different technologies

163
00:05:42,960 --> 00:05:43,680
and

164
00:05:43,680 --> 00:05:45,919
finding something that kind of combines

165
00:05:45,919 --> 00:05:47,120
attacker

166
00:05:47,120 --> 00:05:49,199
capabilities here is really an

167
00:05:49,199 --> 00:05:52,400
interesting capability in the end

168
00:05:52,400 --> 00:05:54,320
so now i'm going to talk about two

169
00:05:54,320 --> 00:05:55,440
attacks

170
00:05:55,440 --> 00:05:57,120
that affect broadcom and cyprus

171
00:05:57,120 --> 00:05:58,880
coexistence

172
00:05:58,880 --> 00:06:01,440
and the first one is on a hardwired

173
00:06:01,440 --> 00:06:04,080
interface which is a serial interface

174
00:06:04,080 --> 00:06:06,000
between the chips it's called the

175
00:06:06,000 --> 00:06:10,080
enhanced coexistence interface

176
00:06:10,160 --> 00:06:12,240
for this you can already look a bit into

177
00:06:12,240 --> 00:06:14,960
the data sheets uh where it's yeah

178
00:06:14,960 --> 00:06:17,840
explain briefly what it does so the idea

179
00:06:17,840 --> 00:06:20,319
of this enhanced coexistence interfaces

180
00:06:20,319 --> 00:06:22,960
you have a serial connection between

181
00:06:22,960 --> 00:06:24,720
wifi and bluetooth

182
00:06:24,720 --> 00:06:26,720
and you coordinate when they send a

183
00:06:26,720 --> 00:06:28,639
packet and this is really essential so

184
00:06:28,639 --> 00:06:31,039
let's say i have a bluetooth headset and

185
00:06:31,039 --> 00:06:33,120
i'm streaming a youtube video

186
00:06:33,120 --> 00:06:34,720
something like that

187
00:06:34,720 --> 00:06:37,039
i want just to to listen to it

188
00:06:37,039 --> 00:06:39,199
uh what you would see without the

189
00:06:39,199 --> 00:06:41,520
coexistence interface so if you disable

190
00:06:41,520 --> 00:06:43,759
it like the video would buffer

191
00:06:43,759 --> 00:06:47,520
and then you can hear it like for a few

192
00:06:47,520 --> 00:06:50,080
seconds and then like again it buffers

193
00:06:50,080 --> 00:06:52,240
and and it's just really annoying and

194
00:06:52,240 --> 00:06:54,479
this interface enables you to do both at

195
00:06:54,479 --> 00:06:56,560
the same time with a high throughput

196
00:06:56,560 --> 00:06:57,919
without packets

197
00:06:57,919 --> 00:07:00,560
getting lost

198
00:07:01,120 --> 00:07:03,680
now this interface has some

199
00:07:03,680 --> 00:07:07,120
control registers and simply writing uh

200
00:07:07,120 --> 00:07:09,199
invalid values to the control registers

201
00:07:09,199 --> 00:07:12,080
crashes this interface and also from

202
00:07:12,080 --> 00:07:13,840
bluetooth you can crash the wi-fi chip

203
00:07:13,840 --> 00:07:16,960
so the wi-fi chip really restarts and on

204
00:07:16,960 --> 00:07:19,280
the interface between the chips when you

205
00:07:19,280 --> 00:07:21,360
have a serial analyzer and like electric

206
00:07:21,360 --> 00:07:23,520
analyzer look like into this protocol

207
00:07:23,520 --> 00:07:26,240
you can even see that there is a voltage

208
00:07:26,240 --> 00:07:28,560
drop in between so that's really weird

209
00:07:28,560 --> 00:07:31,120
and because of this hardware behavior

210
00:07:31,120 --> 00:07:32,160
then

211
00:07:32,160 --> 00:07:35,039
the wi-fi chip does not uh

212
00:07:35,039 --> 00:07:37,440
start again like correctly so the wi-fi

213
00:07:37,440 --> 00:07:38,720
chip is just

214
00:07:38,720 --> 00:07:40,960
restarting or the operating system

215
00:07:40,960 --> 00:07:42,720
attempts to restart the wi-fi chip

216
00:07:42,720 --> 00:07:44,639
without any success

217
00:07:44,639 --> 00:07:47,759
and on many operating systems so also

218
00:07:47,759 --> 00:07:50,479
samsung phones but also mac os ios we

219
00:07:50,479 --> 00:07:53,840
saw that this can cause the operating

220
00:07:53,840 --> 00:07:56,400
system to restart because it just times

221
00:07:56,400 --> 00:07:58,560
out on the pci express

222
00:07:58,560 --> 00:08:00,560
channel so that's a demonstration here

223
00:08:00,560 --> 00:08:02,639
so on the left hand side i write to a

224
00:08:02,639 --> 00:08:04,560
configuration register that was very

225
00:08:04,560 --> 00:08:06,080
fast but

226
00:08:06,080 --> 00:08:07,360
you see it again on the left hand side i

227
00:08:07,360 --> 00:08:08,639
do this and then on the right hand side

228
00:08:08,639 --> 00:08:10,639
you can first see wifi stops to work so

229
00:08:10,639 --> 00:08:12,160
that's the ping that stops on the right

230
00:08:12,160 --> 00:08:14,639
hand side and then after a few moments

231
00:08:14,639 --> 00:08:17,360
the operating system restarts so this is

232
00:08:17,360 --> 00:08:19,919
still only denial of service but a very

233
00:08:19,919 --> 00:08:21,759
powerful one because it escalates into

234
00:08:21,759 --> 00:08:24,800
the operating system

235
00:08:25,280 --> 00:08:27,919
now i have a second example which is uh

236
00:08:27,919 --> 00:08:29,840
even more interesting because we can

237
00:08:29,840 --> 00:08:31,919
even get code execution between the

238
00:08:31,919 --> 00:08:33,200
chips

239
00:08:33,200 --> 00:08:34,159
so

240
00:08:34,159 --> 00:08:36,399
initially i thought hey there's this

241
00:08:36,399 --> 00:08:39,039
serial protocol now we can try to look

242
00:08:39,039 --> 00:08:41,760
for side channels extract information

243
00:08:41,760 --> 00:08:43,679
and stuff and i spent a lot of time on

244
00:08:43,679 --> 00:08:46,399
this just to see like how powerful is

245
00:08:46,399 --> 00:08:47,920
this interface for any form of

246
00:08:47,920 --> 00:08:50,000
exfiltration

247
00:08:50,000 --> 00:08:51,519
but in the end

248
00:08:51,519 --> 00:08:53,920
it turns out there's like even more so

249
00:08:53,920 --> 00:08:55,760
there's not much documentation and

250
00:08:55,760 --> 00:08:58,000
leaked data sheets so there's like some

251
00:08:58,000 --> 00:08:59,839
drawings similar to this

252
00:08:59,839 --> 00:09:02,080
um and also not in all versions but

253
00:09:02,080 --> 00:09:03,920
there was this one version of a data

254
00:09:03,920 --> 00:09:05,360
sheet where they mentioned something

255
00:09:05,360 --> 00:09:07,440
that called that's called like w learn

256
00:09:07,440 --> 00:09:10,399
ram sharing you can see it's only in

257
00:09:10,399 --> 00:09:13,519
one direction it's not documented except

258
00:09:13,519 --> 00:09:15,440
from like this

259
00:09:15,440 --> 00:09:17,440
this one figure

260
00:09:17,440 --> 00:09:19,760
but a lot of reverse engineering later i

261
00:09:19,760 --> 00:09:23,920
found out like how to use this feature

262
00:09:23,920 --> 00:09:25,360
so actually on the left hand side you

263
00:09:25,360 --> 00:09:26,320
can see

264
00:09:26,320 --> 00:09:27,279
i'm

265
00:09:27,279 --> 00:09:30,240
writing to yet another special address

266
00:09:30,240 --> 00:09:33,440
which is mapped from bluetooth to wi-fi

267
00:09:33,440 --> 00:09:34,399
so

268
00:09:34,399 --> 00:09:36,000
yeah you can see my mouse pointer when

269
00:09:36,000 --> 00:09:38,480
i'm moving so here i'm uh

270
00:09:38,480 --> 00:09:39,600
writing

271
00:09:39,600 --> 00:09:42,240
a branch instruction to an address like

272
00:09:42,240 --> 00:09:45,120
on bluetooth and then like to a very

273
00:09:45,120 --> 00:09:48,800
high address and this is mapped to wi-fi

274
00:09:48,800 --> 00:09:51,200
and then a moment later like wi-fi is

275
00:09:51,200 --> 00:09:53,680
restarting and it's crashing

276
00:09:53,680 --> 00:09:55,920
at this address so this shows that we

277
00:09:55,920 --> 00:09:58,160
really can control uh the code flow and

278
00:09:58,160 --> 00:10:00,000
the code that is executed

279
00:10:00,000 --> 00:10:02,240
in wi-fi which is really an interesting

280
00:10:02,240 --> 00:10:05,240
property

281
00:10:05,279 --> 00:10:06,959
and of course this is

282
00:10:06,959 --> 00:10:08,800
something yeah i showed you that this

283
00:10:08,800 --> 00:10:09,680
works

284
00:10:09,680 --> 00:10:12,480
for cypress and broadcom but it's a more

285
00:10:12,480 --> 00:10:14,240
generic issue like

286
00:10:14,240 --> 00:10:16,880
if you look into data sheets all major

287
00:10:16,880 --> 00:10:19,519
um vendors they mentioned that they have

288
00:10:19,519 --> 00:10:21,440
a coexistence interface like of course

289
00:10:21,440 --> 00:10:22,560
they are not

290
00:10:22,560 --> 00:10:25,120
described in a lot of detail but they

291
00:10:25,120 --> 00:10:27,120
mentioned we have interfaces for

292
00:10:27,120 --> 00:10:29,360
coexistence

293
00:10:29,360 --> 00:10:32,480
and we found like the same like denial

294
00:10:32,480 --> 00:10:34,079
of service information leaked stuff it's

295
00:10:34,079 --> 00:10:36,560
possible for silicon labs chips

296
00:10:36,560 --> 00:10:39,360
there is one restriction so some chips

297
00:10:39,360 --> 00:10:41,839
they don't separate those technologies

298
00:10:41,839 --> 00:10:43,519
like for example you might have one ship

299
00:10:43,519 --> 00:10:45,440
that has multiple wireless technologies

300
00:10:45,440 --> 00:10:47,200
running all on one core

301
00:10:47,200 --> 00:10:49,680
then this type of attack is kind of

302
00:10:49,680 --> 00:10:52,560
possible by design but still it means

303
00:10:52,560 --> 00:10:54,399
like on the operating system level there

304
00:10:54,399 --> 00:10:56,399
might still be some some leakage or

305
00:10:56,399 --> 00:10:58,399
something or you still have like this

306
00:10:58,399 --> 00:11:01,040
powerful property that the sandboxing of

307
00:11:01,040 --> 00:11:03,040
the operating system will not really

308
00:11:03,040 --> 00:11:05,440
separate wifi and bluetooth because it's

309
00:11:05,440 --> 00:11:08,959
attackable on a chip level

310
00:11:09,920 --> 00:11:12,560
and with this i'm going to conclude my

311
00:11:12,560 --> 00:11:14,480
talk

312
00:11:14,480 --> 00:11:18,079
so first of all the security impact is

313
00:11:18,079 --> 00:11:20,560
that like all wireless chips they have

314
00:11:20,560 --> 00:11:22,800
they are now forming a complex subsystem

315
00:11:22,800 --> 00:11:25,200
and so exploitation of one chip can now

316
00:11:25,200 --> 00:11:27,040
lead to exploitation of this whole

317
00:11:27,040 --> 00:11:28,800
subsystem if they're hardwired

318
00:11:28,800 --> 00:11:30,480
connections and these hardware

319
00:11:30,480 --> 00:11:33,040
connections also mean that the attacks

320
00:11:33,040 --> 00:11:34,720
cannot be prevented by the operating

321
00:11:34,720 --> 00:11:36,399
system like it's a serial connection

322
00:11:36,399 --> 00:11:38,320
between two chips it never passes the

323
00:11:38,320 --> 00:11:40,480
operating system layer

324
00:11:40,480 --> 00:11:42,959
and decide to stop this attack

325
00:11:42,959 --> 00:11:44,399
and this also means that if the

326
00:11:44,399 --> 00:11:46,720
operating system is sandboxing wifi

327
00:11:46,720 --> 00:11:49,600
bluetooth whatsoever this scent boxing

328
00:11:49,600 --> 00:11:51,680
is not effective on the hardware layer

329
00:11:51,680 --> 00:11:54,160
anymore

330
00:11:54,240 --> 00:11:56,800
so we really have to rethink uh wireless

331
00:11:56,800 --> 00:11:59,200
attacks more on text of like the whole

332
00:11:59,200 --> 00:12:01,360
wireless subsystem rather than

333
00:12:01,360 --> 00:12:03,760
one single chip and it's also changing

334
00:12:03,760 --> 00:12:05,120
the threat model

335
00:12:05,120 --> 00:12:08,160
in the wireless world here

336
00:12:08,160 --> 00:12:10,320
all right then with this let's go to the

337
00:12:10,320 --> 00:12:11,360
q a

338
00:12:11,360 --> 00:12:14,959
all right let's thank our speaker

339
00:12:15,600 --> 00:12:17,279
before our first question gets up i just

340
00:12:17,279 --> 00:12:18,800
want to ask you something really quickly

341
00:12:18,800 --> 00:12:21,360
yes this is very very cool work

342
00:12:21,360 --> 00:12:23,760
have you thought about i mean

343
00:12:23,760 --> 00:12:25,920
you've mentioned that we need to rethink

344
00:12:25,920 --> 00:12:28,000
what security looks like but how do you

345
00:12:28,000 --> 00:12:30,079
do this isolation what does it look like

346
00:12:30,079 --> 00:12:31,440
other than separating them onto two

347
00:12:31,440 --> 00:12:34,000
separate chips

348
00:12:34,000 --> 00:12:36,160
yeah so i think when vendors was

349
00:12:36,160 --> 00:12:38,000
designed like the vendors did not really

350
00:12:38,000 --> 00:12:39,200
think about

351
00:12:39,200 --> 00:12:41,760
um like security but more performance

352
00:12:41,760 --> 00:12:43,680
and this is what caused it

353
00:12:43,680 --> 00:12:44,720
i think

354
00:12:44,720 --> 00:12:47,839
so we have not seen any any validated

355
00:12:47,839 --> 00:12:49,760
checks like for example the vendor could

356
00:12:49,760 --> 00:12:51,040
now try to

357
00:12:51,040 --> 00:12:53,200
check if i don't know bluetooth claims

358
00:12:53,200 --> 00:12:55,440
all resources is this valid or not this

359
00:12:55,440 --> 00:12:57,360
can be implemented on a protocol level

360
00:12:57,360 --> 00:12:59,680
so they could implement protocol checks

361
00:12:59,680 --> 00:13:01,839
here assuming that now ships are

362
00:13:01,839 --> 00:13:04,240
attacking each other

363
00:13:04,240 --> 00:13:06,720
something that cannot be fixed easily in

364
00:13:06,720 --> 00:13:08,399
the current generation of chips is of

365
00:13:08,399 --> 00:13:10,399
course like a shared

366
00:13:10,399 --> 00:13:11,920
memory component you cannot really

367
00:13:11,920 --> 00:13:14,320
remove this but long term you could

368
00:13:14,320 --> 00:13:16,000
think of like is this needed can we

369
00:13:16,000 --> 00:13:18,639
separate it

370
00:13:19,519 --> 00:13:22,320
i guess i had a very similar question um

371
00:13:22,320 --> 00:13:23,600
as patrick

372
00:13:23,600 --> 00:13:26,160
but my thoughts are that maybe at the os

373
00:13:26,160 --> 00:13:28,160
level would it be able to

374
00:13:28,160 --> 00:13:29,519
would it be possible to you know

375
00:13:29,519 --> 00:13:31,839
fundamentally virtualize the

376
00:13:31,839 --> 00:13:33,600
you know the transmission of data across

377
00:13:33,600 --> 00:13:34,480
different

378
00:13:34,480 --> 00:13:37,279
uh wireless channels and could that have

379
00:13:37,279 --> 00:13:39,680
an impact on you know improving the

380
00:13:39,680 --> 00:13:41,680
security

381
00:13:41,680 --> 00:13:44,399
by virtualizing you mean like i mean

382
00:13:44,399 --> 00:13:46,240
it's already going through separate

383
00:13:46,240 --> 00:13:48,320
drivers separate level so it's very

384
00:13:48,320 --> 00:13:50,000
separate on the operating system level

385
00:13:50,000 --> 00:13:51,839
already

386
00:13:51,839 --> 00:13:55,600
um i'm not sure if that would help

387
00:13:55,600 --> 00:13:58,079
so adding another layer of interaction i

388
00:13:58,079 --> 00:13:59,839
i don't think so that that it would help

389
00:13:59,839 --> 00:14:02,639
like the hardware is still connected

390
00:14:02,639 --> 00:14:05,199
but the operating system you have like

391
00:14:05,199 --> 00:14:07,360
the bluetooth framework which is used by

392
00:14:07,360 --> 00:14:10,240
the application and the framework is

393
00:14:10,240 --> 00:14:11,920
using

394
00:14:11,920 --> 00:14:14,560
the the driver on user space which is

395
00:14:14,560 --> 00:14:17,040
then talking to the kernel which is

396
00:14:17,040 --> 00:14:19,600
then actually talking to the hardware

397
00:14:19,600 --> 00:14:21,440
so so it's already having a lot of

398
00:14:21,440 --> 00:14:24,079
components that are somehow separate

399
00:14:24,079 --> 00:14:26,000
yeah i guess that does you know answer

400
00:14:26,000 --> 00:14:30,519
my question yes yeah thank you

401
00:14:32,000 --> 00:14:35,760
all right any more questions

402
00:14:36,160 --> 00:14:39,780
okay let's thank our speaker again

403
00:14:39,780 --> 00:14:43,010
[Applause]

