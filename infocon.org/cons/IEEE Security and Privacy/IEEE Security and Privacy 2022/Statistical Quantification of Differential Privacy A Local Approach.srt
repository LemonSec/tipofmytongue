1
00:00:00,000 --> 00:00:02,320
me okay

2
00:00:02,320 --> 00:00:04,319
okay welcome to this presentation on

3
00:00:04,319 --> 00:00:05,520
statistical quantification of

4
00:00:05,520 --> 00:00:06,879
differential privacy thank you for

5
00:00:06,879 --> 00:00:08,000
joining me

6
00:00:08,000 --> 00:00:11,040
so uh as david has just told you so this

7
00:00:11,040 --> 00:00:12,799
joint worked with anna askin and

8
00:00:12,799 --> 00:00:14,880
holgardetter which are colleagues of

9
00:00:14,880 --> 00:00:16,800
mine all at the whole university of

10
00:00:16,800 --> 00:00:18,800
bochum germany

11
00:00:18,800 --> 00:00:21,119
and since the this is the first talk in

12
00:00:21,119 --> 00:00:22,480
the session on differential privacy i

13
00:00:22,480 --> 00:00:24,800
think it's nice to just say in one word

14
00:00:24,800 --> 00:00:27,599
what differential privacy is all about

15
00:00:27,599 --> 00:00:30,400
so um situations where we're interested

16
00:00:30,400 --> 00:00:31,920
in differential privacy arise in the

17
00:00:31,920 --> 00:00:32,800
following

18
00:00:32,800 --> 00:00:34,320
situations

19
00:00:34,320 --> 00:00:36,640
uh so we consider a number of

20
00:00:36,640 --> 00:00:39,520
individuals which have data which is

21
00:00:39,520 --> 00:00:42,879
collected in a database which we call x

22
00:00:42,879 --> 00:00:44,640
and we're interested in publishing a

23
00:00:44,640 --> 00:00:47,360
query of this database say for example

24
00:00:47,360 --> 00:00:49,120
um in very simple case the mean of the

25
00:00:49,120 --> 00:00:51,039
database right

26
00:00:51,039 --> 00:00:52,559
in situations where we want to publish

27
00:00:52,559 --> 00:00:54,559
this kind of query there's a danger of

28
00:00:54,559 --> 00:00:56,160
impinging on the privacy of the

29
00:00:56,160 --> 00:00:58,480
individuals because there might be an

30
00:00:58,480 --> 00:01:01,520
attacker who's really able to infer data

31
00:01:01,520 --> 00:01:03,760
of the individuals or participation of

32
00:01:03,760 --> 00:01:06,240
individuals by virtue of this query so

33
00:01:06,240 --> 00:01:08,080
later on i think we're going to look at

34
00:01:08,080 --> 00:01:10,240
an example of this from the u.s census

35
00:01:10,240 --> 00:01:13,200
so this is a real concern

36
00:01:13,200 --> 00:01:15,040
when you want to publish data

37
00:01:15,040 --> 00:01:16,799
now the insight of differential privacy

38
00:01:16,799 --> 00:01:19,119
is that you can somehow

39
00:01:19,119 --> 00:01:21,600
protect people's privacy by adding

40
00:01:21,600 --> 00:01:24,240
random noise basically to the query

41
00:01:24,240 --> 00:01:26,320
and the idea now is that if you add a

42
00:01:26,320 --> 00:01:28,080
sufficient amount of noise this will

43
00:01:28,080 --> 00:01:30,320
actually mask the individual and small

44
00:01:30,320 --> 00:01:32,720
contribution of any participant in this

45
00:01:32,720 --> 00:01:34,000
database

46
00:01:34,000 --> 00:01:36,240
what you wind up with is an output which

47
00:01:36,240 --> 00:01:39,600
is distributed according to afx where a

48
00:01:39,600 --> 00:01:41,600
is a randomized algorithm so you're

49
00:01:41,600 --> 00:01:43,439
going to have an output which follows a

50
00:01:43,439 --> 00:01:46,079
random distribution

51
00:01:46,079 --> 00:01:47,920
um in differential privacy we'd like to

52
00:01:47,920 --> 00:01:50,079
think about situations where we have one

53
00:01:50,079 --> 00:01:52,159
individual in a database and want to

54
00:01:52,159 --> 00:01:55,200
brand this plausible deniability so we

55
00:01:55,200 --> 00:01:57,119
look at this orange individual in the

56
00:01:57,119 --> 00:02:00,159
database x and exchange it with another

57
00:02:00,159 --> 00:02:02,479
individual the blue one in the database

58
00:02:02,479 --> 00:02:03,920
x prime

59
00:02:03,920 --> 00:02:06,240
in each case a of x is going to follow a

60
00:02:06,240 --> 00:02:09,119
random distribution and now differential

61
00:02:09,119 --> 00:02:11,520
price of privacy says well you know

62
00:02:11,520 --> 00:02:13,520
privacy is protected if these true

63
00:02:13,520 --> 00:02:15,920
distributions are in some suitable sense

64
00:02:15,920 --> 00:02:17,599
similar

65
00:02:17,599 --> 00:02:19,200
and this makes sense from an intuitive

66
00:02:19,200 --> 00:02:20,640
viewpoint because

67
00:02:20,640 --> 00:02:22,720
if the attacker is really not able to

68
00:02:22,720 --> 00:02:25,200
tell whether the output is generated by

69
00:02:25,200 --> 00:02:27,280
afx or afx prime this really grants

70
00:02:27,280 --> 00:02:30,560
plausible denied deniability deniability

71
00:02:30,560 --> 00:02:33,440
to each individual

72
00:02:33,440 --> 00:02:35,040
now let us look at this from a more

73
00:02:35,040 --> 00:02:37,280
mathematical perspective

74
00:02:37,280 --> 00:02:39,200
differential privacy is a quantitative

75
00:02:39,200 --> 00:02:40,080
notion

76
00:02:40,080 --> 00:02:42,879
and it is quantified by a privacy

77
00:02:42,879 --> 00:02:45,599
parameter epsilon an epsilon lives on

78
00:02:45,599 --> 00:02:48,000
the positive real numbers

79
00:02:48,000 --> 00:02:49,680
somewhat unintuitively or at least

80
00:02:49,680 --> 00:02:52,720
that's my opinion uh small epsilon stand

81
00:02:52,720 --> 00:02:55,360
for high privacy hype epsilons then for

82
00:02:55,360 --> 00:02:57,120
low privacy i always try to imagine this

83
00:02:57,120 --> 00:02:58,640
as being like epsilon stands for the

84
00:02:58,640 --> 00:03:00,640
amount of information that is leaks so

85
00:03:00,640 --> 00:03:02,720
you basically have small leakage high

86
00:03:02,720 --> 00:03:05,280
privacy

87
00:03:05,280 --> 00:03:07,040
so for the purpose of this talk i think

88
00:03:07,040 --> 00:03:08,879
it's really fine to think as small

89
00:03:08,879 --> 00:03:10,720
epsilons as the good ones which protect

90
00:03:10,720 --> 00:03:12,560
privacy and large epsilons as being the

91
00:03:12,560 --> 00:03:14,959
bad ones it's not that simple but i

92
00:03:14,959 --> 00:03:17,920
think for us today this should be fine

93
00:03:17,920 --> 00:03:19,599
when you construct an algorithm you

94
00:03:19,599 --> 00:03:20,720
usually

95
00:03:20,720 --> 00:03:21,680
want to

96
00:03:21,680 --> 00:03:23,519
determine its privacy parameter and

97
00:03:23,519 --> 00:03:25,599
usually when you design the algorithm

98
00:03:25,599 --> 00:03:27,360
you're going to do this by formal

99
00:03:27,360 --> 00:03:30,239
mathematical proofs

100
00:03:30,239 --> 00:03:31,440
this is the case when you design the

101
00:03:31,440 --> 00:03:32,959
algorithm yourself or when you have

102
00:03:32,959 --> 00:03:35,280
access to the source code however today

103
00:03:35,280 --> 00:03:36,879
i want to talk about the situation when

104
00:03:36,879 --> 00:03:38,959
this is not so when you're looking at

105
00:03:38,959 --> 00:03:41,680
the algorithm as a black box

106
00:03:41,680 --> 00:03:43,680
if you don't have access to the

107
00:03:43,680 --> 00:03:46,159
algorithm you're you are really reliant

108
00:03:46,159 --> 00:03:48,000
on the outputs of the algorithm if you

109
00:03:48,000 --> 00:03:50,879
want to say anything about its privacy

110
00:03:50,879 --> 00:03:52,720
these kinds of situations might arise

111
00:03:52,720 --> 00:03:55,760
for example um if the algorithm is owned

112
00:03:55,760 --> 00:03:58,080
by a third party and you may privatize

113
00:03:58,080 --> 00:03:59,760
stuff by it but they're not willing to

114
00:03:59,760 --> 00:04:02,319
share the code or it might be even if

115
00:04:02,319 --> 00:04:04,319
the code is yours but it's really kind

116
00:04:04,319 --> 00:04:06,000
of complicated and you want to check

117
00:04:06,000 --> 00:04:07,519
whether you've made any mistake in there

118
00:04:07,519 --> 00:04:09,200
and so it might be easiest to just you

119
00:04:09,200 --> 00:04:12,640
know look at the outputs

120
00:04:13,360 --> 00:04:15,360
how do you do this well the standard

121
00:04:15,360 --> 00:04:16,798
approach in the literature so there's

122
00:04:16,798 --> 00:04:18,238
literature on anything so there's also

123
00:04:18,238 --> 00:04:20,959
literature on privacy testing and the

124
00:04:20,959 --> 00:04:22,960
way you do this is you develop another

125
00:04:22,960 --> 00:04:24,320
algorithm n

126
00:04:24,320 --> 00:04:28,320
you feed outputs of algorithm a in m and

127
00:04:28,320 --> 00:04:30,960
m outputs a lower bound of privacy for

128
00:04:30,960 --> 00:04:32,720
conceptual reasons it's usually not

129
00:04:32,720 --> 00:04:34,400
possible to give an upper bound but only

130
00:04:34,400 --> 00:04:35,840
to give lower bounds we'll see this in

131
00:04:35,840 --> 00:04:37,440
just a second

132
00:04:37,440 --> 00:04:39,680
this lower bound is based on

133
00:04:39,680 --> 00:04:42,000
random outputs of a this means that it

134
00:04:42,000 --> 00:04:44,240
is itself random but it will hold with

135
00:04:44,240 --> 00:04:45,759
high probability if you design it

136
00:04:45,759 --> 00:04:48,160
correctly

137
00:04:48,160 --> 00:04:50,400
so this lower bound has the advantage of

138
00:04:50,400 --> 00:04:52,479
if you um do it cleverly it will

139
00:04:52,479 --> 00:04:54,080
approximate epsilon it will tell you

140
00:04:54,080 --> 00:04:56,320
that the algorithm is not more private

141
00:04:56,320 --> 00:04:58,560
than this lower bound lb

142
00:04:58,560 --> 00:05:01,280
and it might even serve to uh as

143
00:05:01,280 --> 00:05:02,880
it might help you to expose faulty

144
00:05:02,880 --> 00:05:04,960
algorithms so the owner of the algorithm

145
00:05:04,960 --> 00:05:06,240
says well this is an epsilon

146
00:05:06,240 --> 00:05:08,080
differentially private algorithm isn't

147
00:05:08,080 --> 00:05:10,160
this superb and you say well you know

148
00:05:10,160 --> 00:05:13,520
what the lower bond lb states that it is

149
00:05:13,520 --> 00:05:15,680
larger than the claimed privacy level

150
00:05:15,680 --> 00:05:17,120
epsilon so there might be something

151
00:05:17,120 --> 00:05:20,560
fishy about this algorithm

152
00:05:21,360 --> 00:05:23,919
so the way you get these kinds of lower

153
00:05:23,919 --> 00:05:26,400
bounds is usually the following

154
00:05:26,400 --> 00:05:28,639
um you look at a kind of privacy loss

155
00:05:28,639 --> 00:05:30,160
function and it will not describe yet

156
00:05:30,160 --> 00:05:31,919
now each and every detail of this rather

157
00:05:31,919 --> 00:05:34,560
technical object but you know it's quite

158
00:05:34,560 --> 00:05:37,440
easy to get the gist of it you look at

159
00:05:37,440 --> 00:05:40,800
the probability of a of x doing

160
00:05:40,800 --> 00:05:42,639
something compare it to the probability

161
00:05:42,639 --> 00:05:44,639
that a of x prime is doing something and

162
00:05:44,639 --> 00:05:46,000
if they're basically doing the same way

163
00:05:46,000 --> 00:05:47,199
you have privacy if they are doing

164
00:05:47,199 --> 00:05:48,720
something very different you'll have

165
00:05:48,720 --> 00:05:50,560
high privacy violations

166
00:05:50,560 --> 00:05:53,039
the inputs of this function are x x

167
00:05:53,039 --> 00:05:54,720
prime so you have these adjacent

168
00:05:54,720 --> 00:05:56,319
databases where you have switched one

169
00:05:56,319 --> 00:05:58,000
individual for another one and from

170
00:05:58,000 --> 00:06:00,880
going from x to x prime and you have an

171
00:06:00,880 --> 00:06:03,840
input and a set e which is the input of

172
00:06:03,840 --> 00:06:05,120
this loss

173
00:06:05,120 --> 00:06:07,840
and this basically consists of potential

174
00:06:07,840 --> 00:06:09,840
outputs of the algorithm a so think

175
00:06:09,840 --> 00:06:12,240
about an interval are two intervals two

176
00:06:12,240 --> 00:06:14,319
intervals and 12 points there are really

177
00:06:14,319 --> 00:06:16,720
a lot of possibilities here

178
00:06:16,720 --> 00:06:18,720
differential privacy can now be defined

179
00:06:18,720 --> 00:06:20,720
in terms of this loss function as the

180
00:06:20,720 --> 00:06:23,600
maximum over all adjacent databases xx

181
00:06:23,600 --> 00:06:28,560
prime and over all measurable sets e

182
00:06:28,560 --> 00:06:30,000
now this gives you when you think about

183
00:06:30,000 --> 00:06:32,319
it kind of a nice way to come up with

184
00:06:32,319 --> 00:06:34,639
lower bounds you can just shove in a

185
00:06:34,639 --> 00:06:36,960
bunch of these triplets x x prime e in

186
00:06:36,960 --> 00:06:38,479
there and you know

187
00:06:38,479 --> 00:06:39,919
some of these are going to be closer to

188
00:06:39,919 --> 00:06:42,240
epsilon some of them are not but you're

189
00:06:42,240 --> 00:06:44,560
just going to take the largest one

190
00:06:44,560 --> 00:06:46,400
voila

191
00:06:46,400 --> 00:06:47,199
now

192
00:06:47,199 --> 00:06:48,960
when you think about it just for one

193
00:06:48,960 --> 00:06:50,479
more second you'll realize that we

194
00:06:50,479 --> 00:06:52,080
usually do not have access in a black

195
00:06:52,080 --> 00:06:54,160
box scenario to lxx primes to this loss

196
00:06:54,160 --> 00:06:56,800
function so we have to estimate it

197
00:06:56,800 --> 00:06:58,319
this is basically what people do in the

198
00:06:58,319 --> 00:07:00,160
related literature so let me give you

199
00:07:00,160 --> 00:07:01,599
one it is

200
00:07:01,599 --> 00:07:03,840
admittedly simplified but this um how

201
00:07:03,840 --> 00:07:05,120
people look at this

202
00:07:05,120 --> 00:07:06,800
so um they

203
00:07:06,800 --> 00:07:08,639
propose an algorithm n

204
00:07:08,639 --> 00:07:12,080
and um you this consists of two blocks

205
00:07:12,080 --> 00:07:14,240
and the first one you general you um

206
00:07:14,240 --> 00:07:17,440
approximate instances of l x x prime of

207
00:07:17,440 --> 00:07:19,759
e and the second one you maximize

208
00:07:19,759 --> 00:07:21,440
admittedly the first one is usually the

209
00:07:21,440 --> 00:07:22,960
more interesting one and we're going to

210
00:07:22,960 --> 00:07:25,599
focus on this now

211
00:07:25,599 --> 00:07:27,120
so there are two steps basically you

212
00:07:27,120 --> 00:07:28,880
have to come up with reasonable

213
00:07:28,880 --> 00:07:32,080
databases xx prime this step is usually

214
00:07:32,080 --> 00:07:35,120
the e01 so there are good heuristics

215
00:07:35,120 --> 00:07:37,199
they have to be far apart in some sense

216
00:07:37,199 --> 00:07:39,680
and this is usually not a problem

217
00:07:39,680 --> 00:07:42,479
but the whole issue of estimating lx

218
00:07:42,479 --> 00:07:45,039
prime becomes more difficult

219
00:07:45,039 --> 00:07:46,319
so what you have to do is you have to

220
00:07:46,319 --> 00:07:48,319
rely on outputs of the algorithm a of x

221
00:07:48,319 --> 00:07:50,560
a of x prime so these are labeled x1 up

222
00:07:50,560 --> 00:07:53,680
to xn and ym up to yn

223
00:07:53,680 --> 00:07:56,400
you have this i should notice is what

224
00:07:56,400 --> 00:07:57,759
really drives the runtime because you

225
00:07:57,759 --> 00:07:59,039
have to generate these samples if the

226
00:07:59,039 --> 00:08:00,240
samples have to be large you have a lot

227
00:08:00,240 --> 00:08:02,000
of runtime and you you won't believe it

228
00:08:02,000 --> 00:08:04,720
if they're small there's less runtime

229
00:08:04,720 --> 00:08:06,319
you have to compute empirical

230
00:08:06,319 --> 00:08:08,400
probabilities notice that lx prime

231
00:08:08,400 --> 00:08:10,560
involves probabilities

232
00:08:10,560 --> 00:08:12,720
and people use these empirical

233
00:08:12,720 --> 00:08:15,280
probabilities most of the time

234
00:08:15,280 --> 00:08:16,800
and um

235
00:08:16,800 --> 00:08:18,560
yeah i mean they are

236
00:08:18,560 --> 00:08:20,319
quite straightforward you count the

237
00:08:20,319 --> 00:08:21,759
number of uh

238
00:08:21,759 --> 00:08:24,240
of um x's which are in e and you divide

239
00:08:24,240 --> 00:08:25,520
by the total number this is the

240
00:08:25,520 --> 00:08:27,680
empirical probability

241
00:08:27,680 --> 00:08:29,280
finally you have to choose the event e

242
00:08:29,280 --> 00:08:31,440
and this is really a tricky um question

243
00:08:31,440 --> 00:08:33,120
because when you think about it the

244
00:08:33,120 --> 00:08:34,559
space of

245
00:08:34,559 --> 00:08:36,799
possible events is really large i mean

246
00:08:36,799 --> 00:08:38,000
if even if the

247
00:08:38,000 --> 00:08:40,399
algorithm just has d outputs the output

248
00:08:40,399 --> 00:08:42,399
space is going to contain two to the d

249
00:08:42,399 --> 00:08:44,240
outputs and they can just look pretty

250
00:08:44,240 --> 00:08:45,279
crazy

251
00:08:45,279 --> 00:08:47,519
so coming up with a reasonable event is

252
00:08:47,519 --> 00:08:49,920
difficult

253
00:08:50,240 --> 00:08:52,080
so coming up with a reasonable event is

254
00:08:52,080 --> 00:08:53,519
difficult

255
00:08:53,519 --> 00:08:54,720
you

256
00:08:54,720 --> 00:08:56,240
so current

257
00:08:56,240 --> 00:08:58,000
research focuses on machine learning

258
00:08:58,000 --> 00:08:59,920
classifiers but this still needs

259
00:08:59,920 --> 00:09:02,800
additional sampling

260
00:09:02,800 --> 00:09:05,279
in our work we improved this method by

261
00:09:05,279 --> 00:09:09,440
avoiding the process of event selection

262
00:09:09,440 --> 00:09:11,519
we did this by adjusting the estimators

263
00:09:11,519 --> 00:09:14,160
of the probabilities and finally were

264
00:09:14,160 --> 00:09:16,640
able to reduce the sample sizes

265
00:09:16,640 --> 00:09:18,800
let me do this real quick so what did we

266
00:09:18,800 --> 00:09:21,120
do we used basically we focused on the

267
00:09:21,120 --> 00:09:23,040
probability densities of the output

268
00:09:23,040 --> 00:09:25,360
algorithms the nice thing about the

269
00:09:25,360 --> 00:09:27,440
probability densities is these are real

270
00:09:27,440 --> 00:09:29,760
valued functions you can actually draw

271
00:09:29,760 --> 00:09:32,000
them and you can actually draw this real

272
00:09:32,000 --> 00:09:33,680
valued loss which compares the two

273
00:09:33,680 --> 00:09:35,600
densities everyone who has ever worked

274
00:09:35,600 --> 00:09:38,080
with differential privacy knows that

275
00:09:38,080 --> 00:09:40,000
differential privacy is really something

276
00:09:40,000 --> 00:09:41,760
about the ratio of densities and this

277
00:09:41,760 --> 00:09:43,760
basically included in this loss function

278
00:09:43,760 --> 00:09:44,720
here

279
00:09:44,720 --> 00:09:46,480
implicitly

280
00:09:46,480 --> 00:09:48,399
now the differential privacy parameter

281
00:09:48,399 --> 00:09:50,399
can also be understood

282
00:09:50,399 --> 00:09:52,480
as the maximization of this real valued

283
00:09:52,480 --> 00:09:54,399
loss and this is a simple insight but it

284
00:09:54,399 --> 00:09:56,399
leads you to another and perhaps easier

285
00:09:56,399 --> 00:09:59,120
solution of this difficult problem

286
00:09:59,120 --> 00:10:00,640
what we've done

287
00:10:00,640 --> 00:10:02,399
as a consequence is the following we've

288
00:10:02,399 --> 00:10:04,640
said okay

289
00:10:04,640 --> 00:10:07,360
we're going to base our estimators

290
00:10:07,360 --> 00:10:08,959
we're going to estimate this real value

291
00:10:08,959 --> 00:10:10,160
loss function by estimating the

292
00:10:10,160 --> 00:10:12,160
densities there are some standard

293
00:10:12,160 --> 00:10:14,000
density estimators which are i call them

294
00:10:14,000 --> 00:10:15,600
glorified histograms they're called

295
00:10:15,600 --> 00:10:17,120
kernel density estimators they're

296
00:10:17,120 --> 00:10:19,519
basically smooth histograms you see a

297
00:10:19,519 --> 00:10:21,120
kind of wacky version here the red one

298
00:10:21,120 --> 00:10:23,360
is estimating the blue one they get much

299
00:10:23,360 --> 00:10:26,000
better much faster

300
00:10:26,000 --> 00:10:29,360
and then you can just estimate this

301
00:10:29,360 --> 00:10:31,040
empirical this loss function you can

302
00:10:31,040 --> 00:10:32,399
estimate it you can maximize the

303
00:10:32,399 --> 00:10:34,640
empirical loss and you know what

304
00:10:34,640 --> 00:10:37,120
that's actually it um this is how simple

305
00:10:37,120 --> 00:10:39,519
this goes now admittedly when you at the

306
00:10:39,519 --> 00:10:41,120
end of the day want to prove this high

307
00:10:41,120 --> 00:10:42,720
probability statistical balance there is

308
00:10:42,720 --> 00:10:45,120
really some mathematical work

309
00:10:45,120 --> 00:10:47,279
behind the scenes going on but still i

310
00:10:47,279 --> 00:10:50,959
mean the intuition is rather simple

311
00:10:51,440 --> 00:10:53,600
finally let me summarize what the

312
00:10:53,600 --> 00:10:55,440
improvements were compared with previous

313
00:10:55,440 --> 00:10:57,839
works we were able to substantially

314
00:10:57,839 --> 00:11:00,240
reduce the complexity of the problem and

315
00:11:00,240 --> 00:11:01,839
complete reduce the complexity of the

316
00:11:01,839 --> 00:11:03,440
problem in terms of sample size we

317
00:11:03,440 --> 00:11:04,720
derived quite

318
00:11:04,720 --> 00:11:06,800
tight lower bounds so if you want to

319
00:11:06,800 --> 00:11:08,079
have a look at the simulation they're

320
00:11:08,079 --> 00:11:10,320
not completely trivial so have a look at

321
00:11:10,320 --> 00:11:12,959
the paper but we use sample size like

322
00:11:12,959 --> 00:11:14,640
two point three percent to three percent

323
00:11:14,640 --> 00:11:17,040
of the previous works and still derived

324
00:11:17,040 --> 00:11:18,640
quite tight lower bounds so this means

325
00:11:18,640 --> 00:11:20,399
that this program runs really fast you

326
00:11:20,399 --> 00:11:22,079
can run it on your desktop computer you

327
00:11:22,079 --> 00:11:23,760
don't need a server or something so this

328
00:11:23,760 --> 00:11:26,079
is nice about it um you can just easily

329
00:11:26,079 --> 00:11:27,440
implement it

330
00:11:27,440 --> 00:11:29,200
um because it relies on kernel density

331
00:11:29,200 --> 00:11:30,800
estimators they're available everywhere

332
00:11:30,800 --> 00:11:32,800
they're available are in python you

333
00:11:32,800 --> 00:11:34,160
don't have to implement them or

334
00:11:34,160 --> 00:11:37,440
something it's just super easy

335
00:11:37,440 --> 00:11:39,279
finally we also were able to derive

336
00:11:39,279 --> 00:11:40,959
theoretical guarantees and i think this

337
00:11:40,959 --> 00:11:43,680
is kind of nice when you know basically

338
00:11:43,680 --> 00:11:46,160
that your lower bounds really converges

339
00:11:46,160 --> 00:11:48,480
and converges at a certain rate

340
00:11:48,480 --> 00:11:50,959
and these theoretical guarantees were in

341
00:11:50,959 --> 00:11:53,120
my opinion at least a good deal stronger

342
00:11:53,120 --> 00:11:54,800
than the related literature where you

343
00:11:54,800 --> 00:11:56,560
usually couldn't prove rigorously that

344
00:11:56,560 --> 00:11:58,160
they converge so this is basically where

345
00:11:58,160 --> 00:12:00,720
the mathematical theory kicks in

346
00:12:00,720 --> 00:12:02,800
so in the words of a colleague of mine

347
00:12:02,800 --> 00:12:05,120
this shows perhaps that

348
00:12:05,120 --> 00:12:07,519
the easiest way is not always the worst

349
00:12:07,519 --> 00:12:09,190
thank you very much

350
00:12:09,190 --> 00:12:15,200
[Applause]

351
00:12:15,200 --> 00:12:17,040
great we have time for a couple

352
00:12:17,040 --> 00:12:18,320
questions so if you have questions

353
00:12:18,320 --> 00:12:20,639
please step up to the podium and ask

354
00:12:20,639 --> 00:12:22,000
there please

355
00:12:22,000 --> 00:12:24,480
yeah so um i'm curious about whether or

356
00:12:24,480 --> 00:12:26,720
not your technique here would be extra

357
00:12:26,720 --> 00:12:29,279
powerful in a gray box setting where you

358
00:12:29,279 --> 00:12:31,360
don't necessarily know

359
00:12:31,360 --> 00:12:33,040
what uh what the parameters of the

360
00:12:33,040 --> 00:12:35,519
distribution the algorithm implements

361
00:12:35,519 --> 00:12:36,800
are but you know you know the

362
00:12:36,800 --> 00:12:38,399
algorithm's output

363
00:12:38,399 --> 00:12:40,880
is drawn from one of a family of

364
00:12:40,880 --> 00:12:42,480
distributions you looked at the code and

365
00:12:42,480 --> 00:12:44,079
you know there's like a little plus

366
00:12:44,079 --> 00:12:45,839
distribution in there could you use that

367
00:12:45,839 --> 00:12:47,839
to get better estimates

368
00:12:47,839 --> 00:12:50,480
of the density so do i understand you

369
00:12:50,480 --> 00:12:52,240
correctly when you when i don't know

370
00:12:52,240 --> 00:12:53,680
basically that it comes from a family

371
00:12:53,680 --> 00:12:55,519
right this is the question you know when

372
00:12:55,519 --> 00:12:57,120
you do when you know that the the oh

373
00:12:57,120 --> 00:12:58,880
absolutely this would make actually a

374
00:12:58,880 --> 00:13:00,959
lot of sense um we've also thought about

375
00:13:00,959 --> 00:13:02,399
this because i think this is a natural

376
00:13:02,399 --> 00:13:03,760
question to ask if you basically say

377
00:13:03,760 --> 00:13:05,200
okay there's a parametric model

378
00:13:05,200 --> 00:13:07,040
underlying it and then perhaps i can

379
00:13:07,040 --> 00:13:08,800
estimate at square root n rate which is

380
00:13:08,800 --> 00:13:10,480
faster than the non-parametric rates

381
00:13:10,480 --> 00:13:12,160
that we have derived i certainly do

382
00:13:12,160 --> 00:13:14,399
believe that this is possible and you

383
00:13:14,399 --> 00:13:16,560
can adapt it quite easily but i think

384
00:13:16,560 --> 00:13:18,399
this would be desirable right if you

385
00:13:18,399 --> 00:13:19,920
know it and perhaps if it's your own

386
00:13:19,920 --> 00:13:22,000
algorithm you know it right and so i

387
00:13:22,000 --> 00:13:23,600
think this is a very good question thank

388
00:13:23,600 --> 00:13:26,240
you cool

389
00:13:26,399 --> 00:13:28,880
please okay thank you

390
00:13:28,880 --> 00:13:32,000
if the algorithm a of x is producing a

391
00:13:32,000 --> 00:13:34,800
real number and it's trying to hide a

392
00:13:34,800 --> 00:13:36,800
cover channel in the very last few

393
00:13:36,800 --> 00:13:40,000
digits of a of x say to to hide the

394
00:13:40,000 --> 00:13:42,079
encryption of x i don't think that the

395
00:13:42,079 --> 00:13:44,639
estimator for the probability density

396
00:13:44,639 --> 00:13:46,480
will see that there is a covered channel

397
00:13:46,480 --> 00:13:48,800
here and nevertheless there will not be

398
00:13:48,800 --> 00:13:50,399
privacy at all

399
00:13:50,399 --> 00:13:51,360
right

400
00:13:51,360 --> 00:13:51,890
um

401
00:13:51,890 --> 00:13:53,120
[Music]

402
00:13:53,120 --> 00:13:56,240
i'm quite sorry i'm so so i should i

403
00:13:56,240 --> 00:13:58,000
should admit i'm not the original

404
00:13:58,000 --> 00:13:59,600
speaker for this talk i'm just a

405
00:13:59,600 --> 00:14:01,600
mathematician so you can explain it to

406
00:14:01,600 --> 00:14:04,399
me afterwards but i'm not quite sure so

407
00:14:04,399 --> 00:14:07,040
i can ask my co-author who perhaps can

408
00:14:07,040 --> 00:14:08,560
answer this in a better way i'm quite

409
00:14:08,560 --> 00:14:10,880
sorry for this okay

410
00:14:10,880 --> 00:14:12,320
but we can we can definitely talk

411
00:14:12,320 --> 00:14:13,440
afterwards perhaps i can still

412
00:14:13,440 --> 00:14:15,199
understand it

413
00:14:15,199 --> 00:14:16,639
sorry

414
00:14:16,639 --> 00:14:18,079
okay thank you for your presentation it

415
00:14:18,079 --> 00:14:20,480
was really informative um

416
00:14:20,480 --> 00:14:23,839
i had one question you said that you can

417
00:14:23,839 --> 00:14:27,360
sample uh things from a distribution

418
00:14:27,360 --> 00:14:29,680
yeah and you mentioned the numbers 2.3

419
00:14:29,680 --> 00:14:32,079
to 3 percent which of course looks

420
00:14:32,079 --> 00:14:33,760
impressive but the question is that how

421
00:14:33,760 --> 00:14:36,399
does the effectiveness of your

422
00:14:36,399 --> 00:14:38,399
method um

423
00:14:38,399 --> 00:14:41,199
really improve or you know depend on

424
00:14:41,199 --> 00:14:43,440
this percentage and also

425
00:14:43,440 --> 00:14:45,680
what number does this percentage

426
00:14:45,680 --> 00:14:47,040
actually entail

427
00:14:47,040 --> 00:14:49,040
percent so so you mean the sample

428
00:14:49,040 --> 00:14:50,079
reduction

429
00:14:50,079 --> 00:14:52,000
yes okay this is an excellent question

430
00:14:52,000 --> 00:14:53,360
of course um

431
00:14:53,360 --> 00:14:55,199
uh i think it's it's of course kind of

432
00:14:55,199 --> 00:14:56,880
hard to compare this when i just say you

433
00:14:56,880 --> 00:14:58,720
know the bouncer tied we have used less

434
00:14:58,720 --> 00:15:00,720
sample size right um

435
00:15:00,720 --> 00:15:02,399
i think our bonds are quite reasonably

436
00:15:02,399 --> 00:15:03,680
tight which you can see in the paper

437
00:15:03,680 --> 00:15:05,360
we've also tried to um

438
00:15:05,360 --> 00:15:07,360
in non-reported simulations we've con

439
00:15:07,360 --> 00:15:12,079
we've compared it to state-of-the-art um

440
00:15:12,079 --> 00:15:15,839
alternatives and uh we've tried to apply

441
00:15:15,839 --> 00:15:17,680
them with our smaller sample size and

442
00:15:17,680 --> 00:15:20,320
there they performed really poorly so i

443
00:15:20,320 --> 00:15:23,120
think uh i think that our method might

444
00:15:23,120 --> 00:15:24,720
be just very attractive for a small

445
00:15:24,720 --> 00:15:26,320
sample size because the other methods of

446
00:15:26,320 --> 00:15:28,720
the alternative seem to break down

447
00:15:28,720 --> 00:15:30,959
really for small sample sizes and so so

448
00:15:30,959 --> 00:15:33,040
um so it was really uh we really thought

449
00:15:33,040 --> 00:15:35,040
about this as can you implement it on a

450
00:15:35,040 --> 00:15:37,120
desktop computer or not perhaps this is

451
00:15:37,120 --> 00:15:39,600
a weird criterion but at least it was i

452
00:15:39,600 --> 00:15:40,560
think

453
00:15:40,560 --> 00:15:42,560
motivated for users

454
00:15:42,560 --> 00:15:44,880
okay thank you for that reply i think

455
00:15:44,880 --> 00:15:46,720
mentioning that it you want to implement

456
00:15:46,720 --> 00:15:48,959
this on a desktop computer gives a an

457
00:15:48,959 --> 00:15:50,880
even better indication of how good it

458
00:15:50,880 --> 00:15:52,160
really works

459
00:15:52,160 --> 00:15:53,759
yeah i mean

460
00:15:53,759 --> 00:15:56,560
so so i i so we we have access of course

461
00:15:56,560 --> 00:15:58,639
to desktop computers and servers but i i

462
00:15:58,639 --> 00:16:00,399
like my desktop computer so perhaps this

463
00:16:00,399 --> 00:16:03,360
is just a personal preference of me

464
00:16:03,360 --> 00:16:05,360
okay thank you very much

465
00:16:05,360 --> 00:16:07,120
great so there are no other questions

466
00:16:07,120 --> 00:16:10,839
let's thank the speaker again

