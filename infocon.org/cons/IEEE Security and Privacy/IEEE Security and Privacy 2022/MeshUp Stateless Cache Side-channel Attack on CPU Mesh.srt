1
00:00:00,000 --> 00:00:01,740
start now

2
00:00:01,740 --> 00:00:05,180
good afternoon everyone my name is

3
00:00:05,180 --> 00:00:08,039
University and it's my pleasure to give

4
00:00:08,039 --> 00:00:10,800
this presentation our work is mashup

5
00:00:10,800 --> 00:00:13,019
State alert cash site Channel attack on

6
00:00:13,019 --> 00:00:15,179
CPU match this is a drone walk by

7
00:00:15,179 --> 00:00:17,699
Finland University and UCI

8
00:00:17,699 --> 00:00:20,960
let's introduce the background briefly

9
00:00:20,960 --> 00:00:23,939
one of the important causes of cash

10
00:00:23,939 --> 00:00:26,400
timing attacks is how the Real Results

11
00:00:26,400 --> 00:00:31,320
sharing such as cash mmu trb our buses

12
00:00:31,320 --> 00:00:33,840
CPU execution pause

13
00:00:33,840 --> 00:00:36,300
cash directly

14
00:00:36,300 --> 00:00:39,980
and CPU isn't connect

15
00:00:40,260 --> 00:00:43,320
matchup is also based on Hardware's

16
00:00:43,320 --> 00:00:45,120
Resort sharing our Target and CPU

17
00:00:45,120 --> 00:00:47,538
interconnect

18
00:00:47,760 --> 00:00:49,860
the typical interest in pure

19
00:00:49,860 --> 00:00:53,699
intercontacts are in bus and mesh

20
00:00:53,699 --> 00:00:56,100
green bus is efficient when there is

21
00:00:56,100 --> 00:00:58,859
only several cores which is common in

22
00:00:58,859 --> 00:01:01,859
customer reviews however as the number

23
00:01:01,859 --> 00:01:04,680
of college increases the Rings bandwidth

24
00:01:04,680 --> 00:01:06,180
is not enough

25
00:01:06,180 --> 00:01:08,640
and the communication agency between the

26
00:01:08,640 --> 00:01:11,040
course is also too high a match

27
00:01:11,040 --> 00:01:13,860
networking topology will mitigate these

28
00:01:13,860 --> 00:01:16,799
issues so mesh is common in several

29
00:01:16,799 --> 00:01:20,640
great CPUs which usually have many calls

30
00:01:20,640 --> 00:01:24,000
the workloader ring investigated the sub

31
00:01:24,000 --> 00:01:27,360
Channel issue of the reverse overworked

32
00:01:27,360 --> 00:01:30,080
four thousand match

33
00:01:30,240 --> 00:01:32,579
as a picture shows sometimes different

34
00:01:32,579 --> 00:01:35,759
civil circuits need to work corporately

35
00:01:35,759 --> 00:01:38,939
or Intel platform this inner conduct is

36
00:01:38,939 --> 00:01:42,240
called UPI Intel Ultra path which is

37
00:01:42,240 --> 00:01:44,960
also our Target

38
00:01:45,360 --> 00:01:48,659
the picture even left is an Intel 28

39
00:01:48,659 --> 00:01:51,119
called Skylake SP

40
00:01:51,119 --> 00:01:54,840
ill chip there are many types of tiles

41
00:01:54,840 --> 00:01:59,520
like call Api pcie and IMC all the

42
00:01:59,520 --> 00:02:02,219
titles are connected by a mesh Network

43
00:02:02,219 --> 00:02:04,799
our experiment platform is similar

44
00:02:04,799 --> 00:02:07,680
however four tiles are disabled the

45
00:02:07,680 --> 00:02:09,899
picture in the right is my simplified

46
00:02:09,899 --> 00:02:13,200
math Network and I will introduce our

47
00:02:13,200 --> 00:02:16,879
work based on this picture

48
00:02:17,340 --> 00:02:20,400
the root policy on math is as wide root

49
00:02:20,400 --> 00:02:23,459
or Ys root data and control flow goes

50
00:02:23,459 --> 00:02:27,000
vertically firstly and horizontally

51
00:02:27,000 --> 00:02:29,819
each tile contains a core part and an

52
00:02:29,819 --> 00:02:32,280
anchor part the co-part contains aru

53
00:02:32,280 --> 00:02:35,879
registers control unit L2 cache and so

54
00:02:35,879 --> 00:02:40,080
on the ankle part contains chalc

55
00:02:40,080 --> 00:02:42,780
at directory and so on

56
00:02:42,780 --> 00:02:45,599
here is the cast structure with matching

57
00:02:45,599 --> 00:02:48,840
the canals take our experiment platforms

58
00:02:48,840 --> 00:02:53,220
garlic SP for example the L1 and L2

59
00:02:53,220 --> 00:02:57,239
cache is private while the LLC is shared

60
00:02:57,239 --> 00:03:00,060
by all the cores as picture shows green

61
00:03:00,060 --> 00:03:03,480
cache lines Intel is L2 cache could also

62
00:03:03,480 --> 00:03:06,540
appear entire base LLC cache

63
00:03:06,540 --> 00:03:09,840
the L8 the L1 and the L2 cache is

64
00:03:09,840 --> 00:03:13,140
inclusive while the LLC cache is not

65
00:03:13,140 --> 00:03:14,580
inclusive

66
00:03:14,580 --> 00:03:17,700
the other was all cash lines in Error 1

67
00:03:17,700 --> 00:03:21,480
must occur in L2 but calculating CO2

68
00:03:21,480 --> 00:03:24,840
don't need to occur in LLC as the

69
00:03:24,840 --> 00:03:26,099
picture shows

70
00:03:26,099 --> 00:03:29,640
tab base L2 cache contains six

71
00:03:29,640 --> 00:03:33,360
orange headlines however there are five

72
00:03:33,360 --> 00:03:38,360
orange catch lines in order LLC slices

73
00:03:39,780 --> 00:03:42,299
the city of the ankle component is

74
00:03:42,299 --> 00:03:44,760
responsible to maintain stairs and

75
00:03:44,760 --> 00:03:47,400
positions or catch lines in L2 and LLC

76
00:03:47,400 --> 00:03:49,620
cache a hashtag with the maps one

77
00:03:49,620 --> 00:03:52,500
physical address to one CT one details

78
00:03:52,500 --> 00:03:54,840
could be flown from all paper

79
00:03:54,840 --> 00:03:57,060
based on the background we designed a

80
00:03:57,060 --> 00:04:00,480
new conceptional attack mashup

81
00:04:00,480 --> 00:04:03,500
here is our third model matchup could

82
00:04:03,500 --> 00:04:06,239
conduct cash and channel attacks on two

83
00:04:06,239 --> 00:04:08,640
levels cross color level and corrosive

84
00:04:08,640 --> 00:04:09,480
view level

85
00:04:09,480 --> 00:04:12,780
as a picture for close contactor and

86
00:04:12,780 --> 00:04:15,000
victim reside on the same CPU but on

87
00:04:15,000 --> 00:04:16,440
different calls

88
00:04:16,440 --> 00:04:20,220
for Crossview attack attacker controls

89
00:04:20,220 --> 00:04:22,680
at least one call on each CPU connected

90
00:04:22,680 --> 00:04:26,280
by UPI in these two scenarios the victim

91
00:04:26,280 --> 00:04:28,500
will introduce some data flow on the

92
00:04:28,500 --> 00:04:31,440
Internet connects like accessing memory

93
00:04:31,440 --> 00:04:33,840
this assumption is common in the cloud

94
00:04:33,840 --> 00:04:35,820
we are also Ultra merchants and

95
00:04:35,820 --> 00:04:37,919
containers are deployed on different

96
00:04:37,919 --> 00:04:40,940
calls and CPUs

97
00:04:42,360 --> 00:04:44,820
our attack strategy is to monitor the

98
00:04:44,820 --> 00:04:47,460
data flow related to great team on your

99
00:04:47,460 --> 00:04:48,960
connects

100
00:04:48,960 --> 00:04:52,440
including matching API and then we

101
00:04:52,440 --> 00:04:54,419
inflowing teams memory access patterns

102
00:04:54,419 --> 00:04:57,000
unlike traditional cat attacks relying

103
00:04:57,000 --> 00:04:59,040
on the time difference between cat head

104
00:04:59,040 --> 00:05:01,860
and Cat miss our attack explores time

105
00:05:01,860 --> 00:05:04,020
difference resulting from interconnect

106
00:05:04,020 --> 00:05:06,620
congestion

107
00:05:07,259 --> 00:05:09,660
the attack procedure is quite default

108
00:05:09,660 --> 00:05:12,060
the first step is probe and the second

109
00:05:12,060 --> 00:05:15,840
is info in the fourth step by city code

110
00:05:15,840 --> 00:05:19,080
30 processes the remote data is lastly

111
00:05:19,080 --> 00:05:21,180
to make consumption and then it should

112
00:05:21,180 --> 00:05:22,740
recalls all the time between two

113
00:05:22,740 --> 00:05:25,979
operations in the inverse step if there

114
00:05:25,979 --> 00:05:27,419
is no Azure data flow in the

115
00:05:27,419 --> 00:05:28,500
interconnect

116
00:05:28,500 --> 00:05:30,240
the latency will be stable and

117
00:05:30,240 --> 00:05:32,820
relatively lower if attacker observes

118
00:05:32,820 --> 00:05:35,820
higher latency it means that data from

119
00:05:35,820 --> 00:05:38,520
other sources is transmitting

120
00:05:38,520 --> 00:05:41,400
our Costco and across CPU attack use a

121
00:05:41,400 --> 00:05:43,320
similar attack procedure the difference

122
00:05:43,320 --> 00:05:48,380
the difference is in how to access data

123
00:05:49,199 --> 00:05:51,600
let me introduce cross-core attack

124
00:05:51,600 --> 00:05:54,060
firstly

125
00:05:54,060 --> 00:05:55,800
let's assume that a terrible control

126
00:05:55,800 --> 00:05:59,100
type A and rectang controls type c

127
00:05:59,100 --> 00:06:02,220
wait time has a noticeable memory access

128
00:06:02,220 --> 00:06:04,259
the key point of our probe is to

129
00:06:04,259 --> 00:06:06,780
generate high bandwidth to contend with

130
00:06:06,780 --> 00:06:09,660
with him the probe also need a high

131
00:06:09,660 --> 00:06:13,580
frequency to achieve a high resolution

132
00:06:15,120 --> 00:06:17,340
first score probe is based on

133
00:06:17,340 --> 00:06:19,979
capitalized evictions firstly we accept

134
00:06:19,979 --> 00:06:23,400
several illusion sets which is a set of

135
00:06:23,400 --> 00:06:26,039
guidelines by accessing this evidence

136
00:06:26,039 --> 00:06:28,080
access we call the first match flow

137
00:06:28,080 --> 00:06:31,740
between two tiles then we recall TSC

138
00:06:31,740 --> 00:06:37,100
times drive by the instruction iot adcp

139
00:06:37,199 --> 00:06:39,419
the evasion cells should contain cash

140
00:06:39,419 --> 00:06:42,180
lines that located in

141
00:06:42,180 --> 00:06:46,620
one L one title is L2 set this should

142
00:06:46,620 --> 00:06:50,880
also locate in time-based LLC slides

143
00:06:50,880 --> 00:06:52,860
this table shows the mapping between

144
00:06:52,860 --> 00:06:55,620
physical address and cache we could see

145
00:06:55,620 --> 00:07:00,360
that this 15 to 6 are L2 and LLC set in

146
00:07:00,360 --> 00:07:05,520
depth however by 16 is only LLC setting

147
00:07:05,520 --> 00:07:06,720
ducts

148
00:07:06,720 --> 00:07:10,139
in other words 1l2 sound corresponds to

149
00:07:10,139 --> 00:07:13,919
two LG cells as picture shows

150
00:07:13,919 --> 00:07:17,340
now about the events and size we assume

151
00:07:17,340 --> 00:07:21,919
wl2 is the width of 1l2 set

152
00:07:21,919 --> 00:07:25,800
wrlc is a waste of one LLC set

153
00:07:25,800 --> 00:07:29,280
if every size is less than wl2 cash

154
00:07:29,280 --> 00:07:32,460
lines will not be related to LLC no

155
00:07:32,460 --> 00:07:35,280
congestion will occur if eBay size is

156
00:07:35,280 --> 00:07:39,900
larger than wl2 plus 2woc some cash

157
00:07:39,900 --> 00:07:42,180
lines will be related to memory the

158
00:07:42,180 --> 00:07:44,639
power frequency will be reduced in

159
00:07:44,639 --> 00:07:47,340
summary the EV size should be turned

160
00:07:47,340 --> 00:07:49,440
these two values

161
00:07:49,440 --> 00:07:51,660
now how to construct an evasion set

162
00:07:51,660 --> 00:07:54,539
firstly to make sure the vision center

163
00:07:54,539 --> 00:07:58,500
located in one tile SL2 set we just need

164
00:07:58,500 --> 00:08:00,780
to find catlines with the same

165
00:08:00,780 --> 00:08:04,379
15 to set the physical address secondly

166
00:08:04,379 --> 00:08:06,500
to make sure everything is located in

167
00:08:06,500 --> 00:08:09,599
cloud-based electric size we could use

168
00:08:09,599 --> 00:08:12,000
performance monitors in the reference

169
00:08:12,000 --> 00:08:14,699
for all the methods in work attack

170
00:08:14,699 --> 00:08:17,340
directory in the reference file when

171
00:08:17,340 --> 00:08:20,960
details could be found in our paper

172
00:08:21,180 --> 00:08:24,300
if attacker on title A accesses the

173
00:08:24,300 --> 00:08:26,940
illusion says we just described

174
00:08:26,940 --> 00:08:30,479
tell hl2 cache will load cash lines from

175
00:08:30,479 --> 00:08:33,539
Tower based LLC and then

176
00:08:33,539 --> 00:08:36,479
tell HCL to Cache will evade some test

177
00:08:36,479 --> 00:08:40,080
line to type based LLC cash this process

178
00:08:40,080 --> 00:08:42,299
will continue

179
00:08:42,299 --> 00:08:45,839
and the attackers my traffic will

180
00:08:45,839 --> 00:08:47,940
contain with the victim just as the

181
00:08:47,940 --> 00:08:49,980
picture shows

182
00:08:49,980 --> 00:08:52,740
we evaluate cross-core attack component

183
00:08:52,740 --> 00:08:55,680
the inference of RC broadcast we could

184
00:08:55,680 --> 00:08:58,260
capture square or multiply operations

185
00:08:58,260 --> 00:09:01,019
outside window algorithm our ddks

186
00:09:01,019 --> 00:09:03,420
multiple function this function is used

187
00:09:03,420 --> 00:09:07,380
to incrypt or decrypt data by Java RSA

188
00:09:07,380 --> 00:09:09,899
program the application writes the red

189
00:09:09,899 --> 00:09:11,160
point

190
00:09:11,160 --> 00:09:14,459
is this collaboration we captured with a

191
00:09:14,459 --> 00:09:17,100
higher latency the Black Star is a

192
00:09:17,100 --> 00:09:19,380
multiplied operation inferred from the

193
00:09:19,380 --> 00:09:20,880
gap

194
00:09:20,880 --> 00:09:26,540
by algorithm called srid in reference 6

195
00:09:26,540 --> 00:09:29,519
we could recover about

196
00:09:29,519 --> 00:09:34,140
30 percent of all the iso by the case

197
00:09:34,140 --> 00:09:37,260
that's all about course call Tech

198
00:09:37,260 --> 00:09:41,540
let's introduce the cross CPU attack

199
00:09:41,640 --> 00:09:44,640
as picture shows we assume attacker

200
00:09:44,640 --> 00:09:47,640
controls one call on each CPU

201
00:09:47,640 --> 00:09:51,540
and the victim will access remote memory

202
00:09:51,540 --> 00:09:54,480
UPI is different from math firstly it

203
00:09:54,480 --> 00:09:55,680
contains

204
00:09:55,680 --> 00:09:59,580
a more complex traffic so our monitors

205
00:09:59,580 --> 00:10:01,500
will be more cross green

206
00:10:01,500 --> 00:10:03,980
secondly we have tested our

207
00:10:03,980 --> 00:10:07,560
evasion-based probe or cross-call attack

208
00:10:07,560 --> 00:10:10,800
but we found it's hard to engage line to

209
00:10:10,800 --> 00:10:14,459
LLC or remote CPU and instead the copy

210
00:10:14,459 --> 00:10:19,099
may just drop if the lines are clean

211
00:10:20,459 --> 00:10:23,640
so we use a different strategy or a prop

212
00:10:23,640 --> 00:10:25,980
for cross CPU attack is based on first

213
00:10:25,980 --> 00:10:29,880
sharing call a and Kobe are on the

214
00:10:29,880 --> 00:10:31,680
different CPU sockets

215
00:10:31,680 --> 00:10:34,260
they are connected by UPI they will

216
00:10:34,260 --> 00:10:36,360
write the same cash lines as the picture

217
00:10:36,360 --> 00:10:39,120
below shows

218
00:10:39,120 --> 00:10:41,579
just one continue to record the time

219
00:10:41,579 --> 00:10:44,640
straps as the physical shoes according

220
00:10:44,640 --> 00:10:47,820
to The Cash Line coherent protocol which

221
00:10:47,820 --> 00:10:50,100
is massive in Intel platform

222
00:10:50,100 --> 00:10:52,320
call a and copy will compute for

223
00:10:52,320 --> 00:10:54,660
inclusive States or cash line to modify

224
00:10:54,660 --> 00:10:57,240
them in this way the cash lines are

225
00:10:57,240 --> 00:11:02,399
transferred between two CPUs by upside

226
00:11:02,399 --> 00:11:05,640
for evaluation we use our core CPU

227
00:11:05,640 --> 00:11:08,399
attack probe to collect application and

228
00:11:08,399 --> 00:11:11,880
website fingerprinting with Cloud traces

229
00:11:11,880 --> 00:11:15,360
or 40 applications under 100 websites

230
00:11:15,360 --> 00:11:18,540
then within lstm based classifier to

231
00:11:18,540 --> 00:11:20,100
classify that

232
00:11:20,100 --> 00:11:23,459
for these two scenarios the accuracy is

233
00:11:23,459 --> 00:11:26,300
about 80 percent

234
00:11:26,700 --> 00:11:31,079
here are some analysis of our work

235
00:11:31,079 --> 00:11:35,040
for the advantages firstly mashup does

236
00:11:35,040 --> 00:11:37,019
not depend on micro architectural

237
00:11:37,019 --> 00:11:38,720
station

238
00:11:38,720 --> 00:11:41,700
attackers don't need to know the

239
00:11:41,700 --> 00:11:44,279
victim's memory addresses secondly

240
00:11:44,279 --> 00:11:47,579
matchup could bypass current differences

241
00:11:47,579 --> 00:11:49,320
against

242
00:11:49,320 --> 00:11:52,200
um calcium channel like Intel CT and

243
00:11:52,200 --> 00:11:55,260
paste coloring the main limitation of

244
00:11:55,260 --> 00:11:58,560
mashup is that its attack granularity is

245
00:11:58,560 --> 00:11:59,820
low

246
00:11:59,820 --> 00:12:02,399
because we could only monitor the data

247
00:12:02,399 --> 00:12:05,220
transformation or CPU in a class data

248
00:12:05,220 --> 00:12:07,079
flow

249
00:12:07,079 --> 00:12:10,019
we also do a little investigation upon

250
00:12:10,019 --> 00:12:12,240
the potential mitigations

251
00:12:12,240 --> 00:12:16,079
the first direction is special isolation

252
00:12:16,079 --> 00:12:19,079
as a graph maybe we could deploy

253
00:12:19,079 --> 00:12:21,660
different virtual machines in different

254
00:12:21,660 --> 00:12:22,920
areas

255
00:12:22,920 --> 00:12:24,959
the lrc slides are not shared between

256
00:12:24,959 --> 00:12:28,320
areas and we should also improve the

257
00:12:28,320 --> 00:12:31,019
policy to avoid cause error messages

258
00:12:31,019 --> 00:12:32,940
flows

259
00:12:32,940 --> 00:12:35,100
the second direction is Cash

260
00:12:35,100 --> 00:12:39,300
recommendation like the early size hash

261
00:12:39,300 --> 00:12:42,899
algor because it will increase the

262
00:12:42,899 --> 00:12:46,139
difficulty of implement matchup attack

263
00:12:46,139 --> 00:12:49,500
to conclude firstly we identify a new

264
00:12:49,500 --> 00:12:51,899
security implementation of CPU

265
00:12:51,899 --> 00:12:54,480
interconnects secondly we develop

266
00:12:54,480 --> 00:12:57,180
meshaft to conduct cross-core and Cloud

267
00:12:57,180 --> 00:13:00,660
CPU cash internal tax through CPU

268
00:13:00,660 --> 00:13:03,500
internet connections

269
00:13:03,959 --> 00:13:06,959
thirdly we systematically analyze

270
00:13:06,959 --> 00:13:09,720
meshaft and evaluate against ick

271
00:13:09,720 --> 00:13:13,019
recovery and application and website

272
00:13:13,019 --> 00:13:15,800
fingerprinting

273
00:13:17,399 --> 00:13:20,959
thank you for listening any questions

274
00:13:22,310 --> 00:13:24,839
[Applause]

