1
00:00:07,550 --> 00:00:12,980
thanks Austin hello everyone my name is

2
00:00:10,490 --> 00:00:15,379
<font color="#E5E5E5">Eric and in this talk I'm</font><font color="#CCCCCC"> going to</font><font color="#E5E5E5"> tell</font>

3
00:00:12,980 --> 00:00:17,630
you about<font color="#E5E5E5"> a</font><font color="#CCCCCC"> new phenomenon that is</font>

4
00:00:15,380 --> 00:00:19,340
called a citizen developer<font color="#CCCCCC"> I will tell</font>

5
00:00:17,630 --> 00:00:21,619
you how the citizen developer creates

6
00:00:19,340 --> 00:00:24,079
<font color="#E5E5E5">apps by use</font><font color="#CCCCCC"> of so called</font><font color="#E5E5E5"> online</font><font color="#CCCCCC"> app</font>

7
00:00:21,619 --> 00:00:26,060
generators<font color="#E5E5E5"> let me tell you how it is</font>

8
00:00:24,079 --> 00:00:29,270
<font color="#CCCCCC">generated apps affect security and</font>

9
00:00:26,060 --> 00:00:31,009
privacy<font color="#E5E5E5"> and the mobile ecosystem</font><font color="#CCCCCC"> but</font>

10
00:00:29,270 --> 00:00:33,050
first things first<font color="#E5E5E5"> what is the citizen</font>

11
00:00:31,009 --> 00:00:34,940
developer so citizen developers<font color="#CCCCCC"> are</font>

12
00:00:33,050 --> 00:00:37,220
<font color="#E5E5E5">persons of developers with little or no</font>

13
00:00:34,940 --> 00:00:39,110
software<font color="#E5E5E5"> engineering background now you</font>

14
00:00:37,220 --> 00:00:41,510
could<font color="#E5E5E5"> ask why should such a person</font>

15
00:00:39,110 --> 00:00:42,559
develop<font color="#E5E5E5"> software in the first place well</font>

16
00:00:41,510 --> 00:00:45,710
this term was coined during the

17
00:00:42,559 --> 00:00:48,140
evolution of the web development<font color="#CCCCCC"> now</font>

18
00:00:45,710 --> 00:00:51,530
<font color="#E5E5E5">basically</font><font color="#CCCCCC"> in the early days</font><font color="#E5E5E5"> only experts</font>

19
00:00:48,140 --> 00:00:53,390
could write<font color="#CCCCCC"> websites</font><font color="#E5E5E5"> now today with an</font>

20
00:00:51,530 --> 00:00:55,489
increasing demand<font color="#CCCCCC"> for</font><font color="#E5E5E5"> websites literally</font>

21
00:00:53,390 --> 00:00:58,190
<font color="#E5E5E5">everybody can create a fancy website</font>

22
00:00:55,489 --> 00:01:00,998
<font color="#E5E5E5">they can</font><font color="#CCCCCC"> do this by use of so-called web</font>

23
00:00:58,190 --> 00:01:03,920
builders<font color="#E5E5E5"> like WordPress or Weebly</font>

24
00:01:00,999 --> 00:01:08,140
<font color="#E5E5E5">this method</font><font color="#CCCCCC"> is</font><font color="#E5E5E5"> abstract from technical</font>

25
00:01:03,920 --> 00:01:11,540
aspects<font color="#E5E5E5"> and require you</font><font color="#CCCCCC"> only</font><font color="#E5E5E5"> to provide</font>

26
00:01:08,140 --> 00:01:13,010
content you have<font color="#CCCCCC"> to choose layout</font><font color="#E5E5E5"> or</font>

27
00:01:11,540 --> 00:01:16,520
design and press the publish button

28
00:01:13,010 --> 00:01:19,580
<font color="#CCCCCC">that's it and now we are facing a</font>

29
00:01:16,520 --> 00:01:21,590
<font color="#E5E5E5">similar trend and mobile domain so</font>

30
00:01:19,580 --> 00:01:23,240
there's an increasing<font color="#E5E5E5"> need for apps so</font>

31
00:01:21,590 --> 00:01:25,520
for instance more companies<font color="#E5E5E5"> that cannot</font>

32
00:01:23,240 --> 00:01:29,089
<font color="#E5E5E5">afford in-house development you</font><font color="#CCCCCC"> have</font>

33
00:01:25,520 --> 00:01:32,090
<font color="#E5E5E5">club sports event organizers and also</font>

34
00:01:29,090 --> 00:01:34,670
individual persons that have no IT

35
00:01:32,090 --> 00:01:38,150
background at all<font color="#E5E5E5"> so in contrast to the</font>

36
00:01:34,670 --> 00:01:40,040
web<font color="#CCCCCC"> those mobile app builders have to</font>

37
00:01:38,150 --> 00:01:44,020
account<font color="#E5E5E5"> for different mobile ecosystems</font>

38
00:01:40,040 --> 00:01:46,340
like Android iOS Windows Mobile and

39
00:01:44,020 --> 00:01:48,740
equivalent to those web builders for

40
00:01:46,340 --> 00:01:50,870
citizen developers<font color="#E5E5E5"> our online app</font>

41
00:01:48,740 --> 00:01:53,869
generators so they provide<font color="#E5E5E5"> the</font><font color="#CCCCCC"> mossad</font>

42
00:01:50,870 --> 00:01:58,220
like point-and-click<font color="#E5E5E5"> map interface</font><font color="#CCCCCC"> which</font>

43
00:01:53,870 --> 00:01:59,990
you can use to<font color="#CCCCCC"> compose apps by use of</font>

44
00:01:58,220 --> 00:02:02,360
<font color="#E5E5E5">so-called predefined software modules</font>

45
00:01:59,990 --> 00:02:05,119
and the key aspect here is<font color="#E5E5E5"> that</font><font color="#CCCCCC"> you must</font>

46
00:02:02,360 --> 00:02:07,400
<font color="#E5E5E5">not write a single line</font><font color="#CCCCCC"> of code to show</font>

47
00:02:05,120 --> 00:02:10,369
you how this<font color="#E5E5E5"> looks</font><font color="#CCCCCC"> like this</font><font color="#E5E5E5"> is</font><font color="#CCCCCC"> the web</font>

48
00:02:07,400 --> 00:02:12,590
interface<font color="#CCCCCC"> for the generator app machine</font>

49
00:02:10,369 --> 00:02:15,019
<font color="#E5E5E5">so you have a preview of the app on the</font>

50
00:02:12,590 --> 00:02:16,670
right side you<font color="#CCCCCC"> have your design space</font><font color="#E5E5E5"> in</font>

51
00:02:15,019 --> 00:02:18,710
the middle<font color="#E5E5E5"> on</font><font color="#CCCCCC"> the left you have</font><font color="#E5E5E5"> two</font>

52
00:02:16,670 --> 00:02:21,170
<font color="#E5E5E5">selected modules that are shown</font><font color="#CCCCCC"> here as</font>

53
00:02:18,710 --> 00:02:23,660
legal plots so you can add

54
00:02:21,170 --> 00:02:26,208
<font color="#CCCCCC">plox this that come with predefined</font>

55
00:02:23,660 --> 00:02:29,450
functionality<font color="#E5E5E5"> so you</font><font color="#CCCCCC"> can integrate</font><font color="#E5E5E5"> video</font>

56
00:02:26,209 --> 00:02:33,590
you can increase social media RSS feeds

57
00:02:29,450 --> 00:02:35,660
<font color="#E5E5E5">web views and so on and these up</font>

58
00:02:33,590 --> 00:02:38,870
generators literally allow you to create

59
00:02:35,660 --> 00:02:41,000
<font color="#E5E5E5">apps within minutes so the first</font>

60
00:02:38,870 --> 00:02:43,160
question<font color="#E5E5E5"> that came into our mind was</font>

61
00:02:41,000 --> 00:02:45,590
<font color="#E5E5E5">okay is this really</font><font color="#CCCCCC"> a new phenomenon</font><font color="#E5E5E5"> and</font>

62
00:02:43,160 --> 00:02:47,690
mobile domain<font color="#E5E5E5"> or was it already</font><font color="#CCCCCC"> an</font>

63
00:02:45,590 --> 00:02:50,180
established phenomenon so it's already

64
00:02:47,690 --> 00:02:51,829
kind<font color="#E5E5E5"> of a market penetration</font><font color="#CCCCCC"> so we</font>

65
00:02:50,180 --> 00:02:54,860
wanted to<font color="#E5E5E5"> find that out and to that end</font>

66
00:02:51,830 --> 00:02:57,380
people<font color="#CCCCCC"> the classifier that takes</font><font color="#E5E5E5"> an</font>

67
00:02:54,860 --> 00:02:59,900
Android app<font color="#E5E5E5"> extract some high-level</font>

68
00:02:57,380 --> 00:03:02,329
characteristics like package name code

69
00:02:59,900 --> 00:03:04,190
name space included files and also

70
00:03:02,330 --> 00:03:06,920
extracts<font color="#CCCCCC"> information from the signing</font>

71
00:03:04,190 --> 00:03:10,459
certificate and<font color="#CCCCCC"> you see this classifier</font>

72
00:03:06,920 --> 00:03:13,100
<font color="#E5E5E5">the basically could map apps back to</font>

73
00:03:10,459 --> 00:03:15,440
their generating service so we applied

74
00:03:13,100 --> 00:03:19,280
<font color="#CCCCCC">our classifier to</font><font color="#E5E5E5"> Google Play app</font>

75
00:03:15,440 --> 00:03:22,690
repository<font color="#CCCCCC"> that</font><font color="#E5E5E5"> had about 2.3 million</font>

76
00:03:19,280 --> 00:03:25,670
apps and what we found was that<font color="#E5E5E5"> already</font>

77
00:03:22,690 --> 00:03:28,850
<font color="#CCCCCC">250,000 apps are generated by these</font>

78
00:03:25,670 --> 00:03:31,640
online<font color="#CCCCCC"> actions in other words more than</font>

79
00:03:28,850 --> 00:03:34,640
<font color="#CCCCCC">11% of the entire App Store of</font><font color="#E5E5E5"> the</font>

80
00:03:31,640 --> 00:03:36,798
Google Play<font color="#E5E5E5"> app store is generated by</font>

81
00:03:34,640 --> 00:03:39,708
developers that have<font color="#E5E5E5"> never written a</font>

82
00:03:36,799 --> 00:03:42,350
single<font color="#E5E5E5"> line of code so there</font><font color="#CCCCCC"> are few</font>

83
00:03:39,709 --> 00:03:45,079
more popular app generators so the top

84
00:03:42,350 --> 00:03:47,769
<font color="#CCCCCC">five that we found account for about</font>

85
00:03:45,079 --> 00:03:50,690
three-quarters of all generated<font color="#E5E5E5"> apps and</font>

86
00:03:47,769 --> 00:03:52,400
what you could<font color="#E5E5E5"> sing okay if you use</font>

87
00:03:50,690 --> 00:03:54,739
these online<font color="#E5E5E5"> app</font><font color="#CCCCCC"> chants</font><font color="#E5E5E5"> basically the</font>

88
00:03:52,400 --> 00:03:56,870
outcome will be<font color="#CCCCCC"> a very simplistic app</font>

89
00:03:54,739 --> 00:03:58,760
then<font color="#CCCCCC"> you are</font><font color="#E5E5E5"> absolutely right you cannot</font>

90
00:03:56,870 --> 00:04:02,690
recreate<font color="#E5E5E5"> Facebook</font><font color="#CCCCCC"> after such a service</font>

91
00:03:58,760 --> 00:04:05,060
<font color="#E5E5E5">but you can do create very popular</font><font color="#CCCCCC"> apps</font>

92
00:04:02,690 --> 00:04:07,760
so we found different<font color="#CCCCCC"> apps of different</font>

93
00:04:05,060 --> 00:04:09,819
<font color="#CCCCCC">options</font><font color="#E5E5E5"> that already had one more than 1</font>

94
00:04:07,760 --> 00:04:13,790
<font color="#E5E5E5">million downloads</font><font color="#CCCCCC"> so for</font><font color="#E5E5E5"> instance</font>

95
00:04:09,819 --> 00:04:16,399
Virtual DJ<font color="#E5E5E5"> apps a nightlife app so it</font>

96
00:04:13,790 --> 00:04:19,820
could already see that<font color="#E5E5E5"> there's a</font><font color="#CCCCCC"> real</font>

97
00:04:16,399 --> 00:04:23,080
<font color="#E5E5E5">large market penetration but what we</font>

98
00:04:19,820 --> 00:04:26,990
don't know is how do these<font color="#CCCCCC"> app chance</font>

99
00:04:23,080 --> 00:04:29,359
generate their code<font color="#E5E5E5"> so if you don't have</font>

100
00:04:26,990 --> 00:04:30,500
to generate the<font color="#E5E5E5"> code they</font><font color="#CCCCCC"> have</font><font color="#E5E5E5"> to so we</font>

101
00:04:29,360 --> 00:04:33,200
wanted to<font color="#E5E5E5"> find out what is the app</font>

102
00:04:30,500 --> 00:04:34,940
generation model and if we<font color="#E5E5E5"> find that out</font>

103
00:04:33,200 --> 00:04:38,780
are there specific<font color="#CCCCCC"> securities</font>

104
00:04:34,940 --> 00:04:40,700
related to this generation model so<font color="#CCCCCC"> to</font>

105
00:04:38,780 --> 00:04:43,580
date and<font color="#E5E5E5"> refer together the data set so</font>

106
00:04:40,700 --> 00:04:45,110
we subscribe to<font color="#CCCCCC"> the top 13 on an app</font>

107
00:04:43,580 --> 00:04:48,650
generators according<font color="#E5E5E5"> to our market</font>

108
00:04:45,110 --> 00:04:50,450
analysis seven of them were free<font color="#E5E5E5"> six for</font>

109
00:04:48,650 --> 00:04:53,359
which we had to pay a monthly

110
00:04:50,450 --> 00:04:56,030
<font color="#CCCCCC">subscription fees and we generated the</font>

111
00:04:53,360 --> 00:04:58,520
exact same<font color="#E5E5E5"> three apps for each option</font><font color="#CCCCCC"> to</font>

112
00:04:56,030 --> 00:05:00,440
get kind of<font color="#E5E5E5"> a crown troost so the first</font>

113
00:04:58,520 --> 00:05:02,419
one was<font color="#E5E5E5"> a classical had a word app so</font>

114
00:05:00,440 --> 00:05:04,910
the<font color="#E5E5E5"> smallest app that we could possibly</font>

115
00:05:02,420 --> 00:05:07,700
<font color="#E5E5E5">generate the second app basically</font><font color="#CCCCCC"> was</font>

116
00:05:04,910 --> 00:05:10,490
<font color="#E5E5E5">app one with an additional web request</font>

117
00:05:07,700 --> 00:05:13,340
to our<font color="#E5E5E5"> server</font><font color="#CCCCCC"> nap three was with me</font>

118
00:05:10,490 --> 00:05:16,130
again at one with<font color="#CCCCCC"> motif or user login</font><font color="#E5E5E5"> or</font>

119
00:05:13,340 --> 00:05:18,710
form to submit user data<font color="#E5E5E5"> so sensitive</font>

120
00:05:16,130 --> 00:05:21,650
operation we additionally then took ten

121
00:05:18,710 --> 00:05:24,469
random<font color="#E5E5E5"> apps per option</font><font color="#CCCCCC"> and then we could</font>

122
00:05:21,650 --> 00:05:26,030
<font color="#CCCCCC">basically start off</font><font color="#E5E5E5"> our analysis what I</font>

123
00:05:24,470 --> 00:05:27,770
haven't<font color="#CCCCCC"> told you so far is that</font><font color="#E5E5E5"> we</font>

124
00:05:26,030 --> 00:05:30,469
stumbled across the topic a<font color="#CCCCCC"> bit</font>

125
00:05:27,770 --> 00:05:32,690
differently than what I've<font color="#CCCCCC"> told you</font><font color="#E5E5E5"> at</font>

126
00:05:30,470 --> 00:05:34,790
<font color="#CCCCCC">the very beginning</font><font color="#E5E5E5"> so we regularly</font>

127
00:05:32,690 --> 00:05:37,160
conduct<font color="#CCCCCC"> different security analysis on</font>

128
00:05:34,790 --> 00:05:39,440
our<font color="#E5E5E5"> app repository and what we found was</font>

129
00:05:37,160 --> 00:05:41,870
that there are<font color="#E5E5E5"> large clusters of apps</font>

130
00:05:39,440 --> 00:05:44,540
that<font color="#CCCCCC"> show</font><font color="#E5E5E5"> the exact same results</font>

131
00:05:41,870 --> 00:05:47,420
typically<font color="#CCCCCC"> sign for spam apps but as we</font>

132
00:05:44,540 --> 00:05:50,270
got to<font color="#CCCCCC"> know</font><font color="#E5E5E5"> these were generated</font><font color="#CCCCCC"> by the</font>

133
00:05:47,420 --> 00:05:53,120
online<font color="#E5E5E5"> services so the first idea was</font>

134
00:05:50,270 --> 00:05:54,950
<font color="#CCCCCC">okay</font><font color="#E5E5E5"> there's probably some kind</font><font color="#CCCCCC"> of code</font>

135
00:05:53,120 --> 00:05:57,200
<font color="#CCCCCC">we use</font><font color="#E5E5E5"> involved so let's measure the</font>

136
00:05:54,950 --> 00:06:00,020
similarity<font color="#CCCCCC"> of Pyatt code of different</font>

137
00:05:57,200 --> 00:06:02,780
apps generated by the same<font color="#E5E5E5"> service and</font>

138
00:06:00,020 --> 00:06:05,330
to<font color="#E5E5E5"> the end we adopted a technique</font><font color="#CCCCCC"> that</font>

139
00:06:02,780 --> 00:06:07,460
<font color="#E5E5E5">we use to detect the party libraries in</font>

140
00:06:05,330 --> 00:06:10,099
apps that as we generated hash tree

141
00:06:07,460 --> 00:06:11,989
<font color="#CCCCCC">so-called Merkle trees over the class</font>

142
00:06:10,100 --> 00:06:15,680
<font color="#CCCCCC">hierarchy that</font><font color="#E5E5E5"> we could</font><font color="#CCCCCC"> extract from</font><font color="#E5E5E5"> the</font>

143
00:06:11,990 --> 00:06:17,300
<font color="#E5E5E5">bytecode and</font><font color="#CCCCCC"> then the result</font><font color="#E5E5E5"> is</font>

144
00:06:15,680 --> 00:06:18,470
basically<font color="#CCCCCC"> American 3d but you can see on</font>

145
00:06:17,300 --> 00:06:20,780
the right

146
00:06:18,470 --> 00:06:22,640
it's an hierarchical<font color="#E5E5E5"> tree let's give you</font>

147
00:06:20,780 --> 00:06:25,130
three layers<font color="#CCCCCC"> of</font><font color="#E5E5E5"> package class and a</font>

148
00:06:22,640 --> 00:06:27,289
method layer and that is because<font color="#E5E5E5"> Android</font>

149
00:06:25,130 --> 00:06:29,810
apps are<font color="#CCCCCC"> written in Java on Kotlin and</font>

150
00:06:27,290 --> 00:06:32,000
this code<font color="#E5E5E5"> is organized in hierarchical</font>

151
00:06:29,810 --> 00:06:34,370
namespaces<font color="#CCCCCC"> and</font><font color="#E5E5E5"> these namespaces are</font>

152
00:06:32,000 --> 00:06:36,950
preserved<font color="#CCCCCC"> in the binary so we can</font>

153
00:06:34,370 --> 00:06:39,460
exploit that fact<font color="#E5E5E5"> pass and extract those</font>

154
00:06:36,950 --> 00:06:42,229
namespaces<font color="#CCCCCC"> then</font><font color="#E5E5E5"> great</font><font color="#CCCCCC"> sartre</font><font color="#E5E5E5"> marquetry</font>

155
00:06:39,460 --> 00:06:44,659
<font color="#E5E5E5">we then compare the code hash to root</font>

156
00:06:42,230 --> 00:06:47,660
hash of different files we can<font color="#E5E5E5"> check</font>

157
00:06:44,660 --> 00:06:49,310
whether<font color="#E5E5E5"> the bytecode is exactly the same</font>

158
00:06:47,660 --> 00:06:51,380
and if it differs we can compute a

159
00:06:49,310 --> 00:06:55,640
package based similarity to measure the

160
00:06:51,380 --> 00:06:57,950
extent of<font color="#E5E5E5"> the code reuse the surprising</font>

161
00:06:55,640 --> 00:07:00,200
<font color="#E5E5E5">result is that there are only two online</font>

162
00:06:57,950 --> 00:07:03,289
app generators that<font color="#E5E5E5"> use module dependent</font>

163
00:07:00,200 --> 00:07:05,420
code<font color="#CCCCCC"> boilerplate code</font><font color="#E5E5E5"> that means they</font>

164
00:07:03,290 --> 00:07:08,660
reuse the exact same code<font color="#CCCCCC"> for the same</font>

165
00:07:05,420 --> 00:07:10,550
<font color="#E5E5E5">module but they only generate code for</font>

166
00:07:08,660 --> 00:07:12,500
<font color="#CCCCCC">the modules that</font><font color="#E5E5E5"> have been selected</font><font color="#CCCCCC"> by</font>

167
00:07:10,550 --> 00:07:15,620
the citizen developer and this<font color="#E5E5E5"> is in</font>

168
00:07:12,500 --> 00:07:17,900
<font color="#E5E5E5">contrast to all the other</font><font color="#CCCCCC"> 11</font><font color="#E5E5E5"> online app</font>

169
00:07:15,620 --> 00:07:22,250
<font color="#CCCCCC">chants that use monolithic boilerplate</font>

170
00:07:17,900 --> 00:07:25,219
code<font color="#CCCCCC"> this</font><font color="#E5E5E5"> is say your option provides</font>

171
00:07:22,250 --> 00:07:27,440
100 modules and then they will<font color="#CCCCCC"> basically</font>

172
00:07:25,220 --> 00:07:30,110
generate the code<font color="#CCCCCC"> for all 100 materials</font>

173
00:07:27,440 --> 00:07:33,140
no matter which modules have<font color="#CCCCCC"> been</font>

174
00:07:30,110 --> 00:07:38,000
selected by the app developer<font color="#E5E5E5"> and</font><font color="#CCCCCC"> these</font>

175
00:07:33,140 --> 00:07:40,580
apps<font color="#E5E5E5"> only differ in one config file</font><font color="#CCCCCC"> and</font>

176
00:07:38,000 --> 00:07:42,740
one<font color="#CCCCCC"> almighty config file so</font><font color="#E5E5E5"> that caught</font>

177
00:07:40,580 --> 00:07:44,990
our interest<font color="#E5E5E5"> so we</font><font color="#CCCCCC"> take the bit deeper</font>

178
00:07:42,740 --> 00:07:47,480
to<font color="#E5E5E5"> check how this config file is</font>

179
00:07:44,990 --> 00:07:50,150
included<font color="#CCCCCC"> so the Scala files to begin</font><font color="#E5E5E5"> XML</font>

180
00:07:47,480 --> 00:07:53,330
<font color="#E5E5E5">or chase it fire there are two ways to</font>

181
00:07:50,150 --> 00:07:56,090
<font color="#E5E5E5">include them one is a static config</font>

182
00:07:53,330 --> 00:07:58,340
which basically means yeah you included

183
00:07:56,090 --> 00:08:00,679
in the application<font color="#E5E5E5"> binary and for the</font>

184
00:07:58,340 --> 00:08:03,590
dynamic config it is dynamically

185
00:08:00,680 --> 00:08:05,330
retrieved<font color="#E5E5E5"> from remote server now as you</font>

186
00:08:03,590 --> 00:08:08,479
can<font color="#CCCCCC"> imagine if you include it's directly</font>

187
00:08:05,330 --> 00:08:11,060
in<font color="#CCCCCC"> play</font><font color="#E5E5E5"> without encryption</font><font color="#CCCCCC"> integrity</font>

188
00:08:08,480 --> 00:08:12,680
checks that's not a good<font color="#CCCCCC"> idea but even</font>

189
00:08:11,060 --> 00:08:17,570
worse if you dynamically retrieve it

190
00:08:12,680 --> 00:08:20,330
from remote server in HTTP and without

191
00:08:17,570 --> 00:08:22,520
encryption whatsoever this really opens

192
00:08:20,330 --> 00:08:24,229
<font color="#E5E5E5">the door for some severe attacks and I</font>

193
00:08:22,520 --> 00:08:27,349
will show<font color="#E5E5E5"> you one of them but that we</font>

194
00:08:24,230 --> 00:08:29,750
<font color="#CCCCCC">called an app reconfiguration attack so</font>

195
00:08:27,350 --> 00:08:33,409
say you have an app X installed<font color="#CCCCCC"> that</font><font color="#E5E5E5"> was</font>

196
00:08:29,750 --> 00:08:35,210
<font color="#E5E5E5">generated</font><font color="#CCCCCC"> by some service now upon</font>

197
00:08:33,409 --> 00:08:37,400
launch it will basically retrieve the

198
00:08:35,210 --> 00:08:40,669
contract from<font color="#CCCCCC"> the remote server via HTTP</font>

199
00:08:37,400 --> 00:08:43,939
then<font color="#E5E5E5"> initialize the modules and then</font>

200
00:08:40,669 --> 00:08:47,060
it's ready<font color="#E5E5E5"> to go but so far you</font><font color="#CCCCCC"> can</font>

201
00:08:43,940 --> 00:08:49,730
basically predict<font color="#E5E5E5"> but what can possibly</font>

202
00:08:47,060 --> 00:08:51,739
go<font color="#CCCCCC"> wrong here</font><font color="#E5E5E5"> so first of all if you</font>

203
00:08:49,730 --> 00:08:53,570
under<font color="#E5E5E5"> network you can read the config</font>

204
00:08:51,740 --> 00:08:55,340
file the data<font color="#E5E5E5"> the content of the config</font>

205
00:08:53,570 --> 00:08:58,070
file<font color="#CCCCCC"> and it does not only</font><font color="#E5E5E5"> include the</font>

206
00:08:55,340 --> 00:09:00,560
module<font color="#E5E5E5"> configuration let us include all</font>

207
00:08:58,070 --> 00:09:01,100
kinds of sensitive<font color="#E5E5E5"> data like API crypto</font>

208
00:09:00,560 --> 00:09:04,290
key

209
00:09:01,100 --> 00:09:06,480
<font color="#E5E5E5">credentials even</font><font color="#CCCCCC"> information personal</font>

210
00:09:04,290 --> 00:09:08,849
information<font color="#CCCCCC"> apparent</font><font color="#E5E5E5"> the citizen</font>

211
00:09:06,480 --> 00:09:10,770
<font color="#CCCCCC">developer that created the app</font><font color="#E5E5E5"> but even</font>

212
00:09:08,850 --> 00:09:13,830
worse you can<font color="#E5E5E5"> also temper this the</font>

213
00:09:10,770 --> 00:09:17,910
config file<font color="#E5E5E5"> can change any kind of data</font>

214
00:09:13,830 --> 00:09:20,339
<font color="#E5E5E5">strings API keys</font><font color="#CCCCCC"> you can</font><font color="#E5E5E5"> change the API</font>

215
00:09:17,910 --> 00:09:23,610
key<font color="#CCCCCC"> for advertisement libraries conduct</font>

216
00:09:20,339 --> 00:09:25,670
code<font color="#E5E5E5"> at revenue</font><font color="#CCCCCC"> shaft you can</font><font color="#E5E5E5"> also</font>

217
00:09:23,610 --> 00:09:29,220
change resources and you<font color="#E5E5E5"> can change URLs</font>

218
00:09:25,670 --> 00:09:32,790
<font color="#CCCCCC">so imagine you create an event</font><font color="#E5E5E5"> app say</font>

219
00:09:29,220 --> 00:09:34,830
for some security conference and you

220
00:09:32,790 --> 00:09:37,469
<font color="#E5E5E5">include the</font><font color="#CCCCCC"> back view pointing to I</font>

221
00:09:34,830 --> 00:09:39,690
probably<font color="#E5E5E5"> security talk now we can on the</font>

222
00:09:37,470 --> 00:09:43,020
<font color="#CCCCCC">fly change it to something like ìwe</font>

223
00:09:39,690 --> 00:09:45,300
<font color="#CCCCCC">secure security dot-org</font><font color="#E5E5E5"> so easy fishing</font>

224
00:09:43,020 --> 00:09:48,510
there you go without<font color="#E5E5E5"> having to touch</font><font color="#CCCCCC"> the</font>

225
00:09:45,300 --> 00:09:50,670
app at all but<font color="#E5E5E5"> that's the name suggests</font>

226
00:09:48,510 --> 00:09:53,279
<font color="#E5E5E5">you</font><font color="#CCCCCC"> can even tamper with the code logic</font>

227
00:09:50,670 --> 00:09:55,860
<font color="#E5E5E5">so you can reconfigure the app on the</font>

228
00:09:53,279 --> 00:09:57,540
fly<font color="#E5E5E5"> you</font><font color="#CCCCCC"> can change the set of enabled</font>

229
00:09:55,860 --> 00:10:00,839
modules<font color="#E5E5E5"> their connection pretty much</font>

230
00:09:57,540 --> 00:10:03,630
everything<font color="#E5E5E5"> without</font><font color="#CCCCCC"> having</font><font color="#E5E5E5"> to modify</font><font color="#CCCCCC"> the</font>

231
00:10:00,839 --> 00:10:05,730
application<font color="#CCCCCC"> code</font><font color="#E5E5E5"> the root cause why this</font>

232
00:10:03,630 --> 00:10:08,430
works is this monolithic boilerplate

233
00:10:05,730 --> 00:10:12,290
code generation<font color="#E5E5E5"> this conflict that</font><font color="#CCCCCC"> is</font>

234
00:10:08,430 --> 00:10:16,410
retrieved from some<font color="#E5E5E5"> remote button plane</font>

235
00:10:12,290 --> 00:10:18,870
so<font color="#E5E5E5"> we also wanted to find out what is</font>

236
00:10:16,410 --> 00:10:21,350
the code quality<font color="#E5E5E5"> in general</font><font color="#CCCCCC"> regarding</font>

237
00:10:18,870 --> 00:10:24,150
security<font color="#CCCCCC"> privacy to the</font><font color="#E5E5E5"> end we</font>

238
00:10:21,350 --> 00:10:26,940
implemented common attack vectors from

239
00:10:24,150 --> 00:10:29,640
<font color="#E5E5E5">the literature</font><font color="#CCCCCC"> and what we found was a</font>

240
00:10:26,940 --> 00:10:32,010
long<font color="#E5E5E5"> list of security issues</font><font color="#CCCCCC"> I wouldn't</font>

241
00:10:29,640 --> 00:10:34,800
say that these results<font color="#CCCCCC"> are</font><font color="#E5E5E5"> burst and for</font>

242
00:10:32,010 --> 00:10:36,689
apps from<font color="#E5E5E5"> an average developer but what</font>

243
00:10:34,800 --> 00:10:38,010
makes it problematic<font color="#E5E5E5"> is the</font>

244
00:10:36,690 --> 00:10:41,670
amplification<font color="#CCCCCC"> effect</font>

245
00:10:38,010 --> 00:10:43,950
<font color="#E5E5E5">so all those identified issues will</font><font color="#CCCCCC"> be</font>

246
00:10:41,670 --> 00:10:47,040
an every generated app of<font color="#E5E5E5"> the same</font>

247
00:10:43,950 --> 00:10:49,170
object now if you have a<font color="#E5E5E5"> look at the two</font>

248
00:10:47,040 --> 00:10:52,020
module dependent code generators we see

249
00:10:49,170 --> 00:10:55,260
that they perform much better<font color="#E5E5E5"> so they</font>

250
00:10:52,020 --> 00:10:57,630
have less problems<font color="#CCCCCC"> was known at hack</font>

251
00:10:55,260 --> 00:11:00,120
vector so that<font color="#E5E5E5"> is because they follow</font>

252
00:10:57,630 --> 00:11:01,800
the principle of least privilege<font color="#CCCCCC"> they</font>

253
00:11:00,120 --> 00:11:04,110
<font color="#E5E5E5">only generate code for those modules</font>

254
00:11:01,800 --> 00:11:06,240
<font color="#E5E5E5">that</font><font color="#CCCCCC"> have been selected and we assume</font>

255
00:11:04,110 --> 00:11:07,950
that<font color="#E5E5E5"> they also are more willing</font><font color="#CCCCCC"> to</font>

256
00:11:06,240 --> 00:11:12,120
adhere to<font color="#E5E5E5"> security and privacy best</font>

257
00:11:07,950 --> 00:11:13,950
practices now<font color="#CCCCCC"> I will give you</font><font color="#E5E5E5"> one more</font>

258
00:11:12,120 --> 00:11:14,899
case why<font color="#E5E5E5"> just</font><font color="#CCCCCC"> wanna lay the boilerplate</font>

259
00:11:13,950 --> 00:11:19,049
<font color="#E5E5E5">code</font>

260
00:11:14,899 --> 00:11:21,869
problematic<font color="#E5E5E5"> and add us if you generate</font>

261
00:11:19,049 --> 00:11:24,360
code for<font color="#E5E5E5"> all</font><font color="#CCCCCC"> modules that you can</font>

262
00:11:21,869 --> 00:11:28,860
possibly include then by<font color="#CCCCCC"> definition you</font>

263
00:11:24,360 --> 00:11:30,899
have<font color="#E5E5E5"> over privileged apps so you</font><font color="#CCCCCC"> have to</font>

264
00:11:28,860 --> 00:11:34,739
declare<font color="#E5E5E5"> all the permissions necessary to</font>

265
00:11:30,899 --> 00:11:37,499
<font color="#E5E5E5">run</font><font color="#CCCCCC"> any clue any code that was</font><font color="#E5E5E5"> included</font>

266
00:11:34,739 --> 00:11:39,749
in the application<font color="#E5E5E5"> and</font><font color="#CCCCCC"> then</font><font color="#E5E5E5"> our analysis</font>

267
00:11:37,499 --> 00:11:42,179
<font color="#CCCCCC">does</font><font color="#E5E5E5"> range between seven and twenty one</font>

268
00:11:39,749 --> 00:11:43,769
permissions now if you include

269
00:11:42,179 --> 00:11:45,360
additional advertisement<font color="#E5E5E5"> or tracking</font>

270
00:11:43,769 --> 00:11:47,369
libraries this becomes a privacy

271
00:11:45,360 --> 00:11:49,559
<font color="#CCCCCC">nightmare because past incidents have</font>

272
00:11:47,369 --> 00:11:52,110
shown that especially those kinds<font color="#E5E5E5"> of</font>

273
00:11:49,559 --> 00:11:54,089
libraries<font color="#E5E5E5"> are stealthily</font><font color="#CCCCCC"> Pro for</font>

274
00:11:52,110 --> 00:11:55,679
permissions of the<font color="#E5E5E5"> host app and if the</font>

275
00:11:54,089 --> 00:11:58,049
permission is available<font color="#CCCCCC"> the extra</font>

276
00:11:55,679 --> 00:12:01,319
sensitive data and exfiltrated to some

277
00:11:58,049 --> 00:12:05,249
remote<font color="#E5E5E5"> services we had one particularly</font>

278
00:12:01,319 --> 00:12:07,110
worrisome<font color="#E5E5E5"> record of one on an app</font>

279
00:12:05,249 --> 00:12:09,329
<font color="#CCCCCC">generator that included different</font>

280
00:12:07,110 --> 00:12:11,910
tracking libraries that combined issued

281
00:12:09,329 --> 00:12:14,939
more<font color="#CCCCCC"> than 250 web requests within the</font>

282
00:12:11,910 --> 00:12:16,709
<font color="#E5E5E5">first five</font><font color="#CCCCCC"> minutes of execution finally</font>

283
00:12:14,939 --> 00:12:18,589
<font color="#E5E5E5">we also checked interest for</font>

284
00:12:16,709 --> 00:12:21,449
infrastructure attacks because a lot of

285
00:12:18,589 --> 00:12:23,129
<font color="#E5E5E5">options</font><font color="#CCCCCC"> may be</font><font color="#E5E5E5"> we bind our customers to</font>

286
00:12:21,449 --> 00:12:27,329
<font color="#E5E5E5">their back-end</font><font color="#CCCCCC"> servers</font><font color="#E5E5E5"> for instance if</font>

287
00:12:23,129 --> 00:12:30,209
you have modules for user<font color="#CCCCCC"> log ends or</font>

288
00:12:27,329 --> 00:12:32,248
forms to submit user data so we check

289
00:12:30,209 --> 00:12:35,699
the backend servers against available

290
00:12:32,249 --> 00:12:37,829
online as<font color="#CCCCCC"> analyzers</font><font color="#E5E5E5"> and we found that</font>

291
00:12:35,699 --> 00:12:40,498
<font color="#E5E5E5">only three of these services had a valid</font>

292
00:12:37,829 --> 00:12:43,138
and trusted server certificate and all

293
00:12:40,499 --> 00:12:45,239
of them<font color="#E5E5E5"> run outdated versions of as</font><font color="#CCCCCC"> a</font>

294
00:12:43,139 --> 00:12:48,149
libraries that are<font color="#E5E5E5"> prone to one or more</font>

295
00:12:45,239 --> 00:12:50,639
recent attacks like poodle<font color="#E5E5E5"> beast</font><font color="#CCCCCC"> free</font>

296
00:12:48,149 --> 00:12:54,569
<font color="#CCCCCC">clock jam and so on</font><font color="#E5E5E5"> one of them was even</font>

297
00:12:50,639 --> 00:12:56,850
prone to<font color="#E5E5E5"> any of these attacks so by now</font>

298
00:12:54,569 --> 00:12:59,699
you should have<font color="#E5E5E5"> the impression that code</font>

299
00:12:56,850 --> 00:13:03,540
<font color="#E5E5E5">generation is a bad</font><font color="#CCCCCC"> idea but</font><font color="#E5E5E5"> this is</font>

300
00:12:59,699 --> 00:13:05,519
only partially true<font color="#CCCCCC"> I think the</font><font color="#E5E5E5"> main</font>

301
00:13:03,540 --> 00:13:07,589
problem<font color="#E5E5E5"> is this monolithic boilerplate</font>

302
00:13:05,519 --> 00:13:09,989
code generation<font color="#E5E5E5"> if</font><font color="#CCCCCC"> you've managed to</font><font color="#E5E5E5"> get</font>

303
00:13:07,589 --> 00:13:13,139
<font color="#CCCCCC">rid of</font><font color="#E5E5E5"> it and move</font><font color="#CCCCCC"> to</font><font color="#E5E5E5"> module dependent</font>

304
00:13:09,989 --> 00:13:14,999
code generation<font color="#E5E5E5"> this will improve</font><font color="#CCCCCC"> our</font>

305
00:13:13,139 --> 00:13:17,489
security<font color="#CCCCCC"> of</font><font color="#E5E5E5"> privacy of the ecosystem</font>

306
00:13:14,999 --> 00:13:19,499
significantly and one way to do so<font color="#E5E5E5"> is</font>

307
00:13:17,489 --> 00:13:22,529
<font color="#CCCCCC">Epidaurus ation and</font><font color="#E5E5E5"> there are basically</font>

308
00:13:19,499 --> 00:13:25,319
<font color="#CCCCCC">two concepts available that allow you</font><font color="#E5E5E5"> to</font>

309
00:13:22,529 --> 00:13:26,279
do this<font color="#E5E5E5"> now the first one is Android app</font>

310
00:13:25,319 --> 00:13:28,110
bundle<font color="#E5E5E5"> so</font>

311
00:13:26,279 --> 00:13:30,480
idea is<font color="#E5E5E5"> to split functionality of your</font>

312
00:13:28,110 --> 00:13:32,550
<font color="#E5E5E5">app and core functionality an optional</font>

313
00:13:30,480 --> 00:13:36,240
functionality that can be installed on

314
00:13:32,550 --> 00:13:38,189
demand<font color="#E5E5E5"> the second one is instant apps so</font>

315
00:13:36,240 --> 00:13:41,160
<font color="#E5E5E5">basically allows users to preview your</font>

316
00:13:38,189 --> 00:13:44,910
<font color="#E5E5E5">app or parts of your app without</font><font color="#CCCCCC"> having</font>

317
00:13:41,160 --> 00:13:46,920
to<font color="#CCCCCC"> install it and the nice thing is</font>

318
00:13:44,910 --> 00:13:49,379
<font color="#CCCCCC">there</font><font color="#E5E5E5"> there's no strong IDE support</font>

319
00:13:46,920 --> 00:13:55,519
development<font color="#E5E5E5"> SDK is available to support</font>

320
00:13:49,379 --> 00:13:58,019
developers in achieving<font color="#E5E5E5"> this task so</font>

321
00:13:55,519 --> 00:13:59,699
<font color="#E5E5E5">takeaways from this talk we have seen</font>

322
00:13:58,019 --> 00:14:02,910
<font color="#E5E5E5">different pitfalls of this</font>

323
00:13:59,699 --> 00:14:05,008
one-size-fits-all<font color="#E5E5E5"> app generation that</font>

324
00:14:02,910 --> 00:14:05,819
typically is this monolithic boilerplate

325
00:14:05,009 --> 00:14:09,120
code generation

326
00:14:05,819 --> 00:14:13,670
I think<font color="#E5E5E5"> AB modernization is key to</font>

327
00:14:09,120 --> 00:14:16,470
remove large clusters of<font color="#E5E5E5"> attack vectors</font>

328
00:14:13,670 --> 00:14:18,540
so for instance when<font color="#CCCCCC"> we move to</font><font color="#E5E5E5"> module</font>

329
00:14:16,470 --> 00:14:20,309
dependent code generation we<font color="#E5E5E5"> can follow</font>

330
00:14:18,540 --> 00:14:23,129
the principle of least privilege which

331
00:14:20,309 --> 00:14:25,740
significantly reduces<font color="#CCCCCC"> the</font><font color="#E5E5E5"> attack surface</font>

332
00:14:23,129 --> 00:14:28,800
<font color="#E5E5E5">and I was strong too</font><font color="#CCCCCC"> and I did support</font>

333
00:14:25,740 --> 00:14:32,610
<font color="#E5E5E5">us there are really no more excuses why</font>

334
00:14:28,800 --> 00:14:34,709
such an<font color="#CCCCCC"> option can't do this</font><font color="#E5E5E5"> I let me</font>

335
00:14:32,610 --> 00:14:36,449
conclude<font color="#E5E5E5"> with a question where app</font>

336
00:14:34,709 --> 00:14:38,699
generators are here to stay

337
00:14:36,449 --> 00:14:40,258
I would say<font color="#E5E5E5"> definitely yes because</font><font color="#CCCCCC"> there</font>

338
00:14:38,699 --> 00:14:44,430
<font color="#E5E5E5">will be an increase in demand for apps</font>

339
00:14:40,259 --> 00:14:49,319
especially<font color="#E5E5E5"> from one IT people but</font>

340
00:14:44,430 --> 00:14:51,378
recently<font color="#CCCCCC"> Apple</font><font color="#E5E5E5"> had removed these</font>

341
00:14:49,319 --> 00:14:53,819
template apps from the<font color="#E5E5E5"> iOS App Store</font>

342
00:14:51,379 --> 00:14:57,509
<font color="#CCCCCC">they intentionally marked them as spam</font>

343
00:14:53,819 --> 00:15:01,849
<font color="#E5E5E5">apps while I could partially follow the</font>

344
00:14:57,509 --> 00:15:01,850
argumentation saying<font color="#CCCCCC"> ok these apps are</font>

345
00:15:01,879 --> 00:15:06,389
amplification<font color="#E5E5E5"> of security and privacy</font>

346
00:15:03,720 --> 00:15:08,699
issue<font color="#E5E5E5"> I would still say that</font><font color="#CCCCCC"> this is the</font>

347
00:15:06,389 --> 00:15:10,889
right<font color="#E5E5E5"> this</font><font color="#CCCCCC"> is not</font><font color="#E5E5E5"> the right</font><font color="#CCCCCC"> approach</font><font color="#E5E5E5"> I</font>

348
00:15:08,699 --> 00:15:13,139
think<font color="#CCCCCC"> we should turn that argument</font>

349
00:15:10,889 --> 00:15:14,730
<font color="#E5E5E5">around and say</font><font color="#CCCCCC"> ok if we manage to have</font>

350
00:15:13,139 --> 00:15:17,339
those few<font color="#E5E5E5"> companies to make their</font>

351
00:15:14,730 --> 00:15:19,439
<font color="#CCCCCC">product</font><font color="#E5E5E5"> more secure and this would be a</font>

352
00:15:17,339 --> 00:15:22,499
positive<font color="#E5E5E5"> amplification factor for</font>

353
00:15:19,439 --> 00:15:25,019
security<font color="#E5E5E5"> and privacy and still there are</font>

354
00:15:22,499 --> 00:15:28,559
tools for non IT people<font color="#E5E5E5"> for citizen</font>

355
00:15:25,019 --> 00:15:32,040
developers to create<font color="#E5E5E5"> apps was that</font>

356
00:15:28,559 --> 00:15:38,569
<font color="#CCCCCC">thanks you for your attention</font>

357
00:15:32,040 --> 00:15:38,569
[Applause]

358
00:15:42,720 --> 00:15:47,890
so yeah<font color="#CCCCCC"> please state your name</font><font color="#E5E5E5"> and</font>

359
00:15:44,890 --> 00:15:51,090
affiliation<font color="#CCCCCC"> -</font><font color="#E5E5E5"> my name is</font><font color="#CCCCCC"> Maksim with the</font>

360
00:15:47,890 --> 00:15:54,790
University of<font color="#E5E5E5"> Arizona</font><font color="#CCCCCC"> I'm</font><font color="#E5E5E5"> wondering if</font>

361
00:15:51,090 --> 00:15:56,410
you saw examples<font color="#E5E5E5"> where app developers</font>

362
00:15:54,790 --> 00:15:59,920
<font color="#E5E5E5">whether intentionally</font><font color="#CCCCCC"> or otherwise we're</font>

363
00:15:56,410 --> 00:16:01,569
pushing out updates via these config

364
00:15:59,920 --> 00:16:03,490
files which to me kind<font color="#CCCCCC"> of sound like</font>

365
00:16:01,570 --> 00:16:05,980
firmware and<font color="#E5E5E5"> if so whether</font><font color="#CCCCCC"> or</font><font color="#E5E5E5"> not that</font>

366
00:16:03,490 --> 00:16:07,900
would<font color="#E5E5E5"> be a violation of the Terms of</font>

367
00:16:05,980 --> 00:16:09,760
Service for developers on<font color="#E5E5E5"> the Play Store</font>

368
00:16:07,900 --> 00:16:10,650
<font color="#CCCCCC">and the</font><font color="#E5E5E5"> iOS</font><font color="#CCCCCC"> App Store since you are</font>

369
00:16:09,760 --> 00:16:14,490
supposed<font color="#CCCCCC"> to push updates</font>

370
00:16:10,650 --> 00:16:14,490
programmatically<font color="#E5E5E5"> through those doors</font>

371
00:16:16,590 --> 00:16:22,690
yeah but they don't<font color="#E5E5E5"> change the code</font><font color="#CCCCCC"> I</font>

372
00:16:20,410 --> 00:16:25,420
mean they only<font color="#E5E5E5"> change which code</font><font color="#CCCCCC"> is</font>

373
00:16:22,690 --> 00:16:30,340
enabled so<font color="#CCCCCC"> it's</font><font color="#E5E5E5"> only like</font><font color="#CCCCCC"> your update</font>

374
00:16:25,420 --> 00:16:32,380
and config file so actually the app<font color="#E5E5E5"> the</font>

375
00:16:30,340 --> 00:16:34,990
code and the Play<font color="#E5E5E5"> Store is always the</font>

376
00:16:32,380 --> 00:16:37,240
same so<font color="#CCCCCC"> there</font><font color="#E5E5E5"> won't be an update and it</font>

377
00:16:34,990 --> 00:16:41,110
also differs<font color="#E5E5E5"> from option to app chance</font>

378
00:16:37,240 --> 00:16:43,630
<font color="#E5E5E5">some options also publish</font><font color="#CCCCCC"> for you</font><font color="#E5E5E5"> while</font>

379
00:16:41,110 --> 00:16:46,330
<font color="#E5E5E5">others say okay we</font><font color="#CCCCCC"> just generate and you</font>

380
00:16:43,630 --> 00:16:49,420
have to push the update<font color="#E5E5E5"> so if you change</font>

381
00:16:46,330 --> 00:16:53,170
something<font color="#E5E5E5"> this your app then basically</font>

382
00:16:49,420 --> 00:16:54,430
you have also<font color="#CCCCCC"> to push the update and it</font>

383
00:16:53,170 --> 00:16:57,430
depends whether<font color="#E5E5E5"> you have monolithic</font>

384
00:16:54,430 --> 00:17:00,479
boilerplate code<font color="#E5E5E5"> then the app code is</font>

385
00:16:57,430 --> 00:17:02,979
always<font color="#E5E5E5"> exactly</font><font color="#CCCCCC"> the same no matter</font><font color="#E5E5E5"> which</font>

386
00:17:00,480 --> 00:17:05,260
configurations you chose<font color="#E5E5E5"> if you have</font>

387
00:17:02,980 --> 00:17:08,260
<font color="#E5E5E5">this module dependent configuration then</font>

388
00:17:05,260 --> 00:17:10,150
all it really<font color="#E5E5E5"> changes so</font><font color="#CCCCCC"> your published</font>

389
00:17:08,260 --> 00:17:14,470
app<font color="#E5E5E5"> lets</font><font color="#CCCCCC"> me changes you</font><font color="#E5E5E5"> have to upload</font>

390
00:17:10,150 --> 00:17:15,910
<font color="#E5E5E5">it again but it would say it's</font><font color="#CCCCCC"> Greyson</font>

391
00:17:14,470 --> 00:17:18,189
especially for those monolithic

392
00:17:15,910 --> 00:17:19,839
boilerplate code<font color="#E5E5E5"> generators</font><font color="#CCCCCC"> okay I</font><font color="#E5E5E5"> mean</font>

393
00:17:18,189 --> 00:17:21,850
that would still<font color="#CCCCCC"> be a contradiction</font><font color="#E5E5E5"> I</font>

394
00:17:19,839 --> 00:17:23,530
know of the iOS<font color="#E5E5E5"> App Store terms because</font>

395
00:17:21,849 --> 00:17:25,270
even if you update<font color="#E5E5E5"> like just an image</font>

396
00:17:23,530 --> 00:17:27,459
asset you have<font color="#CCCCCC"> to do it through an</font>

397
00:17:25,270 --> 00:17:29,710
<font color="#E5E5E5">update to the app you know it's a static</font>

398
00:17:27,459 --> 00:17:31,420
asset but I guess it was<font color="#E5E5E5"> not the main</font>

399
00:17:29,710 --> 00:17:33,580
reason by<font color="#CCCCCC"> the band ourselves maybe</font><font color="#E5E5E5"> a</font>

400
00:17:31,420 --> 00:17:36,640
contributing reason<font color="#CCCCCC"> but the main reason</font>

401
00:17:33,580 --> 00:17:42,220
<font color="#CCCCCC">was</font><font color="#E5E5E5"> basically okay those low quality</font>

402
00:17:36,640 --> 00:17:44,680
apps<font color="#CCCCCC"> security</font><font color="#E5E5E5"> and privacy issues hi</font>

403
00:17:42,220 --> 00:17:46,720
Eric Penn State<font color="#CCCCCC"> do you think that</font>

404
00:17:44,680 --> 00:17:48,010
<font color="#CCCCCC">androids new stance of requesting</font>

405
00:17:46,720 --> 00:17:49,450
permissions at the time<font color="#CCCCCC"> they were used</font>

406
00:17:48,010 --> 00:17:51,490
instead<font color="#E5E5E5"> of installation is some of</font>

407
00:17:49,450 --> 00:17:56,050
mitigating<font color="#E5E5E5"> the effect of the over</font>

408
00:17:51,490 --> 00:17:59,650
<font color="#CCCCCC">privilege of the monolithic</font><font color="#E5E5E5"> app I don't</font>

409
00:17:56,050 --> 00:18:03,520
think so<font color="#E5E5E5"> because I mean it's basically</font>

410
00:17:59,650 --> 00:18:05,500
dead code so it's doing it's just

411
00:18:03,520 --> 00:18:09,400
included but<font color="#E5E5E5"> you as an attacker can</font>

412
00:18:05,500 --> 00:18:11,590
enable it but you can also attack

413
00:18:09,400 --> 00:18:13,630
certain<font color="#E5E5E5"> things for instance it can be a</font>

414
00:18:11,590 --> 00:18:16,600
content provider<font color="#E5E5E5"> that leaks internal</font>

415
00:18:13,630 --> 00:18:20,200
data and<font color="#E5E5E5"> it's not protected</font><font color="#CCCCCC"> by</font><font color="#E5E5E5"> a</font>

416
00:18:16,600 --> 00:18:22,540
permission<font color="#E5E5E5"> and I think I can just attack</font>

417
00:18:20,200 --> 00:18:25,630
this component without<font color="#E5E5E5"> the user noticing</font>

418
00:18:22,540 --> 00:18:27,430
<font color="#E5E5E5">it of course if it's somehow protected</font>

419
00:18:25,630 --> 00:18:29,290
with permissions and<font color="#E5E5E5"> it has runtime</font>

420
00:18:27,430 --> 00:18:31,480
permission not all of them already

421
00:18:29,290 --> 00:18:36,510
<font color="#E5E5E5">adopted runtime permissions then at</font>

422
00:18:31,480 --> 00:18:38,160
<font color="#E5E5E5">least the user has shown some warning or</font>

423
00:18:36,510 --> 00:18:41,770
<font color="#CCCCCC">request</font>

424
00:18:38,160 --> 00:18:44,440
<font color="#CCCCCC">thanks Robert from Idaho National</font>

425
00:18:41,770 --> 00:18:47,110
Laboratory<font color="#CCCCCC"> did you do any analysis of</font>

426
00:18:44,440 --> 00:18:50,020
<font color="#E5E5E5">the percentage of applications that were</font>

427
00:18:47,110 --> 00:18:55,750
malicious<font color="#E5E5E5"> or were spam or anything like</font>

428
00:18:50,020 --> 00:18:58,480
<font color="#E5E5E5">that from the generators</font><font color="#CCCCCC"> I don't</font><font color="#E5E5E5"> think</font>

429
00:18:55,750 --> 00:19:00,580
that you can generate<font color="#CCCCCC"> Malafaia bestowed</font>

430
00:18:58,480 --> 00:19:05,530
services because basically<font color="#CCCCCC"> there's no</font>

431
00:19:00,580 --> 00:19:08,620
predefined what you're called<font color="#CCCCCC"> now we're</font>

432
00:19:05,530 --> 00:19:10,690
in terms of functionality<font color="#E5E5E5"> that</font><font color="#CCCCCC"> like not</font>

433
00:19:08,620 --> 00:19:13,810
spyware but just<font color="#E5E5E5"> something that a try</font>

434
00:19:10,690 --> 00:19:16,420
can<font color="#E5E5E5"> speak something that a user might</font>

435
00:19:13,810 --> 00:19:19,899
not want so<font color="#E5E5E5"> just using the generators as</font>

436
00:19:16,420 --> 00:19:22,150
a vehicle for sending spam or something

437
00:19:19,900 --> 00:19:28,810
to<font color="#E5E5E5"> that effect it depends on the</font>

438
00:19:22,150 --> 00:19:30,790
<font color="#CCCCCC">implementation of those modules so we</font>

439
00:19:28,810 --> 00:19:32,770
didn't see any<font color="#E5E5E5"> difference between free</font>

440
00:19:30,790 --> 00:19:34,629
<font color="#CCCCCC">and paid apps that</font><font color="#E5E5E5"> we would say</font><font color="#CCCCCC"> ok the</font>

441
00:19:32,770 --> 00:19:41,170
paid apps are<font color="#E5E5E5"> free of advertisement and</font>

442
00:19:34,630 --> 00:19:44,920
tracking but they are not and I don't

443
00:19:41,170 --> 00:19:47,260
<font color="#E5E5E5">think they intentionally generate</font>

444
00:19:44,920 --> 00:19:50,610
malware<font color="#E5E5E5"> it's basically they</font><font color="#CCCCCC"> use some</font>

445
00:19:47,260 --> 00:19:53,420
libraries to build some functionality

446
00:19:50,610 --> 00:19:55,639
<font color="#CCCCCC">tracking advertisement and of</font>

447
00:19:53,420 --> 00:19:58,240
these<font color="#E5E5E5"> components leak then basically</font>

448
00:19:55,640 --> 00:20:02,260
<font color="#CCCCCC">it'll be an amplification</font><font color="#E5E5E5"> factor and</font>

449
00:19:58,240 --> 00:20:07,780
<font color="#E5E5E5">maybe each app will read the data</font>

450
00:20:02,260 --> 00:20:07,780
<font color="#CCCCCC">Thanks</font><font color="#E5E5E5"> okay thank</font><font color="#CCCCCC"> you Eric</font>

