1
00:00:07,630 --> 00:00:13,969
thank you very<font color="#E5E5E5"> much good morning</font><font color="#CCCCCC"> so</font>

2
00:00:11,480 --> 00:00:16,700
today I'll be presenting<font color="#CCCCCC"> well good</font>

3
00:00:13,970 --> 00:00:18,320
<font color="#CCCCCC">morning my name is</font><font color="#E5E5E5"> Abner Mendoza</font><font color="#CCCCCC"> from</font>

4
00:00:16,700 --> 00:00:22,570
<font color="#E5E5E5">the success lab at Texas A&M University</font>

5
00:00:18,320 --> 00:00:24,439
<font color="#CCCCCC">and presenting my work mobile API</font>

6
00:00:22,570 --> 00:00:27,710
<font color="#E5E5E5">reconnaissance web the mobile</font>

7
00:00:24,439 --> 00:00:30,079
inconsistencies and vulnerabilities this

8
00:00:27,710 --> 00:00:33,050
is a slightly<font color="#CCCCCC"> different perspective</font><font color="#E5E5E5"> of</font>

9
00:00:30,079 --> 00:00:35,720
the mobile<font color="#CCCCCC"> web integration problems that</font>

10
00:00:33,050 --> 00:00:36,680
we<font color="#E5E5E5"> just saw in the</font><font color="#CCCCCC"> previous talk</font><font color="#E5E5E5"> so as</font>

11
00:00:35,720 --> 00:00:38,540
we all<font color="#E5E5E5"> know there's an app</font><font color="#CCCCCC"> for</font>

12
00:00:36,680 --> 00:00:42,230
everything<font color="#E5E5E5"> right is an app that apps</font>

13
00:00:38,540 --> 00:00:45,500
serve diverse<font color="#E5E5E5"> functionality in society</font>

14
00:00:42,230 --> 00:00:48,140
<font color="#E5E5E5">and what is common with most apps is</font>

15
00:00:45,500 --> 00:00:54,440
<font color="#CCCCCC">that they rely on this HTTP based API</font>

16
00:00:48,140 --> 00:00:56,179
services<font color="#E5E5E5"> and so if we take a look at the</font>

17
00:00:54,440 --> 00:00:59,329
threat<font color="#E5E5E5"> model or what the attacker</font>

18
00:00:56,179 --> 00:01:02,870
capabilities are or the<font color="#E5E5E5"> perspective of</font>

19
00:00:59,329 --> 00:01:04,810
the attacker<font color="#E5E5E5"> on this integration we</font><font color="#CCCCCC"> can</font>

20
00:01:02,870 --> 00:01:09,860
consider in our<font color="#CCCCCC"> threat model or attacker</font>

21
00:01:04,810 --> 00:01:10,520
tries to his goal is to<font color="#CCCCCC"> compromised the</font>

22
00:01:09,860 --> 00:01:14,000
web server

23
00:01:10,520 --> 00:01:15,890
right<font color="#CCCCCC"> but obviously</font><font color="#E5E5E5"> it not might not be</font>

24
00:01:14,000 --> 00:01:18,530
<font color="#E5E5E5">feasible because</font><font color="#CCCCCC"> the web server might</font>

25
00:01:15,890 --> 00:01:20,800
have robust defenses<font color="#E5E5E5"> the attacker might</font>

26
00:01:18,530 --> 00:01:23,270
also<font color="#E5E5E5"> try to maybe intercept</font>

27
00:01:20,800 --> 00:01:26,000
<font color="#CCCCCC">communication between the app and the</font>

28
00:01:23,270 --> 00:01:28,100
web server<font color="#CCCCCC"> but there</font><font color="#E5E5E5"> again HTTP</font>

29
00:01:26,000 --> 00:01:30,620
authentication tokens and<font color="#E5E5E5"> other things</font>

30
00:01:28,100 --> 00:01:33,050
might prevent<font color="#E5E5E5"> him from doing</font><font color="#CCCCCC"> that but</font>

31
00:01:30,620 --> 00:01:35,660
just<font color="#E5E5E5"> like any other regular user and an</font>

32
00:01:33,050 --> 00:01:37,600
attacker has access<font color="#CCCCCC"> to</font><font color="#E5E5E5"> the apps he can</font>

33
00:01:35,660 --> 00:01:40,490
use the apps he can be a legitimate<font color="#E5E5E5"> user</font>

34
00:01:37,600 --> 00:01:42,440
<font color="#E5E5E5">and just like a security</font><font color="#CCCCCC"> researcher he</font>

35
00:01:40,490 --> 00:01:45,530
can disassemble<font color="#E5E5E5"> the app and</font><font color="#CCCCCC"> analyze its</font>

36
00:01:42,440 --> 00:01:49,750
<font color="#E5E5E5">inner workings</font><font color="#CCCCCC"> right and so</font><font color="#E5E5E5"> that might</font>

37
00:01:45,530 --> 00:01:49,750
give him some<font color="#E5E5E5"> insight into how to</font>

38
00:01:49,810 --> 00:01:56,360
ultimately attack the web server<font color="#E5E5E5"> so it</font>

39
00:01:53,150 --> 00:01:58,250
would take<font color="#CCCCCC"> a step back and look</font><font color="#E5E5E5"> at the</font>

40
00:01:56,360 --> 00:02:00,940
<font color="#CCCCCC">evolution of web versus mobile</font>

41
00:01:58,250 --> 00:02:03,680
application and specifically from<font color="#CCCCCC"> the</font>

42
00:02:00,940 --> 00:02:09,160
perspective of the word business<font color="#CCCCCC"> logic</font>

43
00:02:03,680 --> 00:02:11,660
is implemented<font color="#CCCCCC"> on the Left here</font><font color="#E5E5E5"> we have</font>

44
00:02:09,160 --> 00:02:14,900
the typical<font color="#CCCCCC"> architecture</font><font color="#E5E5E5"> of a web</font>

45
00:02:11,660 --> 00:02:16,290
<font color="#CCCCCC">application where the business logic and</font>

46
00:02:14,900 --> 00:02:18,840
the heavy lifting

47
00:02:16,290 --> 00:02:21,298
actually implemented in the<font color="#E5E5E5"> web server</font>

48
00:02:18,840 --> 00:02:24,060
<font color="#E5E5E5">right and the browser merely serves as</font>

49
00:02:21,299 --> 00:02:25,909
for rendering<font color="#E5E5E5"> the UI let's say and there</font>

50
00:02:24,060 --> 00:02:29,430
might be a<font color="#E5E5E5"> database layer at the bottom</font>

51
00:02:25,909 --> 00:02:31,370
<font color="#CCCCCC">if we look at the mobile application</font>

52
00:02:29,430 --> 00:02:33,629
architecture<font color="#E5E5E5"> most of the business logic</font>

53
00:02:31,370 --> 00:02:36,599
might be implemented<font color="#E5E5E5"> in the app these</font>

54
00:02:33,629 --> 00:02:38,129
are compiled apps and so most<font color="#E5E5E5"> of the</font>

55
00:02:36,599 --> 00:02:40,890
business logic the validation logic

56
00:02:38,129 --> 00:02:43,649
specifically<font color="#E5E5E5"> it might be implemented in</font>

57
00:02:40,890 --> 00:02:45,750
the<font color="#E5E5E5"> app less so on the under server and</font>

58
00:02:43,650 --> 00:02:48,239
API<font color="#E5E5E5"> it might interact with an API server</font>

59
00:02:45,750 --> 00:02:49,739
which is also a web server which in turn

60
00:02:48,239 --> 00:02:53,430
might interact with<font color="#CCCCCC"> a with a database</font>

61
00:02:49,739 --> 00:02:55,200
<font color="#E5E5E5">layer</font><font color="#CCCCCC"> and in fact this</font><font color="#E5E5E5"> web and API</font>

62
00:02:53,430 --> 00:02:59,010
server<font color="#E5E5E5"> that I show</font><font color="#CCCCCC"> here one</font><font color="#E5E5E5"> and the same</font>

63
00:02:55,200 --> 00:03:01,589
<font color="#E5E5E5">right so on this work we focus on the</font>

64
00:02:59,010 --> 00:03:04,409
difference between<font color="#E5E5E5"> the logic that's</font>

65
00:03:01,590 --> 00:03:06,239
implemented<font color="#E5E5E5"> on the</font><font color="#CCCCCC"> on the application</font>

66
00:03:04,409 --> 00:03:08,459
layer and<font color="#CCCCCC"> the mobile app specifically</font>

67
00:03:06,239 --> 00:03:10,319
<font color="#E5E5E5">and then what's implemented on</font><font color="#CCCCCC"> the</font>

68
00:03:08,459 --> 00:03:14,250
server<font color="#E5E5E5"> and of course we expect some</font>

69
00:03:10,319 --> 00:03:15,988
consistency there<font color="#CCCCCC"> so the problem that we</font>

70
00:03:14,250 --> 00:03:17,730
<font color="#E5E5E5">try to</font><font color="#CCCCCC"> highlight here in</font><font color="#E5E5E5"> this work is</font>

71
00:03:15,989 --> 00:03:20,280
the<font color="#CCCCCC"> server side input validation is</font>

72
00:03:17,730 --> 00:03:23,879
still important<font color="#E5E5E5"> although that business</font>

73
00:03:20,280 --> 00:03:25,760
logic has shifted<font color="#E5E5E5"> and inevitably with</font>

74
00:03:23,879 --> 00:03:28,909
this integration<font color="#E5E5E5"> of mobile and web</font>

75
00:03:25,760 --> 00:03:31,500
inconsistencies<font color="#CCCCCC"> we'll it will appear</font><font color="#E5E5E5"> and</font>

76
00:03:28,909 --> 00:03:33,209
as I said attackers can discover and

77
00:03:31,500 --> 00:03:36,180
leverage these validation

78
00:03:33,209 --> 00:03:39,959
inconsistencies<font color="#E5E5E5"> to compromise the</font><font color="#CCCCCC"> the</font>

79
00:03:36,180 --> 00:03:42,269
server side so our<font color="#E5E5E5"> attack model again I</font>

80
00:03:39,959 --> 00:03:44,129
want to<font color="#E5E5E5"> emphasize</font><font color="#CCCCCC"> that the attacker does</font>

81
00:03:42,269 --> 00:03:46,019
not attack the<font color="#CCCCCC"> absent</font><font color="#E5E5E5"> is not deploy</font>

82
00:03:44,129 --> 00:03:47,819
malicious app he merely analyzes the

83
00:03:46,019 --> 00:03:49,440
absence so in this example<font color="#E5E5E5"> this simple</font>

84
00:03:47,819 --> 00:03:53,638
example<font color="#CCCCCC"> here we have our</font><font color="#E5E5E5"> Bank</font>

85
00:03:49,440 --> 00:03:56,699
<font color="#CCCCCC">application</font><font color="#E5E5E5"> communicating with let's say</font>

86
00:03:53,639 --> 00:03:58,319
<font color="#E5E5E5">it's</font><font color="#CCCCCC"> Bank calm server</font><font color="#E5E5E5"> right</font><font color="#CCCCCC"> and so</font><font color="#E5E5E5"> an</font>

87
00:03:56,699 --> 00:04:00,209
implementation of this app<font color="#CCCCCC"> let's the</font>

88
00:03:58,319 --> 00:04:02,638
user<font color="#E5E5E5"> wants to do a transfer of</font><font color="#CCCCCC"> money</font>

89
00:04:00,209 --> 00:04:06,659
<font color="#E5E5E5">from Alice to Bob</font><font color="#CCCCCC"> the application might</font>

90
00:04:02,639 --> 00:04:08,879
send<font color="#CCCCCC"> an web</font><font color="#E5E5E5"> request with</font><font color="#CCCCCC"> some certain</font>

91
00:04:06,659 --> 00:04:10,590
parameters that define the amount<font color="#E5E5E5"> and</font>

92
00:04:08,879 --> 00:04:14,159
who the money<font color="#E5E5E5"> is coming from and who's</font>

93
00:04:10,590 --> 00:04:15,659
it sent<font color="#E5E5E5"> right this is all validated by</font>

94
00:04:14,159 --> 00:04:18,029
the by the application<font color="#E5E5E5"> and also</font>

95
00:04:15,659 --> 00:04:21,570
validated by the server and the transfer

96
00:04:18,029 --> 00:04:24,510
happens so the attacker can analyze the

97
00:04:21,570 --> 00:04:27,419
application to uncover this particular

98
00:04:24,510 --> 00:04:29,289
API endpoint among others<font color="#E5E5E5"> and the</font>

99
00:04:27,419 --> 00:04:31,359
different parameters and

100
00:04:29,289 --> 00:04:32,949
types of<font color="#E5E5E5"> those</font><font color="#CCCCCC"> parameters</font><font color="#E5E5E5"> and the</font>

101
00:04:31,360 --> 00:04:35,259
attacker might try<font color="#E5E5E5"> something right it</font>

102
00:04:32,949 --> 00:04:37,539
might not be successful<font color="#E5E5E5"> but at</font><font color="#CCCCCC"> least he</font>

103
00:04:35,259 --> 00:04:39,969
has some knowledge of where to send a

104
00:04:37,539 --> 00:04:41,619
web<font color="#CCCCCC"> request the server</font><font color="#E5E5E5"> if it's</font>

105
00:04:39,969 --> 00:04:44,289
implemented<font color="#E5E5E5"> properly will reject that</font>

106
00:04:41,619 --> 00:04:47,529
<font color="#E5E5E5">but if it's not implemented properly the</font>

107
00:04:44,289 --> 00:04:49,599
server will accept that in invalid from

108
00:04:47,529 --> 00:04:51,580
the perspective<font color="#E5E5E5"> of the app input</font><font color="#CCCCCC"> all</font>

109
00:04:49,599 --> 00:04:53,409
<font color="#E5E5E5">right so he might change the</font><font color="#CCCCCC"> word</font>

110
00:04:51,580 --> 00:04:58,529
sending the money<font color="#CCCCCC"> to</font><font color="#E5E5E5"> and send it</font><font color="#CCCCCC"> to</font>

111
00:04:53,409 --> 00:05:01,029
himself<font color="#E5E5E5"> from Alice's ago</font><font color="#CCCCCC"> so our</font><font color="#E5E5E5"> research</font>

112
00:04:58,529 --> 00:05:04,330
in our research we do a<font color="#E5E5E5"> systematic</font>

113
00:05:01,029 --> 00:05:06,539
approach for detecting these types of

114
00:05:04,330 --> 00:05:08,948
mobile<font color="#E5E5E5"> to web validation inconsistencies</font>

115
00:05:06,539 --> 00:05:10,289
we implement the system what we call

116
00:05:08,949 --> 00:05:12,939
<font color="#CCCCCC">Ward Road which is a</font><font color="#E5E5E5"> Web API</font>

117
00:05:10,289 --> 00:05:15,369
<font color="#CCCCCC">communication reconnaissance</font><font color="#E5E5E5"> framework</font>

118
00:05:12,939 --> 00:05:17,919
for mobile applications<font color="#E5E5E5"> specifically</font>

119
00:05:15,369 --> 00:05:19,240
implemented in<font color="#E5E5E5"> Android and then we</font>

120
00:05:17,919 --> 00:05:21,549
<font color="#CCCCCC">highlight some</font><font color="#E5E5E5"> real-world case that is a</font>

121
00:05:19,240 --> 00:05:25,479
vulnerable<font color="#E5E5E5"> apps with some fairly severe</font>

122
00:05:21,550 --> 00:05:27,459
impact our general<font color="#CCCCCC"> approach to</font><font color="#E5E5E5"> this is</font>

123
00:05:25,479 --> 00:05:30,969
first we<font color="#E5E5E5"> analyze the apps to uncover</font>

124
00:05:27,459 --> 00:05:33,550
logic<font color="#E5E5E5"> just</font><font color="#CCCCCC"> as an attacker</font><font color="#E5E5E5"> would do we</font>

125
00:05:30,969 --> 00:05:36,219
use the<font color="#E5E5E5"> observe constraints that we</font>

126
00:05:33,550 --> 00:05:37,300
uncover from from<font color="#E5E5E5"> analyzing the app to</font>

127
00:05:36,219 --> 00:05:40,180
<font color="#CCCCCC">build these what we call these</font>

128
00:05:37,300 --> 00:05:42,009
communication templates HTTP requests

129
00:05:40,180 --> 00:05:44,439
templates that the app uses to

130
00:05:42,009 --> 00:05:46,749
communicate with the<font color="#E5E5E5"> API server and then</font>

131
00:05:44,439 --> 00:05:49,269
we<font color="#E5E5E5"> evaluate variations of this template</font>

132
00:05:46,749 --> 00:05:51,870
with some intentional invalid input and

133
00:05:49,269 --> 00:05:54,699
if the server accepts the input then we

134
00:05:51,870 --> 00:05:59,709
<font color="#E5E5E5">kind of flag that app and do some more</font>

135
00:05:54,699 --> 00:06:02,050
manual investigation<font color="#CCCCCC"> so let</font><font color="#E5E5E5"> me walk you</font>

136
00:05:59,709 --> 00:06:04,389
real quick through the overall

137
00:06:02,050 --> 00:06:07,839
<font color="#E5E5E5">architecture of our system war</font><font color="#CCCCCC"> droid so</font>

138
00:06:04,389 --> 00:06:10,539
it starts it takes this input<font color="#CCCCCC"> Android</font>

139
00:06:07,839 --> 00:06:12,459
<font color="#E5E5E5">apks and it feeds that into a static</font>

140
00:06:10,539 --> 00:06:15,248
analysis module<font color="#CCCCCC"> all</font><font color="#E5E5E5"> right on our static</font>

141
00:06:12,459 --> 00:06:17,919
analysis module among other things we

142
00:06:15,249 --> 00:06:20,740
primarily<font color="#E5E5E5"> have this HTTP aware program</font>

143
00:06:17,919 --> 00:06:23,729
slices which kind<font color="#E5E5E5"> of reduces the search</font>

144
00:06:20,740 --> 00:06:26,459
space for analyzing app to<font color="#CCCCCC"> just those</font>

145
00:06:23,729 --> 00:06:30,659
methods<font color="#E5E5E5"> and it's dependencies that</font>

146
00:06:26,459 --> 00:06:33,610
commit and initiate HTTP communication

147
00:06:30,659 --> 00:06:36,639
<font color="#E5E5E5">we additionally augment that dependency</font>

148
00:06:33,610 --> 00:06:39,490
graph with some UI element analysis to

149
00:06:36,639 --> 00:06:42,130
kind of get more idea of what the

150
00:06:39,490 --> 00:06:45,520
the data types are and<font color="#E5E5E5"> some other</font>

151
00:06:42,130 --> 00:06:47,110
constraints<font color="#CCCCCC"> on those</font><font color="#E5E5E5"> input data and</font><font color="#CCCCCC"> so</font>

152
00:06:45,520 --> 00:06:48,639
this gives<font color="#CCCCCC"> us</font><font color="#E5E5E5"> a set of path constraints</font>

153
00:06:47,110 --> 00:06:50,080
<font color="#CCCCCC">all</font><font color="#E5E5E5"> right and using those path</font>

154
00:06:48,639 --> 00:06:52,960
constraints then we can build these<font color="#CCCCCC"> HD</font>

155
00:06:50,080 --> 00:06:56,318
<font color="#E5E5E5">HTTP templates which are guides to how</font>

156
00:06:52,960 --> 00:06:58,750
valid inputs or valid requests to the

157
00:06:56,319 --> 00:07:02,169
API server might be constructed by the

158
00:06:58,750 --> 00:07:05,020
app and then<font color="#E5E5E5"> we feed this in to use</font>

159
00:07:02,169 --> 00:07:06,719
these templates in our evaluation<font color="#E5E5E5"> module</font>

160
00:07:05,020 --> 00:07:11,039
that basically<font color="#E5E5E5"> takes these templates</font>

161
00:07:06,720 --> 00:07:13,479
generate<font color="#E5E5E5"> some requests both valid and</font>

162
00:07:11,039 --> 00:07:17,199
potentially invalid from<font color="#E5E5E5"> the perspective</font>

163
00:07:13,479 --> 00:07:18,430
of<font color="#E5E5E5"> of the constraints but that we</font>

164
00:07:17,199 --> 00:07:21,160
observed in the<font color="#E5E5E5"> app</font>

165
00:07:18,430 --> 00:07:22,870
<font color="#E5E5E5">valid and invalid requests and then we</font>

166
00:07:21,160 --> 00:07:24,400
do some<font color="#E5E5E5"> testing on the responses right</font>

167
00:07:22,870 --> 00:07:26,830
so we're testing<font color="#E5E5E5"> the server in a</font>

168
00:07:24,400 --> 00:07:30,280
<font color="#CCCCCC">blackbox fashion</font><font color="#E5E5E5"> to try to determine</font>

169
00:07:26,830 --> 00:07:32,710
<font color="#E5E5E5">whether whatever</font><font color="#CCCCCC"> request</font><font color="#E5E5E5"> we sent with</font>

170
00:07:30,280 --> 00:07:35,080
parameters that<font color="#E5E5E5"> might be invalid whether</font>

171
00:07:32,710 --> 00:07:37,120
it is server accepted it or not and so

172
00:07:35,080 --> 00:07:40,859
then the output<font color="#CCCCCC"> of this</font><font color="#E5E5E5"> is just</font><font color="#CCCCCC"> a</font>

173
00:07:37,120 --> 00:07:44,770
reports<font color="#E5E5E5"> the different apps and what</font>

174
00:07:40,860 --> 00:07:47,789
looks like potential vulnerable API

175
00:07:44,770 --> 00:07:50,669
endpoints<font color="#CCCCCC"> then we can go in and manually</font>

176
00:07:47,789 --> 00:07:53,409
<font color="#E5E5E5">verify and test these to validate them</font>

177
00:07:50,669 --> 00:07:57,820
<font color="#E5E5E5">so just</font><font color="#CCCCCC"> to kind</font><font color="#E5E5E5"> of give you a better</font>

178
00:07:53,409 --> 00:07:59,469
idea<font color="#CCCCCC"> of maybe how these these are</font>

179
00:07:57,820 --> 00:08:01,750
extracted<font color="#E5E5E5"> these templates are extracted</font>

180
00:07:59,469 --> 00:08:08,680
this is a simple implementation<font color="#E5E5E5"> of what</font>

181
00:08:01,750 --> 00:08:11,340
a in in Java<font color="#CCCCCC"> HTTP requests might how it</font>

182
00:08:08,680 --> 00:08:14,469
might be<font color="#E5E5E5"> implemented here</font><font color="#CCCCCC"> in line six</font>

183
00:08:11,340 --> 00:08:17,229
<font color="#E5E5E5">the application is sending out URL</font>

184
00:08:14,469 --> 00:08:18,880
connection<font color="#E5E5E5"> a request and then so this is</font>

185
00:08:17,229 --> 00:08:20,710
our point<font color="#E5E5E5"> of interest and if we analyze</font>

186
00:08:18,880 --> 00:08:23,169
it backwards from here we can perhaps

187
00:08:20,710 --> 00:08:25,448
get all the dependencies all the input

188
00:08:23,169 --> 00:08:28,719
all the parameters<font color="#E5E5E5"> that</font><font color="#CCCCCC"> are being sent</font>

189
00:08:25,449 --> 00:08:30,219
in this request<font color="#E5E5E5"> so</font><font color="#CCCCCC"> we start</font><font color="#E5E5E5"> out for a</font>

190
00:08:28,719 --> 00:08:33,130
point of interest and<font color="#E5E5E5"> we go backwards</font>

191
00:08:30,219 --> 00:08:35,140
<font color="#CCCCCC">and we go and we identify the connection</font>

192
00:08:33,130 --> 00:08:37,419
<font color="#E5E5E5">setup and this will give us among other</font>

193
00:08:35,140 --> 00:08:38,799
things this<font color="#CCCCCC"> is just a simple example</font><font color="#E5E5E5"> but</font>

194
00:08:37,419 --> 00:08:41,949
among other<font color="#CCCCCC"> things we get</font><font color="#E5E5E5"> the method</font>

195
00:08:38,799 --> 00:08:45,160
<font color="#E5E5E5">this might be a HTTP GET method the</font>

196
00:08:41,950 --> 00:08:48,930
scheme might be<font color="#E5E5E5"> HTTP we identify the API</font>

197
00:08:45,160 --> 00:08:50,319
<font color="#E5E5E5">endpoint and it might tell</font><font color="#CCCCCC"> us the domain</font>

198
00:08:48,930 --> 00:08:51,790
<font color="#CCCCCC">bank.com</font>

199
00:08:50,320 --> 00:08:54,610
on the path which

200
00:08:51,790 --> 00:08:56,650
to the transfer functionality<font color="#E5E5E5"> and we</font>

201
00:08:54,610 --> 00:08:59,920
<font color="#E5E5E5">identified the the particular</font><font color="#CCCCCC"> URI</font>

202
00:08:56,650 --> 00:09:02,530
parameters<font color="#CCCCCC"> might be included in</font><font color="#E5E5E5"> this and</font>

203
00:08:59,920 --> 00:09:05,560
you might say<font color="#E5E5E5"> well we have</font><font color="#CCCCCC"> the from the</font>

204
00:09:02,530 --> 00:09:08,620
<font color="#E5E5E5">two and</font><font color="#CCCCCC"> the amount and</font><font color="#E5E5E5"> then we augment</font>

205
00:09:05,560 --> 00:09:11,709
that with<font color="#E5E5E5"> analyzing the air the user</font>

206
00:09:08,620 --> 00:09:12,820
interface<font color="#E5E5E5"> and it tells us some</font>

207
00:09:11,710 --> 00:09:15,160
<font color="#E5E5E5">additional constraints on those</font>

208
00:09:12,820 --> 00:09:19,030
<font color="#E5E5E5">parameters</font><font color="#CCCCCC"> so in this</font><font color="#E5E5E5"> case maybe it says</font>

209
00:09:15,160 --> 00:09:20,380
from the from the Android manifest file

210
00:09:19,030 --> 00:09:22,300
that might tell<font color="#CCCCCC"> us that the type is text</font>

211
00:09:20,380 --> 00:09:25,060
the maximum<font color="#CCCCCC"> glance is a hundred for the</font>

212
00:09:22,300 --> 00:09:28,270
text fields<font color="#E5E5E5"> maybe the</font><font color="#CCCCCC"> amount</font><font color="#E5E5E5"> field is a</font>

213
00:09:25,060 --> 00:09:29,410
double type this is an example<font color="#E5E5E5"> and so</font>

214
00:09:28,270 --> 00:09:32,860
putting<font color="#CCCCCC"> all this information together</font>

215
00:09:29,410 --> 00:09:36,430
then we<font color="#CCCCCC"> can see how we can generate a</font>

216
00:09:32,860 --> 00:09:37,840
valid<font color="#E5E5E5"> request</font><font color="#CCCCCC"> right of course leaving</font>

217
00:09:36,430 --> 00:09:41,770
out a lot<font color="#CCCCCC"> of details</font><font color="#E5E5E5"> from this like the</font>

218
00:09:37,840 --> 00:09:44,680
HTTP headers<font color="#CCCCCC"> and the content section of</font>

219
00:09:41,770 --> 00:09:47,260
the HTTP packet so our request templates

220
00:09:44,680 --> 00:09:50,319
are based<font color="#E5E5E5"> or modeled after the HTTP</font>

221
00:09:47,260 --> 00:09:54,130
protocol fields so extracts<font color="#E5E5E5"> methods</font>

222
00:09:50,320 --> 00:09:56,620
scheme<font color="#CCCCCC"> but</font><font color="#E5E5E5"> the URI might look like</font><font color="#CCCCCC"> what</font>

223
00:09:54,130 --> 00:09:58,420
<font color="#E5E5E5">the body and the content</font><font color="#CCCCCC"> internet and</font>

224
00:09:56,620 --> 00:10:00,850
includes<font color="#E5E5E5"> all the constraints in those</font>

225
00:09:58,420 --> 00:10:03,390
right particularly<font color="#E5E5E5"> the last three fields</font>

226
00:10:00,850 --> 00:10:05,950
<font color="#E5E5E5">and so those are</font><font color="#CCCCCC"> what we use the kind of</font>

227
00:10:03,390 --> 00:10:08,220
this tells us what<font color="#E5E5E5"> a valid request is</font>

228
00:10:05,950 --> 00:10:12,610
and then we can figure out how<font color="#E5E5E5"> to</font>

229
00:10:08,220 --> 00:10:17,410
<font color="#E5E5E5">manipulate those to do something perhaps</font>

230
00:10:12,610 --> 00:10:20,200
malicious so lastly then our evaluation

231
00:10:17,410 --> 00:10:23,709
or<font color="#E5E5E5"> inconsistency evaluation module then</font>

232
00:10:20,200 --> 00:10:25,720
takes these templates<font color="#E5E5E5"> and it generates</font>

233
00:10:23,710 --> 00:10:27,880
both valid<font color="#E5E5E5"> and</font><font color="#CCCCCC"> invalid requests</font>

234
00:10:25,720 --> 00:10:29,680
generates valid requests to kind<font color="#E5E5E5"> of</font>

235
00:10:27,880 --> 00:10:31,390
determine a baseline of<font color="#E5E5E5"> what a</font>

236
00:10:29,680 --> 00:10:33,280
<font color="#E5E5E5">successful response from the server</font>

237
00:10:31,390 --> 00:10:35,260
might look like<font color="#E5E5E5"> and so then it</font>

238
00:10:33,280 --> 00:10:38,380
determines success<font color="#E5E5E5"> versus failure based</font>

239
00:10:35,260 --> 00:10:40,720
on some testing<font color="#E5E5E5"> or evaluation and a</font>

240
00:10:38,380 --> 00:10:43,060
particular pattern matching of those

241
00:10:40,720 --> 00:10:46,660
response strings and so then if an

242
00:10:43,060 --> 00:10:48,339
invalid request is successful<font color="#CCCCCC"> then a</font>

243
00:10:46,660 --> 00:10:49,719
potential<font color="#E5E5E5"> vulnerability is fine and so</font>

244
00:10:48,340 --> 00:10:53,500
we say potential because then it

245
00:10:49,720 --> 00:10:55,780
requires<font color="#E5E5E5"> some manual manual validation</font>

246
00:10:53,500 --> 00:10:59,290
of actual that the vulnerability

247
00:10:55,780 --> 00:11:02,800
actually exists<font color="#E5E5E5"> and some human</font>

248
00:10:59,290 --> 00:11:04,569
intelligence is required<font color="#E5E5E5"> there so I'll</font>

249
00:11:02,800 --> 00:11:05,560
quickly<font color="#E5E5E5"> highlight some of the case</font>

250
00:11:04,570 --> 00:11:09,190
studies<font color="#E5E5E5"> that</font>

251
00:11:05,560 --> 00:11:10,900
we found first<font color="#E5E5E5"> our tests consisted of</font>

252
00:11:09,190 --> 00:11:14,050
<font color="#CCCCCC">10,000 apps we did a</font><font color="#E5E5E5"> large-scale</font>

253
00:11:10,900 --> 00:11:16,870
evaluation<font color="#E5E5E5"> 10,000 apps we were able to</font>

254
00:11:14,050 --> 00:11:20,349
<font color="#E5E5E5">generate</font><font color="#CCCCCC"> over 16,000</font><font color="#E5E5E5"> in valid requests</font>

255
00:11:16,870 --> 00:11:23,620
multiple for the same app our system

256
00:11:20,350 --> 00:11:27,520
identified or flagged over<font color="#CCCCCC"> 4,500 apps</font>

257
00:11:23,620 --> 00:11:30,610
<font color="#E5E5E5">with potential issues and then we tested</font>

258
00:11:27,520 --> 00:11:33,960
manually<font color="#CCCCCC"> a thousand of these apps</font><font color="#E5E5E5"> and</font>

259
00:11:30,610 --> 00:11:39,700
verified<font color="#CCCCCC"> that 960 of them had some some</font>

260
00:11:33,960 --> 00:11:44,410
API validation logic problem with

261
00:11:39,700 --> 00:11:46,930
varying degrees<font color="#CCCCCC"> of severity right the</font>

262
00:11:44,410 --> 00:11:49,300
<font color="#E5E5E5">estimated based on those apps that we</font>

263
00:11:46,930 --> 00:11:52,420
<font color="#CCCCCC">validated</font><font color="#E5E5E5"> we estimate that the victim</font>

264
00:11:49,300 --> 00:11:54,339
population could<font color="#E5E5E5"> be over 6 million just</font>

265
00:11:52,420 --> 00:11:58,000
based on the estimated download counts

266
00:11:54,339 --> 00:12:02,260
on<font color="#E5E5E5"> the Google Play Store again the</font>

267
00:11:58,000 --> 00:12:03,760
<font color="#E5E5E5">degree of severity is varies right so</font>

268
00:12:02,260 --> 00:12:07,420
one case study<font color="#E5E5E5"> in a major bank</font>

269
00:12:03,760 --> 00:12:08,890
application here that does or in the

270
00:12:07,420 --> 00:12:10,839
specifically the trunk the money

271
00:12:08,890 --> 00:12:13,810
transfer functionality of the

272
00:12:10,839 --> 00:12:15,880
application<font color="#CCCCCC"> again I want</font><font color="#E5E5E5"> to again step</font>

273
00:12:13,810 --> 00:12:19,119
back and say these have<font color="#E5E5E5"> all been fixed</font>

274
00:12:15,880 --> 00:12:22,600
<font color="#E5E5E5">in these</font><font color="#CCCCCC"> applications and all instances</font>

275
00:12:19,120 --> 00:12:25,240
we notified<font color="#E5E5E5"> the developers and some</font>

276
00:12:22,600 --> 00:12:29,880
responded some did not<font color="#CCCCCC"> so in the bank</font>

277
00:12:25,240 --> 00:12:32,890
<font color="#E5E5E5">application specifically in the to field</font>

278
00:12:29,880 --> 00:12:36,430
<font color="#CCCCCC">where</font><font color="#E5E5E5"> we select the account that we're</font>

279
00:12:32,890 --> 00:12:39,850
sending money to<font color="#CCCCCC"> forces</font><font color="#E5E5E5"> an implicit</font>

280
00:12:36,430 --> 00:12:42,609
constraint that enforced by the<font color="#E5E5E5"> app that</font>

281
00:12:39,850 --> 00:12:45,930
you can<font color="#E5E5E5"> only select what has been what</font>

282
00:12:42,610 --> 00:12:48,880
<font color="#CCCCCC">is available</font><font color="#E5E5E5"> in that spinner and so</font>

283
00:12:45,930 --> 00:12:50,800
using our multiple test accounts in the

284
00:12:48,880 --> 00:12:54,400
app this<font color="#CCCCCC"> is back</font><font color="#E5E5E5"> in the day when</font><font color="#CCCCCC"> you</font>

285
00:12:50,800 --> 00:12:57,339
could get<font color="#E5E5E5"> a free free account without</font>

286
00:12:54,400 --> 00:12:58,569
the banking fee<font color="#E5E5E5"> and so we had multiple</font>

287
00:12:57,339 --> 00:13:01,260
accounts set<font color="#CCCCCC"> up and we were</font><font color="#E5E5E5"> able to</font>

288
00:12:58,570 --> 00:13:03,760
<font color="#E5E5E5">transfer</font><font color="#CCCCCC"> some money even though the</font>

289
00:13:01,260 --> 00:13:06,750
<font color="#E5E5E5">application though the account number</font>

290
00:13:03,760 --> 00:13:09,220
did not appear in our app<font color="#CCCCCC"> our</font>

291
00:13:06,750 --> 00:13:12,130
authenticated validated in one

292
00:13:09,220 --> 00:13:14,910
particular account<font color="#E5E5E5"> of course you know</font>

293
00:13:12,130 --> 00:13:14,910
there's authentication

294
00:13:15,939 --> 00:13:22,029
constraints<font color="#E5E5E5"> here which is kind of a</font>

295
00:13:18,519 --> 00:13:26,049
limitation<font color="#E5E5E5"> of her</font><font color="#CCCCCC"> another case study is</font>

296
00:13:22,029 --> 00:13:29,319
our gift card<font color="#E5E5E5"> app and in this particular</font>

297
00:13:26,049 --> 00:13:31,389
app<font color="#E5E5E5"> there was a problem actually</font>

298
00:13:29,319 --> 00:13:34,449
uncovered a really a sequel injection

299
00:13:31,389 --> 00:13:39,909
problem in the login interface<font color="#E5E5E5"> and just</font>

300
00:13:34,449 --> 00:13:42,758
<font color="#CCCCCC">how the the app or the server</font><font color="#E5E5E5"> side did</font>

301
00:13:39,909 --> 00:13:44,470
<font color="#E5E5E5">not properly validate the input being</font>

302
00:13:42,759 --> 00:13:46,629
sent from these login fields

303
00:13:44,470 --> 00:13:49,149
particularly<font color="#CCCCCC"> the password field and so</font>

304
00:13:46,629 --> 00:13:53,019
then<font color="#CCCCCC"> we were able to using our own test</font>

305
00:13:49,149 --> 00:13:54,429
accounts again<font color="#E5E5E5"> just transfer values</font><font color="#CCCCCC"> or</font>

306
00:13:53,019 --> 00:13:57,189
<font color="#CCCCCC">gift cards from</font><font color="#E5E5E5"> one account to the other</font>

307
00:13:54,429 --> 00:13:59,470
<font color="#E5E5E5">you were able to we actually notified</font>

308
00:13:57,189 --> 00:14:02,379
the app developers and we worked with

309
00:13:59,470 --> 00:14:05,499
<font color="#CCCCCC">them</font><font color="#E5E5E5"> to uncover some more serious issues</font>

310
00:14:02,379 --> 00:14:07,149
<font color="#E5E5E5">where it turns out all their user</font>

311
00:14:05,499 --> 00:14:11,049
accounts were exposed and<font color="#CCCCCC"> we were able</font>

312
00:14:07,149 --> 00:14:13,329
<font color="#CCCCCC">to help</font><font color="#E5E5E5"> them fix this problem</font><font color="#CCCCCC"> and</font><font color="#E5E5E5"> last</font>

313
00:14:11,049 --> 00:14:18,608
the<font color="#E5E5E5"> last one I want</font><font color="#CCCCCC"> to</font><font color="#E5E5E5"> highlight</font><font color="#CCCCCC"> here</font><font color="#E5E5E5"> is</font>

314
00:14:13,329 --> 00:14:22,978
the apps<font color="#E5E5E5"> that use the Shopify SDK and so</font>

315
00:14:18,609 --> 00:14:26,709
we set up our own Shopify<font color="#CCCCCC"> merchant store</font>

316
00:14:22,979 --> 00:14:30,639
with some demo products in there and

317
00:14:26,709 --> 00:14:34,598
then we use the we use their SDK to

318
00:14:30,639 --> 00:14:37,389
build a test<font color="#E5E5E5"> app and found that in the</font>

319
00:14:34,599 --> 00:14:40,269
<font color="#E5E5E5">add to</font><font color="#CCCCCC"> cart' functionality in the API</font>

320
00:14:37,389 --> 00:14:42,669
you<font color="#E5E5E5"> have to send you know information</font><font color="#CCCCCC"> on</font>

321
00:14:40,269 --> 00:14:46,509
<font color="#E5E5E5">your product including the price the app</font>

322
00:14:42,669 --> 00:14:48,309
or the<font color="#E5E5E5"> SDK itself validates the price so</font>

323
00:14:46,509 --> 00:14:51,720
you can't send a negative<font color="#E5E5E5"> price to</font><font color="#CCCCCC"> an</font>

324
00:14:48,309 --> 00:14:54,189
SDK<font color="#CCCCCC"> all right so that constraint</font>

325
00:14:51,720 --> 00:14:56,379
informed us that<font color="#E5E5E5"> okay the app is</font>

326
00:14:54,189 --> 00:14:59,529
validating that<font color="#CCCCCC"> you can't do a negative</font>

327
00:14:56,379 --> 00:15:02,289
<font color="#E5E5E5">value maybe the let's check if the API</font>

328
00:14:59,529 --> 00:15:05,470
<font color="#E5E5E5">server does and so by bypassing the SDK</font>

329
00:15:02,289 --> 00:15:07,239
<font color="#E5E5E5">sending the add to</font><font color="#CCCCCC"> cart' functionality</font>

330
00:15:05,470 --> 00:15:09,369
<font color="#CCCCCC">or replaying that</font><font color="#E5E5E5"> but what a negative</font>

331
00:15:07,239 --> 00:15:13,359
<font color="#CCCCCC">number</font><font color="#E5E5E5"> we were able to successfully add</font>

332
00:15:09,369 --> 00:15:17,289
to a cart negative them out and<font color="#E5E5E5"> this is</font>

333
00:15:13,359 --> 00:15:18,970
<font color="#E5E5E5">because of</font><font color="#CCCCCC"> course the you know the need</font>

334
00:15:17,289 --> 00:15:21,339
for the flexibility for example to

335
00:15:18,970 --> 00:15:24,429
<font color="#E5E5E5">accommodate for coupons they were</font>

336
00:15:21,339 --> 00:15:26,080
discounts and so the price might might

337
00:15:24,429 --> 00:15:28,689
vary from one you

338
00:15:26,080 --> 00:15:30,190
together<font color="#E5E5E5"> and so we notified these this</font>

339
00:15:28,690 --> 00:15:37,840
is again has been fixed<font color="#CCCCCC"> on</font><font color="#E5E5E5"> the server</font>

340
00:15:30,190 --> 00:15:41,800
<font color="#E5E5E5">side so from all these so some of the</font>

341
00:15:37,840 --> 00:15:44,530
recommendations<font color="#CCCCCC"> that</font><font color="#E5E5E5"> we kind of based on</font>

342
00:15:41,800 --> 00:15:46,630
our insights<font color="#CCCCCC"> of course you</font><font color="#E5E5E5"> never want to</font>

343
00:15:44,530 --> 00:15:48,490
<font color="#E5E5E5">trust the client input of course this is</font>

344
00:15:46,630 --> 00:15:51,070
a harsh<font color="#E5E5E5"> lesson that should have already</font>

345
00:15:48,490 --> 00:15:52,890
<font color="#E5E5E5">been</font><font color="#CCCCCC"> learned from our lessons on the on</font>

346
00:15:51,070 --> 00:15:55,120
the web platform<font color="#CCCCCC"> and web applications</font>

347
00:15:52,890 --> 00:15:56,710
<font color="#CCCCCC">but this work highlights that you know</font>

348
00:15:55,120 --> 00:16:00,520
<font color="#E5E5E5">this continues to be a problem input</font>

349
00:15:56,710 --> 00:16:04,000
validation<font color="#E5E5E5"> and just being very cognizant</font>

350
00:16:00,520 --> 00:16:05,770
of validating or sanitizing input so

351
00:16:04,000 --> 00:16:08,260
server input validation must be at<font color="#CCCCCC"> least</font>

352
00:16:05,770 --> 00:16:09,910
as strict<font color="#CCCCCC"> as the client but not less</font>

353
00:16:08,260 --> 00:16:12,819
strict than<font color="#CCCCCC"> the</font><font color="#E5E5E5"> client and that seems to</font>

354
00:16:09,910 --> 00:16:15,900
be<font color="#E5E5E5"> the fundamental problem there we also</font>

355
00:16:12,820 --> 00:16:17,980
saw in<font color="#CCCCCC"> some</font><font color="#E5E5E5"> of the cases we</font><font color="#CCCCCC"> looked at</font>

356
00:16:15,900 --> 00:16:22,209
confusion between<font color="#E5E5E5"> authentication and</font>

357
00:16:17,980 --> 00:16:24,090
authorization logic<font color="#CCCCCC"> whereas you know</font><font color="#E5E5E5"> as</font>

358
00:16:22,210 --> 00:16:25,900
long as you're authenticated

359
00:16:24,090 --> 00:16:28,090
<font color="#E5E5E5">authorization is not checked on the</font>

360
00:16:25,900 --> 00:16:29,439
server side<font color="#E5E5E5"> and that again a harsh</font>

361
00:16:28,090 --> 00:16:31,210
<font color="#E5E5E5">lesson that should have been learned in</font>

362
00:16:29,440 --> 00:16:33,100
<font color="#E5E5E5">the</font><font color="#CCCCCC"> web form the web platform but</font>

363
00:16:31,210 --> 00:16:36,070
<font color="#E5E5E5">continues to be a problem so the key</font>

364
00:16:33,100 --> 00:16:37,660
<font color="#CCCCCC">message here</font><font color="#E5E5E5"> is</font><font color="#CCCCCC"> that consistency</font><font color="#E5E5E5"> is key</font>

365
00:16:36,070 --> 00:16:41,200
between<font color="#CCCCCC"> the server and</font><font color="#E5E5E5"> the client</font>

366
00:16:37,660 --> 00:16:44,350
validation logic<font color="#E5E5E5"> and unfortunately</font>

367
00:16:41,200 --> 00:16:47,260
doesn't<font color="#E5E5E5"> seem to be the case so</font><font color="#CCCCCC"> so in</font>

368
00:16:44,350 --> 00:16:51,190
conclusion<font color="#CCCCCC"> we show</font><font color="#E5E5E5"> that input validation</font>

369
00:16:47,260 --> 00:16:53,830
remains a<font color="#E5E5E5"> problem on this web mobile</font><font color="#CCCCCC"> to</font>

370
00:16:51,190 --> 00:16:56,920
<font color="#CCCCCC">Web API services in this</font><font color="#E5E5E5"> integration of</font>

371
00:16:53,830 --> 00:16:59,260
mobile and<font color="#E5E5E5"> web we developed system war</font>

372
00:16:56,920 --> 00:17:01,180
<font color="#E5E5E5">droid which is a system</font><font color="#CCCCCC"> can</font><font color="#E5E5E5"> be used on</font>

373
00:16:59,260 --> 00:17:03,430
cover these types of validation

374
00:17:01,180 --> 00:17:07,030
<font color="#E5E5E5">inconsistencies</font><font color="#CCCCCC"> in a</font><font color="#E5E5E5"> semi-automatic way</font>

375
00:17:03,430 --> 00:17:09,730
and we highlight<font color="#E5E5E5"> some case studies and</font><font color="#CCCCCC"> I</font>

376
00:17:07,030 --> 00:17:11,920
rather<font color="#E5E5E5"> show that inconsistencies in</font>

377
00:17:09,730 --> 00:17:13,959
validation logic<font color="#E5E5E5"> particularly</font>

378
00:17:11,920 --> 00:17:16,810
server-side validation logic<font color="#E5E5E5"> remains a</font>

379
00:17:13,959 --> 00:17:18,850
pressing<font color="#CCCCCC"> problem so with that I want</font><font color="#E5E5E5"> to</font>

380
00:17:16,810 --> 00:17:21,159
thank<font color="#E5E5E5"> you for your time and we'll</font><font color="#CCCCCC"> be</font>

381
00:17:18,849 --> 00:17:25,510
happy to welcome<font color="#E5E5E5"> some questions</font>

382
00:17:21,160 --> 00:17:29,180
[Applause]

383
00:17:25,510 --> 00:17:30,410
hi Nick<font color="#E5E5E5"> Nikki Ferrari</font><font color="#CCCCCC"> Stoneybrook can</font>

384
00:17:29,180 --> 00:17:32,750
you tell us<font color="#E5E5E5"> a</font><font color="#CCCCCC"> little bit</font><font color="#E5E5E5"> more about the</font>

385
00:17:30,410 --> 00:17:35,270
authentication step<font color="#E5E5E5"> because you</font><font color="#CCCCCC"> seem to</font>

386
00:17:32,750 --> 00:17:36,590
<font color="#CCCCCC">be statically extracting URLs</font><font color="#E5E5E5"> and one</font>

387
00:17:35,270 --> 00:17:37,820
would<font color="#E5E5E5"> assume that you need some sort of</font>

388
00:17:36,590 --> 00:17:39,730
token that<font color="#E5E5E5"> would be dynamically</font>

389
00:17:37,820 --> 00:17:44,179
exchanged between<font color="#E5E5E5"> the app and the server</font>

390
00:17:39,730 --> 00:17:45,290
<font color="#E5E5E5">right so that is one of the actually we</font>

391
00:17:44,180 --> 00:17:46,700
<font color="#E5E5E5">talked about it more</font><font color="#CCCCCC"> in</font><font color="#E5E5E5"> the paper what</font>

392
00:17:45,290 --> 00:17:49,250
<font color="#E5E5E5">is actually one of the limitations of</font>

393
00:17:46,700 --> 00:17:51,350
<font color="#E5E5E5">our work and</font><font color="#CCCCCC"> that is why that is one of</font>

394
00:17:49,250 --> 00:17:54,290
the primary<font color="#CCCCCC"> reasons the manual step is</font>

395
00:17:51,350 --> 00:17:56,780
required<font color="#CCCCCC"> where</font><font color="#E5E5E5"> after it has been flagged</font>

396
00:17:54,290 --> 00:17:59,300
as something might be potentially

397
00:17:56,780 --> 00:18:01,310
vulnerable<font color="#CCCCCC"> then we have to authenticate</font>

398
00:17:59,300 --> 00:18:04,760
with<font color="#E5E5E5"> our own account our own demo</font>

399
00:18:01,310 --> 00:18:06,919
accounts and trying to manipulate

400
00:18:04,760 --> 00:18:08,240
parameters that way<font color="#E5E5E5"> so how would you</font>

401
00:18:06,920 --> 00:18:10,100
<font color="#E5E5E5">know</font><font color="#CCCCCC"> that something is potentially</font>

402
00:18:08,240 --> 00:18:12,400
vulnerable if you cannot send the first

403
00:18:10,100 --> 00:18:16,639
regular request with the<font color="#E5E5E5"> right token</font>

404
00:18:12,400 --> 00:18:19,360
<font color="#E5E5E5">because so the application based on the</font>

405
00:18:16,640 --> 00:18:22,310
logic in the application<font color="#E5E5E5"> we can</font><font color="#CCCCCC"> uncover</font>

406
00:18:19,360 --> 00:18:24,439
the template right<font color="#CCCCCC"> nagato what what a</font>

407
00:18:22,310 --> 00:18:25,700
request might look<font color="#CCCCCC"> like they might show</font>

408
00:18:24,440 --> 00:18:27,440
us<font color="#E5E5E5"> that okay there might be an</font>

409
00:18:25,700 --> 00:18:29,060
<font color="#E5E5E5">authentication token required here so</font>

410
00:18:27,440 --> 00:18:31,340
one of<font color="#E5E5E5"> the fields authentication token</font>

411
00:18:29,060 --> 00:18:33,649
obviously we<font color="#E5E5E5"> won't be able to be</font><font color="#CCCCCC"> able to</font>

412
00:18:31,340 --> 00:18:36,919
automatically generate that<font color="#E5E5E5"> and so then</font>

413
00:18:33,650 --> 00:18:39,530
we have to step in and get<font color="#E5E5E5"> that some</font>

414
00:18:36,920 --> 00:18:47,360
other way to be able<font color="#CCCCCC"> to replay that yeah</font>

415
00:18:39,530 --> 00:18:48,740
<font color="#E5E5E5">okay thank you</font><font color="#CCCCCC"> thank</font><font color="#E5E5E5"> you for this work</font>

416
00:18:47,360 --> 00:18:51,260
it thought<font color="#E5E5E5"> it was really insightful to</font>

417
00:18:48,740 --> 00:18:52,670
look at this<font color="#CCCCCC"> particular issue do you</font>

418
00:18:51,260 --> 00:18:55,160
<font color="#CCCCCC">think that this</font><font color="#E5E5E5"> is also if you looked at</font>

419
00:18:52,670 --> 00:18:56,540
HTTP and web server<font color="#E5E5E5"> API requests do you</font>

420
00:18:55,160 --> 00:18:58,040
think this might<font color="#CCCCCC"> be a problem to with</font>

421
00:18:56,540 --> 00:18:59,810
like<font color="#CCCCCC"> Android deep links and</font><font color="#E5E5E5"> things that</font>

422
00:18:58,040 --> 00:19:04,790
<font color="#E5E5E5">connect apps in between to those types</font>

423
00:18:59,810 --> 00:19:08,360
<font color="#E5E5E5">of requests</font><font color="#CCCCCC"> we didn't specific well it</font>

424
00:19:04,790 --> 00:19:10,460
potentially could be<font color="#CCCCCC"> I am Not sure and</font>

425
00:19:08,360 --> 00:19:14,870
we<font color="#CCCCCC"> certainly didn't look</font><font color="#E5E5E5"> at the the</font>

426
00:19:10,460 --> 00:19:19,660
issue with deep links so I wouldn't<font color="#CCCCCC"> not</font>

427
00:19:14,870 --> 00:19:19,659
sure I have a much insight into<font color="#E5E5E5"> that</font>

428
00:19:19,930 --> 00:19:23,440
<font color="#CCCCCC">kapner one more time</font>

