1
00:00:01,839 --> 00:00:03,120
hello everybody

2
00:00:03,120 --> 00:00:05,040
i'm maximilian from churchnets this is

3
00:00:05,040 --> 00:00:06,399
lubric poycott

4
00:00:06,399 --> 00:00:07,680
today we're going to talk about the

5
00:00:07,680 --> 00:00:09,679
topic of bluetooth pairing more

6
00:00:09,679 --> 00:00:11,599
generally about pairing methods and

7
00:00:11,599 --> 00:00:13,599
pairing security overall

8
00:00:13,599 --> 00:00:15,519
and more specifically how we found a

9
00:00:15,519 --> 00:00:17,279
design flaw in one of the most common of

10
00:00:17,279 --> 00:00:18,720
these protocols which is

11
00:00:18,720 --> 00:00:22,480
bluetooth before we start maybe a little

12
00:00:22,480 --> 00:00:23,119
primer

13
00:00:23,119 --> 00:00:25,519
on why we engaged with this topic a

14
00:00:25,519 --> 00:00:27,920
little bit of motivational background

15
00:00:27,920 --> 00:00:30,960
well we simply saw that a lot of devices

16
00:00:30,960 --> 00:00:32,079
these days

17
00:00:32,079 --> 00:00:33,840
are going in the direction of being

18
00:00:33,840 --> 00:00:35,360
specialized devices

19
00:00:35,360 --> 00:00:38,559
being ad hoc in some sense

20
00:00:38,559 --> 00:00:41,280
and these devices are for instance your

21
00:00:41,280 --> 00:00:42,079
smartphone

22
00:00:42,079 --> 00:00:44,559
your variable the smart home device you

23
00:00:44,559 --> 00:00:46,079
have at home

24
00:00:46,079 --> 00:00:47,520
the payment terminal you just bought

25
00:00:47,520 --> 00:00:49,920
your coffee with and we can just not

26
00:00:49,920 --> 00:00:52,640
simply assume that these devices are

27
00:00:52,640 --> 00:00:54,879
just from one single vendor instead they

28
00:00:54,879 --> 00:00:57,520
are produced by various manufacturers

29
00:00:57,520 --> 00:00:59,120
and we can also not assume that those

30
00:00:59,120 --> 00:01:00,960
are bound to strict ownership

31
00:01:00,960 --> 00:01:04,080
or a strict circumstance instead

32
00:01:04,080 --> 00:01:06,720
we need to assume that this is a very

33
00:01:06,720 --> 00:01:08,000
modular

34
00:01:08,000 --> 00:01:10,240
system we need to support and it means

35
00:01:10,240 --> 00:01:12,080
that approaches like pki

36
00:01:12,080 --> 00:01:16,000
we usually use just don't apply here

37
00:01:16,000 --> 00:01:17,439
of course there's a solution to that

38
00:01:17,439 --> 00:01:19,520
everybody has seen it here

39
00:01:19,520 --> 00:01:21,680
everybody in the world probably has used

40
00:01:21,680 --> 00:01:23,119
it once in a while

41
00:01:23,119 --> 00:01:25,759
it's it's bluetooth as already the title

42
00:01:25,759 --> 00:01:27,840
of this work suggests

43
00:01:27,840 --> 00:01:30,159
is basically the go-to solution if you

44
00:01:30,159 --> 00:01:31,680
want to connect some

45
00:01:31,680 --> 00:01:35,600
ad hoc devices in a secure manner so

46
00:01:35,600 --> 00:01:37,759
why is that simply because bluetooth is

47
00:01:37,759 --> 00:01:40,159
very simple to use i would say

48
00:01:40,159 --> 00:01:42,720
everybody of you as i said seen it you

49
00:01:42,720 --> 00:01:43,840
have a simple

50
00:01:43,840 --> 00:01:46,799
list on your smartphone maybe you scan

51
00:01:46,799 --> 00:01:47,759
and then you see

52
00:01:47,759 --> 00:01:49,840
the other device you click on it a

53
00:01:49,840 --> 00:01:51,600
dialog appears maybe also on the other

54
00:01:51,600 --> 00:01:53,759
device you complete some steps

55
00:01:53,759 --> 00:01:55,520
and then you are securely paired and

56
00:01:55,520 --> 00:01:57,200
these devices can now securely

57
00:01:57,200 --> 00:01:59,200
communicate with each other

58
00:01:59,200 --> 00:02:01,520
so that is great right that's a perfect

59
00:02:01,520 --> 00:02:04,399
solution isn't it

60
00:02:05,280 --> 00:02:07,680
so let's talk about bluetooth in more

61
00:02:07,680 --> 00:02:08,479
detail

62
00:02:08,479 --> 00:02:11,760
as it is such an important technology so

63
00:02:11,760 --> 00:02:14,239
first of all it is a industry defined

64
00:02:14,239 --> 00:02:14,879
standard

65
00:02:14,879 --> 00:02:17,040
namely by the bluetooth special interest

66
00:02:17,040 --> 00:02:18,480
group

67
00:02:18,480 --> 00:02:20,800
apart from that there are many many

68
00:02:20,800 --> 00:02:22,160
devices out there

69
00:02:22,160 --> 00:02:26,560
using this protocol for instance in 2019

70
00:02:26,560 --> 00:02:29,599
the sig expected over 4 billion devices

71
00:02:29,599 --> 00:02:31,360
to be shipped

72
00:02:31,360 --> 00:02:34,239
and one reason for this large number is

73
00:02:34,239 --> 00:02:35,920
that the standard supports many

74
00:02:35,920 --> 00:02:38,640
different device classes

75
00:02:38,640 --> 00:02:40,959
however there's also a downside to all

76
00:02:40,959 --> 00:02:43,599
of these points

77
00:02:43,599 --> 00:02:46,160
so industry defined also means that the

78
00:02:46,160 --> 00:02:48,160
standard is written by vendors

79
00:02:48,160 --> 00:02:51,440
and all of them have their own interest

80
00:02:51,440 --> 00:02:54,959
apart from that many devices also means

81
00:02:54,959 --> 00:02:58,560
that the protocol is used by many

82
00:02:58,560 --> 00:03:01,599
security sensitive systems and so it is

83
00:03:01,599 --> 00:03:04,800
a common denominator for all of them

84
00:03:04,800 --> 00:03:08,640
and lastly when we have a multitude of

85
00:03:08,640 --> 00:03:10,560
different device classes

86
00:03:10,560 --> 00:03:13,200
this also means we have in the case of

87
00:03:13,200 --> 00:03:15,680
bluetooth a very complex and convoluted

88
00:03:15,680 --> 00:03:16,879
design to support

89
00:03:16,879 --> 00:03:20,080
all of them so but

90
00:03:20,080 --> 00:03:22,480
why is this why is this so complex and

91
00:03:22,480 --> 00:03:23,760
convoluted

92
00:03:23,760 --> 00:03:25,760
and to describe this we have to take a

93
00:03:25,760 --> 00:03:27,280
step back and look again

94
00:03:27,280 --> 00:03:29,040
at the different devices we've seen

95
00:03:29,040 --> 00:03:31,200
previously

96
00:03:31,200 --> 00:03:34,480
so as you can see there obviously they

97
00:03:34,480 --> 00:03:36,720
have different capabilities to interact

98
00:03:36,720 --> 00:03:37,920
with each other

99
00:03:37,920 --> 00:03:39,840
and their outer world but also it's

100
00:03:39,840 --> 00:03:41,360
clear that they all have their own

101
00:03:41,360 --> 00:03:44,159
security needs

102
00:03:44,159 --> 00:03:46,879
so and in order to solve this problem

103
00:03:46,879 --> 00:03:48,560
protocols like bluetooth

104
00:03:48,560 --> 00:03:51,360
start their pairing process with a

105
00:03:51,360 --> 00:03:51,920
process

106
00:03:51,920 --> 00:03:54,959
called interface negotiation and in this

107
00:03:54,959 --> 00:03:56,319
first step

108
00:03:56,319 --> 00:03:58,879
devices exchange their capabilities and

109
00:03:58,879 --> 00:04:00,400
security needs

110
00:04:00,400 --> 00:04:03,920
and then they use a table like this one

111
00:04:03,920 --> 00:04:05,840
and then they look up which pairing

112
00:04:05,840 --> 00:04:09,519
method to use afterwards

113
00:04:09,599 --> 00:04:12,000
so let's take a look at two top concrete

114
00:04:12,000 --> 00:04:13,439
examples

115
00:04:13,439 --> 00:04:15,840
here we have on the left side a fitness

116
00:04:15,840 --> 00:04:16,880
tracker

117
00:04:16,880 --> 00:04:20,320
which has capability to output over a

118
00:04:20,320 --> 00:04:21,358
display

119
00:04:21,358 --> 00:04:24,000
and has a limited capability to also get

120
00:04:24,000 --> 00:04:27,280
some input of each small touchscreen

121
00:04:27,280 --> 00:04:28,639
on the right side we have a very

122
00:04:28,639 --> 00:04:31,440
different device a banking terminal

123
00:04:31,440 --> 00:04:33,440
which is obviously more security

124
00:04:33,440 --> 00:04:34,639
sensitive

125
00:04:34,639 --> 00:04:37,840
but it has only a small and limited

126
00:04:37,840 --> 00:04:40,800
display but on the other side we have a

127
00:04:40,800 --> 00:04:42,240
input capability

128
00:04:42,240 --> 00:04:44,960
over a keyboard which supports digital

129
00:04:44,960 --> 00:04:47,280
input

130
00:04:47,440 --> 00:04:49,840
so and the interface negotiation can now

131
00:04:49,840 --> 00:04:50,960
be used

132
00:04:50,960 --> 00:04:53,919
to fit the optimal pairing method for

133
00:04:53,919 --> 00:04:56,479
all of these devices

134
00:04:56,479 --> 00:04:59,120
so having said all of this there's a big

135
00:04:59,120 --> 00:05:00,479
problem here

136
00:05:00,479 --> 00:05:03,919
interface negotiation is not secured

137
00:05:03,919 --> 00:05:05,440
it can't be at this point because

138
00:05:05,440 --> 00:05:07,759
there's no secure communication yet

139
00:05:07,759 --> 00:05:09,919
and actually that means that protocols

140
00:05:09,919 --> 00:05:11,360
like bluetooth cannot assure

141
00:05:11,360 --> 00:05:14,160
that both sides are really concluding

142
00:05:14,160 --> 00:05:15,280
and performing the same

143
00:05:15,280 --> 00:05:17,680
pairing method and it means that an

144
00:05:17,680 --> 00:05:19,919
attacker can provoke such a scenario

145
00:05:19,919 --> 00:05:22,880
where he meddles with the material and

146
00:05:22,880 --> 00:05:24,880
which is exchanged and therefore

147
00:05:24,880 --> 00:05:27,280
concludes both devices and completely

148
00:05:27,280 --> 00:05:29,280
different pairing methods

149
00:05:29,280 --> 00:05:30,960
this is exactly what we call a method

150
00:05:30,960 --> 00:05:33,120
confusion

151
00:05:33,120 --> 00:05:35,680
and having this in mind that this is a

152
00:05:35,680 --> 00:05:37,680
possibility that this can occur

153
00:05:37,680 --> 00:05:39,840
the next thing looks a little bit shady

154
00:05:39,840 --> 00:05:40,880
because

155
00:05:40,880 --> 00:05:43,440
it's a fact that bluetooth relies or

156
00:05:43,440 --> 00:05:46,160
bluetooth pairing methods rely

157
00:05:46,160 --> 00:05:48,639
on certain assumptions which they make

158
00:05:48,639 --> 00:05:50,080
about the data they exchange

159
00:05:50,080 --> 00:05:51,919
dependent on the pairing method they

160
00:05:51,919 --> 00:05:53,680
have selected or they have concluded

161
00:05:53,680 --> 00:05:54,800
upon

162
00:05:54,800 --> 00:05:57,919
and that essentially means now taking

163
00:05:57,919 --> 00:05:59,440
back method confusion

164
00:05:59,440 --> 00:06:01,759
that an attacker can potentially break

165
00:06:01,759 --> 00:06:03,440
those assumptions because

166
00:06:03,440 --> 00:06:05,520
those assumptions are based on what a

167
00:06:05,520 --> 00:06:07,199
device thinks the other device has

168
00:06:07,199 --> 00:06:08,479
concluded upon

169
00:06:08,479 --> 00:06:10,800
and method confusion shows that this

170
00:06:10,800 --> 00:06:12,560
cannot be trusted

171
00:06:12,560 --> 00:06:14,880
and these assumptions are therefore

172
00:06:14,880 --> 00:06:16,319
violated

173
00:06:16,319 --> 00:06:19,600
so let's look at a practical example of

174
00:06:19,600 --> 00:06:21,039
that

175
00:06:21,039 --> 00:06:22,800
and for that purpose we will look into

176
00:06:22,800 --> 00:06:25,039
two pairing methods of bluetooth

177
00:06:25,039 --> 00:06:28,240
and their assumptions so

178
00:06:28,240 --> 00:06:30,240
first there is numeric comparison

179
00:06:30,240 --> 00:06:31,520
numeric comparison

180
00:06:31,520 --> 00:06:33,840
i will just keep it abstract here works

181
00:06:33,840 --> 00:06:35,280
basically like that

182
00:06:35,280 --> 00:06:37,919
and two devices both devices are

183
00:06:37,919 --> 00:06:38,960
generating

184
00:06:38,960 --> 00:06:41,520
uh public private key pairs and some

185
00:06:41,520 --> 00:06:42,479
nonces

186
00:06:42,479 --> 00:06:45,440
and are exchanging them so then to

187
00:06:45,440 --> 00:06:47,360
derive some key from this public

188
00:06:47,360 --> 00:06:49,199
key material we need to of course

189
00:06:49,199 --> 00:06:51,120
authenticate it

190
00:06:51,120 --> 00:06:53,120
and this works in this case by both

191
00:06:53,120 --> 00:06:54,479
devices now

192
00:06:54,479 --> 00:06:57,120
generating a hash value which is in the

193
00:06:57,120 --> 00:06:58,000
shape of a

194
00:06:58,000 --> 00:07:00,960
six digit decimal value of this key

195
00:07:00,960 --> 00:07:02,960
material they received and they

196
00:07:02,960 --> 00:07:06,720
have and displaying it on their screens

197
00:07:06,720 --> 00:07:08,479
and probably you have seen this before

198
00:07:08,479 --> 00:07:10,400
you as a user are now expected to

199
00:07:10,400 --> 00:07:13,840
confirm that these values are the same

200
00:07:13,840 --> 00:07:16,479
and by doing so you confirm that the

201
00:07:16,479 --> 00:07:18,080
hash values are the same and that most

202
00:07:18,080 --> 00:07:20,319
likely the material exchanged is also

203
00:07:20,319 --> 00:07:23,680
equivalent well

204
00:07:23,680 --> 00:07:26,080
okay what assumptions are made here

205
00:07:26,080 --> 00:07:26,960
first

206
00:07:26,960 --> 00:07:29,599
the material is confirmed because the

207
00:07:29,599 --> 00:07:30,880
user

208
00:07:30,880 --> 00:07:32,560
properly compares those values there

209
00:07:32,560 --> 00:07:34,000
have been studies on how well

210
00:07:34,000 --> 00:07:36,080
users do this and this is not our topic

211
00:07:36,080 --> 00:07:37,599
here um

212
00:07:37,599 --> 00:07:39,759
secondly we assume that the material is

213
00:07:39,759 --> 00:07:40,960
exchanged

214
00:07:40,960 --> 00:07:44,560
unto and received by the user unmodified

215
00:07:44,560 --> 00:07:47,680
fine so those assumptions now

216
00:07:47,680 --> 00:07:48,960
let's take them aside it's not

217
00:07:48,960 --> 00:07:50,720
interesting before we look at our second

218
00:07:50,720 --> 00:07:52,000
pairing method

219
00:07:52,000 --> 00:07:54,960
and that is pass key entry pass key

220
00:07:54,960 --> 00:07:56,479
entry works a little bit different

221
00:07:56,479 --> 00:07:58,479
because in past key entry we are

222
00:07:58,479 --> 00:07:59,599
basically

223
00:07:59,599 --> 00:08:02,000
first looking at one device which is

224
00:08:02,000 --> 00:08:03,120
generating

225
00:08:03,120 --> 00:08:05,759
a value random value six digit decimal

226
00:08:05,759 --> 00:08:06,240
value

227
00:08:06,240 --> 00:08:09,919
again and then the user is expected to

228
00:08:09,919 --> 00:08:11,440
transfer this value from the screen of

229
00:08:11,440 --> 00:08:11,759
one

230
00:08:11,759 --> 00:08:15,759
device to the other device and by that

231
00:08:15,759 --> 00:08:17,840
you you as a user you create a common

232
00:08:17,840 --> 00:08:20,960
shared secret between those devices

233
00:08:20,960 --> 00:08:24,080
so that means

234
00:08:24,080 --> 00:08:26,400
now a method a page method can be

235
00:08:26,400 --> 00:08:27,280
performed

236
00:08:27,280 --> 00:08:29,039
basically using this common shared

237
00:08:29,039 --> 00:08:31,199
secret to establish a long-term key

238
00:08:31,199 --> 00:08:33,919
between those devices in a secure manner

239
00:08:33,919 --> 00:08:35,679
and it's a kind of serial knowledge

240
00:08:35,679 --> 00:08:36,958
exchange and

241
00:08:36,958 --> 00:08:39,279
this can only work securely if the

242
00:08:39,279 --> 00:08:40,640
six-digit key

243
00:08:40,640 --> 00:08:43,039
is a common shared secret between those

244
00:08:43,039 --> 00:08:44,080
devices

245
00:08:44,080 --> 00:08:45,760
and doesn't leak to an attacker until

246
00:08:45,760 --> 00:08:47,519
the pairing is completed

247
00:08:47,519 --> 00:08:48,880
otherwise the attacker could just

248
00:08:48,880 --> 00:08:52,399
participate in that paid method

249
00:08:52,399 --> 00:08:54,080
so the assumption here is clearly pass

250
00:08:54,080 --> 00:08:55,760
key entry needs to

251
00:08:55,760 --> 00:08:58,080
the value needs to stay completely

252
00:08:58,080 --> 00:09:00,560
confidential until the pairing has ended

253
00:09:00,560 --> 00:09:03,360
so good we have this method but let me

254
00:09:03,360 --> 00:09:06,560
throw in two observations here too

255
00:09:06,560 --> 00:09:08,480
numeric comparison values are not

256
00:09:08,480 --> 00:09:09,760
confidential

257
00:09:09,760 --> 00:09:12,399
because the data they used to calculate

258
00:09:12,399 --> 00:09:13,360
the hashes

259
00:09:13,360 --> 00:09:17,760
is completely um publicly exchanged

260
00:09:17,760 --> 00:09:20,080
so those are not confidential and

261
00:09:20,080 --> 00:09:21,360
secondly

262
00:09:21,360 --> 00:09:24,240
pass key entry method values and numeric

263
00:09:24,240 --> 00:09:25,360
comparison value

264
00:09:25,360 --> 00:09:27,920
methods and method values are completely

265
00:09:27,920 --> 00:09:29,839
compatible and indistinguishable to each

266
00:09:29,839 --> 00:09:31,600
other they work with each other both six

267
00:09:31,600 --> 00:09:33,680
digit decimal values

268
00:09:33,680 --> 00:09:36,560
so that means those method can work with

269
00:09:36,560 --> 00:09:38,160
each other and interact with each other

270
00:09:38,160 --> 00:09:40,160
without noticing that the other device

271
00:09:40,160 --> 00:09:41,360
is actually doing something completely

272
00:09:41,360 --> 00:09:43,600
different and there's a method confusion

273
00:09:43,600 --> 00:09:45,519
and at the same time this means there

274
00:09:45,519 --> 00:09:47,040
can be a situation

275
00:09:47,040 --> 00:09:49,680
where a past key entry method is fed

276
00:09:49,680 --> 00:09:51,760
with numeric comparison values

277
00:09:51,760 --> 00:09:54,560
which are not confidential and therefore

278
00:09:54,560 --> 00:09:56,320
violating the assumptions of past key

279
00:09:56,320 --> 00:09:58,720
entry

280
00:10:01,440 --> 00:10:04,880
of course this is not fine and so let me

281
00:10:04,880 --> 00:10:07,200
show you now how we exploited the method

282
00:10:07,200 --> 00:10:09,120
confusion

283
00:10:09,120 --> 00:10:11,200
as the interface negotiation is not

284
00:10:11,200 --> 00:10:12,480
secured

285
00:10:12,480 --> 00:10:15,519
an attacker is able to force two devices

286
00:10:15,519 --> 00:10:18,399
into different pairing methods

287
00:10:18,399 --> 00:10:21,680
so as in the example shown in this slide

288
00:10:21,680 --> 00:10:24,399
the attacker performs a pairing via pass

289
00:10:24,399 --> 00:10:28,079
key entry on the left side with device a

290
00:10:28,079 --> 00:10:30,079
this leads to the situation where device

291
00:10:30,079 --> 00:10:31,440
a prompts the user

292
00:10:31,440 --> 00:10:34,560
to input a six digital value

293
00:10:34,560 --> 00:10:37,920
on the right side the attacker performs

294
00:10:37,920 --> 00:10:40,399
a pairing by a numeric comparison with

295
00:10:40,399 --> 00:10:42,880
device b

296
00:10:42,880 --> 00:10:45,040
where device b calculates the

297
00:10:45,040 --> 00:10:46,000
fingerprint

298
00:10:46,000 --> 00:10:48,399
and also displays it as a six digital

299
00:10:48,399 --> 00:10:50,399
value again

300
00:10:50,399 --> 00:10:52,880
the user now transfers this value this

301
00:10:52,880 --> 00:10:53,760
fingerprint

302
00:10:53,760 --> 00:10:57,040
and puts it into the device a where it

303
00:10:57,040 --> 00:10:57,600
is

304
00:10:57,600 --> 00:11:00,240
expected to be a pass key which was kept

305
00:11:00,240 --> 00:11:02,399
confidential

306
00:11:02,399 --> 00:11:04,399
the attacker however has gained

307
00:11:04,399 --> 00:11:06,800
knowledge over this value

308
00:11:06,800 --> 00:11:09,440
through the pairing by an american

309
00:11:09,440 --> 00:11:11,680
passion with device b

310
00:11:11,680 --> 00:11:14,640
and so he's now able to perform the zero

311
00:11:14,640 --> 00:11:15,440
knowledge

312
00:11:15,440 --> 00:11:17,680
serial knowledge key exchange with

313
00:11:17,680 --> 00:11:19,360
device a

314
00:11:19,360 --> 00:11:22,399
and conclude to a fully active man in

315
00:11:22,399 --> 00:11:24,160
the middle position where he has

316
00:11:24,160 --> 00:11:26,640
exchanged a communication key with a and

317
00:11:26,640 --> 00:11:26,880
b

318
00:11:26,880 --> 00:11:30,480
separately so let us view

319
00:11:30,480 --> 00:11:33,120
the previous video again but now with a

320
00:11:33,120 --> 00:11:33,920
third view

321
00:11:33,920 --> 00:11:36,000
namely the attacker view executing the

322
00:11:36,000 --> 00:11:43,839
method confusion attack

323
00:11:51,760 --> 00:11:54,720
note however that this is a conceptual

324
00:11:54,720 --> 00:11:55,600
error

325
00:11:55,600 --> 00:11:57,600
here specifically occurring on the

326
00:11:57,600 --> 00:11:59,920
bluetooth protocol

327
00:11:59,920 --> 00:12:02,240
however this may also exist in other

328
00:12:02,240 --> 00:12:03,440
protocols

329
00:12:03,440 --> 00:12:06,560
using multiple pairing methods and this

330
00:12:06,560 --> 00:12:07,040
is

331
00:12:07,040 --> 00:12:10,000
because it is hard to secure the

332
00:12:10,000 --> 00:12:11,839
interface negotiation

333
00:12:11,839 --> 00:12:14,560
which obviously has to happen before a

334
00:12:14,560 --> 00:12:16,639
secure communication channel has been

335
00:12:16,639 --> 00:12:19,200
established

336
00:12:19,200 --> 00:12:23,519
but how big of a threat is this attack

337
00:12:23,519 --> 00:12:25,920
so we think even though it is not the

338
00:12:25,920 --> 00:12:28,639
duty of the user who is meant to

339
00:12:28,639 --> 00:12:32,000
confirm the pairing or transfer pass key

340
00:12:32,000 --> 00:12:35,040
there is a slight possibility for her to

341
00:12:35,040 --> 00:12:37,120
spot such an attack

342
00:12:37,120 --> 00:12:39,760
and you should also ask yourself were

343
00:12:39,760 --> 00:12:40,160
you

344
00:12:40,160 --> 00:12:42,079
able to spot the attack in the previous

345
00:12:42,079 --> 00:12:44,479
video

346
00:12:44,639 --> 00:12:47,360
so to dig deeper into this question we

347
00:12:47,360 --> 00:12:47,920
have

348
00:12:47,920 --> 00:12:50,160
conducted a survey where we have looked

349
00:12:50,160 --> 00:12:51,120
at the different

350
00:12:51,120 --> 00:12:53,200
designs of different vendors and their

351
00:12:53,200 --> 00:12:54,320
dialogues

352
00:12:54,320 --> 00:12:56,800
and there we conclude that dialogues are

353
00:12:56,800 --> 00:12:57,680
so different

354
00:12:57,680 --> 00:13:00,480
between vendors that the user is not

355
00:13:00,480 --> 00:13:01,200
able

356
00:13:01,200 --> 00:13:04,320
to correctly say which

357
00:13:04,320 --> 00:13:08,240
pairing method is used with this device

358
00:13:08,240 --> 00:13:10,800
apart from that we also conducted a user

359
00:13:10,800 --> 00:13:11,760
study

360
00:13:11,760 --> 00:13:14,639
where we asked the users to conduct

361
00:13:14,639 --> 00:13:15,519
pairings

362
00:13:15,519 --> 00:13:16,880
and in the background we were running

363
00:13:16,880 --> 00:13:19,360
the method confusion and in the end

364
00:13:19,360 --> 00:13:22,000
it turned out nobody of them was able to

365
00:13:22,000 --> 00:13:24,800
spot the attack

366
00:13:25,120 --> 00:13:26,800
but how could we fix the method

367
00:13:26,800 --> 00:13:28,480
confusion

368
00:13:28,480 --> 00:13:31,920
so at the point of now there

369
00:13:31,920 --> 00:13:35,920
is only a temporary fix available namely

370
00:13:35,920 --> 00:13:38,959
to give the user clear warnings that

371
00:13:38,959 --> 00:13:40,800
this attack exists

372
00:13:40,800 --> 00:13:43,120
and to clearly indicate which pairing

373
00:13:43,120 --> 00:13:44,560
method is used

374
00:13:44,560 --> 00:13:47,600
right now however this only can

375
00:13:47,600 --> 00:13:50,320
be seen as a temporary fix and we are

376
00:13:50,320 --> 00:13:51,839
definitely in need

377
00:13:51,839 --> 00:13:55,040
of a conceptional fix in the future

378
00:13:55,040 --> 00:13:57,440
this is also what we are working right

379
00:13:57,440 --> 00:14:00,000
now on

380
00:14:00,160 --> 00:14:03,199
so in conclusion bluetooth is insecure

381
00:14:03,199 --> 00:14:04,320
right now

382
00:14:04,320 --> 00:14:07,440
and this is a real problem because

383
00:14:07,440 --> 00:14:10,480
currently there's just this tremendous

384
00:14:10,480 --> 00:14:13,120
growth of ad hoc specialized devices

385
00:14:13,120 --> 00:14:15,760
and no other protocols really seem to

386
00:14:15,760 --> 00:14:16,959
fill this gap

387
00:14:16,959 --> 00:14:19,839
as this conceptual design flaw is a

388
00:14:19,839 --> 00:14:20,959
general

389
00:14:20,959 --> 00:14:23,199
underlying problem so what we are

390
00:14:23,199 --> 00:14:24,800
currently working on is first

391
00:14:24,800 --> 00:14:27,680
some platform some tools to analyze such

392
00:14:27,680 --> 00:14:30,079
protocols to find such flaws

393
00:14:30,079 --> 00:14:32,560
to see how many devices are affected and

394
00:14:32,560 --> 00:14:34,320
what other problems could exist

395
00:14:34,320 --> 00:14:37,440
and concurrently more importantly we are

396
00:14:37,440 --> 00:14:38,240
developing

397
00:14:38,240 --> 00:14:41,040
a protocol which is not just wholesome

398
00:14:41,040 --> 00:14:42,800
that means it contains a lot of pairing

399
00:14:42,800 --> 00:14:43,600
protocols

400
00:14:43,600 --> 00:14:47,040
but also formally verifiable to exclude

401
00:14:47,040 --> 00:14:47,839
them

402
00:14:47,839 --> 00:14:51,120
from the whole design so if you're

403
00:14:51,120 --> 00:14:52,959
interested in those efforts you have or

404
00:14:52,959 --> 00:14:54,639
if you have general ideas of

405
00:14:54,639 --> 00:14:57,120
questions to our work please reach out

406
00:14:57,120 --> 00:14:59,199
to us our emails are on the slides

407
00:14:59,199 --> 00:15:02,320
and on the paper and if you're in the

408
00:15:02,320 --> 00:15:03,519
audience right now

409
00:15:03,519 --> 00:15:08,880
this is the time for your questions

