1
00:00:01,439 --> 00:00:04,080
my name is jim hwang a student at fudan

2
00:00:04,080 --> 00:00:05,200
university

3
00:00:05,200 --> 00:00:06,799
and it is my pleasure to give this

4
00:00:06,799 --> 00:00:09,360
presentation this is a work from food

5
00:00:09,360 --> 00:00:11,040
university and the university of

6
00:00:11,040 --> 00:00:11,840
california

7
00:00:11,840 --> 00:00:15,519
urban our work is invisible proof

8
00:00:15,519 --> 00:00:18,800
types with pcie consumption same channel

9
00:00:18,800 --> 00:00:20,320
let's start with a little background

10
00:00:20,320 --> 00:00:22,640
about pcie protocol

11
00:00:22,640 --> 00:00:24,880
pcie is the defective protocol to

12
00:00:24,880 --> 00:00:27,439
conduct cpu and peripheral devices

13
00:00:27,439 --> 00:00:29,760
and numbers and kinds of product floor

14
00:00:29,760 --> 00:00:32,558
devices connected to cpu are increasing

15
00:00:32,558 --> 00:00:36,559
like gpu network card and ssd

16
00:00:36,559 --> 00:00:39,920
but pci interfaces offered by cpu

17
00:00:39,920 --> 00:00:41,520
increase lower

18
00:00:41,520 --> 00:00:44,559
so there is a gap

19
00:00:44,559 --> 00:00:47,200
fortunately pcie is designed like a

20
00:00:47,200 --> 00:00:48,559
network protocol

21
00:00:48,559 --> 00:00:51,600
you can use suite to sharing interfaces

22
00:00:51,600 --> 00:00:55,520
like pch and psi switch

23
00:00:56,000 --> 00:00:58,960
pcf support supports interfaces for the

24
00:00:58,960 --> 00:01:01,039
lower speed devices like flash internet

25
00:01:01,039 --> 00:01:02,239
card and so on

26
00:01:02,239 --> 00:01:06,000
and pci switch stays more closer to cpu

27
00:01:06,000 --> 00:01:08,320
and it connects to the faster devices

28
00:01:08,320 --> 00:01:09,200
like gpu

29
00:01:09,200 --> 00:01:12,320
and rdm network card

30
00:01:12,320 --> 00:01:15,840
we term it to our switch

31
00:01:15,840 --> 00:01:17,920
there are always problems when sharing

32
00:01:17,920 --> 00:01:19,600
other resources

33
00:01:19,600 --> 00:01:21,520
with the different devices in detail

34
00:01:21,520 --> 00:01:22,880
through the fisheye link at the same

35
00:01:22,880 --> 00:01:23,439
time

36
00:01:23,439 --> 00:01:25,680
the bandwidth may be not enough and the

37
00:01:25,680 --> 00:01:27,840
throughput or some critical application

38
00:01:27,840 --> 00:01:29,920
will decrease

39
00:01:29,920 --> 00:01:32,320
the user will feel long latency even

40
00:01:32,320 --> 00:01:34,079
whilst malicious users can launch a

41
00:01:34,079 --> 00:01:36,240
denial of service attack

42
00:01:36,240 --> 00:01:38,400
in the worst case the user secret

43
00:01:38,400 --> 00:01:40,479
information will be linked and our side

44
00:01:40,479 --> 00:01:43,679
channel attack will prove that

45
00:01:44,320 --> 00:01:47,439
here is our third model there are plr

46
00:01:47,439 --> 00:01:48,240
devices

47
00:01:48,240 --> 00:01:50,240
running types with attacker and another

48
00:01:50,240 --> 00:01:51,439
intact with

49
00:01:51,439 --> 00:01:54,399
the victim both devices share the same

50
00:01:54,399 --> 00:01:55,200
hour switch

51
00:01:55,200 --> 00:01:58,719
which connects to the upstream cpu

52
00:01:58,719 --> 00:02:00,399
as the attacker cannot access the

53
00:02:00,399 --> 00:02:03,200
wingtip detail of code directly

54
00:02:03,200 --> 00:02:04,960
we use our sectional type to involve the

55
00:02:04,960 --> 00:02:09,440
radium sequence at the sharing channel

56
00:02:09,440 --> 00:02:11,599
our tech procedure is simple and high

57
00:02:11,599 --> 00:02:12,720
level but we still

58
00:02:12,720 --> 00:02:16,239
face some challenges firstly

59
00:02:16,239 --> 00:02:18,560
there are many choices of the probe for

60
00:02:18,560 --> 00:02:21,680
example different our apis

61
00:02:21,680 --> 00:02:24,080
but they need to fulfill the below

62
00:02:24,080 --> 00:02:27,360
promised merit delays

63
00:02:27,360 --> 00:02:29,440
firstly probe should complete each

64
00:02:29,440 --> 00:02:32,400
request within a short interval

65
00:02:32,400 --> 00:02:34,840
and the probe should produce a stable

66
00:02:34,840 --> 00:02:36,400
latency

67
00:02:36,400 --> 00:02:38,480
transaction level should be proportional

68
00:02:38,480 --> 00:02:40,400
to the probe delay

69
00:02:40,400 --> 00:02:43,040
the regular measurement tools for while

70
00:02:43,040 --> 00:02:44,800
by the operating system

71
00:02:44,800 --> 00:02:48,239
cannot provide enough accuracy

72
00:02:48,239 --> 00:02:50,560
so we need a high resolution to capture

73
00:02:50,560 --> 00:02:52,480
the weak signals from user-sensitive

74
00:02:52,480 --> 00:02:53,760
activities

75
00:02:53,760 --> 00:02:56,000
suddenly the probe's attacking issues

76
00:02:56,000 --> 00:02:57,280
might interfere with

77
00:02:57,280 --> 00:02:59,599
observations because the attacker cannot

78
00:02:59,599 --> 00:03:04,080
directly mirror the victim's device to

79
00:03:04,080 --> 00:03:05,360
solve those challenges

80
00:03:05,360 --> 00:03:07,680
the problem and the inference methods

81
00:03:07,680 --> 00:03:10,239
have to be carefully designed

82
00:03:10,239 --> 00:03:13,200
here is our contribution we indicate the

83
00:03:13,200 --> 00:03:15,920
problems of sharing pci devices

84
00:03:15,920 --> 00:03:17,760
we design new subchannel tag based on

85
00:03:17,760 --> 00:03:20,720
pci consumption

86
00:03:20,720 --> 00:03:23,680
we develop effective attack strategies

87
00:03:23,680 --> 00:03:23,920
and

88
00:03:23,920 --> 00:03:27,440
evaluate them on two victim tasks

89
00:03:27,440 --> 00:03:32,560
we will explain the details later

90
00:03:32,560 --> 00:03:35,840
to wire the data links we use a demo to

91
00:03:35,840 --> 00:03:38,640
explain the reason

92
00:03:38,959 --> 00:03:40,879
there is a table with a clock and a

93
00:03:40,879 --> 00:03:42,400
victim

94
00:03:42,400 --> 00:03:44,319
the access data from the devices at the

95
00:03:44,319 --> 00:03:46,959
same period of time

96
00:03:46,959 --> 00:03:49,040
when the devices produce multi-site

97
00:03:49,040 --> 00:03:51,360
traffic the channel will be congested

98
00:03:51,360 --> 00:03:53,519
this graph is about relationship between

99
00:03:53,519 --> 00:03:55,680
traffic and latency

100
00:03:55,680 --> 00:03:57,599
if there is just a texture using the

101
00:03:57,599 --> 00:03:59,360
channel

102
00:03:59,360 --> 00:04:01,519
your short latency and if both attacker

103
00:04:01,519 --> 00:04:03,519
and victim are using the channel

104
00:04:03,519 --> 00:04:06,400
develop your long lasting we pick the

105
00:04:06,400 --> 00:04:07,040
columns

106
00:04:07,040 --> 00:04:10,400
in different places and colors

107
00:04:10,720 --> 00:04:12,640
we make some assumptions to make our

108
00:04:12,640 --> 00:04:14,480
demo simple

109
00:04:14,480 --> 00:04:16,399
firstly we assume that the bubble size

110
00:04:16,399 --> 00:04:18,000
of the upstream port is one

111
00:04:18,000 --> 00:04:19,918
which means that only one package can be

112
00:04:19,918 --> 00:04:21,600
sent one at a time

113
00:04:21,600 --> 00:04:23,600
we assume that our switch has enough

114
00:04:23,600 --> 00:04:24,960
buffer and it consumes

115
00:04:24,960 --> 00:04:27,440
time to zoom packets from device without

116
00:04:27,440 --> 00:04:28,479
switch

117
00:04:28,479 --> 00:04:30,800
we assume that the users need time to

118
00:04:30,800 --> 00:04:32,400
get data

119
00:04:32,400 --> 00:04:34,880
so when time is t0 the attacker wants to

120
00:04:34,880 --> 00:04:36,160
read the packet

121
00:04:36,160 --> 00:04:38,320
since pci employed credit based flow

122
00:04:38,320 --> 00:04:40,479
control the receiver notifies the sender

123
00:04:40,479 --> 00:04:42,160
the size of the resume buffer result

124
00:04:42,160 --> 00:04:43,759
with credit

125
00:04:43,759 --> 00:04:46,160
since there is no other traffic she will

126
00:04:46,160 --> 00:04:49,759
get credit and same data

127
00:04:50,080 --> 00:04:52,560
at time t1 to get the package and the

128
00:04:52,560 --> 00:04:56,560
calculates of short agency also attempt

129
00:04:56,560 --> 00:04:57,360
to um both

130
00:04:57,360 --> 00:04:58,800
turkey and the big team want to read the

131
00:04:58,800 --> 00:05:01,199
packet but only one could get the credit

132
00:05:01,199 --> 00:05:03,039
we assume that victim gets it and the

133
00:05:03,039 --> 00:05:05,360
attacker stops

134
00:05:05,360 --> 00:05:08,840
won't have a c2 the victim finished his

135
00:05:08,840 --> 00:05:10,240
reading

136
00:05:10,240 --> 00:05:12,160
the victim gets the data and the

137
00:05:12,160 --> 00:05:14,720
attacker gets credit

138
00:05:14,720 --> 00:05:17,360
runtime equal to 3 the total gets her

139
00:05:17,360 --> 00:05:18,400
package finally and

140
00:05:18,400 --> 00:05:21,520
calculates a long reference and the

141
00:05:21,520 --> 00:05:23,199
attacker wants to adjust another package

142
00:05:23,199 --> 00:05:25,840
at time t3

143
00:05:26,720 --> 00:05:30,240
and i guess the credits soon

144
00:05:30,960 --> 00:05:33,120
to get the package at t4 and calculate a

145
00:05:33,120 --> 00:05:35,919
short latency

146
00:05:37,600 --> 00:05:39,919
so here is the answer the traveler can

147
00:05:39,919 --> 00:05:41,680
know when the victim is active

148
00:05:41,680 --> 00:05:44,479
will the attacker get a higher latency

149
00:05:44,479 --> 00:05:47,758
to know the data is moving

150
00:05:49,199 --> 00:05:50,880
how to monitor the leaked victim

151
00:05:50,880 --> 00:05:53,280
behaviors the answer is example

152
00:05:53,280 --> 00:05:54,960
by monitoring the data movement

153
00:05:54,960 --> 00:05:57,360
activities there are two steps

154
00:05:57,360 --> 00:06:01,280
the first step is probe attacker access

155
00:06:01,280 --> 00:06:02,960
the details through the pcie channel

156
00:06:02,960 --> 00:06:03,759
system

157
00:06:03,759 --> 00:06:06,800
and make the channel contact then she

158
00:06:06,800 --> 00:06:08,880
records latency between two operations

159
00:06:08,880 --> 00:06:12,720
using human instructions like rtt

160
00:06:12,720 --> 00:06:16,160
the idea to write prop code is very easy

161
00:06:16,160 --> 00:06:18,400
but the real probe is a little more

162
00:06:18,400 --> 00:06:19,440
complicated

163
00:06:19,440 --> 00:06:22,080
we actually operate on the computers to

164
00:06:22,080 --> 00:06:23,199
make use of

165
00:06:23,199 --> 00:06:25,600
canon bypass mechanism to generate

166
00:06:25,600 --> 00:06:27,680
stable and high frequency traffic on the

167
00:06:27,680 --> 00:06:28,880
channel

168
00:06:28,880 --> 00:06:30,800
in this way we can make our probe more

169
00:06:30,800 --> 00:06:33,759
stable and channel more congested

170
00:06:33,759 --> 00:06:37,120
the second step is info and it's also

171
00:06:37,120 --> 00:06:39,520
easy to analyze the illusions

172
00:06:39,520 --> 00:06:41,039
a higher latency means that data is

173
00:06:41,039 --> 00:06:43,039
transmitting

174
00:06:43,039 --> 00:06:44,720
then we can get a sequence of data

175
00:06:44,720 --> 00:06:47,039
movement activities but about weakened

176
00:06:47,039 --> 00:06:49,840
behaviors

177
00:06:52,080 --> 00:06:54,800
however how to design probes depends on

178
00:06:54,800 --> 00:06:56,080
attack scenarios and

179
00:06:56,080 --> 00:07:02,000
we implement our attack into scenarios

180
00:07:02,000 --> 00:07:03,840
the first scenario the sharing our

181
00:07:03,840 --> 00:07:06,160
switch is pcie switch

182
00:07:06,160 --> 00:07:08,720
when the victim uses gpu on the server

183
00:07:08,720 --> 00:07:09,759
the tracker can use

184
00:07:09,759 --> 00:07:11,919
undmi network card or her machine to

185
00:07:11,919 --> 00:07:13,039
prove rdma

186
00:07:13,039 --> 00:07:16,720
attaches at a high speed of the server

187
00:07:16,720 --> 00:07:20,560
and then involve the vacuum secrets

188
00:07:22,160 --> 00:07:24,560
as to probe implement details we

189
00:07:24,560 --> 00:07:26,560
implement our probe under infinite band

190
00:07:26,560 --> 00:07:27,759
protocol

191
00:07:27,759 --> 00:07:30,880
and the setup fence after each request

192
00:07:30,880 --> 00:07:33,039
to make sure the request comes one by

193
00:07:33,039 --> 00:07:33,919
one

194
00:07:33,919 --> 00:07:38,400
the sampling rate can be as high as 770

195
00:07:38,400 --> 00:07:39,039
kilo

196
00:07:39,039 --> 00:07:42,800
points per second as for timing we set

197
00:07:42,800 --> 00:07:43,680
the flag in

198
00:07:43,680 --> 00:07:45,599
the sending queue and collapse the

199
00:07:45,599 --> 00:07:48,720
hardware time straps to timing

200
00:07:48,720 --> 00:07:50,720
and the resolution of the time strap is

201
00:07:50,720 --> 00:07:54,000
63 nanoseconds

202
00:07:54,000 --> 00:07:56,240
in the second scenario the sharing our

203
00:07:56,240 --> 00:07:57,759
switch is pch

204
00:07:57,759 --> 00:07:59,680
when the victim is using an internet

205
00:07:59,680 --> 00:08:01,440
card the terror can improve the

206
00:08:01,440 --> 00:08:03,680
environment sfg at the high frequency to

207
00:08:03,680 --> 00:08:05,599
introduce pci consumption

208
00:08:05,599 --> 00:08:09,440
and the metal delays at the same time

209
00:08:10,160 --> 00:08:13,199
as to the probe implement details

210
00:08:13,199 --> 00:08:15,280
we will storage performance development

211
00:08:15,280 --> 00:08:18,560
kit at btk to operate on fme

212
00:08:18,560 --> 00:08:21,280
and spdk can achieve a low latency and

213
00:08:21,280 --> 00:08:22,400
kernel bypass

214
00:08:22,400 --> 00:08:26,000
i o and we commit

215
00:08:26,000 --> 00:08:28,240
and complete us on computers in memory

216
00:08:28,240 --> 00:08:30,479
and write memory mapped resistors

217
00:08:30,479 --> 00:08:34,559
msr to notify fme it is called dopeos

218
00:08:34,559 --> 00:08:37,308
the same period is more than

219
00:08:37,308 --> 00:08:38,958
[Music]

220
00:08:38,958 --> 00:08:42,880
and twelve 812khz points per second

221
00:08:43,919 --> 00:08:46,320
the timing is functioning is added at cp

222
00:08:46,320 --> 00:08:49,440
and the resolution is cpu cycles

223
00:08:49,440 --> 00:08:51,360
the details and the studio code can be

224
00:08:51,360 --> 00:08:55,839
found in our people

225
00:08:56,640 --> 00:08:58,320
all the information can be informed from

226
00:08:58,320 --> 00:09:01,519
these environment activities

227
00:09:01,600 --> 00:09:03,920
let's imagine that victim's device may

228
00:09:03,920 --> 00:09:07,200
be a gpu or internet card and so on

229
00:09:07,200 --> 00:09:09,440
if the victim is using gpu it will ruin

230
00:09:09,440 --> 00:09:10,560
the password input

231
00:09:10,560 --> 00:09:12,560
in the monitor of the webpages we can

232
00:09:12,560 --> 00:09:15,279
also use it to change machining model

233
00:09:15,279 --> 00:09:18,640
if the vm is using a internet card

234
00:09:18,640 --> 00:09:20,560
it will transmit repeated packages or

235
00:09:20,560 --> 00:09:22,160
packages related

236
00:09:22,160 --> 00:09:25,920
to accessories to cpu or memory

237
00:09:25,920 --> 00:09:27,680
all this information can be involved

238
00:09:27,680 --> 00:09:30,480
from the delay sequences

239
00:09:30,480 --> 00:09:32,560
we can inform sequence data movement

240
00:09:32,560 --> 00:09:34,399
activities from three tasks

241
00:09:34,399 --> 00:09:36,480
using important keys tools webpage

242
00:09:36,480 --> 00:09:40,880
browse and machining model train by gpu

243
00:09:41,360 --> 00:09:43,279
in our experiment we can infer all the

244
00:09:43,279 --> 00:09:45,120
three kinds of information successfully

245
00:09:45,120 --> 00:09:46,959
from scenario one and only web page

246
00:09:46,959 --> 00:09:50,640
deformation from scenario two

247
00:09:50,640 --> 00:09:52,880
a how to infer secrets depends on delay

248
00:09:52,880 --> 00:09:54,160
sequences of

249
00:09:54,160 --> 00:09:56,959
specific tasks we will introduce that by

250
00:09:56,959 --> 00:09:59,439
demos

251
00:10:00,640 --> 00:10:04,320
the first task is user input inference

252
00:10:04,320 --> 00:10:06,000
the victim may input the password in

253
00:10:06,000 --> 00:10:07,519
your payment website

254
00:10:07,519 --> 00:10:09,600
the keyboard will generate an interrupt

255
00:10:09,600 --> 00:10:11,600
to signal cpu and cpu will send a

256
00:10:11,600 --> 00:10:12,560
character

257
00:10:12,560 --> 00:10:15,360
or just a black dot to gpu to render it

258
00:10:15,360 --> 00:10:19,839
now here is the demo

259
00:10:24,320 --> 00:10:25,680
we have found that each key will

260
00:10:25,680 --> 00:10:28,000
introduce a period of high latency

261
00:10:28,000 --> 00:10:29,920
and the attacker will learn the crystal

262
00:10:29,920 --> 00:10:31,600
sequences after

263
00:10:31,600 --> 00:10:34,640
analyze it in the actual attack

264
00:10:34,640 --> 00:10:36,720
we find the input from blinking and

265
00:10:36,720 --> 00:10:39,120
noisy but we can remove it since the

266
00:10:39,120 --> 00:10:42,160
time gap is fixed

267
00:10:45,360 --> 00:10:48,160
here is the web page in first task it

268
00:10:48,160 --> 00:10:51,320
meant that we have two websites

269
00:10:51,320 --> 00:10:53,120
footage.edu.comtube.com

270
00:10:53,120 --> 00:10:55,120
the first web page has two images and

271
00:10:55,120 --> 00:10:58,000
the second web has a video

272
00:10:58,000 --> 00:11:00,079
quick team access websites from internet

273
00:11:00,079 --> 00:11:01,360
so this package

274
00:11:01,360 --> 00:11:03,360
will transmit from internet card to

275
00:11:03,360 --> 00:11:04,480
memory or cache

276
00:11:04,480 --> 00:11:06,320
and victim use monitor to browse the

277
00:11:06,320 --> 00:11:08,720
website so some objects will be sent to

278
00:11:08,720 --> 00:11:09,440
gpu

279
00:11:09,440 --> 00:11:12,000
to render

280
00:11:12,959 --> 00:11:14,880
how does each component on the web page

281
00:11:14,880 --> 00:11:18,399
called latency as in demo

282
00:11:21,360 --> 00:11:23,920
we can see that different objects called

283
00:11:23,920 --> 00:11:25,760
different latency patterns image will

284
00:11:25,760 --> 00:11:26,560
introduce a short

285
00:11:26,560 --> 00:11:28,480
period or latency and a video may

286
00:11:28,480 --> 00:11:30,560
introduce a high period relationship

287
00:11:30,560 --> 00:11:32,000
so the difference when pds delay

288
00:11:32,000 --> 00:11:34,160
sequence is unique

289
00:11:34,160 --> 00:11:36,800
in our true scenarios the sequences are

290
00:11:36,800 --> 00:11:38,560
more communicated due to the system

291
00:11:38,560 --> 00:11:39,200
noise

292
00:11:39,200 --> 00:11:41,839
but we can still distinguish affiliates

293
00:11:41,839 --> 00:11:43,600
in natural way between a different model

294
00:11:43,600 --> 00:11:46,560
to classify them

295
00:11:46,880 --> 00:11:48,959
the final task is to distinguish machine

296
00:11:48,959 --> 00:11:50,880
learning model

297
00:11:50,880 --> 00:11:53,040
if a victim is linear model detail will

298
00:11:53,040 --> 00:11:56,240
be transferred in and out of the gpu

299
00:11:56,240 --> 00:11:58,240
like the web page influence task

300
00:11:58,240 --> 00:11:59,839
different layers will transfer different

301
00:11:59,839 --> 00:12:01,360
sets of data at different

302
00:12:01,360 --> 00:12:04,639
frequency upon review so different model

303
00:12:04,639 --> 00:12:06,720
delay sequence will be significantly

304
00:12:06,720 --> 00:12:09,120
different

305
00:12:09,519 --> 00:12:13,519
here is our experiment and results

306
00:12:13,519 --> 00:12:16,560
in the user info universe task we have a

307
00:12:16,560 --> 00:12:17,639
title of

308
00:12:17,639 --> 00:12:20,959
480 watts and user physics script we can

309
00:12:20,959 --> 00:12:23,120
achieve a high accuracy

310
00:12:23,120 --> 00:12:25,920
like the prior work we use hmm to

311
00:12:25,920 --> 00:12:28,160
recover the password

312
00:12:28,160 --> 00:12:30,399
in our paid influence task we collect

313
00:12:30,399 --> 00:12:32,639
100 papers to inference their delete

314
00:12:32,639 --> 00:12:34,720
sequence

315
00:12:34,720 --> 00:12:36,839
and we can classify attention-based

316
00:12:36,839 --> 00:12:39,600
bi-directional lstm to class finder

317
00:12:39,600 --> 00:12:42,320
the accuracy is about 96 percent in

318
00:12:42,320 --> 00:12:46,079
scenario 1 and above 93 percent is 0.2

319
00:12:46,079 --> 00:12:47,680
in the machine learning model inference

320
00:12:47,680 --> 00:12:49,600
tasks which used in popular machining

321
00:12:49,600 --> 00:12:50,240
models

322
00:12:50,240 --> 00:12:53,440
editing models and two simple models

323
00:12:53,440 --> 00:12:56,000
which in the same classifier we found

324
00:12:56,000 --> 00:12:57,519
that all the models are correctly

325
00:12:57,519 --> 00:12:59,360
classified

326
00:12:59,360 --> 00:13:01,040
there may be several ways to mitigate

327
00:13:01,040 --> 00:13:02,560
our attack

328
00:13:02,560 --> 00:13:04,560
firstly we can blocking high resolution

329
00:13:04,560 --> 00:13:05,760
clock instructions

330
00:13:05,760 --> 00:13:09,120
for example ldtrcp but article can

331
00:13:09,120 --> 00:13:11,279
select to other instructions for example

332
00:13:11,279 --> 00:13:12,560
using macro threads

333
00:13:12,560 --> 00:13:14,959
and monitoring the interrupts the

334
00:13:14,959 --> 00:13:16,639
details can be found in our reference

335
00:13:16,639 --> 00:13:19,200
list 47

336
00:13:19,200 --> 00:13:21,760
secondly we can find ways to detecting

337
00:13:21,760 --> 00:13:23,440
suspicious groups you pass

338
00:13:23,440 --> 00:13:25,120
for example adding a separate

339
00:13:25,120 --> 00:13:26,800
application on our switch

340
00:13:26,800 --> 00:13:28,399
to respect through fast sequences

341
00:13:28,399 --> 00:13:30,079
identified an anomalies

342
00:13:30,079 --> 00:13:33,120
and notified legacy interoperators

343
00:13:33,120 --> 00:13:35,600
another way is to allocate our bandwidth

344
00:13:35,600 --> 00:13:36,320
for example

345
00:13:36,320 --> 00:13:38,639
we can use a virtual channel in the pci

346
00:13:38,639 --> 00:13:40,720
standard to map physical resources like

347
00:13:40,720 --> 00:13:41,920
buffers to high

348
00:13:41,920 --> 00:13:44,320
priority transactions elementing

349
00:13:44,320 --> 00:13:45,600
resource conflicts with

350
00:13:45,600 --> 00:13:49,600
low priority traffic

351
00:13:49,600 --> 00:13:52,480
here is our conclusion based on pci

352
00:13:52,480 --> 00:13:53,760
conjunction

353
00:13:53,760 --> 00:13:56,320
based on the new functional attack we

354
00:13:56,320 --> 00:13:57,040
developed two

355
00:13:57,040 --> 00:13:59,920
concrete attack strategies using idma to

356
00:13:59,920 --> 00:14:00,880
attack tissue

357
00:14:00,880 --> 00:14:04,880
using a memory to attack internet

358
00:14:05,120 --> 00:14:07,600
and also we evaluate our strategies and

359
00:14:07,600 --> 00:14:08,720
infrastructures

360
00:14:08,720 --> 00:14:11,920
under the waiting tasks facebook typing

361
00:14:11,920 --> 00:14:13,600
webpage browsing and training machine

362
00:14:13,600 --> 00:14:17,120
learning model thank you for listening

363
00:14:17,120 --> 00:14:20,880
any questions

