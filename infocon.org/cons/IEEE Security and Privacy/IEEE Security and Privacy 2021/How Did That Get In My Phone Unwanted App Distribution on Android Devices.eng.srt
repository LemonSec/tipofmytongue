1
00:00:00,930 --> 00:00:01,410
Hi, everyone.

2
00:00:01,920 --> 00:00:03,179
Thanks for joining the talk.

3
00:00:03,300 --> 00:00:07,020
This is a joint work with IMDEA Software
Institute and this talk is about the

4
00:00:07,020 --> 00:00:08,879
distribution of unwanted apps on Android.

5
00:00:10,730 --> 00:00:14,640
Android has become the most popular
operating system with over 2.5

6
00:00:14,640 --> 00:00:18,820
billion active devices and 75% of
the mobile device market share.

7
00:00:18,840 --> 00:00:24,630
A major reason behind Android's success
is it's open environment that allows

8
00:00:25,260 --> 00:00:30,230
vendors to perform OS customizations and
also offers affordable access to new app

9
00:00:30,250 --> 00:00:34,820
developers that can distribute their apps
via the official or alternative markets.

10
00:00:36,060 --> 00:00:40,560
Unfortunately, this openness comes
with a cost since abusive developers

11
00:00:40,560 --> 00:00:44,470
have also easy access to the ecosystem
for distributing unwanted apps.

12
00:00:46,440 --> 00:00:50,250
In this work, we use the term unwanted
apps to refer to various classes of

13
00:00:50,250 --> 00:00:55,050
threats from traditional malware,
like ransomware to potentially

14
00:00:55,050 --> 00:00:58,449
unwanted programs like adware,
or even for  stalkerware apps.

15
00:00:59,589 --> 00:01:02,800
AV vendors keep reporting ever
increasing numbers of unwanted

16
00:01:02,800 --> 00:01:04,360
app detections in the last years.

17
00:01:05,310 --> 00:01:09,590
What remains unknown is how these apps
are actually installed on user devices.

18
00:01:09,733 --> 00:01:14,003
This is because installations on
Android can happen in different ways.

19
00:01:14,753 --> 00:01:18,773
By default only installations via the
official PlayStore market are allowed.

20
00:01:19,103 --> 00:01:23,452
However, users have the option to
enable installation from third parties

21
00:01:23,693 --> 00:01:28,013
that will allow applications like
alternative markets to operate properly.

22
00:01:28,613 --> 00:01:33,023
Even then, these apps need to obtain
the appropriate permission and notify

23
00:01:33,023 --> 00:01:34,652
the user before each installation.

24
00:01:36,793 --> 00:01:40,813
While apps are largely distributed
through markets,  other smaller

25
00:01:40,813 --> 00:01:44,533
alternative distribution vectors
also exist like Web downloads,

26
00:01:44,833 --> 00:01:46,923
Instant Messaging, or even bloatware.

27
00:01:47,993 --> 00:01:52,643
Bloatware apps are typically developed
by phone vendors or other entities

28
00:01:52,643 --> 00:01:56,543
in the Android supply chain and offer
unclear functionality to the end user.

29
00:01:57,173 --> 00:02:01,523
Interestingly, these applications
often run with system privileges and

30
00:02:01,523 --> 00:02:03,453
may perform even silent installations.

31
00:02:04,433 --> 00:02:10,985
Now, another possible distribution vector
is actually backup restoration in which

32
00:02:10,985 --> 00:02:16,521
users restore previously saved apps in
the cloud, typically, when these users

33
00:02:16,521 --> 00:02:18,710
clone apps from an old to a newer phone.

34
00:02:20,031 --> 00:02:23,521
However, the questions here is
how each vector contributes in

35
00:02:23,721 --> 00:02:25,361
the distribution of unwanted apps.

36
00:02:26,231 --> 00:02:31,581
In this work, we perform a  large-scale
analysis of unwanted app distribution

37
00:02:31,701 --> 00:02:36,541
by analyzing 12 different distribution
vectors and assess how risky each vector

38
00:02:36,541 --> 00:02:41,471
can be as well as the risk of specific
installers within the same category.

39
00:02:42,201 --> 00:02:45,631
In the process, we also measure
the prevalence of unwanted apps

40
00:02:45,651 --> 00:02:49,681
on real devices and analyze the
top unwanted families and signers.

41
00:02:53,321 --> 00:02:58,331
At the core of our study are actually
reputation logs that capture the

42
00:02:58,331 --> 00:03:03,701
presence of 34 million APKs and their
who-installs-who relationships on

43
00:03:03,701 --> 00:03:08,771
12 million Android devices for four
months from June to September 2019.

44
00:03:09,651 --> 00:03:12,861
Now a very important part of our
dataset is actually the installation

45
00:03:12,861 --> 00:03:17,780
events, that capture the parent-child
relationships as extracted by the

46
00:03:17,781 --> 00:03:22,725
operating system API and specifically
the Android Package Installer,  in which

47
00:03:22,875 --> 00:03:27,115
we are able to obtain the name of the
parent package for each installed APK.

48
00:03:27,115 --> 00:03:32,205
In this talk, the terms parent
and installer are interchangeable.

49
00:03:33,045 --> 00:03:37,375
Now let's move to the first part of our
study related to unwanted app encounters.

50
00:03:39,345 --> 00:03:44,095
We identify unwanted apps using a common
practice of collecting the AV labels

51
00:03:44,125 --> 00:03:46,785
of APKs using the VirusTotal service.

52
00:03:47,204 --> 00:03:50,834
And we collect VT reports for a
subset of APKs that are specially

53
00:03:50,834 --> 00:03:55,725
selected for the needs of this study.

54
00:03:55,725 --> 00:03:58,555
We decide if an APK is malicious
or not using the number of

55
00:03:58,695 --> 00:03:59,934
AV engines that detect it.

56
00:04:00,445 --> 00:04:05,280
And although we measure prevalence
for any VT threshold, we define

57
00:04:05,280 --> 00:04:08,390
the threshold to 4 for the analysis
of the distribution vectors.

58
00:04:09,269 --> 00:04:13,950
This threshold actually aligns with work
that propose thresholds between 3 and 14.

59
00:04:14,550 --> 00:04:19,529
Now, any APK that falls below this
threshold, or for which no VT report was

60
00:04:19,529 --> 00:04:21,599
collected is actually considered benign.

61
00:04:22,200 --> 00:04:25,960
And this means that our prevalence
estimate is a lower bound.

62
00:04:27,075 --> 00:04:31,695
Now using this threshold, we are
actually able to measure that at least

63
00:04:31,695 --> 00:04:37,365
18% of the devices in our dataset have
one unwanted app encounter during the

64
00:04:37,365 --> 00:04:38,925
four months period that we analyzed.

65
00:04:39,675 --> 00:04:44,475
Now, if we compare this to prior
measurements on Windows enterprise

66
00:04:44,475 --> 00:04:49,245
hosts this indicates that Android
devices have an unwanted  app prevalence

67
00:04:49,305 --> 00:04:53,385
similar and possibly slightly higher
than that of Windows enterprise hosts.

68
00:04:53,925 --> 00:04:56,414
We should note here that there
is a difference in time between

69
00:04:56,625 --> 00:04:58,235
work and prior measurements.

70
00:04:59,445 --> 00:05:04,755
Now we also separate unwanted
apps between PUP and malware.

71
00:05:05,325 --> 00:05:10,164
And we actually observe here that both
classes equally affect Android users.

72
00:05:11,085 --> 00:05:16,905
Now a closer look on the top unwanted
signers shows that the abuse of

73
00:05:16,905 --> 00:05:21,628
publicly available cryptographic
keys, like that from the AOSP project,

74
00:05:21,988 --> 00:05:24,271
is actually a common practice.

75
00:05:24,971 --> 00:05:29,171
We see many different applications that
are actually signed using these keys.

76
00:05:29,681 --> 00:05:35,441
Now, the interesting part is that we
also see actors abusing the generic keys

77
00:05:35,441 --> 00:05:37,770
coming from Online App Generator services.

78
00:05:38,261 --> 00:05:43,031
These services are actually used to
facilitate inexperienced users for

79
00:05:43,031 --> 00:05:48,861
developing new Android applications,
but also we see that unwanted app

80
00:05:48,881 --> 00:05:53,381
developers leverage these services
for signing their applications.

81
00:05:53,428 --> 00:05:59,518
Now, also a look on the top unwanted
families shows that most of these

82
00:05:59,548 --> 00:06:04,468
are actually PUP, including abusive
Ad-libraries, but also we see

83
00:06:04,528 --> 00:06:08,618
notorious malware families like
the Necro and the Triada trojans.

84
00:06:09,388 --> 00:06:09,688
Now.

85
00:06:10,003 --> 00:06:14,923
let's move on and actually answer the
main question of our study, that of  how

86
00:06:15,153 --> 00:06:17,193
are  unwanted apps distributed on Android.

87
00:06:18,273 --> 00:06:22,573
For answering this, we actually use the
who-installs-who relationships, as we

88
00:06:22,573 --> 00:06:29,412
said, and we do a manual categorization
of the installer apps into 12 categories,

89
00:06:29,503 --> 00:06:31,693
each corresponding to a different vector.

90
00:06:32,743 --> 00:06:36,233
Then, we assess how risky
each virtual can be.

91
00:06:36,993 --> 00:06:42,283
Our manual categorization covers only 15%
of the installers, but these corresponds

92
00:06:42,283 --> 00:06:44,893
to over 96% of the installation events.

93
00:06:46,463 --> 00:06:50,413
In this plot, we actually see the
percentage of installations coming from

94
00:06:50,413 --> 00:06:54,943
each distribution vector, including both
benign and unwanted app installations.

95
00:06:55,513 --> 00:06:58,272
Among those 12 vectors, we
also see the Package Installer.

96
00:06:58,793 --> 00:07:03,553
This vector represents installations
for which the Android API reports as a

97
00:07:03,553 --> 00:07:07,573
parent the package installer, therefore,
for those installations, we do not

98
00:07:07,573 --> 00:07:09,643
know that exact parent application.

99
00:07:10,513 --> 00:07:14,652
Now let's see the most important
thing, how each vector contributes

100
00:07:15,163 --> 00:07:17,153
on the unwanted app distribution.

101
00:07:17,993 --> 00:07:19,463
Here is the plot that shows this.

102
00:07:19,873 --> 00:07:24,613
What we immediately see here is
that the PlayStore is the main

103
00:07:24,613 --> 00:07:28,393
distribution vector for both benign
and unwanted app installations.

104
00:07:29,023 --> 00:07:35,193
However, only 0.6% of the APKs installed
via PlayStore are actually unwanted.

105
00:07:35,893 --> 00:07:40,063
This means that Google's defenses
work, but still a small fraction of

106
00:07:40,223 --> 00:07:44,980
apps that evade those defenses, due
to the market's popularity, results

107
00:07:44,980 --> 00:07:46,510
in a large number of installations.

108
00:07:47,200 --> 00:07:51,169
And this highlights the need for further
research on protecting the Play market.

109
00:07:52,270 --> 00:07:56,695
The second largest vector here is the
Package installer for which we said,

110
00:07:56,696 --> 00:08:01,536
we cannot identify the exact unwanted
app but the third one that comes very

111
00:08:01,536 --> 00:08:07,276
close are alternative markets that are
responsible for 10% of the unwanted

112
00:08:07,276 --> 00:08:09,166
app installations in our dataset.

113
00:08:10,046 --> 00:08:14,796
The interesting thing here is that we
observe that on average installations

114
00:08:14,796 --> 00:08:19,836
coming from alternative markets are five
times riskier than that from PlayStore.

115
00:08:20,196 --> 00:08:23,946
However, this risk really varies
depending on the alternative

116
00:08:23,946 --> 00:08:25,206
market that we are talking about.

117
00:08:25,926 --> 00:08:29,376
For example, as we can see at the plot
at the bottom, we see that there are

118
00:08:29,376 --> 00:08:34,716
markets like Amazon and Vivo that can be
almost as safe as Play market, but also

119
00:08:34,716 --> 00:08:39,336
we see markets like Huawei and Bazaar
that can be up to 19 times riskier.

120
00:08:40,701 --> 00:08:46,061
Now another surprising distribution
vector of unwanted apps are bloatware

121
00:08:46,081 --> 00:08:50,381
applications that are responsible
for 6% of all the unwanted app

122
00:08:50,401 --> 00:08:51,790
installations in the dataset.

123
00:08:52,351 --> 00:08:58,081
As we said, this is worrisome due to
the fact that these applications often

124
00:08:58,081 --> 00:09:03,001
have system privileges and the removal
by security tools may not be possible

125
00:09:03,331 --> 00:09:09,466
because these apps may be installed
on the read-only partition of the OS.

126
00:09:09,946 --> 00:09:14,266
Now, the fact that we actually see
installations coming from bloatware

127
00:09:14,276 --> 00:09:21,195
applications shows us evidence that
there is ad-based monetization coming

128
00:09:21,196 --> 00:09:23,266
from device vendors and carriers

129
00:09:24,616 --> 00:09:30,665
.
Now moving on, we actually see another
very surprisingly distribution vector

130
00:09:30,856 --> 00:09:35,866
that of backup restoration that is
responsible for almost 5% of all unwanted

131
00:09:35,866 --> 00:09:37,386
app installations in the dataset.

132
00:09:38,461 --> 00:09:43,051
As we said, these are installations that
typically happen when user clone apps from

133
00:09:43,051 --> 00:09:49,081
an old phone to a newer one, but also this
shows us that unwanted apps may survive

134
00:09:49,081 --> 00:09:51,301
phone changes, which is quite surprising.

135
00:09:51,811 --> 00:09:55,801
It also highlights the opportunity
for backup apps to improve the

136
00:09:55,801 --> 00:09:59,851
defenses against unwanted apps , if
any, during the cloning process.

137
00:10:01,396 --> 00:10:07,096
Now, in this work, we also try to make a
very conservative lower bound estimation

138
00:10:07,156 --> 00:10:11,045
of the distribution of unwanted tubs
via commercial Pay-Per-Install services.

139
00:10:11,486 --> 00:10:15,376
This is a very conservative
estimation because we can identify

140
00:10:15,376 --> 00:10:20,305
only two commercial PPI's that of
IronSource and Digital Turbine.

141
00:10:20,806 --> 00:10:25,486
However, we actually see something very
interesting that these installations

142
00:10:25,726 --> 00:10:28,406
have half the risk compared to PlayStore.

143
00:10:28,936 --> 00:10:35,341
And basically if we compare this with
prior work that analyzed commercial PPI

144
00:10:35,341 --> 00:10:40,081
services on Windows that showed that these
services on Windows are responsible for

145
00:10:40,081 --> 00:10:46,561
25% of the distribution of PUP downloads
shows us that basically on Android, this

146
00:10:46,561 --> 00:10:53,701
distribution is far less and show us also
that these services have actually improved

147
00:10:54,091 --> 00:10:56,091
the filtering of abusive advertisers.

148
00:10:58,771 --> 00:11:05,016
Now, I would also like to show here the
relative risk of the main distribution

149
00:11:05,016 --> 00:11:09,065
of vectors in comparison to Play store
that is the main distribution vector,

150
00:11:09,066 --> 00:11:10,726
and also one of the safest ones.

151
00:11:11,846 --> 00:11:17,886
As we see the relative risk, really
varies, interestingly installing

152
00:11:17,886 --> 00:11:21,815
apps you receive via instant
messaging is on average five times

153
00:11:21,816 --> 00:11:23,736
riskier than that from Play store.

154
00:11:24,136 --> 00:11:29,116
But also, by far the riskiest proposition
for users are Web downloads that

155
00:11:29,116 --> 00:11:31,406
can be on average six time riskier.

156
00:11:34,086 --> 00:11:37,266
Now I would like to close this
talk with the main takeaways.

157
00:11:38,166 --> 00:11:41,936
In this work, we first measure
the prevalence of unwanted apps on

158
00:11:41,936 --> 00:11:46,066
Android devices and compared it with
that of Windows enterprise hosts.

159
00:11:46,591 --> 00:11:50,301
This comparison shows that unwanted
app prevalence is slightly higher on

160
00:11:50,321 --> 00:11:54,301
Android, despite the main security
improvements in the Android ecosystem.

161
00:11:55,141 --> 00:11:59,271
We also analyzed the main distribution
vectors of unwanted apps and show

162
00:11:59,271 --> 00:12:03,621
that PlayStore is the largest vector
for both benign and unwanted apps.

163
00:12:03,871 --> 00:12:07,741
However, it still remains one
of the safest, but our work also

164
00:12:07,741 --> 00:12:10,611
highlights the need for further
research on protecting PlayStore.

165
00:12:11,701 --> 00:12:16,301
Finally, we presented a plethora
of less understood vectors.

166
00:12:16,325 --> 00:12:21,215
From those, we actually see the alarmingly
high percentage of installations coming

167
00:12:21,215 --> 00:12:25,415
from bloatware apps, as well as the high
portion of unwanted app installations

168
00:12:25,835 --> 00:12:28,375
coming via backup applications.

169
00:12:29,795 --> 00:12:30,755
Thank you very much.

