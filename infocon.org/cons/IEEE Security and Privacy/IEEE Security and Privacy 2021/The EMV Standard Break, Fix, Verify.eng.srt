1
00:00:04,000 --> 00:00:04,720
hi

2
00:00:04,720 --> 00:00:07,279
welcome to my talk the emv standard

3
00:00:07,279 --> 00:00:07,919
break

4
00:00:07,919 --> 00:00:11,440
fix verify my name is jorge toro and

5
00:00:11,440 --> 00:00:13,759
this is joint work with david basin and

6
00:00:13,759 --> 00:00:15,280
rav sassen

7
00:00:15,280 --> 00:00:17,359
we are security researchers at eth

8
00:00:17,359 --> 00:00:19,840
zurich

9
00:00:20,480 --> 00:00:24,000
so what's emv emv also known as

10
00:00:24,000 --> 00:00:26,720
chip and pin is the international

11
00:00:26,720 --> 00:00:30,960
protocol standard for smart car payments

12
00:00:30,960 --> 00:00:33,760
the standard was funded by european

13
00:00:33,760 --> 00:00:34,480
mastercard

14
00:00:34,480 --> 00:00:36,719
visa and later some other car networks

15
00:00:36,719 --> 00:00:38,160
joined too

16
00:00:38,160 --> 00:00:39,920
there are currently more than 9 billion

17
00:00:39,920 --> 00:00:42,559
emp cards in circulation worldwide

18
00:00:42,559 --> 00:00:44,480
and the standard has been offered has

19
00:00:44,480 --> 00:00:47,280
been advertised as to offer

20
00:00:47,280 --> 00:00:50,719
security to car holders so what's this

21
00:00:50,719 --> 00:00:52,239
security to car holders what is

22
00:00:52,239 --> 00:00:53,680
protection to car holders that the

23
00:00:53,680 --> 00:00:56,640
standard is supposed to offer

24
00:00:56,640 --> 00:00:59,199
the standard is supposed to provide

25
00:00:59,199 --> 00:00:59,840
assurance

26
00:00:59,840 --> 00:01:01,199
and the assurance that high value

27
00:01:01,199 --> 00:01:03,600
purchases are protected by a pin

28
00:01:03,600 --> 00:01:05,280
the pin is the secret number that is

29
00:01:05,280 --> 00:01:07,600
only known to the legitimate card order

30
00:01:07,600 --> 00:01:10,320
and therefore should offer protection to

31
00:01:10,320 --> 00:01:12,479
to high value purchases right

32
00:01:12,479 --> 00:01:14,240
well in this work we'll show that this

33
00:01:14,240 --> 00:01:15,759
is not the case namely that

34
00:01:15,759 --> 00:01:17,840
indeed criminals can bypass this pin

35
00:01:17,840 --> 00:01:19,280
verification

36
00:01:19,280 --> 00:01:21,040
therefore violating the fundamental

37
00:01:21,040 --> 00:01:24,400
security goal of the standard

38
00:01:24,799 --> 00:01:26,880
we can summarize the contributions of

39
00:01:26,880 --> 00:01:28,400
this work

40
00:01:28,400 --> 00:01:30,720
as following we have developed the first

41
00:01:30,720 --> 00:01:33,680
comprehensive model of emv

42
00:01:33,680 --> 00:01:36,000
we did so by using the model checking

43
00:01:36,000 --> 00:01:37,840
tool tamarin

44
00:01:37,840 --> 00:01:40,560
using our model we found a we

45
00:01:40,560 --> 00:01:42,560
rediscovered existing vulnerabilities

46
00:01:42,560 --> 00:01:43,600
but we also found

47
00:01:43,600 --> 00:01:46,159
new issues in particular we found a

48
00:01:46,159 --> 00:01:48,479
critical security issue that leads to a

49
00:01:48,479 --> 00:01:50,960
pin bypass

50
00:01:50,960 --> 00:01:54,560
we proposed a machine checked fixes to

51
00:01:54,560 --> 00:01:55,920
the issues found

52
00:01:55,920 --> 00:01:57,439
and we have disclosed them to the

53
00:01:57,439 --> 00:01:58,960
vendors

54
00:01:58,960 --> 00:02:00,960
in particular the fix that we propose to

55
00:02:00,960 --> 00:02:02,880
the pin by bus does not affect the cars

56
00:02:02,880 --> 00:02:05,600
in circulation

57
00:02:05,600 --> 00:02:09,840
let me give you now a bit of background

58
00:02:10,318 --> 00:02:12,560
the emv transaction is typically split

59
00:02:12,560 --> 00:02:13,680
into four phases

60
00:02:13,680 --> 00:02:15,760
in the initial phase the car and the

61
00:02:15,760 --> 00:02:16,720
terminal agree

62
00:02:16,720 --> 00:02:18,800
on the application to be used for the

63
00:02:18,800 --> 00:02:20,000
transaction

64
00:02:20,000 --> 00:02:22,959
and also they exchange some card and

65
00:02:22,959 --> 00:02:25,040
transaction data

66
00:02:25,040 --> 00:02:26,480
then there is offline data

67
00:02:26,480 --> 00:02:28,640
authentication in which the terminals

68
00:02:28,640 --> 00:02:29,440
performs

69
00:02:29,440 --> 00:02:31,599
the terminal performs a pki validation

70
00:02:31,599 --> 00:02:32,640
of the card

71
00:02:32,640 --> 00:02:35,760
and this can be done using one of three

72
00:02:35,760 --> 00:02:36,640
methods

73
00:02:36,640 --> 00:02:39,040
the methods are static data

74
00:02:39,040 --> 00:02:40,080
authentication

75
00:02:40,080 --> 00:02:43,200
or sda dynamic data authentication

76
00:02:43,200 --> 00:02:46,480
dda or combine dynamic data

77
00:02:46,480 --> 00:02:47,360
authentication

78
00:02:47,360 --> 00:02:51,840
cda we'll talk more about them later

79
00:02:52,000 --> 00:02:53,920
the third phase is what is called car

80
00:02:53,920 --> 00:02:55,200
holder verification

81
00:02:55,200 --> 00:02:57,200
and in this phase is where the terminal

82
00:02:57,200 --> 00:02:58,800
checks that the person presenting the

83
00:02:58,800 --> 00:02:59,200
car

84
00:02:59,200 --> 00:03:02,319
is indeed the legitimate car holder

85
00:03:02,319 --> 00:03:05,599
there exists various methods for this

86
00:03:05,599 --> 00:03:07,440
and some of them include the entry of a

87
00:03:07,440 --> 00:03:09,599
pin and this pin can either be

88
00:03:09,599 --> 00:03:12,159
verified by the card and this is what is

89
00:03:12,159 --> 00:03:14,319
called offline pin verification

90
00:03:14,319 --> 00:03:17,360
or it can be verified by the card issuer

91
00:03:17,360 --> 00:03:18,000
and this is what

92
00:03:18,000 --> 00:03:21,040
is called online team verification there

93
00:03:21,040 --> 00:03:21,599
is also

94
00:03:21,599 --> 00:03:23,440
another method which is particularly

95
00:03:23,440 --> 00:03:24,720
relevant for this work

96
00:03:24,720 --> 00:03:26,959
and it's the one called consumer device

97
00:03:26,959 --> 00:03:29,120
cardholder verification method

98
00:03:29,120 --> 00:03:31,920
which is intended for smart devices like

99
00:03:31,920 --> 00:03:35,599
smartphones or smartwatches

100
00:03:35,599 --> 00:03:38,400
in the fourth phase in the final phase

101
00:03:38,400 --> 00:03:39,280
is where the

102
00:03:39,280 --> 00:03:41,599
where the transaction is either declined

103
00:03:41,599 --> 00:03:42,640
or authorized

104
00:03:42,640 --> 00:03:46,000
or accepted right if the transaction is

105
00:03:46,000 --> 00:03:49,120
upsetted this can be done either offline

106
00:03:49,120 --> 00:03:50,959
by the terminal which means that the

107
00:03:50,959 --> 00:03:52,480
terminal decides to accept the

108
00:03:52,480 --> 00:03:55,040
transaction and this is particularly

109
00:03:55,040 --> 00:03:57,040
this is typically the case where the

110
00:03:57,040 --> 00:03:58,640
transaction is of low value

111
00:03:58,640 --> 00:04:00,159
right the amount of the transaction is

112
00:04:00,159 --> 00:04:02,799
low or the transaction the transaction

113
00:04:02,799 --> 00:04:04,879
can also be authorized online in which

114
00:04:04,879 --> 00:04:05,920
case

115
00:04:05,920 --> 00:04:07,519
it means that the terminal needed to

116
00:04:07,519 --> 00:04:09,680
contact card issuer through authorized

117
00:04:09,680 --> 00:04:12,480
transaction right

118
00:04:12,799 --> 00:04:14,560
thomanine is a model checking tool that

119
00:04:14,560 --> 00:04:16,959
has been used widely thus has been used

120
00:04:16,959 --> 00:04:20,160
uh by a number of researchers

121
00:04:20,160 --> 00:04:23,280
and relevant works that use tamarind

122
00:04:23,280 --> 00:04:25,600
are those including analysis of

123
00:04:25,600 --> 00:04:27,280
real-world protocols like 5g

124
00:04:27,280 --> 00:04:28,639
authentication

125
00:04:28,639 --> 00:04:33,199
and also tls 1.3

126
00:04:33,199 --> 00:04:35,440
in tammany one defines the system one

127
00:04:35,440 --> 00:04:37,199
specifies a system which is

128
00:04:37,199 --> 00:04:40,479
the protocol by using multiset rewriting

129
00:04:40,479 --> 00:04:41,199
rules

130
00:04:41,199 --> 00:04:44,240
these rules define a

131
00:04:44,240 --> 00:04:46,320
label transition system that represents

132
00:04:46,320 --> 00:04:48,960
the protocol executions

133
00:04:48,960 --> 00:04:51,680
then a property is specified a property

134
00:04:51,680 --> 00:04:52,560
of interest

135
00:04:52,560 --> 00:04:56,000
that one needs to check if the system

136
00:04:56,000 --> 00:04:58,160
holds it right if the protocol satisfies

137
00:04:58,160 --> 00:04:59,520
its property and this property is

138
00:04:59,520 --> 00:05:01,680
specified using

139
00:05:01,680 --> 00:05:03,759
first order logic formulas and the tool

140
00:05:03,759 --> 00:05:05,440
we're trying to fi we try to find a

141
00:05:05,440 --> 00:05:07,360
contact sample for the property

142
00:05:07,360 --> 00:05:09,759
according to the system specification if

143
00:05:09,759 --> 00:05:10,880
it does find a

144
00:05:10,880 --> 00:05:12,560
counterexample this means that there is

145
00:05:12,560 --> 00:05:13,919
an attack

146
00:05:13,919 --> 00:05:16,160
the proof can also produce a proof

147
00:05:16,160 --> 00:05:18,240
saying that there is it is not possible

148
00:05:18,240 --> 00:05:19,039
to

149
00:05:19,039 --> 00:05:21,520
find a contract sample for this property

150
00:05:21,520 --> 00:05:23,520
right for this security property

151
00:05:23,520 --> 00:05:26,960
or the tool can run out of memory

152
00:05:26,960 --> 00:05:28,960
or time in which case the user has to

153
00:05:28,960 --> 00:05:30,560
provide some hints for the tool to

154
00:05:30,560 --> 00:05:33,039
terminate

155
00:05:33,120 --> 00:05:35,360
for this work we consider three main

156
00:05:35,360 --> 00:05:36,320
properties

157
00:05:36,320 --> 00:05:37,840
the first one we consider is what we

158
00:05:37,840 --> 00:05:39,520
call bank accepts

159
00:05:39,520 --> 00:05:42,720
which says that every transaction that

160
00:05:42,720 --> 00:05:43,039
the

161
00:05:43,039 --> 00:05:45,600
terminal accepts will not be declined by

162
00:05:45,600 --> 00:05:47,120
the bank

163
00:05:47,120 --> 00:05:49,120
the second property we consider is what

164
00:05:49,120 --> 00:05:51,360
we call authentication to the terminal

165
00:05:51,360 --> 00:05:53,840
which says that whenever a terminal

166
00:05:53,840 --> 00:05:55,039
accepts a transaction

167
00:05:55,039 --> 00:05:56,880
it is the case that this transaction was

168
00:05:56,880 --> 00:05:58,400
authenticated by the

169
00:05:58,400 --> 00:06:01,520
by the card and also by the bank the

170
00:06:01,520 --> 00:06:03,199
third property that we consider is what

171
00:06:03,199 --> 00:06:05,759
we call authentication to the bank

172
00:06:05,759 --> 00:06:08,160
and it says whenever a bank accepts a

173
00:06:08,160 --> 00:06:08,800
property

174
00:06:08,800 --> 00:06:12,000
it is a a transaction sorry it is the

175
00:06:12,000 --> 00:06:12,639
case that

176
00:06:12,639 --> 00:06:15,520
the terminal authenticated and also the

177
00:06:15,520 --> 00:06:16,880
credit

178
00:06:16,880 --> 00:06:19,039
we specify the authentication properties

179
00:06:19,039 --> 00:06:20,880
using the

180
00:06:20,880 --> 00:06:25,360
classical injective agreement property

181
00:06:25,440 --> 00:06:26,960
so let's take a look at the results that

182
00:06:26,960 --> 00:06:31,759
we got for emv contact transactions

183
00:06:31,759 --> 00:06:34,160
here we have a table showing the results

184
00:06:34,160 --> 00:06:35,600
and the rows here

185
00:06:35,600 --> 00:06:37,680
are what we call target models which are

186
00:06:37,680 --> 00:06:38,960
basically

187
00:06:38,960 --> 00:06:41,199
a combination so one target model is the

188
00:06:41,199 --> 00:06:42,400
result of a

189
00:06:42,400 --> 00:06:45,440
one specific authentication method plus

190
00:06:45,440 --> 00:06:47,199
one specific cardholder verification

191
00:06:47,199 --> 00:06:48,479
method plus

192
00:06:48,479 --> 00:06:51,759
one type of authorization of

193
00:06:51,759 --> 00:06:53,599
acceptance of the transaction right

194
00:06:53,599 --> 00:06:55,520
either offline or online

195
00:06:55,520 --> 00:06:58,400
and the combinations of all these gives

196
00:06:58,400 --> 00:06:58,800
us

197
00:06:58,800 --> 00:07:02,000
a like a partition of the env execution

198
00:07:02,000 --> 00:07:05,039
space right so the first thing we notice

199
00:07:05,039 --> 00:07:05,840
is that

200
00:07:05,840 --> 00:07:08,240
only transactions using combined data

201
00:07:08,240 --> 00:07:09,520
authentication which is

202
00:07:09,520 --> 00:07:11,680
the latest authentication method are

203
00:07:11,680 --> 00:07:13,440
secure i mean transactions using this

204
00:07:13,440 --> 00:07:15,120
authentication method and

205
00:07:15,120 --> 00:07:17,120
online pin or no pin as cardholder

206
00:07:17,120 --> 00:07:18,319
verification

207
00:07:18,319 --> 00:07:22,639
are secure transactions using any form

208
00:07:22,639 --> 00:07:24,479
of offline pain verification are

209
00:07:24,479 --> 00:07:26,800
vulnerable to a pain bypass attack and

210
00:07:26,800 --> 00:07:28,800
this was already reported more than 10

211
00:07:28,800 --> 00:07:30,000
years ago

212
00:07:30,000 --> 00:07:33,199
by murdoc at al and also at auckland

213
00:07:33,199 --> 00:07:36,319
in 2010

214
00:07:36,319 --> 00:07:39,039
transactions that do not use the

215
00:07:39,039 --> 00:07:41,440
combined data authentication method

216
00:07:41,440 --> 00:07:44,240
are vulnerable to a violation of our

217
00:07:44,240 --> 00:07:46,000
property called bank accepts

218
00:07:46,000 --> 00:07:47,520
the first property that we mentioned

219
00:07:47,520 --> 00:07:50,800
earlier and this is a

220
00:07:50,800 --> 00:07:52,400
and the way that this can be exploited

221
00:07:52,400 --> 00:07:55,120
is by employing a

222
00:07:55,120 --> 00:07:57,360
a the attack will simply make the

223
00:07:57,360 --> 00:07:59,440
terminal accept transactions that will

224
00:07:59,440 --> 00:08:02,479
later be declined by bank

225
00:08:02,479 --> 00:08:04,080
and we also found some other issues

226
00:08:04,080 --> 00:08:06,319
related to secrecy

227
00:08:06,319 --> 00:08:08,800
in general one can say that exploiting

228
00:08:08,800 --> 00:08:10,479
these issues weaponizing these

229
00:08:10,479 --> 00:08:12,479
issues in practice is kind of

230
00:08:12,479 --> 00:08:13,759
challenging because one has to

231
00:08:13,759 --> 00:08:15,199
compromise the

232
00:08:15,199 --> 00:08:17,039
the car terminal channel which is by

233
00:08:17,039 --> 00:08:20,560
definitional contact-based channel

234
00:08:20,560 --> 00:08:22,479
so let's take a look at the results for

235
00:08:22,479 --> 00:08:24,840
the contact class version of the

236
00:08:24,840 --> 00:08:27,840
protocol

237
00:08:29,039 --> 00:08:31,039
good news is that common mastercard

238
00:08:31,039 --> 00:08:32,958
transactions are secure

239
00:08:32,958 --> 00:08:37,760
but common visa transactions are not

240
00:08:37,760 --> 00:08:39,599
so let's take a look at the let's take a

241
00:08:39,599 --> 00:08:41,599
closer look at the visa protocol and see

242
00:08:41,599 --> 00:08:44,560
what the problem is

243
00:08:45,920 --> 00:08:48,240
in the visa protocol the car's choice

244
00:08:48,240 --> 00:08:50,480
for car holder verification method is

245
00:08:50,480 --> 00:08:52,399
encoded in what is called

246
00:08:52,399 --> 00:08:55,680
transaction card transactions qualifiers

247
00:08:55,680 --> 00:08:57,600
and this is a data object sent from the

248
00:08:57,600 --> 00:08:59,279
card to the terminal in response to one

249
00:08:59,279 --> 00:09:02,560
of the terminals commands

250
00:09:02,720 --> 00:09:05,440
it turns out as specified by the visa

251
00:09:05,440 --> 00:09:07,519
protocol that this ctq value

252
00:09:07,519 --> 00:09:10,480
this card transaction qualifiers data

253
00:09:10,480 --> 00:09:10,959
object

254
00:09:10,959 --> 00:09:14,080
is only protected by a signature

255
00:09:14,080 --> 00:09:16,240
by the card and the signature is called

256
00:09:16,240 --> 00:09:20,320
the signed dynamic authentication data

257
00:09:20,839 --> 00:09:22,320
sdid

258
00:09:22,320 --> 00:09:24,000
but it turns out that most visa

259
00:09:24,000 --> 00:09:25,760
transactions don't actually use this

260
00:09:25,760 --> 00:09:27,360
signature they don't employ

261
00:09:27,360 --> 00:09:29,200
they don't uh need to have this

262
00:09:29,200 --> 00:09:32,160
signature involved in the protocol right

263
00:09:32,160 --> 00:09:34,080
and this means that one can tamper with

264
00:09:34,080 --> 00:09:35,200
the cpq

265
00:09:35,200 --> 00:09:37,519
and therefore one can tamper with the

266
00:09:37,519 --> 00:09:39,519
cvm so what does that mean it means that

267
00:09:39,519 --> 00:09:41,519
one can change the card the verification

268
00:09:41,519 --> 00:09:42,959
method chosen by the car

269
00:09:42,959 --> 00:09:46,399
and conveniently change this

270
00:09:46,399 --> 00:09:49,440
into into something that might help

271
00:09:49,440 --> 00:09:53,040
the attacker right so and this is

272
00:09:53,040 --> 00:09:54,959
exactly what we did right to weaponize

273
00:09:54,959 --> 00:09:56,080
this issue to to

274
00:09:56,080 --> 00:09:58,080
demonstrate that this is the issue leads

275
00:09:58,080 --> 00:09:59,600
to a practical attack

276
00:09:59,600 --> 00:10:02,959
and we implemented a

277
00:10:02,959 --> 00:10:04,800
man in the middle attack we implemented

278
00:10:04,800 --> 00:10:06,399
an android app that

279
00:10:06,399 --> 00:10:08,480
builds a man-in-the-middle attack on top

280
00:10:08,480 --> 00:10:11,200
of a relay attack architecture

281
00:10:11,200 --> 00:10:12,959
so let's assume where how does this

282
00:10:12,959 --> 00:10:14,720
attack work so let's assume we're in a

283
00:10:14,720 --> 00:10:16,800
in a high value transaction rights where

284
00:10:16,800 --> 00:10:18,560
the pin is needed

285
00:10:18,560 --> 00:10:22,000
and in this case the terminal will and

286
00:10:22,000 --> 00:10:23,440
we have reached a

287
00:10:23,440 --> 00:10:25,200
the state of the protocol where the

288
00:10:25,200 --> 00:10:26,959
terminal is going to verify the

289
00:10:26,959 --> 00:10:28,399
cardholder right

290
00:10:28,399 --> 00:10:29,839
and then because we're in a high value

291
00:10:29,839 --> 00:10:31,600
transaction the domain i will will send

292
00:10:31,600 --> 00:10:32,320
a comment

293
00:10:32,320 --> 00:10:35,600
indicating yeah i need to verify i i

294
00:10:35,600 --> 00:10:37,200
require to verify the card holder

295
00:10:37,200 --> 00:10:38,160
because we're in a high value

296
00:10:38,160 --> 00:10:39,519
transaction right

297
00:10:39,519 --> 00:10:41,440
and in a normal execution the car will

298
00:10:41,440 --> 00:10:43,600
send back a ctq value

299
00:10:43,600 --> 00:10:46,079
with indicating that online pin is

300
00:10:46,079 --> 00:10:47,920
required right the car will say okay

301
00:10:47,920 --> 00:10:51,040
let's do online verification

302
00:10:51,040 --> 00:10:54,079
but this is where here's where the tag

303
00:10:54,079 --> 00:10:56,000
comes in right so the attacker just

304
00:10:56,000 --> 00:10:59,920
change changes the cpq value to instruct

305
00:10:59,920 --> 00:11:01,920
the terminal that online pin is not

306
00:11:01,920 --> 00:11:04,560
required because the consumer device

307
00:11:04,560 --> 00:11:06,959
the car holder has been verified on the

308
00:11:06,959 --> 00:11:08,800
consumer device so what does this mean

309
00:11:08,800 --> 00:11:09,600
this means that

310
00:11:09,600 --> 00:11:13,600
basically the terminal believes that the

311
00:11:13,600 --> 00:11:15,440
execution has been made with a phone

312
00:11:15,440 --> 00:11:16,959
with a smartphone not on

313
00:11:16,959 --> 00:11:19,040
and not with a physical card right so

314
00:11:19,040 --> 00:11:21,920
therefore not no pin is needed

315
00:11:21,920 --> 00:11:25,760
okay so let's watch a demo now

316
00:11:25,839 --> 00:11:28,240
so we implemented an android app using

317
00:11:28,240 --> 00:11:29,360
two phones

318
00:11:29,360 --> 00:11:31,040
here you see the three phones because

319
00:11:31,040 --> 00:11:32,560
the the

320
00:11:32,560 --> 00:11:34,800
the the phone on the left hand side is

321
00:11:34,800 --> 00:11:38,800
the interface for the terminal

322
00:11:38,800 --> 00:11:40,640
but in reality these two devices will be

323
00:11:40,640 --> 00:11:42,320
simply just a terminal

324
00:11:42,320 --> 00:11:46,240
right a payment terminal

325
00:11:48,079 --> 00:11:51,040
all right so this is a transaction of

326
00:11:51,040 --> 00:11:52,480
200 swiss francs

327
00:11:52,480 --> 00:11:54,880
and it went through without entering the

328
00:11:54,880 --> 00:11:57,279
pin right

329
00:11:57,279 --> 00:12:00,639
okay so so we got

330
00:12:00,639 --> 00:12:03,839
a lot of media attention right

331
00:12:03,839 --> 00:12:08,639
and this was a very interesting process

332
00:12:08,639 --> 00:12:10,320
okay so let's try to fix this right so

333
00:12:10,320 --> 00:12:12,399
whenever we find a problem it is good to

334
00:12:12,399 --> 00:12:12,959
to

335
00:12:12,959 --> 00:12:16,000
try and fix it right um so

336
00:12:16,000 --> 00:12:17,519
let's first record the problem the

337
00:12:17,519 --> 00:12:19,279
problem is that there is a signature

338
00:12:19,279 --> 00:12:20,160
that is not been

339
00:12:20,160 --> 00:12:23,680
used in the visa protocol so therefore

340
00:12:23,680 --> 00:12:24,240
uh

341
00:12:24,240 --> 00:12:26,240
the cardholderification method is not

342
00:12:26,240 --> 00:12:28,399
protected and can be modified can be

343
00:12:28,399 --> 00:12:29,120
temporary

344
00:12:29,120 --> 00:12:32,720
right um so if the easy fix

345
00:12:32,720 --> 00:12:35,360
is simply to use that signature right so

346
00:12:35,360 --> 00:12:35,920
it's

347
00:12:35,920 --> 00:12:38,880
it's there for something so let's use it

348
00:12:38,880 --> 00:12:39,839
and the way that

349
00:12:39,839 --> 00:12:42,079
one can have the car signing and

350
00:12:42,079 --> 00:12:43,360
providing the signature

351
00:12:43,360 --> 00:12:46,160
is by simply setting one bit in one of

352
00:12:46,160 --> 00:12:48,560
the terminals commands

353
00:12:48,560 --> 00:12:51,040
and good news about this is that it can

354
00:12:51,040 --> 00:12:52,880
be deployed on terminals

355
00:12:52,880 --> 00:12:56,320
without having to change anything on the

356
00:12:56,320 --> 00:12:58,240
cards on the cards that are already in

357
00:12:58,240 --> 00:13:00,240
circulation right

358
00:13:00,240 --> 00:13:03,760
so this is uh in theory chip for for

359
00:13:03,760 --> 00:13:07,519
for banks and and then the banking

360
00:13:07,519 --> 00:13:09,200
infrastructure in general to deploy

361
00:13:09,200 --> 00:13:11,040
right

362
00:13:11,040 --> 00:13:12,959
this was not all we found some other

363
00:13:12,959 --> 00:13:14,880
issues

364
00:13:14,880 --> 00:13:17,519
for example we noticed that offline low

365
00:13:17,519 --> 00:13:19,519
value transactions

366
00:13:19,519 --> 00:13:21,839
are not secure most offline low value

367
00:13:21,839 --> 00:13:23,279
transactions are not secure

368
00:13:23,279 --> 00:13:25,440
and the way that one can weaponize this

369
00:13:25,440 --> 00:13:28,240
is by having an attacker

370
00:13:28,240 --> 00:13:30,639
fooling a terminal into accepting a

371
00:13:30,639 --> 00:13:32,639
transaction that will later be declined

372
00:13:32,639 --> 00:13:34,399
by the bank

373
00:13:34,399 --> 00:13:36,399
why is this possible because there is

374
00:13:36,399 --> 00:13:38,240
some

375
00:13:38,240 --> 00:13:40,079
lack of authentication in the offline

376
00:13:40,079 --> 00:13:42,800
version of the protocol right and

377
00:13:42,800 --> 00:13:44,480
we didn't test this in the wild we

378
00:13:44,480 --> 00:13:47,120
didn't try this attacking in practice in

379
00:13:47,120 --> 00:13:48,240
the real world

380
00:13:48,240 --> 00:13:50,720
because this will actually mean a fraud

381
00:13:50,720 --> 00:13:52,399
right we will be defrauding the the

382
00:13:52,399 --> 00:13:53,519
merchant if

383
00:13:53,519 --> 00:13:56,720
if we succeed in the attack

384
00:13:56,720 --> 00:13:59,839
um and yes there are fixes for this and

385
00:13:59,839 --> 00:14:00,240
we

386
00:14:00,240 --> 00:14:02,959
have described them all on on the paper

387
00:14:02,959 --> 00:14:04,079
and

388
00:14:04,079 --> 00:14:05,920
you can go and check them out but in

389
00:14:05,920 --> 00:14:07,199
general these fixes

390
00:14:07,199 --> 00:14:10,320
and are not as simple as the one that i

391
00:14:10,320 --> 00:14:11,440
mentioned before

392
00:14:11,440 --> 00:14:16,639
and they do require issuance of cards

393
00:14:16,639 --> 00:14:19,120
uh conclusions of this work is that

394
00:14:19,120 --> 00:14:20,399
formal verification

395
00:14:20,399 --> 00:14:23,040
must accompany protocol development and

396
00:14:23,040 --> 00:14:25,199
standardization efforts

397
00:14:25,199 --> 00:14:26,399
because if you are building an

398
00:14:26,399 --> 00:14:28,160
infrastructure critical infrastructure

399
00:14:28,160 --> 00:14:31,120
you have to get it right right

400
00:14:31,120 --> 00:14:33,600
we as humans cannot possibly deal with

401
00:14:33,600 --> 00:14:36,560
the huge amount of execution steps

402
00:14:36,560 --> 00:14:39,839
branches that a complex system has and

403
00:14:39,839 --> 00:14:41,839
in general there is evidence that

404
00:14:41,839 --> 00:14:43,839
existing verification tools are up to

405
00:14:43,839 --> 00:14:45,760
the task

406
00:14:45,760 --> 00:14:48,320
so please visit our website to get more

407
00:14:48,320 --> 00:14:49,839
details on this work

408
00:14:49,839 --> 00:14:51,519
and thank you very much for your

409
00:14:51,519 --> 00:14:54,000
attention i hope you have

410
00:14:54,000 --> 00:14:58,000
enjoyed the talk

