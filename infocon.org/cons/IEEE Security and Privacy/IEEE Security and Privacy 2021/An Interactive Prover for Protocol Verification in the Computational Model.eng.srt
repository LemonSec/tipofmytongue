1
00:00:04,000 --> 00:00:04,400
hi

2
00:00:04,400 --> 00:00:06,240
i'm charlie and i'm here to talk about

3
00:00:06,240 --> 00:00:08,160
squirrels but first

4
00:00:08,160 --> 00:00:11,360
a bit of crypto history oh did

5
00:00:11,360 --> 00:00:14,960
cryptowork back in the days

6
00:00:14,960 --> 00:00:16,880
some smart looking people said they had

7
00:00:16,880 --> 00:00:18,320
a new cool crypto system

8
00:00:18,320 --> 00:00:19,840
other smart looking people would look at

9
00:00:19,840 --> 00:00:21,600
it and then say yeah it's definitely

10
00:00:21,600 --> 00:00:22,320
secure

11
00:00:22,320 --> 00:00:25,439
and then other people would break it

12
00:00:25,439 --> 00:00:28,480
then the year 1982 came

13
00:00:28,480 --> 00:00:30,480
and with it the seminal paper by

14
00:00:30,480 --> 00:00:32,000
goldwater and michael

15
00:00:32,000 --> 00:00:34,239
it gave the first probably secure

16
00:00:34,239 --> 00:00:35,840
cryptosystem

17
00:00:35,840 --> 00:00:38,079
since then it was decided that we want

18
00:00:38,079 --> 00:00:40,160
formal professor security

19
00:00:40,160 --> 00:00:43,680
and this was bombarding cryptography so

20
00:00:43,680 --> 00:00:46,399
what has been happening since starting

21
00:00:46,399 --> 00:00:48,160
from then smart people came up with a

22
00:00:48,160 --> 00:00:49,200
new crypto proof

23
00:00:49,200 --> 00:00:51,039
other smart people looked at the proof

24
00:00:51,039 --> 00:00:53,760
and said yeah it's definitely correct

25
00:00:53,760 --> 00:00:57,039
and then other people broke the proof

26
00:00:57,039 --> 00:00:59,600
wait let me be clear we of course need

27
00:00:59,600 --> 00:01:01,440
crypto proofs and not all of them are

28
00:01:01,440 --> 00:01:02,239
broken

29
00:01:02,239 --> 00:01:04,879
but i will use the word of some famous

30
00:01:04,879 --> 00:01:06,479
people

31
00:01:06,479 --> 00:01:09,200
to tell you what is the issue 20 years

32
00:01:09,200 --> 00:01:10,799
ago

33
00:01:10,799 --> 00:01:13,200
bellare said that our field may be

34
00:01:13,200 --> 00:01:15,520
approaching a crisis of trigger

35
00:01:15,520 --> 00:01:17,840
around the same time shayev said do we

36
00:01:17,840 --> 00:01:20,960
have a problem with cryptographic proofs

37
00:01:20,960 --> 00:01:24,159
yes we do on my side

38
00:01:24,159 --> 00:01:27,439
to be honest when i do a pen

39
00:01:27,439 --> 00:01:29,200
and paper proofs of a complex

40
00:01:29,200 --> 00:01:31,040
cryptosystem that is around

41
00:01:31,040 --> 00:01:34,079
40-50 pages i don't know

42
00:01:34,079 --> 00:01:36,880
i am not able to tell with confidence

43
00:01:36,880 --> 00:01:40,079
that my proof is correct

44
00:01:40,079 --> 00:01:42,479
when you have to review a paper with 50

45
00:01:42,479 --> 00:01:45,600
pages of coffee in the appendix

46
00:01:45,600 --> 00:01:48,720
mein so what no computer-aided

47
00:01:48,720 --> 00:01:50,399
cryptography was proposed a solution

48
00:01:50,399 --> 00:01:54,560
in 2005. and you know what is it worked

49
00:01:54,560 --> 00:01:56,719
many successful tools with real-world

50
00:01:56,719 --> 00:01:58,399
impact have been developed

51
00:01:58,399 --> 00:02:00,960
among them

52
00:02:05,520 --> 00:02:08,318
as you can see we have many tools so

53
00:02:08,318 --> 00:02:09,598
guess what we did

54
00:02:09,598 --> 00:02:12,480
a new tool okay wait there is a good

55
00:02:12,480 --> 00:02:13,680
reason for that

56
00:02:13,680 --> 00:02:15,920
and it's not just because i love

57
00:02:15,920 --> 00:02:17,120
squirrels

58
00:02:17,120 --> 00:02:19,360
we strongly believe that compared to all

59
00:02:19,360 --> 00:02:20,560
those tools

60
00:02:20,560 --> 00:02:22,959
a novel and different approach was

61
00:02:22,959 --> 00:02:23,760
needed

62
00:02:23,760 --> 00:02:25,920
but to tell you why i first need to give

63
00:02:25,920 --> 00:02:27,440
a bit more details about the formal

64
00:02:27,440 --> 00:02:28,319
models

65
00:02:28,319 --> 00:02:30,879
used to make cryptographic ports i'm

66
00:02:30,879 --> 00:02:32,400
first going to talk about the two main

67
00:02:32,400 --> 00:02:33,280
models

68
00:02:33,280 --> 00:02:35,120
used for cryptographic proofs the

69
00:02:35,120 --> 00:02:36,879
symbolic model and the computational

70
00:02:36,879 --> 00:02:38,560
model

71
00:02:38,560 --> 00:02:40,400
then i'll tell you about the foundations

72
00:02:40,400 --> 00:02:42,560
of our approach the bc logic

73
00:02:42,560 --> 00:02:44,560
and finally i'll give you a taste of our

74
00:02:44,560 --> 00:02:51,840
tool the square alpha

75
00:02:53,440 --> 00:02:55,360
the two main models for proving security

76
00:02:55,360 --> 00:02:56,959
are the computational and the symbolic

77
00:02:56,959 --> 00:02:58,080
model

78
00:02:58,080 --> 00:02:59,599
the first big difference between the

79
00:02:59,599 --> 00:03:02,480
terminals is how to model the article

80
00:03:02,480 --> 00:03:04,879
in the symbolic model the attacker has a

81
00:03:04,879 --> 00:03:06,640
fixed set of capabilities

82
00:03:06,640 --> 00:03:09,519
that he may combine however he wants

83
00:03:09,519 --> 00:03:09,920
kind

84
00:03:09,920 --> 00:03:12,319
of like a swiss army knife in the

85
00:03:12,319 --> 00:03:13,440
conversational model

86
00:03:13,440 --> 00:03:16,239
the attacker can do almost anything like

87
00:03:16,239 --> 00:03:17,200
my driver

88
00:03:17,200 --> 00:03:18,879
in a bit more details in the

89
00:03:18,879 --> 00:03:20,480
computational model the article is

90
00:03:20,480 --> 00:03:21,280
essentially

91
00:03:21,280 --> 00:03:23,599
any problem executable in reasonable

92
00:03:23,599 --> 00:03:24,480
time

93
00:03:24,480 --> 00:03:25,920
and we just assume that some

94
00:03:25,920 --> 00:03:27,519
computational problems like

95
00:03:27,519 --> 00:03:29,840
integer factoring are hard for the other

96
00:03:29,840 --> 00:03:31,120
secures

97
00:03:31,120 --> 00:03:34,159
essentially the attacker is anybody with

98
00:03:34,159 --> 00:03:35,280
a computer

99
00:03:35,280 --> 00:03:38,239
and like five years of execution time in

100
00:03:38,239 --> 00:03:39,280
the symbolic model

101
00:03:39,280 --> 00:03:40,799
the attacker can only perform a

102
00:03:40,799 --> 00:03:42,640
combination of a fixed set of

103
00:03:42,640 --> 00:03:44,159
capabilities

104
00:03:44,159 --> 00:03:46,080
and the primitives are essentially

105
00:03:46,080 --> 00:03:48,000
assumed secure

106
00:03:48,000 --> 00:03:50,319
on one side we get strong guarantees

107
00:03:50,319 --> 00:03:51,920
with few automation

108
00:03:51,920 --> 00:03:53,439
while on the other we get weaker

109
00:03:53,439 --> 00:03:56,560
guarantees with a lot of automation

110
00:03:56,560 --> 00:03:58,560
both approaches are interesting and it

111
00:03:58,560 --> 00:04:00,080
is very unlikely for instance

112
00:04:00,080 --> 00:04:01,439
that we will ever reach in the

113
00:04:01,439 --> 00:04:03,280
computational model the level of

114
00:04:03,280 --> 00:04:05,280
automation of the symbolic one

115
00:04:05,280 --> 00:04:06,640
the second big difference between the

116
00:04:06,640 --> 00:04:09,599
two models is on all we write and reason

117
00:04:09,599 --> 00:04:12,159
about protocols in the computational

118
00:04:12,159 --> 00:04:13,680
model we describe protocols with a

119
00:04:13,680 --> 00:04:15,280
low-level and detailed programming

120
00:04:15,280 --> 00:04:16,079
language

121
00:04:16,079 --> 00:04:18,079
and we then perform transformations at

122
00:04:18,079 --> 00:04:20,478
the level of the code to probe security

123
00:04:20,478 --> 00:04:22,800
in the symbolic model we describe

124
00:04:22,800 --> 00:04:24,560
protocols with a high-level programming

125
00:04:24,560 --> 00:04:26,400
language and will reason over the set of

126
00:04:26,400 --> 00:04:28,800
all possible executions of this protocol

127
00:04:28,800 --> 00:04:31,919
to show the security essentially one is

128
00:04:31,919 --> 00:04:33,600
loadable and is more precise and

129
00:04:33,600 --> 00:04:34,479
expressive

130
00:04:34,479 --> 00:04:36,320
and one is high level and is more

131
00:04:36,320 --> 00:04:39,360
intuitive and easier to manipulate

132
00:04:39,360 --> 00:04:41,280
reasoning at the core level over the

133
00:04:41,280 --> 00:04:43,199
execution level

134
00:04:43,199 --> 00:04:45,440
does it make a big difference we claim

135
00:04:45,440 --> 00:04:46,639
that it does

136
00:04:46,639 --> 00:04:48,479
reasoning at the core level is harder

137
00:04:48,479 --> 00:04:50,400
when you have complex sequences of

138
00:04:50,400 --> 00:04:52,000
actions with many interleavings

139
00:04:52,000 --> 00:04:53,199
you have global execution of

140
00:04:53,199 --> 00:04:56,080
restrictions like phases or finally when

141
00:04:56,080 --> 00:04:57,919
you consider security properties

142
00:04:57,919 --> 00:05:00,400
that are essentially trace based to give

143
00:05:00,400 --> 00:05:01,520
an example on the last

144
00:05:01,520 --> 00:05:04,880
point let us look at the unfoldability

145
00:05:04,880 --> 00:05:05,520
axiom

146
00:05:05,520 --> 00:05:07,919
of a keyed i function it is a function

147
00:05:07,919 --> 00:05:08,720
that given

148
00:05:08,720 --> 00:05:10,560
a message and a key allows you to

149
00:05:10,560 --> 00:05:12,320
authenticate this message to other

150
00:05:12,320 --> 00:05:13,360
people

151
00:05:13,360 --> 00:05:16,160
only somebody with the key can produce

152
00:05:16,160 --> 00:05:18,720
the hash of a message with this key

153
00:05:18,720 --> 00:05:21,039
it is unfortunate this property can be

154
00:05:21,039 --> 00:05:22,320
expressed as a

155
00:05:22,320 --> 00:05:24,479
property of all possible executions of

156
00:05:24,479 --> 00:05:26,240
the protocol

157
00:05:26,240 --> 00:05:28,720
given a possible execution whenever you

158
00:05:28,720 --> 00:05:30,080
successfully verify ash

159
00:05:30,080 --> 00:05:32,800
you know that there exists previously

160
00:05:32,800 --> 00:05:33,840
somewhere in the trace

161
00:05:33,840 --> 00:05:36,000
a point where this ash was honestly

162
00:05:36,000 --> 00:05:37,759
produced

163
00:05:37,759 --> 00:05:40,160
property is naturally expressed as a

164
00:05:40,160 --> 00:05:41,360
property of the possible

165
00:05:41,360 --> 00:05:44,479
executions of the protocol if you want

166
00:05:44,479 --> 00:05:46,160
to express this as a code level

167
00:05:46,160 --> 00:05:48,240
you have to write your assumption as the

168
00:05:48,240 --> 00:05:49,759
occurrence between two

169
00:05:49,759 --> 00:05:51,680
pieces of code and then you have to show

170
00:05:51,680 --> 00:05:53,280
that your protocol is an instance

171
00:05:53,280 --> 00:05:56,400
of one of the two pieces of code this

172
00:05:56,400 --> 00:05:58,720
appears to be less natural to sum up we

173
00:05:58,720 --> 00:06:00,000
saw that the computational model

174
00:06:00,000 --> 00:06:02,400
is more precise and expressive provides

175
00:06:02,400 --> 00:06:03,840
stronger guarantees

176
00:06:03,840 --> 00:06:06,639
but is at a low level of reasoning the

177
00:06:06,639 --> 00:06:07,680
symbolic model is

178
00:06:07,680 --> 00:06:09,919
less precise and provides weaker

179
00:06:09,919 --> 00:06:10,880
guarantees

180
00:06:10,880 --> 00:06:14,080
but is at a higher level of reasoning

181
00:06:14,080 --> 00:06:15,840
and this has a higher level of

182
00:06:15,840 --> 00:06:17,120
automation both

183
00:06:17,120 --> 00:06:19,520
approaches are complementary but we

184
00:06:19,520 --> 00:06:20,160
claim

185
00:06:20,160 --> 00:06:22,240
that there is another path somewhere in

186
00:06:22,240 --> 00:06:23,360
the middle

187
00:06:23,360 --> 00:06:26,240
and so we ask one big question can we

188
00:06:26,240 --> 00:06:27,199
get the best

189
00:06:27,199 --> 00:06:30,400
of both worlds oh to say it clearly

190
00:06:30,400 --> 00:06:32,319
is there a way to reason at a high level

191
00:06:32,319 --> 00:06:34,080
and still get strong

192
00:06:34,080 --> 00:06:37,359
computational guarantees

193
00:06:38,639 --> 00:06:40,080
in the past decade a new way to make

194
00:06:40,080 --> 00:06:42,080
computational proofs was introduced

195
00:06:42,080 --> 00:06:46,160
the bc object it was introduced in 2014

196
00:06:46,160 --> 00:06:48,240
and used and expanded in the years that

197
00:06:48,240 --> 00:06:49,440
followed

198
00:06:49,440 --> 00:06:51,520
essentially it allows to obtain

199
00:06:51,520 --> 00:06:52,960
computational guarantees

200
00:06:52,960 --> 00:06:54,560
while reasoning inside a first order

201
00:06:54,560 --> 00:06:56,560
logic to do so

202
00:06:56,560 --> 00:06:59,039
it provides a way to describe all the

203
00:06:59,039 --> 00:07:01,120
possible behaviors of a protocol

204
00:07:01,120 --> 00:07:04,400
inside purely syntactic terms

205
00:07:04,400 --> 00:07:06,319
that only contain function application

206
00:07:06,319 --> 00:07:08,319
and base constants

207
00:07:08,319 --> 00:07:09,599
what is the difference with the

208
00:07:09,599 --> 00:07:12,000
classical code based modeling

209
00:07:12,000 --> 00:07:14,639
on one side you have explicit something

210
00:07:14,639 --> 00:07:15,520
on the other side

211
00:07:15,520 --> 00:07:18,080
sk is a function that takes no argument

212
00:07:18,080 --> 00:07:18,880
and gives back

213
00:07:18,880 --> 00:07:21,199
a random b string we do not assign a

214
00:07:21,199 --> 00:07:22,720
variable to an attacker call

215
00:07:22,720 --> 00:07:24,720
we model the attacker using a function

216
00:07:24,720 --> 00:07:26,000
symbol

217
00:07:26,000 --> 00:07:29,280
and so on it has two very interesting

218
00:07:29,280 --> 00:07:30,080
properties

219
00:07:30,080 --> 00:07:32,880
abstraction we don't see any holistic

220
00:07:32,880 --> 00:07:33,440
sampling

221
00:07:33,440 --> 00:07:36,160
we don't see any variable assignment etc

222
00:07:36,160 --> 00:07:37,039
etc

223
00:07:37,039 --> 00:07:40,080
locality if we reason about term it

224
00:07:40,080 --> 00:07:40,800
contains

225
00:07:40,800 --> 00:07:43,759
all its probabilistic dependencies no

226
00:07:43,759 --> 00:07:45,199
side effect

227
00:07:45,199 --> 00:07:48,080
no weird states how to prove particles

228
00:07:48,080 --> 00:07:49,440
in the bc logic

229
00:07:49,440 --> 00:07:51,039
the idea is to fully describe the

230
00:07:51,039 --> 00:07:53,759
possible behaviors of the protocol

231
00:07:53,759 --> 00:07:55,599
we just look at a simple protocol we are

232
00:07:55,599 --> 00:07:57,280
using ashirsky sk

233
00:07:57,280 --> 00:08:00,160
alice authenticate announced a to bob

234
00:08:00,160 --> 00:08:02,560
and this by sending the hash of a with

235
00:08:02,560 --> 00:08:06,080
sk to bob bob answers okay user

236
00:08:06,080 --> 00:08:09,360
is valid we can describe this protocol

237
00:08:09,360 --> 00:08:11,599
using terms by writing down inside the

238
00:08:11,599 --> 00:08:13,759
logic the sequence of possible messages

239
00:08:13,759 --> 00:08:16,879
seen by the attacker over the network

240
00:08:16,879 --> 00:08:18,639
the first message will simply be the

241
00:08:18,639 --> 00:08:20,879
hash of a with escape

242
00:08:20,879 --> 00:08:22,560
then the second message is a bit more

243
00:08:22,560 --> 00:08:24,960
tricky as it depends on some attacker

244
00:08:24,960 --> 00:08:25,680
input

245
00:08:25,680 --> 00:08:28,560
and on a conditional test made by bob is

246
00:08:28,560 --> 00:08:29,280
the hash

247
00:08:29,280 --> 00:08:32,559
correct the attacker input is modeled

248
00:08:32,559 --> 00:08:35,039
with a dedicated function symbol and for

249
00:08:35,039 --> 00:08:35,839
the conditional

250
00:08:35,839 --> 00:08:38,320
we simply include inside the syntax the

251
00:08:38,320 --> 00:08:40,559
ternary function symbol that we denote

252
00:08:40,559 --> 00:08:40,958
by

253
00:08:40,958 --> 00:08:43,599
is the lens what could we want to prove

254
00:08:43,599 --> 00:08:44,560
over this

255
00:08:44,560 --> 00:08:46,080
well here we would want some

256
00:08:46,080 --> 00:08:47,600
authentication properly

257
00:08:47,600 --> 00:08:50,560
so the condition of bob succeeds only

258
00:08:50,560 --> 00:08:51,519
his attacker

259
00:08:51,519 --> 00:08:54,160
simply forwards the message this is

260
00:08:54,160 --> 00:08:55,760
written with an implication

261
00:08:55,760 --> 00:08:58,080
where the left hand side is exactly as a

262
00:08:58,080 --> 00:08:59,920
condition

263
00:08:59,920 --> 00:09:01,200
to make a statement over this

264
00:09:01,200 --> 00:09:03,120
implication there is in the bc logic

265
00:09:03,120 --> 00:09:05,279
and indistinguishability predicate over

266
00:09:05,279 --> 00:09:07,040
sequences of terms

267
00:09:07,040 --> 00:09:09,120
we can then express the fact that the

268
00:09:09,120 --> 00:09:10,160
implication

269
00:09:10,160 --> 00:09:12,560
should be equal or indistinguishable to

270
00:09:12,560 --> 00:09:13,279
true

271
00:09:13,279 --> 00:09:16,000
with overwhelming probability and no we

272
00:09:16,000 --> 00:09:17,200
won't prove this using

273
00:09:17,200 --> 00:09:19,839
the unprobability axiom what is

274
00:09:19,839 --> 00:09:21,920
interesting is that it becomes

275
00:09:21,920 --> 00:09:23,680
completely syntactic

276
00:09:23,680 --> 00:09:26,080
the honest ashes given to the attacker

277
00:09:26,080 --> 00:09:26,720
are the one

278
00:09:26,720 --> 00:09:29,920
appearing inside m0 and the property

279
00:09:29,920 --> 00:09:30,399
holds

280
00:09:30,399 --> 00:09:33,200
because we only have the one sent out by

281
00:09:33,200 --> 00:09:34,160
alex

282
00:09:34,160 --> 00:09:36,080
so to sum up we have terms modeling

283
00:09:36,080 --> 00:09:37,680
possible behaviors of the protocol

284
00:09:37,680 --> 00:09:39,200
we have a logical predicate modeling

285
00:09:39,200 --> 00:09:41,440
computational indistinguishability

286
00:09:41,440 --> 00:09:43,279
and we can translate classical catalytic

287
00:09:43,279 --> 00:09:45,760
actions inside of terms

288
00:09:45,760 --> 00:09:48,800
yielding logical actions

289
00:09:48,800 --> 00:09:50,399
remarks that here we only gave the

290
00:09:50,399 --> 00:09:51,760
authentication property for the first

291
00:09:51,760 --> 00:09:53,440
possible sequence of messages of the

292
00:09:53,440 --> 00:09:54,240
protocol

293
00:09:54,240 --> 00:09:56,160
we would also need to do it for the

294
00:09:56,160 --> 00:09:57,360
other one

295
00:09:57,360 --> 00:09:58,959
and of course we are not limited to

296
00:09:58,959 --> 00:10:00,399
reachability properties

297
00:10:00,399 --> 00:10:01,680
to show the computational

298
00:10:01,680 --> 00:10:03,279
indistinguishability of two protocols p

299
00:10:03,279 --> 00:10:04,000
and q

300
00:10:04,000 --> 00:10:06,160
we do so by proving that the axioms and

301
00:10:06,160 --> 00:10:08,160
tell the pc in distinguishability

302
00:10:08,160 --> 00:10:10,959
of their possible sequences or terms

303
00:10:10,959 --> 00:10:11,279
that's

304
00:10:11,279 --> 00:10:14,079
it you know space logic oh well you have

305
00:10:14,079 --> 00:10:15,200
the big ideas

306
00:10:15,200 --> 00:10:17,440
so that you can understand the user

307
00:10:17,440 --> 00:10:18,720
interface

308
00:10:18,720 --> 00:10:21,120
making it so that behind the curtains it

309
00:10:21,120 --> 00:10:22,560
actually gives you compassionate

310
00:10:22,560 --> 00:10:23,120
guarantees

311
00:10:23,120 --> 00:10:25,440
is quite a pain in the essentially you

312
00:10:25,440 --> 00:10:27,040
have to use seasonal drink as a first

313
00:10:27,040 --> 00:10:28,959
order greek most models are probably

314
00:10:28,959 --> 00:10:33,839
stickering machines

315
00:10:38,800 --> 00:10:42,160
okay let's forget about that

316
00:10:42,160 --> 00:10:44,240
and so that you forgive me is the

317
00:10:44,240 --> 00:10:46,480
picture of a cute squirrel

318
00:10:46,480 --> 00:10:49,440
so back to your ships the bc logic is

319
00:10:49,440 --> 00:10:50,240
quite cool

320
00:10:50,240 --> 00:10:53,120
but have two drawbacks first it had no

321
00:10:53,120 --> 00:10:54,320
mechanization

322
00:10:54,320 --> 00:10:56,560
second it only worked for protocols with

323
00:10:56,560 --> 00:10:57,760
a fixed number

324
00:10:57,760 --> 00:10:59,920
of agents or sessions because you have

325
00:10:59,920 --> 00:11:02,160
to emulate all the traces

326
00:11:02,160 --> 00:11:05,680
as our contributions we solved both

327
00:11:05,680 --> 00:11:07,440
we developed a methodology that allows

328
00:11:07,440 --> 00:11:09,839
to reason about unbounded particles

329
00:11:09,839 --> 00:11:12,839
and we integrated it inside a mechanized

330
00:11:12,839 --> 00:11:15,839
pool

331
00:11:17,279 --> 00:11:19,120
we said that in the bc logic you have

332
00:11:19,120 --> 00:11:20,640
for each protocol many sequences of

333
00:11:20,640 --> 00:11:21,440
terms

334
00:11:21,440 --> 00:11:23,760
and have to do a pro for each in the

335
00:11:23,760 --> 00:11:25,920
metallic we capture all that in a single

336
00:11:25,920 --> 00:11:27,440
formula on proof

337
00:11:27,440 --> 00:11:29,120
and this proof can be independent from

338
00:11:29,120 --> 00:11:31,040
the number of sessions and this proves

339
00:11:31,040 --> 00:11:32,880
the security of an unbounded number

340
00:11:32,880 --> 00:11:36,079
of sessions of a protocol how does it

341
00:11:36,079 --> 00:11:36,880
work

342
00:11:36,880 --> 00:11:38,399
it is because there is in our

343
00:11:38,399 --> 00:11:40,079
metallurgic a quantification of

344
00:11:40,079 --> 00:11:42,720
all possible choices at the top level

345
00:11:42,720 --> 00:11:44,880
five must be true over all possible

346
00:11:44,880 --> 00:11:45,600
traces

347
00:11:45,600 --> 00:11:47,600
of the protocol and of course to prove

348
00:11:47,600 --> 00:11:49,440
that we obtain computational guarantees

349
00:11:49,440 --> 00:11:51,200
we must prove that each metallurgic hole

350
00:11:51,200 --> 00:11:53,519
matches multiple applications or roles

351
00:11:53,519 --> 00:11:56,639
of the basologic to sum up

352
00:11:56,639 --> 00:11:58,800
we have metal geek with horizon axioms

353
00:11:58,800 --> 00:11:59,920
that allows to prove

354
00:11:59,920 --> 00:12:01,600
either properties of all traces of the

355
00:12:01,600 --> 00:12:03,920
obstacle or indistinguishability

356
00:12:03,920 --> 00:12:04,959
properties

357
00:12:04,959 --> 00:12:07,519
and the main theorem is clear it gives

358
00:12:07,519 --> 00:12:08,839
computational

359
00:12:08,839 --> 00:12:11,839
guarantees the squealer cover

360
00:12:11,839 --> 00:12:15,440
it looks like this that's my alison bob

361
00:12:15,440 --> 00:12:18,079
call so what does the metallurgic

362
00:12:18,079 --> 00:12:19,519
formula looks like

363
00:12:19,519 --> 00:12:21,120
essentially we have inside the logic

364
00:12:21,120 --> 00:12:22,639
what we call macros

365
00:12:22,639 --> 00:12:24,959
that can refer to the input the output

366
00:12:24,959 --> 00:12:26,320
of the condition

367
00:12:26,320 --> 00:12:28,000
of an action happening somewhere in the

368
00:12:28,000 --> 00:12:31,120
trace and we can show on our example

369
00:12:31,120 --> 00:12:33,680
that if the condition of bob succeeds it

370
00:12:33,680 --> 00:12:34,959
actually received

371
00:12:34,959 --> 00:12:38,240
a value sent by alice squirrel supports

372
00:12:38,240 --> 00:12:40,399
classical first order reasoning rules

373
00:12:40,399 --> 00:12:42,160
but also cryptographic rules

374
00:12:42,160 --> 00:12:44,079
like euf a nickname for existential

375
00:12:44,079 --> 00:12:45,200
unfoldability

376
00:12:45,200 --> 00:12:48,000
that actually matches orientation if we

377
00:12:48,000 --> 00:12:49,360
have a valid ash

378
00:12:49,360 --> 00:12:51,360
we know that it was honestly produced

379
00:12:51,360 --> 00:12:52,639
previously

380
00:12:52,639 --> 00:12:55,760
as only alice can produce such issues it

381
00:12:55,760 --> 00:12:57,360
means that there exists an honest

382
00:12:57,360 --> 00:12:59,440
session of alice that produced this

383
00:12:59,440 --> 00:13:00,480
message

384
00:13:00,480 --> 00:13:04,160
and we conclude what did we do with it

385
00:13:04,160 --> 00:13:06,560
many kinds of proofs based on many kinds

386
00:13:06,560 --> 00:13:07,600
of assumptions

387
00:13:07,600 --> 00:13:09,680
we already have proofs for some complex

388
00:13:09,680 --> 00:13:10,639
properties or

389
00:13:10,639 --> 00:13:13,120
complex protocols and we can notably

390
00:13:13,120 --> 00:13:15,040
leverage a composition result

391
00:13:15,040 --> 00:13:17,920
inside our proofs what do we plan to do

392
00:13:17,920 --> 00:13:18,480
with it

393
00:13:18,480 --> 00:13:20,880
well look at more complex telephotos

394
00:13:20,880 --> 00:13:22,880
maybe some quantum stuff

395
00:13:22,880 --> 00:13:25,519
we don't know the limits yet don't

396
00:13:25,519 --> 00:13:26,800
forget to check out the code

397
00:13:26,800 --> 00:13:29,279
the paper videos of q squirrels and see

398
00:13:29,279 --> 00:13:35,839
you soon

399
00:13:42,880 --> 00:13:44,959
you

