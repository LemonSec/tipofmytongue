1
00:00:00,080 --> 00:00:03,199
all right hello my name is joachim noy

2
00:00:03,199 --> 00:00:06,080
and together with my co-authors nozred

3
00:00:06,080 --> 00:00:06,640
tush

4
00:00:06,640 --> 00:00:09,200
and david che i welcome you to our

5
00:00:09,200 --> 00:00:10,240
presentation

6
00:00:10,240 --> 00:00:13,120
on ebb and flow protocols a resolution

7
00:00:13,120 --> 00:00:17,119
of the availability finality dilemma

8
00:00:17,119 --> 00:00:20,400
our work was prompted by this paper

9
00:00:20,400 --> 00:00:22,480
which appeared on archive in the spring

10
00:00:22,480 --> 00:00:23,920
of 2020.

11
00:00:23,920 --> 00:00:27,359
the authors described gaspar the

12
00:00:27,359 --> 00:00:30,320
proposed consensus protocol for ethereum

13
00:00:30,320 --> 00:00:30,800
2

14
00:00:30,800 --> 00:00:34,079
which combines the finality tool casper

15
00:00:34,079 --> 00:00:35,040
ffg

16
00:00:35,040 --> 00:00:38,399
and the fork choice rule lmd ghost

17
00:00:38,399 --> 00:00:41,680
but is gas per secure here

18
00:00:41,680 --> 00:00:43,840
are the key takeaways of this

19
00:00:43,840 --> 00:00:45,440
presentation

20
00:00:45,440 --> 00:00:48,480
we found a liveness attack on gasper

21
00:00:48,480 --> 00:00:51,120
jasper is not secure in the synchronous

22
00:00:51,120 --> 00:00:51,680
network

23
00:00:51,680 --> 00:00:54,800
model we then dig deeper

24
00:00:54,800 --> 00:00:57,760
to understand the consensus problem that

25
00:00:57,760 --> 00:00:59,760
gasper aims to solve

26
00:00:59,760 --> 00:01:01,840
and provide a formalization of this

27
00:01:01,840 --> 00:01:03,440
consensus problem

28
00:01:03,440 --> 00:01:07,040
under the name of ebb and flow protocols

29
00:01:07,040 --> 00:01:09,920
while gasper is not a secure ebb and

30
00:01:09,920 --> 00:01:11,200
flow protocol

31
00:01:11,200 --> 00:01:13,760
we designed so-called snap and chat

32
00:01:13,760 --> 00:01:14,960
protocols

33
00:01:14,960 --> 00:01:18,080
a family of provably secure app and flow

34
00:01:18,080 --> 00:01:19,040
protocols

35
00:01:19,040 --> 00:01:21,759
with optimal resilience against

36
00:01:21,759 --> 00:01:22,880
adversarial

37
00:01:22,880 --> 00:01:25,920
corruption the world of consensus

38
00:01:25,920 --> 00:01:27,040
protocols

39
00:01:27,040 --> 00:01:29,280
is pretty much divided into the

40
00:01:29,280 --> 00:01:30,400
following two

41
00:01:30,400 --> 00:01:33,119
camps on the one hand the more

42
00:01:33,119 --> 00:01:34,159
traditional

43
00:01:34,159 --> 00:01:37,439
partially synchronous bft protocols such

44
00:01:37,439 --> 00:01:38,079
as

45
00:01:38,079 --> 00:01:42,399
pbft or hot stuff and on the other hand

46
00:01:42,399 --> 00:01:45,280
nakamoto style longest chain based

47
00:01:45,280 --> 00:01:46,320
protocols

48
00:01:46,320 --> 00:01:49,600
such as bitcoin ethereum one

49
00:01:49,600 --> 00:01:53,040
or oroboros protocols from these two

50
00:01:53,040 --> 00:01:54,240
camps show

51
00:01:54,240 --> 00:01:57,520
very different behavior suppose

52
00:01:57,520 --> 00:01:59,600
a network with the following

53
00:01:59,600 --> 00:02:01,119
characteristics

54
00:02:01,119 --> 00:02:04,159
participation is fluctuating in the

55
00:02:04,159 --> 00:02:04,719
green

56
00:02:04,719 --> 00:02:08,160
shaded periods participation is high

57
00:02:08,160 --> 00:02:10,959
and in the blank period participation is

58
00:02:10,959 --> 00:02:12,080
low

59
00:02:12,080 --> 00:02:15,120
suppose there is also an

60
00:02:15,120 --> 00:02:17,440
intermittent network partition in the

61
00:02:17,440 --> 00:02:19,440
gray shaded area

62
00:02:19,440 --> 00:02:22,959
in such a setting the ledger output

63
00:02:22,959 --> 00:02:26,000
by a longest chain type protocol is

64
00:02:26,000 --> 00:02:27,440
always live

65
00:02:27,440 --> 00:02:30,160
which is a desired property property

66
00:02:30,160 --> 00:02:31,120
which we call

67
00:02:31,120 --> 00:02:34,959
dynamic availability however

68
00:02:34,959 --> 00:02:37,599
the protocol sacrifices safety under

69
00:02:37,599 --> 00:02:39,440
network partitions

70
00:02:39,440 --> 00:02:42,000
on the other hand the ledger output by

71
00:02:42,000 --> 00:02:42,959
traditional

72
00:02:42,959 --> 00:02:46,720
proposed and vote style bft protocols

73
00:02:46,720 --> 00:02:50,319
is always safe a desired property

74
00:02:50,319 --> 00:02:53,840
which we call finality however

75
00:02:53,840 --> 00:02:56,720
the protocol sacrifices liveness under

76
00:02:56,720 --> 00:02:58,480
low participation

77
00:02:58,480 --> 00:03:01,840
a natural question is is there a

78
00:03:01,840 --> 00:03:03,200
consensus protocol

79
00:03:03,200 --> 00:03:06,080
whose output ledger provides both

80
00:03:06,080 --> 00:03:07,280
availability

81
00:03:07,280 --> 00:03:11,599
and finality variants of the cap theorem

82
00:03:11,599 --> 00:03:15,120
tell us no and this is perhaps

83
00:03:15,120 --> 00:03:18,400
not that surprising after all how could

84
00:03:18,400 --> 00:03:19,200
you have

85
00:03:19,200 --> 00:03:21,280
a single ledger that has both the

86
00:03:21,280 --> 00:03:22,480
behavior

87
00:03:22,480 --> 00:03:25,040
on the left and the behavior on the

88
00:03:25,040 --> 00:03:26,080
right plot

89
00:03:26,080 --> 00:03:30,000
simultaneously so the availability

90
00:03:30,000 --> 00:03:33,200
finality dilemma tells us that there

91
00:03:33,200 --> 00:03:34,159
cannot be

92
00:03:34,159 --> 00:03:37,360
a single ledger that is always safe and

93
00:03:37,360 --> 00:03:40,400
live under both network partitions and

94
00:03:40,400 --> 00:03:42,480
dynamic participation

95
00:03:42,480 --> 00:03:44,319
what is the next best thing that we can

96
00:03:44,319 --> 00:03:45,760
hope for then

97
00:03:45,760 --> 00:03:48,239
we propose the following decomposition

98
00:03:48,239 --> 00:03:49,280
and in fact

99
00:03:49,280 --> 00:03:52,319
we argue that this is a formalization of

100
00:03:52,319 --> 00:03:53,519
the design goals

101
00:03:53,519 --> 00:03:56,799
of gasper we would like to have

102
00:03:56,799 --> 00:04:00,640
an available full ledger and

103
00:04:00,640 --> 00:04:04,319
a finalized prefix ledger the available

104
00:04:04,319 --> 00:04:05,280
full ledger

105
00:04:05,280 --> 00:04:08,879
is always live and it is safe unless

106
00:04:08,879 --> 00:04:11,920
there is a network partition so the

107
00:04:11,920 --> 00:04:13,280
available full ledger

108
00:04:13,280 --> 00:04:15,840
has the same properties as the ledger

109
00:04:15,840 --> 00:04:16,798
output

110
00:04:16,798 --> 00:04:20,000
by a longest chain type protocol the

111
00:04:20,000 --> 00:04:21,680
finalized prefix ledger

112
00:04:21,680 --> 00:04:24,400
on the other hand is always safe and it

113
00:04:24,400 --> 00:04:25,280
is live

114
00:04:25,280 --> 00:04:28,720
unless there is low participation so

115
00:04:28,720 --> 00:04:31,199
the finalized prefix ledger has the same

116
00:04:31,199 --> 00:04:31,840
properties

117
00:04:31,840 --> 00:04:34,720
as the ledger output by a traditional

118
00:04:34,720 --> 00:04:36,160
propose and vote style

119
00:04:36,160 --> 00:04:39,680
bft protocol and since the finalized

120
00:04:39,680 --> 00:04:40,400
ledger

121
00:04:40,400 --> 00:04:43,440
is a prefix of the available ledger both

122
00:04:43,440 --> 00:04:44,240
ledgers

123
00:04:44,240 --> 00:04:47,360
eventually agree on a single account

124
00:04:47,360 --> 00:04:51,040
of history we call this the ebb and flow

125
00:04:51,040 --> 00:04:52,160
property

126
00:04:52,160 --> 00:04:54,240
and it provides a way to combine

127
00:04:54,240 --> 00:04:57,120
consensus protocols from the previously

128
00:04:57,120 --> 00:04:57,759
mentioned

129
00:04:57,759 --> 00:05:00,800
two camps the name

130
00:05:00,800 --> 00:05:03,600
ab and flow comes from the fact that the

131
00:05:03,600 --> 00:05:05,600
finalized prefix ledger

132
00:05:05,600 --> 00:05:08,560
falls behind the full available ledger

133
00:05:08,560 --> 00:05:10,240
when the network partitions

134
00:05:10,240 --> 00:05:13,120
or participation is low but it catches

135
00:05:13,120 --> 00:05:13,440
up

136
00:05:13,440 --> 00:05:16,479
when the network heals note

137
00:05:16,479 --> 00:05:18,160
we're not the first to propose such

138
00:05:18,160 --> 00:05:19,600
nesting of ledgers

139
00:05:19,600 --> 00:05:22,320
with different security guarantees in

140
00:05:22,320 --> 00:05:22,960
fact

141
00:05:22,960 --> 00:05:26,080
longest chain k deep ledgers are nested

142
00:05:26,080 --> 00:05:27,039
for increasing

143
00:05:27,039 --> 00:05:30,080
k and an earlier work called flexible

144
00:05:30,080 --> 00:05:31,039
bft

145
00:05:31,039 --> 00:05:34,800
uses similar ideas but since gasper is

146
00:05:34,800 --> 00:05:35,600
not secure

147
00:05:35,600 --> 00:05:38,080
the question arises does a protocol with

148
00:05:38,080 --> 00:05:39,919
this ebb and flow property exist

149
00:05:39,919 --> 00:05:43,360
at all before we discuss a provably

150
00:05:43,360 --> 00:05:45,199
secure ebb and flow protocol

151
00:05:45,199 --> 00:05:47,360
let's take a high level look at how

152
00:05:47,360 --> 00:05:48,400
gaspar aims

153
00:05:48,400 --> 00:05:50,880
to achieve the ebb and flow property and

154
00:05:50,880 --> 00:05:51,919
why gasper

155
00:05:51,919 --> 00:05:54,080
is not secure under the synchronous

156
00:05:54,080 --> 00:05:55,520
network model

157
00:05:55,520 --> 00:05:58,160
gaspar proceeds in epochs which are

158
00:05:58,160 --> 00:05:59,520
further subdivided

159
00:05:59,520 --> 00:06:03,280
into time slots each slot has a randomly

160
00:06:03,280 --> 00:06:04,960
selected committee

161
00:06:04,960 --> 00:06:07,759
slot by slot blocks are proposed and

162
00:06:07,759 --> 00:06:08,639
approved

163
00:06:08,639 --> 00:06:11,600
to grow the full available ledger based

164
00:06:11,600 --> 00:06:14,240
on the rules of lmd ghost

165
00:06:14,240 --> 00:06:17,440
epoch by epoch the finalized prefix

166
00:06:17,440 --> 00:06:20,560
is grown based on the rules of casper

167
00:06:20,560 --> 00:06:24,400
ffg the goal of our attacker

168
00:06:24,400 --> 00:06:27,120
is to build out two chains with equal

169
00:06:27,120 --> 00:06:28,560
number of votes

170
00:06:28,560 --> 00:06:32,400
so as to stall consensus node

171
00:06:32,400 --> 00:06:35,520
for each committee a few of its members

172
00:06:35,520 --> 00:06:39,039
are adversarial but most of its members

173
00:06:39,039 --> 00:06:42,080
are honest honest committee members vote

174
00:06:42,080 --> 00:06:43,039
for the bloc

175
00:06:43,039 --> 00:06:45,919
which in their view already has the most

176
00:06:45,919 --> 00:06:47,440
votes

177
00:06:47,440 --> 00:06:50,720
when the adversary is the randomly drawn

178
00:06:50,720 --> 00:06:53,120
block proposer in a slot it can

179
00:06:53,120 --> 00:06:53,919
kickstart

180
00:06:53,919 --> 00:06:56,960
the following attack it puts forth

181
00:06:56,960 --> 00:07:00,560
two conflicting proposals showing one of

182
00:07:00,560 --> 00:07:01,599
the proposals

183
00:07:01,599 --> 00:07:03,440
to one half of the honest committee

184
00:07:03,440 --> 00:07:04,720
members

185
00:07:04,720 --> 00:07:07,280
and the other proposal to the other half

186
00:07:07,280 --> 00:07:09,199
of the honors committee members

187
00:07:09,199 --> 00:07:12,240
as a result both proposals now get

188
00:07:12,240 --> 00:07:14,160
equally many votes

189
00:07:14,160 --> 00:07:16,960
so far adversarial committee members

190
00:07:16,960 --> 00:07:19,440
have not cast a vote yet

191
00:07:19,440 --> 00:07:21,360
just before the beginning of the next

192
00:07:21,360 --> 00:07:23,759
slot the adversary

193
00:07:23,759 --> 00:07:25,919
lets one of its committee members vote

194
00:07:25,919 --> 00:07:27,599
for the left block

195
00:07:27,599 --> 00:07:30,639
this vote however is only shown to one

196
00:07:30,639 --> 00:07:32,639
half of the honest committee members

197
00:07:32,639 --> 00:07:36,560
of the next slot similarly the adversary

198
00:07:36,560 --> 00:07:38,800
lets another one of its committee

199
00:07:38,800 --> 00:07:41,120
members vote for the right block

200
00:07:41,120 --> 00:07:44,720
and again it shows this vote only to the

201
00:07:44,720 --> 00:07:46,319
other half of the honors committee

202
00:07:46,319 --> 00:07:48,479
members of the next slot

203
00:07:48,479 --> 00:07:51,039
so as a result half of the honest

204
00:07:51,039 --> 00:07:52,080
committee members

205
00:07:52,080 --> 00:07:54,639
vote for the left block and half of the

206
00:07:54,639 --> 00:07:55,919
honors committee members

207
00:07:55,919 --> 00:08:00,160
vote for the right block again a tie

208
00:08:00,160 --> 00:08:02,560
since both proposals again have the same

209
00:08:02,560 --> 00:08:03,919
number of votes

210
00:08:03,919 --> 00:08:07,120
the adversary applies the same strategy

211
00:08:07,120 --> 00:08:10,479
in the next slot and so on

212
00:08:10,479 --> 00:08:12,879
the adversary keeps repeating this

213
00:08:12,879 --> 00:08:14,000
process

214
00:08:14,000 --> 00:08:17,280
throughout epoch zero a slight variant

215
00:08:17,280 --> 00:08:18,240
of this trick

216
00:08:18,240 --> 00:08:20,960
of confusing and swaying honest

217
00:08:20,960 --> 00:08:22,319
committee members

218
00:08:22,319 --> 00:08:25,599
by the timed release of very few

219
00:08:25,599 --> 00:08:29,120
adversarial votes also works for epoch 1

220
00:08:29,120 --> 00:08:32,799
and subsequent epochs and as a result

221
00:08:32,799 --> 00:08:35,519
there are now two inconsistent but ever

222
00:08:35,519 --> 00:08:36,719
growing chains

223
00:08:36,719 --> 00:08:39,200
between the which the protocol never

224
00:08:39,200 --> 00:08:41,039
reaches a decision

225
00:08:41,039 --> 00:08:43,200
furthermore depending on which

226
00:08:43,200 --> 00:08:44,640
adversarial votes

227
00:08:44,640 --> 00:08:47,360
honest participants happen to have just

228
00:08:47,360 --> 00:08:48,160
received

229
00:08:48,160 --> 00:08:50,160
honest participants might be jumping

230
00:08:50,160 --> 00:08:52,640
back and forth between these two chains

231
00:08:52,640 --> 00:08:55,920
which jeopardizes safety so gasper is

232
00:08:55,920 --> 00:08:57,120
not secure

233
00:08:57,120 --> 00:09:00,080
in fact six adversarial committee

234
00:09:00,080 --> 00:09:01,760
members per slot

235
00:09:01,760 --> 00:09:04,880
suffice to keep the attack going and

236
00:09:04,880 --> 00:09:06,399
this will happen with quite a high

237
00:09:06,399 --> 00:09:07,600
probability

238
00:09:07,600 --> 00:09:10,399
even if the adversary controls only say

239
00:09:10,399 --> 00:09:12,560
10 percent of participants

240
00:09:12,560 --> 00:09:15,440
given that there are 128 committee

241
00:09:15,440 --> 00:09:16,080
members

242
00:09:16,080 --> 00:09:19,200
first law in fact if the number of

243
00:09:19,200 --> 00:09:21,120
committee members per slot

244
00:09:21,120 --> 00:09:24,000
were to grow to infinity then the

245
00:09:24,000 --> 00:09:25,760
protocol is prone to this

246
00:09:25,760 --> 00:09:28,560
attack for any arbitrarily small

247
00:09:28,560 --> 00:09:31,200
fraction of adversarial participants

248
00:09:31,200 --> 00:09:33,440
for more details on this attack check

249
00:09:33,440 --> 00:09:35,680
out this e3 research post

250
00:09:35,680 --> 00:09:38,880
since gaspar is not secure we designed a

251
00:09:38,880 --> 00:09:40,480
family of protocols

252
00:09:40,480 --> 00:09:43,600
called snap and chat protocols which

253
00:09:43,600 --> 00:09:44,640
provably

254
00:09:44,640 --> 00:09:47,120
achieve the app and flow property and

255
00:09:47,120 --> 00:09:49,120
provide optimal resilience

256
00:09:49,120 --> 00:09:51,920
against adversarial corruption in

257
00:09:51,920 --> 00:09:53,040
particular

258
00:09:53,040 --> 00:09:56,160
the finalized prefix ledger output by

259
00:09:56,160 --> 00:09:57,360
this protocol

260
00:09:57,360 --> 00:10:00,480
is secure partitions if less than a

261
00:10:00,480 --> 00:10:02,320
third of all participants

262
00:10:02,320 --> 00:10:05,360
are adversarial the available

263
00:10:05,360 --> 00:10:08,560
full ledger is secure under dynamic

264
00:10:08,560 --> 00:10:09,839
participation

265
00:10:09,839 --> 00:10:13,200
if less than half of awake participants

266
00:10:13,200 --> 00:10:16,399
are adversarial the finalized

267
00:10:16,399 --> 00:10:19,600
prefix ledger is always a prefix of the

268
00:10:19,600 --> 00:10:21,680
available full ledger

269
00:10:21,680 --> 00:10:24,160
so that there is a single account of

270
00:10:24,160 --> 00:10:25,360
history

271
00:10:25,360 --> 00:10:28,320
note that the available ledger has the

272
00:10:28,320 --> 00:10:30,000
best possible resilience

273
00:10:30,000 --> 00:10:33,120
for a network with dynamic participation

274
00:10:33,120 --> 00:10:35,440
while the finalized ledger has the best

275
00:10:35,440 --> 00:10:36,959
possible resilience

276
00:10:36,959 --> 00:10:40,160
for a network with partitions

277
00:10:40,160 --> 00:10:42,480
so in this sense we can say that the

278
00:10:42,480 --> 00:10:44,399
snap and chat construction

279
00:10:44,399 --> 00:10:47,920
is optimal snap enchant protocols

280
00:10:47,920 --> 00:10:50,880
employ an almost black box composition

281
00:10:50,880 --> 00:10:51,360
of an

282
00:10:51,360 --> 00:10:53,920
off the shelf longest chain type

283
00:10:53,920 --> 00:10:54,959
protocol

284
00:10:54,959 --> 00:10:57,120
and an off-the-shelf partially

285
00:10:57,120 --> 00:11:00,160
synchronous bft protocol

286
00:11:00,160 --> 00:11:03,360
transactions are first ordered by the

287
00:11:03,360 --> 00:11:04,640
longest chain type

288
00:11:04,640 --> 00:11:07,920
protocol which outputs a ledger of

289
00:11:07,920 --> 00:11:09,279
transactions

290
00:11:09,279 --> 00:11:13,360
represented as a chain of blocks

291
00:11:13,360 --> 00:11:16,320
prefixes of this chain of blocks are

292
00:11:16,320 --> 00:11:18,160
then snapshotted

293
00:11:18,160 --> 00:11:21,920
and input to the partially synchronous

294
00:11:21,920 --> 00:11:23,600
bft protocol

295
00:11:23,600 --> 00:11:26,000
which in turn outputs a chain of

296
00:11:26,000 --> 00:11:26,959
snapshots

297
00:11:26,959 --> 00:11:31,440
that is a chain of chains of blocks

298
00:11:31,440 --> 00:11:34,399
this chain is flattened meaning the

299
00:11:34,399 --> 00:11:35,600
snapshotted chains

300
00:11:35,600 --> 00:11:38,800
are concatenated as they are ordered and

301
00:11:38,800 --> 00:11:41,120
duplicate and invalid transactions are

302
00:11:41,120 --> 00:11:42,640
removed

303
00:11:42,640 --> 00:11:46,399
to obtain the finalized prefix ledger

304
00:11:46,399 --> 00:11:48,880
the finalized prefix ledger is then

305
00:11:48,880 --> 00:11:49,920
prepended

306
00:11:49,920 --> 00:11:52,720
to the output of the longest chain type

307
00:11:52,720 --> 00:11:54,079
protocol

308
00:11:54,079 --> 00:11:56,639
and duplicates and invalid transactions

309
00:11:56,639 --> 00:11:58,320
are again removed

310
00:11:58,320 --> 00:12:01,760
to obtain the available full ledger

311
00:12:01,760 --> 00:12:03,839
to understand the behavior of snap and

312
00:12:03,839 --> 00:12:04,959
chat protocols

313
00:12:04,959 --> 00:12:07,519
let's look at a few examples under

314
00:12:07,519 --> 00:12:09,120
normal operation

315
00:12:09,120 --> 00:12:11,360
that is there is no network partition

316
00:12:11,360 --> 00:12:12,959
there is reasonably high level of

317
00:12:12,959 --> 00:12:14,079
participation

318
00:12:14,079 --> 00:12:16,160
and the adversary controls less than

319
00:12:16,160 --> 00:12:19,040
third of participants

320
00:12:19,040 --> 00:12:21,519
both the longest chain and the partially

321
00:12:21,519 --> 00:12:23,279
synchronous bft protocol

322
00:12:23,279 --> 00:12:26,639
are safe and live transactions enter the

323
00:12:26,639 --> 00:12:28,320
available ledger

324
00:12:28,320 --> 00:12:30,639
once they enter the output ledger of the

325
00:12:30,639 --> 00:12:32,959
longest chain protocol

326
00:12:32,959 --> 00:12:35,839
a future proposal in the bft protocol

327
00:12:35,839 --> 00:12:38,000
will then include a snapshot

328
00:12:38,000 --> 00:12:41,120
to this ledger and hence upgrade the

329
00:12:41,120 --> 00:12:42,079
transaction

330
00:12:42,079 --> 00:12:45,200
into the finalized prefix it usually

331
00:12:45,200 --> 00:12:46,399
will not take long

332
00:12:46,399 --> 00:12:49,120
until transactions that have appeared in

333
00:12:49,120 --> 00:12:50,480
the available ledger

334
00:12:50,480 --> 00:12:52,560
will also enter the growing finalized

335
00:12:52,560 --> 00:12:53,920
prefix

336
00:12:53,920 --> 00:12:56,160
due to a network partition the longest

337
00:12:56,160 --> 00:12:57,120
chain protocol

338
00:12:57,120 --> 00:13:00,560
might temporarily lose safety in that

339
00:13:00,560 --> 00:13:01,120
case

340
00:13:01,120 --> 00:13:03,200
even a longest chain that was once

341
00:13:03,200 --> 00:13:04,800
included in a snapshot

342
00:13:04,800 --> 00:13:08,000
might end up abandoned however the snap

343
00:13:08,000 --> 00:13:09,200
and chat protocol

344
00:13:09,200 --> 00:13:12,240
continues to snapshot the longest chain

345
00:13:12,240 --> 00:13:14,639
and it leaves the reconciliation of the

346
00:13:14,639 --> 00:13:17,040
output of the longest chain protocol

347
00:13:17,040 --> 00:13:20,160
and of the bft protocol to the prefixing

348
00:13:20,160 --> 00:13:21,120
operation

349
00:13:21,120 --> 00:13:23,920
which ensures that the finalized ledger

350
00:13:23,920 --> 00:13:25,279
remains a prefix

351
00:13:25,279 --> 00:13:28,399
of the available ledger finally

352
00:13:28,399 --> 00:13:30,959
if there is no network partitions but

353
00:13:30,959 --> 00:13:33,279
the adversary is strong and controls

354
00:13:33,279 --> 00:13:34,000
between a

355
00:13:34,000 --> 00:13:37,360
third and a half of participants

356
00:13:37,360 --> 00:13:39,680
then the partially synchronous bft

357
00:13:39,680 --> 00:13:40,560
protocol

358
00:13:40,560 --> 00:13:44,079
might not be safe or alive but

359
00:13:44,079 --> 00:13:46,560
the longest chain keeps growing and with

360
00:13:46,560 --> 00:13:47,120
it does

361
00:13:47,120 --> 00:13:50,160
the available ledger also since the

362
00:13:50,160 --> 00:13:52,000
longest chain is safe

363
00:13:52,000 --> 00:13:55,040
all snapshots are consistent and so

364
00:13:55,040 --> 00:13:57,680
no safety violation can be introduced

365
00:13:57,680 --> 00:13:59,519
into the finalized prefix

366
00:13:59,519 --> 00:14:02,800
or into the available ledger besides

367
00:14:02,800 --> 00:14:03,680
security

368
00:14:03,680 --> 00:14:05,440
snap and chat protocols have the

369
00:14:05,440 --> 00:14:07,199
following advantages

370
00:14:07,199 --> 00:14:09,279
since they are an almost black box

371
00:14:09,279 --> 00:14:10,320
construction

372
00:14:10,320 --> 00:14:13,199
from off-the-shelf sub-protocols the

373
00:14:13,199 --> 00:14:14,399
security analysis

374
00:14:14,399 --> 00:14:17,600
is relatively simple and modular

375
00:14:17,600 --> 00:14:20,240
since the community continues to improve

376
00:14:20,240 --> 00:14:21,760
dynamically available

377
00:14:21,760 --> 00:14:24,320
and partially synchronous bft protocols

378
00:14:24,320 --> 00:14:26,079
snap and chat protocols

379
00:14:26,079 --> 00:14:28,399
are future proof in the sense that they

380
00:14:28,399 --> 00:14:29,360
can benefit

381
00:14:29,360 --> 00:14:32,560
from future developments finally

382
00:14:32,560 --> 00:14:34,639
snap and chat protocols can inherit

383
00:14:34,639 --> 00:14:37,360
features from the constituent protocols

384
00:14:37,360 --> 00:14:40,320
for their output ledgers for example

385
00:14:40,320 --> 00:14:40,880
using

386
00:14:40,880 --> 00:14:43,519
an accountable partially synchronous bft

387
00:14:43,519 --> 00:14:44,399
protocol

388
00:14:44,399 --> 00:14:47,040
yields a snap and chat protocol with an

389
00:14:47,040 --> 00:14:49,920
accountable finalized ledger

390
00:14:49,920 --> 00:14:53,040
a drawback of snap and chat protocols

391
00:14:53,040 --> 00:14:55,519
is that participants in the long list

392
00:14:55,519 --> 00:14:56,639
chain protocol

393
00:14:56,639 --> 00:14:59,279
cannot always determine at the time of

394
00:14:59,279 --> 00:15:00,720
block production

395
00:15:00,720 --> 00:15:03,680
whether a transaction will ultimately be

396
00:15:03,680 --> 00:15:04,880
considered valid

397
00:15:04,880 --> 00:15:08,000
and can enter the ledger or not

398
00:15:08,000 --> 00:15:10,560
this interferes with many common

399
00:15:10,560 --> 00:15:11,360
approaches

400
00:15:11,360 --> 00:15:14,320
to support light clients and charting

401
00:15:14,320 --> 00:15:16,399
but it has been addressed in subsequent

402
00:15:16,399 --> 00:15:18,160
works

403
00:15:18,160 --> 00:15:21,040
for more information check out the paper

404
00:15:21,040 --> 00:15:21,440
or

405
00:15:21,440 --> 00:15:24,399
our high level blog post on this topic

406
00:15:24,399 --> 00:15:24,800
or

407
00:15:24,800 --> 00:15:27,199
our detailed description of the attack

408
00:15:27,199 --> 00:15:28,240
on gasper

409
00:15:28,240 --> 00:15:31,440
on east research

