1
00:00:00,500 --> 00:00:01,500
Hello everyone

2
00:00:01,500 --> 00:00:02,500
this is Penghui

3
00:00:02,500 --> 00:00:05,540
I am a PhD candidate in Arizona State University

4
00:00:05,540 --> 00:00:08,920
Today I am really happy to present our work

5
00:00:08,920 --> 00:00:09,920
CrawlPhish

6
00:00:09,920 --> 00:00:14,299
analyzing client-side cloaking in phishing websites

7
00:00:14,299 --> 00:00:15,420
Large scale Phishing is still

8
00:00:15,420 --> 00:00:17,850
a threat to the Internet users

9
00:00:17,850 --> 00:00:20,400
Attackers design phishing websites

10
00:00:20,400 --> 00:00:23,229
which impersonate legitimate organization ones

11
00:00:23,230 --> 00:00:25,480
such as PayPal and Facebook

12
00:00:25,480 --> 00:00:28,289
and distribute those malicious websites

13
00:00:28,289 --> 00:00:31,320
to targeted groups of people

14
00:00:31,320 --> 00:00:33,360
Some may be tricked by the fake websites

15
00:00:33,360 --> 00:00:36,800
and hand over their credentials to phishers

16
00:00:36,800 --> 00:00:38,370
And phishers can monetize

17
00:00:38,370 --> 00:00:43,610
from the legit organizations using the stolen login info

18
00:00:43,610 --> 00:00:45,330
It causes damages to

19
00:00:45,330 --> 00:00:48,220
both users and the organizations

20
00:00:48,220 --> 00:00:49,960
The anti-phishing ecosystem

21
00:00:49,960 --> 00:00:54,739
has been making joint efforts to mitigate phishing attacks

22
00:00:54,739 --> 00:00:57,149
Blacklist based anti-phishing systems

23
00:00:57,149 --> 00:00:58,559
like Google Safe Browsing

24
00:00:58,559 --> 00:01:00,370
and Microsoft SmartScreen

25
00:01:00,370 --> 00:01:03,849
use content and URL features to detect phishing

26
00:01:03,850 --> 00:01:08,380
When users visit a phishing website in the blacklist

27
00:01:08,380 --> 00:01:10,070
they will see a warning sign

28
00:01:10,070 --> 00:01:13,399
before the malicious webpage content

29
00:01:13,400 --> 00:01:15,771
However according to Google transparency report

30
00:01:15,771 --> 00:01:20,840
the number of malware websites decreased significantly

31
00:01:20,840 --> 00:01:23,080
while phishing is on the rise

32
00:01:23,080 --> 00:01:26,479
It indicates that phishing could be more prevalent

33
00:01:26,479 --> 00:01:28,970
than malware attacks over time

34
00:01:28,970 --> 00:01:31,900
The increasing number of phishing attacks nowadays

35
00:01:31,900 --> 00:01:35,650
is still hurting the whole ecosystem

36
00:01:35,650 --> 00:01:37,759
Some attackers implement cloaking

37
00:01:37,759 --> 00:01:41,130
to hide their maliciousness to anti-phishing crawlers

38
00:01:41,130 --> 00:01:43,619
and reveal phishing content to real people

39
00:01:43,620 --> 00:01:45,790
In this example

40
00:01:45,790 --> 00:01:49,049
phishers encode HTML in morse code nowadays

41
00:01:49,049 --> 00:01:52,340
to hide malicious URLs

42
00:01:52,340 --> 00:01:55,880
Therefore browsers that support JavaScript execution

43
00:01:55,880 --> 00:01:58,110
can see the phishing content

44
00:01:58,110 --> 00:02:01,270
For browsers that don’t execute JavaScript

45
00:02:01,270 --> 00:02:03,679
the content will not show

46
00:02:03,680 --> 00:02:05,030
In another example

47
00:02:05,030 --> 00:02:06,369
phishers know that

48
00:02:06,369 --> 00:02:10,610
real people use mouse and move the mouse over the browser

49
00:02:10,610 --> 00:02:12,970
So they detect anti-phishing crawlers

50
00:02:12,970 --> 00:02:13,970
using this feature

51
00:02:13,970 --> 00:02:16,040
When an anti-phishing crawler

52
00:02:16,040 --> 00:02:17,859
tries to visit a phishing URL

53
00:02:17,860 --> 00:02:20,220
It shows a benign looking web page

54
00:02:20,220 --> 00:02:21,620
because the website knows

55
00:02:21,620 --> 00:02:25,530
that there is no mouse or no mouse movement over the browser

56
00:02:25,530 --> 00:02:28,040
When a real user visits it

57
00:02:28,040 --> 00:02:30,140
and moves the mouse over the browser

58
00:02:30,140 --> 00:02:33,790
A web page with real phishing content will show

59
00:02:33,790 --> 00:02:38,609
Previous work has made efforts to mitigate cloaking

60
00:02:38,610 --> 00:02:41,470
This work showed that cloaking techniques

61
00:02:41,470 --> 00:02:44,490
including both server and client side cloaking technique

62
00:02:44,490 --> 00:02:47,250
can effectively bypass detection

63
00:02:47,250 --> 00:02:49,599
by anti-phishing blacklists

64
00:02:49,599 --> 00:02:52,920
Another work analyzed server-side cloaking techniques

65
00:02:52,920 --> 00:02:55,660
and proposed five different types of cloaking

66
00:02:55,660 --> 00:02:59,180
However the nature and prevalence of

67
00:02:59,180 --> 00:03:01,580
advanced client side cloaking techniques

68
00:03:01,580 --> 00:03:03,480
implemented in JavaScript

69
00:03:03,480 --> 00:03:05,238
is poorly understood

70
00:03:05,239 --> 00:03:08,739
Client-side cloaking can be very dangerous

71
00:03:08,739 --> 00:03:11,129
because it enables the implementation of

72
00:03:11,129 --> 00:03:15,659
complex interactions with potential victims

73
00:03:15,659 --> 00:03:17,079
Therefore in CrawlPhish

74
00:03:17,080 --> 00:03:18,640
we try to detect phishing

75
00:03:18,640 --> 00:03:21,119
with client side cloaking

76
00:03:21,120 --> 00:03:24,590
To this end we need to design an automated framework

77
00:03:24,590 --> 00:03:27,349
to analyze advanced phishing code

78
00:03:27,349 --> 00:03:29,619
Then we can categorize the cloaking types

79
00:03:29,620 --> 00:03:32,930
and measure the impact of the cloaked phishing websites

80
00:03:32,930 --> 00:03:35,720
to better protect the ecosystem

81
00:03:35,720 --> 00:03:36,970
Now let’s take a look at

82
00:03:36,970 --> 00:03:39,069
the framework of CrawlPhish

83
00:03:39,069 --> 00:03:41,890
To analyze sophisticated phishing sites

84
00:03:41,890 --> 00:03:46,440
we leverage APWG eCrime Exchange database

85
00:03:46,440 --> 00:03:49,709
a curated clearinghouse of phishing URLs

86
00:03:49,709 --> 00:03:51,930
maintained by various organizations

87
00:03:51,930 --> 00:03:54,980
engaged in anti-phishing

88
00:03:54,980 --> 00:03:57,869
and crawl phishing data with web page source code

89
00:03:57,870 --> 00:04:00,989
and its screenshot for each link

90
00:04:00,989 --> 00:04:02,989
To identify whether the phishing websites

91
00:04:02,989 --> 00:04:05,519
contain client-side cloaking techniques

92
00:04:05,519 --> 00:04:07,939
which is implemented in JavaScript

93
00:04:07,939 --> 00:04:09,939
we need to focus on JavaScript

94
00:04:09,939 --> 00:04:11,939
included in the website

95
00:04:11,939 --> 00:04:16,339
However JavaScript is difficult to inspect manually

96
00:04:16,339 --> 00:04:21,518
due to its obfuscation and syntax complexity

97
00:04:21,519 --> 00:04:25,190
Therefore we leverage a Javascript force-execution engine

98
00:04:25,190 --> 00:04:29,810
which can dynamically execute JavaScript snippets of a website

99
00:04:29,810 --> 00:04:33,030
and find all possible web page contents

100
00:04:33,030 --> 00:04:36,369
Then the original webpages and the force-executed pages

101
00:04:36,370 --> 00:04:38,419
are sent to the analysis engine

102
00:04:38,419 --> 00:04:40,250
We compare the similarity

103
00:04:40,250 --> 00:04:44,090
between the original webpage and the force-executed page

104
00:04:44,090 --> 00:04:47,049
in terms of source code and screenshot similarity

105
00:04:47,050 --> 00:04:52,130
Filter out phishing sites with same forced execution result

106
00:04:52,130 --> 00:04:54,580
The remaining ones are the phishing sites

107
00:04:54,580 --> 00:04:57,750
with advanced client-side cloaking techniques

108
00:04:57,750 --> 00:05:00,960
We also extract the cloaks from such websites

109
00:05:00,960 --> 00:05:03,310
in terms of semantic meaning such as

110
00:05:03,310 --> 00:05:05,840
mouse detection or pop-up alert

111
00:05:05,840 --> 00:05:09,489
And finally analyze the cloaking implementation code

112
00:05:09,490 --> 00:05:13,610
to extract web API calls and web events

113
00:05:13,610 --> 00:05:17,660
and record them into the client-side cloaking technique database

114
00:05:17,660 --> 00:05:19,380
with the semantic type

115
00:05:19,380 --> 00:05:23,780
Based on CrawlPhish architecture and the APWG dataset

116
00:05:23,780 --> 00:05:25,619
we group the client-side cloaking techniques

117
00:05:25,620 --> 00:05:28,560
into 3 high-level categories

118
00:05:28,560 --> 00:05:30,590
The first is user interaction

119
00:05:30,590 --> 00:05:32,469
which shows phishing content

120
00:05:32,470 --> 00:05:36,630
only if visitors interact with a phishing website

121
00:05:36,630 --> 00:05:38,930
This category contains 3 types

122
00:05:38,930 --> 00:05:43,500
including Pop-up, Mouse Detection, and Click Through

123
00:05:43,500 --> 00:05:46,410
For example in Pop-up cloaking technique

124
00:05:46,410 --> 00:05:48,080
the alert window in this website

125
00:05:48,080 --> 00:05:50,030
prevents real phishing content

126
00:05:50,030 --> 00:05:53,130
from displaying before click

127
00:05:53,130 --> 00:05:55,870
After the visitor click the “OK” button

128
00:05:55,870 --> 00:05:59,330
real phishing web page content will show

129
00:05:59,330 --> 00:06:01,099
There is an advanced version of

130
00:06:01,100 --> 00:06:03,430
pop-up cloaking implementation

131
00:06:03,430 --> 00:06:06,370
Because an alert window can be easily closed

132
00:06:06,370 --> 00:06:09,590
through automated browsers like Selenium

133
00:06:09,590 --> 00:06:14,789
some phishers instead use the Web Notification API

134
00:06:14,790 --> 00:06:18,250
But at the time we ran the experiments for CrawlPhish

135
00:06:18,250 --> 00:06:20,810
the automated browsers did not support

136
00:06:20,810 --> 00:06:23,620
interactions with notification window

137
00:06:23,620 --> 00:06:27,300
which makes the cloaking technique very hard to bypass

138
00:06:27,300 --> 00:06:30,729
Now one study successfully resolves the problem

139
00:06:30,729 --> 00:06:32,310
so that the automated browsers

140
00:06:32,310 --> 00:06:35,240
can handle notification window click

141
00:06:35,240 --> 00:06:36,870
Phishers use an instructive web page

142
00:06:36,870 --> 00:06:41,630
to lead visitors to click the button on the notification window

143
00:06:41,630 --> 00:06:43,860
As an added benefit to attackers

144
00:06:43,860 --> 00:06:46,960
cloaked phishing websites could also directly

145
00:06:46,960 --> 00:06:50,508
send spam to visitors through their browsers

146
00:06:50,509 --> 00:06:53,139
Through this we show that criminals are using

147
00:06:53,139 --> 00:06:58,259
cutting-edge browser features to evade existing detection systems

148
00:06:58,259 --> 00:07:01,610
In the second category phishing websites with Bot Behavior

149
00:07:01,610 --> 00:07:04,919
identify anti-phishing crawlers based on factors

150
00:07:04,919 --> 00:07:08,109
like how long the web page stays open

151
00:07:08,110 --> 00:07:10,140
Or whether the web request is

152
00:07:10,140 --> 00:07:12,539
repeated after failing initially

153
00:07:12,539 --> 00:07:14,960
This technique includes subtypes

154
00:07:14,960 --> 00:07:17,698
such as timing and randomization

155
00:07:17,699 --> 00:07:20,130
In timing cloaking for example

156
00:07:20,130 --> 00:07:21,800
phishing website with such cloak

157
00:07:21,800 --> 00:07:23,990
deliberately waits from several seconds

158
00:07:23,990 --> 00:07:30,110
Meanwhile, the “Click here to login” button is unavailable for visitors

159
00:07:30,110 --> 00:07:33,770
After the waiting time, the button is available 

160
00:07:33,770 --> 00:07:35,940
And when visitors click through

161
00:07:35,940 --> 00:07:39,190
they will see phishing content behind

162
00:07:39,190 --> 00:07:41,020
Phishing websites with Fingerprinting

163
00:07:41,020 --> 00:07:42,580
which is the third category

164
00:07:42,580 --> 00:07:44,870
identify visitors by inspecting the

165
00:07:44,870 --> 00:07:47,860
configuration of browsers or web requests

166
00:07:47,860 --> 00:07:50,949
It contains subtypes such as

167
00:07:50,949 --> 00:07:54,020
Cookie, Referrer, and User-Agent

168
00:07:54,020 --> 00:07:56,080
We group similar implementations of

169
00:07:56,080 --> 00:07:58,650
each cloaking type to track the origin

170
00:07:58,650 --> 00:08:03,378
and evolution of each client side cloaking technique

171
00:08:03,379 --> 00:08:06,440
This CDF of unique implementation groups

172
00:08:06,440 --> 00:08:09,356
shows that 20% of the groups

173
00:08:09,356 --> 00:08:12,662
account for 74% of all phishing websites

174
00:08:12,662 --> 00:08:16,688
In other words a small number of reused cloaking code

175
00:08:16,689 --> 00:08:20,620
is likely responsible for a significant proportion of

176
00:08:20,620 --> 00:08:23,752
sophisticated phishing websites in the wild

177
00:08:23,752 --> 00:08:27,306
We also discover that all cloaking techniques

178
00:08:27,306 --> 00:08:29,988
were implemented in phishing in 2018

179
00:08:29,988 --> 00:08:33,692
The CrawlPhish framework was proposed in 2020

180
00:08:33,692 --> 00:08:36,091
which is already the first study

181
00:08:36,091 --> 00:08:38,868
analyzing client-side cloaking in phishing

182
00:08:38,868 --> 00:08:41,698
It reminds us that phishers are trying to

183
00:08:41,698 --> 00:08:45,889
stay one step ahead of the anti-phishing ecosystem

184
00:08:45,889 --> 00:08:49,367
We suspect that those client-side cloaking techniques

185
00:08:49,367 --> 00:08:53,349
may have already been employed well before June 2018

186
00:08:53,350 --> 00:08:58,477
which is the start time of CrawlPhish's crawling process

187
00:08:58,477 --> 00:09:03,122
We also observe the evolution of cloaking techniques

188
00:09:03,123 --> 00:09:06,095
from the perspective of obfuscation

189
00:09:06,095 --> 00:09:08,618
From the crawling process we found that

190
00:09:08,618 --> 00:09:12,193
the code obfuscation rate on phishing websites

191
00:09:12,193 --> 00:09:16,468
increased from 21% in 2018 to 24% in 2019

192
00:09:17,694 --> 00:09:20,762
For example for the Pop-up cloaking technique

193
00:09:20,762 --> 00:09:25,371
the earliest variant from June 2018 was not obfuscated

194
00:09:25,371 --> 00:09:29,113
Gradually phishers started to obfuscate their

195
00:09:29,113 --> 00:09:31,113
cloaking technique implementations

196
00:09:31,149 --> 00:09:35,709
In October 2018 they added an encoding

197
00:09:35,709 --> 00:09:39,500
algorithm to obfuscate the javascript snippets

198
00:09:39,500 --> 00:09:42,630
From this finding cybercriminals are improving

199
00:09:42,630 --> 00:09:45,029
client-side cloaking techniques in phishing

200
00:09:45,029 --> 00:09:49,149
to make the latest implementations more difficult to analyze

201
00:09:49,149 --> 00:09:53,350
But this obstacle can be conquered through CrawlPhish

202
00:09:53,350 --> 00:09:57,779
It can forced-execute the obfuscated JavaScript snippets

203
00:09:57,779 --> 00:10:01,209
and reveal all possible web page content behind the code

204
00:10:01,209 --> 00:10:05,270
As for the trend of cloaking technique usage

205
00:10:05,270 --> 00:10:08,910
according to the analysis with CrawlPhish and the crawled dataset

206
00:10:08,910 --> 00:10:11,250
cloaking implementations in phishing grew

207
00:10:11,250 --> 00:10:17,620
significantly from 23% in 2018 to 34% in 2019

208
00:10:17,620 --> 00:10:22,230
we believe this is mainly because it increases phishers profitability

209
00:10:22,230 --> 00:10:24,229
or because improving detection systems

210
00:10:24,229 --> 00:10:27,783
make advanced evasion necessary

211
00:10:29,075 --> 00:10:34,760
The figure here shows the trend for each cloaking category from 2018 to 2019

212
00:10:34,760 --> 00:10:41,209
The usage ratio of the Fingerprinting category over two years is almost the same

213
00:10:41,209 --> 00:10:43,290
Within the Bot Behavior category

214
00:10:43,290 --> 00:10:48,439
the usage ratio dropped significantly from 40% to 21%

215
00:10:48,440 --> 00:10:52,140
Usage of User Interaction cloaking category

216
00:10:52,140 --> 00:10:56,470
increases significantly from 2018 to 2019

217
00:10:56,470 --> 00:10:59,030
We believe that this is because it is more

218
00:10:59,030 --> 00:11:01,279
difficult for anti-phishing crawlers

219
00:11:01,279 --> 00:11:03,600
to impersonate human behaviors

220
00:11:03,600 --> 00:11:07,510
than to bypass other types of cloaking

221
00:11:07,510 --> 00:11:10,410
We have thus far shown that phishing websites

222
00:11:10,410 --> 00:11:14,530
make extensive use of client-side cloaking techniques

223
00:11:14,530 --> 00:11:17,220
We still need to discover whether it is worth for

224
00:11:17,220 --> 00:11:21,190
phishers to implement such evasion in the website

225
00:11:21,190 --> 00:11:23,050
By resolving these two problems

226
00:11:23,050 --> 00:11:28,430
First, Can these techniques truly evade detection by anti-phishing systems?

227
00:11:28,430 --> 00:11:31,589
Second, Do they generally let victims in?

228
00:11:31,589 --> 00:11:33,769
we will know the answer

229
00:11:33,769 --> 00:11:35,500
To answer the first question

230
00:11:35,500 --> 00:11:38,950
We first deployed 150 artificial phishing websites

231
00:11:38,950 --> 00:11:40,589
with user interaction cloaking

232
00:11:40,589 --> 00:11:44,170
and reported them to key browser vendors

233
00:11:44,170 --> 00:11:46,510
We found that none of the phishing websites

234
00:11:46,510 --> 00:11:49,140
were blacklisted in any browser

235
00:11:49,140 --> 00:11:51,189
Except Click Through websites

236
00:11:51,190 --> 00:11:55,350
21 of them were blocked in Microsoft Edge

237
00:11:55,350 --> 00:11:59,160
with a median of 3 hours after we reported them

238
00:11:59,160 --> 00:12:01,899
The detection occurred because Microsoft

239
00:12:01,899 --> 00:12:05,160
SmartScreen classified the obfuscation in the JavaScript

240
00:12:05,160 --> 00:12:06,980
source code as malware

241
00:12:06,980 --> 00:12:11,089
not because it could bypass the cloaking technique itself

242
00:12:11,089 --> 00:12:12,730
For the second question

243
00:12:12,730 --> 00:12:15,700
we want to show that those cloaking techniques do not

244
00:12:15,700 --> 00:12:18,130
impact negatively for real people

245
00:12:18,130 --> 00:12:21,180
So we generated three websites

246
00:12:21,180 --> 00:12:25,810
hiding a “Hello World” text behind 3 types
of User Interaction cloaking

247
00:12:25,810 --> 00:12:29,219
and then hire 1000 workers to report what

248
00:12:29,220 --> 00:12:33,540
they saw after visiting each websites

249
00:12:33,540 --> 00:12:34,540
According to the result

250
00:12:34,540 --> 00:12:38,930
mouse detection and click through technique
do not impact negatively

251
00:12:38,930 --> 00:12:41,229
showing  hidden content to real visitors

252
00:12:41,230 --> 00:12:45,240
but only 43% of the users saw the text behind

253
00:12:45,240 --> 00:12:48,560
the Notification Window cloaking technique

254
00:12:48,560 --> 00:12:50,839
Notification window is still useful in phishing

255
00:12:50,839 --> 00:12:54,079
mainly because it is extremely hard to be bypassed

256
00:12:54,079 --> 00:12:57,779
even though fewer people can see the content behind

257
00:12:57,779 --> 00:12:59,630
From all the analysis above

258
00:12:59,630 --> 00:13:03,320
we suggest first the anti-phishing crawlers should match

259
00:13:03,320 --> 00:13:07,570
the behaviors that sophisticated phishing kits expect

260
00:13:07,570 --> 00:13:11,389
Furthermore the ecosystem can implement the

261
00:13:11,389 --> 00:13:13,709
CrawlPhish framework to the existing crawlers

262
00:13:13,709 --> 00:13:17,609
to better detect advanced phishing attacks

263
00:13:17,610 --> 00:13:20,270
We also disclosed our findings to the

264
00:13:20,270 --> 00:13:22,470
major anti-phishing blacklist operators

265
00:13:22,470 --> 00:13:25,649
Google, Microsoft, and Opera

266
00:13:25,649 --> 00:13:29,290
All companies acknowledged receipt of the disclosure

267
00:13:29,290 --> 00:13:32,199
Google followed up by requesting more information

268
00:13:32,200 --> 00:13:35,440
on the semantics and prevalence of the cloaking techniques

269
00:13:35,440 --> 00:13:38,090
and agreed with the finding that

270
00:13:38,090 --> 00:13:41,279
such techniques could potentially bypass detection

271
00:13:41,279 --> 00:13:44,320
by current automated anti-phishing systems.

272
00:13:45,152 --> 00:13:47,602
In summary, we designed CrawlPhish 

273
00:13:47,602 --> 00:13:51,759
to detect and evaluate client-side evasions in phishing automatically

274
00:13:52,398 --> 00:13:55,559
and showed that such evasions are very prevalent

275
00:13:56,120 --> 00:13:57,260
With crawlphish

276
00:13:57,260 --> 00:14:03,589
we detected and proposed 8 types of evasion across 3 high-level categories

277
00:14:03,589 --> 00:14:07,199
We also found small groups of reused phishing code

278
00:14:07,199 --> 00:14:12,540
accounted for large portion of cloaked phishing websites in the wild

279
00:14:12,541 --> 00:14:15,139
We also disclosed the work to the ecosystem

280
00:14:15,139 --> 00:14:18,389
and hence it improved the ability of ecosystem

281
00:14:18,389 --> 00:14:21,250
to detect phishing with client-side cloaking

282
00:14:21,250 --> 00:14:23,910
Thank you for listening to my presentation

283
00:14:23,910 --> 00:14:26,959
And I will be happy to take any questions

284
00:14:26,959 --> 00:14:27,459
Thank you

