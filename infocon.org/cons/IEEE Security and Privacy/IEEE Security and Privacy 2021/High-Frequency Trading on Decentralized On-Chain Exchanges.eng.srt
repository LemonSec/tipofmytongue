1
00:00:11,040 --> 00:00:11,679
hi

2
00:00:11,679 --> 00:00:14,559
my name is lee icho a phd student from

3
00:00:14,559 --> 00:00:16,079
imperial college london

4
00:00:16,079 --> 00:00:17,840
i'm here to talk about high frequency

5
00:00:17,840 --> 00:00:19,760
trading on decentralized enchanting

6
00:00:19,760 --> 00:00:20,960
exchanges

7
00:00:20,960 --> 00:00:23,279
this work is joined with kai fighting

8
00:00:23,279 --> 00:00:24,720
christopher torres

9
00:00:24,720 --> 00:00:28,320
dukley and other durbay

10
00:00:28,320 --> 00:00:30,720
so why do we need a ducks there are

11
00:00:30,720 --> 00:00:32,558
typically two types of actors

12
00:00:32,558 --> 00:00:34,960
in an exchange namely the liquidity

13
00:00:34,960 --> 00:00:35,760
provider

14
00:00:35,760 --> 00:00:38,000
which is alice and the liquidity taker

15
00:00:38,000 --> 00:00:39,360
which is bob

16
00:00:39,360 --> 00:00:41,920
for traditional exchanges if alice and

17
00:00:41,920 --> 00:00:43,600
bob wants to make a trade

18
00:00:43,600 --> 00:00:45,760
they need to both trust a centralized

19
00:00:45,760 --> 00:00:47,120
service provider

20
00:00:47,120 --> 00:00:49,520
and this centralized entity executes the

21
00:00:49,520 --> 00:00:51,520
trade on their behalf

22
00:00:51,520 --> 00:00:53,360
this is how things would work if

23
00:00:53,360 --> 00:00:55,360
everything goes as planned

24
00:00:55,360 --> 00:00:57,680
but there are other possibilities for

25
00:00:57,680 --> 00:01:00,000
example if the exchange is hacked

26
00:01:00,000 --> 00:01:03,199
then these assets are lost

27
00:01:03,840 --> 00:01:05,920
so how do we solve this problem

28
00:01:05,920 --> 00:01:07,600
decentralized exchanges

29
00:01:07,600 --> 00:01:10,479
or taxes allow different actors to

30
00:01:10,479 --> 00:01:12,880
participate in financial markets

31
00:01:12,880 --> 00:01:14,880
while returning full custody of their

32
00:01:14,880 --> 00:01:16,400
funds

33
00:01:16,400 --> 00:01:18,240
it relies on the underlying blockchain

34
00:01:18,240 --> 00:01:19,840
to clear the trades

35
00:01:19,840 --> 00:01:21,680
the price discovery and the trade

36
00:01:21,680 --> 00:01:24,640
matching are encoded in smart contracts

37
00:01:24,640 --> 00:01:26,960
the logic within the smart contract is

38
00:01:26,960 --> 00:01:28,720
completely transparent

39
00:01:28,720 --> 00:01:30,640
and anyone can check that the smart

40
00:01:30,640 --> 00:01:34,720
contract is executed correctly

41
00:01:35,680 --> 00:01:38,159
over the last year we have observed a

42
00:01:38,159 --> 00:01:38,960
dramatic

43
00:01:38,960 --> 00:01:41,119
increase in the trading volume of the

44
00:01:41,119 --> 00:01:43,360
decentralized exchanges

45
00:01:43,360 --> 00:01:45,759
as we can see in this slide the trading

46
00:01:45,759 --> 00:01:47,040
volume increased

47
00:01:47,040 --> 00:01:49,759
from under 1 billion us dollars to more

48
00:01:49,759 --> 00:01:50,799
than 50 billion

49
00:01:50,799 --> 00:01:53,920
within a single year this trading volume

50
00:01:53,920 --> 00:01:55,680
is already significant

51
00:01:55,680 --> 00:01:57,360
even when compared with the most

52
00:01:57,360 --> 00:02:00,560
successful centralized exchanges

53
00:02:00,560 --> 00:02:03,920
for example on april the 22nd the total

54
00:02:03,920 --> 00:02:06,000
debt trading volume is already more than

55
00:02:06,000 --> 00:02:07,759
seven percent of binance

56
00:02:07,759 --> 00:02:10,399
and one point four percent of nasdaq so

57
00:02:10,399 --> 00:02:11,200
given this

58
00:02:11,200 --> 00:02:14,160
incredible high trading volume one major

59
00:02:14,160 --> 00:02:15,120
question is

60
00:02:15,120 --> 00:02:16,959
does high frequency trading work on

61
00:02:16,959 --> 00:02:19,040
decentralized exchanges

62
00:02:19,040 --> 00:02:21,599
and can the market be manipulated to

63
00:02:21,599 --> 00:02:24,640
attack the traders

64
00:02:25,120 --> 00:02:28,160
the answer is yes on blockchain-based

65
00:02:28,160 --> 00:02:29,920
decentralized exchanges

66
00:02:29,920 --> 00:02:33,440
transactions are executed by the miners

67
00:02:33,440 --> 00:02:35,680
the traders however are typically not

68
00:02:35,680 --> 00:02:39,519
directly connected with the miners

69
00:02:39,599 --> 00:02:41,920
therefore in order to let the miners

70
00:02:41,920 --> 00:02:44,000
know about their transactions

71
00:02:44,000 --> 00:02:45,680
traders need to broadcast the

72
00:02:45,680 --> 00:02:51,680
transactions over the public p2p network

73
00:02:51,680 --> 00:02:53,920
the miners have a local transaction

74
00:02:53,920 --> 00:02:55,120
pending queue

75
00:02:55,120 --> 00:02:57,519
also known as the mampoo which stores

76
00:02:57,519 --> 00:02:59,200
the transactions it receives

77
00:02:59,200 --> 00:03:02,400
over the p2p network so once the

78
00:03:02,400 --> 00:03:04,400
trader's transaction is received

79
00:03:04,400 --> 00:03:08,480
it will be added into this manpool

80
00:03:09,360 --> 00:03:12,239
every round a miner will be elected

81
00:03:12,239 --> 00:03:14,080
which orders the transactions

82
00:03:14,080 --> 00:03:16,879
and generate the next block since

83
00:03:16,879 --> 00:03:18,640
permissionless blockchains are open

84
00:03:18,640 --> 00:03:19,200
source

85
00:03:19,200 --> 00:03:20,879
the default transaction ordering

86
00:03:20,879 --> 00:03:22,480
strategy is known

87
00:03:22,480 --> 00:03:26,239
to everyone ethereum miners for example

88
00:03:26,239 --> 00:03:29,599
by default orders transactions based on

89
00:03:29,599 --> 00:03:31,599
transaction fees paid per unit of

90
00:03:31,599 --> 00:03:33,040
computation

91
00:03:33,040 --> 00:03:35,519
the attacker can follow the same rules

92
00:03:35,519 --> 00:03:37,280
and then place its own

93
00:03:37,280 --> 00:03:39,599
transactions right before or right after

94
00:03:39,599 --> 00:03:46,000
the victim's transaction

95
00:03:46,000 --> 00:03:48,319
in more detail in order to manipulate

96
00:03:48,319 --> 00:03:49,680
the transaction order

97
00:03:49,680 --> 00:03:51,920
the attacker needs to connect to as many

98
00:03:51,920 --> 00:03:53,120
nodes as possible

99
00:03:53,120 --> 00:03:55,439
to gain speed advantage on the network

100
00:03:55,439 --> 00:03:57,680
layer

101
00:03:58,239 --> 00:04:00,560
this is because the spy node aims to

102
00:04:00,560 --> 00:04:01,360
broadcast

103
00:04:01,360 --> 00:04:03,599
its own transactions to the miners

104
00:04:03,599 --> 00:04:05,360
before the victim's transaction is

105
00:04:05,360 --> 00:04:06,720
executed

106
00:04:06,720 --> 00:04:10,000
so the earlier the adversary detects the

107
00:04:10,000 --> 00:04:11,120
transaction

108
00:04:11,120 --> 00:04:15,280
the more time it has to react

109
00:04:15,280 --> 00:04:17,680
for instance the attackers can perform

110
00:04:17,680 --> 00:04:18,959
front-running

111
00:04:18,959 --> 00:04:21,358
in the optimal scenario the adversary

112
00:04:21,358 --> 00:04:23,280
detects the victim's transaction

113
00:04:23,280 --> 00:04:25,440
before the miner even receives the

114
00:04:25,440 --> 00:04:26,800
transaction

115
00:04:26,800 --> 00:04:29,199
then the adversary issues a transaction

116
00:04:29,199 --> 00:04:31,440
with a higher transaction fee price

117
00:04:31,440 --> 00:04:33,600
and broadcasts both the victim's

118
00:04:33,600 --> 00:04:34,639
transaction

119
00:04:34,639 --> 00:04:36,720
and its own transaction on the p2p

120
00:04:36,720 --> 00:04:39,120
network

121
00:04:40,479 --> 00:04:42,560
the attacker can also perform background

122
00:04:42,560 --> 00:04:44,960
in transaction and backgrounding attacks

123
00:04:44,960 --> 00:04:47,600
in this scenario the optimal strategy is

124
00:04:47,600 --> 00:04:49,360
to configure the same transaction

125
00:04:49,360 --> 00:04:53,360
fee price then the adversary

126
00:04:53,360 --> 00:04:55,360
sends the background in transaction

127
00:04:55,360 --> 00:04:57,600
immediately after the victim transfer

128
00:04:57,600 --> 00:05:01,199
victim's transaction to the miner

129
00:05:03,440 --> 00:05:06,000
in this paper we focus on one specific

130
00:05:06,000 --> 00:05:06,560
type

131
00:05:06,560 --> 00:05:09,600
of aim of taxes called

132
00:05:09,600 --> 00:05:12,880
automated market maker dex or amm

133
00:05:12,880 --> 00:05:16,080
amm dax relies on smart contracts

134
00:05:16,080 --> 00:05:19,840
um to prove to accumulate liquidities

135
00:05:19,840 --> 00:05:22,160
there is the liquidity provider which is

136
00:05:22,160 --> 00:05:23,440
alex

137
00:05:23,440 --> 00:05:26,400
who provides both sfx and y into the

138
00:05:26,400 --> 00:05:27,919
liquidity pool

139
00:05:27,919 --> 00:05:30,400
and there is the liquidity taker who

140
00:05:30,400 --> 00:05:31,759
sells asset x

141
00:05:31,759 --> 00:05:39,199
plus fees to alice for sfy

142
00:05:39,199 --> 00:05:42,240
so the idea is

143
00:05:42,240 --> 00:05:44,880
to let a smart contract to do the market

144
00:05:44,880 --> 00:05:45,840
making

145
00:05:45,840 --> 00:05:49,039
the simplest amm mechanism is a constant

146
00:05:49,039 --> 00:05:50,720
product market maker

147
00:05:50,720 --> 00:05:53,360
which keeps the product x times y as a

148
00:05:53,360 --> 00:05:54,400
constant

149
00:05:54,400 --> 00:05:58,000
for a given asset pair this pricing

150
00:05:58,000 --> 00:05:58,800
formula has

151
00:05:58,800 --> 00:06:02,000
three properties firstly it offers

152
00:06:02,000 --> 00:06:04,479
instant liquidity no matter how big or

153
00:06:04,479 --> 00:06:06,880
how small the trade size is

154
00:06:06,880 --> 00:06:08,720
secondly the smart contract

155
00:06:08,720 --> 00:06:11,600
automatically adjusts the price

156
00:06:11,600 --> 00:06:14,720
the purchase of asset x for example

157
00:06:14,720 --> 00:06:16,880
will increase the price of x and

158
00:06:16,880 --> 00:06:19,440
decrease the price for y

159
00:06:19,440 --> 00:06:22,639
lastly the ratio of f x and y

160
00:06:22,639 --> 00:06:27,600
is determined up determines the price

161
00:06:30,160 --> 00:06:33,520
here we give a concrete example

162
00:06:33,520 --> 00:06:36,560
in this plot the x-axis represents

163
00:06:36,560 --> 00:06:38,880
the amount of asset x in the proof and

164
00:06:38,880 --> 00:06:39,919
the y-axis

165
00:06:39,919 --> 00:06:43,759
represents the amount of sfy in the pool

166
00:06:43,759 --> 00:06:46,479
so the proof starts with 10 units of slx

167
00:06:46,479 --> 00:06:48,639
and 30 units of asset y

168
00:06:48,639 --> 00:06:51,680
the product is equal to 300

169
00:06:51,680 --> 00:06:54,479
so let's say a taker wants to transact

170
00:06:54,479 --> 00:06:56,319
five units of x

171
00:06:56,319 --> 00:06:59,599
for asset y um

172
00:06:59,599 --> 00:07:02,400
so the x axis will shift from 10 units

173
00:07:02,400 --> 00:07:02,960
of asset

174
00:07:02,960 --> 00:07:07,039
x to 15 and in order to keep the product

175
00:07:07,039 --> 00:07:08,160
as a constant

176
00:07:08,160 --> 00:07:11,199
the amount of asset y while in the

177
00:07:11,199 --> 00:07:12,960
exchange will decrease

178
00:07:12,960 --> 00:07:16,240
from 30 to 20. therefore the taker will

179
00:07:16,240 --> 00:07:16,720
receive

180
00:07:16,720 --> 00:07:20,240
10 units of sfy

181
00:07:21,120 --> 00:07:23,440
as we have shown in the previous slide

182
00:07:23,440 --> 00:07:25,120
when the liquidity taker

183
00:07:25,120 --> 00:07:27,680
makes the trade the amm state of the

184
00:07:27,680 --> 00:07:28,560
price

185
00:07:28,560 --> 00:07:31,840
shifts along the bonding curve

186
00:07:31,840 --> 00:07:34,560
expected price slippage is the expected

187
00:07:34,560 --> 00:07:36,560
increase or decrease in price

188
00:07:36,560 --> 00:07:38,240
based on the trading volume and

189
00:07:38,240 --> 00:07:39,840
available liquidity

190
00:07:39,840 --> 00:07:43,119
at the beginning of the trade

191
00:07:43,360 --> 00:07:45,680
however there are other participants in

192
00:07:45,680 --> 00:07:46,720
the market

193
00:07:46,720 --> 00:07:49,039
due to concurrent transactions the

194
00:07:49,039 --> 00:07:50,639
actual slippage can be

195
00:07:50,639 --> 00:07:53,440
different from the expected slippage

196
00:07:53,440 --> 00:07:53,840
here

197
00:07:53,840 --> 00:07:56,639
for example let's assume transaction d

198
00:07:56,639 --> 00:07:59,280
is executed before transaction c

199
00:07:59,280 --> 00:08:01,840
because transaction d already shifted

200
00:08:01,840 --> 00:08:02,479
the market

201
00:08:02,479 --> 00:08:05,840
state downwards before transaction c is

202
00:08:05,840 --> 00:08:07,360
executed

203
00:08:07,360 --> 00:08:09,360
transaction c will have a worse

204
00:08:09,360 --> 00:08:10,479
execution price

205
00:08:10,479 --> 00:08:14,159
due to unexpected slippage

206
00:08:15,919 --> 00:08:18,720
note that unexpected slippage can also

207
00:08:18,720 --> 00:08:20,479
result in better prices

208
00:08:20,479 --> 00:08:23,039
for example transaction d might be

209
00:08:23,039 --> 00:08:25,039
trading in reverse direction

210
00:08:25,039 --> 00:08:26,800
therefore transaction c will have a

211
00:08:26,800 --> 00:08:28,080
better price than the

212
00:08:28,080 --> 00:08:32,079
than the attack is under expectation

213
00:08:34,399 --> 00:08:37,039
so in order to limit the impact of

214
00:08:37,039 --> 00:08:39,120
unexpected slippage from concurrent

215
00:08:39,120 --> 00:08:40,000
transactions

216
00:08:40,000 --> 00:08:42,080
traders typically configure a slippage

217
00:08:42,080 --> 00:08:43,599
protection threshold

218
00:08:43,599 --> 00:08:46,480
which is slightly above the expected

219
00:08:46,480 --> 00:08:49,040
slippage

220
00:08:49,680 --> 00:08:52,399
therefore if transaction c goes beyond

221
00:08:52,399 --> 00:08:54,160
the slippage protection threshold

222
00:08:54,160 --> 00:08:56,480
as a result of transaction d then

223
00:08:56,480 --> 00:08:58,880
transaction c will be reverted it will

224
00:08:58,880 --> 00:09:01,920
not be executed

225
00:09:03,279 --> 00:09:05,360
this slippage protection mechanism

226
00:09:05,360 --> 00:09:08,320
however makes sandwich attacks possible

227
00:09:08,320 --> 00:09:10,560
so the idea here is to manipulate the

228
00:09:10,560 --> 00:09:11,600
market and

229
00:09:11,600 --> 00:09:14,800
maximize the victims slippage

230
00:09:14,800 --> 00:09:17,200
the adversary can emit two transactions

231
00:09:17,200 --> 00:09:18,160
to exploit

232
00:09:18,160 --> 00:09:20,240
the slippage protection before

233
00:09:20,240 --> 00:09:21,200
transaction v

234
00:09:21,200 --> 00:09:24,320
is confirmed so as an example let's say

235
00:09:24,320 --> 00:09:24,959
the victim

236
00:09:24,959 --> 00:09:27,200
issues a transaction to swap asset x to

237
00:09:27,200 --> 00:09:28,080
y

238
00:09:28,080 --> 00:09:29,760
the adversary then issues two

239
00:09:29,760 --> 00:09:31,839
transactions a1 and a2

240
00:09:31,839 --> 00:09:33,839
for the first transaction a1 the

241
00:09:33,839 --> 00:09:36,080
adversary front runs the victim

242
00:09:36,080 --> 00:09:39,600
and it also swaps asset x y

243
00:09:39,600 --> 00:09:42,480
if everything goes as expected then the

244
00:09:42,480 --> 00:09:44,720
victim's transaction

245
00:09:44,720 --> 00:09:46,399
the slippage of the victim's transaction

246
00:09:46,399 --> 00:09:48,399
will be maximized

247
00:09:48,399 --> 00:09:50,080
but the slippage protection will not be

248
00:09:50,080 --> 00:09:52,480
triggered the adversary

249
00:09:52,480 --> 00:09:54,320
in the second transaction backgrounds

250
00:09:54,320 --> 00:09:56,000
the victim by

251
00:09:56,000 --> 00:09:59,120
transacting asset y to sx

252
00:09:59,120 --> 00:10:02,079
so transaction a1 and a2 then forms a

253
00:10:02,079 --> 00:10:05,839
profitable arbitrage

254
00:10:06,800 --> 00:10:08,880
okay so let's go through the whole

255
00:10:08,880 --> 00:10:10,480
process again

256
00:10:10,480 --> 00:10:12,640
in the first step the victim sends a

257
00:10:12,640 --> 00:10:13,760
transaction tv

258
00:10:13,760 --> 00:10:16,399
on the p2p network through a lightweight

259
00:10:16,399 --> 00:10:18,640
node or full node

260
00:10:18,640 --> 00:10:20,160
recall that the trader needs to

261
00:10:20,160 --> 00:10:22,480
broadcast this transaction on the p2p

262
00:10:22,480 --> 00:10:23,200
network

263
00:10:23,200 --> 00:10:25,440
so each node on the p2p network can

264
00:10:25,440 --> 00:10:27,200
observe the slippage protect the

265
00:10:27,200 --> 00:10:29,279
slippage protection settings

266
00:10:29,279 --> 00:10:31,360
the adversary needs to operate a spy

267
00:10:31,360 --> 00:10:33,920
node which connects to as many nodes as

268
00:10:33,920 --> 00:10:34,800
possible

269
00:10:34,800 --> 00:10:37,440
to detect the victim's transaction

270
00:10:37,440 --> 00:10:38,560
before the miner

271
00:10:38,560 --> 00:10:42,320
executes the transaction the adversary

272
00:10:42,320 --> 00:10:42,880
then

273
00:10:42,880 --> 00:10:45,040
determines if the victim's transaction

274
00:10:45,040 --> 00:10:46,240
is profitable

275
00:10:46,240 --> 00:10:48,959
if it is profitable then it will issue

276
00:10:48,959 --> 00:10:51,360
two transactions a1 and a2 on p2p

277
00:10:51,360 --> 00:10:52,720
network

278
00:10:52,720 --> 00:10:55,519
if everything goes as planned the miner

279
00:10:55,519 --> 00:10:56,000
will

280
00:10:56,000 --> 00:10:59,120
receive transaction a1 and a2 before the

281
00:10:59,120 --> 00:11:01,360
confirmation of transaction b

282
00:11:01,360 --> 00:11:03,519
and then executes them in the exact

283
00:11:03,519 --> 00:11:04,399
order the

284
00:11:04,399 --> 00:11:07,440
third the adversary wants so it will

285
00:11:07,440 --> 00:11:08,800
execute a1 first

286
00:11:08,800 --> 00:11:12,399
engine b and then a2 as a result the

287
00:11:12,399 --> 00:11:13,440
victim suffers

288
00:11:13,440 --> 00:11:16,560
a much worse slippage and then

289
00:11:16,560 --> 00:11:18,640
the adversary gets revenue from the

290
00:11:18,640 --> 00:11:20,320
arbitrage

291
00:11:20,320 --> 00:11:24,959
performed by transaction a1 and a2

292
00:11:25,600 --> 00:11:27,839
on this slide we show the analytical

293
00:11:27,839 --> 00:11:29,760
evaluation of sandwich attacks

294
00:11:29,760 --> 00:11:33,040
on a specific market state we assume the

295
00:11:33,040 --> 00:11:35,120
victim transacts easy to sign

296
00:11:35,120 --> 00:11:38,160
sai is just some cryptocurrency asset on

297
00:11:38,160 --> 00:11:39,040
the access

298
00:11:39,040 --> 00:11:41,680
axis we show that the amount of ether

299
00:11:41,680 --> 00:11:43,440
transacted by the victim

300
00:11:43,440 --> 00:11:46,240
on the y-axis will show the amount of

301
00:11:46,240 --> 00:11:48,399
ether transacted by the adversary

302
00:11:48,399 --> 00:11:51,120
in transaction a1 if the victim

303
00:11:51,120 --> 00:11:53,839
transacts 40e cell psi

304
00:11:53,839 --> 00:11:57,120
at a slippage protection of 0.5 percent

305
00:11:57,120 --> 00:12:00,480
this line here then the optimal strategy

306
00:12:00,480 --> 00:12:03,600
for the adversary is to transact

307
00:12:03,600 --> 00:12:07,279
18.5 years in the first transaction

308
00:12:07,279 --> 00:12:09,680
this attack will realize a profit of

309
00:12:09,680 --> 00:12:11,279
0.08 ec

310
00:12:11,279 --> 00:12:14,800
which is equivalent to 11 usd

311
00:12:14,800 --> 00:12:18,240
at the time of writing so here is the

312
00:12:18,240 --> 00:12:20,240
important takeaway from this figure

313
00:12:20,240 --> 00:12:23,440
we can observe that there is a threshold

314
00:12:23,440 --> 00:12:26,560
here the white area

315
00:12:26,560 --> 00:12:28,959
where if the victim's transaction size

316
00:12:28,959 --> 00:12:29,839
is below this

317
00:12:29,839 --> 00:12:32,240
threshold then the sandwich attack is

318
00:12:32,240 --> 00:12:33,360
not profitable

319
00:12:33,360 --> 00:12:35,360
no matter how much easier the adversary

320
00:12:35,360 --> 00:12:36,560
transacts

321
00:12:36,560 --> 00:12:39,040
intuitively this is because the revenue

322
00:12:39,040 --> 00:12:40,399
of the adversary gains

323
00:12:40,399 --> 00:12:44,560
could not cover the cost of the attack

324
00:12:45,839 --> 00:12:48,240
we call this threshold the minimum

325
00:12:48,240 --> 00:12:49,920
profitable victim input

326
00:12:49,920 --> 00:12:53,440
or mvi this threshold can be numeric

327
00:12:53,440 --> 00:12:55,760
numerically derived for any market

328
00:12:55,760 --> 00:12:57,839
states

329
00:12:57,839 --> 00:13:00,160
so here comes the one of the mitigation

330
00:13:00,160 --> 00:13:01,360
mechanisms

331
00:13:01,360 --> 00:13:03,279
we proposed in the paper for sandwich

332
00:13:03,279 --> 00:13:06,000
attacks we can disable transactions

333
00:13:06,000 --> 00:13:09,200
above the mvi if the liquidity taker

334
00:13:09,200 --> 00:13:11,040
wants to make a big trade

335
00:13:11,040 --> 00:13:15,519
for example 122 is 123 ether

336
00:13:15,519 --> 00:13:17,839
then hey needs to split the transaction

337
00:13:17,839 --> 00:13:19,440
into smaller ones

338
00:13:19,440 --> 00:13:23,519
in this case five smaller trades

339
00:13:25,920 --> 00:13:27,920
this is by the way this is a very nice

340
00:13:27,920 --> 00:13:30,240
website that the other researchers

341
00:13:30,240 --> 00:13:33,760
developed to help traders to divide the

342
00:13:33,760 --> 00:13:34,639
transactions

343
00:13:34,639 --> 00:13:36,480
you can find the link of the website

344
00:13:36,480 --> 00:13:38,320
here

345
00:13:38,320 --> 00:13:41,440
one of the disadvantages of dividing

346
00:13:41,440 --> 00:13:42,240
transactions

347
00:13:42,240 --> 00:13:44,720
is the trader will need to pay higher

348
00:13:44,720 --> 00:13:46,000
transaction fees

349
00:13:46,000 --> 00:13:50,079
for each of the transaction so

350
00:13:50,079 --> 00:13:52,079
there are also other mitigation

351
00:13:52,079 --> 00:13:54,399
mechanisms which we have discussed in

352
00:13:54,399 --> 00:13:57,600
the appendix of the paper

353
00:13:58,320 --> 00:14:00,160
another interesting question is what

354
00:14:00,160 --> 00:14:02,399
will happen when there are multiple

355
00:14:02,399 --> 00:14:04,880
trader multiple sandwich attackers with

356
00:14:04,880 --> 00:14:06,240
simulated outcome

357
00:14:06,240 --> 00:14:08,399
and our results suggest that having

358
00:14:08,399 --> 00:14:09,760
multiple attackers

359
00:14:09,760 --> 00:14:11,839
does divide the total revenue among the

360
00:14:11,839 --> 00:14:12,800
adversaries in

361
00:14:12,800 --> 00:14:15,920
expectation all the attackers also need

362
00:14:15,920 --> 00:14:17,680
to create higher transaction fees

363
00:14:17,680 --> 00:14:20,959
uh overhead uh note that if the

364
00:14:20,959 --> 00:14:22,320
blockchain is congested

365
00:14:22,320 --> 00:14:25,519
then we observe that the break-even is

366
00:14:25,519 --> 00:14:28,320
harder to attain

367
00:14:28,720 --> 00:14:31,519
we also found another sandwich attack

368
00:14:31,519 --> 00:14:32,240
pattern

369
00:14:32,240 --> 00:14:34,240
in the paper which we will not go into

370
00:14:34,240 --> 00:14:36,800
details but the adversary acts as a

371
00:14:36,800 --> 00:14:37,440
provider

372
00:14:37,440 --> 00:14:39,519
instead of acting as a paper in this

373
00:14:39,519 --> 00:14:41,760
case

374
00:14:41,839 --> 00:14:44,800
so in summary the transparency of

375
00:14:44,800 --> 00:14:46,399
blockchain-based exchanges in

376
00:14:46,399 --> 00:14:47,839
combination with the latency for

377
00:14:47,839 --> 00:14:49,680
transactions to be processed

378
00:14:49,680 --> 00:14:51,920
makes marketing manipulation visible

379
00:14:51,920 --> 00:14:52,880
thanks for

380
00:14:52,880 --> 00:14:59,519
listening to our presentation

381
00:14:59,519 --> 00:15:01,600
you

