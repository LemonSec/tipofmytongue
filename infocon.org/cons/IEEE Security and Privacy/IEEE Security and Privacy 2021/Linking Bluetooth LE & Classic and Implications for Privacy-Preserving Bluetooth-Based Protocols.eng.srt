1
00:00:02,009 --> 00:00:09,840
Hello everyone, my name is Norbert Ludant, I am a PhD student at northeastern university and i'm going to present our work, which introduces a novel attack.

2
00:00:10,080 --> 00:00:19,800
capable of linking directly advertisements to long term identifiers and implications of given attack. this work was carried out with Tien Vo-Huu, Sashank Narain and Guevara Noubir.

3
00:00:21,540 --> 00:00:31,020
First of all, bluetooth is a technology that is everywhere around us, since bluetooth was first introduced back in 1998 the number of bluetooth devices deployed has continuously increased.

4
00:00:31,560 --> 00:00:44,370
It is forecasted that by 2024 annual bluetooth enabled device shipment will exceed 6 billion, this includes bluetooth low energy, a technology introduced as part of the bluetooth 4.0 core specification.

5
00:00:45,390 --> 00:00:54,600
One of the novel key features included in nearly is the concept of advertisements which consists in broadcast transmissions by bluetooth devices, for instance, offering a service.

6
00:00:55,320 --> 00:01:04,230
ble advertisements are widely used not only by iot devices, due to the lower power consumption, but also by smartphones laptops or any other bluetooth devices.

7
00:01:05,280 --> 00:01:16,830
Although multiple attacks on ble privacy has been shown, most are due to improper implementation and BLE advertisements have been considered secure from a linkability point of view.

8
00:01:17,400 --> 00:01:24,510
in the sense that a passive attacker cannot link nearly advertisements to a specific device if all parts are implemented correctly.

9
00:01:26,160 --> 00:01:29,759
This is due to the use of frequent periodical MAC address randomization.

10
00:01:30,870 --> 00:01:38,910
In fact, multiple privacy-preserving protocols built on top of this assumption for their ble-based systems, such as digital contact tracing apps.

11
00:01:40,440 --> 00:01:51,210
Additionally, recently has been shown that bluetooth classic transmissions can be linked to a global identifier by a passive attacker listening to the spectrum, something that was believed to be hard to achieve.

12
00:01:52,020 --> 00:02:03,869
This finding together with the proliferation of multiple services relying on BLE unlinkability, such as contact tracing, raised a question for us, can BLE advertisements be linked to a long-term identifier?

13
00:02:05,400 --> 00:02:07,890
This motivation led to an interesting finding.

14
00:02:08,460 --> 00:02:20,190
A vulnerability in bluetooth chipsets allows an attacker to link BLE advertisements to bluetooth classic transmissions coming from the same device, and in turn to a long term identifier bluetooth address.

15
00:02:21,150 --> 00:02:26,910
We will show the presentation, how is possible to support this attack across different devices on scenarios with high reliability.

16
00:02:29,070 --> 00:02:35,400
The presentation is structured as follows, first some useful technical background about BLE and BTC will be provided.

17
00:02:35,730 --> 00:02:42,149
which will aid in understanding why the vulnerability exists, along with the explanation of the full system we implemented for the attack.

18
00:02:43,020 --> 00:02:49,620
After that, we will describe the implications of given attack for privacy-preserving protocols and we'll add some examples.

19
00:02:50,550 --> 00:03:01,710
The Implementation setup and results section will describe our measurement campaign and summarize our findings Lastly, I will describe the mitigations we implemented for android devices in the countermeasures section.

20
00:03:04,170 --> 00:03:09,149
First, to understand the attack is important to know a few concepts of bluetooth classic.

21
00:03:09,990 --> 00:03:16,950
Bluetooth classic operates in what is termed as piconets, where there is a master device and multiple slaves are synchronized to the master clock.

22
00:03:17,670 --> 00:03:32,489
In time domain, BT classic is divided in time slots of 625 microseconds and although packets can span multiple slots, as we see in the figure below, any packet is always aligned to a 625 microseconds slot.

23
00:03:34,440 --> 00:03:41,400
As for ble, it has similar physical layer characteristics, operates over the same bandwidth as BT classic and uses frequency hopping.

24
00:03:42,510 --> 00:03:48,840
focusing on BLE advertisements, they are transmitted within what is called an advertising event.

25
00:03:49,860 --> 00:03:54,690
In each adv event, each advertisements are transmitted in three different advertising channels.

26
00:03:55,980 --> 00:04:12,690
As we can see in the scheme below two consecutive advertisement events are spaced by some advertising interval plus a random delay to avoid collisions, interestingly, the duration of the advertising interval is a multiple of 625, just like the BT classic time slot.

27
00:04:15,420 --> 00:04:15,600
Right.

28
00:04:16,980 --> 00:04:25,950
Now that some detail for bluetooth have been described is time to answer the question how can a passive attacker link below advertisements to bluetooth classic packets.

29
00:04:27,060 --> 00:04:39,360
Our initial guess was that given the similar frequency hopping pattern of bluetooth and BLE, shared characteristics and the high integration of system on chips,, it is likely both radios are driven.

30
00:04:41,160 --> 00:04:42,000
By the same clock.

31
00:04:43,650 --> 00:04:54,299
To confirm our hypothesis, we took measurements of the timestamps of BLE and BTC packets coming from the same device and computed how tightly aligned, they are in time.

32
00:04:55,500 --> 00:05:05,790
On the right we show the results as the time offset in microseconds between BTC and BLE packets, the top figure corresponds to the BTC and BLE packets coming from the same device.

33
00:05:06,870 --> 00:05:07,830
Whereas on the bottom.

34
00:05:09,210 --> 00:05:11,280
The transmissions are coming from different devices.

35
00:05:12,810 --> 00:05:23,340
Initial results show that in fact both transmissions BLE and BTC, coming from the same device seem to be synchronized to the same timeslot of 625 microseconds.

36
00:05:24,030 --> 00:05:33,809
But the results are noisy and there's multiple constant offset values, for instance on the top right here, we see many packets, with very small time offset difference.

37
00:05:35,040 --> 00:05:40,980
Meaning they're quite aligned and values, with hundreds of microsecond mismatch for the same advertisement.

38
00:05:42,210 --> 00:05:51,359
This makes it hard to discern the two cases where the linkability exists or not, and makes it hard to create metrics that are accurate at separating the two cases.

39
00:05:52,830 --> 00:05:56,849
The problems arises, first of all, due to the effect of the wireless medium.

40
00:05:59,100 --> 00:06:17,580
And, to some extent by hardware imperfections, but peculiarities of BLE advertisements play also an important role, for instance, we find that not all advertising channels exhibit the same time offset and sometimes this value is both device dependent and advertisement configuration-dependant.

41
00:06:18,900 --> 00:06:23,880
this required to develop an inference algorithm that we integrate in our full system.

42
00:06:26,700 --> 00:06:35,520
To solve all the challenges encountered from rf sampling to Linking we carefully designed a full attack system that tackles all the challenges with different blocks.

43
00:06:36,630 --> 00:06:45,570
First, our system receives the radio frequency IQ samples through a low cost software defined radio, for instance a USRP B210.

44
00:06:46,170 --> 00:06:54,000
And decode the samples to simultaneously extract information on both btc and BLE.

45
00:06:54,720 --> 00:07:06,030
For bluetooth classic This includes the global bluetooth address and the timestamp of each packet received, for ble information includes the advertisement itself and the timestamps.

46
00:07:06,960 --> 00:07:10,950
As they collected information is noisy, it is required that it is processed.

47
00:07:11,790 --> 00:07:25,740
sorted in channels and then processed to derive an alignment quantification between the clock of Bluetooth classic and the clock of BLE between each pair of bluetooth addresses and BLE advertisements, this block is handled by the data processing block.

48
00:07:27,030 --> 00:07:37,020
Finally, the inference algorithm computes the time alignment between BTC and BLE addressing the peculiarities of BLE such as regular channel offsets.

49
00:07:37,680 --> 00:07:50,520
And outputs if the ble advertisement is linked to any bluetooth address and which, with this system, we are able to reliably link ble advertisements to bluetooth classical transmissions for multiple scenarios as we'll see in a moment.

50
00:07:51,660 --> 00:08:02,370
But first, now that we have presented the attack, it is important to understand that the linking of ble advertisement to device address breaks the assumption that the advertisements can not building.

51
00:08:03,510 --> 00:08:14,370
And also equally importantly it breaks a key assumption of privacy-preserving ble based protocols, as most explicitly rely on the unlinkability through MAC randomization of the advertisements.

52
00:08:15,510 --> 00:08:24,659
Furthermore, linkability of communications can not only enable tracking by itself, but can also be used as a crucial stepping stone for more sophisticated attacks.

53
00:08:26,100 --> 00:08:32,220
Two examples of privacy-preserving protocols that rely on the advertisements are contact tracing apps and Apple Find My.

54
00:08:33,330 --> 00:08:48,060
In case of contact tracing apps most rely on the exposure notification service developed by Google and Android. For the exposure notification service, the ble advertisement data consists of the rolling proximity identifiers broadcast by the user device.

55
00:08:49,110 --> 00:08:59,580
This proximity identifiers are generated such that they do not reveal the users identity, however, with the vulnerability we expose it will link them to the bluetooth address.

56
00:09:00,210 --> 00:09:13,590
Then, an adversary that periodically downloads the diagnosis key can then generate the proximity identifiers of infected users and compare them to proximity identifiers previously recorded and linked to bluetooth addresses.

57
00:09:14,730 --> 00:09:27,090
This does not fully de-anonymize impacted users, however, it can serve as a stepping stone if it is combined with any other side channel that links the bluetooth address to users  private information.

58
00:09:29,280 --> 00:09:43,290
In order to determine the scope of the attaack, we carry out extensive measurements to understand the impact across different variables: exposure time to the attacker, different target devices and Apps, density of devices wireless traffic distance and mobility.

59
00:09:45,180 --> 00:09:55,829
To do so we evaluate the attack over five test devices both android and apple, and four phone Apps, contact tracing based, Apple Find My and a BLE advertising app.

60
00:09:56,700 --> 00:10:07,980
We take measurements in three scenarios a residential area with low to average traffic an office environment with exemplifies a high traffic area as it includes 2 IoT labs and more than 100 BLE advertisers.

61
00:10:08,610 --> 00:10:17,520
And lastly, due to limited physical space in the previous scenarios we carry out the measurements in a football field to measure the performance at a distance and with mobility.

62
00:10:19,380 --> 00:10:24,930
Our results show that the attack proves to be highly reliable and robust across devices models and chipsets.

63
00:10:25,950 --> 00:10:34,260
The table below, for instance, indicates the probability of linking correctly a device in a low density scenario where there's 20 other BLE advertisers.

64
00:10:35,550 --> 00:10:43,770
Our system is able to link correctly consistently for 10 second recordings, but even one second recordings succeedes more than 85% of the time.

65
00:10:45,000 --> 00:10:52,380
Our results indicate that the probability of linking correctly a device is already above 90% for 10 seconds recording in most scenarios.

66
00:10:53,580 --> 00:10:59,760
As for different Apps we find that the probability depends on the ble advertisement configuration in this way.

67
00:11:00,360 --> 00:11:06,030
advertisements transmitted with higher power have a higher probability of being linked as they're more likely to be decoded.

68
00:11:06,810 --> 00:11:16,530
For instance, the Apple Find my APP uses high transmit power and, although the advertisements occur less often that for other Apps, only one every two seconds.

69
00:11:16,860 --> 00:11:23,970
It is more vulnerable to the attack that Apps using, for instance, exposure notification service on Android, which transmits at a pretty low power.

70
00:11:26,310 --> 00:11:40,770
For challenging scenarios such as crowded scenarios the probability of linking BLE advertisements with same device BTC transmissions is between 80% and 95% depending on the APP with more than 100 ble advertisers and significant congestion in the scenario.

71
00:11:41,970 --> 00:11:56,250
Another challenging scenario is when a bluetooth classic connection on the device is idle and just transmitting sporadic keep alive messages in this scenario, an attacker is able to correctly link ble advertisements 90% of the time for 10 seconds recordings.

72
00:11:57,900 --> 00:12:13,920
As for measurements related to spatial consideration, we find that it is difficult to exploit the attack for most Apps distances over 80 meters and as movement speed increases, we find that apple devices are still more vulnerable, even in this scenario, because of the high transmit power.

73
00:12:15,060 --> 00:12:24,270
But it's harder for Apps that transmit at a lower power, we can see that exemplified in the table when we compare the same APP for android and ios.

74
00:12:28,890 --> 00:12:35,520
In light of the results during our experiments, we propose implement and evaluate a set of effective countermeasures for Android.

75
00:12:36,210 --> 00:12:45,210
As the vulnerability is deeply rooted to the chip, we believe that eliminating this attack will require significant changes to the bluetooth classic and ble chipsets.

76
00:12:45,930 --> 00:12:50,849
However, we provide a set of countermeasures that aim at reducing the efficacy of attack.

77
00:12:51,810 --> 00:13:04,020
We focus our countermeasures on ideas that can be implemented for the android OS to reduce attack that performance, so we have seen, even if bluetooth classic is on but only paired the linkability attack is still posible.

78
00:13:05,190 --> 00:13:09,060
Then the best idea is to disable bluetooth classic when is not being actively used.

79
00:13:10,350 --> 00:13:16,290
As this is sometimes not possible, BLE advertisements transmit power should be kept to a minimum, to reduce the range of the attack.

80
00:13:17,700 --> 00:13:27,000
To do so we develop a system on android that first, controls the bluetooth classic and BLE state turning off or on each one independently depending on the connection status.

81
00:13:27,330 --> 00:13:43,620
For instance, if bluetooth classic is not actively use our system turns it off, this is not trivial, because in the android bluetooth stack both BT classic and BLE are controlled by the same API and BLE cannot work without BT classic so we have to decouple both states.

82
00:13:44,730 --> 00:13:55,770
Secondly, we limit the bluetooth transmit power when BTC is ON and, lastly, our system periodically reduces transmit power of ble to try to make a passive attacker lose synchronization.

83
00:13:56,490 --> 00:14:06,300
In order to implement the last two measures, as we are not able to change the ble transmit power without changing the functionality of the APP, we need to find that work around this issue.

84
00:14:08,130 --> 00:14:15,930
We validated the library, by implementing a BLE advertiser app without using any bluetooth classic code and observe that it works reliably.

85
00:14:17,400 --> 00:14:26,730
Also, to verify the mitigatiion system we loaded it on a Google pixel smartphone and perform measurements showing that the attack is indeed effectively reduced.

86
00:14:28,290 --> 00:14:29,640
Thank you very much for listening

