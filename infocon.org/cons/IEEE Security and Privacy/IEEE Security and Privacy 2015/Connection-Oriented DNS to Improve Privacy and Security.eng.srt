1
00:00:00,000 --> 00:00:05,460
I'm then and I'm going<font color="#CCCCCC"> to talk about</font><font color="#E5E5E5"> our</font>

2
00:00:03,149 --> 00:00:07,830
analysis of connection around his ideas

3
00:00:05,460 --> 00:00:11,820
so it's a joint work with our colleagues

4
00:00:07,830 --> 00:00:17,640
at the<font color="#E5E5E5"> burn site and and also you ask</font>

5
00:00:11,820 --> 00:00:20,310
the<font color="#CCCCCC"> is I so so so so tennis it's very</font>

6
00:00:17,640 --> 00:00:23,730
important so it<font color="#E5E5E5"> maps name to an IP</font>

7
00:00:20,310 --> 00:00:27,740
address and it's perfect for UDP because

8
00:00:23,730 --> 00:00:27,740
it's a simple request response protocol

9
00:00:29,449 --> 00:00:35,790
however a yes / UDP is actually

10
00:00:33,750 --> 00:00:41,969
vulnerable to amplification attack and

11
00:00:35,790 --> 00:00:43,500
also the now service attack and and also

12
00:00:41,969 --> 00:00:46,649
<font color="#E5E5E5">there's no privacy at all because</font>

13
00:00:43,500 --> 00:00:52,440
queries and responses are just adding in

14
00:00:46,649 --> 00:00:56,370
in in in in clear text so here we

15
00:00:52,440 --> 00:00:59,160
propose to use TCP to<font color="#CCCCCC"> salsa to solve the</font>

16
00:00:56,370 --> 00:01:01,050
protein problem and we and we also

17
00:00:59,160 --> 00:01:07,259
propose to use here as to provide the

18
00:01:01,050 --> 00:01:11,280
privacy so so TCP and TLS are not new at

19
00:01:07,260 --> 00:01:13,890
all and and however<font color="#E5E5E5"> our key contribution</font>

20
00:01:11,280 --> 00:01:15,720
is proved they actually can walk they

21
00:01:13,890 --> 00:01:18,060
can actually<font color="#E5E5E5"> walk</font><font color="#CCCCCC"> except early in the</font>

22
00:01:15,720 --> 00:01:20,729
real world who has a careful

23
00:01:18,060 --> 00:01:27,560
implementation and a very and a very

24
00:01:20,729 --> 00:01:30,090
small a very small particle tweak and

25
00:01:27,560 --> 00:01:31,680
and so<font color="#E5E5E5"> now let's take a look</font><font color="#CCCCCC"> at more</font>

26
00:01:30,090 --> 00:01:33,689
details about a problem<font color="#CCCCCC"> we have</font>

27
00:01:31,680 --> 00:01:40,100
<font color="#E5E5E5">mentioned it before so there are</font><font color="#CCCCCC"> really</font>

28
00:01:33,689 --> 00:01:45,478
<font color="#E5E5E5">three kind of threats the first one is</font>

29
00:01:40,100 --> 00:01:47,339
10 out of service attack so<font color="#CCCCCC"> for so forth</font>

30
00:01:45,479 --> 00:01:50,250
10 alpha services tag there are really

31
00:01:47,340 --> 00:01:55,350
two kinds of attackers so the first one

32
00:01:50,250 --> 00:01:57,659
is amplification so we're an an attacker

33
00:01:55,350 --> 00:01:59,640
can send us approved queries to a dns

34
00:01:57,659 --> 00:02:05,610
server and use the end server to attack

35
00:01:59,640 --> 00:02:09,628
others and and the other attack is just

36
00:02:05,610 --> 00:02:13,770
sorry so just that when<font color="#CCCCCC"> i was</font><font color="#E5E5E5"> talking to</font>

37
00:02:09,628 --> 00:02:17,310
so it's just just<font color="#E5E5E5"> pnau soviet attack too</font>

38
00:02:13,770 --> 00:02:21,840
server itself and here we<font color="#CCCCCC"> want to deal</font>

39
00:02:17,310 --> 00:02:25,620
with both of these<font color="#E5E5E5"> problems and and</font><font color="#CCCCCC"> TCP</font>

40
00:02:21,840 --> 00:02:29,700
help so TCP has well understood a

41
00:02:25,620 --> 00:02:33,570
technique to on to do better with a hell

42
00:02:29,700 --> 00:02:38,760
of a Soviet attack for example<font color="#E5E5E5"> the story</font>

43
00:02:33,570 --> 00:02:44,400
handshake actually prevents<font color="#E5E5E5"> proofing on</font>

44
00:02:38,760 --> 00:02:47,579
the the second the<font color="#E5E5E5"> threat is is is even</font>

45
00:02:44,400 --> 00:02:49,620
dropping so so<font color="#E5E5E5"> actually there is no</font>

46
00:02:47,580 --> 00:02:52,100
privacy over the white arrow network and

47
00:02:49,620 --> 00:02:56,090
<font color="#E5E5E5">if you are using public dance right now</font>

48
00:02:52,100 --> 00:02:58,920
so<font color="#E5E5E5"> actually your queries are and now so</font>

49
00:02:56,090 --> 00:03:06,120
have already been exposed to the public

50
00:02:58,920 --> 00:03:08,760
and also there is no privacy and also TS

51
00:03:06,120 --> 00:03:10,650
is not just about IPS and there are some

52
00:03:08,760 --> 00:03:14,220
other services which actually using the

53
00:03:10,650 --> 00:03:19,890
<font color="#CCCCCC">S so for</font><font color="#E5E5E5"> example checking for spam and</font>

54
00:03:14,220 --> 00:03:27,690
so so so so that kind of<font color="#CCCCCC"> omission should</font>

55
00:03:19,890 --> 00:03:33,720
be pirated as well and the solar sweat

56
00:03:27,690 --> 00:03:35,550
is who is<font color="#E5E5E5"> with crypto choices and so for</font>

57
00:03:33,720 --> 00:03:38,900
a long time is a policy<font color="#CCCCCC"> decision is</font>

58
00:03:35,550 --> 00:03:41,190
actually driven by<font color="#E5E5E5"> the UDP packet size</font>

59
00:03:38,900 --> 00:03:45,420
for example deal with the discussion

60
00:03:41,190 --> 00:03:48,180
about<font color="#E5E5E5"> how large the end section how</font>

61
00:03:45,420 --> 00:03:50,730
large a DNS SEC key should be and it's

62
00:03:48,180 --> 00:03:52,350
not acceptable<font color="#CCCCCC"> to use a smaller key with</font>

63
00:03:50,730 --> 00:03:57,840
less security but just because of a

64
00:03:52,350 --> 00:04:00,690
packet size limit and also and also and

65
00:03:57,840 --> 00:04:03,560
also a very large UDP packet will cause

66
00:04:00,690 --> 00:04:06,990
IP fragmentation which is bad because

67
00:04:03,560 --> 00:04:10,350
because it will cost I because it will

68
00:04:06,990 --> 00:04:14,239
cause fragmentation attack and and a mop

69
00:04:10,350 --> 00:04:18,209
and and also<font color="#E5E5E5"> more importantly how</font>

70
00:04:14,239 --> 00:04:21,180
analysis shows that so the packet will

71
00:04:18,209 --> 00:04:23,970
flow already happens and and even more

72
00:04:21,180 --> 00:04:27,710
with the key<font color="#E5E5E5"> robot where you have how</font>

73
00:04:23,970 --> 00:04:27,710
you have two kids in one<font color="#E5E5E5"> single packet</font>

74
00:04:29,540 --> 00:04:37,530
so so to have the privacy we have to

75
00:04:32,940 --> 00:04:39,630
change<font color="#CCCCCC"> the protocol our goal is to just</font>

76
00:04:37,530 --> 00:04:43,770
two ends minimum change as possible so

77
00:04:39,630 --> 00:04:46,139
it can be deployed easily so so the

78
00:04:43,770 --> 00:04:54,210
implication is just through is<font color="#CCCCCC"> just to</font>

79
00:04:46,139 --> 00:04:58,139
just to use tos and set out he is on to

80
00:04:54,210 --> 00:05:01,680
stone to<font color="#E5E5E5"> Saddam TOS her client can just</font>

81
00:04:58,139 --> 00:05:03,389
send a very so so the client<font color="#E5E5E5"> can send a</font>

82
00:05:01,680 --> 00:05:06,450
very special dummy query to the server

83
00:05:03,389 --> 00:05:11,010
and if the server confirms it and then

84
00:05:06,450 --> 00:05:16,320
client can initiate at a terrorist

85
00:05:11,010 --> 00:05:19,710
connection and then hollow queries and

86
00:05:16,320 --> 00:05:23,820
Paris and<font color="#CCCCCC"> where's and responses are now</font>

87
00:05:19,710 --> 00:05:26,599
private and so from our point of view is

88
00:05:23,820 --> 00:05:31,139
good because we don't have<font color="#E5E5E5"> a new part</font>

89
00:05:26,600 --> 00:05:38,190
however<font color="#E5E5E5"> we do have extra rtts so here we</font>

90
00:05:31,139 --> 00:05:42,180
<font color="#CCCCCC">must do some optimization so so to make</font>

91
00:05:38,190 --> 00:05:46,229
<font color="#CCCCCC">tcp performance actually approaches UDP</font>

92
00:05:42,180 --> 00:05:48,150
you for 40 s we have so we<font color="#E5E5E5"> have</font><font color="#CCCCCC"> find a</font>

93
00:05:46,229 --> 00:05:52,370
bunch of implementation choices to make

94
00:05:48,150 --> 00:05:58,109
and the first one is<font color="#CCCCCC"> connecting we use</font>

95
00:05:52,370 --> 00:06:00,539
so so we can see from here<font color="#E5E5E5"> a new</font>

96
00:05:58,110 --> 00:06:02,820
connection is very<font color="#E5E5E5"> expensive and here we</font>

97
00:06:00,539 --> 00:06:08,280
see that we have so<font color="#CCCCCC"> we have four extra</font>

98
00:06:02,820 --> 00:06:11,990
duties for the for for the<font color="#E5E5E5"> for the for</font>

99
00:06:08,280 --> 00:06:15,299
the for the for the connection setup and

100
00:06:11,990 --> 00:06:17,190
and and also if we<font color="#E5E5E5"> can so if we can just</font>

101
00:06:15,300 --> 00:06:24,510
reduce a connection we don't have extra

102
00:06:17,190 --> 00:06:27,330
oddity at all and also<font color="#E5E5E5"> your first server</font>

103
00:06:24,510 --> 00:06:29,030
cannot do that we won't push the

104
00:06:27,330 --> 00:06:31,530
connection state to a client and<font color="#E5E5E5"> let</font>

105
00:06:29,030 --> 00:06:35,460
client have tiny information to just the

106
00:06:31,530 --> 00:06:37,080
restyled connection quickly and here the

107
00:06:35,460 --> 00:06:39,669
connection will start will require two

108
00:06:37,080 --> 00:06:42,219
extra<font color="#CCCCCC"> RTT so</font>

109
00:06:39,670 --> 00:06:43,750
however it is still better that it is

110
00:06:42,220 --> 00:06:49,330
<font color="#E5E5E5">still better than a new connection with</font>

111
00:06:43,750 --> 00:06:52,180
four extra oddities so the second

112
00:06:49,330 --> 00:06:55,450
implementation choices is use query

113
00:06:52,180 --> 00:06:58,240
pipelining so here by default you have a

114
00:06:55,450 --> 00:07:00,250
<font color="#E5E5E5">TCP connection and you handle query and</font>

115
00:06:58,240 --> 00:07:02,410
you get response and the user's hand

116
00:07:00,250 --> 00:07:03,910
<font color="#E5E5E5">another query so actually it's not an</font>

117
00:07:02,410 --> 00:07:09,270
efficient that<font color="#E5E5E5"> because there is one</font>

118
00:07:03,910 --> 00:07:12,150
extra<font color="#CCCCCC"> RTT so here is very important to</font>

119
00:07:09,270 --> 00:07:17,549
send multiple queries at the same time

120
00:07:12,150 --> 00:07:19,900
so the<font color="#CCCCCC"> rtt can also so the rdt are</font>

121
00:07:17,550 --> 00:07:24,400
actually overlapped so we don't have

122
00:07:19,900 --> 00:07:26,679
extra oddities so we're pipelining

123
00:07:24,400 --> 00:07:30,039
matters because currently most of the

124
00:07:26,680 --> 00:07:33,160
webpage have multiple but<font color="#E5E5E5"> I'll have</font>

125
00:07:30,040 --> 00:07:35,020
multiple names so you have to so so you

126
00:07:33,160 --> 00:07:45,880
have to often raise all multiple names

127
00:07:35,020 --> 00:07:48,010
at at<font color="#E5E5E5"> the same time and the final</font>

128
00:07:45,880 --> 00:07:51,280
implementation choices is out of order

129
00:07:48,010 --> 00:07:54,400
processing so<font color="#E5E5E5"> currently by default all</font>

130
00:07:51,280 --> 00:07:58,119
the<font color="#E5E5E5"> server all the server implementation</font>

131
00:07:54,400 --> 00:08:02,020
will process the query so well processed

132
00:07:58,120 --> 00:08:05,290
Korean other foot for foot foot for TCP

133
00:08:02,020 --> 00:08:07,570
connections and so if we're server gets

134
00:08:05,290 --> 00:08:14,860
multiple queries and so the server

135
00:08:07,570 --> 00:08:18,460
process<font color="#CCCCCC"> aquarian order and and it costs</font>

136
00:08:14,860 --> 00:08:22,180
that it costs thus the same<font color="#CCCCCC"> RTT problems</font>

137
00:08:18,460 --> 00:08:24,070
as we talked about before so here<font color="#CCCCCC"> is</font>

138
00:08:22,180 --> 00:08:26,980
very important to let the server

139
00:08:24,070 --> 00:08:29,230
processor query in parallel and also

140
00:08:26,980 --> 00:08:32,080
send the Renaissance patio and all

141
00:08:29,230 --> 00:08:38,200
standard senator response back out<font color="#CCCCCC"> of</font>

142
00:08:32,080 --> 00:08:39,850
order so so all of all the processing

143
00:08:38,200 --> 00:08:43,860
matters because it helps to avoid

144
00:08:39,850 --> 00:08:43,860
<font color="#CCCCCC">handover long head of</font><font color="#E5E5E5"> line blocking</font>

145
00:08:46,069 --> 00:08:52,139
um so<font color="#CCCCCC"> actually the part so the</font><font color="#E5E5E5"> project</font>

146
00:08:50,489 --> 00:08:55,170
<font color="#E5E5E5">will change is minimum but our key</font>

147
00:08:52,139 --> 00:08:59,910
<font color="#E5E5E5">contributions that the performance</font>

148
00:08:55,170 --> 00:09:03,389
analysis and they are and they're a

149
00:08:59,910 --> 00:09:05,189
bunch of different<font color="#E5E5E5"> aspect of cost and we</font>

150
00:09:03,389 --> 00:09:07,529
have already so we have already studied

151
00:09:05,189 --> 00:09:12,089
at all of them<font color="#E5E5E5"> and they are actually</font>

152
00:09:07,529 --> 00:09:14,910
acceptable and so however in this<font color="#E5E5E5"> talk I</font>

153
00:09:12,089 --> 00:09:18,720
<font color="#CCCCCC">will only talk about the server memory</font>

154
00:09:14,910 --> 00:09:21,660
and is a precursor to<font color="#CCCCCC"> a authoritative</font>

155
00:09:18,720 --> 00:09:24,509
latency and all the other and<font color="#E5E5E5"> all and</font>

156
00:09:21,660 --> 00:09:30,569
all the other analysis a section is

157
00:09:24,509 --> 00:09:32,819
actually is actually our paper so so

158
00:09:30,569 --> 00:09:35,189
<font color="#E5E5E5">before we get to the power memory</font>

159
00:09:32,819 --> 00:09:37,699
analysis so here<font color="#E5E5E5"> we have to understand</font>

160
00:09:35,189 --> 00:09:40,980
how effective the connection we use is

161
00:09:37,699 --> 00:09:43,139
so the question is how often do we see a

162
00:09:40,980 --> 00:09:46,049
connection is getting reused at the

163
00:09:43,139 --> 00:09:50,069
server side as a function of how long<font color="#E5E5E5"> we</font>

164
00:09:46,049 --> 00:09:52,910
<font color="#E5E5E5">keep the connection open so here we use</font>

165
00:09:50,069 --> 00:09:58,169
three different kind of traces to do the

166
00:09:52,910 --> 00:10:00,179
to do the<font color="#E5E5E5"> Treasury play and and here we</font>

167
00:09:58,169 --> 00:10:02,369
<font color="#CCCCCC">find</font><font color="#E5E5E5"> out</font><font color="#CCCCCC"> that with our such as to time</font>

168
00:10:00,179 --> 00:10:04,439
out so the connection we use is actually

169
00:10:02,369 --> 00:10:10,110
<font color="#CCCCCC">very high so it's about ninety percent</font>

170
00:10:04,439 --> 00:10:15,118
and a bowl so the connection<font color="#E5E5E5"> we</font><font color="#CCCCCC"> use is</font>

171
00:10:10,110 --> 00:10:17,970
very important so the connection we use

172
00:10:15,119 --> 00:10:21,299
<font color="#CCCCCC">we help so the connection we use is so</font>

173
00:10:17,970 --> 00:10:23,429
it's very<font color="#CCCCCC"> helpful however about how much</font>

174
00:10:21,299 --> 00:10:26,669
does the connection we use<font color="#CCCCCC"> costs on the</font>

175
00:10:23,429 --> 00:10:29,249
server side so here we use three

176
00:10:26,669 --> 00:10:32,429
different so so here we<font color="#CCCCCC"> use the same</font>

177
00:10:29,249 --> 00:10:35,389
trees to do that and<font color="#E5E5E5"> to</font><font color="#CCCCCC"> do the analysis</font>

178
00:10:32,429 --> 00:10:39,839
of the shower side America consumption

179
00:10:35,389 --> 00:10:42,899
and here we find<font color="#E5E5E5"> out</font><font color="#CCCCCC"> that so this</font>

180
00:10:39,839 --> 00:10:45,149
however we are only require foot<font color="#CCCCCC"> four</font><font color="#E5E5E5"> to</font>

181
00:10:42,899 --> 00:10:50,850
<font color="#CCCCCC">eight gigabyte of memory and</font><font color="#E5E5E5"> is well</font>

182
00:10:45,149 --> 00:10:53,040
<font color="#E5E5E5">within current hardware also the</font>

183
00:10:50,850 --> 00:10:55,699
connection so the connection we use is

184
00:10:53,040 --> 00:10:55,699
now too costly

185
00:10:56,280 --> 00:11:02,020
and so so here we<font color="#CCCCCC"> have already seen this</font>

186
00:10:59,650 --> 00:11:03,670
just<font color="#E5E5E5"> hope that memory so how about the</font>

187
00:11:02,020 --> 00:11:06,480
<font color="#CCCCCC">current how about the client-side</font>

188
00:11:03,670 --> 00:11:10,000
latency so here let's take a look at the

189
00:11:06,480 --> 00:11:13,540
recursive would resort to<font color="#E5E5E5"> Authority</font>

190
00:11:10,000 --> 00:11:17,170
latency so here we stand a bunch<font color="#E5E5E5"> of</font>

191
00:11:13,540 --> 00:11:20,680
names to an to another assault a team

192
00:11:17,170 --> 00:11:24,939
server and we find out that and so a

193
00:11:20,680 --> 00:11:28,569
nuke so so<font color="#E5E5E5"> a new connection is</font><font color="#CCCCCC"> very</font>

194
00:11:24,940 --> 00:11:32,740
expensive and as a and the extra our

195
00:11:28,570 --> 00:11:36,220
duties<font color="#CCCCCC"> I'll actually</font><font color="#E5E5E5"> a actually exactly</font>

196
00:11:32,740 --> 00:11:39,390
as predicted<font color="#E5E5E5"> as the extra art as the</font>

197
00:11:36,220 --> 00:11:45,610
cost of order for the connection setup

198
00:11:39,390 --> 00:11:48,460
<font color="#E5E5E5">who have talked about before and</font><font color="#CCCCCC"> also we</font>

199
00:11:45,610 --> 00:11:52,600
can and also<font color="#E5E5E5"> we see that a connection we</font>

200
00:11:48,460 --> 00:11:54,370
use really<font color="#E5E5E5"> help and you can and and you</font>

201
00:11:52,600 --> 00:12:00,040
can reduce the cost of<font color="#E5E5E5"> the connection</font>

202
00:11:54,370 --> 00:12:04,270
setup so the previous slides only choose

203
00:12:00,040 --> 00:12:08,380
one part<font color="#E5E5E5"> of only choose the one part of</font>

204
00:12:04,270 --> 00:12:10,480
overall<font color="#E5E5E5"> overall performance so so so the</font>

205
00:12:08,380 --> 00:12:13,540
<font color="#E5E5E5">only single client cares about is Andrew</font>

206
00:12:10,480 --> 00:12:17,080
end is end to an end to end and rental

207
00:12:13,540 --> 00:12:18,939
agency so however to do the control

208
00:12:17,080 --> 00:12:20,620
experiment for the<font color="#CCCCCC"> engine performance</font>

209
00:12:18,940 --> 00:12:23,580
analysis is a little<font color="#E5E5E5"> too complicated</font>

210
00:12:20,620 --> 00:12:26,760
because there are too many factors and

211
00:12:23,580 --> 00:12:29,740
for<font color="#E5E5E5"> example there for example there are</font>

212
00:12:26,760 --> 00:12:32,920
for example there are all kinds of

213
00:12:29,740 --> 00:12:36,460
different<font color="#E5E5E5"> artists everywhere so here we</font>

214
00:12:32,920 --> 00:12:41,339
just decided to do the modeling for the

215
00:12:36,460 --> 00:12:44,550
average<font color="#E5E5E5"> value and here is our and</font>

216
00:12:41,340 --> 00:12:47,440
end-to-end perform as a result and<font color="#E5E5E5"> the</font>

217
00:12:44,550 --> 00:12:52,719
baseline is just to use UDP everywhere

218
00:12:47,440 --> 00:12:55,750
and as<font color="#CCCCCC"> weak so</font><font color="#E5E5E5"> is so it's the server the</font>

219
00:12:52,720 --> 00:13:01,000
most<font color="#CCCCCC"> left</font><font color="#E5E5E5"> group of bars and we also</font>

220
00:12:55,750 --> 00:13:02,230
study all the combinations and so so so

221
00:13:01,000 --> 00:13:05,560
actually there is always a trade-off

222
00:13:02,230 --> 00:13:07,720
between how<font color="#E5E5E5"> much is security and privacy</font>

223
00:13:05,560 --> 00:13:09,819
you want and how<font color="#CCCCCC"> much overhead you want</font>

224
00:13:07,720 --> 00:13:13,100
to pay

225
00:13:09,820 --> 00:13:16,639
and so here so here so here our

226
00:13:13,100 --> 00:13:20,630
<font color="#CCCCCC">recommendation is to use</font><font color="#E5E5E5"> TOS from step 2</font>

227
00:13:16,639 --> 00:13:25,100
root 2 recursive and to use<font color="#CCCCCC"> TCP from</font>

228
00:13:20,630 --> 00:13:26,870
recursive to authoritative so that we

229
00:13:25,100 --> 00:13:30,019
can get reasonably good privacy and

230
00:13:26,870 --> 00:13:33,290
security but only have twenty to thirty

231
00:13:30,019 --> 00:13:39,980
percent slower in in your overall

232
00:13:33,290 --> 00:13:43,279
performance so here we already got<font color="#E5E5E5"> the</font>

233
00:13:39,980 --> 00:13:47,779
as so we call the perlier so how about

234
00:13:43,279 --> 00:13:51,290
the security so the<font color="#E5E5E5"> question is in terms</font>

235
00:13:47,779 --> 00:13:57,560
of how much resources are needed to to

236
00:13:51,290 --> 00:13:59,899
follow the servitors<font color="#CCCCCC"> TCP blue wing and</font>

237
00:13:57,560 --> 00:14:03,079
so here to understand that a<font color="#E5E5E5"> question we</font>

238
00:13:59,899 --> 00:14:08,600
did control the experiment<font color="#CCCCCC"> to to study</font>

239
00:14:03,079 --> 00:14:10,489
different attack scenarios and and here

240
00:14:08,600 --> 00:14:12,350
are<font color="#CCCCCC"> the experiment we did and</font><font color="#E5E5E5"> I'm going</font>

241
00:14:10,490 --> 00:14:17,269
<font color="#CCCCCC">to talk about</font><font color="#E5E5E5"> the first to experiment</font>

242
00:14:12,350 --> 00:14:22,070
and it's early<font color="#E5E5E5"> and it is the third</font>

243
00:14:17,269 --> 00:14:25,089
experiment is actually our paper so X so

244
00:14:22,070 --> 00:14:28,910
the so the first experiment is about

245
00:14:25,089 --> 00:14:30,850
superbly DP attack so here<font color="#E5E5E5"> we have so</font>

246
00:14:28,910 --> 00:14:34,130
here<font color="#E5E5E5"> we have a bunch of attackers and</font>

247
00:14:30,850 --> 00:14:37,250
they are sending us approval UDP queries

248
00:14:34,130 --> 00:14:40,120
to our server and we have and we also

249
00:14:37,250 --> 00:14:44,899
have some real queries queries as as

250
00:14:40,120 --> 00:14:47,060
foreground<font color="#CCCCCC"> traffic and so here the</font>

251
00:14:44,899 --> 00:14:51,589
server has<font color="#E5E5E5"> to process all the</font><font color="#CCCCCC"> superbly</font>

252
00:14:47,060 --> 00:14:55,430
UTP queries so so that it leads to one

253
00:14:51,589 --> 00:14:58,430
hundred percent a cpu usage<font color="#CCCCCC"> lando when</font>

254
00:14:55,430 --> 00:15:00,319
the attack rate is high and also here we

255
00:14:58,430 --> 00:15:04,329
only use to attack us to actually take

256
00:15:00,319 --> 00:15:07,099
down<font color="#CCCCCC"> this server so the key point here</font>

257
00:15:04,329 --> 00:15:09,709
so the key point here is so it's very

258
00:15:07,100 --> 00:15:14,360
easy to<font color="#E5E5E5"> do thus</font><font color="#CCCCCC"> approved UDP attack and</font>

259
00:15:09,709 --> 00:15:20,660
also<font color="#CCCCCC"> you have and it also forces to add</font>

260
00:15:14,360 --> 00:15:23,560
more and<font color="#E5E5E5"> more capacity as so so so</font>

261
00:15:20,660 --> 00:15:23,560
actually it is bad

262
00:15:25,310 --> 00:15:33,630
so so so<font color="#E5E5E5"> also to to compare tcp</font>

263
00:15:29,970 --> 00:15:36,740
performance with UDP we also did the the

264
00:15:33,630 --> 00:15:38,880
superbly the TCP syn flood attack and

265
00:15:36,740 --> 00:15:42,210
here compared to the horrible

266
00:15:38,880 --> 00:15:44,130
performance without us in cookies so so

267
00:15:42,210 --> 00:15:47,340
this same cookie can actually help the

268
00:15:44,130 --> 00:15:49,080
server tolerate all the<font color="#CCCCCC"> sapru vers so</font>

269
00:15:47,340 --> 00:15:53,670
the server has<font color="#E5E5E5"> more capacity for the</font>

270
00:15:49,080 --> 00:15:57,350
real queries<font color="#CCCCCC"> so look so</font><font color="#E5E5E5"> the key point</font>

271
00:15:53,670 --> 00:16:01,140
here is so<font color="#CCCCCC"> that is very hard to do the</font>

272
00:15:57,350 --> 00:16:10,410
probability space inside with with<font color="#E5E5E5"> same</font>

273
00:16:01,140 --> 00:16:14,280
cookie on and and<font color="#E5E5E5"> also our and and also</font>

274
00:16:10,410 --> 00:16:16,730
<font color="#E5E5E5">our analysis shows that for the for the</font>

275
00:16:14,280 --> 00:16:20,520
for the nouns to probe the<font color="#CCCCCC"> TCP attack a</font>

276
00:16:16,730 --> 00:16:23,760
single a single<font color="#E5E5E5"> server can actually</font>

277
00:16:20,520 --> 00:16:27,230
tolerate thousands of attackers so so

278
00:16:23,760 --> 00:16:32,250
here so<font color="#CCCCCC"> the so here the conclusion is</font>

279
00:16:27,230 --> 00:16:40,080
TCP is so TCP can<font color="#CCCCCC"> deal so TCP can do</font>

280
00:16:32,250 --> 00:16:43,260
better with attack that UDP on to

281
00:16:40,080 --> 00:16:46,410
conclude so it's very important to use

282
00:16:43,260 --> 00:16:49,470
tos and<font color="#CCCCCC"> and</font><font color="#E5E5E5"> TCP to improve the privacy</font>

283
00:16:46,410 --> 00:16:51,660
and<font color="#E5E5E5"> security of</font><font color="#CCCCCC"> the s and our key result</font>

284
00:16:49,470 --> 00:16:55,050
shows that so the overall performance is

285
00:16:51,660 --> 00:16:57,300
actually reasonable and also your work

286
00:16:55,050 --> 00:17:01,140
and you and<font color="#E5E5E5"> also you're welcome to join</font>

287
00:16:57,300 --> 00:17:07,099
our discussion l had ITF and also<font color="#CCCCCC"> plays</font>

288
00:17:01,140 --> 00:17:07,099
try TDs and and also give us feedback

289
00:17:16,119 --> 00:17:27,708
we have time<font color="#CCCCCC"> for questions I have a</font>

290
00:17:24,020 --> 00:17:31,040
question if so are you planning<font color="#E5E5E5"> to use</font>

291
00:17:27,709 --> 00:17:33,740
TLS also to guarantee the sort<font color="#E5E5E5"> of to</font>

292
00:17:31,040 --> 00:17:35,659
replace DNS SEC or are you doing DNS

293
00:17:33,740 --> 00:17:37,780
<font color="#E5E5E5">Agent Orange actually we propose to use</font>

294
00:17:35,660 --> 00:17:39,830
the an attack to the authentication

295
00:17:37,780 --> 00:17:45,410
until it's just for opportunistic

296
00:17:39,830 --> 00:17:47,800
encryption yeah we've time for further

297
00:17:45,410 --> 00:17:47,800
questions

298
00:17:51,850 --> 00:17:56,709
Rick Andrew semantics can you talk a

299
00:17:53,919 --> 00:18:00,490
little bit about the certificates that

300
00:17:56,710 --> 00:18:03,700
the DNS server would have who would they

301
00:18:00,490 --> 00:18:05,799
be signed by why would I<font color="#CCCCCC"> trust them I</font>

302
00:18:03,700 --> 00:18:07,390
think your paper talks about tying it to

303
00:18:05,799 --> 00:18:12,549
Dane but it seems like<font color="#E5E5E5"> there's a</font>

304
00:18:07,390 --> 00:18:16,059
circular argument there on the question

305
00:18:12,549 --> 00:18:18,970
is about it the distrust model you're

306
00:18:16,059 --> 00:18:22,418
proposing TLS on the on the DNS server

307
00:18:18,970 --> 00:18:25,360
side sure that's in most cases there's a

308
00:18:22,419 --> 00:18:26,830
certificate there yeah<font color="#E5E5E5"> and on the web</font>

309
00:18:25,360 --> 00:18:30,520
today those certificates are signed<font color="#E5E5E5"> by</font>

310
00:18:26,830 --> 00:18:32,770
public cas like Symantec yeah would that

311
00:18:30,520 --> 00:18:34,030
<font color="#CCCCCC">be the</font><font color="#E5E5E5"> case here or with those be</font>

312
00:18:32,770 --> 00:18:37,000
self-signed certificates that are

313
00:18:34,030 --> 00:18:43,600
bootstrap through gain or what is your

314
00:18:37,000 --> 00:18:46,750
<font color="#CCCCCC">proposal so so</font><font color="#E5E5E5"> actually the two options</font>

315
00:18:43,600 --> 00:18:48,820
<font color="#E5E5E5">I actually</font><font color="#CCCCCC"> work with</font><font color="#E5E5E5"> our system so so</font>

316
00:18:46,750 --> 00:18:52,809
you can<font color="#CCCCCC"> either so so you can</font><font color="#E5E5E5"> either</font>

317
00:18:48,820 --> 00:18:57,299
choose to<font color="#CCCCCC"> total total you're staying to</font>

318
00:18:52,809 --> 00:19:02,309
do the certificate validation or use the

319
00:18:57,299 --> 00:19:02,309
audience's arms a regular certificate

