1
00:00:00,000 --> 00:00:04,529
I'm you know I'm from Johns<font color="#E5E5E5"> Hopkins and</font>

2
00:00:02,879 --> 00:00:06,810
this is the talk on<font color="#E5E5E5"> how to add Ford</font>

3
00:00:04,529 --> 00:00:09,450
security to asynchronous messaging so

4
00:00:06,810 --> 00:00:12,059
<font color="#CCCCCC">think things like SMS or email where the</font>

5
00:00:09,450 --> 00:00:13,649
party you're communicating with isn't

6
00:00:12,059 --> 00:00:16,020
actually<font color="#E5E5E5"> online to receive the message</font>

7
00:00:13,650 --> 00:00:20,430
immediately<font color="#CCCCCC"> all right so Ford security</font>

8
00:00:16,020 --> 00:00:23,310
is of course motivated<font color="#CCCCCC"> by the can</font>

9
00:00:20,430 --> 00:00:27,750
someone<font color="#CCCCCC"> get the next slide this is</font>

10
00:00:23,310 --> 00:00:29,369
really<font color="#E5E5E5"> not working the question of what</font>

11
00:00:27,750 --> 00:00:30,689
<font color="#CCCCCC">happens when you if your keys are</font>

12
00:00:29,369 --> 00:00:36,660
compromised and this is not<font color="#CCCCCC"> a</font>

13
00:00:30,689 --> 00:00:38,520
theoretical question next please it can

14
00:00:36,660 --> 00:00:40,468
happen<font color="#E5E5E5"> because you you know we have</font>

15
00:00:38,520 --> 00:00:41,910
exploited it can happen because you end

16
00:00:40,469 --> 00:00:44,100
up<font color="#E5E5E5"> with some determines attackers going</font>

17
00:00:41,910 --> 00:00:45,839
after you or it can just happen because

18
00:00:44,100 --> 00:00:47,190
you screw up and<font color="#E5E5E5"> do something stupid for</font>

19
00:00:45,840 --> 00:00:48,899
those of you who remember this talk from

20
00:00:47,190 --> 00:00:53,070
<font color="#CCCCCC">the usenix equipto rump sessions a</font>

21
00:00:48,899 --> 00:00:55,110
couple of<font color="#E5E5E5"> years ago so when that happens</font>

22
00:00:53,070 --> 00:00:57,000
you would really<font color="#E5E5E5"> like to have forward</font>

23
00:00:55,110 --> 00:00:58,379
security because if you have forward

24
00:00:57,000 --> 00:01:00,600
security then I'm attackers we get to

25
00:00:58,379 --> 00:01:02,940
your keys can't use them to decrypt old

26
00:01:00,600 --> 00:01:04,439
messages on the<font color="#E5E5E5"> other hand if you don't</font>

27
00:01:02,940 --> 00:01:06,119
have forward security and you start

28
00:01:04,438 --> 00:01:07,889
contemplating<font color="#E5E5E5"> the scenario you're going</font>

29
00:01:06,119 --> 00:01:10,020
to start emphasizing with the duck from

30
00:01:07,890 --> 00:01:11,400
the previous slide because you're<font color="#E5E5E5"> going</font>

31
00:01:10,020 --> 00:01:13,619
<font color="#E5E5E5">to realize that now that the attacker</font>

32
00:01:11,400 --> 00:01:15,930
has your keys all they have to<font color="#CCCCCC"> do is</font>

33
00:01:13,619 --> 00:01:17,250
find some copy of your message encrypted

34
00:01:15,930 --> 00:01:19,500
that's sitting somewhere on the internet

35
00:01:17,250 --> 00:01:21,600
that might be on a mail server it might

36
00:01:19,500 --> 00:01:23,130
be on a large data center in Utah

37
00:01:21,600 --> 00:01:25,679
somewhere doesn't really matter they'll

38
00:01:23,130 --> 00:01:27,420
probably find it and so then you're

39
00:01:25,680 --> 00:01:30,119
going<font color="#E5E5E5"> to realize that effectively every</font>

40
00:01:27,420 --> 00:01:31,829
time you hit delete on your email or<font color="#CCCCCC"> on</font>

41
00:01:30,119 --> 00:01:33,329
your messaging system you didn't<font color="#E5E5E5"> really</font>

42
00:01:31,829 --> 00:01:35,369
delete it because you deleted the copy

43
00:01:33,329 --> 00:01:37,169
you had but since you kept the key

44
00:01:35,369 --> 00:01:38,909
<font color="#E5E5E5">around and since the attacker kept the</font>

45
00:01:37,170 --> 00:01:40,799
encrypted copy around that they got

46
00:01:38,909 --> 00:01:43,829
coming<font color="#CCCCCC"> through some fiber optic cables</font>

47
00:01:40,799 --> 00:01:48,479
somewhere you've got a problem so

48
00:01:43,829 --> 00:01:51,210
luckily you<font color="#CCCCCC"> know we know how to fix this</font>

49
00:01:48,479 --> 00:01:52,920
<font color="#E5E5E5">and do forward security for synchronous</font>

50
00:01:51,210 --> 00:01:54,990
protocols it's very simple<font color="#CCCCCC"> you do an</font>

51
00:01:52,920 --> 00:01:56,700
authenticated ephemeral key exchange you

52
00:01:54,990 --> 00:01:58,229
<font color="#E5E5E5">get a key that you use for a little</font>

53
00:01:56,700 --> 00:02:00,750
while then you throw it away when<font color="#E5E5E5"> you're</font>

54
00:01:58,229 --> 00:02:02,960
done<font color="#E5E5E5"> and this is</font><font color="#CCCCCC"> actually used</font><font color="#E5E5E5"> for</font>

55
00:02:00,750 --> 00:02:05,340
messaging protocols via OTR and also

56
00:02:02,960 --> 00:02:07,649
<font color="#CCCCCC">vioxx a lot of ratchet and</font><font color="#E5E5E5"> tech secure</font>

57
00:02:05,340 --> 00:02:11,940
and then there for whatsapp which sort

58
00:02:07,649 --> 00:02:13,560
of uses textsecure and these provide a

59
00:02:11,940 --> 00:02:14,880
very good standard sort of

60
00:02:13,560 --> 00:02:16,830
gold<font color="#E5E5E5"> standard for forward security</font>

61
00:02:14,880 --> 00:02:18,720
because not just you have a key to your

62
00:02:16,830 --> 00:02:20,520
using for you know the 20 minutes you're

63
00:02:18,720 --> 00:02:22,859
having a<font color="#CCCCCC"> chat but you actually end up</font>

64
00:02:20,520 --> 00:02:24,540
doing symmetric ratcheting to get every

65
00:02:22,860 --> 00:02:25,560
<font color="#E5E5E5">single message sort of has its own key</font>

66
00:02:24,540 --> 00:02:27,060
that you throw away immediately

67
00:02:25,560 --> 00:02:31,110
afterwards so the moment you read a

68
00:02:27,060 --> 00:02:32,700
message it's effectively<font color="#E5E5E5"> gone so this is</font>

69
00:02:31,110 --> 00:02:33,870
<font color="#E5E5E5">nice we really like to have this kind of</font>

70
00:02:32,700 --> 00:02:36,660
stuff<font color="#CCCCCC"> and</font><font color="#E5E5E5"> there's a lot of interest in</font>

71
00:02:33,870 --> 00:02:39,239
<font color="#E5E5E5">this hence the you know sok and secure</font>

72
00:02:36,660 --> 00:02:45,470
messaging unfortunately this model

73
00:02:39,239 --> 00:02:45,470
doesn't really work for changing slides

74
00:02:46,910 --> 00:02:54,359
and then it does work<font color="#CCCCCC"> uh it doesn't</font><font color="#E5E5E5"> work</font>

75
00:02:51,269 --> 00:02:56,730
for most electronic communication gets a

76
00:02:54,360 --> 00:02:59,880
lot<font color="#CCCCCC"> of inner asynchronous you end up</font>

77
00:02:56,730 --> 00:03:00,899
with things<font color="#E5E5E5"> like email or SMS messages</font>

78
00:02:59,880 --> 00:03:03,359
right<font color="#CCCCCC"> whether</font><font color="#E5E5E5"> the other party simply</font>

79
00:03:00,900 --> 00:03:05,220
isn't online even for<font color="#CCCCCC"> champ protocols</font>

80
00:03:03,360 --> 00:03:07,590
write these things end up wanting<font color="#E5E5E5"> to do</font>

81
00:03:05,220 --> 00:03:09,180
offline message delivery right like this

82
00:03:07,590 --> 00:03:12,900
is what skype I message watch F all of

83
00:03:09,180 --> 00:03:14,400
these things<font color="#E5E5E5"> do and so you can't</font><font color="#CCCCCC"> use the</font>

84
00:03:12,900 --> 00:03:15,720
existing techniques we have and then you

85
00:03:14,400 --> 00:03:17,130
just<font color="#E5E5E5"> have</font><font color="#CCCCCC"> this gap where you can't</font><font color="#E5E5E5"> get</font>

86
00:03:15,720 --> 00:03:19,739
security for a feature people really

87
00:03:17,130 --> 00:03:22,620
want right and this is a<font color="#E5E5E5"> big problem so</font>

88
00:03:19,739 --> 00:03:24,989
how<font color="#CCCCCC"> do you fix this well the current</font>

89
00:03:22,620 --> 00:03:26,760
solution is you fake it right<font color="#CCCCCC"> you have</font>

90
00:03:24,989 --> 00:03:28,980
instead<font color="#E5E5E5"> of having Alice and Bob both be</font>

91
00:03:26,760 --> 00:03:30,929
online you have<font color="#CCCCCC"> a server that Bob pre</font>

92
00:03:28,980 --> 00:03:32,700
provisions with<font color="#E5E5E5"> keys and then when Alice</font>

93
00:03:30,930 --> 00:03:35,730
wants to send a<font color="#CCCCCC"> message to Bob she</font>

94
00:03:32,700 --> 00:03:37,980
negotiates a key with the server on

95
00:03:35,730 --> 00:03:39,690
Bob's behalf now the server isn't

96
00:03:37,980 --> 00:03:41,700
trusted in the sense of if it fails it

97
00:03:39,690 --> 00:03:43,380
can read your messages but if it fails

98
00:03:41,700 --> 00:03:45,450
or some alicious it can mean you don't

99
00:03:43,380 --> 00:03:48,540
<font color="#E5E5E5">have forward security so not the best</font>

100
00:03:45,450 --> 00:03:50,670
idea it also needs to store all this key

101
00:03:48,540 --> 00:03:51,900
material which is<font color="#CCCCCC"> a pretty large scaling</font>

102
00:03:50,670 --> 00:03:54,030
issue especially if you're trying<font color="#E5E5E5"> to</font>

103
00:03:51,900 --> 00:03:55,799
<font color="#E5E5E5">deploy this for say whats app which they</font>

104
00:03:54,030 --> 00:03:58,620
are trying<font color="#E5E5E5"> to deploy you have like 800</font>

105
00:03:55,799 --> 00:04:00,239
million users it's also difficult to add

106
00:03:58,620 --> 00:04:01,799
to old protocols that's not quite<font color="#E5E5E5"> clear</font>

107
00:04:00,239 --> 00:04:06,299
how you'd stick this into email or some

108
00:04:01,799 --> 00:04:07,350
other stuff so ideally<font color="#CCCCCC"> i missed the</font>

109
00:04:06,299 --> 00:04:10,590
problem we're trying to solve you would

110
00:04:07,350 --> 00:04:11,608
like to<font color="#E5E5E5"> get</font><font color="#CCCCCC"> rid of the server and get</font>

111
00:04:10,590 --> 00:04:13,290
forward security for asynchronous

112
00:04:11,609 --> 00:04:19,400
messaging without resorting for these

113
00:04:13,290 --> 00:04:23,969
kind of tricks so what do you do well a

114
00:04:19,399 --> 00:04:26,419
naive solution would be to<font color="#E5E5E5"> just have</font><font color="#CCCCCC"> one</font>

115
00:04:23,970 --> 00:04:27,980
public key public key pair

116
00:04:26,420 --> 00:04:29,150
per time interval so think like the

117
00:04:27,980 --> 00:04:31,250
first day of<font color="#E5E5E5"> the</font><font color="#CCCCCC"> month the</font><font color="#E5E5E5"> second day of</font>

118
00:04:29,150 --> 00:04:32,690
the<font color="#E5E5E5"> month etc and so our encryption on</font>

119
00:04:31,250 --> 00:04:34,580
this is<font color="#E5E5E5"> simple you pick the correct key</font>

120
00:04:32,690 --> 00:04:36,200
you send the message decryption looks

121
00:04:34,580 --> 00:04:38,060
the same and the only<font color="#E5E5E5"> thing that really</font>

122
00:04:36,200 --> 00:04:40,070
changes is win that<font color="#CCCCCC"> day's over</font><font color="#E5E5E5"> or</font>

123
00:04:38,060 --> 00:04:42,020
whatever that time in a voice you delete

124
00:04:40,070 --> 00:04:43,219
the current key this gets you forward

125
00:04:42,020 --> 00:04:45,020
security because once you get

126
00:04:43,220 --> 00:04:48,800
compromised you don't have the material

127
00:04:45,020 --> 00:04:50,659
to decrypt it anyway so you're good this

128
00:04:48,800 --> 00:04:53,660
has a major problem it has way too many

129
00:04:50,660 --> 00:04:59,060
keys so first you can get<font color="#E5E5E5"> rid of the</font>

130
00:04:53,660 --> 00:05:02,000
public keys like slide you can get rid

131
00:04:59,060 --> 00:05:04,190
<font color="#E5E5E5">of the public keys by using a thing</font>

132
00:05:02,000 --> 00:05:05,780
called I identity based encryption and

133
00:05:04,190 --> 00:05:07,610
so an i didn'ti based encryption you

134
00:05:05,780 --> 00:05:09,739
have one public key but you can actually

135
00:05:07,610 --> 00:05:12,530
encrypt under distinct identities<font color="#CCCCCC"> i like</font>

136
00:05:09,740 --> 00:05:13,850
google com example.com etc and those

137
00:05:12,530 --> 00:05:16,130
each have a<font color="#E5E5E5"> separate secret key to</font>

138
00:05:13,850 --> 00:05:17,960
decrypt so what you do is instead of

139
00:05:16,130 --> 00:05:19,100
identities you use time intervals so the

140
00:05:17,960 --> 00:05:23,210
first day of<font color="#E5E5E5"> the</font><font color="#CCCCCC"> month</font><font color="#E5E5E5"> the second day of</font>

141
00:05:19,100 --> 00:05:24,680
the<font color="#E5E5E5"> month etc etc and then you generate</font>

142
00:05:23,210 --> 00:05:26,359
all the secret keys for that in<font color="#CCCCCC"> advance</font>

143
00:05:24,680 --> 00:05:28,040
so<font color="#CCCCCC"> this gets rid of the public key</font>

144
00:05:26,360 --> 00:05:29,360
problem but it still has way too many

145
00:05:28,040 --> 00:05:32,420
secret keys because you have to have one

146
00:05:29,360 --> 00:05:34,250
for each time a novel so this brings us

147
00:05:32,420 --> 00:05:35,540
to sort of the more elegant solution

148
00:05:34,250 --> 00:05:37,790
which is<font color="#CCCCCC"> a thing called forwards the key</font>

149
00:05:35,540 --> 00:05:40,730
secure public key encryption this is due

150
00:05:37,790 --> 00:05:42,380
to<font color="#CCCCCC"> Kennedy 11 cats from 2003 they got</font>

151
00:05:40,730 --> 00:05:45,890
short public keys by<font color="#CCCCCC"> oh that same</font><font color="#E5E5E5"> trick</font>

152
00:05:42,380 --> 00:05:47,630
they got logarithm sized secret keys and

153
00:05:45,890 --> 00:05:49,070
the way they did<font color="#E5E5E5"> this was by using a</font>

154
00:05:47,630 --> 00:05:50,590
thing called hierarchical identity based

155
00:05:49,070 --> 00:05:53,270
encryption so instead of<font color="#E5E5E5"> just having</font>

156
00:05:50,590 --> 00:05:55,340
identities you have hierarchies of them

157
00:05:53,270 --> 00:05:57,560
were like<font color="#E5E5E5"> the key for say google com can</font>

158
00:05:55,340 --> 00:06:01,099
derive subkeys for like mail google com

159
00:05:57,560 --> 00:06:06,410
and things like that<font color="#E5E5E5"> and so the way</font><font color="#CCCCCC"> you</font>

160
00:06:01,100 --> 00:06:08,570
do this is<font color="#CCCCCC"> 4444 word security is you map</font>

161
00:06:06,410 --> 00:06:11,960
time intervals to this tree of keys

162
00:06:08,570 --> 00:06:13,730
right be4 the root of the<font color="#E5E5E5"> of the tree is</font>

163
00:06:11,960 --> 00:06:15,830
the first arrested first time interval

164
00:06:13,730 --> 00:06:17,300
the child of<font color="#E5E5E5"> that is the second the</font>

165
00:06:15,830 --> 00:06:18,830
childhood<font color="#E5E5E5"> that is the third this is just</font>

166
00:06:17,300 --> 00:06:21,560
a pre-order traversal of a binary tree

167
00:06:18,830 --> 00:06:23,359
<font color="#CCCCCC">so at time</font><font color="#E5E5E5"> one you are holding just the</font>

168
00:06:21,560 --> 00:06:27,110
key for time in over one you can decrypt

169
00:06:23,360 --> 00:06:30,290
messages when that changes you drive new

170
00:06:27,110 --> 00:06:36,110
keys and delete the existing key and you

171
00:06:30,290 --> 00:06:37,370
can<font color="#E5E5E5"> keep doing this ah and you end up</font>

172
00:06:36,110 --> 00:06:38,810
with a scheme is actually quite

173
00:06:37,370 --> 00:06:40,129
efficient and you never end up holding a

174
00:06:38,810 --> 00:06:42,319
linear number of keys that's only

175
00:06:40,129 --> 00:06:44,539
terrific so this<font color="#E5E5E5"> is a really nice</font>

176
00:06:42,319 --> 00:06:47,209
solution in theory it gives you all the

177
00:06:44,539 --> 00:06:49,369
things<font color="#E5E5E5"> we'd want when and only when</font>

178
00:06:47,209 --> 00:06:51,139
everyone knows exactly what<font color="#E5E5E5"> time it is</font>

179
00:06:49,369 --> 00:06:54,469
and your messages<font color="#E5E5E5"> are showing up exactly</font>

180
00:06:51,139 --> 00:06:57,080
when you expect the problem is we don't

181
00:06:54,469 --> 00:06:59,179
live in<font color="#CCCCCC"> that world we live in a world</font>

182
00:06:57,080 --> 00:07:03,169
<font color="#E5E5E5">where things go wrong such as this</font>

183
00:06:59,179 --> 00:07:05,208
clicker and you know<font color="#E5E5E5"> you get late emails</font>

184
00:07:03,169 --> 00:07:06,349
can maybe take days in the pesimo case i

185
00:07:05,209 --> 00:07:07,610
<font color="#CCCCCC">think i have it actually</font><font color="#E5E5E5"> been able to</font>

186
00:07:06,349 --> 00:07:09,050
find data on this but<font color="#E5E5E5"> I swear I've seen</font>

187
00:07:07,610 --> 00:07:11,629
things so that must have<font color="#E5E5E5"> happened no</font>

188
00:07:09,050 --> 00:07:14,689
<font color="#E5E5E5">people told me that happen to them SMS</font>

189
00:07:11,629 --> 00:07:17,029
messages can take more than an hour<font color="#E5E5E5"> to</font>

190
00:07:14,689 --> 00:07:18,889
deliver in some cases um<font color="#E5E5E5"> mixed networks</font>

191
00:07:17,029 --> 00:07:20,179
of course add latency intentionally so

192
00:07:18,889 --> 00:07:22,039
does great listing for spam prevention

193
00:07:20,179 --> 00:07:23,719
and then you have the whole entire

194
00:07:22,039 --> 00:07:25,219
problem of clock skew and<font color="#CCCCCC"> Miss</font>

195
00:07:23,719 --> 00:07:27,019
configuration I guarantee you if you

196
00:07:25,219 --> 00:07:28,429
deploy one of these protocols you end up

197
00:07:27,019 --> 00:07:29,929
<font color="#E5E5E5">with someone sending you a message for</font>

198
00:07:28,429 --> 00:07:32,119
the time interval for January first

199
00:07:29,929 --> 00:07:33,409
nineteen seventy maybe you don't have to

200
00:07:32,119 --> 00:07:36,889
deal<font color="#E5E5E5"> with that specific one that's too</font>

201
00:07:33,409 --> 00:07:38,869
far off but<font color="#E5E5E5"> you will get problems so</font>

202
00:07:36,889 --> 00:07:41,089
let's assume<font color="#E5E5E5"> for a second you can just</font>

203
00:07:38,869 --> 00:07:42,919
assume<font color="#CCCCCC"> a way how many messaging again I</font>

204
00:07:41,089 --> 00:07:45,379
<font color="#E5E5E5">think I'll just</font><font color="#CCCCCC"> get one message for time</font>

205
00:07:42,919 --> 00:07:46,698
interval all right somehow get that<font color="#E5E5E5"> and</font>

206
00:07:45,379 --> 00:07:49,009
then you<font color="#E5E5E5"> could do something interesting</font>

207
00:07:46,699 --> 00:07:52,999
<font color="#CCCCCC">you could delete keys only when you get</font>

208
00:07:49,009 --> 00:07:54,740
messages right and so then you could<font color="#E5E5E5"> get</font>

209
00:07:52,999 --> 00:07:55,969
you know<font color="#CCCCCC"> but you could skip time</font>

210
00:07:54,740 --> 00:07:57,289
interval one you didn't get anything<font color="#E5E5E5"> to</font>

211
00:07:55,969 --> 00:07:59,240
that you did get one from time interval

212
00:07:57,289 --> 00:08:01,579
<font color="#E5E5E5">two and 10 min allah book</font><font color="#CCCCCC"> three and so</font>

213
00:07:59,240 --> 00:08:02,809
you delete those but you're still safe

214
00:08:01,579 --> 00:08:04,669
you've still got forward security

215
00:08:02,809 --> 00:08:07,039
because you deleted the<font color="#E5E5E5"> keys that could</font>

216
00:08:04,669 --> 00:08:08,688
decrypt those messages well you did but

217
00:08:07,039 --> 00:08:12,169
the problem is you didn't delete the

218
00:08:08,689 --> 00:08:13,579
keys that<font color="#CCCCCC"> you could</font><font color="#E5E5E5"> derive to get those</font>

219
00:08:12,169 --> 00:08:15,938
messages and so this solution doesn't

220
00:08:13,579 --> 00:08:18,050
entirely work right it's<font color="#E5E5E5"> a nice idea but</font>

221
00:08:15,939 --> 00:08:19,849
you can't quite<font color="#E5E5E5"> get this thing to work</font>

222
00:08:18,050 --> 00:08:21,439
the way you want and so we sort of need

223
00:08:19,849 --> 00:08:25,159
a completely different technique to

224
00:08:21,439 --> 00:08:26,929
apply because really what we've been

225
00:08:25,159 --> 00:08:29,119
doing this entire time was we're trying

226
00:08:26,929 --> 00:08:30,018
to do this synchronously right and so we

227
00:08:29,119 --> 00:08:31,369
gave up on that because we don't have

228
00:08:30,019 --> 00:08:33,078
synchronicity so now we're sort of

229
00:08:31,369 --> 00:08:35,509
trying<font color="#E5E5E5"> to just like take out little</font>

230
00:08:33,078 --> 00:08:37,279
pieces of<font color="#E5E5E5"> our key space as we go but</font>

231
00:08:35,509 --> 00:08:39,500
<font color="#E5E5E5">this technique isn't really suited to do</font>

232
00:08:37,279 --> 00:08:45,969
that so let's sort of start<font color="#CCCCCC"> over from</font>

233
00:08:39,500 --> 00:08:45,969
scratch and let's skip that slide

234
00:08:47,540 --> 00:08:54,019
try something<font color="#E5E5E5"> different so what do you</font>

235
00:08:51,050 --> 00:08:56,269
do well suppose you just<font color="#CCCCCC"> had messages</font>

236
00:08:54,019 --> 00:08:58,190
which have a unique random tag and that

237
00:08:56,269 --> 00:09:00,170
every<font color="#E5E5E5"> time</font><font color="#CCCCCC"> you get</font><font color="#E5E5E5"> message you can</font>

238
00:08:58,190 --> 00:09:03,620
simply revoke the ability to decrypt on

239
00:09:00,170 --> 00:09:05,060
only<font color="#E5E5E5"> that pack up this would be nice</font>

240
00:09:03,620 --> 00:09:07,190
this would get you the sort<font color="#E5E5E5"> of</font>

241
00:09:05,060 --> 00:09:09,018
fine-grained forward security you<font color="#CCCCCC"> want</font>

242
00:09:07,190 --> 00:09:10,730
<font color="#E5E5E5">because</font><font color="#CCCCCC"> the moment you get a message to</font>

243
00:09:09,019 --> 00:09:13,130
you<font color="#E5E5E5"> update your key material and you</font>

244
00:09:10,730 --> 00:09:17,449
have no problem<font color="#E5E5E5"> you can't but you're now</font>

245
00:09:13,130 --> 00:09:18,800
for<font color="#E5E5E5"> its secure and it would solve a lot</font>

246
00:09:17,449 --> 00:09:21,079
of these sickness any issues because the

247
00:09:18,800 --> 00:09:22,250
order wouldn't matter right you doesn't

248
00:09:21,079 --> 00:09:23,540
care which order these messages get in

249
00:09:22,250 --> 00:09:25,310
because<font color="#E5E5E5"> you still just updated the key</font>

250
00:09:23,540 --> 00:09:26,630
and so we call<font color="#CCCCCC"> this puncture</font><font color="#E5E5E5"> bowl</font>

251
00:09:25,310 --> 00:09:28,670
encryption because you effectively just

252
00:09:26,630 --> 00:09:33,380
end up poking very precise holes in your

253
00:09:28,670 --> 00:09:36,339
secret key and so the question is how

254
00:09:33,380 --> 00:09:38,750
you<font color="#E5E5E5"> build this well there is a</font>

255
00:09:36,339 --> 00:09:43,069
interesting thing you can get negations

256
00:09:38,750 --> 00:09:44,810
for inactive you based encryption and so

257
00:09:43,069 --> 00:09:46,250
remember attribute based encryption as

258
00:09:44,810 --> 00:09:48,768
this notion if you have access policies

259
00:09:46,250 --> 00:09:51,560
for cipher texts that have attributes on

260
00:09:48,769 --> 00:09:53,750
them and it turns out you can have

261
00:09:51,560 --> 00:09:56,569
policies that say you can do anything if

262
00:09:53,750 --> 00:09:58,699
you meet some peak condition and not<font color="#E5E5E5"> X</font>

263
00:09:56,569 --> 00:10:00,769
or like not your message is top secret

264
00:09:58,699 --> 00:10:02,630
right and so<font color="#CCCCCC"> this</font><font color="#E5E5E5"> is a very nice</font>

265
00:10:00,769 --> 00:10:04,910
starting point because effectively we

266
00:10:02,630 --> 00:10:08,600
need this exact technique we want to be

267
00:10:04,910 --> 00:10:10,730
able to take a message a key that we

268
00:10:08,600 --> 00:10:12,769
have and make it say and not this

269
00:10:10,730 --> 00:10:14,660
specific message where that is a random

270
00:10:12,769 --> 00:10:15,949
<font color="#E5E5E5">tag where we put in the thing right so</font>

271
00:10:14,660 --> 00:10:18,260
that would<font color="#CCCCCC"> be really nice and this would</font>

272
00:10:15,949 --> 00:10:21,680
almost get us this but the<font color="#E5E5E5"> problem is</font>

273
00:10:18,260 --> 00:10:24,170
<font color="#CCCCCC">that we can't</font><font color="#E5E5E5"> take this scheme and add</font>

274
00:10:21,680 --> 00:10:26,989
negation so we can't take<font color="#E5E5E5"> a scheme a key</font>

275
00:10:24,170 --> 00:10:29,149
that says and not message<font color="#E5E5E5"> 5 and add it</font>

276
00:10:26,990 --> 00:10:31,160
to say and not message 5 and not message

277
00:10:29,149 --> 00:10:33,680
42 right these are both random tags on

278
00:10:31,160 --> 00:10:35,079
the messages and because you can't do

279
00:10:33,680 --> 00:10:37,519
that we can't quite get this to work

280
00:10:35,079 --> 00:10:39,109
thankfully though you can update<font color="#CCCCCC"> the</font>

281
00:10:37,519 --> 00:10:40,579
scheme so that you<font color="#E5E5E5"> can actually do</font><font color="#CCCCCC"> that</font>

282
00:10:39,110 --> 00:10:41,750
and you have<font color="#E5E5E5"> to do a few tweaks the</font>

283
00:10:40,579 --> 00:10:43,130
first thing you have to do is you<font color="#CCCCCC"> have</font>

284
00:10:41,750 --> 00:10:45,439
to remove all<font color="#E5E5E5"> of the notion of</font>

285
00:10:43,130 --> 00:10:46,970
indications sorry of everything but

286
00:10:45,439 --> 00:10:48,860
negations you can't have other policies

287
00:10:46,970 --> 00:10:51,050
and<font color="#CCCCCC"> the second thing you have to do is</font>

288
00:10:48,860 --> 00:10:52,880
store a special negating key that's not

289
00:10:51,050 --> 00:10:54,319
actually used we call this in the null

290
00:10:52,880 --> 00:10:55,579
tag right you will never tagged a

291
00:10:54,319 --> 00:10:59,620
message with this but you have to have

292
00:10:55,579 --> 00:11:01,810
<font color="#E5E5E5">it in your crypto system and so</font>

293
00:10:59,620 --> 00:11:03,700
what happens is every time you get a

294
00:11:01,810 --> 00:11:06,550
message you take the existing negated

295
00:11:03,700 --> 00:11:08,800
key that you have and you split the

296
00:11:06,550 --> 00:11:10,630
secret in that into a negation for the

297
00:11:08,800 --> 00:11:12,550
message you got and a new version of

298
00:11:10,630 --> 00:11:13,810
this negated null tag right and then

299
00:11:12,550 --> 00:11:16,959
when you get another message right you

300
00:11:13,810 --> 00:11:18,430
just repeat this process and you keep

301
00:11:16,960 --> 00:11:22,589
updating the null tag and you add these

302
00:11:18,430 --> 00:11:25,359
new negations so this works quite nicely

303
00:11:22,589 --> 00:11:29,890
when it has a pretty<font color="#CCCCCC"> obvious limitation</font>

304
00:11:25,360 --> 00:11:32,050
to it which is that this thing grows

305
00:11:29,890 --> 00:11:33,699
linearly right if you you<font color="#CCCCCC"> know maybe you</font>

306
00:11:32,050 --> 00:11:35,439
can get<font color="#CCCCCC"> this to work for a minute or an</font>

307
00:11:33,700 --> 00:11:37,480
hour but sooner or<font color="#E5E5E5"> later you're going to</font>

308
00:11:35,440 --> 00:11:39,310
received enough messages that you have

309
00:11:37,480 --> 00:11:41,589
negated this thing too many<font color="#E5E5E5"> times right</font>

310
00:11:39,310 --> 00:11:43,060
and it<font color="#E5E5E5"> will still work but since the key</font>

311
00:11:41,589 --> 00:11:47,560
grows linearly as you do<font color="#E5E5E5"> this and your</font>

312
00:11:43,060 --> 00:11:48,969
decryption time grows linearly bit of so

313
00:11:47,560 --> 00:11:50,829
effectively we'd have to have<font color="#E5E5E5"> one of</font>

314
00:11:48,970 --> 00:11:52,480
<font color="#E5E5E5">these keys every day or every month or</font>

315
00:11:50,830 --> 00:11:55,180
something<font color="#E5E5E5"> and that sort of gets us back</font>

316
00:11:52,480 --> 00:12:00,850
to that's<font color="#E5E5E5"> strawman solution of have one</font>

317
00:11:55,180 --> 00:12:02,260
keeper day so you want to actually to

318
00:12:00,850 --> 00:12:05,350
combine the<font color="#CCCCCC"> two scheme the two</font>

319
00:12:02,260 --> 00:12:08,080
approaches right you'd like to have

320
00:12:05,350 --> 00:12:11,650
punctures only per every individual time

321
00:12:08,080 --> 00:12:13,690
interval each time<font color="#E5E5E5"> you get a go to earn</font>

322
00:12:11,650 --> 00:12:15,550
your interval you<font color="#E5E5E5"> actually reset on</font><font color="#CCCCCC"> the</font>

323
00:12:13,690 --> 00:12:17,260
number of punctures so it turns<font color="#E5E5E5"> out you</font>

324
00:12:15,550 --> 00:12:19,599
can do this you<font color="#CCCCCC"> basically have to</font>

325
00:12:17,260 --> 00:12:21,610
combine<font color="#E5E5E5"> the two schemes it's a little</font>

326
00:12:19,600 --> 00:12:22,930
more complicated<font color="#E5E5E5"> than just encrypt under</font>

327
00:12:21,610 --> 00:12:24,610
both because if you encrypt under both

328
00:12:22,930 --> 00:12:27,520
or one<font color="#CCCCCC"> of them is compromised you still</font>

329
00:12:24,610 --> 00:12:29,140
lose you<font color="#CCCCCC"> actually have to Reeve andum</font>

330
00:12:27,520 --> 00:12:31,240
eyes the keys together every time<font color="#E5E5E5"> you do</font>

331
00:12:29,140 --> 00:12:33,040
this in a<font color="#CCCCCC"> very particular way but the</font>

332
00:12:31,240 --> 00:12:34,540
gist of it is you can get it and it's

333
00:12:33,040 --> 00:12:36,849
<font color="#CCCCCC">actually fairly cheap to combine them</font>

334
00:12:34,540 --> 00:12:38,770
and so then what you get is this ability

335
00:12:36,850 --> 00:12:40,300
which is what we always wanted to deal

336
00:12:38,770 --> 00:12:43,390
with late messages because we can<font color="#E5E5E5"> just</font>

337
00:12:40,300 --> 00:12:45,040
keep all the keys around but we can

338
00:12:43,390 --> 00:12:47,800
update each one of those keys so they

339
00:12:45,040 --> 00:12:50,099
can't get whatever<font color="#E5E5E5"> message is you want</font>

340
00:12:47,800 --> 00:12:55,540
<font color="#E5E5E5">to put you got in that specific interval</font>

341
00:12:50,100 --> 00:12:57,130
so this is<font color="#E5E5E5"> nice and this isn't</font><font color="#CCCCCC"> actually</font>

342
00:12:55,540 --> 00:12:59,949
just a theoretical thing we actually

343
00:12:57,130 --> 00:13:02,760
built this it's about<font color="#E5E5E5"> 4k lines of C++ it</font>

344
00:12:59,950 --> 00:13:04,930
has separate of limitations<font color="#E5E5E5"> for the BBG</font>

345
00:13:02,760 --> 00:13:06,580
<font color="#E5E5E5">hype scheme the function will be a</font>

346
00:13:04,930 --> 00:13:07,930
scheme and the combined one so you<font color="#CCCCCC"> can</font>

347
00:13:06,580 --> 00:13:09,040
use these individually if there are

348
00:13:07,930 --> 00:13:12,069
<font color="#E5E5E5">interest to you or you can use the</font>

349
00:13:09,040 --> 00:13:12,630
combined one uses BMG 56 curves and the

350
00:13:12,070 --> 00:13:15,120
relic

351
00:13:12,630 --> 00:13:16,430
ring library which as far as i know is

352
00:13:15,120 --> 00:13:19,860
sort of the fastest thing you can use

353
00:13:16,430 --> 00:13:21,930
<font color="#CCCCCC">it's easily available and actually that</font>

354
00:13:19,860 --> 00:13:24,870
<font color="#E5E5E5">last point into law the code is</font><font color="#CCCCCC"> actually</font>

355
00:13:21,930 --> 00:13:26,040
up online now and as far as<font color="#E5E5E5"> i know and i</font>

356
00:13:24,870 --> 00:13:27,420
may be shooting myself in the foot here

357
00:13:26,040 --> 00:13:28,829
you should be able to<font color="#E5E5E5"> download it</font>

358
00:13:27,420 --> 00:13:30,599
install the dependencies and it should

359
00:13:28,830 --> 00:13:32,870
compile and pass tests on all of your

360
00:13:30,600 --> 00:13:36,890
systems unless you're running<font color="#CCCCCC"> Windows</font>

361
00:13:32,870 --> 00:13:40,010
but uh well we're see about that I<font color="#E5E5E5"> guess</font>

362
00:13:36,890 --> 00:13:42,449
so we built<font color="#E5E5E5"> this how does it perform</font>

363
00:13:40,010 --> 00:13:43,890
well so the first question and<font color="#E5E5E5"> this is</font>

364
00:13:42,450 --> 00:13:45,960
sort<font color="#E5E5E5"> of an interesting thing</font><font color="#CCCCCC"> that we had</font>

365
00:13:43,890 --> 00:13:49,199
to deal<font color="#CCCCCC"> with is how do</font><font color="#E5E5E5"> you even test</font>

366
00:13:45,960 --> 00:13:50,490
this right the the<font color="#E5E5E5"> I could give you</font>

367
00:13:49,200 --> 00:13:51,660
wrong numbers for the primitives like

368
00:13:50,490 --> 00:13:52,800
how<font color="#E5E5E5"> long it takes to decrypt</font><font color="#CCCCCC"> four</font>

369
00:13:51,660 --> 00:13:55,230
messages on punctured or things like

370
00:13:52,800 --> 00:13:56,370
that but those are pretty useless right

371
00:13:55,230 --> 00:13:57,870
<font color="#E5E5E5">you want to know how</font><font color="#CCCCCC"> long it takes to</font>

372
00:13:56,370 --> 00:14:00,120
the clip after you've gotten<font color="#E5E5E5"> like 50</font>

373
00:13:57,870 --> 00:14:01,440
messages or something but you don't know

374
00:14:00,120 --> 00:14:02,670
particularly what the distribution the

375
00:14:01,440 --> 00:14:04,710
messages are so we've got to make some

376
00:14:02,670 --> 00:14:06,270
simplifying assumptions so the first

377
00:14:04,710 --> 00:14:08,100
thing we did is we assumed that your

378
00:14:06,270 --> 00:14:09,600
messages are distributed with a<font color="#E5E5E5"> Poisson</font>

379
00:14:08,100 --> 00:14:13,020
process and you get them at 1 / x

380
00:14:09,600 --> 00:14:14,370
whatever X is and we varied that so once

381
00:14:13,020 --> 00:14:16,170
you do that position the question is

382
00:14:14,370 --> 00:14:18,120
then how big do you make the intervals

383
00:14:16,170 --> 00:14:19,829
right I've been<font color="#E5E5E5"> saying once once every</font>

384
00:14:18,120 --> 00:14:22,080
day you could do once every second if

385
00:14:19,830 --> 00:14:23,580
<font color="#CCCCCC">you don't talk to very many people</font><font color="#E5E5E5"> and</font>

386
00:14:22,080 --> 00:14:27,210
don't<font color="#E5E5E5"> get very many messages you could</font>

387
00:14:23,580 --> 00:14:28,800
do once every month I<font color="#E5E5E5"> it varies and it</font>

388
00:14:27,210 --> 00:14:30,000
also really varies depending<font color="#CCCCCC"> on what</font>

389
00:14:28,800 --> 00:14:31,979
kind of messaging system you're using

390
00:14:30,000 --> 00:14:34,470
<font color="#E5E5E5">right you'll get more messages on a chat</font>

391
00:14:31,980 --> 00:14:37,260
protocol than on email per second I

392
00:14:34,470 --> 00:14:39,300
guess um and so<font color="#CCCCCC"> we tested</font><font color="#E5E5E5"> a bunch of</font>

393
00:14:37,260 --> 00:14:42,780
<font color="#E5E5E5">different</font><font color="#CCCCCC"> scenarios and it turns out and</font>

394
00:14:39,300 --> 00:14:44,849
<font color="#E5E5E5">this</font><font color="#CCCCCC"> is sort of a funny result to me the</font>

395
00:14:42,780 --> 00:14:46,709
optimal choice you pick is you want<font color="#E5E5E5"> to</font>

396
00:14:44,850 --> 00:14:48,890
pick your interval sizes so<font color="#CCCCCC"> that you</font>

397
00:14:46,710 --> 00:14:51,930
expect to get one message per interval

398
00:14:48,890 --> 00:14:53,760
and why is this funny well it's funny

399
00:14:51,930 --> 00:14:55,859
because you think about the<font color="#E5E5E5"> entire line</font>

400
00:14:53,760 --> 00:14:57,600
of slides I just went through<font color="#E5E5E5"> of here's</font>

401
00:14:55,860 --> 00:14:59,310
the existing tree based stuff<font color="#E5E5E5"> here's an</font>

402
00:14:57,600 --> 00:15:00,930
adaptation to it and then<font color="#CCCCCC"> hughes the</font>

403
00:14:59,310 --> 00:15:02,670
pump punchable encryption scheme which

404
00:15:00,930 --> 00:15:04,229
is what we<font color="#E5E5E5"> actually started out on a</font>

405
00:15:02,670 --> 00:15:06,540
whiteboard<font color="#E5E5E5"> that motivated this paper if</font>

406
00:15:04,230 --> 00:15:08,670
you're<font color="#E5E5E5"> only getting expected one message</font>

407
00:15:06,540 --> 00:15:09,839
per interval you don't ever actually use

408
00:15:08,670 --> 00:15:14,189
the puncture ball encryption stuff

409
00:15:09,840 --> 00:15:16,380
really but you do still need it right

410
00:15:14,190 --> 00:15:17,940
because you expect to get one message

411
00:15:16,380 --> 00:15:20,160
per interval but<font color="#E5E5E5"> if you get unlucky</font>

412
00:15:17,940 --> 00:15:22,020
right if you guessed wrong and you will

413
00:15:20,160 --> 00:15:24,219
occasionally have guessed wrong you then

414
00:15:22,020 --> 00:15:28,240
<font color="#CCCCCC">have this to fall back on</font>

415
00:15:24,220 --> 00:15:29,290
and so when you assume one message<font color="#CCCCCC"> for</font>

416
00:15:28,240 --> 00:15:32,440
interval how well does this thing

417
00:15:29,290 --> 00:15:34,449
perform well so the average performance

418
00:15:32,440 --> 00:15:36,790
is it takes expected 20 milliseconds to

419
00:15:34,450 --> 00:15:38,290
decrypt with<font color="#E5E5E5"> 99 percent probability</font>

420
00:15:36,790 --> 00:15:40,329
again because you have a probabilistic

421
00:15:38,290 --> 00:15:41,650
distribution on the messages a total

422
00:15:40,330 --> 00:15:44,440
time to handle a message is less<font color="#E5E5E5"> than</font>

423
00:15:41,650 --> 00:15:46,750
100 milliseconds on a phone it's a

424
00:15:44,440 --> 00:15:48,490
little worse it's 55 millisecond to the

425
00:15:46,750 --> 00:15:51,220
<font color="#E5E5E5">Crypt with 99 percent probability it's</font>

426
00:15:48,490 --> 00:15:52,960
less<font color="#CCCCCC"> than 500 milliseconds and there are</font>

427
00:15:51,220 --> 00:15:55,420
some optimizations you can do to this in

428
00:15:52,960 --> 00:15:57,400
particular<font color="#CCCCCC"> this data was for when you</font>

429
00:15:55,420 --> 00:16:00,189
get<font color="#CCCCCC"> a</font><font color="#E5E5E5"> message you try to derive the the</font>

430
00:15:57,400 --> 00:16:02,490
tree based key for<font color="#CCCCCC"> that time interval</font>

431
00:16:00,190 --> 00:16:04,870
immediately if<font color="#E5E5E5"> you already haven't and</font>

432
00:16:02,490 --> 00:16:06,760
you could batch those up and<font color="#E5E5E5"> do them</font>

433
00:16:04,870 --> 00:16:09,010
beforehand that would save you some time

434
00:16:06,760 --> 00:16:10,450
and power and having to wake the phone

435
00:16:09,010 --> 00:16:12,850
up so you'd probably want<font color="#E5E5E5"> to do that in</font>

436
00:16:10,450 --> 00:16:14,170
practice these time projects are

437
00:16:12,850 --> 00:16:16,090
actually<font color="#E5E5E5"> pretty small though about point</font>

438
00:16:14,170 --> 00:16:17,589
five kilobytes for just you know

439
00:16:16,090 --> 00:16:18,840
encrypting and<font color="#E5E5E5"> say a symmetric key that</font>

440
00:16:17,590 --> 00:16:22,120
<font color="#E5E5E5">you used to actually encrypt the message</font>

441
00:16:18,840 --> 00:16:25,450
but most importantly you only need<font color="#E5E5E5"> to</font>

442
00:16:22,120 --> 00:16:27,040
use<font color="#CCCCCC"> this scheme for</font><font color="#E5E5E5"> the first message</font>

443
00:16:25,450 --> 00:16:28,420
that you're sending to someone you don't

444
00:16:27,040 --> 00:16:30,280
<font color="#E5E5E5">know you don't need to use this for</font>

445
00:16:28,420 --> 00:16:31,209
every<font color="#E5E5E5"> single message you're only going</font>

446
00:16:30,280 --> 00:16:32,560
<font color="#E5E5E5">to use it when</font><font color="#CCCCCC"> you talk</font><font color="#E5E5E5"> to someone</font>

447
00:16:31,210 --> 00:16:34,450
you've just met and<font color="#E5E5E5"> you have it</font>

448
00:16:32,560 --> 00:16:36,189
exchanged a key<font color="#E5E5E5"> before because you use</font>

449
00:16:34,450 --> 00:16:38,110
this to bootstrap a symmetric key that

450
00:16:36,190 --> 00:16:39,400
you<font color="#E5E5E5"> just use between you and them and</font>

451
00:16:38,110 --> 00:16:42,490
then you can use something like the Ox

452
00:16:39,400 --> 00:16:44,860
alot of ratchet to actually get

453
00:16:42,490 --> 00:16:47,140
<font color="#CCCCCC">fine-grained security so this</font><font color="#E5E5E5"> actually I</font>

454
00:16:44,860 --> 00:16:49,180
think scales pretty well for the the use

455
00:16:47,140 --> 00:16:51,460
case of introduction to one person each

456
00:16:49,180 --> 00:16:53,170
person once it actually probably scales

457
00:16:51,460 --> 00:16:55,600
well enough to do real message who puts

458
00:16:53,170 --> 00:16:57,219
but I mean there's sort of a distinction

459
00:16:55,600 --> 00:16:58,930
between what<font color="#E5E5E5"> i think is practical in</font>

460
00:16:57,220 --> 00:17:00,490
terms of<font color="#E5E5E5"> times of what people who makes</font>

461
00:16:58,930 --> 00:17:01,870
off the best to run a real mobile<font color="#E5E5E5"> phones</font>

462
00:17:00,490 --> 00:17:05,020
and get comments about<font color="#E5E5E5"> its killing about</font>

463
00:17:01,870 --> 00:17:07,589
battery life<font color="#E5E5E5"> is practical but</font><font color="#CCCCCC"> i</font><font color="#E5E5E5"> think</font>

464
00:17:05,020 --> 00:17:11,650
<font color="#CCCCCC">it's definitely practical for that and</font>

465
00:17:07,589 --> 00:17:12,909
so in conclusion latency tolerance is

466
00:17:11,650 --> 00:17:14,170
actually quite important before<font color="#E5E5E5"> word</font>

467
00:17:12,910 --> 00:17:18,250
security has sort of been an ignored

468
00:17:14,170 --> 00:17:20,320
property and who the theoretical work we

469
00:17:18,250 --> 00:17:21,970
want and really<font color="#E5E5E5"> need fine grain forward</font>

470
00:17:20,319 --> 00:17:28,500
security and we actually<font color="#E5E5E5"> got both of</font>

471
00:17:21,970 --> 00:17:31,920
<font color="#CCCCCC">these um by doing this and so with that</font>

472
00:17:28,500 --> 00:17:31,920
<font color="#CCCCCC">okay questions</font>

473
00:17:41,419 --> 00:17:45,500
ok any are there any questions

474
00:17:57,590 --> 00:18:01,290
in some identity based encryption

475
00:17:59,610 --> 00:18:04,199
schemes you have to rely on some form of

476
00:18:01,290 --> 00:18:05,580
key escrow I fact that again in some

477
00:18:04,200 --> 00:18:07,620
forms of identity based encryption

478
00:18:05,580 --> 00:18:10,199
schemes you have to rely on some form of

479
00:18:07,620 --> 00:18:19,919
key escrow you don't for this one as far

480
00:18:10,200 --> 00:18:23,970
<font color="#E5E5E5">as I know okay great thanks hi so this</font>

481
00:18:19,920 --> 00:18:27,210
will<font color="#CCCCCC"> give you forward secrecy as long as</font>

482
00:18:23,970 --> 00:18:29,010
you actually received the message so I

483
00:18:27,210 --> 00:18:30,210
had a slide explaining that and I

484
00:18:29,010 --> 00:18:31,320
actually should have put your name on<font color="#E5E5E5"> it</font>

485
00:18:30,210 --> 00:18:36,720
cuz i was guessing you were gonna ask

486
00:18:31,320 --> 00:18:38,580
this shouldn't have put this so far

487
00:18:36,720 --> 00:18:40,890
through the thing so yes it's a very

488
00:18:38,580 --> 00:18:42,480
<font color="#CCCCCC">good point so there</font><font color="#E5E5E5"> is a an issue which</font>

489
00:18:40,890 --> 00:18:45,000
you're only<font color="#E5E5E5"> getting messages in the</font>

490
00:18:42,480 --> 00:18:46,830
puncture<font color="#CCCCCC"> bulla scheme you only update</font>

491
00:18:45,000 --> 00:18:48,360
your key when you delete messages when

492
00:18:46,830 --> 00:18:50,429
you<font color="#E5E5E5"> when</font><font color="#CCCCCC"> you get the messages weather so</font>

493
00:18:48,360 --> 00:18:53,280
if there's an attacker who drops your

494
00:18:50,430 --> 00:18:55,260
messages<font color="#E5E5E5"> and then later in later</font><font color="#CCCCCC"> who</font>

495
00:18:53,280 --> 00:18:57,149
comes and<font color="#E5E5E5"> gets your key they'd be able</font>

496
00:18:55,260 --> 00:18:58,680
<font color="#E5E5E5">to decrypt them so the first point is</font>

497
00:18:57,150 --> 00:19:00,750
for the combined scheme there's still

498
00:18:58,680 --> 00:19:02,610
this time counter moving around oops I

499
00:19:00,750 --> 00:19:04,020
there actually isn't for the combined

500
00:19:02,610 --> 00:19:06,570
scheme however or this one you can have

501
00:19:04,020 --> 00:19:08,850
<font color="#CCCCCC">a like window and after that window X</font>

502
00:19:06,570 --> 00:19:10,919
<font color="#CCCCCC">file expires you</font><font color="#E5E5E5"> can just delete the</font>

503
00:19:08,850 --> 00:19:13,199
keys no matter what happened and so that

504
00:19:10,920 --> 00:19:14,730
<font color="#E5E5E5">window might be like 12 or 24 hours it</font>

505
00:19:13,200 --> 00:19:18,420
might be some complex notion of when the

506
00:19:14,730 --> 00:19:20,130
last time we saw your online was this is

507
00:19:18,420 --> 00:19:22,230
what textsecure also ends up having to

508
00:19:20,130 --> 00:19:23,310
do the second point though I mean

509
00:19:22,230 --> 00:19:25,290
there's a valid<font color="#E5E5E5"> point to make you ask</font>

510
00:19:23,310 --> 00:19:27,149
<font color="#E5E5E5">the question is I'm not entirely sure</font>

511
00:19:25,290 --> 00:19:28,770
this is something you<font color="#CCCCCC"> have to worry</font>

512
00:19:27,150 --> 00:19:31,470
<font color="#E5E5E5">about because I'm a little confused of</font>

513
00:19:28,770 --> 00:19:32,879
who the attacker is who can mess with

514
00:19:31,470 --> 00:19:35,370
your network traffic you<font color="#CCCCCC"> can clearly do</font>

515
00:19:32,880 --> 00:19:38,280
that can compromise your system you can

516
00:19:35,370 --> 00:19:40,649
clearly do that but is going to do that

517
00:19:38,280 --> 00:19:41,940
<font color="#E5E5E5">and then steal your key because if</font><font color="#CCCCCC"> it's</font>

518
00:19:40,650 --> 00:19:43,260
you're<font color="#CCCCCC"> dealing with like the NSA they'll</font>

519
00:19:41,940 --> 00:19:44,100
break into your thing to put a bug on it

520
00:19:43,260 --> 00:19:45,420
and they<font color="#E5E5E5"> probably would have done it</font>

521
00:19:44,100 --> 00:19:48,149
<font color="#CCCCCC">before you sent a message in the first</font>

522
00:19:45,420 --> 00:19:50,520
place so<font color="#CCCCCC"> it</font><font color="#E5E5E5"> is a valid point we do</font>

523
00:19:48,150 --> 00:19:52,890
protect against it well you can imagine

524
00:19:50,520 --> 00:19:58,200
an attacker that's waiting for you to

525
00:19:52,890 --> 00:20:01,590
<font color="#E5E5E5">enter country X yes and a message is</font>

526
00:19:58,200 --> 00:20:04,320
coming to you they intercept that your

527
00:20:01,590 --> 00:20:07,449
network connection and then you land at

528
00:20:04,320 --> 00:20:11,320
JFK I mean at country X

529
00:20:07,450 --> 00:20:12,820
and yeah okay okay<font color="#E5E5E5"> dump your key but</font>

530
00:20:11,320 --> 00:20:14,860
actually<font color="#CCCCCC"> extra good point then yes</font>

531
00:20:12,820 --> 00:20:16,899
anyway we do deal with that but you do

532
00:20:14,860 --> 00:20:18,668
have to pick sort of there's a tension

533
00:20:16,899 --> 00:20:21,668
between how likely that attacks i might

534
00:20:18,669 --> 00:20:23,470
happen<font color="#CCCCCC"> and you know how long you</font><font color="#E5E5E5"> want to</font>

535
00:20:21,669 --> 00:20:24,909
<font color="#E5E5E5">deal with late messages normally so if</font>

536
00:20:23,470 --> 00:20:27,929
you add Snowden you probably want to set

537
00:20:24,909 --> 00:20:30,190
that to be like five minutes if you are

538
00:20:27,929 --> 00:20:34,419
me and you don't<font color="#E5E5E5"> really care that much</font>

539
00:20:30,190 --> 00:20:35,620
24 hours is probably fine but yeah you

540
00:20:34,419 --> 00:20:37,750
do need to<font color="#E5E5E5"> deal with</font><font color="#CCCCCC"> that and you</font><font color="#E5E5E5"> can</font>

541
00:20:35,620 --> 00:20:39,340
it's<font color="#CCCCCC"> really</font><font color="#E5E5E5"> you can actually deal with</font>

542
00:20:37,750 --> 00:20:40,899
it<font color="#E5E5E5"> just the puncture herbal scheme but</font>

543
00:20:39,340 --> 00:20:41,860
you have to have<font color="#E5E5E5"> two tags instead of one</font>

544
00:20:40,899 --> 00:20:43,600
and one of them has to<font color="#E5E5E5"> be the time</font>

545
00:20:41,860 --> 00:20:44,979
period<font color="#E5E5E5"> and then like when it's up you</font>

546
00:20:43,600 --> 00:20:50,019
just<font color="#CCCCCC"> punctured about a</font><font color="#E5E5E5"> one on that time</font>

547
00:20:44,980 --> 00:20:53,669
period thank you great let's think in

548
00:20:50,019 --> 00:20:53,669
and everybody from the crypto product

