1
00:00:00,060 --> 00:00:05,279
good afternoon my name<font color="#E5E5E5"> is NaN</font><font color="#CCCCCC"> John and</font>

2
00:00:02,639 --> 00:00:07,048
I'm from<font color="#E5E5E5"> Indiana University</font><font color="#CCCCCC"> the paper</font>

3
00:00:05,279 --> 00:00:09,660
I'm going to present<font color="#CCCCCC"> today is leave me</font>

4
00:00:07,049 --> 00:00:13,550
<font color="#E5E5E5">alone</font><font color="#CCCCCC"> at level protection</font><font color="#E5E5E5"> against the</font>

5
00:00:09,660 --> 00:00:13,550
runtime<font color="#E5E5E5"> information</font><font color="#CCCCCC"> gathering on Android</font>

6
00:00:25,550 --> 00:00:31,250
<font color="#E5E5E5">as it is well known Android system uses</font>

7
00:00:28,920 --> 00:00:34,770
permission based access control<font color="#E5E5E5"> to</font>

8
00:00:31,250 --> 00:00:37,410
<font color="#E5E5E5">protect these</font><font color="#CCCCCC"> resources app</font><font color="#E5E5E5"> only needs</font>

9
00:00:34,770 --> 00:00:40,379
to specify<font color="#E5E5E5"> the permissions it wants to</font>

10
00:00:37,410 --> 00:00:42,599
<font color="#E5E5E5">use</font><font color="#CCCCCC"> at installation stage and then it</font>

11
00:00:40,379 --> 00:00:45,390
can use<font color="#CCCCCC"> the resources that the</font>

12
00:00:42,600 --> 00:00:48,690
permission protects<font color="#E5E5E5"> whenever it wants to</font>

13
00:00:45,390 --> 00:00:51,449
and also sandboxing is used as<font color="#CCCCCC"> what</font>

14
00:00:48,690 --> 00:00:53,370
<font color="#CCCCCC">separates those apps from each other in</font>

15
00:00:51,449 --> 00:00:57,000
order<font color="#CCCCCC"> to protect this</font><font color="#E5E5E5"> private</font>

16
00:00:53,370 --> 00:00:58,919
information however<font color="#E5E5E5"> enormous attacks</font>

17
00:00:57,000 --> 00:01:03,420
have been proposed to threaten such

18
00:00:58,920 --> 00:01:06,180
security mechanisms for example if a

19
00:01:03,420 --> 00:01:08,549
voice<font color="#E5E5E5"> memo app is granted record audio</font>

20
00:01:06,180 --> 00:01:11,670
permission it could also use such

21
00:01:08,549 --> 00:01:14,000
capability to record<font color="#E5E5E5"> a phone call where</font>

22
00:01:11,670 --> 00:01:16,619
it can<font color="#CCCCCC"> extract credit card information</font>

23
00:01:14,000 --> 00:01:19,500
when user interacts with<font color="#E5E5E5"> a</font><font color="#CCCCCC"> phone manual</font>

24
00:01:16,619 --> 00:01:22,820
system and that asks the<font color="#CCCCCC"> user to</font><font color="#E5E5E5"> either</font>

25
00:01:19,500 --> 00:01:25,979
type in or speak the credit card number

26
00:01:22,820 --> 00:01:29,220
<font color="#CCCCCC">and also</font><font color="#E5E5E5"> another example</font><font color="#CCCCCC"> is that</font>

27
00:01:25,979 --> 00:01:30,810
<font color="#E5E5E5">malicious app could installed on a phone</font>

28
00:01:29,220 --> 00:01:33,770
could infer the<font color="#CCCCCC"> routes the user is</font>

29
00:01:30,810 --> 00:01:39,630
driving<font color="#E5E5E5"> by leveraging the speaker usage</font>

30
00:01:33,770 --> 00:01:43,560
of<font color="#E5E5E5"> Google Navigation also the proc file</font>

31
00:01:39,630 --> 00:01:45,780
system that<font color="#E5E5E5"> inherited from Linux also</font>

32
00:01:43,560 --> 00:01:48,990
exposed a lot<font color="#E5E5E5"> of information of an app</font>

33
00:01:45,780 --> 00:01:51,960
that could be used<font color="#E5E5E5"> to infer sensitive</font>

34
00:01:48,990 --> 00:01:54,419
data for example<font color="#CCCCCC"> in this attack the UI</font>

35
00:01:51,960 --> 00:01:56,789
state of an app could<font color="#E5E5E5"> be inferred</font>

36
00:01:54,420 --> 00:01:59,790
through shared memory<font color="#E5E5E5"> thus a channel and</font>

37
00:01:56,790 --> 00:02:02,100
thus enables the malicious app to hijack

38
00:01:59,790 --> 00:02:05,790
the<font color="#CCCCCC"> UI</font><font color="#E5E5E5"> state and still sensitive user</font>

39
00:02:02,100 --> 00:02:11,459
input or obtain sensitive current<font color="#E5E5E5"> images</font>

40
00:02:05,790 --> 00:02:13,470
shot by the user<font color="#E5E5E5"> so we define all such</font>

41
00:02:11,459 --> 00:02:15,420
attacks<font color="#E5E5E5"> that</font>

42
00:02:13,470 --> 00:02:18,390
directly<font color="#CCCCCC"> steel or indirectly inferred</font>

43
00:02:15,420 --> 00:02:20,790
sensitive<font color="#E5E5E5"> user information</font><font color="#CCCCCC"> at</font><font color="#E5E5E5"> victims</font>

44
00:02:18,390 --> 00:02:23,609
<font color="#E5E5E5">apps run time as runtime</font>

45
00:02:20,790 --> 00:02:26,429
<font color="#CCCCCC">information-gathering</font><font color="#E5E5E5"> attacks and</font><font color="#CCCCCC"> rigged</font>

46
00:02:23,610 --> 00:02:28,920
for<font color="#CCCCCC"> shot so to successfully deliver a</font>

47
00:02:26,430 --> 00:02:31,100
<font color="#E5E5E5">rigged attack the malicious app needs to</font>

48
00:02:28,920 --> 00:02:35,579
<font color="#E5E5E5">run side by side these victims apps</font>

49
00:02:31,100 --> 00:02:37,829
collecting their data<font color="#CCCCCC"> a lot</font><font color="#E5E5E5"> of</font>

50
00:02:35,580 --> 00:02:40,170
researchers have proposed<font color="#CCCCCC"> rigged attacks</font>

51
00:02:37,830 --> 00:02:42,570
<font color="#CCCCCC">and the most</font><font color="#E5E5E5"> of them are high impact and</font>

52
00:02:40,170 --> 00:02:44,700
the new<font color="#CCCCCC"> rate attacks</font><font color="#E5E5E5"> continuously</font>

53
00:02:42,570 --> 00:02:47,489
proposed<font color="#E5E5E5"> every year in top conferences</font>

54
00:02:44,700 --> 00:02:51,179
those attacks together<font color="#E5E5E5"> are threatening</font>

55
00:02:47,490 --> 00:02:54,000
one peeling<font color="#E5E5E5"> Android</font><font color="#CCCCCC"> users so while we</font>

56
00:02:51,180 --> 00:02:55,890
look into a IOT devices last summer<font color="#E5E5E5"> and</font>

57
00:02:54,000 --> 00:02:58,709
<font color="#E5E5E5">we</font><font color="#CCCCCC"> found that they are equally</font>

58
00:02:55,890 --> 00:03:00,779
vulnerable to<font color="#E5E5E5"> rig attacks</font><font color="#CCCCCC"> the two</font>

59
00:02:58,709 --> 00:03:03,120
devices<font color="#CCCCCC"> we studied which are backing</font>

60
00:03:00,780 --> 00:03:08,070
<font color="#CCCCCC">that camera with night vision and</font><font color="#E5E5E5"> nest</font>

61
00:03:03,120 --> 00:03:10,080
protect<font color="#E5E5E5"> among past IOT devices in order</font>

62
00:03:08,070 --> 00:03:13,140
<font color="#E5E5E5">to make the use</font><font color="#CCCCCC"> of a net camera it</font>

63
00:03:10,080 --> 00:03:15,180
connects to the<font color="#E5E5E5"> Internet while a home</font>

64
00:03:13,140 --> 00:03:17,399
router<font color="#E5E5E5"> the controller app on</font><font color="#CCCCCC"> a</font><font color="#E5E5E5"> phone</font>

65
00:03:15,180 --> 00:03:19,860
will talk to the net camera<font color="#E5E5E5"> either</font>

66
00:03:17,400 --> 00:03:22,170
directly<font color="#CCCCCC"> through home router or through</font>

67
00:03:19,860 --> 00:03:25,290
public<font color="#CCCCCC"> internet if the user</font><font color="#E5E5E5"> is not</font><font color="#CCCCCC"> at</font>

68
00:03:22,170 --> 00:03:28,170
home whenever the net camera wants<font color="#E5E5E5"> to</font>

69
00:03:25,290 --> 00:03:29,910
send<font color="#E5E5E5"> a message</font><font color="#CCCCCC"> to the controller app it</font>

70
00:03:28,170 --> 00:03:32,160
will go<font color="#CCCCCC"> through</font><font color="#E5E5E5"> the net camera server</font>

71
00:03:29,910 --> 00:03:35,340
and then the<font color="#CCCCCC"> message forwarded to the</font>

72
00:03:32,160 --> 00:03:38,269
Google Cloud<font color="#CCCCCC"> messaging</font><font color="#E5E5E5"> and finally the</font>

73
00:03:35,340 --> 00:03:42,030
message<font color="#E5E5E5"> were pushed</font><font color="#CCCCCC"> to the user's phone</font>

74
00:03:38,269 --> 00:03:43,950
with the model in mind<font color="#E5E5E5"> to such</font><font color="#CCCCCC"> channel</font>

75
00:03:42,030 --> 00:03:46,860
<font color="#CCCCCC">attacks through</font><font color="#E5E5E5"> such channel could be</font>

76
00:03:43,950 --> 00:03:50,250
utilized to in first<font color="#E5E5E5"> information</font><font color="#CCCCCC"> of IOT</font>

77
00:03:46,860 --> 00:03:52,650
devices<font color="#E5E5E5"> and enables three attacks that</font>

78
00:03:50,250 --> 00:03:55,110
could make a burglar break into a<font color="#CCCCCC"> noble</font>

79
00:03:52,650 --> 00:03:58,620
home without<font color="#E5E5E5"> being out at sea</font><font color="#CCCCCC"> so that</font>

80
00:03:55,110 --> 00:04:03,269
<font color="#E5E5E5">means let me elaborate</font><font color="#CCCCCC"> the attack one by</font>

81
00:03:58,620 --> 00:04:05,190
one<font color="#CCCCCC"> there is a</font><font color="#E5E5E5"> function called</font><font color="#CCCCCC"> motion</font>

82
00:04:03,269 --> 00:04:07,440
detection in that camera

83
00:04:05,190 --> 00:04:10,200
<font color="#E5E5E5">that enables the</font><font color="#CCCCCC"> camera to record video</font>

84
00:04:07,440 --> 00:04:13,430
if the image the image it captures has

85
00:04:10,200 --> 00:04:16,168
changed<font color="#E5E5E5"> and a reisel</font><font color="#CCCCCC"> armed to the</font><font color="#E5E5E5"> user</font>

86
00:04:13,430 --> 00:04:19,228
however<font color="#E5E5E5"> if the user enables this</font>

87
00:04:16,168 --> 00:04:21,659
function<font color="#E5E5E5"> it also means that she's not at</font>

88
00:04:19,228 --> 00:04:23,659
home because<font color="#E5E5E5"> otherwise the motion</font>

89
00:04:21,660 --> 00:04:27,120
detection will generate a<font color="#E5E5E5"> lot of alarms</font>

90
00:04:23,660 --> 00:04:27,460
<font color="#E5E5E5">so a malicious app on installed on the</font>

91
00:04:27,120 --> 00:04:30,130
phone

92
00:04:27,460 --> 00:04:35,229
could infer such information through the

93
00:04:30,130 --> 00:04:37,630
<font color="#E5E5E5">traffic statistics</font><font color="#CCCCCC"> side channel and then</font>

94
00:04:35,229 --> 00:04:40,690
if an alarm<font color="#E5E5E5"> is raised</font><font color="#CCCCCC"> it will be passed</font>

95
00:04:37,630 --> 00:04:43,120
to the<font color="#E5E5E5"> GCM server and then to the GCM</font>

96
00:04:40,690 --> 00:04:45,940
process on the phone<font color="#E5E5E5"> the GCM process</font>

97
00:04:43,120 --> 00:04:49,419
will<font color="#E5E5E5"> deliver the alarm to the net camera</font>

98
00:04:45,940 --> 00:04:51,460
app this could be also inferred through

99
00:04:49,419 --> 00:04:55,568
a<font color="#E5E5E5"> fixed lens range of traffic statistics</font>

100
00:04:51,460 --> 00:04:58,479
<font color="#E5E5E5">of GCM process and then observed that</font>

101
00:04:55,569 --> 00:05:01,630
<font color="#CCCCCC">Nachman</font><font color="#E5E5E5"> net camera will use CPU</font>

102
00:04:58,479 --> 00:05:05,139
immediately after this so once the

103
00:05:01,630 --> 00:05:08,469
malicious app called such information it

104
00:05:05,139 --> 00:05:12,360
<font color="#CCCCCC">can mute alarm muted a</font><font color="#E5E5E5"> phony and make</font>

105
00:05:08,470 --> 00:05:15,400
the alarm last not exposed to<font color="#CCCCCC"> the</font><font color="#E5E5E5"> user</font>

106
00:05:12,360 --> 00:05:18,130
in<font color="#E5E5E5"> the end if the user is watching live</font>

107
00:05:15,400 --> 00:05:20,530
video<font color="#E5E5E5"> of viewing clips recorded by</font>

108
00:05:18,130 --> 00:05:23,289
motion detection<font color="#CCCCCC"> a lot of traffic's will</font>

109
00:05:20,530 --> 00:05:25,750
be introduced and the malicious app

110
00:05:23,289 --> 00:05:27,909
<font color="#E5E5E5">could easily infer this information and</font>

111
00:05:25,750 --> 00:05:31,180
notify the burglar to run<font color="#CCCCCC"> away</font><font color="#E5E5E5"> right</font>

112
00:05:27,909 --> 00:05:33,699
<font color="#E5E5E5">before the police comes also the next</font>

113
00:05:31,180 --> 00:05:36,250
camera<font color="#E5E5E5"> also shares the same variability</font>

114
00:05:33,699 --> 00:05:39,280
<font color="#E5E5E5">of mute alarm attack that could make it</font>

115
00:05:36,250 --> 00:05:41,889
useless<font color="#E5E5E5"> in reporting alarm that there's</font>

116
00:05:39,280 --> 00:05:45,190
<font color="#E5E5E5">a bad situation happening in the in in</font>

117
00:05:41,889 --> 00:05:47,440
<font color="#CCCCCC">the user's home so given the</font>

118
00:05:45,190 --> 00:05:52,240
<font color="#E5E5E5">pervasiveness of rig attacks</font><font color="#CCCCCC"> what should</font>

119
00:05:47,440 --> 00:05:54,550
we do to protect<font color="#E5E5E5"> those victim apps we</font>

120
00:05:52,240 --> 00:05:57,039
<font color="#E5E5E5">have proposed a player protection app</font>

121
00:05:54,550 --> 00:06:00,060
<font color="#E5E5E5">Guardian and</font><font color="#CCCCCC"> Guardian</font><font color="#E5E5E5"> for</font><font color="#CCCCCC"> short</font><font color="#E5E5E5"> -</font>

122
00:05:57,039 --> 00:06:03,400
defined to defend against<font color="#E5E5E5"> rig attacks</font>

123
00:06:00,060 --> 00:06:05,860
<font color="#E5E5E5">Guardian prevents apps running</font><font color="#CCCCCC"> well the</font>

124
00:06:03,400 --> 00:06:08,469
<font color="#E5E5E5">principal app is running and it has</font><font color="#CCCCCC"> low</font>

125
00:06:05,860 --> 00:06:12,130
impact on<font color="#CCCCCC"> system performance and other</font>

126
00:06:08,469 --> 00:06:14,620
apps utilities so due to<font color="#E5E5E5"> the</font>

127
00:06:12,130 --> 00:06:17,620
<font color="#E5E5E5">fragmentation of Android a framework</font>

128
00:06:14,620 --> 00:06:20,320
solution might not be<font color="#E5E5E5"> might take forever</font>

129
00:06:17,620 --> 00:06:23,169
to deliver to distribute it to<font color="#E5E5E5"> the users</font>

130
00:06:20,320 --> 00:06:25,090
<font color="#E5E5E5">on the other hand pushing this problem</font>

131
00:06:23,169 --> 00:06:28,120
to the<font color="#E5E5E5"> app developer is also</font><font color="#CCCCCC"> not a</font><font color="#E5E5E5"> good</font>

132
00:06:25,090 --> 00:06:31,119
idea<font color="#CCCCCC"> as it</font><font color="#E5E5E5"> is</font><font color="#CCCCCC"> less clear</font><font color="#E5E5E5"> what an app</font>

133
00:06:28,120 --> 00:06:33,190
developer could do to control

134
00:06:31,120 --> 00:06:36,130
<font color="#E5E5E5">information exposed by the operating</font>

135
00:06:33,190 --> 00:06:38,710
<font color="#CCCCCC">system</font><font color="#E5E5E5"> so if we can</font><font color="#CCCCCC"> achieve this goal as</font>

136
00:06:36,130 --> 00:06:42,990
an app level<font color="#E5E5E5"> users will get immediate</font>

137
00:06:38,710 --> 00:06:42,989
protection<font color="#CCCCCC"> against the</font><font color="#E5E5E5"> rig attacks</font>

138
00:06:45,129 --> 00:06:50,349
as you can<font color="#E5E5E5"> see the Guardian app has</font>

139
00:06:47,800 --> 00:06:52,089
three<font color="#CCCCCC"> components a monitor a detector</font>

140
00:06:50,349 --> 00:06:54,878
and<font color="#CCCCCC"> the controller</font><font color="#E5E5E5"> as shown in the</font>

141
00:06:52,089 --> 00:06:57,849
<font color="#E5E5E5">center of the green box whenever the</font>

142
00:06:54,879 --> 00:07:00,429
<font color="#E5E5E5">principal app is running</font><font color="#CCCCCC"> Guardian uses a</font>

143
00:06:57,849 --> 00:07:02,110
<font color="#E5E5E5">set of security permission security</font>

144
00:07:00,429 --> 00:07:06,219
requirements which field from Guardian

145
00:07:02,110 --> 00:07:09,219
server and also<font color="#CCCCCC"> scan other apps</font>

146
00:07:06,219 --> 00:07:11,289
information in a<font color="#E5E5E5"> small monitor module</font>

147
00:07:09,219 --> 00:07:12,879
then the detector will analyze the

148
00:07:11,289 --> 00:07:16,119
results and<font color="#E5E5E5"> based on the security</font>

149
00:07:12,879 --> 00:07:19,269
<font color="#E5E5E5">policies to find out suspects</font><font color="#CCCCCC"> and the</font>

150
00:07:16,119 --> 00:07:21,219
controller<font color="#E5E5E5"> will suspend those suspicious</font>

151
00:07:19,269 --> 00:07:26,019
apps and restore them after the

152
00:07:21,219 --> 00:07:28,360
principal<font color="#E5E5E5"> app has finished its job so in</font>

153
00:07:26,019 --> 00:07:31,360
the perspective<font color="#CCCCCC"> of Guardian protection</font>

154
00:07:28,360 --> 00:07:33,279
for a single<font color="#E5E5E5"> principal app a the</font>

155
00:07:31,360 --> 00:07:36,219
Guardian will enter a mode called

156
00:07:33,279 --> 00:07:38,499
<font color="#CCCCCC">wart mode when Guardian detects the</font>

157
00:07:36,219 --> 00:07:40,659
principal app is running<font color="#E5E5E5"> and within this</font>

158
00:07:38,499 --> 00:07:43,749
mode<font color="#E5E5E5"> the Guardian suspends all</font>

159
00:07:40,659 --> 00:07:46,688
suspicious background apps<font color="#E5E5E5"> only after</font>

160
00:07:43,749 --> 00:07:50,649
the principal<font color="#CCCCCC"> app finished its jobs will</font>

161
00:07:46,689 --> 00:07:53,499
<font color="#CCCCCC">Guardian exit the work mode and will</font>

162
00:07:50,649 --> 00:07:55,689
further clean the public<font color="#CCCCCC"> information</font>

163
00:07:53,499 --> 00:07:57,669
life to behind<font color="#E5E5E5"> to ensure that no</font>

164
00:07:55,689 --> 00:08:01,269
malicious app will<font color="#E5E5E5"> get useful</font>

165
00:07:57,669 --> 00:08:03,609
<font color="#CCCCCC">information then the</font><font color="#E5E5E5"> the suspended apps</font>

166
00:08:01,269 --> 00:08:08,589
will<font color="#CCCCCC"> be restored by the controller or</font>

167
00:08:03,610 --> 00:08:11,289
component so the app<font color="#CCCCCC"> stays</font><font color="#E5E5E5"> are well</font>

168
00:08:08,589 --> 00:08:13,929
preserved<font color="#E5E5E5"> when</font><font color="#CCCCCC"> closing and the majority</font>

169
00:08:11,289 --> 00:08:16,919
of<font color="#E5E5E5"> those apps are marked as disposable</font>

170
00:08:13,929 --> 00:08:20,888
by agile system<font color="#CCCCCC"> with low memory occurs</font>

171
00:08:16,919 --> 00:08:23,619
as most memory clean<font color="#E5E5E5"> tools we also clean</font>

172
00:08:20,889 --> 00:08:26,050
<font color="#CCCCCC">will also close such apps</font><font color="#E5E5E5"> it's still</font>

173
00:08:23,619 --> 00:08:29,199
<font color="#CCCCCC">tape however still</font><font color="#E5E5E5"> takes a longer time</font>

174
00:08:26,050 --> 00:08:32,919
<font color="#E5E5E5">to restart an app than to switch it from</font>

175
00:08:29,199 --> 00:08:35,949
background to foreground<font color="#E5E5E5"> so finding the</font>

176
00:08:32,919 --> 00:08:37,568
right suspects becomes<font color="#CCCCCC"> a key issue of</font>

177
00:08:35,948 --> 00:08:41,019
app<font color="#CCCCCC"> guardian</font>

178
00:08:37,568 --> 00:08:42,818
in our research we use malicious apps<font color="#CCCCCC"> a</font>

179
00:08:41,019 --> 00:08:45,250
<font color="#E5E5E5">channel to infer their malicious</font>

180
00:08:42,818 --> 00:08:50,500
behavior<font color="#E5E5E5"> and only suspend those apps</font>

181
00:08:45,250 --> 00:08:53,559
with malicious<font color="#CCCCCC"> behaviour like in data</font>

182
00:08:50,500 --> 00:08:55,180
stealing attacks<font color="#E5E5E5"> record audio permission</font>

183
00:08:53,559 --> 00:08:57,670
is granted a trap

184
00:08:55,180 --> 00:09:00,670
when it starts<font color="#CCCCCC"> to record audio</font><font color="#E5E5E5"> the media</font>

185
00:08:57,670 --> 00:09:01,510
<font color="#E5E5E5">recorder process will</font><font color="#CCCCCC"> respond a new</font>

186
00:09:00,670 --> 00:09:05,469
thread called

187
00:09:01,510 --> 00:09:09,939
audio in<font color="#CCCCCC"> X where X is a number and on</font>

188
00:09:05,470 --> 00:09:12,430
behalf of the app to<font color="#CCCCCC"> record</font><font color="#E5E5E5"> audio this</font>

189
00:09:09,940 --> 00:09:15,460
could be<font color="#E5E5E5"> found directly through the</font><font color="#CCCCCC"> prog</font>

190
00:09:12,430 --> 00:09:17,800
file system<font color="#E5E5E5"> however if a phone call</font><font color="#CCCCCC"> is</font>

191
00:09:15,460 --> 00:09:20,440
ongoing<font color="#E5E5E5"> and at the same time the app is</font>

192
00:09:17,800 --> 00:09:23,500
recording<font color="#E5E5E5"> audio it will be a problem</font>

193
00:09:20,440 --> 00:09:25,510
<font color="#CCCCCC">alas the user consents to do so so such</font>

194
00:09:23,500 --> 00:09:30,820
behaviors should<font color="#E5E5E5"> be stopped immediately</font>

195
00:09:25,510 --> 00:09:33,370
<font color="#E5E5E5">and</font><font color="#CCCCCC"> inside channel attacks</font><font color="#E5E5E5"> we had</font>

196
00:09:30,820 --> 00:09:35,680
observation<font color="#CCCCCC"> that the malicious app needs</font>

197
00:09:33,370 --> 00:09:39,700
to<font color="#CCCCCC"> sample principal</font><font color="#E5E5E5"> app at a very high</font>

198
00:09:35,680 --> 00:09:43,569
<font color="#CCCCCC">speed high enough to capture fleeting</font>

199
00:09:39,700 --> 00:09:46,750
events<font color="#E5E5E5"> we look</font><font color="#CCCCCC"> into the</font><font color="#E5E5E5"> CPU usage of the</font>

200
00:09:43,570 --> 00:09:49,000
app<font color="#E5E5E5"> and</font><font color="#CCCCCC"> we</font><font color="#E5E5E5"> found that such action will</font>

201
00:09:46,750 --> 00:09:51,520
cause the kernel time to increase<font color="#E5E5E5"> but</font>

202
00:09:49,000 --> 00:09:53,860
<font color="#E5E5E5">the result is</font><font color="#CCCCCC"> very rough</font><font color="#E5E5E5"> so we further</font>

203
00:09:51,520 --> 00:09:57,280
look into<font color="#CCCCCC"> the scheduling statistics of</font>

204
00:09:53,860 --> 00:09:59,320
each thread in this process and<font color="#E5E5E5"> we</font><font color="#CCCCCC"> found</font>

205
00:09:57,280 --> 00:10:01,720
that<font color="#E5E5E5"> every time the malicious app</font>

206
00:09:59,320 --> 00:10:04,510
samples principal<font color="#CCCCCC"> app</font><font color="#E5E5E5"> its number</font><font color="#CCCCCC"> of</font>

207
00:10:01,720 --> 00:10:07,090
times<font color="#E5E5E5"> scheduled to use CPU will increase</font>

208
00:10:04,510 --> 00:10:11,350
and we will use this to<font color="#CCCCCC"> search channel</font>

209
00:10:07,090 --> 00:10:14,110
to find malicious behaviors<font color="#E5E5E5"> and when I</font>

210
00:10:11,350 --> 00:10:17,320
will<font color="#CCCCCC"> very obvious as situation is that</font>

211
00:10:14,110 --> 00:10:19,930
<font color="#E5E5E5">if an app only runs when the principal</font>

212
00:10:17,320 --> 00:10:22,540
<font color="#CCCCCC">app is running it is highly likely that</font>

213
00:10:19,930 --> 00:10:25,089
it<font color="#E5E5E5"> is the malicious app that's</font><font color="#CCCCCC"> stalking</font>

214
00:10:22,540 --> 00:10:27,790
the principal app by calculating<font color="#E5E5E5"> the</font>

215
00:10:25,090 --> 00:10:31,000
<font color="#E5E5E5">Pearson</font><font color="#CCCCCC"> correlation coefficient for</font>

216
00:10:27,790 --> 00:10:36,550
<font color="#CCCCCC">times of such behavior enough to</font>

217
00:10:31,000 --> 00:10:39,820
identify<font color="#E5E5E5"> their correlation a malicious</font>

218
00:10:36,550 --> 00:10:43,329
app could also play a trick<font color="#E5E5E5"> that it uses</font>

219
00:10:39,820 --> 00:10:46,930
<font color="#CCCCCC">multiple sample multiple apps to sample</font>

220
00:10:43,330 --> 00:10:49,900
the principal app with each of them at a

221
00:10:46,930 --> 00:10:52,510
lower<font color="#E5E5E5"> speed but combined together</font><font color="#CCCCCC"> could</font>

222
00:10:49,900 --> 00:10:55,569
invert some useful<font color="#CCCCCC"> information from the</font>

223
00:10:52,510 --> 00:10:58,900
principal<font color="#CCCCCC"> F</font><font color="#E5E5E5"> in order to defeat this F</font>

224
00:10:55,570 --> 00:11:01,960
<font color="#CCCCCC">Guardian we automatically group those</font>

225
00:10:58,900 --> 00:11:04,449
apps<font color="#E5E5E5"> with same signature or all their</font>

226
00:11:01,960 --> 00:11:07,180
installation triggered by another

227
00:11:04,450 --> 00:11:08,430
malicious app and malicious app could

228
00:11:07,180 --> 00:11:10,469
<font color="#E5E5E5">also</font>

229
00:11:08,430 --> 00:11:14,760
the link that's obvious by recommend

230
00:11:10,470 --> 00:11:17,870
another app<font color="#CCCCCC"> using a website</font><font color="#E5E5E5"> or email so</font>

231
00:11:14,760 --> 00:11:21,740
we<font color="#CCCCCC"> will</font><font color="#E5E5E5"> in this case we were asked user</font>

232
00:11:17,870 --> 00:11:24,390
for<font color="#CCCCCC"> their occur their relation and</font>

233
00:11:21,740 --> 00:11:27,510
<font color="#E5E5E5">Guardian also needs to protect himself</font>

234
00:11:24,390 --> 00:11:30,569
<font color="#E5E5E5">being killed by other apps</font><font color="#CCCCCC"> to</font><font color="#E5E5E5"> achieve</font>

235
00:11:27,510 --> 00:11:32,880
this purpose<font color="#CCCCCC"> F guardian will use star</font>

236
00:11:30,570 --> 00:11:35,339
<font color="#CCCCCC">foreground</font><font color="#E5E5E5"> to start a service as the</font>

237
00:11:32,880 --> 00:11:38,250
<font color="#E5E5E5">foreground service in this case it</font>

238
00:11:35,339 --> 00:11:40,230
cannot be killed by any other apps the

239
00:11:38,250 --> 00:11:42,930
malicious app could also play the same

240
00:11:40,230 --> 00:11:46,529
trick and in our experiment<font color="#CCCCCC"> we</font><font color="#E5E5E5"> found</font>

241
00:11:42,930 --> 00:11:49,469
that<font color="#CCCCCC"> seven apps out of 475 apps from</font>

242
00:11:46,529 --> 00:11:52,470
Google Play have such capability however

243
00:11:49,470 --> 00:11:55,529
<font color="#E5E5E5">they will no</font><font color="#CCCCCC"> longer</font><font color="#E5E5E5"> be stealthy because</font>

244
00:11:52,470 --> 00:11:57,360
the notification has shown a picture<font color="#CCCCCC"> we</font>

245
00:11:55,529 --> 00:12:00,630
<font color="#CCCCCC">obviously played in the</font><font color="#E5E5E5"> Notification</font>

246
00:11:57,360 --> 00:12:03,180
<font color="#E5E5E5">Center and it cannot be removed so in</font>

247
00:12:00,630 --> 00:12:05,550
this case even if they indeed have a

248
00:12:03,180 --> 00:12:09,709
<font color="#E5E5E5">malicious behaviour</font><font color="#CCCCCC"> a user</font><font color="#E5E5E5"> will be</font>

249
00:12:05,550 --> 00:12:12,449
suggested<font color="#CCCCCC"> to close such apps</font><font color="#E5E5E5"> manually</font>

250
00:12:09,709 --> 00:12:14,849
and we<font color="#E5E5E5"> first has</font><font color="#CCCCCC"> app</font><font color="#E5E5E5"> Guardians</font>

251
00:12:12,450 --> 00:12:17,550
effectiveness against all known<font color="#CCCCCC"> regaled</font>

252
00:12:14,850 --> 00:12:20,700
<font color="#CCCCCC">hacks at that time and found that such</font>

253
00:12:17,550 --> 00:12:23,670
<font color="#E5E5E5">attacks could all</font><font color="#CCCCCC"> rigged attacks could</font>

254
00:12:20,700 --> 00:12:26,130
<font color="#CCCCCC">be</font><font color="#E5E5E5"> defeated if a malicious</font><font color="#CCCCCC"> app runs at a</font>

255
00:12:23,670 --> 00:12:29,400
lower speed<font color="#E5E5E5"> in</font><font color="#CCCCCC"> order to circumvent</font><font color="#E5E5E5"> the</font>

256
00:12:26,130 --> 00:12:31,890
protection<font color="#E5E5E5"> provided by up</font><font color="#CCCCCC"> Guardian it</font>

257
00:12:29,400 --> 00:12:33,720
<font color="#CCCCCC">would be it</font><font color="#E5E5E5"> would not be able to</font><font color="#CCCCCC"> gain</font>

258
00:12:31,890 --> 00:12:36,540
<font color="#CCCCCC">enough information</font><font color="#E5E5E5"> to make the attack</font>

259
00:12:33,720 --> 00:12:39,709
happen and their successful<font color="#CCCCCC"> rate</font><font color="#E5E5E5"> we</font>

260
00:12:36,540 --> 00:12:42,810
<font color="#CCCCCC">would close</font><font color="#E5E5E5"> to a random gas for example</font>

261
00:12:39,709 --> 00:12:45,420
<font color="#CCCCCC">in the</font><font color="#E5E5E5"> cuckoo navigation attack if a</font>

262
00:12:42,810 --> 00:12:48,560
<font color="#CCCCCC">sampling rate drops from 100</font><font color="#E5E5E5"> times per</font>

263
00:12:45,420 --> 00:12:51,240
second to only once per second<font color="#CCCCCC"> a</font>

264
00:12:48,560 --> 00:12:57,779
<font color="#E5E5E5">successful read will jobs directly</font>

265
00:12:51,240 --> 00:13:03,480
through<font color="#CCCCCC"> on 78% only 6%</font><font color="#E5E5E5"> we also evaluate</font>

266
00:12:57,779 --> 00:13:06,290
the<font color="#E5E5E5"> app Guardian on the</font><font color="#CCCCCC"> impact of system</font>

267
00:13:03,480 --> 00:13:09,839
performance<font color="#CCCCCC"> and utility impacts and</font>

268
00:13:06,290 --> 00:13:13,560
collected<font color="#E5E5E5"> on 27 categories in Google</font>

269
00:13:09,839 --> 00:13:16,020
Play for 475 popular apps<font color="#E5E5E5"> we found that</font>

270
00:13:13,560 --> 00:13:19,800
92 of<font color="#E5E5E5"> them potentially needs to be</font>

271
00:13:16,020 --> 00:13:22,170
closed but only<font color="#CCCCCC"> eight of them have</font>

272
00:13:19,800 --> 00:13:26,370
utility impacts and may further

273
00:13:22,170 --> 00:13:28,529
fact that<font color="#E5E5E5"> user</font><font color="#CCCCCC"> experience we further</font>

274
00:13:26,370 --> 00:13:31,139
measured overhead introduced by Guardian

275
00:13:28,529 --> 00:13:34,019
<font color="#CCCCCC">app onto</font><font color="#E5E5E5"> Nexus phones with 250 apps</font>

276
00:13:31,139 --> 00:13:37,709
installed<font color="#E5E5E5"> on each phone and in the</font>

277
00:13:34,019 --> 00:13:39,810
<font color="#E5E5E5">within the world mode</font><font color="#CCCCCC"> 5% of CPU and 40</font>

278
00:13:37,709 --> 00:13:43,199
<font color="#E5E5E5">megabytes of memory is consumed by</font>

279
00:13:39,810 --> 00:13:45,930
Guardian app and if it is out of<font color="#E5E5E5"> word</font>

280
00:13:43,199 --> 00:13:49,019
mode<font color="#E5E5E5"> only less than</font><font color="#CCCCCC"> 1% of CPU will be</font>

281
00:13:45,930 --> 00:13:51,420
used for<font color="#CCCCCC"> battery usage which has it on</font>

282
00:13:49,019 --> 00:13:53,540
<font color="#CCCCCC">that</font><font color="#E5E5E5"> soon access phones but only if</font>

283
00:13:51,420 --> 00:13:57,149
these 50 apps installed<font color="#E5E5E5"> on each device</font>

284
00:13:53,540 --> 00:13:59,279
as it is more realistic<font color="#E5E5E5"> more realistic</font>

285
00:13:57,149 --> 00:14:01,290
<font color="#CCCCCC">number of apps</font><font color="#E5E5E5"> people you already</font><font color="#CCCCCC"> have</font>

286
00:13:59,279 --> 00:14:04,500
on their phone so on average the

287
00:14:01,290 --> 00:14:09,529
<font color="#E5E5E5">estimation shows that only 1% of total</font>

288
00:14:04,500 --> 00:14:09,529
<font color="#E5E5E5">capacity capacity</font><font color="#CCCCCC"> will consumed per day</font>

289
00:14:10,040 --> 00:14:16,529
so far we have proved<font color="#E5E5E5"> Guardian can</font>

290
00:14:13,709 --> 00:14:18,989
defeat<font color="#CCCCCC"> rig attacks at lower cost some</font>

291
00:14:16,529 --> 00:14:22,790
future works could also be<font color="#E5E5E5"> done to</font>

292
00:14:18,990 --> 00:14:25,529
<font color="#E5E5E5">better protect Android from rig attacks</font>

293
00:14:22,790 --> 00:14:29,490
firstly<font color="#E5E5E5"> app</font><font color="#CCCCCC"> Guardian is</font><font color="#E5E5E5"> not a malware</font>

294
00:14:25,529 --> 00:14:32,189
detection system it could<font color="#E5E5E5"> only suspend a</font>

295
00:14:29,490 --> 00:14:35,730
small set<font color="#CCCCCC"> of apps</font><font color="#E5E5E5"> to protect</font><font color="#CCCCCC"> principal</font>

296
00:14:32,190 --> 00:14:37,320
<font color="#E5E5E5">apps however it did</font><font color="#CCCCCC"> how some it does</font>

297
00:14:35,730 --> 00:14:39,839
have some utility impact<font color="#E5E5E5"> and</font>

298
00:14:37,320 --> 00:14:42,630
inconvenience so a more accurate

299
00:14:39,839 --> 00:14:46,170
identification<font color="#CCCCCC"> of malicious behaviors</font>

300
00:14:42,630 --> 00:14:48,149
will certainly help currently Guardian

301
00:14:46,170 --> 00:14:50,969
will consume more resources<font color="#E5E5E5"> to protect</font>

302
00:14:48,149 --> 00:14:53,480
background<font color="#E5E5E5"> system services</font><font color="#CCCCCC"> as there's no</font>

303
00:14:50,970 --> 00:14:56,910
entry point<font color="#E5E5E5"> or exit point for such apps</font>

304
00:14:53,480 --> 00:15:00,360
<font color="#E5E5E5">how to protect them at a minimum</font><font color="#CCCCCC"> host is</font>

305
00:14:56,910 --> 00:15:02,339
a challenge<font color="#CCCCCC"> the last thing</font><font color="#E5E5E5"> to mention is</font>

306
00:15:00,360 --> 00:15:04,829
that Guardian could clean public

307
00:15:02,339 --> 00:15:07,560
information of a<font color="#E5E5E5"> principal app when it</font>

308
00:15:04,829 --> 00:15:10,589
finishes jobs<font color="#E5E5E5"> however</font><font color="#CCCCCC"> a traffic</font>

309
00:15:07,560 --> 00:15:15,050
statistic data is left behind<font color="#CCCCCC"> because</font>

310
00:15:10,589 --> 00:15:15,050
only a<font color="#CCCCCC"> phone reboot will make it clean</font>

311
00:15:16,140 --> 00:15:21,569
in conclusion<font color="#E5E5E5"> we identify the</font><font color="#CCCCCC"> Sira needs</font>

312
00:15:18,870 --> 00:15:23,910
of<font color="#E5E5E5"> rig attacks and demonstrate that IOT</font>

313
00:15:21,569 --> 00:15:27,329
devices are equally<font color="#E5E5E5"> vulnerable to rig</font>

314
00:15:23,910 --> 00:15:29,550
attacks we are the first one<font color="#CCCCCC"> to propose</font>

315
00:15:27,329 --> 00:15:32,670
<font color="#CCCCCC">an app level protection app</font><font color="#E5E5E5"> Guardian</font>

316
00:15:29,550 --> 00:15:34,769
that only has normal privileges and uses

317
00:15:32,670 --> 00:15:35,550
<font color="#E5E5E5">search handle to protect apps from rig</font>

318
00:15:34,769 --> 00:15:37,590
attacks

319
00:15:35,550 --> 00:15:42,000
and we will<font color="#E5E5E5"> release the app and the code</font>

320
00:15:37,590 --> 00:15:44,370
<font color="#CCCCCC">once it is</font><font color="#E5E5E5"> mature we believe that our</font>

321
00:15:42,000 --> 00:15:46,710
techniques significantly raise the bar

322
00:15:44,370 --> 00:15:49,230
for<font color="#E5E5E5"> rigged attacks now</font><font color="#CCCCCC"> Newt</font><font color="#E5E5E5"> has</font>

323
00:15:46,710 --> 00:15:52,110
discovered we will be put into the test

324
00:15:49,230 --> 00:15:56,280
of this defense<font color="#E5E5E5"> to make the case</font><font color="#CCCCCC"> that in</font>

325
00:15:52,110 --> 00:15:59,190
the<font color="#E5E5E5"> indeed</font><font color="#CCCCCC"> post a realistic attack</font><font color="#E5E5E5"> and</font>

326
00:15:56,280 --> 00:16:01,709
this paper further<font color="#CCCCCC"> inspire</font><font color="#E5E5E5"> follow-up</font>

327
00:15:59,190 --> 00:16:05,220
effort<font color="#CCCCCC"> on an app level protection</font>

328
00:16:01,710 --> 00:16:09,780
against security threats<font color="#CCCCCC"> on mobile</font>

329
00:16:05,220 --> 00:16:27,390
<font color="#E5E5E5">devices and thank you all</font><font color="#CCCCCC"> for listening</font>

330
00:16:09,780 --> 00:16:30,930
<font color="#CCCCCC">any questions some gear solid University</font>

331
00:16:27,390 --> 00:16:33,990
it seems your warden heavily relies on

332
00:16:30,930 --> 00:16:37,109
<font color="#E5E5E5">the proc file system to detect the the</font>

333
00:16:33,990 --> 00:16:39,900
stalking apps<font color="#E5E5E5"> yes and the techniques you</font>

334
00:16:37,110 --> 00:16:42,000
apply<font color="#E5E5E5"> some are resemble what you do in a</font>

335
00:16:39,900 --> 00:16:44,730
reconnaissance<font color="#CCCCCC"> ace before</font><font color="#E5E5E5"> mounting for</font>

336
00:16:42,000 --> 00:16:47,460
example route exploits and<font color="#CCCCCC"> exciting</font>

337
00:16:44,730 --> 00:16:50,970
projects like as the<font color="#E5E5E5"> Android proposed</font>

338
00:16:47,460 --> 00:16:52,200
that policy security policies should<font color="#E5E5E5"> be</font>

339
00:16:50,970 --> 00:16:54,870
<font color="#E5E5E5">enforced that an application</font><font color="#CCCCCC"> can</font>

340
00:16:52,200 --> 00:16:59,280
<font color="#E5E5E5">actually not read the proc entries of</font>

341
00:16:54,870 --> 00:17:01,230
other applications<font color="#CCCCCC"> so I'm wondering</font><font color="#E5E5E5"> did</font>

342
00:16:59,280 --> 00:17:04,339
you consider besides proc file system

343
00:17:01,230 --> 00:17:08,550
some other side channels

344
00:17:04,339 --> 00:17:10,409
to use in your warden<font color="#E5E5E5"> yes actually we</font>

345
00:17:08,550 --> 00:17:12,659
have a look into<font color="#CCCCCC"> a</font><font color="#E5E5E5"> lot of</font><font color="#CCCCCC"> such</font><font color="#E5E5E5"> channels</font>

346
00:17:10,410 --> 00:17:17,300
that we could collect<font color="#E5E5E5"> it against those</font>

347
00:17:12,660 --> 00:17:19,740
malicious apps<font color="#CCCCCC"> but you know there's no</font>

348
00:17:17,300 --> 00:17:22,560
general way for those side channel

349
00:17:19,740 --> 00:17:25,920
attacks or<font color="#CCCCCC"> read attacks</font><font color="#E5E5E5"> to use the earth</font>

350
00:17:22,560 --> 00:17:30,600
search channel against victim<font color="#CCCCCC"> maps so we</font>

351
00:17:25,920 --> 00:17:34,950
found that only their CPU usage will be

352
00:17:30,600 --> 00:17:37,260
<font color="#E5E5E5">a obvious observation to find their</font>

353
00:17:34,950 --> 00:17:40,610
malicious<font color="#CCCCCC"> behaviour but we would</font>

354
00:17:37,260 --> 00:17:43,800
<font color="#CCCCCC">actually consider more</font><font color="#E5E5E5"> such channels to</font>

355
00:17:40,610 --> 00:17:46,340
find their malicious<font color="#CCCCCC"> behaviors okay</font>

356
00:17:43,800 --> 00:17:46,340
<font color="#CCCCCC">thanks</font>

