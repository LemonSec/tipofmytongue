1
00:00:00,269 --> 00:00:04,380
today<font color="#E5E5E5"> I'm going to talk</font><font color="#CCCCCC"> about a privacy</font>

2
00:00:02,580 --> 00:00:06,450
<font color="#E5E5E5">access control for</font><font color="#CCCCCC"> outsource personal</font>

3
00:00:04,380 --> 00:00:08,099
records or putting it<font color="#E5E5E5"> differently how to</font>

4
00:00:06,450 --> 00:00:10,380
<font color="#E5E5E5">port single client</font><font color="#CCCCCC"> over into mal</font>

5
00:00:08,099 --> 00:00:12,450
declined<font color="#E5E5E5"> or M so</font><font color="#CCCCCC"> I monitored inot and</font>

6
00:00:10,380 --> 00:00:14,790
this is joint work with<font color="#CCCCCC"> Mateo Murphy</font>

7
00:00:12,450 --> 00:00:16,919
<font color="#E5E5E5">Julia Malibu Alta and Dominic Schroeder</font>

8
00:00:14,790 --> 00:00:19,738
<font color="#E5E5E5">so let me get</font><font color="#CCCCCC"> started with</font><font color="#E5E5E5"> a motivating</font>

9
00:00:16,919 --> 00:00:21,659
example<font color="#E5E5E5"> so some of you might know or</font>

10
00:00:19,739 --> 00:00:24,599
might have even<font color="#E5E5E5"> used</font><font color="#CCCCCC"> personal health</font>

11
00:00:21,659 --> 00:00:26,729
records which is<font color="#CCCCCC"> an health record system</font>

12
00:00:24,599 --> 00:00:30,839
<font color="#E5E5E5">in which the patient</font><font color="#CCCCCC"> Bob has full</font>

13
00:00:26,729 --> 00:00:33,449
<font color="#CCCCCC">control over</font><font color="#E5E5E5"> his private personal health</font>

14
00:00:30,839 --> 00:00:36,300
<font color="#CCCCCC">data and can share it with</font><font color="#E5E5E5"> health care</font>

15
00:00:33,449 --> 00:00:37,500
<font color="#CCCCCC">personnel clinicians and</font><font color="#E5E5E5"> so on so for</font>

16
00:00:36,300 --> 00:00:41,390
example systems that are<font color="#E5E5E5"> already</font>

17
00:00:37,500 --> 00:00:41,390
<font color="#E5E5E5">existing web-based are for example</font>

18
00:00:42,620 --> 00:00:49,530
<font color="#E5E5E5">patients like me or health vault</font><font color="#CCCCCC"> where</font>

19
00:00:46,230 --> 00:00:52,440
<font color="#E5E5E5">people can import health data and can</font>

20
00:00:49,530 --> 00:00:55,379
share it<font color="#CCCCCC"> with selective institutions</font>

21
00:00:52,440 --> 00:00:56,670
applications and<font color="#E5E5E5"> other persons and as I</font>

22
00:00:55,379 --> 00:00:58,379
<font color="#CCCCCC">said this is web-based</font><font color="#E5E5E5"> so</font><font color="#CCCCCC"> we are</font>

23
00:00:56,670 --> 00:01:00,899
striving for<font color="#E5E5E5"> a solution where the</font>

24
00:00:58,379 --> 00:01:03,780
patient puts<font color="#E5E5E5"> this</font><font color="#CCCCCC"> Clara into the cloud</font>

25
00:01:00,899 --> 00:01:06,479
and<font color="#E5E5E5"> can then for</font><font color="#CCCCCC"> example let the nurse</font>

26
00:01:03,780 --> 00:01:09,329
retrieve the treatment plan where the

27
00:01:06,479 --> 00:01:11,520
doctor can then add prescriptions for

28
00:01:09,329 --> 00:01:15,149
the pharmacy<font color="#CCCCCC"> that can then turn into</font>

29
00:01:11,520 --> 00:01:16,890
<font color="#CCCCCC">medicine for the patient also</font><font color="#E5E5E5"> the doctor</font>

30
00:01:15,149 --> 00:01:19,500
can immediately<font color="#E5E5E5"> bill the health</font>

31
00:01:16,890 --> 00:01:21,119
<font color="#E5E5E5">insurance for services and the health</font>

32
00:01:19,500 --> 00:01:23,790
insurance<font color="#CCCCCC"> can then pay the doctor for</font>

33
00:01:21,119 --> 00:01:25,350
<font color="#E5E5E5">this bill now naturally in this</font><font color="#CCCCCC"> scenario</font>

34
00:01:23,790 --> 00:01:28,530
we have<font color="#E5E5E5"> a lot of security and privacy</font>

35
00:01:25,350 --> 00:01:31,350
issues<font color="#CCCCCC"> three of</font><font color="#E5E5E5"> which I want to point</font>

36
00:01:28,530 --> 00:01:37,320
out<font color="#E5E5E5"> here in particular so the first one</font>

37
00:01:31,350 --> 00:01:39,059
being secrecy that means if the nurse

38
00:01:37,320 --> 00:01:40,320
for example wants to see the<font color="#CCCCCC"> doctor's</font>

39
00:01:39,060 --> 00:01:41,789
bill for the health insurance<font color="#CCCCCC"> which is</font>

40
00:01:40,320 --> 00:01:45,630
<font color="#E5E5E5">none</font><font color="#CCCCCC"> of her concern and</font><font color="#E5E5E5"> this should of</font>

41
00:01:41,789 --> 00:01:47,729
course be prevented dually<font color="#E5E5E5"> the integrity</font>

42
00:01:45,630 --> 00:01:50,039
<font color="#E5E5E5">of</font><font color="#CCCCCC"> data that means</font><font color="#E5E5E5"> if the doctor</font>

43
00:01:47,729 --> 00:01:52,079
prescribes<font color="#E5E5E5"> a generic drug</font><font color="#CCCCCC"> a</font><font color="#E5E5E5"> truck which</font>

44
00:01:50,039 --> 00:01:53,939
is<font color="#E5E5E5"> usually cheaper than an original</font><font color="#CCCCCC"> drug</font>

45
00:01:52,079 --> 00:01:56,490
then the pharmacy<font color="#CCCCCC"> should not be allowed</font>

46
00:01:53,939 --> 00:01:58,520
to<font color="#E5E5E5"> change this into the original truck</font>

47
00:01:56,490 --> 00:02:00,329
in<font color="#CCCCCC"> order</font><font color="#E5E5E5"> to generate more revenue and</font>

48
00:01:58,520 --> 00:02:02,460
finally we're interested<font color="#CCCCCC"> in protecting</font>

49
00:02:00,329 --> 00:02:03,979
<font color="#E5E5E5">the patient from the cloud up from the</font>

50
00:02:02,460 --> 00:02:06,570
cloud provider namely obliviousness

51
00:02:03,979 --> 00:02:08,940
<font color="#E5E5E5">meaning that if the doctor for example</font>

52
00:02:06,570 --> 00:02:10,560
<font color="#E5E5E5">retrieves the treatment plan or the</font>

53
00:02:08,940 --> 00:02:13,170
laboratory<font color="#E5E5E5"> findings and doesn't operate</font>

54
00:02:10,560 --> 00:02:15,030
on it<font color="#E5E5E5"> the claw operator should not be</font>

55
00:02:13,170 --> 00:02:17,760
to tell which operation<font color="#E5E5E5"> he performed</font><font color="#CCCCCC"> in</font>

56
00:02:15,030 --> 00:02:19,800
<font color="#E5E5E5">this data neither should it should we be</font>

57
00:02:17,760 --> 00:02:23,310
able to<font color="#E5E5E5"> tell which of the two files he</font>

58
00:02:19,800 --> 00:02:26,849
retrieved and of course we're not

59
00:02:23,310 --> 00:02:28,500
<font color="#E5E5E5">considering this in the in this limited</font>

60
00:02:26,849 --> 00:02:30,060
scenario only<font color="#E5E5E5"> but we're more</font><font color="#CCCCCC"> interested</font>

61
00:02:28,500 --> 00:02:32,640
in<font color="#E5E5E5"> more general scenario where we have</font>

62
00:02:30,060 --> 00:02:34,650
<font color="#E5E5E5">so take your favorite cloud provider we</font>

63
00:02:32,640 --> 00:02:37,829
have the cloud and we have a database

64
00:02:34,650 --> 00:02:39,870
owner who wants to<font color="#E5E5E5"> outsource</font><font color="#CCCCCC"> his data to</font>

65
00:02:37,830 --> 00:02:43,530
the cloud and wants to share<font color="#CCCCCC"> it with</font>

66
00:02:39,870 --> 00:02:44,849
<font color="#E5E5E5">selective clients of his choice now if</font>

67
00:02:43,530 --> 00:02:46,680
we were only<font color="#E5E5E5"> interested in this left</font>

68
00:02:44,849 --> 00:02:48,268
part<font color="#CCCCCC"> of the scenario</font><font color="#E5E5E5"> like the database</font>

69
00:02:46,680 --> 00:02:50,489
owner in the cloud and<font color="#E5E5E5"> our favorite</font>

70
00:02:48,269 --> 00:02:55,380
<font color="#E5E5E5">solution of</font><font color="#CCCCCC"> choice would be</font><font color="#E5E5E5"> oblivious</font>

71
00:02:50,489 --> 00:02:58,019
<font color="#CCCCCC">Ram</font><font color="#E5E5E5"> no sorry</font><font color="#CCCCCC"> and in order to</font><font color="#E5E5E5"> - yeah to</font>

72
00:02:55,380 --> 00:03:00,090
provide operations the the clients can

73
00:02:58,019 --> 00:03:01,680
read and write on index data and take at

74
00:03:00,090 --> 00:03:03,680
<font color="#E5E5E5">the cloud provider can additionally</font><font color="#CCCCCC"> that</font>

75
00:03:01,680 --> 00:03:06,630
this<font color="#E5E5E5"> the database owner can additionally</font>

76
00:03:03,680 --> 00:03:08,130
<font color="#E5E5E5">add entries to the to the database you</font>

77
00:03:06,630 --> 00:03:09,900
<font color="#E5E5E5">can change permissions of existing</font>

78
00:03:08,130 --> 00:03:12,209
entries or it can also add clients to

79
00:03:09,900 --> 00:03:13,739
<font color="#E5E5E5">his shareholders</font><font color="#CCCCCC"> and as I said if we</font>

80
00:03:12,209 --> 00:03:18,180
were only interested in this left<font color="#CCCCCC"> part</font>

81
00:03:13,739 --> 00:03:19,530
of the solution then our our<font color="#CCCCCC"> yeah our</font>

82
00:03:18,180 --> 00:03:21,209
solution of<font color="#CCCCCC"> choice would</font><font color="#E5E5E5"> be oblivious</font>

83
00:03:19,530 --> 00:03:24,780
<font color="#E5E5E5">RAM which is</font><font color="#CCCCCC"> a technique</font><font color="#E5E5E5"> invented</font>

84
00:03:21,209 --> 00:03:27,329
<font color="#E5E5E5">originally 1996 by</font><font color="#CCCCCC"> coloration</font><font color="#E5E5E5"> of strops</font>

85
00:03:24,780 --> 00:03:30,859
key in order to conceal<font color="#CCCCCC"> from an observer</font>

86
00:03:27,329 --> 00:03:33,540
of<font color="#E5E5E5"> the storage</font><font color="#CCCCCC"> and the</font><font color="#E5E5E5"> cloud</font><font color="#CCCCCC"> to</font>

87
00:03:30,859 --> 00:03:36,299
<font color="#E5E5E5">the access pattern</font><font color="#CCCCCC"> of the clients act</font>

88
00:03:33,540 --> 00:03:38,880
<font color="#CCCCCC">and operating on this storage</font><font color="#E5E5E5"> so for</font>

89
00:03:36,299 --> 00:03:40,290
<font color="#E5E5E5">example here in the upper part</font><font color="#CCCCCC"> or in the</font>

90
00:03:38,880 --> 00:03:41,579
<font color="#CCCCCC">sand it's two scenarios it should be</font>

91
00:03:40,290 --> 00:03:43,200
indistinguishable<font color="#CCCCCC"> whether for example</font>

92
00:03:41,579 --> 00:03:45,660
<font color="#CCCCCC">the database</font><font color="#E5E5E5"> owner and the upper part</font>

93
00:03:43,200 --> 00:03:47,399
<font color="#E5E5E5">reads index I and then index I or</font>

94
00:03:45,660 --> 00:03:49,200
whether in the lower part he reads index

95
00:03:47,400 --> 00:03:50,940
I and then<font color="#CCCCCC"> enix trade</font><font color="#E5E5E5"> so this should be</font>

96
00:03:49,200 --> 00:03:51,899
indistinguishable<font color="#E5E5E5"> and in the last two</font>

97
00:03:50,940 --> 00:03:53,519
decades they<font color="#CCCCCC"> have been a lot of</font>

98
00:03:51,900 --> 00:03:55,560
efficient realizations<font color="#CCCCCC"> there</font><font color="#E5E5E5"> are for</font>

99
00:03:53,519 --> 00:03:57,450
example<font color="#CCCCCC"> path or M which was presented</font><font color="#E5E5E5"> by</font>

100
00:03:55,560 --> 00:04:01,200
<font color="#CCCCCC">Stephan</font><font color="#E5E5E5"> often</font><font color="#CCCCCC"> coworkers two years ago at</font>

101
00:03:57,450 --> 00:04:03,720
CCS unfortunately all<font color="#CCCCCC"> of these</font><font color="#E5E5E5"> cloud and</font>

102
00:04:01,200 --> 00:04:04,950
all of these<font color="#E5E5E5"> ORM solutions only work in</font>

103
00:04:03,720 --> 00:04:06,450
<font color="#CCCCCC">the single client setting and they are</font>

104
00:04:04,950 --> 00:04:08,040
not<font color="#E5E5E5"> trivially to be poured it into the</font>

105
00:04:06,450 --> 00:04:09,600
multi client setting and this is what we

106
00:04:08,040 --> 00:04:12,030
are wanting to<font color="#CCCCCC"> it what we are willing to</font>

107
00:04:09,600 --> 00:04:14,040
achieve so<font color="#E5E5E5"> our contributions are first</font>

108
00:04:12,030 --> 00:04:16,228
of all a formal framework framework in

109
00:04:14,040 --> 00:04:17,639
which we define the notion of crew of

110
00:04:16,228 --> 00:04:20,849
<font color="#E5E5E5">group oblivious Rama multi-client</font>

111
00:04:17,639 --> 00:04:22,919
oblivious<font color="#CCCCCC"> Ram and we define several</font>

112
00:04:20,850 --> 00:04:25,170
<font color="#E5E5E5">security and privacy properties three</font>

113
00:04:22,919 --> 00:04:27,060
<font color="#E5E5E5">which I want to focus today so see</font>

114
00:04:25,170 --> 00:04:29,130
<font color="#CCCCCC">see integrity</font><font color="#E5E5E5"> and obliviousness against</font>

115
00:04:27,060 --> 00:04:31,950
the server<font color="#E5E5E5"> all of which I ate it before</font>

116
00:04:29,130 --> 00:04:33,780
<font color="#E5E5E5">and we define them or we formalize them</font>

117
00:04:31,950 --> 00:04:35,340
as cryptographic games in a unified

118
00:04:33,780 --> 00:04:36,929
attacker model where the database<font color="#E5E5E5"> owner</font>

119
00:04:35,340 --> 00:04:39,750
is honest<font color="#CCCCCC"> the server is honest</font><font color="#E5E5E5"> but</font>

120
00:04:36,930 --> 00:04:41,820
curious and the cloud<font color="#E5E5E5"> the clients might</font>

121
00:04:39,750 --> 00:04:44,040
be potentially malicious<font color="#CCCCCC"> we have one</font>

122
00:04:41,820 --> 00:04:47,040
more restriction namely that the server

123
00:04:44,040 --> 00:04:51,450
<font color="#E5E5E5">should</font><font color="#CCCCCC"> not be able</font><font color="#E5E5E5"> to collaborate</font><font color="#CCCCCC"> or</font>

124
00:04:47,040 --> 00:04:52,890
collude with clients<font color="#E5E5E5"> moreover addition</font>

125
00:04:51,450 --> 00:04:54,570
to this<font color="#CCCCCC"> formal framework we also present</font>

126
00:04:52,890 --> 00:04:56,969
three different construction ranging

127
00:04:54,570 --> 00:04:58,170
from a<font color="#E5E5E5"> generic one what we call go</font><font color="#CCCCCC"> RAM</font>

128
00:04:56,970 --> 00:05:00,060
and more efficient<font color="#E5E5E5"> one which we call</font>

129
00:04:58,170 --> 00:05:01,710
<font color="#CCCCCC">accountable Gorham</font><font color="#E5E5E5"> and then even</font><font color="#CCCCCC"> more</font>

130
00:05:00,060 --> 00:05:06,930
official efficient one which we<font color="#E5E5E5"> call</font>

131
00:05:01,710 --> 00:05:08,460
<font color="#E5E5E5">scalable go</font><font color="#CCCCCC"> Ram and as I said</font><font color="#E5E5E5"> they are</font>

132
00:05:06,930 --> 00:05:11,070
<font color="#E5E5E5">more efficient when we go from</font><font color="#CCCCCC"> left to</font>

133
00:05:08,460 --> 00:05:13,590
right<font color="#CCCCCC"> and we have two slightly relaxed</font>

134
00:05:11,070 --> 00:05:15,420
security and flexibility<font color="#E5E5E5"> in order to</font>

135
00:05:13,590 --> 00:05:18,109
<font color="#CCCCCC">achieve</font><font color="#E5E5E5"> this efficiency and today I'm</font>

136
00:05:15,420 --> 00:05:20,370
going to<font color="#CCCCCC"> focus</font><font color="#E5E5E5"> on this lower part of the</font>

137
00:05:18,110 --> 00:05:22,710
of the story

138
00:05:20,370 --> 00:05:23,640
so before I start presenting<font color="#E5E5E5"> our own</font>

139
00:05:22,710 --> 00:05:26,099
solutions

140
00:05:23,640 --> 00:05:28,380
<font color="#E5E5E5">let me quickly recap what path</font><font color="#CCCCCC"> Orem is</font>

141
00:05:26,100 --> 00:05:30,690
doing and how it looks<font color="#E5E5E5"> like so</font><font color="#CCCCCC"> in path</font>

142
00:05:28,380 --> 00:05:33,750
Orem the<font color="#E5E5E5"> database is basically a binary</font>

143
00:05:30,690 --> 00:05:37,770
<font color="#E5E5E5">tree with n</font><font color="#CCCCCC"> leave nodes</font><font color="#E5E5E5"> where n is the</font>

144
00:05:33,750 --> 00:05:39,360
<font color="#CCCCCC">number of</font><font color="#E5E5E5"> entries and every node can</font>

145
00:05:37,770 --> 00:05:41,789
capture<font color="#E5E5E5"> up</font><font color="#CCCCCC"> to a constant amount</font><font color="#E5E5E5"> of</font>

146
00:05:39,360 --> 00:05:44,000
entries<font color="#E5E5E5"> and I abstract away from the</font>

147
00:05:41,790 --> 00:05:48,690
stash which is used in order to<font color="#CCCCCC"> achieve</font>

148
00:05:44,000 --> 00:05:52,080
<font color="#E5E5E5">non overflowing buckets</font><font color="#CCCCCC"> today so</font><font color="#E5E5E5"> I</font><font color="#CCCCCC"> just</font>

149
00:05:48,690 --> 00:05:54,240
<font color="#CCCCCC">treat this as the root node</font><font color="#E5E5E5"> and an entry</font>

150
00:05:52,080 --> 00:05:56,039
in path<font color="#E5E5E5"> Orem looks like that so we have</font>

151
00:05:54,240 --> 00:05:59,000
an index I<font color="#CCCCCC"> and the data D which are</font>

152
00:05:56,040 --> 00:06:01,230
encrypted using<font color="#E5E5E5"> symmetric encryption and</font>

153
00:05:59,000 --> 00:06:04,230
throughout the algorithm we maintain the

154
00:06:01,230 --> 00:06:05,940
invariant<font color="#E5E5E5"> that indexes of entries are</font>

155
00:06:04,230 --> 00:06:08,910
mapped<font color="#E5E5E5"> to leave notes and if you want to</font>

156
00:06:05,940 --> 00:06:11,490
find an entry in the database<font color="#E5E5E5"> we just</font>

157
00:06:08,910 --> 00:06:15,060
look up the<font color="#E5E5E5"> leaf index and we will then</font>

158
00:06:11,490 --> 00:06:17,370
<font color="#E5E5E5">find the entry</font><font color="#CCCCCC"> that we are interested in</font>

159
00:06:15,060 --> 00:06:19,560
<font color="#E5E5E5">somewhere on the path from this leaf</font><font color="#CCCCCC"> to</font>

160
00:06:17,370 --> 00:06:21,030
<font color="#CCCCCC">the root and intuitively in order to</font>

161
00:06:19,560 --> 00:06:24,210
<font color="#E5E5E5">achieve obliviousness whenever you</font>

162
00:06:21,030 --> 00:06:26,700
<font color="#CCCCCC">access an entry I you have</font><font color="#E5E5E5"> to remap this</font>

163
00:06:24,210 --> 00:06:29,760
index<font color="#E5E5E5"> I to a new leaf and maintain the</font>

164
00:06:26,700 --> 00:06:31,590
invariant then<font color="#E5E5E5"> meaning that this entry</font>

165
00:06:29,760 --> 00:06:33,750
has<font color="#CCCCCC"> to lay on the path on the new path</font>

166
00:06:31,590 --> 00:06:36,510
from<font color="#E5E5E5"> the leaf index to the to the root</font>

167
00:06:33,750 --> 00:06:39,050
node<font color="#E5E5E5"> so how does the how do the read and</font>

168
00:06:36,510 --> 00:06:41,940
write<font color="#E5E5E5"> algorithms look in</font>

169
00:06:39,050 --> 00:06:43,590
specifically so as I said we first look

170
00:06:41,940 --> 00:06:47,460
up the leaf index then we download<font color="#CCCCCC"> the</font>

171
00:06:43,590 --> 00:06:49,590
path locally on the computer<font color="#CCCCCC"> we locate</font>

172
00:06:47,460 --> 00:06:51,120
the entry<font color="#E5E5E5"> and in the case of read we</font>

173
00:06:49,590 --> 00:06:54,060
change<font color="#E5E5E5"> we read the payload in the case</font>

174
00:06:51,120 --> 00:06:57,030
of<font color="#CCCCCC"> write we change the payload finally</font>

175
00:06:54,060 --> 00:06:59,190
as I said we assign a new leaf index<font color="#E5E5E5"> and</font>

176
00:06:57,030 --> 00:07:00,630
we have to make sure<font color="#CCCCCC"> that the invariants</font>

177
00:06:59,190 --> 00:07:02,160
<font color="#E5E5E5">the holes that means the entry has</font><font color="#CCCCCC"> to</font>

178
00:07:00,630 --> 00:07:04,950
<font color="#CCCCCC">lie on</font><font color="#E5E5E5"> the path from the leaf to the</font>

179
00:07:02,160 --> 00:07:06,570
<font color="#CCCCCC">root in this case the</font><font color="#E5E5E5"> the new leaf is in</font>

180
00:07:04,950 --> 00:07:09,030
<font color="#E5E5E5">another subtree of the root so the root</font>

181
00:07:06,570 --> 00:07:12,719
is<font color="#E5E5E5"> the only common node so the entry</font>

182
00:07:09,030 --> 00:07:14,489
<font color="#E5E5E5">must lay in the in the root and in order</font>

183
00:07:12,720 --> 00:07:16,440
<font color="#CCCCCC">to conceal from the server what we did</font>

184
00:07:14,490 --> 00:07:19,530
we just<font color="#CCCCCC"> Rhian</font><font color="#E5E5E5"> crypt the entire path and</font>

185
00:07:16,440 --> 00:07:21,180
upload<font color="#CCCCCC"> it back to the server</font><font color="#E5E5E5"> now this</font>

186
00:07:19,530 --> 00:07:22,650
works nice in<font color="#CCCCCC"> a single client setting</font>

187
00:07:21,180 --> 00:07:23,460
however<font color="#E5E5E5"> in the multi client setting we</font>

188
00:07:22,650 --> 00:07:25,770
notice that<font color="#E5E5E5"> we have this little</font>

189
00:07:23,460 --> 00:07:28,680
<font color="#E5E5E5">symmetric key K here</font><font color="#CCCCCC"> and of course</font><font color="#E5E5E5"> you</font>

190
00:07:25,770 --> 00:07:30,390
can give access<font color="#CCCCCC"> to other clients</font><font color="#E5E5E5"> by</font>

191
00:07:28,680 --> 00:07:31,470
handing over this key<font color="#CCCCCC"> K unfortunately</font>

192
00:07:30,390 --> 00:07:33,150
this is only<font color="#CCCCCC"> possible in an</font>

193
00:07:31,470 --> 00:07:34,980
all-or-nothing manner that means no per

194
00:07:33,150 --> 00:07:36,659
file secrecy integrity and access

195
00:07:34,980 --> 00:07:39,450
control either<font color="#E5E5E5"> you have access to</font>

196
00:07:36,660 --> 00:07:41,610
everything<font color="#E5E5E5"> or to nothing and this is</font>

197
00:07:39,450 --> 00:07:44,820
what we achieve in our first solution<font color="#E5E5E5"> go</font>

198
00:07:41,610 --> 00:07:46,860
<font color="#E5E5E5">Ram there if we look at the entry</font>

199
00:07:44,820 --> 00:07:48,360
structure<font color="#E5E5E5"> the first thing we change is</font>

200
00:07:46,860 --> 00:07:50,070
in order<font color="#E5E5E5"> to because we have malicious</font>

201
00:07:48,360 --> 00:07:51,540
clients<font color="#CCCCCC"> that will come to this later in</font>

202
00:07:50,070 --> 00:07:52,860
<font color="#E5E5E5">the next slide why we need</font><font color="#CCCCCC"> public key</font>

203
00:07:51,540 --> 00:07:56,550
encryption<font color="#E5E5E5"> instead of symmetric key</font>

204
00:07:52,860 --> 00:08:00,720
encryption and additionally what we also

205
00:07:56,550 --> 00:08:03,180
add is<font color="#CCCCCC"> to ciphertext C auth</font><font color="#E5E5E5"> and C data</font>

206
00:08:00,720 --> 00:08:05,510
that you see on the right which are<font color="#E5E5E5"> both</font>

207
00:08:03,180 --> 00:08:08,580
<font color="#CCCCCC">predicate encryption cipher texts</font><font color="#E5E5E5"> and</font>

208
00:08:05,510 --> 00:08:10,409
co-author encrypts<font color="#CCCCCC"> 1c data encrypts</font><font color="#E5E5E5"> D</font>

209
00:08:08,580 --> 00:08:11,789
the payload<font color="#CCCCCC"> now what is predicate</font>

210
00:08:10,410 --> 00:08:14,280
encryption and<font color="#E5E5E5"> how can</font><font color="#CCCCCC"> it be</font><font color="#E5E5E5"> used to</font>

211
00:08:11,790 --> 00:08:16,620
enforce access control so intuitively

212
00:08:14,280 --> 00:08:20,000
every client gets a secret key<font color="#E5E5E5"> SK which</font>

213
00:08:16,620 --> 00:08:22,800
is<font color="#CCCCCC"> associated to a predicate F and</font>

214
00:08:20,000 --> 00:08:25,770
roughly<font color="#CCCCCC"> speaking</font><font color="#E5E5E5"> a</font><font color="#CCCCCC"> ciphertext</font><font color="#E5E5E5"> can only</font>

215
00:08:22,800 --> 00:08:28,170
be decrypted<font color="#CCCCCC"> a</font><font color="#E5E5E5"> ciphertext</font><font color="#CCCCCC"> that</font><font color="#E5E5E5"> is</font>

216
00:08:25,770 --> 00:08:30,750
generated with a with an<font color="#CCCCCC"> attribute X can</font>

217
00:08:28,170 --> 00:08:33,030
only<font color="#E5E5E5"> be decrypted</font><font color="#CCCCCC"> if the predicate</font><font color="#E5E5E5"> if</font>

218
00:08:30,750 --> 00:08:36,690
this attribute<font color="#CCCCCC"> X fulfills the predicate</font>

219
00:08:33,030 --> 00:08:39,478
<font color="#E5E5E5">F so for</font><font color="#CCCCCC"> example in the in Co 3 a we</font>

220
00:08:36,690 --> 00:08:41,039
encrypt with<font color="#E5E5E5"> predicate</font><font color="#CCCCCC"> x w</font><font color="#E5E5E5"> w stands for</font>

221
00:08:39,479 --> 00:08:44,099
<font color="#CCCCCC">ID that means only</font><font color="#E5E5E5"> clients with right</font>

222
00:08:41,039 --> 00:08:46,050
access can decrypt<font color="#E5E5E5"> this ciphertext</font><font color="#CCCCCC"> and C</font>

223
00:08:44,099 --> 00:08:47,970
data is encrypted<font color="#E5E5E5"> with</font><font color="#CCCCCC"> X R which means</font>

224
00:08:46,050 --> 00:08:50,969
<font color="#CCCCCC">that only clients with</font><font color="#E5E5E5"> read access can</font>

225
00:08:47,970 --> 00:08:51,820
decrypt this<font color="#E5E5E5"> ciphertext</font><font color="#CCCCCC"> intuitively see</font>

226
00:08:50,970 --> 00:08:55,780
data stands for

227
00:08:51,820 --> 00:08:58,660
<font color="#CCCCCC">our</font><font color="#E5E5E5"> secrecy and see all this use for</font>

228
00:08:55,780 --> 00:09:00,819
observing integrity<font color="#E5E5E5"> now how</font><font color="#CCCCCC"> do the</font>

229
00:08:58,660 --> 00:09:03,760
algorithms<font color="#CCCCCC"> change as I said we have</font>

230
00:09:00,820 --> 00:09:05,800
malicious clients up to the<font color="#E5E5E5"> point where</font>

231
00:09:03,760 --> 00:09:07,660
we download the the path<font color="#E5E5E5"> everything</font>

232
00:09:05,800 --> 00:09:09,339
stays the<font color="#CCCCCC"> same however</font><font color="#E5E5E5"> we can now not</font>

233
00:09:07,660 --> 00:09:11,170
change the payload right away because

234
00:09:09,340 --> 00:09:13,080
clients might be potentially<font color="#CCCCCC"> malicious</font>

235
00:09:11,170 --> 00:09:15,699
so we just postpone this to the end

236
00:09:13,080 --> 00:09:18,820
<font color="#E5E5E5">instead</font><font color="#CCCCCC"> in the first place we just</font>

237
00:09:15,700 --> 00:09:21,130
simulate this this read that we do and

238
00:09:18,820 --> 00:09:22,540
<font color="#E5E5E5">we</font><font color="#CCCCCC"> also distinguish between</font><font color="#E5E5E5"> now we</font>

239
00:09:21,130 --> 00:09:23,740
distinguish<font color="#CCCCCC"> between the entry that we</font>

240
00:09:22,540 --> 00:09:26,290
read<font color="#E5E5E5"> and the end</font><font color="#CCCCCC"> without we want to</font>

241
00:09:23,740 --> 00:09:28,780
<font color="#E5E5E5">write and there's also an entry</font><font color="#CCCCCC"> which is</font>

242
00:09:26,290 --> 00:09:31,300
<font color="#E5E5E5">which is called D which</font><font color="#CCCCCC"> is a dummy entry</font>

243
00:09:28,780 --> 00:09:34,689
and just to note to<font color="#E5E5E5"> mention that this</font>

244
00:09:31,300 --> 00:09:37,569
<font color="#CCCCCC">entries only</font><font color="#E5E5E5"> needed to to make read and</font>

245
00:09:34,690 --> 00:09:39,990
write indistinguishable<font color="#E5E5E5"> as suggested by</font>

246
00:09:37,570 --> 00:09:42,370
<font color="#E5E5E5">the original definition of obliviousness</font>

247
00:09:39,990 --> 00:09:46,420
so now what we what do we do in the next

248
00:09:42,370 --> 00:09:49,330
<font color="#E5E5E5">step so again we</font><font color="#CCCCCC"> select a new leaf index</font>

249
00:09:46,420 --> 00:09:51,130
and we maintain<font color="#E5E5E5"> the invariant that means</font>

250
00:09:49,330 --> 00:09:53,500
the entry that<font color="#E5E5E5"> we changed or the end way</font>

251
00:09:51,130 --> 00:09:55,630
that we accessed has to lie on the path

252
00:09:53,500 --> 00:09:58,780
from<font color="#CCCCCC"> the leaf node to the root</font><font color="#E5E5E5"> this is</font>

253
00:09:55,630 --> 00:10:00,610
what happens<font color="#E5E5E5"> here but now we distinguish</font>

254
00:09:58,780 --> 00:10:02,530
between<font color="#E5E5E5"> read and write so in the case of</font>

255
00:10:00,610 --> 00:10:03,970
right we put<font color="#CCCCCC"> exactly</font><font color="#E5E5E5"> the entry that we</font>

256
00:10:02,530 --> 00:10:06,699
want<font color="#E5E5E5"> to write in the top position of</font><font color="#CCCCCC"> the</font>

257
00:10:03,970 --> 00:10:09,760
root<font color="#CCCCCC"> in the case</font><font color="#E5E5E5"> of read however now we</font>

258
00:10:06,700 --> 00:10:11,530
put a dummy entry in the in<font color="#CCCCCC"> the</font><font color="#E5E5E5"> in the</font>

259
00:10:09,760 --> 00:10:13,000
top position of<font color="#CCCCCC"> the</font><font color="#E5E5E5"> root and we</font><font color="#CCCCCC"> notice</font>

260
00:10:11,530 --> 00:10:18,130
<font color="#CCCCCC">that dummy entries are writable by</font>

261
00:10:13,000 --> 00:10:20,050
everyone the<font color="#E5E5E5"> next step is to</font><font color="#CCCCCC"> upload this</font>

262
00:10:18,130 --> 00:10:21,490
path to the server and also<font color="#CCCCCC"> to rerun</font>

263
00:10:20,050 --> 00:10:24,910
demise<font color="#E5E5E5"> in order to conceal</font><font color="#CCCCCC"> from the</font>

264
00:10:21,490 --> 00:10:27,100
server<font color="#E5E5E5"> but we did</font><font color="#CCCCCC"> NS 8 clients might be</font>

265
00:10:24,910 --> 00:10:29,469
potentially malicious<font color="#CCCCCC"> so what we add now</font>

266
00:10:27,100 --> 00:10:32,260
in additionally is an<font color="#E5E5E5"> integrity proof on</font>

267
00:10:29,470 --> 00:10:34,540
this path which shows<font color="#CCCCCC"> to the server</font><font color="#E5E5E5"> that</font>

268
00:10:32,260 --> 00:10:36,130
apart<font color="#E5E5E5"> from changing the randomness used</font>

269
00:10:34,540 --> 00:10:40,449
for the<font color="#E5E5E5"> encryption and the order of</font><font color="#CCCCCC"> the</font>

270
00:10:36,130 --> 00:10:42,189
elements<font color="#E5E5E5"> we didn't change anything the</font>

271
00:10:40,450 --> 00:10:45,040
server verifies this and then replaces

272
00:10:42,190 --> 00:10:47,050
the path<font color="#CCCCCC"> now notice that</font><font color="#E5E5E5"> we have</font><font color="#CCCCCC"> not</font>

273
00:10:45,040 --> 00:10:49,089
changed any entry so far so we just

274
00:10:47,050 --> 00:10:51,280
<font color="#E5E5E5">changed the order so what is left to be</font>

275
00:10:49,090 --> 00:10:53,050
<font color="#CCCCCC">done is as you see this blue box</font>

276
00:10:51,280 --> 00:10:56,110
<font color="#E5E5E5">changing the payload in the case of</font>

277
00:10:53,050 --> 00:10:58,089
<font color="#E5E5E5">right so what we do is we change</font><font color="#CCCCCC"> the top</font>

278
00:10:56,110 --> 00:10:59,830
position of<font color="#E5E5E5"> the</font><font color="#CCCCCC"> of the root</font><font color="#E5E5E5"> node</font><font color="#CCCCCC"> in</font>

279
00:10:58,090 --> 00:11:03,190
which<font color="#E5E5E5"> the entry</font><font color="#CCCCCC"> that we want to</font><font color="#E5E5E5"> write to</font>

280
00:10:59,830 --> 00:11:04,790
is laying or a dummy entry in the case

281
00:11:03,190 --> 00:11:06,500
of read which everyone can write<font color="#E5E5E5"> to</font>

282
00:11:04,790 --> 00:11:07,939
and additionally<font color="#CCCCCC"> we</font><font color="#E5E5E5"> attach an integrity</font>

283
00:11:06,500 --> 00:11:09,430
proof which shows that<font color="#CCCCCC"> we are eligible</font>

284
00:11:07,940 --> 00:11:14,180
<font color="#CCCCCC">to write this entry</font>

285
00:11:09,430 --> 00:11:17,719
and this is how we achieve integrity and

286
00:11:14,180 --> 00:11:19,489
the other properties now look<font color="#E5E5E5"> taking</font><font color="#CCCCCC"> a</font>

287
00:11:17,720 --> 00:11:21,770
closer look<font color="#E5E5E5"> at the</font><font color="#CCCCCC"> efficiency we see</font>

288
00:11:19,490 --> 00:11:24,830
that<font color="#CCCCCC"> Gorham uses these integrity proves</font>

289
00:11:21,770 --> 00:11:26,900
in order to achieve<font color="#E5E5E5"> integrity</font><font color="#CCCCCC"> this</font><font color="#E5E5E5"> gives</font>

290
00:11:24,830 --> 00:11:29,780
<font color="#CCCCCC">off gives us of course best security</font>

291
00:11:26,900 --> 00:11:31,520
properties<font color="#E5E5E5"> unfortunately it's not very</font>

292
00:11:29,780 --> 00:11:34,970
efficient in terms<font color="#E5E5E5"> of computation and</font>

293
00:11:31,520 --> 00:11:37,579
communication<font color="#E5E5E5"> so we thought</font><font color="#CCCCCC"> of ways to</font>

294
00:11:34,970 --> 00:11:39,850
<font color="#CCCCCC">improve the efficiency and</font><font color="#E5E5E5"> one way to do</font>

295
00:11:37,580 --> 00:11:41,410
that is<font color="#CCCCCC"> slightly relaxing</font><font color="#E5E5E5"> integrity and</font>

296
00:11:39,850 --> 00:11:43,730
introducing an after-the-fact

297
00:11:41,410 --> 00:11:45,500
<font color="#E5E5E5">enforcement of integrity namely</font>

298
00:11:43,730 --> 00:11:47,810
accountability in combination with

299
00:11:45,500 --> 00:11:49,160
<font color="#E5E5E5">logging or auditing and with this</font>

300
00:11:47,810 --> 00:11:51,170
technique<font color="#E5E5E5"> we can then restore the</font>

301
00:11:49,160 --> 00:11:53,329
database<font color="#E5E5E5"> after</font><font color="#CCCCCC"> a bad action</font><font color="#E5E5E5"> happens as</font>

302
00:11:51,170 --> 00:11:56,689
opposed to not<font color="#E5E5E5"> letting the bad action</font>

303
00:11:53,330 --> 00:11:57,980
happen at all so how does and this<font color="#E5E5E5"> is</font>

304
00:11:56,690 --> 00:12:00,530
<font color="#E5E5E5">what we achieve in</font><font color="#CCCCCC"> our second</font>

305
00:11:57,980 --> 00:12:03,320
construction accountable<font color="#CCCCCC"> Gorem so let's</font>

306
00:12:00,530 --> 00:12:04,790
see how the entry structure changes so

307
00:12:03,320 --> 00:12:07,580
this is the<font color="#CCCCCC"> Android structure of Gorham</font>

308
00:12:04,790 --> 00:12:08,959
now what we change<font color="#E5E5E5"> as I said this public</font>

309
00:12:07,580 --> 00:12:10,580
<font color="#CCCCCC">key encryption was only necessary</font><font color="#E5E5E5"> for</font>

310
00:12:08,960 --> 00:12:11,810
<font color="#CCCCCC">the integrity proof so this is the first</font>

311
00:12:10,580 --> 00:12:14,930
thing we change we<font color="#CCCCCC"> change back</font><font color="#E5E5E5"> to</font>

312
00:12:11,810 --> 00:12:16,729
symmetric encryption<font color="#E5E5E5"> and now we need an</font>

313
00:12:14,930 --> 00:12:20,030
accountability mechanism<font color="#E5E5E5"> so what do</font><font color="#CCCCCC"> we</font>

314
00:12:16,730 --> 00:12:22,550
do we add a chameleon signature of the

315
00:12:20,030 --> 00:12:26,120
index<font color="#E5E5E5"> conc data</font><font color="#CCCCCC"> signed by the data</font>

316
00:12:22,550 --> 00:12:27,740
owners public key secret key<font color="#E5E5E5"> and the</font>

317
00:12:26,120 --> 00:12:30,530
nice thing<font color="#CCCCCC"> about chameleon signatures is</font>

318
00:12:27,740 --> 00:12:32,720
that once you<font color="#E5E5E5"> know some kind of secret</font>

319
00:12:30,530 --> 00:12:34,579
some kind of trap door<font color="#E5E5E5"> you can change</font>

320
00:12:32,720 --> 00:12:37,190
the message<font color="#E5E5E5"> which</font><font color="#CCCCCC"> is signed</font><font color="#E5E5E5"> without</font>

321
00:12:34,580 --> 00:12:40,460
invalidating Sigma and the message in

322
00:12:37,190 --> 00:12:42,610
particular<font color="#CCCCCC"> and mean C data</font><font color="#E5E5E5"> so if you are</font>

323
00:12:40,460 --> 00:12:45,980
<font color="#E5E5E5">able to write to this entry</font>

324
00:12:42,610 --> 00:12:47,510
you will change C data and then you have

325
00:12:45,980 --> 00:12:50,390
<font color="#CCCCCC">to</font><font color="#E5E5E5"> change the message</font><font color="#CCCCCC"> in without</font>

326
00:12:47,510 --> 00:12:52,310
invalidating Sigma now this<font color="#E5E5E5"> trap door</font>

327
00:12:50,390 --> 00:12:53,750
must hence go to some position<font color="#E5E5E5"> where</font>

328
00:12:52,310 --> 00:12:58,369
only clients that are<font color="#E5E5E5"> able</font><font color="#CCCCCC"> to write</font><font color="#E5E5E5"> to</font>

329
00:12:53,750 --> 00:13:01,670
<font color="#CCCCCC">can can extract it which</font><font color="#E5E5E5"> means in C off</font>

330
00:12:58,370 --> 00:13:03,440
as I said if<font color="#E5E5E5"> you know the</font><font color="#CCCCCC"> trap door you</font>

331
00:13:01,670 --> 00:13:08,900
can change the message you can change

332
00:13:03,440 --> 00:13:11,360
the entry so this is this<font color="#E5E5E5"> is a count of</font>

333
00:13:08,900 --> 00:13:13,040
the<font color="#CCCCCC"> gorram now if if people so if</font>

334
00:13:11,360 --> 00:13:14,690
clients download entries intuitively

335
00:13:13,040 --> 00:13:17,060
they verify whether the signature is

336
00:13:14,690 --> 00:13:18,140
valid on the ingredients<font color="#E5E5E5"> and if not the</font>

337
00:13:17,060 --> 00:13:19,670
logging mechanism<font color="#E5E5E5"> takes</font>

338
00:13:18,140 --> 00:13:22,340
<font color="#CCCCCC">lazy the database is restored</font><font color="#E5E5E5"> and</font>

339
00:13:19,670 --> 00:13:24,670
clients are being blamed<font color="#CCCCCC"> I don't want to</font>

340
00:13:22,340 --> 00:13:26,900
go into detail<font color="#E5E5E5"> because of time reasons</font>

341
00:13:24,670 --> 00:13:28,790
so<font color="#E5E5E5"> we thought</font><font color="#CCCCCC"> of how to improve this</font>

342
00:13:26,900 --> 00:13:30,620
scheme<font color="#CCCCCC"> more in scaleable</font><font color="#E5E5E5"> Gorham and we</font>

343
00:13:28,790 --> 00:13:33,439
<font color="#CCCCCC">notice that</font><font color="#E5E5E5"> predicate encryption</font>

344
00:13:30,620 --> 00:13:35,120
actually gives<font color="#E5E5E5"> us much stronger access</font>

345
00:13:33,440 --> 00:13:36,980
control properties<font color="#E5E5E5"> as we actually need</font>

346
00:13:35,120 --> 00:13:38,780
so<font color="#CCCCCC"> predicate encryption gives us</font>

347
00:13:36,980 --> 00:13:41,090
<font color="#CCCCCC">role-based</font><font color="#E5E5E5"> access control or attribute</font>

348
00:13:38,780 --> 00:13:44,480
based access control<font color="#E5E5E5"> while we only need</font>

349
00:13:41,090 --> 00:13:45,920
readwrite access control<font color="#E5E5E5"> per entry and a</font>

350
00:13:44,480 --> 00:13:47,360
cryptographic primitive which was

351
00:13:45,920 --> 00:13:49,370
exactly<font color="#CCCCCC"> designed</font><font color="#E5E5E5"> for this</font><font color="#CCCCCC"> purpose is</font>

352
00:13:47,360 --> 00:13:50,720
broadcast encryption so we<font color="#CCCCCC"> exchange</font>

353
00:13:49,370 --> 00:13:52,630
<font color="#CCCCCC">predicates encryption for broadcast</font>

354
00:13:50,720 --> 00:13:54,650
encryption<font color="#E5E5E5"> and simply encrypt for the</font>

355
00:13:52,630 --> 00:13:56,360
clients<font color="#CCCCCC"> that may write and the clients</font>

356
00:13:54,650 --> 00:14:00,040
that<font color="#E5E5E5"> may read for example broadcast</font>

357
00:13:56,360 --> 00:14:05,090
encryption is also used in some<font color="#CCCCCC"> pay-tv</font>

358
00:14:00,040 --> 00:14:08,660
of providers<font color="#E5E5E5"> so it it must naturally be</font>

359
00:14:05,090 --> 00:14:10,520
fast<font color="#CCCCCC"> and in</font><font color="#E5E5E5"> order to prove my claims</font>

360
00:14:08,660 --> 00:14:11,689
that this<font color="#E5E5E5"> is actually the most efficient</font>

361
00:14:10,520 --> 00:14:16,040
<font color="#CCCCCC">solution let's have a look at the</font>

362
00:14:11,690 --> 00:14:21,050
numbers so when we look at<font color="#CCCCCC"> Gorem on the</font>

363
00:14:16,040 --> 00:14:23,390
<font color="#E5E5E5">left figure we see that so the red the</font>

364
00:14:21,050 --> 00:14:24,859
red<font color="#E5E5E5"> line is</font><font color="#CCCCCC"> for the computation</font><font color="#E5E5E5"> time on</font>

365
00:14:23,390 --> 00:14:26,300
the client for reading and writing the

366
00:14:24,860 --> 00:14:30,230
black line<font color="#E5E5E5"> is for the</font><font color="#CCCCCC"> computation time</font>

367
00:14:26,300 --> 00:14:31,550
for<font color="#CCCCCC"> ian's right on the server so you see</font>

368
00:14:30,230 --> 00:14:34,130
<font color="#E5E5E5">that this integrity proves they they</font>

369
00:14:31,550 --> 00:14:36,410
take<font color="#CCCCCC"> a lot of</font><font color="#E5E5E5"> time so we need 110 up to</font>

370
00:14:34,130 --> 00:14:40,730
180 seconds<font color="#CCCCCC"> burying</font><font color="#E5E5E5"> the storage size</font>

371
00:14:36,410 --> 00:14:42,079
from<font color="#E5E5E5"> one gigabyte to one terabyte and we</font>

372
00:14:40,730 --> 00:14:43,670
see that<font color="#CCCCCC"> in</font><font color="#E5E5E5"> account of the</font><font color="#CCCCCC"> go-around</font>

373
00:14:42,080 --> 00:14:45,680
dropping the integrity proofs we<font color="#E5E5E5"> gain</font>

374
00:14:43,670 --> 00:14:47,089
two orders of magnitude that means<font color="#E5E5E5"> so</font>

375
00:14:45,680 --> 00:14:50,979
now we distinguish the red line which<font color="#E5E5E5"> is</font>

376
00:14:47,090 --> 00:14:50,980
<font color="#E5E5E5">reading the blue line which is</font><font color="#CCCCCC"> writing</font>

377
00:14:51,220 --> 00:14:56,030
<font color="#E5E5E5">so we gain</font><font color="#CCCCCC"> there are two orders of</font>

378
00:14:54,080 --> 00:14:58,250
magnitude we read we drop down to<font color="#E5E5E5"> one</font>

379
00:14:56,030 --> 00:14:59,750
point two seconds up to two seconds<font color="#E5E5E5"> for</font>

380
00:14:58,250 --> 00:15:02,020
reading<font color="#E5E5E5"> and then one point six seconds</font>

381
00:14:59,750 --> 00:15:04,490
<font color="#E5E5E5">up to two point four seconds for writing</font>

382
00:15:02,020 --> 00:15:08,210
now looking at the<font color="#E5E5E5"> scalable solution</font>

383
00:15:04,490 --> 00:15:09,920
even<font color="#E5E5E5"> this this becomes apparent when</font><font color="#CCCCCC"> we</font>

384
00:15:08,210 --> 00:15:13,010
<font color="#E5E5E5">look at the number</font><font color="#CCCCCC"> of clients that vary</font>

385
00:15:09,920 --> 00:15:14,540
<font color="#CCCCCC">so notice that the writes the x-axis on</font>

386
00:15:13,010 --> 00:15:16,430
the<font color="#CCCCCC"> right is logarithmic scales it's</font>

387
00:15:14,540 --> 00:15:18,980
actually<font color="#E5E5E5"> not an exponential increase but</font>

388
00:15:16,430 --> 00:15:20,810
just a linear<font color="#E5E5E5"> one so I want to highlight</font>

389
00:15:18,980 --> 00:15:22,910
<font color="#CCCCCC">here just these two numbers so we have</font>

390
00:15:20,810 --> 00:15:24,410
<font color="#E5E5E5">four ten clients in a countable go room</font>

391
00:15:22,910 --> 00:15:26,930
we need<font color="#E5E5E5"> four seconds</font><font color="#CCCCCC"> to write and two</font>

392
00:15:24,410 --> 00:15:29,540
seconds to read the same time we need<font color="#E5E5E5"> an</font>

393
00:15:26,930 --> 00:15:30,469
<font color="#E5E5E5">scalable quorum for</font><font color="#CCCCCC"> 10,000 lines</font><font color="#E5E5E5"> so here</font>

394
00:15:29,540 --> 00:15:31,819
we haven't

395
00:15:30,470 --> 00:15:34,970
<font color="#E5E5E5">a</font><font color="#CCCCCC"> drop-down with four orders</font><font color="#E5E5E5"> of</font>

396
00:15:31,820 --> 00:15:36,890
<font color="#CCCCCC">magnitude and</font><font color="#E5E5E5"> finally the last</font>

397
00:15:34,970 --> 00:15:38,870
comparison is the<font color="#E5E5E5"> one to the standard</font>

398
00:15:36,890 --> 00:15:41,150
solution<font color="#CCCCCC"> path or am the single</font><font color="#E5E5E5"> client</font>

399
00:15:38,870 --> 00:15:42,920
solution so if we look at the<font color="#E5E5E5"> overhead</font>

400
00:15:41,150 --> 00:15:46,160
in<font color="#CCCCCC"> terms of communication we achieve</font>

401
00:15:42,920 --> 00:15:47,329
roughly<font color="#CCCCCC"> 1%</font><font color="#E5E5E5"> more</font><font color="#CCCCCC"> or less</font><font color="#E5E5E5"> this you can see</font>

402
00:15:46,160 --> 00:15:50,630
on the right so<font color="#E5E5E5"> in the left you</font><font color="#CCCCCC"> see the</font>

403
00:15:47,330 --> 00:15:53,300
<font color="#E5E5E5">two the</font><font color="#CCCCCC"> two communication lines which</font>

404
00:15:50,630 --> 00:15:55,280
are almost<font color="#E5E5E5"> overlapping and combining</font>

405
00:15:53,300 --> 00:15:58,819
<font color="#E5E5E5">this with for example</font><font color="#CCCCCC"> a mobile</font>

406
00:15:55,280 --> 00:16:00,350
<font color="#E5E5E5">connection of 4G</font><font color="#CCCCCC"> or LTE</font><font color="#E5E5E5"> this gives us a</font>

407
00:15:58,820 --> 00:16:02,990
combined communication computation

408
00:16:00,350 --> 00:16:06,710
overhead of<font color="#E5E5E5"> only 7% for reading and 8%</font>

409
00:16:02,990 --> 00:16:09,290
<font color="#E5E5E5">for writing so hold on 7% for porting</font>

410
00:16:06,710 --> 00:16:12,410
single client<font color="#E5E5E5"> to multi client</font><font color="#CCCCCC"> I think</font>

411
00:16:09,290 --> 00:16:15,230
<font color="#CCCCCC">that's</font><font color="#E5E5E5"> a low price to pay so let me</font>

412
00:16:12,410 --> 00:16:18,260
conclude my talk<font color="#E5E5E5"> so</font><font color="#CCCCCC"> I've shown you</font><font color="#E5E5E5"> a</font>

413
00:16:15,230 --> 00:16:19,790
formal<font color="#E5E5E5"> framework for group</font><font color="#CCCCCC"> om where we</font>

414
00:16:18,260 --> 00:16:21,590
define<font color="#E5E5E5"> several security and privacy</font>

415
00:16:19,790 --> 00:16:23,150
properties<font color="#E5E5E5"> and a unified attacker model</font>

416
00:16:21,590 --> 00:16:24,680
and I've also shown<font color="#CCCCCC"> you three different</font>

417
00:16:23,150 --> 00:16:27,260
constructions namely go around

418
00:16:24,680 --> 00:16:29,780
accountable<font color="#CCCCCC"> Gorem</font><font color="#E5E5E5"> and scalable</font><font color="#CCCCCC"> Gorem</font><font color="#E5E5E5"> all</font>

419
00:16:27,260 --> 00:16:32,630
achieving so going<font color="#E5E5E5"> from from top to</font>

420
00:16:29,780 --> 00:16:34,130
bottom<font color="#E5E5E5"> increasing</font><font color="#CCCCCC"> an efficiency</font><font color="#E5E5E5"> going</font>

421
00:16:32,630 --> 00:16:35,630
<font color="#E5E5E5">from the first to the second slightly</font>

422
00:16:34,130 --> 00:16:37,010
decreasing the security and going<font color="#CCCCCC"> from</font>

423
00:16:35,630 --> 00:16:38,390
the second to the third slightly

424
00:16:37,010 --> 00:16:40,970
<font color="#E5E5E5">decreasing the flexibility of the</font>

425
00:16:38,390 --> 00:16:42,640
solution<font color="#E5E5E5"> and if you only</font><font color="#CCCCCC"> remember two</font>

426
00:16:40,970 --> 00:16:45,440
things<font color="#E5E5E5"> of this talk remember those two</font>

427
00:16:42,640 --> 00:16:47,840
slightly slightly relaxing security

428
00:16:45,440 --> 00:16:50,210
properties can highly achieve<font color="#E5E5E5"> the</font>

429
00:16:47,840 --> 00:16:53,480
efficiency of the schemes<font color="#E5E5E5"> and the second</font>

430
00:16:50,210 --> 00:16:56,380
thing single client<font color="#CCCCCC"> or</font><font color="#E5E5E5"> m2 multi client</font>

431
00:16:53,480 --> 00:16:59,500
<font color="#CCCCCC">or am only costs</font><font color="#E5E5E5"> seven or eight percent</font>

432
00:16:56,380 --> 00:16:59,500
<font color="#E5E5E5">thank you</font>

433
00:17:04,400 --> 00:17:08,820
so we have some time<font color="#E5E5E5"> we have some time</font>

434
00:17:07,500 --> 00:17:11,699
for<font color="#CCCCCC"> questions please</font><font color="#E5E5E5"> come up</font><font color="#CCCCCC"> to the</font>

435
00:17:08,819 --> 00:17:13,829
microphones<font color="#E5E5E5"> if you have questions</font><font color="#CCCCCC"> while</font>

436
00:17:11,699 --> 00:17:16,949
people<font color="#E5E5E5"> are coming up</font><font color="#CCCCCC"> I'll</font><font color="#E5E5E5"> I'll ask first</font>

437
00:17:13,829 --> 00:17:19,740
question<font color="#CCCCCC"> so you've got very impressive</font>

438
00:17:16,949 --> 00:17:21,660
results<font color="#E5E5E5"> here it seems like</font><font color="#CCCCCC"> it's still a</font>

439
00:17:19,740 --> 00:17:24,329
long way<font color="#E5E5E5"> from being deployables</font>

440
00:17:21,660 --> 00:17:25,680
<font color="#CCCCCC">is that true</font><font color="#E5E5E5"> and if so what what's</font>

441
00:17:24,329 --> 00:17:28,860
necessary to<font color="#E5E5E5"> get</font><font color="#CCCCCC"> to</font><font color="#E5E5E5"> the point where this</font>

442
00:17:25,680 --> 00:17:33,090
could<font color="#E5E5E5"> be used</font><font color="#CCCCCC"> for real systems so I</font>

443
00:17:28,860 --> 00:17:35,340
think<font color="#E5E5E5"> if the</font><font color="#CCCCCC"> database sizes are not too</font>

444
00:17:33,090 --> 00:17:37,740
big<font color="#CCCCCC"> so for</font><font color="#E5E5E5"> example in this</font><font color="#CCCCCC"> personal this</font>

445
00:17:35,340 --> 00:17:43,080
is<font color="#CCCCCC"> personal health</font><font color="#E5E5E5"> record scenario we're</font>

446
00:17:37,740 --> 00:17:44,490
talking of about 250 megabytes<font color="#CCCCCC"> so for</font>

447
00:17:43,080 --> 00:17:45,810
<font color="#E5E5E5">example the electronic health cards that</font>

448
00:17:44,490 --> 00:17:48,210
are actually<font color="#E5E5E5"> deployed at the moment they</font>

449
00:17:45,810 --> 00:17:51,540
only can store<font color="#E5E5E5"> 64 K so which is not</font>

450
00:17:48,210 --> 00:17:53,220
<font color="#E5E5E5">really much so 250 megabytes for example</font>

451
00:17:51,540 --> 00:17:55,830
can be<font color="#E5E5E5"> handled in quite an efficient</font>

452
00:17:53,220 --> 00:17:59,520
amount of time so there<font color="#E5E5E5"> I would say it</font>

453
00:17:55,830 --> 00:18:01,070
can<font color="#E5E5E5"> be deployed already in practice but</font>

454
00:17:59,520 --> 00:18:03,720
if you're if<font color="#CCCCCC"> you're talking</font><font color="#E5E5E5"> about like</font>

455
00:18:01,070 --> 00:18:12,090
terabyte<font color="#CCCCCC"> or even petabyte then then we</font>

456
00:18:03,720 --> 00:18:15,230
then there's the way to go indeed<font color="#CCCCCC"> ok</font>

457
00:18:12,090 --> 00:18:15,230
let's thank our speaker again

