1
00:00:00,569 --> 00:00:05,588
this is joint work<font color="#E5E5E5"> with</font><font color="#CCCCCC"> Alexandra</font>

2
00:00:03,370 --> 00:00:07,209
<font color="#CCCCCC">Boulder from Georgia Tech and</font><font color="#E5E5E5"> Samuel</font>

3
00:00:05,589 --> 00:00:09,550
<font color="#CCCCCC">Jaron christine.roney teru teru from</font>

4
00:00:07,209 --> 00:00:10,959
Purdue University<font color="#CCCCCC"> so let</font><font color="#E5E5E5"> me just spend</font>

5
00:00:09,550 --> 00:00:12,820
<font color="#E5E5E5">one slide to give you some motivational</font>

6
00:00:10,960 --> 00:00:13,990
<font color="#CCCCCC">contests</font><font color="#E5E5E5"> for this problem that we're</font>

7
00:00:12,820 --> 00:00:16,720
trying<font color="#CCCCCC"> to solve on this paper</font><font color="#E5E5E5"> and it's</font>

8
00:00:13,990 --> 00:00:19,300
all about<font color="#CCCCCC"> minimizing latency as we know</font>

9
00:00:16,720 --> 00:00:22,359
with proliferation of<font color="#E5E5E5"> mobile and web</font>

10
00:00:19,300 --> 00:00:24,519
applications latency has certainly

11
00:00:22,359 --> 00:00:26,140
become a very huge deal on the<font color="#CCCCCC"> Internet</font>

12
00:00:24,519 --> 00:00:28,570
<font color="#E5E5E5">of today the Internet is a</font><font color="#CCCCCC"> very</font>

13
00:00:26,140 --> 00:00:31,960
competitive<font color="#E5E5E5"> environment</font><font color="#CCCCCC"> users are</font>

14
00:00:28,570 --> 00:00:34,720
<font color="#CCCCCC">becoming more and more content hungry</font>

15
00:00:31,960 --> 00:00:36,760
and certainly<font color="#CCCCCC"> very impatient with</font>

16
00:00:34,720 --> 00:00:38,260
latency<font color="#E5E5E5"> so some previous</font><font color="#CCCCCC"> studies have</font>

17
00:00:36,760 --> 00:00:41,339
shown for<font color="#CCCCCC"> example</font><font color="#E5E5E5"> that users might visit</font>

18
00:00:38,260 --> 00:00:44,650
<font color="#E5E5E5">a</font><font color="#CCCCCC"> website</font><font color="#E5E5E5"> less often if it is slower</font>

19
00:00:41,340 --> 00:00:47,410
just<font color="#E5E5E5"> by</font><font color="#CCCCCC"> 1/4 of a second and another</font>

20
00:00:44,650 --> 00:00:48,879
<font color="#E5E5E5">study has shown that</font><font color="#CCCCCC"> amazon can lose up</font>

21
00:00:47,410 --> 00:00:52,209
to<font color="#CCCCCC"> 1 percent in</font><font color="#E5E5E5"> its sales</font>

22
00:00:48,880 --> 00:00:55,840
<font color="#E5E5E5">just because</font><font color="#CCCCCC"> of</font><font color="#E5E5E5"> latency for as little as</font>

23
00:00:52,210 --> 00:00:57,430
<font color="#E5E5E5">a tenth of a second so we</font><font color="#CCCCCC"> know that</font>

24
00:00:55,840 --> 00:00:58,240
bandwidth is cheap and<font color="#E5E5E5"> will</font><font color="#CCCCCC"> continue to</font>

25
00:00:57,430 --> 00:01:00,730
grow but there's a fundamental

26
00:00:58,240 --> 00:01:02,980
<font color="#CCCCCC">limitation in what we can do about</font>

27
00:01:00,730 --> 00:01:04,298
latency<font color="#CCCCCC"> and it has to do with the fact</font>

28
00:01:02,980 --> 00:01:06,850
<font color="#CCCCCC">that information</font><font color="#E5E5E5"> cannot travel faster</font>

29
00:01:04,299 --> 00:01:09,070
<font color="#CCCCCC">than</font><font color="#E5E5E5"> the speed</font><font color="#CCCCCC"> of light so unless we can</font>

30
00:01:06,850 --> 00:01:11,048
figure<font color="#E5E5E5"> out how to faster how to travel</font>

31
00:01:09,070 --> 00:01:14,139
faster than<font color="#E5E5E5"> the</font><font color="#CCCCCC"> speed of light or build</font>

32
00:01:11,049 --> 00:01:16,929
tunnels<font color="#CCCCCC"> in earth or maybe move to a</font>

33
00:01:14,140 --> 00:01:18,700
smaller planet<font color="#CCCCCC"> pretty much</font><font color="#E5E5E5"> we are faced</font>

34
00:01:16,929 --> 00:01:20,350
<font color="#E5E5E5">with the following challenge which has</font>

35
00:01:18,700 --> 00:01:22,689
to do<font color="#E5E5E5"> with minimizing</font><font color="#CCCCCC"> the number</font><font color="#E5E5E5"> of</font><font color="#CCCCCC"> RT</font>

36
00:01:20,350 --> 00:01:24,369
<font color="#CCCCCC">T's or round-trip times required to</font>

37
00:01:22,689 --> 00:01:27,419
establish<font color="#CCCCCC"> a connection and hopefully</font>

38
00:01:24,369 --> 00:01:30,869
without sacrificing security of course

39
00:01:27,420 --> 00:01:33,789
so this is exactly<font color="#E5E5E5"> where quick comes in</font>

40
00:01:30,869 --> 00:01:35,740
<font color="#E5E5E5">quick is basically Google's answer to</font>

41
00:01:33,789 --> 00:01:37,810
the latency challenge<font color="#CCCCCC"> it stands for</font>

42
00:01:35,740 --> 00:01:39,520
quick UDP<font color="#E5E5E5"> internet connections</font><font color="#CCCCCC"> so it</font>

43
00:01:37,810 --> 00:01:42,429
<font color="#E5E5E5">runs on</font><font color="#CCCCCC"> top of UDP</font><font color="#E5E5E5"> which</font><font color="#CCCCCC"> is a</font>

44
00:01:39,520 --> 00:01:45,189
transmission layer protocol it was

45
00:01:42,429 --> 00:01:47,139
intended for web content delivery<font color="#E5E5E5"> and it</font>

46
00:01:45,189 --> 00:01:52,270
was<font color="#E5E5E5"> developed and deployed by Google in</font>

47
00:01:47,139 --> 00:01:55,630
the Chrome browser<font color="#CCCCCC"> 2013 and so it's</font>

48
00:01:52,270 --> 00:01:58,149
mainly<font color="#E5E5E5"> intended to produce security</font>

49
00:01:55,630 --> 00:01:59,708
protection comparable to that of<font color="#E5E5E5"> TLS but</font>

50
00:01:58,149 --> 00:02:01,630
<font color="#CCCCCC">reduced connection at the same time</font>

51
00:01:59,709 --> 00:02:03,609
<font color="#E5E5E5">reduced connection latency and that is</font>

52
00:02:01,630 --> 00:02:05,859
<font color="#E5E5E5">exactly the question</font><font color="#CCCCCC"> that</font><font color="#E5E5E5"> we try to</font>

53
00:02:03,609 --> 00:02:10,030
target<font color="#E5E5E5"> in a study Ken quick actually</font><font color="#CCCCCC"> do</font>

54
00:02:05,859 --> 00:02:12,310
this in presence of attackers so let<font color="#E5E5E5"> me</font>

55
00:02:10,030 --> 00:02:13,750
spend a couple<font color="#E5E5E5"> of slides</font><font color="#CCCCCC"> to give you</font>

56
00:02:12,310 --> 00:02:14,050
<font color="#E5E5E5">just an idea</font><font color="#CCCCCC"> of why</font><font color="#E5E5E5"> this questions</font>

57
00:02:13,750 --> 00:02:16,680
actual

58
00:02:14,050 --> 00:02:19,540
<font color="#CCCCCC">non-trivial and what I</font><font color="#E5E5E5"> will do is I'll</font>

59
00:02:16,680 --> 00:02:23,830
compare quick and TLS<font color="#CCCCCC"> so let's first</font>

60
00:02:19,540 --> 00:02:26,350
start<font color="#E5E5E5"> with</font><font color="#CCCCCC"> set</font><font color="#E5E5E5"> up time</font><font color="#CCCCCC"> we all use TLS if</font>

61
00:02:23,830 --> 00:02:29,380
when we want to securely access<font color="#CCCCCC"> a bank</font>

62
00:02:26,350 --> 00:02:32,560
<font color="#E5E5E5">account online or maybe email but</font><font color="#CCCCCC"> GLS</font>

63
00:02:29,380 --> 00:02:35,140
runs over TCP which means that in<font color="#E5E5E5"> order</font>

64
00:02:32,560 --> 00:02:37,120
<font color="#E5E5E5">to exchange data with TLS we first have</font>

65
00:02:35,140 --> 00:02:39,399
<font color="#CCCCCC">to go through</font><font color="#E5E5E5"> and handshake associated</font>

66
00:02:37,120 --> 00:02:41,470
with<font color="#E5E5E5"> a TCP connection</font><font color="#CCCCCC"> and then another</font>

67
00:02:39,400 --> 00:02:43,600
handshake<font color="#E5E5E5"> is associated with TLS key</font>

68
00:02:41,470 --> 00:02:45,370
establishment<font color="#CCCCCC"> and so what quick tries to</font>

69
00:02:43,600 --> 00:02:47,320
do is in some<font color="#E5E5E5"> sense combine these two</font>

70
00:02:45,370 --> 00:02:48,790
handshakes into one so the connection

71
00:02:47,320 --> 00:02:50,650
establishment<font color="#E5E5E5"> and key agreement can</font>

72
00:02:48,790 --> 00:02:54,310
happen<font color="#CCCCCC"> pretty much at the same time sort</font>

73
00:02:50,650 --> 00:02:57,670
<font color="#E5E5E5">of and thereby cut the latency in half</font>

74
00:02:54,310 --> 00:03:01,090
<font color="#E5E5E5">and so there of course some benefits to</font>

75
00:02:57,670 --> 00:03:03,609
<font color="#E5E5E5">using TCP such as it guarantees order</font>

76
00:03:01,090 --> 00:03:05,260
<font color="#E5E5E5">delivery and also</font><font color="#CCCCCC"> provide some</font>

77
00:03:03,610 --> 00:03:08,380
<font color="#CCCCCC">protection against connection spoofing</font>

78
00:03:05,260 --> 00:03:10,120
<font color="#E5E5E5">but it as we see here it adds to latency</font>

79
00:03:08,380 --> 00:03:13,299
and also we know that<font color="#E5E5E5"> it suffers from</font>

80
00:03:10,120 --> 00:03:15,490
subtle performance degradation attacks

81
00:03:13,300 --> 00:03:17,980
such as<font color="#E5E5E5"> TCP reset and these kinds of</font>

82
00:03:15,490 --> 00:03:19,900
<font color="#E5E5E5">attacks have been recently have gained</font>

83
00:03:17,980 --> 00:03:22,510
some notoriety<font color="#CCCCCC"> as it was found</font><font color="#E5E5E5"> out that</font>

84
00:03:19,900 --> 00:03:24,100
<font color="#E5E5E5">they were used for censorship by some</font>

85
00:03:22,510 --> 00:03:27,160
governments because they're kind<font color="#CCCCCC"> of</font>

86
00:03:24,100 --> 00:03:28,510
subtle so the question is well what

87
00:03:27,160 --> 00:03:31,840
about quick how does quick deal with

88
00:03:28,510 --> 00:03:35,380
these issues<font color="#CCCCCC"> and let me now talk about</font>

89
00:03:31,840 --> 00:03:37,480
data exchange<font color="#CCCCCC"> and quick vs. TLS so in</font>

90
00:03:35,380 --> 00:03:39,280
TLS<font color="#E5E5E5"> in order to exchange data you have</font>

91
00:03:37,480 --> 00:03:41,920
<font color="#E5E5E5">to first establish</font><font color="#CCCCCC"> a</font><font color="#E5E5E5"> session key and</font>

92
00:03:39,280 --> 00:03:44,140
then you can use that<font color="#CCCCCC"> key to encrypt the</font>

93
00:03:41,920 --> 00:03:46,000
data that<font color="#E5E5E5"> you're trying to exchange but</font>

94
00:03:44,140 --> 00:03:47,380
in quick<font color="#E5E5E5"> things are slightly different</font>

95
00:03:46,000 --> 00:03:50,650
<font color="#CCCCCC">it actually looks like</font><font color="#E5E5E5"> it has more</font>

96
00:03:47,380 --> 00:03:52,959
stages<font color="#E5E5E5"> stages but in reality is that you</font>

97
00:03:50,650 --> 00:03:55,300
can start exchanging data<font color="#E5E5E5"> before you</font>

98
00:03:52,959 --> 00:03:57,489
establish the final<font color="#E5E5E5"> session key and you</font>

99
00:03:55,300 --> 00:04:00,400
and this data exchange happens with the

100
00:03:57,489 --> 00:04:02,140
initial key and at the<font color="#E5E5E5"> same time as the</font>

101
00:04:00,400 --> 00:04:03,700
exchange data with<font color="#E5E5E5"> the initial key you</font>

102
00:04:02,140 --> 00:04:07,000
can also establish the final<font color="#E5E5E5"> session key</font>

103
00:04:03,700 --> 00:04:09,280
<font color="#E5E5E5">and</font><font color="#CCCCCC"> the main benefit of</font><font color="#E5E5E5"> this</font><font color="#CCCCCC"> is</font><font color="#E5E5E5"> that the</font>

104
00:04:07,000 --> 00:04:12,100
parties can often avoid in practice when

105
00:04:09,280 --> 00:04:13,930
<font color="#CCCCCC">they use quick</font><font color="#E5E5E5"> one</font><font color="#CCCCCC"> RTT in the initial</font>

106
00:04:12,100 --> 00:04:15,670
key establishment<font color="#CCCCCC"> a</font><font color="#E5E5E5"> quick by</font><font color="#CCCCCC"> cashing</font>

107
00:04:13,930 --> 00:04:18,220
some of the<font color="#E5E5E5"> protocol specific parameters</font>

108
00:04:15,670 --> 00:04:21,099
and that<font color="#E5E5E5"> what this allows them to</font><font color="#CCCCCC"> do in</font>

109
00:04:18,220 --> 00:04:22,780
practice<font color="#E5E5E5"> is to experience</font><font color="#CCCCCC"> 0rg T</font>

110
00:04:21,100 --> 00:04:24,880
connections in other words they don't

111
00:04:22,780 --> 00:04:26,809
<font color="#CCCCCC">actually</font><font color="#E5E5E5"> have to wait for any</font><font color="#CCCCCC"> R</font><font color="#E5E5E5"> T TS</font>

112
00:04:24,880 --> 00:04:29,240
<font color="#E5E5E5">before they start sending</font><font color="#CCCCCC"> data</font>

113
00:04:26,810 --> 00:04:31,280
in the initial<font color="#CCCCCC"> data exchange phase where</font>

114
00:04:29,240 --> 00:04:34,220
they use<font color="#E5E5E5"> the initial key but the</font>

115
00:04:31,280 --> 00:04:37,270
question is what<font color="#E5E5E5"> what implication does</font>

116
00:04:34,220 --> 00:04:40,250
<font color="#CCCCCC">this</font><font color="#E5E5E5"> optimization have on the security</font>

117
00:04:37,270 --> 00:04:42,289
now before I go on<font color="#CCCCCC"> I'd</font><font color="#E5E5E5"> like to mention</font><font color="#CCCCCC"> a</font>

118
00:04:40,250 --> 00:04:45,889
very<font color="#CCCCCC"> closely related work</font><font color="#E5E5E5"> to a study</font>

119
00:04:42,290 --> 00:04:47,480
<font color="#E5E5E5">from</font><font color="#CCCCCC"> last year in CCS</font><font color="#E5E5E5"> the authors of</font>

120
00:04:45,889 --> 00:04:49,280
this study have mainly focused on the

121
00:04:47,480 --> 00:04:51,290
key establishment<font color="#E5E5E5"> phase of the</font><font color="#CCCCCC"> quic</font>

122
00:04:49,280 --> 00:04:53,119
protocol<font color="#E5E5E5"> and what they</font><font color="#CCCCCC"> had done is</font>

123
00:04:51,290 --> 00:04:54,919
developed a security definition for

124
00:04:53,120 --> 00:04:56,919
<font color="#E5E5E5">multistage key agreement and they have</font>

125
00:04:54,919 --> 00:04:59,210
shown that<font color="#CCCCCC"> quic meets their definition</font>

126
00:04:56,919 --> 00:05:01,549
<font color="#E5E5E5">and what they've also</font><font color="#CCCCCC"> shown is that if</font>

127
00:04:59,210 --> 00:05:04,280
<font color="#E5E5E5">you modify</font><font color="#CCCCCC"> the data</font><font color="#E5E5E5"> exchange part of</font>

128
00:05:01,550 --> 00:05:06,440
quick and sort of<font color="#CCCCCC"> composer together with</font>

129
00:05:04,280 --> 00:05:08,179
the key establishment<font color="#E5E5E5"> phase of quick</font>

130
00:05:06,440 --> 00:05:08,870
then together<font color="#E5E5E5"> you can sort</font><font color="#CCCCCC"> of show that</font>

131
00:05:08,180 --> 00:05:11,480
they're secure

132
00:05:08,870 --> 00:05:12,890
however the<font color="#E5E5E5"> question is what</font><font color="#CCCCCC"> about</font>

133
00:05:11,480 --> 00:05:15,169
security<font color="#CCCCCC"> of</font><font color="#E5E5E5"> the whole protocol as it</font>

134
00:05:12,890 --> 00:05:16,729
<font color="#CCCCCC">actually is</font><font color="#E5E5E5"> in other words how it is</font>

135
00:05:15,169 --> 00:05:19,099
<font color="#E5E5E5">implement it without any modifications</font>

136
00:05:16,730 --> 00:05:20,680
and furthermore what<font color="#E5E5E5"> about its latency</font>

137
00:05:19,100 --> 00:05:22,880
guarantees and president<font color="#CCCCCC"> of attackers</font>

138
00:05:20,680 --> 00:05:24,590
<font color="#CCCCCC">and</font><font color="#E5E5E5"> the reason why this question is</font><font color="#CCCCCC"> kind</font>

139
00:05:22,880 --> 00:05:26,150
of important because after<font color="#CCCCCC"> all quic</font><font color="#E5E5E5"> is</font>

140
00:05:24,590 --> 00:05:29,929
not just some<font color="#CCCCCC"> kind of</font><font color="#E5E5E5"> hypothetical</font>

141
00:05:26,150 --> 00:05:32,109
protocol<font color="#E5E5E5"> used to study in academia but</font>

142
00:05:29,930 --> 00:05:34,970
it's actually<font color="#E5E5E5"> being deployed and used</font>

143
00:05:32,110 --> 00:05:38,600
and these are exactly the<font color="#E5E5E5"> questions that</font>

144
00:05:34,970 --> 00:05:40,130
we<font color="#E5E5E5"> target in our study what provable</font>

145
00:05:38,600 --> 00:05:41,510
security guarantees does quic provide

146
00:05:40,130 --> 00:05:43,610
and under which assumptions<font color="#E5E5E5"> and</font>

147
00:05:41,510 --> 00:05:44,960
furthermore<font color="#E5E5E5"> how effective is quic at</font>

148
00:05:43,610 --> 00:05:46,640
minimizing latency in presence of

149
00:05:44,960 --> 00:05:47,960
<font color="#E5E5E5">attackers the second question is a</font>

150
00:05:46,640 --> 00:05:51,020
little<font color="#CCCCCC"> bit more operational and it has</font>

151
00:05:47,960 --> 00:05:52,789
to do with<font color="#CCCCCC"> not</font><font color="#E5E5E5"> necessarily security but</font>

152
00:05:51,020 --> 00:05:54,770
how you can<font color="#CCCCCC"> degrade performance of quic</font>

153
00:05:52,789 --> 00:05:57,979
in some<font color="#E5E5E5"> subtle ways that are</font><font color="#CCCCCC"> hard to</font>

154
00:05:54,770 --> 00:06:00,229
<font color="#CCCCCC">detect so let me give you a very brief</font>

155
00:05:57,979 --> 00:06:02,180
<font color="#CCCCCC">summary of</font><font color="#E5E5E5"> our results so we develop a</font>

156
00:06:00,229 --> 00:06:03,650
security definition<font color="#E5E5E5"> that is suitable for</font>

157
00:06:02,180 --> 00:06:05,990
performance<font color="#CCCCCC"> event protocols kind of like</font>

158
00:06:03,650 --> 00:06:08,030
quick<font color="#CCCCCC"> and we show the</font><font color="#E5E5E5"> quick satisfies</font>

159
00:06:05,990 --> 00:06:09,620
our security definition and this

160
00:06:08,030 --> 00:06:12,289
requires a<font color="#CCCCCC"> very rigorous</font><font color="#E5E5E5"> kind of</font>

161
00:06:09,620 --> 00:06:13,729
approach we show that quic does not

162
00:06:12,289 --> 00:06:17,180
satisfy<font color="#CCCCCC"> the traditional notion of</font>

163
00:06:13,729 --> 00:06:20,870
forward secrecy<font color="#CCCCCC"> provided</font><font color="#E5E5E5"> by some TLS</font>

164
00:06:17,180 --> 00:06:22,550
variants like for example TLS DHE<font color="#CCCCCC"> let me</font>

165
00:06:20,870 --> 00:06:24,440
remind you<font color="#CCCCCC"> that for</font><font color="#E5E5E5"> secrecy is</font><font color="#CCCCCC"> the</font>

166
00:06:22,550 --> 00:06:26,240
property that<font color="#CCCCCC"> if the communicating</font>

167
00:06:24,440 --> 00:06:29,539
parties<font color="#E5E5E5"> are ever compromised and their</font>

168
00:06:26,240 --> 00:06:32,090
state gets revealed<font color="#E5E5E5"> if there's forward</font>

169
00:06:29,539 --> 00:06:34,159
secrecy<font color="#E5E5E5"> than they are communication that</font>

170
00:06:32,090 --> 00:06:36,619
happened before<font color="#E5E5E5"> the</font><font color="#CCCCCC"> compromise</font><font color="#E5E5E5"> cannot be</font>

171
00:06:34,160 --> 00:06:38,290
leaked and with<font color="#CCCCCC"> respect</font><font color="#E5E5E5"> to the second</font>

172
00:06:36,620 --> 00:06:40,600
question

173
00:06:38,290 --> 00:06:41,950
we show with a simple attacks on some of

174
00:06:40,600 --> 00:06:43,480
the parameters<font color="#CCCCCC"> of</font><font color="#E5E5E5"> the protocol is</font>

175
00:06:41,950 --> 00:06:45,750
actually<font color="#E5E5E5"> easy to prevent quick from</font>

176
00:06:43,480 --> 00:06:48,280
achieving<font color="#CCCCCC"> its minimal agency goals and</font>

177
00:06:45,750 --> 00:06:50,170
we have implemented<font color="#E5E5E5"> all of these attacks</font>

178
00:06:48,280 --> 00:06:51,520
<font color="#E5E5E5">and we show that they're practical and</font>

179
00:06:50,170 --> 00:06:54,610
effective<font color="#E5E5E5"> at degrading quicks</font>

180
00:06:51,520 --> 00:06:57,159
performance so in the rest<font color="#E5E5E5"> of this talk</font>

181
00:06:54,610 --> 00:07:00,550
I would<font color="#E5E5E5"> like to talk</font><font color="#CCCCCC"> about a provable</font>

182
00:06:57,160 --> 00:07:02,530
<font color="#E5E5E5">analysis that we've done about quick</font><font color="#CCCCCC"> and</font>

183
00:07:00,550 --> 00:07:04,150
after<font color="#E5E5E5"> that I will talk about performance</font>

184
00:07:02,530 --> 00:07:05,710
<font color="#E5E5E5">degradation attacks against</font><font color="#CCCCCC"> wick</font><font color="#E5E5E5"> and</font>

185
00:07:04,150 --> 00:07:09,010
then I will conclude<font color="#CCCCCC"> with a summary and</font>

186
00:07:05,710 --> 00:07:10,690
future work<font color="#E5E5E5"> so let me first give you</font><font color="#CCCCCC"> a</font>

187
00:07:09,010 --> 00:07:13,450
<font color="#CCCCCC">little</font><font color="#E5E5E5"> bit more details about how quick</font>

188
00:07:10,690 --> 00:07:15,400
<font color="#E5E5E5">works and also point out some</font><font color="#CCCCCC"> of its</font>

189
00:07:13,450 --> 00:07:17,860
complexities<font color="#E5E5E5"> so imagine we have a client</font>

190
00:07:15,400 --> 00:07:20,739
<font color="#E5E5E5">and a server the</font><font color="#CCCCCC"> client has not yet</font>

191
00:07:17,860 --> 00:07:23,680
<font color="#E5E5E5">connected to the server ever before so</font>

192
00:07:20,740 --> 00:07:27,220
it picks a connection ID<font color="#CCCCCC"> where</font><font color="#E5E5E5"> is just a</font>

193
00:07:23,680 --> 00:07:29,800
random<font color="#E5E5E5"> string sends</font><font color="#CCCCCC"> a connection</font><font color="#E5E5E5"> request</font>

194
00:07:27,220 --> 00:07:31,320
<font color="#CCCCCC">to the</font><font color="#E5E5E5"> server</font><font color="#CCCCCC"> the server then generates</font>

195
00:07:29,800 --> 00:07:34,510
what's called a source address token

196
00:07:31,320 --> 00:07:36,700
<font color="#E5E5E5">which basically plays</font><font color="#CCCCCC"> a</font><font color="#E5E5E5"> somewhat</font>

197
00:07:34,510 --> 00:07:39,039
<font color="#E5E5E5">analogous</font><font color="#CCCCCC"> to a sync cookie in TCP</font><font color="#E5E5E5"> and</font>

198
00:07:36,700 --> 00:07:41,800
then sends it<font color="#CCCCCC"> back along with a</font>

199
00:07:39,040 --> 00:07:43,690
<font color="#E5E5E5">parameter called server config which</font>

200
00:07:41,800 --> 00:07:46,360
contains the service public<font color="#E5E5E5"> D Phi helmet</font>

201
00:07:43,690 --> 00:07:47,800
values and then if everything<font color="#E5E5E5"> is</font><font color="#CCCCCC"> okay</font>

202
00:07:46,360 --> 00:07:49,510
<font color="#CCCCCC">and</font><font color="#E5E5E5"> the signature and the server config</font>

203
00:07:47,800 --> 00:07:52,390
verifies the client produces its own

204
00:07:49,510 --> 00:07:53,860
difficult<font color="#CCCCCC"> value sends them back</font><font color="#E5E5E5"> the</font>

205
00:07:52,390 --> 00:07:55,719
<font color="#CCCCCC">server's verifies the source address</font>

206
00:07:53,860 --> 00:07:57,790
token and then they can establish<font color="#E5E5E5"> the</font>

207
00:07:55,720 --> 00:07:59,470
initial<font color="#CCCCCC"> key</font><font color="#E5E5E5"> and exchange data</font><font color="#CCCCCC"> before</font>

208
00:07:57,790 --> 00:08:02,050
they actually get the final session<font color="#E5E5E5"> key</font>

209
00:07:59,470 --> 00:08:04,350
<font color="#E5E5E5">now</font><font color="#CCCCCC"> during</font><font color="#E5E5E5"> the initial data exchanges</font>

210
00:08:02,050 --> 00:08:06,790
when the server can now produce

211
00:08:04,350 --> 00:08:10,600
<font color="#E5E5E5">diffie-hellman values that are</font><font color="#CCCCCC"> dedicated</font>

212
00:08:06,790 --> 00:08:13,000
specifically<font color="#E5E5E5"> for this session</font><font color="#CCCCCC"> send</font><font color="#E5E5E5"> them</font>

213
00:08:10,600 --> 00:08:15,010
<font color="#CCCCCC">to</font><font color="#E5E5E5"> the client</font><font color="#CCCCCC"> encrypted under the</font>

214
00:08:13,000 --> 00:08:19,830
initial key and then after that they can

215
00:08:15,010 --> 00:08:22,390
<font color="#E5E5E5">derive the new session final key and</font>

216
00:08:19,830 --> 00:08:23,740
exchange data<font color="#E5E5E5"> under this final key so</font>

217
00:08:22,390 --> 00:08:27,250
this is a very busy<font color="#CCCCCC"> slide but the main</font>

218
00:08:23,740 --> 00:08:29,020
point<font color="#CCCCCC"> here</font><font color="#E5E5E5"> is that the SDK the</font><font color="#CCCCCC"> source</font>

219
00:08:27,250 --> 00:08:31,420
address token and the server config can

220
00:08:29,020 --> 00:08:33,130
actually be reused<font color="#E5E5E5"> in what's called a</font>

221
00:08:31,420 --> 00:08:36,960
connection resumption this is exactly

222
00:08:33,130 --> 00:08:41,070
where<font color="#E5E5E5"> the entry where</font><font color="#CCCCCC"> quic gets</font>

223
00:08:36,960 --> 00:08:43,800
interesting<font color="#E5E5E5"> okay</font>

224
00:08:41,070 --> 00:08:45,420
<font color="#E5E5E5">come on</font><font color="#CCCCCC"> saying okay so in connection</font>

225
00:08:43,799 --> 00:08:47,839
resumption<font color="#E5E5E5"> I mentioned that the client</font>

226
00:08:45,420 --> 00:08:49,680
already has contacted<font color="#E5E5E5"> the server before</font>

227
00:08:47,840 --> 00:08:51,750
<font color="#CCCCCC">solely has to do is pick a new</font>

228
00:08:49,680 --> 00:08:53,219
connection<font color="#E5E5E5"> ID and it can reuse the</font>

229
00:08:51,750 --> 00:08:57,060
source address token<font color="#E5E5E5"> and the server</font>

230
00:08:53,220 --> 00:09:00,000
config file<font color="#E5E5E5"> parameter</font><font color="#CCCCCC"> as long as dayton</font>

231
00:08:57,060 --> 00:09:01,709
<font color="#E5E5E5">they're not expired</font><font color="#CCCCCC"> and what it allows</font>

232
00:09:00,000 --> 00:09:04,530
<font color="#CCCCCC">to do is to basically shave off a whole</font>

233
00:09:01,710 --> 00:09:06,810
<font color="#CCCCCC">RTT from the connection and if you think</font>

234
00:09:04,530 --> 00:09:08,520
about<font color="#E5E5E5"> it what this means is</font><font color="#CCCCCC"> actually the</font>

235
00:09:06,810 --> 00:09:11,520
client can start exchanging data<font color="#CCCCCC"> with</font>

236
00:09:08,520 --> 00:09:14,040
the server with basically zero<font color="#CCCCCC"> or GT</font>

237
00:09:11,520 --> 00:09:16,110
connection<font color="#E5E5E5"> but under the initial key so</font>

238
00:09:14,040 --> 00:09:20,189
the bottom line<font color="#E5E5E5"> here</font><font color="#CCCCCC"> is with use of</font>

239
00:09:16,110 --> 00:09:21,750
<font color="#CCCCCC">cacheable parameters</font><font color="#E5E5E5"> in quick you can</font>

240
00:09:20,190 --> 00:09:23,760
actually<font color="#CCCCCC"> achieve zero RTT connections</font>

241
00:09:21,750 --> 00:09:26,480
under the initial key<font color="#E5E5E5"> however this</font>

242
00:09:23,760 --> 00:09:28,740
introduces some potential complexities

243
00:09:26,480 --> 00:09:31,020
specifically because<font color="#E5E5E5"> the client</font><font color="#CCCCCC"> cannot</font>

244
00:09:28,740 --> 00:09:34,320
initially check SDK authenticity from

245
00:09:31,020 --> 00:09:35,970
<font color="#E5E5E5">the server if it ever gets corrupted for</font>

246
00:09:34,320 --> 00:09:39,180
any reason malicious or non malicious

247
00:09:35,970 --> 00:09:41,160
<font color="#E5E5E5">this can potentially lead leads to</font>

248
00:09:39,180 --> 00:09:43,650
inconsistent<font color="#CCCCCC"> new of the</font><font color="#E5E5E5"> handshake which</font>

249
00:09:41,160 --> 00:09:45,719
can be bad<font color="#CCCCCC"> because it may mean that two</font>

250
00:09:43,650 --> 00:09:47,750
parties have a different view<font color="#CCCCCC"> of</font><font color="#E5E5E5"> the</font>

251
00:09:45,720 --> 00:09:51,030
conversation<font color="#E5E5E5"> and potentially establish</font>

252
00:09:47,750 --> 00:09:52,740
<font color="#E5E5E5">distinct initial keys</font><font color="#CCCCCC"> and another issue</font>

253
00:09:51,030 --> 00:09:54,959
is that compromising<font color="#CCCCCC"> the server before</font>

254
00:09:52,740 --> 00:09:56,910
the server config actually expires can

255
00:09:54,960 --> 00:09:58,710
reveal data encrypted<font color="#CCCCCC"> under the initial</font>

256
00:09:56,910 --> 00:10:01,290
key that was derived with the server

257
00:09:58,710 --> 00:10:03,350
config which<font color="#E5E5E5"> basically breaks the</font><font color="#CCCCCC"> fort's</font>

258
00:10:01,290 --> 00:10:09,390
secrecy

259
00:10:03,350 --> 00:10:10,920
so generally provable security analysis

260
00:10:09,390 --> 00:10:13,230
requires a<font color="#E5E5E5"> very rigorous approach</font><font color="#CCCCCC"> with a</font>

261
00:10:10,920 --> 00:10:15,839
security model and a proof but<font color="#E5E5E5"> so it's</font>

262
00:10:13,230 --> 00:10:17,550
not to bore you<font color="#E5E5E5"> I would actually just</font>

263
00:10:15,840 --> 00:10:20,130
<font color="#E5E5E5">would like to go through</font><font color="#CCCCCC"> some of the</font>

264
00:10:17,550 --> 00:10:21,540
<font color="#E5E5E5">challenges</font><font color="#CCCCCC"> that we faced in a security</font>

265
00:10:20,130 --> 00:10:23,340
analysis<font color="#CCCCCC"> and just</font><font color="#E5E5E5"> to give you</font><font color="#CCCCCC"> a very</font>

266
00:10:21,540 --> 00:10:26,750
<font color="#CCCCCC">high-level</font><font color="#E5E5E5"> overview so first of all</font>

267
00:10:23,340 --> 00:10:29,370
there<font color="#E5E5E5"> was a lot of previous work in TLS</font>

268
00:10:26,750 --> 00:10:30,780
in the crypt of community<font color="#CCCCCC"> but</font>

269
00:10:29,370 --> 00:10:32,460
<font color="#CCCCCC">unfortunately this is not</font><font color="#E5E5E5"> very suitable</font>

270
00:10:30,780 --> 00:10:34,709
<font color="#E5E5E5">it's very relevant but it's not suitable</font>

271
00:10:32,460 --> 00:10:38,640
and this is again<font color="#E5E5E5"> because data and quick</font>

272
00:10:34,710 --> 00:10:40,410
can be exchanged in the initial initial

273
00:10:38,640 --> 00:10:42,060
<font color="#E5E5E5">data phase where the initial key is used</font>

274
00:10:40,410 --> 00:10:46,199
<font color="#E5E5E5">before the session key is</font><font color="#CCCCCC"> actually</font>

275
00:10:42,060 --> 00:10:48,449
established in quick parties can

276
00:10:46,200 --> 00:10:50,690
potentially sometimes set distinct

277
00:10:48,450 --> 00:10:52,830
initial keys and what this means<font color="#E5E5E5"> is the</font>

278
00:10:50,690 --> 00:10:54,730
traditional notion of having<font color="#E5E5E5"> a matching</font>

279
00:10:52,830 --> 00:10:57,340
conversation is not suitable here

280
00:10:54,730 --> 00:11:01,720
because parties can<font color="#E5E5E5"> potentially set</font>

281
00:10:57,340 --> 00:11:03,730
distinct keys<font color="#CCCCCC"> in the</font><font color="#E5E5E5"> initial key</font>

282
00:11:01,720 --> 00:11:05,560
establishment stage and so for that<font color="#CCCCCC"> we</font>

283
00:11:03,730 --> 00:11:07,660
<font color="#CCCCCC">need a new</font><font color="#E5E5E5"> notion of what it means to</font>

284
00:11:05,560 --> 00:11:10,719
<font color="#E5E5E5">set a key with the party to capture data</font>

285
00:11:07,660 --> 00:11:14,500
<font color="#E5E5E5">privacy when data is encrypted on the</font>

286
00:11:10,720 --> 00:11:16,660
different keys the server config is

287
00:11:14,500 --> 00:11:19,300
publicly available<font color="#E5E5E5"> and can be reused</font><font color="#CCCCCC"> as</font>

288
00:11:16,660 --> 00:11:20,770
long<font color="#E5E5E5"> as it is not expired</font><font color="#CCCCCC"> and what</font><font color="#E5E5E5"> this</font>

289
00:11:19,300 --> 00:11:22,930
<font color="#E5E5E5">means that we need a weaker notion for</font>

290
00:11:20,770 --> 00:11:25,420
forward secrecy<font color="#CCCCCC"> specifically tailored</font><font color="#E5E5E5"> to</font>

291
00:11:22,930 --> 00:11:27,130
initial keys<font color="#E5E5E5"> however the traditional</font>

292
00:11:25,420 --> 00:11:29,800
<font color="#E5E5E5">notion should still</font><font color="#CCCCCC"> apply to Ford</font>

293
00:11:27,130 --> 00:11:31,870
<font color="#E5E5E5">secrecy traditional notion of for</font>

294
00:11:29,800 --> 00:11:33,880
secrecy should still apply<font color="#CCCCCC"> for</font><font color="#E5E5E5"> final</font>

295
00:11:31,870 --> 00:11:35,800
session keys<font color="#CCCCCC"> and finally as I mentioned</font>

296
00:11:33,880 --> 00:11:37,990
<font color="#CCCCCC">before quick does not run on</font><font color="#E5E5E5"> top of TCP</font>

297
00:11:35,800 --> 00:11:39,880
runs on top of UDP<font color="#E5E5E5"> which</font><font color="#CCCCCC"> does not</font>

298
00:11:37,990 --> 00:11:41,800
address<font color="#CCCCCC"> the Anur delivery and spoofing</font>

299
00:11:39,880 --> 00:11:45,460
<font color="#E5E5E5">and so we need to capture attacks</font>

300
00:11:41,800 --> 00:11:46,800
involving<font color="#CCCCCC"> miss order miss ordering and</font>

301
00:11:45,460 --> 00:11:49,540
selectively delaying and dropping

302
00:11:46,800 --> 00:11:52,479
packets<font color="#E5E5E5"> as well as potential</font><font color="#CCCCCC"> connection</font>

303
00:11:49,540 --> 00:11:53,500
spoofing in our<font color="#CCCCCC"> definition so these are</font>

304
00:11:52,480 --> 00:11:55,240
some<font color="#CCCCCC"> of</font><font color="#E5E5E5"> the things</font><font color="#CCCCCC"> that we had to deal</font>

305
00:11:53,500 --> 00:11:56,950
with<font color="#E5E5E5"> and to address these challenges we</font>

306
00:11:55,240 --> 00:11:58,330
had<font color="#CCCCCC"> to come up with a new protocol model</font>

307
00:11:56,950 --> 00:11:59,560
that is suitable<font color="#E5E5E5"> for these kinds of</font>

308
00:11:58,330 --> 00:12:03,670
<font color="#CCCCCC">protocols that</font><font color="#E5E5E5"> we call quick</font>

309
00:11:59,560 --> 00:12:05,170
communications and<font color="#CCCCCC"> - we also develop a</font>

310
00:12:03,670 --> 00:12:07,030
security notion appropriate for these

311
00:12:05,170 --> 00:12:08,740
kinds<font color="#CCCCCC"> of protocols</font><font color="#E5E5E5"> that we call quick</font>

312
00:12:07,030 --> 00:12:12,819
authenticated and<font color="#E5E5E5"> confidential channel</font>

313
00:12:08,740 --> 00:12:14,620
<font color="#CCCCCC">establishment so let</font><font color="#E5E5E5"> me very informally</font>

314
00:12:12,820 --> 00:12:16,750
present you our<font color="#E5E5E5"> main result with</font><font color="#CCCCCC"> respect</font>

315
00:12:14,620 --> 00:12:19,180
to<font color="#E5E5E5"> security of quick so we find that</font>

316
00:12:16,750 --> 00:12:21,130
<font color="#E5E5E5">quick meets our notion of security</font><font color="#CCCCCC"> as</font>

317
00:12:19,180 --> 00:12:23,050
long as<font color="#CCCCCC"> I underlying signature scheme</font>

318
00:12:21,130 --> 00:12:26,290
that it uses<font color="#E5E5E5"> is strongly unforgeable</font>

319
00:12:23,050 --> 00:12:28,240
<font color="#E5E5E5">under the chosen message attack</font><font color="#CCCCCC"> this is</font>

320
00:12:26,290 --> 00:12:30,339
a standard security notion for digital

321
00:12:28,240 --> 00:12:32,920
<font color="#E5E5E5">signatures and to that effect</font><font color="#CCCCCC"> kwikki</font>

322
00:12:30,340 --> 00:12:35,940
supports<font color="#E5E5E5"> two very</font><font color="#CCCCCC"> well-known signature</font>

323
00:12:32,920 --> 00:12:37,569
schemes also<font color="#E5E5E5"> the underlying</font>

324
00:12:35,940 --> 00:12:39,310
authenticated encryption with<font color="#CCCCCC"> the</font>

325
00:12:37,570 --> 00:12:40,980
<font color="#E5E5E5">Associated data scheme this is what</font>

326
00:12:39,310 --> 00:12:44,530
quick uses to actually<font color="#E5E5E5"> encrypt the data</font>

327
00:12:40,980 --> 00:12:46,600
has<font color="#CCCCCC"> to satisfy the following two pretty</font>

328
00:12:44,530 --> 00:12:48,370
<font color="#E5E5E5">standard</font><font color="#CCCCCC"> well-known</font><font color="#E5E5E5"> security notions</font><font color="#CCCCCC"> the</font>

329
00:12:46,600 --> 00:12:50,530
indistinguishability and authentication

330
00:12:48,370 --> 00:12:53,140
<font color="#E5E5E5">security to that effect quick uses</font>

331
00:12:50,530 --> 00:12:55,810
what's called<font color="#E5E5E5"> AES Galois counter mode or</font>

332
00:12:53,140 --> 00:12:58,810
GCM which has been shown<font color="#CCCCCC"> to be</font><font color="#E5E5E5"> probably</font>

333
00:12:55,810 --> 00:13:00,790
secure<font color="#E5E5E5"> in previous work and we also use</font>

334
00:12:58,810 --> 00:13:03,219
a<font color="#E5E5E5"> couple of pretty well-known standard</font>

335
00:13:00,790 --> 00:13:05,319
assumptions in our analysis<font color="#CCCCCC"> that I won't</font>

336
00:13:03,220 --> 00:13:08,290
<font color="#E5E5E5">talk too</font><font color="#CCCCCC"> much about here in the interest</font>

337
00:13:05,320 --> 00:13:08,620
of time so let's now shift gears to<font color="#CCCCCC"> the</font>

338
00:13:08,290 --> 00:13:10,150
<font color="#CCCCCC">sec</font>

339
00:13:08,620 --> 00:13:12,480
a portion of a talk where<font color="#E5E5E5"> I'll tell</font><font color="#CCCCCC"> you</font>

340
00:13:10,150 --> 00:13:16,449
about<font color="#E5E5E5"> our performance attacks against</font>

341
00:13:12,480 --> 00:13:19,480
quick so let<font color="#E5E5E5"> me start by</font><font color="#CCCCCC"> giving a very</font>

342
00:13:16,450 --> 00:13:22,180
general overview<font color="#E5E5E5"> of what</font><font color="#CCCCCC"> types of</font>

343
00:13:19,480 --> 00:13:23,530
attacks we're talking about here<font color="#E5E5E5"> the</font>

344
00:13:22,180 --> 00:13:26,500
first type of<font color="#E5E5E5"> attack is based on</font>

345
00:13:23,530 --> 00:13:28,300
replaying public<font color="#CCCCCC"> cacheable content such</font>

346
00:13:26,500 --> 00:13:31,030
as<font color="#E5E5E5"> for</font><font color="#CCCCCC"> example the server config</font><font color="#E5E5E5"> and the</font>

347
00:13:28,300 --> 00:13:33,040
source address token<font color="#E5E5E5"> SDK</font><font color="#CCCCCC"> and this kind</font>

348
00:13:31,030 --> 00:13:35,050
<font color="#CCCCCC">of attacks results in fooling client and</font>

349
00:13:33,040 --> 00:13:36,790
a server parties in trying to<font color="#CCCCCC"> achieve a</font>

350
00:13:35,050 --> 00:13:40,959
connection and maintain<font color="#E5E5E5"> some kind of</font>

351
00:13:36,790 --> 00:13:42,880
<font color="#CCCCCC">State and thereby waste</font><font color="#E5E5E5"> resources the</font>

352
00:13:40,960 --> 00:13:46,180
second type<font color="#CCCCCC"> of attack is based on</font>

353
00:13:42,880 --> 00:13:50,230
manipulating<font color="#CCCCCC"> an unprotected packet</font><font color="#E5E5E5"> field</font>

354
00:13:46,180 --> 00:13:52,569
<font color="#E5E5E5">such</font><font color="#CCCCCC"> as the connection ID</font><font color="#E5E5E5"> and the SDK</font>

355
00:13:50,230 --> 00:13:54,310
<font color="#E5E5E5">again and this kind of attacks leads</font>

356
00:13:52,570 --> 00:13:56,890
clients and servers to have a distinct

357
00:13:54,310 --> 00:13:58,930
view of the key<font color="#CCCCCC"> establishment phase and</font>

358
00:13:56,890 --> 00:14:01,420
potentially lead<font color="#CCCCCC"> to</font><font color="#E5E5E5"> failure to establish</font>

359
00:13:58,930 --> 00:14:03,339
<font color="#CCCCCC">a session key and</font><font color="#E5E5E5"> therefore a connection</font>

360
00:14:01,420 --> 00:14:05,640
failure and again<font color="#E5E5E5"> a waste of time and</font>

361
00:14:03,340 --> 00:14:08,590
lots of latency

362
00:14:05,640 --> 00:14:10,330
so to summarize<font color="#E5E5E5"> these attacks the</font><font color="#CCCCCC"> Oh</font>

363
00:14:08,590 --> 00:14:11,830
both<font color="#E5E5E5"> of the types of the attacks</font><font color="#CCCCCC"> cost</font>

364
00:14:10,330 --> 00:14:14,290
servers and clients<font color="#CCCCCC"> to waste time and</font>

365
00:14:11,830 --> 00:14:17,830
<font color="#CCCCCC">resources and they of course introduce a</font>

366
00:14:14,290 --> 00:14:19,329
<font color="#E5E5E5">lot of latency</font><font color="#CCCCCC"> the ironically</font><font color="#E5E5E5"> stem from</font>

367
00:14:17,830 --> 00:14:21,370
the<font color="#E5E5E5"> parameters whose purpose was</font>

368
00:14:19,330 --> 00:14:24,940
actually to minimize latency<font color="#CCCCCC"> in quick</font>

369
00:14:21,370 --> 00:14:27,400
<font color="#E5E5E5">such as the server config and SDK and</font>

370
00:14:24,940 --> 00:14:28,720
most importantly these attacks<font color="#E5E5E5"> do not</font>

371
00:14:27,400 --> 00:14:30,730
concern<font color="#E5E5E5"> the authenticity and</font>

372
00:14:28,720 --> 00:14:31,900
confidentiality<font color="#CCCCCC"> again the</font><font color="#E5E5E5"> point of these</font>

373
00:14:30,730 --> 00:14:36,400
attacks is just degrade the performance

374
00:14:31,900 --> 00:14:37,840
of the protocol<font color="#E5E5E5"> this is a table</font><font color="#CCCCCC"> that</font>

375
00:14:36,400 --> 00:14:41,290
summarizes all<font color="#E5E5E5"> of the attacks</font><font color="#CCCCCC"> that we</font>

376
00:14:37,840 --> 00:14:43,150
have implemented<font color="#CCCCCC"> we</font><font color="#E5E5E5"> targeted the quick</font>

377
00:14:41,290 --> 00:14:45,550
<font color="#CCCCCC">chromium ployment a ssin from October</font><font color="#E5E5E5"> of</font>

378
00:14:43,150 --> 00:14:47,860
last year<font color="#CCCCCC"> and we've implemented all our</font>

379
00:14:45,550 --> 00:14:50,560
attacks<font color="#E5E5E5"> in a Python scat</font><font color="#CCCCCC"> with</font><font color="#E5E5E5"> Python</font>

380
00:14:47,860 --> 00:14:52,690
<font color="#E5E5E5">scapulae</font><font color="#CCCCCC"> brain I will not have time to</font>

381
00:14:50,560 --> 00:14:55,300
<font color="#E5E5E5">go</font><font color="#CCCCCC"> into details of</font><font color="#E5E5E5"> any of these</font><font color="#CCCCCC"> attacks</font>

382
00:14:52,690 --> 00:14:57,670
<font color="#CCCCCC">but the main</font><font color="#E5E5E5"> point is that these</font><font color="#CCCCCC"> attacks</font>

383
00:14:55,300 --> 00:15:00,760
can<font color="#CCCCCC"> be used to deny clients of any</font>

384
00:14:57,670 --> 00:15:04,089
choice<font color="#E5E5E5"> right to have access to any</font>

385
00:15:00,760 --> 00:15:06,970
<font color="#E5E5E5">application</font><font color="#CCCCCC"> of</font><font color="#E5E5E5"> any choice</font><font color="#CCCCCC"> or cause</font><font color="#E5E5E5"> them</font>

386
00:15:04,090 --> 00:15:10,810
to waste time and resources<font color="#CCCCCC"> and</font>

387
00:15:06,970 --> 00:15:12,970
<font color="#E5E5E5">potentially also lead a service to waste</font>

388
00:15:10,810 --> 00:15:15,189
<font color="#CCCCCC">resources and you know maybe a denial</font><font color="#E5E5E5"> of</font>

389
00:15:12,970 --> 00:15:17,410
<font color="#E5E5E5">service attack</font><font color="#CCCCCC"> the reason why these</font>

390
00:15:15,190 --> 00:15:20,110
attacks are interesting is unlike just

391
00:15:17,410 --> 00:15:21,699
<font color="#E5E5E5">plainly dropping or delaying packets</font>

392
00:15:20,110 --> 00:15:22,960
<font color="#E5E5E5">they're actually quite subtle they're</font>

393
00:15:21,700 --> 00:15:25,870
sort of part of<font color="#E5E5E5"> the</font>

394
00:15:22,960 --> 00:15:28,420
protocol and they're<font color="#CCCCCC"> very</font><font color="#E5E5E5"> hard</font><font color="#CCCCCC"> to detect</font>

395
00:15:25,870 --> 00:15:30,910
<font color="#E5E5E5">and we believe that</font><font color="#CCCCCC"> this</font><font color="#E5E5E5"> is something</font>

396
00:15:28,420 --> 00:15:33,000
<font color="#E5E5E5">that governments or just organizations</font>

397
00:15:30,910 --> 00:15:37,480
in general<font color="#E5E5E5"> could potentially use for</font>

398
00:15:33,000 --> 00:15:40,330
purposes of censorship<font color="#E5E5E5"> so now I'd like</font>

399
00:15:37,480 --> 00:15:42,970
<font color="#E5E5E5">to</font><font color="#CCCCCC"> conclude the talk with a</font><font color="#E5E5E5"> summary so</font>

400
00:15:40,330 --> 00:15:44,500
<font color="#CCCCCC">we have in this</font><font color="#E5E5E5"> study develop</font><font color="#CCCCCC"> the</font>

401
00:15:42,970 --> 00:15:46,450
security definition for<font color="#CCCCCC"> performance</font>

402
00:15:44,500 --> 00:15:47,890
<font color="#E5E5E5">certain protocols such as quick and we</font>

403
00:15:46,450 --> 00:15:50,380
have shown<font color="#CCCCCC"> that quick meets our</font>

404
00:15:47,890 --> 00:15:52,870
<font color="#E5E5E5">definition with some</font><font color="#CCCCCC"> caveats</font><font color="#E5E5E5"> of course</font>

405
00:15:50,380 --> 00:15:54,610
with respect<font color="#CCCCCC"> to forward secrecy we have</font>

406
00:15:52,870 --> 00:15:56,260
implemented a five different practical

407
00:15:54,610 --> 00:15:58,450
performance<font color="#CCCCCC"> degradation attacks against</font>

408
00:15:56,260 --> 00:15:59,860
quick and we have shown<font color="#CCCCCC"> that they're</font>

409
00:15:58,450 --> 00:16:02,710
<font color="#E5E5E5">very effective at degrading</font><font color="#CCCCCC"> quicks</font>

410
00:15:59,860 --> 00:16:04,060
performance<font color="#CCCCCC"> now the main</font><font color="#E5E5E5"> point of the</font>

411
00:16:02,710 --> 00:16:06,130
<font color="#E5E5E5">study was</font><font color="#CCCCCC"> not</font><font color="#E5E5E5"> necessarily to say that</font>

412
00:16:04,060 --> 00:16:07,479
<font color="#E5E5E5">quick is a good protocol or bad protocol</font>

413
00:16:06,130 --> 00:16:09,460
or whether it<font color="#E5E5E5"> should be deployed or not</font>

414
00:16:07,480 --> 00:16:12,430
it<font color="#CCCCCC"> is already</font><font color="#E5E5E5"> deployed but the point is</font>

415
00:16:09,460 --> 00:16:13,960
just<font color="#E5E5E5"> here to</font><font color="#CCCCCC"> demonstrate</font><font color="#E5E5E5"> the inherent</font>

416
00:16:12,430 --> 00:16:16,630
trade-off between performance<font color="#CCCCCC"> and</font>

417
00:16:13,960 --> 00:16:18,550
security<font color="#CCCCCC"> in some sense</font><font color="#E5E5E5"> what we're trying</font>

418
00:16:16,630 --> 00:16:20,110
to say that<font color="#CCCCCC"> there's no free lunch when</font>

419
00:16:18,550 --> 00:16:22,359
it comes to the trade-off<font color="#E5E5E5"> between</font>

420
00:16:20,110 --> 00:16:24,070
<font color="#E5E5E5">latency and security if you want to</font>

421
00:16:22,360 --> 00:16:26,220
minimize latency potentially you'll have

422
00:16:24,070 --> 00:16:29,770
to give up some security<font color="#E5E5E5"> properties and</font>

423
00:16:26,220 --> 00:16:32,500
finally we<font color="#E5E5E5"> believe that our security</font>

424
00:16:29,770 --> 00:16:34,360
definitions are general enough<font color="#CCCCCC"> and could</font>

425
00:16:32,500 --> 00:16:36,730
be<font color="#CCCCCC"> used</font><font color="#E5E5E5"> to analyze other protocols in</font>

426
00:16:34,360 --> 00:16:40,870
the<font color="#E5E5E5"> future such as for example TLS</font>

427
00:16:36,730 --> 00:16:43,120
version<font color="#E5E5E5"> 1.3 so thank you very much for</font>

428
00:16:40,870 --> 00:16:44,440
<font color="#E5E5E5">your attention</font><font color="#CCCCCC"> please look for the full</font>

429
00:16:43,120 --> 00:16:46,630
version that should be<font color="#CCCCCC"> available on</font>

430
00:16:44,440 --> 00:16:48,790
ePrint as well as off of the<font color="#CCCCCC"> authors</font>

431
00:16:46,630 --> 00:16:50,260
<font color="#E5E5E5">websites</font><font color="#CCCCCC"> for all the details with</font>

432
00:16:48,790 --> 00:16:52,390
respect<font color="#CCCCCC"> to definitions proves the</font>

433
00:16:50,260 --> 00:16:54,069
attacks we have<font color="#CCCCCC"> implemented</font><font color="#E5E5E5"> we also</font>

434
00:16:52,390 --> 00:16:57,640
<font color="#CCCCCC">compared them</font><font color="#E5E5E5"> against various kinds of</font>

435
00:16:54,070 --> 00:16:58,960
attacks against TLS and<font color="#E5E5E5"> also provide</font>

436
00:16:57,640 --> 00:17:01,360
<font color="#E5E5E5">some very</font><font color="#CCCCCC"> high level mitigation</font>

437
00:16:58,960 --> 00:17:03,660
strategies and I'd be<font color="#CCCCCC"> happy now to take</font>

438
00:17:01,360 --> 00:17:03,660
<font color="#E5E5E5">any questions</font>

439
00:17:10,290 --> 00:17:16,420
so my name is<font color="#E5E5E5"> Mike Petula</font><font color="#CCCCCC"> I'm from the</font>

440
00:17:13,839 --> 00:17:18,069
United<font color="#CCCCCC"> States Military Academy I</font><font color="#E5E5E5"> should</font>

441
00:17:16,420 --> 00:17:19,180
disclose before I ask my question<font color="#E5E5E5"> the</font>

442
00:17:18,069 --> 00:17:22,030
<font color="#E5E5E5">research I'm going to talk about here is</font>

443
00:17:19,180 --> 00:17:24,580
<font color="#CCCCCC">I was involved</font><font color="#E5E5E5"> in we presented at CCS</font>

444
00:17:22,030 --> 00:17:26,589
2013 so I just wondered if you had come

445
00:17:24,579 --> 00:17:28,329
across the protocol<font color="#E5E5E5"> minimal which in</font>

446
00:17:26,589 --> 00:17:30,820
fact<font color="#CCCCCC"> does not</font><font color="#E5E5E5"> sacrifice performed</font>

447
00:17:28,329 --> 00:17:34,570
security in<font color="#E5E5E5"> order to achieve the the</font>

448
00:17:30,820 --> 00:17:36,669
minimal latency<font color="#E5E5E5"> of quick</font><font color="#CCCCCC"> I might still</font>

449
00:17:34,570 --> 00:17:39,310
have<font color="#CCCCCC"> not</font><font color="#E5E5E5"> in fact</font><font color="#CCCCCC"> there</font><font color="#E5E5E5"> was a paper from</font>

450
00:17:36,670 --> 00:17:43,150
<font color="#E5E5E5">awhile ago</font><font color="#CCCCCC"> I believe run Kenichi was</font>

451
00:17:39,310 --> 00:17:45,100
part of<font color="#E5E5E5"> it that</font><font color="#CCCCCC"> actually</font><font color="#E5E5E5"> sort of in some</font>

452
00:17:43,150 --> 00:17:48,220
<font color="#CCCCCC">sun hinted that</font><font color="#E5E5E5"> there's gonna be always</font>

453
00:17:45,100 --> 00:17:50,800
<font color="#E5E5E5">this kind</font><font color="#CCCCCC"> of trade-off between latency</font>

454
00:17:48,220 --> 00:17:52,180
in<font color="#CCCCCC"> a set up</font><font color="#E5E5E5"> and for secrecy okay</font><font color="#CCCCCC"> so I</font>

455
00:17:50,800 --> 00:17:53,889
think we<font color="#E5E5E5"> showed with minimal to the</font>

456
00:17:52,180 --> 00:17:56,410
trade-off<font color="#CCCCCC"> is less</font><font color="#E5E5E5"> less</font><font color="#CCCCCC"> and perhaps you</font>

457
00:17:53,890 --> 00:17:57,820
<font color="#E5E5E5">proposed</font><font color="#CCCCCC"> and there's a there's a paper</font>

458
00:17:56,410 --> 00:18:00,520
near I'm sorry could<font color="#E5E5E5"> you speak a</font><font color="#CCCCCC"> little</font>

459
00:17:57,820 --> 00:18:01,870
<font color="#CCCCCC">bit</font><font color="#E5E5E5"> I'm sorry I said I I think you'll</font>

460
00:18:00,520 --> 00:18:03,460
find if you read the minimal paper now

461
00:18:01,870 --> 00:18:04,870
of course we<font color="#CCCCCC"> don't have</font><font color="#E5E5E5"> the</font><font color="#CCCCCC"> backing of</font>

462
00:18:03,460 --> 00:18:06,130
Google so that<font color="#E5E5E5"> the deployment</font><font color="#CCCCCC"> is not</font>

463
00:18:04,870 --> 00:18:08,320
what<font color="#CCCCCC"> quic is and you</font><font color="#E5E5E5"> can you mention</font>

464
00:18:06,130 --> 00:18:10,060
<font color="#CCCCCC">that in</font><font color="#E5E5E5"> your talk before so you know</font>

465
00:18:08,320 --> 00:18:12,310
minimal has a dis<font color="#CCCCCC"> managed as of today</font>

466
00:18:10,060 --> 00:18:14,080
<font color="#CCCCCC">but I</font><font color="#E5E5E5"> think in our work we showed</font><font color="#CCCCCC"> that</font>

467
00:18:12,310 --> 00:18:17,169
the trade-off is<font color="#E5E5E5"> perhaps less than than</font>

468
00:18:14,080 --> 00:18:18,760
you that<font color="#E5E5E5"> you state so I'd encourage</font><font color="#CCCCCC"> you</font>

469
00:18:17,170 --> 00:18:26,350
and others<font color="#E5E5E5"> to perhaps to look at that</font>

470
00:18:18,760 --> 00:18:29,200
<font color="#CCCCCC">minimal paper</font><font color="#E5E5E5"> okay yes thank you just a</font>

471
00:18:26,350 --> 00:18:32,080
historic note<font color="#CCCCCC"> I might be wrong</font><font color="#E5E5E5"> on the</font>

472
00:18:29,200 --> 00:18:34,720
details here but<font color="#CCCCCC"> I believe that</font><font color="#E5E5E5"> the</font>

473
00:18:32,080 --> 00:18:36,340
method that quick uses was developed by

474
00:18:34,720 --> 00:18:40,630
<font color="#E5E5E5">wit dippy in 1980</font>

475
00:18:36,340 --> 00:18:43,270
<font color="#E5E5E5">oh that's I think before I was born</font><font color="#CCCCCC"> but</font>

476
00:18:40,630 --> 00:18:44,890
great<font color="#E5E5E5"> I'll check out that</font><font color="#CCCCCC"> work I guess I</font>

477
00:18:43,270 --> 00:18:46,930
guess<font color="#E5E5E5"> the point is is you know I'm not</font>

478
00:18:44,890 --> 00:18:48,040
<font color="#E5E5E5">trying to sell quick as a protocol</font><font color="#CCCCCC"> the</font>

479
00:18:46,930 --> 00:18:50,890
point is that was actually implemented

480
00:18:48,040 --> 00:18:52,240
<font color="#E5E5E5">and the the important part of this work</font>

481
00:18:50,890 --> 00:18:55,440
was to<font color="#E5E5E5"> actually study something that</font><font color="#CCCCCC"> was</font>

482
00:18:52,240 --> 00:18:55,440
implemented<font color="#E5E5E5"> right</font>

