1
00:00:00,030 --> 00:00:05,970
hello everyone today<font color="#CCCCCC"> I'm presenting</font>

2
00:00:02,040 --> 00:00:08,340
<font color="#CCCCCC">Talos</font><font color="#E5E5E5"> neutralizing vulnerabilities with</font>

3
00:00:05,970 --> 00:00:12,960
security workarounds for<font color="#CCCCCC"> every the</font>

4
00:00:08,340 --> 00:00:15,770
response so as we know<font color="#E5E5E5"> patching is the</font>

5
00:00:12,960 --> 00:00:19,710
usual way to fix the one<font color="#CCCCCC"> ability</font>

6
00:00:15,770 --> 00:00:21,720
come on the<font color="#E5E5E5"> bottom</font><font color="#CCCCCC"> beating</font><font color="#E5E5E5"> is discovered</font>

7
00:00:19,710 --> 00:00:25,050
the vendor with a need to release a

8
00:00:21,720 --> 00:00:28,279
patch and then the users would need to

9
00:00:25,050 --> 00:00:31,969
<font color="#E5E5E5">apply the patch to fix the vulnerability</font>

10
00:00:28,279 --> 00:00:34,579
however they over<font color="#E5E5E5"> he exists a delay</font>

11
00:00:31,969 --> 00:00:37,230
between<font color="#E5E5E5"> the discovery</font><font color="#CCCCCC"> over the</font>

12
00:00:34,579 --> 00:00:41,629
vulnerability<font color="#CCCCCC"> and the</font><font color="#E5E5E5"> release of</font><font color="#CCCCCC"> the</font>

13
00:00:37,230 --> 00:00:44,669
<font color="#E5E5E5">patch which we call pre patch window and</font>

14
00:00:41,629 --> 00:00:50,280
attackers can exploit<font color="#E5E5E5"> the vulnerability</font>

15
00:00:44,670 --> 00:00:53,930
during this window<font color="#E5E5E5"> to understand more of</font>

16
00:00:50,280 --> 00:00:56,820
<font color="#CCCCCC">this pre patch window we started 131</font>

17
00:00:53,930 --> 00:01:01,590
within the vulnerabilities<font color="#E5E5E5"> and found</font>

18
00:00:56,820 --> 00:01:05,640
that<font color="#E5E5E5"> delay is significant which is 52</font>

19
00:01:01,590 --> 00:01:09,409
<font color="#E5E5E5">days on</font><font color="#CCCCCC"> average</font><font color="#E5E5E5"> and one</font><font color="#CCCCCC"> third of them</font>

20
00:01:05,640 --> 00:01:12,600
<font color="#E5E5E5">the patch 30 days have their</font><font color="#CCCCCC"> T's</font><font color="#E5E5E5"> curry</font>

21
00:01:09,409 --> 00:01:18,540
<font color="#E5E5E5">arisen the story published the Eco see</font>

22
00:01:12,600 --> 00:01:20,570
in 2012<font color="#E5E5E5"> indicates similar result to</font>

23
00:01:18,540 --> 00:01:24,390
understand the cause of prefetch window

24
00:01:20,570 --> 00:01:27,899
we<font color="#CCCCCC"> studied the bug report to understand</font>

25
00:01:24,390 --> 00:01:30,780
<font color="#CCCCCC">at</font><font color="#E5E5E5"> this time</font><font color="#CCCCCC"> spandy</font><font color="#E5E5E5"> each a staff over</font>

26
00:01:27,900 --> 00:01:34,320
releasing the patch which consists of

27
00:01:30,780 --> 00:01:37,740
all vulnerability try H<font color="#CCCCCC"> count rally in</font>

28
00:01:34,320 --> 00:01:40,229
<font color="#E5E5E5">the patch and the regression testing to</font>

29
00:01:37,740 --> 00:01:45,479
ensure the patch<font color="#E5E5E5"> doesn't break any</font>

30
00:01:40,229 --> 00:01:48,950
<font color="#E5E5E5">functionality so we found the bug</font>

31
00:01:45,479 --> 00:01:52,590
reports for 21 of the<font color="#E5E5E5"> 131</font>

32
00:01:48,950 --> 00:01:55,049
vulnerabilities and they show that<font color="#E5E5E5"> 80 90</font>

33
00:01:52,590 --> 00:01:58,380
percent of<font color="#E5E5E5"> the time would spend in</font>

34
00:01:55,049 --> 00:02:01,799
constructing the patch<font color="#CCCCCC"> furrows took a</font>

35
00:01:58,380 --> 00:02:05,369
more<font color="#E5E5E5"> than one</font><font color="#CCCCCC"> day to patch and</font><font color="#E5E5E5"> none of</font>

36
00:02:01,799 --> 00:02:09,450
<font color="#E5E5E5">them took a between two to six attempts</font>

37
00:02:05,369 --> 00:02:13,319
to patch correctly<font color="#CCCCCC"> which is</font><font color="#E5E5E5"> illustrated</font>

38
00:02:09,449 --> 00:02:16,319
from determined from one paw report

39
00:02:13,319 --> 00:02:19,619
so as we can see<font color="#E5E5E5"> the comments from the</font>

40
00:02:16,319 --> 00:02:22,108
developer include<font color="#CCCCCC"> Lisa updates the</font>

41
00:02:19,620 --> 00:02:24,510
previous patch<font color="#E5E5E5"> please patch building on</font>

42
00:02:22,109 --> 00:02:27,659
the previous<font color="#CCCCCC"> one</font><font color="#E5E5E5"> and the one of the</font><font color="#CCCCCC"> very</font>

43
00:02:24,510 --> 00:02:31,560
last the comments from<font color="#E5E5E5"> the tester his</font>

44
00:02:27,659 --> 00:02:34,250
<font color="#CCCCCC">team I'm afraid I found the bug</font><font color="#E5E5E5"> so we</font>

45
00:02:31,560 --> 00:02:37,170
come charity<font color="#E5E5E5"> that the complexity of</font>

46
00:02:34,250 --> 00:02:44,250
constructing<font color="#CCCCCC"> the character patch is the</font>

47
00:02:37,170 --> 00:02:47,220
major cause of prepaid window to address

48
00:02:44,250 --> 00:02:49,530
the pre patch window<font color="#E5E5E5"> users often resort</font>

49
00:02:47,220 --> 00:02:51,450
to<font color="#E5E5E5"> calculation workarounds which</font><font color="#CCCCCC"> he</font>

50
00:02:49,530 --> 00:02:55,980
leverage existing configuration settings

51
00:02:51,450 --> 00:02:59,069
to neutralize<font color="#CCCCCC"> valen abilities</font><font color="#E5E5E5"> so as we</font>

52
00:02:55,980 --> 00:03:01,819
show one<font color="#CCCCCC"> example on the figure at the</font>

53
00:02:59,069 --> 00:03:05,689
<font color="#CCCCCC">bottom we have one apache HTTP server</font>

54
00:03:01,819 --> 00:03:10,379
which has<font color="#E5E5E5"> one vulnerable status module</font>

55
00:03:05,689 --> 00:03:12,989
<font color="#E5E5E5">so what</font><font color="#CCCCCC"> malicious request is sent</font><font color="#E5E5E5"> to the</font>

56
00:03:10,379 --> 00:03:16,638
<font color="#CCCCCC">apache HTTP server and the kind of</font>

57
00:03:12,989 --> 00:03:20,030
process by<font color="#E5E5E5"> the vulnerable status module</font>

58
00:03:16,639 --> 00:03:22,590
<font color="#E5E5E5">sensitive data will be leaked</font>

59
00:03:20,030 --> 00:03:25,500
fortunately the users can change

60
00:03:22,590 --> 00:03:27,690
comforting settings to disable the

61
00:03:25,500 --> 00:03:30,750
vulnerable status<font color="#CCCCCC"> model</font>

62
00:03:27,690 --> 00:03:32,250
so the malicious request<font color="#CCCCCC"> r/a</font><font color="#E5E5E5"> another</font>

63
00:03:30,750 --> 00:03:36,799
<font color="#E5E5E5">kind of processed by the volume of</font>

64
00:03:32,250 --> 00:03:39,840
module and the<font color="#E5E5E5"> symbolic</font><font color="#CCCCCC"> add a rejected</font>

65
00:03:36,799 --> 00:03:44,099
however configuration workarounds have a

66
00:03:39,840 --> 00:03:47,790
poor<font color="#CCCCCC"> courage we starting 182 1</font><font color="#E5E5E5"> and</font>

67
00:03:44,099 --> 00:03:51,810
abilities and found that only<font color="#E5E5E5"> 25% of</font>

68
00:03:47,790 --> 00:03:54,629
them<font color="#E5E5E5"> have configuration</font><font color="#CCCCCC"> look</font><font color="#E5E5E5"> runs so the</font>

69
00:03:51,810 --> 00:03:59,970
<font color="#CCCCCC">vast majority of</font><font color="#E5E5E5"> our own abilities to</font>

70
00:03:54,629 --> 00:04:02,698
<font color="#CCCCCC">not</font><font color="#E5E5E5"> have congressional</font><font color="#CCCCCC"> runs to address</font>

71
00:03:59,970 --> 00:04:05,489
the drawbacks of patching and<font color="#E5E5E5"> the</font>

72
00:04:02,699 --> 00:04:08,299
configuration<font color="#E5E5E5"> workarounds we propose</font>

73
00:04:05,489 --> 00:04:12,389
security<font color="#E5E5E5"> workarounds for</font><font color="#CCCCCC"> Rapid Response</font>

74
00:04:08,299 --> 00:04:15,900
<font color="#CCCCCC">OS</font><font color="#E5E5E5"> table are the objectives of</font>

75
00:04:12,389 --> 00:04:18,359
<font color="#E5E5E5">Esterbrook are included security we like</font>

76
00:04:15,900 --> 00:04:20,750
to neutralize vulnerabilities rapidly

77
00:04:18,358 --> 00:04:24,870
without<font color="#E5E5E5"> introducing new bugs</font>

78
00:04:20,750 --> 00:04:26,430
vulnerabilities coverage<font color="#E5E5E5"> will cover many</font>

79
00:04:24,870 --> 00:04:28,400
<font color="#E5E5E5">more vulnerabilities</font>

80
00:04:26,430 --> 00:04:31,830
the<font color="#CCCCCC"> an configuration workarounds</font>

81
00:04:28,400 --> 00:04:34,440
<font color="#CCCCCC">low-cost with we like to be</font><font color="#E5E5E5"> able</font><font color="#CCCCCC"> to</font>

82
00:04:31,830 --> 00:04:37,169
<font color="#E5E5E5">apply</font><font color="#CCCCCC"> as some hers to existing</font>

83
00:04:34,440 --> 00:04:42,479
applications with minimum engineering

84
00:04:37,169 --> 00:04:45,630
efforts and<font color="#E5E5E5"> test that we are neutralized</font>

85
00:04:42,479 --> 00:04:49,219
<font color="#CCCCCC">a</font><font color="#E5E5E5"> vulnerability by disabling the</font><font color="#CCCCCC"> SQ</font>

86
00:04:45,630 --> 00:04:49,219
sheen of one in<font color="#CCCCCC"> the</font><font color="#E5E5E5"> book code</font>

87
00:04:49,380 --> 00:04:55,530
as we show on the figure at the right we

88
00:04:52,350 --> 00:04:59,190
see one<font color="#CCCCCC"> less</font><font color="#E5E5E5"> table car which is</font><font color="#CCCCCC"> a simple</font>

89
00:04:55,530 --> 00:05:02,010
<font color="#E5E5E5">return statement is instrumented into</font>

90
00:04:59,190 --> 00:05:05,330
the vulnerable<font color="#CCCCCC"> foo function so that the</font>

91
00:05:02,010 --> 00:05:09,870
<font color="#E5E5E5">vulnerable code</font><font color="#CCCCCC"> will never be executed</font>

92
00:05:05,330 --> 00:05:12,448
<font color="#E5E5E5">it is important to note that the LWR has</font>

93
00:05:09,870 --> 00:05:15,720
to return an error code that can<font color="#CCCCCC"> be</font>

94
00:05:12,449 --> 00:05:17,599
<font color="#E5E5E5">recognized</font><font color="#CCCCCC"> by the function scholar which</font>

95
00:05:15,720 --> 00:05:21,090
I'll explain<font color="#E5E5E5"> later</font>

96
00:05:17,599 --> 00:05:26,130
<font color="#E5E5E5">so the mechanism</font><font color="#CCCCCC"> of establish our is</font>

97
00:05:21,090 --> 00:05:28,859
simple but effective we propose to

98
00:05:26,130 --> 00:05:32,010
<font color="#CCCCCC">deployment</font><font color="#E5E5E5"> modes of a stub</font><font color="#CCCCCC"> yrs to</font>

99
00:05:28,860 --> 00:05:35,360
<font color="#CCCCCC">vendors and</font><font color="#E5E5E5"> the developers so the first</font>

100
00:05:32,010 --> 00:05:38,130
mode is<font color="#E5E5E5"> in place as Thomas in his mode</font>

101
00:05:35,360 --> 00:05:40,110
<font color="#E5E5E5">hester breakers are pre-installed into</font>

102
00:05:38,130 --> 00:05:43,919
an application<font color="#E5E5E5"> of the shell</font><font color="#CCCCCC"> on the</font>

103
00:05:40,110 --> 00:05:46,740
<font color="#CCCCCC">figure</font><font color="#E5E5E5"> on</font><font color="#CCCCCC"> top each green box represent</font>

104
00:05:43,919 --> 00:05:49,830
part of<font color="#E5E5E5"> the toad that's protected by</font><font color="#CCCCCC"> one</font>

105
00:05:46,740 --> 00:05:52,699
as they are a lot they are deactivated

106
00:05:49,830 --> 00:05:56,280
by default<font color="#E5E5E5"> so they do not</font><font color="#CCCCCC"> affect the</font>

107
00:05:52,699 --> 00:05:59,159
execution of<font color="#E5E5E5"> the application and</font><font color="#CCCCCC"> the one</font>

108
00:05:56,280 --> 00:06:02,698
one vulnerability<font color="#E5E5E5"> is discovered in the</font>

109
00:05:59,159 --> 00:06:06,300
application users can simply activate

110
00:06:02,699 --> 00:06:08,300
the corresponding<font color="#CCCCCC"> SWR to</font><font color="#E5E5E5"> neutralize the</font>

111
00:06:06,300 --> 00:06:12,960
vulnerability on the fly

112
00:06:08,300 --> 00:06:15,060
however in place<font color="#E5E5E5"> of yours can incur</font><font color="#CCCCCC"> a</font>

113
00:06:12,960 --> 00:06:19,109
runtime overhead<font color="#CCCCCC"> because they are</font>

114
00:06:15,060 --> 00:06:22,110
pre-installed<font color="#E5E5E5"> into</font><font color="#CCCCCC"> an application the</font>

115
00:06:19,110 --> 00:06:26,310
second deployment mode<font color="#E5E5E5"> is patch based as</font>

116
00:06:22,110 --> 00:06:29,520
<font color="#E5E5E5">the doors which are only issued</font><font color="#CCCCCC"> aft one</font>

117
00:06:26,310 --> 00:06:32,570
<font color="#E5E5E5">and abilities that is covered so</font><font color="#CCCCCC"> as we</font>

118
00:06:29,520 --> 00:06:34,859
can see from the figure<font color="#CCCCCC"> alley</font><font color="#E5E5E5"> bottom</font>

119
00:06:32,570 --> 00:06:38,340
<font color="#E5E5E5">Lewallen ability</font><font color="#CCCCCC"> gives discovery in the</font>

120
00:06:34,860 --> 00:06:39,160
application the users need to<font color="#E5E5E5"> install an</font>

121
00:06:38,340 --> 00:06:41,729
us

122
00:06:39,160 --> 00:06:45,520
<font color="#CCCCCC">or for that a particular vulnerability</font>

123
00:06:41,730 --> 00:06:48,790
<font color="#E5E5E5">to neutralize the vulnerability however</font>

124
00:06:45,520 --> 00:06:55,090
the advantage<font color="#E5E5E5"> of patch based stars is</font>

125
00:06:48,790 --> 00:06:58,570
that<font color="#E5E5E5"> taking her no</font><font color="#CCCCCC"> random overhead</font><font color="#E5E5E5"> to to</font>

126
00:06:55,090 --> 00:07:00,789
show how establish<font color="#E5E5E5"> our can reduce the</font>

127
00:06:58,570 --> 00:07:03,640
prepaid window we<font color="#CCCCCC"> compare different</font>

128
00:07:00,790 --> 00:07:08,170
<font color="#E5E5E5">approaches</font><font color="#CCCCCC"> to addressing a one on</font>

129
00:07:03,640 --> 00:07:10,870
ability so for<font color="#CCCCCC"> for patch the developers</font>

130
00:07:08,170 --> 00:07:14,020
need to<font color="#E5E5E5"> identify the location</font><font color="#CCCCCC"> of the one</font>

131
00:07:10,870 --> 00:07:17,830
ability<font color="#E5E5E5"> which can</font><font color="#CCCCCC"> often be found from</font>

132
00:07:14,020 --> 00:07:21,609
<font color="#CCCCCC">the</font><font color="#E5E5E5"> park reports submitted from</font><font color="#CCCCCC"> end</font>

133
00:07:17,830 --> 00:07:24,340
<font color="#CCCCCC">users</font><font color="#E5E5E5"> then the developers need</font><font color="#CCCCCC"> to figure</font>

134
00:07:21,610 --> 00:07:28,600
<font color="#E5E5E5">out the cost of the vulnerability and</font><font color="#CCCCCC"> a</font>

135
00:07:24,340 --> 00:07:31,239
construct a patch<font color="#E5E5E5"> then the testers need</font>

136
00:07:28,600 --> 00:07:34,500
to run<font color="#E5E5E5"> requesting testing to ensure the</font>

137
00:07:31,240 --> 00:07:37,990
patch does not break any functionality

138
00:07:34,500 --> 00:07:40,180
and finally the users can<font color="#E5E5E5"> download and</font>

139
00:07:37,990 --> 00:07:44,850
<font color="#E5E5E5">install the patch to fix the</font>

140
00:07:40,180 --> 00:07:47,530
vulnerability for<font color="#E5E5E5"> imple a system are</font>

141
00:07:44,850 --> 00:07:48,910
similarly the developers need<font color="#E5E5E5"> to</font>

142
00:07:47,530 --> 00:07:51,969
identify the location<font color="#CCCCCC"> of the</font>

143
00:07:48,910 --> 00:07:54,430
vulnerability<font color="#E5E5E5"> however with the help</font><font color="#CCCCCC"> of</font>

144
00:07:51,970 --> 00:07:59,140
an automated tool<font color="#E5E5E5"> they</font><font color="#CCCCCC"> can easily</font>

145
00:07:54,430 --> 00:08:01,870
identify<font color="#CCCCCC"> which</font><font color="#E5E5E5"> SWR can be leveraged to</font>

146
00:07:59,140 --> 00:08:04,650
neutralize the vulnerability<font color="#E5E5E5"> and</font><font color="#CCCCCC"> with</font>

147
00:08:01,870 --> 00:08:08,590
this<font color="#E5E5E5"> information</font><font color="#CCCCCC"> the users</font><font color="#E5E5E5"> can simply</font>

148
00:08:04,650 --> 00:08:12,280
<font color="#E5E5E5">activate the SWR on the fly to</font>

149
00:08:08,590 --> 00:08:15,400
neutralize the vulnerability for<font color="#E5E5E5"> perch</font>

150
00:08:12,280 --> 00:08:17,679
based on our again developers need to

151
00:08:15,400 --> 00:08:20,859
<font color="#E5E5E5">identify the location</font><font color="#CCCCCC"> of the</font>

152
00:08:17,680 --> 00:08:23,800
vulnerability<font color="#E5E5E5"> and also with the help of</font>

153
00:08:20,860 --> 00:08:26,830
automated<font color="#CCCCCC"> tool developers can easily</font>

154
00:08:23,800 --> 00:08:30,220
generate<font color="#CCCCCC"> a</font><font color="#E5E5E5"> star for this particular</font>

155
00:08:26,830 --> 00:08:33,449
vulnerability<font color="#E5E5E5"> and the users can</font><font color="#CCCCCC"> then</font>

156
00:08:30,220 --> 00:08:36,849
download and install<font color="#E5E5E5"> it as a bar to</font>

157
00:08:33,450 --> 00:08:41,110
<font color="#CCCCCC">neutralize</font><font color="#E5E5E5"> the vulnerability also we can</font>

158
00:08:36,849 --> 00:08:44,010
<font color="#E5E5E5">see those nodes of establish ours would</font>

159
00:08:41,110 --> 00:08:46,930
actually<font color="#CCCCCC"> eliminate these three</font>

160
00:08:44,010 --> 00:08:50,470
time-consuming steps involved in

161
00:08:46,930 --> 00:08:53,969
<font color="#E5E5E5">releasing the full patch such they would</font>

162
00:08:50,470 --> 00:08:53,970
<font color="#CCCCCC">reduce</font><font color="#E5E5E5"> the prefetch window</font>

163
00:08:55,460 --> 00:09:01,170
during our<font color="#CCCCCC"> design of</font><font color="#E5E5E5"> Assam Bihar</font><font color="#CCCCCC"> we face</font>

164
00:08:59,130 --> 00:09:03,600
three major<font color="#CCCCCC"> challenges the first</font>

165
00:09:01,170 --> 00:09:06,449
<font color="#CCCCCC">challenge is</font><font color="#E5E5E5"> how to disable</font><font color="#CCCCCC"> toe</font>

166
00:09:03,600 --> 00:09:09,990
<font color="#CCCCCC">discussions safely with a light an</font>

167
00:09:06,450 --> 00:09:14,160
<font color="#E5E5E5">application to continually run after and</font>

168
00:09:09,990 --> 00:09:16,610
<font color="#E5E5E5">as a star has been activated and we also</font>

169
00:09:14,160 --> 00:09:19,530
want a<font color="#CCCCCC"> study hard to be unobtrusive</font>

170
00:09:16,610 --> 00:09:23,940
<font color="#CCCCCC">which means they should</font><font color="#E5E5E5"> another</font><font color="#CCCCCC"> cost</font>

171
00:09:19,530 --> 00:09:26,430
loss of major functionality the second

172
00:09:23,940 --> 00:09:33,210
<font color="#E5E5E5">the challenge is how to minimize human</font>

173
00:09:26,430 --> 00:09:35,339
<font color="#E5E5E5">effort in generating reservoirs how into</font>

174
00:09:33,210 --> 00:09:38,730
Jing is the existing<font color="#E5E5E5"> error handling</font>

175
00:09:35,340 --> 00:09:41,840
mechanism in applications can be

176
00:09:38,730 --> 00:09:46,590
<font color="#E5E5E5">leveraged</font><font color="#CCCCCC"> to address the challenges so</font>

177
00:09:41,840 --> 00:09:49,470
<font color="#CCCCCC">as we can see on</font><font color="#E5E5E5"> this figure which are</font>

178
00:09:46,590 --> 00:09:51,990
code from the<font color="#CCCCCC"> lightly HTTP server which</font>

179
00:09:49,470 --> 00:09:56,160
shows the error handling code already

180
00:09:51,990 --> 00:10:01,830
present in the lightly<font color="#CCCCCC"> activist</font><font color="#E5E5E5"> web</font>

181
00:09:56,160 --> 00:10:05,459
server so the advantages of existing

182
00:10:01,830 --> 00:10:08,430
<font color="#E5E5E5">error handling mechanism are that first</font>

183
00:10:05,460 --> 00:10:10,620
they are<font color="#E5E5E5"> readily available</font><font color="#CCCCCC"> almost every</font>

184
00:10:08,430 --> 00:10:14,699
Tizen application has error handling

185
00:10:10,620 --> 00:10:17,910
mechanism<font color="#E5E5E5"> they are also designed for</font>

186
00:10:14,700 --> 00:10:20,460
<font color="#E5E5E5">unexpected situations as</font><font color="#CCCCCC"> they tried</font>

187
00:10:17,910 --> 00:10:24,589
<font color="#E5E5E5">their best to allow an</font><font color="#CCCCCC"> application to</font>

188
00:10:20,460 --> 00:10:27,300
continually run after an<font color="#E5E5E5"> error occurs</font>

189
00:10:24,590 --> 00:10:29,970
last but<font color="#E5E5E5"> not least they can be</font>

190
00:10:27,300 --> 00:10:33,959
<font color="#CCCCCC">identified using static code analysis</font>

191
00:10:29,970 --> 00:10:40,650
which means we require minimum<font color="#E5E5E5"> aid from</font>

192
00:10:33,960 --> 00:10:43,470
developers<font color="#CCCCCC"> as I mentioned</font><font color="#E5E5E5"> before the</font>

193
00:10:40,650 --> 00:10:46,650
error code used by Australia must be

194
00:10:43,470 --> 00:10:50,220
recognized by a<font color="#CCCCCC"> finishing scholar which</font>

195
00:10:46,650 --> 00:10:52,439
is illustrated<font color="#CCCCCC"> in this figure</font><font color="#E5E5E5"> so</font><font color="#CCCCCC"> we can</font>

196
00:10:50,220 --> 00:10:55,470
see<font color="#E5E5E5"> this shows the code from again</font>

197
00:10:52,440 --> 00:10:59,310
<font color="#CCCCCC">lighty web server and the furnishing at</font>

198
00:10:55,470 --> 00:11:02,330
the top<font color="#CCCCCC"> pay 6040 code has</font><font color="#E5E5E5"> won a seminar</font>

199
00:10:59,310 --> 00:11:05,430
which is a simple<font color="#E5E5E5"> return zero statement</font>

200
00:11:02,330 --> 00:11:06,250
<font color="#CCCCCC">instrumentally</font><font color="#E5E5E5"> into it and when this</font>

201
00:11:05,430 --> 00:11:08,530
<font color="#E5E5E5">function</font>

202
00:11:06,250 --> 00:11:13,390
it's<font color="#CCCCCC"> kinda card from his collar at the</font>

203
00:11:08,530 --> 00:11:15,939
<font color="#CCCCCC">bottom</font><font color="#E5E5E5"> HTTP basic check the</font><font color="#CCCCCC"> all-star can</font>

204
00:11:13,390 --> 00:11:19,600
execute it<font color="#CCCCCC"> so this</font><font color="#E5E5E5"> function would</font>

205
00:11:15,940 --> 00:11:22,000
immediately<font color="#CCCCCC"> quit into his corner</font><font color="#E5E5E5"> so that</font>

206
00:11:19,600 --> 00:11:27,310
the<font color="#CCCCCC"> caller can perform</font><font color="#E5E5E5"> it from error</font>

207
00:11:22,000 --> 00:11:30,880
handling<font color="#E5E5E5"> correctly so the return value</font>

208
00:11:27,310 --> 00:11:33,310
<font color="#E5E5E5">used by the ostomy</font><font color="#CCCCCC"> ha must be recognized</font>

209
00:11:30,880 --> 00:11:37,650
by the function<font color="#E5E5E5"> scholar to an issue</font>

210
00:11:33,310 --> 00:11:37,650
<font color="#E5E5E5">error handling</font><font color="#CCCCCC"> can be handled properly</font>

211
00:11:37,890 --> 00:11:44,890
<font color="#E5E5E5">there are several approaches</font><font color="#CCCCCC"> to identify</font>

212
00:11:40,720 --> 00:11:47,380
<font color="#E5E5E5">error</font><font color="#CCCCCC"> code used by an application common</font>

213
00:11:44,890 --> 00:11:49,960
libraries or<font color="#E5E5E5"> API furnishings usually</font>

214
00:11:47,380 --> 00:11:50,590
have documentation<font color="#CCCCCC"> to state the error</font>

215
00:11:49,960 --> 00:11:53,310
code

216
00:11:50,590 --> 00:11:56,970
however most the code in the application

217
00:11:53,310 --> 00:11:59,829
does not<font color="#E5E5E5"> have this kind of documentation</font>

218
00:11:56,970 --> 00:12:03,640
<font color="#E5E5E5">we might ask the developers to annotate</font>

219
00:11:59,830 --> 00:12:07,240
each function for the error code but

220
00:12:03,640 --> 00:12:10,630
that<font color="#CCCCCC"> is tedious and time-consuming</font><font color="#E5E5E5"> so</font>

221
00:12:07,240 --> 00:12:16,360
instead we use heuristics<font color="#CCCCCC"> to identify</font>

222
00:12:10,630 --> 00:12:19,390
error code while static code analysis so

223
00:12:16,360 --> 00:12:22,360
we<font color="#E5E5E5"> first use two major heuristics the</font>

224
00:12:19,390 --> 00:12:25,150
error logging heuristic and<font color="#E5E5E5"> now return</font>

225
00:12:22,360 --> 00:12:27,570
<font color="#CCCCCC">theorist to generate or identify a list</font>

226
00:12:25,150 --> 00:12:31,360
of functions<font color="#CCCCCC"> that a return error code</font>

227
00:12:27,570 --> 00:12:33,640
<font color="#CCCCCC">they will</font><font color="#E5E5E5"> propagate error code</font><font color="#CCCCCC"> to more</font>

228
00:12:31,360 --> 00:12:36,670
<font color="#CCCCCC">functions</font><font color="#E5E5E5"> who have information</font><font color="#CCCCCC"> on the</font>

229
00:12:33,640 --> 00:12:40,330
coaching's<font color="#E5E5E5"> and eventually we have an</font>

230
00:12:36,670 --> 00:12:42,699
<font color="#E5E5E5">Augmented list of functions</font><font color="#CCCCCC"> that return</font>

231
00:12:40,330 --> 00:12:47,890
arrow<font color="#CCCCCC"> field which</font><font color="#E5E5E5"> are the functions that</font>

232
00:12:42,700 --> 00:12:51,190
<font color="#E5E5E5">can</font><font color="#CCCCCC"> be protected by a stars we have</font>

233
00:12:47,890 --> 00:12:53,860
<font color="#E5E5E5">implemented our prototype</font><font color="#CCCCCC"> Talos</font>

234
00:12:51,190 --> 00:12:58,480
to mechanically generate an instrument

235
00:12:53,860 --> 00:12:59,290
<font color="#CCCCCC">as some cars into an application</font><font color="#E5E5E5"> and we</font>

236
00:12:58,480 --> 00:13:04,000
evaluate

237
00:12:59,290 --> 00:13:06,699
security courage<font color="#E5E5E5"> and overhead</font><font color="#CCCCCC"> over stars</font>

238
00:13:04,000 --> 00:13:10,300
<font color="#E5E5E5">using five popular</font><font color="#CCCCCC"> in occurs</font>

239
00:13:06,700 --> 00:13:13,660
applications including web servers web

240
00:13:10,300 --> 00:13:19,359
<font color="#E5E5E5">cache proxy FTP server and database</font>

241
00:13:13,660 --> 00:13:20,150
<font color="#E5E5E5">management</font><font color="#CCCCCC"> assistant for security we all</font>

242
00:13:19,360 --> 00:13:22,510
<font color="#E5E5E5">know</font>

243
00:13:20,150 --> 00:13:25,790
do i establish<font color="#E5E5E5"> ours successively</font>

244
00:13:22,510 --> 00:13:28,730
<font color="#E5E5E5">neutralized one abilities and are</font><font color="#CCCCCC"> there</font>

245
00:13:25,790 --> 00:13:30,800
<font color="#CCCCCC">a hangover true safe</font><font color="#E5E5E5"> which means they</font>

246
00:13:28,730 --> 00:13:33,920
should<font color="#E5E5E5"> not cause loss of major</font>

247
00:13:30,800 --> 00:13:37,069
functionality so we analyze the

248
00:13:33,920 --> 00:13:40,279
effectiveness and<font color="#E5E5E5"> unobtrusive in ease of</font>

249
00:13:37,070 --> 00:13:43,160
<font color="#CCCCCC">SM</font><font color="#E5E5E5"> are</font><font color="#CCCCCC"> 411</font><font color="#E5E5E5"> real world</font>

250
00:13:40,279 --> 00:13:46,730
Warren abilities<font color="#E5E5E5"> and all</font><font color="#CCCCCC"> of the Warren</font>

251
00:13:43,160 --> 00:13:51,079
milites are successively<font color="#E5E5E5"> neutralized by</font>

252
00:13:46,730 --> 00:13:56,450
our has some yours and<font color="#E5E5E5"> Adolf</font><font color="#CCCCCC"> the SWR SR</font>

253
00:13:51,080 --> 00:13:58,400
<font color="#E5E5E5">and</font><font color="#CCCCCC"> obtrusive and we have the details of</font>

254
00:13:56,450 --> 00:14:01,220
the analysis of<font color="#E5E5E5"> each one and ability and</font>

255
00:13:58,400 --> 00:14:06,170
<font color="#CCCCCC">it's corresponding as they</font><font color="#E5E5E5"> are in our</font>

256
00:14:01,220 --> 00:14:08,390
<font color="#E5E5E5">paper for courage we</font><font color="#CCCCCC"> like to</font><font color="#E5E5E5"> know what's</font>

257
00:14:06,170 --> 00:14:11,380
the percentage of<font color="#CCCCCC"> learning abilities</font>

258
00:14:08,390 --> 00:14:14,960
that<font color="#CCCCCC"> can</font><font color="#E5E5E5"> be neutralized we said</font>

259
00:14:11,380 --> 00:14:18,470
obtrusive as demure we have steam a<font color="#E5E5E5"> the</font>

260
00:14:14,960 --> 00:14:23,510
courage Warren abilities<font color="#CCCCCC"> Mr curry Chow</font>

261
00:14:18,470 --> 00:14:26,930
on the code<font color="#E5E5E5"> and we tested 320 SW ours</font>

262
00:14:23,510 --> 00:14:29,720
<font color="#E5E5E5">for</font><font color="#CCCCCC"> there and over to</font><font color="#E5E5E5"> seventies so as we</font>

263
00:14:26,930 --> 00:14:35,390
can see from the<font color="#E5E5E5"> figure at the bottom</font><font color="#CCCCCC"> as</font>

264
00:14:29,720 --> 00:14:39,320
<font color="#E5E5E5">WR can cover 76% of and applications</font>

265
00:14:35,390 --> 00:14:44,060
<font color="#CCCCCC">code on average</font><font color="#E5E5E5"> and among them a noble</font>

266
00:14:39,320 --> 00:14:47,990
truth if customers can cover<font color="#CCCCCC"> 53%</font><font color="#E5E5E5"> of an</font>

267
00:14:44,060 --> 00:14:50,270
application code which is over<font color="#CCCCCC"> two times</font>

268
00:14:47,990 --> 00:14:55,820
of the courage of<font color="#E5E5E5"> configuration work</font>

269
00:14:50,270 --> 00:14:58,459
around because<font color="#CCCCCC"> emulators of yours can</font>

270
00:14:55,820 --> 00:15:00,980
increase<font color="#CCCCCC"> criticize</font><font color="#E5E5E5"> and of course an</font>

271
00:14:58,459 --> 00:15:04,459
application to in current<font color="#CCCCCC"> immoral</font><font color="#E5E5E5"> yet we</font>

272
00:15:00,980 --> 00:15:08,390
also<font color="#E5E5E5"> measured that and our</font><font color="#CCCCCC"> average Talos</font>

273
00:15:04,459 --> 00:15:12,469
at<font color="#E5E5E5"> 2% of code and</font><font color="#CCCCCC"> of course it's an</font>

274
00:15:08,390 --> 00:15:16,870
<font color="#CCCCCC">application to incur 1.3 percent of</font>

275
00:15:12,470 --> 00:15:20,600
<font color="#E5E5E5">random overhead so to conclude</font>

276
00:15:16,870 --> 00:15:23,570
customers can<font color="#E5E5E5"> neutralize</font><font color="#CCCCCC"> 53 percent of</font>

277
00:15:20,600 --> 00:15:26,330
potential<font color="#E5E5E5"> vulnerabilities and over</font>

278
00:15:23,570 --> 00:15:29,200
Jerusalem which is<font color="#E5E5E5"> over 200 of the</font>

279
00:15:26,330 --> 00:15:32,000
coverage of<font color="#E5E5E5"> configuration work routes</font>

280
00:15:29,200 --> 00:15:34,070
and as covering errors can be<font color="#E5E5E5"> used just</font>

281
00:15:32,000 --> 00:15:36,430
<font color="#CCCCCC">like</font><font color="#E5E5E5"> a configuration work rounds</font>

282
00:15:34,070 --> 00:15:40,399
to neutralize one abilities on the<font color="#E5E5E5"> fly</font>

283
00:15:36,430 --> 00:15:44,120
<font color="#E5E5E5">with a small</font><font color="#CCCCCC"> 1.3 percent of</font><font color="#E5E5E5"> random</font>

284
00:15:40,399 --> 00:15:47,440
overhead<font color="#E5E5E5"> last</font><font color="#CCCCCC"> but not least Talos our</font>

285
00:15:44,120 --> 00:15:50,660
prototype<font color="#E5E5E5"> can mechanically generate an</font>

286
00:15:47,440 --> 00:15:53,779
instrument as<font color="#CCCCCC"> denars into existing</font>

287
00:15:50,660 --> 00:16:05,480
applications requiring minimum effort

288
00:15:53,779 --> 00:16:09,079
from developers thank you hi Stella

289
00:16:05,480 --> 00:16:10,550
<font color="#CCCCCC">Sudoku</font><font color="#E5E5E5"> MIT</font><font color="#CCCCCC"> so other than the name what's</font>

290
00:16:09,079 --> 00:16:13,550
different between<font color="#E5E5E5"> this work and error</font>

291
00:16:10,550 --> 00:16:17,740
virtualization published 2005 and 2009

292
00:16:13,550 --> 00:16:22,519
here in<font color="#CCCCCC"> Oakland</font><font color="#E5E5E5"> so you know what's the</font>

293
00:16:17,740 --> 00:16:24,949
difference<font color="#CCCCCC"> be I'm not quite a familiar</font>

294
00:16:22,519 --> 00:16:26,540
<font color="#E5E5E5">with</font><font color="#CCCCCC"> mr. talking</font><font color="#E5E5E5"> you mashing them well</font>

295
00:16:24,949 --> 00:16:28,490
you<font color="#E5E5E5"> you reference them in the paper but</font>

296
00:16:26,540 --> 00:16:30,139
<font color="#CCCCCC">you reference them wrongly</font><font color="#E5E5E5"> do you I mean</font>

297
00:16:28,490 --> 00:16:31,940
<font color="#CCCCCC">they still use</font><font color="#E5E5E5"> return</font>

298
00:16:30,139 --> 00:16:33,920
you know values to ask you to escape

299
00:16:31,940 --> 00:16:39,019
<font color="#E5E5E5">bugs</font><font color="#CCCCCC"> seems like the techniques are</font>

300
00:16:33,920 --> 00:16:44,709
almost identical<font color="#CCCCCC"> so what's the</font><font color="#E5E5E5"> basic uh</font>

301
00:16:39,019 --> 00:16:47,389
I mean<font color="#E5E5E5"> so the idea the idea of using</font>

302
00:16:44,709 --> 00:16:48,859
<font color="#E5E5E5">return values that are handled by the</font>

303
00:16:47,389 --> 00:16:50,389
existing error hand<font color="#E5E5E5"> the code in the</font>

304
00:16:48,860 --> 00:16:53,510
application<font color="#CCCCCC"> yeah it's sort of</font>

305
00:16:50,389 --> 00:16:56,120
identifying<font color="#E5E5E5"> these values</font><font color="#CCCCCC"> uh and you know</font>

306
00:16:53,510 --> 00:17:00,620
recovering<font color="#E5E5E5"> from bugs has been done twice</font>

307
00:16:56,120 --> 00:17:02,870
once in<font color="#E5E5E5"> 2005 and once in 2009 and you</font>

308
00:17:00,620 --> 00:17:03,980
reference<font color="#CCCCCC"> the papers in you know in your</font>

309
00:17:02,870 --> 00:17:05,929
paper where you<font color="#E5E5E5"> reference them</font>

310
00:17:03,980 --> 00:17:08,569
incorrectly<font color="#CCCCCC"> ah</font>

311
00:17:05,929 --> 00:17:10,630
so can you<font color="#E5E5E5"> elaborate on</font><font color="#CCCCCC"> what the</font><font color="#E5E5E5"> details</font>

312
00:17:08,569 --> 00:17:16,970
that<font color="#E5E5E5"> the differences</font><font color="#CCCCCC"> are oh I</font><font color="#E5E5E5"> see</font><font color="#CCCCCC"> okay</font>

313
00:17:10,630 --> 00:17:19,610
so previously you know<font color="#E5E5E5"> to the work that</font>

314
00:17:16,970 --> 00:17:23,510
<font color="#CCCCCC">I try to identify her ability not</font>

315
00:17:19,609 --> 00:17:26,349
<font color="#E5E5E5">application basically they just try to</font>

316
00:17:23,510 --> 00:17:29,629
say you<font color="#CCCCCC"> know either rely on the</font>

317
00:17:26,349 --> 00:17:31,730
documentation<font color="#CCCCCC"> of</font><font color="#E5E5E5"> the application to tell</font>

318
00:17:29,630 --> 00:17:34,820
you know what's the commonly used<font color="#E5E5E5"> error</font>

319
00:17:31,730 --> 00:17:37,940
code and<font color="#CCCCCC"> sometimes</font><font color="#E5E5E5"> they try</font><font color="#CCCCCC"> to use a</font>

320
00:17:34,820 --> 00:17:43,760
certain<font color="#CCCCCC"> thief America say you know</font><font color="#E5E5E5"> minus</font>

321
00:17:37,940 --> 00:17:45,770
one and we in many cases they cook the

322
00:17:43,760 --> 00:17:47,480
quality used by you know certain

323
00:17:45,770 --> 00:17:50,929
<font color="#CCCCCC">finishing of an avocation</font>

324
00:17:47,480 --> 00:17:54,250
but we just<font color="#E5E5E5"> found you know this kind of</font>

325
00:17:50,929 --> 00:17:56,870
techniques might not be you know<font color="#CCCCCC"> quite</font>

326
00:17:54,250 --> 00:17:59,149
reliable<font color="#E5E5E5"> because you know different</font>

327
00:17:56,870 --> 00:18:00,289
application developers they<font color="#E5E5E5"> marry</font><font color="#CCCCCC"> the</font>

328
00:17:59,149 --> 00:18:03,350
you know<font color="#CCCCCC"> choose the different different</font>

329
00:18:00,289 --> 00:18:05,870
<font color="#CCCCCC">Erica</font><font color="#E5E5E5"> and we also found he even in the</font>

330
00:18:03,350 --> 00:18:08,269
same application<font color="#CCCCCC"> different</font><font color="#E5E5E5"> functions</font>

331
00:18:05,870 --> 00:18:10,789
<font color="#CCCCCC">they could</font><font color="#E5E5E5"> you know</font><font color="#CCCCCC"> say use</font><font color="#E5E5E5"> a different</font>

332
00:18:08,269 --> 00:18:14,840
<font color="#E5E5E5">error code to represent the same kind of</font>

333
00:18:10,789 --> 00:18:18,440
<font color="#CCCCCC">arrow</font><font color="#E5E5E5"> so that's that's why we choose to</font>

334
00:18:14,840 --> 00:18:20,120
<font color="#CCCCCC">use heuristics in our work to identify</font>

335
00:18:18,440 --> 00:18:21,799
our code<font color="#E5E5E5"> but I think that's also</font>

336
00:18:20,120 --> 00:18:24,439
<font color="#E5E5E5">incorrect</font><font color="#CCCCCC"> there's been work that</font>

337
00:18:21,799 --> 00:18:26,570
identifies using static analysis exactly

338
00:18:24,440 --> 00:18:28,970
how the error values are propagated

339
00:18:26,570 --> 00:18:32,360
studied<font color="#E5E5E5"> both in applications and the</font>

340
00:18:28,970 --> 00:18:34,279
Linux<font color="#E5E5E5"> file systems and it's a not a</font>

341
00:18:32,360 --> 00:18:35,389
heuristic<font color="#CCCCCC"> baek's</font><font color="#E5E5E5"> static analysis</font>

342
00:18:34,279 --> 00:18:37,519
actually<font color="#E5E5E5"> more advanced</font><font color="#CCCCCC"> than</font><font color="#E5E5E5"> what you</font>

343
00:18:35,389 --> 00:18:41,149
have and that's<font color="#E5E5E5"> also miss referenced in</font>

344
00:18:37,519 --> 00:18:43,039
<font color="#CCCCCC">your work mmm that's</font><font color="#E5E5E5"> yeah that's a</font>

345
00:18:41,149 --> 00:18:51,260
<font color="#E5E5E5">critical asset problem yeah you cannot</font>

346
00:18:43,039 --> 00:18:53,600
take it<font color="#E5E5E5"> out</font><font color="#CCCCCC"> he'll fly so what are the</font>

347
00:18:51,260 --> 00:18:58,970
main<font color="#CCCCCC"> reasons for</font><font color="#E5E5E5"> why not all</font><font color="#CCCCCC"> of</font><font color="#E5E5E5"> our</font>

348
00:18:53,600 --> 00:19:04,100
abilities can<font color="#E5E5E5"> be covered by</font><font color="#CCCCCC"> SWR ours so</font>

349
00:18:58,970 --> 00:19:07,299
what we thing is that<font color="#E5E5E5"> you know basically</font>

350
00:19:04,100 --> 00:19:09,799
we rely on the error handling mechanism

351
00:19:07,299 --> 00:19:13,309
<font color="#CCCCCC">you know</font><font color="#E5E5E5"> presenting the application</font>

352
00:19:09,799 --> 00:19:15,440
right<font color="#E5E5E5"> so sometimes you know due to the</font>

353
00:19:13,309 --> 00:19:18,080
way an application you see some<font color="#CCCCCC"> written</font>

354
00:19:15,440 --> 00:19:22,389
it probably don't have Taryn Manning

355
00:19:18,080 --> 00:19:25,519
error handling code so in the other case

356
00:19:22,389 --> 00:19:27,740
even so we try to you<font color="#CCCCCC"> know say even</font><font color="#E5E5E5"> when</font>

357
00:19:25,519 --> 00:19:30,799
<font color="#CCCCCC">function does not have</font><font color="#E5E5E5"> its own error</font>

358
00:19:27,740 --> 00:19:33,500
handling code we try to looking<font color="#E5E5E5"> for</font>

359
00:19:30,799 --> 00:19:35,510
hurricane<font color="#E5E5E5"> Ana mechanism from the</font><font color="#CCCCCC"> code</font>

360
00:19:33,500 --> 00:19:38,899
change<font color="#E5E5E5"> that'll lead to another function</font>

361
00:19:35,510 --> 00:19:41,809
<font color="#E5E5E5">so basically we can try to cover the</font>

362
00:19:38,899 --> 00:19:43,969
packaging using<font color="#E5E5E5"> these colors</font><font color="#CCCCCC"> but even in</font>

363
00:19:41,809 --> 00:19:45,950
that<font color="#E5E5E5"> case sometimes you know</font><font color="#CCCCCC"> just the</font>

364
00:19:43,970 --> 00:19:49,100
<font color="#E5E5E5">southern packaging is written in the</font>

365
00:19:45,950 --> 00:19:52,039
other way they don't<font color="#CCCCCC"> have many Tyrell</font>

366
00:19:49,100 --> 00:19:54,769
handling code in them<font color="#E5E5E5"> so that's one of</font>

367
00:19:52,039 --> 00:19:58,750
<font color="#CCCCCC">the major reason for</font><font color="#E5E5E5"> some application</font>

368
00:19:54,769 --> 00:19:58,750
the courageous<font color="#E5E5E5"> is not a very high</font>

