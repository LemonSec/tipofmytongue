1
00:00:00,000 --> 00:00:03,060
hello everyone<font color="#E5E5E5"> I'm going to tell you</font>

2
00:00:01,740 --> 00:00:05,430
about this project<font color="#CCCCCC"> on</font><font color="#E5E5E5"> privacy-preserving</font>

3
00:00:03,060 --> 00:00:08,460
smart contracts<font color="#E5E5E5"> this is joint work with</font>

4
00:00:05,430 --> 00:00:10,050
<font color="#E5E5E5">my colleagues Achmed and</font><font color="#CCCCCC"> Zika at</font>

5
00:00:08,460 --> 00:00:13,469
Maryland<font color="#E5E5E5"> and at Cornell and</font><font color="#CCCCCC"> with our</font>

6
00:00:10,050 --> 00:00:15,750
<font color="#CCCCCC">advisors Elaine and Papas it's been</font>

7
00:00:13,469 --> 00:00:17,250
another interesting<font color="#E5E5E5"> year for the the</font>

8
00:00:15,750 --> 00:00:19,230
<font color="#CCCCCC">crypto currency and blockchain world</font>

9
00:00:17,250 --> 00:00:21,090
<font color="#E5E5E5">again actually continuing many of the</font>

10
00:00:19,230 --> 00:00:22,699
trends<font color="#CCCCCC"> that</font><font color="#E5E5E5"> we've</font><font color="#CCCCCC"> seen before so more</font>

11
00:00:21,090 --> 00:00:26,220
investment<font color="#E5E5E5"> in Bitcoin and</font><font color="#CCCCCC"> blockchain</font>

12
00:00:22,699 --> 00:00:28,170
<font color="#E5E5E5">companies another year there's another</font>

13
00:00:26,220 --> 00:00:30,960
potential explanation<font color="#E5E5E5"> for who the</font>

14
00:00:28,170 --> 00:00:33,690
inventor<font color="#CCCCCC"> of</font><font color="#E5E5E5"> Bitcoin is still no</font>

15
00:00:30,960 --> 00:00:36,059
certainty this year<font color="#E5E5E5"> one of the things</font>

16
00:00:33,690 --> 00:00:38,218
<font color="#CCCCCC">that's a that's a been a bit of a</font><font color="#E5E5E5"> change</font>

17
00:00:36,059 --> 00:00:40,050
of<font color="#E5E5E5"> a trend is moving towards an</font>

18
00:00:38,219 --> 00:00:41,610
understanding<font color="#CCCCCC"> of a more generalized</font>

19
00:00:40,050 --> 00:00:44,040
notion<font color="#CCCCCC"> of what these kinds of</font><font color="#E5E5E5"> systems</font>

20
00:00:41,610 --> 00:00:45,780
give us so if you've heard<font color="#CCCCCC"> about Bitcoin</font>

21
00:00:44,040 --> 00:00:47,640
in Oakland's past you would<font color="#E5E5E5"> have heard</font>

22
00:00:45,780 --> 00:00:48,960
<font color="#E5E5E5">it explained as a payment</font><font color="#CCCCCC"> system so it's</font>

23
00:00:47,640 --> 00:00:50,640
like a peer-to-peer network<font color="#CCCCCC"> that</font>

24
00:00:48,960 --> 00:00:52,170
implements a sort<font color="#E5E5E5"> of virtual bank that</font>

25
00:00:50,640 --> 00:00:55,649
keeps track<font color="#CCCCCC"> of account balances for</font>

26
00:00:52,170 --> 00:00:57,930
users<font color="#CCCCCC"> but really this underlying a</font>

27
00:00:55,649 --> 00:00:59,640
peer-to-peer network<font color="#CCCCCC"> can you can</font><font color="#E5E5E5"> think</font>

28
00:00:57,930 --> 00:01:01,320
of<font color="#CCCCCC"> as providing a sort of more general</font>

29
00:00:59,640 --> 00:01:02,910
interface<font color="#E5E5E5"> so instead</font><font color="#CCCCCC"> of</font><font color="#E5E5E5"> simply providing</font>

30
00:01:01,320 --> 00:01:04,439
a virtual<font color="#E5E5E5"> bank but it's actually</font>

31
00:01:02,910 --> 00:01:06,240
providing is a virtual general-purpose

32
00:01:04,438 --> 00:01:09,210
<font color="#E5E5E5">trusted computer that can run arbitrary</font>

33
00:01:06,240 --> 00:01:10,770
user-defined<font color="#CCCCCC"> programs and so these</font>

34
00:01:09,210 --> 00:01:12,658
<font color="#E5E5E5">programs can still interact</font><font color="#CCCCCC"> with money</font>

35
00:01:10,770 --> 00:01:13,710
and allow users<font color="#CCCCCC"> to</font><font color="#E5E5E5"> exchange money with</font>

36
00:01:12,659 --> 00:01:15,540
<font color="#CCCCCC">each other but</font><font color="#E5E5E5"> they can also have</font>

37
00:01:13,710 --> 00:01:18,689
application to<font color="#E5E5E5"> find data and program</font>

38
00:01:15,540 --> 00:01:19,590
behavior<font color="#CCCCCC"> the critical abstraction</font><font color="#E5E5E5"> here</font>

39
00:01:18,689 --> 00:01:21,240
is you should think of them the

40
00:01:19,590 --> 00:01:23,400
blockchain this<font color="#E5E5E5"> year's definition of the</font>

41
00:01:21,240 --> 00:01:26,250
blockchain<font color="#CCCCCC"> as a virtual trusted</font>

42
00:01:23,400 --> 00:01:27,869
<font color="#CCCCCC">third-party a critical detail here is</font>

43
00:01:26,250 --> 00:01:29,369
that<font color="#E5E5E5"> it's trusted for correctness it's</font>

44
00:01:27,869 --> 00:01:31,259
going to run these programs correctly

45
00:01:29,369 --> 00:01:33,270
and for availability<font color="#CCCCCC"> you can rely on</font>

46
00:01:31,259 --> 00:01:36,030
being able<font color="#E5E5E5"> to send data to one of these</font>

47
00:01:33,270 --> 00:01:37,320
programs<font color="#E5E5E5"> and have it be processed but</font>

48
00:01:36,030 --> 00:01:38,610
<font color="#E5E5E5">you can't rely on it inherently for</font>

49
00:01:37,320 --> 00:01:40,229
<font color="#E5E5E5">privacy because this is a peer-to-peer</font>

50
00:01:38,610 --> 00:01:44,009
<font color="#CCCCCC">network and everything that you send</font><font color="#E5E5E5"> to</font>

51
00:01:40,229 --> 00:01:45,390
this is public<font color="#CCCCCC"> the name for a program</font>

52
00:01:44,009 --> 00:01:46,860
running on one of<font color="#E5E5E5"> these</font><font color="#CCCCCC"> systems is</font>

53
00:01:45,390 --> 00:01:48,540
simply<font color="#E5E5E5"> called a smart contract</font><font color="#CCCCCC"> it's not</font>

54
00:01:46,860 --> 00:01:50,399
a legal<font color="#E5E5E5"> contract so you</font><font color="#CCCCCC"> know</font><font color="#E5E5E5"> don't be</font>

55
00:01:48,540 --> 00:01:51,509
<font color="#E5E5E5">confused by that it's just the name</font><font color="#CCCCCC"> for</font>

56
00:01:50,399 --> 00:01:55,110
a program running on one of these

57
00:01:51,509 --> 00:01:56,969
<font color="#E5E5E5">systems</font><font color="#CCCCCC"> so this is a been really</font>

58
00:01:55,110 --> 00:01:59,369
<font color="#E5E5E5">popularized recently by the recent</font>

59
00:01:56,969 --> 00:02:01,199
success of one of bitcoins competitors

60
00:01:59,369 --> 00:02:03,180
called<font color="#CCCCCC"> aetherium which had launched its</font>

61
00:02:01,200 --> 00:02:07,200
version 1.0 a few months ago<font color="#E5E5E5"> it's</font><font color="#CCCCCC"> been</font>

62
00:02:03,180 --> 00:02:08,819
in beta for about a year as of yeah<font color="#E5E5E5"> just</font>

63
00:02:07,200 --> 00:02:11,730
today this has processed almost<font color="#E5E5E5"> 5</font>

64
00:02:08,818 --> 00:02:13,750
million transactions so far there<font color="#CCCCCC"> are</font>

65
00:02:11,730 --> 00:02:15,579
over<font color="#E5E5E5"> 25,000 instances of</font>

66
00:02:13,750 --> 00:02:18,160
these user-defined<font color="#CCCCCC"> programs running on</font>

67
00:02:15,580 --> 00:02:20,080
this public blockchain<font color="#CCCCCC"> and for</font>

68
00:02:18,160 --> 00:02:22,329
comparison<font color="#CCCCCC"> this market cap is 1 billion</font>

69
00:02:20,080 --> 00:02:23,740
dollars<font color="#E5E5E5"> compared to</font><font color="#CCCCCC"> bitcoins six billion</font>

70
00:02:22,330 --> 00:02:25,690
<font color="#E5E5E5">dollars this is now the second</font><font color="#CCCCCC"> largest</font>

71
00:02:23,740 --> 00:02:30,310
cryptocurrency<font color="#E5E5E5"> and it's sort of gaining</font>

72
00:02:25,690 --> 00:02:31,720
on bitcoins heels<font color="#E5E5E5"> one of the nice things</font>

73
00:02:30,310 --> 00:02:35,230
about<font color="#CCCCCC"> this system is that it</font><font color="#E5E5E5"> prevent</font>

74
00:02:31,720 --> 00:02:36,910
presents<font color="#CCCCCC"> this attractive interface</font><font color="#E5E5E5"> to</font>

75
00:02:35,230 --> 00:02:38,230
program developers it says come use<font color="#E5E5E5"> this</font>

76
00:02:36,910 --> 00:02:39,609
programming<font color="#CCCCCC"> language that</font><font color="#E5E5E5"> we provide</font>

77
00:02:38,230 --> 00:02:41,739
you'll be able<font color="#E5E5E5"> to implement all sorts of</font>

78
00:02:39,610 --> 00:02:44,940
general applications not<font color="#E5E5E5"> just involving</font>

79
00:02:41,740 --> 00:02:47,110
money but things like auctions<font color="#E5E5E5"> and</font>

80
00:02:44,940 --> 00:02:48,489
crowdfunding campaigns and even things

81
00:02:47,110 --> 00:02:49,989
like a kind<font color="#E5E5E5"> of corporate governance</font>

82
00:02:48,489 --> 00:02:51,760
<font color="#E5E5E5">structure where you can vote on</font>

83
00:02:49,989 --> 00:02:53,050
proposals<font color="#CCCCCC"> and so if you follow one of</font>

84
00:02:51,760 --> 00:02:54,880
their<font color="#CCCCCC"> tutorials you'll be walked</font><font color="#E5E5E5"> through</font>

85
00:02:53,050 --> 00:02:57,430
how<font color="#CCCCCC"> to</font><font color="#E5E5E5"> use their programming language in</font>

86
00:02:54,880 --> 00:02:58,780
<font color="#CCCCCC">order</font><font color="#E5E5E5"> to implement an auction</font><font color="#CCCCCC"> now</font>

87
00:02:57,430 --> 00:02:59,950
there's a critical<font color="#E5E5E5"> problem here again</font>

88
00:02:58,780 --> 00:03:01,690
returning<font color="#E5E5E5"> to this idea that</font><font color="#CCCCCC"> this</font>

89
00:02:59,950 --> 00:03:03,970
blockchain abstraction doesn't provide

90
00:03:01,690 --> 00:03:05,140
any inherent privacy well a lot of<font color="#E5E5E5"> the</font>

91
00:03:03,970 --> 00:03:07,150
<font color="#CCCCCC">applications that you would care about</font>

92
00:03:05,140 --> 00:03:09,250
implementing<font color="#E5E5E5"> on this do require privacy</font>

93
00:03:07,150 --> 00:03:11,470
<font color="#CCCCCC">so all</font><font color="#E5E5E5"> of the information</font><font color="#CCCCCC"> that you send</font>

94
00:03:09,250 --> 00:03:13,000
to<font color="#CCCCCC"> the</font><font color="#E5E5E5"> etherion blockchain is public so</font>

95
00:03:11,470 --> 00:03:16,420
the code of the programs<font color="#E5E5E5"> that your Enix</font>

96
00:03:13,000 --> 00:03:17,880
published<font color="#CCCCCC"> and back and forth public and</font>

97
00:03:16,420 --> 00:03:21,040
the flow of<font color="#E5E5E5"> money you know critical</font>

98
00:03:17,880 --> 00:03:22,690
<font color="#E5E5E5">monetary values public as well for some</font>

99
00:03:21,040 --> 00:03:23,890
<font color="#E5E5E5">applications this doesn't matter but for</font>

100
00:03:22,690 --> 00:03:25,540
<font color="#CCCCCC">a lot of the interesting applications</font>

101
00:03:23,890 --> 00:03:28,540
<font color="#E5E5E5">especially the ones with a financial</font>

102
00:03:25,540 --> 00:03:31,030
<font color="#CCCCCC">nature this is a big deal so you would</font>

103
00:03:28,540 --> 00:03:32,560
be<font color="#E5E5E5"> revealing which kind of investments</font>

104
00:03:31,030 --> 00:03:34,600
you're making which kind of risks you're

105
00:03:32,560 --> 00:03:37,120
concerned<font color="#CCCCCC"> about this is all potentially</font>

106
00:03:34,600 --> 00:03:39,579
business<font color="#CCCCCC"> critical information</font><font color="#E5E5E5"> even more</font>

107
00:03:37,120 --> 00:03:40,930
significantly<font color="#E5E5E5"> because in this period of</font>

108
00:03:39,580 --> 00:03:43,570
<font color="#E5E5E5">peer network when you try to send a</font>

109
00:03:40,930 --> 00:03:45,430
<font color="#E5E5E5">message to one of these programs people</font>

110
00:03:43,570 --> 00:03:46,630
on the<font color="#E5E5E5"> network can see the message that</font>

111
00:03:45,430 --> 00:03:48,340
<font color="#CCCCCC">you're sending even before it's</font>

112
00:03:46,630 --> 00:03:50,680
committed<font color="#E5E5E5"> so if you try to</font><font color="#CCCCCC"> implement</font>

113
00:03:48,340 --> 00:03:53,980
something<font color="#CCCCCC"> like a double price auction or</font>

114
00:03:50,680 --> 00:03:55,090
some kind<font color="#E5E5E5"> of stock market a application</font>

115
00:03:53,980 --> 00:03:57,010
then an attacker would even be able<font color="#E5E5E5"> to</font>

116
00:03:55,090 --> 00:03:58,750
insert<font color="#E5E5E5"> his own transactions and affect</font>

117
00:03:57,010 --> 00:04:00,790
the<font color="#E5E5E5"> output after seeing what yours would</font>

118
00:03:58,750 --> 00:04:04,000
have been out before<font color="#E5E5E5"> yours get processed</font>

119
00:04:00,790 --> 00:04:05,470
<font color="#E5E5E5">so he confront run orders let me give</font>

120
00:04:04,000 --> 00:04:07,180
the concrete example then<font color="#CCCCCC"> of what would</font>

121
00:04:05,470 --> 00:04:09,160
<font color="#E5E5E5">happen</font><font color="#CCCCCC"> if you try to implement</font><font color="#E5E5E5"> naively</font>

122
00:04:07,180 --> 00:04:11,650
following the sort<font color="#E5E5E5"> of a tutorial</font><font color="#CCCCCC"> guide</font>

123
00:04:09,160 --> 00:04:13,780
of<font color="#E5E5E5"> a knock of a sealed bid auction like</font>

124
00:04:11,650 --> 00:04:14,860
<font color="#E5E5E5">a second price auction in</font><font color="#CCCCCC"> aetherium so</font>

125
00:04:13,780 --> 00:04:16,450
it's very<font color="#E5E5E5"> simple in the programming</font>

126
00:04:14,860 --> 00:04:18,519
<font color="#CCCCCC">language to</font><font color="#E5E5E5"> write the the code</font><font color="#CCCCCC"> for</font><font color="#E5E5E5"> this</font>

127
00:04:16,450 --> 00:04:20,019
auction<font color="#E5E5E5"> it would simply take in bids</font>

128
00:04:18,519 --> 00:04:22,150
from<font color="#E5E5E5"> all of the participants in the</font>

129
00:04:20,019 --> 00:04:24,039
<font color="#CCCCCC">auction and then after all the bids are</font>

130
00:04:22,150 --> 00:04:25,960
after some time limit it would then

131
00:04:24,039 --> 00:04:28,000
process the output<font color="#CCCCCC"> and</font><font color="#E5E5E5"> you know dispense</font>

132
00:04:25,960 --> 00:04:29,859
the right price

133
00:04:28,000 --> 00:04:30,970
so in a first phase users would make

134
00:04:29,860 --> 00:04:33,190
their bids and<font color="#E5E5E5"> in the second phase the</font>

135
00:04:30,970 --> 00:04:34,180
<font color="#E5E5E5">code would run and assign outputs the</font>

136
00:04:33,190 --> 00:04:35,860
problem is that from the<font color="#CCCCCC"> very beginning</font>

137
00:04:34,180 --> 00:04:36,940
<font color="#E5E5E5">as</font><font color="#CCCCCC"> soon</font><font color="#E5E5E5"> as the first user makes a bid</font>

138
00:04:35,860 --> 00:04:39,160
this information is<font color="#CCCCCC"> immediately</font>

139
00:04:36,940 --> 00:04:40,210
available<font color="#E5E5E5"> to the adversary</font><font color="#CCCCCC"> and in</font>

140
00:04:39,160 --> 00:04:42,100
<font color="#E5E5E5">particular this would allow the</font>

141
00:04:40,210 --> 00:04:46,388
adversary<font color="#E5E5E5"> to front run and violate the</font>

142
00:04:42,100 --> 00:04:47,560
intent of the second price auction the

143
00:04:46,389 --> 00:04:49,510
solution<font color="#E5E5E5"> that we're going to propose</font><font color="#CCCCCC"> for</font>

144
00:04:47,560 --> 00:04:51,490
this is hawk<font color="#CCCCCC"> which is a framework for</font>

145
00:04:49,510 --> 00:04:53,260
<font color="#CCCCCC">privacy-preserving</font><font color="#E5E5E5"> smart contracts and</font>

146
00:04:51,490 --> 00:04:56,080
the main idea<font color="#E5E5E5"> that we're going to use</font>

147
00:04:53,260 --> 00:04:57,880
here<font color="#E5E5E5"> is</font><font color="#CCCCCC"> a zero knowledge proof</font><font color="#E5E5E5"> so we're</font>

148
00:04:56,080 --> 00:05:00,010
<font color="#E5E5E5">going</font><font color="#CCCCCC"> to have a protocol</font><font color="#E5E5E5"> in which we're</font>

149
00:04:57,880 --> 00:05:02,020
proving statements about commitments<font color="#E5E5E5"> and</font>

150
00:05:00,010 --> 00:05:03,909
<font color="#CCCCCC">ciphertext without revealing any of the</font>

151
00:05:02,020 --> 00:05:05,740
underlying<font color="#CCCCCC"> data we're going to be using</font>

152
00:05:03,910 --> 00:05:07,389
the same kind of suite of tools as some

153
00:05:05,740 --> 00:05:11,440
of the other projects we've heard<font color="#CCCCCC"> about</font>

154
00:05:07,389 --> 00:05:14,229
like Cinderella<font color="#E5E5E5"> in a sense this is also</font>

155
00:05:11,440 --> 00:05:15,550
continuing a trend<font color="#CCCCCC"> so again in some</font>

156
00:05:14,229 --> 00:05:17,349
prior oaklands you would have seen the

157
00:05:15,550 --> 00:05:19,150
<font color="#E5E5E5">zero</font><font color="#CCCCCC"> cash paper which acknowledges</font><font color="#E5E5E5"> that</font>

158
00:05:17,350 --> 00:05:21,010
<font color="#E5E5E5">Bitcoin doesn't actually provide any</font>

159
00:05:19,150 --> 00:05:23,169
transaction privacy and so<font color="#CCCCCC"> here's ero</font>

160
00:05:21,010 --> 00:05:24,789
<font color="#E5E5E5">cash is an improved protocol that uses</font>

161
00:05:23,169 --> 00:05:28,930
<font color="#CCCCCC">zero blood proofs in order to provide</font>

162
00:05:24,789 --> 00:05:31,030
this privacy<font color="#CCCCCC"> what's new in</font><font color="#E5E5E5"> this year and</font>

163
00:05:28,930 --> 00:05:32,979
<font color="#E5E5E5">recently is the idea of having more</font>

164
00:05:31,030 --> 00:05:34,479
expressive more<font color="#E5E5E5"> programmable forms of</font>

165
00:05:32,979 --> 00:05:36,490
crypto currencies like<font color="#E5E5E5"> aetherium</font>

166
00:05:34,479 --> 00:05:38,639
and so we're with<font color="#CCCCCC"> hawk trying to do the</font>

167
00:05:36,490 --> 00:05:40,870
same thing making<font color="#CCCCCC"> privacy preserving</font>

168
00:05:38,639 --> 00:05:42,610
<font color="#E5E5E5">adding the privacy preserving quality</font>

169
00:05:40,870 --> 00:05:45,099
back in but still preserving<font color="#E5E5E5"> the the</font>

170
00:05:42,610 --> 00:05:48,729
expressive programmability<font color="#E5E5E5"> that</font><font color="#CCCCCC"> a that's</font>

171
00:05:45,099 --> 00:05:52,330
desired so let me walk<font color="#E5E5E5"> through at a high</font>

172
00:05:48,729 --> 00:05:55,479
<font color="#CCCCCC">level</font><font color="#E5E5E5"> how</font><font color="#CCCCCC"> the the hawk protocol</font><font color="#E5E5E5"> would</font>

173
00:05:52,330 --> 00:05:56,560
work for<font color="#E5E5E5"> this auction example so first</font>

174
00:05:55,479 --> 00:05:58,990
of all<font color="#E5E5E5"> this is going</font><font color="#CCCCCC"> to be built on top</font>

175
00:05:56,560 --> 00:06:01,000
<font color="#CCCCCC">of</font><font color="#E5E5E5"> the zero cash protocol so</font><font color="#CCCCCC"> use this as</font>

176
00:05:58,990 --> 00:06:03,789
<font color="#CCCCCC">a kind of the</font><font color="#E5E5E5"> underlying substrate it's</font>

177
00:06:01,000 --> 00:06:05,860
going to be our building block instead

178
00:06:03,789 --> 00:06:09,340
of<font color="#E5E5E5"> simply having</font><font color="#CCCCCC"> the</font><font color="#E5E5E5"> code for a contract</font>

179
00:06:05,860 --> 00:06:11,530
<font color="#CCCCCC">a the direct code for</font><font color="#E5E5E5"> it placed on the</font>

180
00:06:09,340 --> 00:06:14,138
blockchain what we would do is have the

181
00:06:11,530 --> 00:06:16,119
users generate a zero knowledge proof

182
00:06:14,139 --> 00:06:17,229
parameters so they will<font color="#E5E5E5"> actually take</font><font color="#CCCCCC"> an</font>

183
00:06:16,120 --> 00:06:19,180
encoding of the<font color="#E5E5E5"> function that they're</font>

184
00:06:17,229 --> 00:06:21,639
<font color="#E5E5E5">going</font><font color="#CCCCCC"> to run and the first step will be</font>

185
00:06:19,180 --> 00:06:23,260
to generate<font color="#CCCCCC"> a zero knowledge proof</font>

186
00:06:21,639 --> 00:06:26,139
public parameters and<font color="#E5E5E5"> that's going to be</font>

187
00:06:23,260 --> 00:06:27,610
stored on the blockchain<font color="#CCCCCC"> the users are</font>

188
00:06:26,139 --> 00:06:29,380
<font color="#CCCCCC">going</font><font color="#E5E5E5"> to go through several phases and</font>

189
00:06:27,610 --> 00:06:31,780
so in the first<font color="#E5E5E5"> phase all of the users</font>

190
00:06:29,380 --> 00:06:33,219
are going<font color="#CCCCCC"> to send their bids to</font><font color="#E5E5E5"> the</font>

191
00:06:31,780 --> 00:06:34,840
blockchain but instead<font color="#E5E5E5"> of sending them</font>

192
00:06:33,220 --> 00:06:36,070
in<font color="#E5E5E5"> plain text is in the</font><font color="#CCCCCC"> the</font><font color="#E5E5E5"> previous</font>

193
00:06:34,840 --> 00:06:38,919
example they're actually going<font color="#E5E5E5"> to send a</font>

194
00:06:36,070 --> 00:06:40,659
commitment to the bid that they are

195
00:06:38,919 --> 00:06:41,229
placing along with a zero knowledge

196
00:06:40,659 --> 00:06:42,340
proof

197
00:06:41,230 --> 00:06:44,410
a test of the fact that<font color="#E5E5E5"> they actually</font>

198
00:06:42,340 --> 00:06:46,210
<font color="#E5E5E5">have the</font><font color="#CCCCCC"> authority to</font><font color="#E5E5E5"> spend this money</font>

199
00:06:44,410 --> 00:06:49,950
that<font color="#E5E5E5"> it</font><font color="#CCCCCC"> hasn't already been</font><font color="#E5E5E5"> spent</font><font color="#CCCCCC"> before</font>

200
00:06:46,210 --> 00:06:52,450
and that this amount<font color="#CCCCCC"> actually exists</font>

201
00:06:49,950 --> 00:06:55,690
<font color="#E5E5E5">after this first phase after all of the</font>

202
00:06:52,450 --> 00:06:57,460
commitments to the bids are placed<font color="#CCCCCC"> then</font>

203
00:06:55,690 --> 00:06:59,890
in a second phase<font color="#CCCCCC"> the users are going</font><font color="#E5E5E5"> to</font>

204
00:06:57,460 --> 00:07:01,659
reveal<font color="#E5E5E5"> what their bids were to a</font>

205
00:06:59,890 --> 00:07:03,250
minimally trusted party called the

206
00:07:01,660 --> 00:07:06,010
manager<font color="#CCCCCC"> and I'm</font><font color="#E5E5E5"> going to talk more about</font>

207
00:07:03,250 --> 00:07:07,570
the manager in just a moment<font color="#E5E5E5"> so what the</font>

208
00:07:06,010 --> 00:07:09,820
the users do<font color="#E5E5E5"> is actually send an</font>

209
00:07:07,570 --> 00:07:12,219
encryption<font color="#E5E5E5"> to the managers public key</font><font color="#CCCCCC"> of</font>

210
00:07:09,820 --> 00:07:14,170
what their bids were of what the opening

211
00:07:12,220 --> 00:07:16,410
<font color="#E5E5E5">of these commitments were and they send</font>

212
00:07:14,170 --> 00:07:19,360
<font color="#E5E5E5">these directly to the blockchain as well</font>

213
00:07:16,410 --> 00:07:21,640
after<font color="#CCCCCC"> the manager has seen and decrypted</font>

214
00:07:19,360 --> 00:07:23,260
all of the users<font color="#CCCCCC"> of bids and inputs then</font>

215
00:07:21,640 --> 00:07:26,289
he's able to<font color="#CCCCCC"> run the function himself</font>

216
00:07:23,260 --> 00:07:27,760
<font color="#E5E5E5">and he's going to create encryptions of</font>

217
00:07:26,290 --> 00:07:30,190
the outputs to each of the parties

218
00:07:27,760 --> 00:07:31,810
according to the<font color="#CCCCCC"> program's policy along</font>

219
00:07:30,190 --> 00:07:35,260
<font color="#CCCCCC">with a final zero knowledge proof that</font>

220
00:07:31,810 --> 00:07:37,780
<font color="#CCCCCC">attests that</font><font color="#E5E5E5"> he ran the the intended</font>

221
00:07:35,260 --> 00:07:39,430
application function correctly<font color="#E5E5E5"> and that</font>

222
00:07:37,780 --> 00:07:42,010
he<font color="#E5E5E5"> included all the users input and that</font>

223
00:07:39,430 --> 00:07:43,600
<font color="#E5E5E5">all of the inputs that he provided on</font>

224
00:07:42,010 --> 00:07:47,349
<font color="#CCCCCC">behalf of the users were consistent with</font>

225
00:07:43,600 --> 00:07:48,940
the<font color="#CCCCCC"> users commitments now you should be</font>

226
00:07:47,350 --> 00:07:50,980
<font color="#CCCCCC">totally</font><font color="#E5E5E5"> skeptical at this point because</font>

227
00:07:48,940 --> 00:07:52,690
I've introduced this<font color="#CCCCCC"> a</font><font color="#E5E5E5"> parent trusted</font>

228
00:07:50,980 --> 00:07:54,130
<font color="#E5E5E5">third party of the manager so what I</font>

229
00:07:52,690 --> 00:07:55,690
want<font color="#E5E5E5"> to do is describe exactly what the</font>

230
00:07:54,130 --> 00:07:58,300
trust<font color="#CCCCCC"> model is here and what the manager</font>

231
00:07:55,690 --> 00:07:59,770
can get away with<font color="#CCCCCC"> we don't need</font><font color="#E5E5E5"> to trust</font>

232
00:07:58,300 --> 00:08:01,030
<font color="#E5E5E5">the manager for correctness because the</font>

233
00:07:59,770 --> 00:08:02,560
manager is<font color="#E5E5E5"> going to provide a zero</font>

234
00:08:01,030 --> 00:08:05,590
knowledge proof that the function he

235
00:08:02,560 --> 00:08:07,090
evaluated<font color="#E5E5E5"> was run</font><font color="#CCCCCC"> correctly we don't</font>

236
00:08:05,590 --> 00:08:08,890
need<font color="#E5E5E5"> to trust</font><font color="#CCCCCC"> the manager for input</font>

237
00:08:07,090 --> 00:08:10,840
independence and what I mean<font color="#CCCCCC"> by this is</font>

238
00:08:08,890 --> 00:08:12,430
in the auction scenario because the

239
00:08:10,840 --> 00:08:14,109
manager doesn't see<font color="#CCCCCC"> at what any of</font><font color="#E5E5E5"> the</font>

240
00:08:12,430 --> 00:08:16,630
users<font color="#E5E5E5"> bids were before all of the</font>

241
00:08:14,110 --> 00:08:18,160
commitments to the bids are placed even

242
00:08:16,630 --> 00:08:22,450
the manager doesn't have<font color="#E5E5E5"> any opportunity</font>

243
00:08:18,160 --> 00:08:24,850
<font color="#CCCCCC">to front run bids in this auction</font><font color="#E5E5E5"> as I</font>

244
00:08:22,450 --> 00:08:28,390
mentioned this<font color="#E5E5E5"> is built on top of the</font>

245
00:08:24,850 --> 00:08:31,840
zero<font color="#E5E5E5"> cash</font><font color="#CCCCCC"> protocol and so what happens</font>

246
00:08:28,390 --> 00:08:33,520
is<font color="#CCCCCC"> that</font><font color="#E5E5E5"> even if the manager goes bad in</font>

247
00:08:31,840 --> 00:08:35,049
some way<font color="#CCCCCC"> nothing</font><font color="#E5E5E5"> that the manager can do</font>

248
00:08:33,520 --> 00:08:37,478
can affect either the security or the

249
00:08:35,049 --> 00:08:40,900
privacy of<font color="#E5E5E5"> the underlying ecash that</font>

250
00:08:37,479 --> 00:08:42,220
this is built on top of you we also

251
00:08:40,900 --> 00:08:43,809
don't have<font color="#CCCCCC"> to trust the manager for</font>

252
00:08:42,220 --> 00:08:45,520
<font color="#E5E5E5">fairness</font><font color="#CCCCCC"> because if the manager</font><font color="#E5E5E5"> goes</font>

253
00:08:43,809 --> 00:08:47,530
away and<font color="#E5E5E5"> say fails to complete the last</font>

254
00:08:45,520 --> 00:08:49,329
step of this protocol<font color="#E5E5E5"> the fact</font><font color="#CCCCCC"> that you</font>

255
00:08:47,530 --> 00:08:51,250
<font color="#E5E5E5">failed to do this would</font><font color="#CCCCCC"> be</font><font color="#E5E5E5"> publicly</font>

256
00:08:49,330 --> 00:08:54,070
<font color="#CCCCCC">visible and so we require all of</font><font color="#E5E5E5"> the</font>

257
00:08:51,250 --> 00:08:55,180
parties to<font color="#E5E5E5"> place collateral deposits</font>

258
00:08:54,070 --> 00:08:57,070
which would then be<font color="#E5E5E5"> paid out</font><font color="#CCCCCC"> to</font><font color="#E5E5E5"> the</font>

259
00:08:55,180 --> 00:08:59,319
<font color="#E5E5E5">other users as</font><font color="#CCCCCC"> compensation in the case</font>

260
00:08:57,070 --> 00:09:00,790
<font color="#E5E5E5">that someone aborts in the protocol or</font>

261
00:08:59,320 --> 00:09:03,340
<font color="#E5E5E5">the manager fails to complete this last</font>

262
00:09:00,790 --> 00:09:04,750
step the<font color="#E5E5E5"> only thing that we do have to</font>

263
00:09:03,340 --> 00:09:07,840
trust the manager for<font color="#E5E5E5"> is posterior</font>

264
00:09:04,750 --> 00:09:09,250
privacy<font color="#CCCCCC"> because the manager does see a</font>

265
00:09:07,840 --> 00:09:11,170
by the<font color="#E5E5E5"> end of the protocol what all</font><font color="#CCCCCC"> of</font>

266
00:09:09,250 --> 00:09:12,820
the users actual<font color="#CCCCCC"> plaintext inputs were</font>

267
00:09:11,170 --> 00:09:15,610
so he could leak those if the manager

268
00:09:12,820 --> 00:09:16,780
goes<font color="#E5E5E5"> bad</font><font color="#CCCCCC"> and</font><font color="#E5E5E5"> I should mention that if we</font>

269
00:09:15,610 --> 00:09:18,520
have multiple<font color="#CCCCCC"> instances of</font><font color="#E5E5E5"> these</font>

270
00:09:16,780 --> 00:09:20,079
<font color="#E5E5E5">contracts</font><font color="#CCCCCC"> or like different</font><font color="#E5E5E5"> instances of</font>

271
00:09:18,520 --> 00:09:22,120
<font color="#E5E5E5">auctions or different instances of</font><font color="#CCCCCC"> other</font>

272
00:09:20,080 --> 00:09:23,950
applications<font color="#E5E5E5"> you can have different</font>

273
00:09:22,120 --> 00:09:25,480
managers for each instance and so if a

274
00:09:23,950 --> 00:09:27,130
manager<font color="#E5E5E5"> and one goes bad it doesn't</font>

275
00:09:25,480 --> 00:09:31,150
automatically leak any of the details of

276
00:09:27,130 --> 00:09:33,160
<font color="#E5E5E5">the other instances you should think of</font>

277
00:09:31,150 --> 00:09:34,780
this manager<font color="#E5E5E5"> also has a logical role so</font>

278
00:09:33,160 --> 00:09:36,520
you could<font color="#E5E5E5"> imagine implementing it with</font>

279
00:09:34,780 --> 00:09:37,990
multi-party computation or even

280
00:09:36,520 --> 00:09:39,819
<font color="#CCCCCC">entrusted Hardware to get some extra</font>

281
00:09:37,990 --> 00:09:42,520
guarantees that<font color="#CCCCCC"> this posterior</font>

282
00:09:39,820 --> 00:09:44,320
information wouldn't<font color="#E5E5E5"> leak out</font><font color="#CCCCCC"> looking</font>

283
00:09:42,520 --> 00:09:45,699
ahead<font color="#E5E5E5"> the performance metrics</font><font color="#CCCCCC"> that</font><font color="#E5E5E5"> will</font>

284
00:09:44,320 --> 00:09:49,380
<font color="#E5E5E5">show you reflect just the simple case</font>

285
00:09:45,700 --> 00:09:51,850
where the manager runs<font color="#E5E5E5"> just as one party</font>

286
00:09:49,380 --> 00:09:53,530
now we could have<font color="#CCCCCC"> just</font><font color="#E5E5E5"> implemented the</font>

287
00:09:51,850 --> 00:09:54,850
auction protocol and addressed that but

288
00:09:53,530 --> 00:09:57,520
<font color="#CCCCCC">again</font><font color="#E5E5E5"> the</font><font color="#CCCCCC"> goal here is to be able</font><font color="#E5E5E5"> to</font>

289
00:09:54,850 --> 00:09:59,940
have a user<font color="#CCCCCC"> or application</font><font color="#E5E5E5"> developer</font>

290
00:09:57,520 --> 00:10:03,460
friendly programming flame framework

291
00:09:59,940 --> 00:10:05,080
<font color="#E5E5E5">capturing kind of the athos of</font><font color="#CCCCCC"> aetherium</font>

292
00:10:03,460 --> 00:10:06,880
<font color="#E5E5E5">so our goal is instead going to be</font>

293
00:10:05,080 --> 00:10:08,710
provide a compiler<font color="#CCCCCC"> that application</font>

294
00:10:06,880 --> 00:10:10,240
developers can use<font color="#CCCCCC"> without</font><font color="#E5E5E5"> having</font><font color="#CCCCCC"> to</font>

295
00:10:08,710 --> 00:10:11,770
think<font color="#CCCCCC"> about the underlying</font><font color="#E5E5E5"> cryptography</font>

296
00:10:10,240 --> 00:10:13,630
but<font color="#E5E5E5"> they can use this to specify the</font>

297
00:10:11,770 --> 00:10:15,100
<font color="#E5E5E5">application that they want and it's</font>

298
00:10:13,630 --> 00:10:16,689
<font color="#E5E5E5">going to be the job of</font><font color="#CCCCCC"> our compiler to</font>

299
00:10:15,100 --> 00:10:18,610
generate<font color="#E5E5E5"> a correct by construction</font>

300
00:10:16,690 --> 00:10:21,340
cryptographic protocol<font color="#E5E5E5"> that implements</font>

301
00:10:18,610 --> 00:10:23,740
<font color="#E5E5E5">what they want the way that</font><font color="#CCCCCC"> users</font>

302
00:10:21,340 --> 00:10:27,070
provide<font color="#E5E5E5"> input to the hot compiler is by</font>

303
00:10:23,740 --> 00:10:30,100
writing their application in a basically

304
00:10:27,070 --> 00:10:32,650
<font color="#E5E5E5">just in C with very minor modifications</font>

305
00:10:30,100 --> 00:10:34,830
that provide some<font color="#E5E5E5"> keywords and data</font>

306
00:10:32,650 --> 00:10:36,730
structures<font color="#CCCCCC"> to talk about the input</font>

307
00:10:34,830 --> 00:10:39,760
monetary values as well<font color="#CCCCCC"> as arbitrary</font>

308
00:10:36,730 --> 00:10:41,290
<font color="#CCCCCC">input values for the parties but</font>

309
00:10:39,760 --> 00:10:43,090
<font color="#E5E5E5">otherwise this</font><font color="#CCCCCC"> is simply they just</font>

310
00:10:41,290 --> 00:10:44,530
define any computable function in C so

311
00:10:43,090 --> 00:10:46,330
they provide<font color="#E5E5E5"> this one function</font><font color="#CCCCCC"> and then</font>

312
00:10:44,530 --> 00:10:49,900
that's<font color="#E5E5E5"> going to be the the specification</font>

313
00:10:46,330 --> 00:10:51,430
<font color="#E5E5E5">for the the application in our paper you</font>

314
00:10:49,900 --> 00:10:52,810
can<font color="#E5E5E5"> see what the example looks like in</font>

315
00:10:51,430 --> 00:10:54,579
the<font color="#E5E5E5"> actual code because you</font><font color="#CCCCCC"> can write</font>

316
00:10:52,810 --> 00:10:56,229
<font color="#E5E5E5">these</font><font color="#CCCCCC"> applications in very short concise</font>

317
00:10:54,580 --> 00:10:58,480
code<font color="#E5E5E5"> that's easy to read</font><font color="#CCCCCC"> so we provide</font>

318
00:10:56,230 --> 00:11:00,610
examples<font color="#E5E5E5"> for the auction scenario but</font>

319
00:10:58,480 --> 00:11:02,140
also for a<font color="#E5E5E5"> two party gambling game as</font>

320
00:11:00,610 --> 00:11:04,000
well<font color="#E5E5E5"> as</font><font color="#CCCCCC"> a crowdfunding campaign where</font>

321
00:11:02,140 --> 00:11:05,230
<font color="#CCCCCC">you get the money back everyone who</font>

322
00:11:04,000 --> 00:11:07,180
donates<font color="#CCCCCC"> gets the money</font><font color="#E5E5E5"> back if it</font>

323
00:11:05,230 --> 00:11:07,870
doesn't reach some threshold<font color="#CCCCCC"> as well as</font>

324
00:11:07,180 --> 00:11:09,310
a<font color="#E5E5E5"> really</font>

325
00:11:07,870 --> 00:11:10,810
simplified financial instrument that

326
00:11:09,310 --> 00:11:12,880
<font color="#E5E5E5">allows</font><font color="#CCCCCC"> you to</font><font color="#E5E5E5"> bet on</font><font color="#CCCCCC"> the price</font><font color="#E5E5E5"> of a</font>

327
00:11:10,810 --> 00:11:16,630
stock<font color="#E5E5E5"> as reported</font><font color="#CCCCCC"> by some stock price</font>

328
00:11:12,880 --> 00:11:18,339
<font color="#CCCCCC">authority</font><font color="#E5E5E5"> just</font><font color="#CCCCCC"> to give a really simple</font>

329
00:11:16,630 --> 00:11:20,830
you know overview of what the the<font color="#E5E5E5"> steps</font>

330
00:11:18,339 --> 00:11:22,180
are<font color="#CCCCCC"> elven are of an of our compiler</font>

331
00:11:20,830 --> 00:11:24,370
because<font color="#E5E5E5"> we use a bunch of separate tools</font>

332
00:11:22,180 --> 00:11:26,319
<font color="#CCCCCC">the</font><font color="#E5E5E5"> first step is that we</font><font color="#CCCCCC"> actually use</font>

333
00:11:24,370 --> 00:11:28,960
the existing Pinocchio compiler<font color="#E5E5E5"> from</font>

334
00:11:26,320 --> 00:11:31,029
several<font color="#CCCCCC"> oaklands</font><font color="#E5E5E5"> ago the user this</font>

335
00:11:28,960 --> 00:11:32,860
compiles the<font color="#CCCCCC"> user's</font><font color="#E5E5E5"> program from</font><font color="#CCCCCC"> C into</font>

336
00:11:31,029 --> 00:11:34,240
an arithmetic circuit where again the

337
00:11:32,860 --> 00:11:35,650
arithmetic<font color="#E5E5E5"> circuit is sort of the native</font>

338
00:11:34,240 --> 00:11:38,950
language for the zero knowledge proof

339
00:11:35,650 --> 00:11:40,600
<font color="#E5E5E5">framework we're going to be using the</font>

340
00:11:38,950 --> 00:11:41,830
<font color="#CCCCCC">users code when it's compiled to</font><font color="#E5E5E5"> this</font>

341
00:11:40,600 --> 00:11:43,390
arithmetic circuit gives you a fairly

342
00:11:41,830 --> 00:11:45,460
<font color="#E5E5E5">simple circuit because it doesn't have</font>

343
00:11:43,390 --> 00:11:47,230
much cryptography but<font color="#E5E5E5"> our protocol is</font>

344
00:11:45,460 --> 00:11:49,270
<font color="#E5E5E5">about making zero knowledge proof about</font>

345
00:11:47,230 --> 00:11:50,830
<font color="#E5E5E5">the contents of encryptions and</font>

346
00:11:49,270 --> 00:11:52,449
commitments and<font color="#CCCCCC"> so what we have to do is</font>

347
00:11:50,830 --> 00:11:56,020
basically<font color="#E5E5E5"> build a circuit around the</font>

348
00:11:52,450 --> 00:11:57,940
users application sub circuit and this

349
00:11:56,020 --> 00:12:01,050
circuit that<font color="#E5E5E5"> this augmented circuit has</font>

350
00:11:57,940 --> 00:12:03,490
<font color="#CCCCCC">to contain</font><font color="#E5E5E5"> statements about cryptography</font>

351
00:12:01,050 --> 00:12:05,050
<font color="#E5E5E5">and so what turns out is that this</font>

352
00:12:03,490 --> 00:12:06,760
requires a lot of<font color="#E5E5E5"> care in order to</font>

353
00:12:05,050 --> 00:12:08,170
implement in an efficient way<font color="#E5E5E5"> so most</font>

354
00:12:06,760 --> 00:12:10,089
crypto schemes are designed to be

355
00:12:08,170 --> 00:12:11,860
efficient<font color="#E5E5E5"> when implemented on you know</font>

356
00:12:10,089 --> 00:12:15,339
<font color="#CCCCCC">general-purpose hardware like 32 or</font>

357
00:12:11,860 --> 00:12:16,870
<font color="#CCCCCC">64-bit computations and in this</font>

358
00:12:15,339 --> 00:12:19,270
arithmetic<font color="#CCCCCC"> circuit world we have to make</font>

359
00:12:16,870 --> 00:12:20,980
different<font color="#E5E5E5"> protocol choices and so in the</font>

360
00:12:19,270 --> 00:12:22,420
<font color="#E5E5E5">paper you can see more information about</font>

361
00:12:20,980 --> 00:12:25,600
the choices<font color="#CCCCCC"> that we use in particular</font>

362
00:12:22,420 --> 00:12:27,790
<font color="#CCCCCC">for encryption we use a hand optimized</font>

363
00:12:25,600 --> 00:12:29,440
implementation<font color="#CCCCCC"> of RSA that fits neatly</font>

364
00:12:27,790 --> 00:12:32,050
into<font color="#CCCCCC"> the astre</font><font color="#E5E5E5"> into this arithmetic</font>

365
00:12:29,440 --> 00:12:33,520
<font color="#E5E5E5">circuit and this insight I think</font><font color="#CCCCCC"> is</font>

366
00:12:32,050 --> 00:12:35,319
similar<font color="#E5E5E5"> to the one in Cinderella which</font>

367
00:12:33,520 --> 00:12:38,290
also had a<font color="#E5E5E5"> similar problem</font><font color="#CCCCCC"> in addressed</font>

368
00:12:35,320 --> 00:12:41,500
in a similar way<font color="#E5E5E5"> this augmented circuit</font>

369
00:12:38,290 --> 00:12:43,329
we<font color="#E5E5E5"> developed with</font><font color="#CCCCCC"> our own arithmetic</font>

370
00:12:41,500 --> 00:12:45,459
circuit compositing library called<font color="#E5E5E5"> J</font>

371
00:12:43,330 --> 00:12:46,830
snark<font color="#E5E5E5"> which is open code that's</font>

372
00:12:45,459 --> 00:12:49,000
available online

373
00:12:46,830 --> 00:12:51,279
<font color="#E5E5E5">the last step</font><font color="#CCCCCC"> after building</font><font color="#E5E5E5"> this</font>

374
00:12:49,000 --> 00:12:52,690
augmented arithmetic circuit is<font color="#E5E5E5"> to</font>

375
00:12:51,279 --> 00:12:54,370
simply provide<font color="#E5E5E5"> this earth medic circuit</font>

376
00:12:52,690 --> 00:12:57,130
to an existing zero knowledge proof

377
00:12:54,370 --> 00:12:59,860
library<font color="#E5E5E5"> Lib Stark so again the same tool</font>

378
00:12:57,130 --> 00:13:02,740
set as the other talks that<font color="#CCCCCC"> have used</font>

379
00:12:59,860 --> 00:13:04,510
<font color="#E5E5E5">the suite of tools</font><font color="#CCCCCC"> just</font><font color="#E5E5E5"> to give some</font>

380
00:13:02,740 --> 00:13:05,770
<font color="#CCCCCC">examples</font><font color="#E5E5E5"> of then our performance so we</font>

381
00:13:04,510 --> 00:13:09,160
implemented<font color="#CCCCCC"> this and tried it</font><font color="#E5E5E5"> out on</font>

382
00:13:05,770 --> 00:13:10,890
<font color="#E5E5E5">several scenarios</font><font color="#CCCCCC"> so in</font><font color="#E5E5E5"> particular I'll</font>

383
00:13:09,160 --> 00:13:13,900
give you the example<font color="#E5E5E5"> for a hundred user</font>

384
00:13:10,890 --> 00:13:15,670
auction or crowdfunding<font color="#CCCCCC"> campain</font><font color="#E5E5E5"> this is</font>

385
00:13:13,900 --> 00:13:18,579
<font color="#E5E5E5">also at the hundred twelve bit security</font>

386
00:13:15,670 --> 00:13:19,900
level<font color="#CCCCCC"> the auctioneer the managers part</font>

387
00:13:18,579 --> 00:13:21,050
is the most<font color="#CCCCCC"> computationally expensive</font>

388
00:13:19,900 --> 00:13:23,449
and this<font color="#E5E5E5"> took</font>

389
00:13:21,050 --> 00:13:25,459
<font color="#E5E5E5">it takes about two nearly three minutes</font>

390
00:13:23,450 --> 00:13:28,420
to run this is actually parallelized

391
00:13:25,459 --> 00:13:30,680
across four cores on an<font color="#E5E5E5"> Amazon machine</font>

392
00:13:28,420 --> 00:13:32,599
<font color="#CCCCCC">the amount of computation needed for the</font>

393
00:13:30,680 --> 00:13:34,279
users<font color="#E5E5E5"> to do is much smaller it's only 40</font>

394
00:13:32,600 --> 00:13:35,510
seconds<font color="#E5E5E5"> and this is only on a</font><font color="#CCCCCC"> single</font>

395
00:13:34,279 --> 00:13:37,790
core machine

396
00:13:35,510 --> 00:13:38,990
the managers<font color="#CCCCCC"> effort</font><font color="#E5E5E5"> scales linearly with</font>

397
00:13:37,790 --> 00:13:40,430
<font color="#E5E5E5">the</font><font color="#CCCCCC"> amount of</font><font color="#E5E5E5"> users</font><font color="#CCCCCC"> who are</font>

398
00:13:38,990 --> 00:13:42,140
participating because<font color="#E5E5E5"> that corresponds</font>

399
00:13:40,430 --> 00:13:44,000
to<font color="#E5E5E5"> them the size of the final circuit he</font>

400
00:13:42,140 --> 00:13:45,709
has to create<font color="#E5E5E5"> a proof about where as the</font>

401
00:13:44,000 --> 00:13:49,100
<font color="#E5E5E5">users computation is independent of the</font>

402
00:13:45,709 --> 00:13:50,089
number<font color="#CCCCCC"> of</font><font color="#E5E5E5"> users</font><font color="#CCCCCC"> the main overhead here</font>

403
00:13:49,100 --> 00:13:52,160
is computing the<font color="#E5E5E5"> zero knowledge proof</font>

404
00:13:50,089 --> 00:13:53,870
<font color="#CCCCCC">there is</font><font color="#E5E5E5"> other cryptography but the cost</font>

405
00:13:52,160 --> 00:13:56,439
of<font color="#E5E5E5"> that cryptography is a minimal in</font>

406
00:13:53,870 --> 00:13:59,390
comparison<font color="#CCCCCC"> to</font><font color="#E5E5E5"> computing these proofs</font>

407
00:13:56,440 --> 00:14:01,670
<font color="#E5E5E5">probably the most critical cost metric</font>

408
00:13:59,390 --> 00:14:03,410
though is what's the<font color="#E5E5E5"> cost of to the</font>

409
00:14:01,670 --> 00:14:04,699
blockchain itself so what's the size of

410
00:14:03,410 --> 00:14:06,439
the transactions<font color="#E5E5E5"> and amount of</font>

411
00:14:04,700 --> 00:14:07,730
computation<font color="#E5E5E5"> that</font><font color="#CCCCCC"> everyone on one of</font>

412
00:14:06,440 --> 00:14:10,010
these blockchain peer-to-peer networks

413
00:14:07,730 --> 00:14:11,269
needs to run and again on the blockchain

414
00:14:10,010 --> 00:14:13,189
the only thing that's happening<font color="#CCCCCC"> is that</font>

415
00:14:11,269 --> 00:14:16,490
<font color="#E5E5E5">the peer to peer network is verifying</font>

416
00:14:13,190 --> 00:14:18,440
the proofs not computing them so in this

417
00:14:16,490 --> 00:14:20,029
example<font color="#E5E5E5"> the cost of verifying all of the</font>

418
00:14:18,440 --> 00:14:21,649
proofs needed for this<font color="#E5E5E5"> auction example</font>

419
00:14:20,029 --> 00:14:25,070
is a total of one and a half<font color="#E5E5E5"> seconds</font>

420
00:14:21,649 --> 00:14:26,870
which we think<font color="#E5E5E5"> is</font><font color="#CCCCCC"> a acceptable</font><font color="#E5E5E5"> the total</font>

421
00:14:25,070 --> 00:14:28,130
amount of transaction data the total

422
00:14:26,870 --> 00:14:29,420
amount of data of all of the proofs

423
00:14:28,130 --> 00:14:35,000
together that you need to place on the

424
00:14:29,420 --> 00:14:36,800
<font color="#CCCCCC">blockchain is 220 kilobytes just to give</font>

425
00:14:35,000 --> 00:14:38,630
you then a quick explanation of some of

426
00:14:36,800 --> 00:14:40,339
the other<font color="#E5E5E5"> things that you'll find</font><font color="#CCCCCC"> if you</font>

427
00:14:38,630 --> 00:14:42,800
<font color="#CCCCCC">look at</font><font color="#E5E5E5"> our paper so we provided a</font>

428
00:14:40,339 --> 00:14:44,480
<font color="#CCCCCC">formalization and proofs and protocol</font>

429
00:14:42,800 --> 00:14:48,260
specification in our paper these is in

430
00:14:44,480 --> 00:14:50,510
the<font color="#CCCCCC"> universal composability model this</font>

431
00:14:48,260 --> 00:14:52,760
requires us<font color="#CCCCCC"> to</font><font color="#E5E5E5"> provide a</font><font color="#CCCCCC"> UC model of</font>

432
00:14:50,510 --> 00:14:56,540
what existing<font color="#CCCCCC"> blockchains systems give</font>

433
00:14:52,760 --> 00:14:59,209
you and then also a UC formalization<font color="#CCCCCC"> of</font>

434
00:14:56,540 --> 00:15:00,849
what<font color="#CCCCCC"> our specification is that outlines</font>

435
00:14:59,209 --> 00:15:02,479
exactly<font color="#CCCCCC"> what the failure</font><font color="#E5E5E5"> modes are and</font>

436
00:15:00,850 --> 00:15:04,850
everything that's captured<font color="#CCCCCC"> by the</font>

437
00:15:02,480 --> 00:15:06,440
<font color="#E5E5E5">specification in particular this you see</font>

438
00:15:04,850 --> 00:15:07,670
a<font color="#E5E5E5"> blockchain framework would</font><font color="#CCCCCC"> be a good</font>

439
00:15:06,440 --> 00:15:10,130
starting point<font color="#CCCCCC"> for someone</font><font color="#E5E5E5"> to be able to</font>

440
00:15:07,670 --> 00:15:11,329
<font color="#E5E5E5">use</font><font color="#CCCCCC"> - as a starting point for modeling</font>

441
00:15:10,130 --> 00:15:14,029
other applications you might<font color="#E5E5E5"> want</font><font color="#CCCCCC"> to</font>

442
00:15:11,329 --> 00:15:15,589
<font color="#E5E5E5">build on top</font><font color="#CCCCCC"> of a</font><font color="#E5E5E5"> blockchain in order to</font>

443
00:15:14,029 --> 00:15:17,120
make<font color="#E5E5E5"> this proof go through in the UC</font>

444
00:15:15,589 --> 00:15:19,310
environment we had to come<font color="#CCCCCC"> up with a</font>

445
00:15:17,120 --> 00:15:22,250
construction<font color="#CCCCCC"> that allows us to leverage</font>

446
00:15:19,310 --> 00:15:24,140
the underlying lib<font color="#CCCCCC"> snark scheme which is</font>

447
00:15:22,250 --> 00:15:26,870
<font color="#E5E5E5">not itself UC secure but we're able to</font>

448
00:15:24,140 --> 00:15:30,649
add a transformation to it that makes it

449
00:15:26,870 --> 00:15:32,630
UC secure<font color="#E5E5E5"> and then the software that we</font>

450
00:15:30,649 --> 00:15:34,819
have available<font color="#E5E5E5"> already online you can</font>

451
00:15:32,630 --> 00:15:37,850
<font color="#E5E5E5">see our JSON arc circuit composed</font>

452
00:15:34,819 --> 00:15:40,160
<font color="#E5E5E5">library the code for the</font><font color="#CCCCCC"> Hakka</font><font color="#E5E5E5"> project</font>

453
00:15:37,850 --> 00:15:44,239
itself is going<font color="#CCCCCC"> to</font><font color="#E5E5E5"> be online soon we're</font>

454
00:15:40,160 --> 00:15:47,600
getting<font color="#CCCCCC"> around to</font><font color="#E5E5E5"> that okay so I'm going</font>

455
00:15:44,239 --> 00:15:49,249
to<font color="#E5E5E5"> finish there</font><font color="#CCCCCC"> the there's our paper</font>

456
00:15:47,600 --> 00:15:51,470
link and<font color="#CCCCCC"> we'd encourage you to try out a</font>

457
00:15:49,249 --> 00:15:53,179
<font color="#CCCCCC">rj snark software in particular now and</font>

458
00:15:51,470 --> 00:16:04,399
to<font color="#E5E5E5"> look forward to the</font><font color="#CCCCCC"> hawk code when</font>

459
00:15:53,179 --> 00:16:08,149
it's released<font color="#CCCCCC"> all</font><font color="#E5E5E5"> right thank you</font><font color="#CCCCCC"> very</font>

460
00:16:04,399 --> 00:16:11,559
<font color="#CCCCCC">good time thank</font><font color="#E5E5E5"> you okay</font><font color="#CCCCCC"> so you</font><font color="#E5E5E5"> talked</font>

461
00:16:08,149 --> 00:16:16,369
about<font color="#E5E5E5"> two main issues</font><font color="#CCCCCC"> such as privacy or</font>

462
00:16:11,559 --> 00:16:18,429
and<font color="#CCCCCC"> programmability but one other issue</font>

463
00:16:16,369 --> 00:16:20,959
that<font color="#CCCCCC"> people talk about</font><font color="#E5E5E5"> is sufficient</font>

464
00:16:18,429 --> 00:16:24,858
<font color="#E5E5E5">decentralization in other words how do</font>

465
00:16:20,959 --> 00:16:27,319
you prevent or ensure that you know

466
00:16:24,859 --> 00:16:29,809
<font color="#E5E5E5">malicious collusion isn't happening so</font>

467
00:16:27,319 --> 00:16:32,358
is this something<font color="#CCCCCC"> that you have looked</font>

468
00:16:29,809 --> 00:16:34,999
<font color="#E5E5E5">at or the community is actively</font><font color="#CCCCCC"> looking</font>

469
00:16:32,359 --> 00:16:36,319
at<font color="#E5E5E5"> I would say the community</font><font color="#CCCCCC"> is</font><font color="#E5E5E5"> actively</font>

470
00:16:34,999 --> 00:16:38,539
<font color="#CCCCCC">looking</font><font color="#E5E5E5"> at this if you</font><font color="#CCCCCC"> have a more</font>

471
00:16:36,319 --> 00:16:41,719
<font color="#CCCCCC">specific sense of what kind of collusion</font>

472
00:16:38,539 --> 00:16:44,989
do you mean<font color="#CCCCCC"> well there's people</font><font color="#E5E5E5"> who have</font>

473
00:16:41,720 --> 00:16:48,439
<font color="#CCCCCC">found that in certain scenarios when</font>

474
00:16:44,989 --> 00:16:49,850
miners<font color="#E5E5E5"> reach a</font><font color="#CCCCCC"> certain fraction</font><font color="#E5E5E5"> what</font>

475
00:16:48,439 --> 00:16:52,099
collusion reaches<font color="#CCCCCC"> certain fractions or</font>

476
00:16:49,850 --> 00:16:54,679
<font color="#CCCCCC">absolution so this work entirely builds</font>

477
00:16:52,100 --> 00:16:56,389
on a sort of abstracted model of what

478
00:16:54,679 --> 00:16:58,399
block chains give you so we essentially

479
00:16:56,389 --> 00:17:00,709
assume that they work as a black box we

480
00:16:58,399 --> 00:17:02,299
<font color="#CCCCCC">don't in this project don't</font><font color="#E5E5E5"> say we have</font>

481
00:17:00,709 --> 00:17:04,730
to assume<font color="#E5E5E5"> that the underlying blockchain</font>

482
00:17:02,299 --> 00:17:06,049
what it gives us it does so securely<font color="#CCCCCC"> so</font>

483
00:17:04,730 --> 00:17:07,730
this<font color="#E5E5E5"> includes not having all the</font>

484
00:17:06,049 --> 00:17:10,490
transactions reverted or taken over

485
00:17:07,730 --> 00:17:12,169
which are realistic attacks<font color="#E5E5E5"> to worry</font>

486
00:17:10,490 --> 00:17:13,459
<font color="#CCCCCC">about in</font><font color="#E5E5E5"> these systems but for</font><font color="#CCCCCC"> our</font>

487
00:17:12,169 --> 00:17:16,629
purpose we<font color="#CCCCCC"> use that as a black box</font>

488
00:17:13,459 --> 00:17:16,629
<font color="#E5E5E5">okay got it thank you</font>

