1
00:00:00,000 --> 00:00:03,899
given our ever increasing reliance on

2
00:00:02,040 --> 00:00:05,850
cloud storage it's no surprise<font color="#CCCCCC"> that</font>

3
00:00:03,899 --> 00:00:08,790
cryptographic research is aimed to help

4
00:00:05,850 --> 00:00:10,320
<font color="#E5E5E5">us provide access controls on untrusted</font>

5
00:00:08,790 --> 00:00:12,450
platforms today I'm going<font color="#CCCCCC"> to discuss</font>

6
00:00:10,320 --> 00:00:14,219
some of the issues some of the practical

7
00:00:12,450 --> 00:00:16,590
considerations that are going<font color="#E5E5E5"> to go into</font>

8
00:00:14,219 --> 00:00:17,939
accomplishing this goal and demonstrate

9
00:00:16,590 --> 00:00:19,770
that the state of<font color="#E5E5E5"> the art at the moment</font>

10
00:00:17,940 --> 00:00:21,330
cannot yet fully achieve it without

11
00:00:19,770 --> 00:00:24,660
overheads that are likely<font color="#CCCCCC"> to be</font>

12
00:00:21,330 --> 00:00:26,038
prohibitive so I don't<font color="#E5E5E5"> think I need</font><font color="#CCCCCC"> to</font>

13
00:00:24,660 --> 00:00:27,330
tell<font color="#E5E5E5"> anyone here and you've been told a</font>

14
00:00:26,039 --> 00:00:28,800
couple of<font color="#E5E5E5"> times already throughout the</font>

15
00:00:27,330 --> 00:00:30,299
conference<font color="#E5E5E5"> that there's been a huge</font>

16
00:00:28,800 --> 00:00:31,920
explosion<font color="#CCCCCC"> in the popularity of</font>

17
00:00:30,300 --> 00:00:33,989
outsourcing our data to the cloud

18
00:00:31,920 --> 00:00:35,489
there's a wide array of offerings from

19
00:00:33,989 --> 00:00:37,078
many companies targeting both the

20
00:00:35,489 --> 00:00:39,629
enterprise things like Amazon Cloud

21
00:00:37,079 --> 00:00:42,450
Drive to the<font color="#E5E5E5"> very consumer level things</font>

22
00:00:39,629 --> 00:00:44,399
like Flickr but how does this affect

23
00:00:42,450 --> 00:00:45,930
access control traditional access

24
00:00:44,399 --> 00:00:47,670
controls are enforced by a trusted

25
00:00:45,930 --> 00:00:49,710
reference monitor that's going to field

26
00:00:47,670 --> 00:00:52,199
our requests and deny those that

27
00:00:49,710 --> 00:00:53,730
shouldn't be permitted well in the cloud

28
00:00:52,199 --> 00:00:56,160
scenario it's possible that I don't

29
00:00:53,730 --> 00:00:58,078
trust my service provider to enforce my

30
00:00:56,160 --> 00:01:00,599
policy correctly it's possible that I'm

31
00:00:58,079 --> 00:01:02,760
worried they may permit<font color="#E5E5E5"> an access that I</font>

32
00:01:00,600 --> 00:01:04,049
don't agree<font color="#E5E5E5"> with it's possible I'm even</font>

33
00:01:02,760 --> 00:01:05,610
worried that they're going<font color="#E5E5E5"> to be hacked</font>

34
00:01:04,049 --> 00:01:06,780
and<font color="#E5E5E5"> leaked my files something that</font>

35
00:01:05,610 --> 00:01:10,619
happened to over a hundred million

36
00:01:06,780 --> 00:01:12,869
people just last year so in<font color="#E5E5E5"> short if we</font>

37
00:01:10,619 --> 00:01:14,430
don't<font color="#E5E5E5"> trust the storage provider who's</font>

38
00:01:12,869 --> 00:01:18,540
going<font color="#CCCCCC"> to play the job of the reference</font>

39
00:01:14,430 --> 00:01:20,490
monitor well advanced cryptography seems

40
00:01:18,540 --> 00:01:22,680
like it could help us out<font color="#CCCCCC"> here it seems</font>

41
00:01:20,490 --> 00:01:24,570
like<font color="#E5E5E5"> it could be the</font><font color="#CCCCCC"> key to working</font>

42
00:01:22,680 --> 00:01:26,340
through some of this issues it's very

43
00:01:24,570 --> 00:01:28,889
likely that even if I don't<font color="#E5E5E5"> trust my</font>

44
00:01:26,340 --> 00:01:30,869
storage provider I will trust the math

45
00:01:28,890 --> 00:01:33,479
behind advanced crypto so if I can

46
00:01:30,869 --> 00:01:35,909
encode my policy via encryption and let

47
00:01:33,479 --> 00:01:37,530
the crypto enforce it for me all<font color="#E5E5E5"> of a</font>

48
00:01:35,909 --> 00:01:40,290
<font color="#E5E5E5">sudden it's taken the weight</font><font color="#CCCCCC"> off of my</font>

49
00:01:37,530 --> 00:01:42,329
provider to give me this trusted

50
00:01:40,290 --> 00:01:44,159
reference monitor and we have

51
00:01:42,329 --> 00:01:45,630
increasingly expressive options to

52
00:01:44,159 --> 00:01:48,509
accomplish this identity based

53
00:01:45,630 --> 00:01:50,220
encryption hierarchical<font color="#E5E5E5"> ibe attribute</font>

54
00:01:48,509 --> 00:01:52,020
based encryption all through<font color="#E5E5E5"> predicates</font>

55
00:01:50,220 --> 00:01:53,670
and<font color="#E5E5E5"> functional encryption and the</font>

56
00:01:52,020 --> 00:01:57,179
literature on these often<font color="#E5E5E5"> seems to</font>

57
00:01:53,670 --> 00:01:59,340
assume in times implicitly that there

58
00:01:57,180 --> 00:02:01,469
isn't a reference monitor needed if we

59
00:01:59,340 --> 00:02:04,710
<font color="#E5E5E5">trust this crypto to enforce our</font>

60
00:02:01,469 --> 00:02:06,030
policies well this<font color="#CCCCCC"> works great when the</font>

61
00:02:04,710 --> 00:02:07,740
state of<font color="#E5E5E5"> the system is fairly static</font>

62
00:02:06,030 --> 00:02:10,318
files aren't edited very often the

63
00:02:07,740 --> 00:02:12,329
policy doesn't change that much but<font color="#E5E5E5"> what</font>

64
00:02:10,318 --> 00:02:13,089
I'm going<font color="#CCCCCC"> to</font><font color="#E5E5E5"> show today is that</font><font color="#CCCCCC"> there</font>

65
00:02:12,330 --> 00:02:14,739
are costs

66
00:02:13,090 --> 00:02:17,290
of using<font color="#E5E5E5"> advanced crypto that are unique</font>

67
00:02:14,739 --> 00:02:19,569
to dynamic settings scenarios where I'm

68
00:02:17,290 --> 00:02:21,819
<font color="#E5E5E5">editing files a lot scenarios where I'm</font>

69
00:02:19,569 --> 00:02:23,530
revoking accesses and things like that

70
00:02:21,819 --> 00:02:25,329
<font color="#E5E5E5">so if the policy is changing or the</font>

71
00:02:23,530 --> 00:02:26,890
files are being edited a lot it's

72
00:02:25,330 --> 00:02:28,120
unclear<font color="#CCCCCC"> what the cost of using advanced</font>

73
00:02:26,890 --> 00:02:31,298
crypt are going to be and so that's what

74
00:02:28,120 --> 00:02:33,099
<font color="#E5E5E5">we're investigating in this work to</font><font color="#CCCCCC"> give</font>

75
00:02:31,299 --> 00:02:35,019
a brief overview of<font color="#E5E5E5"> the remainder</font><font color="#CCCCCC"> of the</font>

76
00:02:33,099 --> 00:02:37,060
<font color="#E5E5E5">talk we're going to</font><font color="#CCCCCC"> start by</font><font color="#E5E5E5"> looking at</font>

77
00:02:35,019 --> 00:02:39,220
<font color="#E5E5E5">a construction for enforcing access</font>

78
00:02:37,060 --> 00:02:40,959
controls using identity based encryption

79
00:02:39,220 --> 00:02:42,190
and then we're going to talk about<font color="#E5E5E5"> some</font>

80
00:02:40,959 --> 00:02:44,290
of<font color="#E5E5E5"> the issues with that strawman</font>

81
00:02:42,190 --> 00:02:46,630
construction to motivate a better

82
00:02:44,290 --> 00:02:49,540
<font color="#E5E5E5">construction and at times we're going to</font>

83
00:02:46,630 --> 00:02:51,340
be making security concessions for the

84
00:02:49,540 --> 00:02:53,980
best possible efficiency we're going to

85
00:02:51,340 --> 00:02:56,530
try to be as optimistic as we can about

86
00:02:53,980 --> 00:02:58,390
the costs of using advanced crypto to

87
00:02:56,530 --> 00:02:59,920
enforce access control we're then going

88
00:02:58,390 --> 00:03:01,540
to<font color="#E5E5E5"> evaluate the cost of using that</font>

89
00:02:59,920 --> 00:03:03,220
construction and talk about<font color="#E5E5E5"> where it</font>

90
00:03:01,540 --> 00:03:06,239
will go<font color="#E5E5E5"> where we'll</font><font color="#CCCCCC"> go next in terms</font><font color="#E5E5E5"> of</font>

91
00:03:03,220 --> 00:03:08,290
research<font color="#E5E5E5"> to</font><font color="#CCCCCC"> help make this more feasible</font>

92
00:03:06,239 --> 00:03:10,000
the system model that we're operating

93
00:03:08,290 --> 00:03:11,349
within includes an organization<font color="#CCCCCC"> that</font>

94
00:03:10,000 --> 00:03:13,629
wants to outsource its files to<font color="#E5E5E5"> the</font>

95
00:03:11,349 --> 00:03:15,340
cloud that has administrators who would

96
00:03:13,629 --> 00:03:17,319
like to update this policy as time goes

97
00:03:15,340 --> 00:03:19,389
on as well as regular users who are

98
00:03:17,319 --> 00:03:21,220
<font color="#E5E5E5">going to have file accesses and we have</font>

99
00:03:19,389 --> 00:03:23,260
a<font color="#E5E5E5"> couple of really simple goals for</font>

100
00:03:21,220 --> 00:03:25,750
functionality here we want to enforce

101
00:03:23,260 --> 00:03:27,310
common<font color="#E5E5E5"> access control policies we want</font>

102
00:03:25,750 --> 00:03:29,560
the organization to be<font color="#E5E5E5"> able to keep the</font>

103
00:03:27,310 --> 00:03:31,420
same type<font color="#CCCCCC"> of policy it's been using we</font>

104
00:03:29,560 --> 00:03:34,060
want to allow both read and write

105
00:03:31,420 --> 00:03:36,458
accesses and we want to be able to allow

106
00:03:34,060 --> 00:03:38,170
policy changes including importantly

107
00:03:36,459 --> 00:03:41,919
revocations we want to be able to take

108
00:03:38,170 --> 00:03:43,660
access away from users if necessary so

109
00:03:41,919 --> 00:03:45,760
that's<font color="#E5E5E5"> it those are our main goals here</font>

110
00:03:43,660 --> 00:03:49,030
in supporting access controls on the

111
00:03:45,760 --> 00:03:50,500
cloud within this system model in

112
00:03:49,030 --> 00:03:52,389
<font color="#E5E5E5">particular we're</font><font color="#CCCCCC"> going to be enforcing</font>

113
00:03:50,500 --> 00:03:53,500
role based access control or arbok we

114
00:03:52,389 --> 00:03:55,120
want to be able to enforce existing

115
00:03:53,500 --> 00:03:57,099
policies and so we're going to be

116
00:03:55,120 --> 00:03:59,680
looking at the most common<font color="#E5E5E5"> enterprise</font>

117
00:03:57,099 --> 00:04:02,230
access control system in this<font color="#CCCCCC"> system</font>

118
00:03:59,680 --> 00:04:03,519
will have a set of users a set<font color="#E5E5E5"> of</font>

119
00:04:02,230 --> 00:04:05,018
permissions which we can think<font color="#E5E5E5"> of for</font>

120
00:04:03,519 --> 00:04:07,540
the purposes of this talk is a set of

121
00:04:05,019 --> 00:04:08,769
file accesses a set of roles that are

122
00:04:07,540 --> 00:04:11,410
going<font color="#E5E5E5"> to</font><font color="#CCCCCC"> act as a</font><font color="#E5E5E5"> level of indirection</font>

123
00:04:08,769 --> 00:04:13,810
between the users and file accesses and

124
00:04:11,410 --> 00:04:16,149
users will be assigned<font color="#E5E5E5"> to roles though</font>

125
00:04:13,810 --> 00:04:18,839
belong to roles and the you<font color="#CCCCCC"> our relation</font>

126
00:04:16,149 --> 00:04:21,130
will represent the user role binding

127
00:04:18,839 --> 00:04:23,109
accesses will then be granted to roles

128
00:04:21,130 --> 00:04:26,169
and the PA relation will represent the

129
00:04:23,110 --> 00:04:26,660
permission role binding and a user can

130
00:04:26,169 --> 00:04:28,940
access a

131
00:04:26,660 --> 00:04:30,260
file if she<font color="#E5E5E5"> is a member of a role which</font>

132
00:04:28,940 --> 00:04:31,640
has been<font color="#CCCCCC"> granted access</font><font color="#E5E5E5"> to the</font>

133
00:04:30,260 --> 00:04:36,230
permission in question access to the

134
00:04:31,640 --> 00:04:37,610
file that she's trying<font color="#E5E5E5"> to access so</font>

135
00:04:36,230 --> 00:04:40,060
let's take a look<font color="#CCCCCC"> at a strawman</font>

136
00:04:37,610 --> 00:04:42,980
construction of how we could represent

137
00:04:40,060 --> 00:04:45,230
<font color="#CCCCCC">Auerbach enforce arbok using identity</font>

138
00:04:42,980 --> 00:04:47,060
based encryption let's bring<font color="#E5E5E5"> back the</font>

139
00:04:45,230 --> 00:04:50,570
right half of that arbok example here

140
00:04:47,060 --> 00:04:53,120
the PA relation we can grant file

141
00:04:50,570 --> 00:04:56,150
accesses to a roll using identity based

142
00:04:53,120 --> 00:04:59,180
encryption by encrypting the file to a

143
00:04:56,150 --> 00:05:01,880
shared<font color="#CCCCCC"> role identity if a number of</font>

144
00:04:59,180 --> 00:05:03,440
<font color="#CCCCCC">users share this identity we can encrypt</font>

145
00:05:01,880 --> 00:05:05,659
this file to that role and<font color="#CCCCCC"> then all of</font>

146
00:05:03,440 --> 00:05:10,190
those users will be able to<font color="#E5E5E5"> access</font><font color="#CCCCCC"> that</font>

147
00:05:05,660 --> 00:05:13,450
file so<font color="#CCCCCC"> we can in this case encrypt file</font>

148
00:05:10,190 --> 00:05:16,250
one to the shared identity roll one and

149
00:05:13,450 --> 00:05:17,840
encrypt file to to the role identities

150
00:05:16,250 --> 00:05:19,130
r1 and r2 it's important to note<font color="#CCCCCC"> here</font>

151
00:05:17,840 --> 00:05:21,590
that that means we have to encrypt this

152
00:05:19,130 --> 00:05:23,870
file twice we have to make<font color="#CCCCCC"> sure that</font>

153
00:05:21,590 --> 00:05:25,719
both users<font color="#CCCCCC"> enroll one and users enrolled</font>

154
00:05:23,870 --> 00:05:27,920
two will be able<font color="#E5E5E5"> to access this file</font>

155
00:05:25,720 --> 00:05:30,710
well now we<font color="#CCCCCC"> have to distribute these</font>

156
00:05:27,920 --> 00:05:33,530
roles key role keys excuse me to users

157
00:05:30,710 --> 00:05:35,390
in that role we can<font color="#CCCCCC"> do that will bring</font>

158
00:05:33,530 --> 00:05:37,099
back the<font color="#E5E5E5"> you</font><font color="#CCCCCC"> our side of the our box</font>

159
00:05:35,390 --> 00:05:40,669
stay here we can do that by encrypting

160
00:05:37,100 --> 00:05:42,530
these keys as key bundles to their

161
00:05:40,670 --> 00:05:45,890
individual identities so I can encrypt

162
00:05:42,530 --> 00:05:50,659
the private key for identity roll one to

163
00:05:45,890 --> 00:05:52,640
the identity for user<font color="#E5E5E5"> a similarly user B</font>

164
00:05:50,660 --> 00:05:55,460
<font color="#CCCCCC">should have access</font><font color="#E5E5E5"> to the private keys</font>

165
00:05:52,640 --> 00:05:58,330
for roles 1 and 2 and C should have

166
00:05:55,460 --> 00:06:01,370
<font color="#CCCCCC">access to the private key for roll</font><font color="#E5E5E5"> too</font>

167
00:05:58,330 --> 00:06:03,770
so now if user<font color="#E5E5E5"> a wants to access file</font>

168
00:06:01,370 --> 00:06:06,260
one for instance user I will download

169
00:06:03,770 --> 00:06:08,150
the key bundle the role key to get

170
00:06:06,260 --> 00:06:10,219
<font color="#CCCCCC">access to the private key for roll one</font>

171
00:06:08,150 --> 00:06:12,200
which has been<font color="#CCCCCC"> granted to them they'll</font>

172
00:06:10,220 --> 00:06:13,850
then use that role key to decrypt the

173
00:06:12,200 --> 00:06:17,659
contents of file one which is encrypted

174
00:06:13,850 --> 00:06:19,190
using the identity for roll one so in a

175
00:06:17,660 --> 00:06:21,290
static scenario this seems<font color="#CCCCCC"> like it works</font>

176
00:06:19,190 --> 00:06:22,460
really<font color="#E5E5E5"> well I can represent this state</font>

177
00:06:21,290 --> 00:06:25,430
everyone can access the things they're

178
00:06:22,460 --> 00:06:28,280
supposed to be<font color="#CCCCCC"> able to but what</font><font color="#E5E5E5"> happens</font>

179
00:06:25,430 --> 00:06:31,550
when things start to change for instance

180
00:06:28,280 --> 00:06:34,250
how can see<font color="#E5E5E5"> users see update the</font>

181
00:06:31,550 --> 00:06:38,240
contents of file to given that<font color="#CCCCCC"> it's</font>

182
00:06:34,250 --> 00:06:39,630
accessible to users and other roles how

183
00:06:38,240 --> 00:06:41,850
do<font color="#E5E5E5"> we enforce that only</font>

184
00:06:39,630 --> 00:06:44,040
users a and<font color="#E5E5E5"> B are allowed</font><font color="#CCCCCC"> to write to</font>

185
00:06:41,850 --> 00:06:46,350
file one in identity based encryption

186
00:06:44,040 --> 00:06:47,820
anyone who knows an identity can encrypt

187
00:06:46,350 --> 00:06:50,160
to that identity so how do we enforce

188
00:06:47,820 --> 00:06:51,510
that these users can't overwrite files

189
00:06:50,160 --> 00:06:56,670
that they're<font color="#E5E5E5"> not meant to be able to</font>

190
00:06:51,510 --> 00:06:59,940
edit and finally how do we revoke be

191
00:06:56,670 --> 00:07:02,610
from<font color="#E5E5E5"> role are to how do we take accesses</font>

192
00:06:59,940 --> 00:07:05,460
away given that this<font color="#CCCCCC"> users likely</font>

193
00:07:02,610 --> 00:07:07,920
cashing these<font color="#CCCCCC"> keys locally be could</font><font color="#E5E5E5"> be</font>

194
00:07:05,460 --> 00:07:10,169
saving the private key for<font color="#CCCCCC"> r2 on his</font>

195
00:07:07,920 --> 00:07:13,800
machine how do we revoke access is given

196
00:07:10,170 --> 00:07:15,270
that<font color="#E5E5E5"> that's a possibility so given these</font>

197
00:07:13,800 --> 00:07:17,700
issues with the strawman construction

198
00:07:15,270 --> 00:07:23,099
we're going to look at fixing these

199
00:07:17,700 --> 00:07:27,090
issues and accommodating um a dynamic

200
00:07:23,100 --> 00:07:28,800
scenario using<font color="#E5E5E5"> a different construction</font>

201
00:07:27,090 --> 00:07:30,179
it's important to<font color="#CCCCCC"> reiterate that as we</font>

202
00:07:28,800 --> 00:07:32,370
develop this construction we're making

203
00:07:30,180 --> 00:07:35,190
concessions to make sure that we're

204
00:07:32,370 --> 00:07:38,760
being optimistic about the costs we want

205
00:07:35,190 --> 00:07:40,469
to favor efficiency in order to get in a

206
00:07:38,760 --> 00:07:43,140
sense a lower bound on<font color="#CCCCCC"> the cost of</font>

207
00:07:40,470 --> 00:07:45,180
supporting access control using advanced

208
00:07:43,140 --> 00:07:46,289
cryptography so we're going to choose

209
00:07:45,180 --> 00:07:48,540
efficiency<font color="#CCCCCC"> over the best possible</font>

210
00:07:46,290 --> 00:07:53,010
security and<font color="#CCCCCC"> we'll revisit</font><font color="#E5E5E5"> tightening up</font>

211
00:07:48,540 --> 00:07:54,120
those assumptions later on so the first

212
00:07:53,010 --> 00:07:55,560
thing<font color="#E5E5E5"> is I'm going to bring back the</font>

213
00:07:54,120 --> 00:07:57,180
role keys that we had before and I'm

214
00:07:55,560 --> 00:07:59,340
going<font color="#CCCCCC"> to</font><font color="#E5E5E5"> look at adjustments that we can</font>

215
00:07:57,180 --> 00:08:02,820
make to the<font color="#E5E5E5"> storage of files to enable</font>

216
00:07:59,340 --> 00:08:04,320
users to write to those<font color="#E5E5E5"> files the first</font>

217
00:08:02,820 --> 00:08:06,090
thing<font color="#E5E5E5"> is that we're going to</font><font color="#CCCCCC"> use</font><font color="#E5E5E5"> hybrid</font>

218
00:08:04,320 --> 00:08:08,040
cryptography we're going to encrypt the

219
00:08:06,090 --> 00:08:10,590
files with a random symmetric key and

220
00:08:08,040 --> 00:08:12,120
then use<font color="#E5E5E5"> ibe to encrypt those symmetric</font>

221
00:08:10,590 --> 00:08:14,849
keys to the roles that<font color="#E5E5E5"> should have</font>

222
00:08:12,120 --> 00:08:16,410
access<font color="#E5E5E5"> to them now we no longer need</font>

223
00:08:14,850 --> 00:08:19,290
multiple copies of<font color="#E5E5E5"> the file we have only</font>

224
00:08:16,410 --> 00:08:22,200
one<font color="#CCCCCC"> copy of file f2 here and we have</font><font color="#E5E5E5"> two</font>

225
00:08:19,290 --> 00:08:26,310
copies of the key used to decrypt file

226
00:08:22,200 --> 00:08:28,200
f2 we also don't need to ibe encrypt

227
00:08:26,310 --> 00:08:30,210
large data we don't have to encrypt the

228
00:08:28,200 --> 00:08:32,159
entire file using this very expensive

229
00:08:30,210 --> 00:08:36,210
advanced crypto we can take advantage of

230
00:08:32,159 --> 00:08:38,250
faster symmetric key crypto and finally

231
00:08:36,210 --> 00:08:39,870
updates are much simpler now if user c

232
00:08:38,250 --> 00:08:42,090
wants to write to file<font color="#CCCCCC"> to it's as simple</font>

233
00:08:39,870 --> 00:08:44,610
as<font color="#E5E5E5"> rien</font><font color="#CCCCCC"> krypton the new file and</font>

234
00:08:42,090 --> 00:08:46,590
uploading it here and replacing the

235
00:08:44,610 --> 00:08:47,940
contents of<font color="#E5E5E5"> F to the user doesn't have</font>

236
00:08:46,590 --> 00:08:49,160
to worry about what other<font color="#E5E5E5"> roles have</font>

237
00:08:47,940 --> 00:08:51,360
access they don't have to worry about

238
00:08:49,160 --> 00:08:53,719
replacing multiple copies they just

239
00:08:51,360 --> 00:08:56,970
upload a replacement to this file

240
00:08:53,720 --> 00:08:58,770
we also note that the file key metadata

241
00:08:56,970 --> 00:09:00,270
now is going<font color="#CCCCCC"> to specify what type of</font>

242
00:08:58,770 --> 00:09:03,529
access the user has do they have

243
00:09:00,270 --> 00:09:06,329
read-only access or read/write access

244
00:09:03,529 --> 00:09:09,779
this is going to<font color="#E5E5E5"> allow us</font><font color="#CCCCCC"> to check</font>

245
00:09:06,330 --> 00:09:11,130
whether<font color="#E5E5E5"> or not a right is allowed well</font>

246
00:09:09,779 --> 00:09:13,320
now there's another<font color="#E5E5E5"> level of indirection</font>

247
00:09:11,130 --> 00:09:15,000
here if user a wants to<font color="#E5E5E5"> access file one</font>

248
00:09:13,320 --> 00:09:17,250
they first have to download the<font color="#E5E5E5"> roll key</font>

249
00:09:15,000 --> 00:09:19,440
as before use that role key to decrypt

250
00:09:17,250 --> 00:09:22,589
the symmetric key for<font color="#CCCCCC"> that specific file</font>

251
00:09:19,440 --> 00:09:25,980
use that symmetric<font color="#E5E5E5"> key to decrypt the</font>

252
00:09:22,589 --> 00:09:28,050
file but by introducing a minimal

253
00:09:25,980 --> 00:09:30,000
reference monitor who's<font color="#E5E5E5"> going to check</font>

254
00:09:28,050 --> 00:09:32,579
some<font color="#E5E5E5"> identity based signature some IDs</font>

255
00:09:30,000 --> 00:09:35,100
signatures we can make<font color="#CCCCCC"> sure that rights</font>

256
00:09:32,580 --> 00:09:37,650
are only permitted if they are<font color="#E5E5E5"> being</font>

257
00:09:35,100 --> 00:09:39,810
done by a user who's a member of a<font color="#E5E5E5"> role</font>

258
00:09:37,650 --> 00:09:42,600
who<font color="#CCCCCC"> is granted read write permission to</font>

259
00:09:39,810 --> 00:09:44,550
this file so when I want to upload a

260
00:09:42,600 --> 00:09:46,680
file update I<font color="#CCCCCC"> have to sign that using</font>

261
00:09:44,550 --> 00:09:48,300
IBS and the minimal reference monitor

262
00:09:46,680 --> 00:09:50,729
will check that that signature is valid

263
00:09:48,300 --> 00:09:52,079
and<font color="#E5E5E5"> that the right is allowed now also</font>

264
00:09:50,730 --> 00:09:53,880
note that all of these tuples are

265
00:09:52,080 --> 00:09:55,560
actually going to<font color="#E5E5E5"> be digitally</font><font color="#CCCCCC"> signed</font>

266
00:09:53,880 --> 00:09:59,700
with IBS but I've suppressed that

267
00:09:55,560 --> 00:10:01,319
notation here for simplicity<font color="#CCCCCC"> all right</font>

268
00:09:59,700 --> 00:10:03,750
so now we can<font color="#E5E5E5"> do rights we can enforce</font>

269
00:10:01,320 --> 00:10:06,450
that only certain users can write to a

270
00:10:03,750 --> 00:10:08,370
file but we<font color="#E5E5E5"> still don't have a simple</font>

271
00:10:06,450 --> 00:10:10,050
way to support revocation in the

272
00:10:08,370 --> 00:10:12,089
<font color="#E5E5E5">scenario</font><font color="#CCCCCC"> that we're assuming these users</font>

273
00:10:10,050 --> 00:10:13,859
could be cashing keys what we're going

274
00:10:12,089 --> 00:10:15,600
to do to handle this is use key

275
00:10:13,860 --> 00:10:18,920
versioning we're first will first look

276
00:10:15,600 --> 00:10:21,480
at versioning for file keys when we're

277
00:10:18,920 --> 00:10:24,120
encrypting our files now we'll specify

278
00:10:21,480 --> 00:10:28,050
which version of<font color="#E5E5E5"> the key for this file</font>

279
00:10:24,120 --> 00:10:29,790
was used to encrypt this file similarly

280
00:10:28,050 --> 00:10:31,770
in our file key bundles will also

281
00:10:29,790 --> 00:10:36,240
specify what version of<font color="#E5E5E5"> the key is</font>

282
00:10:31,770 --> 00:10:37,890
contained in this bundle so now when a

283
00:10:36,240 --> 00:10:38,910
user wants to decrypt the file they'll

284
00:10:37,890 --> 00:10:41,220
have to<font color="#E5E5E5"> make sure that they get the</font>

285
00:10:38,910 --> 00:10:42,839
correct key bundle depending<font color="#CCCCCC"> on</font><font color="#E5E5E5"> the</font>

286
00:10:41,220 --> 00:10:45,330
version and we want<font color="#E5E5E5"> when we want to</font>

287
00:10:42,839 --> 00:10:48,209
<font color="#E5E5E5">revoke access to a file from a role will</font>

288
00:10:45,330 --> 00:10:49,560
generate a new file key encrypt it to

289
00:10:48,209 --> 00:10:51,979
all the<font color="#E5E5E5"> roles who should continue</font><font color="#CCCCCC"> to</font>

290
00:10:49,560 --> 00:10:54,680
have access and then upload all of those

291
00:10:51,980 --> 00:10:56,700
adjusted key bundles<font color="#CCCCCC"> onto the</font><font color="#E5E5E5"> the server</font>

292
00:10:54,680 --> 00:10:59,729
so for<font color="#E5E5E5"> instance here if I wanted to</font>

293
00:10:56,700 --> 00:11:01,650
revoke<font color="#E5E5E5"> role ones access to</font><font color="#CCCCCC"> file to this</font>

294
00:10:59,730 --> 00:11:03,060
is the tuple<font color="#CCCCCC"> that I want to delete but</font>

295
00:11:01,650 --> 00:11:05,550
deleting it here isn't good enough the

296
00:11:03,060 --> 00:11:07,439
user could be storing the contents<font color="#E5E5E5"> of</font>

297
00:11:05,550 --> 00:11:09,120
the key and can continue to

298
00:11:07,440 --> 00:11:11,700
download<font color="#E5E5E5"> and decrypt this file as it</font>

299
00:11:09,120 --> 00:11:14,880
changes through the future so instead

300
00:11:11,700 --> 00:11:18,810
we're going<font color="#E5E5E5"> to purge</font><font color="#CCCCCC"> that and then rekey</font>

301
00:11:14,880 --> 00:11:20,550
the file replacing this copy<font color="#E5E5E5"> of the file</font>

302
00:11:18,810 --> 00:11:23,430
key for<font color="#E5E5E5"> role too so that role too can</font>

303
00:11:20,550 --> 00:11:25,380
continue to access but roll one no

304
00:11:23,430 --> 00:11:28,079
longer<font color="#CCCCCC"> does have access we would also</font>

305
00:11:25,380 --> 00:11:29,760
<font color="#CCCCCC">like for</font><font color="#E5E5E5"> this file the file contents</font>

306
00:11:28,080 --> 00:11:31,200
themselves to be re-encrypted but we're

307
00:11:29,760 --> 00:11:34,260
not going<font color="#CCCCCC"> to do that on the spot we're</font>

308
00:11:31,200 --> 00:11:35,730
going to re-encrypt lazily on the next

309
00:11:34,260 --> 00:11:37,260
<font color="#E5E5E5">right the next</font><font color="#CCCCCC"> user who's going to</font>

310
00:11:35,730 --> 00:11:39,600
<font color="#CCCCCC">upload a copy of this file they'll</font>

311
00:11:37,260 --> 00:11:40,980
encrypt that with the new key so users

312
00:11:39,600 --> 00:11:42,510
<font color="#CCCCCC">know which key to use if there are</font>

313
00:11:40,980 --> 00:11:44,400
multiple<font color="#E5E5E5"> copies of the key on the server</font>

314
00:11:42,510 --> 00:11:47,370
and<font color="#CCCCCC"> the newest</font><font color="#E5E5E5"> one is the one</font><font color="#CCCCCC"> that's</font>

315
00:11:44,400 --> 00:11:49,500
always used<font color="#E5E5E5"> to encrypt and the the user</font>

316
00:11:47,370 --> 00:11:50,970
who cashes keys now can't get anything

317
00:11:49,500 --> 00:11:54,390
that they couldn't have fully download

318
00:11:50,970 --> 00:11:55,800
it and kept a copy of any way we're

319
00:11:54,390 --> 00:11:57,900
going<font color="#E5E5E5"> to do a similar system going to</font>

320
00:11:55,800 --> 00:12:00,209
use a<font color="#E5E5E5"> similar system for roll identities</font>

321
00:11:57,900 --> 00:12:01,980
and that will version each roll identity

322
00:12:00,210 --> 00:12:03,690
and then<font color="#CCCCCC"> anytime we need to remove a</font>

323
00:12:01,980 --> 00:12:05,070
user from a role will generate a new

324
00:12:03,690 --> 00:12:07,080
<font color="#E5E5E5">version of the roll identity and</font>

325
00:12:05,070 --> 00:12:09,600
corresponding roll key and distribute

326
00:12:07,080 --> 00:12:11,220
those only<font color="#E5E5E5"> to the remaining members so</font>

327
00:12:09,600 --> 00:12:12,900
for instance<font color="#E5E5E5"> if I'm removing be from our</font>

328
00:12:11,220 --> 00:12:14,610
to hear again this is the tuple I'd like

329
00:12:12,900 --> 00:12:16,410
to delete but I can't simply delete it

330
00:12:14,610 --> 00:12:18,900
because be could be cashing the keys

331
00:12:16,410 --> 00:12:21,150
i'll reupload another version<font color="#E5E5E5"> of this</font>

332
00:12:18,900 --> 00:12:23,220
role identity private key encrypted to

333
00:12:21,150 --> 00:12:28,709
the identity see the only user who still

334
00:12:23,220 --> 00:12:29,340
has access to this role<font color="#CCCCCC"> alright so</font>

335
00:12:28,710 --> 00:12:33,720
that's<font color="#E5E5E5"> how we're going to handle</font>

336
00:12:29,340 --> 00:12:36,570
revocations in<font color="#E5E5E5"> this system so from there</font>

337
00:12:33,720 --> 00:12:37,710
we<font color="#CCCCCC"> can accomplish all those goals of the</font>

338
00:12:36,570 --> 00:12:39,210
system model that we talked about<font color="#CCCCCC"> a</font>

339
00:12:37,710 --> 00:12:41,250
couple slides ago and in places we've

340
00:12:39,210 --> 00:12:44,820
made concessions like using lazy

341
00:12:41,250 --> 00:12:46,560
revocation but still managing this is

342
00:12:44,820 --> 00:12:47,430
quite complex and obviously<font color="#E5E5E5"> I can't go</font>

343
00:12:46,560 --> 00:12:49,020
<font color="#E5E5E5">through all the</font><font color="#CCCCCC"> details of</font><font color="#E5E5E5"> this</font>

344
00:12:47,430 --> 00:12:50,699
construction here but I want<font color="#E5E5E5"> to</font>

345
00:12:49,020 --> 00:12:52,079
highlight just<font color="#E5E5E5"> one command and even this</font>

346
00:12:50,700 --> 00:12:53,520
one I don't<font color="#E5E5E5"> expect you to be</font><font color="#CCCCCC"> able to</font>

347
00:12:52,080 --> 00:12:55,530
read<font color="#E5E5E5"> that and internalize all of the</font>

348
00:12:53,520 --> 00:12:57,210
notation on the spot but<font color="#E5E5E5"> I want to point</font>

349
00:12:55,530 --> 00:12:59,430
out<font color="#E5E5E5"> a couple of</font><font color="#CCCCCC"> things there are two</font>

350
00:12:57,210 --> 00:13:03,260
situations here one where we're revoking

351
00:12:59,430 --> 00:13:06,630
only write access and leaving the<font color="#CCCCCC"> the</font>

352
00:13:03,260 --> 00:13:09,870
user to have read-only access in which

353
00:13:06,630 --> 00:13:12,360
case we download the file key tuple we

354
00:13:09,870 --> 00:13:13,890
generate the new version the one that's

355
00:13:12,360 --> 00:13:15,660
now specifies read-only as the

356
00:13:13,890 --> 00:13:19,319
permission we re encrypt it resign at

357
00:13:15,660 --> 00:13:21,329
reuploaded however if we're revoked

358
00:13:19,320 --> 00:13:23,670
all<font color="#E5E5E5"> access this is the scenario in which</font>

359
00:13:21,330 --> 00:13:26,130
we need to rekey swill<font color="#CCCCCC"> rekey the file</font>

360
00:13:23,670 --> 00:13:27,510
generating a<font color="#CCCCCC"> new file key encrypting</font><font color="#E5E5E5"> it</font>

361
00:13:26,130 --> 00:13:29,670
to all<font color="#CCCCCC"> the remaining roles and uploading</font>

362
00:13:27,510 --> 00:13:31,980
it on to the server and<font color="#E5E5E5"> when we're</font>

363
00:13:29,670 --> 00:13:33,449
revoking a user not just revoking one

364
00:13:31,980 --> 00:13:35,310
permission from one role if we're

365
00:13:33,450 --> 00:13:37,320
removing user from<font color="#E5E5E5"> a role entirely will</font>

366
00:13:35,310 --> 00:13:40,739
actually have to do this<font color="#E5E5E5"> for every file</font>

367
00:13:37,320 --> 00:13:42,660
that the role could access that<font color="#CCCCCC"> way the</font>

368
00:13:40,740 --> 00:13:44,550
user could be cashing not only<font color="#E5E5E5"> role keys</font>

369
00:13:42,660 --> 00:13:48,600
but also all<font color="#CCCCCC"> the file keys for the role</font>

370
00:13:44,550 --> 00:13:49,740
while<font color="#E5E5E5"> they were a member</font><font color="#CCCCCC"> all right so</font>

371
00:13:48,600 --> 00:13:51,270
now that we had our construction we

372
00:13:49,740 --> 00:13:53,190
needed to evaluate it and we wanted<font color="#CCCCCC"> to</font>

373
00:13:51,270 --> 00:13:55,140
look<font color="#E5E5E5"> at a wide range of both datasets</font>

374
00:13:53,190 --> 00:13:57,300
and administrative behavior we're going

375
00:13:55,140 --> 00:13:59,640
<font color="#E5E5E5">to use an actor based simulation to</font>

376
00:13:57,300 --> 00:14:00,750
analyze this and our administrative

377
00:13:59,640 --> 00:14:02,460
behavior here is<font color="#E5E5E5"> modeled</font><font color="#CCCCCC"> by a</font>

378
00:14:00,750 --> 00:14:06,120
<font color="#CCCCCC">continuous-time markov chain where we</font>

379
00:14:02,460 --> 00:14:08,690
have<font color="#E5E5E5"> parameters that allow us to look at</font>

380
00:14:06,120 --> 00:14:10,770
the effects of different amounts of

381
00:14:08,690 --> 00:14:13,620
revocations different frequencies of

382
00:14:10,770 --> 00:14:16,620
revocation actions we also utilized

383
00:14:13,620 --> 00:14:18,180
real-life arbok<font color="#CCCCCC"> datasets these are</font>

384
00:14:16,620 --> 00:14:19,650
widely cited in<font color="#CCCCCC"> the role mining</font>

385
00:14:18,180 --> 00:14:22,920
literature and there are a wide variety

386
00:14:19,650 --> 00:14:24,720
of kind<font color="#E5E5E5"> of shapes of policy of initial</font>

387
00:14:22,920 --> 00:14:26,280
<font color="#E5E5E5">states here both user sparse and user</font>

388
00:14:24,720 --> 00:14:30,870
dense both permission sparse and

389
00:14:26,280 --> 00:14:32,250
permissions and so on<font color="#CCCCCC"> so we executed</font>

390
00:14:30,870 --> 00:14:34,050
<font color="#E5E5E5">this simulation and we recorded the</font>

391
00:14:32,250 --> 00:14:36,060
counts<font color="#E5E5E5"> of operations the amount of data</font>

392
00:14:34,050 --> 00:14:37,969
transferred<font color="#E5E5E5"> and so on and what was</font>

393
00:14:36,060 --> 00:14:40,219
immediately<font color="#E5E5E5"> clear is the costs of</font>

394
00:14:37,970 --> 00:14:42,870
revocations this can cost up to

395
00:14:40,220 --> 00:14:45,210
thousands of metadata tuples needing to

396
00:14:42,870 --> 00:14:48,440
be regenerated in this in this scenario

397
00:14:45,210 --> 00:14:51,480
<font color="#E5E5E5">that means download verify the signature</font>

398
00:14:48,440 --> 00:14:53,100
decrypt adjust whatever metadata you

399
00:14:51,480 --> 00:14:56,190
need to adjust potentially generating

400
00:14:53,100 --> 00:14:58,410
new keys re-encrypt re-sign<font color="#E5E5E5"> re-upload</font>

401
00:14:56,190 --> 00:15:00,600
all back to the server thousands of

402
00:14:58,410 --> 00:15:04,500
times before your revocation has been

403
00:15:00,600 --> 00:15:06,000
affected<font color="#CCCCCC"> in the state of the server what</font>

404
00:15:04,500 --> 00:15:07,740
we wanted to<font color="#E5E5E5"> then manipulate the</font>

405
00:15:06,000 --> 00:15:09,090
administrative behavior twist around

406
00:15:07,740 --> 00:15:10,470
those parameters a little bit and look

407
00:15:09,090 --> 00:15:12,420
at the different frequencies of

408
00:15:10,470 --> 00:15:14,490
revocation to decide how dynamic a

409
00:15:12,420 --> 00:15:17,130
system needed<font color="#E5E5E5"> to be before this posed a</font>

410
00:15:14,490 --> 00:15:18,750
problem we<font color="#CCCCCC"> found that</font><font color="#E5E5E5"> even at ten</font>

411
00:15:17,130 --> 00:15:21,420
percent costs were already starting to

412
00:15:18,750 --> 00:15:23,610
blow up even if<font color="#CCCCCC"> only ten percent of the</font>

413
00:15:21,420 --> 00:15:26,400
administrators actions are toward

414
00:15:23,610 --> 00:15:28,350
revocation the costs<font color="#E5E5E5"> are going to become</font>

415
00:15:26,400 --> 00:15:29,850
a problem already so we've tried to

416
00:15:28,350 --> 00:15:31,440
<font color="#E5E5E5">engineer the system to make it as</font>

417
00:15:29,850 --> 00:15:32,220
feasible as possible sometimes at the

418
00:15:31,440 --> 00:15:35,160
expense

419
00:15:32,220 --> 00:15:36,630
of relaxing our security model but even

420
00:15:35,160 --> 00:15:38,219
<font color="#E5E5E5">only ten percent</font><font color="#CCCCCC"> of the administrators</font>

421
00:15:36,630 --> 00:15:41,939
actions being revocations makes this

422
00:15:38,220 --> 00:15:43,290
likely impractical well what if<font color="#CCCCCC"> we</font>

423
00:15:41,940 --> 00:15:45,320
wanted to tighten up the system<font color="#E5E5E5"> and</font>

424
00:15:43,290 --> 00:15:47,699
eliminate some of those efficiency

425
00:15:45,320 --> 00:15:49,560
optimizations we could<font color="#E5E5E5"> get</font><font color="#CCCCCC"> rid of lazy</font>

426
00:15:47,700 --> 00:15:51,720
encryption by making the administrator

427
00:15:49,560 --> 00:15:53,880
re-encrypt the files at<font color="#CCCCCC"> the</font><font color="#E5E5E5"> time of</font>

428
00:15:51,720 --> 00:15:55,890
revocation but this is going<font color="#E5E5E5"> to mean</font>

429
00:15:53,880 --> 00:15:57,780
tens or hundreds of files needed to be

430
00:15:55,890 --> 00:15:59,430
re-encrypted on the spot further

431
00:15:57,780 --> 00:16:01,290
delaying the state change taking<font color="#E5E5E5"> effect</font>

432
00:15:59,430 --> 00:16:02,790
we could weaken our trust in the

433
00:16:01,290 --> 00:16:04,920
<font color="#E5E5E5">reference monitor and we talked about</font><font color="#CCCCCC"> a</font>

434
00:16:02,790 --> 00:16:06,839
couple<font color="#CCCCCC"> of ways we</font><font color="#E5E5E5"> do</font><font color="#CCCCCC"> that in the paper</font>

435
00:16:04,920 --> 00:16:09,360
one of which includes file versioning

436
00:16:06,840 --> 00:16:10,800
but requires the reader of a file to

437
00:16:09,360 --> 00:16:13,410
download potentially many copies and

438
00:16:10,800 --> 00:16:15,839
verify a bunch of signatures we also

439
00:16:13,410 --> 00:16:18,000
looked only at ibe in the talk but in

440
00:16:15,840 --> 00:16:21,870
the paper we discuss the difficulties

441
00:16:18,000 --> 00:16:23,910
that<font color="#E5E5E5"> will x will get even larger when we</font>

442
00:16:21,870 --> 00:16:25,380
look at more expressive<font color="#E5E5E5"> advanced crypto</font>

443
00:16:23,910 --> 00:16:28,170
for instance we looked at hierarchical

444
00:16:25,380 --> 00:16:30,030
arbok using hierarchical<font color="#E5E5E5"> IDE and found</font>

445
00:16:28,170 --> 00:16:32,099
that managing<font color="#E5E5E5"> the hierarchy was very</font>

446
00:16:30,030 --> 00:16:33,630
<font color="#E5E5E5">expensive and when we looked at a back</font>

447
00:16:32,100 --> 00:16:35,910
excuse me attribute based access control

448
00:16:33,630 --> 00:16:37,200
using attribute based encryption we saw

449
00:16:35,910 --> 00:16:39,600
that<font color="#E5E5E5"> the cost would scale with the</font>

450
00:16:37,200 --> 00:16:43,170
policy and in both scenarios our crypto

451
00:16:39,600 --> 00:16:44,310
costs were increasing quite a lot well

452
00:16:43,170 --> 00:16:46,260
by studying these issues we've

453
00:16:44,310 --> 00:16:48,150
highlighted a couple of ways a couple of

454
00:16:46,260 --> 00:16:49,860
important areas<font color="#CCCCCC"> of future research to</font>

455
00:16:48,150 --> 00:16:51,569
make this practical we're working<font color="#CCCCCC"> on</font>

456
00:16:49,860 --> 00:16:53,340
<font color="#E5E5E5">advanced revocation techniques that work</font>

457
00:16:51,570 --> 00:16:55,260
on both parts of<font color="#E5E5E5"> the hybrid crypto so</font>

458
00:16:53,340 --> 00:16:56,940
that we can use something like say proxy

459
00:16:55,260 --> 00:16:58,670
<font color="#CCCCCC">lee encryption without the concern that</font>

460
00:16:56,940 --> 00:17:00,930
the user could have cashed the file keys

461
00:16:58,670 --> 00:17:02,490
we're working we're looking to reduce

462
00:17:00,930 --> 00:17:05,220
the reference monitor by using trusted

463
00:17:02,490 --> 00:17:06,930
<font color="#CCCCCC">hardware something like</font><font color="#E5E5E5"> sgx and we're</font>

464
00:17:05,220 --> 00:17:08,730
thinking<font color="#E5E5E5"> about ways we can eliminate the</font>

465
00:17:06,930 --> 00:17:12,500
cryptographic levels of indirection that

466
00:17:08,730 --> 00:17:15,750
mirror the<font color="#CCCCCC"> arbok levels of indirection</font>

467
00:17:12,500 --> 00:17:18,089
so in conclusion<font color="#CCCCCC"> we assumed a really</font>

468
00:17:15,750 --> 00:17:20,130
simple system model we looked at a mild

469
00:17:18,089 --> 00:17:21,899
amount of dynamism we made optimistic

470
00:17:20,130 --> 00:17:24,060
design choices and we showed that still

471
00:17:21,900 --> 00:17:25,860
the costs of using advanced crypto for

472
00:17:24,060 --> 00:17:27,659
access control on<font color="#E5E5E5"> an untrusted platform</font>

473
00:17:25,859 --> 00:17:29,340
are likely prohibitive highlighting the

474
00:17:27,660 --> 00:17:30,930
importance of those areas<font color="#CCCCCC"> of</font><font color="#E5E5E5"> future</font>

475
00:17:29,340 --> 00:17:32,850
research that<font color="#E5E5E5"> I mentioned in order to</font>

476
00:17:30,930 --> 00:17:33,840
<font color="#E5E5E5">make this goal achievable thank you for</font>

477
00:17:32,850 --> 00:17:36,260
<font color="#E5E5E5">your attention I'll take any questions</font>

478
00:17:33,840 --> 00:17:36,260
you<font color="#E5E5E5"> have</font>

479
00:17:43,380 --> 00:17:48,040
this may<font color="#E5E5E5"> be a silly question but it's</font>

480
00:17:46,180 --> 00:17:49,990
your<font color="#E5E5E5"> work also applicable if you don't</font>

481
00:17:48,040 --> 00:17:51,909
even<font color="#E5E5E5"> consider advanced crypto if you'd</font>

482
00:17:49,990 --> 00:17:53,740
if you do things just using somatic

483
00:17:51,910 --> 00:17:57,070
cryptography and what does it public key

484
00:17:53,740 --> 00:17:59,290
crypto actually buy you<font color="#CCCCCC"> a man sure so</font>

485
00:17:57,070 --> 00:18:01,480
publicly<font color="#CCCCCC"> in general is going to buy us</font>

486
00:17:59,290 --> 00:18:03,070
the ability to verify or<font color="#CCCCCC"> write without</font>

487
00:18:01,480 --> 00:18:04,840
<font color="#E5E5E5">the ability to read the files if we use</font>

488
00:18:03,070 --> 00:18:07,149
only symmetric key crypto then the

489
00:18:04,840 --> 00:18:09,520
server can read as long as they can

490
00:18:07,150 --> 00:18:10,990
verify so we need at least some form of

491
00:18:09,520 --> 00:18:12,520
public key and in the paper we also<font color="#CCCCCC"> talk</font>

492
00:18:10,990 --> 00:18:14,440
about investigations that used

493
00:18:12,520 --> 00:18:17,050
traditional public key crypto something

494
00:18:14,440 --> 00:18:19,420
like a<font color="#CCCCCC"> pki and found that</font><font color="#E5E5E5"> the</font>

495
00:18:17,050 --> 00:18:21,970
conclusions are largely the same that it

496
00:18:19,420 --> 00:18:23,740
neither wins the game for us<font color="#CCCCCC"> or breaks</font>

497
00:18:21,970 --> 00:18:26,530
that if we if we switch to these more

498
00:18:23,740 --> 00:18:31,450
advanced crypto so yeah we looked at

499
00:18:26,530 --> 00:18:33,550
both so I thought<font color="#E5E5E5"> that</font><font color="#CCCCCC"> was really</font><font color="#E5E5E5"> good</font>

500
00:18:31,450 --> 00:18:35,500
work I had a kind of a tan gentle

501
00:18:33,550 --> 00:18:37,480
question did<font color="#E5E5E5"> you guys think about like</font>

502
00:18:35,500 --> 00:18:38,710
audit logging at all when you do all

503
00:18:37,480 --> 00:18:40,120
this some<font color="#E5E5E5"> brie encryption you're</font>

504
00:18:38,710 --> 00:18:42,310
essentially throwing an original file

505
00:18:40,120 --> 00:18:43,810
away encrypting it and at some point

506
00:18:42,310 --> 00:18:45,909
that's either akin to somebody

507
00:18:43,810 --> 00:18:47,500
overriding file and making a new one or

508
00:18:45,910 --> 00:18:48,550
whatever but there's at some point when

509
00:18:47,500 --> 00:18:49,930
you have like<font color="#E5E5E5"> a document retention</font>

510
00:18:48,550 --> 00:18:52,210
scheme or something like that<font color="#E5E5E5"> you want</font>

511
00:18:49,930 --> 00:18:53,680
<font color="#E5E5E5">to know that a record exists and has</font>

512
00:18:52,210 --> 00:18:55,090
existed even<font color="#E5E5E5"> though it's been</font><font color="#CCCCCC"> rien</font>

513
00:18:53,680 --> 00:18:56,290
<font color="#E5E5E5">technically new file I don't know if you</font>

514
00:18:55,090 --> 00:18:57,909
guys thought<font color="#E5E5E5"> about that at all okay so</font>

515
00:18:56,290 --> 00:18:59,620
something<font color="#CCCCCC"> like a versioning system yeah</font>

516
00:18:57,910 --> 00:19:01,210
yes I'm like yeah so we looked at the

517
00:18:59,620 --> 00:19:03,070
versioning system as an alternative<font color="#CCCCCC"> to</font>

518
00:19:01,210 --> 00:19:05,110
having this reference monitor not

519
00:19:03,070 --> 00:19:08,050
necessarily<font color="#CCCCCC"> as a</font><font color="#E5E5E5"> standalone contribution</font>

520
00:19:05,110 --> 00:19:09,340
but as a way that we could take away our

521
00:19:08,050 --> 00:19:11,350
trust in the reference<font color="#E5E5E5"> monitor to</font>

522
00:19:09,340 --> 00:19:13,169
enforce that a right was allowed and

523
00:19:11,350 --> 00:19:15,699
<font color="#E5E5E5">essentially the way this works is that</font>

524
00:19:13,170 --> 00:19:19,060
we keep every single copy of the file

525
00:19:15,700 --> 00:19:20,500
some of<font color="#E5E5E5"> them will be signed and valid by</font>

526
00:19:19,060 --> 00:19:22,330
someone who is allowed to make that

527
00:19:20,500 --> 00:19:24,220
right and the user will have<font color="#E5E5E5"> to download</font>

528
00:19:22,330 --> 00:19:26,020
all of the recent versions to figure out

529
00:19:24,220 --> 00:19:27,760
which<font color="#E5E5E5"> of those is actually a valid right</font>

530
00:19:26,020 --> 00:19:29,920
so we didn't look at it<font color="#E5E5E5"> from that</font>

531
00:19:27,760 --> 00:19:31,720
perspective but we did<font color="#E5E5E5"> look at could we</font>

532
00:19:29,920 --> 00:19:36,060
use file versioning to help make the

533
00:19:31,720 --> 00:19:36,060
system<font color="#E5E5E5"> a</font><font color="#CCCCCC"> little bit more secure I guess</font>

