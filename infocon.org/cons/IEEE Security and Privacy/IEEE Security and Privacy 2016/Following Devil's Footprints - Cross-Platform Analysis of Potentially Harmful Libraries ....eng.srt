1
00:00:00,000 --> 00:00:05,520
cross-platform<font color="#E5E5E5"> analysis of potentially</font>

2
00:00:02,310 --> 00:00:08,519
<font color="#E5E5E5">harmful libraries on Android and iOS</font><font color="#CCCCCC"> so</font>

3
00:00:05,520 --> 00:00:12,719
it's a joint work with<font color="#E5E5E5"> Chinese academia</font>

4
00:00:08,519 --> 00:00:18,980
of science and<font color="#E5E5E5"> Indiana University so I</font>

5
00:00:12,719 --> 00:00:18,980
need but<font color="#CCCCCC"> to put you</font><font color="#E5E5E5"> in the next page</font>

6
00:00:28,190 --> 00:00:35,270
over here here's the second page<font color="#CCCCCC"> so</font><font color="#E5E5E5"> yeah</font>

7
00:00:32,840 --> 00:00:37,820
so we<font color="#CCCCCC"> all know that</font><font color="#E5E5E5"> potentially harmful</font>

8
00:00:35,270 --> 00:00:39,920
<font color="#CCCCCC">Apps has</font><font color="#E5E5E5"> been widely spread even in</font>

9
00:00:37,820 --> 00:00:42,920
major<font color="#E5E5E5"> markets such as Google</font><font color="#CCCCCC"> Play and</font>

10
00:00:39,920 --> 00:00:46,370
Appstore<font color="#E5E5E5"> here we avoid using</font><font color="#CCCCCC"> a term</font>

11
00:00:42,920 --> 00:00:48,860
<font color="#CCCCCC">maybe</font><font color="#E5E5E5"> cause is sometimes the</font><font color="#CCCCCC"> hard</font><font color="#E5E5E5"> to</font>

12
00:00:46,370 --> 00:00:51,440
<font color="#E5E5E5">tell whether app is malicious or not</font>

13
00:00:48,860 --> 00:00:54,379
<font color="#E5E5E5">instead we use the term potentially</font>

14
00:00:51,440 --> 00:00:57,260
harmful<font color="#E5E5E5"> is a</font><font color="#CCCCCC"> Chrome Google</font><font color="#E5E5E5"> uses for</font>

15
00:00:54,379 --> 00:01:01,370
describing applications which poses a

16
00:00:57,260 --> 00:01:03,079
great risk to users<font color="#E5E5E5"> or their data we</font>

17
00:01:01,370 --> 00:01:07,250
also found the sources<font color="#E5E5E5"> of potential</font>

18
00:01:03,079 --> 00:01:09,410
<font color="#E5E5E5">harmful behavior often libraries for</font>

19
00:01:07,250 --> 00:01:12,830
<font color="#E5E5E5">example in contaminate versions of</font>

20
00:01:09,410 --> 00:01:20,810
library<font color="#CCCCCC"> backed all a library so okay</font>

21
00:01:12,830 --> 00:01:22,810
thank you so we want to make some

22
00:01:20,810 --> 00:01:25,580
research on<font color="#CCCCCC"> this potentially harmful</font>

23
00:01:22,810 --> 00:01:29,330
<font color="#E5E5E5">libraries but it's very very</font><font color="#CCCCCC"> challenge</font>

24
00:01:25,580 --> 00:01:33,229
and it has never<font color="#E5E5E5"> been done</font><font color="#CCCCCC"> on a</font><font color="#E5E5E5"> website</font>

25
00:01:29,330 --> 00:01:36,140
<font color="#E5E5E5">so many in three reasons</font><font color="#CCCCCC"> the first</font><font color="#E5E5E5"> one</font>

26
00:01:33,229 --> 00:01:38,899
<font color="#E5E5E5">is a library phone online is mostly it's</font>

27
00:01:36,140 --> 00:01:40,910
laced latest version so usually in the

28
00:01:38,899 --> 00:01:43,220
latest version we cannot find<font color="#E5E5E5"> the</font>

29
00:01:40,910 --> 00:01:46,399
malicious code<font color="#CCCCCC"> outside</font><font color="#E5E5E5"> the potential</font>

30
00:01:43,220 --> 00:01:48,500
hung it<font color="#E5E5E5"> and if we want to find like</font>

31
00:01:46,399 --> 00:01:51,319
other parts<font color="#E5E5E5"> of code so we need to click</font>

32
00:01:48,500 --> 00:01:54,200
<font color="#E5E5E5">the apps and it's trakula</font><font color="#CCCCCC"> like a special</font>

33
00:01:51,319 --> 00:01:57,319
version<font color="#CCCCCC"> of the library</font><font color="#E5E5E5"> from it the</font>

34
00:01:54,200 --> 00:01:59,690
second reason is<font color="#E5E5E5"> on iOS side attempts to</font>

35
00:01:57,319 --> 00:02:02,149
recover<font color="#E5E5E5"> library from apps is non-trivial</font>

36
00:01:59,690 --> 00:02:04,280
<font color="#CCCCCC">it's</font><font color="#E5E5E5"> different from Android side we can</font>

37
00:02:02,149 --> 00:02:07,220
easily<font color="#E5E5E5"> get the package from like it's</font>

38
00:02:04,280 --> 00:02:10,940
cold<font color="#E5E5E5"> so and it's packed together but on</font>

39
00:02:07,220 --> 00:02:12,890
iOS side is mixed<font color="#E5E5E5"> so it's difficult a</font>

40
00:02:10,940 --> 00:02:16,130
<font color="#E5E5E5">little bit</font><font color="#CCCCCC"> difficult to do it the third</font>

41
00:02:12,890 --> 00:02:18,369
reason is has no<font color="#E5E5E5"> public system exists</font>

42
00:02:16,130 --> 00:02:21,170
you for finding iOS<font color="#E5E5E5"> potential</font><font color="#CCCCCC"> path</font><font color="#E5E5E5"> and</font>

43
00:02:18,370 --> 00:02:24,950
even<font color="#CCCCCC"> if we have found some suspicious</font>

44
00:02:21,170 --> 00:02:27,160
<font color="#CCCCCC">app so</font><font color="#E5E5E5"> with all such system is hard for</font>

45
00:02:24,950 --> 00:02:30,500
verification

46
00:02:27,160 --> 00:02:32,900
so can we design approach that can first

47
00:02:30,500 --> 00:02:34,790
<font color="#CCCCCC">Hondros i geiser android potential</font>

48
00:02:32,900 --> 00:02:38,490
<font color="#E5E5E5">harmful library with different</font><font color="#CCCCCC"> versions</font>

49
00:02:34,790 --> 00:02:42,590
<font color="#E5E5E5">and iOS style recover iOS library and</font>

50
00:02:38,490 --> 00:02:46,550
random efficiently so this is haha

51
00:02:42,590 --> 00:02:49,050
<font color="#E5E5E5">observation</font><font color="#CCCCCC"> we found a success a</font>

52
00:02:46,550 --> 00:02:52,500
significant<font color="#CCCCCC"> portion of Sur party</font>

53
00:02:49,050 --> 00:02:55,020
<font color="#CCCCCC">services to an apple users also</font><font color="#E5E5E5"> provided</font>

54
00:02:52,500 --> 00:02:59,780
it to Android users is<font color="#E5E5E5"> the data is from</font>

55
00:02:55,020 --> 00:03:03,630
<font color="#CCCCCC">source DNA and even</font><font color="#E5E5E5"> top 38 iOS libraries</font>

56
00:02:59,780 --> 00:03:05,970
<font color="#CCCCCC">95% of them have</font><font color="#E5E5E5"> Android versions so our</font>

57
00:03:03,630 --> 00:03:09,030
idea<font color="#E5E5E5"> is</font><font color="#CCCCCC"> to use</font><font color="#E5E5E5"> this Android versions</font>

58
00:03:05,970 --> 00:03:11,430
library and do a great map and to use

59
00:03:09,030 --> 00:03:13,260
this information to map your<font color="#E5E5E5"> iOS side</font>

60
00:03:11,430 --> 00:03:17,940
and to check<font color="#E5E5E5"> the potential harmful</font>

61
00:03:13,260 --> 00:03:21,950
libraries on<font color="#E5E5E5"> either side</font><font color="#CCCCCC"> iliyan we</font>

62
00:03:17,940 --> 00:03:26,100
achieve our goal<font color="#E5E5E5"> we do a great</font>

63
00:03:21,950 --> 00:03:30,079
<font color="#E5E5E5">cross-platform study 1.3 million Android</font>

64
00:03:26,100 --> 00:03:33,390
<font color="#E5E5E5">apps and 140,000 iOS apps</font>

65
00:03:30,080 --> 00:03:36,690
<font color="#CCCCCC">the study is in four step</font><font color="#E5E5E5"> the first one</font>

66
00:03:33,390 --> 00:03:40,380
is to collect Android apps<font color="#CCCCCC"> and try to</font>

67
00:03:36,690 --> 00:03:43,500
find<font color="#E5E5E5"> extracts library from it the second</font>

68
00:03:40,380 --> 00:03:46,260
one is to<font color="#CCCCCC"> check the potentially</font><font color="#E5E5E5"> harmful</font>

69
00:03:43,500 --> 00:03:50,670
<font color="#E5E5E5">library from those library that we have</font>

70
00:03:46,260 --> 00:03:55,079
for<font color="#CCCCCC"> now sort of</font><font color="#E5E5E5"> one is to do at this map</font>

71
00:03:50,670 --> 00:03:58,200
map to iOS<font color="#E5E5E5"> side and last one is remember</font>

72
00:03:55,080 --> 00:04:00,750
in a<font color="#E5E5E5"> poster is different from and</font>

73
00:03:58,200 --> 00:04:03,030
restore so it<font color="#E5E5E5"> usually have strict</font>

74
00:04:00,750 --> 00:04:05,160
working process so the potentially

75
00:04:03,030 --> 00:04:07,980
harmful<font color="#E5E5E5"> behavior from</font><font color="#CCCCCC"> Android side may</font>

76
00:04:05,160 --> 00:04:10,230
not be exactly same on iOS side<font color="#E5E5E5"> it may</font>

77
00:04:07,980 --> 00:04:13,619
be removed so we<font color="#E5E5E5"> need to do this</font>

78
00:04:10,230 --> 00:04:16,048
behavior creation and the to verify that

79
00:04:13,620 --> 00:04:20,010
<font color="#E5E5E5">the potential harmful behavior also</font>

80
00:04:16,048 --> 00:04:23,820
existing on iOS side so this<font color="#E5E5E5"> is the</font>

81
00:04:20,010 --> 00:04:27,510
<font color="#E5E5E5">first one so we try to find crack</font>

82
00:04:23,820 --> 00:04:30,180
Android apps<font color="#E5E5E5"> and do this cluster we</font>

83
00:04:27,510 --> 00:04:32,880
found a library is typically used as the

84
00:04:30,180 --> 00:04:35,310
whole package<font color="#E5E5E5"> and also</font><font color="#CCCCCC"> structure in a I</font>

85
00:04:32,880 --> 00:04:38,370
stand in a way<font color="#E5E5E5"> so we use the name</font><font color="#CCCCCC"> and</font>

86
00:04:35,310 --> 00:04:42,060
put all the packages<font color="#CCCCCC"> and having</font><font color="#E5E5E5"> a same</font>

87
00:04:38,370 --> 00:04:43,650
name<font color="#E5E5E5"> together into a group but sharing</font>

88
00:04:42,060 --> 00:04:46,200
the<font color="#E5E5E5"> same name does</font><font color="#CCCCCC"> not mean that a</font>

89
00:04:43,650 --> 00:04:46,650
<font color="#E5E5E5">package belong to the same</font><font color="#CCCCCC"> library for</font>

90
00:04:46,200 --> 00:04:49,789
example

91
00:04:46,650 --> 00:04:52,859
<font color="#E5E5E5">names like</font><font color="#CCCCCC"> ADA ADA be a basket worship</font>

92
00:04:49,790 --> 00:04:55,620
so our idea is

93
00:04:52,860 --> 00:04:57,990
you use to cluster them and use this

94
00:04:55,620 --> 00:05:01,020
package<font color="#CCCCCC"> of similarity degree PSD based</font>

95
00:04:57,990 --> 00:05:04,439
on<font color="#CCCCCC"> jacquard index it's a ratio actually</font>

96
00:05:01,020 --> 00:05:07,258
and<font color="#CCCCCC"> it's reach of the number of shear</font>

97
00:05:04,439 --> 00:05:09,539
<font color="#E5E5E5">master and the number of</font><font color="#CCCCCC"> shared message</font>

98
00:05:07,259 --> 00:05:12,449
between these two packages<font color="#E5E5E5"> and then a</font>

99
00:05:09,539 --> 00:05:16,020
<font color="#E5E5E5">measure that of these two packages then</font>

100
00:05:12,449 --> 00:05:18,870
we use this this piece<font color="#CCCCCC"> PST</font><font color="#E5E5E5"> to class</font>

101
00:05:16,020 --> 00:05:21,090
chirp libraries inside<font color="#CCCCCC"> a group and we</font>

102
00:05:18,870 --> 00:05:23,580
get the threshold to use two trainings

103
00:05:21,090 --> 00:05:25,979
<font color="#E5E5E5">at</font><font color="#CCCCCC"> 20 randomly select library</font><font color="#E5E5E5"> that has</font>

104
00:05:23,580 --> 00:05:27,840
no relation to<font color="#E5E5E5"> each other and the 20</font>

105
00:05:25,979 --> 00:05:29,580
library<font color="#E5E5E5"> together with the different</font>

106
00:05:27,840 --> 00:05:33,659
version<font color="#E5E5E5"> so we can get a threshold</font><font color="#CCCCCC"> and</font>

107
00:05:29,580 --> 00:05:36,210
<font color="#CCCCCC">doula trust her from the cluster each</font>

108
00:05:33,659 --> 00:05:40,830
cluster is the<font color="#E5E5E5"> library and it contains</font>

109
00:05:36,210 --> 00:05:44,789
several variations yep yeah we can get

110
00:05:40,830 --> 00:05:49,409
<font color="#E5E5E5">it so in the end we got 1.3 million</font>

111
00:05:44,789 --> 00:05:52,889
<font color="#E5E5E5">Android apps from it we got 763</font>

112
00:05:49,409 --> 00:05:57,300
libraries<font color="#E5E5E5"> with</font><font color="#CCCCCC"> 4912</font>

113
00:05:52,889 --> 00:06:00,029
variations then we need to check<font color="#CCCCCC"> whether</font>

114
00:05:57,300 --> 00:06:02,969
there's some potential<font color="#CCCCCC"> harmful libraries</font>

115
00:06:00,029 --> 00:06:05,460
inside<font color="#CCCCCC"> it remember we try to use</font>

116
00:06:02,969 --> 00:06:08,729
where's total remember that<font color="#E5E5E5"> was total</font>

117
00:06:05,460 --> 00:06:12,000
only<font color="#E5E5E5"> except apps it's not a library</font><font color="#CCCCCC"> so</font>

118
00:06:08,729 --> 00:06:16,080
our idea<font color="#E5E5E5"> is to</font><font color="#CCCCCC"> create a dummy app this</font>

119
00:06:12,000 --> 00:06:18,719
dummy<font color="#E5E5E5"> app only includes a</font><font color="#CCCCCC"> library and we</font>

120
00:06:16,080 --> 00:06:21,870
<font color="#E5E5E5">can use in this way useless dummy app</font>

121
00:06:18,719 --> 00:06:24,449
for like packets here if<font color="#CCCCCC"> worse total</font>

122
00:06:21,870 --> 00:06:26,430
reads the flag do you see that<font color="#E5E5E5"> this this</font>

123
00:06:24,449 --> 00:06:28,680
dummy app has some problem is a

124
00:06:26,430 --> 00:06:31,379
potentially<font color="#E5E5E5"> harmful so that means the</font>

125
00:06:28,680 --> 00:06:35,219
library<font color="#CCCCCC"> that we put it into</font><font color="#E5E5E5"> you</font><font color="#CCCCCC"> thus</font><font color="#E5E5E5"> the</font>

126
00:06:31,379 --> 00:06:37,289
time we have is a potentially harmful so

127
00:06:35,219 --> 00:06:39,509
then after<font color="#CCCCCC"> we catch this potentially</font>

128
00:06:37,289 --> 00:06:40,800
harmful library<font color="#E5E5E5"> we can</font><font color="#CCCCCC"> do this map we</font>

129
00:06:39,509 --> 00:06:43,770
met an Android potentially harmful

130
00:06:40,800 --> 00:06:46,939
library<font color="#CCCCCC"> to its iOS counterpart</font><font color="#E5E5E5"> and when</font>

131
00:06:43,770 --> 00:06:50,430
it<font color="#CCCCCC"> did the</font><font color="#E5E5E5"> potentially harmful code</font>

132
00:06:46,939 --> 00:06:52,740
however to do<font color="#E5E5E5"> this map it's not easy job</font>

133
00:06:50,430 --> 00:06:53,610
<font color="#E5E5E5">because there's a huge gap between</font><font color="#CCCCCC"> the</font>

134
00:06:52,740 --> 00:06:55,919
<font color="#E5E5E5">two platform</font>

135
00:06:53,610 --> 00:06:57,990
here's a left here<font color="#CCCCCC"> is</font><font color="#E5E5E5"> some example the</font>

136
00:06:55,919 --> 00:07:00,539
left<font color="#E5E5E5"> side is Android version and</font><font color="#CCCCCC"> the</font>

137
00:06:57,990 --> 00:07:03,659
right side<font color="#E5E5E5"> is iOS version so</font><font color="#CCCCCC"> they</font>

138
00:07:00,539 --> 00:07:06,810
achieve the same functionalities<font color="#CCCCCC"> to play</font>

139
00:07:03,659 --> 00:07:09,870
some media but we<font color="#E5E5E5"> found</font><font color="#CCCCCC"> that it's</font>

140
00:07:06,810 --> 00:07:11,910
different system<font color="#E5E5E5"> like and use different</font>

141
00:07:09,870 --> 00:07:14,220
<font color="#E5E5E5">frameworks and</font><font color="#CCCCCC"> AP is</font><font color="#E5E5E5"> the left side</font>

142
00:07:11,910 --> 00:07:18,660
<font color="#E5E5E5">you'll start and right side uses object</font>

143
00:07:14,220 --> 00:07:20,970
<font color="#CCCCCC">messages and</font><font color="#E5E5E5"> second second</font><font color="#CCCCCC"> see is that</font>

144
00:07:18,660 --> 00:07:23,970
you use different<font color="#CCCCCC"> languages</font><font color="#E5E5E5"> like Java</font>

145
00:07:20,970 --> 00:07:26,480
and the worst<font color="#E5E5E5"> Objective C so it's also</font>

146
00:07:23,970 --> 00:07:28,940
different<font color="#E5E5E5"> and the first thing is that</font>

147
00:07:26,480 --> 00:07:31,410
there are different developers

148
00:07:28,940 --> 00:07:35,910
individual developers to<font color="#CCCCCC"> defer to</font>

149
00:07:31,410 --> 00:07:38,460
<font color="#E5E5E5">develop these</font><font color="#CCCCCC"> two platform apps so we</font>

150
00:07:35,910 --> 00:07:40,500
find the program structures and lodges

151
00:07:38,460 --> 00:07:43,109
are different for example<font color="#E5E5E5"> here on the</font>

152
00:07:40,500 --> 00:07:44,790
left side is you only use one master to

153
00:07:43,110 --> 00:07:48,389
achieve<font color="#E5E5E5"> this functionality</font><font color="#CCCCCC"> but on the</font>

154
00:07:44,790 --> 00:07:51,780
right side<font color="#CCCCCC"> is a split into two</font><font color="#E5E5E5"> split</font>

155
00:07:48,389 --> 00:07:53,990
into two methods fortunately we have

156
00:07:51,780 --> 00:07:57,270
find some<font color="#CCCCCC"> Commerce's</font><font color="#E5E5E5"> is cross-platform</font>

157
00:07:53,990 --> 00:08:00,270
<font color="#E5E5E5">environments like here we find a dwarf</font>

158
00:07:57,270 --> 00:08:02,969
play audio<font color="#E5E5E5"> it is a command send from a</font>

159
00:08:00,270 --> 00:08:05,400
remote<font color="#CCCCCC"> server</font><font color="#E5E5E5"> choose this app to this</font>

160
00:08:02,970 --> 00:08:07,770
client<font color="#E5E5E5"> app and to let the app to do</font>

161
00:08:05,400 --> 00:08:10,169
something to play the audio<font color="#E5E5E5"> so it's the</font>

162
00:08:07,770 --> 00:08:12,150
same it's easy to<font color="#E5E5E5"> seeing that it's like</font>

163
00:08:10,169 --> 00:08:14,760
a<font color="#CCCCCC"> protocols</font><font color="#E5E5E5"> between the server and</font>

164
00:08:12,150 --> 00:08:17,969
client<font color="#E5E5E5"> so you is the Android version iOS</font>

165
00:08:14,760 --> 00:08:21,240
version with a design will be designed

166
00:08:17,970 --> 00:08:23,970
<font color="#E5E5E5">are called according</font><font color="#CCCCCC"> to this protocol so</font>

167
00:08:21,240 --> 00:08:26,160
we<font color="#E5E5E5"> try to explore more</font><font color="#CCCCCC"> cross-platform</font>

168
00:08:23,970 --> 00:08:28,380
environments for example<font color="#E5E5E5"> here the phone</font>

169
00:08:26,160 --> 00:08:31,830
<font color="#E5E5E5">metadata shared by client and the server</font>

170
00:08:28,380 --> 00:08:35,150
<font color="#E5E5E5">and resources is she resources</font><font color="#CCCCCC"> a</font>

171
00:08:31,830 --> 00:08:37,409
<font color="#CCCCCC">cross-platform</font><font color="#E5E5E5"> and the developers</font>

172
00:08:35,150 --> 00:08:39,780
information unique<font color="#E5E5E5"> information such as</font>

173
00:08:37,409 --> 00:08:42,439
<font color="#CCCCCC">the</font><font color="#E5E5E5"> email address and we can find some</font>

174
00:08:39,780 --> 00:08:45,959
more like<font color="#E5E5E5"> ciphertext code program logs</font>

175
00:08:42,440 --> 00:08:50,850
<font color="#E5E5E5">certain formats</font><font color="#CCCCCC"> you are related and the</font>

176
00:08:45,960 --> 00:08:53,730
command and the<font color="#CCCCCC"> j/s code then</font><font color="#E5E5E5"> now we</font>

177
00:08:50,850 --> 00:08:56,190
<font color="#E5E5E5">have we have found there are some shared</font>

178
00:08:53,730 --> 00:08:58,500
streams or share environments and<font color="#CCCCCC"> monies</font>

179
00:08:56,190 --> 00:09:01,080
between this<font color="#CCCCCC"> two</font><font color="#E5E5E5"> platform so</font><font color="#CCCCCC"> next</font>

180
00:08:58,500 --> 00:09:04,529
<font color="#CCCCCC">question is how many shared streams can</font>

181
00:09:01,080 --> 00:09:07,730
infer a library pair so we do a test we

182
00:09:04,529 --> 00:09:11,730
collect 20 pairs of libraries including

183
00:09:07,730 --> 00:09:13,920
126 pair of classes<font color="#E5E5E5"> so</font><font color="#CCCCCC"> we</font><font color="#E5E5E5"> found when a</font>

184
00:09:11,730 --> 00:09:16,709
<font color="#E5E5E5">number of matched causes</font><font color="#CCCCCC"> tree within a</font>

185
00:09:13,920 --> 00:09:19,920
pair of classes goes above<font color="#E5E5E5"> 8 the force</font>

186
00:09:16,709 --> 00:09:20,649
detection rate becomes<font color="#E5E5E5"> only 1%</font><font color="#CCCCCC"> so we use</font>

187
00:09:19,920 --> 00:09:23,529
this<font color="#E5E5E5"> as a</font>

188
00:09:20,649 --> 00:09:26,019
<font color="#CCCCCC">hold the property is um it's like a</font>

189
00:09:23,529 --> 00:09:28,660
<font color="#CCCCCC">carriage it's only forty percent so we</font>

190
00:09:26,019 --> 00:09:31,779
need to explore more and<font color="#E5E5E5"> to</font><font color="#CCCCCC"> find the</font>

191
00:09:28,660 --> 00:09:33,490
library members<font color="#CCCCCC"> still</font><font color="#E5E5E5"> remember it's</font>

192
00:09:31,779 --> 00:09:35,259
actually challengers<font color="#E5E5E5"> the master that</font>

193
00:09:33,490 --> 00:09:37,990
<font color="#E5E5E5">mixed together and the class name cannot</font>

194
00:09:35,259 --> 00:09:42,670
represent<font color="#E5E5E5"> a library not</font><font color="#CCCCCC"> it's not like</font>

195
00:09:37,990 --> 00:09:45,339
<font color="#E5E5E5">Android version so our idea is</font><font color="#CCCCCC"> to use a</font>

196
00:09:42,670 --> 00:09:47,769
matched class as anchors and extend<font color="#CCCCCC"> two</font>

197
00:09:45,339 --> 00:09:52,119
more classes<font color="#CCCCCC"> here</font><font color="#E5E5E5"> suppose class</font><font color="#CCCCCC"> is our</font>

198
00:09:47,769 --> 00:09:54,610
<font color="#E5E5E5">anchor</font><font color="#CCCCCC"> if it costs like another</font><font color="#E5E5E5"> class</font><font color="#CCCCCC"> DP</font>

199
00:09:52,119 --> 00:09:57,009
or in here we'll see or reference

200
00:09:54,610 --> 00:10:00,490
<font color="#E5E5E5">Rafferty so we think that this</font><font color="#CCCCCC"> idea</font><font color="#E5E5E5"> also</font>

201
00:09:57,009 --> 00:10:03,420
inside<font color="#CCCCCC"> it'll</font><font color="#E5E5E5"> at the same library but</font>

202
00:10:00,490 --> 00:10:07,449
situation becomes a complex if another

203
00:10:03,420 --> 00:10:10,449
class s<font color="#E5E5E5"> cause a cause a library usually</font>

204
00:10:07,449 --> 00:10:14,170
<font color="#CCCCCC">suppose functionalities to other to</font>

205
00:10:10,449 --> 00:10:17,319
other code likely app so if it can

206
00:10:14,170 --> 00:10:19,420
support<font color="#E5E5E5"> this interface to F so we do not</font>

207
00:10:17,319 --> 00:10:22,059
know whether F is inside a<font color="#E5E5E5"> library or</font>

208
00:10:19,420 --> 00:10:24,179
not<font color="#E5E5E5"> so our idea is to</font><font color="#CCCCCC"> look back to</font><font color="#E5E5E5"> the</font>

209
00:10:22,059 --> 00:10:28,600
Android code and find if there is a

210
00:10:24,179 --> 00:10:32,110
similar class F<font color="#CCCCCC"> prime</font><font color="#E5E5E5"> that also</font><font color="#CCCCCC"> cause a</font>

211
00:10:28,600 --> 00:10:34,509
and if has<font color="#CCCCCC"> here</font><font color="#E5E5E5"> if another F prime has</font>

212
00:10:32,110 --> 00:10:37,509
some<font color="#E5E5E5"> shared streams with this F we think</font>

213
00:10:34,509 --> 00:10:40,120
that<font color="#E5E5E5"> okay</font><font color="#CCCCCC"> F</font><font color="#E5E5E5"> is inside a library here but</font>

214
00:10:37,509 --> 00:10:42,550
it does not miss this does not meet this

215
00:10:40,120 --> 00:10:47,050
constraint so finally we get this

216
00:10:42,550 --> 00:10:48,939
library<font color="#E5E5E5"> and it removes</font><font color="#CCCCCC"> e so</font><font color="#E5E5E5"> no we can do</font>

217
00:10:47,050 --> 00:10:51,550
this<font color="#E5E5E5"> potentially harmful behavior</font>

218
00:10:48,939 --> 00:10:54,399
mapping with the Android library<font color="#E5E5E5"> it</font>

219
00:10:51,550 --> 00:10:57,339
<font color="#CCCCCC">could be</font><font color="#E5E5E5"> a job from iOS</font><font color="#CCCCCC"> pump are just I</font>

220
00:10:54,399 --> 00:11:00,699
we mentioned before<font color="#E5E5E5"> so our idea is</font><font color="#CCCCCC"> to</font>

221
00:10:57,339 --> 00:11:03,429
use a comma<font color="#E5E5E5"> part and Texas comer power</font>

222
00:11:00,699 --> 00:11:06,609
to Atami have and submit<font color="#E5E5E5"> to watch total</font>

223
00:11:03,429 --> 00:11:09,189
then if once<font color="#CCCCCC"> turtle</font><font color="#E5E5E5"> flags that there's a</font>

224
00:11:06,610 --> 00:11:11,920
problem<font color="#E5E5E5"> with this part so we see that</font>

225
00:11:09,189 --> 00:11:13,959
<font color="#E5E5E5">the</font><font color="#CCCCCC"> ispotter have the same</font><font color="#E5E5E5"> behaviors</font>

226
00:11:11,920 --> 00:11:18,699
<font color="#E5E5E5">also</font><font color="#CCCCCC"> manage</font><font color="#E5E5E5"> are also the</font><font color="#CCCCCC"> potential</font>

227
00:11:13,959 --> 00:11:20,859
<font color="#E5E5E5">harmful so we do this behavior</font><font color="#CCCCCC"> Maki so</font>

228
00:11:18,699 --> 00:11:23,290
here we model a library behavior

229
00:11:20,860 --> 00:11:26,619
cross-platform<font color="#E5E5E5"> usually previously people</font>

230
00:11:23,290 --> 00:11:28,089
<font color="#CCCCCC">could use this API sequence in its easy</font>

231
00:11:26,619 --> 00:11:30,959
<font color="#E5E5E5">to use a dictionary for mapping but I</font>

232
00:11:28,089 --> 00:11:33,550
was and Android is difficult to do that

233
00:11:30,959 --> 00:11:35,680
<font color="#CCCCCC">this is because</font>

234
00:11:33,550 --> 00:11:41,560
had two<font color="#E5E5E5"> frameworks and you api sequence</font>

235
00:11:35,680 --> 00:11:44,500
<font color="#E5E5E5">so here we use this way</font><font color="#CCCCCC"> api category</font>

236
00:11:41,560 --> 00:11:46,569
<font color="#CCCCCC">plus environments for</font><font color="#E5E5E5"> this mapping</font><font color="#CCCCCC"> we</font>

237
00:11:44,500 --> 00:11:49,750
also<font color="#E5E5E5"> were manually do this dictionary</font>

238
00:11:46,570 --> 00:11:53,200
and<font color="#E5E5E5"> we</font><font color="#CCCCCC"> want to put it open</font><font color="#E5E5E5"> on the this</font>

239
00:11:49,750 --> 00:11:56,470
website a PPO<font color="#CCCCCC"> mix techcom so now we can</font>

240
00:11:53,200 --> 00:11:58,620
do some memory study<font color="#CCCCCC"> it's</font><font color="#E5E5E5"> we crack apps</font>

241
00:11:56,470 --> 00:12:01,360
from 1.3 million<font color="#E5E5E5"> Android apps and</font>

242
00:11:58,620 --> 00:12:04,149
140,000 iOS apps<font color="#E5E5E5"> remove the tube leaks</font>

243
00:12:01,360 --> 00:12:06,910
<font color="#E5E5E5">kids and from Apple</font><font color="#CCCCCC"> Store we got</font><font color="#E5E5E5"> ten</font>

244
00:12:04,149 --> 00:12:10,660
<font color="#E5E5E5">thousand Apps and Google Play is a</font><font color="#CCCCCC"> 400</font>

245
00:12:06,910 --> 00:12:13,589
<font color="#CCCCCC">other apps eally and we find</font><font color="#E5E5E5"> and recite</font>

246
00:12:10,660 --> 00:12:18,250
we got<font color="#E5E5E5"> over</font><font color="#CCCCCC"> 700 libraries with a</font><font color="#E5E5E5"> nearly</font>

247
00:12:13,589 --> 00:12:21,610
<font color="#CCCCCC">5,000</font><font color="#E5E5E5"> variations it includes 117</font>

248
00:12:18,250 --> 00:12:23,920
libraries potentially harmful<font color="#E5E5E5"> and it</font>

249
00:12:21,610 --> 00:12:27,550
impacts about seven point<font color="#E5E5E5"> eight eight</font>

250
00:12:23,920 --> 00:12:29,649
percent<font color="#E5E5E5"> apps iOS sorry we got 46 from</font>

251
00:12:27,550 --> 00:12:32,019
this one one seven<font color="#E5E5E5"> potentially harmful</font>

252
00:12:29,649 --> 00:12:35,649
<font color="#CCCCCC">were mapped over mapped and from the</font>

253
00:12:32,019 --> 00:12:39,310
from them<font color="#E5E5E5"> there's</font><font color="#CCCCCC"> 23 libraries are</font>

254
00:12:35,649 --> 00:12:42,010
potentially harmful<font color="#E5E5E5"> so we try to look</font>

255
00:12:39,310 --> 00:12:44,709
back to<font color="#E5E5E5"> markets and you see how</font><font color="#CCCCCC"> many</font>

256
00:12:42,010 --> 00:12:48,660
apps are potentially harmful<font color="#E5E5E5"> so on a</font>

257
00:12:44,709 --> 00:12:50,859
post or we found about nearly<font color="#CCCCCC"> 3,000</font>

258
00:12:48,660 --> 00:12:55,240
potential<font color="#CCCCCC"> home for apps solar</font><font color="#E5E5E5"> research</font>

259
00:12:50,860 --> 00:12:57,070
is<font color="#E5E5E5"> about 2.9</font><font color="#CCCCCC"> 4%</font><font color="#E5E5E5"> and on other market like</font>

260
00:12:55,240 --> 00:13:02,100
the<font color="#CCCCCC"> Jerry marketer ratio is higher I</font>

261
00:12:57,070 --> 00:13:05,110
fight you<font color="#CCCCCC"> 17% we also find 27</font>

262
00:13:02,100 --> 00:13:07,930
potentially harmful libraries are<font color="#E5E5E5"> 10</font>

263
00:13:05,110 --> 00:13:11,860
have over 10 million<font color="#CCCCCC"> donors is in peril</font>

264
00:13:07,930 --> 00:13:13,810
lots of people a<font color="#CCCCCC"> lot of users and over</font>

265
00:13:11,860 --> 00:13:16,980
half<font color="#CCCCCC"> of them of this potentially</font><font color="#E5E5E5"> harmful</font>

266
00:13:13,810 --> 00:13:20,170
<font color="#CCCCCC">have</font><font color="#E5E5E5"> actually uploaded after 2014 and</font>

267
00:13:16,980 --> 00:13:25,089
over<font color="#E5E5E5"> 1,000 apps have been</font><font color="#CCCCCC"> on a store</font><font color="#E5E5E5"> for</font>

268
00:13:20,170 --> 00:13:28,270
quite a long time<font color="#CCCCCC"> it's 24</font><font color="#E5E5E5"> months so</font><font color="#CCCCCC"> we</font>

269
00:13:25,089 --> 00:13:30,459
want to look into<font color="#E5E5E5"> code and you find what</font>

270
00:13:28,270 --> 00:13:33,220
kind<font color="#CCCCCC"> of behavior</font><font color="#E5E5E5"> does this potential</font>

271
00:13:30,459 --> 00:13:35,800
<font color="#E5E5E5">harmful app that have first it I think</font>

272
00:13:33,220 --> 00:13:38,649
<font color="#CCCCCC">church and send it out on</font><font color="#E5E5E5"> rate record</font>

273
00:13:35,800 --> 00:13:41,260
play voice or download apps and<font color="#E5E5E5"> install</font>

274
00:13:38,649 --> 00:13:44,140
austere private information such as the

275
00:13:41,260 --> 00:13:47,319
<font color="#CCCCCC">user's account</font><font color="#E5E5E5"> location and some code</font>

276
00:13:44,140 --> 00:13:49,790
related<font color="#E5E5E5"> to</font><font color="#CCCCCC"> a jailbreak</font><font color="#E5E5E5"> or teaching</font>

277
00:13:47,320 --> 00:13:53,660
here's<font color="#E5E5E5"> example on our side</font>

278
00:13:49,790 --> 00:13:56,930
it's installed<font color="#E5E5E5"> one IPA</font><font color="#CCCCCC"> fire</font><font color="#E5E5E5"> the fire is</font>

279
00:13:53,660 --> 00:14:00,050
<font color="#CCCCCC">in enterprise that vacated</font><font color="#E5E5E5"> and it's used</font>

280
00:13:56,930 --> 00:14:04,760
a private API to install<font color="#CCCCCC"> right here</font><font color="#E5E5E5"> in a</font>

281
00:14:00,050 --> 00:14:07,660
red font we also found that some library

282
00:14:04,760 --> 00:14:10,370
that has many<font color="#CCCCCC"> potentially</font><font color="#E5E5E5"> harmful</font>

283
00:14:07,660 --> 00:14:14,060
behavior<font color="#E5E5E5"> inside it for example</font><font color="#CCCCCC"> here</font><font color="#E5E5E5"> at</font>

284
00:14:10,370 --> 00:14:16,910
war is can use camera record audio and

285
00:14:14,060 --> 00:14:21,290
do some location and send<font color="#E5E5E5"> it out and</font><font color="#CCCCCC"> has</font>

286
00:14:16,910 --> 00:14:24,319
some others behavior<font color="#E5E5E5"> inside so the next</font>

287
00:14:21,290 --> 00:14:27,290
question<font color="#E5E5E5"> is we want</font><font color="#CCCCCC"> to understand</font><font color="#E5E5E5"> how to</font>

288
00:14:24,320 --> 00:14:30,380
<font color="#E5E5E5">potentially harmful library spread so we</font>

289
00:14:27,290 --> 00:14:33,230
do this<font color="#E5E5E5"> on Android side we use a normal</font>

290
00:14:30,380 --> 00:14:35,420
version<font color="#E5E5E5"> it's clean version and we use</font>

291
00:14:33,230 --> 00:14:38,450
<font color="#E5E5E5">its reverence the potential humming for</font>

292
00:14:35,420 --> 00:14:40,310
<font color="#CCCCCC">a library and we compare</font><font color="#E5E5E5"> it and do a</font>

293
00:14:38,450 --> 00:14:43,250
<font color="#E5E5E5">different</font><font color="#CCCCCC"> gate</font><font color="#E5E5E5"> so we find</font><font color="#CCCCCC"> that a</font>

294
00:14:40,310 --> 00:14:45,410
different code and we<font color="#E5E5E5"> disassemble a</font>

295
00:14:43,250 --> 00:14:48,350
defied code into Java source code<font color="#E5E5E5"> and</font>

296
00:14:45,410 --> 00:14:51,050
the search result<font color="#E5E5E5"> code allowing</font><font color="#CCCCCC"> finally</font>

297
00:14:48,350 --> 00:14:53,510
we<font color="#E5E5E5"> find that it is on github</font><font color="#CCCCCC"> let me use</font>

298
00:14:51,050 --> 00:14:56,359
the some attackers repackage this

299
00:14:53,510 --> 00:14:59,540
<font color="#CCCCCC">library and put it online</font><font color="#E5E5E5"> and for others</font>

300
00:14:56,360 --> 00:15:01,670
<font color="#E5E5E5">to download it this is one way to spread</font>

301
00:14:59,540 --> 00:15:03,620
<font color="#CCCCCC">a potential</font><font color="#E5E5E5"> handful I</font><font color="#CCCCCC"> brewery</font>

302
00:15:01,670 --> 00:15:06,500
the<font color="#E5E5E5"> other one is library embedding a</font>

303
00:15:03,620 --> 00:15:08,990
care for developer might use a<font color="#CCCCCC"> library</font>

304
00:15:06,500 --> 00:15:11,540
from<font color="#E5E5E5"> Israel visual</font><font color="#CCCCCC"> website</font><font color="#E5E5E5"> hoping that</font>

305
00:15:08,990 --> 00:15:14,270
it<font color="#E5E5E5"> is clean however sometimes the</font>

306
00:15:11,540 --> 00:15:17,060
library<font color="#E5E5E5"> has been a contaminate so this</font>

307
00:15:14,270 --> 00:15:18,829
careful developer may use the lies the

308
00:15:17,060 --> 00:15:23,270
potentially<font color="#E5E5E5"> harmful library inside his</font>

309
00:15:18,830 --> 00:15:25,610
app so<font color="#E5E5E5"> on our side is similar and</font>

310
00:15:23,270 --> 00:15:27,920
<font color="#CCCCCC">repacked library are on Apple</font><font color="#E5E5E5"> platform</font>

311
00:15:25,610 --> 00:15:29,980
the<font color="#E5E5E5"> same library tend to contain more</font>

312
00:15:27,920 --> 00:15:33,319
<font color="#E5E5E5">suspicious behavior on</font><font color="#CCCCCC"> third-party</font>

313
00:15:29,980 --> 00:15:35,360
<font color="#E5E5E5">markets we also find some special</font>

314
00:15:33,320 --> 00:15:37,940
<font color="#E5E5E5">behaviors of this potential harmful</font>

315
00:15:35,360 --> 00:15:40,520
library like evasion<font color="#E5E5E5"> potential</font><font color="#CCCCCC"> hem</font><font color="#E5E5E5"> fault</font>

316
00:15:37,940 --> 00:15:42,950
library<font color="#E5E5E5"> do-not-call</font><font color="#CCCCCC"> api which which papa</font>

317
00:15:40,520 --> 00:15:45,680
<font color="#CCCCCC">so we pop up</font><font color="#E5E5E5"> a window for user program</font>

318
00:15:42,950 --> 00:15:48,290
only<font color="#E5E5E5"> read</font><font color="#CCCCCC"> the last retrieve location</font>

319
00:15:45,680 --> 00:15:51,339
data from<font color="#CCCCCC"> the</font><font color="#E5E5E5"> host in background so it's</font>

320
00:15:48,290 --> 00:15:54,500
<font color="#E5E5E5">avoid to</font><font color="#CCCCCC"> pop-up window for</font><font color="#E5E5E5"> uses notation</font>

321
00:15:51,340 --> 00:15:56,750
<font color="#E5E5E5">and if a host</font><font color="#CCCCCC"> F does not have the</font>

322
00:15:54,500 --> 00:15:59,260
permission the nothing will happen<font color="#E5E5E5"> the</font>

323
00:15:56,750 --> 00:16:02,890
behavior also<font color="#E5E5E5"> exists matched on</font>

324
00:15:59,260 --> 00:16:05,700
iOS side<font color="#E5E5E5"> so</font><font color="#CCCCCC"> here's a conclusion we</font>

325
00:16:02,890 --> 00:16:09,130
report a systematic study on mobile plan

326
00:16:05,700 --> 00:16:12,220
<font color="#CCCCCC">pH a library across</font><font color="#E5E5E5"> Android and iOS</font>

327
00:16:09,130 --> 00:16:14,260
platform<font color="#CCCCCC"> we</font><font color="#E5E5E5"> wrong methodology on 1.3</font>

328
00:16:12,220 --> 00:16:16,870
million Android<font color="#E5E5E5"> apps and 100 for this</font>

329
00:16:14,260 --> 00:16:19,150
other<font color="#CCCCCC"> iOS apps and discovered many</font>

330
00:16:16,870 --> 00:16:21,670
potentially<font color="#E5E5E5"> harmful libraries we found</font>

331
00:16:19,150 --> 00:16:23,920
evidence that library contamination

332
00:16:21,670 --> 00:16:28,000
could be an important channel<font color="#E5E5E5"> for</font>

333
00:16:23,920 --> 00:16:36,939
propagating potentially harmful code<font color="#CCCCCC"> ok</font>

334
00:16:28,000 --> 00:16:42,670
so that's all thank you<font color="#E5E5E5"> so</font><font color="#CCCCCC"> do we have</font>

335
00:16:36,940 --> 00:16:45,100
<font color="#CCCCCC">questions for the speaker I have a</font>

336
00:16:42,670 --> 00:16:47,439
question so I found it<font color="#E5E5E5"> interesting that</font>

337
00:16:45,100 --> 00:16:50,110
the you found strings where the main or

338
00:16:47,440 --> 00:16:51,970
the<font color="#CCCCCC"> best way of</font><font color="#E5E5E5"> identifying the library</font>

339
00:16:50,110 --> 00:16:53,080
and then<font color="#E5E5E5"> the paper there's a nice table</font>

340
00:16:51,970 --> 00:16:54,970
that shows that different<font color="#E5E5E5"> types of</font>

341
00:16:53,080 --> 00:16:58,000
strings and<font color="#CCCCCC"> you can definitely</font><font color="#E5E5E5"> see</font><font color="#CCCCCC"> how</font>

342
00:16:54,970 --> 00:16:59,320
these could<font color="#E5E5E5"> be unique identifiers</font><font color="#CCCCCC"> wasn't</font>

343
00:16:58,000 --> 00:17:01,210
clear to me so did you do any filtering

344
00:16:59,320 --> 00:17:04,420
to get rid of strings that<font color="#E5E5E5"> might be</font>

345
00:17:01,210 --> 00:17:05,800
common yeah do you<font color="#CCCCCC"> wait the strings</font>

346
00:17:04,420 --> 00:17:07,570
differently<font color="#CCCCCC"> did you try to identify what</font>

347
00:17:05,800 --> 00:17:11,770
types they are<font color="#E5E5E5"> like are the URLs or code</font>

348
00:17:07,569 --> 00:17:13,300
snippets like yes yeah we're some source

349
00:17:11,770 --> 00:17:14,920
<font color="#CCCCCC">code to</font><font color="#E5E5E5"> do this because there's some</font>

350
00:17:13,300 --> 00:17:17,619
stream that's where<font color="#CCCCCC"> kommer</font><font color="#E5E5E5"> data you'll</font>

351
00:17:14,920 --> 00:17:19,510
see<font color="#E5E5E5"> and in different classes so posting</font>

352
00:17:17,619 --> 00:17:22,569
<font color="#E5E5E5">Android and iOS and in different classes</font>

353
00:17:19,510 --> 00:17:25,270
<font color="#CCCCCC">that it should be matched so in this way</font>

354
00:17:22,569 --> 00:17:27,939
first we<font color="#E5E5E5"> try to find what kind</font><font color="#CCCCCC"> of</font><font color="#E5E5E5"> streak</font>

355
00:17:25,270 --> 00:17:29,290
that<font color="#E5E5E5"> can be</font><font color="#CCCCCC"> matched</font><font color="#E5E5E5"> like we conclude in</font>

356
00:17:27,940 --> 00:17:31,360
several categories<font color="#CCCCCC"> just like we</font>

357
00:17:29,290 --> 00:17:34,690
mentioned<font color="#E5E5E5"> and the secondary which is our</font>

358
00:17:31,360 --> 00:17:37,689
<font color="#CCCCCC">threshold</font><font color="#E5E5E5"> if two classes we found that</font>

359
00:17:34,690 --> 00:17:39,910
it<font color="#CCCCCC"> sure a</font><font color="#E5E5E5"> number of</font><font color="#CCCCCC"> shared stream</font>

360
00:17:37,690 --> 00:17:42,640
beyond the threshold<font color="#CCCCCC"> we think</font><font color="#E5E5E5"> that it's</font>

361
00:17:39,910 --> 00:17:45,010
matched<font color="#CCCCCC"> otherwise we do not think it's</font>

362
00:17:42,640 --> 00:17:47,350
matched so I have this<font color="#CCCCCC"> answer your</font>

363
00:17:45,010 --> 00:17:49,870
<font color="#E5E5E5">question</font><font color="#CCCCCC"> I see okay oh did you have</font><font color="#E5E5E5"> a</font>

364
00:17:47,350 --> 00:17:52,240
question<font color="#CCCCCC"> so it's a great talk Thank You</font>

365
00:17:49,870 --> 00:17:54,010
<font color="#CCCCCC">Stone from Hong</font><font color="#E5E5E5"> Kong so question is I</font>

366
00:17:52,240 --> 00:17:56,650
see in the paper<font color="#E5E5E5"> you're trying to</font>

367
00:17:54,010 --> 00:18:00,430
identify<font color="#E5E5E5"> a Harvard library by matching</font>

368
00:17:56,650 --> 00:18:02,080
the strings<font color="#E5E5E5"> so I'm wondering there's</font>

369
00:18:00,430 --> 00:18:04,120
like a control flow<font color="#E5E5E5"> graph for data flow</font>

370
00:18:02,080 --> 00:18:07,720
graph is kind of graph can be<font color="#E5E5E5"> useful</font>

371
00:18:04,120 --> 00:18:10,300
here<font color="#CCCCCC"> it's a good question</font><font color="#E5E5E5"> interesting</font>

372
00:18:07,720 --> 00:18:12,070
<font color="#E5E5E5">yeah we try to find a lot like just like</font>

373
00:18:10,300 --> 00:18:14,408
you<font color="#E5E5E5"> said a control flow graph</font>

374
00:18:12,070 --> 00:18:17,830
however in real situation<font color="#CCCCCC"> La Quinta</font>

375
00:18:14,409 --> 00:18:20,769
<font color="#CCCCCC">grafton may be so diverse calls</font><font color="#E5E5E5"> the apps</font>

376
00:18:17,830 --> 00:18:23,228
from the<font color="#CCCCCC"> Android side and apps from</font><font color="#E5E5E5"> iOS</font>

377
00:18:20,769 --> 00:18:25,330
side developed<font color="#E5E5E5"> usually</font><font color="#CCCCCC"> developed from</font>

378
00:18:23,229 --> 00:18:26,769
individual developers the different

379
00:18:25,330 --> 00:18:28,840
group although<font color="#E5E5E5"> they're</font><font color="#CCCCCC"> in the same</font>

380
00:18:26,769 --> 00:18:31,690
company<font color="#E5E5E5"> by their different</font><font color="#CCCCCC"> groups so</font>

381
00:18:28,840 --> 00:18:35,978
<font color="#E5E5E5">people could design the approach designs</font>

382
00:18:31,690 --> 00:18:38,950
the<font color="#CCCCCC"> Masters in different</font><font color="#E5E5E5"> way so the</font><font color="#CCCCCC"> two</font>

383
00:18:35,979 --> 00:18:39,820
method missing<font color="#E5E5E5"> Android and iOS part are</font>

384
00:18:38,950 --> 00:18:42,700
quite different

385
00:18:39,820 --> 00:18:44,889
usually we<font color="#CCCCCC"> cannot find a match</font><font color="#E5E5E5"> like in</font>

386
00:18:42,700 --> 00:18:48,429
master<font color="#E5E5E5"> level so we try</font><font color="#CCCCCC"> to find it</font><font color="#E5E5E5"> in</font>

387
00:18:44,889 --> 00:18:51,039
class level this<font color="#CCCCCC"> is because they</font><font color="#E5E5E5"> have a</font>

388
00:18:48,429 --> 00:18:53,979
general<font color="#E5E5E5"> high-level design so they design</font>

389
00:18:51,039 --> 00:18:57,220
the class to<font color="#CCCCCC"> be like similar</font><font color="#E5E5E5"> and</font>

390
00:18:53,979 --> 00:19:00,249
<font color="#E5E5E5">especially when the code need to</font>

391
00:18:57,220 --> 00:19:02,679
communicate<font color="#CCCCCC"> with outside is a server so</font>

392
00:19:00,249 --> 00:19:05,409
this protocols are the same but for this

393
00:19:02,679 --> 00:19:08,529
development development of this<font color="#E5E5E5"> to</font>

394
00:19:05,409 --> 00:19:11,739
individual libraries they are not the

395
00:19:08,529 --> 00:19:14,009
same yeah but we try to find it so yeah

396
00:19:11,739 --> 00:19:16,570
<font color="#E5E5E5">it's kind of</font><font color="#CCCCCC"> fine and so we use this</font>

397
00:19:14,009 --> 00:19:19,749
commerce tree to do this match and<font color="#E5E5E5"> we</font>

398
00:19:16,570 --> 00:19:23,830
<font color="#E5E5E5">found</font><font color="#CCCCCC"> it's works another</font><font color="#E5E5E5"> good question</font>

399
00:19:19,749 --> 00:19:25,899
is I noticed<font color="#E5E5E5"> like sometime</font><font color="#CCCCCC"> somehow</font><font color="#E5E5E5"> they</font>

400
00:19:23,830 --> 00:19:28,599
<font color="#E5E5E5">actually using encryption to increase</font>

401
00:19:25,899 --> 00:19:30,879
<font color="#CCCCCC">their</font><font color="#E5E5E5"> string so you</font><font color="#CCCCCC"> cannot detect them</font>

402
00:19:28,599 --> 00:19:33,879
easily so do you find<font color="#CCCCCC"> a problem during</font>

403
00:19:30,879 --> 00:19:37,509
<font color="#E5E5E5">this research yeah</font><font color="#CCCCCC"> yes sometimes they</font>

404
00:19:33,879 --> 00:19:39,279
use<font color="#CCCCCC"> the encrypt stream yeah so it's we</font>

405
00:19:37,509 --> 00:19:42,309
can<font color="#E5E5E5"> divide it into two paths so we</font>

406
00:19:39,279 --> 00:19:45,879
really found some<font color="#E5E5E5"> calmer encrypted</font>

407
00:19:42,309 --> 00:19:47,918
stream in both Android and iOS<font color="#CCCCCC"> I so</font><font color="#E5E5E5"> that</font>

408
00:19:45,879 --> 00:19:49,928
<font color="#E5E5E5">means the this part may be related to</font>

409
00:19:47,919 --> 00:19:51,940
<font color="#E5E5E5">you like our side to a server</font>

410
00:19:49,929 --> 00:19:55,389
so this<font color="#E5E5E5"> commerce side</font><font color="#CCCCCC"> commerce stream</font>

411
00:19:51,940 --> 00:19:56,609
could<font color="#CCCCCC"> be used to</font><font color="#E5E5E5"> for this map on the</font>

412
00:19:55,389 --> 00:20:00,309
other side mmm

413
00:19:56,609 --> 00:20:02,949
if the app do some do something to

414
00:20:00,309 --> 00:20:05,019
conceal his code my<font color="#E5E5E5"> only on one part to</font>

415
00:20:02,950 --> 00:20:07,840
conceal a code so we<font color="#CCCCCC"> cannot</font><font color="#E5E5E5"> find it</font>

416
00:20:05,019 --> 00:20:10,119
<font color="#E5E5E5">because we want to make estimation of a</font>

417
00:20:07,840 --> 00:20:14,009
lower bound of these potentially harmful

418
00:20:10,119 --> 00:20:17,349
library<font color="#E5E5E5"> in this market so yeah if that</font>

419
00:20:14,009 --> 00:20:19,269
if they want to evade<font color="#E5E5E5"> our detection also</font>

420
00:20:17,349 --> 00:20:22,119
our approach is not that the attacks

421
00:20:19,269 --> 00:20:24,300
approach is only<font color="#E5E5E5"> to try to find the</font>

422
00:20:22,119 --> 00:20:27,389
potential harmful<font color="#CCCCCC"> abre across the</font>

423
00:20:24,300 --> 00:20:29,040
market<font color="#E5E5E5"> so we cannot find it okay thank</font>

424
00:20:27,390 --> 00:20:29,880
<font color="#E5E5E5">you a lot</font><font color="#CCCCCC"> thank</font><font color="#E5E5E5"> you this will be the</font>

425
00:20:29,040 --> 00:20:33,120
last<font color="#E5E5E5"> question</font>

426
00:20:29,880 --> 00:20:35,130
hi I'm from<font color="#CCCCCC"> judge heck Thanks</font>

427
00:20:33,120 --> 00:20:38,179
so I have one question<font color="#CCCCCC"> from</font><font color="#E5E5E5"> what I</font>

428
00:20:35,130 --> 00:20:41,700
understand most of the harmful<font color="#E5E5E5"> apps used</font>

429
00:20:38,180 --> 00:20:45,000
private<font color="#E5E5E5"> API to do the attack or like</font>

430
00:20:41,700 --> 00:20:46,680
harm the users<font color="#CCCCCC"> from</font><font color="#E5E5E5"> what I know</font><font color="#CCCCCC"> app was</font>

431
00:20:45,000 --> 00:20:48,540
strictly forbids the use of private

432
00:20:46,680 --> 00:20:52,110
<font color="#E5E5E5">api's why do you think they</font><font color="#CCCCCC"> failed to</font>

433
00:20:48,540 --> 00:20:54,300
<font color="#E5E5E5">detect such use of api's yeah we use a</font>

434
00:20:52,110 --> 00:20:57,330
dictionary for<font color="#E5E5E5"> this mapping if they have</font>

435
00:20:54,300 --> 00:21:00,270
it's<font color="#E5E5E5"> just I use that if they use private</font>

436
00:20:57,330 --> 00:21:02,159
API to do some potential harm versus<font color="#E5E5E5"> and</font>

437
00:21:00,270 --> 00:21:06,690
<font color="#E5E5E5">recite if these two have this behavior</font>

438
00:21:02,160 --> 00:21:10,170
<font color="#CCCCCC">and we could map</font><font color="#E5E5E5"> this because</font><font color="#CCCCCC"> I website</font>

439
00:21:06,690 --> 00:21:12,780
we do this map to map the private API to

440
00:21:10,170 --> 00:21:15,450
<font color="#CCCCCC">you like is category and you with manual</font>

441
00:21:12,780 --> 00:21:18,960
<font color="#CCCCCC">I am please</font><font color="#E5E5E5"> analyzes a private API</font><font color="#CCCCCC"> so if</font>

442
00:21:15,450 --> 00:21:22,440
it<font color="#E5E5E5"> really exists on this iOS side we can</font>

443
00:21:18,960 --> 00:21:26,430
map a method from this unrest eye-to-eye

444
00:21:22,440 --> 00:21:27,690
<font color="#CCCCCC">right side</font><font color="#E5E5E5"> so is that</font><font color="#CCCCCC"> also</font><font color="#E5E5E5"> question okay</font>

445
00:21:26,430 --> 00:21:30,830
<font color="#E5E5E5">thanks thank you</font>

446
00:21:27,690 --> 00:21:30,830
let's thank the speaker

