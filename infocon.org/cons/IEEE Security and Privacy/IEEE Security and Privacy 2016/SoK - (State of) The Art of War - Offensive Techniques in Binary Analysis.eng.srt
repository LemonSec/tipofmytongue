1
00:00:01,129 --> 00:00:04,980
thank you for<font color="#E5E5E5"> giving me the opportunity</font>

2
00:00:03,149 --> 00:00:07,230
<font color="#CCCCCC">to</font><font color="#E5E5E5"> speak to you</font><font color="#CCCCCC"> guys today I'm really</font>

3
00:00:04,980 --> 00:00:09,480
<font color="#E5E5E5">excited to talk to</font><font color="#CCCCCC"> you</font><font color="#E5E5E5"> about some</font><font color="#CCCCCC"> work</font>

4
00:00:07,230 --> 00:00:12,090
that<font color="#CCCCCC"> we've been doing at UC Santa</font>

5
00:00:09,480 --> 00:00:13,080
<font color="#CCCCCC">Barbara</font><font color="#E5E5E5"> with my colleagues listed over</font>

6
00:00:12,090 --> 00:00:14,820
there

7
00:00:13,080 --> 00:00:18,270
there's quite<font color="#CCCCCC"> a few</font><font color="#E5E5E5"> of us it's a</font><font color="#CCCCCC"> big</font>

8
00:00:14,820 --> 00:00:20,039
project<font color="#CCCCCC"> and I want to draw your</font>

9
00:00:18,270 --> 00:00:22,198
attention<font color="#CCCCCC"> to two blue names over</font><font color="#E5E5E5"> there</font>

10
00:00:20,039 --> 00:00:23,550
<font color="#CCCCCC">they were both high schoolers</font><font color="#E5E5E5"> when this</font>

11
00:00:22,199 --> 00:00:25,699
project<font color="#CCCCCC"> started so I don't know how</font>

12
00:00:23,550 --> 00:00:29,519
often<font color="#E5E5E5"> high schoolers get published in</font>

13
00:00:25,699 --> 00:00:36,480
top-tier<font color="#E5E5E5"> venues</font><font color="#CCCCCC"> but this is one of</font><font color="#E5E5E5"> them</font>

14
00:00:29,519 --> 00:00:37,350
<font color="#E5E5E5">so this work is not this work is about</font>

15
00:00:36,480 --> 00:00:40,459
<font color="#E5E5E5">two things</font>

16
00:00:37,350 --> 00:00:42,860
it's about binaries<font color="#E5E5E5"> and it is about</font>

17
00:00:40,460 --> 00:00:46,710
offensive techniques on<font color="#CCCCCC"> binaries so</font>

18
00:00:42,860 --> 00:00:48,510
attacking<font color="#E5E5E5"> these binaries</font><font color="#CCCCCC"> we want to find</font>

19
00:00:46,710 --> 00:00:52,079
<font color="#E5E5E5">vulnerabilities in the binaries and we</font>

20
00:00:48,510 --> 00:00:56,640
want to exploit those<font color="#CCCCCC"> vulnerabilities</font>

21
00:00:52,079 --> 00:01:00,090
and we really want<font color="#E5E5E5"> to understand how the</font>

22
00:00:56,640 --> 00:01:04,159
current state of the art lends itself

23
00:01:00,090 --> 00:01:07,320
toward these approaches<font color="#CCCCCC"> and our</font>

24
00:01:04,159 --> 00:01:08,820
<font color="#CCCCCC">motivations are twofold</font><font color="#E5E5E5"> one is</font><font color="#CCCCCC"> we're</font>

25
00:01:07,320 --> 00:01:12,029
<font color="#E5E5E5">really interested in the current state</font>

26
00:01:08,820 --> 00:01:14,399
of the art<font color="#E5E5E5"> we're interested in what are</font>

27
00:01:12,030 --> 00:01:16,080
<font color="#CCCCCC">the limitations of current</font><font color="#E5E5E5"> offensive</font>

28
00:01:14,400 --> 00:01:18,000
binary analysis techniques<font color="#E5E5E5"> where they</font>

29
00:01:16,080 --> 00:01:20,070
can be improved<font color="#E5E5E5"> and this is very</font>

30
00:01:18,000 --> 00:01:21,720
relevant<font color="#CCCCCC"> because right now we're</font>

31
00:01:20,070 --> 00:01:23,908
experiencing an explosion of<font color="#E5E5E5"> binary code</font>

32
00:01:21,720 --> 00:01:26,070
<font color="#CCCCCC">of course</font><font color="#E5E5E5"> high-level languages have</font>

33
00:01:23,909 --> 00:01:28,560
always compiled down to binary<font color="#E5E5E5"> and you</font>

34
00:01:26,070 --> 00:01:31,158
have to you know run binary<font color="#CCCCCC"> on your</font><font color="#E5E5E5"> CPU</font>

35
00:01:28,560 --> 00:01:34,380
<font color="#CCCCCC">at some point</font><font color="#E5E5E5"> but now we're having this</font>

36
00:01:31,159 --> 00:01:36,150
IOT Renaissance where everything is a

37
00:01:34,380 --> 00:01:39,600
smart<font color="#CCCCCC"> device and these smart devices</font>

38
00:01:36,150 --> 00:01:42,170
<font color="#CCCCCC">often run binary firmware</font><font color="#E5E5E5"> and often run</font>

39
00:01:39,600 --> 00:01:45,149
<font color="#CCCCCC">multiple different</font><font color="#E5E5E5"> binary firmware</font>

40
00:01:42,170 --> 00:01:46,500
images on different sub devices so<font color="#E5E5E5"> we</font>

41
00:01:45,149 --> 00:01:49,490
have a lot of binary code that can<font color="#E5E5E5"> now</font>

42
00:01:46,500 --> 00:01:52,229
be attacked<font color="#E5E5E5"> and means to understand how</font>

43
00:01:49,490 --> 00:01:55,048
current techniques are at identifying

44
00:01:52,229 --> 00:01:57,990
<font color="#E5E5E5">and exploiting these</font><font color="#CCCCCC"> vulnerabilities and</font>

45
00:01:55,049 --> 00:01:59,880
<font color="#E5E5E5">DARPA has recognized this need and</font>

46
00:01:57,990 --> 00:02:01,770
created the DARPA<font color="#E5E5E5"> cyber</font><font color="#CCCCCC"> grant</font><font color="#E5E5E5"> challenge</font>

47
00:01:59,880 --> 00:02:04,770
it's a<font color="#E5E5E5"> competition</font><font color="#CCCCCC"> for an automated</font>

48
00:02:01,770 --> 00:02:07,048
binary analysis<font color="#E5E5E5"> framework and by an</font>

49
00:02:04,770 --> 00:02:07,979
expectation framework they put a lot<font color="#E5E5E5"> of</font>

50
00:02:07,049 --> 00:02:09,660
<font color="#E5E5E5">money on the table</font>

51
00:02:07,979 --> 00:02:11,580
<font color="#E5E5E5">which of course is also a good moderate</font>

52
00:02:09,660 --> 00:02:13,260
motivator

53
00:02:11,580 --> 00:02:17,460
this is their statement that<font color="#E5E5E5"> this</font><font color="#CCCCCC"> is</font>

54
00:02:13,260 --> 00:02:21,780
important<font color="#CCCCCC"> right and</font><font color="#E5E5E5"> so we approached the</font>

55
00:02:17,460 --> 00:02:23,760
idea<font color="#E5E5E5"> of analyzing binary offensive</font>

56
00:02:21,780 --> 00:02:25,710
<font color="#E5E5E5">binary techniques from our standard</font>

57
00:02:23,760 --> 00:02:28,010
<font color="#E5E5E5">scientific perspective</font><font color="#CCCCCC"> well in</font><font color="#E5E5E5"> science</font>

58
00:02:25,710 --> 00:02:30,390
we<font color="#CCCCCC"> look at</font><font color="#E5E5E5"> existing work in the field</font><font color="#CCCCCC"> I</font>

59
00:02:28,010 --> 00:02:33,450
use it to get<font color="#E5E5E5"> some idea of how to</font>

60
00:02:30,390 --> 00:02:34,859
improve<font color="#CCCCCC"> it and output some new work back</font>

61
00:02:33,450 --> 00:02:37,799
to the community and we did the same

62
00:02:34,860 --> 00:02:42,120
<font color="#CCCCCC">thing we looked at existing binary</font>

63
00:02:37,800 --> 00:02:46,200
analysis techniques<font color="#CCCCCC"> and then we kind of</font>

64
00:02:42,120 --> 00:02:48,360
<font color="#E5E5E5">hit a interesting problem in</font><font color="#CCCCCC"> that</font><font color="#E5E5E5"> these</font>

65
00:02:46,200 --> 00:02:49,980
existing binary analysis techniques<font color="#CCCCCC"> the</font>

66
00:02:48,360 --> 00:02:52,020
ones that publish source code so that

67
00:02:49,980 --> 00:02:54,750
<font color="#CCCCCC">you</font><font color="#E5E5E5"> can build off</font><font color="#CCCCCC"> of them and</font><font color="#E5E5E5"> the ones</font>

68
00:02:52,020 --> 00:02:59,100
<font color="#E5E5E5">that you know publish enough of an idea</font>

69
00:02:54,750 --> 00:03:01,670
<font color="#CCCCCC">that you can build off of</font><font color="#E5E5E5"> it</font><font color="#CCCCCC"> the release</font>

70
00:02:59,100 --> 00:03:03,989
tools have some problems<font color="#E5E5E5"> right and so</font>

71
00:03:01,670 --> 00:03:05,700
there's a set<font color="#CCCCCC"> of these problems one is</font>

72
00:03:03,990 --> 00:03:07,890
that you know<font color="#CCCCCC"> sometimes</font><font color="#E5E5E5"> even if the tool</font>

73
00:03:05,700 --> 00:03:10,649
is published it's not open<font color="#E5E5E5"> sourced so</font>

74
00:03:07,890 --> 00:03:12,869
it's very hard<font color="#CCCCCC"> to build off of it even</font>

75
00:03:10,650 --> 00:03:15,150
when it is open source<font color="#CCCCCC"> sometimes</font><font color="#E5E5E5"> it's</font>

76
00:03:12,870 --> 00:03:16,920
basically<font color="#E5E5E5"> not open source so if you</font>

77
00:03:15,150 --> 00:03:19,310
write<font color="#CCCCCC"> your tool in a language</font><font color="#E5E5E5"> that</font><font color="#CCCCCC"> is</font>

78
00:03:16,920 --> 00:03:22,100
extremely<font color="#E5E5E5"> hard to use and extend</font>

79
00:03:19,310 --> 00:03:24,630
like sometimes happens in our field<font color="#CCCCCC"> I</font>

80
00:03:22,100 --> 00:03:26,790
it's very<font color="#CCCCCC"> hard to build it something off</font>

81
00:03:24,630 --> 00:03:29,489
of<font color="#E5E5E5"> it even when they are open stores are</font>

82
00:03:26,790 --> 00:03:32,310
often<font color="#CCCCCC"> very inflexible or they lack</font>

83
00:03:29,489 --> 00:03:34,739
support<font color="#CCCCCC"> for multiple</font><font color="#E5E5E5"> architectures so a</font>

84
00:03:32,310 --> 00:03:36,480
very architecture dependent and if

85
00:03:34,739 --> 00:03:39,180
you're interested<font color="#CCCCCC"> in analyzing firmware</font>

86
00:03:36,480 --> 00:03:41,310
x86 doesn't cut it even x86 and arm

87
00:03:39,180 --> 00:03:44,850
alone<font color="#E5E5E5"> doesn't</font><font color="#CCCCCC"> about it you need a very</font>

88
00:03:41,310 --> 00:03:47,790
wide support<font color="#E5E5E5"> of architectures and these</font>

89
00:03:44,850 --> 00:03:50,100
tools are not composable<font color="#E5E5E5"> they're also</font>

90
00:03:47,790 --> 00:03:51,989
<font color="#E5E5E5">probably</font><font color="#CCCCCC"> not compostable either</font><font color="#E5E5E5"> but</font>

91
00:03:50,100 --> 00:03:57,359
they're definitely not composable<font color="#E5E5E5"> in a</font>

92
00:03:51,989 --> 00:03:59,370
very very<font color="#E5E5E5"> easy way because you know if</font>

93
00:03:57,360 --> 00:04:00,810
they're not<font color="#E5E5E5"> really made to</font><font color="#CCCCCC"> build off of</font>

94
00:03:59,370 --> 00:04:01,920
<font color="#E5E5E5">each other and extend each other it's</font>

95
00:04:00,810 --> 00:04:03,900
<font color="#CCCCCC">hard</font><font color="#E5E5E5"> to combine them so</font><font color="#CCCCCC"> you have</font>

96
00:04:01,920 --> 00:04:07,768
<font color="#E5E5E5">symbolic execution and you have some</font>

97
00:04:03,900 --> 00:04:10,549
static analysis<font color="#E5E5E5"> and combining these</font>

98
00:04:07,769 --> 00:04:12,870
different<font color="#CCCCCC"> tools</font><font color="#E5E5E5"> from different papers is</font>

99
00:04:10,549 --> 00:04:14,549
non-trivial and sometimes<font color="#E5E5E5"> impossible and</font>

100
00:04:12,870 --> 00:04:16,829
<font color="#CCCCCC">this is a problem for two things</font><font color="#E5E5E5"> for two</font>

101
00:04:14,549 --> 00:04:21,329
reasons<font color="#CCCCCC"> one is that it</font><font color="#E5E5E5"> is hard to</font>

102
00:04:16,829 --> 00:04:23,460
understand what the<font color="#E5E5E5"> real impact of the</font>

103
00:04:21,329 --> 00:04:25,050
work was right how much did the work

104
00:04:23,460 --> 00:04:28,919
<font color="#E5E5E5">really improve over</font>

105
00:04:25,050 --> 00:04:31,139
the previous state<font color="#CCCCCC"> of</font><font color="#E5E5E5"> the art versus how</font>

106
00:04:28,919 --> 00:04:32,698
much it<font color="#E5E5E5"> you know that's just a different</font>

107
00:04:31,139 --> 00:04:34,500
implementation<font color="#E5E5E5"> and happens to get</font>

108
00:04:32,699 --> 00:04:36,180
<font color="#E5E5E5">different</font><font color="#CCCCCC"> results</font><font color="#E5E5E5"> so</font><font color="#CCCCCC"> it's hard to</font>

109
00:04:34,500 --> 00:04:37,770
<font color="#E5E5E5">compare these things on an equal</font><font color="#CCCCCC"> footing</font>

110
00:04:36,180 --> 00:04:40,080
because<font color="#E5E5E5"> all the tools are</font><font color="#CCCCCC"> implemented</font>

111
00:04:37,770 --> 00:04:42,210
very<font color="#E5E5E5"> differently and it's very hard to</font>

112
00:04:40,080 --> 00:04:44,789
<font color="#CCCCCC">build off of</font><font color="#E5E5E5"> because</font><font color="#CCCCCC"> if you want to</font>

113
00:04:42,210 --> 00:04:47,190
combine multiple approaches to<font color="#E5E5E5"> create</font>

114
00:04:44,789 --> 00:04:50,669
the next<font color="#CCCCCC"> generation of binary analysis</font>

115
00:04:47,190 --> 00:04:52,199
it's<font color="#E5E5E5"> a tricky if you don't have a solid</font>

116
00:04:50,669 --> 00:04:55,948
footing<font color="#CCCCCC"> that can support all of your</font>

117
00:04:52,199 --> 00:04:59,639
what you want to do so we had the<font color="#E5E5E5"> idea</font>

118
00:04:55,949 --> 00:05:03,930
<font color="#E5E5E5">of</font><font color="#CCCCCC"> making a binary</font><font color="#E5E5E5"> analysis</font><font color="#CCCCCC"> framework</font>

119
00:04:59,639 --> 00:05:07,259
that solves these problems<font color="#CCCCCC"> that allows</font>

120
00:05:03,930 --> 00:05:10,139
us<font color="#E5E5E5"> to explore in a very system ties the</font>

121
00:05:07,259 --> 00:05:14,729
way how different analyses fit together

122
00:05:10,139 --> 00:05:18,659
<font color="#E5E5E5">how symbolic</font><font color="#CCCCCC"> execution can assist static</font>

123
00:05:14,729 --> 00:05:21,060
analysis<font color="#E5E5E5"> how fuzzing can get looped into</font>

124
00:05:18,659 --> 00:05:22,949
the whole<font color="#CCCCCC"> thing</font><font color="#E5E5E5"> and what effects this</font>

125
00:05:21,060 --> 00:05:26,310
has right so we're really trying<font color="#CCCCCC"> to</font>

126
00:05:22,949 --> 00:05:29,070
systematize<font color="#CCCCCC"> the field of minor analysis</font>

127
00:05:26,310 --> 00:05:32,130
so<font color="#E5E5E5"> that we can have a standard base on</font>

128
00:05:29,070 --> 00:05:35,849
which we can create approaches compare

129
00:05:32,130 --> 00:05:39,320
them and<font color="#E5E5E5"> see what happens at how well</font>

130
00:05:35,849 --> 00:05:42,509
they work so this binary analysis

131
00:05:39,320 --> 00:05:45,570
<font color="#E5E5E5">framework we released and made is called</font>

132
00:05:42,509 --> 00:05:49,139
anger and this is the<font color="#E5E5E5"> framework on which</font>

133
00:05:45,570 --> 00:05:51,630
<font color="#E5E5E5">we did this study this survey that's</font><font color="#CCCCCC"> a</font>

134
00:05:49,139 --> 00:05:54,690
<font color="#CCCCCC">body analysis techniques</font><font color="#E5E5E5"> and anger is</font>

135
00:05:51,630 --> 00:05:57,300
extremely modular<font color="#CCCCCC"> it's made to become</font>

136
00:05:54,690 --> 00:06:00,990
possible<font color="#CCCCCC"> and probably compostable as</font>

137
00:05:57,300 --> 00:06:03,060
well<font color="#CCCCCC"> and it's made out of modules</font><font color="#E5E5E5"> that</font>

138
00:06:00,990 --> 00:06:06,449
fit together<font color="#CCCCCC"> and are very</font><font color="#E5E5E5"> configurable</font>

139
00:06:03,060 --> 00:06:09,810
you can take these modules<font color="#CCCCCC"> you can split</font>

140
00:06:06,449 --> 00:06:12,060
them<font color="#E5E5E5"> apart</font><font color="#CCCCCC"> mix</font><font color="#E5E5E5"> them together and really</font>

141
00:06:09,810 --> 00:06:15,300
build<font color="#E5E5E5"> different</font><font color="#CCCCCC"> types of analyses</font><font color="#E5E5E5"> so you</font>

142
00:06:12,060 --> 00:06:17,520
might<font color="#E5E5E5"> combine different modules to</font>

143
00:06:15,300 --> 00:06:20,159
<font color="#CCCCCC">create dynamic symbolic</font><font color="#E5E5E5"> execution engine</font>

144
00:06:17,520 --> 00:06:22,859
that uses<font color="#E5E5E5"> value set analysis to resolve</font>

145
00:06:20,159 --> 00:06:25,169
bounds<font color="#E5E5E5"> on symbolic variables you might</font>

146
00:06:22,860 --> 00:06:27,479
<font color="#E5E5E5">have a static analysis system that also</font>

147
00:06:25,169 --> 00:06:30,479
uses<font color="#E5E5E5"> can call it tracing to try to prove</font>

148
00:06:27,479 --> 00:06:33,839
<font color="#E5E5E5">that the detections are not false</font>

149
00:06:30,479 --> 00:06:35,760
positives<font color="#CCCCCC"> you could have a</font><font color="#E5E5E5"> can call a</font>

150
00:06:33,839 --> 00:06:37,409
<font color="#E5E5E5">tracing engine and integrated with</font>

151
00:06:35,760 --> 00:06:38,520
another tool because the<font color="#CCCCCC"> ogre is</font><font color="#E5E5E5"> very</font>

152
00:06:37,409 --> 00:06:40,699
flexible<font color="#E5E5E5"> it</font>

153
00:06:38,520 --> 00:06:42,960
meant to<font color="#CCCCCC"> be</font><font color="#E5E5E5"> used as a</font><font color="#CCCCCC"> buy as a library</font>

154
00:06:40,699 --> 00:06:43,379
<font color="#E5E5E5">so you can integrate for example a</font>

155
00:06:42,960 --> 00:06:46,169
<font color="#E5E5E5">fuzzer</font>

156
00:06:43,379 --> 00:06:48,930
to understand how symbolically assisted

157
00:06:46,169 --> 00:06:51,539
fuzzing compares to just<font color="#E5E5E5"> normal symbolic</font>

158
00:06:48,930 --> 00:06:53,759
execution<font color="#E5E5E5"> and all of this is on a single</font>

159
00:06:51,539 --> 00:06:55,860
base so it's really<font color="#E5E5E5"> comparable so I want</font>

160
00:06:53,759 --> 00:06:57,960
<font color="#E5E5E5">to really stress this because</font><font color="#CCCCCC"> if you</font>

161
00:06:55,860 --> 00:06:59,460
<font color="#CCCCCC">have</font><font color="#E5E5E5"> different implementations of</font>

162
00:06:57,960 --> 00:07:01,500
different techniques it's very hard to

163
00:06:59,460 --> 00:07:02,878
<font color="#E5E5E5">tell if the improvement was from the</font>

164
00:07:01,500 --> 00:07:06,030
implementation<font color="#CCCCCC"> or from the technique</font>

165
00:07:02,879 --> 00:07:08,250
with anger with this work you<font color="#CCCCCC"> can really</font>

166
00:07:06,030 --> 00:07:11,789
look at it<font color="#E5E5E5"> on a single implementation</font>

167
00:07:08,250 --> 00:07:15,919
say<font color="#E5E5E5"> okay that theoretical advance</font><font color="#CCCCCC"> really</font>

168
00:07:11,789 --> 00:07:17,818
did this<font color="#E5E5E5"> to the results</font><font color="#CCCCCC"> and so I</font>

169
00:07:15,919 --> 00:07:20,969
<font color="#E5E5E5">mentioned anger has a couple of</font>

170
00:07:17,819 --> 00:07:22,800
<font color="#E5E5E5">different</font><font color="#CCCCCC"> modules it has a bunch and I</font>

171
00:07:20,970 --> 00:07:25,139
<font color="#E5E5E5">don't have time to go into all</font><font color="#CCCCCC"> of</font><font color="#E5E5E5"> them</font>

172
00:07:22,800 --> 00:07:27,659
here<font color="#CCCCCC"> but I'll go into</font><font color="#E5E5E5"> overview of</font>

173
00:07:25,139 --> 00:07:30,240
modules<font color="#E5E5E5"> that</font><font color="#CCCCCC"> are also useful outside of</font>

174
00:07:27,659 --> 00:07:33,060
anger as kind of<font color="#E5E5E5"> a general toolkit in</font>

175
00:07:30,240 --> 00:07:39,349
binary analysis so we<font color="#E5E5E5"> created a binary</font>

176
00:07:33,060 --> 00:07:41,819
loader<font color="#E5E5E5"> which allows an an analyst</font><font color="#CCCCCC"> to</font>

177
00:07:39,349 --> 00:07:43,620
<font color="#E5E5E5">look at a binary and get a view of how</font>

178
00:07:41,819 --> 00:07:45,449
it would<font color="#E5E5E5"> look in memory if it's loaded</font>

179
00:07:43,620 --> 00:07:48,169
it's a non-trivial<font color="#E5E5E5"> process and our</font>

180
00:07:45,449 --> 00:07:51,300
binary loader supports<font color="#CCCCCC"> elf binaries</font>

181
00:07:48,169 --> 00:07:53,758
<font color="#CCCCCC">Windows binaries</font><font color="#E5E5E5"> cyber Grand</font><font color="#CCCCCC"> Challenge</font>

182
00:07:51,300 --> 00:07:55,560
binaries and all sorts of binaries<font color="#CCCCCC"> that</font>

183
00:07:53,759 --> 00:07:57,659
either supports<font color="#E5E5E5"> because it can use</font><font color="#CCCCCC"> ID as</font>

184
00:07:55,560 --> 00:07:59,130
a<font color="#E5E5E5"> back-end to load them as well this is</font>

185
00:07:57,659 --> 00:08:02,639
very<font color="#E5E5E5"> useful we see a lot of people</font><font color="#CCCCCC"> using</font>

186
00:07:59,130 --> 00:08:06,029
<font color="#E5E5E5">this outside of anger we also created a</font>

187
00:08:02,639 --> 00:08:08,430
Python wrapper for Lib Bex<font color="#E5E5E5"> we used</font><font color="#CCCCCC"> VAX</font>

188
00:08:06,029 --> 00:08:10,139
as the new<font color="#CCCCCC"> immediate</font><font color="#E5E5E5"> language in anger</font>

189
00:08:08,430 --> 00:08:12,569
<font color="#E5E5E5">allowing us to use to support many</font>

190
00:08:10,139 --> 00:08:14,400
different architectures we see this

191
00:08:12,569 --> 00:08:16,110
<font color="#E5E5E5">being</font><font color="#CCCCCC"> used in the</font><font color="#E5E5E5"> community as</font><font color="#CCCCCC"> well a</font>

192
00:08:14,400 --> 00:08:21,299
lot in research actually<font color="#E5E5E5"> over the last</font>

193
00:08:16,110 --> 00:08:25,800
couple<font color="#CCCCCC"> of years and we</font><font color="#E5E5E5"> created a really</font>

194
00:08:21,300 --> 00:08:28,889
<font color="#E5E5E5">useful module that abstracts data model</font>

195
00:08:25,800 --> 00:08:31,830
domains right so you have symbolic

196
00:08:28,889 --> 00:08:34,529
<font color="#E5E5E5">variables in symbolic execution and you</font>

197
00:08:31,830 --> 00:08:38,039
have<font color="#E5E5E5"> value sets and strided intervals in</font>

198
00:08:34,529 --> 00:08:40,289
value set analysis and we have a<font color="#CCCCCC"> module</font>

199
00:08:38,039 --> 00:08:42,929
that<font color="#E5E5E5"> allows</font><font color="#CCCCCC"> us to abstract these into a</font>

200
00:08:40,289 --> 00:08:45,240
common representation basically an

201
00:08:42,929 --> 00:08:48,439
intermediate representation<font color="#E5E5E5"> for data</font>

202
00:08:45,240 --> 00:08:50,670
domains<font color="#E5E5E5"> which really allows us to</font>

203
00:08:48,440 --> 00:08:52,180
compose these different analyses because

204
00:08:50,670 --> 00:08:55,360
<font color="#E5E5E5">we can switch from some</font>

205
00:08:52,180 --> 00:08:59,649
execution<font color="#CCCCCC"> - value sin analysis on the</font>

206
00:08:55,360 --> 00:09:02,770
fly as needed<font color="#E5E5E5"> so we</font><font color="#CCCCCC"> have all of these</font>

207
00:08:59,649 --> 00:09:07,080
cool<font color="#CCCCCC"> things</font><font color="#E5E5E5"> so</font><font color="#CCCCCC"> what did we do</font><font color="#E5E5E5"> with them</font>

208
00:09:02,770 --> 00:09:11,949
well we<font color="#CCCCCC"> did many things</font><font color="#E5E5E5"> one of them is</font>

209
00:09:07,080 --> 00:09:14,800
this study on how well current binary

210
00:09:11,950 --> 00:09:16,540
analysis techniques<font color="#CCCCCC"> an offensive binary</font>

211
00:09:14,800 --> 00:09:19,329
analysis techniques work on the cyber

212
00:09:16,540 --> 00:09:21,670
grant challenge<font color="#E5E5E5"> right so if you had a</font>

213
00:09:19,330 --> 00:09:24,670
research lab like ours<font color="#CCCCCC"> and you want to</font>

214
00:09:21,670 --> 00:09:29,680
<font color="#E5E5E5">participate in the CGC could you use</font>

215
00:09:24,670 --> 00:09:31,870
<font color="#E5E5E5">existing techniques to basically really</font>

216
00:09:29,680 --> 00:09:35,500
apply<font color="#CCCCCC"> them in kind</font><font color="#E5E5E5"> of this real world</font>

217
00:09:31,870 --> 00:09:37,959
like setting<font color="#E5E5E5"> and to participate in the</font>

218
00:09:35,500 --> 00:09:42,610
<font color="#CCCCCC">CGC you need to do two things you need</font>

219
00:09:37,959 --> 00:09:44,020
<font color="#E5E5E5">to analyze binaries</font><font color="#CCCCCC"> I need to exploit</font>

220
00:09:42,610 --> 00:09:46,870
<font color="#E5E5E5">these binaries</font><font color="#CCCCCC"> you also</font><font color="#E5E5E5"> need to patch</font>

221
00:09:44,020 --> 00:09:50,680
binaries but here we are focusing on the

222
00:09:46,870 --> 00:09:53,560
offensive techniques so we<font color="#CCCCCC"> did a</font><font color="#E5E5E5"> survey</font>

223
00:09:50,680 --> 00:09:56,500
<font color="#E5E5E5">of the existing works</font><font color="#CCCCCC"> the existing work</font>

224
00:09:53,560 --> 00:09:58,900
that we wanted<font color="#E5E5E5"> to systematize in this</font>

225
00:09:56,500 --> 00:10:01,660
project<font color="#E5E5E5"> and</font><font color="#CCCCCC"> we picked out these kind of</font>

226
00:09:58,900 --> 00:10:04,390
core papers they cover everything from

227
00:10:01,660 --> 00:10:06,370
<font color="#E5E5E5">binary analysis for vulnerability</font>

228
00:10:04,390 --> 00:10:08,110
discovery to automatic<font color="#E5E5E5"> exploit</font>

229
00:10:06,370 --> 00:10:09,970
generation<font color="#CCCCCC"> to automatic exploit</font>

230
00:10:08,110 --> 00:10:11,860
hardening against software mitigation

231
00:10:09,970 --> 00:10:14,020
techniques<font color="#E5E5E5"> software vulnerability</font>

232
00:10:11,860 --> 00:10:17,290
mitigation techniques<font color="#E5E5E5"> and there's</font>

233
00:10:14,020 --> 00:10:18,790
actually a bunch more<font color="#E5E5E5"> papers of course</font>

234
00:10:17,290 --> 00:10:21,160
that we draw<font color="#E5E5E5"> on these are kind of the</font>

235
00:10:18,790 --> 00:10:24,400
core ones and we<font color="#E5E5E5"> implemented a lot</font><font color="#CCCCCC"> of</font>

236
00:10:21,160 --> 00:10:27,370
<font color="#CCCCCC">different analyses to evaluate write</font>

237
00:10:24,400 --> 00:10:29,740
<font color="#E5E5E5">everything from kind of these base</font>

238
00:10:27,370 --> 00:10:32,560
<font color="#E5E5E5">analyses like a control flow graph</font>

239
00:10:29,740 --> 00:10:35,500
recovery through symbolic<font color="#E5E5E5"> execution with</font>

240
00:10:32,560 --> 00:10:38,140
various different<font color="#E5E5E5"> optimizations that we</font>

241
00:10:35,500 --> 00:10:42,940
can combine<font color="#E5E5E5"> and compare and contrast</font><font color="#CCCCCC"> on</font>

242
00:10:38,140 --> 00:10:45,189
a similar implementation base we

243
00:10:42,940 --> 00:10:49,050
<font color="#CCCCCC">implemented</font><font color="#E5E5E5"> a lot of static analysis</font>

244
00:10:45,190 --> 00:10:51,390
<font color="#CCCCCC">leicester's value set analysis and we</font>

245
00:10:49,050 --> 00:10:54,899
tested how well<font color="#E5E5E5"> it interacts with</font>

246
00:10:51,390 --> 00:10:56,709
fuzzing<font color="#E5E5E5"> if you have a assisted</font>

247
00:10:54,899 --> 00:11:00,850
symbolically assisted fuzzer

248
00:10:56,709 --> 00:11:03,010
we looked<font color="#E5E5E5"> into crash replaying a lot of</font>

249
00:11:00,850 --> 00:11:05,699
this sort<font color="#CCCCCC"> of stuff</font><font color="#E5E5E5"> and we invite you</font><font color="#CCCCCC"> to</font>

250
00:11:03,010 --> 00:11:09,480
read in the paper

251
00:11:05,699 --> 00:11:15,618
how we designed and implemented this on

252
00:11:09,480 --> 00:11:18,410
a common base in anger so of course we

253
00:11:15,619 --> 00:11:22,049
evaluated all<font color="#E5E5E5"> of these analyses</font><font color="#CCCCCC"> and</font>

254
00:11:18,410 --> 00:11:25,980
compared how they fare against each

255
00:11:22,049 --> 00:11:27,600
other and our<font color="#CCCCCC"> dataset was</font><font color="#E5E5E5"> a hundred and</font>

256
00:11:25,980 --> 00:11:30,809
<font color="#E5E5E5">thirty one binaries that DARPA released</font>

257
00:11:27,600 --> 00:11:33,720
as<font color="#CCCCCC"> the qualification event for the cyber</font>

258
00:11:30,809 --> 00:11:35,249
<font color="#E5E5E5">Grand Challenge and these binaries are</font>

259
00:11:33,720 --> 00:11:37,139
really interesting from a<font color="#CCCCCC"> research</font>

260
00:11:35,249 --> 00:11:38,819
perspective<font color="#E5E5E5"> because they're very diverse</font>

261
00:11:37,139 --> 00:11:41,459
<font color="#E5E5E5">they have different authors their sizes</font>

262
00:11:38,819 --> 00:11:43,919
are<font color="#CCCCCC"> everything from a couple kilobytes</font>

263
00:11:41,459 --> 00:11:45,479
<font color="#CCCCCC">to</font><font color="#E5E5E5"> ten megabytes</font><font color="#CCCCCC"> ten megabytes is</font>

264
00:11:43,919 --> 00:11:48,329
roughly the size of<font color="#CCCCCC"> Q</font><font color="#E5E5E5"> EMU</font>

265
00:11:45,480 --> 00:11:50,609
I believe so that's a fairly beefy

266
00:11:48,329 --> 00:11:52,949
binary they have a lot of<font color="#E5E5E5"> different</font>

267
00:11:50,609 --> 00:11:57,720
types of<font color="#CCCCCC"> vulnerabilities</font><font color="#E5E5E5"> everything from</font>

268
00:11:52,949 --> 00:12:00,839
null pointer dereferences to function

269
00:11:57,720 --> 00:12:03,569
<font color="#CCCCCC">pointer overrides B</font><font color="#E5E5E5"> table trickery all</font>

270
00:12:00,839 --> 00:12:05,629
sorts of really<font color="#E5E5E5"> subtle vulnerabilities</font>

271
00:12:03,569 --> 00:12:08,219
and some obvious vulnerabilities and

272
00:12:05,629 --> 00:12:10,939
they provide a ground truth<font color="#CCCCCC"> so</font><font color="#E5E5E5"> we can</font>

273
00:12:08,220 --> 00:12:15,179
really say hey this detection<font color="#E5E5E5"> we found</font>

274
00:12:10,939 --> 00:12:18,899
you know<font color="#E5E5E5"> how how</font><font color="#CCCCCC"> many false positives</font>

275
00:12:15,179 --> 00:12:21,149
<font color="#CCCCCC">did this you</font><font color="#E5E5E5"> know to create so</font><font color="#CCCCCC"> what</font><font color="#E5E5E5"> the</font>

276
00:12:18,899 --> 00:12:23,309
detection<font color="#E5E5E5"> of false positive or did we</font>

277
00:12:21,149 --> 00:12:24,959
find all of the bugs<font color="#E5E5E5"> and of course we'd</font>

278
00:12:23,309 --> 00:12:32,069
never find all of<font color="#CCCCCC"> the bugs but we can</font>

279
00:12:24,959 --> 00:12:34,888
try<font color="#CCCCCC"> and the binaries are simple in a way</font>

280
00:12:32,069 --> 00:12:37,410
that allows us<font color="#E5E5E5"> to save on</font><font color="#CCCCCC"> implementation</font>

281
00:12:34,889 --> 00:12:39,209
time<font color="#CCCCCC"> in the way that they</font><font color="#E5E5E5"> interact with</font>

282
00:12:37,410 --> 00:12:43,019
<font color="#CCCCCC">a very simplified environment model of</font>

283
00:12:39,209 --> 00:12:45,839
the operating system<font color="#E5E5E5"> so we implemented</font>

284
00:12:43,019 --> 00:12:49,230
<font color="#E5E5E5">all</font><font color="#CCCCCC"> of these techniques on and ran them</font>

285
00:12:45,839 --> 00:12:52,019
on<font color="#E5E5E5"> all these binaries and we found some</font>

286
00:12:49,230 --> 00:12:55,350
<font color="#CCCCCC">interesting results so for one thing</font><font color="#E5E5E5"> we</font>

287
00:12:52,019 --> 00:12:59,179
found that in our data set our fuzzer

288
00:12:55,350 --> 00:13:03,269
that we kind of used as a control check

289
00:12:59,179 --> 00:13:05,220
of offensive binary analysis found

290
00:13:03,269 --> 00:13:08,309
almost<font color="#E5E5E5"> three times as many</font>

291
00:13:05,220 --> 00:13:10,350
<font color="#E5E5E5">vulnerabilities as basically any other</font>

292
00:13:08,309 --> 00:13:12,209
<font color="#CCCCCC">single technique and it found more than</font>

293
00:13:10,350 --> 00:13:14,369
<font color="#CCCCCC">the union of the rest of them combined</font>

294
00:13:12,209 --> 00:13:17,020
<font color="#E5E5E5">right</font><font color="#CCCCCC"> so this is</font><font color="#E5E5E5"> very interesting</font>

295
00:13:14,369 --> 00:13:19,570
<font color="#CCCCCC">we used AFL as our fuzzer</font>

296
00:13:17,020 --> 00:13:21,730
and AFL<font color="#E5E5E5"> it turns out</font><font color="#CCCCCC"> is extremely good</font>

297
00:13:19,570 --> 00:13:23,709
<font color="#CCCCCC">so it would be</font><font color="#E5E5E5"> interesting to further</font>

298
00:13:21,730 --> 00:13:28,360
look into<font color="#CCCCCC"> why our results differ</font><font color="#E5E5E5"> from</font>

299
00:13:23,709 --> 00:13:32,469
<font color="#CCCCCC">labas results in this sense</font><font color="#E5E5E5"> but</font><font color="#CCCCCC"> we</font>

300
00:13:28,360 --> 00:13:34,570
looked<font color="#CCCCCC"> into why on our binaries</font><font color="#E5E5E5"> fuzzing</font>

301
00:13:32,470 --> 00:13:36,550
<font color="#E5E5E5">was king and it turns out that this is</font>

302
00:13:34,570 --> 00:13:40,240
<font color="#E5E5E5">because in the</font><font color="#CCCCCC"> CTC</font><font color="#E5E5E5"> binaries at least</font>

303
00:13:36,550 --> 00:13:46,959
most of the crashing conditions occurred

304
00:13:40,240 --> 00:13:49,120
<font color="#E5E5E5">about 10,000 basic blocks into 100,000</font>

305
00:13:46,959 --> 00:13:53,140
basic blocks into the<font color="#E5E5E5"> execution of the</font>

306
00:13:49,120 --> 00:13:54,940
application<font color="#CCCCCC"> right</font><font color="#E5E5E5"> and fuzzing found</font>

307
00:13:53,140 --> 00:13:57,160
those and<font color="#CCCCCC"> so Mollica execution before</font>

308
00:13:54,940 --> 00:13:59,800
<font color="#CCCCCC">reaching those tends to suffer a state</font>

309
00:13:57,160 --> 00:14:05,230
explosion so symbolic execution<font color="#E5E5E5"> like Tim</font>

310
00:13:59,800 --> 00:14:06,939
<font color="#CCCCCC">said earlier</font><font color="#E5E5E5"> suffers from this inability</font>

311
00:14:05,230 --> 00:14:08,950
<font color="#CCCCCC">to penetrate very deep into an</font>

312
00:14:06,940 --> 00:14:10,810
<font color="#CCCCCC">application but</font><font color="#E5E5E5"> on these binaries we</font>

313
00:14:08,950 --> 00:14:13,089
didn't see fuzzing having the same

314
00:14:10,810 --> 00:14:15,369
problem fuzzing actually got fairly deep

315
00:14:13,089 --> 00:14:18,370
this<font color="#E5E5E5"> is also actually symbolically</font>

316
00:14:15,370 --> 00:14:20,620
assisted fuzzing<font color="#E5E5E5"> so that might also</font>

317
00:14:18,370 --> 00:14:23,770
explain<font color="#E5E5E5"> why it was able to</font><font color="#CCCCCC"> penetrate</font>

318
00:14:20,620 --> 00:14:28,149
deeper but fuzzing alone also did pretty

319
00:14:23,770 --> 00:14:33,100
comparably<font color="#E5E5E5"> so we did this study we</font>

320
00:14:28,149 --> 00:14:34,839
implemented<font color="#E5E5E5"> this tool upon which the</font>

321
00:14:33,100 --> 00:14:38,140
<font color="#E5E5E5">next generation of binary analysis can</font>

322
00:14:34,839 --> 00:14:41,920
<font color="#E5E5E5">be built and so we open sourced it so</font>

323
00:14:38,140 --> 00:14:45,459
now we<font color="#CCCCCC"> hope to provide a base</font><font color="#E5E5E5"> for future</font>

324
00:14:41,920 --> 00:14:47,920
binary analysis research<font color="#E5E5E5"> the code is on</font>

325
00:14:45,459 --> 00:14:52,209
github<font color="#CCCCCC"> you can grab it</font><font color="#E5E5E5"> right now</font>

326
00:14:47,920 --> 00:14:58,240
<font color="#CCCCCC">actually the there's a docker image that</font>

327
00:14:52,209 --> 00:15:01,540
you can just run with your scripts<font color="#E5E5E5"> and</font>

328
00:14:58,240 --> 00:15:04,209
it'll execute them in<font color="#E5E5E5"> anger</font><font color="#CCCCCC"> there's</font>

329
00:15:01,540 --> 00:15:08,829
<font color="#E5E5E5">documentation</font><font color="#CCCCCC"> there's an IRC channel so</font>

330
00:15:04,209 --> 00:15:12,369
we really want to<font color="#E5E5E5"> push this as a tool in</font>

331
00:15:08,829 --> 00:15:14,949
the toolbox of security researchers I

332
00:15:12,370 --> 00:15:17,230
feel free to ask<font color="#E5E5E5"> us</font><font color="#CCCCCC"> for help</font><font color="#E5E5E5"> we were</font>

333
00:15:14,950 --> 00:15:20,550
very<font color="#E5E5E5"> responsive and really excited for</font>

334
00:15:17,230 --> 00:15:23,529
<font color="#E5E5E5">the next generation of binary analysis</font>

335
00:15:20,550 --> 00:15:27,339
anger was built by a very<font color="#E5E5E5"> large team</font>

336
00:15:23,529 --> 00:15:30,060
<font color="#E5E5E5">this</font><font color="#CCCCCC"> is</font><font color="#E5E5E5"> all of us from</font><font color="#CCCCCC"> UCSB</font><font color="#E5E5E5"> that have</font>

337
00:15:27,339 --> 00:15:34,290
worked on anger in<font color="#CCCCCC"> some capacity</font>

338
00:15:30,060 --> 00:15:36,380
and there's more people<font color="#CCCCCC"> that are</font>

339
00:15:34,290 --> 00:15:40,380
external collaborators and<font color="#E5E5E5"> it's really a</font>

340
00:15:36,380 --> 00:15:43,380
you know<font color="#E5E5E5"> fairly serious project that</font><font color="#CCCCCC"> we</font>

341
00:15:40,380 --> 00:15:46,920
<font color="#CCCCCC">were pushing forward</font><font color="#E5E5E5"> and with that I</font>

342
00:15:43,380 --> 00:15:52,950
<font color="#CCCCCC">would like to open it</font><font color="#E5E5E5"> up</font><font color="#CCCCCC"> for any</font>

343
00:15:46,920 --> 00:16:00,900
<font color="#CCCCCC">questions you</font><font color="#E5E5E5"> guys might</font><font color="#CCCCCC"> have all right</font>

344
00:15:52,950 --> 00:16:03,180
any<font color="#CCCCCC"> questions so</font><font color="#E5E5E5"> we're waiting</font><font color="#CCCCCC"> I</font><font color="#E5E5E5"> think</font>

345
00:16:00,900 --> 00:16:05,100
one of the benefits<font color="#CCCCCC"> of</font><font color="#E5E5E5"> having this</font>

346
00:16:03,180 --> 00:16:09,510
extensive study on<font color="#E5E5E5"> the same platform</font>

347
00:16:05,100 --> 00:16:11,400
<font color="#E5E5E5">there's a quite a good plus so the</font>

348
00:16:09,510 --> 00:16:12,930
question would be when you implement<font color="#E5E5E5"> in</font>

349
00:16:11,400 --> 00:16:15,720
all these different<font color="#E5E5E5"> approaches in the</font>

350
00:16:12,930 --> 00:16:19,020
same<font color="#E5E5E5"> single platform</font><font color="#CCCCCC"> did you do any</font>

351
00:16:15,720 --> 00:16:20,580
additional testing to prove that the

352
00:16:19,020 --> 00:16:23,730
algorithm that<font color="#E5E5E5"> was</font><font color="#CCCCCC"> presented by</font>

353
00:16:20,580 --> 00:16:27,420
so-and-so<font color="#E5E5E5"> is indeed and reflected</font>

354
00:16:23,730 --> 00:16:31,820
correctly<font color="#E5E5E5"> on my</font><font color="#CCCCCC"> Testament it's a it's a</font>

355
00:16:27,420 --> 00:16:35,910
tough<font color="#E5E5E5"> problem because a lot</font><font color="#CCCCCC"> of these a</font>

356
00:16:31,820 --> 00:16:38,190
lot of<font color="#E5E5E5"> a lot of these papers have very</font>

357
00:16:35,910 --> 00:16:41,850
targeted evaluations<font color="#E5E5E5"> yes that's the</font>

358
00:16:38,190 --> 00:16:45,810
reason<font color="#E5E5E5"> yeah so for example there are</font>

359
00:16:41,850 --> 00:16:47,400
papers that target<font color="#E5E5E5"> the state explosion</font>

360
00:16:45,810 --> 00:16:48,630
problem<font color="#CCCCCC"> right</font><font color="#E5E5E5"> and they have a motivating</font>

361
00:16:47,400 --> 00:16:51,240
<font color="#CCCCCC">example and then they show that they</font>

362
00:16:48,630 --> 00:16:53,760
work<font color="#E5E5E5"> on the motivating example and we</font>

363
00:16:51,240 --> 00:17:02,880
work on the motivating example<font color="#E5E5E5"> has that</font>

364
00:16:53,760 --> 00:17:05,069
<font color="#E5E5E5">it's hard to you know analyze it further</font>

365
00:17:02,880 --> 00:17:06,540
right<font color="#E5E5E5"> we feel we implemented this</font>

366
00:17:05,069 --> 00:17:08,520
correctly it works like it says in<font color="#E5E5E5"> the</font>

367
00:17:06,540 --> 00:17:10,649
<font color="#CCCCCC">paper but</font><font color="#E5E5E5"> does it</font><font color="#CCCCCC"> really</font><font color="#E5E5E5"> work the same</font>

368
00:17:08,520 --> 00:17:13,139
as the<font color="#CCCCCC"> original implementation for open</font>

369
00:17:10,650 --> 00:17:14,730
source<font color="#E5E5E5"> ones you can check but a lot of</font>

370
00:17:13,140 --> 00:17:17,220
these<font color="#E5E5E5"> things aren't open source and or</font>

371
00:17:14,730 --> 00:17:20,189
the tools are just<font color="#E5E5E5"> not available</font><font color="#CCCCCC"> so for</font>

372
00:17:17,220 --> 00:17:25,949
<font color="#E5E5E5">those you can't really check</font><font color="#CCCCCC"> we've done</font>

373
00:17:20,189 --> 00:17:28,370
a lot<font color="#E5E5E5"> of applications of anger see oh</font><font color="#CCCCCC"> no</font>

374
00:17:25,949 --> 00:17:33,450
<font color="#CCCCCC">am i</font><font color="#E5E5E5"> good</font><font color="#CCCCCC"> so</font><font color="#E5E5E5"> we've done a lot of</font>

375
00:17:28,369 --> 00:17:36,389
applications on anger<font color="#CCCCCC"> in terms of you</font>

376
00:17:33,450 --> 00:17:38,160
<font color="#CCCCCC">know of course research</font><font color="#E5E5E5"> on what we feel</font>

377
00:17:36,390 --> 00:17:41,000
<font color="#E5E5E5">should be solvable with these techniques</font>

378
00:17:38,160 --> 00:17:45,340
but<font color="#CCCCCC"> also in the</font><font color="#E5E5E5"> CDC and</font>

379
00:17:41,000 --> 00:17:47,660
in capture-the-flag competitions<font color="#CCCCCC"> last</font>

380
00:17:45,340 --> 00:17:51,949
actually last weekend at<font color="#E5E5E5"> DEFCON anger</font>

381
00:17:47,660 --> 00:17:53,960
got first blood on the top reversing

382
00:17:51,950 --> 00:17:58,250
challenge<font color="#E5E5E5"> at DEFCON so that's you know</font>

383
00:17:53,960 --> 00:18:01,040
against human hackers but and we feel

384
00:17:58,250 --> 00:18:02,570
that<font color="#CCCCCC"> from our results it makes sense you</font>

385
00:18:01,040 --> 00:18:04,820
know<font color="#E5E5E5"> when we see that hey there's a path</font>

386
00:18:02,570 --> 00:18:07,610
explosion here we look into it<font color="#CCCCCC"> okay that</font>

387
00:18:04,820 --> 00:18:10,909
<font color="#E5E5E5">makes</font><font color="#CCCCCC"> sense when there are some things</font>

388
00:18:07,610 --> 00:18:13,129
endure<font color="#CCCCCC"> a crash</font><font color="#E5E5E5"> we look into the binary</font>

389
00:18:10,910 --> 00:18:15,230
<font color="#CCCCCC">and see okay well from a theoretical</font>

390
00:18:13,130 --> 00:18:16,610
perspective<font color="#CCCCCC"> this would over want this</font>

391
00:18:15,230 --> 00:18:20,270
analysis and<font color="#E5E5E5"> that would overwhelm that</font>

392
00:18:16,610 --> 00:18:22,189
analysis<font color="#E5E5E5"> but</font><font color="#CCCCCC"> kind of</font><font color="#E5E5E5"> we do what we can</font>

393
00:18:20,270 --> 00:18:23,960
with the openness<font color="#CCCCCC"> that is available yeah</font>

394
00:18:22,190 --> 00:18:26,620
I totally<font color="#E5E5E5"> understand</font><font color="#CCCCCC"> thank you for the</font>

395
00:18:23,960 --> 00:18:26,620
detailed answer

