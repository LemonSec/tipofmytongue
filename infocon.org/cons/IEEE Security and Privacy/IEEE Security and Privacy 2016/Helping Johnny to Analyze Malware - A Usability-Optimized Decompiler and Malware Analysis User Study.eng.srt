1
00:00:00,030 --> 00:00:04,920
thank you so I'm<font color="#E5E5E5"> very pleased to be</font><font color="#CCCCCC"> here</font>

2
00:00:03,060 --> 00:00:06,930
<font color="#E5E5E5">today to be able</font><font color="#CCCCCC"> to talk to you about</font>

3
00:00:04,920 --> 00:00:10,050
some<font color="#CCCCCC"> of the work that</font><font color="#E5E5E5"> we'll be doing on</font>

4
00:00:06,930 --> 00:00:12,540
<font color="#E5E5E5">pioneering Cody compilation and in our</font>

5
00:00:10,050 --> 00:00:14,490
paper<font color="#E5E5E5"> we focus on improving the</font>

6
00:00:12,540 --> 00:00:17,640
readability<font color="#CCCCCC"> of the</font><font color="#E5E5E5"> decompile code in</font>

7
00:00:14,490 --> 00:00:21,330
<font color="#E5E5E5">order</font><font color="#CCCCCC"> to facilitate the analysis of</font>

8
00:00:17,640 --> 00:00:23,699
malware<font color="#E5E5E5"> and binary manual reverse</font>

9
00:00:21,330 --> 00:00:24,919
engineering of<font color="#E5E5E5"> binary</font><font color="#CCCCCC"> code in general so</font>

10
00:00:23,699 --> 00:00:27,810
<font color="#E5E5E5">this is joint work with</font>

11
00:00:24,920 --> 00:00:29,880
<font color="#E5E5E5">Sogeti shunt</font><font color="#CCCCCC"> McGrath</font><font color="#E5E5E5"> Padilla and</font><font color="#CCCCCC"> Mattie</font>

12
00:00:27,810 --> 00:00:33,300
<font color="#CCCCCC">Smith and we're from</font><font color="#E5E5E5"> the University of</font>

13
00:00:29,880 --> 00:00:37,110
<font color="#E5E5E5">Bonn and from home for</font><font color="#CCCCCC"> fke Institute in</font>

14
00:00:33,300 --> 00:00:39,360
Germany<font color="#CCCCCC"> so I'd like to</font><font color="#E5E5E5"> start by asking a</font>

15
00:00:37,110 --> 00:00:41,100
question<font color="#E5E5E5"> so if I give you a</font><font color="#CCCCCC"> program and</font>

16
00:00:39,360 --> 00:00:43,079
ask you<font color="#E5E5E5"> to tell me what this program</font>

17
00:00:41,100 --> 00:00:45,180
actually does<font color="#E5E5E5"> would you rather have a</font>

18
00:00:43,079 --> 00:00:48,300
look at this version<font color="#E5E5E5"> of the code which</font>

19
00:00:45,180 --> 00:00:49,920
is<font color="#CCCCCC"> the</font><font color="#E5E5E5"> low-level assembly code or would</font>

20
00:00:48,300 --> 00:00:52,288
<font color="#E5E5E5">you rather have</font><font color="#CCCCCC"> a look at this version</font>

21
00:00:49,920 --> 00:00:54,600
of<font color="#E5E5E5"> the program which is</font><font color="#CCCCCC"> the</font><font color="#E5E5E5"> high-level</font>

22
00:00:52,289 --> 00:00:56,070
source code and against<font color="#E5E5E5"> that most of you</font>

23
00:00:54,600 --> 00:00:58,800
would rather analyze the source code

24
00:00:56,070 --> 00:01:01,710
<font color="#E5E5E5">because it's easier to</font><font color="#CCCCCC"> analyze</font><font color="#E5E5E5"> and the</font>

25
00:00:58,800 --> 00:01:05,220
reason<font color="#E5E5E5"> for that is source code has</font>

26
00:01:01,710 --> 00:01:06,960
abstractions<font color="#CCCCCC"> that help us</font><font color="#E5E5E5"> analyzed</font><font color="#CCCCCC"> that</font>

27
00:01:05,220 --> 00:01:09,030
help<font color="#E5E5E5"> that help us to understand the code</font>

28
00:01:06,960 --> 00:01:11,639
these abstractions include things like

29
00:01:09,030 --> 00:01:15,330
functions variables<font color="#E5E5E5"> and control flow</font>

30
00:01:11,640 --> 00:01:18,119
structure however<font color="#E5E5E5"> the version</font><font color="#CCCCCC"> of the</font>

31
00:01:15,330 --> 00:01:20,189
source<font color="#E5E5E5"> code shown in this example is we</font>

32
00:01:18,119 --> 00:01:23,270
are not<font color="#E5E5E5"> very readable and can be</font>

33
00:01:20,189 --> 00:01:25,979
<font color="#E5E5E5">rewritten</font><font color="#CCCCCC"> in a much more readable way</font>

34
00:01:23,270 --> 00:01:30,570
<font color="#CCCCCC">where you</font><font color="#E5E5E5"> have more meaningful variable</font>

35
00:01:25,979 --> 00:01:33,600
names and similar control flow structure

36
00:01:30,570 --> 00:01:35,908
and so in general analyzing<font color="#CCCCCC"> well</font>

37
00:01:33,600 --> 00:01:38,490
readable<font color="#E5E5E5"> high-level source code tend to</font>

38
00:01:35,909 --> 00:01:39,680
be much<font color="#CCCCCC"> easier than analyzing binary</font>

39
00:01:38,490 --> 00:01:44,908
code

40
00:01:39,680 --> 00:01:47,040
however in security we often only have

41
00:01:44,909 --> 00:01:49,680
<font color="#CCCCCC">access to</font><font color="#E5E5E5"> the binary version of a</font>

42
00:01:47,040 --> 00:01:51,750
<font color="#E5E5E5">program and the problem is when the</font>

43
00:01:49,680 --> 00:01:53,430
<font color="#E5E5E5">source code is compiled all these</font>

44
00:01:51,750 --> 00:01:55,950
abstractions are lost<font color="#E5E5E5"> and they are</font>

45
00:01:53,430 --> 00:01:58,740
removed from<font color="#E5E5E5"> the final</font><font color="#CCCCCC"> version of a</font>

46
00:01:55,950 --> 00:02:00,479
<font color="#E5E5E5">program that</font><font color="#CCCCCC"> we have access to so here</font>

47
00:01:58,740 --> 00:02:04,439
where the<font color="#CCCCCC"> accumulation comes in so a</font>

48
00:02:00,479 --> 00:02:07,799
decompilers<font color="#E5E5E5"> try to reverse the process</font>

49
00:02:04,439 --> 00:02:11,790
of compilation by recovering<font color="#E5E5E5"> these</font>

50
00:02:07,799 --> 00:02:13,730
abstractions<font color="#E5E5E5"> from</font><font color="#CCCCCC"> the binary</font><font color="#E5E5E5"> code and in</font>

51
00:02:11,790 --> 00:02:15,859
order<font color="#CCCCCC"> to reconstruct</font>

52
00:02:13,730 --> 00:02:21,470
representation of the program that<font color="#E5E5E5"> we</font>

53
00:02:15,860 --> 00:02:23,180
can't analyze more easily<font color="#E5E5E5"> so decompilers</font>

54
00:02:21,470 --> 00:02:27,890
<font color="#E5E5E5">have been studied</font><font color="#CCCCCC"> for over</font><font color="#E5E5E5"> 60 years</font>

55
00:02:23,180 --> 00:02:29,569
<font color="#E5E5E5">and also while a lot of work has been</font>

56
00:02:27,890 --> 00:02:32,119
<font color="#CCCCCC">done on</font><font color="#E5E5E5"> improving the quality of</font>

57
00:02:29,569 --> 00:02:35,329
decompilers state-of-the-art decompiler

58
00:02:32,120 --> 00:02:38,840
still<font color="#E5E5E5"> produce code that is difficult to</font>

59
00:02:35,330 --> 00:02:41,000
analyze and sometimes the<font color="#CCCCCC"> the de combate</font>

60
00:02:38,840 --> 00:02:43,760
code is so difficult<font color="#CCCCCC"> that man who</font>

61
00:02:41,000 --> 00:02:45,980
<font color="#CCCCCC">analysts just decides</font><font color="#E5E5E5"> to stop reading</font>

62
00:02:43,760 --> 00:02:48,340
<font color="#E5E5E5">the</font><font color="#CCCCCC"> the</font><font color="#E5E5E5"> decompile code and go back to</font>

63
00:02:45,980 --> 00:02:51,530
analyzing<font color="#E5E5E5"> the assembly code directly</font>

64
00:02:48,340 --> 00:02:55,700
<font color="#E5E5E5">moreover previous work and accumulation</font>

65
00:02:51,530 --> 00:02:58,370
<font color="#E5E5E5">never has</font><font color="#CCCCCC"> never included user studies to</font>

66
00:02:55,700 --> 00:03:00,798
event to actually<font color="#E5E5E5"> evaluate the</font>

67
00:02:58,370 --> 00:03:04,010
usefulness<font color="#E5E5E5"> of</font><font color="#CCCCCC"> D</font><font color="#E5E5E5"> compilers for formal</font>

68
00:03:00,799 --> 00:03:07,819
analysis<font color="#E5E5E5"> instead they</font><font color="#CCCCCC"> rely on some</font>

69
00:03:04,010 --> 00:03:10,519
readability metrics<font color="#E5E5E5"> like the compression</font>

70
00:03:07,819 --> 00:03:13,608
ratio by comparing the number<font color="#CCCCCC"> of lines</font>

71
00:03:10,519 --> 00:03:16,400
of code of the<font color="#E5E5E5"> de combate output list to</font>

72
00:03:13,609 --> 00:03:18,260
the<font color="#CCCCCC"> invert assembly program or</font><font color="#E5E5E5"> counting</font>

73
00:03:16,400 --> 00:03:22,730
the number<font color="#CCCCCC"> of water statements in the</font>

74
00:03:18,260 --> 00:03:25,489
code while<font color="#E5E5E5"> these metrics provide some</font>

75
00:03:22,730 --> 00:03:28,298
insights into the readability<font color="#CCCCCC"> of the</font>

76
00:03:25,489 --> 00:03:30,620
<font color="#CCCCCC">decompiled</font><font color="#E5E5E5"> code</font><font color="#CCCCCC"> we believe</font><font color="#E5E5E5"> that the</font>

77
00:03:28,299 --> 00:03:34,459
usefulness of decompilers formal

78
00:03:30,620 --> 00:03:38,290
analysis need to be evaluated with<font color="#E5E5E5"> user</font>

79
00:03:34,459 --> 00:03:43,190
studies that involve real

80
00:03:38,290 --> 00:03:46,280
<font color="#E5E5E5">malware real</font><font color="#CCCCCC"> memory code so this what we</font>

81
00:03:43,190 --> 00:03:48,410
<font color="#E5E5E5">able</font><font color="#CCCCCC"> to did so at</font><font color="#E5E5E5"> NGSS last year we</font>

82
00:03:46,280 --> 00:03:53,560
<font color="#CCCCCC">presented a D compiler called dream</font>

83
00:03:48,410 --> 00:03:56,750
where we<font color="#CCCCCC"> proposed an approach to</font>

84
00:03:53,560 --> 00:04:00,680
construct to produce<font color="#E5E5E5"> fully structured</font>

85
00:03:56,750 --> 00:04:03,859
code without<font color="#E5E5E5"> go-to statement and in this</font>

86
00:04:00,680 --> 00:04:06,319
work we this<font color="#E5E5E5"> worked start from</font><font color="#CCCCCC"> start</font>

87
00:04:03,859 --> 00:04:09,440
<font color="#E5E5E5">from this point and it's about how do we</font>

88
00:04:06,319 --> 00:04:11,720
<font color="#E5E5E5">take the D compile code and put it in a</font>

89
00:04:09,440 --> 00:04:15,139
readable form that is easily

90
00:04:11,720 --> 00:04:17,418
<font color="#E5E5E5">understandable by human</font><font color="#CCCCCC"> analysts</font><font color="#E5E5E5"> and for</font>

91
00:04:15,139 --> 00:04:20,359
<font color="#E5E5E5">this we implemented several usability</font>

92
00:04:17,418 --> 00:04:23,080
extensions on top of a dream and we call

93
00:04:20,358 --> 00:04:26,010
the extended version<font color="#E5E5E5"> dream</font><font color="#CCCCCC"> +</font><font color="#E5E5E5"> +</font><font color="#CCCCCC"> +</font>

94
00:04:23,080 --> 00:04:29,250
evaluate<font color="#E5E5E5"> our approach we conducted</font>

95
00:04:26,010 --> 00:04:29,940
the first user study on the quality of

96
00:04:29,250 --> 00:04:35,010
<font color="#E5E5E5">decompiler</font>

97
00:04:29,940 --> 00:04:38,130
<font color="#CCCCCC">to compilers for</font><font color="#E5E5E5"> formal analysis so the</font>

98
00:04:35,010 --> 00:04:42,120
first step into designing<font color="#E5E5E5"> our usability</font>

99
00:04:38,130 --> 00:04:44,490
extensions was to<font color="#E5E5E5"> identify the key with</font>

100
00:04:42,120 --> 00:04:48,810
ability problems and<font color="#E5E5E5"> D compiler</font>

101
00:04:44,490 --> 00:04:52,020
generated code and for<font color="#E5E5E5"> this we talked to</font>

102
00:04:48,810 --> 00:04:55,700
several manual<font color="#CCCCCC"> analyst to identify the</font>

103
00:04:52,020 --> 00:04:59,669
main issues related issues they have

104
00:04:55,700 --> 00:05:02,520
<font color="#E5E5E5">when analyzing the compiled code and we</font>

105
00:04:59,670 --> 00:05:06,960
also analyzed the<font color="#CCCCCC"> de combate</font><font color="#E5E5E5"> code</font>

106
00:05:02,520 --> 00:05:11,400
generated by<font color="#CCCCCC"> dream and by this</font><font color="#E5E5E5"> industry</font>

107
00:05:06,960 --> 00:05:14,669
<font color="#E5E5E5">standard hex rate and I will give a</font><font color="#CCCCCC"> very</font>

108
00:05:11,400 --> 00:05:20,130
short<font color="#E5E5E5"> overview about the readability</font>

109
00:05:14,670 --> 00:05:22,800
problems we we found<font color="#E5E5E5"> and we</font><font color="#CCCCCC"> solved so we</font>

110
00:05:20,130 --> 00:05:27,390
group the readability problems into

111
00:05:22,800 --> 00:05:29,880
three categories well first<font color="#CCCCCC"> D compiled</font>

112
00:05:27,390 --> 00:05:34,080
code<font color="#E5E5E5"> often contains overly complex</font>

113
00:05:29,880 --> 00:05:37,140
expressions<font color="#E5E5E5"> and such expressions or are</font>

114
00:05:34,080 --> 00:05:39,530
almost never found in the source<font color="#E5E5E5"> code</font>

115
00:05:37,140 --> 00:05:43,560
<font color="#CCCCCC">written by humans</font><font color="#E5E5E5"> which makes them</font>

116
00:05:39,530 --> 00:05:47,789
difficult to<font color="#E5E5E5"> understand this includes a</font>

117
00:05:43,560 --> 00:05:52,020
lot<font color="#E5E5E5"> of redundant variables and for this</font>

118
00:05:47,790 --> 00:05:56,510
we implemented<font color="#E5E5E5"> the technique to</font>

119
00:05:52,020 --> 00:05:56,510
recognize<font color="#CCCCCC"> shots shots</font><font color="#E5E5E5"> variables and</font>

120
00:05:56,660 --> 00:06:04,140
<font color="#CCCCCC">replace them with a single variable that</font>

121
00:06:01,550 --> 00:06:08,460
without a<font color="#E5E5E5"> single variable without</font>

122
00:06:04,140 --> 00:06:11,880
changing the semantics of the code we

123
00:06:08,460 --> 00:06:16,039
also found that<font color="#E5E5E5"> we have overly complex</font>

124
00:06:11,880 --> 00:06:19,500
logic expressions and to solve this we

125
00:06:16,040 --> 00:06:24,870
use the<font color="#E5E5E5"> theorem prover to solve to</font>

126
00:06:19,500 --> 00:06:27,960
simplify the<font color="#E5E5E5"> DVDs conditions and third</font>

127
00:06:24,870 --> 00:06:30,780
problem is you have a lot of pointer

128
00:06:27,960 --> 00:06:32,789
arithmetic that's involved<font color="#CCCCCC"> in</font><font color="#E5E5E5"> both</font><font color="#CCCCCC"> our</font>

129
00:06:30,780 --> 00:06:35,159
<font color="#E5E5E5">dereference and here we make several</font>

130
00:06:32,790 --> 00:06:37,440
techniques<font color="#E5E5E5"> to transform these</font>

131
00:06:35,160 --> 00:06:38,569
expressions into<font color="#CCCCCC"> a more readable way</font>

132
00:06:37,440 --> 00:06:44,499
which<font color="#E5E5E5"> as</font>

133
00:06:38,569 --> 00:06:47,869
array axises the second problem was the

134
00:06:44,499 --> 00:06:52,330
convoluted control<font color="#CCCCCC"> flow</font><font color="#E5E5E5"> so in general</font>

135
00:06:47,869 --> 00:06:55,099
the readability<font color="#CCCCCC"> of</font><font color="#E5E5E5"> a program depends on</font>

136
00:06:52,330 --> 00:06:57,979
<font color="#E5E5E5">the simplicity of its control structure</font>

137
00:06:55,099 --> 00:07:02,029
and we<font color="#E5E5E5"> found several problems of related</font>

138
00:06:57,979 --> 00:07:04,339
to that<font color="#E5E5E5"> in the decompile code for</font>

139
00:07:02,029 --> 00:07:08,589
<font color="#E5E5E5">example you have</font><font color="#CCCCCC"> duplicate or inline</font>

140
00:07:04,339 --> 00:07:16,430
code and to solve this we created a

141
00:07:08,589 --> 00:07:19,490
query<font color="#E5E5E5"> an engine</font><font color="#CCCCCC"> two to four query and to</font>

142
00:07:16,430 --> 00:07:22,430
query a code and use the apply<font color="#E5E5E5"> some</font>

143
00:07:19,490 --> 00:07:25,129
transformations<font color="#E5E5E5"> so an analyst can simply</font>

144
00:07:22,430 --> 00:07:27,649
write a<font color="#CCCCCC"> batter</font><font color="#E5E5E5"> for an inline function</font>

145
00:07:25,129 --> 00:07:31,939
<font color="#E5E5E5">that would be so when this pattern is</font>

146
00:07:27,649 --> 00:07:34,999
<font color="#E5E5E5">found the the whole code block will be</font>

147
00:07:31,939 --> 00:07:37,490
<font color="#E5E5E5">replaced by a simple function</font><font color="#CCCCCC"> code</font><font color="#E5E5E5"> we</font>

148
00:07:34,999 --> 00:07:41,089
also found some complex loop structures

149
00:07:37,490 --> 00:07:45,409
<font color="#E5E5E5">that result from compiler optimizations</font>

150
00:07:41,089 --> 00:07:48,349
<font color="#E5E5E5">and we reverse that the third category</font>

151
00:07:45,409 --> 00:07:51,649
<font color="#E5E5E5">of problems was the that</font><font color="#CCCCCC"> decompiled code</font>

152
00:07:48,349 --> 00:07:57,079
<font color="#CCCCCC">often lack high level semantics and this</font>

153
00:07:51,649 --> 00:07:59,659
method such as<font color="#E5E5E5"> variable</font><font color="#CCCCCC"> names this this</font>

154
00:07:57,079 --> 00:08:02,389
this information<font color="#CCCCCC"> is simply lost during</font>

155
00:07:59,659 --> 00:08:07,909
compilation and we developed<font color="#E5E5E5"> several</font>

156
00:08:02,389 --> 00:08:09,769
techniques to give sort<font color="#E5E5E5"> of</font>

157
00:08:07,909 --> 00:08:12,409
representative names to the variables

158
00:08:09,769 --> 00:08:15,699
based on the context in<font color="#CCCCCC"> which they are</font>

159
00:08:12,409 --> 00:08:18,259
<font color="#E5E5E5">used and the same we do the same for</font>

160
00:08:15,699 --> 00:08:20,300
<font color="#CCCCCC">name constant so we have some we</font><font color="#E5E5E5"> have</font>

161
00:08:18,259 --> 00:08:22,309
some library functions<font color="#E5E5E5"> where are some</font>

162
00:08:20,300 --> 00:08:23,449
contacts have a special meaning<font color="#E5E5E5"> and the</font>

163
00:08:22,309 --> 00:08:24,949
source code they<font color="#CCCCCC"> have a textual</font>

164
00:08:23,449 --> 00:08:27,829
representation revealing their code

165
00:08:24,949 --> 00:08:30,740
their purpose but when the code<font color="#CCCCCC"> is</font>

166
00:08:27,829 --> 00:08:32,719
compiled you only<font color="#E5E5E5"> have the basically the</font>

167
00:08:30,740 --> 00:08:34,909
value<font color="#E5E5E5"> and as an analyst you have to look</font>

168
00:08:32,719 --> 00:08:36,529
at<font color="#CCCCCC"> the loop</font><font color="#E5E5E5"> this value up what what what</font>

169
00:08:34,909 --> 00:08:38,990
this mean when you<font color="#E5E5E5"> analyze the</font><font color="#CCCCCC"> decompile</font>

170
00:08:36,529 --> 00:08:43,519
code<font color="#E5E5E5"> so all we also handle</font><font color="#CCCCCC"> a</font><font color="#E5E5E5"> name</font>

171
00:08:38,990 --> 00:08:46,730
constant and so to give you<font color="#CCCCCC"> a feeling or</font>

172
00:08:43,519 --> 00:08:49,880
an<font color="#E5E5E5"> example about these problems here's</font>

173
00:08:46,730 --> 00:08:51,000
an<font color="#E5E5E5"> example which</font><font color="#CCCCCC"> shows the decompiled</font>

174
00:08:49,880 --> 00:08:54,149
code

175
00:08:51,000 --> 00:08:56,959
for the domain generation algorithm for

176
00:08:54,149 --> 00:09:00,089
the symptom aware as generated by the

177
00:08:56,959 --> 00:09:02,189
extras<font color="#E5E5E5"> decompiler which is the industry</font>

178
00:09:00,089 --> 00:09:05,189
standard that's used<font color="#E5E5E5"> by most malware</font>

179
00:09:02,189 --> 00:09:08,310
analysts<font color="#E5E5E5"> and here you see that you</font><font color="#CCCCCC"> have</font>

180
00:09:05,189 --> 00:09:13,670
a lot of<font color="#E5E5E5"> variables in the code you</font><font color="#CCCCCC"> have</font>

181
00:09:08,310 --> 00:09:16,050
complex expressions<font color="#E5E5E5"> and you have complex</font>

182
00:09:13,670 --> 00:09:19,709
expressions with pointer arithmetic<font color="#CCCCCC"> and</font>

183
00:09:16,050 --> 00:09:23,310
so the automatic transformation we<font color="#CCCCCC"> built</font>

184
00:09:19,709 --> 00:09:25,800
in the paper<font color="#CCCCCC"> produce a much more simpler</font>

185
00:09:23,310 --> 00:09:27,779
code<font color="#E5E5E5"> and here you can easily see that</font>

186
00:09:25,800 --> 00:09:30,719
<font color="#E5E5E5">you have like two array of characters</font>

187
00:09:27,779 --> 00:09:32,310
and<font color="#E5E5E5"> you have a simple loop that chooses</font>

188
00:09:30,720 --> 00:09:37,560
between<font color="#CCCCCC"> these two arrays depending on</font>

189
00:09:32,310 --> 00:09:40,258
<font color="#E5E5E5">severity of the loop counter so in order</font>

190
00:09:37,560 --> 00:09:44,638
<font color="#E5E5E5">to</font><font color="#CCCCCC"> evaluate or approach we conducted</font>

191
00:09:40,259 --> 00:09:49,500
user study<font color="#E5E5E5"> and for this study we talked</font>

192
00:09:44,639 --> 00:09:51,959
3d compilers<font color="#E5E5E5"> we talked our usability or</font>

193
00:09:49,500 --> 00:09:54,720
<font color="#E5E5E5">or to improve the compiler we'll</font><font color="#CCCCCC"> call it</font>

194
00:09:51,959 --> 00:09:57,359
the readability improvement we took the

195
00:09:54,720 --> 00:10:00,540
<font color="#CCCCCC">original dream decompiler</font><font color="#E5E5E5"> and we took</font>

196
00:09:57,360 --> 00:10:03,509
the hex<font color="#CCCCCC"> rest decompiler</font><font color="#E5E5E5"> as an industry</font>

197
00:10:00,540 --> 00:10:06,719
standard<font color="#E5E5E5"> and we had our</font><font color="#CCCCCC"> with</font>

198
00:10:03,509 --> 00:10:09,800
participants complete<font color="#CCCCCC"> six malware</font>

199
00:10:06,720 --> 00:10:12,750
reverse engineering<font color="#E5E5E5"> tasks so each task</font>

200
00:10:09,800 --> 00:10:16,620
involved the analysis of the reverse

201
00:10:12,750 --> 00:10:18,600
<font color="#CCCCCC">engineering of</font><font color="#E5E5E5"> a given function from</font>

202
00:10:16,620 --> 00:10:23,309
from a malware<font color="#E5E5E5"> from a</font><font color="#CCCCCC"> mirror assemble</font>

203
00:10:18,600 --> 00:10:25,500
and to<font color="#E5E5E5"> ensure that we have unbiased</font>

204
00:10:23,309 --> 00:10:29,839
results we had to do a lot<font color="#CCCCCC"> of kind of</font>

205
00:10:25,500 --> 00:10:32,639
juggling<font color="#E5E5E5"> with the task order so we</font>

206
00:10:29,839 --> 00:10:34,139
<font color="#E5E5E5">counterbalanced the decompile orders</font>

207
00:10:32,639 --> 00:10:37,199
that each<font color="#E5E5E5"> decompiler</font>

208
00:10:34,139 --> 00:10:39,350
will be used in the same frequency at

209
00:10:37,199 --> 00:10:43,649
all<font color="#E5E5E5"> positions in the study we also</font>

210
00:10:39,350 --> 00:10:45,990
<font color="#CCCCCC">counterbalanced task order so that for</font>

211
00:10:43,649 --> 00:10:49,050
<font color="#CCCCCC">example some participant</font><font color="#E5E5E5"> behalf of the</font>

212
00:10:45,990 --> 00:10:51,689
participants<font color="#E5E5E5"> start with the with easy</font>

213
00:10:49,050 --> 00:10:55,859
task<font color="#E5E5E5"> and then they had the difficult</font>

214
00:10:51,689 --> 00:10:59,339
task<font color="#E5E5E5"> the other half had it in the other</font>

215
00:10:55,860 --> 00:11:03,360
in other way and to measure user

216
00:10:59,339 --> 00:11:04,470
perceptions<font color="#E5E5E5"> we after each task we asked</font>

217
00:11:03,360 --> 00:11:07,020
<font color="#E5E5E5">student</font><font color="#CCCCCC"> few</font>

218
00:11:04,470 --> 00:11:09,900
question<font color="#E5E5E5"> the participants few questions</font>

219
00:11:07,020 --> 00:11:12,870
<font color="#CCCCCC">regarding the usability or the reality</font>

220
00:11:09,900 --> 00:11:15,810
of the code and at the end<font color="#E5E5E5"> we show them</font>

221
00:11:12,870 --> 00:11:20,520
<font color="#CCCCCC">the D combined output generated by all</font>

222
00:11:15,810 --> 00:11:23,219
the compilers and<font color="#E5E5E5"> I told them to ask</font>

223
00:11:20,520 --> 00:11:25,770
them to to give a rating<font color="#E5E5E5"> for each for</font>

224
00:11:23,220 --> 00:11:28,890
each<font color="#E5E5E5"> of the three D compilers and at all</font>

225
00:11:25,770 --> 00:11:32,699
stages in the studies<font color="#E5E5E5"> we didn't tell</font>

226
00:11:28,890 --> 00:11:35,400
participants<font color="#E5E5E5"> for</font><font color="#CCCCCC"> any of the tasks which</font>

227
00:11:32,700 --> 00:11:37,350
compiler is used to to<font color="#CCCCCC"> generate this</font>

228
00:11:35,400 --> 00:11:45,780
code in order<font color="#E5E5E5"> to</font><font color="#CCCCCC"> have an unbiased</font>

229
00:11:37,350 --> 00:11:49,350
results and so regarding<font color="#CCCCCC"> task</font><font color="#E5E5E5"> selections</font>

230
00:11:45,780 --> 00:11:52,470
we approached three independent<font color="#E5E5E5"> malware</font>

231
00:11:49,350 --> 00:11:57,030
<font color="#E5E5E5">analysts who</font><font color="#CCCCCC"> are who were not involved</font>

232
00:11:52,470 --> 00:11:57,750
in<font color="#CCCCCC"> the study or in the on the work on</font>

233
00:11:57,030 --> 00:12:01,260
the decompiler

234
00:11:57,750 --> 00:12:04,170
we<font color="#CCCCCC"> told them that we</font><font color="#E5E5E5"> want</font><font color="#CCCCCC"> to conduct</font><font color="#E5E5E5"> a</font>

235
00:12:01,260 --> 00:12:08,370
study<font color="#E5E5E5"> on malware analysis and we asked</font>

236
00:12:04,170 --> 00:12:11,310
<font color="#E5E5E5">them to provide with malware</font><font color="#CCCCCC"> code</font>

237
00:12:08,370 --> 00:12:15,740
<font color="#CCCCCC">snippets that they had to</font><font color="#E5E5E5"> analyze during</font>

238
00:12:11,310 --> 00:12:21,449
<font color="#CCCCCC">the</font><font color="#E5E5E5"> work and we got six tasks from</font>

239
00:12:15,740 --> 00:12:25,170
involving five<font color="#CCCCCC"> Mara families we had two</font>

240
00:12:21,450 --> 00:12:28,290
groups<font color="#E5E5E5"> of participants we invited 36</font>

241
00:12:25,170 --> 00:12:31,199
students who successfully completed our

242
00:12:28,290 --> 00:12:33,959
manual<font color="#CCCCCC"> bootcamp which is a lab course</font>

243
00:12:31,200 --> 00:12:37,140
<font color="#CCCCCC">where students are introduced to</font><font color="#E5E5E5"> the</font>

244
00:12:33,960 --> 00:12:39,450
basic concepts<font color="#E5E5E5"> of manual manual analysis</font>

245
00:12:37,140 --> 00:12:45,500
and reverse engineering<font color="#E5E5E5"> and we also</font>

246
00:12:39,450 --> 00:12:47,760
contacted<font color="#CCCCCC"> 31 professional manner</font><font color="#E5E5E5"> analyst</font>

247
00:12:45,500 --> 00:12:50,820
2020 ones who<font color="#E5E5E5"> had completed the study</font>

248
00:12:47,760 --> 00:12:55,230
and<font color="#E5E5E5"> also</font><font color="#CCCCCC"> nine the professional</font><font color="#E5E5E5"> male</font>

249
00:12:50,820 --> 00:12:57,990
<font color="#E5E5E5">analyst completed our study so here's</font>

250
00:12:55,230 --> 00:12:59,700
the table<font color="#E5E5E5"> show some the results</font>

251
00:12:57,990 --> 00:13:03,540
so<font color="#CCCCCC"> here the table shows the average</font>

252
00:12:59,700 --> 00:13:06,780
<font color="#E5E5E5">squirrel's achieved during the study so</font>

253
00:13:03,540 --> 00:13:10,349
the column shows the two groups of

254
00:13:06,780 --> 00:13:13,260
participants<font color="#E5E5E5"> and so for each cell you</font>

255
00:13:10,350 --> 00:13:16,800
<font color="#CCCCCC">see the average score</font><font color="#E5E5E5"> achieved by each</font>

256
00:13:13,260 --> 00:13:19,870
group for each

257
00:13:16,800 --> 00:13:23,260
decompiler<font color="#E5E5E5"> and you see here in both</font>

258
00:13:19,870 --> 00:13:25,990
groups<font color="#E5E5E5"> you have a participant</font><font color="#CCCCCC"> performed</font>

259
00:13:23,260 --> 00:13:29,220
better<font color="#E5E5E5"> using</font><font color="#CCCCCC"> dream + +</font><font color="#E5E5E5"> 10 with dream and</font>

260
00:13:25,990 --> 00:13:31,660
better than hex<font color="#CCCCCC"> rays and in</font>

261
00:13:29,220 --> 00:13:34,149
unsurprisingly in all of the<font color="#E5E5E5"> test</font>

262
00:13:31,660 --> 00:13:37,689
the experts were were better than the

263
00:13:34,149 --> 00:13:39,700
<font color="#CCCCCC">students but it's interesting</font><font color="#E5E5E5"> to know</font><font color="#CCCCCC"> -</font>

264
00:13:37,690 --> 00:13:44,220
to<font color="#CCCCCC"> notice that the difference between</font>

265
00:13:39,700 --> 00:13:47,579
<font color="#E5E5E5">the scores achieved by students and</font>

266
00:13:44,220 --> 00:13:51,010
experts with dream<font color="#E5E5E5"> blast</font><font color="#CCCCCC"> was were much</font>

267
00:13:47,579 --> 00:13:54,069
much<font color="#E5E5E5"> smaller than with hex</font><font color="#CCCCCC"> first showing</font>

268
00:13:51,010 --> 00:13:59,680
that the<font color="#E5E5E5"> Kumar actually helped students</font>

269
00:13:54,070 --> 00:14:01,450
to solve<font color="#E5E5E5"> the tasks and we also it's</font>

270
00:13:59,680 --> 00:14:03,040
interesting<font color="#E5E5E5"> notice that the average</font>

271
00:14:01,450 --> 00:14:06,700
<font color="#E5E5E5">score achieved by the students with</font>

272
00:14:03,040 --> 00:14:09,760
dream<font color="#E5E5E5"> + + was better than the score of</font>

273
00:14:06,700 --> 00:14:12,220
the experts with with hex<font color="#CCCCCC"> raised so in</font>

274
00:14:09,760 --> 00:14:15,970
order to<font color="#E5E5E5"> get a a better feeling of the</font>

275
00:14:12,220 --> 00:14:19,410
results so<font color="#E5E5E5"> it we set a threshold of 70%</font>

276
00:14:15,970 --> 00:14:22,930
<font color="#CCCCCC">and we considered each task to be solved</font>

277
00:14:19,410 --> 00:14:27,730
<font color="#CCCCCC">if the score is its equal or higher than</font>

278
00:14:22,930 --> 00:14:30,489
70% and with<font color="#E5E5E5"> this we see that</font><font color="#CCCCCC"> the</font>

279
00:14:27,730 --> 00:14:33,640
<font color="#E5E5E5">students solved three times as many</font>

280
00:14:30,490 --> 00:14:36,370
tasks with dream + +<font color="#E5E5E5"> as with hex</font><font color="#CCCCCC"> raised</font>

281
00:14:33,640 --> 00:14:39,519
as also<font color="#CCCCCC"> for the experts</font><font color="#E5E5E5"> they solve</font>

282
00:14:36,370 --> 00:14:42,959
<font color="#CCCCCC">enough</font><font color="#E5E5E5"> as many times as many tasked with</font>

283
00:14:39,519 --> 00:14:45,720
dream + + as with the<font color="#E5E5E5"> extras and</font>

284
00:14:42,959 --> 00:14:49,989
regarding user<font color="#E5E5E5"> perceptions we</font><font color="#CCCCCC"> so ask</font>

285
00:14:45,720 --> 00:14:52,660
questions<font color="#E5E5E5"> regarding the</font><font color="#CCCCCC"> 6 8 questions</font>

286
00:14:49,990 --> 00:14:56,589
<font color="#E5E5E5">after each task regarding the usability</font>

287
00:14:52,660 --> 00:14:59,170
like how easy or difficult the

288
00:14:56,589 --> 00:15:02,709
readability<font color="#CCCCCC"> how is</font><font color="#E5E5E5"> it was to read the</font>

289
00:14:59,170 --> 00:15:04,959
code<font color="#CCCCCC"> and we to question</font><font color="#E5E5E5"> regarding if the</font>

290
00:15:02,709 --> 00:15:09,369
participant trusted that the de combate

291
00:15:04,959 --> 00:15:11,619
code is correct<font color="#E5E5E5"> and to counterbalance</font><font color="#CCCCCC"> to</font>

292
00:15:09,370 --> 00:15:14,380
<font color="#E5E5E5">minimize the response bias we</font>

293
00:15:11,620 --> 00:15:19,709
counterbalance positive and negative

294
00:15:14,380 --> 00:15:23,320
questions and so here's the an aggregate

295
00:15:19,709 --> 00:15:25,439
shoulder so<font color="#E5E5E5"> the aggregate results so you</font>

296
00:15:23,320 --> 00:15:28,379
see<font color="#E5E5E5"> it in the green</font>

297
00:15:25,440 --> 00:15:33,209
for both types<font color="#E5E5E5"> of questions and for both</font>

298
00:15:28,379 --> 00:15:36,449
groups<font color="#E5E5E5"> the the positive</font><font color="#CCCCCC"> answer we got</font>

299
00:15:33,209 --> 00:15:38,939
and so here you<font color="#CCCCCC"> see</font><font color="#E5E5E5"> a similar similar</font>

300
00:15:36,449 --> 00:15:40,680
<font color="#E5E5E5">trend in all groups</font><font color="#CCCCCC"> where during</font><font color="#E5E5E5"> blast</font>

301
00:15:38,940 --> 00:15:44,220
<font color="#E5E5E5">past was the achieve the best result</font>

302
00:15:40,680 --> 00:15:46,589
<font color="#E5E5E5">followed by dream and filled by</font><font color="#CCCCCC"> x-rays</font>

303
00:15:44,220 --> 00:15:51,029
and<font color="#CCCCCC"> here</font><font color="#E5E5E5"> some comments that we</font><font color="#CCCCCC"> got</font>

304
00:15:46,589 --> 00:15:53,370
during<font color="#E5E5E5"> the study so this the</font><font color="#CCCCCC"> this code</font>

305
00:15:51,029 --> 00:15:55,920
<font color="#E5E5E5">mostly look</font><font color="#CCCCCC"> likes a</font><font color="#E5E5E5"> straightforward</font><font color="#CCCCCC"> C</font>

306
00:15:53,370 --> 00:15:58,470
translation<font color="#E5E5E5"> of machine code besides a</font>

307
00:15:55,920 --> 00:16:01,079
general sense about<font color="#CCCCCC"> what what's going on</font>

308
00:15:58,470 --> 00:16:05,399
<font color="#E5E5E5">I'd rather see the assembly however with</font>

309
00:16:01,079 --> 00:16:07,739
our visibility<font color="#CCCCCC"> improved e compiler we</font>

310
00:16:05,399 --> 00:16:10,339
heard things like this code<font color="#E5E5E5"> looks like</font>

311
00:16:07,740 --> 00:16:13,500
<font color="#E5E5E5">it was written by human even if many</font><font color="#CCCCCC"> of</font>

312
00:16:10,339 --> 00:16:15,569
the valuable names are quite<font color="#E5E5E5"> generic but</font>

313
00:16:13,500 --> 00:16:17,970
the judge but just the named index

314
00:16:15,569 --> 00:16:24,269
variable<font color="#E5E5E5"> make the code much easier to</font>

315
00:16:17,970 --> 00:16:27,000
read<font color="#CCCCCC"> and so</font><font color="#E5E5E5"> finally the participant were</font>

316
00:16:24,269 --> 00:16:29,339
<font color="#E5E5E5">shown for all the tasks the code</font>

317
00:16:27,000 --> 00:16:33,000
<font color="#E5E5E5">generated by all the compilers and we</font>

318
00:16:29,339 --> 00:16:36,720
<font color="#E5E5E5">asked them to give a</font><font color="#CCCCCC"> scores from</font><font color="#E5E5E5"> 1 to 10</font>

319
00:16:33,000 --> 00:16:38,910
and here's the results so there's a

320
00:16:36,720 --> 00:16:41,519
clear<font color="#E5E5E5"> trend in a student group so you</font>

321
00:16:38,910 --> 00:16:44,759
see these students like<font color="#E5E5E5"> text read the</font>

322
00:16:41,519 --> 00:16:50,490
<font color="#CCCCCC">list dream</font><font color="#E5E5E5"> a bit more and</font><font color="#CCCCCC"> the ductless</font>

323
00:16:44,759 --> 00:16:52,649
<font color="#E5E5E5">plus the most while in the expert group</font>

324
00:16:50,490 --> 00:16:56,040
they were<font color="#CCCCCC"> a little</font><font color="#E5E5E5"> but a little bit more</font>

325
00:16:52,649 --> 00:17:01,040
diverse<font color="#E5E5E5"> when</font><font color="#CCCCCC"> it comes to dream versus</font>

326
00:16:56,040 --> 00:17:06,470
<font color="#CCCCCC">x-rays but I give really good score</font><font color="#E5E5E5"> to</font>

327
00:17:01,040 --> 00:17:09,959
<font color="#E5E5E5">to dream plus plus so to sum up we</font>

328
00:17:06,470 --> 00:17:12,270
implemented several<font color="#E5E5E5"> usability extensions</font>

329
00:17:09,959 --> 00:17:14,339
to improve the<font color="#E5E5E5"> readability</font><font color="#CCCCCC"> of the D</font>

330
00:17:12,270 --> 00:17:16,829
compiled code generated by<font color="#E5E5E5"> dream we</font>

331
00:17:14,339 --> 00:17:19,289
conducted the first<font color="#E5E5E5"> malware analysis</font>

332
00:17:16,829 --> 00:17:22,470
user study and the results<font color="#CCCCCC"> show that a</font>

333
00:17:19,289 --> 00:17:25,169
human centric approach to D combination

334
00:17:22,470 --> 00:17:28,260
can significantly improve<font color="#E5E5E5"> the their</font>

335
00:17:25,169 --> 00:17:30,659
effectiveness<font color="#E5E5E5"> and as future work we're</font>

336
00:17:28,260 --> 00:17:34,770
currently exploring<font color="#E5E5E5"> other use cases than</font>

337
00:17:30,659 --> 00:17:37,440
malware analysis and we try to<font color="#CCCCCC"> combine</font><font color="#E5E5E5"> D</font>

338
00:17:34,770 --> 00:17:39,150
combinations with source based technique

339
00:17:37,440 --> 00:17:42,120
to find vulnerability in the

340
00:17:39,150 --> 00:17:45,840
<font color="#CCCCCC">code to try</font><font color="#E5E5E5"> to find vulnerabilities in</font>

341
00:17:42,120 --> 00:17:50,060
the binary<font color="#CCCCCC"> code</font><font color="#E5E5E5"> so with this I think if</font>

342
00:17:45,840 --> 00:17:50,060
your<font color="#E5E5E5"> attention and ready take question</font>

343
00:17:51,590 --> 00:18:03,959
<font color="#E5E5E5">okay questions very interesting</font><font color="#CCCCCC"> I was</font>

344
00:18:01,500 --> 00:18:06,300
just wondering if dream or dream PLAs

345
00:18:03,960 --> 00:18:09,270
PLAs has any way to deal<font color="#CCCCCC"> with code</font>

346
00:18:06,300 --> 00:18:10,919
obfuscation techniques<font color="#E5E5E5"> especially</font><font color="#CCCCCC"> you</font>

347
00:18:09,270 --> 00:18:13,730
know<font color="#CCCCCC"> virtualized</font><font color="#E5E5E5"> virtualization</font>

348
00:18:10,920 --> 00:18:17,130
techniques<font color="#CCCCCC"> no we don't</font><font color="#E5E5E5"> deal with</font><font color="#CCCCCC"> that we</font>

349
00:18:13,730 --> 00:18:19,110
so it's normal for as a<font color="#CCCCCC"> Mara analyst if</font>

350
00:18:17,130 --> 00:18:21,240
you have a an obfuscated<font color="#CCCCCC"> army-backed</font>

351
00:18:19,110 --> 00:18:24,360
code<font color="#E5E5E5"> it's the first to unpack the code</font>

352
00:18:21,240 --> 00:18:26,760
or to do<font color="#E5E5E5"> phosphated and then do Q pilot</font>

353
00:18:24,360 --> 00:18:28,590
so we assume that<font color="#E5E5E5"> there's a first step</font>

354
00:18:26,760 --> 00:18:31,050
where you<font color="#E5E5E5"> D compile the code but even</font>

355
00:18:28,590 --> 00:18:33,510
with without<font color="#CCCCCC"> office caissons</font><font color="#E5E5E5"> so you</font>

356
00:18:31,050 --> 00:18:36,260
still have not very different<font color="#E5E5E5"> code</font>

357
00:18:33,510 --> 00:18:39,420
rather than<font color="#CCCCCC"> with hex transferred from</font>

358
00:18:36,260 --> 00:18:42,960
<font color="#E5E5E5">okay Stella Sudhir</font><font color="#CCCCCC"> glue from</font><font color="#E5E5E5"> MIT thanks</font>

359
00:18:39,420 --> 00:18:45,900
for your talk<font color="#CCCCCC"> most sounding</font><font color="#E5E5E5"> decompilers</font>

360
00:18:42,960 --> 00:18:47,370
use over approximate analysis and the

361
00:18:45,900 --> 00:18:49,350
over approximate analysis needs to

362
00:18:47,370 --> 00:18:51,000
imprecision<font color="#E5E5E5"> how do you incorporate</font>

363
00:18:49,350 --> 00:18:54,270
imprecision in your sort of

364
00:18:51,000 --> 00:18:57,590
recomposition of the code I'm not sure I

365
00:18:54,270 --> 00:19:00,060
got<font color="#CCCCCC"> your</font><font color="#E5E5E5"> question correct so in order to</font>

366
00:18:57,590 --> 00:19:02,760
soundly decompile a piece of code right

367
00:19:00,060 --> 00:19:04,350
<font color="#E5E5E5">you typically have to do an analysis and</font>

368
00:19:02,760 --> 00:19:06,540
your analysis in<font color="#E5E5E5"> order to be sound</font>

369
00:19:04,350 --> 00:19:08,429
<font color="#E5E5E5">sometimes used to make a guess right</font>

370
00:19:06,540 --> 00:19:10,590
about<font color="#E5E5E5"> what the code</font><font color="#CCCCCC"> is like so it leads</font>

371
00:19:08,430 --> 00:19:12,960
<font color="#CCCCCC">to imprecision you might sort</font><font color="#E5E5E5"> of have</font>

372
00:19:10,590 --> 00:19:14,490
more sort of targets in the in the

373
00:19:12,960 --> 00:19:16,890
<font color="#E5E5E5">compiler</font><font color="#CCCCCC"> decompiled program that you</font>

374
00:19:14,490 --> 00:19:18,690
wouldn't you<font color="#E5E5E5"> would normally so if you're</font>

375
00:19:16,890 --> 00:19:20,520
trying<font color="#CCCCCC"> to make the code look more</font>

376
00:19:18,690 --> 00:19:24,560
readable how do you take imprecision

377
00:19:20,520 --> 00:19:26,580
into account well all of<font color="#E5E5E5"> the</font>

378
00:19:24,560 --> 00:19:29,580
<font color="#CCCCCC">optimizations</font><font color="#E5E5E5"> that we build our</font>

379
00:19:26,580 --> 00:19:31,290
semantics semantics preserving so<font color="#E5E5E5"> it</font>

380
00:19:29,580 --> 00:19:33,629
they don't<font color="#E5E5E5"> change the semantics of</font><font color="#CCCCCC"> their</font>

381
00:19:31,290 --> 00:19:35,940
of the code<font color="#CCCCCC"> so you're assuming that your</font>

382
00:19:33,630 --> 00:19:37,800
<font color="#CCCCCC">D compilation is fully precise and sound</font>

383
00:19:35,940 --> 00:19:39,210
<font color="#E5E5E5">no we assume that so the the</font><font color="#CCCCCC"> readability</font>

384
00:19:37,800 --> 00:19:42,629
improvement<font color="#E5E5E5"> that we implemented</font><font color="#CCCCCC"> in this</font>

385
00:19:39,210 --> 00:19:43,860
<font color="#E5E5E5">paper they are semantically they don't</font>

386
00:19:42,630 --> 00:19:46,620
change<font color="#E5E5E5"> the semantics of the code so we</font>

387
00:19:43,860 --> 00:19:48,300
made sure<font color="#E5E5E5"> that</font><font color="#CCCCCC"> that you made new missing</font>

388
00:19:46,620 --> 00:19:50,939
point but<font color="#E5E5E5"> we will take it offline yeah</font>

389
00:19:48,300 --> 00:19:52,830
<font color="#CCCCCC">okay all right</font>

390
00:19:50,940 --> 00:19:54,629
thank you so<font color="#E5E5E5"> much I</font><font color="#CCCCCC"> think</font><font color="#E5E5E5"> this is really</font>

391
00:19:52,830 --> 00:19:57,720
<font color="#CCCCCC">interesting I'm really excited</font><font color="#E5E5E5"> people</font>

392
00:19:54,629 --> 00:20:00,779
<font color="#E5E5E5">are working</font><font color="#CCCCCC"> indie compilation answer</font><font color="#E5E5E5"> two</font>

393
00:19:57,720 --> 00:20:04,019
questions<font color="#E5E5E5"> one is you could imagine that</font>

394
00:20:00,779 --> 00:20:06,989
<font color="#E5E5E5">if</font><font color="#CCCCCC"> you applied this dream</font><font color="#E5E5E5"> plus plus set</font>

395
00:20:04,019 --> 00:20:08,970
of algorithms<font color="#CCCCCC"> to code written by a sort</font>

396
00:20:06,989 --> 00:20:10,679
of<font color="#CCCCCC"> Bad Monkey</font><font color="#E5E5E5"> programmer that it might</font>

397
00:20:08,970 --> 00:20:15,389
you know make<font color="#CCCCCC"> it much more readable have</font>

398
00:20:10,679 --> 00:20:17,820
you tried<font color="#CCCCCC"> that sort of</font><font color="#E5E5E5"> thing no just</font>

399
00:20:15,389 --> 00:20:21,359
like<font color="#E5E5E5"> I can give you some of my code</font><font color="#CCCCCC"> hmm</font>

400
00:20:17,820 --> 00:20:23,580
for instance<font color="#E5E5E5"> yeah we interesting about</font>

401
00:20:21,359 --> 00:20:25,830
we<font color="#E5E5E5"> haven't so what we</font><font color="#CCCCCC"> took we just asked</font>

402
00:20:23,580 --> 00:20:28,349
<font color="#E5E5E5">the analysts</font><font color="#CCCCCC"> Marianne has to provide us</font>

403
00:20:25,830 --> 00:20:30,689
with<font color="#E5E5E5"> some tasks they had to</font><font color="#CCCCCC"> analyze so</font>

404
00:20:28,349 --> 00:20:33,389
you<font color="#E5E5E5"> always kind of come up</font><font color="#CCCCCC"> with some</font>

405
00:20:30,690 --> 00:20:36,119
some code or some some<font color="#E5E5E5"> special cases</font>

406
00:20:33,389 --> 00:20:38,758
<font color="#E5E5E5">where the compiler will screw up but so</font>

407
00:20:36,119 --> 00:20:40,590
<font color="#E5E5E5">the we followed the approach that we</font>

408
00:20:38,759 --> 00:20:43,139
asked<font color="#E5E5E5"> them give us some code where you</font>

409
00:20:40,590 --> 00:20:45,119
had to<font color="#CCCCCC"> analyze and we can finally</font>

410
00:20:43,139 --> 00:20:48,988
<font color="#E5E5E5">curious if it would serve clean up bad</font>

411
00:20:45,119 --> 00:20:50,399
code<font color="#E5E5E5"> from somebody like</font><font color="#CCCCCC"> me but</font><font color="#E5E5E5"> that I</font>

412
00:20:48,989 --> 00:20:53,460
can<font color="#CCCCCC"> ask you all fine the other</font><font color="#E5E5E5"> question</font>

413
00:20:50,399 --> 00:20:55,799
I have is is<font color="#CCCCCC"> this gonna</font><font color="#E5E5E5"> be made open</font>

414
00:20:53,460 --> 00:20:57,179
source because<font color="#CCCCCC"> hex raised is terrible</font>

415
00:20:55,799 --> 00:21:00,479
<font color="#E5E5E5">and I would love to you something else</font>

416
00:20:57,179 --> 00:21:02,159
<font color="#CCCCCC">yes yes yeah so we're trying our best to</font>

417
00:21:00,479 --> 00:21:04,229
<font color="#E5E5E5">make</font><font color="#CCCCCC"> it available as soon as possible</font><font color="#E5E5E5"> so</font>

418
00:21:02,159 --> 00:21:06,419
we<font color="#E5E5E5"> want to make it available so</font><font color="#CCCCCC"> that at</font>

419
00:21:04,229 --> 00:21:08,159
least<font color="#CCCCCC"> enough for the researchers but you</font>

420
00:21:06,419 --> 00:21:09,840
know when you<font color="#E5E5E5"> write something</font><font color="#CCCCCC"> for</font>

421
00:21:08,159 --> 00:21:11,759
<font color="#E5E5E5">research it's a different story when</font>

422
00:21:09,840 --> 00:21:14,309
<font color="#CCCCCC">you're</font><font color="#E5E5E5"> - we're happy to help</font>

423
00:21:11,759 --> 00:21:27,389
yeah<font color="#CCCCCC"> okay thank you all right very</font><font color="#E5E5E5"> good</font>

424
00:21:14,309 --> 00:21:30,090
<font color="#CCCCCC">ok</font><font color="#E5E5E5"> so the two kind</font><font color="#CCCCCC"> of questions</font><font color="#E5E5E5"> and</font>

425
00:21:27,389 --> 00:21:32,158
comment<font color="#E5E5E5"> so I've spoken to a lot</font><font color="#CCCCCC"> of Sur</font>

426
00:21:30,090 --> 00:21:34,799
folks developing<font color="#E5E5E5"> tools for code</font>

427
00:21:32,159 --> 00:21:37,859
obfuscation<font color="#CCCCCC"> and they seem to have kind</font>

428
00:21:34,799 --> 00:21:41,570
<font color="#CCCCCC">of back of trade throw tricks to make</font>

429
00:21:37,859 --> 00:21:44,369
the code to be<font color="#E5E5E5"> less readable so I get</font>

430
00:21:41,570 --> 00:21:47,158
<font color="#E5E5E5">when you mentioned that you</font><font color="#CCCCCC"> gather</font><font color="#E5E5E5"> kind</font>

431
00:21:44,369 --> 00:21:49,799
of requirements for<font color="#CCCCCC"> usability by talking</font>

432
00:21:47,159 --> 00:21:51,690
<font color="#CCCCCC">to developers</font><font color="#E5E5E5"> yes oh you looked at some</font>

433
00:21:49,799 --> 00:21:53,639
<font color="#CCCCCC">of those like no own office occasion</font>

434
00:21:51,690 --> 00:21:55,379
techniques to see what are<font color="#E5E5E5"> the kind of</font>

435
00:21:53,639 --> 00:21:56,250
the common<font color="#E5E5E5"> techniques that they used to</font>

436
00:21:55,379 --> 00:22:00,750
<font color="#CCCCCC">make</font><font color="#E5E5E5"> that thing</font>

437
00:21:56,250 --> 00:22:02,940
unreadable<font color="#E5E5E5"> so as I told</font><font color="#CCCCCC"> you</font><font color="#E5E5E5"> we</font><font color="#CCCCCC"> assumed</font>

438
00:22:00,750 --> 00:22:04,830
that<font color="#E5E5E5"> if the</font><font color="#CCCCCC"> code is</font><font color="#E5E5E5"> sophisticated that</font>

439
00:22:02,940 --> 00:22:06,720
you first run it through<font color="#E5E5E5"> an India</font><font color="#CCCCCC"> for</font>

440
00:22:04,830 --> 00:22:10,620
<font color="#CCCCCC">skater first and then you give it</font><font color="#E5E5E5"> to us</font>

441
00:22:06,720 --> 00:22:14,700
<font color="#E5E5E5">we</font><font color="#CCCCCC"> found</font><font color="#E5E5E5"> some in some</font><font color="#CCCCCC"> in the examples</font>

442
00:22:10,620 --> 00:22:16,260
that we tested like there<font color="#E5E5E5"> is an example</font>

443
00:22:14,700 --> 00:22:19,260
<font color="#CCCCCC">right where there was a check to the</font>

444
00:22:16,260 --> 00:22:23,790
<font color="#E5E5E5">version of the operating system and so</font>

445
00:22:19,260 --> 00:22:26,760
<font color="#CCCCCC">the there wasn't an error in the in the</font>

446
00:22:23,790 --> 00:22:28,560
in<font color="#E5E5E5"> the mirror itself so which when we</font>

447
00:22:26,760 --> 00:22:32,340
<font color="#E5E5E5">simplified the condition so using the</font>

448
00:22:28,560 --> 00:22:42,929
<font color="#E5E5E5">theorem prover it wanted to</font><font color="#CCCCCC"> move</font><font color="#E5E5E5"> this</font>

449
00:22:32,340 --> 00:22:45,149
condition and<font color="#CCCCCC"> some well this well I mean</font>

450
00:22:42,930 --> 00:22:47,460
you can always write code that's that's

451
00:22:45,150 --> 00:22:51,560
<font color="#CCCCCC">that you cannot or that where you have</font>

452
00:22:47,460 --> 00:22:58,140
<font color="#CCCCCC">problems but we haven't</font><font color="#E5E5E5"> tested with</font>

453
00:22:51,560 --> 00:23:01,740
<font color="#CCCCCC">example okay</font><font color="#E5E5E5"> we had two more</font><font color="#CCCCCC"> questions</font>

454
00:22:58,140 --> 00:23:03,900
yes<font color="#E5E5E5"> hello from UC Santa Barbara this</font><font color="#CCCCCC"> is</font>

455
00:23:01,740 --> 00:23:05,580
<font color="#CCCCCC">a piece of</font><font color="#E5E5E5"> amazing work</font><font color="#CCCCCC"> I was there when</font>

456
00:23:03,900 --> 00:23:07,620
<font color="#E5E5E5">you were presenting and yes we were</font>

457
00:23:05,580 --> 00:23:08,879
presenting at and the SS about<font color="#E5E5E5"> dream and</font>

458
00:23:07,620 --> 00:23:12,959
we had<font color="#CCCCCC"> a dinner together if you still</font>

459
00:23:08,880 --> 00:23:14,700
<font color="#E5E5E5">remember yeah</font><font color="#CCCCCC"> I was about to ask like</font><font color="#E5E5E5"> we</font>

460
00:23:12,960 --> 00:23:16,620
<font color="#E5E5E5">were gonna open source or when you're</font>

461
00:23:14,700 --> 00:23:20,190
gonna at least give us people<font color="#E5E5E5"> from</font>

462
00:23:16,620 --> 00:23:22,649
academia<font color="#CCCCCC"> a chance to use the awesome</font>

463
00:23:20,190 --> 00:23:24,630
<font color="#E5E5E5">dream class class but it has been asked</font>

464
00:23:22,650 --> 00:23:32,130
<font color="#E5E5E5">before so I'm asking like can we have</font><font color="#CCCCCC"> a</font>

465
00:23:24,630 --> 00:23:33,660
<font color="#E5E5E5">lunch together today as well</font><font color="#CCCCCC"> okay</font><font color="#E5E5E5"> so one</font>

466
00:23:32,130 --> 00:23:35,850
<font color="#CCCCCC">of the I</font><font color="#E5E5E5"> spend a lot</font><font color="#CCCCCC"> of time in hex</font>

467
00:23:33,660 --> 00:23:39,660
<font color="#CCCCCC">raised this past weekend and so I'm</font><font color="#E5E5E5"> kind</font>

468
00:23:35,850 --> 00:23:40,679
of newly reminded of its<font color="#CCCCCC"> flaws</font><font color="#E5E5E5"> one of</font>

469
00:23:39,660 --> 00:23:42,570
the things that I find<font color="#CCCCCC"> that's really</font>

470
00:23:40,680 --> 00:23:44,820
helpful<font color="#E5E5E5"> about hex race is that you can</font>

471
00:23:42,570 --> 00:23:46,980
you<font color="#CCCCCC"> can kind of as a user you can slowly</font>

472
00:23:44,820 --> 00:23:49,379
give it sort<font color="#E5E5E5"> of tips</font><font color="#CCCCCC"> that you've found</font>

473
00:23:46,980 --> 00:23:51,810
out like you<font color="#E5E5E5"> can create structures you</font>

474
00:23:49,380 --> 00:23:53,370
can you can give things names<font color="#E5E5E5"> and and</font>

475
00:23:51,810 --> 00:23:54,929
you could once you start fixing up the

476
00:23:53,370 --> 00:23:56,129
types it becomes a lot better at

477
00:23:54,930 --> 00:23:59,970
producing<font color="#E5E5E5"> something</font><font color="#CCCCCC"> that looks much</font>

478
00:23:56,130 --> 00:24:02,070
closer to C code<font color="#E5E5E5"> what have you have you</font>

479
00:23:59,970 --> 00:24:04,950
guys looked<font color="#E5E5E5"> into that at all like have</font>

480
00:24:02,070 --> 00:24:06,629
you just been<font color="#CCCCCC"> like</font><font color="#E5E5E5"> sticking the study</font>

481
00:24:04,950 --> 00:24:09,150
were you just like sticking code up on

482
00:24:06,630 --> 00:24:10,050
<font color="#E5E5E5">the screen for people to use or no we</font>

483
00:24:09,150 --> 00:24:13,080
had did

484
00:24:10,050 --> 00:24:14,940
<font color="#CCCCCC">you need interact</font><font color="#E5E5E5"> well we did the study</font>

485
00:24:13,080 --> 00:24:17,909
<font color="#E5E5E5">online so we had a online study blood</font>

486
00:24:14,940 --> 00:24:19,770
<font color="#E5E5E5">forms because we wanted to invite marrow</font>

487
00:24:17,910 --> 00:24:22,890
analysts when so that<font color="#CCCCCC"> they can</font>

488
00:24:19,770 --> 00:24:24,960
participate remotely and for that<font color="#E5E5E5"> we we</font>

489
00:24:22,890 --> 00:24:26,760
had a sort of an integrated text editor

490
00:24:24,960 --> 00:24:31,230
<font color="#E5E5E5">where you can change the</font><font color="#CCCCCC"> code like</font>

491
00:24:26,760 --> 00:24:33,720
<font color="#E5E5E5">rename some variables and add some</font>

492
00:24:31,230 --> 00:24:35,730
commands<font color="#E5E5E5"> and so on so</font><font color="#CCCCCC"> you can you</font><font color="#E5E5E5"> would</font>

493
00:24:33,720 --> 00:24:40,320
get a fully integrated text editor<font color="#E5E5E5"> where</font>

494
00:24:35,730 --> 00:24:41,790
you<font color="#E5E5E5"> can like change the code or improve</font>

495
00:24:40,320 --> 00:24:47,780
the code as<font color="#CCCCCC"> you as</font><font color="#E5E5E5"> you analyze it</font>

496
00:24:41,790 --> 00:24:51,139
so we tried our<font color="#CCCCCC"> best to be like as</font>

497
00:24:47,780 --> 00:24:54,180
similar to<font color="#E5E5E5"> extra SPE as we as we can</font>

498
00:24:51,140 --> 00:24:55,500
<font color="#E5E5E5">okay thanks I just</font><font color="#CCCCCC"> want to say</font><font color="#E5E5E5"> this is</font>

499
00:24:54,180 --> 00:24:58,850
really<font color="#E5E5E5"> cool work and I'm really</font><font color="#CCCCCC"> excited</font>

500
00:24:55,500 --> 00:24:58,850
<font color="#E5E5E5">about it</font><font color="#CCCCCC"> okay all</font><font color="#E5E5E5"> right</font>

