1
00:00:00,000 --> 00:00:04,440
and my name is<font color="#CCCCCC"> Jenny Colantoni</font><font color="#E5E5E5"> oh I'm a</font>

2
00:00:02,280 --> 00:00:06,210
PhD student at UC Santa Barbara<font color="#E5E5E5"> and the</font>

3
00:00:04,440 --> 00:00:07,859
work I'm going<font color="#CCCCCC"> to present is joint work</font>

4
00:00:06,210 --> 00:00:10,650
<font color="#CCCCCC">with my dear colleague Antonia Bianchi</font>

5
00:00:07,859 --> 00:00:12,780
and<font color="#E5E5E5"> will Robertson and hanging here from</font>

6
00:00:10,650 --> 00:00:16,079
Northeastern University and my<font color="#CCCCCC"> advisers</font>

7
00:00:12,780 --> 00:00:18,448
<font color="#E5E5E5">Chris</font><font color="#CCCCCC"> Krug Elaine given a big name</font><font color="#E5E5E5"> so as</font>

8
00:00:16,079 --> 00:00:21,028
<font color="#CCCCCC">it</font><font color="#E5E5E5"> that</font><font color="#CCCCCC"> uh suggests is gonna be a talk</font>

9
00:00:18,449 --> 00:00:24,330
about<font color="#E5E5E5"> detecting logic bombs</font><font color="#CCCCCC"> in Android</font>

10
00:00:21,029 --> 00:00:25,529
apps and<font color="#E5E5E5"> before</font><font color="#CCCCCC"> starting</font><font color="#E5E5E5"> with the actual</font>

11
00:00:24,330 --> 00:00:28,709
work we did<font color="#E5E5E5"> I want to start with an</font>

12
00:00:25,529 --> 00:00:31,050
example<font color="#CCCCCC"> so let's consider a normal</font>

13
00:00:28,710 --> 00:00:32,520
application<font color="#E5E5E5"> like Google Maps and the</font>

14
00:00:31,050 --> 00:00:35,190
user can select where he wants to<font color="#E5E5E5"> go and</font>

15
00:00:32,520 --> 00:00:37,020
get the direction<font color="#E5E5E5"> and the</font><font color="#CCCCCC"> user is super</font>

16
00:00:35,190 --> 00:00:39,000
<font color="#E5E5E5">happy unfortunately there is a</font>

17
00:00:37,020 --> 00:00:42,390
functionality<font color="#E5E5E5"> like the following in the</font>

18
00:00:39,000 --> 00:00:44,250
app basically<font color="#E5E5E5"> after</font><font color="#CCCCCC"> the same</font><font color="#E5E5E5"> opportunity</font>

19
00:00:42,390 --> 00:00:46,170
second<font color="#E5E5E5"> an attack is going to be</font>

20
00:00:44,250 --> 00:00:48,300
performed on the<font color="#CCCCCC"> app</font><font color="#E5E5E5"> and I don't know</font>

21
00:00:46,170 --> 00:00:50,039
the phone is<font color="#CCCCCC"> going to</font><font color="#E5E5E5"> be</font><font color="#CCCCCC"> rooted and your</font>

22
00:00:48,300 --> 00:00:53,610
<font color="#CCCCCC">contents gonna be leaked and together</font>

23
00:00:50,039 --> 00:00:56,070
<font color="#E5E5E5">with your embarrassing pictures so in a</font>

24
00:00:53,610 --> 00:00:58,620
logic bomb<font color="#E5E5E5"> the attack is</font><font color="#CCCCCC"> not as</font>

25
00:00:56,070 --> 00:01:00,030
malicious<font color="#E5E5E5"> is more subtle it's more</font>

26
00:00:58,620 --> 00:01:02,160
<font color="#E5E5E5">related maybe to the logic</font><font color="#CCCCCC"> or</font><font color="#E5E5E5"> the</font>

27
00:01:00,030 --> 00:01:04,890
<font color="#CCCCCC">application and it's very</font><font color="#E5E5E5"> very difficult</font>

28
00:01:02,160 --> 00:01:06,539
to to the deck in this<font color="#E5E5E5"> case for</font><font color="#CCCCCC"> example</font>

29
00:01:04,890 --> 00:01:08,189
it could<font color="#E5E5E5"> be</font><font color="#CCCCCC"> that the the route</font><font color="#E5E5E5"> that the</font>

30
00:01:06,540 --> 00:01:09,600
user chose is not the shortest one

31
00:01:08,189 --> 00:01:11,580
maybe it's the longer one<font color="#CCCCCC"> and you're</font>

32
00:01:09,600 --> 00:01:14,039
going<font color="#CCCCCC"> through different points</font><font color="#E5E5E5"> now for</font>

33
00:01:11,580 --> 00:01:15,570
<font color="#CCCCCC">maybe a normal user is not that bad but</font>

34
00:01:14,040 --> 00:01:18,150
if you<font color="#E5E5E5"> think this</font><font color="#CCCCCC"> app might be used by a</font>

35
00:01:15,570 --> 00:01:20,669
soldier<font color="#E5E5E5"> in a military zone you can</font><font color="#CCCCCC"> see</font>

36
00:01:18,150 --> 00:01:22,560
how it can<font color="#CCCCCC"> be problematic</font><font color="#E5E5E5"> now let me</font>

37
00:01:20,670 --> 00:01:25,409
generalize a bit<font color="#E5E5E5"> recall logic bomb a</font>

38
00:01:22,560 --> 00:01:27,420
functionality<font color="#CCCCCC"> the sub</font><font color="#E5E5E5"> D modifies the</font>

39
00:01:25,409 --> 00:01:30,509
program output and this trigger only

40
00:01:27,420 --> 00:01:33,329
<font color="#E5E5E5">under certain narrow circumstances okay</font>

41
00:01:30,509 --> 00:01:37,200
so logic bombs<font color="#E5E5E5"> detection is very</font>

42
00:01:33,329 --> 00:01:40,110
<font color="#E5E5E5">difficult because the attack is actually</font>

43
00:01:37,200 --> 00:01:43,110
sampled so existing approaches a<font color="#CCCCCC"> big</font>

44
00:01:40,110 --> 00:01:45,930
<font color="#CCCCCC">volume</font><font color="#E5E5E5"> finding and identifying malicious</font>

45
00:01:43,110 --> 00:01:48,360
behavior but again in this kind of logic

46
00:01:45,930 --> 00:01:50,250
bomb the<font color="#CCCCCC"> thread</font><font color="#E5E5E5"> model is so like generic</font>

47
00:01:48,360 --> 00:01:52,670
and malicious functionality can<font color="#E5E5E5"> be so</font>

48
00:01:50,250 --> 00:01:55,740
generic<font color="#CCCCCC"> that is very very</font><font color="#E5E5E5"> difficult to</font>

49
00:01:52,670 --> 00:01:57,270
<font color="#E5E5E5">encode what malicious is so for this</font>

50
00:01:55,740 --> 00:01:58,920
reason we<font color="#E5E5E5"> chose a</font><font color="#CCCCCC"> different approach</font>

51
00:01:57,270 --> 00:02:00,990
<font color="#CCCCCC">instead of focusing on</font><font color="#E5E5E5"> the behavior as</font>

52
00:01:58,920 --> 00:02:04,320
all the other tools<font color="#E5E5E5"> we actually focus on</font>

53
00:02:00,990 --> 00:02:06,479
<font color="#E5E5E5">the check why do we do this but think</font>

54
00:02:04,320 --> 00:02:09,179
about this<font color="#CCCCCC"> for a second</font><font color="#E5E5E5"> even if we don't</font>

55
00:02:06,479 --> 00:02:12,480
<font color="#E5E5E5">know what saboteur attack does something</font>

56
00:02:09,179 --> 00:02:15,850
happens only after December 22nd

57
00:02:12,480 --> 00:02:18,850
isn't that<font color="#E5E5E5"> weird so we took this</font>

58
00:02:15,850 --> 00:02:20,710
<font color="#CCCCCC">observation and we made it</font><font color="#E5E5E5"> our key idea</font>

59
00:02:18,850 --> 00:02:22,359
for this work<font color="#E5E5E5"> basically</font><font color="#CCCCCC"> we want to</font><font color="#E5E5E5"> focus</font>

60
00:02:20,710 --> 00:02:25,240
on triggers and not in a trigger

61
00:02:22,360 --> 00:02:26,740
behavior so in this work we<font color="#E5E5E5"> proposal in</font>

62
00:02:25,240 --> 00:02:28,510
defy logic<font color="#E5E5E5"> bonds by using trigger</font>

63
00:02:26,740 --> 00:02:30,040
<font color="#E5E5E5">analysis which</font><font color="#CCCCCC"> is a technique we</font>

64
00:02:28,510 --> 00:02:32,109
developed for this paper<font color="#E5E5E5"> and that's what</font>

65
00:02:30,040 --> 00:02:33,670
<font color="#CCCCCC">I'm</font><font color="#E5E5E5"> going</font><font color="#CCCCCC"> to present</font><font color="#E5E5E5"> today trigger</font>

66
00:02:32,110 --> 00:02:37,030
analysis is a static program as

67
00:02:33,670 --> 00:02:40,750
technique that aims to<font color="#E5E5E5"> identify triggers</font>

68
00:02:37,030 --> 00:02:42,880
<font color="#E5E5E5">the input to the analysis is a dalvik</font>

69
00:02:40,750 --> 00:02:44,860
bytecode<font color="#CCCCCC"> of the Android app</font><font color="#E5E5E5"> the output</font>

70
00:02:42,880 --> 00:02:47,579
is a list of<font color="#CCCCCC"> suspicious triggers in</font><font color="#E5E5E5"> the</font>

71
00:02:44,860 --> 00:02:50,470
trigger behavior and this<font color="#E5E5E5"> app can be</font>

72
00:02:47,580 --> 00:02:53,200
<font color="#E5E5E5">checked by human and so you can bet this</font>

73
00:02:50,470 --> 00:02:54,910
is<font color="#E5E5E5"> okay or not the analysis is</font>

74
00:02:53,200 --> 00:02:57,730
<font color="#E5E5E5">considered about four main</font><font color="#CCCCCC"> analysis</font>

75
00:02:54,910 --> 00:02:59,350
steps of course<font color="#E5E5E5"> I'm gonna give you an</font>

76
00:02:57,730 --> 00:03:00,880
overview<font color="#E5E5E5"> today there are many many</font>

77
00:02:59,350 --> 00:03:02,890
digits in the paper so you're<font color="#E5E5E5"> welcome to</font>

78
00:03:00,880 --> 00:03:05,079
check<font color="#CCCCCC"> it out and</font><font color="#E5E5E5"> I'm gonna simulate what</font>

79
00:03:02,890 --> 00:03:06,519
analysis<font color="#CCCCCC"> it would do by analyzing the</font>

80
00:03:05,080 --> 00:03:08,980
simple example<font color="#CCCCCC"> shown in the</font><font color="#E5E5E5"> previous</font>

81
00:03:06,520 --> 00:03:11,200
slide so the input<font color="#E5E5E5"> data</font><font color="#CCCCCC"> set is</font><font color="#E5E5E5"> double</font>

82
00:03:08,980 --> 00:03:13,090
<font color="#CCCCCC">byte code</font><font color="#E5E5E5"> something ugly like</font><font color="#CCCCCC"> this</font><font color="#E5E5E5"> don't</font>

83
00:03:11,200 --> 00:03:14,829
don't bother reading it<font color="#E5E5E5"> what they want</font>

84
00:03:13,090 --> 00:03:17,530
to point out is that<font color="#E5E5E5"> it's a speech</font><font color="#CCCCCC"> check</font>

85
00:03:14,830 --> 00:03:19,480
looks like this<font color="#E5E5E5"> in just an if by</font><font color="#CCCCCC"> Co</font>

86
00:03:17,530 --> 00:03:22,720
<font color="#CCCCCC">distraction</font><font color="#E5E5E5"> and it doesn't tell us much</font>

87
00:03:19,480 --> 00:03:25,000
right it depends<font color="#CCCCCC"> on what the value in b2</font>

88
00:03:22,720 --> 00:03:26,769
is is it<font color="#CCCCCC"> a normal</font><font color="#E5E5E5"> check is it a</font>

89
00:03:25,000 --> 00:03:28,420
suspicious one we have no idea

90
00:03:26,769 --> 00:03:31,090
despite the first step of<font color="#E5E5E5"> the analysis</font>

91
00:03:28,420 --> 00:03:33,488
is symbolic execution<font color="#E5E5E5"> we do for a simple</font>

92
00:03:31,090 --> 00:03:36,190
execution<font color="#E5E5E5"> and</font><font color="#CCCCCC"> so now</font><font color="#E5E5E5"> we track objects</font>

93
00:03:33,489 --> 00:03:37,780
relate to time location and SMS we also

94
00:03:36,190 --> 00:03:39,850
of course<font color="#E5E5E5"> need to end those</font><font color="#CCCCCC"> strings and</font>

95
00:03:37,780 --> 00:03:42,610
<font color="#E5E5E5">Android specific objects such as</font><font color="#CCCCCC"> interns</font>

96
00:03:39,850 --> 00:03:45,340
and bundles and we create a symbolic

97
00:03:42,610 --> 00:03:47,430
value<font color="#E5E5E5"> whenever a relevant object is</font>

98
00:03:45,340 --> 00:03:49,930
created or assets for the first time and

99
00:03:47,430 --> 00:03:52,870
<font color="#E5E5E5">basically why</font><font color="#CCCCCC"> done is because true we</font>

100
00:03:49,930 --> 00:03:56,500
record all operations that are<font color="#E5E5E5"> executed</font>

101
00:03:52,870 --> 00:03:58,630
on this object<font color="#CCCCCC"> okay basically in this</font>

102
00:03:56,500 --> 00:04:00,549
case we have<font color="#E5E5E5"> this if by construction</font>

103
00:03:58,630 --> 00:04:02,560
<font color="#CCCCCC">then Elizabeth tell us well be to</font>

104
00:04:00,549 --> 00:04:04,510
actually<font color="#E5E5E5"> contain the</font><font color="#CCCCCC"> return value</font><font color="#E5E5E5"> of a</font>

105
00:04:02,560 --> 00:04:06,579
<font color="#E5E5E5">comparison between two dates</font><font color="#CCCCCC"> and the</font>

106
00:04:04,510 --> 00:04:09,100
first date is the<font color="#CCCCCC"> current</font><font color="#E5E5E5"> one the second</font>

107
00:04:06,579 --> 00:04:10,840
one<font color="#E5E5E5"> is December 22nd in this way we're</font>

108
00:04:09,100 --> 00:04:12,400
kinda getting what<font color="#E5E5E5"> we call expression</font>

109
00:04:10,840 --> 00:04:15,070
tree is ready to objects in

110
00:04:12,400 --> 00:04:17,918
<font color="#CCCCCC">stored in these registers and this I</font>

111
00:04:15,070 --> 00:04:19,779
will show I will<font color="#CCCCCC"> show later</font><font color="#E5E5E5"> is very</font>

112
00:04:17,918 --> 00:04:23,109
important to be able<font color="#E5E5E5"> to distinguish</font>

113
00:04:19,779 --> 00:04:25,359
normal check<font color="#CCCCCC"> again suspicious ones</font><font color="#E5E5E5"> now</font>

114
00:04:23,110 --> 00:04:26,110
the second part<font color="#E5E5E5"> of the analysis is what</font>

115
00:04:25,360 --> 00:04:28,169
we call<font color="#CCCCCC"> predicates</font>

116
00:04:26,110 --> 00:04:32,139
<font color="#E5E5E5">struction so while we do the forward</font>

117
00:04:28,169 --> 00:04:34,090
<font color="#E5E5E5">execution we record was the condition</font>

118
00:04:32,139 --> 00:04:35,740
<font color="#E5E5E5">what we got block predicate was the</font>

119
00:04:34,090 --> 00:04:38,438
condition<font color="#CCCCCC"> for</font><font color="#E5E5E5"> a block to be executed</font>

120
00:04:35,740 --> 00:04:41,080
assuming that analysis reached the its

121
00:04:38,439 --> 00:04:43,810
predecessor what we want to find<font color="#E5E5E5"> is the</font>

122
00:04:41,080 --> 00:04:45,870
full predicate for<font color="#E5E5E5"> a basic block to be</font>

123
00:04:43,810 --> 00:04:48,159
secured assuming the<font color="#E5E5E5"> analogy started</font>

124
00:04:45,870 --> 00:04:50,259
<font color="#E5E5E5">reached the starting point of the</font><font color="#CCCCCC"> metal</font>

125
00:04:48,159 --> 00:04:52,150
<font color="#CCCCCC">the explaining</font><font color="#E5E5E5"> step is better to use an</font>

126
00:04:50,259 --> 00:04:53,590
<font color="#E5E5E5">example now let's assume this is the</font>

127
00:04:52,150 --> 00:04:55,568
control flow graph or a very simple

128
00:04:53,590 --> 00:04:58,419
method<font color="#E5E5E5"> let's assume we</font><font color="#CCCCCC"> have from B 0 to</font>

129
00:04:55,569 --> 00:05:00,819
B<font color="#E5E5E5"> 1 predicate Q and then let's assume B</font>

130
00:04:58,419 --> 00:05:04,090
1<font color="#E5E5E5"> introduce a check maybe relate to time</font>

131
00:05:00,819 --> 00:05:06,129
and we identify the check as P if P

132
00:05:04,090 --> 00:05:06,818
satisfied you got to be<font color="#CCCCCC"> 2</font><font color="#E5E5E5"> otherwise you</font>

133
00:05:06,129 --> 00:05:10,120
go to<font color="#CCCCCC"> b3</font>

134
00:05:06,819 --> 00:05:11,680
now to compute<font color="#E5E5E5"> the path predicate what</font>

135
00:05:10,120 --> 00:05:14,469
we do is a backward traversal of the

136
00:05:11,680 --> 00:05:16,599
control flow<font color="#CCCCCC"> graph starting for each</font>

137
00:05:14,469 --> 00:05:19,029
basic block<font color="#E5E5E5"> for example</font><font color="#CCCCCC"> from me to we</font>

138
00:05:16,599 --> 00:05:21,759
<font color="#CCCCCC">know that we need to</font><font color="#E5E5E5"> satisfy</font><font color="#CCCCCC"> qmp so by</font>

139
00:05:19,029 --> 00:05:24,159
going backward we<font color="#E5E5E5"> managed to track a to</font>

140
00:05:21,759 --> 00:05:26,560
reach to<font color="#E5E5E5"> be 2 starting from B 0</font><font color="#CCCCCC"> we need</font>

141
00:05:24,159 --> 00:05:29,050
to satisfy P and Q similar for B 3<font color="#E5E5E5"> the</font>

142
00:05:26,560 --> 00:05:31,089
condition<font color="#CCCCCC"> would be</font><font color="#E5E5E5"> not P</font><font color="#CCCCCC"> and</font><font color="#E5E5E5"> Q we do</font>

143
00:05:29,050 --> 00:05:33,460
this<font color="#E5E5E5"> for each basic block so for before</font>

144
00:05:31,089 --> 00:05:35,710
<font color="#CCCCCC">M</font><font color="#E5E5E5"> if I what we will do is well to arrive</font>

145
00:05:33,460 --> 00:05:38,560
to before<font color="#E5E5E5"> we can arrive either from</font><font color="#CCCCCC"> bit</font>

146
00:05:35,710 --> 00:05:41,979
<font color="#CCCCCC">2 or to b3 so the formula would</font><font color="#E5E5E5"> be P and</font>

147
00:05:38,560 --> 00:05:44,529
Q or not P<font color="#E5E5E5"> and Q right so as you can</font>

148
00:05:41,979 --> 00:05:47,680
notice the formula<font color="#E5E5E5"> with for b4 and b5</font>

149
00:05:44,529 --> 00:05:49,000
<font color="#E5E5E5">actually depends on P but if you check</font>

150
00:05:47,680 --> 00:05:51,069
the control flow graph<font color="#CCCCCC"> no matter what</font>

151
00:05:49,000 --> 00:05:52,690
p-value is<font color="#CCCCCC"> beforehand b5 is going to</font>

152
00:05:51,069 --> 00:05:54,580
breached<font color="#CCCCCC"> so there is a force dependency</font>

153
00:05:52,690 --> 00:05:57,460
to eliminate this<font color="#E5E5E5"> first dependency we</font>

154
00:05:54,580 --> 00:05:59,650
apply standard<font color="#CCCCCC"> Boonen logic formulas and</font>

155
00:05:57,460 --> 00:06:02,560
we simplify so the<font color="#E5E5E5"> default</font><font color="#CCCCCC"> dependences</font>

156
00:05:59,650 --> 00:06:04,568
<font color="#CCCCCC">are</font><font color="#E5E5E5"> removed the next step is what we</font>

157
00:06:02,560 --> 00:06:06,159
call predicate characterizations<font color="#E5E5E5"> once we</font>

158
00:06:04,569 --> 00:06:08,560
have<font color="#E5E5E5"> all these predicates want to</font>

159
00:06:06,159 --> 00:06:10,960
understand how suspicious they are so

160
00:06:08,560 --> 00:06:12,789
for this work<font color="#CCCCCC"> we adopted the following</font>

161
00:06:10,960 --> 00:06:15,159
policy we<font color="#CCCCCC"> considered suspicious any</font>

162
00:06:12,789 --> 00:06:17,529
ordering comparison between symbolic

163
00:06:15,159 --> 00:06:19,719
time in Causton bound<font color="#E5E5E5"> checks on</font>

164
00:06:17,529 --> 00:06:22,240
locations and matching<font color="#E5E5E5"> constants values</font>

165
00:06:19,719 --> 00:06:23,500
against SMS body of<font color="#E5E5E5"> sender so for</font>

166
00:06:22,240 --> 00:06:25,839
example in the<font color="#CCCCCC"> previous case</font><font color="#E5E5E5"> the</font>

167
00:06:23,500 --> 00:06:28,270
<font color="#CCCCCC">knowledgeable</font><font color="#E5E5E5"> asses the expression</font><font color="#CCCCCC"> 3</font><font color="#E5E5E5"> are</font>

168
00:06:25,839 --> 00:06:29,529
say to this<font color="#E5E5E5"> puhd predicate it's</font><font color="#CCCCCC"> a</font>

169
00:06:28,270 --> 00:06:31,359
expression<font color="#CCCCCC"> tree like this</font>

170
00:06:29,529 --> 00:06:34,209
and you say wow these pretty suspicious

171
00:06:31,360 --> 00:06:36,069
and so we flag it now<font color="#E5E5E5"> the next</font><font color="#CCCCCC"> step is</font>

172
00:06:34,209 --> 00:06:39,219
<font color="#E5E5E5">what we call control dependence analysis</font>

173
00:06:36,069 --> 00:06:40,810
<font color="#E5E5E5">we won't understand if these suspicious</font>

174
00:06:39,219 --> 00:06:42,880
predicates are actually controlling<font color="#CCCCCC"> the</font>

175
00:06:40,810 --> 00:06:45,039
<font color="#E5E5E5">situation</font><font color="#CCCCCC"> of something</font><font color="#E5E5E5"> in something</font>

176
00:06:42,880 --> 00:06:46,479
<font color="#E5E5E5">sensitive or not</font><font color="#CCCCCC"> now in this paper since</font>

177
00:06:45,039 --> 00:06:49,479
we focus on the triggers are not only

178
00:06:46,479 --> 00:06:51,068
trigger behavior<font color="#E5E5E5"> we are able</font><font color="#CCCCCC"> to adopt a</font>

179
00:06:49,479 --> 00:06:53,560
<font color="#E5E5E5">very lenient definition of sensitiveness</font>

180
00:06:51,069 --> 00:06:56,139
<font color="#E5E5E5">so we cannot ignore it</font><font color="#CCCCCC"> we consider</font>

181
00:06:53,560 --> 00:06:58,750
<font color="#CCCCCC">sensitive as</font><font color="#E5E5E5"> functionality</font><font color="#CCCCCC"> like sending</font>

182
00:06:56,139 --> 00:07:00,699
SMS but also<font color="#CCCCCC"> internet connections fight</font>

183
00:06:58,750 --> 00:07:02,709
<font color="#E5E5E5">system</font><font color="#CCCCCC"> analogous</font><font color="#E5E5E5"> so a very very lenient</font>

184
00:07:00,699 --> 00:07:04,360
definition of sensitiveness<font color="#E5E5E5"> and what we</font>

185
00:07:02,709 --> 00:07:06,219
do is a forward traversal of the super

186
00:07:04,360 --> 00:07:08,139
<font color="#E5E5E5">control flow graph starting from each of</font>

187
00:07:06,219 --> 00:07:10,149
these suspicious<font color="#CCCCCC"> predicates and we check</font>

188
00:07:08,139 --> 00:07:12,190
if they<font color="#CCCCCC"> are controlling execution or</font>

189
00:07:10,149 --> 00:07:13,889
something<font color="#E5E5E5"> sensitive</font><font color="#CCCCCC"> or not</font><font color="#E5E5E5"> and this step</font>

190
00:07:12,190 --> 00:07:16,330
<font color="#CCCCCC">is</font><font color="#E5E5E5"> in the procedural so we propagate</font>

191
00:07:13,889 --> 00:07:20,319
<font color="#E5E5E5">predicates through field definitions and</font>

192
00:07:16,330 --> 00:07:22,359
objects and<font color="#E5E5E5"> so for the last</font><font color="#CCCCCC"> step</font>

193
00:07:20,319 --> 00:07:25,659
analysis<font color="#CCCCCC"> you would what we call</font><font color="#E5E5E5"> post</font>

194
00:07:22,360 --> 00:07:28,300
filter steps<font color="#E5E5E5"> it turns out we</font><font color="#CCCCCC"> found</font>

195
00:07:25,659 --> 00:07:29,979
during<font color="#E5E5E5"> our bigger study that there are</font>

196
00:07:28,300 --> 00:07:30,699
some checks<font color="#E5E5E5"> that match our definition of</font>

197
00:07:29,979 --> 00:07:34,089
suspiciousness

198
00:07:30,699 --> 00:07:36,129
<font color="#E5E5E5">but they're clearly benign so two of</font>

199
00:07:34,089 --> 00:07:38,139
these<font color="#E5E5E5"> cases are</font><font color="#CCCCCC"> mal checks</font><font color="#E5E5E5"> in the code</font>

200
00:07:36,129 --> 00:07:40,509
you<font color="#E5E5E5"> will see an object compared to</font><font color="#CCCCCC"> zero</font>

201
00:07:38,139 --> 00:07:42,699
<font color="#E5E5E5">this match our definition but we know</font>

202
00:07:40,509 --> 00:07:44,680
it's a it's total<font color="#E5E5E5"> okay so we can filter</font>

203
00:07:42,699 --> 00:07:47,080
it<font color="#E5E5E5"> out another interesting case we found</font>

204
00:07:44,680 --> 00:07:48,909
<font color="#E5E5E5">is the</font><font color="#CCCCCC"> developer's interest in subjects</font>

205
00:07:47,080 --> 00:07:50,529
<font color="#CCCCCC">like is this field already</font><font color="#E5E5E5"> set with a</font>

206
00:07:48,909 --> 00:07:52,930
very tense them so it turns out<font color="#E5E5E5"> that</font>

207
00:07:50,529 --> 00:07:55,419
<font color="#E5E5E5">developers would</font><font color="#CCCCCC"> field equal minus one</font>

208
00:07:52,930 --> 00:07:56,740
to identify<font color="#CCCCCC"> not valid time step and</font><font color="#E5E5E5"> then</font>

209
00:07:55,419 --> 00:07:58,779
later on in the code they want to see if

210
00:07:56,740 --> 00:08:00,849
the time step was a most<font color="#E5E5E5"> valid or not</font>

211
00:07:58,779 --> 00:08:03,159
<font color="#E5E5E5">and so the actual</font><font color="#CCCCCC"> introduce</font><font color="#E5E5E5"> a check is</font>

212
00:08:00,849 --> 00:08:05,169
this different<font color="#CCCCCC"> minus one against is</font>

213
00:08:03,159 --> 00:08:07,209
minus<font color="#CCCCCC"> one or zero are not valid time</font>

214
00:08:05,169 --> 00:08:10,500
<font color="#E5E5E5">stamps we know is not actually money</font><font color="#CCCCCC"> to</font>

215
00:08:07,209 --> 00:08:13,060
check and so we can filter<font color="#CCCCCC"> it out now</font>

216
00:08:10,500 --> 00:08:15,879
<font color="#CCCCCC">this</font><font color="#E5E5E5"> is at least overview of all the</font>

217
00:08:13,060 --> 00:08:18,550
<font color="#CCCCCC">analogies we want to evaluate it and</font><font color="#E5E5E5"> we</font>

218
00:08:15,879 --> 00:08:20,379
want to answer two main<font color="#CCCCCC"> questions is the</font>

219
00:08:18,550 --> 00:08:22,599
<font color="#E5E5E5">tool fast enough to analyze real world</font>

220
00:08:20,379 --> 00:08:24,819
apps the second question is can we<font color="#E5E5E5"> find</font>

221
00:08:22,599 --> 00:08:27,519
<font color="#CCCCCC">interesting stuff without raising too</font>

222
00:08:24,819 --> 00:08:30,759
many false<font color="#CCCCCC"> positives so we</font><font color="#E5E5E5"> collected two</font>

223
00:08:27,519 --> 00:08:32,529
<font color="#E5E5E5">data sets</font><font color="#CCCCCC"> the first one is about 22,000</font>

224
00:08:30,759 --> 00:08:34,899
<font color="#E5E5E5">benign</font><font color="#CCCCCC"> apps</font><font color="#E5E5E5"> collected by</font><font color="#CCCCCC"> a previous</font>

225
00:08:32,529 --> 00:08:37,149
scroll<font color="#CCCCCC"> or</font><font color="#E5E5E5"> the Play Store and</font><font color="#CCCCCC"> we scan</font>

226
00:08:34,899 --> 00:08:39,039
these applications for API is ready to

227
00:08:37,149 --> 00:08:41,849
time<font color="#E5E5E5"> location SMS and that's how we</font>

228
00:08:39,039 --> 00:08:45,550
<font color="#E5E5E5">considered these three smaller data sets</font>

229
00:08:41,849 --> 00:08:47,770
for<font color="#E5E5E5"> the malicious apps we collected</font><font color="#CCCCCC"> 11</font>

230
00:08:45,550 --> 00:08:49,719
malicious apps written<font color="#CCCCCC"> by DARPA rectums</font>

231
00:08:47,770 --> 00:08:52,180
the<font color="#E5E5E5"> Opera teams are organizations that</font>

232
00:08:49,720 --> 00:08:54,640
<font color="#E5E5E5">were asked to</font><font color="#CCCCCC"> develop</font>

233
00:08:52,180 --> 00:08:56,050
next generation<font color="#E5E5E5"> malicious applications</font>

234
00:08:54,640 --> 00:08:59,589
<font color="#E5E5E5">that were able to evade current energy</font>

235
00:08:56,050 --> 00:09:01,750
<font color="#E5E5E5">systems and we</font><font color="#CCCCCC"> consider three award</font>

236
00:08:59,589 --> 00:09:06,850
<font color="#CCCCCC">modern samples that were relevant</font><font color="#E5E5E5"> to</font><font color="#CCCCCC"> our</font>

237
00:09:01,750 --> 00:09:08,380
analysis so we<font color="#E5E5E5"> for demeanor once we run</font>

238
00:09:06,850 --> 00:09:11,110
<font color="#E5E5E5">this</font><font color="#CCCCCC"> analysis with the one</font><font color="#E5E5E5"> hour</font><font color="#CCCCCC"> time</font><font color="#E5E5E5"> out</font>

239
00:09:08,380 --> 00:09:13,570
<font color="#E5E5E5">and then</font><font color="#CCCCCC"> Isis</font><font color="#E5E5E5"> terminated for about</font><font color="#CCCCCC"> for</font>

240
00:09:11,110 --> 00:09:15,339
more than<font color="#CCCCCC"> 80%</font><font color="#E5E5E5"> applications in all these</font>

241
00:09:13,570 --> 00:09:18,520
three<font color="#E5E5E5"> data sets so it seems to scale</font>

242
00:09:15,339 --> 00:09:21,400
reasonably and for<font color="#E5E5E5"> the those ones that</font>

243
00:09:18,520 --> 00:09:23,439
terminated<font color="#E5E5E5"> basically each step of our</font>

244
00:09:21,400 --> 00:09:26,829
analysis were able was able to<font color="#CCCCCC"> filter</font>

245
00:09:23,440 --> 00:09:29,290
<font color="#CCCCCC">out</font><font color="#E5E5E5"> many</font><font color="#CCCCCC"> ups where at the very</font><font color="#E5E5E5"> end of</font>

246
00:09:26,830 --> 00:09:32,200
this<font color="#E5E5E5"> basically we reduced to only 35</font>

247
00:09:29,290 --> 00:09:34,959
apps<font color="#E5E5E5"> flag the suspicious now since these</font>

248
00:09:32,200 --> 00:09:37,660
apps are from the benign that<font color="#E5E5E5"> said we</font>

249
00:09:34,960 --> 00:09:39,580
<font color="#E5E5E5">consider this a placate this</font><font color="#CCCCCC"> apps flag</font>

250
00:09:37,660 --> 00:09:41,319
the suspicious as false positive<font color="#E5E5E5"> but</font>

251
00:09:39,580 --> 00:09:43,510
since we<font color="#CCCCCC"> started with 10,000 apps and</font>

252
00:09:41,320 --> 00:09:44,770
now we are only<font color="#E5E5E5"> 35 the first positive</font>

253
00:09:43,510 --> 00:09:47,230
<font color="#E5E5E5">rate is very low</font>

254
00:09:44,770 --> 00:09:48,610
nonetheless the<font color="#E5E5E5"> triggers we found in</font>

255
00:09:47,230 --> 00:09:51,880
<font color="#E5E5E5">these applications</font><font color="#CCCCCC"> proved to be</font><font color="#E5E5E5"> very</font>

256
00:09:48,610 --> 00:09:53,890
interesting<font color="#E5E5E5"> I'm gonna go</font><font color="#CCCCCC"> a number</font><font color="#E5E5E5"> view</font>

257
00:09:51,880 --> 00:09:55,870
and some<font color="#E5E5E5"> interesting samples now so</font>

258
00:09:53,890 --> 00:09:58,120
<font color="#E5E5E5">time-related checks we found several</font>

259
00:09:55,870 --> 00:09:59,470
checks for license expiration<font color="#CCCCCC"> so there</font>

260
00:09:58,120 --> 00:10:02,709
are many developers<font color="#E5E5E5"> that put in our</font>

261
00:09:59,470 --> 00:10:04,540
coded date within<font color="#CCCCCC"> the app</font><font color="#E5E5E5"> and when this</font>

262
00:10:02,709 --> 00:10:06,069
check is satisfied then some

263
00:10:04,540 --> 00:10:07,900
functionality of the app is disabled<font color="#E5E5E5"> and</font>

264
00:10:06,070 --> 00:10:09,610
we found<font color="#E5E5E5"> apps that we're going to</font>

265
00:10:07,900 --> 00:10:10,150
<font color="#E5E5E5">implement</font><font color="#CCCCCC"> scheduled events so something</font>

266
00:10:09,610 --> 00:10:14,950
is<font color="#E5E5E5"> wrong</font>

267
00:10:10,150 --> 00:10:16,810
every time every day<font color="#E5E5E5"> at 8 p.m. and we</font>

268
00:10:14,950 --> 00:10:19,150
found function ID array to save the

269
00:10:16,810 --> 00:10:21,569
random number generator<font color="#CCCCCC"> implemented</font>

270
00:10:19,150 --> 00:10:24,160
through time

271
00:10:21,570 --> 00:10:26,589
another application<font color="#CCCCCC"> we found was</font>

272
00:10:24,160 --> 00:10:28,990
containing it<font color="#E5E5E5"> a check against latitude</font>

273
00:10:26,589 --> 00:10:30,520
and longitude<font color="#E5E5E5"> so I was comparing this</font>

274
00:10:28,990 --> 00:10:32,410
the<font color="#E5E5E5"> current location with</font><font color="#CCCCCC"> these</font><font color="#E5E5E5"> are</font>

275
00:10:30,520 --> 00:10:35,170
<font color="#E5E5E5">color constants and then when this was</font>

276
00:10:32,410 --> 00:10:37,329
satisfied in Japanese<font color="#E5E5E5"> text is written</font>

277
00:10:35,170 --> 00:10:39,040
<font color="#E5E5E5">for say no idea what it means according</font>

278
00:10:37,330 --> 00:10:40,120
<font color="#E5E5E5">to google translate that means welcome</font>

279
00:10:39,040 --> 00:10:42,160
to the<font color="#CCCCCC"> Haggadah station</font>

280
00:10:40,120 --> 00:10:45,930
and since we did<font color="#CCCCCC"> not trust it we</font>

281
00:10:42,160 --> 00:10:45,930
actually<font color="#E5E5E5"> checked in</font><font color="#CCCCCC"> he seems</font><font color="#E5E5E5"> make sense</font>

282
00:10:46,080 --> 00:10:51,310
another<font color="#E5E5E5"> app we found was my remote phone</font>

283
00:10:49,209 --> 00:10:52,989
again from the Play Store<font color="#E5E5E5"> it's an app</font>

284
00:10:51,310 --> 00:10:55,420
that<font color="#E5E5E5"> let the user locate the phone</font>

285
00:10:52,990 --> 00:10:57,670
through SMS the tool was able to define

286
00:10:55,420 --> 00:11:00,010
<font color="#E5E5E5">this suspicious check basically</font>

287
00:10:57,670 --> 00:11:00,880
<font color="#E5E5E5">something happens when the body of the</font>

288
00:11:00,010 --> 00:11:04,750
SMS contains

289
00:11:00,880 --> 00:11:05,920
<font color="#CCCCCC">MPs</font><font color="#E5E5E5"> : and GPS and we</font><font color="#CCCCCC"> actually stole</font><font color="#E5E5E5"> this</font>

290
00:11:04,750 --> 00:11:08,920
application will

291
00:11:05,920 --> 00:11:11,050
we sent an SMS satisfy<font color="#CCCCCC"> his condition and</font>

292
00:11:08,920 --> 00:11:14,410
we got back the exact GPS coordinates of

293
00:11:11,050 --> 00:11:16,300
<font color="#E5E5E5">the app there was no authentication and</font>

294
00:11:14,410 --> 00:11:19,120
<font color="#E5E5E5">okay miss</font><font color="#CCCCCC"> Kay setting was more a</font>

295
00:11:16,300 --> 00:11:21,550
vulnerability<font color="#E5E5E5"> and not like a vector but</font>

296
00:11:19,120 --> 00:11:24,550
<font color="#E5E5E5">of course in a malicious scenario</font><font color="#CCCCCC"> this</font>

297
00:11:21,550 --> 00:11:25,990
<font color="#E5E5E5">could be an actual an actual vector more</font>

298
00:11:24,550 --> 00:11:28,750
<font color="#E5E5E5">interesting we found remote lock</font>

299
00:11:25,990 --> 00:11:30,279
application it's an application<font color="#CCCCCC"> let the</font>

300
00:11:28,750 --> 00:11:32,350
<font color="#CCCCCC">user block the phone with the user</font>

301
00:11:30,279 --> 00:11:35,350
selected password and it will<font color="#E5E5E5"> identify</font>

302
00:11:32,350 --> 00:11:37,959
<font color="#E5E5E5">something like this it's a body equals</font>

303
00:11:35,350 --> 00:11:39,910
to a very<font color="#E5E5E5"> very long string and turns out</font>

304
00:11:37,959 --> 00:11:42,579
that if you send<font color="#E5E5E5"> an SMS like this the</font>

305
00:11:39,910 --> 00:11:44,350
phone unlocks again another<font color="#CCCCCC"> vector again</font>

306
00:11:42,579 --> 00:11:47,469
this application<font color="#E5E5E5"> was found in the Play</font>

307
00:11:44,350 --> 00:11:49,870
Store<font color="#CCCCCC"> for what concerned</font><font color="#E5E5E5"> a malicious</font>

308
00:11:47,470 --> 00:11:52,690
<font color="#CCCCCC">application</font><font color="#E5E5E5"> again we run the tool</font><font color="#CCCCCC"> on</font>

309
00:11:49,870 --> 00:11:55,810
this 11 DARPA apps and<font color="#E5E5E5"> the</font><font color="#CCCCCC"> two was able</font>

310
00:11:52,690 --> 00:11:57,130
25<font color="#CCCCCC"> triggering all of them and I want to</font>

311
00:11:55,810 --> 00:11:58,959
<font color="#E5E5E5">point out that even if these apps for</font>

312
00:11:57,130 --> 00:12:00,699
synthetics of written by benign

313
00:11:58,959 --> 00:12:03,459
developers<font color="#E5E5E5"> they were actually</font><font color="#CCCCCC"> pretty</font>

314
00:12:00,699 --> 00:12:04,959
complex for<font color="#E5E5E5"> example in one of them there</font>

315
00:12:03,459 --> 00:12:07,660
<font color="#E5E5E5">was a check that was implemented</font><font color="#CCCCCC"> by</font>

316
00:12:04,959 --> 00:12:10,268
defining the storing the result of a

317
00:12:07,660 --> 00:12:12,550
complex predicate on time in a field

318
00:12:10,269 --> 00:12:14,829
<font color="#E5E5E5">called new side flag and then this later</font>

319
00:12:12,550 --> 00:12:16,300
<font color="#CCCCCC">on would</font><font color="#E5E5E5"> be used in another method</font><font color="#CCCCCC"> to</font>

320
00:12:14,829 --> 00:12:19,899
select<font color="#E5E5E5"> oh maybe I should</font><font color="#CCCCCC"> run the</font>

321
00:12:16,300 --> 00:12:22,060
malicious application another

322
00:12:19,899 --> 00:12:25,120
application we analyzed was the hacking

323
00:12:22,060 --> 00:12:27,399
teams<font color="#E5E5E5"> Android RCS this application in</font>

324
00:12:25,120 --> 00:12:31,180
the news I<font color="#E5E5E5"> think six</font><font color="#CCCCCC"> months ago</font><font color="#E5E5E5"> because</font>

325
00:12:27,399 --> 00:12:33,459
they found<font color="#E5E5E5"> that I was used for like</font>

326
00:12:31,180 --> 00:12:36,010
targeted attacks against the activists

327
00:12:33,459 --> 00:12:38,199
and it was extremely powerful<font color="#E5E5E5"> basically</font>

328
00:12:36,010 --> 00:12:40,630
was<font color="#E5E5E5"> able to</font><font color="#CCCCCC"> liquid things per</font>

329
00:12:38,199 --> 00:12:42,819
<font color="#E5E5E5">conversation and GPS location track the</font>

330
00:12:40,630 --> 00:12:44,890
device<font color="#E5E5E5"> capture screenshot and so forth</font>

331
00:12:42,820 --> 00:12:46,329
<font color="#CCCCCC">and it turns out</font><font color="#E5E5E5"> this</font><font color="#CCCCCC"> function ID</font><font color="#E5E5E5"> were</font>

332
00:12:44,890 --> 00:12:47,980
enabled<font color="#CCCCCC"> through SMS</font><font color="#E5E5E5"> and it was</font>

333
00:12:46,329 --> 00:12:49,750
identified<font color="#CCCCCC"> that check like this</font><font color="#E5E5E5"> but</font>

334
00:12:47,980 --> 00:12:53,890
<font color="#E5E5E5">basically each incoming SMS will check</font>

335
00:12:49,750 --> 00:12:56,829
against<font color="#E5E5E5"> a list of our coded strings or</font>

336
00:12:53,890 --> 00:12:58,329
<font color="#E5E5E5">comments and in that case if the</font>

337
00:12:56,829 --> 00:13:00,250
<font color="#E5E5E5">application would abort the propagation</font>

338
00:12:58,329 --> 00:13:02,109
<font color="#CCCCCC">this</font><font color="#E5E5E5"> semester the main application of</font>

339
00:13:00,250 --> 00:13:04,329
<font color="#E5E5E5">the device and it would trigger the</font>

340
00:13:02,110 --> 00:13:05,769
malicious functionality now up to this

341
00:13:04,329 --> 00:13:07,989
<font color="#CCCCCC">point I</font><font color="#E5E5E5"> hope I convinced you this tool</font>

342
00:13:05,769 --> 00:13:08,560
is actually<font color="#E5E5E5"> pretty nice and you can find</font>

343
00:13:07,990 --> 00:13:12,220
interesting

344
00:13:08,560 --> 00:13:14,380
triggers in these apps<font color="#CCCCCC"> of course we do</font>

345
00:13:12,220 --> 00:13:18,910
<font color="#CCCCCC">have some limitations</font><font color="#E5E5E5"> the first one is</font>

346
00:13:14,380 --> 00:13:19,600
that we<font color="#CCCCCC"> can</font><font color="#E5E5E5"> only support</font><font color="#CCCCCC"> assume now a</font>

347
00:13:18,910 --> 00:13:21,519
subset of

348
00:13:19,600 --> 00:13:24,819
trigger sources and they said we support

349
00:13:21,519 --> 00:13:27,459
<font color="#CCCCCC">time location and SMS related but there</font>

350
00:13:24,819 --> 00:13:29,199
are many other ways<font color="#CCCCCC"> to implement a</font>

351
00:13:27,459 --> 00:13:31,630
<font color="#CCCCCC">trigger for example environment related</font>

352
00:13:29,199 --> 00:13:33,160
triggers and stuff like<font color="#E5E5E5"> this</font><font color="#CCCCCC"> and we are</font>

353
00:13:31,630 --> 00:13:34,870
<font color="#E5E5E5">currently working on trying to</font><font color="#CCCCCC"> send this</font>

354
00:13:33,160 --> 00:13:38,139
but the current product<font color="#E5E5E5"> doesn't support</font>

355
00:13:34,870 --> 00:13:39,579
<font color="#CCCCCC">this other sources of course there is in</font>

356
00:13:38,139 --> 00:13:42,550
precision<font color="#CCCCCC"> in scalability of the static</font>

357
00:13:39,579 --> 00:13:45,008
analysis for<font color="#E5E5E5"> our work we were not</font>

358
00:13:42,550 --> 00:13:46,660
running main issues<font color="#E5E5E5"> mainly because we</font>

359
00:13:45,009 --> 00:13:49,089
<font color="#E5E5E5">found out that this time location and</font>

360
00:13:46,660 --> 00:13:51,189
SMS functionality are implemented<font color="#CCCCCC"> in a</font>

361
00:13:49,089 --> 00:13:53,110
very localized way and so this made

362
00:13:51,190 --> 00:13:54,759
analysis of course simpler<font color="#E5E5E5"> but maybe if</font>

363
00:13:53,110 --> 00:13:57,220
<font color="#E5E5E5">you try to send his tool to other kind</font>

364
00:13:54,759 --> 00:14:00,399
<font color="#E5E5E5">of trigger sources you might run into</font>

365
00:13:57,220 --> 00:14:02,079
issues<font color="#E5E5E5"> another limitation is</font><font color="#CCCCCC"> that an</font>

366
00:14:00,399 --> 00:14:04,060
application could move the trigger

367
00:14:02,079 --> 00:14:07,180
<font color="#E5E5E5">outside up for example</font><font color="#CCCCCC"> and</font><font color="#E5E5E5"> network</font>

368
00:14:04,060 --> 00:14:09,219
became but even in this case<font color="#CCCCCC"> I</font><font color="#E5E5E5"> argued</font>

369
00:14:07,180 --> 00:14:10,810
<font color="#CCCCCC">that the app would still need to</font><font color="#E5E5E5"> contain</font>

370
00:14:09,220 --> 00:14:12,430
<font color="#E5E5E5">a trigger because</font><font color="#CCCCCC"> if you</font><font color="#E5E5E5"> send something</font>

371
00:14:10,810 --> 00:14:14,410
on a<font color="#CCCCCC"> network</font><font color="#E5E5E5"> then I</font><font color="#CCCCCC"> to</font><font color="#E5E5E5"> decides for</font><font color="#CCCCCC"> you</font>

372
00:14:12,430 --> 00:14:16,569
<font color="#E5E5E5">the network</font><font color="#CCCCCC"> still needs to send to the</font>

373
00:14:14,410 --> 00:14:18,279
application<font color="#E5E5E5"> do something or</font><font color="#CCCCCC"> not so the</font>

374
00:14:16,569 --> 00:14:20,259
app still<font color="#E5E5E5"> need to contain check maybe</font>

375
00:14:18,279 --> 00:14:21,910
it's a network bed check<font color="#CCCCCC"> and of course</font>

376
00:14:20,259 --> 00:14:23,410
is much more difficult<font color="#CCCCCC"> to</font><font color="#E5E5E5"> detect but</font>

377
00:14:21,910 --> 00:14:25,480
something still there<font color="#E5E5E5"> so I think there</font>

378
00:14:23,410 --> 00:14:27,969
is<font color="#E5E5E5"> still hope</font><font color="#CCCCCC"> and of course we have</font>

379
00:14:25,480 --> 00:14:30,040
issues with office<font color="#CCCCCC"> kesshun</font><font color="#E5E5E5"> we work on</font><font color="#CCCCCC"> /</font>

380
00:14:27,970 --> 00:14:31,810
code and we cannot support<font color="#CCCCCC"> an Izone</font>

381
00:14:30,040 --> 00:14:34,980
native code reflection and<font color="#CCCCCC"> dynamic code</font>

382
00:14:31,810 --> 00:14:37,420
loading at this point<font color="#CCCCCC"> ok let me conclude</font>

383
00:14:34,980 --> 00:14:39,550
we<font color="#E5E5E5"> develop trigger analysis and we</font>

384
00:14:37,420 --> 00:14:42,519
propose<font color="#CCCCCC"> to</font><font color="#E5E5E5"> use it to the identify logic</font>

385
00:14:39,550 --> 00:14:44,170
bombs<font color="#E5E5E5"> in</font><font color="#CCCCCC"> Android apps and it turns out</font>

386
00:14:42,519 --> 00:14:46,029
<font color="#E5E5E5">that if you run this up the this tool on</font>

387
00:14:44,170 --> 00:14:47,500
benign apps<font color="#CCCCCC"> there are no many false</font>

388
00:14:46,029 --> 00:14:49,509
positives<font color="#CCCCCC"> so we think it's an</font>

389
00:14:47,500 --> 00:14:51,100
interesting<font color="#E5E5E5"> approach</font><font color="#CCCCCC"> and I want to point</font>

390
00:14:49,509 --> 00:14:52,990
out<font color="#E5E5E5"> the key idea of this work is</font><font color="#CCCCCC"> to</font>

391
00:14:51,100 --> 00:14:54,910
focus on<font color="#E5E5E5"> triggers and not on a trigger</font>

392
00:14:52,990 --> 00:14:57,579
behavior that's<font color="#E5E5E5"> what distinguishes</font><font color="#CCCCCC"> us</font>

393
00:14:54,910 --> 00:14:59,800
from all<font color="#CCCCCC"> the previous</font><font color="#E5E5E5"> analysis tools and</font>

394
00:14:57,579 --> 00:15:01,949
I think<font color="#CCCCCC"> it would</font><font color="#E5E5E5"> be really nice if</font><font color="#CCCCCC"> this</font>

395
00:14:59,800 --> 00:15:04,300
<font color="#CCCCCC">four would aspire more analysis</font>

396
00:15:01,949 --> 00:15:07,060
techniques<font color="#E5E5E5"> to</font><font color="#CCCCCC"> actually try</font><font color="#E5E5E5"> to create</font>

397
00:15:04,300 --> 00:15:09,040
price better the<font color="#E5E5E5"> conditions that are</font>

398
00:15:07,060 --> 00:15:11,018
<font color="#E5E5E5">controlling what actually happens on our</font>

399
00:15:09,040 --> 00:15:14,160
phones<font color="#E5E5E5"> we did say thank you</font><font color="#CCCCCC"> very much</font>

400
00:15:11,019 --> 00:15:14,160
<font color="#E5E5E5">and I'm</font><font color="#CCCCCC"> happy to take any questions</font>

401
00:15:20,320 --> 00:15:23,750
jianjiong Microsoft Research<font color="#CCCCCC"> really nice</font>

402
00:15:23,149 --> 00:15:25,700
work

403
00:15:23,750 --> 00:15:28,100
so I've been<font color="#CCCCCC"> also recently looking at</font>

404
00:15:25,700 --> 00:15:32,089
those kind of trigger behaviors and I've

405
00:15:28,100 --> 00:15:33,800
seen many<font color="#CCCCCC"> cases that</font><font color="#E5E5E5"> apps collect so</font>

406
00:15:32,089 --> 00:15:36,080
many external kind of<font color="#E5E5E5"> triggering</font>

407
00:15:33,800 --> 00:15:38,630
information like the kind<font color="#CCCCCC"> of system</font>

408
00:15:36,080 --> 00:15:41,450
variables and so<font color="#CCCCCC"> on and then after it</font>

409
00:15:38,630 --> 00:15:44,589
collects all all those things and<font color="#E5E5E5"> then</font>

410
00:15:41,450 --> 00:15:47,540
through other checks and then you know

411
00:15:44,589 --> 00:15:50,089
invoke<font color="#E5E5E5"> this trigger behavior do you</font>

412
00:15:47,540 --> 00:15:51,620
think<font color="#E5E5E5"> your your analysis can catch that</font>

413
00:15:50,089 --> 00:15:54,230
so<font color="#E5E5E5"> that's that's question number one and</font>

414
00:15:51,620 --> 00:15:58,070
<font color="#E5E5E5">the number two is I understand that in a</font>

415
00:15:54,230 --> 00:15:59,690
native code is outside out of<font color="#E5E5E5"> scope but</font>

416
00:15:58,070 --> 00:16:01,339
I've also seen<font color="#E5E5E5"> a</font><font color="#CCCCCC"> lot of</font><font color="#E5E5E5"> cases that the</font>

417
00:15:59,690 --> 00:16:04,220
check happens in the native code<font color="#E5E5E5"> and</font>

418
00:16:01,339 --> 00:16:09,620
then trigger behaviors<font color="#CCCCCC"> off happens in</font>

419
00:16:04,220 --> 00:16:12,670
the<font color="#CCCCCC"> java website so how would you so for</font>

420
00:16:09,620 --> 00:16:15,050
the second question<font color="#E5E5E5"> about</font><font color="#CCCCCC"> netic code</font><font color="#E5E5E5"> I</font>

421
00:16:12,670 --> 00:16:16,910
think the idea would<font color="#CCCCCC"> work also for</font>

422
00:16:15,050 --> 00:16:19,790
binary of course is much much more

423
00:16:16,910 --> 00:16:21,170
<font color="#E5E5E5">difficult</font><font color="#CCCCCC"> to</font><font color="#E5E5E5"> implement and I think it's</font>

424
00:16:19,790 --> 00:16:21,860
much easier for<font color="#E5E5E5"> the target to</font><font color="#CCCCCC"> offer</font>

425
00:16:21,170 --> 00:16:25,640
skating's

426
00:16:21,860 --> 00:16:28,040
but we believe this<font color="#E5E5E5"> kind of like our</font>

427
00:16:25,640 --> 00:16:29,930
<font color="#E5E5E5">coded checks or this kind of triggers</font>

428
00:16:28,040 --> 00:16:32,630
<font color="#CCCCCC">will be used mainly for I don't know</font>

429
00:16:29,930 --> 00:16:34,489
target attacks and I mean maybe<font color="#E5E5E5"> for</font>

430
00:16:32,630 --> 00:16:36,380
application that have<font color="#CCCCCC"> some into</font><font color="#E5E5E5"> the</font><font color="#CCCCCC"> App</font>

431
00:16:34,490 --> 00:16:38,870
<font color="#CCCCCC">Store of</font><font color="#E5E5E5"> the Department of Defense and</font>

432
00:16:36,380 --> 00:16:40,670
maybe in those cases office<font color="#E5E5E5"> cash on and</font>

433
00:16:38,870 --> 00:16:43,420
maybe use a genetic code<font color="#CCCCCC"> can be</font><font color="#E5E5E5"> already</font>

434
00:16:40,670 --> 00:16:45,650
ground for rejection<font color="#E5E5E5"> so it's difficult</font>

435
00:16:43,420 --> 00:16:47,630
<font color="#E5E5E5">idea</font><font color="#CCCCCC"> I think might work</font><font color="#E5E5E5"> but it's</font>

436
00:16:45,650 --> 00:16:51,350
<font color="#E5E5E5">difficult but maybe in</font><font color="#CCCCCC"> some scenarios</font>

437
00:16:47,630 --> 00:16:53,360
<font color="#CCCCCC">where maybe this sub</font><font color="#E5E5E5"> toe logic related</font>

438
00:16:51,350 --> 00:16:57,890
malicious functionality are actually

439
00:16:53,360 --> 00:16:59,540
used<font color="#CCCCCC"> maybe</font><font color="#E5E5E5"> there are these native code</font>

440
00:16:57,890 --> 00:17:01,400
users<font color="#CCCCCC"> maybe</font><font color="#E5E5E5"> already flagged for them and</font>

441
00:16:59,540 --> 00:17:02,060
so<font color="#E5E5E5"> they would they would three for the</font>

442
00:17:01,400 --> 00:17:03,800
<font color="#E5E5E5">first question</font>

443
00:17:02,060 --> 00:17:05,109
as far as I know<font color="#CCCCCC"> you said there are</font>

444
00:17:03,800 --> 00:17:08,359
<font color="#E5E5E5">these apps that collect this information</font>

445
00:17:05,109 --> 00:17:10,969
from different sources<font color="#CCCCCC"> and then they do</font>

446
00:17:08,359 --> 00:17:17,240
<font color="#CCCCCC">something but the check isn't what I</font>

447
00:17:10,970 --> 00:17:19,429
mean there is<font color="#E5E5E5"> the collection so</font>

448
00:17:17,240 --> 00:17:20,809
basically<font color="#CCCCCC"> combination right OS yes yes</font>

449
00:17:19,429 --> 00:17:23,569
<font color="#E5E5E5">yeah Oh interesting</font>

450
00:17:20,809 --> 00:17:25,069
<font color="#E5E5E5">in that case okay so now of</font><font color="#CCCCCC"> course we</font>

451
00:17:23,569 --> 00:17:28,540
don't<font color="#E5E5E5"> we don't handle this we focus only</font>

452
00:17:25,069 --> 00:17:30,889
on this time location SMS wouldn't be

453
00:17:28,540 --> 00:17:31,770
isn't<font color="#E5E5E5"> it weird that something happens</font>

454
00:17:30,890 --> 00:17:34,600
depending

455
00:17:31,770 --> 00:17:36,820
combination<font color="#E5E5E5"> of some sources what I'm</font>

456
00:17:34,600 --> 00:17:39,820
saying is<font color="#E5E5E5"> that maybe</font><font color="#CCCCCC"> if you can write an</font>

457
00:17:36,820 --> 00:17:41,200
analysis that<font color="#E5E5E5"> says collect all</font><font color="#CCCCCC"> these</font>

458
00:17:39,820 --> 00:17:43,000
sources<font color="#CCCCCC"> and</font><font color="#E5E5E5"> then there is a check</font>

459
00:17:41,200 --> 00:17:45,730
depending on all<font color="#E5E5E5"> these possible things</font>

460
00:17:43,000 --> 00:17:47,050
then in my business<font color="#CCCCCC"> videos of course</font><font color="#E5E5E5"> to</font>

461
00:17:45,730 --> 00:17:48,130
understand<font color="#E5E5E5"> if this approaches the reason</font>

462
00:17:47,050 --> 00:17:50,200
of<font color="#E5E5E5"> all you need</font><font color="#CCCCCC"> to have a large-scale</font>

463
00:17:48,130 --> 00:17:52,450
analysis try<font color="#E5E5E5"> on many apps and see if you</font>

464
00:17:50,200 --> 00:17:56,070
raise too many<font color="#CCCCCC"> false positives but if he</font>

465
00:17:52,450 --> 00:17:56,070
doesn't<font color="#CCCCCC"> do it there might be a solution</font>

466
00:17:56,820 --> 00:18:02,409
<font color="#CCCCCC">Sudoku MIT really like this work I</font><font color="#E5E5E5"> just</font>

467
00:18:00,490 --> 00:18:04,900
want to ask you<font color="#E5E5E5"> if you were</font><font color="#CCCCCC"> to</font><font color="#E5E5E5"> defeat</font>

468
00:18:02,410 --> 00:18:06,910
your static analysis<font color="#E5E5E5"> what would you do</font>

469
00:18:04,900 --> 00:18:09,190
it seems like you're tracking directly

470
00:18:06,910 --> 00:18:11,710
<font color="#E5E5E5">objects right now I mean how is your</font>

471
00:18:09,190 --> 00:18:12,940
analysis object sensitive and you know

472
00:18:11,710 --> 00:18:14,830
how does the<font color="#E5E5E5"> information flow how would</font>

473
00:18:12,940 --> 00:18:17,830
you defeat your static analysis with

474
00:18:14,830 --> 00:18:19,899
what you know this<font color="#E5E5E5"> simple trick is what</font>

475
00:18:17,830 --> 00:18:23,139
I point<font color="#E5E5E5"> out in</font><font color="#CCCCCC"> the limitation</font><font color="#E5E5E5"> maybe you</font>

476
00:18:19,900 --> 00:18:24,700
put the<font color="#CCCCCC"> trigger somewhere</font><font color="#E5E5E5"> else and again</font>

477
00:18:23,140 --> 00:18:27,610
as I<font color="#E5E5E5"> said you might have</font><font color="#CCCCCC"> this trigger</font>

478
00:18:24,700 --> 00:18:30,190
from the network<font color="#E5E5E5"> but there are issues</font>

479
00:18:27,610 --> 00:18:31,990
<font color="#CCCCCC">and that naturally functionality</font><font color="#E5E5E5"> you</font>

480
00:18:30,190 --> 00:18:34,450
have<font color="#E5E5E5"> many more cases they would fit our</font>

481
00:18:31,990 --> 00:18:36,430
definition of being suspicious<font color="#E5E5E5"> because</font>

482
00:18:34,450 --> 00:18:38,500
maybe a protocol part<font color="#CCCCCC"> cells and and</font>

483
00:18:36,430 --> 00:18:42,160
things like<font color="#E5E5E5"> this and so I think</font><font color="#CCCCCC"> as oh</font>

484
00:18:38,500 --> 00:18:44,410
now this<font color="#E5E5E5"> will cause</font><font color="#CCCCCC"> problems for our</font>

485
00:18:42,160 --> 00:18:46,120
analysis<font color="#CCCCCC"> what if you pull things out</font>

486
00:18:44,410 --> 00:18:47,860
from<font color="#E5E5E5"> the object that you're currently</font>

487
00:18:46,120 --> 00:18:49,840
tracking<font color="#E5E5E5"> so you're taking three things</font>

488
00:18:47,860 --> 00:18:52,090
too intense and binder and sort of

489
00:18:49,840 --> 00:18:53,649
<font color="#CCCCCC">you're tagging the object right what if</font>

490
00:18:52,090 --> 00:18:55,870
you pull information<font color="#E5E5E5"> from the object</font>

491
00:18:53,650 --> 00:18:58,690
<font color="#E5E5E5">would you be able to track that yes so</font>

492
00:18:55,870 --> 00:19:01,989
we have we rely on<font color="#E5E5E5"> API is</font><font color="#CCCCCC"> annotation and</font>

493
00:18:58,690 --> 00:19:05,110
<font color="#E5E5E5">we took some other annotation from</font>

494
00:19:01,990 --> 00:19:07,600
<font color="#E5E5E5">previous tools</font><font color="#CCCCCC"> what we do we have a</font>

495
00:19:05,110 --> 00:19:09,310
selection of like<font color="#E5E5E5"> API as we support so</font>

496
00:19:07,600 --> 00:19:11,500
for example if a time object<font color="#E5E5E5"> then you</font>

497
00:19:09,310 --> 00:19:13,020
<font color="#E5E5E5">can do get month get day</font><font color="#CCCCCC"> day</font><font color="#E5E5E5"> we say a</font>

498
00:19:11,500 --> 00:19:15,010
<font color="#E5E5E5">this is</font><font color="#CCCCCC"> actually amount</font><font color="#E5E5E5"> of something</font><font color="#CCCCCC"> and</font>

499
00:19:13,020 --> 00:19:16,900
for<font color="#E5E5E5"> intention strings</font>

500
00:19:15,010 --> 00:19:18,580
we have<font color="#E5E5E5"> a limited support but we do have</font>

501
00:19:16,900 --> 00:19:20,440
some supports<font color="#E5E5E5"> where you can say store</font>

502
00:19:18,580 --> 00:19:22,210
something<font color="#CCCCCC"> anything and</font><font color="#E5E5E5"> now we know this</font>

503
00:19:20,440 --> 00:19:24,160
<font color="#CCCCCC">interning tainted with this</font><font color="#E5E5E5"> information</font>

504
00:19:22,210 --> 00:19:26,860
because we don't know maybe the super

505
00:19:24,160 --> 00:19:29,380
precise value of what's inside<font color="#E5E5E5"> but we</font>

506
00:19:26,860 --> 00:19:32,740
know a decent<font color="#E5E5E5"> n contains the month and</font>

507
00:19:29,380 --> 00:19:33,730
the day of<font color="#E5E5E5"> the current time okay</font><font color="#CCCCCC"> yeah</font>

508
00:19:32,740 --> 00:19:36,910
<font color="#E5E5E5">stinking I understand</font><font color="#CCCCCC"> okay thanks so</font>

509
00:19:33,730 --> 00:19:39,730
<font color="#E5E5E5">much absolutely right last</font><font color="#CCCCCC"> question</font>

510
00:19:36,910 --> 00:19:42,160
we're running out of<font color="#E5E5E5"> time great talk is</font>

511
00:19:39,730 --> 00:19:45,490
<font color="#E5E5E5">Dom from</font><font color="#CCCCCC"> Qualcomm</font><font color="#E5E5E5"> so good</font><font color="#CCCCCC"> question</font><font color="#E5E5E5"> for</font>

512
00:19:42,160 --> 00:19:47,260
<font color="#E5E5E5">this is you you mention you d like</font>

513
00:19:45,490 --> 00:19:49,780
interprocedural analysis for triggers

514
00:19:47,260 --> 00:19:51,700
for<font color="#CCCCCC"> predicate stuff</font><font color="#E5E5E5"> so how often do you</font>

515
00:19:49,780 --> 00:19:52,840
<font color="#E5E5E5">see the sauce function in the</font><font color="#CCCCCC"> sinc</font>

516
00:19:51,700 --> 00:19:53,440
<font color="#CCCCCC">function under</font><font color="#E5E5E5"> the tree and the</font>

517
00:19:52,840 --> 00:19:56,199
predicates

518
00:19:53,440 --> 00:19:58,090
you know<font color="#CCCCCC"> I'll locally happen in very</font>

519
00:19:56,200 --> 00:20:01,620
small<font color="#CCCCCC"> car graph or happen in</font><font color="#E5E5E5"> two</font>

520
00:19:58,090 --> 00:20:03,879
procedurally as a good question

521
00:20:01,620 --> 00:20:06,699
so I know for the apps I<font color="#CCCCCC"> may know</font>

522
00:20:03,880 --> 00:20:08,440
<font color="#CCCCCC">analyze</font><font color="#E5E5E5"> so for the 35 apps that my to</font>

523
00:20:06,700 --> 00:20:10,510
<font color="#E5E5E5">identify I checked them all manually and</font>

524
00:20:08,440 --> 00:20:12,310
it was<font color="#E5E5E5"> very localized I think in two</font>

525
00:20:10,510 --> 00:20:14,890
cases<font color="#E5E5E5"> there was something where there</font>

526
00:20:12,310 --> 00:20:18,159
was a you store the result of<font color="#E5E5E5"> a check in</font>

527
00:20:14,890 --> 00:20:20,200
a field and then later<font color="#CCCCCC"> on</font><font color="#E5E5E5"> this field is</font>

528
00:20:18,160 --> 00:20:23,560
actually<font color="#E5E5E5"> used for the dart pops it was</font>

529
00:20:20,200 --> 00:20:26,710
much<font color="#E5E5E5"> it happened more often because they</font>

530
00:20:23,560 --> 00:20:29,080
actively<font color="#E5E5E5"> tried to like three cars to not</font>

531
00:20:26,710 --> 00:20:30,130
detect things but that's<font color="#CCCCCC"> an interesting</font>

532
00:20:29,080 --> 00:20:31,629
question<font color="#CCCCCC"> I don't know the answer</font><font color="#E5E5E5"> I think</font>

533
00:20:30,130 --> 00:20:34,060
<font color="#CCCCCC">the best way would be to actually do an</font>

534
00:20:31,630 --> 00:20:36,910
experiment and<font color="#E5E5E5"> see how complicated this</font>

535
00:20:34,060 --> 00:20:40,919
function ID are depending on the type of

536
00:20:36,910 --> 00:20:43,060
sources you're using time<font color="#E5E5E5"> location or</font>

537
00:20:40,920 --> 00:20:45,310
<font color="#E5E5E5">interpreter interprocedural</font><font color="#CCCCCC"> an assist</font>

538
00:20:43,060 --> 00:20:47,409
here<font color="#CCCCCC"> do you handle like we have what</font>

539
00:20:45,310 --> 00:20:48,820
your function<font color="#E5E5E5"> to do the</font><font color="#CCCCCC"> very considerate</font>

540
00:20:47,410 --> 00:20:50,950
<font color="#CCCCCC">you analysis or how do</font><font color="#E5E5E5"> you handle guard</font>

541
00:20:48,820 --> 00:20:53,320
<font color="#E5E5E5">actually built of functions yeah</font>

542
00:20:50,950 --> 00:20:56,050
oh yeah so in my code is much much much

543
00:20:53,320 --> 00:20:58,510
much much simpler than in binaries<font color="#CCCCCC"> so</font>

544
00:20:56,050 --> 00:21:01,000
basically your name invocation you know

545
00:20:58,510 --> 00:21:03,190
the<font color="#CCCCCC"> signature of the metal so</font><font color="#E5E5E5"> you just</font>

546
00:21:01,000 --> 00:21:05,440
need to<font color="#E5E5E5"> analyze</font><font color="#CCCCCC"> the class</font><font color="#E5E5E5"> hierarchy and</font>

547
00:21:03,190 --> 00:21:07,480
<font color="#CCCCCC">you have a small number of targets</font><font color="#E5E5E5"> so</font>

548
00:21:05,440 --> 00:21:10,840
<font color="#E5E5E5">even if you don't track</font><font color="#CCCCCC"> constraint</font><font color="#E5E5E5"> super</font>

549
00:21:07,480 --> 00:21:13,150
precisely you you can get away<font color="#E5E5E5"> with it</font>

550
00:21:10,840 --> 00:21:16,000
without<font color="#CCCCCC"> having crazy explosions of</font>

551
00:21:13,150 --> 00:21:18,330
states or imprecisions<font color="#E5E5E5"> thank you it's</font>

552
00:21:16,000 --> 00:21:18,330
great<font color="#E5E5E5"> time</font>

