1
00:00:04,610 --> 00:00:10,040
so today I'm gonna<font color="#E5E5E5"> tell you about how</font>

2
00:00:07,340 --> 00:00:12,830
<font color="#CCCCCC">you can take</font><font color="#E5E5E5"> advantage of analog</font>

3
00:00:10,040 --> 00:00:18,130
circuits<font color="#CCCCCC"> to make malicious hardware</font><font color="#E5E5E5"> that</font>

4
00:00:12,830 --> 00:00:22,779
is small<font color="#E5E5E5"> stealthy and do you have the</font>

5
00:00:18,130 --> 00:00:24,859
apparently<font color="#E5E5E5"> clicker small stealthy and</font>

6
00:00:22,779 --> 00:00:28,189
controllable by an attacker

7
00:00:24,859 --> 00:00:31,910
that's joint work by the<font color="#E5E5E5"> way with Chi Yu</font>

8
00:00:28,189 --> 00:00:34,660
yang<font color="#CCCCCC"> Ching dong Todd Austen</font><font color="#E5E5E5"> and Dennis</font>

9
00:00:31,910 --> 00:00:39,199
Sylvester<font color="#E5E5E5"> so as you can</font><font color="#CCCCCC"> see here</font>

10
00:00:34,660 --> 00:00:40,760
foundations are important<font color="#E5E5E5"> and every</font>

11
00:00:39,199 --> 00:00:44,449
computing system that you do your work

12
00:00:40,760 --> 00:00:48,049
<font color="#CCCCCC">on the foundation</font><font color="#E5E5E5"> of</font><font color="#CCCCCC"> that system</font><font color="#E5E5E5"> is some</font>

13
00:00:44,449 --> 00:00:50,000
bit of hardware<font color="#E5E5E5"> the processor and if</font>

14
00:00:48,049 --> 00:00:52,460
there is a flaw if this processor<font color="#CCCCCC"> is</font>

15
00:00:50,000 --> 00:00:55,129
<font color="#CCCCCC">imperfect if somebody inserted them some</font>

16
00:00:52,460 --> 00:00:57,229
malicious backdoor in the<font color="#E5E5E5"> hardware that</font>

17
00:00:55,129 --> 00:00:59,809
<font color="#E5E5E5">even if you have</font><font color="#CCCCCC"> perfect software</font>

18
00:00:57,229 --> 00:01:01,610
<font color="#E5E5E5">writing on top of this</font><font color="#CCCCCC"> hardware that</font>

19
00:00:59,809 --> 00:01:04,658
<font color="#E5E5E5">software is now rendered imperfect</font>

20
00:01:01,610 --> 00:01:08,270
<font color="#E5E5E5">because when it relies on is also</font>

21
00:01:04,659 --> 00:01:10,130
imperfect<font color="#E5E5E5"> so you all</font><font color="#CCCCCC"> here most of</font><font color="#E5E5E5"> you</font>

22
00:01:08,270 --> 00:01:12,590
are<font color="#E5E5E5"> not hardware security</font><font color="#CCCCCC"> researchers</font>

23
00:01:10,130 --> 00:01:14,600
and and that's fine because<font color="#E5E5E5"> you know I</font>

24
00:01:12,590 --> 00:01:17,870
need a niche<font color="#CCCCCC"> and you've done a great job</font>

25
00:01:14,600 --> 00:01:20,960
building<font color="#E5E5E5"> fences software level fences to</font>

26
00:01:17,870 --> 00:01:23,360
<font color="#CCCCCC">keep out</font><font color="#E5E5E5"> there</font><font color="#CCCCCC"> do else but as you can</font>

27
00:01:20,960 --> 00:01:26,570
<font color="#E5E5E5">see here at the bottom</font><font color="#CCCCCC"> there is</font><font color="#E5E5E5"> a gap</font><font color="#CCCCCC"> so</font>

28
00:01:23,360 --> 00:01:28,820
<font color="#CCCCCC">when you build these fences it forces</font>

29
00:01:26,570 --> 00:01:30,259
attackers<font color="#E5E5E5"> that they're not</font><font color="#CCCCCC"> gonna give up</font>

30
00:01:28,820 --> 00:01:32,089
<font color="#E5E5E5">these hackers are never gonna give up</font>

31
00:01:30,260 --> 00:01:34,159
<font color="#CCCCCC">because there's</font><font color="#E5E5E5"> motive for them to keep</font>

32
00:01:32,090 --> 00:01:35,960
<font color="#CCCCCC">going</font><font color="#E5E5E5"> so what they do is they just go to</font>

33
00:01:34,159 --> 00:01:37,970
lower<font color="#CCCCCC"> and lower levels of the system</font>

34
00:01:35,960 --> 00:01:38,600
<font color="#E5E5E5">we've seen this in</font><font color="#CCCCCC"> software space with</font>

35
00:01:37,970 --> 00:01:41,900
<font color="#CCCCCC">rootkits</font>

36
00:01:38,600 --> 00:01:44,809
malicious hypervisors<font color="#CCCCCC"> you now have boot</font>

37
00:01:41,900 --> 00:01:47,900
kits<font color="#CCCCCC"> and in recent</font><font color="#E5E5E5"> years we've</font><font color="#CCCCCC"> seen</font>

38
00:01:44,810 --> 00:01:49,280
malicious hardware<font color="#E5E5E5"> and so basically you</font>

39
00:01:47,900 --> 00:01:50,960
know you software<font color="#E5E5E5"> you have</font><font color="#CCCCCC"> some great</font>

40
00:01:49,280 --> 00:01:52,640
research securing systems and now you've

41
00:01:50,960 --> 00:01:55,009
done<font color="#E5E5E5"> this battle to the bottom of</font>

42
00:01:52,640 --> 00:01:57,530
attackers<font color="#E5E5E5"> which is resulting them having</font>

43
00:01:55,010 --> 00:02:00,890
<font color="#CCCCCC">to expend the resources to attack</font>

44
00:01:57,530 --> 00:02:02,630
<font color="#E5E5E5">hardware and so again this research</font>

45
00:02:00,890 --> 00:02:05,270
space has been highly active for about

46
00:02:02,630 --> 00:02:07,009
<font color="#E5E5E5">you</font><font color="#CCCCCC"> know the last five</font><font color="#E5E5E5"> to six years and</font>

47
00:02:05,270 --> 00:02:08,989
there's kind<font color="#CCCCCC"> of two different</font><font color="#E5E5E5"> kind</font><font color="#CCCCCC"> of a</font>

48
00:02:07,010 --> 00:02:11,180
yin and yang of Defense's<font color="#E5E5E5"> that have come</font>

49
00:02:08,989 --> 00:02:13,700
out<font color="#CCCCCC"> of</font><font color="#E5E5E5"> this research into space so the</font>

50
00:02:11,180 --> 00:02:16,370
first one<font color="#CCCCCC"> is kind of visual inspection</font>

51
00:02:13,700 --> 00:02:18,350
side channel analysis and this kind<font color="#E5E5E5"> of</font>

52
00:02:16,370 --> 00:02:22,250
this class of<font color="#CCCCCC"> defense</font>

53
00:02:18,350 --> 00:02:24,200
it's really<font color="#E5E5E5"> good at detecting attacks</font>

54
00:02:22,250 --> 00:02:26,090
that are<font color="#CCCCCC"> large</font><font color="#E5E5E5"> an attacks that are law</font>

55
00:02:24,200 --> 00:02:28,549
<font color="#E5E5E5">are large because they need a complex</font>

56
00:02:26,090 --> 00:02:31,190
state machine<font color="#E5E5E5"> to</font><font color="#CCCCCC"> hide themselves</font><font color="#E5E5E5"> from</font>

57
00:02:28,550 --> 00:02:33,920
dynamic<font color="#E5E5E5"> analysis so is the kind of</font>

58
00:02:31,190 --> 00:02:35,650
testing functional verification<font color="#E5E5E5"> you can</font>

59
00:02:33,920 --> 00:02:38,869
combine<font color="#E5E5E5"> this with static analysis and</font>

60
00:02:35,650 --> 00:02:41,660
what you do in testing dynamic analysis

61
00:02:38,870 --> 00:02:45,230
is you try to issue test cases<font color="#E5E5E5"> that</font>

62
00:02:41,660 --> 00:02:47,390
exposes malice<font color="#E5E5E5"> so which is great at</font>

63
00:02:45,230 --> 00:02:49,670
<font color="#E5E5E5">attacking of detecting malicious</font>

64
00:02:47,390 --> 00:02:51,890
circuits that aren't hiding very well

65
00:02:49,670 --> 00:02:54,049
they don't<font color="#E5E5E5"> have complex trigger state</font>

66
00:02:51,890 --> 00:02:56,989
machines that hide<font color="#E5E5E5"> the attack payload</font>

67
00:02:54,050 --> 00:02:58,280
from<font color="#E5E5E5"> inspection so this is kind of the</font>

68
00:02:56,990 --> 00:03:00,500
space we've had this<font color="#E5E5E5"> kind of yin</font><font color="#CCCCCC"> and</font>

69
00:02:58,280 --> 00:03:02,660
<font color="#CCCCCC">yang of</font><font color="#E5E5E5"> well some part of the attacks</font>

70
00:03:00,500 --> 00:03:04,160
will catch with dynamic analysis<font color="#CCCCCC"> because</font>

71
00:03:02,660 --> 00:03:06,740
<font color="#E5E5E5">there are always on and the other part</font>

72
00:03:04,160 --> 00:03:07,940
will catch with visual inspection<font color="#CCCCCC"> side</font>

73
00:03:06,740 --> 00:03:12,140
channels because they're<font color="#E5E5E5"> not always on</font>

74
00:03:07,940 --> 00:03:14,090
<font color="#E5E5E5">but they rely on a large trigger</font><font color="#CCCCCC"> so</font>

75
00:03:12,140 --> 00:03:17,179
<font color="#E5E5E5">really the challenge</font><font color="#CCCCCC"> that we address in</font>

76
00:03:14,090 --> 00:03:18,740
a<font color="#CCCCCC"> - is - how do</font><font color="#E5E5E5"> you take this complex</font>

77
00:03:17,180 --> 00:03:21,110
state machine is it even possible<font color="#CCCCCC"> to</font>

78
00:03:18,740 --> 00:03:23,780
<font color="#E5E5E5">have</font><font color="#CCCCCC"> this complex</font><font color="#E5E5E5"> trigger</font><font color="#CCCCCC"> state and</font>

79
00:03:21,110 --> 00:03:26,090
condense it down to<font color="#CCCCCC"> basically a single</font>

80
00:03:23,780 --> 00:03:27,860
<font color="#E5E5E5">cell inside of an ASIC a couple of</font>

81
00:03:26,090 --> 00:03:29,390
transistors<font color="#CCCCCC"> you know</font><font color="#E5E5E5"> two to</font><font color="#CCCCCC"> four</font>

82
00:03:27,860 --> 00:03:32,450
<font color="#E5E5E5">transistors so this is really the</font>

83
00:03:29,390 --> 00:03:34,220
<font color="#CCCCCC">challenge that we address in a</font><font color="#E5E5E5"> - and if</font>

84
00:03:32,450 --> 00:03:36,589
you can do this<font color="#E5E5E5"> you make an attack that</font>

85
00:03:34,220 --> 00:03:39,230
<font color="#E5E5E5">is stealthy in terms of it hides from</font>

86
00:03:36,590 --> 00:03:41,780
<font color="#CCCCCC">dynamic</font><font color="#E5E5E5"> analysis it's small and being</font>

87
00:03:39,230 --> 00:03:43,790
small is important because if you can

88
00:03:41,780 --> 00:03:46,130
<font color="#E5E5E5">reduce it down to a cell you're putting</font>

89
00:03:43,790 --> 00:03:49,280
it inside of a processor that<font color="#CCCCCC"> has a</font>

90
00:03:46,130 --> 00:03:51,049
hundreds of millions<font color="#E5E5E5"> of other cells that</font>

91
00:03:49,280 --> 00:03:52,460
all kind of<font color="#E5E5E5"> look the</font><font color="#CCCCCC"> same</font><font color="#E5E5E5"> so it's why I</font>

92
00:03:51,050 --> 00:03:54,020
have<font color="#E5E5E5"> Waldo I don't know if you spotted</font>

93
00:03:52,460 --> 00:03:56,090
him in<font color="#CCCCCC"> the</font><font color="#E5E5E5"> bottom corner of the</font><font color="#CCCCCC"> screen</font>

94
00:03:54,020 --> 00:03:58,640
this<font color="#CCCCCC"> crates it's like Where's Waldo game</font>

95
00:03:56,090 --> 00:04:00,770
where you add a cell and it's now with a

96
00:03:58,640 --> 00:04:02,119
<font color="#E5E5E5">hundred million other cells but now it's</font>

97
00:04:00,770 --> 00:04:04,790
like<font color="#E5E5E5"> which</font><font color="#CCCCCC"> Waldo because they all look</font>

98
00:04:02,120 --> 00:04:07,460
<font color="#CCCCCC">like Waldo</font><font color="#E5E5E5"> and it's really hard to spot</font>

99
00:04:04,790 --> 00:04:09,230
the attack using visual inspection<font color="#E5E5E5"> so in</font>

100
00:04:07,460 --> 00:04:10,880
this way<font color="#E5E5E5"> you kind of break this yin and</font>

101
00:04:09,230 --> 00:04:15,950
<font color="#E5E5E5">yang</font><font color="#CCCCCC"> and say I can do both</font><font color="#E5E5E5"> I can create</font>

102
00:04:10,880 --> 00:04:17,450
a tax that do both<font color="#CCCCCC"> okay</font><font color="#E5E5E5"> so kind</font><font color="#CCCCCC"> of</font><font color="#E5E5E5"> how</font>

103
00:04:15,950 --> 00:04:19,339
<font color="#E5E5E5">processes</font><font color="#CCCCCC"> are designed</font><font color="#E5E5E5"> and this is a</font>

104
00:04:17,450 --> 00:04:21,260
software many software focused<font color="#CCCCCC"> audience</font>

105
00:04:19,339 --> 00:04:23,719
<font color="#E5E5E5">so generally we have the specification</font>

106
00:04:21,260 --> 00:04:25,580
stage<font color="#CCCCCC"> where you'd as I say this</font><font color="#E5E5E5"> is what</font>

107
00:04:23,720 --> 00:04:27,890
the functions my processor needs<font color="#E5E5E5"> to have</font>

108
00:04:25,580 --> 00:04:31,070
then you have<font color="#E5E5E5"> the design stage where you</font>

109
00:04:27,890 --> 00:04:32,180
code up an HDL or<font color="#E5E5E5"> like see</font><font color="#CCCCCC"> with the</font>

110
00:04:31,070 --> 00:04:34,490
<font color="#E5E5E5">actual to implement a</font>

111
00:04:32,180 --> 00:04:36,980
and then<font color="#CCCCCC"> you do some functional</font>

112
00:04:34,490 --> 00:04:40,430
<font color="#E5E5E5">verification some validation and now we</font>

113
00:04:36,980 --> 00:04:42,530
go into where<font color="#CCCCCC"> our attack takes place</font><font color="#E5E5E5"> so</font>

114
00:04:40,430 --> 00:04:44,480
once you do validate your circuit<font color="#E5E5E5"> you</font>

115
00:04:42,530 --> 00:04:44,809
say<font color="#CCCCCC"> okay I need</font><font color="#E5E5E5"> somebody to build it for</font>

116
00:04:44,480 --> 00:04:47,600
<font color="#E5E5E5">me</font>

117
00:04:44,810 --> 00:04:49,460
most places can't build it themselves<font color="#CCCCCC"> so</font>

118
00:04:47,600 --> 00:04:51,520
<font color="#E5E5E5">you</font><font color="#CCCCCC"> can also go to what's called a</font>

119
00:04:49,460 --> 00:04:53,479
<font color="#CCCCCC">back-end</font><font color="#E5E5E5"> house</font><font color="#CCCCCC"> we say here is the</font>

120
00:04:51,520 --> 00:04:56,240
validated and<font color="#E5E5E5"> what's called a</font><font color="#CCCCCC"> netlist</font>

121
00:04:53,480 --> 00:04:58,040
<font color="#E5E5E5">which is just a low-level hardware</font>

122
00:04:56,240 --> 00:04:59,810
description<font color="#CCCCCC"> you say hey take this and</font>

123
00:04:58,040 --> 00:05:00,740
<font color="#E5E5E5">make this some hardware and then what</font>

124
00:04:59,810 --> 00:05:02,360
you do here<font color="#CCCCCC"> you do what's called</font>

125
00:05:00,740 --> 00:05:03,740
physical design you<font color="#E5E5E5"> lay out the little</font>

126
00:05:02,360 --> 00:05:05,330
blocks you convert everything to<font color="#E5E5E5"> these</font>

127
00:05:03,740 --> 00:05:08,060
things<font color="#CCCCCC"> call it cells which are</font><font color="#E5E5E5"> a group</font>

128
00:05:05,330 --> 00:05:09,500
of two to<font color="#E5E5E5"> eight transistors and you</font>

129
00:05:08,060 --> 00:05:11,180
connect them<font color="#E5E5E5"> together and</font><font color="#CCCCCC"> that's</font><font color="#E5E5E5"> what</font>

130
00:05:09,500 --> 00:05:13,490
the<font color="#CCCCCC"> back end house does</font><font color="#E5E5E5"> then you take</font>

131
00:05:11,180 --> 00:05:15,230
<font color="#CCCCCC">that</font><font color="#E5E5E5"> and you can see in the image</font><font color="#CCCCCC"> there</font>

132
00:05:13,490 --> 00:05:16,760
<font color="#E5E5E5">on your right you connect it together</font>

133
00:05:15,230 --> 00:05:18,650
<font color="#E5E5E5">and you have this thing</font><font color="#CCCCCC"> called</font><font color="#E5E5E5"> a mask</font>

134
00:05:16,760 --> 00:05:21,110
<font color="#CCCCCC">and you send</font><font color="#E5E5E5"> that to</font><font color="#CCCCCC"> the actual foundry</font>

135
00:05:18,650 --> 00:05:23,120
<font color="#E5E5E5">the fabrication facility and they create</font>

136
00:05:21,110 --> 00:05:25,340
it<font color="#E5E5E5"> for</font><font color="#CCCCCC"> you</font><font color="#E5E5E5"> that's called a GDS</font><font color="#CCCCCC"> - file</font>

137
00:05:23,120 --> 00:05:27,500
<font color="#CCCCCC">that's you pass it and so really we</font>

138
00:05:25,340 --> 00:05:29,270
support both of<font color="#CCCCCC"> these threat models but</font>

139
00:05:27,500 --> 00:05:31,640
the one that's<font color="#E5E5E5"> kind of highlighted in</font>

140
00:05:29,270 --> 00:05:33,830
the purple<font color="#E5E5E5"> box is the most difficult</font>

141
00:05:31,640 --> 00:05:36,590
threat model so we kind<font color="#E5E5E5"> of focus on</font><font color="#CCCCCC"> that</font>

142
00:05:33,830 --> 00:05:38,930
so<font color="#E5E5E5"> if I hand you this mask and you</font><font color="#CCCCCC"> are</font>

143
00:05:36,590 --> 00:05:44,270
malicious<font color="#E5E5E5"> what can you do to implement</font>

144
00:05:38,930 --> 00:05:46,310
<font color="#E5E5E5">this small but stealthy attack so one</font>

145
00:05:44,270 --> 00:05:49,419
conventional attack you'll see if you

146
00:05:46,310 --> 00:05:52,820
look<font color="#CCCCCC"> at kind</font><font color="#E5E5E5"> of existing mal research is</font>

147
00:05:49,420 --> 00:05:56,960
represented by this<font color="#E5E5E5"> kind of pseudo code</font>

148
00:05:52,820 --> 00:05:59,120
over<font color="#CCCCCC"> here</font><font color="#E5E5E5"> it's on every and</font><font color="#CCCCCC"> that RB</font><font color="#E5E5E5"> AC e</font>

149
00:05:56,960 --> 00:06:00,979
stands<font color="#CCCCCC"> for a rare but attacker</font>

150
00:05:59,120 --> 00:06:02,780
controllable event because we'd really

151
00:06:00,980 --> 00:06:06,440
like the attacker<font color="#E5E5E5"> to be able</font><font color="#CCCCCC"> to control</font>

152
00:06:02,780 --> 00:06:08,179
the attack<font color="#E5E5E5"> so this is called a counter</font>

153
00:06:06,440 --> 00:06:10,670
<font color="#E5E5E5">based trigger so we checked the count if</font>

154
00:06:08,180 --> 00:06:12,560
and we'll just monotonically increase

155
00:06:10,670 --> 00:06:14,300
and traditional<font color="#E5E5E5"> counter</font><font color="#CCCCCC"> based triggers</font>

156
00:06:12,560 --> 00:06:16,820
<font color="#E5E5E5">and say hey if I've reached whatever my</font>

157
00:06:14,300 --> 00:06:20,270
count<font color="#E5E5E5"> is 1 2 3</font><font color="#CCCCCC"> 4 5</font><font color="#E5E5E5"> then</font><font color="#CCCCCC"> I will deploy</font>

158
00:06:16,820 --> 00:06:23,060
<font color="#E5E5E5">the TAC</font><font color="#CCCCCC"> if not I will increase</font><font color="#E5E5E5"> my</font>

159
00:06:20,270 --> 00:06:24,229
<font color="#E5E5E5">counter in this way you know every when</font>

160
00:06:23,060 --> 00:06:26,660
you get a whole series of<font color="#CCCCCC"> events</font>

161
00:06:24,230 --> 00:06:28,160
<font color="#E5E5E5">eventually you'll deploy the attack so</font>

162
00:06:26,660 --> 00:06:30,350
what we'd like<font color="#CCCCCC"> is</font><font color="#E5E5E5"> as you can imagine</font>

163
00:06:28,160 --> 00:06:32,420
<font color="#E5E5E5">these are 32-bit numbers or some</font>

164
00:06:30,350 --> 00:06:35,030
comparisons going on here there<font color="#E5E5E5"> are some</font>

165
00:06:32,420 --> 00:06:37,340
long additions<font color="#E5E5E5"> this is actually lots of</font>

166
00:06:35,030 --> 00:06:40,010
<font color="#E5E5E5">hardware logic what we'd like</font><font color="#CCCCCC"> to do is</font>

167
00:06:37,340 --> 00:06:41,989
compress<font color="#E5E5E5"> this down so we start out with</font>

168
00:06:40,010 --> 00:06:44,780
an insight and this is where analog

169
00:06:41,990 --> 00:06:46,580
circuits come in

170
00:06:44,780 --> 00:06:49,940
<font color="#CCCCCC">paster as you can see there that symbol</font>

171
00:06:46,580 --> 00:06:52,520
is a capacitor<font color="#E5E5E5"> on the right a capacitor</font>

172
00:06:49,940 --> 00:06:55,490
really is an<font color="#CCCCCC"> analogue domain</font><font color="#E5E5E5"> a counter</font>

173
00:06:52,520 --> 00:06:57,310
and<font color="#E5E5E5"> it's accumulator so if you could</font>

174
00:06:55,490 --> 00:07:00,380
have<font color="#E5E5E5"> at</font><font color="#CCCCCC"> the high level of abstraction</font>

175
00:06:57,310 --> 00:07:02,540
<font color="#CCCCCC">the capacitor</font><font color="#E5E5E5"> connected to this signal</font>

176
00:07:00,380 --> 00:07:05,090
<font color="#E5E5E5">when</font><font color="#CCCCCC"> this signal is high the capacitor</font>

177
00:07:02,540 --> 00:07:07,520
will begin to fill up with charge<font color="#E5E5E5"> and</font>

178
00:07:05,090 --> 00:07:09,049
then<font color="#E5E5E5"> I when it's low it'll you'll</font>

179
00:07:07,520 --> 00:07:11,060
dissipate charge and when it goes high

180
00:07:09,050 --> 00:07:13,850
again it'll fill up<font color="#E5E5E5"> a charge so if we</font>

181
00:07:11,060 --> 00:07:17,660
could replace<font color="#E5E5E5"> that complex logic</font><font color="#CCCCCC"> on the</font>

182
00:07:13,850 --> 00:07:20,410
<font color="#CCCCCC">left with</font><font color="#E5E5E5"> the simple capacitor on the</font>

183
00:07:17,660 --> 00:07:23,860
right<font color="#E5E5E5"> you've now made your attack</font>

184
00:07:20,410 --> 00:07:26,419
<font color="#CCCCCC">stealthy as a concerns visual</font><font color="#E5E5E5"> inspection</font>

185
00:07:23,860 --> 00:07:28,250
so this is the ideal<font color="#E5E5E5"> this is we're still</font>

186
00:07:26,419 --> 00:07:31,520
<font color="#E5E5E5">in the abstracts</font><font color="#CCCCCC"> distraction here</font><font color="#E5E5E5"> this</font>

187
00:07:28,250 --> 00:07:32,960
is ideal of what<font color="#CCCCCC"> we'd want here so we</font>

188
00:07:31,520 --> 00:07:34,640
like some victim wire feed it to our

189
00:07:32,960 --> 00:07:38,840
<font color="#E5E5E5">trigger circuit and our trigger circuit</font>

190
00:07:34,640 --> 00:07:40,940
<font color="#E5E5E5">says</font><font color="#CCCCCC"> one</font><font color="#E5E5E5"> do attack zero</font><font color="#CCCCCC"> don't attack and</font>

191
00:07:38,840 --> 00:07:43,520
so at the<font color="#CCCCCC"> bottom you'll see here you'll</font>

192
00:07:40,940 --> 00:07:45,290
see this waveform<font color="#CCCCCC"> high high and</font><font color="#E5E5E5"> lows</font>

193
00:07:43,520 --> 00:07:48,200
kind of square wave<font color="#E5E5E5"> that's our victim</font>

194
00:07:45,290 --> 00:07:49,940
wire and so the<font color="#E5E5E5"> first phase you see here</font>

195
00:07:48,200 --> 00:07:53,810
outlined in this kind<font color="#CCCCCC"> of red dashed is</font>

196
00:07:49,940 --> 00:07:55,610
this is spurious<font color="#CCCCCC"> so capacitors are OH</font>

197
00:07:53,810 --> 00:07:57,680
unlike counters that<font color="#E5E5E5"> you saw in the</font>

198
00:07:55,610 --> 00:08:00,020
<font color="#CCCCCC">digital implementation counters are</font>

199
00:07:57,680 --> 00:08:02,650
always leaking<font color="#E5E5E5"> charge which is great</font>

200
00:08:00,020 --> 00:08:06,109
because<font color="#E5E5E5"> they forget spurious events and</font>

201
00:08:02,650 --> 00:08:08,840
so<font color="#E5E5E5"> remember we want to stay self</font><font color="#CCCCCC"> selphie</font>

202
00:08:06,110 --> 00:08:10,190
<font color="#E5E5E5">we want to hide from</font><font color="#CCCCCC"> dynamic analysis</font><font color="#E5E5E5"> so</font>

203
00:08:08,840 --> 00:08:11,960
that<font color="#E5E5E5"> means we want to stay away from</font>

204
00:08:10,190 --> 00:08:15,080
<font color="#E5E5E5">test cases we want</font><font color="#CCCCCC"> to forget test cases</font>

205
00:08:11,960 --> 00:08:16,280
<font color="#E5E5E5">that almost trigger the attack and so</font>

206
00:08:15,080 --> 00:08:17,840
capacitors give us that

207
00:08:16,280 --> 00:08:20,450
so you see here outlined in red<font color="#E5E5E5"> a</font>

208
00:08:17,840 --> 00:08:22,760
spurious attack<font color="#E5E5E5"> it</font><font color="#CCCCCC"> eventually starts to</font>

209
00:08:20,450 --> 00:08:24,890
accumulate charge but that<font color="#E5E5E5"> charge on the</font>

210
00:08:22,760 --> 00:08:27,169
capacitor never goes above this red

211
00:08:24,890 --> 00:08:29,630
threshold which<font color="#CCCCCC"> is the I'm going</font><font color="#E5E5E5"> to</font>

212
00:08:27,169 --> 00:08:31,820
attack<font color="#E5E5E5"> so if the capacitor ever goes the</font>

213
00:08:29,630 --> 00:08:32,479
voltage on<font color="#E5E5E5"> the capacitor ever goes above</font>

214
00:08:31,820 --> 00:08:34,640
<font color="#CCCCCC">that red line</font>

215
00:08:32,479 --> 00:08:36,589
it'll deploy the attack and so that

216
00:08:34,640 --> 00:08:38,630
doesn't<font color="#E5E5E5"> happen and then you see at the</font>

217
00:08:36,589 --> 00:08:40,669
<font color="#E5E5E5">end there eventually capacity capacity</font>

218
00:08:38,630 --> 00:08:42,320
dissipates charge and goes back<font color="#CCCCCC"> to</font><font color="#E5E5E5"> its</font>

219
00:08:40,669 --> 00:08:44,120
starting<font color="#E5E5E5"> space so that's great</font><font color="#CCCCCC"> this is</font>

220
00:08:42,320 --> 00:08:46,790
like a leaky bucket counter so you

221
00:08:44,120 --> 00:08:50,030
forget<font color="#CCCCCC"> all most activations</font><font color="#E5E5E5"> which is you</font>

222
00:08:46,790 --> 00:08:52,069
know prevents accidental activation so

223
00:08:50,030 --> 00:08:54,439
the next case<font color="#E5E5E5"> we'll assume we have some</font>

224
00:08:52,070 --> 00:08:56,750
<font color="#E5E5E5">the attacker deploys some software on</font>

225
00:08:54,440 --> 00:08:57,920
<font color="#E5E5E5">the system which</font><font color="#CCCCCC"> can trigger this</font>

226
00:08:56,750 --> 00:08:58,580
remember we want the attack to be

227
00:08:57,920 --> 00:09:01,430
<font color="#E5E5E5">control</font>

228
00:08:58,580 --> 00:09:03,560
<font color="#CCCCCC">so the attacker deploys this on the</font>

229
00:09:01,430 --> 00:09:07,519
system and they create these activations

230
00:09:03,560 --> 00:09:09,949
every<font color="#E5E5E5"> time the device the rare but</font>

231
00:09:07,519 --> 00:09:11,660
controllable event toggles<font color="#E5E5E5"> we add a</font>

232
00:09:09,950 --> 00:09:13,850
<font color="#E5E5E5">little bit</font><font color="#CCCCCC"> of charge this is what we</font>

233
00:09:11,660 --> 00:09:16,399
want to<font color="#CCCCCC"> implement</font><font color="#E5E5E5"> and then eventually</font>

234
00:09:13,850 --> 00:09:18,500
you<font color="#CCCCCC"> go above that</font><font color="#E5E5E5"> threshold</font><font color="#CCCCCC"> on there and</font>

235
00:09:16,399 --> 00:09:21,620
you deploy the attack<font color="#E5E5E5"> and so this is</font>

236
00:09:18,500 --> 00:09:24,019
what we call our trigger time and in the

237
00:09:21,620 --> 00:09:26,120
next<font color="#CCCCCC"> vase</font><font color="#E5E5E5"> you see</font>

238
00:09:24,019 --> 00:09:28,220
eventually<font color="#E5E5E5"> the attack stops you've been</font>

239
00:09:26,120 --> 00:09:30,910
successful<font color="#E5E5E5"> and the voltage on the</font>

240
00:09:28,220 --> 00:09:32,930
capacitor will now start<font color="#E5E5E5"> to dissipate</font>

241
00:09:30,910 --> 00:09:34,939
eventually going<font color="#E5E5E5"> underneath that green</font>

242
00:09:32,930 --> 00:09:37,519
line there<font color="#E5E5E5"> which is I'm going to release</font>

243
00:09:34,940 --> 00:09:39,140
I'm<font color="#CCCCCC"> going to stop the attack</font><font color="#E5E5E5"> so we have</font>

244
00:09:37,519 --> 00:09:41,360
an attack threshold<font color="#E5E5E5"> and a release</font>

245
00:09:39,140 --> 00:09:44,060
threshold<font color="#E5E5E5"> there's some hysteresis here</font>

246
00:09:41,360 --> 00:09:46,070
<font color="#CCCCCC">because we'd like the attack to</font><font color="#E5E5E5"> be on</font>

247
00:09:44,060 --> 00:09:47,989
for some number of<font color="#E5E5E5"> cycles so we can take</font>

248
00:09:46,070 --> 00:09:50,120
<font color="#E5E5E5">advantage</font><font color="#CCCCCC"> of</font><font color="#E5E5E5"> it</font><font color="#CCCCCC"> and</font><font color="#E5E5E5"> this is called the</font>

249
00:09:47,990 --> 00:09:52,850
retention<font color="#E5E5E5"> time so this is the ideal that</font>

250
00:09:50,120 --> 00:09:56,170
<font color="#E5E5E5">we'd like</font><font color="#CCCCCC"> to</font><font color="#E5E5E5"> have unfortunately you</font>

251
00:09:52,850 --> 00:09:59,510
can't just attach a capacitor<font color="#CCCCCC"> to this</font>

252
00:09:56,170 --> 00:10:01,189
victim wire in the design<font color="#CCCCCC"> why can't you</font>

253
00:09:59,510 --> 00:10:03,040
do<font color="#CCCCCC"> that well when it's</font><font color="#E5E5E5"> zero everything's</font>

254
00:10:01,190 --> 00:10:06,290
fine there's no charge on the capacitor

255
00:10:03,040 --> 00:10:08,089
<font color="#E5E5E5">but then as soon as you go to the high</font>

256
00:10:06,290 --> 00:10:09,649
level<font color="#E5E5E5"> and</font><font color="#CCCCCC"> for this capacitor is</font><font color="#E5E5E5"> directly</font>

257
00:10:08,089 --> 00:10:12,980
attached<font color="#E5E5E5"> you'll start to fill the</font>

258
00:10:09,649 --> 00:10:14,390
capacitor with charge quickly<font color="#E5E5E5"> now if you</font>

259
00:10:12,980 --> 00:10:17,450
have a small capacitor it'll fill

260
00:10:14,390 --> 00:10:20,270
instantaneously<font color="#CCCCCC"> and you basically</font><font color="#E5E5E5"> have</font>

261
00:10:17,450 --> 00:10:22,279
<font color="#E5E5E5">no trigger anymore your trigger gets</font>

262
00:10:20,270 --> 00:10:24,290
deployed in one clock cycle that's not

263
00:10:22,279 --> 00:10:25,459
what you would<font color="#E5E5E5"> like</font><font color="#CCCCCC"> to have happen</font><font color="#E5E5E5"> on</font>

264
00:10:24,290 --> 00:10:27,589
the<font color="#E5E5E5"> other hand you could use a large</font>

265
00:10:25,459 --> 00:10:30,229
capacitor<font color="#CCCCCC"> and if</font><font color="#E5E5E5"> used a large capacitor</font>

266
00:10:27,589 --> 00:10:31,760
that can't fill in one clock cycle<font color="#CCCCCC"> the</font>

267
00:10:30,230 --> 00:10:34,610
problem is I'll give you a multi<font color="#E5E5E5"> cycle</font>

268
00:10:31,760 --> 00:10:37,130
attack but now you're gonna have a huge

269
00:10:34,610 --> 00:10:39,020
current<font color="#E5E5E5"> as you source so let's think a</font>

270
00:10:37,130 --> 00:10:41,270
lot<font color="#E5E5E5"> of power from the voltage rail to</font>

271
00:10:39,020 --> 00:10:42,589
try to fill this very large capacitor so

272
00:10:41,270 --> 00:10:45,079
you just can't it's<font color="#E5E5E5"> not as simple as</font>

273
00:10:42,589 --> 00:10:48,260
<font color="#CCCCCC">just connecting a capacitor</font><font color="#E5E5E5"> so what we</font>

274
00:10:45,079 --> 00:10:50,569
have an insight is charge<font color="#E5E5E5"> sharing if I</font>

275
00:10:48,260 --> 00:10:53,630
have a small capacitor<font color="#E5E5E5"> and a large</font>

276
00:10:50,570 --> 00:10:55,339
capacitor if I fill up<font color="#CCCCCC"> that small</font>

277
00:10:53,630 --> 00:10:57,230
<font color="#E5E5E5">capacitor that'll happen very quickly in</font>

278
00:10:55,339 --> 00:10:58,910
a clock<font color="#E5E5E5"> cycle and it won't have this</font>

279
00:10:57,230 --> 00:11:01,940
huge current spike which is noticeable

280
00:10:58,910 --> 00:11:05,390
via<font color="#E5E5E5"> side channels but then if I connect</font>

281
00:11:01,940 --> 00:11:07,130
<font color="#E5E5E5">them together the two capacitors</font><font color="#CCCCCC"> will go</font>

282
00:11:05,390 --> 00:11:10,610
to the same voltage<font color="#E5E5E5"> and I do that by</font>

283
00:11:07,130 --> 00:11:12,080
<font color="#E5E5E5">sharing charge</font><font color="#CCCCCC"> so in this way</font><font color="#E5E5E5"> you</font><font color="#CCCCCC"> could</font>

284
00:11:10,610 --> 00:11:15,290
<font color="#E5E5E5">say you could fill up</font><font color="#CCCCCC"> that</font><font color="#E5E5E5"> small</font>

285
00:11:12,080 --> 00:11:16,820
several times and it<font color="#CCCCCC"> eventually</font><font color="#E5E5E5"> it'll</font>

286
00:11:15,290 --> 00:11:18,680
<font color="#E5E5E5">take several times</font><font color="#CCCCCC"> that filling up and</font>

287
00:11:16,820 --> 00:11:21,140
<font color="#E5E5E5">sharing charge for that larger</font>

288
00:11:18,680 --> 00:11:24,199
relatively larger capacitor to fill up

289
00:11:21,140 --> 00:11:26,210
this is what we call charge sharing so

290
00:11:24,200 --> 00:11:28,520
how this is<font color="#E5E5E5"> kind</font><font color="#CCCCCC"> of</font><font color="#E5E5E5"> this is a high</font><font color="#CCCCCC"> level</font>

291
00:11:26,210 --> 00:11:32,000
abstraction<font color="#CCCCCC"> of</font><font color="#E5E5E5"> the circuit</font><font color="#CCCCCC"> we employ two</font>

292
00:11:28,520 --> 00:11:34,189
gates<font color="#E5E5E5"> here and notice that we have that</font>

293
00:11:32,000 --> 00:11:35,600
bar means not victim wire so<font color="#E5E5E5"> it's on the</font>

294
00:11:34,190 --> 00:11:37,580
negative edge of the<font color="#E5E5E5"> signal that gate</font>

295
00:11:35,600 --> 00:11:41,240
<font color="#E5E5E5">will close and the other one is on</font>

296
00:11:37,580 --> 00:11:44,750
victim wire<font color="#CCCCCC"> so right now the victim wire</font>

297
00:11:41,240 --> 00:11:47,540
is one so basically<font color="#E5E5E5"> the SI unit which is</font>

298
00:11:44,750 --> 00:11:49,880
a small tiny capacitor<font color="#CCCCCC"> you can imagine</font>

299
00:11:47,540 --> 00:11:53,060
it's you know<font color="#E5E5E5"> one twentieth</font><font color="#CCCCCC"> the size of</font>

300
00:11:49,880 --> 00:11:54,530
<font color="#CCCCCC">C main C main is our large capacitor</font><font color="#E5E5E5"> but</font>

301
00:11:53,060 --> 00:11:56,660
that's our accumulator that's our count

302
00:11:54,530 --> 00:11:58,459
value<font color="#CCCCCC"> and right now they're connected</font>

303
00:11:56,660 --> 00:12:00,079
together<font color="#E5E5E5"> they're sharing charge but</font>

304
00:11:58,460 --> 00:12:01,490
there's no charge<font color="#E5E5E5"> to share so nothing</font>

305
00:12:00,080 --> 00:12:04,880
happens so<font color="#CCCCCC"> let's</font><font color="#E5E5E5"> go forward a little</font><font color="#CCCCCC"> bit</font>

306
00:12:01,490 --> 00:12:07,430
<font color="#E5E5E5">so</font><font color="#CCCCCC"> we go forward</font><font color="#E5E5E5"> and now the victim wire</font>

307
00:12:04,880 --> 00:12:10,070
goes down to the<font color="#E5E5E5"> zero value which opens</font>

308
00:12:07,430 --> 00:12:12,290
up<font color="#E5E5E5"> one gate and closes the gate with the</font>

309
00:12:10,070 --> 00:12:16,040
bar<font color="#CCCCCC"> over</font><font color="#E5E5E5"> the top of it this now connects</font>

310
00:12:12,290 --> 00:12:19,010
that small tiny capacitor<font color="#E5E5E5"> C unit to our</font>

311
00:12:16,040 --> 00:12:21,110
power rail which very<font color="#E5E5E5"> quickly fills up</font>

312
00:12:19,010 --> 00:12:23,420
<font color="#CCCCCC">that small capacitor and there's</font><font color="#E5E5E5"> not a</font>

313
00:12:21,110 --> 00:12:26,900
huge current<font color="#E5E5E5"> spike because that small</font>

314
00:12:23,420 --> 00:12:29,630
capacitor is small and then we'll see<font color="#CCCCCC"> at</font>

315
00:12:26,900 --> 00:12:30,829
<font color="#CCCCCC">another edge so now we go to the victim</font>

316
00:12:29,630 --> 00:12:33,290
wire goes<font color="#E5E5E5"> high again we see another</font>

317
00:12:30,830 --> 00:12:36,980
<font color="#E5E5E5">transition which opens up the not gates</font>

318
00:12:33,290 --> 00:12:39,800
<font color="#CCCCCC">and closes the positive edge gate</font><font color="#E5E5E5"> a</font>

319
00:12:36,980 --> 00:12:41,690
positive level<font color="#CCCCCC"> gate</font><font color="#E5E5E5"> now connecting the</font>

320
00:12:39,800 --> 00:12:43,310
small capacitor to the<font color="#E5E5E5"> large capacitor</font>

321
00:12:41,690 --> 00:12:45,770
<font color="#E5E5E5">and you can see over</font><font color="#CCCCCC"> there in the graph</font>

322
00:12:43,310 --> 00:12:47,930
<font color="#CCCCCC">that you know they basically share</font>

323
00:12:45,770 --> 00:12:50,300
charge they go to a<font color="#E5E5E5"> greet upon voltage</font>

324
00:12:47,930 --> 00:12:53,089
the voltage of<font color="#E5E5E5"> C unit goes way down and</font>

325
00:12:50,300 --> 00:12:58,099
the voltage of C<font color="#E5E5E5"> main goes a little bit</font>

326
00:12:53,090 --> 00:12:59,870
<font color="#E5E5E5">up so</font><font color="#CCCCCC"> if we carry this out ever you know</font>

327
00:12:58,100 --> 00:13:01,940
you get enough toggles and<font color="#E5E5E5"> the toggles</font>

328
00:12:59,870 --> 00:13:03,140
overcome leakage<font color="#E5E5E5"> there are lots of</font>

329
00:13:01,940 --> 00:13:05,090
leakages that go on and<font color="#E5E5E5"> you have to</font>

330
00:13:03,140 --> 00:13:06,920
refer to<font color="#E5E5E5"> the</font><font color="#CCCCCC"> paper</font><font color="#E5E5E5"> to see how we deal</font>

331
00:13:05,090 --> 00:13:08,960
with<font color="#E5E5E5"> all</font><font color="#CCCCCC"> of those but if you do that</font>

332
00:13:06,920 --> 00:13:11,089
<font color="#E5E5E5">fast</font><font color="#CCCCCC"> enough you get enough Tablas on the</font>

333
00:13:08,960 --> 00:13:14,570
event<font color="#E5E5E5"> you will gradually increase</font><font color="#CCCCCC"> the</font>

334
00:13:11,090 --> 00:13:16,430
voltage of<font color="#E5E5E5"> C main until the attack is</font>

335
00:13:14,570 --> 00:13:20,540
deployed it gets above<font color="#E5E5E5"> that attack</font>

336
00:13:16,430 --> 00:13:22,939
threshold so I kind of told you how we

337
00:13:20,540 --> 00:13:25,310
do the trigger<font color="#E5E5E5"> which is the main focus</font>

338
00:13:22,940 --> 00:13:27,079
of the<font color="#E5E5E5"> paper the next</font>

339
00:13:25,310 --> 00:13:29,119
we want to attach<font color="#CCCCCC"> it to some attack</font><font color="#E5E5E5"> and</font>

340
00:13:27,079 --> 00:13:30,709
it kind<font color="#E5E5E5"> of</font><font color="#CCCCCC"> that calm the go to attack in</font>

341
00:13:29,120 --> 00:13:33,139
this line<font color="#CCCCCC"> of research</font><font color="#E5E5E5"> is a</font><font color="#CCCCCC"> privilege</font>

342
00:13:30,709 --> 00:13:36,229
<font color="#CCCCCC">escalation i want to surreptitiously go</font>

343
00:13:33,139 --> 00:13:38,569
from user<font color="#E5E5E5"> mode to supervisor mode so how</font>

344
00:13:36,230 --> 00:13:40,550
we do<font color="#E5E5E5"> that is</font><font color="#CCCCCC"> actually pretty</font><font color="#E5E5E5"> simple</font>

345
00:13:38,569 --> 00:13:42,170
<font color="#CCCCCC">there is a flip flop a state holding</font>

346
00:13:40,550 --> 00:13:42,709
element and processors<font color="#CCCCCC"> that holds what</font>

347
00:13:42,170 --> 00:13:46,849
mode you're<font color="#CCCCCC"> in</font>

348
00:13:42,709 --> 00:13:49,309
and we splice<font color="#E5E5E5"> into the reset</font><font color="#CCCCCC"> line one</font>

349
00:13:46,850 --> 00:13:52,279
observation<font color="#E5E5E5"> we make is processors reset</font>

350
00:13:49,309 --> 00:13:54,170
in the most privileged mode possible and

351
00:13:52,279 --> 00:13:56,990
then they gradually<font color="#CCCCCC"> deescalate</font><font color="#E5E5E5"> privilege</font>

352
00:13:54,170 --> 00:13:59,300
as they boot<font color="#E5E5E5"> so that means the hardware</font>

353
00:13:56,990 --> 00:14:01,639
<font color="#CCCCCC">of the processor its reset level is most</font>

354
00:13:59,300 --> 00:14:03,920
privileged<font color="#E5E5E5"> so we use that insight to</font>

355
00:14:01,639 --> 00:14:06,889
basically splice<font color="#E5E5E5"> into the line there</font>

356
00:14:03,920 --> 00:14:09,620
<font color="#CCCCCC">that</font><font color="#E5E5E5"> gates and white wires and blue are</font>

357
00:14:06,889 --> 00:14:11,809
what<font color="#E5E5E5"> we add so we</font><font color="#CCCCCC"> basically when they</font>

358
00:14:09,620 --> 00:14:14,180
trigger deploys what<font color="#CCCCCC"> our</font><font color="#E5E5E5"> our</font><font color="#CCCCCC"> tack</font><font color="#E5E5E5"> is we</font>

359
00:14:11,809 --> 00:14:16,040
<font color="#E5E5E5">just reset the flip-flop that holds the</font>

360
00:14:14,180 --> 00:14:18,469
privilege<font color="#E5E5E5"> of the system which will take</font>

361
00:14:16,040 --> 00:14:21,649
<font color="#E5E5E5">us</font><font color="#CCCCCC"> to user mode from user mode to</font>

362
00:14:18,470 --> 00:14:23,720
supervisor mode<font color="#E5E5E5"> okay so this is kind of</font>

363
00:14:21,649 --> 00:14:26,089
the outline<font color="#CCCCCC"> of</font><font color="#E5E5E5"> the attack in</font><font color="#CCCCCC"> the blue</font>

364
00:14:23,720 --> 00:14:28,999
boxes<font color="#E5E5E5"> we have stuff in the digital</font>

365
00:14:26,089 --> 00:14:32,120
<font color="#CCCCCC">domain</font><font color="#E5E5E5"> and the orange box we</font><font color="#CCCCCC"> have stuff</font>

366
00:14:28,999 --> 00:14:33,829
<font color="#E5E5E5">in the analog domain so a two crosses</font>

367
00:14:32,120 --> 00:14:36,529
one of<font color="#E5E5E5"> its values is making it hard on</font>

368
00:14:33,829 --> 00:14:38,870
it<font color="#E5E5E5"> defenders is it crosses domains and</font>

369
00:14:36,529 --> 00:14:40,730
we have some victim wire we use this

370
00:14:38,870 --> 00:14:43,610
<font color="#E5E5E5">kind of charge sharing capacitor based</font>

371
00:14:40,730 --> 00:14:45,410
circuit to act as a counter<font color="#CCCCCC"> leakey but</font>

372
00:14:43,610 --> 00:14:48,379
<font color="#CCCCCC">the bucket counter</font><font color="#E5E5E5"> based trigger and</font>

373
00:14:45,410 --> 00:14:52,699
then we splice<font color="#E5E5E5"> into resets to impact the</font>

374
00:14:48,379 --> 00:14:54,500
digital domain again<font color="#CCCCCC"> we also had the</font>

375
00:14:52,699 --> 00:14:56,809
complication of<font color="#E5E5E5"> well okay you've</font>

376
00:14:54,500 --> 00:14:59,000
designed<font color="#E5E5E5"> this and we design it in a</font>

377
00:14:56,809 --> 00:15:01,969
spice simulator<font color="#E5E5E5"> but now you need to</font><font color="#CCCCCC"> add</font>

378
00:14:59,000 --> 00:15:05,029
it to<font color="#E5E5E5"> this circuit so</font><font color="#CCCCCC"> we did is we took</font>

379
00:15:01,970 --> 00:15:08,569
an open source processor and we

380
00:15:05,029 --> 00:15:10,879
implemented<font color="#CCCCCC"> it we compile it down</font><font color="#E5E5E5"> to</font>

381
00:15:08,569 --> 00:15:12,378
<font color="#E5E5E5">cells and we're left with something that</font>

382
00:15:10,879 --> 00:15:13,939
<font color="#CCCCCC">looks like</font><font color="#E5E5E5"> this and now you might</font><font color="#CCCCCC"> be</font>

383
00:15:12,379 --> 00:15:15,740
saying well how do you add this thing

384
00:15:13,939 --> 00:15:17,660
even<font color="#E5E5E5"> though it's small how do you add it</font>

385
00:15:15,740 --> 00:15:20,089
well the observation is that<font color="#E5E5E5"> even in</font>

386
00:15:17,660 --> 00:15:22,850
<font color="#E5E5E5">Intel and AMD class processors about</font>

387
00:15:20,089 --> 00:15:25,309
<font color="#CCCCCC">twenty to thirty</font><font color="#E5E5E5"> percent of the chip</font>

388
00:15:22,850 --> 00:15:26,809
area<font color="#CCCCCC"> is unused so it's actually trivial</font>

389
00:15:25,309 --> 00:15:28,910
this<font color="#E5E5E5"> so actually wasn't a hurdle for us</font>

390
00:15:26,809 --> 00:15:31,389
it's very trivial for to fit in one cell

391
00:15:28,910 --> 00:15:34,819
when most of<font color="#E5E5E5"> the area if you zoom in</font>

392
00:15:31,389 --> 00:15:37,519
enough is unused or<font color="#E5E5E5"> 20 or</font><font color="#CCCCCC"> 30 percent</font><font color="#E5E5E5"> is</font>

393
00:15:34,819 --> 00:15:38,870
unused<font color="#E5E5E5"> again there are other</font><font color="#CCCCCC"> challenges</font>

394
00:15:37,519 --> 00:15:41,090
in the paper

395
00:15:38,870 --> 00:15:43,040
we don't have time<font color="#E5E5E5"> for to address so</font>

396
00:15:41,090 --> 00:15:46,430
again we built it here<font color="#CCCCCC"> I actually</font><font color="#E5E5E5"> have</font>

397
00:15:43,040 --> 00:15:47,420
<font color="#CCCCCC">our prototype</font><font color="#E5E5E5"> here we fabricated in</font><font color="#CCCCCC"> six</font>

398
00:15:46,430 --> 00:15:49,250
<font color="#CCCCCC">to five nanometers</font>

399
00:15:47,420 --> 00:15:51,620
I would slide at the<font color="#E5E5E5"> end to give more</font>

400
00:15:49,250 --> 00:15:53,690
information<font color="#CCCCCC"> we did the oor</font><font color="#E5E5E5"> 1200</font>

401
00:15:51,620 --> 00:15:55,370
processor<font color="#E5E5E5"> because companies like arm</font>

402
00:15:53,690 --> 00:15:58,880
don't really appreciate us adding

403
00:15:55,370 --> 00:16:00,170
malicious hardware to the processors<font color="#E5E5E5"> and</font>

404
00:15:58,880 --> 00:16:02,210
you can kind of see<font color="#E5E5E5"> here notice</font><font color="#CCCCCC"> there's</font>

405
00:16:00,170 --> 00:16:06,229
several<font color="#E5E5E5"> levels of zooming in again this</font>

406
00:16:02,210 --> 00:16:09,050
is one cell in about<font color="#CCCCCC"> 50,000 cells for</font>

407
00:16:06,230 --> 00:16:10,940
this processor so a couple<font color="#E5E5E5"> of</font>

408
00:16:09,050 --> 00:16:13,760
experimental questions<font color="#E5E5E5"> the first thing</font>

409
00:16:10,940 --> 00:16:15,110
is well you know<font color="#E5E5E5"> does it work we</font>

410
00:16:13,760 --> 00:16:17,120
actually<font color="#CCCCCC"> had to</font><font color="#E5E5E5"> build it</font><font color="#CCCCCC"> because we had</font>

411
00:16:15,110 --> 00:16:18,050
a digital side<font color="#E5E5E5"> and analog side we</font>

412
00:16:17,120 --> 00:16:20,779
actually<font color="#CCCCCC"> had to connect them together</font>

413
00:16:18,050 --> 00:16:23,630
because tools don't support that<font color="#E5E5E5"> so the</font>

414
00:16:20,779 --> 00:16:25,970
first thing we did<font color="#E5E5E5"> is</font><font color="#CCCCCC"> we connected we</font>

415
00:16:23,630 --> 00:16:27,950
found out some found a wire<font color="#E5E5E5"> we use</font>

416
00:16:25,970 --> 00:16:30,440
<font color="#E5E5E5">division by</font><font color="#CCCCCC"> zero as our rare but</font>

417
00:16:27,950 --> 00:16:33,200
controllable victim wire and we made

418
00:16:30,440 --> 00:16:33,980
sure<font color="#CCCCCC"> that for all</font><font color="#E5E5E5"> of our benchmarks</font><font color="#CCCCCC"> it</font>

419
00:16:33,200 --> 00:16:35,630
wasn't

420
00:16:33,980 --> 00:16:36,980
they never did enough division by zero

421
00:16:35,630 --> 00:16:40,160
is<font color="#E5E5E5"> to activate the attack but an</font>

422
00:16:36,980 --> 00:16:41,779
attacker could load<font color="#E5E5E5"> user mode only code</font>

423
00:16:40,160 --> 00:16:43,579
that doesn't<font color="#CCCCCC"> create introspection points</font>

424
00:16:41,779 --> 00:16:47,420
to push<font color="#CCCCCC"> so you'll see</font><font color="#E5E5E5"> that red bar</font>

425
00:16:43,580 --> 00:16:49,760
represents<font color="#E5E5E5"> the bin that our wires toggle</font>

426
00:16:47,420 --> 00:16:52,819
<font color="#E5E5E5">rate is in so this</font><font color="#CCCCCC"> is a histogram</font><font color="#E5E5E5"> of why</font>

427
00:16:49,760 --> 00:16:55,880
our<font color="#E5E5E5"> toggle rates down there and that red</font>

428
00:16:52,820 --> 00:16:57,920
dash bar is our threshold<font color="#CCCCCC"> so if we can</font>

429
00:16:55,880 --> 00:17:01,250
if an attacker can in user<font color="#E5E5E5"> mode code</font>

430
00:16:57,920 --> 00:17:04,550
push the activity rate above<font color="#E5E5E5"> to the left</font>

431
00:17:01,250 --> 00:17:06,410
to the<font color="#CCCCCC"> right</font><font color="#E5E5E5"> of that dash line then they</font>

432
00:17:04,550 --> 00:17:08,839
can effectively trigger the attack<font color="#CCCCCC"> and</font>

433
00:17:06,410 --> 00:17:11,380
this attack showed that in real<font color="#CCCCCC"> Hardware</font>

434
00:17:08,839 --> 00:17:15,050
deal with all manufacturing variations

435
00:17:11,380 --> 00:17:17,750
that we could actually control control

436
00:17:15,050 --> 00:17:19,849
the attack and it wouldn't<font color="#E5E5E5"> be a attacked</font>

437
00:17:17,750 --> 00:17:21,230
in normal use case but the attacker

438
00:17:19,849 --> 00:17:25,099
could<font color="#E5E5E5"> do it using the</font><font color="#CCCCCC"> only user mode</font>

439
00:17:21,230 --> 00:17:31,480
code<font color="#E5E5E5"> and so next I have a simulation</font>

440
00:17:25,099 --> 00:17:31,480
here<font color="#E5E5E5"> oops</font>

441
00:17:32,770 --> 00:17:38,480
<font color="#E5E5E5">okay so I'll just go to</font><font color="#CCCCCC"> this one so you</font>

442
00:17:37,100 --> 00:17:40,610
might be<font color="#CCCCCC"> wondering well that</font><font color="#E5E5E5"> basically</font>

443
00:17:38,480 --> 00:17:42,350
zero<font color="#CCCCCC"> actually we chose our most division</font>

444
00:17:40,610 --> 00:17:43,909
heavy benchmark<font color="#E5E5E5"> which was something</font>

445
00:17:42,350 --> 00:17:46,340
<font color="#CCCCCC">called basic math it's from an embedded</font>

446
00:17:43,910 --> 00:17:49,520
<font color="#E5E5E5">system benchmarking and it's rate was</font>

447
00:17:46,340 --> 00:17:52,399
only<font color="#E5E5E5"> point zero zero</font><font color="#CCCCCC"> zero</font><font color="#E5E5E5"> two for the</font>

448
00:17:49,520 --> 00:17:54,800
most division heavy benchmark<font color="#E5E5E5"> and that's</font>

449
00:17:52,400 --> 00:17:57,290
<font color="#CCCCCC">where our threshold is that</font><font color="#E5E5E5"> so we're far</font>

450
00:17:54,800 --> 00:18:04,270
<font color="#E5E5E5">away from defenders being able to spot</font>

451
00:17:57,290 --> 00:18:06,530
this attack<font color="#E5E5E5"> from post fab testing</font><font color="#CCCCCC"> okay</font>

452
00:18:04,270 --> 00:18:07,910
<font color="#CCCCCC">so I given you</font><font color="#E5E5E5"> this bar and the real</font>

453
00:18:06,530 --> 00:18:11,840
<font color="#CCCCCC">question is</font><font color="#E5E5E5"> well where is this bar in</font>

454
00:18:07,910 --> 00:18:13,970
real life<font color="#CCCCCC"> this is a challenge</font><font color="#E5E5E5"> because</font><font color="#CCCCCC"> we</font>

455
00:18:11,840 --> 00:18:16,580
<font color="#CCCCCC">don't</font><font color="#E5E5E5"> expect the attacker to</font><font color="#CCCCCC"> have to</font>

456
00:18:13,970 --> 00:18:18,490
build this<font color="#CCCCCC"> system themselves to find out</font>

457
00:18:16,580 --> 00:18:21,740
where this bar is at<font color="#E5E5E5"> because that's</font>

458
00:18:18,490 --> 00:18:24,080
<font color="#CCCCCC">$70,000 $100,000</font><font color="#E5E5E5"> in our case we'd like</font>

459
00:18:21,740 --> 00:18:25,700
them to<font color="#E5E5E5"> be able to simulate it but what</font>

460
00:18:24,080 --> 00:18:30,110
they simulate needs to turn into<font color="#E5E5E5"> reality</font>

461
00:18:25,700 --> 00:18:34,220
<font color="#CCCCCC">so</font><font color="#E5E5E5"> because why is that that's important</font>

462
00:18:30,110 --> 00:18:36,740
<font color="#E5E5E5">because if the bar</font><font color="#CCCCCC"> is too far to the</font>

463
00:18:34,220 --> 00:18:39,620
<font color="#CCCCCC">right</font><font color="#E5E5E5"> you can</font><font color="#CCCCCC"> never control you can</font>

464
00:18:36,740 --> 00:18:42,590
never actually<font color="#E5E5E5"> deploy the attack and if</font>

465
00:18:39,620 --> 00:18:45,290
it's too<font color="#E5E5E5"> far to</font><font color="#CCCCCC"> the left you can it'll</font>

466
00:18:42,590 --> 00:18:47,090
attack will be trivially deployable so

467
00:18:45,290 --> 00:18:48,710
here's the result of this experiment

468
00:18:47,090 --> 00:18:51,889
<font color="#CCCCCC">you'll see there's a column</font><font color="#E5E5E5"> called</font>

469
00:18:48,710 --> 00:18:53,720
measured so we take a<font color="#E5E5E5"> 10 chip average</font>

470
00:18:51,890 --> 00:18:56,570
from what we fabricated<font color="#E5E5E5"> over there and</font>

471
00:18:53,720 --> 00:18:59,780
see<font color="#CCCCCC"> four different</font><font color="#E5E5E5"> table</font><font color="#CCCCCC"> rates of</font><font color="#E5E5E5"> our</font>

472
00:18:56,570 --> 00:19:02,780
victim wire how many cycles<font color="#E5E5E5"> it takes to</font>

473
00:18:59,780 --> 00:19:04,129
activate the attack and the next column

474
00:19:02,780 --> 00:19:06,410
next<font color="#E5E5E5"> to it is called simulated</font>

475
00:19:04,130 --> 00:19:09,680
<font color="#E5E5E5">this is what our spice simulation said</font>

476
00:19:06,410 --> 00:19:11,900
<font color="#E5E5E5">we actually</font><font color="#CCCCCC"> did the IO device is not</font><font color="#E5E5E5"> so</font>

477
00:19:09,680 --> 00:19:14,270
important but<font color="#CCCCCC"> we did</font><font color="#E5E5E5"> low power 65</font><font color="#CCCCCC"> nano</font>

478
00:19:11,900 --> 00:19:17,360
<font color="#CCCCCC">meter</font><font color="#E5E5E5"> and non</font><font color="#CCCCCC"> low power 65 nano meter</font>

479
00:19:14,270 --> 00:19:20,389
and as you can<font color="#E5E5E5"> see from here you know</font>

480
00:19:17,360 --> 00:19:22,490
we're<font color="#CCCCCC"> basically within 7.4 is really</font>

481
00:19:20,390 --> 00:19:24,290
equal<font color="#E5E5E5"> to</font><font color="#CCCCCC"> 7</font><font color="#E5E5E5"> because it's a whole</font><font color="#CCCCCC"> number</font>

482
00:19:22,490 --> 00:19:27,560
<font color="#CCCCCC">of clock cycles</font><font color="#E5E5E5"> so what this</font><font color="#CCCCCC"> means is</font>

483
00:19:24,290 --> 00:19:28,820
the attackers<font color="#E5E5E5"> can reliably simulate</font>

484
00:19:27,560 --> 00:19:31,159
their attacks they don't have to<font color="#E5E5E5"> build</font>

485
00:19:28,820 --> 00:19:34,429
out<font color="#E5E5E5"> fabricate a chip to know that their</font>

486
00:19:31,160 --> 00:19:37,910
attack will work again<font color="#E5E5E5"> the paper</font>

487
00:19:34,430 --> 00:19:40,310
contains much more<font color="#E5E5E5"> so at the high level</font>

488
00:19:37,910 --> 00:19:43,400
we<font color="#E5E5E5"> saw that a</font><font color="#CCCCCC"> two spans the analog and</font>

489
00:19:40,310 --> 00:19:45,919
<font color="#CCCCCC">digital domains a2 is controllable the</font>

490
00:19:43,400 --> 00:19:48,830
attacker can move the<font color="#E5E5E5"> table</font><font color="#CCCCCC"> rate of</font>

491
00:19:45,920 --> 00:19:50,450
their victim wire around a<font color="#CCCCCC"> 2 is stealthy</font>

492
00:19:48,830 --> 00:19:55,310
both from visual inspection<font color="#E5E5E5"> it's</font><font color="#CCCCCC"> one</font>

493
00:19:50,450 --> 00:19:56,780
<font color="#CCCCCC">cell and from testing it tests don't get</font>

494
00:19:55,310 --> 00:19:59,480
anywhere near activating it<font color="#CCCCCC"> and it's</font>

495
00:19:56,780 --> 00:20:02,050
only currently detectable by<font color="#CCCCCC"> foes post</font>

496
00:19:59,480 --> 00:20:04,310
fabrication techniques the last thing is

497
00:20:02,050 --> 00:20:05,649
we<font color="#CCCCCC"> actually</font><font color="#E5E5E5"> need</font><font color="#CCCCCC"> to focus on not just</font>

498
00:20:04,310 --> 00:20:07,450
detection but

499
00:20:05,650 --> 00:20:10,180
prevention<font color="#CCCCCC"> because we're</font><font color="#E5E5E5"> moving to where</font>

500
00:20:07,450 --> 00:20:11,830
we're<font color="#E5E5E5"> gonna have zero gate attack so you</font>

501
00:20:10,180 --> 00:20:13,090
don't try<font color="#E5E5E5"> to find a needle in</font><font color="#CCCCCC"> a</font><font color="#E5E5E5"> haystack</font>

502
00:20:11,830 --> 00:20:16,000
<font color="#E5E5E5">you need to</font><font color="#CCCCCC"> protect yourself from it</font>

503
00:20:13,090 --> 00:20:16,990
<font color="#E5E5E5">I'll leave this up</font><font color="#CCCCCC"> I don't think we have</font>

504
00:20:16,000 --> 00:20:18,670
much<font color="#CCCCCC"> time for questions</font><font color="#E5E5E5"> but I'll leave</font>

505
00:20:16,990 --> 00:20:20,560
<font color="#E5E5E5">this up if you want to find out more</font>

506
00:20:18,670 --> 00:20:23,050
information<font color="#E5E5E5"> I have a repo</font><font color="#CCCCCC"> you can find</font>

507
00:20:20,560 --> 00:20:25,210
out more about<font color="#E5E5E5"> me and my website and</font>

508
00:20:23,050 --> 00:20:39,129
here's some interesting<font color="#E5E5E5"> facts thank you</font>

509
00:20:25,210 --> 00:20:40,810
<font color="#CCCCCC">very</font><font color="#E5E5E5"> much fantastic</font><font color="#CCCCCC"> I just have a</font>

510
00:20:39,130 --> 00:20:42,730
question<font color="#E5E5E5"> about the reset so when you do</font>

511
00:20:40,810 --> 00:20:45,370
a reset<font color="#E5E5E5"> the privilege goes up but</font>

512
00:20:42,730 --> 00:20:47,230
doesn't don't a few other<font color="#E5E5E5"> things happen</font>

513
00:20:45,370 --> 00:20:49,449
like the instruction pointer jumps

514
00:20:47,230 --> 00:20:51,040
somewhere else and<font color="#E5E5E5"> and a bunch of other</font>

515
00:20:49,450 --> 00:20:53,530
<font color="#CCCCCC">things you have to be over control</font><font color="#E5E5E5"> yeah</font>

516
00:20:51,040 --> 00:20:55,690
so interesting<font color="#E5E5E5"> so in when you</font><font color="#CCCCCC"> actually</font>

517
00:20:53,530 --> 00:20:57,550
fabricate a processor what happens is

518
00:20:55,690 --> 00:21:00,190
there's a loading<font color="#E5E5E5"> that you can have for</font>

519
00:20:57,550 --> 00:21:02,560
a driver<font color="#CCCCCC"> so what you get is you have one</font>

520
00:21:00,190 --> 00:21:05,230
logical reset but that's actually<font color="#CCCCCC"> broken</font>

521
00:21:02,560 --> 00:21:07,990
apart into<font color="#E5E5E5"> a tree of resets and we just</font>

522
00:21:05,230 --> 00:21:09,820
we just splice<font color="#E5E5E5"> into the leg of the reset</font>

523
00:21:07,990 --> 00:21:11,800
that goes to<font color="#CCCCCC"> our one targeted flip-flop</font>

524
00:21:09,820 --> 00:21:18,820
yes that's the kind of like a hardware

525
00:21:11,800 --> 00:21:20,770
thing<font color="#CCCCCC"> okay</font><font color="#E5E5E5"> yes</font><font color="#CCCCCC"> sir is this on I</font>

526
00:21:18,820 --> 00:21:23,679
you didn't mention routing<font color="#E5E5E5"> you have to</font>

527
00:21:20,770 --> 00:21:27,790
route<font color="#E5E5E5"> from your arithmetic unit over</font><font color="#CCCCCC"> to</font>

528
00:21:23,680 --> 00:21:29,800
the reset is that<font color="#E5E5E5"> visible</font><font color="#CCCCCC"> so visibility</font>

529
00:21:27,790 --> 00:21:31,810
yes if you could<font color="#E5E5E5"> what's called</font><font color="#CCCCCC"> fit being</font>

530
00:21:29,800 --> 00:21:33,550
<font color="#CCCCCC">a chip you could actually see our one</font>

531
00:21:31,810 --> 00:21:35,830
gate if you knew exactly<font color="#E5E5E5"> where to look</font>

532
00:21:33,550 --> 00:21:37,450
for<font color="#E5E5E5"> although</font><font color="#CCCCCC"> it looks</font><font color="#E5E5E5"> like everything</font>

533
00:21:35,830 --> 00:21:40,210
<font color="#E5E5E5">else and then we have to connect the</font>

534
00:21:37,450 --> 00:21:41,650
<font color="#CCCCCC">wires routing wasn't a problem</font><font color="#E5E5E5"> because</font>

535
00:21:40,210 --> 00:21:44,500
we're not<font color="#E5E5E5"> this is</font><font color="#CCCCCC"> not a critical path</font>

536
00:21:41,650 --> 00:21:45,970
<font color="#E5E5E5">for us so</font><font color="#CCCCCC"> what actually we could put our</font>

537
00:21:44,500 --> 00:21:48,340
<font color="#E5E5E5">attack anywhere in</font><font color="#CCCCCC"> that space and do</font>

538
00:21:45,970 --> 00:21:50,650
long wires<font color="#E5E5E5"> and if you do a histogram</font><font color="#CCCCCC"> of</font>

539
00:21:48,340 --> 00:21:52,990
wire<font color="#CCCCCC"> lengths in the</font><font color="#E5E5E5"> design it fits right</font>

540
00:21:50,650 --> 00:21:56,260
in right<font color="#E5E5E5"> into the</font><font color="#CCCCCC"> shape you couldn't</font>

541
00:21:52,990 --> 00:21:58,870
<font color="#CCCCCC">actually it's not an outlier just a</font>

542
00:21:56,260 --> 00:22:02,290
comment<font color="#E5E5E5"> having written specialized</font>

543
00:21:58,870 --> 00:22:05,830
arithmetic routines<font color="#CCCCCC"> a benchmark is one</font>

544
00:22:02,290 --> 00:22:08,440
thing but<font color="#E5E5E5"> the combination of creative</font>

545
00:22:05,830 --> 00:22:12,270
programming<font color="#E5E5E5"> by some people and just</font>

546
00:22:08,440 --> 00:22:15,880
<font color="#CCCCCC">plain old stupid</font><font color="#E5E5E5"> errors probably would</font>

547
00:22:12,270 --> 00:22:19,840
reveal this<font color="#E5E5E5"> fairly quickly</font><font color="#CCCCCC"> in actual</font>

548
00:22:15,880 --> 00:22:21,040
practice<font color="#CCCCCC"> yeah that's</font><font color="#E5E5E5"> interesting</font><font color="#CCCCCC"> that's</font>

549
00:22:19,840 --> 00:22:23,770
<font color="#CCCCCC">actually thing one of</font><font color="#E5E5E5"> the values</font><font color="#CCCCCC"> of</font><font color="#E5E5E5"> the</font>

550
00:22:21,040 --> 00:22:26,260
capacitor is it forgets bad programming

551
00:22:23,770 --> 00:22:30,520
because the capacitors leak<font color="#E5E5E5"> so we need</font>

552
00:22:26,260 --> 00:22:32,860
<font color="#E5E5E5">like 200 instructions of the same 200</font>

553
00:22:30,520 --> 00:22:35,110
division by zeros in a row<font color="#E5E5E5"> to actually</font>

554
00:22:32,860 --> 00:22:36,939
without intercepting this without

555
00:22:35,110 --> 00:22:38,830
<font color="#CCCCCC">actually you know anything between that</font>

556
00:22:36,940 --> 00:22:40,870
<font color="#E5E5E5">if you didn't do that much it would</font>

557
00:22:38,830 --> 00:22:43,750
forget if you did then the attacker

558
00:22:40,870 --> 00:22:46,000
would need to<font color="#E5E5E5"> rebuild their</font><font color="#CCCCCC"> circuit to</font>

559
00:22:43,750 --> 00:22:47,970
push that<font color="#CCCCCC"> threshold</font><font color="#E5E5E5"> out</font><font color="#CCCCCC"> a little</font><font color="#E5E5E5"> bit to</font>

560
00:22:46,000 --> 00:22:52,170
<font color="#CCCCCC">avoid bad programming</font>

561
00:22:47,970 --> 00:22:56,850
don't underestimate<font color="#E5E5E5"> bad programming okay</font>

562
00:22:52,170 --> 00:23:03,820
thank you<font color="#E5E5E5"> just one final question</font>

563
00:22:56,850 --> 00:23:05,830
great work assume<font color="#E5E5E5"> that your attack and</font>

564
00:23:03,820 --> 00:23:09,580
<font color="#E5E5E5">it's deployed in the field</font><font color="#CCCCCC"> what are the</font>

565
00:23:05,830 --> 00:23:12,250
defenses that you recommend to the folks

566
00:23:09,580 --> 00:23:15,490
who like<font color="#CCCCCC"> to mitigate once this attack is</font>

567
00:23:12,250 --> 00:23:19,660
discovered changing the hardware<font color="#E5E5E5"> without</font>

568
00:23:15,490 --> 00:23:22,150
without so this is a post deployment

569
00:23:19,660 --> 00:23:23,440
scenario you're not<font color="#E5E5E5"> gonna be able to</font>

570
00:23:22,150 --> 00:23:24,640
<font color="#E5E5E5">it's one selling of Lots</font><font color="#CCCCCC"> you're</font><font color="#E5E5E5"> not</font>

571
00:23:23,440 --> 00:23:25,780
gonna be able to<font color="#E5E5E5"> use any side</font><font color="#CCCCCC"> channel</font>

572
00:23:24,640 --> 00:23:29,170
it's not gonna be reasonable to use side

573
00:23:25,780 --> 00:23:30,820
channels<font color="#CCCCCC"> you could right now</font><font color="#E5E5E5"> given</font><font color="#CCCCCC"> what</font>

574
00:23:29,170 --> 00:23:32,560
we presented<font color="#CCCCCC"> which called</font><font color="#E5E5E5"> FID the chip</font>

575
00:23:30,820 --> 00:23:34,120
you could<font color="#CCCCCC"> Delayer the chip</font><font color="#E5E5E5"> and image it</font>

576
00:23:32,560 --> 00:23:36,460
because you have<font color="#E5E5E5"> to know what was</font>

577
00:23:34,120 --> 00:23:38,290
produced<font color="#CCCCCC"> and you would have to basically</font>

578
00:23:36,460 --> 00:23:39,910
<font color="#E5E5E5">build up what was produced</font><font color="#CCCCCC"> and then</font>

579
00:23:38,290 --> 00:23:42,310
compare that<font color="#CCCCCC"> to what you</font><font color="#E5E5E5"> sent the</font>

580
00:23:39,910 --> 00:23:44,380
manufacturing facility so<font color="#CCCCCC"> we had to use</font>

581
00:23:42,310 --> 00:23:47,169
<font color="#CCCCCC">TSMC to manufacture this to actually</font>

582
00:23:44,380 --> 00:23:49,030
<font color="#CCCCCC">know what TMC tsmc did we would actually</font>

583
00:23:47,170 --> 00:23:51,010
<font color="#CCCCCC">have to Delayer the chip using some acid</font>

584
00:23:49,030 --> 00:23:52,780
<font color="#E5E5E5">visualize</font><font color="#CCCCCC"> it and then do a kind of</font>

585
00:23:51,010 --> 00:23:54,580
equivalence check to what is what we

586
00:23:52,780 --> 00:23:56,740
sent them what they gave<font color="#CCCCCC"> us and that's</font>

587
00:23:54,580 --> 00:23:58,810
right<font color="#E5E5E5"> now although</font><font color="#CCCCCC"> there</font><font color="#E5E5E5"> is work</font><font color="#CCCCCC"> going</font>

588
00:23:56,740 --> 00:24:01,060
on<font color="#CCCCCC"> to</font><font color="#E5E5E5"> reduce that one cell into zero</font>

589
00:23:58,810 --> 00:24:03,929
cells and I'd<font color="#E5E5E5"> like to talk about with</font>

590
00:24:01,060 --> 00:24:03,929
<font color="#CCCCCC">that with you the offline</font>

