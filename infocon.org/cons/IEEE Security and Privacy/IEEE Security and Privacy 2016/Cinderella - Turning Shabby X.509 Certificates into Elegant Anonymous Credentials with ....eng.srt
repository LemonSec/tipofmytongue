1
00:00:00,000 --> 00:00:04,440
Thank<font color="#E5E5E5"> You Jay so welcome to this talk</font>

2
00:00:03,090 --> 00:00:07,560
which is<font color="#E5E5E5"> going</font><font color="#CCCCCC"> to be one of</font><font color="#E5E5E5"> the</font><font color="#CCCCCC"> third</font>

3
00:00:04,440 --> 00:00:10,950
one and<font color="#E5E5E5"> a little bit more apply than the</font>

4
00:00:07,560 --> 00:00:12,870
other ones so<font color="#E5E5E5"> what we're doing is trying</font>

5
00:00:10,950 --> 00:00:14,700
to<font color="#E5E5E5"> turn shabby exone and certificates</font>

6
00:00:12,870 --> 00:00:16,919
into elegant and any moose<font color="#E5E5E5"> credentials</font>

7
00:00:14,700 --> 00:00:19,830
with the magic of verifiable<font color="#E5E5E5"> computation</font>

8
00:00:16,920 --> 00:00:21,990
and this is joint work<font color="#E5E5E5"> with my</font>

9
00:00:19,830 --> 00:00:25,709
colleagues Cedric<font color="#CCCCCC"> mark wolfe</font><font color="#E5E5E5"> and brian</font>

10
00:00:21,990 --> 00:00:28,740
at<font color="#E5E5E5"> microsoft research so as you probably</font>

11
00:00:25,710 --> 00:00:32,790
know the<font color="#CCCCCC"> Valentine big he is a public</font>

12
00:00:28,740 --> 00:00:34,290
infrastructure is what it's used for all

13
00:00:32,790 --> 00:00:37,800
kind of client and server authentication

14
00:00:34,290 --> 00:00:41,250
purposes since it was created almost 30

15
00:00:37,800 --> 00:00:45,480
years<font color="#E5E5E5"> ago and so most well-known example</font>

16
00:00:41,250 --> 00:00:48,300
is a https but if you look<font color="#E5E5E5"> in</font><font color="#CCCCCC"> the</font>

17
00:00:45,480 --> 00:00:49,949
details of how it works you have set a

18
00:00:48,300 --> 00:00:53,399
fruit certificate that are part of your

19
00:00:49,950 --> 00:00:56,309
browser or your operating system and the

20
00:00:53,399 --> 00:00:58,770
<font color="#CCCCCC">artists</font><font color="#E5E5E5"> to trust on chores which i use</font>

21
00:00:56,309 --> 00:01:02,419
for signing further certificates which

22
00:00:58,770 --> 00:01:04,619
does delegation of trust and ultimately

23
00:01:02,420 --> 00:01:07,590
you have unpaid certificates that are

24
00:01:04,619 --> 00:01:09,060
issued<font color="#CCCCCC"> to website and users and these</font>

25
00:01:07,590 --> 00:01:11,909
are the one that<font color="#E5E5E5"> I use for by</font>

26
00:01:09,060 --> 00:01:13,110
application<font color="#CCCCCC"> protocols for education so</font>

27
00:01:11,909 --> 00:01:15,180
if you<font color="#E5E5E5"> look at</font><font color="#CCCCCC"> the details of</font>

28
00:01:13,110 --> 00:01:19,049
certificates it's quite<font color="#E5E5E5"> an old format</font>

29
00:01:15,180 --> 00:01:21,570
and it has a bunch of extensions that

30
00:01:19,049 --> 00:01:23,729
have been<font color="#E5E5E5"> added over the years mostly to</font>

31
00:01:21,570 --> 00:01:26,880
deal with problems that happen quite

32
00:01:23,729 --> 00:01:28,710
early on with the system so the main

33
00:01:26,880 --> 00:01:30,390
fields that you care about<font color="#E5E5E5"> are the</font>

34
00:01:28,710 --> 00:01:32,309
subject information and the public key

35
00:01:30,390 --> 00:01:35,310
which<font color="#E5E5E5"> is the core contents of the</font>

36
00:01:32,310 --> 00:01:38,579
certificate<font color="#E5E5E5"> but you have a lot lot</font><font color="#CCCCCC"> of</font>

37
00:01:35,310 --> 00:01:40,560
extra information for restricting the

38
00:01:38,579 --> 00:01:43,490
purpose of the<font color="#CCCCCC"> certificate what is it</font>

39
00:01:40,560 --> 00:01:45,720
what<font color="#CCCCCC"> is it means to be used</font><font color="#E5E5E5"> for and</font>

40
00:01:43,490 --> 00:01:48,079
extensions are checking whether<font color="#CCCCCC"> it has</font>

41
00:01:45,720 --> 00:01:50,250
not been revoked and this kind<font color="#E5E5E5"> of things</font>

42
00:01:48,079 --> 00:01:52,710
so if you<font color="#E5E5E5"> look at how it's feiven an</font>

43
00:01:50,250 --> 00:01:57,619
education works in a typical setting

44
00:01:52,710 --> 00:02:00,240
which is<font color="#CCCCCC"> a little bit like HTTPS so the</font>

45
00:01:57,619 --> 00:02:02,009
you you're in<font color="#E5E5E5"> the application protocol</font>

46
00:02:00,240 --> 00:02:05,070
you are an education challenge and the

47
00:02:02,009 --> 00:02:09,209
person<font color="#CCCCCC"> who owns</font><font color="#E5E5E5"> a certificate is going</font>

48
00:02:05,070 --> 00:02:10,919
to sign<font color="#E5E5E5"> the silent most often using the</font>

49
00:02:09,209 --> 00:02:13,480
private key of his endpoint certificate

50
00:02:10,919 --> 00:02:18,010
and going to send all certificates

51
00:02:13,480 --> 00:02:20,459
along with this signature for the person

52
00:02:18,010 --> 00:02:22,959
who does a verification to check and

53
00:02:20,459 --> 00:02:26,590
it's quite common today to also use

54
00:02:22,959 --> 00:02:31,209
extra external evidence to make sure

55
00:02:26,590 --> 00:02:33,610
that this is actually a well honest

56
00:02:31,209 --> 00:02:36,340
certificate chain so typical examples

57
00:02:33,610 --> 00:02:38,440
are<font color="#CCCCCC"> ocsp for relocation and quite</font>

58
00:02:36,340 --> 00:02:40,660
popular nowadays is variations of

59
00:02:38,440 --> 00:02:42,280
certificate transparencies at<font color="#CCCCCC"> a</font>

60
00:02:40,660 --> 00:02:44,739
<font color="#CCCCCC">kazillion</font><font color="#E5E5E5"> pikia in this kind of external</font>

61
00:02:42,280 --> 00:02:47,069
evidence that are used to make sure that

62
00:02:44,739 --> 00:02:49,829
you're<font color="#CCCCCC"> using a valid certificate chain</font>

63
00:02:47,069 --> 00:02:51,760
so all of the system depends on the

64
00:02:49,829 --> 00:02:54,700
<font color="#CCCCCC">educational authorities that are</font><font color="#E5E5E5"> signing</font>

65
00:02:51,760 --> 00:02:57,700
the root certificate and there are doing

66
00:02:54,700 --> 00:02:59,500
there more or less<font color="#CCCCCC"> what is verification</font>

67
00:02:57,700 --> 00:03:01,869
policy for<font color="#E5E5E5"> these certificates boils down</font>

68
00:02:59,500 --> 00:03:04,690
to whether the field that are put by<font color="#E5E5E5"> the</font>

69
00:03:01,870 --> 00:03:06,190
certification authorities so if<font color="#E5E5E5"> we look</font>

70
00:03:04,690 --> 00:03:08,470
<font color="#E5E5E5">at the problems with expand any of</font>

71
00:03:06,190 --> 00:03:10,840
several of them but<font color="#E5E5E5"> the one that we</font>

72
00:03:08,470 --> 00:03:12,760
actually<font color="#CCCCCC"> look at in this work</font><font color="#E5E5E5"> so that</font>

73
00:03:10,840 --> 00:03:14,170
two aspects that we care about so the

74
00:03:12,760 --> 00:03:16,120
first<font color="#E5E5E5"> one is application later version</font>

75
00:03:14,170 --> 00:03:20,168
80 and it has<font color="#CCCCCC"> been an important source</font>

76
00:03:16,120 --> 00:03:21,609
of attack so it well known that you uses

77
00:03:20,169 --> 00:03:24,790
the certificates for many purposes

78
00:03:21,609 --> 00:03:29,680
including TLS but as my<font color="#CCCCCC"> muscle force</font>

79
00:03:24,790 --> 00:03:31,599
image signature wireless network

80
00:03:29,680 --> 00:03:35,049
<font color="#CCCCCC">authentication</font><font color="#E5E5E5"> code signing document</font>

81
00:03:31,599 --> 00:03:36,399
signing and the consequence of the

82
00:03:35,049 --> 00:03:37,870
devotee of application is that

83
00:03:36,400 --> 00:03:40,180
certificate verification libraries they

84
00:03:37,870 --> 00:03:42,190
have to implement in<font color="#E5E5E5"> addition to</font><font color="#CCCCCC"> the</font>

85
00:03:40,180 --> 00:03:44,919
basic validations which are checking the

86
00:03:42,190 --> 00:03:47,859
signatures in<font color="#CCCCCC"> the chain and some other</font>

87
00:03:44,919 --> 00:03:49,329
very basic<font color="#CCCCCC"> things and there's a bunch of</font>

88
00:03:47,859 --> 00:03:51,849
application-specific check that they

89
00:03:49,329 --> 00:03:54,579
have to implement and this can be

90
00:03:51,849 --> 00:03:56,888
<font color="#E5E5E5">different across application so for TLS</font>

91
00:03:54,579 --> 00:03:59,530
you may be looking at hosting validation

92
00:03:56,889 --> 00:04:01,810
which has some specific aspect<font color="#E5E5E5"> like if</font>

93
00:03:59,530 --> 00:04:04,510
you have will car in names and you have

94
00:04:01,810 --> 00:04:05,950
extensions for having more names and

95
00:04:04,510 --> 00:04:08,578
this is different<font color="#E5E5E5"> for instance in SML</font>

96
00:04:05,950 --> 00:04:11,709
unless my more use email addresses and

97
00:04:08,579 --> 00:04:14,650
as a result of that is that if you<font color="#E5E5E5"> look</font>

98
00:04:11,709 --> 00:04:16,720
at the<font color="#E5E5E5"> history of picky I</font><font color="#CCCCCC"> feelers</font><font color="#E5E5E5"> you</font>

99
00:04:14,650 --> 00:04:19,769
see that there<font color="#CCCCCC"> is</font><font color="#E5E5E5"> an immersive</font><font color="#CCCCCC"> Lehigh</font>

100
00:04:16,720 --> 00:04:22,840
number of problems<font color="#E5E5E5"> that are due to</font>

101
00:04:19,769 --> 00:04:24,580
misunderstanding of users of semantics

102
00:04:22,840 --> 00:04:26,229
of some of the security external<font color="#E5E5E5"> trends</font>

103
00:04:24,580 --> 00:04:27,020
so one of the recurring program you see

104
00:04:26,229 --> 00:04:28,039
is the basic

105
00:04:27,020 --> 00:04:31,340
constraints which means that you can

106
00:04:28,039 --> 00:04:33,860
confuse endpoint certificates with CA

107
00:04:31,340 --> 00:04:36,020
certificate and a lot of<font color="#E5E5E5"> other issues</font>

108
00:04:33,860 --> 00:04:39,020
related to the formatting and the asn.1

109
00:04:36,020 --> 00:04:40,219
formatting of the<font color="#E5E5E5"> certificate so the</font>

110
00:04:39,020 --> 00:04:42,229
other problems<font color="#E5E5E5"> that we really</font><font color="#CCCCCC"> care about</font>

111
00:04:40,220 --> 00:04:44,960
and we<font color="#E5E5E5"> think is quite important is</font>

112
00:04:42,229 --> 00:04:48,349
<font color="#E5E5E5">privacy in extravagant authentication so</font>

113
00:04:44,960 --> 00:04:49,370
this takes several forms so the most

114
00:04:48,349 --> 00:04:51,169
<font color="#E5E5E5">obvious one is from the network</font>

115
00:04:49,370 --> 00:04:53,330
<font color="#E5E5E5">perspective if you see all of the</font>

116
00:04:51,169 --> 00:04:55,789
<font color="#CCCCCC">certificate going on the network then</font>

117
00:04:53,330 --> 00:04:57,560
you'll learn not only so identity of the

118
00:04:55,789 --> 00:04:59,330
person with auntie Kate but you also get

119
00:04:57,560 --> 00:05:01,930
an undeniable proof that the person is

120
00:04:59,330 --> 00:05:03,979
authenticating in most in many cases and

121
00:05:01,930 --> 00:05:05,440
the same<font color="#E5E5E5"> problem applies for the</font>

122
00:05:03,979 --> 00:05:09,229
external evidence that you're gathering

123
00:05:05,440 --> 00:05:13,009
including or CSP and<font color="#E5E5E5"> city if you're so</font>

124
00:05:09,229 --> 00:05:15,318
yeah there have been some ways to avoid

125
00:05:13,009 --> 00:05:16,759
these issues including the fact<font color="#E5E5E5"> that</font>

126
00:05:15,319 --> 00:05:20,870
some of this evidence<font color="#CCCCCC"> is sometimes</font>

127
00:05:16,759 --> 00:05:22,669
doubled<font color="#CCCCCC"> at</font><font color="#E5E5E5"> least in some protocols with</font>

128
00:05:20,870 --> 00:05:25,460
a certificate chain but it's<font color="#E5E5E5"> not always</font>

129
00:05:22,669 --> 00:05:28,008
available and<font color="#CCCCCC"> and it's not generate so</font>

130
00:05:25,460 --> 00:05:30,340
the other thing<font color="#E5E5E5"> is that for this third</font>

131
00:05:28,009 --> 00:05:32,780
party services yeah also<font color="#CCCCCC"> learned some</font>

132
00:05:30,340 --> 00:05:36,020
privacy sensitive information when

133
00:05:32,780 --> 00:05:37,969
<font color="#CCCCCC">you're acquiring them and the one that</font>

134
00:05:36,020 --> 00:05:40,250
is the<font color="#E5E5E5"> most difficult but also</font><font color="#CCCCCC"> maybe the</font>

135
00:05:37,969 --> 00:05:42,169
<font color="#CCCCCC">most interesting is that the person that</font>

136
00:05:40,250 --> 00:05:44,750
your son you certificate to learn all<font color="#E5E5E5"> of</font>

137
00:05:42,169 --> 00:05:47,389
the contents of your certificate and we

138
00:05:44,750 --> 00:05:50,659
think<font color="#E5E5E5"> it's a problem because in many</font>

139
00:05:47,389 --> 00:05:53,779
cases<font color="#E5E5E5"> you you may have in a high trust</font>

140
00:05:50,659 --> 00:05:55,039
picky eyes you can<font color="#E5E5E5"> have a very sensitive</font>

141
00:05:53,779 --> 00:05:57,500
information that are<font color="#E5E5E5"> stored in your</font>

142
00:05:55,039 --> 00:05:59,599
certificates so typical example for that

143
00:05:57,500 --> 00:06:02,090
is there are many countries that are

144
00:05:59,599 --> 00:06:05,180
issuing ID cards and they contain

145
00:06:02,090 --> 00:06:07,130
<font color="#E5E5E5">x509certificate that of your social</font>

146
00:06:05,180 --> 00:06:09,139
<font color="#E5E5E5">security number and date of birth and</font>

147
00:06:07,130 --> 00:06:11,539
this<font color="#E5E5E5"> kind of information and they're</font>

148
00:06:09,139 --> 00:06:14,349
actually sentence<font color="#E5E5E5"> in on the network when</font>

149
00:06:11,539 --> 00:06:16,639
you are connecting to government website

150
00:06:14,349 --> 00:06:21,800
so the many deer as a man idea of

151
00:06:16,639 --> 00:06:23,509
Cinderella is that we want<font color="#CCCCCC"> to improve</font>

152
00:06:21,800 --> 00:06:25,520
the cryptographic power of the PPI

153
00:06:23,509 --> 00:06:28,310
without changing the issuance<font color="#CCCCCC"> back</font>

154
00:06:25,520 --> 00:06:29,750
practices so we are not assuming any

155
00:06:28,310 --> 00:06:32,479
change from the point of view<font color="#E5E5E5"> of the CAS</font>

156
00:06:29,750 --> 00:06:34,580
but we want<font color="#E5E5E5"> to build a system that is</font>

157
00:06:32,479 --> 00:06:37,940
privacy privacy preserving using the

158
00:06:34,580 --> 00:06:41,380
same credentials as before so the men ID

159
00:06:37,940 --> 00:06:41,380
works like<font color="#CCCCCC"> that so</font>

160
00:06:41,640 --> 00:06:46,810
we have the instead<font color="#E5E5E5"> of having</font>

161
00:06:43,960 --> 00:06:48,599
certificates validation<font color="#CCCCCC"> code that is</font>

162
00:06:46,810 --> 00:06:51,100
genetic for application we start from

163
00:06:48,600 --> 00:06:52,890
certificate validation policy which is

164
00:06:51,100 --> 00:06:55,420
<font color="#CCCCCC">something that is already specialized</font>

165
00:06:52,890 --> 00:06:58,270
not only to some application like HTTP

166
00:06:55,420 --> 00:07:01,450
but also to some set of issuers or class

167
00:06:58,270 --> 00:07:02,710
of issuers so maybe a way of<font color="#E5E5E5"> thinking</font>

168
00:07:01,450 --> 00:07:04,570
<font color="#CCCCCC">about</font><font color="#E5E5E5"> this what this class could be is</font>

169
00:07:02,710 --> 00:07:08,409
like<font color="#CCCCCC"> external validation you can treat</font>

170
00:07:04,570 --> 00:07:12,030
as a class of fishers so from that<font color="#E5E5E5"> we</font>

171
00:07:08,410 --> 00:07:15,810
use Geppetto compiler which is

172
00:07:12,030 --> 00:07:17,979
generating to two keys one is used for

173
00:07:15,810 --> 00:07:19,990
evaluating computation<font color="#E5E5E5"> into the</font>

174
00:07:17,980 --> 00:07:22,960
evaluation key and the other one is for

175
00:07:19,990 --> 00:07:25,600
verifying them so after<font color="#E5E5E5"> this initial</font>

176
00:07:22,960 --> 00:07:27,969
setup phase which<font color="#CCCCCC"> is occurring only one</font>

177
00:07:25,600 --> 00:07:30,700
time we change the way that you are

178
00:07:27,970 --> 00:07:32,140
doing experiment authentication<font color="#E5E5E5"> so you</font>

179
00:07:30,700 --> 00:07:34,420
still<font color="#CCCCCC"> have a net altercation challenge</font>

180
00:07:32,140 --> 00:07:36,580
but what is happening is that instead of

181
00:07:34,420 --> 00:07:38,350
sending your certificate chain to appear

182
00:07:36,580 --> 00:07:40,840
which is going<font color="#E5E5E5"> to run locally the</font>

183
00:07:38,350 --> 00:07:42,700
certificate validation policy you're

184
00:07:40,840 --> 00:07:45,369
actually going to<font color="#CCCCCC"> outsource the</font>

185
00:07:42,700 --> 00:07:47,920
education policy execution to the owner

186
00:07:45,370 --> 00:07:49,840
of the<font color="#E5E5E5"> certificate</font><font color="#CCCCCC"> and this lets you</font>

187
00:07:47,920 --> 00:07:52,120
control what exactly what kind of

188
00:07:49,840 --> 00:07:54,940
information you disclose in from this

189
00:07:52,120 --> 00:07:58,090
certificate so using<font color="#E5E5E5"> the evaluation key</font>

190
00:07:54,940 --> 00:07:59,950
you can<font color="#E5E5E5"> produce what is called an</font>

191
00:07:58,090 --> 00:08:03,130
argument<font color="#E5E5E5"> or six cent argument of</font>

192
00:07:59,950 --> 00:08:05,940
knowledge or sometimes<font color="#CCCCCC"> called snark just</font>

193
00:08:03,130 --> 00:08:08,170
calling solid proof and this is in

194
00:08:05,940 --> 00:08:10,240
cryptographic system we're using always

195
00:08:08,170 --> 00:08:12,700
constant size and we should actually

196
00:08:10,240 --> 00:08:14,680
quite a big game from if it compared to

197
00:08:12,700 --> 00:08:19,390
the evidence<font color="#E5E5E5"> when sent sometimes the</font>

198
00:08:14,680 --> 00:08:20,920
network so using the verification key

199
00:08:19,390 --> 00:08:23,530
the person<font color="#E5E5E5"> who is checking the</font>

200
00:08:20,920 --> 00:08:27,010
certificate policy can actually make

201
00:08:23,530 --> 00:08:29,109
sure that the proof a test that the

202
00:08:27,010 --> 00:08:33,460
verification of the<font color="#E5E5E5"> policy was done</font>

203
00:08:29,110 --> 00:08:35,050
faithfully so if<font color="#E5E5E5"> we look</font><font color="#CCCCCC"> in</font><font color="#E5E5E5"> the in the</font>

204
00:08:33,460 --> 00:08:37,780
cryptographic details of<font color="#CCCCCC"> how this works</font>

205
00:08:35,049 --> 00:08:40,150
and this realized on the Penal quick

206
00:08:37,780 --> 00:08:42,579
scheme which was presented two years<font color="#CCCCCC"> ago</font>

207
00:08:40,150 --> 00:08:44,980
and the way it works is that it

208
00:08:42,580 --> 00:08:47,080
<font color="#CCCCCC">transformed programs that have to click</font>

209
00:08:44,980 --> 00:08:50,110
kind of<font color="#CCCCCC"> inputs there are public inputs</font>

210
00:08:47,080 --> 00:08:51,910
that are provided by<font color="#CCCCCC"> the person doing</font>

211
00:08:50,110 --> 00:08:53,540
the verification and the<font color="#E5E5E5"> Pope the</font>

212
00:08:51,910 --> 00:08:55,850
private inputs are

213
00:08:53,540 --> 00:08:58,399
one that are kept private by the person

214
00:08:55,850 --> 00:08:59,930
with doing the computation and you have

215
00:08:58,399 --> 00:09:01,940
a zero knowledge property over the

216
00:08:59,930 --> 00:09:05,290
private input so you compile this

217
00:09:01,940 --> 00:09:07,850
program into an arithmetic circuit and

218
00:09:05,290 --> 00:09:11,209
this from<font color="#CCCCCC"> this circuit you generate the</font>

219
00:09:07,850 --> 00:09:15,170
<font color="#CCCCCC">two</font><font color="#E5E5E5"> evaluation and verification keys so</font>

220
00:09:11,209 --> 00:09:16,758
the important point<font color="#CCCCCC"> is that this</font>

221
00:09:15,170 --> 00:09:19,639
obviously is an advanced cryptographic

222
00:09:16,759 --> 00:09:21,680
techniques and the more complex the

223
00:09:19,639 --> 00:09:23,750
program you're compiling the largest the

224
00:09:21,680 --> 00:09:25,219
automatic circuitry is going to be so

225
00:09:23,750 --> 00:09:26,899
you have only to kind of get in this<font color="#CCCCCC"> I'd</font>

226
00:09:25,220 --> 00:09:31,149
<font color="#CCCCCC">metric circuit you can</font><font color="#E5E5E5"> only do addition</font>

227
00:09:26,899 --> 00:09:35,120
and multiplication over 250<font color="#CCCCCC"> three</font><font color="#E5E5E5"> bits</font>

228
00:09:31,149 --> 00:09:37,579
field and it's as a result very

229
00:09:35,120 --> 00:09:40,519
difficult compilation from problem if

230
00:09:37,579 --> 00:09:43,029
you want to have complex program that<font color="#CCCCCC"> I</font>

231
00:09:40,519 --> 00:09:45,019
express into small and efficient

232
00:09:43,029 --> 00:09:48,350
arithmetic circuitry that<font color="#E5E5E5"> you can</font>

233
00:09:45,019 --> 00:09:51,440
actually<font color="#E5E5E5"> use so the contribution of our</font>

234
00:09:48,350 --> 00:09:53,660
papers are several false so we have a

235
00:09:51,440 --> 00:09:55,790
compiler from high-level<font color="#E5E5E5"> validation</font>

236
00:09:53,660 --> 00:09:57,769
policy templates to Pinocchio optimized

237
00:09:55,790 --> 00:10:00,290
certificate validators so this<font color="#E5E5E5"> is</font>

238
00:09:57,769 --> 00:10:01,750
already<font color="#E5E5E5"> specialized we do not have it we</font>

239
00:10:00,290 --> 00:10:03,920
do not compile your general purpose

240
00:10:01,750 --> 00:10:05,839
certificate validation library in fact

241
00:10:03,920 --> 00:10:07,459
<font color="#E5E5E5">if</font><font color="#CCCCCC"> we try to do that it</font><font color="#E5E5E5"> would not be</font>

242
00:10:05,839 --> 00:10:11,930
practical the circuit will be way too

243
00:10:07,459 --> 00:10:13,609
large and we also provides Pinocchio

244
00:10:11,930 --> 00:10:16,279
optimized libraries for doing hashing

245
00:10:13,610 --> 00:10:18,709
and a<font color="#CCCCCC"> asn.1 formatting which is a binary</font>

246
00:10:16,279 --> 00:10:22,870
format of certificate and for checking

247
00:10:18,709 --> 00:10:26,329
rsap can see as one signatures we also

248
00:10:22,870 --> 00:10:28,940
want to so<font color="#E5E5E5"> typically in</font><font color="#CCCCCC"> the previous</font>

249
00:10:26,329 --> 00:10:31,219
works and verified computation and the

250
00:10:28,940 --> 00:10:32,750
<font color="#E5E5E5">keyword is nearly practical and we want</font>

251
00:10:31,220 --> 00:10:34,550
to push this boundary to see whether we

252
00:10:32,750 --> 00:10:36,769
can actually<font color="#CCCCCC"> have practical applications</font>

253
00:10:34,550 --> 00:10:40,130
so we<font color="#CCCCCC"> actually will do two exemplary</font>

254
00:10:36,769 --> 00:10:42,620
applications on top of our<font color="#E5E5E5"> contributions</font>

255
00:10:40,130 --> 00:10:44,930
one is a GLS authentication which

256
00:10:42,620 --> 00:10:47,720
includes a revocation checking I with a

257
00:10:44,930 --> 00:10:49,550
CSP<font color="#E5E5E5"> and we use actual certificate</font>

258
00:10:47,720 --> 00:10:53,389
templates for that and the other

259
00:10:49,550 --> 00:10:55,310
application that we present in the paper

260
00:10:53,389 --> 00:10:58,399
is<font color="#CCCCCC"> an inverting</font><font color="#E5E5E5"> scheme that is built on</font>

261
00:10:55,310 --> 00:11:02,239
top<font color="#CCCCCC"> of failures and that</font><font color="#E5E5E5"> uses a actual</font>

262
00:10:58,399 --> 00:11:04,819
<font color="#CCCCCC">template</font><font color="#E5E5E5"> from</font><font color="#CCCCCC"> Estonian ID cards so the</font>

263
00:11:02,240 --> 00:11:06,410
benefits of our approach are that the

264
00:11:04,819 --> 00:11:07,550
main<font color="#E5E5E5"> point is a main selling point is</font>

265
00:11:06,410 --> 00:11:10,010
that is compatible with

266
00:11:07,550 --> 00:11:12,740
existing<font color="#E5E5E5"> pki and with existing</font>

267
00:11:10,010 --> 00:11:14,240
credentials not<font color="#E5E5E5"> only at the former</font>

268
00:11:12,740 --> 00:11:16,130
clever but also as an interface level

269
00:11:14,240 --> 00:11:17,570
which means<font color="#E5E5E5"> that if you</font><font color="#CCCCCC"> have certificate</font>

270
00:11:16,130 --> 00:11:20,480
stored on smart cards you can actually

271
00:11:17,570 --> 00:11:22,550
<font color="#CCCCCC">use in Dell Adele for that and it is it</font>

272
00:11:20,480 --> 00:11:24,170
an insurer's uniform application of the

273
00:11:22,550 --> 00:11:25,729
validation policy which is one<font color="#CCCCCC"> of</font><font color="#E5E5E5"> the</font>

274
00:11:24,170 --> 00:11:27,829
controversial point that was about that

275
00:11:25,730 --> 00:11:30,380
before it<font color="#CCCCCC"> lands in the phone considered</font>

276
00:11:27,829 --> 00:11:32,510
paper so you have you ensure that

277
00:11:30,380 --> 00:11:34,370
everyone that uses<font color="#CCCCCC"> the evaluation key is</font>

278
00:11:32,510 --> 00:11:36,560
doing<font color="#CCCCCC"> exactly the same evaluation tracks</font>

279
00:11:34,370 --> 00:11:38,390
but at<font color="#E5E5E5"> the same time you have flexible</font>

280
00:11:36,560 --> 00:11:41,149
issuance policies because you can use

281
00:11:38,390 --> 00:11:45,260
different<font color="#E5E5E5"> cinderhella keys for different</font>

282
00:11:41,149 --> 00:11:46,910
applications so it the anonymity aspect

283
00:11:45,260 --> 00:11:48,290
is that it lets<font color="#E5E5E5"> you control exactly what</font>

284
00:11:46,910 --> 00:11:50,240
are the fields of<font color="#E5E5E5"> a certificate</font><font color="#CCCCCC"> that you</font>

285
00:11:48,290 --> 00:11:54,620
<font color="#E5E5E5">want to disclose to the</font><font color="#CCCCCC"> present winter</font>

286
00:11:50,240 --> 00:11:56,149
verification and mine or a slightly

287
00:11:54,620 --> 00:11:57,529
controversial point is that you don't

288
00:11:56,149 --> 00:12:00,230
expose the actual contents of your

289
00:11:57,529 --> 00:12:02,630
certificate which contained typically

290
00:12:00,230 --> 00:12:05,380
weaker<font color="#CCCCCC"> keys cryptographic early so on</font>

291
00:12:02,630 --> 00:12:08,240
the<font color="#CCCCCC"> downside what you have is a computer</font>

292
00:12:05,380 --> 00:12:11,329
computationally expensive scheme but

293
00:12:08,240 --> 00:12:13,610
only for<font color="#E5E5E5"> the evaluation part so the</font>

294
00:12:11,329 --> 00:12:14,660
person with<font color="#E5E5E5"> ok authenticating so I'm</font>

295
00:12:13,610 --> 00:12:18,410
going<font color="#CCCCCC"> to go back to search in the</font>

296
00:12:14,660 --> 00:12:20,089
evaluation section you<font color="#E5E5E5"> also have a new</font>

297
00:12:18,410 --> 00:12:22,339
setup phase which is<font color="#E5E5E5"> one word you lose a</font>

298
00:12:20,089 --> 00:12:24,860
key generation for<font color="#E5E5E5"> the evaluation and</font>

299
00:12:22,339 --> 00:12:28,490
verification key and it relies on the

300
00:12:24,860 --> 00:12:30,500
nuclear to graphic assumptions so we

301
00:12:28,490 --> 00:12:32,240
have a son this argument which boils

302
00:12:30,500 --> 00:12:35,600
down to the fact that if you have<font color="#E5E5E5"> a</font>

303
00:12:32,240 --> 00:12:38,720
successfully checked Cinderella proof

304
00:12:35,600 --> 00:12:41,540
using the verification keys and its

305
00:12:38,720 --> 00:12:42,980
equivalent<font color="#CCCCCC"> wedding actually</font><font color="#E5E5E5"> ran the</font>

306
00:12:41,540 --> 00:12:46,459
certificate certificate validation

307
00:12:42,980 --> 00:12:50,449
program locally using the public<font color="#E5E5E5"> and</font>

308
00:12:46,459 --> 00:12:52,310
<font color="#E5E5E5">private</font><font color="#CCCCCC"> input so going into a</font><font color="#E5E5E5"> little bit</font>

309
00:12:50,449 --> 00:12:53,560
into the details the way that we express

310
00:12:52,310 --> 00:12:58,069
<font color="#E5E5E5">high-level certificate validation</font>

311
00:12:53,560 --> 00:13:00,829
policies is through the use of Tom

312
00:12:58,070 --> 00:13:03,199
plates so these are in the sense

313
00:13:00,829 --> 00:13:06,500
skeletons of certificates where you have

314
00:13:03,199 --> 00:13:08,540
some constant fields and the one that

315
00:13:06,500 --> 00:13:09,980
<font color="#E5E5E5">are interesting as a variable fields so</font>

316
00:13:08,540 --> 00:13:11,689
the one where you have variation inside

317
00:13:09,980 --> 00:13:13,130
the templates and one of the core

318
00:13:11,690 --> 00:13:16,459
<font color="#E5E5E5">assumptions</font><font color="#CCCCCC"> that</font><font color="#E5E5E5"> we have to make for</font>

319
00:13:13,130 --> 00:13:19,220
efficiency is that we have<font color="#CCCCCC"> to have Lance</font>

320
00:13:16,459 --> 00:13:20,810
boundaries for every variable fields as

321
00:13:19,220 --> 00:13:23,990
well<font color="#CCCCCC"> as</font>

322
00:13:20,810 --> 00:13:25,670
I have a list of fields so from these

323
00:13:23,990 --> 00:13:29,240
templates we actually generates<font color="#CCCCCC"> two</font>

324
00:13:25,670 --> 00:13:31,310
output using a<font color="#E5E5E5"> Hydra compiler so one is</font>

325
00:13:29,240 --> 00:13:32,990
interested and that chief parser and

326
00:13:31,310 --> 00:13:35,060
this is the one that<font color="#E5E5E5"> is going to compute</font>

327
00:13:32,990 --> 00:13:38,150
the<font color="#E5E5E5"> private input that I use to help</font>

328
00:13:35,060 --> 00:13:42,050
with a computer with the evaluation and

329
00:13:38,150 --> 00:13:43,730
we also provide we also generate the

330
00:13:42,050 --> 00:13:46,640
severe fire which<font color="#CCCCCC"> is the one that we</font>

331
00:13:43,730 --> 00:13:49,550
send to the<font color="#CCCCCC"> Pinocchio or Geppetto</font>

332
00:13:46,640 --> 00:13:52,850
compiler and to compile into the actual

333
00:13:49,550 --> 00:13:55,250
evaluation and verification keys so if

334
00:13:52,850 --> 00:13:58,190
<font color="#E5E5E5">we look at the producer I fire here in</font>

335
00:13:55,250 --> 00:14:00,680
the small fragment<font color="#E5E5E5"> you can see</font><font color="#CCCCCC"> that</font><font color="#E5E5E5"> the</font>

336
00:13:58,190 --> 00:14:02,750
constant are going to be so we rely on

337
00:14:00,680 --> 00:14:05,359
two men primitives one for opening a

338
00:14:02,750 --> 00:14:09,440
bite and one for calling the reduction

339
00:14:05,360 --> 00:14:13,400
function and<font color="#E5E5E5"> we do add additional</font>

340
00:14:09,440 --> 00:14:18,220
weapons for adding<font color="#CCCCCC"> bites and bonded</font>

341
00:14:13,400 --> 00:14:21,290
loops for adding variable<font color="#E5E5E5"> lands</font><font color="#CCCCCC"> inputs</font>

342
00:14:18,220 --> 00:14:22,760
so the<font color="#CCCCCC"> next thing that I'm not going to</font>

343
00:14:21,290 --> 00:14:25,400
go into<font color="#E5E5E5"> the detail off is the</font>

344
00:14:22,760 --> 00:14:27,500
verification of pkgs one signature so we

345
00:14:25,400 --> 00:14:31,189
implement a small arbitrary-precision

346
00:14:27,500 --> 00:14:35,420
arithmetic library that uses the finite

347
00:14:31,190 --> 00:14:37,880
fields used<font color="#E5E5E5"> by bye Pinocchio and we</font>

348
00:14:35,420 --> 00:14:42,079
<font color="#E5E5E5">actually verify RSS signatures using</font>

349
00:14:37,880 --> 00:14:43,490
that so I'm going<font color="#CCCCCC"> to present only one of</font>

350
00:14:42,080 --> 00:14:45,620
the<font color="#CCCCCC"> two application that i mentioned at</font>

351
00:14:43,490 --> 00:14:47,630
the beginning if you want to look into

352
00:14:45,620 --> 00:14:50,690
<font color="#E5E5E5">the</font><font color="#CCCCCC"> inverting one please refer to the</font>

353
00:14:47,630 --> 00:14:52,220
paper so for TLS quiet for our tillis

354
00:14:50,690 --> 00:14:54,320
clients so<font color="#CCCCCC"> we have switched the roles so</font>

355
00:14:52,220 --> 00:14:57,560
the current<font color="#CCCCCC"> is authenticating to the</font>

356
00:14:54,320 --> 00:14:59,089
server<font color="#E5E5E5"> and we're going to generate the</font>

357
00:14:57,560 --> 00:15:02,150
validation key in the verification key

358
00:14:59,089 --> 00:15:03,790
but for efficiencies since as we will

359
00:15:02,150 --> 00:15:08,050
see later<font color="#E5E5E5"> the evaluation is quite slow</font>

360
00:15:03,790 --> 00:15:10,520
we actually<font color="#E5E5E5"> want</font><font color="#CCCCCC"> to compute offline</font>

361
00:15:08,050 --> 00:15:13,459
pseudonym certificate based<font color="#E5E5E5"> on the real</font>

362
00:15:10,520 --> 00:15:15,829
one that<font color="#CCCCCC"> you</font><font color="#E5E5E5"> want to use and we do this</font>

363
00:15:13,459 --> 00:15:17,779
<font color="#E5E5E5">operation by generating an FM all public</font>

364
00:15:15,830 --> 00:15:19,970
key for those certificates and appending

365
00:15:17,779 --> 00:15:22,189
it's a proof using the x.509 formatting

366
00:15:19,970 --> 00:15:25,190
and we can actually transmit this proof

367
00:15:22,190 --> 00:15:28,010
and user FML key for signing the key

368
00:15:25,190 --> 00:15:29,420
exchange and this lets you use

369
00:15:28,010 --> 00:15:33,689
cinderhella with no change to<font color="#CCCCCC"> the</font>

370
00:15:29,420 --> 00:15:36,780
chalice protocol so in

371
00:15:33,690 --> 00:15:40,230
of performance key aspects and key point

372
00:15:36,780 --> 00:15:42,540
<font color="#CCCCCC">really</font><font color="#E5E5E5"> that the verification time is as</font>

373
00:15:40,230 --> 00:15:45,810
fast or even sometimes slightly faster

374
00:15:42,540 --> 00:15:48,870
<font color="#CCCCCC">than the native</font><font color="#E5E5E5"> verification so this is</font>

375
00:15:45,810 --> 00:15:51,150
located localism scale and verification

376
00:15:48,870 --> 00:15:53,300
is taking about eight milliseconds which

377
00:15:51,150 --> 00:15:56,130
is comparable to native verification

378
00:15:53,300 --> 00:15:59,640
evaluation as you can see is typically

379
00:15:56,130 --> 00:16:01,770
several<font color="#E5E5E5"> minute and similarly for key</font>

380
00:15:59,640 --> 00:16:04,290
generation so these are for single

381
00:16:01,770 --> 00:16:06,930
templates but we also give you<font color="#E5E5E5"> a full</font>

382
00:16:04,290 --> 00:16:08,579
application benchmark so in this case we

383
00:16:06,930 --> 00:16:10,800
look at complete applications including

384
00:16:08,580 --> 00:16:13,380
<font color="#CCCCCC">TLS with</font><font color="#E5E5E5"> two intermediates which is</font>

385
00:16:10,800 --> 00:16:16,290
quite a general application and<font color="#CCCCCC"> ocsp as</font>

386
00:16:13,380 --> 00:16:19,560
well so it actually checks for<font color="#E5E5E5"> five</font>

387
00:16:16,290 --> 00:16:21,240
signatures and we get very large number

388
00:16:19,560 --> 00:16:22,770
<font color="#CCCCCC">of multiplication in such equity in fact</font>

389
00:16:21,240 --> 00:16:25,590
I<font color="#CCCCCC"> think it's one of</font><font color="#E5E5E5"> the largest ever</font>

390
00:16:22,770 --> 00:16:28,319
compiled but still perform on that is

391
00:16:25,590 --> 00:16:29,250
within<font color="#CCCCCC"> ten Mitch so in conclusion this</font>

392
00:16:28,320 --> 00:16:32,120
is one of<font color="#E5E5E5"> the first practical</font>

393
00:16:29,250 --> 00:16:34,680
<font color="#E5E5E5">applications of verifiable competing and</font>

394
00:16:32,120 --> 00:16:37,350
we enhance the privacy and integrity of

395
00:16:34,680 --> 00:16:39,810
<font color="#E5E5E5">Ivan an authentication without any</font>

396
00:16:37,350 --> 00:16:42,150
change<font color="#E5E5E5"> to the</font><font color="#CCCCCC"> pki and certification</font>

397
00:16:39,810 --> 00:16:46,319
authorities and we<font color="#E5E5E5"> actually provide the</font>

398
00:16:42,150 --> 00:16:48,180
prototypes for TLS and<font color="#E5E5E5"> Elias so this is</font>

399
00:16:46,320 --> 00:16:50,870
<font color="#E5E5E5">the end of my talk are we willing</font><font color="#CCCCCC"> to</font>

400
00:16:48,180 --> 00:16:50,870
take questions

401
00:16:56,790 --> 00:17:04,030
<font color="#E5E5E5">okay Brian Ford EPM</font><font color="#CCCCCC"> EPFL this is really</font>

402
00:17:01,180 --> 00:17:07,448
<font color="#E5E5E5">awesome work in a beautiful application</font>

403
00:17:04,030 --> 00:17:10,510
to of verifiable computing<font color="#E5E5E5"> I think um my</font>

404
00:17:07,449 --> 00:17:12,550
question is I'm a little concerned you

405
00:17:10,510 --> 00:17:14,260
know in practice if if this became

406
00:17:12,550 --> 00:17:17,310
really practical you know<font color="#E5E5E5"> hopefully it</font>

407
00:17:14,260 --> 00:17:20,619
will the times will go down and stuff

408
00:17:17,310 --> 00:17:25,770
I'm a little<font color="#E5E5E5"> concerned about the</font>

409
00:17:20,619 --> 00:17:28,689
implications on a<font color="#CCCCCC"> pki security and</font>

410
00:17:25,770 --> 00:17:32,320
transparency like you know say an

411
00:17:28,690 --> 00:17:36,100
attacker manages to secretly acquire our

412
00:17:32,320 --> 00:17:39,159
coerce a you know some ca's private key

413
00:17:36,100 --> 00:17:41,649
somewhere but now they only use it via

414
00:17:39,160 --> 00:17:43,720
you<font color="#E5E5E5"> know via this and they don't have to</font>

415
00:17:41,650 --> 00:17:45,910
basically disclosed to anyone that

416
00:17:43,720 --> 00:17:48,850
they're<font color="#CCCCCC"> actually you know using this</font>

417
00:17:45,910 --> 00:17:50,080
this path to manufacture any credential

418
00:17:48,850 --> 00:17:52,240
they want have you thought about this

419
00:17:50,080 --> 00:17:55,110
<font color="#E5E5E5">problem and you have can you envision</font>

420
00:17:52,240 --> 00:17:59,830
ways to address it yes of course it's

421
00:17:55,110 --> 00:18:02,560
quite an obvious concern and it's always

422
00:17:59,830 --> 00:18:04,540
<font color="#E5E5E5">a</font><font color="#CCCCCC"> trade-off when you have privacy</font>

423
00:18:02,560 --> 00:18:07,210
enhancing technologies is whether they

424
00:18:04,540 --> 00:18:09,670
actually lets you have undetectable

425
00:18:07,210 --> 00:18:13,120
attacks and in this case so there are

426
00:18:09,670 --> 00:18:15,910
several aspects so the one that is very

427
00:18:13,120 --> 00:18:18,250
important and and non-controversial is

428
00:18:15,910 --> 00:18:20,830
the step where you generate the

429
00:18:18,250 --> 00:18:23,470
evaluation and verification keys which

430
00:18:20,830 --> 00:18:25,419
is a<font color="#CCCCCC"> CA bootstrapping of the system so</font>

431
00:18:23,470 --> 00:18:26,830
for this for this step it is<font color="#E5E5E5"> extremely</font>

432
00:18:25,420 --> 00:18:29,320
important that it is done honestly

433
00:18:26,830 --> 00:18:32,320
because it relies on a trapdoor value

434
00:18:29,320 --> 00:18:33,520
value which if it is not honestly

435
00:18:32,320 --> 00:18:35,649
destroyed at<font color="#CCCCCC"> the end</font><font color="#E5E5E5"> of the key</font>

436
00:18:33,520 --> 00:18:37,480
generation lets you do<font color="#E5E5E5"> Universal</font>

437
00:18:35,650 --> 00:18:40,420
impersonation without being detectable

438
00:18:37,480 --> 00:18:42,250
at all so<font color="#E5E5E5"> I think is there some answers</font>

439
00:18:40,420 --> 00:18:44,050
this is a classical problem in the

440
00:18:42,250 --> 00:18:46,150
verifiable<font color="#E5E5E5"> computation and as a</font>

441
00:18:44,050 --> 00:18:49,300
generally admitted answer to that is

442
00:18:46,150 --> 00:18:51,850
<font color="#CCCCCC">that you can actually</font><font color="#E5E5E5"> distribute this</font>

443
00:18:49,300 --> 00:18:54,490
key generation phase so for this one

444
00:18:51,850 --> 00:18:57,100
there is<font color="#E5E5E5"> some answer there was a problem</font>

445
00:18:54,490 --> 00:18:59,650
that you have<font color="#E5E5E5"> is that you no longer have</font>

446
00:18:57,100 --> 00:19:02,290
any visibility of the certificate<font color="#E5E5E5"> that</font>

447
00:18:59,650 --> 00:19:05,320
are used and this is seems to be in

448
00:19:02,290 --> 00:19:07,629
contradiction to the approach of<font color="#CCCCCC"> ARP</font>

449
00:19:05,320 --> 00:19:10,810
<font color="#CCCCCC">client</font><font color="#E5E5E5"> certificate transparency</font>

450
00:19:07,630 --> 00:19:11,940
and for this<font color="#E5E5E5"> other problem if we could</font>

451
00:19:10,810 --> 00:19:14,740
argue<font color="#CCCCCC"> that it's not completely</font>

452
00:19:11,940 --> 00:19:16,450
contradictory understand that what you

453
00:19:14,740 --> 00:19:18,070
care about is not being<font color="#E5E5E5"> identified on</font>

454
00:19:16,450 --> 00:19:20,050
<font color="#CCCCCC">the given connection but you are</font>

455
00:19:18,070 --> 00:19:21,790
<font color="#CCCCCC">actually willing to</font><font color="#E5E5E5"> put your certificate</font>

456
00:19:20,050 --> 00:19:23,950
<font color="#E5E5E5">you know maybe in a very large database</font>

457
00:19:21,790 --> 00:19:27,190
that someone is managing someone

458
00:19:23,950 --> 00:19:29,560
<font color="#E5E5E5">trustworthy and you can actually check a</font>

459
00:19:27,190 --> 00:19:32,590
certificate transparency proof inside

460
00:19:29,560 --> 00:19:35,379
Cinderella and do that as part of the

461
00:19:32,590 --> 00:19:44,709
<font color="#CCCCCC">certificate validation policy so this is</font>

462
00:19:35,380 --> 00:19:48,340
actually<font color="#E5E5E5"> possible to do thanks riad</font>

463
00:19:44,710 --> 00:19:50,440
Wahby<font color="#CCCCCC"> Stanford so I'm wondering how big</font>

464
00:19:48,340 --> 00:19:52,330
is the proving key that<font color="#E5E5E5"> the server needs</font>

465
00:19:50,440 --> 00:19:54,700
to<font color="#E5E5E5"> hold on to in order to generate these</font>

466
00:19:52,330 --> 00:19:56,350
proofs yes excellent question so I in my

467
00:19:54,700 --> 00:19:58,540
evaluation I only had time to present

468
00:19:56,350 --> 00:20:00,719
the timing aspect but the memory aspect

469
00:19:58,540 --> 00:20:03,340
is quite significant as well so

470
00:20:00,720 --> 00:20:05,050
verification keys are quite small few

471
00:20:03,340 --> 00:20:06,689
kilobytes so in Newark larger than good

472
00:20:05,050 --> 00:20:10,510
<font color="#E5E5E5">certificates but on the other hand</font>

473
00:20:06,690 --> 00:20:12,760
evaluation keys are at this point up to

474
00:20:10,510 --> 00:20:14,470
1gb bytes large for the<font color="#E5E5E5"> very complex</font>

475
00:20:12,760 --> 00:20:16,270
policies so yes definitely there is a

476
00:20:14,470 --> 00:20:18,370
logistical problem of distributing

477
00:20:16,270 --> 00:20:20,530
evaluation keys right so does that mean

478
00:20:18,370 --> 00:20:22,360
that the web server needs for each

479
00:20:20,530 --> 00:20:24,460
policy it wants to produce a proof for

480
00:20:22,360 --> 00:20:27,689
needs one of these 1 gigabyte keys yes

481
00:20:24,460 --> 00:20:27,690
<font color="#CCCCCC">ok thank you</font>

