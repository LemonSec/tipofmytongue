1
00:00:03,420 --> 00:00:08,588
[Music]

2
00:00:05,170 --> 00:00:11,389
so this is my synthesizer I wanted to

3
00:00:08,589 --> 00:00:15,289
learn about modular synthesizer so I

4
00:00:11,389 --> 00:00:17,360
built one the the colorful blinky light

5
00:00:15,289 --> 00:00:20,180
in the middle is as a volunteer that I

6
00:00:17,360 --> 00:00:23,990
got added to it today but it's a great

7
00:00:20,180 --> 00:00:25,340
one the scope down here at the bottom is

8
00:00:23,990 --> 00:00:28,490
for debug and really doesn't have a

9
00:00:25,340 --> 00:00:30,589
whole lot to do with it but the blinking

10
00:00:28,490 --> 00:00:32,930
lights and the chips up here and the

11
00:00:30,589 --> 00:00:44,060
rows of knobs those are those are the

12
00:00:32,930 --> 00:00:48,230
important margins you can come up later

13
00:00:44,060 --> 00:00:51,970
in Oh Louie would you please pass out

14
00:00:48,230 --> 00:00:51,970
the NDA's and get everyone to sign

15
00:01:00,850 --> 00:01:08,060
there's a 18 tiny 85 right there I love

16
00:01:05,659 --> 00:01:10,609
those chips they're like a little over

17
00:01:08,060 --> 00:01:12,859
dollar they're in a dip package so they

18
00:01:10,609 --> 00:01:17,030
easy to handle easy to solder they fit

19
00:01:12,859 --> 00:01:19,429
into a breadboard and each unit on this

20
00:01:17,030 --> 00:01:23,240
modular synthesizer is one of these

21
00:01:19,429 --> 00:01:24,979
chips a resistor on each of the two

22
00:01:23,240 --> 00:01:27,350
outputs there's a digital output that

23
00:01:24,979 --> 00:01:29,420
goes to the led there's an analog output

24
00:01:27,350 --> 00:01:32,419
that goes through the resistor to that

25
00:01:29,420 --> 00:01:34,549
capacitor to to smooth it out there's a

26
00:01:32,420 --> 00:01:39,549
two analog inputs here that are coming

27
00:01:34,549 --> 00:01:43,810
in on pins 2 & 3 from other chips and

28
00:01:39,549 --> 00:01:46,450
there's a knob that comes in on

29
00:01:43,810 --> 00:01:48,100
in number seven here which is the wire

30
00:01:46,450 --> 00:01:51,250
that you see on the other side of the

31
00:01:48,100 --> 00:01:54,158
LEDs this is coming from the knob so

32
00:01:51,250 --> 00:02:14,650
that's the basic structure and I'm gonna

33
00:01:54,159 --> 00:02:21,430
back up now and the C ctrl + + that's

34
00:02:14,650 --> 00:02:24,850
about right so modular synthesizers were

35
00:02:21,430 --> 00:02:26,980
kind of invented you know and I don't

36
00:02:24,850 --> 00:02:29,230
know exactly when but by the 60s the

37
00:02:26,980 --> 00:02:33,130
Moog synthesizer was a thing was being

38
00:02:29,230 --> 00:02:35,429
used by by bands I heard on the radio

39
00:02:33,130 --> 00:02:37,989
today someone was paying tribute to

40
00:02:35,430 --> 00:02:41,680
tangerine dream and to show Michelle's

41
00:02:37,989 --> 00:02:43,060
yard for early synthesizer stuff and

42
00:02:41,680 --> 00:02:48,970
they're still around their stuff steel

43
00:02:43,060 --> 00:02:51,250
rules the idea of modular is that is

44
00:02:48,970 --> 00:02:54,310
composed of lots of modules instead of

45
00:02:51,250 --> 00:02:57,519
being all wired together in one unit

46
00:02:54,310 --> 00:02:59,170
that just works it's got all these holes

47
00:02:57,519 --> 00:03:01,329
and you have to put plugs inside the

48
00:02:59,170 --> 00:03:04,720
holes and you get to choose which

49
00:03:01,329 --> 00:03:06,930
modules you put in it and some of the

50
00:03:04,720 --> 00:03:10,540
real basic ones I've listed here a

51
00:03:06,930 --> 00:03:13,090
voltage controlled oscillator is a unit

52
00:03:10,540 --> 00:03:16,120
that has a voltage going in and a sound

53
00:03:13,090 --> 00:03:18,489
comes out and the higher the voltage the

54
00:03:16,120 --> 00:03:22,019
higher the pitch of the sound and it's

55
00:03:18,489 --> 00:03:25,900
usually logarithmic with a rule that um

56
00:03:22,019 --> 00:03:27,940
there's one volt per octave so if you're

57
00:03:25,900 --> 00:03:30,579
putting in two volts and you hear a

58
00:03:27,940 --> 00:03:32,920
certain pitch come out if you raise it

59
00:03:30,579 --> 00:03:35,200
one volt to three volts you know that

60
00:03:32,920 --> 00:03:38,890
the pitch is gonna double and that it'll

61
00:03:35,200 --> 00:03:41,649
be one octave higher low-frequency

62
00:03:38,890 --> 00:03:44,649
oscillator as far as I know is just like

63
00:03:41,650 --> 00:03:46,329
a VCO but it puts out lower frequencies

64
00:03:44,650 --> 00:03:48,549
or at least that's what my version of it

65
00:03:46,329 --> 00:03:49,060
does like I said I'm new to all this so

66
00:03:48,549 --> 00:03:52,150
anybody

67
00:03:49,060 --> 00:03:55,690
correct me I've got a sample in a hole

68
00:03:52,150 --> 00:03:57,760
part that on some condition it samples

69
00:03:55,690 --> 00:04:00,400
the input voltage and holds that voltage

70
00:03:57,760 --> 00:04:02,590
on the output line until it takes

71
00:04:00,400 --> 00:04:04,930
another sample there's two of them on

72
00:04:02,590 --> 00:04:08,349
here one is gated and one is periodic

73
00:04:04,930 --> 00:04:09,970
the periodic automatically has a period

74
00:04:08,349 --> 00:04:13,119
or you can turn the knob and change the

75
00:04:09,970 --> 00:04:16,450
period for how often it samples the

76
00:04:13,120 --> 00:04:19,060
gated one takes a basically a digitally

77
00:04:16,450 --> 00:04:21,279
but if it's above some threshold then

78
00:04:19,060 --> 00:04:23,550
it's taking samples and when it drops

79
00:04:21,279 --> 00:04:26,650
below that threshold again it's holding

80
00:04:23,550 --> 00:04:28,450
voltage controlled filter this is the

81
00:04:26,650 --> 00:04:30,940
hardest one on what I'm doing because

82
00:04:28,450 --> 00:04:33,159
you have to do a convolution and that's

83
00:04:30,940 --> 00:04:35,530
a lot of mathematics to be run inside of

84
00:04:33,160 --> 00:04:37,080
a tight loop for a little processor that

85
00:04:35,530 --> 00:04:39,400
doesn't even have a multiply instruction

86
00:04:37,080 --> 00:04:42,190
so that was a little challenging but

87
00:04:39,400 --> 00:04:43,840
I've gotta I've got a version composure

88
00:04:42,190 --> 00:04:45,910
to control amplifier I've been having

89
00:04:43,840 --> 00:04:48,580
problems with my implementation of that

90
00:04:45,910 --> 00:04:51,940
and I'm trying to debug it right now but

91
00:04:48,580 --> 00:04:58,900
uh how much it amplifies an input signal

92
00:04:51,940 --> 00:05:04,530
depends on another signal coming in so

93
00:04:58,900 --> 00:05:07,380
on my board the little CPUs here our

94
00:05:04,530 --> 00:05:09,340
digital chips are like normal

95
00:05:07,380 --> 00:05:12,340
microcontrollers you program they're

96
00:05:09,340 --> 00:05:13,780
running machine code but the inputs and

97
00:05:12,340 --> 00:05:16,030
the outputs that come through all the

98
00:05:13,780 --> 00:05:18,580
patch wires that are going sticking up

99
00:05:16,030 --> 00:05:23,229
those are all analog signals just like

100
00:05:18,580 --> 00:05:26,469
on a real analog synthesizer they would

101
00:05:23,229 --> 00:05:29,409
be analog signals and what are those

102
00:05:26,470 --> 00:05:33,130
signals I've listed a few types one is

103
00:05:29,410 --> 00:05:34,690
just audio where that's the the kind

104
00:05:33,130 --> 00:05:36,130
that you run it into a speaker and you

105
00:05:34,690 --> 00:05:39,280
can hear it

106
00:05:36,130 --> 00:05:43,090
there's frequency levels which I

107
00:05:39,280 --> 00:05:44,030
mentioned before the one volt per octave

108
00:05:43,090 --> 00:05:45,679
rule

109
00:05:44,030 --> 00:05:47,750
and I observed that oh my and then

110
00:05:45,680 --> 00:05:49,970
there's other levels like how much to

111
00:05:47,750 --> 00:05:55,390
amplify or attenuate something on a

112
00:05:49,970 --> 00:05:59,180
voltage controlled amplifier gates are

113
00:05:55,390 --> 00:06:01,700
what the synthesizer people call a

114
00:05:59,180 --> 00:06:03,800
signal which is used as a digital signal

115
00:06:01,700 --> 00:06:06,289
it's considered to be their high or low

116
00:06:03,800 --> 00:06:10,640
or sometimes it's a switch that's open

117
00:06:06,290 --> 00:06:13,220
or closed and then there's this rule

118
00:06:10,640 --> 00:06:15,200
called patch anywhere and this is part

119
00:06:13,220 --> 00:06:16,960
of where the fun comes in you can

120
00:06:15,200 --> 00:06:23,270
connect anything to anything you want

121
00:06:16,960 --> 00:06:25,159
and you end up sometimes makes no noise

122
00:06:23,270 --> 00:06:26,810
at all sometimes it makes really

123
00:06:25,160 --> 00:06:28,580
interesting noises that no one's ever

124
00:06:26,810 --> 00:06:30,280
heard before because you're being

125
00:06:28,580 --> 00:06:33,590
creative and you're doing new things and

126
00:06:30,280 --> 00:06:35,919
on my design as long as you're observing

127
00:06:33,590 --> 00:06:38,090
the things on the chips that are

128
00:06:35,919 --> 00:06:39,950
declared to be the inputs and the

129
00:06:38,090 --> 00:06:42,830
outputs you can connect those any way

130
00:06:39,950 --> 00:06:45,080
you want to there are other signals like

131
00:06:42,830 --> 00:06:49,880
ground and +5 but you don't want to

132
00:06:45,080 --> 00:06:55,310
connect to each other so within reason I

133
00:06:49,880 --> 00:06:59,800
observed the patch anywhere rule and as

134
00:06:55,310 --> 00:07:03,200
I already told you I love the 18 tiny 85

135
00:06:59,800 --> 00:07:05,120
they are not the latest thing they're

136
00:07:03,200 --> 00:07:07,909
not the greatest thing but they're a

137
00:07:05,120 --> 00:07:10,729
little over a dollar they're an eight

138
00:07:07,910 --> 00:07:14,120
pin dip really easy to use they're

139
00:07:10,729 --> 00:07:16,900
robust earlier today I had one plugged

140
00:07:14,120 --> 00:07:19,370
in backwards it got a little hot but

141
00:07:16,900 --> 00:07:22,549
still work when I turned it around the

142
00:07:19,370 --> 00:07:24,500
correct way you know that's a great

143
00:07:22,550 --> 00:07:26,510
thing that you don't have to I don't

144
00:07:24,500 --> 00:07:29,720
never worry also about you know like

145
00:07:26,510 --> 00:07:31,490
wrapping myself in aluminum foil and

146
00:07:29,720 --> 00:07:33,710
connecting myself to all the grounds

147
00:07:31,490 --> 00:07:36,650
around and stuff like that I just pick

148
00:07:33,710 --> 00:07:40,489
them up and use them they are the kid

149
00:07:36,650 --> 00:07:44,030
brother of the 80 mega chips that are

150
00:07:40,490 --> 00:07:44,950
very popular because of arduino z' the

151
00:07:44,030 --> 00:07:48,039
i/o functions

152
00:07:44,950 --> 00:07:51,940
similar usually subsets of arduino the

153
00:07:48,040 --> 00:07:56,680
same ide in software it ends up your

154
00:07:51,940 --> 00:07:59,020
running g+ + give a C++ compiler so

155
00:07:56,680 --> 00:08:02,380
you've got a modern c++ that you can

156
00:07:59,020 --> 00:08:05,640
write in the outputs can source or sink

157
00:08:02,380 --> 00:08:08,020
enough current to power an LED and

158
00:08:05,640 --> 00:08:09,640
there's a neat little programmer this

159
00:08:08,020 --> 00:08:13,620
red thing here that plugs into the USB

160
00:08:09,640 --> 00:08:15,940
port of a linux and mac or windows in

161
00:08:13,620 --> 00:08:19,900
order to program and you can see i've

162
00:08:15,940 --> 00:08:22,450
got it a chip sitting in it so the

163
00:08:19,900 --> 00:08:25,299
features of the 18 tiny 85 that i'm

164
00:08:22,450 --> 00:08:28,289
using i'm using a 16 megahertz internal

165
00:08:25,300 --> 00:08:31,960
clock i'm using the analog to digital

166
00:08:28,290 --> 00:08:37,990
converter there's four possible input

167
00:08:31,960 --> 00:08:41,319
pins i'm using three of them taking just

168
00:08:37,990 --> 00:08:45,430
over 38,000 samples per second with

169
00:08:41,320 --> 00:08:46,750
8-bit accuracy you going if you with a

170
00:08:45,430 --> 00:08:48,969
little slower you can get tim good

171
00:08:46,750 --> 00:08:53,860
accuracy but my whole system is kind of

172
00:08:48,970 --> 00:08:56,260
8-bit i named two inputs a and B and

173
00:08:53,860 --> 00:08:59,680
then there's a knob and I call that

174
00:08:56,260 --> 00:09:01,960
input K and this is kind of important to

175
00:08:59,680 --> 00:09:06,729
understand the constraints of both what

176
00:09:01,960 --> 00:09:09,610
I've got I sample a every other time so

177
00:09:06,730 --> 00:09:12,310
the the digital analog hardware is

178
00:09:09,610 --> 00:09:15,430
shared between these different inputs

179
00:09:12,310 --> 00:09:17,439
and so I have to I have to take turns so

180
00:09:15,430 --> 00:09:20,380
I sample a every other time so it's

181
00:09:17,440 --> 00:09:23,350
sampled a full 19 thousand three hundred

182
00:09:20,380 --> 00:09:27,580
twenty times per second with a Nyquist

183
00:09:23,350 --> 00:09:29,830
frequency around 9600 Hertz so the the

184
00:09:27,580 --> 00:09:30,630
most the the highest frequencies I try

185
00:09:29,830 --> 00:09:33,120
to output

186
00:09:30,630 --> 00:09:35,820
eight thousand Hertz eight thousand nine

187
00:09:33,120 --> 00:09:39,450
thousand one in the other timeslot I

188
00:09:35,820 --> 00:09:43,530
usually sampled the B but one time out

189
00:09:39,450 --> 00:09:47,100
of 256 I've sampled like knob K instead

190
00:09:43,530 --> 00:09:49,380
that it's up sampling K 75 times a

191
00:09:47,100 --> 00:09:53,010
second which is plenty for sampling a

192
00:09:49,380 --> 00:09:57,660
knob and it only skips a beat every now

193
00:09:53,010 --> 00:10:00,390
and then on sampling to be input now for

194
00:09:57,660 --> 00:10:04,260
analog output we have pulse width

195
00:10:00,390 --> 00:10:08,490
modulation instead of a real analog

196
00:10:04,260 --> 00:10:10,319
output and there's a possible to have

197
00:10:08,490 --> 00:10:14,520
three of them running at once I only use

198
00:10:10,320 --> 00:10:17,250
one it output short pulses at 250

199
00:10:14,520 --> 00:10:19,620
kilohertz and it varies the width or the

200
00:10:17,250 --> 00:10:21,900
duty cycle of those pulses so that

201
00:10:19,620 --> 00:10:24,300
either is high most of the time are low

202
00:10:21,900 --> 00:10:26,490
most of the time or 5050 and that

203
00:10:24,300 --> 00:10:28,770
simulates an analog output I ran it

204
00:10:26,490 --> 00:10:32,010
through a 200 ohm resistor and then I

205
00:10:28,770 --> 00:10:35,699
have a point 1 micro farad capacitor to

206
00:10:32,010 --> 00:10:40,050
the +5 power rail if you multiply the

207
00:10:35,700 --> 00:10:42,690
200 times 1 micro you end up finding

208
00:10:40,050 --> 00:10:45,150
it's equivalent to about 50 kilohertz

209
00:10:42,690 --> 00:10:48,690
for the time constant and thats

210
00:10:45,150 --> 00:10:50,730
logarithmically midway between the 250

211
00:10:48,690 --> 00:10:53,790
kilo volts pulses that I want to get rid

212
00:10:50,730 --> 00:10:56,520
of and my Nyquist frequency around 10k

213
00:10:53,790 --> 00:10:58,740
that I want to keep so it it functions

214
00:10:56,520 --> 00:10:59,880
as a low-pass filter now you don't

215
00:10:58,740 --> 00:11:02,060
really need to do that if you're running

216
00:10:59,880 --> 00:11:05,370
straight into headphones or a speaker

217
00:11:02,060 --> 00:11:07,949
but if an analog output is being used as

218
00:11:05,370 --> 00:11:09,780
an analog input into another unit you

219
00:11:07,950 --> 00:11:13,290
don't want it to see the pulses you want

220
00:11:09,780 --> 00:11:16,380
it to see an actual analog so it's

221
00:11:13,290 --> 00:11:19,110
necessary to filter it and anything on

222
00:11:16,380 --> 00:11:24,450
the chip can be a digital input or

223
00:11:19,110 --> 00:11:27,210
output and I put an LED for an output

224
00:11:24,450 --> 00:11:29,190
and that LED you can actually take it

225
00:11:27,210 --> 00:11:31,620
and use it as if it was an analog

226
00:11:29,190 --> 00:11:35,040
you as well running it into something

227
00:11:31,620 --> 00:11:37,170
else now I've got a short interlude on

228
00:11:35,040 --> 00:11:38,880
debugging when you're using these chips

229
00:11:37,170 --> 00:11:41,370
you don't have a printf statement you

230
00:11:38,880 --> 00:11:43,230
don't have a console how do you know if

231
00:11:41,370 --> 00:11:47,610
the chip does nothing at all which

232
00:11:43,230 --> 00:11:49,830
nothing it's doing so I wrote two

233
00:11:47,610 --> 00:11:52,020
routines the the second one fault is the

234
00:11:49,830 --> 00:11:55,290
simplest it stops all the interrupts and

235
00:11:52,020 --> 00:11:56,910
it produces a flashing LED doing a

236
00:11:55,290 --> 00:11:59,880
number of pulses that you can figure out

237
00:11:56,910 --> 00:12:01,980
oh this is fault 3 this is fault 5 kind

238
00:11:59,880 --> 00:12:04,650
of like when your PC doesn't boot you

239
00:12:01,980 --> 00:12:07,800
have to look at the flashing or the

240
00:12:04,650 --> 00:12:10,170
beeping turn to count but the other one

241
00:12:07,800 --> 00:12:13,410
I invented mock toll which is like Morse

242
00:12:10,170 --> 00:12:15,329
plus octal and I can help put a pipe

243
00:12:13,410 --> 00:12:16,920
with it and I can output a bite while

244
00:12:15,330 --> 00:12:18,600
it's still running while it's doing

245
00:12:16,920 --> 00:12:23,910
everything else while the interrupts are

246
00:12:18,600 --> 00:12:28,680
flowing and so the example I give here

247
00:12:23,910 --> 00:12:30,510
is a 2 output in octal 2 to 2 it does a

248
00:12:28,680 --> 00:12:34,620
long and a short pulse

249
00:12:30,510 --> 00:12:37,380
in fact by flashing the LED did I did 2

250
00:12:34,620 --> 00:12:40,350
dot it so the shortest the 0 the longest

251
00:12:37,380 --> 00:12:42,689
one and since it's a group of 2 and then

252
00:12:40,350 --> 00:12:46,020
3 and then 3 when it repeats that you

253
00:12:42,690 --> 00:12:49,680
know when you see the two that that's

254
00:12:46,020 --> 00:12:53,010
what at the beginning of it that was fun

255
00:12:49,680 --> 00:12:57,180
and someone said well why don't you wire

256
00:12:53,010 --> 00:12:59,160
up an rs-232 output on one of the pins

257
00:12:57,180 --> 00:13:08,310
and read it off to a console and my

258
00:12:59,160 --> 00:13:13,620
answer is I'm a ham not a DCE or a DTE I

259
00:13:08,310 --> 00:13:15,500
think a DC data communications what do

260
00:13:13,620 --> 00:13:23,490
they stand for

261
00:13:15,500 --> 00:13:27,420
yeah okay so part of our rules is that I

262
00:13:23,490 --> 00:13:31,980
have a standard module and I had a

263
00:13:27,420 --> 00:13:33,170
picture of it here let's go - a couple

264
00:13:31,980 --> 00:13:38,250
times

265
00:13:33,170 --> 00:13:40,079
I'm not bread boy that tree are as a

266
00:13:38,250 --> 00:13:42,690
voltage controlled oscillator to

267
00:13:40,080 --> 00:13:45,270
generate triangle waves yes

268
00:13:42,690 --> 00:13:47,730
you know I label them all with a with a

269
00:13:45,270 --> 00:13:50,970
three or four letter thing because the

270
00:13:47,730 --> 00:13:53,430
only thing different in each cell is how

271
00:13:50,970 --> 00:13:57,450
I programmed the chip otherwise every

272
00:13:53,430 --> 00:13:59,219
cell has got a resistor and an LED for

273
00:13:57,450 --> 00:14:03,030
the digital output a resistor and a

274
00:13:59,220 --> 00:14:06,330
capacitor for the analog output the knob

275
00:14:03,030 --> 00:14:10,110
coming in over here and space for to see

276
00:14:06,330 --> 00:14:12,930
must come in here the unused pins pin

277
00:14:10,110 --> 00:14:15,570
one is reset it is possible to do stuff

278
00:14:12,930 --> 00:14:18,870
with it but if you're not careful you

279
00:14:15,570 --> 00:14:23,340
you reset the chip pin four is for

280
00:14:18,870 --> 00:14:26,760
ground and in eight is the +5 volts and

281
00:14:23,340 --> 00:14:28,230
so this cell is repeated all the way

282
00:14:26,760 --> 00:14:31,260
down and that's kind of a constraint

283
00:14:28,230 --> 00:14:32,760
that I live under and you know people

284
00:14:31,260 --> 00:14:34,860
say well why don't you do this and why

285
00:14:32,760 --> 00:14:36,990
don't you do that and the answer is

286
00:14:34,860 --> 00:14:41,700
often well I kind of chose my

287
00:14:36,990 --> 00:14:45,600
constraints and this is the way that the

288
00:14:41,700 --> 00:14:53,810
game is played so see here I write that

289
00:14:45,600 --> 00:14:58,770
the ship has five I should have happened

290
00:14:53,810 --> 00:15:01,709
there we go okay has five useful i/o

291
00:14:58,770 --> 00:15:04,800
pins so I have three inputs and two

292
00:15:01,710 --> 00:15:07,170
outputs and you can see a and B coming

293
00:15:04,800 --> 00:15:10,589
in the knob coming in off of the

294
00:15:07,170 --> 00:15:13,290
potentiometer the outputs are named L

295
00:15:10,590 --> 00:15:20,910
and F where L goes to the LED and F is

296
00:15:13,290 --> 00:15:22,189
my analog function output and he are a

297
00:15:20,910 --> 00:15:24,600
repeat those name

298
00:15:22,190 --> 00:15:26,279
if there's an analog if there's an audio

299
00:15:24,600 --> 00:15:29,070
in but it comes in on a if there's a

300
00:15:26,279 --> 00:15:31,829
control input it comes in on B and then

301
00:15:29,070 --> 00:15:35,160
there's some chips where you have to

302
00:15:31,829 --> 00:15:40,769
make up a different rule K is for the

303
00:15:35,160 --> 00:15:44,240
knob of F is analog L is digital and the

304
00:15:40,769 --> 00:15:50,670
demo I was playing at the beginning

305
00:15:44,240 --> 00:15:53,430
looks something like this I have three

306
00:15:50,670 --> 00:15:55,050
low frequency oscillators and they're in

307
00:15:53,430 --> 00:15:56,939
a ring the output of this is the input

308
00:15:55,050 --> 00:15:58,680
to that the up of that and the input of

309
00:15:56,940 --> 00:16:00,990
this loops back around it goes back in

310
00:15:58,680 --> 00:16:04,229
so that's a nonlinear function those are

311
00:16:00,990 --> 00:16:06,180
either sawtooth or triangle wave vcos

312
00:16:04,230 --> 00:16:08,820
and so it ends up making a kind of a

313
00:16:06,180 --> 00:16:11,430
chaotic loop and so they kind of random

314
00:16:08,820 --> 00:16:13,760
what voltages are there at any time and

315
00:16:11,430 --> 00:16:16,709
then the periodic hole picks a random

316
00:16:13,760 --> 00:16:17,250
sample out of there and holds it puts it

317
00:16:16,709 --> 00:16:19,949
into votes

318
00:16:17,250 --> 00:16:24,060
controlled oscillator and then it

319
00:16:19,950 --> 00:16:27,230
finally goes into an echo chip and

320
00:16:24,060 --> 00:16:27,229
that's what we were here before

321
00:16:28,740 --> 00:16:35,990
[Music]

322
00:16:32,170 --> 00:16:40,550
yeah I have a random number chip for

323
00:16:35,990 --> 00:16:44,990
white noise it uses a alleged rc4 crypto

324
00:16:40,550 --> 00:16:46,699
algorithm to it yeah I actually used the

325
00:16:44,990 --> 00:16:49,070
code straight out of the anonymous

326
00:16:46,700 --> 00:16:52,010
remailers when it was a first released

327
00:16:49,070 --> 00:16:55,130
from the cyberpunk mailing list

328
00:16:52,010 --> 00:16:55,130
[Music]

329
00:16:57,280 --> 00:17:03,339
and the comedy of the echo lets you hear

330
00:17:00,580 --> 00:17:07,780
the old tone for a while after the new

331
00:17:03,340 --> 00:17:10,209
tune comes in and the hardest code has

332
00:17:07,780 --> 00:17:13,420
gone into my library is the I called it

333
00:17:10,209 --> 00:17:17,829
jerboa which is like a jumping rat that

334
00:17:13,420 --> 00:17:20,829
thinks it's a kangaroo in jerboa dot h

335
00:17:17,829 --> 00:17:23,319
I've got all the classes and so when you

336
00:17:20,829 --> 00:17:26,198
write your modules all you need is the

337
00:17:23,319 --> 00:17:31,750
inputs and the ways of outputting

338
00:17:26,199 --> 00:17:36,330
things and here is actual code for

339
00:17:31,750 --> 00:17:41,880
producing a sawtooth wave if there's a

340
00:17:36,330 --> 00:17:45,879
phase variable which is 16 bits and some

341
00:17:41,880 --> 00:17:48,340
the a input the B input and the knob to

342
00:17:45,880 --> 00:17:53,020
come up with a value which is somewhere

343
00:17:48,340 --> 00:17:56,439
from 0 to 3 times 256 because those are

344
00:17:53,020 --> 00:17:59,260
those are bytes I look up in a table

345
00:17:56,440 --> 00:18:02,260
that where I'm pre computed how much to

346
00:17:59,260 --> 00:18:05,230
increment the face by if that is the

347
00:18:02,260 --> 00:18:07,420
voltage coming in and then output the

348
00:18:05,230 --> 00:18:09,900
high byte of the phase as analogue and I

349
00:18:07,420 --> 00:18:14,350
output the high bit of the phase as the

350
00:18:09,900 --> 00:18:16,690
digital and most of my modules are

351
00:18:14,350 --> 00:18:18,459
really just that short and that simple

352
00:18:16,690 --> 00:18:21,460
one they kind of have to be because you

353
00:18:18,460 --> 00:18:24,750
can't do that much math inside the loop

354
00:18:21,460 --> 00:18:24,750
are you raising a hand

355
00:18:26,810 --> 00:18:30,409
[Music]

356
00:18:31,549 --> 00:18:37,879
it's kind of random because it's those

357
00:18:35,289 --> 00:18:41,390
three low frequency oscillators in a

358
00:18:37,880 --> 00:18:43,610
chaotic ring and the the periodic sample

359
00:18:41,390 --> 00:18:45,919
is making whatever the voltage coming

360
00:18:43,610 --> 00:18:49,129
out of one of those is at the moment and

361
00:18:45,919 --> 00:18:50,570
so that's the tone that you get and then

362
00:18:49,130 --> 00:18:52,760
it picks another tone and then another

363
00:18:50,570 --> 00:18:56,299
tone and the echo kind of bleeds them

364
00:18:52,760 --> 00:18:59,480
together in time so I think at this

365
00:18:56,299 --> 00:19:02,360
point I'm going to stop the floral talk

366
00:18:59,480 --> 00:19:03,769
and say come up here and look at it and

367
00:19:02,360 --> 00:19:06,529
I'm going to pull all these wires out

368
00:19:03,769 --> 00:19:08,029
and we'll start to build another patch a

369
00:19:06,529 --> 00:19:10,309
bit at a time if you want to here with

370
00:19:08,029 --> 00:19:30,230
the module sound like otherwise you're

371
00:19:10,309 --> 00:19:32,720
you dismissed no I mean a virtual 15

372
00:19:30,230 --> 00:19:39,769
volts each of these is like zero to 5 0

373
00:19:32,720 --> 00:19:44,870
to 5 and 0 to 5 yeah that's right

374
00:19:39,769 --> 00:19:47,990
and so if it's a 1 volt per octave this

375
00:19:44,870 --> 00:19:50,000
is capable of spanning 15 octaves and

376
00:19:47,990 --> 00:19:52,460
you've never seen a keyboard with 15

377
00:19:50,000 --> 00:19:58,940
octaves but it runs from 8,000 Hertz

378
00:19:52,460 --> 00:20:01,340
down to 0.1 Hertz and by if I want high

379
00:19:58,940 --> 00:20:05,720
frequencies say depending on this signal

380
00:20:01,340 --> 00:20:09,189
I'll send both of these to +5 volts and

381
00:20:05,720 --> 00:20:12,230
we'll get high numbers but if I won't

382
00:20:09,190 --> 00:20:15,289
really really love things then I'll sing

383
00:20:12,230 --> 00:20:16,880
these two to zero and will vary that way

384
00:20:15,289 --> 00:20:20,139
and we'll get the loop and we'll have a

385
00:20:16,880 --> 00:20:23,899
super low frequency oscillator that way

386
00:20:20,139 --> 00:20:26,000
that way I make one chip behave as a

387
00:20:23,899 --> 00:20:27,830
voltage controlled oscillator is a low

388
00:20:26,000 --> 00:20:28,330
frequency oscillator as a super low

389
00:20:27,830 --> 00:20:32,740
frequency

390
00:20:28,330 --> 00:20:36,220
the oscillator alright you have learned

391
00:20:32,740 --> 00:20:38,529
something every time I talk to you

392
00:20:36,220 --> 00:20:40,210
alright anyway come on up I'm gonna pull

393
00:20:38,529 --> 00:20:41,919
all the patch cables out and I'm gonna

394
00:20:40,210 --> 00:20:43,179
make those individual pieces make noise

395
00:20:41,919 --> 00:20:46,140
if you want to learn something about

396
00:20:43,179 --> 00:20:46,140
synthesizers

