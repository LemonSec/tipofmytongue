1
00:00:04,609 --> 00:00:10,379
hello everyone good morning like thank

2
00:00:08,429 --> 00:00:12,120
you everybody for being here for me it's

3
00:00:10,380 --> 00:00:14,910
really a holler like it's my third time

4
00:00:12,120 --> 00:00:16,890
in Russia and every time I come like I

5
00:00:14,910 --> 00:00:18,570
meet like brilliant researchers it's

6
00:00:16,890 --> 00:00:21,449
very motivating I think this is one of

7
00:00:18,570 --> 00:00:28,980
the most active communities I ever saw I

8
00:00:21,449 --> 00:00:30,359
really appreciate that so today I'm here

9
00:00:28,980 --> 00:00:32,549
like to talk a little bit about like

10
00:00:30,359 --> 00:00:34,800
security research some of the challenges

11
00:00:32,549 --> 00:00:36,750
that I see some of the trends that I

12
00:00:34,800 --> 00:00:39,328
believe are like happening right now and

13
00:00:36,750 --> 00:00:41,550
some of like the problems that we have

14
00:00:39,329 --> 00:00:43,710
with mitigation development with like

15
00:00:41,550 --> 00:00:46,309
sharing learnings and with bringing like

16
00:00:43,710 --> 00:00:48,690
more and more of the community together

17
00:00:46,309 --> 00:00:51,269
just a quick disclaimer even though I do

18
00:00:48,690 --> 00:00:54,480
work for Intel I am basically sharing my

19
00:00:51,270 --> 00:00:56,370
opinions and my ideas obviously I try to

20
00:00:54,480 --> 00:00:57,538
bring those ideas also to the company

21
00:00:56,370 --> 00:00:59,879
but that doesn't necessarily mean

22
00:00:57,539 --> 00:01:03,239
anybody on the company agrees with them

23
00:00:59,879 --> 00:01:06,000
I do have like some some phrases that in

24
00:01:03,239 --> 00:01:08,280
my opinion really define like what

25
00:01:06,000 --> 00:01:09,600
hacking is about so one of them one of

26
00:01:08,280 --> 00:01:12,170
them is like really I really believe

27
00:01:09,600 --> 00:01:15,089
hacking is this to an art and as an art

28
00:01:12,170 --> 00:01:16,860
essentially we have poetic license so I

29
00:01:15,090 --> 00:01:19,049
will make a lot of uses of

30
00:01:16,860 --> 00:01:20,759
generalizations I don't mean to offend

31
00:01:19,049 --> 00:01:23,040
anybody if you feel that you were a

32
00:01:20,759 --> 00:01:24,450
victim of a generalization know that I

33
00:01:23,040 --> 00:01:26,970
understand there are a lot of exceptions

34
00:01:24,450 --> 00:01:29,640
but I still trying to talk about like

35
00:01:26,970 --> 00:01:32,548
the mass and the whole community instead

36
00:01:29,640 --> 00:01:34,350
of like a specific cases I also do not

37
00:01:32,549 --> 00:01:37,170
like I really believe that hacking is

38
00:01:34,350 --> 00:01:39,390
all above understanding like as more as

39
00:01:37,170 --> 00:01:41,790
you know about something as more as you

40
00:01:39,390 --> 00:01:44,009
can modify that something as more as you

41
00:01:41,790 --> 00:01:45,329
can explore that something as more as

42
00:01:44,009 --> 00:01:47,369
you can use that something for other

43
00:01:45,329 --> 00:01:49,798
purpose and that's what hacking is all

44
00:01:47,369 --> 00:01:52,020
about so every time that I try to say

45
00:01:49,799 --> 00:01:54,119
hey this is we're gonna hack something

46
00:01:52,020 --> 00:01:56,189
it's basically hey how do we learn more

47
00:01:54,119 --> 00:02:00,060
about that something how we explained

48
00:01:56,189 --> 00:02:01,798
the reasons on that on that field the

49
00:02:00,060 --> 00:02:04,259
objective here is not really to try to

50
00:02:01,799 --> 00:02:06,060
teach anyone right I really believe many

51
00:02:04,259 --> 00:02:08,068
researchers in the audience are much

52
00:02:06,060 --> 00:02:09,628
more experienced than me and probably

53
00:02:08,068 --> 00:02:11,458
the like would have liked a lot should

54
00:02:09,628 --> 00:02:13,040
teach me and I really appreciate that

55
00:02:11,459 --> 00:02:15,140
exchange I'm just

56
00:02:13,040 --> 00:02:16,969
basically trying to give like some ways

57
00:02:15,140 --> 00:02:19,040
of like rationalize above like

58
00:02:16,969 --> 00:02:21,590
mitigations a mitigation development and

59
00:02:19,040 --> 00:02:24,798
some of the challenges we face in this

60
00:02:21,590 --> 00:02:26,329
field hopefully people will like some of

61
00:02:24,799 --> 00:02:28,340
those ideas and we've used them in

62
00:02:26,329 --> 00:02:30,079
conversations and we've used them in

63
00:02:28,340 --> 00:02:32,629
discussions and we'll bring that to

64
00:02:30,079 --> 00:02:34,340
companies and universities and they're

65
00:02:32,629 --> 00:02:36,530
like even if you don't agree at least

66
00:02:34,340 --> 00:02:38,329
there is a point for arguing right so I

67
00:02:36,530 --> 00:02:41,030
like the idea of having things so weak

68
00:02:38,329 --> 00:02:42,799
that we can talk about but if I really

69
00:02:41,030 --> 00:02:45,260
need to define the objectives of this

70
00:02:42,799 --> 00:02:47,900
talk with only one image I would

71
00:02:45,260 --> 00:02:50,358
basically use like the god mode from

72
00:02:47,900 --> 00:02:53,209
doom I don't know if anybody here is

73
00:02:50,359 --> 00:02:55,040
like like remember the game but as

74
00:02:53,209 --> 00:02:57,260
someone who never been good at playing

75
00:02:55,040 --> 00:02:58,760
games I always try to hack them and

76
00:02:57,260 --> 00:03:00,768
basically find it unlike other

77
00:02:58,760 --> 00:03:03,078
mechanisms that I could abuse so I could

78
00:03:00,769 --> 00:03:05,659
win right and the god mode is like the

79
00:03:03,079 --> 00:03:08,000
purse the perfect example of how

80
00:03:05,659 --> 00:03:10,099
researchers many time feels right

81
00:03:08,000 --> 00:03:12,260
researchers are like analyzing something

82
00:03:10,099 --> 00:03:13,790
they write in an exploit they find a

83
00:03:12,260 --> 00:03:15,739
vulnerability and they feel that they

84
00:03:13,790 --> 00:03:17,750
are invincible right they feel that they

85
00:03:15,739 --> 00:03:20,000
are the best and these martyrs asses in

86
00:03:17,750 --> 00:03:22,909
the world and I am like that as well

87
00:03:20,000 --> 00:03:25,280
okay every time that an exploit works

88
00:03:22,909 --> 00:03:27,290
you have that thrill right that's what

89
00:03:25,280 --> 00:03:29,479
keeps us moving then when we start to

90
00:03:27,290 --> 00:03:31,429
the next time you you know you will

91
00:03:29,479 --> 00:03:34,340
spend like mom's trying to exploit

92
00:03:31,430 --> 00:03:36,799
something but it's still the thrill when

93
00:03:34,340 --> 00:03:39,409
you manage to do it it's too big we are

94
00:03:36,799 --> 00:03:41,449
addicted to do that right but this is

95
00:03:39,409 --> 00:03:43,909
also a problem because many times when

96
00:03:41,449 --> 00:03:45,889
we're discussing or achievements we fail

97
00:03:43,909 --> 00:03:47,599
to talk above like the state of the art

98
00:03:45,889 --> 00:03:49,970
we failure to talk about the

99
00:03:47,599 --> 00:03:52,040
improvements that exist in an area all

100
00:03:49,970 --> 00:03:53,840
that other challenges that are coming

101
00:03:52,040 --> 00:03:56,239
and all the other scenarios that maybe

102
00:03:53,840 --> 00:03:58,519
we did not need to consider for the

103
00:03:56,239 --> 00:04:00,560
specific case we were exploiting so I

104
00:03:58,519 --> 00:04:03,049
think like every researcher is a little

105
00:04:00,560 --> 00:04:05,000
bit of a victim of the the god mode at

106
00:04:03,049 --> 00:04:06,590
the same time it's interesting because

107
00:04:05,000 --> 00:04:08,900
when researchers are developing

108
00:04:06,590 --> 00:04:11,120
mitigations they actually have the

109
00:04:08,900 --> 00:04:13,159
opposite of the god mode they really

110
00:04:11,120 --> 00:04:14,989
believe the attackers are idiots right

111
00:04:13,159 --> 00:04:17,298
because it's it's funny because their

112
00:04:14,989 --> 00:04:19,070
mitigation is always work they raise the

113
00:04:17,298 --> 00:04:21,440
bar they create like something that is

114
00:04:19,070 --> 00:04:23,240
impenetrable somehow always have the

115
00:04:21,440 --> 00:04:25,340
advantages over everything else that was

116
00:04:23,240 --> 00:04:26,480
created in the world and this is

117
00:04:25,340 --> 00:04:29,690
actually what is create

118
00:04:26,480 --> 00:04:31,610
a huge disbalance right in one side do

119
00:04:29,690 --> 00:04:33,560
like a when we actually exploiting we

120
00:04:31,610 --> 00:04:35,750
always go and we say that we can do

121
00:04:33,560 --> 00:04:37,280
whatever but when we actually write in

122
00:04:35,750 --> 00:04:39,170
the mitigation we always assume the

123
00:04:37,280 --> 00:04:41,210
attacker came to do that much and the

124
00:04:39,170 --> 00:04:43,430
attacker is actually stupid no wonder

125
00:04:41,210 --> 00:04:45,380
why again and again the mitigations are

126
00:04:43,430 --> 00:04:47,480
failing and then like I like this

127
00:04:45,380 --> 00:04:48,980
sentence by Alberto that basically says

128
00:04:47,480 --> 00:04:51,950
that the amount of energy that is

129
00:04:48,980 --> 00:04:54,790
necessary to refute abuse it is really a

130
00:04:51,950 --> 00:04:56,510
magnitude bigger than to create it

131
00:04:54,790 --> 00:04:59,390
essentially that means that there is a

132
00:04:56,510 --> 00:05:01,250
lot of noise every time you go to a

133
00:04:59,390 --> 00:05:02,570
conference every time or you are in a

134
00:05:01,250 --> 00:05:04,490
company every time you were in a

135
00:05:02,570 --> 00:05:06,530
university and there are discussions

136
00:05:04,490 --> 00:05:09,080
around mitigations discussions around

137
00:05:06,530 --> 00:05:11,539
security there's a lot of people giving

138
00:05:09,080 --> 00:05:13,430
a lot of opinions and it's very hard to

139
00:05:11,540 --> 00:05:16,100
differentiate which opinions matter and

140
00:05:13,430 --> 00:05:18,290
are based in science in fact and which

141
00:05:16,100 --> 00:05:20,690
opinions don't necessarily matter and

142
00:05:18,290 --> 00:05:23,360
are just like exaggerations yeah we'll

143
00:05:20,690 --> 00:05:25,760
try to offer in this talk a way for us

144
00:05:23,360 --> 00:05:29,900
to rationalize above that hopefully it

145
00:05:25,760 --> 00:05:31,490
will be easy and simple I like to say

146
00:05:29,900 --> 00:05:33,830
that they don't like other people also

147
00:05:31,490 --> 00:05:36,050
agree with that so for example however

148
00:05:33,830 --> 00:05:38,210
flake in in in one of his talks in in

149
00:05:36,050 --> 00:05:41,600
Oxford like he basically shared the

150
00:05:38,210 --> 00:05:44,690
mitigator right it raises the bar until

151
00:05:41,600 --> 00:05:46,700
no exploits can be seen and basically

152
00:05:44,690 --> 00:05:48,110
the rioters it shows the same feeling

153
00:05:46,700 --> 00:05:50,780
right like people keeps talking about

154
00:05:48,110 --> 00:05:52,700
raising the bar insecurity without

155
00:05:50,780 --> 00:05:54,859
giving any metrics of what really

156
00:05:52,700 --> 00:05:56,690
raising the bar means how do you really

157
00:05:54,860 --> 00:05:58,910
evaluate that something is an

158
00:05:56,690 --> 00:06:02,000
improvement versus that something is

159
00:05:58,910 --> 00:06:03,500
just added complexity so this is this is

160
00:06:02,000 --> 00:06:05,840
a big challenge and I think like many

161
00:06:03,500 --> 00:06:08,690
people were seeing this as a problem in

162
00:06:05,840 --> 00:06:10,369
our field when I give a talk I like to

163
00:06:08,690 --> 00:06:12,230
start with like hey the points that I

164
00:06:10,370 --> 00:06:14,300
hope that everybody remembers from this

165
00:06:12,230 --> 00:06:16,130
talk and I will have like three points

166
00:06:14,300 --> 00:06:18,500
and and that's only three points that if

167
00:06:16,130 --> 00:06:21,200
you get out of here today from this talk

168
00:06:18,500 --> 00:06:23,210
and remember them I will be happy I will

169
00:06:21,200 --> 00:06:25,340
actually use the entire e presentation

170
00:06:23,210 --> 00:06:27,469
to basically reinforce eyes those three

171
00:06:25,340 --> 00:06:29,780
points but they are only three points

172
00:06:27,470 --> 00:06:31,760
really so one of them is basically we

173
00:06:29,780 --> 00:06:33,849
know that threat modeling is mature

174
00:06:31,760 --> 00:06:36,740
right we know that the like are they

175
00:06:33,850 --> 00:06:39,020
engineering process of creating secure

176
00:06:36,740 --> 00:06:39,440
software is is fairly old

177
00:06:39,020 --> 00:06:41,419
it

178
00:06:39,440 --> 00:06:43,969
fairly mature and well understood I'm

179
00:06:41,420 --> 00:06:46,370
not saying it's effective okay it's just

180
00:06:43,970 --> 00:06:48,200
material company's interiors have like

181
00:06:46,370 --> 00:06:51,590
references that they can follow to

182
00:06:48,200 --> 00:06:54,740
engineer secure a program software

183
00:06:51,590 --> 00:06:56,299
hardware or secure systems that doesn't

184
00:06:54,740 --> 00:06:57,830
mean again that it works that doesn't

185
00:06:56,300 --> 00:07:00,380
mean that all the companies are doing it

186
00:06:57,830 --> 00:07:02,930
with quality but the process does exist

187
00:07:00,380 --> 00:07:04,550
right and it's fairly mature but we

188
00:07:02,930 --> 00:07:06,320
don't have exactly the same mature

189
00:07:04,550 --> 00:07:08,540
process when we're basically talking

190
00:07:06,320 --> 00:07:11,950
about engineering mitigations and here

191
00:07:08,540 --> 00:07:14,960
I'm using mitigations to talk about

192
00:07:11,950 --> 00:07:16,580
defense mechanisms that prevent entire

193
00:07:14,960 --> 00:07:19,159
classes of vulnerabilities from being

194
00:07:16,580 --> 00:07:21,020
exploitable or that prevents unknown

195
00:07:19,160 --> 00:07:23,690
vulnerabilities from being exploitable

196
00:07:21,020 --> 00:07:25,549
I'm not talking about the like fixes

197
00:07:23,690 --> 00:07:27,260
that are individual for one instance of

198
00:07:25,550 --> 00:07:30,710
a vulnerability that's the way that I'm

199
00:07:27,260 --> 00:07:32,780
using mitigations here so why we don't

200
00:07:30,710 --> 00:07:35,150
have that mature process then like I

201
00:07:32,780 --> 00:07:37,429
remember that when I was in engineering

202
00:07:35,150 --> 00:07:39,409
school one of my math professors he

203
00:07:37,430 --> 00:07:41,180
always made firm that the engineers do

204
00:07:39,410 --> 00:07:43,730
math a little bit different than the

205
00:07:41,180 --> 00:07:45,200
rest of the mathematicians right and I

206
00:07:43,730 --> 00:07:47,780
remember he was a specifically making

207
00:07:45,200 --> 00:07:50,570
fun of like the idea of the proof by

208
00:07:47,780 --> 00:07:52,099
induction of the engineers so in the

209
00:07:50,570 --> 00:07:53,599
case of engineers the proof by induction

210
00:07:52,100 --> 00:07:56,419
is really like in to if it works for

211
00:07:53,600 --> 00:07:59,060
case 1 case 2 and case 3 it works for

212
00:07:56,419 --> 00:08:01,190
all cases right which is obviously not

213
00:07:59,060 --> 00:08:03,919
what proof by induction is involved but

214
00:08:01,190 --> 00:08:06,320
I will take it I will accept that if we

215
00:08:03,919 --> 00:08:08,240
basically discussing mitigations so why

216
00:08:06,320 --> 00:08:10,580
don't we try to create a rule and agree

217
00:08:08,240 --> 00:08:12,680
on that rule that is very simple if you

218
00:08:10,580 --> 00:08:14,810
say that you have a mitigation for a

219
00:08:12,680 --> 00:08:18,080
class of vulnerabilities that mitigation

220
00:08:14,810 --> 00:08:19,580
must work 100% of the time against that

221
00:08:18,080 --> 00:08:22,130
the least three instances of

222
00:08:19,580 --> 00:08:23,659
vulnerabilities in this class it's an it

223
00:08:22,130 --> 00:08:25,790
should really prevent those three

224
00:08:23,660 --> 00:08:28,190
instances if you're not able to find

225
00:08:25,790 --> 00:08:29,990
this true in three instances you either

226
00:08:28,190 --> 00:08:32,390
don't understand the problem or your

227
00:08:29,990 --> 00:08:34,010
mitigation doesn't make much sense it

228
00:08:32,390 --> 00:08:36,199
will only bring complexity it's very

229
00:08:34,010 --> 00:08:38,450
hard to really believe that the

230
00:08:36,200 --> 00:08:40,039
mitigation is effective so it's very

231
00:08:38,450 --> 00:08:41,510
simple it's just three you know I am NOT

232
00:08:40,039 --> 00:08:42,979
asking for 10 I'm not asking for

233
00:08:41,510 --> 00:08:45,200
hundreds I'm not even asking for the

234
00:08:42,979 --> 00:08:48,350
majority of the cases just three cases

235
00:08:45,200 --> 00:08:50,750
that would be a rather huge addition so

236
00:08:48,350 --> 00:08:52,850
people would start saying hey it raises

237
00:08:50,750 --> 00:08:57,139
the bar people would say look for this

238
00:08:52,850 --> 00:08:58,880
three cases it worked another point to

239
00:08:57,139 --> 00:09:00,550
that they're like I want to say is that

240
00:08:58,880 --> 00:09:02,990
there's been a lot of work in

241
00:09:00,550 --> 00:09:04,969
formalizing what exploits are above what

242
00:09:02,990 --> 00:09:07,130
is offensive research is is our above

243
00:09:04,970 --> 00:09:10,040
and I think like this work is is really

244
00:09:07,130 --> 00:09:11,930
really important I will talk a lot above

245
00:09:10,040 --> 00:09:13,730
like some of the work and some of the

246
00:09:11,930 --> 00:09:15,758
research that is coming in this area in

247
00:09:13,730 --> 00:09:18,709
a minute but there like I think that

248
00:09:15,759 --> 00:09:20,959
there is a big problem in the area is

249
00:09:18,709 --> 00:09:23,089
that sometimes people go and they

250
00:09:20,959 --> 00:09:24,979
understand the contents of an oppressor

251
00:09:23,089 --> 00:09:27,380
nation or a paper above like a given

252
00:09:24,980 --> 00:09:29,420
exploit so for example you come to your

253
00:09:27,380 --> 00:09:31,399
phone and someone is presenting like

254
00:09:29,420 --> 00:09:33,259
this enough to exploit that they wrote

255
00:09:31,399 --> 00:09:34,910
and you really fully understand the

256
00:09:33,259 --> 00:09:36,620
presentation it makes sense right you

257
00:09:34,910 --> 00:09:38,420
understand what is different ability bow

258
00:09:36,620 --> 00:09:40,160
if you understand how they come above

259
00:09:38,420 --> 00:09:41,479
explaining that would have been it why

260
00:09:40,160 --> 00:09:43,459
it is a problem you understand the

261
00:09:41,480 --> 00:09:46,430
impact but that doesn't mean you were

262
00:09:43,459 --> 00:09:48,279
really able to do it the only thing that

263
00:09:46,430 --> 00:09:50,779
proves were able to do it is it doing it

264
00:09:48,279 --> 00:09:53,959
so I really like to say and to

265
00:09:50,779 --> 00:09:55,490
incentivize everybody to try don't just

266
00:09:53,959 --> 00:09:58,819
believe on the research that is

267
00:09:55,490 --> 00:10:00,889
presented go and do it and as long as

268
00:09:58,819 --> 00:10:03,170
you start practicing it if you see the

269
00:10:00,889 --> 00:10:05,269
other challenges that the researcher did

270
00:10:03,170 --> 00:10:07,040
not even mention in the talk because

271
00:10:05,269 --> 00:10:08,959
there was no time because the researcher

272
00:10:07,040 --> 00:10:10,459
thought it was not important and then if

273
00:10:08,959 --> 00:10:12,410
you really understand what exploits

274
00:10:10,459 --> 00:10:15,619
writing is about so I really really

275
00:10:12,410 --> 00:10:18,860
recommend people to really do it on the

276
00:10:15,620 --> 00:10:21,560
topic of like is writing exploits really

277
00:10:18,860 --> 00:10:23,750
an art or writing exploit is really an

278
00:10:21,560 --> 00:10:25,638
engineering process can we really teach

279
00:10:23,750 --> 00:10:28,339
people how to do it and create a process

280
00:10:25,639 --> 00:10:30,439
in which we teach whoever that is like a

281
00:10:28,339 --> 00:10:32,149
dedicate the time to learn I really

282
00:10:30,439 --> 00:10:35,269
recommended them like a dis panel that

283
00:10:32,149 --> 00:10:37,250
was held in in New York University with

284
00:10:35,269 --> 00:10:38,990
many exploits writers and academics

285
00:10:37,250 --> 00:10:40,310
discussing it so like if you're

286
00:10:38,990 --> 00:10:42,529
interested in going deeper and

287
00:10:40,310 --> 00:10:44,689
understanding if exploits is an art or

288
00:10:42,529 --> 00:10:47,149
engineering I do recommend you to have a

289
00:10:44,689 --> 00:10:49,579
look into this material but this is the

290
00:10:47,149 --> 00:10:51,560
points to remember right those proposing

291
00:10:49,579 --> 00:10:53,449
mitigations they need to understand the

292
00:10:51,560 --> 00:10:56,930
problem right and to understand the

293
00:10:53,449 --> 00:10:59,149
problem the only way is by doing it if

294
00:10:56,930 --> 00:11:00,739
you never wrote an exploit for the class

295
00:10:59,149 --> 00:11:03,649
of vulnerabilities that you really want

296
00:11:00,740 --> 00:11:06,200
to propose a mitigation to you probably

297
00:11:03,649 --> 00:11:08,540
not proposing a good mitigation

298
00:11:06,200 --> 00:11:10,820
of course you can also pair up with

299
00:11:08,540 --> 00:11:14,630
somebody who did it multiple times but

300
00:11:10,820 --> 00:11:16,970
doing it is really important so I would

301
00:11:14,630 --> 00:11:19,040
like to say that if someone proposes a

302
00:11:16,970 --> 00:11:22,540
mitigation and they never wrote exploits

303
00:11:19,040 --> 00:11:24,560
in this area be very careful on

304
00:11:22,540 --> 00:11:26,449
believing on that mitigation because

305
00:11:24,560 --> 00:11:29,750
likely the person don't fully understand

306
00:11:26,450 --> 00:11:32,510
the problem so a good disclaimer here is

307
00:11:29,750 --> 00:11:33,980
that being able to write exploit and

308
00:11:32,510 --> 00:11:35,480
have written exploits doesn't

309
00:11:33,980 --> 00:11:37,490
necessarily mean you like to do it

310
00:11:35,480 --> 00:11:40,340
actually one of the guys that I know

311
00:11:37,490 --> 00:11:41,420
that is one of them the best ones in

312
00:11:40,340 --> 00:11:43,730
writing integrations

313
00:11:41,420 --> 00:11:46,430
he hates writing exploits I think it's

314
00:11:43,730 --> 00:11:48,770
like an exercise in fertility right but

315
00:11:46,430 --> 00:11:52,040
anyhow he is able to do it and he did it

316
00:11:48,770 --> 00:11:53,860
multiple times right so I just wanted to

317
00:11:52,040 --> 00:11:57,589
be sure that everybody understands that

318
00:11:53,860 --> 00:12:00,440
also doing like another problem that Ric

319
00:11:57,590 --> 00:12:02,240
is and it's connected to this - the

320
00:12:00,440 --> 00:12:04,270
second point that I made is as

321
00:12:02,240 --> 00:12:06,710
researchers when we present something

322
00:12:04,270 --> 00:12:08,810
there is always a limited amount of time

323
00:12:06,710 --> 00:12:10,940
right when you present a research work

324
00:12:08,810 --> 00:12:12,560
like like something like for example you

325
00:12:10,940 --> 00:12:15,530
wrote an exploit like either like you're

326
00:12:12,560 --> 00:12:17,089
presenting a blog post a paper it could

327
00:12:15,530 --> 00:12:19,100
be academic or no academic or a

328
00:12:17,090 --> 00:12:21,080
presentation in a conference time is

329
00:12:19,100 --> 00:12:21,890
limited the amount of content you share

330
00:12:21,080 --> 00:12:24,170
is limited

331
00:12:21,890 --> 00:12:25,670
sometimes you don't share something

332
00:12:24,170 --> 00:12:27,589
because we believe that something is not

333
00:12:25,670 --> 00:12:28,910
important sometimes you don't share

334
00:12:27,590 --> 00:12:30,220
something because if think it's so

335
00:12:28,910 --> 00:12:32,870
simple that everybody would know

336
00:12:30,220 --> 00:12:34,520
sometimes you just don't share because

337
00:12:32,870 --> 00:12:36,830
you don't understand really the problem

338
00:12:34,520 --> 00:12:38,689
right like some parts of that problem

339
00:12:36,830 --> 00:12:40,130
but Yuri still managed to write the

340
00:12:38,690 --> 00:12:42,710
expert and if you want to share their

341
00:12:40,130 --> 00:12:45,860
ideas there so it is important - they

342
00:12:42,710 --> 00:12:48,230
didn't like a we we don't create a

343
00:12:45,860 --> 00:12:50,810
misconception that a lot of people is

344
00:12:48,230 --> 00:12:52,760
really able to do that right now there

345
00:12:50,810 --> 00:12:55,130
is a real problem on the amount of

346
00:12:52,760 --> 00:12:57,380
people that are able to do the offensive

347
00:12:55,130 --> 00:13:00,320
work like all the companies are

348
00:12:57,380 --> 00:13:02,120
struggling to find the talent so which

349
00:13:00,320 --> 00:13:04,670
is great for everybody who wants to do

350
00:13:02,120 --> 00:13:06,050
it it's great for us because the market

351
00:13:04,670 --> 00:13:08,030
is really hot there is a lot of

352
00:13:06,050 --> 00:13:10,520
opportunities but it's also a problem

353
00:13:08,030 --> 00:13:12,560
because there is a lot of noise there is

354
00:13:10,520 --> 00:13:14,030
a lot of electronic materials that are

355
00:13:12,560 --> 00:13:15,739
being generated that don't really

356
00:13:14,030 --> 00:13:18,470
necessarily add add

357
00:13:15,740 --> 00:13:20,690
and gathering information is getting

358
00:13:18,470 --> 00:13:22,850
harder and harder or systems are getting

359
00:13:20,690 --> 00:13:24,620
more and more complex and basically

360
00:13:22,850 --> 00:13:27,529
there is no enough time to look at

361
00:13:24,620 --> 00:13:30,110
everything every time you go and start

362
00:13:27,529 --> 00:13:32,570
looking into like a field inside like

363
00:13:30,110 --> 00:13:35,390
they're like the world of technology you

364
00:13:32,570 --> 00:13:38,750
see how deep it goes there is so much

365
00:13:35,390 --> 00:13:42,439
content so much complexity that the time

366
00:13:38,750 --> 00:13:45,529
is just not enough right so we do need

367
00:13:42,440 --> 00:13:47,529
help we do need to scale but scaling is

368
00:13:45,529 --> 00:13:49,490
also very hard because usually

369
00:13:47,529 --> 00:13:52,100
practitioners don't necessarily like to

370
00:13:49,490 --> 00:13:54,230
teach right and we don't necessarily

371
00:13:52,100 --> 00:13:56,540
like to the humans right and it makes

372
00:13:54,230 --> 00:13:58,010
sense I mean I like to break this stuff

373
00:13:56,540 --> 00:14:00,649
I like that tree oh I don't like the

374
00:13:58,010 --> 00:14:02,990
tree of writing a paper right and in the

375
00:14:00,649 --> 00:14:06,230
end that creates even more challenges in

376
00:14:02,990 --> 00:14:08,750
in Northfield so the third point like

377
00:14:06,230 --> 00:14:11,690
that I want to make is that doing like a

378
00:14:08,750 --> 00:14:13,880
as more as we know as much as we see we

379
00:14:11,690 --> 00:14:16,490
don't and that's more afraid we are on

380
00:14:13,880 --> 00:14:17,899
sharing and then they like it a lot of

381
00:14:16,490 --> 00:14:18,770
people who are basically sharing even

382
00:14:17,899 --> 00:14:20,600
though they don't really fully

383
00:14:18,770 --> 00:14:23,660
understand the problem and that only

384
00:14:20,600 --> 00:14:25,959
makes it even harder for us right so

385
00:14:23,660 --> 00:14:27,949
here's the thing to remember right

386
00:14:25,959 --> 00:14:29,719
investments in defense they need to be

387
00:14:27,950 --> 00:14:32,440
guided they need to follow investments

388
00:14:29,720 --> 00:14:35,510
in offense right offense learns and

389
00:14:32,440 --> 00:14:38,209
explore possibilities new attacks new

390
00:14:35,510 --> 00:14:40,520
scenarios new implications and the fence

391
00:14:38,209 --> 00:14:42,349
needs to benefit from that so the data

392
00:14:40,520 --> 00:14:44,300
really needs to flow like they dig that

393
00:14:42,350 --> 00:14:45,800
really needs to be shared we taught the

394
00:14:44,300 --> 00:14:48,829
fence there would be no need for defense

395
00:14:45,800 --> 00:14:51,260
and vice versa right offense is not more

396
00:14:48,830 --> 00:14:53,630
important than the fence but defense is

397
00:14:51,260 --> 00:14:54,920
really very important for defense

398
00:14:53,630 --> 00:14:57,470
otherwise you don't really understand

399
00:14:54,920 --> 00:14:59,870
what you're trying to protect so another

400
00:14:57,470 --> 00:15:01,400
problem here is it's very common that

401
00:14:59,870 --> 00:15:01,820
people believe that the details don't

402
00:15:01,400 --> 00:15:06,050
matter

403
00:15:01,820 --> 00:15:07,880
somehow we we created this idea that we

404
00:15:06,050 --> 00:15:09,620
are discussing high-level things and

405
00:15:07,880 --> 00:15:11,630
their architectural points are what

406
00:15:09,620 --> 00:15:13,010
matters but the details don't but are

407
00:15:11,630 --> 00:15:15,829
the details that make all those

408
00:15:13,010 --> 00:15:16,880
mitigations broken so the details do

409
00:15:15,829 --> 00:15:19,459
matter right

410
00:15:16,880 --> 00:15:23,689
and as more as the details are shared as

411
00:15:19,459 --> 00:15:25,130
better right let's try to make that so I

412
00:15:23,690 --> 00:15:27,079
will give some examples of things that

413
00:15:25,130 --> 00:15:29,060
time is right things that are like I I

414
00:15:27,079 --> 00:15:31,250
look into the community I look

415
00:15:29,060 --> 00:15:32,839
to the world and they are very very hard

416
00:15:31,250 --> 00:15:35,600
together even though they look like

417
00:15:32,840 --> 00:15:38,780
trivial right one example is for example

418
00:15:35,600 --> 00:15:41,360
a clown shoe all happens right poncho is

419
00:15:38,780 --> 00:15:42,829
a competition like hacking real sisters

420
00:15:41,360 --> 00:15:44,420
there is a bunch of companies that put

421
00:15:42,830 --> 00:15:47,090
their products there this is really

422
00:15:44,420 --> 00:15:49,250
great people go there and and break

423
00:15:47,090 --> 00:15:51,470
those technologies the media rolls and

424
00:15:49,250 --> 00:15:54,050
say hey like someone our nerd I don't

425
00:15:51,470 --> 00:15:56,540
know Safari in five seconds we all know

426
00:15:54,050 --> 00:15:58,160
it's not in five seconds right we all

427
00:15:56,540 --> 00:15:59,839
know that that researcher is likely

428
00:15:58,160 --> 00:16:02,270
working in Safari for a year

429
00:15:59,840 --> 00:16:04,400
it's like find a vulnerability in them

430
00:16:02,270 --> 00:16:06,319
took enough to exploit it found another

431
00:16:04,400 --> 00:16:08,030
instance of the vulnerability to get an

432
00:16:06,320 --> 00:16:08,630
info leak took another month maybe to

433
00:16:08,030 --> 00:16:10,790
exploit it

434
00:16:08,630 --> 00:16:13,700
so it was Memphis of work and there is

435
00:16:10,790 --> 00:16:15,680
an ear or more of like studying to

436
00:16:13,700 --> 00:16:17,840
actually get that result in five seconds

437
00:16:15,680 --> 00:16:20,540
and we'll get into that in a minute but

438
00:16:17,840 --> 00:16:21,950
I think that like the right herbs that

439
00:16:20,540 --> 00:16:23,719
come after punch around when the

440
00:16:21,950 --> 00:16:25,610
presentations that come after punch

441
00:16:23,720 --> 00:16:28,220
round they are very valuable

442
00:16:25,610 --> 00:16:30,440
like they share a lot of really

443
00:16:28,220 --> 00:16:33,440
important information on real life

444
00:16:30,440 --> 00:16:35,540
systems and real life like exploit cases

445
00:16:33,440 --> 00:16:37,730
that bypasses all the mitigations few

446
00:16:35,540 --> 00:16:39,949
interactions from the user and this this

447
00:16:37,730 --> 00:16:41,330
has a lot of value I saw a lot of people

448
00:16:39,950 --> 00:16:44,090
in the Illinois industry

449
00:16:41,330 --> 00:16:45,830
criticizing these presentations and

450
00:16:44,090 --> 00:16:48,020
criticizing the materials written there

451
00:16:45,830 --> 00:16:50,570
basically folks are claiming that hey

452
00:16:48,020 --> 00:16:52,310
it's just another exploit why this is

453
00:16:50,570 --> 00:16:54,860
important well it is important because

454
00:16:52,310 --> 00:16:56,239
if we don't share the data first others

455
00:16:54,860 --> 00:16:58,430
will not be able to know what is the

456
00:16:56,240 --> 00:17:01,580
state of the art that's the very first

457
00:16:58,430 --> 00:17:03,770
element second we would not know how our

458
00:17:01,580 --> 00:17:05,540
mitigations are failing and without this

459
00:17:03,770 --> 00:17:07,790
data how do we know we even need new

460
00:17:05,540 --> 00:17:09,260
mitigations how do we know everybody

461
00:17:07,790 --> 00:17:10,550
proposed mitigations are not just

462
00:17:09,260 --> 00:17:12,589
looking for a promotion in their

463
00:17:10,550 --> 00:17:15,349
companies and the mitigations are not

464
00:17:12,589 --> 00:17:15,980
necessarily useful or needed we need

465
00:17:15,349 --> 00:17:18,889
data

466
00:17:15,980 --> 00:17:20,120
so let's not only say tell those

467
00:17:18,890 --> 00:17:21,500
researchers that their work doesn't

468
00:17:20,119 --> 00:17:23,329
matter but let's incentivize them to

469
00:17:21,500 --> 00:17:25,869
share even more one thing that I would

470
00:17:23,329 --> 00:17:29,659
like to see when they share this work is

471
00:17:25,869 --> 00:17:31,399
data regarding amount of time like how

472
00:17:29,660 --> 00:17:33,920
long it took how long they are look into

473
00:17:31,400 --> 00:17:35,630
this target like what they already knew

474
00:17:33,920 --> 00:17:38,090
did they have any of the primitives

475
00:17:35,630 --> 00:17:41,030
already so they found those bugs right

476
00:17:38,090 --> 00:17:42,879
all this data is very variable when you

477
00:17:41,030 --> 00:17:45,370
actually try to engineer the defense

478
00:17:42,880 --> 00:17:47,380
and unfortunately in many cases

479
00:17:45,370 --> 00:17:48,459
researchers don't share it and I think

480
00:17:47,380 --> 00:17:50,740
they don't share because they don't

481
00:17:48,460 --> 00:17:53,410
really see how valuable this data is but

482
00:17:50,740 --> 00:17:54,940
I would love it if they share I went to

483
00:17:53,410 --> 00:17:57,400
prized Microsoft actually here

484
00:17:54,940 --> 00:17:59,260
unbelievable as it is Microsoft is one

485
00:17:57,400 --> 00:18:01,179
of the companies that fast sharing has

486
00:17:59,260 --> 00:18:03,190
been sharing this data they have been

487
00:18:01,179 --> 00:18:05,350
presenting and trying to say that hey

488
00:18:03,190 --> 00:18:07,030
the rationale behind this mitigation was

489
00:18:05,350 --> 00:18:09,100
because of this number of exploits

490
00:18:07,030 --> 00:18:11,139
affecting this class of vulnerability

491
00:18:09,100 --> 00:18:13,000
and that that's been great I think this

492
00:18:11,140 --> 00:18:16,929
is very variable and I hope like more

493
00:18:13,000 --> 00:18:19,000
starts doing it it's few on talking

494
00:18:16,929 --> 00:18:21,070
above like data that like looks trivial

495
00:18:19,000 --> 00:18:23,830
but it's not easily available just a

496
00:18:21,070 --> 00:18:25,658
simple exercise Metasploit has a lot of

497
00:18:23,830 --> 00:18:27,340
public exploits right it has a lot of

498
00:18:25,659 --> 00:18:29,110
vulnerabilities that people we spend a

499
00:18:27,340 --> 00:18:31,149
lot of time writing exploits for them

500
00:18:29,110 --> 00:18:33,610
they have like quality control like

501
00:18:31,150 --> 00:18:36,340
fairly good quality of the exploits some

502
00:18:33,610 --> 00:18:38,559
of them very good quality right but

503
00:18:36,340 --> 00:18:41,250
still how do you know how many of those

504
00:18:38,559 --> 00:18:43,629
exploits bypass and which mitigations

505
00:18:41,250 --> 00:18:45,340
even though they do have tags for some

506
00:18:43,630 --> 00:18:46,900
of the mitigations some of them don't

507
00:18:45,340 --> 00:18:49,209
even apply so for example they might say

508
00:18:46,900 --> 00:18:51,909
hey there is an SLR bypass but the

509
00:18:49,210 --> 00:18:53,710
actual exploit is not really bypassing a

510
00:18:51,909 --> 00:18:56,140
SLR it's really counting on a module

511
00:18:53,710 --> 00:18:58,630
that has fixed at the addresses so it's

512
00:18:56,140 --> 00:19:00,730
not really an SLR bypass is really a SLR

513
00:18:58,630 --> 00:19:03,610
is not fully enabled in that target so

514
00:19:00,730 --> 00:19:06,010
there is a and more than that how do you

515
00:19:03,610 --> 00:19:07,990
know if a given mitigation was enabled

516
00:19:06,010 --> 00:19:09,789
if that same vulnerability could be

517
00:19:07,990 --> 00:19:11,799
exploited to bypass the mitigation and

518
00:19:09,789 --> 00:19:13,929
the researcher just didn't or the

519
00:19:11,799 --> 00:19:16,690
mitigation just didn't exist but it

520
00:19:13,929 --> 00:19:19,179
would be by passable just this very

521
00:19:16,690 --> 00:19:20,559
simple data is there already not

522
00:19:19,179 --> 00:19:23,049
available and we're talking about

523
00:19:20,559 --> 00:19:25,418
publicly exploits in a very very user

524
00:19:23,049 --> 00:19:27,610
tool that the community supports and why

525
00:19:25,419 --> 00:19:29,080
it's not available because it's not just

526
00:19:27,610 --> 00:19:31,000
information gathering right it's not

527
00:19:29,080 --> 00:19:32,439
just about looking to the tags of the

528
00:19:31,000 --> 00:19:34,929
Explorer it's looking to what they do

529
00:19:32,440 --> 00:19:36,940
and in coming up with the conclusion how

530
00:19:34,929 --> 00:19:38,650
do we really respond the question on hey

531
00:19:36,940 --> 00:19:40,750
would it be possible if the mitigation

532
00:19:38,650 --> 00:19:42,429
was enabled how do you go back in the

533
00:19:40,750 --> 00:19:44,260
history and look into all these other

534
00:19:42,429 --> 00:19:46,030
vulnerabilities that there are exploits

535
00:19:44,260 --> 00:19:47,500
there and say hey if I had this

536
00:19:46,030 --> 00:19:49,690
mitigation would it really have

537
00:19:47,500 --> 00:19:52,360
prevented it but this data would be

538
00:19:49,690 --> 00:19:54,669
super valuable and of the like in theory

539
00:19:52,360 --> 00:19:56,990
it's easy but it is really not easy to

540
00:19:54,669 --> 00:19:59,730
gather that

541
00:19:56,990 --> 00:20:02,790
another point is I think there is a

542
00:19:59,730 --> 00:20:04,350
fallacy in insecurity where everybody

543
00:20:02,790 --> 00:20:06,600
talks about defense-in-depth

544
00:20:04,350 --> 00:20:09,090
the idea of defense-in-depth came from

545
00:20:06,600 --> 00:20:11,040
the military right in which if your

546
00:20:09,090 --> 00:20:13,500
defenses they start failing some

547
00:20:11,040 --> 00:20:14,970
elements of the terrain or some elements

548
00:20:13,500 --> 00:20:16,650
that we put there would block the

549
00:20:14,970 --> 00:20:19,410
advance of the troops so you can

550
00:20:16,650 --> 00:20:21,660
relocate your troops to defense this

551
00:20:19,410 --> 00:20:25,380
doesn't exist really in computers think

552
00:20:21,660 --> 00:20:27,630
about when a SLR CFI Cannery when that

553
00:20:25,380 --> 00:20:29,670
failure it all fails together why did

554
00:20:27,630 --> 00:20:31,920
they the attacker is writing the exploit

555
00:20:29,670 --> 00:20:33,750
yes the attacker needs to bypass one

556
00:20:31,920 --> 00:20:35,820
find a new primitive manage to bypass

557
00:20:33,750 --> 00:20:39,210
the other but when the attack really

558
00:20:35,820 --> 00:20:41,909
happens it fails altogether there is no

559
00:20:39,210 --> 00:20:43,890
such a thing as defense in that in in

560
00:20:41,910 --> 00:20:45,809
computer security nowadays there are

561
00:20:43,890 --> 00:20:47,730
like some ideas right yeah you can try

562
00:20:45,809 --> 00:20:49,050
to put things on the perimeter say that

563
00:20:47,730 --> 00:20:50,940
the periodic needs to be on and then you

564
00:20:49,050 --> 00:20:52,379
could detect but detection doesn't

565
00:20:50,940 --> 00:20:54,420
really necessarily work so when you

566
00:20:52,380 --> 00:20:55,260
really see something then like it's it's

567
00:20:54,420 --> 00:20:57,480
already too late

568
00:20:55,260 --> 00:20:59,429
but defense in depth does not apply for

569
00:20:57,480 --> 00:21:00,840
mitigations so every time that I hear

570
00:20:59,429 --> 00:21:02,940
someone say yeah but this mitigation

571
00:21:00,840 --> 00:21:04,949
raises the bar and its defense in depth

572
00:21:02,940 --> 00:21:06,090
I really believe that person doesn't

573
00:21:04,950 --> 00:21:08,190
really understand what they're talking

574
00:21:06,090 --> 00:21:09,659
about and that's why I didn't like when

575
00:21:08,190 --> 00:21:11,309
you go and you see the results of punch

576
00:21:09,660 --> 00:21:13,080
wow it's like five seconds and

577
00:21:11,309 --> 00:21:15,629
everything is gone right it's because

578
00:21:13,080 --> 00:21:17,610
again everything failed all together it

579
00:21:15,630 --> 00:21:19,080
was not like hey one piece of the

580
00:21:17,610 --> 00:21:22,110
failure and then the next piece and the

581
00:21:19,080 --> 00:21:24,178
next piece of course there are some more

582
00:21:22,110 --> 00:21:27,629
examples of our cases in which the

583
00:21:24,179 --> 00:21:29,580
defense in depth appears right I think

584
00:21:27,630 --> 00:21:31,350
the latest vulnerability next scene is a

585
00:21:29,580 --> 00:21:33,389
perfect example right that it takes

586
00:21:31,350 --> 00:21:35,070
above a week for really exploiting the

587
00:21:33,390 --> 00:21:38,520
vulnerability so it was an interesting

588
00:21:35,070 --> 00:21:40,860
example of a defense in depth since I

589
00:21:38,520 --> 00:21:43,290
always like to prize the work of others

590
00:21:40,860 --> 00:21:45,449
I also went through to mention like

591
00:21:43,290 --> 00:21:47,460
Casey she has been working and she's

592
00:21:45,450 --> 00:21:49,830
like one of the persons that created the

593
00:21:47,460 --> 00:21:52,110
idea the whole idea of bug bounties and

594
00:21:49,830 --> 00:21:54,030
black ball things have have been very

595
00:21:52,110 --> 00:21:56,219
important right I know that in many

596
00:21:54,030 --> 00:21:58,620
places I am I'm from Brazil right so

597
00:21:56,220 --> 00:22:00,510
places like Brazil people make a really

598
00:21:58,620 --> 00:22:02,280
good living out of bug bounties so bug

599
00:22:00,510 --> 00:22:05,190
bounties are important it really bring

600
00:22:02,280 --> 00:22:07,110
more people to research and it does give

601
00:22:05,190 --> 00:22:08,920
opportunities to many researchers but

602
00:22:07,110 --> 00:22:11,439
they're like the numbers there

603
00:22:08,920 --> 00:22:13,120
all kind of dub for like a lot of them

604
00:22:11,440 --> 00:22:14,380
like the numbers that people claim like

605
00:22:13,120 --> 00:22:17,110
haters a hundred thousand researchers

606
00:22:14,380 --> 00:22:19,540
registered but from those 100 thousand

607
00:22:17,110 --> 00:22:21,010
how many really received payouts and how

608
00:22:19,540 --> 00:22:23,050
many can really leave out of dues

609
00:22:21,010 --> 00:22:24,970
payouts then you started like really

610
00:22:23,050 --> 00:22:27,850
seeing the reality that our fields don't

611
00:22:24,970 --> 00:22:30,010
really have that many people working

612
00:22:27,850 --> 00:22:32,800
also they're like what is the quality of

613
00:22:30,010 --> 00:22:34,660
most of those submissions right a lot of

614
00:22:32,800 --> 00:22:37,330
them are like really going out after the

615
00:22:34,660 --> 00:22:39,250
low-hanging fruits things that should

616
00:22:37,330 --> 00:22:41,080
have been automated already so it's

617
00:22:39,250 --> 00:22:43,090
really more about the maturity of the

618
00:22:41,080 --> 00:22:44,760
industry of defense then really on the

619
00:22:43,090 --> 00:22:47,260
quality and the number of researchers

620
00:22:44,760 --> 00:22:49,090
another like thing that I see in bug

621
00:22:47,260 --> 00:22:50,920
bounties is the companies themselves

622
00:22:49,090 --> 00:22:52,330
that are doing the payouts they

623
00:22:50,920 --> 00:22:54,700
sometimes don't really have the maturity

624
00:22:52,330 --> 00:22:56,199
to do the proper try aging so the

625
00:22:54,700 --> 00:22:57,790
companies themselves are paying for

626
00:22:56,200 --> 00:22:59,290
things that they should not be paying or

627
00:22:57,790 --> 00:23:01,480
paying more for things that they should

628
00:22:59,290 --> 00:23:03,580
pay much less do it to the quality of

629
00:23:01,480 --> 00:23:05,320
the submission so I think bug bounties

630
00:23:03,580 --> 00:23:07,270
are great but at the same time I don't

631
00:23:05,320 --> 00:23:09,159
like I don't really I don't really trust

632
00:23:07,270 --> 00:23:11,410
a lot on the numbers I think didn't like

633
00:23:09,160 --> 00:23:14,380
a we need much more researchers than bug

634
00:23:11,410 --> 00:23:16,030
bounties claim that they have and that

635
00:23:14,380 --> 00:23:18,460
goes back to the importance of

636
00:23:16,030 --> 00:23:20,320
formalization right we thought basically

637
00:23:18,460 --> 00:23:23,140
being able to define what is above like

638
00:23:20,320 --> 00:23:25,480
the work or like the offensive work it's

639
00:23:23,140 --> 00:23:27,280
very hard for the academia to come to

640
00:23:25,480 --> 00:23:28,810
the state of the art and it's very hard

641
00:23:27,280 --> 00:23:31,270
we talk to the academia to really scale

642
00:23:28,810 --> 00:23:32,710
right because the academics they are

643
00:23:31,270 --> 00:23:35,170
like or they search for the information

644
00:23:32,710 --> 00:23:37,090
right that's where a lot of the people a

645
00:23:35,170 --> 00:23:39,070
lot of the talent comes in the industry

646
00:23:37,090 --> 00:23:40,840
so if they don't really manage to get

647
00:23:39,070 --> 00:23:42,220
into the state of the art we end up

648
00:23:40,840 --> 00:23:45,220
having a problem of scaling and

649
00:23:42,220 --> 00:23:47,410
insecurity that has been true for for

650
00:23:45,220 --> 00:23:48,820
many years right even though again I

651
00:23:47,410 --> 00:23:51,280
don't want to make a generalization

652
00:23:48,820 --> 00:23:53,230
there are very very good pools of like

653
00:23:51,280 --> 00:23:54,790
academics and academic knowledge but

654
00:23:53,230 --> 00:23:57,160
overall if you really look into the

655
00:23:54,790 --> 00:23:59,050
whole academia the amount of students

656
00:23:57,160 --> 00:24:02,590
versus the amount of contribution it's

657
00:23:59,050 --> 00:24:04,480
very low in security so this strange of

658
00:24:02,590 --> 00:24:07,179
like trying to formalize trying to

659
00:24:04,480 --> 00:24:09,610
define what is an exploit why something

660
00:24:07,180 --> 00:24:11,860
is exploitable try to define things it's

661
00:24:09,610 --> 00:24:13,870
being very very important notice that

662
00:24:11,860 --> 00:24:16,270
here I'm talking about formalization not

663
00:24:13,870 --> 00:24:18,070
as in formal methods but really on on

664
00:24:16,270 --> 00:24:19,570
defining things some of those are of

665
00:24:18,070 --> 00:24:21,580
course formal methods some of them are

666
00:24:19,570 --> 00:24:22,070
just like better explaining and putting

667
00:24:21,580 --> 00:24:24,080
it in

668
00:24:22,070 --> 00:24:27,020
Oh science terms what an exploit is

669
00:24:24,080 --> 00:24:28,399
actually doing a good example of this

670
00:24:27,020 --> 00:24:30,410
trend is of course didn't like add a

671
00:24:28,400 --> 00:24:32,030
weird machine at that create that was

672
00:24:30,410 --> 00:24:33,710
created as a part of the length sac

673
00:24:32,030 --> 00:24:36,860
initiative and I think they're like this

674
00:24:33,710 --> 00:24:38,450
this was very good but they're like if

675
00:24:36,860 --> 00:24:41,300
you we look into into these initiatives

676
00:24:38,450 --> 00:24:43,940
of formalizing offensive work and for me

677
00:24:41,300 --> 00:24:46,070
length sake is one of the big ones there

678
00:24:43,940 --> 00:24:47,510
is a field in like a you start seeing

679
00:24:46,070 --> 00:24:49,250
that there like a wide offense is

680
00:24:47,510 --> 00:24:51,680
failing right so I give I give two

681
00:24:49,250 --> 00:24:53,630
examples where length sack guidance and

682
00:24:51,680 --> 00:24:55,850
what we learned with length sack

683
00:24:53,630 --> 00:24:57,890
basically opposes what people say

684
00:24:55,850 --> 00:24:59,810
insecure development one of them is like

685
00:24:57,890 --> 00:25:02,420
we know that insecure development

686
00:24:59,810 --> 00:25:04,760
everybody talks above the rule of like

687
00:25:02,420 --> 00:25:06,740
hey the input must be checked as close

688
00:25:04,760 --> 00:25:08,870
as possible to the usage of that input

689
00:25:06,740 --> 00:25:11,570
but that created what is like this

690
00:25:08,870 --> 00:25:14,030
shotgun parsing that we see where like a

691
00:25:11,570 --> 00:25:17,540
the companies and the developers they

692
00:25:14,030 --> 00:25:18,950
mixing the input recognition with really

693
00:25:17,540 --> 00:25:21,649
like it just like looking to like

694
00:25:18,950 --> 00:25:23,360
certain values right and and the input

695
00:25:21,650 --> 00:25:25,250
recognition end up spreading to the

696
00:25:23,360 --> 00:25:27,199
entire e code and that makes called

697
00:25:25,250 --> 00:25:29,810
really complex and make vulnerability

698
00:25:27,200 --> 00:25:31,880
like understanding exploiting and fixing

699
00:25:29,810 --> 00:25:33,710
really hard that's why again and again

700
00:25:31,880 --> 00:25:36,050
we see companies failing to patch right

701
00:25:33,710 --> 00:25:37,820
because they patch one instance but

702
00:25:36,050 --> 00:25:40,700
there is many other cold paths that come

703
00:25:37,820 --> 00:25:42,620
to the same vulnerability and other like

704
00:25:40,700 --> 00:25:45,200
a place where secure development

705
00:25:42,620 --> 00:25:47,179
basically is in in in odds with like

706
00:25:45,200 --> 00:25:49,280
what length sack teaches is really only

707
00:25:47,180 --> 00:25:50,870
intrinsically secure functions like

708
00:25:49,280 --> 00:25:52,610
security development talks about like

709
00:25:50,870 --> 00:25:54,949
hey every function it should be secure

710
00:25:52,610 --> 00:25:56,870
by itself so you can copy and paste code

711
00:25:54,950 --> 00:25:58,940
around and the code word is to be secure

712
00:25:56,870 --> 00:26:00,949
but we know that security is not really

713
00:25:58,940 --> 00:26:02,570
composable so this property of just

714
00:26:00,950 --> 00:26:04,700
copying around and hoping that the whole

715
00:26:02,570 --> 00:26:06,439
system is secure it's kind of like a

716
00:26:04,700 --> 00:26:08,900
like a misleading even though the idea

717
00:26:06,440 --> 00:26:11,660
of layer the guidance makes sense but

718
00:26:08,900 --> 00:26:13,520
just assuming that you will compose

719
00:26:11,660 --> 00:26:15,440
different components and it will still

720
00:26:13,520 --> 00:26:19,520
be secure that actually is a failure

721
00:26:15,440 --> 00:26:21,920
pair itself as i say it right like there

722
00:26:19,520 --> 00:26:23,900
is many work coming out on formalizing

723
00:26:21,920 --> 00:26:25,490
that is not really lying sack so some

724
00:26:23,900 --> 00:26:28,040
that i would like to cite is like a

725
00:26:25,490 --> 00:26:30,530
Chanel and and julian vine again like

726
00:26:28,040 --> 00:26:32,930
independently working on on on on areas

727
00:26:30,530 --> 00:26:34,430
for formalizing clipper exploits sean is

728
00:26:32,930 --> 00:26:35,770
working on on the automatic generation

729
00:26:34,430 --> 00:26:38,440
for

730
00:26:35,770 --> 00:26:40,120
for for hip exploits so like he already

731
00:26:38,440 --> 00:26:42,130
has a paper out there is there is more

732
00:26:40,120 --> 00:26:44,229
coming and then Julian work we don't

733
00:26:42,130 --> 00:26:47,110
really defining a mathematical model of

734
00:26:44,230 --> 00:26:49,030
like how hip manipulations work so both

735
00:26:47,110 --> 00:26:51,010
are like very important and and like I

736
00:26:49,030 --> 00:26:52,750
really hope that they keep moving the

737
00:26:51,010 --> 00:26:54,070
needle there of course everybody here

738
00:26:52,750 --> 00:26:55,900
probably knows about the diaper

739
00:26:54,070 --> 00:26:57,428
challenge on the automatic exploit

740
00:26:55,900 --> 00:26:59,500
generation and that's becoming more and

741
00:26:57,429 --> 00:27:01,420
more trendy so I really hope that like

742
00:26:59,500 --> 00:27:03,880
more in in the academia we will also get

743
00:27:01,420 --> 00:27:07,210
into into this area shun is doing the

744
00:27:03,880 --> 00:27:09,610
work in in the academia he is in Oxford

745
00:27:07,210 --> 00:27:11,260
University but didn't like her he came

746
00:27:09,610 --> 00:27:12,850
from the industry so I think like it is

747
00:27:11,260 --> 00:27:15,429
a perfect example

748
00:27:12,850 --> 00:27:18,399
however Flake also do like I released a

749
00:27:15,429 --> 00:27:20,050
paper recently basically demonstrating

750
00:27:18,400 --> 00:27:22,660
and using like a Turing machine should

751
00:27:20,050 --> 00:27:24,460
demonstrate like exploit primitives and

752
00:27:22,660 --> 00:27:26,440
why vulnerabilities can be exploited

753
00:27:24,460 --> 00:27:28,179
using Turing machine which for me is a

754
00:27:26,440 --> 00:27:31,140
fundamental work to bring more people

755
00:27:28,179 --> 00:27:34,120
from Computer Sciences into our industry

756
00:27:31,140 --> 00:27:35,679
this list is not comprehensive but one

757
00:27:34,120 --> 00:27:38,290
of the things that I always like to say

758
00:27:35,679 --> 00:27:40,870
is that we know we are in the right path

759
00:27:38,290 --> 00:27:43,120
if we look into other areas of Sciences

760
00:27:40,870 --> 00:27:45,428
and those other areas that have similar

761
00:27:43,120 --> 00:27:47,770
challenges end up coming with similar

762
00:27:45,429 --> 00:27:50,110
conclusions that we did I always think

763
00:27:47,770 --> 00:27:52,090
that they're like even though creativity

764
00:27:50,110 --> 00:27:54,669
is important they're like they the

765
00:27:52,090 --> 00:27:56,678
collective genius is always the best

766
00:27:54,670 --> 00:27:58,570
right so if we doing something true

767
00:27:56,679 --> 00:28:01,660
opposite maybe we were wrong

768
00:27:58,570 --> 00:28:04,360
so I was looking a while back into like

769
00:28:01,660 --> 00:28:06,640
a compression algorithms and like I had

770
00:28:04,360 --> 00:28:08,678
like a a problem that I needed to work

771
00:28:06,640 --> 00:28:11,320
on and basically the like I came up with

772
00:28:08,679 --> 00:28:13,030
this blog post which is a petitioner and

773
00:28:11,320 --> 00:28:14,980
the petitioner basically talking about

774
00:28:13,030 --> 00:28:17,590
the compression and the complexity that

775
00:28:14,980 --> 00:28:19,780
exists in modern algorithms and look

776
00:28:17,590 --> 00:28:22,120
into his conclusion for him a modern

777
00:28:19,780 --> 00:28:24,670
compressor is a bit like a compiler the

778
00:28:22,120 --> 00:28:26,919
compressor data is a kind of programming

779
00:28:24,670 --> 00:28:29,080
bytecode and the de compressor is just

780
00:28:26,920 --> 00:28:31,300
an interpreter that runs that bytecode

781
00:28:29,080 --> 00:28:34,090
which is exactly the definition that

782
00:28:31,300 --> 00:28:36,909
length sac gives or where data drives

783
00:28:34,090 --> 00:28:38,559
cold and therefore doing like a data if

784
00:28:36,910 --> 00:28:40,720
the recognition is very important for

785
00:28:38,559 --> 00:28:42,309
having like code security so for me it's

786
00:28:40,720 --> 00:28:44,770
actually super interesting to see that

787
00:28:42,309 --> 00:28:47,830
in other fields like the petitioners are

788
00:28:44,770 --> 00:28:49,210
also coming to similar conclusions as

789
00:28:47,830 --> 00:28:51,370
say that their idea of the list is not

790
00:28:49,210 --> 00:28:53,320
to be comprehensive but they are like a

791
00:28:51,370 --> 00:28:55,539
lot of other work that tried to define

792
00:28:53,320 --> 00:28:57,100
exploits writing so in my opinion the

793
00:28:55,539 --> 00:28:59,350
precursor like one of the very first

794
00:28:57,100 --> 00:29:02,678
work to really define exploit writing

795
00:28:59,350 --> 00:29:04,570
was by JIRA all the way back in the

796
00:29:02,679 --> 00:29:06,610
2000s in the beginning of the 2000s and

797
00:29:04,570 --> 00:29:08,649
he was the person who defined that

798
00:29:06,610 --> 00:29:10,809
exploit primitives so the idea is like

799
00:29:08,649 --> 00:29:12,610
instead of looking into every case as

800
00:29:10,809 --> 00:29:14,649
hey here is a technique and the

801
00:29:12,610 --> 00:29:16,389
technique works only in this case he

802
00:29:14,649 --> 00:29:18,370
started like trying to teach people on

803
00:29:16,390 --> 00:29:19,779
hey look into the primitives look into

804
00:29:18,370 --> 00:29:22,090
what the vulnerability is basically

805
00:29:19,779 --> 00:29:24,460
exposing and then you use that exposure

806
00:29:22,090 --> 00:29:26,260
to control and end up achieving the

807
00:29:24,460 --> 00:29:28,419
objective of the exploit so I think like

808
00:29:26,260 --> 00:29:30,129
this was a great work as I mentioned

809
00:29:28,419 --> 00:29:31,179
Microsoft has been doing a lot of good

810
00:29:30,130 --> 00:29:33,490
work on that right

811
00:29:31,179 --> 00:29:36,240
I think they open is that Microsoft has

812
00:29:33,490 --> 00:29:38,230
been showing with hyper-v for example is

813
00:29:36,240 --> 00:29:39,490
impressive right they basically

814
00:29:38,230 --> 00:29:42,010
releasing the internals of the

815
00:29:39,490 --> 00:29:43,750
architecture tools and ideas on how the

816
00:29:42,010 --> 00:29:46,029
design works so other researchers can

817
00:29:43,750 --> 00:29:48,820
basically speed up and start working in

818
00:29:46,029 --> 00:29:51,429
hyper-v faster than the nothing sharing

819
00:29:48,820 --> 00:29:53,620
like details on how exploits bypass the

820
00:29:51,429 --> 00:29:55,210
mitigations and all in a Dave Western

821
00:29:53,620 --> 00:29:58,178
and Matt Miller has been also giving

822
00:29:55,210 --> 00:29:59,799
presentations on the mitigation strategy

823
00:29:58,179 --> 00:30:01,809
and the numbers that they see and what

824
00:29:59,799 --> 00:30:04,179
made them actually come up with some

825
00:30:01,809 --> 00:30:05,620
solutions I really recommend folks

826
00:30:04,179 --> 00:30:09,789
should look into those materials because

827
00:30:05,620 --> 00:30:12,610
they are essential I also do like a head

828
00:30:09,789 --> 00:30:13,990
like a smallish think on on defining a

829
00:30:12,610 --> 00:30:16,330
little bit more about like exploits

830
00:30:13,990 --> 00:30:18,519
writing so a while back a professor of

831
00:30:16,330 --> 00:30:21,879
mine basically challenged me to define

832
00:30:18,519 --> 00:30:23,350
my profession with using set theory I

833
00:30:21,880 --> 00:30:25,539
didn't like the idea like it is a

834
00:30:23,350 --> 00:30:27,879
mathematics profession or I was like an

835
00:30:25,539 --> 00:30:29,980
exploit writer and basically like he

836
00:30:27,880 --> 00:30:31,240
basically wanted to challenge me at the

837
00:30:29,980 --> 00:30:33,220
time I didn't really give a lot of

838
00:30:31,240 --> 00:30:35,980
attention to the work that I presented

839
00:30:33,220 --> 00:30:36,909
but didn't like along the ears many

840
00:30:35,980 --> 00:30:38,289
times when I was discussing

841
00:30:36,909 --> 00:30:39,100
vulnerabilities and was discussing

842
00:30:38,289 --> 00:30:41,440
mitigations

843
00:30:39,100 --> 00:30:44,500
I used it the model to explain it

844
00:30:41,440 --> 00:30:46,899
everything like a like some co-workers

845
00:30:44,500 --> 00:30:48,700
and I end up writing a paper recently to

846
00:30:46,899 --> 00:30:50,949
try to explain a little bit about this

847
00:30:48,700 --> 00:30:52,899
model and of them like I I recommend

848
00:30:50,950 --> 00:30:54,730
folks to have a to have a read on it

849
00:30:52,899 --> 00:30:56,439
just in case they're like you are

850
00:30:54,730 --> 00:30:58,960
interested in and see all their ideas

851
00:30:56,440 --> 00:31:00,550
there but essentially in or work what we

852
00:30:58,960 --> 00:31:02,560
try to define is that X

853
00:31:00,550 --> 00:31:04,899
by primitives can be combined together

854
00:31:02,560 --> 00:31:06,850
to get into an exploit objective right

855
00:31:04,900 --> 00:31:09,550
the exploit primitives that we define it

856
00:31:06,850 --> 00:31:11,709
we use it from like a what a packaging

857
00:31:09,550 --> 00:31:13,600
has published that are the exploit

858
00:31:11,710 --> 00:31:15,010
primitives that they use in their today

859
00:31:13,600 --> 00:31:17,230
in this presentation I will show that

860
00:31:15,010 --> 00:31:18,760
this is not a complete list like I will

861
00:31:17,230 --> 00:31:20,740
show a case of a vulnerability that

862
00:31:18,760 --> 00:31:23,770
doesn't fit on the exploit primitives

863
00:31:20,740 --> 00:31:26,140
that are in this list but it was like it

864
00:31:23,770 --> 00:31:27,879
unlike what was available at the time I

865
00:31:26,140 --> 00:31:29,920
also don't like I believe that they

866
00:31:27,880 --> 00:31:32,020
exploit a difficulty is something that

867
00:31:29,920 --> 00:31:34,120
is very hard for us to measure so we

868
00:31:32,020 --> 00:31:35,889
tried to use like a big ol notation to

869
00:31:34,120 --> 00:31:40,060
try to define a complexity for an

870
00:31:35,890 --> 00:31:42,850
exploit we also don't like a user the

871
00:31:40,060 --> 00:31:45,490
definition that a shy girl and I use it

872
00:31:42,850 --> 00:31:49,000
for a talk that we gave by the way the

873
00:31:45,490 --> 00:31:51,370
talk was was in Russia on probabilistic

874
00:31:49,000 --> 00:31:54,280
versus deterministic mitigations where

875
00:31:51,370 --> 00:31:57,399
we try to make the case that encryption

876
00:31:54,280 --> 00:31:59,770
if properly used many times become a

877
00:31:57,400 --> 00:32:01,990
deterministic mitigation but if it's not

878
00:31:59,770 --> 00:32:04,900
properly used then maybe it is just

879
00:32:01,990 --> 00:32:06,640
deterministic and you can break a secure

880
00:32:04,900 --> 00:32:08,170
solution based on encryption without

881
00:32:06,640 --> 00:32:11,650
necessarily breaking the encryption I

882
00:32:08,170 --> 00:32:13,720
will give an example in a minute so what

883
00:32:11,650 --> 00:32:16,150
is this new primitive that I mentioned

884
00:32:13,720 --> 00:32:19,390
that was was missing in the work and we

885
00:32:16,150 --> 00:32:21,790
call this primitive no obliviousness so

886
00:32:19,390 --> 00:32:24,160
what it really means imagine that you

887
00:32:21,790 --> 00:32:26,530
have a scenario where an attacker can

888
00:32:24,160 --> 00:32:28,570
see memory being modified the attacker

889
00:32:26,530 --> 00:32:29,230
can see that there is something that is

890
00:32:28,570 --> 00:32:32,409
going on

891
00:32:29,230 --> 00:32:35,080
we totally start listing contents that

892
00:32:32,410 --> 00:32:36,550
attacker is blind for the content but

893
00:32:35,080 --> 00:32:38,379
the attacker is not blind to the fact

894
00:32:36,550 --> 00:32:41,470
that the content is being played with

895
00:32:38,380 --> 00:32:43,300
for modified interesting enough exploit

896
00:32:41,470 --> 00:32:45,910
writers have been abusing that if you

897
00:32:43,300 --> 00:32:47,830
think about glitching glitching needs to

898
00:32:45,910 --> 00:32:49,420
be done in a certain time how do you

899
00:32:47,830 --> 00:32:50,290
know the exact moment it could be a

900
00:32:49,420 --> 00:32:53,080
time-based

901
00:32:50,290 --> 00:32:54,970
analysis that you know after certain

902
00:32:53,080 --> 00:32:56,919
clocks you were in a given position of

903
00:32:54,970 --> 00:32:59,050
the execution so you know you can glitch

904
00:32:56,920 --> 00:33:01,630
and win but like in a sense you don't

905
00:32:59,050 --> 00:33:03,159
really know the content but we still are

906
00:33:01,630 --> 00:33:03,780
not oblivious to the fact that you were

907
00:33:03,160 --> 00:33:06,730
there

908
00:33:03,780 --> 00:33:08,560
no obliviousness actually exists when we

909
00:33:06,730 --> 00:33:10,990
start talking about memory encryption

910
00:33:08,560 --> 00:33:12,610
and I will give an example of what is

911
00:33:10,990 --> 00:33:13,630
that so we measure that you have a

912
00:33:12,610 --> 00:33:16,959
system

913
00:33:13,630 --> 00:33:19,120
you have like the CPU core in caches up

914
00:33:16,960 --> 00:33:21,340
with playing memory of like playing data

915
00:33:19,120 --> 00:33:23,110
but every time that something goes to

916
00:33:21,340 --> 00:33:25,510
the main memory it passes through an

917
00:33:23,110 --> 00:33:27,699
encryption device and essentially in the

918
00:33:25,510 --> 00:33:30,610
main memory the data is encrypted while

919
00:33:27,700 --> 00:33:33,100
in the cache it is not so every time the

920
00:33:30,610 --> 00:33:35,469
CPU access something the CPU sees the

921
00:33:33,100 --> 00:33:37,870
data as unencrypted it's transparent to

922
00:33:35,470 --> 00:33:41,169
the CPU but the main memory the data is

923
00:33:37,870 --> 00:33:43,149
actually encrypted of course they're

924
00:33:41,169 --> 00:33:44,559
like there are many technologies that do

925
00:33:43,150 --> 00:33:47,230
memory encryption so just to be very

926
00:33:44,559 --> 00:33:48,760
clear I'm not trying to say above any

927
00:33:47,230 --> 00:33:50,049
Intel technology specifically there are

928
00:33:48,760 --> 00:33:52,360
many technologies I will give a list

929
00:33:50,049 --> 00:33:53,918
those technologies are have all

930
00:33:52,360 --> 00:33:55,990
different implementations and as I

931
00:33:53,919 --> 00:33:57,309
mentioned implementation does matter but

932
00:33:55,990 --> 00:33:58,720
this is a list of like some of

933
00:33:57,309 --> 00:34:00,760
technologies that to have memory

934
00:33:58,720 --> 00:34:02,650
encryption just so people understand

935
00:34:00,760 --> 00:34:04,120
that while everybody's talking about

936
00:34:02,650 --> 00:34:05,919
memory encryption in desktops and

937
00:34:04,120 --> 00:34:09,489
servers this is not really something

938
00:34:05,919 --> 00:34:12,100
that new right so Xbox maintained or the

939
00:34:09,489 --> 00:34:15,879
securing clear a caesarian in Apple M EE

940
00:34:12,100 --> 00:34:17,618
in Intel which does SGX right AMD is

941
00:34:15,879 --> 00:34:20,350
releasing solutions on that as well

942
00:34:17,619 --> 00:34:22,300
right so memory encryption is actually

943
00:34:20,350 --> 00:34:25,210
something super interesting because now

944
00:34:22,300 --> 00:34:28,600
if an attacker somehow managed to read

945
00:34:25,210 --> 00:34:30,490
memory the contents are encrypted if the

946
00:34:28,600 --> 00:34:32,469
second modify the memory because the

947
00:34:30,489 --> 00:34:33,638
attacker don't have the key there is an

948
00:34:32,469 --> 00:34:35,500
encryption that happens in the

949
00:34:33,639 --> 00:34:37,330
modification when the CPU will basically

950
00:34:35,500 --> 00:34:39,489
try to read basically data's decrypted

951
00:34:37,330 --> 00:34:41,230
right since the data will be decrypted

952
00:34:39,489 --> 00:34:43,959
with a key that the attacker didn't know

953
00:34:41,230 --> 00:34:45,730
in the end the data is really random for

954
00:34:43,960 --> 00:34:48,159
the attacker so look into how

955
00:34:45,730 --> 00:34:50,139
interesting the attacker can see data be

956
00:34:48,159 --> 00:34:52,300
modified in RAM because the data is

957
00:34:50,139 --> 00:34:53,859
encrypted so but the data is being

958
00:34:52,300 --> 00:34:56,470
modified right so you see that they

959
00:34:53,859 --> 00:34:58,509
encrypt the data modified but you don't

960
00:34:56,469 --> 00:35:00,490
really manage to see the actual data you

961
00:34:58,510 --> 00:35:03,040
can change something but you don't

962
00:35:00,490 --> 00:35:04,390
control the final value of the change so

963
00:35:03,040 --> 00:35:06,400
it's actually super interesting

964
00:35:04,390 --> 00:35:07,240
properties that this create and of

965
00:35:06,400 --> 00:35:08,980
course they're like in their

966
00:35:07,240 --> 00:35:10,899
transparency encryption implementation

967
00:35:08,980 --> 00:35:13,119
different technologies implemented it in

968
00:35:10,900 --> 00:35:14,590
different ways some of them using

969
00:35:13,119 --> 00:35:16,990
Tegrity and replay protection

970
00:35:14,590 --> 00:35:19,150
like for example interim e-readers but

971
00:35:16,990 --> 00:35:21,430
that has a limitation it's very hard to

972
00:35:19,150 --> 00:35:23,589
do it for the entire memory because

973
00:35:21,430 --> 00:35:25,299
where do you really keep the counters

974
00:35:23,589 --> 00:35:26,860
where do you keep your you're basically

975
00:35:25,300 --> 00:35:29,170
like a

976
00:35:26,860 --> 00:35:31,900
tokens that guarantees the integrity 3

977
00:35:29,170 --> 00:35:35,320
is is correct and where do you keep the

978
00:35:31,900 --> 00:35:37,420
copy for the counter of the given area

979
00:35:35,320 --> 00:35:38,800
so you avoid to replace you need

980
00:35:37,420 --> 00:35:40,510
something like that and if you're

981
00:35:38,800 --> 00:35:42,820
talking about memory with for like

982
00:35:40,510 --> 00:35:45,040
multiple Giga big Giga bits of memory

983
00:35:42,820 --> 00:35:48,430
then they estrin to keep all those

984
00:35:45,040 --> 00:35:50,440
threes gets too big so m ee has

985
00:35:48,430 --> 00:35:52,690
limitations it end up only protecting a

986
00:35:50,440 --> 00:35:53,950
small range of memory solutions that

987
00:35:52,690 --> 00:35:56,050
protect the entire memory

988
00:35:53,950 --> 00:36:00,669
they don't use replay protection and

989
00:35:56,050 --> 00:36:03,040
integrity protection so back end in 2016

990
00:36:00,670 --> 00:36:05,080
shy and I represented like some attacks

991
00:36:03,040 --> 00:36:06,580
against like encrypted memory and

992
00:36:05,080 --> 00:36:09,100
basically the like it just like to

993
00:36:06,580 --> 00:36:11,140
explain the attacking in one image the

994
00:36:09,100 --> 00:36:13,870
idea was like we found the locations in

995
00:36:11,140 --> 00:36:16,359
code that first we were able to identify

996
00:36:13,870 --> 00:36:18,520
the location just by seeing the memory

997
00:36:16,360 --> 00:36:20,350
changing because the memory changes in a

998
00:36:18,520 --> 00:36:21,910
pattern that was enough for us to

999
00:36:20,350 --> 00:36:24,069
discover where the change was happening

1000
00:36:21,910 --> 00:36:25,660
and based in offsets in that change

1001
00:36:24,070 --> 00:36:28,000
because like now we have a block

1002
00:36:25,660 --> 00:36:29,680
encryption we were able to find the

1003
00:36:28,000 --> 00:36:32,140
specific data that we wanted to

1004
00:36:29,680 --> 00:36:34,000
overwrite the add just sent the data so

1005
00:36:32,140 --> 00:36:36,759
for example in this case we want to

1006
00:36:34,000 --> 00:36:40,810
overwrite the pre old flag they are just

1007
00:36:36,760 --> 00:36:42,490
sent the data at you that basically has

1008
00:36:40,810 --> 00:36:45,250
content that you don't care about so you

1009
00:36:42,490 --> 00:36:47,470
can randomly overwrite it and somehow

1010
00:36:45,250 --> 00:36:50,560
the comparison in this case they if

1011
00:36:47,470 --> 00:36:52,569
there is just like a not zero comparison

1012
00:36:50,560 --> 00:36:54,490
so if you overwrite with any random

1013
00:36:52,570 --> 00:36:56,560
value as long as that value you were not

1014
00:36:54,490 --> 00:36:58,750
unelected enough that the value ends up

1015
00:36:56,560 --> 00:37:00,520
being zero you win as an attacker and

1016
00:36:58,750 --> 00:37:02,980
you end up log in to the machine without

1017
00:37:00,520 --> 00:37:04,630
actually using the password so we showed

1018
00:37:02,980 --> 00:37:07,330
this attack against like an encrypted

1019
00:37:04,630 --> 00:37:08,920
memory another like it works right but

1020
00:37:07,330 --> 00:37:10,420
of course there like there is always a

1021
00:37:08,920 --> 00:37:12,460
question when you demonstrate a new

1022
00:37:10,420 --> 00:37:14,140
attack against a new technology using a

1023
00:37:12,460 --> 00:37:16,210
completely different primitive which is

1024
00:37:14,140 --> 00:37:18,759
the norm obliviousness the question is

1025
00:37:16,210 --> 00:37:21,300
can we fix this just by fixing software

1026
00:37:18,760 --> 00:37:22,960
in this case obviously this login code

1027
00:37:21,300 --> 00:37:24,730
can be improved

1028
00:37:22,960 --> 00:37:26,770
right you could compare with a specific

1029
00:37:24,730 --> 00:37:29,110
value like flag should be one for

1030
00:37:26,770 --> 00:37:31,330
example and then the attack is going you

1031
00:37:29,110 --> 00:37:33,700
could do these improvements straight in

1032
00:37:31,330 --> 00:37:36,220
the compiler and overall over time all

1033
00:37:33,700 --> 00:37:38,589
this software would be improved at some

1034
00:37:36,220 --> 00:37:39,549
point so is it worth to do something

1035
00:37:38,590 --> 00:37:41,650
better in the hardware

1036
00:37:39,550 --> 00:37:43,420
that's a really big question and we need

1037
00:37:41,650 --> 00:37:45,490
the offensive research to actually be

1038
00:37:43,420 --> 00:37:47,410
able to answer the question so we have

1039
00:37:45,490 --> 00:37:49,479
to like look into it to see if there is

1040
00:37:47,410 --> 00:37:51,069
anything else that an attacker could do

1041
00:37:49,480 --> 00:37:54,130
that is different than counting on this

1042
00:37:51,070 --> 00:37:55,720
not zero comparisons and this are over

1043
00:37:54,130 --> 00:37:57,850
rights that are random but is still the

1044
00:37:55,720 --> 00:37:59,680
attacker wins and basically the like a

1045
00:37:57,850 --> 00:38:02,020
let's try to abstract a lot what is

1046
00:37:59,680 --> 00:38:04,118
really going on and look more in in a

1047
00:38:02,020 --> 00:38:05,680
very simple picture basically the memory

1048
00:38:04,119 --> 00:38:08,830
when when you have like a memory

1049
00:38:05,680 --> 00:38:10,960
encryption becomes blocks of a head of

1050
00:38:08,830 --> 00:38:15,430
28 bits in this case I am assuming like

1051
00:38:10,960 --> 00:38:17,320
the encryption is using AES 120 so the

1052
00:38:15,430 --> 00:38:19,720
blocks so the memory basically becomes

1053
00:38:17,320 --> 00:38:22,090
blocks of 128 bits so every time you

1054
00:38:19,720 --> 00:38:23,439
touch something on a block everything on

1055
00:38:22,090 --> 00:38:26,380
the block changes it's one of the

1056
00:38:23,440 --> 00:38:28,600
properties of the encryption right every

1057
00:38:26,380 --> 00:38:30,430
time that the CPU fetches things do like

1058
00:38:28,600 --> 00:38:32,140
it gets into the playing memory that's

1059
00:38:30,430 --> 00:38:35,950
what the CPU sees that's inside the

1060
00:38:32,140 --> 00:38:38,560
caches right what can you what can an

1061
00:38:35,950 --> 00:38:41,140
attacker do is that different than the

1062
00:38:38,560 --> 00:38:43,360
normal encryption for data at rest when

1063
00:38:41,140 --> 00:38:45,940
you use in the data and it just happens

1064
00:38:43,360 --> 00:38:48,760
it is actually there like a if you

1065
00:38:45,940 --> 00:38:51,480
really look into it this block of 128

1066
00:38:48,760 --> 00:38:53,980
bits it's actually very big if you think

1067
00:38:51,480 --> 00:38:56,320
inside a block like that you might have

1068
00:38:53,980 --> 00:38:58,630
like much more different variables of a

1069
00:38:56,320 --> 00:39:01,000
given program so for example variable a

1070
00:38:58,630 --> 00:39:03,190
in this example is an 8 bits variable

1071
00:39:01,000 --> 00:39:05,800
variable B is a 16 bits verbal verbal C

1072
00:39:03,190 --> 00:39:08,500
is a 32 bits variable interesting enough

1073
00:39:05,800 --> 00:39:10,300
if you flip a bit in variable B it's

1074
00:39:08,500 --> 00:39:13,570
going to flip in all the others in the

1075
00:39:10,300 --> 00:39:17,109
block but each variable is a different

1076
00:39:13,570 --> 00:39:18,640
size the chances for the flip should be

1077
00:39:17,109 --> 00:39:20,290
something that the attacker wants to be

1078
00:39:18,640 --> 00:39:22,390
the final value of the attacker once

1079
00:39:20,290 --> 00:39:24,730
it's based on the size of that variable

1080
00:39:22,390 --> 00:39:25,960
not on the size of the entire block so

1081
00:39:24,730 --> 00:39:28,300
if you really want to attack only

1082
00:39:25,960 --> 00:39:30,460
variable a and somehow you don't care

1083
00:39:28,300 --> 00:39:32,500
about blocks variable BC or anything

1084
00:39:30,460 --> 00:39:34,090
else that is on the block the chances

1085
00:39:32,500 --> 00:39:37,780
for you choose to see these two to the

1086
00:39:34,090 --> 00:39:38,800
eighth and now you start seeing that

1087
00:39:37,780 --> 00:39:40,359
they're like even though you have

1088
00:39:38,800 --> 00:39:42,400
encryption is a hundred twenty eight

1089
00:39:40,359 --> 00:39:44,350
bits just the fact that the data is not

1090
00:39:42,400 --> 00:39:46,900
at rest but the data is actually

1091
00:39:44,350 --> 00:39:49,900
consumed already changing the properties

1092
00:39:46,900 --> 00:39:52,960
of that system brute-forcing is actually

1093
00:39:49,900 --> 00:39:54,760
very realistic in in do scenarios

1094
00:39:52,960 --> 00:39:56,890
and then the Leica we're like okay what

1095
00:39:54,760 --> 00:39:59,170
is really a feasible brute-force here so

1096
00:39:56,890 --> 00:40:00,879
we'll need to find like a a data

1097
00:39:59,170 --> 00:40:03,430
structure that has many different

1098
00:40:00,880 --> 00:40:05,140
elements with different sizes hopefully

1099
00:40:03,430 --> 00:40:07,598
one of those elements is of your

1100
00:40:05,140 --> 00:40:09,819
interest and the size is something that

1101
00:40:07,599 --> 00:40:12,190
you can brute force so for example a

1102
00:40:09,819 --> 00:40:16,660
32-bit size the brute force in time is

1103
00:40:12,190 --> 00:40:19,720
like 15 minutes so 32 bits is a good

1104
00:40:16,660 --> 00:40:21,430
maximum size if the other elements are

1105
00:40:19,720 --> 00:40:23,680
changed it doesn't really crash this

1106
00:40:21,430 --> 00:40:25,328
system or didn't really change the

1107
00:40:23,680 --> 00:40:27,098
location or de state of that system

1108
00:40:25,329 --> 00:40:29,200
because you want to brute force you

1109
00:40:27,099 --> 00:40:31,359
don't want every time you do it if it

1110
00:40:29,200 --> 00:40:33,069
crashes usually those systems because

1111
00:40:31,359 --> 00:40:35,109
it's transparent memory encryption what

1112
00:40:33,069 --> 00:40:36,970
these systems do is after reboot time

1113
00:40:35,109 --> 00:40:38,290
it's regenerated the keys so all the

1114
00:40:36,970 --> 00:40:39,609
data is kind of going in in each you

1115
00:40:38,290 --> 00:40:42,130
start to overwrite so you don't want to

1116
00:40:39,609 --> 00:40:43,328
cause a crash anything like that you

1117
00:40:42,130 --> 00:40:44,680
also didn't like a remember the

1118
00:40:43,329 --> 00:40:46,720
primitives right you have them no

1119
00:40:44,680 --> 00:40:48,098
oblivion its primitive you need to have

1120
00:40:46,720 --> 00:40:49,959
those primitives right you need to be

1121
00:40:48,099 --> 00:40:51,490
able to write to the main memory even

1122
00:40:49,960 --> 00:40:53,200
though it's encrypted you need to be

1123
00:40:51,490 --> 00:40:55,209
able to write an arbitrary amount of

1124
00:40:53,200 --> 00:40:57,700
time anytime and you need to be no

1125
00:40:55,210 --> 00:41:00,849
oblivious of course they're like I

1126
00:40:57,700 --> 00:41:02,140
having out that sounds possible but then

1127
00:41:00,849 --> 00:41:04,089
like it the only way to differentiate

1128
00:41:02,140 --> 00:41:06,520
theory from process is finding it at

1129
00:41:04,089 --> 00:41:09,700
least one case that it applies in other

1130
00:41:06,520 --> 00:41:12,400
like ax I like a phrase by no year nor

1131
00:41:09,700 --> 00:41:15,069
is like an amazing exploit writer and he

1132
00:41:12,400 --> 00:41:16,540
basically also he was looking to all the

1133
00:41:15,069 --> 00:41:18,910
requirements should write a modern and

1134
00:41:16,540 --> 00:41:21,058
hip overflow exploit and he basically

1135
00:41:18,910 --> 00:41:23,589
asked it if it's possible to basically

1136
00:41:21,059 --> 00:41:25,059
cook a pie with all these ingredients

1137
00:41:23,589 --> 00:41:26,950
right because it's way too many

1138
00:41:25,059 --> 00:41:28,750
requirements so it'll look sometimes

1139
00:41:26,950 --> 00:41:30,700
that it's not realistic but unlike we

1140
00:41:28,750 --> 00:41:33,160
found an easy example right the Linux

1141
00:41:30,700 --> 00:41:35,680
kernel it manages processes using a

1142
00:41:33,160 --> 00:41:37,240
structure called task struct those

1143
00:41:35,680 --> 00:41:38,919
structures they have like elements that

1144
00:41:37,240 --> 00:41:40,629
then I control the process right

1145
00:41:38,920 --> 00:41:42,520
inside then one of these structures that

1146
00:41:40,630 --> 00:41:44,530
it controls basically privileges of that

1147
00:41:42,520 --> 00:41:46,480
process and basically they don't like

1148
00:41:44,530 --> 00:41:48,430
for this primitive list it's a pointer

1149
00:41:46,480 --> 00:41:50,349
to another data structure this data

1150
00:41:48,430 --> 00:41:52,390
structure is allocated by like eyes

1151
00:41:50,349 --> 00:41:54,220
model objects pool they don't like I you

1152
00:41:52,390 --> 00:41:55,540
can see that they don't like the

1153
00:41:54,220 --> 00:41:57,939
allocations are happening so you can

1154
00:41:55,540 --> 00:41:59,950
find the allocations happening in memory

1155
00:41:57,940 --> 00:42:02,049
so you can find the location of your

1156
00:41:59,950 --> 00:42:04,868
allocation if you are able to expand the

1157
00:42:02,049 --> 00:42:06,610
process multiple times given that you

1158
00:42:04,869 --> 00:42:08,470
are required then no oblivion

1159
00:42:06,610 --> 00:42:10,120
you know the location you know the

1160
00:42:08,470 --> 00:42:12,370
changes and you are able to identify the

1161
00:42:10,120 --> 00:42:14,290
data when to overwrite and then the like

1162
00:42:12,370 --> 00:42:16,750
this is the data structure right so it's

1163
00:42:14,290 --> 00:42:18,550
a bunch of like 32-bit elements and if

1164
00:42:16,750 --> 00:42:20,680
you manage to brute force they you the

1165
00:42:18,550 --> 00:42:23,440
effective user ID and get the effective

1166
00:42:20,680 --> 00:42:26,169
user ID to be zero at some point you win

1167
00:42:23,440 --> 00:42:29,110
since it's the 32 bits you have 2 to the

1168
00:42:26,170 --> 00:42:31,270
power of 32 chances to actually win the

1169
00:42:29,110 --> 00:42:33,760
fact that the effective user ID is never

1170
00:42:31,270 --> 00:42:36,040
tested for invalid values doesn't matter

1171
00:42:33,760 --> 00:42:37,960
what value you put there the system

1172
00:42:36,040 --> 00:42:40,540
continues your process continues

1173
00:42:37,960 --> 00:42:42,430
executing it will not just crash so you

1174
00:42:40,540 --> 00:42:45,009
can basically do the attack in 15

1175
00:42:42,430 --> 00:42:48,460
minutes and elevate any process on the

1176
00:42:45,010 --> 00:42:49,900
system should be root so the attack is

1177
00:42:48,460 --> 00:42:52,030
possible even though the memory is

1178
00:42:49,900 --> 00:42:54,670
encrypted even though there is a lot of

1179
00:42:52,030 --> 00:42:56,530
limitations there like a defect that

1180
00:42:54,670 --> 00:42:58,840
they no obliviousness property is there

1181
00:42:56,530 --> 00:43:00,700
the fact that all these primitives that

1182
00:42:58,840 --> 00:43:02,830
I mentioned they're the arbitrary

1183
00:43:00,700 --> 00:43:04,839
address is partially arbitrary content

1184
00:43:02,830 --> 00:43:06,490
arbitrary number of times all of that is

1185
00:43:04,840 --> 00:43:08,260
in the sense of this attacker because

1186
00:43:06,490 --> 00:43:09,669
the memory encryption is trying to

1187
00:43:08,260 --> 00:43:12,130
protect against this attacker that can

1188
00:43:09,670 --> 00:43:14,650
touch memory directly this attacker is

1189
00:43:12,130 --> 00:43:17,100
so powerful that memory encryption did

1190
00:43:14,650 --> 00:43:20,320
not really blade or block yet

1191
00:43:17,100 --> 00:43:23,700
so is it memory encryption really

1192
00:43:20,320 --> 00:43:25,840
valuable or not or is Intel and AMD

1193
00:43:23,700 --> 00:43:27,910
investing in technologies that maybe

1194
00:43:25,840 --> 00:43:29,380
they're like will not necessarily

1195
00:43:27,910 --> 00:43:31,899
prevent the attacks that they claiming

1196
00:43:29,380 --> 00:43:33,550
it will notice that like this example

1197
00:43:31,900 --> 00:43:35,020
assumes that unlike the physical machine

1198
00:43:33,550 --> 00:43:36,880
access but the memory encryption

1199
00:43:35,020 --> 00:43:38,620
technologies they also have like these

1200
00:43:36,880 --> 00:43:40,150
ones based on hypervisor right where

1201
00:43:38,620 --> 00:43:42,339
every time you change a guest join other

1202
00:43:40,150 --> 00:43:44,200
guest it basically changes also the

1203
00:43:42,340 --> 00:43:46,030
encryption key so one guest in theory

1204
00:43:44,200 --> 00:43:47,950
would not be able to assess the memory

1205
00:43:46,030 --> 00:43:49,930
of another guest even if their there is

1206
00:43:47,950 --> 00:43:51,549
a vulnerability the hypervisor will not

1207
00:43:49,930 --> 00:43:54,250
be able to access the ghast memory even

1208
00:43:51,550 --> 00:43:55,900
though might be a vulnerability it's

1209
00:43:54,250 --> 00:43:58,720
exactly the same technology the same

1210
00:43:55,900 --> 00:44:00,940
principles of attacking it apply there

1211
00:43:58,720 --> 00:44:02,919
are limitations the truth is this

1212
00:44:00,940 --> 00:44:04,360
technologies they do raise the bar but

1213
00:44:02,920 --> 00:44:06,400
they're like it's really they're like

1214
00:44:04,360 --> 00:44:08,500
raising the bar enough here or those

1215
00:44:06,400 --> 00:44:10,420
technologies need more we thought more

1216
00:44:08,500 --> 00:44:12,640
research and more offensive work on this

1217
00:44:10,420 --> 00:44:14,890
area to find the cases to find the

1218
00:44:12,640 --> 00:44:17,620
limitations to see if those cases are

1219
00:44:14,890 --> 00:44:19,240
super rare or if those cases are really

1220
00:44:17,620 --> 00:44:20,250
doing like common and happening

1221
00:44:19,240 --> 00:44:22,229
everywhere

1222
00:44:20,250 --> 00:44:24,830
it's very hard to define the

1223
00:44:22,230 --> 00:44:28,380
effectiveness of something like that

1224
00:44:24,830 --> 00:44:30,540
of course oh my god I work for Intel

1225
00:44:28,380 --> 00:44:32,730
right I want everybody to go and go to

1226
00:44:30,540 --> 00:44:34,440
the latest and and most modern but

1227
00:44:32,730 --> 00:44:36,060
they're like there are like it's not a

1228
00:44:34,440 --> 00:44:38,580
platter say it's not gonna solve all the

1229
00:44:36,060 --> 00:44:40,799
problems right more attack and more

1230
00:44:38,580 --> 00:44:42,270
research is necessary the world is still

1231
00:44:40,800 --> 00:44:43,710
needs to evolve right we still need the

1232
00:44:42,270 --> 00:44:45,450
technology to be there otherwise how

1233
00:44:43,710 --> 00:44:48,030
more researchers will look into it right

1234
00:44:45,450 --> 00:44:50,520
I was privileged enough to have access

1235
00:44:48,030 --> 00:44:52,530
to early versions of the implementations

1236
00:44:50,520 --> 00:44:54,210
so I could basically look into it but

1237
00:44:52,530 --> 00:44:56,340
they're like a we need more people to

1238
00:44:54,210 --> 00:44:59,010
look into those problems and how those

1239
00:44:56,340 --> 00:45:01,020
problems affect us and I think they're

1240
00:44:59,010 --> 00:45:02,369
like without formalizing this process we

1241
00:45:01,020 --> 00:45:04,290
taught to look into what are the

1242
00:45:02,369 --> 00:45:06,270
primitives what a given mitigation

1243
00:45:04,290 --> 00:45:09,630
really kills in terms of primitives it's

1244
00:45:06,270 --> 00:45:11,520
very very hard to define how effective a

1245
00:45:09,630 --> 00:45:13,680
given attack will be or not to be

1246
00:45:11,520 --> 00:45:16,890
against that mitigation I think doing

1247
00:45:13,680 --> 00:45:19,169
like this is something important of

1248
00:45:16,890 --> 00:45:21,839
course they're like there are many other

1249
00:45:19,170 --> 00:45:23,730
things that for this vulnerability to be

1250
00:45:21,840 --> 00:45:25,500
demonstrated and to be exploitable that

1251
00:45:23,730 --> 00:45:28,830
you need right you also need the

1252
00:45:25,500 --> 00:45:30,390
alignment so for example a either

1253
00:45:28,830 --> 00:45:32,279
they're like you were lucky and then

1254
00:45:30,390 --> 00:45:33,900
like a day they the target of your

1255
00:45:32,280 --> 00:45:36,240
data's are read align it in a good way

1256
00:45:33,900 --> 00:45:37,560
or don't like I you need to find a data

1257
00:45:36,240 --> 00:45:40,229
set that they're like doesn't matter the

1258
00:45:37,560 --> 00:45:41,940
alignment in the 128 bits block you

1259
00:45:40,230 --> 00:45:43,950
always win because everything you

1260
00:45:41,940 --> 00:45:46,140
overwrite there other than your target

1261
00:45:43,950 --> 00:45:48,060
for the brute force will not matter and

1262
00:45:46,140 --> 00:45:50,339
in this case they don't like it this fit

1263
00:45:48,060 --> 00:45:52,830
okay like a day the specific attack it

1264
00:45:50,339 --> 00:45:53,520
does like I work well against this data

1265
00:45:52,830 --> 00:45:56,190
structure

1266
00:45:53,520 --> 00:45:57,869
I don't like a also you define it like

1267
00:45:56,190 --> 00:45:59,520
what are the requirements what are the

1268
00:45:57,869 --> 00:46:01,260
primitives what is the mitigation and

1269
00:45:59,520 --> 00:46:02,730
then you find the case it's just a

1270
00:46:01,260 --> 00:46:04,530
matter of like doing a simple table

1271
00:46:02,730 --> 00:46:06,240
right you can go and look into what is

1272
00:46:04,530 --> 00:46:08,250
the premise that you had for an attacker

1273
00:46:06,240 --> 00:46:10,410
that should be successful and then if

1274
00:46:08,250 --> 00:46:12,240
the given case gives you those premises

1275
00:46:10,410 --> 00:46:14,160
and if it does you know that that

1276
00:46:12,240 --> 00:46:16,680
mitigation will not be effective against

1277
00:46:14,160 --> 00:46:18,810
this attack right and in this case you

1278
00:46:16,680 --> 00:46:21,240
know like as you can see it's always as

1279
00:46:18,810 --> 00:46:23,700
yes writer so basically they're like we

1280
00:46:21,240 --> 00:46:26,098
know that there will be a possibility

1281
00:46:23,700 --> 00:46:27,868
for brute-forcing attacks and the

1282
00:46:26,099 --> 00:46:30,599
attacker is C winning even though you

1283
00:46:27,869 --> 00:46:32,190
have memory encryption right so memory

1284
00:46:30,599 --> 00:46:33,510
encryption is still helpful in many

1285
00:46:32,190 --> 00:46:34,170
scenarios right if you have an

1286
00:46:33,510 --> 00:46:36,090
accidental

1287
00:46:34,170 --> 00:46:38,040
memory leak an accidental memory

1288
00:46:36,090 --> 00:46:40,350
overwrite that is not very well

1289
00:46:38,040 --> 00:46:42,600
controlled at or it's just partial or I

1290
00:46:40,350 --> 00:46:45,420
just sent areas memory encryption we

1291
00:46:42,600 --> 00:46:47,430
distill like a be interesting and we

1292
00:46:45,420 --> 00:46:49,470
distill be effective there but there are

1293
00:46:47,430 --> 00:46:52,020
cases where a memory encryption will

1294
00:46:49,470 --> 00:46:53,939
fail and basically will not give you the

1295
00:46:52,020 --> 00:46:57,380
the protection that in theory it would

1296
00:46:53,940 --> 00:47:00,210
people say so I always say that in like

1297
00:46:57,380 --> 00:47:02,940
babe hackers are coming out of aliens

1298
00:47:00,210 --> 00:47:05,310
right and then like that's why I don't

1299
00:47:02,940 --> 00:47:07,770
like understanding makes so much sense

1300
00:47:05,310 --> 00:47:09,840
it's so cool right because yes they're

1301
00:47:07,770 --> 00:47:11,400
like this research as you notice right

1302
00:47:09,840 --> 00:47:14,490
we presented the first version of the

1303
00:47:11,400 --> 00:47:18,030
research in 2016 we started it really in

1304
00:47:14,490 --> 00:47:19,589
2015 and we still nowadays in 2019 we

1305
00:47:18,030 --> 00:47:22,530
are having new results and new findings

1306
00:47:19,590 --> 00:47:24,330
right it does take time a lot of the

1307
00:47:22,530 --> 00:47:26,220
things that we did on the work we're

1308
00:47:24,330 --> 00:47:28,710
wrong with we went after like wrong

1309
00:47:26,220 --> 00:47:30,419
ideas wrong targets couldn't find like

1310
00:47:28,710 --> 00:47:32,400
it in like a cases that made sense that

1311
00:47:30,420 --> 00:47:34,500
were like really realistic but they're

1312
00:47:32,400 --> 00:47:37,350
like any how than like it is still worth

1313
00:47:34,500 --> 00:47:39,090
it but just to be clear right like this

1314
00:47:37,350 --> 00:47:41,310
specific demonstration has a lot of

1315
00:47:39,090 --> 00:47:42,780
limitations is still right we basically

1316
00:47:41,310 --> 00:47:44,640
assuming that there is an unknown

1317
00:47:42,780 --> 00:47:47,010
privilege edge software running inside

1318
00:47:44,640 --> 00:47:49,290
the target that we can use it to control

1319
00:47:47,010 --> 00:47:51,420
like the allocation so we use it to

1320
00:47:49,290 --> 00:47:54,120
control the the spanning of multiple

1321
00:47:51,420 --> 00:47:56,130
processes so if somebody asks me how to

1322
00:47:54,120 --> 00:47:58,589
make it even more realistic this kind of

1323
00:47:56,130 --> 00:48:00,270
attack it would be hey find it like if

1324
00:47:58,590 --> 00:48:02,730
you can interact with a process like

1325
00:48:00,270 --> 00:48:05,850
Apache or like a mail server like in

1326
00:48:02,730 --> 00:48:07,740
jinks a sorry a web server like in jinx

1327
00:48:05,850 --> 00:48:10,589
and do like see if you can interact with

1328
00:48:07,740 --> 00:48:12,810
it and force it to respond new processes

1329
00:48:10,590 --> 00:48:15,810
and we still find that in an encrypted

1330
00:48:12,810 --> 00:48:17,100
memory so if you were able to do that

1331
00:48:15,810 --> 00:48:18,509
then you start having like the

1332
00:48:17,100 --> 00:48:20,220
possibility of like creating these

1333
00:48:18,510 --> 00:48:22,170
conditions like through remote

1334
00:48:20,220 --> 00:48:23,910
interactions in and not with like a

1335
00:48:22,170 --> 00:48:25,980
local interaction in the process so

1336
00:48:23,910 --> 00:48:27,930
there is a still work to do for those

1337
00:48:25,980 --> 00:48:30,510
attacks but they are like an example of

1338
00:48:27,930 --> 00:48:32,430
the importance of formalizing of like

1339
00:48:30,510 --> 00:48:33,990
going for the objectives of looking to

1340
00:48:32,430 --> 00:48:36,029
mitigations in a different angle and

1341
00:48:33,990 --> 00:48:38,569
basically coming up with the limitations

1342
00:48:36,030 --> 00:48:38,570
that they have

1343
00:48:38,670 --> 00:48:41,940
just there likes to conclude this day

1344
00:48:40,500 --> 00:48:44,100
and by the way I will show a video of

1345
00:48:41,940 --> 00:48:45,450
the of the attack working why now where

1346
00:48:44,100 --> 00:48:47,100
are we open for questions

1347
00:48:45,450 --> 00:48:49,169
but just so we don't forget the three

1348
00:48:47,100 --> 00:48:51,180
points right today the main to the three

1349
00:48:49,170 --> 00:48:52,830
reasons were done like I wanted to give

1350
00:48:51,180 --> 00:48:54,779
a talk and I wanted to talk to you

1351
00:48:52,830 --> 00:48:57,690
the first one is there like a a

1352
00:48:54,780 --> 00:49:00,630
mitigation needs to at least solve three

1353
00:48:57,690 --> 00:49:02,580
cases real cases in the past and it and

1354
00:49:00,630 --> 00:49:05,040
it's just so fully right it's not like

1355
00:49:02,580 --> 00:49:07,049
hey it's blocked the actual exploit it

1356
00:49:05,040 --> 00:49:10,140
needs to make the actual vulnerability

1357
00:49:07,050 --> 00:49:12,800
and exploit tomorrow at the least three

1358
00:49:10,140 --> 00:49:15,540
of those so let's try to enforce that

1359
00:49:12,800 --> 00:49:16,620
the second one those proposing a

1360
00:49:15,540 --> 00:49:18,420
mitigation they really need to

1361
00:49:16,620 --> 00:49:20,040
understand the problem right then

1362
00:49:18,420 --> 00:49:22,320
they're staining can be obtained in two

1363
00:49:20,040 --> 00:49:24,720
ways and only two ways in my opinion at

1364
00:49:22,320 --> 00:49:26,490
least one is actually writing exploit

1365
00:49:24,720 --> 00:49:28,189
for the class of vulnerability you

1366
00:49:26,490 --> 00:49:30,689
trying to propose a mitigation to or

1367
00:49:28,190 --> 00:49:33,360
pairing with someone that has a track

1368
00:49:30,690 --> 00:49:35,100
record of doing it anything else in my

1369
00:49:33,360 --> 00:49:36,690
opinion we wind up being mitigations

1370
00:49:35,100 --> 00:49:38,970
that only add complexity and don't

1371
00:49:36,690 --> 00:49:40,350
necessarily solve the problem and

1372
00:49:38,970 --> 00:49:42,359
basically they're like oh of course

1373
00:49:40,350 --> 00:49:44,279
they're like this also brings the point

1374
00:49:42,360 --> 00:49:47,130
that we need to be careful with the new

1375
00:49:44,280 --> 00:49:49,260
primitives right because many times when

1376
00:49:47,130 --> 00:49:51,840
when when a technology changes too much

1377
00:49:49,260 --> 00:49:54,240
do like a new ways of attacking it

1378
00:49:51,840 --> 00:49:57,330
appear I like to use the example of SG

1379
00:49:54,240 --> 00:50:00,720
acts right as Jax before before inter

1380
00:49:57,330 --> 00:50:03,270
releases Jax it was very rare that an OS

1381
00:50:00,720 --> 00:50:05,129
would be considered an attacker to an

1382
00:50:03,270 --> 00:50:08,430
application in user mode that the OS

1383
00:50:05,130 --> 00:50:11,250
controls all the resources right it was

1384
00:50:08,430 --> 00:50:13,440
not normal that as Jax basically changed

1385
00:50:11,250 --> 00:50:15,570
that but because as Jax changed it it

1386
00:50:13,440 --> 00:50:17,310
also brought completely new attacks that

1387
00:50:15,570 --> 00:50:19,620
before that nobody thought about I

1388
00:50:17,310 --> 00:50:22,290
really like the work by Microsoft

1389
00:50:19,620 --> 00:50:24,509
Research against the SGX where they

1390
00:50:22,290 --> 00:50:26,370
basically forcing paging out to

1391
00:50:24,510 --> 00:50:27,930
basically detect parts of the program

1392
00:50:26,370 --> 00:50:29,940
that are running that was super

1393
00:50:27,930 --> 00:50:32,129
interesting and that shows that like

1394
00:50:29,940 --> 00:50:34,440
every time a new technology comes and

1395
00:50:32,130 --> 00:50:36,450
it's religious relative it also brings

1396
00:50:34,440 --> 00:50:38,400
new primitives so you really need to do

1397
00:50:36,450 --> 00:50:40,319
an actual research on it just don't

1398
00:50:38,400 --> 00:50:43,440
assume the world will not be changed by

1399
00:50:40,320 --> 00:50:45,450
by that and of course the last is the

1400
00:50:43,440 --> 00:50:46,770
investments in defense they need to be

1401
00:50:45,450 --> 00:50:48,839
basically benefiting from the

1402
00:50:46,770 --> 00:50:51,150
investments in offense right just

1403
00:50:48,840 --> 00:50:51,920
writing exploits and are for marketing

1404
00:50:51,150 --> 00:50:54,589
which is

1405
00:50:51,920 --> 00:50:56,569
big part of our industry uses experts an

1406
00:50:54,589 --> 00:50:59,839
expert writing just as a marketing tool

1407
00:50:56,569 --> 00:51:01,460
is not really the best right the best

1408
00:50:59,839 --> 00:51:03,680
would be if you really we can guide the

1409
00:51:01,460 --> 00:51:06,079
defense and guide like the improvement

1410
00:51:03,680 --> 00:51:08,359
of like the entire field by using like

1411
00:51:06,079 --> 00:51:11,390
the learnings and and in their offensive

1412
00:51:08,359 --> 00:51:14,058
research in the mitigation space

1413
00:51:11,390 --> 00:51:16,819
remember that the details do matter

1414
00:51:14,059 --> 00:51:18,799
like implementation details make all the

1415
00:51:16,819 --> 00:51:20,720
difference like if you look into other

1416
00:51:18,799 --> 00:51:22,460
papers released on attacking encrypted

1417
00:51:20,720 --> 00:51:25,519
memory many of them are really

1418
00:51:22,460 --> 00:51:27,440
exploiting implementation problems and

1419
00:51:25,519 --> 00:51:30,740
not really didn't like it like the food

1420
00:51:27,440 --> 00:51:33,650
design problems like we try to do so I

1421
00:51:30,740 --> 00:51:35,479
really thank you I have like some time

1422
00:51:33,650 --> 00:51:37,849
for questions I will let the video like

1423
00:51:35,480 --> 00:51:39,140
a be playing like and I just like it

1424
00:51:37,849 --> 00:51:40,549
before we open for the questions

1425
00:51:39,140 --> 00:51:44,259
essentially the video is showing like

1426
00:51:40,549 --> 00:51:46,788
two VMs a victim VM and an attacker VM

1427
00:51:44,260 --> 00:51:49,849
inside the victim VM there is just a

1428
00:51:46,789 --> 00:51:52,369
process that runs as unprivileged

1429
00:51:49,849 --> 00:51:55,279
process this process is only used at you

1430
00:51:52,369 --> 00:51:58,160
respawn multiple child processes so we

1431
00:51:55,279 --> 00:51:59,779
are able to locate in memory where is

1432
00:51:58,160 --> 00:52:01,848
that the data that we want to do the

1433
00:51:59,779 --> 00:52:04,519
brute forcing and then there like the

1434
00:52:01,849 --> 00:52:07,250
the attacker VM is connected to the

1435
00:52:04,519 --> 00:52:08,598
buggers tub on the hypervisor remember

1436
00:52:07,250 --> 00:52:10,430
here that because there is memory

1437
00:52:08,599 --> 00:52:11,809
encryption between guests and the

1438
00:52:10,430 --> 00:52:13,940
hypervisor and they use different keys

1439
00:52:11,809 --> 00:52:15,920
when I am in the hypervisor even though

1440
00:52:13,940 --> 00:52:16,789
I can connect should they stub on the

1441
00:52:15,920 --> 00:52:19,250
guest I

1442
00:52:16,789 --> 00:52:20,839
if I read memory or if I write into

1443
00:52:19,250 --> 00:52:23,390
memory there is encryption going on and

1444
00:52:20,839 --> 00:52:25,069
I don't have the key right so every time

1445
00:52:23,390 --> 00:52:27,259
that I overwrite something it's a random

1446
00:52:25,069 --> 00:52:29,359
value and every time I read something

1447
00:52:27,259 --> 00:52:31,160
it's basically encrypted garbage but I

1448
00:52:29,359 --> 00:52:33,288
su can do the attack right I can still

1449
00:52:31,160 --> 00:52:35,390
do the overrides and and be no oblivious

1450
00:52:33,289 --> 00:52:37,009
to the changes and as you can see almost

1451
00:52:35,390 --> 00:52:38,690
ethically starts doing their over right

1452
00:52:37,009 --> 00:52:41,000
after like finding the location in

1453
00:52:38,690 --> 00:52:42,920
memory basically the values you start

1454
00:52:41,000 --> 00:52:44,450
being like a random values for an

1455
00:52:42,920 --> 00:52:46,250
effective user idea of the target

1456
00:52:44,450 --> 00:52:48,410
process of course not like I printed as

1457
00:52:46,250 --> 00:52:50,839
negative but effective user IDs and sign

1458
00:52:48,410 --> 00:52:53,750
it so it it's just like a assume it is

1459
00:52:50,839 --> 00:52:55,190
just like a big intent and the brute

1460
00:52:53,750 --> 00:52:57,259
force goes on of course then like a DES

1461
00:52:55,190 --> 00:52:58,880
printing is not going for every try the

1462
00:52:57,259 --> 00:53:01,029
try goes into the millions right is

1463
00:52:58,880 --> 00:53:04,069
should the power of 32 so older like a

1464
00:53:01,029 --> 00:53:05,270
there's a la a lot of like tries that

1465
00:53:04,069 --> 00:53:06,830
goes on and

1466
00:53:05,270 --> 00:53:09,290
basically the like at some point it

1467
00:53:06,830 --> 00:53:13,060
adjusts exceeds any any we show like at

1468
00:53:09,290 --> 00:53:13,060
the effective user ID with a zero

