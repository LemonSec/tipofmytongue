1
00:00:23,940 --> 00:00:28,779
all right good afternoon<font color="#CCCCCC"> thank you so</font>

2
00:00:27,340 --> 00:00:30,509
<font color="#E5E5E5">much for being here my name is Daniel</font>

3
00:00:28,779 --> 00:00:33,280
Bohannon<font color="#E5E5E5"> and today I'll be talking about</font>

4
00:00:30,510 --> 00:00:34,989
<font color="#CCCCCC">powershot occupation</font><font color="#E5E5E5"> in particular a</font>

5
00:00:33,280 --> 00:00:37,600
tool that<font color="#E5E5E5"> I released last month called</font>

6
00:00:34,989 --> 00:00:41,320
<font color="#E5E5E5">in book cradle crafter and hopefully</font>

7
00:00:37,600 --> 00:00:42,940
<font color="#E5E5E5">that'll be interesting</font><font color="#CCCCCC"> so just a quick</font>

8
00:00:41,320 --> 00:00:44,890
blurb<font color="#CCCCCC"> about me I'm an incident response</font>

9
00:00:42,940 --> 00:00:46,210
consultant with mandiant based out of

10
00:00:44,890 --> 00:00:49,110
the Washington<font color="#E5E5E5"> DC area</font>

11
00:00:46,210 --> 00:00:51,339
<font color="#E5E5E5">and I've been there</font><font color="#CCCCCC"> for</font><font color="#E5E5E5"> about two years</font>

12
00:00:49,110 --> 00:00:53,440
<font color="#E5E5E5">and I'm kind of</font><font color="#CCCCCC"> been transitioning</font><font color="#E5E5E5"> into</font>

13
00:00:51,339 --> 00:00:55,480
more<font color="#CCCCCC"> of a research role at</font><font color="#E5E5E5"> mandiant with</font>

14
00:00:53,440 --> 00:00:56,440
detection<font color="#E5E5E5"> research evasion basically the</font>

15
00:00:55,480 --> 00:00:59,559
kind<font color="#CCCCCC"> of stuff we'll be talking about</font>

16
00:00:56,440 --> 00:01:01,150
today prior<font color="#CCCCCC"> to</font><font color="#E5E5E5"> that</font><font color="#CCCCCC"> I was actually</font>

17
00:00:59,559 --> 00:01:02,709
<font color="#E5E5E5">working working for five years in</font>

18
00:01:01,150 --> 00:01:05,440
operations and<font color="#E5E5E5"> in transition in the</font>

19
00:01:02,710 --> 00:01:09,010
security for a restaurant<font color="#E5E5E5"> franchise here</font>

20
00:01:05,440 --> 00:01:10,780
in the US so a quick<font color="#E5E5E5"> overview of what</font>

21
00:01:09,010 --> 00:01:12,700
we're<font color="#CCCCCC"> going to go through</font><font color="#E5E5E5"> I kind of</font>

22
00:01:10,780 --> 00:01:15,369
broke this<font color="#E5E5E5"> up into purple red</font><font color="#CCCCCC"> and blue</font>

23
00:01:12,700 --> 00:01:16,930
because being a blue team guide that<font color="#CCCCCC"> I'd</font>

24
00:01:15,369 --> 00:01:19,030
find<font color="#E5E5E5"> myself talking about what most</font>

25
00:01:16,930 --> 00:01:20,409
people consider<font color="#E5E5E5"> red team stuff</font><font color="#CCCCCC"> what's</font>

26
00:01:19,030 --> 00:01:22,090
really important to<font color="#CCCCCC"> me and the reason</font><font color="#E5E5E5"> I</font>

27
00:01:20,409 --> 00:01:24,880
do this<font color="#CCCCCC"> research is</font><font color="#E5E5E5"> so that we as</font>

28
00:01:22,090 --> 00:01:27,430
defenders can be better educated<font color="#CCCCCC"> and</font>

29
00:01:24,880 --> 00:01:29,619
what attackers are doing and more

30
00:01:27,430 --> 00:01:31,600
importantly what is possible<font color="#E5E5E5"> that we</font>

31
00:01:29,619 --> 00:01:34,929
have<font color="#E5E5E5"> yet to see them do and are we able</font>

32
00:01:31,600 --> 00:01:36,809
<font color="#CCCCCC">to detect this kind of activity</font><font color="#E5E5E5"> and in a</font>

33
00:01:34,929 --> 00:01:39,210
lot of<font color="#E5E5E5"> times when we're doing</font>

34
00:01:36,810 --> 00:01:41,439
investigations with<font color="#CCCCCC"> Mandana</font>

35
00:01:39,210 --> 00:01:43,298
pretty much no<font color="#E5E5E5"> one has all their stuff</font>

36
00:01:41,439 --> 00:01:44,619
together<font color="#E5E5E5"> and we're a lot of times going</font>

37
00:01:43,299 --> 00:01:45,549
<font color="#CCCCCC">to</font><font color="#E5E5E5"> fear a cave they don't have logs they</font>

38
00:01:44,619 --> 00:01:47,170
don't have this they<font color="#CCCCCC"> don't</font><font color="#E5E5E5"> have</font><font color="#CCCCCC"> that</font>

39
00:01:45,549 --> 00:01:49,390
<font color="#E5E5E5">what's that what's</font><font color="#CCCCCC"> a weird artifact we</font>

40
00:01:47,170 --> 00:01:51,310
can find to lead us<font color="#E5E5E5"> to</font><font color="#CCCCCC"> these systems</font>

41
00:01:49,390 --> 00:01:52,509
<font color="#CCCCCC">that have</font><font color="#E5E5E5"> its activity and</font><font color="#CCCCCC"> so I'll</font><font color="#E5E5E5"> be</font>

42
00:01:51,310 --> 00:01:54,219
sharing<font color="#E5E5E5"> a lot</font><font color="#CCCCCC"> of</font><font color="#E5E5E5"> that and actually I've</font>

43
00:01:52,509 --> 00:01:55,630
baked it<font color="#E5E5E5"> into the tool so</font><font color="#CCCCCC"> that as you</font>

44
00:01:54,219 --> 00:01:59,350
use<font color="#E5E5E5"> the tool</font><font color="#CCCCCC"> and explore these different</font>

45
00:01:55,630 --> 00:02:00,039
categories<font color="#E5E5E5"> of</font><font color="#CCCCCC"> syntaxes</font><font color="#E5E5E5"> I'll actually</font>

46
00:01:59,350 --> 00:02:01,749
outline

47
00:02:00,039 --> 00:02:04,030
here's artifacts left behind this

48
00:02:01,749 --> 00:02:05,949
happens here's indicators here's the

49
00:02:04,030 --> 00:02:07,149
<font color="#E5E5E5">process here's a dll that's loaded</font>

50
00:02:05,950 --> 00:02:09,420
here's a process makes a network

51
00:02:07,149 --> 00:02:12,910
connection as opposed to<font color="#CCCCCC"> powershell and</font>

52
00:02:09,419 --> 00:02:14,920
<font color="#E5E5E5">my hope and goal</font><font color="#CCCCCC"> with that as defenders</font>

53
00:02:12,910 --> 00:02:16,450
will be better educated<font color="#CCCCCC"> in looking for</font>

54
00:02:14,920 --> 00:02:18,280
<font color="#E5E5E5">the different kinds of activities</font><font color="#CCCCCC"> and</font><font color="#E5E5E5"> as</font>

55
00:02:16,450 --> 00:02:20,079
a red teamer<font color="#E5E5E5"> my hope is that you'd be</font>

56
00:02:18,280 --> 00:02:21,520
better<font color="#E5E5E5"> educated</font><font color="#CCCCCC"> into figuring out what</font>

57
00:02:20,080 --> 00:02:26,590
<font color="#CCCCCC">makes the</font><font color="#E5E5E5"> most sense which is the most</font>

58
00:02:21,520 --> 00:02:29,680
<font color="#E5E5E5">meaningful syntax to use in my scenario</font>

59
00:02:26,590 --> 00:02:31,600
<font color="#CCCCCC">so after we cover some</font><font color="#E5E5E5"> of that we'll</font>

60
00:02:29,680 --> 00:02:32,830
look at kind<font color="#E5E5E5"> of kind</font><font color="#CCCCCC"> of the state of</font>

61
00:02:31,600 --> 00:02:34,209
<font color="#E5E5E5">obfuscation today what kind of</font>

62
00:02:32,830 --> 00:02:35,440
authentication<font color="#E5E5E5"> exists</font>

63
00:02:34,209 --> 00:02:37,959
what kind of occupation<font color="#E5E5E5"> do we see</font>

64
00:02:35,440 --> 00:02:40,120
attackers using and then how well are we

65
00:02:37,959 --> 00:02:42,340
<font color="#E5E5E5">as an industry</font><font color="#CCCCCC"> doing at detecting this</font>

66
00:02:40,120 --> 00:02:44,020
kind<font color="#E5E5E5"> of occupation and then we'll look</font>

67
00:02:42,340 --> 00:02:45,400
<font color="#E5E5E5">at</font><font color="#CCCCCC"> some of the new stuff I'm looking at</font>

68
00:02:44,020 --> 00:02:47,500
different<font color="#E5E5E5"> cradles and taxes kind of</font>

69
00:02:45,400 --> 00:02:50,290
breaking it down the<font color="#E5E5E5"> three three buckets</font>

70
00:02:47,500 --> 00:02:52,510
of new material here<font color="#E5E5E5"> and that is looking</font>

71
00:02:50,290 --> 00:02:55,569
<font color="#E5E5E5">at obscure download cradles and what I</font>

72
00:02:52,510 --> 00:02:56,920
mean<font color="#CCCCCC"> by that</font><font color="#E5E5E5"> is basically pretty</font><font color="#CCCCCC"> much a</font>

73
00:02:55,569 --> 00:02:59,890
one-liner that<font color="#CCCCCC"> will allow you to</font>

74
00:02:56,920 --> 00:03:03,280
<font color="#E5E5E5">remotely download a script and execute</font>

75
00:02:59,890 --> 00:03:05,230
it<font color="#E5E5E5"> usually entirely in memory</font><font color="#CCCCCC"> and</font>

76
00:03:03,280 --> 00:03:07,239
attackers are using this all the time

77
00:03:05,230 --> 00:03:09,399
attackers pen testers etc<font color="#E5E5E5"> it</font><font color="#CCCCCC"> will then</font>

78
00:03:07,239 --> 00:03:11,799
look at some<font color="#CCCCCC"> interesting</font><font color="#E5E5E5"> token off</font>

79
00:03:09,400 --> 00:03:13,330
<font color="#CCCCCC">Yusuke ssin which which is a bit</font>

80
00:03:11,799 --> 00:03:15,340
different<font color="#E5E5E5"> than any of the other office</font>

81
00:03:13,330 --> 00:03:16,900
<font color="#CCCCCC">Gatien</font><font color="#E5E5E5"> I've covered before and then</font>

82
00:03:15,340 --> 00:03:18,790
<font color="#E5E5E5">we'll look at some obscure implications</font>

83
00:03:16,900 --> 00:03:20,160
and taxes which again is<font color="#CCCCCC"> also very</font>

84
00:03:18,790 --> 00:03:22,390
<font color="#CCCCCC">different</font><font color="#E5E5E5"> from what I've covered before</font>

85
00:03:20,160 --> 00:03:24,160
<font color="#E5E5E5">and then we'll look at what does it look</font>

86
00:03:22,390 --> 00:03:25,899
<font color="#CCCCCC">like to actually</font><font color="#E5E5E5"> start trying to detect</font>

87
00:03:24,160 --> 00:03:29,190
<font color="#E5E5E5">some</font><font color="#CCCCCC"> of these</font><font color="#E5E5E5"> really cryptic download</font>

88
00:03:25,900 --> 00:03:31,360
cradles<font color="#CCCCCC"> from an artifact in an indicator</font>

89
00:03:29,190 --> 00:03:35,489
perspective and then we'll go through<font color="#CCCCCC"> a</font>

90
00:03:31,360 --> 00:03:37,930
demo<font color="#E5E5E5"> and hopefully that will go well so</font>

91
00:03:35,489 --> 00:03:40,390
<font color="#CCCCCC">three things that I want to cover up</font>

92
00:03:37,930 --> 00:03:43,000
front<font color="#E5E5E5"> because I get a lot</font><font color="#CCCCCC"> of questions</font>

93
00:03:40,390 --> 00:03:45,010
<font color="#CCCCCC">on on this</font><font color="#E5E5E5"> kind</font><font color="#CCCCCC"> of stuff the first one</font>

94
00:03:43,000 --> 00:03:47,440
walking PowerShell is not a realistic

95
00:03:45,010 --> 00:03:49,120
<font color="#E5E5E5">option and the simple sentence that</font>

96
00:03:47,440 --> 00:03:51,609
explains<font color="#E5E5E5"> us best is PowerShell is so</font>

97
00:03:49,120 --> 00:03:53,590
much more than<font color="#E5E5E5"> PowerShell</font><font color="#CCCCCC"> exe</font><font color="#E5E5E5"> PowerShell</font>

98
00:03:51,609 --> 00:03:56,620
by<font color="#E5E5E5"> exe is a host application the real</font>

99
00:03:53,590 --> 00:03:59,920
heart and guts of PowerShell is system

100
00:03:56,620 --> 00:04:02,319
management<font color="#CCCCCC"> automation DLL and anything</font>

101
00:03:59,920 --> 00:04:06,670
<font color="#E5E5E5">can load that so</font><font color="#CCCCCC"> blocking PowerShell</font>

102
00:04:02,319 --> 00:04:08,290
that<font color="#CCCCCC"> XE is is a fool's errand if you're</font>

103
00:04:06,670 --> 00:04:11,500
trying<font color="#CCCCCC"> to block all avenues in which</font>

104
00:04:08,290 --> 00:04:13,150
PowerShell can run the second one<font color="#E5E5E5"> this</font>

105
00:04:11,500 --> 00:04:15,130
<font color="#E5E5E5">is a quote</font><font color="#CCCCCC"> by noted</font><font color="#E5E5E5"> blue team or jarred</font>

106
00:04:13,150 --> 00:04:16,810
hate and he said PowerShell is not

107
00:04:15,130 --> 00:04:18,399
<font color="#E5E5E5">special in all it's funny because at a</font>

108
00:04:16,810 --> 00:04:20,440
conference<font color="#E5E5E5"> where</font><font color="#CCCCCC"> he</font><font color="#E5E5E5"> said that</font><font color="#CCCCCC"> Geoffrey</font>

109
00:04:18,399 --> 00:04:21,940
<font color="#CCCCCC">snowbird the father</font><font color="#E5E5E5"> of PowerShell was</font>

110
00:04:20,440 --> 00:04:23,440
there so that was<font color="#CCCCCC"> a interesting</font>

111
00:04:21,940 --> 00:04:26,139
<font color="#E5E5E5">conversation afterwards but what he</font>

112
00:04:23,440 --> 00:04:28,210
really<font color="#CCCCCC"> meant by that was like how</font><font color="#E5E5E5"> is it</font>

113
00:04:26,139 --> 00:04:29,770
<font color="#E5E5E5">different than like the power suppling</font>

114
00:04:28,210 --> 00:04:31,539
getting a lot<font color="#E5E5E5"> of focus especially</font>

115
00:04:29,770 --> 00:04:33,099
<font color="#CCCCCC">looking at increases the PowerShell</font>

116
00:04:31,539 --> 00:04:34,870
attacks<font color="#E5E5E5"> in PowerShell</font><font color="#CCCCCC"> is evil this is</font>

117
00:04:33,100 --> 00:04:38,169
<font color="#E5E5E5">what leads</font><font color="#CCCCCC"> people to that first</font><font color="#E5E5E5"> point</font>

118
00:04:34,870 --> 00:04:40,840
right<font color="#CCCCCC"> there but PowerShell is just an</font>

119
00:04:38,169 --> 00:04:42,549
amazing<font color="#CCCCCC"> platform that you can use for</font>

120
00:04:40,840 --> 00:04:44,469
<font color="#E5E5E5">good or evil</font><font color="#CCCCCC"> so at the</font><font color="#E5E5E5"> end of the day</font>

121
00:04:42,550 --> 00:04:46,690
when you<font color="#CCCCCC"> look at reports talking about</font>

122
00:04:44,470 --> 00:04:48,850
crease use the<font color="#CCCCCC"> PowerShell in attacks if</font>

123
00:04:46,690 --> 00:04:50,590
a user<font color="#CCCCCC"> is enabling a macro</font><font color="#E5E5E5"> and</font>

124
00:04:48,850 --> 00:04:52,840
<font color="#E5E5E5">PowerShell happens to be the code that</font>

125
00:04:50,590 --> 00:04:54,909
downloads some<font color="#E5E5E5"> binary that's really not</font>

126
00:04:52,840 --> 00:04:56,710
much<font color="#CCCCCC"> of a</font><font color="#E5E5E5"> powershell problem it's a user</font>

127
00:04:54,910 --> 00:04:58,450
opening a<font color="#E5E5E5"> freaking macro problem so</font>

128
00:04:56,710 --> 00:04:59,500
there's other there's other things<font color="#E5E5E5"> that</font>

129
00:04:58,450 --> 00:05:00,940
lead you<font color="#CCCCCC"> to this place</font>

130
00:04:59,500 --> 00:05:02,800
and again<font color="#CCCCCC"> PowerShell there's a lot of</font>

131
00:05:00,940 --> 00:05:06,219
good you can do a<font color="#E5E5E5"> PowerShell especially</font>

132
00:05:02,800 --> 00:05:08,140
look at some of the some of the some of

133
00:05:06,220 --> 00:05:10,470
the just incredible logging and features

134
00:05:08,140 --> 00:05:12,789
that have<font color="#CCCCCC"> been built in</font><font color="#E5E5E5"> the PowerShell 5</font>

135
00:05:10,470 --> 00:05:14,800
<font color="#CCCCCC">that Microsoft has really done a lot to</font>

136
00:05:12,790 --> 00:05:16,960
<font color="#CCCCCC">improve the security</font><font color="#E5E5E5"> and make it a</font>

137
00:05:14,800 --> 00:05:18,340
really<font color="#CCCCCC"> really robust platform and that</font>

138
00:05:16,960 --> 00:05:20,530
<font color="#E5E5E5">leads me to the last point PowerShell 5</font>

139
00:05:18,340 --> 00:05:21,760
is<font color="#E5E5E5"> your new best friend and I say new</font>

140
00:05:20,530 --> 00:05:25,929
and<font color="#CCCCCC"> coats because</font><font color="#E5E5E5"> it's been around</font><font color="#CCCCCC"> for a</font>

141
00:05:21,760 --> 00:05:27,820
while<font color="#E5E5E5"> but no one has it so if you're on</font>

142
00:05:25,930 --> 00:05:29,650
Windows 10 you have<font color="#E5E5E5"> it but there's still</font>

143
00:05:27,820 --> 00:05:31,390
a lot<font color="#CCCCCC"> of logging and things</font><font color="#E5E5E5"> that you can</font>

144
00:05:29,650 --> 00:05:33,729
<font color="#CCCCCC">enable that I would highly recommend you</font>

145
00:05:31,390 --> 00:05:35,530
enable I mean<font color="#E5E5E5"> either to a blog post one</font>

146
00:05:33,730 --> 00:05:39,550
is<font color="#CCCCCC"> on my colleague Matt</font><font color="#E5E5E5"> Dunwoody looking</font>

147
00:05:35,530 --> 00:05:41,020
at a really<font color="#E5E5E5"> really robust view of all</font>

148
00:05:39,550 --> 00:05:43,990
the<font color="#E5E5E5"> log and PowerShell Platt gives you</font>

149
00:05:41,020 --> 00:05:46,030
and then this next blog post is actually

150
00:05:43,990 --> 00:05:47,890
<font color="#E5E5E5">from Microsoft it's called Microsoft</font>

151
00:05:46,030 --> 00:05:49,539
<font color="#CCCCCC">Hearts the</font><font color="#E5E5E5"> blue team and it is actually</font>

152
00:05:47,890 --> 00:05:51,909
<font color="#CCCCCC">a blog post</font><font color="#E5E5E5"> in a white paper it</font><font color="#CCCCCC"> is an</font>

153
00:05:49,540 --> 00:05:54,750
incredible read really really worth it

154
00:05:51,910 --> 00:05:58,390
<font color="#E5E5E5">they put</font><font color="#CCCCCC"> a lot of work into PowerShell</font>

155
00:05:54,750 --> 00:06:00,340
<font color="#E5E5E5">so my motivation in this we see</font>

156
00:05:58,390 --> 00:06:02,950
<font color="#E5E5E5">attackers using PowerShell all the time</font>

157
00:06:00,340 --> 00:06:04,330
<font color="#CCCCCC">there</font><font color="#E5E5E5"> really is not an investigation</font>

158
00:06:02,950 --> 00:06:05,409
that<font color="#E5E5E5"> goes by we don't</font><font color="#CCCCCC"> need power shell</font>

159
00:06:04,330 --> 00:06:08,169
<font color="#E5E5E5">being</font><font color="#CCCCCC"> used at some point in the</font>

160
00:06:05,410 --> 00:06:10,870
investigation<font color="#CCCCCC"> mainly furnish</font><font color="#E5E5E5"> compromised</font>

161
00:06:08,169 --> 00:06:13,510
and dumping credentials but<font color="#E5E5E5"> we see it</font>

162
00:06:10,870 --> 00:06:17,410
used for<font color="#CCCCCC"> a sniping email a lot</font><font color="#E5E5E5"> of other</font>

163
00:06:13,510 --> 00:06:19,020
stuff like<font color="#E5E5E5"> that and why do attackers use</font>

164
00:06:17,410 --> 00:06:21,760
it well it's natives<font color="#CCCCCC"> it's</font><font color="#E5E5E5"> window signed</font>

165
00:06:19,020 --> 00:06:24,490
typically if you have<font color="#CCCCCC"> an F whitelist and</font>

166
00:06:21,760 --> 00:06:26,530
<font color="#E5E5E5">you're going to allow</font><font color="#CCCCCC"> it by default and</font>

167
00:06:24,490 --> 00:06:28,450
<font color="#E5E5E5">it's really impossible to detect</font><font color="#CCCCCC"> for the</font>

168
00:06:26,530 --> 00:06:31,719
<font color="#E5E5E5">most part if you</font><font color="#CCCCCC"> don't have at least</font>

169
00:06:28,450 --> 00:06:37,360
<font color="#E5E5E5">command line logging and ideally you'd</font>

170
00:06:31,720 --> 00:06:40,150
also have PowerShell logging so why more

171
00:06:37,360 --> 00:06:42,490
occupation<font color="#CCCCCC"> a lot of the the guys</font><font color="#E5E5E5"> of</font><font color="#CCCCCC"> my</font>

172
00:06:40,150 --> 00:06:43,960
<font color="#CCCCCC">office</font><font color="#E5E5E5"> say what's your sickness like</font>

173
00:06:42,490 --> 00:06:44,770
haven't you done enough to make<font color="#E5E5E5"> our</font><font color="#CCCCCC"> our</font>

174
00:06:43,960 --> 00:06:46,570
lives miserable

175
00:06:44,770 --> 00:06:50,169
with when it<font color="#E5E5E5"> comes to</font><font color="#CCCCCC"> powershell</font>

176
00:06:46,570 --> 00:06:51,340
<font color="#E5E5E5">obfuscation and really the reason is</font>

177
00:06:50,169 --> 00:06:53,710
attackers have<font color="#CCCCCC"> been getting</font><font color="#E5E5E5"> more</font>

178
00:06:51,340 --> 00:06:54,549
<font color="#E5E5E5">creative with obfuscation in the past</font>

179
00:06:53,710 --> 00:06:56,169
six months

180
00:06:54,550 --> 00:06:58,090
they've been<font color="#E5E5E5"> using some new tools that</font>

181
00:06:56,169 --> 00:07:01,180
<font color="#E5E5E5">make it</font><font color="#CCCCCC"> really</font><font color="#E5E5E5"> easy and so we've been</font>

182
00:06:58,090 --> 00:07:02,979
<font color="#E5E5E5">seeing a lot more of it and so as I was</font>

183
00:07:01,180 --> 00:07:04,300
doing some previous research<font color="#E5E5E5"> I really</font>

184
00:07:02,979 --> 00:07:05,889
started<font color="#E5E5E5"> to focus on what</font><font color="#CCCCCC"> are weird ways</font>

185
00:07:04,300 --> 00:07:08,770
I can remotely download code in

186
00:07:05,889 --> 00:07:10,660
PowerShell<font color="#CCCCCC"> and that's the main kind of</font>

187
00:07:08,770 --> 00:07:13,210
<font color="#E5E5E5">compilation of ideas that led to this</font>

188
00:07:10,660 --> 00:07:15,340
research<font color="#E5E5E5"> and in this tool development</font>

189
00:07:13,210 --> 00:07:17,590
<font color="#E5E5E5">and so invoke Cradle crafter in a</font>

190
00:07:15,340 --> 00:07:18,698
nutshell<font color="#E5E5E5"> it's a living</font><font color="#CCCCCC"> library of all</font>

191
00:07:17,590 --> 00:07:20,799
<font color="#E5E5E5">these different ways you can remotely</font>

192
00:07:18,699 --> 00:07:23,289
download PowerShell code and introduces

193
00:07:20,800 --> 00:07:25,060
new office<font color="#CCCCCC"> Gatien techniques and is</font>

194
00:07:23,289 --> 00:07:27,340
<font color="#E5E5E5">really a platform to educate the users</font>

195
00:07:25,060 --> 00:07:29,080
<font color="#E5E5E5">both red and blue why this cradle is</font>

196
00:07:27,340 --> 00:07:31,448
different from<font color="#CCCCCC"> that one and one what</font>

197
00:07:29,080 --> 00:07:34,080
<font color="#E5E5E5">indicators are left behind really</font>

198
00:07:31,449 --> 00:07:36,190
focusing on the artifacts and behaviors

199
00:07:34,080 --> 00:07:40,000
<font color="#E5E5E5">so the current state</font><font color="#CCCCCC"> of PowerShell</font>

200
00:07:36,190 --> 00:07:41,199
efficient so last<font color="#E5E5E5"> year</font><font color="#CCCCCC"> derbycon I</font>

201
00:07:40,000 --> 00:07:43,750
released this tool<font color="#E5E5E5"> called invoke</font>

202
00:07:41,199 --> 00:07:45,340
<font color="#CCCCCC">efficient it's an open source framework</font>

203
00:07:43,750 --> 00:07:47,229
that's available<font color="#E5E5E5"> my github and it</font>

204
00:07:45,340 --> 00:07:49,359
basically automates the occupation of

205
00:07:47,229 --> 00:07:50,740
<font color="#E5E5E5">any</font><font color="#CCCCCC"> arbitrary PowerShell command or</font>

206
00:07:49,360 --> 00:07:52,419
script<font color="#E5E5E5"> I'm using what's called</font>

207
00:07:50,740 --> 00:07:54,400
tokenization to basically<font color="#E5E5E5"> go</font><font color="#CCCCCC"> throughout</font>

208
00:07:52,419 --> 00:07:56,620
<font color="#CCCCCC">a</font><font color="#E5E5E5"> script and fine here's every token</font>

209
00:07:54,400 --> 00:07:58,750
here's every string here's every member

210
00:07:56,620 --> 00:08:00,610
argument blah blah blah and<font color="#CCCCCC"> so basically</font>

211
00:07:58,750 --> 00:08:02,229
it randomizes obfuscation<font color="#CCCCCC"> sent actives</font>

212
00:08:00,610 --> 00:08:03,759
<font color="#E5E5E5">at four layers which I'm gonna go</font>

213
00:08:02,229 --> 00:08:05,530
through extremely<font color="#E5E5E5"> briefly because I</font>

214
00:08:03,759 --> 00:08:07,150
<font color="#CCCCCC">think it's important</font><font color="#E5E5E5"> to see the the</font>

215
00:08:05,530 --> 00:08:09,520
current<font color="#E5E5E5"> state of occupation before we</font>

216
00:08:07,150 --> 00:08:12,880
look at how this new work is<font color="#E5E5E5"> different</font>

217
00:08:09,520 --> 00:08:14,830
<font color="#E5E5E5">and why</font><font color="#CCCCCC"> both are</font><font color="#E5E5E5"> important</font><font color="#CCCCCC"> so at a token</font>

218
00:08:12,880 --> 00:08:15,969
layer<font color="#E5E5E5"> string layer encoding layer and</font>

219
00:08:14,830 --> 00:08:17,919
launcher layer these are the four that

220
00:08:15,969 --> 00:08:21,099
we'll look at so the very<font color="#E5E5E5"> first is token</font>

221
00:08:17,919 --> 00:08:22,508
so this is at<font color="#E5E5E5"> the</font><font color="#CCCCCC"> very top this</font><font color="#E5E5E5"> is our</font>

222
00:08:21,099 --> 00:08:25,150
attacker command right it's the most

223
00:08:22,509 --> 00:08:27,070
common remote download cradle syntax

224
00:08:25,150 --> 00:08:29,049
that<font color="#E5E5E5"> we see if hackers using basically</font>

225
00:08:27,070 --> 00:08:30,009
new object net that web client and then

226
00:08:29,050 --> 00:08:31,750
we're<font color="#E5E5E5"> saying calling them</font><font color="#CCCCCC"> out</font><font color="#E5E5E5"> to</font>

227
00:08:30,009 --> 00:08:33,490
<font color="#E5E5E5">download string to get that payload and</font>

228
00:08:31,750 --> 00:08:34,659
that result is<font color="#E5E5E5"> going</font><font color="#CCCCCC"> into invoke</font>

229
00:08:33,490 --> 00:08:35,440
expression which is pretty much<font color="#E5E5E5"> like</font>

230
00:08:34,659 --> 00:08:38,229
<font color="#E5E5E5">PowerShell</font>

231
00:08:35,440 --> 00:08:39,459
eval statement so let's say this is our

232
00:08:38,229 --> 00:08:41,890
attacker command at the top and as a

233
00:08:39,458 --> 00:08:43,598
defender how can we detect<font color="#E5E5E5"> this if we</font>

234
00:08:41,890 --> 00:08:46,709
see<font color="#CCCCCC"> this</font><font color="#E5E5E5"> on the command</font><font color="#CCCCCC"> line</font><font color="#E5E5E5"> what we</font><font color="#CCCCCC"> can</font>

235
00:08:43,599 --> 00:08:49,089
do is<font color="#E5E5E5"> say okay if I see these strings</font>

236
00:08:46,709 --> 00:08:51,550
<font color="#E5E5E5">then that would catch this exact command</font>

237
00:08:49,089 --> 00:08:52,270
<font color="#E5E5E5">right if we say and and and and that</font>

238
00:08:51,550 --> 00:08:54,040
would<font color="#E5E5E5"> catch this</font>

239
00:08:52,270 --> 00:08:55,660
so let's<font color="#E5E5E5"> look at</font><font color="#CCCCCC"> a few station at a</font>

240
00:08:54,040 --> 00:08:56,199
token layer and see how<font color="#CCCCCC"> can</font><font color="#E5E5E5"> we as an</font>

241
00:08:55,660 --> 00:08:58,329
attacker

242
00:08:56,200 --> 00:09:00,790
<font color="#E5E5E5">be served tshis and obfuscating</font><font color="#CCCCCC"> the</font>

243
00:08:58,329 --> 00:09:03,040
command<font color="#E5E5E5"> and as a defender as we see each</font>

244
00:09:00,790 --> 00:09:06,069
change let's update our detection<font color="#E5E5E5"> to</font>

245
00:09:03,040 --> 00:09:07,030
stay up with it so for example the<font color="#E5E5E5"> very</font>

246
00:09:06,070 --> 00:09:08,140
first<font color="#E5E5E5"> one</font>

247
00:09:07,030 --> 00:09:10,209
<font color="#CCCCCC">come DOM whenever you see this in</font>

248
00:09:08,140 --> 00:09:11,710
PowerShell<font color="#CCCCCC"> totally not necessary it'll</font>

249
00:09:10,210 --> 00:09:13,660
automatically add<font color="#E5E5E5"> that and assume</font><font color="#CCCCCC"> that</font>

250
00:09:11,710 --> 00:09:15,340
<font color="#E5E5E5">so an attacker doesn't have to put that</font>

251
00:09:13,660 --> 00:09:16,390
in their command<font color="#CCCCCC"> and so as the defender</font>

252
00:09:15,340 --> 00:09:20,590
we<font color="#CCCCCC"> shouldn't have</font><font color="#E5E5E5"> it in our command</font>

253
00:09:16,390 --> 00:09:22,360
either next<font color="#E5E5E5"> URL so this is a string</font>

254
00:09:20,590 --> 00:09:24,430
object<font color="#CCCCCC"> and it can be concatenated in</font>

255
00:09:22,360 --> 00:09:26,080
lines we<font color="#E5E5E5"> can also use double</font><font color="#CCCCCC"> quotes</font>

256
00:09:24,430 --> 00:09:27,760
<font color="#E5E5E5">single quotes we can push it over with</font>

257
00:09:26,080 --> 00:09:29,710
whitespace we could also<font color="#E5E5E5"> just</font><font color="#CCCCCC"> set</font>

258
00:09:27,760 --> 00:09:31,840
<font color="#E5E5E5">another</font><font color="#CCCCCC"> variable if we wanted</font><font color="#E5E5E5"> to but</font>

259
00:09:29,710 --> 00:09:35,320
we'll remove HTTP from our download

260
00:09:31,840 --> 00:09:37,660
string<font color="#E5E5E5"> indicator still going so download</font>

261
00:09:35,320 --> 00:09:39,550
string this<font color="#E5E5E5"> is</font><font color="#CCCCCC"> the most common method of</font>

262
00:09:37,660 --> 00:09:42,160
the net web client class that hackers

263
00:09:39,550 --> 00:09:43,120
use but it's not the<font color="#E5E5E5"> only one</font><font color="#CCCCCC"> and it's</font>

264
00:09:42,160 --> 00:09:44,350
definitely<font color="#E5E5E5"> not the</font><font color="#CCCCCC"> only one that we</font>

265
00:09:43,120 --> 00:09:46,150
should<font color="#CCCCCC"> be looking for because we have</font>

266
00:09:44,350 --> 00:09:47,290
seen attackers<font color="#E5E5E5"> and</font><font color="#CCCCCC"> a bit of commodity</font>

267
00:09:46,150 --> 00:09:49,510
malware using some<font color="#CCCCCC"> of these different</font>

268
00:09:47,290 --> 00:09:51,400
methods<font color="#CCCCCC"> if you have download file then</font>

269
00:09:49,510 --> 00:09:53,439
what data and actually<font color="#E5E5E5"> this open read</font>

270
00:09:51,400 --> 00:09:56,620
which I've<font color="#E5E5E5"> only seen to use one time and</font>

271
00:09:53,440 --> 00:09:59,380
most<font color="#CCCCCC"> people don't look for</font><font color="#E5E5E5"> but these are</font>

272
00:09:56,620 --> 00:10:02,230
all totally valid now interesting point

273
00:09:59,380 --> 00:10:03,970
here in invoke obfuscation since it has

274
00:10:02,230 --> 00:10:06,610
<font color="#E5E5E5">to handle any arbitrary PowerShell</font>

275
00:10:03,970 --> 00:10:08,710
<font color="#E5E5E5">command or script it actually can't swap</font>

276
00:10:06,610 --> 00:10:10,510
these methods because the first one is

277
00:10:08,710 --> 00:10:11,800
going to return an expression download

278
00:10:10,510 --> 00:10:13,750
file is<font color="#CCCCCC"> actually going to download it to</font>

279
00:10:11,800 --> 00:10:16,089
disk<font color="#E5E5E5"> and download data is going to be a</font>

280
00:10:13,750 --> 00:10:18,040
byte byte array and open reads going to

281
00:10:16,090 --> 00:10:20,590
be a byte stream so there's more context

282
00:10:18,040 --> 00:10:21,610
<font color="#E5E5E5">you need to have when you're looking at</font>

283
00:10:20,590 --> 00:10:23,290
these different<font color="#E5E5E5"> methods so invoke</font>

284
00:10:21,610 --> 00:10:25,420
<font color="#CCCCCC">obfuscation</font><font color="#E5E5E5"> will never substitute</font>

285
00:10:23,290 --> 00:10:27,160
different<font color="#CCCCCC"> methods</font><font color="#E5E5E5"> invoke</font><font color="#CCCCCC"> Cradle crafter</font>

286
00:10:25,420 --> 00:10:28,930
will because they<font color="#CCCCCC"> know cradle</font><font color="#E5E5E5"> cracker is</font>

287
00:10:27,160 --> 00:10:30,370
not shaking arbitrary commands or

288
00:10:28,930 --> 00:10:32,680
<font color="#E5E5E5">scripts it's taking a few pieces of</font>

289
00:10:30,370 --> 00:10:34,900
information<font color="#E5E5E5"> and then allowing</font><font color="#CCCCCC"> you to</font>

290
00:10:32,680 --> 00:10:37,900
just completely<font color="#E5E5E5"> off you scape these</font>

291
00:10:34,900 --> 00:10:39,069
predefined cradle syntaxes<font color="#E5E5E5"> and you can</font>

292
00:10:37,900 --> 00:10:42,310
obfuscate the ordering<font color="#E5E5E5"> and a lot of</font>

293
00:10:39,070 --> 00:10:43,300
<font color="#E5E5E5">other stuff</font><font color="#CCCCCC"> which we'll see but the one</font>

294
00:10:42,310 --> 00:10:45,189
of<font color="#E5E5E5"> the main differences</font><font color="#CCCCCC"> the tendency</font>

295
00:10:43,300 --> 00:10:47,229
tool is this<font color="#E5E5E5"> ability</font><font color="#CCCCCC"> to do substitution</font>

296
00:10:45,190 --> 00:10:49,720
<font color="#CCCCCC">because we're</font><font color="#E5E5E5"> having we're working with</font>

297
00:10:47,230 --> 00:10:55,390
a more constrained set of language that

298
00:10:49,720 --> 00:10:57,160
has been<font color="#CCCCCC"> defined by</font><font color="#E5E5E5"> the tool so invoke</font>

299
00:10:55,390 --> 00:11:00,189
<font color="#CCCCCC">operation</font><font color="#E5E5E5"> will say</font><font color="#CCCCCC"> ok download string</font>

300
00:10:57,160 --> 00:11:03,069
this<font color="#E5E5E5"> is</font><font color="#CCCCCC"> a this is a</font><font color="#E5E5E5"> method so we can put</font>

301
00:11:00,190 --> 00:11:06,550
single quotes around it<font color="#E5E5E5"> and now this dot</font>

302
00:11:03,070 --> 00:11:08,890
is going to call<font color="#E5E5E5"> those issues we have</font>

303
00:11:06,550 --> 00:11:09,819
that in<font color="#E5E5E5"> our rules organisms that we can</font>

304
00:11:08,890 --> 00:11:10,930
also do is<font color="#CCCCCC"> going</font><font color="#E5E5E5"> to put double quotes</font>

305
00:11:09,820 --> 00:11:12,310
<font color="#CCCCCC">around it and I want</font><font color="#E5E5E5"> you to look really</font>

306
00:11:10,930 --> 00:11:13,959
<font color="#E5E5E5">closely at</font><font color="#CCCCCC"> this download</font><font color="#E5E5E5"> stream because</font>

307
00:11:12,310 --> 00:11:15,969
what you can<font color="#E5E5E5"> also do with double</font><font color="#CCCCCC"> quotes</font>

308
00:11:13,960 --> 00:11:18,580
is you can put a tick mark there

309
00:11:15,970 --> 00:11:19,630
now why does<font color="#CCCCCC"> that work well</font><font color="#E5E5E5"> you can open</font>

310
00:11:18,580 --> 00:11:20,920
to a lot of tick marks

311
00:11:19,630 --> 00:11:24,040
the reason<font color="#E5E5E5"> that it works</font><font color="#CCCCCC"> is because</font><font color="#E5E5E5"> it</font>

312
00:11:20,920 --> 00:11:26,380
is<font color="#E5E5E5"> it is</font><font color="#CCCCCC"> power shelled</font><font color="#E5E5E5"> escape character</font>

313
00:11:24,040 --> 00:11:28,360
and it has<font color="#E5E5E5"> meaning behind things like</font>

314
00:11:26,380 --> 00:11:28,750
you know in<font color="#CCCCCC"> four</font><font color="#E5E5E5"> new</font><font color="#CCCCCC"> lines stuff like</font>

315
00:11:28,360 --> 00:11:30,340
that

316
00:11:28,750 --> 00:11:32,320
<font color="#CCCCCC">um but as you can</font><font color="#E5E5E5"> see</font><font color="#CCCCCC"> if</font><font color="#E5E5E5"> we just</font>

317
00:11:30,340 --> 00:11:33,880
<font color="#CCCCCC">uppercase that in there are no longer</font>

318
00:11:32,320 --> 00:11:35,440
<font color="#E5E5E5">half special meaning it's just a tick</font>

319
00:11:33,880 --> 00:11:37,240
<font color="#CCCCCC">marking so</font><font color="#E5E5E5"> PowerShell will automatically</font>

320
00:11:35,440 --> 00:11:39,310
<font color="#E5E5E5">remove that because hey you don't have</font>

321
00:11:37,240 --> 00:11:40,720
<font color="#E5E5E5">any meaning here but the great</font><font color="#CCCCCC"> part</font><font color="#E5E5E5"> is</font>

322
00:11:39,310 --> 00:11:42,640
<font color="#CCCCCC">that this persist</font><font color="#E5E5E5"> not only in the</font>

323
00:11:40,720 --> 00:11:45,510
<font color="#E5E5E5">command</font><font color="#CCCCCC"> line arguments</font><font color="#E5E5E5"> but also</font><font color="#CCCCCC"> into any</font>

324
00:11:42,640 --> 00:11:50,650
<font color="#CCCCCC">logging</font><font color="#E5E5E5"> of PowerShell and command line</font>

325
00:11:45,510 --> 00:11:52,480
at the logging<font color="#E5E5E5"> or live process level</font><font color="#CCCCCC"> so</font>

326
00:11:50,650 --> 00:11:54,370
you can do that with art though the

327
00:11:52,480 --> 00:11:56,110
methods<font color="#E5E5E5"> when you look at an argument</font>

328
00:11:54,370 --> 00:11:57,550
<font color="#CCCCCC">like net-net</font><font color="#E5E5E5"> web client you can</font><font color="#CCCCCC"> do the</font>

329
00:11:56,110 --> 00:11:58,600
same<font color="#CCCCCC"> things</font><font color="#E5E5E5"> a lot of options</font><font color="#CCCCCC"> you can do</font>

330
00:11:57,550 --> 00:12:01,390
there but<font color="#E5E5E5"> we'll</font><font color="#CCCCCC"> just go with that one</font>

331
00:11:58,600 --> 00:12:03,970
when<font color="#E5E5E5"> it cups a new</font><font color="#CCCCCC"> object invocation has</font>

332
00:12:01,390 --> 00:12:06,040
three ways of<font color="#E5E5E5"> dealing with commandlets</font>

333
00:12:03,970 --> 00:12:07,780
which is what new object is you can put

334
00:12:06,040 --> 00:12:09,910
tick marks in the command<font color="#CCCCCC"> lit you can</font>

335
00:12:07,780 --> 00:12:11,650
<font color="#CCCCCC">also treat the commandment as a string</font>

336
00:12:09,910 --> 00:12:13,420
<font color="#E5E5E5">and concatenate</font><font color="#CCCCCC"> it</font><font color="#E5E5E5"> and then you can</font>

337
00:12:11,650 --> 00:12:15,220
invoke<font color="#CCCCCC"> it with either an ampersand</font><font color="#E5E5E5"> or</font><font color="#CCCCCC"> a</font>

338
00:12:13,420 --> 00:12:17,439
dot which are the<font color="#CCCCCC"> invocation operators</font>

339
00:12:15,220 --> 00:12:18,790
or you can do this<font color="#E5E5E5"> little trick which</font><font color="#CCCCCC"> is</font>

340
00:12:17,440 --> 00:12:20,890
using the format operator which

341
00:12:18,790 --> 00:12:22,930
basically says chop up this string<font color="#E5E5E5"> into</font>

342
00:12:20,890 --> 00:12:24,370
a<font color="#E5E5E5"> substring reorder it however you want</font>

343
00:12:22,930 --> 00:12:26,859
<font color="#E5E5E5">and then piece it back together in</font>

344
00:12:24,370 --> 00:12:29,530
whatever<font color="#CCCCCC"> order that you</font><font color="#E5E5E5"> want this is</font>

345
00:12:26,860 --> 00:12:31,600
what<font color="#CCCCCC"> invoke computation does</font><font color="#E5E5E5"> but what</font>

346
00:12:29,530 --> 00:12:33,490
<font color="#E5E5E5">about some other</font><font color="#CCCCCC"> options</font><font color="#E5E5E5"> we can do</font>

347
00:12:31,600 --> 00:12:35,230
something<font color="#CCCCCC"> like</font><font color="#E5E5E5"> get command which</font>

348
00:12:33,490 --> 00:12:37,000
<font color="#E5E5E5">basically says show me all the commands</font>

349
00:12:35,230 --> 00:12:38,830
and<font color="#E5E5E5"> then let me invoke the object that</font>

350
00:12:37,000 --> 00:12:39,880
<font color="#E5E5E5">comes back but the great thing</font><font color="#CCCCCC"> is that</font>

351
00:12:38,830 --> 00:12:41,860
<font color="#E5E5E5">you can start to do things like use</font>

352
00:12:39,880 --> 00:12:43,540
wildcards<font color="#E5E5E5"> and so this will still return</font>

353
00:12:41,860 --> 00:12:44,950
new object but new object is never

354
00:12:43,540 --> 00:12:48,459
spelled out anywhere<font color="#E5E5E5"> on the command line</font>

355
00:12:44,950 --> 00:12:50,560
<font color="#CCCCCC">so that's</font><font color="#E5E5E5"> new object now in addition for</font>

356
00:12:48,460 --> 00:12:52,810
<font color="#E5E5E5">get command we</font><font color="#CCCCCC"> can use an alias like</font><font color="#E5E5E5"> GCM</font>

357
00:12:50,560 --> 00:12:54,640
and<font color="#CCCCCC"> if you'll</font><font color="#E5E5E5"> notice here</font><font color="#CCCCCC"> the execution</font>

358
00:12:52,810 --> 00:12:56,890
context is an automatic variable in

359
00:12:54,640 --> 00:12:58,990
<font color="#CCCCCC">PowerShell</font><font color="#E5E5E5"> well dollar sign is the most</font>

360
00:12:56,890 --> 00:13:00,460
common way to call or set variables<font color="#E5E5E5"> but</font>

361
00:12:58,990 --> 00:13:01,930
you can also<font color="#E5E5E5"> use get variable there's</font>

362
00:13:00,460 --> 00:13:03,310
like there's a slide later that shows

363
00:13:01,930 --> 00:13:06,189
all the<font color="#CCCCCC"> different options to retrieve</font>

364
00:13:03,310 --> 00:13:09,640
<font color="#E5E5E5">the variable value but this is now that</font>

365
00:13:06,190 --> 00:13:11,560
variable<font color="#E5E5E5"> so as you can see doing simple</font>

366
00:13:09,640 --> 00:13:13,300
string search even<font color="#CCCCCC"> reg X for certain</font>

367
00:13:11,560 --> 00:13:17,310
<font color="#E5E5E5">terms what new object can really bite</font>

368
00:13:13,300 --> 00:13:19,180
you<font color="#E5E5E5"> because you'll never see</font><font color="#CCCCCC"> it in logs</font>

369
00:13:17,310 --> 00:13:20,349
<font color="#CCCCCC">so at this point</font><font color="#E5E5E5"> we're left with an</font>

370
00:13:19,180 --> 00:13:22,329
invoke expression which is actually a

371
00:13:20,350 --> 00:13:23,710
<font color="#CCCCCC">pretty</font><font color="#E5E5E5"> good indicator in of itself but</font>

372
00:13:22,330 --> 00:13:26,050
there's<font color="#CCCCCC"> obviously stuff that we can do</font>

373
00:13:23,710 --> 00:13:27,310
there<font color="#CCCCCC"> and</font><font color="#E5E5E5"> so invoke expression is the</font>

374
00:13:26,050 --> 00:13:29,140
main thing<font color="#CCCCCC"> to</font><font color="#E5E5E5"> invoke off</font><font color="#CCCCCC"> you station</font>

375
00:13:27,310 --> 00:13:31,209
dealt with in the<font color="#E5E5E5"> last release I'm I</font>

376
00:13:29,140 --> 00:13:32,770
added some tricks<font color="#E5E5E5"> like this which is</font>

377
00:13:31,210 --> 00:13:34,990
<font color="#CCCCCC">basically</font>

378
00:13:32,770 --> 00:13:37,209
the aliases for<font color="#CCCCCC"> invoke expression is IEX</font>

379
00:13:34,990 --> 00:13:39,730
and there's a lot<font color="#CCCCCC"> of places that you can</font>

380
00:13:37,209 --> 00:13:41,410
<font color="#CCCCCC">pull the letters I and</font><font color="#E5E5E5"> II</font><font color="#CCCCCC"> and X</font><font color="#E5E5E5"> out of</font>

381
00:13:39,730 --> 00:13:43,420
<font color="#E5E5E5">environment variables automatic</font>

382
00:13:41,410 --> 00:13:45,430
variables etc<font color="#CCCCCC"> so</font><font color="#E5E5E5"> she'll ID is an</font>

383
00:13:43,420 --> 00:13:47,439
automatic variable in<font color="#E5E5E5"> PowerShell</font><font color="#CCCCCC"> that</font>

384
00:13:45,430 --> 00:13:49,870
literally outputs Microsoft PowerShell

385
00:13:47,440 --> 00:13:52,660
<font color="#E5E5E5">and so if you'll see M is a</font><font color="#CCCCCC"> zero</font><font color="#E5E5E5"> if</font>

386
00:13:49,870 --> 00:13:55,720
index I is in<font color="#E5E5E5"> the first index so she'll</font>

387
00:13:52,660 --> 00:13:57,430
ID<font color="#CCCCCC"> one is an I shell ID 13 is an EE and</font>

388
00:13:55,720 --> 00:13:59,200
<font color="#E5E5E5">then we just add an X and that little</font>

389
00:13:57,430 --> 00:14:03,849
dot is the invocation operator so now

390
00:13:59,200 --> 00:14:06,820
<font color="#E5E5E5">this is invoke expression so that</font><font color="#CCCCCC"> was</font>

391
00:14:03,850 --> 00:14:08,080
all token layer and the the four layers

392
00:14:06,820 --> 00:14:09,850
token layer is really<font color="#E5E5E5"> important because</font>

393
00:14:08,080 --> 00:14:12,580
this<font color="#CCCCCC"> is</font><font color="#E5E5E5"> the</font><font color="#CCCCCC"> only one</font><font color="#E5E5E5"> that is not D off</font>

394
00:14:09,850 --> 00:14:14,170
you skated<font color="#E5E5E5"> in power shells most robust</font>

395
00:14:12,580 --> 00:14:16,390
logging in<font color="#E5E5E5"> PowerShell</font><font color="#CCCCCC"> five which</font><font color="#E5E5E5"> is</font>

396
00:14:14,170 --> 00:14:19,390
called script<font color="#E5E5E5"> lock logging so any kind</font>

397
00:14:16,390 --> 00:14:21,189
<font color="#E5E5E5">of antivirus</font><font color="#CCCCCC"> that uses Microsoft's</font><font color="#E5E5E5"> a MSI</font>

398
00:14:19,390 --> 00:14:24,670
which is the<font color="#E5E5E5"> anti-malware scan interface</font>

399
00:14:21,190 --> 00:14:27,339
<font color="#E5E5E5">it has</font><font color="#CCCCCC"> to take this</font><font color="#E5E5E5"> into account</font><font color="#CCCCCC"> and so</font>

400
00:14:24,670 --> 00:14:28,599
far it's<font color="#CCCCCC"> not</font><font color="#E5E5E5"> so if you say are running</font>

401
00:14:27,339 --> 00:14:30,459
invoke mimikatz<font color="#CCCCCC"> a member you would</font>

402
00:14:28,600 --> 00:14:31,990
updated with Windows Defender<font color="#CCCCCC"> it will</font>

403
00:14:30,459 --> 00:14:34,300
block it<font color="#E5E5E5"> but if you want to do one layer</font>

404
00:14:31,990 --> 00:14:36,570
to soft<font color="#CCCCCC"> new station</font><font color="#E5E5E5"> its last I checked</font>

405
00:14:34,300 --> 00:14:38,680
still is<font color="#E5E5E5"> not getting blocked at all</font>

406
00:14:36,570 --> 00:14:40,959
so the second layer<font color="#CCCCCC"> is string layer</font>

407
00:14:38,680 --> 00:14:42,579
which basically says you can do all this

408
00:14:40,959 --> 00:14:44,319
<font color="#CCCCCC">occupation for</font><font color="#E5E5E5"> the command but you can</font>

409
00:14:42,579 --> 00:14:46,060
always<font color="#E5E5E5"> take</font><font color="#CCCCCC"> one more step back and say</font>

410
00:14:44,320 --> 00:14:48,130
now convert<font color="#E5E5E5"> this entire thing to a</font>

411
00:14:46,060 --> 00:14:50,079
string off you skate<font color="#CCCCCC"> it however you want</font>

412
00:14:48,130 --> 00:14:52,240
<font color="#CCCCCC">to as a string and then</font><font color="#E5E5E5"> you can invoke</font>

413
00:14:50,079 --> 00:14:53,829
it<font color="#E5E5E5"> and so in the</font><font color="#CCCCCC"> bill confiscation you</font>

414
00:14:52,240 --> 00:14:55,270
can concatenate it<font color="#E5E5E5"> you can</font><font color="#CCCCCC"> reorder it</font>

415
00:14:53,829 --> 00:14:57,819
you can also just reverse the<font color="#CCCCCC"> entire</font>

416
00:14:55,270 --> 00:14:59,800
command and then invoke in memory the

417
00:14:57,820 --> 00:15:00,339
reverse normalized version<font color="#E5E5E5"> of that</font>

418
00:14:59,800 --> 00:15:02,890
<font color="#E5E5E5">command</font>

419
00:15:00,339 --> 00:15:05,680
so that's layer<font color="#E5E5E5"> two</font><font color="#CCCCCC"> layer three is</font>

420
00:15:02,890 --> 00:15:07,120
encoding and so in the current public

421
00:15:05,680 --> 00:15:09,069
<font color="#E5E5E5">version of a no-parking station these</font>

422
00:15:07,120 --> 00:15:10,839
<font color="#E5E5E5">are the options most attackers use</font>

423
00:15:09,070 --> 00:15:12,850
basically for encoding<font color="#E5E5E5"> just because</font>

424
00:15:10,839 --> 00:15:14,740
that's<font color="#E5E5E5"> what all the frameworks use but</font>

425
00:15:12,850 --> 00:15:17,440
there's a lot<font color="#E5E5E5"> of other options</font><font color="#CCCCCC"> but ascii</font>

426
00:15:14,740 --> 00:15:18,820
hex<font color="#E5E5E5"> octo binaries</font><font color="#CCCCCC"> that wise</font><font color="#E5E5E5"> X or I mean</font>

427
00:15:17,440 --> 00:15:20,860
<font color="#CCCCCC">insecure string is actually encryption</font>

428
00:15:18,820 --> 00:15:22,930
but<font color="#E5E5E5"> you can actually store code and</font>

429
00:15:20,860 --> 00:15:24,370
<font color="#E5E5E5">PowerShell snippets inside of password</font>

430
00:15:22,930 --> 00:15:26,380
objects and then rip them out<font color="#E5E5E5"> of</font><font color="#CCCCCC"> that</font>

431
00:15:24,370 --> 00:15:30,520
context on the<font color="#E5E5E5"> plaintext</font><font color="#CCCCCC"> and invoke them</font>

432
00:15:26,380 --> 00:15:31,899
that way<font color="#CCCCCC"> and lastly is launchers so</font>

433
00:15:30,520 --> 00:15:33,939
there's really obscure ways in which you

434
00:15:31,899 --> 00:15:35,470
can launch PowerShell code what I'm not

435
00:15:33,940 --> 00:15:37,959
talking<font color="#E5E5E5"> about is a subject called</font>

436
00:15:35,470 --> 00:15:39,579
unmanaged<font color="#E5E5E5"> PowerShell which kind of goes</font>

437
00:15:37,959 --> 00:15:41,920
back<font color="#CCCCCC"> to the notion that PowerShell is so</font>

438
00:15:39,579 --> 00:15:43,630
much more<font color="#E5E5E5"> than</font><font color="#CCCCCC"> powershell</font><font color="#E5E5E5"> exe so i'm not</font>

439
00:15:41,920 --> 00:15:44,589
<font color="#CCCCCC">referring to that</font><font color="#E5E5E5"> at</font><font color="#CCCCCC"> all this is</font><font color="#E5E5E5"> still</font>

440
00:15:43,630 --> 00:15:46,750
using<font color="#CCCCCC"> powershell</font>

441
00:15:44,590 --> 00:15:49,930
<font color="#CCCCCC">but is pushing the command-line</font>

442
00:15:46,750 --> 00:15:52,390
arguments into other processes<font color="#E5E5E5"> so one</font>

443
00:15:49,930 --> 00:15:55,810
way<font color="#CCCCCC"> we can</font><font color="#E5E5E5"> do</font><font color="#CCCCCC"> that is we can use</font><font color="#E5E5E5"> command</font>

444
00:15:52,390 --> 00:15:57,279
<font color="#E5E5E5">to basically set variable</font><font color="#CCCCCC"> 1 with our</font>

445
00:15:55,810 --> 00:15:59,859
<font color="#CCCCCC">PowerShell command which is this nice</font>

446
00:15:57,279 --> 00:16:02,410
right host<font color="#E5E5E5"> success well then set</font>

447
00:15:59,860 --> 00:16:04,510
variable<font color="#E5E5E5"> 2 to be PowerShell - now</font>

448
00:16:02,410 --> 00:16:06,819
<font color="#E5E5E5">PowerShell - is one of the syntax is if</font>

449
00:16:04,510 --> 00:16:08,500
you do PowerShell slash question mark to

450
00:16:06,820 --> 00:16:10,750
the help page<font color="#E5E5E5"> it'll say hey there's this</font>

451
00:16:08,500 --> 00:16:12,700
implied variable called command<font color="#E5E5E5"> but you</font>

452
00:16:10,750 --> 00:16:14,080
could also just<font color="#E5E5E5"> do a</font><font color="#CCCCCC"> dash and now</font>

453
00:16:12,700 --> 00:16:16,810
command is going<font color="#CCCCCC"> to receive the standard</font>

454
00:16:14,080 --> 00:16:18,850
<font color="#E5E5E5">input so that's what</font><font color="#CCCCCC"> that dash means so</font>

455
00:16:16,810 --> 00:16:20,709
then we're<font color="#CCCCCC"> taking a second command and</font>

456
00:16:18,850 --> 00:16:22,960
we're<font color="#E5E5E5"> saying I'm going to echo</font><font color="#CCCCCC"> var1 into</font>

457
00:16:20,710 --> 00:16:24,190
bar<font color="#E5E5E5"> - which really is going to translate</font>

458
00:16:22,960 --> 00:16:25,470
<font color="#CCCCCC">into something</font><font color="#E5E5E5"> that</font><font color="#CCCCCC"> looks like</font><font color="#E5E5E5"> this but</font>

459
00:16:24,190 --> 00:16:27,640
<font color="#CCCCCC">you don't see this on the command</font><font color="#E5E5E5"> line</font>

460
00:16:25,470 --> 00:16:29,980
<font color="#E5E5E5">so now what this means as the</font><font color="#CCCCCC"> Defenders</font>

461
00:16:27,640 --> 00:16:32,350
is that we see<font color="#E5E5E5"> powershell run and it's</font>

462
00:16:29,980 --> 00:16:34,150
argument<font color="#E5E5E5"> is</font><font color="#CCCCCC"> just a simple</font><font color="#E5E5E5"> - and the</font>

463
00:16:32,350 --> 00:16:35,650
parent argument doesn't even have the

464
00:16:34,150 --> 00:16:37,569
actual<font color="#E5E5E5"> PowerShell command it has these</font>

465
00:16:35,650 --> 00:16:39,370
variable names so the grandparent

466
00:16:37,570 --> 00:16:42,190
process in this scenario<font color="#E5E5E5"> is where the</font>

467
00:16:39,370 --> 00:16:44,350
actual arguments reside<font color="#E5E5E5"> and</font><font color="#CCCCCC"> if you think</font>

468
00:16:42,190 --> 00:16:46,390
a foolproof way is to<font color="#CCCCCC"> recursively go</font><font color="#E5E5E5"> up</font>

469
00:16:44,350 --> 00:16:47,710
the process tree that's<font color="#E5E5E5"> definitely not</font>

470
00:16:46,390 --> 00:16:49,480
the<font color="#E5E5E5"> case because you can actually start</font>

471
00:16:47,710 --> 00:16:52,240
to spread<font color="#E5E5E5"> your pieces of command and</font><font color="#CCCCCC"> to</font>

472
00:16:49,480 --> 00:16:55,570
unrelated processes these<font color="#E5E5E5"> things like W</font>

473
00:16:52,240 --> 00:16:57,130
my clipboard etc now there's one

474
00:16:55,570 --> 00:16:58,780
financial<font color="#E5E5E5"> threat actor that's been using</font>

475
00:16:57,130 --> 00:17:00,310
this technique a<font color="#E5E5E5"> lot and it's</font><font color="#CCCCCC"> been</font>

476
00:16:58,780 --> 00:17:03,069
really cool<font color="#E5E5E5"> to see and then it's a group</font>

477
00:17:00,310 --> 00:17:04,899
that we call<font color="#CCCCCC"> pin 8</font><font color="#E5E5E5"> and so this actually</font>

478
00:17:03,070 --> 00:17:06,490
<font color="#CCCCCC">is an interesting</font><font color="#E5E5E5"> tweet by John Lambert</font>

479
00:17:04,900 --> 00:17:08,829
<font color="#CCCCCC">from Microsoft if you're not</font><font color="#E5E5E5"> following</font>

480
00:17:06,490 --> 00:17:11,230
him<font color="#E5E5E5"> he tweets some really really good</font>

481
00:17:08,829 --> 00:17:12,089
stuff<font color="#E5E5E5"> of like here's real evil</font><font color="#CCCCCC"> why this</font>

482
00:17:11,230 --> 00:17:14,290
<font color="#E5E5E5">down this morning</font>

483
00:17:12,089 --> 00:17:16,928
<font color="#CCCCCC">he's at Microsoft</font><font color="#E5E5E5"> and does a lot of</font>

484
00:17:14,290 --> 00:17:19,119
<font color="#E5E5E5">stuff</font><font color="#CCCCCC"> with</font><font color="#E5E5E5"> it I'm a sure and I think</font>

485
00:17:16,929 --> 00:17:20,079
<font color="#E5E5E5">they've even office 365</font><font color="#CCCCCC"> I apologize I'm</font>

486
00:17:19,119 --> 00:17:22,208
<font color="#CCCCCC">not a hundred percent sure on</font><font color="#E5E5E5"> that but</font>

487
00:17:20,079 --> 00:17:24,310
<font color="#E5E5E5">really tweets awesome stuff so February</font>

488
00:17:22,209 --> 00:17:26,439
22nd he tweeted<font color="#E5E5E5"> this is that hey here's</font>

489
00:17:24,310 --> 00:17:28,600
some<font color="#E5E5E5"> interesting OPSEC some obfuscation</font>

490
00:17:26,439 --> 00:17:30,040
going on in<font color="#E5E5E5"> this document here and one</font>

491
00:17:28,600 --> 00:17:31,570
of my colleagues are<font color="#E5E5E5"> replied back and</font>

492
00:17:30,040 --> 00:17:33,340
said hey this<font color="#CCCCCC"> actually winds up really</font>

493
00:17:31,570 --> 00:17:35,379
well with<font color="#CCCCCC"> some 10-8 stuff that we just</font>

494
00:17:33,340 --> 00:17:37,600
<font color="#CCCCCC">saw this week</font><font color="#E5E5E5"> here's a decoder I wrote</font>

495
00:17:35,380 --> 00:17:40,060
and<font color="#E5E5E5"> put on my github to make extracting</font>

496
00:17:37,600 --> 00:17:43,209
indicators a lot easier<font color="#CCCCCC"> and then one</font>

497
00:17:40,060 --> 00:17:45,129
with other<font color="#E5E5E5"> colleagues to the</font><font color="#CCCCCC"> screenshot</font>

498
00:17:43,210 --> 00:17:47,770
up<font color="#E5E5E5"> that</font><font color="#CCCCCC"> a Lambert posted and said yeah</font>

499
00:17:45,130 --> 00:17:49,120
this<font color="#E5E5E5"> is</font><font color="#CCCCCC"> totally thinit and here's what</font>

500
00:17:47,770 --> 00:17:50,740
we've been seeing<font color="#E5E5E5"> and so there's a</font>

501
00:17:49,120 --> 00:17:52,629
screenshot and<font color="#CCCCCC"> if you'll</font><font color="#E5E5E5"> notice three</font>

502
00:17:50,740 --> 00:17:54,580
pieces<font color="#CCCCCC"> the very bottom this is</font><font color="#E5E5E5"> the</font>

503
00:17:52,630 --> 00:17:55,929
<font color="#E5E5E5">powershell command that's being put in</font>

504
00:17:54,580 --> 00:17:57,199
an environment<font color="#CCCCCC"> variable</font><font color="#E5E5E5"> one which</font>

505
00:17:55,929 --> 00:18:00,130
they're<font color="#CCCCCC"> calling Microsoft</font>

506
00:17:57,200 --> 00:18:02,690
<font color="#E5E5E5">Update catalog and you'll notice</font>

507
00:18:00,130 --> 00:18:05,029
<font color="#E5E5E5">PowerShell - is conveniently put in</font>

508
00:18:02,690 --> 00:18:07,039
another<font color="#E5E5E5"> environment variable called</font>

509
00:18:05,029 --> 00:18:08,480
Microsoft Update service and then what

510
00:18:07,039 --> 00:18:10,370
the Windward document is actually<font color="#E5E5E5"> doing</font>

511
00:18:08,480 --> 00:18:13,880
<font color="#E5E5E5">all you see is</font><font color="#CCCCCC"> Windward spawn command</font>

512
00:18:10,370 --> 00:18:16,370
echo bar<font color="#E5E5E5"> one bar</font><font color="#CCCCCC"> to look familiar</font>

513
00:18:13,880 --> 00:18:17,960
so in the latest version of<font color="#E5E5E5"> memo</font>

514
00:18:16,370 --> 00:18:19,549
<font color="#E5E5E5">confiscation</font><font color="#CCCCCC"> I actually want more step</font>

515
00:18:17,960 --> 00:18:24,080
and I create an environment<font color="#CCCCCC"> variable</font>

516
00:18:19,549 --> 00:18:27,350
free which is echo bar<font color="#CCCCCC"> one pipe</font><font color="#E5E5E5"> var - so</font>

517
00:18:24,080 --> 00:18:32,240
now<font color="#E5E5E5"> all you'll</font><font color="#CCCCCC"> see is command / Z</font><font color="#E5E5E5"> bar 3</font>

518
00:18:27,350 --> 00:18:33,830
nothing<font color="#CCCCCC"> else</font><font color="#E5E5E5"> not</font><font color="#CCCCCC"> even in</font><font color="#E5E5E5"> that</font><font color="#CCCCCC"> go so some</font>

519
00:18:32,240 --> 00:18:35,419
of the these<font color="#E5E5E5"> are</font><font color="#CCCCCC"> some of</font><font color="#E5E5E5"> the launcher</font>

520
00:18:33,830 --> 00:18:37,730
options<font color="#E5E5E5"> that the public version of the</font>

521
00:18:35,419 --> 00:18:39,649
invoke obfuscation has and these pluses

522
00:18:37,730 --> 00:18:43,429
indicate pushing the arguments up to the

523
00:18:39,649 --> 00:18:45,559
parent or<font color="#E5E5E5"> grandparent process so that's</font>

524
00:18:43,429 --> 00:18:47,389
<font color="#E5E5E5">a really quick look at what off you</font>

525
00:18:45,559 --> 00:18:48,950
<font color="#E5E5E5">station how it looks like today</font>

526
00:18:47,389 --> 00:18:51,620
and<font color="#CCCCCC"> for the detection perspective it's</font>

527
00:18:48,950 --> 00:18:53,679
actually not not too great<font color="#CCCCCC"> so again as I</font>

528
00:18:51,620 --> 00:18:56,090
mentioned<font color="#E5E5E5"> a lot of</font><font color="#CCCCCC"> Av isn't really</font>

529
00:18:53,679 --> 00:18:57,950
surprised<font color="#CCCCCC"> -</font><font color="#E5E5E5"> provides</font><font color="#CCCCCC"> caching this even</font>

530
00:18:56,090 --> 00:19:00,139
ones<font color="#E5E5E5"> that do in memory scanning or even</font>

531
00:18:57,950 --> 00:19:02,179
that rely on a<font color="#E5E5E5"> MSI it's not a knock on</font><font color="#CCCCCC"> a</font>

532
00:19:00,139 --> 00:19:03,918
<font color="#E5E5E5">Masai it's a super awesome feature but</font>

533
00:19:02,179 --> 00:19:06,889
it still<font color="#E5E5E5"> comes</font><font color="#CCCCCC"> down to writing a</font>

534
00:19:03,919 --> 00:19:08,510
signature<font color="#E5E5E5"> which is about difficult in</font>

535
00:19:06,889 --> 00:19:09,979
traditional<font color="#E5E5E5"> terms the</font><font color="#CCCCCC"> cache</font><font color="#E5E5E5"> some of this</font>

536
00:19:08,510 --> 00:19:12,320
kind of stuff for<font color="#E5E5E5"> there totally are ways</font>

537
00:19:09,980 --> 00:19:14,570
<font color="#CCCCCC">to do it it's actually been really neat</font>

538
00:19:12,320 --> 00:19:17,029
to<font color="#CCCCCC"> see</font><font color="#E5E5E5"> some even competitors in the</font>

539
00:19:14,570 --> 00:19:19,070
industry<font color="#E5E5E5"> actually</font><font color="#CCCCCC"> cite some of this work</font>

540
00:19:17,029 --> 00:19:20,269
<font color="#E5E5E5">and as they push out</font><font color="#CCCCCC"> update to some of</font>

541
00:19:19,070 --> 00:19:22,850
their in point<font color="#CCCCCC"> solution so that's been</font>

542
00:19:20,269 --> 00:19:24,529
really<font color="#CCCCCC"> cool to see of an industry</font><font color="#E5E5E5"> change</font>

543
00:19:22,850 --> 00:19:26,269
happening which<font color="#CCCCCC"> is the whole point I'm</font>

544
00:19:24,529 --> 00:19:29,120
even doing<font color="#CCCCCC"> so</font><font color="#E5E5E5"> that as an industry we can</font>

545
00:19:26,269 --> 00:19:31,909
all get<font color="#E5E5E5"> better together and</font><font color="#CCCCCC"> then we've</font>

546
00:19:29,120 --> 00:19:34,279
actually seen very<font color="#E5E5E5"> very recently apt 32</font>

547
00:19:31,909 --> 00:19:36,500
which<font color="#CCCCCC"> is also known as</font><font color="#E5E5E5"> ocean Lotus</font>

548
00:19:34,279 --> 00:19:38,539
<font color="#CCCCCC">they're a vietnamese apt group and</font>

549
00:19:36,500 --> 00:19:41,240
they've actually been using my tool a

550
00:19:38,539 --> 00:19:43,279
lot and they<font color="#CCCCCC"> died think</font><font color="#E5E5E5"> their energy is</font>

551
00:19:41,240 --> 00:19:44,539
stuck<font color="#E5E5E5"> because they keep doing layer and</font>

552
00:19:43,279 --> 00:19:46,880
layer and<font color="#E5E5E5"> layer and layer of obfuscation</font>

553
00:19:44,539 --> 00:19:49,120
<font color="#CCCCCC">of them</font><font color="#E5E5E5"> so a lot of the office gating of</font>

554
00:19:46,880 --> 00:19:51,350
my of<font color="#CCCCCC"> my tool which has</font><font color="#E5E5E5"> been a I</font>

555
00:19:49,120 --> 00:19:53,059
wouldn't call<font color="#CCCCCC"> it happy or sad it's a</font>

556
00:19:51,350 --> 00:19:54,320
kind of<font color="#E5E5E5"> weird feeling but it's</font>

557
00:19:53,059 --> 00:19:56,450
definitely been<font color="#CCCCCC"> interesting to see it</font>

558
00:19:54,320 --> 00:19:58,939
used a<font color="#E5E5E5"> lot more out there besides just</font>

559
00:19:56,450 --> 00:20:02,029
<font color="#CCCCCC">contesters using it</font><font color="#E5E5E5"> so</font><font color="#CCCCCC"> I've already</font>

560
00:19:58,940 --> 00:20:03,860
mentioned<font color="#E5E5E5"> a</font><font color="#CCCCCC"> MSI and one of the other</font>

561
00:20:02,029 --> 00:20:05,990
things<font color="#CCCCCC"> Lee homes is a really</font><font color="#E5E5E5"> really</font>

562
00:20:03,860 --> 00:20:07,789
<font color="#E5E5E5">awesome guy at Microsoft he actually was</font>

563
00:20:05,990 --> 00:20:08,400
originally<font color="#CCCCCC"> on the PowerShell team at</font>

564
00:20:07,789 --> 00:20:10,260
Microsoft

565
00:20:08,400 --> 00:20:12,809
so<font color="#E5E5E5"> he kind of helped write it which is</font>

566
00:20:10,260 --> 00:20:15,809
pretty sweet and now<font color="#CCCCCC"> his lead security</font>

567
00:20:12,809 --> 00:20:17,040
architect<font color="#E5E5E5"> at on the</font><font color="#CCCCCC"> Azure team</font><font color="#E5E5E5"> but after</font>

568
00:20:15,809 --> 00:20:18,990
<font color="#CCCCCC">I releases told derbycon</font>

569
00:20:17,040 --> 00:20:20,760
he<font color="#E5E5E5"> published his blog post I'm called</font>

570
00:20:18,990 --> 00:20:23,430
more detecting office gated<font color="#E5E5E5"> PowerShell</font>

571
00:20:20,760 --> 00:20:24,690
<font color="#CCCCCC">and</font><font color="#E5E5E5"> he does some really cool nerdy</font>

572
00:20:23,430 --> 00:20:26,520
<font color="#CCCCCC">Matthew stuff like character</font>

573
00:20:24,690 --> 00:20:27,960
distribution and vector similarity and

574
00:20:26,520 --> 00:20:29,400
some really<font color="#CCCCCC"> neat stuff that really got</font>

575
00:20:27,960 --> 00:20:31,110
me<font color="#CCCCCC"> interested and we've been chatting</font>

576
00:20:29,400 --> 00:20:33,840
<font color="#E5E5E5">back</font><font color="#CCCCCC"> and forth ever since then and this</font>

577
00:20:31,110 --> 00:20:35,010
<font color="#E5E5E5">is actually the basis for a presentation</font>

578
00:20:33,840 --> 00:20:37,110
that we'll be giving<font color="#CCCCCC"> at blackhat this</font>

579
00:20:35,010 --> 00:20:38,970
year of looking<font color="#E5E5E5"> at some of</font><font color="#CCCCCC"> these more</font>

580
00:20:37,110 --> 00:20:41,340
statistical<font color="#CCCCCC"> pigmented analysis kind</font><font color="#E5E5E5"> of</font>

581
00:20:38,970 --> 00:20:43,170
stuff to detect this code does<font color="#CCCCCC"> not look</font>

582
00:20:41,340 --> 00:20:45,389
like<font color="#E5E5E5"> normal</font><font color="#CCCCCC"> code and how can</font><font color="#E5E5E5"> we actually</font>

583
00:20:43,170 --> 00:20:50,760
put that into a machine model to detect

584
00:20:45,390 --> 00:20:53,309
this kind<font color="#CCCCCC"> of occupation</font><font color="#E5E5E5"> so that was that</font>

585
00:20:50,760 --> 00:20:55,500
was recap what's the new stuff let's

586
00:20:53,309 --> 00:20:57,750
look at more crafting cryptic cradles

587
00:20:55,500 --> 00:20:59,520
and<font color="#E5E5E5"> I have to say first off</font><font color="#CCCCCC"> more is an</font>

588
00:20:57,750 --> 00:21:02,100
alternate spelling<font color="#E5E5E5"> comes from more plus</font>

589
00:20:59,520 --> 00:21:04,920
<font color="#E5E5E5">R or I guess it means more loudly</font><font color="#CCCCCC"> I</font>

590
00:21:02,100 --> 00:21:07,350
don't know<font color="#CCCCCC"> internet speak</font><font color="#E5E5E5"> but we're</font><font color="#CCCCCC"> look</font>

591
00:21:04,920 --> 00:21:09,390
at<font color="#E5E5E5"> three categories one obscure cradles</font>

592
00:21:07,350 --> 00:21:11,760
this<font color="#CCCCCC"> was actually</font><font color="#E5E5E5"> tweet that graver</font><font color="#CCCCCC"> matt</font>

593
00:21:09,390 --> 00:21:13,980
graver<font color="#E5E5E5"> who's now</font><font color="#CCCCCC"> with microsoft tweeted</font>

594
00:21:11,760 --> 00:21:16,260
about<font color="#CCCCCC"> a month and a half ago and does</font>

595
00:21:13,980 --> 00:21:20,520
anyone<font color="#E5E5E5"> recognize the syntax that's</font><font color="#CCCCCC"> IE x</font>

596
00:21:16,260 --> 00:21:22,559
<font color="#CCCCCC">IW r so</font><font color="#E5E5E5"> IW r as an alias for</font><font color="#CCCCCC"> invoke web</font>

597
00:21:20,520 --> 00:21:23,910
<font color="#E5E5E5">request which is powershell</font><font color="#CCCCCC"> 3 or later</font>

598
00:21:22,559 --> 00:21:25,440
which is<font color="#CCCCCC"> why you</font><font color="#E5E5E5"> don't see it in</font><font color="#CCCCCC"> many</font>

599
00:21:23,910 --> 00:21:27,030
attack tools because attacks will

600
00:21:25,440 --> 00:21:29,760
usually<font color="#E5E5E5"> like to be powershell</font><font color="#CCCCCC"> two and</font>

601
00:21:27,030 --> 00:21:31,320
<font color="#CCCCCC">four compatible</font><font color="#E5E5E5"> but this is something</font>

602
00:21:29,760 --> 00:21:32,670
<font color="#CCCCCC">that</font><font color="#E5E5E5"> works and it works</font><font color="#CCCCCC"> quite well on if</font>

603
00:21:31,320 --> 00:21:35,040
you're<font color="#CCCCCC"> now looking</font><font color="#E5E5E5"> for as a defender</font>

604
00:21:32,670 --> 00:21:38,550
<font color="#E5E5E5">then you know you're at a</font><font color="#CCCCCC"> disadvantage</font>

605
00:21:35,040 --> 00:21:39,720
there so what other what other cradles

606
00:21:38,550 --> 00:21:41,909
that<font color="#E5E5E5"> work that we just don't</font><font color="#CCCCCC"> really hear</font>

607
00:21:39,720 --> 00:21:43,140
<font color="#CCCCCC">that much about well then look at some</font>

608
00:21:41,910 --> 00:21:45,059
token authentication<font color="#E5E5E5"> that can take a</font>

609
00:21:43,140 --> 00:21:47,250
command like this<font color="#E5E5E5"> and produce something</font>

610
00:21:45,059 --> 00:21:48,928
<font color="#E5E5E5">like this all with completely different</font>

611
00:21:47,250 --> 00:21:51,990
<font color="#E5E5E5">occupation techniques and what we just</font>

612
00:21:48,929 --> 00:21:53,580
<font color="#E5E5E5">talked about and we'll look at all the</font>

613
00:21:51,990 --> 00:21:55,620
<font color="#CCCCCC">different kind of tokens that</font><font color="#E5E5E5"> allow us</font>

614
00:21:53,580 --> 00:21:56,939
<font color="#E5E5E5">to make this transformation and</font><font color="#CCCCCC"> then</font>

615
00:21:55,620 --> 00:21:59,909
<font color="#CCCCCC">we'll look at some</font><font color="#E5E5E5"> obscure invocation</font>

616
00:21:56,940 --> 00:22:01,200
<font color="#CCCCCC">some taxes that are in my</font><font color="#E5E5E5"> opinion part</font>

617
00:21:59,910 --> 00:22:02,850
of one of<font color="#E5E5E5"> the most important components</font>

618
00:22:01,200 --> 00:22:04,980
here because at some point<font color="#CCCCCC"> the code has</font>

619
00:22:02,850 --> 00:22:06,719
to<font color="#E5E5E5"> get invoked and</font><font color="#CCCCCC"> so if you really good</font>

620
00:22:04,980 --> 00:22:10,280
at<font color="#CCCCCC"> catching</font><font color="#E5E5E5"> these then you're setting</font>

621
00:22:06,720 --> 00:22:13,320
yourself<font color="#E5E5E5"> up for for an advantage there</font>

622
00:22:10,280 --> 00:22:14,220
so the way<font color="#CCCCCC"> that the tool breaks the</font>

623
00:22:13,320 --> 00:22:16,678
<font color="#E5E5E5">download cradles</font>

624
00:22:14,220 --> 00:22:18,690
into groups and<font color="#E5E5E5"> that is disk</font><font color="#CCCCCC"> based in</font>

625
00:22:16,679 --> 00:22:20,580
<font color="#CCCCCC">memory base so this</font><font color="#E5E5E5"> base there's a lot</font>

626
00:22:18,690 --> 00:22:22,409
fewer options in the tool

627
00:22:20,580 --> 00:22:24,269
but I do want to say most<font color="#E5E5E5"> people</font><font color="#CCCCCC"> don't</font>

628
00:22:22,409 --> 00:22:26,460
give<font color="#CCCCCC"> disk-based cradles much credit and</font>

629
00:22:24,269 --> 00:22:27,960
<font color="#E5E5E5">I would say that a lot of defenders are</font>

630
00:22:26,460 --> 00:22:30,750
looking for<font color="#E5E5E5"> just</font><font color="#CCCCCC"> basic cradles for</font><font color="#E5E5E5"> that</font>

631
00:22:27,960 --> 00:22:33,600
reason<font color="#E5E5E5"> and one one thing in my opinion</font>

632
00:22:30,750 --> 00:22:35,519
<font color="#E5E5E5">that I think does</font><font color="#CCCCCC"> not get any coverage</font>

633
00:22:33,600 --> 00:22:37,439
<font color="#E5E5E5">is the fact that why don't you</font><font color="#CCCCCC"> just</font>

634
00:22:35,519 --> 00:22:39,390
download all your PowerShell code to the

635
00:22:37,440 --> 00:22:41,850
profile script<font color="#CCCCCC"> and then all you have to</font>

636
00:22:39,390 --> 00:22:44,010
do is run PowerShell<font color="#CCCCCC"> you don't see any</font>

637
00:22:41,850 --> 00:22:45,480
invocation syntax at all here because<font color="#E5E5E5"> by</font>

638
00:22:44,010 --> 00:22:47,610
nature<font color="#CCCCCC"> of the profile script it's going</font>

639
00:22:45,480 --> 00:22:50,100
to run<font color="#E5E5E5"> whenever you run PowerShell so I</font>

640
00:22:47,610 --> 00:22:52,260
think<font color="#E5E5E5"> this</font><font color="#CCCCCC"> is a really overlooked</font><font color="#E5E5E5"> Avenue</font>

641
00:22:50,100 --> 00:22:54,000
commodity obviously uses PowerShell<font color="#E5E5E5"> to</font>

642
00:22:52,260 --> 00:22:55,230
<font color="#E5E5E5">download binaries to disk but if you're</font>

643
00:22:54,000 --> 00:22:56,909
just<font color="#E5E5E5"> running PowerShell code there</font><font color="#CCCCCC"> is</font>

644
00:22:55,230 --> 00:22:59,760
some advantage<font color="#CCCCCC"> to downloading</font><font color="#E5E5E5"> it to disk</font>

645
00:22:56,909 --> 00:23:01,740
in<font color="#E5E5E5"> my opinion</font><font color="#CCCCCC"> if</font><font color="#E5E5E5"> nothing else is to</font>

646
00:22:59,760 --> 00:23:03,779
catch<font color="#CCCCCC"> defender I'm off guard but</font><font color="#E5E5E5"> we have</font>

647
00:23:01,740 --> 00:23:05,070
<font color="#CCCCCC">download file we have bits admin which</font>

648
00:23:03,779 --> 00:23:06,360
is technically deprecated<font color="#E5E5E5"> but it still</font>

649
00:23:05,070 --> 00:23:08,158
works<font color="#E5E5E5"> which is the</font><font color="#CCCCCC"> background</font>

650
00:23:06,360 --> 00:23:09,928
intelligent transfer service<font color="#E5E5E5"> and then</font>

651
00:23:08,159 --> 00:23:11,340
<font color="#E5E5E5">you also have power shells replacement</font>

652
00:23:09,929 --> 00:23:14,669
of<font color="#E5E5E5"> this admin which is the start bit</font>

653
00:23:11,340 --> 00:23:16,649
transfer now interesting point<font color="#E5E5E5"> here</font><font color="#CCCCCC"> if</font>

654
00:23:14,669 --> 00:23:17,940
you are trying to<font color="#E5E5E5"> host a payload on</font>

655
00:23:16,649 --> 00:23:19,350
<font color="#CCCCCC">paceman or something like</font><font color="#E5E5E5"> that</font>

656
00:23:17,940 --> 00:23:21,809
<font color="#E5E5E5">wherever</font><font color="#CCCCCC"> your hosting is if it does</font><font color="#E5E5E5"> not</font>

657
00:23:19,350 --> 00:23:23,250
<font color="#CCCCCC">return a file size</font><font color="#E5E5E5"> this is not going to</font>

658
00:23:21,809 --> 00:23:24,360
work because<font color="#CCCCCC"> the</font><font color="#E5E5E5"> nature of how it does</font>

659
00:23:23,250 --> 00:23:26,010
it have to chunk up the files into

660
00:23:24,360 --> 00:23:27,330
<font color="#E5E5E5">different pieces so</font><font color="#CCCCCC"> it's actually</font><font color="#E5E5E5"> going</font>

661
00:23:26,010 --> 00:23:28,379
<font color="#E5E5E5">to give you this error so make</font><font color="#CCCCCC"> sure you</font>

662
00:23:27,330 --> 00:23:30,240
test wherever you're pointing your

663
00:23:28,380 --> 00:23:31,980
payload to because you<font color="#E5E5E5"> want</font><font color="#CCCCCC"> to make sure</font>

664
00:23:30,240 --> 00:23:33,210
that this can actually<font color="#E5E5E5"> pull it down but</font>

665
00:23:31,980 --> 00:23:34,500
you<font color="#E5E5E5"> may ask well then why</font><font color="#CCCCCC"> would I even</font>

666
00:23:33,210 --> 00:23:36,240
<font color="#E5E5E5">use bits in the first place</font>

667
00:23:34,500 --> 00:23:38,010
<font color="#E5E5E5">what's for this reason right here is</font>

668
00:23:36,240 --> 00:23:40,139
that you have<font color="#E5E5E5"> comm which stands for</font>

669
00:23:38,010 --> 00:23:42,809
<font color="#E5E5E5">constrained language mode now in</font>

670
00:23:40,139 --> 00:23:45,000
<font color="#CCCCCC">powershell v</font><font color="#E5E5E5"> constraint language mode is</font>

671
00:23:42,809 --> 00:23:46,950
a typically enforced with<font color="#E5E5E5"> a blocker or</font>

672
00:23:45,000 --> 00:23:48,120
something else<font color="#E5E5E5"> but essentially it's</font><font color="#CCCCCC"> not</font>

673
00:23:46,950 --> 00:23:50,610
even<font color="#CCCCCC"> what not even designed as a</font>

674
00:23:48,120 --> 00:23:52,260
security<font color="#E5E5E5"> feature but you can use it as</font>

675
00:23:50,610 --> 00:23:52,979
such and it will basically limit the

676
00:23:52,260 --> 00:23:54,539
<font color="#E5E5E5">commandlets</font>

677
00:23:52,980 --> 00:23:56,970
<font color="#E5E5E5">that are available in a powershell</font>

678
00:23:54,539 --> 00:23:59,490
session<font color="#E5E5E5"> it will</font><font color="#CCCCCC"> constrain the language</font>

679
00:23:56,970 --> 00:24:00,899
so if you're on a system<font color="#E5E5E5"> that is in</font><font color="#CCCCCC"> a</font>

680
00:23:59,490 --> 00:24:02,039
<font color="#E5E5E5">constrained language mode which you</font>

681
00:24:00,899 --> 00:24:03,479
probably<font color="#E5E5E5"> won't see for a couple of years</font>

682
00:24:02,039 --> 00:24:05,760
<font color="#CCCCCC">because not many people are</font><font color="#E5E5E5"> doing</font><font color="#CCCCCC"> it but</font>

683
00:24:03,480 --> 00:24:07,440
it's amazing<font color="#CCCCCC"> if you do if you're</font><font color="#E5E5E5"> on that</font>

684
00:24:05,760 --> 00:24:09,720
<font color="#CCCCCC">system then this</font><font color="#E5E5E5"> is a way that you can</font>

685
00:24:07,440 --> 00:24:11,580
<font color="#E5E5E5">download code because you can't run that</font>

686
00:24:09,720 --> 00:24:14,279
first one because<font color="#E5E5E5"> constraint language</font>

687
00:24:11,580 --> 00:24:16,320
mode says yeah you<font color="#E5E5E5"> met</font><font color="#CCCCCC"> that web client</font>

688
00:24:14,279 --> 00:24:18,750
that doesn't<font color="#E5E5E5"> even exist on</font><font color="#CCCCCC"> the system</font>

689
00:24:16,320 --> 00:24:20,760
you're<font color="#CCCCCC"> not allowed to do that</font><font color="#E5E5E5"> so pretty</font>

690
00:24:18,750 --> 00:24:23,130
<font color="#CCCCCC">interesting stuff</font><font color="#E5E5E5"> there</font><font color="#CCCCCC"> so that</font><font color="#E5E5E5"> was</font><font color="#CCCCCC"> disk</font>

691
00:24:20,760 --> 00:24:24,690
<font color="#E5E5E5">space now this is the list of memory</font>

692
00:24:23,130 --> 00:24:26,549
based cradles<font color="#CCCCCC"> that are currently in the</font>

693
00:24:24,690 --> 00:24:27,539
tool so<font color="#E5E5E5"> I'm not gonna talk about the</font>

694
00:24:26,549 --> 00:24:29,970
first<font color="#CCCCCC"> one we've already pretty</font><font color="#E5E5E5"> much</font>

695
00:24:27,539 --> 00:24:31,670
<font color="#E5E5E5">covered that</font><font color="#CCCCCC"> the download string client</font>

696
00:24:29,970 --> 00:24:34,550
for the net dot web client

697
00:24:31,670 --> 00:24:36,800
net-net class download data and open

698
00:24:34,550 --> 00:24:38,419
read very very<font color="#E5E5E5"> similar except instead of</font>

699
00:24:36,800 --> 00:24:40,370
<font color="#E5E5E5">returning a string they return a byte</font>

700
00:24:38,420 --> 00:24:41,870
<font color="#CCCCCC">array or a byte stream which means you</font>

701
00:24:40,370 --> 00:24:43,040
need to<font color="#CCCCCC"> add a little</font><font color="#E5E5E5"> bit</font><font color="#CCCCCC"> more context</font>

702
00:24:41,870 --> 00:24:45,250
around<font color="#E5E5E5"> that command to convert it back</font>

703
00:24:43,040 --> 00:24:47,450
to an expression<font color="#E5E5E5"> before it's invoked</font>

704
00:24:45,250 --> 00:24:49,460
<font color="#E5E5E5">invoked web request this is what was on</font>

705
00:24:47,450 --> 00:24:51,080
<font color="#CCCCCC">mat grabbers tweet</font><font color="#E5E5E5"> earlier invoke web</font>

706
00:24:49,460 --> 00:24:52,970
<font color="#CCCCCC">request and invoke</font><font color="#E5E5E5"> the rest</font><font color="#CCCCCC"> method and</font>

707
00:24:51,080 --> 00:24:56,210
with all<font color="#E5E5E5"> their aliases here are again</font>

708
00:24:52,970 --> 00:24:58,250
<font color="#CCCCCC">PowerShell 3 and later</font><font color="#E5E5E5"> but as such they</font>

709
00:24:56,210 --> 00:25:02,090
<font color="#CCCCCC">also work with constrain</font><font color="#E5E5E5"> language mode</font>

710
00:24:58,250 --> 00:25:04,700
pretty nice to know<font color="#CCCCCC"> number 6 is actually</font>

711
00:25:02,090 --> 00:25:06,830
<font color="#E5E5E5">one of my favorites because it has a</font>

712
00:25:04,700 --> 00:25:08,600
certain benefit about<font color="#E5E5E5"> it that you can</font>

713
00:25:06,830 --> 00:25:10,639
use<font color="#CCCCCC"> all the</font><font color="#E5E5E5"> way back to</font><font color="#CCCCCC"> PowerShell 2 and</font>

714
00:25:08,600 --> 00:25:12,320
that<font color="#E5E5E5"> is you can instantiate an</font><font color="#CCCCCC"> object</font>

715
00:25:10,640 --> 00:25:13,580
without<font color="#E5E5E5"> having</font><font color="#CCCCCC"> to use</font><font color="#E5E5E5"> the new</font><font color="#CCCCCC"> object</font>

716
00:25:12,320 --> 00:25:16,129
<font color="#E5E5E5">commandment which means there's going to</font>

717
00:25:13,580 --> 00:25:17,840
<font color="#E5E5E5">be zero module logs</font><font color="#CCCCCC"> PowerShell</font><font color="#E5E5E5"> when you</font>

718
00:25:16,130 --> 00:25:19,340
run this now obviously<font color="#E5E5E5"> there's going to</font>

719
00:25:17,840 --> 00:25:20,929
be script<font color="#CCCCCC"> lock logs and transcription</font>

720
00:25:19,340 --> 00:25:22,610
<font color="#E5E5E5">logs of those things like that but it's</font>

721
00:25:20,930 --> 00:25:24,710
an<font color="#E5E5E5"> interesting component that I think</font><font color="#CCCCCC"> is</font>

722
00:25:22,610 --> 00:25:26,439
<font color="#CCCCCC">often overlooked</font><font color="#E5E5E5"> but there's some basic</font>

723
00:25:24,710 --> 00:25:30,340
syntax<font color="#E5E5E5"> there of how you can</font><font color="#CCCCCC"> create that</font>

724
00:25:26,440 --> 00:25:32,570
<font color="#E5E5E5">HTTP web request dotnet class directly</font>

725
00:25:30,340 --> 00:25:34,580
send<font color="#E5E5E5"> keys this one is strictly for the</font>

726
00:25:32,570 --> 00:25:35,840
<font color="#E5E5E5">lolz this one's in the tool please don't</font>

727
00:25:34,580 --> 00:25:36,830
bet money on<font color="#E5E5E5"> this working</font><font color="#CCCCCC"> and please</font>

728
00:25:35,840 --> 00:25:38,570
don't tell me what<font color="#E5E5E5"> it</font><font color="#CCCCCC"> doesn't work</font>

729
00:25:36,830 --> 00:25:40,220
<font color="#CCCCCC">because I know it's kind of shoddy but I</font>

730
00:25:38,570 --> 00:25:41,720
spent way too<font color="#E5E5E5"> much</font><font color="#CCCCCC"> time on it to not put</font>

731
00:25:40,220 --> 00:25:43,850
it in the tool so if it works<font color="#E5E5E5"> one out of</font>

732
00:25:41,720 --> 00:25:46,610
a<font color="#E5E5E5"> couple times then that makes me</font><font color="#CCCCCC"> happy</font>

733
00:25:43,850 --> 00:25:48,409
<font color="#CCCCCC">but the general the general idea is</font><font color="#E5E5E5"> that</font>

734
00:25:46,610 --> 00:25:50,510
it's<font color="#E5E5E5"> possible so let's say you take</font>

735
00:25:48,410 --> 00:25:52,400
notepad as an attacker<font color="#E5E5E5"> and you had to</font>

736
00:25:50,510 --> 00:25:55,010
open<font color="#E5E5E5"> the file but maybe you put in the</font>

737
00:25:52,400 --> 00:25:56,630
URL<font color="#E5E5E5"> instead of a</font><font color="#CCCCCC"> filename well if you</font>

738
00:25:55,010 --> 00:25:58,910
open<font color="#CCCCCC"> that</font><font color="#E5E5E5"> no</font><font color="#CCCCCC"> pets actually going to</font>

739
00:25:56,630 --> 00:26:00,860
fetch<font color="#E5E5E5"> that payload for you so this got</font>

740
00:25:58,910 --> 00:26:03,590
me thinking<font color="#E5E5E5"> well how can I</font><font color="#CCCCCC"> allow this</font>

741
00:26:00,860 --> 00:26:05,449
<font color="#E5E5E5">because it has a really sexy component</font>

742
00:26:03,590 --> 00:26:06,770
in that<font color="#E5E5E5"> let's say as a defender you</font>

743
00:26:05,450 --> 00:26:08,540
<font color="#E5E5E5">realize man there's a lot of</font>

744
00:26:06,770 --> 00:26:09,950
authentication out there why<font color="#E5E5E5"> don't I</font>

745
00:26:08,540 --> 00:26:11,720
<font color="#E5E5E5">just look for PowerShell making network</font>

746
00:26:09,950 --> 00:26:13,400
connections period<font color="#E5E5E5"> let me make that</font>

747
00:26:11,720 --> 00:26:15,350
<font color="#E5E5E5">another angle in the way that I'm trying</font>

748
00:26:13,400 --> 00:26:17,690
<font color="#CCCCCC">to attack this problem well if you do</font>

749
00:26:15,350 --> 00:26:19,159
that<font color="#CCCCCC"> and if an attacker does this then</font>

750
00:26:17,690 --> 00:26:20,660
PowerShell is nowhere<font color="#E5E5E5"> to</font><font color="#CCCCCC"> be found</font>

751
00:26:19,160 --> 00:26:22,970
<font color="#E5E5E5">notepad making a network connection</font>

752
00:26:20,660 --> 00:26:24,110
which<font color="#E5E5E5"> is pretty darn suspicious for</font>

753
00:26:22,970 --> 00:26:25,370
notepad that<font color="#E5E5E5"> should be something you're</font>

754
00:26:24,110 --> 00:26:28,729
looking for let's go<font color="#CCCCCC"> ahead and say that</font>

755
00:26:25,370 --> 00:26:30,949
up<font color="#CCCCCC"> front</font><font color="#E5E5E5"> but we can use this sin</font><font color="#CCCCCC"> keys</font>

756
00:26:28,730 --> 00:26:34,760
class<font color="#E5E5E5"> which is another dotnet class and</font>

757
00:26:30,950 --> 00:26:35,960
automate this<font color="#CCCCCC"> and so there</font><font color="#E5E5E5"> we'll cover</font>

758
00:26:34,760 --> 00:26:37,190
<font color="#E5E5E5">some of the artifacts</font><font color="#CCCCCC"> that happen behind</font>

759
00:26:35,960 --> 00:26:40,970
the<font color="#E5E5E5"> scenes but this really got me</font>

760
00:26:37,190 --> 00:26:42,710
thinking<font color="#E5E5E5"> how</font><font color="#CCCCCC"> can I pawn off behavior and</font>

761
00:26:40,970 --> 00:26:45,740
even indicators

762
00:26:42,710 --> 00:26:48,530
from<font color="#CCCCCC"> PowerShell to other native trusted</font>

763
00:26:45,740 --> 00:26:52,160
applications and as an incident response

764
00:26:48,530 --> 00:26:53,930
guy<font color="#E5E5E5"> how can</font><font color="#CCCCCC"> I take that</font><font color="#E5E5E5"> into account and</font>

765
00:26:52,160 --> 00:26:56,660
look for these<font color="#CCCCCC"> indicators and which ones</font>

766
00:26:53,930 --> 00:26:58,460
are<font color="#CCCCCC"> very uncommon</font><font color="#E5E5E5"> which ones are really</font>

767
00:26:56,660 --> 00:27:02,360
<font color="#E5E5E5">two</font><font color="#CCCCCC"> common served to be anything</font><font color="#E5E5E5"> worth</font>

768
00:26:58,460 --> 00:27:04,000
looking for this led me<font color="#E5E5E5"> to calm objects</font>

769
00:27:02,360 --> 00:27:06,110
what's the better way<font color="#CCCCCC"> to pawn off</font>

770
00:27:04,000 --> 00:27:09,110
<font color="#CCCCCC">network connections</font><font color="#E5E5E5"> and other things</font><font color="#CCCCCC"> of</font>

771
00:27:06,110 --> 00:27:13,189
PowerShell and<font color="#CCCCCC"> calm objects so calm is a</font>

772
00:27:09,110 --> 00:27:15,409
common<font color="#CCCCCC"> object model Casey Smith and Matt</font>

773
00:27:13,190 --> 00:27:16,610
Nelson<font color="#E5E5E5"> are</font><font color="#CCCCCC"> two the guys sub T and enigma</font>

774
00:27:15,410 --> 00:27:20,390
on<font color="#E5E5E5"> Twitter have done a lot</font><font color="#CCCCCC"> of really</font>

775
00:27:16,610 --> 00:27:21,770
<font color="#E5E5E5">good talks on comm and it's it's older</font>

776
00:27:20,390 --> 00:27:23,000
<font color="#CCCCCC">than dirt and it's kind of getting</font>

777
00:27:21,770 --> 00:27:24,620
rediscovered in<font color="#E5E5E5"> the security world</font>

778
00:27:23,000 --> 00:27:26,540
because there's some<font color="#E5E5E5"> amazing things you</font>

779
00:27:24,620 --> 00:27:28,669
can<font color="#E5E5E5"> do with comm so basically what this</font>

780
00:27:26,540 --> 00:27:30,230
will<font color="#CCCCCC"> allow you to do is with PowerShell</font>

781
00:27:28,670 --> 00:27:32,180
<font color="#E5E5E5">which you can access</font><font color="#CCCCCC"> comm through</font>

782
00:27:30,230 --> 00:27:33,830
anything<font color="#CCCCCC"> but what PowerShell you</font><font color="#E5E5E5"> can</font>

783
00:27:32,180 --> 00:27:36,400
<font color="#E5E5E5">basically say let me create an instance</font>

784
00:27:33,830 --> 00:27:38,600
of<font color="#CCCCCC"> Windward</font><font color="#E5E5E5"> excel Internet Explorer</font>

785
00:27:36,400 --> 00:27:40,310
<font color="#E5E5E5">completely hidden from the user</font><font color="#CCCCCC"> and</font><font color="#E5E5E5"> let</font>

786
00:27:38,600 --> 00:27:42,169
me have<font color="#CCCCCC"> that application</font><font color="#E5E5E5"> go fetch my</font>

787
00:27:40,310 --> 00:27:43,370
<font color="#CCCCCC">payload and how this query out of it</font><font color="#E5E5E5"> so</font>

788
00:27:42,170 --> 00:27:45,050
you have to worry<font color="#E5E5E5"> about any weird send</font>

789
00:27:43,370 --> 00:27:46,699
<font color="#E5E5E5">keys or notepad popping up for the user</font>

790
00:27:45,050 --> 00:27:48,110
<font color="#E5E5E5">or anything like that</font><font color="#CCCCCC"> a lot slicker</font>

791
00:27:46,700 --> 00:27:49,250
model and when it<font color="#E5E5E5"> comes to Internet</font>

792
00:27:48,110 --> 00:27:52,010
<font color="#E5E5E5">Explorer you're actually using the</font>

793
00:27:49,250 --> 00:27:53,300
<font color="#E5E5E5">default credentials and proxy</font>

794
00:27:52,010 --> 00:27:54,650
<font color="#CCCCCC">information that's in</font><font color="#E5E5E5"> that users</font>

795
00:27:53,300 --> 00:27:57,379
<font color="#CCCCCC">Internet Explorer session so that's</font>

796
00:27:54,650 --> 00:27:59,510
<font color="#E5E5E5">pretty handy and the last section is</font>

797
00:27:57,380 --> 00:28:01,760
<font color="#CCCCCC">inline scripting so PowerShell is so</font>

798
00:27:59,510 --> 00:28:04,070
flexible<font color="#CCCCCC"> it makes it</font><font color="#E5E5E5"> super easy to</font>

799
00:28:01,760 --> 00:28:04,460
<font color="#CCCCCC">actually run inline scripts like VB</font>

800
00:28:04,070 --> 00:28:07,250
script

801
00:28:04,460 --> 00:28:10,520
<font color="#CCCCCC">c-sharp</font><font color="#E5E5E5"> is</font><font color="#CCCCCC"> the default</font><font color="#E5E5E5"> and jscript and</font>

802
00:28:07,250 --> 00:28:12,740
so basically you can<font color="#CCCCCC"> create a c-sharp</font>

803
00:28:10,520 --> 00:28:16,160
<font color="#E5E5E5">script and then just use this</font><font color="#CCCCCC"> ad type</font>

804
00:28:12,740 --> 00:28:18,380
command now a lot of<font color="#E5E5E5"> attack frameworks</font>

805
00:28:16,160 --> 00:28:19,820
uses<font color="#CCCCCC"> ad types a lot of financial phone</font>

806
00:28:18,380 --> 00:28:21,560
actors use this but<font color="#E5E5E5"> most people don't</font>

807
00:28:19,820 --> 00:28:23,210
<font color="#E5E5E5">know what is actually happening behind</font>

808
00:28:21,560 --> 00:28:25,159
the scenes because<font color="#E5E5E5"> it's really freaking</font>

809
00:28:23,210 --> 00:28:27,400
noisy<font color="#E5E5E5"> ad type basically says on the</font>

810
00:28:25,160 --> 00:28:29,720
target system wherever<font color="#E5E5E5"> this script lands</font>

811
00:28:27,400 --> 00:28:31,190
<font color="#E5E5E5">PowerShell is going to spawn</font><font color="#CCCCCC"> CSCE to</font>

812
00:28:29,720 --> 00:28:34,330
compile it and then it's going<font color="#E5E5E5"> to</font>

813
00:28:31,190 --> 00:28:36,260
respond<font color="#CCCCCC"> cv</font><font color="#E5E5E5"> CSC is going to spawn</font><font color="#CCCCCC"> CBD</font><font color="#E5E5E5"> res</font>

814
00:28:34,330 --> 00:28:38,149
and so we'll talk about<font color="#E5E5E5"> that</font><font color="#CCCCCC"> in the</font>

815
00:28:36,260 --> 00:28:40,340
indicators<font color="#E5E5E5"> but it's really noisy</font><font color="#CCCCCC"> really</font>

816
00:28:38,150 --> 00:28:42,110
good for<font color="#E5E5E5"> D for people to find this kind</font>

817
00:28:40,340 --> 00:28:44,090
<font color="#E5E5E5">of stuff if you're a red teamer</font><font color="#CCCCCC"> I would</font>

818
00:28:42,110 --> 00:28:45,169
say<font color="#E5E5E5"> use this sparingly</font><font color="#CCCCCC"> because if you're</font>

819
00:28:44,090 --> 00:28:47,629
in<font color="#CCCCCC"> an environment</font><font color="#E5E5E5"> where they're not</font>

820
00:28:45,170 --> 00:28:49,630
compiling inline code like<font color="#CCCCCC"> that there's</font>

821
00:28:47,630 --> 00:28:51,750
a huge red flag<font color="#CCCCCC"> if</font><font color="#E5E5E5"> you're</font>

822
00:28:49,630 --> 00:28:54,400
<font color="#CCCCCC">sokka's looking at that kind of activity</font>

823
00:28:51,750 --> 00:28:56,020
<font color="#CCCCCC">so what's the alternative and why would</font>

824
00:28:54,400 --> 00:28:57,700
you<font color="#E5E5E5"> even do this in</font><font color="#CCCCCC"> the</font><font color="#E5E5E5"> first</font><font color="#CCCCCC"> place</font><font color="#E5E5E5"> well</font>

825
00:28:56,020 --> 00:29:01,210
if you'll notice the<font color="#E5E5E5"> c-sharp script is</font>

826
00:28:57,700 --> 00:29:04,000
<font color="#E5E5E5">actually creating a web client class and</font>

827
00:29:01,210 --> 00:29:05,530
calling<font color="#CCCCCC"> downloads string since c-sharp</font>

828
00:29:04,000 --> 00:29:08,350
<font color="#E5E5E5">even though it's running</font><font color="#CCCCCC"> in PowerShell</font>

829
00:29:05,530 --> 00:29:10,149
<font color="#CCCCCC">says c-sharp is calling that powershell</font>

830
00:29:08,350 --> 00:29:12,610
never sees that<font color="#E5E5E5"> and it never hits any of</font>

831
00:29:10,150 --> 00:29:14,440
the<font color="#CCCCCC"> powershell logs so now even though</font>

832
00:29:12,610 --> 00:29:16,059
powershell logs will say hey I see

833
00:29:14,440 --> 00:29:18,910
<font color="#E5E5E5">PowerShell accessing this net class</font>

834
00:29:16,059 --> 00:29:20,710
<font color="#CCCCCC">powershell can just post c-sharp have</font>

835
00:29:18,910 --> 00:29:22,750
c-sharp go do all the dotnet stuff and

836
00:29:20,710 --> 00:29:24,100
<font color="#CCCCCC">powershell laws will never see it</font><font color="#E5E5E5"> so how</font>

837
00:29:22,750 --> 00:29:26,380
do you<font color="#E5E5E5"> get the best of both</font><font color="#CCCCCC"> worlds</font>

838
00:29:24,100 --> 00:29:28,030
you just pre compile your stuff<font color="#E5E5E5"> use your</font>

839
00:29:26,380 --> 00:29:30,760
compilation on your system so<font color="#CCCCCC"> your</font>

840
00:29:28,030 --> 00:29:32,850
attacker system has<font color="#CCCCCC"> CSEC T res blah blah</font>

841
00:29:30,760 --> 00:29:36,879
blah<font color="#E5E5E5"> you just reading</font><font color="#CCCCCC"> into the binary</font>

842
00:29:32,850 --> 00:29:38,320
array<font color="#E5E5E5"> and shove that in and the</font><font color="#CCCCCC"> only</font>

843
00:29:36,880 --> 00:29:39,669
thing that<font color="#CCCCCC"> hits power cell walls</font><font color="#E5E5E5"> are the</font>

844
00:29:38,320 --> 00:29:41,710
very initial command which<font color="#E5E5E5"> is this load</font>

845
00:29:39,669 --> 00:29:42,970
command in this scenario this variable

846
00:29:41,710 --> 00:29:44,440
bytes encoded is it going to be your

847
00:29:42,970 --> 00:29:48,280
<font color="#E5E5E5">long string of bytes which</font><font color="#CCCCCC"> we'll see an</font>

848
00:29:44,440 --> 00:29:49,929
<font color="#E5E5E5">example of that</font><font color="#CCCCCC"> in the demo</font><font color="#E5E5E5"> so that</font><font color="#CCCCCC"> was</font>

849
00:29:48,280 --> 00:29:53,260
looking at the two main categories<font color="#CCCCCC"> space</font>

850
00:29:49,929 --> 00:29:55,090
and memory<font color="#E5E5E5"> based cradles so next what</font>

851
00:29:53,260 --> 00:29:57,640
<font color="#E5E5E5">about the occupation</font><font color="#CCCCCC"> alright</font><font color="#E5E5E5"> well</font>

852
00:29:55,090 --> 00:29:59,678
there's kind<font color="#E5E5E5"> of in a sense office</font><font color="#CCCCCC"> Gatien</font>

853
00:29:57,640 --> 00:30:01,059
in the obscurity component<font color="#CCCCCC"> right like</font>

854
00:29:59,679 --> 00:30:02,740
<font color="#E5E5E5">you're not looking for power</font><font color="#CCCCCC"> Cellcom</font>

855
00:30:01,059 --> 00:30:04,928
<font color="#E5E5E5">objects with</font><font color="#CCCCCC"> internet explorer</font><font color="#E5E5E5"> our</font>

856
00:30:02,740 --> 00:30:06,880
<font color="#CCCCCC">powershell fin</font><font color="#E5E5E5"> keys with</font><font color="#CCCCCC"> notepad or even</font>

857
00:30:04,929 --> 00:30:08,890
c-sharp<font color="#E5E5E5"> interactions but you want to</font>

858
00:30:06,880 --> 00:30:10,150
<font color="#E5E5E5">start</font><font color="#CCCCCC"> looking for that at that</font><font color="#E5E5E5"> point an</font>

859
00:30:08,890 --> 00:30:11,380
attacker doesn't<font color="#E5E5E5"> really have top you</font>

860
00:30:10,150 --> 00:30:12,580
skated because you may not even<font color="#E5E5E5"> be</font>

861
00:30:11,380 --> 00:30:14,740
<font color="#CCCCCC">looking for the non up</font><font color="#E5E5E5"> you skated</font>

862
00:30:12,580 --> 00:30:16,178
version but let's say you are how might

863
00:30:14,740 --> 00:30:18,700
an attacker off you<font color="#E5E5E5"> skate</font><font color="#CCCCCC"> from this</font>

864
00:30:16,179 --> 00:30:20,710
point<font color="#E5E5E5"> well we'll look at our familiar</font>

865
00:30:18,700 --> 00:30:23,020
example here but we'll look at<font color="#E5E5E5"> how its</font>

866
00:30:20,710 --> 00:30:24,970
cradle crafter<font color="#E5E5E5"> off you skater what kind</font>

867
00:30:23,020 --> 00:30:27,610
of options is we have here well the

868
00:30:24,970 --> 00:30:30,370
download string method one<font color="#E5E5E5"> of the things</font>

869
00:30:27,610 --> 00:30:32,620
we can do is we<font color="#E5E5E5"> can say</font><font color="#CCCCCC"> okay that's</font><font color="#E5E5E5"> the</font>

870
00:30:30,370 --> 00:30:34,418
<font color="#E5E5E5">method</font><font color="#CCCCCC"> of net web point right so what if</font>

871
00:30:32,620 --> 00:30:36,489
we create and net<font color="#E5E5E5"> that web client object</font>

872
00:30:34,419 --> 00:30:39,309
<font color="#E5E5E5">it's like we're doing in the command but</font>

873
00:30:36,490 --> 00:30:41,770
let's<font color="#E5E5E5"> just say dot PS object dot methods</font>

874
00:30:39,309 --> 00:30:43,418
<font color="#E5E5E5">and this is basically a way to say tell</font>

875
00:30:41,770 --> 00:30:44,860
me<font color="#E5E5E5"> about yourself</font><font color="#CCCCCC"> what</font><font color="#E5E5E5"> kind of methods</font>

876
00:30:43,419 --> 00:30:47,590
do<font color="#CCCCCC"> you have what kind of variables did</font>

877
00:30:44,860 --> 00:30:49,719
it take you<font color="#E5E5E5"> get this huge list</font><font color="#CCCCCC"> of all</font>

878
00:30:47,590 --> 00:30:51,908
these methods<font color="#E5E5E5"> that that the object has</font>

879
00:30:49,720 --> 00:30:54,070
you could also do pipe it<font color="#E5E5E5"> to get member</font>

880
00:30:51,909 --> 00:30:56,770
in<font color="#CCCCCC"> PowerShell and get the same stuff</font><font color="#E5E5E5"> in</font>

881
00:30:54,070 --> 00:30:57,570
a lot prettier format and invoke<font color="#CCCCCC"> cradle</font>

882
00:30:56,770 --> 00:30:59,340
crafter has<font color="#E5E5E5"> both</font>

883
00:30:57,570 --> 00:31:01,800
options<font color="#E5E5E5"> built-in but</font><font color="#CCCCCC"> we'll go back with</font>

884
00:30:59,340 --> 00:31:05,429
the first<font color="#E5E5E5"> one so PS object methods now</font>

885
00:31:01,800 --> 00:31:06,750
if you'll notice<font color="#E5E5E5"> we can then say</font><font color="#CCCCCC"> okay</font>

886
00:31:05,430 --> 00:31:09,120
let me query and let me say where the

887
00:31:06,750 --> 00:31:11,910
object name is like download string and

888
00:31:09,120 --> 00:31:13,610
we see<font color="#E5E5E5"> here we get our to our</font><font color="#CCCCCC"> overloaded</font>

889
00:31:11,910 --> 00:31:15,990
definitions<font color="#CCCCCC"> therefore a string or a URI</font>

890
00:31:13,610 --> 00:31:17,219
<font color="#E5E5E5">so now we can do is say</font><font color="#CCCCCC"> this yeah just</font>

891
00:31:15,990 --> 00:31:18,720
give<font color="#E5E5E5"> me the name I don't care about I</font>

892
00:31:17,220 --> 00:31:20,120
don't<font color="#CCCCCC"> care</font><font color="#E5E5E5"> about all this other stuff</font><font color="#CCCCCC"> I</font>

893
00:31:18,720 --> 00:31:22,470
<font color="#E5E5E5">just want the name download string</font>

894
00:31:20,120 --> 00:31:24,300
perfect<font color="#E5E5E5"> so this is the way that we can</font>

895
00:31:22,470 --> 00:31:25,590
get download string<font color="#CCCCCC"> now the last</font><font color="#E5E5E5"> little</font>

896
00:31:24,300 --> 00:31:27,240
bit is<font color="#CCCCCC"> what's going</font><font color="#E5E5E5"> to make</font><font color="#CCCCCC"> more sense</font>

897
00:31:25,590 --> 00:31:29,340
here<font color="#CCCCCC"> instead</font><font color="#E5E5E5"> of saying like download</font>

898
00:31:27,240 --> 00:31:32,130
string<font color="#E5E5E5"> why don't we just randomly choose</font>

899
00:31:29,340 --> 00:31:34,500
some wild card<font color="#E5E5E5"> examples that will only</font>

900
00:31:32,130 --> 00:31:37,350
<font color="#E5E5E5">match on download string and replace</font>

901
00:31:34,500 --> 00:31:39,390
<font color="#CCCCCC">that so now this whole big red chunk</font><font color="#E5E5E5"> is</font>

902
00:31:37,350 --> 00:31:41,610
download string<font color="#E5E5E5"> without ever having the</font>

903
00:31:39,390 --> 00:31:42,600
spell download string<font color="#E5E5E5"> this</font><font color="#CCCCCC"> is</font><font color="#E5E5E5"> the kind</font>

904
00:31:41,610 --> 00:31:44,310
of stuff<font color="#E5E5E5"> we're looking for</font><font color="#CCCCCC"> as an</font>

905
00:31:42,600 --> 00:31:45,740
attacker<font color="#E5E5E5"> because if you're looking for</font>

906
00:31:44,310 --> 00:31:48,149
download string you'll never catch this

907
00:31:45,740 --> 00:31:49,800
so we'll replace<font color="#E5E5E5"> that in our command</font><font color="#CCCCCC"> and</font>

908
00:31:48,150 --> 00:31:51,990
one thing<font color="#E5E5E5"> I'd like</font><font color="#CCCCCC"> to point out</font><font color="#E5E5E5"> is this</font>

909
00:31:49,800 --> 00:31:53,940
dot invoke is only necessary for

910
00:31:51,990 --> 00:31:55,350
<font color="#E5E5E5">PowerShell</font><font color="#CCCCCC"> to you don't</font><font color="#E5E5E5"> have</font><font color="#CCCCCC"> to use that</font>

911
00:31:53,940 --> 00:31:58,890
<font color="#CCCCCC">in PowerShell through year later but</font>

912
00:31:55,350 --> 00:32:00,570
since since the the tool is compatible

913
00:31:58,890 --> 00:32:03,210
with<font color="#CCCCCC"> 2 or later unless it explicitly</font>

914
00:32:00,570 --> 00:32:04,889
<font color="#E5E5E5">says this cradle was</font><font color="#CCCCCC"> 300</font><font color="#E5E5E5"> and later it's</font>

915
00:32:03,210 --> 00:32:08,220
<font color="#E5E5E5">going to include that dot invoke so that</font>

916
00:32:04,890 --> 00:32:10,200
it<font color="#E5E5E5"> works across the</font><font color="#CCCCCC"> board</font><font color="#E5E5E5"> new</font><font color="#CCCCCC"> object</font><font color="#E5E5E5"> so</font>

917
00:32:08,220 --> 00:32:12,750
how does cradle crafter deal with

918
00:32:10,200 --> 00:32:14,550
commitments<font color="#CCCCCC"> so one of the things that we</font>

919
00:32:12,750 --> 00:32:16,680
can do is say get command which will

920
00:32:14,550 --> 00:32:19,470
return<font color="#E5E5E5"> a list of all the commands unless</font>

921
00:32:16,680 --> 00:32:22,350
we specify just<font color="#CCCCCC"> one and so</font><font color="#E5E5E5"> we can then</font>

922
00:32:19,470 --> 00:32:24,180
<font color="#E5E5E5">add a dot to actually invoke the object</font>

923
00:32:22,350 --> 00:32:26,120
this<font color="#E5E5E5"> is not Texas coming back it's</font><font color="#CCCCCC"> just</font>

924
00:32:24,180 --> 00:32:28,530
a powershell commandlets

925
00:32:26,120 --> 00:32:29,969
so we can do a very<font color="#E5E5E5"> similar trick and</font>

926
00:32:28,530 --> 00:32:31,830
say<font color="#CCCCCC"> ok well</font><font color="#E5E5E5"> instead of get command let</font>

927
00:32:29,970 --> 00:32:33,690
<font color="#E5E5E5">me randomly choose this is actually code</font>

928
00:32:31,830 --> 00:32:34,649
snippets<font color="#E5E5E5"> from the from the project when</font>

929
00:32:33,690 --> 00:32:38,190
<font color="#E5E5E5">we'd random would choose one</font><font color="#CCCCCC"> of its</font>

930
00:32:34,650 --> 00:32:39,930
aliases or the full command and then for

931
00:32:38,190 --> 00:32:42,750
new object let me<font color="#E5E5E5"> grant and would choose</font>

932
00:32:39,930 --> 00:32:44,340
a<font color="#E5E5E5"> wildcard string that's what we do</font>

933
00:32:42,750 --> 00:32:45,990
<font color="#E5E5E5">right there so now that is new object</font>

934
00:32:44,340 --> 00:32:47,820
again new object does<font color="#CCCCCC"> not appear</font>

935
00:32:45,990 --> 00:32:49,530
<font color="#CCCCCC">anywhere</font><font color="#E5E5E5"> in this command now here's the</font>

936
00:32:47,820 --> 00:32:51,149
interesting<font color="#E5E5E5"> part</font><font color="#CCCCCC"> when we</font><font color="#E5E5E5"> started the</font>

937
00:32:49,530 --> 00:32:53,520
command we only had<font color="#CCCCCC"> one new object right</font>

938
00:32:51,150 --> 00:32:55,920
<font color="#E5E5E5">but now we actually have</font><font color="#CCCCCC"> to</font><font color="#E5E5E5"> when we</font>

939
00:32:53,520 --> 00:32:59,430
obfuscated download string it introduced

940
00:32:55,920 --> 00:33:00,870
<font color="#CCCCCC">a new object</font><font color="#E5E5E5"> so when I built the all</font>

941
00:32:59,430 --> 00:33:03,180
these<font color="#E5E5E5"> substitutions I basically have</font>

942
00:33:00,870 --> 00:33:04,689
tags those placeholders<font color="#CCCCCC"> so</font><font color="#E5E5E5"> anytime you</font>

943
00:33:03,180 --> 00:33:06,130
office gate one component<font color="#E5E5E5"> if there's</font>

944
00:33:04,690 --> 00:33:08,890
any other instance of it<font color="#CCCCCC"> it will</font><font color="#E5E5E5"> also</font>

945
00:33:06,130 --> 00:33:11,020
off you skate those so when we obfuscate

946
00:33:08,890 --> 00:33:12,310
this new object<font color="#CCCCCC"> command lit you'll see</font>

947
00:33:11,020 --> 00:33:13,750
it's actually<font color="#E5E5E5"> going to obfuscate both of</font>

948
00:33:12,310 --> 00:33:16,149
those so as the commands get bigger

949
00:33:13,750 --> 00:33:19,510
<font color="#E5E5E5">you'll see it</font><font color="#CCCCCC"> actually propagate more</font>

950
00:33:16,150 --> 00:33:20,800
changes<font color="#E5E5E5"> in more places alternatively</font>

951
00:33:19,510 --> 00:33:22,900
this<font color="#E5E5E5"> is a</font><font color="#CCCCCC"> powershell one though two</font>

952
00:33:20,800 --> 00:33:25,000
syntax<font color="#E5E5E5"> again randomly generated</font><font color="#CCCCCC"> from the</font>

953
00:33:22,900 --> 00:33:27,640
tool<font color="#E5E5E5"> that is also a new object</font><font color="#CCCCCC"> so</font>

954
00:33:25,000 --> 00:33:30,730
obviously<font color="#E5E5E5"> a bit more heinous</font><font color="#CCCCCC"> but it</font>

955
00:33:27,640 --> 00:33:32,530
actually<font color="#E5E5E5"> comes down to</font><font color="#CCCCCC"> git command name</font>

956
00:33:30,730 --> 00:33:34,720
that's the<font color="#CCCCCC"> wildcard value right there</font>

957
00:33:32,530 --> 00:33:38,320
and you<font color="#E5E5E5"> can see this this is our new</font>

958
00:33:34,720 --> 00:33:41,050
object<font color="#E5E5E5"> string right here and this is so</font>

959
00:33:38,320 --> 00:33:44,080
big because<font color="#E5E5E5"> it's enumerated every method</font>

960
00:33:41,050 --> 00:33:47,080
of the syntax<font color="#CCCCCC"> even required to call the</font>

961
00:33:44,080 --> 00:33:48,399
method now some<font color="#E5E5E5"> other</font><font color="#CCCCCC"> things that</font><font color="#E5E5E5"> are</font>

962
00:33:47,080 --> 00:33:50,560
<font color="#CCCCCC">being</font><font color="#E5E5E5"> off you skated behind the scenes</font>

963
00:33:48,400 --> 00:33:52,390
with invoke off<font color="#E5E5E5"> you station since you're</font>

964
00:33:50,560 --> 00:33:53,980
<font color="#E5E5E5">dealing</font><font color="#CCCCCC"> with huge scripts everything is</font>

965
00:33:52,390 --> 00:33:56,140
completely random<font color="#CCCCCC"> as</font><font color="#E5E5E5"> random as I could</font>

966
00:33:53,980 --> 00:33:58,090
possibly<font color="#CCCCCC"> make it</font><font color="#E5E5E5"> now that's good and</font><font color="#CCCCCC"> bad</font>

967
00:33:56,140 --> 00:33:59,980
it's good<font color="#CCCCCC"> because it's very random</font><font color="#E5E5E5"> but</font>

968
00:33:58,090 --> 00:34:02,080
it's also bad<font color="#CCCCCC"> because</font><font color="#E5E5E5"> me when I'm using</font>

969
00:33:59,980 --> 00:34:03,910
my tool sometimes<font color="#CCCCCC"> I know there's a</font>

970
00:34:02,080 --> 00:34:05,409
syntax buried way down<font color="#CCCCCC"> there</font><font color="#E5E5E5"> and I</font><font color="#CCCCCC"> just</font>

971
00:34:03,910 --> 00:34:07,600
<font color="#E5E5E5">want it again and again and again</font><font color="#CCCCCC"> until</font>

972
00:34:05,410 --> 00:34:10,780
<font color="#E5E5E5">that syntax comes up so with cradle</font>

973
00:34:07,600 --> 00:34:12,130
crafter<font color="#E5E5E5"> I really tried to give to give</font>

974
00:34:10,780 --> 00:34:13,990
<font color="#CCCCCC">the user the ability</font><font color="#E5E5E5"> to really pinpoint</font>

975
00:34:12,130 --> 00:34:16,390
down and say I want<font color="#CCCCCC"> to</font><font color="#E5E5E5"> office</font><font color="#CCCCCC"> Kate just</font>

976
00:34:13,989 --> 00:34:18,159
as one component just<font color="#E5E5E5"> this way and for</font>

977
00:34:16,389 --> 00:34:19,540
most<font color="#E5E5E5"> of the occupation</font><font color="#CCCCCC"> you have that</font>

978
00:34:18,159 --> 00:34:21,310
<font color="#CCCCCC">control</font><font color="#E5E5E5"> but there's a couple</font><font color="#CCCCCC"> things that</font>

979
00:34:19,540 --> 00:34:22,779
<font color="#E5E5E5">are just not important</font><font color="#CCCCCC"> enough to me so</font>

980
00:34:21,310 --> 00:34:24,909
<font color="#E5E5E5">like where object every time will</font>

981
00:34:22,780 --> 00:34:28,210
randomly select<font color="#CCCCCC"> one of these</font><font color="#E5E5E5"> some taxes</font>

982
00:34:24,909 --> 00:34:29,980
for the string like it'll do<font color="#E5E5E5"> white</font><font color="#CCCCCC"> kay</font>

983
00:34:28,210 --> 00:34:34,060
sensitive light or case in some sort of

984
00:34:29,980 --> 00:34:35,490
light and<font color="#E5E5E5"> then for dollar dollar sign</font>

985
00:34:34,060 --> 00:34:37,570
underscore this<font color="#E5E5E5"> is the current variable</font>

986
00:34:35,489 --> 00:34:39,069
<font color="#CCCCCC">and so there's a lot of</font><font color="#E5E5E5"> different ways</font>

987
00:34:37,570 --> 00:34:40,780
<font color="#CCCCCC">you can retrieve</font><font color="#E5E5E5"> the value of a variable</font>

988
00:34:39,070 --> 00:34:42,910
<font color="#CCCCCC">these are just some of them means</font><font color="#E5E5E5"> you</font>

989
00:34:40,780 --> 00:34:45,010
<font color="#CCCCCC">can get variable</font><font color="#E5E5E5"> or it's aliases get</font>

990
00:34:42,909 --> 00:34:47,049
<font color="#CCCCCC">items</font><font color="#E5E5E5"> or it's aliases get child item</font>

991
00:34:45,010 --> 00:34:49,300
which is<font color="#E5E5E5"> basically your dirt man and</font>

992
00:34:47,050 --> 00:34:52,270
<font color="#CCCCCC">it's aliases and then also</font><font color="#E5E5E5"> using dot</font>

993
00:34:49,300 --> 00:34:53,680
<font color="#CCCCCC">value</font><font color="#E5E5E5"> versus that value only and again</font>

994
00:34:52,270 --> 00:34:55,810
<font color="#CCCCCC">the way that parameter binding works at</font>

995
00:34:53,679 --> 00:34:57,220
<font color="#E5E5E5">PowerShell value only works all the way</font>

996
00:34:55,810 --> 00:35:01,120
down to<font color="#E5E5E5"> V in this case</font><font color="#CCCCCC"> so any of those</font>

997
00:34:57,220 --> 00:35:01,870
sub strings are fair game<font color="#E5E5E5"> so we're left</font>

998
00:35:01,120 --> 00:35:05,770
with<font color="#CCCCCC"> IEX</font>

999
00:35:01,870 --> 00:35:07,299
and the one last piece<font color="#CCCCCC"> we're able</font><font color="#E5E5E5"> to do</font>

1000
00:35:05,770 --> 00:35:09,610
since we really are<font color="#CCCCCC"> dealing with</font><font color="#E5E5E5"> a</font>

1001
00:35:07,300 --> 00:35:11,470
confined set of syntax is that we can do

1002
00:35:09,610 --> 00:35:13,360
things like reordering the command or

1003
00:35:11,470 --> 00:35:15,490
chopping<font color="#E5E5E5"> it up into pieces would like</font>

1004
00:35:13,360 --> 00:35:16,650
<font color="#E5E5E5">logically name the variables or very</font>

1005
00:35:15,490 --> 00:35:18,149
<font color="#CCCCCC">illogically name</font>

1006
00:35:16,650 --> 00:35:20,490
and we'll see examples of that<font color="#E5E5E5"> in the</font>

1007
00:35:18,150 --> 00:35:23,070
demo in<font color="#CCCCCC"> just a minute so we're left with</font>

1008
00:35:20,490 --> 00:35:25,580
invoke expression ie X what<font color="#E5E5E5"> are</font>

1009
00:35:23,070 --> 00:35:28,230
<font color="#CCCCCC">different</font><font color="#E5E5E5"> ways we</font><font color="#CCCCCC"> can invoke this sucker</font>

1010
00:35:25,580 --> 00:35:28,830
<font color="#E5E5E5">so invoke expression that's kind of the</font>

1011
00:35:28,230 --> 00:35:30,810
<font color="#CCCCCC">fan-favorite</font>

1012
00:35:28,830 --> 00:35:33,060
it's typically what everyone's using<font color="#E5E5E5"> and</font>

1013
00:35:30,810 --> 00:35:34,710
it's something<font color="#CCCCCC"> that if</font><font color="#E5E5E5"> you're not</font>

1014
00:35:33,060 --> 00:35:35,940
<font color="#E5E5E5">looking for ie X and above expression on</font>

1015
00:35:34,710 --> 00:35:37,740
the command<font color="#CCCCCC"> line you're missing a lot of</font>

1016
00:35:35,940 --> 00:35:38,400
golden opportunities but please don't

1017
00:35:37,740 --> 00:35:40,470
<font color="#CCCCCC">stop there</font>

1018
00:35:38,400 --> 00:35:43,230
<font color="#E5E5E5">put</font><font color="#CCCCCC"> eight other options you can</font><font color="#E5E5E5"> use get</font>

1019
00:35:40,470 --> 00:35:45,569
alias<font color="#CCCCCC"> or get command with wild carded</font>

1020
00:35:43,230 --> 00:35:48,840
strings to produce<font color="#E5E5E5"> invoke expression or</font>

1021
00:35:45,570 --> 00:35:51,630
<font color="#E5E5E5">ie X you can also use a PowerShell one</font>

1022
00:35:48,840 --> 00:35:53,130
<font color="#CCCCCC">better syntax which is a lot uglier</font><font color="#E5E5E5"> but</font>

1023
00:35:51,630 --> 00:35:54,330
people<font color="#E5E5E5"> really aren't looking at it</font>

1024
00:35:53,130 --> 00:35:57,000
because<font color="#CCCCCC"> most people aren't aware of</font><font color="#E5E5E5"> it</font>

1025
00:35:54,330 --> 00:35:59,640
<font color="#CCCCCC">you can use</font><font color="#E5E5E5"> get command looks</font><font color="#CCCCCC"> to again</font>

1026
00:35:57,000 --> 00:36:01,710
basically produce<font color="#E5E5E5"> the object of invoke</font>

1027
00:35:59,640 --> 00:36:03,859
expression like in<font color="#E5E5E5"> this case I asterisk</font>

1028
00:36:01,710 --> 00:36:08,160
produces invoke expression<font color="#E5E5E5"> pretty crazy</font>

1029
00:36:03,860 --> 00:36:09,750
<font color="#CCCCCC">we can also just</font><font color="#E5E5E5"> use</font><font color="#CCCCCC"> invoke script</font><font color="#E5E5E5"> and</font>

1030
00:36:08,160 --> 00:36:13,350
<font color="#CCCCCC">we're sorry</font><font color="#E5E5E5"> I misspoke</font>

1031
00:36:09,750 --> 00:36:16,830
<font color="#CCCCCC">this is invoke invoke script</font><font color="#E5E5E5"> not invoke</font>

1032
00:36:13,350 --> 00:36:18,120
expression you can also use invoke

1033
00:36:16,830 --> 00:36:19,890
command which basically<font color="#E5E5E5"> instead of</font>

1034
00:36:18,120 --> 00:36:21,660
<font color="#E5E5E5">invoking an expression which is the</font>

1035
00:36:19,890 --> 00:36:23,160
string you have<font color="#E5E5E5"> to have a script block</font>

1036
00:36:21,660 --> 00:36:24,660
<font color="#CCCCCC">where there's ways you</font><font color="#E5E5E5"> can convert</font>

1037
00:36:23,160 --> 00:36:27,120
strings in the script block so there's a

1038
00:36:24,660 --> 00:36:28,770
lot of<font color="#CCCCCC"> options there</font><font color="#E5E5E5"> the PS run space</font>

1039
00:36:27,120 --> 00:36:30,180
this<font color="#E5E5E5"> is actually a suggestion that matt</font>

1040
00:36:28,770 --> 00:36:31,920
graver had that was really cool in that

1041
00:36:30,180 --> 00:36:33,930
<font color="#CCCCCC">you just create an instance of</font>

1042
00:36:31,920 --> 00:36:35,580
<font color="#CCCCCC">powershell you add a script</font><font color="#E5E5E5"> which is</font>

1043
00:36:33,930 --> 00:36:39,500
<font color="#CCCCCC">your payload and</font><font color="#E5E5E5"> you just do the dot</font>

1044
00:36:35,580 --> 00:36:41,580
invoke operator to invoke that<font color="#CCCCCC"> script</font>

1045
00:36:39,500 --> 00:36:43,320
concatenated<font color="#CCCCCC"> IX this is really where</font>

1046
00:36:41,580 --> 00:36:44,490
I've<font color="#E5E5E5"> had the</font><font color="#CCCCCC"> most</font><font color="#E5E5E5"> fun so I'm going</font><font color="#CCCCCC"> to</font>

1047
00:36:43,320 --> 00:36:46,050
come<font color="#E5E5E5"> back to this in one second let's</font>

1048
00:36:44,490 --> 00:36:47,910
cover the last<font color="#E5E5E5"> three real quick invoke</font>

1049
00:36:46,050 --> 00:36:50,130
<font color="#E5E5E5">is workflow</font><font color="#CCCCCC"> powershell 3 or later</font><font color="#E5E5E5"> I've</font>

1050
00:36:47,910 --> 00:36:51,299
never seen this used but it totally

1051
00:36:50,130 --> 00:36:53,910
<font color="#E5E5E5">works</font>

1052
00:36:51,300 --> 00:36:55,170
and so again PowerShell 3 or later dot

1053
00:36:53,910 --> 00:36:58,080
sourcing<font color="#E5E5E5"> these are both for the disk</font>

1054
00:36:55,170 --> 00:37:00,300
based cradles you can just dot source

1055
00:36:58,080 --> 00:37:03,660
<font color="#E5E5E5">you pass and it will invoke it you also</font>

1056
00:37:00,300 --> 00:37:05,270
have import module or aliases<font color="#E5E5E5"> IP</font><font color="#CCCCCC"> DMO to</font>

1057
00:37:03,660 --> 00:37:08,879
again invoke the script<font color="#E5E5E5"> on disk and</font>

1058
00:37:05,270 --> 00:37:10,290
commodities been doing<font color="#E5E5E5"> in import module</font>

1059
00:37:08,880 --> 00:37:10,890
<font color="#E5E5E5">once or twice so it's been kind of</font>

1060
00:37:10,290 --> 00:37:12,690
interesting to see

1061
00:37:10,890 --> 00:37:14,520
<font color="#E5E5E5">commodity malware child some of the</font>

1062
00:37:12,690 --> 00:37:16,200
newer<font color="#CCCCCC"> stuff</font><font color="#E5E5E5"> so again going back to</font>

1063
00:37:14,520 --> 00:37:18,090
concatenated IX this is what<font color="#E5E5E5"> invoke</font>

1064
00:37:16,200 --> 00:37:19,589
<font color="#CCCCCC">coffee station has again using something</font>

1065
00:37:18,090 --> 00:37:22,350
like<font color="#E5E5E5"> an environment</font><font color="#CCCCCC"> variable like calm</font>

1066
00:37:19,590 --> 00:37:26,160
spec or automatic variables like shell

1067
00:37:22,350 --> 00:37:27,118
ID to pull out the letters<font color="#E5E5E5"> ie X so in</font>

1068
00:37:26,160 --> 00:37:29,190
book cradle classes

1069
00:37:27,119 --> 00:37:31,650
this is the<font color="#E5E5E5"> only overlap between the two</font>

1070
00:37:29,190 --> 00:37:34,380
<font color="#E5E5E5">projects the only overlap basically took</font>

1071
00:37:31,650 --> 00:37:35,759
this logic and then randomly<font color="#CCCCCC"> obvious</font><font color="#E5E5E5"> get</font>

1072
00:37:34,380 --> 00:37:37,470
<font color="#E5E5E5">at each</font><font color="#CCCCCC"> component of</font><font color="#E5E5E5"> it so again instead</font>

1073
00:37:35,759 --> 00:37:40,380
<font color="#CCCCCC">of always saying dollar sign</font><font color="#E5E5E5"> shell ID</font>

1074
00:37:37,470 --> 00:37:43,980
<font color="#E5E5E5">maybe</font><font color="#CCCCCC"> well do get variable shell ID -</font><font color="#E5E5E5"> v4</font>

1075
00:37:40,380 --> 00:37:46,019
value and then durable shell ID<font color="#E5E5E5"> dot</font>

1076
00:37:43,980 --> 00:37:47,490
value<font color="#E5E5E5"> and that's our eye on</font><font color="#CCCCCC"> our a and</font>

1077
00:37:46,019 --> 00:37:49,229
again<font color="#CCCCCC"> each piece is randomly off</font>

1078
00:37:47,490 --> 00:37:51,720
<font color="#CCCCCC">Eastgate at each time and there's one</font>

1079
00:37:49,230 --> 00:37:53,819
more component<font color="#CCCCCC"> I added to this this</font>

1080
00:37:51,720 --> 00:37:56,669
third piece<font color="#E5E5E5"> so there's other ways</font><font color="#CCCCCC"> that</font>

1081
00:37:53,819 --> 00:37:58,410
<font color="#CCCCCC">we can produce</font><font color="#E5E5E5"> strings in PowerShell</font><font color="#CCCCCC"> so</font>

1082
00:37:56,670 --> 00:37:59,789
let's say we have in this<font color="#E5E5E5"> case it may</font><font color="#CCCCCC"> be</font>

1083
00:37:58,410 --> 00:38:01,980
a little<font color="#E5E5E5"> hard to see but we have a quote</font>

1084
00:37:59,789 --> 00:38:03,210
quote<font color="#CCCCCC"> pipette number which in</font><font color="#E5E5E5"> this case</font>

1085
00:38:01,980 --> 00:38:05,220
it's an<font color="#E5E5E5"> empty string but you can take</font>

1086
00:38:03,210 --> 00:38:07,289
any string and say hey tell<font color="#CCCCCC"> me</font><font color="#E5E5E5"> about</font>

1087
00:38:05,220 --> 00:38:08,098
yourself<font color="#E5E5E5"> get member what do you have</font>

1088
00:38:07,289 --> 00:38:10,440
what are<font color="#E5E5E5"> you up</font><font color="#CCCCCC"> to</font>

1089
00:38:08,099 --> 00:38:11,759
it has a nice<font color="#E5E5E5"> list of methods and</font>

1090
00:38:10,440 --> 00:38:13,650
properties and<font color="#CCCCCC"> all this kind of stuff</font>

1091
00:38:11,759 --> 00:38:15,960
and<font color="#CCCCCC"> so you notice okay there's</font><font color="#E5E5E5"> this one</font>

1092
00:38:13,650 --> 00:38:18,269
method<font color="#CCCCCC"> that conveniently has ie an X in</font>

1093
00:38:15,960 --> 00:38:21,960
it<font color="#E5E5E5"> that's pretty cool so how can we get</font>

1094
00:38:18,269 --> 00:38:23,519
<font color="#CCCCCC">that we</font><font color="#E5E5E5"> can just say string dot index</font>

1095
00:38:21,960 --> 00:38:25,710
<font color="#E5E5E5">AHS and now we have all of</font><font color="#CCCCCC"> our</font>

1096
00:38:23,519 --> 00:38:27,328
definitions right there now all we need

1097
00:38:25,710 --> 00:38:29,009
to do is cast that to a string which is

1098
00:38:27,329 --> 00:38:31,109
<font color="#E5E5E5">a couple options but we'll just look at</font>

1099
00:38:29,009 --> 00:38:33,029
the string direct cast with square

1100
00:38:31,109 --> 00:38:35,220
brackets<font color="#E5E5E5"> and now this is all one big</font>

1101
00:38:33,029 --> 00:38:37,440
string<font color="#E5E5E5"> so you can see there's tons of</font>

1102
00:38:35,220 --> 00:38:38,519
<font color="#CCCCCC">options for eyes and ease and X's</font><font color="#E5E5E5"> so I</font>

1103
00:38:37,440 --> 00:38:41,759
wrote a script to go through<font color="#E5E5E5"> the</font>

1104
00:38:38,519 --> 00:38:43,950
<font color="#E5E5E5">numerator single string the methods pull</font>

1105
00:38:41,759 --> 00:38:46,829
out<font color="#E5E5E5"> all the eyes and the ease in X's and</font>

1106
00:38:43,950 --> 00:38:48,808
then<font color="#E5E5E5"> random would choose an int X index</font>

1107
00:38:46,829 --> 00:38:50,279
to<font color="#CCCCCC"> produce IEX so</font><font color="#E5E5E5"> basically the code</font>

1108
00:38:48,809 --> 00:38:51,539
<font color="#E5E5E5">looks like this for</font><font color="#CCCCCC"> each of these it'll</font>

1109
00:38:50,279 --> 00:38:53,880
basically<font color="#E5E5E5"> go through and</font><font color="#CCCCCC"> randomly choose</font>

1110
00:38:51,539 --> 00:38:56,069
all these numbers<font color="#CCCCCC"> now</font><font color="#E5E5E5"> this is not just</font>

1111
00:38:53,880 --> 00:38:57,509
to<font color="#E5E5E5"> be really offensive</font><font color="#CCCCCC"> than mean to blue</font>

1112
00:38:56,069 --> 00:38:59,339
teamers<font color="#CCCCCC"> it's basically to</font><font color="#E5E5E5"> say please</font>

1113
00:38:57,509 --> 00:39:00,809
<font color="#CCCCCC">don't just write</font><font color="#E5E5E5"> a signature based off</font>

1114
00:38:59,339 --> 00:39:02,670
<font color="#CCCCCC">of number one number two number three</font>

1115
00:39:00,809 --> 00:39:04,349
and call it a<font color="#E5E5E5"> day let me need to think</font>

1116
00:39:02,670 --> 00:39:08,220
past<font color="#E5E5E5"> that because there's so many</font>

1117
00:39:04,349 --> 00:39:11,910
options<font color="#E5E5E5"> out there so the texting cryptic</font>

1118
00:39:08,220 --> 00:39:13,470
cradles<font color="#CCCCCC"> we we need</font><font color="#E5E5E5"> to move past just</font>

1119
00:39:11,910 --> 00:39:15,569
looking at<font color="#CCCCCC"> powershell syntax what is</font>

1120
00:39:13,470 --> 00:39:17,009
actually<font color="#E5E5E5"> behaving under the scenes</font><font color="#CCCCCC"> this</font>

1121
00:39:15,569 --> 00:39:18,390
<font color="#E5E5E5">is where it comes to what about</font>

1122
00:39:17,009 --> 00:39:20,700
<font color="#CCCCCC">powershell</font><font color="#E5E5E5"> make some network connections</font>

1123
00:39:18,390 --> 00:39:22,499
what you like or what<font color="#CCCCCC"> are we</font><font color="#E5E5E5"> looking for</font>

1124
00:39:20,700 --> 00:39:24,660
that<font color="#CCCCCC"> and here's some examples here</font><font color="#E5E5E5"> of</font>

1125
00:39:22,499 --> 00:39:26,609
and again all this<font color="#CCCCCC"> information is built</font>

1126
00:39:24,660 --> 00:39:28,589
<font color="#E5E5E5">into the tool as</font><font color="#CCCCCC"> you visit</font><font color="#E5E5E5"> each</font>

1127
00:39:26,609 --> 00:39:29,848
different mode download cradle<font color="#E5E5E5"> it'll</font>

1128
00:39:28,589 --> 00:39:31,319
have this information<font color="#CCCCCC"> say hey here's</font>

1129
00:39:29,849 --> 00:39:34,559
some indicators there's some things<font color="#E5E5E5"> to</font>

1130
00:39:31,319 --> 00:39:37,529
look for<font color="#E5E5E5"> so in this case if you use</font><font color="#CCCCCC"> bits</font>

1131
00:39:34,559 --> 00:39:40,770
<font color="#CCCCCC">admins or</font><font color="#E5E5E5"> start bit transfer SVG host</font>

1132
00:39:37,530 --> 00:39:42,120
<font color="#E5E5E5">the network connection not PowerShell</font><font color="#CCCCCC"> if</font>

1133
00:39:40,770 --> 00:39:44,160
you use<font color="#CCCCCC"> windward or Excel or</font><font color="#E5E5E5"> ie</font>

1134
00:39:42,120 --> 00:39:46,049
obviously those make the<font color="#E5E5E5"> network</font>

1135
00:39:44,160 --> 00:39:47,819
connections<font color="#CCCCCC"> my power show and then with</font>

1136
00:39:46,050 --> 00:39:49,140
notepad<font color="#E5E5E5"> actually notepad and s you see</font>

1137
00:39:47,820 --> 00:39:50,640
<font color="#E5E5E5">host make the network connections and</font>

1138
00:39:49,140 --> 00:39:54,870
actually a lot<font color="#CCCCCC"> of network</font><font color="#E5E5E5"> connections if</font>

1139
00:39:50,640 --> 00:39:56,940
it's a large<font color="#CCCCCC"> payload but this is an</font>

1140
00:39:54,870 --> 00:39:58,560
example<font color="#CCCCCC"> here at both SCC house</font><font color="#E5E5E5"> and</font><font color="#CCCCCC"> O pad</font>

1141
00:39:56,940 --> 00:40:02,310
making<font color="#E5E5E5"> a ton network connections out</font>

1142
00:39:58,560 --> 00:40:04,259
both to the<font color="#CCCCCC"> bitly</font><font color="#E5E5E5"> shortened URL and then</font>

1143
00:40:02,310 --> 00:40:06,660
paste<font color="#CCCCCC"> been boarded</font><font color="#E5E5E5"> onto after that in</font>

1144
00:40:04,260 --> 00:40:09,030
this example<font color="#E5E5E5"> parent-child process</font>

1145
00:40:06,660 --> 00:40:11,009
relationships this<font color="#CCCCCC"> is</font><font color="#E5E5E5"> really really good</font>

1146
00:40:09,030 --> 00:40:13,890
but attackers are starting to<font color="#E5E5E5"> rot</font><font color="#CCCCCC"> so you</font>

1147
00:40:11,010 --> 00:40:15,870
can just rename<font color="#E5E5E5"> PowerShell to</font><font color="#CCCCCC"> something</font>

1148
00:40:13,890 --> 00:40:18,330
else<font color="#CCCCCC"> and</font><font color="#E5E5E5"> that pretty much screws a lot</font>

1149
00:40:15,870 --> 00:40:19,650
of defenders<font color="#E5E5E5"> so all you think about</font><font color="#CCCCCC"> that</font>

1150
00:40:18,330 --> 00:40:23,490
like<font color="#E5E5E5"> how many of your rules are based on</font>

1151
00:40:19,650 --> 00:40:25,740
<font color="#E5E5E5">process name is PowerShell and</font><font color="#CCCCCC"> IEX</font>

1152
00:40:23,490 --> 00:40:26,819
or net web<font color="#CCCCCC"> planetfall a</font><font color="#E5E5E5"> lot like if an</font>

1153
00:40:25,740 --> 00:40:28,740
attacker<font color="#E5E5E5"> just</font><font color="#CCCCCC"> rename is cocktail and</font>

1154
00:40:26,820 --> 00:40:31,200
<font color="#E5E5E5">they're totally</font><font color="#CCCCCC"> doing it like if Power</font>

1155
00:40:28,740 --> 00:40:33,149
<font color="#CCCCCC">Cells</font><font color="#E5E5E5"> rename the Firefox</font><font color="#CCCCCC"> exe would that</font>

1156
00:40:31,200 --> 00:40:34,290
destroy<font color="#E5E5E5"> all</font><font color="#CCCCCC"> of</font><font color="#E5E5E5"> your rules and if it</font>

1157
00:40:33,150 --> 00:40:35,610
would<font color="#CCCCCC"> then you need to rethink some of</font>

1158
00:40:34,290 --> 00:40:37,050
<font color="#E5E5E5">those rules and it's definitely</font><font color="#CCCCCC"> not</font><font color="#E5E5E5"> easy</font>

1159
00:40:35,610 --> 00:40:39,360
<font color="#E5E5E5">I'm</font><font color="#CCCCCC"> not talking it down but we should</font>

1160
00:40:37,050 --> 00:40:41,340
definitely<font color="#E5E5E5"> be</font><font color="#CCCCCC"> aware of</font><font color="#E5E5E5"> this because salt</font>

1161
00:40:39,360 --> 00:40:44,490
is recently last<font color="#E5E5E5"> week so but</font>

1162
00:40:41,340 --> 00:40:46,350
<font color="#CCCCCC">parent-child process relationships in</font>

1163
00:40:44,490 --> 00:40:47,790
like<font color="#E5E5E5"> with</font><font color="#CCCCCC"> comm objects</font><font color="#E5E5E5"> PowerShell is</font>

1164
00:40:46,350 --> 00:40:49,860
never spawning<font color="#CCCCCC"> when</font><font color="#E5E5E5"> Word Excel</font><font color="#CCCCCC"> or</font>

1165
00:40:47,790 --> 00:40:51,980
Internet Explorer the existing instances

1166
00:40:49,860 --> 00:40:53,640
of<font color="#E5E5E5"> SVC host</font>

1167
00:40:51,980 --> 00:40:55,200
<font color="#CCCCCC">so you're not</font><font color="#E5E5E5"> going to see that</font>

1168
00:40:53,640 --> 00:40:56,910
parent-child process relationship there

1169
00:40:55,200 --> 00:40:57,990
it's<font color="#E5E5E5"> actually not super uncommon to have</font>

1170
00:40:56,910 --> 00:41:02,700
<font color="#CCCCCC">SVC host</font>

1171
00:40:57,990 --> 00:41:04,620
on those binaries<font color="#CCCCCC"> send keys power</font><font color="#E5E5E5"> cell</font>

1172
00:41:02,700 --> 00:41:07,439
<font color="#E5E5E5">phones notepad inline scripting you'll</font>

1173
00:41:04,620 --> 00:41:09,020
see<font color="#E5E5E5"> PowerShell</font><font color="#CCCCCC"> fonts CSC or</font><font color="#E5E5E5"> VB see if</font>

1174
00:41:07,440 --> 00:41:11,640
there you'll<font color="#CCCCCC"> be doing inline vbscript</font>

1175
00:41:09,020 --> 00:41:12,780
<font color="#E5E5E5">depending on the</font><font color="#CCCCCC"> language there when it</font>

1176
00:41:11,640 --> 00:41:15,299
<font color="#E5E5E5">comes to event</font><font color="#CCCCCC"> logs everything</font>

1177
00:41:12,780 --> 00:41:16,890
<font color="#CCCCCC">powershell has an event logs</font><font color="#E5E5E5"> is solid</font>

1178
00:41:15,300 --> 00:41:18,750
gold<font color="#CCCCCC"> now if you've ever looked</font><font color="#E5E5E5"> at it</font>

1179
00:41:16,890 --> 00:41:20,430
<font color="#E5E5E5">there's a lot of gold</font><font color="#CCCCCC"> so much so that</font>

1180
00:41:18,750 --> 00:41:21,960
<font color="#CCCCCC">it's hard to carry sometimes so</font><font color="#E5E5E5"> I</font>

1181
00:41:20,430 --> 00:41:23,190
<font color="#E5E5E5">definitely acknowledge that it can be</font>

1182
00:41:21,960 --> 00:41:25,200
very very<font color="#CCCCCC"> noisy depending on your</font>

1183
00:41:23,190 --> 00:41:27,960
<font color="#E5E5E5">environment but it's an insane amount</font><font color="#CCCCCC"> of</font>

1184
00:41:25,200 --> 00:41:29,399
information<font color="#E5E5E5"> that's so helpful</font><font color="#CCCCCC"> this</font><font color="#E5E5E5"> admin</font>

1185
00:41:27,960 --> 00:41:32,730
actually has a log by default<font color="#CCCCCC"> so to</font>

1186
00:41:29,400 --> 00:41:35,280
<font color="#CCCCCC">actually record the nice URL</font><font color="#E5E5E5"> that's used</font>

1187
00:41:32,730 --> 00:41:37,410
<font color="#E5E5E5">so I'm not saying as an attacker</font><font color="#CCCCCC"> that</font>

1188
00:41:35,280 --> 00:41:38,610
you should clean<font color="#CCCCCC"> up that log</font><font color="#E5E5E5"> just saying</font>

1189
00:41:37,410 --> 00:41:40,379
as a deeper person you should probably

1190
00:41:38,610 --> 00:41:42,750
looking<font color="#E5E5E5"> at that log because it'll log</font>

1191
00:41:40,380 --> 00:41:45,300
some nice stuff<font color="#E5E5E5"> there sometimes</font><font color="#CCCCCC"> dll</font><font color="#E5E5E5"> is</font>

1192
00:41:42,750 --> 00:41:47,490
loaded<font color="#E5E5E5"> so in the common object Internet</font>

1193
00:41:45,300 --> 00:41:49,830
Explorer example<font color="#CCCCCC"> powershell loads this</font>

1194
00:41:47,490 --> 00:41:52,979
nice little dll called<font color="#CCCCCC"> ID proxy DLL</font>

1195
00:41:49,830 --> 00:41:54,720
which<font color="#CCCCCC"> it pretty much never does</font><font color="#E5E5E5"> so</font>

1196
00:41:52,980 --> 00:41:56,130
sometimes just<font color="#E5E5E5"> playing around</font><font color="#CCCCCC"> with prop</font>

1197
00:41:54,720 --> 00:41:57,720
<font color="#CCCCCC">1 is saying what's</font><font color="#E5E5E5"> happening here what's</font>

1198
00:41:56,130 --> 00:42:00,990
normal what's not<font color="#CCCCCC"> is a really good way</font>

1199
00:41:57,720 --> 00:42:04,140
<font color="#E5E5E5">to find indicators in addition razz man</font>

1200
00:42:00,990 --> 00:42:06,629
<font color="#CCCCCC">this is an amazing set of</font><font color="#E5E5E5"> dll to spare</font>

1201
00:42:04,140 --> 00:42:10,470
Rat Man vol<font color="#CCCCCC"> andraz a PID ll answer</font>

1202
00:42:06,630 --> 00:42:12,390
remote access session manager now why is

1203
00:42:10,470 --> 00:42:14,459
it important<font color="#E5E5E5"> if you use the most basic</font>

1204
00:42:12,390 --> 00:42:16,259
power ship cradle or even the<font color="#CCCCCC"> c-sharp</font>

1205
00:42:14,460 --> 00:42:17,880
ones<font color="#E5E5E5"> where</font><font color="#CCCCCC"> PowerShell is</font><font color="#E5E5E5"> loading net not</font>

1206
00:42:16,260 --> 00:42:19,950
web<font color="#CCCCCC"> clients to perform a remote download</font>

1207
00:42:17,880 --> 00:42:22,470
it's going to load a<font color="#E5E5E5"> lot of</font><font color="#CCCCCC"> GLS here's a</font>

1208
00:42:19,950 --> 00:42:26,879
few but why are these<font color="#E5E5E5"> two so interesting</font>

1209
00:42:22,470 --> 00:42:28,859
well these are interesting because they

1210
00:42:26,880 --> 00:42:30,570
<font color="#CCCCCC">actually create a registry key they</font>

1211
00:42:28,860 --> 00:42:31,800
create this tracing registry key which

1212
00:42:30,570 --> 00:42:33,690
there's nothing<font color="#CCCCCC"> else other</font><font color="#E5E5E5"> than be a</font>

1213
00:42:31,800 --> 00:42:35,430
<font color="#E5E5E5">placeholder to say hey I</font><font color="#CCCCCC"> have a</font><font color="#E5E5E5"> dotnet</font>

1214
00:42:33,690 --> 00:42:36,690
application I want<font color="#E5E5E5"> to run some debugging</font>

1215
00:42:35,430 --> 00:42:38,520
<font color="#E5E5E5">on it and turn on some full-blown</font>

1216
00:42:36,690 --> 00:42:40,230
tracing and this is where it's<font color="#E5E5E5"> going to</font>

1217
00:42:38,520 --> 00:42:43,170
say<font color="#CCCCCC"> alright where do you want that</font><font color="#E5E5E5"> file</font>

1218
00:42:40,230 --> 00:42:44,700
to go but<font color="#CCCCCC"> just using</font><font color="#E5E5E5"> it will still</font>

1219
00:42:43,170 --> 00:42:46,140
<font color="#E5E5E5">create these keys and there's been</font>

1220
00:42:44,700 --> 00:42:49,290
several investigations in which some

1221
00:42:46,140 --> 00:42:50,850
financial groups have used PowerShell<font color="#CCCCCC"> to</font>

1222
00:42:49,290 --> 00:42:51,990
download their<font color="#CCCCCC"> second-stage</font><font color="#E5E5E5"> payload in</font>

1223
00:42:50,850 --> 00:42:54,509
an environment<font color="#CCCCCC"> where they never use</font>

1224
00:42:51,990 --> 00:42:56,430
PowerShell<font color="#E5E5E5"> and these registry keys lit</font>

1225
00:42:54,510 --> 00:42:58,050
up<font color="#E5E5E5"> and it was</font><font color="#CCCCCC"> amazing just to see</font><font color="#E5E5E5"> yep</font>

1226
00:42:56,430 --> 00:43:02,370
they touch this system this<font color="#CCCCCC"> system this</font>

1227
00:42:58,050 --> 00:43:04,350
one<font color="#E5E5E5"> boom boom boom app compat cache with</font>

1228
00:43:02,370 --> 00:43:05,790
that same financials<font color="#E5E5E5"> right after when</font>

1229
00:43:04,350 --> 00:43:07,830
PowerShell downloaded the second stage

1230
00:43:05,790 --> 00:43:08,940
<font color="#E5E5E5">that second stage</font><font color="#CCCCCC"> contained a shell code</font>

1231
00:43:07,830 --> 00:43:11,040
loader and it was not<font color="#CCCCCC"> written in</font>

1232
00:43:08,940 --> 00:43:13,230
PowerShell it was written in C<font color="#CCCCCC"> sharp</font>

1233
00:43:11,040 --> 00:43:15,750
which they had<font color="#E5E5E5"> in line which means</font>

1234
00:43:13,230 --> 00:43:18,180
<font color="#E5E5E5">PowerShell is going to execute CSD and</font><font color="#CCCCCC"> C</font>

1235
00:43:15,750 --> 00:43:20,160
<font color="#CCCCCC">BT res so when you look in app compat</font>

1236
00:43:18,180 --> 00:43:22,169
cache or the shim cache<font color="#CCCCCC"> you would see</font>

1237
00:43:20,160 --> 00:43:24,600
PowerShell immediately followed by<font color="#E5E5E5"> CSC</font>

1238
00:43:22,170 --> 00:43:26,190
immediately followed by<font color="#CCCCCC"> C BT</font><font color="#E5E5E5"> res again</font>

1239
00:43:24,600 --> 00:43:27,839
when we sweep<font color="#E5E5E5"> the environment we</font><font color="#CCCCCC"> see</font>

1240
00:43:26,190 --> 00:43:30,870
this<font color="#E5E5E5"> system this system</font><font color="#CCCCCC"> this system</font>

1241
00:43:27,840 --> 00:43:32,910
<font color="#CCCCCC">PowerShell compiled and executed c-sharp</font>

1242
00:43:30,870 --> 00:43:34,380
code which was totally not normal<font color="#CCCCCC"> in</font>

1243
00:43:32,910 --> 00:43:36,170
<font color="#E5E5E5">this environment and with another great</font>

1244
00:43:34,380 --> 00:43:39,240
indicator for us to track this activity

1245
00:43:36,170 --> 00:43:41,940
lastly cache temporary files<font color="#CCCCCC"> a lot</font><font color="#E5E5E5"> of</font>

1246
00:43:39,240 --> 00:43:43,859
<font color="#E5E5E5">these memory only cradles like</font><font color="#CCCCCC"> Windward</font>

1247
00:43:41,940 --> 00:43:46,890
or<font color="#E5E5E5"> note patterns of stuff they're truly</font>

1248
00:43:43,860 --> 00:43:48,720
<font color="#E5E5E5">really</font><font color="#CCCCCC"> only</font><font color="#E5E5E5"> there because you're using</font>

1249
00:43:46,890 --> 00:43:50,730
an<font color="#CCCCCC"> application that</font><font color="#E5E5E5"> wants to provide</font><font color="#CCCCCC"> a</font>

1250
00:43:48,720 --> 00:43:52,569
lot of<font color="#CCCCCC"> you know speed and efficiency</font><font color="#E5E5E5"> you</font>

1251
00:43:50,730 --> 00:43:55,300
<font color="#CCCCCC">know</font><font color="#E5E5E5"> cache files locals on</font><font color="#CCCCCC"> disk so even</font>

1252
00:43:52,570 --> 00:43:57,070
again<font color="#E5E5E5"> just for the local copy so if</font>

1253
00:43:55,300 --> 00:43:59,350
you're using these cradles<font color="#CCCCCC"> to</font><font color="#E5E5E5"> download</font>

1254
00:43:57,070 --> 00:44:02,170
mini cats let's say that<font color="#E5E5E5"> suckers going</font>

1255
00:43:59,350 --> 00:44:04,509
<font color="#E5E5E5">to hit</font><font color="#CCCCCC"> disc whether you wanted to or not</font>

1256
00:44:02,170 --> 00:44:05,860
<font color="#E5E5E5">so just be aware as a defender</font><font color="#CCCCCC"> you</font>

1257
00:44:04,510 --> 00:44:08,050
should be<font color="#CCCCCC"> riding some awesome yard rules</font>

1258
00:44:05,860 --> 00:44:10,000
looking in recent files<font color="#E5E5E5"> temporary</font>

1259
00:44:08,050 --> 00:44:11,680
<font color="#CCCCCC">Internet files eye net cash files</font>

1260
00:44:10,000 --> 00:44:14,920
<font color="#CCCCCC">depending on what operating system that</font>

1261
00:44:11,680 --> 00:44:17,970
you have<font color="#E5E5E5"> and you'll see full-blown</font>

1262
00:44:14,920 --> 00:44:21,760
payloads<font color="#E5E5E5"> sitting there in those files</font>

1263
00:44:17,970 --> 00:44:23,709
<font color="#E5E5E5">all right let's do a quick demo my</font>

1264
00:44:21,760 --> 00:44:25,510
<font color="#CCCCCC">disclaimers all as always please do not</font>

1265
00:44:23,710 --> 00:44:27,280
use this tool for<font color="#E5E5E5"> evil this is for</font>

1266
00:44:25,510 --> 00:44:29,470
<font color="#E5E5E5">educational research purposes</font><font color="#CCCCCC"> and</font>

1267
00:44:27,280 --> 00:44:34,300
hopefully it's you know<font color="#E5E5E5"> it's fun in the</font>

1268
00:44:29,470 --> 00:44:40,600
<font color="#E5E5E5">meantime so just shopping to a</font>

1269
00:44:34,300 --> 00:44:42,940
<font color="#CCCCCC">PowerShell think about it</font>

1270
00:44:40,600 --> 00:44:44,290
this is<font color="#E5E5E5"> a the both projects are</font>

1271
00:44:42,940 --> 00:44:47,470
<font color="#CCCCCC">available on my</font><font color="#E5E5E5"> github which all the</font>

1272
00:44:44,290 --> 00:44:50,140
link at<font color="#E5E5E5"> the very end</font><font color="#CCCCCC"> and so both of them</font>

1273
00:44:47,470 --> 00:44:54,430
<font color="#E5E5E5">are</font><font color="#CCCCCC"> very similar in that</font><font color="#E5E5E5"> used</font><font color="#CCCCCC"> to</font><font color="#E5E5E5"> run an</font>

1274
00:44:50,140 --> 00:45:01,509
import module and<font color="#E5E5E5"> invoke cradle</font><font color="#CCCCCC"> crafter</font>

1275
00:44:54,430 --> 00:45:03,160
PSD one invoke cradle factor and I have

1276
00:45:01,510 --> 00:45:05,170
to<font color="#E5E5E5"> always include some ASCII art this is</font>

1277
00:45:03,160 --> 00:45:06,940
an actual<font color="#E5E5E5"> example of obfuscating the</font>

1278
00:45:05,170 --> 00:45:10,660
command and it<font color="#E5E5E5"> actually does produce</font>

1279
00:45:06,940 --> 00:45:12,070
<font color="#E5E5E5">that so</font><font color="#CCCCCC"> invoke</font><font color="#E5E5E5"> cradle crafter very</font>

1280
00:45:10,660 --> 00:45:15,580
similar<font color="#E5E5E5"> to invoke</font><font color="#CCCCCC"> off you station if you</font>

1281
00:45:12,070 --> 00:45:17,620
use that one<font color="#E5E5E5"> basically in the menus</font>

1282
00:45:15,580 --> 00:45:19,299
anything that's yellow I'm very OCD so I

1283
00:45:17,620 --> 00:45:20,500
love colors and so I tried to<font color="#E5E5E5"> add as</font>

1284
00:45:19,300 --> 00:45:22,750
much<font color="#E5E5E5"> as</font><font color="#CCCCCC"> I could to the</font><font color="#E5E5E5"> tool in a</font>

1285
00:45:20,500 --> 00:45:24,190
meaningful way although<font color="#CCCCCC"> I had one</font><font color="#E5E5E5"> person</font>

1286
00:45:22,750 --> 00:45:26,440
say that's great<font color="#E5E5E5"> but I'm colorblind</font>

1287
00:45:24,190 --> 00:45:29,650
<font color="#CCCCCC">I</font><font color="#E5E5E5"> never thought about that so if that's</font>

1288
00:45:26,440 --> 00:45:31,840
you I apologize<font color="#E5E5E5"> but anything in yellow</font>

1289
00:45:29,650 --> 00:45:33,400
will take you to a menu<font color="#E5E5E5"> anything in</font>

1290
00:45:31,840 --> 00:45:35,110
green will actually do something<font color="#E5E5E5"> it will</font>

1291
00:45:33,400 --> 00:45:36,760
actually<font color="#CCCCCC"> apply off the</font><font color="#E5E5E5"> station or set a</font>

1292
00:45:35,110 --> 00:45:38,260
<font color="#CCCCCC">value or</font><font color="#E5E5E5"> something</font><font color="#CCCCCC"> like that so for</font>

1293
00:45:36,760 --> 00:45:41,170
<font color="#E5E5E5">example tutorial is in yellow</font>

1294
00:45:38,260 --> 00:45:42,730
so between<font color="#CCCCCC"> site tutorial and it will</font>

1295
00:45:41,170 --> 00:45:43,930
basically tell us here<font color="#E5E5E5"> two other menus</font>

1296
00:45:42,730 --> 00:45:46,870
you<font color="#CCCCCC"> can go to there's other things</font><font color="#E5E5E5"> you</font>

1297
00:45:43,930 --> 00:45:49,180
<font color="#CCCCCC">can do but actually set values then you</font>

1298
00:45:46,870 --> 00:45:52,120
can use this<font color="#E5E5E5"> in green so we</font><font color="#CCCCCC"> can set a</font>

1299
00:45:49,180 --> 00:45:54,580
URL for<font color="#CCCCCC"> a remote location if we're</font><font color="#E5E5E5"> using</font>

1300
00:45:52,120 --> 00:45:56,440
<font color="#CCCCCC">disk based cradles and</font><font color="#E5E5E5"> you set a path of</font>

1301
00:45:54,580 --> 00:45:58,360
<font color="#E5E5E5">where on disk we want this to hit and</font>

1302
00:45:56,440 --> 00:46:00,370
then<font color="#CCCCCC"> optionally we can also set a post</font>

1303
00:45:58,360 --> 00:46:01,660
cradle command which<font color="#E5E5E5"> again if you</font><font color="#CCCCCC"> think</font>

1304
00:46:00,370 --> 00:46:02,848
<font color="#E5E5E5">about if you're downloading and invoking</font>

1305
00:46:01,660 --> 00:46:04,589
invoking

1306
00:46:02,849 --> 00:46:06,180
after it<font color="#E5E5E5"> runs you probably want to</font>

1307
00:46:04,589 --> 00:46:08,190
<font color="#CCCCCC">actually call the function invoking</font><font color="#E5E5E5"> the</font>

1308
00:46:06,180 --> 00:46:09,509
<font color="#CCCCCC">cat -</font><font color="#E5E5E5"> don't credits blah blah blah this</font>

1309
00:46:08,190 --> 00:46:11,940
is an option and the reason it's an

1310
00:46:09,510 --> 00:46:14,280
option is<font color="#E5E5E5"> because two of</font><font color="#CCCCCC"> the invitations</font>

1311
00:46:11,940 --> 00:46:16,109
<font color="#E5E5E5">and taxes are confined to a workflow or</font>

1312
00:46:14,280 --> 00:46:17,880
<font color="#CCCCCC">a run space and so you actually can't</font>

1313
00:46:16,109 --> 00:46:19,589
just add invoking the<font color="#CCCCCC"> cats dump credits</font>

1314
00:46:17,880 --> 00:46:21,240
to the end of the cradle<font color="#CCCCCC"> it has to be</font>

1315
00:46:19,589 --> 00:46:24,808
<font color="#E5E5E5">included in that same context so that's</font>

1316
00:46:21,240 --> 00:46:27,899
why it's a part of the of the tool<font color="#E5E5E5"> so</font>

1317
00:46:24,809 --> 00:46:30,780
<font color="#E5E5E5">let's set a URL to this bitly legit</font>

1318
00:46:27,900 --> 00:46:32,579
cradle totally legit I promise so you

1319
00:46:30,780 --> 00:46:34,109
can see our two<font color="#CCCCCC"> options here</font><font color="#E5E5E5"> menu we</font>

1320
00:46:32,579 --> 00:46:35,490
have<font color="#E5E5E5"> memory</font><font color="#CCCCCC"> and disk just</font><font color="#E5E5E5"> like we went</font>

1321
00:46:34,109 --> 00:46:38,009
<font color="#E5E5E5">through in the talk so there's our disk</font>

1322
00:46:35,490 --> 00:46:39,720
based cradles<font color="#E5E5E5"> we'll go back</font><font color="#CCCCCC"> and look at</font>

1323
00:46:38,010 --> 00:46:42,569
memory<font color="#CCCCCC"> there's all the the memory</font>

1324
00:46:39,720 --> 00:46:46,848
cradles<font color="#E5E5E5"> and so</font><font color="#CCCCCC"> PS web string</font><font color="#E5E5E5"> this</font><font color="#CCCCCC"> is our</font>

1325
00:46:42,569 --> 00:46:49,140
most<font color="#E5E5E5"> basic one we'll go in here and</font>

1326
00:46:46,849 --> 00:46:50,430
you'll see<font color="#E5E5E5"> that for</font><font color="#CCCCCC"> every single cradle</font>

1327
00:46:49,140 --> 00:46:52,558
<font color="#E5E5E5">and have this this big chunk of</font>

1328
00:46:50,430 --> 00:46:54,058
<font color="#CCCCCC">information about here's dependencies</font>

1329
00:46:52,559 --> 00:46:56,280
here's requirements here<font color="#CCCCCC"> two indicators</font>

1330
00:46:54,059 --> 00:46:58,079
<font color="#CCCCCC">artifacts</font><font color="#E5E5E5"> is again</font><font color="#CCCCCC"> I want this knowledge</font>

1331
00:46:56,280 --> 00:46:59,250
to<font color="#E5E5E5"> be easy and attainable</font><font color="#CCCCCC"> for anyone</font>

1332
00:46:58,079 --> 00:47:00,540
whether you're<font color="#CCCCCC"> a blue team</font><font color="#E5E5E5"> a red team</font>

1333
00:46:59,250 --> 00:47:02,069
<font color="#CCCCCC">this is stuff</font><font color="#E5E5E5"> we</font><font color="#CCCCCC"> should know about</font><font color="#E5E5E5"> and</font>

1334
00:47:00,540 --> 00:47:04,589
be<font color="#E5E5E5"> looking for and it shouldn't just be</font>

1335
00:47:02,069 --> 00:47:06,119
hidden or sold for money<font color="#E5E5E5"> or whatever</font>

1336
00:47:04,589 --> 00:47:07,589
else like this<font color="#E5E5E5"> stuff we all need to know</font>

1337
00:47:06,119 --> 00:47:09,450
<font color="#E5E5E5">about because</font><font color="#CCCCCC"> we all need</font><font color="#E5E5E5"> help defending</font>

1338
00:47:07,589 --> 00:47:11,700
against attackers<font color="#E5E5E5"> so every cradle has</font>

1339
00:47:09,450 --> 00:47:13,290
<font color="#E5E5E5">all this</font><font color="#CCCCCC"> information there and</font><font color="#E5E5E5"> these are</font>

1340
00:47:11,700 --> 00:47:16,859
<font color="#CCCCCC">our options here</font><font color="#E5E5E5"> and yellow again so we</font>

1341
00:47:13,290 --> 00:47:17,910
<font color="#E5E5E5">can go to rearrange and so one of the</font>

1342
00:47:16,859 --> 00:47:20,130
things we can do is chop up<font color="#E5E5E5"> into</font>

1343
00:47:17,910 --> 00:47:24,029
multiple variables named logical names

1344
00:47:20,130 --> 00:47:26,069
like URL or<font color="#E5E5E5"> WC for web client or we can</font>

1345
00:47:24,030 --> 00:47:28,049
do random variables<font color="#E5E5E5"> in the in the order</font>

1346
00:47:26,069 --> 00:47:29,609
of<font color="#CCCCCC"> these also changes as much as it can</font>

1347
00:47:28,049 --> 00:47:31,380
because some do have<font color="#CCCCCC"> to</font><font color="#E5E5E5"> follow the other</font>

1348
00:47:29,609 --> 00:47:34,470
but that's<font color="#E5E5E5"> all</font><font color="#CCCCCC"> handled behind</font><font color="#E5E5E5"> the scenes</font>

1349
00:47:31,380 --> 00:47:37,319
<font color="#E5E5E5">so in this case for</font><font color="#CCCCCC"> example</font><font color="#E5E5E5"> for URL are</font>

1350
00:47:34,470 --> 00:47:40,490
calling the variable<font color="#CCCCCC"> E so it randomly</font>

1351
00:47:37,319 --> 00:47:42,690
selects different<font color="#E5E5E5"> length strings</font><font color="#CCCCCC"> etc</font>

1352
00:47:40,490 --> 00:47:44,459
when it comes to commandlets<font color="#E5E5E5"> again we</font>

1353
00:47:42,690 --> 00:47:45,960
cover this so<font color="#E5E5E5"> a new object</font><font color="#CCCCCC"> is the</font>

1354
00:47:44,460 --> 00:47:47,880
default but we can also do<font color="#E5E5E5"> get command</font>

1355
00:47:45,960 --> 00:47:51,270
<font color="#E5E5E5">and as you'll</font><font color="#CCCCCC"> see right now it's doing</font>

1356
00:47:47,880 --> 00:47:53,520
<font color="#E5E5E5">GCM</font><font color="#CCCCCC"> in ECT we run it again it's going to</font>

1357
00:47:51,270 --> 00:47:54,690
<font color="#E5E5E5">do get command in</font><font color="#CCCCCC"> o so every component</font>

1358
00:47:53,520 --> 00:47:57,299
is<font color="#E5E5E5"> going to change much as it possibly</font>

1359
00:47:54,690 --> 00:47:59,160
can<font color="#E5E5E5"> or we can do the</font><font color="#CCCCCC"> powershell ones</font>

1360
00:47:57,299 --> 00:48:00,150
<font color="#CCCCCC">other syntax</font><font color="#E5E5E5"> which again you</font><font color="#CCCCCC"> can run a</font>

1361
00:47:59,160 --> 00:48:01,640
couple<font color="#E5E5E5"> times and see it's gonna be</font>

1362
00:48:00,150 --> 00:48:04,290
pretty<font color="#CCCCCC"> different now if you'll</font><font color="#E5E5E5"> notice</font>

1363
00:48:01,640 --> 00:48:06,480
anything<font color="#CCCCCC"> that changes is</font><font color="#E5E5E5"> going to be</font>

1364
00:48:04,290 --> 00:48:09,119
<font color="#E5E5E5">fluorescent yellow everything else is</font>

1365
00:48:06,480 --> 00:48:10,440
white<font color="#E5E5E5"> any input</font><font color="#CCCCCC"> that you enter is blue</font>

1366
00:48:09,119 --> 00:48:11,940
so at any<font color="#E5E5E5"> point</font><font color="#CCCCCC"> when this crowd</font>

1367
00:48:10,440 --> 00:48:14,640
really crazy<font color="#E5E5E5"> even there okay all the</font>

1368
00:48:11,940 --> 00:48:16,560
<font color="#CCCCCC">bluest stuff</font><font color="#E5E5E5"> I contributed the URL the</font>

1369
00:48:14,640 --> 00:48:18,690
<font color="#E5E5E5">post cradle command anything that was</font>

1370
00:48:16,560 --> 00:48:20,130
just<font color="#E5E5E5"> obvious</font><font color="#CCCCCC"> kata is bright yellow so I</font>

1371
00:48:18,690 --> 00:48:21,480
can see what in the world<font color="#CCCCCC"> just changed</font>

1372
00:48:20,130 --> 00:48:25,380
here because otherwise it's really

1373
00:48:21,480 --> 00:48:27,660
maddening in addition you could just go

1374
00:48:25,380 --> 00:48:29,280
<font color="#E5E5E5">to all and it will randomly</font><font color="#CCCCCC"> go through</font>

1375
00:48:27,660 --> 00:48:32,430
every single<font color="#E5E5E5"> one and produce something</font>

1376
00:48:29,280 --> 00:48:34,050
<font color="#E5E5E5">different every time</font><font color="#CCCCCC"> and you can</font><font color="#E5E5E5"> just</font>

1377
00:48:32,430 --> 00:48:36,868
run<font color="#E5E5E5"> tests at any point to make sure that</font>

1378
00:48:34,050 --> 00:48:39,000
<font color="#E5E5E5">it still</font><font color="#CCCCCC"> works now</font><font color="#E5E5E5"> I will say and this</font>

1379
00:48:36,869 --> 00:48:41,780
is<font color="#CCCCCC"> the</font><font color="#E5E5E5"> the remote</font><font color="#CCCCCC"> peeler that we have by</font>

1380
00:48:39,000 --> 00:48:45,000
<font color="#CCCCCC">default I do not add in invocation</font>

1381
00:48:41,780 --> 00:48:46,319
syntax with all it does get added but I

1382
00:48:45,000 --> 00:48:48,599
wanted<font color="#E5E5E5"> to be easy to go in and</font><font color="#CCCCCC"> explore</font>

1383
00:48:46,319 --> 00:48:49,710
<font color="#CCCCCC">and make sure</font><font color="#E5E5E5"> does my peril</font><font color="#CCCCCC"> to actually</font>

1384
00:48:48,599 --> 00:48:51,300
download I don't want to invoke this

1385
00:48:49,710 --> 00:48:53,010
beacon on my<font color="#E5E5E5"> system but I just want to</font>

1386
00:48:51,300 --> 00:48:57,990
make<font color="#CCCCCC"> sure the payload comes down</font><font color="#E5E5E5"> so the</font>

1387
00:48:53,010 --> 00:49:01,050
very last<font color="#E5E5E5"> thing I'll show is</font><font color="#CCCCCC"> that the</font>

1388
00:48:57,990 --> 00:49:02,729
the compiled PS<font color="#CCCCCC"> compile chart and you</font>

1389
00:49:01,050 --> 00:49:04,410
can use wildcards and regex<font color="#CCCCCC"> and all that</font>

1390
00:49:02,730 --> 00:49:06,180
stuff select for example<font color="#CCCCCC"> you could just</font>

1391
00:49:04,410 --> 00:49:08,609
go back and say<font color="#CCCCCC"> wild card</font><font color="#E5E5E5"> randomly</font>

1392
00:49:06,180 --> 00:49:09,750
choose one<font color="#CCCCCC"> I</font><font color="#E5E5E5"> don't care</font><font color="#CCCCCC"> so for this it's</font>

1393
00:49:08,609 --> 00:49:11,400
going<font color="#E5E5E5"> to take you're in line c-sharp</font>

1394
00:49:09,750 --> 00:49:13,020
code it's<font color="#CCCCCC"> going to go through and it's</font>

1395
00:49:11,400 --> 00:49:15,270
going to compile it<font color="#E5E5E5"> on your system</font><font color="#CCCCCC"> and</font>

1396
00:49:13,020 --> 00:49:16,470
<font color="#E5E5E5">it's also going to compress adjacent to</font>

1397
00:49:15,270 --> 00:49:18,329
yours<font color="#E5E5E5"> because there's a lot of</font><font color="#CCCCCC"> them</font><font color="#E5E5E5"> just</font>

1398
00:49:16,470 --> 00:49:19,980
<font color="#CCCCCC">the safe space cut some space down from</font>

1399
00:49:18,329 --> 00:49:22,079
about<font color="#E5E5E5"> half and at any</font><font color="#CCCCCC"> point you</font><font color="#E5E5E5"> can run</font>

1400
00:49:19,980 --> 00:49:24,089
clip to copy the clipboard out<font color="#E5E5E5"> to copy</font>

1401
00:49:22,079 --> 00:49:26,190
at<font color="#E5E5E5"> the disk and finally you can run show</font>

1402
00:49:24,089 --> 00:49:28,200
at any point<font color="#CCCCCC"> I</font><font color="#E5E5E5"> will show you the length</font>

1403
00:49:26,190 --> 00:49:30,119
of your<font color="#CCCCCC"> Associated command</font><font color="#E5E5E5"> it will</font><font color="#CCCCCC"> show</font>

1404
00:49:28,200 --> 00:49:31,980
you what you started with<font color="#E5E5E5"> I mean also</font>

1405
00:49:30,119 --> 00:49:33,230
give you your<font color="#E5E5E5"> command line syntax so we</font>

1406
00:49:31,980 --> 00:49:35,790
start to<font color="#E5E5E5"> build a lot of</font><font color="#CCCCCC"> different</font>

1407
00:49:33,230 --> 00:49:36,960
<font color="#E5E5E5">occupation options just copy that sucker</font>

1408
00:49:35,790 --> 00:49:38,880
<font color="#CCCCCC">out and then you</font><font color="#E5E5E5"> can just</font><font color="#CCCCCC"> run</font><font color="#E5E5E5"> straight</font>

1409
00:49:36,960 --> 00:49:41,790
<font color="#E5E5E5">from</font><font color="#CCCCCC"> skiel I no interaction nothing like</font>

1410
00:49:38,880 --> 00:49:46,940
that so that's<font color="#E5E5E5"> the end of the demo</font><font color="#CCCCCC"> and I</font>

1411
00:49:41,790 --> 00:49:49,829
just want to<font color="#E5E5E5"> say slides went back</font>

1412
00:49:46,940 --> 00:49:51,270
<font color="#CCCCCC">alright don't run away from powershell</font>

1413
00:49:49,829 --> 00:49:52,859
<font color="#CCCCCC">it's really awesome there's a lot of</font>

1414
00:49:51,270 --> 00:49:55,319
good security features<font color="#CCCCCC"> Blue team should</font>

1415
00:49:52,859 --> 00:49:56,730
embrace<font color="#CCCCCC"> it enable logging</font><font color="#E5E5E5"> increase the</font>

1416
00:49:55,319 --> 00:49:58,800
default size<font color="#CCCCCC"> aggravates those suckers</font>

1417
00:49:56,730 --> 00:50:00,359
look at them look for indicators<font color="#E5E5E5"> of</font>

1418
00:49:58,800 --> 00:50:02,130
<font color="#CCCCCC">obfuscation it's what easier said than</font>

1419
00:50:00,359 --> 00:50:03,930
done<font color="#E5E5E5"> but something you need to do don't</font>

1420
00:50:02,130 --> 00:50:05,369
<font color="#E5E5E5">be afraid of</font><font color="#CCCCCC"> failures we should share</font>

1421
00:50:03,930 --> 00:50:06,779
them<font color="#E5E5E5"> and all learn from them because</font>

1422
00:50:05,369 --> 00:50:08,579
<font color="#E5E5E5">none of</font><font color="#CCCCCC"> us get</font><font color="#E5E5E5"> this stuff right</font><font color="#CCCCCC"> on the</font>

1423
00:50:06,780 --> 00:50:10,230
<font color="#CCCCCC">first</font><font color="#E5E5E5"> try or second or third or</font><font color="#CCCCCC"> fourth</font>

1424
00:50:08,579 --> 00:50:11,369
and<font color="#E5E5E5"> then avenues like</font><font color="#CCCCCC"> this a</font><font color="#E5E5E5"> great</font>

1425
00:50:10,230 --> 00:50:13,230
opportunity<font color="#CCCCCC"> to share that kind of</font>

1426
00:50:11,369 --> 00:50:14,640
information<font color="#CCCCCC"> lastly I get to work</font><font color="#E5E5E5"> with a</font>

1427
00:50:13,230 --> 00:50:16,020
lot<font color="#CCCCCC"> of</font><font color="#E5E5E5"> awesome colleagues who really</font>

1428
00:50:14,640 --> 00:50:17,790
support this kind<font color="#E5E5E5"> of</font><font color="#CCCCCC"> resource and make</font>

1429
00:50:16,020 --> 00:50:20,550
<font color="#E5E5E5">it super exciting to hunt for attackers</font>

1430
00:50:17,790 --> 00:50:22,500
every day<font color="#E5E5E5"> and especially my wife because</font>

1431
00:50:20,550 --> 00:50:24,360
she watches me<font color="#E5E5E5"> write a lot of code home</font>

1432
00:50:22,500 --> 00:50:26,370
surprisingly not<font color="#E5E5E5"> the most exciting thing</font>

1433
00:50:24,360 --> 00:50:27,690
<font color="#CCCCCC">for her to watch me do and so just a big</font>

1434
00:50:26,370 --> 00:50:30,120
thank you<font color="#E5E5E5"> to her because it really is a</font>

1435
00:50:27,690 --> 00:50:31,200
<font color="#E5E5E5">team effort there so I realize I'm out</font>

1436
00:50:30,120 --> 00:50:33,390
<font color="#CCCCCC">of</font><font color="#E5E5E5"> time but I</font><font color="#CCCCCC"> just wanna say thank you</font>

1437
00:50:31,200 --> 00:50:35,100
<font color="#CCCCCC">very</font><font color="#E5E5E5"> much for your</font><font color="#CCCCCC"> attention</font><font color="#E5E5E5"> and I'll be</font>

1438
00:50:33,390 --> 00:50:38,580
<font color="#E5E5E5">around all day</font><font color="#CCCCCC"> today and tomorrow so I'd</font>

1439
00:50:35,100 --> 00:50:39,569
love<font color="#CCCCCC"> to chat and just uh</font><font color="#E5E5E5"> just see what</font>

1440
00:50:38,580 --> 00:50:42,980
you guys<font color="#CCCCCC"> are doing and answer any</font>

1441
00:50:39,570 --> 00:50:42,980
<font color="#E5E5E5">questions</font><font color="#CCCCCC"> I have so thank</font><font color="#E5E5E5"> you</font><font color="#CCCCCC"> very much</font>

