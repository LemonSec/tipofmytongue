1
00:00:20,180 --> 00:00:25,900
hello<font color="#E5E5E5"> everyone thanks</font><font color="#CCCCCC"> for</font>

2
00:00:22,570 --> 00:00:29,020
coming to my talk up too loud or is it

3
00:00:25,900 --> 00:00:31,028
<font color="#E5E5E5">okay all right my name is Paul Watson</font>

4
00:00:29,020 --> 00:00:36,250
I've been<font color="#E5E5E5"> a</font><font color="#CCCCCC"> security engineer at Google</font>

5
00:00:31,029 --> 00:00:38,050
for just over nine years now<font color="#CCCCCC"> I guess and</font>

6
00:00:36,250 --> 00:00:39,460
one of the things I<font color="#CCCCCC"> did when I went to</font>

7
00:00:38,050 --> 00:00:41,709
Google was worked on network security

8
00:00:39,460 --> 00:00:43,800
which is all our production environments

9
00:00:41,710 --> 00:00:46,420
or corporate environments they were

10
00:00:43,800 --> 00:00:48,069
really really<font color="#E5E5E5"> large back in two thousand</font>

11
00:00:46,420 --> 00:00:52,780
four when I started and they're

12
00:00:48,070 --> 00:00:56,289
incredible now and one<font color="#E5E5E5"> of the problems</font>

13
00:00:52,780 --> 00:00:58,329
we had was that it was very manual labor

14
00:00:56,289 --> 00:01:00,699
intensive to maintain all the network

15
00:00:58,329 --> 00:01:03,730
access control lists all the firewalls

16
00:01:00,699 --> 00:01:07,840
all the filtering just a huge manual

17
00:01:03,730 --> 00:01:09,310
task and so we're after<font color="#CCCCCC"> a very short</font>

18
00:01:07,840 --> 00:01:10,270
time of learning the environment wanted

19
00:01:09,310 --> 00:01:12,270
to set out and figure out<font color="#E5E5E5"> how to way to</font>

20
00:01:10,270 --> 00:01:14,560
automate it get myself out of the loop

21
00:01:12,270 --> 00:01:16,780
and<font color="#E5E5E5"> that's kind of where this talk comes</font>

22
00:01:14,560 --> 00:01:22,450
from is some of the tools I wrote and

23
00:01:16,780 --> 00:01:23,649
later open sourced a little one thing if

24
00:01:22,450 --> 00:01:25,330
how many of<font color="#E5E5E5"> you guys go to a lot of</font>

25
00:01:23,649 --> 00:01:29,439
<font color="#E5E5E5">security conferences or more than one</font><font color="#CCCCCC"> a</font>

26
00:01:25,330 --> 00:01:30,580
year something just hit me<font color="#E5E5E5"> today that</font>

27
00:01:29,439 --> 00:01:32,229
I'm just going<font color="#CCCCCC"> to bring up I wasn't</font>

28
00:01:30,580 --> 00:01:33,880
<font color="#E5E5E5">going to</font><font color="#CCCCCC"> say anything but you it seems</font>

29
00:01:32,229 --> 00:01:37,150
<font color="#CCCCCC">like every security conference someone</font>

30
00:01:33,880 --> 00:01:39,908
is talking about<font color="#E5E5E5"> Aurora and apt and the</font>

31
00:01:37,150 --> 00:01:42,220
<font color="#E5E5E5">Google attack and everything as someone</font>

32
00:01:39,909 --> 00:01:43,840
who is part of like the 15-person core

33
00:01:42,220 --> 00:01:46,450
team at Google it actually worked on it

34
00:01:43,840 --> 00:01:49,240
take everything you<font color="#E5E5E5"> hear with a grain of</font>

35
00:01:46,450 --> 00:01:51,340
salt this<font color="#E5E5E5"> size because there is a lot</font><font color="#CCCCCC"> of</font>

36
00:01:49,240 --> 00:01:54,610
fun out there of people<font color="#E5E5E5"> talking about it</font>

37
00:01:51,340 --> 00:01:55,930
<font color="#CCCCCC">that really</font><font color="#E5E5E5"> just don't have a clue all</font>

38
00:01:54,610 --> 00:01:57,429
they know is what they read in the paper

39
00:01:55,930 --> 00:02:00,520
but<font color="#CCCCCC"> it makes great stuff to talk about</font>

40
00:01:57,430 --> 00:02:01,810
in a security conference but yeah you're

41
00:02:00,520 --> 00:02:07,869
not really going to hear a lot of<font color="#E5E5E5"> facts</font>

42
00:02:01,810 --> 00:02:09,579
about it certainly not from this<font color="#E5E5E5"> talk so</font>

43
00:02:07,869 --> 00:02:11,350
I'm<font color="#E5E5E5"> going</font><font color="#CCCCCC"> to do something</font><font color="#E5E5E5"> that</font><font color="#CCCCCC"> a lot of</font>

44
00:02:09,579 --> 00:02:13,030
speakers won't do I'm going<font color="#E5E5E5"> to tell</font><font color="#CCCCCC"> you</font>

45
00:02:11,350 --> 00:02:15,040
how<font color="#E5E5E5"> to tune out my talk and not even</font>

46
00:02:13,030 --> 00:02:19,239
<font color="#CCCCCC">have to</font><font color="#E5E5E5"> bother with it so this is</font><font color="#CCCCCC"> the</font>

47
00:02:15,040 --> 00:02:20,650
one shot<font color="#E5E5E5"> slide if you want the code</font><font color="#CCCCCC"> that</font>

48
00:02:19,239 --> 00:02:24,160
<font color="#E5E5E5">I'm going to be talking about you can go</font>

49
00:02:20,650 --> 00:02:26,470
to code google com / p / kept here at

50
00:02:24,160 --> 00:02:28,769
Caprica if you've ever watched

51
00:02:26,470 --> 00:02:31,359
battlestar galactica the new season

52
00:02:28,769 --> 00:02:32,680
about halfway through the the<font color="#E5E5E5"> series</font>

53
00:02:31,359 --> 00:02:35,380
they landed on this new planet called

54
00:02:32,680 --> 00:02:37,510
Caprica which was the new homeworld

55
00:02:35,380 --> 00:02:39,579
caprica this was our new way of

56
00:02:37,510 --> 00:02:43,420
generating<font color="#CCCCCC"> acl's so i called it Caprica</font>

57
00:02:39,580 --> 00:02:45,460
but it turns out i misspelled it so so

58
00:02:43,420 --> 00:02:46,809
it's kept<font color="#E5E5E5"> here cub and now you know</font>

59
00:02:45,460 --> 00:02:48,790
where the name came from why it's just

60
00:02:46,810 --> 00:02:50,890
<font color="#E5E5E5">kind of a weird thing if you click on</font>

61
00:02:48,790 --> 00:02:54,280
the Downloads link there's a download

62
00:02:50,890 --> 00:02:57,660
called Caprica 242 tgz you can download

63
00:02:54,280 --> 00:03:01,780
it<font color="#E5E5E5"> extract it CD into the directory and</font>

64
00:02:57,660 --> 00:03:03,549
simply run a collge npy this is a<font color="#E5E5E5"> very</font>

65
00:03:01,780 --> 00:03:05,320
<font color="#CCCCCC">Python focus talk because everything I</font>

66
00:03:03,550 --> 00:03:08,620
wrote was in Python I love Python it's a

67
00:03:05,320 --> 00:03:10,359
 and for<font color="#E5E5E5"> your pearl guys I used to</font>

68
00:03:08,620 --> 00:03:13,780
be a pearl guy once<font color="#E5E5E5"> you get into Python</font>

69
00:03:10,360 --> 00:03:14,980
you won't be<font color="#E5E5E5"> anymore and what it will do</font>

70
00:03:13,780 --> 00:03:16,870
is it will take a bunch of<font color="#E5E5E5"> these</font>

71
00:03:14,980 --> 00:03:19,630
policies that we started with it or

72
00:03:16,870 --> 00:03:21,400
sample policies and generate<font color="#E5E5E5"> a CL</font>

73
00:03:19,630 --> 00:03:22,960
filters out of them<font color="#E5E5E5"> and you can look at</font>

74
00:03:21,400 --> 00:03:24,400
the result by going into the filters

75
00:03:22,960 --> 00:03:27,160
directory and seeing all the generated

76
00:03:24,400 --> 00:03:28,900
files if you want to play with<font color="#CCCCCC"> it you</font>

77
00:03:27,160 --> 00:03:30,940
just go into the Deaf directory

78
00:03:28,900 --> 00:03:34,390
definitions and there's things like

79
00:03:30,940 --> 00:03:35,890
<font color="#CCCCCC">Network definitions this</font><font color="#E5E5E5"> is my dmz these</font>

80
00:03:34,390 --> 00:03:38,140
are my web servers these are my mail

81
00:03:35,890 --> 00:03:40,299
servers these are my offices and you

82
00:03:38,140 --> 00:03:42,850
just change those addresses or those net

83
00:03:40,300 --> 00:03:44,410
blocks you can<font color="#E5E5E5"> modify policies by going</font>

84
00:03:42,850 --> 00:03:46,090
<font color="#CCCCCC">into policies directory taking the</font>

85
00:03:44,410 --> 00:03:49,120
existing policies tweaking of around

86
00:03:46,090 --> 00:03:50,410
<font color="#E5E5E5">playing with them run a collge n again</font>

87
00:03:49,120 --> 00:03:53,230
look at the filters to see what the

88
00:03:50,410 --> 00:03:54,640
output looks like and then once you're

89
00:03:53,230 --> 00:03:56,799
like okay you know how to<font color="#E5E5E5"> play with it</font>

90
00:03:54,640 --> 00:03:58,690
if you want to actually learn how to<font color="#CCCCCC"> use</font>

91
00:03:56,800 --> 00:04:01,330
it and get a little<font color="#E5E5E5"> more info if you go</font>

92
00:03:58,690 --> 00:04:03,160
on the<font color="#CCCCCC"> week Eon that code page the week</font>

93
00:04:01,330 --> 00:04:06,190
<font color="#CCCCCC">he has tons of docs from a quick start</font>

94
00:04:03,160 --> 00:04:08,920
guide to how the libraries function how

95
00:04:06,190 --> 00:04:12,370
to add code to it all the capabilities

96
00:04:08,920 --> 00:04:13,630
of writing an ACL term but we'll get

97
00:04:12,370 --> 00:04:15,340
<font color="#E5E5E5">into more of that in a minute this is</font>

98
00:04:13,630 --> 00:04:16,358
just for those<font color="#E5E5E5"> QuickStart guys I just</font>

99
00:04:15,340 --> 00:04:20,829
want to<font color="#E5E5E5"> sit</font><font color="#CCCCCC"> there</font><font color="#E5E5E5"> and play</font><font color="#CCCCCC"> with it</font><font color="#E5E5E5"> for</font>

100
00:04:16,358 --> 00:04:23,289
the next<font color="#E5E5E5"> hour so you have to picture the</font>

101
00:04:20,829 --> 00:04:25,690
epic music you know not<font color="#E5E5E5"> quite there yet</font>

102
00:04:23,290 --> 00:04:27,220
and I'm a huge Star Wars fanatic so

103
00:04:25,690 --> 00:04:29,890
everything's got to be star wars-themed

104
00:04:27,220 --> 00:04:32,350
some so a long time ago aight deals were

105
00:04:29,890 --> 00:04:36,330
basically really poorly you know written

106
00:04:32,350 --> 00:04:36,330
<font color="#CCCCCC">by hand yes</font>

107
00:04:39,090 --> 00:04:45,369
okay and<font color="#E5E5E5"> this is basically what a neck</font>

108
00:04:43,480 --> 00:04:47,410
tail would look<font color="#E5E5E5"> like a simple</font><font color="#CCCCCC"> Cisco ACL</font>

109
00:04:45,370 --> 00:04:49,750
we've got a little<font color="#E5E5E5"> bit of ipv6 full ipv4</font>

110
00:04:47,410 --> 00:04:51,400
and this was written by hand maintained

111
00:04:49,750 --> 00:04:54,790
by hand then you'd cut and paste it into

112
00:04:51,400 --> 00:04:58,030
your router and it has a lot of

113
00:04:54,790 --> 00:04:59,650
challenges doing this by hand first off

114
00:04:58,030 --> 00:05:01,929
if you're dealing<font color="#CCCCCC"> with a very large</font>

115
00:04:59,650 --> 00:05:03,820
network you've probably a whole lot of

116
00:05:01,930 --> 00:05:05,650
ACL some companies are fairly small

117
00:05:03,820 --> 00:05:08,050
they've got one little border ACL on a

118
00:05:05,650 --> 00:05:11,830
cisco they maintain and it's one file

119
00:05:08,050 --> 00:05:13,090
<font color="#CCCCCC">its 50 lines it's very simple this can</font>

120
00:05:11,830 --> 00:05:16,659
<font color="#CCCCCC">help you but it's not going to give you</font>

121
00:05:13,090 --> 00:05:18,390
as much help as if you have 20 ACLs

122
00:05:16,660 --> 00:05:21,010
you're maintaining that share common

123
00:05:18,390 --> 00:05:22,210
<font color="#E5E5E5">lists of here's all our cider blocks we</font>

124
00:05:21,010 --> 00:05:25,270
maintain here's a list of all our

125
00:05:22,210 --> 00:05:26,919
servers so you've got repeatedly put

126
00:05:25,270 --> 00:05:30,070
these<font color="#CCCCCC"> into</font><font color="#E5E5E5"> different terms and access</font>

127
00:05:26,920 --> 00:05:31,630
lists maybe you've got<font color="#CCCCCC"> some juniper</font>

128
00:05:30,070 --> 00:05:34,030
routers you've got some cisco routers

129
00:05:31,630 --> 00:05:35,830
you've got an SRX box you've got a cisco

130
00:05:34,030 --> 00:05:37,809
a<font color="#CCCCCC"> sa and you need to replicate a lot of</font>

131
00:05:35,830 --> 00:05:41,469
these policies across this will help

132
00:05:37,810 --> 00:05:43,570
simplify that they can be extremely

133
00:05:41,470 --> 00:05:44,800
<font color="#E5E5E5">difficult to review so your manager</font>

134
00:05:43,570 --> 00:05:46,240
comes<font color="#E5E5E5"> in and says hey I need you to</font>

135
00:05:44,800 --> 00:05:48,100
spend<font color="#E5E5E5"> the next quarter go over all of</font>

136
00:05:46,240 --> 00:05:49,900
our ACLs and make sure they all make

137
00:05:48,100 --> 00:05:52,120
sense make sure they doing what they're

138
00:05:49,900 --> 00:05:54,429
supposed to do if you've<font color="#E5E5E5"> got a 4,000</font>

139
00:05:52,120 --> 00:05:56,020
line<font color="#CCCCCC"> cisco ACL you'd rather put a bullet</font>

140
00:05:54,430 --> 00:06:00,280
in your head I mean that's<font color="#E5E5E5"> just horrible</font>

141
00:05:56,020 --> 00:06:02,169
grunt work to do of course anytime

142
00:06:00,280 --> 00:06:03,700
you're doing something repetitive by

143
00:06:02,170 --> 00:06:05,410
hand you're<font color="#CCCCCC"> going to get</font><font color="#E5E5E5"> a lot</font><font color="#CCCCCC"> of typos</font>

144
00:06:03,700 --> 00:06:07,870
and you're<font color="#E5E5E5"> not going to notice the typos</font>

145
00:06:05,410 --> 00:06:10,180
until someone says hey why is ssh open

146
00:06:07,870 --> 00:06:12,250
on your web server oh crap<font color="#E5E5E5"> i put 80</font>

147
00:06:10,180 --> 00:06:13,990
instead of 22 or 22 instead of<font color="#E5E5E5"> april</font>

148
00:06:12,250 --> 00:06:15,760
added something and that wasn't<font color="#CCCCCC"> intended</font>

149
00:06:13,990 --> 00:06:17,350
to be there maybe I got a netmask wrong

150
00:06:15,760 --> 00:06:22,210
and I've opened<font color="#E5E5E5"> up more servers than I</font>

151
00:06:17,350 --> 00:06:24,550
intended anyway lots and<font color="#CCCCCC"> lots of</font>

152
00:06:22,210 --> 00:06:26,109
problems so the<font color="#E5E5E5"> way we</font><font color="#CCCCCC"> used to do was</font>

153
00:06:24,550 --> 00:06:28,120
we'd have search and replace you know

154
00:06:26,110 --> 00:06:29,470
why update one file and<font color="#E5E5E5"> then go to</font><font color="#CCCCCC"> the</font>

155
00:06:28,120 --> 00:06:32,260
<font color="#CCCCCC">next and</font><font color="#E5E5E5"> go to the next I'll just use</font>

156
00:06:29,470 --> 00:06:34,210
awk and said and grep and dig through a

157
00:06:32,260 --> 00:06:36,460
lot<font color="#E5E5E5"> of files and manually replace them</font>

158
00:06:34,210 --> 00:06:37,570
that way you ended up as a network

159
00:06:36,460 --> 00:06:39,159
<font color="#E5E5E5">administrator having to pretty much</font>

160
00:06:37,570 --> 00:06:40,930
memory where everything was in your

161
00:06:39,160 --> 00:06:44,020
network and what every subnet was what

162
00:06:40,930 --> 00:06:46,840
the masks were you throwing tons of

163
00:06:44,020 --> 00:06:49,490
remarks to keep track of everything

164
00:06:46,840 --> 00:06:52,128
you know maybe if you had something<font color="#E5E5E5"> like</font>

165
00:06:49,490 --> 00:06:54,590
a checkpoint system you could say well

166
00:06:52,129 --> 00:06:57,560
compile this checkpoint to a cisco

167
00:06:54,590 --> 00:07:00,469
filter but it was very<font color="#CCCCCC"> limited it could</font>

168
00:06:57,560 --> 00:07:02,419
<font color="#E5E5E5">only do certain things and you know and</font>

169
00:07:00,469 --> 00:07:04,669
you'd have to buy the add-ons for it

170
00:07:02,419 --> 00:07:08,930
kind of a pain in the ass so what I

171
00:07:04,669 --> 00:07:11,060
wanted to<font color="#E5E5E5"> build is a common language one</font>

172
00:07:08,930 --> 00:07:13,520
way to write an ACL policy at a very

173
00:07:11,060 --> 00:07:16,639
high level that's easy to read you know

174
00:07:13,520 --> 00:07:19,068
allow from<font color="#CCCCCC"> the internet to my DMV just</font>

175
00:07:16,639 --> 00:07:21,379
web you know<font color="#E5E5E5"> very simple description</font>

176
00:07:19,069 --> 00:07:23,029
descriptive language you're not really

177
00:07:21,379 --> 00:07:25,460
having<font color="#E5E5E5"> to deal with protocols and ports</font>

178
00:07:23,029 --> 00:07:27,979
and netmask it should be clear and<font color="#E5E5E5"> easy</font>

179
00:07:25,460 --> 00:07:30,289
to read so you should share common

180
00:07:27,979 --> 00:07:33,318
objects<font color="#E5E5E5"> and definitions seems pretty</font>

181
00:07:30,289 --> 00:07:38,750
obvious and automate as much as possible

182
00:07:33,319 --> 00:07:40,430
to get people out of the picture another

183
00:07:38,750 --> 00:07:42,520
thing<font color="#E5E5E5"> I recently added was include</font>

184
00:07:40,430 --> 00:07:44,330
statements so it's<font color="#E5E5E5"> very much like a</font>

185
00:07:42,520 --> 00:07:47,150
programming language for<font color="#E5E5E5"> network</font>

186
00:07:44,330 --> 00:07:48,560
filtering if you've<font color="#E5E5E5"> got terms you know</font>

187
00:07:47,150 --> 00:07:50,659
<font color="#CCCCCC">four terms that you're constantly</font>

188
00:07:48,560 --> 00:07:53,930
repeating over and over to say allow

189
00:07:50,659 --> 00:07:55,460
<font color="#E5E5E5">ICMP allow trace route allow SNMP and</font>

190
00:07:53,930 --> 00:07:57,770
you don't want<font color="#E5E5E5"> to have to keep putting</font>

191
00:07:55,460 --> 00:08:00,438
that in<font color="#E5E5E5"> every one</font><font color="#CCCCCC"> you can just create a</font>

192
00:07:57,770 --> 00:08:03,378
policy and say include common services

193
00:08:00,439 --> 00:08:04,699
and it just imports those filters in if

194
00:08:03,379 --> 00:08:06,740
you<font color="#E5E5E5"> ever want to change it you change it</font>

195
00:08:04,699 --> 00:08:09,770
in one place all the new<font color="#E5E5E5"> l's that have</font>

196
00:08:06,740 --> 00:08:11,300
that<font color="#E5E5E5"> include get included and most</font>

197
00:08:09,770 --> 00:08:14,330
importantly and this is really<font color="#E5E5E5"> critical</font>

198
00:08:11,300 --> 00:08:16,129
for<font color="#CCCCCC"> Google validation and testing of</font>

199
00:08:14,330 --> 00:08:18,800
policies which is something<font color="#CCCCCC"> that doesn't</font>

200
00:08:16,129 --> 00:08:22,129
get done a<font color="#E5E5E5"> lot in network security I've</font>

201
00:08:18,800 --> 00:08:24,979
created a<font color="#E5E5E5"> 4,000 line ACL I'm saying that</font>

202
00:08:22,129 --> 00:08:27,169
<font color="#E5E5E5">my home is going to</font><font color="#CCCCCC"> be defended</font><font color="#E5E5E5"> by this</font>

203
00:08:24,979 --> 00:08:29,270
ACL and it's got to be right<font color="#E5E5E5"> well what</font>

204
00:08:27,169 --> 00:08:30,830
<font color="#E5E5E5">sorta unit testing do you do when you</font>

205
00:08:29,270 --> 00:08:33,169
make changes to<font color="#E5E5E5"> it how do you validate</font>

206
00:08:30,830 --> 00:08:36,049
to say this is always right this is

207
00:08:33,169 --> 00:08:40,088
always wrong there really isn't a<font color="#CCCCCC"> lot of</font>

208
00:08:36,049 --> 00:08:42,890
ways to<font color="#E5E5E5"> do that today so real world</font>

209
00:08:40,089 --> 00:08:44,630
copying policies to a new platform<font color="#E5E5E5"> I got</font>

210
00:08:42,890 --> 00:08:46,610
it all in cisco today tomorrow my

211
00:08:44,630 --> 00:08:49,430
network<font color="#E5E5E5"> team comes in and says we just</font>

212
00:08:46,610 --> 00:08:51,230
got a great deal from juniper rewrite

213
00:08:49,430 --> 00:08:54,290
all these policies for the new platform

214
00:08:51,230 --> 00:08:55,970
with the<font color="#E5E5E5"> old school way of doing it now</font>

215
00:08:54,290 --> 00:08:57,680
you're<font color="#E5E5E5"> having to rewrite a new ACL from</font>

216
00:08:55,970 --> 00:08:58,880
scratch with the new way you<font color="#E5E5E5"> basically</font>

217
00:08:57,680 --> 00:09:01,760
just change the target

218
00:08:58,880 --> 00:09:03,800
from Cisco<font color="#E5E5E5"> to</font><font color="#CCCCCC"> Juniper and run a collge n</font>

219
00:09:01,760 --> 00:09:07,490
<font color="#CCCCCC">BAM you've got the exact same policy</font>

220
00:09:03,800 --> 00:09:09,740
<font color="#E5E5E5">with new platform defense-in-depth</font>

221
00:09:07,490 --> 00:09:11,750
strategies<font color="#E5E5E5"> I want to apply this policy</font>

222
00:09:09,740 --> 00:09:14,060
on my network edge or maybe<font color="#E5E5E5"> I'm</font>

223
00:09:11,750 --> 00:09:16,430
deploying it to a specific zone internal

224
00:09:14,060 --> 00:09:17,989
it's got all my HR systems but just to

225
00:09:16,430 --> 00:09:19,819
be<font color="#CCCCCC"> safe in case the network guy screws</font>

226
00:09:17,990 --> 00:09:22,790
up<font color="#CCCCCC"> I</font><font color="#E5E5E5"> want to apply that exact same</font>

227
00:09:19,820 --> 00:09:25,550
policy on<font color="#CCCCCC"> that switch</font><font color="#E5E5E5"> to the individual</font>

228
00:09:22,790 --> 00:09:27,829
hosts so I want<font color="#CCCCCC"> to compile it to Cisco</font>

229
00:09:25,550 --> 00:09:33,859
and I want<font color="#E5E5E5"> to compile at the</font><font color="#CCCCCC"> iptables or</font>

230
00:09:27,830 --> 00:09:37,130
PF you can do<font color="#E5E5E5"> that here the unit tests</font>

231
00:09:33,860 --> 00:09:39,800
sure that port 80 is always allowed to

232
00:09:37,130 --> 00:09:43,880
my web servers before i push this ACL

233
00:09:39,800 --> 00:09:47,020
out make sure that port 22 is never

234
00:09:43,880 --> 00:09:49,100
allowed to my dmz machines and make sure

235
00:09:47,020 --> 00:09:51,079
another thing which commonly happens

236
00:09:49,100 --> 00:09:52,870
make sure<font color="#CCCCCC"> that if it's allowing port 80</font>

237
00:09:51,080 --> 00:09:55,640
to this machine<font color="#CCCCCC"> and it's saying true</font>

238
00:09:52,870 --> 00:09:57,800
that it matches on this specific term

239
00:09:55,640 --> 00:09:59,060
not accidentally matching on a different

240
00:09:57,800 --> 00:10:01,969
term which actually means you have an

241
00:09:59,060 --> 00:10:07,479
error in there somewhere in<font color="#E5E5E5"> void</font>

242
00:10:01,970 --> 00:10:07,480
duplications built with ipv4<font color="#E5E5E5"> ipv6</font>

243
00:10:07,780 --> 00:10:12,490
verifying against traffic scenarios a

244
00:10:10,640 --> 00:10:15,230
lot of networks collect NetFlow data

245
00:10:12,490 --> 00:10:18,170
well if I've got NetFlow data from last

246
00:10:15,230 --> 00:10:20,090
week and I'm<font color="#E5E5E5"> pushing out a new ACL today</font>

247
00:10:18,170 --> 00:10:22,490
wouldn't it<font color="#CCCCCC"> be really cool if you could</font>

248
00:10:20,090 --> 00:10:24,800
take that<font color="#E5E5E5"> NetFlow data and say let's</font>

249
00:10:22,490 --> 00:10:27,110
look at last<font color="#E5E5E5"> week's NetFlow data apply</font>

250
00:10:24,800 --> 00:10:29,209
it against this week's policy and get a

251
00:10:27,110 --> 00:10:31,130
report that says here's the changes<font color="#E5E5E5"> and</font>

252
00:10:29,210 --> 00:10:33,620
then compare<font color="#CCCCCC"> it against what</font><font color="#E5E5E5"> we thought</font>

253
00:10:31,130 --> 00:10:36,290
we what changes we thought we made to

254
00:10:33,620 --> 00:10:38,390
<font color="#E5E5E5">the new ACL so that would we get kind of</font>

255
00:10:36,290 --> 00:10:41,000
an assurance testing that things

256
00:10:38,390 --> 00:10:45,439
actually happened right and modifiable

257
00:10:41,000 --> 00:10:48,530
for new platforms so here's kind of a

258
00:10:45,440 --> 00:10:51,320
<font color="#E5E5E5">high-level overview I wanted</font><font color="#CCCCCC"> to write it</font>

259
00:10:48,530 --> 00:10:54,439
in a modular<font color="#E5E5E5"> fashion so that we could</font>

260
00:10:51,320 --> 00:10:55,400
independently test each module we can

261
00:10:54,440 --> 00:10:57,140
ensure that they do what they're

262
00:10:55,400 --> 00:11:00,230
supposed to do<font color="#CCCCCC"> and more importantly we</font>

263
00:10:57,140 --> 00:11:01,790
could use them in different ways<font color="#E5E5E5"> so over</font>

264
00:11:00,230 --> 00:11:03,410
here<font color="#CCCCCC"> I've got a list of the core</font>

265
00:11:01,790 --> 00:11:05,360
<font color="#CCCCCC">components I guess we've got a naming</font>

266
00:11:03,410 --> 00:11:07,490
library the naming library is what

267
00:11:05,360 --> 00:11:09,560
interprets our definition files<font color="#E5E5E5"> our</font>

268
00:11:07,490 --> 00:11:11,480
networks are network files and our

269
00:11:09,560 --> 00:11:15,809
service files

270
00:11:11,480 --> 00:11:17,790
nning library is useful because what if

271
00:11:15,809 --> 00:11:20,399
I don't<font color="#E5E5E5"> want to generate</font><font color="#CCCCCC"> a CLS but</font>

272
00:11:17,790 --> 00:11:22,529
another team wants to<font color="#E5E5E5"> read those same</font>

273
00:11:20,399 --> 00:11:24,389
definition files and apply them to

274
00:11:22,529 --> 00:11:27,629
something entirely different such as a

275
00:11:24,389 --> 00:11:30,269
network inventory database they can<font color="#E5E5E5"> just</font>

276
00:11:27,629 --> 00:11:32,100
use our naming library and read those

277
00:11:30,269 --> 00:11:34,050
exact same files and get the exact same

278
00:11:32,100 --> 00:11:36,240
data out of<font color="#E5E5E5"> them</font><font color="#CCCCCC"> for entirely different</font>

279
00:11:34,050 --> 00:11:37,498
things our IP address library of course

280
00:11:36,240 --> 00:11:40,769
<font color="#E5E5E5">is important because we've got to know</font>

281
00:11:37,499 --> 00:11:42,990
how to read an IP<font color="#CCCCCC"> address or a net block</font>

282
00:11:40,769 --> 00:11:44,399
or a site or block and manipulate it and

283
00:11:42,990 --> 00:11:47,910
work with it we'll talk more<font color="#E5E5E5"> about each</font>

284
00:11:44,399 --> 00:11:50,490
of these later the policy library is how

285
00:11:47,910 --> 00:11:53,999
we interpret this<font color="#E5E5E5"> high</font><font color="#CCCCCC"> level language</font>

286
00:11:50,490 --> 00:11:55,589
network policy into an object<font color="#E5E5E5"> and now</font>

287
00:11:53,999 --> 00:11:57,629
that I've got an object I<font color="#CCCCCC"> can take that</font>

288
00:11:55,589 --> 00:11:59,279
object and just out put<font color="#CCCCCC"> it in many</font>

289
00:11:57,629 --> 00:12:02,309
<font color="#E5E5E5">different ways sure what called</font>

290
00:11:59,279 --> 00:12:04,619
generators so now I've I read him a

291
00:12:02,309 --> 00:12:07,050
bunch of definitions I read in a policy

292
00:12:04,619 --> 00:12:09,839
which uses those naming definitions and

293
00:12:07,050 --> 00:12:12,029
then I create this object construct that

294
00:12:09,839 --> 00:12:14,069
i call my policy and<font color="#E5E5E5"> I pass it</font><font color="#CCCCCC"> to the</font>

295
00:12:12,029 --> 00:12:16,050
generator varies<font color="#CCCCCC"> in juniper</font><font color="#E5E5E5"> how to pick</font>

296
00:12:14,069 --> 00:12:18,779
that exact same library and create

297
00:12:16,050 --> 00:12:20,729
juniper output the iptables<font color="#CCCCCC"> speedway</font>

298
00:12:18,779 --> 00:12:22,980
library knows how to create iptables

299
00:12:20,730 --> 00:12:24,600
output with it and so on<font color="#E5E5E5"> and so on and</font>

300
00:12:22,980 --> 00:12:26,670
we've got tons of platforms we support

301
00:12:24,600 --> 00:12:31,040
now and of course at the bottom we've

302
00:12:26,670 --> 00:12:31,040
got a collge n pi which<font color="#CCCCCC"> is our compiler</font>

303
00:12:31,189 --> 00:12:35,849
so this<font color="#E5E5E5"> is kind of what the flip looks</font>

304
00:12:33,179 --> 00:12:40,679
like we take our definition files and it

305
00:12:35,850 --> 00:12:44,519
can be<font color="#E5E5E5"> anything like DMZ met HR systems</font>

306
00:12:40,679 --> 00:12:46,170
net<font color="#E5E5E5"> Corp systems net and we just create</font>

307
00:12:44,519 --> 00:12:47,610
them all in one directory whatever

308
00:12:46,170 --> 00:12:49,378
structure you want that<font color="#E5E5E5"> makes sense for</font>

309
00:12:47,610 --> 00:12:51,990
your organization we create service

310
00:12:49,379 --> 00:12:56,429
cells that contain things like HTTP

311
00:12:51,990 --> 00:12:59,129
equals 80 / TCP stuff like that naming

312
00:12:56,429 --> 00:13:01,529
<font color="#E5E5E5">reads that in it takes all the network</font>

313
00:12:59,129 --> 00:13:02,970
addresses and uses the IP<font color="#CCCCCC"> address to</font>

314
00:13:01,529 --> 00:13:05,399
represent them in a common easy

315
00:13:02,970 --> 00:13:08,069
manipulatable way and it<font color="#CCCCCC"> passes that</font>

316
00:13:05,399 --> 00:13:10,619
information to the policy library here

317
00:13:08,069 --> 00:13:12,709
the policy library then reads all of our

318
00:13:10,619 --> 00:13:14,549
policy files which<font color="#CCCCCC"> is our high-level</font>

319
00:13:12,709 --> 00:13:17,339
descriptive language of our<font color="#E5E5E5"> network</font>

320
00:13:14,549 --> 00:13:19,589
policy and uses the naming to create

321
00:13:17,339 --> 00:13:21,720
that object and then<font color="#E5E5E5"> it passes it out</font>

322
00:13:19,589 --> 00:13:23,560
depending<font color="#CCCCCC"> on</font><font color="#E5E5E5"> the policy if the policy</font>

323
00:13:21,720 --> 00:13:25,840
has a target<font color="#CCCCCC"> that says</font>

324
00:13:23,560 --> 00:13:27,699
univer then policy says well<font color="#E5E5E5"> I need to</font>

325
00:13:25,840 --> 00:13:29,920
pass that down to the<font color="#CCCCCC"> junip library to</font>

326
00:13:27,700 --> 00:13:32,830
generate output if it also has a target

327
00:13:29,920 --> 00:13:35,349
called<font color="#CCCCCC"> iptables</font><font color="#E5E5E5"> also passed a copy to IP</font>

328
00:13:32,830 --> 00:13:39,970
tables and the out resulting output is

329
00:13:35,350 --> 00:13:44,200
<font color="#E5E5E5">their filters now we do I'm going waste</font>

330
00:13:39,970 --> 00:13:46,930
flow here we'll just<font color="#E5E5E5"> kind of blow by</font>

331
00:13:44,200 --> 00:13:48,940
that real quick though<font color="#CCCCCC"> initial it</font><font color="#E5E5E5"> was</font>

332
00:13:46,930 --> 00:13:50,650
all it's all built command line because

333
00:13:48,940 --> 00:13:53,020
my original thought was if I get it all

334
00:13:50,650 --> 00:13:55,449
run command line easy editable files

335
00:13:53,020 --> 00:13:57,400
it'll be very<font color="#CCCCCC"> easy to eventually put</font>

336
00:13:55,450 --> 00:13:59,860
into a nice web GUI or some sort of user

337
00:13:57,400 --> 00:14:02,650
interface and it turns out that<font color="#CCCCCC"> hardcore</font>

338
00:13:59,860 --> 00:14:05,740
geeks actually like the command line and

339
00:14:02,650 --> 00:14:08,800
hate gooeys so if you ever want to

340
00:14:05,740 --> 00:14:10,390
overlay a web Billy on it go ahead<font color="#E5E5E5"> we</font>

341
00:14:08,800 --> 00:14:12,430
could probably you know release them as

342
00:14:10,390 --> 00:14:14,680
a side project that would overlay on it

343
00:14:12,430 --> 00:14:18,579
but we've decided not to actually<font color="#CCCCCC"> ever</font>

344
00:14:14,680 --> 00:14:20,739
try and<font color="#E5E5E5"> push us into a GUI system our</font>

345
00:14:18,580 --> 00:14:22,089
in-house system has several key

346
00:14:20,740 --> 00:14:23,770
differences from the<font color="#CCCCCC"> open-source version</font>

347
00:14:22,089 --> 00:14:26,050
one we integrate very tightly with

348
00:14:23,770 --> 00:14:27,430
perforce so that every ACL change gets

349
00:14:26,050 --> 00:14:29,640
code revision we can<font color="#E5E5E5"> keep track of</font>

350
00:14:27,430 --> 00:14:32,170
what's changed when who did it

351
00:14:29,640 --> 00:14:35,589
internally<font color="#CCCCCC"> we use an IP table system</font>

352
00:14:32,170 --> 00:14:38,199
which is modularized so we for a given

353
00:14:35,589 --> 00:14:40,150
system that may be an HR system will say

354
00:14:38,200 --> 00:14:42,400
well there's the base module then we

355
00:14:40,150 --> 00:14:44,410
will add in the HTTP model or the web

356
00:14:42,400 --> 00:14:46,540
services module then we'll add in the

357
00:14:44,410 --> 00:14:48,520
management module and it combines all

358
00:14:46,540 --> 00:14:51,579
these to create<font color="#E5E5E5"> one IP tables policy we</font>

359
00:14:48,520 --> 00:14:53,350
use a special loader for it

360
00:14:51,580 --> 00:14:55,630
for most people you're just going to use

361
00:14:53,350 --> 00:14:57,670
the<font color="#E5E5E5"> speedway which creates a single long</font>

362
00:14:55,630 --> 00:14:59,350
iptables output it's much better then

363
00:14:57,670 --> 00:15:02,410
you can just run iptables restore on it

364
00:14:59,350 --> 00:15:04,960
and it sucks it in we also have<font color="#CCCCCC"> a lot of</font>

365
00:15:02,410 --> 00:15:08,319
integrated push tools for all our router

366
00:15:04,960 --> 00:15:09,820
ACLs our IP tables but not so we've got

367
00:15:08,320 --> 00:15:13,210
<font color="#E5E5E5">our own internal code tree but we port</font>

368
00:15:09,820 --> 00:15:15,550
the changes back and forth whenever I

369
00:15:13,210 --> 00:15:16,540
get time so<font color="#E5E5E5"> we'll look at the naming</font>

370
00:15:15,550 --> 00:15:19,329
library real quick and<font color="#E5E5E5"> I've already</font>

371
00:15:16,540 --> 00:15:21,640
talked about this so this<font color="#E5E5E5"> is what it</font>

372
00:15:19,330 --> 00:15:24,400
<font color="#CCCCCC">would look</font><font color="#E5E5E5"> like to define say RFC 1918</font>

373
00:15:21,640 --> 00:15:28,920
space you just say RFC 1918 equals 10 /

374
00:15:24,400 --> 00:15:31,930
8 you<font color="#E5E5E5"> can put a comment after it you can</font>

375
00:15:28,920 --> 00:15:35,469
retagit so you say internal equals RFC

376
00:15:31,930 --> 00:15:38,469
1918 you<font color="#CCCCCC"> can have ipv6 and ipv4 on the</font>

377
00:15:35,470 --> 00:15:41,140
same line loopback equals if you're only

378
00:15:38,470 --> 00:15:43,270
generating ipv4 output the naming

379
00:15:41,140 --> 00:15:45,340
library and the policy library knows I

380
00:15:43,270 --> 00:15:48,760
<font color="#E5E5E5">don't need to reference the ipv6 when</font>

381
00:15:45,340 --> 00:15:50,620
I'm<font color="#CCCCCC"> only generating ipv4 output you can</font>

382
00:15:48,760 --> 00:15:52,960
define<font color="#CCCCCC"> a bunch of offices individually</font>

383
00:15:50,620 --> 00:15:54,910
with nice descriptive tags and then say

384
00:15:52,960 --> 00:15:57,670
our offices<font color="#E5E5E5"> equals and join those all</font>

385
00:15:54,910 --> 00:16:03,850
together same thing identical that<font color="#CCCCCC"> with</font>

386
00:15:57,670 --> 00:16:05,920
the service definitions this<font color="#CCCCCC"> is more on</font>

387
00:16:03,850 --> 00:16:08,560
<font color="#E5E5E5">the coding side for people that want to</font>

388
00:16:05,920 --> 00:16:10,360
build<font color="#E5E5E5"> into the tools so to use this</font>

389
00:16:08,560 --> 00:16:12,910
naming library you would just<font color="#CCCCCC"> entice on</font>

390
00:16:10,360 --> 00:16:15,220
import the naming library you would

391
00:16:12,910 --> 00:16:17,110
create<font color="#CCCCCC"> a naming naming object the only</font>

392
00:16:15,220 --> 00:16:20,110
argument to it is an app in your<font color="#E5E5E5"> network</font>

393
00:16:17,110 --> 00:16:21,820
that contains those net SVC files with

394
00:16:20,110 --> 00:16:24,220
all your definitions and you get this

395
00:16:21,820 --> 00:16:26,320
definitions object and when you<font color="#CCCCCC"> look at</font>

396
00:16:24,220 --> 00:16:29,680
the different<font color="#E5E5E5"> methods on it you've got</font>

397
00:16:26,320 --> 00:16:33,190
things like get neck and you can just

398
00:16:29,680 --> 00:16:35,170
<font color="#E5E5E5">say get at RFC 1918 and it's going to</font>

399
00:16:33,190 --> 00:16:40,150
<font color="#E5E5E5">come out and say oh it's three different</font>

400
00:16:35,170 --> 00:16:42,250
IP add or objects and this is important

401
00:16:40,150 --> 00:16:43,449
to note why we give<font color="#E5E5E5"> these IP at Arab</font><font color="#CCCCCC"> Jex</font>

402
00:16:42,250 --> 00:16:47,950
<font color="#E5E5E5">will show them and I</font><font color="#CCCCCC"> think the next</font>

403
00:16:43,450 --> 00:16:49,990
slide is<font color="#E5E5E5"> basically population you can do</font>

404
00:16:47,950 --> 00:16:53,470
things<font color="#CCCCCC"> like get service dns it'll return</font>

405
00:16:49,990 --> 00:16:56,200
53<font color="#E5E5E5"> tcp 53 UDP if you're only interested</font>

406
00:16:53,470 --> 00:16:58,870
in<font color="#CCCCCC"> TCP stuff you say get definite or get</font>

407
00:16:56,200 --> 00:17:03,850
serviced by proto dns tcp and it'll just

408
00:16:58,870 --> 00:17:05,140
return 53<font color="#E5E5E5"> the IP address library real</font>

409
00:17:03,850 --> 00:17:06,640
simple to use

410
00:17:05,140 --> 00:17:08,650
import<font color="#CCCCCC"> Mac</font><font color="#E5E5E5"> adder for network access</font>

411
00:17:06,640 --> 00:17:11,680
control addresses and you say an IP

412
00:17:08,650 --> 00:17:14,770
equals a<font color="#CCCCCC"> Mac a dirty and you give it an</font>

413
00:17:11,680 --> 00:17:17,470
address with an M<font color="#CCCCCC"> ask a comment and a</font>

414
00:17:14,770 --> 00:17:18,760
token name and the token name might<font color="#CCCCCC"> be</font>

415
00:17:17,470 --> 00:17:20,890
something like whatever you write out of

416
00:17:18,760 --> 00:17:26,800
the definitions felt like RFC 1918 or

417
00:17:20,890 --> 00:17:27,940
<font color="#CCCCCC">rft 1918 underscore 10 once you have it</font>

418
00:17:26,800 --> 00:17:30,129
in there you get<font color="#E5E5E5"> all these wonderful</font>

419
00:17:27,940 --> 00:17:32,680
things<font color="#E5E5E5"> you can do with the IPS now you</font>

420
00:17:30,130 --> 00:17:34,480
can say well what's the<font color="#E5E5E5"> IP VIP version</font>

421
00:17:32,680 --> 00:17:36,580
of this particular object and it'll<font color="#E5E5E5"> give</font>

422
00:17:34,480 --> 00:17:39,580
you a four or six what is the text

423
00:17:36,580 --> 00:17:41,980
comment that came in with this what is

424
00:17:39,580 --> 00:17:43,990
the token it's in oh this<font color="#E5E5E5"> is in internal</font>

425
00:17:41,980 --> 00:17:46,120
what's the parent token<font color="#E5E5E5"> oh the parent</font>

426
00:17:43,990 --> 00:17:49,960
token was RSP 1918 because member how we

427
00:17:46,120 --> 00:17:52,389
could nest you can request the prefix

428
00:17:49,960 --> 00:17:57,100
length how many hosts are assigned in a

429
00:17:52,390 --> 00:17:59,980
given address or netmask there's a bunch

430
00:17:57,100 --> 00:18:01,240
<font color="#E5E5E5">of other methods like IP EXT extended</font>

431
00:17:59,980 --> 00:18:03,550
address just gives you the IP address

432
00:18:01,240 --> 00:18:06,250
itself and you can ask them the netmask

433
00:18:03,550 --> 00:18:07,870
<font color="#E5E5E5">host</font><font color="#CCCCCC"> mass broadcast so just this</font><font color="#E5E5E5"> library</font>

434
00:18:06,250 --> 00:18:09,910
alone is incredibly useful when building

435
00:18:07,870 --> 00:18:12,449
network access control tools or any sort

436
00:18:09,910 --> 00:18:14,530
of IP address manipulation and<font color="#E5E5E5"> Python</font>

437
00:18:12,450 --> 00:18:16,390
there's a<font color="#E5E5E5"> lot of other methods available</font>

438
00:18:14,530 --> 00:18:18,970
like you could just<font color="#E5E5E5"> get integer values</font>

439
00:18:16,390 --> 00:18:20,290
for them if<font color="#E5E5E5"> you wanted so you have to</font>

440
00:18:18,970 --> 00:18:22,810
play with<font color="#E5E5E5"> the libraries to see all the</font>

441
00:18:20,290 --> 00:18:25,629
wonderful junk in there the policy

442
00:18:22,810 --> 00:18:28,060
library real quick description we talked

443
00:18:25,630 --> 00:18:30,520
about this it's got two key sections a

444
00:18:28,060 --> 00:18:34,960
header section which defines the filter

445
00:18:30,520 --> 00:18:37,180
target<font color="#CCCCCC"> cisco juniper</font><font color="#E5E5E5"> cisco a</font><font color="#CCCCCC"> SA and the</font>

446
00:18:34,960 --> 00:18:40,300
terms which are your actual policy rules

447
00:18:37,180 --> 00:18:42,400
you want to implement and the policy

448
00:18:40,300 --> 00:18:44,860
language this was kind of a big deal

449
00:18:42,400 --> 00:18:48,520
right<font color="#E5E5E5"> here because when initially trying</font>

450
00:18:44,860 --> 00:18:51,159
to do it some platforms allow you to do

451
00:18:48,520 --> 00:18:53,410
things<font color="#E5E5E5"> that others don't so how do you</font>

452
00:18:51,160 --> 00:18:55,750
write one language that does stuff for

453
00:18:53,410 --> 00:18:58,120
everybody but<font color="#E5E5E5"> at the same time can be</font>

454
00:18:55,750 --> 00:18:59,340
kind of a cross-platform language so we

455
00:18:58,120 --> 00:19:02,350
<font color="#CCCCCC">ended up we came up with the idea of</font>

456
00:18:59,340 --> 00:19:04,570
optional and required keywords every

457
00:19:02,350 --> 00:19:06,879
generator must support these required

458
00:19:04,570 --> 00:19:10,120
keywords source address destination

459
00:19:06,880 --> 00:19:13,260
address protocol and then we have<font color="#CCCCCC"> some</font>

460
00:19:10,120 --> 00:19:15,399
optionally supported keywords like

461
00:19:13,260 --> 00:19:19,269
source prefix

462
00:19:15,399 --> 00:19:21,369
stuff like that qos tagging that some

463
00:19:19,269 --> 00:19:22,869
generators might support and others

464
00:19:21,369 --> 00:19:26,109
might not so if you want<font color="#E5E5E5"> to write a</font>

465
00:19:22,869 --> 00:19:28,389
guaranteed cross-platform policy you

466
00:19:26,109 --> 00:19:29,978
would<font color="#E5E5E5"> only use required keywords because</font>

467
00:19:28,389 --> 00:19:33,820
then you're<font color="#E5E5E5"> not using that functionality</font>

468
00:19:29,979 --> 00:19:34,779
that's juniper own way for<font color="#CCCCCC"> example so</font>

469
00:19:33,820 --> 00:19:36,729
this is<font color="#E5E5E5"> kind of what it would look like</font>

470
00:19:34,779 --> 00:19:38,229
if you're<font color="#E5E5E5"> writing a new policy you would</font>

471
00:19:36,729 --> 00:19:39,940
start<font color="#CCCCCC"> the header section which is</font>

472
00:19:38,229 --> 00:19:41,529
<font color="#E5E5E5">enclosed in curly brackets you can throw</font>

473
00:19:39,940 --> 00:19:43,450
a comment to comments whatever you want

474
00:19:41,529 --> 00:19:45,489
in there and then you define the targets

475
00:19:43,450 --> 00:19:48,219
so in this one we define a target<font color="#CCCCCC"> that</font>

476
00:19:45,489 --> 00:19:49,929
says I compiled<font color="#E5E5E5"> ass to</font><font color="#CCCCCC"> Cisco we're going</font>

477
00:19:48,219 --> 00:19:52,239
<font color="#CCCCCC">to call it</font><font color="#E5E5E5"> edge inbound and it's an</font>

478
00:19:49,929 --> 00:19:54,669
extended access list we're going<font color="#E5E5E5"> to have</font>

479
00:19:52,239 --> 00:19:56,919
a target<font color="#E5E5E5"> of speedway which for all</font>

480
00:19:54,669 --> 00:19:58,989
intents purposes is<font color="#CCCCCC"> iptables this is the</font>

481
00:19:56,919 --> 00:20:01,330
iptables you want to you and it's going

482
00:19:58,989 --> 00:20:03,759
<font color="#E5E5E5">to be an input filter and the default</font>

483
00:20:01,330 --> 00:20:05,228
action should be dropped and we're also

484
00:20:03,759 --> 00:20:06,789
going to compile for a Juniper router

485
00:20:05,229 --> 00:20:10,179
and we're going to call the filter edge

486
00:20:06,789 --> 00:20:12,399
inbound and we create multiple terms and

487
00:20:10,179 --> 00:20:14,200
the first two we show here we say the

488
00:20:12,399 --> 00:20:18,039
term will be called discard spoofs if

489
00:20:14,200 --> 00:20:20,440
the source is 1918 deny the next one

490
00:20:18,039 --> 00:20:22,149
says permit IP<font color="#CCCCCC"> deck if it's from the</font>

491
00:20:20,440 --> 00:20:27,429
remote offices and it's going to our<font color="#CCCCCC"> VP</font>

492
00:20:22,149 --> 00:20:29,559
up VPN hub on this<font color="#E5E5E5"> protocol except a lot</font>

493
00:20:27,429 --> 00:20:32,469
of times people<font color="#E5E5E5"> put the call of TCP</font><font color="#CCCCCC"> UDP</font>

494
00:20:29,559 --> 00:20:35,080
or ICMP it will<font color="#E5E5E5"> also accept arbitrary</font>

495
00:20:32,469 --> 00:20:38,109
numbers if you<font color="#CCCCCC"> have non special or</font>

496
00:20:35,080 --> 00:20:40,718
non-traditional protocols that you're

497
00:20:38,109 --> 00:20:43,239
using so then you run a collge n it

498
00:20:40,719 --> 00:20:45,159
creates these filters and you look at

499
00:20:43,239 --> 00:20:47,529
the output of<font color="#E5E5E5"> the filters by can't</font><font color="#CCCCCC"> cap</font>

500
00:20:45,159 --> 00:20:50,649
example a CL so this would actually

501
00:20:47,529 --> 00:20:52,599
create when you run it whatever<font color="#CCCCCC"> that</font>

502
00:20:50,649 --> 00:20:54,820
file name was if it was in this case

503
00:20:52,599 --> 00:20:56,859
example dot<font color="#CCCCCC"> powell it's going to create</font>

504
00:20:54,820 --> 00:21:00,070
three output files in the filters

505
00:20:56,859 --> 00:21:03,968
example that ACL example dossier land

506
00:21:00,070 --> 00:21:08,519
example dot for IP tables and you'll see

507
00:21:03,969 --> 00:21:08,519
<font color="#CCCCCC">that basically it throws in some SI era</font>

508
00:21:09,500 --> 00:21:14,110
content revision tags so that you can

509
00:21:12,290 --> 00:21:17,139
import the data and<font color="#E5E5E5"> we'll replace those</font>

510
00:21:14,110 --> 00:21:19,580
that<font color="#CCCCCC"> once these ID tags are for perforce</font>

511
00:21:17,140 --> 00:21:21,380
it'll throw in the no IP access-list

512
00:21:19,580 --> 00:21:23,960
extended in the name we<font color="#CCCCCC"> gave it edge</font>

513
00:21:21,380 --> 00:21:26,150
inbound IP<font color="#CCCCCC"> exilis extended edge inbound</font>

514
00:21:23,960 --> 00:21:27,530
defines your new<font color="#E5E5E5"> access list and you</font>

515
00:21:26,150 --> 00:21:31,760
<font color="#E5E5E5">just cut and paste into your router and</font>

516
00:21:27,530 --> 00:21:33,710
<font color="#E5E5E5">it's applied for IP tables we get the</font>

517
00:21:31,760 --> 00:21:36,129
exact same policy but only in an IP

518
00:21:33,710 --> 00:21:39,440
tables format so we say our input filter

519
00:21:36,130 --> 00:21:42,620
we're going<font color="#E5E5E5"> to drop my default we create</font>

520
00:21:39,440 --> 00:21:46,520
a new Jump table called discard spoofs

521
00:21:42,620 --> 00:21:48,439
we have penned these rules to it and

522
00:21:46,520 --> 00:21:51,440
then we append to the input filter a

523
00:21:48,440 --> 00:21:54,050
jump to discard spoofs so your input

524
00:21:51,440 --> 00:21:56,510
filter actually will only contain jumps

525
00:21:54,050 --> 00:22:00,290
to each term and terms will be defined

526
00:21:56,510 --> 00:22:02,690
independently as on the jump tables and

527
00:22:00,290 --> 00:22:03,980
done it<font color="#CCCCCC"> out you go on down you get</font><font color="#E5E5E5"> more</font>

528
00:22:02,690 --> 00:22:07,490
complicated<font color="#CCCCCC"> ones you see</font><font color="#E5E5E5"> things like</font>

529
00:22:03,980 --> 00:22:09,500
this<font color="#E5E5E5"> permit</font><font color="#CCCCCC"> ipsec protocol source going</font>

530
00:22:07,490 --> 00:22:11,180
<font color="#E5E5E5">to track state new and established on</font>

531
00:22:09,500 --> 00:22:13,310
and on and on and then finally<font color="#CCCCCC"> you get</font>

532
00:22:11,180 --> 00:22:14,450
the commit so you run<font color="#CCCCCC"> IP tables or store</font>

533
00:22:13,310 --> 00:22:16,820
on that and<font color="#E5E5E5"> it gets loaded into your</font>

534
00:22:14,450 --> 00:22:18,860
system and a<font color="#E5E5E5"> Jennifer router of course</font>

535
00:22:16,820 --> 00:22:19,909
has in a completely<font color="#CCCCCC"> different format and</font>

536
00:22:18,860 --> 00:22:21,860
this is what<font color="#E5E5E5"> it would look like the</font>

537
00:22:19,910 --> 00:22:24,080
exact sick policy rendered slightly

538
00:22:21,860 --> 00:22:25,810
differently if<font color="#E5E5E5"> you happen to be a Lord</font>

539
00:22:24,080 --> 00:22:32,659
of the Rings fan and a Star Wars<font color="#E5E5E5"> fan</font>

540
00:22:25,810 --> 00:22:33,860
yeah<font color="#CCCCCC"> okay currently we got about seven</font>

541
00:22:32,660 --> 00:22:36,830
generator libraries that have been

542
00:22:33,860 --> 00:22:38,510
written about four or five of<font color="#E5E5E5"> them were</font>

543
00:22:36,830 --> 00:22:40,730
written at Google the rest have been

544
00:22:38,510 --> 00:22:43,310
written by other people out in<font color="#E5E5E5"> the open</font>

545
00:22:40,730 --> 00:22:45,410
source community<font color="#CCCCCC"> Stanford's linear</font>

546
00:22:43,310 --> 00:22:47,300
accelerator for example<font color="#E5E5E5"> used cisco ASAS</font>

547
00:22:45,410 --> 00:22:48,770
and they asked us if we could build it

548
00:22:47,300 --> 00:22:51,139
<font color="#E5E5E5">i'm like i really</font><font color="#CCCCCC"> don't have</font><font color="#E5E5E5"> time in a</font>

549
00:22:48,770 --> 00:22:53,270
week<font color="#E5E5E5"> later he sent back here's some</font>

550
00:22:51,140 --> 00:22:55,160
patches to get Cisco a<font color="#CCCCCC"> SI generation</font>

551
00:22:53,270 --> 00:22:56,450
done off this was phenomenal i love

552
00:22:55,160 --> 00:22:58,600
getting patches from the open source

553
00:22:56,450 --> 00:22:58,600
community

554
00:23:00,869 --> 00:23:06,879
SRX was also done we started<font color="#E5E5E5"> it</font>

555
00:23:04,720 --> 00:23:08,649
internally we a patch from someone else

556
00:23:06,879 --> 00:23:10,389
that said here's an SRX generator and

557
00:23:08,649 --> 00:23:11,918
then we had a bake off against the one

558
00:23:10,389 --> 00:23:13,600
that was developed internally versus the

559
00:23:11,919 --> 00:23:17,289
external one to see which<font color="#CCCCCC"> one did a</font>

560
00:23:13,600 --> 00:23:19,269
better job and I hated to tell the guy

561
00:23:17,289 --> 00:23:20,559
but the guy in the internal Google Earth

562
00:23:19,269 --> 00:23:22,090
at wrote the<font color="#E5E5E5"> s-works generator actually</font>

563
00:23:20,559 --> 00:23:23,769
had the better version so we used his

564
00:23:22,090 --> 00:23:25,899
and I hated<font color="#CCCCCC"> to</font><font color="#E5E5E5"> turn away an</font><font color="#CCCCCC"> open-source</font>

565
00:23:23,769 --> 00:23:30,489
contribution<font color="#E5E5E5"> but if you have today it's</font>

566
00:23:25,899 --> 00:23:32,350
<font color="#CCCCCC">about the usage it's more important so</font>

567
00:23:30,489 --> 00:23:34,899
the Juniper client we can generate three

568
00:23:32,350 --> 00:23:37,389
different outputs ipv4<font color="#E5E5E5"> ipv6 bridges</font>

569
00:23:34,899 --> 00:23:39,459
<font color="#CCCCCC">Cisco extended standard object groups</font>

570
00:23:37,389 --> 00:23:48,369
which is basically extended with object

571
00:23:39,460 --> 00:23:51,789
groups iptables ipv4 v6 how important is

572
00:23:48,369 --> 00:24:02,139
this by default if you just create a

573
00:23:51,789 --> 00:24:04,179
cisco and specify yeah hell no<font color="#E5E5E5"> I'm sorry</font>

574
00:24:02,139 --> 00:24:07,379
<font color="#E5E5E5">that's not out we haven't at this time</font>

575
00:24:04,179 --> 00:24:07,379
but<font color="#E5E5E5"> we're exploring all opportunities</font>

576
00:24:10,169 --> 00:24:14,590
for windows why would anybody put

577
00:24:12,999 --> 00:24:17,679
anything important on<font color="#CCCCCC"> Windows they want</font>

578
00:24:14,590 --> 00:24:19,149
to protect yes we<font color="#E5E5E5"> would accept patches</font>

579
00:24:17,679 --> 00:24:22,989
for<font color="#E5E5E5"> windows that would be a wonderful</font>

580
00:24:19,149 --> 00:24:24,428
addition in all sincerity I just don't

581
00:24:22,989 --> 00:24:26,320
use<font color="#CCCCCC"> it that much so I'm</font><font color="#E5E5E5"> not going to</font>

582
00:24:24,429 --> 00:24:28,499
invest a lot<font color="#CCCCCC"> of time but</font><font color="#E5E5E5"> yes it would be</font>

583
00:24:26,320 --> 00:24:28,499
nice

584
00:24:29,140 --> 00:24:34,730
so Cisco by default defaults to extended

585
00:24:32,780 --> 00:24:37,370
you can create<font color="#E5E5E5"> a simple standard access</font>

586
00:24:34,730 --> 00:24:38,720
less like a you know<font color="#CCCCCC"> access-list</font><font color="#E5E5E5"> n you</font>

587
00:24:37,370 --> 00:24:42,290
<font color="#CCCCCC">can create the object groups if you want</font>

588
00:24:38,720 --> 00:24:47,720
to work with<font color="#E5E5E5"> the definitions more</font>

589
00:24:42,290 --> 00:24:52,190
vertically each term as you notice

590
00:24:47,720 --> 00:24:53,720
earlier when we were<font color="#E5E5E5"> looking at it so</font>

591
00:24:52,190 --> 00:24:56,150
that you when you actually get the

592
00:24:53,720 --> 00:24:59,150
<font color="#E5E5E5">output sometimes you just rammed all of</font>

593
00:24:56,150 --> 00:25:00,470
the access list terms together it's very

594
00:24:59,150 --> 00:25:03,080
hard to interpret but if you go and look

595
00:25:00,470 --> 00:25:06,340
<font color="#CCCCCC">we'll put this term discard spoof says</font>

596
00:25:03,080 --> 00:25:09,139
these terms all apply to that are these

597
00:25:06,340 --> 00:25:10,850
policies all apply to this one term so

598
00:25:09,140 --> 00:25:12,020
you kind of know how each term actually

599
00:25:10,850 --> 00:25:17,719
gets done if you want to walk through

600
00:25:12,020 --> 00:25:19,879
and manually verify everything so for

601
00:25:17,720 --> 00:25:22,580
<font color="#E5E5E5">Cisco the arguments would be in your</font>

602
00:25:19,880 --> 00:25:24,290
header section a target Cisco you give

603
00:25:22,580 --> 00:25:27,230
it a name whatever you<font color="#E5E5E5"> want it to</font><font color="#CCCCCC"> be</font><font color="#E5E5E5"> and</font>

604
00:25:24,290 --> 00:25:29,810
then you can optionally say extended

605
00:25:27,230 --> 00:25:31,940
standard<font color="#CCCCCC"> object group I want an inet6</font>

606
00:25:29,810 --> 00:25:36,620
only<font color="#E5E5E5"> policy where I want to mixed which</font>

607
00:25:31,940 --> 00:25:39,110
would be your ipv4 and ipv6 together for

608
00:25:36,620 --> 00:25:42,169
a standard ACL just<font color="#E5E5E5"> Cisco the number and</font>

609
00:25:39,110 --> 00:25:44,120
standard<font color="#CCCCCC"> Cisco ten standard and it would</font>

610
00:25:42,170 --> 00:25:46,250
<font color="#E5E5E5">generate a standard ACL now of course</font>

611
00:25:44,120 --> 00:25:47,719
with you generate a standard ACL and you

612
00:25:46,250 --> 00:25:49,460
try<font color="#E5E5E5"> to put things like ports and</font>

613
00:25:47,720 --> 00:25:50,990
protocols and all that other fancy stuff

614
00:25:49,460 --> 00:25:54,410
it's going to choke and die and say you

615
00:25:50,990 --> 00:25:55,700
can't do that but<font color="#E5E5E5"> assuming your work in</font>

616
00:25:54,410 --> 00:25:58,130
network acl's you probably already know

617
00:25:55,700 --> 00:25:59,390
that juniper is our most fully featured

618
00:25:58,130 --> 00:26:02,420
generated because we use a<font color="#CCCCCC"> lot of</font>

619
00:25:59,390 --> 00:26:04,400
junipers at Google many many many years

620
00:26:02,420 --> 00:26:06,610
ago<font color="#E5E5E5"> when Google was a smallish company</font>

621
00:26:04,400 --> 00:26:09,500
with<font color="#E5E5E5"> only tens of thousands of servers</font>

622
00:26:06,610 --> 00:26:11,629
we went<font color="#E5E5E5"> to Cisco and we used cisco</font>

623
00:26:09,500 --> 00:26:12,770
everywhere and we<font color="#CCCCCC"> said hey how come all</font>

624
00:26:11,630 --> 00:26:14,360
these other companies get these great

625
00:26:12,770 --> 00:26:16,639
discounts and you're charging us full

626
00:26:14,360 --> 00:26:19,939
price and<font color="#E5E5E5"> Cisco came back and said well</font>

627
00:26:16,640 --> 00:26:21,890
<font color="#E5E5E5">you're just a small company so Google</font>

628
00:26:19,940 --> 00:26:23,000
said<font color="#CCCCCC"> f you or they went to Juniper</font><font color="#E5E5E5"> and</font>

629
00:26:21,890 --> 00:26:24,920
they<font color="#E5E5E5"> offered him like this huge</font>

630
00:26:23,000 --> 00:26:28,220
discounts that we want to<font color="#E5E5E5"> be your friend</font>

631
00:26:24,920 --> 00:26:29,990
so to this day<font color="#E5E5E5"> Cisco would practically</font>

632
00:26:28,220 --> 00:26:31,640
hand<font color="#E5E5E5"> this equipment for free just to get</font>

633
00:26:29,990 --> 00:26:33,530
in there<font color="#CCCCCC"> and we're still using junipers</font>

634
00:26:31,640 --> 00:26:35,510
on all our core backbone networks

635
00:26:33,530 --> 00:26:38,030
and they<font color="#CCCCCC"> are a phenomenal phenomenal</font>

636
00:26:35,510 --> 00:26:39,560
platform so since we use a<font color="#CCCCCC"> lot of that</font>

637
00:26:38,030 --> 00:26:41,420
<font color="#E5E5E5">obviously we have all kinds of</font>

638
00:26:39,560 --> 00:26:43,100
additional capabilities and these are

639
00:26:41,420 --> 00:26:44,360
what we call the optional keywords so if

640
00:26:43,100 --> 00:26:46,280
you're generating a Juniper only

641
00:26:44,360 --> 00:26:48,560
platform you can<font color="#CCCCCC"> do</font><font color="#E5E5E5"> things like your</font>

642
00:26:46,280 --> 00:26:52,310
fragment offsets your prefixes lost

643
00:26:48,560 --> 00:26:54,610
priority president handle traffic types

644
00:26:52,310 --> 00:26:58,159
on and on and on it's so much cool stuff

645
00:26:54,610 --> 00:27:00,860
<font color="#E5E5E5">on that</font><font color="#CCCCCC"> caprica page code.google.com / p</font>

646
00:26:58,160 --> 00:27:03,140
/<font color="#CCCCCC"> caprica if you click on the wiki link</font>

647
00:27:00,860 --> 00:27:04,550
there's all this documentation and<font color="#CCCCCC"> then</font>

648
00:27:03,140 --> 00:27:07,460
the policy section it tells you about

649
00:27:04,550 --> 00:27:10,629
each generator and what keywords they

650
00:27:07,460 --> 00:27:13,070
support and<font color="#CCCCCC"> what functionality they have</font>

651
00:27:10,630 --> 00:27:14,270
juniper is another one real sick real

652
00:27:13,070 --> 00:27:16,850
simple when you're creating the header

653
00:27:14,270 --> 00:27:18,560
section you just say target juniper your

654
00:27:16,850 --> 00:27:21,350
filter name and the type of filter you

655
00:27:18,560 --> 00:27:22,940
want inet inet6 or a bridge filter if

656
00:27:21,350 --> 00:27:27,830
for anyone<font color="#E5E5E5"> that uses bridge filters</font>

657
00:27:22,940 --> 00:27:30,650
they're kind<font color="#CCCCCC"> of handy at times iptables</font>

658
00:27:27,830 --> 00:27:32,659
i'm just<font color="#E5E5E5"> going to pass over this don't</font>

659
00:27:30,650 --> 00:27:34,730
use<font color="#CCCCCC"> IP tables let's</font><font color="#E5E5E5"> just go with that</font>

660
00:27:32,660 --> 00:27:37,460
use<font color="#CCCCCC"> speedway when you want to generate</font>

661
00:27:34,730 --> 00:27:39,140
iptables iptables was written for

662
00:27:37,460 --> 00:27:41,000
internal Google because<font color="#E5E5E5"> we do things a</font>

663
00:27:39,140 --> 00:27:42,710
little<font color="#E5E5E5"> bit different with iptables you</font>

664
00:27:41,000 --> 00:27:44,570
probably<font color="#E5E5E5"> don't</font><font color="#CCCCCC"> want to use that so we'll</font>

665
00:27:42,710 --> 00:27:46,340
pass right over it and we'll go to

666
00:27:44,570 --> 00:27:50,149
speedway if you need to<font color="#E5E5E5"> build nine</font>

667
00:27:46,340 --> 00:27:53,240
tables policy use<font color="#CCCCCC"> Speedway</font><font color="#E5E5E5"> and in that</font>

668
00:27:50,150 --> 00:27:55,040
<font color="#E5E5E5">you just a header target Speedway which</font>

669
00:27:53,240 --> 00:27:56,630
what you want to hit your input your

670
00:27:55,040 --> 00:27:58,720
output your forward and whether your

671
00:27:56,630 --> 00:28:01,430
default policy should be<font color="#E5E5E5"> accept or drop</font>

672
00:27:58,720 --> 00:28:02,900
you can also<font color="#CCCCCC"> specify truncate names</font>

673
00:28:01,430 --> 00:28:06,790
because it<font color="#E5E5E5"> turns out I found a little</font>

674
00:28:02,900 --> 00:28:06,790
bug in iptables yeah

675
00:28:10,500 --> 00:28:13,760
which platform

676
00:28:16,530 --> 00:28:21,090
if the platform supports it it'll be

677
00:28:19,020 --> 00:28:23,520
able<font color="#CCCCCC"> to put it all together like Cisco</font>

678
00:28:21,090 --> 00:28:25,439
can do it but you by default it<font color="#CCCCCC"> will</font>

679
00:28:23,520 --> 00:28:29,340
only generate ipv4 but if you say mix

680
00:28:25,440 --> 00:28:31,650
that will include both for IP tables you

681
00:28:29,340 --> 00:28:33,840
actually have two or four Speedway in

682
00:28:31,650 --> 00:28:35,670
this case generate two different files

683
00:28:33,840 --> 00:28:37,980
so like one<font color="#CCCCCC"> text file you'd have one</font>

684
00:28:35,670 --> 00:28:41,040
header that says target<font color="#E5E5E5"> Speedway input</font>

685
00:28:37,980 --> 00:28:43,620
<font color="#CCCCCC">inet fit our inet then you would</font><font color="#E5E5E5"> create</font>

686
00:28:41,040 --> 00:28:47,250
another policy that says target<font color="#E5E5E5"> Speedway</font>

687
00:28:43,620 --> 00:28:48,330
input inet6 and it will generate two

688
00:28:47,250 --> 00:28:51,060
because they have to be passed

689
00:28:48,330 --> 00:28:53,580
separately 12 iptables restore and 12

690
00:28:51,060 --> 00:28:55,710
ip6 tables restore and that's just

691
00:28:53,580 --> 00:28:57,840
<font color="#E5E5E5">because inherently Linux has it</font><font color="#CCCCCC"> to</font>

692
00:28:55,710 --> 00:28:59,670
<font color="#E5E5E5">different capabilities to handle both of</font>

693
00:28:57,840 --> 00:29:02,159
it there's not one system in the kernel

694
00:28:59,670 --> 00:29:05,780
<font color="#E5E5E5">that handles both and that's really what</font>

695
00:29:02,160 --> 00:29:05,780
it comes down to its platform specific

696
00:29:05,960 --> 00:29:10,710
if you want it's not necessary you<font color="#E5E5E5"> can</font>

697
00:29:09,180 --> 00:29:13,230
just apply your rules directly to the

698
00:29:10,710 --> 00:29:15,630
input filled the output filter you

699
00:29:13,230 --> 00:29:17,040
happen to have a linux box that has 18

700
00:29:15,630 --> 00:29:19,620
interfaces and you want to do something

701
00:29:17,040 --> 00:29:22,830
<font color="#E5E5E5">different any interface you can just</font>

702
00:29:19,620 --> 00:29:25,199
specify interface specific terms that's

703
00:29:22,830 --> 00:29:30,360
only applied will give an interface eth1

704
00:29:25,200 --> 00:29:32,820
colon for by<font color="#E5E5E5"> default it's a state</font>

705
00:29:30,360 --> 00:29:34,949
tracking filter which means it keeps

706
00:29:32,820 --> 00:29:36,510
track<font color="#E5E5E5"> of state allows established flows</font>

707
00:29:34,950 --> 00:29:39,000
through if you want<font color="#E5E5E5"> it to be</font><font color="#CCCCCC"> a very</font>

708
00:29:36,510 --> 00:29:40,500
<font color="#E5E5E5">rigid filter without any state tracking</font>

709
00:29:39,000 --> 00:29:42,570
and you want to handle<font color="#E5E5E5"> that yourself by</font>

710
00:29:40,500 --> 00:29:44,700
allowing<font color="#E5E5E5"> its terms you can</font><font color="#CCCCCC"> use the no</font>

711
00:29:42,570 --> 00:29:51,659
state argument which turns off all flow

712
00:29:44,700 --> 00:29:52,650
tracking the compiler<font color="#E5E5E5"> akal</font><font color="#CCCCCC"> gen by</font>

713
00:29:51,660 --> 00:29:54,780
default<font color="#CCCCCC"> in the command line you just</font>

714
00:29:52,650 --> 00:29:56,730
type dot slash<font color="#CCCCCC"> akal gen it'll do all</font>

715
00:29:54,780 --> 00:29:59,490
your compiling for you there's a few

716
00:29:56,730 --> 00:30:02,160
other arguments you can use you have if

717
00:29:59,490 --> 00:30:04,500
you right now it comes with dot slash

718
00:30:02,160 --> 00:30:05,880
death which has all your definitions but

719
00:30:04,500 --> 00:30:07,890
if for some reason you wanted to have

720
00:30:05,880 --> 00:30:09,750
definitions one definitions<font color="#CCCCCC"> too and</font>

721
00:30:07,890 --> 00:30:12,210
definitions three directory that you

722
00:30:09,750 --> 00:30:13,860
used at different times you can specify

723
00:30:12,210 --> 00:30:16,440
your definitions director with the dash

724
00:30:13,860 --> 00:30:18,360
D argument you can target one policy

725
00:30:16,440 --> 00:30:21,270
file by throwing Dash P and the file

726
00:30:18,360 --> 00:30:22,830
name you want to compile with you can

727
00:30:21,270 --> 00:30:25,350
change your output directory from the

728
00:30:22,830 --> 00:30:27,600
default of<font color="#E5E5E5"> filters to wherever you want</font>

729
00:30:25,350 --> 00:30:30,178
the<font color="#CCCCCC"> powder which is kind</font><font color="#E5E5E5"> of the default</font>

730
00:30:27,600 --> 00:30:32,039
tells it go<font color="#E5E5E5"> into this directory and</font>

731
00:30:30,179 --> 00:30:34,260
recursively<font color="#E5E5E5"> go through every</font><font color="#CCCCCC"> Paul file</font>

732
00:30:32,039 --> 00:30:37,559
you find in<font color="#E5E5E5"> every sector find within</font>

733
00:30:34,260 --> 00:30:40,320
their shade checking by default is

734
00:30:37,559 --> 00:30:42,149
enabled shade checking basically makes

735
00:30:40,320 --> 00:30:44,610
sure that this term doesn't occlude the

736
00:30:42,150 --> 00:30:46,410
term<font color="#E5E5E5"> under it so like if the first term</font>

737
00:30:44,610 --> 00:30:47,520
you have is deny everything and then

738
00:30:46,410 --> 00:30:49,950
you've<font color="#CCCCCC"> got this really extensive</font>

739
00:30:47,520 --> 00:30:53,809
iptables rule it's going to tell you

740
00:30:49,950 --> 00:30:53,809
you're kind of not doing this right

741
00:30:54,289 --> 00:30:58,020
expiration info one of the things we

742
00:30:56,640 --> 00:31:00,330
<font color="#E5E5E5">often do a network security as a guy</font>

743
00:30:58,020 --> 00:31:02,850
says I really really need this<font color="#E5E5E5"> when you</font>

744
00:31:00,330 --> 00:31:05,370
go no policy says we can't do it<font color="#E5E5E5"> okay</font>

745
00:31:02,850 --> 00:31:06,750
we'll give you a 30 day exception but

746
00:31:05,370 --> 00:31:10,199
<font color="#E5E5E5">you got</font><font color="#CCCCCC"> to have</font><font color="#E5E5E5"> your stuff fixed after</font>

747
00:31:06,750 --> 00:31:11,880
30 days well one of the problems we<font color="#CCCCCC"> have</font>

748
00:31:10,200 --> 00:31:13,500
is we put<font color="#CCCCCC"> that up in there we'd put</font>

749
00:31:11,880 --> 00:31:15,630
remarks in there saying after 30 days

750
00:31:13,500 --> 00:31:17,100
removed from this<font color="#CCCCCC"> date</font><font color="#E5E5E5"> and then it kind</font>

751
00:31:15,630 --> 00:31:18,480
of never got removed then six months

752
00:31:17,100 --> 00:31:19,918
<font color="#CCCCCC">after you were supposed to remove it</font>

753
00:31:18,480 --> 00:31:21,120
it's still there<font color="#E5E5E5"> and you're like well I</font>

754
00:31:19,919 --> 00:31:23,400
don't<font color="#E5E5E5"> want to cut it off now they might</font>

755
00:31:21,120 --> 00:31:25,320
be depending on it so one of the things

756
00:31:23,400 --> 00:31:26,850
we put in in the terms when you're

757
00:31:25,320 --> 00:31:30,090
defining a term you could say this term

758
00:31:26,850 --> 00:31:32,189
expires give it a hardcore date and then

759
00:31:30,090 --> 00:31:34,020
when you run compile next time if that

760
00:31:32,190 --> 00:31:35,789
<font color="#CCCCCC">date has expired it'll generate a</font>

761
00:31:34,020 --> 00:31:38,250
warning saying I'm not rendering this

762
00:31:35,789 --> 00:31:40,080
term anymore because it's expired to let

763
00:31:38,250 --> 00:31:41,970
you know that<font color="#CCCCCC"> what it's doing but then</font>

764
00:31:40,080 --> 00:31:44,639
the policy will automatically compile

765
00:31:41,970 --> 00:31:46,830
without that term in there that way when

766
00:31:44,640 --> 00:31:49,789
you tell someone this expires in two

767
00:31:46,830 --> 00:31:53,250
weeks or 30 days or 90 days it will

768
00:31:49,789 --> 00:31:55,140
guaranteed and you'll at least get the

769
00:31:53,250 --> 00:31:57,330
warning you can also tell it warned me

770
00:31:55,140 --> 00:31:59,490
two<font color="#E5E5E5"> weeks in advance before you're going</font>

771
00:31:57,330 --> 00:32:01,260
to start removing so maybe<font color="#E5E5E5"> you if you</font>

772
00:31:59,490 --> 00:32:02,850
compile your rules every day or once a

773
00:32:01,260 --> 00:32:04,230
week you'll still get the warning in

774
00:32:02,850 --> 00:32:06,799
advance that this one's going<font color="#E5E5E5"> to go away</font>

775
00:32:04,230 --> 00:32:06,799
next<font color="#E5E5E5"> week</font>

776
00:32:12,940 --> 00:32:15,840
repeat that

777
00:32:20,559 --> 00:32:23,700
<font color="#CCCCCC">I p ne ne</font>

778
00:32:26,290 --> 00:32:31,659
so that you're aware of it yeah if you

779
00:32:29,080 --> 00:32:33,070
did an allow IP<font color="#E5E5E5"> any any and say it was</font>

780
00:32:31,660 --> 00:32:35,620
<font color="#CCCCCC">your third rule and you've</font><font color="#E5E5E5"> had five</font>

781
00:32:33,070 --> 00:32:37,899
under it<font color="#E5E5E5"> that shade checking is going to</font>

782
00:32:35,620 --> 00:32:40,600
come up give you a warning that this

783
00:32:37,900 --> 00:32:42,220
term is kind of taking over all the ones

784
00:32:40,600 --> 00:32:46,240
underneath it when you can still screw

785
00:32:42,220 --> 00:32:49,300
yourself but it's part of the game but

786
00:32:46,240 --> 00:32:50,830
on<font color="#E5E5E5"> that let's talk about assurance and</font>

787
00:32:49,300 --> 00:32:54,040
validation which is exactly what you're

788
00:32:50,830 --> 00:32:55,540
talking<font color="#CCCCCC"> about one of the big reasons I</font>

789
00:32:54,040 --> 00:32:58,450
wanted<font color="#E5E5E5"> to do this at goop was now that I</font>

790
00:32:55,540 --> 00:33:00,639
have a network security object that I

791
00:32:58,450 --> 00:33:03,970
can manipulate with code play with

792
00:33:00,640 --> 00:33:05,710
because just trying to read an ACL with

793
00:33:03,970 --> 00:33:07,270
code and then create something I can

794
00:33:05,710 --> 00:33:09,460
look at and manipulate is really

795
00:33:07,270 --> 00:33:10,840
freaking painful so this was a much

796
00:33:09,460 --> 00:33:15,310
<font color="#E5E5E5">easier way now that we've got this in</font>

797
00:33:10,840 --> 00:33:17,470
policy object<font color="#E5E5E5"> I can write a unit testing</font>

798
00:33:15,310 --> 00:33:19,030
and validation framework around it<font color="#CCCCCC"> just</font>

799
00:33:17,470 --> 00:33:23,530
really cool this is given us some<font color="#E5E5E5"> really</font>

800
00:33:19,030 --> 00:33:26,500
big things most importantly is we<font color="#E5E5E5"> don't</font>

801
00:33:23,530 --> 00:33:28,899
want our customers to suddenly suffer an

802
00:33:26,500 --> 00:33:32,170
outage in gmail because one of our guys

803
00:33:28,900 --> 00:33:34,720
fat fingered an ACL and it's happened in

804
00:33:32,170 --> 00:33:36,760
the past and horrible and it's because

805
00:33:34,720 --> 00:33:39,340
you're doing<font color="#E5E5E5"> things at such scale that</font>

806
00:33:36,760 --> 00:33:40,810
one mistake hurts so many people<font color="#E5E5E5"> that</font>

807
00:33:39,340 --> 00:33:43,449
when you multiply the pain all these

808
00:33:40,810 --> 00:33:45,460
people feel against what you did it's

809
00:33:43,450 --> 00:33:48,310
like wow<font color="#E5E5E5"> I just caused 80 years of</font>

810
00:33:45,460 --> 00:33:51,190
damage you<font color="#E5E5E5"> know it's like really scary</font>

811
00:33:48,310 --> 00:33:52,510
stuff some of these tools aren't being

812
00:33:51,190 --> 00:33:54,280
released but we're releasing the

813
00:33:52,510 --> 00:33:56,830
libraries that allow you<font color="#E5E5E5"> to build this</font>

814
00:33:54,280 --> 00:33:58,270
functionality on your own and some<font color="#E5E5E5"> of it</font>

815
00:33:56,830 --> 00:34:00,790
<font color="#E5E5E5">can be done is with as easy as a bash</font>

816
00:33:58,270 --> 00:34:03,480
script using the code we've got one is a

817
00:34:00,790 --> 00:34:03,480
Culebra

818
00:34:04,450 --> 00:34:07,990
<font color="#E5E5E5">I won't even talk about the ones we're</font>

819
00:34:06,580 --> 00:34:09,250
not releasing<font color="#E5E5E5"> that much I'll just</font>

820
00:34:07,990 --> 00:34:11,370
briefly walk over them<font color="#CCCCCC"> because I know</font>

821
00:34:09,250 --> 00:34:13,750
I'm probably getting shorter on time

822
00:34:11,370 --> 00:34:15,790
<font color="#CCCCCC">netflow validation which internally we</font>

823
00:34:13,750 --> 00:34:17,830
called snakkle the load balancer

824
00:34:15,790 --> 00:34:19,449
validation which we<font color="#E5E5E5"> don't</font><font color="#CCCCCC"> really use</font>

825
00:34:17,830 --> 00:34:22,600
<font color="#E5E5E5">anymore we do a different version of</font>

826
00:34:19,449 --> 00:34:24,339
that a policy reader library if you

827
00:34:22,600 --> 00:34:27,250
wanted to find a<font color="#E5E5E5"> way to nicely render it</font>

828
00:34:24,340 --> 00:34:31,210
in a nice gooey somehow occlusion

829
00:34:27,250 --> 00:34:32,590
detection for terms we over Christmas

830
00:34:31,210 --> 00:34:33,970
break on vacation one year I wrote

831
00:34:32,590 --> 00:34:35,200
what's called pole position because we

832
00:34:33,969 --> 00:34:37,509
had this system called<font color="#E5E5E5"> Speedway for</font>

833
00:34:35,199 --> 00:34:39,100
deploying all our IP tables and it

834
00:34:37,510 --> 00:34:41,200
suddenly hit me<font color="#CCCCCC"> am</font><font color="#E5E5E5"> like well what</font>

835
00:34:39,100 --> 00:34:42,580
happens if we deploy iptables on all

836
00:34:41,199 --> 00:34:44,409
these machines how do<font color="#CCCCCC"> I keep track of</font>

837
00:34:42,580 --> 00:34:47,110
them all and make<font color="#CCCCCC"> sure that they're</font><font color="#E5E5E5"> all</font>

838
00:34:44,409 --> 00:34:49,980
getting updated so part<font color="#E5E5E5"> of the push that</font>

839
00:34:47,110 --> 00:34:52,510
went out was I over this Christmas break

840
00:34:49,980 --> 00:34:54,580
was a small demon that runs on every box

841
00:34:52,510 --> 00:34:57,130
i get these<font color="#E5E5E5"> IP tables that occasionally</font>

842
00:34:54,580 --> 00:34:59,230
pings back to a central collector saying

843
00:34:57,130 --> 00:35:01,480
yes<font color="#E5E5E5"> i'm running IP tables and then he</font>

844
00:34:59,230 --> 00:35:03,340
knows to go check that box and<font color="#E5E5E5"> say what</font>

845
00:35:01,480 --> 00:35:05,230
version of iptables do you have what's

846
00:35:03,340 --> 00:35:06,760
your role what do<font color="#E5E5E5"> you do with it what's</font>

847
00:35:05,230 --> 00:35:08,170
<font color="#E5E5E5">the current hash of your rules what's</font>

848
00:35:06,760 --> 00:35:09,520
the previous hash of your<font color="#E5E5E5"> rules</font><font color="#CCCCCC"> and it</font>

849
00:35:08,170 --> 00:35:13,240
collects all these stats and displays

850
00:35:09,520 --> 00:35:14,680
them in a real cool GUI so the<font color="#CCCCCC"> akal</font>

851
00:35:13,240 --> 00:35:16,029
check library which is released and this

852
00:35:14,680 --> 00:35:20,500
is an important<font color="#CCCCCC"> one that's very easy to</font>

853
00:35:16,030 --> 00:35:25,390
use you've got an ACL and you want to

854
00:35:20,500 --> 00:35:28,480
say if<font color="#CCCCCC"> I</font><font color="#E5E5E5"> apply this traffic to this</font>

855
00:35:25,390 --> 00:35:32,890
filter with this protocol imports what

856
00:35:28,480 --> 00:35:35,890
happens so a real<font color="#E5E5E5"> simple example this is</font>

857
00:35:32,890 --> 00:35:37,509
in the when you download<font color="#CCCCCC"> Kirika and</font>

858
00:35:35,890 --> 00:35:39,250
install<font color="#CCCCCC"> it one of the policies that</font>

859
00:35:37,510 --> 00:35:42,340
comes with is this sample multi-target

860
00:35:39,250 --> 00:35:45,670
policy which compiles for like five or

861
00:35:42,340 --> 00:35:48,160
six<font color="#E5E5E5"> different forms so we run this</font><font color="#CCCCCC"> akal</font>

862
00:35:45,670 --> 00:35:51,820
check command line and we say looking at

863
00:35:48,160 --> 00:35:55,000
this policy dash s1200 one with<font color="#E5E5E5"> this</font>

864
00:35:51,820 --> 00:35:58,120
source address and using protocol<font color="#CCCCCC"> TCP</font>

865
00:35:55,000 --> 00:36:00,400
and port 80 destination port 80 what

866
00:35:58,120 --> 00:36:01,810
would<font color="#E5E5E5"> happen in that policy and it comes</font>

867
00:36:00,400 --> 00:36:04,240
back<font color="#CCCCCC"> and says well there's</font><font color="#E5E5E5"> two filters</font>

868
00:36:01,810 --> 00:36:06,190
in their edge inbound and it would match

869
00:36:04,240 --> 00:36:08,290
on term permit web services with an

870
00:36:06,190 --> 00:36:10,390
accept and there's a second filter

871
00:36:08,290 --> 00:36:12,490
called edge outbound<font color="#E5E5E5"> and it would match</font>

872
00:36:10,390 --> 00:36:16,240
in the term called default<font color="#CCCCCC"> except</font>

873
00:36:12,490 --> 00:36:18,759
and we know for sure that that traffic

874
00:36:16,240 --> 00:36:21,490
will match on that term with that result

875
00:36:18,760 --> 00:36:22,840
<font color="#E5E5E5">except and that's really cool to know</font>

876
00:36:21,490 --> 00:36:24,879
because now you can<font color="#E5E5E5"> say</font><font color="#CCCCCC"> things like</font>

877
00:36:22,840 --> 00:36:27,460
these are my web servers and<font color="#E5E5E5"> I'm going</font>

878
00:36:24,880 --> 00:36:30,160
<font color="#E5E5E5">to write a quick script that says from a</font>

879
00:36:27,460 --> 00:36:33,070
random internet address going to this

880
00:36:30,160 --> 00:36:34,990
<font color="#E5E5E5">machine on this port and protocol what</font>

881
00:36:33,070 --> 00:36:36,850
happens it should<font color="#E5E5E5"> always come back</font><font color="#CCCCCC"> and</font>

882
00:36:34,990 --> 00:36:40,450
say except and it should<font color="#E5E5E5"> always except</font>

883
00:36:36,850 --> 00:36:42,009
on this term and<font color="#CCCCCC"> if</font><font color="#E5E5E5"> it doesn't quick</font>

884
00:36:40,450 --> 00:36:45,069
tell me before<font color="#E5E5E5"> I push this out because</font>

885
00:36:42,010 --> 00:36:55,630
something's broken I can also say<font color="#E5E5E5"> always</font>

886
00:36:45,070 --> 00:36:58,480
make<font color="#CCCCCC"> sure that if I run</font><font color="#E5E5E5"> ssh2 that from</font>

887
00:36:55,630 --> 00:37:00,850
that<font color="#E5E5E5"> same address what does it match on</font>

888
00:36:58,480 --> 00:37:05,230
it'll match on edge input or edge

889
00:37:00,850 --> 00:37:07,330
inbound filter in this term if accepted

890
00:37:05,230 --> 00:37:09,070
default deny because it's<font color="#E5E5E5"> looking for</font>

891
00:37:07,330 --> 00:37:10,960
established that knows it's probably it

892
00:37:09,070 --> 00:37:13,540
could match if it was established<font color="#E5E5E5"> and</font>

893
00:37:10,960 --> 00:37:16,750
then it will also say default deny so I

894
00:37:13,540 --> 00:37:18,220
know<font color="#E5E5E5"> that</font><font color="#CCCCCC"> SSH</font><font color="#E5E5E5"> never get through unless</font>

895
00:37:16,750 --> 00:37:20,140
somehow someone's already has an

896
00:37:18,220 --> 00:37:24,060
established session and it would always

897
00:37:20,140 --> 00:37:24,060
be accepted in our filter edge outbound

898
00:37:28,490 --> 00:37:36,529
anyone sleeping yet and now sometimes

899
00:37:32,420 --> 00:37:39,080
these talks can get really<font color="#E5E5E5"> dry so the</font>

900
00:37:36,530 --> 00:37:40,190
crackle snakkle stuff we wrote basically

901
00:37:39,080 --> 00:37:42,950
was making<font color="#CCCCCC"> sure that we don't</font>

902
00:37:40,190 --> 00:37:44,840
accidentally block services really

903
00:37:42,950 --> 00:37:46,669
<font color="#E5E5E5">useful stuff this is kind of an</font><font color="#CCCCCC"> example</font>

904
00:37:44,840 --> 00:37:49,550
of what what snakkle was basically we

905
00:37:46,670 --> 00:37:51,590
take last week's NetFlow data that used

906
00:37:49,550 --> 00:37:53,000
to come through all our ACL filters we

907
00:37:51,590 --> 00:37:55,130
look at what came through<font color="#E5E5E5"> the filters</font>

908
00:37:53,000 --> 00:37:57,380
now we've wrote a new ACL we're going to

909
00:37:55,130 --> 00:37:59,330
push out this week but<font color="#E5E5E5"> before we push it</font>

910
00:37:57,380 --> 00:38:02,360
let's take<font color="#E5E5E5"> last week's network traffic</font>

911
00:37:59,330 --> 00:38:04,549
run it through this filter the new

912
00:38:02,360 --> 00:38:07,700
filter we generated and go what's

913
00:38:04,550 --> 00:38:10,970
<font color="#E5E5E5">changed what's the diff and in this</font>

914
00:38:07,700 --> 00:38:13,339
example report it would sit<font color="#E5E5E5"> um</font><font color="#CCCCCC"> Aiden I</font>

915
00:38:10,970 --> 00:38:17,180
has turned into an except for this

916
00:38:13,340 --> 00:38:19,970
packet sample we're pushing through or

917
00:38:17,180 --> 00:38:22,759
this except has turned<font color="#E5E5E5"> into a deny hey</font>

918
00:38:19,970 --> 00:38:24,230
used to allow port 80 to google com and

919
00:38:22,760 --> 00:38:25,550
now<font color="#CCCCCC"> p don't well that's kind of</font>

920
00:38:24,230 --> 00:38:26,810
important<font color="#CCCCCC"> to know before you</font><font color="#E5E5E5"> push out</font>

921
00:38:25,550 --> 00:38:31,940
that ACL because you can find the

922
00:38:26,810 --> 00:38:33,619
problems and more<font color="#E5E5E5"> importantly since you</font>

923
00:38:31,940 --> 00:38:35,540
kind of know what the changes are you

924
00:38:33,619 --> 00:38:37,850
did by looking<font color="#CCCCCC"> at that you get a quick</font>

925
00:38:35,540 --> 00:38:42,140
assessment of<font color="#E5E5E5"> are the changes that I put</font>

926
00:38:37,850 --> 00:38:45,680
in what I<font color="#E5E5E5"> would expect validation on the</font>

927
00:38:42,140 --> 00:38:47,180
crackler basically this kind<font color="#E5E5E5"> of</font>

928
00:38:45,680 --> 00:38:49,520
describes an older way we used to do it

929
00:38:47,180 --> 00:38:51,319
we know certain services are out there

930
00:38:49,520 --> 00:38:53,240
because we've got jobs running in our

931
00:38:51,320 --> 00:38:56,150
production environment that our front

932
00:38:53,240 --> 00:38:58,910
ends for<font color="#E5E5E5"> gmail for hangouts for all</font>

933
00:38:56,150 --> 00:39:06,280
these<font color="#E5E5E5"> wonderful things yeah which one</font>

934
00:38:58,910 --> 00:39:08,810
<font color="#E5E5E5">okay oh man it's going quick and</font>

935
00:39:06,280 --> 00:39:11,180
basically by taking those authoritative

936
00:39:08,810 --> 00:39:12,950
sources of what's actually running and

937
00:39:11,180 --> 00:39:15,020
we know what needs<font color="#E5E5E5"> to be live and what's</font>

938
00:39:12,950 --> 00:39:18,980
a production service versus a QA service

939
00:39:15,020 --> 00:39:21,050
we can import those and on-the-fly do an

940
00:39:18,980 --> 00:39:22,880
ACL validation check so if there's a

941
00:39:21,050 --> 00:39:25,640
live production service that's flagged

942
00:39:22,880 --> 00:39:27,619
as serving publicly and it's<font color="#E5E5E5"> going to be</font>

943
00:39:25,640 --> 00:39:29,029
blocked by<font color="#E5E5E5"> our policies we should know</font>

944
00:39:27,619 --> 00:39:31,510
about that<font color="#E5E5E5"> before we push that new</font>

945
00:39:29,030 --> 00:39:31,510
policy

946
00:39:32,330 --> 00:39:36,210
that's kind but these reports look<font color="#E5E5E5"> we've</font>

947
00:39:34,920 --> 00:39:37,800
built a little<font color="#E5E5E5"> web interface but</font>

948
00:39:36,210 --> 00:39:39,480
unfortunately where the focus is kind of

949
00:39:37,800 --> 00:39:43,680
bad or it's<font color="#E5E5E5"> really small text one of the</font>

950
00:39:39,480 --> 00:39:45,060
other pole position was our IP tables

951
00:39:43,680 --> 00:39:46,919
thing I wrote over that Christmas

952
00:39:45,060 --> 00:39:48,120
weekend it collects all these reports

953
00:39:46,920 --> 00:39:51,990
from the boxes that are running<font color="#E5E5E5"> out</font>

954
00:39:48,120 --> 00:39:54,600
there and gives us a<font color="#E5E5E5"> nice interface so</font>

955
00:39:51,990 --> 00:39:56,850
that i can say that if you're running IP

956
00:39:54,600 --> 00:39:59,160
tables and you're running as an LDAP

957
00:39:56,850 --> 00:40:01,620
server let me display all the ldap

958
00:39:59,160 --> 00:40:03,270
servers we know<font color="#CCCCCC"> about at Google and flag</font>

959
00:40:01,620 --> 00:40:05,970
warning<font color="#E5E5E5"> for any of them that for example</font>

960
00:40:03,270 --> 00:40:08,759
has a hash<font color="#CCCCCC"> mismatch a hash mismatch</font>

961
00:40:05,970 --> 00:40:11,160
mismatch means this is the iptables

962
00:40:08,760 --> 00:40:13,080
policy I know should be applied and the

963
00:40:11,160 --> 00:40:14,759
one that's currently<font color="#E5E5E5"> applied generates a</font>

964
00:40:13,080 --> 00:40:17,400
different hash so something's wrong<font color="#E5E5E5"> and</font>

965
00:40:14,760 --> 00:40:19,170
admin<font color="#E5E5E5"> messed things up maybe the policy</font>

966
00:40:17,400 --> 00:40:20,160
was the<font color="#E5E5E5"> policy was unapplied it would</font>

967
00:40:19,170 --> 00:40:22,440
<font color="#CCCCCC">actually give you a warning that the</font>

968
00:40:20,160 --> 00:40:24,509
policies not applied and we can actually

969
00:40:22,440 --> 00:40:26,250
<font color="#E5E5E5">break it down by teams so</font><font color="#CCCCCC"> that each team</font>

970
00:40:24,510 --> 00:40:28,260
can be personally responsible for going

971
00:40:26,250 --> 00:40:30,060
let me<font color="#CCCCCC"> go check all my Kerberos servers</font>

972
00:40:28,260 --> 00:40:33,690
<font color="#E5E5E5">today and they can just integrate it</font>

973
00:40:30,060 --> 00:40:35,430
into their own process policy reader

974
00:40:33,690 --> 00:40:39,030
library is just a way to quickly<font color="#E5E5E5"> go over</font>

975
00:40:35,430 --> 00:40:41,629
it so in summary<font color="#CCCCCC"> real quick no evil do</font>

976
00:40:39,030 --> 00:40:44,160
no evil did a whole google<font color="#E5E5E5"> map right</font>

977
00:40:41,630 --> 00:40:46,050
acl's are prone to human error so the

978
00:40:44,160 --> 00:40:48,299
more you can<font color="#E5E5E5"> get the human out of</font><font color="#CCCCCC"> it the</font>

979
00:40:46,050 --> 00:40:50,790
<font color="#E5E5E5">better we went from a job that used to</font>

980
00:40:48,300 --> 00:40:54,180
take three or four people working<font color="#CCCCCC"> full</font>

981
00:40:50,790 --> 00:40:57,060
<font color="#CCCCCC">time you know for an entire week to</font>

982
00:40:54,180 --> 00:40:58,710
something<font color="#CCCCCC"> that one guy can do in an hour</font>

983
00:40:57,060 --> 00:41:00,840
or<font color="#CCCCCC"> two a week now maintaining all our</font>

984
00:40:58,710 --> 00:41:04,380
ACLs it's done very quickly very easy

985
00:41:00,840 --> 00:41:06,540
huge efficiencies of savings and I don't

986
00:41:04,380 --> 00:41:09,930
think<font color="#CCCCCC"> we've had a single network outage</font>

987
00:41:06,540 --> 00:41:12,600
caused by<font color="#E5E5E5"> a CLS because of typos or</font>

988
00:41:09,930 --> 00:41:14,790
heirs since that time process wise we've

989
00:41:12,600 --> 00:41:21,270
still had some some errors but those

990
00:41:14,790 --> 00:41:23,460
aren't our fault codes been released<font color="#E5E5E5"> to</font>

991
00:41:21,270 --> 00:41:26,000
the public quick description over the

992
00:41:23,460 --> 00:41:29,000
<font color="#E5E5E5">caprica name and</font><font color="#CCCCCC"> bada ba that's it</font>

993
00:41:26,000 --> 00:41:29,000
questions

994
00:41:29,400 --> 00:41:34,289
now okay well thank you

