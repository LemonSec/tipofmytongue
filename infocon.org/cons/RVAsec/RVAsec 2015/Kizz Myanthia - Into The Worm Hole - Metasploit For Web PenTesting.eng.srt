1
00:00:17,929 --> 00:00:26,549
<font color="#E5E5E5">alright so welcome everybody into</font><font color="#CCCCCC"> the</font>

2
00:00:21,929 --> 00:00:30,390
<font color="#E5E5E5">wormhole my name is kids my</font><font color="#CCCCCC"> anthea I've</font>

3
00:00:26,550 --> 00:00:32,910
been<font color="#E5E5E5"> doing</font><font color="#CCCCCC"> this for a long time kind of</font>

4
00:00:30,390 --> 00:00:36,089
background this<font color="#CCCCCC"> is</font><font color="#E5E5E5"> just you know slides</font>

5
00:00:32,910 --> 00:00:38,909
I got to put<font color="#E5E5E5"> in here nobody really cares</font>

6
00:00:36,089 --> 00:00:41,309
so why are we actually here so the

7
00:00:38,909 --> 00:00:43,979
internal into the wormhole talk is all

8
00:00:41,309 --> 00:00:47,309
about<font color="#CCCCCC"> metasploit and how we</font><font color="#E5E5E5"> can actually</font>

9
00:00:43,979 --> 00:00:49,470
<font color="#E5E5E5">leverage it for web hacking I know</font>

10
00:00:47,309 --> 00:00:51,900
probably<font color="#E5E5E5"> ninety nine percent of the</font>

11
00:00:49,470 --> 00:00:54,089
people I talked to are like you're full

12
00:00:51,900 --> 00:00:57,269
of shit<font color="#CCCCCC"> what metasploit it's only for</font>

13
00:00:54,089 --> 00:00:59,400
network side of the house and or a lot

14
00:00:57,269 --> 00:01:02,129
of times you're like Ivan used most

15
00:00:59,400 --> 00:01:06,240
played since like it was written in

16
00:01:02,129 --> 00:01:09,329
Python so this<font color="#E5E5E5"> talk will kind of give</font>

17
00:01:06,240 --> 00:01:12,089
you an<font color="#E5E5E5"> introduction about my what</font>

18
00:01:09,329 --> 00:01:13,289
<font color="#CCCCCC">metasploit is we'll go through</font><font color="#E5E5E5"> and start</font>

19
00:01:12,090 --> 00:01:15,149
<font color="#CCCCCC">talking about</font><font color="#E5E5E5"> kind of what makes it all</font>

20
00:01:13,290 --> 00:01:18,990
up and<font color="#E5E5E5"> then how do I actually apply this</font>

21
00:01:15,149 --> 00:01:22,200
to to our web testing and actually like

22
00:01:18,990 --> 00:01:25,320
get show on browsers and all kinds of

23
00:01:22,200 --> 00:01:27,630
cool<font color="#E5E5E5"> shit like that so we'll also cover</font>

24
00:01:25,320 --> 00:01:31,529
some of the auxiliary how this actually

25
00:01:27,630 --> 00:01:33,720
not only<font color="#E5E5E5"> can</font><font color="#CCCCCC"> you use metasploit to do</font>

26
00:01:31,530 --> 00:01:36,500
the actual exploitation stuff but how

27
00:01:33,720 --> 00:01:39,000
you can actually bolster some of the

28
00:01:36,500 --> 00:01:40,170
steps within the methodology and how it

29
00:01:39,000 --> 00:01:42,630
actually will help you throughout the

30
00:01:40,170 --> 00:01:45,840
process and then we'll look at some<font color="#E5E5E5"> of</font>

31
00:01:42,630 --> 00:01:47,940
<font color="#E5E5E5">the actual third-party apps and the the</font>

32
00:01:45,840 --> 00:01:52,260
modules that leverage<font color="#CCCCCC"> metasploit to make</font>

33
00:01:47,940 --> 00:01:56,009
them<font color="#CCCCCC"> more powerful so first and foremost</font>

34
00:01:52,260 --> 00:01:57,780
kind of like the the old and<font color="#CCCCCC"> where</font>

35
00:01:56,010 --> 00:02:00,630
<font color="#CCCCCC">metasploit really came from so</font>

36
00:01:57,780 --> 00:02:02,549
<font color="#CCCCCC">metasploit was developed by HD</font><font color="#E5E5E5"> more most</font>

37
00:02:00,630 --> 00:02:06,179
you guys if you know metasploit you know

38
00:02:02,549 --> 00:02:09,209
that it's been around since 2003 so

39
00:02:06,180 --> 00:02:11,760
<font color="#CCCCCC">metasploit is one of the older tools</font>

40
00:02:09,209 --> 00:02:17,099
that really have been<font color="#E5E5E5"> used throughout</font>

41
00:02:11,760 --> 00:02:20,670
the ages metasploit then got picked up

42
00:02:17,099 --> 00:02:22,920
and was actually bought by rapid seven

43
00:02:20,670 --> 00:02:24,988
one of the nice things though is that

44
00:02:22,920 --> 00:02:27,418
they didn't kill it by turning it into

45
00:02:24,989 --> 00:02:30,180
just a commercial tool you can buy pro

46
00:02:27,419 --> 00:02:30,840
license but they still left the actual

47
00:02:30,180 --> 00:02:33,269
framework

48
00:02:30,840 --> 00:02:35,459
out there for everybody to use so now

49
00:02:33,269 --> 00:02:36,959
you get the research<font color="#E5E5E5"> and development for</font>

50
00:02:35,459 --> 00:02:38,489
money<font color="#E5E5E5"> and you get the research and</font>

51
00:02:36,959 --> 00:02:41,849
development of the open source community

52
00:02:38,489 --> 00:02:43,590
stuff all built in one place and then

53
00:02:41,849 --> 00:02:45,869
allowing you to<font color="#E5E5E5"> actually dynamically</font>

54
00:02:43,590 --> 00:02:47,940
create that content so by putting all

55
00:02:45,870 --> 00:02:53,220
that together metasploit really kind<font color="#E5E5E5"> of</font>

56
00:02:47,940 --> 00:02:55,769
is the the Swiss Army knife of hacking

57
00:02:53,220 --> 00:02:57,150
for whether it's utilizing that tool to

58
00:02:55,769 --> 00:02:59,910
do the exploitation generating your

59
00:02:57,150 --> 00:03:02,340
shellcode things like that or just using

60
00:02:59,910 --> 00:03:03,720
it and leveraging the power of it to cut

61
00:03:02,340 --> 00:03:05,880
down on<font color="#CCCCCC"> the time with some</font><font color="#E5E5E5"> of the stuff</font>

62
00:03:03,720 --> 00:03:07,680
that you're able to do so a couple of

63
00:03:05,880 --> 00:03:09,090
the versions of métis played out<font color="#E5E5E5"> there</font>

64
00:03:07,680 --> 00:03:11,400
obviously<font color="#CCCCCC"> you have your framework stuff</font>

65
00:03:09,090 --> 00:03:13,560
this is your command line this is your

66
00:03:11,400 --> 00:03:17,459
<font color="#E5E5E5">built in the cali backtrack whatever</font>

67
00:03:13,560 --> 00:03:19,560
version of the various security distros

68
00:03:17,459 --> 00:03:21,450
that you're using then they also the

69
00:03:19,560 --> 00:03:25,500
community tool it's got a really pretty

70
00:03:21,450 --> 00:03:29,069
fuzzy GUI that if you really necessitate

71
00:03:25,500 --> 00:03:31,709
fun web pages to do all this stuff<font color="#E5E5E5"> you</font>

72
00:03:29,069 --> 00:03:35,190
can use that<font color="#E5E5E5"> too and then they've got to</font>

73
00:03:31,709 --> 00:03:37,049
actual paid versions and<font color="#E5E5E5"> I will tell you</font>

74
00:03:35,190 --> 00:03:38,430
right now that for three thousand

75
00:03:37,049 --> 00:03:42,180
dollars if you want to go<font color="#CCCCCC"> and spend</font><font color="#E5E5E5"> 30</font>

76
00:03:38,430 --> 00:03:43,769
grand on<font color="#CCCCCC"> metasploit pro go for it</font><font color="#E5E5E5"> I wish</font>

77
00:03:42,180 --> 00:03:46,920
<font color="#E5E5E5">I had extra money to spend like that but</font>

78
00:03:43,769 --> 00:03:49,980
everything<font color="#CCCCCC"> you can do in pro you</font><font color="#E5E5E5"> can do</font>

79
00:03:46,920 --> 00:03:52,500
in the framework so you can go<font color="#CCCCCC"> through</font>

80
00:03:49,980 --> 00:03:53,849
and<font color="#E5E5E5"> whether it's the the</font><font color="#CCCCCC"> exploit</font><font color="#E5E5E5"> or</font>

81
00:03:52,500 --> 00:03:55,709
whatever the only thing you buy in for

82
00:03:53,849 --> 00:03:57,000
30k is an easy button if<font color="#CCCCCC"> you really want</font>

83
00:03:55,709 --> 00:03:59,730
an easy button<font color="#E5E5E5"> I can</font><font color="#CCCCCC"> sell you one</font><font color="#E5E5E5"> of</font>

84
00:03:57,000 --> 00:04:05,010
those I'll even<font color="#CCCCCC"> give you a deal i'll</font>

85
00:03:59,730 --> 00:04:06,720
only charge a 28 k so what is<font color="#CCCCCC"> metasploit</font>

86
00:04:05,010 --> 00:04:08,250
and kind<font color="#E5E5E5"> of you know what what really</font>

87
00:04:06,720 --> 00:04:10,489
<font color="#E5E5E5">makes up</font><font color="#CCCCCC"> metasploit and why is</font>

88
00:04:08,250 --> 00:04:13,500
<font color="#CCCCCC">metasploit as powerful as it</font><font color="#E5E5E5"> is well</font>

89
00:04:10,489 --> 00:04:15,480
first<font color="#CCCCCC"> metasploit</font><font color="#E5E5E5"> has a lot of different</font>

90
00:04:13,500 --> 00:04:17,220
<font color="#CCCCCC">types of exploits in it you have your</font>

91
00:04:15,480 --> 00:04:19,139
direct exploits which we're all really

92
00:04:17,220 --> 00:04:22,830
familiar<font color="#CCCCCC"> with this is your old school</font>

93
00:04:19,139 --> 00:04:26,580
stuff this is the every training hacker

94
00:04:22,830 --> 00:04:28,590
class you've ever said in MSO 80 67 it

95
00:04:26,580 --> 00:04:30,690
works fantastically and anybody that's

96
00:04:28,590 --> 00:04:32,460
never gotten shell on a machine<font color="#E5E5E5"> you can</font>

97
00:04:30,690 --> 00:04:34,650
get shell on a machine and it's just

98
00:04:32,460 --> 00:04:37,349
magic and you get a big ol smiled and

99
00:04:34,650 --> 00:04:40,500
some stars in your eyes and<font color="#E5E5E5"> oh my</font><font color="#CCCCCC"> god is</font>

100
00:04:37,349 --> 00:04:42,570
actually works and then you also have

101
00:04:40,500 --> 00:04:44,729
things<font color="#E5E5E5"> like passive exploits these are</font>

102
00:04:42,570 --> 00:04:47,159
going to be browser-based exploits these

103
00:04:44,729 --> 00:04:48,599
<font color="#E5E5E5">choir user interaction so just like</font>

104
00:04:47,159 --> 00:04:50,460
you'd have something<font color="#E5E5E5"> like reflective</font>

105
00:04:48,599 --> 00:04:52,949
cross-site scripting somewhere things

106
00:04:50,460 --> 00:04:55,229
like<font color="#E5E5E5"> that there's some exploits that you</font>

107
00:04:52,949 --> 00:04:57,740
can actually<font color="#CCCCCC"> use that for the social</font>

108
00:04:55,229 --> 00:05:02,520
engineering and leveraging the power of

109
00:04:57,740 --> 00:05:05,729
<font color="#CCCCCC">metasploit for so this</font><font color="#E5E5E5"> is what the</font>

110
00:05:02,520 --> 00:05:09,930
pretty graphic unfortunately this screen

111
00:05:05,729 --> 00:05:12,139
kind of sucks but so<font color="#CCCCCC"> metasploit you can</font>

112
00:05:09,930 --> 00:05:15,240
launch this it's built into most of<font color="#E5E5E5"> the</font>

113
00:05:12,139 --> 00:05:17,789
security distros out there<font color="#CCCCCC"> MSF console</font>

114
00:05:15,240 --> 00:05:20,789
and you you get pout you get popped

115
00:05:17,789 --> 00:05:23,520
right into the actual command line super

116
00:05:20,789 --> 00:05:25,680
easy super you know step one is to

117
00:05:23,520 --> 00:05:27,539
actually get it to run right well the

118
00:05:25,680 --> 00:05:29,009
nice thing about nowadays is you<font color="#E5E5E5"> don't</font>

119
00:05:27,539 --> 00:05:30,120
<font color="#E5E5E5">have to compile your headers and you</font>

120
00:05:29,009 --> 00:05:33,089
don't have<font color="#E5E5E5"> to compile all this you</font>

121
00:05:30,120 --> 00:05:35,509
literally type it into<font color="#E5E5E5"> the terminal and</font>

122
00:05:33,089 --> 00:05:37,889
you actually<font color="#CCCCCC"> get metasploit to start up</font>

123
00:05:35,509 --> 00:05:39,899
metasploit right from the command line

124
00:05:37,889 --> 00:05:41,789
you can get your help just<font color="#E5E5E5"> like any</font>

125
00:05:39,899 --> 00:05:44,759
other tool out there and you can run a

126
00:05:41,789 --> 00:05:46,139
lot<font color="#E5E5E5"> of things also outside of actually</font>

127
00:05:44,759 --> 00:05:47,879
loading that whole framework so if

128
00:05:46,139 --> 00:05:49,680
you've<font color="#CCCCCC"> got to do things real quick real</font>

129
00:05:47,879 --> 00:05:51,810
fast and you don't<font color="#CCCCCC"> want</font><font color="#E5E5E5"> to have all</font><font color="#CCCCCC"> of</font>

130
00:05:49,680 --> 00:05:53,969
<font color="#E5E5E5">the bloat that goes into some of the</font>

131
00:05:51,810 --> 00:05:56,430
<font color="#CCCCCC">backend</font><font color="#E5E5E5"> stuff you can do all that just</font>

132
00:05:53,969 --> 00:06:03,300
by running it in a string right off the

133
00:05:56,430 --> 00:06:05,240
the initial load so direct exploits if

134
00:06:03,300 --> 00:06:07,529
you could<font color="#E5E5E5"> actually see this better</font>

135
00:06:05,240 --> 00:06:11,520
there's any way we<font color="#E5E5E5"> can dim like lights</font>

136
00:06:07,529 --> 00:06:13,999
up here no nobody's in here<font color="#E5E5E5"> actually</font>

137
00:06:11,520 --> 00:06:13,998
listening

138
00:06:15,560 --> 00:06:30,010
I don't know push buttons fuck it it's a

139
00:06:22,430 --> 00:06:30,010
hacker conference something's happened

140
00:06:32,440 --> 00:06:42,370
no I just getting spotlights I think

141
00:06:36,680 --> 00:06:42,370
<font color="#E5E5E5">that might be worse the other button</font>

142
00:06:42,850 --> 00:06:50,900
there we go<font color="#E5E5E5"> okay</font><font color="#CCCCCC"> it still looks like</font>

143
00:06:45,830 --> 00:06:52,849
shit<font color="#CCCCCC"> alright so X exploits are going to</font>

144
00:06:50,900 --> 00:06:54,469
be like like<font color="#E5E5E5"> I said before like your ms</font>

145
00:06:52,850 --> 00:06:56,720
08 stuff things that are going to

146
00:06:54,470 --> 00:06:59,389
<font color="#E5E5E5">leverage vulnerabilities and services</font>

147
00:06:56,720 --> 00:07:00,830
leverage vulnerabilities in shares

148
00:06:59,389 --> 00:07:02,680
things that you're going<font color="#E5E5E5"> to</font><font color="#CCCCCC"> use</font>

149
00:07:00,830 --> 00:07:05,810
<font color="#E5E5E5">metasploit to actually go out and touch</font>

150
00:07:02,680 --> 00:07:08,060
right so here we've got like our PS

151
00:07:05,810 --> 00:07:10,820
exact module if you're not<font color="#E5E5E5"> familiar with</font>

152
00:07:08,060 --> 00:07:12,320
this past the hash you know and when<font color="#E5E5E5"> the</font>

153
00:07:10,820 --> 00:07:14,659
windows world it's really nice because

154
00:07:12,320 --> 00:07:16,639
you don't have<font color="#CCCCCC"> to actually crack</font><font color="#E5E5E5"> law</font>

155
00:07:14,660 --> 00:07:20,390
local password files and things like

156
00:07:16,639 --> 00:07:22,370
that look it up later passive exploits

157
00:07:20,390 --> 00:07:24,710
these are things<font color="#E5E5E5"> like your browser</font>

158
00:07:22,370 --> 00:07:26,960
exploits things like the Aurora exploit

159
00:07:24,710 --> 00:07:29,539
which will cover later on you can use

160
00:07:26,960 --> 00:07:32,299
these for generating shallow<font color="#CCCCCC"> Java</font>

161
00:07:29,539 --> 00:07:34,550
exploits and things like that these are

162
00:07:32,300 --> 00:07:36,789
all well these are kind of the bread and

163
00:07:34,550 --> 00:07:40,760
butter of what makes up<font color="#E5E5E5"> metasploit so</font>

164
00:07:36,789 --> 00:07:46,190
one of them here this<font color="#E5E5E5"> this is a internet</font>

165
00:07:40,760 --> 00:07:47,930
explorer exploit it leverages a buffer

166
00:07:46,190 --> 00:07:50,389
overflow in the way that Internet

167
00:07:47,930 --> 00:07:52,430
Explorer handles images so this is<font color="#E5E5E5"> it's</font>

168
00:07:50,389 --> 00:07:56,440
an older exploit but this is just an

169
00:07:52,430 --> 00:08:01,190
example of one so how does this<font color="#E5E5E5"> help me</font>

170
00:07:56,440 --> 00:08:03,919
right you know it sounds cool does this

171
00:08:01,190 --> 00:08:06,080
<font color="#E5E5E5">stuff really work is this actually play</font>

172
00:08:03,919 --> 00:08:07,580
any sort of<font color="#E5E5E5"> partner I'm I just up here</font>

173
00:08:06,080 --> 00:08:09,889
<font color="#E5E5E5">because I like to hear myself talk well</font>

174
00:08:07,580 --> 00:08:11,659
that is true<font color="#CCCCCC"> but you</font><font color="#E5E5E5"> know I'm actually</font>

175
00:08:09,889 --> 00:08:14,090
<font color="#E5E5E5">here to you</font><font color="#CCCCCC"> know talk about some of</font><font color="#E5E5E5"> the</font>

176
00:08:11,660 --> 00:08:17,270
other cool stuff not<font color="#E5E5E5"> you know and I want</font>

177
00:08:14,090 --> 00:08:19,638
<font color="#E5E5E5">to see myself on youtube so</font><font color="#CCCCCC"> all right so</font>

178
00:08:17,270 --> 00:08:22,370
kind of the you know<font color="#E5E5E5"> the framework the</font>

179
00:08:19,639 --> 00:08:25,220
skeleton of what makes up<font color="#CCCCCC"> metasploit is</font>

180
00:08:22,370 --> 00:08:27,470
a couple of different things obviously

181
00:08:25,220 --> 00:08:29,480
<font color="#E5E5E5">first off you have your exploit it's the</font>

182
00:08:27,470 --> 00:08:31,520
it's the framework it's in the name

183
00:08:29,480 --> 00:08:34,400
obviously part<font color="#E5E5E5"> of the utility so</font>

184
00:08:31,520 --> 00:08:37,429
medicine you the exploit itself is built

185
00:08:34,400 --> 00:08:38,959
in but the exploit that you build<font color="#CCCCCC"> that</font>

186
00:08:37,429 --> 00:08:41,299
piece<font color="#CCCCCC"> of code that you're</font><font color="#E5E5E5"> going to use</font>

187
00:08:38,960 --> 00:08:42,800
to exploit<font color="#CCCCCC"> the vulnerability has a lot</font>

188
00:08:41,299 --> 00:08:47,359
of their pieces that are built<font color="#E5E5E5"> into it</font>

189
00:08:42,799 --> 00:08:49,609
so<font color="#CCCCCC"> means get that I just</font><font color="#E5E5E5"> kind of covered</font>

190
00:08:47,360 --> 00:08:51,980
that the next one is<font color="#E5E5E5"> actually</font><font color="#CCCCCC"> the</font>

191
00:08:49,610 --> 00:08:53,780
payload so first you've got your exploit

192
00:08:51,980 --> 00:08:56,510
you've got<font color="#E5E5E5"> whatever is actually going to</font>

193
00:08:53,780 --> 00:08:59,689
break<font color="#CCCCCC"> that vulnerability right this is</font>

194
00:08:56,510 --> 00:09:01,850
that buffer overflow this is that remote

195
00:08:59,690 --> 00:09:04,400
connection that is leveraging a string

196
00:09:01,850 --> 00:09:06,410
or the way that<font color="#CCCCCC"> a system connect next</font>

197
00:09:04,400 --> 00:09:08,750
part is actually<font color="#CCCCCC"> the payload this is how</font>

198
00:09:06,410 --> 00:09:11,750
we get connection this is where all<font color="#CCCCCC"> of</font>

199
00:09:08,750 --> 00:09:13,370
the the magic happens this is your

200
00:09:11,750 --> 00:09:15,710
defining whether you're going<font color="#E5E5E5"> to do a</font>

201
00:09:13,370 --> 00:09:17,180
shell or meterpreter whether you're

202
00:09:15,710 --> 00:09:19,910
<font color="#E5E5E5">going to have it connect back to us via</font>

203
00:09:17,180 --> 00:09:23,060
a reverse connection this is where you

204
00:09:19,910 --> 00:09:26,839
define all of those pieces next part is

205
00:09:23,060 --> 00:09:28,969
actually<font color="#E5E5E5"> that shell code okay so you've</font>

206
00:09:26,840 --> 00:09:30,680
got your exploit you've got the way that

207
00:09:28,970 --> 00:09:32,930
you wanted<font color="#E5E5E5"> to do it and then you've</font><font color="#CCCCCC"> got</font>

208
00:09:30,680 --> 00:09:35,089
the actual code that's generated this is

209
00:09:32,930 --> 00:09:39,069
this is the<font color="#CCCCCC"> actual piece that's uploaded</font>

210
00:09:35,090 --> 00:09:41,960
onto and through that vulnerability

211
00:09:39,070 --> 00:09:44,030
you've also got some<font color="#E5E5E5"> module stuff okay</font>

212
00:09:41,960 --> 00:09:46,430
and these<font color="#E5E5E5"> are either things that you</font>

213
00:09:44,030 --> 00:09:50,060
custom generate these are add-ons that

214
00:09:46,430 --> 00:09:52,910
others in the community create these are

215
00:09:50,060 --> 00:09:55,400
<font color="#E5E5E5">the the add-ons these are the pieces</font>

216
00:09:52,910 --> 00:09:59,350
that leverage<font color="#E5E5E5"> metasploit but aren't</font>

217
00:09:55,400 --> 00:10:03,860
necessarily directly from like the the

218
00:09:59,350 --> 00:10:06,650
the repo or the development of string

219
00:10:03,860 --> 00:10:07,880
itself and then you have the listeners

220
00:10:06,650 --> 00:10:08,870
right if we're going to call out and

221
00:10:07,880 --> 00:10:11,930
we're going to<font color="#E5E5E5"> tell it to do something</font>

222
00:10:08,870 --> 00:10:14,180
we got<font color="#E5E5E5"> to have some way to talk to it so</font>

223
00:10:11,930 --> 00:10:16,040
<font color="#CCCCCC">metasploit has a way of not only going</font>

224
00:10:14,180 --> 00:10:17,989
<font color="#E5E5E5">out there</font><font color="#CCCCCC"> doing the exploitation not</font>

225
00:10:16,040 --> 00:10:19,760
just generating that<font color="#CCCCCC"> shellcode but it</font>

226
00:10:17,990 --> 00:10:22,190
has that other piece where it'll sit

227
00:10:19,760 --> 00:10:24,890
there and listen or do a connection

228
00:10:22,190 --> 00:10:26,810
directly within vine to actually lock in

229
00:10:24,890 --> 00:10:28,939
and allow you to interact in two-way

230
00:10:26,810 --> 00:10:34,550
communication with with whatever system

231
00:10:28,940 --> 00:10:36,650
you're exploiting so exploit or the

232
00:10:34,550 --> 00:10:38,599
auxiliary module specifically have a

233
00:10:36,650 --> 00:10:41,209
number<font color="#E5E5E5"> of</font><font color="#CCCCCC"> different pieces that they</font><font color="#E5E5E5"> can</font>

234
00:10:38,600 --> 00:10:42,529
<font color="#CCCCCC">use and that you can use to bolster your</font>

235
00:10:41,210 --> 00:10:45,050
methodology all right

236
00:10:42,529 --> 00:10:47,209
and<font color="#E5E5E5"> I know that</font><font color="#CCCCCC"> you know methodology at</font>

237
00:10:45,050 --> 00:10:49,370
a hacker talk is kind of like I<font color="#E5E5E5"> don't do</font>

238
00:10:47,209 --> 00:10:53,529
anything like<font color="#E5E5E5"> that I just fly bus you do</font>

239
00:10:49,370 --> 00:10:55,670
my pants<font color="#E5E5E5"> I'm fucking cool you don't well</font>

240
00:10:53,529 --> 00:10:57,529
if you actually break it down and

241
00:10:55,670 --> 00:10:58,910
actually apply that to<font color="#CCCCCC"> the way that</font>

242
00:10:57,529 --> 00:11:01,879
you're going<font color="#E5E5E5"> to go</font><font color="#CCCCCC"> through it makes life</font>

243
00:10:58,910 --> 00:11:03,529
easier it really does so some of the

244
00:11:01,879 --> 00:11:06,170
auxiliary modules allow you to not only

245
00:11:03,529 --> 00:11:07,610
do your information gathering stuff but

246
00:11:06,170 --> 00:11:10,248
you can actually<font color="#E5E5E5"> do like your brute</font>

247
00:11:07,610 --> 00:11:11,660
forcing you can do generate custom ones

248
00:11:10,249 --> 00:11:14,180
and<font color="#E5E5E5"> we'll kind of cover that stuff later</font>

249
00:11:11,660 --> 00:11:16,149
but it allows you to really have that

250
00:11:14,180 --> 00:11:18,439
dynamic control over<font color="#CCCCCC"> metasploit itself</font>

251
00:11:16,149 --> 00:11:20,930
and then you have some of the plugins

252
00:11:18,439 --> 00:11:24,079
and<font color="#E5E5E5"> third-party stuff is these</font><font color="#CCCCCC"> are more</font>

253
00:11:20,930 --> 00:11:26,628
dynamic more robust pieces that leverage

254
00:11:24,079 --> 00:11:28,969
<font color="#CCCCCC">metasploit as a whole</font><font color="#E5E5E5"> so how many people</font>

255
00:11:26,629 --> 00:11:32,870
obviously here have heard of set<font color="#CCCCCC"> social</font>

256
00:11:28,970 --> 00:11:34,730
engineer toolkit awesome so it what it

257
00:11:32,870 --> 00:11:36,470
social engineers toolkit does it allows

258
00:11:34,730 --> 00:11:38,899
you to do all kinds of cool little

259
00:11:36,470 --> 00:11:41,149
social engineering pieces email phishing

260
00:11:38,899 --> 00:11:43,519
all kinds of things but you can leverage

261
00:11:41,149 --> 00:11:45,829
<font color="#CCCCCC">the power of metasploit within that so</font>

262
00:11:43,519 --> 00:11:49,550
you have the<font color="#CCCCCC"> ability to use things like</font>

263
00:11:45,829 --> 00:11:53,420
the meterpreter package to actually have

264
00:11:49,550 --> 00:11:56,120
real good rat control of whatever system

265
00:11:53,420 --> 00:11:59,529
<font color="#CCCCCC">windows systems that you're exploiting</font>

266
00:11:56,120 --> 00:12:02,930
out there and some of the utilities<font color="#CCCCCC"> and</font>

267
00:11:59,529 --> 00:12:06,709
as I had my class yesterday I didn't

268
00:12:02,930 --> 00:12:10,279
even realize it no but it's a sad<font color="#E5E5E5"> sad</font>

269
00:12:06,709 --> 00:12:12,649
day as of<font color="#CCCCCC"> Monday so Matt</font><font color="#E5E5E5"> MSF payload and</font>

270
00:12:10,279 --> 00:12:16,759
MSF and code are officially being phased

271
00:12:12,649 --> 00:12:18,680
out they've got some new hotness MSF

272
00:12:16,759 --> 00:12:21,439
venom that they're bringing in which is

273
00:12:18,680 --> 00:12:24,319
like the Lamborghini we do it all but

274
00:12:21,439 --> 00:12:26,509
I've been writing stuff in<font color="#CCCCCC"> metasploit</font>

275
00:12:24,319 --> 00:12:28,910
for so long then I like<font color="#E5E5E5"> everything that</font>

276
00:12:26,509 --> 00:12:31,970
<font color="#CCCCCC">I do automatically goes to MSF payload</font>

277
00:12:28,910 --> 00:12:33,949
in the code but these are the utilities

278
00:12:31,970 --> 00:12:35,360
that are built in to<font color="#CCCCCC"> metasploit that you</font>

279
00:12:33,949 --> 00:12:37,609
can actually leverage directly from the

280
00:12:35,360 --> 00:12:39,949
terminal to generate your custom<font color="#CCCCCC"> shell</font>

281
00:12:37,610 --> 00:12:42,470
<font color="#CCCCCC">code so you don't actually have to use</font>

282
00:12:39,949 --> 00:12:45,559
<font color="#E5E5E5">the stuff that signatures are already</font>

283
00:12:42,470 --> 00:12:47,660
generated for that companies know<font color="#CCCCCC"> exist</font>

284
00:12:45,559 --> 00:12:49,309
and protect against you can create all

285
00:12:47,660 --> 00:12:53,660
this stuff right<font color="#E5E5E5"> on the fly whenever you</font>

286
00:12:49,309 --> 00:12:55,579
need it how many<font color="#CCCCCC"> people here knew that</font>

287
00:12:53,660 --> 00:12:56,400
<font color="#CCCCCC">metasploit actually was able to do web</font>

288
00:12:55,579 --> 00:13:00,239
applications

289
00:12:56,400 --> 00:13:01,890
I got a couple hands I'm<font color="#CCCCCC"> impressed</font>

290
00:13:00,240 --> 00:13:05,940
that's like the most hands I've ever

291
00:13:01,890 --> 00:13:07,410
seen<font color="#CCCCCC"> in</font><font color="#E5E5E5"> this talk</font><font color="#CCCCCC"> ah w matt is actually</font>

292
00:13:05,940 --> 00:13:09,750
a web app scanner<font color="#E5E5E5"> that's built</font><font color="#CCCCCC"> into</font>

293
00:13:07,410 --> 00:13:12,150
<font color="#CCCCCC">metasploit it allows you to actually</font>

294
00:13:09,750 --> 00:13:15,450
take a look at the application<font color="#CCCCCC"> and it'll</font>

295
00:13:12,150 --> 00:13:17,850
do a scan of any associated exploits to

296
00:13:15,450 --> 00:13:20,430
see whether it's vulnerable or not again

297
00:13:17,850 --> 00:13:22,800
just<font color="#E5E5E5"> the power of</font><font color="#CCCCCC"> metasploit that really</font>

298
00:13:20,430 --> 00:13:25,349
unless you drill down into it a<font color="#E5E5E5"> lot of</font>

299
00:13:22,800 --> 00:13:27,449
<font color="#CCCCCC">people don't even</font><font color="#E5E5E5"> know</font><font color="#CCCCCC"> exists and then</font>

300
00:13:25,350 --> 00:13:30,240
obviously like I said before social

301
00:13:27,450 --> 00:13:34,860
engineers to<font color="#E5E5E5"> okay awesome utility I use</font>

302
00:13:30,240 --> 00:13:39,030
this thing all<font color="#E5E5E5"> the time so next part is</font>

303
00:13:34,860 --> 00:13:40,290
actually<font color="#E5E5E5"> how this all integrates and why</font>

304
00:13:39,030 --> 00:13:43,290
it's important to<font color="#CCCCCC"> actually have the</font>

305
00:13:40,290 --> 00:13:46,650
methodology and why metasploit actually

306
00:13:43,290 --> 00:13:47,939
fits into our methodology so there's

307
00:13:46,650 --> 00:13:49,670
<font color="#E5E5E5">lots of different methodologies out</font>

308
00:13:47,940 --> 00:13:53,460
there there's good reasons for them and

309
00:13:49,670 --> 00:13:55,949
there's batteries and<font color="#CCCCCC"> swaram but really</font>

310
00:13:53,460 --> 00:13:58,470
metasploit<font color="#E5E5E5"> fits into every single little</font>

311
00:13:55,950 --> 00:14:00,510
piece of our methodologies whether it's

312
00:13:58,470 --> 00:14:03,240
information gathering whether it's the

313
00:14:00,510 --> 00:14:04,830
exploitation phase there's<font color="#CCCCCC"> even the</font>

314
00:14:03,240 --> 00:14:07,230
ability to use the database for logging

315
00:14:04,830 --> 00:14:09,510
and reporting they're not awesome

316
00:14:07,230 --> 00:14:13,140
reports unless you pay 30k for the for

317
00:14:09,510 --> 00:14:15,120
the pro version but<font color="#CCCCCC"> um you</font><font color="#E5E5E5"> you get the</font>

318
00:14:13,140 --> 00:14:17,640
<font color="#E5E5E5">ability to keep track of everything</font>

319
00:14:15,120 --> 00:14:19,650
you're doing you get to<font color="#CCCCCC"> go use it and</font>

320
00:14:17,640 --> 00:14:23,160
leverage it in each piece of your

321
00:14:19,650 --> 00:14:25,890
methodology so the first part obviously

322
00:14:23,160 --> 00:14:28,170
is information gathering what you know

323
00:14:25,890 --> 00:14:30,240
the importance why do we do this well

324
00:14:28,170 --> 00:14:31,860
<font color="#CCCCCC">obviously if we don't know what we're</font>

325
00:14:30,240 --> 00:14:33,870
touching or we don't<font color="#E5E5E5"> have that</font>

326
00:14:31,860 --> 00:14:35,340
<font color="#E5E5E5">information about what is actually out</font>

327
00:14:33,870 --> 00:14:36,480
there we're<font color="#CCCCCC"> just going to be kicking</font>

328
00:14:35,340 --> 00:14:38,730
cans and we're going<font color="#E5E5E5"> to be shooting</font>

329
00:14:36,480 --> 00:14:40,740
shotguns at whatever we're looking at

330
00:14:38,730 --> 00:14:43,620
and we're<font color="#E5E5E5"> not going to get real far it's</font>

331
00:14:40,740 --> 00:14:45,360
going to take us forever to do so<font color="#CCCCCC"> you</font>

332
00:14:43,620 --> 00:14:48,350
can actually leverage<font color="#CCCCCC"> metasploit and</font>

333
00:14:45,360 --> 00:14:51,000
<font color="#E5E5E5">nmap to store all that information and</font>

334
00:14:48,350 --> 00:14:52,920
not only just<font color="#E5E5E5"> store the information but</font>

335
00:14:51,000 --> 00:14:55,770
you can actually<font color="#E5E5E5"> query</font><font color="#CCCCCC"> metasploit</font>

336
00:14:52,920 --> 00:14:57,390
against that distort and information to

337
00:14:55,770 --> 00:15:00,140
find<font color="#E5E5E5"> specific exploits that are</font>

338
00:14:57,390 --> 00:15:03,900
associated with whether it's a service a

339
00:15:00,140 --> 00:15:05,340
type of system things like<font color="#E5E5E5"> that and once</font>

340
00:15:03,900 --> 00:15:08,569
again it cuts down the<font color="#E5E5E5"> amount of time</font>

341
00:15:05,340 --> 00:15:11,060
that we have to spend on this stuff

342
00:15:08,570 --> 00:15:13,130
so first part about that<font color="#CCCCCC"> obviously</font><font color="#E5E5E5"> like</font>

343
00:15:11,060 --> 00:15:16,939
I said is we need<font color="#E5E5E5"> to create the DB now</font>

344
00:15:13,130 --> 00:15:20,240
Kelly<font color="#E5E5E5"> has moved over to a corporate</font>

345
00:15:16,940 --> 00:15:21,740
awesome fed sweet distro where we turn

346
00:15:20,240 --> 00:15:24,200
everything off and we're<font color="#E5E5E5"> not you know</font>

347
00:15:21,740 --> 00:15:26,900
where we<font color="#E5E5E5"> want to be cool and want to be</font>

348
00:15:24,200 --> 00:15:28,370
<font color="#CCCCCC">a real Linux version so we shut</font>

349
00:15:26,900 --> 00:15:29,660
everything off<font color="#CCCCCC"> first so the first thing</font>

350
00:15:28,370 --> 00:15:31,220
<font color="#CCCCCC">that you have</font><font color="#E5E5E5"> to do you have to make</font>

351
00:15:29,660 --> 00:15:34,250
sure you actually turn the database back

352
00:15:31,220 --> 00:15:36,860
on so when you do that you<font color="#CCCCCC"> just turn</font>

353
00:15:34,250 --> 00:15:39,680
your<font color="#CCCCCC"> postgres service to start and you</font>

354
00:15:36,860 --> 00:15:42,860
<font color="#CCCCCC">can create</font><font color="#E5E5E5"> your user now you can go</font>

355
00:15:39,680 --> 00:15:45,500
<font color="#CCCCCC">through the the nice little walk through</font>

356
00:15:42,860 --> 00:15:47,420
all these slides are online later too so

357
00:15:45,500 --> 00:15:50,270
you can<font color="#E5E5E5"> download this stuff and fuck</font>

358
00:15:47,420 --> 00:15:51,439
around with it later you create your

359
00:15:50,270 --> 00:15:54,199
user make sure that you have your

360
00:15:51,440 --> 00:15:58,100
connection setup and then you'll<font color="#E5E5E5"> get you</font>

361
00:15:54,200 --> 00:15:59,930
<font color="#E5E5E5">know the happy console that'll</font><font color="#CCCCCC"> bub make</font>

362
00:15:58,100 --> 00:16:01,550
<font color="#CCCCCC">sure</font><font color="#E5E5E5"> that if right before you're going</font>

363
00:15:59,930 --> 00:16:03,380
to actually start executing this stuff

364
00:16:01,550 --> 00:16:05,229
if you want to use this for the login

365
00:16:03,380 --> 00:16:07,310
for the reporting for this for the

366
00:16:05,230 --> 00:16:09,710
recording you have to make<font color="#CCCCCC"> sure that</font>

367
00:16:07,310 --> 00:16:12,319
<font color="#CCCCCC">metasploit framework itself is actually</font>

368
00:16:09,710 --> 00:16:15,230
connected to<font color="#E5E5E5"> the DB now when metasploit</font>

369
00:16:12,320 --> 00:16:17,540
or rapid7 moved<font color="#CCCCCC"> metasploit over to pro</font>

370
00:16:15,230 --> 00:16:18,770
they fubar'd the way the tables are for

371
00:16:17,540 --> 00:16:21,530
framework so you actually<font color="#E5E5E5"> have to</font>

372
00:16:18,770 --> 00:16:24,319
generate your tables and connected first

373
00:16:21,530 --> 00:16:26,600
and yeah so they made it kind<font color="#E5E5E5"> of a pain</font>

374
00:16:24,320 --> 00:16:29,600
in the ass<font color="#CCCCCC"> for us old schoolers but it</font>

375
00:16:26,600 --> 00:16:31,370
<font color="#CCCCCC">it actually works pretty easy you got</font>

376
00:16:29,600 --> 00:16:34,160
your string real right there and it will

377
00:16:31,370 --> 00:16:36,440
recreate your tables for you so it's not

378
00:16:34,160 --> 00:16:38,600
<font color="#CCCCCC">a whole huge pain in</font><font color="#E5E5E5"> the ass but if you</font>

379
00:16:36,440 --> 00:16:40,130
don't know<font color="#CCCCCC"> that off the bat metasploit</font>

380
00:16:38,600 --> 00:16:41,750
will start throwing you errors and

381
00:16:40,130 --> 00:16:47,930
you're<font color="#E5E5E5"> going to be like fuck this that</font>

382
00:16:41,750 --> 00:16:51,650
guy lied so<font color="#E5E5E5"> metasploit and nmap really</font>

383
00:16:47,930 --> 00:16:55,430
kind<font color="#E5E5E5"> of have been built together as like</font>

384
00:16:51,650 --> 00:16:59,329
a cohesive<font color="#CCCCCC"> unit and there's very easy</font>

385
00:16:55,430 --> 00:17:01,729
internal<font color="#CCCCCC"> metasploit witches and commands</font>

386
00:16:59,330 --> 00:17:04,100
that allow you to directly input that

387
00:17:01,730 --> 00:17:06,530
information right into the database so

388
00:17:04,099 --> 00:17:08,780
once you<font color="#CCCCCC"> have MSF console loaded you can</font>

389
00:17:06,530 --> 00:17:10,099
start using the the DB underscore n map

390
00:17:08,780 --> 00:17:11,839
and it will actually store all that

391
00:17:10,099 --> 00:17:13,819
<font color="#E5E5E5">stuff for you you can query it right</font>

392
00:17:11,839 --> 00:17:17,089
from within<font color="#CCCCCC"> metasploit and it'll store</font>

393
00:17:13,819 --> 00:17:19,179
that for reference<font color="#E5E5E5"> to exploits and such</font>

394
00:17:17,089 --> 00:17:21,129
later

395
00:17:19,180 --> 00:17:24,310
metasploit also has lots<font color="#E5E5E5"> of auxiliary</font>

396
00:17:21,130 --> 00:17:27,730
scanners and extra pieces and things

397
00:17:24,310 --> 00:17:29,740
hidden in the repositories so you can do

398
00:17:27,730 --> 00:17:31,480
things<font color="#CCCCCC"> like SMB scanning you can do ftp</font>

399
00:17:29,740 --> 00:17:33,460
scanning you can look<font color="#CCCCCC"> for all kinds</font><font color="#E5E5E5"> of</font>

400
00:17:31,480 --> 00:17:35,940
<font color="#CCCCCC">different specific services and there's</font>

401
00:17:33,460 --> 00:17:38,020
auxiliary modules that are directly<font color="#CCCCCC"> Bay</font>

402
00:17:35,940 --> 00:17:40,270
created within the<font color="#CCCCCC"> metasploit framework</font>

403
00:17:38,020 --> 00:17:41,950
and it will store all<font color="#E5E5E5"> that information</font>

404
00:17:40,270 --> 00:17:44,139
directly in the database as you<font color="#E5E5E5"> run them</font>

405
00:17:41,950 --> 00:17:46,900
so it really<font color="#CCCCCC"> does cut down the amount of</font>

406
00:17:44,140 --> 00:17:51,070
<font color="#E5E5E5">time from information gathering to the</font>

407
00:17:46,900 --> 00:17:54,910
exploitation phase so here's<font color="#CCCCCC"> just a real</font>

408
00:17:51,070 --> 00:17:58,990
quick screen from this would be our web

409
00:17:54,910 --> 00:18:00,910
dev scanner so in the case of websites

410
00:17:58,990 --> 00:18:04,660
out there you can<font color="#CCCCCC"> actually use an</font>

411
00:18:00,910 --> 00:18:06,670
auxiliary module within<font color="#CCCCCC"> metasploit to</font>

412
00:18:04,660 --> 00:18:08,590
specifically go and look look for the

413
00:18:06,670 --> 00:18:11,050
webdav folder why why<font color="#CCCCCC"> would anybody want</font>

414
00:18:08,590 --> 00:18:16,060
<font color="#E5E5E5">to have access</font><font color="#CCCCCC"> or find a webdav folder</font>

415
00:18:11,050 --> 00:18:23,169
on HTTP server I'm actually asking a

416
00:18:16,060 --> 00:18:24,850
question right it's a vulnerable to

417
00:18:23,170 --> 00:18:28,540
upload code might be able<font color="#E5E5E5"> to put some</font>

418
00:18:24,850 --> 00:18:31,120
some kind of page PHP<font color="#E5E5E5"> shell maybe runs</font>

419
00:18:28,540 --> 00:18:33,639
some cool on there it's a spot where you

420
00:18:31,120 --> 00:18:37,469
actually have a vector to get stuff up

421
00:18:33,640 --> 00:18:40,240
there so just<font color="#E5E5E5"> like before any other</font>

422
00:18:37,470 --> 00:18:42,730
module the auxiliary scanner actually

423
00:18:40,240 --> 00:18:44,950
has the<font color="#E5E5E5"> ability to define what you're</font>

424
00:18:42,730 --> 00:18:46,420
what you're going to test what whether

425
00:18:44,950 --> 00:18:49,210
it's a range whether it's a single

426
00:18:46,420 --> 00:18:51,520
<font color="#E5E5E5">server the whole</font><font color="#CCCCCC"> internet however you</font>

427
00:18:49,210 --> 00:18:53,650
<font color="#E5E5E5">want to</font><font color="#CCCCCC"> use it the the auxiliary modules</font>

428
00:18:51,520 --> 00:18:57,190
are built in so that<font color="#E5E5E5"> you can run it</font><font color="#CCCCCC"> real</font>

429
00:18:53,650 --> 00:18:59,710
easy right from<font color="#CCCCCC"> the spot so here once</font>

430
00:18:57,190 --> 00:19:01,750
you have<font color="#CCCCCC"> your setup you type exploit hit</font>

431
00:18:59,710 --> 00:19:04,030
enter and we can see<font color="#CCCCCC"> that on this one</font>

432
00:19:01,750 --> 00:19:06,040
particularly it's an older older is<font color="#E5E5E5"> box</font>

433
00:19:04,030 --> 00:19:13,210
we've got to<font color="#E5E5E5"> web that folder and maybe</font>

434
00:19:06,040 --> 00:19:15,220
we can do something cool with it<font color="#CCCCCC"> so and</font>

435
00:19:13,210 --> 00:19:16,720
<font color="#E5E5E5">then this would be the next piece of</font><font color="#CCCCCC"> it</font>

436
00:19:15,220 --> 00:19:19,240
so<font color="#E5E5E5"> you have your scanner and your</font>

437
00:19:16,720 --> 00:19:21,010
auxiliary the auxiliary will find that

438
00:19:19,240 --> 00:19:23,800
folder and then we've<font color="#CCCCCC"> got our direct</font>

439
00:19:21,010 --> 00:19:26,350
exploit right here where we actually<font color="#E5E5E5"> are</font>

440
00:19:23,800 --> 00:19:30,250
pushing a Metasploit module up within

441
00:19:26,350 --> 00:19:32,870
<font color="#E5E5E5">the specific web dev folder this in</font>

442
00:19:30,250 --> 00:19:35,750
particular<font color="#CCCCCC"> would be an</font><font color="#E5E5E5"> ASP file and</font>

443
00:19:32,870 --> 00:19:38,080
then try<font color="#E5E5E5"> to get that to run up there so</font>

444
00:19:35,750 --> 00:19:42,440
this one will actually generate a

445
00:19:38,080 --> 00:19:45,710
<font color="#CCCCCC">metasploit with a random character dot</font>

446
00:19:42,440 --> 00:19:47,990
<font color="#CCCCCC">ASP file and then once you get that up</font>

447
00:19:45,710 --> 00:19:49,970
there if you<font color="#CCCCCC"> can browse to that it'll</font>

448
00:19:47,990 --> 00:19:53,600
execute it on the server and if

449
00:19:49,970 --> 00:19:56,030
everything<font color="#E5E5E5"> works right we've got real</font>

450
00:19:53,600 --> 00:19:58,370
nice connection right at the on that

451
00:19:56,030 --> 00:20:00,980
remote machine so<font color="#E5E5E5"> you can see where we</font>

452
00:19:58,370 --> 00:20:03,439
put<font color="#CCCCCC"> that up on our web dev folder we've</font>

453
00:20:00,980 --> 00:20:05,540
got<font color="#E5E5E5"> our ASP code and then once it's run</font>

454
00:20:03,440 --> 00:20:09,770
we've got<font color="#E5E5E5"> our listener waiting for that</font>

455
00:20:05,540 --> 00:20:12,230
connection this is<font color="#E5E5E5"> just one of those</font>

456
00:20:09,770 --> 00:20:14,120
<font color="#E5E5E5">instances kind of what you can do once</font>

457
00:20:12,230 --> 00:20:15,710
you have that connection you can see

458
00:20:14,120 --> 00:20:18,820
where we're able to start pulling the

459
00:20:15,710 --> 00:20:21,800
remote machines IP information and such

460
00:20:18,820 --> 00:20:23,480
so the next<font color="#E5E5E5"> part once we have</font><font color="#CCCCCC"> an idea of</font>

461
00:20:21,800 --> 00:20:26,000
what's up<font color="#CCCCCC"> there</font><font color="#E5E5E5"> and once we have an idea</font>

462
00:20:23,480 --> 00:20:28,250
<font color="#CCCCCC">of</font><font color="#E5E5E5"> what we're looking at it's really to</font>

463
00:20:26,000 --> 00:20:32,390
get that more detailed information right

464
00:20:28,250 --> 00:20:35,240
and if<font color="#E5E5E5"> we have specifically information</font>

465
00:20:32,390 --> 00:20:37,130
about a range or a number<font color="#CCCCCC"> of different</font>

466
00:20:35,240 --> 00:20:38,900
machines we want to use some

467
00:20:37,130 --> 00:20:41,150
vulnerability scanners or some kind of

468
00:20:38,900 --> 00:20:43,670
function to look for known exploits that

469
00:20:41,150 --> 00:20:47,270
stuff that's low hanging fruit cuts down

470
00:20:43,670 --> 00:20:49,790
our time again so nmap has the NSC then

471
00:20:47,270 --> 00:20:51,379
nmap scanning engine built in metasploit

472
00:20:49,790 --> 00:20:52,940
oh lets you import from Nessus

473
00:20:51,380 --> 00:20:54,590
<font color="#CCCCCC">metasploit oh lets you import from</font><font color="#E5E5E5"> the</font>

474
00:20:52,940 --> 00:20:59,320
<font color="#CCCCCC">expose it'll let you do a lot of</font>

475
00:20:54,590 --> 00:20:59,320
<font color="#CCCCCC">different imports just directly from the</font>

476
00:21:00,280 --> 00:21:05,809
the vulnerability scanners themselves

477
00:21:02,590 --> 00:21:09,320
pro obviously it has a<font color="#E5E5E5"> little bit more</font>

478
00:21:05,809 --> 00:21:12,610
robustness but<font color="#E5E5E5"> again you can do just</font>

479
00:21:09,320 --> 00:21:17,000
about all that<font color="#CCCCCC"> in the framework itself</font>

480
00:21:12,610 --> 00:21:19,399
so<font color="#CCCCCC"> w map alright i saw that a couple of</font>

481
00:21:17,000 --> 00:21:21,530
<font color="#E5E5E5">you have actually heard of this some</font>

482
00:21:19,400 --> 00:21:25,520
some may not even be aware<font color="#E5E5E5"> that this is</font>

483
00:21:21,530 --> 00:21:26,870
even it was<font color="#E5E5E5"> close to existing so w map</font>

484
00:21:25,520 --> 00:21:29,090
was developed by the<font color="#E5E5E5"> same guys that did</font>

485
00:21:26,870 --> 00:21:32,149
sequel map or same group that did sequel

486
00:21:29,090 --> 00:21:35,050
map and it looks specifically for

487
00:21:32,150 --> 00:21:37,880
version information service information

488
00:21:35,050 --> 00:21:39,649
OS information and then it'll were

489
00:21:37,880 --> 00:21:41,720
iterate through the exploits that would

490
00:21:39,650 --> 00:21:42,980
be associated with that it uses the

491
00:21:41,720 --> 00:21:46,310
database in the<font color="#E5E5E5"> storage of the</font>

492
00:21:42,980 --> 00:21:48,410
<font color="#E5E5E5">information that we gained two actually</font>

493
00:21:46,310 --> 00:21:53,120
figure<font color="#CCCCCC"> out which ones are specific to</font>

494
00:21:48,410 --> 00:21:54,710
that that host to get<font color="#E5E5E5"> this running once</font>

495
00:21:53,120 --> 00:21:57,020
you<font color="#E5E5E5"> have your database connected because</font>

496
00:21:54,710 --> 00:21:59,390
you have to have<font color="#E5E5E5"> that in place you</font>

497
00:21:57,020 --> 00:22:02,600
simply use<font color="#CCCCCC"> the load command</font><font color="#E5E5E5"> double W map</font>

498
00:21:59,390 --> 00:22:06,620
and<font color="#CCCCCC"> it'll kick you right into the the</font>

499
00:22:02,600 --> 00:22:08,179
module itself super super<font color="#CCCCCC"> easy just</font><font color="#E5E5E5"> like</font>

500
00:22:06,620 --> 00:22:10,699
the rest of<font color="#CCCCCC"> metasploit once you're in it</font>

501
00:22:08,180 --> 00:22:12,380
it's got a detailed<font color="#E5E5E5"> help file there's</font>

502
00:22:10,700 --> 00:22:13,640
not a whole<font color="#E5E5E5"> lot</font><font color="#CCCCCC"> of commands which means</font>

503
00:22:12,380 --> 00:22:16,780
<font color="#E5E5E5">that there's not a whole</font><font color="#CCCCCC"> lot you can</font><font color="#E5E5E5"> get</font>

504
00:22:13,640 --> 00:22:19,610
wrong so what makes it pretty easy once

505
00:22:16,780 --> 00:22:24,649
you have your information your specific

506
00:22:19,610 --> 00:22:27,590
URL your IP address<font color="#CCCCCC"> now you can you set</font>

507
00:22:24,650 --> 00:22:29,870
your string excuse me set your string

508
00:22:27,590 --> 00:22:32,419
hit enter and it'll go through and it'll

509
00:22:29,870 --> 00:22:34,340
start looking once it has it err<font color="#E5E5E5"> error</font>

510
00:22:32,420 --> 00:22:36,590
actually<font color="#E5E5E5"> made that connection that that</font>

511
00:22:34,340 --> 00:22:38,149
site is<font color="#CCCCCC"> available it'll give you the</font>

512
00:22:36,590 --> 00:22:40,220
detail for what port the type of

513
00:22:38,150 --> 00:22:43,010
protocol it's using and it stores that

514
00:22:40,220 --> 00:22:45,890
information so the<font color="#E5E5E5"> next step is that we</font>

515
00:22:43,010 --> 00:22:48,050
actually<font color="#E5E5E5"> take the</font><font color="#CCCCCC"> V host which will be</font>

516
00:22:45,890 --> 00:22:50,960
populated down here after<font color="#E5E5E5"> we do our</font>

517
00:22:48,050 --> 00:22:53,090
initial scan and the the URL that we

518
00:22:50,960 --> 00:22:55,610
wanted<font color="#E5E5E5"> to actually look at and we</font>

519
00:22:53,090 --> 00:22:58,610
populate that into the information<font color="#E5E5E5"> or</font>

520
00:22:55,610 --> 00:23:01,070
into<font color="#E5E5E5"> the command line so you</font><font color="#CCCCCC"> can see</font>

521
00:22:58,610 --> 00:23:04,939
where we have that set right here we

522
00:23:01,070 --> 00:23:06,800
define that<font color="#E5E5E5"> our target we can see with</font>

523
00:23:04,940 --> 00:23:08,480
the<font color="#CCCCCC"> elca man we can see exactly what</font>

524
00:23:06,800 --> 00:23:11,090
we're what we're looking at make sure we

525
00:23:08,480 --> 00:23:15,110
have it formatted properly and then<font color="#E5E5E5"> we</font>

526
00:23:11,090 --> 00:23:17,659
can<font color="#CCCCCC"> actually run that with the wmf</font>

527
00:23:15,110 --> 00:23:20,270
underscore run and this will actually

528
00:23:17,660 --> 00:23:22,400
allow us to also<font color="#E5E5E5"> define if we have</font>

529
00:23:20,270 --> 00:23:24,020
specific vulnerabilities or specific

530
00:23:22,400 --> 00:23:25,340
information that we're looking<font color="#CCCCCC"> for and</font>

531
00:23:24,020 --> 00:23:28,520
we don't<font color="#CCCCCC"> want it to iterate through all</font>

532
00:23:25,340 --> 00:23:30,949
of the various versions so what we want

533
00:23:28,520 --> 00:23:33,050
to specifically define so once it goes

534
00:23:30,950 --> 00:23:34,490
through it'll actually start and testing

535
00:23:33,050 --> 00:23:37,190
the web server it will start looking<font color="#E5E5E5"> at</font>

536
00:23:34,490 --> 00:23:39,470
what tour what are those services based

537
00:23:37,190 --> 00:23:43,760
on the auxiliary information<font color="#E5E5E5"> it'll then</font>

538
00:23:39,470 --> 00:23:46,810
iterate through and move over<font color="#E5E5E5"> to doing</font>

539
00:23:43,760 --> 00:23:49,330
the actual scan and once you have that

540
00:23:46,810 --> 00:23:52,070
information you can see exactly which

541
00:23:49,330 --> 00:23:54,199
modules and which exploits it'll iterate

542
00:23:52,070 --> 00:23:57,649
through I had a slide that was slow and

543
00:23:54,200 --> 00:23:59,030
farther down<font color="#E5E5E5"> okay yeah there we go so</font>

544
00:23:57,650 --> 00:24:00,090
and then once it and once it actually

545
00:23:59,030 --> 00:24:02,190
finishes

546
00:24:00,090 --> 00:24:04,649
you can query for what vulnerabilities

547
00:24:02,190 --> 00:24:06,539
were found and when you actually look at

548
00:24:04,650 --> 00:24:08,100
<font color="#CCCCCC">the vulnerabilities that it's been that</font>

549
00:24:06,539 --> 00:24:10,529
it's detected it'll give you the

550
00:24:08,100 --> 00:24:12,418
specific detail so it'll tell you what

551
00:24:10,529 --> 00:24:14,580
folder it's in it'll tell you whether

552
00:24:12,419 --> 00:24:16,740
you know it got the detailed information

553
00:24:14,580 --> 00:24:19,470
that was expecting if there was an error

554
00:24:16,740 --> 00:24:22,049
but this is all<font color="#CCCCCC"> built in this is all</font>

555
00:24:19,470 --> 00:24:24,720
free this is all this<font color="#E5E5E5"> isn't something</font>

556
00:24:22,049 --> 00:24:26,340
you have to go out<font color="#CCCCCC"> and</font><font color="#E5E5E5"> spend you know a</font>

557
00:24:24,720 --> 00:24:28,080
thousand dollars<font color="#E5E5E5"> ten thousand dollars</font>

558
00:24:26,340 --> 00:24:30,860
fifty thousand dollars on some

559
00:24:28,080 --> 00:24:34,408
commercial scanner and you have a higher

560
00:24:30,860 --> 00:24:36,418
likelihood of actual exploitation with

561
00:24:34,409 --> 00:24:38,580
metasploit getting some something<font color="#E5E5E5"> to</font>

562
00:24:36,419 --> 00:24:41,630
work where you're actually on that box

563
00:24:38,580 --> 00:24:46,590
with with metasploit then you do with

564
00:24:41,630 --> 00:24:50,669
probably nine-tenths of the commercial

565
00:24:46,590 --> 00:24:53,039
tools out there so why why auxiliary is

566
00:24:50,669 --> 00:24:56,220
why are these cool is this why<font color="#E5E5E5"> is this</font>

567
00:24:53,039 --> 00:24:58,890
hip wise is fun well because not only

568
00:24:56,220 --> 00:25:00,779
are these<font color="#CCCCCC"> built in but</font><font color="#E5E5E5"> metasploit is</font>

569
00:24:58,890 --> 00:25:02,760
made so that you guys can go out and

570
00:25:00,779 --> 00:25:06,000
<font color="#CCCCCC">create and leverage the power of</font>

571
00:25:02,760 --> 00:25:08,340
<font color="#CCCCCC">metasploit for what you need so there's</font>

572
00:25:06,000 --> 00:25:11,309
some standards there's a specific ways

573
00:25:08,340 --> 00:25:13,830
and dependencies that you have to call

574
00:25:11,309 --> 00:25:16,470
within your code but because it's

575
00:25:13,830 --> 00:25:18,449
written in<font color="#CCCCCC"> Ruby it's fairly easy to pick</font>

576
00:25:16,470 --> 00:25:21,590
up it's fairly<font color="#E5E5E5"> simple to understand and</font>

577
00:25:18,450 --> 00:25:25,020
if you<font color="#E5E5E5"> can do any sort of other</font>

578
00:25:21,590 --> 00:25:26,730
scripting Python Perl Ruby all those

579
00:25:25,020 --> 00:25:30,000
they all kind<font color="#E5E5E5"> of function the same way</font>

580
00:25:26,730 --> 00:25:32,340
so we set our definitions we set our

581
00:25:30,000 --> 00:25:35,700
specifics we detail the exploit and all

582
00:25:32,340 --> 00:25:38,639
the information in our code and we can

583
00:25:35,700 --> 00:25:40,409
do things<font color="#E5E5E5"> like custom scanners so say we</font>

584
00:25:38,640 --> 00:25:42,659
have an application<font color="#CCCCCC"> that we're going</font><font color="#E5E5E5"> to</font>

585
00:25:40,409 --> 00:25:45,210
do an internal test doc uses a different

586
00:25:42,659 --> 00:25:47,429
kind of port than standard you<font color="#E5E5E5"> know the</font>

587
00:25:45,210 --> 00:25:50,580
standard and map<font color="#E5E5E5"> 1000 if you have a</font>

588
00:25:47,429 --> 00:25:53,309
specific developed protocol or something

589
00:25:50,580 --> 00:25:55,408
that<font color="#E5E5E5"> that app is using you cannot test</font>

590
00:25:53,309 --> 00:26:01,889
those types of things by building your

591
00:25:55,409 --> 00:26:06,929
own custom auxiliary so just as you know

592
00:26:01,890 --> 00:26:08,370
building a lego octopus in this case you

593
00:26:06,929 --> 00:26:11,159
and once you start<font color="#E5E5E5"> putting those pieces</font>

594
00:26:08,370 --> 00:26:14,040
together you're able<font color="#CCCCCC"> to build it pretty</font>

595
00:26:11,159 --> 00:26:17,430
quickly<font color="#E5E5E5"> so first thing obviously</font>

596
00:26:14,040 --> 00:26:18,330
quick text editor and you want to make

597
00:26:17,430 --> 00:26:21,960
sure<font color="#E5E5E5"> that you have</font><font color="#CCCCCC"> your header</font>

598
00:26:18,330 --> 00:26:23,850
information the<font color="#E5E5E5"> msf core is there that's</font>

599
00:26:21,960 --> 00:26:26,550
the bread and butter of what makes that

600
00:26:23,850 --> 00:26:29,280
that auxiliary work the and then you

601
00:26:26,550 --> 00:26:31,950
wanted to find specifically what type of

602
00:26:29,280 --> 00:26:33,360
modular<font color="#E5E5E5"> building so the</font><font color="#CCCCCC"> MSF auxiliary it</font>

603
00:26:31,950 --> 00:26:35,550
will start loading some of the

604
00:26:33,360 --> 00:26:37,620
information it'll<font color="#E5E5E5"> call the specific</font>

605
00:26:35,550 --> 00:26:40,500
drivers that are needed things like that

606
00:26:37,620 --> 00:26:42,270
that run in<font color="#E5E5E5"> the back end and</font><font color="#CCCCCC"> metasploit</font>

607
00:26:40,500 --> 00:26:44,010
as the framework makes that possible

608
00:26:42,270 --> 00:26:47,639
without you having to rewrite all that

609
00:26:44,010 --> 00:26:51,030
stuff<font color="#E5E5E5"> so the next</font><font color="#CCCCCC"> part is the way that</font>

610
00:26:47,640 --> 00:26:53,700
it starts almost play modules have their

611
00:26:51,030 --> 00:26:55,920
name they have what version it is they

612
00:26:53,700 --> 00:26:58,650
have the you know the description of

613
00:26:55,920 --> 00:27:00,810
kind of what<font color="#CCCCCC"> this thing does and then</font>

614
00:26:58,650 --> 00:27:03,030
the author author all built<font color="#CCCCCC"> into that</font>

615
00:27:00,810 --> 00:27:06,540
<font color="#E5E5E5">that's that that's that main piece that</font>

616
00:27:03,030 --> 00:27:08,670
when you actually load a module whether

617
00:27:06,540 --> 00:27:12,030
it's an exploit or add auxiliary it's

618
00:27:08,670 --> 00:27:13,890
the first thing people see next part is

619
00:27:12,030 --> 00:27:17,160
the register options this<font color="#E5E5E5"> is where all</font>

620
00:27:13,890 --> 00:27:18,450
of<font color="#E5E5E5"> the details specifically for what</font>

621
00:27:17,160 --> 00:27:21,390
we're<font color="#E5E5E5"> going to go after whether this is</font>

622
00:27:18,450 --> 00:27:23,910
a range of ips whether this is a

623
00:27:21,390 --> 00:27:27,840
specific service this<font color="#CCCCCC"> is where we define</font>

624
00:27:23,910 --> 00:27:30,210
that information and then once we get

625
00:27:27,840 --> 00:27:32,520
the mix in which is the the code that

626
00:27:30,210 --> 00:27:35,400
<font color="#E5E5E5">has already been</font><font color="#CCCCCC"> created again</font>

627
00:27:32,520 --> 00:27:37,830
metasploit is made for speed once we get

628
00:27:35,400 --> 00:27:40,620
that mixing defined and we have that set

629
00:27:37,830 --> 00:27:42,030
we can specifically call the<font color="#CCCCCC"> whether</font>

630
00:27:40,620 --> 00:27:44,219
it's the socket information whether

631
00:27:42,030 --> 00:27:46,560
whether it's the porter information it's

632
00:27:44,220 --> 00:27:49,500
already<font color="#E5E5E5"> been developed so that we don't</font>

633
00:27:46,560 --> 00:27:51,450
have<font color="#E5E5E5"> to rewrite again we don't have to</font>

634
00:27:49,500 --> 00:27:55,440
remake the wheel to make these

635
00:27:51,450 --> 00:27:57,390
connections and then you simply save it

636
00:27:55,440 --> 00:28:00,720
put it<font color="#E5E5E5"> in the auxiliary scanned in this</font>

637
00:27:57,390 --> 00:28:02,760
case this is a quick scanner putting in

638
00:28:00,720 --> 00:28:06,470
the auxiliary folder and you<font color="#CCCCCC"> can see</font>

639
00:28:02,760 --> 00:28:09,870
where there's all kinds of auxiliary

640
00:28:06,470 --> 00:28:12,890
auxiliary modules here if you<font color="#E5E5E5"> actually</font>

641
00:28:09,870 --> 00:28:16,560
browse to the<font color="#CCCCCC"> metasploit location and</font>

642
00:28:12,890 --> 00:28:19,020
see and see what's in there all of those

643
00:28:16,560 --> 00:28:22,940
modules you can<font color="#CCCCCC"> call dynamically from</font>

644
00:28:19,020 --> 00:28:26,550
from the command line so after<font color="#CCCCCC"> all that</font>

645
00:28:22,940 --> 00:28:28,860
it's<font color="#CCCCCC"> a quick understand this is</font>

646
00:28:26,550 --> 00:28:31,740
this is the extent of the code<font color="#E5E5E5"> this is</font>

647
00:28:28,860 --> 00:28:34,530
what makes a quick scanner looking

648
00:28:31,740 --> 00:28:36,390
specifically for so we've got our our

649
00:28:34,530 --> 00:28:39,660
port right here we're<font color="#CCCCCC"> looking</font><font color="#E5E5E5"> for 30</font>

650
00:28:36,390 --> 00:28:41,760
<font color="#E5E5E5">1337 it's going to make that connection</font>

651
00:28:39,660 --> 00:28:45,300
validate whether we can touch it or not

652
00:28:41,760 --> 00:28:48,420
and that's that's the extent of building

653
00:28:45,300 --> 00:28:50,040
one of these models or modules doesn't

654
00:28:48,420 --> 00:28:51,990
take very long and can cut<font color="#CCCCCC"> down the</font>

655
00:28:50,040 --> 00:28:55,710
amount of time that we need or we spent

656
00:28:51,990 --> 00:28:57,480
spend looking for specific things call

657
00:28:55,710 --> 00:28:59,730
it just like any other module in there

658
00:28:57,480 --> 00:29:02,640
and once you're set<font color="#CCCCCC"> up so you can see</font>

659
00:28:59,730 --> 00:29:04,730
<font color="#E5E5E5">where our default information is already</font>

660
00:29:02,640 --> 00:29:07,440
populated we've got our our port

661
00:29:04,730 --> 00:29:09,270
difference between our host and our

662
00:29:07,440 --> 00:29:10,920
hosts when you're developing one of

663
00:29:09,270 --> 00:29:13,110
these modules is the ability to put in a

664
00:29:10,920 --> 00:29:16,260
range so when you're developing this if

665
00:29:13,110 --> 00:29:18,179
you utilize our host without the plural

666
00:29:16,260 --> 00:29:21,390
it's going<font color="#E5E5E5"> to only let</font><font color="#CCCCCC"> you put in one</font>

667
00:29:18,180 --> 00:29:24,180
single target if you utilize the<font color="#CCCCCC"> our</font>

668
00:29:21,390 --> 00:29:25,980
<font color="#CCCCCC">hosts method it will allow you</font><font color="#E5E5E5"> to find a</font>

669
00:29:24,180 --> 00:29:27,810
range now the<font color="#E5E5E5"> thing that's cool</font><font color="#CCCCCC"> about</font>

670
00:29:25,980 --> 00:29:31,530
that is the modules that are already

671
00:29:27,810 --> 00:29:36,450
exist that are locked in to say a single

672
00:29:31,530 --> 00:29:39,450
<font color="#E5E5E5">target you can modify that so like the</font>

673
00:29:36,450 --> 00:29:41,670
sweet PS<font color="#CCCCCC"> exec module that's made to only</font>

674
00:29:39,450 --> 00:29:44,070
<font color="#E5E5E5">touch one unless you pay for the pro</font>

675
00:29:41,670 --> 00:29:46,440
which you can do it against the range

676
00:29:44,070 --> 00:29:49,889
guess what you can do you<font color="#CCCCCC"> can go on</font>

677
00:29:46,440 --> 00:29:52,380
modify the original module set it to

678
00:29:49,890 --> 00:29:55,590
your our host class and you can do<font color="#E5E5E5"> that</font>

679
00:29:52,380 --> 00:29:58,380
across multiple pieces so there<font color="#CCCCCC"> you are</font>

680
00:29:55,590 --> 00:30:01,320
you run it just like anything else you

681
00:29:58,380 --> 00:30:03,990
make sure<font color="#CCCCCC"> that in that case we made a</font>

682
00:30:01,320 --> 00:30:06,450
connection we did a hello<font color="#E5E5E5"> and we got</font><font color="#CCCCCC"> the</font>

683
00:30:03,990 --> 00:30:09,360
banner back from there it really cuts

684
00:30:06,450 --> 00:30:11,490
down that amount<font color="#E5E5E5"> of</font><font color="#CCCCCC"> time that you're</font>

685
00:30:09,360 --> 00:30:14,219
going<font color="#E5E5E5"> to spend not only looking for</font>

686
00:30:11,490 --> 00:30:16,320
specifics or looking for something in

687
00:30:14,220 --> 00:30:18,630
particular but when<font color="#E5E5E5"> you need</font><font color="#CCCCCC"> that one</font>

688
00:30:16,320 --> 00:30:22,590
little thing that that one little

689
00:30:18,630 --> 00:30:24,030
scanner that one little connection a lot

690
00:30:22,590 --> 00:30:27,439
<font color="#CCCCCC">of that has already been</font><font color="#E5E5E5"> developed for</font>

691
00:30:24,030 --> 00:30:30,300
you so taking this and putting this into

692
00:30:27,440 --> 00:30:32,580
web applications how many times<font color="#E5E5E5"> have you</font>

693
00:30:30,300 --> 00:30:35,250
seen a you know a section in a<font color="#E5E5E5"> web app</font>

694
00:30:32,580 --> 00:30:37,080
where you can upload a new avatar you

695
00:30:35,250 --> 00:30:39,800
can<font color="#CCCCCC"> post pictures you might be able to</font>

696
00:30:37,080 --> 00:30:42,860
put up<font color="#E5E5E5"> a</font>

697
00:30:39,800 --> 00:30:45,340
some some kind<font color="#E5E5E5"> of cat picture some kind</font>

698
00:30:42,860 --> 00:30:48,530
of gift things like that up on a website

699
00:30:45,340 --> 00:30:51,139
well in a lot<font color="#CCCCCC"> of cases you know you</font>

700
00:30:48,530 --> 00:30:53,180
wouldn't<font color="#CCCCCC"> you would normal users will</font>

701
00:30:51,140 --> 00:30:56,540
just put that<font color="#E5E5E5"> cat picture up post it to</font>

702
00:30:53,180 --> 00:30:58,400
their site and<font color="#E5E5E5"> call it a day we want to</font>

703
00:30:56,540 --> 00:31:01,909
leverage that<font color="#CCCCCC"> to actually</font><font color="#E5E5E5"> start breaking</font>

704
00:30:58,400 --> 00:31:05,210
shit so at the<font color="#E5E5E5"> MSF payload again and</font>

705
00:31:01,910 --> 00:31:08,060
then MSF<font color="#CCCCCC"> encode allow us to generate our</font>

706
00:31:05,210 --> 00:31:10,190
own custom payloads package it and then

707
00:31:08,060 --> 00:31:14,030
encode it so that we can even bypass AV

708
00:31:10,190 --> 00:31:16,760
so things like MSF payload and then the

709
00:31:14,030 --> 00:31:18,680
new one ms MSF venom will actually allow

710
00:31:16,760 --> 00:31:21,860
us to generate<font color="#CCCCCC"> the stuff and actually</font>

711
00:31:18,680 --> 00:31:24,800
see and edit our shell code to make it

712
00:31:21,860 --> 00:31:27,409
<font color="#E5E5E5">either you</font><font color="#CCCCCC"> know not signature or not</font>

713
00:31:24,800 --> 00:31:29,570
<font color="#E5E5E5">kickoff signatures or specify a</font>

714
00:31:27,410 --> 00:31:33,260
particular way of doing our connection

715
00:31:29,570 --> 00:31:35,480
so in this case my displayed hat and

716
00:31:33,260 --> 00:31:37,879
well when I did this there's 251

717
00:31:35,480 --> 00:31:39,260
different types of payloads that you

718
00:31:37,880 --> 00:31:40,940
could use<font color="#CCCCCC"> this is different types of</font>

719
00:31:39,260 --> 00:31:46,190
systems when we did the class yesterday

720
00:31:40,940 --> 00:31:48,650
it's up<font color="#CCCCCC"> to 360 some payloads that's 360</font>

721
00:31:46,190 --> 00:31:50,960
some different types of connections that

722
00:31:48,650 --> 00:31:52,730
we can we can get this is everything in

723
00:31:50,960 --> 00:31:54,980
this case you<font color="#E5E5E5"> can see where it's a IX</font>

724
00:31:52,730 --> 00:31:56,510
<font color="#CCCCCC">this</font><font color="#E5E5E5"> will be Linux this can be Android</font>

725
00:31:54,980 --> 00:31:58,580
this can be all<font color="#CCCCCC"> kinds of different</font>

726
00:31:56,510 --> 00:32:00,110
<font color="#CCCCCC">systems out there and then different</font>

727
00:31:58,580 --> 00:32:03,679
ways to<font color="#CCCCCC"> do it whether it's a reverse</font>

728
00:32:00,110 --> 00:32:05,990
connection a bind connection a 64-bit

729
00:32:03,680 --> 00:32:09,740
connection<font color="#E5E5E5"> there's all kinds of</font>

730
00:32:05,990 --> 00:32:13,880
different<font color="#CCCCCC"> things</font><font color="#E5E5E5"> in there so this this</font>

731
00:32:09,740 --> 00:32:17,690
string like<font color="#E5E5E5"> I said as of as of Monday if</font>

732
00:32:13,880 --> 00:32:20,990
you update<font color="#E5E5E5"> MSF payload and</font><font color="#CCCCCC"> I</font><font color="#E5E5E5"> MSF encode</font>

733
00:32:17,690 --> 00:32:23,960
will actually be moving away so there

734
00:32:20,990 --> 00:32:26,510
it's it's still a pertinent string but

735
00:32:23,960 --> 00:32:30,620
there's a small a<font color="#E5E5E5"> shorter version of it</font>

736
00:32:26,510 --> 00:32:32,840
with with<font color="#E5E5E5"> the new hotness venom once you</font>

737
00:32:30,620 --> 00:32:34,969
actually<font color="#E5E5E5"> go through any put in you</font>

738
00:32:32,840 --> 00:32:38,480
generate<font color="#CCCCCC"> your payload we have to define</font>

739
00:32:34,970 --> 00:32:40,130
our<font color="#E5E5E5"> specific what payload one you use in</font>

740
00:32:38,480 --> 00:32:42,770
this case<font color="#E5E5E5"> because we're using the</font>

741
00:32:40,130 --> 00:32:45,290
<font color="#E5E5E5">reverse payload we have to define where</font>

742
00:32:42,770 --> 00:32:47,300
it's going<font color="#E5E5E5"> to call back to us once we</font>

743
00:32:45,290 --> 00:32:50,149
have the information specific to where

744
00:32:47,300 --> 00:32:52,730
our attack box it's where the type of

745
00:32:50,150 --> 00:32:53,929
connection we can then use in code to

746
00:32:52,730 --> 00:32:56,240
put that out to us

747
00:32:53,929 --> 00:32:59,600
big files we're<font color="#E5E5E5"> going to use our raw</font>

748
00:32:56,240 --> 00:33:02,389
<font color="#E5E5E5">output put into an ASP file and in this</font>

749
00:32:59,600 --> 00:33:08,350
case by default it's going to use the

750
00:33:02,389 --> 00:33:08,350
<font color="#CCCCCC">shikata encoder to obfuscate that code</font>

751
00:33:08,679 --> 00:33:14,539
once you've got that set up we<font color="#E5E5E5"> start our</font>

752
00:33:10,940 --> 00:33:17,389
listener on the multi handler is just a

753
00:33:14,539 --> 00:33:19,279
generic listener that<font color="#CCCCCC"> metasploit builds</font>

754
00:33:17,389 --> 00:33:22,070
in so that<font color="#CCCCCC"> if anything dials back on</font>

755
00:33:19,279 --> 00:33:25,789
that specific port we're ready to upload

756
00:33:22,070 --> 00:33:28,730
some some shell code so when we use

757
00:33:25,789 --> 00:33:32,330
reverse payloads actually is a staged

758
00:33:28,730 --> 00:33:34,730
exploit so<font color="#E5E5E5"> only part of the shell code</font>

759
00:33:32,330 --> 00:33:36,439
exists in the initial upload the

760
00:33:34,730 --> 00:33:39,919
secondary piece of that is pushed up

761
00:33:36,440 --> 00:33:41,659
once it makes<font color="#E5E5E5"> the connection once we</font>

762
00:33:39,919 --> 00:33:44,809
<font color="#E5E5E5">have that all set up just like any other</font>

763
00:33:41,659 --> 00:33:46,610
module exploit means run we have that

764
00:33:44,809 --> 00:33:49,249
sitting<font color="#E5E5E5"> and waiting so what we can do is</font>

765
00:33:46,610 --> 00:33:51,918
now we've got our<font color="#E5E5E5"> ASP pic generated code</font>

766
00:33:49,249 --> 00:33:56,149
our little<font color="#E5E5E5"> module we have our listener</font>

767
00:33:51,919 --> 00:33:58,159
going we get<font color="#E5E5E5"> that</font><font color="#CCCCCC"> we push that up there</font>

768
00:33:56,149 --> 00:33:59,689
now<font color="#E5E5E5"> obviously this is a test machine</font>

769
00:33:58,159 --> 00:34:01,190
well hopefully<font color="#E5E5E5"> this is a touch machine</font>

770
00:33:59,690 --> 00:34:05,899
if<font color="#E5E5E5"> we were able to just push straight</font>

771
00:34:01,190 --> 00:34:10,399
ASP code up and we can we can see where

772
00:34:05,899 --> 00:34:13,460
the our specific package is sitting once

773
00:34:10,399 --> 00:34:15,739
you click on that within the browser it

774
00:34:13,460 --> 00:34:18,280
activates that on the back we can see

775
00:34:15,739 --> 00:34:21,709
<font color="#E5E5E5">where that directly connects to our</font>

776
00:34:18,280 --> 00:34:24,470
listener it sends that secondary piece

777
00:34:21,710 --> 00:34:27,379
of the exploit and we've got a

778
00:34:24,469 --> 00:34:29,178
connection on that remote machine so

779
00:34:27,379 --> 00:34:32,899
obviously there's there's other things

780
00:34:29,179 --> 00:34:35,480
that<font color="#CCCCCC"> we can do as well right so we want</font>

781
00:34:32,899 --> 00:34:37,759
to<font color="#E5E5E5"> actually build something</font><font color="#CCCCCC"> that we</font>

782
00:34:35,480 --> 00:34:40,790
don't need to upload we want have

783
00:34:37,760 --> 00:34:44,240
everybody that visits our<font color="#CCCCCC"> sweet attack</font>

784
00:34:40,790 --> 00:34:47,270
site will leverage some kind of some

785
00:34:44,239 --> 00:34:49,399
kind of an exploit well metasploit also

786
00:34:47,270 --> 00:34:52,699
has client-side<font color="#CCCCCC"> X attacks so these are</font>

787
00:34:49,399 --> 00:34:54,409
browser<font color="#CCCCCC"> bases taxis are whether it's</font>

788
00:34:52,699 --> 00:34:56,868
<font color="#E5E5E5">Internet Explorer whether it's Firefox</font>

789
00:34:54,409 --> 00:34:59,809
whether it's<font color="#CCCCCC"> chrome these are exploits</font>

790
00:34:56,869 --> 00:35:02,359
that have something broken inside the

791
00:34:59,809 --> 00:35:05,000
way the browser handles on the content

792
00:35:02,359 --> 00:35:07,340
and we're f we can get everyone<font color="#E5E5E5"> in the</font>

793
00:35:05,000 --> 00:35:11,440
world to click on it we<font color="#E5E5E5"> can</font>

794
00:35:07,340 --> 00:35:13,970
on the world so some of the

795
00:35:11,440 --> 00:35:16,250
browser-based exploits use a process

796
00:35:13,970 --> 00:35:20,029
called heap spring how many people<font color="#CCCCCC"> are</font>

797
00:35:16,250 --> 00:35:21,800
familiar with<font color="#E5E5E5"> okay</font><font color="#CCCCCC"> awesome so it's</font>

798
00:35:20,030 --> 00:35:25,010
basically a technique where you're

799
00:35:21,800 --> 00:35:28,400
pushing the boundaries of the heap

800
00:35:25,010 --> 00:35:30,830
memory to overflow<font color="#CCCCCC"> that and then allow</font>

801
00:35:28,400 --> 00:35:34,280
you to execute some code within that

802
00:35:30,830 --> 00:35:37,250
within that overflow space by doing what

803
00:35:34,280 --> 00:35:40,670
<font color="#E5E5E5">we do is we leverage schnapps which in</font>

804
00:35:37,250 --> 00:35:45,020
the end I 86 assembly it would be your

805
00:35:40,670 --> 00:35:46,940
90 or<font color="#E5E5E5"> X / 90 and then we have a string</font>

806
00:35:45,020 --> 00:35:49,610
of those that go into succession so that

807
00:35:46,940 --> 00:35:51,410
makes it<font color="#CCCCCC"> easier for us so when we're</font>

808
00:35:49,610 --> 00:35:54,200
actually looking and generating our

809
00:35:51,410 --> 00:35:55,940
shellcode we have we've<font color="#CCCCCC"> create what's</font>

810
00:35:54,200 --> 00:35:58,730
called our knob slide so you can see

811
00:35:55,940 --> 00:36:01,700
that string and 90s within our code here

812
00:35:58,730 --> 00:36:04,160
well that makes it real easy<font color="#E5E5E5"> for us to</font>

813
00:36:01,700 --> 00:36:07,220
find when we're actually doing the

814
00:36:04,160 --> 00:36:09,259
development for our exploit so within

815
00:36:07,220 --> 00:36:12,350
our debugger we're able to actually see

816
00:36:09,260 --> 00:36:15,650
how that exists so first thing we do is

817
00:36:12,350 --> 00:36:17,810
we generate our payload right we want we

818
00:36:15,650 --> 00:36:20,060
want<font color="#E5E5E5"> our shellcode we need we need that</font>

819
00:36:17,810 --> 00:36:23,720
code to use we need that<font color="#E5E5E5"> extra that</font>

820
00:36:20,060 --> 00:36:26,360
extra piece that that breaking piece and

821
00:36:23,720 --> 00:36:27,980
when you use my display to do it this is

822
00:36:26,360 --> 00:36:30,320
kind of this<font color="#E5E5E5"> is essentially what you'll</font>

823
00:36:27,980 --> 00:36:32,870
<font color="#E5E5E5">get the output this is right here this</font>

824
00:36:30,320 --> 00:36:36,530
<font color="#CCCCCC">is the shellcode this is what we want</font>

825
00:36:32,870 --> 00:36:39,620
the software we want the break we want

826
00:36:36,530 --> 00:36:42,290
the actual vulnerability to allow to be

827
00:36:39,620 --> 00:36:45,350
run because this is what's going<font color="#E5E5E5"> to</font>

828
00:36:42,290 --> 00:36:50,390
initiate our connection so if we go

829
00:36:45,350 --> 00:36:52,610
ahead<font color="#E5E5E5"> and</font><font color="#CCCCCC"> take</font><font color="#E5E5E5"> our unops slide here and</font>

830
00:36:50,390 --> 00:36:55,520
we're<font color="#E5E5E5"> going to obviously remove some of</font>

831
00:36:52,610 --> 00:37:00,140
the characters so we can get<font color="#E5E5E5"> it all all</font>

832
00:36:55,520 --> 00:37:03,230
in one numerical piece if you will so

833
00:37:00,140 --> 00:37:06,430
we're going to take this move all our

834
00:37:03,230 --> 00:37:09,950
<font color="#CCCCCC">X's in</font><font color="#E5E5E5"> our slashes copy and paste our</font>

835
00:37:06,430 --> 00:37:11,299
knob slide right before it and then

836
00:37:09,950 --> 00:37:13,399
we're going to<font color="#E5E5E5"> load our debugger in this</font>

837
00:37:11,300 --> 00:37:15,470
case we're using Internet Explorer so

838
00:37:13,400 --> 00:37:19,760
we're going<font color="#E5E5E5"> to load Internet Explorer</font>

839
00:37:15,470 --> 00:37:20,759
into immunity<font color="#E5E5E5"> or Ida or whichever you</font>

840
00:37:19,760 --> 00:37:23,940
whichever debugger

841
00:37:20,760 --> 00:37:27,480
that you're using x-rays you're going to

842
00:37:23,940 --> 00:37:29,730
paste that<font color="#E5E5E5"> specific code so the</font>

843
00:37:27,480 --> 00:37:32,400
combination of your<font color="#E5E5E5"> shellcode and your</font>

844
00:37:29,730 --> 00:37:34,830
knob slide and do a binary paste inside

845
00:37:32,400 --> 00:37:37,800
of Internet Explorer and when we run

846
00:37:34,830 --> 00:37:42,420
we're looking<font color="#E5E5E5"> for specifically for that</font>

847
00:37:37,800 --> 00:37:45,720
break so if everything works perfectly

848
00:37:42,420 --> 00:37:49,920
once in this case Internet Explorer gets

849
00:37:45,720 --> 00:37:51,689
to our import if that overflow works it

850
00:37:49,920 --> 00:37:54,690
<font color="#E5E5E5">will run the shellcode we'll get our</font>

851
00:37:51,690 --> 00:37:59,160
connection locally and magic we are on

852
00:37:54,690 --> 00:38:02,730
<font color="#E5E5E5">that machine now does</font><font color="#CCCCCC"> this shit actually</font>

853
00:37:59,160 --> 00:38:06,540
<font color="#CCCCCC">work or is this just like movie magic</font>

854
00:38:02,730 --> 00:38:10,230
word it just looks cool<font color="#E5E5E5"> how many people</font>

855
00:38:06,540 --> 00:38:13,820
<font color="#CCCCCC">are familiar with the Aurora attack good</font>

856
00:38:10,230 --> 00:38:16,950
couple<font color="#E5E5E5"> of hands a good number</font><font color="#CCCCCC"> of big</font>

857
00:38:13,820 --> 00:38:19,140
internet companies fell victim to the

858
00:38:16,950 --> 00:38:21,839
Aurora vulnerability what<font color="#E5E5E5"> this does is</font>

859
00:38:19,140 --> 00:38:24,960
this is<font color="#E5E5E5"> though in the wild the same</font>

860
00:38:21,840 --> 00:38:27,720
exact heap overflow that<font color="#E5E5E5"> we just created</font>

861
00:38:24,960 --> 00:38:29,400
and there's a module for it so you don't

862
00:38:27,720 --> 00:38:30,689
<font color="#CCCCCC">have to recreate it and you can do you</font>

863
00:38:29,400 --> 00:38:33,590
<font color="#CCCCCC">can just call</font><font color="#E5E5E5"> us with right within</font>

864
00:38:30,690 --> 00:38:36,470
<font color="#E5E5E5">metasploit so once we leverage the</font>

865
00:38:33,590 --> 00:38:39,120
Metasploit module we load the

866
00:38:36,470 --> 00:38:41,790
vulnerability or the Aurora module

867
00:38:39,120 --> 00:38:43,920
specifically we define our payload

868
00:38:41,790 --> 00:38:46,050
obviously in<font color="#E5E5E5"> this case we want all of</font>

869
00:38:43,920 --> 00:38:47,670
those machines that hit this to call

870
00:38:46,050 --> 00:38:50,370
back to us so we're going to<font color="#E5E5E5"> use a</font>

871
00:38:47,670 --> 00:38:52,500
reverse connection we define our our

872
00:38:50,370 --> 00:38:54,720
local host our listening host and our

873
00:38:52,500 --> 00:38:59,370
listening port and we put it<font color="#CCCCCC"> out</font><font color="#E5E5E5"> on the</font>

874
00:38:54,720 --> 00:39:02,370
<font color="#E5E5E5">internet right so Auroran has long since</font>

875
00:38:59,370 --> 00:39:04,799
been patched it but if it works right

876
00:39:02,370 --> 00:39:06,900
what you do is one of<font color="#E5E5E5"> those browsers out</font>

877
00:39:04,800 --> 00:39:08,820
there loads our page we can<font color="#CCCCCC"> load this</font>

878
00:39:06,900 --> 00:39:12,440
into an iframe we can we can<font color="#E5E5E5"> do</font>

879
00:39:08,820 --> 00:39:12,440
something cool with it we<font color="#CCCCCC"> can have ww</font>

880
00:39:12,950 --> 00:39:20,700
<font color="#E5E5E5">goog le or some other fun domain name</font>

881
00:39:17,970 --> 00:39:22,919
<font color="#CCCCCC">that</font><font color="#E5E5E5"> we put this on if we can get those</font>

882
00:39:20,700 --> 00:39:25,980
browsers to hit it it'll sit there and

883
00:39:22,920 --> 00:39:27,840
spin and the browser looks<font color="#E5E5E5"> like it</font>

884
00:39:25,980 --> 00:39:30,930
stalls if you have some cool you know

885
00:39:27,840 --> 00:39:33,090
<font color="#E5E5E5">dancing cat or a dancing banana banana</font>

886
00:39:30,930 --> 00:39:34,589
or something it they'll sit<font color="#CCCCCC"> then the</font>

887
00:39:33,090 --> 00:39:37,559
user can sit there<font color="#CCCCCC"> and watch that</font>

888
00:39:34,589 --> 00:39:40,078
this runs in the background once that

889
00:39:37,559 --> 00:39:43,319
runs we can see where the memory

890
00:39:40,079 --> 00:39:46,829
corruption vulnerability gets exploited

891
00:39:43,319 --> 00:39:49,799
it pushes our shellcode up and once

892
00:39:46,829 --> 00:39:52,319
again we have a connection this very

893
00:39:49,799 --> 00:39:54,890
vulnerability hit a good number of

894
00:39:52,319 --> 00:39:59,009
people back when when it first came out

895
00:39:54,890 --> 00:40:01,019
so looking at this what what kind of

896
00:39:59,009 --> 00:40:02,640
stuff can we actually do<font color="#CCCCCC"> okay it's</font>

897
00:40:01,019 --> 00:40:05,669
awesome we've got we've got connection

898
00:40:02,640 --> 00:40:08,069
we've got some sort<font color="#E5E5E5"> of exploit that</font>

899
00:40:05,670 --> 00:40:11,640
we've run we feel awesome but what<font color="#E5E5E5"> can</font>

900
00:40:08,069 --> 00:40:12,839
we<font color="#E5E5E5"> actually do with this well in a</font><font color="#CCCCCC"> lot</font>

901
00:40:11,640 --> 00:40:15,420
<font color="#CCCCCC">of case once you have that connection</font>

902
00:40:12,839 --> 00:40:18,719
meterpreter if you are on a windows box

903
00:40:15,420 --> 00:40:20,700
is an awesome remote access tool it is

904
00:40:18,719 --> 00:40:23,160
one<font color="#CCCCCC"> of the most robust remote access</font>

905
00:40:20,700 --> 00:40:25,558
tools that I know of and you can<font color="#CCCCCC"> do lots</font>

906
00:40:23,160 --> 00:40:30,180
of cool<font color="#CCCCCC"> things so you can actually</font>

907
00:40:25,559 --> 00:40:33,450
migrate in and generate new instances of

908
00:40:30,180 --> 00:40:35,609
an<font color="#CCCCCC"> application and leverage the the</font>

909
00:40:33,450 --> 00:40:38,069
service running in this case<font color="#CCCCCC"> you can see</font>

910
00:40:35,609 --> 00:40:40,078
where that fails but meterpreter gives

911
00:40:38,069 --> 00:40:41,849
us another option once we have<font color="#CCCCCC"> that</font>

912
00:40:40,079 --> 00:40:44,700
connection we can actually<font color="#E5E5E5"> see all of</font>

913
00:40:41,849 --> 00:40:46,589
the running processes from<font color="#E5E5E5"> here we can</font>

914
00:40:44,700 --> 00:40:49,348
<font color="#CCCCCC">use the</font><font color="#E5E5E5"> migrate command within</font>

915
00:40:46,589 --> 00:40:52,140
meterpreter to specifically define one

916
00:40:49,349 --> 00:40:54,599
of those processes to hook into once we

917
00:40:52,140 --> 00:40:56,249
hook into<font color="#CCCCCC"> that we're and we're local on</font>

918
00:40:54,599 --> 00:40:58,619
that machine now if the user clicks

919
00:40:56,249 --> 00:41:01,288
closed on the browser you don't have to

920
00:40:58,619 --> 00:41:03,089
worry about losing your session once we

921
00:41:01,289 --> 00:41:05,160
can migrate over to there obviously the

922
00:41:03,089 --> 00:41:07,380
next thing we want<font color="#CCCCCC"> to do is elevate our</font>

923
00:41:05,160 --> 00:41:09,719
privilege well they make it super easy

924
00:41:07,380 --> 00:41:11,460
because now we got catch system and once

925
00:41:09,719 --> 00:41:14,400
you once you run the get system command

926
00:41:11,460 --> 00:41:15,869
you<font color="#E5E5E5"> can elevate your permissions to</font>

927
00:41:14,400 --> 00:41:21,150
system level and we can start doing

928
00:41:15,869 --> 00:41:24,749
<font color="#CCCCCC">other cool shit so just just like you</font>

929
00:41:21,150 --> 00:41:26,759
can do exploits within the browser you

930
00:41:24,749 --> 00:41:30,299
can leverage<font color="#E5E5E5"> things like cross-site</font>

931
00:41:26,759 --> 00:41:32,210
scripting to also get access to to the

932
00:41:30,299 --> 00:41:35,910
remote users cross-site scripting

933
00:41:32,210 --> 00:41:39,630
framework is a an added it's not built

934
00:41:35,910 --> 00:41:41,609
into<font color="#CCCCCC"> metasploit and you</font><font color="#E5E5E5"> actually have to</font>

935
00:41:39,630 --> 00:41:43,499
go on to google code and pull it<font color="#E5E5E5"> down</font>

936
00:41:41,609 --> 00:41:47,460
<font color="#CCCCCC">and import</font><font color="#E5E5E5"> it into the repository or</font>

937
00:41:43,499 --> 00:41:48,419
into<font color="#E5E5E5"> the application once you do that it</font>

938
00:41:47,460 --> 00:41:51,110
makes it real easy

939
00:41:48,420 --> 00:41:57,180
you can call it just like you called the

940
00:41:51,110 --> 00:41:59,700
<font color="#CCCCCC">W map from within and you can load</font><font color="#E5E5E5"> your</font>

941
00:41:57,180 --> 00:42:01,710
specific details for your cross site

942
00:41:59,700 --> 00:42:04,049
scripting plugin once you<font color="#CCCCCC"> have your</font>

943
00:42:01,710 --> 00:42:07,590
cross site scripting<font color="#CCCCCC"> plug-in loaded up</font>

944
00:42:04,050 --> 00:42:12,180
you're<font color="#E5E5E5"> able to actually run metasploit</font>

945
00:42:07,590 --> 00:42:13,640
<font color="#E5E5E5">encode our</font><font color="#CCCCCC"> metasploit shells within the</font>

946
00:42:12,180 --> 00:42:16,230
explore within the<font color="#E5E5E5"> cross-site scripting</font>

947
00:42:13,640 --> 00:42:19,770
vulnerability to again a lot<font color="#E5E5E5"> of</font><font color="#CCCCCC"> you get</font>

948
00:42:16,230 --> 00:42:23,340
<font color="#E5E5E5">access to in on the remote side for to</font>

949
00:42:19,770 --> 00:42:26,990
those those hosts so I'm kind of

950
00:42:23,340 --> 00:42:26,990
speeding through here running at a time

951
00:42:27,950 --> 00:42:34,350
so just<font color="#E5E5E5"> like before we get it set up we</font>

952
00:42:32,250 --> 00:42:36,960
run<font color="#E5E5E5"> ex-boy and we have this sittin on</font>

953
00:42:34,350 --> 00:42:38,970
our server again if you have<font color="#CCCCCC"> a phishing</font>

954
00:42:36,960 --> 00:42:41,160
attack if you have some<font color="#CCCCCC"> kind of a social</font>

955
00:42:38,970 --> 00:42:43,379
engineering attack if you<font color="#E5E5E5"> have a website</font>

956
00:42:41,160 --> 00:42:46,350
out there that you're using<font color="#E5E5E5"> anytime that</font>

957
00:42:43,380 --> 00:42:48,540
<font color="#E5E5E5">you're able to exploit a cross-site</font>

958
00:42:46,350 --> 00:42:50,400
scripting vulnerability within a page

959
00:42:48,540 --> 00:42:53,880
you can leverage<font color="#CCCCCC"> the cross-site</font>

960
00:42:50,400 --> 00:42:56,850
scripting framework to push that remote

961
00:42:53,880 --> 00:43:00,120
access code that shellcode up to that

962
00:42:56,850 --> 00:43:02,210
remote user so if<font color="#E5E5E5"> we take a look we've</font>

963
00:43:00,120 --> 00:43:06,060
got<font color="#E5E5E5"> our page right there we've got our</font>

964
00:43:02,210 --> 00:43:09,410
script text we've got<font color="#E5E5E5"> our local the</font><font color="#CCCCCC"> the</font>

965
00:43:06,060 --> 00:43:11,880
remote host information and then we can

966
00:43:09,410 --> 00:43:14,879
validate that we're actually connected

967
00:43:11,880 --> 00:43:16,890
so right<font color="#E5E5E5"> there you can see where the</font>

968
00:43:14,880 --> 00:43:19,260
exploit ran with an<font color="#E5E5E5"> Internet Explorer</font>

969
00:43:16,890 --> 00:43:20,640
we've got a remote information and then

970
00:43:19,260 --> 00:43:26,730
we're actually going to jump into the

971
00:43:20,640 --> 00:43:28,799
box there's our full details this is

972
00:43:26,730 --> 00:43:33,000
leveraging the remote connection via

973
00:43:28,800 --> 00:43:36,300
cross-site scripting so we can go

974
00:43:33,000 --> 00:43:38,460
further we jump into our exploit it will

975
00:43:36,300 --> 00:43:41,580
automate the process you can<font color="#E5E5E5"> see where</font>

976
00:43:38,460 --> 00:43:43,320
we're doing the<font color="#E5E5E5"> Java applet once that</font>

977
00:43:41,580 --> 00:43:45,779
<font color="#E5E5E5">java applets been loaded with in that</font>

978
00:43:43,320 --> 00:43:47,970
connection<font color="#E5E5E5"> it'll actually pop that up</font>

979
00:43:45,780 --> 00:43:48,990
right on the on the user's machine so

980
00:43:47,970 --> 00:43:50,850
you<font color="#CCCCCC"> have a</font><font color="#E5E5E5"> direct connection with</font><font color="#CCCCCC"> that</font>

981
00:43:48,990 --> 00:43:52,620
browser via the front<font color="#E5E5E5"> of the cross-site</font>

982
00:43:50,850 --> 00:43:55,520
scripting framework if you can get that

983
00:43:52,620 --> 00:43:59,609
<font color="#E5E5E5">in this case if you can get</font><font color="#CCCCCC"> that user to</font>

984
00:43:55,520 --> 00:44:01,230
to click OK it'll it'll upload that on

985
00:43:59,610 --> 00:44:02,270
that she'll and now we can<font color="#E5E5E5"> get</font>

986
00:44:01,230 --> 00:44:05,720
meterpreter connection

987
00:44:02,270 --> 00:44:07,790
that very similar to<font color="#CCCCCC"> the way that we use</font>

988
00:44:05,720 --> 00:44:09,589
cross-site scripting you can also

989
00:44:07,790 --> 00:44:13,340
leverage sequel<font color="#E5E5E5"> maps so say you have</font>

990
00:44:09,590 --> 00:44:17,150
sequel injection on on a host you can

991
00:44:13,340 --> 00:44:20,180
leverage sequel map to inject that arm

992
00:44:17,150 --> 00:44:23,030
that payload within the<font color="#CCCCCC"> the</font>

993
00:44:20,180 --> 00:44:25,160
vulnerability so if you and<font color="#E5E5E5"> not only are</font>

994
00:44:23,030 --> 00:44:29,030
<font color="#CCCCCC">you able to you know remove information</font>

995
00:44:25,160 --> 00:44:30,859
and get information from a host through

996
00:44:29,030 --> 00:44:32,900
<font color="#CCCCCC">a sequel injection but now</font><font color="#E5E5E5"> you're able</font>

997
00:44:30,860 --> 00:44:36,440
to push code up there and you're<font color="#E5E5E5"> able</font><font color="#CCCCCC"> to</font>

998
00:44:32,900 --> 00:44:39,980
push remote remote access code so here

999
00:44:36,440 --> 00:44:41,900
we have an instance where we have a

1000
00:44:39,980 --> 00:44:44,090
sequel injection vulnerability it's

1001
00:44:41,900 --> 00:44:48,980
within post because we've got our data

1002
00:44:44,090 --> 00:44:49,970
string and do we<font color="#CCCCCC"> have</font><font color="#E5E5E5"> cooking no cookie</font>

1003
00:44:48,980 --> 00:44:53,780
on there so we don't<font color="#E5E5E5"> have to be</font>

1004
00:44:49,970 --> 00:44:56,180
authenticated one sequel map goes

1005
00:44:53,780 --> 00:45:00,260
through sequel<font color="#E5E5E5"> oom</font><font color="#CCCCCC"> Apple go and define</font>

1006
00:44:56,180 --> 00:45:03,350
the specific host it'll define whether

1007
00:45:00,260 --> 00:45:05,330
we actually have sequel injection it'll

1008
00:45:03,350 --> 00:45:06,580
do some<font color="#E5E5E5"> other tests and it will run</font>

1009
00:45:05,330 --> 00:45:10,040
through and give us the information

1010
00:45:06,580 --> 00:45:13,190
<font color="#E5E5E5">specific to that hose once we have</font><font color="#CCCCCC"> that</font>

1011
00:45:10,040 --> 00:45:17,750
we<font color="#E5E5E5"> can use the command dash dash 0 SE</font>

1012
00:45:13,190 --> 00:45:20,270
pone within that string and sequel map

1013
00:45:17,750 --> 00:45:22,550
will actually call<font color="#CCCCCC"> metasploit directly</font>

1014
00:45:20,270 --> 00:45:25,120
from the from within it so we define

1015
00:45:22,550 --> 00:45:29,150
that<font color="#E5E5E5"> we we want to</font><font color="#CCCCCC"> use the metasploit</font>

1016
00:45:25,120 --> 00:45:31,040
build in once we<font color="#E5E5E5"> have that piece set up</font>

1017
00:45:29,150 --> 00:45:36,320
we define how we want it to connect back

1018
00:45:31,040 --> 00:45:37,970
to us and<font color="#E5E5E5"> if we can use our default or</font>

1019
00:45:36,320 --> 00:45:41,000
you can define so if you have an at

1020
00:45:37,970 --> 00:45:43,339
<font color="#E5E5E5">statement that</font><font color="#CCCCCC"> you have an added IP that</font>

1021
00:45:41,000 --> 00:45:48,280
<font color="#E5E5E5">you need to use you can define that here</font>

1022
00:45:43,340 --> 00:45:52,430
and then<font color="#E5E5E5"> our your type of connection so</font>

1023
00:45:48,280 --> 00:45:55,160
yes and it will iterate through it alone

1024
00:45:52,430 --> 00:45:56,629
<font color="#CCCCCC">metasploit directly for you define all</font>

1025
00:45:55,160 --> 00:45:59,600
those parameters that we talked about

1026
00:45:56,630 --> 00:46:01,910
earlier and upload that payload so now

1027
00:45:59,600 --> 00:46:03,140
you can use that's that same

1028
00:46:01,910 --> 00:46:05,690
vulnerability where we were just

1029
00:46:03,140 --> 00:46:08,330
removing information to actually get

1030
00:46:05,690 --> 00:46:09,800
remote connection on that<font color="#E5E5E5"> host so once</font>

1031
00:46:08,330 --> 00:46:12,080
you're at once you're on<font color="#E5E5E5"> the host you</font>

1032
00:46:09,800 --> 00:46:13,900
can just like anything else you've<font color="#CCCCCC"> got</font>

1033
00:46:12,080 --> 00:46:19,210
full access<font color="#E5E5E5"> to</font>

1034
00:46:13,900 --> 00:46:21,040
to the into the details there once on

1035
00:46:19,210 --> 00:46:22,660
that metasploit also gives<font color="#E5E5E5"> you the</font>

1036
00:46:21,040 --> 00:46:25,390
ability to<font color="#E5E5E5"> do what's called pivoting and</font>

1037
00:46:22,660 --> 00:46:27,160
that's<font color="#E5E5E5"> just like what it sounds once you</font>

1038
00:46:25,390 --> 00:46:29,650
<font color="#CCCCCC">have access to a machine on the</font><font color="#E5E5E5"> back end</font>

1039
00:46:27,160 --> 00:46:32,620
you can utilize that back end shell

1040
00:46:29,650 --> 00:46:33,850
connection if meterpreter again if you

1041
00:46:32,620 --> 00:46:36,670
can get<font color="#CCCCCC"> that in</font><font color="#E5E5E5"> this kind of the most</font>

1042
00:46:33,850 --> 00:46:40,480
robust version of it but<font color="#CCCCCC"> it'll</font><font color="#E5E5E5"> allow us</font>

1043
00:46:36,670 --> 00:46:43,810
<font color="#E5E5E5">to send all</font><font color="#CCCCCC"> of our scanner stuff and all</font>

1044
00:46:40,480 --> 00:46:46,510
of our information gathering utilities

1045
00:46:43,810 --> 00:46:48,640
through that exploit and machine back

1046
00:46:46,510 --> 00:46:50,650
into the network<font color="#E5E5E5"> and then get all the</font>

1047
00:46:48,640 --> 00:46:53,490
information back out now<font color="#CCCCCC"> metasploit pro</font>

1048
00:46:50,650 --> 00:46:55,660
again they<font color="#CCCCCC"> do have</font><font color="#E5E5E5"> a layer to VPN pivot</font>

1049
00:46:53,490 --> 00:46:58,660
<font color="#CCCCCC">that allows you</font><font color="#E5E5E5"> to do some other stuff</font>

1050
00:46:55,660 --> 00:47:00,940
but the proxy pivoting is super stupid

1051
00:46:58,660 --> 00:47:03,009
easy to get set up so once we<font color="#CCCCCC"> actually</font>

1052
00:47:00,940 --> 00:47:05,440
have our connection<font color="#CCCCCC"> to that back-end</font>

1053
00:47:03,010 --> 00:47:08,290
machine we can<font color="#CCCCCC"> use the route statement</font>

1054
00:47:05,440 --> 00:47:11,290
to see what other IP spaces that that

1055
00:47:08,290 --> 00:47:14,110
machine can touch now in this<font color="#E5E5E5"> case we</font>

1056
00:47:11,290 --> 00:47:16,900
know obviously 192 168 is probably our

1057
00:47:14,110 --> 00:47:20,290
local land but we also have<font color="#CCCCCC"> a 10 dot</font>

1058
00:47:16,900 --> 00:47:23,650
space so that might<font color="#CCCCCC"> be of interest what</font>

1059
00:47:20,290 --> 00:47:26,950
we can do there is we can specifically

1060
00:47:23,650 --> 00:47:29,590
look and add that to our local routing

1061
00:47:26,950 --> 00:47:32,279
table once we have<font color="#CCCCCC"> that loaded into our</font>

1062
00:47:29,590 --> 00:47:35,680
route table we can<font color="#CCCCCC"> then start passing</font>

1063
00:47:32,280 --> 00:47:37,840
exploits and utilizing built-in scanners

1064
00:47:35,680 --> 00:47:39,549
to start<font color="#E5E5E5"> doing exploitation or</font>

1065
00:47:37,840 --> 00:47:44,590
information gathering on other machines

1066
00:47:39,550 --> 00:47:46,300
inside that<font color="#CCCCCC"> network here we're going</font><font color="#E5E5E5"> to</font>

1067
00:47:44,590 --> 00:47:49,000
do quick scan and looking for

1068
00:47:46,300 --> 00:47:51,100
specifically<font color="#CCCCCC"> Windows machines within the</font>

1069
00:47:49,000 --> 00:47:53,580
ton space that we had found you can see

1070
00:47:51,100 --> 00:47:57,029
where we found 20 or found one of them

1071
00:47:53,580 --> 00:48:01,630
now once we<font color="#CCCCCC"> have that information I'll</font>

1072
00:47:57,030 --> 00:48:03,640
here we're using our<font color="#CCCCCC"> MS o 8.o</font><font color="#E5E5E5"> 67 bility</font>

1073
00:48:01,630 --> 00:48:06,250
and we're going to<font color="#E5E5E5"> try to get access to</font>

1074
00:48:03,640 --> 00:48:10,620
that<font color="#E5E5E5"> secondary machine through our</font>

1075
00:48:06,250 --> 00:48:13,000
initial exploitation<font color="#CCCCCC"> Ischl pivot point</font>

1076
00:48:10,620 --> 00:48:15,850
once we<font color="#CCCCCC"> actually run this</font><font color="#E5E5E5"> just like any</font>

1077
00:48:13,000 --> 00:48:18,010
other module if everything has been

1078
00:48:15,850 --> 00:48:20,980
successful we can get access<font color="#E5E5E5"> to</font><font color="#CCCCCC"> that</font>

1079
00:48:18,010 --> 00:48:23,950
secondary machine so this<font color="#CCCCCC"> is a 10 dot</font>

1080
00:48:20,980 --> 00:48:26,030
machine after we've already done either

1081
00:48:23,950 --> 00:48:28,850
a browser exploit or

1082
00:48:26,030 --> 00:48:31,840
a payload exploit that we're touching

1083
00:48:28,850 --> 00:48:34,580
now now we have access to<font color="#CCCCCC"> that next step</font>

1084
00:48:31,840 --> 00:48:36,830
once we're on there we could also do

1085
00:48:34,580 --> 00:48:40,520
something<font color="#E5E5E5"> like utilizing the meterpreter</font>

1086
00:48:36,830 --> 00:48:43,400
function of hash dump to grab all<font color="#CCCCCC"> of the</font>

1087
00:48:40,520 --> 00:48:45,230
<font color="#E5E5E5">local Sam hashes well the nice thing</font>

1088
00:48:43,400 --> 00:48:48,580
about that is that we also have the PS

1089
00:48:45,230 --> 00:48:52,060
exact module built into<font color="#E5E5E5"> metasploit and</font>

1090
00:48:48,580 --> 00:48:54,080
when you're making a that SMB connection

1091
00:48:52,060 --> 00:48:57,320
<font color="#E5E5E5">Microsoft's not dumb enough to send that</font>

1092
00:48:54,080 --> 00:49:01,910
<font color="#E5E5E5">in clear text are they know right what</font>

1093
00:48:57,320 --> 00:49:05,630
<font color="#E5E5E5">do they send anybody they send the hash</font>

1094
00:49:01,910 --> 00:49:08,029
right so if we nicely provide our

1095
00:49:05,630 --> 00:49:10,400
<font color="#CCCCCC">username</font><font color="#E5E5E5"> and</font><font color="#CCCCCC"> that hash</font><font color="#E5E5E5"> that we just dump</font>

1096
00:49:08,030 --> 00:49:13,430
without cracking it and send that<font color="#CCCCCC"> over</font>

1097
00:49:10,400 --> 00:49:15,260
in the expected format guess what we're

1098
00:49:13,430 --> 00:49:16,310
going to<font color="#E5E5E5"> be able to do we're going to be</font>

1099
00:49:15,260 --> 00:49:17,480
<font color="#CCCCCC">able to connect to all those other</font>

1100
00:49:16,310 --> 00:49:23,540
machines without having to do any

1101
00:49:17,480 --> 00:49:25,280
cracking all right so real quick there

1102
00:49:23,540 --> 00:49:27,500
you go send<font color="#E5E5E5"> that over and then you can</font>

1103
00:49:25,280 --> 00:49:30,200
actually<font color="#CCCCCC"> do connections there I have</font>

1104
00:49:27,500 --> 00:49:33,800
three<font color="#E5E5E5"> like three more slides and then I</font>

1105
00:49:30,200 --> 00:49:35,509
will shut the fuck up so once we get

1106
00:49:33,800 --> 00:49:37,160
that inside the<font color="#E5E5E5"> next thing that we want</font>

1107
00:49:35,510 --> 00:49:39,050
to do<font color="#CCCCCC"> obviously it's all cool it's all</font>

1108
00:49:37,160 --> 00:49:41,450
well to be able<font color="#CCCCCC"> to get</font><font color="#E5E5E5"> local</font>

1109
00:49:39,050 --> 00:49:42,710
administrator access but where's where's

1110
00:49:41,450 --> 00:49:44,210
the juicy stuff where's the stuff we

1111
00:49:42,710 --> 00:49:46,880
really want<font color="#E5E5E5"> to touch that's on the</font>

1112
00:49:44,210 --> 00:49:49,460
domain<font color="#E5E5E5"> right well we have some we have</font>

1113
00:49:46,880 --> 00:49:51,770
an answer<font color="#CCCCCC"> for that too meterpreter has a</font>

1114
00:49:49,460 --> 00:49:53,900
module called incognito if you<font color="#E5E5E5"> haven't</font>

1115
00:49:51,770 --> 00:49:56,120
used incognito heard of incognito is

1116
00:49:53,900 --> 00:49:58,610
awesome it's it's a whole lot<font color="#CCCCCC"> of fun</font>

1117
00:49:56,120 --> 00:50:00,410
those machines that we've touched if

1118
00:49:58,610 --> 00:50:03,590
they've got people logged<font color="#CCCCCC"> onto them like</font>

1119
00:50:00,410 --> 00:50:05,870
most machines and most networks do if

1120
00:50:03,590 --> 00:50:07,610
they're connected<font color="#CCCCCC"> to</font><font color="#E5E5E5"> the domain we can</font>

1121
00:50:05,870 --> 00:50:10,520
specifically see those sessions in<font color="#CCCCCC"> the</font>

1122
00:50:07,610 --> 00:50:11,960
domain tokens in particular here you can

1123
00:50:10,520 --> 00:50:14,150
see we have an administrator that's

1124
00:50:11,960 --> 00:50:15,980
logged on well if we have<font color="#E5E5E5"> that</font>

1125
00:50:14,150 --> 00:50:18,680
administrator that's logged on and we

1126
00:50:15,980 --> 00:50:20,450
use incognito we can impersonate that

1127
00:50:18,680 --> 00:50:23,029
token and we can use<font color="#CCCCCC"> metasploit to</font>

1128
00:50:20,450 --> 00:50:26,660
actually jump into that session execute

1129
00:50:23,030 --> 00:50:28,400
all of<font color="#E5E5E5"> our commands as that user and do</font>

1130
00:50:26,660 --> 00:50:31,279
some other<font color="#E5E5E5"> cool things so here if we use</font>

1131
00:50:28,400 --> 00:50:34,240
our execute our command a<font color="#CCCCCC"> DXE we</font><font color="#E5E5E5"> can</font>

1132
00:50:31,280 --> 00:50:38,150
jump right into the into the local

1133
00:50:34,240 --> 00:50:41,240
terminal on that machine and we

1134
00:50:38,150 --> 00:50:43,910
can do some other fun things we can

1135
00:50:41,240 --> 00:50:47,229
start actually querying the domain

1136
00:50:43,910 --> 00:50:49,759
controller as that admin to see what

1137
00:50:47,230 --> 00:50:51,829
users are in the net groups issue net

1138
00:50:49,760 --> 00:50:53,510
commands and if we can issue net

1139
00:50:51,829 --> 00:50:56,299
commands well we can use in that

1140
00:50:53,510 --> 00:50:58,940
commands so now we could actually issue

1141
00:50:56,299 --> 00:51:02,690
a net user<font color="#E5E5E5"> add add that user to the</font>

1142
00:50:58,940 --> 00:51:04,549
domain as that domain administrator so

1143
00:51:02,690 --> 00:51:06,799
if you have logging or if you have

1144
00:51:04,549 --> 00:51:09,980
things that<font color="#E5E5E5"> are in place you're not</font>

1145
00:51:06,799 --> 00:51:13,038
going to have have some outside

1146
00:51:09,980 --> 00:51:14,510
connection or some non elevated user

1147
00:51:13,039 --> 00:51:17,089
creating that you're actually going<font color="#E5E5E5"> to</font>

1148
00:51:14,510 --> 00:51:24,140
have that created<font color="#CCCCCC"> by the system</font><font color="#E5E5E5"> and made</font>

1149
00:51:17,089 --> 00:51:26,299
it administrator I know so metasploit is

1150
00:51:24,140 --> 00:51:28,308
the power the whole thing is is you can

1151
00:51:26,299 --> 00:51:30,079
do custom everything<font color="#CCCCCC"> and if you</font><font color="#E5E5E5"> can do</font>

1152
00:51:28,309 --> 00:51:34,880
custom<font color="#CCCCCC"> everything you can do a lot</font><font color="#E5E5E5"> of</font>

1153
00:51:30,079 --> 00:51:37,609
stuff as far as the<font color="#CCCCCC"> metasploit in' and</font>

1154
00:51:34,880 --> 00:51:40,400
web apps so there's all the links the

1155
00:51:37,609 --> 00:51:41,630
slide deck on the<font color="#E5E5E5"> bottom there you guys</font>

1156
00:51:40,400 --> 00:51:43,910
can download and play with all<font color="#E5E5E5"> this</font>

1157
00:51:41,630 --> 00:51:45,319
stuff I promise most of this shit

1158
00:51:43,910 --> 00:51:48,890
actually works and I'm not<font color="#E5E5E5"> just up here</font>

1159
00:51:45,319 --> 00:51:52,750
bullshit so there<font color="#E5E5E5"> you go that's that's</font>

1160
00:51:48,890 --> 00:51:52,750
my talk enough<font color="#E5E5E5"> I'm shutting the fuck up</font>

