1
00:00:25,520 --> 00:00:30,520
how are you guys doing you enjoyed the

2
00:00:28,130 --> 00:00:32,689
week it's been been awesome for me I

3
00:00:30,520 --> 00:00:34,550
grew up in Virginia I live out in

4
00:00:32,689 --> 00:00:38,390
Portland Oregon now so it's really nice

5
00:00:34,550 --> 00:00:40,040
to be back and it's been a interesting

6
00:00:38,390 --> 00:00:42,739
couple of days I've really enjoyed the

7
00:00:40,040 --> 00:00:43,910
sessions I hope you have as well just a

8
00:00:42,739 --> 00:00:47,750
little bit about my journey I started

9
00:00:43,910 --> 00:00:51,440
off as a computer scientist who went to

10
00:00:47,750 --> 00:00:53,600
UVA and then for many many years I

11
00:00:51,440 --> 00:00:56,989
developed software for airplanes so

12
00:00:53,600 --> 00:00:59,720
avionics software and quite a bit has

13
00:00:56,989 --> 00:01:01,790
changed since those days but one of the

14
00:00:59,720 --> 00:01:03,619
things that I remember very vividly is

15
00:01:01,790 --> 00:01:06,170
that one of the largest projects I

16
00:01:03,619 --> 00:01:07,940
worked on was the collision avoidance

17
00:01:06,170 --> 00:01:09,500
system so if you fly a commercial

18
00:01:07,940 --> 00:01:11,390
airliner today you're gonna be flying

19
00:01:09,500 --> 00:01:14,060
with this equipment in the aircraft and

20
00:01:11,390 --> 00:01:16,580
basically what it does is communicates

21
00:01:14,060 --> 00:01:18,320
with other aircraft in the region and it

22
00:01:16,580 --> 00:01:20,900
ensures that no one crashes into each

23
00:01:18,320 --> 00:01:22,699
other a bit air so as a software

24
00:01:20,900 --> 00:01:24,950
developer you know of course it was

25
00:01:22,700 --> 00:01:27,020
buggy in the early days we didn't trust

26
00:01:24,950 --> 00:01:29,509
it especially the software developers to

27
00:01:27,020 --> 00:01:30,350
trust it it would basically it works

28
00:01:29,509 --> 00:01:32,240
with the radar

29
00:01:30,350 --> 00:01:33,500
displaying in the cockpit and it will

30
00:01:32,240 --> 00:01:36,380
show you all the airplanes in the

31
00:01:33,500 --> 00:01:38,329
vicinity and if it's predicting that a

32
00:01:36,380 --> 00:01:39,619
couple are gonna crack or come close to

33
00:01:38,329 --> 00:01:42,529
crash and then we'll issue a warning

34
00:01:39,619 --> 00:01:44,539
so I remember our very first set of

35
00:01:42,530 --> 00:01:46,280
flight tests and of course nothing went

36
00:01:44,539 --> 00:01:47,689
right you know we had aircraft flying

37
00:01:46,280 --> 00:01:49,880
towards each other I was in one aircraft

38
00:01:47,689 --> 00:01:52,369
other developers were in the other and

39
00:01:49,880 --> 00:01:54,589
it was telling us to climb and telling

40
00:01:52,369 --> 00:01:56,539
the other to climb and you know it was a

41
00:01:54,590 --> 00:01:58,310
big disaster I mean not not a physical

42
00:01:56,539 --> 00:02:00,409
disaster but from a software testing

43
00:01:58,310 --> 00:02:03,679
standpoint so you know the testing went

44
00:02:00,409 --> 00:02:04,759
on for months and months and I just

45
00:02:03,679 --> 00:02:05,929
didn't have much confidence in the

46
00:02:04,759 --> 00:02:07,969
system and I you know that might be

47
00:02:05,929 --> 00:02:10,039
because I was contributing a lot of code

48
00:02:07,969 --> 00:02:11,510
but eventually we got to the point where

49
00:02:10,038 --> 00:02:13,510
we were doing some final flight tests

50
00:02:11,510 --> 00:02:15,799
and we had to go out to the LA basin

51
00:02:13,510 --> 00:02:19,190
because that's the heaviest air attract

52
00:02:15,800 --> 00:02:20,420
air traffic density in the world and I

53
00:02:19,190 --> 00:02:22,760
remember the first time we went up in

54
00:02:20,420 --> 00:02:25,130
the Arab we had her test equipment on

55
00:02:22,760 --> 00:02:27,170
the aircraft and you know we're kind of

56
00:02:25,130 --> 00:02:28,910
nervous because that this was one of the

57
00:02:27,170 --> 00:02:33,890
final sets of tests we needed to do to

58
00:02:28,910 --> 00:02:36,380
get certified by the FAA and for the

59
00:02:33,890 --> 00:02:37,579
first hour our traffic control knew what

60
00:02:36,380 --> 00:02:38,460
we were doing so they would give us

61
00:02:37,580 --> 00:02:41,610
warning so they would

62
00:02:38,460 --> 00:02:44,010
oK you've got a plane 200 feet below you

63
00:02:41,610 --> 00:02:46,440
to the east or playing you a 500 feet

64
00:02:44,010 --> 00:02:48,239
above you to the west and our equipment

65
00:02:46,440 --> 00:02:49,859
was saying like the opposite so we're

66
00:02:48,240 --> 00:02:51,030
going to shoot you know this you know

67
00:02:49,860 --> 00:02:53,760
this is supposed to be our final test

68
00:02:51,030 --> 00:02:55,680
and we just didn't trust it well after 2

69
00:02:53,760 --> 00:02:57,840
days of testing what we realized is that

70
00:02:55,680 --> 00:02:59,730
it was air traffic control that was

71
00:02:57,840 --> 00:03:02,400
wrong all the time and it was our

72
00:02:59,730 --> 00:03:04,920
equipment that was correct and that's

73
00:03:02,400 --> 00:03:07,440
when I realized I trust this software

74
00:03:04,920 --> 00:03:09,390
and for that you know the last 25 years

75
00:03:07,440 --> 00:03:11,550
I've trusted that software every time

76
00:03:09,390 --> 00:03:13,589
I've climbed the board an airplane and

77
00:03:11,550 --> 00:03:16,140
it's interesting so you know I come from

78
00:03:13,590 --> 00:03:18,450
a software development background where

79
00:03:16,140 --> 00:03:23,190
Trust of software is extremely important

80
00:03:18,450 --> 00:03:26,820
we kind of move into the 2019 era and

81
00:03:23,190 --> 00:03:29,010
software is really different and there

82
00:03:26,820 --> 00:03:29,930
is a aspect of security around software

83
00:03:29,010 --> 00:03:32,760
that I think a lot of organizations

84
00:03:29,930 --> 00:03:35,640
ignore and that's code signing that's

85
00:03:32,760 --> 00:03:38,579
what I'm gonna talk about today and I'm

86
00:03:35,640 --> 00:03:40,649
interested before I get started how many

87
00:03:38,580 --> 00:03:41,940
of you work in an organization where the

88
00:03:40,650 --> 00:03:43,260
organization you know there's a

89
00:03:41,940 --> 00:03:45,359
development team and you're developing

90
00:03:43,260 --> 00:03:49,140
software that gets delivered to a third

91
00:03:45,360 --> 00:03:50,100
party like a customer just hands okay

92
00:03:49,140 --> 00:03:52,440
how many of you work in an organization

93
00:03:50,100 --> 00:03:54,570
where you develop software but it's

94
00:03:52,440 --> 00:03:56,579
critical for the internal infrastructure

95
00:03:54,570 --> 00:03:58,680
so accounting systems financial systems

96
00:03:56,580 --> 00:04:00,390
that sort of thing ok so software plays

97
00:03:58,680 --> 00:04:02,580
a big part of your organization you

98
00:04:00,390 --> 00:04:04,130
probably have web servers right with

99
00:04:02,580 --> 00:04:13,650
software running that that might

100
00:04:04,130 --> 00:04:15,269
interact with the public so why should

101
00:04:13,650 --> 00:04:18,239
you care about code signing especially

102
00:04:15,270 --> 00:04:20,370
from an InfoSec perspective and most of

103
00:04:18,238 --> 00:04:21,630
the organization's I work for code

104
00:04:20,370 --> 00:04:23,220
signing is something that the

105
00:04:21,630 --> 00:04:25,200
development organization is responsible

106
00:04:23,220 --> 00:04:27,750
for usually but if you're focused on

107
00:04:25,200 --> 00:04:29,099
risk for your organization and trying to

108
00:04:27,750 --> 00:04:31,950
protect against those risk then you're

109
00:04:29,100 --> 00:04:34,400
gonna see in my presentation today why

110
00:04:31,950 --> 00:04:36,780
this should be top of mind for you

111
00:04:34,400 --> 00:04:39,000
cosine has been around since the 1990s

112
00:04:36,780 --> 00:04:40,799
and I'll go in a little bit of the

113
00:04:39,000 --> 00:04:43,080
history just to put everything in the

114
00:04:40,800 --> 00:04:44,490
context in just a few minutes but I just

115
00:04:43,080 --> 00:04:46,050
wanted to start off with with the case

116
00:04:44,490 --> 00:04:49,320
study this happened just a few months

117
00:04:46,050 --> 00:04:51,270
ago everyone's heard the Zeus computers

118
00:04:49,320 --> 00:04:53,310
it's a brand of computer

119
00:04:51,270 --> 00:04:57,330
kaspersky lab's they write antivirus

120
00:04:53,310 --> 00:04:59,550
software so a 2019 Kaspersky discovered

121
00:04:57,330 --> 00:05:01,859
that a bunch of these Zeus computers

122
00:04:59,550 --> 00:05:04,130
that were installed you know at various

123
00:05:01,860 --> 00:05:07,880
customer sites were infected with a

124
00:05:04,130 --> 00:05:10,820
malware called Operation shadow hammer

125
00:05:07,880 --> 00:05:14,370
and basically this is what happened is

126
00:05:10,820 --> 00:05:16,620
that as you know Windows pushes out live

127
00:05:14,370 --> 00:05:19,350
updates to computers and so people love

128
00:05:16,620 --> 00:05:21,630
that some people hate it well is a zoo

129
00:05:19,350 --> 00:05:24,530
snus the same thing they have updates to

130
00:05:21,630 --> 00:05:27,120
their firmware to their drivers etc and

131
00:05:24,530 --> 00:05:29,580
they automatically push those out to all

132
00:05:27,120 --> 00:05:31,860
of the computers belonging to their

133
00:05:29,580 --> 00:05:33,090
customers this is done maybe at night in

134
00:05:31,860 --> 00:05:37,500
the background no one really knows

135
00:05:33,090 --> 00:05:39,239
what's going on and those computers

136
00:05:37,500 --> 00:05:41,370
trust that software because it's been

137
00:05:39,240 --> 00:05:42,990
code signed and if you aren't familiar

138
00:05:41,370 --> 00:05:46,080
with the term code sign you know I'll go

139
00:05:42,990 --> 00:05:47,340
into that in a little while but the

140
00:05:46,080 --> 00:05:50,310
important thing here is that there's a

141
00:05:47,340 --> 00:05:51,719
level of trust between what a Zeus was

142
00:05:50,310 --> 00:05:54,210
doing and the software that it was

143
00:05:51,720 --> 00:05:57,600
pushing down to all the computers of

144
00:05:54,210 --> 00:06:01,770
their customers so what happened in this

145
00:05:57,600 --> 00:06:04,020
particular case hey Zeus would sign

146
00:06:01,770 --> 00:06:07,770
those updates code sign those updates on

147
00:06:04,020 --> 00:06:09,270
that web server and so I'll explain in a

148
00:06:07,770 --> 00:06:12,090
few minutes when you code sign something

149
00:06:09,270 --> 00:06:14,400
you need a private cryptographic key as

150
00:06:12,090 --> 00:06:16,799
well as the certificate and for whatever

151
00:06:14,400 --> 00:06:19,289
reason Azusa was storing those private

152
00:06:16,800 --> 00:06:22,710
keys on that web server and what

153
00:06:19,290 --> 00:06:24,720
happened hackers broke in and who knows

154
00:06:22,710 --> 00:06:27,630
what their original intent was but once

155
00:06:24,720 --> 00:06:30,690
they discovered that there were private

156
00:06:27,630 --> 00:06:33,630
keys on that particular server they

157
00:06:30,690 --> 00:06:35,190
basically took a legitimate update that

158
00:06:33,630 --> 00:06:37,830
azouz was going to push out to its

159
00:06:35,190 --> 00:06:38,550
customer base and they inserted malware

160
00:06:37,830 --> 00:06:42,930
into it

161
00:06:38,550 --> 00:06:45,090
re-signed it with the Zeus valid private

162
00:06:42,930 --> 00:06:48,540
key for code signing and then what

163
00:06:45,090 --> 00:06:51,539
happens that got pushed out to a Zeus

164
00:06:48,540 --> 00:06:53,160
entire customer base everyone assumed it

165
00:06:51,540 --> 00:06:55,680
was a legitimate software coming from a

166
00:06:53,160 --> 00:06:59,070
Zeus no one suspected that it contained

167
00:06:55,680 --> 00:07:01,520
malware and it infected a million

168
00:06:59,070 --> 00:07:01,520
computers

169
00:07:02,550 --> 00:07:06,750
this is just one example that shows how

170
00:07:05,280 --> 00:07:08,460
important code signing is to an

171
00:07:06,750 --> 00:07:10,379
organization and it doesn't matter if

172
00:07:08,460 --> 00:07:12,960
you're developing software that gets

173
00:07:10,379 --> 00:07:14,729
pushed out to customers or developing

174
00:07:12,960 --> 00:07:16,349
software or you're an organization

175
00:07:14,729 --> 00:07:18,120
develop software that just gets pushed

176
00:07:16,349 --> 00:07:20,310
to a web server to the web service or

177
00:07:18,120 --> 00:07:22,110
its software that's used internally

178
00:07:20,310 --> 00:07:24,960
maybe a software that you've purchased

179
00:07:22,110 --> 00:07:26,759
from a third-party vendor and you use it

180
00:07:24,960 --> 00:07:28,409
it partly how do I your users know that

181
00:07:26,759 --> 00:07:29,819
that's really the legitimate software

182
00:07:28,409 --> 00:07:33,719
and that's what code signing is all

183
00:07:29,819 --> 00:07:39,360
about in terms of business impact

184
00:07:33,720 --> 00:07:40,669
oh hey Zeus it's pretty significant you

185
00:07:39,360 --> 00:07:44,069
know from their customer's perspective

186
00:07:40,669 --> 00:07:45,960
they pushed out an update that contain

187
00:07:44,069 --> 00:07:48,060
malware that looked like it was valid

188
00:07:45,960 --> 00:07:49,349
and their computers automatically

189
00:07:48,060 --> 00:07:51,659
installed it so that could hit their

190
00:07:49,349 --> 00:07:53,819
revenue hit their market share there

191
00:07:51,659 --> 00:07:56,520
could be liability issues but it's very

192
00:07:53,819 --> 00:07:58,020
significant and this is why at least

193
00:07:56,520 --> 00:07:59,849
from my perspective you know I think

194
00:07:58,020 --> 00:08:01,560
about trusts and software you know that

195
00:07:59,849 --> 00:08:03,300
we had that physical trust with that

196
00:08:01,560 --> 00:08:05,310
collision avoidance system and then we

197
00:08:03,300 --> 00:08:07,889
had the trust that we have today with

198
00:08:05,310 --> 00:08:09,599
with web services and and software

199
00:08:07,889 --> 00:08:11,580
that's pushed out through the internet

200
00:08:09,599 --> 00:08:15,300
that has to have a level of trust as

201
00:08:11,580 --> 00:08:16,349
well it's just the latest incident I

202
00:08:15,300 --> 00:08:18,810
mean this has been going on for years

203
00:08:16,349 --> 00:08:20,550
hackers are selling legitimate codes

204
00:08:18,810 --> 00:08:22,590
onion certificates all in the dark web

205
00:08:20,550 --> 00:08:25,289
and they're spending it's pretty malware

206
00:08:22,590 --> 00:08:27,388
with it you can you can actually buy

207
00:08:25,289 --> 00:08:29,310
these certificates for you know they're

208
00:08:27,389 --> 00:08:31,199
fairly reasonably priced anywhere from a

209
00:08:29,310 --> 00:08:35,159
couple hundred dollars up to fifteen

210
00:08:31,199 --> 00:08:37,620
hundred and according to McAfee

211
00:08:35,159 --> 00:08:40,559
vulnerability report a few years ago or

212
00:08:37,620 --> 00:08:42,779
I think last year there have been twenty

213
00:08:40,559 --> 00:08:44,880
two point five million instances of

214
00:08:42,779 --> 00:08:47,459
malware that's been signed with either

215
00:08:44,880 --> 00:08:51,480
stolen or forged code signing

216
00:08:47,459 --> 00:08:53,010
credentials new certificates so the

217
00:08:51,480 --> 00:08:54,839
threats real and I really wanted to

218
00:08:53,010 --> 00:08:57,450
start off the presentation today talking

219
00:08:54,839 --> 00:08:58,860
about how real this thread is especially

220
00:08:57,450 --> 00:09:00,750
since there are many organizations where

221
00:08:58,860 --> 00:09:02,910
InfoSec is not part of that process

222
00:09:00,750 --> 00:09:08,220
that's trying to protect those code

223
00:09:02,910 --> 00:09:09,959
signing certificates so I asked you a

224
00:09:08,220 --> 00:09:11,940
few questions are earlier how many

225
00:09:09,959 --> 00:09:13,920
developed work for organizations that

226
00:09:11,940 --> 00:09:14,520
sold software or provided to the third

227
00:09:13,920 --> 00:09:15,849
parties or

228
00:09:14,520 --> 00:09:17,890
used it internally and

229
00:09:15,850 --> 00:09:20,260
and basically every business today is a

230
00:09:17,890 --> 00:09:22,000
software business it's either your

231
00:09:20,260 --> 00:09:24,160
product that you sell it's something

232
00:09:22,000 --> 00:09:26,890
that you use internally that's critical

233
00:09:24,160 --> 00:09:28,480
to your business infrastructure or it's

234
00:09:26,890 --> 00:09:31,000
a way that you're transforming the

235
00:09:28,480 --> 00:09:32,800
services that you provide from physical

236
00:09:31,000 --> 00:09:36,010
services to more digital services so

237
00:09:32,800 --> 00:09:38,310
codes critical and if you weren't aware

238
00:09:36,010 --> 00:09:40,780
of that risk that it poses to your

239
00:09:38,310 --> 00:09:42,189
organization you need you become aware

240
00:09:40,780 --> 00:09:44,439
and that's really what I hope you get

241
00:09:42,190 --> 00:09:47,260
out of today's presentation so I'm going

242
00:09:44,440 --> 00:09:50,080
to cover a couple of things talked about

243
00:09:47,260 --> 00:09:53,170
the risk already and I hope everyone

244
00:09:50,080 --> 00:09:54,820
takes those seriously I'm not sure how

245
00:09:53,170 --> 00:09:55,900
many of you understand what code signing

246
00:09:54,820 --> 00:09:57,730
is so I'm going to just spend a few

247
00:09:55,900 --> 00:10:00,490
minutes talking about what it is the

248
00:09:57,730 --> 00:10:02,230
history behind it and you know it's been

249
00:10:00,490 --> 00:10:05,290
around for a long long time so why is it

250
00:10:02,230 --> 00:10:07,060
kind of raising its head now five common

251
00:10:05,290 --> 00:10:09,730
challenges that organizations like yours

252
00:10:07,060 --> 00:10:12,189
might face and then I'm going to end up

253
00:10:09,730 --> 00:10:14,050
with five best practices I work for a

254
00:10:12,190 --> 00:10:15,850
company called vinify I promise this is

255
00:10:14,050 --> 00:10:20,800
not a product pitch this is purely

256
00:10:15,850 --> 00:10:25,330
informational and educational and let's

257
00:10:20,800 --> 00:10:27,010
get started so what is code signing it's

258
00:10:25,330 --> 00:10:30,250
basically a technique that uses a

259
00:10:27,010 --> 00:10:33,760
certificate based digital signature that

260
00:10:30,250 --> 00:10:34,510
signs a computer executable and it does

261
00:10:33,760 --> 00:10:38,380
two things

262
00:10:34,510 --> 00:10:42,010
it verifies the author's identity so if

263
00:10:38,380 --> 00:10:43,780
I say that I work for Microsoft and I

264
00:10:42,010 --> 00:10:46,210
develop software for Microsoft and then

265
00:10:43,780 --> 00:10:48,160
that software gets signed it says that

266
00:10:46,210 --> 00:10:49,300
it comes from Microsoft so that if you

267
00:10:48,160 --> 00:10:51,490
see it you know that it comes from

268
00:10:49,300 --> 00:10:54,959
Microsoft it also ensures that the codes

269
00:10:51,490 --> 00:10:58,270
not been changed since it was first

270
00:10:54,960 --> 00:11:00,100
signed so if you think back to zoos what

271
00:10:58,270 --> 00:11:03,010
happened they didn't protect their

272
00:11:00,100 --> 00:11:04,450
private keys so hackers were able to

273
00:11:03,010 --> 00:11:06,939
access those keys and then they were

274
00:11:04,450 --> 00:11:09,280
able to sign on behalf of the zoos and

275
00:11:06,940 --> 00:11:11,050
they were able to insert malware and

276
00:11:09,280 --> 00:11:13,839
sign after that so it looked like it was

277
00:11:11,050 --> 00:11:15,400
valid so this is really you know think

278
00:11:13,840 --> 00:11:16,300
about this it's a it's an information

279
00:11:15,400 --> 00:11:20,670
security risk

280
00:11:16,300 --> 00:11:22,870
if those private Keys are not protected

281
00:11:20,670 --> 00:11:24,010
you also think about code signing

282
00:11:22,870 --> 00:11:27,280
certificates they're like birth

283
00:11:24,010 --> 00:11:29,250
certificates so if a birth certificates

284
00:11:27,280 --> 00:11:31,860
stolen or if it's forged it can call

285
00:11:29,250 --> 00:11:33,870
some damage code signing codes audience

286
00:11:31,860 --> 00:11:35,700
certificates obviously can cause a great

287
00:11:33,870 --> 00:11:40,140
amount of damage especially to our

288
00:11:35,700 --> 00:11:41,760
organization and even though this is a

289
00:11:40,140 --> 00:11:44,850
technology that's been around for many

290
00:11:41,760 --> 00:11:46,080
many many years these certificates and

291
00:11:44,850 --> 00:11:48,840
the private Keys are more vulnerable

292
00:11:46,080 --> 00:11:50,490
than ever because hackers have you know

293
00:11:48,840 --> 00:11:51,600
they basically plugged up one hole and

294
00:11:50,490 --> 00:11:54,360
what do they do they try to find another

295
00:11:51,600 --> 00:11:57,480
vulnerability so they've now discovered

296
00:11:54,360 --> 00:11:59,460
okay you know if we put out a game on

297
00:11:57,480 --> 00:12:01,350
the internet and you know it's really

298
00:11:59,460 --> 00:12:02,910
disguised malware no one's going to

299
00:12:01,350 --> 00:12:04,350
download it unless it's been signed the

300
00:12:02,910 --> 00:12:06,780
certificate from a company that's

301
00:12:04,350 --> 00:12:08,700
someone trusts so what do they do they

302
00:12:06,780 --> 00:12:12,209
go and start trying to steal those

303
00:12:08,700 --> 00:12:14,310
certificates and keys so when we talk

304
00:12:12,210 --> 00:12:16,080
about code what do we mean by code

305
00:12:14,310 --> 00:12:17,400
obviously you know what comes to mind is

306
00:12:16,080 --> 00:12:19,710
that computer program that you install

307
00:12:17,400 --> 00:12:21,720
on your Windows machine it could be a

308
00:12:19,710 --> 00:12:24,540
driver that goes on onto that computer

309
00:12:21,720 --> 00:12:26,700
it could be firmware that you know lives

310
00:12:24,540 --> 00:12:28,439
in the hardware it could be a mobile

311
00:12:26,700 --> 00:12:29,610
application on your phone you know one

312
00:12:28,440 --> 00:12:32,040
of the things that's so great about the

313
00:12:29,610 --> 00:12:34,800
Apple ecosystem is that they do a really

314
00:12:32,040 --> 00:12:37,020
good job of preventing malware infected

315
00:12:34,800 --> 00:12:40,800
apps from getting installed onto an

316
00:12:37,020 --> 00:12:43,050
iPhone shell scripts so you know if you

317
00:12:40,800 --> 00:12:44,189
work an IT you probably have lots of

318
00:12:43,050 --> 00:12:47,010
automation where you've written

319
00:12:44,190 --> 00:12:48,150
PowerShell scripts or your members of

320
00:12:47,010 --> 00:12:50,850
your team have written PowerShell

321
00:12:48,150 --> 00:12:53,250
scripts because it's automated if those

322
00:12:50,850 --> 00:12:55,110
things are not protected someone stay

323
00:12:53,250 --> 00:12:56,430
within your organization can modify the

324
00:12:55,110 --> 00:13:00,000
scripts and no one would know the better

325
00:12:56,430 --> 00:13:02,370
so it's a great opportunity to to be

326
00:13:00,000 --> 00:13:04,950
able to sign that shell script to say

327
00:13:02,370 --> 00:13:05,490
this is trusted we know it's not been

328
00:13:04,950 --> 00:13:07,589
modified

329
00:13:05,490 --> 00:13:09,810
finally there are operating systems and

330
00:13:07,589 --> 00:13:11,190
then application containers which if

331
00:13:09,810 --> 00:13:12,630
you're familiar with you know some of

332
00:13:11,190 --> 00:13:14,670
the virtualization activities going on

333
00:13:12,630 --> 00:13:16,080
and the trends towards the cloud this is

334
00:13:14,670 --> 00:13:18,390
going to become more and more important

335
00:13:16,080 --> 00:13:20,550
so those things need to be trusted as

336
00:13:18,390 --> 00:13:22,890
well and we would consider them code so

337
00:13:20,550 --> 00:13:25,939
this is all types of code that can be

338
00:13:22,890 --> 00:13:29,490
protected by a code signing certificate

339
00:13:25,940 --> 00:13:31,230
so how do you actually sign code and I

340
00:13:29,490 --> 00:13:33,630
don't want to get too far into the into

341
00:13:31,230 --> 00:13:35,339
the weeds because mostly as I said this

342
00:13:33,630 --> 00:13:39,060
comes from the software development team

343
00:13:35,339 --> 00:13:41,240
but you start off with code and you use

344
00:13:39,060 --> 00:13:42,790
a tool that's usually provided by the

345
00:13:41,240 --> 00:13:45,340
development tool style

346
00:13:42,790 --> 00:13:47,459
so if your team's using Visual Studio or

347
00:13:45,340 --> 00:13:51,580
if they're using Java or they're using

348
00:13:47,460 --> 00:13:54,340
Apple's Swift part of the toolset that

349
00:13:51,580 --> 00:13:57,280
those Suites come with includes a code

350
00:13:54,340 --> 00:13:59,140
signing tool and basically the first

351
00:13:57,280 --> 00:14:01,720
step of what that tool does is it

352
00:13:59,140 --> 00:14:04,000
generates a hash of the code so with the

353
00:14:01,720 --> 00:14:06,220
hash we know that this is the state of

354
00:14:04,000 --> 00:14:08,710
the code this is with all the bits and

355
00:14:06,220 --> 00:14:11,380
the bytes of the code were when it got

356
00:14:08,710 --> 00:14:14,680
submitted to the code signing tool then

357
00:14:11,380 --> 00:14:19,270
you provided a private cryptographic key

358
00:14:14,680 --> 00:14:22,989
that's used to create a signature of

359
00:14:19,270 --> 00:14:25,240
that hash so it's encrypted now and then

360
00:14:22,990 --> 00:14:28,450
the code signing tool takes that

361
00:14:25,240 --> 00:14:31,060
signature combines in a code certificate

362
00:14:28,450 --> 00:14:33,940
with the original executable and out

363
00:14:31,060 --> 00:14:36,339
pops sign code so that's the process of

364
00:14:33,940 --> 00:14:37,450
what happens when we we signed code so

365
00:14:36,340 --> 00:14:39,520
it's really simple it's just a

366
00:14:37,450 --> 00:14:41,170
command-line tool or if you're in Visual

367
00:14:39,520 --> 00:14:42,850
Studio it's a drop-down menu item and

368
00:14:41,170 --> 00:14:45,130
you say sign this or if you're in Swift

369
00:14:42,850 --> 00:14:46,980
it's the same thing it's pretty simple

370
00:14:45,130 --> 00:14:50,380
so that's why developers tend to do it

371
00:14:46,980 --> 00:14:53,590
but what's critical here is that

372
00:14:50,380 --> 00:14:55,360
cryptographic private key that gives you

373
00:14:53,590 --> 00:14:57,070
keys to the kingdom to your whole

374
00:14:55,360 --> 00:15:00,280
business if someone has ahold of that

375
00:14:57,070 --> 00:15:01,600
key they could sign anything just like

376
00:15:00,280 --> 00:15:04,810
we saw with the example of these zoos

377
00:15:01,600 --> 00:15:06,550
they got ahold of a private key that

378
00:15:04,810 --> 00:15:09,130
should have been more securely managed

379
00:15:06,550 --> 00:15:12,370
they were able to modify an update add

380
00:15:09,130 --> 00:15:14,910
their malware re-sign it and it to the

381
00:15:12,370 --> 00:15:19,930
world it looks like it's perfectly valid

382
00:15:14,910 --> 00:15:22,540
product from is is so why do we sign

383
00:15:19,930 --> 00:15:25,089
code so there are two scenarios one is

384
00:15:22,540 --> 00:15:27,130
that you're trying to protect code that

385
00:15:25,090 --> 00:15:28,420
you need to distribute so you want to

386
00:15:27,130 --> 00:15:29,890
protect your customers you want your

387
00:15:28,420 --> 00:15:31,569
customers to be able to trust what

388
00:15:29,890 --> 00:15:34,240
you've provided them you want them to

389
00:15:31,570 --> 00:15:37,870
know that yes this did come from you and

390
00:15:34,240 --> 00:15:40,060
no one has modified its to blast signed

391
00:15:37,870 --> 00:15:41,820
it it also protects your business

392
00:15:40,060 --> 00:15:44,050
because you don't want cyber criminals

393
00:15:41,820 --> 00:15:47,410
signing code on your behalf that turns

394
00:15:44,050 --> 00:15:49,449
out to be malware or or worse there's

395
00:15:47,410 --> 00:15:51,670
another scenario and this might apply to

396
00:15:49,450 --> 00:15:53,590
more of you then then the first one and

397
00:15:51,670 --> 00:15:55,599
this is you want to protect your

398
00:15:53,590 --> 00:15:58,360
business so this is

399
00:15:55,600 --> 00:15:59,920
code that you use internally maybe maybe

400
00:15:58,360 --> 00:16:01,839
it's those shell scripts that help

401
00:15:59,920 --> 00:16:05,349
automate some of your processes or maybe

402
00:16:01,839 --> 00:16:08,829
it's a database system that's only used

403
00:16:05,350 --> 00:16:11,170
internally or your HR system but

404
00:16:08,829 --> 00:16:12,399
basically you want to be sure that when

405
00:16:11,170 --> 00:16:14,139
that you'd bring it into your

406
00:16:12,399 --> 00:16:17,949
organization and you run through your

407
00:16:14,139 --> 00:16:20,740
accepts acceptance test you are able to

408
00:16:17,949 --> 00:16:22,508
sign that and say this is now blessed we

409
00:16:20,740 --> 00:16:24,310
know that this is trustworthy and if

410
00:16:22,509 --> 00:16:25,810
anyone in the organization installs that

411
00:16:24,310 --> 00:16:27,910
they can check to see if it's been

412
00:16:25,810 --> 00:16:29,709
signed by your organization to say that

413
00:16:27,910 --> 00:16:32,500
it's trustworthy so it's a great way to

414
00:16:29,709 --> 00:16:37,660
provide that internal trust within your

415
00:16:32,500 --> 00:16:38,920
your infrastructure so brief history

416
00:16:37,660 --> 00:16:41,949
have talked about this

417
00:16:38,920 --> 00:16:48,009
why does code siding exist think back to

418
00:16:41,949 --> 00:16:49,920
the 1990s and software's first being

419
00:16:48,009 --> 00:16:52,449
distributed on the Internet

420
00:16:49,920 --> 00:16:54,430
great and the more floppy disk when we r

421
00:16:52,449 --> 00:16:56,949
cd-rom so actually CD ROMs were around

422
00:16:54,430 --> 00:16:58,540
for for quite a while after that but but

423
00:16:56,949 --> 00:17:01,859
basically it was a way to get that

424
00:16:58,540 --> 00:17:05,319
software from the vendor to a customer

425
00:17:01,860 --> 00:17:07,240
and at some point malicious actors

426
00:17:05,319 --> 00:17:09,428
hackers whatever you want to call them

427
00:17:07,240 --> 00:17:10,870
they started putting their own stuff up

428
00:17:09,429 --> 00:17:16,390
on the internet and this contains

429
00:17:10,869 --> 00:17:18,609
spyware malware viruses etc and the

430
00:17:16,390 --> 00:17:20,069
consumer the user had no idea which is

431
00:17:18,609 --> 00:17:24,280
good which is bad

432
00:17:20,069 --> 00:17:26,980
so the solution in the 1990s was to do

433
00:17:24,280 --> 00:17:28,449
code signing so code signing basically

434
00:17:26,980 --> 00:17:31,740
you get a certificate from a certificate

435
00:17:28,449 --> 00:17:34,210
authority you use that to sign your code

436
00:17:31,740 --> 00:17:35,919
that sign code goes out on the internet

437
00:17:34,210 --> 00:17:39,010
and then if someone downloads it they

438
00:17:35,919 --> 00:17:40,510
know that's safe if they seek software

439
00:17:39,010 --> 00:17:42,879
out there that's not signed or it's

440
00:17:40,510 --> 00:17:45,158
signed with a certificate that seems to

441
00:17:42,880 --> 00:17:46,990
be suspicious the consumer would know

442
00:17:45,159 --> 00:17:49,210
that's not safe and when I say consumer

443
00:17:46,990 --> 00:17:50,470
it's either a conscious decision or it

444
00:17:49,210 --> 00:17:52,750
might be the operating system making

445
00:17:50,470 --> 00:17:56,010
that decision that it sees a certificate

446
00:17:52,750 --> 00:17:59,100
that it that it feels this is not safe

447
00:17:56,010 --> 00:18:01,720
so what did hackers do they responded

448
00:17:59,100 --> 00:18:03,309
they responded by going after the

449
00:18:01,720 --> 00:18:05,559
certificates themselves and the private

450
00:18:03,309 --> 00:18:08,129
keys they would steal them or they would

451
00:18:05,559 --> 00:18:08,129
Forge them

452
00:18:08,370 --> 00:18:14,310
and now they're malware it looks just

453
00:18:10,740 --> 00:18:15,960
like Vallot Dalit software and to the

454
00:18:14,310 --> 00:18:17,399
average operating system where the

455
00:18:15,960 --> 00:18:18,810
average consumer there they have no way

456
00:18:17,400 --> 00:18:22,170
of knowing which is the correct one so

457
00:18:18,810 --> 00:18:25,889
it's a new problem in in the the

458
00:18:22,170 --> 00:18:28,080
late-2000s here 2019 and it's all around

459
00:18:25,890 --> 00:18:30,390
securing those certificates so we have

460
00:18:28,080 --> 00:18:32,040
the technology that secures the code but

461
00:18:30,390 --> 00:18:34,230
if you don't protect a certificate in

462
00:18:32,040 --> 00:18:37,409
the private keys it's it's like

463
00:18:34,230 --> 00:18:40,170
basically giving out the front door heat

464
00:18:37,410 --> 00:18:41,910
of your house and when you think about

465
00:18:40,170 --> 00:18:44,520
the complexity of organizations today

466
00:18:41,910 --> 00:18:46,680
you know back in the 90s it might have

467
00:18:44,520 --> 00:18:49,170
been five software developers developing

468
00:18:46,680 --> 00:18:52,410
a program that would basically fit on a

469
00:18:49,170 --> 00:18:54,900
floppy disk now we're talking about huge

470
00:18:52,410 --> 00:18:57,080
programs developed by thousands of

471
00:18:54,900 --> 00:18:59,640
developers we work with some customers

472
00:18:57,080 --> 00:19:01,230
where they have 30,000 developers in

473
00:18:59,640 --> 00:19:04,170
their organization they're all

474
00:19:01,230 --> 00:19:05,460
responsible for signing their code that

475
00:19:04,170 --> 00:19:09,060
means hundreds or thousands of

476
00:19:05,460 --> 00:19:11,460
certificates and if everyone manages

477
00:19:09,060 --> 00:19:18,030
their own private keys what happens they

478
00:19:11,460 --> 00:19:24,330
aren't safe they aren't secure the other

479
00:19:18,030 --> 00:19:26,850
complexity is that software now is it's

480
00:19:24,330 --> 00:19:28,530
now heterogeneous so you have web

481
00:19:26,850 --> 00:19:29,909
services for an application along with

482
00:19:28,530 --> 00:19:32,190
the mobile app along with the back-end

483
00:19:29,910 --> 00:19:33,630
infrastructure for that app and you have

484
00:19:32,190 --> 00:19:35,520
lots of different software development

485
00:19:33,630 --> 00:19:37,320
teams all working towards a common goal

486
00:19:35,520 --> 00:19:39,780
but they're using a different set of

487
00:19:37,320 --> 00:19:41,490
tools different environments needing

488
00:19:39,780 --> 00:19:45,360
different code signing certificates so

489
00:19:41,490 --> 00:19:47,520
so it really becomes a complex project

490
00:19:45,360 --> 00:19:49,229
to manage and then you know no longer

491
00:19:47,520 --> 00:19:50,340
are we in the days of waterfall where

492
00:19:49,230 --> 00:19:51,930
everything was really controlled you

493
00:19:50,340 --> 00:19:54,480
know you do requirements design and

494
00:19:51,930 --> 00:19:56,460
coding and testing and so forth but it's

495
00:19:54,480 --> 00:19:59,430
all done in an iterative process either

496
00:19:56,460 --> 00:20:01,470
through DevOps processes or agile which

497
00:19:59,430 --> 00:20:03,960
means the goal is to get things out as

498
00:20:01,470 --> 00:20:06,330
quickly as possible and as InfoSec

499
00:20:03,960 --> 00:20:09,390
professionals you really need to step

500
00:20:06,330 --> 00:20:10,800
back and say hold on you know I realize

501
00:20:09,390 --> 00:20:13,260
that you have a goal for getting things

502
00:20:10,800 --> 00:20:15,899
not quickly but let's make sure that is

503
00:20:13,260 --> 00:20:18,300
done safely and that we're trusting and

504
00:20:15,900 --> 00:20:21,090
we're securing those critical

505
00:20:18,300 --> 00:20:22,139
credentials that can basically give

506
00:20:21,090 --> 00:20:24,120
cybercriminals that

507
00:20:22,140 --> 00:20:27,840
Keter tara businesses business or

508
00:20:24,120 --> 00:20:30,239
organizations front door so how do

509
00:20:27,840 --> 00:20:31,709
organizations cope with this issue where

510
00:20:30,240 --> 00:20:33,740
you have thousands of developers

511
00:20:31,710 --> 00:20:37,340
thousands of code signing operations

512
00:20:33,740 --> 00:20:40,620
there's one way and that is basically

513
00:20:37,340 --> 00:20:43,500
they request a certificate from the

514
00:20:40,620 --> 00:20:44,729
InfoSec team if the SEC team says ok

515
00:20:43,500 --> 00:20:47,580
we're gonna go out to the certification

516
00:20:44,730 --> 00:20:49,530
certificate authority we've done all the

517
00:20:47,580 --> 00:20:51,960
work for you here so she's a certificate

518
00:20:49,530 --> 00:20:56,510
here is the private key please keep it

519
00:20:51,960 --> 00:21:00,570
safe goodbye good luck have a great day

520
00:20:56,510 --> 00:21:02,520
another way is that the InfoSec teen

521
00:21:00,570 --> 00:21:04,919
says no we don't trust the developers we

522
00:21:02,520 --> 00:21:06,210
know how sloppy they are there might be

523
00:21:04,920 --> 00:21:08,190
great software developers but they

524
00:21:06,210 --> 00:21:09,810
really don't know about security so

525
00:21:08,190 --> 00:21:13,590
we're gonna keep all this stuff for

526
00:21:09,810 --> 00:21:16,230
ourselves in our own personal vault and

527
00:21:13,590 --> 00:21:19,260
so they're asked ok I need to have my

528
00:21:16,230 --> 00:21:21,240
code signed they're gonna say ok sure

529
00:21:19,260 --> 00:21:22,950
take a ticket we'll try to get back to

530
00:21:21,240 --> 00:21:24,750
you next week or next month we'll get

531
00:21:22,950 --> 00:21:27,930
that sign and in return the signed code

532
00:21:24,750 --> 00:21:31,440
to you both of these have issues and

533
00:21:27,930 --> 00:21:33,450
problems on the left hand side you end

534
00:21:31,440 --> 00:21:35,610
up with insecure private keys because

535
00:21:33,450 --> 00:21:39,810
you have all these keys residing on

536
00:21:35,610 --> 00:21:42,899
developers laptops build servers and a

537
00:21:39,810 --> 00:21:44,940
Zeus's example web servers and on the

538
00:21:42,900 --> 00:21:47,340
right side you have an issue where the

539
00:21:44,940 --> 00:21:49,530
development team just hates you because

540
00:21:47,340 --> 00:21:51,090
you can't turn around their requests

541
00:21:49,530 --> 00:21:53,820
fast enough because you just don't have

542
00:21:51,090 --> 00:21:55,949
the bandwidth for that so it's just too

543
00:21:53,820 --> 00:21:58,710
slow and then they get annoyed and

544
00:21:55,950 --> 00:22:01,770
frustrated and you need more resources

545
00:21:58,710 --> 00:22:07,290
to handle all this so there has to be a

546
00:22:01,770 --> 00:22:10,710
better way so let's talk about just five

547
00:22:07,290 --> 00:22:13,020
common challenges and I'm curious how

548
00:22:10,710 --> 00:22:17,400
many of you deal with code signing today

549
00:22:13,020 --> 00:22:19,680
in your organization and is that all

550
00:22:17,400 --> 00:22:21,570
handled within the InfoSec team or is it

551
00:22:19,680 --> 00:22:25,890
handled by the development team who

552
00:22:21,570 --> 00:22:29,310
keeps the certificates developers and

553
00:22:25,890 --> 00:22:31,730
what about infoset ok so that's pretty

554
00:22:29,310 --> 00:22:31,730
scary

555
00:22:31,880 --> 00:22:36,030
so let's let's talk about what some of

556
00:22:34,380 --> 00:22:42,240
the challenges are that you have to be

557
00:22:36,030 --> 00:22:44,310
aware of first off you got an issue with

558
00:22:42,240 --> 00:22:46,050
private key sprawl if you have one

559
00:22:44,310 --> 00:22:47,610
developer one code signing certificate

560
00:22:46,050 --> 00:22:49,320
it's probably easy to keep track of if

561
00:22:47,610 --> 00:22:51,560
you have ten maybe that's easy to keep

562
00:22:49,320 --> 00:22:53,399
track of as well you have a spreadsheet

563
00:22:51,560 --> 00:22:55,200
but when you have thousands of

564
00:22:53,400 --> 00:22:57,540
developers thousands of certificates

565
00:22:55,200 --> 00:23:00,120
tens of thousands of signing operations

566
00:22:57,540 --> 00:23:02,090
a week how do you keep track of that if

567
00:23:00,120 --> 00:23:05,070
all of your developers keep those keys

568
00:23:02,090 --> 00:23:06,990
wherever they want to keep them do you

569
00:23:05,070 --> 00:23:08,970
know they're secure I mean that this is

570
00:23:06,990 --> 00:23:12,300
a huge risk i sat through the 101 risk

571
00:23:08,970 --> 00:23:14,370
session earlier this is a just huge

572
00:23:12,300 --> 00:23:16,620
threat and huge vulnerability if you

573
00:23:14,370 --> 00:23:19,050
don't keep track of those private keys

574
00:23:16,620 --> 00:23:20,459
because if anyone either within your

575
00:23:19,050 --> 00:23:22,710
organization or outside of your

576
00:23:20,460 --> 00:23:24,300
organization gets ahold of that key they

577
00:23:22,710 --> 00:23:27,330
can cause a tremendous amount of damage

578
00:23:24,300 --> 00:23:29,610
by distributing malware or other

579
00:23:27,330 --> 00:23:34,020
software in your name and your company's

580
00:23:29,610 --> 00:23:35,340
name without any window in the better do

581
00:23:34,020 --> 00:23:36,570
you know if any of those keys have been

582
00:23:35,340 --> 00:23:38,580
compromised

583
00:23:36,570 --> 00:23:40,139
maybe someone's laptop got stolen and

584
00:23:38,580 --> 00:23:42,149
they had those private keys on that

585
00:23:40,140 --> 00:23:44,940
laptop and then do you know who in your

586
00:23:42,150 --> 00:23:46,470
organization has access to those keys so

587
00:23:44,940 --> 00:23:48,510
if you don't have that visibility this

588
00:23:46,470 --> 00:23:51,570
is a real challenge for you to be able

589
00:23:48,510 --> 00:23:55,620
to do your job in protecting this

590
00:23:51,570 --> 00:23:58,740
critical business asset the next is lack

591
00:23:55,620 --> 00:24:00,510
of visibility and what's happening how

592
00:23:58,740 --> 00:24:05,220
many pieces of code gets signed today in

593
00:24:00,510 --> 00:24:08,840
your organization five 10,000 10,000 we

594
00:24:05,220 --> 00:24:11,550
work with one customer that's signs I

595
00:24:08,840 --> 00:24:14,760
think it was five million pieces of code

596
00:24:11,550 --> 00:24:17,639
a week that's a lot of code it's a huge

597
00:24:14,760 --> 00:24:19,290
company but it's a lot of code where do

598
00:24:17,640 --> 00:24:21,240
those certificates come from you know

599
00:24:19,290 --> 00:24:23,960
you don't necessarily want just a

600
00:24:21,240 --> 00:24:27,210
developer going out and signing up with

601
00:24:23,960 --> 00:24:28,770
any any old a certificate authority to

602
00:24:27,210 --> 00:24:30,240
ask for that certificate and get that

603
00:24:28,770 --> 00:24:33,750
certificate themselves you really need

604
00:24:30,240 --> 00:24:35,520
to be part of that process it's a code

605
00:24:33,750 --> 00:24:37,140
internally signed meaning that is it

606
00:24:35,520 --> 00:24:38,460
okay for internal use or has it been

607
00:24:37,140 --> 00:24:41,190
signed with a certificate that makes it

608
00:24:38,460 --> 00:24:42,750
okay for distribution externally and

609
00:24:41,190 --> 00:24:44,790
then who is actually responsible for

610
00:24:42,750 --> 00:24:47,160
signing it most organizations

611
00:24:44,790 --> 00:24:48,600
a particular process hopefully they have

612
00:24:47,160 --> 00:24:51,570
a process that says only these

613
00:24:48,600 --> 00:24:55,439
individuals are allowed to sign code on

614
00:24:51,570 --> 00:24:57,210
the back behalf of the organization you

615
00:24:55,440 --> 00:25:01,020
have an issue and a challenge around

616
00:24:57,210 --> 00:25:04,740
lack of governance do you have code

617
00:25:01,020 --> 00:25:06,750
signing processes defined so you

618
00:25:04,740 --> 00:25:10,380
probably have processes defined on how

619
00:25:06,750 --> 00:25:12,300
you handle TLS SSL Certificates how you

620
00:25:10,380 --> 00:25:14,370
handle security going in and out of the

621
00:25:12,300 --> 00:25:16,830
the office but do you actually have a

622
00:25:14,370 --> 00:25:20,399
process defined for how your company

623
00:25:16,830 --> 00:25:23,580
handles code signing certificates you do

624
00:25:20,400 --> 00:25:25,770
have a process and hopefully you do do

625
00:25:23,580 --> 00:25:27,210
you know is there compliance with every

626
00:25:25,770 --> 00:25:28,680
one that does code signing within your

627
00:25:27,210 --> 00:25:32,070
organization are they complying with

628
00:25:28,680 --> 00:25:33,720
that process if you specify that only

629
00:25:32,070 --> 00:25:35,399
certain people are authorized to sign

630
00:25:33,720 --> 00:25:37,500
how do you guarantee that only those

631
00:25:35,400 --> 00:25:39,870
certain people are authorized to sign or

632
00:25:37,500 --> 00:25:42,300
do they get the proper approval to be

633
00:25:39,870 --> 00:25:44,729
able to sign in the first place how do

634
00:25:42,300 --> 00:25:46,680
you know if they're actually using the

635
00:25:44,730 --> 00:25:48,420
right certificates I mean it's it's also

636
00:25:46,680 --> 00:25:51,450
could be extremely bad if they use the

637
00:25:48,420 --> 00:25:55,020
wrong certificates or they use that

638
00:25:51,450 --> 00:25:56,520
certificate in the wrong way so lack of

639
00:25:55,020 --> 00:25:59,280
governance and control over signing

640
00:25:56,520 --> 00:26:03,060
creates huge risk for for your

641
00:25:59,280 --> 00:26:05,370
organization and we go to lack of

642
00:26:03,060 --> 00:26:07,980
automation and you think back to that

643
00:26:05,370 --> 00:26:09,360
example where someone comes to you with

644
00:26:07,980 --> 00:26:11,520
a floppy disks and they say I need to

645
00:26:09,360 --> 00:26:12,990
have this code signed and you have to go

646
00:26:11,520 --> 00:26:14,280
through your files and figure out okay

647
00:26:12,990 --> 00:26:17,450
where's that certificate at where's that

648
00:26:14,280 --> 00:26:19,889
private key at you type in some commands

649
00:26:17,450 --> 00:26:22,290
you put it actually first put it in your

650
00:26:19,890 --> 00:26:24,300
your work queue a few days later you get

651
00:26:22,290 --> 00:26:27,149
to it you sign it you hate that floppy

652
00:26:24,300 --> 00:26:28,649
disk back over to that person that's

653
00:26:27,150 --> 00:26:31,470
really inefficient it's time-consuming

654
00:26:28,650 --> 00:26:34,350
and it requires a lot of resources and

655
00:26:31,470 --> 00:26:35,670
it's prone to error so you really if you

656
00:26:34,350 --> 00:26:37,919
have a lack of automation you have a

657
00:26:35,670 --> 00:26:39,660
also a significant problem in your

658
00:26:37,920 --> 00:26:41,840
organization around code signing because

659
00:26:39,660 --> 00:26:44,460
it happens so frequently especially in

660
00:26:41,840 --> 00:26:49,409
DevOps and agile software development

661
00:26:44,460 --> 00:26:51,510
environments developers also are

662
00:26:49,410 --> 00:26:53,910
probably using extremely automated tools

663
00:26:51,510 --> 00:26:55,950
for doing their bills so if you don't

664
00:26:53,910 --> 00:26:57,190
have that code signing process built

665
00:26:55,950 --> 00:26:58,419
into their workflows

666
00:26:57,190 --> 00:26:59,950
they're going to find ways to work

667
00:26:58,419 --> 00:27:04,090
around it and and that's something that

668
00:26:59,950 --> 00:27:06,669
you really don't want to do and then

669
00:27:04,090 --> 00:27:08,349
this next challenge is your group is it

670
00:27:06,669 --> 00:27:10,119
involved with code signing so your

671
00:27:08,349 --> 00:27:13,149
groups responsible for risk and security

672
00:27:10,119 --> 00:27:15,099
of the organization but yet it's not

673
00:27:13,149 --> 00:27:17,918
involved in code signing so huge problem

674
00:27:15,099 --> 00:27:20,408
but maybe even a bigger problem is that

675
00:27:17,919 --> 00:27:22,239
your groups the bottleneck so everyone's

676
00:27:20,409 --> 00:27:24,609
complaining about you just slowing down

677
00:27:22,239 --> 00:27:26,259
that release the release didn't get done

678
00:27:24,609 --> 00:27:27,849
last Friday the way it was supposed to

679
00:27:26,259 --> 00:27:30,879
because it didn't gets a code signed

680
00:27:27,849 --> 00:27:32,739
until Monday so if that's happening and

681
00:27:30,879 --> 00:27:35,320
that becomes a big issue for your

682
00:27:32,739 --> 00:27:37,690
organization so those are the five

683
00:27:35,320 --> 00:27:39,970
challenges and you know the digital

684
00:27:37,690 --> 00:27:42,059
signature is no longer enough just the

685
00:27:39,970 --> 00:27:44,379
fact that you've code signs something

686
00:27:42,059 --> 00:27:46,299
doesn't necessarily make it trustworthy

687
00:27:44,379 --> 00:27:52,119
if you haven't secured those

688
00:27:46,299 --> 00:27:54,158
certificates in those keys so if your

689
00:27:52,119 --> 00:27:55,988
did go back to your organization and do

690
00:27:54,159 --> 00:27:57,759
five different things you may not be

691
00:27:55,989 --> 00:28:01,299
able to do all five of these but but

692
00:27:57,759 --> 00:28:03,460
these are things to consider what would

693
00:28:01,299 --> 00:28:04,989
those be and I'm going to run through

694
00:28:03,460 --> 00:28:08,409
each of these in more detail so let me

695
00:28:04,989 --> 00:28:11,409
just get through this and then start on

696
00:28:08,409 --> 00:28:14,470
this one centrally secure all private

697
00:28:11,409 --> 00:28:18,419
keys there should be no reason that a

698
00:28:14,470 --> 00:28:21,669
developer has a private key on their

699
00:28:18,419 --> 00:28:23,259
workstation you know if you've ever been

700
00:28:21,669 --> 00:28:25,450
to their cubicle they're usually pretty

701
00:28:23,259 --> 00:28:28,690
sloppy they've got other things on their

702
00:28:25,450 --> 00:28:30,909
mind they aren't PKI experts they should

703
00:28:28,690 --> 00:28:35,320
not be stored on someone's private

704
00:28:30,909 --> 00:28:38,019
personal computer as we saw with the

705
00:28:35,320 --> 00:28:42,070
case of a Zeus they should not be stored

706
00:28:38,019 --> 00:28:43,929
on a build server or a web server those

707
00:28:42,070 --> 00:28:45,189
things could be hacked into or accessed

708
00:28:43,929 --> 00:28:48,099
by someone who doesn't have the

709
00:28:45,190 --> 00:28:49,869
authorization you really need to come up

710
00:28:48,099 --> 00:28:52,509
with a system to where all those private

711
00:28:49,869 --> 00:29:00,639
keys are centrally stored in a very

712
00:28:52,509 --> 00:29:02,229
secure way you just mention when you

713
00:29:00,639 --> 00:29:04,959
store them securely what I mean by that

714
00:29:02,229 --> 00:29:07,239
is either you store them in an HSM or

715
00:29:04,960 --> 00:29:09,700
you store them in an encrypted format

716
00:29:07,239 --> 00:29:10,520
and an encrypted database but basically

717
00:29:09,700 --> 00:29:12,350
you want to limit

718
00:29:10,520 --> 00:29:14,750
to those private keys and this goes

719
00:29:12,350 --> 00:29:16,159
across the entire organization so if you

720
00:29:14,750 --> 00:29:17,630
have satellite offices around the

721
00:29:16,160 --> 00:29:19,580
country

722
00:29:17,630 --> 00:29:21,470
you don't want every one of the

723
00:29:19,580 --> 00:29:22,939
satellite offices to have private keys

724
00:29:21,470 --> 00:29:27,590
stored locally and so you want them to

725
00:29:22,940 --> 00:29:32,360
be stored centrally you want to know who

726
00:29:27,590 --> 00:29:34,159
what where and when so if you can't

727
00:29:32,360 --> 00:29:35,689
answer these questions and this is

728
00:29:34,160 --> 00:29:37,850
probably if one piece of the device if

729
00:29:35,690 --> 00:29:38,980
you go back to organization ask these

730
00:29:37,850 --> 00:29:42,169
questions

731
00:29:38,980 --> 00:29:43,910
how many code-signing operations are in

732
00:29:42,170 --> 00:29:46,190
use today do you know what that answer

733
00:29:43,910 --> 00:29:50,480
is if nothing there there's a problem

734
00:29:46,190 --> 00:29:52,190
with visibility if you found malware on

735
00:29:50,480 --> 00:29:54,020
the internet that was legitimately

736
00:29:52,190 --> 00:29:56,090
signed by one of your company's code

737
00:29:54,020 --> 00:29:59,300
signing certificates would you know

738
00:29:56,090 --> 00:30:01,580
which group to go to to track down how

739
00:29:59,300 --> 00:30:04,250
many how that might have gotten out into

740
00:30:01,580 --> 00:30:05,689
the wild if you don't have track over

741
00:30:04,250 --> 00:30:08,890
who that's what certificates who's using

742
00:30:05,690 --> 00:30:12,410
what certificates you can't answer that

743
00:30:08,890 --> 00:30:14,420
if you have developers working directly

744
00:30:12,410 --> 00:30:15,920
with certificate authorities would even

745
00:30:14,420 --> 00:30:17,990
know where to start looking I mean most

746
00:30:15,920 --> 00:30:22,940
organizations they work with a very

747
00:30:17,990 --> 00:30:24,380
finite set of certificate authorities do

748
00:30:22,940 --> 00:30:27,500
you even know who's actually code

749
00:30:24,380 --> 00:30:30,380
signing is it just this one team or is

750
00:30:27,500 --> 00:30:31,370
it all of these teams if you have a team

751
00:30:30,380 --> 00:30:33,050
that's working on critical

752
00:30:31,370 --> 00:30:35,030
infrastructure software infrastructure

753
00:30:33,050 --> 00:30:36,320
and they are not code signing that's

754
00:30:35,030 --> 00:30:38,960
that's a problem you should at least be

755
00:30:36,320 --> 00:30:39,950
aware of it and offer assistance to to

756
00:30:38,960 --> 00:30:44,180
change that because it's going to

757
00:30:39,950 --> 00:30:47,300
decrease your your company's risk and if

758
00:30:44,180 --> 00:30:49,760
there was a need for a compliance report

759
00:30:47,300 --> 00:30:52,250
maybe your company's being audited would

760
00:30:49,760 --> 00:30:54,260
you be able to tell them who assigned

761
00:30:52,250 --> 00:30:57,380
what when they got signed what got

762
00:30:54,260 --> 00:30:59,750
signed what sir I think it was used etc

763
00:30:57,380 --> 00:31:02,000
those are all very important pieces of

764
00:30:59,750 --> 00:31:06,290
information that you should know as an

765
00:31:02,000 --> 00:31:07,910
InfoSec tune so you always want to have

766
00:31:06,290 --> 00:31:10,220
an inventory of code that's been signed

767
00:31:07,910 --> 00:31:12,140
though every piece of code in the

768
00:31:10,220 --> 00:31:14,240
company that has been sign you should be

769
00:31:12,140 --> 00:31:17,300
able to report that know who signed it

770
00:31:14,240 --> 00:31:19,430
know which certificates were used know

771
00:31:17,300 --> 00:31:21,200
who approved that to be signed and that

772
00:31:19,430 --> 00:31:24,380
implies that there should be an approval

773
00:31:21,200 --> 00:31:26,630
process now when it was signed

774
00:31:24,380 --> 00:31:29,330
and do this for everything in your

775
00:31:26,630 --> 00:31:31,220
company where software assets are either

776
00:31:29,330 --> 00:31:36,290
developed or they're purchased and then

777
00:31:31,220 --> 00:31:38,360
distributed internally so the next best

778
00:31:36,290 --> 00:31:42,680
practice is control access and defined

779
00:31:38,360 --> 00:31:45,350
workflows so if you're a financial

780
00:31:42,680 --> 00:31:47,450
institution and you you have some very

781
00:31:45,350 --> 00:31:50,330
significant regulations to comply with

782
00:31:47,450 --> 00:31:52,550
there are some requirements for what

783
00:31:50,330 --> 00:31:54,500
those processes should look like so you

784
00:31:52,550 --> 00:31:56,649
need to be able to define a process that

785
00:31:54,500 --> 00:31:59,150
protects that code signing asset and

786
00:31:56,650 --> 00:32:00,710
enforce a workflow so it needs to go

787
00:31:59,150 --> 00:32:03,130
through this sequence of approvals

788
00:32:00,710 --> 00:32:05,720
before that certificate and even be used

789
00:32:03,130 --> 00:32:08,510
you need to define who has access to

790
00:32:05,720 --> 00:32:10,700
that particular private key who has the

791
00:32:08,510 --> 00:32:14,420
rights to say that that person can use

792
00:32:10,700 --> 00:32:16,970
that private key and one size might not

793
00:32:14,420 --> 00:32:18,800
fit all so this particular project may

794
00:32:16,970 --> 00:32:20,930
had this set of needs this other project

795
00:32:18,800 --> 00:32:24,590
may have a looser set of needs a less

796
00:32:20,930 --> 00:32:25,700
restrictive set of needs and you want to

797
00:32:24,590 --> 00:32:27,350
be able to create different kinds of

798
00:32:25,700 --> 00:32:28,460
workflows and be able to support

799
00:32:27,350 --> 00:32:31,850
different kind of workflows you don't

800
00:32:28,460 --> 00:32:33,530
want to have if you have a relatively

801
00:32:31,850 --> 00:32:35,510
benign piece of software that you still

802
00:32:33,530 --> 00:32:37,010
want to protect and you don't want to

803
00:32:35,510 --> 00:32:39,920
have make them go through the same

804
00:32:37,010 --> 00:32:42,280
rigorous process that your your critical

805
00:32:39,920 --> 00:32:44,960
infrastructure team needs to go through

806
00:32:42,280 --> 00:32:46,340
and again automation is key to doing

807
00:32:44,960 --> 00:32:49,340
this if you don't have a way to do this

808
00:32:46,340 --> 00:32:51,830
all through automation it's gonna be

809
00:32:49,340 --> 00:32:56,179
hard to get people developers to embrace

810
00:32:51,830 --> 00:32:57,560
what you're doing so this next what's

811
00:32:56,180 --> 00:32:58,880
really interesting you know as I said I

812
00:32:57,560 --> 00:33:01,429
come from a software development

813
00:32:58,880 --> 00:33:03,050
background and and I remember kind of

814
00:33:01,430 --> 00:33:04,520
pushing the security team off to the

815
00:33:03,050 --> 00:33:05,930
side you know I was concerned don't get

816
00:33:04,520 --> 00:33:09,139
in my way you know I know what I need to

817
00:33:05,930 --> 00:33:10,580
do and sometimes there's friction and

818
00:33:09,140 --> 00:33:13,940
especially around hotel you there's any

819
00:33:10,580 --> 00:33:15,830
friction so you got to think about this

820
00:33:13,940 --> 00:33:18,320
and in this the last presentation if

821
00:33:15,830 --> 00:33:20,030
you're in here for this I think the

822
00:33:18,320 --> 00:33:22,040
gentleman made some really great points

823
00:33:20,030 --> 00:33:24,379
about thinking about their perspective

824
00:33:22,040 --> 00:33:25,850
do they think that your team slows them

825
00:33:24,380 --> 00:33:27,770
down maybe they don't see the value and

826
00:33:25,850 --> 00:33:31,100
when what you're trying to do by

827
00:33:27,770 --> 00:33:32,810
protecting that that asset do they look

828
00:33:31,100 --> 00:33:35,330
at you and think well you're just giving

829
00:33:32,810 --> 00:33:38,060
us more rules that we have to follow do

830
00:33:35,330 --> 00:33:42,409
they resist trying to do things better

831
00:33:38,060 --> 00:33:43,760
in a more secure way what do you do what

832
00:33:42,410 --> 00:33:45,380
you need to do is you have to switch the

833
00:33:43,760 --> 00:33:46,550
conversation instead of saying you have

834
00:33:45,380 --> 00:33:49,250
to do this you have to do this you have

835
00:33:46,550 --> 00:33:53,120
to do this fill out this form do this

836
00:33:49,250 --> 00:33:55,400
etc etc etc you should provide value to

837
00:33:53,120 --> 00:33:57,679
them so remember the development team

838
00:33:55,400 --> 00:33:59,210
they're not PKI experts they know they

839
00:33:57,680 --> 00:34:01,460
have to sign code they know they have to

840
00:33:59,210 --> 00:34:03,530
deal with certificates it's a it's a

841
00:34:01,460 --> 00:34:05,150
must-do it's not that they want to do it

842
00:34:03,530 --> 00:34:07,010
so if you're able to provide an

843
00:34:05,150 --> 00:34:09,020
automated service that allows them to do

844
00:34:07,010 --> 00:34:10,250
this in a very frictionless way you're

845
00:34:09,020 --> 00:34:12,830
going to become the hero for that

846
00:34:10,250 --> 00:34:15,679
development team so it's going to create

847
00:34:12,830 --> 00:34:16,909
a good situation but this you have to

848
00:34:15,679 --> 00:34:19,040
kind of know what their priorities are

849
00:34:16,909 --> 00:34:20,389
so if you think about a development team

850
00:34:19,040 --> 00:34:23,989
their number one priority is to get

851
00:34:20,389 --> 00:34:25,759
quality code out quickly they have a

852
00:34:23,989 --> 00:34:27,259
very complex environment because they

853
00:34:25,760 --> 00:34:29,090
probably have multiple development teams

854
00:34:27,260 --> 00:34:32,540
multiple software development tools they

855
00:34:29,090 --> 00:34:33,890
use a different programming languages if

856
00:34:32,540 --> 00:34:35,719
you ever talk to a software developer

857
00:34:33,889 --> 00:34:38,000
and say can't you just change that tool

858
00:34:35,719 --> 00:34:40,219
and use this instead they're gonna hate

859
00:34:38,000 --> 00:34:42,920
that because they get so attached to

860
00:34:40,219 --> 00:34:44,779
their tools it's it's funny and I'm

861
00:34:42,920 --> 00:34:47,150
embarrassed to say that I'm like that as

862
00:34:44,780 --> 00:34:48,500
well that I have a particular set of

863
00:34:47,150 --> 00:34:49,610
development tools that I like and I

864
00:34:48,500 --> 00:34:51,770
don't want anyone telling me that I

865
00:34:49,610 --> 00:34:53,570
can't use those tools they don't want to

866
00:34:51,770 --> 00:34:54,679
be slowed down with extra processes

867
00:34:53,570 --> 00:34:57,740
especially when they don't see the value

868
00:34:54,679 --> 00:35:00,500
in them and as I said they aren't CS or

869
00:34:57,740 --> 00:35:01,640
code-signing or PKI experts so that's

870
00:35:00,500 --> 00:35:02,870
what you should know about the

871
00:35:01,640 --> 00:35:06,520
development teams that you're trying to

872
00:35:02,870 --> 00:35:08,480
work with so what can you do to kind of

873
00:35:06,520 --> 00:35:10,520
reverse this instead of saying you have

874
00:35:08,480 --> 00:35:13,400
to do this you can reverse the

875
00:35:10,520 --> 00:35:15,640
conversation say hey I can help you do

876
00:35:13,400 --> 00:35:15,640
this

877
00:35:16,420 --> 00:35:24,740
so you want to offer them a platform or

878
00:35:19,490 --> 00:35:26,569
a service that adds value for them so

879
00:35:24,740 --> 00:35:27,950
you want to make sure that it seamlessly

880
00:35:26,570 --> 00:35:30,530
integrates with their development tools

881
00:35:27,950 --> 00:35:31,879
so if you're making them pull out

882
00:35:30,530 --> 00:35:33,980
certain tools that they're familiar with

883
00:35:31,880 --> 00:35:35,420
that's not that's not a good choice but

884
00:35:33,980 --> 00:35:37,490
if you're able to work in a solution

885
00:35:35,420 --> 00:35:39,350
that allows them to continue to use the

886
00:35:37,490 --> 00:35:40,520
tools that they already do they're gonna

887
00:35:39,350 --> 00:35:42,170
like that they're gonna say hey it's no

888
00:35:40,520 --> 00:35:45,290
big deal it's you know just like before

889
00:35:42,170 --> 00:35:46,610
so sure we'll add this you want to be

890
00:35:45,290 --> 00:35:49,460
sure that it doesn't slow down that

891
00:35:46,610 --> 00:35:50,960
process so some code signing tools

892
00:35:49,460 --> 00:35:53,630
require that you up

893
00:35:50,960 --> 00:35:55,790
the executable the code to a cloud

894
00:35:53,630 --> 00:35:58,099
server gets signed there and it gets

895
00:35:55,790 --> 00:36:00,920
downloaded so that's really easy for a

896
00:35:58,099 --> 00:36:02,270
you know a one megabyte piece of code

897
00:36:00,920 --> 00:36:03,740
but when you're thinking about a piece

898
00:36:02,270 --> 00:36:05,180
of code that might be a gigabyte that

899
00:36:03,740 --> 00:36:06,470
takes a long time to upload it and that

900
00:36:05,180 --> 00:36:08,210
makes a long time to download it so then

901
00:36:06,470 --> 00:36:10,759
all horse don't like that so come up

902
00:36:08,210 --> 00:36:14,480
with a solution that makes that go as

903
00:36:10,760 --> 00:36:16,309
fast as possible and then basically you

904
00:36:14,480 --> 00:36:17,930
say hey no longer do you have to deal

905
00:36:16,309 --> 00:36:19,190
with all the certificates yourselves you

906
00:36:17,930 --> 00:36:21,020
don't have to worry about where those

907
00:36:19,190 --> 00:36:23,059
private keys are you don't need to

908
00:36:21,020 --> 00:36:25,490
remember which ones to use which ones

909
00:36:23,059 --> 00:36:26,660
not to use we handle all of that for you

910
00:36:25,490 --> 00:36:28,970
and it's gonna be done seamless

911
00:36:26,660 --> 00:36:30,890
seamlessly and automate it they're gonna

912
00:36:28,970 --> 00:36:32,270
love you they're gonna say this is a

913
00:36:30,890 --> 00:36:34,250
great service for r2

914
00:36:32,270 --> 00:36:36,349
it's going to be a win-win situation a

915
00:36:34,250 --> 00:36:40,460
win for security for the company and a

916
00:36:36,349 --> 00:36:42,859
win for the development team and you

917
00:36:40,460 --> 00:36:45,130
want to be able to show compliance so if

918
00:36:42,859 --> 00:36:47,720
you follow those previous strategies

919
00:36:45,130 --> 00:36:50,359
you're going to end up with Keys stored

920
00:36:47,720 --> 00:36:52,040
in a secure location central location

921
00:36:50,359 --> 00:36:53,450
you know they're safe you know that no

922
00:36:52,040 --> 00:36:55,579
one can get to them that's not

923
00:36:53,450 --> 00:36:57,649
authorized to get to them you're going

924
00:36:55,579 --> 00:36:59,990
to know the the who went who win what

925
00:36:57,650 --> 00:37:01,010
and why what got signed who signed it

926
00:36:59,990 --> 00:37:02,299
when they got signed

927
00:37:01,010 --> 00:37:05,119
what certificates were used all of that

928
00:37:02,299 --> 00:37:06,890
so that's a great audit trail set of

929
00:37:05,119 --> 00:37:08,630
Records you're gonna be able to define

930
00:37:06,890 --> 00:37:10,848
workflows that could be implemented

931
00:37:08,630 --> 00:37:12,770
automatically and that's going to allow

932
00:37:10,849 --> 00:37:14,480
that whole process to go very fast and

933
00:37:12,770 --> 00:37:16,220
it's going to also prevent people from

934
00:37:14,480 --> 00:37:19,280
bypassing that process when it's all

935
00:37:16,220 --> 00:37:20,480
when it's automated and you're going to

936
00:37:19,280 --> 00:37:21,890
know that development teams aren't

937
00:37:20,480 --> 00:37:24,440
straying from what they should be doing

938
00:37:21,890 --> 00:37:27,890
because you are providing a service or

939
00:37:24,440 --> 00:37:29,630
solution that adds value for them so

940
00:37:27,890 --> 00:37:31,520
it's your they're looking at you as a

941
00:37:29,630 --> 00:37:33,920
source of you're making my life better

942
00:37:31,520 --> 00:37:37,040
instead of you're making my life worse

943
00:37:33,920 --> 00:37:39,020
and then you can create a compliance

944
00:37:37,040 --> 00:37:41,299
report if you do all of these things to

945
00:37:39,020 --> 00:37:43,970
say yes we have a code signing policy

946
00:37:41,299 --> 00:37:45,740
we've defined how we're going to enforce

947
00:37:43,970 --> 00:37:50,839
it and we have proof that it's been

948
00:37:45,740 --> 00:37:54,410
enforced company-wide so North covered a

949
00:37:50,839 --> 00:37:56,450
lot I hope the some of the early stuff

950
00:37:54,410 --> 00:37:58,578
about code signing wasn't too basic but

951
00:37:56,450 --> 00:37:59,930
I know at least with other groups that

952
00:37:58,579 --> 00:38:01,579
I've spoken to not everyone's familiar

953
00:37:59,930 --> 00:38:03,200
with code signing especially since it

954
00:38:01,579 --> 00:38:03,930
often happens within the development

955
00:38:03,200 --> 00:38:05,520
organization

956
00:38:03,930 --> 00:38:08,220
but really that the primary thing is

957
00:38:05,520 --> 00:38:10,440
that as InfoSec professionals this is a

958
00:38:08,220 --> 00:38:12,299
really important aspect of your

959
00:38:10,440 --> 00:38:14,119
company's business if it deals with any

960
00:38:12,299 --> 00:38:16,619
kind of software software that's

961
00:38:14,119 --> 00:38:19,950
developed and used internally only or

962
00:38:16,619 --> 00:38:21,809
software that sold as a a product you

963
00:38:19,950 --> 00:38:24,180
have a set of challenges that you need

964
00:38:21,809 --> 00:38:25,589
to be aware of and then there are some

965
00:38:24,180 --> 00:38:28,919
best practices that you can start to

966
00:38:25,589 --> 00:38:33,180
follow that can help you address those

967
00:38:28,920 --> 00:38:34,559
challenges so thanks a lot if you have

968
00:38:33,180 --> 00:38:36,390
questions I'm happy to answer some

969
00:38:34,559 --> 00:38:39,510
questions so you can reach me either at

970
00:38:36,390 --> 00:38:41,759
Twitter or my email address you know I

971
00:38:39,510 --> 00:38:43,230
didn't talk about my company and I did

972
00:38:41,760 --> 00:38:44,670
that intentionally but if you'd like to

973
00:38:43,230 --> 00:38:47,460
find out more about what vinify does

974
00:38:44,670 --> 00:38:49,200
obviously we help with machine

975
00:38:47,460 --> 00:38:52,589
identities including code signing

976
00:38:49,200 --> 00:38:54,960
certificates TLS SSL certificates SSH

977
00:38:52,589 --> 00:38:57,089
I'd be happy to talk to you about that

978
00:38:54,960 --> 00:38:59,240
as well but for now let's are there any

979
00:38:57,089 --> 00:38:59,240
questions

980
00:39:22,520 --> 00:39:27,030
right so that's what developers want to

981
00:39:25,080 --> 00:39:30,690
be able to do to integrate with those

982
00:39:27,030 --> 00:39:32,160
tools so when you do select a service or

983
00:39:30,690 --> 00:39:35,820
a solution that helps automate that

984
00:39:32,160 --> 00:39:37,770
process around code signing it's it's

985
00:39:35,820 --> 00:39:41,100
imperative that those fit into those

986
00:39:37,770 --> 00:39:45,000
tools so you know be it chef or Jenkins

987
00:39:41,100 --> 00:39:47,880
or whatever that solution needs to

988
00:39:45,000 --> 00:39:51,240
basically have an API that allows those

989
00:39:47,880 --> 00:39:54,990
keys to be pulled in automatically from

990
00:39:51,240 --> 00:39:56,609
that secure storage and and secured but

991
00:39:54,990 --> 00:39:59,540
but in an environment that can support

992
00:39:56,610 --> 00:39:59,540
that kind of development

993
00:40:00,860 --> 00:40:07,760
any other questions okay well thanks a

994
00:40:06,660 --> 00:40:13,149
lot

995
00:40:07,760 --> 00:40:13,149
[Applause]

