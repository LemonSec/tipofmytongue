1
00:00:24,860 --> 00:00:32,129
good morning welcome to cybersecurity

2
00:00:29,970 --> 00:00:35,519
zero to hero with cyber chef I am

3
00:00:32,130 --> 00:00:36,780
Jonathan glass all right I have a lot of

4
00:00:35,520 --> 00:00:39,090
slides this is not one of those

5
00:00:36,780 --> 00:00:40,860
presentations where I you know put up

6
00:00:39,090 --> 00:00:41,400
four bullet points and talk about it for

7
00:00:40,860 --> 00:00:43,140
ten minutes

8
00:00:41,400 --> 00:00:46,230
it's like fifty nine of these guys so

9
00:00:43,140 --> 00:00:48,270
let's I got to keep this moving I have a

10
00:00:46,230 --> 00:00:51,000
couple of disclaimers before I get into

11
00:00:48,270 --> 00:00:53,190
my introductions and then I want to roll

12
00:00:51,000 --> 00:00:55,650
into the value I feel cyber chef brings

13
00:00:53,190 --> 00:00:58,349
our industry and then I'm gonna walk

14
00:00:55,650 --> 00:01:00,949
through a couple of recipes and then

15
00:00:58,350 --> 00:01:03,390
jump into some more advanced use cases

16
00:01:00,950 --> 00:01:07,080
and then round off the presentation with

17
00:01:03,390 --> 00:01:11,550
the lessons learned from just my travels

18
00:01:07,080 --> 00:01:14,369
with cyber chef all right I have to say

19
00:01:11,550 --> 00:01:15,600
this clearly the views that I express on

20
00:01:14,369 --> 00:01:17,009
my own and do not necessarily represent

21
00:01:15,600 --> 00:01:18,360
those of the Federal Reserve Bank of New

22
00:01:17,009 --> 00:01:19,740
York or the Federal Reserve System or

23
00:01:18,360 --> 00:01:21,679
those of the University of Richmond

24
00:01:19,740 --> 00:01:24,929
school professional continuing studies

25
00:01:21,680 --> 00:01:28,830
or sound cybersecurity advice in general

26
00:01:24,930 --> 00:01:31,350
so you view this at your own risk all

27
00:01:28,830 --> 00:01:32,940
right second disclaimer the majority

28
00:01:31,350 --> 00:01:34,169
this presentation of things I feel like

29
00:01:32,940 --> 00:01:35,880
you should be doing in cyber chef

30
00:01:34,170 --> 00:01:40,140
because it's easy and it makes you know

31
00:01:35,880 --> 00:01:43,890
other methods seem harder there's a

32
00:01:40,140 --> 00:01:45,420
another 20% or so that are things you

33
00:01:43,890 --> 00:01:47,880
can do in cyber chef but they might be

34
00:01:45,420 --> 00:01:50,069
easier elsewhere and then there's that

35
00:01:47,880 --> 00:01:51,420
5% there of things you probably

36
00:01:50,069 --> 00:01:52,800
shouldn't do in cyber chef but I did

37
00:01:51,420 --> 00:01:56,610
anyways because this is a cyber chef

38
00:01:52,800 --> 00:01:59,280
presentation so there we go

39
00:01:56,610 --> 00:02:01,259
all right so Who am I I'm a malware

40
00:01:59,280 --> 00:02:02,970
analyst with the Federal Reserve I'm on

41
00:02:01,259 --> 00:02:04,560
the National instant response team I'm

42
00:02:02,970 --> 00:02:05,610
also an adjunct instructor with the

43
00:02:04,560 --> 00:02:09,690
University of Richmond school

44
00:02:05,610 --> 00:02:12,000
professional continuing studies I have

45
00:02:09,690 --> 00:02:13,650
authored a digital forensics course a

46
00:02:12,000 --> 00:02:15,810
malware analysis course and a couple of

47
00:02:13,650 --> 00:02:17,610
cyber security Python courses I have a

48
00:02:15,810 --> 00:02:20,700
black hat and a blue hat that I'm

49
00:02:17,610 --> 00:02:21,959
teaching this summer this is my contact

50
00:02:20,700 --> 00:02:26,519
information over here if you need to

51
00:02:21,959 --> 00:02:28,650
heckle send your hate mail there all

52
00:02:26,520 --> 00:02:32,180
right so what is cyber chef show of

53
00:02:28,650 --> 00:02:32,180
hands here who's used cyber chef before

54
00:02:33,040 --> 00:02:37,349
all right we have an alarm for that now

55
00:02:35,620 --> 00:02:40,750
that's awesome

56
00:02:37,349 --> 00:02:42,939
all right so I'm taking the rest of you

57
00:02:40,750 --> 00:02:44,439
haven't and that's awesome so you guys

58
00:02:42,939 --> 00:02:46,060
are smart for coming here before going

59
00:02:44,439 --> 00:02:48,760
to the CTF because you'll get a leg up

60
00:02:46,060 --> 00:02:51,190
on the competition I did talk to those

61
00:02:48,760 --> 00:02:53,048
guys and a lot of their challenges can

62
00:02:51,190 --> 00:02:53,890
be tackled in cyber chef so you guys

63
00:02:53,049 --> 00:02:57,099
might have a leg up

64
00:02:53,890 --> 00:03:01,328
all right so cyber chef is the Swiss

65
00:02:57,099 --> 00:03:04,450
Army knife for doing encryption encoding

66
00:03:01,329 --> 00:03:06,489
compression and data analysis it's made

67
00:03:04,450 --> 00:03:08,858
by the good folks over at GCHQ the UK's

68
00:03:06,489 --> 00:03:11,739
intelligence security and cyber agency

69
00:03:08,859 --> 00:03:15,269
big shout out to GCHQ thank you for

70
00:03:11,739 --> 00:03:18,579
cyber chef and I didn't make this so

71
00:03:15,269 --> 00:03:21,579
send your feedback there yeah all right

72
00:03:18,579 --> 00:03:23,920
so how does it work four main components

73
00:03:21,579 --> 00:03:28,480
to the web app you have an input field

74
00:03:23,920 --> 00:03:31,839
here where you either type or drag data

75
00:03:28,480 --> 00:03:35,709
to be processed you have an output where

76
00:03:31,840 --> 00:03:37,989
your output will be displayed over here

77
00:03:35,709 --> 00:03:42,489
you have operations column which has a

78
00:03:37,989 --> 00:03:45,819
list of operations that are grouped into

79
00:03:42,489 --> 00:03:47,470
categories so that you can stumble

80
00:03:45,819 --> 00:03:49,119
through finding an operation or there's

81
00:03:47,470 --> 00:03:50,739
a search bar up here that's really

82
00:03:49,120 --> 00:03:52,930
helpful and then in the middle you have

83
00:03:50,739 --> 00:03:55,150
a recipe field where you can rack and

84
00:03:52,930 --> 00:03:59,500
stack operations to accomplish your

85
00:03:55,150 --> 00:04:01,930
specific goal all right all right when I

86
00:03:59,500 --> 00:04:03,099
say operations what do I mean I'm not

87
00:04:01,930 --> 00:04:05,620
going to read all these but these are

88
00:04:03,099 --> 00:04:10,448
some of the my favorites but things like

89
00:04:05,620 --> 00:04:13,629
taking the input data and manipulating

90
00:04:10,449 --> 00:04:18,010
it from hex or to hex or from base64 to

91
00:04:13,629 --> 00:04:18,969
base64 regular expressions I'm a big fan

92
00:04:18,010 --> 00:04:21,010
of that you're gonna see that throughout

93
00:04:18,970 --> 00:04:22,599
the rest of this it's more of a regular

94
00:04:21,010 --> 00:04:25,570
expression presentation than anything

95
00:04:22,599 --> 00:04:26,919
but uh brought to you by regular

96
00:04:25,570 --> 00:04:29,770
expressions yeah

97
00:04:26,919 --> 00:04:33,310
but that's just a handful of things you

98
00:04:29,770 --> 00:04:36,909
can do there's about 300 operations all

99
00:04:33,310 --> 00:04:40,300
right so the value of cyber chef the

100
00:04:36,909 --> 00:04:42,820
pitch I gave Jake and Chris was about I

101
00:04:40,300 --> 00:04:46,289
teach cybersecurity courses and I'm a

102
00:04:42,820 --> 00:04:48,629
big Python junkie and I

103
00:04:46,289 --> 00:04:50,009
that when I started building courses I

104
00:04:48,629 --> 00:04:52,379
wanted everyone to learn Python

105
00:04:50,009 --> 00:04:53,699
immediately and learn like you know

106
00:04:52,379 --> 00:04:56,939
forensics or malware analysis at the

107
00:04:53,699 --> 00:04:59,219
same time and I I found like teaching

108
00:04:56,939 --> 00:05:01,710
two things at the same time detracted

109
00:04:59,219 --> 00:05:02,909
from both and it was really hard to

110
00:05:01,710 --> 00:05:06,808
expect that for people that didn't have

111
00:05:02,909 --> 00:05:10,379
experience in any of it so having a

112
00:05:06,809 --> 00:05:12,930
drag-and-drop menu of things to try in a

113
00:05:10,379 --> 00:05:14,669
web GUI is a comfortable safe space for

114
00:05:12,930 --> 00:05:18,210
for people that are getting into the

115
00:05:14,669 --> 00:05:20,698
industry or even even the seasoned

116
00:05:18,210 --> 00:05:22,049
Greybeards in in the crowd here that

117
00:05:20,699 --> 00:05:24,209
just don't want to crack open an

118
00:05:22,050 --> 00:05:26,580
interpreter and go through all the typos

119
00:05:24,209 --> 00:05:27,689
that are needed to to get to where you

120
00:05:26,580 --> 00:05:30,859
need to be if you don't do it on a daily

121
00:05:27,689 --> 00:05:32,759
basis this makes it a lot easier

122
00:05:30,860 --> 00:05:36,089
additionally I do want to teach

123
00:05:32,759 --> 00:05:38,219
programming to the students but maybe

124
00:05:36,089 --> 00:05:40,499
not all at once so I like the idea of

125
00:05:38,219 --> 00:05:43,439
bringing on programming concepts like

126
00:05:40,499 --> 00:05:46,080
order of operations how you know basic

127
00:05:43,439 --> 00:05:51,360
functions work different types of data

128
00:05:46,080 --> 00:05:51,508
you know binary hex things like that all

129
00:05:51,360 --> 00:05:53,849
right

130
00:05:51,509 --> 00:05:56,370
another big value of cyber chef is that

131
00:05:53,849 --> 00:05:58,080
it's serverless and Static you uh you

132
00:05:56,370 --> 00:06:00,930
run it client-side it's all JavaScript

133
00:05:58,080 --> 00:06:03,058
right there's nothing to install it's

134
00:06:00,930 --> 00:06:04,589
it's cross browser compatible you can

135
00:06:03,059 --> 00:06:09,269
run it on a iPad if you're really

136
00:06:04,589 --> 00:06:11,759
desperate it's a great utility another

137
00:06:09,269 --> 00:06:16,229
great value that I've been using is how

138
00:06:11,759 --> 00:06:18,180
it parses the URL parameters so you can

139
00:06:16,229 --> 00:06:19,318
save like a list of bookmarks with all

140
00:06:18,180 --> 00:06:21,809
your recipes in it and I'll get to that

141
00:06:19,319 --> 00:06:23,459
in a little bit but it's not overly

142
00:06:21,809 --> 00:06:25,019
difficult to customize if you're looking

143
00:06:23,459 --> 00:06:28,139
to you know build your own operations

144
00:06:25,019 --> 00:06:30,509
it's it's JavaScript it's and most

145
00:06:28,139 --> 00:06:32,729
importantly it's free so it's available

146
00:06:30,509 --> 00:06:36,330
to all go download it's the links at the

147
00:06:32,729 --> 00:06:38,039
top of the presentation all right so I

148
00:06:36,330 --> 00:06:39,419
made a chart because my presentation

149
00:06:38,039 --> 00:06:42,568
just didn't have enough colors or charts

150
00:06:39,419 --> 00:06:44,219
or you know fancy things but don't hold

151
00:06:42,569 --> 00:06:48,409
me to any of this this is all just more

152
00:06:44,219 --> 00:06:51,839
of a metaphor than anything alright so

153
00:06:48,409 --> 00:06:54,930
this is supposed to be comparing the how

154
00:06:51,839 --> 00:06:59,190
hard a task is based on how simple it is

155
00:06:54,930 --> 00:07:02,590
in terms of cyber chef and Python

156
00:06:59,190 --> 00:07:05,050
so for my digital forensics course basic

157
00:07:02,590 --> 00:07:06,520
tasks are easier in cyber chef but

158
00:07:05,050 --> 00:07:09,190
Python becomes necessary like you're not

159
00:07:06,520 --> 00:07:12,750
parsing an MFT like in its entirety in

160
00:07:09,190 --> 00:07:15,460
cyber chef that's just it's a bad plan

161
00:07:12,750 --> 00:07:17,500
intro to malware analysis I get a lot of

162
00:07:15,460 --> 00:07:20,530
value out of combining simple tasks in

163
00:07:17,500 --> 00:07:22,990
cyber chef but Python still becomes

164
00:07:20,530 --> 00:07:26,138
necessary for a lot of more complicated

165
00:07:22,990 --> 00:07:28,360
analyses alright my blackhat Python

166
00:07:26,139 --> 00:07:31,120
course as you can imagine is Python from

167
00:07:28,360 --> 00:07:32,380
start to finish and that's just how it

168
00:07:31,120 --> 00:07:35,020
is so I don't really know if anything's

169
00:07:32,380 --> 00:07:40,870
easier in cyber chef and then my work

170
00:07:35,020 --> 00:07:43,719
life is is more just a tapestry of tasks

171
00:07:40,870 --> 00:07:47,020
that where I find Python personally more

172
00:07:43,720 --> 00:07:49,449
like easy but there's a place for cyber

173
00:07:47,020 --> 00:07:50,979
chef in my routine and then there's this

174
00:07:49,449 --> 00:07:52,569
critical point here where the complexity

175
00:07:50,979 --> 00:07:53,560
of the task reaches a point where it

176
00:07:52,569 --> 00:07:58,419
doesn't really matter what I'm using

177
00:07:53,560 --> 00:08:00,550
it's just garbage all right so I've

178
00:07:58,419 --> 00:08:02,698
talked about the value cyber chef has

179
00:08:00,550 --> 00:08:06,270
let's let's get into the the weeds here

180
00:08:02,699 --> 00:08:10,360
all right simple stuff input field

181
00:08:06,270 --> 00:08:13,000
base64 data in the recipe column we have

182
00:08:10,360 --> 00:08:16,650
a single operation which is from base64

183
00:08:13,000 --> 00:08:21,069
in the output field we have the unn

184
00:08:16,650 --> 00:08:25,719
base64 basically for decoded data pretty

185
00:08:21,069 --> 00:08:27,430
simple stuff all right so another

186
00:08:25,719 --> 00:08:28,900
one-hitter we have here is unzipping a

187
00:08:27,430 --> 00:08:30,909
password-protected zip file and I use

188
00:08:28,900 --> 00:08:33,510
this a lot when I'm getting a sample

189
00:08:30,909 --> 00:08:37,450
from say online malware repository or a

190
00:08:33,510 --> 00:08:39,520
sandbox and I need to pull down a file

191
00:08:37,450 --> 00:08:40,870
and an unzip it with a password and I

192
00:08:39,520 --> 00:08:42,939
don't want antivirus to trip on it so

193
00:08:40,870 --> 00:08:45,970
this sort of happens inside of the the

194
00:08:42,940 --> 00:08:47,380
browser's memory and it's a like a nice

195
00:08:45,970 --> 00:08:48,970
safe place to manipulate this data

196
00:08:47,380 --> 00:08:51,939
without you know fearing it being

197
00:08:48,970 --> 00:08:56,100
accidentally executed so you use the

198
00:08:51,940 --> 00:09:00,250
unzip operation type in the password and

199
00:08:56,100 --> 00:09:02,620
dragging the file to the input box and

200
00:09:00,250 --> 00:09:05,380
then on the output box you see the Exe

201
00:09:02,620 --> 00:09:07,500
in its raw form or a representation of

202
00:09:05,380 --> 00:09:07,500
it

203
00:09:08,720 --> 00:09:14,329
all right the real value of cyber chef

204
00:09:10,730 --> 00:09:16,850
comes in when you combine operations so

205
00:09:14,329 --> 00:09:19,128
you can rack and stack these and adjust

206
00:09:16,850 --> 00:09:20,269
the arguments to accomplish the tasks

207
00:09:19,129 --> 00:09:24,709
that you're trying to do so it's a very

208
00:09:20,269 --> 00:09:28,279
tactical approach it's so what we've got

209
00:09:24,709 --> 00:09:29,869
here is a base64 sample inside of a

210
00:09:28,279 --> 00:09:31,250
password-protected zip file and I don't

211
00:09:29,870 --> 00:09:33,079
know why anyone would ever do this but

212
00:09:31,250 --> 00:09:35,839
you run into situations like this where

213
00:09:33,079 --> 00:09:40,758
a sample from a sandbox is basically

214
00:09:35,839 --> 00:09:42,709
four encoded for some reason we have two

215
00:09:40,759 --> 00:09:45,439
operations in the recipe field so we

216
00:09:42,709 --> 00:09:47,689
have unzip and basics before it goes

217
00:09:45,439 --> 00:09:49,550
through the input data goes through both

218
00:09:47,689 --> 00:09:50,779
of those operations and get this gets

219
00:09:49,550 --> 00:09:52,219
displayed on the output and that's

220
00:09:50,779 --> 00:09:55,819
that's where we have our clear text

221
00:09:52,220 --> 00:09:57,680
information here one of the things I

222
00:09:55,819 --> 00:10:00,639
love the most about cyber chef in when

223
00:09:57,680 --> 00:10:03,290
teaching is how you can see the data

224
00:10:00,639 --> 00:10:05,089
change throughout your operational steps

225
00:10:03,290 --> 00:10:06,589
which is something that the students

226
00:10:05,089 --> 00:10:08,990
have a hard time with when you just give

227
00:10:06,589 --> 00:10:10,250
them a Python script it runs all these

228
00:10:08,990 --> 00:10:12,470
different functions and the output just

229
00:10:10,250 --> 00:10:14,540
happens they don't understand why the

230
00:10:12,470 --> 00:10:16,160
steps are there and what happens to

231
00:10:14,540 --> 00:10:19,759
manipulate the data throughout that

232
00:10:16,160 --> 00:10:23,870
process so that's cool all right here's

233
00:10:19,759 --> 00:10:27,379
another recipe that I found kind of

234
00:10:23,870 --> 00:10:29,649
helpful so in addition to data

235
00:10:27,379 --> 00:10:33,040
manipulation operations I was tough

236
00:10:29,649 --> 00:10:35,540
there are flow control operations which

237
00:10:33,040 --> 00:10:38,259
this one for instance the fork command

238
00:10:35,540 --> 00:10:42,769
will split the input field by a specific

239
00:10:38,259 --> 00:10:45,740
delimiter and will treat each new line

240
00:10:42,769 --> 00:10:47,540
as a new input field so the remainder of

241
00:10:45,740 --> 00:10:50,449
the operations in this recipe will get

242
00:10:47,540 --> 00:10:52,790
executed against each line of this so

243
00:10:50,449 --> 00:10:57,079
this is resolving a list of domain names

244
00:10:52,790 --> 00:10:59,509
so I does I resolve google.com over DNS

245
00:10:57,079 --> 00:11:02,719
over HTTP and then it returns a JSON

246
00:10:59,509 --> 00:11:05,629
object so I use a J path operation to

247
00:11:02,720 --> 00:11:07,550
just tailor the the response to just the

248
00:11:05,629 --> 00:11:09,170
information I need and then you can see

249
00:11:07,550 --> 00:11:11,389
that gets displayed and it goes to

250
00:11:09,170 --> 00:11:13,699
apple.com and then you know john got

251
00:11:11,389 --> 00:11:16,519
glass and it goes down the list so that

252
00:11:13,699 --> 00:11:20,199
you get you know very specific

253
00:11:16,519 --> 00:11:20,199
information from your input data

254
00:11:21,750 --> 00:11:26,699
another one I found useful is just a

255
00:11:23,699 --> 00:11:30,269
small recipe is using Yara signatures to

256
00:11:26,699 --> 00:11:32,729
scan against a binary data so this is a

257
00:11:30,269 --> 00:11:35,160
process dump from an online sandbox and

258
00:11:32,730 --> 00:11:38,370
I just dragged it into the input field

259
00:11:35,160 --> 00:11:41,850
and I used a Yarra signature for the

260
00:11:38,370 --> 00:11:43,500
Nano core remote access trojan and on

261
00:11:41,850 --> 00:11:46,649
the output field it displays the number

262
00:11:43,500 --> 00:11:50,300
of matches that occurred during or

263
00:11:46,649 --> 00:11:50,300
during the scan of this process memory

264
00:11:51,170 --> 00:11:56,399
pretty pretty cool stuff so those are a

265
00:11:54,089 --> 00:11:58,290
couple of examples of smaller recipe

266
00:11:56,399 --> 00:11:59,610
like one two I think the most the

267
00:11:58,290 --> 00:12:03,000
biggest one we had was three different

268
00:11:59,610 --> 00:12:05,069
operations now we're gonna take it a

269
00:12:03,000 --> 00:12:10,529
little bit further and kind of go on a

270
00:12:05,069 --> 00:12:11,639
journey here so buckle up alright I

271
00:12:10,529 --> 00:12:13,800
don't know if you guys have ever heard

272
00:12:11,639 --> 00:12:16,560
of me a motet but one of the defining

273
00:12:13,800 --> 00:12:19,949
characteristics is it uses something

274
00:12:16,560 --> 00:12:21,869
called malware yeah it's a it's got a

275
00:12:19,949 --> 00:12:24,930
macro enabled word doc has anyone ever

276
00:12:21,870 --> 00:12:28,529
seen one of those no okay

277
00:12:24,930 --> 00:12:31,079
well it's got a macro that runs a office

278
00:12:28,529 --> 00:12:34,139
kated powershell command when it's

279
00:12:31,079 --> 00:12:38,819
launched big big surprise to the

280
00:12:34,139 --> 00:12:42,209
industry but here is an example of that

281
00:12:38,819 --> 00:12:44,849
so I drug the file into the input field

282
00:12:42,209 --> 00:12:47,069
and I scroll down a little bit and like

283
00:12:44,850 --> 00:12:48,240
any good hex editor or you know binary

284
00:12:47,069 --> 00:12:50,339
data is kind of represented with dots

285
00:12:48,240 --> 00:12:52,949
but if you scroll down you can start to

286
00:12:50,339 --> 00:12:56,120
see artifacts of Windows process

287
00:12:52,949 --> 00:12:59,910
execution you see the windows system32

288
00:12:56,120 --> 00:13:01,589
cmd.exe so this is the obfuscated

289
00:12:59,910 --> 00:13:03,779
command that gets run when the macro is

290
00:13:01,589 --> 00:13:05,490
enabled so we want to take a look at

291
00:13:03,779 --> 00:13:09,720
that and get some actionable threat

292
00:13:05,490 --> 00:13:11,970
intelligence from it so regex

293
00:13:09,720 --> 00:13:16,170
I love regex you should use regex as

294
00:13:11,970 --> 00:13:19,949
much as possible it's amazing I didn't

295
00:13:16,170 --> 00:13:21,870
love regex is until cyber chef it made

296
00:13:19,949 --> 00:13:24,449
it a lot easier to understand how it all

297
00:13:21,870 --> 00:13:27,480
works so what I'm doing here is I'm

298
00:13:24,449 --> 00:13:29,219
going to capture everything past CMD dot

299
00:13:27,480 --> 00:13:32,189
exe and then it stops at a particular

300
00:13:29,220 --> 00:13:34,850
point based on you know just looking at

301
00:13:32,189 --> 00:13:40,730
the script all right

302
00:13:34,850 --> 00:13:43,640
so then we end up with this mess but so

303
00:13:40,730 --> 00:13:47,990
so far we're at one recipe I'm sorry one

304
00:13:43,640 --> 00:13:49,790
operation in the recipe alright you guys

305
00:13:47,990 --> 00:13:52,430
seen this before the ossification or da

306
00:13:49,790 --> 00:13:54,620
sophistication the carrot symbol here

307
00:13:52,430 --> 00:13:57,020
just for a quick history lesson is used

308
00:13:54,620 --> 00:14:00,620
as a an escape character for Windows

309
00:13:57,020 --> 00:14:02,449
batch files so the whatever's past the

310
00:14:00,620 --> 00:14:04,010
carrot character gets treated as a

311
00:14:02,450 --> 00:14:06,050
literal string instead of a special

312
00:14:04,010 --> 00:14:08,600
character so you can literally

313
00:14:06,050 --> 00:14:09,650
throughout your batch file and it just

314
00:14:08,600 --> 00:14:11,210
treats it like you know the next

315
00:14:09,650 --> 00:14:14,420
character it makes it harder to read for

316
00:14:11,210 --> 00:14:17,870
people and you know signature detection

317
00:14:14,420 --> 00:14:21,050
is is uh it's pretty rough on this sort

318
00:14:17,870 --> 00:14:23,510
of information but so let's just get rid

319
00:14:21,050 --> 00:14:25,130
of it alright so we're gonna use the the

320
00:14:23,510 --> 00:14:27,170
find and replace command so we're gonna

321
00:14:25,130 --> 00:14:28,820
find that carrot and just replace it

322
00:14:27,170 --> 00:14:33,680
with nothing so effectively deleting it

323
00:14:28,820 --> 00:14:37,580
and now we've got still a big paddle

324
00:14:33,680 --> 00:14:42,500
mess here but no more carrots alright so

325
00:14:37,580 --> 00:14:45,050
we're to operations alright so the way

326
00:14:42,500 --> 00:14:46,460
this works is it at the beginning of the

327
00:14:45,050 --> 00:14:48,439
script it will set an environment

328
00:14:46,460 --> 00:14:52,790
variable and I'll fill it with mostly

329
00:14:48,440 --> 00:14:57,380
just gibberish and then down here we've

330
00:14:52,790 --> 00:14:59,120
got a for loop or loop it starts at the

331
00:14:57,380 --> 00:15:01,010
back of the string and works its way

332
00:14:59,120 --> 00:15:02,590
forward and it grabs one character skips

333
00:15:01,010 --> 00:15:05,750
three grabs one character skips three

334
00:15:02,590 --> 00:15:09,350
and and that's how it D office gates

335
00:15:05,750 --> 00:15:12,080
this mess and then down I guess number

336
00:15:09,350 --> 00:15:13,940
four would be it calls the that that

337
00:15:12,080 --> 00:15:17,810
particular string so we'll see how that

338
00:15:13,940 --> 00:15:19,760
goes all right so we just want to

339
00:15:17,810 --> 00:15:21,260
capture ok I'm sorry capture the

340
00:15:19,760 --> 00:15:23,120
information that's saved in the

341
00:15:21,260 --> 00:15:27,790
environment variable so I use yet

342
00:15:23,120 --> 00:15:34,310
another regex because I just love them

343
00:15:27,790 --> 00:15:36,410
all right and since it's going from the

344
00:15:34,310 --> 00:15:38,270
backwards to the front I found it easier

345
00:15:36,410 --> 00:15:41,569
to just use the reverse operation and

346
00:15:38,270 --> 00:15:44,900
flip the script so that the back is now

347
00:15:41,570 --> 00:15:48,229
the front I use this a lot in a couple

348
00:15:44,900 --> 00:15:50,029
of courses where I found

349
00:15:48,229 --> 00:15:52,309
my students were having trouble

350
00:15:50,029 --> 00:15:56,719
unzipping files because of one reason or

351
00:15:52,309 --> 00:15:59,029
another so I would reverse the payloads

352
00:15:56,719 --> 00:16:00,649
by byte order and I would give them an

353
00:15:59,029 --> 00:16:03,139
exe where the byte order was reversed

354
00:16:00,649 --> 00:16:09,829
and you know making it really difficult

355
00:16:03,139 --> 00:16:14,149
to execute all right so more regex this

356
00:16:09,829 --> 00:16:15,589
one's pretty clever I think so I'm I'm

357
00:16:14,149 --> 00:16:17,539
grabbing the first character and then

358
00:16:15,589 --> 00:16:18,799
I'm skipping three and it just keeps

359
00:16:17,539 --> 00:16:20,269
going throughout here and I'm sorry for

360
00:16:18,799 --> 00:16:23,649
the color scheme I didn't I didn't pick

361
00:16:20,269 --> 00:16:23,649
it it is a bit of an eyesore

362
00:16:25,329 --> 00:16:32,959
and then a pattern emerges so we can see

363
00:16:30,019 --> 00:16:35,959
the the matching group here and then we

364
00:16:32,959 --> 00:16:37,699
can see the the capture group in the

365
00:16:35,959 --> 00:16:43,279
second field and so we can start to see

366
00:16:37,699 --> 00:16:48,169
the P Oh wer the D alpha skated code

367
00:16:43,279 --> 00:16:52,099
gets represented here so I think we're

368
00:16:48,169 --> 00:16:54,139
into the five or six operation range

369
00:16:52,099 --> 00:16:59,299
with most of that's just cleaning up

370
00:16:54,139 --> 00:17:01,819
you know the obfuscation this is one of

371
00:16:59,299 --> 00:17:03,379
the cooler parts of doing manual

372
00:17:01,819 --> 00:17:06,309
analysis as opposed to just firing it

373
00:17:03,379 --> 00:17:10,039
off in a sandbox so with a motet they

374
00:17:06,309 --> 00:17:11,539
include five different c2 addresses per

375
00:17:10,039 --> 00:17:12,919
sample because you know the first one

376
00:17:11,539 --> 00:17:14,990
doesn't work you don't want your payload

377
00:17:12,919 --> 00:17:18,049
to die you know to try you know the next

378
00:17:14,990 --> 00:17:20,179
four and what we can do by gleaning this

379
00:17:18,049 --> 00:17:24,168
information out manually or you know

380
00:17:20,179 --> 00:17:26,509
quasi manually is do better campaign

381
00:17:24,169 --> 00:17:28,940
analysis by you know comparing these

382
00:17:26,509 --> 00:17:31,809
URLs to last week sample or next week

383
00:17:28,940 --> 00:17:34,999
sample and you can kind of attribute

384
00:17:31,809 --> 00:17:37,879
more threat intelligence based on you

385
00:17:34,999 --> 00:17:40,639
know more data all right so big

386
00:17:37,879 --> 00:17:42,980
takeaways from this is we have one two

387
00:17:40,639 --> 00:17:45,498
three four five URLs in here and it's

388
00:17:42,980 --> 00:17:47,389
split by an @ sign or its I'm sorry

389
00:17:45,499 --> 00:17:49,159
joined by an @ sign and then later split

390
00:17:47,389 --> 00:17:52,100
and then it'll loop through it

391
00:17:49,159 --> 00:17:54,769
another hard io see here that it's good

392
00:17:52,100 --> 00:17:57,350
to glean is this IHH dot exe that is

393
00:17:54,769 --> 00:18:00,310
hard-coded into the payload so that it's

394
00:17:57,350 --> 00:18:02,649
a it's a good evidence of execution I

395
00:18:00,310 --> 00:18:05,919
see to look for in like prefetch or you

396
00:18:02,650 --> 00:18:11,490
know any other artifact that there's a

397
00:18:05,920 --> 00:18:15,520
good for that all right let's see okay

398
00:18:11,490 --> 00:18:18,280
more regex because I can't get enough so

399
00:18:15,520 --> 00:18:21,760
I grabbed just the list of IOC or just a

400
00:18:18,280 --> 00:18:24,250
list of URLs and then down here I just

401
00:18:21,760 --> 00:18:26,650
use the split operation to split by the

402
00:18:24,250 --> 00:18:30,970
@ sign and then join it by a newline and

403
00:18:26,650 --> 00:18:36,100
I hit my my goal of getting all five c2

404
00:18:30,970 --> 00:18:39,190
addresses and so in innate drag-and-drop

405
00:18:36,100 --> 00:18:43,990
operations we were able to go from just

406
00:18:39,190 --> 00:18:48,760
chaos in binary to five c2 addresses in

407
00:18:43,990 --> 00:18:51,190
relatively quick order but not only is

408
00:18:48,760 --> 00:18:53,740
this easy it's also repeatable so these

409
00:18:51,190 --> 00:18:59,410
recipes can be saved to your local

410
00:18:53,740 --> 00:19:01,120
storage or saved as bookmarks so if you

411
00:18:59,410 --> 00:19:03,100
look at this datalink you can save these

412
00:19:01,120 --> 00:19:05,739
bookmarks into your you know like a

413
00:19:03,100 --> 00:19:08,199
folder and your browser and just when

414
00:19:05,740 --> 00:19:10,870
you revisit cyber chef you can you can

415
00:19:08,200 --> 00:19:13,900
bring up your recipe and just have it

416
00:19:10,870 --> 00:19:15,929
waiting there for you this particular

417
00:19:13,900 --> 00:19:19,330
recipe if you tailor your regex

418
00:19:15,930 --> 00:19:21,250
loose enough to be valuable you can just

419
00:19:19,330 --> 00:19:23,620
drag you know next week sample in here

420
00:19:21,250 --> 00:19:25,990
and it'll just give you the URLs so it

421
00:19:23,620 --> 00:19:28,600
you know whatever time you invest in in

422
00:19:25,990 --> 00:19:31,030
making these recipes is is is a force

423
00:19:28,600 --> 00:19:32,290
multiplier you know for the next you

424
00:19:31,030 --> 00:19:38,500
know however many samples you end up

425
00:19:32,290 --> 00:19:41,050
getting alright so we've covered small

426
00:19:38,500 --> 00:19:44,200
recipes one or twos we covered a larger

427
00:19:41,050 --> 00:19:46,740
one which is a I think around eight

428
00:19:44,200 --> 00:19:49,180
operations it could have been less but I

429
00:19:46,740 --> 00:19:53,350
love regex so much I put in a couple

430
00:19:49,180 --> 00:19:55,600
extra but now let's get into a larger

431
00:19:53,350 --> 00:19:57,550
recipe and sort of highlight not

432
00:19:55,600 --> 00:20:00,010
necessarily where the value tapers off

433
00:19:57,550 --> 00:20:02,649
but like how much effort you need to put

434
00:20:00,010 --> 00:20:08,020
into cyber chef to in order to achieve

435
00:20:02,650 --> 00:20:12,040
some goals all right I decided to make a

436
00:20:08,020 --> 00:20:13,730
forensic parser in Cyprus chef so I used

437
00:20:12,040 --> 00:20:17,720
the windows

438
00:20:13,730 --> 00:20:19,220
cycle been info $2.00 on I files because

439
00:20:17,720 --> 00:20:20,780
it's pretty much like the simplest

440
00:20:19,220 --> 00:20:25,280
artifact I can think of it's only got

441
00:20:20,780 --> 00:20:26,300
four fields ten if you count Windows 10

442
00:20:25,280 --> 00:20:29,930
I'm sorry

443
00:20:26,300 --> 00:20:31,159
Bob if you can't Windows 10 but

444
00:20:29,930 --> 00:20:33,230
basically it's kind of eight byte header

445
00:20:31,160 --> 00:20:35,570
it's got an 8 byte file size it's got an

446
00:20:33,230 --> 00:20:39,580
8 byte file time object for the deleted

447
00:20:35,570 --> 00:20:44,090
timestamp and then it's got a file name

448
00:20:39,580 --> 00:20:45,740
stored in Unicode and I wanted to go

449
00:20:44,090 --> 00:20:49,550
through there and kind of loop through

450
00:20:45,740 --> 00:20:50,750
it and and produce the output of you

451
00:20:49,550 --> 00:20:56,210
know when was this deleted and what was

452
00:20:50,750 --> 00:20:58,670
it so the idea behind this parser is

453
00:20:56,210 --> 00:21:00,530
fairly simple the the first eight bytes

454
00:20:58,670 --> 00:21:03,530
is what version of prefetch it is so

455
00:21:00,530 --> 00:21:06,110
it's uh it's either has a 0 1 or 0 2

456
00:21:03,530 --> 00:21:07,670
it's a 0 2 then you have to start at a

457
00:21:06,110 --> 00:21:12,679
different offset to get the file path

458
00:21:07,670 --> 00:21:14,810
and then so I parse through the the file

459
00:21:12,680 --> 00:21:16,250
path and then I parts through the

460
00:21:14,810 --> 00:21:19,550
deleted date and then it parts the file

461
00:21:16,250 --> 00:21:21,500
size and then I stop and do nothing and

462
00:21:19,550 --> 00:21:24,800
it's important to kind of conceptualize

463
00:21:21,500 --> 00:21:27,440
these blocks while you're going through

464
00:21:24,800 --> 00:21:30,470
it because cyberships you can only see

465
00:21:27,440 --> 00:21:34,970
like a couple of operations at a time so

466
00:21:30,470 --> 00:21:42,410
you you need to have a plan as you're

467
00:21:34,970 --> 00:21:48,740
going through it so the reality of this

468
00:21:42,410 --> 00:21:49,850
ends up being around 24 steps so I don't

469
00:21:48,740 --> 00:21:51,170
necessarily want to go through all of

470
00:21:49,850 --> 00:21:54,490
them but I did want to highlight some of

471
00:21:51,170 --> 00:21:56,720
the functions that were available so

472
00:21:54,490 --> 00:21:58,400
conditional jumps are is another one of

473
00:21:56,720 --> 00:22:01,130
those flow control operations that

474
00:21:58,400 --> 00:22:02,720
allows you to you know define a regex

475
00:22:01,130 --> 00:22:06,470
and then you know if it's this then do

476
00:22:02,720 --> 00:22:09,650
that I lean on finally replace a lot to

477
00:22:06,470 --> 00:22:11,510
clean things up subsection is very much

478
00:22:09,650 --> 00:22:17,060
like the fork command ball that it runs

479
00:22:11,510 --> 00:22:21,470
certain operations against data that is

480
00:22:17,060 --> 00:22:23,750
like at a certain offset let's say any

481
00:22:21,470 --> 00:22:25,400
of the other cool ones the Windows File

482
00:22:23,750 --> 00:22:26,320
time the UNIX timestamp was really

483
00:22:25,400 --> 00:22:28,179
helpful at

484
00:22:26,320 --> 00:22:31,889
cut down on a few operations in the from

485
00:22:28,179 --> 00:22:35,980
UNIX timestamp to a date also helpful

486
00:22:31,889 --> 00:22:38,649
alright so we keep going I put in my

487
00:22:35,980 --> 00:22:40,480
original pass at this was around 40

488
00:22:38,649 --> 00:22:43,479
operations I was just dragging things in

489
00:22:40,480 --> 00:22:46,210
and and then I got it down to like 36

490
00:22:43,480 --> 00:22:49,059
and then I got it down dolla I want to

491
00:22:46,210 --> 00:22:50,710
say around 24 bare bones then I added

492
00:22:49,059 --> 00:22:54,158
four more just to clean things up and

493
00:22:50,710 --> 00:22:57,880
this is where I feel like I should

494
00:22:54,159 --> 00:22:59,950
probably stop teaching my students to

495
00:22:57,880 --> 00:23:01,240
use cyber chef per se I will give this

496
00:22:59,950 --> 00:23:03,190
recipe to them but I wouldn't expect

497
00:23:01,240 --> 00:23:07,210
them to produce it because I don't know

498
00:23:03,190 --> 00:23:11,470
that it's enforced reinforcing the

499
00:23:07,210 --> 00:23:13,120
values that I want them to have in a in

500
00:23:11,470 --> 00:23:14,980
a way that would teach them something

501
00:23:13,120 --> 00:23:17,529
that is like fundamental I think that

502
00:23:14,980 --> 00:23:18,850
it's this is it's it's it's helpful that

503
00:23:17,529 --> 00:23:21,190
it runs but I don't know that you know

504
00:23:18,850 --> 00:23:22,658
learning it this way is a solid

505
00:23:21,190 --> 00:23:33,039
foundation on how you should proceed in

506
00:23:22,659 --> 00:23:36,159
your you know education I do sir I I

507
00:23:33,039 --> 00:23:39,970
thought about having a comparison there

508
00:23:36,159 --> 00:23:42,940
and I didn't want to lose so I have a

509
00:23:39,970 --> 00:23:45,669
habit of putting massive amounts of

510
00:23:42,940 --> 00:23:48,610
source code into PowerPoint and it never

511
00:23:45,669 --> 00:23:49,539
works out well so I was trying to lean

512
00:23:48,610 --> 00:23:52,029
away from that but that was a

513
00:23:49,539 --> 00:23:55,389
consideration it's yeah I thought I

514
00:23:52,029 --> 00:24:00,820
could probably do this in like three or

515
00:23:55,389 --> 00:24:03,209
four lines and that also gets to another

516
00:24:00,820 --> 00:24:06,070
one of my points where I have to balance

517
00:24:03,210 --> 00:24:08,500
how clever I am because as a as an

518
00:24:06,070 --> 00:24:09,850
InfoSec you know just wizard I like to

519
00:24:08,500 --> 00:24:13,600
show people that I can do anything with

520
00:24:09,850 --> 00:24:16,330
almost nothing at all and but when I

521
00:24:13,600 --> 00:24:18,490
when I try to teach like clever is the

522
00:24:16,330 --> 00:24:19,899
enemy of comprehension like if I can

523
00:24:18,490 --> 00:24:22,120
show you this one liner that's you know

524
00:24:19,899 --> 00:24:24,610
yay long but it does everything you're

525
00:24:22,120 --> 00:24:26,918
looking for but then I have to break

526
00:24:24,610 --> 00:24:28,330
each point down and how nested it is and

527
00:24:26,919 --> 00:24:31,120
like you know demonstrate well this is

528
00:24:28,330 --> 00:24:33,428
going to do that and in loop I lose

529
00:24:31,120 --> 00:24:35,168
people like left and right they start

530
00:24:33,429 --> 00:24:36,909
glazing over and then you know the whole

531
00:24:35,169 --> 00:24:39,389
thing is gone so I have to find that

532
00:24:36,909 --> 00:24:39,389
balance between

533
00:24:39,530 --> 00:24:43,549
teaching people you know the

534
00:24:41,870 --> 00:24:47,209
fundamentals and then showing them cool

535
00:24:43,549 --> 00:24:48,530
stuff so that I stay interested so but

536
00:24:47,210 --> 00:24:52,340
yeah that's a good question I should

537
00:24:48,530 --> 00:24:54,950
kind of demonstrate how much easier it

538
00:24:52,340 --> 00:24:56,689
is in Python and that's part of the

539
00:24:54,950 --> 00:24:58,429
selling point of moving towards Python

540
00:24:56,690 --> 00:24:59,900
it's like hey you know at some point

541
00:24:58,429 --> 00:25:02,390
this got so big that you could have done

542
00:24:59,900 --> 00:25:08,210
it much simpler over here oh yeah good

543
00:25:02,390 --> 00:25:10,220
question alright so here's what the

544
00:25:08,210 --> 00:25:15,470
output looks like so this ends up being

545
00:25:10,220 --> 00:25:18,230
what did I say 24 operations and we have

546
00:25:15,470 --> 00:25:22,250
they I put in a little thing here just

547
00:25:18,230 --> 00:25:25,940
to and then I put in the deleted file

548
00:25:22,250 --> 00:25:28,880
size I put little labels on them I get h

549
00:25:25,940 --> 00:25:32,419
regex i love it

550
00:25:28,880 --> 00:25:34,909
and then and that's what it looks like

551
00:25:32,419 --> 00:25:36,860
so I can the next time I have one of

552
00:25:34,909 --> 00:25:38,870
these files I can just drag that file

553
00:25:36,860 --> 00:25:41,000
into the input field and get the

554
00:25:38,870 --> 00:25:43,158
forensic data that I'm looking for like

555
00:25:41,000 --> 00:25:45,020
that if I wanted to I could probably

556
00:25:43,159 --> 00:25:47,600
loop through a list of files by using

557
00:25:45,020 --> 00:25:52,190
the fork operation and kind of take this

558
00:25:47,600 --> 00:25:56,240
another step further but that is how you

559
00:25:52,190 --> 00:25:59,150
would write a forensic parser in cyber

560
00:25:56,240 --> 00:26:00,169
chef now cyber this was 24 operations

561
00:25:59,150 --> 00:26:02,419
and this is probably one of the most

562
00:26:00,169 --> 00:26:04,220
simple forensic artifacts I could think

563
00:26:02,419 --> 00:26:05,720
of so when you talk about the do

564
00:26:04,220 --> 00:26:07,669
anything like much more complicated

565
00:26:05,720 --> 00:26:09,409
you're you're gonna drastically expand

566
00:26:07,669 --> 00:26:12,110
like how many operations you need like

567
00:26:09,409 --> 00:26:15,500
parts in the registry or mft or even

568
00:26:12,110 --> 00:26:17,629
like a L&K file is going to be brutal in

569
00:26:15,500 --> 00:26:24,919
terms of like the size of your operation

570
00:26:17,630 --> 00:26:26,480
list all right so let's talk about some

571
00:26:24,919 --> 00:26:29,409
more advanced to use cases so we've

572
00:26:26,480 --> 00:26:33,530
we've used the native tools to produce

573
00:26:29,409 --> 00:26:35,480
the desired results that we wanted but

574
00:26:33,530 --> 00:26:36,678
we we do have a couple of you know gray

575
00:26:35,480 --> 00:26:39,440
beards in the house that are thinking

576
00:26:36,679 --> 00:26:41,780
this is too simple for me you know I can

577
00:26:39,440 --> 00:26:45,830
what value could I possibly get out of

578
00:26:41,780 --> 00:26:47,600
this let's kick it up a notch alright so

579
00:26:45,830 --> 00:26:50,649
before you sell your soul the JavaScript

580
00:26:47,600 --> 00:26:50,649
and start coding your own

581
00:26:51,460 --> 00:26:56,230
custom operations just kind of take

582
00:26:53,560 --> 00:26:58,960
stock of you know your your position in

583
00:26:56,230 --> 00:27:02,560
life we have to know our limitations I

584
00:26:58,960 --> 00:27:05,080
didn't when making this how good is your

585
00:27:02,560 --> 00:27:06,909
javascript writing really like I do a

586
00:27:05,080 --> 00:27:09,010
lot of JavaScript reading but as far as

587
00:27:06,910 --> 00:27:13,080
you know actually producing JavaScript

588
00:27:09,010 --> 00:27:16,780
that is functional it it was a journey

589
00:27:13,080 --> 00:27:18,730
if you're coding dfi on yeah if you're

590
00:27:16,780 --> 00:27:20,950
coding dfi are stuff you should probably

591
00:27:18,730 --> 00:27:23,220
be in Python if you've reached the point

592
00:27:20,950 --> 00:27:27,250
where you want to like open up a

593
00:27:23,220 --> 00:27:30,250
interpreter or a you know IDE or

594
00:27:27,250 --> 00:27:31,840
something and start coding JavaScript to

595
00:27:30,250 --> 00:27:33,160
make cyber chef work you've reached that

596
00:27:31,840 --> 00:27:35,379
point where you should probably look at

597
00:27:33,160 --> 00:27:36,910
Python better community support better

598
00:27:35,380 --> 00:27:40,900
memory management better syntax it's

599
00:27:36,910 --> 00:27:42,160
just better than JavaScript but now that

600
00:27:40,900 --> 00:27:45,580
you've been cautioned let's let's throw

601
00:27:42,160 --> 00:27:53,530
some stuff that I did anyways alright so

602
00:27:45,580 --> 00:27:58,000
the this is the same 24 operations in

603
00:27:53,530 --> 00:27:59,590
and again my JavaScript is rough so

604
00:27:58,000 --> 00:28:01,450
there's some there's some clunkiness in

605
00:27:59,590 --> 00:28:02,949
here that I'm not proud of but I put in

606
00:28:01,450 --> 00:28:07,480
front of you guys just to show you that

607
00:28:02,950 --> 00:28:09,550
I'm not good at javascript but this is

608
00:28:07,480 --> 00:28:11,740
the same windows recycle bin parser it

609
00:28:09,550 --> 00:28:14,350
ends up being like what 60 some lines of

610
00:28:11,740 --> 00:28:18,490
code and some of that's probably

611
00:28:14,350 --> 00:28:20,290
unnecessary but overall it wasn't

612
00:28:18,490 --> 00:28:21,880
horrible if you're into this sort of

613
00:28:20,290 --> 00:28:24,190
thing and you want to this if they're

614
00:28:21,880 --> 00:28:27,280
out you want to take it the process

615
00:28:24,190 --> 00:28:30,750
wasn't painful so I do encourage you

616
00:28:27,280 --> 00:28:36,790
guys to to contribute to the cyber chef

617
00:28:30,750 --> 00:28:38,410
project where you see value and so the

618
00:28:36,790 --> 00:28:40,600
whole point of that is to you can

619
00:28:38,410 --> 00:28:44,740
building your own custom operation you

620
00:28:40,600 --> 00:28:46,120
can just drag one thing over and get the

621
00:28:44,740 --> 00:28:48,430
same desired results that you were

622
00:28:46,120 --> 00:28:50,439
looking for from those 224 so there's

623
00:28:48,430 --> 00:28:51,730
there's a value proposition here that

624
00:28:50,440 --> 00:28:53,110
I'm not going to tell you what you

625
00:28:51,730 --> 00:28:59,470
should do and shouldn't do in cyber chef

626
00:28:53,110 --> 00:29:01,840
but these are things you can do alright

627
00:28:59,470 --> 00:29:03,910
so as far as potential for integration

628
00:29:01,840 --> 00:29:07,510
this is another thing that

629
00:29:03,910 --> 00:29:09,400
I don't know if you should do or not so

630
00:29:07,510 --> 00:29:13,120
how I got cyber chef to talk to

631
00:29:09,400 --> 00:29:16,330
virustotal was I downloaded cyber chef

632
00:29:13,120 --> 00:29:20,620
locally it just comes down as an HTML

633
00:29:16,330 --> 00:29:24,909
file and then I opened Chrome with

634
00:29:20,620 --> 00:29:28,600
disabling the web security and then I'd

635
00:29:24,910 --> 00:29:30,220
performed the HTTP request operation and

636
00:29:28,600 --> 00:29:30,850
did a get request for you know

637
00:29:30,220 --> 00:29:33,309
virustotal

638
00:29:30,850 --> 00:29:34,689
file download and then my API key and

639
00:29:33,309 --> 00:29:40,590
then you know whatever hash I was

640
00:29:34,690 --> 00:29:43,480
looking for and for disabling your

641
00:29:40,590 --> 00:29:46,799
browser protections there's a stack

642
00:29:43,480 --> 00:29:49,270
overflow link there all right

643
00:29:46,799 --> 00:29:52,090
so for downloading samples this is

644
00:29:49,270 --> 00:29:53,830
pretty cool if you have a virus total

645
00:29:52,090 --> 00:29:54,610
account that gives you those those

646
00:29:53,830 --> 00:29:58,120
superpowers

647
00:29:54,610 --> 00:29:59,860
you can just say hey virus it'll give me

648
00:29:58,120 --> 00:30:05,610
that and then it'll the output will

649
00:29:59,860 --> 00:30:05,610
appear in the output box easy peasy

650
00:30:05,950 --> 00:30:12,220
query reports I found some value in

651
00:30:08,080 --> 00:30:14,439
doing this just if I wanted to carve out

652
00:30:12,220 --> 00:30:16,330
a specific sample from something else

653
00:30:14,440 --> 00:30:19,600
like maybe I found an embedded DLL

654
00:30:16,330 --> 00:30:20,830
inside of another payload and I wanted

655
00:30:19,600 --> 00:30:23,168
to see what virustotal thought of it

656
00:30:20,830 --> 00:30:25,030
without moving it to my you know disk

657
00:30:23,169 --> 00:30:28,150
and then uploading or hashing it and

658
00:30:25,030 --> 00:30:31,960
checking the hash actually that's what I

659
00:30:28,150 --> 00:30:34,659
did as I check the hash so but what what

660
00:30:31,960 --> 00:30:37,990
we have here is a looks like a two

661
00:30:34,659 --> 00:30:40,179
operation recipe where I do the get

662
00:30:37,990 --> 00:30:42,700
request for the report on a specific

663
00:30:40,179 --> 00:30:45,010
hash and I identified oh I

664
00:30:42,700 --> 00:30:48,340
md5 hash it like kind of a parish and

665
00:30:45,010 --> 00:30:51,070
then I used that hash on the the file

666
00:30:48,340 --> 00:30:53,080
that's in the input box did the get

667
00:30:51,070 --> 00:30:55,750
request and then we have the the J path

668
00:30:53,080 --> 00:30:58,928
expression to parse the results and give

669
00:30:55,750 --> 00:31:05,320
me just the the blurbs from the the

670
00:30:58,929 --> 00:31:06,760
various antivirus vendors all right I'm

671
00:31:05,320 --> 00:31:08,100
getting through these slides I didn't

672
00:31:06,760 --> 00:31:11,760
think it was possible

673
00:31:08,100 --> 00:31:13,990
alright so interacting with live content

674
00:31:11,760 --> 00:31:17,149
not for the faint of heart and this one

675
00:31:13,990 --> 00:31:19,039
I will lose half the audience because

676
00:31:17,149 --> 00:31:20,928
one half the audience is gonna wonder

677
00:31:19,039 --> 00:31:23,830
why I did this and the others not gonna

678
00:31:20,929 --> 00:31:30,980
understand what I did and that's okay

679
00:31:23,830 --> 00:31:34,370
but alright I opened up the console or

680
00:31:30,980 --> 00:31:36,590
the web developer options in in Chrome

681
00:31:34,370 --> 00:31:40,729
and I went straight to the console and I

682
00:31:36,590 --> 00:31:43,189
read in the output text which is the the

683
00:31:40,730 --> 00:31:47,090
value from the the output text file here

684
00:31:43,190 --> 00:31:50,960
or the object and I read that into

685
00:31:47,090 --> 00:31:54,709
memory as a variable and then I did a

686
00:31:50,960 --> 00:31:58,159
regex match here for a very specific

687
00:31:54,710 --> 00:32:00,289
snippet of code that I identified in my

688
00:31:58,159 --> 00:32:05,679
analysis as being responsible for

689
00:32:00,289 --> 00:32:07,519
decoding the variables that are in the

690
00:32:05,679 --> 00:32:11,360
malicious JavaScript so there's a

691
00:32:07,519 --> 00:32:13,700
routine that except to two inputs and

692
00:32:11,360 --> 00:32:16,580
then it spits out clear text uh novice

693
00:32:13,700 --> 00:32:17,779
catted JavaScript code and it's just

694
00:32:16,580 --> 00:32:22,389
littered throughout here and it's it's

695
00:32:17,779 --> 00:32:25,340
this um where is it it's boom P or bump

696
00:32:22,389 --> 00:32:27,699
function here so I carved that out and

697
00:32:25,340 --> 00:32:31,970
it was a couple of dependencies to that

698
00:32:27,700 --> 00:32:34,100
it's like from there and then it kind of

699
00:32:31,970 --> 00:32:36,529
goes all the way through here and now I

700
00:32:34,100 --> 00:32:38,809
had that malicious snippet of code

701
00:32:36,529 --> 00:32:40,610
running in my my browser's memory so I

702
00:32:38,809 --> 00:32:42,889
definitely recommend if you're gonna do

703
00:32:40,610 --> 00:32:47,840
this to do it in a sandbox or you know

704
00:32:42,889 --> 00:32:50,418
in an offline analysis machine and I was

705
00:32:47,840 --> 00:32:56,418
able to to run the the snippet of code

706
00:32:50,419 --> 00:33:00,799
and get that and so I saved the output

707
00:32:56,419 --> 00:33:06,169
of that code back to a variable and then

708
00:33:00,799 --> 00:33:09,230
replaced that in the the input script so

709
00:33:06,169 --> 00:33:14,499
that I could D alpha skate just a very

710
00:33:09,230 --> 00:33:14,499
very tactical snippet of code and then

711
00:33:14,649 --> 00:33:20,029
this part down here is kind of cool this

712
00:33:17,389 --> 00:33:22,070
is me being clever where I triggered the

713
00:33:20,029 --> 00:33:24,559
key up event so that cipher chef would

714
00:33:22,070 --> 00:33:28,700
run the recipe again thinking that I

715
00:33:24,559 --> 00:33:31,100
typed so and again I knew I would lose

716
00:33:28,700 --> 00:33:35,389
half the room here and that's fine but

717
00:33:31,100 --> 00:33:37,219
you can manipulate cyber chef from the

718
00:33:35,389 --> 00:33:39,619
consoles the takeaway here if you're

719
00:33:37,220 --> 00:33:43,279
really interested in doing some sort of

720
00:33:39,619 --> 00:33:48,408
like tactical interface at a very low

721
00:33:43,279 --> 00:33:51,919
level all right some of the lessons

722
00:33:48,409 --> 00:33:54,799
learned and this is just from my travels

723
00:33:51,919 --> 00:33:57,049
some things I found useful all right

724
00:33:54,799 --> 00:34:01,418
cyber chef is not ideal for everything

725
00:33:57,049 --> 00:34:01,418
you're using memory management from your

726
00:34:02,019 --> 00:34:08,540
browser and there's using large files

727
00:34:05,750 --> 00:34:12,049
will knock things over this is what

728
00:34:08,540 --> 00:34:15,529
happens when I tried to parse an MFT my

729
00:34:12,049 --> 00:34:18,770
recipe was good but cyber chef didn't

730
00:34:15,530 --> 00:34:19,879
didn't hold up there and that's

731
00:34:18,770 --> 00:34:23,569
something you're gonna have to play with

732
00:34:19,879 --> 00:34:25,279
and figure out what what you can bite

733
00:34:23,569 --> 00:34:28,099
off and what you can chew with this

734
00:34:25,280 --> 00:34:30,500
platform there's some operations that

735
00:34:28,099 --> 00:34:32,000
make things easier like take bites drop

736
00:34:30,500 --> 00:34:35,299
by its regex

737
00:34:32,000 --> 00:34:38,299
will will take large amounts of code and

738
00:34:35,299 --> 00:34:40,129
make it into more manageable chunks but

739
00:34:38,299 --> 00:34:42,349
you're still if they're not miracle

740
00:34:40,129 --> 00:34:44,230
workers so and definitely encourage you

741
00:34:42,349 --> 00:34:54,230
to use the right tool for the right job

742
00:34:44,230 --> 00:34:56,270
Python one thing I've encouraging my

743
00:34:54,230 --> 00:34:58,040
team to do is use the comet field for

744
00:34:56,270 --> 00:35:01,130
your recipe use it early use it often

745
00:34:58,040 --> 00:35:03,740
use it go nuts like I'm using it here as

746
00:35:01,130 --> 00:35:05,869
a basically notepad

747
00:35:03,740 --> 00:35:08,810
one thing I find frustrating is when I'm

748
00:35:05,869 --> 00:35:10,910
in any sort of analysis situation where

749
00:35:08,810 --> 00:35:14,240
I'm moving too fast to take notes

750
00:35:10,910 --> 00:35:16,328
I hate switching back between screens I

751
00:35:14,240 --> 00:35:18,770
get a little motion sick and I'm like

752
00:35:16,329 --> 00:35:20,150
it's easier on my macbook but then I

753
00:35:18,770 --> 00:35:24,020
went if I do it on a Windows machine

754
00:35:20,150 --> 00:35:28,040
then after like yeah it's it's clunky so

755
00:35:24,020 --> 00:35:30,680
I'd like having just a sketch pad here

756
00:35:28,040 --> 00:35:33,259
that I can just lob in random thoughts

757
00:35:30,680 --> 00:35:34,640
and you know keep going with my analysis

758
00:35:33,260 --> 00:35:36,109
just kind of scroll up and type

759
00:35:34,640 --> 00:35:37,790
something let's scroll back down or I

760
00:35:36,109 --> 00:35:39,710
can put comments litter them out

761
00:35:37,790 --> 00:35:42,710
throughout my recipe if I if I really

762
00:35:39,710 --> 00:35:44,240
feel like making it hard to read

763
00:35:42,710 --> 00:35:46,460
it doesn't affect the flow of the

764
00:35:44,240 --> 00:35:48,950
operations so it's just it's just a

765
00:35:46,460 --> 00:35:50,930
comment field and it doesn't affect you

766
00:35:48,950 --> 00:35:53,029
know the how the input data gets

767
00:35:50,930 --> 00:35:58,700
filtered through the recipe and then

768
00:35:53,030 --> 00:36:00,860
displayed on the output field all right

769
00:35:58,700 --> 00:36:04,100
all right so I talked about this earlier

770
00:36:00,860 --> 00:36:07,070
but I one of the values that I find most

771
00:36:04,100 --> 00:36:10,640
intriguing about cyber chef is how you

772
00:36:07,070 --> 00:36:13,190
can include your recipe and input data

773
00:36:10,640 --> 00:36:14,359
in the URL itself though there's some

774
00:36:13,190 --> 00:36:15,410
size limitations here and I don't

775
00:36:14,360 --> 00:36:19,430
remember what they are off the top of my

776
00:36:15,410 --> 00:36:22,339
head but you can paste a this sort of

777
00:36:19,430 --> 00:36:25,549
link in your blogs and then people click

778
00:36:22,340 --> 00:36:29,060
on it it'll open up the GCHQ website and

779
00:36:25,550 --> 00:36:31,550
it will display your recipe and your

780
00:36:29,060 --> 00:36:33,440
input data and your output data and you

781
00:36:31,550 --> 00:36:35,720
can see you can convey the steps you

782
00:36:33,440 --> 00:36:37,910
took to do an analysis with the input

783
00:36:35,720 --> 00:36:39,350
data that you had available so it is

784
00:36:37,910 --> 00:36:42,049
very much like an interactive experience

785
00:36:39,350 --> 00:36:44,060
that you can show people like this is

786
00:36:42,050 --> 00:36:47,960
how I did this and these are the steps I

787
00:36:44,060 --> 00:36:50,390
took so if you guys are avid bloggers

788
00:36:47,960 --> 00:36:54,110
and you want to convey a message on you

789
00:36:50,390 --> 00:36:56,180
know and D wizard if I some of the magic

790
00:36:54,110 --> 00:36:57,230
you've produced this is uh that's not a

791
00:36:56,180 --> 00:37:00,669
word right

792
00:36:57,230 --> 00:37:03,860
like okay that's support thank you sir

793
00:37:00,670 --> 00:37:07,610
wizard if I let's see what else do I

794
00:37:03,860 --> 00:37:09,230
bake so this checkbox here is is really

795
00:37:07,610 --> 00:37:13,220
cool when you want to see things change

796
00:37:09,230 --> 00:37:15,980
as you change but if you're typing in

797
00:37:13,220 --> 00:37:18,529
like a password for a zip file every

798
00:37:15,980 --> 00:37:21,260
keystroke will change the recipe it the

799
00:37:18,530 --> 00:37:23,690
recipe will get re executed every single

800
00:37:21,260 --> 00:37:25,820
time and then sometimes you'll have a

801
00:37:23,690 --> 00:37:29,480
recipe that's like half-baked

802
00:37:25,820 --> 00:37:30,950
because like you typed in something and

803
00:37:29,480 --> 00:37:34,610
it didn't necessarily auto bake

804
00:37:30,950 --> 00:37:37,240
correctly so what I find most useful is

805
00:37:34,610 --> 00:37:39,710
turning this off unless I really want it

806
00:37:37,240 --> 00:37:42,229
and then you can do that in the in the

807
00:37:39,710 --> 00:37:44,860
settings and and whatnot it's pretty

808
00:37:42,230 --> 00:37:48,680
simple but just just more of a pro tip

809
00:37:44,860 --> 00:37:50,750
all right we've reached the summation

810
00:37:48,680 --> 00:37:53,690
slide and I'm a little earlier which I'm

811
00:37:50,750 --> 00:37:55,800
shocked but so I've discussed the value

812
00:37:53,690 --> 00:37:59,640
of cyber chef and how

813
00:37:55,800 --> 00:38:02,070
this web GUI will allow you to drag and

814
00:37:59,640 --> 00:38:03,350
drop operations that maybe you know

815
00:38:02,070 --> 00:38:05,760
about maybe you didn't gives you a

816
00:38:03,350 --> 00:38:10,200
contextualized list of different things

817
00:38:05,760 --> 00:38:13,100
you can do with data and it lowers the

818
00:38:10,200 --> 00:38:16,109
threshold of what it takes to perform

819
00:38:13,100 --> 00:38:19,650
tasks like base64 encoding for new

820
00:38:16,110 --> 00:38:21,450
people I've gone through a few practical

821
00:38:19,650 --> 00:38:24,930
applications we discussed you know a

822
00:38:21,450 --> 00:38:28,009
basic data manipulation we D alpha

823
00:38:24,930 --> 00:38:32,779
skated a fairly common piece of malware

824
00:38:28,010 --> 00:38:35,550
and we built a forensic artifact parser

825
00:38:32,780 --> 00:38:38,460
additionally I highlighted some arguably

826
00:38:35,550 --> 00:38:41,460
obscure advanced use cases

827
00:38:38,460 --> 00:38:43,020
building custom operations and

828
00:38:41,460 --> 00:38:45,660
highlighting some of the potential for

829
00:38:43,020 --> 00:38:48,240
integration and how to interact with

830
00:38:45,660 --> 00:38:49,529
live content and then I rounded it off

831
00:38:48,240 --> 00:38:53,220
with some lessons learned

832
00:38:49,530 --> 00:38:56,130
so those are my takeaways from this

833
00:38:53,220 --> 00:38:57,839
presentation is if you have new folk

834
00:38:56,130 --> 00:38:59,640
that are struggling introduced in the

835
00:38:57,840 --> 00:39:01,830
cyber chef if you're struggling take a

836
00:38:59,640 --> 00:39:03,089
look at cyber chef and if you're

837
00:39:01,830 --> 00:39:04,920
struggling with some of the concepts of

838
00:39:03,090 --> 00:39:06,810
like hey I saw this script on someone's

839
00:39:04,920 --> 00:39:10,230
blog I don't know what all the things do

840
00:39:06,810 --> 00:39:10,950
I see it mentioning X or but I don't

841
00:39:10,230 --> 00:39:12,930
know what that is

842
00:39:10,950 --> 00:39:15,779
crack open cyber chef and X or a bunch

843
00:39:12,930 --> 00:39:18,660
of stuff and see what happens you might

844
00:39:15,780 --> 00:39:21,000
be surprised at how much more attention

845
00:39:18,660 --> 00:39:23,819
you get by just playing around in there

846
00:39:21,000 --> 00:39:27,570
I use it in my courses and I find that

847
00:39:23,820 --> 00:39:31,890
it adds a lot of value and I encourage

848
00:39:27,570 --> 00:39:33,390
you guys to use it in your whatever so I

849
00:39:31,890 --> 00:39:45,410
think at this point I'm open for

850
00:39:33,390 --> 00:39:45,410
questions comments or concerns sir okay

851
00:39:46,950 --> 00:39:51,279
sure

852
00:39:48,190 --> 00:39:54,609
reg x101 there's a few of those like

853
00:39:51,280 --> 00:39:56,619
look online regex top 5 Google hits will

854
00:39:54,609 --> 00:40:00,848
get you right there's a lot of online

855
00:39:56,619 --> 00:40:05,020
regex testing there's there's a couple

856
00:40:00,849 --> 00:40:08,920
of I have a course lesson where I walked

857
00:40:05,020 --> 00:40:11,859
through it's like 15 or so exercises

858
00:40:08,920 --> 00:40:12,490
that's on I think it's regex 101 that

859
00:40:11,859 --> 00:40:15,819
yeah

860
00:40:12,490 --> 00:40:17,649
who's in yep user where it's like a

861
00:40:15,819 --> 00:40:19,450
tailored lesson like you know you've got

862
00:40:17,650 --> 00:40:27,539
this string and I want this out of it

863
00:40:19,450 --> 00:40:27,538
yeah it's uh adds a lot of value sir

864
00:40:36,240 --> 00:40:44,879
all right so the question was could you

865
00:40:39,260 --> 00:40:47,400
save a recipe from cyber chef and run it

866
00:40:44,880 --> 00:40:48,960
as a custom operation and so the recipes

867
00:40:47,400 --> 00:40:50,609
get saved in a couple of different

868
00:40:48,960 --> 00:40:52,890
formats that they're it's there's a

869
00:40:50,609 --> 00:40:57,630
condensed version and there's a JSON

870
00:40:52,890 --> 00:40:59,160
more verbose verbose version and they

871
00:40:57,630 --> 00:41:00,960
don't necessarily automatically

872
00:40:59,160 --> 00:41:03,029
translate to a custom operation but

873
00:41:00,960 --> 00:41:17,430
that'd be a good feature request for the

874
00:41:03,030 --> 00:41:19,440
the GCHQ folk yeah it depends so at the

875
00:41:17,430 --> 00:41:20,940
fed we have our own we stood up a little

876
00:41:19,440 --> 00:41:22,550
server and we have our own running so

877
00:41:20,940 --> 00:41:26,099
that we don't have to worry about any

878
00:41:22,550 --> 00:41:31,339
sensitivity of data from my local

879
00:41:26,099 --> 00:41:33,660
analysis I have a local copy on my VMs

880
00:41:31,339 --> 00:41:38,070
there's times when I just pull it up and

881
00:41:33,660 --> 00:41:39,598
use the GCHQ and it all runs on my like

882
00:41:38,070 --> 00:41:42,690
in my browser because it's JavaScript

883
00:41:39,599 --> 00:41:46,920
it's client-side so there is some

884
00:41:42,690 --> 00:41:48,450
telemetry that gets produced when you

885
00:41:46,920 --> 00:41:52,140
use like the online version that I kind

886
00:41:48,450 --> 00:41:54,330
of avoid but it's so the answer is I it

887
00:41:52,140 --> 00:41:56,250
depends but yeah it's flexible like that

888
00:41:54,330 --> 00:41:58,710
you can use it locally you can use it

889
00:41:56,250 --> 00:42:03,810
online the experience is the same the

890
00:41:58,710 --> 00:42:05,490
only reason I used the local version to

891
00:42:03,810 --> 00:42:09,029
integrate with virustotal is because it

892
00:42:05,490 --> 00:42:11,160
coming from a local script versus a I

893
00:42:09,030 --> 00:42:16,080
was trying to avoid course that the

894
00:42:11,160 --> 00:42:21,089
cross object requests we're out what the

895
00:42:16,080 --> 00:42:22,440
S stands for but the I wanted to avoid

896
00:42:21,089 --> 00:42:23,849
the browser protection that would

897
00:42:22,440 --> 00:42:25,260
prevent me from you know being on one

898
00:42:23,849 --> 00:42:27,599
site requesting data from another site

899
00:42:25,260 --> 00:42:30,890
and and it it was causing conflicts so

900
00:42:27,599 --> 00:42:30,890
that's why I saved it locally

901
00:42:34,370 --> 00:42:46,819
oh I didn't oh sure there are a number

902
00:42:43,970 --> 00:42:49,250
of functions that it offers as far as

903
00:42:46,820 --> 00:42:51,530
decrypting data and if you guys are

904
00:42:49,250 --> 00:42:53,840
heading to the CTF there's I know

905
00:42:51,530 --> 00:42:58,580
there's a couple of challenges that

906
00:42:53,840 --> 00:43:00,170
refer to things like XOR and base64 AES

907
00:42:58,580 --> 00:43:03,680
I think is mentioned in a couple of

908
00:43:00,170 --> 00:43:06,370
challenges so especially the ones that

909
00:43:03,680 --> 00:43:09,319
mentioned cyber chef take a look at the

910
00:43:06,370 --> 00:43:12,020
operations menu and look for which ones

911
00:43:09,320 --> 00:43:13,310
are which ones are available and which

912
00:43:12,020 --> 00:43:15,170
ones are relevant to a content you're

913
00:43:13,310 --> 00:43:18,950
looking at and I'll be walking around

914
00:43:15,170 --> 00:43:24,590
the CTF and offering any assistance I

915
00:43:18,950 --> 00:43:28,700
can to so but only in cyber chef is the

916
00:43:24,590 --> 00:43:37,420
only tool you need exactly so any other

917
00:43:28,700 --> 00:43:42,500
questions magic no no the there's a

918
00:43:37,420 --> 00:43:45,020
operation for detecting file types where

919
00:43:42,500 --> 00:43:46,700
it reads like the the first four bytes

920
00:43:45,020 --> 00:43:48,770
of whatever data you've got in the input

921
00:43:46,700 --> 00:43:51,740
field and it tries to do a signature

922
00:43:48,770 --> 00:43:53,870
analysis on the magic numbers to produce

923
00:43:51,740 --> 00:43:56,450
like give you a good idea like hey is

924
00:43:53,870 --> 00:43:58,970
this a dll is it's a is this a PDF is

925
00:43:56,450 --> 00:44:00,680
this a word doc you know so there's

926
00:43:58,970 --> 00:44:02,600
there's a lot of different operations

927
00:44:00,680 --> 00:44:04,490
you can perform in there and I

928
00:44:02,600 --> 00:44:08,620
definitely encourage everyone to take a

929
00:44:04,490 --> 00:44:08,620
look at what it has available to it

930
00:44:10,210 --> 00:44:22,370
alright I think go ahead sir I there

931
00:44:19,060 --> 00:44:25,970
I've seen some on Twitter that I got

932
00:44:22,370 --> 00:44:27,650
included in one recently I don't have it

933
00:44:25,970 --> 00:44:33,859
memorized I'll thought my head you check

934
00:44:27,650 --> 00:44:37,960
out my my feed it's somewhere all the

935
00:44:33,860 --> 00:44:37,960
way up here so many slides but

936
00:44:38,290 --> 00:44:42,910
there was a online repository it had

937
00:44:40,780 --> 00:44:46,540
about 16 solid examples of how you can

938
00:44:42,910 --> 00:44:49,210
leverage cyber chef but I don't know if

939
00:44:46,540 --> 00:44:54,970
cyber chef itself has a like a

940
00:44:49,210 --> 00:44:56,260
repository of yeah here last sack I

941
00:44:54,970 --> 00:44:58,180
don't know if there's a like a

942
00:44:56,260 --> 00:45:04,510
repository if not there should be that

943
00:44:58,180 --> 00:45:06,819
seems like a good idea all right

944
00:45:04,510 --> 00:45:11,000
I think I can give you guys what four

945
00:45:06,820 --> 00:45:16,570
minutes back no questions last chance

946
00:45:11,000 --> 00:45:16,570
[Applause]

