1
00:00:24,240 --> 00:00:37,260
as a top<font color="#CCCCCC"> there we go okay we've got a 22</font>

2
00:00:32,299 --> 00:00:38,730
locals here datagram and Vidiot Vidiot

3
00:00:37,260 --> 00:00:41,879
who incidentally has in my opinion the

4
00:00:38,730 --> 00:00:47,580
coolest email address ever infidel all

5
00:00:41,879 --> 00:00:50,940
<font color="#CCCCCC">Jazeera Donette well we had a good talk</font>

6
00:00:47,580 --> 00:00:52,500
about<font color="#E5E5E5"> virtualized forensics earlier and</font>

7
00:00:50,940 --> 00:00:54,449
these guys are going to talk<font color="#E5E5E5"> about</font>

8
00:00:52,500 --> 00:00:57,659
another sort<font color="#E5E5E5"> of potentially</font>

9
00:00:54,449 --> 00:01:01,379
<font color="#CCCCCC">non-persistent device in doing forensics</font>

10
00:00:57,659 --> 00:01:04,170
on it as well this case memory I'm gonna

11
00:01:01,379 --> 00:01:10,530
<font color="#E5E5E5">let them talk</font><font color="#CCCCCC"> about it so you ready to</font>

12
00:01:04,170 --> 00:01:12,119
go<font color="#CCCCCC"> okay so we don't</font><font color="#E5E5E5"> have time to talk</font>

13
00:01:10,530 --> 00:01:16,020
about<font color="#E5E5E5"> who we</font><font color="#CCCCCC"> are but we're assholes</font>

14
00:01:12,119 --> 00:01:21,289
anyway and we like beer that's all you

15
00:01:16,020 --> 00:01:24,390
need to know so we're going<font color="#E5E5E5"> to go</font><font color="#CCCCCC"> over</font>

16
00:01:21,290 --> 00:01:27,060
what live forensics means the live

17
00:01:24,390 --> 00:01:28,890
forensic process different ways<font color="#E5E5E5"> of doing</font>

18
00:01:27,060 --> 00:01:31,979
all this<font color="#CCCCCC"> stuff hardware versus software</font>

19
00:01:28,890 --> 00:01:34,979
we're going to go over analyzing memory

20
00:01:31,979 --> 00:01:38,039
dumps offline and the new hotness is

21
00:01:34,979 --> 00:01:39,539
cold<font color="#CCCCCC"> boot attacks which are well we'll</font>

22
00:01:38,039 --> 00:01:41,310
get<font color="#E5E5E5"> into it later and then we're going</font>

23
00:01:39,539 --> 00:01:42,359
to<font color="#CCCCCC"> get into cold boot countermeasures</font><font color="#E5E5E5"> so</font>

24
00:01:41,310 --> 00:01:47,130
you could try<font color="#E5E5E5"> and safeguard yourself</font>

25
00:01:42,359 --> 00:01:49,530
from getting this done to you so to

26
00:01:47,130 --> 00:01:51,990
begin woman's life forensics we all know

27
00:01:49,530 --> 00:01:56,069
dead<font color="#E5E5E5"> forensics as forensics of a hard</font>

28
00:01:51,990 --> 00:01:58,199
drive analyzing a hard drive out of a

29
00:01:56,069 --> 00:01:59,819
compromise machine or whatever kind<font color="#E5E5E5"> of</font>

30
00:01:58,200 --> 00:02:01,560
machine that you're getting<font color="#E5E5E5"> and trying</font>

31
00:01:59,819 --> 00:02:03,390
to<font color="#E5E5E5"> figure out what happened to it what</font>

32
00:02:01,560 --> 00:02:04,979
recent activity was going on on it is

33
00:02:03,390 --> 00:02:06,479
anything<font color="#CCCCCC"> you know</font><font color="#E5E5E5"> trying to evade</font>

34
00:02:04,979 --> 00:02:16,190
forensics because that might be of

35
00:02:06,479 --> 00:02:16,190
interest to<font color="#E5E5E5"> you I do need</font><font color="#CCCCCC"> a beer</font>

36
00:02:18,620 --> 00:02:27,480
there's not much better<font color="#E5E5E5"> than</font><font color="#CCCCCC"> that um did</font>

37
00:02:24,629 --> 00:02:30,870
to evade detection from you know the

38
00:02:27,480 --> 00:02:38,099
<font color="#E5E5E5">forensics process in general oh thank</font>

39
00:02:30,870 --> 00:02:39,659
you<font color="#E5E5E5"> okay now I have beer okay so the one</font>

40
00:02:38,099 --> 00:02:41,730
thing we like to prepend this with is

41
00:02:39,659 --> 00:02:43,048
that live forensics isn't shouldn't be

42
00:02:41,730 --> 00:02:45,750
considered a replacement for dread

43
00:02:43,049 --> 00:02:47,970
forensics but instead append it to

44
00:02:45,750 --> 00:02:50,430
whatever you're doing now so that you

45
00:02:47,970 --> 00:02:52,109
<font color="#E5E5E5">get you know more so you're not</font>

46
00:02:50,430 --> 00:02:54,620
replacing anything it's just an

47
00:02:52,109 --> 00:02:54,620
appendage

48
00:03:04,730 --> 00:03:09,989
sorry about<font color="#CCCCCC"> that so the advantages and</font>

49
00:03:07,980 --> 00:03:12,630
disadvantages of everything are

50
00:03:09,990 --> 00:03:14,880
basically going<font color="#E5E5E5"> to determine how and</font>

51
00:03:12,630 --> 00:03:16,140
where you use it the<font color="#CCCCCC"> good of life</font>

52
00:03:14,880 --> 00:03:18,150
forensics is that you get much<font color="#CCCCCC"> more</font>

53
00:03:16,140 --> 00:03:20,220
<font color="#CCCCCC">information from running system you</font><font color="#E5E5E5"> get</font>

54
00:03:18,150 --> 00:03:22,860
a lot of information that<font color="#E5E5E5"> you don't get</font>

55
00:03:20,220 --> 00:03:24,780
once you turn it off you also keep the

56
00:03:22,860 --> 00:03:27,120
system<font color="#E5E5E5"> up which might be a primary</font>

57
00:03:24,780 --> 00:03:29,700
concern for you a lot of malware will

58
00:03:27,120 --> 00:03:32,460
it's in its best interest to<font color="#CCCCCC"> keep the</font>

59
00:03:29,700 --> 00:03:34,920
<font color="#CCCCCC">system up</font><font color="#E5E5E5"> and also for every business</font>

60
00:03:32,460 --> 00:03:36,480
<font color="#E5E5E5">usually keep system up doing dead</font>

61
00:03:34,920 --> 00:03:37,829
forensics means that you have<font color="#E5E5E5"> to turn it</font>

62
00:03:36,480 --> 00:03:40,410
off<font color="#E5E5E5"> and you're probably going to take</font>

63
00:03:37,830 --> 00:03:42,240
out that drive and<font color="#E5E5E5"> not use it again so</font>

64
00:03:40,410 --> 00:03:44,430
with live forensics you're maintaining

65
00:03:42,240 --> 00:03:46,020
availability and keeping all your web

66
00:03:44,430 --> 00:03:47,940
server<font color="#CCCCCC"> or your database whatever up</font>

67
00:03:46,020 --> 00:03:50,090
while<font color="#E5E5E5"> you're trying to investigate</font>

68
00:03:47,940 --> 00:03:52,890
whatever you're investigating and

69
00:03:50,090 --> 00:03:55,320
another good reason for live forensics

70
00:03:52,890 --> 00:03:56,989
is that it combats all the anti dead

71
00:03:55,320 --> 00:03:59,850
forensics techniques that are being used

72
00:03:56,990 --> 00:04:01,620
the talk earlier virtualization you

73
00:03:59,850 --> 00:04:04,829
might not see that once you unplug the

74
00:04:01,620 --> 00:04:06,150
machine but the vmware image or whatever

75
00:04:04,830 --> 00:04:07,860
image is probably going<font color="#E5E5E5"> to be in memory</font>

76
00:04:06,150 --> 00:04:09,330
and you<font color="#CCCCCC"> could probably extract a good</font>

77
00:04:07,860 --> 00:04:10,980
amount of<font color="#E5E5E5"> data from that to determine</font>

78
00:04:09,330 --> 00:04:13,560
you know what's going on<font color="#E5E5E5"> an average less</font>

79
00:04:10,980 --> 00:04:17,789
processed and find out what it's doing

80
00:04:13,560 --> 00:04:20,070
to aid in your<font color="#E5E5E5"> investigation but you</font>

81
00:04:17,790 --> 00:04:22,140
have little<font color="#E5E5E5"> data integrity you can't</font>

82
00:04:20,070 --> 00:04:24,719
trust the system if it's compromised

83
00:04:22,140 --> 00:04:27,120
because it's compromised so<font color="#E5E5E5"> anything you</font>

84
00:04:24,720 --> 00:04:31,710
could be getting<font color="#E5E5E5"> back might be wrong</font><font color="#CCCCCC"> but</font>

85
00:04:27,120 --> 00:04:33,630
on the upside you can<font color="#CCCCCC"> then differentiate</font>

86
00:04:31,710 --> 00:04:35,310
between different different data that

87
00:04:33,630 --> 00:04:37,440
you're<font color="#CCCCCC"> pulling from live memory to find</font>

88
00:04:35,310 --> 00:04:39,600
discrepancies like well the colonel data

89
00:04:37,440 --> 00:04:41,850
says this about network connections but

90
00:04:39,600 --> 00:04:43,919
when<font color="#CCCCCC"> I run netstat I'm only seeing these</font>

91
00:04:41,850 --> 00:04:45,660
connections so you<font color="#E5E5E5"> still you have some</font>

92
00:04:43,919 --> 00:04:47,729
level of integrity but ultimately

93
00:04:45,660 --> 00:04:50,010
ultimately you can't completely trust

94
00:04:47,730 --> 00:04:51,210
what you're getting another problem<font color="#CCCCCC"> is</font>

95
00:04:50,010 --> 00:04:53,460
that everything<font color="#E5E5E5"> you do is going to</font>

96
00:04:51,210 --> 00:04:56,450
affect memory so while your

97
00:04:53,460 --> 00:04:59,239
investigation will inevitably somehow

98
00:04:56,450 --> 00:05:01,710
alter the data in memory sometimes

99
00:04:59,240 --> 00:05:04,470
overriding evidence that you might need

100
00:05:01,710 --> 00:05:06,930
the<font color="#E5E5E5"> other problem</font><font color="#CCCCCC"> is that</font><font color="#E5E5E5"> it's hard to</font>

101
00:05:04,470 --> 00:05:08,850
reproduce you<font color="#E5E5E5"> can reproduce after you've</font>

102
00:05:06,930 --> 00:05:11,310
taken a dump of the memory but up until

103
00:05:08,850 --> 00:05:12,630
that point when you you know connect to

104
00:05:11,310 --> 00:05:14,070
the system<font color="#E5E5E5"> log in</font>

105
00:05:12,630 --> 00:05:17,070
start dumping memory you can't reproduce

106
00:05:14,070 --> 00:05:20,520
that at all and that's a<font color="#E5E5E5"> big thing for a</font>

107
00:05:17,070 --> 00:05:24,690
lot of people so what<font color="#CCCCCC"> can you find</font><font color="#E5E5E5"> in</font>

108
00:05:20,520 --> 00:05:26,570
memory a lot you could<font color="#E5E5E5"> find what running</font>

109
00:05:24,690 --> 00:05:30,000
kernel is what modules are loaded

110
00:05:26,570 --> 00:05:32,580
running dead processes dead processes

111
00:05:30,000 --> 00:05:34,500
that have you know been finished

112
00:05:32,580 --> 00:05:36,210
execution but<font color="#E5E5E5"> are still there are you</font>

113
00:05:34,500 --> 00:05:38,970
know data segments and their text

114
00:05:36,210 --> 00:05:40,530
segments still in memory network

115
00:05:38,970 --> 00:05:43,290
connections current as<font color="#CCCCCC"> well as</font>

116
00:05:40,530 --> 00:05:45,419
configuration memory mapped files if

117
00:05:43,290 --> 00:05:46,950
like a file has you know open text files

118
00:05:45,420 --> 00:05:48,900
<font color="#CCCCCC">that</font><font color="#E5E5E5"> it's reading or writing to you</font>

119
00:05:46,950 --> 00:05:51,539
could see those<font color="#E5E5E5"> you could find what</font>

120
00:05:48,900 --> 00:05:54,419
users are logged in firewall settings

121
00:05:51,540 --> 00:05:56,640
that might not be stored permanently web

122
00:05:54,420 --> 00:05:58,710
caches and pretty much lots of random

123
00:05:56,640 --> 00:06:00,930
<font color="#E5E5E5">ship anything</font><font color="#CCCCCC"> you do is going</font><font color="#E5E5E5"> to be a</font>

124
00:05:58,710 --> 00:06:02,700
memory at some point or another and when

125
00:06:00,930 --> 00:06:06,090
you do the forensic process you probably

126
00:06:02,700 --> 00:06:08,310
<font color="#E5E5E5">have a good chance of finding</font><font color="#CCCCCC"> that so</font>

127
00:06:06,090 --> 00:06:10,409
how do we<font color="#E5E5E5"> go about doing a</font><font color="#CCCCCC"> lot of</font>

128
00:06:08,310 --> 00:06:12,120
forensics things a lot<font color="#CCCCCC"> of</font><font color="#E5E5E5"> people as we</font>

129
00:06:10,410 --> 00:06:13,460
had earlier that the legal talk the

130
00:06:12,120 --> 00:06:16,590
<font color="#E5E5E5">virtualization talk there's a lot of</font>

131
00:06:13,460 --> 00:06:18,719
concern about the legality and the

132
00:06:16,590 --> 00:06:21,510
process to do<font color="#E5E5E5"> this so that it holds up</font>

133
00:06:18,720 --> 00:06:22,980
in court<font color="#E5E5E5"> and all the regular rules of</font>

134
00:06:21,510 --> 00:06:24,210
dead forensics apply when you get to the

135
00:06:22,980 --> 00:06:25,860
<font color="#CCCCCC">Machine you want to take a picture of</font>

136
00:06:24,210 --> 00:06:27,960
the screen you want to label all the

137
00:06:25,860 --> 00:06:29,940
cables you<font color="#E5E5E5"> want to you know all of that</font>

138
00:06:27,960 --> 00:06:31,289
is still<font color="#E5E5E5"> going to apply you're just</font>

139
00:06:29,940 --> 00:06:33,390
changing<font color="#CCCCCC"> you're not immediately</font>

140
00:06:31,290 --> 00:06:35,700
unplugging machine and taking a hard

141
00:06:33,390 --> 00:06:37,950
drive out and so the process is

142
00:06:35,700 --> 00:06:39,870
basically<font color="#E5E5E5"> to dump memory before you do</font>

143
00:06:37,950 --> 00:06:41,430
anything else and then after<font color="#CCCCCC"> you're</font>

144
00:06:39,870 --> 00:06:44,910
<font color="#E5E5E5">dumping you can gather volatile data</font>

145
00:06:41,430 --> 00:06:49,440
like using all your OS level commands<font color="#E5E5E5"> to</font>

146
00:06:44,910 --> 00:06:51,900
find you know netstat iptables all that

147
00:06:49,440 --> 00:06:53,520
kind of information you<font color="#E5E5E5"> don't have to do</font>

148
00:06:51,900 --> 00:06:55,380
it but<font color="#E5E5E5"> again like</font><font color="#CCCCCC"> I said</font><font color="#E5E5E5"> earlier it's</font>

149
00:06:53,520 --> 00:06:57,030
good to do because then you could find

150
00:06:55,380 --> 00:06:59,070
discrepancies between what your memory

151
00:06:57,030 --> 00:07:02,070
dump says and what your your

152
00:06:59,070 --> 00:07:04,740
administrative tools are saying and<font color="#E5E5E5"> then</font>

153
00:07:02,070 --> 00:07:06,510
after<font color="#CCCCCC"> that you you power off the machine</font>

154
00:07:04,740 --> 00:07:07,590
go to dead forensics if you want but

155
00:07:06,510 --> 00:07:09,150
eventually you're going to probably want

156
00:07:07,590 --> 00:07:11,070
<font color="#E5E5E5">to do an offline analysis of</font><font color="#CCCCCC"> your memory</font>

157
00:07:09,150 --> 00:07:12,859
dump to find those discrepancies and

158
00:07:11,070 --> 00:07:15,480
find more information that you might not

159
00:07:12,860 --> 00:07:18,450
easily get from all your administrative

160
00:07:15,480 --> 00:07:20,010
tools and then once that all all is done

161
00:07:18,450 --> 00:07:24,200
you<font color="#E5E5E5"> could probably go ahead attend for</font>

162
00:07:20,010 --> 00:07:24,200
dead forensics excuse me need<font color="#E5E5E5"> more beer</font>

163
00:07:28,759 --> 00:07:35,639
so how to dump memory Alter people have

164
00:07:34,080 --> 00:07:37,740
trouble getting this through their head

165
00:07:35,639 --> 00:07:39,419
that memory is pretty much just a file

166
00:07:37,740 --> 00:07:42,419
on your on every OS that<font color="#E5E5E5"> you have</font>

167
00:07:39,419 --> 00:07:44,279
including windows so it's trivial

168
00:07:42,419 --> 00:07:47,068
trivial to dump and you could do it

169
00:07:44,279 --> 00:07:50,009
either with hardware or software<font color="#E5E5E5"> I'll</font>

170
00:07:47,069 --> 00:07:53,249
just go into it so hard<font color="#CCCCCC"> where basically</font>

171
00:07:50,009 --> 00:07:55,229
is a device that<font color="#E5E5E5"> you uses DMA direct</font>

172
00:07:53,249 --> 00:07:57,289
memory access to bypass the OS to

173
00:07:55,229 --> 00:08:00,120
directly access memory just like<font color="#E5E5E5"> it's it</font>

174
00:07:57,289 --> 00:08:03,830
and the most<font color="#E5E5E5"> popular</font><font color="#CCCCCC"> devices</font><font color="#E5E5E5"> that</font>

175
00:08:00,120 --> 00:08:06,120
supported or<font color="#E5E5E5"> PCI pcmcia USB firewire</font>

176
00:08:03,830 --> 00:08:10,159
there was a thing which<font color="#CCCCCC"> the link leads</font>

177
00:08:06,120 --> 00:08:13,789
to where I pods were used<font color="#E5E5E5"> to unlock</font>

178
00:08:10,159 --> 00:08:16,740
unlock windows workstations or to

179
00:08:13,789 --> 00:08:19,860
display messages on a no excess machine

180
00:08:16,740 --> 00:08:21,089
OS X machine just<font color="#E5E5E5"> by loading plugging</font>

181
00:08:19,860 --> 00:08:22,529
the device in and then it<font color="#E5E5E5"> overwrites</font>

182
00:08:21,089 --> 00:08:24,539
certain parts of memory<font color="#CCCCCC"> that would you</font>

183
00:08:22,529 --> 00:08:26,490
know control whether or not the screens

184
00:08:24,539 --> 00:08:30,449
locked or what's displaying what's next

185
00:08:26,490 --> 00:08:32,760
executing but it can be defeated<font color="#E5E5E5"> paper</font>

186
00:08:30,449 --> 00:08:34,318
referenced here it's basically a really

187
00:08:32,760 --> 00:08:37,289
technical thing that I<font color="#E5E5E5"> don't want to get</font>

188
00:08:34,318 --> 00:08:39,510
<font color="#E5E5E5">into where it just has the CPU rear out</font>

189
00:08:37,289 --> 00:08:41,098
dma requests and you can forge them

190
00:08:39,510 --> 00:08:44,850
basically<font color="#E5E5E5"> what it is if you want more</font>

191
00:08:41,099 --> 00:08:46,620
information by all<font color="#E5E5E5"> means look her up so</font>

192
00:08:44,850 --> 00:08:48,899
the other thing which is probably

193
00:08:46,620 --> 00:08:50,790
probably more practical for the<font color="#E5E5E5"> majority</font>

194
00:08:48,899 --> 00:08:53,819
of you as software dumping and like<font color="#E5E5E5"> I</font>

195
00:08:50,790 --> 00:08:56,279
said every all memory in every OS is

196
00:08:53,819 --> 00:08:59,579
referenced by file on unix<font color="#CCCCCC"> it's</font><font color="#E5E5E5"> Deb</font>

197
00:08:56,279 --> 00:09:03,149
ma'am and<font color="#CCCCCC"> Linux cake or</font><font color="#E5E5E5"> dev</font><font color="#CCCCCC"> ma'am OSX</font>

198
00:08:59,579 --> 00:09:05,310
same thing windows also has this the

199
00:09:03,149 --> 00:09:07,920
asterisks are there because in newer

200
00:09:05,310 --> 00:09:11,609
versions of OS X you have<font color="#CCCCCC"> to pass a boot</font>

201
00:09:07,920 --> 00:09:15,540
parameter to enable dev ma'am and dev

202
00:09:11,610 --> 00:09:17,610
<font color="#CCCCCC">kmn kmm devices and in windows as vista</font>

203
00:09:15,540 --> 00:09:20,430
they're not native they're not normally

204
00:09:17,610 --> 00:09:23,339
allowing access to that file<font color="#E5E5E5"> so on XP</font>

205
00:09:20,430 --> 00:09:27,569
2003 older than that you can<font color="#CCCCCC"> do it on</font>

206
00:09:23,339 --> 00:09:30,149
vista you'd have to enable it as well<font color="#E5E5E5"> so</font>

207
00:09:27,569 --> 00:09:32,550
at the bottom is an example of<font color="#E5E5E5"> just</font>

208
00:09:30,149 --> 00:09:35,550
using DD I mean it's just<font color="#E5E5E5"> a file all you</font>

209
00:09:32,550 --> 00:09:37,609
need<font color="#E5E5E5"> to do</font><font color="#CCCCCC"> is copy the bytes and just</font>

210
00:09:35,550 --> 00:09:41,910
copy<font color="#E5E5E5"> it to an image</font>

211
00:09:37,610 --> 00:09:43,949
so software takes a lot more preparation

212
00:09:41,910 --> 00:09:44,939
to do than hardware dumping because it

213
00:09:43,949 --> 00:09:46,019
was hard we're dumping you you've

214
00:09:44,939 --> 00:09:47,550
already written the driver for your

215
00:09:46,019 --> 00:09:50,250
hardware device and all it does is copy

216
00:09:47,550 --> 00:09:51,899
all the memory and then you unplug it we

217
00:09:50,250 --> 00:09:53,850
software you need to prepare more you

218
00:09:51,899 --> 00:09:57,180
need<font color="#E5E5E5"> to create trusted toolkit of</font>

219
00:09:53,850 --> 00:09:59,220
<font color="#E5E5E5">statically compiled binaries because you</font>

220
00:09:57,180 --> 00:10:01,109
don't<font color="#CCCCCC"> want to use what the OS is giving</font>

221
00:09:59,220 --> 00:10:04,050
you<font color="#E5E5E5"> because they might have modified ed</font>

222
00:10:01,110 --> 00:10:07,470
to give you junk back when you DD<font color="#E5E5E5"> Deb</font>

223
00:10:04,050 --> 00:10:08,910
ma'am or whatever you also if you don't

224
00:10:07,470 --> 00:10:11,459
want to store<font color="#CCCCCC"> it locally like on</font><font color="#E5E5E5"> a flash</font>

225
00:10:08,910 --> 00:10:13,350
driver or some kind of device you want

226
00:10:11,459 --> 00:10:15,359
<font color="#E5E5E5">to prepare a net cast session on the</font>

227
00:10:13,350 --> 00:10:18,000
other end or<font color="#CCCCCC"> crypt cat if you want to</font>

228
00:10:15,360 --> 00:10:20,699
encrypt your session you might want<font color="#E5E5E5"> to</font>

229
00:10:18,000 --> 00:10:22,620
consider using scripts so that your

230
00:10:20,699 --> 00:10:24,120
memory footprint is less<font color="#E5E5E5"> just because</font>

231
00:10:22,620 --> 00:10:25,410
you're not<font color="#E5E5E5"> sitting there in the show you</font>

232
00:10:24,120 --> 00:10:27,120
<font color="#E5E5E5">know repeatedly entering commands</font>

233
00:10:25,410 --> 00:10:29,459
<font color="#E5E5E5">because all that's going to go</font><font color="#CCCCCC"> in the</font>

234
00:10:27,120 --> 00:10:33,839
the terminal frame buffer and you know

235
00:10:29,459 --> 00:10:35,638
the bash buffer and all that so you're

236
00:10:33,839 --> 00:10:37,560
overriding more than you want<font color="#E5E5E5"> to with</font>

237
00:10:35,639 --> 00:10:39,899
the script is just one command and then

238
00:10:37,560 --> 00:10:41,309
<font color="#E5E5E5">you could log out</font><font color="#CCCCCC"> of the system the main</font>

239
00:10:39,899 --> 00:10:42,389
<font color="#CCCCCC">thing here is</font><font color="#E5E5E5"> just to understand what</font>

240
00:10:41,309 --> 00:10:44,129
you're<font color="#E5E5E5"> doing and remember your goals</font>

241
00:10:42,389 --> 00:10:45,569
your goals is to just get the

242
00:10:44,129 --> 00:10:47,579
information<font color="#E5E5E5"> as quickly as</font><font color="#CCCCCC"> possible</font>

243
00:10:45,569 --> 00:10:49,860
without affecting memory as quickly as

244
00:10:47,579 --> 00:10:55,559
<font color="#CCCCCC">possible so a script is a really</font><font color="#E5E5E5"> good</font>

245
00:10:49,860 --> 00:10:57,209
<font color="#E5E5E5">way to do that so assuming you've made</font>

246
00:10:55,559 --> 00:11:00,269
your memory dump using<font color="#E5E5E5"> BD now you want</font>

247
00:10:57,209 --> 00:11:01,829
to gather live info so the disclaimer

248
00:11:00,269 --> 00:11:04,559
here is that if you're qualified<font color="#CCCCCC"> to give</font>

249
00:11:01,829 --> 00:11:06,359
a live forensics investigation you're

250
00:11:04,559 --> 00:11:07,680
qualified to know<font color="#E5E5E5"> what those commands</font>

251
00:11:06,360 --> 00:11:10,519
<font color="#E5E5E5">are in a system that gets you</font>

252
00:11:07,680 --> 00:11:14,128
information because I could put you<font color="#E5E5E5"> know</font>

253
00:11:10,519 --> 00:11:15,389
PS<font color="#CCCCCC"> Nets</font><font color="#E5E5E5"> that all these commands and but</font>

254
00:11:14,129 --> 00:11:16,709
you should know that<font color="#E5E5E5"> already how to get</font>

255
00:11:15,389 --> 00:11:19,139
all the information you want and<font color="#E5E5E5"> what</font>

256
00:11:16,709 --> 00:11:21,750
<font color="#E5E5E5">information you want is specific to your</font>

257
00:11:19,139 --> 00:11:23,639
needs but the main<font color="#CCCCCC"> thing is to use your</font>

258
00:11:21,750 --> 00:11:26,639
trusted commands your statically

259
00:11:23,639 --> 00:11:28,350
compiled data remember a path a lot of

260
00:11:26,639 --> 00:11:30,730
malware might modify path to try and

261
00:11:28,350 --> 00:11:42,850
trick you into thank you

262
00:11:30,730 --> 00:11:47,170
oh yeah me you know what you got a spear

263
00:11:42,850 --> 00:11:58,300
oh I don't<font color="#E5E5E5"> think</font><font color="#CCCCCC"> it's gonna like that</font><font color="#E5E5E5"> at</font>

264
00:11:47,170 --> 00:12:00,699
all I know you could see this one<font color="#E5E5E5"> okay</font>

265
00:11:58,300 --> 00:12:02,349
so remember path a lot of malware

266
00:12:00,699 --> 00:12:04,149
modifies paths to try and<font color="#E5E5E5"> get you to</font>

267
00:12:02,350 --> 00:12:06,010
execute things in different directories

268
00:12:04,149 --> 00:12:08,470
so you might think<font color="#CCCCCC"> you're running your</font>

269
00:12:06,010 --> 00:12:10,660
DD generally what<font color="#E5E5E5"> you want to do is</font><font color="#CCCCCC"> just</font>

270
00:12:08,470 --> 00:12:12,160
skip<font color="#CCCCCC"> paths all together and use full</font>

271
00:12:10,660 --> 00:12:14,079
path names for everything you execute

272
00:12:12,160 --> 00:12:15,760
just because<font color="#E5E5E5"> that's much easier and you</font>

273
00:12:14,079 --> 00:12:19,899
<font color="#E5E5E5">don't have to overwrite path which would</font>

274
00:12:15,760 --> 00:12:21,639
again modify your memory and then once

275
00:12:19,899 --> 00:12:24,010
you once you gathered all your life info

276
00:12:21,639 --> 00:12:27,339
you want to store<font color="#E5E5E5"> that locally on the</font>

277
00:12:24,010 --> 00:12:30,220
hard drive or flash drive you have or n

278
00:12:27,339 --> 00:12:32,589
cat or krippcat it to a rollin system

279
00:12:30,220 --> 00:12:35,230
remember to md5 hash all of the live

280
00:12:32,589 --> 00:12:36,760
info as<font color="#CCCCCC"> well as the memory dump just so</font>

281
00:12:35,230 --> 00:12:40,959
that you could you know say<font color="#E5E5E5"> this is</font>

282
00:12:36,760 --> 00:12:43,240
exactly what I got<font color="#E5E5E5"> at a later date and</font>

283
00:12:40,959 --> 00:12:45,750
then specific to software stuff you

284
00:12:43,240 --> 00:12:48,220
might want to look for rootkits in a

285
00:12:45,750 --> 00:12:50,139
security<font color="#E5E5E5"> compromised kind of situation</font>

286
00:12:48,220 --> 00:12:51,670
it's generally you you want to<font color="#E5E5E5"> identify</font>

287
00:12:50,139 --> 00:12:53,519
that it's compromised as soon as

288
00:12:51,670 --> 00:12:56,050
possible and they just pull it off line

289
00:12:53,519 --> 00:12:58,600
so there's a bunch<font color="#E5E5E5"> of tools rootkit</font>

290
00:12:56,050 --> 00:13:00,939
hunter the only note is that you have<font color="#E5E5E5"> to</font>

291
00:12:58,600 --> 00:13:02,430
have<font color="#E5E5E5"> it installed before you you run it</font>

292
00:13:00,940 --> 00:13:05,170
or else there's no point<font color="#E5E5E5"> in running it</font>

293
00:13:02,430 --> 00:13:06,638
because it'll just profile your existing

294
00:13:05,170 --> 00:13:09,459
system and then look for changes later

295
00:13:06,639 --> 00:13:12,670
so there's also a kernel module to look

296
00:13:09,459 --> 00:13:15,579
for rootkits 99 luftballons was released

297
00:13:12,670 --> 00:13:16,810
at tuacahn nine last year and it's a

298
00:13:15,579 --> 00:13:19,870
really really cool<font color="#E5E5E5"> tool for finding</font>

299
00:13:16,810 --> 00:13:21,699
<font color="#E5E5E5">Colonel</font><font color="#CCCCCC"> brew kits and then again manual</font>

300
00:13:19,870 --> 00:13:23,380
inspection if you don't want to use any

301
00:13:21,699 --> 00:13:24,969
<font color="#CCCCCC">other tools you could do it again</font>

302
00:13:23,380 --> 00:13:30,220
consider scripting it just to make it

303
00:13:24,970 --> 00:13:33,339
<font color="#E5E5E5">faster smaller memory footprint so</font>

304
00:13:30,220 --> 00:13:35,199
you've you've dumped memory you've done

305
00:13:33,339 --> 00:13:36,970
<font color="#E5E5E5">your administrative stuff to get all</font>

306
00:13:35,199 --> 00:13:38,019
that data now you<font color="#E5E5E5"> have all this data to</font>

307
00:13:36,970 --> 00:13:40,300
go through and<font color="#E5E5E5"> you're going to analyze</font>

308
00:13:38,019 --> 00:13:41,529
it offline it's more<font color="#E5E5E5"> or less reverse</font>

309
00:13:40,300 --> 00:13:43,290
engineering if you're going to

310
00:13:41,529 --> 00:13:45,570
disassemble the memory

311
00:13:43,290 --> 00:13:50,819
manually that's all<font color="#E5E5E5"> it is it's just</font>

312
00:13:45,570 --> 00:13:52,320
consider it one<font color="#E5E5E5"> big-ass elf file and</font>

313
00:13:50,820 --> 00:13:53,610
then you know<font color="#E5E5E5"> besides that there's</font>

314
00:13:52,320 --> 00:13:55,339
there's certain things you might<font color="#CCCCCC"> want to</font>

315
00:13:53,610 --> 00:13:58,230
do you might let a string search

316
00:13:55,339 --> 00:14:01,259
<font color="#E5E5E5">tried-and-true very simple to do strings</font>

317
00:13:58,230 --> 00:14:02,610
prep their specialized algorithms if you

318
00:14:01,259 --> 00:14:04,560
don't want to use space strings or grab

319
00:14:02,610 --> 00:14:07,649
a lot of forensics tool kits will have

320
00:14:04,560 --> 00:14:10,739
this<font color="#E5E5E5"> n case has one I think</font><font color="#CCCCCC"> ftk has one</font>

321
00:14:07,649 --> 00:14:13,370
as well<font color="#E5E5E5"> usually hilarious and the reason</font>

322
00:14:10,740 --> 00:14:16,199
for that is shell histories are

323
00:14:13,370 --> 00:14:19,790
hilarious of compromised machines so

324
00:14:16,199 --> 00:14:23,729
we'll begin<font color="#CCCCCC"> with as you see at the top</font>

325
00:14:19,790 --> 00:14:26,550
where's<font color="#E5E5E5"> my mouth right here the the</font>

326
00:14:23,730 --> 00:14:28,350
compromise this<font color="#E5E5E5"> is an actual log from</font>

327
00:14:26,550 --> 00:14:31,199
from a live forensics thing that I did

328
00:14:28,350 --> 00:14:33,420
he's in dev<font color="#CCCCCC"> SH M which is a virtual file</font>

329
00:14:31,199 --> 00:14:34,829
system in Linux so it won't touch the

330
00:14:33,420 --> 00:14:36,599
hard drive at all so you could already

331
00:14:34,829 --> 00:14:40,620
see that they're using<font color="#E5E5E5"> anti dead</font>

332
00:14:36,600 --> 00:14:42,810
forensic stuff but I still catch him so

333
00:14:40,620 --> 00:14:45,750
we get his full path from<font color="#E5E5E5"> ps1 he</font>

334
00:14:42,810 --> 00:14:47,550
installs<font color="#E5E5E5"> his bot he tries to run be host</font>

335
00:14:45,750 --> 00:14:49,170
no such file or directory<font color="#E5E5E5"> okay so he</font>

336
00:14:47,550 --> 00:14:52,589
spells it right permission denied owned

337
00:14:49,170 --> 00:14:54,810
<font color="#E5E5E5">by you mask not executable by default he</font>

338
00:14:52,589 --> 00:14:58,079
goes and he makes everything executable

339
00:14:54,810 --> 00:15:00,599
for everyone and then runs it but

340
00:14:58,079 --> 00:15:05,579
<font color="#CCCCCC">apparently you can't run IP addresses as</font>

341
00:15:00,600 --> 00:15:07,680
commands it doesn't<font color="#E5E5E5"> work</font><font color="#CCCCCC"> like that so</font>

342
00:15:05,579 --> 00:15:10,620
<font color="#E5E5E5">okay he runs some other program no</font>

343
00:15:07,680 --> 00:15:12,329
output this<font color="#CCCCCC"> is a data from the terminal</font>

344
00:15:10,620 --> 00:15:13,470
buffer so you see<font color="#E5E5E5"> literally what they</font>

345
00:15:12,329 --> 00:15:15,959
see is it going through the<font color="#E5E5E5"> show and</font>

346
00:15:13,470 --> 00:15:18,860
then he runs do but he doesn't know how

347
00:15:15,959 --> 00:15:23,729
to run do so he should rtfm right and

348
00:15:18,860 --> 00:15:26,639
then another similar investigation was

349
00:15:23,730 --> 00:15:28,290
this guy trying<font color="#CCCCCC"> to log out as you know</font>

350
00:15:26,639 --> 00:15:29,939
<font color="#E5E5E5">in linux and unix you can't log out if</font>

351
00:15:28,290 --> 00:15:32,579
there's stop jobs it doesn't like that

352
00:15:29,939 --> 00:15:34,709
so unsent his file again evading dead

353
00:15:32,579 --> 00:15:36,810
forensics of his shell history exit log

354
00:15:34,709 --> 00:15:38,550
out there stop jobs<font color="#E5E5E5"> okay let's try it</font>

355
00:15:36,810 --> 00:15:40,529
again there's stop jobs this went on for

356
00:15:38,550 --> 00:15:45,750
like 40 lines and they could have log

357
00:15:40,529 --> 00:15:48,029
out it was really really<font color="#CCCCCC"> good so again</font>

358
00:15:45,750 --> 00:15:49,829
hilarity often ensues<font color="#CCCCCC"> it's a</font><font color="#E5E5E5"> good</font>

359
00:15:48,029 --> 00:15:52,709
motivator to keep you going because<font color="#E5E5E5"> it's</font>

360
00:15:49,829 --> 00:15:55,290
a lot of data<font color="#E5E5E5"> to sort through the next</font>

361
00:15:52,709 --> 00:15:56,949
thing would be file carving if they have

362
00:15:55,290 --> 00:15:59,050
open memory mapped files

363
00:15:56,950 --> 00:16:01,060
you can carve<font color="#E5E5E5"> them out</font><font color="#CCCCCC"> of every just</font>

364
00:15:59,050 --> 00:16:02,709
like<font color="#E5E5E5"> it sounds there's a lot of free</font>

365
00:16:01,060 --> 00:16:04,869
tools to<font color="#E5E5E5"> do this scalpel for most</font>

366
00:16:02,710 --> 00:16:07,570
commercial tools n case has a file

367
00:16:04,870 --> 00:16:08,830
<font color="#CCCCCC">carver FD k as a file</font><font color="#E5E5E5"> carver most</font>

368
00:16:07,570 --> 00:16:10,720
forensics tool kits have their own

369
00:16:08,830 --> 00:16:11,860
magical file<font color="#E5E5E5"> carver and they're all</font>

370
00:16:10,720 --> 00:16:13,570
pretty much the same thing where they

371
00:16:11,860 --> 00:16:15,700
just<font color="#E5E5E5"> look for a certain header and then</font>

372
00:16:13,570 --> 00:16:17,950
<font color="#E5E5E5">a certain footer or a certain header and</font>

373
00:16:15,700 --> 00:16:21,790
then five megs after that will<font color="#E5E5E5"> be the</font>

374
00:16:17,950 --> 00:16:23,500
file and then if you want to get even

375
00:16:21,790 --> 00:16:24,760
you know the most intense you could get

376
00:16:23,500 --> 00:16:26,500
about this<font color="#E5E5E5"> is interpreting all the</font>

377
00:16:24,760 --> 00:16:28,510
<font color="#CCCCCC">kernel structures from your memory dump</font>

378
00:16:26,500 --> 00:16:30,520
and all the same<font color="#E5E5E5"> stuff you get from your</font>

379
00:16:28,510 --> 00:16:31,900
administrative tools will be there<font color="#CCCCCC"> PS</font>

380
00:16:30,520 --> 00:16:33,670
will be there netstat<font color="#CCCCCC"> I'll be there all</font>

381
00:16:31,900 --> 00:16:36,939
the<font color="#E5E5E5"> stuff in proc all that information</font>

382
00:16:33,670 --> 00:16:38,319
is probably going to<font color="#E5E5E5"> be in memory the</font>

383
00:16:36,940 --> 00:16:39,760
problem is that<font color="#E5E5E5"> there's few ready to use</font>

384
00:16:38,320 --> 00:16:42,520
Linux tools there's a lot of<font color="#E5E5E5"> Windows</font>

385
00:16:39,760 --> 00:16:45,130
tools to do this I<font color="#E5E5E5"> detect was a proof of</font>

386
00:16:42,520 --> 00:16:47,140
concept for 2.4 kernels doesn't work in

387
00:16:45,130 --> 00:16:49,120
2.6 but you could just<font color="#E5E5E5"> read</font>

388
00:16:47,140 --> 00:16:50,949
understanding the Linux kernel by

389
00:16:49,120 --> 00:16:52,840
o'reilly which is really informative and

390
00:16:50,950 --> 00:16:55,360
for me<font color="#CCCCCC"> i come from like an assembly</font>

391
00:16:52,840 --> 00:16:56,710
background so it's<font color="#E5E5E5"> not too hard to wrap</font>

392
00:16:55,360 --> 00:16:59,080
my head around<font color="#E5E5E5"> colonel structures</font>

393
00:16:56,710 --> 00:17:00,850
hopefully not<font color="#CCCCCC"> for you either and then</font>

394
00:16:59,080 --> 00:17:02,650
the guy<font color="#E5E5E5"> who wrote i detect also has a</font>

395
00:17:00,850 --> 00:17:04,780
paper if you<font color="#CCCCCC"> want to read</font><font color="#E5E5E5"> his paper and</font>

396
00:17:02,650 --> 00:17:06,609
apply it<font color="#E5E5E5"> to 26 basically just how the</font>

397
00:17:04,780 --> 00:17:09,430
Tool Works and how it you know grabs<font color="#E5E5E5"> all</font>

398
00:17:06,609 --> 00:17:11,290
this stuff out<font color="#CCCCCC"> of that Colonel dump so</font>

399
00:17:09,430 --> 00:17:15,780
the next<font color="#CCCCCC"> part of our talk will be the</font>

400
00:17:11,290 --> 00:17:15,780
code blue detects and that's all viet

401
00:17:20,980 --> 00:17:25,069
<font color="#E5E5E5">all right I'm just going to give a</font>

402
00:17:23,119 --> 00:17:27,439
weren't ending this talked basically as

403
00:17:25,069 --> 00:17:29,600
an introduction<font color="#CCCCCC"> to cold boot attacks by</font>

404
00:17:27,440 --> 00:17:31,400
<font color="#CCCCCC">weren't by no means experts in this this</font>

405
00:17:29,600 --> 00:17:33,260
<font color="#E5E5E5">is</font><font color="#CCCCCC"> something that came out of a paper</font>

406
00:17:31,400 --> 00:17:35,300
that<font color="#CCCCCC"> was published by Princeton</font>

407
00:17:33,260 --> 00:17:36,980
University in conjunction with the eff

408
00:17:35,300 --> 00:17:39,050
and<font color="#E5E5E5"> with wind river systems back in</font>

409
00:17:36,980 --> 00:17:40,760
February we want to stress this<font color="#E5E5E5"> is not</font>

410
00:17:39,050 --> 00:17:41,930
our research we just this is something

411
00:17:40,760 --> 00:17:44,030
<font color="#CCCCCC">that kind</font><font color="#E5E5E5"> of sent a shockwave through</font>

412
00:17:41,930 --> 00:17:47,140
the forensics community when it came out

413
00:17:44,030 --> 00:17:51,040
<font color="#E5E5E5">and we just want to make</font><font color="#CCCCCC"> you aware of it</font>

414
00:17:47,140 --> 00:17:51,040
many of you<font color="#E5E5E5"> probably already are</font>

415
00:17:51,160 --> 00:17:55,040
essentially<font color="#CCCCCC"> what a cold boot attack is</font>

416
00:17:53,270 --> 00:17:57,620
is a way<font color="#E5E5E5"> to attack a whole disk</font>

417
00:17:55,040 --> 00:18:00,379
encryption system and it's based on the

418
00:17:57,620 --> 00:18:02,209
unexpectedly long decay rate of DRAM

419
00:18:00,380 --> 00:18:05,180
memory for a long time people<font color="#E5E5E5"> have</font>

420
00:18:02,210 --> 00:18:07,010
assumed that<font color="#CCCCCC"> when you show up your</font>

421
00:18:05,180 --> 00:18:08,840
computer everything in memory has gone

422
00:18:07,010 --> 00:18:11,420
immediately and that's<font color="#CCCCCC"> just not the case</font>

423
00:18:08,840 --> 00:18:13,459
<font color="#E5E5E5">and in fact using some of the techniques</font>

424
00:18:11,420 --> 00:18:15,590
<font color="#E5E5E5">that the team at Princeton put together</font>

425
00:18:13,460 --> 00:18:19,220
it's actually<font color="#CCCCCC"> very plausible to attack a</font>

426
00:18:15,590 --> 00:18:21,080
system that's been even shut down<font color="#E5E5E5"> for a</font>

427
00:18:19,220 --> 00:18:23,170
while using<font color="#E5E5E5"> some</font><font color="#CCCCCC"> of their tools for</font>

428
00:18:21,080 --> 00:18:26,060
reconstructing decayed memory and the

429
00:18:23,170 --> 00:18:27,830
takeaway here is that just about every

430
00:18:26,060 --> 00:18:30,470
disk encryption system is vulnerable

431
00:18:27,830 --> 00:18:36,560
right now BitLocker<font color="#CCCCCC"> filevault truecrypt</font>

432
00:18:30,470 --> 00:18:37,640
etc so deram remnants<font color="#CCCCCC"> effects the first</font>

433
00:18:36,560 --> 00:18:38,780
thing<font color="#E5E5E5"> we understand here is that they're</font>

434
00:18:37,640 --> 00:18:40,220
different<font color="#CCCCCC"> from</font><font color="#E5E5E5"> what you might</font><font color="#CCCCCC"> be</font>

435
00:18:38,780 --> 00:18:42,790
familiar with with a<font color="#CCCCCC"> gutman burning</font>

436
00:18:40,220 --> 00:18:45,050
effect where a<font color="#E5E5E5"> semi conductor holds a</font>

437
00:18:42,790 --> 00:18:46,760
value for<font color="#E5E5E5"> a certain amount</font><font color="#CCCCCC"> of time and</font>

438
00:18:45,050 --> 00:18:48,290
<font color="#E5E5E5">then it picks it up easier later or it's</font>

439
00:18:46,760 --> 00:18:49,700
easier to detect this is actually

440
00:18:48,290 --> 00:18:51,649
slightly different<font color="#E5E5E5"> this has to do with</font>

441
00:18:49,700 --> 00:18:53,390
how<font color="#CCCCCC"> long it takes the MOSFETs to</font>

442
00:18:51,650 --> 00:18:56,780
actually decay when the system is turned

443
00:18:53,390 --> 00:18:57,800
off and as I said<font color="#CCCCCC"> before assuming that</font>

444
00:18:56,780 --> 00:19:01,760
that decay instantaneous is

445
00:18:57,800 --> 00:19:04,070
instantaneous will result in failure so

446
00:19:01,760 --> 00:19:05,750
let's see memory decay occurs as the

447
00:19:04,070 --> 00:19:08,000
MOSFETs return to the ground state in

448
00:19:05,750 --> 00:19:09,290
the ground state in the RAM can be a 0

449
00:19:08,000 --> 00:19:12,400
<font color="#CCCCCC">or 1 depending on which way the</font>

450
00:19:09,290 --> 00:19:16,280
capacitor is wired inside the memory

451
00:19:12,400 --> 00:19:17,720
complete decay can tend to equal several

452
00:19:16,280 --> 00:19:20,420
thousand refresh cycles normally when

453
00:19:17,720 --> 00:19:22,340
the computer's operating the system will

454
00:19:20,420 --> 00:19:25,280
go through and refresh each capacitor in

455
00:19:22,340 --> 00:19:26,929
rem to keep the memory in state as the

456
00:19:25,280 --> 00:19:28,970
programs are running when it's shut down

457
00:19:26,930 --> 00:19:30,830
takes a while for that to bleed out and

458
00:19:28,970 --> 00:19:33,100
it can take several thousand refresh

459
00:19:30,830 --> 00:19:35,389
cycles that to happen

460
00:19:33,100 --> 00:19:37,580
the k rate is also<font color="#CCCCCC"> a function of</font>

461
00:19:35,389 --> 00:19:40,729
temperature the warm of the<font color="#CCCCCC"> RAM is the</font>

462
00:19:37,580 --> 00:19:43,070
faster it'll decay and there's a pattern

463
00:19:40,730 --> 00:19:44,990
<font color="#E5E5E5">that tends to happen which is slow fast</font>

464
00:19:43,070 --> 00:19:46,730
slow decay rate starts off slow

465
00:19:44,990 --> 00:19:49,970
accelerates through a curve<font color="#E5E5E5"> and then</font>

466
00:19:46,730 --> 00:19:55,519
tails off and also<font color="#E5E5E5"> higher density or</font>

467
00:19:49,970 --> 00:19:57,590
newer<font color="#CCCCCC"> Ram tends to decay faster so what</font>

468
00:19:55,519 --> 00:20:06,230
we're<font color="#CCCCCC"> looking at here is going</font><font color="#E5E5E5"> to take</font>

469
00:19:57,590 --> 00:20:07,879
this<font color="#CCCCCC"> thing over your second what you're</font>

470
00:20:06,230 --> 00:20:10,519
<font color="#E5E5E5">looking at here this is taken from the</font>

471
00:20:07,879 --> 00:20:12,649
Princeton paper it's an image that<font color="#CCCCCC"> is</font>

472
00:20:10,519 --> 00:20:14,299
been pulled out of<font color="#E5E5E5"> memory over different</font>

473
00:20:12,649 --> 00:20:16,399
periods<font color="#E5E5E5"> of time five seconds 30 seconds</font>

474
00:20:14,299 --> 00:20:19,039
a minute<font color="#E5E5E5"> and five minutes you can see</font>

475
00:20:16,399 --> 00:20:22,189
these white and black lines this is

476
00:20:19,039 --> 00:20:27,169
memory decaying to its ground state<font color="#CCCCCC"> 001</font>

477
00:20:22,190 --> 00:20:28,549
sorry and why this is important is

478
00:20:27,169 --> 00:20:31,779
because the eventual state of any

479
00:20:28,549 --> 00:20:34,580
particular MOSFET can often be predicted

480
00:20:31,779 --> 00:20:36,350
also the relative order of decay often

481
00:20:34,580 --> 00:20:37,999
stays constant regardless of temperature

482
00:20:36,350 --> 00:20:39,559
I believe what they're referring to in

483
00:20:37,999 --> 00:20:40,730
the paper if<font color="#E5E5E5"> you notice in these</font><font color="#CCCCCC"> images</font>

484
00:20:39,559 --> 00:20:43,009
here in the middle<font color="#CCCCCC"> you can sign this</font>

485
00:20:40,730 --> 00:20:45,559
kind of<font color="#E5E5E5"> see some striations heading up</font>

486
00:20:43,009 --> 00:20:46,789
and down these are banks of MOSFETs that

487
00:20:45,559 --> 00:20:47,928
are decaying at a slightly different

488
00:20:46,789 --> 00:20:50,299
rate from the neighbors but you'll

489
00:20:47,929 --> 00:20:54,110
notice<font color="#E5E5E5"> there's patterns what this means</font>

490
00:20:50,299 --> 00:20:57,259
is<font color="#CCCCCC"> that after you've captured an image</font>

491
00:20:54,110 --> 00:20:58,758
out<font color="#E5E5E5"> of the RAM even if it's decayed you</font>

492
00:20:57,259 --> 00:21:00,590
can then<font color="#CCCCCC"> go back after the</font><font color="#E5E5E5"> RAM is fully</font>

493
00:20:58,759 --> 00:21:01,970
decayed run algorithms that will look at

494
00:21:00,590 --> 00:21:04,220
the exact ram sticks that you're

495
00:21:01,970 --> 00:21:06,860
analyzing and start to build values for

496
00:21:04,220 --> 00:21:08,059
how soon each MOSFET<font color="#CCCCCC"> is likely to decay</font>

497
00:21:06,860 --> 00:21:10,418
which will help you then go back and

498
00:21:08,059 --> 00:21:12,499
<font color="#E5E5E5">isolate and rebuild the decayed memory</font>

499
00:21:10,419 --> 00:21:21,110
it's a very interesting<font color="#E5E5E5"> technique that</font>

500
00:21:12,499 --> 00:21:23,360
came up<font color="#E5E5E5"> with so essentially</font><font color="#CCCCCC"> for cold</font>

501
00:21:21,110 --> 00:21:26,330
boot attacks the<font color="#CCCCCC"> Princeton team</font>

502
00:21:23,360 --> 00:21:30,139
identified three types first one is just

503
00:21:26,330 --> 00:21:32,149
a simple reboot plug<font color="#CCCCCC"> your memory stick</font>

504
00:21:30,139 --> 00:21:34,070
into<font color="#E5E5E5"> the computer its power button now</font>

505
00:21:32,149 --> 00:21:36,498
this<font color="#E5E5E5"> has the advantage of being fast and</font>

506
00:21:34,070 --> 00:21:37,879
<font color="#E5E5E5">very easy however it has a downside that</font>

507
00:21:36,499 --> 00:21:39,590
<font color="#E5E5E5">data can be destroyed during the</font>

508
00:21:37,879 --> 00:21:41,449
shutdown process and you also are going

509
00:21:39,590 --> 00:21:43,908
<font color="#E5E5E5">to possibly overwrite some of the RAM as</font>

510
00:21:41,450 --> 00:21:45,710
the<font color="#E5E5E5"> system comes</font><font color="#CCCCCC"> back up the second type</font>

511
00:21:43,909 --> 00:21:46,000
of<font color="#E5E5E5"> attack is essentially exactly the</font>

512
00:21:45,710 --> 00:21:47,200
same

513
00:21:46,000 --> 00:21:49,120
except instead<font color="#E5E5E5"> of shutting down and</font>

514
00:21:47,200 --> 00:21:51,460
rebooting you go<font color="#CCCCCC"> too far hard power cut</font>

515
00:21:49,120 --> 00:21:54,159
just like<font color="#E5E5E5"> you normally did in old school</font>

516
00:21:51,460 --> 00:21:57,250
dead system forensics again this<font color="#E5E5E5"> has the</font>

517
00:21:54,160 --> 00:21:59,320
side effect the downside<font color="#CCCCCC"> of</font><font color="#E5E5E5"> overwriting</font>

518
00:21:57,250 --> 00:22:01,180
some memory and<font color="#E5E5E5"> ram as the system comes</font>

519
00:21:59,320 --> 00:22:03,669
<font color="#CCCCCC">back up over though</font><font color="#E5E5E5"> it does overcome the</font>

520
00:22:01,180 --> 00:22:05,140
shutdown problem the third type<font color="#CCCCCC"> of</font>

521
00:22:03,670 --> 00:22:08,260
attack which is the most<font color="#CCCCCC"> powerful is</font>

522
00:22:05,140 --> 00:22:14,280
actually transplanting the<font color="#E5E5E5"> DRAM out of</font>

523
00:22:08,260 --> 00:22:16,840
the system into an analysis machine the

524
00:22:14,280 --> 00:22:18,580
<font color="#CCCCCC">princeton team identified an interesting</font>

525
00:22:16,840 --> 00:22:20,320
little technique where they took<font color="#E5E5E5"> a can</font>

526
00:22:18,580 --> 00:22:22,449
of canned air turned it upside down<font color="#CCCCCC"> and</font>

527
00:22:20,320 --> 00:22:23,950
just hosed off the<font color="#CCCCCC"> RAM in</font><font color="#E5E5E5"> the machine</font>

528
00:22:22,450 --> 00:22:25,450
before they pulled<font color="#E5E5E5"> it out</font><font color="#CCCCCC"> and it gave</font>

529
00:22:23,950 --> 00:22:26,860
them more than enough time to easily

530
00:22:25,450 --> 00:22:28,960
transplant it to an analysis machine

531
00:22:26,860 --> 00:22:31,719
start it back up and pull all the data

532
00:22:28,960 --> 00:22:33,940
out in fact as a test they<font color="#E5E5E5"> took they did</font>

533
00:22:31,720 --> 00:22:35,500
this hose off the RAM and then dipped it

534
00:22:33,940 --> 00:22:37,930
in liquid nitrogen and left it alone for

535
00:22:35,500 --> 00:22:39,760
<font color="#CCCCCC">an hour pulled</font><font color="#E5E5E5"> it out stuck it in their</font>

536
00:22:37,930 --> 00:22:45,630
analysis machine and after an hour there

537
00:22:39,760 --> 00:22:47,710
<font color="#E5E5E5">was only a</font><font color="#CCCCCC"> 0.1 7% decay rate so it</font>

538
00:22:45,630 --> 00:22:48,850
starts<font color="#CCCCCC"> to get a little scary when you</font>

539
00:22:47,710 --> 00:22:51,100
think about how easy it might be for

540
00:22:48,850 --> 00:22:53,590
someone<font color="#E5E5E5"> to walk in season your your</font>

541
00:22:51,100 --> 00:22:57,850
encrypted drive and your RAM and be able

542
00:22:53,590 --> 00:22:59,649
<font color="#E5E5E5">to get away scot-free and there's also a</font>

543
00:22:57,850 --> 00:23:01,570
type of a hybrid attack they suggested

544
00:22:59,650 --> 00:23:03,760
here at the bottom a network attack

545
00:23:01,570 --> 00:23:05,679
through<font color="#CCCCCC"> pxe and the scenario they give</font>

546
00:23:03,760 --> 00:23:07,930
is if you compromise<font color="#CCCCCC"> a</font><font color="#E5E5E5"> server set it up</font>

547
00:23:05,680 --> 00:23:10,210
as a pxe boot server and then<font color="#E5E5E5"> through a</font>

548
00:23:07,930 --> 00:23:12,430
Doss or a software compromise cause

549
00:23:10,210 --> 00:23:13,750
other systems to reboot and come up off

550
00:23:12,430 --> 00:23:16,090
of that you could<font color="#CCCCCC"> use the pxe boot</font>

551
00:23:13,750 --> 00:23:18,310
summer to run a memory dumper imported

552
00:23:16,090 --> 00:23:20,919
memory of those machines a scenario they

553
00:23:18,310 --> 00:23:27,040
suggest for that would<font color="#CCCCCC"> be recovering</font><font color="#E5E5E5"> SSL</font>

554
00:23:20,920 --> 00:23:29,380
secret keys out<font color="#CCCCCC"> of a web server now the</font>

555
00:23:27,040 --> 00:23:30,970
main memory the main problem<font color="#CCCCCC"> is going to</font>

556
00:23:29,380 --> 00:23:33,100
be locating the keys in memory now this

557
00:23:30,970 --> 00:23:36,820
is<font color="#E5E5E5"> actually pretty pretty standard stuff</font>

558
00:23:33,100 --> 00:23:38,740
you've seen<font color="#E5E5E5"> before one of the best</font>

559
00:23:36,820 --> 00:23:42,610
techniques they identified was just

560
00:23:38,740 --> 00:23:44,380
searching for known contents or known

561
00:23:42,610 --> 00:23:46,209
structure you know for example searching

562
00:23:44,380 --> 00:23:48,160
for a known public modulus might also

563
00:23:46,210 --> 00:23:50,080
give you the private key or searching

564
00:23:48,160 --> 00:23:51,400
for known in<font color="#CCCCCC"> coding formats might expose</font>

565
00:23:50,080 --> 00:23:52,960
the key this<font color="#E5E5E5"> is standard stuff that's</font>

566
00:23:51,400 --> 00:23:54,460
been around for<font color="#E5E5E5"> a while but they also</font>

567
00:23:52,960 --> 00:23:56,320
came up with another interesting

568
00:23:54,460 --> 00:23:58,530
technique which is what is called using

569
00:23:56,320 --> 00:24:01,169
the Hamming distance in data

570
00:23:58,530 --> 00:24:02,520
<font color="#E5E5E5">an information theory the Hamming</font>

571
00:24:01,170 --> 00:24:03,630
distance is the<font color="#E5E5E5"> number of positions for</font>

572
00:24:02,520 --> 00:24:05,129
which corresponding symbols are

573
00:24:03,630 --> 00:24:07,350
different between two strings of equal

574
00:24:05,130 --> 00:24:09,630
length now for binary strings that's

575
00:24:07,350 --> 00:24:10,889
very simple it's just a zorb<font color="#CCCCCC"> e we're all</font>

576
00:24:09,630 --> 00:24:12,690
familiar with<font color="#CCCCCC"> that</font><font color="#E5E5E5"> if we've studied any</font>

577
00:24:10,890 --> 00:24:15,180
kind<font color="#E5E5E5"> of cryptography it's a very fast</font>

578
00:24:12,690 --> 00:24:16,680
very simple mathematical calculation and

579
00:24:15,180 --> 00:24:19,560
what<font color="#E5E5E5"> this</font><font color="#CCCCCC"> does is you can</font><font color="#E5E5E5"> see where</font>

580
00:24:16,680 --> 00:24:22,320
these two strings here they're<font color="#E5E5E5"> only two</font>

581
00:24:19,560 --> 00:24:23,820
bits apart on each string so that gives

582
00:24:22,320 --> 00:24:26,310
you a hemming distance of two when use

583
00:24:23,820 --> 00:24:27,960
or them together by looking<font color="#CCCCCC"> at decayed</font>

584
00:24:26,310 --> 00:24:30,240
memory if you're<font color="#E5E5E5"> trying to go back</font><font color="#CCCCCC"> and</font>

585
00:24:27,960 --> 00:24:32,490
find potential keys this<font color="#CCCCCC"> techniques very</font>

586
00:24:30,240 --> 00:24:35,040
<font color="#CCCCCC">powerful and I'm not I'm not aware of it</font>

587
00:24:32,490 --> 00:24:36,570
being applied anywhere else before where

588
00:24:35,040 --> 00:24:38,670
you<font color="#CCCCCC"> can take what you believe</font><font color="#E5E5E5"> are</font>

589
00:24:36,570 --> 00:24:40,649
possible keys<font color="#E5E5E5"> maybe none of them none of</font>

590
00:24:38,670 --> 00:24:42,780
which work by using the Hamming distance

591
00:24:40,650 --> 00:24:44,280
you can<font color="#E5E5E5"> very quickly isolate which bits</font>

592
00:24:42,780 --> 00:24:45,780
are likely the decayed ones and then

593
00:24:44,280 --> 00:24:47,399
very<font color="#E5E5E5"> quickly go through and brute force</font>

594
00:24:45,780 --> 00:24:50,010
what remains as<font color="#E5E5E5"> possibilities and</font>

595
00:24:47,400 --> 00:24:57,300
reconstruct the key from potentially

596
00:24:50,010 --> 00:25:00,330
seriously decayed memory so

597
00:24:57,300 --> 00:25:04,260
countermeasures for this there<font color="#CCCCCC"> are a few</font>

598
00:25:00,330 --> 00:25:06,419
they're not very good scrubbing memory

599
00:25:04,260 --> 00:25:09,270
obviously avoid storing keys in memory

600
00:25:06,420 --> 00:25:13,350
if you can or get rid<font color="#E5E5E5"> of them when</font>

601
00:25:09,270 --> 00:25:15,900
they're no longer needed alternatively

602
00:25:13,350 --> 00:25:17,370
if you can you can configure<font color="#CCCCCC"> your system</font>

603
00:25:15,900 --> 00:25:19,980
to perform a destructive memory<font color="#E5E5E5"> test on</font>

604
00:25:17,370 --> 00:25:21,899
boot go through the full boot or the

605
00:25:19,980 --> 00:25:23,610
full memory<font color="#E5E5E5"> test on post use ECC ram</font>

606
00:25:21,900 --> 00:25:26,220
something that if the system is actually

607
00:25:23,610 --> 00:25:28,020
rebooted it's going<font color="#E5E5E5"> to destroy the state</font>

608
00:25:26,220 --> 00:25:29,640
in the memory that will defend against a

609
00:25:28,020 --> 00:25:31,410
couple of these<font color="#CCCCCC"> attacks it won't defend</font>

610
00:25:29,640 --> 00:25:32,970
against an attack where<font color="#E5E5E5"> the RAM is</font>

611
00:25:31,410 --> 00:25:37,710
physically removed and planted in an

612
00:25:32,970 --> 00:25:41,760
analysis machine let's see where was<font color="#CCCCCC"> I</font>

613
00:25:37,710 --> 00:25:43,740
<font color="#E5E5E5">oh and limiting booting from networker</font>

614
00:25:41,760 --> 00:25:46,230
or removal of media is also going to

615
00:25:43,740 --> 00:25:48,870
<font color="#E5E5E5">help the idea here being that you want</font>

616
00:25:46,230 --> 00:25:50,250
to<font color="#E5E5E5"> slow down the attacker because time</font>

617
00:25:48,870 --> 00:25:52,530
<font color="#E5E5E5">is of the essence as far as the RAM</font>

618
00:25:50,250 --> 00:25:53,880
decaying so if you can do things<font color="#E5E5E5"> to help</font>

619
00:25:52,530 --> 00:25:55,530
prevent them from being<font color="#E5E5E5"> able to just</font>

620
00:25:53,880 --> 00:25:57,510
<font color="#CCCCCC">walk in put in a memory stick at the</font>

621
00:25:55,530 --> 00:26:02,550
power button and grab data that's going

622
00:25:57,510 --> 00:26:06,810
to help you using a password or a key to

623
00:26:02,550 --> 00:26:07,950
wake a system simply suspending a

624
00:26:06,810 --> 00:26:09,030
computer into sleep mode is not going<font color="#E5E5E5"> to</font>

625
00:26:07,950 --> 00:26:10,500
buy you anything because<font color="#E5E5E5"> the only</font>

626
00:26:09,030 --> 00:26:11,470
attacker has to do is touch the mouse

627
00:26:10,500 --> 00:26:12,850
wake the system

628
00:26:11,470 --> 00:26:16,150
and then reboot it and he's got<font color="#E5E5E5"> what's</font>

629
00:26:12,850 --> 00:26:18,580
in your<font color="#CCCCCC"> RAM hibernation can also be</font>

630
00:26:16,150 --> 00:26:23,230
vulnerable<font color="#E5E5E5"> unless an external secret is</font>

631
00:26:18,580 --> 00:26:25,149
required because hibernation is

632
00:26:23,230 --> 00:26:26,409
basically just suspending two discs if

633
00:26:25,150 --> 00:26:28,030
you don't have<font color="#CCCCCC"> it neither external</font>

634
00:26:26,409 --> 00:26:29,200
secret to we wake the<font color="#E5E5E5"> machine just takes</font>

635
00:26:28,030 --> 00:26:31,510
a little longer for it to come back<font color="#CCCCCC"> up</font>

636
00:26:29,200 --> 00:26:34,059
<font color="#E5E5E5">and</font><font color="#CCCCCC"> they're going</font><font color="#E5E5E5"> to have your data and</font>

637
00:26:31,510 --> 00:26:36,820
TPM systems are also vulnerable in fact

638
00:26:34,059 --> 00:26:39,520
the the<font color="#CCCCCC"> Princeton team confirmed that</font>

639
00:26:36,820 --> 00:26:40,840
BitLocker in its default mode was

640
00:26:39,520 --> 00:26:42,460
completely vulnerable to this BitLocker

641
00:26:40,840 --> 00:26:47,408
<font color="#CCCCCC">in advanced mode</font><font color="#E5E5E5"> however was not because</font>

642
00:26:42,460 --> 00:26:48,549
<font color="#E5E5E5">it requires a secret to reawaken another</font>

643
00:26:47,409 --> 00:26:52,120
set of countermeasures avoiding

644
00:26:48,549 --> 00:26:55,090
pre-computation pre-computation can

645
00:26:52,120 --> 00:26:56,678
speed up cryptographic processes but it

646
00:26:55,090 --> 00:26:57,850
tends<font color="#E5E5E5"> to leave a lot of</font><font color="#CCCCCC"> key remnants</font>

647
00:26:56,679 --> 00:26:59,559
sitting around in various places in

648
00:26:57,850 --> 00:27:00,850
memory which of course is going<font color="#E5E5E5"> to make</font>

649
00:26:59,559 --> 00:27:02,408
<font color="#CCCCCC">the attackers job easier because they're</font>

650
00:27:00,850 --> 00:27:05,559
going<font color="#E5E5E5"> to have more pieces</font><font color="#CCCCCC"> of data to use</font>

651
00:27:02,409 --> 00:27:07,780
to try to reconstruct your keys<font color="#E5E5E5"> also key</font>

652
00:27:05,559 --> 00:27:09,428
expansion applying some kind of

653
00:27:07,780 --> 00:27:11,200
transformation to the key before you

654
00:27:09,429 --> 00:27:13,059
store it in<font color="#CCCCCC"> memory</font><font color="#E5E5E5"> the idea here</font><font color="#CCCCCC"> is to</font>

655
00:27:11,200 --> 00:27:14,919
obfuscate it to make<font color="#E5E5E5"> it harder for the</font>

656
00:27:13,059 --> 00:27:16,200
attacker to then find when they go back

657
00:27:14,919 --> 00:27:18,490
<font color="#E5E5E5">and</font><font color="#CCCCCC"> they're looking through your memory</font>

658
00:27:16,200 --> 00:27:20,169
this is not<font color="#E5E5E5"> a great solution though</font>

659
00:27:18,490 --> 00:27:21,520
because any transformation you apply<font color="#E5E5E5"> to</font>

660
00:27:20,169 --> 00:27:22,990
the key the mechanism for applying the

661
00:27:21,520 --> 00:27:24,010
transformation is probably also in<font color="#E5E5E5"> the</font>

662
00:27:22,990 --> 00:27:25,390
RAM so if you have a really<font color="#E5E5E5"> dedicated</font>

663
00:27:24,010 --> 00:27:31,169
attack or they're probably going to be

664
00:27:25,390 --> 00:27:33,340
able<font color="#E5E5E5"> to find it and still get your data</font>

665
00:27:31,169 --> 00:27:34,900
architectural changes and personally I

666
00:27:33,340 --> 00:27:36,189
think this<font color="#CCCCCC"> is where the solution is</font>

667
00:27:34,900 --> 00:27:39,370
going to have to come from ultimately

668
00:27:36,190 --> 00:27:41,049
which is building d man with faster

669
00:27:39,370 --> 00:27:42,428
decay rates building key management

670
00:27:41,049 --> 00:27:44,230
hardware into motherboards so that does

671
00:27:42,429 --> 00:27:46,000
it touches<font color="#CCCCCC"> the ram or encrypting the</font>

672
00:27:44,230 --> 00:27:47,200
contents of<font color="#E5E5E5"> the</font><font color="#CCCCCC"> RAM entirely so pulling</font>

673
00:27:46,000 --> 00:27:49,270
it out still just gives you nothing but

674
00:27:47,200 --> 00:27:50,650
gibberish problem is none of<font color="#E5E5E5"> these will</font>

675
00:27:49,270 --> 00:27:52,750
help with current technology current

676
00:27:50,650 --> 00:27:54,010
machines or this enough that<font color="#E5E5E5"> this does</font>

677
00:27:52,750 --> 00:27:55,390
not apply this is something hardware

678
00:27:54,010 --> 00:27:58,059
manufacturers are going to have to do in

679
00:27:55,390 --> 00:28:01,480
the future I'm<font color="#CCCCCC"> really hoping they jump</font>

680
00:27:58,059 --> 00:28:02,710
on it encryption in the disk controller

681
00:28:01,480 --> 00:28:07,059
is something we're starting to see

682
00:28:02,710 --> 00:28:10,929
happening and it's<font color="#E5E5E5"> it's possibly a</font>

683
00:28:07,059 --> 00:28:12,520
viable way<font color="#CCCCCC"> to combat this if you enable</font>

684
00:28:10,929 --> 00:28:14,440
a key register that's right only that

685
00:28:12,520 --> 00:28:15,940
uses some type of symmetric key that's

686
00:28:14,440 --> 00:28:18,070
written into that register and then that

687
00:28:15,940 --> 00:28:19,899
key is used to<font color="#E5E5E5"> write the data blocks on</font>

688
00:28:18,070 --> 00:28:22,270
the drive then on the<font color="#E5E5E5"> encryption takes</font>

689
00:28:19,899 --> 00:28:24,250
place in<font color="#E5E5E5"> the drive the key never touches</font>

690
00:28:22,270 --> 00:28:24,999
<font color="#CCCCCC">ram then you have a</font><font color="#E5E5E5"> chance of keeping</font>

691
00:28:24,250 --> 00:28:31,719
the bad

692
00:28:24,999 --> 00:28:33,789
guys out now trusted computing there's

693
00:28:31,719 --> 00:28:36,999
been<font color="#E5E5E5"> a lot of talk as far as tpms</font><font color="#CCCCCC"> and</font>

694
00:28:33,789 --> 00:28:39,519
forensics and you know problems that

695
00:28:36,999 --> 00:28:41,439
that's posed however with this new

696
00:28:39,519 --> 00:28:45,159
technique the TPM has become in some

697
00:28:41,439 --> 00:28:48,129
ways a little<font color="#CCCCCC"> bit irrelevant a TPM tpos</font>

698
00:28:45,159 --> 00:28:49,809
do not implement bulk encryption the TPM

699
00:28:48,129 --> 00:28:52,208
cannot encrypt all the data<font color="#E5E5E5"> on</font><font color="#CCCCCC"> your hard</font>

700
00:28:49,809 --> 00:28:54,219
drive what if TPM does is monitor the

701
00:28:52,209 --> 00:28:56,319
boot process determine whether or<font color="#E5E5E5"> not</font>

702
00:28:54,219 --> 00:28:59,649
the system came up in an approved state

703
00:28:56,319 --> 00:29:01,719
and then release a key to then decrypt

704
00:28:59,649 --> 00:29:03,639
the drive so it can prevent a key from

705
00:29:01,719 --> 00:29:06,489
being loaded into<font color="#CCCCCC"> ram but once it's</font>

706
00:29:03,639 --> 00:29:07,418
there it can't protect it so if i can

707
00:29:06,489 --> 00:29:09,069
get to<font color="#CCCCCC"> your system in the right</font>

708
00:29:07,419 --> 00:29:12,729
configuration the TPM is not going to<font color="#E5E5E5"> be</font>

709
00:29:09,069 --> 00:29:15,668
able to do anything to help you<font color="#CCCCCC"> out now</font>

710
00:29:12,729 --> 00:29:18,609
this<font color="#CCCCCC"> is my favorite one physical</font>

711
00:29:15,669 --> 00:29:19,929
defenses there's all kinds of silliness

712
00:29:18,609 --> 00:29:22,658
you can get into<font color="#CCCCCC"> as far as protecting</font>

713
00:29:19,929 --> 00:29:24,779
your computer on a physical level think

714
00:29:22,659 --> 00:29:27,129
one of the things the<font color="#CCCCCC"> princeton teaming</font>

715
00:29:24,779 --> 00:29:29,049
suggested was encasing your<font color="#CCCCCC"> RAM in epoxy</font>

716
00:29:27,129 --> 00:29:32,109
make it impossible to take out of the

717
00:29:29,049 --> 00:29:34,599
system why not<font color="#CCCCCC"> trip switches</font>

718
00:29:32,109 --> 00:29:36,458
accelerometers RFID go nuts completely

719
00:29:34,599 --> 00:29:38,529
hack up your box on a hardware level and

720
00:29:36,459 --> 00:29:45,669
these<font color="#E5E5E5"> are things that might</font><font color="#CCCCCC"> be able yeah</font>

721
00:29:38,529 --> 00:29:47,199
as I don't over this is<font color="#E5E5E5"> something I came</font>

722
00:29:45,669 --> 00:29:48,849
<font color="#CCCCCC">up we were one of the meats talking</font>

723
00:29:47,199 --> 00:29:50,799
about this back in February when this

724
00:29:48,849 --> 00:29:53,708
paper first came out and this<font color="#E5E5E5"> is one of</font>

725
00:29:50,799 --> 00:29:54,969
<font color="#E5E5E5">the dumb ideas I came up with</font><font color="#CCCCCC"> I know you</font>

726
00:29:53,709 --> 00:29:57,359
probably know what<font color="#E5E5E5"> this</font><font color="#CCCCCC"> is because I see</font>

727
00:29:54,969 --> 00:30:00,159
<font color="#E5E5E5">the sticker on the front of your laptop</font>

728
00:29:57,359 --> 00:30:01,989
this is a parallax basic stamp kit

729
00:30:00,159 --> 00:30:08,229
anyone here familiar with them aside

730
00:30:01,989 --> 00:30:11,739
from him<font color="#CCCCCC"> 34 people what yes that</font>

731
00:30:08,229 --> 00:30:13,989
attended that last meeting a parallax

732
00:30:11,739 --> 00:30:15,489
basic stamp is essentially<font color="#E5E5E5"> a small micro</font>

733
00:30:13,989 --> 00:30:18,039
controller that can be programmed in

734
00:30:15,489 --> 00:30:19,239
basic it's great if you like to tinker

735
00:30:18,039 --> 00:30:21,699
with electronics because you can do a

736
00:30:19,239 --> 00:30:23,499
lot<font color="#E5E5E5"> of logic that would take you days to</font>

737
00:30:21,699 --> 00:30:25,029
implement in hardware this is just<font color="#E5E5E5"> a</font>

738
00:30:23,499 --> 00:30:27,009
couple lines of code and still drive

739
00:30:25,029 --> 00:30:28,689
other electronic devices<font color="#CCCCCC"> I happen to</font><font color="#E5E5E5"> be</font>

740
00:30:27,009 --> 00:30:31,029
a big fan of parallax there this is

741
00:30:28,689 --> 00:30:33,599
actually the same processor that's used

742
00:30:31,029 --> 00:30:36,089
on the Mystery Box challenge at<font color="#E5E5E5"> Def Con</font>

743
00:30:33,599 --> 00:30:38,619
because this company makes about a

744
00:30:36,089 --> 00:30:38,860
zillion little accessories to go<font color="#E5E5E5"> on</font>

745
00:30:38,619 --> 00:30:41,199
these

746
00:30:38,860 --> 00:30:42,850
things mostly it's aimed at the robot

747
00:30:41,200 --> 00:30:46,120
hobbyist market but they have everything

748
00:30:42,850 --> 00:30:50,070
<font color="#E5E5E5">from who sound detectors motion</font>

749
00:30:46,120 --> 00:30:52,239
detectors you name it on down the line

750
00:30:50,070 --> 00:30:54,730
that you<font color="#E5E5E5"> can hook right up to these in</font>

751
00:30:52,240 --> 00:30:57,760
this case I've hooked up<font color="#E5E5E5"> a three axis</font>

752
00:30:54,730 --> 00:31:09,429
<font color="#E5E5E5">accelerometer now imagine</font><font color="#CCCCCC"> if I put this</font>

753
00:30:57,760 --> 00:31:11,440
in my machine yeah I have this<font color="#E5E5E5"> problem</font>

754
00:31:09,429 --> 00:31:17,200
before the buzzer makes it set itself

755
00:31:11,440 --> 00:31:18,400
off there we go yeah<font color="#E5E5E5"> this is probably</font>

756
00:31:17,200 --> 00:31:19,690
<font color="#E5E5E5">not something that's going to be easy to</font>

757
00:31:18,400 --> 00:31:21,760
implement in a laptop<font color="#CCCCCC"> you're going to</font>

758
00:31:19,690 --> 00:31:23,230
need some<font color="#CCCCCC"> room but the idea we came up</font>

759
00:31:21,760 --> 00:31:26,890
with was to try to build a

760
00:31:23,230 --> 00:31:28,299
self-destructing PC that was complete

761
00:31:26,890 --> 00:31:29,559
with all the self destructing hardware

762
00:31:28,299 --> 00:31:31,570
could not implemented in software

763
00:31:29,559 --> 00:31:33,490
running in the operating<font color="#E5E5E5"> system not</font><font color="#CCCCCC"> in</font>

764
00:31:31,570 --> 00:31:34,899
the hardware<font color="#CCCCCC"> of the PC itself something</font>

765
00:31:33,490 --> 00:31:36,280
come running completely separate that

766
00:31:34,900 --> 00:31:38,500
was going<font color="#E5E5E5"> to be able to disable and</font>

767
00:31:36,280 --> 00:31:40,899
destroy your data if someone came in and

768
00:31:38,500 --> 00:31:42,309
tried to seize your machine people tried

769
00:31:40,900 --> 00:31:43,929
<font color="#CCCCCC">to do this before I've seen all kinds of</font>

770
00:31:42,309 --> 00:31:45,760
crazy ideas there was some guy I<font color="#E5E5E5"> think</font>

771
00:31:43,929 --> 00:31:47,020
it<font color="#E5E5E5"> was on hackaday who proposed hooking</font>

772
00:31:45,760 --> 00:31:50,470
your hard drive up to a 20 gauge shotgun

773
00:31:47,020 --> 00:31:52,090
shell I don't recommend<font color="#E5E5E5"> that and for</font>

774
00:31:50,470 --> 00:31:53,500
some reason every<font color="#CCCCCC"> time I brought this up</font>

775
00:31:52,090 --> 00:31:57,070
at one of our meets the first word I

776
00:31:53,500 --> 00:31:59,860
hear is thermite right mm-hmm thank you

777
00:31:57,070 --> 00:32:01,480
I think I heard it from somebody who

778
00:31:59,860 --> 00:32:13,689
wasn't at our meat which just proves my

779
00:32:01,480 --> 00:32:15,370
point<font color="#E5E5E5"> Wow so I can't remem it might have</font>

780
00:32:13,690 --> 00:32:20,890
been you actually someone at hackaday

781
00:32:15,370 --> 00:32:24,639
she know someone a kadai proposed as a

782
00:32:20,890 --> 00:32:26,830
separate type of counter measure which

783
00:32:24,640 --> 00:32:28,510
was hooking up<font color="#E5E5E5"> a tube of binary epoxy</font>

784
00:32:26,830 --> 00:32:29,799
with a mechanical actuator that<font color="#CCCCCC"> when</font>

785
00:32:28,510 --> 00:32:33,070
triggered would just fill your drive

786
00:32:29,799 --> 00:32:37,120
with epoxy I don't want as a proof of

787
00:32:33,070 --> 00:32:40,750
concept it was a<font color="#E5E5E5"> total failure I am NOT</font>

788
00:32:37,120 --> 00:32:45,669
a machinist once good

789
00:32:40,750 --> 00:32:47,860
a little sooner<font color="#CCCCCC"> than I wanted it to so</font>

790
00:32:45,670 --> 00:32:49,720
it's possible I will tell you the two

791
00:32:47,860 --> 00:32:51,189
major problems I came up with<font color="#CCCCCC"> was trying</font>

792
00:32:49,720 --> 00:32:52,750
to find<font color="#E5E5E5"> an actuator strong enough to</font>

793
00:32:51,190 --> 00:32:54,370
push the epoxy down and the other one

794
00:32:52,750 --> 00:32:55,660
was<font color="#E5E5E5"> trying to get enough volume out of</font>

795
00:32:54,370 --> 00:32:58,330
the thing to actually fill it up and

796
00:32:55,660 --> 00:33:04,210
cover both platters it's harder than it

797
00:32:58,330 --> 00:33:05,860
<font color="#CCCCCC">sounds to do anyway yes that's the</font><font color="#E5E5E5"> other</font>

798
00:33:04,210 --> 00:33:07,090
idea but<font color="#CCCCCC"> we</font><font color="#E5E5E5"> were talking about this we</font>

799
00:33:05,860 --> 00:33:08,679
thought how funny would it<font color="#E5E5E5"> be to watch</font>

800
00:33:07,090 --> 00:33:10,209
some guy trying to<font color="#E5E5E5"> carry your computer</font>

801
00:33:08,680 --> 00:33:12,130
out to his seizure van well there's

802
00:33:10,210 --> 00:33:15,940
polyurethane foam spraying out of all

803
00:33:12,130 --> 00:33:22,090
the fence maybe a little flags waving on

804
00:33:15,940 --> 00:33:23,770
it you<font color="#E5E5E5"> know sparklers so among getting</font>

805
00:33:22,090 --> 00:33:25,750
back to the parallax system what<font color="#E5E5E5"> I have</font>

806
00:33:23,770 --> 00:33:27,760
here is<font color="#E5E5E5"> just the basic parallax stamp</font>

807
00:33:25,750 --> 00:33:29,830
running<font color="#E5E5E5"> about 10 lines of code hooked to</font>

808
00:33:27,760 --> 00:33:31,750
a<font color="#CCCCCC"> 3-axis accelerometer it's probably the</font>

809
00:33:29,830 --> 00:33:33,639
simplest way you could use to trigger a

810
00:33:31,750 --> 00:33:36,940
system like<font color="#CCCCCC"> this I have up to a buzzer</font>

811
00:33:33,640 --> 00:33:40,930
which you all know about which<font color="#CCCCCC"> is</font>

812
00:33:36,940 --> 00:33:42,580
probably<font color="#E5E5E5"> not work there we go I was</font>

813
00:33:40,930 --> 00:33:45,220
tuning this thing last night in<font color="#CCCCCC"> my hotel</font>

814
00:33:42,580 --> 00:33:49,240
room after<font color="#CCCCCC"> many beers so don't blame me</font>

815
00:33:45,220 --> 00:33:52,510
if it doesn't work right the idea<font color="#E5E5E5"> here</font>

816
00:33:49,240 --> 00:33:53,950
is this<font color="#E5E5E5"> is just shut up the idea here is</font>

817
00:33:52,510 --> 00:33:56,020
that this<font color="#E5E5E5"> is just one of about a million</font>

818
00:33:53,950 --> 00:33:57,820
possible ways you could hook up your

819
00:33:56,020 --> 00:33:59,470
hardware with some kind of device that

820
00:33:57,820 --> 00:34:00,820
<font color="#E5E5E5">would protect you from this and the</font>

821
00:33:59,470 --> 00:34:02,680
princeton team when they<font color="#E5E5E5"> wrote the paper</font>

822
00:34:00,820 --> 00:34:04,090
actually<font color="#E5E5E5"> said that physical</font>

823
00:34:02,680 --> 00:34:06,190
countermeasures are probably one of the

824
00:34:04,090 --> 00:34:07,510
best ways<font color="#CCCCCC"> to do this and they suggested</font>

825
00:34:06,190 --> 00:34:09,310
that there's about a million ways to<font color="#CCCCCC"> do</font>

826
00:34:07,510 --> 00:34:10,870
it they're absolutely right<font color="#E5E5E5"> and if</font>

827
00:34:09,310 --> 00:34:12,520
you're a tinkerer like me you like

828
00:34:10,870 --> 00:34:17,649
playing<font color="#E5E5E5"> with electronics this is a lot</font>

829
00:34:12,520 --> 00:34:18,940
<font color="#E5E5E5">of fun</font><font color="#CCCCCC"> past that box down just to give</font>

830
00:34:17,649 --> 00:34:20,859
you an idea the<font color="#E5E5E5"> kind of junk that</font>

831
00:34:18,940 --> 00:34:24,310
parallax cells that I just can't<font color="#E5E5E5"> get</font>

832
00:34:20,860 --> 00:34:25,659
enough of let's see if you're worried

833
00:34:24,310 --> 00:34:28,000
<font color="#CCCCCC">about someone sticking a probe into</font><font color="#E5E5E5"> your</font>

834
00:34:25,659 --> 00:34:29,620
case to cut the wires PIR sensor to

835
00:34:28,000 --> 00:34:33,668
detect movement have that trigger the

836
00:34:29,620 --> 00:34:35,888
system these are digital digital

837
00:34:33,668 --> 00:34:37,719
thermometers detect someone<font color="#E5E5E5"> trying to</font>

838
00:34:35,889 --> 00:34:39,040
spray off your<font color="#CCCCCC"> RAM and cool it that can</font>

839
00:34:37,719 --> 00:34:43,118
<font color="#CCCCCC">be a trigger there's about a hundred</font>

840
00:34:39,040 --> 00:34:46,719
million other ones in<font color="#CCCCCC"> here yes</font>

841
00:34:43,119 --> 00:34:52,569
well it's buried it's a trust in its way

842
00:34:46,719 --> 00:34:54,098
at the bottom but one<font color="#E5E5E5"> of the ideas that</font>

843
00:34:52,569 --> 00:34:55,899
came out that<font color="#E5E5E5"> our last meet was using an</font>

844
00:34:54,099 --> 00:34:57,910
<font color="#E5E5E5">RFID reader inside your case and just</font>

845
00:34:55,899 --> 00:35:00,460
hiding a chip outside the case is a

846
00:34:57,910 --> 00:35:02,589
proximity basically a proximity trigger

847
00:35:00,460 --> 00:35:07,890
as soon as it stops sensing that chip

848
00:35:02,589 --> 00:35:11,019
boom I know exactly a proximity<font color="#E5E5E5"> fuze</font>

849
00:35:07,890 --> 00:35:13,690
<font color="#CCCCCC">datagram really likes</font><font color="#E5E5E5"> RFID so bear with</font>

850
00:35:11,019 --> 00:35:16,019
<font color="#E5E5E5">us there you go and this is the</font><font color="#CCCCCC"> rfid</font>

851
00:35:13,690 --> 00:35:18,279
card<font color="#E5E5E5"> reader it's pretty cheap works well</font>

852
00:35:16,019 --> 00:35:24,220
you should all buy stuff from parallax<font color="#CCCCCC"> I</font>

853
00:35:18,279 --> 00:35:25,630
love those<font color="#E5E5E5"> guys yes and you could you</font>

854
00:35:24,220 --> 00:35:29,618
could<font color="#E5E5E5"> tie on to the existing case</font>

855
00:35:25,630 --> 00:35:31,779
intrusion switch absolutely so that

856
00:35:29,619 --> 00:35:33,720
<font color="#E5E5E5">concludes pretty much all my silliness</font>

857
00:35:31,779 --> 00:35:36,789
does anyone have<font color="#CCCCCC"> any questions for us</font>

858
00:35:33,720 --> 00:35:38,410
are we actually let's let data do his

859
00:35:36,789 --> 00:35:40,859
conclusions first then you can happen

860
00:35:38,410 --> 00:35:40,859
questions

861
00:35:45,650 --> 00:35:51,780
so the conclusions we want you<font color="#E5E5E5"> to draw</font>

862
00:35:48,930 --> 00:35:53,279
from this is exercise caution knowing

863
00:35:51,780 --> 00:35:55,500
what you're doing is really<font color="#E5E5E5"> the biggest</font>

864
00:35:53,280 --> 00:35:57,750
thing in both the live memory stuff as

865
00:35:55,500 --> 00:36:01,680
well as the cold boot attacks as<font color="#CCCCCC"> well as</font>

866
00:35:57,750 --> 00:36:03,210
defenses it's neither of these<font color="#E5E5E5"> things</font>

867
00:36:01,680 --> 00:36:04,740
should be a solution<font color="#CCCCCC"> that</font><font color="#E5E5E5"> should be in</font>

868
00:36:03,210 --> 00:36:06,900
<font color="#E5E5E5">addition to whatever you're already</font>

869
00:36:04,740 --> 00:36:09,060
including you<font color="#E5E5E5"> also need to think about</font>

870
00:36:06,900 --> 00:36:10,440
physical security with the cold boot

871
00:36:09,060 --> 00:36:12,119
attacks if they're already getting to

872
00:36:10,440 --> 00:36:14,010
your system in the first place that's

873
00:36:12,119 --> 00:36:15,599
<font color="#E5E5E5">probably more of</font><font color="#CCCCCC"> a problem than what</font>

874
00:36:14,010 --> 00:36:19,230
they're going to do when they're taking

875
00:36:15,599 --> 00:36:21,060
apart your RAM and again have fun good

876
00:36:19,230 --> 00:36:26,640
luck<font color="#CCCCCC"> and</font><font color="#E5E5E5"> all your life forensics as well</font>

877
00:36:21,060 --> 00:36:35,940
as cold with attack / defenses and well

878
00:36:26,640 --> 00:36:39,060
not quite<font color="#E5E5E5"> QA he asked what</font><font color="#CCCCCC"> the legality</font>

879
00:36:35,940 --> 00:36:41,160
is about<font color="#E5E5E5"> to strong</font><font color="#CCCCCC"> euro pc</font><font color="#E5E5E5"> the word you</font>

880
00:36:39,060 --> 00:36:47,279
want words phrase you want to use is

881
00:36:41,160 --> 00:36:48,598
data theft prevention and that's you

882
00:36:47,280 --> 00:36:50,849
could talk to<font color="#CCCCCC"> the guy who gave the</font>

883
00:36:48,599 --> 00:36:52,589
lawyer talk i'm sure he'll jurist yes

884
00:36:50,849 --> 00:37:07,609
<font color="#CCCCCC">i'm sure i have better information for</font>

885
00:36:52,589 --> 00:37:09,869
you but data theft prevention said it

886
00:37:07,609 --> 00:37:17,420
didn't that's what it's at the beginning

887
00:37:09,869 --> 00:37:21,109
we suck like full beers though ah ok

888
00:37:17,420 --> 00:37:21,109
thank<font color="#E5E5E5"> you thank you</font>

