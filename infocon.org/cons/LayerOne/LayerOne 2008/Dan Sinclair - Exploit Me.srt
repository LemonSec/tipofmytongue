1
00:00:05,000 --> 00:00:11,820
hey<font color="#E5E5E5"> everybody we got the last two talks</font>

2
00:00:07,859 --> 00:00:14,429
of the day<font color="#CCCCCC"> danced and Claire from is the</font>

3
00:00:11,820 --> 00:00:16,379
security compass is the<font color="#E5E5E5"> company and</font><font color="#CCCCCC"> the</font>

4
00:00:14,429 --> 00:00:19,590
name of<font color="#E5E5E5"> the is it a product</font><font color="#CCCCCC"> that exploit</font>

5
00:00:16,379 --> 00:00:21,869
me or is the name of the series exploit

6
00:00:19,590 --> 00:00:23,189
means the name of the series if you<font color="#E5E5E5"> guys</font>

7
00:00:21,869 --> 00:00:26,910
has ever done any pen testing with

8
00:00:23,189 --> 00:00:28,980
Firefox using a Firebug or tamper data I

9
00:00:26,910 --> 00:00:30,960
think you<font color="#E5E5E5"> guys will get it to get a kick</font>

10
00:00:28,980 --> 00:00:32,009
out of this one also want to remind

11
00:00:30,960 --> 00:00:35,190
everybody about the entertainment

12
00:00:32,009 --> 00:00:40,820
<font color="#E5E5E5">tonight it starts</font><font color="#CCCCCC"> at ten up there will</font>

13
00:00:35,190 --> 00:00:44,040
be free beer as usual we aim to please

14
00:00:40,820 --> 00:00:46,260
starting at ten yeah starting at ten

15
00:00:44,040 --> 00:00:47,940
we're going to have free beer I'm gonna

16
00:00:46,260 --> 00:00:48,899
be right<font color="#E5E5E5"> out there on the patio the</font>

17
00:00:47,940 --> 00:00:51,180
freak shows actually<font color="#CCCCCC"> going to be</font>

18
00:00:48,899 --> 00:00:52,260
starting<font color="#CCCCCC"> in here as well they'll</font>

19
00:00:51,180 --> 00:00:56,039
<font color="#CCCCCC">probably be mingling around out there</font>

20
00:00:52,260 --> 00:00:57,300
doing crazy stuff as well including the

21
00:00:56,039 --> 00:00:59,149
guy who said he<font color="#CCCCCC"> was going</font><font color="#E5E5E5"> to use his</font>

22
00:00:57,300 --> 00:01:07,158
belt sander<font color="#CCCCCC"> on various parts of his body</font>

23
00:00:59,149 --> 00:01:09,090
so<font color="#E5E5E5"> it should be entertaining yeah so</font>

24
00:01:07,159 --> 00:01:11,189
plus we're also gonna<font color="#E5E5E5"> have like chips</font>

25
00:01:09,090 --> 00:01:12,600
and stuff like that so<font color="#E5E5E5"> after after after</font>

26
00:01:11,189 --> 00:01:15,089
the final talk of the day which is<font color="#CCCCCC"> Dave</font>

27
00:01:12,600 --> 00:01:17,369
<font color="#E5E5E5">Holton go ahead get some chow come on</font>

28
00:01:15,090 --> 00:01:22,580
back enjoy the<font color="#E5E5E5"> party and I'm going</font><font color="#CCCCCC"> to</font>

29
00:01:17,369 --> 00:01:22,580
let<font color="#CCCCCC"> go</font><font color="#E5E5E5"> and let you get on going here oh</font>

30
00:01:28,400 --> 00:01:32,670
<font color="#CCCCCC">okay so I'm dancing Clara's was</font>

31
00:01:31,650 --> 00:01:34,829
mentioned and I work for a company

32
00:01:32,670 --> 00:01:37,770
called<font color="#E5E5E5"> security help us so we do a lot</font>

33
00:01:34,829 --> 00:01:39,899
of application pen testing and training

34
00:01:37,770 --> 00:01:41,670
for developers<font color="#CCCCCC"> and one of the problems</font>

35
00:01:39,900 --> 00:01:44,000
we often run into is<font color="#CCCCCC"> that developers</font>

36
00:01:41,670 --> 00:01:46,380
don't necessarily have easy tools to use

37
00:01:44,000 --> 00:01:48,420
when they're developing and QA don't

38
00:01:46,380 --> 00:01:50,158
have easy tools to run when they're

39
00:01:48,420 --> 00:01:51,840
testing and we don't<font color="#E5E5E5"> necessarily have</font>

40
00:01:50,159 --> 00:01:54,180
<font color="#E5E5E5">easy tools to run when we're pen testing</font>

41
00:01:51,840 --> 00:01:56,340
and by easy I mean I<font color="#E5E5E5"> don't want to leave</font>

42
00:01:54,180 --> 00:01:57,329
to my browser right I'm up on testing

43
00:01:56,340 --> 00:01:59,430
things in my browser I don't want to

44
00:01:57,329 --> 00:02:01,079
leave my<font color="#E5E5E5"> browser so that's what the</font>

45
00:01:59,430 --> 00:02:03,030
exploit me series is its tools to help

46
00:02:01,079 --> 00:02:05,158
us do pen testing help developers test

47
00:02:03,030 --> 00:02:07,619
help QA test so i'm going<font color="#E5E5E5"> to introduce a</font>

48
00:02:05,159 --> 00:02:11,069
couple of the cool tools here they were

49
00:02:07,619 --> 00:02:13,769
originally<font color="#E5E5E5"> released last year at sector</font>

50
00:02:11,068 --> 00:02:15,760
we're working<font color="#E5E5E5"> on new revisions of them</font>

51
00:02:13,769 --> 00:02:17,650
but what we're going to talk through is

52
00:02:15,760 --> 00:02:18,700
so the tool tools i'm going to talk

53
00:02:17,650 --> 00:02:22,329
<font color="#E5E5E5">about our one for cross-site scripting</font>

54
00:02:18,700 --> 00:02:23,379
one for SQL injection so before<font color="#CCCCCC"> I really</font>

55
00:02:22,329 --> 00:02:24,280
get into that i'm going<font color="#E5E5E5"> to give you an</font>

56
00:02:23,379 --> 00:02:26,709
overview<font color="#CCCCCC"> of what cross-site scripting</font>

57
00:02:24,280 --> 00:02:29,439
actually is we'll<font color="#E5E5E5"> take a quick look at</font>

58
00:02:26,709 --> 00:02:30,849
<font color="#E5E5E5">the state of web security you know why</font>

59
00:02:29,439 --> 00:02:32,920
do we care about these tools what do

60
00:02:30,849 --> 00:02:34,209
they give us what do they add right then

61
00:02:32,920 --> 00:02:36,219
<font color="#E5E5E5">I'll introduce the</font><font color="#CCCCCC"> two tools cross-site</font>

62
00:02:34,209 --> 00:02:37,120
scripting and SQL inject me then I'll

63
00:02:36,219 --> 00:02:39,280
tell<font color="#E5E5E5"> you know how you can get these</font>

64
00:02:37,120 --> 00:02:42,489
tools because they are all open source

65
00:02:39,280 --> 00:02:44,560
GPL so we want<font color="#CCCCCC"> people to take them play</font>

66
00:02:42,489 --> 00:02:46,419
with them change them give<font color="#E5E5E5"> us back cool</font>

67
00:02:44,560 --> 00:02:49,060
or stuff that's what<font color="#E5E5E5"> we're kind of</font>

68
00:02:46,419 --> 00:02:50,290
hoping for here and then we'll give you

69
00:02:49,060 --> 00:02:51,430
an idea of<font color="#E5E5E5"> what we're kind of working on</font>

70
00:02:50,290 --> 00:02:53,319
as the next tool that we're going to

71
00:02:51,430 --> 00:02:54,669
release and some of the future editions

72
00:02:53,319 --> 00:02:57,638
we're going to do these<font color="#E5E5E5"> tools to make</font>

73
00:02:54,669 --> 00:02:59,799
them even better because these are beta

74
00:02:57,639 --> 00:03:05,019
releases<font color="#E5E5E5"> there on one point oh there I</font>

75
00:02:59,799 --> 00:03:07,719
think point<font color="#E5E5E5"> three at this point so so</font>

76
00:03:05,019 --> 00:03:09,760
first cross-site scripting do actually

77
00:03:07,719 --> 00:03:12,638
care isn't it just<font color="#E5E5E5"> as annoying pop-up</font>

78
00:03:09,760 --> 00:03:13,750
box what's the worst thing you people

79
00:03:12,639 --> 00:03:20,500
can<font color="#E5E5E5"> think of that i can do with</font>

80
00:03:13,750 --> 00:03:23,970
cross-site scripting anything anyone

81
00:03:20,500 --> 00:03:25,750
think you can scan networks with it

82
00:03:23,970 --> 00:03:27,430
there was actually a<font color="#E5E5E5"> proof of concept</font>

83
00:03:25,750 --> 00:03:29,139
released<font color="#CCCCCC"> I think it</font><font color="#E5E5E5"> was last year where</font>

84
00:03:27,430 --> 00:03:31,840
someone was doing network scanning using

85
00:03:29,139 --> 00:03:32,829
javascript if you can do in<font color="#CCCCCC"> JavaScript</font>

86
00:03:31,840 --> 00:03:34,060
you<font color="#CCCCCC"> can do it</font><font color="#E5E5E5"> from the browser which</font>

87
00:03:32,829 --> 00:03:38,949
means you can do it as cross-site

88
00:03:34,060 --> 00:03:40,599
scripting that's pretty bad anyone think

89
00:03:38,949 --> 00:03:43,930
you can rob a bank with cross-site

90
00:03:40,599 --> 00:03:47,470
scripting this isn't a real<font color="#E5E5E5"> bank this is</font>

91
00:03:43,930 --> 00:03:51,099
my bank it has a cross-site scripting

92
00:03:47,470 --> 00:03:56,650
vulnerability in it<font color="#CCCCCC"> I open it</font><font color="#E5E5E5"> up here I</font>

93
00:03:51,099 --> 00:03:58,899
cheat and use videos so this is<font color="#CCCCCC"> my bank</font>

94
00:03:56,650 --> 00:04:02,889
the IBD bank once he gets in there is

95
00:03:58,900 --> 00:04:03,909
the<font color="#E5E5E5"> International Bank of Dan bank and</font>

96
00:04:02,889 --> 00:04:06,099
it has a cross-site scripting

97
00:04:03,909 --> 00:04:07,448
vulnerability so we're just<font color="#E5E5E5"> going to</font>

98
00:04:06,099 --> 00:04:10,168
<font color="#E5E5E5">take a quick look and it's normal it's a</font>

99
00:04:07,449 --> 00:04:12,879
simple bank right it allows you to do

100
00:04:10,169 --> 00:04:14,739
withdrawals or soy payments so you can

101
00:04:12,879 --> 00:04:16,060
pay other people you can<font color="#E5E5E5"> set up people</font>

102
00:04:14,739 --> 00:04:17,978
you want to<font color="#E5E5E5"> pay you can sign up and log</font>

103
00:04:16,060 --> 00:04:20,660
in<font color="#E5E5E5"> to the bank so we're just going to</font>

104
00:04:17,978 --> 00:04:22,880
assign into the bank here as the victim

105
00:04:20,660 --> 00:04:24,590
the one caveat for this attack is you

106
00:04:22,880 --> 00:04:25,850
have to know<font color="#E5E5E5"> that the person you're</font>

107
00:04:24,590 --> 00:04:27,770
attacking is actually logged into<font color="#E5E5E5"> the</font>

108
00:04:25,850 --> 00:04:30,470
bank but that's becoming a lot easier

109
00:04:27,770 --> 00:04:32,210
these days with things like Facebook

110
00:04:30,470 --> 00:04:34,130
where people put up their status<font color="#E5E5E5"> and</font>

111
00:04:32,210 --> 00:04:35,690
look now i'm doing<font color="#CCCCCC"> my banking or they're</font>

112
00:04:34,130 --> 00:04:37,159
on twitter and they say look<font color="#E5E5E5"> i just paid</font>

113
00:04:35,690 --> 00:04:39,410
off my MasterCard bill and then<font color="#E5E5E5"> you know</font>

114
00:04:37,160 --> 00:04:40,970
<font color="#E5E5E5">okay there on the bank so let me</font><font color="#CCCCCC"> get</font>

115
00:04:39,410 --> 00:04:42,680
them<font color="#E5E5E5"> to do something so we're setting up</font>

116
00:04:40,970 --> 00:04:44,690
a payee<font color="#E5E5E5"> so I'm going to pay myself I'm</font>

117
00:04:42,680 --> 00:04:45,950
<font color="#E5E5E5">gonna pay myself a dollar you can see it</font>

118
00:04:44,690 --> 00:04:47,660
<font color="#CCCCCC">just goes through</font><font color="#E5E5E5"> and I successfully</font>

119
00:04:45,950 --> 00:04:49,280
paid myself a dollar so just showing how

120
00:04:47,660 --> 00:04:50,630
the bank works and they got a thousand

121
00:04:49,280 --> 00:04:53,539
per nine hundred<font color="#E5E5E5"> ninety nine dollars</font>

122
00:04:50,630 --> 00:04:55,219
left right simple bank you know this

123
00:04:53,540 --> 00:04:56,810
could<font color="#E5E5E5"> work over ssl this example isn't</font>

124
00:04:55,220 --> 00:04:59,150
over ssl just because i was too lazy to

125
00:04:56,810 --> 00:05:02,120
set it up<font color="#CCCCCC"> but you ssl would not make a</font>

126
00:04:59,150 --> 00:05:03,979
difference<font color="#E5E5E5"> in this case and the other</font>

127
00:05:02,120 --> 00:05:07,010
thing to keep in mind is that<font color="#E5E5E5"> a third of</font>

128
00:05:03,980 --> 00:05:08,750
NGC surf tokens so anti cross-site

129
00:05:07,010 --> 00:05:10,760
request forgery tokens they don't help

130
00:05:08,750 --> 00:05:12,830
with this because the way this attack is

131
00:05:10,760 --> 00:05:17,300
working you can actually parse those

132
00:05:12,830 --> 00:05:18,740
tokens out and you<font color="#CCCCCC"> can reply to them so</font>

133
00:05:17,300 --> 00:05:20,060
what we're doing<font color="#E5E5E5"> here is just</font>

134
00:05:18,740 --> 00:05:22,510
discovering that there is a cross-site

135
00:05:20,060 --> 00:05:24,620
scripting bug in the paint you drop down

136
00:05:22,510 --> 00:05:26,390
so that drop down its not being

137
00:05:24,620 --> 00:05:27,890
validated in the back end to be actually

138
00:05:26,390 --> 00:05:29,330
<font color="#E5E5E5">correct data so let's cross that</font>

139
00:05:27,890 --> 00:05:33,469
scriptable and you can see it pops up

140
00:05:29,330 --> 00:05:35,359
<font color="#E5E5E5">sssp</font><font color="#CCCCCC"> okay cool so we have a bank site we</font>

141
00:05:33,470 --> 00:05:37,220
<font color="#CCCCCC">have a vulnerability and right now we</font>

142
00:05:35,360 --> 00:05:39,830
have our user who's logged into the<font color="#E5E5E5"> bank</font>

143
00:05:37,220 --> 00:05:41,990
<font color="#CCCCCC">site he has a session ID which we need</font>

144
00:05:39,830 --> 00:05:43,669
<font color="#E5E5E5">to be able to impersonate him you know</font>

145
00:05:41,990 --> 00:05:46,780
this could run address ssl it doesn't

146
00:05:43,669 --> 00:05:49,370
matter so while he's on<font color="#E5E5E5"> our banking site</font>

147
00:05:46,780 --> 00:05:51,409
we convinced him to visit<font color="#E5E5E5"> a malicious</font>

148
00:05:49,370 --> 00:05:54,080
site so we're going to get<font color="#CCCCCC"> him</font><font color="#E5E5E5"> to visit</font>

149
00:05:51,410 --> 00:05:55,580
our super happy fun site right which we

150
00:05:54,080 --> 00:05:56,840
can do you know through our own<font color="#CCCCCC"> twitter</font>

151
00:05:55,580 --> 00:05:58,340
scheme and it's like if you're doing

152
00:05:56,840 --> 00:06:00,169
your banking look at my side<font color="#CCCCCC"> I've got</font>

153
00:05:58,340 --> 00:06:02,119
tips on you saving you thousands of

154
00:06:00,169 --> 00:06:03,560
dollars<font color="#E5E5E5"> we play after master card so</font>

155
00:06:02,120 --> 00:06:05,810
they come over to our super cool site

156
00:06:03,560 --> 00:06:07,910
over here and you<font color="#CCCCCC"> know it's a fun site</font>

157
00:06:05,810 --> 00:06:09,410
you can do stuff<font color="#E5E5E5"> on it that's it you</font>

158
00:06:07,910 --> 00:06:11,570
know it's not doing anything it's not

159
00:06:09,410 --> 00:06:15,230
<font color="#E5E5E5">showing user anything you know it's just</font>

160
00:06:11,570 --> 00:06:18,050
sitting there so the user then goes back

161
00:06:15,230 --> 00:06:21,350
to his bank account and interestingly

162
00:06:18,050 --> 00:06:23,750
enough you know once he actually gets

163
00:06:21,350 --> 00:06:24,919
back there I'm faster<font color="#CCCCCC"> than he is you'll</font>

164
00:06:23,750 --> 00:06:26,319
notice he's lost another five hundred

165
00:06:24,919 --> 00:06:28,698
dollars

166
00:06:26,319 --> 00:06:29,720
which would<font color="#CCCCCC"> be a bit</font><font color="#E5E5E5"> of a surprise when</font>

167
00:06:28,699 --> 00:06:31,190
you<font color="#E5E5E5"> go back and look at your bank</font>

168
00:06:29,720 --> 00:06:32,630
account statement and so what I went and

169
00:06:31,190 --> 00:06:35,449
saw our website now just lost 500 bucks

170
00:06:32,630 --> 00:06:37,039
what just<font color="#E5E5E5"> happened so on the</font><font color="#CCCCCC"> back end</font>

171
00:06:35,449 --> 00:06:38,930
that websites actually doing Ajax calls

172
00:06:37,039 --> 00:06:40,580
does an AJAX call to exploit<font color="#CCCCCC"> the</font>

173
00:06:38,930 --> 00:06:42,710
cross-site scripting bug which gets the

174
00:06:40,580 --> 00:06:44,690
session which he then uses to add a new

175
00:06:42,710 --> 00:06:46,969
<font color="#E5E5E5">page which you then use this to pay the</font>

176
00:06:44,690 --> 00:06:49,580
payee so the jab the<font color="#E5E5E5"> ajax in the back</font>

177
00:06:46,970 --> 00:06:51,289
end is doing all these<font color="#E5E5E5"> calls to the</font>

178
00:06:49,580 --> 00:06:53,330
website parsing the results sending more

179
00:06:51,289 --> 00:06:54,740
back results back right so if<font color="#E5E5E5"> we can</font>

180
00:06:53,330 --> 00:06:55,789
parse<font color="#E5E5E5"> this stuff we can parse the sea</font>

181
00:06:54,740 --> 00:06:57,380
surface oaken's we can parse with

182
00:06:55,789 --> 00:06:59,659
anything so<font color="#E5E5E5"> anything you put in your</font>

183
00:06:57,380 --> 00:07:02,690
<font color="#CCCCCC">form</font><font color="#E5E5E5"> to stop me from doing this I can</font>

184
00:06:59,659 --> 00:07:05,000
reply to it and do it again<font color="#E5E5E5"> so we've</font>

185
00:07:02,690 --> 00:07:09,169
suddenly got a hacker in our pay account

186
00:07:05,000 --> 00:07:12,800
which was probably not our intent let's

187
00:07:09,169 --> 00:07:14,719
get rid of that so as you can see

188
00:07:12,800 --> 00:07:21,789
cross-site scripting is actually kind of

189
00:07:14,720 --> 00:07:25,009
nasty<font color="#E5E5E5"> I can't talk here talking twice so</font>

190
00:07:21,789 --> 00:07:27,229
so these aren't new right cross-site

191
00:07:25,009 --> 00:07:28,610
scripting it's been around for however

192
00:07:27,229 --> 00:07:29,930
long the web's<font color="#E5E5E5"> brown same but SQL</font>

193
00:07:28,610 --> 00:07:32,240
injection these aren't new attacks

194
00:07:29,930 --> 00:07:34,460
there's nothing<font color="#E5E5E5"> new here the problem is</font>

195
00:07:32,240 --> 00:07:35,840
they're not getting fixed the problem is

196
00:07:34,460 --> 00:07:37,460
developers don't know they're there so

197
00:07:35,840 --> 00:07:40,008
they keep writing web applications with

198
00:07:37,460 --> 00:07:42,169
them this<font color="#E5E5E5"> year was the first year</font>

199
00:07:40,009 --> 00:07:44,030
cross-site scripting bugs outnumbered

200
00:07:42,169 --> 00:07:46,659
buffer overflows in a common

201
00:07:44,030 --> 00:07:49,369
vulnerability and exploitation database

202
00:07:46,659 --> 00:07:51,500
the current estimate is eighty-five

203
00:07:49,370 --> 00:07:53,870
percent of web applications are

204
00:07:51,500 --> 00:07:55,630
vulnerable to cross-site scripting forty

205
00:07:53,870 --> 00:07:57,800
percent of vulnerable to SQL injection

206
00:07:55,630 --> 00:07:59,599
so you think a<font color="#CCCCCC"> number of web apps out</font>

207
00:07:57,800 --> 00:08:01,340
there that's a lot of sites that<font color="#E5E5E5"> are</font>

208
00:07:59,599 --> 00:08:05,900
vulnerable<font color="#E5E5E5"> to these kind of things right</font>

209
00:08:01,340 --> 00:08:07,849
and just as a side note there's a site

210
00:08:05,900 --> 00:08:10,008
called XSS calm which gives a list of

211
00:08:07,849 --> 00:08:11,569
cross-site scripting sites so these are

212
00:08:10,009 --> 00:08:13,639
sort<font color="#E5E5E5"> of by page rank so it's not</font><font color="#CCCCCC"> just</font>

213
00:08:11,569 --> 00:08:15,469
that yeah who's up there a lot but<font color="#E5E5E5"> you</font>

214
00:08:13,639 --> 00:08:20,120
can<font color="#CCCCCC"> look at this and see you know we've</font>

215
00:08:15,469 --> 00:08:22,130
<font color="#E5E5E5">got yahoo</font><font color="#CCCCCC"> i can't actually read them</font><font color="#E5E5E5"> but</font>

216
00:08:20,120 --> 00:08:23,630
in<font color="#CCCCCC"> hitters</font><font color="#E5E5E5"> google there's pretty much</font>

217
00:08:22,130 --> 00:08:25,250
everyone in<font color="#E5E5E5"> here you can think of but</font>

218
00:08:23,630 --> 00:08:27,530
he's you know page rank one site page

219
00:08:25,250 --> 00:08:28,860
rank whatever site so there's tons of

220
00:08:27,530 --> 00:08:34,919
<font color="#CCCCCC">them</font>

221
00:08:28,860 --> 00:08:36,000
huh no in case you're wanting the<font color="#E5E5E5"> X's</font>

222
00:08:34,919 --> 00:08:37,890
and<font color="#E5E5E5"> the check marks mean the check</font>

223
00:08:36,000 --> 00:08:40,469
<font color="#CCCCCC">nominees has been fixed X is not fixed</font>

224
00:08:37,890 --> 00:08:42,088
as of whenever<font color="#E5E5E5"> this was last updated I</font>

225
00:08:40,469 --> 00:08:43,680
don't know but so these<font color="#E5E5E5"> are all these</font>

226
00:08:42,089 --> 00:08:45,480
cross-site scripting vulnerabilities

227
00:08:43,679 --> 00:08:47,069
that are in this thing they're<font color="#CCCCCC"> just out</font>

228
00:08:45,480 --> 00:08:48,720
there and<font color="#E5E5E5"> these are big name sites right</font>

229
00:08:47,070 --> 00:08:49,740
you<font color="#E5E5E5"> think yeah who could do web security</font>

230
00:08:48,720 --> 00:08:51,089
and fixed across I scripting

231
00:08:49,740 --> 00:08:55,880
vulnerabilities but they still have

232
00:08:51,089 --> 00:08:55,880
<font color="#E5E5E5">these problems so it's a big issue right</font>

233
00:08:58,490 --> 00:09:07,709
so hey go away there we go and this is

234
00:09:06,209 --> 00:09:11,310
just<font color="#CCCCCC"> an example of a simple SQL</font>

235
00:09:07,709 --> 00:09:15,029
injection has anyone here read XKCD you

236
00:09:11,310 --> 00:09:17,489
know of little Bobby tables it's if the

237
00:09:15,029 --> 00:09:20,430
xkcd comic<font color="#CCCCCC"> where</font><font color="#E5E5E5"> she names her son Bobby</font>

238
00:09:17,490 --> 00:09:21,660
quote semicolon drop table students<font color="#E5E5E5"> the</font>

239
00:09:20,430 --> 00:09:30,779
school calls her out bring says only a

240
00:09:21,660 --> 00:09:32,550
little Bobby tables so so you know<font color="#CCCCCC"> these</font>

241
00:09:30,779 --> 00:09:34,680
<font color="#CCCCCC">are fairly common vulnerabilities and</font>

242
00:09:32,550 --> 00:09:38,010
that that's sort of the big problem so

243
00:09:34,680 --> 00:09:39,060
then what is xss specifically when<font color="#CCCCCC"> you</font>

244
00:09:38,010 --> 00:09:41,310
have cross-site scripting you're

245
00:09:39,060 --> 00:09:43,920
basically dealing with unvalidated user

246
00:09:41,310 --> 00:09:45,599
input so the user<font color="#E5E5E5"> type something in and</font>

247
00:09:43,920 --> 00:09:47,250
we don't check it on the back end and

248
00:09:45,600 --> 00:09:49,350
we're going to reflect it either to that

249
00:09:47,250 --> 00:09:50,640
user or to a different user so we're

250
00:09:49,350 --> 00:09:53,370
dealing<font color="#CCCCCC"> with that input that's not</font>

251
00:09:50,640 --> 00:09:54,870
validated it's typically<font color="#E5E5E5"> JavaScript the</font>

252
00:09:53,370 --> 00:09:57,000
interesting<font color="#CCCCCC"> thing is last year you could</font>

253
00:09:54,870 --> 00:09:59,490
actually cross-site script PDF files

254
00:09:57,000 --> 00:10:02,190
because the Acrobat Reader was not

255
00:09:59,490 --> 00:10:03,690
validating<font color="#E5E5E5"> its its input so you could</font>

256
00:10:02,190 --> 00:10:05,220
pass cross-site scripting through so if

257
00:10:03,690 --> 00:10:07,680
you<font color="#CCCCCC"> think about it any website that</font>

258
00:10:05,220 --> 00:10:09,959
served PDF files was cross-site

259
00:10:07,680 --> 00:10:11,699
scripting<font color="#CCCCCC"> and if people are still using</font>

260
00:10:09,959 --> 00:10:15,420
an old version of the Acrobat<font color="#CCCCCC"> plug-in</font>

261
00:10:11,699 --> 00:10:17,430
probably still is and that's not a good

262
00:10:15,420 --> 00:10:19,680
<font color="#CCCCCC">thing because cross-site scripting you</font>

263
00:10:17,430 --> 00:10:20,760
can steal the browser's cookie once you

264
00:10:19,680 --> 00:10:21,839
<font color="#E5E5E5">have the cookie you have everything</font>

265
00:10:20,760 --> 00:10:23,880
right because typically the cookie has

266
00:10:21,839 --> 00:10:26,250
the session the session is that users

267
00:10:23,880 --> 00:10:28,230
credentials after they're logged in so

268
00:10:26,250 --> 00:10:29,730
if you have the<font color="#E5E5E5"> users cookie you are</font>

269
00:10:28,230 --> 00:10:33,829
that user for the lifetime of that

270
00:10:29,730 --> 00:10:33,829
cookie and that's<font color="#CCCCCC"> usually bad</font>

271
00:10:35,040 --> 00:10:40,030
so there's two types of cross-site

272
00:10:37,300 --> 00:10:41,290
scripting reflected so the user type

273
00:10:40,030 --> 00:10:44,350
something in and immediately a pop-up

274
00:10:41,290 --> 00:10:45,670
box pops up with what he typed in class

275
00:10:44,350 --> 00:10:47,830
that script made deals with this right

276
00:10:45,670 --> 00:10:49,870
now<font color="#E5E5E5"> it deals with the reflected version</font>

277
00:10:47,830 --> 00:10:51,760
the other<font color="#CCCCCC"> version is stored so the user</font>

278
00:10:49,870 --> 00:10:54,100
put something in saves it to a database

279
00:10:51,760 --> 00:10:55,960
and<font color="#CCCCCC"> then another user comes along and</font>

280
00:10:54,100 --> 00:10:58,270
runs that<font color="#CCCCCC"> and has</font><font color="#E5E5E5"> something pop up on</font>

281
00:10:55,960 --> 00:11:00,750
them or execute class description

282
00:10:58,270 --> 00:11:02,890
currently<font color="#E5E5E5"> doesn't deal with stored</font>

283
00:11:00,750 --> 00:11:04,060
cross-site scripting specifically

284
00:11:02,890 --> 00:11:05,560
because you then have to start spy

285
00:11:04,060 --> 00:11:08,020
during the whole website and figuring

286
00:11:05,560 --> 00:11:10,180
<font color="#CCCCCC">out where can this show up and it's sort</font>

287
00:11:08,020 --> 00:11:12,160
<font color="#E5E5E5">of a big difficult problem that we</font>

288
00:11:10,180 --> 00:11:17,439
haven't took out yet we want to do it we

289
00:11:12,160 --> 00:11:18,910
just<font color="#E5E5E5"> haven't done</font><font color="#CCCCCC"> it</font><font color="#E5E5E5"> yet and the last</font>

290
00:11:17,440 --> 00:11:20,650
<font color="#E5E5E5">thing that you sort of noticed in the</font>

291
00:11:18,910 --> 00:11:24,280
attack we did was<font color="#E5E5E5"> Ajax so Ajax is</font>

292
00:11:20,650 --> 00:11:26,829
asynchronous JavaScript and XML Ajax can

293
00:11:24,280 --> 00:11:28,930
pretty much do anything it can send<font color="#E5E5E5"> data</font>

294
00:11:26,830 --> 00:11:31,000
it can receive data it can parse data it

295
00:11:28,930 --> 00:11:32,650
can it can do<font color="#E5E5E5"> anything which makes it</font>

296
00:11:31,000 --> 00:11:34,510
<font color="#E5E5E5">fairly powerful when you combine it</font><font color="#CCCCCC"> with</font>

297
00:11:32,650 --> 00:11:36,939
these cross-site scripting and other

298
00:11:34,510 --> 00:11:39,760
sort of vulnerabilities that you can do

299
00:11:36,940 --> 00:11:45,880
a lot<font color="#CCCCCC"> more stuff and that kind of makes</font>

300
00:11:39,760 --> 00:11:48,189
it scary so we're<font color="#CCCCCC"> not trying to say that</font>

301
00:11:45,880 --> 00:11:49,360
we<font color="#E5E5E5"> invented the idea of you know testing</font>

302
00:11:48,190 --> 00:11:51,130
for these things<font color="#E5E5E5"> there's lots of great</font>

303
00:11:49,360 --> 00:11:52,840
tools out there tamper data is a great

304
00:11:51,130 --> 00:11:55,030
tool fiddler is a great tool there's all

305
00:11:52,840 --> 00:11:55,990
these great tools you know there's all

306
00:11:55,030 --> 00:11:57,699
kinds of<font color="#E5E5E5"> open source tools there's</font>

307
00:11:55,990 --> 00:11:59,230
commercial tools<font color="#E5E5E5"> too if you can afford</font>

308
00:11:57,700 --> 00:12:01,360
the commercial tools clothes are

309
00:11:59,230 --> 00:12:03,970
typically<font color="#CCCCCC"> not cheap the problem we have</font>

310
00:12:01,360 --> 00:12:05,290
with these is that they're heavy<font color="#E5E5E5"> and by</font>

311
00:12:03,970 --> 00:12:07,030
heavy I mean you have to start up an

312
00:12:05,290 --> 00:12:08,650
external process you have<font color="#CCCCCC"> to configure</font>

313
00:12:07,030 --> 00:12:10,660
your browser to proxy to<font color="#E5E5E5"> that process</font>

314
00:12:08,650 --> 00:12:12,819
you know when you're done<font color="#CCCCCC"> you're testing</font>

315
00:12:10,660 --> 00:12:14,650
you trained your browser back I was a

316
00:12:12,820 --> 00:12:16,300
developer I was too lazy to do that<font color="#E5E5E5"> kind</font>

317
00:12:14,650 --> 00:12:18,670
of thing right you're not going to want

318
00:12:16,300 --> 00:12:20,650
<font color="#E5E5E5">to do it these tools take too much</font>

319
00:12:18,670 --> 00:12:24,130
effort and if you kind<font color="#E5E5E5"> of look at it</font>

320
00:12:20,650 --> 00:12:25,600
that's not a simple interface so they

321
00:12:24,130 --> 00:12:27,630
require a certain<font color="#E5E5E5"> amount of domain</font>

322
00:12:25,600 --> 00:12:30,190
knowledge to<font color="#E5E5E5"> start using these tools</font>

323
00:12:27,630 --> 00:12:32,700
which you may not have in developers or

324
00:12:30,190 --> 00:12:32,700
in QA

325
00:12:33,889 --> 00:12:40,019
so that's where<font color="#CCCCCC"> so we sort of</font><font color="#E5E5E5"> saw this</font>

326
00:12:37,949 --> 00:12:41,609
missing piece so most tools that are

327
00:12:40,019 --> 00:12:43,769
developed art for developers down<font color="#CCCCCC"> for Q</font>

328
00:12:41,610 --> 00:12:44,790
<font color="#E5E5E5">either for pen testers I just come in</font>

329
00:12:43,769 --> 00:12:46,519
they run these tools they know what

330
00:12:44,790 --> 00:12:48,959
they're doing they know how to<font color="#CCCCCC"> use them</font>

331
00:12:46,519 --> 00:12:50,339
we want to<font color="#E5E5E5"> see developers to fix their</font>

332
00:12:48,959 --> 00:12:51,300
tools we don't want to go in for a pen

333
00:12:50,339 --> 00:12:54,089
test and find cross-site scripting

334
00:12:51,300 --> 00:12:55,709
because it just kind of makes a sec okay

335
00:12:54,089 --> 00:12:58,680
we found cross-site scripting let's move

336
00:12:55,709 --> 00:13:00,239
on we want developers to fix it earlier

337
00:12:58,680 --> 00:13:02,160
in the development cycle we want key way

338
00:13:00,240 --> 00:13:04,589
to fix<font color="#E5E5E5"> it we want to give them the tools</font>

339
00:13:02,160 --> 00:13:06,600
that they need to<font color="#E5E5E5"> fix these things and</font>

340
00:13:04,589 --> 00:13:09,600
to do that we<font color="#CCCCCC"> have to make</font><font color="#E5E5E5"> it really</font>

341
00:13:06,600 --> 00:13:13,949
simple for them so we're trying<font color="#E5E5E5"> to push</font>

342
00:13:09,600 --> 00:13:15,000
it earlier into the sdlc cycle so that's

343
00:13:13,949 --> 00:13:16,859
where cross-site scripting comes in

344
00:13:15,000 --> 00:13:18,899
cross-site scripting is a<font color="#CCCCCC"> firefox</font>

345
00:13:16,860 --> 00:13:21,120
extension you download it comes off our

346
00:13:18,899 --> 00:13:22,589
<font color="#E5E5E5">website stalls into firefox then when</font>

347
00:13:21,120 --> 00:13:26,629
you want to use it<font color="#E5E5E5"> you just open it and</font>

348
00:13:22,589 --> 00:13:30,839
<font color="#CCCCCC">run so we'll actually go over</font><font color="#E5E5E5"> here and</font>

349
00:13:26,629 --> 00:13:32,040
find my mouth so this<font color="#CCCCCC"> is a demo so it's</font>

350
00:13:30,839 --> 00:13:34,860
<font color="#E5E5E5">not the real site is actually for</font>

351
00:13:32,040 --> 00:13:37,589
testing for things but I can come over

352
00:13:34,860 --> 00:13:40,500
<font color="#CCCCCC">here and</font><font color="#E5E5E5"> I can open up xss me if I could</font>

353
00:13:37,589 --> 00:13:42,870
see so it<font color="#E5E5E5"> just opens up on a little</font>

354
00:13:40,500 --> 00:13:45,899
<font color="#E5E5E5">sidebar here and the thing you'll notice</font>

355
00:13:42,870 --> 00:13:47,610
is that down in the corner there you see

356
00:13:45,899 --> 00:13:49,170
our<font color="#CCCCCC"> forum so that's the one form that's</font>

357
00:13:47,610 --> 00:13:51,809
on this page which is this search form

358
00:13:49,170 --> 00:13:54,209
and in<font color="#E5E5E5"> that form we have one text blocks</font>

359
00:13:51,809 --> 00:13:55,920
in one go button so cross-site scripting

360
00:13:54,209 --> 00:13:58,018
goes through the web page it finds all

361
00:13:55,920 --> 00:13:59,790
the forms on the site it will find all

362
00:13:58,019 --> 00:14:01,709
the hidden values all of the input

363
00:13:59,790 --> 00:14:03,860
fields all the<font color="#E5E5E5"> drop-down boxes all that</font>

364
00:14:01,709 --> 00:14:05,309
kind of fun stuff and then it lets you

365
00:14:03,860 --> 00:14:09,509
inject cross-site scripting

366
00:14:05,309 --> 00:14:12,110
vulnerabilities into them so yeah I can

367
00:14:09,509 --> 00:14:17,370
run<font color="#CCCCCC"> this</font><font color="#E5E5E5"> I'm actually going to just blew</font>

368
00:14:12,110 --> 00:14:18,600
<font color="#CCCCCC">that one and finally window so it goes</font>

369
00:14:17,370 --> 00:14:22,470
off and run I think<font color="#E5E5E5"> I clicked on the</font>

370
00:14:18,600 --> 00:14:24,120
right button yeah with top of tax so top

371
00:14:22,470 --> 00:14:25,110
attacks just<font color="#E5E5E5"> runs five attacks in my</font>

372
00:14:24,120 --> 00:14:28,259
case<font color="#E5E5E5"> because I don't run them around</font>

373
00:14:25,110 --> 00:14:31,709
them all because<font color="#E5E5E5"> it's sort of it's going</font>

374
00:14:28,259 --> 00:14:34,589
to run<font color="#E5E5E5"> actually 2016 attacks in this</font>

375
00:14:31,709 --> 00:14:36,479
case so<font color="#CCCCCC"> it isn't just the number it's a</font>

376
00:14:34,589 --> 00:14:37,949
multiplication thing that can never<font color="#E5E5E5"> ever</font>

377
00:14:36,480 --> 00:14:40,199
how it works but it goes off and it's

378
00:14:37,949 --> 00:14:41,849
<font color="#E5E5E5">sort of it's running its probing for</font>

379
00:14:40,199 --> 00:14:43,680
vulnerabilities and<font color="#CCCCCC"> I'll talk about our</font>

380
00:14:41,850 --> 00:14:46,710
heuristics that we stuck in

381
00:14:43,680 --> 00:14:48,839
the<font color="#E5E5E5"> latest release to make things a bit</font>

382
00:14:46,710 --> 00:14:51,330
faster and<font color="#E5E5E5"> then once it's done that it</font>

383
00:14:48,839 --> 00:14:53,700
figures out<font color="#E5E5E5"> okay given what's on there</font>

384
00:14:51,330 --> 00:14:56,100
and<font color="#E5E5E5"> what I can exploit I'm going to run</font>

385
00:14:53,700 --> 00:14:58,620
a certain number of tests and it's going

386
00:14:56,100 --> 00:14:59,910
<font color="#E5E5E5">to run 10 tests in this case so you can</font>

387
00:14:58,620 --> 00:15:02,190
see a whole bunch of tabs popped up the

388
00:14:59,910 --> 00:15:04,260
background so it uses the tabs in<font color="#CCCCCC"> the</font>

389
00:15:02,190 --> 00:15:06,690
current version to execute different

390
00:15:04,260 --> 00:15:08,130
pages so don't actually change tabs when

391
00:15:06,690 --> 00:15:10,470
you're running this or it will get all

392
00:15:08,130 --> 00:15:12,990
screwed up it needs to know the main

393
00:15:10,470 --> 00:15:13,920
page to keep going so those things<font color="#E5E5E5"> will</font>

394
00:15:12,990 --> 00:15:15,870
pop up and<font color="#E5E5E5"> they will all eventually</font>

395
00:15:13,920 --> 00:15:19,079
hopefully go away and you'll see this

396
00:15:15,870 --> 00:15:20,910
results page<font color="#E5E5E5"> pop up so you'll notice</font>

397
00:15:19,080 --> 00:15:22,529
first off that there's these fields here

398
00:15:20,910 --> 00:15:24,630
and this one's marked all read this once

399
00:15:22,529 --> 00:15:26,220
mark Greene<font color="#E5E5E5"> the reason this one's red is</font>

400
00:15:24,630 --> 00:15:28,470
because our heuristic testing has told

401
00:15:26,220 --> 00:15:30,209
us that none of<font color="#E5E5E5"> these things get through</font>

402
00:15:28,470 --> 00:15:31,950
and we'll discuss<font color="#CCCCCC"> that in a little bit</font>

403
00:15:30,209 --> 00:15:33,599
whereas in this case everything<font color="#CCCCCC"> gets</font>

404
00:15:31,950 --> 00:15:35,279
through on that field if everything can

405
00:15:33,600 --> 00:15:37,140
get through that means i can send my

406
00:15:35,279 --> 00:15:39,450
cross-site scripting characters through

407
00:15:37,140 --> 00:15:41,310
and maybe the<font color="#CCCCCC"> reflective back and</font><font color="#E5E5E5"> i can</font>

408
00:15:39,450 --> 00:15:44,250
see here that in one case there is a

409
00:15:41,310 --> 00:15:48,959
<font color="#E5E5E5">failure in that it does allow me to run</font>

410
00:15:44,250 --> 00:15:51,540
constant scripting so you can see

411
00:15:48,959 --> 00:15:52,829
there's red yellow and green and we'll

412
00:15:51,540 --> 00:15:55,079
talk<font color="#E5E5E5"> about what that means in a minute</font>

413
00:15:52,830 --> 00:15:58,500
but<font color="#E5E5E5"> basically it's this actually ran</font>

414
00:15:55,080 --> 00:16:00,420
this might run so we know that<font color="#CCCCCC"> this runs</font>

415
00:15:58,500 --> 00:16:02,760
so we know<font color="#CCCCCC"> that if we put in the script</font>

416
00:16:00,420 --> 00:16:05,160
tag into that field<font color="#CCCCCC"> it's cross-site</font>

417
00:16:02,760 --> 00:16:06,689
scripting<font color="#CCCCCC"> all and we'll</font><font color="#E5E5E5"> talk about what</font>

418
00:16:05,160 --> 00:16:08,760
document dot vulnerable equals true is

419
00:16:06,690 --> 00:16:10,380
in a minute<font color="#E5E5E5"> here this one</font><font color="#CCCCCC"> is a little</font>

420
00:16:08,760 --> 00:16:12,750
<font color="#CCCCCC">bit different in that it could be a</font>

421
00:16:10,380 --> 00:16:16,770
vulnerability and that's<font color="#E5E5E5"> because we</font>

422
00:16:12,750 --> 00:16:19,110
<font color="#E5E5E5">don't necessarily</font><font color="#CCCCCC"> know and we'll get</font><font color="#E5E5E5"> to</font>

423
00:16:16,770 --> 00:16:22,199
that I'm going<font color="#E5E5E5"> to get to a lot of things</font>

424
00:16:19,110 --> 00:16:27,209
apparently so let's<font color="#E5E5E5"> take a look at some</font>

425
00:16:22,200 --> 00:16:29,070
of the options on this thing xq up it's

426
00:16:27,209 --> 00:16:31,920
<font color="#E5E5E5">very hard to see</font>

427
00:16:29,070 --> 00:16:37,740
options so there's lots<font color="#E5E5E5"> of options you</font>

428
00:16:31,920 --> 00:16:38,969
<font color="#E5E5E5">can o do so I mentioned</font><font color="#CCCCCC"> the preferred</font>

429
00:16:37,740 --> 00:16:41,730
number of tax so that's actually

430
00:16:38,970 --> 00:16:43,620
<font color="#E5E5E5">configurable in my case</font><font color="#CCCCCC"> I do it</font><font color="#E5E5E5"> 25 so</font>

431
00:16:41,730 --> 00:16:45,240
the reason<font color="#E5E5E5"> we have that is because if</font>

432
00:16:43,620 --> 00:16:46,770
you run all the attacks<font color="#E5E5E5"> that can take a</font>

433
00:16:45,240 --> 00:16:49,350
long time<font color="#E5E5E5"> because you can have a lot of</font>

434
00:16:46,770 --> 00:16:51,689
attacks in the system you can have 120

435
00:16:49,350 --> 00:16:54,390
130 different attacks rings so<font color="#E5E5E5"> maybe</font>

436
00:16:51,690 --> 00:16:56,130
your developers are commonly susceptible

437
00:16:54,390 --> 00:16:57,480
to five of them right<font color="#CCCCCC"> so you can</font>

438
00:16:56,130 --> 00:16:59,910
configure this thing with those five

439
00:16:57,480 --> 00:17:02,040
attacks as the top five attacks your

440
00:16:59,910 --> 00:17:05,339
<font color="#E5E5E5">list until</font><font color="#CCCCCC"> the developers just run these</font>

441
00:17:02,040 --> 00:17:06,720
five attacks it takes 30 seconds whereas

442
00:17:05,339 --> 00:17:08,849
<font color="#CCCCCC">if you run all the attacks maybe takes</font>

443
00:17:06,720 --> 00:17:10,290
an hour so you can have your developers

444
00:17:08,849 --> 00:17:11,609
go off and configure this to have those

445
00:17:10,290 --> 00:17:13,589
certain number of attacks the other

446
00:17:11,609 --> 00:17:15,839
thing<font color="#CCCCCC"> you have</font><font color="#E5E5E5"> is the number of tabs to</font>

447
00:17:13,589 --> 00:17:18,540
run in the more tabs you run into more

448
00:17:15,839 --> 00:17:20,010
memory you need so it's all based on

449
00:17:18,540 --> 00:17:22,649
your system you got more memory use more

450
00:17:20,010 --> 00:17:26,220
tabs makes it faster sucks it more

451
00:17:22,650 --> 00:17:27,449
memory heuristic testing is configurable

452
00:17:26,220 --> 00:17:29,160
so you can actually turn it off if<font color="#CCCCCC"> you</font>

453
00:17:27,449 --> 00:17:31,260
<font color="#CCCCCC">want and you can configure the</font>

454
00:17:29,160 --> 00:17:33,120
characters<font color="#CCCCCC"> you send through the thing</font>

455
00:17:31,260 --> 00:17:34,740
with heuristics is it's not in<font color="#E5E5E5"> the</font>

456
00:17:33,120 --> 00:17:35,879
version that's on the website now it's

457
00:17:34,740 --> 00:17:38,130
in the one that we're going<font color="#CCCCCC"> to release</font>

458
00:17:35,880 --> 00:17:40,290
so it's in point<font color="#E5E5E5"> three it's coming it's</font>

459
00:17:38,130 --> 00:17:41,370
<font color="#E5E5E5">not out quite yet another last option</font>

460
00:17:40,290 --> 00:17:42,990
you could ignore<font color="#CCCCCC"> because even I don't</font>

461
00:17:41,370 --> 00:17:45,209
<font color="#CCCCCC">know what it does the developer put it</font>

462
00:17:42,990 --> 00:17:47,100
in this is what we get for<font color="#E5E5E5"> letting</font>

463
00:17:45,210 --> 00:17:50,640
developers put stuff in and the other

464
00:17:47,100 --> 00:17:51,600
one we have here is the strings so this

465
00:17:50,640 --> 00:17:55,290
<font color="#E5E5E5">is our list of cross-site scripting</font>

466
00:17:51,600 --> 00:17:57,000
strengths this list comes with basically

467
00:17:55,290 --> 00:18:00,210
the<font color="#E5E5E5"> complete list of our snakes</font>

468
00:17:57,000 --> 00:18:01,710
cross-site scripting vulnerabilities the

469
00:18:00,210 --> 00:18:05,780
ones that are missing are the specific

470
00:18:01,710 --> 00:18:07,920
ones that reference an external website

471
00:18:05,780 --> 00:18:08,970
we didn't<font color="#E5E5E5"> want</font><font color="#CCCCCC"> to put</font><font color="#E5E5E5"> them in because we</font>

472
00:18:07,920 --> 00:18:11,160
didn't<font color="#E5E5E5"> want people to</font><font color="#CCCCCC"> think we were</font>

473
00:18:08,970 --> 00:18:13,920
tracking their execution of cross-site

474
00:18:11,160 --> 00:18:15,990
scripting so we have<font color="#E5E5E5"> those available and</font>

475
00:18:13,920 --> 00:18:17,820
you can see we have import/export

476
00:18:15,990 --> 00:18:19,530
add/remove up down so you can modify

477
00:18:17,820 --> 00:18:20,929
this list so we've made those extra

478
00:18:19,530 --> 00:18:23,700
attacks available off our website and

479
00:18:20,930 --> 00:18:24,900
the javascript file you need is

480
00:18:23,700 --> 00:18:27,870
available so you can download<font color="#E5E5E5"> that and</font>

481
00:18:24,900 --> 00:18:29,250
put<font color="#E5E5E5"> it on your website modify it and put</font>

482
00:18:27,870 --> 00:18:30,719
the attacks ring in here so that we

483
00:18:29,250 --> 00:18:32,520
<font color="#CCCCCC">don't know that you're</font><font color="#E5E5E5"> running</font><font color="#CCCCCC"> the tool</font>

484
00:18:30,720 --> 00:18:33,840
because you might have a customer that

485
00:18:32,520 --> 00:18:36,230
you're running<font color="#E5E5E5"> it against you don't want</font>

486
00:18:33,840 --> 00:18:40,800
us<font color="#CCCCCC"> to know who your customers are</font>

487
00:18:36,230 --> 00:18:42,360
some people are very paranoid and you

488
00:18:40,800 --> 00:18:45,770
can see each one<font color="#E5E5E5"> of these attacks has</font>

489
00:18:42,360 --> 00:18:52,070
documented honorable equals true so

490
00:18:45,770 --> 00:18:52,070
that's sort of how this thing works<font color="#CCCCCC"> okay</font>

491
00:19:00,929 --> 00:19:06,070
okay so heuristic testing so the thing

492
00:19:04,780 --> 00:19:08,830
we have is if you run all<font color="#CCCCCC"> of these</font>

493
00:19:06,070 --> 00:19:12,270
attacks<font color="#E5E5E5"> it takes a long time trust me</font>

494
00:19:08,830 --> 00:19:15,699
I've done this it takes a long time so

495
00:19:12,270 --> 00:19:17,350
we sat down and we thought okay how can

496
00:19:15,700 --> 00:19:18,610
make this faster and we realize<font color="#CCCCCC"> that</font>

497
00:19:17,350 --> 00:19:19,600
there's certain<font color="#E5E5E5"> characters that all of</font>

498
00:19:18,610 --> 00:19:21,100
your cross-site scripting attacks

499
00:19:19,600 --> 00:19:23,740
typically use right you'll typically

500
00:19:21,100 --> 00:19:25,809
have a narrow bracket or a quote or a

501
00:19:23,740 --> 00:19:29,020
semicolon or something there's a typical

502
00:19:25,809 --> 00:19:30,639
set of characters so why don't we inject

503
00:19:29,020 --> 00:19:32,770
all those characters to begin with and

504
00:19:30,640 --> 00:19:34,780
see which fields send them back

505
00:19:32,770 --> 00:19:37,299
unencoded if we get those characters

506
00:19:34,780 --> 00:19:39,790
back unencoded we can theoretically

507
00:19:37,299 --> 00:19:41,799
cross that script detect that field so

508
00:19:39,790 --> 00:19:44,290
we<font color="#CCCCCC"> just use this heuristic testing to</font>

509
00:19:41,799 --> 00:19:48,450
try and determine which fields we can

510
00:19:44,290 --> 00:19:48,450
completely ignore straight off the game

511
00:19:49,860 --> 00:19:59,620
my laptop is so slow yeah I know it's

512
00:19:54,880 --> 00:20:02,740
not my<font color="#CCCCCC"> choice are you changing no there</font>

513
00:19:59,620 --> 00:20:04,030
we go so how does this<font color="#E5E5E5"> work you notice</font>

514
00:20:02,740 --> 00:20:07,059
that<font color="#E5E5E5"> we had document a vulnerable equals</font>

515
00:20:04,030 --> 00:20:09,790
true so what<font color="#CCCCCC"> we do is when the page</font>

516
00:20:07,059 --> 00:20:12,100
starts to load the the script modifies

517
00:20:09,790 --> 00:20:14,530
the<font color="#CCCCCC"> DOM and inserts this</font><font color="#E5E5E5"> document</font>

518
00:20:12,100 --> 00:20:18,100
vulnerable equals false tag into the<font color="#E5E5E5"> Dom</font>

519
00:20:14,530 --> 00:20:19,750
so when the page loads if the<font color="#E5E5E5"> JavaScript</font>

520
00:20:18,100 --> 00:20:21,309
gets executed the Dom will change and

521
00:20:19,750 --> 00:20:22,990
that will be set to true so we can tell

522
00:20:21,309 --> 00:20:25,270
that that<font color="#E5E5E5"> JavaScript was executed</font>

523
00:20:22,990 --> 00:20:26,890
because our document<font color="#CCCCCC"> dhawal interval is</font>

524
00:20:25,270 --> 00:20:28,360
how equal to true so if you want to

525
00:20:26,890 --> 00:20:30,160
<font color="#E5E5E5">write your own sort of attacks to put</font>

526
00:20:28,360 --> 00:20:31,600
<font color="#E5E5E5">into this thing all you have to do is</font>

527
00:20:30,160 --> 00:20:35,110
set document out of honorable equals

528
00:20:31,600 --> 00:20:37,389
true you can have<font color="#E5E5E5"> your own so the</font>

529
00:20:35,110 --> 00:20:39,219
publicist doesn't always work there are

530
00:20:37,390 --> 00:20:42,070
specific cases where the JavaScript

531
00:20:39,220 --> 00:20:44,290
won't get executed in Firefox or won't

532
00:20:42,070 --> 00:20:45,760
get executed when the page loads but<font color="#E5E5E5"> we</font>

533
00:20:44,290 --> 00:20:48,100
still won't be able<font color="#E5E5E5"> to catch those one</font>

534
00:20:45,760 --> 00:20:50,740
of<font color="#CCCCCC"> them is my own mess over so if you</font>

535
00:20:48,100 --> 00:20:52,389
have a an input value to the user types

536
00:20:50,740 --> 00:20:54,429
in and you're putting it back<font color="#CCCCCC"> into</font><font color="#E5E5E5"> say</font>

537
00:20:52,390 --> 00:20:56,830
an input box what happens if the user

538
00:20:54,429 --> 00:20:59,799
puts in close quote space onmouseover

539
00:20:56,830 --> 00:21:01,330
quote executes JavaScript that's not

540
00:20:59,799 --> 00:21:03,010
going to run when the page loads it's

541
00:21:01,330 --> 00:21:06,490
only going to run when the user Mouse's

542
00:21:03,010 --> 00:21:10,360
over that text box so what we also do is

543
00:21:06,490 --> 00:21:12,790
we send to requests for every page

544
00:21:10,360 --> 00:21:14,979
the first request<font color="#E5E5E5"> comes back and we</font>

545
00:21:12,790 --> 00:21:16,629
render it in<font color="#CCCCCC"> a browser if it renders in</font>

546
00:21:14,980 --> 00:21:20,080
the browser we know for sure you're

547
00:21:16,630 --> 00:21:21,850
vulnerable so we<font color="#E5E5E5"> mark it read the second</font>

548
00:21:20,080 --> 00:21:24,220
request we send out we get back to point

549
00:21:21,850 --> 00:21:26,260
text we then parse that plain text and

550
00:21:24,220 --> 00:21:28,690
look for the attack strings in that

551
00:21:26,260 --> 00:21:30,990
<font color="#E5E5E5">plain text is exact copies of what was</font>

552
00:21:28,690 --> 00:21:33,550
sent in if that<font color="#E5E5E5"> comes</font><font color="#CCCCCC"> back you're</font>

553
00:21:30,990 --> 00:21:36,580
probably vulnerable but we don't know

554
00:21:33,550 --> 00:21:38,889
and that gets marked as yellow so it

555
00:21:36,580 --> 00:21:40,389
tries to sort of detect the different

556
00:21:38,890 --> 00:21:42,880
possibilities for things that aren't

557
00:21:40,390 --> 00:21:50,290
available<font color="#E5E5E5"> in</font><font color="#CCCCCC"> Firefox or wouldn't execute</font>

558
00:21:42,880 --> 00:21:52,930
on page load so whoa that was

559
00:21:50,290 --> 00:21:57,190
interesting oh no it wasn't I can't read

560
00:21:52,930 --> 00:21:58,660
um thank deity first struts struts is

561
00:21:57,190 --> 00:22:01,030
supposed to be<font color="#CCCCCC"> the BL the</font><font color="#E5E5E5"> end-all to</font>

562
00:21:58,660 --> 00:22:03,850
save us from ourselves and keep our

563
00:22:01,030 --> 00:22:05,139
kittens out<font color="#E5E5E5"> of the tree you know people</font>

564
00:22:03,850 --> 00:22:07,389
tell<font color="#CCCCCC"> us if you want to be secured you</font>

565
00:22:05,140 --> 00:22:09,010
struts which is probably a good idea

566
00:22:07,390 --> 00:22:11,590
<font color="#E5E5E5">right frameworks give you lots of fun</font>

567
00:22:09,010 --> 00:22:14,400
<font color="#CCCCCC">stuff and can save you a lot the problem</font>

568
00:22:11,590 --> 00:22:18,790
is you probably don't<font color="#CCCCCC"> want to follow</font>

569
00:22:14,400 --> 00:22:20,500
whoa the<font color="#E5E5E5"> actual struts examples so this</font>

570
00:22:18,790 --> 00:22:22,750
<font color="#CCCCCC">is</font><font color="#E5E5E5"> the struts examples that they ship</font>

571
00:22:20,500 --> 00:22:25,150
with you and so we<font color="#E5E5E5"> can actually go into</font>

572
00:22:22,750 --> 00:22:26,680
the upload properties one and we'll<font color="#E5E5E5"> just</font>

573
00:22:25,150 --> 00:22:29,280
run cross-site scripting against it<font color="#E5E5E5"> and</font>

574
00:22:26,680 --> 00:22:31,150
the problem<font color="#CCCCCC"> is it's actually vulnerable</font>

575
00:22:29,280 --> 00:22:33,100
so they're shipping these which

576
00:22:31,150 --> 00:22:35,290
developers will take copy into their web

577
00:22:33,100 --> 00:22:37,629
application for how do<font color="#CCCCCC"> I do you know</font>

578
00:22:35,290 --> 00:22:40,840
file upload and<font color="#CCCCCC"> it's cross I scriptable</font>

579
00:22:37,630 --> 00:22:42,520
and this is a problem<font color="#E5E5E5"> because the</font>

580
00:22:40,840 --> 00:22:44,080
examples were telling our developers how

581
00:22:42,520 --> 00:22:46,330
to develop with a cross-site scripting

582
00:22:44,080 --> 00:22:47,649
all so you have to<font color="#E5E5E5"> be very careful even</font>

583
00:22:46,330 --> 00:22:49,720
<font color="#E5E5E5">when you're dealing with code that</font>

584
00:22:47,650 --> 00:22:51,100
someone's told you is you<font color="#CCCCCC"> know this is</font>

585
00:22:49,720 --> 00:22:53,560
<font color="#CCCCCC">the perfect it will solve all your</font>

586
00:22:51,100 --> 00:22:55,570
cross-site scripting problems it's<font color="#E5E5E5"> not</font>

587
00:22:53,560 --> 00:22:57,700
necessarily true<font color="#E5E5E5"> and this is what causes</font>

588
00:22:55,570 --> 00:22:58,870
<font color="#CCCCCC">our developers to have of course</font>

589
00:22:57,700 --> 00:23:00,430
cross-site scripting vulnerabilities

590
00:22:58,870 --> 00:23:03,449
because they don't realize that<font color="#E5E5E5"> it's</font>

591
00:23:00,430 --> 00:23:03,450
actually vulnerable

592
00:23:06,670 --> 00:23:11,390
so the second one we're<font color="#E5E5E5"> going to talk</font>

593
00:23:08,870 --> 00:23:13,399
<font color="#E5E5E5">about is SQL injection so SQL injection</font>

594
00:23:11,390 --> 00:23:15,740
is similar to cross-site scripting but

595
00:23:13,400 --> 00:23:17,780
we're dealing<font color="#CCCCCC"> with SQL and specifically</font>

596
00:23:15,740 --> 00:23:19,400
usually dynamic SQL so we have an SQL

597
00:23:17,780 --> 00:23:21,139
statement here and you'll see we're

598
00:23:19,400 --> 00:23:23,990
inserting the username and password

599
00:23:21,140 --> 00:23:25,610
values that the user typed in this is

600
00:23:23,990 --> 00:23:27,500
well and good when the user types in

601
00:23:25,610 --> 00:23:30,050
normal values the problem is what

602
00:23:27,500 --> 00:23:32,900
happens when I come<font color="#CCCCCC"> along and put in 4 1</font>

603
00:23:30,050 --> 00:23:35,600
equals 1 1 equals 1 is always true in a

604
00:23:32,900 --> 00:23:37,370
database I've closed the quote so I'm

605
00:23:35,600 --> 00:23:39,320
extending the database statement and

606
00:23:37,370 --> 00:23:42,320
adding an extra statement that always

607
00:23:39,320 --> 00:23:43,760
<font color="#E5E5E5">evaluates to true so it's going to</font>

608
00:23:42,320 --> 00:23:46,370
<font color="#E5E5E5">return back every single row in my</font>

609
00:23:43,760 --> 00:23:49,220
database so it's<font color="#E5E5E5"> always true so I can</font>

610
00:23:46,370 --> 00:23:52,489
now<font color="#E5E5E5"> log in this Jimmy because it's</font>

611
00:23:49,220 --> 00:23:55,490
always true so this<font color="#CCCCCC"> is actually</font><font color="#E5E5E5"> another</font>

612
00:23:52,490 --> 00:23:57,560
common one that developers do the

613
00:23:55,490 --> 00:23:59,330
amusing part about<font color="#E5E5E5"> this one is the</font>

614
00:23:57,560 --> 00:24:01,000
solution is actually<font color="#E5E5E5"> well known and it's</font>

615
00:23:59,330 --> 00:24:03,169
faster than what they're actually doing

616
00:24:01,000 --> 00:24:06,140
so the solution is to use prepared

617
00:24:03,170 --> 00:24:07,850
statements or stored procedures stored

618
00:24:06,140 --> 00:24:10,130
procedures you can<font color="#CCCCCC"> actually get SQL</font>

619
00:24:07,850 --> 00:24:12,230
injection in but it's<font color="#E5E5E5"> only in certain</font>

620
00:24:10,130 --> 00:24:15,680
cases but using prepared statements

621
00:24:12,230 --> 00:24:18,470
pretty much is a<font color="#E5E5E5"> fairly good solution to</font>

622
00:24:15,680 --> 00:24:20,480
this problem developers just don't going

623
00:24:18,470 --> 00:24:22,610
to do it so they<font color="#E5E5E5"> keep using dynamic SQL</font>

624
00:24:20,480 --> 00:24:27,440
and they keep having these same sort of

625
00:24:22,610 --> 00:24:31,040
SQL injection problems so that's why we

626
00:24:27,440 --> 00:24:34,610
<font color="#E5E5E5">came up with SQL inject me and we'll go</font>

627
00:24:31,040 --> 00:24:40,159
and look at our<font color="#E5E5E5"> sing here so we'll go</font>

628
00:24:34,610 --> 00:24:42,110
back<font color="#CCCCCC"> to our test website</font><font color="#E5E5E5"> here and the</font>

629
00:24:40,160 --> 00:24:44,330
login form i happen to know is SQL

630
00:24:42,110 --> 00:24:45,770
injectable so actually<font color="#CCCCCC"> show</font><font color="#E5E5E5"> you the</font>

631
00:24:44,330 --> 00:24:49,970
options on this because<font color="#CCCCCC"> i</font><font color="#E5E5E5"> changed it</font>

632
00:24:45,770 --> 00:24:52,670
slightly so similar to cross-site

633
00:24:49,970 --> 00:24:55,570
scripting we have a set of options for

634
00:24:52,670 --> 00:24:55,570
SQL inject me

635
00:24:55,820 --> 00:25:01,110
um I'll skip over<font color="#E5E5E5"> the most them out but</font>

636
00:24:58,950 --> 00:25:03,870
the one to notice is down here I put

637
00:25:01,110 --> 00:25:06,418
hello into my<font color="#E5E5E5"> result strings the thing</font>

638
00:25:03,870 --> 00:25:10,590
that SQL injection is possibly a correct

639
00:25:06,419 --> 00:25:12,570
result or sorry you could be vulnerable

640
00:25:10,590 --> 00:25:13,980
<font color="#E5E5E5">to SQL injection and the vulnerability</font>

641
00:25:12,570 --> 00:25:16,939
actually ends up in your website<font color="#E5E5E5"> working</font>

642
00:25:13,980 --> 00:25:18,929
correctly<font color="#E5E5E5"> so we can't actually tell</font>

643
00:25:16,940 --> 00:25:22,200
necessarily when your SQL injection

644
00:25:18,929 --> 00:25:24,750
ejectable so by default we just put in a

645
00:25:22,200 --> 00:25:26,970
couple database errors I believe the

646
00:25:24,750 --> 00:25:28,950
version that i don't<font color="#E5E5E5"> have installed</font>

647
00:25:26,970 --> 00:25:31,710
right now that's like<font color="#E5E5E5"> 6,000 database</font>

648
00:25:28,950 --> 00:25:33,900
errors or something crazy input into it

649
00:25:31,710 --> 00:25:35,160
but in this case<font color="#CCCCCC"> i</font><font color="#E5E5E5"> just put in hello the</font>

650
00:25:33,900 --> 00:25:37,169
reason<font color="#CCCCCC"> i put</font><font color="#E5E5E5"> that in there is because if</font>

651
00:25:35,160 --> 00:25:40,440
you successfully log into this alta mira

652
00:25:37,169 --> 00:25:43,230
website it will say hello user so that

653
00:25:40,440 --> 00:25:44,970
<font color="#CCCCCC">you know that you're logged in so i</font><font color="#E5E5E5"> can</font>

654
00:25:43,230 --> 00:25:46,530
<font color="#E5E5E5">come back to</font><font color="#CCCCCC"> sto inject me and you'll</font>

655
00:25:44,970 --> 00:25:48,540
see there's two forms here this is a

656
00:25:46,530 --> 00:25:50,309
search form and there's<font color="#E5E5E5"> the login form</font>

657
00:25:48,540 --> 00:25:52,350
so<font color="#E5E5E5"> i only really care about the login</font>

658
00:25:50,309 --> 00:25:54,660
form so i'm going<font color="#CCCCCC"> to pick these two</font>

659
00:25:52,350 --> 00:25:57,570
fields of the login<font color="#E5E5E5"> form i'm going to</font>

660
00:25:54,660 --> 00:26:00,210
run my top five attacks so because off

661
00:25:57,570 --> 00:26:02,730
similar to exit XSS me there's no

662
00:26:00,210 --> 00:26:04,169
heuristics in this because we we weren't

663
00:26:02,730 --> 00:26:05,790
sure you know what characters to deal

664
00:26:04,169 --> 00:26:07,530
with or if it would even work as well so

665
00:26:05,790 --> 00:26:09,418
we just<font color="#E5E5E5"> run the SQL injection attacks in</font>

666
00:26:07,530 --> 00:26:14,820
this case you<font color="#CCCCCC"> can see it's running 36</font>

667
00:26:09,419 --> 00:26:18,480
tax it will chug along similar tabs

668
00:26:14,820 --> 00:26:22,710
popping up in the background eventually

669
00:26:18,480 --> 00:26:25,679
hopefully yes there we go so we<font color="#E5E5E5"> can see</font>

670
00:26:22,710 --> 00:26:27,030
<font color="#E5E5E5">that it's vulnerable to</font><font color="#CCCCCC"> 7 attacks so you</font>

671
00:26:25,679 --> 00:26:28,770
can see there's sort of all these lists

672
00:26:27,030 --> 00:26:31,139
of attacks down here at the bottom that

673
00:26:28,770 --> 00:26:33,929
password field is vulnerable to so we

674
00:26:31,140 --> 00:26:35,070
could<font color="#E5E5E5"> pass any of these through and it</font>

675
00:26:33,929 --> 00:26:38,510
would<font color="#E5E5E5"> be we would log into the site</font>

676
00:26:35,070 --> 00:26:44,668
you'll notice one of them should be my

677
00:26:38,510 --> 00:26:46,860
chair error error yeah see so empty

678
00:26:44,669 --> 00:26:48,360
<font color="#E5E5E5">string found hello her errors</font><font color="#CCCCCC"> can found</font>

679
00:26:46,860 --> 00:26:50,309
<font color="#E5E5E5">hello so this is</font><font color="#CCCCCC"> the case were actually</font>

680
00:26:48,360 --> 00:26:51,840
logged<font color="#E5E5E5"> into the site these ones you can</font>

681
00:26:50,309 --> 00:26:53,010
see it was a database<font color="#E5E5E5"> error so we sent</font>

682
00:26:51,840 --> 00:26:55,260
something innovative it i don't

683
00:26:53,010 --> 00:26:56,610
understand that and blew up in the last

684
00:26:55,260 --> 00:26:58,530
one it was actually<font color="#E5E5E5"> the site working</font>

685
00:26:56,610 --> 00:27:00,510
correctly<font color="#E5E5E5"> so if we hadn't to</font><font color="#CCCCCC"> put</font><font color="#E5E5E5"> that</font>

686
00:26:58,530 --> 00:27:03,270
hello string<font color="#E5E5E5"> in there it wouldn't have</font>

687
00:27:00,510 --> 00:27:04,650
known that it was vulnerable so SQL

688
00:27:03,270 --> 00:27:05,530
inject me does take a bit more<font color="#E5E5E5"> thought</font>

689
00:27:04,650 --> 00:27:07,900
on your part

690
00:27:05,530 --> 00:27:10,240
if they correctly inject the website

691
00:27:07,900 --> 00:27:11,500
what's going<font color="#E5E5E5"> to happen so that's why we</font>

692
00:27:10,240 --> 00:27:19,090
<font color="#E5E5E5">sort of allow you to enter in these</font>

693
00:27:11,500 --> 00:27:24,910
extra error strings<font color="#CCCCCC"> okay I think</font><font color="#E5E5E5"> through</font>

694
00:27:19,090 --> 00:27:26,350
art<font color="#CCCCCC"> ok I'll</font><font color="#E5E5E5"> take a look at so yeah you</font>

695
00:27:24,910 --> 00:27:28,570
can see it's similar the crust Escritt

696
00:27:26,350 --> 00:27:30,760
mean that there's import/export you can

697
00:27:28,570 --> 00:27:32,740
add remove move up and down and<font color="#CCCCCC"> there's</font>

698
00:27:30,760 --> 00:27:33,910
a whole list of SQL injection string so

699
00:27:32,740 --> 00:27:36,460
if you have other strings you want to

700
00:27:33,910 --> 00:27:39,220
add<font color="#E5E5E5"> you can add your own SQL injection</font>

701
00:27:36,460 --> 00:27:40,960
strings into this thing you know as you

702
00:27:39,220 --> 00:27:43,480
need<font color="#E5E5E5"> to modify it you can export them</font>

703
00:27:40,960 --> 00:27:46,800
into an xml file and run over the xml

704
00:27:43,480 --> 00:27:46,800
file with whatever you want

705
00:27:52,559 --> 00:28:00,330
<font color="#E5E5E5">I apparently talked really fast this</font>

706
00:27:56,580 --> 00:28:02,189
time<font color="#E5E5E5"> okay so where do you get these</font>

707
00:28:00,330 --> 00:28:04,649
tools available off our website security

708
00:28:02,190 --> 00:28:06,480
compass<font color="#CCCCCC"> calm that's the same place the</font>

709
00:28:04,649 --> 00:28:08,100
extra attack tools are available so you

710
00:28:06,480 --> 00:28:09,870
can log on there and<font color="#CCCCCC"> download the extra</font>

711
00:28:08,100 --> 00:28:12,059
tax tools to import into<font color="#E5E5E5"> your attack</font>

712
00:28:09,870 --> 00:28:14,100
list for XSS me and you can grab the

713
00:28:12,059 --> 00:28:15,779
javascript file off of there as well and

714
00:28:14,100 --> 00:28:18,570
change it to point<font color="#E5E5E5"> to your website as</font>

715
00:28:15,779 --> 00:28:21,299
opposed to ours they're open source GPL

716
00:28:18,570 --> 00:28:24,029
version 3 so take them download them

717
00:28:21,299 --> 00:28:27,570
modify them play with them do what you

718
00:28:24,029 --> 00:28:29,249
want<font color="#CCCCCC"> with them and if it</font><font color="#E5E5E5"> run shredder</font>

719
00:28:27,570 --> 00:28:31,320
running firefox 3 it<font color="#E5E5E5"> will blow up</font>

720
00:28:29,249 --> 00:28:33,210
doesn't work<font color="#E5E5E5"> right now firefox trees</font>

721
00:28:31,320 --> 00:28:35,759
api's changed so much that they just

722
00:28:33,210 --> 00:28:37,889
don't function we figure we'll deal with

723
00:28:35,759 --> 00:28:40,470
that when firefox 3 is actually released

724
00:28:37,889 --> 00:28:42,209
whenever that date finally comes around

725
00:28:40,470 --> 00:28:44,970
we'll get<font color="#E5E5E5"> a new version out then but we</font>

726
00:28:42,210 --> 00:28:46,139
figure even then a lot<font color="#E5E5E5"> of developers pen</font>

727
00:28:44,970 --> 00:28:48,600
testers AQA will still be running

728
00:28:46,139 --> 00:28:50,490
firefox<font color="#E5E5E5"> too we can't see the uptake</font>

729
00:28:48,600 --> 00:28:52,230
being so enormously fast that we're

730
00:28:50,490 --> 00:28:54,600
going<font color="#E5E5E5"> to break our tool</font><font color="#CCCCCC"> in firefox</font><font color="#E5E5E5"> to</font>

731
00:28:52,230 --> 00:29:00,330
switch to firefox 3 so we're<font color="#CCCCCC"> sticking</font>

732
00:28:54,600 --> 00:29:03,119
with<font color="#E5E5E5"> two for now so what are we doing</font>

733
00:29:00,330 --> 00:29:06,418
now well XS me and SEO and<font color="#CCCCCC"> jackin</font>

734
00:29:03,119 --> 00:29:08,490
<font color="#CCCCCC">version 3 are coming that was the</font>

735
00:29:06,419 --> 00:29:11,100
version you actually saw it has the

736
00:29:08,490 --> 00:29:13,200
heuristic attacks it's faster uses less

737
00:29:11,100 --> 00:29:15,330
memory<font color="#E5E5E5"> I'm not exactly sure when they're</font>

738
00:29:13,200 --> 00:29:17,879
going<font color="#E5E5E5"> to be released anymore they keep</font>

739
00:29:15,330 --> 00:29:20,460
changing the date on me so I can't tell

740
00:29:17,879 --> 00:29:23,070
<font color="#CCCCCC">you the exact date we want to eventually</font>

741
00:29:20,460 --> 00:29:24,149
add auto encoding so the problem is

742
00:29:23,070 --> 00:29:26,039
we're only ever sending everything

743
00:29:24,149 --> 00:29:27,389
through an<font color="#CCCCCC"> ascii we want to be able to</font>

744
00:29:26,039 --> 00:29:30,749
send it through<font color="#E5E5E5"> in different character</font>

745
00:29:27,389 --> 00:29:33,508
encodings we haven't<font color="#E5E5E5"> done that yet it's</font>

746
00:29:30,749 --> 00:29:35,519
planned it's also kind of difficult as<font color="#CCCCCC"> i</font>

747
00:29:33,509 --> 00:29:37,649
mentioned<font color="#E5E5E5"> we only do</font><font color="#CCCCCC"> reflect across that</font>

748
00:29:35,519 --> 00:29:39,090
<font color="#E5E5E5">script and we want to add stored in</font>

749
00:29:37,649 --> 00:29:41,489
order to add stored we have to start

750
00:29:39,090 --> 00:29:43,529
crawling the web sites or getting some

751
00:29:41,490 --> 00:29:46,139
<font color="#E5E5E5">kind of user directed input and how we</font>

752
00:29:43,529 --> 00:29:49,710
should find these pages where it can be

753
00:29:46,139 --> 00:29:51,570
reflected on to which<font color="#E5E5E5"> is also sort of a</font>

754
00:29:49,710 --> 00:29:53,369
fairly<font color="#E5E5E5"> large and complicated thing and</font>

755
00:29:51,570 --> 00:29:56,070
the new toilet we're working on is

756
00:29:53,369 --> 00:30:00,090
called access me so what access me does

757
00:29:56,070 --> 00:30:01,879
is it runs along you start it up as

758
00:30:00,090 --> 00:30:04,580
you're browsing a website

759
00:30:01,880 --> 00:30:06,710
it runs along<font color="#E5E5E5"> with you and as you</font>

760
00:30:04,580 --> 00:30:08,689
navigate to each page it will do a

761
00:30:06,710 --> 00:30:11,540
second submission of that page but and

762
00:30:08,690 --> 00:30:14,000
remove<font color="#CCCCCC"> your cookie so it tries to check</font>

763
00:30:11,540 --> 00:30:16,220
which pages on my site can<font color="#E5E5E5"> I actually</font>

764
00:30:14,000 --> 00:30:18,980
access unattended cated when I shouldn't

765
00:30:16,220 --> 00:30:20,120
be able<font color="#E5E5E5"> to so it runs along and checks</font>

766
00:30:18,980 --> 00:30:21,680
all these accesses for you in the

767
00:30:20,120 --> 00:30:22,909
background and<font color="#E5E5E5"> when you're done I</font><font color="#CCCCCC"> think</font>

768
00:30:21,680 --> 00:30:25,010
he's setting it up so you hit a button

769
00:30:22,910 --> 00:30:26,420
and it generates report and says I can

770
00:30:25,010 --> 00:30:28,700
get<font color="#E5E5E5"> to this page in this page in this</font>

771
00:30:26,420 --> 00:30:31,160
page not authenticated you know is that

772
00:30:28,700 --> 00:30:32,600
a problem so it tries to<font color="#CCCCCC"> help you</font>

773
00:30:31,160 --> 00:30:36,620
determine in your website<font color="#CCCCCC"> if you have</font>

774
00:30:32,600 --> 00:30:39,590
<font color="#E5E5E5">these sort of access violations so</font>

775
00:30:36,620 --> 00:30:46,969
that's<font color="#CCCCCC"> actually the end and I have lots</font>

776
00:30:39,590 --> 00:30:49,310
of time<font color="#CCCCCC"> for questions yes timing attacks</font>

777
00:30:46,970 --> 00:30:50,840
yes that are we looking at any time in

778
00:30:49,310 --> 00:30:52,220
attacks based on sequel that's actually

779
00:30:50,840 --> 00:30:53,510
come<font color="#CCCCCC"> up in a couple of conferences</font>

780
00:30:52,220 --> 00:30:55,910
people keep bringing<font color="#E5E5E5"> up blind SQL</font>

781
00:30:53,510 --> 00:30:59,390
injection and using timing attacks on

782
00:30:55,910 --> 00:31:00,670
SQL we think it's a great idea we

783
00:30:59,390 --> 00:31:03,020
haven't<font color="#E5E5E5"> had time</font><font color="#CCCCCC"> to look into it</font><font color="#E5E5E5"> yet</font>

784
00:31:00,670 --> 00:31:04,690
it's certainly on our list of<font color="#E5E5E5"> things</font><font color="#CCCCCC"> we</font>

785
00:31:03,020 --> 00:31:06,980
would like<font color="#CCCCCC"> to do but we don't know when</font>

786
00:31:04,690 --> 00:31:12,440
<font color="#E5E5E5">now if you feel</font><font color="#CCCCCC"> like doing it we've</font>

787
00:31:06,980 --> 00:31:14,560
quite happy to accept the patches<font color="#CCCCCC"> anyone</font>

788
00:31:12,440 --> 00:31:14,560
<font color="#E5E5E5">else</font>

789
00:31:17,799 --> 00:31:23,110
okay I guess that's it then thank you

