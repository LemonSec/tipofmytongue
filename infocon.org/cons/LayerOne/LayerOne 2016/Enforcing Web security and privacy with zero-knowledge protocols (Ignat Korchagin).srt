1
00:00:01,850 --> 00:00:07,170
before we get<font color="#E5E5E5"> into this talk immediately</font>

2
00:00:05,069 --> 00:00:08,610
following<font color="#E5E5E5"> this is an intro to lock</font>

3
00:00:07,170 --> 00:00:11,700
picking and lock-picking village so

4
00:00:08,610 --> 00:00:13,579
check that out at three o'clock is the

5
00:00:11,700 --> 00:00:16,378
fail of things in the chill-out room so

6
00:00:13,580 --> 00:00:18,960
either<font color="#E5E5E5"> attend or submit something last</font>

7
00:00:16,379 --> 00:00:20,400
minute for that later today<font color="#E5E5E5"> all the</font>

8
00:00:18,960 --> 00:00:22,830
contest<font color="#E5E5E5"> ends so if you are playing</font>

9
00:00:20,400 --> 00:00:26,038
tamper-evident the application or

10
00:00:22,830 --> 00:00:29,639
capture the flag by all means good<font color="#CCCCCC"> luck</font>

11
00:00:26,039 --> 00:00:31,800
and get flagged closings going to be<font color="#CCCCCC"> a</font>

12
00:00:29,640 --> 00:00:34,380
<font color="#E5E5E5">five in this room so come back here if</font>

13
00:00:31,800 --> 00:00:38,100
you're<font color="#E5E5E5"> not already here at five to hear</font>

14
00:00:34,380 --> 00:00:39,270
hear more of me talking<font color="#CCCCCC"> i guess aside</font>

15
00:00:38,100 --> 00:00:41,100
from that we<font color="#E5E5E5"> still have t-shirts</font>

16
00:00:39,270 --> 00:00:42,360
available until around five so<font color="#CCCCCC"> if you</font>

17
00:00:41,100 --> 00:00:43,770
want<font color="#E5E5E5"> to layer 1 t-shirt they're</font>

18
00:00:42,360 --> 00:00:48,120
available at registration for twenty

19
00:00:43,770 --> 00:00:49,680
<font color="#CCCCCC">bucks we also have recordings of all the</font>

20
00:00:48,120 --> 00:00:51,149
talks available from the folks at media

21
00:00:49,680 --> 00:00:54,660
archives so they will give you this very

22
00:00:51,149 --> 00:00:57,300
snazzy thumb drive in fact<font color="#E5E5E5"> of all the</font>

23
00:00:54,660 --> 00:00:59,339
talks all the<font color="#E5E5E5"> talks costs forty dollars</font>

24
00:00:57,300 --> 00:01:02,459
for the whole<font color="#CCCCCC"> shebang if you want a</font>

25
00:00:59,340 --> 00:01:05,070
specific talk<font color="#CCCCCC"> it's five bucks and just</font>

26
00:01:02,460 --> 00:01:08,369
talk to<font color="#CCCCCC"> them outside without further ado</font>

27
00:01:05,069 --> 00:01:09,960
we have<font color="#CCCCCC"> Ignatz with enforcing web</font>

28
00:01:08,369 --> 00:01:12,630
security and privacy with zero knowledge

29
00:01:09,960 --> 00:01:15,408
puffs<font color="#CCCCCC"> calls to give them a big hand</font>

30
00:01:12,630 --> 00:01:19,229
[Applause]

31
00:01:15,409 --> 00:01:23,280
hello out of 10<font color="#CCCCCC"> I lost</font><font color="#E5E5E5"> my wife from</font>

32
00:01:19,229 --> 00:01:35,360
yesterday am i speaking too quiet no yes

33
00:01:23,280 --> 00:01:42,030
speak loudly<font color="#CCCCCC"> okay already on the maximum</font>

34
00:01:35,360 --> 00:01:44,100
11<font color="#E5E5E5"> okay I don't see my screen now thanks</font>

35
00:01:42,030 --> 00:01:46,200
for finding strength to come here at

36
00:01:44,100 --> 00:01:50,039
this session after lunch on Sunday I

37
00:01:46,200 --> 00:01:52,020
know it's very stressful so well but I'm

38
00:01:50,040 --> 00:01:53,340
a little<font color="#E5E5E5"> bit lucky so today and would</font>

39
00:01:52,020 --> 00:01:56,840
like<font color="#CCCCCC"> to talk about zero knowledge</font>

40
00:01:53,340 --> 00:01:59,320
protocols and how can<font color="#CCCCCC"> they improve our</font>

41
00:01:56,840 --> 00:02:03,880
security and<font color="#E5E5E5"> privacy on</font><font color="#CCCCCC"> the net</font>

42
00:01:59,320 --> 00:02:06,100
and before<font color="#E5E5E5"> I start introducing 20 do 20</font>

43
00:02:03,880 --> 00:02:08,199
knowledge<font color="#E5E5E5"> protocols there is a short</font>

44
00:02:06,100 --> 00:02:12,489
section why should we do that I'm

45
00:02:08,199 --> 00:02:16,269
actually lucky because today at ten a.m.

46
00:02:12,490 --> 00:02:18,190
session<font color="#E5E5E5"> Herbert did a very concise</font>

47
00:02:16,270 --> 00:02:20,770
presentation of why security is

48
00:02:18,190 --> 00:02:22,990
important in medical sector so I can

49
00:02:20,770 --> 00:02:29,560
assure you similar thing happens<font color="#CCCCCC"> in all</font>

50
00:02:22,990 --> 00:02:31,900
other sectors so basically you subscribe

51
00:02:29,560 --> 00:02:34,989
to many online web services every day

52
00:02:31,900 --> 00:02:37,900
and most of the time you always give you

53
00:02:34,989 --> 00:02:41,290
away your pii to the service provider

54
00:02:37,900 --> 00:02:44,080
and what happens is service provider

55
00:02:41,290 --> 00:02:46,209
always promises you to take all the

56
00:02:44,080 --> 00:02:49,840
relevant measures to store it securely

57
00:02:46,209 --> 00:02:51,580
and also service provider all promises

58
00:02:49,840 --> 00:02:54,340
to give you a secure<font color="#E5E5E5"> on by an</font>

59
00:02:51,580 --> 00:02:56,380
experienced by forcing you to create a

60
00:02:54,340 --> 00:02:58,690
password for<font color="#CCCCCC"> your online account and</font>

61
00:02:56,380 --> 00:03:00,579
many might be<font color="#E5E5E5"> in able two factor</font>

62
00:02:58,690 --> 00:03:03,910
authentication and other stuff but what

63
00:03:00,580 --> 00:03:06,160
happens in reality that user database is

64
00:03:03,910 --> 00:03:09,450
sleek and recent examples is<font color="#E5E5E5"> seek a</font>

65
00:03:06,160 --> 00:03:12,970
medical<font color="#E5E5E5"> record click or Turkish</font>

66
00:03:09,450 --> 00:03:16,268
citizenship database<font color="#E5E5E5"> League well P I</font>

67
00:03:12,970 --> 00:03:19,299
leaks as well so because most of the

68
00:03:16,269 --> 00:03:21,430
time there is no clear definition of

69
00:03:19,299 --> 00:03:24,900
what those relevant measures are ought

70
00:03:21,430 --> 00:03:27,250
to be and these end<font color="#E5E5E5"> up always almost</font>

71
00:03:24,900 --> 00:03:29,200
<font color="#E5E5E5">only like administrative or</font>

72
00:03:27,250 --> 00:03:31,959
organizational measures without any

73
00:03:29,200 --> 00:03:35,200
technical means especially encryption

74
00:03:31,959 --> 00:03:37,570
and sometimes service provider takes

75
00:03:35,200 --> 00:03:39,760
advantage of your pii and the totally

76
00:03:37,570 --> 00:03:43,750
legit example of this is<font color="#E5E5E5"> the credit</font>

77
00:03:39,760 --> 00:03:47,470
reference agencies so basically they

78
00:03:43,750 --> 00:03:49,150
need to give you<font color="#E5E5E5"> credit the signature</font>

79
00:03:47,470 --> 00:03:50,799
here<font color="#E5E5E5"> I freely to credit reference</font>

80
00:03:49,150 --> 00:03:53,680
agencies and if you are we're not on

81
00:03:50,799 --> 00:03:56,410
file for the specific reference agency

82
00:03:53,680 --> 00:04:00,280
you are on file now and it's again it's

83
00:03:56,410 --> 00:04:03,540
out of your control and finally your

84
00:04:00,280 --> 00:04:05,530
user passwords always get stolen because

85
00:04:03,540 --> 00:04:07,388
<font color="#E5E5E5">service providers sometimes you</font>

86
00:04:05,530 --> 00:04:07,930
subsidize crypto sometimes service

87
00:04:07,389 --> 00:04:09,819
provided

88
00:04:07,930 --> 00:04:13,030
not care even to use TLS for

89
00:04:09,819 --> 00:04:15,819
authentication and also phishing attacks

90
00:04:13,030 --> 00:04:18,668
like<font color="#E5E5E5"> cycle in chrome and many many other</font>

91
00:04:15,819 --> 00:04:23,289
examples<font color="#CCCCCC"> and we have seen many even</font>

92
00:04:18,668 --> 00:04:27,490
during this conference so what can<font color="#CCCCCC"> we</font><font color="#E5E5E5"> do</font>

93
00:04:23,289 --> 00:04:30,580
to improve it so apart from personal

94
00:04:27,490 --> 00:04:32,530
training and taking<font color="#E5E5E5"> taking more streak</font>

95
00:04:30,580 --> 00:04:35,770
administrative measures to contain

96
00:04:32,530 --> 00:04:38,320
private information to preserve private

97
00:04:35,770 --> 00:04:40,359
information securely we can do something

98
00:04:38,320 --> 00:04:43,590
on technical side as well so we can

99
00:04:40,360 --> 00:04:46,240
continuously improve our crypto systems

100
00:04:43,590 --> 00:04:49,239
which process<font color="#E5E5E5"> this person of their files</font>

101
00:04:46,240 --> 00:04:52,180
of information so so<font color="#E5E5E5"> far we have been</font>

102
00:04:49,240 --> 00:04:55,240
<font color="#CCCCCC">using only three basic building blocks</font>

103
00:04:52,180 --> 00:04:57,669
for all crypto systems these are digital

104
00:04:55,240 --> 00:05:01,060
signature symmetric encryption and key

105
00:04:57,669 --> 00:05:03,130
agreement so another building boat which

106
00:05:01,060 --> 00:05:05,410
is worth consideration is zero knowledge

107
00:05:03,130 --> 00:05:07,449
protocols so all the zero knowledge

108
00:05:05,410 --> 00:05:10,360
proof of zero knowledge<font color="#CCCCCC"> algorithms they</font>

109
00:05:07,449 --> 00:05:13,199
all refer to the same<font color="#CCCCCC"> thing</font><font color="#E5E5E5"> so what is</font>

110
00:05:10,360 --> 00:05:15,699
<font color="#E5E5E5">zero knowledge proof is it's a method</font>

111
00:05:13,199 --> 00:05:18,190
where one party which will be called

112
00:05:15,699 --> 00:05:21,340
<font color="#E5E5E5">approver will try to prove to another</font>

113
00:05:18,190 --> 00:05:24,340
party which we will call<font color="#E5E5E5"> the verifier</font>

114
00:05:21,340 --> 00:05:27,789
that some<font color="#E5E5E5"> pacific statement is true and</font>

115
00:05:24,340 --> 00:05:30,969
what it makes zero knowledge is that by

116
00:05:27,789 --> 00:05:33,610
doing this he will<font color="#E5E5E5"> only prove the value</font>

117
00:05:30,970 --> 00:05:35,979
fire will only know whether the

118
00:05:33,610 --> 00:05:40,180
statement is true without receiving any

119
00:05:35,979 --> 00:05:44,258
other information regarding the proof

120
00:05:40,180 --> 00:05:47,199
like a counter example of this let's say

121
00:05:44,259 --> 00:05:49,360
you are authenticating to a<font color="#CCCCCC"> website and</font>

122
00:05:47,199 --> 00:05:52,599
you use a password to<font color="#CCCCCC"> authenticate your</font>

123
00:05:49,360 --> 00:05:55,240
website so to prove to the website owner

124
00:05:52,599 --> 00:05:58,000
you or the server<font color="#E5E5E5"> you know the password</font>

125
00:05:55,240 --> 00:06:00,550
<font color="#E5E5E5">you actually need</font><font color="#CCCCCC"> to send the password</font>

126
00:05:58,000 --> 00:06:02,110
to<font color="#CCCCCC"> the server so basically by proving</font>

127
00:06:00,550 --> 00:06:04,509
you know the password they actually

128
00:06:02,110 --> 00:06:07,630
leaked the password so that<font color="#E5E5E5"> where zero</font>

129
00:06:04,509 --> 00:06:10,990
knowledge<font color="#CCCCCC"> groups come they try to avoid</font>

130
00:06:07,630 --> 00:06:13,449
this scenario and so zero knowledge

131
00:06:10,990 --> 00:06:15,520
proofs are best described by having

132
00:06:13,449 --> 00:06:18,669
three properties the first property is

133
00:06:15,520 --> 00:06:20,500
completeness so which means basically if

134
00:06:18,669 --> 00:06:22,780
the sum is

135
00:06:20,500 --> 00:06:26,200
you're trying<font color="#E5E5E5"> to prove</font><font color="#CCCCCC"> it through the</font>

136
00:06:22,780 --> 00:06:28,150
honest prove our can't convince the

137
00:06:26,200 --> 00:06:31,659
owners<font color="#CCCCCC"> verifier that the statement is</font>

138
00:06:28,150 --> 00:06:34,270
indeed true the soundness properties

139
00:06:31,660 --> 00:06:37,900
means that if the statement is false so

140
00:06:34,270 --> 00:06:42,520
<font color="#CCCCCC">no cheating Krueger can convince the</font>

141
00:06:37,900 --> 00:06:45,250
honest verifier that it's true and these

142
00:06:42,520 --> 00:06:47,799
<font color="#CCCCCC">first two properties</font><font color="#E5E5E5"> they are they</font>

143
00:06:45,250 --> 00:06:50,770
<font color="#CCCCCC">formed the broader concept of proof</font>

144
00:06:47,800 --> 00:06:54,100
which will are called interactive proof

145
00:06:50,770 --> 00:06:56,680
systems and actually we use those cool

146
00:06:54,100 --> 00:06:59,410
system every day consider a typical

147
00:06:56,680 --> 00:07:01,240
authentication scheme where you are

148
00:06:59,410 --> 00:07:03,640
Santa gate to the server and<font color="#E5E5E5"> server</font>

149
00:07:01,240 --> 00:07:05,500
sends you a<font color="#E5E5E5"> challenge which is basically</font>

150
00:07:03,640 --> 00:07:07,810
a random value and you<font color="#CCCCCC"> sign this</font>

151
00:07:05,500 --> 00:07:09,460
challenge with your private key and the

152
00:07:07,810 --> 00:07:11,320
server verify this challenge with the

153
00:07:09,460 --> 00:07:13,299
public key so basically this is a

154
00:07:11,320 --> 00:07:15,640
typical example of interactive proof

155
00:07:13,300 --> 00:07:18,120
system where you prove the possession<font color="#E5E5E5"> of</font>

156
00:07:15,640 --> 00:07:21,070
the private key to the server but what

157
00:07:18,120 --> 00:07:22,870
makes zero knowledge protocols different

158
00:07:21,070 --> 00:07:26,500
is the third property which<font color="#CCCCCC"> is zero</font>

159
00:07:22,870 --> 00:07:29,140
<font color="#E5E5E5">knowledge which is rather complicated to</font>

160
00:07:26,500 --> 00:07:32,590
understand I will try<font color="#CCCCCC"> to explain it like</font>

161
00:07:29,140 --> 00:07:35,169
this<font color="#E5E5E5"> so zero knowledge protocols ensure</font>

162
00:07:32,590 --> 00:07:37,539
that the proof<font color="#E5E5E5"> you are giving to the</font>

163
00:07:35,169 --> 00:07:39,490
verifier if you are as approver the

164
00:07:37,540 --> 00:07:43,300
proof you<font color="#CCCCCC"> are giving to the developer</font><font color="#E5E5E5"> is</font>

165
00:07:39,490 --> 00:07:45,610
meaningful only to verify himself and is

166
00:07:43,300 --> 00:07:48,760
only valid at the time of the proof

167
00:07:45,610 --> 00:07:50,860
being given so<font color="#E5E5E5"> know if the verifier is</font>

168
00:07:48,760 --> 00:07:53,650
cheating on you so he wants to<font color="#CCCCCC"> just</font>

169
00:07:50,860 --> 00:07:58,450
transfer<font color="#E5E5E5"> this proof to some cells party</font>

170
00:07:53,650 --> 00:08:01,830
he is not able<font color="#E5E5E5"> to do that so it's rather</font>

171
00:07:58,450 --> 00:08:04,570
complicated so let's<font color="#E5E5E5"> just check out a</font>

172
00:08:01,830 --> 00:08:07,030
classical textbook example of zero

173
00:08:04,570 --> 00:08:09,940
knowledge you can<font color="#E5E5E5"> find this example in</font>

174
00:08:07,030 --> 00:08:13,270
<font color="#E5E5E5">Wikipedia imagine you have this cave</font>

175
00:08:09,940 --> 00:08:15,610
with a weird form and the cave has a

176
00:08:13,270 --> 00:08:19,599
magic door inside and<font color="#E5E5E5"> this door can be</font>

177
00:08:15,610 --> 00:08:21,910
opened by saying the magic world and we

178
00:08:19,600 --> 00:08:24,220
have a proven verifier the<font color="#E5E5E5"> poor girl</font>

179
00:08:21,910 --> 00:08:26,830
wants to prove to<font color="#CCCCCC"> the verifier she</font>

180
00:08:24,220 --> 00:08:28,870
indeed know this magic world in a legal

181
00:08:26,830 --> 00:08:30,909
knowledge way so how can they do that in

182
00:08:28,870 --> 00:08:35,110
step<font color="#CCCCCC"> 1</font>

183
00:08:30,910 --> 00:08:37,599
and the pool will choose randomly a path

184
00:08:35,110 --> 00:08:41,590
and enter the case<font color="#CCCCCC"> verifier will not</font>

185
00:08:37,599 --> 00:08:44,530
know which path did the blue choose so

186
00:08:41,590 --> 00:08:47,890
for<font color="#E5E5E5"> example</font><font color="#CCCCCC"> here the pool it chooses</font>

187
00:08:44,530 --> 00:08:50,500
past be and enter the case then in

188
00:08:47,890 --> 00:08:53,740
second step the<font color="#CCCCCC"> value fire enters the</font>

189
00:08:50,500 --> 00:08:57,130
cave and randomly chooses any path as

190
00:08:53,740 --> 00:09:00,580
you like so let's say in this example

191
00:08:57,130 --> 00:09:04,180
<font color="#E5E5E5">the verifier to the spot a and so in</font>

192
00:09:00,580 --> 00:09:06,880
third step the pool has to reliably

193
00:09:04,180 --> 00:09:09,459
appeal appear on the path which verifier

194
00:09:06,880 --> 00:09:12,070
have chosen before so in this specific

195
00:09:09,460 --> 00:09:14,230
case the pool will use his knowledge of

196
00:09:12,070 --> 00:09:16,750
the magic world to open the door and

197
00:09:14,230 --> 00:09:20,260
appear on past a where he entered the

198
00:09:16,750 --> 00:09:22,750
past<font color="#CCCCCC"> being so this is how completeness</font>

199
00:09:20,260 --> 00:09:26,680
property works now so the prover has

200
00:09:22,750 --> 00:09:30,370
proved<font color="#E5E5E5"> to the verifier that a sheen did</font>

201
00:09:26,680 --> 00:09:32,859
<font color="#E5E5E5">know the magic world but there is a</font>

202
00:09:30,370 --> 00:09:36,490
problem<font color="#E5E5E5"> in this protocol that imagines</font>

203
00:09:32,860 --> 00:09:40,210
that in first step the pool<font color="#CCCCCC"> irwin's does</font>

204
00:09:36,490 --> 00:09:42,940
not indeed know the magic word and she

205
00:09:40,210 --> 00:09:47,290
chilled this part a and the verifier

206
00:09:42,940 --> 00:09:49,210
also chooses pass a so in this case the

207
00:09:47,290 --> 00:09:51,610
crew will reliably appeal from past a

208
00:09:49,210 --> 00:09:54,120
but without even<font color="#CCCCCC"> using the magic world</font>

209
00:09:51,610 --> 00:09:58,090
without even knowing the magic word so

210
00:09:54,120 --> 00:09:59,920
this time<font color="#CCCCCC"> the pool cheated so this is a</font>

211
00:09:58,090 --> 00:10:03,040
problem<font color="#CCCCCC"> for this protocol there is a</font>

212
00:09:59,920 --> 00:10:05,199
<font color="#E5E5E5">small there is a cheap cheap probability</font>

213
00:10:03,040 --> 00:10:08,650
and in this case the<font color="#E5E5E5"> cheat probability</font>

214
00:10:05,200 --> 00:10:10,780
is 50% so who needs to use such protocol

215
00:10:08,650 --> 00:10:13,990
where you can cheat the verifier with

216
00:10:10,780 --> 00:10:17,680
fifty percent success right so the way

217
00:10:13,990 --> 00:10:19,510
how it usually being sold is that you

218
00:10:17,680 --> 00:10:21,729
can repeat this protocol several<font color="#CCCCCC"> times</font>

219
00:10:19,510 --> 00:10:24,189
and assuming<font color="#CCCCCC"> that each round of the</font>

220
00:10:21,730 --> 00:10:29,230
protocol is independent<font color="#CCCCCC"> and the verifier</font>

221
00:10:24,190 --> 00:10:31,090
can work can do the book<font color="#CCCCCC"> can ask the</font>

222
00:10:29,230 --> 00:10:33,550
<font color="#E5E5E5">pool to do the protocol several times</font>

223
00:10:31,090 --> 00:10:35,800
until he indeed is convinced that built

224
00:10:33,550 --> 00:10:37,689
is that<font color="#E5E5E5"> poor is not cheating yourself so</font>

225
00:10:35,800 --> 00:10:39,640
although there is a small cheap

226
00:10:37,690 --> 00:10:42,250
probabilities the value fire can make it

227
00:10:39,640 --> 00:10:44,170
as small as<font color="#CCCCCC"> possible so in this example</font>

228
00:10:42,250 --> 00:10:48,839
if we repeat the protocol

229
00:10:44,170 --> 00:10:52,930
128 times we<font color="#E5E5E5"> can make it secure the air</font>

230
00:10:48,839 --> 00:10:55,510
so this<font color="#E5E5E5"> is all good</font><font color="#CCCCCC"> but this is a very</font>

231
00:10:52,930 --> 00:10:57,550
simple<font color="#E5E5E5"> textbook example and more</font>

232
00:10:55,510 --> 00:11:00,819
real-world use cases require more

233
00:10:57,550 --> 00:11:03,219
complex protocols and this notion of

234
00:11:00,820 --> 00:11:07,670
repeating the protocol several times is

235
00:11:03,220 --> 00:11:09,000
not that<font color="#CCCCCC"> good so there is a very good</font>

236
00:11:07,670 --> 00:11:12,459
[Music]

237
00:11:09,000 --> 00:11:14,790
legal knowledge protocol which is called

238
00:11:12,459 --> 00:11:17,500
socialist millionaire so it basically

239
00:11:14,790 --> 00:11:19,750
describes a problem where two

240
00:11:17,500 --> 00:11:23,709
millionaires want to check whether their

241
00:11:19,750 --> 00:11:25,690
wealth is equal without disclosing a the

242
00:11:23,709 --> 00:11:30,430
exact amount of money each one of them

243
00:11:25,690 --> 00:11:33,670
have so let's see how<font color="#CCCCCC"> it worked in</font>

244
00:11:30,430 --> 00:11:38,410
briefly assuming<font color="#CCCCCC"> we have two</font>

245
00:11:33,670 --> 00:11:40,449
millionaires and let's call their wealth

246
00:11:38,410 --> 00:11:43,410
a secret values of each of them have

247
00:11:40,449 --> 00:11:46,750
some kind of a secret value x and y and

248
00:11:43,410 --> 00:11:51,279
they both<font color="#CCCCCC"> want to check whether x equals</font>

249
00:11:46,750 --> 00:11:54,399
y so what they do is they do several

250
00:11:51,279 --> 00:11:57,760
<font color="#CCCCCC">relatives</font><font color="#E5E5E5"> of communication it basically</font>

251
00:11:54,399 --> 00:12:00,329
starts as a plaintiff akkallan so they

252
00:11:57,760 --> 00:12:03,490
do<font color="#E5E5E5"> a simple disagreement key exchange</font>

253
00:12:00,329 --> 00:12:06,219
then do they do some kind<font color="#E5E5E5"> of a signature</font>

254
00:12:03,490 --> 00:12:09,279
exchange and finally they do another

255
00:12:06,220 --> 00:12:12,250
change of intermediate values and the

256
00:12:09,279 --> 00:12:15,279
final stage of the<font color="#E5E5E5"> protocol they checked</font>

257
00:12:12,250 --> 00:12:19,209
this equation and if the equation holds

258
00:12:15,279 --> 00:12:23,320
the cryptography the<font color="#E5E5E5"> map which you is</font>

259
00:12:19,209 --> 00:12:30,189
<font color="#E5E5E5">used in the protocol a reliably states</font>

260
00:12:23,320 --> 00:12:33,940
that<font color="#E5E5E5"> X is if x is equal</font><font color="#CCCCCC"> to Y so I would</font>

261
00:12:30,190 --> 00:12:36,370
if you want to follow the mask that the

262
00:12:33,940 --> 00:12:38,470
low level math here so if<font color="#E5E5E5"> you are unwind</font>

263
00:12:36,370 --> 00:12:40,720
the last statement you will see

264
00:12:38,470 --> 00:12:44,560
something like<font color="#E5E5E5"> this and the key point</font>

265
00:12:40,720 --> 00:12:47,589
here is this term that if<font color="#E5E5E5"> X is equals</font>

266
00:12:44,560 --> 00:12:53,170
equals y so<font color="#CCCCCC"> this second term will be 0</font>

267
00:12:47,589 --> 00:12:55,450
and the equation<font color="#CCCCCC"> go home so basically</font>

268
00:12:53,170 --> 00:12:58,780
why socialist<font color="#CCCCCC"> millionaire</font><font color="#E5E5E5"> is</font>

269
00:12:55,450 --> 00:13:00,610
a better protocol because it can<font color="#CCCCCC"> be</font>

270
00:12:58,780 --> 00:13:02,350
easily used to check what the two

271
00:13:00,610 --> 00:13:05,080
parties but that's the same secret so

272
00:13:02,350 --> 00:13:07,690
<font color="#E5E5E5">you can verify password in the zero</font>

273
00:13:05,080 --> 00:13:10,450
knowledge way without actually conveying

274
00:13:07,690 --> 00:13:13,450
any password information to us disappear

275
00:13:10,450 --> 00:13:15,700
and unlike other zero knowledge protocol

276
00:13:13,450 --> 00:13:18,460
this protocol is symmetric so here both

277
00:13:15,700 --> 00:13:21,910
parties are pores and verifiers at the

278
00:13:18,460 --> 00:13:24,580
same time and also<font color="#E5E5E5"> it has some useful</font>

279
00:13:21,910 --> 00:13:28,270
properties that a<font color="#CCCCCC"> passive eavesdropper</font>

280
00:13:24,580 --> 00:13:32,380
on the communication channel cannot know

281
00:13:28,270 --> 00:13:34,569
<font color="#CCCCCC">the protocol outcome mi-tm also cannot</font>

282
00:13:32,380 --> 00:13:36,670
do<font color="#E5E5E5"> better than the passage is exactly</font>

283
00:13:34,570 --> 00:13:38,530
except mounting a denial of service

284
00:13:36,670 --> 00:13:41,020
attack by disrupting the communication

285
00:13:38,530 --> 00:13:45,400
channel so social similar narrating my

286
00:13:41,020 --> 00:13:47,980
TM protected inherently<font color="#E5E5E5"> and this is</font>

287
00:13:45,400 --> 00:13:50,470
important feature that if even if one of

288
00:13:47,980 --> 00:13:52,510
the parties is dishonest he learns

289
00:13:50,470 --> 00:13:55,150
nothing except the protocol outcome so

290
00:13:52,510 --> 00:13:59,530
he learns nothing about the value<font color="#E5E5E5"> of</font><font color="#CCCCCC"> the</font>

291
00:13:55,150 --> 00:14:01,480
password of<font color="#E5E5E5"> the</font><font color="#CCCCCC"> other peer</font><font color="#E5E5E5"> and why this</font>

292
00:13:59,530 --> 00:14:03,100
is profit this protocol is more useful

293
00:14:01,480 --> 00:14:05,560
in the real case you don't have<font color="#E5E5E5"> to</font>

294
00:14:03,100 --> 00:14:07,540
repeat it several times to prevent

295
00:14:05,560 --> 00:14:09,520
cheating or the other party so<font color="#CCCCCC"> you have</font>

296
00:14:07,540 --> 00:14:13,540
to run<font color="#CCCCCC"> the protocol only one and you get</font>

297
00:14:09,520 --> 00:14:16,000
reliable result and also this possible

298
00:14:13,540 --> 00:14:18,670
is adopted already in<font color="#CCCCCC"> open-source</font>

299
00:14:16,000 --> 00:14:20,770
<font color="#CCCCCC">software so it's part of everyone's</font>

300
00:14:18,670 --> 00:14:23,860
favorite of the record messengers and

301
00:14:20,770 --> 00:14:26,470
its<font color="#CCCCCC"> users to verify keys and protect</font>

302
00:14:23,860 --> 00:14:30,010
your messages from man-in-the-middle

303
00:14:26,470 --> 00:14:32,310
attack<font color="#E5E5E5"> when you</font><font color="#CCCCCC"> send and</font><font color="#E5E5E5"> 50 texts so i</font>

304
00:14:30,010 --> 00:14:35,350
would like to repeat that the key point

305
00:14:32,310 --> 00:14:37,800
what makes zero knowledge proof of

306
00:14:35,350 --> 00:14:40,360
protocols are different from other

307
00:14:37,800 --> 00:14:42,689
security schemes that most<font color="#E5E5E5"> security</font>

308
00:14:40,360 --> 00:14:46,570
schemes are trying to protect

309
00:14:42,690 --> 00:14:48,280
communication from<font color="#CCCCCC"> mitm attack but zero</font>

310
00:14:46,570 --> 00:14:51,160
knowledge<font color="#E5E5E5"> protocol go further than that</font>

311
00:14:48,280 --> 00:14:54,010
they protect from<font color="#CCCCCC"> MITM as well as they</font>

312
00:14:51,160 --> 00:14:57,400
allow one of the communicating peers to

313
00:14:54,010 --> 00:14:59,380
be to behave badly to be malicious so

314
00:14:57,400 --> 00:15:05,170
they provide<font color="#CCCCCC"> highest security guarantees</font>

315
00:14:59,380 --> 00:15:07,030
<font color="#E5E5E5">other 15 so as I was saying a socialist</font>

316
00:15:05,170 --> 00:15:09,189
millionaire<font color="#E5E5E5"> is adopted in October</font>

317
00:15:07,030 --> 00:15:11,439
messaging and when<font color="#E5E5E5"> I started looking at</font>

318
00:15:09,190 --> 00:15:15,880
it<font color="#E5E5E5"> I would like</font><font color="#CCCCCC"> to</font><font color="#E5E5E5"> adopt it in many</font>

319
00:15:11,440 --> 00:15:19,000
other a useful system out there but

320
00:15:15,880 --> 00:15:24,250
there<font color="#E5E5E5"> was one problem the protocol</font>

321
00:15:19,000 --> 00:15:27,390
implemented in OTR uses 1536 bit<font color="#CCCCCC"> with</font>

322
00:15:24,250 --> 00:15:30,760
prime group calculations but if you

323
00:15:27,390 --> 00:15:34,900
remember last<font color="#E5E5E5"> year we have log jam which</font>

324
00:15:30,760 --> 00:15:36,939
the<font color="#E5E5E5"> access of the log jam stage that 520</font>

325
00:15:34,900 --> 00:15:39,069
bill<font color="#E5E5E5"> prime fields already broken they</font>

326
00:15:36,940 --> 00:15:43,570
have shown that you can use even<font color="#E5E5E5"> their</font>

327
00:15:39,070 --> 00:15:47,130
<font color="#E5E5E5">special little bored to crack a 520 bit</font>

328
00:15:43,570 --> 00:15:52,120
cranfield and they also suspect that

329
00:15:47,130 --> 00:15:55,510
1024 bit fields are probably broken by a

330
00:15:52,120 --> 00:15:58,870
state level at groceries so and if come

331
00:15:55,510 --> 00:16:04,060
to<font color="#E5E5E5"> think of it 1536 bid is not that far</font>

332
00:15:58,870 --> 00:16:06,760
<font color="#CCCCCC">from 100 1024 so even though it might be</font>

333
00:16:04,060 --> 00:16:11,530
secure now it will be surely be broken

334
00:16:06,760 --> 00:16:13,990
in a couple<font color="#E5E5E5"> of years so and what we did</font>

335
00:16:11,530 --> 00:16:16,480
<font color="#E5E5E5">is to improve the</font><font color="#CCCCCC"> socialist million we</font>

336
00:16:13,990 --> 00:16:18,580
just<font color="#E5E5E5"> moved it to elliptic curves and you</font>

337
00:16:16,480 --> 00:16:20,530
move a protocol to ellipticals what you

338
00:16:18,580 --> 00:16:24,400
need to do<font color="#CCCCCC"> is you need to choose</font><font color="#E5E5E5"> a good</font>

339
00:16:20,530 --> 00:16:27,339
curve to use so nice curves are also

340
00:16:24,400 --> 00:16:29,620
questionable as the<font color="#CCCCCC"> security is</font>

341
00:16:27,340 --> 00:16:32,050
questionable also there is a risk of

342
00:16:29,620 --> 00:16:35,020
<font color="#E5E5E5">some patent issues by using next curve</font>

343
00:16:32,050 --> 00:16:37,810
so the obvious example here was to use

344
00:16:35,020 --> 00:16:41,079
ed 255 19 which is<font color="#CCCCCC"> a state-of-the-art</font>

345
00:16:37,810 --> 00:16:46,119
<font color="#CCCCCC">code by danielle bernstein and it has</font>

346
00:16:41,080 --> 00:16:48,340
some good properties so protocol

347
00:16:46,120 --> 00:16:50,500
implemented<font color="#E5E5E5"> new cisco has more security</font>

348
00:16:48,340 --> 00:16:53,680
features is protected from<font color="#E5E5E5"> timing</font>

349
00:16:50,500 --> 00:16:55,630
attacks it's faster since we moved all

350
00:16:53,680 --> 00:16:59,800
<font color="#E5E5E5">the calculations to elliptical of the</font>

351
00:16:55,630 --> 00:17:01,780
main it<font color="#CCCCCC"> is as much smaller or between</font>

352
00:16:59,800 --> 00:17:04,750
because the elliptical values of smaller

353
00:17:01,780 --> 00:17:07,599
than<font color="#E5E5E5"> flying fields calculations we also</font>

354
00:17:04,750 --> 00:17:10,579
added many high-level languages so if

355
00:17:07,599 --> 00:17:13,969
you would like<font color="#CCCCCC"> to use the social media</font>

356
00:17:10,579 --> 00:17:18,799
applications have a variety<font color="#CCCCCC"> of choice</font><font color="#E5E5E5"> of</font>

357
00:17:13,970 --> 00:17:21,319
bison gold<font color="#CCCCCC"> java will be whatever you</font><font color="#E5E5E5"> can</font>

358
00:17:18,799 --> 00:17:23,029
think of<font color="#E5E5E5"> if you see that your favorite</font>

359
00:17:21,319 --> 00:17:26,148
language is not implemented<font color="#E5E5E5"> drop me a</font>

360
00:17:23,029 --> 00:17:29,690
note will try to add it and you<font color="#CCCCCC"> say it</font>

361
00:17:26,148 --> 00:17:31,370
<font color="#E5E5E5">also a simple API so we implemented the</font>

362
00:17:29,690 --> 00:17:33,799
Socialist Movement for the color spots

363
00:17:31,370 --> 00:17:36,408
of open source library called tennis

364
00:17:33,799 --> 00:17:42,889
some github you can check it flow on it

365
00:17:36,409 --> 00:17:45,399
and use it or improve as you like so

366
00:17:42,889 --> 00:17:48,049
what<font color="#CCCCCC"> are the possible use cases of</font>

367
00:17:45,399 --> 00:17:51,080
socials millinery protocol application

368
00:17:48,049 --> 00:18:01,158
so anyone could tell me what's wrong

369
00:17:51,080 --> 00:18:03,559
with the slide yes so<font color="#CCCCCC"> no</font><font color="#E5E5E5"> HTTPS</font>

370
00:18:01,159 --> 00:18:05,929
authentication over plain HTTP so

371
00:18:03,559 --> 00:18:08,149
security where users nowaday if they see

372
00:18:05,929 --> 00:18:12,590
such logging they will never enter their

373
00:18:08,149 --> 00:18:15,049
password back but if we<font color="#CCCCCC"> implement and we</font>

374
00:18:12,590 --> 00:18:16,970
<font color="#E5E5E5">actually implemented a prototype HTTP</font>

375
00:18:15,049 --> 00:18:21,500
authentication with socialist millinery

376
00:18:16,970 --> 00:18:23,570
totally legitimate so since socialist

377
00:18:21,500 --> 00:18:27,440
millionaire by itself is protected<font color="#CCCCCC"> from</font>

378
00:18:23,570 --> 00:18:29,539
<font color="#CCCCCC">mitm you may use plain HTTP to</font>

379
00:18:27,440 --> 00:18:33,350
authenticate yourself to a website with

380
00:18:29,539 --> 00:18:35,690
no risk and even though also if this

381
00:18:33,350 --> 00:18:38,360
page will be spooked by some kind of a

382
00:18:35,690 --> 00:18:40,190
search party malicious or party they

383
00:18:38,360 --> 00:18:41,809
will<font color="#CCCCCC"> still get nothing because</font><font color="#E5E5E5"> of the</font>

384
00:18:40,190 --> 00:18:44,990
zero knowledge currency of socialist

385
00:18:41,809 --> 00:18:47,269
moving out another personal use case

386
00:18:44,990 --> 00:18:49,970
actually taken from my personal

387
00:18:47,269 --> 00:18:52,789
experience let's say you're playing guy

388
00:18:49,970 --> 00:18:55,669
and you want a credit<font color="#E5E5E5"> card you go tab</font>

389
00:18:52,789 --> 00:18:58,158
and you new to the country so<font color="#E5E5E5"> apparently</font>

390
00:18:55,669 --> 00:19:00,799
credit reference agency at this specific

391
00:18:58,159 --> 00:19:02,630
country does not<font color="#E5E5E5"> have you on record so</font>

392
00:19:00,799 --> 00:19:06,080
you apply<font color="#CCCCCC"> for a credit card you submit</font>

393
00:19:02,630 --> 00:19:08,769
your pii to bank bank asks whether the

394
00:19:06,080 --> 00:19:13,039
credit reference agency has been ever

395
00:19:08,769 --> 00:19:14,870
credit file on you so<font color="#CCCCCC"> bank submits pi/2</font>

396
00:19:13,039 --> 00:19:16,760
credit reference agencies the credit

397
00:19:14,870 --> 00:19:19,010
reference agency replies oh no we don't

398
00:19:16,760 --> 00:19:21,770
have this kind of file then<font color="#CCCCCC"> the bank</font>

399
00:19:19,010 --> 00:19:22,809
gets the decision to deny the credit

400
00:19:21,770 --> 00:19:24,759
cards

401
00:19:22,809 --> 00:19:27,249
and actually<font color="#E5E5E5"> you have lost you didn't</font>

402
00:19:24,759 --> 00:19:29,110
receive the<font color="#E5E5E5"> credit card and your pii was</font>

403
00:19:27,249 --> 00:19:32,769
leaked the credit reference<font color="#E5E5E5"> agency so</font>

404
00:19:29,110 --> 00:19:35,740
it's<font color="#E5E5E5"> not fair so how can we</font><font color="#CCCCCC"> improve that</font>

405
00:19:32,769 --> 00:19:38,019
when I communicate this problem to other

406
00:19:35,740 --> 00:19:40,809
developers I say<font color="#CCCCCC"> oh we know what to do</font>

407
00:19:38,019 --> 00:19:43,090
with we will do a system where we<font color="#E5E5E5"> don't</font>

408
00:19:40,809 --> 00:19:46,870
send the actual pie we will send<font color="#E5E5E5"> the</font>

409
00:19:43,090 --> 00:19:49,120
hash of the<font color="#E5E5E5"> p.i so even if the credit</font>

410
00:19:46,870 --> 00:19:51,549
reference agency does not have you on

411
00:19:49,120 --> 00:19:54,580
trial it cannot compute the hash so

412
00:19:51,549 --> 00:19:59,440
basically<font color="#CCCCCC"> it will return nothing and by</font>

413
00:19:54,580 --> 00:20:01,840
receiving the hash of your pii is they

414
00:19:59,440 --> 00:20:04,779
cannot unroll the hash and get your pie

415
00:20:01,840 --> 00:20:07,869
because hash function considered to be

416
00:20:04,779 --> 00:20:10,509
secure but and they make this<font color="#E5E5E5"> decision</font>

417
00:20:07,869 --> 00:20:14,259
because they it's how passwords are

418
00:20:10,509 --> 00:20:16,960
compared in operating system when<font color="#CCCCCC"> you</font>

419
00:20:14,259 --> 00:20:19,710
log into the operating system is how

420
00:20:16,960 --> 00:20:24,369
password the compiler currently on HTTP

421
00:20:19,710 --> 00:20:27,879
but but passwords in p.i is different

422
00:20:24,369 --> 00:20:31,480
because TI<font color="#E5E5E5"> is essentially as a unique</font>

423
00:20:27,879 --> 00:20:33,759
identifier<font color="#E5E5E5"> which identifies us as an</font>

424
00:20:31,480 --> 00:20:37,389
individual so<font color="#E5E5E5"> basically if you apply to</font>

425
00:20:33,759 --> 00:20:39,249
time from different banks still the

426
00:20:37,389 --> 00:20:41,408
credit reference agency will have this

427
00:20:39,249 --> 00:20:43,840
unique identifier because everybody

428
00:20:41,409 --> 00:20:46,149
forgets that hash of the<font color="#E5E5E5"> unique</font>

429
00:20:43,840 --> 00:20:48,850
identifier is another unique identifier

430
00:20:46,149 --> 00:20:52,629
so basically how much time you can catch

431
00:20:48,850 --> 00:20:55,509
the TI you will still receive API so it

432
00:20:52,629 --> 00:21:00,759
doesn't<font color="#CCCCCC"> work this way so an obvious</font>

433
00:20:55,509 --> 00:21:04,149
choice is<font color="#CCCCCC"> to try to</font><font color="#E5E5E5"> use social ceiling</font>

434
00:21:00,759 --> 00:21:08,320
out here so if we<font color="#E5E5E5"> replace the laptop</font>

435
00:21:04,149 --> 00:21:10,178
with socialist millionaire the credit

436
00:21:08,320 --> 00:21:12,700
reference agency is getting nothing if

437
00:21:10,179 --> 00:21:17,860
you did not have<font color="#E5E5E5"> you previously on file</font>

438
00:21:12,700 --> 00:21:20,519
so that might solve<font color="#E5E5E5"> omission okay and</font>

439
00:21:17,860 --> 00:21:23,399
the<font color="#E5E5E5"> last section when we all did this we</font>

440
00:21:20,519 --> 00:21:25,289
submitted<font color="#E5E5E5"> a paper online</font>

441
00:21:23,399 --> 00:21:28,518
we started started to receive feedback

442
00:21:25,289 --> 00:21:31,950
<font color="#E5E5E5">from Krypto community and most of the</font>

443
00:21:28,519 --> 00:21:34,950
half<font color="#E5E5E5"> of the feedback was like negative</font>

444
00:21:31,950 --> 00:21:37,619
because they say the protocol is too

445
00:21:34,950 --> 00:21:41,849
complex why do we need it well we have

446
00:21:37,619 --> 00:21:44,189
paid<font color="#CCCCCC"> bike now is another very popular</font>

447
00:21:41,849 --> 00:21:47,908
protocol which is being adopted on the

448
00:21:44,190 --> 00:21:50,700
<font color="#E5E5E5">internet it's fake</font><font color="#CCCCCC"> States or password</font>

449
00:21:47,909 --> 00:21:53,759
authentication key exchange equal

450
00:21:50,700 --> 00:22:00,089
exchange agreements such as<font color="#E5E5E5"> matter so</font>

451
00:21:53,759 --> 00:22:01,679
it's it has why it's<font color="#E5E5E5"> better than it why</font>

452
00:22:00,089 --> 00:22:03,779
it seems<font color="#CCCCCC"> it's better than socialist</font>

453
00:22:01,679 --> 00:22:06,029
millinery because<font color="#E5E5E5"> pecos requires only</font>

454
00:22:03,779 --> 00:22:08,580
<font color="#E5E5E5">one vowel shift when we remember that</font>

455
00:22:06,029 --> 00:22:10,529
socialist millinery growth requires me

456
00:22:08,580 --> 00:22:14,728
round<font color="#CCCCCC"> trips to securely compared with</font>

457
00:22:10,529 --> 00:22:17,070
password it has it's simpler so requires

458
00:22:14,729 --> 00:22:19,009
much less a symmetric filter graphical

459
00:22:17,070 --> 00:22:23,820
computations which are rather<font color="#E5E5E5"> expensive</font>

460
00:22:19,009 --> 00:22:26,039
in terms of protocols CPU cycles it's

461
00:22:23,820 --> 00:22:28,529
easier to implement and it also

462
00:22:26,039 --> 00:22:30,629
negotiates a secret key as part of the

463
00:22:28,529 --> 00:22:36,529
protocol which you can later use for

464
00:22:30,629 --> 00:22:39,539
encryption between the two peers so I

465
00:22:36,529 --> 00:22:42,210
did some research<font color="#E5E5E5"> and fake and whether</font>

466
00:22:39,539 --> 00:22:45,299
it is<font color="#E5E5E5"> really applicable so here I will</font>

467
00:22:42,210 --> 00:22:47,789
present some results of this research so

468
00:22:45,299 --> 00:22:50,039
as a reference I took there are

469
00:22:47,789 --> 00:22:53,729
<font color="#E5E5E5">different variations of fake protocol I</font>

470
00:22:50,039 --> 00:22:56,039
took the most widespread one which is

471
00:22:53,729 --> 00:22:59,639
<font color="#E5E5E5">called</font><font color="#CCCCCC"> fake to which</font><font color="#E5E5E5"> is currently being</font>

472
00:22:56,039 --> 00:23:03,419
drafted by<font color="#CCCCCC"> four RFC and is</font><font color="#E5E5E5"> already</font>

473
00:22:59,639 --> 00:23:06,899
adopted by google in boring ssl so and

474
00:23:03,419 --> 00:23:11,070
here<font color="#CCCCCC"> are the results so oh sorry</font><font color="#E5E5E5"> and</font>

475
00:23:06,899 --> 00:23:14,309
this is how basically<font color="#CCCCCC"> spike to work so</font>

476
00:23:11,070 --> 00:23:16,979
it's a slightly<font color="#E5E5E5"> modified version of this</font>

477
00:23:14,309 --> 00:23:20,489
common protocol where you just mix as

478
00:23:16,979 --> 00:23:23,219
the secret information<font color="#CCCCCC"> to the negotiated</font>

479
00:23:20,489 --> 00:23:25,440
key so assuming you have two peers which

480
00:23:23,219 --> 00:23:29,410
would like to negotiate a shared secret

481
00:23:25,440 --> 00:23:32,920
and shared key and they both know

482
00:23:29,410 --> 00:23:34,780
<font color="#E5E5E5">secret value w they can execute this</font>

483
00:23:32,920 --> 00:23:37,960
protocol with one round<font color="#E5E5E5"> trip and get a</font>

484
00:23:34,780 --> 00:23:42,850
shared key and to communicate securely

485
00:23:37,960 --> 00:23:47,520
which is kind of<font color="#E5E5E5"> a saying as a socialist</font>

486
00:23:42,850 --> 00:23:50,439
<font color="#CCCCCC">livin Airbus but not quite so after</font>

487
00:23:47,520 --> 00:23:52,660
doing some research one of the issues

488
00:23:50,440 --> 00:23:54,790
were discussed which was described by

489
00:23:52,660 --> 00:23:58,480
with the community<font color="#E5E5E5"> that fake is much</font>

490
00:23:54,790 --> 00:24:01,120
much faster but because it's simpler it

491
00:23:58,480 --> 00:24:05,140
requires on the one round trip but in

492
00:24:01,120 --> 00:24:08,770
fact if you take a more detailed look at

493
00:24:05,140 --> 00:24:13,300
the protocol the outcome of the<font color="#E5E5E5"> stage to</font>

494
00:24:08,770 --> 00:24:16,740
protocol is negotiated key but there is

495
00:24:13,300 --> 00:24:20,110
<font color="#CCCCCC">no way appear knows that the other party</font>

496
00:24:16,740 --> 00:24:22,540
negotiated the same key so if you like

497
00:24:20,110 --> 00:24:24,310
to compare apples<font color="#CCCCCC"> to apples so you need</font>

498
00:24:22,540 --> 00:24:27,970
another round of the protocol<font color="#E5E5E5"> of key</font>

499
00:24:24,310 --> 00:24:30,610
confirmation so<font color="#E5E5E5"> actually if we consider</font>

500
00:24:27,970 --> 00:24:32,680
<font color="#CCCCCC">stake to in authentication scenario we</font>

501
00:24:30,610 --> 00:24:36,459
actually eat it will become<font color="#CCCCCC"> two downed</font>

502
00:24:32,680 --> 00:24:39,850
tree protocol and not one runs it so

503
00:24:36,460 --> 00:24:43,300
still less<font color="#CCCCCC"> than socialism linea which is</font>

504
00:24:39,850 --> 00:24:51,419
free round-trip but still it's not that

505
00:24:43,300 --> 00:24:54,730
much faster<font color="#E5E5E5"> the end then we did a pure</font>

506
00:24:51,420 --> 00:24:58,060
performance analysis so we<font color="#E5E5E5"> took to</font>

507
00:24:54,730 --> 00:25:01,150
implementation in c1 of<font color="#E5E5E5"> state two and</font>

508
00:24:58,060 --> 00:25:04,060
one is for socialist millionaire it it

509
00:25:01,150 --> 00:25:08,290
ended up that socialist millionaire is

510
00:25:04,060 --> 00:25:10,419
only 20 times slower so it's not<font color="#CCCCCC"> 1000</font>

511
00:25:08,290 --> 00:25:13,180
<font color="#E5E5E5">times it's not</font><font color="#CCCCCC"> a million times it's only</font>

512
00:25:10,420 --> 00:25:15,760
20 times flow which is probably a

513
00:25:13,180 --> 00:25:18,070
relatively low price if<font color="#E5E5E5"> you</font><font color="#CCCCCC"> are willing</font>

514
00:25:15,760 --> 00:25:20,080
<font color="#E5E5E5">to pay for high security guarantees and</font>

515
00:25:18,070 --> 00:25:23,800
zero knowledge properties with socialist

516
00:25:20,080 --> 00:25:26,320
millionaire can provide also this is

517
00:25:23,800 --> 00:25:28,659
this result is more relevant to academia

518
00:25:26,320 --> 00:25:30,879
and in<font color="#CCCCCC"> real world case when we go and</font>

519
00:25:28,660 --> 00:25:33,580
ask<font color="#E5E5E5"> people to adopt a special solution</font>

520
00:25:30,880 --> 00:25:35,950
they ask they should ask for some

521
00:25:33,580 --> 00:25:37,389
high-level languages so nobody will you

522
00:25:35,950 --> 00:25:39,579
<font color="#CCCCCC">see</font><font color="#E5E5E5"> anymore</font>

523
00:25:37,389 --> 00:25:43,029
or nowadays so they always ask for

524
00:25:39,579 --> 00:25:45,519
Python Java Ruby and go and whatever

525
00:25:43,029 --> 00:25:49,299
language and<font color="#CCCCCC"> it's typical use</font><font color="#E5E5E5"> high level</font>

526
00:25:45,519 --> 00:25:52,149
languages SP and ends<font color="#E5E5E5"> up on the three</font>

527
00:25:49,299 --> 00:25:55,269
times slower than spike too because most

528
00:25:52,149 --> 00:25:57,458
of the processing time is spent on

529
00:25:55,269 --> 00:25:59,950
network communication and runtime

530
00:25:57,459 --> 00:26:05,049
support than actually protocol on

531
00:25:59,950 --> 00:26:07,839
protocol computation so in the<font color="#E5E5E5"> end SP is</font>

532
00:26:05,049 --> 00:26:09,999
<font color="#CCCCCC">slow but not much slower it's a little</font>

533
00:26:07,839 --> 00:26:13,859
<font color="#CCCCCC">bit slower than spected but it provides</font>

534
00:26:09,999 --> 00:26:16,269
<font color="#CCCCCC">higher security</font><font color="#E5E5E5"> guarantees so another</font>

535
00:26:13,859 --> 00:26:19,089
response from critical community was

536
00:26:16,269 --> 00:26:21,759
that spike is better because it's

537
00:26:19,089 --> 00:26:24,219
negotiate it negotiates a security key

538
00:26:21,759 --> 00:26:28,570
as part of the protocol outcome and SP

539
00:26:24,219 --> 00:26:31,269
only checks whether these values<font color="#CCCCCC"> are</font>

540
00:26:28,570 --> 00:26:34,239
equal but apparently if you<font color="#CCCCCC"> take a</font>

541
00:26:31,269 --> 00:26:37,269
closer look to fmt again you will<font color="#E5E5E5"> see</font>

542
00:26:34,239 --> 00:26:39,129
<font color="#E5E5E5">that it actually does too difficult</font>

543
00:26:37,269 --> 00:26:41,889
antiques changes before the protocol

544
00:26:39,129 --> 00:26:44,408
begins so if the<font color="#E5E5E5"> last equation holds you</font>

545
00:26:41,889 --> 00:26:47,139
will<font color="#CCCCCC"> actually get to secret keys which</font>

546
00:26:44,409 --> 00:26:50,219
we just tore this<font color="#E5E5E5"> in these intermediate</font>

547
00:26:47,139 --> 00:26:54,939
values so you have the same

548
00:26:50,219 --> 00:26:57,070
functionality as fake and this brings

549
00:26:54,940 --> 00:27:00,459
another very interesting use case for

550
00:26:57,070 --> 00:27:03,158
<font color="#CCCCCC">socialists you in there you can use it</font>

551
00:27:00,459 --> 00:27:05,139
to<font color="#CCCCCC"> provide automatic Hugh locations for</font>

552
00:27:03,159 --> 00:27:06,879
system which communicate over encrypted

553
00:27:05,139 --> 00:27:08,619
channel over long<font color="#CCCCCC"> live network</font>

554
00:27:06,879 --> 00:27:10,478
<font color="#CCCCCC">connection so assuming you have to</font>

555
00:27:08,619 --> 00:27:13,449
distribute existence which communicates

556
00:27:10,479 --> 00:27:16,509
the Google a word key one at some point

557
00:27:13,450 --> 00:27:18,940
to a good security practice to rotate

558
00:27:16,509 --> 00:27:21,279
the keys but it's always<font color="#E5E5E5"> hard the key</font>

559
00:27:18,940 --> 00:27:24,789
management is always hard so here you

560
00:27:21,279 --> 00:27:27,309
can<font color="#CCCCCC"> just use social this millionaire</font>

561
00:27:24,789 --> 00:27:31,929
protocol to store those intermediate

562
00:27:27,309 --> 00:27:34,928
negotiated keys and just rotate the king

563
00:27:31,929 --> 00:27:39,029
is very<font color="#E5E5E5"> easy and can be fully automated</font>

564
00:27:34,929 --> 00:27:39,029
with any without any human intervention

565
00:27:39,119 --> 00:27:46,360
l

566
00:27:41,230 --> 00:27:50,700
this is like combination<font color="#E5E5E5"> of every other</font>

567
00:27:46,360 --> 00:27:53,379
aspects that creep the community and

568
00:27:50,700 --> 00:27:57,030
negative feedback of<font color="#CCCCCC"> cryptic community</font>

569
00:27:53,380 --> 00:27:59,890
it provided<font color="#E5E5E5"> regarding S&P usage so I</font>

570
00:27:57,030 --> 00:28:03,399
would like to<font color="#E5E5E5"> stress out that if</font><font color="#CCCCCC"> you</font>

571
00:27:59,890 --> 00:28:05,260
take<font color="#E5E5E5"> a closer look at fake</font><font color="#CCCCCC"> too or any</font>

572
00:28:03,400 --> 00:28:07,450
paid protocol fake is a key agreement

573
00:28:05,260 --> 00:28:09,760
protocol and it's not a good<font color="#E5E5E5"> security</font>

574
00:28:07,450 --> 00:28:14,500
practice to use key agreement protocol

575
00:28:09,760 --> 00:28:16,299
for authentication at all so and because

576
00:28:14,500 --> 00:28:18,760
the goal of the giggling protocol is to

577
00:28:16,299 --> 00:28:23,049
negotiate shared key and not

578
00:28:18,760 --> 00:28:24,970
authenticated fear and the<font color="#E5E5E5"> Suzuki paid</font>

579
00:28:23,049 --> 00:28:26,980
protocol does not even provide the proof

580
00:28:24,970 --> 00:28:32,740
that<font color="#E5E5E5"> appears in all the</font><font color="#CCCCCC"> secrets if you</font>

581
00:28:26,980 --> 00:28:36,419
take a closer look here you will see by

582
00:28:32,740 --> 00:28:40,630
examining<font color="#CCCCCC"> those</font><font color="#E5E5E5"> values that actually</font>

583
00:28:36,419 --> 00:28:44,799
speak to does not use the secret by a

584
00:28:40,630 --> 00:28:47,650
person in the protocol computation<font color="#E5E5E5"> so to</font>

585
00:28:44,799 --> 00:28:50,350
provide an analogy and let's consider

586
00:28:47,650 --> 00:28:52,809
that<font color="#CCCCCC"> w is some kind of a private key</font>

587
00:28:50,350 --> 00:28:54,939
then these terms which are used in

588
00:28:52,809 --> 00:28:58,480
protocol computation are only public

589
00:28:54,940 --> 00:29:01,600
<font color="#E5E5E5">keys so spike to provide the proof that</font>

590
00:28:58,480 --> 00:29:03,429
you appear knows the public key which is

591
00:29:01,600 --> 00:29:08,740
<font color="#E5E5E5">derived from</font><font color="#CCCCCC"> the secret not the secret</font>

592
00:29:03,429 --> 00:29:10,840
itself so it's not it's<font color="#E5E5E5"> not even and it</font>

593
00:29:08,740 --> 00:29:13,690
<font color="#E5E5E5">doesn't even contain the proof that you</font>

594
00:29:10,840 --> 00:29:15,850
<font color="#CCCCCC">Pierre knows the secret so if I'm an</font>

595
00:29:13,690 --> 00:29:18,669
adversary i can successfully communicate

596
00:29:15,850 --> 00:29:20,379
using spiky to by knowing only the

597
00:29:18,669 --> 00:29:22,030
public key which is<font color="#E5E5E5"> derived from the</font>

598
00:29:20,380 --> 00:29:27,549
<font color="#E5E5E5">original success value and not the</font>

599
00:29:22,030 --> 00:29:30,160
secret value itself and this my create

600
00:29:27,549 --> 00:29:33,040
issue for example if you ask some

601
00:29:30,160 --> 00:29:35,620
developers<font color="#CCCCCC"> to implement speak to in a</font>

602
00:29:33,040 --> 00:29:38,260
secure manner so secure manner would

603
00:29:35,620 --> 00:29:40,178
mean to him that<font color="#CCCCCC"> he should ve route all</font>

604
00:29:38,260 --> 00:29:42,549
the memory which were used for secret

605
00:29:40,179 --> 00:29:45,880
for storing secret value so eventually

606
00:29:42,549 --> 00:29:46,918
you will probably zero out the memory

607
00:29:45,880 --> 00:29:50,929
which

608
00:29:46,919 --> 00:29:53,249
used to store w but if I<font color="#CCCCCC"> dumped the</font>

609
00:29:50,929 --> 00:29:55,200
process memory after the protocol

610
00:29:53,249 --> 00:29:57,570
finishes I<font color="#E5E5E5"> can just dump those</font>

611
00:29:55,200 --> 00:30:00,049
intermediate public values and use them

612
00:29:57,570 --> 00:30:04,769
successfully to communicate with<font color="#CCCCCC"> Pierre</font>

613
00:30:00,049 --> 00:30:07,549
of course so<font color="#CCCCCC"> you can there are ways that</font>

614
00:30:04,769 --> 00:30:09,629
can improve this protocol in a specific

615
00:30:07,549 --> 00:30:11,908
implementation so you can say<font color="#CCCCCC"> that all</font>

616
00:30:09,629 --> 00:30:13,980
you should treat the intermediate<font color="#CCCCCC"> gives</font>

617
00:30:11,909 --> 00:30:16,350
computational values as citizens

618
00:30:13,980 --> 00:30:20,820
themselves you can just accept the<font color="#E5E5E5"> risk</font>

619
00:30:16,350 --> 00:30:24,178
that nobody will<font color="#CCCCCC"> jump those intermediate</font>

620
00:30:20,820 --> 00:30:26,009
computation values and you can just

621
00:30:24,179 --> 00:30:28,200
enforce them implementation level that

622
00:30:26,009 --> 00:30:30,629
these values are never persisted in

623
00:30:28,200 --> 00:30:33,359
<font color="#E5E5E5">memory but anyway you have to somehow</font>

624
00:30:30,629 --> 00:30:36,570
deal with<font color="#CCCCCC"> it and this is</font><font color="#E5E5E5"> not specified</font>

625
00:30:33,359 --> 00:30:38,699
<font color="#CCCCCC">in the</font><font color="#E5E5E5"> original protocol so that's why</font>

626
00:30:36,570 --> 00:30:41,999
spike is not very suited for

627
00:30:38,700 --> 00:30:45,570
authentication cases and on the other

628
00:30:41,999 --> 00:30:48,570
hand social is millionaire in social

629
00:30:45,570 --> 00:30:50,999
engineer you always use<font color="#CCCCCC"> the secret</font>

630
00:30:48,570 --> 00:30:53,460
itself in the protocol computation<font color="#E5E5E5"> and</font>

631
00:30:50,999 --> 00:30:55,409
all the intermediate parameters are

632
00:30:53,460 --> 00:30:57,960
random values with contributions from

633
00:30:55,409 --> 00:31:00,899
both parties so they are meaningless to

634
00:30:57,960 --> 00:31:03,200
<font color="#E5E5E5">all other adversaries which may dump the</font>

635
00:31:00,899 --> 00:31:05,668
process memory later and this is also

636
00:31:03,200 --> 00:31:10,529
ensured by zero knowledge property of

637
00:31:05,669 --> 00:31:13,970
the protocol so that's probably it so

638
00:31:10,529 --> 00:31:16,470
take away from here that you can use

639
00:31:13,970 --> 00:31:19,649
zero knowledge protocols as another

640
00:31:16,470 --> 00:31:22,980
building block to build security enhance

641
00:31:19,649 --> 00:31:25,439
and privacy preserving applications so

642
00:31:22,980 --> 00:31:27,690
it also<font color="#CCCCCC"> it's very useful</font><font color="#E5E5E5"> in this</font>

643
00:31:25,440 --> 00:31:29,399
scenario when the threat model assumes

644
00:31:27,690 --> 00:31:33,749
that one of the communicating parties

645
00:31:29,399 --> 00:31:35,369
can be malicious you can still use<font color="#E5E5E5"> with</font>

646
00:31:33,749 --> 00:31:38,909
all the cave is you can still<font color="#CCCCCC"> use</font><font color="#E5E5E5"> back a</font>

647
00:31:35,369 --> 00:31:43,039
<font color="#E5E5E5">base form most of the cases but you have</font>

648
00:31:38,909 --> 00:31:45,600
to be aware of scabies and basically

649
00:31:43,039 --> 00:31:47,489
socialist millionaire will provide you

650
00:31:45,600 --> 00:31:48,379
more security guarantees although with

651
00:31:47,489 --> 00:31:52,010
some small

652
00:31:48,380 --> 00:31:55,060
<font color="#CCCCCC">for my family so if for everybody is</font>

653
00:31:52,010 --> 00:31:57,980
interested you can read the paper which

654
00:31:55,060 --> 00:31:59,990
described<font color="#E5E5E5"> socialist millionaire on eccie</font>

655
00:31:57,980 --> 00:32:02,900
in more detail and you can check the

656
00:31:59,990 --> 00:32:07,510
code on github and<font color="#E5E5E5"> use pull request</font>

657
00:32:02,900 --> 00:32:13,480
improve and other things thank you

658
00:32:07,510 --> 00:32:20,620
[Applause]

659
00:32:13,480 --> 00:32:26,960
question no question thank you

660
00:32:20,620 --> 00:32:26,959
[Applause]

