1
00:00:06,960 --> 00:00:11,840
so i want you to close your eyes

2
00:00:09,040 --> 00:00:13,200
and i want you to think about that very

3
00:00:11,840 --> 00:00:16,400
first time

4
00:00:13,200 --> 00:00:18,320
that you rode a bicycle it might have

5
00:00:16,400 --> 00:00:20,640
been a little 12-inch bike with training

6
00:00:18,320 --> 00:00:21,680
wheels it might have been a 20-inch bmx

7
00:00:20,640 --> 00:00:23,680
bike

8
00:00:21,680 --> 00:00:24,960
you know but i want you to think about

9
00:00:23,680 --> 00:00:26,320
that feeling you know when you were a

10
00:00:24,960 --> 00:00:30,000
kid you thought you could run

11
00:00:26,320 --> 00:00:32,480
fast but when you got on that bike

12
00:00:30,000 --> 00:00:33,600
all of a sudden you were that much

13
00:00:32,479 --> 00:00:36,160
faster

14
00:00:33,600 --> 00:00:38,160
you were accelerating faster than your

15
00:00:36,160 --> 00:00:40,800
legs could carry you

16
00:00:38,160 --> 00:00:41,360
on their own and then maybe at some

17
00:00:40,800 --> 00:00:44,718
point

18
00:00:41,360 --> 00:00:46,800
later on you kind of upgraded to

19
00:00:44,719 --> 00:00:48,480
a 10-speed bike or maybe a mountain bike

20
00:00:46,800 --> 00:00:51,519
with more gears than that

21
00:00:48,480 --> 00:00:55,680
and now we've got extra gears that are

22
00:00:51,520 --> 00:00:57,520
again creating this multiplied effort

23
00:00:55,680 --> 00:00:59,680
that are carrying you further and faster

24
00:00:57,520 --> 00:01:02,719
than you could have possibly gone

25
00:00:59,680 --> 00:01:05,760
on your own so i think this is a great

26
00:01:02,719 --> 00:01:07,920
analogy to kind of kick off today

27
00:01:05,760 --> 00:01:09,280
and scientific american you know they

28
00:01:07,920 --> 00:01:11,360
thought this

29
00:01:09,280 --> 00:01:14,080
idea of the bicycle was interesting too

30
00:01:11,360 --> 00:01:16,560
way back in 1973

31
00:01:14,080 --> 00:01:17,439
they wrote this entire article on the

32
00:01:16,560 --> 00:01:18,880
bicycle

33
00:01:17,439 --> 00:01:20,080
and they collected all this data and

34
00:01:18,880 --> 00:01:21,839
they put together this really

35
00:01:20,080 --> 00:01:24,880
interesting chart

36
00:01:21,840 --> 00:01:27,200
which kind of contrasts the the cost of

37
00:01:24,880 --> 00:01:28,880
transportation which is the calories per

38
00:01:27,200 --> 00:01:31,920
gram per kilometer

39
00:01:28,880 --> 00:01:32,399
versus the body weight in kilograms of

40
00:01:31,920 --> 00:01:35,680
different

41
00:01:32,400 --> 00:01:37,439
animal species and so you can see here

42
00:01:35,680 --> 00:01:39,119
all kinds of animals on this chart you

43
00:01:37,439 --> 00:01:42,320
look at the top and you think wow

44
00:01:39,119 --> 00:01:44,079
mice they they have really high cost of

45
00:01:42,320 --> 00:01:46,559
transportation for their

46
00:01:44,079 --> 00:01:48,079
little tiny bodies and then you get down

47
00:01:46,560 --> 00:01:50,640
here and things get a little bit

48
00:01:48,079 --> 00:01:52,320
more efficient you know dogs are doing

49
00:01:50,640 --> 00:01:54,399
pretty good they're moving along pretty

50
00:01:52,320 --> 00:01:57,520
good compared to their body weight

51
00:01:54,399 --> 00:02:00,159
sheep are doing better mankind kind of

52
00:01:57,520 --> 00:02:02,479
beats out the dog in the sheep but yet

53
00:02:00,159 --> 00:02:04,240
we're still kind of beat out by horses

54
00:02:02,479 --> 00:02:05,439
and and the good old salmon

55
00:02:04,240 --> 00:02:08,799
and they're they're really pretty

56
00:02:05,439 --> 00:02:10,318
efficient for their body weight

57
00:02:08,800 --> 00:02:13,120
but the fine folks at scientific

58
00:02:10,318 --> 00:02:16,720
american they they had the brilliance

59
00:02:13,120 --> 00:02:19,680
to calculate the data for man

60
00:02:16,720 --> 00:02:21,840
on bicycle and that's a totally

61
00:02:19,680 --> 00:02:24,959
different story

62
00:02:21,840 --> 00:02:25,920
when you put man on a bicycle turns out

63
00:02:24,959 --> 00:02:27,520
that blows away

64
00:02:25,920 --> 00:02:29,359
all of these species up here and

65
00:02:27,520 --> 00:02:30,080
actually is even much more efficient

66
00:02:29,360 --> 00:02:33,920
than

67
00:02:30,080 --> 00:02:37,040
the automobile a plane a helicopter

68
00:02:33,920 --> 00:02:40,319
because a bicycle is lightweight

69
00:02:37,040 --> 00:02:43,679
and it's efficient and it still

70
00:02:40,319 --> 00:02:48,000
enables you to go further and go faster

71
00:02:43,680 --> 00:02:51,200
than you could have gone otherwise

72
00:02:48,000 --> 00:02:52,560
so there's another great guy who

73
00:02:51,200 --> 00:02:54,879
really thought that was an interesting

74
00:02:52,560 --> 00:02:56,879
story and his name was steve jobs and he

75
00:02:54,879 --> 00:02:57,920
co-founded a little company called apple

76
00:02:56,879 --> 00:03:00,480
computer

77
00:02:57,920 --> 00:03:03,359
and in 1980 he said when we invented the

78
00:03:00,480 --> 00:03:04,720
personal computer we created a new kind

79
00:03:03,360 --> 00:03:08,720
of bicycle

80
00:03:04,720 --> 00:03:11,680
a new man machine partnership

81
00:03:08,720 --> 00:03:13,359
and i think that's a great quote and so

82
00:03:11,680 --> 00:03:16,879
they kind of used this

83
00:03:13,360 --> 00:03:20,080
idea as the basis for their campaign

84
00:03:16,879 --> 00:03:21,440
of an apple computer being a bicycle for

85
00:03:20,080 --> 00:03:24,319
the mind

86
00:03:21,440 --> 00:03:25,359
you know here's this idea of you take a

87
00:03:24,319 --> 00:03:27,839
computer

88
00:03:25,360 --> 00:03:29,280
and it's a force multiplier just like

89
00:03:27,840 --> 00:03:30,799
that bicycle was

90
00:03:29,280 --> 00:03:32,640
that bicycle makes you go further and

91
00:03:30,799 --> 00:03:34,959
faster so does

92
00:03:32,640 --> 00:03:35,839
a computer you can take an idea in your

93
00:03:34,959 --> 00:03:38,159
brain

94
00:03:35,840 --> 00:03:39,920
and you can have that computer take that

95
00:03:38,159 --> 00:03:41,920
idea forward

96
00:03:39,920 --> 00:03:44,399
even further and faster than you could

97
00:03:41,920 --> 00:03:46,720
on your own

98
00:03:44,400 --> 00:03:47,440
so they put together this ad campaign

99
00:03:46,720 --> 00:03:49,680
and

100
00:03:47,440 --> 00:03:51,359
this is kind of what one of the the

101
00:03:49,680 --> 00:03:53,360
parts of that campaign looked like you

102
00:03:51,360 --> 00:03:56,000
see the guy on a bicycle and you see a

103
00:03:53,360 --> 00:03:58,319
computer hanging on the back of that

104
00:03:56,000 --> 00:03:59,040
and you know i think this is a really

105
00:03:58,319 --> 00:04:01,200
great

106
00:03:59,040 --> 00:04:03,920
kind of logo for apple computer back in

107
00:04:01,200 --> 00:04:07,439
the day and getting across this idea

108
00:04:03,920 --> 00:04:09,518
of a bicycle for the mind so i really

109
00:04:07,439 --> 00:04:11,760
like this logo a lot

110
00:04:09,519 --> 00:04:15,760
and it actually reminds me quite a bit

111
00:04:11,760 --> 00:04:17,358
of another logo and that's our new logo

112
00:04:15,760 --> 00:04:20,238
so what you can see here this is our

113
00:04:17,358 --> 00:04:21,279
brand new sos security onion solutions

114
00:04:20,238 --> 00:04:23,919
logo

115
00:04:21,279 --> 00:04:26,239
and the idea here is we want to build a

116
00:04:23,919 --> 00:04:28,960
bicycle for blue teamers

117
00:04:26,240 --> 00:04:30,240
right so this this kind of looks like a

118
00:04:28,960 --> 00:04:32,080
bicycle the the

119
00:04:30,240 --> 00:04:33,440
concentric circles here kind of look

120
00:04:32,080 --> 00:04:36,400
like pedaling

121
00:04:33,440 --> 00:04:37,440
those bicycle pedals and propelling you

122
00:04:36,400 --> 00:04:39,758
forward

123
00:04:37,440 --> 00:04:41,199
and there's lots of other uh subtle

124
00:04:39,759 --> 00:04:44,000
easter eggs that we've

125
00:04:41,199 --> 00:04:44,880
implanted in this logo design as well of

126
00:04:44,000 --> 00:04:47,440
course this is

127
00:04:44,880 --> 00:04:50,080
not only for the rotation of bicycle

128
00:04:47,440 --> 00:04:53,120
pedals but it's also the oh and onion

129
00:04:50,080 --> 00:04:54,639
and the the blue stem is blue teamers of

130
00:04:53,120 --> 00:04:56,400
course

131
00:04:54,639 --> 00:04:58,080
but there's also another kind of subtle

132
00:04:56,400 --> 00:04:59,840
detail hidden in here and that's that if

133
00:04:58,080 --> 00:05:01,599
you look closely you can kind of see

134
00:04:59,840 --> 00:05:05,039
that this is almost kind of an

135
00:05:01,600 --> 00:05:07,680
s superimposed over the o

136
00:05:05,039 --> 00:05:09,120
and so you know we put a lot of thought

137
00:05:07,680 --> 00:05:12,000
and a lot of detail

138
00:05:09,120 --> 00:05:14,080
into something as simple as a logo but

139
00:05:12,000 --> 00:05:17,120
that really just kind of signifies

140
00:05:14,080 --> 00:05:17,919
all of the thought and detail that we've

141
00:05:17,120 --> 00:05:20,720
put into

142
00:05:17,919 --> 00:05:21,680
security onion and this next generation

143
00:05:20,720 --> 00:05:24,160
platform

144
00:05:21,680 --> 00:05:24,720
that we're about to talk about so you're

145
00:05:24,160 --> 00:05:26,800
going to see

146
00:05:24,720 --> 00:05:28,560
our new logos as we go throughout today

147
00:05:26,800 --> 00:05:31,039
we've got new logos not just for

148
00:05:28,560 --> 00:05:31,919
security onion solutions the company but

149
00:05:31,039 --> 00:05:34,240
also for

150
00:05:31,919 --> 00:05:35,758
security onion the free and open source

151
00:05:34,240 --> 00:05:38,000
software platform

152
00:05:35,759 --> 00:05:38,880
so you'll see those new logos and and

153
00:05:38,000 --> 00:05:41,360
just keep

154
00:05:38,880 --> 00:05:44,880
keep in mind what we said about being a

155
00:05:41,360 --> 00:05:44,880
bicycle for blue teamers

156
00:05:45,199 --> 00:05:49,199
so let's talk about a brief history of

157
00:05:47,759 --> 00:05:51,919
security onion

158
00:05:49,199 --> 00:05:52,720
um you know i started building security

159
00:05:51,919 --> 00:05:58,000
onion way back

160
00:05:52,720 --> 00:06:00,319
in 2008 and it was really out of this

161
00:05:58,000 --> 00:06:02,240
idea that i had of really seeing a

162
00:06:00,319 --> 00:06:04,240
problem in our industry that

163
00:06:02,240 --> 00:06:06,160
we had these individual free and open

164
00:06:04,240 --> 00:06:08,319
source components

165
00:06:06,160 --> 00:06:10,160
uh and you could download this component

166
00:06:08,319 --> 00:06:11,360
you could configure it you can compile

167
00:06:10,160 --> 00:06:12,720
it you could try to integrate it with

168
00:06:11,360 --> 00:06:15,360
this thing over here and

169
00:06:12,720 --> 00:06:18,560
then kind of lather rinse repeat and you

170
00:06:15,360 --> 00:06:21,120
could build all these components

171
00:06:18,560 --> 00:06:22,720
but what i kind of saw was that we had a

172
00:06:21,120 --> 00:06:25,360
lot of defenders that were spending a

173
00:06:22,720 --> 00:06:27,039
lot of time being sus admins rather than

174
00:06:25,360 --> 00:06:29,840
doing their real job

175
00:06:27,039 --> 00:06:30,318
of going out and catching bad guys and

176
00:06:29,840 --> 00:06:32,400
so

177
00:06:30,319 --> 00:06:34,560
it only made sense to me that we should

178
00:06:32,400 --> 00:06:37,679
have a free and open source

179
00:06:34,560 --> 00:06:38,639
platform a platform that had all of

180
00:06:37,680 --> 00:06:42,240
these tools

181
00:06:38,639 --> 00:06:45,360
already compiled and already configured

182
00:06:42,240 --> 00:06:48,560
and this was really kind of

183
00:06:45,360 --> 00:06:49,919
this hit home for me a couple of years

184
00:06:48,560 --> 00:06:51,280
later when i was working a pretty

185
00:06:49,919 --> 00:06:52,960
serious incident

186
00:06:51,280 --> 00:06:54,318
and i realized pretty early on in the

187
00:06:52,960 --> 00:06:57,599
investigation

188
00:06:54,319 --> 00:06:59,280
that the attacker was using

189
00:06:57,599 --> 00:07:01,360
what was then called backtrack linux of

190
00:06:59,280 --> 00:07:04,638
course that's now called kali linux

191
00:07:01,360 --> 00:07:06,639
but that's exactly what red teamers

192
00:07:04,639 --> 00:07:08,479
that's exactly what adversaries have is

193
00:07:06,639 --> 00:07:10,560
is an iso image it's got all the the

194
00:07:08,479 --> 00:07:11,758
favorite tools already compiled already

195
00:07:10,560 --> 00:07:13,919
configured

196
00:07:11,759 --> 00:07:15,680
and so it was fundamentally unjust that

197
00:07:13,919 --> 00:07:16,000
we as blue teamers we as defenders

198
00:07:15,680 --> 00:07:18,720
didn't

199
00:07:16,000 --> 00:07:19,919
have the same thing so in 2008 i set out

200
00:07:18,720 --> 00:07:22,479
to build that

201
00:07:19,919 --> 00:07:24,719
and released the first version of it in

202
00:07:22,479 --> 00:07:26,400
2009

203
00:07:24,720 --> 00:07:28,880
over the years steadily made

204
00:07:26,400 --> 00:07:31,359
improvements to it as the worldwide

205
00:07:28,880 --> 00:07:34,639
security onion community grew

206
00:07:31,360 --> 00:07:36,880
and uh eventually it became my full-time

207
00:07:34,639 --> 00:07:38,000
job in 2014 i started security onion

208
00:07:36,880 --> 00:07:41,360
solutions

209
00:07:38,000 --> 00:07:44,000
and dove into this thing full time

210
00:07:41,360 --> 00:07:46,080
and along the way uh hired phil

211
00:07:44,000 --> 00:07:47,120
planamira who you heard from a couple of

212
00:07:46,080 --> 00:07:50,159
minutes ago

213
00:07:47,120 --> 00:07:52,080
and then in 2018 we hired mike reeves as

214
00:07:50,160 --> 00:07:53,360
product manager here at security onion

215
00:07:52,080 --> 00:07:55,440
solutions

216
00:07:53,360 --> 00:07:56,639
one of the first conversations that i

217
00:07:55,440 --> 00:07:59,680
had with mike

218
00:07:56,639 --> 00:08:00,319
in his new role was about security onion

219
00:07:59,680 --> 00:08:02,720
2

220
00:08:00,319 --> 00:08:03,840
and what does that next generation

221
00:08:02,720 --> 00:08:06,639
platform

222
00:08:03,840 --> 00:08:08,400
actually look like we started that

223
00:08:06,639 --> 00:08:10,800
discussion in 2018

224
00:08:08,400 --> 00:08:12,000
started working on it in 2019 we

225
00:08:10,800 --> 00:08:15,919
released that very

226
00:08:12,000 --> 00:08:17,360
first alpha version and in 2020 if

227
00:08:15,919 --> 00:08:18,318
you've been following along this year

228
00:08:17,360 --> 00:08:20,400
you saw us

229
00:08:18,319 --> 00:08:22,400
hit the release candidate phase where we

230
00:08:20,400 --> 00:08:26,479
released rc1

231
00:08:22,400 --> 00:08:30,799
rc2 and rc3

232
00:08:26,479 --> 00:08:32,880
so we've come a long way

233
00:08:30,800 --> 00:08:34,560
and but i want to take this slide and i

234
00:08:32,880 --> 00:08:35,200
want to change this slide just a little

235
00:08:34,559 --> 00:08:36,880
bit

236
00:08:35,200 --> 00:08:40,080
so instead of brief history let's change

237
00:08:36,880 --> 00:08:44,480
this to making history

238
00:08:40,080 --> 00:08:47,760
because today we are excited to announce

239
00:08:44,480 --> 00:08:48,959
that security onion 2 is now released we

240
00:08:47,760 --> 00:08:51,279
have now reached

241
00:08:48,959 --> 00:08:52,079
general availability for security onion

242
00:08:51,279 --> 00:08:55,200
2

243
00:08:52,080 --> 00:08:55,839
after many years of blood sweat and

244
00:08:55,200 --> 00:08:57,920
tears

245
00:08:55,839 --> 00:08:59,200
from all those folks that i showed on

246
00:08:57,920 --> 00:09:02,479
the screen earlier

247
00:08:59,200 --> 00:09:05,440
uh we are now launching security onion 2

248
00:09:02,480 --> 00:09:08,080
out into the wild and so i mentioned

249
00:09:05,440 --> 00:09:09,440
earlier in 2018 i hired mike reeves as

250
00:09:08,080 --> 00:09:12,800
product manager

251
00:09:09,440 --> 00:09:15,920
and so i'd like to uh

252
00:09:12,800 --> 00:09:16,880
kind of introduce him uh you know so i

253
00:09:15,920 --> 00:09:20,079
hired mike

254
00:09:16,880 --> 00:09:23,360
specifically because mike has

255
00:09:20,080 --> 00:09:26,399
lots and lots of experience in

256
00:09:23,360 --> 00:09:26,880
designing building and maintaining some

257
00:09:26,399 --> 00:09:29,600
of the

258
00:09:26,880 --> 00:09:30,880
largest sensor grids the world has ever

259
00:09:29,600 --> 00:09:33,839
seen

260
00:09:30,880 --> 00:09:34,480
and so if there's anybody who knows

261
00:09:33,839 --> 00:09:37,519
about

262
00:09:34,480 --> 00:09:38,880
scale and the enterprise and how to do

263
00:09:37,519 --> 00:09:40,800
that kind of stuff

264
00:09:38,880 --> 00:09:43,519
it's mike reeves so ladies and gentlemen

265
00:09:40,800 --> 00:09:46,560
i give you mr mike reeves

266
00:09:43,519 --> 00:09:47,920
well thank you doug um so i was going to

267
00:09:46,560 --> 00:09:50,560
use a pyramid here

268
00:09:47,920 --> 00:09:53,120
but then i had to pay um royalties to

269
00:09:50,560 --> 00:09:55,199
date bianca for his pyramid

270
00:09:53,120 --> 00:09:57,200
so i just did it the old-fashioned way

271
00:09:55,200 --> 00:10:00,080
with text um

272
00:09:57,200 --> 00:10:01,680
so like doug said we we sat down and we

273
00:10:00,080 --> 00:10:05,040
we we talked about it this is

274
00:10:01,680 --> 00:10:06,800
january of 2018 about security onion 2.

275
00:10:05,040 --> 00:10:08,160
and we've thought you know flexibility

276
00:10:06,800 --> 00:10:09,599
that's our that's our main thing right

277
00:10:08,160 --> 00:10:10,399
like we want to be able to have a

278
00:10:09,600 --> 00:10:13,040
platform

279
00:10:10,399 --> 00:10:13,839
that's flexible but there's challenges

280
00:10:13,040 --> 00:10:15,680
that are

281
00:10:13,839 --> 00:10:17,680
right and it goes from easy to hard here

282
00:10:15,680 --> 00:10:20,800
right so you know we already

283
00:10:17,680 --> 00:10:22,479
can do a platform today um that you can

284
00:10:20,800 --> 00:10:24,240
run on a small vm like a student so we

285
00:10:22,480 --> 00:10:26,320
were real good at that

286
00:10:24,240 --> 00:10:27,680
um you know it's a little bit harder to

287
00:10:26,320 --> 00:10:29,279
run that at the scale of thousands of

288
00:10:27,680 --> 00:10:31,040
sensors but it's still possible with the

289
00:10:29,279 --> 00:10:33,680
current security onion

290
00:10:31,040 --> 00:10:34,959
um you know we wanted users to be able

291
00:10:33,680 --> 00:10:36,719
to customize things but we didn't want

292
00:10:34,959 --> 00:10:39,760
them to do it so much

293
00:10:36,720 --> 00:10:40,880
that uh you know they could do damage to

294
00:10:39,760 --> 00:10:41,760
themselves and bring their grid down

295
00:10:40,880 --> 00:10:43,040
because they're trying to do something

296
00:10:41,760 --> 00:10:46,079
so we wanted to

297
00:10:43,040 --> 00:10:47,760
have a platform that uh

298
00:10:46,079 --> 00:10:49,839
you know allows people to make those

299
00:10:47,760 --> 00:10:51,600
customizations but also keeps it in a

300
00:10:49,839 --> 00:10:52,959
state that it's always running and going

301
00:10:51,600 --> 00:10:55,279
good

302
00:10:52,959 --> 00:10:55,279
um

303
00:10:56,399 --> 00:10:59,600
but that's that's hard to do right like

304
00:10:58,079 --> 00:11:01,120
to have that balance of

305
00:10:59,600 --> 00:11:02,880
you know you can do this you can make

306
00:11:01,120 --> 00:11:05,760
these changes but keeping that

307
00:11:02,880 --> 00:11:06,959
um and then there's always a lot of

308
00:11:05,760 --> 00:11:07,760
questions and a lot of stuff coming

309
00:11:06,959 --> 00:11:10,160
around

310
00:11:07,760 --> 00:11:11,519
about air gaps what we look like what we

311
00:11:10,160 --> 00:11:13,839
call air gap networks

312
00:11:11,519 --> 00:11:14,560
and an air gap network it's just a

313
00:11:13,839 --> 00:11:16,880
network without

314
00:11:14,560 --> 00:11:18,079
internet access and we wanted to be able

315
00:11:16,880 --> 00:11:20,000
to easily update that

316
00:11:18,079 --> 00:11:22,560
and right now it's it's not the easiest

317
00:11:20,000 --> 00:11:25,120
process so we're changing that

318
00:11:22,560 --> 00:11:26,399
um and we want to make this happen by

319
00:11:25,120 --> 00:11:27,519
being able to download a script or an

320
00:11:26,399 --> 00:11:29,680
iso so

321
00:11:27,519 --> 00:11:31,200
it's just sort of an easy to hard

322
00:11:29,680 --> 00:11:32,959
progression of

323
00:11:31,200 --> 00:11:35,839
the you know challenge that we had for

324
00:11:32,959 --> 00:11:35,839
this platform

325
00:11:37,040 --> 00:11:40,319
so in order to accomplish there's going

326
00:11:38,399 --> 00:11:41,600
to be some changes right so we have to

327
00:11:40,320 --> 00:11:44,079
make some changes

328
00:11:41,600 --> 00:11:45,519
some of the things that uh you know

329
00:11:44,079 --> 00:11:46,800
people are used to seeing in the current

330
00:11:45,519 --> 00:11:47,279
platform they're they're they're going

331
00:11:46,800 --> 00:11:49,519
away

332
00:11:47,279 --> 00:11:50,800
right so this is a list of some of the

333
00:11:49,519 --> 00:11:52,399
main components that are going away but

334
00:11:50,800 --> 00:11:55,839
squeal and squirt have been

335
00:11:52,399 --> 00:11:57,040
core tools of security onion now for

336
00:11:55,839 --> 00:11:59,360
quite a while probably pretty

337
00:11:57,040 --> 00:12:01,120
much since the inception um but they

338
00:11:59,360 --> 00:12:02,240
don't support ipv6

339
00:12:01,120 --> 00:12:04,800
uh so that you know there's some

340
00:12:02,240 --> 00:12:07,920
challenges there um so

341
00:12:04,800 --> 00:12:10,800
um tap me is same kind of thing uh

342
00:12:07,920 --> 00:12:13,599
you know the um there's so much more

343
00:12:10,800 --> 00:12:17,040
ipv6 now i mean even now when i use my

344
00:12:13,600 --> 00:12:19,279
um when i use my home machine

345
00:12:17,040 --> 00:12:20,399
which has ipv6 whenever i hit youtube or

346
00:12:19,279 --> 00:12:22,079
google or anything like that it's all

347
00:12:20,399 --> 00:12:24,880
going out ipv6

348
00:12:22,079 --> 00:12:25,680
um php we wanted to to phase out any

349
00:12:24,880 --> 00:12:28,959
usage of

350
00:12:25,680 --> 00:12:32,638
php um and that's the fng uh

351
00:12:28,959 --> 00:12:35,439
so nested fng is how we gathered pcaps

352
00:12:32,639 --> 00:12:36,320
um in the in the current platform so

353
00:12:35,440 --> 00:12:38,720
what is this stuff

354
00:12:36,320 --> 00:12:41,279
changing to so you're going to see a

355
00:12:38,720 --> 00:12:41,279
theme here

356
00:12:42,000 --> 00:12:45,279
so the theme here is the security onion

357
00:12:43,680 --> 00:12:48,399
console and i'm not going to go

358
00:12:45,279 --> 00:12:49,519
uh into crazy amount of detail for that

359
00:12:48,399 --> 00:12:51,040
because that i don't want to steal any

360
00:12:49,519 --> 00:12:52,480
thunder for later but

361
00:12:51,040 --> 00:12:54,880
we are replacing all these things with

362
00:12:52,480 --> 00:12:56,560
security and console um

363
00:12:54,880 --> 00:12:58,399
for at least the first four and then

364
00:12:56,560 --> 00:13:00,239
we're making the move from netsniff and

365
00:12:58,399 --> 00:13:02,480
g to google stenographer

366
00:13:00,240 --> 00:13:03,279
uh we're doing that for google

367
00:13:02,480 --> 00:13:05,519
sonographers

368
00:13:03,279 --> 00:13:06,320
uh indexing capabilities and those

369
00:13:05,519 --> 00:13:09,040
capabilities

370
00:13:06,320 --> 00:13:09,360
allow us to do a lot more things that we

371
00:13:09,040 --> 00:13:13,120
were

372
00:13:09,360 --> 00:13:15,839
used to doing so you could still um

373
00:13:13,120 --> 00:13:17,519
you know analyze the pcap within uh

374
00:13:15,839 --> 00:13:19,680
within the security and console

375
00:13:17,519 --> 00:13:21,279
just like similar to cap me it's

376
00:13:19,680 --> 00:13:24,319
actually a little bit uh

377
00:13:21,279 --> 00:13:25,760
more intuitive and it supports ipv6

378
00:13:24,320 --> 00:13:28,399
but they also think the other big thing

379
00:13:25,760 --> 00:13:29,120
you could do is now with netsup and g we

380
00:13:28,399 --> 00:13:32,639
used

381
00:13:29,120 --> 00:13:35,040
zeek as sort of the index for pcap

382
00:13:32,639 --> 00:13:36,079
and then you would do a search through

383
00:13:35,040 --> 00:13:38,719
uh

384
00:13:36,079 --> 00:13:40,160
you know a search through the the local

385
00:13:38,720 --> 00:13:42,560
files on that sensor

386
00:13:40,160 --> 00:13:43,760
and using tcp dump and pull that uh

387
00:13:42,560 --> 00:13:47,199
stuff out

388
00:13:43,760 --> 00:13:50,000
um the uh

389
00:13:47,199 --> 00:13:50,959
the other advantage um or so what the

390
00:13:50,000 --> 00:13:52,160
difference is now with google

391
00:13:50,959 --> 00:13:55,439
stenographer is

392
00:13:52,160 --> 00:13:56,560
when you request that pcap it just sends

393
00:13:55,440 --> 00:13:58,320
a bpf right a

394
00:13:56,560 --> 00:13:59,839
source source port desk desk port and a

395
00:13:58,320 --> 00:14:01,360
time frame and

396
00:13:59,839 --> 00:14:04,320
google sonographer spits that back out

397
00:14:01,360 --> 00:14:06,160
to you the other thing it offers that we

398
00:14:04,320 --> 00:14:09,839
don't have

399
00:14:06,160 --> 00:14:11,120
today that this will give us is that you

400
00:14:09,839 --> 00:14:13,120
can do

401
00:14:11,120 --> 00:14:14,880
ad hoc pcap searches so if you know the

402
00:14:13,120 --> 00:14:15,600
sensor you know the source of desk that

403
00:14:14,880 --> 00:14:17,519
you want

404
00:14:15,600 --> 00:14:18,880
and you know a time frame you can go

405
00:14:17,519 --> 00:14:21,120
through the the security engine console

406
00:14:18,880 --> 00:14:22,800
and you can just request that pcap

407
00:14:21,120 --> 00:14:24,399
randomly you don't have to have a

408
00:14:22,800 --> 00:14:27,839
connection or anything that you want to

409
00:14:24,399 --> 00:14:29,680
specifically say so that you know again

410
00:14:27,839 --> 00:14:31,519
when we made this change to security we

411
00:14:29,680 --> 00:14:32,719
knew that some of these tools would have

412
00:14:31,519 --> 00:14:33,839
to be replaced and

413
00:14:32,720 --> 00:14:36,320
you know these are the big ones we've

414
00:14:33,839 --> 00:14:38,480
added a lot more things as well

415
00:14:36,320 --> 00:14:39,839
but you know i just wanted to to

416
00:14:38,480 --> 00:14:41,199
communicate to everybody that these were

417
00:14:39,839 --> 00:14:42,880
sort of the major

418
00:14:41,199 --> 00:14:45,120
changes to your your daily security

419
00:14:42,880 --> 00:14:45,839
onion life when it comes to uh 16

420
00:14:45,120 --> 00:14:48,399
affordability

421
00:14:45,839 --> 00:14:50,560
to uh security onion 2. so with that i'm

422
00:14:48,399 --> 00:14:53,839
going to hand it back to doug

423
00:14:50,560 --> 00:14:56,319
all right thank you mike appreciate that

424
00:14:53,839 --> 00:14:56,959
so let's talk some numbers uh because as

425
00:14:56,320 --> 00:14:59,279
i mentioned

426
00:14:56,959 --> 00:15:00,239
previously it's it's been kind of a long

427
00:14:59,279 --> 00:15:03,439
road since

428
00:15:00,240 --> 00:15:04,560
i hired mike in 2018 and he came to

429
00:15:03,440 --> 00:15:06,320
augusta and we sat

430
00:15:04,560 --> 00:15:08,079
in my basement we kind of talked about

431
00:15:06,320 --> 00:15:09,199
the future and what that new platform

432
00:15:08,079 --> 00:15:12,880
looked like

433
00:15:09,199 --> 00:15:15,439
we've done a lot of work since then and

434
00:15:12,880 --> 00:15:17,199
mike and the rest of the team have have

435
00:15:15,440 --> 00:15:19,199
built a lot of code and we've done lots

436
00:15:17,199 --> 00:15:22,719
and lots of releases because we

437
00:15:19,199 --> 00:15:25,680
are big believers in release early

438
00:15:22,720 --> 00:15:26,000
release often it's important to us to

439
00:15:25,680 --> 00:15:28,399
get

440
00:15:26,000 --> 00:15:29,040
code out there get folks playing with it

441
00:15:28,399 --> 00:15:32,000
poking at

442
00:15:29,040 --> 00:15:33,759
it and giving us feedback and letting us

443
00:15:32,000 --> 00:15:36,880
incorporate that feedback

444
00:15:33,759 --> 00:15:39,199
in future uh iterations so

445
00:15:36,880 --> 00:15:40,959
we did some tech preview releases we did

446
00:15:39,199 --> 00:15:43,199
four of those

447
00:15:40,959 --> 00:15:44,560
followed that up with alpha releases we

448
00:15:43,199 --> 00:15:47,199
did four of those

449
00:15:44,560 --> 00:15:48,959
and we did three beta releases then we

450
00:15:47,199 --> 00:15:50,560
got into release candidates this year

451
00:15:48,959 --> 00:15:54,239
and we did rc1

452
00:15:50,560 --> 00:15:55,758
rc2 and rc3 and the release candidates

453
00:15:54,240 --> 00:15:56,320
this year that's when things of course

454
00:15:55,759 --> 00:15:58,959
got

455
00:15:56,320 --> 00:16:00,000
started getting really uh serious when

456
00:15:58,959 --> 00:16:02,479
things started to look

457
00:16:00,000 --> 00:16:04,079
more and more enterprisey when things

458
00:16:02,480 --> 00:16:06,480
started to look more and more production

459
00:16:04,079 --> 00:16:06,479
worthy

460
00:16:06,639 --> 00:16:13,279
and so this entire process uh has taken

461
00:16:10,160 --> 00:16:14,480
over 34 months uh and that just kind of

462
00:16:13,279 --> 00:16:17,279
gives you a sense

463
00:16:14,480 --> 00:16:18,800
of how much love has gone into this and

464
00:16:17,279 --> 00:16:19,759
to further that point if you look at

465
00:16:18,800 --> 00:16:22,880
github

466
00:16:19,759 --> 00:16:23,360
it's over 5000 commits right that's some

467
00:16:22,880 --> 00:16:26,399
blood

468
00:16:23,360 --> 00:16:27,360
sweat and tears that have gone into this

469
00:16:26,399 --> 00:16:30,480
project

470
00:16:27,360 --> 00:16:32,959
to get this new platform off the ground

471
00:16:30,480 --> 00:16:34,399
and it's all kind of motivated by love

472
00:16:32,959 --> 00:16:35,359
right because we love our fellow

473
00:16:34,399 --> 00:16:38,000
defenders

474
00:16:35,360 --> 00:16:38,720
we wanted to build a platform by

475
00:16:38,000 --> 00:16:42,320
analysts

476
00:16:38,720 --> 00:16:43,759
for analysts and we'll stop at nothing

477
00:16:42,320 --> 00:16:46,399
to make sure that we

478
00:16:43,759 --> 00:16:48,560
are putting things out there that that

479
00:16:46,399 --> 00:16:51,600
we would use ourselves that we do

480
00:16:48,560 --> 00:16:53,199
use ourselves because hey guess what we

481
00:16:51,600 --> 00:16:55,759
eat our own dog food we

482
00:16:53,199 --> 00:16:57,279
run security onion 2 in production on

483
00:16:55,759 --> 00:17:00,560
our networks

484
00:16:57,279 --> 00:17:03,360
and we use it day in and day out

485
00:17:00,560 --> 00:17:05,280
and so that's that's really a testament

486
00:17:03,360 --> 00:17:06,160
to all the folks working behind the

487
00:17:05,280 --> 00:17:08,959
scenes

488
00:17:06,160 --> 00:17:10,400
that uh we are eating our own dog food

489
00:17:08,959 --> 00:17:10,720
and we're putting stuff out there that

490
00:17:10,400 --> 00:17:14,000
we

491
00:17:10,720 --> 00:17:14,000
are are proud of

492
00:17:14,160 --> 00:17:19,760
so how do you install security on you

493
00:17:17,599 --> 00:17:21,438
well you got a couple of options

494
00:17:19,760 --> 00:17:23,520
for most folks especially if it's your

495
00:17:21,439 --> 00:17:24,799
first time we'd highly recommend that

496
00:17:23,520 --> 00:17:27,839
you download

497
00:17:24,799 --> 00:17:29,120
our security onion 2 iso image it is

498
00:17:27,839 --> 00:17:33,440
based on cinos

499
00:17:29,120 --> 00:17:35,199
7 and the beauty of that iso image is it

500
00:17:33,440 --> 00:17:37,440
takes care of all the partitioning for

501
00:17:35,200 --> 00:17:39,760
you it's got everything baked into it

502
00:17:37,440 --> 00:17:41,440
so whether you have internet access or

503
00:17:39,760 --> 00:17:42,480
as mike mentioned if you're on an air

504
00:17:41,440 --> 00:17:44,799
gap network

505
00:17:42,480 --> 00:17:46,720
all you need is just that one iso image

506
00:17:44,799 --> 00:17:49,120
and it just installs

507
00:17:46,720 --> 00:17:51,200
and that works great now for some reason

508
00:17:49,120 --> 00:17:54,320
you don't want to use our iso image

509
00:17:51,200 --> 00:17:56,640
that's fine too because you can install

510
00:17:54,320 --> 00:18:00,080
all of our components on top of a

511
00:17:56,640 --> 00:18:04,720
standard vanilla cinahl7 or

512
00:18:00,080 --> 00:18:07,678
you can also choose ubuntu 1804

513
00:18:04,720 --> 00:18:08,880
now how does that work how in the world

514
00:18:07,679 --> 00:18:11,919
can we support

515
00:18:08,880 --> 00:18:13,440
both those platforms at the same time

516
00:18:11,919 --> 00:18:16,080
well it's because of a very conscious

517
00:18:13,440 --> 00:18:17,200
decision that we made way back in 2018

518
00:18:16,080 --> 00:18:19,280
and that was that

519
00:18:17,200 --> 00:18:21,120
the vast majority of our components were

520
00:18:19,280 --> 00:18:24,080
going to be delivered

521
00:18:21,120 --> 00:18:24,879
as docker containers being docker

522
00:18:24,080 --> 00:18:26,559
containers

523
00:18:24,880 --> 00:18:28,400
that means we're no longer limited to

524
00:18:26,559 --> 00:18:30,320
just the ubuntu platform

525
00:18:28,400 --> 00:18:31,440
because we're no longer building ubuntu

526
00:18:30,320 --> 00:18:34,639
packages

527
00:18:31,440 --> 00:18:37,600
now in addition to that we get some nice

528
00:18:34,640 --> 00:18:39,440
kind of side benefits because those

529
00:18:37,600 --> 00:18:41,520
docker containers really give us

530
00:18:39,440 --> 00:18:43,039
an extra level of isolation from one

531
00:18:41,520 --> 00:18:46,320
container to another

532
00:18:43,039 --> 00:18:49,039
into the host operating system itself

533
00:18:46,320 --> 00:18:51,280
and so you know by doing all this work

534
00:18:49,039 --> 00:18:53,360
by rebuilding our entire platform and

535
00:18:51,280 --> 00:18:56,320
basing it on docker containers

536
00:18:53,360 --> 00:18:58,879
we get something that's more flexible

537
00:18:56,320 --> 00:19:01,678
but that's also more secure

538
00:18:58,880 --> 00:19:03,600
and how do we actually orchestrate those

539
00:19:01,679 --> 00:19:04,320
containers well we use salt stack for

540
00:19:03,600 --> 00:19:07,520
that

541
00:19:04,320 --> 00:19:09,120
the idea there is that we define all of

542
00:19:07,520 --> 00:19:10,480
the configuration for the entire

543
00:19:09,120 --> 00:19:13,840
operating system

544
00:19:10,480 --> 00:19:16,080
as a set of states that saltstack is

545
00:19:13,840 --> 00:19:18,240
going to constantly maintain

546
00:19:16,080 --> 00:19:20,159
so as mike mentioned earlier you know we

547
00:19:18,240 --> 00:19:20,799
want folks to be able to configure their

548
00:19:20,160 --> 00:19:22,240
systems

549
00:19:20,799 --> 00:19:24,160
but we want to kind of put some

550
00:19:22,240 --> 00:19:25,840
guardrails on that so that folks don't

551
00:19:24,160 --> 00:19:27,520
shoot themselves in the foot

552
00:19:25,840 --> 00:19:29,280
and that's really where salt stack comes

553
00:19:27,520 --> 00:19:30,960
into play because

554
00:19:29,280 --> 00:19:33,120
we can allow you to configure your

555
00:19:30,960 --> 00:19:34,400
system but then salt stack is going to

556
00:19:33,120 --> 00:19:37,439
maintain

557
00:19:34,400 --> 00:19:40,320
those system states over time

558
00:19:37,440 --> 00:19:41,600
and so that becomes a very stable very

559
00:19:40,320 --> 00:19:44,559
reliable

560
00:19:41,600 --> 00:19:45,520
system for running these sensors in

561
00:19:44,559 --> 00:19:49,840
production

562
00:19:45,520 --> 00:19:51,440
across your enterprise in addition

563
00:19:49,840 --> 00:19:53,520
mike and team have really designed that

564
00:19:51,440 --> 00:19:56,320
salt stack orchestration

565
00:19:53,520 --> 00:19:57,918
to be centrally managed so you're doing

566
00:19:56,320 --> 00:20:00,159
everything from the manager

567
00:19:57,919 --> 00:20:02,080
so it doesn't matter whether you have 10

568
00:20:00,160 --> 00:20:04,400
sensors 100 sensors

569
00:20:02,080 --> 00:20:05,760
or a thousand sensors you're doing

570
00:20:04,400 --> 00:20:08,320
everything from the manager

571
00:20:05,760 --> 00:20:10,320
and salt stack is kind of acting as the

572
00:20:08,320 --> 00:20:11,120
bicycle to take care of the rest of the

573
00:20:10,320 --> 00:20:14,799
deployment

574
00:20:11,120 --> 00:20:17,840
for you so

575
00:20:14,799 --> 00:20:20,799
how do i make my adversaries cry with

576
00:20:17,840 --> 00:20:22,559
security onion

577
00:20:20,799 --> 00:20:24,480
here's kind of what it looks like here's

578
00:20:22,559 --> 00:20:25,600
kind of your typical security onion

579
00:20:24,480 --> 00:20:28,320
deployment

580
00:20:25,600 --> 00:20:29,199
so you've got your adversary out here on

581
00:20:28,320 --> 00:20:33,120
the big bad

582
00:20:29,200 --> 00:20:35,120
internet you've got a firewall here

583
00:20:33,120 --> 00:20:36,239
and typically what we recommend if

584
00:20:35,120 --> 00:20:38,000
you're starting your deployment of

585
00:20:36,240 --> 00:20:39,280
course you want to monitor north south

586
00:20:38,000 --> 00:20:40,720
traffic that's the traffic that's

587
00:20:39,280 --> 00:20:43,440
heading out your internet

588
00:20:40,720 --> 00:20:45,200
and you want to do so just inside that

589
00:20:43,440 --> 00:20:46,000
network firewall so that you're seeing

590
00:20:45,200 --> 00:20:48,320
real true

591
00:20:46,000 --> 00:20:50,159
internal ip addresses and you're not

592
00:20:48,320 --> 00:20:53,200
being confused by

593
00:20:50,159 --> 00:20:54,880
nad addresses or anything like that in

594
00:20:53,200 --> 00:20:56,240
addition to north south visibility if

595
00:20:54,880 --> 00:20:58,559
you're able to get

596
00:20:56,240 --> 00:21:01,120
some east west visibility as well that

597
00:20:58,559 --> 00:21:04,480
will help you to detect lateral movement

598
00:21:01,120 --> 00:21:06,799
so ideally you'd have a tap here for

599
00:21:04,480 --> 00:21:07,520
north-south traffic a tap for east-west

600
00:21:06,799 --> 00:21:10,000
traffic

601
00:21:07,520 --> 00:21:11,679
and then feeding both of those into

602
00:21:10,000 --> 00:21:13,520
security onion

603
00:21:11,679 --> 00:21:15,280
now as we're all aware more and more of

604
00:21:13,520 --> 00:21:17,120
our network traffic is becoming

605
00:21:15,280 --> 00:21:18,480
encrypted and that's typically a good

606
00:21:17,120 --> 00:21:21,520
thing for privacy

607
00:21:18,480 --> 00:21:22,799
however it makes our jobs as defenders a

608
00:21:21,520 --> 00:21:25,280
little bit more

609
00:21:22,799 --> 00:21:26,559
difficult and so because of that it's

610
00:21:25,280 --> 00:21:30,240
important for us

611
00:21:26,559 --> 00:21:34,320
to kind of gain back some visibility by

612
00:21:30,240 --> 00:21:36,080
going deeper into hosts and endpoints

613
00:21:34,320 --> 00:21:38,080
and so that's really where this part of

614
00:21:36,080 --> 00:21:41,120
the diagram comes into play where

615
00:21:38,080 --> 00:21:43,280
ideally we'd like to collect logs from

616
00:21:41,120 --> 00:21:44,719
your servers sitting in your data center

617
00:21:43,280 --> 00:21:46,559
we'd like to collect logs from your

618
00:21:44,720 --> 00:21:49,440
workstations and laptops

619
00:21:46,559 --> 00:21:50,559
and other endpoints we want to bring all

620
00:21:49,440 --> 00:21:53,919
of that information

621
00:21:50,559 --> 00:21:54,720
back to security onion so that you have

622
00:21:53,919 --> 00:21:57,520
a view

623
00:21:54,720 --> 00:21:58,559
of network visibility and the host based

624
00:21:57,520 --> 00:22:00,879
visibility

625
00:21:58,559 --> 00:22:01,600
and you're able to correlate between all

626
00:22:00,880 --> 00:22:04,159
of that

627
00:22:01,600 --> 00:22:06,080
and quickly hunt down those adversaries

628
00:22:04,159 --> 00:22:09,039
that are already hiding out

629
00:22:06,080 --> 00:22:09,039
in your environment

630
00:22:09,520 --> 00:22:13,760
so let's talk about the network

631
00:22:10,720 --> 00:22:15,039
visibility first so in security union 2

632
00:22:13,760 --> 00:22:17,679
we continue

633
00:22:15,039 --> 00:22:18,240
with suricata and that's going to

634
00:22:17,679 --> 00:22:21,760
provide

635
00:22:18,240 --> 00:22:23,200
our network based ids alerting so

636
00:22:21,760 --> 00:22:25,280
by default out of the box you're going

637
00:22:23,200 --> 00:22:27,039
to have the emerging threats rule set

638
00:22:25,280 --> 00:22:28,960
loaded into surikata it's going to be

639
00:22:27,039 --> 00:22:31,919
monitoring your network traffic

640
00:22:28,960 --> 00:22:33,679
if any traffic matches those rules then

641
00:22:31,919 --> 00:22:37,520
sarikata is going to fire

642
00:22:33,679 --> 00:22:38,320
alerts next because we all kind of

643
00:22:37,520 --> 00:22:41,360
realize

644
00:22:38,320 --> 00:22:42,720
that ids alerts are great for starting

645
00:22:41,360 --> 00:22:44,479
investigations

646
00:22:42,720 --> 00:22:46,799
but they don't always complete

647
00:22:44,480 --> 00:22:48,960
investigations in and of themselves

648
00:22:46,799 --> 00:22:49,918
it's important for us to have protocol

649
00:22:48,960 --> 00:22:52,960
metadata

650
00:22:49,919 --> 00:22:56,080
in order to surround those ids alerts

651
00:22:52,960 --> 00:22:58,400
with context that help us to determine

652
00:22:56,080 --> 00:22:59,520
is that ids alert a true positive or a

653
00:22:58,400 --> 00:23:02,240
false positive

654
00:22:59,520 --> 00:23:03,918
if it's a true positive do we even care

655
00:23:02,240 --> 00:23:06,159
about it

656
00:23:03,919 --> 00:23:08,159
and so that protocol metadata is going

657
00:23:06,159 --> 00:23:10,400
to be coming from either zeek

658
00:23:08,159 --> 00:23:11,840
or from surikata it's your choice it's

659
00:23:10,400 --> 00:23:14,159
up to you

660
00:23:11,840 --> 00:23:16,240
and then finally we have full packet

661
00:23:14,159 --> 00:23:18,720
capture as mike mentioned earlier

662
00:23:16,240 --> 00:23:20,080
we're using google stenographer for that

663
00:23:18,720 --> 00:23:24,080
very high performance

664
00:23:20,080 --> 00:23:26,799
it's indexed and it does a great job

665
00:23:24,080 --> 00:23:28,240
so here we have kind of the the trifecta

666
00:23:26,799 --> 00:23:30,240
of network visibility you've got your

667
00:23:28,240 --> 00:23:32,799
alerts your protocol metadata

668
00:23:30,240 --> 00:23:34,400
and your full packet capture and this

669
00:23:32,799 --> 00:23:37,200
really helps you to paint

670
00:23:34,400 --> 00:23:38,000
a more complete picture of what actually

671
00:23:37,200 --> 00:23:40,799
happened

672
00:23:38,000 --> 00:23:42,159
on your network now in a diagram it

673
00:23:40,799 --> 00:23:44,480
looks kind of like this you've got

674
00:23:42,159 --> 00:23:46,080
traffic coming into your sniffing

675
00:23:44,480 --> 00:23:48,320
interface

676
00:23:46,080 --> 00:23:50,480
and then if you're familiar with

677
00:23:48,320 --> 00:23:52,799
previous versions of security onion

678
00:23:50,480 --> 00:23:54,640
you may have seen where we used pf ring

679
00:23:52,799 --> 00:23:57,200
as a kernel-based

680
00:23:54,640 --> 00:23:59,039
load balancer no longer using pf ring

681
00:23:57,200 --> 00:24:00,559
now we're using af packet because it's

682
00:23:59,039 --> 00:24:04,240
built into the linux kernel

683
00:24:00,559 --> 00:24:05,918
by default and so consuming from af

684
00:24:04,240 --> 00:24:08,559
packet we have stenographer

685
00:24:05,919 --> 00:24:08,960
we have cericada we have zeke so of

686
00:24:08,559 --> 00:24:10,639
course

687
00:24:08,960 --> 00:24:12,880
stenographer is writing our full packet

688
00:24:10,640 --> 00:24:16,000
capture to nsm pcapp

689
00:24:12,880 --> 00:24:17,279
sorry kata is writing out alerts to nsm

690
00:24:16,000 --> 00:24:19,039
surikata

691
00:24:17,279 --> 00:24:21,440
and then zeke is writing out our

692
00:24:19,039 --> 00:24:25,440
protocol metadata to nsm z

693
00:24:21,440 --> 00:24:27,600
logs and it's also extracting

694
00:24:25,440 --> 00:24:29,760
kind of known file types things like

695
00:24:27,600 --> 00:24:32,719
windows exes and pdf

696
00:24:29,760 --> 00:24:33,120
files and files that are typically used

697
00:24:32,720 --> 00:24:35,360
in

698
00:24:33,120 --> 00:24:36,959
attacks so zeke is automatically

699
00:24:35,360 --> 00:24:40,000
extracting those files

700
00:24:36,960 --> 00:24:41,200
so that they can then be analyzed by

701
00:24:40,000 --> 00:24:42,400
strelka

702
00:24:41,200 --> 00:24:44,559
and so that's a pretty cool

703
00:24:42,400 --> 00:24:48,080
functionality in and of itself to have

704
00:24:44,559 --> 00:24:50,960
automated file extraction and automated

705
00:24:48,080 --> 00:24:50,960
file analysis

706
00:24:51,600 --> 00:24:56,000
now let's talk about endpoint visibility

707
00:24:56,080 --> 00:24:59,360
so new in security onion 2 is support

708
00:24:58,960 --> 00:25:02,440
for

709
00:24:59,360 --> 00:25:04,799
os query os query is a great

710
00:25:02,440 --> 00:25:06,320
cross-platform endpoint agent it's a

711
00:25:04,799 --> 00:25:07,520
great way to collect logs from your

712
00:25:06,320 --> 00:25:10,320
endpoints

713
00:25:07,520 --> 00:25:10,879
but more than just logs it's a great way

714
00:25:10,320 --> 00:25:13,439
to

715
00:25:10,880 --> 00:25:14,559
as the name implies query those

716
00:25:13,440 --> 00:25:17,200
endpoints

717
00:25:14,559 --> 00:25:18,080
so you could run a query a sql like

718
00:25:17,200 --> 00:25:21,200
query

719
00:25:18,080 --> 00:25:22,480
that says select star from scheduled

720
00:25:21,200 --> 00:25:25,279
tasks

721
00:25:22,480 --> 00:25:26,559
across my endpoints and i could get all

722
00:25:25,279 --> 00:25:30,159
of that scheduled task

723
00:25:26,559 --> 00:25:31,918
information across those endpoints

724
00:25:30,159 --> 00:25:33,840
so that's a really great capability to

725
00:25:31,919 --> 00:25:34,960
have especially from an instant response

726
00:25:33,840 --> 00:25:36,320
standpoint

727
00:25:34,960 --> 00:25:37,760
once you kind of have that network

728
00:25:36,320 --> 00:25:38,080
visibility in place and you're getting

729
00:25:37,760 --> 00:25:40,559
your

730
00:25:38,080 --> 00:25:42,559
alerts and your triaging alerts and now

731
00:25:40,559 --> 00:25:43,600
you're engaging the incident response

732
00:25:42,559 --> 00:25:45,520
process

733
00:25:43,600 --> 00:25:47,600
now maybe we want to go and look at the

734
00:25:45,520 --> 00:25:48,960
host-based logs that came from os query

735
00:25:47,600 --> 00:25:51,760
and we might also want to

736
00:25:48,960 --> 00:25:53,840
interrogate that host using that sort of

737
00:25:51,760 --> 00:25:56,720
live query capability

738
00:25:53,840 --> 00:25:57,678
uh and the the beauty of this solution

739
00:25:56,720 --> 00:25:59,919
is that

740
00:25:57,679 --> 00:26:00,880
we also have fleet which is the web

741
00:25:59,919 --> 00:26:03,919
interface

742
00:26:00,880 --> 00:26:06,159
to manage all those os query agents

743
00:26:03,919 --> 00:26:07,360
we'll actually see that in the demo a

744
00:26:06,159 --> 00:26:09,279
little bit later on

745
00:26:07,360 --> 00:26:11,439
but it really becomes a very complete

746
00:26:09,279 --> 00:26:12,240
solution of getting that host-based

747
00:26:11,440 --> 00:26:14,559
visibility

748
00:26:12,240 --> 00:26:15,520
being able to interrogate those

749
00:26:14,559 --> 00:26:18,240
endpoints

750
00:26:15,520 --> 00:26:21,520
from a single central web interface it's

751
00:26:18,240 --> 00:26:23,200
very very powerful solution

752
00:26:21,520 --> 00:26:25,600
now if you don't want to use os query we

753
00:26:23,200 --> 00:26:27,440
do have elastic beats of course we have

754
00:26:25,600 --> 00:26:28,639
the elastic stack built right into

755
00:26:27,440 --> 00:26:31,840
security onion

756
00:26:28,640 --> 00:26:34,960
and so any of those elastic beats family

757
00:26:31,840 --> 00:26:36,320
of agents will hook right up to that

758
00:26:34,960 --> 00:26:38,799
elastic stack so

759
00:26:36,320 --> 00:26:39,678
you can deploy when log beats you can

760
00:26:38,799 --> 00:26:42,158
deploy

761
00:26:39,679 --> 00:26:43,120
filebeat audit b what have you and

762
00:26:42,159 --> 00:26:45,520
they're going to connect

763
00:26:43,120 --> 00:26:46,399
back to that elastic stack that's built

764
00:26:45,520 --> 00:26:50,720
right into

765
00:26:46,400 --> 00:26:53,120
security online we've also got wazoo

766
00:26:50,720 --> 00:26:54,559
host-based intrusion detection system

767
00:26:53,120 --> 00:26:55,840
uh if you've been around the security on

768
00:26:54,559 --> 00:26:57,120
your community for a while you may

769
00:26:55,840 --> 00:26:59,279
remember osek

770
00:26:57,120 --> 00:27:00,559
you kind of transitioned from osec to

771
00:26:59,279 --> 00:27:01,760
wazoo which is kind of the next

772
00:27:00,559 --> 00:27:04,240
generation fork

773
00:27:01,760 --> 00:27:06,320
of osec but it's another great

774
00:27:04,240 --> 00:27:08,799
cross-platform utility for

775
00:27:06,320 --> 00:27:10,639
not just log collection but it gives you

776
00:27:08,799 --> 00:27:11,679
file integrity checking and rootkit

777
00:27:10,640 --> 00:27:15,120
detection

778
00:27:11,679 --> 00:27:16,880
and some other nice features as well

779
00:27:15,120 --> 00:27:18,719
so i want to point out here that you

780
00:27:16,880 --> 00:27:20,159
know we're giving you some options we're

781
00:27:18,720 --> 00:27:23,039
not necessarily saying

782
00:27:20,159 --> 00:27:23,919
you know thou shalt use this option or

783
00:27:23,039 --> 00:27:25,360
this option

784
00:27:23,919 --> 00:27:26,960
but we're giving you different options

785
00:27:25,360 --> 00:27:30,080
realizing of course that

786
00:27:26,960 --> 00:27:31,520
different enterprise shops have

787
00:27:30,080 --> 00:27:33,760
different needs they have different

788
00:27:31,520 --> 00:27:35,360
desires and they have different tools

789
00:27:33,760 --> 00:27:38,320
that they're already using

790
00:27:35,360 --> 00:27:39,120
and so we want to be able to integrate

791
00:27:38,320 --> 00:27:41,039
with

792
00:27:39,120 --> 00:27:42,879
the best of breed options that are out

793
00:27:41,039 --> 00:27:43,760
there and kind of meet folks where

794
00:27:42,880 --> 00:27:45,440
they're at

795
00:27:43,760 --> 00:27:47,600
and be able to plug into their

796
00:27:45,440 --> 00:27:49,600
infrastructures

797
00:27:47,600 --> 00:27:51,678
so that's a kind of a brief look at some

798
00:27:49,600 --> 00:27:52,639
of the endpoint agents that we integrate

799
00:27:51,679 --> 00:27:54,640
with

800
00:27:52,640 --> 00:27:56,640
but in addition to that of course you

801
00:27:54,640 --> 00:27:57,760
know we all have windows endpoints on

802
00:27:56,640 --> 00:27:59,360
our network

803
00:27:57,760 --> 00:28:01,360
and those are certainly target-rich

804
00:27:59,360 --> 00:28:04,479
environments when it comes to

805
00:28:01,360 --> 00:28:05,678
adversaries and so for those windows

806
00:28:04,480 --> 00:28:08,960
endpoints of course

807
00:28:05,679 --> 00:28:10,960
sysmon is a defender's best friend

808
00:28:08,960 --> 00:28:12,640
because that free utility from the

809
00:28:10,960 --> 00:28:15,440
assist internals team

810
00:28:12,640 --> 00:28:16,480
at microsoft under the direction of mark

811
00:28:15,440 --> 00:28:18,640
racinovich

812
00:28:16,480 --> 00:28:20,799
is giving you that great comprehensive

813
00:28:18,640 --> 00:28:21,679
logging for your windows endpoints to

814
00:28:20,799 --> 00:28:24,320
include

815
00:28:21,679 --> 00:28:25,919
process creation and network connections

816
00:28:24,320 --> 00:28:28,960
and registry changes

817
00:28:25,919 --> 00:28:31,440
and all kinds of great visibility there

818
00:28:28,960 --> 00:28:32,480
and so that sysmon is going to work hand

819
00:28:31,440 --> 00:28:34,640
in hand

820
00:28:32,480 --> 00:28:36,880
uh regardless of which one of these

821
00:28:34,640 --> 00:28:37,840
agents you choose as your transport

822
00:28:36,880 --> 00:28:40,159
mechanism

823
00:28:37,840 --> 00:28:41,199
we want to pull those sysmon logs off

824
00:28:40,159 --> 00:28:43,200
that end point

825
00:28:41,200 --> 00:28:44,799
and get them into security onion and be

826
00:28:43,200 --> 00:28:47,919
able to slice them and dice them

827
00:28:44,799 --> 00:28:51,279
with our hunting capabilities

828
00:28:47,919 --> 00:28:52,880
and be able to find that adversary

829
00:28:51,279 --> 00:28:56,080
activity

830
00:28:52,880 --> 00:28:57,760
wherever it may be on our network

831
00:28:56,080 --> 00:29:00,320
in addition to that of course autoruns

832
00:28:57,760 --> 00:29:01,279
is another member of the sysinternals

833
00:29:00,320 --> 00:29:03,120
family

834
00:29:01,279 --> 00:29:05,520
and it gives you some nice visibility

835
00:29:03,120 --> 00:29:08,799
into kind of those persistence

836
00:29:05,520 --> 00:29:11,840
mechanisms on those windows endpoints

837
00:29:08,799 --> 00:29:12,639
so again you may deploy auto runs you

838
00:29:11,840 --> 00:29:14,879
may have

839
00:29:12,640 --> 00:29:16,799
a mechanism which transports that

840
00:29:14,880 --> 00:29:19,279
information back to security onion

841
00:29:16,799 --> 00:29:21,360
on a periodic basis so that you can then

842
00:29:19,279 --> 00:29:22,000
slice and dice that information and look

843
00:29:21,360 --> 00:29:24,959
for those

844
00:29:22,000 --> 00:29:26,320
anomalies look for those outliers that

845
00:29:24,960 --> 00:29:28,640
might be indicative

846
00:29:26,320 --> 00:29:30,960
of persistence mechanisms in your

847
00:29:28,640 --> 00:29:32,960
environment

848
00:29:30,960 --> 00:29:34,480
so that's a very brief overview of kind

849
00:29:32,960 --> 00:29:36,640
of network visibility

850
00:29:34,480 --> 00:29:38,159
and endpoint visibility so kind of once

851
00:29:36,640 --> 00:29:41,039
you have

852
00:29:38,159 --> 00:29:42,000
both of those pieces of the puzzle in

853
00:29:41,039 --> 00:29:44,960
place

854
00:29:42,000 --> 00:29:45,679
now you're ready to log into security

855
00:29:44,960 --> 00:29:47,840
onion

856
00:29:45,679 --> 00:29:48,960
as mike mentioned uh this new web

857
00:29:47,840 --> 00:29:51,760
interface that we've built

858
00:29:48,960 --> 00:29:52,480
called security onion console or sock

859
00:29:51,760 --> 00:29:56,000
for short

860
00:29:52,480 --> 00:29:56,960
see what we did there so sock is going

861
00:29:56,000 --> 00:30:00,799
to

862
00:29:56,960 --> 00:30:02,320
include kind of the main web interfaces

863
00:30:00,799 --> 00:30:04,320
that you're going to use on a daily

864
00:30:02,320 --> 00:30:08,639
basis a lot that's built in

865
00:30:04,320 --> 00:30:09,200
natively but we also give you hooks to

866
00:30:08,640 --> 00:30:12,240
spawn

867
00:30:09,200 --> 00:30:15,760
external tools as well

868
00:30:12,240 --> 00:30:17,279
so sock is going to include uh our new

869
00:30:15,760 --> 00:30:18,960
hunt interface it's going to include our

870
00:30:17,279 --> 00:30:19,600
new pcap interface but it's also going

871
00:30:18,960 --> 00:30:24,000
to give you

872
00:30:19,600 --> 00:30:26,799
links to go to cabana to go to grafana

873
00:30:24,000 --> 00:30:27,520
fleet the hive all of these other things

874
00:30:26,799 --> 00:30:30,240
that you see

875
00:30:27,520 --> 00:30:32,639
here so security on your console is

876
00:30:30,240 --> 00:30:35,200
really your one-stop shop

877
00:30:32,640 --> 00:30:36,000
for getting access to all of these

878
00:30:35,200 --> 00:30:40,320
interfaces

879
00:30:36,000 --> 00:30:40,320
and all of the data that they provide

880
00:30:40,399 --> 00:30:46,959
now this is something that we are really

881
00:30:43,520 --> 00:30:49,279
really excited about so even for those

882
00:30:46,960 --> 00:30:52,480
of you that have been closely tracking

883
00:30:49,279 --> 00:30:56,240
our release candidate versions rc1

884
00:30:52,480 --> 00:30:58,720
rc2 and rc3 chances are

885
00:30:56,240 --> 00:30:59,840
you haven't even seen this yet this is

886
00:30:58,720 --> 00:31:02,880
brand new

887
00:30:59,840 --> 00:31:05,279
it's hot fresh out of the oven this is

888
00:31:02,880 --> 00:31:07,200
our brand new alerts interface

889
00:31:05,279 --> 00:31:09,120
uh this is built right into security on

890
00:31:07,200 --> 00:31:11,039
your console natively

891
00:31:09,120 --> 00:31:12,879
and you know we kind of started with the

892
00:31:11,039 --> 00:31:14,559
question

893
00:31:12,880 --> 00:31:16,960
you know what's what's the pain point

894
00:31:14,559 --> 00:31:19,840
for defenders right and

895
00:31:16,960 --> 00:31:20,480
and certainly you connect a security

896
00:31:19,840 --> 00:31:21,918
onion

897
00:31:20,480 --> 00:31:23,760
sensor to your network doesn't even

898
00:31:21,919 --> 00:31:26,720
matter if it's security onion or not

899
00:31:23,760 --> 00:31:28,320
any standard intrusion detection sensor

900
00:31:26,720 --> 00:31:29,279
second you connect it to your network

901
00:31:28,320 --> 00:31:32,240
it's generating

902
00:31:29,279 --> 00:31:34,640
lots and lots of alerts and it's now

903
00:31:32,240 --> 00:31:36,320
your responsibility as a defender to

904
00:31:34,640 --> 00:31:39,200
weed through those alerts

905
00:31:36,320 --> 00:31:39,918
so you've got to triage hundreds maybe

906
00:31:39,200 --> 00:31:43,279
thousands

907
00:31:39,919 --> 00:31:45,200
maybe tens of thousands of alerts

908
00:31:43,279 --> 00:31:47,120
coming into your environment in a rapid

909
00:31:45,200 --> 00:31:47,600
fashion you've got to figure out are

910
00:31:47,120 --> 00:31:50,080
these

911
00:31:47,600 --> 00:31:51,678
true positives or false positives do i

912
00:31:50,080 --> 00:31:53,760
care about them do i need to engage the

913
00:31:51,679 --> 00:31:57,840
incident response process

914
00:31:53,760 --> 00:32:01,519
and so we said what can we do

915
00:31:57,840 --> 00:32:04,799
to create really the simplest interface

916
00:32:01,519 --> 00:32:08,080
possible but at the same time

917
00:32:04,799 --> 00:32:11,600
be able to scale and handle the highest

918
00:32:08,080 --> 00:32:15,519
number of alerts possible

919
00:32:11,600 --> 00:32:18,320
and so we designed a brand new interface

920
00:32:15,519 --> 00:32:19,120
that enables you to slice and dice

921
00:32:18,320 --> 00:32:22,158
alerts

922
00:32:19,120 --> 00:32:24,799
and handle really high numbers of alerts

923
00:32:22,159 --> 00:32:26,080
very quickly and easily and as you're

924
00:32:24,799 --> 00:32:28,960
working through them

925
00:32:26,080 --> 00:32:30,480
you then have some options you can if

926
00:32:28,960 --> 00:32:32,720
it's a false positive you can

927
00:32:30,480 --> 00:32:33,760
acknowledge that alert just make it

928
00:32:32,720 --> 00:32:36,480
disappear

929
00:32:33,760 --> 00:32:38,000
from this alert cue and that's kind of

930
00:32:36,480 --> 00:32:39,279
another thing that's important right is

931
00:32:38,000 --> 00:32:41,600
this idea of

932
00:32:39,279 --> 00:32:44,000
a queue because what we'd like to see is

933
00:32:41,600 --> 00:32:46,158
that folks get into the habit of

934
00:32:44,000 --> 00:32:47,600
logging in when their shift starts and

935
00:32:46,159 --> 00:32:49,919
they start working down

936
00:32:47,600 --> 00:32:50,639
that queue they try to work that q down

937
00:32:49,919 --> 00:32:53,200
to zero

938
00:32:50,640 --> 00:32:55,440
every single day to try to keep that q

939
00:32:53,200 --> 00:32:57,279
at a manageable size and that's how we

940
00:32:55,440 --> 00:32:59,840
stay one step ahead

941
00:32:57,279 --> 00:33:01,279
of our adversaries so as you're working

942
00:32:59,840 --> 00:33:02,559
through your queue you can either

943
00:33:01,279 --> 00:33:05,840
acknowledge alerts

944
00:33:02,559 --> 00:33:07,760
or if it's something more interesting

945
00:33:05,840 --> 00:33:09,519
if it's something more suspicious

946
00:33:07,760 --> 00:33:12,320
possibly malicious

947
00:33:09,519 --> 00:33:13,120
you might then want to escalate that

948
00:33:12,320 --> 00:33:15,519
alert

949
00:33:13,120 --> 00:33:16,879
so when you escalate an alert in this

950
00:33:15,519 --> 00:33:21,440
new interface

951
00:33:16,880 --> 00:33:24,320
it's going to create a case in the hive

952
00:33:21,440 --> 00:33:25,200
so the cool thing here is that i can be

953
00:33:24,320 --> 00:33:27,200
working in

954
00:33:25,200 --> 00:33:28,559
alerts and i'm working my alerts queue

955
00:33:27,200 --> 00:33:30,640
down and

956
00:33:28,559 --> 00:33:32,240
mike could be sitting at his security

957
00:33:30,640 --> 00:33:33,360
onion console and he could be looking at

958
00:33:32,240 --> 00:33:34,799
alerts as well

959
00:33:33,360 --> 00:33:36,479
we're both kind of working the queue

960
00:33:34,799 --> 00:33:38,960
down but

961
00:33:36,480 --> 00:33:40,480
as we're finding things of interest and

962
00:33:38,960 --> 00:33:43,840
we're escalating things

963
00:33:40,480 --> 00:33:44,240
to the hive to create cases uh we then

964
00:33:43,840 --> 00:33:46,879
have

965
00:33:44,240 --> 00:33:48,960
kind of a single place to work through

966
00:33:46,880 --> 00:33:52,480
those cases together

967
00:33:48,960 --> 00:33:54,159
uh and you know even in the case of

968
00:33:52,480 --> 00:33:55,919
i found an alert and he found a similar

969
00:33:54,159 --> 00:33:57,840
alert at the same time and we both

970
00:33:55,919 --> 00:34:00,000
escalated to the hive and created

971
00:33:57,840 --> 00:34:01,840
separate cases we could then merge those

972
00:34:00,000 --> 00:34:03,919
cases together

973
00:34:01,840 --> 00:34:06,399
and now we're working off of one case

974
00:34:03,919 --> 00:34:09,760
we're working off of one sheet of paper

975
00:34:06,399 --> 00:34:12,480
and we're we're getting

976
00:34:09,760 --> 00:34:14,639
that much better at chasing those

977
00:34:12,480 --> 00:34:16,879
adversaries down

978
00:34:14,639 --> 00:34:18,800
and kicking them out of the network as

979
00:34:16,879 --> 00:34:19,759
quickly as possible

980
00:34:18,800 --> 00:34:21,359
some other things you can do with this

981
00:34:19,760 --> 00:34:23,119
new alerts interface of course you can

982
00:34:21,359 --> 00:34:23,839
very quickly and easily pivot from an

983
00:34:23,119 --> 00:34:26,240
alert

984
00:34:23,839 --> 00:34:27,040
to full packet capture you can pivot

985
00:34:26,239 --> 00:34:28,638
from an alert

986
00:34:27,040 --> 00:34:30,560
to our hunting interface which we'll

987
00:34:28,639 --> 00:34:33,200
talk about next so if you need to get

988
00:34:30,560 --> 00:34:35,040
additional context around that alert

989
00:34:33,199 --> 00:34:37,118
you can do that as well another thing i

990
00:34:35,040 --> 00:34:37,679
should mention is that this is not just

991
00:34:37,119 --> 00:34:39,919
for

992
00:34:37,679 --> 00:34:41,440
suricata alerts as you see on the screen

993
00:34:39,918 --> 00:34:43,679
so it's not just for

994
00:34:41,440 --> 00:34:44,560
network-based ids alerts but it also

995
00:34:43,679 --> 00:34:47,359
gives you

996
00:34:44,560 --> 00:34:48,560
host-based ids alerts coming from wazoo

997
00:34:47,359 --> 00:34:51,598
it also gives you

998
00:34:48,560 --> 00:34:52,639
yara matches coming from strelka and it

999
00:34:51,599 --> 00:34:54,800
also gives you

1000
00:34:52,639 --> 00:34:56,720
alerts coming from playbook which we'll

1001
00:34:54,800 --> 00:35:00,320
talk about in a few minutes

1002
00:34:56,719 --> 00:35:03,359
so again we are crazy excited about

1003
00:35:00,320 --> 00:35:06,000
this insane new alerts interface

1004
00:35:03,359 --> 00:35:06,880
uh we think that it turned out insanely

1005
00:35:06,000 --> 00:35:09,680
great

1006
00:35:06,880 --> 00:35:11,200
uh as steve jobs used to say so we're

1007
00:35:09,680 --> 00:35:12,799
very excited about that we're excited to

1008
00:35:11,200 --> 00:35:14,960
get it into your hands and let you give

1009
00:35:12,800 --> 00:35:18,480
us some feedback on what you think of it

1010
00:35:14,960 --> 00:35:20,320
we think you're going to like it a lot

1011
00:35:18,480 --> 00:35:21,520
so i mentioned that you could pivot from

1012
00:35:20,320 --> 00:35:24,800
alerts to

1013
00:35:21,520 --> 00:35:26,560
our hunt interface and so if you've been

1014
00:35:24,800 --> 00:35:28,000
following release candidates you've

1015
00:35:26,560 --> 00:35:28,960
probably played with this new hunt

1016
00:35:28,000 --> 00:35:31,760
interface

1017
00:35:28,960 --> 00:35:32,960
and we're very excited about it as well

1018
00:35:31,760 --> 00:35:37,119
and so

1019
00:35:32,960 --> 00:35:39,280
hunt is a little bit more uh

1020
00:35:37,119 --> 00:35:40,800
powerful than alerts it's it's got a

1021
00:35:39,280 --> 00:35:41,280
little bit more going on in the screen

1022
00:35:40,800 --> 00:35:43,440
but

1023
00:35:41,280 --> 00:35:45,359
we need more data at our fingertips when

1024
00:35:43,440 --> 00:35:46,880
it comes to threat hunting

1025
00:35:45,359 --> 00:35:49,279
right because it's it's not just as

1026
00:35:46,880 --> 00:35:51,920
simple as show me an alert

1027
00:35:49,280 --> 00:35:52,800
it's more about me as a defender getting

1028
00:35:51,920 --> 00:35:55,760
creative

1029
00:35:52,800 --> 00:35:56,480
and really trying to get in that mindset

1030
00:35:55,760 --> 00:35:58,560
of being an

1031
00:35:56,480 --> 00:36:00,560
adversary and what's that adversary

1032
00:35:58,560 --> 00:36:02,960
actually trying to do to me

1033
00:36:00,560 --> 00:36:04,240
and what kind of a query can i run to

1034
00:36:02,960 --> 00:36:07,680
try to detect

1035
00:36:04,240 --> 00:36:10,560
that kind of activity and so

1036
00:36:07,680 --> 00:36:12,000
you know we tried to build the most

1037
00:36:10,560 --> 00:36:15,040
efficient interface

1038
00:36:12,000 --> 00:36:16,160
for threat hunting you know we want to

1039
00:36:15,040 --> 00:36:18,560
be able to

1040
00:36:16,160 --> 00:36:20,160
write our own queries from scratch we

1041
00:36:18,560 --> 00:36:23,520
want to be able to

1042
00:36:20,160 --> 00:36:24,480
perform arbitrary group buys and be able

1043
00:36:23,520 --> 00:36:26,880
to do

1044
00:36:24,480 --> 00:36:28,240
multiple group buys and so this becomes

1045
00:36:26,880 --> 00:36:31,280
very very powerful

1046
00:36:28,240 --> 00:36:33,200
when it comes to taking lots and lots of

1047
00:36:31,280 --> 00:36:35,520
data from across your enterprise

1048
00:36:33,200 --> 00:36:38,000
and looking for those statistical

1049
00:36:35,520 --> 00:36:40,079
anomalies looking for those outliers

1050
00:36:38,000 --> 00:36:41,760
that multiple group by is going to help

1051
00:36:40,079 --> 00:36:43,760
you to pinpoint

1052
00:36:41,760 --> 00:36:45,680
that needle in the needle stack that

1053
00:36:43,760 --> 00:36:47,599
you're looking for

1054
00:36:45,680 --> 00:36:48,960
we give you some nice visualization so

1055
00:36:47,599 --> 00:36:51,119
most most occurrences

1056
00:36:48,960 --> 00:36:52,480
is going to be like your top 10 fewest

1057
00:36:51,119 --> 00:36:54,800
occurrences is going to be like your

1058
00:36:52,480 --> 00:36:57,280
bottom 10 your long tail analysis

1059
00:36:54,800 --> 00:36:58,720
we give you a timeline we give you a

1060
00:36:57,280 --> 00:37:01,440
group metrics table

1061
00:36:58,720 --> 00:37:03,359
which does that aggregated view it does

1062
00:37:01,440 --> 00:37:06,640
that stacking for you

1063
00:37:03,359 --> 00:37:08,319
and below that if we were to

1064
00:37:06,640 --> 00:37:10,240
pull this page you'd actually see the

1065
00:37:08,320 --> 00:37:13,040
detailed view down at the bottom

1066
00:37:10,240 --> 00:37:13,359
so the nice thing about hunt is it gives

1067
00:37:13,040 --> 00:37:16,240
you

1068
00:37:13,359 --> 00:37:17,440
that really sort of high level overview

1069
00:37:16,240 --> 00:37:19,439
it gives you that kind of

1070
00:37:17,440 --> 00:37:20,640
mid-level overview which is kind of the

1071
00:37:19,440 --> 00:37:23,200
aggregated or

1072
00:37:20,640 --> 00:37:26,720
stacked view and then it's got all the

1073
00:37:23,200 --> 00:37:29,919
detailed nitty gritty down at the bottom

1074
00:37:26,720 --> 00:37:32,160
and then to make it even better uh we

1075
00:37:29,920 --> 00:37:34,320
we recently developed a a quick action

1076
00:37:32,160 --> 00:37:36,078
bar so that really any piece of data

1077
00:37:34,320 --> 00:37:38,400
that you find in hunt or

1078
00:37:36,079 --> 00:37:40,320
in alerts for that matter you can simply

1079
00:37:38,400 --> 00:37:41,760
click on that piece of data maybe it's

1080
00:37:40,320 --> 00:37:43,920
an ip address or

1081
00:37:41,760 --> 00:37:45,280
a domain name or what have you it's

1082
00:37:43,920 --> 00:37:47,040
going to bring up the quick action bar

1083
00:37:45,280 --> 00:37:49,280
and that allows you to

1084
00:37:47,040 --> 00:37:50,079
include or exclude that term in your

1085
00:37:49,280 --> 00:37:52,800
search

1086
00:37:50,079 --> 00:37:54,880
you can pivot to full packet capture you

1087
00:37:52,800 --> 00:37:56,880
can start a brand new search for just

1088
00:37:54,880 --> 00:37:59,920
that search term itself

1089
00:37:56,880 --> 00:38:02,560
you can pivot to google virus total the

1090
00:37:59,920 --> 00:38:04,480
sky is the limit when it comes to really

1091
00:38:02,560 --> 00:38:05,440
kind of customizing that quick action

1092
00:38:04,480 --> 00:38:08,720
bar

1093
00:38:05,440 --> 00:38:09,760
and really giving you those actions that

1094
00:38:08,720 --> 00:38:11,919
you need

1095
00:38:09,760 --> 00:38:15,040
as a threat hunter to quickly slice and

1096
00:38:11,920 --> 00:38:15,040
dice your data

1097
00:38:15,440 --> 00:38:18,560
one of the things i mentioned in terms

1098
00:38:16,880 --> 00:38:19,200
of pivoting is pivoting to full packet

1099
00:38:18,560 --> 00:38:21,119
capture

1100
00:38:19,200 --> 00:38:23,839
we talked before about how we built a

1101
00:38:21,119 --> 00:38:26,720
brand new pcapp web interface

1102
00:38:23,839 --> 00:38:27,359
as a front end for google stenographer

1103
00:38:26,720 --> 00:38:29,118
and so

1104
00:38:27,359 --> 00:38:30,560
the the main screenshot that you see

1105
00:38:29,119 --> 00:38:34,400
here that's kind of the

1106
00:38:30,560 --> 00:38:36,560
default overview so you kind of get your

1107
00:38:34,400 --> 00:38:38,560
your tcp flags shown here you kind of

1108
00:38:36,560 --> 00:38:40,320
get a sense of the conversation

1109
00:38:38,560 --> 00:38:42,078
but you can flip a couple of buttons and

1110
00:38:40,320 --> 00:38:44,400
you can change that to the ascii

1111
00:38:42,079 --> 00:38:46,560
transcript mode and that's where you you

1112
00:38:44,400 --> 00:38:48,000
really get a good view of what actually

1113
00:38:46,560 --> 00:38:51,040
transpired

1114
00:38:48,000 --> 00:38:52,560
in that conversation itself

1115
00:38:51,040 --> 00:38:54,480
so we're really excited about that and

1116
00:38:52,560 --> 00:38:55,359
of course you can download the pcap

1117
00:38:54,480 --> 00:38:58,079
itself

1118
00:38:55,359 --> 00:38:58,640
so if you want to download the pcap and

1119
00:38:58,079 --> 00:39:00,640
maybe

1120
00:38:58,640 --> 00:39:01,839
extract files do reverse engineering

1121
00:39:00,640 --> 00:39:03,920
whatever you want to do

1122
00:39:01,839 --> 00:39:06,160
that capability is built right in as

1123
00:39:03,920 --> 00:39:06,160
well

1124
00:39:06,800 --> 00:39:10,960
now of course uh being based on the

1125
00:39:08,880 --> 00:39:13,359
elastic stack we do have cabana

1126
00:39:10,960 --> 00:39:14,079
it's still in there you can still use it

1127
00:39:13,359 --> 00:39:16,000
we

1128
00:39:14,079 --> 00:39:17,599
spent a lot of time rebuilding every

1129
00:39:16,000 --> 00:39:20,800
single one of our dashboards

1130
00:39:17,599 --> 00:39:24,560
for secured engine 2 to make them

1131
00:39:20,800 --> 00:39:27,680
faster more efficient and because we

1132
00:39:24,560 --> 00:39:28,640
we redid all of our back end ingest

1133
00:39:27,680 --> 00:39:30,960
parsers

1134
00:39:28,640 --> 00:39:33,040
to really align all of our data types

1135
00:39:30,960 --> 00:39:35,040
with elastic common schema

1136
00:39:33,040 --> 00:39:37,200
again really trying to integrate with as

1137
00:39:35,040 --> 00:39:40,960
many communities as possible

1138
00:39:37,200 --> 00:39:42,319
to try to meet defenders where they are

1139
00:39:40,960 --> 00:39:44,160
and be able to integrate with as many

1140
00:39:42,320 --> 00:39:47,359
technologies as possible

1141
00:39:44,160 --> 00:39:48,078
so elastic common schema it's it's all

1142
00:39:47,359 --> 00:39:49,598
in there

1143
00:39:48,079 --> 00:39:51,440
cabana is there if you want to use

1144
00:39:49,599 --> 00:39:54,720
kibana we've got a lot of great

1145
00:39:51,440 --> 00:39:56,640
dashboards built into that

1146
00:39:54,720 --> 00:39:58,240
cyber chef cyber chef has been a big

1147
00:39:56,640 --> 00:39:59,200
part of security onion for a couple of

1148
00:39:58,240 --> 00:40:02,078
years now

1149
00:39:59,200 --> 00:40:04,399
and it's a great web interface for

1150
00:40:02,079 --> 00:40:05,760
encoding and decoding and really taking

1151
00:40:04,400 --> 00:40:08,560
those kind of

1152
00:40:05,760 --> 00:40:08,800
random looking blobs that you might find

1153
00:40:08,560 --> 00:40:11,040
in

1154
00:40:08,800 --> 00:40:13,280
investigation and trying to decode them

1155
00:40:11,040 --> 00:40:15,040
and make sense of them

1156
00:40:13,280 --> 00:40:18,240
so that's a great tool that continues to

1157
00:40:15,040 --> 00:40:20,400
be included in security onion

1158
00:40:18,240 --> 00:40:22,240
now at last year's security conference

1159
00:40:20,400 --> 00:40:25,520
josh brauer gave a great talk

1160
00:40:22,240 --> 00:40:29,520
on what he called playbook

1161
00:40:25,520 --> 00:40:31,839
and the idea here is that we want to

1162
00:40:29,520 --> 00:40:33,920
do a couple of things we want to pull

1163
00:40:31,839 --> 00:40:35,680
rules from the sigma community

1164
00:40:33,920 --> 00:40:37,040
and this is a great community that

1165
00:40:35,680 --> 00:40:40,560
strives to

1166
00:40:37,040 --> 00:40:42,800
build sort of platform agnostic rules

1167
00:40:40,560 --> 00:40:43,759
for detecting evil in your environment

1168
00:40:42,800 --> 00:40:46,560
what does that mean

1169
00:40:43,760 --> 00:40:48,240
well that means that these rules can

1170
00:40:46,560 --> 00:40:50,480
then be transformed

1171
00:40:48,240 --> 00:40:51,598
to run on an elastic search back-end

1172
00:40:50,480 --> 00:40:54,000
like we have

1173
00:40:51,599 --> 00:40:55,520
or a splunk back-end or some other kind

1174
00:40:54,000 --> 00:40:57,359
of a back-end

1175
00:40:55,520 --> 00:40:59,200
what that really means in in

1176
00:40:57,359 --> 00:41:00,799
practicality then is that

1177
00:40:59,200 --> 00:41:02,799
we're then able to leverage the

1178
00:41:00,800 --> 00:41:04,560
expertise of all of these

1179
00:41:02,800 --> 00:41:06,480
defenders that are out there regardless

1180
00:41:04,560 --> 00:41:07,920
of what technology they're using

1181
00:41:06,480 --> 00:41:10,560
you know it used to be that if they were

1182
00:41:07,920 --> 00:41:12,000
using splunk or something else

1183
00:41:10,560 --> 00:41:13,520
we couldn't really talk with them we

1184
00:41:12,000 --> 00:41:15,920
couldn't really cross-pollinate we

1185
00:41:13,520 --> 00:41:18,240
couldn't really share ideas with them

1186
00:41:15,920 --> 00:41:19,280
because all of their sort of tribal

1187
00:41:18,240 --> 00:41:22,240
knowledge was

1188
00:41:19,280 --> 00:41:24,319
baked into their technology of choice

1189
00:41:22,240 --> 00:41:26,879
but sigma really changes all that

1190
00:41:24,319 --> 00:41:27,599
it makes it more agnostic it enables

1191
00:41:26,880 --> 00:41:29,599
more

1192
00:41:27,599 --> 00:41:32,079
communication and more lessons learned

1193
00:41:29,599 --> 00:41:34,400
and more sharing across communities

1194
00:41:32,079 --> 00:41:36,079
and so playbook imports those sigma

1195
00:41:34,400 --> 00:41:37,280
rules it helps you to be able to write

1196
00:41:36,079 --> 00:41:40,720
your own roles

1197
00:41:37,280 --> 00:41:43,760
it helps you to be able to activate and

1198
00:41:40,720 --> 00:41:46,879
and kind of deal with that whole process

1199
00:41:43,760 --> 00:41:49,599
so that's a really exciting part

1200
00:41:46,880 --> 00:41:50,319
of security onion 2 and really kind of

1201
00:41:49,599 --> 00:41:52,640
filling in

1202
00:41:50,319 --> 00:41:53,520
some of the misting missing spots in

1203
00:41:52,640 --> 00:41:55,118
terms of

1204
00:41:53,520 --> 00:41:56,640
we had really great network visibility

1205
00:41:55,119 --> 00:41:59,599
and host based visibility and

1206
00:41:56,640 --> 00:42:00,160
we had alerts and we had threat hunting

1207
00:41:59,599 --> 00:42:01,680
but

1208
00:42:00,160 --> 00:42:03,200
what about you know being able to pull

1209
00:42:01,680 --> 00:42:04,560
in these sigma rules run them on a

1210
00:42:03,200 --> 00:42:07,359
scheduled basis

1211
00:42:04,560 --> 00:42:09,040
and being able to get alerts out of that

1212
00:42:07,359 --> 00:42:10,960
and being able to act on that and

1213
00:42:09,040 --> 00:42:13,440
think about you know when you find

1214
00:42:10,960 --> 00:42:15,760
something in your environment

1215
00:42:13,440 --> 00:42:17,119
maybe going into playbook and writing

1216
00:42:15,760 --> 00:42:19,280
some detection

1217
00:42:17,119 --> 00:42:20,720
to find that sort of stuff automatically

1218
00:42:19,280 --> 00:42:22,480
in the future so that you're

1219
00:42:20,720 --> 00:42:24,160
no longer having to rely on threat

1220
00:42:22,480 --> 00:42:28,839
hunting you're now moving that

1221
00:42:24,160 --> 00:42:31,839
into more of an automated alert

1222
00:42:28,839 --> 00:42:33,920
phase now let's talk about fleet i

1223
00:42:31,839 --> 00:42:37,200
mentioned this before the web-based

1224
00:42:33,920 --> 00:42:38,640
uh front end for os query and so if you

1225
00:42:37,200 --> 00:42:41,279
enable fleet

1226
00:42:38,640 --> 00:42:43,279
and you then log into fleet you'll see

1227
00:42:41,280 --> 00:42:44,000
at least one os query endpoint and

1228
00:42:43,280 --> 00:42:46,800
that's the os

1229
00:42:44,000 --> 00:42:48,640
query that's on security onion itself

1230
00:42:46,800 --> 00:42:51,119
really cool thing here is that

1231
00:42:48,640 --> 00:42:52,720
josh did a lot of work on the back end

1232
00:42:51,119 --> 00:42:56,160
to

1233
00:42:52,720 --> 00:42:58,240
automatically build customized os query

1234
00:42:56,160 --> 00:42:59,520
agents that are then hosted by security

1235
00:42:58,240 --> 00:43:02,720
onion itself

1236
00:42:59,520 --> 00:43:04,160
and so you know just yesterday i took a

1237
00:43:02,720 --> 00:43:05,839
windows endpoint

1238
00:43:04,160 --> 00:43:08,799
and i essentially downloaded that

1239
00:43:05,839 --> 00:43:10,640
customized os query agent directly into

1240
00:43:08,800 --> 00:43:12,400
my windows endpoint

1241
00:43:10,640 --> 00:43:14,720
and all i did was double click it and it

1242
00:43:12,400 --> 00:43:17,040
did everything else from there

1243
00:43:14,720 --> 00:43:18,720
it connected to security onion i just

1244
00:43:17,040 --> 00:43:20,720
had to allow it through the firewall

1245
00:43:18,720 --> 00:43:22,399
it automatically registered itself

1246
00:43:20,720 --> 00:43:25,118
started sending logs

1247
00:43:22,400 --> 00:43:25,680
and it was just magical so it's great to

1248
00:43:25,119 --> 00:43:29,119
have

1249
00:43:25,680 --> 00:43:31,520
a web interface to manage those agents

1250
00:43:29,119 --> 00:43:33,760
and to be able to interrogate those

1251
00:43:31,520 --> 00:43:37,839
agents to ask questions to query

1252
00:43:33,760 --> 00:43:39,599
across your entire fleet uh looking for

1253
00:43:37,839 --> 00:43:41,759
indicators of compromise whether that's

1254
00:43:39,599 --> 00:43:44,079
via running processes

1255
00:43:41,760 --> 00:43:46,640
or the registry or scheduled tasks or

1256
00:43:44,079 --> 00:43:46,640
what have you

1257
00:43:47,200 --> 00:43:50,560
the hive i mentioned this earlier it's

1258
00:43:48,960 --> 00:43:53,920
our case management tool

1259
00:43:50,560 --> 00:43:57,200
so if you are in alerts or if you're

1260
00:43:53,920 --> 00:43:58,079
in hunt our threat hunting interface or

1261
00:43:57,200 --> 00:44:00,799
even if you're in

1262
00:43:58,079 --> 00:44:02,560
kibana we've added functionality to all

1263
00:44:00,800 --> 00:44:06,960
three of those to be able to

1264
00:44:02,560 --> 00:44:08,799
escalate to the hive and create a case

1265
00:44:06,960 --> 00:44:10,480
so it doesn't matter whether you're in

1266
00:44:08,800 --> 00:44:12,400
alerts or whether you're

1267
00:44:10,480 --> 00:44:13,920
on a cabana dashboard or whether you're

1268
00:44:12,400 --> 00:44:16,319
doing some threat hunting

1269
00:44:13,920 --> 00:44:17,440
you just look for in the case of alerts

1270
00:44:16,319 --> 00:44:19,839
and hunt you look for a

1271
00:44:17,440 --> 00:44:22,079
blue triangle you click on that and

1272
00:44:19,839 --> 00:44:25,119
that's going to instantly create a case

1273
00:44:22,079 --> 00:44:26,160
in the hive and it's going to carry

1274
00:44:25,119 --> 00:44:28,480
along with it as

1275
00:44:26,160 --> 00:44:29,359
as many of those juicy little details as

1276
00:44:28,480 --> 00:44:33,040
it can

1277
00:44:29,359 --> 00:44:34,640
to kind of pre-populate that case

1278
00:44:33,040 --> 00:44:36,560
so as i mentioned before if you have

1279
00:44:34,640 --> 00:44:38,319
multiple analysts working in your

1280
00:44:36,560 --> 00:44:39,759
security operations center

1281
00:44:38,319 --> 00:44:41,040
you know you're going to be logging into

1282
00:44:39,760 --> 00:44:42,560
the hive you're going to be working on

1283
00:44:41,040 --> 00:44:43,920
your cases together

1284
00:44:42,560 --> 00:44:45,680
that's where you're going to put all

1285
00:44:43,920 --> 00:44:47,760
your case notes where you're going to

1286
00:44:45,680 --> 00:44:48,799
put your observables your indicators of

1287
00:44:47,760 --> 00:44:51,520
compromise

1288
00:44:48,800 --> 00:44:52,560
and ultimately work towards closing

1289
00:44:51,520 --> 00:44:54,480
those cases

1290
00:44:52,560 --> 00:44:56,160
that's what it's all about is closing

1291
00:44:54,480 --> 00:44:58,319
those cases and moving on to the next

1292
00:44:56,160 --> 00:44:58,319
one

1293
00:44:58,480 --> 00:45:02,079
now we also have attack navigator from

1294
00:45:00,079 --> 00:45:03,839
the fine folks at mitre

1295
00:45:02,079 --> 00:45:05,760
so this goes along with their attack

1296
00:45:03,839 --> 00:45:09,359
framework and it kind of gives you

1297
00:45:05,760 --> 00:45:12,640
a visual indicator of your coverage

1298
00:45:09,359 --> 00:45:14,240
for that attack framework and uh josh

1299
00:45:12,640 --> 00:45:16,560
did some more great work

1300
00:45:14,240 --> 00:45:17,680
in terms of integrating with playbook

1301
00:45:16,560 --> 00:45:19,920
where if you

1302
00:45:17,680 --> 00:45:20,799
add some new plays maybe that creates a

1303
00:45:19,920 --> 00:45:23,440
new layer

1304
00:45:20,800 --> 00:45:25,440
inside of the tac navigator to help you

1305
00:45:23,440 --> 00:45:27,839
see that additional coverage that you

1306
00:45:25,440 --> 00:45:27,839
have

1307
00:45:28,160 --> 00:45:32,078
now we also have grafana this is another

1308
00:45:30,480 --> 00:45:35,040
web interface this one is

1309
00:45:32,079 --> 00:45:36,480
focused around monitoring the health of

1310
00:45:35,040 --> 00:45:38,560
your deployment

1311
00:45:36,480 --> 00:45:39,599
uh and so you know this gives you a

1312
00:45:38,560 --> 00:45:44,000
great

1313
00:45:39,599 --> 00:45:47,520
visibility into cpu usage disk usage

1314
00:45:44,000 --> 00:45:50,240
packet loss all of those health metrics

1315
00:45:47,520 --> 00:45:53,280
that are going to make sure that your

1316
00:45:50,240 --> 00:45:56,319
enterprise deployment is running at

1317
00:45:53,280 --> 00:45:56,319
peak efficiency

1318
00:45:57,200 --> 00:46:00,560
a relatively recent addition to security

1319
00:45:59,760 --> 00:46:02,560
onion 2

1320
00:46:00,560 --> 00:46:04,078
is this concept of an analyst

1321
00:46:02,560 --> 00:46:05,920
workstation

1322
00:46:04,079 --> 00:46:08,240
the idea here is that if you're going to

1323
00:46:05,920 --> 00:46:11,280
be doing things like

1324
00:46:08,240 --> 00:46:13,680
pulling pcaps out and maybe extracting

1325
00:46:11,280 --> 00:46:15,440
executables from that maybe dealing with

1326
00:46:13,680 --> 00:46:16,240
malware maybe doing some reverse

1327
00:46:15,440 --> 00:46:18,240
engineering

1328
00:46:16,240 --> 00:46:20,720
you probably don't want to be doing that

1329
00:46:18,240 --> 00:46:22,399
on your corporate windows image

1330
00:46:20,720 --> 00:46:24,000
because of course if you accidentally

1331
00:46:22,400 --> 00:46:26,960
execute that malware

1332
00:46:24,000 --> 00:46:27,680
your bad day has now gone to worse and

1333
00:46:26,960 --> 00:46:31,280
you're in

1334
00:46:27,680 --> 00:46:34,480
worst case scenario so what we

1335
00:46:31,280 --> 00:46:35,760
tend to uh prefer to do is do that kind

1336
00:46:34,480 --> 00:46:37,680
of work in an

1337
00:46:35,760 --> 00:46:39,760
analyst workstation this might be in a

1338
00:46:37,680 --> 00:46:41,040
virtual machine it might be a dedicated

1339
00:46:39,760 --> 00:46:43,520
physical machine

1340
00:46:41,040 --> 00:46:44,960
but this is a safer environment to do

1341
00:46:43,520 --> 00:46:48,720
that sort of work

1342
00:46:44,960 --> 00:46:49,520
in and so the way it works in security

1343
00:46:48,720 --> 00:46:53,040
onion 2

1344
00:46:49,520 --> 00:46:55,520
is we have a a single command called so

1345
00:46:53,040 --> 00:46:56,240
analyst install which is totally

1346
00:46:55,520 --> 00:46:58,800
independent

1347
00:46:56,240 --> 00:46:59,520
of everything else in security onion 2

1348
00:46:58,800 --> 00:47:01,520
meaning

1349
00:46:59,520 --> 00:47:04,640
you can install security onion 2 and

1350
00:47:01,520 --> 00:47:06,000
only run that one command by itself

1351
00:47:04,640 --> 00:47:08,078
if all you want is just the endless

1352
00:47:06,000 --> 00:47:09,280
workstation you can run just that and

1353
00:47:08,079 --> 00:47:11,280
that's going to give you

1354
00:47:09,280 --> 00:47:12,880
a gnome desktop that's going to give you

1355
00:47:11,280 --> 00:47:14,640
the chromium web browser

1356
00:47:12,880 --> 00:47:16,560
it's going to give you wireshark and

1357
00:47:14,640 --> 00:47:19,520
network miner and a whole bunch of other

1358
00:47:16,560 --> 00:47:21,520
pcapp utilities

1359
00:47:19,520 --> 00:47:23,200
now because it's independent you can run

1360
00:47:21,520 --> 00:47:26,240
it in conjunction with

1361
00:47:23,200 --> 00:47:29,680
other modes as well so for example

1362
00:47:26,240 --> 00:47:31,359
um you could run an import mode

1363
00:47:29,680 --> 00:47:32,879
which is kind of the the quickest and

1364
00:47:31,359 --> 00:47:35,200
easiest mode to

1365
00:47:32,880 --> 00:47:36,559
install security guardian 2 in it's

1366
00:47:35,200 --> 00:47:39,598
primarily designed for

1367
00:47:36,559 --> 00:47:41,359
importing one or more pcap files

1368
00:47:39,599 --> 00:47:43,440
so maybe you run through setup choosing

1369
00:47:41,359 --> 00:47:44,799
import mode and then maybe after setup

1370
00:47:43,440 --> 00:47:47,680
completes then you run

1371
00:47:44,800 --> 00:47:49,760
so analyst install and that gives you

1372
00:47:47,680 --> 00:47:51,839
that nice gooey environment

1373
00:47:49,760 --> 00:47:54,240
so you can do everything in one single

1374
00:47:51,839 --> 00:47:56,000
virtual machine

1375
00:47:54,240 --> 00:47:57,359
and actually we have a blog post which

1376
00:47:56,000 --> 00:47:59,839
should have gone live

1377
00:47:57,359 --> 00:48:02,480
at 1 10 pm and if you look at that blog

1378
00:47:59,839 --> 00:48:06,480
post at blog.securityonion.net

1379
00:48:02,480 --> 00:48:09,520
you'll actually see a screenshot tour of

1380
00:48:06,480 --> 00:48:12,400
installing security into choosing

1381
00:48:09,520 --> 00:48:13,040
import mode and then enabling this

1382
00:48:12,400 --> 00:48:15,040
analyst

1383
00:48:13,040 --> 00:48:18,079
workstation all in a minimal virtual

1384
00:48:15,040 --> 00:48:20,480
machine with only four gigabytes of ram

1385
00:48:18,079 --> 00:48:22,400
and one network interface it's truly the

1386
00:48:20,480 --> 00:48:23,599
quickest and easiest way if you want to

1387
00:48:22,400 --> 00:48:25,920
get your feet wet

1388
00:48:23,599 --> 00:48:28,480
with security onion 2 we highly

1389
00:48:25,920 --> 00:48:30,000
recommend trying that out first

1390
00:48:28,480 --> 00:48:34,000
because it's the the quickest and

1391
00:48:30,000 --> 00:48:35,280
easiest way to get up and running i

1392
00:48:34,000 --> 00:48:37,839
mentioned network miner

1393
00:48:35,280 --> 00:48:40,800
uh we've got the latest and greatest

1394
00:48:37,839 --> 00:48:43,520
network miner 2.6 which just came out

1395
00:48:40,800 --> 00:48:44,720
only a week or two ago that's built into

1396
00:48:43,520 --> 00:48:48,000
this analyst

1397
00:48:44,720 --> 00:48:50,720
install and so that's a great way to do

1398
00:48:48,000 --> 00:48:52,240
file extraction so if you are looking at

1399
00:48:50,720 --> 00:48:55,359
full packet capture

1400
00:48:52,240 --> 00:48:55,839
download the pcap we have registered

1401
00:48:55,359 --> 00:48:58,880
network

1402
00:48:55,839 --> 00:49:02,078
miner as the default pcapp handler

1403
00:48:58,880 --> 00:49:03,760
so if you if you're logged into our pcap

1404
00:49:02,079 --> 00:49:05,680
interface you download that pcap it's

1405
00:49:03,760 --> 00:49:06,559
going to automatically spawn network

1406
00:49:05,680 --> 00:49:08,319
miner

1407
00:49:06,559 --> 00:49:09,839
and then you simply click on the files

1408
00:49:08,319 --> 00:49:11,920
tab that you see up here

1409
00:49:09,839 --> 00:49:13,759
and it's already extracted the files

1410
00:49:11,920 --> 00:49:17,680
right out of that network traffic for

1411
00:49:13,760 --> 00:49:19,359
you it's tremendously powerful

1412
00:49:17,680 --> 00:49:21,440
speaking of power let's talk about the

1413
00:49:19,359 --> 00:49:23,440
power of community

1414
00:49:21,440 --> 00:49:26,000
i mentioned before the emerging threats

1415
00:49:23,440 --> 00:49:30,160
rule set and this is a great

1416
00:49:26,000 --> 00:49:31,920
free rule set over 20 000 rules for

1417
00:49:30,160 --> 00:49:33,440
looking at all different kinds of

1418
00:49:31,920 --> 00:49:34,160
interesting things happening on your

1419
00:49:33,440 --> 00:49:35,920
network

1420
00:49:34,160 --> 00:49:37,279
that's been a big part of security onion

1421
00:49:35,920 --> 00:49:39,119
for a long time

1422
00:49:37,280 --> 00:49:41,680
of course from a host-based perspective

1423
00:49:39,119 --> 00:49:43,680
we have wazoo rules as well

1424
00:49:41,680 --> 00:49:45,279
and that's been a big part of security

1425
00:49:43,680 --> 00:49:47,200
for a long time as well

1426
00:49:45,280 --> 00:49:49,040
but in addition to that i mentioned

1427
00:49:47,200 --> 00:49:51,040
earlier sigma rules right this is

1428
00:49:49,040 --> 00:49:52,240
another great community that we're now

1429
00:49:51,040 --> 00:49:54,079
able to

1430
00:49:52,240 --> 00:49:56,720
leverage and take advantage of in terms

1431
00:49:54,079 --> 00:49:58,559
of getting that additional intelligence

1432
00:49:56,720 --> 00:49:59,919
looking at our enterprise not just from

1433
00:49:58,559 --> 00:50:02,160
a network perspective but from a

1434
00:49:59,920 --> 00:50:05,200
host-based perspective as well

1435
00:50:02,160 --> 00:50:08,000
and so again leveraging that community

1436
00:50:05,200 --> 00:50:08,480
uh yara rules i mentioned earlier that

1437
00:50:08,000 --> 00:50:11,040
as

1438
00:50:08,480 --> 00:50:12,000
zeke monitors your network traffic when

1439
00:50:11,040 --> 00:50:15,279
it sees interesting

1440
00:50:12,000 --> 00:50:16,400
file types like exes or pdf it extracts

1441
00:50:15,280 --> 00:50:18,000
those files

1442
00:50:16,400 --> 00:50:20,800
and then strelka comes along and

1443
00:50:18,000 --> 00:50:22,960
analyzes those files using yara rules

1444
00:50:20,800 --> 00:50:25,119
and so again that's yet another whole

1445
00:50:22,960 --> 00:50:28,720
other level of intelligence

1446
00:50:25,119 --> 00:50:30,720
for what's happening on your network

1447
00:50:28,720 --> 00:50:33,279
i mentioned previously elastic common

1448
00:50:30,720 --> 00:50:34,000
schema again being able to kind of take

1449
00:50:33,280 --> 00:50:37,040
advantage of

1450
00:50:34,000 --> 00:50:38,800
other tools that align with ecs and

1451
00:50:37,040 --> 00:50:41,599
being able to integrate with other

1452
00:50:38,800 --> 00:50:44,160
technologies as well

1453
00:50:41,599 --> 00:50:46,480
and finally community id you know it's

1454
00:50:44,160 --> 00:50:49,598
it's great that we have

1455
00:50:46,480 --> 00:50:50,400
uh alerts coming from cericada it's

1456
00:50:49,599 --> 00:50:53,760
great that we have

1457
00:50:50,400 --> 00:50:56,400
zeke logs and all these other things but

1458
00:50:53,760 --> 00:50:58,000
if we don't have a way to quickly tie

1459
00:50:56,400 --> 00:51:01,440
those things together

1460
00:50:58,000 --> 00:51:03,280
then we might have more data than we can

1461
00:51:01,440 --> 00:51:04,640
effectively deal with and that's really

1462
00:51:03,280 --> 00:51:08,079
where community id

1463
00:51:04,640 --> 00:51:09,040
comes into play so you can see here a

1464
00:51:08,079 --> 00:51:11,920
screenshot

1465
00:51:09,040 --> 00:51:13,279
of a bunch of alerts in our new alerts

1466
00:51:11,920 --> 00:51:16,480
interface

1467
00:51:13,280 --> 00:51:20,079
and for each of those tcp

1468
00:51:16,480 --> 00:51:21,920
streams we have enabled the native

1469
00:51:20,079 --> 00:51:24,319
community id support in surry cottas

1470
00:51:21,920 --> 00:51:28,079
that means each of those tcp streams

1471
00:51:24,319 --> 00:51:28,960
has a community id value generated for

1472
00:51:28,079 --> 00:51:31,200
it

1473
00:51:28,960 --> 00:51:32,800
what that then means is when you're

1474
00:51:31,200 --> 00:51:34,640
looking at alerts

1475
00:51:32,800 --> 00:51:37,119
and you want to get some context for

1476
00:51:34,640 --> 00:51:39,118
those alerts all you have to do

1477
00:51:37,119 --> 00:51:40,880
in the alerts interface is simply click

1478
00:51:39,119 --> 00:51:43,760
on that community id

1479
00:51:40,880 --> 00:51:45,839
use our new quick action bar and search

1480
00:51:43,760 --> 00:51:48,559
for that community id value

1481
00:51:45,839 --> 00:51:49,759
and that's then going to return any

1482
00:51:48,559 --> 00:51:51,760
other logs

1483
00:51:49,760 --> 00:51:53,760
that might have that community id value

1484
00:51:51,760 --> 00:51:55,359
including zclogs

1485
00:51:53,760 --> 00:51:56,880
and other logs that we'll get to in a

1486
00:51:55,359 --> 00:51:59,520
minute

1487
00:51:56,880 --> 00:52:00,079
and so zeek supports community id we

1488
00:51:59,520 --> 00:52:03,280
turn that

1489
00:52:00,079 --> 00:52:06,160
on in securityonion2 and so

1490
00:52:03,280 --> 00:52:07,520
uh most of the main zeek log types

1491
00:52:06,160 --> 00:52:10,240
include that network

1492
00:52:07,520 --> 00:52:13,280
community id which enables us to do this

1493
00:52:10,240 --> 00:52:16,959
very powerful correlation

1494
00:52:13,280 --> 00:52:20,079
in addition to that what about some host

1495
00:52:16,960 --> 00:52:21,599
based correlation we talked about os

1496
00:52:20,079 --> 00:52:25,119
query earlier

1497
00:52:21,599 --> 00:52:28,000
and so it was very important to us to

1498
00:52:25,119 --> 00:52:28,720
sponsor the development of community id

1499
00:52:28,000 --> 00:52:31,760
support

1500
00:52:28,720 --> 00:52:32,480
in os query so that once you have a

1501
00:52:31,760 --> 00:52:34,960
particular

1502
00:52:32,480 --> 00:52:35,599
community id value for an interesting

1503
00:52:34,960 --> 00:52:38,800
tcp

1504
00:52:35,599 --> 00:52:39,520
stream you could actually go into os

1505
00:52:38,800 --> 00:52:42,160
query

1506
00:52:39,520 --> 00:52:44,240
and run a select query to look for that

1507
00:52:42,160 --> 00:52:46,319
particular community id value

1508
00:52:44,240 --> 00:52:48,799
and then os query can search across your

1509
00:52:46,319 --> 00:52:51,520
fleet and tell you that well

1510
00:52:48,800 --> 00:52:53,440
here's the process that was running on

1511
00:52:51,520 --> 00:52:55,359
this particular host

1512
00:52:53,440 --> 00:52:56,480
that generated that particular piece of

1513
00:52:55,359 --> 00:52:58,240
traffic

1514
00:52:56,480 --> 00:53:00,319
and oh by the way it was netcat

1515
00:52:58,240 --> 00:53:04,558
connecting to osquery dot io

1516
00:53:00,319 --> 00:53:06,558
on port 443 so that's insanely powerful

1517
00:53:04,559 --> 00:53:08,720
to be able to

1518
00:53:06,559 --> 00:53:09,839
look for community id and be able to

1519
00:53:08,720 --> 00:53:13,040
track that back

1520
00:53:09,839 --> 00:53:15,520
to the actual process which generated

1521
00:53:13,040 --> 00:53:17,440
that connection but what about tools

1522
00:53:15,520 --> 00:53:20,319
where we can't just go and

1523
00:53:17,440 --> 00:53:22,559
sponsor new functionality where we can't

1524
00:53:20,319 --> 00:53:23,920
just go to a github repo and submit a

1525
00:53:22,559 --> 00:53:25,680
pull request

1526
00:53:23,920 --> 00:53:27,839
well we talked about sysmon earlier we

1527
00:53:25,680 --> 00:53:31,200
love suspends great tool

1528
00:53:27,839 --> 00:53:35,040
it's free but it's not open source

1529
00:53:31,200 --> 00:53:37,598
and so folks have requested

1530
00:53:35,040 --> 00:53:38,960
that community id be added to sysmon

1531
00:53:37,599 --> 00:53:39,760
that's been accepted as a feature

1532
00:53:38,960 --> 00:53:41,920
request

1533
00:53:39,760 --> 00:53:43,760
it's added to their backlog but hasn't

1534
00:53:41,920 --> 00:53:46,079
been implemented yet

1535
00:53:43,760 --> 00:53:47,119
and so we said well what can we do about

1536
00:53:46,079 --> 00:53:50,640
this

1537
00:53:47,119 --> 00:53:54,400
so we sponsored an elasticsearch

1538
00:53:50,640 --> 00:53:57,598
ingest processor for community id

1539
00:53:54,400 --> 00:54:00,880
generation on the fly what that means

1540
00:53:57,599 --> 00:54:03,520
is that any arbitrary

1541
00:54:00,880 --> 00:54:05,440
log type that includes the fields

1542
00:54:03,520 --> 00:54:07,440
necessary for community id that would be

1543
00:54:05,440 --> 00:54:08,839
source ip source port destination ip

1544
00:54:07,440 --> 00:54:11,200
destination port

1545
00:54:08,839 --> 00:54:13,200
protocol we can then dynamically

1546
00:54:11,200 --> 00:54:15,439
generate that community id value even if

1547
00:54:13,200 --> 00:54:17,359
the original tool didn't support it

1548
00:54:15,440 --> 00:54:19,440
so in this case sysmon doesn't support

1549
00:54:17,359 --> 00:54:21,279
it but guess what we can dynamically

1550
00:54:19,440 --> 00:54:23,440
generate community id values

1551
00:54:21,280 --> 00:54:24,800
for all of those sysmon network

1552
00:54:23,440 --> 00:54:27,440
connection logs

1553
00:54:24,800 --> 00:54:29,040
and it works like a champ we do that the

1554
00:54:27,440 --> 00:54:30,720
same thing for firewall logs so if

1555
00:54:29,040 --> 00:54:32,079
you've got a psense firewall you send

1556
00:54:30,720 --> 00:54:34,078
your firewall logs over

1557
00:54:32,079 --> 00:54:35,520
you can dynamically generate those

1558
00:54:34,079 --> 00:54:38,400
community id values

1559
00:54:35,520 --> 00:54:41,359
and now you can correlate all of your

1560
00:54:38,400 --> 00:54:41,359
logs together

1561
00:54:41,599 --> 00:54:47,200
all right let's quickly move into some

1562
00:54:44,720 --> 00:54:49,759
use cases here

1563
00:54:47,200 --> 00:54:51,759
so as i mentioned earlier if you want to

1564
00:54:49,760 --> 00:54:53,440
get your feet wet with secured onion two

1565
00:54:51,760 --> 00:54:54,000
very quickly and easily the best way to

1566
00:54:53,440 --> 00:54:57,280
do that

1567
00:54:54,000 --> 00:54:59,520
is to build a small forensics vm

1568
00:54:57,280 --> 00:55:01,040
all you need is four gigabytes of ram

1569
00:54:59,520 --> 00:55:02,720
one network interface

1570
00:55:01,040 --> 00:55:04,558
you install security gun two from our

1571
00:55:02,720 --> 00:55:07,598
iso image you choose

1572
00:55:04,559 --> 00:55:08,079
import mode and then optionally you can

1573
00:55:07,599 --> 00:55:10,240
run that

1574
00:55:08,079 --> 00:55:12,160
so analyst install that we talked about

1575
00:55:10,240 --> 00:55:14,799
earlier

1576
00:55:12,160 --> 00:55:16,640
and then you run so import pcap and you

1577
00:55:14,799 --> 00:55:18,000
pass it the full path to one or more

1578
00:55:16,640 --> 00:55:20,078
pcapp files

1579
00:55:18,000 --> 00:55:21,760
it imports those pcaps and you know how

1580
00:55:20,079 --> 00:55:26,000
long you now have logs

1581
00:55:21,760 --> 00:55:27,520
and potentially alerts excuse me

1582
00:55:26,000 --> 00:55:29,359
and so that's the the quickest and

1583
00:55:27,520 --> 00:55:30,880
easiest way to get up and running if you

1584
00:55:29,359 --> 00:55:34,160
just want to get your feet wet

1585
00:55:30,880 --> 00:55:35,920
with security on your moving from there

1586
00:55:34,160 --> 00:55:37,200
if you want to stand up a production

1587
00:55:35,920 --> 00:55:39,359
deployment

1588
00:55:37,200 --> 00:55:41,200
you might start with a standalone

1589
00:55:39,359 --> 00:55:44,400
deployment

1590
00:55:41,200 --> 00:55:45,200
that's a single box probably a rack

1591
00:55:44,400 --> 00:55:50,000
mounted

1592
00:55:45,200 --> 00:55:51,839
server grade hardware box that's running

1593
00:55:50,000 --> 00:55:53,119
all of our components in a single

1594
00:55:51,839 --> 00:55:55,839
standalone instance

1595
00:55:53,119 --> 00:55:56,319
and that works okay for smaller networks

1596
00:55:55,839 --> 00:55:59,440
or maybe

1597
00:55:56,319 --> 00:56:01,839
smaller amounts of host logs but

1598
00:55:59,440 --> 00:56:03,599
once you are ready to really scale to

1599
00:56:01,839 --> 00:56:06,480
the enterprise level you want to go to

1600
00:56:03,599 --> 00:56:08,960
our fully distributed deployment model

1601
00:56:06,480 --> 00:56:10,400
and there you're going to have a manager

1602
00:56:08,960 --> 00:56:11,119
which is going to control your entire

1603
00:56:10,400 --> 00:56:12,799
deployment

1604
00:56:11,119 --> 00:56:14,400
you're going to have one or more search

1605
00:56:12,799 --> 00:56:16,400
nodes on the back end and you're going

1606
00:56:14,400 --> 00:56:19,040
to have one more forward nodes

1607
00:56:16,400 --> 00:56:19,839
that act as sensors and forward all of

1608
00:56:19,040 --> 00:56:21,440
their

1609
00:56:19,839 --> 00:56:23,599
surrey kata alerts they forward their

1610
00:56:21,440 --> 00:56:25,839
zik logs they forward their syslog

1611
00:56:23,599 --> 00:56:27,040
to the manager so those logs are then

1612
00:56:25,839 --> 00:56:30,319
stored

1613
00:56:27,040 --> 00:56:32,000
uh in the search nodes

1614
00:56:30,319 --> 00:56:33,680
so let's take a look at the architecture

1615
00:56:32,000 --> 00:56:35,200
of each of those use cases this is the

1616
00:56:33,680 --> 00:56:38,480
small forensics vm

1617
00:56:35,200 --> 00:56:39,839
very minimal component wise it's really

1618
00:56:38,480 --> 00:56:41,839
just running file b

1619
00:56:39,839 --> 00:56:43,200
file beat is sending logs directly to

1620
00:56:41,839 --> 00:56:44,480
elasticsearch

1621
00:56:43,200 --> 00:56:46,160
pretty minimal there and that's how we

1622
00:56:44,480 --> 00:56:47,359
can get away with those minimal

1623
00:56:46,160 --> 00:56:51,040
requirements

1624
00:56:47,359 --> 00:56:53,040
of that four gigabyte vm that we talked

1625
00:56:51,040 --> 00:56:54,480
about earlier

1626
00:56:53,040 --> 00:56:56,000
then if you move up to that next level

1627
00:56:54,480 --> 00:56:57,520
that standalone deployment that's going

1628
00:56:56,000 --> 00:56:59,440
to require more ram it's going to

1629
00:56:57,520 --> 00:57:00,720
require at least two network interfaces

1630
00:56:59,440 --> 00:57:02,799
because we're doing

1631
00:57:00,720 --> 00:57:05,439
real network sniffing now we've got to

1632
00:57:02,799 --> 00:57:07,280
have a dedicated network interface there

1633
00:57:05,440 --> 00:57:09,440
we've got more components right because

1634
00:57:07,280 --> 00:57:11,119
we want this to be more scalable we want

1635
00:57:09,440 --> 00:57:14,559
it to be more resilient

1636
00:57:11,119 --> 00:57:16,880
so we add in a redis queue and we've got

1637
00:57:14,559 --> 00:57:18,000
multiple logs dash pipelines to push

1638
00:57:16,880 --> 00:57:21,119
interredis and then pull

1639
00:57:18,000 --> 00:57:23,119
out of redis and we've got additional

1640
00:57:21,119 --> 00:57:24,079
capabilities here in terms of being able

1641
00:57:23,119 --> 00:57:26,640
to

1642
00:57:24,079 --> 00:57:29,200
collect logs from endpoint agents and

1643
00:57:26,640 --> 00:57:30,319
collect syslog and things like that

1644
00:57:29,200 --> 00:57:33,040
so things get a little bit more

1645
00:57:30,319 --> 00:57:33,680
complicated there a little bit higher

1646
00:57:33,040 --> 00:57:35,680
resource

1647
00:57:33,680 --> 00:57:36,960
wise but certainly much more

1648
00:57:35,680 --> 00:57:38,480
capabilities

1649
00:57:36,960 --> 00:57:40,000
and then finally that distributed

1650
00:57:38,480 --> 00:57:42,160
deployment is where things really

1651
00:57:40,000 --> 00:57:43,520
get interesting so you've got your

1652
00:57:42,160 --> 00:57:45,200
manager there in the middle which

1653
00:57:43,520 --> 00:57:47,599
controls your entire deployment

1654
00:57:45,200 --> 00:57:48,720
you've got search nodes on the back end

1655
00:57:47,599 --> 00:57:50,559
one or more of those

1656
00:57:48,720 --> 00:57:52,078
and you've got one or more forward nodes

1657
00:57:50,559 --> 00:57:54,720
that act as your sensors

1658
00:57:52,079 --> 00:57:55,599
they generate the logs full packet

1659
00:57:54,720 --> 00:57:58,319
capture stays

1660
00:57:55,599 --> 00:58:00,400
local on the forward nodes but the

1661
00:57:58,319 --> 00:58:01,759
surrey catalogs the z clogs those get

1662
00:58:00,400 --> 00:58:03,599
forwarded to the manager

1663
00:58:01,760 --> 00:58:05,599
and ultimately wind up on the search

1664
00:58:03,599 --> 00:58:07,200
nodes the great thing about this

1665
00:58:05,599 --> 00:58:09,920
architecture is that it's

1666
00:58:07,200 --> 00:58:11,439
very easily scalable so if you need

1667
00:58:09,920 --> 00:58:14,000
additional network visibility

1668
00:58:11,440 --> 00:58:14,720
you simply snap in another forward node

1669
00:58:14,000 --> 00:58:16,640
if

1670
00:58:14,720 --> 00:58:18,640
as you're adding in more forward nodes

1671
00:58:16,640 --> 00:58:20,720
if you start to reach the limits of your

1672
00:58:18,640 --> 00:58:22,558
existing search nodes you simply snap in

1673
00:58:20,720 --> 00:58:26,078
an additional search node

1674
00:58:22,559 --> 00:58:28,240
it then starts load balancing uh

1675
00:58:26,079 --> 00:58:30,240
with the other search nodes and that's a

1676
00:58:28,240 --> 00:58:31,598
very scalable solution we have a lot of

1677
00:58:30,240 --> 00:58:33,680
customers doing

1678
00:58:31,599 --> 00:58:34,640
some very heavy duty distributed

1679
00:58:33,680 --> 00:58:36,240
deployments

1680
00:58:34,640 --> 00:58:39,040
and that model has scaled very

1681
00:58:36,240 --> 00:58:39,040
successfully

1682
00:58:39,280 --> 00:58:43,040
now we have a lot of announcements to

1683
00:58:42,400 --> 00:58:45,760
make today

1684
00:58:43,040 --> 00:58:47,839
not just the security onion 2 release

1685
00:58:45,760 --> 00:58:49,040
itself but going along with that we are

1686
00:58:47,839 --> 00:58:53,640
also announcing

1687
00:58:49,040 --> 00:58:55,240
brand new documentation so if you go to

1688
00:58:53,640 --> 00:58:56,640
docs.securityonion.net or

1689
00:58:55,240 --> 00:58:58,640
securityonion.net

1690
00:58:56,640 --> 00:59:00,480
docs you'll wind up at our documentation

1691
00:58:58,640 --> 00:59:03,359
and it's now defaulting

1692
00:59:00,480 --> 00:59:04,160
to version 2.3 that's the precise

1693
00:59:03,359 --> 00:59:06,480
version number

1694
00:59:04,160 --> 00:59:07,440
of this brand new security onion 2

1695
00:59:06,480 --> 00:59:10,480
version

1696
00:59:07,440 --> 00:59:11,839
and that is a work in progress so

1697
00:59:10,480 --> 00:59:13,280
please be aware of that as you go

1698
00:59:11,839 --> 00:59:14,558
through the documentation if you see

1699
00:59:13,280 --> 00:59:16,799
things that are missing

1700
00:59:14,559 --> 00:59:18,400
or if they're not quite correct

1701
00:59:16,799 --> 00:59:20,400
definitely reach out to us

1702
00:59:18,400 --> 00:59:22,079
and we'll get that updated as soon as

1703
00:59:20,400 --> 00:59:22,480
possible we've put a lot of time and

1704
00:59:22,079 --> 00:59:24,880
effort

1705
00:59:22,480 --> 00:59:27,520
into this new documentation there's lots

1706
00:59:24,880 --> 00:59:29,359
more screenshots there there's lots more

1707
00:59:27,520 --> 00:59:31,200
verbiage and lots more kind of

1708
00:59:29,359 --> 00:59:33,520
storytelling to try to make that

1709
00:59:31,200 --> 00:59:36,319
documentation come alive

1710
00:59:33,520 --> 00:59:38,960
so we hope that helps you to get your

1711
00:59:36,319 --> 00:59:41,920
security unemployment up and running

1712
00:59:38,960 --> 00:59:42,720
included in that documentation is a new

1713
00:59:41,920 --> 00:59:45,280
cheat sheet

1714
00:59:42,720 --> 00:59:47,839
a lot of folks have asked over the years

1715
00:59:45,280 --> 00:59:50,720
for a handy desk reference

1716
00:59:47,839 --> 00:59:51,839
and so a few years ago a good friend of

1717
00:59:50,720 --> 00:59:53,839
ours chris sanders

1718
00:59:51,839 --> 00:59:55,119
he put together the very first version

1719
00:59:53,839 --> 00:59:58,319
of that cheat sheet

1720
00:59:55,119 --> 01:00:01,920
and we have continued to

1721
00:59:58,319 --> 01:00:02,640
iterate on that and recently reworked

1722
01:00:01,920 --> 01:00:04,720
that

1723
01:00:02,640 --> 01:00:06,078
for security onion 2 because so many

1724
01:00:04,720 --> 01:00:08,000
things have changed

1725
01:00:06,079 --> 01:00:10,400
from the commands that you run to some

1726
01:00:08,000 --> 01:00:12,640
of the architecture type stuff

1727
01:00:10,400 --> 01:00:16,559
so that is now out there you can find

1728
01:00:12,640 --> 01:00:16,558
that as a part of the documentation

1729
01:00:17,200 --> 01:00:21,279
now speaking of documentation uh another

1730
01:00:19,839 --> 01:00:23,040
thing that folks had asked for over the

1731
01:00:21,280 --> 01:00:24,079
years was a printed version of the

1732
01:00:23,040 --> 01:00:26,079
documentation

1733
01:00:24,079 --> 01:00:27,760
so you know maybe in some cases maybe

1734
01:00:26,079 --> 01:00:29,280
you're working in air gap networks you

1735
01:00:27,760 --> 01:00:30,720
don't have access to the internet so

1736
01:00:29,280 --> 01:00:32,400
you'd like to have a handy desk

1737
01:00:30,720 --> 01:00:34,319
reference sitting right there

1738
01:00:32,400 --> 01:00:36,240
and we did make that available so you

1739
01:00:34,319 --> 01:00:39,520
can purchase a printed version

1740
01:00:36,240 --> 01:00:42,399
of our documentation at amazon and

1741
01:00:39,520 --> 01:00:45,680
as of today that book that's out there

1742
01:00:42,400 --> 01:00:48,160
is still based on security onion 1604

1743
01:00:45,680 --> 01:00:50,160
so if you if you are interested in

1744
01:00:48,160 --> 01:00:52,078
getting a copy of that 1604

1745
01:00:50,160 --> 01:00:53,680
documentation which is soon to be a

1746
01:00:52,079 --> 01:00:56,400
collector's item

1747
01:00:53,680 --> 01:00:58,319
because it will soon go away for good

1748
01:00:56,400 --> 01:01:01,440
you can get that today

1749
01:00:58,319 --> 01:01:04,558
and over the next month or so we'll be

1750
01:01:01,440 --> 01:01:06,240
updating that printed book to move to

1751
01:01:04,559 --> 01:01:08,400
security onion 2.

1752
01:01:06,240 --> 01:01:10,959
so consider this your last chance to get

1753
01:01:08,400 --> 01:01:12,480
the 1604 version in about a month or so

1754
01:01:10,960 --> 01:01:15,119
we'll make another announcement

1755
01:01:12,480 --> 01:01:16,079
that the security onion 2 version of

1756
01:01:15,119 --> 01:01:18,960
that book

1757
01:01:16,079 --> 01:01:18,960
is available

1758
01:01:19,359 --> 01:01:22,880
all right i mentioned chris sanders just

1759
01:01:20,799 --> 01:01:25,280
a couple of slides ago and

1760
01:01:22,880 --> 01:01:26,640
he started this great charity called the

1761
01:01:25,280 --> 01:01:30,160
rural technology

1762
01:01:26,640 --> 01:01:33,359
fund and this is a great fund

1763
01:01:30,160 --> 01:01:35,200
which puts technology into the hands of

1764
01:01:33,359 --> 01:01:36,160
students in rural communities

1765
01:01:35,200 --> 01:01:38,558
and that's something that really

1766
01:01:36,160 --> 01:01:39,839
resonates with me uh having grown up on

1767
01:01:38,559 --> 01:01:43,040
a dirt road

1768
01:01:39,839 --> 01:01:43,839
and um you know not uh not living in a

1769
01:01:43,040 --> 01:01:45,920
big city

1770
01:01:43,839 --> 01:01:47,520
technology technology wise by any

1771
01:01:45,920 --> 01:01:49,200
stretch of the imagination

1772
01:01:47,520 --> 01:01:50,720
uh it's something that's near and dear

1773
01:01:49,200 --> 01:01:52,319
to my heart and i think it's a great

1774
01:01:50,720 --> 01:01:53,520
mission and so if you're at the

1775
01:01:52,319 --> 01:01:55,279
conference last year we

1776
01:01:53,520 --> 01:01:57,038
you saw that we made the announcement

1777
01:01:55,280 --> 01:01:57,440
that we took the proceeds of all of

1778
01:01:57,039 --> 01:02:00,559
those

1779
01:01:57,440 --> 01:02:02,480
amazon book sales and donated them to

1780
01:02:00,559 --> 01:02:04,720
the rural technology fund

1781
01:02:02,480 --> 01:02:07,200
we're doing that again this year and

1782
01:02:04,720 --> 01:02:11,038
we're also giving an additional

1783
01:02:07,200 --> 01:02:13,439
uh company sponsorship on top of that

1784
01:02:11,039 --> 01:02:15,359
so uh thank you to chris sanders and the

1785
01:02:13,440 --> 01:02:17,200
rest of the rural technology fund for

1786
01:02:15,359 --> 01:02:20,240
all of the work that they do

1787
01:02:17,200 --> 01:02:21,680
uh we're happy to support it and

1788
01:02:20,240 --> 01:02:23,200
if you're looking for charities to

1789
01:02:21,680 --> 01:02:24,078
support we highly recommend that you

1790
01:02:23,200 --> 01:02:26,960
take a look

1791
01:02:24,079 --> 01:02:26,960
at the rtf

1792
01:02:27,680 --> 01:02:31,359
now another new announcement for today

1793
01:02:29,599 --> 01:02:35,079
we've got a brand new

1794
01:02:31,359 --> 01:02:39,240
website and so if you go to

1795
01:02:35,079 --> 01:02:40,559
securityonion.net or if you go to

1796
01:02:39,240 --> 01:02:42,319
securityonionsolutions.com

1797
01:02:40,559 --> 01:02:44,079
you're going to wind up at the same

1798
01:02:42,319 --> 01:02:47,119
exact website

1799
01:02:44,079 --> 01:02:48,559
and the idea here is that we want to

1800
01:02:47,119 --> 01:02:51,039
give you all the information that you

1801
01:02:48,559 --> 01:02:52,559
might be looking for in one place

1802
01:02:51,039 --> 01:02:54,880
we had a lot of folks saying that you

1803
01:02:52,559 --> 01:02:56,799
know they they had trouble finding stuff

1804
01:02:54,880 --> 01:02:57,359
because we had two separate websites and

1805
01:02:56,799 --> 01:02:59,680
so

1806
01:02:57,359 --> 01:03:01,200
we merged them into one so you can find

1807
01:02:59,680 --> 01:03:02,480
everything relating to the free and open

1808
01:03:01,200 --> 01:03:04,879
source platform there

1809
01:03:02,480 --> 01:03:06,160
if you are interested in things like our

1810
01:03:04,880 --> 01:03:07,920
hardware appliances

1811
01:03:06,160 --> 01:03:09,520
or our training classes or our

1812
01:03:07,920 --> 01:03:11,280
professional services

1813
01:03:09,520 --> 01:03:12,720
all of that is right there in one

1814
01:03:11,280 --> 01:03:16,000
website um

1815
01:03:12,720 --> 01:03:17,759
and it's a beautiful website uh it's um

1816
01:03:16,000 --> 01:03:19,680
again just like with our logo we put a

1817
01:03:17,760 --> 01:03:23,039
lot of thought and a lot of design

1818
01:03:19,680 --> 01:03:24,799
into it uh so it's uh it's a labor of

1819
01:03:23,039 --> 01:03:26,640
love to try to

1820
01:03:24,799 --> 01:03:28,480
to try to get the messaging across to

1821
01:03:26,640 --> 01:03:29,279
our community and support those that are

1822
01:03:28,480 --> 01:03:32,640
out there

1823
01:03:29,280 --> 01:03:33,920
using the software another new

1824
01:03:32,640 --> 01:03:36,558
announcement

1825
01:03:33,920 --> 01:03:37,520
so traditionally for our community

1826
01:03:36,559 --> 01:03:40,480
support forum

1827
01:03:37,520 --> 01:03:41,920
we originally had google groups and a

1828
01:03:40,480 --> 01:03:45,039
few years ago we also

1829
01:03:41,920 --> 01:03:47,280
opened up a subreddit and then we tried

1830
01:03:45,039 --> 01:03:48,240
to use subreddit for our security onion

1831
01:03:47,280 --> 01:03:51,119
2

1832
01:03:48,240 --> 01:03:51,520
support forum but github has this new

1833
01:03:51,119 --> 01:03:54,720
thing

1834
01:03:51,520 --> 01:03:56,720
called discussions which is not

1835
01:03:54,720 --> 01:03:59,279
publicly available for all repos just

1836
01:03:56,720 --> 01:04:02,480
yet but we were fortunate enough to

1837
01:03:59,280 --> 01:04:04,640
get in as kind of a beta member

1838
01:04:02,480 --> 01:04:07,119
of github discussions and so that's

1839
01:04:04,640 --> 01:04:07,920
going to be our new community support

1840
01:04:07,119 --> 01:04:10,079
forums

1841
01:04:07,920 --> 01:04:12,559
the brilliant thing is it's integrated

1842
01:04:10,079 --> 01:04:15,920
right into the github repo

1843
01:04:12,559 --> 01:04:18,799
and so it's very easy to

1844
01:04:15,920 --> 01:04:20,480
move issues into discussions or vice

1845
01:04:18,799 --> 01:04:21,920
versa it's very easy to

1846
01:04:20,480 --> 01:04:24,880
reference from one to the other it's

1847
01:04:21,920 --> 01:04:27,599
very easy to reference the code base

1848
01:04:24,880 --> 01:04:27,920
and we're very very excited about the

1849
01:04:27,599 --> 01:04:31,039
the

1850
01:04:27,920 --> 01:04:33,920
the ability to have discussions hosted

1851
01:04:31,039 --> 01:04:35,520
right in our github repo right where the

1852
01:04:33,920 --> 01:04:37,039
code is being written

1853
01:04:35,520 --> 01:04:40,000
so really excited about that you can

1854
01:04:37,039 --> 01:04:43,839
find that at securityonion.net slash

1855
01:04:40,000 --> 01:04:47,119
discuss more announcements

1856
01:04:43,839 --> 01:04:48,640
we've got new training we have a

1857
01:04:47,119 --> 01:04:52,960
security onion essentials

1858
01:04:48,640 --> 01:04:54,480
class which is coming soon to youtube

1859
01:04:52,960 --> 01:04:56,480
so be on the lookout for that

1860
01:04:54,480 --> 01:04:58,480
announcement very very soon

1861
01:04:56,480 --> 01:05:00,160
uh you'll be able to go out to youtube

1862
01:04:58,480 --> 01:05:03,599
and find this playlist

1863
01:05:00,160 --> 01:05:05,598
and it'll give you the essentials of

1864
01:05:03,599 --> 01:05:06,799
getting up and running quickly with

1865
01:05:05,599 --> 01:05:08,720
security onion

1866
01:05:06,799 --> 01:05:10,799
if you want to go above and beyond that

1867
01:05:08,720 --> 01:05:11,680
we do have paid classes we have

1868
01:05:10,799 --> 01:05:14,960
on-demand

1869
01:05:11,680 --> 01:05:16,720
and instructor-led classes and a lot of

1870
01:05:14,960 --> 01:05:17,680
folks have asked about certification we

1871
01:05:16,720 --> 01:05:19,520
do expect to

1872
01:05:17,680 --> 01:05:22,240
make an announcement about that in the

1873
01:05:19,520 --> 01:05:24,799
first quarter of 2021 so be on the

1874
01:05:22,240 --> 01:05:26,640
lookout for that

1875
01:05:24,799 --> 01:05:28,480
now have we made enough announcements

1876
01:05:26,640 --> 01:05:31,279
yet

1877
01:05:28,480 --> 01:05:32,000
guess what here comes a big one new

1878
01:05:31,280 --> 01:05:36,160
hardware

1879
01:05:32,000 --> 01:05:39,280
appliances so we partnered with dell

1880
01:05:36,160 --> 01:05:42,240
to build better bicycles

1881
01:05:39,280 --> 01:05:44,000
we want to maximize your power we want

1882
01:05:42,240 --> 01:05:46,399
to maximize your storage

1883
01:05:44,000 --> 01:05:47,520
we want to maximize your flexibility all

1884
01:05:46,400 --> 01:05:50,240
at the same time

1885
01:05:47,520 --> 01:05:52,079
that we're minimizing your time and

1886
01:05:50,240 --> 01:05:54,479
effort because let's face it

1887
01:05:52,079 --> 01:05:56,160
we're all overworked we all need to find

1888
01:05:54,480 --> 01:05:59,119
more hours in the day

1889
01:05:56,160 --> 01:05:59,680
and so this is something that folks have

1890
01:05:59,119 --> 01:06:02,480
asked for

1891
01:05:59,680 --> 01:06:04,240
to be able to have an appliance drop

1892
01:06:02,480 --> 01:06:05,920
ship directly to them that's already got

1893
01:06:04,240 --> 01:06:07,759
our software pre-loaded on it they

1894
01:06:05,920 --> 01:06:11,119
simply rack it up and go

1895
01:06:07,760 --> 01:06:13,520
and so we hope that this turns out to be

1896
01:06:11,119 --> 01:06:15,359
kind of a jet powered motorcycle that

1897
01:06:13,520 --> 01:06:17,359
accelerates you

1898
01:06:15,359 --> 01:06:19,839
into being able to focus more of your

1899
01:06:17,359 --> 01:06:20,799
time on catching bad guys rather than

1900
01:06:19,839 --> 01:06:24,160
trying to

1901
01:06:20,799 --> 01:06:27,599
spec out hardware and install software

1902
01:06:24,160 --> 01:06:27,598
and deal with those challenges

1903
01:06:27,920 --> 01:06:32,559
all right next announcement

1904
01:06:29,520 --> 01:06:36,160
unfortunately we have to

1905
01:06:32,559 --> 01:06:39,359
realize that ubuntu 1604

1906
01:06:36,160 --> 01:06:41,480
reaches end of life in april of 2021

1907
01:06:39,359 --> 01:06:43,119
that means therefore that security onion

1908
01:06:41,480 --> 01:06:46,240
1604

1909
01:06:43,119 --> 01:06:48,480
has to reach end of life as well so

1910
01:06:46,240 --> 01:06:50,799
effective today we are announcing a

1911
01:06:48,480 --> 01:06:52,880
six-month end-of-life window for

1912
01:06:50,799 --> 01:06:55,359
security onion 1604

1913
01:06:52,880 --> 01:06:57,520
and that puts it exactly at april the

1914
01:06:55,359 --> 01:06:59,440
16th of 2021

1915
01:06:57,520 --> 01:07:00,640
so we recommend that you start preparing

1916
01:06:59,440 --> 01:07:03,920
today

1917
01:07:00,640 --> 01:07:07,359
to either replace or upgrade

1918
01:07:03,920 --> 01:07:10,160
your existing security onion 1604

1919
01:07:07,359 --> 01:07:11,520
deployments we do have an upgrade guide

1920
01:07:10,160 --> 01:07:12,640
in our documentation

1921
01:07:11,520 --> 01:07:15,119
and if you're an existing paying

1922
01:07:12,640 --> 01:07:16,720
customer reach out to us and talk to us

1923
01:07:15,119 --> 01:07:20,559
about how we can help you

1924
01:07:16,720 --> 01:07:20,558
with that upgrade process

1925
01:07:21,200 --> 01:07:24,640
all right lots and lots of fun

1926
01:07:23,359 --> 01:07:27,920
announcements

1927
01:07:24,640 --> 01:07:28,720
at this point we'd like to take a quick

1928
01:07:27,920 --> 01:07:31,359
five minute

1929
01:07:28,720 --> 01:07:32,319
intermission but we would like to kind

1930
01:07:31,359 --> 01:07:35,119
of pause

1931
01:07:32,319 --> 01:07:37,359
for questions so if you have questions

1932
01:07:35,119 --> 01:07:41,119
or comments please feel free to

1933
01:07:37,359 --> 01:07:42,640
type those into chat and we'll cover

1934
01:07:41,119 --> 01:07:45,359
those after the intermission

1935
01:07:42,640 --> 01:07:48,240
at this point i will turn it over to mr

1936
01:07:45,359 --> 01:07:48,240
phil planamira

1937
01:07:48,720 --> 01:07:53,680
thanks doug uh i'm going to steal the

1938
01:07:50,880 --> 01:07:53,680
ball from you

1939
01:07:53,760 --> 01:07:58,400
i think people want to see a picture of

1940
01:07:55,520 --> 01:08:00,880
that hot appliance again we'll do that

1941
01:07:58,400 --> 01:08:03,280
we'll do that right after uh the

1942
01:08:00,880 --> 01:08:05,359
intermission

1943
01:08:03,280 --> 01:08:07,280
so we'll start the timer here for

1944
01:08:05,359 --> 01:08:08,160
intermission we'll come back in five

1945
01:08:07,280 --> 01:08:09,440
minutes

1946
01:08:08,160 --> 01:08:11,520
for those of you that want to hang out

1947
01:08:09,440 --> 01:08:13,760
with me um

1948
01:08:11,520 --> 01:08:15,440
absolutely uh happy to have you if you

1949
01:08:13,760 --> 01:08:16,799
haven't joined our discord server yet

1950
01:08:15,440 --> 01:08:19,600
please make sure you do that

1951
01:08:16,799 --> 01:08:21,519
let's go ahead and give away some prizes

1952
01:08:19,600 --> 01:08:23,120
we've selected a couple of winners first

1953
01:08:21,520 --> 01:08:24,000
of all we've mentioned chris sanders a

1954
01:08:23,120 --> 01:08:25,278
couple of times

1955
01:08:24,000 --> 01:08:27,198
today this might become the chris

1956
01:08:25,279 --> 01:08:30,560
sanders conference

1957
01:08:27,198 --> 01:08:31,120
if we mention it again but he's authored

1958
01:08:30,560 --> 01:08:33,199
a new book

1959
01:08:31,120 --> 01:08:34,399
intrusion detection honey pots detection

1960
01:08:33,198 --> 01:08:35,919
through deception

1961
01:08:34,399 --> 01:08:38,080
and the rule technology fund has

1962
01:08:35,920 --> 01:08:39,520
graciously donated us a couple of copies

1963
01:08:38,080 --> 01:08:42,318
to give away

1964
01:08:39,520 --> 01:08:44,239
so we've we've chosen a couple of

1965
01:08:42,319 --> 01:08:45,600
winners we're notifying them now by

1966
01:08:44,238 --> 01:08:47,678
email

1967
01:08:45,600 --> 01:08:49,759
and we will be in touch with you

1968
01:08:47,679 --> 01:08:51,679
congratulations to those winners

1969
01:08:49,759 --> 01:08:54,319
we've got a couple of blue team

1970
01:08:51,679 --> 01:08:56,158
handbooks uh talking about sock sim and

1971
01:08:54,319 --> 01:08:58,239
threat hunting use cases is an excellent

1972
01:08:56,158 --> 01:09:01,198
book if you haven't read it

1973
01:08:58,238 --> 01:09:01,759
by don murdock so we're giving away a

1974
01:09:01,198 --> 01:09:06,000
couple

1975
01:09:01,759 --> 01:09:07,759
of these as well and we're excited to uh

1976
01:09:06,000 --> 01:09:09,359
to uh to be able to do that again you

1977
01:09:07,759 --> 01:09:12,479
can check out that book

1978
01:09:09,359 --> 01:09:15,679
on amazon the blue team handbook

1979
01:09:12,479 --> 01:09:19,439
and finally uh we're giving away a

1980
01:09:15,679 --> 01:09:21,600
tap donated by our technical partner

1981
01:09:19,439 --> 01:09:23,040
at profit tap this is a one gig tapped

1982
01:09:21,600 --> 01:09:24,960
perfect for your

1983
01:09:23,040 --> 01:09:27,839
for your awesome home network or even a

1984
01:09:24,960 --> 01:09:29,920
small or even medium sized office

1985
01:09:27,839 --> 01:09:31,600
uh we've enjoyed our technical

1986
01:09:29,920 --> 01:09:34,239
partnership with profit tap

1987
01:09:31,600 --> 01:09:35,759
and we're happy to be able to give one

1988
01:09:34,238 --> 01:09:36,879
of these away we've selected a winner

1989
01:09:35,759 --> 01:09:38,640
for this as well

1990
01:09:36,880 --> 01:09:40,640
and we'll be in touch with you shortly

1991
01:09:38,640 --> 01:09:41,120
to get it shipped out to you normally we

1992
01:09:40,640 --> 01:09:42,239
do

1993
01:09:41,120 --> 01:09:44,080
for those of you that come to our

1994
01:09:42,238 --> 01:09:46,318
conference our live conference we

1995
01:09:44,080 --> 01:09:48,719
normally do this by fish bowls and

1996
01:09:46,319 --> 01:09:50,640
people running down to pick up their

1997
01:09:48,719 --> 01:09:52,560
their uh their prizes

1998
01:09:50,640 --> 01:09:54,480
uh of course this this year we didn't

1999
01:09:52,560 --> 01:09:56,480
have the opportunity to do that so

2000
01:09:54,480 --> 01:09:57,678
we're happy to uh to ship these out

2001
01:09:56,480 --> 01:09:59,759
again thank you to

2002
01:09:57,679 --> 01:10:01,440
uh those those folks the world

2003
01:09:59,760 --> 01:10:05,760
technology fund profit tap

2004
01:10:01,440 --> 01:10:05,759
for uh donating your goods

2005
01:10:05,920 --> 01:10:09,520
um all right just as again a reminder

2006
01:10:08,080 --> 01:10:12,000
there's the discord server

2007
01:10:09,520 --> 01:10:14,239
get your questions and thoughts together

2008
01:10:12,000 --> 01:10:18,320
and uh continue to ask those

2009
01:10:14,239 --> 01:10:18,639
in the webex chat and uh continue to uh

2010
01:10:18,320 --> 01:10:20,400
to

2011
01:10:18,640 --> 01:10:22,080
ask and discord we're trying to get as

2012
01:10:20,400 --> 01:10:23,679
many questions as we can

2013
01:10:22,080 --> 01:10:25,840
uh some of those questions you'll notice

2014
01:10:23,679 --> 01:10:27,840
we've been marking as deferred so we'll

2015
01:10:25,840 --> 01:10:28,960
answer those at the end

2016
01:10:27,840 --> 01:10:30,719
all right so we've got about two and a

2017
01:10:28,960 --> 01:10:31,120
half minutes here good time for a bio

2018
01:10:30,719 --> 01:10:34,560
break

2019
01:10:31,120 --> 01:10:37,040
we'll reconvene here uh in about

2020
01:10:34,560 --> 01:10:38,560
uh two minutes and i think i went

2021
01:10:37,040 --> 01:10:38,960
through that whole thing and realized

2022
01:10:38,560 --> 01:10:42,320
now

2023
01:10:38,960 --> 01:10:42,320
i haven't shared a thing

2024
01:10:43,600 --> 01:10:47,440
but that's all right we'll run you guys

2025
01:10:46,000 --> 01:10:59,840
back through those slides while you're

2026
01:10:47,440 --> 01:10:59,839
on your intermission

2027
01:11:10,840 --> 01:11:27,840
thanks oh

2028
01:13:16,840 --> 01:13:19,840
hmm

2029
01:14:02,560 --> 01:14:06,880
okay doug i have handed you back

2030
01:14:04,719 --> 01:14:15,840
presenter

2031
01:14:06,880 --> 01:14:15,840
all right sir

2032
01:14:17,920 --> 01:14:21,120
i just wanted to say chris sanders

2033
01:14:19,760 --> 01:14:23,679
because everybody else has said it once

2034
01:14:21,120 --> 01:14:25,519
and i think i said

2035
01:14:23,679 --> 01:14:27,360
chris sanders chris it's like

2036
01:14:25,520 --> 01:14:29,600
beetlejuice say it three times appeared

2037
01:14:27,360 --> 01:14:31,839
right

2038
01:14:29,600 --> 01:14:33,360
all right doug you ready to reconvene

2039
01:14:31,840 --> 01:14:34,640
yeah

2040
01:14:33,360 --> 01:14:37,519
all right let's do this thing welcome

2041
01:14:34,640 --> 01:14:39,760
back to security onion conference 2020

2042
01:14:37,520 --> 01:14:41,440
and here to dive deeper into the

2043
01:14:39,760 --> 01:14:42,000
platform and give you back doug burks

2044
01:14:41,440 --> 01:14:46,159
back to you

2045
01:14:42,000 --> 01:14:46,159
sir thank you very much

2046
01:14:46,560 --> 01:14:50,159
let me share my screen

2047
01:14:51,280 --> 01:14:57,920
go give me a thumbs up that looks okay

2048
01:14:54,400 --> 01:14:59,519
yes sir you look good all right so

2049
01:14:57,920 --> 01:15:01,520
welcome back from the intermission we

2050
01:14:59,520 --> 01:15:02,800
appreciate all of your questions and all

2051
01:15:01,520 --> 01:15:05,520
of your interest

2052
01:15:02,800 --> 01:15:07,199
and um we're ready to get started for

2053
01:15:05,520 --> 01:15:07,920
the second half here what i thought i

2054
01:15:07,199 --> 01:15:10,639
would do

2055
01:15:07,920 --> 01:15:11,520
is kind of take you on a guided case

2056
01:15:10,640 --> 01:15:14,960
study

2057
01:15:11,520 --> 01:15:16,239
of how all of this new

2058
01:15:14,960 --> 01:15:17,679
how all these new features and

2059
01:15:16,239 --> 01:15:19,678
functionality really kind of fit

2060
01:15:17,679 --> 01:15:21,920
together

2061
01:15:19,679 --> 01:15:24,080
and so we go back to that architecture

2062
01:15:21,920 --> 01:15:26,159
diagram that we looked at earlier

2063
01:15:24,080 --> 01:15:28,320
where we deploy security onion

2064
01:15:26,159 --> 01:15:29,599
monitoring traffic on the inside of a

2065
01:15:28,320 --> 01:15:32,960
firewall

2066
01:15:29,600 --> 01:15:33,600
and not only that but let's collect some

2067
01:15:32,960 --> 01:15:36,960
logs

2068
01:15:33,600 --> 01:15:39,040
from some endpoints and oh by the way

2069
01:15:36,960 --> 01:15:40,480
let's collect logs from the firewall

2070
01:15:39,040 --> 01:15:42,080
itself

2071
01:15:40,480 --> 01:15:45,360
and let's see if we can kind of

2072
01:15:42,080 --> 01:15:48,960
correlate all that data together

2073
01:15:45,360 --> 01:15:52,239
and be able to do that quickly

2074
01:15:48,960 --> 01:15:55,040
and easily so what i've built

2075
01:15:52,239 --> 01:15:56,080
is a few virtual machines here on my

2076
01:15:55,040 --> 01:15:57,920
laptop

2077
01:15:56,080 --> 01:15:59,920
which kind of represent this environment

2078
01:15:57,920 --> 01:16:00,480
that you see in the diagram so i've got

2079
01:15:59,920 --> 01:16:03,920
a

2080
01:16:00,480 --> 01:16:06,879
psense firewall i've got a

2081
01:16:03,920 --> 01:16:08,800
windows 10 endpoint and i've got

2082
01:16:06,880 --> 01:16:10,560
security onion 2

2083
01:16:08,800 --> 01:16:12,000
which is running in standalone mode and

2084
01:16:10,560 --> 01:16:13,120
that's that's one of those kind of use

2085
01:16:12,000 --> 01:16:16,000
cases we talked about

2086
01:16:13,120 --> 01:16:17,920
right before the break so it's running

2087
01:16:16,000 --> 01:16:19,360
in standalone mode and it's collecting

2088
01:16:17,920 --> 01:16:21,840
logs from this windows 10

2089
01:16:19,360 --> 01:16:23,679
endpoint it's also collecting logs from

2090
01:16:21,840 --> 01:16:26,640
the pfsense firewall

2091
01:16:23,679 --> 01:16:28,080
and it's monitoring the traffic uh right

2092
01:16:26,640 --> 01:16:30,960
on the inside

2093
01:16:28,080 --> 01:16:32,480
of that pfsense firewall and so what

2094
01:16:30,960 --> 01:16:32,840
i've done is i've gone to that windows

2095
01:16:32,480 --> 01:16:36,799
10

2096
01:16:32,840 --> 01:16:37,360
endpoint and i've i've gently simulated

2097
01:16:36,800 --> 01:16:40,080
some

2098
01:16:37,360 --> 01:16:40,799
malware i've gently simulated some

2099
01:16:40,080 --> 01:16:44,239
malicious

2100
01:16:40,800 --> 01:16:46,880
activities so let's see if we can see

2101
01:16:44,239 --> 01:16:50,080
what that kind of looks like

2102
01:16:46,880 --> 01:16:51,199
based on our new interfaces in security

2103
01:16:50,080 --> 01:16:54,080
onion 2.

2104
01:16:51,199 --> 01:16:54,960
so let me flip over to here so this is

2105
01:16:54,080 --> 01:16:58,000
my

2106
01:16:54,960 --> 01:16:58,480
standalone security onion 2 and i have

2107
01:16:58,000 --> 01:17:01,520
run

2108
01:16:58,480 --> 01:17:04,718
so analyst install just so we have

2109
01:17:01,520 --> 01:17:05,600
an actual gnome desktop environment you

2110
01:17:04,719 --> 01:17:07,840
can see our

2111
01:17:05,600 --> 01:17:10,239
our lovely logo there on the desktop

2112
01:17:07,840 --> 01:17:12,719
background

2113
01:17:10,239 --> 01:17:14,320
and chromium web browser is included so

2114
01:17:12,719 --> 01:17:16,880
when you log into

2115
01:17:14,320 --> 01:17:17,840
security onion console you start off

2116
01:17:16,880 --> 01:17:21,280
here on the

2117
01:17:17,840 --> 01:17:25,040
overview page and

2118
01:17:21,280 --> 01:17:25,040
move this window out of the way

2119
01:17:25,840 --> 01:17:29,360
so from the overview page of course you

2120
01:17:28,880 --> 01:17:31,360
have

2121
01:17:29,360 --> 01:17:32,880
in the upper right is where you can

2122
01:17:31,360 --> 01:17:33,839
change from dark mode to light mode

2123
01:17:32,880 --> 01:17:36,960
we've got a link

2124
01:17:33,840 --> 01:17:37,600
to our documentation so it's simply one

2125
01:17:36,960 --> 01:17:39,760
click away

2126
01:17:37,600 --> 01:17:41,040
goes to our online documentation if

2127
01:17:39,760 --> 01:17:43,840
you're running in

2128
01:17:41,040 --> 01:17:44,880
air gap mode what's really cool is that

2129
01:17:43,840 --> 01:17:48,000
this

2130
01:17:44,880 --> 01:17:49,920
help link will dynamically point to an

2131
01:17:48,000 --> 01:17:51,040
internal a local copy of the

2132
01:17:49,920 --> 01:17:52,640
documentation

2133
01:17:51,040 --> 01:17:54,719
which will work on your air gap

2134
01:17:52,640 --> 01:17:56,640
deployment even though you don't have

2135
01:17:54,719 --> 01:17:59,600
internet access i also have a link to

2136
01:17:56,640 --> 01:18:04,320
our blog here

2137
01:17:59,600 --> 01:18:07,600
and of course you can

2138
01:18:04,320 --> 01:18:10,320
go to settings you can go to log out but

2139
01:18:07,600 --> 01:18:11,520
the real fun is really on the left side

2140
01:18:10,320 --> 01:18:14,559
of the page here

2141
01:18:11,520 --> 01:18:15,040
so we've got the overview page let's go

2142
01:18:14,560 --> 01:18:17,120
to

2143
01:18:15,040 --> 01:18:18,400
alerts this is our brand new alerts

2144
01:18:17,120 --> 01:18:21,440
interface that we're so

2145
01:18:18,400 --> 01:18:22,639
incredibly excited about what you'll see

2146
01:18:21,440 --> 01:18:25,919
here immediately

2147
01:18:22,640 --> 01:18:28,320
is that we have not only circada network

2148
01:18:25,920 --> 01:18:32,239
based ids alerts but we also have

2149
01:18:28,320 --> 01:18:34,400
osec or wazoo host based ids alerts

2150
01:18:32,239 --> 01:18:36,559
and these osec alerts are being

2151
01:18:34,400 --> 01:18:37,839
generated based on the fact that wazoo

2152
01:18:36,560 --> 01:18:40,640
is installed

2153
01:18:37,840 --> 01:18:42,080
by default onion is acting as a host

2154
01:18:40,640 --> 01:18:44,960
intrusion detection system

2155
01:18:42,080 --> 01:18:46,880
for security onion itself so if an

2156
01:18:44,960 --> 01:18:49,440
attacker were to ever try to

2157
01:18:46,880 --> 01:18:50,080
attack security onion itself then you

2158
01:18:49,440 --> 01:18:53,120
might see

2159
01:18:50,080 --> 01:18:56,559
some lazu alerts for brute force

2160
01:18:53,120 --> 01:18:57,920
uh attempt or something like that so

2161
01:18:56,560 --> 01:19:00,320
it's nice to be able to have these

2162
01:18:57,920 --> 01:19:02,640
things here um but let's

2163
01:19:00,320 --> 01:19:03,679
let's just say that i know that all of

2164
01:19:02,640 --> 01:19:06,560
these osec

2165
01:19:03,679 --> 01:19:08,640
alerts are nothing that i'm really

2166
01:19:06,560 --> 01:19:11,840
concerned about at least for

2167
01:19:08,640 --> 01:19:13,440
this demo so how can i deal with all of

2168
01:19:11,840 --> 01:19:14,960
these alerts at once well

2169
01:19:13,440 --> 01:19:17,199
one thing i could do is i could click on

2170
01:19:14,960 --> 01:19:19,840
osec click on the plus

2171
01:19:17,199 --> 01:19:21,360
and that shows me all of my osec alerts

2172
01:19:19,840 --> 01:19:23,199
and now if i just want to get rid of

2173
01:19:21,360 --> 01:19:24,239
them all i have to do is click the

2174
01:19:23,199 --> 01:19:27,519
acknowledge bell

2175
01:19:24,239 --> 01:19:29,280
on the left so when i do that

2176
01:19:27,520 --> 01:19:30,640
those are immediately going to be

2177
01:19:29,280 --> 01:19:32,880
acknowledged

2178
01:19:30,640 --> 01:19:34,080
so now if i want to see those i could

2179
01:19:32,880 --> 01:19:36,480
click the acknowledged

2180
01:19:34,080 --> 01:19:38,480
slider and that's going to show me those

2181
01:19:36,480 --> 01:19:40,000
that i acknowledged and some that i had

2182
01:19:38,480 --> 01:19:43,040
acknowledged previously

2183
01:19:40,000 --> 01:19:46,000
as well so

2184
01:19:43,040 --> 01:19:46,400
that's the alerts page that is taking a

2185
01:19:46,000 --> 01:19:50,480
look

2186
01:19:46,400 --> 01:19:53,360
at um those

2187
01:19:50,480 --> 01:19:55,280
post-based ids alerts let me go back to

2188
01:19:53,360 --> 01:19:57,519
the default view here

2189
01:19:55,280 --> 01:20:00,239
and so now you see that under event

2190
01:19:57,520 --> 01:20:03,360
module now we just have surikata network

2191
01:20:00,239 --> 01:20:05,519
based ids alerts

2192
01:20:03,360 --> 01:20:06,559
and so let's take a look at some of

2193
01:20:05,520 --> 01:20:09,760
these and and

2194
01:20:06,560 --> 01:20:11,280
and i want to think about community id

2195
01:20:09,760 --> 01:20:12,880
that we talked about before and using

2196
01:20:11,280 --> 01:20:14,559
that for correlation

2197
01:20:12,880 --> 01:20:16,480
and i want to think about that really

2198
01:20:14,560 --> 01:20:18,080
from a couple of different directions

2199
01:20:16,480 --> 01:20:21,519
right we're going to start with the very

2200
01:20:18,080 --> 01:20:24,559
basic use case first and that is

2201
01:20:21,520 --> 01:20:26,880
starting from an ids alert

2202
01:20:24,560 --> 01:20:28,560
that's that's really the the most common

2203
01:20:26,880 --> 01:20:32,000
starting point for

2204
01:20:28,560 --> 01:20:33,920
for most analysis work is starting with

2205
01:20:32,000 --> 01:20:36,320
those ids alerts so let's look at an

2206
01:20:33,920 --> 01:20:38,960
example

2207
01:20:36,320 --> 01:20:40,080
so let's see uh first of all if we can

2208
01:20:38,960 --> 01:20:43,520
find

2209
01:20:40,080 --> 01:20:44,880
maybe this basic auth base64 that's an

2210
01:20:43,520 --> 01:20:46,960
interesting ids alert

2211
01:20:44,880 --> 01:20:48,000
so maybe i might want to drill into that

2212
01:20:46,960 --> 01:20:51,280
so i click on it

2213
01:20:48,000 --> 01:20:54,719
and click the plus sign

2214
01:20:51,280 --> 01:20:58,239
so i've got this alert and

2215
01:20:54,719 --> 01:21:01,040
i could do a couple of things here so

2216
01:20:58,239 --> 01:21:02,080
what i might want to do is go to full

2217
01:21:01,040 --> 01:21:04,639
packet capture

2218
01:21:02,080 --> 01:21:05,760
right so if i click on that and i then

2219
01:21:04,639 --> 01:21:08,719
click

2220
01:21:05,760 --> 01:21:09,360
oh excuse me i clicked the wrong thing

2221
01:21:08,719 --> 01:21:12,800
let me go

2222
01:21:09,360 --> 01:21:16,480
back and let me go

2223
01:21:12,800 --> 01:21:18,480
using this drill down now if i go here

2224
01:21:16,480 --> 01:21:20,239
to this button that's going to take me

2225
01:21:18,480 --> 01:21:22,718
to my full packet capture

2226
01:21:20,239 --> 01:21:23,440
so instantly i'm able to go from an ids

2227
01:21:22,719 --> 01:21:25,920
alert

2228
01:21:23,440 --> 01:21:28,400
to my full packet capture so behind the

2229
01:21:25,920 --> 01:21:31,120
scenes what happened was uh

2230
01:21:28,400 --> 01:21:32,159
alerts said hey i need the full packet

2231
01:21:31,120 --> 01:21:35,840
capture for

2232
01:21:32,159 --> 01:21:37,199
this stream and so we then sent a bpf

2233
01:21:35,840 --> 01:21:39,520
over to stenographer

2234
01:21:37,199 --> 01:21:41,040
it carved that stream out of its full

2235
01:21:39,520 --> 01:21:44,639
packet capture store

2236
01:21:41,040 --> 01:21:45,840
it sent that back to security on your

2237
01:21:44,639 --> 01:21:48,239
console which then

2238
01:21:45,840 --> 01:21:50,880
rendered it as an ascii transcript and

2239
01:21:48,239 --> 01:21:53,120
all that happens very very quickly

2240
01:21:50,880 --> 01:21:54,719
now when i'm looking at this ascii

2241
01:21:53,120 --> 01:21:56,320
transcript

2242
01:21:54,719 --> 01:21:58,560
i might see something interesting and

2243
01:21:56,320 --> 01:22:00,960
the original alert was for

2244
01:21:58,560 --> 01:22:02,480
base64 authentication we actually see

2245
01:22:00,960 --> 01:22:04,960
that line here

2246
01:22:02,480 --> 01:22:05,599
in the original get request so basic

2247
01:22:04,960 --> 01:22:07,679
auth

2248
01:22:05,600 --> 01:22:10,159
and this is the value that was sent and

2249
01:22:07,679 --> 01:22:12,320
so just to try to demonstrate

2250
01:22:10,159 --> 01:22:14,320
how kind of all of these different tools

2251
01:22:12,320 --> 01:22:15,599
fit together maybe i might right click

2252
01:22:14,320 --> 01:22:18,880
and copy

2253
01:22:15,600 --> 01:22:21,040
and then go to cyber chef as i mentioned

2254
01:22:18,880 --> 01:22:23,199
before cybershelf is a great utility for

2255
01:22:21,040 --> 01:22:24,480
doing things like decoding random data

2256
01:22:23,199 --> 01:22:27,360
so maybe i

2257
01:22:24,480 --> 01:22:29,120
paste that into there and then i throw

2258
01:22:27,360 --> 01:22:32,000
in the from base64

2259
01:22:29,120 --> 01:22:32,639
recipe and then in my output i can see

2260
01:22:32,000 --> 01:22:34,639
that

2261
01:22:32,639 --> 01:22:36,560
what was actually sent in that get

2262
01:22:34,639 --> 01:22:39,600
request was a username of root

2263
01:22:36,560 --> 01:22:40,400
and a password of root so you start to

2264
01:22:39,600 --> 01:22:43,199
see how

2265
01:22:40,400 --> 01:22:43,839
these tools kind of dovetail into each

2266
01:22:43,199 --> 01:22:45,839
other

2267
01:22:43,840 --> 01:22:46,880
and how we can use all these tools

2268
01:22:45,840 --> 01:22:50,880
together

2269
01:22:46,880 --> 01:22:54,320
to really work these incidents

2270
01:22:50,880 --> 01:22:55,920
so that's pretty amazing to be able to

2271
01:22:54,320 --> 01:22:56,880
pivot from an alert to full packet

2272
01:22:55,920 --> 01:22:59,920
capture

2273
01:22:56,880 --> 01:23:03,120
and then take a piece of that

2274
01:22:59,920 --> 01:23:04,719
over to cyber chef now let's

2275
01:23:03,120 --> 01:23:07,280
let's take a look and see what else we

2276
01:23:04,719 --> 01:23:10,320
can find because

2277
01:23:07,280 --> 01:23:12,719
you know we might want to say well

2278
01:23:10,320 --> 01:23:14,480
you know that those credentials root

2279
01:23:12,719 --> 01:23:16,320
username and root password

2280
01:23:14,480 --> 01:23:17,759
might be interesting it might be

2281
01:23:16,320 --> 01:23:20,080
suspicious

2282
01:23:17,760 --> 01:23:21,920
or it might be some legitimate business

2283
01:23:20,080 --> 01:23:25,360
practice that we all frown on you know

2284
01:23:21,920 --> 01:23:27,360
when somebody has a business uh process

2285
01:23:25,360 --> 01:23:28,719
that has some hard-coded credentials and

2286
01:23:27,360 --> 01:23:30,719
maybe it doesn't actually mean anything

2287
01:23:28,719 --> 01:23:33,040
but we really need more context

2288
01:23:30,719 --> 01:23:34,719
right we really need to understand more

2289
01:23:33,040 --> 01:23:37,519
about what's going on

2290
01:23:34,719 --> 01:23:38,960
and so to do that maybe i might want to

2291
01:23:37,520 --> 01:23:41,760
cast a wider net

2292
01:23:38,960 --> 01:23:42,960
i might want to see everything i know

2293
01:23:41,760 --> 01:23:46,960
about maybe that

2294
01:23:42,960 --> 01:23:50,880
client ip address in this case 172 1691

2295
01:23:46,960 --> 01:23:53,600
158 and so i could

2296
01:23:50,880 --> 01:23:54,560
click this clear magnifying glass which

2297
01:23:53,600 --> 01:23:57,520
is going to hunt

2298
01:23:54,560 --> 01:23:59,199
for that particular field so that starts

2299
01:23:57,520 --> 01:24:00,719
a new query over here in the hunt

2300
01:23:59,199 --> 01:24:03,360
interface

2301
01:24:00,719 --> 01:24:04,960
for essentially says show me everything

2302
01:24:03,360 --> 01:24:06,239
relating to this ip address and then

2303
01:24:04,960 --> 01:24:09,520
group it by

2304
01:24:06,239 --> 01:24:10,159
event module and event data set so now i

2305
01:24:09,520 --> 01:24:13,280
have

2306
01:24:10,159 --> 01:24:15,599
all of this data and

2307
01:24:13,280 --> 01:24:17,199
some of it is windows event logs some of

2308
01:24:15,600 --> 01:24:19,120
it is zclogs

2309
01:24:17,199 --> 01:24:20,400
and if i were to scroll through here i

2310
01:24:19,120 --> 01:24:22,400
would see some

2311
01:24:20,400 --> 01:24:23,839
cerricotta alerts as well i've also got

2312
01:24:22,400 --> 01:24:26,239
some firewall logs

2313
01:24:23,840 --> 01:24:28,400
so this is all the data that i have at

2314
01:24:26,239 --> 01:24:32,320
my fingertips relating to

2315
01:24:28,400 --> 01:24:36,320
this one ip address

2316
01:24:32,320 --> 01:24:39,599
so that's amazing to have that sort of

2317
01:24:36,320 --> 01:24:41,360
pivot capability right there

2318
01:24:39,600 --> 01:24:43,280
just being able to move from an ids

2319
01:24:41,360 --> 01:24:45,280
alert and get that much more

2320
01:24:43,280 --> 01:24:46,719
context around that ids alert very

2321
01:24:45,280 --> 01:24:48,159
quickly and easily

2322
01:24:46,719 --> 01:24:50,239
and of course this is just really just

2323
01:24:48,159 --> 01:24:51,599
the group metrics the stacked or

2324
01:24:50,239 --> 01:24:53,519
aggregated view

2325
01:24:51,600 --> 01:24:55,120
and all of your detailed logs are down

2326
01:24:53,520 --> 01:25:00,320
here

2327
01:24:55,120 --> 01:25:02,639
so if i were to go back to alerts

2328
01:25:00,320 --> 01:25:05,759
let's take a look at another thing you

2329
01:25:02,639 --> 01:25:09,440
could do so if i were to

2330
01:25:05,760 --> 01:25:09,920
say drill into this and maybe i wanted

2331
01:25:09,440 --> 01:25:14,400
to

2332
01:25:09,920 --> 01:25:17,040
see more about that tcp stream itself

2333
01:25:14,400 --> 01:25:19,599
so and so instead of casting a wider net

2334
01:25:17,040 --> 01:25:21,360
for everything related to the ip address

2335
01:25:19,600 --> 01:25:22,719
maybe i wanted to see what more i knew

2336
01:25:21,360 --> 01:25:26,000
about this

2337
01:25:22,719 --> 01:25:28,800
stream from source port 49909

2338
01:25:26,000 --> 01:25:30,800
to destination port 80. well one way you

2339
01:25:28,800 --> 01:25:32,800
could do that is with that community id

2340
01:25:30,800 --> 01:25:35,040
value that we talked about before

2341
01:25:32,800 --> 01:25:37,679
by clicking this drop down i can

2342
01:25:35,040 --> 01:25:41,199
instantly see all the fields in the log

2343
01:25:37,679 --> 01:25:42,960
one of those is network community id

2344
01:25:41,199 --> 01:25:45,599
so what i could do is i could click on

2345
01:25:42,960 --> 01:25:47,440
that and then from there i can choose

2346
01:25:45,600 --> 01:25:48,719
that clear magnifying glass

2347
01:25:47,440 --> 01:25:51,280
which again is going to hunt for the

2348
01:25:48,719 --> 01:25:53,120
field but instead of hunting for the ip

2349
01:25:51,280 --> 01:25:57,040
address like i did last time

2350
01:25:53,120 --> 01:26:00,639
i'm hunting for the community id value

2351
01:25:57,040 --> 01:26:04,320
so what that then gives me is every log

2352
01:26:00,639 --> 01:26:06,239
that i have for that one tcp stream

2353
01:26:04,320 --> 01:26:07,360
so i have the cericada alert that i

2354
01:26:06,239 --> 01:26:10,239
started with

2355
01:26:07,360 --> 01:26:11,679
but i also have a zeke con log a zeke

2356
01:26:10,239 --> 01:26:14,959
http log

2357
01:26:11,679 --> 01:26:18,560
a pf since firewall log and also

2358
01:26:14,960 --> 01:26:22,159
a sysmon network connection log

2359
01:26:18,560 --> 01:26:24,639
and so the beauty of this is that

2360
01:26:22,159 --> 01:26:26,320
if i'm starting from an alert i could

2361
01:26:24,639 --> 01:26:29,440
say well show me the

2362
01:26:26,320 --> 01:26:30,799
zeke http log so even if i didn't have

2363
01:26:29,440 --> 01:26:32,400
my full packet capture

2364
01:26:30,800 --> 01:26:34,159
let's say my full packet capture had

2365
01:26:32,400 --> 01:26:36,719
rolled off maybe this was from

2366
01:26:34,159 --> 01:26:38,080
a month ago and i only had a week in my

2367
01:26:36,719 --> 01:26:40,400
pcap store

2368
01:26:38,080 --> 01:26:42,159
i could still look at my http logs

2369
01:26:40,400 --> 01:26:45,280
coming from zeek and i could see that

2370
01:26:42,159 --> 01:26:47,920
this was going out to testmynids.org

2371
01:26:45,280 --> 01:26:51,199
so in my mind this is a little bit less

2372
01:26:47,920 --> 01:26:54,960
of an incident than it might have been

2373
01:26:51,199 --> 01:26:57,280
but that additional kind of visibility

2374
01:26:54,960 --> 01:26:58,719
really helps to paint that more complete

2375
01:26:57,280 --> 01:27:00,000
picture to try to figure out what's

2376
01:26:58,719 --> 01:27:01,440
going on

2377
01:27:00,000 --> 01:27:03,280
now i might want to ask a further

2378
01:27:01,440 --> 01:27:05,519
question well you know

2379
01:27:03,280 --> 01:27:06,800
who was doing this on what machine what

2380
01:27:05,520 --> 01:27:09,360
was the actual process

2381
01:27:06,800 --> 01:27:11,600
things like that and that's where those

2382
01:27:09,360 --> 01:27:14,320
sysmon logs might come into play

2383
01:27:11,600 --> 01:27:16,320
right so i could drill down into my

2384
01:27:14,320 --> 01:27:18,559
network connection logs and i could see

2385
01:27:16,320 --> 01:27:20,320
instantly you know one of the things

2386
01:27:18,560 --> 01:27:23,360
we've worked really hard on in hunt

2387
01:27:20,320 --> 01:27:25,440
is having this events table dynamically

2388
01:27:23,360 --> 01:27:27,280
adjust itself to the data

2389
01:27:25,440 --> 01:27:29,199
type that you're looking at in this case

2390
01:27:27,280 --> 01:27:32,400
it knows that we're looking at

2391
01:27:29,199 --> 01:27:34,239
just on logs and so it gives us fields

2392
01:27:32,400 --> 01:27:36,080
that are relevant to that in this case

2393
01:27:34,239 --> 01:27:37,839
we have process executable and we can

2394
01:27:36,080 --> 01:27:39,440
instantly see that the process that

2395
01:27:37,840 --> 01:27:42,639
generated that traffic

2396
01:27:39,440 --> 01:27:45,839
was curl running on that windows box

2397
01:27:42,639 --> 01:27:47,760
generating that particular http

2398
01:27:45,840 --> 01:27:50,400
transaction

2399
01:27:47,760 --> 01:27:51,280
so it's amazing to be able to have that

2400
01:27:50,400 --> 01:27:55,120
capability

2401
01:27:51,280 --> 01:27:58,159
of pivoting from an alert to an http log

2402
01:27:55,120 --> 01:28:00,559
to full packet capture to the original

2403
01:27:58,159 --> 01:28:01,599
process running on the box which

2404
01:28:00,560 --> 01:28:05,040
originated

2405
01:28:01,600 --> 01:28:06,800
the traffic now let's take a look

2406
01:28:05,040 --> 01:28:09,360
at another example again kind of

2407
01:28:06,800 --> 01:28:14,080
starting with alerts

2408
01:28:09,360 --> 01:28:16,559
but this time let's see if we could find

2409
01:28:14,080 --> 01:28:16,559
um

2410
01:28:17,520 --> 01:28:21,520
maybe i might want to

2411
01:28:19,330 --> 01:28:23,040
[Music]

2412
01:28:21,520 --> 01:28:25,199
let's see there's an alert in here that

2413
01:28:23,040 --> 01:28:28,320
i'm looking for it's this one right here

2414
01:28:25,199 --> 01:28:29,599
pdf with embedded file so this is

2415
01:28:28,320 --> 01:28:30,080
something that we might want to look

2416
01:28:29,600 --> 01:28:33,520
into

2417
01:28:30,080 --> 01:28:36,960
so maybe i might drill into it

2418
01:28:33,520 --> 01:28:40,080
and again i could do what i did before

2419
01:28:36,960 --> 01:28:42,400
if i wanted to correlate based on

2420
01:28:40,080 --> 01:28:44,000
community id all i have to do is

2421
01:28:42,400 --> 01:28:45,759
do this and maybe i might want to spawn

2422
01:28:44,000 --> 01:28:46,719
a separate window for that so i right

2423
01:28:45,760 --> 01:28:49,600
click that

2424
01:28:46,719 --> 01:28:50,239
and open link in new tab so sometimes

2425
01:28:49,600 --> 01:28:52,080
you know when you're

2426
01:28:50,239 --> 01:28:54,080
doing an investigation you're spinning

2427
01:28:52,080 --> 01:28:55,760
off multiple tabs

2428
01:28:54,080 --> 01:28:58,639
and collecting all this data kind of in

2429
01:28:55,760 --> 01:29:01,679
parallel so again i'm able to correlate

2430
01:28:58,639 --> 01:29:02,880
from that ids alert and i get my zeke

2431
01:29:01,679 --> 01:29:05,840
http log

2432
01:29:02,880 --> 01:29:08,840
so i could filter to that and i could

2433
01:29:05,840 --> 01:29:10,719
see again this is another request out to

2434
01:29:08,840 --> 01:29:13,440
testmynids.org

2435
01:29:10,719 --> 01:29:15,440
and i could also filter to if i want to

2436
01:29:13,440 --> 01:29:17,599
look at the pfsense firewall log

2437
01:29:15,440 --> 01:29:19,360
there might be additional intelligence

2438
01:29:17,600 --> 01:29:21,600
in that firewall log so i could look at

2439
01:29:19,360 --> 01:29:21,599
that

2440
01:29:22,320 --> 01:29:26,400
and so again having this capability at

2441
01:29:24,480 --> 01:29:27,360
your fingertips is really kind of a game

2442
01:29:26,400 --> 01:29:29,920
changer

2443
01:29:27,360 --> 01:29:31,360
but now let's do something else let's go

2444
01:29:29,920 --> 01:29:33,600
up here

2445
01:29:31,360 --> 01:29:39,839
and let's take this stream let's go to

2446
01:29:33,600 --> 01:29:39,840
our full packet capture

2447
01:29:40,639 --> 01:29:47,440
and we see our ascii transcript here

2448
01:29:44,239 --> 01:29:48,718
and that's all well and good but what if

2449
01:29:47,440 --> 01:29:51,839
we wanted to do

2450
01:29:48,719 --> 01:29:53,360
some sort of analysis on the pdf itself

2451
01:29:51,840 --> 01:29:55,920
now you've got a couple of options

2452
01:29:53,360 --> 01:29:56,559
one of which is to realize that by

2453
01:29:55,920 --> 01:29:59,199
default

2454
01:29:56,560 --> 01:30:00,320
we configure zeek to automatically

2455
01:29:59,199 --> 01:30:02,159
extract

2456
01:30:00,320 --> 01:30:03,920
uh certain interesting file types like

2457
01:30:02,159 --> 01:30:06,559
windows exes and

2458
01:30:03,920 --> 01:30:08,639
pdfs and other file types so you could

2459
01:30:06,560 --> 01:30:09,840
pinch it potentially go and find this on

2460
01:30:08,639 --> 01:30:12,320
the file system

2461
01:30:09,840 --> 01:30:13,199
and pull it out from there another

2462
01:30:12,320 --> 01:30:14,799
option is

2463
01:30:13,199 --> 01:30:17,199
you know maybe you're not dealing with

2464
01:30:14,800 --> 01:30:19,199
that list of predetermined

2465
01:30:17,199 --> 01:30:21,678
file types maybe there's an arbitrary

2466
01:30:19,199 --> 01:30:24,239
file type that an adversary has used

2467
01:30:21,679 --> 01:30:24,960
or maybe data exfiltration that you're

2468
01:30:24,239 --> 01:30:28,159
not already

2469
01:30:24,960 --> 01:30:28,960
extracting on the fly and so you need to

2470
01:30:28,159 --> 01:30:32,719
do some more

2471
01:30:28,960 --> 01:30:35,760
kind of ad hoc file extraction

2472
01:30:32,719 --> 01:30:37,280
so in order to do that let's download

2473
01:30:35,760 --> 01:30:38,800
our pcap

2474
01:30:37,280 --> 01:30:40,719
it's downloaded here to the bottom so

2475
01:30:38,800 --> 01:30:42,880
when i click that we've already

2476
01:30:40,719 --> 01:30:43,840
registered network miner as our pcap

2477
01:30:42,880 --> 01:30:46,880
handler

2478
01:30:43,840 --> 01:30:48,000
and so it spawns network miner 2.6 i go

2479
01:30:46,880 --> 01:30:51,040
to the files tab

2480
01:30:48,000 --> 01:30:54,880
and it's already extracted that pdf

2481
01:30:51,040 --> 01:30:56,800
for me and so now i have that pdf i know

2482
01:30:54,880 --> 01:30:57,600
it's not malicious so i know i'm safe to

2483
01:30:56,800 --> 01:30:59,679
open it

2484
01:30:57,600 --> 01:31:01,440
but there you see that capability of

2485
01:30:59,679 --> 01:31:04,239
being able to

2486
01:31:01,440 --> 01:31:05,360
go into full packet capture extract an

2487
01:31:04,239 --> 01:31:08,879
arbitrary file

2488
01:31:05,360 --> 01:31:10,559
and be able to reconstruct the contents

2489
01:31:08,880 --> 01:31:12,320
of that right out of the network stream

2490
01:31:10,560 --> 01:31:14,639
maybe do some reverse engineering some

2491
01:31:12,320 --> 01:31:17,280
other kind of analysis on it

2492
01:31:14,639 --> 01:31:18,239
that's tremendously powerful so again

2493
01:31:17,280 --> 01:31:20,639
you start to see

2494
01:31:18,239 --> 01:31:22,239
how all of these tools really start to

2495
01:31:20,639 --> 01:31:25,679
come together between

2496
01:31:22,239 --> 01:31:29,199
alerts and hunt and pcap and

2497
01:31:25,679 --> 01:31:30,719
network minor and cyber chef and all of

2498
01:31:29,199 --> 01:31:32,080
these different things really kind of

2499
01:31:30,719 --> 01:31:35,840
work together

2500
01:31:32,080 --> 01:31:37,199
to help you in your quest

2501
01:31:35,840 --> 01:31:38,880
now another thing that you might want to

2502
01:31:37,199 --> 01:31:40,638
do you know we looked at this and we

2503
01:31:38,880 --> 01:31:42,560
determined well this is really no big

2504
01:31:40,639 --> 01:31:43,040
deal this page is intentionally blank

2505
01:31:42,560 --> 01:31:45,199
and

2506
01:31:43,040 --> 01:31:47,199
again this is only simulated malware so

2507
01:31:45,199 --> 01:31:48,960
i i know there's nothing there but let's

2508
01:31:47,199 --> 01:31:50,159
pretend that there was

2509
01:31:48,960 --> 01:31:52,880
let's pretend there was something

2510
01:31:50,159 --> 01:31:54,719
interesting there uh in that case

2511
01:31:52,880 --> 01:31:56,000
you know if we decide that we might want

2512
01:31:54,719 --> 01:31:59,280
to engage the

2513
01:31:56,000 --> 01:31:59,679
incident response process we might want

2514
01:31:59,280 --> 01:32:02,400
to

2515
01:31:59,679 --> 01:32:04,000
take that particular alert and instead

2516
01:32:02,400 --> 01:32:06,239
of acknowledging it as we did

2517
01:32:04,000 --> 01:32:07,520
in the beginning we might want to

2518
01:32:06,239 --> 01:32:10,559
escalate it

2519
01:32:07,520 --> 01:32:12,800
so when i hover over that blue triangle

2520
01:32:10,560 --> 01:32:14,480
it does show me that it's uh escalating

2521
01:32:12,800 --> 01:32:17,679
so when i click that

2522
01:32:14,480 --> 01:32:19,599
it's going to then create a case in the

2523
01:32:17,679 --> 01:32:21,199
hive you see it escalated the alert and

2524
01:32:19,600 --> 01:32:24,239
removed it from the view

2525
01:32:21,199 --> 01:32:26,799
if i still wanted to see that in the

2526
01:32:24,239 --> 01:32:29,440
alerts page i could toggle this

2527
01:32:26,800 --> 01:32:31,040
escalated button and i'd be able to see

2528
01:32:29,440 --> 01:32:33,678
it there

2529
01:32:31,040 --> 01:32:35,679
but since i have escalated it i should

2530
01:32:33,679 --> 01:32:38,880
be able to go over to the hive

2531
01:32:35,679 --> 01:32:40,960
and i now have a case that has been kind

2532
01:32:38,880 --> 01:32:45,520
of pre-loaded with a little bit of

2533
01:32:40,960 --> 01:32:47,280
information about that particular alert

2534
01:32:45,520 --> 01:32:48,639
so i've got the case there in the hive

2535
01:32:47,280 --> 01:32:50,639
and i could continue

2536
01:32:48,639 --> 01:32:52,320
adding indicators to that case and

2537
01:32:50,639 --> 01:32:56,400
ultimately working through

2538
01:32:52,320 --> 01:32:56,400
towards closing that case

2539
01:32:56,480 --> 01:33:00,000
so that's really kind of the the first

2540
01:32:58,400 --> 01:33:01,599
use case that i wanted to

2541
01:33:00,000 --> 01:33:03,280
highlight and that's that's really that

2542
01:33:01,600 --> 01:33:06,800
basic use case of

2543
01:33:03,280 --> 01:33:08,400
starting with an alert and then

2544
01:33:06,800 --> 01:33:10,480
pivoting from there pivoting to full

2545
01:33:08,400 --> 01:33:13,280
packet capture pivoting to other logs

2546
01:33:10,480 --> 01:33:16,480
based on community id

2547
01:33:13,280 --> 01:33:18,239
now let's move on to kind of our second

2548
01:33:16,480 --> 01:33:19,919
use case that's a little bit more

2549
01:33:18,239 --> 01:33:21,040
complicated it's a little bit more

2550
01:33:19,920 --> 01:33:23,199
sophisticated

2551
01:33:21,040 --> 01:33:25,040
and that's where we don't start with an

2552
01:33:23,199 --> 01:33:25,919
ids alert that's where we start with

2553
01:33:25,040 --> 01:33:28,960
more

2554
01:33:25,920 --> 01:33:31,440
kind of abstract threat hunting

2555
01:33:28,960 --> 01:33:33,280
and so instead of going directly to

2556
01:33:31,440 --> 01:33:34,080
alerts here we're going to go directly

2557
01:33:33,280 --> 01:33:36,639
to

2558
01:33:34,080 --> 01:33:37,840
hunt so when you go to hunt you're going

2559
01:33:36,639 --> 01:33:39,679
to start

2560
01:33:37,840 --> 01:33:42,320
on a page like this which essentially

2561
01:33:39,679 --> 01:33:44,480
takes all of your data

2562
01:33:42,320 --> 01:33:46,799
notice the star and the query and it

2563
01:33:44,480 --> 01:33:48,320
pipes that into a group by four observer

2564
01:33:46,800 --> 01:33:50,800
name and this essentially tells you

2565
01:33:48,320 --> 01:33:53,360
where your data came from in this case

2566
01:33:50,800 --> 01:33:53,920
i have my standalone security onion

2567
01:33:53,360 --> 01:33:55,920
instance

2568
01:33:53,920 --> 01:33:57,920
and that's where most of my logs came

2569
01:33:55,920 --> 01:34:01,440
from seventy thousand of them

2570
01:33:57,920 --> 01:34:03,679
but i also have this windows 10 desktop

2571
01:34:01,440 --> 01:34:05,599
and that sent sixty thousand logs by

2572
01:34:03,679 --> 01:34:08,639
itself

2573
01:34:05,600 --> 01:34:12,080
and so you know we could start here

2574
01:34:08,639 --> 01:34:15,760
just a extremely high level 30 000 foot

2575
01:34:12,080 --> 01:34:18,559
overview uh and we could drill into

2576
01:34:15,760 --> 01:34:19,360
just show me the logs for my network

2577
01:34:18,560 --> 01:34:22,080
sensor

2578
01:34:19,360 --> 01:34:23,759
so again i i click on the field that

2579
01:34:22,080 --> 01:34:24,719
brings up the quick action bar i click

2580
01:34:23,760 --> 01:34:26,480
on the plus

2581
01:34:24,719 --> 01:34:28,719
and that's going to add it to my query

2582
01:34:26,480 --> 01:34:31,040
up here and update the results so now

2583
01:34:28,719 --> 01:34:35,040
i'm just looking at those logs

2584
01:34:31,040 --> 01:34:36,480
from my security onion box itself

2585
01:34:35,040 --> 01:34:38,560
and then i could continue my threat

2586
01:34:36,480 --> 01:34:40,799
hunting i could do things like

2587
01:34:38,560 --> 01:34:43,119
you know look at a particular ip address

2588
01:34:40,800 --> 01:34:46,320
i could filter based on that

2589
01:34:43,119 --> 01:34:47,759
or i could do a group so

2590
01:34:46,320 --> 01:34:50,080
if there's an interesting field down

2591
01:34:47,760 --> 01:34:52,239
here i use this third icon

2592
01:34:50,080 --> 01:34:54,000
which adds it as a group by field and so

2593
01:34:52,239 --> 01:34:56,000
what that does

2594
01:34:54,000 --> 01:34:58,480
is up here at the top my group by used

2595
01:34:56,000 --> 01:35:01,840
to say observer name now it also says

2596
01:34:58,480 --> 01:35:04,799
source ip so in the group metrics

2597
01:35:01,840 --> 01:35:06,880
table i now have not just observer name

2598
01:35:04,800 --> 01:35:09,840
but also source ip as well

2599
01:35:06,880 --> 01:35:12,719
and i start to see the patterns of what

2600
01:35:09,840 --> 01:35:15,760
are the top talkers on my network

2601
01:35:12,719 --> 01:35:17,040
so you can continue refining this query

2602
01:35:15,760 --> 01:35:19,600
you can continue

2603
01:35:17,040 --> 01:35:22,239
slicing and dicing this data using all

2604
01:35:19,600 --> 01:35:24,080
these different fields at your disposal

2605
01:35:22,239 --> 01:35:26,239
and that's really kind of ad hoc threat

2606
01:35:24,080 --> 01:35:27,679
hunting and maybe that's what you do

2607
01:35:26,239 --> 01:35:31,119
some of the time

2608
01:35:27,679 --> 01:35:32,960
but we do also have some pre-designed

2609
01:35:31,119 --> 01:35:35,199
queries for you

2610
01:35:32,960 --> 01:35:36,320
in this query box so if you click the

2611
01:35:35,199 --> 01:35:39,280
drop down

2612
01:35:36,320 --> 01:35:40,960
we've got a whole long list of

2613
01:35:39,280 --> 01:35:43,040
predefined queries

2614
01:35:40,960 --> 01:35:44,000
for each of the major data types we've

2615
01:35:43,040 --> 01:35:47,280
got at least

2616
01:35:44,000 --> 01:35:50,080
one query predefined for you and so

2617
01:35:47,280 --> 01:35:50,639
for this use case let's really kind of

2618
01:35:50,080 --> 01:35:54,080
start

2619
01:35:50,639 --> 01:35:57,119
with our z logs and let's start with uh

2620
01:35:54,080 --> 01:35:58,480
you know a pretty uh pretty fertile

2621
01:35:57,119 --> 01:36:02,559
hunting ground and that's

2622
01:35:58,480 --> 01:36:03,199
http logs so we've got a few different

2623
01:36:02,560 --> 01:36:06,960
queries

2624
01:36:03,199 --> 01:36:09,040
for zeek http logs you could do http

2625
01:36:06,960 --> 01:36:09,520
grouped by destination port we could see

2626
01:36:09,040 --> 01:36:10,800
that

2627
01:36:09,520 --> 01:36:12,800
really all of our traffic was on

2628
01:36:10,800 --> 01:36:15,440
destination port 80 so

2629
01:36:12,800 --> 01:36:15,920
you know there's nothing really unique

2630
01:36:15,440 --> 01:36:18,400
to

2631
01:36:15,920 --> 01:36:21,119
to drill into there no outliers there i

2632
01:36:18,400 --> 01:36:22,638
could choose http grouped by status code

2633
01:36:21,119 --> 01:36:24,719
and message

2634
01:36:22,639 --> 01:36:27,520
and that's going to show me my my status

2635
01:36:24,719 --> 01:36:28,719
codes and my status messages

2636
01:36:27,520 --> 01:36:30,800
a lot of times you can pick out

2637
01:36:28,719 --> 01:36:33,280
interesting anomalies here where

2638
01:36:30,800 --> 01:36:34,159
you know maybe you have a status code

2639
01:36:33,280 --> 01:36:36,880
202

2640
01:36:34,159 --> 01:36:38,080
which returns different things depending

2641
01:36:36,880 --> 01:36:40,560
on what kind of web server

2642
01:36:38,080 --> 01:36:42,480
it is maybe you have a an interesting

2643
01:36:40,560 --> 01:36:44,000
adversary web server that returns an

2644
01:36:42,480 --> 01:36:44,559
interesting status message and maybe

2645
01:36:44,000 --> 01:36:46,960
that's

2646
01:36:44,560 --> 01:36:48,800
an anomaly that you can pick up on but

2647
01:36:46,960 --> 01:36:49,840
continuing further in our predefined

2648
01:36:48,800 --> 01:36:52,080
queries

2649
01:36:49,840 --> 01:36:53,360
we could look at one of my favorite

2650
01:36:52,080 --> 01:36:58,480
queries which is

2651
01:36:53,360 --> 01:37:00,320
http grouped by method and user agent

2652
01:36:58,480 --> 01:37:02,080
and so it's always interesting to me you

2653
01:37:00,320 --> 01:37:02,719
know whenever i get on somebody's

2654
01:37:02,080 --> 01:37:04,400
network

2655
01:37:02,719 --> 01:37:06,159
and i run this query and i look at the

2656
01:37:04,400 --> 01:37:07,519
different user agent strings that are on

2657
01:37:06,159 --> 01:37:09,280
their network you never know what you're

2658
01:37:07,520 --> 01:37:10,560
going to find

2659
01:37:09,280 --> 01:37:12,480
you know you're always going to find

2660
01:37:10,560 --> 01:37:14,800
something interesting it might be

2661
01:37:12,480 --> 01:37:15,759
evil malware or it might be something

2662
01:37:14,800 --> 01:37:17,679
that's you know

2663
01:37:15,760 --> 01:37:19,199
misconfigured or it might be something

2664
01:37:17,679 --> 01:37:22,480
that is

2665
01:37:19,199 --> 01:37:24,320
some bring your own device that's

2666
01:37:22,480 --> 01:37:26,159
something that's not really expected to

2667
01:37:24,320 --> 01:37:27,599
be on that network but in this case

2668
01:37:26,159 --> 01:37:30,320
you know let's look through these user

2669
01:37:27,600 --> 01:37:32,639
agents and we see well here's apt cacher

2670
01:37:30,320 --> 01:37:33,360
and ge that's actually part of security

2671
01:37:32,639 --> 01:37:36,320
onion

2672
01:37:33,360 --> 01:37:37,040
here's microsoft crypto api that's

2673
01:37:36,320 --> 01:37:39,679
probably

2674
01:37:37,040 --> 01:37:41,600
a legitimate component of windows of

2675
01:37:39,679 --> 01:37:43,520
course malware could potentially use

2676
01:37:41,600 --> 01:37:45,280
that or at least spoof that

2677
01:37:43,520 --> 01:37:46,880
but you know just looking through this

2678
01:37:45,280 --> 01:37:48,320
list for things that are interesting we

2679
01:37:46,880 --> 01:37:49,679
do see some things that are interesting

2680
01:37:48,320 --> 01:37:53,199
down at the bottom

2681
01:37:49,679 --> 01:37:56,080
of the list so for example

2682
01:37:53,199 --> 01:37:58,638
black sun i don't know off the top of my

2683
01:37:56,080 --> 01:38:02,080
head of any legitimate software

2684
01:37:58,639 --> 01:38:06,719
that has a user agent string of black

2685
01:38:02,080 --> 01:38:08,960
sun so i might want to investigate that

2686
01:38:06,719 --> 01:38:10,080
so again as we've done before we might

2687
01:38:08,960 --> 01:38:12,159
click on that

2688
01:38:10,080 --> 01:38:15,199
and click the plus sign and that's going

2689
01:38:12,159 --> 01:38:18,000
to add that http user agent black sun

2690
01:38:15,199 --> 01:38:19,440
to my query and so now i've i've

2691
01:38:18,000 --> 01:38:23,040
filtered the rest of my data

2692
01:38:19,440 --> 01:38:26,480
i'm only seeing that one log

2693
01:38:23,040 --> 01:38:28,560
that contained that one user agent

2694
01:38:26,480 --> 01:38:29,759
and again we've done a lot of work

2695
01:38:28,560 --> 01:38:32,639
inside of hunt

2696
01:38:29,760 --> 01:38:34,960
to make sure that it's intelligent

2697
01:38:32,639 --> 01:38:36,320
enough to recognize what kind of data

2698
01:38:34,960 --> 01:38:39,360
you're looking at

2699
01:38:36,320 --> 01:38:41,280
and show you interesting fields down

2700
01:38:39,360 --> 01:38:43,519
here in the bottom

2701
01:38:41,280 --> 01:38:45,280
so what that means is i'm looking at a

2702
01:38:43,520 --> 01:38:47,440
zeke http log so it's

2703
01:38:45,280 --> 01:38:48,800
showing me fields that are specific to

2704
01:38:47,440 --> 01:38:52,559
that http

2705
01:38:48,800 --> 01:38:55,199
data type for example http method

2706
01:38:52,560 --> 01:38:56,320
virtual host status code status message

2707
01:38:55,199 --> 01:38:59,440
body length

2708
01:38:56,320 --> 01:39:02,159
uh and so on and so forth

2709
01:38:59,440 --> 01:39:02,559
and one thing that's uh pretty common

2710
01:39:02,159 --> 01:39:05,280
for

2711
01:39:02,560 --> 01:39:06,480
most of these log types is that network

2712
01:39:05,280 --> 01:39:08,880
community id

2713
01:39:06,480 --> 01:39:10,718
value as we said before that's a great

2714
01:39:08,880 --> 01:39:13,600
way to correlate

2715
01:39:10,719 --> 01:39:15,440
between zeke logs and surycata alerts

2716
01:39:13,600 --> 01:39:18,080
and sysmon logs and all different

2717
01:39:15,440 --> 01:39:19,199
data types so let's do that let's click

2718
01:39:18,080 --> 01:39:21,280
on the community id

2719
01:39:19,199 --> 01:39:22,638
value and let's use that clear

2720
01:39:21,280 --> 01:39:25,759
magnifying glass

2721
01:39:22,639 --> 01:39:26,719
to start a new hunt for that particular

2722
01:39:25,760 --> 01:39:29,760
value

2723
01:39:26,719 --> 01:39:31,199
notice it erased my previous query

2724
01:39:29,760 --> 01:39:33,520
we're now just looking for that

2725
01:39:31,199 --> 01:39:34,159
community id we're grouping by event

2726
01:39:33,520 --> 01:39:37,520
module

2727
01:39:34,159 --> 01:39:39,119
and event data set we see we've got some

2728
01:39:37,520 --> 01:39:42,159
interesting data here

2729
01:39:39,119 --> 01:39:43,280
we have not just the zeek hddp log but

2730
01:39:42,159 --> 01:39:46,480
we also have the zeek

2731
01:39:43,280 --> 01:39:48,800
con log we also have a cerakata alert

2732
01:39:46,480 --> 01:39:50,000
we have a pf since firewall log and we

2733
01:39:48,800 --> 01:39:52,960
have a sysmon

2734
01:39:50,000 --> 01:39:53,360
network connection log so let's look at

2735
01:39:52,960 --> 01:39:55,679
these

2736
01:39:53,360 --> 01:39:57,759
in turn you know you could drill into

2737
01:39:55,679 --> 01:40:00,159
the z con log

2738
01:39:57,760 --> 01:40:01,119
and again this bottom table is going to

2739
01:40:00,159 --> 01:40:03,040
dynamically

2740
01:40:01,119 --> 01:40:04,320
update itself based on the data type

2741
01:40:03,040 --> 01:40:07,040
that we're looking at

2742
01:40:04,320 --> 01:40:08,000
so we no longer see http fields we see

2743
01:40:07,040 --> 01:40:11,040
fields relevant

2744
01:40:08,000 --> 01:40:12,719
to the con log we could drill into this

2745
01:40:11,040 --> 01:40:14,320
see if there's anything interesting here

2746
01:40:12,719 --> 01:40:18,080
maybe in the the geoip

2747
01:40:14,320 --> 01:40:19,679
information but when i'm done with that

2748
01:40:18,080 --> 01:40:23,040
maybe i might go back

2749
01:40:19,679 --> 01:40:24,239
and say well i've looked at con and http

2750
01:40:23,040 --> 01:40:27,519
so maybe i might want to look at the

2751
01:40:24,239 --> 01:40:29,440
psense firewall log

2752
01:40:27,520 --> 01:40:30,800
again it dynamically updates the fields

2753
01:40:29,440 --> 01:40:33,040
that are shown here to show

2754
01:40:30,800 --> 01:40:35,040
fields that are relevant to pf since

2755
01:40:33,040 --> 01:40:36,880
firewall logs

2756
01:40:35,040 --> 01:40:38,400
i might want to drill into that see if

2757
01:40:36,880 --> 01:40:40,639
there's any interesting information

2758
01:40:38,400 --> 01:40:40,638
there

2759
01:40:40,960 --> 01:40:44,320
next up i might want to look at the

2760
01:40:42,159 --> 01:40:45,199
suricata alert now this is an

2761
01:40:44,320 --> 01:40:47,360
interesting

2762
01:40:45,199 --> 01:40:50,000
uh use case here because you know we

2763
01:40:47,360 --> 01:40:52,559
didn't start with an ids alert

2764
01:40:50,000 --> 01:40:54,000
but here we're actually we started with

2765
01:40:52,560 --> 01:40:56,400
some threat hunting

2766
01:40:54,000 --> 01:40:57,440
and we're now using an ids alert to kind

2767
01:40:56,400 --> 01:41:01,199
of confirm

2768
01:40:57,440 --> 01:41:04,480
our suspicions that this user agent

2769
01:41:01,199 --> 01:41:07,519
is indeed suspicious because

2770
01:41:04,480 --> 01:41:08,000
the rule actually says suspicious user

2771
01:41:07,520 --> 01:41:10,880
agent

2772
01:41:08,000 --> 01:41:11,920
black sun and so somebody else thought

2773
01:41:10,880 --> 01:41:14,639
this was suspicious

2774
01:41:11,920 --> 01:41:15,199
in addition to us so here what we're

2775
01:41:14,639 --> 01:41:16,960
seeing is

2776
01:41:15,199 --> 01:41:18,960
you know ids alerts not only do they

2777
01:41:16,960 --> 01:41:20,320
start investigations but many times they

2778
01:41:18,960 --> 01:41:21,920
may actually confirm

2779
01:41:20,320 --> 01:41:23,759
your suspicions they can give you

2780
01:41:21,920 --> 01:41:25,760
additional confidence

2781
01:41:23,760 --> 01:41:27,840
that you're not just leaping to

2782
01:41:25,760 --> 01:41:30,880
conclusions

2783
01:41:27,840 --> 01:41:32,239
so that's definitely very interesting

2784
01:41:30,880 --> 01:41:35,280
and then finally we might want to look

2785
01:41:32,239 --> 01:41:37,280
at that sysmon log

2786
01:41:35,280 --> 01:41:39,519
again this data table at the bottom

2787
01:41:37,280 --> 01:41:40,559
updates itself dynamically based on the

2788
01:41:39,520 --> 01:41:43,199
data type

2789
01:41:40,560 --> 01:41:44,320
and it knows that for sysmon logs i want

2790
01:41:43,199 --> 01:41:47,519
to show

2791
01:41:44,320 --> 01:41:48,639
hostname and process executable so again

2792
01:41:47,520 --> 01:41:51,840
we see that that's

2793
01:41:48,639 --> 01:41:52,719
a curl binary running on that windows

2794
01:41:51,840 --> 01:41:56,000
endpoint

2795
01:41:52,719 --> 01:41:58,239
that generated that network traffic

2796
01:41:56,000 --> 01:42:00,080
so that's that's amazing you know when i

2797
01:41:58,239 --> 01:42:01,678
think about my my early career and some

2798
01:42:00,080 --> 01:42:03,440
of the incidents that i handled early on

2799
01:42:01,679 --> 01:42:05,600
in my career if i would have had this

2800
01:42:03,440 --> 01:42:07,360
kind of capability back then

2801
01:42:05,600 --> 01:42:09,600
that literally would have been a

2802
01:42:07,360 --> 01:42:11,599
jet-powered motorcycle

2803
01:42:09,600 --> 01:42:14,560
that would have powered that incident

2804
01:42:11,600 --> 01:42:16,000
response process

2805
01:42:14,560 --> 01:42:18,159
all right so that was kind of use case

2806
01:42:16,000 --> 01:42:19,600
number two and that's not starting from

2807
01:42:18,159 --> 01:42:22,080
an ids alert but

2808
01:42:19,600 --> 01:42:24,639
more some ad hoc threat hunting basic

2809
01:42:22,080 --> 01:42:27,519
threat hunting looking at our http

2810
01:42:24,639 --> 01:42:28,000
uh zclogs now let's take a look at

2811
01:42:27,520 --> 01:42:30,080
another

2812
01:42:28,000 --> 01:42:31,199
use case again not starting with ids

2813
01:42:30,080 --> 01:42:33,840
alerts

2814
01:42:31,199 --> 01:42:34,320
uh but this time let's actually start

2815
01:42:33,840 --> 01:42:36,960
with

2816
01:42:34,320 --> 01:42:39,040
our our sysmon logs so let's go from

2817
01:42:36,960 --> 01:42:40,480
that host-based perspective

2818
01:42:39,040 --> 01:42:43,280
and so we do actually have some

2819
01:42:40,480 --> 01:42:45,678
predefined queries for sysmon in our

2820
01:42:43,280 --> 01:42:48,639
drop-down box

2821
01:42:45,679 --> 01:42:49,440
so if i were to go to sysmon events this

2822
01:42:48,639 --> 01:42:52,840
is going to take

2823
01:42:49,440 --> 01:42:54,559
all of my sysmon logs and group by

2824
01:42:52,840 --> 01:42:56,400
event.dataset

2825
01:42:54,560 --> 01:42:57,679
again we've done lots and lots of work

2826
01:42:56,400 --> 01:43:00,480
on hunt

2827
01:42:57,679 --> 01:43:01,360
not only in making this bottom data

2828
01:43:00,480 --> 01:43:04,159
table really

2829
01:43:01,360 --> 01:43:05,119
understand what data type you're looking

2830
01:43:04,159 --> 01:43:08,638
at but

2831
01:43:05,119 --> 01:43:11,679
really making these predefined queries

2832
01:43:08,639 --> 01:43:12,239
immediately actionable and making sure

2833
01:43:11,679 --> 01:43:14,719
that the

2834
01:43:12,239 --> 01:43:17,199
pivots when you're uh you know starting

2835
01:43:14,719 --> 01:43:19,679
a new hunt for a particular indicator

2836
01:43:17,199 --> 01:43:21,759
making sure that that pivot is giving

2837
01:43:19,679 --> 01:43:24,080
you default data here

2838
01:43:21,760 --> 01:43:24,800
that's going to give you a good starting

2839
01:43:24,080 --> 01:43:26,719
point

2840
01:43:24,800 --> 01:43:28,880
to then whittle that down and look for

2841
01:43:26,719 --> 01:43:32,320
those statistical anomalies those

2842
01:43:28,880 --> 01:43:34,480
outliers that are in your data

2843
01:43:32,320 --> 01:43:37,840
so now that i'm looking at sysmon data

2844
01:43:34,480 --> 01:43:40,400
and i'm grouping by event.dataset

2845
01:43:37,840 --> 01:43:41,600
we might then want to look at network

2846
01:43:40,400 --> 01:43:45,440
connections

2847
01:43:41,600 --> 01:43:48,400
so if i take that click the plus

2848
01:43:45,440 --> 01:43:50,559
again my events table recognizes the

2849
01:43:48,400 --> 01:43:52,960
fact that i'm looking at sysmon logs and

2850
01:43:50,560 --> 01:43:56,000
it shows me relevant fields here

2851
01:43:52,960 --> 01:43:59,520
including that process executable

2852
01:43:56,000 --> 01:44:02,159
and now what we're seeing is uh

2853
01:43:59,520 --> 01:44:04,080
evidence of this curl binary that we've

2854
01:44:02,159 --> 01:44:06,159
we've seen a couple of times so far it

2855
01:44:04,080 --> 01:44:10,080
actually did a bunch of stuff

2856
01:44:06,159 --> 01:44:13,040
so that curl binary created a lot of

2857
01:44:10,080 --> 01:44:14,880
network connections now what i might

2858
01:44:13,040 --> 01:44:17,440
want to do

2859
01:44:14,880 --> 01:44:18,000
you know if i had hundreds or thousands

2860
01:44:17,440 --> 01:44:21,440
of

2861
01:44:18,000 --> 01:44:24,400
these logs i probably don't want to go

2862
01:44:21,440 --> 01:44:27,839
row by row or page by page through those

2863
01:44:24,400 --> 01:44:30,320
i want to use that power of the group by

2864
01:44:27,840 --> 01:44:31,199
to really kind of collapse that large

2865
01:44:30,320 --> 01:44:33,920
mountain of data

2866
01:44:31,199 --> 01:44:34,320
into something that's more manageable

2867
01:44:33,920 --> 01:44:36,400
and so

2868
01:44:34,320 --> 01:44:37,360
i could take this process executable

2869
01:44:36,400 --> 01:44:39,360
field

2870
01:44:37,360 --> 01:44:40,400
and i could click on that and i could

2871
01:44:39,360 --> 01:44:43,360
click my

2872
01:44:40,400 --> 01:44:45,599
group by icon so now that's going to

2873
01:44:43,360 --> 01:44:48,159
take all of those logs

2874
01:44:45,600 --> 01:44:49,520
it's going to add process executable as

2875
01:44:48,159 --> 01:44:51,280
a group by

2876
01:44:49,520 --> 01:44:53,840
and so now i've gone from a single group

2877
01:44:51,280 --> 01:44:55,840
by to a multi-group buy

2878
01:44:53,840 --> 01:44:57,679
and i can see that the vast majority of

2879
01:44:55,840 --> 01:44:59,360
my network connection

2880
01:44:57,679 --> 01:45:00,880
uh vast majority of my network

2881
01:44:59,360 --> 01:45:03,360
connections came

2882
01:45:00,880 --> 01:45:04,960
from curl but i did have a couple of

2883
01:45:03,360 --> 01:45:07,519
network connections coming from

2884
01:45:04,960 --> 01:45:08,800
digg that's another something

2885
01:45:07,520 --> 01:45:11,840
interesting that happened

2886
01:45:08,800 --> 01:45:14,960
i don't normally expect to see curl

2887
01:45:11,840 --> 01:45:16,719
or dig running on a windows endpoint

2888
01:45:14,960 --> 01:45:18,239
but that's definitely something of

2889
01:45:16,719 --> 01:45:20,800
interest

2890
01:45:18,239 --> 01:45:22,718
so maybe i take that dig because there's

2891
01:45:20,800 --> 01:45:24,960
only two of those and i say well what

2892
01:45:22,719 --> 01:45:25,920
what's up with that so i click on the

2893
01:45:24,960 --> 01:45:28,080
plus sign

2894
01:45:25,920 --> 01:45:29,040
that updates my query i'm only looking

2895
01:45:28,080 --> 01:45:32,159
at those

2896
01:45:29,040 --> 01:45:34,320
two instances of network connections

2897
01:45:32,159 --> 01:45:36,000
created by digg

2898
01:45:34,320 --> 01:45:37,679
and then what i could do is i could say

2899
01:45:36,000 --> 01:45:38,560
well there's there's two records down

2900
01:45:37,679 --> 01:45:40,639
here

2901
01:45:38,560 --> 01:45:42,639
but again imagine that this is not just

2902
01:45:40,639 --> 01:45:46,000
two records imagine this is

2903
01:45:42,639 --> 01:45:47,679
200 or 2000 or 20 000 you don't want to

2904
01:45:46,000 --> 01:45:50,400
go line by line through that

2905
01:45:47,679 --> 01:45:50,960
again you want to use the power of group

2906
01:45:50,400 --> 01:45:54,879
buys

2907
01:45:50,960 --> 01:45:56,880
so maybe you group by destination ip

2908
01:45:54,880 --> 01:45:58,080
and that's really the beauty of this

2909
01:45:56,880 --> 01:46:01,840
hunt interface

2910
01:45:58,080 --> 01:46:04,480
is that we can dynamically

2911
01:46:01,840 --> 01:46:04,880
add as many group buys as we want to we

2912
01:46:04,480 --> 01:46:07,119
can

2913
01:46:04,880 --> 01:46:09,199
we can do arbitrary group buys and we're

2914
01:46:07,119 --> 01:46:10,000
not kind of bound by some predefined

2915
01:46:09,199 --> 01:46:13,199
notion

2916
01:46:10,000 --> 01:46:15,600
of what that group buy should be

2917
01:46:13,199 --> 01:46:17,599
uh and this is really kind of to me part

2918
01:46:15,600 --> 01:46:20,320
of the essence of threat hunting is is

2919
01:46:17,600 --> 01:46:21,679
being able to zoom out and zoom in very

2920
01:46:20,320 --> 01:46:24,880
quickly and easily

2921
01:46:21,679 --> 01:46:26,800
and do that all day long as you're going

2922
01:46:24,880 --> 01:46:28,159
on these hunting expeditions and

2923
01:46:26,800 --> 01:46:29,679
you know finding an interesting piece of

2924
01:46:28,159 --> 01:46:31,519
data drilling into that and then

2925
01:46:29,679 --> 01:46:32,639
pivoting off of that casting a wider net

2926
01:46:31,520 --> 01:46:34,480
for something else

2927
01:46:32,639 --> 01:46:36,480
constantly is doing this zooming in and

2928
01:46:34,480 --> 01:46:38,000
zooming out

2929
01:46:36,480 --> 01:46:40,080
so now let's let's take it a step

2930
01:46:38,000 --> 01:46:44,080
further let's say well you know

2931
01:46:40,080 --> 01:46:46,559
this is ipv6 let's focus on the 8.8.8.8

2932
01:46:44,080 --> 01:46:50,080
of course that's google's dns server

2933
01:46:46,560 --> 01:46:51,920
we could filter in on that and then

2934
01:46:50,080 --> 01:46:53,119
you know if we wanted to do that thing

2935
01:46:51,920 --> 01:46:56,159
that we've done before

2936
01:46:53,119 --> 01:46:58,239
of pivoting on community id

2937
01:46:56,159 --> 01:46:59,519
uh notice that for this particular data

2938
01:46:58,239 --> 01:47:02,400
type we're not actually

2939
01:46:59,520 --> 01:47:03,199
exposing the community id field by

2940
01:47:02,400 --> 01:47:06,080
default

2941
01:47:03,199 --> 01:47:06,480
but it is still there so if i click on

2942
01:47:06,080 --> 01:47:09,119
the

2943
01:47:06,480 --> 01:47:10,480
drop down arrow and then scroll down my

2944
01:47:09,119 --> 01:47:12,799
list of fields

2945
01:47:10,480 --> 01:47:14,559
there's my network community id and

2946
01:47:12,800 --> 01:47:17,040
again i simply click on that

2947
01:47:14,560 --> 01:47:18,080
i click the clear magnifying glass and

2948
01:47:17,040 --> 01:47:22,400
that's going to start

2949
01:47:18,080 --> 01:47:24,960
a brand new hunt for that community id

2950
01:47:22,400 --> 01:47:25,759
and that's going to show me not just the

2951
01:47:24,960 --> 01:47:27,920
original

2952
01:47:25,760 --> 01:47:29,199
sysmond network connection that i

2953
01:47:27,920 --> 01:47:30,960
started off with

2954
01:47:29,199 --> 01:47:32,879
but again all those other data types

2955
01:47:30,960 --> 01:47:36,320
that we've seen in all those previous

2956
01:47:32,880 --> 01:47:37,199
case studies so i have a pf sense

2957
01:47:36,320 --> 01:47:38,400
firewall log

2958
01:47:37,199 --> 01:47:40,400
as the connection went through the

2959
01:47:38,400 --> 01:47:44,159
firewall the firewall logged it

2960
01:47:40,400 --> 01:47:45,280
and included well the firewall didn't

2961
01:47:44,159 --> 01:47:49,280
include the community id

2962
01:47:45,280 --> 01:47:50,159
value our elasticsearch ingest processor

2963
01:47:49,280 --> 01:47:52,800
dynamically

2964
01:47:50,159 --> 01:47:55,040
generated that community id value when

2965
01:47:52,800 --> 01:47:58,239
we collected that firewall log

2966
01:47:55,040 --> 01:48:01,199
and stored it in elasticsearch

2967
01:47:58,239 --> 01:48:03,280
we also have a zeke dns log as econ log

2968
01:48:01,199 --> 01:48:05,280
and oh by the way here's another example

2969
01:48:03,280 --> 01:48:05,840
of starting with threat hunting but then

2970
01:48:05,280 --> 01:48:09,280
finding

2971
01:48:05,840 --> 01:48:10,880
some alerts that might kind of

2972
01:48:09,280 --> 01:48:12,719
increase confidence that we found

2973
01:48:10,880 --> 01:48:14,560
something suspicious so what if i drill

2974
01:48:12,719 --> 01:48:17,119
into that

2975
01:48:14,560 --> 01:48:18,080
well when i filter to just my cericada

2976
01:48:17,119 --> 01:48:21,360
alerts i see

2977
01:48:18,080 --> 01:48:22,800
that i have an alert fired for et policy

2978
01:48:21,360 --> 01:48:24,960
dns query for

2979
01:48:22,800 --> 01:48:26,080
tor hidden domain dot onion accessible

2980
01:48:24,960 --> 01:48:29,760
via tor

2981
01:48:26,080 --> 01:48:30,239
and for the malware category crypto wall

2982
01:48:29,760 --> 01:48:33,920
dot

2983
01:48:30,239 --> 01:48:34,400
onion proxy domain so again definitely

2984
01:48:33,920 --> 01:48:37,520
seeing

2985
01:48:34,400 --> 01:48:38,559
interesting activity here um starting

2986
01:48:37,520 --> 01:48:41,920
with threat hunting but

2987
01:48:38,560 --> 01:48:44,840
confirmed with those ids alerts

2988
01:48:41,920 --> 01:48:46,480
that we're definitely seeing something

2989
01:48:44,840 --> 01:48:48,639
interesting

2990
01:48:46,480 --> 01:48:49,678
so that's really kind of use case number

2991
01:48:48,639 --> 01:48:52,159
three that was

2992
01:48:49,679 --> 01:48:52,880
starting with cis mine and now let's

2993
01:48:52,159 --> 01:48:54,638
let's kind of

2994
01:48:52,880 --> 01:48:55,920
you know go around the other side let's

2995
01:48:54,639 --> 01:48:57,840
look at this from the other angle and

2996
01:48:55,920 --> 01:48:59,679
let's let's start another case study

2997
01:48:57,840 --> 01:49:01,840
really kind of starting from

2998
01:48:59,679 --> 01:49:03,119
our firewall logs because again that's

2999
01:49:01,840 --> 01:49:05,360
that's another one of those kind of

3000
01:49:03,119 --> 01:49:09,920
fertile hunting grounds right if you're

3001
01:49:05,360 --> 01:49:13,040
able to collect logs from your firewalls

3002
01:49:09,920 --> 01:49:16,960
then you could run this query here event

3003
01:49:13,040 --> 01:49:18,400
data set firewall group by rule.action

3004
01:49:16,960 --> 01:49:20,480
and that's going to show me all the

3005
01:49:18,400 --> 01:49:22,480
traffic that passed through the firewall

3006
01:49:20,480 --> 01:49:23,759
all the traffic that was blocked by the

3007
01:49:22,480 --> 01:49:25,839
firewall

3008
01:49:23,760 --> 01:49:27,679
and so you know maybe i'm less concerned

3009
01:49:25,840 --> 01:49:30,480
about traffic that got blocked

3010
01:49:27,679 --> 01:49:32,560
maybe i'm maybe i'm more interested in

3011
01:49:30,480 --> 01:49:35,598
things that passed through the firewall

3012
01:49:32,560 --> 01:49:36,560
so maybe i filter on that and then again

3013
01:49:35,599 --> 01:49:38,880
i've got

3014
01:49:36,560 --> 01:49:42,239
lots and lots of of results here i've

3015
01:49:38,880 --> 01:49:44,880
got 65 000 results uh

3016
01:49:42,239 --> 01:49:46,480
65 000 connections that pass through

3017
01:49:44,880 --> 01:49:47,119
that firewall i don't want to go through

3018
01:49:46,480 --> 01:49:49,598
that

3019
01:49:47,119 --> 01:49:51,519
row by row and page through page that

3020
01:49:49,599 --> 01:49:55,040
would take an eternity

3021
01:49:51,520 --> 01:49:56,639
but let's use this jet powered bicycle

3022
01:49:55,040 --> 01:50:00,239
that we have

3023
01:49:56,639 --> 01:50:03,840
and use it to more effectively

3024
01:50:00,239 --> 01:50:05,839
crunch these numbers down and collapse

3025
01:50:03,840 --> 01:50:07,920
and aggregate those values

3026
01:50:05,840 --> 01:50:10,080
into something that that i can find

3027
01:50:07,920 --> 01:50:13,040
outliers in

3028
01:50:10,080 --> 01:50:13,840
so for example i might take my source ip

3029
01:50:13,040 --> 01:50:15,920
field

3030
01:50:13,840 --> 01:50:17,119
click on this and then group by source

3031
01:50:15,920 --> 01:50:21,040
ip

3032
01:50:17,119 --> 01:50:21,598
now instantly instead of having 65 000

3033
01:50:21,040 --> 01:50:25,119
events

3034
01:50:21,599 --> 01:50:28,480
i've got a few rows here where i've

3035
01:50:25,119 --> 01:50:31,519
collapsed by unique source ip values

3036
01:50:28,480 --> 01:50:33,759
and so i can immediately start

3037
01:50:31,520 --> 01:50:35,840
drilling into something or discarding

3038
01:50:33,760 --> 01:50:36,400
some particular ip address if i know

3039
01:50:35,840 --> 01:50:38,320
well

3040
01:50:36,400 --> 01:50:39,920
that ip address that's our our

3041
01:50:38,320 --> 01:50:41,599
vulnerability scanner so i know that

3042
01:50:39,920 --> 01:50:43,440
creates lots of traffic i'm not really

3043
01:50:41,599 --> 01:50:45,360
concerned about that so maybe i exclude

3044
01:50:43,440 --> 01:50:47,519
that

3045
01:50:45,360 --> 01:50:48,400
uh but maybe we decide that we want to

3046
01:50:47,520 --> 01:50:52,000
drill into

3047
01:50:48,400 --> 01:50:55,119
dot 158 if we decide for whatever reason

3048
01:50:52,000 --> 01:50:57,639
that ipa address is interesting maybe

3049
01:50:55,119 --> 01:51:02,080
then we say well we still got

3050
01:50:57,639 --> 01:51:03,199
836 logs relating to that ip address

3051
01:51:02,080 --> 01:51:05,360
and again i don't want to go through

3052
01:51:03,199 --> 01:51:08,799
that line by line so maybe i group by

3053
01:51:05,360 --> 01:51:11,280
destination ip all right so here's our

3054
01:51:08,800 --> 01:51:14,080
multi-group by grouping by source ip and

3055
01:51:11,280 --> 01:51:15,519
destination ip

3056
01:51:14,080 --> 01:51:17,679
and then from there i might look through

3057
01:51:15,520 --> 01:51:20,000
this list and i might start rejecting

3058
01:51:17,679 --> 01:51:22,400
things or discarding things uh

3059
01:51:20,000 --> 01:51:23,760
excluding them from the search and maybe

3060
01:51:22,400 --> 01:51:26,559
i might get down to something that's

3061
01:51:23,760 --> 01:51:28,800
interesting maybe it's this 13.249 so

3062
01:51:26,560 --> 01:51:32,080
maybe i drill into that

3063
01:51:28,800 --> 01:51:37,119
so now i'm just seeing those logs for

3064
01:51:32,080 --> 01:51:38,719
158 going out to this 13.249

3065
01:51:37,119 --> 01:51:41,040
what do i do from there well maybe i

3066
01:51:38,719 --> 01:51:44,159
group by destination poor

3067
01:51:41,040 --> 01:51:45,679
so let's do that all right so things get

3068
01:51:44,159 --> 01:51:47,759
interesting here i've got the vast

3069
01:51:45,679 --> 01:51:50,080
majority of my logs we're on port 80 but

3070
01:51:47,760 --> 01:51:53,760
i actually do have one connection

3071
01:51:50,080 --> 01:51:57,280
on port 22. well that's very interesting

3072
01:51:53,760 --> 01:51:58,880
so maybe i might drill into that

3073
01:51:57,280 --> 01:52:00,840
of course that's commonly associated

3074
01:51:58,880 --> 01:52:03,760
with ssh we don't want to

3075
01:52:00,840 --> 01:52:04,239
automatically assume that it's ssh

3076
01:52:03,760 --> 01:52:06,080
because

3077
01:52:04,239 --> 01:52:08,159
theoretically anything could run on that

3078
01:52:06,080 --> 01:52:09,840
port but let's investigate it and see

3079
01:52:08,159 --> 01:52:13,040
what happens

3080
01:52:09,840 --> 01:52:17,840
and so at this point you know we might

3081
01:52:13,040 --> 01:52:20,400
want to use our community id pivot

3082
01:52:17,840 --> 01:52:21,520
right so maybe we might spin that off in

3083
01:52:20,400 --> 01:52:24,320
a separate tab

3084
01:52:21,520 --> 01:52:25,840
so maybe i go over here and now i'm

3085
01:52:24,320 --> 01:52:27,199
looking for

3086
01:52:25,840 --> 01:52:28,960
everything that matches that community

3087
01:52:27,199 --> 01:52:32,239
id and i've got a firewall

3088
01:52:28,960 --> 01:52:34,320
log and i've got a con log so i've got

3089
01:52:32,239 --> 01:52:37,839
that going for me

3090
01:52:34,320 --> 01:52:40,239
i could maybe then pivot to full packet

3091
01:52:37,840 --> 01:52:42,000
capture

3092
01:52:40,239 --> 01:52:44,480
so that's going to go off and let me

3093
01:52:42,000 --> 01:52:48,000
change my view here

3094
01:52:44,480 --> 01:52:51,519
so here you can actually see that we see

3095
01:52:48,000 --> 01:52:53,760
a sin and a sin so

3096
01:52:51,520 --> 01:52:55,599
we don't actually see a full three-way

3097
01:52:53,760 --> 01:52:56,960
handshake we don't actually see a data

3098
01:52:55,599 --> 01:52:58,880
transfer

3099
01:52:56,960 --> 01:53:00,560
so it's kind of nice that we have that

3100
01:52:58,880 --> 01:53:01,920
ability to be able to pivot to full

3101
01:53:00,560 --> 01:53:04,239
packet capture

3102
01:53:01,920 --> 01:53:05,040
and uh see that of course we could

3103
01:53:04,239 --> 01:53:07,199
download that

3104
01:53:05,040 --> 01:53:09,280
pcap we could open it up in network

3105
01:53:07,199 --> 01:53:12,559
miner or wireshark if we wanted to

3106
01:53:09,280 --> 01:53:15,840
to look at it in even greater detail

3107
01:53:12,560 --> 01:53:18,960
but eventually we might want to kind of

3108
01:53:15,840 --> 01:53:21,599
get back to where we were

3109
01:53:18,960 --> 01:53:23,920
and we might then want to say well let's

3110
01:53:21,599 --> 01:53:27,360
go ahead and escalate that

3111
01:53:23,920 --> 01:53:29,360
to the hive and so the beauty here is

3112
01:53:27,360 --> 01:53:32,080
that we can escalate not just

3113
01:53:29,360 --> 01:53:32,639
from alerts we can also escalate from

3114
01:53:32,080 --> 01:53:35,440
hunt

3115
01:53:32,639 --> 01:53:38,159
we can also escalate from kibana so if

3116
01:53:35,440 --> 01:53:41,598
you're looking at cabana dashboards

3117
01:53:38,159 --> 01:53:44,400
you could go in here

3118
01:53:41,599 --> 01:53:45,280
and find your interesting data drill

3119
01:53:44,400 --> 01:53:47,440
into it

3120
01:53:45,280 --> 01:53:48,719
and in those fields it's going to be a

3121
01:53:47,440 --> 01:53:50,719
special link

3122
01:53:48,719 --> 01:53:51,840
that will allow you to escalate

3123
01:53:50,719 --> 01:53:55,360
something

3124
01:53:51,840 --> 01:53:58,239
up to the hive but let's take a look at

3125
01:53:55,360 --> 01:54:00,480
what that actually looks like

3126
01:53:58,239 --> 01:54:02,080
because we had created a case before

3127
01:54:00,480 --> 01:54:04,879
that was case number one

3128
01:54:02,080 --> 01:54:07,440
we just created case number two and so

3129
01:54:04,880 --> 01:54:10,239
here you can see when i drill into that

3130
01:54:07,440 --> 01:54:13,199
that there's the actual log information

3131
01:54:10,239 --> 01:54:15,280
from that pf since firewall log

3132
01:54:13,199 --> 01:54:17,598
and you know as we're looking into this

3133
01:54:15,280 --> 01:54:21,519
and we we kind of realized that

3134
01:54:17,599 --> 01:54:25,599
you know this was 172 16 91.158

3135
01:54:21,520 --> 01:54:25,599
if i go back to number one

3136
01:54:26,080 --> 01:54:29,920
i didn't actually get the details here

3137
01:54:28,159 --> 01:54:32,080
because i i pulled it from the

3138
01:54:29,920 --> 01:54:34,800
aggregated view but if i had pulled that

3139
01:54:32,080 --> 01:54:38,239
alert if i escalated that alert

3140
01:54:34,800 --> 01:54:41,840
from the detail view let's actually do

3141
01:54:38,239 --> 01:54:41,839
that so you can see what that looks like

3142
01:54:42,239 --> 01:54:46,638
now i should have a third case in the

3143
01:54:44,400 --> 01:54:47,920
hive

3144
01:54:46,639 --> 01:54:50,480
now it's going to have a little bit more

3145
01:54:47,920 --> 01:54:55,840
detail in it including

3146
01:54:50,480 --> 01:54:57,919
the ip address which is 172 16 91 158

3147
01:54:55,840 --> 01:54:59,840
so now what you can do is is realize

3148
01:54:57,920 --> 01:55:02,560
that you know all three of these cases

3149
01:54:59,840 --> 01:55:05,199
really had to do with the same

3150
01:55:02,560 --> 01:55:07,760
windows 10 endpoint and so maybe what

3151
01:55:05,199 --> 01:55:11,678
you might want to do is merge

3152
01:55:07,760 --> 01:55:11,679
that with number two

3153
01:55:14,480 --> 01:55:21,519
so that's going to create a new case

3154
01:55:17,679 --> 01:55:24,480
case number four which includes

3155
01:55:21,520 --> 01:55:25,040
not only the et policy pdf with embedded

3156
01:55:24,480 --> 01:55:27,360
file

3157
01:55:25,040 --> 01:55:29,040
but also the event escalation from pf

3158
01:55:27,360 --> 01:55:31,839
since firewall

3159
01:55:29,040 --> 01:55:33,599
and so you start to see how this case

3160
01:55:31,840 --> 01:55:35,520
management comes together

3161
01:55:33,599 --> 01:55:37,760
how you could go into alerts you could

3162
01:55:35,520 --> 01:55:40,159
go into hunt you could go into cabana

3163
01:55:37,760 --> 01:55:40,960
you could escalate that data up to the

3164
01:55:40,159 --> 01:55:43,759
hive

3165
01:55:40,960 --> 01:55:46,000
and if even if you have uh sort of

3166
01:55:43,760 --> 01:55:49,360
similar cases you could merge those into

3167
01:55:46,000 --> 01:55:53,199
one master case and

3168
01:55:49,360 --> 01:55:55,040
you start to see how this whole process

3169
01:55:53,199 --> 01:55:58,799
takes shape you start to see how all

3170
01:55:55,040 --> 01:56:00,880
these different interfaces work together

3171
01:55:58,800 --> 01:56:02,560
towards your whole instant response

3172
01:56:00,880 --> 01:56:03,679
process let's take it to the next level

3173
01:56:02,560 --> 01:56:05,679
and let's say

3174
01:56:03,679 --> 01:56:07,360
well you know we're starting to gather

3175
01:56:05,679 --> 01:56:09,599
sufficient evidence that we're going to

3176
01:56:07,360 --> 01:56:10,880
engage the incident response process and

3177
01:56:09,599 --> 01:56:12,960
maybe our organizational instant

3178
01:56:10,880 --> 01:56:15,520
response policy says that

3179
01:56:12,960 --> 01:56:18,000
you know if you see this and this then

3180
01:56:15,520 --> 01:56:20,320
at that point in time you need to

3181
01:56:18,000 --> 01:56:21,360
go and collect some additional data from

3182
01:56:20,320 --> 01:56:23,759
that endpoint

3183
01:56:21,360 --> 01:56:25,199
and maybe that's where fleet comes into

3184
01:56:23,760 --> 01:56:27,280
play

3185
01:56:25,199 --> 01:56:29,519
as we mentioned before fleet is the web

3186
01:56:27,280 --> 01:56:32,639
interface for os query

3187
01:56:29,520 --> 01:56:33,520
it enables us to dynamically query those

3188
01:56:32,639 --> 01:56:35,599
hosts

3189
01:56:33,520 --> 01:56:38,719
and we can see here that in addition to

3190
01:56:35,599 --> 01:56:40,400
my security on box itself i also have an

3191
01:56:38,719 --> 01:56:43,520
os query agent

3192
01:56:40,400 --> 01:56:45,598
loaded on my windows endpoint so if i

3193
01:56:43,520 --> 01:56:47,520
were to drill into that

3194
01:56:45,599 --> 01:56:49,040
i could run this default query or i

3195
01:56:47,520 --> 01:56:49,520
could change it and i could do something

3196
01:56:49,040 --> 01:56:53,679
like

3197
01:56:49,520 --> 01:56:55,920
select star from processes

3198
01:56:53,679 --> 01:56:57,440
and i could run that query and it's

3199
01:56:55,920 --> 01:57:00,400
going to send that query

3200
01:56:57,440 --> 01:57:00,879
over to os query running on that windows

3201
01:57:00,400 --> 01:57:03,440
10

3202
01:57:00,880 --> 01:57:04,800
endpoint it's going to collect that data

3203
01:57:03,440 --> 01:57:08,480
and then bring it back

3204
01:57:04,800 --> 01:57:09,599
into this table and so within a few

3205
01:57:08,480 --> 01:57:11,678
seconds

3206
01:57:09,599 --> 01:57:13,920
you know i'm not having to locate

3207
01:57:11,679 --> 01:57:15,199
credentials i'm not having to fire up ps

3208
01:57:13,920 --> 01:57:17,679
exact or do any

3209
01:57:15,199 --> 01:57:19,040
crazy shenanigans like that all i have

3210
01:57:17,679 --> 01:57:22,000
to do is go into

3211
01:57:19,040 --> 01:57:23,040
fleet run a simple query and i get my

3212
01:57:22,000 --> 01:57:25,520
answers back

3213
01:57:23,040 --> 01:57:29,119
it also do something like you know maybe

3214
01:57:25,520 --> 01:57:31,679
select star from scheduled tasks

3215
01:57:29,119 --> 01:57:33,119
run that query it sends that query over

3216
01:57:31,679 --> 01:57:35,199
to windows 10

3217
01:57:33,119 --> 01:57:37,119
it's going to pull those scheduled tasks

3218
01:57:35,199 --> 01:57:38,080
back and then we could start looking

3219
01:57:37,119 --> 01:57:41,119
through there

3220
01:57:38,080 --> 01:57:42,719
for any other anomalies again trying to

3221
01:57:41,119 --> 01:57:45,839
understand what's really

3222
01:57:42,719 --> 01:57:47,599
the scope of this incident are there any

3223
01:57:45,840 --> 01:57:49,520
persistence mechanisms are there any

3224
01:57:47,599 --> 01:57:50,560
other indicators that we might be able

3225
01:57:49,520 --> 01:57:53,840
to pull

3226
01:57:50,560 --> 01:57:53,840
from that particular host

3227
01:57:54,159 --> 01:57:58,719
all right so

3228
01:57:57,280 --> 01:58:02,000
what have we talked about well we've

3229
01:57:58,719 --> 01:58:03,760
talked about alerts and hunt and pcap

3230
01:58:02,000 --> 01:58:06,080
uh of course you can take a look at your

3231
01:58:03,760 --> 01:58:08,159
sensors that are checking in

3232
01:58:06,080 --> 01:58:10,000
this is the downloads tab if you wanted

3233
01:58:08,159 --> 01:58:13,040
to deploy win log beat or

3234
01:58:10,000 --> 01:58:14,560
our customized os query endpoints you

3235
01:58:13,040 --> 01:58:16,239
would pull them from there

3236
01:58:14,560 --> 01:58:18,639
you've got your administration tab where

3237
01:58:16,239 --> 01:58:20,799
you can see your user accounts

3238
01:58:18,639 --> 01:58:21,760
we talked about cabana uh another thing

3239
01:58:20,800 --> 01:58:24,800
that i should

3240
01:58:21,760 --> 01:58:27,119
mention and show is grafana

3241
01:58:24,800 --> 01:58:28,320
right so if you're starting your shift

3242
01:58:27,119 --> 01:58:30,080
that might be the first thing that you

3243
01:58:28,320 --> 01:58:32,239
want to take a look at is make sure that

3244
01:58:30,080 --> 01:58:33,920
your deployment is healthy

3245
01:58:32,239 --> 01:58:36,159
so you take a look at your cpu

3246
01:58:33,920 --> 01:58:37,040
utilization you take a look at your disk

3247
01:58:36,159 --> 01:58:39,119
usage

3248
01:58:37,040 --> 01:58:40,880
you make sure your your processes aren't

3249
01:58:39,119 --> 01:58:41,839
going crazy you make sure you don't have

3250
01:58:40,880 --> 01:58:45,440
any

3251
01:58:41,840 --> 01:58:47,199
significant packet loss this is really

3252
01:58:45,440 --> 01:58:48,000
great visibility to have and to have it

3253
01:58:47,199 --> 01:58:50,799
charted over

3254
01:58:48,000 --> 01:58:52,800
time is really significant because not

3255
01:58:50,800 --> 01:58:55,679
only can i look at the last hour

3256
01:58:52,800 --> 01:58:56,880
i could look at the last three hours i

3257
01:58:55,679 --> 01:59:00,080
can look at the last

3258
01:58:56,880 --> 01:59:02,239
six hours and i could

3259
01:59:00,080 --> 01:59:04,320
i could look at the exact time frame so

3260
01:59:02,239 --> 01:59:06,400
if i if i suspected there was some sort

3261
01:59:04,320 --> 01:59:08,000
of a system issue at some point in time

3262
01:59:06,400 --> 01:59:10,320
i could look at that narrow window of

3263
01:59:08,000 --> 01:59:14,840
time and see if we had data

3264
01:59:10,320 --> 01:59:16,320
to support that uh inside of grafana

3265
01:59:14,840 --> 01:59:17,840
itself

3266
01:59:16,320 --> 01:59:20,400
so lots of capabilities there we talked

3267
01:59:17,840 --> 01:59:21,520
about cyberchef uh playbook is another

3268
01:59:20,400 --> 01:59:22,879
great tool

3269
01:59:21,520 --> 01:59:24,480
you know so if you're working this

3270
01:59:22,880 --> 01:59:26,159
incident with this windows host and

3271
01:59:24,480 --> 01:59:28,959
maybe you found an indicator

3272
01:59:26,159 --> 01:59:30,400
you might go into playbook and develop

3273
01:59:28,960 --> 01:59:32,639
your own play

3274
01:59:30,400 --> 01:59:34,799
and then have playbook automatically

3275
01:59:32,639 --> 01:59:37,679
searching across all of your data

3276
01:59:34,800 --> 01:59:39,440
on a regularly scheduled basis looking

3277
01:59:37,679 --> 01:59:42,239
to see if that particular indicator

3278
01:59:39,440 --> 01:59:43,919
ever popped up again right so you start

3279
01:59:42,239 --> 01:59:44,559
to see how we're kind of closing the

3280
01:59:43,920 --> 01:59:46,480
circle

3281
01:59:44,560 --> 01:59:47,920
on the incident response process

3282
01:59:46,480 --> 01:59:51,839
creating that full

3283
01:59:47,920 --> 01:59:51,840
cycle that fully vent life cycle

3284
01:59:52,159 --> 01:59:55,440
so um i think the last piece is of

3285
01:59:54,800 --> 01:59:57,679
course the

3286
01:59:55,440 --> 01:59:59,839
attack navigator and again if you were

3287
01:59:57,679 --> 02:00:02,320
to go into playbook

3288
01:59:59,840 --> 02:00:03,360
and create a new play to cover some new

3289
02:00:02,320 --> 02:00:04,960
indicator

3290
02:00:03,360 --> 02:00:07,040
that might create some additional

3291
02:00:04,960 --> 02:00:08,880
coverage that might add

3292
02:00:07,040 --> 02:00:10,159
something to that playbook layer and

3293
02:00:08,880 --> 02:00:12,639
attack navigator

3294
02:00:10,159 --> 02:00:14,559
to help you kind of understand where you

3295
02:00:12,639 --> 02:00:16,480
have coverage in the attack framework

3296
02:00:14,560 --> 02:00:19,840
and where you you might have some gaps

3297
02:00:16,480 --> 02:00:19,839
that you might want to fill in

3298
02:00:20,159 --> 02:00:24,638
all right so that is a very brief

3299
02:00:23,840 --> 02:00:28,080
overview

3300
02:00:24,639 --> 02:00:29,520
of security onion 2 looking at

3301
02:00:28,080 --> 02:00:31,519
all the different interfaces that we

3302
02:00:29,520 --> 02:00:34,639
have how they fit together

3303
02:00:31,520 --> 02:00:38,320
to form a more complete picture about

3304
02:00:34,639 --> 02:00:41,440
what's going on in your environment and

3305
02:00:38,320 --> 02:00:44,480
you know we've worked tirelessly to

3306
02:00:41,440 --> 02:00:46,239
uh come up with the best interfaces and

3307
02:00:44,480 --> 02:00:48,959
the best workflow

3308
02:00:46,239 --> 02:00:50,879
uh to fit with the best of breed open

3309
02:00:48,960 --> 02:00:51,599
source components that we've already

3310
02:00:50,880 --> 02:00:54,639
been

3311
02:00:51,599 --> 02:00:54,960
integrating in security onions so we we

3312
02:00:54,639 --> 02:00:58,320
really

3313
02:00:54,960 --> 02:01:00,639
and truly hope that uh you like security

3314
02:00:58,320 --> 02:01:03,199
onion 2 as much as we do

3315
02:01:00,639 --> 02:01:04,880
we think it's insanely great as steve

3316
02:01:03,199 --> 02:01:07,919
jobs used to say

3317
02:01:04,880 --> 02:01:10,400
and so we're excited to get it out there

3318
02:01:07,920 --> 02:01:11,760
and get into your hands and and see how

3319
02:01:10,400 --> 02:01:15,839
it goes

3320
02:01:11,760 --> 02:01:19,040
with you so at that point

3321
02:01:15,840 --> 02:01:21,599
uh we'll go ahead and pause for some q a

3322
02:01:19,040 --> 02:01:23,760
if you have questions or comments we'll

3323
02:01:21,599 --> 02:01:25,360
take a few minutes and cover those now

3324
02:01:23,760 --> 02:01:28,639
i'll turn it over to

3325
02:01:25,360 --> 02:01:31,440
our moderator mr planimira

3326
02:01:28,639 --> 02:01:33,599
excellent demo doug uh i really

3327
02:01:31,440 --> 02:01:37,280
appreciate you doing that sir

3328
02:01:33,599 --> 02:01:38,880
we have had uh an incredible response of

3329
02:01:37,280 --> 02:01:42,400
questions i think

3330
02:01:38,880 --> 02:01:45,760
that's a a safe way to say it so

3331
02:01:42,400 --> 02:01:48,879
um i have we've been going through in

3332
02:01:45,760 --> 02:01:50,000
webex we have over 140 different

3333
02:01:48,880 --> 02:01:52,480
questions

3334
02:01:50,000 --> 02:01:54,560
wow and we've been responding to them as

3335
02:01:52,480 --> 02:01:55,360
we go we have questions and discord that

3336
02:01:54,560 --> 02:01:58,639
mike and the team

3337
02:01:55,360 --> 02:02:01,440
have been keeping up with so uh but some

3338
02:01:58,639 --> 02:02:03,040
we said we would push to the end here so

3339
02:02:01,440 --> 02:02:05,280
we got about 20

3340
02:02:03,040 --> 02:02:06,239
or so minutes to try to cover as many of

3341
02:02:05,280 --> 02:02:08,320
these as we can

3342
02:02:06,239 --> 02:02:09,440
so we've just got time i think to answer

3343
02:02:08,320 --> 02:02:11,440
these briefly

3344
02:02:09,440 --> 02:02:13,199
just in an attempt to get to these as

3345
02:02:11,440 --> 02:02:13,919
quickly as possible one question we've

3346
02:02:13,199 --> 02:02:16,159
seen a

3347
02:02:13,920 --> 02:02:18,560
fair bit i've seen it in discord seen in

3348
02:02:16,159 --> 02:02:20,239
webex is what about snort i mean

3349
02:02:18,560 --> 02:02:22,400
i know you mentioned that early on but

3350
02:02:20,239 --> 02:02:25,199
can you uh uh

3351
02:02:22,400 --> 02:02:26,638
mike actually could you uh talk a little

3352
02:02:25,199 --> 02:02:28,960
bit about that go ahead

3353
02:02:26,639 --> 02:02:30,719
sure we we plan to look at snort when

3354
02:02:28,960 --> 02:02:33,599
they do finally release

3355
02:02:30,719 --> 02:02:34,880
the uh the final version of snort 30 to

3356
02:02:33,599 --> 02:02:38,639
get the actual release

3357
02:02:34,880 --> 02:02:40,000
so that is our our official plan for

3358
02:02:38,639 --> 02:02:41,520
snort at this time once it's actually

3359
02:02:40,000 --> 02:02:44,400
released we will uh

3360
02:02:41,520 --> 02:02:47,280
take a look at bringing in okay perfect

3361
02:02:44,400 --> 02:02:50,000
perfect thanks another common theme

3362
02:02:47,280 --> 02:02:52,320
uh especially early on was about elastic

3363
02:02:50,000 --> 02:02:55,360
security or elasticsim

3364
02:02:52,320 --> 02:02:58,559
uh and the endpoint agent i think

3365
02:02:55,360 --> 02:03:00,960
uh what was once called end game

3366
02:02:58,560 --> 02:03:02,800
uh mike can you talk a little bit about

3367
02:03:00,960 --> 02:03:03,840
uh about that and how you might

3368
02:03:02,800 --> 02:03:06,960
integrate with that

3369
02:03:03,840 --> 02:03:10,880
or etc go ahead so you know on the

3370
02:03:06,960 --> 02:03:12,480
the elastic front um we you know

3371
02:03:10,880 --> 02:03:14,719
you can point the sim to the

3372
02:03:12,480 --> 02:03:17,119
elasticsearch since we switched to

3373
02:03:14,719 --> 02:03:19,280
the elastic common schema uh you know

3374
02:03:17,119 --> 02:03:22,000
it's possible to to point your

3375
02:03:19,280 --> 02:03:23,119
your sim stuff to that we support

3376
02:03:22,000 --> 02:03:25,440
features

3377
02:03:23,119 --> 02:03:27,119
um although there's some caveats there

3378
02:03:25,440 --> 02:03:29,040
with uh with the air gap that we talked

3379
02:03:27,119 --> 02:03:32,080
about on on discord

3380
02:03:29,040 --> 02:03:34,159
um that we're still working on but

3381
02:03:32,080 --> 02:03:35,920
um as far as the agent is concerned we

3382
02:03:34,159 --> 02:03:38,000
don't distribute it currently

3383
02:03:35,920 --> 02:03:39,599
um we'll probably take a look at it in

3384
02:03:38,000 --> 02:03:41,280
the future but you know since it's not

3385
02:03:39,599 --> 02:03:43,679
open source it's something that we don't

3386
02:03:41,280 --> 02:03:45,280
that we can't um you know include on the

3387
02:03:43,679 --> 02:03:47,199
disk so to speak so

3388
02:03:45,280 --> 02:03:49,119
uh you know all of the the tools that

3389
02:03:47,199 --> 02:03:50,320
are included in security onion are free

3390
02:03:49,119 --> 02:03:52,400
in open source

3391
02:03:50,320 --> 02:03:54,000
so i know um i think the elastic

3392
02:03:52,400 --> 02:03:55,839
endpoint agent is free

3393
02:03:54,000 --> 02:03:57,040
um but it's just not open source so it's

3394
02:03:55,840 --> 02:03:58,960
something we can look at

3395
02:03:57,040 --> 02:04:00,320
um it's just not in this current version

3396
02:03:58,960 --> 02:04:03,679
there's a

3397
02:04:00,320 --> 02:04:05,199
you know as doug has shown we've added

3398
02:04:03,679 --> 02:04:06,800
lots and lots and lots and lots of

3399
02:04:05,199 --> 02:04:08,320
things um

3400
02:04:06,800 --> 02:04:09,679
and not everything we could we couldn't

3401
02:04:08,320 --> 02:04:10,880
squeeze everything into this release we

3402
02:04:09,679 --> 02:04:12,639
really wanted to get it out and get it

3403
02:04:10,880 --> 02:04:15,679
in the hands of the community

3404
02:04:12,639 --> 02:04:17,520
um but you know there are you know

3405
02:04:15,679 --> 02:04:19,760
that's the slash discuss is a great

3406
02:04:17,520 --> 02:04:20,239
place to ask for features and things

3407
02:04:19,760 --> 02:04:24,000
like that

3408
02:04:20,239 --> 02:04:26,000
to uh to add yeah great and i would

3409
02:04:24,000 --> 02:04:27,760
uh i would add here that when we're

3410
02:04:26,000 --> 02:04:29,280
getting we see lots and lots of

3411
02:04:27,760 --> 02:04:31,599
questions in chat about

3412
02:04:29,280 --> 02:04:32,480
why did you choose this and not this and

3413
02:04:31,599 --> 02:04:35,199
why why

3414
02:04:32,480 --> 02:04:35,598
apples and not oranges and etc sure you

3415
02:04:35,199 --> 02:04:37,280
can

3416
02:04:35,599 --> 02:04:38,719
kind of feel free to send those

3417
02:04:37,280 --> 02:04:40,320
questions to us and discuss

3418
02:04:38,719 --> 02:04:42,320
don't know that we have enough time

3419
02:04:40,320 --> 02:04:44,559
today to go into all the reasoning

3420
02:04:42,320 --> 02:04:46,239
sure behind all of our decisions that we

3421
02:04:44,560 --> 02:04:48,960
that uh that were made here

3422
02:04:46,239 --> 02:04:50,239
um perfect there's one there's one

3423
02:04:48,960 --> 02:04:52,159
question that's been asked a million

3424
02:04:50,239 --> 02:04:53,519
times too i thought i'd

3425
02:04:52,159 --> 02:04:55,280
address would be is the red hat

3426
02:04:53,520 --> 02:04:57,520
enterprise linux

3427
02:04:55,280 --> 02:04:58,800
that's on my list yes okay yes go ahead

3428
02:04:57,520 --> 02:05:01,199
go ahead and so

3429
02:04:58,800 --> 02:05:02,800
we are so i'll tell a secret about

3430
02:05:01,199 --> 02:05:04,400
security onion is if you follow our

3431
02:05:02,800 --> 02:05:06,800
github you can actually see

3432
02:05:04,400 --> 02:05:07,598
exactly what we're working on there is a

3433
02:05:06,800 --> 02:05:10,239
branch out

3434
02:05:07,599 --> 02:05:11,760
on our github that is for red hat

3435
02:05:10,239 --> 02:05:13,119
enterprise linux 7.

3436
02:05:11,760 --> 02:05:15,199
so it is something we're actively

3437
02:05:13,119 --> 02:05:18,239
working on i don't have a firm

3438
02:05:15,199 --> 02:05:20,000
release date or version for that

3439
02:05:18,239 --> 02:05:22,400
but it is something we are working on

3440
02:05:20,000 --> 02:05:24,400
and planning on supporting in the

3441
02:05:22,400 --> 02:05:25,598
i would i'd say near term but um it

3442
02:05:24,400 --> 02:05:28,079
really depends on

3443
02:05:25,599 --> 02:05:28,800
um you know what we need to uh to look

3444
02:05:28,079 --> 02:05:33,280
at

3445
02:05:28,800 --> 02:05:33,280
post release but it is on the plans

3446
02:05:33,440 --> 02:05:37,839
so uh we had a couple of questions about

3447
02:05:35,760 --> 02:05:40,320
1604 going end of life

3448
02:05:37,840 --> 02:05:42,079
uh we planned once again to kind of

3449
02:05:40,320 --> 02:05:42,639
repeat doug from earlier if you missed

3450
02:05:42,079 --> 02:05:45,920
it

3451
02:05:42,639 --> 02:05:47,360
um we plan to send uh security onion

3452
02:05:45,920 --> 02:05:50,320
1604 end of life

3453
02:05:47,360 --> 02:05:52,400
at about the same time that ubuntu 1604

3454
02:05:50,320 --> 02:05:54,400
which is the operating system on which

3455
02:05:52,400 --> 02:05:55,440
security onion 1604 is based when it

3456
02:05:54,400 --> 02:05:58,559
goes end of life

3457
02:05:55,440 --> 02:06:01,919
and that should be april 2021 so

3458
02:05:58,560 --> 02:06:02,639
just to answer that question uh here's a

3459
02:06:01,920 --> 02:06:04,880
good one

3460
02:06:02,639 --> 02:06:06,239
um and you know we always appreciate

3461
02:06:04,880 --> 02:06:07,599
that this question cause we get it a

3462
02:06:06,239 --> 02:06:10,320
fair bit today

3463
02:06:07,599 --> 02:06:10,639
can multiple so deployments be managed

3464
02:06:10,320 --> 02:06:13,199
with

3465
02:06:10,639 --> 02:06:16,960
one central sock mike i'll give that one

3466
02:06:13,199 --> 02:06:21,119
to you sir

3467
02:06:16,960 --> 02:06:23,040
are you muted you're still muted

3468
02:06:21,119 --> 02:06:26,000
sorry i was double muted um yeah so

3469
02:06:23,040 --> 02:06:29,519
today it's not possible to have a

3470
02:06:26,000 --> 02:06:32,320
uh multiple managers we are looking into

3471
02:06:29,520 --> 02:06:33,280
or a multi-uh multi-level type

3472
02:06:32,320 --> 02:06:35,040
architecture

3473
02:06:33,280 --> 02:06:36,400
from the perspective of having a manager

3474
02:06:35,040 --> 02:06:37,440
of managers and having a bunch of

3475
02:06:36,400 --> 02:06:40,719
different stuff out there

3476
02:06:37,440 --> 02:06:43,678
we are looking at um at

3477
02:06:40,719 --> 02:06:44,079
adding redundancy to the pipeline so

3478
02:06:43,679 --> 02:06:46,719
multiple

3479
02:06:44,079 --> 02:06:47,759
managers for a single thing um we're

3480
02:06:46,719 --> 02:06:49,520
also looking at

3481
02:06:47,760 --> 02:06:50,800
uh our back which would be very

3482
02:06:49,520 --> 02:06:53,440
important when it comes to

3483
02:06:50,800 --> 02:06:54,239
a a tiered system like that so there are

3484
02:06:53,440 --> 02:06:56,400
things that

3485
02:06:54,239 --> 02:06:58,159
what we're interested in looking at um

3486
02:06:56,400 --> 02:07:00,239
you know it's just going to be a matter

3487
02:06:58,159 --> 02:07:04,320
of priorities and time

3488
02:07:00,239 --> 02:07:08,079
and resources okay great thanks mike

3489
02:07:04,320 --> 02:07:10,079
um doug free question for you

3490
02:07:08,079 --> 02:07:11,440
uh about analyst workstation about the

3491
02:07:10,079 --> 02:07:14,719
analyst node

3492
02:07:11,440 --> 02:07:15,199
um does it have more tools than security

3493
02:07:14,719 --> 02:07:16,639
on

3494
02:07:15,199 --> 02:07:18,480
in production mode there's been a lot of

3495
02:07:16,639 --> 02:07:20,400
questions about analyst node can you

3496
02:07:18,480 --> 02:07:21,759
install it on a standalone node

3497
02:07:20,400 --> 02:07:23,519
you know not that that's best practice

3498
02:07:21,760 --> 02:07:24,320
but is it possible can you talk a little

3499
02:07:23,520 --> 02:07:27,920
bit about

3500
02:07:24,320 --> 02:07:29,840
the analyst node absolutely so

3501
02:07:27,920 --> 02:07:31,199
one of the cool things that we did in

3502
02:07:29,840 --> 02:07:33,599
this release

3503
02:07:31,199 --> 02:07:36,559
and i was trying to quickly get back to

3504
02:07:33,599 --> 02:07:40,719
the the slide that had it

3505
02:07:36,560 --> 02:07:41,840
the analyst install is totally

3506
02:07:40,719 --> 02:07:44,639
independent

3507
02:07:41,840 --> 02:07:45,840
of really all the other capabilities

3508
02:07:44,639 --> 02:07:48,239
that we have

3509
02:07:45,840 --> 02:07:49,840
and so what that means then is that you

3510
02:07:48,239 --> 02:07:52,480
could

3511
02:07:49,840 --> 02:07:53,599
you could install security engine 2 in a

3512
02:07:52,480 --> 02:07:56,638
vm

3513
02:07:53,599 --> 02:07:58,719
and you could say i really just want

3514
02:07:56,639 --> 02:08:01,840
that analyst install

3515
02:07:58,719 --> 02:08:03,040
uh so i just want a i don't want any

3516
02:08:01,840 --> 02:08:05,119
sniffing processes

3517
02:08:03,040 --> 02:08:07,040
i don't want any elastic search i don't

3518
02:08:05,119 --> 02:08:10,639
want any of that stuff i really just

3519
02:08:07,040 --> 02:08:12,880
want the pcapp tools themselves

3520
02:08:10,639 --> 02:08:14,320
and so you could install securityonion2

3521
02:08:12,880 --> 02:08:17,360
in a vm

3522
02:08:14,320 --> 02:08:20,799
not run through our setup wizard but

3523
02:08:17,360 --> 02:08:22,559
just run so analyst install and then

3524
02:08:20,800 --> 02:08:23,840
within a few minutes you're gonna have

3525
02:08:22,560 --> 02:08:25,840
gnome desktop

3526
02:08:23,840 --> 02:08:27,679
you're gonna have wireshark network

3527
02:08:25,840 --> 02:08:30,880
miner chromium web browser

3528
02:08:27,679 --> 02:08:34,000
lots of pcapp utilities

3529
02:08:30,880 --> 02:08:35,920
now you can do that on its own by itself

3530
02:08:34,000 --> 02:08:36,960
with nothing else or you can do it in

3531
02:08:35,920 --> 02:08:39,599
conjunction with

3532
02:08:36,960 --> 02:08:40,159
one of the other modes so for example

3533
02:08:39,599 --> 02:08:43,440
what i

3534
02:08:40,159 --> 02:08:46,559
demoed just a few minutes ago was a full

3535
02:08:43,440 --> 02:08:50,159
standalone installation

3536
02:08:46,560 --> 02:08:53,440
so i ran through setup chose standalone

3537
02:08:50,159 --> 02:08:54,000
and then after setup completed i ran so

3538
02:08:53,440 --> 02:08:56,480
analyst

3539
02:08:54,000 --> 02:08:58,159
install to install the gnome desktop and

3540
02:08:56,480 --> 02:09:01,678
all the tools

3541
02:08:58,159 --> 02:09:02,480
you could likewise do that on eval mode

3542
02:09:01,679 --> 02:09:06,079
you could do that

3543
02:09:02,480 --> 02:09:09,040
on import mode whatever you want to do

3544
02:09:06,079 --> 02:09:11,040
so you know if there's a one of the

3545
02:09:09,040 --> 02:09:13,280
general themes that we have

3546
02:09:11,040 --> 02:09:14,960
going from security onion 1604 to

3547
02:09:13,280 --> 02:09:18,559
security onion 2

3548
02:09:14,960 --> 02:09:21,520
is that things are

3549
02:09:18,560 --> 02:09:23,360
less coupled meaning that we have more

3550
02:09:21,520 --> 02:09:26,880
flexibility now

3551
02:09:23,360 --> 02:09:28,000
rather than downloading a 1604 iso image

3552
02:09:26,880 --> 02:09:30,000
that had

3553
02:09:28,000 --> 02:09:31,760
the entire desktop built into it and

3554
02:09:30,000 --> 02:09:32,320
every every single thing built into it

3555
02:09:31,760 --> 02:09:35,119
and everything

3556
02:09:32,320 --> 02:09:35,679
basically turned on by default now we

3557
02:09:35,119 --> 02:09:38,639
have

3558
02:09:35,679 --> 02:09:39,599
sort of pick and choose what exactly you

3559
02:09:38,639 --> 02:09:41,280
want

3560
02:09:39,599 --> 02:09:43,599
choose your own adventure when it comes

3561
02:09:41,280 --> 02:09:46,159
to building your

3562
02:09:43,599 --> 02:09:48,880
network security monitoring deployment

3563
02:09:46,159 --> 02:09:50,638
so if you just want analyst workstation

3564
02:09:48,880 --> 02:09:52,480
you could just have that and nothing

3565
02:09:50,639 --> 02:09:53,440
else if you want it in conjunction with

3566
02:09:52,480 --> 02:09:56,079
other services

3567
02:09:53,440 --> 02:09:58,559
you certainly install it on top you can

3568
02:09:56,079 --> 02:10:00,159
also just do a centos minimal install

3569
02:09:58,560 --> 02:10:02,719
and run that and run the script from

3570
02:10:00,159 --> 02:10:04,000
github and get the same place right so

3571
02:10:02,719 --> 02:10:05,280
it's a lot there's a lot of flexibility

3572
02:10:04,000 --> 02:10:06,960
there as well like you don't even have

3573
02:10:05,280 --> 02:10:10,639
to get the ice if you don't want to

3574
02:10:06,960 --> 02:10:13,199
yep perfect thanks guys um

3575
02:10:10,639 --> 02:10:14,320
mike um there's been some questions

3576
02:10:13,199 --> 02:10:15,839
about wazoo

3577
02:10:14,320 --> 02:10:17,599
you know about being able to customize

3578
02:10:15,840 --> 02:10:20,800
local wazoo rules

3579
02:10:17,599 --> 02:10:22,480
uh where's the wazoo server um

3580
02:10:20,800 --> 02:10:24,560
you know can you talk a little bit about

3581
02:10:22,480 --> 02:10:26,959
wazoo and how it fits in

3582
02:10:24,560 --> 02:10:30,079
uh to security engine two so i'm gonna

3583
02:10:26,960 --> 02:10:34,320
defer that one to mr west lambert

3584
02:10:30,079 --> 02:10:37,440
wes can we uh can we hear you yes sir

3585
02:10:34,320 --> 02:10:38,719
hey wes hey how's it going so uh

3586
02:10:37,440 --> 02:10:40,638
so yeah if you could real quick just

3587
02:10:38,719 --> 02:10:42,000
repeat that again just for myself and

3588
02:10:40,639 --> 02:10:45,360
everybody else

3589
02:10:42,000 --> 02:10:48,719
sure the question is uh talk about wazoo

3590
02:10:45,360 --> 02:10:49,040
in security onion 2. uh where you know

3591
02:10:48,719 --> 02:10:50,800
is

3592
02:10:49,040 --> 02:10:52,239
you know in security engine 1604 there's

3593
02:10:50,800 --> 02:10:54,560
a wazoo server

3594
02:10:52,239 --> 02:10:57,040
on every node uh is that the case in

3595
02:10:54,560 --> 02:10:58,960
security onion 2 how do we modify

3596
02:10:57,040 --> 02:11:00,159
rules and so forth and wuzu is it as

3597
02:10:58,960 --> 02:11:03,599
easy

3598
02:11:00,159 --> 02:11:05,598
as it was in security onion 1604 right

3599
02:11:03,599 --> 02:11:06,800
yeah so for the most part that process

3600
02:11:05,599 --> 02:11:09,840
should be pretty

3601
02:11:06,800 --> 02:11:10,960
similar um every node still runs a wazoo

3602
02:11:09,840 --> 02:11:13,760
manager

3603
02:11:10,960 --> 02:11:16,079
we do run the wazoo api as well so that

3604
02:11:13,760 --> 02:11:16,960
ability is there to use the enrollment

3605
02:11:16,079 --> 02:11:19,679
through the api

3606
02:11:16,960 --> 02:11:21,040
in addition to the traditional method

3607
02:11:19,679 --> 02:11:23,520
and

3608
02:11:21,040 --> 02:11:25,119
we'll think here so as far as the rules

3609
02:11:23,520 --> 02:11:27,520
uh most of the rule changes

3610
02:11:25,119 --> 02:11:28,400
they aren't exactly going to be in the

3611
02:11:27,520 --> 02:11:30,719
same place

3612
02:11:28,400 --> 02:11:32,159
but we will have all that documented on

3613
02:11:30,719 --> 02:11:33,360
the read the docs and

3614
02:11:32,159 --> 02:11:35,679
you should be able to get all that

3615
02:11:33,360 --> 02:11:36,159
information from there hopefully that

3616
02:11:35,679 --> 02:11:39,520
about

3617
02:11:36,159 --> 02:11:40,638
covers it okay great yep i think it does

3618
02:11:39,520 --> 02:11:43,440
thanks wes

3619
02:11:40,639 --> 02:11:44,320
there's been lots of questions about

3620
02:11:43,440 --> 02:11:47,839
elastic

3621
02:11:44,320 --> 02:11:50,639
uh not just elastic sim uh but

3622
02:11:47,840 --> 02:11:51,119
uh kind of the elastic path i think one

3623
02:11:50,639 --> 02:11:53,040
of my

3624
02:11:51,119 --> 02:11:54,400
uh one of the questions that stands out

3625
02:11:53,040 --> 02:11:55,040
and i'll just read it verbatim we've got

3626
02:11:54,400 --> 02:11:56,960
a large

3627
02:11:55,040 --> 02:11:58,719
standalone elastic deployment running at

3628
02:11:56,960 --> 02:11:59,679
the moment would so be able to

3629
02:11:58,719 --> 02:12:01,679
complement

3630
02:11:59,679 --> 02:12:02,960
this or would it fit better as a

3631
02:12:01,679 --> 02:12:05,040
replacement

3632
02:12:02,960 --> 02:12:06,800
uh mike do you want to take that sure i

3633
02:12:05,040 --> 02:12:09,199
mean at some point we are going to

3634
02:12:06,800 --> 02:12:10,239
make it easy to support an external

3635
02:12:09,199 --> 02:12:13,678
elastic

3636
02:12:10,239 --> 02:12:16,159
uh cluster uh again we had to

3637
02:12:13,679 --> 02:12:17,679
to sort of um you know draw the line in

3638
02:12:16,159 --> 02:12:20,400
the sand so to speak

3639
02:12:17,679 --> 02:12:21,679
uh but you know the the you know as doug

3640
02:12:20,400 --> 02:12:22,960
just mentioned previously everything is

3641
02:12:21,679 --> 02:12:25,119
very modular

3642
02:12:22,960 --> 02:12:26,400
um and very customizable so we will be

3643
02:12:25,119 --> 02:12:28,400
able to support it it

3644
02:12:26,400 --> 02:12:29,679
might not be in this version or it's

3645
02:12:28,400 --> 02:12:30,879
obviously not in this version but

3646
02:12:29,679 --> 02:12:33,520
and it might not be in the next version

3647
02:12:30,880 --> 02:12:34,719
but it's definitely something we want to

3648
02:12:33,520 --> 02:12:36,480
you know look at we're a partner with

3649
02:12:34,719 --> 02:12:38,480
elastic and we want to make sure that

3650
02:12:36,480 --> 02:12:40,959
you know folks that have existing

3651
02:12:38,480 --> 02:12:42,400
um clusters and all that kind of stuff

3652
02:12:40,960 --> 02:12:43,760
that somebody else manages and they

3653
02:12:42,400 --> 02:12:46,079
don't want to have to deal with it

3654
02:12:43,760 --> 02:12:46,800
you know that's um you know definitely

3655
02:12:46,079 --> 02:12:49,840
something that

3656
02:12:46,800 --> 02:12:49,840
you know we plan to support

3657
02:12:50,000 --> 02:12:53,440
okay great um is there a need to ever

3658
02:12:52,560 --> 02:12:56,960
talk to

3659
02:12:53,440 --> 02:13:00,559
port 9200 directly

3660
02:12:56,960 --> 02:13:02,400
um i would not uh i would not uh

3661
02:13:00,560 --> 02:13:04,079
recommend that i mean if you have a

3662
02:13:02,400 --> 02:13:05,440
specific tool that you need to do that

3663
02:13:04,079 --> 02:13:09,280
with

3664
02:13:05,440 --> 02:13:11,519
you can do that we do have our own um

3665
02:13:09,280 --> 02:13:13,679
it is https and it's running sort of our

3666
02:13:11,520 --> 02:13:17,119
own sort of shim there

3667
02:13:13,679 --> 02:13:18,159
we are still working on full elastic

3668
02:13:17,119 --> 02:13:21,119
features

3669
02:13:18,159 --> 02:13:22,719
um security support with uh you know

3670
02:13:21,119 --> 02:13:23,598
user ids and all in our back and all

3671
02:13:22,719 --> 02:13:26,000
that kind of stuff but

3672
02:13:23,599 --> 02:13:27,760
for now if you connect directly to 9200

3673
02:13:26,000 --> 02:13:31,440
it is encrypted

3674
02:13:27,760 --> 02:13:33,599
and it'll require you to deal with tls

3675
02:13:31,440 --> 02:13:34,799
so that's sort of so i yeah i think

3676
02:13:33,599 --> 02:13:36,800
there uh

3677
02:13:34,800 --> 02:13:39,199
the the question is in like log flow

3678
02:13:36,800 --> 02:13:41,360
from from one of the beats for example

3679
02:13:39,199 --> 02:13:42,799
should that you know should we or or

3680
02:13:41,360 --> 02:13:44,000
should they configure that to go through

3681
02:13:42,800 --> 02:13:46,320
logstash or should they

3682
02:13:44,000 --> 02:13:47,520
configure that to go directly to elastic

3683
02:13:46,320 --> 02:13:48,960
everything should be going through log

3684
02:13:47,520 --> 02:13:51,520
stash right because you do not

3685
02:13:48,960 --> 02:13:52,719
ever really want to expose 9200 unless

3686
02:13:51,520 --> 02:13:55,760
you have to

3687
02:13:52,719 --> 02:13:59,360
yep um otherwise you end up on uh

3688
02:13:55,760 --> 02:14:02,800
the internet

3689
02:13:59,360 --> 02:14:03,440
um okay more elastic kind of questions

3690
02:14:02,800 --> 02:14:05,520
around

3691
02:14:03,440 --> 02:14:06,960
you know what's the plan regarding

3692
02:14:05,520 --> 02:14:09,760
automation

3693
02:14:06,960 --> 02:14:11,599
uh for example managing other you know

3694
02:14:09,760 --> 02:14:12,719
different sort of elastic knobs that can

3695
02:14:11,599 --> 02:14:14,400
be tuned

3696
02:14:12,719 --> 02:14:15,760
really any knob that can be tuned but

3697
02:14:14,400 --> 02:14:19,199
the question here is

3698
02:14:15,760 --> 02:14:21,440
specifically around elastic shards

3699
02:14:19,199 --> 02:14:22,960
uh but you know not just charts but

3700
02:14:21,440 --> 02:14:23,759
really anything else can you talk a

3701
02:14:22,960 --> 02:14:25,360
little bit about

3702
02:14:23,760 --> 02:14:26,960
what what the plans are there mike for

3703
02:14:25,360 --> 02:14:29,199
the future yeah so

3704
02:14:26,960 --> 02:14:30,800
you can actually if you look inside the

3705
02:14:29,199 --> 02:14:32,879
pillar um for

3706
02:14:30,800 --> 02:14:34,800
uh i think it's in the global pillar

3707
02:14:32,880 --> 02:14:36,800
actually you can see every single one of

3708
02:14:34,800 --> 02:14:37,760
the indexes that secured onion uses its

3709
02:14:36,800 --> 02:14:39,280
shard count

3710
02:14:37,760 --> 02:14:41,599
uh it's retention rates everything that

3711
02:14:39,280 --> 02:14:43,360
so you can really key in on there

3712
02:14:41,599 --> 02:14:45,280
and um you know if you want to keep

3713
02:14:43,360 --> 02:14:47,759
ideas alerts longer than

3714
02:14:45,280 --> 02:14:49,199
uh dns data so on and so forth you can

3715
02:14:47,760 --> 02:14:49,599
do all those things now so it's a lot

3716
02:14:49,199 --> 02:14:51,678
more

3717
02:14:49,599 --> 02:14:54,159
there's a lot more dials to turn uh and

3718
02:14:51,679 --> 02:14:55,599
the current um and the new stuff so that

3719
02:14:54,159 --> 02:14:57,440
you can you know really

3720
02:14:55,599 --> 02:14:59,599
you know hone in what you want to have

3721
02:14:57,440 --> 02:15:01,440
as far as your stuff that we

3722
02:14:59,599 --> 02:15:03,280
we extrapolated a lot of this a lot of

3723
02:15:01,440 --> 02:15:07,119
the common things that you would

3724
02:15:03,280 --> 02:15:08,800
typically want to um uh

3725
02:15:07,119 --> 02:15:10,559
you know to have to modify an elastic

3726
02:15:08,800 --> 02:15:11,520
and we pulled those out into pillar

3727
02:15:10,560 --> 02:15:12,960
values

3728
02:15:11,520 --> 02:15:14,159
i mean once you read the documentation

3729
02:15:12,960 --> 02:15:15,280
you'll you'll understand what i mean by

3730
02:15:14,159 --> 02:15:17,920
color values but

3731
02:15:15,280 --> 02:15:18,960
um you know the just easy places that

3732
02:15:17,920 --> 02:15:20,639
you change a value

3733
02:15:18,960 --> 02:15:22,000
and it everything happens automatically

3734
02:15:20,639 --> 02:15:25,119
elastic first restarts for

3735
02:15:22,000 --> 02:15:27,119
you and it has that new value set to it

3736
02:15:25,119 --> 02:15:29,199
keep in mind when tuning indexes though

3737
02:15:27,119 --> 02:15:31,119
that it will only apply to

3738
02:15:29,199 --> 02:15:32,559
new indexes created so if you change

3739
02:15:31,119 --> 02:15:35,440
your shard count from

3740
02:15:32,560 --> 02:15:37,440
one to four it will not happen until the

3741
02:15:35,440 --> 02:15:40,159
next index is created it does not go

3742
02:15:37,440 --> 02:15:43,519
back and re-index the data

3743
02:15:40,159 --> 02:15:46,559
all right thank you mike thank you mike

3744
02:15:43,520 --> 02:15:49,760
um doug burks uh talk about

3745
02:15:46,560 --> 02:15:52,880
a.i we had a few questions about ai can

3746
02:15:49,760 --> 02:15:55,599
you can you talk a little bit about that

3747
02:15:52,880 --> 02:15:56,960
well you know i think that's uh a

3748
02:15:55,599 --> 02:15:58,239
question that comes up

3749
02:15:56,960 --> 02:15:59,520
quite a bit i think it's something

3750
02:15:58,239 --> 02:16:00,400
that's interesting i think that's

3751
02:15:59,520 --> 02:16:02,159
something that

3752
02:16:00,400 --> 02:16:03,839
you know folks are are generally

3753
02:16:02,159 --> 02:16:05,679
interested in

3754
02:16:03,840 --> 02:16:08,159
i think that's something that we would

3755
02:16:05,679 --> 02:16:10,719
like to look at for the future

3756
02:16:08,159 --> 02:16:11,440
uh we're we're not there yet but it's

3757
02:16:10,719 --> 02:16:15,119
something that

3758
02:16:11,440 --> 02:16:18,480
is is on the roadmap and you know

3759
02:16:15,119 --> 02:16:21,598
it's it's something that we'll

3760
02:16:18,480 --> 02:16:23,119
we'll see what happens in 2021 um we'll

3761
02:16:21,599 --> 02:16:24,560
see how it unfolds and we'll see what we

3762
02:16:23,119 --> 02:16:26,799
can do to incorporate some of that kind

3763
02:16:24,560 --> 02:16:28,719
of stuff

3764
02:16:26,800 --> 02:16:30,639
okay perfect perfect we did have a

3765
02:16:28,719 --> 02:16:32,799
question about what the largest

3766
02:16:30,639 --> 02:16:34,080
security onion deployment is that we're

3767
02:16:32,799 --> 02:16:36,398
aware of

3768
02:16:34,080 --> 02:16:37,840
uh doug we'll give that one to you as

3769
02:16:36,398 --> 02:16:39,760
well

3770
02:16:37,840 --> 02:16:41,120
so i've heard that there is a deployment

3771
02:16:39,760 --> 02:16:44,478
out there that is over

3772
02:16:41,120 --> 02:16:47,599
600 sensors they had plans of going over

3773
02:16:44,478 --> 02:16:49,679
800 at some point in time um

3774
02:16:47,599 --> 02:16:51,679
so i know that there are some pretty

3775
02:16:49,679 --> 02:16:54,719
beefy deployments out there

3776
02:16:51,679 --> 02:16:56,719
um and beyond that we also have a major

3777
02:16:54,718 --> 02:16:59,279
university that's

3778
02:16:56,718 --> 02:17:00,318
using security onion to monitor some

3779
02:16:59,280 --> 02:17:04,319
pretty big

3780
02:17:00,318 --> 02:17:06,000
size pipes so i can tell you that

3781
02:17:04,318 --> 02:17:07,279
security onions out there it's it's

3782
02:17:06,000 --> 02:17:09,040
dealing with some large enterprise

3783
02:17:07,280 --> 02:17:12,399
networks and it's

3784
02:17:09,040 --> 02:17:12,399
it's finding some bad guys

3785
02:17:13,280 --> 02:17:18,080
yep definitely definitely um

3786
02:17:15,959 --> 02:17:20,399
[Music]

3787
02:17:18,080 --> 02:17:22,240
firewalls uh sending in data from

3788
02:17:20,398 --> 02:17:23,519
external firewalls really kind of any

3789
02:17:22,240 --> 02:17:26,318
other kind of

3790
02:17:23,519 --> 02:17:28,719
external sort of syslog based uh you

3791
02:17:26,318 --> 02:17:31,920
know things can people point those

3792
02:17:28,718 --> 02:17:34,080
uh external applications and and devices

3793
02:17:31,920 --> 02:17:35,200
point their logs at security onion mike

3794
02:17:34,080 --> 02:17:36,718
do you want to take that it's kind of an

3795
02:17:35,200 --> 02:17:39,840
easy one sure yeah so

3796
02:17:36,718 --> 02:17:41,678
um there we'll have some some

3797
02:17:39,840 --> 02:17:43,280
detailed documentation but you can

3798
02:17:41,679 --> 02:17:46,240
either point it to a

3799
02:17:43,280 --> 02:17:48,000
forward node or the the manager uh you

3800
02:17:46,240 --> 02:17:48,558
know depending i i typically like to

3801
02:17:48,000 --> 02:17:51,760
point

3802
02:17:48,558 --> 02:17:53,279
uh the logs to the manager but

3803
02:17:51,760 --> 02:17:54,840
you know if you have a remote site and

3804
02:17:53,280 --> 02:17:57,359
you want to point stuff to

3805
02:17:54,840 --> 02:17:58,240
that uh local box and then have it send

3806
02:17:57,359 --> 02:17:59,599
it up um and

3807
02:17:58,240 --> 02:18:01,599
you know because it does get encrypted

3808
02:17:59,599 --> 02:18:02,960
and compressed um

3809
02:18:01,599 --> 02:18:04,318
from the forward node you know the

3810
02:18:02,959 --> 02:18:04,638
communication between the forward node

3811
02:18:04,318 --> 02:18:07,599
and

3812
02:18:04,638 --> 02:18:08,718
logstash um that beats traffic is

3813
02:18:07,599 --> 02:18:10,960
compressed and

3814
02:18:08,718 --> 02:18:13,119
encrypted but you know there is

3815
02:18:10,959 --> 02:18:15,199
flexibility there between using the

3816
02:18:13,120 --> 02:18:16,319
the forward node or the manager and

3817
02:18:15,200 --> 02:18:17,760
that'll be in the docs

3818
02:18:16,318 --> 02:18:19,679
you can look how to do that in the doc

3819
02:18:17,760 --> 02:18:22,800
site

3820
02:18:19,679 --> 02:18:23,760
okay great thank you um this is probably

3821
02:18:22,799 --> 02:18:29,518
a good question for

3822
02:18:23,760 --> 02:18:33,160
wes uh capability for integrating misp

3823
02:18:29,519 --> 02:18:36,000
yeah so uh we currently expose the

3824
02:18:33,160 --> 02:18:38,558
application.com for the hive so

3825
02:18:36,000 --> 02:18:40,318
if you already have a miss instance you

3826
02:18:38,558 --> 02:18:41,759
can certainly integrate that with your

3827
02:18:40,318 --> 02:18:45,599
the hive instance

3828
02:18:41,760 --> 02:18:47,280
um we do i do plan on updating

3829
02:18:45,599 --> 02:18:48,639
the we have a script right now for

3830
02:18:47,280 --> 02:18:49,439
current platform which i plan on

3831
02:18:48,638 --> 02:18:51,920
updating which

3832
02:18:49,439 --> 02:18:53,679
will go and pull that uh stuff down from

3833
02:18:51,920 --> 02:18:56,558
the midst of api stuff for z

3834
02:18:53,679 --> 02:18:57,920
consort and whatnot and then i also have

3835
02:18:56,558 --> 02:19:00,240
some other stuff

3836
02:18:57,920 --> 02:19:01,120
kind of on the to-do list and and in my

3837
02:19:00,240 --> 02:19:03,679
plans

3838
02:19:01,120 --> 02:19:04,719
but um but yeah that should pretty much

3839
02:19:03,679 --> 02:19:06,879
cover it for

3840
02:19:04,718 --> 02:19:06,879
for

3841
02:19:10,799 --> 02:19:14,718
okay great wes while i have you on the

3842
02:19:13,040 --> 02:19:17,120
spot there's another question

3843
02:19:14,718 --> 02:19:20,638
about being able to as part of an

3844
02:19:17,120 --> 02:19:22,719
upgrade process from 1604 to 2.0

3845
02:19:20,638 --> 02:19:24,000
you know where it stands today and if we

3846
02:19:22,718 --> 02:19:26,080
need to talk about where it's going to

3847
02:19:24,000 --> 02:19:27,840
go in the future we can defer to mike

3848
02:19:26,080 --> 02:19:29,359
but where does it stand today and being

3849
02:19:27,840 --> 02:19:32,160
able to import

3850
02:19:29,359 --> 02:19:34,880
uh slash export configurations from 1604

3851
02:19:32,160 --> 02:19:37,119
to 2.0 um

3852
02:19:34,879 --> 02:19:38,398
and uh you know how is that possible

3853
02:19:37,120 --> 02:19:40,960
today

3854
02:19:38,398 --> 02:19:41,760
right so right now the upgrade path will

3855
02:19:40,959 --> 02:19:45,358
be from

3856
02:19:41,760 --> 02:19:47,200
obviously 1604 ubuntu 1604 to

3857
02:19:45,359 --> 02:19:49,680
we went to 1804 and then you would

3858
02:19:47,200 --> 02:19:52,319
install security ending on top of that

3859
02:19:49,680 --> 02:19:53,520
we do have a procedure on the riba doc

3860
02:19:52,319 --> 02:19:56,560
site to do that

3861
02:19:53,520 --> 02:19:57,600
however that procedure is uh obviously

3862
02:19:56,560 --> 02:20:00,800
provided with

3863
02:19:57,600 --> 02:20:02,160
um you know the caveat that it may not

3864
02:20:00,800 --> 02:20:04,479
work for everybody

3865
02:20:02,160 --> 02:20:05,840
but from our testing it seems to work

3866
02:20:04,479 --> 02:20:08,479
for us for the most part

3867
02:20:05,840 --> 02:20:10,160
um and even with that you should be able

3868
02:20:08,479 --> 02:20:11,438
to retain your current elastic search

3869
02:20:10,160 --> 02:20:14,399
data and whatnot

3870
02:20:11,439 --> 02:20:16,319
but again we make no guarantees for that

3871
02:20:14,399 --> 02:20:18,800
upgrade path at this time

3872
02:20:16,319 --> 02:20:20,800
um other things like configuration files

3873
02:20:18,800 --> 02:20:23,438
like knits rules

3874
02:20:20,800 --> 02:20:25,358
zinc scripts any other custom stuff that

3875
02:20:23,439 --> 02:20:26,560
you put in you want some migrate to the

3876
02:20:25,359 --> 02:20:28,319
new locations

3877
02:20:26,560 --> 02:20:30,160
because we the procedure doesn't cover

3878
02:20:28,319 --> 02:20:31,039
that migration for those configuration

3879
02:20:30,160 --> 02:20:32,319
items

3880
02:20:31,040 --> 02:20:34,240
so you'll definitely want to take that

3881
02:20:32,319 --> 02:20:36,479
into consideration and we outline some

3882
02:20:34,240 --> 02:20:39,520
of that in the upgrade document

3883
02:20:36,479 --> 02:20:41,438
or the blog article there on the read

3884
02:20:39,520 --> 02:20:43,040
the docs

3885
02:20:41,439 --> 02:20:46,319
but you know obviously in the future we

3886
02:20:43,040 --> 02:20:49,359
hope on improving that

3887
02:20:46,319 --> 02:20:51,199
to a certain degree but

3888
02:20:49,359 --> 02:20:53,120
the best course of action as we always

3889
02:20:51,200 --> 02:20:53,840
recommend would be to perform a clean

3890
02:20:53,120 --> 02:20:56,080
install

3891
02:20:53,840 --> 02:20:57,359
just so you don't have any lingering

3892
02:20:56,080 --> 02:20:59,280
items which

3893
02:20:57,359 --> 02:21:01,120
you may not see as an issue today that

3894
02:20:59,280 --> 02:21:03,840
may be coming become an issue

3895
02:21:01,120 --> 02:21:05,200
six weeks from now um so definitely

3896
02:21:03,840 --> 02:21:07,040
something to consider that

3897
02:21:05,200 --> 02:21:08,800
the existing data that you have most of

3898
02:21:07,040 --> 02:21:12,000
it will still remain on the box

3899
02:21:08,800 --> 02:21:15,199
which could be a good or a bad thing um

3900
02:21:12,000 --> 02:21:18,479
and that's that's that should be the

3901
02:21:15,200 --> 02:21:20,000
extent of the process and

3902
02:21:18,479 --> 02:21:22,080
so phil just saw the question pop up

3903
02:21:20,000 --> 02:21:24,479
about ubuntu 2004

3904
02:21:22,080 --> 02:21:26,000
along the lines with that um we do plan

3905
02:21:24,479 --> 02:21:27,358
supporting ubuntu 2004

3906
02:21:26,000 --> 02:21:29,200
right now it's really coming down to a

3907
02:21:27,359 --> 02:21:32,240
single package um

3908
02:21:29,200 --> 02:21:35,680
that uh that is preventing us from

3909
02:21:32,240 --> 02:21:37,600
rolling out ubuntu 20.04 so but it's

3910
02:21:35,680 --> 02:21:39,760
definitely something that's on there

3911
02:21:37,600 --> 02:21:41,120
um and then from centos eight that's a

3912
02:21:39,760 --> 02:21:43,439
bigger thing because

3913
02:21:41,120 --> 02:21:44,319
centos eight dropped support for docker

3914
02:21:43,439 --> 02:21:46,960
so um

3915
02:21:44,319 --> 02:21:48,240
we're waiting on some pod man api things

3916
02:21:46,960 --> 02:21:51,679
to happen there

3917
02:21:48,240 --> 02:21:52,720
uh before um we up release centos 8

3918
02:21:51,680 --> 02:21:56,080
support

3919
02:21:52,720 --> 02:21:56,880
so one other thing on the um as far as

3920
02:21:56,080 --> 02:21:58,800
upgrades go

3921
02:21:56,880 --> 02:22:00,240
if you are a professional services or

3922
02:21:58,800 --> 02:22:02,880
appliance customer

3923
02:22:00,240 --> 02:22:03,359
with security onion solutions you know

3924
02:22:02,880 --> 02:22:05,519
uh

3925
02:22:03,359 --> 02:22:06,720
don't worry worry not we're here to help

3926
02:22:05,520 --> 02:22:08,880
you through the

3927
02:22:06,720 --> 02:22:10,000
through that process to help make that

3928
02:22:08,880 --> 02:22:13,199
easier but as

3929
02:22:10,000 --> 02:22:16,160
as uh wes west said there um

3930
02:22:13,200 --> 02:22:17,120
that uh it you know the easiest method

3931
02:22:16,160 --> 02:22:20,080
would be to

3932
02:22:17,120 --> 02:22:21,439
uh to reinstall um obviously that's not

3933
02:22:20,080 --> 02:22:22,399
going to work in every environment we

3934
02:22:21,439 --> 02:22:24,960
know that

3935
02:22:22,399 --> 02:22:26,720
so we're working on that the best we can

3936
02:22:24,960 --> 02:22:28,800
um

3937
02:22:26,720 --> 02:22:30,560
so lots of other questions i think we're

3938
02:22:28,800 --> 02:22:32,960
kind of running short on time

3939
02:22:30,560 --> 02:22:34,880
so let me uh let me throw one last

3940
02:22:32,960 --> 02:22:36,240
question to you doug and maybe this will

3941
02:22:34,880 --> 02:22:38,000
uh

3942
02:22:36,240 --> 02:22:39,359
will help us draw the the conference to

3943
02:22:38,000 --> 02:22:40,640
a close before

3944
02:22:39,359 --> 02:22:41,920
before i give you that question i just

3945
02:22:40,640 --> 02:22:44,160
want to thank everybody for all the

3946
02:22:41,920 --> 02:22:46,000
great questions please continue to uh

3947
02:22:44,160 --> 02:22:47,760
you can't continue to submit those

3948
02:22:46,000 --> 02:22:49,280
if there's one that you asked that we

3949
02:22:47,760 --> 02:22:50,080
just didn't get to because there were so

3950
02:22:49,280 --> 02:22:52,800
many today

3951
02:22:50,080 --> 02:22:53,520
great great response you can drop those

3952
02:22:52,800 --> 02:22:56,399
in the

3953
02:22:53,520 --> 02:22:58,080
uh in discussions as doug has pointed

3954
02:22:56,399 --> 02:23:00,160
out today our new forum

3955
02:22:58,080 --> 02:23:02,160
uh and we'll uh we'll attempt to answer

3956
02:23:00,160 --> 02:23:04,560
those uh the best we can

3957
02:23:02,160 --> 02:23:06,080
and we again we really appreciate it so

3958
02:23:04,560 --> 02:23:07,359
doug we've had a lot of questions in

3959
02:23:06,080 --> 02:23:10,080
here today about

3960
02:23:07,359 --> 02:23:13,359
cloud would you like to uh would you

3961
02:23:10,080 --> 02:23:16,720
like to talk about that sir

3962
02:23:13,359 --> 02:23:19,040
wow it's it's funny you bring that up um

3963
02:23:16,720 --> 02:23:21,519
because uh you know i've quoted steve

3964
02:23:19,040 --> 02:23:24,720
jobs a few times today

3965
02:23:21,520 --> 02:23:26,399
and uh you know like him or hate him

3966
02:23:24,720 --> 02:23:28,560
he had some interesting things to say

3967
02:23:26,399 --> 02:23:29,279
and one of the ways that he typically

3968
02:23:28,560 --> 02:23:33,039
closed

3969
02:23:29,280 --> 02:23:35,760
most of his conferences and talks was

3970
02:23:33,040 --> 02:23:37,520
with the phrase one more thing as it

3971
02:23:35,760 --> 02:23:38,720
turns out we actually do have one more

3972
02:23:37,520 --> 02:23:41,359
thing today

3973
02:23:38,720 --> 02:23:42,240
so for those of you who are in amazon

3974
02:23:41,359 --> 02:23:44,080
aws

3975
02:23:42,240 --> 02:23:45,840
and you're interested in running

3976
02:23:44,080 --> 02:23:46,960
security onion in that kind of

3977
02:23:45,840 --> 02:23:50,640
environment

3978
02:23:46,960 --> 02:23:53,839
we will have a security onion 2 ami

3979
02:23:50,640 --> 02:23:54,720
coming soon so official ami will be on

3980
02:23:53,840 --> 02:23:57,439
the aws

3981
02:23:54,720 --> 02:23:58,640
marketplace we look to make that

3982
02:23:57,439 --> 02:24:01,760
announcement

3983
02:23:58,640 --> 02:24:05,680
in the next few weeks so stay tuned

3984
02:24:01,760 --> 02:24:07,200
for that so

3985
02:24:05,680 --> 02:24:10,160
that answers that question phil do you

3986
02:24:07,200 --> 02:24:10,160
have any closing remarks

3987
02:24:10,240 --> 02:24:16,800
i don't uh so go ahead and take us out

3988
02:24:14,720 --> 02:24:18,640
all right well as phil said before i

3989
02:24:16,800 --> 02:24:19,279
want to say thank you to each and every

3990
02:24:18,640 --> 02:24:22,399
one of you

3991
02:24:19,280 --> 02:24:25,200
for joining us today uh i'm i'm still

3992
02:24:22,399 --> 02:24:26,080
a little amazed that we had over 1700

3993
02:24:25,200 --> 02:24:29,359
registrants

3994
02:24:26,080 --> 02:24:30,960
so again on behalf of all of us here at

3995
02:24:29,359 --> 02:24:32,720
security onion solutions we'd like to

3996
02:24:30,960 --> 02:24:33,519
thank you for being a part of today's

3997
02:24:32,720 --> 02:24:36,000
conference

3998
02:24:33,520 --> 02:24:37,439
for being a part of the global security

3999
02:24:36,000 --> 02:24:39,359
onion community

4000
02:24:37,439 --> 02:24:41,520
and we hope to see you next year we hope

4001
02:24:39,359 --> 02:24:43,120
that you'll check out security onion 2

4002
02:24:41,520 --> 02:24:44,960
we hope that it helps you to peel back

4003
02:24:43,120 --> 02:24:57,840
the layers of your enterprise

4004
02:24:44,960 --> 02:24:57,839
and make your adversaries cry

4005
02:25:06,800 --> 02:25:08,880
you

