1
00:00:10,920 --> 00:00:12,960
all right so we're going to start off

2
00:00:12,960 --> 00:00:15,719
the afternoon talking about one of my

3
00:00:15,719 --> 00:00:18,180
favorite subjects Linux monitoring and

4
00:00:18,180 --> 00:00:20,400
so I give you Mr Bryant treckel and

5
00:00:20,400 --> 00:00:21,730
Brandon Larson

6
00:00:21,730 --> 00:00:25,499
[Applause]

7
00:00:26,100 --> 00:00:28,320
hello you all hear me

8
00:00:28,320 --> 00:00:30,779
good afternoon good afternoon I'm super

9
00:00:30,779 --> 00:00:33,480
excited to be here I want to thank Doug

10
00:00:33,480 --> 00:00:35,399
and Phil for allowing me to talk they

11
00:00:35,399 --> 00:00:37,079
did give me a time frame I have a

12
00:00:37,079 --> 00:00:40,140
tendency of going a little overtime all

13
00:00:40,140 --> 00:00:41,579
my students that were in my class they

14
00:00:41,579 --> 00:00:43,559
know that I don't believe in breaks

15
00:00:43,559 --> 00:00:45,300
we'll just do eight hours straight but

16
00:00:45,300 --> 00:00:47,520
they don't they didn't like that so

17
00:00:47,520 --> 00:00:49,260
um I'm super excited about being here

18
00:00:49,260 --> 00:00:51,899
again my name is um Bryant treckel I

19
00:00:51,899 --> 00:00:53,579
work at security audience I've been here

20
00:00:53,579 --> 00:00:57,420
for almost three years in October I am a

21
00:00:57,420 --> 00:00:59,640
transplant from of Georgia I'm

22
00:00:59,640 --> 00:01:02,579
originally from Western New York so I'm

23
00:01:02,579 --> 00:01:04,680
excited to be down here I I joined the

24
00:01:04,680 --> 00:01:07,740
army back in 1999 when they used to have

25
00:01:07,740 --> 00:01:09,420
these things called floppy disks and

26
00:01:09,420 --> 00:01:11,939
cool things like that the recruiter

27
00:01:11,939 --> 00:01:13,680
called me was like hey do you want to

28
00:01:13,680 --> 00:01:15,119
join the Army and I grew up in a super

29
00:01:15,119 --> 00:01:17,760
small town with like one red light and a

30
00:01:17,760 --> 00:01:19,619
bunch of great farms and I was like yeah

31
00:01:19,619 --> 00:01:21,180
I think that'd be a good idea do you

32
00:01:21,180 --> 00:01:23,280
have anything computer related uh in my

33
00:01:23,280 --> 00:01:25,320
recruiter actually hooked me up and so I

34
00:01:25,320 --> 00:01:28,080
spent 20 years in the Army just doing

35
00:01:28,080 --> 00:01:30,240
different types of network things I got

36
00:01:30,240 --> 00:01:31,500
an opportunity to work at the White

37
00:01:31,500 --> 00:01:33,360
House I did that for I read about six

38
00:01:33,360 --> 00:01:35,700
years then after that I became what were

39
00:01:35,700 --> 00:01:37,259
they called warrant officer so if you're

40
00:01:37,259 --> 00:01:39,299
unfamiliar with the Army term that's

41
00:01:39,299 --> 00:01:41,220
like a subject matter expert on a

42
00:01:41,220 --> 00:01:43,439
particular field and so I did that for

43
00:01:43,439 --> 00:01:45,299
like the last six years of my career and

44
00:01:45,299 --> 00:01:46,860
that's where I met this guy my partner

45
00:01:46,860 --> 00:01:49,560
in crime we went around on DOD networks

46
00:01:49,560 --> 00:01:52,380
and uh Rick Rigs of Havoc

47
00:01:52,380 --> 00:01:54,600
um trying to find evil and so

48
00:01:54,600 --> 00:01:58,079
this is Brandon Brandon Larson he's

49
00:01:58,079 --> 00:02:01,380
again he's my partner in crime so

50
00:02:01,380 --> 00:02:01,979
um

51
00:02:01,979 --> 00:02:04,680
that's really um about us and what I

52
00:02:04,680 --> 00:02:06,479
wanted to do you know I was told once

53
00:02:06,479 --> 00:02:07,799
that if you ever want to be good at

54
00:02:07,799 --> 00:02:09,959
something uh just sign up to present

55
00:02:09,959 --> 00:02:11,640
that topic and you'll become really

56
00:02:11,640 --> 00:02:13,800
efficient and so one of the things that

57
00:02:13,800 --> 00:02:16,800
I wanted to really focus on is how do I

58
00:02:16,800 --> 00:02:21,060
uh as an analyst find evil in Linux

59
00:02:21,060 --> 00:02:22,319
right I've been doing Linux

60
00:02:22,319 --> 00:02:24,360
administrative Administration for a long

61
00:02:24,360 --> 00:02:26,640
time I mean I'm pretty good with with

62
00:02:26,640 --> 00:02:28,080
doing Linux things but I've never really

63
00:02:28,080 --> 00:02:31,140
sat down is that how do I find evil how

64
00:02:31,140 --> 00:02:32,940
do I find evil inside of Linux and so

65
00:02:32,940 --> 00:02:34,620
there's a couple tools that we're going

66
00:02:34,620 --> 00:02:36,540
to talk about and then I want to show

67
00:02:36,540 --> 00:02:38,520
you how to use security onion to kind of

68
00:02:38,520 --> 00:02:40,680
sift through that data and so without

69
00:02:40,680 --> 00:02:42,120
further ado

70
00:02:42,120 --> 00:02:44,400
no presentation would be would be

71
00:02:44,400 --> 00:02:46,680
complete without some dad jokes so I'm

72
00:02:46,680 --> 00:02:48,120
gonna go ahead and load some dad jokes

73
00:02:48,120 --> 00:02:50,340
so the first one is what did the Buffalo

74
00:02:50,340 --> 00:02:54,180
yell to his son when he left for college

75
00:02:54,180 --> 00:02:57,180
bye son right so my son my oldest is a

76
00:02:57,180 --> 00:02:59,099
is a senior in high school and I told

77
00:02:59,099 --> 00:03:01,080
him this and he gave me like Dad your

78
00:03:01,080 --> 00:03:02,760
dumb look so I know it's a good joke

79
00:03:02,760 --> 00:03:04,920
right that's the measure all right the

80
00:03:04,920 --> 00:03:07,260
second one is oh where do dads keep

81
00:03:07,260 --> 00:03:09,420
their jokes

82
00:03:09,420 --> 00:03:13,019
in a database in a database right so um

83
00:03:13,019 --> 00:03:15,000
so those are your dad jokes

84
00:03:15,000 --> 00:03:16,680
um I'm super excited about this again

85
00:03:16,680 --> 00:03:19,500
about presenting so let's go ahead and

86
00:03:19,500 --> 00:03:22,319
get into the why so why do I need to

87
00:03:22,319 --> 00:03:25,440
monitor my Linux systems why right and

88
00:03:25,440 --> 00:03:27,000
so there's this perceived wisdom out

89
00:03:27,000 --> 00:03:29,400
there that Linux based operating systems

90
00:03:29,400 --> 00:03:31,140
are just more secure like I don't need

91
00:03:31,140 --> 00:03:33,239
to monitor Linux because it's more

92
00:03:33,239 --> 00:03:35,099
secure than Windows right windows or

93
00:03:35,099 --> 00:03:37,680
viruses are only a Windows thing so as

94
00:03:37,680 --> 00:03:40,200
long as I'm smart with what I do

95
00:03:40,200 --> 00:03:42,420
um I'm gonna be okay right and that has

96
00:03:42,420 --> 00:03:45,420
some truth to it but I want to thank all

97
00:03:45,420 --> 00:03:48,120
of my uh put all my eggs in that basket

98
00:03:48,120 --> 00:03:50,040
um because as Linux becomes more and

99
00:03:50,040 --> 00:03:52,620
more used as a platform to host our

100
00:03:52,620 --> 00:03:54,540
critical Services adversaries are

101
00:03:54,540 --> 00:03:56,580
digging more and more in to how they can

102
00:03:56,580 --> 00:03:58,620
exploit them so we need to just stop

103
00:03:58,620 --> 00:04:00,659
making the assumption that Linux is

104
00:04:00,659 --> 00:04:01,739
secured we really need to start

105
00:04:01,739 --> 00:04:03,720
monitoring it so

106
00:04:03,720 --> 00:04:05,760
um the reason a couple of things of why

107
00:04:05,760 --> 00:04:07,560
it's important to monitor our Linux is

108
00:04:07,560 --> 00:04:09,720
first off is the Linux based malware is

109
00:04:09,720 --> 00:04:12,000
on a rise now I got this graph from

110
00:04:12,000 --> 00:04:14,819
Atlas VPN and one of the services they

111
00:04:14,819 --> 00:04:17,040
have if you subscribe to it is they will

112
00:04:17,040 --> 00:04:19,320
look at all of your traffic as it's

113
00:04:19,320 --> 00:04:21,298
passing through their VPN service and

114
00:04:21,298 --> 00:04:23,340
they will block malware that they know

115
00:04:23,340 --> 00:04:26,460
about and so as you can see here from uh

116
00:04:26,460 --> 00:04:29,040
third quarter of 2021 the fourth quarter

117
00:04:29,040 --> 00:04:33,000
of 2021 there was a 600 Spike and Linux

118
00:04:33,000 --> 00:04:35,460
based malware passing through their VPN

119
00:04:35,460 --> 00:04:37,400
service and so uh

120
00:04:37,400 --> 00:04:40,139
viruses that malware are no longer just

121
00:04:40,139 --> 00:04:41,880
a windows thing we can't just Bank on

122
00:04:41,880 --> 00:04:44,699
that right so that's one thing why we

123
00:04:44,699 --> 00:04:46,440
need to monitor our Linux servers

124
00:04:46,440 --> 00:04:48,600
another reason is that we can't just

125
00:04:48,600 --> 00:04:51,840
blindly trust people's intent now um I'm

126
00:04:51,840 --> 00:04:53,880
usually fall victim to clickbait if they

127
00:04:53,880 --> 00:04:56,759
do a good job with uh with the title and

128
00:04:56,759 --> 00:04:59,100
so about a year ago I saw this pop-up

129
00:04:59,100 --> 00:05:01,500
and it said how a university got itself

130
00:05:01,500 --> 00:05:03,419
banned from the Linux kernel and I was

131
00:05:03,419 --> 00:05:05,280
like what right so I went ahead and

132
00:05:05,280 --> 00:05:07,680
clicked on it and apparently if who

133
00:05:07,680 --> 00:05:10,020
hears the uh familiar with this scenario

134
00:05:10,020 --> 00:05:11,340
anybody

135
00:05:11,340 --> 00:05:13,139
a couple of you yeah so what was

136
00:05:13,139 --> 00:05:15,120
happening is as part of research

137
00:05:15,120 --> 00:05:17,580
academic research uh what this professor

138
00:05:17,580 --> 00:05:19,740
was doing was he was submitting

139
00:05:19,740 --> 00:05:23,100
arbitrary code to the Linux kernel to

140
00:05:23,100 --> 00:05:24,720
try he would he would address an issue

141
00:05:24,720 --> 00:05:27,360
but then contribute arbitrary code just

142
00:05:27,360 --> 00:05:28,740
to prove a point that he could actually

143
00:05:28,740 --> 00:05:31,199
do it for his research paper and his

144
00:05:31,199 --> 00:05:33,660
actions actually got the University at

145
00:05:33,660 --> 00:05:36,479
every uh give or every request from that

146
00:05:36,479 --> 00:05:38,880
University banned from any commits and

147
00:05:38,880 --> 00:05:39,660
so

148
00:05:39,660 --> 00:05:42,300
um you know the the the reason why he

149
00:05:42,300 --> 00:05:45,240
was doing it was kind of suspect but in

150
00:05:45,240 --> 00:05:47,100
his research he said one thing that he's

151
00:05:47,100 --> 00:05:49,380
seen this is pretty interesting is that

152
00:05:49,380 --> 00:05:52,520
bug Hunters this is cool we'll fix bugs

153
00:05:52,520 --> 00:05:55,199
will get paid but then they'll introduce

154
00:05:55,199 --> 00:05:57,900
other bugs in their fix right so they

155
00:05:57,900 --> 00:05:59,340
could basically keep this thing going

156
00:05:59,340 --> 00:06:01,500
and keep on getting paid so I thought it

157
00:06:01,500 --> 00:06:04,139
was pretty interesting uh to kind of

158
00:06:04,139 --> 00:06:06,300
take a look at that so

159
00:06:06,300 --> 00:06:07,740
um we can't blindly trust people's

160
00:06:07,740 --> 00:06:09,300
intent and so

161
00:06:09,300 --> 00:06:11,220
um the question is how do I actually

162
00:06:11,220 --> 00:06:14,100
detect right how do I find this evil

163
00:06:14,100 --> 00:06:16,440
activity on my Linux systems and so uh

164
00:06:16,440 --> 00:06:18,539
what Brandon and I did is we went ahead

165
00:06:18,539 --> 00:06:20,520
and grabbed our Linux system and I

166
00:06:20,520 --> 00:06:22,380
wanted to test three different tools I

167
00:06:22,380 --> 00:06:25,139
wanted to test sysmon for Linux I wanted

168
00:06:25,139 --> 00:06:27,539
to test audit beats it also wanted to

169
00:06:27,539 --> 00:06:29,160
test audit D now there's lots of

170
00:06:29,160 --> 00:06:31,380
different ways of analyzing Linux

171
00:06:31,380 --> 00:06:33,240
machines but these are the ones that we

172
00:06:33,240 --> 00:06:34,800
chose and so

173
00:06:34,800 --> 00:06:36,120
um we went ahead and split up lots of

174
00:06:36,120 --> 00:06:39,000
different machines and we created some

175
00:06:39,000 --> 00:06:40,860
some data and we send that data to

176
00:06:40,860 --> 00:06:42,780
security onion and the two things I

177
00:06:42,780 --> 00:06:45,000
wanted to identify was can I actually

178
00:06:45,000 --> 00:06:47,819
find evil activity and can I build

179
00:06:47,819 --> 00:06:50,220
detections on it so can I find evil

180
00:06:50,220 --> 00:06:52,800
activity and can I build detections and

181
00:06:52,800 --> 00:06:54,840
so that was kind of our mission test out

182
00:06:54,840 --> 00:06:57,240
these three different types of Linux

183
00:06:57,240 --> 00:06:59,699
monitoring applications and then see if

184
00:06:59,699 --> 00:07:02,280
I could find malicious activity inside

185
00:07:02,280 --> 00:07:05,220
of security on you so for our attack

186
00:07:05,220 --> 00:07:06,900
scenario

187
00:07:06,900 --> 00:07:08,759
um what we did is we went to the

188
00:07:08,759 --> 00:07:09,960
internet and we kind of did some

189
00:07:09,960 --> 00:07:11,280
research and figured out you know what

190
00:07:11,280 --> 00:07:12,900
are some different types of attacks that

191
00:07:12,900 --> 00:07:14,160
have been out there what are some

192
00:07:14,160 --> 00:07:16,560
detections that are out there and what I

193
00:07:16,560 --> 00:07:18,720
wanted to do is I wanted to create an

194
00:07:18,720 --> 00:07:21,900
attack scenario that I myself would

195
00:07:21,900 --> 00:07:24,660
overlook right I myself would Overlook

196
00:07:24,660 --> 00:07:26,460
so you know some of the some of the

197
00:07:26,460 --> 00:07:27,960
things like downloading files from the

198
00:07:27,960 --> 00:07:30,360
internet uh curl is a pretty common one

199
00:07:30,360 --> 00:07:32,759
W get if I saw that I would

200
00:07:32,759 --> 00:07:35,400
automatically be like huh right and so I

201
00:07:35,400 --> 00:07:37,319
was like how can I build an attack that

202
00:07:37,319 --> 00:07:39,660
like I wouldn't miss and so this is

203
00:07:39,660 --> 00:07:41,280
going to be our tax scenario that we're

204
00:07:41,280 --> 00:07:43,500
going to use uh up here for our initial

205
00:07:43,500 --> 00:07:45,419
access we're gonna have malicious code

206
00:07:45,419 --> 00:07:47,039
downloaded and it's going to be

207
00:07:47,039 --> 00:07:50,819
downloaded through GDP which is gnome

208
00:07:50,819 --> 00:07:53,520
debugger I'm gonna do a debugger um and

209
00:07:53,520 --> 00:07:54,720
then we're going to have some Discovery

210
00:07:54,720 --> 00:07:57,180
commands I was like who am I the SS

211
00:07:57,180 --> 00:08:00,780
command PS and IPA for IP address

212
00:08:00,780 --> 00:08:02,880
information we're going to gather some

213
00:08:02,880 --> 00:08:05,099
credentials using a tool called Mimi

214
00:08:05,099 --> 00:08:07,259
penguins which is very similar to Mimi

215
00:08:07,259 --> 00:08:09,479
cats after that we're going to go ahead

216
00:08:09,479 --> 00:08:12,060
and establish some persistence and what

217
00:08:12,060 --> 00:08:14,460
I decided to do for persistence is I

218
00:08:14,460 --> 00:08:15,960
wanted to write to the cron tab but

219
00:08:15,960 --> 00:08:17,699
again that's pretty common so I just

220
00:08:17,699 --> 00:08:19,440
created a service I think I was running

221
00:08:19,440 --> 00:08:21,660
against a service that must be legit and

222
00:08:21,660 --> 00:08:24,720
then finally for data X fill you know I

223
00:08:24,720 --> 00:08:26,340
could use again some really common tools

224
00:08:26,340 --> 00:08:28,139
but I was like why don't I just SCP the

225
00:08:28,139 --> 00:08:30,180
data out of my network right so this is

226
00:08:30,180 --> 00:08:31,640
kind of the attack

227
00:08:31,640 --> 00:08:34,320
scenario that we used for each of our

228
00:08:34,320 --> 00:08:35,940
different detections okay for each of

229
00:08:35,940 --> 00:08:37,679
the different detections so

230
00:08:37,679 --> 00:08:39,539
what I want to do is kind of talk real

231
00:08:39,539 --> 00:08:43,979
quick about our lab setup we have our C2

232
00:08:43,979 --> 00:08:45,779
server that I used was called sliver

233
00:08:45,779 --> 00:08:47,940
sliver is a free open source project

234
00:08:47,940 --> 00:08:50,040
it's super cool it's very similar to

235
00:08:50,040 --> 00:08:52,140
interpreter but it gives you a little

236
00:08:52,140 --> 00:08:54,000
bit more capability so I think it's a

237
00:08:54,000 --> 00:08:56,220
gap between interpreter and Cobalt

238
00:08:56,220 --> 00:08:58,860
strike it's free it's pretty awesome

239
00:08:58,860 --> 00:09:01,380
um and so I have my red team activity

240
00:09:01,380 --> 00:09:03,800
for my Victim I have just a generic

241
00:09:03,800 --> 00:09:08,459
Ubuntu 2004 server right after that and

242
00:09:08,459 --> 00:09:09,839
I have again we have System Mod for

243
00:09:09,839 --> 00:09:11,880
Linux file B and I had OS query

244
00:09:11,880 --> 00:09:14,160
installed and then for the blue team we

245
00:09:14,160 --> 00:09:16,680
had security onion uh two three one

246
00:09:16,680 --> 00:09:18,720
sixty installed we have some custom

247
00:09:18,720 --> 00:09:21,120
elastic ingest pipelines so one of the

248
00:09:21,120 --> 00:09:23,100
things we wanted to do is as we ingest

249
00:09:23,100 --> 00:09:25,680
this data we wanted to normalize it now

250
00:09:25,680 --> 00:09:27,720
all of the ingest pipelines that we used

251
00:09:27,720 --> 00:09:29,580
are all on our GitHub which you'll see

252
00:09:29,580 --> 00:09:31,500
at the end so if you want to incorporate

253
00:09:31,500 --> 00:09:32,580
something that incorporates something

254
00:09:32,580 --> 00:09:35,100
like audit beat or sysmon for Linux

255
00:09:35,100 --> 00:09:36,959
we've already done all the back end work

256
00:09:36,959 --> 00:09:40,320
to make it compatible with 23160 and

257
00:09:40,320 --> 00:09:42,959
then I also wanted to find ways of doing

258
00:09:42,959 --> 00:09:45,240
detection so here you can see I have a

259
00:09:45,240 --> 00:09:48,420
Linux Playbook plays Sigma HQ actually

260
00:09:48,420 --> 00:09:51,540
has Windows base plays and Linux base

261
00:09:51,540 --> 00:09:53,399
plays and so we just went ahead and

262
00:09:53,399 --> 00:09:55,620
Incorporated all of their Linux plays

263
00:09:55,620 --> 00:09:57,720
and we used that as kind of our blue

264
00:09:57,720 --> 00:10:00,839
team detection mechanism

265
00:10:00,839 --> 00:10:02,820
all right so that's our lab setup any

266
00:10:02,820 --> 00:10:05,220
questions so far before I get into the

267
00:10:05,220 --> 00:10:09,680
the live demo any questions

268
00:10:10,019 --> 00:10:12,839
all right so I was told that you're

269
00:10:12,839 --> 00:10:15,740
supposed to rub a bald head for luck so

270
00:10:15,740 --> 00:10:19,019
go ahead and do this let's see if this

271
00:10:19,019 --> 00:10:20,940
demo actually works

272
00:10:20,940 --> 00:10:24,000
um so again what we've what I've done is

273
00:10:24,000 --> 00:10:26,640
earlier this morning I

274
00:10:26,640 --> 00:10:30,980
went ahead and need to show my screen

275
00:10:31,140 --> 00:10:33,920
give me a second

276
00:10:34,260 --> 00:10:37,100
place settings

277
00:10:41,700 --> 00:10:43,880
foreign

278
00:10:46,820 --> 00:10:49,260
so what I did was earlier today I went

279
00:10:49,260 --> 00:10:50,760
ahead and I replayed that that attack

280
00:10:50,760 --> 00:10:54,300
scenario and I am capturing both network

281
00:10:54,300 --> 00:10:57,180
data and I'm in this lab I'm just using

282
00:10:57,180 --> 00:10:59,160
sysmon for Linux or I'm just using

283
00:10:59,160 --> 00:11:01,079
system on for Linux so

284
00:11:01,079 --> 00:11:02,640
um I've read through the attack scenario

285
00:11:02,640 --> 00:11:04,620
I've captured the network data and I

286
00:11:04,620 --> 00:11:07,200
have ingested my host data so let me go

287
00:11:07,200 --> 00:11:10,260
ahead and zoom in here now um any good

288
00:11:10,260 --> 00:11:11,760
investigation should really start out

289
00:11:11,760 --> 00:11:13,920
your alerts interface so if I go to my

290
00:11:13,920 --> 00:11:15,300
alerts interface

291
00:11:15,300 --> 00:11:17,700
you see I do have a couple of IDs alerts

292
00:11:17,700 --> 00:11:20,040
that triggered a couple things that may

293
00:11:20,040 --> 00:11:21,600
cut your catch your attention is we have

294
00:11:21,600 --> 00:11:24,120
this elf file being downloaded and we

295
00:11:24,120 --> 00:11:26,700
also have this python UI rib suspicious

296
00:11:26,700 --> 00:11:29,399
user agent being downloaded so it looks

297
00:11:29,399 --> 00:11:31,560
like there is some uh you know some type

298
00:11:31,560 --> 00:11:34,140
of network activity uh that triggered an

299
00:11:34,140 --> 00:11:36,180
alert now this is a pretty cool view I

300
00:11:36,180 --> 00:11:37,860
call this view that how much coffee does

301
00:11:37,860 --> 00:11:39,839
Bryant need to drink today because it

302
00:11:39,839 --> 00:11:41,399
gives me a good idea of what's going on

303
00:11:41,399 --> 00:11:43,140
in my network but it doesn't really give

304
00:11:43,140 --> 00:11:44,880
me a lot of context about who's doing

305
00:11:44,880 --> 00:11:48,180
what right you see I have uh six

306
00:11:48,180 --> 00:11:50,880
um different alerts for et policy

307
00:11:50,880 --> 00:11:54,300
um for the new uh Linux app user agent

308
00:11:54,300 --> 00:11:56,040
now that could be six different hosts

309
00:11:56,040 --> 00:11:57,899
triggering that alert once or one host

310
00:11:57,899 --> 00:12:00,240
triggering it six times so what I want

311
00:12:00,240 --> 00:12:02,399
to do is I want to go ahead and change

312
00:12:02,399 --> 00:12:03,779
this view so I'm going to click on this

313
00:12:03,779 --> 00:12:06,540
group by and change it to the second

314
00:12:06,540 --> 00:12:08,459
drop down I call it the five Tuple view

315
00:12:08,459 --> 00:12:10,500
because it gives me all of my IP

316
00:12:10,500 --> 00:12:12,839
important information and so if I come

317
00:12:12,839 --> 00:12:15,839
here and take a look you can see that my

318
00:12:15,839 --> 00:12:18,000
alerts I have really two different

319
00:12:18,000 --> 00:12:22,440
sessions I have this session between my

320
00:12:22,440 --> 00:12:26,100
Victim which is 75.135 and this IP

321
00:12:26,100 --> 00:12:29,279
address 91.38 and then I have two

322
00:12:29,279 --> 00:12:30,720
connections

323
00:12:30,720 --> 00:12:32,100
um here this is actually the same

324
00:12:32,100 --> 00:12:33,480
session because you can tell the

325
00:12:33,480 --> 00:12:35,339
ephemeral ports are the same so I have

326
00:12:35,339 --> 00:12:37,860
two different IDs alerts triggering on

327
00:12:37,860 --> 00:12:40,380
the same connection right on the same

328
00:12:40,380 --> 00:12:42,300
connection so what I want to do is I

329
00:12:42,300 --> 00:12:44,639
want to go ahead and take a look at this

330
00:12:44,639 --> 00:12:46,800
alert so I'm going to go we'll look at

331
00:12:46,800 --> 00:12:48,720
the elf file download I'm going to left

332
00:12:48,720 --> 00:12:52,200
click on here go to drill down what

333
00:12:52,200 --> 00:12:53,579
that's going to do is give me the

334
00:12:53,579 --> 00:12:55,920
unaggregated view and what I want to do

335
00:12:55,920 --> 00:12:57,660
is I'm going to go ahead and jump right

336
00:12:57,660 --> 00:13:00,300
to the pcap data I want to see the

337
00:13:00,300 --> 00:13:02,880
context around this alert so I'm going

338
00:13:02,880 --> 00:13:04,920
to left click on the rule name click on

339
00:13:04,920 --> 00:13:07,380
action and click on pcap and that will

340
00:13:07,380 --> 00:13:09,480
give me send me to the pcapp interface

341
00:13:09,480 --> 00:13:12,000
and as you can see from up here we have

342
00:13:12,000 --> 00:13:13,639
a get request

343
00:13:13,639 --> 00:13:16,440
for this comfortable people chowder

344
00:13:16,440 --> 00:13:19,860
right and the IP address is this dotted

345
00:13:19,860 --> 00:13:22,200
quad but look at the Port the femoral

346
00:13:22,200 --> 00:13:25,200
ports uh or the ports 443 which is kind

347
00:13:25,200 --> 00:13:27,660
of interesting so I know if I see 443

348
00:13:27,660 --> 00:13:29,579
traffic I'm usually thinking uh it's

349
00:13:29,579 --> 00:13:31,079
probably encrypted right if it's

350
00:13:31,079 --> 00:13:32,760
encrypted data I wouldn't be able to see

351
00:13:32,760 --> 00:13:35,160
this uh this content right so it looks

352
00:13:35,160 --> 00:13:38,160
like we have a elf file or a Linux

353
00:13:38,160 --> 00:13:41,100
executable file being downloaded by our

354
00:13:41,100 --> 00:13:43,079
client now that in itself is not

355
00:13:43,079 --> 00:13:45,899
necessarily bad so whenever I see a file

356
00:13:45,899 --> 00:13:47,940
being downloaded I like to ask really

357
00:13:47,940 --> 00:13:50,639
three questions question number one is

358
00:13:50,639 --> 00:13:52,980
is that file malicious question number

359
00:13:52,980 --> 00:13:55,680
two is what application actually is

360
00:13:55,680 --> 00:13:57,720
responsible for downloading that and

361
00:13:57,720 --> 00:13:59,820
question number three is was that

362
00:13:59,820 --> 00:14:02,639
executable file actually launched on my

363
00:14:02,639 --> 00:14:05,100
network right if I download a bad file

364
00:14:05,100 --> 00:14:06,839
and Antivirus picks it up and gets rid

365
00:14:06,839 --> 00:14:08,700
of it it's not really a huge deal right

366
00:14:08,700 --> 00:14:11,760
I want to make sure is it bad a web

367
00:14:11,760 --> 00:14:13,800
application downloaded it and did it

368
00:14:13,800 --> 00:14:17,160
actually execute um on my host and so to

369
00:14:17,160 --> 00:14:18,720
answer the first question about whether

370
00:14:18,720 --> 00:14:21,420
or not the file is good or bad one way

371
00:14:21,420 --> 00:14:24,120
we can do that is through the use of the

372
00:14:24,120 --> 00:14:26,700
md5 hash right so I can go to our trusty

373
00:14:26,700 --> 00:14:29,399
virus total look up that hash and see if

374
00:14:29,399 --> 00:14:31,800
virustotal has seen it so

375
00:14:31,800 --> 00:14:34,500
I'm not my alerts interface and what I

376
00:14:34,500 --> 00:14:37,380
need to do is I need to go ahead and get

377
00:14:37,380 --> 00:14:39,899
to my md5 fashion now I could download

378
00:14:39,899 --> 00:14:41,880
the pcap and I could carve out the

379
00:14:41,880 --> 00:14:43,860
executable file and I can generate the

380
00:14:43,860 --> 00:14:46,620
hash if I wanted to but we know that

381
00:14:46,620 --> 00:14:49,019
Zeke is already carving out or

382
00:14:49,019 --> 00:14:52,139
generating the md5 hash for all files

383
00:14:52,139 --> 00:14:54,660
that it sees in clear text right so it's

384
00:14:54,660 --> 00:14:56,279
already doing that for me so all I need

385
00:14:56,279 --> 00:14:58,620
to do is figure out how in the world do

386
00:14:58,620 --> 00:15:01,680
I get from this view to my Zeke file log

387
00:15:01,680 --> 00:15:04,320
right so what you can do is we can left

388
00:15:04,320 --> 00:15:06,360
click on any of these fields

389
00:15:06,360 --> 00:15:09,360
and I click on actions and correlate now

390
00:15:09,360 --> 00:15:10,740
what that's going to do is that's going

391
00:15:10,740 --> 00:15:13,440
to scan that log and it's going to send

392
00:15:13,440 --> 00:15:16,019
me to the interface with the unique

393
00:15:16,019 --> 00:15:18,720
identifier of that log and the network

394
00:15:18,720 --> 00:15:21,300
Community ID applied now if you have not

395
00:15:21,300 --> 00:15:23,579
heard of a network Community ID it's a

396
00:15:23,579 --> 00:15:26,160
base64 representation of the child one

397
00:15:26,160 --> 00:15:27,959
hash of the five Tuple of a session

398
00:15:27,959 --> 00:15:30,180
right so say that a bunch of times fast

399
00:15:30,180 --> 00:15:32,279
right so what it basically does is it

400
00:15:32,279 --> 00:15:34,620
takes that Source IP import and protocol

401
00:15:34,620 --> 00:15:36,959
and it can candidates it together takes

402
00:15:36,959 --> 00:15:38,820
a shot button hash and then it takes the

403
00:15:38,820 --> 00:15:40,740
base64 representation so it's a little

404
00:15:40,740 --> 00:15:42,600
bit smaller so this is the

405
00:15:42,600 --> 00:15:45,000
representation of that session and as

406
00:15:45,000 --> 00:15:46,740
you can see here I have three different

407
00:15:46,740 --> 00:15:49,620
modules or applications that are that

408
00:15:49,620 --> 00:15:52,440
saw either the unique identifier or the

409
00:15:52,440 --> 00:15:54,420
network Community ID so you can see I

410
00:15:54,420 --> 00:15:57,420
have two cerakata alerts I have two Zeke

411
00:15:57,420 --> 00:16:00,360
alerts and have one system unlock now

412
00:16:00,360 --> 00:16:02,100
what I want to do is I want to get you

413
00:16:02,100 --> 00:16:03,779
the Zeke file log now you can see here

414
00:16:03,779 --> 00:16:05,880
the Zeke file log doesn't exist the

415
00:16:05,880 --> 00:16:08,160
reason why it doesn't exist is the Zeke

416
00:16:08,160 --> 00:16:09,480
file log doesn't have any port

417
00:16:09,480 --> 00:16:11,459
information and therefore it cannot

418
00:16:11,459 --> 00:16:14,220
compute the network Community ID so what

419
00:16:14,220 --> 00:16:16,980
I need to do is I need to hunt on a

420
00:16:16,980 --> 00:16:19,320
z-clog and or I need to correlate on a

421
00:16:19,320 --> 00:16:21,420
z-clock I'm sorry so what I'm going to

422
00:16:21,420 --> 00:16:22,860
do is I'm going to left click on the

423
00:16:22,860 --> 00:16:25,019
event.module for Zeke and click on

424
00:16:25,019 --> 00:16:26,880
include that's just going to apply a

425
00:16:26,880 --> 00:16:28,560
filter up here at the top to show me

426
00:16:28,560 --> 00:16:31,380
only Zeke Logs with that information and

427
00:16:31,380 --> 00:16:32,519
then I'm going to come down here I'm

428
00:16:32,519 --> 00:16:34,199
going to pick any of these logs left

429
00:16:34,199 --> 00:16:36,600
click click on action

430
00:16:36,600 --> 00:16:39,660
and correlate now you can see I have my

431
00:16:39,660 --> 00:16:42,600
my Zeke file log as well right so I can

432
00:16:42,600 --> 00:16:44,759
left click on my Zeke file log click on

433
00:16:44,759 --> 00:16:45,839
include

434
00:16:45,839 --> 00:16:47,940
as you can see here your event table has

435
00:16:47,940 --> 00:16:49,800
updated to include some useful

436
00:16:49,800 --> 00:16:52,019
information what I want to do is I want

437
00:16:52,019 --> 00:16:54,240
to look and see inside of the Zeke file

438
00:16:54,240 --> 00:16:57,600
log uh where is the md5 hash so I can

439
00:16:57,600 --> 00:17:00,000
hunt so I can compare it to virustotal

440
00:17:00,000 --> 00:17:02,040
so as I scroll down here the first thing

441
00:17:02,040 --> 00:17:04,199
I want to do is take a look at the file

442
00:17:04,199 --> 00:17:06,299
byte scene and the file bytes total to

443
00:17:06,299 --> 00:17:07,919
make sure those are the same if those

444
00:17:07,919 --> 00:17:09,900
numbers are not the same that means that

445
00:17:09,900 --> 00:17:12,299
Zeke did not see the entire file and

446
00:17:12,299 --> 00:17:14,459
therefore the md5 hash of that that Zeke

447
00:17:14,459 --> 00:17:16,500
is generating is not correct right so

448
00:17:16,500 --> 00:17:18,660
because they are the same I could come

449
00:17:18,660 --> 00:17:21,540
down here to this md5 hash and I can do

450
00:17:21,540 --> 00:17:24,740
left click click on virus total

451
00:17:24,740 --> 00:17:28,079
no matches it must be good right if it's

452
00:17:28,079 --> 00:17:30,120
not red it's good right

453
00:17:30,120 --> 00:17:31,559
um so you know I get asked this

454
00:17:31,559 --> 00:17:33,480
sometimes like you know how many how

455
00:17:33,480 --> 00:17:36,419
many Reds do you need before it's bad if

456
00:17:36,419 --> 00:17:38,880
any show up it's bad right

457
00:17:38,880 --> 00:17:41,160
um but if nothing shows up it's not good

458
00:17:41,160 --> 00:17:42,840
right the opposite of bad is not

459
00:17:42,840 --> 00:17:44,880
necessarily good so um it's telling me

460
00:17:44,880 --> 00:17:46,500
virus holders never see in this file

461
00:17:46,500 --> 00:17:48,660
ever or I've never seen this file ever

462
00:17:48,660 --> 00:17:51,419
so what I need to do is I need to go

463
00:17:51,419 --> 00:17:54,480
ahead and get some more context so I

464
00:17:54,480 --> 00:17:56,160
don't know if the files the file is bad

465
00:17:56,160 --> 00:17:58,980
but maybe I can see what application on

466
00:17:58,980 --> 00:18:00,900
my host is responsible for downloading

467
00:18:00,900 --> 00:18:02,520
it so what I'm going to do is I'm going

468
00:18:02,520 --> 00:18:05,039
to go back to my hunt interface

469
00:18:05,039 --> 00:18:06,720
and I'm going to go ahead and get rid of

470
00:18:06,720 --> 00:18:10,080
the file data set so now I have my my

471
00:18:10,080 --> 00:18:12,120
system on network connection right and

472
00:18:12,120 --> 00:18:15,720
so in Linux whenever a an application

473
00:18:15,720 --> 00:18:17,280
what's this about enabled when the

474
00:18:17,280 --> 00:18:19,620
application goes out to the internet

475
00:18:19,620 --> 00:18:21,660
um our system mod for Linux is going to

476
00:18:21,660 --> 00:18:23,880
generate a network connection log now

477
00:18:23,880 --> 00:18:25,799
one of the things that we've done is

478
00:18:25,799 --> 00:18:28,740
we've gone ahead and whitelisted what we

479
00:18:28,740 --> 00:18:30,299
call low bins or living off the land

480
00:18:30,299 --> 00:18:32,039
binaries so I don't want a network

481
00:18:32,039 --> 00:18:35,039
connection log for every single time

482
00:18:35,039 --> 00:18:36,600
um you know Firefox goes to the internet

483
00:18:36,600 --> 00:18:38,160
I don't want to see all of those

484
00:18:38,160 --> 00:18:39,780
connections I only want to see

485
00:18:39,780 --> 00:18:42,480
connections that are um maybe like

486
00:18:42,480 --> 00:18:45,240
secondary secondary methods to go

487
00:18:45,240 --> 00:18:46,980
download data right we call them low

488
00:18:46,980 --> 00:18:49,799
bins living off the lens binary so if I

489
00:18:49,799 --> 00:18:51,179
go over here and I take a look at my

490
00:18:51,179 --> 00:18:53,400
system my network connection log click

491
00:18:53,400 --> 00:18:55,440
on include one of the things that it

492
00:18:55,440 --> 00:18:56,880
provides me

493
00:18:56,880 --> 00:19:00,720
is it provides me with my

494
00:19:00,720 --> 00:19:04,880
keep on going keep on going

495
00:19:05,280 --> 00:19:08,880
past it my process executable

496
00:19:08,880 --> 00:19:13,140
so it says that uh GDB my gnome debugger

497
00:19:13,140 --> 00:19:15,480
right was responsible for generating

498
00:19:15,480 --> 00:19:17,700
this connection now now I can say well

499
00:19:17,700 --> 00:19:20,460
what other things besides

500
00:19:20,460 --> 00:19:23,580
um going out to the internet did uh this

501
00:19:23,580 --> 00:19:25,080
process do so what I'm going to do is

502
00:19:25,080 --> 00:19:26,940
I'm going to left click on the PID and

503
00:19:26,940 --> 00:19:28,620
I'm going to go ahead and click on only

504
00:19:28,620 --> 00:19:30,600
and what that's going to do is it's

505
00:19:30,600 --> 00:19:32,580
going to populate this I have it go to

506
00:19:32,580 --> 00:19:35,700
new uh new tab it's going to go ahead

507
00:19:35,700 --> 00:19:38,160
and put that PID up here in the

508
00:19:38,160 --> 00:19:40,500
um the query bar and as you can see I

509
00:19:40,500 --> 00:19:41,520
have some Playbook plays we'll talk

510
00:19:41,520 --> 00:19:44,760
about later I have 22 file creates two

511
00:19:44,760 --> 00:19:46,320
process create one network connection

512
00:19:46,320 --> 00:19:50,520
all associated with that PID so what I

513
00:19:50,520 --> 00:19:52,200
want to do is figure out well why in the

514
00:19:52,200 --> 00:19:54,780
world did my did my debugger go out to

515
00:19:54,780 --> 00:19:56,880
the internet and request this file like

516
00:19:56,880 --> 00:19:59,160
what caused it to do that right so what

517
00:19:59,160 --> 00:20:01,440
I need to focus on is the parent

518
00:20:01,440 --> 00:20:03,419
processor the parent pin well

519
00:20:03,419 --> 00:20:05,460
application is causing this application

520
00:20:05,460 --> 00:20:08,460
to go out and download this file from a

521
00:20:08,460 --> 00:20:11,760
dotted quad host with a weird Port why

522
00:20:11,760 --> 00:20:13,980
is that activity actually happening so

523
00:20:13,980 --> 00:20:15,600
I'm going to go ahead and click on the

524
00:20:15,600 --> 00:20:18,360
process creation click on include

525
00:20:18,360 --> 00:20:21,780
and if I open this first log up

526
00:20:21,780 --> 00:20:24,000
and come down here under the the parent

527
00:20:24,000 --> 00:20:26,460
process executable I can see that I have

528
00:20:26,460 --> 00:20:29,039
a bash terminal that is that sent this

529
00:20:29,039 --> 00:20:31,500
Command right that ran this command to

530
00:20:31,500 --> 00:20:33,539
go out to the internet and so you can

531
00:20:33,539 --> 00:20:35,580
see I have the the gnu debugger and

532
00:20:35,580 --> 00:20:37,380
we're saying go ahead and execute this

533
00:20:37,380 --> 00:20:38,760
python I'm going to import a couple

534
00:20:38,760 --> 00:20:41,640
modules and then what I want to do is go

535
00:20:41,640 --> 00:20:45,360
ahead and download this file right from

536
00:20:45,360 --> 00:20:46,799
the internet and I want you to write it

537
00:20:46,799 --> 00:20:50,460
as dot system dot system y'all see that

538
00:20:50,460 --> 00:20:52,860
good I can zoom in a little bit

539
00:20:52,860 --> 00:20:55,620
uh go ahead and save it as dot system I

540
00:20:55,620 --> 00:20:56,820
figured I'd name it something kind of

541
00:20:56,820 --> 00:20:58,860
close to what it should look like

542
00:20:58,860 --> 00:21:01,380
um so we have dot system so if I want to

543
00:21:01,380 --> 00:21:04,500
see well what else besides besides going

544
00:21:04,500 --> 00:21:06,780
out and telling uh GDB to go download

545
00:21:06,780 --> 00:21:08,820
this file what else did that bash

546
00:21:08,820 --> 00:21:11,039
terminal do right I want to know that so

547
00:21:11,039 --> 00:21:12,120
what I'm going to do is I'm going to go

548
00:21:12,120 --> 00:21:14,160
to that parent PID and I'm going to go

549
00:21:14,160 --> 00:21:15,720
ahead and do left click and click on

550
00:21:15,720 --> 00:21:17,880
only again that's going to send me to

551
00:21:17,880 --> 00:21:19,980
the hunt interface with that parent

552
00:21:19,980 --> 00:21:22,620
process ID applied and if I come down

553
00:21:22,620 --> 00:21:24,720
here and take a look

554
00:21:24,720 --> 00:21:27,059
you can see that I have a couple things

555
00:21:27,059 --> 00:21:30,780
I have a picture my time stamps are good

556
00:21:30,780 --> 00:21:33,720
um I have my bin dap bash

557
00:21:33,720 --> 00:21:36,600
um hitting this install.sh script

558
00:21:36,600 --> 00:21:40,559
and then I have my GDB

559
00:21:40,559 --> 00:21:42,179
um being going out to the internet and

560
00:21:42,179 --> 00:21:45,780
then I see the chmod dot X of systemd so

561
00:21:45,780 --> 00:21:48,179
that's just giving it ability to execute

562
00:21:48,179 --> 00:21:49,620
a file now you're going to say how in

563
00:21:49,620 --> 00:21:51,960
the world did I get here right and so

564
00:21:51,960 --> 00:21:53,760
one of the things I wanted for the

565
00:21:53,760 --> 00:21:55,260
scenario

566
00:21:55,260 --> 00:21:56,760
um and I know probably not the only

567
00:21:56,760 --> 00:21:58,620
person who's done this before but who

568
00:21:58,620 --> 00:22:00,000
here has ever

569
00:22:00,000 --> 00:22:01,679
um you know had a problem that you

570
00:22:01,679 --> 00:22:04,200
wanted to solve in in Linux and you

571
00:22:04,200 --> 00:22:06,960
Googled it a GitHub repo came up and you

572
00:22:06,960 --> 00:22:08,280
just doubt you just cloned the GitHub

573
00:22:08,280 --> 00:22:10,860
repo and just did what it said right go

574
00:22:10,860 --> 00:22:12,720
ahead and do this do that do this do

575
00:22:12,720 --> 00:22:15,179
that and it works right no one else does

576
00:22:15,179 --> 00:22:17,700
that but me right and so by the way when

577
00:22:17,700 --> 00:22:19,080
you want to install system on for Linux

578
00:22:19,080 --> 00:22:21,419
just go to my GitHub repo and just copy

579
00:22:21,419 --> 00:22:23,940
and paste everything in there and so

580
00:22:23,940 --> 00:22:26,280
what what the it what the uh the

581
00:22:26,280 --> 00:22:28,679
sysadmin did was he just went to

582
00:22:28,679 --> 00:22:30,659
um a program and did it and if you look

583
00:22:30,659 --> 00:22:32,820
at the current working directory

584
00:22:32,820 --> 00:22:34,320
you can see the current working

585
00:22:34,320 --> 00:22:37,500
directory is um some cool script running

586
00:22:37,500 --> 00:22:39,240
in desktop so

587
00:22:39,240 --> 00:22:42,360
um it looks like bash have launched an

588
00:22:42,360 --> 00:22:44,059
executable file called

589
00:22:44,059 --> 00:22:47,640
install.sh inside of this directory on

590
00:22:47,640 --> 00:22:51,480
the uh on the the the server all right

591
00:22:51,480 --> 00:22:54,539
so we have a bash terminal

592
00:22:54,539 --> 00:22:57,780
um we have bash calling my install the

593
00:22:57,780 --> 00:23:00,120
sh did it going out to the internet and

594
00:23:00,120 --> 00:23:01,320
then it's going ahead and give

595
00:23:01,320 --> 00:23:03,360
permissions now from here one of the

596
00:23:03,360 --> 00:23:05,100
challenges is

597
00:23:05,100 --> 00:23:07,919
um I can't tell whether or not that

598
00:23:07,919 --> 00:23:11,520
system deed actually initiated from this

599
00:23:11,520 --> 00:23:14,159
process so what I need to do is I will

600
00:23:14,159 --> 00:23:16,620
need to do one of two things I can

601
00:23:16,620 --> 00:23:17,659
either

602
00:23:17,659 --> 00:23:20,159
query this is cool if you have OS query

603
00:23:20,159 --> 00:23:22,919
installed you can query OS query and say

604
00:23:22,919 --> 00:23:26,520
Hey I want you to look and see if

605
00:23:26,520 --> 00:23:29,220
there's a process that's running that

606
00:23:29,220 --> 00:23:32,400
has a certain md5 hash

607
00:23:32,400 --> 00:23:34,620
right so you could say is there a

608
00:23:34,620 --> 00:23:37,140
process running on this system that has

609
00:23:37,140 --> 00:23:40,799
this hash and so I have that query up

610
00:23:40,799 --> 00:23:44,220
here of an OS query it's really complex

611
00:23:44,220 --> 00:23:45,480
so I'm not going to try to explain what

612
00:23:45,480 --> 00:23:47,340
it's doing but essentially we're joining

613
00:23:47,340 --> 00:23:49,500
a whole bunch of tables together and I'm

614
00:23:49,500 --> 00:23:51,059
going to put this on my GitHub but if

615
00:23:51,059 --> 00:23:53,280
you drop the md5 hash in that where it

616
00:23:53,280 --> 00:23:56,100
says where H dot md5 is if you put your

617
00:23:56,100 --> 00:23:58,380
hash OS query will search all of the

618
00:23:58,380 --> 00:24:00,900
running processes and see is there a

619
00:24:00,900 --> 00:24:03,840
process with this md5 hash running and

620
00:24:03,840 --> 00:24:06,059
so my third question was you know is

621
00:24:06,059 --> 00:24:08,340
this process did it get executed if the

622
00:24:08,340 --> 00:24:10,080
process is still running and I hit that

623
00:24:10,080 --> 00:24:13,260
with OS query it'll tell me the PID for

624
00:24:13,260 --> 00:24:15,659
that process so it's pretty awesome way

625
00:24:15,659 --> 00:24:17,640
of doing it now I'm not running it right

626
00:24:17,640 --> 00:24:19,320
now so I'm not going to run the query

627
00:24:19,320 --> 00:24:21,480
because it won't work but what I could

628
00:24:21,480 --> 00:24:24,240
do if you didn't have OS query is I

629
00:24:24,240 --> 00:24:26,659
could just go ahead and hunt

630
00:24:26,659 --> 00:24:30,780
for this system deed so I'm going to go

631
00:24:30,780 --> 00:24:33,120
ahead and copy this

632
00:24:33,120 --> 00:24:35,760
I'm going to go up to my my hunt query

633
00:24:35,760 --> 00:24:39,539
and I'm going to say process

634
00:24:39,539 --> 00:24:42,440
executable

635
00:24:45,720 --> 00:24:48,299
and I'm going to go and say asterisk

636
00:24:48,299 --> 00:24:50,460
system deed

637
00:24:50,460 --> 00:24:52,260
and you can see that I have a system on

638
00:24:52,260 --> 00:24:54,480
process creation for that log which is

639
00:24:54,480 --> 00:24:57,659
telling me that sysmon on Linux said hey

640
00:24:57,659 --> 00:25:00,539
I saw this process actually get executed

641
00:25:00,539 --> 00:25:03,480
and as you can see here on our on our

642
00:25:03,480 --> 00:25:05,580
events table we have the process command

643
00:25:05,580 --> 00:25:07,500
line that was red we have the process

644
00:25:07,500 --> 00:25:10,500
PID the actual pit of the process what

645
00:25:10,500 --> 00:25:12,740
executed it in this case it's system D

646
00:25:12,740 --> 00:25:16,020
and then the working directory so if I

647
00:25:16,020 --> 00:25:18,120
want to see well what did systemd do

648
00:25:18,120 --> 00:25:20,640
after system to do after it got launched

649
00:25:20,640 --> 00:25:23,159
I could left click on this PID and click

650
00:25:23,159 --> 00:25:25,620
on only again it sends me to the hunt

651
00:25:25,620 --> 00:25:28,140
interface with that query now I can see

652
00:25:28,140 --> 00:25:29,520
I have

653
00:25:29,520 --> 00:25:32,400
um systemd spun up a bash terminal

654
00:25:32,400 --> 00:25:34,260
another bash terminal so if I want to

655
00:25:34,260 --> 00:25:36,659
see what this bash terminal did I left

656
00:25:36,659 --> 00:25:39,720
click on this click on only

657
00:25:39,720 --> 00:25:41,700
and now I have a whole bunch of cool

658
00:25:41,700 --> 00:25:43,799
things that's happening I'm going to go

659
00:25:43,799 --> 00:25:45,720
ahead and get rid of Playbook that's

660
00:25:45,720 --> 00:25:47,460
going to come later

661
00:25:47,460 --> 00:25:48,000
um

662
00:25:48,000 --> 00:25:49,860
so if I come here and take a look now I

663
00:25:49,860 --> 00:25:52,320
can see all the things that

664
00:25:52,320 --> 00:25:55,380
um my malware actually did right it ran

665
00:25:55,380 --> 00:25:58,080
this groups in this less pipe and Bash

666
00:25:58,080 --> 00:26:00,299
and all this stuff right here gets

667
00:26:00,299 --> 00:26:01,679
generated as soon as you get a bash

668
00:26:01,679 --> 00:26:03,240
terminal those are all the things that

669
00:26:03,240 --> 00:26:05,039
happens after they got a bash terminal

670
00:26:05,039 --> 00:26:09,120
it ran who am I right PS exec IPA the SS

671
00:26:09,120 --> 00:26:11,220
that's the same thing as netstat right

672
00:26:11,220 --> 00:26:12,900
but nest out it's like a wrapper for it

673
00:26:12,900 --> 00:26:15,360
so I just went right to the binary and

674
00:26:15,360 --> 00:26:18,120
then I see this right here I see a user

675
00:26:18,120 --> 00:26:22,980
bin Pearl uh user bin LW downloads right

676
00:26:22,980 --> 00:26:26,400
it looks like I have an IP address for

677
00:26:26,400 --> 00:26:29,460
um 230 and this mimipingwins.sh I'm

678
00:26:29,460 --> 00:26:31,380
saving this file to this dot Mimi

679
00:26:31,380 --> 00:26:34,380
penguins.sh so it looks like I it went

680
00:26:34,380 --> 00:26:36,059
to the internet and downloaded this file

681
00:26:36,059 --> 00:26:39,000
now if I wanted to see this file

682
00:26:39,000 --> 00:26:41,100
um what I could do is I could go ahead

683
00:26:41,100 --> 00:26:43,200
and try to Pivot to my network data

684
00:26:43,200 --> 00:26:44,880
right I should be able to Pivot to my

685
00:26:44,880 --> 00:26:46,740
network data and see the network data

686
00:26:46,740 --> 00:26:49,320
associated with this connection right so

687
00:26:49,320 --> 00:26:51,059
in order for me to do that what I need

688
00:26:51,059 --> 00:26:54,419
to do is I need to go to the PID for for

689
00:26:54,419 --> 00:26:57,299
this for this executable I'm going to do

690
00:26:57,299 --> 00:26:59,580
left click and click on only

691
00:26:59,580 --> 00:27:00,960
again that's going to send me to the

692
00:27:00,960 --> 00:27:03,360
interface with that paid applied now if

693
00:27:03,360 --> 00:27:05,220
I come down here you can see I have my

694
00:27:05,220 --> 00:27:07,260
system on network connection now the

695
00:27:07,260 --> 00:27:09,059
reason why this fired again is because

696
00:27:09,059 --> 00:27:11,039
this is one of those living off the land

697
00:27:11,039 --> 00:27:13,559
binaries the adversaries can use to

698
00:27:13,559 --> 00:27:15,240
download additional con download

699
00:27:15,240 --> 00:27:17,220
additional payloads so I'm going to go

700
00:27:17,220 --> 00:27:18,480
ahead and left click on network

701
00:27:18,480 --> 00:27:20,520
connection

702
00:27:20,520 --> 00:27:22,200
and you can see I have my IP address

703
00:27:22,200 --> 00:27:24,000
information here now if I want to get to

704
00:27:24,000 --> 00:27:26,460
my network data from my host data what I

705
00:27:26,460 --> 00:27:28,200
need to do is I just need to correlate

706
00:27:28,200 --> 00:27:30,539
on a network connection log so if I go

707
00:27:30,539 --> 00:27:32,820
ahead and click on this destination IP

708
00:27:32,820 --> 00:27:35,279
click on actions and correlate it's

709
00:27:35,279 --> 00:27:37,140
going to go ahead and send me to the

710
00:27:37,140 --> 00:27:39,600
interface with my network Community ID

711
00:27:39,600 --> 00:27:42,179
applied and now you can see I have Zeke

712
00:27:42,179 --> 00:27:45,480
logs associated with that um process

713
00:27:45,480 --> 00:27:46,919
that went up to the Internet to download

714
00:27:46,919 --> 00:27:50,159
the file so if I left click on we'll do

715
00:27:50,159 --> 00:27:52,620
HTTP I should be able to come down here

716
00:27:52,620 --> 00:27:56,159
open it up and go to pcapp and view the

717
00:27:56,159 --> 00:27:59,279
pcap associated with that that process

718
00:27:59,279 --> 00:28:01,260
right so now you can see I have a get

719
00:28:01,260 --> 00:28:04,559
request for mimipingwiz.sh and I have

720
00:28:04,559 --> 00:28:05,820
the user agent

721
00:28:05,820 --> 00:28:07,799
and then I have the actual payload

722
00:28:07,799 --> 00:28:09,779
itself that was downloaded all right so

723
00:28:09,779 --> 00:28:12,000
now I can go through the actual file say

724
00:28:12,000 --> 00:28:14,220
well what is mimipingwins.sh actually

725
00:28:14,220 --> 00:28:16,799
doing is this what I want um to happen

726
00:28:16,799 --> 00:28:19,020
on my network and so what Mimi Penguins

727
00:28:19,020 --> 00:28:20,760
does is again it's very much like MiMi

728
00:28:20,760 --> 00:28:23,220
cats it'll go ahead and dump a bunch of

729
00:28:23,220 --> 00:28:25,620
proc memory and it'll it'll grip through

730
00:28:25,620 --> 00:28:27,000
it it'll pull out any clear text

731
00:28:27,000 --> 00:28:28,140
passwords

732
00:28:28,140 --> 00:28:29,580
all right so it's going ahead and doing

733
00:28:29,580 --> 00:28:31,799
some credential Gathering

734
00:28:31,799 --> 00:28:34,620
after that we have

735
00:28:34,620 --> 00:28:37,380
um our bash terminal uh you know he's

736
00:28:37,380 --> 00:28:38,880
downloaded the file he made it

737
00:28:38,880 --> 00:28:41,159
executable he went ahead and executed

738
00:28:41,159 --> 00:28:43,260
the file if I wanted to see everything

739
00:28:43,260 --> 00:28:45,840
on the host that Mimi Penguins actually

740
00:28:45,840 --> 00:28:48,179
did if I left click on this PID and

741
00:28:48,179 --> 00:28:50,520
click on only again it'll send me to the

742
00:28:50,520 --> 00:28:52,919
interface and now I can see all the

743
00:28:52,919 --> 00:28:54,120
activity

744
00:28:54,120 --> 00:28:56,640
um that the um maybe Penguins actually

745
00:28:56,640 --> 00:28:58,799
did and if you take a look at the

746
00:28:58,799 --> 00:29:01,919
process creation you can see it dumping

747
00:29:01,919 --> 00:29:04,740
all of the the memory commands so don't

748
00:29:04,740 --> 00:29:06,059
be all the memory

749
00:29:06,059 --> 00:29:08,700
now so um that's what the Mimi Penguins

750
00:29:08,700 --> 00:29:10,559
did it dumped a bunch of memory one

751
00:29:10,559 --> 00:29:12,240
thing that's kind of cool if I go up

752
00:29:12,240 --> 00:29:14,220
here to the

753
00:29:14,220 --> 00:29:16,500
um get rid of process creation if I look

754
00:29:16,500 --> 00:29:19,740
at the file create I click on include

755
00:29:19,740 --> 00:29:23,820
and I focus on the the Target right here

756
00:29:23,820 --> 00:29:26,480
you can see that um the command actually

757
00:29:26,480 --> 00:29:29,100
uh you know I did a pipe so I ran Mimi

758
00:29:29,100 --> 00:29:31,020
penguins and then I piped it to a

759
00:29:31,020 --> 00:29:33,059
password.txt so right here is telling me

760
00:29:33,059 --> 00:29:34,860
that my credentials not only did he run

761
00:29:34,860 --> 00:29:36,720
it but he took it and he wrote it to a

762
00:29:36,720 --> 00:29:39,179
file called passwords.txt all right so I

763
00:29:39,179 --> 00:29:42,240
was able to see that activity after that

764
00:29:42,240 --> 00:29:43,940
we can see

765
00:29:43,940 --> 00:29:48,299
we have he copied his executable this

766
00:29:48,299 --> 00:29:51,240
dot system to Etsy that he went ahead

767
00:29:51,240 --> 00:29:52,620
and

768
00:29:52,620 --> 00:29:56,460
um them or created a service file so

769
00:29:56,460 --> 00:29:59,460
system system.service and then he

770
00:29:59,460 --> 00:30:01,799
enabled that service and then he went

771
00:30:01,799 --> 00:30:04,620
ahead and added the user trog door with

772
00:30:04,620 --> 00:30:06,840
the password of trogdor and one of the

773
00:30:06,840 --> 00:30:08,399
things you want to do is be able to like

774
00:30:08,399 --> 00:30:11,100
get root access right so I needed to add

775
00:30:11,100 --> 00:30:14,340
trogdor to my pseudoers group and so

776
00:30:14,340 --> 00:30:15,960
what I what I did is like well I could

777
00:30:15,960 --> 00:30:19,020
just put a a file a hidden file dot

778
00:30:19,020 --> 00:30:21,539
accounts inside of the sudoers.directory

779
00:30:21,539 --> 00:30:24,240
and just give it the ability to go to

780
00:30:24,240 --> 00:30:26,940
um to go to go right to root right to

781
00:30:26,940 --> 00:30:29,340
have root access and then after he did

782
00:30:29,340 --> 00:30:31,620
that he went ahead and X filled the data

783
00:30:31,620 --> 00:30:33,779
now one of the things I wanted to do was

784
00:30:33,779 --> 00:30:35,580
like I love doing SCP because it just

785
00:30:35,580 --> 00:30:37,559
sits on Linux right and I can exfield

786
00:30:37,559 --> 00:30:39,179
data without doing anything I don't have

787
00:30:39,179 --> 00:30:41,700
the FTP it right but the problem is is

788
00:30:41,700 --> 00:30:43,320
that you know most Enterprise is going

789
00:30:43,320 --> 00:30:45,779
to block Port 22 going out of the

790
00:30:45,779 --> 00:30:48,600
network right so that's pretty common so

791
00:30:48,600 --> 00:30:50,340
all so I was like how can I get by that

792
00:30:50,340 --> 00:30:53,399
so what I did was just told my server to

793
00:30:53,399 --> 00:30:56,159
listen for SSH at Port 443 and actual

794
00:30:56,159 --> 00:30:58,380
SCP just to send it out that Port all

795
00:30:58,380 --> 00:31:01,140
right go ahead and send it out 4443 and

796
00:31:01,140 --> 00:31:02,820
I'm pretty sure you're not blocking 443

797
00:31:02,820 --> 00:31:04,679
leaving your network

798
00:31:04,679 --> 00:31:06,960
um and go ahead and Expo that data out

799
00:31:06,960 --> 00:31:09,539
right and so if I wanted to see the

800
00:31:09,539 --> 00:31:10,919
network data associated with this

801
00:31:10,919 --> 00:31:13,380
because it's a network connection log I

802
00:31:13,380 --> 00:31:15,840
can left click on the PID

803
00:31:15,840 --> 00:31:19,440
over here I can click on only

804
00:31:19,440 --> 00:31:21,299
and it gets a little tricky and figuring

805
00:31:21,299 --> 00:31:22,740
out which one is that I need to actually

806
00:31:22,740 --> 00:31:24,600
click on it's going to be this one right

807
00:31:24,600 --> 00:31:26,880
here there's lots of scps just like a

808
00:31:26,880 --> 00:31:29,279
wrapper for a bunch of other stuff so if

809
00:31:29,279 --> 00:31:31,919
I go to this process right here and I

810
00:31:31,919 --> 00:31:34,559
click on only

811
00:31:34,559 --> 00:31:38,100
I should see my network connection log

812
00:31:38,100 --> 00:31:40,020
this is where it gets good if I left

813
00:31:40,020 --> 00:31:43,020
click on here and click on axiones and

814
00:31:43,020 --> 00:31:44,760
correlate

815
00:31:44,760 --> 00:31:48,299
now I have my Zeke connection log I need

816
00:31:48,299 --> 00:31:49,980
to get to I want to correlate on a

817
00:31:49,980 --> 00:31:51,960
z-clog so I can get all the logs

818
00:31:51,960 --> 00:31:54,360
associated with this connection so if I

819
00:31:54,360 --> 00:31:56,279
left click on the log click on correlate

820
00:31:56,279 --> 00:31:59,039
now you can see I have my Zeke SSH log

821
00:31:59,039 --> 00:32:01,200
if I left click on this to click on

822
00:32:01,200 --> 00:32:02,240
include

823
00:32:02,240 --> 00:32:05,880
I have my actual SSH log itself right so

824
00:32:05,880 --> 00:32:07,980
now I can go ahead and take a look at

825
00:32:07,980 --> 00:32:09,779
all of the cool things that Z carved out

826
00:32:09,779 --> 00:32:12,779
about that SSH connection right so

827
00:32:12,779 --> 00:32:14,580
that's kind of one of the cool things of

828
00:32:14,580 --> 00:32:17,940
being able to fully integrate the the

829
00:32:17,940 --> 00:32:20,100
host data and the network data right

830
00:32:20,100 --> 00:32:22,200
from an analyst I could tell the whole

831
00:32:22,200 --> 00:32:24,240
story without actually leaving my

832
00:32:24,240 --> 00:32:26,039
terminal right I have to go to the host

833
00:32:26,039 --> 00:32:29,399
and try to figure stuff out so that's

834
00:32:29,399 --> 00:32:31,799
pretty cool right I can I can say with

835
00:32:31,799 --> 00:32:33,120
some confidence that's a malicious

836
00:32:33,120 --> 00:32:35,220
activity actually happened on this host

837
00:32:35,220 --> 00:32:37,500
but the one thing that I'm missing is

838
00:32:37,500 --> 00:32:39,720
all this activity is happening and I've

839
00:32:39,720 --> 00:32:42,299
yet to see uh any command and control

840
00:32:42,299 --> 00:32:44,460
network data right obviously he has

841
00:32:44,460 --> 00:32:46,679
sometimes of connection between my

842
00:32:46,679 --> 00:32:49,620
client and the C2 server so what I want

843
00:32:49,620 --> 00:32:52,440
to do is I want to see can I find the

844
00:32:52,440 --> 00:32:53,880
network data associated with this

845
00:32:53,880 --> 00:32:55,500
connection and so what I'm going to do

846
00:32:55,500 --> 00:32:57,360
is I'm going to go back to the alerts

847
00:32:57,360 --> 00:32:58,919
interface

848
00:32:58,919 --> 00:33:01,980
and I'm going to change it to my file

849
00:33:01,980 --> 00:33:03,600
Tuple View

850
00:33:03,600 --> 00:33:05,520
and I'm going to go ahead and left click

851
00:33:05,520 --> 00:33:08,820
on the IP address here and click on Hunt

852
00:33:08,820 --> 00:33:10,200
actions hunt

853
00:33:10,200 --> 00:33:11,520
let's get this image of the hunt

854
00:33:11,520 --> 00:33:14,580
interface with the IP address applied I

855
00:33:14,580 --> 00:33:16,320
want to look at just the Zeke I have a

856
00:33:16,320 --> 00:33:18,360
whole bunch of Zeke HTTP logs I'll take

857
00:33:18,360 --> 00:33:20,100
a look at those

858
00:33:20,100 --> 00:33:22,320
if I open it up you can see I have a

859
00:33:22,320 --> 00:33:24,240
whole bunch of connections from my

860
00:33:24,240 --> 00:33:27,179
client to this external server on Port

861
00:33:27,179 --> 00:33:29,220
80 right a whole bunch of different

862
00:33:29,220 --> 00:33:32,460
connections and so what I could do is I

863
00:33:32,460 --> 00:33:34,679
could open each of these up right or I

864
00:33:34,679 --> 00:33:36,600
can go to the pcap or I could display

865
00:33:36,600 --> 00:33:38,940
this data inside of dashboards and I

866
00:33:38,940 --> 00:33:40,559
kind of like doing the dashboards a

867
00:33:40,559 --> 00:33:41,880
little bit better because there's like

868
00:33:41,880 --> 00:33:43,740
500 of them right so maybe the

869
00:33:43,740 --> 00:33:45,240
dashboards will give me a little bit

870
00:33:45,240 --> 00:33:46,620
better View

871
00:33:46,620 --> 00:33:48,059
all right so what I'm going to do is I'm

872
00:33:48,059 --> 00:33:50,700
going to go ahead and go to dashboards

873
00:33:50,700 --> 00:33:54,179
and I'm going to look at the HTTP

874
00:33:54,179 --> 00:33:55,500
dashboard

875
00:33:55,500 --> 00:33:57,539
and I'm going to go ahead and dump this

876
00:33:57,539 --> 00:34:00,559
IP address in here

877
00:34:03,659 --> 00:34:07,260
right so now I'm able to see all of the

878
00:34:07,260 --> 00:34:09,480
information uh that happened on there

879
00:34:09,480 --> 00:34:11,699
now because my boss is here I got to

880
00:34:11,699 --> 00:34:13,800
make some colors for him

881
00:34:13,800 --> 00:34:17,300
there you go Doug did this for you buddy

882
00:34:17,300 --> 00:34:20,520
right we got a mix of colors but it

883
00:34:20,520 --> 00:34:22,080
allows you to dig through that data and

884
00:34:22,080 --> 00:34:23,699
see what's happening right what are the

885
00:34:23,699 --> 00:34:25,020
weird connections

886
00:34:25,020 --> 00:34:27,300
um that you're seeing here and so one of

887
00:34:27,300 --> 00:34:30,859
the things I want to show you with um

888
00:34:30,859 --> 00:34:34,080
with sliver it's pretty cool if I left

889
00:34:34,080 --> 00:34:37,500
click out here click on actions and pcap

890
00:34:37,500 --> 00:34:39,300
you can see I have a whole bunch of cool

891
00:34:39,300 --> 00:34:41,580
information you have a post request my

892
00:34:41,580 --> 00:34:45,179
user agents Mozilla Firefox why do

893
00:34:45,179 --> 00:34:47,580
onions make me cry how did that get

894
00:34:47,580 --> 00:34:49,560
there right so the cool thing about

895
00:34:49,560 --> 00:34:51,060
sliver is liver is completely

896
00:34:51,060 --> 00:34:53,219
customizable and so you know one of the

897
00:34:53,219 --> 00:34:54,540
things we like to do is say look at the

898
00:34:54,540 --> 00:34:55,918
user agents you know that's how you can

899
00:34:55,918 --> 00:34:57,480
tell if it's good or bad or I could just

900
00:34:57,480 --> 00:34:59,700
put a good one there right

901
00:34:59,700 --> 00:35:01,680
um and so silver is pretty cool you see

902
00:35:01,680 --> 00:35:04,320
some base64 encoded data here and hexa

903
00:35:04,320 --> 00:35:06,359
and hex data so you think you can decode

904
00:35:06,359 --> 00:35:08,460
it well sliver is pretty cool in the

905
00:35:08,460 --> 00:35:10,440
fact that it it encrypts all the data

906
00:35:10,440 --> 00:35:12,240
and then it encodes it on top of it so

907
00:35:12,240 --> 00:35:14,339
if I go ahead and send this to cyber

908
00:35:14,339 --> 00:35:16,140
Chef like I think I'm going to just

909
00:35:16,140 --> 00:35:18,240
decode it it's just going to be a bunch

910
00:35:18,240 --> 00:35:20,940
of shenanigans so go ahead click on

911
00:35:20,940 --> 00:35:22,560
Cyber chef

912
00:35:22,560 --> 00:35:24,599
what type of encoding is this

913
00:35:24,599 --> 00:35:28,160
who wants to take a whack at it

914
00:35:28,920 --> 00:35:31,560
rhymes with Becks

915
00:35:31,560 --> 00:35:33,300
from hex

916
00:35:33,300 --> 00:35:35,280
um so if you look at here this oh it's

917
00:35:35,280 --> 00:35:37,079
already encoded so they encode encrypted

918
00:35:37,079 --> 00:35:38,880
data I don't know why but that's a

919
00:35:38,880 --> 00:35:41,160
functionality you can have and so

920
00:35:41,160 --> 00:35:44,160
um that's really it for the kind of the

921
00:35:44,160 --> 00:35:46,560
the live demo portion I wanted to show

922
00:35:46,560 --> 00:35:47,579
y'all

923
00:35:47,579 --> 00:35:49,800
um you know kind of the ease that you

924
00:35:49,800 --> 00:35:51,839
can uh the E that you could use to go

925
00:35:51,839 --> 00:35:53,339
find evil

926
00:35:53,339 --> 00:35:55,920
um between Network and host data on on

927
00:35:55,920 --> 00:35:58,619
Linux hosts one thing about sliver is

928
00:35:58,619 --> 00:36:00,960
I've seen like Intel reports that have

929
00:36:00,960 --> 00:36:03,180
sliver as a command and control

930
00:36:03,180 --> 00:36:05,280
infrastructure that adversaries are

931
00:36:05,280 --> 00:36:07,920
using right so if you if you're in an

932
00:36:07,920 --> 00:36:09,540
organization where you do purple teaming

933
00:36:09,540 --> 00:36:11,040
you want to get some kind of like real

934
00:36:11,040 --> 00:36:12,119
life

935
00:36:12,119 --> 00:36:13,619
um action and see like what's happening

936
00:36:13,619 --> 00:36:15,359
in real life and be able to control it

937
00:36:15,359 --> 00:36:18,180
Sliver is a great tool to use because it

938
00:36:18,180 --> 00:36:20,579
is being used out in the wild to

939
00:36:20,579 --> 00:36:23,579
actually compromise hosts

940
00:36:23,579 --> 00:36:25,560
any questions about

941
00:36:25,560 --> 00:36:27,839
um about my demo got a little bit more

942
00:36:27,839 --> 00:36:30,060
slides

943
00:36:30,060 --> 00:36:33,020
up up there

944
00:36:42,300 --> 00:36:45,599
that's a loaded question on the next me

945
00:36:45,599 --> 00:36:47,220
and windows haven't we have an

946
00:36:47,220 --> 00:36:49,140
arrangement I don't like to use it and

947
00:36:49,140 --> 00:36:51,000
it doesn't want me to

948
00:36:51,000 --> 00:36:53,160
um uh I'll tell you how much I I love

949
00:36:53,160 --> 00:36:55,380
Linux when I first started doing cyber

950
00:36:55,380 --> 00:36:57,720
security I know I needed to learn Linux

951
00:36:57,720 --> 00:36:59,640
so I blew out every single Windows

952
00:36:59,640 --> 00:37:02,099
machine on my on my house which I

953
00:37:02,099 --> 00:37:04,020
thought was a good idea until I realized

954
00:37:04,020 --> 00:37:05,820
that my printer didn't have a print

955
00:37:05,820 --> 00:37:07,680
driver at Linux and then I'm trying to

956
00:37:07,680 --> 00:37:08,880
figure out how to write a print driver

957
00:37:08,880 --> 00:37:11,700
so that was an adventure or I could buy

958
00:37:11,700 --> 00:37:13,800
a new printer but that's the easy way

959
00:37:13,800 --> 00:37:15,720
um but yeah I would rather I would much

960
00:37:15,720 --> 00:37:17,180
rather

961
00:37:17,180 --> 00:37:20,400
do work on on Linux machines I will tell

962
00:37:20,400 --> 00:37:24,420
you though Linux versus mod and audit D

963
00:37:24,420 --> 00:37:27,000
um they're and I think Brandon will talk

964
00:37:27,000 --> 00:37:28,320
about this later there's some things

965
00:37:28,320 --> 00:37:30,540
that are missing so looking at just

966
00:37:30,540 --> 00:37:33,060
system on for Windows I can tell a lot

967
00:37:33,060 --> 00:37:35,220
more of a story than using some of the

968
00:37:35,220 --> 00:37:37,200
Linux tools and so

969
00:37:37,200 --> 00:37:38,240
um you know

970
00:37:38,240 --> 00:37:40,140
depends on what you're looking at I

971
00:37:40,140 --> 00:37:42,119
think Windows you can find a lot of

972
00:37:42,119 --> 00:37:43,859
stuff you use the exist one for for

973
00:37:43,859 --> 00:37:45,960
Windows

974
00:37:45,960 --> 00:37:48,599
but I think I still do Linux I'm going

975
00:37:48,599 --> 00:37:51,320
to say any other questions

976
00:38:01,140 --> 00:38:03,599
okay yeah so that's a great question so

977
00:38:03,599 --> 00:38:06,240
the question is you know why I hunted on

978
00:38:06,240 --> 00:38:09,480
it so why would I hunt on a PID instead

979
00:38:09,480 --> 00:38:11,400
of on the name so one of the things

980
00:38:11,400 --> 00:38:13,440
there's a couple reasons first of all if

981
00:38:13,440 --> 00:38:15,900
I had like 50 hosts or I have 50 Linux

982
00:38:15,900 --> 00:38:17,940
servers and I focus on our executable

983
00:38:17,940 --> 00:38:19,859
file name right I could get a lot of

984
00:38:19,859 --> 00:38:21,359
other false positives where this I'm

985
00:38:21,359 --> 00:38:24,180
looking at just a pin and so that's one

986
00:38:24,180 --> 00:38:26,220
of the reasons and another reason is

987
00:38:26,220 --> 00:38:28,200
that you'll see when you look at malware

988
00:38:28,200 --> 00:38:30,359
enough you'll see that you have malware

989
00:38:30,359 --> 00:38:33,119
that calls like itself multiple times

990
00:38:33,119 --> 00:38:34,980
we'll call command prompt a couple of

991
00:38:34,980 --> 00:38:37,859
times it's if you hunt on just the the

992
00:38:37,859 --> 00:38:39,599
name of the executable it's really

993
00:38:39,599 --> 00:38:41,640
difficult to create the timeline of how

994
00:38:41,640 --> 00:38:43,859
things happened where if I use PID and

995
00:38:43,859 --> 00:38:46,320
process or parent paid I can build the

996
00:38:46,320 --> 00:38:48,720
timeline linearly saying this parent

997
00:38:48,720 --> 00:38:51,300
process spawns this process which and

998
00:38:51,300 --> 00:38:53,099
then spawn to this process in this

999
00:38:53,099 --> 00:38:55,500
process so that's why I chose the PID

1000
00:38:55,500 --> 00:38:58,260
over the the name of the executable

1001
00:38:58,260 --> 00:39:01,099
that makes sense

1002
00:39:06,359 --> 00:39:07,500
yeah

1003
00:39:07,500 --> 00:39:10,920
um I only have one IP in here so

1004
00:39:10,920 --> 00:39:12,060
um but yeah you could do that as well

1005
00:39:12,060 --> 00:39:13,619
but that's why I choose the PID because

1006
00:39:13,619 --> 00:39:16,140
I like to go um back and forth and one

1007
00:39:16,140 --> 00:39:18,119
of the reasons why I chose only instead

1008
00:39:18,119 --> 00:39:20,760
of include is if I do include it's going

1009
00:39:20,760 --> 00:39:23,880
to throw the the field and the value up

1010
00:39:23,880 --> 00:39:26,760
there and I want to see everywhere where

1011
00:39:26,760 --> 00:39:29,880
this executable file is the process and

1012
00:39:29,880 --> 00:39:32,220
it's also apparent all right so I want

1013
00:39:32,220 --> 00:39:34,079
to see both that's why I use the only

1014
00:39:34,079 --> 00:39:37,040
any other questions

1015
00:39:49,680 --> 00:39:51,660
um no I have not installed it on like

1016
00:39:51,660 --> 00:39:52,980
hypervisor and things like that I

1017
00:39:52,980 --> 00:39:54,420
installed it on

1018
00:39:54,420 --> 00:39:56,099
um so system for Linux is kind of crazy

1019
00:39:56,099 --> 00:39:58,500
I try to get it on Center West 7 and it

1020
00:39:58,500 --> 00:40:01,320
gave me a big fit uh Ubuntu 18 2004

1021
00:40:01,320 --> 00:40:03,240
it'll work like a champ

1022
00:40:03,240 --> 00:40:05,040
um and so those are the ones I kind of

1023
00:40:05,040 --> 00:40:06,119
focused on

1024
00:40:06,119 --> 00:40:07,619
and I think Brandon may talk a little

1025
00:40:07,619 --> 00:40:09,240
bit about it when he gets there about

1026
00:40:09,240 --> 00:40:11,520
our kind of our struggles that we went

1027
00:40:11,520 --> 00:40:12,540
through

1028
00:40:12,540 --> 00:40:15,079
yep

1029
00:40:18,420 --> 00:40:21,380
with what I'm sorry

1030
00:40:21,660 --> 00:40:24,980
yes yeah we did

1031
00:40:26,339 --> 00:40:28,440
he'll cover that he'll cover that yeah

1032
00:40:28,440 --> 00:40:31,380
yep either system off for Linux I prefer

1033
00:40:31,380 --> 00:40:33,119
it because I'm good with system on for

1034
00:40:33,119 --> 00:40:34,980
Windows and it's like the say it's the

1035
00:40:34,980 --> 00:40:36,900
same to me like configuring it and

1036
00:40:36,900 --> 00:40:39,480
managing it's all the same so

1037
00:40:39,480 --> 00:40:40,920
thank you

1038
00:40:40,920 --> 00:40:43,859
yeah yep and so um one of the things so

1039
00:40:43,859 --> 00:40:46,380
that was really I said you know my I we

1040
00:40:46,380 --> 00:40:48,000
we started out with the question can we

1041
00:40:48,000 --> 00:40:49,859
actually find evil uh the second thing

1042
00:40:49,859 --> 00:40:51,599
is can I build detections off of it

1043
00:40:51,599 --> 00:40:54,000
right can I build a playbook play that

1044
00:40:54,000 --> 00:40:56,160
will alert me on this activity and so if

1045
00:40:56,160 --> 00:40:59,040
I go to my alerts interface

1046
00:40:59,040 --> 00:41:01,020
what I did was I went ahead we

1047
00:41:01,020 --> 00:41:04,380
downloaded all of the Linux Sigma rules

1048
00:41:04,380 --> 00:41:08,339
that were on uh Sigma HQ and I went

1049
00:41:08,339 --> 00:41:10,440
ahead and acknowledged all these so they

1050
00:41:10,440 --> 00:41:12,359
were distracting y'all

1051
00:41:12,359 --> 00:41:15,000
um you could not hear you can see I have

1052
00:41:15,000 --> 00:41:17,339
um four four Playbook plays I wrote I

1053
00:41:17,339 --> 00:41:19,020
was able to build plays that look for

1054
00:41:19,020 --> 00:41:21,540
this this activity and I was also able

1055
00:41:21,540 --> 00:41:23,700
to write a Yara signature that looked

1056
00:41:23,700 --> 00:41:25,800
for that sliver C2 implant

1057
00:41:25,800 --> 00:41:27,540
all right and so we were able to

1058
00:41:27,540 --> 00:41:29,640
actually build detections uh and then

1059
00:41:29,640 --> 00:41:31,320
modify Security on the back end to

1060
00:41:31,320 --> 00:41:33,240
trigger these alerts and all of the Yara

1061
00:41:33,240 --> 00:41:34,740
rules and Playbook plays are all on the

1062
00:41:34,740 --> 00:41:39,259
GitHub if you all want to use that

1063
00:41:39,599 --> 00:41:43,339
all right anything else about the demo

1064
00:41:46,200 --> 00:41:47,280
all right

1065
00:41:47,280 --> 00:41:49,079
Brandon's turn

1066
00:41:49,079 --> 00:41:51,119
I guess uh we'll give Brian a chance to

1067
00:41:51,119 --> 00:41:52,740
breathe here he's uh pretty fast and

1068
00:41:52,740 --> 00:41:54,540
furious uh when he's given some

1069
00:41:54,540 --> 00:41:56,880
instruction lots of practice

1070
00:41:56,880 --> 00:41:59,400
um so I first wanted to talk about this

1071
00:41:59,400 --> 00:42:03,140
this slide here get the clicker

1072
00:42:03,480 --> 00:42:05,700
um it's a busy slide but really the

1073
00:42:05,700 --> 00:42:08,579
takeaway here is yes we did we did um

1074
00:42:08,579 --> 00:42:11,000
analyze the data set with all three

1075
00:42:11,000 --> 00:42:14,760
applications and generally they did the

1076
00:42:14,760 --> 00:42:16,980
same thing right so Brian's question of

1077
00:42:16,980 --> 00:42:18,660
can we detect it right

1078
00:42:18,660 --> 00:42:19,320
um

1079
00:42:19,320 --> 00:42:22,020
they can all detect it however um we we

1080
00:42:22,020 --> 00:42:25,440
ran it with the default rule sets it

1081
00:42:25,440 --> 00:42:27,000
didn't find much we had very limited

1082
00:42:27,000 --> 00:42:31,579
visibility when it came to uh

1083
00:42:31,920 --> 00:42:35,099
sorry came to detecting the malicious

1084
00:42:35,099 --> 00:42:37,560
activity with with just the default rule

1085
00:42:37,560 --> 00:42:39,980
sets

1086
00:42:41,520 --> 00:42:43,859
uh so here's a quick little uh pros and

1087
00:42:43,859 --> 00:42:46,260
cons for each one how many in this room

1088
00:42:46,260 --> 00:42:48,720
are familiar with Laurel or the Laurel

1089
00:42:48,720 --> 00:42:49,980
project

1090
00:42:49,980 --> 00:42:52,200
so Laurel uh real quick is is

1091
00:42:52,200 --> 00:42:54,900
essentially it's a

1092
00:42:54,900 --> 00:42:55,800
um

1093
00:42:55,800 --> 00:42:58,200
it's an application that rides on top of

1094
00:42:58,200 --> 00:43:00,900
uh the audit D it's a plug-in for audit

1095
00:43:00,900 --> 00:43:03,780
D and so it doesn't require that much

1096
00:43:03,780 --> 00:43:05,520
additional processing it just reads the

1097
00:43:05,520 --> 00:43:08,280
logs compiles them translates them and

1098
00:43:08,280 --> 00:43:11,819
then outputs it into uh Json so much

1099
00:43:11,819 --> 00:43:14,760
more easier much easier to be ingested

1100
00:43:14,760 --> 00:43:17,460
by your seam

1101
00:43:17,460 --> 00:43:18,660
um

1102
00:43:18,660 --> 00:43:22,200
so like Brian said CIS mod for Linux um

1103
00:43:22,200 --> 00:43:24,060
you know these are the pros and cons

1104
00:43:24,060 --> 00:43:25,500
that we found

1105
00:43:25,500 --> 00:43:29,400
um very uh a robust data set um however

1106
00:43:29,400 --> 00:43:31,980
it's still a work in progress so

1107
00:43:31,980 --> 00:43:33,599
um the developer I think most of the

1108
00:43:33,599 --> 00:43:35,940
code was written in about a year ago and

1109
00:43:35,940 --> 00:43:37,560
there hasn't been many updates since

1110
00:43:37,560 --> 00:43:39,119
then

1111
00:43:39,119 --> 00:43:40,920
um audit beats audit beats was really

1112
00:43:40,920 --> 00:43:42,480
easy to configure

1113
00:43:42,480 --> 00:43:45,540
um you just install the the beat on the

1114
00:43:45,540 --> 00:43:47,280
system and run and you're pretty much

1115
00:43:47,280 --> 00:43:50,940
off into the races the downside of audit

1116
00:43:50,940 --> 00:43:51,660
beat

1117
00:43:51,660 --> 00:43:54,660
is that it doesn't record uh the source

1118
00:43:54,660 --> 00:43:56,339
The Source Port of a network connection

1119
00:43:56,339 --> 00:43:57,420
so

1120
00:43:57,420 --> 00:43:59,760
as you guys saw Bryant was able to

1121
00:43:59,760 --> 00:44:01,800
quickly pivot between host and network

1122
00:44:01,800 --> 00:44:04,020
data because of that Community ID

1123
00:44:04,020 --> 00:44:05,460
we're not going to be able to have that

1124
00:44:05,460 --> 00:44:07,980
uh with audit beat

1125
00:44:07,980 --> 00:44:11,220
another downside is that auto beat

1126
00:44:11,220 --> 00:44:13,640
produces a lot of data it's it's really

1127
00:44:13,640 --> 00:44:15,960
with the default configurations it's

1128
00:44:15,960 --> 00:44:18,720
really noisy produces a lot of data

1129
00:44:18,720 --> 00:44:22,440
and with Laurel so the benefit of Laurel

1130
00:44:22,440 --> 00:44:23,280
is

1131
00:44:23,280 --> 00:44:26,520
if you're already running audit d uh it

1132
00:44:26,520 --> 00:44:28,380
won't interfere with audit D or any

1133
00:44:28,380 --> 00:44:30,300
other EDR that you have running

1134
00:44:30,300 --> 00:44:33,540
and this is a

1135
00:44:33,540 --> 00:44:36,180
this makes for more efficient processing

1136
00:44:36,180 --> 00:44:38,160
on the on the host

1137
00:44:38,160 --> 00:44:40,740
um the con uh so

1138
00:44:40,740 --> 00:44:44,160
it outputs it into kind of its own

1139
00:44:44,160 --> 00:44:46,920
um data standard it's not ECS compliant

1140
00:44:46,920 --> 00:44:49,260
so when we brought it over to uh

1141
00:44:49,260 --> 00:44:51,599
security onion in order to correlate the

1142
00:44:51,599 --> 00:44:54,300
different events it took quite a bit of

1143
00:44:54,300 --> 00:44:57,540
transformation and manipulation to make

1144
00:44:57,540 --> 00:45:01,079
that happen so there's there's a

1145
00:45:01,079 --> 00:45:03,839
the flip side of it being less resource

1146
00:45:03,839 --> 00:45:06,000
intensive on the host side means you're

1147
00:45:06,000 --> 00:45:09,240
going to incur more costs on your seam

1148
00:45:09,240 --> 00:45:11,419
side

1149
00:45:15,119 --> 00:45:17,760
all right so currently as Bryant

1150
00:45:17,760 --> 00:45:19,740
mentioned several times we have all of

1151
00:45:19,740 --> 00:45:23,160
this is on our githubs you'll see Links

1152
00:45:23,160 --> 00:45:25,859
at the bottom of the slide but it

1153
00:45:25,859 --> 00:45:28,020
basically all the configuration files

1154
00:45:28,020 --> 00:45:30,060
and a walkthrough of how to do it are

1155
00:45:30,060 --> 00:45:33,359
all on the GitHub so we we normalized

1156
00:45:33,359 --> 00:45:35,400
all the events we created the elastic

1157
00:45:35,400 --> 00:45:38,160
ingest pipelines and

1158
00:45:38,160 --> 00:45:41,040
uh some custom dashboards for each of

1159
00:45:41,040 --> 00:45:43,819
the data sets

1160
00:45:46,260 --> 00:45:47,400
so

1161
00:45:47,400 --> 00:45:50,940
what's left to be done a lot so all

1162
00:45:50,940 --> 00:45:53,760
three of these applications have um you

1163
00:45:53,760 --> 00:45:56,520
know their pros and cons but

1164
00:45:56,520 --> 00:45:57,060
um

1165
00:45:57,060 --> 00:45:59,160
we tested this in a very limited scope

1166
00:45:59,160 --> 00:46:01,980
uh you know one host for each

1167
00:46:01,980 --> 00:46:04,140
application so scaling this you know

1168
00:46:04,140 --> 00:46:06,480
automation aggregation of all these

1169
00:46:06,480 --> 00:46:08,280
things probably still need to be figured

1170
00:46:08,280 --> 00:46:09,960
out and tested

1171
00:46:09,960 --> 00:46:12,960
and detection opportunities so

1172
00:46:12,960 --> 00:46:15,900
uh to the Linux and windows question

1173
00:46:15,900 --> 00:46:18,540
um if you go to Sigma hq's repo right

1174
00:46:18,540 --> 00:46:21,300
now there's only 136 Linux detections in

1175
00:46:21,300 --> 00:46:23,599
that repo and they're pretty generic

1176
00:46:23,599 --> 00:46:28,020
where on the Windows side we have 1800

1177
00:46:28,020 --> 00:46:30,960
so lots of uh lots of room for

1178
00:46:30,960 --> 00:46:32,640
improvement for the detections on the

1179
00:46:32,640 --> 00:46:35,180
Linux side

1180
00:46:37,319 --> 00:46:39,180
uh yeah so I guess that that brings us

1181
00:46:39,180 --> 00:46:42,780
to uh I guess a close and really the

1182
00:46:42,780 --> 00:46:45,060
whole point is whatever application you

1183
00:46:45,060 --> 00:46:47,000
use it's not really

1184
00:46:47,000 --> 00:46:50,040
usually it's the case of which one can I

1185
00:46:50,040 --> 00:46:51,920
use right now which one do I want to use

1186
00:46:51,920 --> 00:46:55,400
so there might be some instances where

1187
00:46:55,400 --> 00:46:57,660
your organization is already collecting

1188
00:46:57,660 --> 00:47:00,540
audit D for maybe Stig requirements and

1189
00:47:00,540 --> 00:47:02,760
so you have to leave audit d-enabled so

1190
00:47:02,760 --> 00:47:05,819
maybe maybe Laurel is the answer or you

1191
00:47:05,819 --> 00:47:07,440
know maybe you already have Auto beat

1192
00:47:07,440 --> 00:47:10,560
deployed on the network whatever

1193
00:47:10,560 --> 00:47:15,060
whatever your case may be so

1194
00:47:15,780 --> 00:47:17,940
there are

1195
00:47:17,940 --> 00:47:21,060
definitely opportunities if you go if

1196
00:47:21,060 --> 00:47:23,160
you go uh to my GitHub page and you look

1197
00:47:23,160 --> 00:47:27,240
at my code uh you might wonder uh why or

1198
00:47:27,240 --> 00:47:28,680
or how

1199
00:47:28,680 --> 00:47:31,380
um don't judge it's uh I have a very

1200
00:47:31,380 --> 00:47:33,660
unique coding style it's a brute force

1201
00:47:33,660 --> 00:47:36,599
and a little bit of plagiarism

1202
00:47:36,599 --> 00:47:38,579
so uh

1203
00:47:38,579 --> 00:47:41,040
yeah probably a lot lots of room for to

1204
00:47:41,040 --> 00:47:42,300
clean up the code and make it more

1205
00:47:42,300 --> 00:47:43,800
efficient

1206
00:47:43,800 --> 00:47:46,020
and then that's all I have uh there's

1207
00:47:46,020 --> 00:47:48,180
some quick uh these are just some quick

1208
00:47:48,180 --> 00:47:50,640
screenshots of the different values so

1209
00:47:50,640 --> 00:47:54,180
because we we normalize the data we were

1210
00:47:54,180 --> 00:47:55,440
able to

1211
00:47:55,440 --> 00:47:58,319
um compare three different data sets and

1212
00:47:58,319 --> 00:48:00,480
kind of the output of them so that's

1213
00:48:00,480 --> 00:48:03,859
just all these are showing

1214
00:48:11,280 --> 00:48:13,980
all right uh

1215
00:48:13,980 --> 00:48:15,540
so Brian do you have anything to add or

1216
00:48:15,540 --> 00:48:16,920
we'll open it up if there's any

1217
00:48:16,920 --> 00:48:19,640
additional questions

1218
00:48:19,680 --> 00:48:21,859
thank you

1219
00:48:22,079 --> 00:48:24,000
any questions y'all

1220
00:48:24,000 --> 00:48:26,660
yes sir

1221
00:48:48,680 --> 00:48:51,119
yeah of course yeah so the question is

1222
00:48:51,119 --> 00:48:52,680
uh you know I said of me going to fire

1223
00:48:52,680 --> 00:48:53,880
trouble could I say this somewhere else

1224
00:48:53,880 --> 00:48:55,800
and I could so you can create custom

1225
00:48:55,800 --> 00:48:58,619
actions inside of your your hunt

1226
00:48:58,619 --> 00:49:00,180
interface and say instead of going to

1227
00:49:00,180 --> 00:49:01,800
virustotal I want you to go to this

1228
00:49:01,800 --> 00:49:04,020
other API you could have left clicked on

1229
00:49:04,020 --> 00:49:06,300
that and then sent it on there now one

1230
00:49:06,300 --> 00:49:09,240
thing that system on for Windows does is

1231
00:49:09,240 --> 00:49:11,819
it will generate the md5 hash of every

1232
00:49:11,819 --> 00:49:13,980
executable file that's launched and

1233
00:49:13,980 --> 00:49:15,420
that's one thing I wish this month for

1234
00:49:15,420 --> 00:49:17,220
Linux did so Windows does that because

1235
00:49:17,220 --> 00:49:18,900
this mod for Linux doesn't generate that

1236
00:49:18,900 --> 00:49:21,420
hash you have to figure out another way

1237
00:49:21,420 --> 00:49:23,940
of seeing if it actually launched

1238
00:49:23,940 --> 00:49:26,420
so

1239
00:49:32,040 --> 00:49:34,560
you could yeah uh

1240
00:49:34,560 --> 00:49:37,260
you could yeah because you're

1241
00:49:37,260 --> 00:49:40,380
the Zeke I'm not sure if Zeke does the

1242
00:49:40,380 --> 00:49:42,180
256 hash

1243
00:49:42,180 --> 00:49:44,040
it's a shot one yeah so you could do

1244
00:49:44,040 --> 00:49:45,839
this because I got it from the Zeke

1245
00:49:45,839 --> 00:49:48,480
foulog and Zeke file log does md5 and

1246
00:49:48,480 --> 00:49:50,900
shot one

1247
00:49:51,480 --> 00:49:52,920
okay

1248
00:49:52,920 --> 00:49:54,839
all right that I think cerakata does

1249
00:49:54,839 --> 00:49:57,300
256.

1250
00:49:57,300 --> 00:50:00,060
hey stroker yep

1251
00:50:00,060 --> 00:50:01,260
yep exactly because you can do the

1252
00:50:01,260 --> 00:50:03,000
stroke as well you can hunt from the

1253
00:50:03,000 --> 00:50:05,400
stroker logs

1254
00:50:05,400 --> 00:50:08,000
yes sir

1255
00:50:13,040 --> 00:50:16,220
all right

1256
00:50:16,980 --> 00:50:18,900
that that's a good question

1257
00:50:18,900 --> 00:50:20,460
um can I get it Brandon yeah so with

1258
00:50:20,460 --> 00:50:21,839
with uh

1259
00:50:21,839 --> 00:50:23,640
it's a ship to audit D data we used

1260
00:50:23,640 --> 00:50:26,220
audit beat for the the auto beat

1261
00:50:26,220 --> 00:50:28,680
scenario but then we use file beat when

1262
00:50:28,680 --> 00:50:31,980
we added um when we added Laurel onto

1263
00:50:31,980 --> 00:50:34,500
audit D we just used a regular file beat

1264
00:50:34,500 --> 00:50:37,020
so from my understanding you can't have

1265
00:50:37,020 --> 00:50:39,900
audit beat and the auto D service

1266
00:50:39,900 --> 00:50:41,700
running at the same time because audit

1267
00:50:41,700 --> 00:50:44,579
Beats does that for you so Auto beat and

1268
00:50:44,579 --> 00:50:46,200
file beat

1269
00:50:46,200 --> 00:50:48,180
we got one more question okay is

1270
00:50:48,180 --> 00:50:49,740
somebody over here I'm sorry we can talk

1271
00:50:49,740 --> 00:50:53,660
alkaline was it over here

1272
00:50:56,700 --> 00:50:58,879
um

1273
00:50:59,700 --> 00:51:02,660
it's right there

1274
00:51:08,099 --> 00:51:09,480
all right

1275
00:51:09,480 --> 00:51:11,760
all right that's yeah that's it yeah if

1276
00:51:11,760 --> 00:51:13,800
you can if you can't uh read that or you

1277
00:51:13,800 --> 00:51:15,059
don't have a copy of the slides you can

1278
00:51:15,059 --> 00:51:16,079
just um

1279
00:51:16,079 --> 00:51:18,599
uh get with us after this or or contact

1280
00:51:18,599 --> 00:51:20,700
us after

1281
00:51:20,700 --> 00:51:23,040
we'll uh this talk will be uploaded to

1282
00:51:23,040 --> 00:51:25,200
YouTube too so we'll be able to see it

1283
00:51:25,200 --> 00:51:27,780
there but it's B Larson 1105 and Bryant

1284
00:51:27,780 --> 00:51:30,660
Dash trekel

1285
00:51:30,660 --> 00:51:32,310
thanks guys

1286
00:51:32,310 --> 00:51:37,119
[Applause]

