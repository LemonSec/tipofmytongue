1
00:00:13,840 --> 00:00:15,920
hey folks chris sanders here and i'm

2
00:00:15,920 --> 00:00:17,359
very disappointed that i cannot be there

3
00:00:17,359 --> 00:00:19,680
with all of you in person today but the

4
00:00:19,680 --> 00:00:21,279
show must go on and i'm glad we're able

5
00:00:21,279 --> 00:00:23,439
to make that happen with josh and i

6
00:00:23,439 --> 00:00:26,080
recording this presentation for you i

7
00:00:26,080 --> 00:00:27,119
think a lot of people in the audience

8
00:00:27,119 --> 00:00:28,400
will be really excited to see some of

9
00:00:28,400 --> 00:00:30,400
the stuff we've got to share again if

10
00:00:30,400 --> 00:00:31,519
you don't know me my name is chris

11
00:00:31,519 --> 00:00:33,440
sanders i run a company called applied

12
00:00:33,440 --> 00:00:34,960
network defense where we focus on

13
00:00:34,960 --> 00:00:36,880
accessible information security training

14
00:00:36,880 --> 00:00:39,920
for practitioners and i run a nonprofit

15
00:00:39,920 --> 00:00:42,320
called the rural technology fund where

16
00:00:42,320 --> 00:00:44,879
we work with teachers and communities

17
00:00:44,879 --> 00:00:46,800
in rural and disadvantaged areas give

18
00:00:46,800 --> 00:00:48,320
them the things they need to teach kids

19
00:00:48,320 --> 00:00:50,640
about computers engineering stem and

20
00:00:50,640 --> 00:00:52,480
their related career fields i've written

21
00:00:52,480 --> 00:00:54,399
a few books over the course of my career

22
00:00:54,399 --> 00:00:55,760
the most recent of which is called

23
00:00:55,760 --> 00:00:57,600
intrusion detection honey pots which is

24
00:00:57,600 --> 00:00:59,280
going to be pretty relevant for today's

25
00:00:59,280 --> 00:01:01,359
presentation

26
00:01:01,359 --> 00:01:04,319
hey there josh brauer here i've been in

27
00:01:04,319 --> 00:01:08,320
it just under 20 years and just under 15

28
00:01:08,320 --> 00:01:10,799
years in security

29
00:01:10,799 --> 00:01:13,360
for the vast majority of that time i've

30
00:01:13,360 --> 00:01:15,360
been involved in the international

31
00:01:15,360 --> 00:01:17,280
nonprofit community

32
00:01:17,280 --> 00:01:20,240
where i focused on network and endpoint

33
00:01:20,240 --> 00:01:21,439
detection

34
00:01:21,439 --> 00:01:24,000
deployed security onion for many years

35
00:01:24,000 --> 00:01:26,560
in those environments and actually

36
00:01:26,560 --> 00:01:28,960
joined security onion solutions about

37
00:01:28,960 --> 00:01:30,320
two years ago

38
00:01:30,320 --> 00:01:33,119
where i work on further development of

39
00:01:33,119 --> 00:01:36,000
the platform as well as training

40
00:01:36,000 --> 00:01:37,200
i've also

41
00:01:37,200 --> 00:01:39,439
developed a couple classes with applied

42
00:01:39,439 --> 00:01:41,520
network events over the years one

43
00:01:41,520 --> 00:01:44,000
focused on os query for security

44
00:01:44,000 --> 00:01:46,720
analysis and the other one on writing

45
00:01:46,720 --> 00:01:48,159
sigma rules

46
00:01:48,159 --> 00:01:50,240
you can catch me on twitter at defense

47
00:01:50,240 --> 00:01:53,119
of depth we'd love to chat about it

48
00:01:53,119 --> 00:01:58,320
security uh d d or even coffee

49
00:01:59,759 --> 00:02:01,520
so i think most folks in the audience

50
00:02:01,520 --> 00:02:03,119
have probably at least heard of a honey

51
00:02:03,119 --> 00:02:05,280
pod and maybe even have a basic idea of

52
00:02:05,280 --> 00:02:06,640
what one is

53
00:02:06,640 --> 00:02:08,399
formally we define a honeypot as a

54
00:02:08,399 --> 00:02:10,399
security resource whose value lies and

55
00:02:10,399 --> 00:02:12,959
being probed attacked or compromised

56
00:02:12,959 --> 00:02:14,000
and maybe a little bit more

57
00:02:14,000 --> 00:02:15,840
simplistically it's basically something

58
00:02:15,840 --> 00:02:17,760
fake that we hope attackers will

59
00:02:17,760 --> 00:02:20,239
interact with for some sort of benefit

60
00:02:20,239 --> 00:02:23,280
to the network defender there are lots

61
00:02:23,280 --> 00:02:24,959
of types of honeypots but they

62
00:02:24,959 --> 00:02:26,800
ultimately have four things in common

63
00:02:26,800 --> 00:02:28,800
they are deceptive so they pretend to be

64
00:02:28,800 --> 00:02:30,319
something that they're not they're

65
00:02:30,319 --> 00:02:32,080
discoverable which means an attacker can

66
00:02:32,080 --> 00:02:34,160
find them somehow they're interactive

67
00:02:34,160 --> 00:02:36,080
which means the attacker can exchange

68
00:02:36,080 --> 00:02:38,720
some sort of data with them or provide a

69
00:02:38,720 --> 00:02:40,720
stimulus and cause some sort of effect

70
00:02:40,720 --> 00:02:42,560
and because they're interactive we can

71
00:02:42,560 --> 00:02:45,040
monitor that interaction through either

72
00:02:45,040 --> 00:02:47,680
logging or alerting

73
00:02:47,680 --> 00:02:49,360
now chances are when you think of a

74
00:02:49,360 --> 00:02:50,800
honeypot you probably think of what i

75
00:02:50,800 --> 00:02:53,280
would call an attack research honeypot

76
00:02:53,280 --> 00:02:54,640
and these are honeypots that are used

77
00:02:54,640 --> 00:02:57,200
primarily to observe attacker or malware

78
00:02:57,200 --> 00:02:58,239
behavior

79
00:02:58,239 --> 00:03:00,800
out on the public internet so

80
00:03:00,800 --> 00:03:03,040
you generally would place these outside

81
00:03:03,040 --> 00:03:04,480
your firewall or just anywhere where

82
00:03:04,480 --> 00:03:05,760
they're accessible on the internet with

83
00:03:05,760 --> 00:03:08,000
no real access to the internal network

84
00:03:08,000 --> 00:03:09,840
and then you have some type of system

85
00:03:09,840 --> 00:03:13,120
there or service that's listening for

86
00:03:13,120 --> 00:03:16,000
some specific type of interaction either

87
00:03:16,000 --> 00:03:18,480
just for general educational purposes or

88
00:03:18,480 --> 00:03:20,159
at least primarily for threat

89
00:03:20,159 --> 00:03:21,599
researchers folks are really concerned

90
00:03:21,599 --> 00:03:24,239
with malware worm proliferation the

91
00:03:24,239 --> 00:03:25,920
proliferation of specific attacks and

92
00:03:25,920 --> 00:03:28,400
how certain things might be uh exploited

93
00:03:28,400 --> 00:03:30,080
things of that nature

94
00:03:30,080 --> 00:03:32,239
so again the key thing is that these are

95
00:03:32,239 --> 00:03:33,760
placed outside the firewall visible to

96
00:03:33,760 --> 00:03:35,200
the internet they're generally going to

97
00:03:35,200 --> 00:03:37,040
generate log data because you're going

98
00:03:37,040 --> 00:03:38,080
to go look at this but you're not

99
00:03:38,080 --> 00:03:39,680
necessarily going to be notified of when

100
00:03:39,680 --> 00:03:41,599
these interactions occur because the

101
00:03:41,599 --> 00:03:42,879
internet's noisy and you're going to see

102
00:03:42,879 --> 00:03:44,959
a lot of them so that's what we think of

103
00:03:44,959 --> 00:03:46,080
when we think of an attack research

104
00:03:46,080 --> 00:03:47,920
honey pot and i mentioned that because i

105
00:03:47,920 --> 00:03:49,440
want you to kind of bracket that to the

106
00:03:49,440 --> 00:03:51,040
side because that's not the type of

107
00:03:51,040 --> 00:03:52,720
honey pot we're here to talk about today

108
00:03:52,720 --> 00:03:54,080
we're going to talk about an intrusion

109
00:03:54,080 --> 00:03:55,920
detection honey pot which is

110
00:03:55,920 --> 00:03:57,519
you know certainly has all the same four

111
00:03:57,519 --> 00:03:59,599
characteristics of honey pots that i

112
00:03:59,599 --> 00:04:01,519
discussed a moment ago but they manifest

113
00:04:01,519 --> 00:04:03,760
in very different ways an intrusion

114
00:04:03,760 --> 00:04:06,000
detection honey pot is basically a form

115
00:04:06,000 --> 00:04:08,239
of intrusion detection system just like

116
00:04:08,239 --> 00:04:10,080
circada is signature-based intrusion

117
00:04:10,080 --> 00:04:12,000
detection and we have anomaly-based

118
00:04:12,000 --> 00:04:14,319
intrusion detection systems and idh is

119
00:04:14,319 --> 00:04:17,600
another form of that sort of thing

120
00:04:17,600 --> 00:04:18,798
it's generally in this case going to be

121
00:04:18,798 --> 00:04:20,478
used by blue teamers so the folks who

122
00:04:20,478 --> 00:04:22,079
are actually building detection doing

123
00:04:22,079 --> 00:04:23,919
detection engineering and the analysts

124
00:04:23,919 --> 00:04:25,520
who would investigate the alerts from

125
00:04:25,520 --> 00:04:26,639
those things

126
00:04:26,639 --> 00:04:27,600
there are a couple of main

127
00:04:27,600 --> 00:04:28,880
characteristics that really

128
00:04:28,880 --> 00:04:31,280
differentiate and idh from other forms

129
00:04:31,280 --> 00:04:33,040
of honeypot one of those is that they

130
00:04:33,040 --> 00:04:35,520
are almost always placed inside the

131
00:04:35,520 --> 00:04:37,520
network so the idea is that an attacker

132
00:04:37,520 --> 00:04:39,600
who has already compromised your network

133
00:04:39,600 --> 00:04:42,160
will stumble across one of these

134
00:04:42,160 --> 00:04:45,040
honeypots now you may ask yourself well

135
00:04:45,040 --> 00:04:46,240
well if that point if the attacker is

136
00:04:46,240 --> 00:04:47,600
already in there then what's the point

137
00:04:47,600 --> 00:04:49,440
and i think the thing to fall back on

138
00:04:49,440 --> 00:04:50,880
here is that

139
00:04:50,880 --> 00:04:52,400
just because an attacker has a foothold

140
00:04:52,400 --> 00:04:53,759
on your network does not mean that they

141
00:04:53,759 --> 00:04:54,800
have won

142
00:04:54,800 --> 00:04:56,160
they have not really won until it

143
00:04:56,160 --> 00:04:57,680
becomes a breach until they've stolen

144
00:04:57,680 --> 00:05:00,960
something or caused some sort of

145
00:05:01,280 --> 00:05:03,759
sort of negative impact uh on your

146
00:05:03,759 --> 00:05:05,680
network in some way so we still want to

147
00:05:05,680 --> 00:05:06,560
try

148
00:05:06,560 --> 00:05:07,919
very aggressively to detect them even

149
00:05:07,919 --> 00:05:09,280
after they've got that initial foothold

150
00:05:09,280 --> 00:05:11,039
and certainly that's a viable thing to

151
00:05:11,039 --> 00:05:12,720
do so we're placing those inside the

152
00:05:12,720 --> 00:05:14,320
network these are generally going to

153
00:05:14,320 --> 00:05:15,840
generate alerts they're not going to be

154
00:05:15,840 --> 00:05:17,120
very noisy because they're inside the

155
00:05:17,120 --> 00:05:18,479
network and nobody should communicate

156
00:05:18,479 --> 00:05:19,840
with them legitimately because they're

157
00:05:19,840 --> 00:05:21,280
not legitimate assets so they're going

158
00:05:21,280 --> 00:05:23,759
to generate alerts along with log data

159
00:05:23,759 --> 00:05:25,520
and these can manifest in a lot of

160
00:05:25,520 --> 00:05:26,720
different ways

161
00:05:26,720 --> 00:05:29,199
generally either as services or tokens

162
00:05:29,199 --> 00:05:30,639
and we'll talk about

163
00:05:30,639 --> 00:05:34,160
those things here in just a little bit

164
00:05:36,800 --> 00:05:37,600
so

165
00:05:37,600 --> 00:05:39,840
a couple of other key things i just want

166
00:05:39,840 --> 00:05:41,280
you to keep in mind as it pertains to

167
00:05:41,280 --> 00:05:44,560
idh and what really makes idh work first

168
00:05:44,560 --> 00:05:46,160
nobody should ever interact with an

169
00:05:46,160 --> 00:05:48,880
intrusion detection

170
00:05:51,039 --> 00:05:52,320
scanners or something like that that

171
00:05:52,320 --> 00:05:54,160
might hit it but you can very simply

172
00:05:54,160 --> 00:05:55,600
allow list these things and make sure

173
00:05:55,600 --> 00:05:56,960
you're not generating alerts from those

174
00:05:56,960 --> 00:05:58,639
things so you should get very few false

175
00:05:58,639 --> 00:06:00,240
positives and if you do they're very

176
00:06:00,240 --> 00:06:02,720
easy to investigate and tune out

177
00:06:02,720 --> 00:06:04,639
attackers are very unlikely to discover

178
00:06:04,639 --> 00:06:06,960
that something is an idh and even if

179
00:06:06,960 --> 00:06:08,560
they do it doesn't really matter a whole

180
00:06:08,560 --> 00:06:10,160
lot because you already know that they

181
00:06:10,160 --> 00:06:12,560
are there so you can respond quickly

182
00:06:12,560 --> 00:06:14,160
that's essential

183
00:06:14,160 --> 00:06:15,680
and finally there are lots of

184
00:06:15,680 --> 00:06:19,199
opportunities for deception with idh so

185
00:06:19,199 --> 00:06:21,280
you can lure attackers into an idh in a

186
00:06:21,280 --> 00:06:22,880
number of different ways you can get

187
00:06:22,880 --> 00:06:25,199
insanely creative with these techniques

188
00:06:25,199 --> 00:06:26,960
and that's one of the reasons i like it

189
00:06:26,960 --> 00:06:28,720
it lets me really flex my creative

190
00:06:28,720 --> 00:06:31,280
muscles and do some unique things that i

191
00:06:31,280 --> 00:06:32,639
wouldn't be able to do with the

192
00:06:32,639 --> 00:06:34,639
limitations of signature-based ideas and

193
00:06:34,639 --> 00:06:37,120
even a lot of anomaly-based ids things

194
00:06:37,120 --> 00:06:39,520
so with that said let's talk about some

195
00:06:39,520 --> 00:06:41,680
of these use cases

196
00:06:41,680 --> 00:06:44,800
and i want to start with

197
00:06:45,039 --> 00:06:46,800
this scenario and lots of scenarios we

198
00:06:46,800 --> 00:06:48,319
know that an attacker has to gain an

199
00:06:48,319 --> 00:06:50,720
initial foothold onto a victim system

200
00:06:50,720 --> 00:06:52,720
before they can really further their

201
00:06:52,720 --> 00:06:54,240
attack so there's a lot of ways that

202
00:06:54,240 --> 00:06:55,360
might happen

203
00:06:55,360 --> 00:06:57,360
let's consider the scenario where an

204
00:06:57,360 --> 00:06:59,520
attacker sends a malicious email with

205
00:06:59,520 --> 00:07:01,440
either an attachment or a link to a

206
00:07:01,440 --> 00:07:04,080
victim the victim then clicks that link

207
00:07:04,080 --> 00:07:05,759
runs a file ultimately leads to some

208
00:07:05,759 --> 00:07:08,160
sort of code execution and the attacker

209
00:07:08,160 --> 00:07:10,400
has access to that victim machine and is

210
00:07:10,400 --> 00:07:12,720
therefore in control of it

211
00:07:12,720 --> 00:07:14,880
now there's a lot of things that could

212
00:07:14,880 --> 00:07:17,039
happen at this point an attacker with

213
00:07:17,039 --> 00:07:18,800
that full access can do really anything

214
00:07:18,800 --> 00:07:20,560
they want but they're obviously trying

215
00:07:20,560 --> 00:07:22,400
to achieve some sort of goal and what i

216
00:07:22,400 --> 00:07:24,560
generally notice is that attackers will

217
00:07:24,560 --> 00:07:26,479
you know kind of early on do

218
00:07:26,479 --> 00:07:28,479
at least one of three

219
00:07:28,479 --> 00:07:31,520
major things um in some sequence in some

220
00:07:31,520 --> 00:07:32,960
order that i've seen from my time as a

221
00:07:32,960 --> 00:07:34,639
defender and from doing these things

222
00:07:34,639 --> 00:07:36,560
myself as a little bit of time as a red

223
00:07:36,560 --> 00:07:39,840
teamer um too so you know one of those

224
00:07:39,840 --> 00:07:40,960
things really the first thing i would

225
00:07:40,960 --> 00:07:42,479
consider that an attacker might do and

226
00:07:42,479 --> 00:07:44,560
these are in no specific order is they

227
00:07:44,560 --> 00:07:46,080
might pillage for files right so the

228
00:07:46,080 --> 00:07:48,160
attacker controls the system and they're

229
00:07:48,160 --> 00:07:50,240
going to go digging around for files

230
00:07:50,240 --> 00:07:52,160
that are relevant to the attacker's goal

231
00:07:52,160 --> 00:07:54,160
so something that either has sensitive

232
00:07:54,160 --> 00:07:55,520
information that's useful to them or

233
00:07:55,520 --> 00:07:56,639
something that

234
00:07:56,639 --> 00:07:58,400
could help them expand or compromise on

235
00:07:58,400 --> 00:07:59,360
the network they're going to look for

236
00:07:59,360 --> 00:08:00,479
those sort of things

237
00:08:00,479 --> 00:08:02,240
so if you imagine an attacker is

238
00:08:02,240 --> 00:08:03,599
browsing around the network and they

239
00:08:03,599 --> 00:08:05,120
grab a bunch of these files and they're

240
00:08:05,120 --> 00:08:06,400
opening them or they're downloading them

241
00:08:06,400 --> 00:08:08,720
and then opening them wherever they are

242
00:08:08,720 --> 00:08:10,560
one of the things we can do here is hide

243
00:08:10,560 --> 00:08:12,879
a honey file right and this is a pretty

244
00:08:12,879 --> 00:08:14,560
cool thing it's the idea that we create

245
00:08:14,560 --> 00:08:16,479
a file that is fake it has no real value

246
00:08:16,479 --> 00:08:18,800
but it looks interesting in name

247
00:08:18,800 --> 00:08:20,400
and the attacker opens it let's say

248
00:08:20,400 --> 00:08:22,639
maybe it's a spreadsheet what we can do

249
00:08:22,639 --> 00:08:25,280
is embed what we call web bug into that

250
00:08:25,280 --> 00:08:27,360
which is a reference to an image on an

251
00:08:27,360 --> 00:08:29,199
external web server so when someone

252
00:08:29,199 --> 00:08:31,520
opens that file it tries to go out and

253
00:08:31,520 --> 00:08:33,519
get that external image from the web

254
00:08:33,519 --> 00:08:35,599
server but in our case the image doesn't

255
00:08:35,599 --> 00:08:37,360
actually exist the reference to it is

256
00:08:37,360 --> 00:08:38,640
hidden in the document there's a lot of

257
00:08:38,640 --> 00:08:41,120
neat ways to do that and when it goes

258
00:08:41,120 --> 00:08:42,880
out it hits that web server well we

259
00:08:42,880 --> 00:08:44,560
control that web server and it is going

260
00:08:44,560 --> 00:08:46,000
to generate logs those logs are going to

261
00:08:46,000 --> 00:08:47,839
tell us the ip address that came from

262
00:08:47,839 --> 00:08:49,360
and we can tie a couple other

263
00:08:49,360 --> 00:08:51,680
interesting things into that as well so

264
00:08:51,680 --> 00:08:53,120
in this case we would know when the

265
00:08:53,120 --> 00:08:54,480
document is open because we would get an

266
00:08:54,480 --> 00:08:56,720
alert when those logs are generated now

267
00:08:56,720 --> 00:08:57,600
that we're going to know where it was

268
00:08:57,600 --> 00:08:58,959
open from which could be our victim

269
00:08:58,959 --> 00:09:00,560
machine which could be the the you know

270
00:09:00,560 --> 00:09:02,640
the foothold into the network or if the

271
00:09:02,640 --> 00:09:04,320
attacker pulled it back to their system

272
00:09:04,320 --> 00:09:06,240
we might actually get their ip address

273
00:09:06,240 --> 00:09:07,360
which could be pretty neat you might

274
00:09:07,360 --> 00:09:08,880
think attackers are too smart to allow

275
00:09:08,880 --> 00:09:10,320
that thing to happen

276
00:09:10,320 --> 00:09:12,160
i think you might be surprised on that

277
00:09:12,160 --> 00:09:13,680
so this is this notion of pillaging for

278
00:09:13,680 --> 00:09:15,360
files this is what we would call a honey

279
00:09:15,360 --> 00:09:16,880
token where we're mimicking legitimate

280
00:09:16,880 --> 00:09:18,399
data and we can do that in lots of

281
00:09:18,399 --> 00:09:20,480
different ways

282
00:09:20,480 --> 00:09:22,720
so the second scenario which i think is

283
00:09:22,720 --> 00:09:24,320
pretty common is dumping credentials

284
00:09:24,320 --> 00:09:25,760
it's fairly obvious why attackers would

285
00:09:25,760 --> 00:09:27,279
want credentials they can use those to

286
00:09:27,279 --> 00:09:29,360
further their compromise and

287
00:09:29,360 --> 00:09:31,440
you know get into other systems so in

288
00:09:31,440 --> 00:09:32,320
this case there are a number of

289
00:09:32,320 --> 00:09:34,160
techniques that attacker can use to dump

290
00:09:34,160 --> 00:09:35,920
credentials uh one of the more popular

291
00:09:35,920 --> 00:09:38,160
is using a tool like many cats that

292
00:09:38,160 --> 00:09:40,640
don't from lsas or lsa secrets or any

293
00:09:40,640 --> 00:09:43,200
other number of other locations

294
00:09:43,200 --> 00:09:45,680
what we can do in this case is actually

295
00:09:45,680 --> 00:09:48,880
embed fake credentials alongside these

296
00:09:48,880 --> 00:09:50,000
locations since we know where the

297
00:09:50,000 --> 00:09:51,600
attacker is looking we can make sure the

298
00:09:51,600 --> 00:09:53,600
attacker will receive these fake

299
00:09:53,600 --> 00:09:55,680
credentials in this case we're talking

300
00:09:55,680 --> 00:09:57,920
basically honey credentials they mimic

301
00:09:57,920 --> 00:09:59,279
legitimate data they look like a

302
00:09:59,279 --> 00:10:01,120
username and password but they're not

303
00:10:01,120 --> 00:10:02,079
they will not actually allow the

304
00:10:02,079 --> 00:10:04,720
attacker to authenticate anywhere but we

305
00:10:04,720 --> 00:10:06,480
can monitor for this if it is a fake

306
00:10:06,480 --> 00:10:08,320
username and nobody should ever use it

307
00:10:08,320 --> 00:10:10,160
we can very easily create detection

308
00:10:10,160 --> 00:10:12,000
signatures that tell us anytime someone

309
00:10:12,000 --> 00:10:13,839
does try to use it if someone does try

310
00:10:13,839 --> 00:10:15,440
to use it we know where they stole it

311
00:10:15,440 --> 00:10:17,200
from because it only exists in specific

312
00:10:17,200 --> 00:10:19,120
places so you can leverage lots of these

313
00:10:19,120 --> 00:10:20,480
and lots of different places on your

314
00:10:20,480 --> 00:10:22,240
networks to do some really cool things

315
00:10:22,240 --> 00:10:23,680
it can be a clear text password it can

316
00:10:23,680 --> 00:10:26,320
be a password hash ssh keys any other

317
00:10:26,320 --> 00:10:28,800
form of authentication

318
00:10:28,800 --> 00:10:30,720
token or credential is pretty valid for

319
00:10:30,720 --> 00:10:34,240
this use case now let's talk about this

320
00:10:34,240 --> 00:10:35,519
third thing an attacker might do and

321
00:10:35,519 --> 00:10:36,800
this is the one i want to focus on

322
00:10:36,800 --> 00:10:38,079
because it's specifically relevant to

323
00:10:38,079 --> 00:10:40,320
the demo that josh is about to show you

324
00:10:40,320 --> 00:10:41,519
in this case the attacker has

325
00:10:41,519 --> 00:10:43,600
compromised the victim and they're very

326
00:10:43,600 --> 00:10:45,440
interested in learning about the network

327
00:10:45,440 --> 00:10:46,560
they want to learn maybe where they are

328
00:10:46,560 --> 00:10:48,000
in the network what type of organization

329
00:10:48,000 --> 00:10:50,160
it is if it's not specifically targeted

330
00:10:50,160 --> 00:10:51,519
or maybe they just want to figure out

331
00:10:51,519 --> 00:10:52,880
where they can move next look for other

332
00:10:52,880 --> 00:10:54,800
vulnerable services or places where they

333
00:10:54,800 --> 00:10:56,800
can leverage previously stolen

334
00:10:56,800 --> 00:10:58,959
credentials so they're probably scanning

335
00:10:58,959 --> 00:11:01,200
in this case it may be using a custom

336
00:11:01,200 --> 00:11:03,200
tool maybe something that we could all

337
00:11:03,200 --> 00:11:05,040
use a public source available it could

338
00:11:05,040 --> 00:11:06,480
be a very wide scan it could be a very

339
00:11:06,480 --> 00:11:07,680
targeted scan

340
00:11:07,680 --> 00:11:09,200
but the thing that the attacker is not

341
00:11:09,200 --> 00:11:10,160
going to know is that when they are

342
00:11:10,160 --> 00:11:12,000
scanning host is that one of the hosts

343
00:11:12,000 --> 00:11:14,320
we have placed out there is you guessed

344
00:11:14,320 --> 00:11:16,720
it it's a honey pot it's a honey service

345
00:11:16,720 --> 00:11:18,640
and it is basically out there for no

346
00:11:18,640 --> 00:11:20,399
other purpose than to listen to probe

347
00:11:20,399 --> 00:11:22,480
requests and if someone sends a probe to

348
00:11:22,480 --> 00:11:24,560
it on whatever service we have out there

349
00:11:24,560 --> 00:11:26,720
ftp ssh anything

350
00:11:26,720 --> 00:11:28,079
it is going to let us know because we're

351
00:11:28,079 --> 00:11:29,760
going to log that data and we will alert

352
00:11:29,760 --> 00:11:31,360
an analyst that that occurred because

353
00:11:31,360 --> 00:11:32,800
nobody should ever be communicating with

354
00:11:32,800 --> 00:11:34,240
this system

355
00:11:34,240 --> 00:11:36,079
some like potential for false positives

356
00:11:36,079 --> 00:11:38,160
but very easy to sort out once you allow

357
00:11:38,160 --> 00:11:39,839
this again things like your internal

358
00:11:39,839 --> 00:11:41,920
vulnerability scanners things that

359
00:11:41,920 --> 00:11:43,519
normally generate broadcast traffic on

360
00:11:43,519 --> 00:11:45,600
specific network segments very trivial

361
00:11:45,600 --> 00:11:46,560
to do

362
00:11:46,560 --> 00:11:49,360
once you set one of these up so

363
00:11:49,360 --> 00:11:50,320
this is kind of the scenario we're

364
00:11:50,320 --> 00:11:52,000
looking at here with the honey service

365
00:11:52,000 --> 00:11:53,279
where we're mimicking the interaction of

366
00:11:53,279 --> 00:11:56,000
a specific software or protocol function

367
00:11:56,000 --> 00:11:58,079
in this case listening on on the network

368
00:11:58,079 --> 00:12:00,240
and we've got lots and lots of uh of

369
00:12:00,240 --> 00:12:01,519
options for this

370
00:12:01,519 --> 00:12:04,240
so these are really the three main ways

371
00:12:04,240 --> 00:12:06,240
i see attackers um you know generally

372
00:12:06,240 --> 00:12:07,600
they're not going to do all these things

373
00:12:07,600 --> 00:12:09,279
sometimes they may may do them in

374
00:12:09,279 --> 00:12:10,560
varying orders but at some point with

375
00:12:10,560 --> 00:12:11,839
that initial foothold usually you're

376
00:12:11,839 --> 00:12:13,920
going to see one of these three things

377
00:12:13,920 --> 00:12:15,680
so we cover a lot of use cases with

378
00:12:15,680 --> 00:12:17,839
intrusion detection honeypots so

379
00:12:17,839 --> 00:12:19,120
hopefully now you kind of get some of

380
00:12:19,120 --> 00:12:21,360
the the value proposition of idh for

381
00:12:21,360 --> 00:12:23,120
detection so i think the question then

382
00:12:23,120 --> 00:12:25,680
turns to deploying idx and how we do

383
00:12:25,680 --> 00:12:27,760
that in a way that's that's pretty easy

384
00:12:27,760 --> 00:12:29,040
and there's a lot of ground to cover

385
00:12:29,040 --> 00:12:30,320
here we're going to focus on on one

386
00:12:30,320 --> 00:12:31,920
specific technique here with with honey

387
00:12:31,920 --> 00:12:34,320
services i will say that many honey

388
00:12:34,320 --> 00:12:36,000
tokens and honey credentials can be

389
00:12:36,000 --> 00:12:38,399
created from existing os functionality

390
00:12:38,399 --> 00:12:40,000
and tools so you've probably heard of

391
00:12:40,000 --> 00:12:41,760
law bins living off the land binaries

392
00:12:41,760 --> 00:12:43,519
that attackers will use i like to think

393
00:12:43,519 --> 00:12:45,680
of this as law idh living off the land

394
00:12:45,680 --> 00:12:47,040
idh because we're using existing

395
00:12:47,040 --> 00:12:48,720
operating system functionality and so on

396
00:12:48,720 --> 00:12:50,160
i think that's pretty cool

397
00:12:50,160 --> 00:12:51,760
honey services are a little bit trickier

398
00:12:51,760 --> 00:12:53,120
you can certainly use legitimate

399
00:12:53,120 --> 00:12:54,800
services so if you want to set up a fake

400
00:12:54,800 --> 00:12:56,720
web server you can use real web server

401
00:12:56,720 --> 00:12:58,800
software and just really restrict it i

402
00:12:58,800 --> 00:13:00,240
find that a little bit time consuming in

403
00:13:00,240 --> 00:13:02,000
most cases and you can potentially

404
00:13:02,000 --> 00:13:03,600
expose some attack service you don't

405
00:13:03,600 --> 00:13:05,920
want to accidentally so i really like to

406
00:13:05,920 --> 00:13:08,000
use pre-built services that are

407
00:13:08,000 --> 00:13:10,240
specifically for honey pots

408
00:13:10,240 --> 00:13:11,760
for a lot of reasons

409
00:13:11,760 --> 00:13:12,959
certainly the one i just mentioned but

410
00:13:12,959 --> 00:13:14,240
also because the logging is really

411
00:13:14,240 --> 00:13:16,880
designed around that specific

412
00:13:16,880 --> 00:13:19,920
use case for these purpose-built tools a

413
00:13:19,920 --> 00:13:21,680
lot of tools available for this the one

414
00:13:21,680 --> 00:13:23,279
that's most relevant for us today is a

415
00:13:23,279 --> 00:13:25,040
tool called open canary it's made by the

416
00:13:25,040 --> 00:13:26,800
folks at thinxx who also make a

417
00:13:26,800 --> 00:13:28,959
commercial honeypot tool which i find

418
00:13:28,959 --> 00:13:30,880
to be pretty useful and pretty good but

419
00:13:30,880 --> 00:13:33,360
opencanary is free it's open source

420
00:13:33,360 --> 00:13:34,639
it basically it's very simple it's

421
00:13:34,639 --> 00:13:37,040
python and it has a configuration file

422
00:13:37,040 --> 00:13:38,639
you would edit the configuration file

423
00:13:38,639 --> 00:13:41,680
say what services you want to run and um

424
00:13:41,680 --> 00:13:43,120
and basically launch the python script

425
00:13:43,120 --> 00:13:45,040
and it will run those and you can use

426
00:13:45,040 --> 00:13:46,880
those 490h as you can see in my list on

427
00:13:46,880 --> 00:13:49,279
the screen there are lots of different

428
00:13:49,279 --> 00:13:50,720
options and they all provide some level

429
00:13:50,720 --> 00:13:52,800
of interactivity so it's just not just

430
00:13:52,800 --> 00:13:55,279
advertising that the http port is

431
00:13:55,279 --> 00:13:56,320
available

432
00:13:56,320 --> 00:13:57,680
it will allow an attacker actually

433
00:13:57,680 --> 00:13:59,600
browse a website a fake website that you

434
00:13:59,600 --> 00:14:02,240
allow it to host it will not simply say

435
00:14:02,240 --> 00:14:03,839
ssh is available it will allow the

436
00:14:03,839 --> 00:14:05,279
attacker to attempt to log in and you

437
00:14:05,279 --> 00:14:07,199
can collect the credentials they use

438
00:14:07,199 --> 00:14:08,560
and maybe if they're stolen credentials

439
00:14:08,560 --> 00:14:09,839
you know where the attacker might have

440
00:14:09,839 --> 00:14:11,120
been on your network so a lot of

441
00:14:11,120 --> 00:14:12,160
flexibility there i really like

442
00:14:12,160 --> 00:14:14,079
opencanary is a good

443
00:14:14,079 --> 00:14:16,639
starting point for hunting services and

444
00:14:16,639 --> 00:14:18,880
with that in mind i think um i think one

445
00:14:18,880 --> 00:14:21,519
of the big lingering questions here is

446
00:14:21,519 --> 00:14:24,639
well you know i want to i want to deploy

447
00:14:24,639 --> 00:14:27,279
um something like open canary but it's a

448
00:14:27,279 --> 00:14:28,959
lot of work maybe sometimes to integrate

449
00:14:28,959 --> 00:14:31,040
that into our security monitoring stack

450
00:14:31,040 --> 00:14:31,760
so

451
00:14:31,760 --> 00:14:35,120
you know i guess now if only there were

452
00:14:35,120 --> 00:14:37,040
some sort of platform

453
00:14:37,040 --> 00:14:39,199
a platform whose goals was to simplify

454
00:14:39,199 --> 00:14:41,120
the deployment and management of

455
00:14:41,120 --> 00:14:45,160
security monitoring infrastructure

456
00:14:45,440 --> 00:14:47,680
we're at security onion con right so

457
00:14:47,680 --> 00:14:49,120
this is where we're going to show you

458
00:14:49,120 --> 00:14:51,199
some some cool stuff that

459
00:14:51,199 --> 00:14:53,600
particularly josh has developed and

460
00:14:53,600 --> 00:14:56,000
something really called the idh node

461
00:14:56,000 --> 00:14:57,519
right we have these nodes and security

462
00:14:57,519 --> 00:14:58,399
onions so

463
00:14:58,399 --> 00:14:59,600
josh and i are really excited to share

464
00:14:59,600 --> 00:15:01,120
with you a new capability that allows

465
00:15:01,120 --> 00:15:03,440
you to turn a security onion forward

466
00:15:03,440 --> 00:15:06,480
node into an idh node running open

467
00:15:06,480 --> 00:15:08,480
canary this allows you to deploy a honey

468
00:15:08,480 --> 00:15:10,480
service in such a way that its alerts

469
00:15:10,480 --> 00:15:12,240
and logs go straight into your security

470
00:15:12,240 --> 00:15:14,959
engine monitoring pipeline and it really

471
00:15:14,959 --> 00:15:16,959
just simple makes it all simplifies and

472
00:15:16,959 --> 00:15:18,800
automates a whole lot of useful things

473
00:15:18,800 --> 00:15:20,399
so with that said i know you're excited

474
00:15:20,399 --> 00:15:22,079
to see it i'm going to turn things over

475
00:15:22,079 --> 00:15:24,560
to josh

476
00:15:25,440 --> 00:15:27,040
all right thanks chris

477
00:15:27,040 --> 00:15:29,279
uh i want to take just a minute and demo

478
00:15:29,279 --> 00:15:32,079
for you a new integration that i put

479
00:15:32,079 --> 00:15:34,639
together that allows you to

480
00:15:34,639 --> 00:15:38,240
integrate a intrusion detection honeypot

481
00:15:38,240 --> 00:15:40,639
into security onion

482
00:15:40,639 --> 00:15:43,279
it takes a forward node that you already

483
00:15:43,279 --> 00:15:46,399
have installed in your grid and converts

484
00:15:46,399 --> 00:15:49,360
it over to an idh node

485
00:15:49,360 --> 00:15:52,240
so to start off we have to be running a

486
00:15:52,240 --> 00:15:54,399
distributed grid in security onion

487
00:15:54,399 --> 00:15:56,160
you'll see that i have

488
00:15:56,160 --> 00:15:58,480
so manager which is our manager search

489
00:15:58,480 --> 00:15:59,279
node

490
00:15:59,279 --> 00:16:01,839
and two forward nodes

491
00:16:01,839 --> 00:16:02,880
all right so that's the first

492
00:16:02,880 --> 00:16:04,079
requirement because what we're going to

493
00:16:04,079 --> 00:16:06,079
do is we're going to take this forward

494
00:16:06,079 --> 00:16:08,880
node and convert it over

495
00:16:08,880 --> 00:16:10,240
to a

496
00:16:10,240 --> 00:16:12,720
to a idh node

497
00:16:12,720 --> 00:16:14,320
so from there

498
00:16:14,320 --> 00:16:16,639
let's go over to the github repo the

499
00:16:16,639 --> 00:16:19,120
link will be available for you this is

500
00:16:19,120 --> 00:16:23,279
the so-idh repo we're going to get clone

501
00:16:23,279 --> 00:16:24,160
this

502
00:16:24,160 --> 00:16:25,759
on to

503
00:16:25,759 --> 00:16:28,560
the manager

504
00:16:28,800 --> 00:16:31,440
all right so you can see that i am ssh

505
00:16:31,440 --> 00:16:33,440
into the manager

506
00:16:33,440 --> 00:16:37,839
so i'll get clone that repo

507
00:16:37,839 --> 00:16:41,440
and then all cd into it

508
00:16:41,440 --> 00:16:44,160
and we'll see there are a few files

509
00:16:44,160 --> 00:16:46,120
we have this idh

510
00:16:46,120 --> 00:16:48,800
setup.sh script

511
00:16:48,800 --> 00:16:51,360
so uh we're going to go ahead and run

512
00:16:51,360 --> 00:16:55,279
that script with sudo

513
00:16:56,560 --> 00:16:57,759
and it's going to do a couple things

514
00:16:57,759 --> 00:17:00,160
it's going to first check to make sure

515
00:17:00,160 --> 00:17:01,040
that

516
00:17:01,040 --> 00:17:03,440
we're on a manager the script has to be

517
00:17:03,440 --> 00:17:05,039
run on a manager

518
00:17:05,039 --> 00:17:07,599
then checks the version of security

519
00:17:07,599 --> 00:17:10,079
engine running the minimum version

520
00:17:10,079 --> 00:17:12,880
needed is 2.3.80

521
00:17:12,880 --> 00:17:15,119
to make sure this works correctly

522
00:17:15,119 --> 00:17:17,760
and then there's a message here no input

523
00:17:17,760 --> 00:17:20,160
found so the actual usage is the script

524
00:17:20,160 --> 00:17:20,959
name

525
00:17:20,959 --> 00:17:23,359
and then the forward node host name that

526
00:17:23,359 --> 00:17:25,760
you are targeting and the script uh

527
00:17:25,760 --> 00:17:28,640
hopefully lists a couple or all of the

528
00:17:28,640 --> 00:17:31,039
available forward nodes you can see we

529
00:17:31,039 --> 00:17:32,960
have two right here

530
00:17:32,960 --> 00:17:34,960
so we'll go ahead and copy and paste

531
00:17:34,960 --> 00:17:37,440
this one

532
00:17:39,039 --> 00:17:41,200
rerun this but this time we're going to

533
00:17:41,200 --> 00:17:42,320
select

534
00:17:42,320 --> 00:17:46,000
uh sensor o5 to be targeted it's going

535
00:17:46,000 --> 00:17:50,000
to rerun our manager and version checks

536
00:17:50,000 --> 00:17:52,799
it found the forward node and it is up

537
00:17:52,799 --> 00:17:54,320
and responding

538
00:17:54,320 --> 00:17:57,039
so we get a final warning here

539
00:17:57,039 --> 00:17:59,200
this experimental script will convert a

540
00:17:59,200 --> 00:18:01,360
forward node into an intrusion detection

541
00:18:01,360 --> 00:18:04,640
honeypot node it is experimental and a

542
00:18:04,640 --> 00:18:06,720
work in progress

543
00:18:06,720 --> 00:18:08,799
warning exclamation point exclamation

544
00:18:08,799 --> 00:18:11,360
point this script will stop all sensor

545
00:18:11,360 --> 00:18:13,919
services on the following forward node

546
00:18:13,919 --> 00:18:16,799
and convert it to an idh node

547
00:18:16,799 --> 00:18:19,679
this is what we are targeting so do we

548
00:18:19,679 --> 00:18:22,400
want to continue yes

549
00:18:22,400 --> 00:18:24,000
so it's going to do a few things that's

550
00:18:24,000 --> 00:18:26,480
going to disable the sensor services on

551
00:18:26,480 --> 00:18:29,679
the forward node like zeke and cyricada

552
00:18:29,679 --> 00:18:31,280
and steno

553
00:18:31,280 --> 00:18:33,440
it's then going to copy down a salt

554
00:18:33,440 --> 00:18:35,919
state and apply that and that can

555
00:18:35,919 --> 00:18:38,559
certainly take some time on the node

556
00:18:38,559 --> 00:18:41,360
depending on the environment and how you

557
00:18:41,360 --> 00:18:43,440
know what kind of system resources that

558
00:18:43,440 --> 00:18:45,360
that forward node has

559
00:18:45,360 --> 00:18:47,360
that salt state will build the open

560
00:18:47,360 --> 00:18:50,080
canary docker container uh configure

561
00:18:50,080 --> 00:18:53,360
file beat to make sure that um it sends

562
00:18:53,360 --> 00:18:56,880
over the logs over to the the manager

563
00:18:56,880 --> 00:18:58,559
as well as some other pieces of

564
00:18:58,559 --> 00:19:00,240
configuration

565
00:19:00,240 --> 00:19:02,720
you can see that we do have idh setup

566
00:19:02,720 --> 00:19:03,760
complete

567
00:19:03,760 --> 00:19:05,840
doesn't look like any errors

568
00:19:05,840 --> 00:19:08,559
if the script runs into errors

569
00:19:08,559 --> 00:19:11,679
it will say so and it will also uh list

570
00:19:11,679 --> 00:19:13,679
out where you can find the log with the

571
00:19:13,679 --> 00:19:16,240
errors that it ran into

572
00:19:16,240 --> 00:19:18,799
now we see that the setup completed on

573
00:19:18,799 --> 00:19:20,160
our sensor

574
00:19:20,160 --> 00:19:24,640
and we have a default idh configuration

575
00:19:24,640 --> 00:19:25,919
we have the

576
00:19:25,919 --> 00:19:29,600
ssh and vnc uh honey services

577
00:19:29,600 --> 00:19:35,039
um accessible on tcp 222 and 5900 and

578
00:19:35,039 --> 00:19:38,000
accessible from all networks from a from

579
00:19:38,000 --> 00:19:39,760
a firewall perspective

580
00:19:39,760 --> 00:19:42,240
so to be clear here the firewall

581
00:19:42,240 --> 00:19:44,960
configuration was applied only to this

582
00:19:44,960 --> 00:19:46,320
forward node

583
00:19:46,320 --> 00:19:49,520
this firewall configuration is not

584
00:19:49,520 --> 00:19:52,080
set for any other node on the grid just

585
00:19:52,080 --> 00:19:55,120
the idh node that we were targeting

586
00:19:55,120 --> 00:19:57,360
so this is the case we should be able to

587
00:19:57,360 --> 00:19:59,200
access ssh

588
00:19:59,200 --> 00:20:00,960
on this port

589
00:20:00,960 --> 00:20:03,120
so let's go ahead and copy and paste

590
00:20:03,120 --> 00:20:05,200
this

591
00:20:05,200 --> 00:20:08,480
we'll say ssh dash p

592
00:20:08,480 --> 00:20:11,200
for port 2 2 2 2

593
00:20:11,200 --> 00:20:13,679
and ip address

594
00:20:13,679 --> 00:20:17,120
and run that and we do get a an accepted

595
00:20:17,120 --> 00:20:18,480
connection

596
00:20:18,480 --> 00:20:20,799
so i'll put in my super secret password

597
00:20:20,799 --> 00:20:22,960
of tour and of course it's not going to

598
00:20:22,960 --> 00:20:25,520
work this is a honey service

599
00:20:25,520 --> 00:20:28,080
we don't have that set up

600
00:20:28,080 --> 00:20:30,720
so uh looks like i was able to

601
00:20:30,720 --> 00:20:33,760
successfully connect to the ssh honey

602
00:20:33,760 --> 00:20:35,120
service

603
00:20:35,120 --> 00:20:37,600
if that's the case logs were generated

604
00:20:37,600 --> 00:20:40,080
of this attempt and we should be able to

605
00:20:40,080 --> 00:20:42,640
see those logs over in security onion so

606
00:20:42,640 --> 00:20:44,880
let's pivot back over to

607
00:20:44,880 --> 00:20:46,799
security onion

608
00:20:46,799 --> 00:20:49,440
and check it out

609
00:20:49,440 --> 00:20:53,600
if i go over to the hunt interface

610
00:20:53,919 --> 00:20:56,480
we'll see that uh my currently i'm

611
00:20:56,480 --> 00:20:59,640
grouping all my logs by event.module

612
00:20:59,640 --> 00:21:01,919
event.dataset so if i scroll down i see

613
00:21:01,919 --> 00:21:05,039
lots of z logs i'm going to go ahead and

614
00:21:05,039 --> 00:21:07,120
filter those out

615
00:21:07,120 --> 00:21:10,320
and then i do actually see open canary

616
00:21:10,320 --> 00:21:11,840
logs

617
00:21:11,840 --> 00:21:15,520
and i'll filter specifically for that

618
00:21:15,520 --> 00:21:17,600
now there are different types of open

619
00:21:17,600 --> 00:21:20,400
canary logs uh generated

620
00:21:20,400 --> 00:21:22,240
there's kind of the the

621
00:21:22,240 --> 00:21:24,080
you know the logs generated about the

622
00:21:24,080 --> 00:21:25,840
service itself it just

623
00:21:25,840 --> 00:21:28,320
simply says it added the service

624
00:21:28,320 --> 00:21:31,039
right so kind of metadata about the

625
00:21:31,039 --> 00:21:33,200
service and what's running

626
00:21:33,200 --> 00:21:35,440
and then finally we have actual access

627
00:21:35,440 --> 00:21:36,480
logs

628
00:21:36,480 --> 00:21:39,280
um so we have logs generated from my

629
00:21:39,280 --> 00:21:40,720
local system

630
00:21:40,720 --> 00:21:43,840
which we which i just used to access the

631
00:21:43,840 --> 00:21:47,280
honey service on port 2 2 2 2.

632
00:21:47,280 --> 00:21:50,159
now if i drill down

633
00:21:50,159 --> 00:21:53,280
we'll see a lot more information

634
00:21:53,280 --> 00:21:56,799
our destination host port

635
00:21:57,280 --> 00:22:01,440
time uh file log the file path you can

636
00:22:01,440 --> 00:22:02,960
see we have the

637
00:22:02,960 --> 00:22:05,679
password that is that i sent and the

638
00:22:05,679 --> 00:22:07,440
username

639
00:22:07,440 --> 00:22:09,840
and then this is the raw log that came

640
00:22:09,840 --> 00:22:11,760
from open canary

641
00:22:11,760 --> 00:22:14,640
so this is looking pretty good but um if

642
00:22:14,640 --> 00:22:18,240
you recall idh is one of the key

643
00:22:18,240 --> 00:22:21,520
parts to an idh is that it should be low

644
00:22:21,520 --> 00:22:24,159
volume and if you know any events coming

645
00:22:24,159 --> 00:22:24,880
in

646
00:22:24,880 --> 00:22:27,440
from probing and accessing the services

647
00:22:27,440 --> 00:22:29,360
are pretty high

648
00:22:29,360 --> 00:22:32,240
uh quality events events that we want to

649
00:22:32,240 --> 00:22:35,120
get alerted for so rather than having to

650
00:22:35,120 --> 00:22:36,720
make you hunt through all this data on a

651
00:22:36,720 --> 00:22:41,120
regular basis we also create a playbook

652
00:22:41,120 --> 00:22:44,720
uh alert for it

653
00:22:44,720 --> 00:22:47,120
now um i do have two created here

654
00:22:47,120 --> 00:22:48,559
because i was testing this just a couple

655
00:22:48,559 --> 00:22:49,840
minutes ago

656
00:22:49,840 --> 00:22:52,960
but as part of the setup process we do

657
00:22:52,960 --> 00:22:55,280
create and activate a playbook play

658
00:22:55,280 --> 00:22:57,200
around ssh

659
00:22:57,200 --> 00:22:58,799
if you're not familiar with security

660
00:22:58,799 --> 00:23:01,440
onion playbook it's a tool that allows

661
00:23:01,440 --> 00:23:04,960
you to write sigma rules and import them

662
00:23:04,960 --> 00:23:07,200
as detection plays and then make that

663
00:23:07,200 --> 00:23:10,240
play active which will use a last alert

664
00:23:10,240 --> 00:23:13,280
in the back end to generate any alerts

665
00:23:13,280 --> 00:23:16,480
that it finds based on your play that

666
00:23:16,480 --> 00:23:18,400
you wrote all right

667
00:23:18,400 --> 00:23:21,039
so we have one again built for

668
00:23:21,039 --> 00:23:23,600
when ssh is accessed and the objective

669
00:23:23,600 --> 00:23:24,480
is

670
00:23:24,480 --> 00:23:28,080
detects when the ssh service on a so idh

671
00:23:28,080 --> 00:23:30,080
node has been probed

672
00:23:30,080 --> 00:23:32,400
so if this is the case we should have

673
00:23:32,400 --> 00:23:34,400
gotten an alert

674
00:23:34,400 --> 00:23:37,360
over in the alerts interface

675
00:23:37,360 --> 00:23:41,200
for uh when ssh was accessed

676
00:23:41,200 --> 00:23:44,799
let me filter out the cirricata alerts

677
00:23:44,799 --> 00:23:48,960
and uh there we go right there playbook

678
00:23:48,960 --> 00:23:52,640
so so dash or excuse me so idh ssh was

679
00:23:52,640 --> 00:23:54,159
accessed

680
00:23:54,159 --> 00:23:55,679
all right so we could drill down into

681
00:23:55,679 --> 00:23:57,679
this and get more detail about the alert

682
00:23:57,679 --> 00:24:00,080
but this alert was based off of that

683
00:24:00,080 --> 00:24:02,400
data that we saw in hunt just a minute

684
00:24:02,400 --> 00:24:05,840
ago which was generated by open canary

685
00:24:05,840 --> 00:24:08,559
which was generated because i probed or

686
00:24:08,559 --> 00:24:11,039
i tried to connect to the

687
00:24:11,039 --> 00:24:14,559
the ssh service on our idh node

688
00:24:14,559 --> 00:24:16,799
it's a pretty great stuff

689
00:24:16,799 --> 00:24:20,000
but again going back to the cons the

690
00:24:20,000 --> 00:24:22,960
concepts behind idh is that it has to be

691
00:24:22,960 --> 00:24:25,360
customized for your environment you

692
00:24:25,360 --> 00:24:27,760
don't want to just use the default

693
00:24:27,760 --> 00:24:30,559
configuration that we've set up for you

694
00:24:30,559 --> 00:24:32,960
so i want to show you how to edit the

695
00:24:32,960 --> 00:24:35,360
default configuration of your idh node

696
00:24:35,360 --> 00:24:38,559
and apply that configuration

697
00:24:38,559 --> 00:24:41,760
let's go back to our terminal

698
00:24:41,760 --> 00:24:45,600
and if we come over to the summary here

699
00:24:45,600 --> 00:24:48,000
we saw this we didn't read it though so

700
00:24:48,000 --> 00:24:52,559
open canary config is on the idh node in

701
00:24:52,559 --> 00:24:53,520
this

702
00:24:53,520 --> 00:24:55,440
folder right here

703
00:24:55,440 --> 00:24:57,919
and then you can run this command on the

704
00:24:57,919 --> 00:25:00,080
manager to apply any configuration

705
00:25:00,080 --> 00:25:00,960
changes so you're going to make

706
00:25:00,960 --> 00:25:03,039
configuration changes

707
00:25:03,039 --> 00:25:05,200
in the configuration file here

708
00:25:05,200 --> 00:25:06,480
and

709
00:25:06,480 --> 00:25:08,400
apply running this command on the

710
00:25:08,400 --> 00:25:09,600
manager

711
00:25:09,600 --> 00:25:12,240
so first we'll ssh into

712
00:25:12,240 --> 00:25:15,360
our idh node

713
00:25:15,360 --> 00:25:20,000
ssh sysadmin at

714
00:25:20,799 --> 00:25:23,360
login

715
00:25:24,000 --> 00:25:25,120
and

716
00:25:25,120 --> 00:25:27,440
we need to open up our configuration

717
00:25:27,440 --> 00:25:29,840
file

718
00:25:30,000 --> 00:25:32,400
a sudo a vi

719
00:25:32,400 --> 00:25:33,919
it should be open

720
00:25:33,919 --> 00:25:36,919
canary.conf

721
00:25:37,919 --> 00:25:40,159
if you're not familiar with opencanary

722
00:25:40,159 --> 00:25:43,279
configuration no worries it's a fairly

723
00:25:43,279 --> 00:25:45,679
simple we have a bunch of canary

724
00:25:45,679 --> 00:25:46,880
services

725
00:25:46,880 --> 00:25:49,760
or honeypot services that we can enable

726
00:25:49,760 --> 00:25:53,520
like git and ftp and http

727
00:25:53,520 --> 00:25:56,799
we can enable them with a line like this

728
00:25:56,799 --> 00:25:59,200
and then we have options so with like

729
00:25:59,200 --> 00:26:02,159
port options or banner options

730
00:26:02,159 --> 00:26:03,279
all right

731
00:26:03,279 --> 00:26:05,760
so for right now i'm just going to

732
00:26:05,760 --> 00:26:08,320
enable ftp

733
00:26:08,320 --> 00:26:10,720
change this to true i'm going to leave

734
00:26:10,720 --> 00:26:14,480
the port as 21 and the banner

735
00:26:14,480 --> 00:26:16,960
as it is the default right now

736
00:26:16,960 --> 00:26:20,240
so i'll go ahead and save that

737
00:26:20,240 --> 00:26:21,919
and we're going to come over to the

738
00:26:21,919 --> 00:26:23,279
manager

739
00:26:23,279 --> 00:26:25,760
and we're going to run this command on

740
00:26:25,760 --> 00:26:27,520
the manager

741
00:26:27,520 --> 00:26:29,200
now one of the other pieces to this

742
00:26:29,200 --> 00:26:30,960
command is if we

743
00:26:30,960 --> 00:26:33,360
are changing configuration that requires

744
00:26:33,360 --> 00:26:36,720
a new open port on the idh node we just

745
00:26:36,720 --> 00:26:40,720
list the port number as a parameter and

746
00:26:40,720 --> 00:26:42,240
that will take it in and add the

747
00:26:42,240 --> 00:26:45,360
necessary firewall configuration

748
00:26:45,360 --> 00:26:48,959
so let's go ahead and run this

749
00:26:50,240 --> 00:26:51,279
oop

750
00:26:51,279 --> 00:26:53,200
yep

751
00:26:53,200 --> 00:26:56,080
let's try that again

752
00:26:59,440 --> 00:27:01,440
it shouldn't take too long it's going to

753
00:27:01,440 --> 00:27:04,400
restart the idh shocker container

754
00:27:04,400 --> 00:27:08,400
and open up that port that we specified

755
00:27:08,400 --> 00:27:10,400
all right so now if everything worked i

756
00:27:10,400 --> 00:27:13,120
should be able to go over to my

757
00:27:13,120 --> 00:27:16,799
local terminal say ftp

758
00:27:16,799 --> 00:27:19,520
mypagers port 21

759
00:27:19,520 --> 00:27:21,200
and check that out it's trying to

760
00:27:21,200 --> 00:27:23,360
connect to the ftp server

761
00:27:23,360 --> 00:27:24,559
put in my

762
00:27:24,559 --> 00:27:26,960
oh yeah whatever password required for

763
00:27:26,960 --> 00:27:29,679
tor tortor that's fine

764
00:27:29,679 --> 00:27:32,080
sorry authentication failed so i'll quit

765
00:27:32,080 --> 00:27:33,200
out of that

766
00:27:33,200 --> 00:27:36,159
and again we should be able to pop open

767
00:27:36,159 --> 00:27:37,600
hunt

768
00:27:37,600 --> 00:27:42,640
and see the alerts for ftp

769
00:27:42,640 --> 00:27:44,960
inside i may need to give it just a

770
00:27:44,960 --> 00:27:48,360
second here

771
00:27:50,960 --> 00:27:54,240
yeah we'll give it a second here

772
00:27:55,279 --> 00:27:58,320
oh there it is right there

773
00:27:58,320 --> 00:28:00,880
all right so source ip is my local host

774
00:28:00,880 --> 00:28:04,000
and destination port is 21

775
00:28:04,000 --> 00:28:06,640
and if we scroll down we'll see that we

776
00:28:06,640 --> 00:28:09,679
have my password and username as tor

777
00:28:09,679 --> 00:28:12,080
all right so that is how you customize

778
00:28:12,080 --> 00:28:14,840
your idh or the open canary

779
00:28:14,840 --> 00:28:18,000
configuration for idh

780
00:28:18,000 --> 00:28:20,720
and that's about it for this demo

781
00:28:20,720 --> 00:28:22,399
hopefully that's making sense so we

782
00:28:22,399 --> 00:28:25,440
started out with a distributed grid uh

783
00:28:25,440 --> 00:28:28,159
inside security onion we downloaded the

784
00:28:28,159 --> 00:28:31,279
the repo and we ran the shell script

785
00:28:31,279 --> 00:28:34,960
which uh converted our forward node into

786
00:28:34,960 --> 00:28:39,360
an idh node we tested uh and verified

787
00:28:39,360 --> 00:28:42,159
that the ssh

788
00:28:42,159 --> 00:28:45,200
traffic was generating logs

789
00:28:45,200 --> 00:28:47,679
uh with open canary we can see them and

790
00:28:47,679 --> 00:28:50,159
hunt it generated an alert because of

791
00:28:50,159 --> 00:28:52,799
playbook and then when then we went and

792
00:28:52,799 --> 00:28:55,039
actually edited our open canary

793
00:28:55,039 --> 00:28:56,480
configuration

794
00:28:56,480 --> 00:28:59,919
and tested that as well for ftp

795
00:28:59,919 --> 00:29:02,000
so uh let me know if you have any issues

796
00:29:02,000 --> 00:29:05,120
or run in any problems um this link for

797
00:29:05,120 --> 00:29:07,679
this repo will be available feel free to

798
00:29:07,679 --> 00:29:10,320
drop in a question either on twitter at

799
00:29:10,320 --> 00:29:12,480
defense of depth or under the issue

800
00:29:12,480 --> 00:29:15,120
section here

801
00:29:15,679 --> 00:29:17,520
thanks josh that was awesome i'm really

802
00:29:17,520 --> 00:29:19,200
excited to see it there's a lot of

803
00:29:19,200 --> 00:29:21,760
things to love about this integration in

804
00:29:21,760 --> 00:29:24,240
this tool it's certainly extensible

805
00:29:24,240 --> 00:29:26,159
whether it's through open canary itself

806
00:29:26,159 --> 00:29:27,360
or through

807
00:29:27,360 --> 00:29:28,799
applying python skills if you want to do

808
00:29:28,799 --> 00:29:30,799
something the native tool can't do it's

809
00:29:30,799 --> 00:29:32,720
also obviously open source which is

810
00:29:32,720 --> 00:29:35,039
pretty neat it's automated through the

811
00:29:35,039 --> 00:29:36,720
magic of security onion you get all your

812
00:29:36,720 --> 00:29:38,559
alerts right there alongside everything

813
00:29:38,559 --> 00:29:39,679
else and you can investigate it

814
00:29:39,679 --> 00:29:41,520
alongside other relevant data so i think

815
00:29:41,520 --> 00:29:43,360
that's absolutely fantastic and there's

816
00:29:43,360 --> 00:29:45,279
a lot of room to extend this with the

817
00:29:45,279 --> 00:29:46,640
integration with playbook which

818
00:29:46,640 --> 00:29:48,240
obviously relies on sigma rule so

819
00:29:48,240 --> 00:29:50,480
there's a lot to be done there

820
00:29:50,480 --> 00:29:52,000
obviously there's a lot we couldn't

821
00:29:52,000 --> 00:29:54,480
cover in the short timeframe surrounding

822
00:29:54,480 --> 00:29:56,799
things like idh deployment best

823
00:29:56,799 --> 00:29:59,039
practices and so on if you want to learn

824
00:29:59,039 --> 00:30:00,320
more about that then i think the next

825
00:30:00,320 --> 00:30:02,559
best place to turn is my book intrusion

826
00:30:02,559 --> 00:30:04,240
detection honey pots or the associated

827
00:30:04,240 --> 00:30:05,919
course you'll see a link to that here in

828
00:30:05,919 --> 00:30:08,000
just a moment it probably also is worth

829
00:30:08,000 --> 00:30:10,559
saying that this is a new feature this

830
00:30:10,559 --> 00:30:12,080
new script so it's

831
00:30:12,080 --> 00:30:14,960
not officially supported as of now

832
00:30:14,960 --> 00:30:16,640
by security onion it's it's an

833
00:30:16,640 --> 00:30:19,440
individual effort here mostly by josh

834
00:30:19,440 --> 00:30:21,600
it is beta and it's fairly bare bones i

835
00:30:21,600 --> 00:30:22,640
think there's a lot that can be done

836
00:30:22,640 --> 00:30:24,399
with it a lot of ways to take this and

837
00:30:24,399 --> 00:30:25,760
really improve on it or leverage other

838
00:30:25,760 --> 00:30:27,360
sorts of honey pots so the key thing is

839
00:30:27,360 --> 00:30:29,440
if you really like the idea download the

840
00:30:29,440 --> 00:30:31,600
script uh convert one converter forward

841
00:30:31,600 --> 00:30:33,200
node that uh

842
00:30:33,200 --> 00:30:34,720
into an intrusion detection honeypot

843
00:30:34,720 --> 00:30:36,080
test it and tell us what you think and

844
00:30:36,080 --> 00:30:37,279
if you've got some cool ideas for what

845
00:30:37,279 --> 00:30:39,279
to do next uh let joshua know and i

846
00:30:39,279 --> 00:30:40,640
think there's a lot of

847
00:30:40,640 --> 00:30:42,799
great things that can come of that

848
00:30:42,799 --> 00:30:44,159
with that said that's going to wrap it

849
00:30:44,159 --> 00:30:46,399
up for josh and i here in a moment again

850
00:30:46,399 --> 00:30:48,799
i'll put a link or a slide on the screen

851
00:30:48,799 --> 00:30:50,880
with links to download the script as

852
00:30:50,880 --> 00:30:52,320
well as some additional information

853
00:30:52,320 --> 00:30:55,120
including my josh's contact information

854
00:30:55,120 --> 00:30:56,799
thank you all so much for coming enjoy

855
00:30:56,799 --> 00:31:00,279
the rest of your conference

856
00:31:17,200 --> 00:31:19,519
hear me

857
00:31:19,519 --> 00:31:21,360
i got you

858
00:31:21,360 --> 00:31:23,360
all right all right all right

859
00:31:23,360 --> 00:31:26,399
so i think we're just doing a uh live q

860
00:31:26,399 --> 00:31:28,000
a right now chris

861
00:31:28,000 --> 00:31:30,399
so um by the way good to have you here

862
00:31:30,399 --> 00:31:32,720
in person

863
00:31:32,720 --> 00:31:33,760
um

864
00:31:33,760 --> 00:31:35,760
as in person as i could be it just just

865
00:31:35,760 --> 00:31:37,679
one second before we get started there's

866
00:31:37,679 --> 00:31:38,960
something i need to do but i just want

867
00:31:38,960 --> 00:31:40,320
to make sure i don't forget it because

868
00:31:40,320 --> 00:31:42,240
i'm really bad with my to-do list and my

869
00:31:42,240 --> 00:31:46,360
goals so i just want to

870
00:31:50,399 --> 00:31:52,799
sounds good

871
00:31:52,799 --> 00:31:54,799
that's all the trolling you got chris

872
00:31:54,799 --> 00:31:57,200
that's it

873
00:31:57,360 --> 00:31:58,159
it's

874
00:31:58,159 --> 00:32:00,720
it you know it's a crazy year

875
00:32:00,720 --> 00:32:02,480
that's true

876
00:32:02,480 --> 00:32:03,600
it's true

877
00:32:03,600 --> 00:32:04,640
all right

878
00:32:04,640 --> 00:32:07,120
uh any questions comments or snide

879
00:32:07,120 --> 00:32:08,799
remarks if you had snide remarks we'll

880
00:32:08,799 --> 00:32:11,039
hand those off to chris at this point

881
00:32:11,039 --> 00:32:13,519
any questions or comments

882
00:32:13,519 --> 00:32:16,399
yes sir would you mind

883
00:32:16,399 --> 00:32:20,600
yes push to talk thank you

884
00:32:30,720 --> 00:32:33,120
yeah so the question was uh that script

885
00:32:33,120 --> 00:32:35,760
turns looks like it turns the idh node

886
00:32:35,760 --> 00:32:38,320
excuse me the forward node into an idh

887
00:32:38,320 --> 00:32:40,240
node could you actually do both at the

888
00:32:40,240 --> 00:32:42,480
same time

889
00:32:42,480 --> 00:32:45,279
it specifically disables the sensor

890
00:32:45,279 --> 00:32:47,519
services so you could technically turn

891
00:32:47,519 --> 00:32:49,600
them back on

892
00:32:49,600 --> 00:32:52,159
but one of the big things with idh is

893
00:32:52,159 --> 00:32:54,799
try to running running minimal services

894
00:32:54,799 --> 00:32:57,679
as much as possible as well as

895
00:32:57,679 --> 00:32:59,360
just from an attack service perspective

896
00:32:59,360 --> 00:33:01,120
just trying to run it as minimally as

897
00:33:01,120 --> 00:33:02,399
possible

898
00:33:02,399 --> 00:33:04,320
but you certainly could run both and

899
00:33:04,320 --> 00:33:06,240
that from a technical perspective i

900
00:33:06,240 --> 00:33:09,360
don't see why you couldn't do that

901
00:33:09,360 --> 00:33:11,440
you could certainly do that

902
00:33:11,440 --> 00:33:13,200
i would still recommend just from my

903
00:33:13,200 --> 00:33:14,399
background is

904
00:33:14,399 --> 00:33:16,320
one um

905
00:33:16,320 --> 00:33:17,919
you know one

906
00:33:17,919 --> 00:33:20,559
uh function per node is really what i

907
00:33:20,559 --> 00:33:22,080
would recommend and i don't know chris

908
00:33:22,080 --> 00:33:25,200
if you have any any comments on that

909
00:33:25,200 --> 00:33:27,039
uh no i pretty much agree with what you

910
00:33:27,039 --> 00:33:31,640
said i would keep those questions um

911
00:33:43,120 --> 00:33:45,840
yes yeah great question so

912
00:33:45,840 --> 00:33:47,440
if we're going to be minimizing the

913
00:33:47,440 --> 00:33:50,000
amount of resources anyways then the

914
00:33:50,000 --> 00:33:52,000
assumption is is the resources would be

915
00:33:52,000 --> 00:33:53,679
pretty minimal yeah so

916
00:33:53,679 --> 00:33:56,799
because we're setting up a the idh node

917
00:33:56,799 --> 00:33:57,840
after

918
00:33:57,840 --> 00:33:59,200
it's already been set up as a forward

919
00:33:59,200 --> 00:34:00,000
node

920
00:34:00,000 --> 00:34:01,519
initially you might have to bump up the

921
00:34:01,519 --> 00:34:04,000
resources just to kind of get it running

922
00:34:04,000 --> 00:34:05,679
but you could certainly reduce them and

923
00:34:05,679 --> 00:34:08,159
just run it as a vm i mean the doc

924
00:34:08,159 --> 00:34:10,719
excuse me the docker container for

925
00:34:10,719 --> 00:34:13,918
open canary is really really minimal um

926
00:34:13,918 --> 00:34:15,760
so you really will not need much

927
00:34:15,760 --> 00:34:18,879
resources to run that

928
00:34:18,879 --> 00:34:22,239
yep great question

929
00:34:23,040 --> 00:34:27,199
any other questions or comments

930
00:34:31,760 --> 00:34:35,639
yeah go ahead go ahead

931
00:34:46,879 --> 00:34:49,839
yes

932
00:34:56,000 --> 00:34:59,839
yeah so again the question is is

933
00:34:59,839 --> 00:35:02,800
ultimately long-term you would want to

934
00:35:02,800 --> 00:35:04,800
have multiple idh nodes because you're

935
00:35:04,800 --> 00:35:05,760
going to customize it for your

936
00:35:05,760 --> 00:35:08,160
environment you may have different

937
00:35:08,160 --> 00:35:11,760
environments different facilities

938
00:35:11,760 --> 00:35:13,280
because this is more of experimental

939
00:35:13,280 --> 00:35:14,800
proof of concept

940
00:35:14,800 --> 00:35:17,440
it was really for standing up you know

941
00:35:17,440 --> 00:35:19,920
one shot but you could certainly

942
00:35:19,920 --> 00:35:21,760
you know have multiple

943
00:35:21,760 --> 00:35:26,079
idh nodes in different locations and

944
00:35:26,079 --> 00:35:28,880
to reapply the configuration you may

945
00:35:28,880 --> 00:35:30,480
have to do some tweaks because right now

946
00:35:30,480 --> 00:35:32,800
it's just targeting kind of any idh note

947
00:35:32,800 --> 00:35:34,800
out there uh honestly i'd be happy to

948
00:35:34,800 --> 00:35:36,320
chat with you afterwards and maybe we

949
00:35:36,320 --> 00:35:38,079
can get some ideas on how to make it

950
00:35:38,079 --> 00:35:40,880
more specific

951
00:35:42,880 --> 00:35:45,280
oh no i totally agree and that's that's

952
00:35:45,280 --> 00:35:47,040
why i felt like after working through

953
00:35:47,040 --> 00:35:50,160
chris's book last year and with my

954
00:35:50,160 --> 00:35:51,760
background and running security gunning

955
00:35:51,760 --> 00:35:54,000
i can definitely see the power of an idh

956
00:35:54,000 --> 00:35:56,320
node internally and then deploying it

957
00:35:56,320 --> 00:35:57,760
with security guiding if i'm already

958
00:35:57,760 --> 00:36:00,240
deploying sensors in all my sites and

959
00:36:00,240 --> 00:36:02,240
let's throw a couple more idh nodes out

960
00:36:02,240 --> 00:36:04,800
there for just another another type of

961
00:36:04,800 --> 00:36:08,800
detection so right there with you

962
00:36:09,920 --> 00:36:13,160
yes sir

963
00:36:28,640 --> 00:36:32,200
oh my god

964
00:36:47,680 --> 00:36:50,079
yeah yeah so i believe the question i

965
00:36:50,079 --> 00:36:50,880
heard

966
00:36:50,880 --> 00:36:52,880
most of it i believe the question was is

967
00:36:52,880 --> 00:36:55,839
essentially

968
00:36:56,240 --> 00:36:58,320
there's more attack surface you you're

969
00:36:58,320 --> 00:37:01,119
you're adding a new uh type of node to

970
00:37:01,119 --> 00:37:03,200
your environment specifically to your

971
00:37:03,200 --> 00:37:05,440
security ending grid what's the risk and

972
00:37:05,440 --> 00:37:07,200
what are the concerns of adding this

973
00:37:07,200 --> 00:37:08,960
functionality connect you know if it

974
00:37:08,960 --> 00:37:11,280
gets compromised can they come back to

975
00:37:11,280 --> 00:37:12,560
the security ending grid is that the

976
00:37:12,560 --> 00:37:14,160
basic idea

977
00:37:14,160 --> 00:37:16,320
okay

978
00:37:16,320 --> 00:37:17,599
sure

979
00:37:17,599 --> 00:37:20,720
sure yeah so the the

980
00:37:20,720 --> 00:37:22,400
the idea is that anytime we add new

981
00:37:22,400 --> 00:37:23,920
functionality there is certainly going

982
00:37:23,920 --> 00:37:25,520
to be an increase in attack surface

983
00:37:25,520 --> 00:37:27,440
right and so um

984
00:37:27,440 --> 00:37:30,400
the difference here or the

985
00:37:30,400 --> 00:37:32,960
the idea is that the open canary and the

986
00:37:32,960 --> 00:37:34,880
way it's set up is that it's very low

987
00:37:34,880 --> 00:37:37,200
interaction and so the risk is much

988
00:37:37,200 --> 00:37:38,400
decreased

989
00:37:38,400 --> 00:37:40,880
unlike like chris mentioned you could

990
00:37:40,880 --> 00:37:42,960
certainly set up your own web server and

991
00:37:42,960 --> 00:37:45,040
kind of try to lock it down that would

992
00:37:45,040 --> 00:37:46,640
be much more difficult to make more

993
00:37:46,640 --> 00:37:48,240
secure than just simply starting out

994
00:37:48,240 --> 00:37:50,400
with like open canary

995
00:37:50,400 --> 00:37:52,320
secondly open conair is running as a

996
00:37:52,320 --> 00:37:55,760
docker container it only binds um it's

997
00:37:55,760 --> 00:37:57,760
like read only bind to configuration

998
00:37:57,760 --> 00:38:00,400
file on the host of the secured union

999
00:38:00,400 --> 00:38:02,880
host and it has read write to the

1000
00:38:02,880 --> 00:38:05,200
nsm logs folder so it can output its

1001
00:38:05,200 --> 00:38:07,520
logs and that's it so again it's just

1002
00:38:07,520 --> 00:38:09,520
running a docker container and then

1003
00:38:09,520 --> 00:38:11,280
there's some other kind of technical

1004
00:38:11,280 --> 00:38:13,520
limitations in play and so

1005
00:38:13,520 --> 00:38:16,480
chris and i have talked about this that

1006
00:38:16,480 --> 00:38:18,160
there's certainly risk anytime you add

1007
00:38:18,160 --> 00:38:20,000
additional functionality however we feel

1008
00:38:20,000 --> 00:38:22,160
like the risk is is pretty small from

1009
00:38:22,160 --> 00:38:23,520
that perspective

1010
00:38:23,520 --> 00:38:25,599
you have anything to add to that chris

1011
00:38:25,599 --> 00:38:27,280
yeah ultimately i certainly agree with

1012
00:38:27,280 --> 00:38:29,359
everything that you said there um you

1013
00:38:29,359 --> 00:38:30,960
know this is one of the reasons i really

1014
00:38:30,960 --> 00:38:32,880
like purpose-built cleaning pot tools

1015
00:38:32,880 --> 00:38:35,040
like open canary there are certainly use

1016
00:38:35,040 --> 00:38:37,040
cases where you might deploy you know a

1017
00:38:37,040 --> 00:38:39,200
real service for a honeypot so maybe you

1018
00:38:39,200 --> 00:38:41,280
actually deploy a system running ssh to

1019
00:38:41,280 --> 00:38:43,280
serve as an ssh cleaning plot but then

1020
00:38:43,280 --> 00:38:45,599
you get all the attacks that comes along

1021
00:38:45,599 --> 00:38:47,040
with that

1022
00:38:47,040 --> 00:38:48,640
and that that can be a little problem to

1023
00:38:48,640 --> 00:38:49,839
manage and something you have to think

1024
00:38:49,839 --> 00:38:52,160
through uh quite a bit uh with something

1025
00:38:52,160 --> 00:38:53,760
like this it's really not designed to

1026
00:38:53,760 --> 00:38:55,440
take a lot of complex input it's going

1027
00:38:55,440 --> 00:38:57,599
to be incredibly simple and when you

1028
00:38:57,599 --> 00:38:58,800
decrease the amount of input that

1029
00:38:58,800 --> 00:39:00,800
something can take you ultimately you're

1030
00:39:00,800 --> 00:39:03,119
decreasing the attack surface to a large

1031
00:39:03,119 --> 00:39:04,240
degree so

1032
00:39:04,240 --> 00:39:05,839
that's one of the reasons why like open

1033
00:39:05,839 --> 00:39:07,440
canary in tools like it's one reason we

1034
00:39:07,440 --> 00:39:09,760
chose that for this initial integration

1035
00:39:09,760 --> 00:39:11,200
it just really limits that attack

1036
00:39:11,200 --> 00:39:12,560
service very very dramatically when

1037
00:39:12,560 --> 00:39:14,880
these tools are built with honeypot use

1038
00:39:14,880 --> 00:39:17,280
in mind

1039
00:39:17,599 --> 00:39:21,960
good questions yes mr mike

1040
00:39:35,599 --> 00:39:37,440
yeah that's a great question mike so the

1041
00:39:37,440 --> 00:39:39,359
the question is is um should we deploy

1042
00:39:39,359 --> 00:39:41,599
this on like the public internet on uh

1043
00:39:41,599 --> 00:39:43,440
you know on a cloud provider and it's

1044
00:39:43,440 --> 00:39:45,680
like publicly accessible that's not it

1045
00:39:45,680 --> 00:39:47,920
goes back to what chris was talking

1046
00:39:47,920 --> 00:39:50,160
about early on in the presentation is

1047
00:39:50,160 --> 00:39:51,760
this is something that you're deploying

1048
00:39:51,760 --> 00:39:53,040
internally

1049
00:39:53,040 --> 00:39:54,400
you're not putting out on the public

1050
00:39:54,400 --> 00:39:56,800
internet right chris anything to add to

1051
00:39:56,800 --> 00:39:57,920
that

1052
00:39:57,920 --> 00:40:00,160
um i did not hear the question but it

1053
00:40:00,160 --> 00:40:01,200
sounds like we're talking internal

1054
00:40:01,200 --> 00:40:03,200
versus external deployment where where's

1055
00:40:03,200 --> 00:40:05,119
the best place to deploy something like

1056
00:40:05,119 --> 00:40:06,319
this

1057
00:40:06,319 --> 00:40:09,280
yeah so certainly inside the network

1058
00:40:09,280 --> 00:40:11,200
it's going to you know with opengl you

1059
00:40:11,200 --> 00:40:12,640
can have it mimic lots of different

1060
00:40:12,640 --> 00:40:15,280
things uh there's a lot that goes into

1061
00:40:15,280 --> 00:40:16,480
them certainly more than we can give you

1062
00:40:16,480 --> 00:40:18,560
here just now about how you and where

1063
00:40:18,560 --> 00:40:20,000
you choose to choose to deploy these

1064
00:40:20,000 --> 00:40:21,200
things but generally you're going to

1065
00:40:21,200 --> 00:40:22,560
mimic something you're either going to

1066
00:40:22,560 --> 00:40:23,680
try to

1067
00:40:23,680 --> 00:40:25,200
blend in with other things so that when

1068
00:40:25,200 --> 00:40:27,119
an attacker you know scans the whole

1069
00:40:27,119 --> 00:40:28,160
subnet they're going to they're going to

1070
00:40:28,160 --> 00:40:30,160
hit this or when they you know try to

1071
00:40:30,160 --> 00:40:31,920
log into a systems via rdp they're going

1072
00:40:31,920 --> 00:40:33,599
to see that this is one of many rdp

1073
00:40:33,599 --> 00:40:35,040
systems they might try to log into it

1074
00:40:35,040 --> 00:40:37,040
that way so that's blending in

1075
00:40:37,040 --> 00:40:38,880
the other opportunity here is really

1076
00:40:38,880 --> 00:40:41,040
standing out so take taking something

1077
00:40:41,040 --> 00:40:42,319
and creating a system that really just

1078
00:40:42,319 --> 00:40:44,240
stands out amongst everything else so

1079
00:40:44,240 --> 00:40:45,760
that an attacker will see that and think

1080
00:40:45,760 --> 00:40:47,920
it may be of interest or value so if

1081
00:40:47,920 --> 00:40:49,680
there are a lot

1082
00:40:49,680 --> 00:40:51,520
of window systems you know putting an

1083
00:40:51,520 --> 00:40:54,160
ssh honeypot out there if there

1084
00:40:54,160 --> 00:40:55,920
are a lot of linux systems putting on

1085
00:40:55,920 --> 00:40:57,839
rdp honeypot out there you can based on

1086
00:40:57,839 --> 00:40:59,680
systems service i'm just finding some

1087
00:40:59,680 --> 00:41:02,160
way to make it stand out beyond

1088
00:41:02,160 --> 00:41:04,000
the things that it's going to share or

1089
00:41:04,000 --> 00:41:05,760
be adjacent to on the network so those

1090
00:41:05,760 --> 00:41:07,280
are really kind of the big guiding

1091
00:41:07,280 --> 00:41:08,800
principles

1092
00:41:08,800 --> 00:41:09,920
that i use when i'm trying to figure out

1093
00:41:09,920 --> 00:41:11,440
where to deploy these things and what to

1094
00:41:11,440 --> 00:41:13,760
mimic

1095
00:41:13,920 --> 00:41:16,240
thanks chris thanks mike

1096
00:41:16,240 --> 00:41:18,720
one more question one a final final

1097
00:41:18,720 --> 00:41:21,040
question it's got to be a good one

1098
00:41:21,040 --> 00:41:24,079
yes all the way up there

1099
00:41:29,760 --> 00:41:33,079
there we go

1100
00:41:46,480 --> 00:41:49,480
is

1101
00:41:59,920 --> 00:42:03,920
yeah so i think the question was is um

1102
00:42:04,319 --> 00:42:06,720
from a network performance perspective

1103
00:42:06,720 --> 00:42:08,560
um is there any concerns if someone's

1104
00:42:08,560 --> 00:42:10,720
like trying to do brute forcing against

1105
00:42:10,720 --> 00:42:13,119
a service or something like that um so

1106
00:42:13,119 --> 00:42:15,440
to be clear

1107
00:42:15,440 --> 00:42:17,680
this forward node this converted forward

1108
00:42:17,680 --> 00:42:20,800
node is just simply sending the

1109
00:42:20,800 --> 00:42:22,640
logs from open canary so it's not

1110
00:42:22,640 --> 00:42:24,400
sending any pcap or anything like that

1111
00:42:24,400 --> 00:42:26,480
to the manager so it's just sending logs

1112
00:42:26,480 --> 00:42:28,079
so you're not going to get anything from

1113
00:42:28,079 --> 00:42:30,720
that perspective and if someone's brute

1114
00:42:30,720 --> 00:42:32,800
forcing this service

1115
00:42:32,800 --> 00:42:33,680
then they're certainly going to be

1116
00:42:33,680 --> 00:42:35,359
trying to brute force other services in

1117
00:42:35,359 --> 00:42:36,720
your environment better to brute force

1118
00:42:36,720 --> 00:42:38,800
this one so that you get alerts and you

1119
00:42:38,800 --> 00:42:40,960
know about it right that's kind of the

1120
00:42:40,960 --> 00:42:43,440
thought process there i think that was

1121
00:42:43,440 --> 00:42:46,079
hopefully that answers your question

1122
00:42:46,079 --> 00:42:47,680
yeah i would agree with that i mean the

1123
00:42:47,680 --> 00:42:49,200
the whole thing is someone trying to

1124
00:42:49,200 --> 00:42:50,720
force it we're going to know that

1125
00:42:50,720 --> 00:42:52,079
they're there right you're going to know

1126
00:42:52,079 --> 00:42:53,200
someone's doing that and then you can

1127
00:42:53,200 --> 00:42:54,960
investigate it so that's

1128
00:42:54,960 --> 00:42:56,079
that's that's one of the great things

1129
00:42:56,079 --> 00:42:58,720
about these approaches is if an attacker

1130
00:42:58,720 --> 00:42:59,839
wants to do something bad to this

1131
00:42:59,839 --> 00:43:01,920
honeypot beyond what it's supposed to do

1132
00:43:01,920 --> 00:43:03,359
or even within the scope of what it's

1133
00:43:03,359 --> 00:43:05,040
supposed to do they have to interact

1134
00:43:05,040 --> 00:43:06,720
with it and once they do that very first

1135
00:43:06,720 --> 00:43:07,839
interaction

1136
00:43:07,839 --> 00:43:09,440
which usually when you're probing it not

1137
00:43:09,440 --> 00:43:11,200
necessarily trying to do anything else

1138
00:43:11,200 --> 00:43:12,240
we're going to know that they're there

1139
00:43:12,240 --> 00:43:14,000
and we can investigate it and

1140
00:43:14,000 --> 00:43:15,280
i'm not going to say it's game over but

1141
00:43:15,280 --> 00:43:16,400
it's certainly the first step on the way

1142
00:43:16,400 --> 00:43:19,440
to game over for the bad guy

1143
00:43:19,839 --> 00:43:21,680
all right i think that's it thank you

1144
00:43:21,680 --> 00:43:24,000
all very much thanks chris um bill

1145
00:43:24,000 --> 00:43:27,040
anything to

1146
00:43:27,040 --> 00:43:28,160
okay

1147
00:43:28,160 --> 00:43:31,399
thank you

