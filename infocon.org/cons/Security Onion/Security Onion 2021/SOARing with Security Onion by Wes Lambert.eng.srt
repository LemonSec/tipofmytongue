1
00:00:05,920 --> 00:00:07,520
all right

2
00:00:07,520 --> 00:00:09,040
as doug and phil mentioned thank you

3
00:00:09,040 --> 00:00:10,800
guys for coming down especially those

4
00:00:10,800 --> 00:00:14,400
that you have traveled quite a long way

5
00:00:14,400 --> 00:00:15,839
definitely appreciate you all being here

6
00:00:15,839 --> 00:00:17,760
my name is wes lambert and i want to

7
00:00:17,760 --> 00:00:20,400
talk to you guys today about security in

8
00:00:20,400 --> 00:00:22,320
it and how you might leverage certain

9
00:00:22,320 --> 00:00:24,640
components in security union to

10
00:00:24,640 --> 00:00:26,960
facilitate automation and orchestration

11
00:00:26,960 --> 00:00:29,199
of maybe common tasks that you perform

12
00:00:29,199 --> 00:00:30,480
as an analyst

13
00:00:30,480 --> 00:00:33,040
or as an engineer

14
00:00:33,040 --> 00:00:33,760
so

15
00:00:33,760 --> 00:00:36,079
going into that

16
00:00:36,079 --> 00:00:38,000
i want to talk a little bit about

17
00:00:38,000 --> 00:00:39,360
security ending

18
00:00:39,360 --> 00:00:42,480
what is security

19
00:00:43,280 --> 00:00:44,559
i'm just kidding no we're not going to

20
00:00:44,559 --> 00:00:47,039
talk about security i mean right so all

21
00:00:47,039 --> 00:00:48,719
of you are here today because you may

22
00:00:48,719 --> 00:00:50,559
have used security in some form or use

23
00:00:50,559 --> 00:00:53,039
it daily right so we're not going to

24
00:00:53,039 --> 00:00:54,559
talk about security in it so much or

25
00:00:54,559 --> 00:00:56,399
getting to an explanation of that but i

26
00:00:56,399 --> 00:00:58,640
do want to talk a little bit about soar

27
00:00:58,640 --> 00:00:59,760
itself

28
00:00:59,760 --> 00:01:01,680
now sort typically

29
00:01:01,680 --> 00:01:04,319
we refer to it as security orchestration

30
00:01:04,319 --> 00:01:06,400
automation and response

31
00:01:06,400 --> 00:01:08,400
and a lot of times this is a really big

32
00:01:08,400 --> 00:01:10,240
buzzword a lot of people like to throw

33
00:01:10,240 --> 00:01:12,479
it around a lot of vendors do and

34
00:01:12,479 --> 00:01:13,840
talk about how they can help you do

35
00:01:13,840 --> 00:01:15,439
these cool things

36
00:01:15,439 --> 00:01:17,759
but it can be useful if used correctly

37
00:01:17,759 --> 00:01:20,479
or if used advantageously and

38
00:01:20,479 --> 00:01:22,000
judiciously

39
00:01:22,000 --> 00:01:23,040
so

40
00:01:23,040 --> 00:01:24,960
when we talk about soar we really want

41
00:01:24,960 --> 00:01:27,200
to focus on using that burden of

42
00:01:27,200 --> 00:01:29,360
analysis for analysts at least in our

43
00:01:29,360 --> 00:01:31,759
case and referring to security onion

44
00:01:31,759 --> 00:01:33,360
really want to focus on reducing those

45
00:01:33,360 --> 00:01:35,840
repetitive tasks those things that we do

46
00:01:35,840 --> 00:01:38,479
every day maybe if they are look ups to

47
00:01:38,479 --> 00:01:40,960
a particular service or you know

48
00:01:40,960 --> 00:01:42,799
something of that nature and we really

49
00:01:42,799 --> 00:01:45,119
want to provide that additional context

50
00:01:45,119 --> 00:01:47,920
very quickly immediately if we can but

51
00:01:47,920 --> 00:01:49,360
obviously that's that's somewhat

52
00:01:49,360 --> 00:01:51,920
difficult to do in some cases

53
00:01:51,920 --> 00:01:54,880
overall we want to seek to decrease that

54
00:01:54,880 --> 00:01:56,719
total time to resolution right when

55
00:01:56,719 --> 00:01:58,479
we're going from an investigation when

56
00:01:58,479 --> 00:02:00,399
we're looking at something in

57
00:02:00,399 --> 00:02:03,600
stock and hunt or alerts and then

58
00:02:03,600 --> 00:02:05,520
actually going you know coming to a

59
00:02:05,520 --> 00:02:07,280
determination from that event or that

60
00:02:07,280 --> 00:02:09,440
alert and that

61
00:02:09,440 --> 00:02:11,520
and really reduce that time there and

62
00:02:11,520 --> 00:02:13,440
there's a lot of other opportunities as

63
00:02:13,440 --> 00:02:15,599
well instead of just you know automating

64
00:02:15,599 --> 00:02:17,280
these analysts types of tasks things

65
00:02:17,280 --> 00:02:18,640
like threat intel

66
00:02:18,640 --> 00:02:20,800
uh things like you know your detection

67
00:02:20,800 --> 00:02:22,480
pipeline so there are a lot of other

68
00:02:22,480 --> 00:02:24,480
opportunities that you can approach here

69
00:02:24,480 --> 00:02:26,800
that we won't necessarily discuss

70
00:02:26,800 --> 00:02:30,560
but uh just keep that in mind

71
00:02:30,959 --> 00:02:33,280
now there are some free commercial soar

72
00:02:33,280 --> 00:02:36,319
platforms uh one of them is simplify you

73
00:02:36,319 --> 00:02:38,160
know cortex xor

74
00:02:38,160 --> 00:02:40,160
these are all have a community edition

75
00:02:40,160 --> 00:02:42,080
that you can sign up for and

76
00:02:42,080 --> 00:02:43,920
get going with pretty quickly

77
00:02:43,920 --> 00:02:45,680
and you know

78
00:02:45,680 --> 00:02:46,959
you don't necessarily have to pay a ton

79
00:02:46,959 --> 00:02:49,280
of money to get started uh

80
00:02:49,280 --> 00:02:51,280
experimenting with one of these

81
00:02:51,280 --> 00:02:52,800
so there are definitely a lot of options

82
00:02:52,800 --> 00:02:54,640
there

83
00:02:54,640 --> 00:02:56,000
additionally there are some free and

84
00:02:56,000 --> 00:02:58,640
open soar and automation platforms

85
00:02:58,640 --> 00:03:00,640
one of them being shuffle shuffle

86
00:03:00,640 --> 00:03:03,519
markets itself as a as an open source

87
00:03:03,519 --> 00:03:05,760
soar platform there's a lot of good

88
00:03:05,760 --> 00:03:07,040
stuff in shuffle if you want to mess

89
00:03:07,040 --> 00:03:08,159
with that

90
00:03:08,159 --> 00:03:10,480
n8n is another one it's one that i

91
00:03:10,480 --> 00:03:13,280
probably use the most i use the heaviest

92
00:03:13,280 --> 00:03:15,840
and it's not necessarily a sore platform

93
00:03:15,840 --> 00:03:18,159
but more of a just an automation or

94
00:03:18,159 --> 00:03:20,159
workflow automation platform

95
00:03:20,159 --> 00:03:22,480
and then node-red is also another one

96
00:03:22,480 --> 00:03:24,480
that you can get into the interface is

97
00:03:24,480 --> 00:03:27,840
not as pretty as inaden but it is pretty

98
00:03:27,840 --> 00:03:30,080
uh functionally

99
00:03:30,080 --> 00:03:33,840
pretty pretty good functionally at least

100
00:03:35,840 --> 00:03:36,879
now

101
00:03:36,879 --> 00:03:39,760
how do i soar good right you know how do

102
00:03:39,760 --> 00:03:41,599
i implement this in a way that's

103
00:03:41,599 --> 00:03:43,760
beneficial and i get the most bang for

104
00:03:43,760 --> 00:03:46,920
my buck

105
00:03:50,400 --> 00:03:51,920
well i'm just going to tell you this is

106
00:03:51,920 --> 00:03:53,519
not going to be the derek sorelander

107
00:03:53,519 --> 00:03:55,439
school for it pros who can't soar goods

108
00:03:55,439 --> 00:03:57,519
so this will not be a complete lecture

109
00:03:57,519 --> 00:03:59,680
on soar but really some basic kind of

110
00:03:59,680 --> 00:04:02,720
tenets and some basic ways that

111
00:04:02,720 --> 00:04:04,080
we can kind of ensure that we are

112
00:04:04,080 --> 00:04:07,120
focusing on the right things

113
00:04:07,760 --> 00:04:09,840
there's not really a universal answer it

114
00:04:09,840 --> 00:04:12,720
really depends on your overall use case

115
00:04:12,720 --> 00:04:14,640
and requirements

116
00:04:14,640 --> 00:04:16,160
you really want to focus on those most

117
00:04:16,160 --> 00:04:18,238
repetitive tasks and the things that are

118
00:04:18,238 --> 00:04:20,238
of the highest value the things that you

119
00:04:20,238 --> 00:04:22,000
see your analysts doing day in and day

120
00:04:22,000 --> 00:04:23,680
out again and again and you know they

121
00:04:23,680 --> 00:04:25,280
get tired of doing the same old thing

122
00:04:25,280 --> 00:04:26,800
over and over these are the things that

123
00:04:26,800 --> 00:04:28,639
you want to seek to automate whenever

124
00:04:28,639 --> 00:04:31,600
you can right whenever it makes sense

125
00:04:31,600 --> 00:04:33,280
these are the things that keep people

126
00:04:33,280 --> 00:04:36,000
sane and you know not quitting because

127
00:04:36,000 --> 00:04:37,600
they're looking at a hundred thousand

128
00:04:37,600 --> 00:04:40,479
alerts uh you know along with toonie

129
00:04:40,479 --> 00:04:41,919
looking at so many alerts and trying to

130
00:04:41,919 --> 00:04:45,359
do the same thing over and over

131
00:04:49,520 --> 00:04:51,680
so when we talk about

132
00:04:51,680 --> 00:04:53,919
how we soar well

133
00:04:53,919 --> 00:04:56,160
we really want to focus on our core

134
00:04:56,160 --> 00:04:58,960
playbooks and what i mean by this is how

135
00:04:58,960 --> 00:05:01,440
we approach certain types of incidents

136
00:05:01,440 --> 00:05:03,280
or certain events

137
00:05:03,280 --> 00:05:05,360
within our organization

138
00:05:05,360 --> 00:05:06,800
for example you know what is our

139
00:05:06,800 --> 00:05:08,560
standard procedure for an account

140
00:05:08,560 --> 00:05:11,360
compromise or for phishing or whatnot

141
00:05:11,360 --> 00:05:12,800
we want to have these planned out we

142
00:05:12,800 --> 00:05:15,919
want to have the logic drawn out before

143
00:05:15,919 --> 00:05:17,840
we attempt to automate these things

144
00:05:17,840 --> 00:05:18,720
because

145
00:05:18,720 --> 00:05:20,960
what ends up happening when a lot of

146
00:05:20,960 --> 00:05:22,880
people start trying to implement a soar

147
00:05:22,880 --> 00:05:25,520
platform or an orchestration platform

148
00:05:25,520 --> 00:05:27,199
is they look and see all these shiny

149
00:05:27,199 --> 00:05:29,039
features and they want to go set it up

150
00:05:29,039 --> 00:05:30,479
but they're not really sure what they

151
00:05:30,479 --> 00:05:32,160
want to do or they're not really sure

152
00:05:32,160 --> 00:05:33,520
how to do it

153
00:05:33,520 --> 00:05:34,960
and they may not even have a standard

154
00:05:34,960 --> 00:05:37,680
process in place right i mean they may

155
00:05:37,680 --> 00:05:40,320
not even know how to do this manually

156
00:05:40,320 --> 00:05:42,160
and it doesn't necessarily make a ton of

157
00:05:42,160 --> 00:05:44,400
sense to try to automate something that

158
00:05:44,400 --> 00:05:46,560
you don't can't do manually

159
00:05:46,560 --> 00:05:48,800
so the end result there ends up being

160
00:05:48,800 --> 00:05:50,720
that you get a lot of stakeholders and a

161
00:05:50,720 --> 00:05:52,000
lot of people who have bought into the

162
00:05:52,000 --> 00:05:53,360
products maybe

163
00:05:53,360 --> 00:05:54,800
you know from up top and have spent

164
00:05:54,800 --> 00:05:57,199
money on the team and on the platform

165
00:05:57,199 --> 00:05:59,440
and they're not really seeing any value

166
00:05:59,440 --> 00:06:00,880
or much value

167
00:06:00,880 --> 00:06:02,800
and it's hard to continue advocating for

168
00:06:02,800 --> 00:06:05,360
that platform's use right i mean if this

169
00:06:05,360 --> 00:06:08,000
thing's not doing what we expect it to

170
00:06:08,000 --> 00:06:11,840
do then why should we continue using it

171
00:06:13,680 --> 00:06:15,440
here is and i know this is kind of hard

172
00:06:15,440 --> 00:06:17,120
to read this is more for a later review

173
00:06:17,120 --> 00:06:18,000
but

174
00:06:18,000 --> 00:06:20,960
just an example of a playbook

175
00:06:20,960 --> 00:06:22,639
an account compromise playbook from the

176
00:06:22,639 --> 00:06:24,960
detection perspective

177
00:06:24,960 --> 00:06:26,479
and you can see here it's again it's

178
00:06:26,479 --> 00:06:27,919
kind of hard to see but you'll you'll

179
00:06:27,919 --> 00:06:29,759
see that there's and you know there's

180
00:06:29,759 --> 00:06:32,479
alerts like ticket from tickets or sim

181
00:06:32,479 --> 00:06:35,120
um and then there's you know iocs and

182
00:06:35,120 --> 00:06:36,720
these are all you know part of this

183
00:06:36,720 --> 00:06:39,039
chain of the detection and we're mapping

184
00:06:39,039 --> 00:06:40,960
out how you know we want to plan our

185
00:06:40,960 --> 00:06:43,120
detection and then also you know from

186
00:06:43,120 --> 00:06:45,680
the response phase and and and other

187
00:06:45,680 --> 00:06:48,000
phases we can also have this mapped out

188
00:06:48,000 --> 00:06:50,000
and then we can seek to apply that

189
00:06:50,000 --> 00:06:51,199
automation

190
00:06:51,199 --> 00:06:52,639
again you really want to have this at

191
00:06:52,639 --> 00:06:54,319
least this logical flow

192
00:06:54,319 --> 00:06:57,280
nail down and the technical capabilities

193
00:06:57,280 --> 00:06:59,440
available before you start trying to

194
00:06:59,440 --> 00:07:00,960
automate it because if you're trying to

195
00:07:00,960 --> 00:07:03,039
go set up this workflow in the soar

196
00:07:03,039 --> 00:07:05,199
platform and you don't even know how to

197
00:07:05,199 --> 00:07:07,120
hook into the downstream service or do

198
00:07:07,120 --> 00:07:08,800
that task

199
00:07:08,800 --> 00:07:10,639
you know manually then it doesn't make a

200
00:07:10,639 --> 00:07:12,000
lot of sense you're spending a lot of

201
00:07:12,000 --> 00:07:13,039
time

202
00:07:13,039 --> 00:07:17,159
doing unnecessary things

203
00:07:18,000 --> 00:07:21,520
now there are some example ir playbooks

204
00:07:21,520 --> 00:07:24,319
syntax ir is that's where i got this one

205
00:07:24,319 --> 00:07:25,840
there are simple kind of playbooks just

206
00:07:25,840 --> 00:07:27,400
drawn in

207
00:07:27,400 --> 00:07:29,840
draw.io so it's a fairly you know

208
00:07:29,840 --> 00:07:31,440
straightforward presentation you can go

209
00:07:31,440 --> 00:07:32,800
through and look at

210
00:07:32,800 --> 00:07:34,319
and then there are some other links here

211
00:07:34,319 --> 00:07:35,520
as well

212
00:07:35,520 --> 00:07:37,360
and uh you know just just kind of go

213
00:07:37,360 --> 00:07:39,039
through these if you don't already have

214
00:07:39,039 --> 00:07:40,400
playbooks in your organization kind of

215
00:07:40,400 --> 00:07:42,080
go through these and it'll help you get

216
00:07:42,080 --> 00:07:44,319
an idea of how to draw your own draw out

217
00:07:44,319 --> 00:07:46,080
your own play books

218
00:07:46,080 --> 00:07:47,440
and then you can start to apply that

219
00:07:47,440 --> 00:07:49,919
automation

220
00:07:52,400 --> 00:07:54,400
so we talked a little bit about sore

221
00:07:54,400 --> 00:07:56,720
kind of ran through that very quickly

222
00:07:56,720 --> 00:07:59,520
but how do we apply that to security and

223
00:07:59,520 --> 00:08:01,039
then or how do we leverage the

224
00:08:01,039 --> 00:08:03,599
facilities that security onion has

225
00:08:03,599 --> 00:08:06,319
to give us data or to take that data and

226
00:08:06,319 --> 00:08:08,400
get additional context or perform

227
00:08:08,400 --> 00:08:12,080
additional actions and act on that data

228
00:08:12,080 --> 00:08:13,120
there are a few here that i'll go

229
00:08:13,120 --> 00:08:14,479
through

230
00:08:14,479 --> 00:08:16,479
so actions is something that we

231
00:08:16,479 --> 00:08:19,120
implemented in security and in2 and it's

232
00:08:19,120 --> 00:08:21,520
really awesome

233
00:08:21,520 --> 00:08:24,160
it's it's a way basically to act on an

234
00:08:24,160 --> 00:08:26,800
event in an ad hoc fashion for example

235
00:08:26,800 --> 00:08:28,800
if you're going through hunt or you're

236
00:08:28,800 --> 00:08:30,400
going through

237
00:08:30,400 --> 00:08:32,240
the alerts pane and you're looking at

238
00:08:32,240 --> 00:08:34,479
something and you want to do something

239
00:08:34,479 --> 00:08:36,479
to that data or take that data and

240
00:08:36,479 --> 00:08:38,320
transform it in a certain way get a

241
00:08:38,320 --> 00:08:40,320
different perspective on that data or go

242
00:08:40,320 --> 00:08:42,159
perform some action right it's called an

243
00:08:42,159 --> 00:08:43,839
action

244
00:08:43,839 --> 00:08:45,920
so we can leverage those event details

245
00:08:45,920 --> 00:08:47,519
and that field data and we can go off

246
00:08:47,519 --> 00:08:50,240
and take that and do fun things with it

247
00:08:50,240 --> 00:08:53,839
right we can perform an http http post

248
00:08:53,839 --> 00:08:55,200
to a web hook

249
00:08:55,200 --> 00:08:57,040
so if we have a soar platform set up we

250
00:08:57,040 --> 00:08:58,640
can have a web hook listening and then

251
00:08:58,640 --> 00:08:59,920
post to that

252
00:08:59,920 --> 00:09:01,600
post that relevant data post those

253
00:09:01,600 --> 00:09:04,080
relevant details and then go from there

254
00:09:04,080 --> 00:09:08,360
and enrich that or do other things

255
00:09:09,680 --> 00:09:11,920
here's an example of a sock action

256
00:09:11,920 --> 00:09:14,160
configuration for an 8n

257
00:09:14,160 --> 00:09:16,080
so if you have anything set up and you

258
00:09:16,080 --> 00:09:18,480
have a web hook listening

259
00:09:18,480 --> 00:09:20,399
then you can use this you'll see at the

260
00:09:20,399 --> 00:09:23,600
bottom there is a links section and that

261
00:09:23,600 --> 00:09:25,760
is actually that's relative to the

262
00:09:25,760 --> 00:09:27,920
server because i have this in this

263
00:09:27,920 --> 00:09:30,000
instance set up on the same instance or

264
00:09:30,000 --> 00:09:32,720
the same server as security onion

265
00:09:32,720 --> 00:09:33,600
so

266
00:09:33,600 --> 00:09:36,240
sock knows to go you know to itself

267
00:09:36,240 --> 00:09:38,560
basically or to the root and then to

268
00:09:38,560 --> 00:09:40,720
enable and then hit that webhook test

269
00:09:40,720 --> 00:09:42,080
url

270
00:09:42,080 --> 00:09:43,839
and right here we're just posting some

271
00:09:43,839 --> 00:09:46,399
bogus values here but you can kind of

272
00:09:46,399 --> 00:09:49,200
see how you can take that data

273
00:09:49,200 --> 00:09:51,760
and us i see something equals blah one

274
00:09:51,760 --> 00:09:53,279
right there you can actually put in the

275
00:09:53,279 --> 00:09:56,080
body you know the entire event right or

276
00:09:56,080 --> 00:09:57,519
i'm sorry not the entire event but you

277
00:09:57,519 --> 00:09:59,680
know certain fields from the event

278
00:09:59,680 --> 00:10:02,079
or build on that right you can format

279
00:10:02,079 --> 00:10:04,000
that however you wish then have the

280
00:10:04,000 --> 00:10:06,560
downstream downstream application parse

281
00:10:06,560 --> 00:10:08,800
that

282
00:10:10,880 --> 00:10:13,200
another thing another way to do this is

283
00:10:13,200 --> 00:10:16,000
with the hive's own web hooks

284
00:10:16,000 --> 00:10:16,959
this is going to be a little bit

285
00:10:16,959 --> 00:10:19,200
different versus the actions it's going

286
00:10:19,200 --> 00:10:22,240
to be a continuous processing or a

287
00:10:22,240 --> 00:10:24,320
continuous notification

288
00:10:24,320 --> 00:10:25,040
so

289
00:10:25,040 --> 00:10:27,519
an http endpoint is going to receive a

290
00:10:27,519 --> 00:10:29,279
notification from the hive in this case

291
00:10:29,279 --> 00:10:30,959
if you have it configured

292
00:10:30,959 --> 00:10:33,279
and then it can act on it accordingly so

293
00:10:33,279 --> 00:10:35,360
if you have a case or you've added

294
00:10:35,360 --> 00:10:37,839
observables to a case or you know you've

295
00:10:37,839 --> 00:10:40,560
added other details if it's been updated

296
00:10:40,560 --> 00:10:43,040
you can send notifications for that to

297
00:10:43,040 --> 00:10:44,800
that endpoint and then have that

298
00:10:44,800 --> 00:10:47,360
automation platform act on that

299
00:10:47,360 --> 00:10:49,360
and then you can make other decisions

300
00:10:49,360 --> 00:10:51,440
based you know run workflow x based on

301
00:10:51,440 --> 00:10:54,959
that um you know with x or y z details

302
00:10:54,959 --> 00:10:56,640
so there's a lot of granularity you can

303
00:10:56,640 --> 00:11:00,279
get with that

304
00:11:00,720 --> 00:11:02,480
and here's an example of the hive web

305
00:11:02,480 --> 00:11:04,720
hook configuration you'll see here

306
00:11:04,720 --> 00:11:07,120
there's just a url that's pointing to

307
00:11:07,120 --> 00:11:09,600
the manager again i have this on the

308
00:11:09,600 --> 00:11:12,000
same node as security engine so i'm just

309
00:11:12,000 --> 00:11:15,680
pointing it to the port 5678 locally

310
00:11:15,680 --> 00:11:16,959
and then it's going off and it's sending

311
00:11:16,959 --> 00:11:18,959
that to n8n and then it's processing it

312
00:11:18,959 --> 00:11:21,200
however i wish i can go off from there i

313
00:11:21,200 --> 00:11:23,279
can go look at that data further do some

314
00:11:23,279 --> 00:11:25,519
lookups to you know maybe

315
00:11:25,519 --> 00:11:28,079
who is if i wish spam house i can go

316
00:11:28,079 --> 00:11:30,160
send an email i can go do whatever i

317
00:11:30,160 --> 00:11:32,399
wish

318
00:11:36,160 --> 00:11:39,040
another one would be elast alert so if

319
00:11:39,040 --> 00:11:41,760
you're heavily deviating from how we use

320
00:11:41,760 --> 00:11:44,000
playbook and how we implement detections

321
00:11:44,000 --> 00:11:45,680
in there and the last alert rules that

322
00:11:45,680 --> 00:11:48,240
it generates then you want to develop

323
00:11:48,240 --> 00:11:50,560
some native illast alert rules to handle

324
00:11:50,560 --> 00:11:52,880
that and this is going to be another

325
00:11:52,880 --> 00:11:54,720
continuous way

326
00:11:54,720 --> 00:11:56,399
to monitor and search against

327
00:11:56,399 --> 00:11:59,200
elasticsearch for any events of interest

328
00:11:59,200 --> 00:12:01,200
and it's a little bit

329
00:12:01,200 --> 00:12:03,040
more granular in this form as far as the

330
00:12:03,040 --> 00:12:05,040
pre-filtering because you're going to be

331
00:12:05,040 --> 00:12:06,480
able to

332
00:12:06,480 --> 00:12:08,160
set your criteria a little bit more

333
00:12:08,160 --> 00:12:09,680
specifically

334
00:12:09,680 --> 00:12:11,040
you're going to be able to filter out

335
00:12:11,040 --> 00:12:12,480
things and really look for the things

336
00:12:12,480 --> 00:12:13,920
that you care about most and then go

337
00:12:13,920 --> 00:12:15,920
from there and again you can use the

338
00:12:15,920 --> 00:12:19,040
http post alerter or a custom alerter to

339
00:12:19,040 --> 00:12:20,800
post that to the automation platform

340
00:12:20,800 --> 00:12:24,439
like in it in

341
00:12:27,600 --> 00:12:30,079
and here is an example rule for sending

342
00:12:30,079 --> 00:12:31,760
nids events to

343
00:12:31,760 --> 00:12:33,279
i'm sorry

344
00:12:33,279 --> 00:12:34,800
this is actually a yara so i've got it

345
00:12:34,800 --> 00:12:35,920
mixed up here

346
00:12:35,920 --> 00:12:39,120
a yara match to a soar platform and so

347
00:12:39,120 --> 00:12:41,360
what it'll look for here is

348
00:12:41,360 --> 00:12:43,200
i'm actually see if i can correct this

349
00:12:43,200 --> 00:12:45,680
real quick

350
00:12:49,519 --> 00:12:52,519
yara

351
00:12:57,040 --> 00:12:59,040
all right

352
00:12:59,040 --> 00:13:01,760
so that'll take those yara matches that

353
00:13:01,760 --> 00:13:03,200
come from strelka

354
00:13:03,200 --> 00:13:05,680
zeke and cerakata extract files from the

355
00:13:05,680 --> 00:13:07,680
network stream and if configured to do

356
00:13:07,680 --> 00:13:08,560
so

357
00:13:08,560 --> 00:13:10,000
whatever files

358
00:13:10,000 --> 00:13:12,800
that are extracted can be sent to stroka

359
00:13:12,800 --> 00:13:14,800
and stroka will apply yara rules to

360
00:13:14,800 --> 00:13:16,560
those so what we're doing here is we're

361
00:13:16,560 --> 00:13:18,959
taking those yara rule matches and we're

362
00:13:18,959 --> 00:13:20,560
sending those off we're doing some

363
00:13:20,560 --> 00:13:22,720
further investigation maybe we want to

364
00:13:22,720 --> 00:13:25,200
search a host or a group of hosts to see

365
00:13:25,200 --> 00:13:26,959
if that file exists

366
00:13:26,959 --> 00:13:28,399
you know based on the hash or some other

367
00:13:28,399 --> 00:13:30,959
value so we can do that

368
00:13:30,959 --> 00:13:34,680
with elast alert

369
00:13:35,519 --> 00:13:37,680
and there is another way to do this

370
00:13:37,680 --> 00:13:40,639
logstash is one way to do it i would

371
00:13:40,639 --> 00:13:44,639
probably recommend against this if you

372
00:13:44,639 --> 00:13:46,160
you don't have to

373
00:13:46,160 --> 00:13:48,399
it is a it would be a continuous fashion

374
00:13:48,399 --> 00:13:50,800
and you can use the http output plugin

375
00:13:50,800 --> 00:13:51,680
or

376
00:13:51,680 --> 00:13:53,120
there are several other plugins that you

377
00:13:53,120 --> 00:13:55,440
can leverage to post that event to the

378
00:13:55,440 --> 00:13:57,760
you know web hook or some other service

379
00:13:57,760 --> 00:13:59,279
and you can filter

380
00:13:59,279 --> 00:14:00,639
the benefit here is i guess you can

381
00:14:00,639 --> 00:14:02,399
filter and enrich these events before

382
00:14:02,399 --> 00:14:03,760
sending them so if there's any

383
00:14:03,760 --> 00:14:05,120
additional data that you want to get

384
00:14:05,120 --> 00:14:07,519
from security ending

385
00:14:07,519 --> 00:14:09,680
or filter then you can do that before

386
00:14:09,680 --> 00:14:11,839
sending it along but there are some

387
00:14:11,839 --> 00:14:13,519
things to be aware of from the manager

388
00:14:13,519 --> 00:14:15,360
and search node perspective being that

389
00:14:15,360 --> 00:14:16,720
if you're trying to forward events from

390
00:14:16,720 --> 00:14:17,920
the manager

391
00:14:17,920 --> 00:14:20,000
they are going to be typically the raw

392
00:14:20,000 --> 00:14:21,680
event that's going to come in from file

393
00:14:21,680 --> 00:14:22,959
view so

394
00:14:22,959 --> 00:14:24,399
you want to keep in mind that they will

395
00:14:24,399 --> 00:14:26,240
not be transformed in the same way or

396
00:14:26,240 --> 00:14:28,000
decorated in the same way as they would

397
00:14:28,000 --> 00:14:30,480
be if they're exiting a search node but

398
00:14:30,480 --> 00:14:32,560
then the downside to a search node would

399
00:14:32,560 --> 00:14:34,639
be that you're sending it from multiple

400
00:14:34,639 --> 00:14:36,320
nodes right so

401
00:14:36,320 --> 00:14:39,680
just something to keep in mind there

402
00:14:42,880 --> 00:14:45,600
and i also want to talk about escalation

403
00:14:45,600 --> 00:14:48,320
there is currently not a way to do this

404
00:14:48,320 --> 00:14:51,199
for escalation an official way

405
00:14:51,199 --> 00:14:52,800
and so please don't go try this in

406
00:14:52,800 --> 00:14:54,320
production but if you do want to play

407
00:14:54,320 --> 00:14:56,800
around with this you can

408
00:14:56,800 --> 00:14:58,959
you can change the url of the hive

409
00:14:58,959 --> 00:15:00,959
basically so instead of performing an

410
00:15:00,959 --> 00:15:02,800
escalation to the hive

411
00:15:02,800 --> 00:15:04,800
we can actually escalate that again to

412
00:15:04,800 --> 00:15:06,480
an automation platform

413
00:15:06,480 --> 00:15:08,480
so if instead of creating a case in the

414
00:15:08,480 --> 00:15:10,240
hive maybe we don't want to use the hive

415
00:15:10,240 --> 00:15:11,519
or maybe

416
00:15:11,519 --> 00:15:13,839
we can't use the hive in our environment

417
00:15:13,839 --> 00:15:16,000
this is one way to do this currently and

418
00:15:16,000 --> 00:15:17,920
be able to escalate those events up and

419
00:15:17,920 --> 00:15:19,600
have them disappear from the queue and

420
00:15:19,600 --> 00:15:23,040
actually be escalated to that platform

421
00:15:23,040 --> 00:15:24,959
and we do have some plans to separate

422
00:15:24,959 --> 00:15:26,320
this out eventually and make this a

423
00:15:26,320 --> 00:15:28,480
little more modular but again this is

424
00:15:28,480 --> 00:15:32,160
one way you can achieve this right now

425
00:15:35,440 --> 00:15:36,560
okay so

426
00:15:36,560 --> 00:15:38,839
how might we you know sending it to the

427
00:15:38,839 --> 00:15:40,720
platform you know i talked about some

428
00:15:40,720 --> 00:15:42,240
ways that we can send it to a sort

429
00:15:42,240 --> 00:15:43,279
platform

430
00:15:43,279 --> 00:15:45,360
to an automation platform

431
00:15:45,360 --> 00:15:47,199
you know what can we do once we get

432
00:15:47,199 --> 00:15:48,160
there

433
00:15:48,160 --> 00:15:50,399
i have a couple use cases and these are

434
00:15:50,399 --> 00:15:52,160
fairly simple but you can certainly

435
00:15:52,160 --> 00:15:54,240
expand on these as you experiment and as

436
00:15:54,240 --> 00:15:55,199
you

437
00:15:55,199 --> 00:15:56,639
kind of get the juices flowing and think

438
00:15:56,639 --> 00:15:57,920
through this

439
00:15:57,920 --> 00:15:58,800
but

440
00:15:58,800 --> 00:16:00,639
one of these is contextual enrichment

441
00:16:00,639 --> 00:16:02,399
which is going to be pretty i think

442
00:16:02,399 --> 00:16:04,079
pretty important and i think something

443
00:16:04,079 --> 00:16:06,720
that as analysts we always seek to get

444
00:16:06,720 --> 00:16:08,880
that additional context whether it be

445
00:16:08,880 --> 00:16:11,199
pivoting from an action typically either

446
00:16:11,199 --> 00:16:12,720
going over to virustotal and looking

447
00:16:12,720 --> 00:16:14,240
something up for additional context see

448
00:16:14,240 --> 00:16:16,160
if it's bad or not

449
00:16:16,160 --> 00:16:17,759
we can do the same thing we can run

450
00:16:17,759 --> 00:16:20,079
cortex analyzers automatically against

451
00:16:20,079 --> 00:16:21,600
event details if we have a list of

452
00:16:21,600 --> 00:16:23,440
analyzers we want to run automatically

453
00:16:23,440 --> 00:16:24,880
against an event

454
00:16:24,880 --> 00:16:26,880
we can do this from any of those

455
00:16:26,880 --> 00:16:28,800
mechanisms that i mentioned right so

456
00:16:28,800 --> 00:16:32,079
from the action from the escalation from

457
00:16:32,079 --> 00:16:34,240
the log stash whatever

458
00:16:34,240 --> 00:16:36,079
we can send to that web hook and maybe

459
00:16:36,079 --> 00:16:38,079
look up at spam house if it's been

460
00:16:38,079 --> 00:16:40,399
blacklisted if it's not clean then we

461
00:16:40,399 --> 00:16:42,560
can send an email or if we do still want

462
00:16:42,560 --> 00:16:44,000
to create a case in the hive then we can

463
00:16:44,000 --> 00:16:45,600
do so at that point

464
00:16:45,600 --> 00:16:47,440
the list goes on and on as far as how

465
00:16:47,440 --> 00:16:51,040
you could customize this and this is um

466
00:16:51,040 --> 00:16:53,600
this is n8n in case i didn't clarify

467
00:16:53,600 --> 00:16:56,000
earlier this is an example of one of

468
00:16:56,000 --> 00:16:59,120
those ended in workflows

469
00:17:01,759 --> 00:17:04,000
now another use case the second use case

470
00:17:04,000 --> 00:17:05,439
that i'm going to mention here is

471
00:17:05,439 --> 00:17:09,679
actually searching hosts for evidence

472
00:17:12,959 --> 00:17:14,799
and then acting on that actually

473
00:17:14,799 --> 00:17:16,480
performing a remediation or other

474
00:17:16,480 --> 00:17:19,760
response actions right we can take

475
00:17:19,760 --> 00:17:21,839
uh you know action

476
00:17:21,839 --> 00:17:23,520
we can for example search for a file

477
00:17:23,520 --> 00:17:25,839
name or a hash on an end point or across

478
00:17:25,839 --> 00:17:28,319
all of our endpoints at once

479
00:17:28,319 --> 00:17:30,240
we can quarantine if detected we can

480
00:17:30,240 --> 00:17:32,640
remove scheduled tasks

481
00:17:32,640 --> 00:17:35,039
and this example right here is using the

482
00:17:35,039 --> 00:17:37,039
hive so

483
00:17:37,039 --> 00:17:39,919
this is an example of the hive web hooks

484
00:17:39,919 --> 00:17:41,600
and then from here we're checking the

485
00:17:41,600 --> 00:17:43,600
observable type and we're saying

486
00:17:43,600 --> 00:17:45,200
all right if observable type is file

487
00:17:45,200 --> 00:17:46,400
name then we're going to go do this

488
00:17:46,400 --> 00:17:47,919
observable type is hash then we're going

489
00:17:47,919 --> 00:17:49,200
to go do this

490
00:17:49,200 --> 00:17:50,480
and you can you can apply that

491
00:17:50,480 --> 00:17:52,320
granularity and branch off in many

492
00:17:52,320 --> 00:17:55,760
different directions if you need to

493
00:17:58,960 --> 00:18:00,400
and then

494
00:18:00,400 --> 00:18:02,559
if you want to experiment with this you

495
00:18:02,559 --> 00:18:05,840
can try out soar lab which is the

496
00:18:05,840 --> 00:18:07,760
security onion automation and response

497
00:18:07,760 --> 00:18:10,320
lab this is something we put together

498
00:18:10,320 --> 00:18:12,400
not long ago just trying to demonstrate

499
00:18:12,400 --> 00:18:14,799
how you can leverage a soar platform or

500
00:18:14,799 --> 00:18:16,960
an automation platform in conjunction

501
00:18:16,960 --> 00:18:17,760
with

502
00:18:17,760 --> 00:18:19,760
an edr like velociraptor which is an

503
00:18:19,760 --> 00:18:21,919
open source edr

504
00:18:21,919 --> 00:18:24,240
and visibility platform now i'll say

505
00:18:24,240 --> 00:18:27,919
that this is not for production use so

506
00:18:27,919 --> 00:18:30,400
you know use it at your own risk but it

507
00:18:30,400 --> 00:18:31,840
does give you an idea of how this could

508
00:18:31,840 --> 00:18:34,080
be implemented and this could eventually

509
00:18:34,080 --> 00:18:36,480
morph into a more mature implementation

510
00:18:36,480 --> 00:18:38,799
later

511
00:18:40,960 --> 00:18:42,640
but for now

512
00:18:42,640 --> 00:18:44,960
it's demo time right so we're going to

513
00:18:44,960 --> 00:18:46,960
pray to the demo gods

514
00:18:46,960 --> 00:18:48,160
and we're going to hope that everything

515
00:18:48,160 --> 00:18:49,600
works as planned

516
00:18:49,600 --> 00:18:51,840
we've done our sacrifices

517
00:18:51,840 --> 00:18:53,200
so

518
00:18:53,200 --> 00:18:56,840
let's go for it

519
00:18:59,120 --> 00:19:02,639
anybody have any questions so far

520
00:19:04,480 --> 00:19:08,039
all right yep

521
00:19:18,000 --> 00:19:21,000
yep

522
00:19:35,039 --> 00:19:36,480
sure i think that'd be a great question

523
00:19:36,480 --> 00:19:37,919
for them so i'll save that for later but

524
00:19:37,919 --> 00:19:40,559
thank you for that

525
00:19:41,039 --> 00:19:42,720
all right so

526
00:19:42,720 --> 00:19:45,200
make sure you can see my screen here

527
00:19:45,200 --> 00:19:48,160
all right so right now what i'm doing is

528
00:19:48,160 --> 00:19:50,480
i actually stood up sore lab i ran

529
00:19:50,480 --> 00:19:52,400
through the install script

530
00:19:52,400 --> 00:19:55,039
and what this did was it set up on top

531
00:19:55,039 --> 00:19:58,240
of security engine a version of n8n the

532
00:19:58,240 --> 00:19:59,840
automation platform

533
00:19:59,840 --> 00:20:02,159
and then also velociraptor so i have a

534
00:20:02,159 --> 00:20:05,200
velociraptor server on here as well

535
00:20:05,200 --> 00:20:08,559
and what i've done is in the you know in

536
00:20:08,559 --> 00:20:09,440
the

537
00:20:09,440 --> 00:20:10,960
in the sore lab we have a video that

538
00:20:10,960 --> 00:20:12,159
goes along with the sore lab and this

539
00:20:12,159 --> 00:20:14,320
was based off of an article where i

540
00:20:14,320 --> 00:20:15,520
demonstrate

541
00:20:15,520 --> 00:20:16,320
a

542
00:20:16,320 --> 00:20:18,559
suspicious file that stroka was able to

543
00:20:18,559 --> 00:20:20,640
detect with a yar rule

544
00:20:20,640 --> 00:20:21,360
so

545
00:20:21,360 --> 00:20:23,440
if we look real quick let me just close

546
00:20:23,440 --> 00:20:25,679
this

547
00:20:25,919 --> 00:20:27,679
i'll actually show you this

548
00:20:27,679 --> 00:20:32,360
so this suspicious file

549
00:20:34,720 --> 00:20:37,679
it's actually right here

550
00:20:37,679 --> 00:20:39,200
i can type

551
00:20:39,200 --> 00:20:42,559
this was this poker.bat file and what

552
00:20:42,559 --> 00:20:44,640
happened here was that

553
00:20:44,640 --> 00:20:46,480
you know an adversary where simulate an

554
00:20:46,480 --> 00:20:48,640
adversary attempting to obfuscate the

555
00:20:48,640 --> 00:20:52,320
intention of this script

556
00:20:52,320 --> 00:20:56,080
and so we have basically stroka watching

557
00:20:56,080 --> 00:20:57,039
the

558
00:20:57,039 --> 00:20:58,400
files that come down from the network

559
00:20:58,400 --> 00:21:00,159
from the conceracata

560
00:21:00,159 --> 00:21:02,000
and then it's going to run a yara

561
00:21:02,000 --> 00:21:03,840
against those files whenever those files

562
00:21:03,840 --> 00:21:05,919
are copied over into its unprocessed

563
00:21:05,919 --> 00:21:07,200
directory

564
00:21:07,200 --> 00:21:08,559
and this file right here is just an

565
00:21:08,559 --> 00:21:10,400
example of something that was generated

566
00:21:10,400 --> 00:21:12,080
from one of the resources and the sore

567
00:21:12,080 --> 00:21:14,720
lab repo

568
00:21:15,360 --> 00:21:17,200
and

569
00:21:17,200 --> 00:21:18,880
oh come on

570
00:21:18,880 --> 00:21:21,760
so if i do

571
00:21:26,799 --> 00:21:29,360
right so just this obfuscated bat dot pi

572
00:21:29,360 --> 00:21:32,080
and this just creates a payload bat file

573
00:21:32,080 --> 00:21:34,159
and it it essentially runs through it's

574
00:21:34,159 --> 00:21:36,480
just running calc.exe on the back end

575
00:21:36,480 --> 00:21:38,320
but for now we're going to say it's

576
00:21:38,320 --> 00:21:40,480
malicious right it's bad

577
00:21:40,480 --> 00:21:41,280
so

578
00:21:41,280 --> 00:21:43,120
we generated this poker.bat file from

579
00:21:43,120 --> 00:21:46,159
this script and then we've simulated the

580
00:21:46,159 --> 00:21:48,240
uh you know the processing of z

581
00:21:48,240 --> 00:21:50,400
conservacata pulling that down and we've

582
00:21:50,400 --> 00:21:52,559
copied that into the unprocessed

583
00:21:52,559 --> 00:21:54,799
directory for stroka

584
00:21:54,799 --> 00:21:56,799
and what stroke has done is it's run

585
00:21:56,799 --> 00:21:58,480
yara against this

586
00:21:58,480 --> 00:22:00,720
and it's determined that this file is

587
00:22:00,720 --> 00:22:01,679
bad

588
00:22:01,679 --> 00:22:03,039
right so

589
00:22:03,039 --> 00:22:06,000
and when i say bad what happens is

590
00:22:06,000 --> 00:22:07,840
we have an event in here if i exclude

591
00:22:07,840 --> 00:22:09,520
the osec events

592
00:22:09,520 --> 00:22:11,919
we'll see this event or this alert right

593
00:22:11,919 --> 00:22:13,600
here this mouse command script

594
00:22:13,600 --> 00:22:15,520
obfuscated bat

595
00:22:15,520 --> 00:22:19,039
if we drill down into that

596
00:22:22,400 --> 00:22:23,840
all right we can see that this is just

597
00:22:23,840 --> 00:22:25,440
an alert generated from stroka and the

598
00:22:25,440 --> 00:22:27,039
severity and whatnot and then we can see

599
00:22:27,039 --> 00:22:28,480
that it's a batch file

600
00:22:28,480 --> 00:22:29,919
right we can see the various scanners

601
00:22:29,919 --> 00:22:31,600
that struck has used to try to identify

602
00:22:31,600 --> 00:22:33,440
this file you can see some other

603
00:22:33,440 --> 00:22:37,200
characteristics and if we scroll down

604
00:22:37,200 --> 00:22:38,640
we can see some keywords and it's

605
00:22:38,640 --> 00:22:39,760
determined that it's pulled out of the

606
00:22:39,760 --> 00:22:40,880
batch file

607
00:22:40,880 --> 00:22:43,039
we also see some text and and some other

608
00:22:43,039 --> 00:22:44,400
good stuff there

609
00:22:44,400 --> 00:22:46,720
but the main thing here is that you know

610
00:22:46,720 --> 00:22:48,559
we've kind of taken this stream from the

611
00:22:48,559 --> 00:22:50,480
network network data

612
00:22:50,480 --> 00:22:52,480
right we've taken it to the file level

613
00:22:52,480 --> 00:22:55,120
we've now detected this file that we

614
00:22:55,120 --> 00:22:57,600
think is bad or could be bad

615
00:22:57,600 --> 00:22:59,200
and then we want to go off and do

616
00:22:59,200 --> 00:23:02,159
something further with that

617
00:23:02,159 --> 00:23:04,799
and how do we do that well

618
00:23:04,799 --> 00:23:07,039
so what we can do is you know i

619
00:23:07,039 --> 00:23:08,960
mentioned earlier we can have a workflow

620
00:23:08,960 --> 00:23:11,280
to search across our enterprise for

621
00:23:11,280 --> 00:23:13,679
something like a hash or a file name

622
00:23:13,679 --> 00:23:15,280
so that's exactly what we have set up

623
00:23:15,280 --> 00:23:16,480
here

624
00:23:16,480 --> 00:23:19,600
in inaden we have this workflow and it's

625
00:23:19,600 --> 00:23:21,840
waiting right here this web hook is see

626
00:23:21,840 --> 00:23:23,200
if i can move it over to the side of the

627
00:23:23,200 --> 00:23:24,240
screen

628
00:23:24,240 --> 00:23:26,320
this web hook is waiting for us to act

629
00:23:26,320 --> 00:23:28,000
on it and i'll show you how we're going

630
00:23:28,000 --> 00:23:29,840
to act on it in just a minute

631
00:23:29,840 --> 00:23:32,080
but it's going to recede this in here at

632
00:23:32,080 --> 00:23:34,080
the web hook and it's going to route by

633
00:23:34,080 --> 00:23:36,320
observable type so if it's a hash it's

634
00:23:36,320 --> 00:23:38,400
going to go to that zeroth endpoint and

635
00:23:38,400 --> 00:23:40,159
if it's a file name it's going to go to

636
00:23:40,159 --> 00:23:42,720
the number one endpoint right there

637
00:23:42,720 --> 00:23:43,840
and then we're going to perform that

638
00:23:43,840 --> 00:23:46,480
hash hunt or the file name hunt in

639
00:23:46,480 --> 00:23:48,480
velociraptor so we're going to take any

640
00:23:48,480 --> 00:23:50,320
host that we have configured as a client

641
00:23:50,320 --> 00:23:52,240
to velociraptor and then we're going to

642
00:23:52,240 --> 00:23:53,840
search and see if that file exists on

643
00:23:53,840 --> 00:23:55,919
there and then

644
00:23:55,919 --> 00:23:57,360
let's see

645
00:23:57,360 --> 00:23:58,960
you actually can't see here but i'll

646
00:23:58,960 --> 00:24:00,799
show you in just a minute but

647
00:24:00,799 --> 00:24:03,039
this workflow here just calls the pi

648
00:24:03,039 --> 00:24:04,720
velociraptor

649
00:24:04,720 --> 00:24:08,000
executable right or the binary and

650
00:24:08,000 --> 00:24:10,159
this is going to create a hunt

651
00:24:10,159 --> 00:24:13,200
and search for that hash

652
00:24:16,080 --> 00:24:17,520
and the way that we're going to act on

653
00:24:17,520 --> 00:24:19,840
that

654
00:24:20,640 --> 00:24:22,080
we're going to execute this test

655
00:24:22,080 --> 00:24:23,120
workflow

656
00:24:23,120 --> 00:24:24,320
because we're not necessarily running it

657
00:24:24,320 --> 00:24:25,679
production we want to test it out and

658
00:24:25,679 --> 00:24:28,320
see how it works

659
00:24:29,039 --> 00:24:31,200
and you know i'm looking at this event

660
00:24:31,200 --> 00:24:32,960
and you know i'm trying to think of you

661
00:24:32,960 --> 00:24:34,880
know what's a great way to do that right

662
00:24:34,880 --> 00:24:36,720
we mentioned hash so

663
00:24:36,720 --> 00:24:38,320
you know i know mdd5 isn't the greatest

664
00:24:38,320 --> 00:24:40,000
but for the sake of demonstration i'll

665
00:24:40,000 --> 00:24:42,559
just choose md5

666
00:24:42,559 --> 00:24:45,120
and i'll choose actions

667
00:24:45,120 --> 00:24:47,279
and what we can see here is that i've

668
00:24:47,279 --> 00:24:50,480
actually added an additional action for

669
00:24:50,480 --> 00:24:52,799
velociraptor and for the workflow

670
00:24:52,799 --> 00:24:55,200
um to where we can find this right we

671
00:24:55,200 --> 00:24:57,279
can search for this hash and then if we

672
00:24:57,279 --> 00:24:59,520
find the hash maybe we contain the end

673
00:24:59,520 --> 00:25:01,200
point maybe we try to quarantine it

674
00:25:01,200 --> 00:25:02,720
right and then do some further

675
00:25:02,720 --> 00:25:03,919
investigation

676
00:25:03,919 --> 00:25:05,039
obviously you'd want to use this

677
00:25:05,039 --> 00:25:06,720
judiciously there are some cases where

678
00:25:06,720 --> 00:25:08,240
you wouldn't want to do this

679
00:25:08,240 --> 00:25:10,240
you can obviously label certain clients

680
00:25:10,240 --> 00:25:12,320
or certain servers to not do this type

681
00:25:12,320 --> 00:25:13,200
of thing

682
00:25:13,200 --> 00:25:15,760
but we'll continue on with the demo

683
00:25:15,760 --> 00:25:17,120
so i'm just going to click find the

684
00:25:17,120 --> 00:25:19,200
contain and let's go back over here and

685
00:25:19,200 --> 00:25:20,720
just note that our web we're still

686
00:25:20,720 --> 00:25:23,120
waiting for the web hook call here

687
00:25:23,120 --> 00:25:24,400
and we're just going to click find and

688
00:25:24,400 --> 00:25:26,720
contain

689
00:25:26,720 --> 00:25:28,320
all right you can see the status changed

690
00:25:28,320 --> 00:25:29,520
over here

691
00:25:29,520 --> 00:25:31,360
right and we can see that the web hook

692
00:25:31,360 --> 00:25:33,919
is fired the route has fired and the

693
00:25:33,919 --> 00:25:37,200
hash hunt has fired

694
00:25:37,200 --> 00:25:40,240
all right and now

695
00:25:41,360 --> 00:25:44,639
if we look over here

696
00:25:45,120 --> 00:25:48,000
we'll just go over here to the hunt

697
00:25:48,000 --> 00:25:50,480
and it might have been uh oh i think my

698
00:25:50,480 --> 00:25:52,400
other vm might

699
00:25:52,400 --> 00:25:53,919
yeah okay let me start it back up real

700
00:25:53,919 --> 00:25:54,720
quick

701
00:25:54,720 --> 00:25:58,480
my bad demo fail number one

702
00:25:58,480 --> 00:26:00,240
all right we'll get to it

703
00:26:00,240 --> 00:26:03,039
don't you worry

704
00:26:03,520 --> 00:26:05,039
don't you worry oh look at that

705
00:26:05,039 --> 00:26:06,960
beautiful resolution

706
00:26:06,960 --> 00:26:08,480
all right

707
00:26:08,480 --> 00:26:11,120
so now i'm just i pop this thing back up

708
00:26:11,120 --> 00:26:13,039
it has a tendency to go and sleep on me

709
00:26:13,039 --> 00:26:15,600
sometimes so

710
00:26:15,600 --> 00:26:17,120
all right so what we're gonna do here

711
00:26:17,120 --> 00:26:18,880
i'm just gonna jog the service real

712
00:26:18,880 --> 00:26:20,880
quick

713
00:26:20,880 --> 00:26:22,799
just because um

714
00:26:22,799 --> 00:26:24,080
well actually i should pick up here in a

715
00:26:24,080 --> 00:26:24,960
minute

716
00:26:24,960 --> 00:26:27,520
let's do this

717
00:26:28,080 --> 00:26:30,320
and so what will happen is clients will

718
00:26:30,320 --> 00:26:32,879
check in

719
00:26:33,120 --> 00:26:37,559
let me go ahead and just refresh this

720
00:26:40,080 --> 00:26:42,080
and i think it's because it slept on me

721
00:26:42,080 --> 00:26:45,600
let me just go and jog it real quick

722
00:26:47,840 --> 00:26:50,158
this

723
00:26:50,480 --> 00:26:52,320
just for demo purposes because sometimes

724
00:26:52,320 --> 00:26:53,760
it'll back off and then it'll try to hit

725
00:26:53,760 --> 00:26:55,039
the server again so it might take a

726
00:26:55,039 --> 00:26:56,400
second

727
00:26:56,400 --> 00:26:58,000
but we'll do this

728
00:26:58,000 --> 00:26:59,919
all right

729
00:26:59,919 --> 00:27:02,799
and then let's go and see

730
00:27:02,799 --> 00:27:04,159
in the hunt we're just waiting on the

731
00:27:04,159 --> 00:27:05,600
schedule we'll just click kick off

732
00:27:05,600 --> 00:27:07,600
another one for fun just to do this just

733
00:27:07,600 --> 00:27:08,880
because it was

734
00:27:08,880 --> 00:27:12,880
sleeping when i was doing that

735
00:27:13,520 --> 00:27:15,440
all right and we'll just go find the

736
00:27:15,440 --> 00:27:17,600
contain

737
00:27:17,600 --> 00:27:18,840
that workflow

738
00:27:18,840 --> 00:27:21,760
run and now we see that one was

739
00:27:21,760 --> 00:27:22,799
scheduled

740
00:27:22,799 --> 00:27:24,799
right we see a client was scheduled for

741
00:27:24,799 --> 00:27:27,200
this hunt

742
00:27:27,279 --> 00:27:29,840
and we see one row was returned and what

743
00:27:29,840 --> 00:27:32,320
that means is that it found a result

744
00:27:32,320 --> 00:27:33,919
right so it actually found something on

745
00:27:33,919 --> 00:27:35,520
the endpoint

746
00:27:35,520 --> 00:27:38,080
okay so if we go over to the client

747
00:27:38,080 --> 00:27:39,120
itself

748
00:27:39,120 --> 00:27:42,000
and look at the collected data

749
00:27:42,000 --> 00:27:45,360
we can actually see here

750
00:27:45,360 --> 00:27:47,679
that that file that poker.bat file that

751
00:27:47,679 --> 00:27:49,120
we were looking for

752
00:27:49,120 --> 00:27:51,360
was actually returned we noticed that it

753
00:27:51,360 --> 00:27:53,600
was on this host and we can actually

754
00:27:53,600 --> 00:27:55,760
keep a rolling database uh it's a little

755
00:27:55,760 --> 00:27:57,360
specific to velociraptor but we can keep

756
00:27:57,360 --> 00:27:59,120
a rolling database of those hashes so

757
00:27:59,120 --> 00:28:01,120
that those files do roll off we can

758
00:28:01,120 --> 00:28:02,480
identify if they were there at some

759
00:28:02,480 --> 00:28:04,159
point

760
00:28:04,159 --> 00:28:05,760
but we also see that you know we got

761
00:28:05,760 --> 00:28:07,440
that hit we saw that there was a match

762
00:28:07,440 --> 00:28:08,320
there

763
00:28:08,320 --> 00:28:10,880
we also see

764
00:28:10,880 --> 00:28:13,520
that the host was quarantined so

765
00:28:13,520 --> 00:28:15,039
now

766
00:28:15,039 --> 00:28:17,440
what happens is that only velociraptor

767
00:28:17,440 --> 00:28:18,960
can communicate with this host so we can

768
00:28:18,960 --> 00:28:20,799
perform additional remote forensics if

769
00:28:20,799 --> 00:28:22,000
we need to

770
00:28:22,000 --> 00:28:24,480
we can drill down even more

771
00:28:24,480 --> 00:28:26,559
right and then

772
00:28:26,559 --> 00:28:28,720
we wanted you know either even further

773
00:28:28,720 --> 00:28:30,480
confirmation

774
00:28:30,480 --> 00:28:32,320
in the action we could pivot to another

775
00:28:32,320 --> 00:28:34,399
window we could open another tab to this

776
00:28:34,399 --> 00:28:35,360
screen

777
00:28:35,360 --> 00:28:37,760
or we can also have

778
00:28:37,760 --> 00:28:40,559
an additional alert populated

779
00:28:40,559 --> 00:28:42,720
for the windows remediation quarantine

780
00:28:42,720 --> 00:28:45,120
inside of security onion letting us know

781
00:28:45,120 --> 00:28:47,440
that this host was quarantined now we

782
00:28:47,440 --> 00:28:49,760
need to go check it out

783
00:28:49,760 --> 00:28:52,000
right so

784
00:28:52,000 --> 00:28:54,720
it's pretty cool to be able to go from

785
00:28:54,720 --> 00:28:56,320
something like actions

786
00:28:56,320 --> 00:28:58,399
or maybe in somewhat of a more automated

787
00:28:58,399 --> 00:29:01,120
fashion once you've matured a bit

788
00:29:01,120 --> 00:29:03,760
and take this data act on these events

789
00:29:03,760 --> 00:29:05,440
and the data from these events and go

790
00:29:05,440 --> 00:29:07,279
perform these types of operations and

791
00:29:07,279 --> 00:29:08,799
kind of speed up

792
00:29:08,799 --> 00:29:10,799
uh you know i mean you're searching

793
00:29:10,799 --> 00:29:12,320
across you know you could be thousands

794
00:29:12,320 --> 00:29:14,080
of hosts right

795
00:29:14,080 --> 00:29:15,760
speed up that analysis and speed up that

796
00:29:15,760 --> 00:29:18,399
response phase and that investigation

797
00:29:18,399 --> 00:29:19,520
and

798
00:29:19,520 --> 00:29:23,559
yeah just gain more efficiencies

799
00:29:27,600 --> 00:29:32,158
all right so that's all for the demo

800
00:29:36,000 --> 00:29:38,290
thank you

801
00:29:38,290 --> 00:29:42,930
[Applause]

802
00:29:45,039 --> 00:29:47,440
all right any questions

803
00:29:47,440 --> 00:29:49,039
any

804
00:29:49,039 --> 00:29:53,320
snide remarks anything

805
00:29:55,919 --> 00:29:57,919
all right well i appreciate you guys

806
00:29:57,919 --> 00:29:59,520
taking the time to

807
00:29:59,520 --> 00:30:02,000
come down and uh once again it was great

808
00:30:02,000 --> 00:30:03,600
presenting and y'all have a great rest

809
00:30:03,600 --> 00:30:05,440
of the day checking out all these other

810
00:30:05,440 --> 00:30:09,559
awesome speakers thank you

