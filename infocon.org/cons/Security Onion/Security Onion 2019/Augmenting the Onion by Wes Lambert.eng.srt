1
00:00:09,860 --> 00:00:14,879
all right so it's my privilege to

2
00:00:11,990 --> 00:00:19,349
introduce to you our first speaker today

3
00:00:14,880 --> 00:00:22,529
if you are on our mailing list security

4
00:00:19,349 --> 00:00:26,130
onion dotnet slash Docs slash mailing

5
00:00:22,529 --> 00:00:28,740
lists then you can often see this

6
00:00:26,130 --> 00:00:31,830
gentleman contributing quite a bit in

7
00:00:28,740 --> 00:00:35,489
fact the mailing list has rather gone

8
00:00:31,830 --> 00:00:37,260
from hey Doug can you help me with fill

9
00:00:35,489 --> 00:00:39,870
in the blank to hey Wes

10
00:00:37,260 --> 00:00:42,839
can you help me with this problem that

11
00:00:39,870 --> 00:00:44,339
I'm having what security got in Wes this

12
00:00:42,839 --> 00:00:45,960
year if I'm gonna embarrass him just a

13
00:00:44,339 --> 00:00:49,140
little bit he set out to start doing

14
00:00:45,960 --> 00:00:51,420
more con talking so he set out earlier

15
00:00:49,140 --> 00:00:53,850
this year besides Tampa I believe right

16
00:00:51,420 --> 00:00:56,070
so right and then a couple of other

17
00:00:53,850 --> 00:01:00,059
talks in between cackalacky con and some

18
00:00:56,070 --> 00:01:03,750
others and also spoke at def cons packet

19
00:01:00,059 --> 00:01:06,060
hacking village as well so in one year

20
00:01:03,750 --> 00:01:08,759
he's gone from not having spoken

21
00:01:06,060 --> 00:01:10,890
publicly to having the cred to speak at

22
00:01:08,759 --> 00:01:13,170
Def Con which i think is pretty cool so

23
00:01:10,890 --> 00:01:21,030
it's my privilege to introduce to you

24
00:01:13,170 --> 00:01:23,970
mr. Wes Lambert all right how's

25
00:01:21,030 --> 00:01:27,240
everybody doing this morning good yes

26
00:01:23,970 --> 00:01:30,750
got that chick-fil-a coffee all right

27
00:01:27,240 --> 00:01:32,009
orange juice feeling good okay so we're

28
00:01:30,750 --> 00:01:34,470
gonna be talking a little bit about

29
00:01:32,009 --> 00:01:37,619
onions today of course security onion

30
00:01:34,470 --> 00:01:39,840
and how we can augment the security

31
00:01:37,619 --> 00:01:41,490
onion just talking about a few different

32
00:01:39,840 --> 00:01:44,130
open-source tools which you might have

33
00:01:41,490 --> 00:01:46,439
already heard of you may be using them

34
00:01:44,130 --> 00:01:48,149
today in your environments and you may

35
00:01:46,439 --> 00:01:51,360
be thinking how can I use these better

36
00:01:48,149 --> 00:01:52,439
or how can I tie these in keep in mind

37
00:01:51,360 --> 00:01:55,310
some of the stuff that I'll be talking

38
00:01:52,439 --> 00:01:58,258
about might not necessarily be some

39
00:01:55,310 --> 00:02:00,750
production-ready type thing or anything

40
00:01:58,259 --> 00:02:02,729
of that nature but maybe you can come

41
00:02:00,750 --> 00:02:05,490
away or you'll have some ideas of your

42
00:02:02,729 --> 00:02:07,380
own to implement or you can develop

43
00:02:05,490 --> 00:02:09,630
further on these ideas because they're

44
00:02:07,380 --> 00:02:10,380
really really right now just sort of

45
00:02:09,630 --> 00:02:12,450
pocs

46
00:02:10,380 --> 00:02:17,280
but you know they could go anywhere from

47
00:02:12,450 --> 00:02:20,220
there so without further ado I am a

48
00:02:17,280 --> 00:02:23,669
husband and father of four one lovely

49
00:02:20,220 --> 00:02:26,730
wife and four crazy children ones nine

50
00:02:23,669 --> 00:02:28,330
ones ten almost three and seven months

51
00:02:26,730 --> 00:02:31,390
so definitely got the hands full

52
00:02:28,330 --> 00:02:33,490
at home but I love it they're great

53
00:02:31,390 --> 00:02:39,369
also known as the co manager of

54
00:02:33,490 --> 00:02:41,380
household operations of course so with

55
00:02:39,370 --> 00:02:43,120
some things I enjoy our cheap coffee I

56
00:02:41,380 --> 00:02:46,299
get made fun of the coffee I drink

57
00:02:43,120 --> 00:02:49,180
sometimes by Dustin yes I'm calling you

58
00:02:46,300 --> 00:02:51,550
out yes and some other people but I do

59
00:02:49,180 --> 00:02:54,450
like coffee a lot Indian food and of

60
00:02:51,550 --> 00:02:56,860
course free and open-source software and

61
00:02:54,450 --> 00:02:58,750
as you may know or you may not know I

62
00:02:56,860 --> 00:03:02,550
also work here at security net solutions

63
00:02:58,750 --> 00:03:05,560
and am a senior engineer here helping to

64
00:03:02,550 --> 00:03:07,930
help customers you know to maintain

65
00:03:05,560 --> 00:03:12,730
their deployments and also develop

66
00:03:07,930 --> 00:03:14,620
custom solutions for them so just a

67
00:03:12,730 --> 00:03:16,119
brief introduction to this and this is

68
00:03:14,620 --> 00:03:17,950
really just the mindset that I think we

69
00:03:16,120 --> 00:03:21,940
we kind of all have using security and

70
00:03:17,950 --> 00:03:23,679
in is that you know the old black box

71
00:03:21,940 --> 00:03:25,690
firewall approach of just hoping that

72
00:03:23,680 --> 00:03:27,250
nothing gets in your network it doesn't

73
00:03:25,690 --> 00:03:28,600
really work anymore we we don't really

74
00:03:27,250 --> 00:03:30,250
follow that approach or at least we

75
00:03:28,600 --> 00:03:32,260
don't want to because we know bad guys

76
00:03:30,250 --> 00:03:35,050
will get into our networks at some point

77
00:03:32,260 --> 00:03:39,060
right and even the next nest next is

78
00:03:35,050 --> 00:03:39,060
generation firewall will not save you

79
00:03:39,300 --> 00:03:47,019
hackers gonna hack man so when the bad

80
00:03:44,650 --> 00:03:49,930
guys get into our networks we need a few

81
00:03:47,019 --> 00:03:52,480
things we want to be able to have a way

82
00:03:49,930 --> 00:03:55,989
to find them we want to be able to have

83
00:03:52,480 --> 00:03:59,649
a way to look at data about our network

84
00:03:55,989 --> 00:04:01,180
have that data easily digestible we want

85
00:03:59,650 --> 00:04:03,700
to have a lot of context around that

86
00:04:01,180 --> 00:04:06,430
data right we don't just want IDs alerts

87
00:04:03,700 --> 00:04:08,530
we want stuff that goes beyond the IDS

88
00:04:06,430 --> 00:04:10,230
alerts and builds upon that much like

89
00:04:08,530 --> 00:04:13,330
the other data that we already provide

90
00:04:10,230 --> 00:04:15,280
right we want to expand upon in SM our

91
00:04:13,330 --> 00:04:17,140
network security monitoring and really

92
00:04:15,280 --> 00:04:18,790
go for full scale enterprise security

93
00:04:17,140 --> 00:04:21,010
monitoring getting all that telemetry

94
00:04:18,790 --> 00:04:24,940
and all that other data and really being

95
00:04:21,010 --> 00:04:26,530
able to make an informed decision and of

96
00:04:24,940 --> 00:04:28,120
course we need to be able to respond

97
00:04:26,530 --> 00:04:30,130
quickly of course whenever we get that

98
00:04:28,120 --> 00:04:33,729
data and we're whenever we're trying to

99
00:04:30,130 --> 00:04:35,380
investigate so just real quick a brief

100
00:04:33,729 --> 00:04:37,030
overview of that data that security and

101
00:04:35,380 --> 00:04:39,520
it already provides and that we're able

102
00:04:37,030 --> 00:04:41,599
to pull in from other sources are going

103
00:04:39,520 --> 00:04:43,940
to be that alert data also known as

104
00:04:41,600 --> 00:04:46,060
like snorts or Okada alerts at session

105
00:04:43,940 --> 00:04:49,370
data from bro maybe connection data

106
00:04:46,060 --> 00:04:51,290
transaction data extracted content and

107
00:04:49,370 --> 00:04:54,140
maybe even full pcap and some other host

108
00:04:51,290 --> 00:04:55,730
telemetry and we have all this neatly

109
00:04:54,140 --> 00:04:56,690
wrapped up of course with the elastic

110
00:04:55,730 --> 00:04:59,030
stack where you can visualize that

111
00:04:56,690 --> 00:05:03,290
visualize and aggregate on all this

112
00:04:59,030 --> 00:05:05,900
different data so we have so much data

113
00:05:03,290 --> 00:05:08,720
at our fingertips but still you know we

114
00:05:05,900 --> 00:05:13,520
may we want more data right we want more

115
00:05:08,720 --> 00:05:14,780
context but we don't want this data no

116
00:05:13,520 --> 00:05:16,219
not this data at least not right now I

117
00:05:14,780 --> 00:05:18,500
don't know maybe we could use that for

118
00:05:16,220 --> 00:05:21,760
like use them for like AI or something

119
00:05:18,500 --> 00:05:23,660
maybe have some component I don't know

120
00:05:21,760 --> 00:05:26,240
but we're not done yet

121
00:05:23,660 --> 00:05:28,520
right we want more detection mechanisms

122
00:05:26,240 --> 00:05:30,650
we want more context we want more

123
00:05:28,520 --> 00:05:33,409
response mechanisms and of course more

124
00:05:30,650 --> 00:05:39,380
cookies right more contacts and more

125
00:05:33,410 --> 00:05:41,780
cookies so one of the ways to help with

126
00:05:39,380 --> 00:05:43,159
that is of course going to be Sigma now

127
00:05:41,780 --> 00:05:46,460
has anybody in the room heard about

128
00:05:43,160 --> 00:05:48,140
Sigma before seeing the rules ok it's

129
00:05:46,460 --> 00:05:51,560
gotten a little more popular in the last

130
00:05:48,140 --> 00:05:55,760
year so it's basically a generic format

131
00:05:51,560 --> 00:05:57,440
for rules for like Sims and IDs it's

132
00:05:55,760 --> 00:05:58,969
maintained by the project itself is

133
00:05:57,440 --> 00:06:01,520
maintained by Florian Roth and Thomas

134
00:05:58,970 --> 00:06:03,620
Pat's key but you can easily share

135
00:06:01,520 --> 00:06:05,659
detections it's bender agnostic and it's

136
00:06:03,620 --> 00:06:07,430
written to it's written in the ammo

137
00:06:05,660 --> 00:06:13,790
which is pretty easy to comprehend and

138
00:06:07,430 --> 00:06:17,120
right so here's an example rule right

139
00:06:13,790 --> 00:06:19,790
here at Sigma a sigma rule for cobalt

140
00:06:17,120 --> 00:06:22,430
strike dns beaconing here you can see

141
00:06:19,790 --> 00:06:23,930
the format again and that yamo format

142
00:06:22,430 --> 00:06:26,480
and and different things here such as

143
00:06:23,930 --> 00:06:30,290
the title and description some other

144
00:06:26,480 --> 00:06:31,910
actual detection queries for the the DNS

145
00:06:30,290 --> 00:06:35,060
down there for the Triple A stage and

146
00:06:31,910 --> 00:06:37,940
then the post one and so what we can do

147
00:06:35,060 --> 00:06:40,970
is we can take these rules and we can

148
00:06:37,940 --> 00:06:43,040
use them in security and in by way of

149
00:06:40,970 --> 00:06:46,970
alas alert and the Sigma converter

150
00:06:43,040 --> 00:06:49,580
that's provided by the project so we can

151
00:06:46,970 --> 00:06:52,070
use sigmak PI to convert these standards

152
00:06:49,580 --> 00:06:54,760
Sigma rules to those alas alert rules

153
00:06:52,070 --> 00:06:56,620
and then use them in

154
00:06:54,760 --> 00:06:58,330
in our detection pipeline to alert us

155
00:06:56,620 --> 00:07:00,850
when things like this happen

156
00:06:58,330 --> 00:07:02,140
so if we have detection rules based on

157
00:07:00,850 --> 00:07:04,510
the matter attack framework and your

158
00:07:02,140 --> 00:07:06,490
mapping that in your environment you can

159
00:07:04,510 --> 00:07:09,130
do the same thing into your detection

160
00:07:06,490 --> 00:07:11,530
pipeline after converting all these

161
00:07:09,130 --> 00:07:14,080
rules and then run with that so it's

162
00:07:11,530 --> 00:07:15,880
very easy to get started and very easy

163
00:07:14,080 --> 00:07:17,109
to convert those over and just another

164
00:07:15,880 --> 00:07:21,900
way that we can implement those

165
00:07:17,110 --> 00:07:21,900
detection mechanisms in our environment

166
00:07:24,480 --> 00:07:31,780
now another one miss has anybody heard

167
00:07:27,430 --> 00:07:34,720
of miss pin here okay okay a few you so

168
00:07:31,780 --> 00:07:36,580
what miss is it's a completely free and

169
00:07:34,720 --> 00:07:39,340
open source now our information sharing

170
00:07:36,580 --> 00:07:41,530
platform for sharing threaten tell and

171
00:07:39,340 --> 00:07:43,380
and things like that

172
00:07:41,530 --> 00:07:46,260
what you're able to do with Miss is

173
00:07:43,380 --> 00:07:48,460
basically take in these data feeds

174
00:07:46,260 --> 00:07:51,219
similar to what you would if you'd use a

175
00:07:48,460 --> 00:07:53,849
critical stack or something else but it

176
00:07:51,220 --> 00:07:57,190
allows you to take in various data feed

177
00:07:53,850 --> 00:08:00,610
communities different organizations and

178
00:07:57,190 --> 00:08:01,990
then pull those in and feed your again

179
00:08:00,610 --> 00:08:02,770
your detection pipeline with some of

180
00:08:01,990 --> 00:08:05,200
these IRCs

181
00:08:02,770 --> 00:08:06,669
and against some of them you know may

182
00:08:05,200 --> 00:08:08,080
not be applicable to your environment

183
00:08:06,670 --> 00:08:10,600
and may not be as high fidelity as you

184
00:08:08,080 --> 00:08:11,680
would like but it's of course up to you

185
00:08:10,600 --> 00:08:14,980
in your environment of how you would

186
00:08:11,680 --> 00:08:18,970
like to prune those it does come with a

187
00:08:14,980 --> 00:08:21,130
pretty feature-rich API that's offers a

188
00:08:18,970 --> 00:08:24,280
lot of potential for integrations which

189
00:08:21,130 --> 00:08:26,290
you'll see here in just a second and I

190
00:08:24,280 --> 00:08:29,979
mean from there it's just a great

191
00:08:26,290 --> 00:08:32,110
platform so one of the tenants in miss

192
00:08:29,980 --> 00:08:34,479
one of the you know core components is

193
00:08:32,110 --> 00:08:36,610
this event this concept of an event and

194
00:08:34,479 --> 00:08:38,530
it typically contains this information

195
00:08:36,610 --> 00:08:40,650
that you see here some different

196
00:08:38,530 --> 00:08:43,000
information about the owner or the

197
00:08:40,650 --> 00:08:44,620
organization sharing this event some

198
00:08:43,000 --> 00:08:47,200
other details like email some threat

199
00:08:44,620 --> 00:08:49,750
level maybe the analysis status of the

200
00:08:47,200 --> 00:08:51,340
event and some other attributes

201
00:08:49,750 --> 00:08:54,010
associated with the event may be an

202
00:08:51,340 --> 00:08:56,410
indicator like that would represent

203
00:08:54,010 --> 00:08:58,900
network activity an IP address or a

204
00:08:56,410 --> 00:09:01,630
domain name or a hash or something of

205
00:08:58,900 --> 00:09:03,010
that nature right and that's what we're

206
00:09:01,630 --> 00:09:05,470
talking about here is those attributes

207
00:09:03,010 --> 00:09:07,860
right so an event can contain several

208
00:09:05,470 --> 00:09:07,860
attributes

209
00:09:07,880 --> 00:09:11,360
typically they have many different

210
00:09:09,080 --> 00:09:13,280
attributes on these events and then

211
00:09:11,360 --> 00:09:16,730
correlation can be performed with an MS

212
00:09:13,280 --> 00:09:19,370
and within other other mechanisms or

213
00:09:16,730 --> 00:09:23,150
other data sources such as the hive or

214
00:09:19,370 --> 00:09:25,130
even secured Union to get more context

215
00:09:23,150 --> 00:09:27,890
around the data that you're pulling in

216
00:09:25,130 --> 00:09:31,400
and and feed that detection in that

217
00:09:27,890 --> 00:09:33,020
context pipeline and once again that

218
00:09:31,400 --> 00:09:35,449
that attribute can be a source or

219
00:09:33,020 --> 00:09:37,040
destination IP I can be a hash it can be

220
00:09:35,450 --> 00:09:42,260
a register key a file name almost

221
00:09:37,040 --> 00:09:45,800
anything you desire and as I spoke of

222
00:09:42,260 --> 00:09:47,930
before those feeds there are a huge list

223
00:09:45,800 --> 00:09:50,300
of default feeds available for missed

224
00:09:47,930 --> 00:09:53,060
that you can pull in I would advise

225
00:09:50,300 --> 00:09:57,109
against just going in and selecting all

226
00:09:53,060 --> 00:09:59,300
and then clicking import I would really

227
00:09:57,110 --> 00:10:00,920
take some time to to kind of go through

228
00:09:59,300 --> 00:10:03,439
those and see what the purpose of each

229
00:10:00,920 --> 00:10:05,060
of those are and then from there you

230
00:10:03,440 --> 00:10:07,100
know if that matches your maybe your

231
00:10:05,060 --> 00:10:10,459
risk profile or your organization's

232
00:10:07,100 --> 00:10:12,140
threat profile right then maybe consider

233
00:10:10,460 --> 00:10:14,390
pulling some of those in or sharing with

234
00:10:12,140 --> 00:10:16,790
some other organizations partner

235
00:10:14,390 --> 00:10:18,170
organizations or maybe getting something

236
00:10:16,790 --> 00:10:21,290
set up in the future where you can do

237
00:10:18,170 --> 00:10:23,780
that and so another cool feature with

238
00:10:21,290 --> 00:10:25,400
these feeds is that you can implement or

239
00:10:23,780 --> 00:10:27,410
you can utilize these feeds for

240
00:10:25,400 --> 00:10:29,270
attributes or take these attributes and

241
00:10:27,410 --> 00:10:32,150
put them into IDs signatures to use with

242
00:10:29,270 --> 00:10:36,230
snortin sericata also the bro Intel

243
00:10:32,150 --> 00:10:39,590
framework and so you'll see over here on

244
00:10:36,230 --> 00:10:42,110
the side I've got some different output

245
00:10:39,590 --> 00:10:44,990
types or export types there so Jason XML

246
00:10:42,110 --> 00:10:48,410
saw ricotta snort signatures and also

247
00:10:44,990 --> 00:10:51,230
bro Intel so we can pull these in to our

248
00:10:48,410 --> 00:10:53,839
security and in instance and then use

249
00:10:51,230 --> 00:10:56,390
them in our pipeline and then correlate

250
00:10:53,840 --> 00:10:58,790
all that the IOC data with our existing

251
00:10:56,390 --> 00:10:59,900
data or the network traffic and then go

252
00:10:58,790 --> 00:11:05,060
from there you know hit the ground

253
00:10:59,900 --> 00:11:08,120
running another thing that affords us

254
00:11:05,060 --> 00:11:10,880
the ease to I guess perform this

255
00:11:08,120 --> 00:11:13,520
integration would be the API that it

256
00:11:10,880 --> 00:11:16,040
provides so Mis provide this really

257
00:11:13,520 --> 00:11:18,890
great API I believe it's now actually

258
00:11:16,040 --> 00:11:20,709
expanded Primus is the Python client but

259
00:11:18,890 --> 00:11:22,960
it's great for automation

260
00:11:20,710 --> 00:11:26,010
as the nudes export the Berlin sell

261
00:11:22,960 --> 00:11:28,630
export also elasticsearch enrichment

262
00:11:26,010 --> 00:11:34,660
adding sightings or managing users and

263
00:11:28,630 --> 00:11:37,630
lots of other good stuff so talking

264
00:11:34,660 --> 00:11:39,730
about elasticsearch enrichment so what

265
00:11:37,630 --> 00:11:41,920
if we take this data or how can we take

266
00:11:39,730 --> 00:11:44,470
this data and how can we integrate it or

267
00:11:41,920 --> 00:11:47,050
feed it into our pipeline our detection

268
00:11:44,470 --> 00:11:51,370
pipeline and then use that data going

269
00:11:47,050 --> 00:11:52,540
forward so what I've been working on are

270
00:11:51,370 --> 00:11:54,520
what I worked on a little bit was a

271
00:11:52,540 --> 00:11:56,980
docker eyes method to interact with this

272
00:11:54,520 --> 00:11:59,800
API and look for these attribute matches

273
00:11:56,980 --> 00:12:02,860
and this was really inspired by it was

274
00:11:59,800 --> 00:12:06,160
DC security decay hit a tweet on Twitter

275
00:12:02,860 --> 00:12:09,250
a little while back and he was talking

276
00:12:06,160 --> 00:12:12,870
about using them cached and logstash and

277
00:12:09,250 --> 00:12:16,210
getting that data from Miss so you know

278
00:12:12,870 --> 00:12:17,710
being the deployment that we have we run

279
00:12:16,210 --> 00:12:19,090
a lot of docker containers and I figured

280
00:12:17,710 --> 00:12:22,150
it'd be pretty convenient if we could do

281
00:12:19,090 --> 00:12:24,730
it in that manner as well so I took that

282
00:12:22,150 --> 00:12:28,420
same idea and then now use a memcache

283
00:12:24,730 --> 00:12:30,700
docker container and a Miss to elastic

284
00:12:28,420 --> 00:12:32,860
docker container and can pull in those

285
00:12:30,700 --> 00:12:35,170
IOC s and populate log events with this

286
00:12:32,860 --> 00:12:36,040
data and they'll give you an idea of

287
00:12:35,170 --> 00:12:39,010
what that looks like

288
00:12:36,040 --> 00:12:41,199
we'll see it up here so basically we're

289
00:12:39,010 --> 00:12:43,780
pulling from that Miss API with the Miss

290
00:12:41,200 --> 00:12:45,850
two elastic docker container and then

291
00:12:43,780 --> 00:12:48,790
we're pumping these into memcache and

292
00:12:45,850 --> 00:12:50,440
then so memcache is basically just an

293
00:12:48,790 --> 00:12:53,290
in-memory database when you turn it off

294
00:12:50,440 --> 00:12:56,290
it everything's gone right it's similar

295
00:12:53,290 --> 00:12:58,209
to Redis and touching on Redis you know

296
00:12:56,290 --> 00:13:00,849
I would like to actually move that

297
00:12:58,210 --> 00:13:03,540
towards Redis in the future to make it a

298
00:13:00,850 --> 00:13:06,520
little easier for us going forward but

299
00:13:03,540 --> 00:13:08,860
regardless logstash is gonna be polling

300
00:13:06,520 --> 00:13:10,990
memcached and then it's gonna be looking

301
00:13:08,860 --> 00:13:12,070
for any matches based on the fields that

302
00:13:10,990 --> 00:13:14,980
are going through that long stashed

303
00:13:12,070 --> 00:13:18,400
pipeline so if we have a source IP or a

304
00:13:14,980 --> 00:13:21,670
destination IP or a ja3 or ja3 yes or a

305
00:13:18,400 --> 00:13:23,380
hash or anything of that nature it can

306
00:13:21,670 --> 00:13:25,150
look through there and then if that's

307
00:13:23,380 --> 00:13:27,400
present it's gonna pull out that key

308
00:13:25,150 --> 00:13:30,680
value from this or from the memcache

309
00:13:27,400 --> 00:13:33,199
store and then it's going to populate a

310
00:13:30,680 --> 00:13:37,008
in there so if you have a tag such as

311
00:13:33,199 --> 00:13:38,930
situ or such as you know fallout EK or

312
00:13:37,009 --> 00:13:43,540
something like that it's gonna populate

313
00:13:38,930 --> 00:13:46,550
that in the log itself in the ingestion

314
00:13:43,540 --> 00:13:48,230
right so let me before I go over to this

315
00:13:46,550 --> 00:13:54,589
let me show you what I'm talking about

316
00:13:48,230 --> 00:13:56,959
here so that's alright so when it does

317
00:13:54,589 --> 00:13:58,369
this it creates a field let me actually

318
00:13:56,959 --> 00:14:00,618
show you that log stash config real

319
00:13:58,369 --> 00:14:05,019
quick and show you that memcache docker

320
00:14:00,619 --> 00:14:05,019
container okay

321
00:14:06,759 --> 00:14:13,480
alright so right now we're pulling from

322
00:14:09,829 --> 00:14:16,849
that mess of API and we are pushing into

323
00:14:13,480 --> 00:14:28,639
that memcached docker container and so

324
00:14:16,850 --> 00:14:31,610
let me just do this for seek 150 Oh am I

325
00:14:28,639 --> 00:14:35,899
not oh my bad

326
00:14:31,610 --> 00:14:42,009
why is that not okay well I can't see

327
00:14:35,899 --> 00:14:42,009
that me I fix this real quick my bad oh

328
00:14:43,720 --> 00:14:53,149
where is he it was a function P I forget

329
00:14:48,410 --> 00:14:53,839
what is it what's that hotkey it is B

330
00:14:53,149 --> 00:14:57,730
that's right

331
00:14:53,839 --> 00:14:57,730
terrible hotkeys why does it not work

332
00:14:59,439 --> 00:15:08,819
yeah it's not doing anything

333
00:15:02,730 --> 00:15:09,030
yeah yeah well how about now no all

334
00:15:08,820 --> 00:15:13,640
right

335
00:15:09,030 --> 00:15:13,640
okay I know I'm crazy

336
00:15:13,880 --> 00:15:17,769
all right we're good now all right let

337
00:15:16,430 --> 00:15:25,130
me get out of here

338
00:15:17,769 --> 00:15:27,279
all right sorry about that y'all all

339
00:15:25,130 --> 00:15:27,279
right

340
00:15:32,420 --> 00:15:36,199
all right so we should see a few

341
00:15:34,220 --> 00:15:38,240
indicators in here if I can spell this

342
00:15:36,200 --> 00:15:39,310
right why didn't y'all tell me I spelled

343
00:15:38,240 --> 00:15:50,060
that wrong

344
00:15:39,310 --> 00:15:52,550
come on now what for there we go scroll

345
00:15:50,060 --> 00:15:53,839
by there all right so who can see here

346
00:15:52,550 --> 00:15:58,729
there now you're not gonna see the key

347
00:15:53,840 --> 00:16:00,830
actually well but I'm sorry the value

348
00:15:58,730 --> 00:16:03,560
but you'll see here so we have a domain

349
00:16:00,830 --> 00:16:07,100
online dating for live info we have a

350
00:16:03,560 --> 00:16:08,660
sha-256 we have another shop 256 and

351
00:16:07,100 --> 00:16:10,220
real quick and miss let me show you

352
00:16:08,660 --> 00:16:14,300
where that was and missed so we have

353
00:16:10,220 --> 00:16:16,970
this event right so here's miss and

354
00:16:14,300 --> 00:16:19,099
again that concept of an event right so

355
00:16:16,970 --> 00:16:24,500
we can go to this event and I'm just

356
00:16:19,100 --> 00:16:27,980
going to edit it I don't see yeah that

357
00:16:24,500 --> 00:16:29,270
should be you know the view event all

358
00:16:27,980 --> 00:16:31,580
right so we've got several these

359
00:16:29,270 --> 00:16:34,760
attributes we got the shot 256 over here

360
00:16:31,580 --> 00:16:37,100
and this domain over here online dating

361
00:16:34,760 --> 00:16:38,480
for live info and see what we've done

362
00:16:37,100 --> 00:16:44,120
there is we've reached out to that Miss

363
00:16:38,480 --> 00:16:47,090
API and then we pulled that in and then

364
00:16:44,120 --> 00:16:49,940
we've inserted into memcached and then

365
00:16:47,090 --> 00:16:54,530
we have some custom configu in logstash

366
00:16:49,940 --> 00:16:57,170
custom all right so we're basically

367
00:16:54,530 --> 00:16:59,630
pulling them cash right here for these

368
00:16:57,170 --> 00:17:04,940
different values that you can see md5

369
00:16:59,630 --> 00:17:09,290
ja3 virtual host query things of that

370
00:17:04,940 --> 00:17:12,680
nature and now if all was well we should

371
00:17:09,290 --> 00:17:18,619
have a field in here called mr. match

372
00:17:12,680 --> 00:17:23,360
not this match goodness gracious typing

373
00:17:18,619 --> 00:17:26,780
in public all right so we do have a

374
00:17:23,359 --> 00:17:28,010
mismatch all right so then you see some

375
00:17:26,780 --> 00:17:32,180
other cool stuff that I haven't talked

376
00:17:28,010 --> 00:17:34,760
about yet you all right there it is so

377
00:17:32,180 --> 00:17:36,350
we had a tag associated with that let me

378
00:17:34,760 --> 00:17:38,360
show you that we had a tag associated

379
00:17:36,350 --> 00:17:40,669
with this attribute right here online

380
00:17:38,360 --> 00:17:42,139
dating for LOD that info and now it's

381
00:17:40,670 --> 00:17:43,250
been populated so again you know if

382
00:17:42,140 --> 00:17:44,030
you're trying to get more context around

383
00:17:43,250 --> 00:17:46,280
if it's seats

384
00:17:44,030 --> 00:17:47,990
or if it's you know something else then

385
00:17:46,280 --> 00:17:49,840
you know this doesn't have to apply to

386
00:17:47,990 --> 00:17:52,940
just tags it can be pretty much anything

387
00:17:49,840 --> 00:17:54,350
but again to give you an idea right so

388
00:17:52,940 --> 00:17:56,810
it's been applied we can now see that

389
00:17:54,350 --> 00:17:58,939
this has been tagged with that tag form

390
00:17:56,810 --> 00:18:00,710
is based on that attribute and if we

391
00:17:58,940 --> 00:18:04,520
want to pivot back over there we can

392
00:18:00,710 --> 00:18:09,230
actually do that and of course it shows

393
00:18:04,520 --> 00:18:10,879
nothing all right but basically that

394
00:18:09,230 --> 00:18:13,340
that's the premise there is that it's

395
00:18:10,880 --> 00:18:15,350
going to tag that a man right and then

396
00:18:13,340 --> 00:18:17,209
you can go from there and get any more

397
00:18:15,350 --> 00:18:21,379
context around that or even pulling in

398
00:18:17,210 --> 00:18:22,550
other tags or other attributes right so

399
00:18:21,380 --> 00:18:26,660
to get back on track with the

400
00:18:22,550 --> 00:18:28,159
presentation another way that we can

401
00:18:26,660 --> 00:18:29,990
pull that data down I spoke briefly

402
00:18:28,160 --> 00:18:32,450
about those needs rules and bro in cell

403
00:18:29,990 --> 00:18:34,250
we can pull that down as well so

404
00:18:32,450 --> 00:18:35,900
basically we're gonna add that to the

405
00:18:34,250 --> 00:18:38,600
local rules for security and once we

406
00:18:35,900 --> 00:18:39,320
pull that down and it looks a little bit

407
00:18:38,600 --> 00:18:41,780
like this

408
00:18:39,320 --> 00:18:44,270
so we're gonna query the API via a

409
00:18:41,780 --> 00:18:45,950
custom bash script and we're gonna do

410
00:18:44,270 --> 00:18:47,480
that be a cron job and we can do that

411
00:18:45,950 --> 00:18:49,880
every day just like a rule update

412
00:18:47,480 --> 00:18:52,190
already does and then we can add those

413
00:18:49,880 --> 00:18:54,170
in all right we're gonna add this our

414
00:18:52,190 --> 00:18:59,630
look without rules so this has actually

415
00:18:54,170 --> 00:19:06,560
already been added in so if we go into

416
00:18:59,630 --> 00:19:13,250
that's the NSM rules downloaded see all

417
00:19:06,560 --> 00:19:14,960
right so we're gonna crap yes so we can

418
00:19:13,250 --> 00:19:19,250
see that rule right there

419
00:19:14,960 --> 00:19:21,260
right so that miss fallout rule and it's

420
00:19:19,250 --> 00:19:23,750
been generated by a Miss and then we

421
00:19:21,260 --> 00:19:26,450
pulled that down and we can also see the

422
00:19:23,750 --> 00:19:32,630
bro Intel that was generated bro share

423
00:19:26,450 --> 00:19:35,930
bro oh yes okay so I know it's a little

424
00:19:32,630 --> 00:19:37,070
clear that a little bit it's a little

425
00:19:35,930 --> 00:19:39,140
difficult to read and now it's gonna

426
00:19:37,070 --> 00:19:41,810
screen a little bit there but you can

427
00:19:39,140 --> 00:19:44,510
still see those two hashes and then the

428
00:19:41,810 --> 00:19:47,120
other domain that we had populated in

429
00:19:44,510 --> 00:19:49,420
that event there and now so during the

430
00:19:47,120 --> 00:19:53,139
course of regular business or monitoring

431
00:19:49,420 --> 00:19:55,890
we might come across something like that

432
00:19:53,140 --> 00:19:58,180
right

433
00:19:55,890 --> 00:19:59,980
so there we go we actually got a match

434
00:19:58,180 --> 00:20:02,380
for this and this is what this will look

435
00:19:59,980 --> 00:20:04,720
like confirming that we did pull that

436
00:20:02,380 --> 00:20:06,940
data down right the nudes rule and the

437
00:20:04,720 --> 00:20:08,590
as well as a bro Intel and then we

438
00:20:06,940 --> 00:20:10,960
actually get an alert generated from

439
00:20:08,590 --> 00:20:19,770
that so it can be pretty useful to pull

440
00:20:10,960 --> 00:20:23,080
in this data all right

441
00:20:19,770 --> 00:20:25,360
so that's it for Miss another tool I'd

442
00:20:23,080 --> 00:20:27,520
like to talk about and you know consider

443
00:20:25,360 --> 00:20:31,510
integrating or doing some cool things

444
00:20:27,520 --> 00:20:33,129
with is the hive I know Chris Chris

445
00:20:31,510 --> 00:20:35,620
Sanders touched on the hive a little bit

446
00:20:33,130 --> 00:20:38,650
a few years back he did a great blog

447
00:20:35,620 --> 00:20:40,270
blog post on the hive and it's great its

448
00:20:38,650 --> 00:20:42,670
benefits and it's definitely come a long

449
00:20:40,270 --> 00:20:44,170
way from there as well but essentially

450
00:20:42,670 --> 00:20:47,440
it's a security incident response

451
00:20:44,170 --> 00:20:49,150
platform a completely open source and

452
00:20:47,440 --> 00:20:53,860
it's used for tracking incidents and

453
00:20:49,150 --> 00:20:58,180
also enriching that data right enriching

454
00:20:53,860 --> 00:20:59,709
cases with external data right it

455
00:20:58,180 --> 00:21:03,010
integrates really well with Miss and

456
00:20:59,710 --> 00:21:06,760
it's got a great API as do most of these

457
00:21:03,010 --> 00:21:08,710
tools and one of the things that that I

458
00:21:06,760 --> 00:21:10,270
love about the hive again is just the

459
00:21:08,710 --> 00:21:12,190
ability to pull in all this other data

460
00:21:10,270 --> 00:21:16,480
and so hook into it and get the data

461
00:21:12,190 --> 00:21:18,070
that you're looking for so again a core

462
00:21:16,480 --> 00:21:20,530
component kind of like Miss a core

463
00:21:18,070 --> 00:21:22,629
component of the hive is cases and

464
00:21:20,530 --> 00:21:25,570
basically a case is going to be course a

465
00:21:22,630 --> 00:21:27,270
declaration of an investigation maybe

466
00:21:25,570 --> 00:21:29,530
based on an alert that you've received

467
00:21:27,270 --> 00:21:32,770
may be in the hive or may be from

468
00:21:29,530 --> 00:21:34,810
another source it's typically populated

469
00:21:32,770 --> 00:21:38,340
with observables so like IP addresses

470
00:21:34,810 --> 00:21:40,659
hashes Kate I'm sorry not cases files

471
00:21:38,340 --> 00:21:43,090
things like that you can upload files in

472
00:21:40,660 --> 00:21:45,670
there and they can also be password

473
00:21:43,090 --> 00:21:47,320
protected so that when you download the

474
00:21:45,670 --> 00:21:50,530
file if you need to you know enter that

475
00:21:47,320 --> 00:21:52,389
password protection to to be able to

476
00:21:50,530 --> 00:21:54,160
open that and of course you can also

477
00:21:52,390 --> 00:21:56,500
assign tags and any other additional

478
00:21:54,160 --> 00:21:59,440
information that you choose to these

479
00:21:56,500 --> 00:22:02,110
cases and you can also mark the

480
00:21:59,440 --> 00:22:03,940
attributes or observables for later

481
00:22:02,110 --> 00:22:06,929
investigation of course maybe as an IOC

482
00:22:03,940 --> 00:22:06,930
or something like that

483
00:22:07,049 --> 00:22:12,460
another thing that benefits the hive is

484
00:22:09,640 --> 00:22:15,700
the use of case templates so there are

485
00:22:12,460 --> 00:22:18,159
there's the ability to create tape case

486
00:22:15,700 --> 00:22:19,630
templates and you know you could also do

487
00:22:18,159 --> 00:22:22,570
this automatically which you'll probably

488
00:22:19,630 --> 00:22:25,539
see this here in just a little bit not

489
00:22:22,570 --> 00:22:26,860
for me but from someone else but the

490
00:22:25,539 --> 00:22:28,690
ability to create case templates to

491
00:22:26,860 --> 00:22:31,059
automate frequent actions right maybe if

492
00:22:28,690 --> 00:22:33,340
you have a tier one analyst or maybe if

493
00:22:31,059 --> 00:22:34,720
you have repeatable actions that you

494
00:22:33,340 --> 00:22:36,250
know you just don't it's just the

495
00:22:34,720 --> 00:22:38,470
brainpower of having to remember to do

496
00:22:36,250 --> 00:22:40,419
that you can put those steps in there

497
00:22:38,470 --> 00:22:41,260
and then have that entry level analyst

498
00:22:40,419 --> 00:22:42,789
or even yourself

499
00:22:41,260 --> 00:22:45,090
have those repeated steps to be able to

500
00:22:42,789 --> 00:22:47,950
go follow whenever they open that case

501
00:22:45,090 --> 00:22:51,520
and again those templates so whenever

502
00:22:47,950 --> 00:22:53,200
you import in alerts into a case there

503
00:22:51,520 --> 00:22:55,000
can be certain conditions or attributes

504
00:22:53,200 --> 00:22:59,890
that have to be met for the certain

505
00:22:55,000 --> 00:23:01,659
template to be applied now I mentioned

506
00:22:59,890 --> 00:23:05,230
the cases I'm also going to talk about

507
00:23:01,659 --> 00:23:07,860
alerts so alerts typically are kind of

508
00:23:05,230 --> 00:23:10,179
the first step into the hive so

509
00:23:07,860 --> 00:23:11,830
basically you might get you know an

510
00:23:10,179 --> 00:23:14,470
alert sent to the hive and then it'll

511
00:23:11,830 --> 00:23:20,070
ask you if you want to import that right

512
00:23:14,470 --> 00:23:22,390
so let's go over here and - alerts

513
00:23:20,070 --> 00:23:24,070
alright so these are some examples of

514
00:23:22,390 --> 00:23:26,320
some alerts here and they're tagged with

515
00:23:24,070 --> 00:23:28,889
different things right here we can

516
00:23:26,320 --> 00:23:32,200
preview and import and alert if we want

517
00:23:28,890 --> 00:23:35,470
so we could apply it you know at Simplot

518
00:23:32,200 --> 00:23:37,990
here if we had to we can import it as an

519
00:23:35,470 --> 00:23:40,299
empty case we can merge into an existing

520
00:23:37,990 --> 00:23:43,289
case lots of cool things that we can do

521
00:23:40,299 --> 00:23:43,289
with that right

522
00:23:50,350 --> 00:23:55,189
give it okay yeah okay

523
00:23:53,660 --> 00:23:56,630
so then again to touch on those

524
00:23:55,190 --> 00:23:58,880
observables that I mentioned again it's

525
00:23:56,630 --> 00:24:00,680
gonna be like a file a domain or an IP a

526
00:23:58,880 --> 00:24:03,020
hash or something like that that you can

527
00:24:00,680 --> 00:24:04,580
attach to an alert or to a case to help

528
00:24:03,020 --> 00:24:06,290
you get more context around an event or

529
00:24:04,580 --> 00:24:08,360
to help an analyst later or come to a

530
00:24:06,290 --> 00:24:11,960
conclusion or augment the current

531
00:24:08,360 --> 00:24:14,929
information in the alert or the case and

532
00:24:11,960 --> 00:24:17,570
I mentioned that external data in

533
00:24:14,930 --> 00:24:20,300
Richmond right so there are different

534
00:24:17,570 --> 00:24:23,840
analyzers that cortex it's another

535
00:24:20,300 --> 00:24:25,370
component the hive includes so some of

536
00:24:23,840 --> 00:24:27,980
the analyzers include ku-ku-ku-ku

537
00:24:25,370 --> 00:24:30,469
sandbox d shield has one emerging

538
00:24:27,980 --> 00:24:31,820
threats Mizpah course you can tie them

539
00:24:30,470 --> 00:24:37,370
with mist which you'll see here a second

540
00:24:31,820 --> 00:24:39,110
and lots and lots of others and of

541
00:24:37,370 --> 00:24:41,449
course much like the other tools the

542
00:24:39,110 --> 00:24:44,090
hive has an API a very feature-rich API

543
00:24:41,450 --> 00:24:46,220
and a client a Python client that you

544
00:24:44,090 --> 00:24:48,740
can use to interact and grab data from

545
00:24:46,220 --> 00:24:50,840
that so it can be very useful when

546
00:24:48,740 --> 00:24:55,820
trying to attach observables or a task

547
00:24:50,840 --> 00:24:59,600
to a case or anything of that manner so

548
00:24:55,820 --> 00:25:02,649
real quick let's see okay yeah so one

549
00:24:59,600 --> 00:25:05,120
more thing is the elastol eart rule so

550
00:25:02,650 --> 00:25:07,850
alas alert comes with a native hive

551
00:25:05,120 --> 00:25:10,100
alert it's pretty cool and what we can

552
00:25:07,850 --> 00:25:11,719
do is write in a last alert rule right

553
00:25:10,100 --> 00:25:14,120
and we can alert to the hive in that

554
00:25:11,720 --> 00:25:16,820
manner so say we have some data in our

555
00:25:14,120 --> 00:25:19,790
elastic search indexes and we want to be

556
00:25:16,820 --> 00:25:21,320
notified whenever that data condition is

557
00:25:19,790 --> 00:25:23,260
triggered much like a query if we were

558
00:25:21,320 --> 00:25:26,810
to query in elastic search or a kibana

559
00:25:23,260 --> 00:25:28,520
so we can have the elastomer rule go

560
00:25:26,810 --> 00:25:30,889
based off the same condition and then

561
00:25:28,520 --> 00:25:32,690
send an alert to the hive which can be

562
00:25:30,890 --> 00:25:35,450
very useful if you're if you're trying

563
00:25:32,690 --> 00:25:37,910
to automate you know then alerting and

564
00:25:35,450 --> 00:25:40,190
kind of push that investigation process

565
00:25:37,910 --> 00:25:42,710
just a step further and a little more

566
00:25:40,190 --> 00:25:45,050
automation but you do have to be very

567
00:25:42,710 --> 00:25:45,770
careful in what stuff you might want to

568
00:25:45,050 --> 00:25:47,270
automate

569
00:25:45,770 --> 00:25:48,889
in general because you definitely don't

570
00:25:47,270 --> 00:25:54,800
want to get an alert fatigue or overload

571
00:25:48,890 --> 00:25:57,470
the hive or your analysts alright so

572
00:25:54,800 --> 00:25:58,290
again it talked about alerts second ago

573
00:25:57,470 --> 00:26:02,070
so

574
00:25:58,290 --> 00:26:04,020
you can see here disregard that you can

575
00:26:02,070 --> 00:26:07,168
see here we've got these various alerts

576
00:26:04,020 --> 00:26:09,090
and these are all sent with security

577
00:26:07,169 --> 00:26:11,160
onion or with a security and in tag

578
00:26:09,090 --> 00:26:14,490
which means they were sent by security

579
00:26:11,160 --> 00:26:15,419
and in right so how did we get that in

580
00:26:14,490 --> 00:26:19,320
there

581
00:26:15,419 --> 00:26:21,419
so we had a great way it's it's pretty

582
00:26:19,320 --> 00:26:22,409
cool if I say so myself and this is

583
00:26:21,419 --> 00:26:23,820
something that you'll be seeing more of

584
00:26:22,410 --> 00:26:29,640
in the future

585
00:26:23,820 --> 00:26:32,520
it's called octopus right so it's like

586
00:26:29,640 --> 00:26:34,980
an octopus but for the sock all right

587
00:26:32,520 --> 00:26:38,100
what do y'all think about name yea or

588
00:26:34,980 --> 00:26:40,590
nay yeah okay

589
00:26:38,100 --> 00:26:43,049
all right so stock to post basically is

590
00:26:40,590 --> 00:26:45,449
a flask API that runs in a docker

591
00:26:43,049 --> 00:26:48,330
container and what it does it allows

592
00:26:45,450 --> 00:26:50,460
analysts to automate certain tasks right

593
00:26:48,330 --> 00:26:53,309
much like the hive we talked about the

594
00:26:50,460 --> 00:26:55,140
hive alerts right so much like that we

595
00:26:53,309 --> 00:26:59,809
can create an alert from an es event

596
00:26:55,140 --> 00:27:01,620
right we can create a Miss event from

597
00:26:59,809 --> 00:27:04,559
security and in itself or from

598
00:27:01,620 --> 00:27:05,969
elasticsearch or I'm sorry Cubana and

599
00:27:04,559 --> 00:27:07,649
there are also some other endpoints that

600
00:27:05,970 --> 00:27:09,950
are planned and that will be available

601
00:27:07,650 --> 00:27:12,330
some that are already available such as

602
00:27:09,950 --> 00:27:14,970
was a request tracker for incident

603
00:27:12,330 --> 00:27:17,730
response fast incident response Google

604
00:27:14,970 --> 00:27:21,210
rapid response velociraptor anybody

605
00:27:17,730 --> 00:27:24,690
heard a Velociraptor here one two okay

606
00:27:21,210 --> 00:27:26,700
cool cool cool also slack sending select

607
00:27:24,690 --> 00:27:29,280
notifications that's in there and also

608
00:27:26,700 --> 00:27:30,630
struck us so one thing that's that's

609
00:27:29,280 --> 00:27:33,000
pretty cool that have been working on is

610
00:27:30,630 --> 00:27:37,710
the ability to analyze a file on demand

611
00:27:33,000 --> 00:27:39,480
right so taking those bro extracted

612
00:27:37,710 --> 00:27:41,610
files and then analyzing those on demand

613
00:27:39,480 --> 00:27:44,190
they're getting that data back we'll

614
00:27:41,610 --> 00:27:47,129
talk about here in just a second but to

615
00:27:44,190 --> 00:27:48,780
go back from the hive or to go back to

616
00:27:47,130 --> 00:27:51,270
the hive alerts so all of these here

617
00:27:48,780 --> 00:27:53,040
were actually pushed from sock to puss

618
00:27:51,270 --> 00:27:55,860
and again disregard that nasty little

619
00:27:53,040 --> 00:27:57,240
message there so these were pushed

620
00:27:55,860 --> 00:27:59,580
widths octopus and they have that

621
00:27:57,240 --> 00:28:02,040
security and in tagging see there and so

622
00:27:59,580 --> 00:28:04,710
we can go in to an arbitrary event in

623
00:28:02,040 --> 00:28:05,639
here right so let's see if I want to go

624
00:28:04,710 --> 00:28:07,799
to alert NISP

625
00:28:05,640 --> 00:28:11,220
say I want to push this to the hive and

626
00:28:07,799 --> 00:28:15,310
clicks into the hive and I get an arrow

627
00:28:11,220 --> 00:28:16,780
no no but there are a few bugs that

628
00:28:15,310 --> 00:28:19,360
still need to be worked out but let's

629
00:28:16,780 --> 00:28:21,790
try a different one so oh I think I know

630
00:28:19,360 --> 00:28:23,620
what it was so there's a category that

631
00:28:21,790 --> 00:28:27,610
it expects and this custom rule did not

632
00:28:23,620 --> 00:28:31,110
provide a category so if we go back to a

633
00:28:27,610 --> 00:28:32,429
regular a fence or a typical needs event

634
00:28:31,110 --> 00:28:35,020
mm-hmm

635
00:28:32,430 --> 00:28:42,580
it's actually get here it's in its

636
00:28:35,020 --> 00:28:46,240
dashboard okay all right okay cool cool

637
00:28:42,580 --> 00:28:47,860
cool all right so we can take this all

638
00:28:46,240 --> 00:28:50,770
right let's just scroll down on the

639
00:28:47,860 --> 00:28:52,540
bottom pick one itsy Trojan Vidar our

640
00:28:50,770 --> 00:28:54,460
case stealer client data upload all

641
00:28:52,540 --> 00:28:56,740
right let's pick that one all right so

642
00:28:54,460 --> 00:28:58,990
I'm interested in this and I want to

643
00:28:56,740 --> 00:29:02,800
have my analysts take a look at it I can

644
00:28:58,990 --> 00:29:04,780
send it to the hive alright so we've got

645
00:29:02,800 --> 00:29:05,860
this in the hive right we've got some

646
00:29:04,780 --> 00:29:07,690
tags such as ID's

647
00:29:05,860 --> 00:29:10,000
maybe the categories such as Trojan

648
00:29:07,690 --> 00:29:11,580
right we can preview an import it's

649
00:29:10,000 --> 00:29:14,530
gonna give you some data about that

650
00:29:11,580 --> 00:29:15,760
right in there and it's gonna give you

651
00:29:14,530 --> 00:29:17,649
different observables like the source

652
00:29:15,760 --> 00:29:20,230
and destination IP and even the sensor

653
00:29:17,650 --> 00:29:26,950
from which it came right so that's

654
00:29:20,230 --> 00:29:28,840
pretty cool right and then let's see

655
00:29:26,950 --> 00:29:30,580
what else can we do so you know if I

656
00:29:28,840 --> 00:29:33,820
want to take this and import this into a

657
00:29:30,580 --> 00:29:35,530
case and just click yes import and then

658
00:29:33,820 --> 00:29:37,090
I would have a case there and then I can

659
00:29:35,530 --> 00:29:38,260
go on and my endless can start

660
00:29:37,090 --> 00:29:42,040
investigating on that for through their

661
00:29:38,260 --> 00:29:43,690
case you can add additional data and

662
00:29:42,040 --> 00:29:45,129
other stuff here so that's that's kind

663
00:29:43,690 --> 00:29:51,970
of what the case looks like there if you

664
00:29:45,130 --> 00:29:53,920
haven't used the hive before all right

665
00:29:51,970 --> 00:29:56,380
and another thing with sock to push so

666
00:29:53,920 --> 00:29:59,020
this is something that that we've been

667
00:29:56,380 --> 00:30:00,700
working on right now and it's still

668
00:29:59,020 --> 00:30:03,550
available if you want to take a look at

669
00:30:00,700 --> 00:30:05,440
the project outside of hybrid hunter but

670
00:30:03,550 --> 00:30:08,260
it will be native in a hybrid hunter and

671
00:30:05,440 --> 00:30:11,560
we will be able to do all of this cool

672
00:30:08,260 --> 00:30:16,710
stuff by default so just keep an eye out

673
00:30:11,560 --> 00:30:21,159
for that I don't shake my thumb here

674
00:30:16,710 --> 00:30:21,940
what once you go ahead of myself all

675
00:30:21,160 --> 00:30:24,620
right so

676
00:30:21,940 --> 00:30:26,929
another thing that I mentioned here was

677
00:30:24,620 --> 00:30:32,330
you know we talked about keep skipping

678
00:30:26,929 --> 00:30:36,320
around we've talked about pulling all

679
00:30:32,330 --> 00:30:44,149
this data in go down sorry I'm terrible

680
00:30:36,320 --> 00:30:46,100
with slides alright so we talked about

681
00:30:44,150 --> 00:30:47,450
pulling all this data in right the alike

682
00:30:46,100 --> 00:30:50,360
misspend the hive and doing all this

683
00:30:47,450 --> 00:30:52,130
correlation right and trying to get more

684
00:30:50,360 --> 00:30:54,559
context around an event and more

685
00:30:52,130 --> 00:30:56,990
information and another way and another

686
00:30:54,559 --> 00:30:59,210
way to help with that response it's

687
00:30:56,990 --> 00:31:02,840
gonna be google girl anybody of you guys

688
00:30:59,210 --> 00:31:05,900
you guys use google girl before yeah

689
00:31:02,840 --> 00:31:07,549
okay cool cool so what ger is it's

690
00:31:05,900 --> 00:31:09,770
basically a platform for remote line

691
00:31:07,549 --> 00:31:12,410
forensics and investigation

692
00:31:09,770 --> 00:31:16,190
you can quickly triage things right so

693
00:31:12,410 --> 00:31:17,690
if you set up clients on hosts of course

694
00:31:16,190 --> 00:31:20,000
the endpoints that you're monitoring you

695
00:31:17,690 --> 00:31:22,669
can quickly pull memory or process

696
00:31:20,000 --> 00:31:25,040
execution artifacts you know different

697
00:31:22,669 --> 00:31:26,570
windows logs artifacts tons of different

698
00:31:25,040 --> 00:31:28,700
stuff you can browse the virtual file

699
00:31:26,570 --> 00:31:32,928
system and it's got a really cool API

700
00:31:28,700 --> 00:31:35,230
for integration again those clients

701
00:31:32,929 --> 00:31:37,580
here's an example of a client here

702
00:31:35,230 --> 00:31:39,230
you're gonna see some different

703
00:31:37,580 --> 00:31:41,809
information about the client just basic

704
00:31:39,230 --> 00:31:43,520
information and all that's shown there's

705
00:31:41,809 --> 00:31:46,370
just some basic OS activity and stuff

706
00:31:43,520 --> 00:31:48,379
like that but it's going to also provide

707
00:31:46,370 --> 00:31:51,080
historical info on clients so you can go

708
00:31:48,380 --> 00:31:52,070
back and compare those snapshots so you

709
00:31:51,080 --> 00:31:54,530
can kind of see different things that

710
00:31:52,070 --> 00:31:57,740
change similar how similar to how I

711
00:31:54,530 --> 00:32:00,230
think OS query does it's kind of as

712
00:31:57,740 --> 00:32:05,270
changes Joshi correct me on that what's

713
00:32:00,230 --> 00:32:06,559
not an OS query expert but so you know

714
00:32:05,270 --> 00:32:09,590
there's basically that concept of the

715
00:32:06,559 --> 00:32:11,389
client and then the concept of a flow so

716
00:32:09,590 --> 00:32:13,668
we can run these flows on these clients

717
00:32:11,390 --> 00:32:16,040
and collect different artifacts like

718
00:32:13,669 --> 00:32:18,020
things like chrome history you know if

719
00:32:16,040 --> 00:32:20,659
we want to run a file finder flow we can

720
00:32:18,020 --> 00:32:22,150
look for a specific files on a host we

721
00:32:20,660 --> 00:32:24,740
can list currently running processes

722
00:32:22,150 --> 00:32:27,049
right just different things that you

723
00:32:24,740 --> 00:32:29,150
know it may be easier to go do this and

724
00:32:27,049 --> 00:32:30,379
automate this especially if you're doing

725
00:32:29,150 --> 00:32:32,120
it for a bunch of hosts and comparing

726
00:32:30,380 --> 00:32:33,510
the results then having to go to each of

727
00:32:32,120 --> 00:32:35,668
these individual endpoints and

728
00:32:33,510 --> 00:32:37,710
in that manner all right and we can also

729
00:32:35,669 --> 00:32:41,940
do things like scan processing memory

730
00:32:37,710 --> 00:32:45,750
with Yara so that's pretty cool and

731
00:32:41,940 --> 00:32:47,700
again that API you can query her for

732
00:32:45,750 --> 00:32:50,070
information about the clients for

733
00:32:47,700 --> 00:32:52,740
information about flows you can issue

734
00:32:50,070 --> 00:32:56,428
flows you can issue hunts all this cool

735
00:32:52,740 --> 00:32:58,110
stuff through the API and again it's

736
00:32:56,429 --> 00:33:00,480
just a great way to integrate with it

737
00:32:58,110 --> 00:33:03,889
and kind of expedite that that response

738
00:33:00,480 --> 00:33:09,660
process and that investigation process

739
00:33:03,890 --> 00:33:13,559
back all right

740
00:33:09,660 --> 00:33:14,910
so real quick I want to show you so one

741
00:33:13,559 --> 00:33:17,580
of the things I mentioned and socket

742
00:33:14,910 --> 00:33:20,090
puss was the ability to integrate with

743
00:33:17,580 --> 00:33:23,668
cur and this is a very rough prototype

744
00:33:20,090 --> 00:33:27,750
but basically right here we have this

745
00:33:23,669 --> 00:33:29,429
thing in the event this link where maybe

746
00:33:27,750 --> 00:33:30,600
we want to run a flow on that particular

747
00:33:29,429 --> 00:33:33,540
client we've got this data in

748
00:33:30,600 --> 00:33:37,530
elasticsearch and we want to investigate

749
00:33:33,540 --> 00:33:40,918
that client you know a little closer

750
00:33:37,530 --> 00:33:43,168
right so assuming that you have a client

751
00:33:40,919 --> 00:33:44,940
of course that's associated with any of

752
00:33:43,169 --> 00:33:47,760
these IP addresses in here that's gonna

753
00:33:44,940 --> 00:33:49,980
go perform a lookup anger all right and

754
00:33:47,760 --> 00:33:51,870
then it's going to go run that flow so I

755
00:33:49,980 --> 00:33:53,580
did this it sometimes it takes a minute

756
00:33:51,870 --> 00:33:55,979
for the agents to pull so I'm not gonna

757
00:33:53,580 --> 00:33:58,168
do this real time but what happened here

758
00:33:55,980 --> 00:34:00,419
was I actually clicked this just a

759
00:33:58,169 --> 00:34:03,900
little bit ago and it actually ran this

760
00:34:00,419 --> 00:34:06,510
flow on this client over here so it was

761
00:34:03,900 --> 00:34:07,919
just a simple list processes so it's

762
00:34:06,510 --> 00:34:11,399
just listening and I'm gonna get other

763
00:34:07,919 --> 00:34:12,750
results just listening you know

764
00:34:11,399 --> 00:34:15,029
different processes that are running on

765
00:34:12,750 --> 00:34:18,179
the box but you know to take a step

766
00:34:15,030 --> 00:34:21,450
further I think I want to it would be

767
00:34:18,179 --> 00:34:23,310
nice if I could attach the results to

768
00:34:21,449 --> 00:34:25,230
you know like a central ticketing system

769
00:34:23,310 --> 00:34:27,060
or something right like make it a little

770
00:34:25,230 --> 00:34:30,000
easier for analysts to investigate and

771
00:34:27,060 --> 00:34:31,379
have all that data there at one place so

772
00:34:30,000 --> 00:34:34,739
I think it'd be pretty cool if we could

773
00:34:31,379 --> 00:34:39,080
actually run that flow and then have

774
00:34:34,739 --> 00:34:41,939
that attached to an alert or a case

775
00:34:39,080 --> 00:34:43,139
right so and that's what you see here

776
00:34:41,940 --> 00:34:46,190
this is when I ran it a little bit

777
00:34:43,139 --> 00:34:47,659
earlier so you'll see this here

778
00:34:46,190 --> 00:34:49,909
actually ran it's called test alert with

779
00:34:47,659 --> 00:34:52,369
girl flow again a very rough prototype

780
00:34:49,909 --> 00:34:54,260
but again to give you an idea of things

781
00:34:52,369 --> 00:34:56,629
that are possible and that you may want

782
00:34:54,260 --> 00:34:59,060
to do with your environment we can look

783
00:34:56,629 --> 00:35:01,220
at this and preview and import it again

784
00:34:59,060 --> 00:35:03,109
we're gonna have the raw log that's from

785
00:35:01,220 --> 00:35:04,189
cabana that we saw in there that we

786
00:35:03,109 --> 00:35:06,799
wanted to look into a little bit more

787
00:35:04,190 --> 00:35:10,220
and then we also have the results of the

788
00:35:06,800 --> 00:35:11,869
flow here right this is it file so it's

789
00:35:10,220 --> 00:35:15,169
a password-protected zip file that's

790
00:35:11,869 --> 00:35:18,349
actually attached in there and then

791
00:35:15,170 --> 00:35:19,490
there are a few CSVs in there which you

792
00:35:18,349 --> 00:35:21,500
can go for I'm not going to go through

793
00:35:19,490 --> 00:35:22,700
those right now but it just makes it a

794
00:35:21,500 --> 00:35:25,220
little bit easier to have all that data

795
00:35:22,700 --> 00:35:26,629
aggregated in one place and then for you

796
00:35:25,220 --> 00:35:36,399
to go forth in your investigation from

797
00:35:26,630 --> 00:35:36,400
there forward all right so that's good

798
00:35:36,940 --> 00:35:43,910
all right another one so velociraptor I

799
00:35:41,329 --> 00:35:45,950
spoke about velociraptor a second ago

800
00:35:43,910 --> 00:35:48,140
so velociraptor is a very interesting

801
00:35:45,950 --> 00:35:49,640
alternative to occur Brett has been

802
00:35:48,140 --> 00:35:52,430
around a while and has a very rigid

803
00:35:49,640 --> 00:35:55,160
structure it's developed for Google

804
00:35:52,430 --> 00:35:56,868
which means that what Google wants it's

805
00:35:55,160 --> 00:36:00,410
going to develop and that's how it's

806
00:35:56,869 --> 00:36:02,050
going to develop it right so it's it's a

807
00:36:00,410 --> 00:36:03,230
little bit more rigid of a structure and

808
00:36:02,050 --> 00:36:05,510
velociraptor

809
00:36:03,230 --> 00:36:08,960
so Michael Cohen was actually on the Gir

810
00:36:05,510 --> 00:36:11,240
project before he worked at Google so

811
00:36:08,960 --> 00:36:14,900
you're gonna realize that and he now

812
00:36:11,240 --> 00:36:17,328
runs velocity X and is a primary

813
00:36:14,900 --> 00:36:20,450
developer of Velociraptor and the main

814
00:36:17,329 --> 00:36:22,310
thing above behind velociraptors really

815
00:36:20,450 --> 00:36:25,609
to kind of take away some of that

816
00:36:22,310 --> 00:36:27,890
rigidity and really allow folks to get

817
00:36:25,609 --> 00:36:29,359
at the data they want so while there's

818
00:36:27,890 --> 00:36:31,520
some constructs provided or some

819
00:36:29,359 --> 00:36:33,589
artifacts examples that are provided in

820
00:36:31,520 --> 00:36:35,480
Velociraptor it's really meant for you

821
00:36:33,589 --> 00:36:38,000
to be able to take that data or give you

822
00:36:35,480 --> 00:36:40,190
access to that data and then do with do

823
00:36:38,000 --> 00:36:43,640
with it what you want

824
00:36:40,190 --> 00:36:45,680
so velociraptors written in go again

825
00:36:43,640 --> 00:36:47,990
data collection of the primary use case

826
00:36:45,680 --> 00:36:50,390
and it uses its own query language I

827
00:36:47,990 --> 00:36:52,399
know it sometimes it stings trying to

828
00:36:50,390 --> 00:36:54,230
learn a new query language but it's very

829
00:36:52,400 --> 00:36:57,690
similar sequel like syntax

830
00:36:54,230 --> 00:36:58,890
it's called bql and again that's that's

831
00:36:57,690 --> 00:37:02,390
what helps and providing that

832
00:36:58,890 --> 00:37:04,620
flexibility and grabbing those artifacts

833
00:37:02,390 --> 00:37:06,810
so there are various deployment methods

834
00:37:04,620 --> 00:37:08,190
you can run a standalone deployment with

835
00:37:06,810 --> 00:37:10,740
Velociraptor you can run a cloud

836
00:37:08,190 --> 00:37:13,440
deployment most folks probably gonna run

837
00:37:10,740 --> 00:37:17,310
either you know one of those but you can

838
00:37:13,440 --> 00:37:18,840
also interactively triage so you can go

839
00:37:17,310 --> 00:37:20,460
take it since it's you know just an

840
00:37:18,840 --> 00:37:22,530
executable you can go take it on a host

841
00:37:20,460 --> 00:37:24,690
collect artifacts take it off you can

842
00:37:22,530 --> 00:37:26,780
upload it to a server if you want or do

843
00:37:24,690 --> 00:37:28,770
with it what you want again it's that

844
00:37:26,780 --> 00:37:34,050
flexibility that it provides it's really

845
00:37:28,770 --> 00:37:36,690
awesome here and again equal or bql is

846
00:37:34,050 --> 00:37:38,790
that framework that query language that

847
00:37:36,690 --> 00:37:41,550
I was talking about where you can create

848
00:37:38,790 --> 00:37:42,720
highly customizable artifacts right so

849
00:37:41,550 --> 00:37:45,450
if you're looking for really specific

850
00:37:42,720 --> 00:37:48,899
things and like the Windows registry or

851
00:37:45,450 --> 00:37:50,609
you know event logs or what have you you

852
00:37:48,900 --> 00:37:54,840
can do all of that and you can also

853
00:37:50,610 --> 00:37:58,650
automate that or at least assist in that

854
00:37:54,840 --> 00:38:00,570
with the API that's provided some of

855
00:37:58,650 --> 00:38:02,520
those artifacts I'm talking about now

856
00:38:00,570 --> 00:38:04,440
they're gonna be a two different types

857
00:38:02,520 --> 00:38:05,550
these client artifacts are gonna be

858
00:38:04,440 --> 00:38:06,810
things that run on the clients

859
00:38:05,550 --> 00:38:09,330
themselves they're going to be

860
00:38:06,810 --> 00:38:10,950
collecting different data such as like

861
00:38:09,330 --> 00:38:12,779
process creation events similar to

862
00:38:10,950 --> 00:38:14,250
things like system on right so it's

863
00:38:12,780 --> 00:38:15,990
gonna be monitoring for those things and

864
00:38:14,250 --> 00:38:18,600
then they're gonna be server artifacts

865
00:38:15,990 --> 00:38:20,459
which basically do post-processing and

866
00:38:18,600 --> 00:38:22,319
they're gonna collect or they're gonna

867
00:38:20,460 --> 00:38:24,120
look at the events or the artifacts

868
00:38:22,320 --> 00:38:26,780
uploaded by the clients and they're

869
00:38:24,120 --> 00:38:29,759
going to analyze that and then you know

870
00:38:26,780 --> 00:38:32,840
generate a report or some artifacts or a

871
00:38:29,760 --> 00:38:32,840
conclusion based off that

872
00:38:36,650 --> 00:38:41,640
now Velociraptor and security in in so

873
00:38:39,840 --> 00:38:45,870
this is where it's it's a little bit

874
00:38:41,640 --> 00:38:47,279
more flexible than grrrrrr I think it's

875
00:38:45,870 --> 00:38:50,730
pretty cool it has a native

876
00:38:47,280 --> 00:38:52,830
elasticsearch output so you can take the

877
00:38:50,730 --> 00:38:54,630
output from your artifacts when you're

878
00:38:52,830 --> 00:38:56,400
searching on clients you can have those

879
00:38:54,630 --> 00:38:59,130
uploaded to your security in an instance

880
00:38:56,400 --> 00:39:01,200
or of course another instance and then

881
00:38:59,130 --> 00:39:02,820
you know you can have access to that

882
00:39:01,200 --> 00:39:04,319
data right there along with all the

883
00:39:02,820 --> 00:39:06,210
other log sources and data that you're

884
00:39:04,320 --> 00:39:07,980
collecting so it makes it very cool to

885
00:39:06,210 --> 00:39:10,380
be able to - you know correlate between

886
00:39:07,980 --> 00:39:20,990
those and then go from one source to

887
00:39:10,380 --> 00:39:22,200
another and kind of pivot from there oh

888
00:39:20,990 --> 00:39:26,250
okay

889
00:39:22,200 --> 00:39:27,540
went too far alright so let me go

890
00:39:26,250 --> 00:39:30,890
through that real quick I'll give you an

891
00:39:27,540 --> 00:39:35,029
idea when I'm talking about bless you

892
00:39:30,890 --> 00:39:38,460
okay let me spin this up actually so

893
00:39:35,030 --> 00:39:44,100
what do I have on time here Phil you

894
00:39:38,460 --> 00:39:51,240
know five five minutes okay let me let

895
00:39:44,100 --> 00:39:55,009
me go a Speedy Gonzales all right just

896
00:39:51,240 --> 00:40:07,350
maybe like ten all right yeah stop okay

897
00:39:55,010 --> 00:40:10,440
yeah I need 45 more yes what is it was

898
00:40:07,350 --> 00:40:14,360
it call sorry I have to do this real

899
00:40:10,440 --> 00:40:24,450
quick I have a port conflict on here so

900
00:40:14,360 --> 00:40:27,200
okay stop see what you see

901
00:40:24,450 --> 00:40:27,200
okay

902
00:40:29,210 --> 00:40:33,720
so I'm gonna stop girl real quick and

903
00:40:31,589 --> 00:40:35,520
I'm gonna spin out the loss of Raptor so

904
00:40:33,720 --> 00:40:56,790
I do have a client connected and some

905
00:40:35,520 --> 00:40:58,319
data already there to go through and you

906
00:40:56,790 --> 00:41:00,119
can of course so I mentioned it was a

907
00:40:58,319 --> 00:41:02,490
you know it's it's written ago so it's a

908
00:41:00,119 --> 00:41:04,440
standalone statically linked executable

909
00:41:02,490 --> 00:41:06,118
but you could of course set it up to run

910
00:41:04,440 --> 00:41:08,960
as a service for demonstration purposes

911
00:41:06,119 --> 00:41:08,960
I'm just doing it this way

912
00:41:21,240 --> 00:41:25,819
I'm gonna do a history graph

913
00:41:32,480 --> 00:41:38,150
all right so it's up and running all

914
00:41:36,500 --> 00:41:42,200
right so let me just point you're over

915
00:41:38,150 --> 00:41:44,720
there now I know this is a lot of stuff

916
00:41:42,200 --> 00:41:47,089
to consume please feel free to ask me

917
00:41:44,720 --> 00:41:48,950
questions afterwards if I didn't cover

918
00:41:47,089 --> 00:41:54,410
anything very well there's probably a

919
00:41:48,950 --> 00:41:56,930
lot of things but all right so here we

920
00:41:54,410 --> 00:41:58,160
go this is Velociraptor this is just the

921
00:41:56,930 --> 00:41:59,569
server interface right here

922
00:41:58,160 --> 00:42:01,790
and you can see some different things

923
00:41:59,570 --> 00:42:04,430
here such as the hunt manager artifacts

924
00:42:01,790 --> 00:42:05,720
server events and server artifacts I'm

925
00:42:04,430 --> 00:42:07,759
just going to go to a client real quick

926
00:42:05,720 --> 00:42:08,299
the sole client that I have connected

927
00:42:07,760 --> 00:42:10,190
here

928
00:42:08,300 --> 00:42:12,369
it hasn't checked in in a while just

929
00:42:10,190 --> 00:42:14,780
because I haven't had this box on but

930
00:42:12,369 --> 00:42:17,210
I'm gonna click on this client and this

931
00:42:14,780 --> 00:42:19,310
is just the basic client view right here

932
00:42:17,210 --> 00:42:21,680
and you can see any artifacts that we

933
00:42:19,310 --> 00:42:23,480
have collected right here such as

934
00:42:21,680 --> 00:42:25,339
Windows attack so some of these were

935
00:42:23,480 --> 00:42:28,250
based off Oh as query query packs and

936
00:42:25,339 --> 00:42:30,020
some other packs so there's some windows

937
00:42:28,250 --> 00:42:33,109
attack free fetch stuff in here there's

938
00:42:30,020 --> 00:42:34,940
critical services information and just

939
00:42:33,109 --> 00:42:36,140
just a long story short there's just a

940
00:42:34,940 --> 00:42:37,730
ton of artifacts that you can use here

941
00:42:36,140 --> 00:42:41,990
to collect data from the clients and

942
00:42:37,730 --> 00:42:49,670
then stream that it's already there

943
00:42:41,990 --> 00:42:53,868
- yeah stick alright let's go well

944
00:42:49,670 --> 00:42:56,930
that's a wrap there all right so this is

945
00:42:53,869 --> 00:42:58,760
streaming directly to elasticsearch and

946
00:42:56,930 --> 00:43:00,799
I've got this nice pretty dashboard

947
00:42:58,760 --> 00:43:02,030
right here some scroll bars because I

948
00:43:00,800 --> 00:43:05,240
was working on another monitor and

949
00:43:02,030 --> 00:43:06,740
didn't check my stuff but you can see

950
00:43:05,240 --> 00:43:08,060
the different artifact count here and

951
00:43:06,740 --> 00:43:09,770
then how many clients are connected and

952
00:43:08,060 --> 00:43:12,078
there's different types of artifacts

953
00:43:09,770 --> 00:43:14,390
that we've uploaded from from

954
00:43:12,079 --> 00:43:16,490
velociraptors so you can go actually go

955
00:43:14,390 --> 00:43:18,710
run it right now and then have that

956
00:43:16,490 --> 00:43:20,359
uploaded and it's pretty much near

957
00:43:18,710 --> 00:43:21,829
real-time based on the indexing speed of

958
00:43:20,359 --> 00:43:25,869
elastic so it's pretty useful in that

959
00:43:21,829 --> 00:43:29,270
manner now how much time fill don't get

960
00:43:25,869 --> 00:43:31,180
five okay all right so sorry I'm taking

961
00:43:29,270 --> 00:43:34,310
too long in this but so another thing is

962
00:43:31,180 --> 00:43:38,118
Strelka right so let me go back through

963
00:43:34,310 --> 00:43:39,859
here so one last tool I want to talk

964
00:43:38,119 --> 00:43:42,410
about strelka it's a file scanning

965
00:43:39,859 --> 00:43:44,420
framework primarily written previously

966
00:43:42,410 --> 00:43:45,710
by Josh Lombardi I think Paul huh term

967
00:43:44,420 --> 00:43:50,119
huddle Meier is

968
00:43:45,710 --> 00:43:51,920
developer now it's Hargett so they were

969
00:43:50,119 --> 00:43:54,320
gracious enough to open sources software

970
00:43:51,920 --> 00:43:56,300
and it's super awesome for repairing

971
00:43:54,320 --> 00:43:58,520
with bro especially the extracted files

972
00:43:56,300 --> 00:44:00,859
that bro provides right so we can take

973
00:43:58,520 --> 00:44:04,460
those files and based on these various

974
00:44:00,859 --> 00:44:06,710
scanners that Strelka provides we can

975
00:44:04,460 --> 00:44:09,230
get more metadata and again more context

976
00:44:06,710 --> 00:44:12,800
right right in the same pane of glass

977
00:44:09,230 --> 00:44:14,810
right in Cabana and it's super useful in

978
00:44:12,800 --> 00:44:17,030
that manner so I'm not going to talk

979
00:44:14,810 --> 00:44:18,619
about scanners too much but you know

980
00:44:17,030 --> 00:44:21,560
relevant use cases might include

981
00:44:18,619 --> 00:44:23,150
extracting nested files identifying

982
00:44:21,560 --> 00:44:26,000
malicious scripts right going through

983
00:44:23,150 --> 00:44:29,270
those portal executables and looking for

984
00:44:26,000 --> 00:44:31,670
suspicious strings tons of stuff there

985
00:44:29,270 --> 00:44:35,150
and it also logs import functions for

986
00:44:31,670 --> 00:44:37,880
not only those Zenzi files but also like

987
00:44:35,150 --> 00:44:39,740
Mac executables and Linux CLS right so

988
00:44:37,880 --> 00:44:42,290
it's super cool to be able to do that

989
00:44:39,740 --> 00:44:43,580
and to be able to do that in in real

990
00:44:42,290 --> 00:44:46,790
time which I'll show you here in just a

991
00:44:43,580 --> 00:44:48,830
second so I'll just give you an overview

992
00:44:46,790 --> 00:44:54,170
of that data since we're a little short

993
00:44:48,830 --> 00:44:57,859
on time so this is some of the data that

994
00:44:54,170 --> 00:44:59,240
strucker provides right here so right

995
00:44:57,859 --> 00:45:01,970
here you can see the log count you can

996
00:44:59,240 --> 00:45:04,098
see the file source like some scan PE

997
00:45:01,970 --> 00:45:07,189
stuff there and then some other

998
00:45:04,099 --> 00:45:10,250
information here again the scroll bars I

999
00:45:07,190 --> 00:45:12,560
apologize but there's just tons and tons

1000
00:45:10,250 --> 00:45:14,810
and this is really a super small subset

1001
00:45:12,560 --> 00:45:17,540
of information that you can gather from

1002
00:45:14,810 --> 00:45:20,060
these files and get that file metadata I

1003
00:45:17,540 --> 00:45:23,720
mean I'm talking stuff like like exit

1004
00:45:20,060 --> 00:45:26,509
data - so also runs exit tool so you can

1005
00:45:23,720 --> 00:45:31,368
get these keys here yeah so if I scroll

1006
00:45:26,510 --> 00:45:32,960
down so we can see all sorts of exit

1007
00:45:31,369 --> 00:45:35,000
data on this tool here so there's that

1008
00:45:32,960 --> 00:45:37,070
exit tool scan and you see all these

1009
00:45:35,000 --> 00:45:39,200
keys that are in the file right like

1010
00:45:37,070 --> 00:45:41,770
file modify date file access date and

1011
00:45:39,200 --> 00:45:45,109
all these of course can be massaged into

1012
00:45:41,770 --> 00:45:47,119
elastic to be better parsed and and

1013
00:45:45,109 --> 00:45:48,740
stuff like that that's just some you

1014
00:45:47,119 --> 00:45:52,700
know some more work for the future and

1015
00:45:48,740 --> 00:45:53,810
hopeful integration but one cool thing

1016
00:45:52,700 --> 00:45:57,740
that I wanted to show you real quick was

1017
00:45:53,810 --> 00:46:00,700
that thing again with shocktopus that

1018
00:45:57,740 --> 00:46:00,700
you are able to do

1019
00:46:02,799 --> 00:46:11,809
so I'm just looking for profiles entry

1020
00:46:07,940 --> 00:46:13,609
with an extracted file and then what I

1021
00:46:11,809 --> 00:46:15,710
can do right here it's pretty cool is I

1022
00:46:13,609 --> 00:46:17,359
can do an on-demand scan so I can either

1023
00:46:15,710 --> 00:46:19,640
have a cron job set up to just do all

1024
00:46:17,359 --> 00:46:21,500
the files but if you really only want to

1025
00:46:19,640 --> 00:46:25,000
do it on demand then you can just remark

1026
00:46:21,500 --> 00:46:27,289
that and then just scan with stroker and

1027
00:46:25,000 --> 00:46:29,480
then you'll get this nice screen here it

1028
00:46:27,289 --> 00:46:32,119
says your request for the file has been

1029
00:46:29,480 --> 00:46:34,760
submitted to stroker and you can try

1030
00:46:32,119 --> 00:46:36,500
searching the results in Cubana right so

1031
00:46:34,760 --> 00:46:38,119
it's gonna take a take a minute here and

1032
00:46:36,500 --> 00:46:40,579
I can kind of show you what's happening

1033
00:46:38,119 --> 00:46:43,930
here from the there kind of cheating way

1034
00:46:40,579 --> 00:46:47,599
that I'm doing it right here I still

1035
00:46:43,930 --> 00:46:49,750
it's in here no it's not in there right

1036
00:46:47,599 --> 00:46:49,750
now

1037
00:47:05,349 --> 00:47:13,029
mmm that's not right is reka can't spell

1038
00:47:11,099 --> 00:47:14,319
alright and they see the timestamp

1039
00:47:13,029 --> 00:47:17,079
because there are multiple files

1040
00:47:14,319 --> 00:47:18,400
associated with this executable of

1041
00:47:17,079 --> 00:47:20,769
course it's going to be broken up into

1042
00:47:18,400 --> 00:47:24,219
different records here but you can see

1043
00:47:20,769 --> 00:47:26,769
that here this timestamp 1412 there we

1044
00:47:24,219 --> 00:47:29,829
have now had that analysis result from

1045
00:47:26,769 --> 00:47:32,499
stroke ax just by clicking that link so

1046
00:47:29,829 --> 00:47:34,779
again hopefully you've gotten some views

1047
00:47:32,499 --> 00:47:36,910
or some ideas or it can start planning

1048
00:47:34,779 --> 00:47:39,430
for some stuff to integrate in your

1049
00:47:36,910 --> 00:47:42,129
deployment and again if you have any

1050
00:47:39,430 --> 00:47:43,419
other questions please feel free to let

1051
00:47:42,130 --> 00:47:45,130
me know after the talk and I'd be glad

1052
00:47:43,420 --> 00:47:46,599
to talk you through any of it and I

1053
00:47:45,130 --> 00:47:49,390
appreciate you guys let me take the time

1054
00:47:46,599 --> 00:47:51,950
to stand up here today and mumble about

1055
00:47:49,390 --> 00:48:00,859
so thank you all

1056
00:47:51,950 --> 00:48:00,859
[Applause]

