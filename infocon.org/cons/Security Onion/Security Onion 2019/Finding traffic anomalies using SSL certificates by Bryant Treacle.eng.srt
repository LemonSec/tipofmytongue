1
00:00:10,840 --> 00:00:16,090
all right so now to talk to us this

2
00:00:13,630 --> 00:00:19,450
afternoon about SSL Certificates and

3
00:00:16,090 --> 00:00:21,700
finding that data that is you know as as

4
00:00:19,450 --> 00:00:25,390
data on our networks gets more and more

5
00:00:21,700 --> 00:00:26,890
and more encrypted and elusive Brian's

6
00:00:25,390 --> 00:00:29,080
going to talk to us about finding those

7
00:00:26,890 --> 00:00:29,980
anomalies in SSL certificates so I give

8
00:00:29,080 --> 00:00:36,210
you Brian

9
00:00:29,980 --> 00:00:39,160
chuckle hey all whoo everybody hear me

10
00:00:36,210 --> 00:00:42,190
well welcome to security onion

11
00:00:39,160 --> 00:00:44,349
conference 2019 I'm super excited this

12
00:00:42,190 --> 00:00:46,989
is my first conference now my first

13
00:00:44,350 --> 00:00:49,989
public speaking I was a recruiter back a

14
00:00:46,989 --> 00:00:51,550
while ago in my first come I first time

15
00:00:49,989 --> 00:00:53,140
I got to speak in front of people I was

16
00:00:51,550 --> 00:00:55,500
in front of like 7,000 people out of

17
00:00:53,140 --> 00:00:57,579
graduation it's all super nervous but

18
00:00:55,500 --> 00:00:58,750
anyways before we get started I would

19
00:00:57,579 --> 00:01:01,270
really want to talk a little bit about

20
00:00:58,750 --> 00:01:02,649
myself as Phil said my name is Brian

21
00:01:01,270 --> 00:01:04,509
truckle I've been in the Army for a

22
00:01:02,649 --> 00:01:06,310
little over 20 years I mean doing

23
00:01:04,509 --> 00:01:07,810
dealing with networks the whole time I

24
00:01:06,310 --> 00:01:09,580
started out with these cool things

25
00:01:07,810 --> 00:01:11,619
called packet switch networks right and

26
00:01:09,580 --> 00:01:14,380
they had this floppy disk like this big

27
00:01:11,619 --> 00:01:16,240
square thing in my semen museums and you

28
00:01:14,380 --> 00:01:17,890
load your config file in this device and

29
00:01:16,240 --> 00:01:19,390
then magic would happen like a little

30
00:01:17,890 --> 00:01:22,209
bit of packet to be routing and a

31
00:01:19,390 --> 00:01:23,800
screaming 56 kilobytes a second so I

32
00:01:22,209 --> 00:01:26,470
started out there started configuring

33
00:01:23,800 --> 00:01:27,849
those moved up I got a little bit of a

34
00:01:26,470 --> 00:01:29,890
stand at the White House I got to build

35
00:01:27,849 --> 00:01:32,709
some enterprise network networks out

36
00:01:29,890 --> 00:01:36,789
there and then my last job was the

37
00:01:32,709 --> 00:01:39,250
senior network tech for coalition Joint

38
00:01:36,789 --> 00:01:40,840
Task Force force over in Iraq so I build

39
00:01:39,250 --> 00:01:43,020
these big huge theater wide networks

40
00:01:40,840 --> 00:01:45,610
with thousands of thousands of devices

41
00:01:43,020 --> 00:01:49,240
but for the last six years I've moved

42
00:01:45,610 --> 00:01:51,369
from managing and creating networks to

43
00:01:49,240 --> 00:01:53,440
analyzing data on the network so I

44
00:01:51,369 --> 00:01:54,640
switched over to cyber security I got

45
00:01:53,440 --> 00:01:56,739
super stoked about it

46
00:01:54,640 --> 00:01:58,509
it's like it's my passion you know they

47
00:01:56,739 --> 00:02:00,700
say that thing like whenever you find a

48
00:01:58,509 --> 00:02:02,950
job you love you never work a day in

49
00:02:00,700 --> 00:02:04,450
your life that's from the husband's

50
00:02:02,950 --> 00:02:05,800
perspective from the wife's perspective

51
00:02:04,450 --> 00:02:08,259
it's you work all the time

52
00:02:05,800 --> 00:02:10,630
right so it's kind of interesting but

53
00:02:08,258 --> 00:02:12,399
with all that being said before I get

54
00:02:10,630 --> 00:02:15,690
started I got to give you this

55
00:02:12,400 --> 00:02:18,340
disclaimer and it says the views

56
00:02:15,690 --> 00:02:21,579
expressed in this presentation are not

57
00:02:18,340 --> 00:02:24,730
those of the are those of the authors me

58
00:02:21,579 --> 00:02:26,110
and do not represent the

59
00:02:24,730 --> 00:02:28,090
show policy or position of the

60
00:02:26,110 --> 00:02:29,799
Department of the army the Department of

61
00:02:28,090 --> 00:02:31,420
Defense or the United States government

62
00:02:29,799 --> 00:02:35,409
so this is all me they have nothing to

63
00:02:31,420 --> 00:02:38,409
do with this so why this topic right I

64
00:02:35,409 --> 00:02:40,420
mean I believe that encrypting network

65
00:02:38,409 --> 00:02:42,849
traffic is the future right with all

66
00:02:40,420 --> 00:02:44,708
these concerns about privacy it's moving

67
00:02:42,849 --> 00:02:47,048
that way in fact over the last couple

68
00:02:44,709 --> 00:02:51,190
months both Google Chrome and Firefox

69
00:02:47,049 --> 00:02:52,930
have enabled do eight so DNS over HTTPS

70
00:02:51,190 --> 00:02:54,940
right as they attempt to kind of hide

71
00:02:52,930 --> 00:02:56,739
DNS traffic from people that are

72
00:02:54,940 --> 00:02:59,140
snooping um so it's just the way that

73
00:02:56,739 --> 00:03:02,709
things are going and ISPs are up in arms

74
00:02:59,140 --> 00:03:05,018
and nations representing

75
00:03:02,709 --> 00:03:07,930
into a key component of network analysis

76
00:03:05,019 --> 00:03:10,150
which is DNS traffic so I really I

77
00:03:07,930 --> 00:03:12,129
really needed to just sit down and face

78
00:03:10,150 --> 00:03:15,099
this monster head-on and say how do we

79
00:03:12,129 --> 00:03:18,010
establish security professionals how do

80
00:03:15,099 --> 00:03:22,839
we find malicious traffic and malicious

81
00:03:18,010 --> 00:03:25,179
activity and SSL traffic so over a few

82
00:03:22,840 --> 00:03:27,910
months ago I came across this report

83
00:03:25,180 --> 00:03:29,440
published by Z scalar Z scalars a

84
00:03:27,910 --> 00:03:32,620
company that deals with cloud-based

85
00:03:29,440 --> 00:03:34,030
cyber security solutions and they said

86
00:03:32,620 --> 00:03:37,120
as of 2018

87
00:03:34,030 --> 00:03:38,859
72% of the Internet is encrypted that's

88
00:03:37,120 --> 00:03:42,160
from the Google transparency report and

89
00:03:38,859 --> 00:03:43,930
that's over 90% now and this as SSL

90
00:03:42,160 --> 00:03:47,829
based command and control has increased

91
00:03:43,930 --> 00:03:49,720
30% in the last six months of 2018 which

92
00:03:47,829 --> 00:03:51,340
makes sense right if I develop now where

93
00:03:49,720 --> 00:03:52,840
I'm gonna do a couple of things right I

94
00:03:51,340 --> 00:03:55,239
want to look like normal traffic and if

95
00:03:52,840 --> 00:03:57,669
I say 90% of all Internet traffic is

96
00:03:55,239 --> 00:03:59,019
encrypted I want to be encrypted and

97
00:03:57,669 --> 00:04:00,700
also we're not off the scale what I'm

98
00:03:59,019 --> 00:04:02,500
doing I don't want people snooping in

99
00:04:00,700 --> 00:04:04,208
trying to figure out what I'm doing so

100
00:04:02,500 --> 00:04:06,700
I'm when they encrypt it so it kind of

101
00:04:04,209 --> 00:04:08,560
makes sense but before we dive too much

102
00:04:06,700 --> 00:04:10,208
into what uh what I want to talk about

103
00:04:08,560 --> 00:04:12,129
in in the in the class or in this

104
00:04:10,209 --> 00:04:15,010
presentation I really want to look at

105
00:04:12,129 --> 00:04:17,228
the key components of what an SSL TLS

106
00:04:15,010 --> 00:04:20,380
session are so here we have a client and

107
00:04:17,228 --> 00:04:22,930
a server um they're gonna see your your

108
00:04:20,380 --> 00:04:24,550
traditional TCP handshake right client

109
00:04:22,930 --> 00:04:26,979
sends a send request to the server

110
00:04:24,550 --> 00:04:29,080
server sends a syn ACK the client sends

111
00:04:26,979 --> 00:04:31,270
back an ACK that establishes the

112
00:04:29,080 --> 00:04:34,030
three-way handshake after that the

113
00:04:31,270 --> 00:04:36,340
client says the hello message the server

114
00:04:34,030 --> 00:04:38,750
receives that message sends a server

115
00:04:36,340 --> 00:04:41,359
hello message back that Kylie doesn't

116
00:04:38,750 --> 00:04:42,890
Seifer speck sends it to the server and

117
00:04:41,360 --> 00:04:45,110
the server sends it back so here they're

118
00:04:42,890 --> 00:04:47,240
just negotiating which protocols they're

119
00:04:45,110 --> 00:04:48,440
going to use to encrypt it right then

120
00:04:47,240 --> 00:04:51,500
after sends it back you get your

121
00:04:48,440 --> 00:04:54,140
encrypted TLS connection so really we

122
00:04:51,500 --> 00:04:56,030
have about six packets in every TLS

123
00:04:54,140 --> 00:04:58,130
session that we can get metadata from

124
00:04:56,030 --> 00:05:02,419
before we lose total visibility into

125
00:04:58,130 --> 00:05:05,870
what's going on so I wanted to approach

126
00:05:02,420 --> 00:05:07,880
this topic with two different methods of

127
00:05:05,870 --> 00:05:10,100
detection the first one is I wanted to

128
00:05:07,880 --> 00:05:11,630
find a signature based detection to help

129
00:05:10,100 --> 00:05:13,610
find the notes these are the real easy

130
00:05:11,630 --> 00:05:14,840
ones right I mean generally what we do

131
00:05:13,610 --> 00:05:17,090
is we'll take some malicious traffic

132
00:05:14,840 --> 00:05:20,150
we'll open it up and we'll start looking

133
00:05:17,090 --> 00:05:22,609
for indicators of compromise that

134
00:05:20,150 --> 00:05:24,739
identify this malicious traffic from

135
00:05:22,610 --> 00:05:26,240
normal traffic right and snort rules are

136
00:05:24,740 --> 00:05:28,310
a great way to do this right you go in

137
00:05:26,240 --> 00:05:31,490
there you say hey in this in this put

138
00:05:28,310 --> 00:05:32,990
request I see this asterisk called ghost

139
00:05:31,490 --> 00:05:36,020
Astrid ghost we're supposed to be a

140
00:05:32,990 --> 00:05:37,970
strict I've got doctype and that's

141
00:05:36,020 --> 00:05:40,430
usually the ghost rat right so we find

142
00:05:37,970 --> 00:05:41,870
these indicators of compromise and then

143
00:05:40,430 --> 00:05:44,510
we throw it into some type of detection

144
00:05:41,870 --> 00:05:47,030
mechanism right so I want to talk about

145
00:05:44,510 --> 00:05:55,099
Jah three and this feature that I built

146
00:05:47,030 --> 00:05:55,849
on that included called ja3 lookup how

147
00:05:55,100 --> 00:05:59,120
they're talking to me

148
00:05:55,850 --> 00:06:02,000
I'm sorry the second one is anomaly

149
00:05:59,120 --> 00:06:04,490
detection so the anomaly detection I

150
00:06:02,000 --> 00:06:07,910
wanted to focus in on two subcategories

151
00:06:04,490 --> 00:06:10,340
right this broad prologue protocol abuse

152
00:06:07,910 --> 00:06:11,200
or misuse a good example of this is back

153
00:06:10,340 --> 00:06:14,989
in August

154
00:06:11,200 --> 00:06:17,000
Netflix released three vulnerabilities

155
00:06:14,990 --> 00:06:19,540
in kerbin Nettie's I think I'm saying

156
00:06:17,000 --> 00:06:22,729
that right kubernetes kerbin Nettie's

157
00:06:19,540 --> 00:06:25,400
which allowed for both pink flood

158
00:06:22,729 --> 00:06:27,560
attacks and reset flood attacks to do

159
00:06:25,400 --> 00:06:29,719
denial of service so adversaries could

160
00:06:27,560 --> 00:06:32,900
start shutting down the kubernetes web

161
00:06:29,720 --> 00:06:35,720
ports so that's a really broad protocol

162
00:06:32,900 --> 00:06:37,640
abusive misuse and it usually ends up

163
00:06:35,720 --> 00:06:40,790
being an issue with poor error handling

164
00:06:37,640 --> 00:06:43,010
on the application as it was developed

165
00:06:40,790 --> 00:06:44,450
and the other category is the more

166
00:06:43,010 --> 00:06:46,130
narrow one and that's where most of the

167
00:06:44,450 --> 00:06:48,650
security analysts are going to sit and

168
00:06:46,130 --> 00:06:50,780
that's trying to find deviations from

169
00:06:48,650 --> 00:06:52,640
your organization's baseline so just

170
00:06:50,780 --> 00:06:55,309
because the protocols

171
00:06:52,640 --> 00:06:56,810
is allowed or is it's behaving correctly

172
00:06:55,310 --> 00:07:00,020
if it's not supposed to be on your

173
00:06:56,810 --> 00:07:01,550
network then it's an anomaly right and

174
00:07:00,020 --> 00:07:05,299
the tool that I wanted to look I want to

175
00:07:01,550 --> 00:07:08,210
use that I wrote is called SSL CN DNS

176
00:07:05,300 --> 00:07:09,560
lookup dot py now I'm very functional

177
00:07:08,210 --> 00:07:10,969
with my naming conventions I don't have

178
00:07:09,560 --> 00:07:13,880
any creativity to come up with cool

179
00:07:10,970 --> 00:07:16,190
names of tools so if it does exactly

180
00:07:13,880 --> 00:07:19,730
what it does we're gonna dive into that

181
00:07:16,190 --> 00:07:23,300
a little bit so JA three or ja3 it was

182
00:07:19,730 --> 00:07:26,660
introduced in 2017 by Salesforce it was

183
00:07:23,300 --> 00:07:29,330
created by John Jeff and Josh and I'm

184
00:07:26,660 --> 00:07:31,940
paraphrasing this goal but their goal is

185
00:07:29,330 --> 00:07:34,070
to find an SSL fingerprinting technique

186
00:07:31,940 --> 00:07:37,190
that was unique to the client

187
00:07:34,070 --> 00:07:38,840
application and impartial to its

188
00:07:37,190 --> 00:07:41,510
destination which is important right

189
00:07:38,840 --> 00:07:43,880
because IP addresses in domain names

190
00:07:41,510 --> 00:07:45,469
come a dime a dozen now you can you can

191
00:07:43,880 --> 00:07:47,840
get those four for less than ten bucks

192
00:07:45,470 --> 00:07:49,700
so it's important for us to find a

193
00:07:47,840 --> 00:07:53,060
fingerprinting technique that doesn't

194
00:07:49,700 --> 00:07:56,120
rely on those so they created this and

195
00:07:53,060 --> 00:07:58,640
what does it do ja3 gathers the decimal

196
00:07:56,120 --> 00:08:01,670
values of the bytes for the following

197
00:07:58,640 --> 00:08:04,190
five fields we have the SSL version the

198
00:08:01,670 --> 00:08:06,530
accepted ciphers the list of extensions

199
00:08:04,190 --> 00:08:09,380
eliptical curves in the elliptical curve

200
00:08:06,530 --> 00:08:11,840
formats it can taste those values

201
00:08:09,380 --> 00:08:15,260
together using a comma to delineate each

202
00:08:11,840 --> 00:08:16,429
field in a dash to delimit each value

203
00:08:15,260 --> 00:08:19,550
and you get something that looks like

204
00:08:16,430 --> 00:08:21,980
this so once they get this concatenated

205
00:08:19,550 --> 00:08:24,890
string they generate an md5 hash and

206
00:08:21,980 --> 00:08:28,120
that becomes your fingerprint yay

207
00:08:24,890 --> 00:08:30,590
another hash like what do I do with this

208
00:08:28,120 --> 00:08:33,470
so now what well let's see if security

209
00:08:30,590 --> 00:08:35,539
onion has any tools that we can use to

210
00:08:33,470 --> 00:08:40,400
generate alerts on any of these hashes

211
00:08:35,539 --> 00:08:42,439
so we got three built-in detection

212
00:08:40,400 --> 00:08:46,310
capabilities first of all we have the

213
00:08:42,440 --> 00:08:47,240
bro Intel framework so whenever jaws 3

214
00:08:46,310 --> 00:08:49,310
were there they developed it they

215
00:08:47,240 --> 00:08:50,780
allowed hooks into the Intel framework

216
00:08:49,310 --> 00:08:52,819
so if you go to you until that def file

217
00:08:50,780 --> 00:08:55,579
and you follow the normal knit

218
00:08:52,820 --> 00:08:58,550
convention of the IOC and there's going

219
00:08:55,580 --> 00:09:00,110
to be like IntelliJ a3 and there's a

220
00:08:58,550 --> 00:09:02,329
description of the tea if you follow

221
00:09:00,110 --> 00:09:05,120
that format you could generate alerts

222
00:09:02,330 --> 00:09:06,350
off of known bad signatures we also have

223
00:09:05,120 --> 00:09:07,760
snort sericata rules

224
00:09:06,350 --> 00:09:09,200
so if you wanted to you can build a

225
00:09:07,760 --> 00:09:12,830
snort rule that looked for all these

226
00:09:09,200 --> 00:09:15,800
values inside the client certificate and

227
00:09:12,830 --> 00:09:17,360
they'll actually fire if if it saw it

228
00:09:15,800 --> 00:09:19,849
because that's all the JA threes do he's

229
00:09:17,360 --> 00:09:21,440
creating a hash out of those values and

230
00:09:19,850 --> 00:09:23,690
I said both of those are kind of

231
00:09:21,440 --> 00:09:26,060
distributed so that work those are going

232
00:09:23,690 --> 00:09:27,620
to be done on your sensor so if you have

233
00:09:26,060 --> 00:09:29,569
these big beefy sensors and lots of

234
00:09:27,620 --> 00:09:31,130
resources to spare it's great to put

235
00:09:29,570 --> 00:09:32,750
them out there and have your sensors

236
00:09:31,130 --> 00:09:35,930
actually do it if your sensors are

237
00:09:32,750 --> 00:09:37,820
almost maxed out you may want to go to a

238
00:09:35,930 --> 00:09:39,560
more centralized approach and that's

239
00:09:37,820 --> 00:09:43,370
building a last another blacklist rules

240
00:09:39,560 --> 00:09:45,949
that will alert any time the sensor or

241
00:09:43,370 --> 00:09:49,820
the sensor grid sees malicious jatha

242
00:09:45,950 --> 00:09:52,310
rehash so with any any cool signature

243
00:09:49,820 --> 00:09:54,770
based detection mechanism you need to

244
00:09:52,310 --> 00:09:58,420
have a source of signatures so where do

245
00:09:54,770 --> 00:10:01,569
I find the signatures I'm glad you asked

246
00:09:58,420 --> 00:10:04,880
this is website here called abuse eh

247
00:10:01,570 --> 00:10:07,340
whenever ja3 introduced or when

248
00:10:04,880 --> 00:10:09,230
snowsports introduced ja3 this website

249
00:10:07,340 --> 00:10:11,540
called abused OCH incorporated that into

250
00:10:09,230 --> 00:10:14,540
their sensor grid and they've they've

251
00:10:11,540 --> 00:10:16,640
rained like 25 million malware samples

252
00:10:14,540 --> 00:10:22,099
through the sensor grid and they've

253
00:10:16,640 --> 00:10:25,850
generated 70 unique malicious ja3 hashes

254
00:10:22,100 --> 00:10:28,610
that sounds it's September 26

255
00:10:25,850 --> 00:10:31,900
another one is crowdsource database so

256
00:10:28,610 --> 00:10:34,970
there is this website called ja3 or calm

257
00:10:31,900 --> 00:10:36,980
and it's a it's a public database that

258
00:10:34,970 --> 00:10:40,550
you can upload information to you and it

259
00:10:36,980 --> 00:10:43,130
has mappings between the jaw 3 hash and

260
00:10:40,550 --> 00:10:44,780
the the binaries that caused it which

261
00:10:43,130 --> 00:10:46,850
sounds cool we're gonna go into that the

262
00:10:44,780 --> 00:10:49,160
only problem that I've seen is there's a

263
00:10:46,850 --> 00:10:52,250
discrepancy between what that website

264
00:10:49,160 --> 00:10:54,740
says my jaw 3 hashes and what bro says

265
00:10:52,250 --> 00:10:56,900
myjob 3 right jaw 3 hashes so I don't

266
00:10:54,740 --> 00:10:58,150
trust that website I don't know if it's

267
00:10:56,900 --> 00:11:00,110
something to do with the google grease

268
00:10:58,150 --> 00:11:02,510
within the certificate or what but

269
00:11:00,110 --> 00:11:05,960
there's some kind of conflict there so I

270
00:11:02,510 --> 00:11:07,130
don't use it use at your own risk but

271
00:11:05,960 --> 00:11:08,750
there is a place there to get some

272
00:11:07,130 --> 00:11:14,480
information I think they have like 1600

273
00:11:08,750 --> 00:11:16,790
mappings but so one of the problems that

274
00:11:14,480 --> 00:11:18,200
I have with with the jaw 3 whenever I

275
00:11:16,790 --> 00:11:20,240
start looking that's doesn't visualize

276
00:11:18,200 --> 00:11:21,949
well you know Chris I'd talked

277
00:11:20,240 --> 00:11:23,300
intuition and I used that that would

278
00:11:21,949 --> 00:11:25,519
have been one of my answers like I just

279
00:11:23,300 --> 00:11:27,889
didn't I just know it's bad I had that

280
00:11:25,519 --> 00:11:30,709
gut feeling right whenever I look at

281
00:11:27,889 --> 00:11:33,290
this I have zero context of what's going

282
00:11:30,709 --> 00:11:36,439
on if you're anything like me when you

283
00:11:33,290 --> 00:11:38,629
start seeing md5 hashes visualized like

284
00:11:36,439 --> 00:11:40,490
my dyslexia starts kicking in in these

285
00:11:38,629 --> 00:11:42,980
these numbers and letters are spinning

286
00:11:40,490 --> 00:11:45,559
around and then I default to open and

287
00:11:42,980 --> 00:11:46,699
I'm just like it must all be good I have

288
00:11:45,559 --> 00:11:50,480
no idea what's going on

289
00:11:46,699 --> 00:11:52,878
so I really wanted to go and enrich this

290
00:11:50,480 --> 00:11:55,699
SSL data so how do i enrich it how do I

291
00:11:52,879 --> 00:11:59,119
add metadata to this SSL session so I

292
00:11:55,699 --> 00:12:01,099
generated a lookup table for bro for JA

293
00:11:59,119 --> 00:12:03,170
three bro that allows analysts to add

294
00:12:01,100 --> 00:12:04,970
I'm gonna call it a user agent it's not

295
00:12:03,170 --> 00:12:09,050
really user agent but the user agent

296
00:12:04,970 --> 00:12:11,240
metadata to the SSL record in bro and it

297
00:12:09,050 --> 00:12:14,779
does two things first it adds a field

298
00:12:11,240 --> 00:12:16,879
called ja3 that gets wrote into the SSL

299
00:12:14,779 --> 00:12:19,550
log so inside bro logger actually write

300
00:12:16,879 --> 00:12:22,160
this field and secondly it uses the bro

301
00:12:19,550 --> 00:12:24,799
input framework to ingest a mapping of

302
00:12:22,160 --> 00:12:27,799
Ja three hashes and they're known user

303
00:12:24,799 --> 00:12:30,769
agent strings from the JA 3 dot look of

304
00:12:27,799 --> 00:12:34,249
Ja 3 look about that file so essentially

305
00:12:30,769 --> 00:12:36,740
you can take this file right here you

306
00:12:34,249 --> 00:12:38,809
put your mappings in there you stick it

307
00:12:36,740 --> 00:12:40,790
in the bro JA 3 folder you reached our

308
00:12:38,809 --> 00:12:44,589
bro and it will start building these

309
00:12:40,790 --> 00:12:48,860
mappings for you and it turns this into

310
00:12:44,589 --> 00:12:50,449
that right so if I'm an analyst this I

311
00:12:48,860 --> 00:12:52,040
have some context here right

312
00:12:50,449 --> 00:12:54,378
I could look to see why in the world do

313
00:12:52,040 --> 00:12:54,769
I have an Android app running on my

314
00:12:54,379 --> 00:12:57,439
network

315
00:12:54,769 --> 00:12:59,059
well this is because my home network but

316
00:12:57,439 --> 00:13:01,309
like if you're aimless you can use some

317
00:12:59,059 --> 00:13:04,699
context if if you see here that we're

318
00:13:01,309 --> 00:13:07,579
running Chrome version 74 and you're on

319
00:13:04,699 --> 00:13:09,290
chrome version 80 then that could be an

320
00:13:07,579 --> 00:13:11,719
anomaly right why is there some visor

321
00:13:09,290 --> 00:13:13,670
and an unauthorized or an older version

322
00:13:11,720 --> 00:13:16,639
of chrome running out my network so it

323
00:13:13,670 --> 00:13:21,069
gives you some context for the the

324
00:13:16,639 --> 00:13:23,809
binaries that caused that hash and I did

325
00:13:21,069 --> 00:13:25,849
run some statistics we had this ran on a

326
00:13:23,809 --> 00:13:29,269
giant enterprise all right now I have

327
00:13:25,850 --> 00:13:31,399
about 700 mappings we put on a huge

328
00:13:29,269 --> 00:13:33,049
enterprise network with I would say

329
00:13:31,399 --> 00:13:33,830
probably three or four gigabyte

330
00:13:33,049 --> 00:13:35,750
throughput

331
00:13:33,830 --> 00:13:37,940
coming through the sniffing interfaces

332
00:13:35,750 --> 00:13:40,269
and we didn't see any kind of noticeable

333
00:13:37,940 --> 00:13:42,709
issues with bro so it wasn't really

334
00:13:40,269 --> 00:13:43,670
measurable so you can't put it on there

335
00:13:42,709 --> 00:13:45,380
I don't think it seemed to cause a big

336
00:13:43,670 --> 00:13:47,390
issue but again proceed with caution

337
00:13:45,380 --> 00:13:49,610
before you implement this make sure that

338
00:13:47,390 --> 00:13:51,500
your sensors are able to handle the

339
00:13:49,610 --> 00:13:54,980
additional workload of I'll be doing

340
00:13:51,500 --> 00:13:57,410
this bro look up so that was it for

341
00:13:54,980 --> 00:13:59,120
signature detection I really wanted to

342
00:13:57,410 --> 00:14:01,189
focus my attention on how do I find

343
00:13:59,120 --> 00:14:03,769
anomalies right his signatures are cool

344
00:14:01,190 --> 00:14:06,230
but it takes a lot of work in usually

345
00:14:03,769 --> 00:14:07,880
you get a signature after the compromise

346
00:14:06,230 --> 00:14:11,180
we really want to get the bad guys

347
00:14:07,880 --> 00:14:13,700
before so I went on this endeavor to

348
00:14:11,180 --> 00:14:16,279
find an anomaly and I wanted to do three

349
00:14:13,700 --> 00:14:18,680
things right I wanted to identify SSL

350
00:14:16,279 --> 00:14:20,769
certificates that deviate from the

351
00:14:18,680 --> 00:14:23,390
Internet's best business practices I

352
00:14:20,769 --> 00:14:26,630
wanted to find malicious payloads or

353
00:14:23,390 --> 00:14:29,000
situ servers that auto-populate SSL

354
00:14:26,630 --> 00:14:31,910
certificates with random information so

355
00:14:29,000 --> 00:14:34,730
think Metasploit right and three is

356
00:14:31,910 --> 00:14:38,149
defined malicious payloads that use SSL

357
00:14:34,730 --> 00:14:39,680
and have hard-coded IPs right so if I

358
00:14:38,149 --> 00:14:40,490
want to put I pee instead of a domain

359
00:14:39,680 --> 00:14:45,649
cuz I'm cheap

360
00:14:40,490 --> 00:14:47,660
I want to catch that so I started

361
00:14:45,649 --> 00:14:49,220
digging into the server side SSL

362
00:14:47,660 --> 00:14:50,839
Certificates and something caught my eye

363
00:14:49,220 --> 00:14:52,790
there's this field called the common

364
00:14:50,839 --> 00:14:55,130
name field and it sits inside of the

365
00:14:52,790 --> 00:14:58,010
subject of the message and I started

366
00:14:55,130 --> 00:15:00,770
seeing these things like API amazon.com

367
00:14:58,010 --> 00:15:03,170
ashraf google comm a strict at

368
00:15:00,770 --> 00:15:05,209
facebook.com/ and they kind of reminded

369
00:15:03,170 --> 00:15:07,939
me of something whenever I'm looking for

370
00:15:05,209 --> 00:15:10,250
DNS records inside elasticsearch you

371
00:15:07,940 --> 00:15:11,390
know I'll write things like this right

372
00:15:10,250 --> 00:15:13,430
if I'm looking for a hey let me see all

373
00:15:11,390 --> 00:15:15,380
the Facebook DNS queries I'll throw a

374
00:15:13,430 --> 00:15:17,029
wild card up there you know a query

375
00:15:15,380 --> 00:15:18,829
elasticsearch and that it comes up with

376
00:15:17,029 --> 00:15:20,120
stuff so it kind of caught my attention

377
00:15:18,829 --> 00:15:22,339
it was that intuition that we talked

378
00:15:20,120 --> 00:15:25,850
about so I did what any good analyst

379
00:15:22,339 --> 00:15:27,589
does and I pull up the RFC 5280 and I

380
00:15:25,850 --> 00:15:30,170
start diving into just what am I allowed

381
00:15:27,589 --> 00:15:31,670
to put inside of this field and it's

382
00:15:30,170 --> 00:15:34,130
completely useless it tells me that it

383
00:15:31,670 --> 00:15:36,290
has to be a string that's no no more

384
00:15:34,130 --> 00:15:38,600
than 64 bytes long so like that doesn't

385
00:15:36,290 --> 00:15:40,849
help me at all but the best business

386
00:15:38,600 --> 00:15:43,610
practice for the Internet is to put a

387
00:15:40,850 --> 00:15:47,360
variation of the fully qualified domain

388
00:15:43,610 --> 00:15:50,060
name of the server into that field

389
00:15:47,360 --> 00:15:52,339
right so here's a good example here's

390
00:15:50,060 --> 00:15:54,649
github.com and heart kind of hard to see

391
00:15:52,339 --> 00:15:56,899
but inside the subject field you'll see

392
00:15:54,649 --> 00:16:01,459
this CN and this says github.com

393
00:15:56,899 --> 00:16:03,380
right so here's a interpreter payload

394
00:16:01,459 --> 00:16:04,969
session so if you ever web to something

395
00:16:03,380 --> 00:16:06,550
you know says it works you may have just

396
00:16:04,970 --> 00:16:09,560
stumbled across the patter patter

397
00:16:06,550 --> 00:16:11,870
session and if you look here under the

398
00:16:09,560 --> 00:16:14,149
subject inside the CN field you're see

399
00:16:11,870 --> 00:16:17,000
it says hammies dot little chomp

400
00:16:14,149 --> 00:16:20,300
dot co so to generated a domain name

401
00:16:17,000 --> 00:16:23,540
that's not a real thing so but before I

402
00:16:20,300 --> 00:16:25,519
can really find anomalies in an SSL

403
00:16:23,540 --> 00:16:27,290
session I have to figure out what is

404
00:16:25,519 --> 00:16:30,170
normal what does a normal SSL session

405
00:16:27,290 --> 00:16:32,449
look like so here we have a user the

406
00:16:30,170 --> 00:16:34,819
user wants to see the latest a secure

407
00:16:32,450 --> 00:16:36,529
log from security onion solutions so he

408
00:16:34,820 --> 00:16:40,190
opens up the web browser he typed in the

409
00:16:36,529 --> 00:16:43,399
URL there's a DNS query sent to get the

410
00:16:40,190 --> 00:16:45,680
IP address of the SOS website Chrome

411
00:16:43,399 --> 00:16:47,899
then sends its client certificate to the

412
00:16:45,680 --> 00:16:49,579
SOS website that's the West web servers

413
00:16:47,899 --> 00:16:51,709
at the backend server side certificate

414
00:16:49,579 --> 00:16:54,910
and then chrome verifies that it's valid

415
00:16:51,709 --> 00:16:59,449
and renders the content to me right so

416
00:16:54,910 --> 00:17:02,510
my assumption is if I have a server-side

417
00:16:59,449 --> 00:17:06,438
SSL certificate then there should have

418
00:17:02,510 --> 00:17:07,910
been a preceding DNS query to it all

419
00:17:06,439 --> 00:17:10,069
right so if I have a certificate from

420
00:17:07,910 --> 00:17:13,640
the server somebody had to have been a

421
00:17:10,069 --> 00:17:14,928
DNS query right that is my general 99.9%

422
00:17:13,640 --> 00:17:18,350
of the time that's what how it's going

423
00:17:14,929 --> 00:17:21,260
to happen right so how do I write a

424
00:17:18,349 --> 00:17:23,119
program that will that will find this

425
00:17:21,260 --> 00:17:24,140
right so I decided to do something that

426
00:17:23,119 --> 00:17:26,178
I've never done it to write a Python

427
00:17:24,140 --> 00:17:27,559
array I'm a bash guy but I'm like you

428
00:17:26,179 --> 00:17:29,690
know what let's just live life

429
00:17:27,559 --> 00:17:33,230
dangerously we're gonna write it Python

430
00:17:29,690 --> 00:17:35,480
so I started I started pulling up the

431
00:17:33,230 --> 00:17:37,309
code Academy did the hello world a

432
00:17:35,480 --> 00:17:39,320
couple times worked on the calculator

433
00:17:37,309 --> 00:17:42,020
and I build this crazy thing

434
00:17:39,320 --> 00:17:45,080
so one watch group does is it queries

435
00:17:42,020 --> 00:17:48,220
elastic search for the values of the CN

436
00:17:45,080 --> 00:17:50,389
certificate name field every 30 minutes

437
00:17:48,220 --> 00:17:53,570
and then it creates a list inside of

438
00:17:50,390 --> 00:17:55,070
Python for unique CN field values so the

439
00:17:53,570 --> 00:17:56,809
reason why I wanted to create a list is

440
00:17:55,070 --> 00:18:00,080
as you see later on I'm gonna do a lot

441
00:17:56,809 --> 00:18:01,260
of substance subsequent queries inside

442
00:18:00,080 --> 00:18:03,120
elastic search and I didn't

443
00:18:01,260 --> 00:18:04,770
to be putting all that workload on

444
00:18:03,120 --> 00:18:05,850
elasticsearch if I've already verified

445
00:18:04,770 --> 00:18:08,520
that it's correct

446
00:18:05,850 --> 00:18:10,350
so if I do if I see a Google com my

447
00:18:08,520 --> 00:18:11,940
assumption is that all the Google comc

448
00:18:10,350 --> 00:18:13,590
in fields are correct so I'm not going

449
00:18:11,940 --> 00:18:15,120
to do a query for every single

450
00:18:13,590 --> 00:18:17,129
certificate I get so I'm going to write

451
00:18:15,120 --> 00:18:19,139
it to a list and then before I send the

452
00:18:17,130 --> 00:18:21,120
substitute queries I'm going to say does

453
00:18:19,140 --> 00:18:23,970
this query already exist in this list

454
00:18:21,120 --> 00:18:27,179
yes ok disregard it so I build a list

455
00:18:23,970 --> 00:18:29,820
inside of Python I split the field value

456
00:18:27,180 --> 00:18:31,800
on the dots and then join the last two

457
00:18:29,820 --> 00:18:33,840
objects with another dot then add a

458
00:18:31,800 --> 00:18:37,560
wild-card to the beginning so you're

459
00:18:33,840 --> 00:18:41,520
gonna end up like wwm azan comm will be

460
00:18:37,560 --> 00:18:43,440
asterisk amazon.com right I take that

461
00:18:41,520 --> 00:18:46,170
information and I query elasticsearch

462
00:18:43,440 --> 00:18:48,360
again to find the DNS query that matches

463
00:18:46,170 --> 00:18:51,270
the parent domain in the top-level

464
00:18:48,360 --> 00:18:54,179
domain of the certificate after that's

465
00:18:51,270 --> 00:18:56,100
done if no dns results are found the

466
00:18:54,180 --> 00:18:59,610
script will pull some more metadata from

467
00:18:56,100 --> 00:19:02,280
the original SSL sir like the UID the

468
00:18:59,610 --> 00:19:05,010
destination geo IP lookup the source and

469
00:19:02,280 --> 00:19:06,960
destination IP anything that bro notice

470
00:19:05,010 --> 00:19:08,790
is needed to populate the bro notices

471
00:19:06,960 --> 00:19:10,710
dashboard I went back to the original

472
00:19:08,790 --> 00:19:12,930
certificate it pulled it all down and I

473
00:19:10,710 --> 00:19:16,110
took all that information and I pushed

474
00:19:12,930 --> 00:19:18,030
it to elasticsearch with a event type of

475
00:19:16,110 --> 00:19:19,979
bro notices so if you go to the bro

476
00:19:18,030 --> 00:19:21,990
notice dashboard it'll show up in there

477
00:19:19,980 --> 00:19:24,300
but it does not write to the bro notice

478
00:19:21,990 --> 00:19:28,200
log on the sensor alright it's just an

479
00:19:24,300 --> 00:19:30,030
elastic search so a couple things about

480
00:19:28,200 --> 00:19:32,880
the script before we go into this demo a

481
00:19:30,030 --> 00:19:36,540
uses elastic search Python library I

482
00:19:32,880 --> 00:19:38,490
wanted to try that out so you have to if

483
00:19:36,540 --> 00:19:39,810
you go to my github there's a there's

484
00:19:38,490 --> 00:19:42,090
like three steps you have to do in order

485
00:19:39,810 --> 00:19:44,159
to get this python library install

486
00:19:42,090 --> 00:19:46,620
that's not native to on the Python

487
00:19:44,160 --> 00:19:48,540
that's a security onion so all the stuff

488
00:19:46,620 --> 00:19:50,280
is in there to get it set up the query

489
00:19:48,540 --> 00:19:53,670
times are configurable so it's a

490
00:19:50,280 --> 00:19:57,840
traditional JSON query it's like day -

491
00:19:53,670 --> 00:19:59,730
or now - time so it's like now - 30

492
00:19:57,840 --> 00:20:01,800
minutes do undo every 30 minutes or now

493
00:19:59,730 --> 00:20:03,840
- 24 hours if you want to run it every

494
00:20:01,800 --> 00:20:07,230
day however however you want to do the

495
00:20:03,840 --> 00:20:12,810
queries those are configurable it resets

496
00:20:07,230 --> 00:20:14,680
the the Sun even a word it resets the CN

497
00:20:12,810 --> 00:20:17,530
field

498
00:20:14,680 --> 00:20:19,420
the list every 24 hours so one of the

499
00:20:17,530 --> 00:20:20,560
things I had at the beginning was I was

500
00:20:19,420 --> 00:20:22,450
just letting it run constantly I

501
00:20:20,560 --> 00:20:24,610
realized that after a couple days I was

502
00:20:22,450 --> 00:20:28,180
getting no alerts and that's because all

503
00:20:24,610 --> 00:20:30,939
of those CN fields have been stuck in

504
00:20:28,180 --> 00:20:33,220
the table so if I got so say example.com

505
00:20:30,940 --> 00:20:34,840
fired and I didn't catch it will never

506
00:20:33,220 --> 00:20:37,180
fire again because it's in the table so

507
00:20:34,840 --> 00:20:39,040
every 24 hours I flushed the table and

508
00:20:37,180 --> 00:20:40,090
then I add the stuff in there to kind of

509
00:20:39,040 --> 00:20:43,690
make sure that I've we're not missing

510
00:20:40,090 --> 00:20:45,970
anything and then it does not support

511
00:20:43,690 --> 00:20:47,860
elasticsearch authentication so if you

512
00:20:45,970 --> 00:20:49,420
have that I think it's s though elastic

513
00:20:47,860 --> 00:20:50,620
off I think is the thing if you turn

514
00:20:49,420 --> 00:20:51,160
that I don't know what its gonna do if I

515
00:20:50,620 --> 00:20:53,979
won't work

516
00:20:51,160 --> 00:20:56,410
and then look up mappings in a list of

517
00:20:53,980 --> 00:20:59,340
known bad hashes I have some on my repo

518
00:20:56,410 --> 00:21:01,780
I have about 10 or 15 more than what

519
00:20:59,340 --> 00:21:03,429
abuse tasks th has so if you guys want

520
00:21:01,780 --> 00:21:06,399
to go in there and pull it I'm more than

521
00:21:03,430 --> 00:21:08,830
willing to uh to take take additional

522
00:21:06,400 --> 00:21:10,660
hashes on here I'm there's very cautious

523
00:21:08,830 --> 00:21:13,139
if you do it I'm gonna scrutinize you to

524
00:21:10,660 --> 00:21:15,520
make sure I want to see some type of

525
00:21:13,140 --> 00:21:17,590
validation that this is actually legit I

526
00:21:15,520 --> 00:21:19,810
don't want I'm a big fan of not getting

527
00:21:17,590 --> 00:21:21,310
wrong data so if you do say hey I found

528
00:21:19,810 --> 00:21:23,350
these hashes give me some kind of

529
00:21:21,310 --> 00:21:24,760
context or a screenshot of this was the

530
00:21:23,350 --> 00:21:28,389
packet this was the session something

531
00:21:24,760 --> 00:21:30,160
all right so I'm not sure so the big

532
00:21:28,390 --> 00:21:32,140
question is does it work it - up here

533
00:21:30,160 --> 00:21:34,900
like a good idea theory Oh core can I

534
00:21:32,140 --> 00:21:36,610
actually find bad guys doing this so I'm

535
00:21:34,900 --> 00:21:40,210
we're gonna do a live demo which is

536
00:21:36,610 --> 00:21:42,850
always scary I'm gonna both I want to

537
00:21:40,210 --> 00:21:45,550
find these two malicious payloads one of

538
00:21:42,850 --> 00:21:47,949
them is a live sample and the other one

539
00:21:45,550 --> 00:21:51,610
is the Metasploit reverse https beacon

540
00:21:47,950 --> 00:21:53,260
I'm using both ja3 signatures and using

541
00:21:51,610 --> 00:21:55,149
my Python script let's see if we can

542
00:21:53,260 --> 00:21:58,840
catch of these things real quick this is

543
00:21:55,150 --> 00:22:01,270
my lab setup I have like two windows

544
00:21:58,840 --> 00:22:03,580
machines in a Kali machine pfsense with

545
00:22:01,270 --> 00:22:05,080
the security onion censor the internet

546
00:22:03,580 --> 00:22:08,139
and there's some bad guy out here

547
00:22:05,080 --> 00:22:11,050
whoever this dude is he's out there I

548
00:22:08,140 --> 00:22:15,700
got my malware from this cool website

549
00:22:11,050 --> 00:22:17,710
called URL house it's real malware it's

550
00:22:15,700 --> 00:22:19,810
for real it basically has thousands and

551
00:22:17,710 --> 00:22:22,120
thousands of these malicious URLs you

552
00:22:19,810 --> 00:22:24,310
highlight it go to it it downloads a

553
00:22:22,120 --> 00:22:27,500
file you run as administrator and you

554
00:22:24,310 --> 00:22:30,960
can ransomware yourself that's amazing

555
00:22:27,500 --> 00:22:32,730
super amazing right this is only for

556
00:22:30,960 --> 00:22:36,000
educational purposes I think I got to

557
00:22:32,730 --> 00:22:39,870
say that but you can it's bad right and

558
00:22:36,000 --> 00:22:42,480
this is a 58 and a 68 search engines

559
00:22:39,870 --> 00:22:43,770
found at-bats with 58% of the people

560
00:22:42,480 --> 00:22:45,300
said it's bad this is real malware if

561
00:22:43,770 --> 00:22:46,710
you do this it's good it's good for a

562
00:22:45,300 --> 00:22:48,270
lab environment or testing out

563
00:22:46,710 --> 00:22:54,450
signatures like this to see if it

564
00:22:48,270 --> 00:22:57,000
actually works in the real world so here

565
00:22:54,450 --> 00:22:59,190
we have this is a screenshot post

566
00:22:57,000 --> 00:23:01,950
compromise of the machine as you can see

567
00:22:59,190 --> 00:23:07,800
here we have this 4/4 recession going to

568
00:23:01,950 --> 00:23:10,950
41 41 to 1775 on paid 27:16 which is

569
00:23:07,800 --> 00:23:12,450
actually the Reg server process is

570
00:23:10,950 --> 00:23:18,720
calling out to the Internet

571
00:23:12,450 --> 00:23:22,050
let's see if we can't find this stuff no

572
00:23:18,720 --> 00:23:27,990
that was on purpose all right let's pull

573
00:23:22,050 --> 00:23:30,180
up some of these I don't know if I could

574
00:23:27,990 --> 00:23:31,830
do this I can look on that screen I'm

575
00:23:30,180 --> 00:23:35,930
glad we moved down here this is actually

576
00:23:31,830 --> 00:23:38,970
pretty nice thank you

577
00:23:35,930 --> 00:23:46,890
all right so we got this I'm going to

578
00:23:38,970 --> 00:23:48,570
view when they get full screen sure now

579
00:23:46,890 --> 00:23:50,220
this is going to be just like VI when I

580
00:23:48,570 --> 00:23:51,720
want to exit out I'm not going to know

581
00:23:50,220 --> 00:23:53,760
what to do use iMovie smashing buttons

582
00:23:51,720 --> 00:23:56,580
because it just told me how to do and I

583
00:23:53,760 --> 00:23:58,170
just ignored it I'll be over you're

584
00:23:56,580 --> 00:24:03,960
smashing buttons till I get out of the

585
00:23:58,170 --> 00:24:07,280
viewer so let's change this time here so

586
00:24:03,960 --> 00:24:09,840
I downloaded some malware back on the

587
00:24:07,280 --> 00:24:13,320
27th just to make sure this worked

588
00:24:09,840 --> 00:24:15,300
before I told everybody it worked so

589
00:24:13,320 --> 00:24:23,750
let's go look and see what's going on

590
00:24:15,300 --> 00:24:26,070
here okay so so unlike github you can

591
00:24:23,750 --> 00:24:28,860
there's this and they built the

592
00:24:26,070 --> 00:24:32,550
dashboard for JA three that has all of

593
00:24:28,860 --> 00:24:33,689
the information that I've added so as an

594
00:24:32,550 --> 00:24:36,030
extra fuel they have a couple of

595
00:24:33,690 --> 00:24:37,059
visitations in there I'm gonna zoom this

596
00:24:36,030 --> 00:24:42,700
in to make it look a little

597
00:24:37,059 --> 00:24:49,658
nicer I'll make it even a little bit

598
00:24:42,700 --> 00:24:52,029
better go thank you

599
00:24:49,659 --> 00:24:54,669
so this first visualization this is your

600
00:24:52,029 --> 00:24:56,919
jaw 3s so it's the server-side

601
00:24:54,669 --> 00:24:58,960
certificates its account by unique

602
00:24:56,919 --> 00:25:00,549
here's the actual a client-side

603
00:24:58,960 --> 00:25:03,009
certificate account by unique this is

604
00:25:00,549 --> 00:25:04,929
just to try to find spikes it should be

605
00:25:03,009 --> 00:25:06,399
a very steady line across your

606
00:25:04,929 --> 00:25:07,960
enterprise during business hours

607
00:25:06,399 --> 00:25:09,399
because most of your clients are all

608
00:25:07,960 --> 00:25:11,049
going to be usually this should all be

609
00:25:09,399 --> 00:25:13,149
on the same browser so should look

610
00:25:11,049 --> 00:25:16,389
pretty steady here we have any Intel

611
00:25:13,149 --> 00:25:21,939
alerts from bro that we're marked for JA

612
00:25:16,389 --> 00:25:25,299
3 I'm down here you'll see here's the J

613
00:25:21,940 --> 00:25:27,999
3 description look up so you have like

614
00:25:25,299 --> 00:25:29,679
Android is the first one this unknown so

615
00:25:27,999 --> 00:25:31,600
as of right now if bro

616
00:25:29,679 --> 00:25:33,909
whenever bro gets to the jaw 3 hash it

617
00:25:31,600 --> 00:25:36,399
doesn't look up if it doesn't know or

618
00:25:33,909 --> 00:25:39,190
doesn't see that that hash it'll write

619
00:25:36,399 --> 00:25:41,439
unknown in here so what my intent is is

620
00:25:39,190 --> 00:25:43,509
that you can do your own baseline

621
00:25:41,440 --> 00:25:45,580
whatever you got your enterprise I don't

622
00:25:43,509 --> 00:25:47,409
recommend just like snort signatures

623
00:25:45,580 --> 00:25:49,449
having every single store signature ever

624
00:25:47,409 --> 00:25:51,429
wrote on your enterprise same thing here

625
00:25:49,450 --> 00:25:56,350
right now I have like 700 unique ashes

626
00:25:51,429 --> 00:25:58,809
your goal should be to create a a j-3

627
00:25:56,350 --> 00:26:00,789
description for every binary you have on

628
00:25:58,809 --> 00:26:02,470
your enterprise and that's your

629
00:26:00,789 --> 00:26:04,149
baselines and anything else is unknown

630
00:26:02,470 --> 00:26:05,679
so don't just take everything I have you

631
00:26:04,149 --> 00:26:07,330
really want to stream I didn't get

632
00:26:05,679 --> 00:26:08,919
exactly what you have and there's a

633
00:26:07,330 --> 00:26:12,879
process so essentially you'll click on

634
00:26:08,919 --> 00:26:14,289
unknown if you wanted to do this if you

635
00:26:12,879 --> 00:26:17,559
wanted to kind of figure out which asses

636
00:26:14,289 --> 00:26:19,720
are you can go down here here's the top

637
00:26:17,559 --> 00:26:23,168
and bottom talkers so you can click on

638
00:26:19,720 --> 00:26:25,090
this guy these are all the unknown

639
00:26:23,169 --> 00:26:26,950
hashes you just go down to the bottom

640
00:26:25,090 --> 00:26:29,350
it's just the SSL log so you could go to

641
00:26:26,950 --> 00:26:31,600
this host on this port and figure out

642
00:26:29,350 --> 00:26:34,178
which binary is causing that if you have

643
00:26:31,600 --> 00:26:36,129
host data being fed into here which I do

644
00:26:34,179 --> 00:26:38,049
we will show you later you can go right

645
00:26:36,129 --> 00:26:40,119
to system on and pull this so if you

646
00:26:38,049 --> 00:26:42,100
have a totally integrated seem like you

647
00:26:40,119 --> 00:26:44,830
should be aiming for you won't have to

648
00:26:42,100 --> 00:26:46,029
even go to that machine if system up if

649
00:26:44,830 --> 00:26:47,439
all your system on day just come into

650
00:26:46,029 --> 00:26:49,539
security onion you'll be able to pivot

651
00:26:47,440 --> 00:26:50,950
there it see the program that caused it

652
00:26:49,539 --> 00:26:53,470
and then you'll be able to build them

653
00:26:50,950 --> 00:26:54,700
rapping inside of the lookup table and

654
00:26:53,470 --> 00:26:59,919
kind of get rid of all these false

655
00:26:54,700 --> 00:27:01,570
positives so figurative this so

656
00:26:59,919 --> 00:27:03,760
traditionally what I do for a work flow

657
00:27:01,570 --> 00:27:06,010
is whenever I see anything from the

658
00:27:03,760 --> 00:27:15,879
Intel firing I'm gonna go there first so

659
00:27:06,010 --> 00:27:18,809
we'll go to the Intel dashboard you'll

660
00:27:15,880 --> 00:27:21,279
see here we have the jaw three fired

661
00:27:18,809 --> 00:27:23,500
here's our three indicators first we

662
00:27:21,279 --> 00:27:26,919
have PowerShell bits right so this

663
00:27:23,500 --> 00:27:29,289
little bugger it's super noisy and I

664
00:27:26,919 --> 00:27:32,139
want to get rid of it but I've seen our

665
00:27:29,289 --> 00:27:32,649
use this to download payloads from the

666
00:27:32,139 --> 00:27:34,719
Internet

667
00:27:32,649 --> 00:27:36,969
so as much as I hate a stupid false

668
00:27:34,720 --> 00:27:38,860
positive I really don't want to get rid

669
00:27:36,970 --> 00:27:41,980
of excite want to miss anything now what

670
00:27:38,860 --> 00:27:43,240
you could do is on your own network if

671
00:27:41,980 --> 00:27:46,029
you're getting that if it's super noisy

672
00:27:43,240 --> 00:27:47,710
you can come down here to all these

673
00:27:46,029 --> 00:27:49,269
destination eyepiece and just throw them

674
00:27:47,710 --> 00:27:51,460
in the filter at the top and say don't

675
00:27:49,269 --> 00:27:53,950
alert on it or don't show me and then

676
00:27:51,460 --> 00:27:56,049
that bits will only show up if a new IP

677
00:27:53,950 --> 00:27:59,380
address shows up I don't know if you

678
00:27:56,049 --> 00:28:01,360
that made sense it made sense to me so I

679
00:27:59,380 --> 00:28:02,500
have it on there it's super noisy but

680
00:28:01,360 --> 00:28:04,240
I'm gonna keep it on there cuz that's

681
00:28:02,500 --> 00:28:05,889
how I roll but here the thing I should

682
00:28:04,240 --> 00:28:08,919
have really draw drew your attention was

683
00:28:05,889 --> 00:28:10,899
Metasploit reverse https payload if I

684
00:28:08,919 --> 00:28:13,210
see that my eyes automatically can just

685
00:28:10,899 --> 00:28:15,779
figure out what is this who did this on

686
00:28:13,210 --> 00:28:18,480
my network so you hit the plus here

687
00:28:15,779 --> 00:28:23,049
scroll on down

688
00:28:18,480 --> 00:28:26,889
here's your source destination and you

689
00:28:23,049 --> 00:28:29,110
can click on the the UID and since we

690
00:28:26,889 --> 00:28:32,469
know it's a SSL log we're gonna either

691
00:28:29,110 --> 00:28:34,840
pivot to the that the traditional SSL

692
00:28:32,470 --> 00:28:37,600
dashboard or the JA three dashboard I'm

693
00:28:34,840 --> 00:28:38,590
gonna do JA three cuz I've built it so

694
00:28:37,600 --> 00:28:40,959
I've had partial to it

695
00:28:38,590 --> 00:28:43,779
I'm partial to it there you go and we

696
00:28:40,960 --> 00:28:45,850
can get some data about it so here's the

697
00:28:43,779 --> 00:28:49,149
server side certificate so this is the

698
00:28:45,850 --> 00:28:50,350
JA three hash of the Metasploit listener

699
00:28:49,149 --> 00:28:55,570
that I showed you earlier in the

700
00:28:50,350 --> 00:28:57,309
presentation the client-side hash the

701
00:28:55,570 --> 00:29:00,460
way I need this is I kind of got this

702
00:28:57,309 --> 00:29:03,129
from the way that abuse seh labelled it

703
00:29:00,460 --> 00:29:04,450
anything I've seen as a malware in a

704
00:29:03,129 --> 00:29:06,189
test environment is

705
00:29:04,450 --> 00:29:07,930
to be malware test if it's actual

706
00:29:06,190 --> 00:29:10,540
malware that I've downloaded it's just

707
00:29:07,930 --> 00:29:13,510
going to say malware on there and if if

708
00:29:10,540 --> 00:29:15,340
there's any subsequent matches like say

709
00:29:13,510 --> 00:29:17,770
it matches Google Chrome 1 and Google

710
00:29:15,340 --> 00:29:19,990
Chrome to put a semicolon and then label

711
00:29:17,770 --> 00:29:23,530
those both alright so you have an idea

712
00:29:19,990 --> 00:29:26,830
of all the different potential binaries

713
00:29:23,530 --> 00:29:31,330
it could be here's the hash we scroll

714
00:29:26,830 --> 00:29:33,399
down here we can look at the this is the

715
00:29:31,330 --> 00:29:35,169
traditional SSL log so generally what I

716
00:29:33,400 --> 00:29:40,080
do is I try to look at things like the C

717
00:29:35,170 --> 00:29:42,670
and field name to figure out so the

718
00:29:40,080 --> 00:29:44,980
organization is whatever this is the

719
00:29:42,670 --> 00:29:47,320
address the common name is Limpy I Inc

720
00:29:44,980 --> 00:29:49,360
info which automatically tells me that

721
00:29:47,320 --> 00:29:51,520
doesn't seem really like legit website

722
00:29:49,360 --> 00:29:53,409
it is self-signed cert if you get on to

723
00:29:51,520 --> 00:29:55,150
the bottom so this is kind of suspicious

724
00:29:53,410 --> 00:29:57,610
right so I'm definitely going to want to

725
00:29:55,150 --> 00:29:59,080
dive into this a little bit more I told

726
00:29:57,610 --> 00:30:00,669
you before if you have host data and

727
00:29:59,080 --> 00:30:03,250
this makes it a lot easier so you can

728
00:30:00,670 --> 00:30:07,770
actually click on your host and that's

729
00:30:03,250 --> 00:30:13,540
about 4 5 0 3 1 9 you click on your host

730
00:30:07,770 --> 00:30:18,850
pin this joker up here come on down to

731
00:30:13,540 --> 00:30:23,860
use the small data was it 5 0 3 1 8 that

732
00:30:18,850 --> 00:30:30,750
was like that and scroll down to the

733
00:30:23,860 --> 00:30:30,750
bottom I know it's me so this

734
00:30:34,299 --> 00:30:41,629
and fives it was a319 I heard us

735
00:30:39,440 --> 00:30:43,520
I think it's Fazzio 309 but this was the

736
00:30:41,630 --> 00:30:46,429
binaries that caused a race that's the

737
00:30:43,520 --> 00:30:49,460
source port and the source IP I can

738
00:30:46,429 --> 00:30:51,950
scroll on down to the system on data and

739
00:30:49,460 --> 00:30:53,929
we can see that when SCP actually fired

740
00:30:51,950 --> 00:30:55,250
these binaries so whenever you're going

741
00:30:53,929 --> 00:30:57,230
back and you try to create a whitelist

742
00:30:55,250 --> 00:30:59,030
it's actually pretty easy if you have

743
00:30:57,230 --> 00:31:00,590
system on data being ingested cause all

744
00:30:59,030 --> 00:31:02,840
I gotta do is go here and you can say

745
00:31:00,590 --> 00:31:05,030
well winscp is calling out to the

746
00:31:02,840 --> 00:31:10,100
internet all right super suspicious

747
00:31:05,030 --> 00:31:12,889
right so that's finding it finding the

748
00:31:10,100 --> 00:31:17,090
payloads using the JA three I want to

749
00:31:12,890 --> 00:31:19,280
look at my script now remember I said

750
00:31:17,090 --> 00:31:20,809
before that whenever whenever it finds

751
00:31:19,280 --> 00:31:22,700
an anomaly it writes it into the bro

752
00:31:20,809 --> 00:31:26,600
notices so let's go read your bro notice

753
00:31:22,700 --> 00:31:30,679
it'll click on that see what's happened

754
00:31:26,600 --> 00:31:34,070
in here we'll scroll down here real

755
00:31:30,679 --> 00:31:37,250
quick the name of the indicator the

756
00:31:34,070 --> 00:31:39,409
notice is no DNS query for surtseyan

757
00:31:37,250 --> 00:31:40,610
remember I'm very functional does it

758
00:31:39,410 --> 00:31:44,900
tell you exactly what it's trying to do

759
00:31:40,610 --> 00:31:47,059
so we click on here and we can scroll

760
00:31:44,900 --> 00:31:52,160
back up to the top we can see here's the

761
00:31:47,059 --> 00:31:55,490
source IPS the country codes we have

762
00:31:52,160 --> 00:31:57,320
here the ports for station sourcing

763
00:31:55,490 --> 00:31:59,090
destination at Pease this is the thing I

764
00:31:57,320 --> 00:32:02,178
really wanted to focus on so inside the

765
00:31:59,090 --> 00:32:04,909
sub message these are all the CN fields

766
00:32:02,179 --> 00:32:07,040
that didn't match to a DNS query alright

767
00:32:04,910 --> 00:32:09,380
so you have Inc info which if you

768
00:32:07,040 --> 00:32:13,070
remember back for Metasploit that was

769
00:32:09,380 --> 00:32:15,410
the last two arrays within that name it

770
00:32:13,070 --> 00:32:17,600
was it was Lincoln that Inc that info or

771
00:32:15,410 --> 00:32:19,700
something like that so this is this is

772
00:32:17,600 --> 00:32:22,159
the Metasploit payload right here and if

773
00:32:19,700 --> 00:32:26,630
fire it failed because it's both an

774
00:32:22,160 --> 00:32:28,100
auto-generated name field because that

775
00:32:26,630 --> 00:32:30,410
domain doesn't actually exist and it's

776
00:32:28,100 --> 00:32:31,909
also hard-coded IP address so because

777
00:32:30,410 --> 00:32:33,770
both of those matched they actually

778
00:32:31,910 --> 00:32:36,290
populated inside of this script as an

779
00:32:33,770 --> 00:32:40,549
anomaly oven then what I want to show is

780
00:32:36,290 --> 00:32:43,220
this weird or named Juno a strict really

781
00:32:40,549 --> 00:32:44,929
that's a weird string to put inside a

782
00:32:43,220 --> 00:32:47,000
certificate name it was supposed to be

783
00:32:44,929 --> 00:32:47,720
the fully qualified domain name so what

784
00:32:47,000 --> 00:32:52,450
we can do here

785
00:32:47,720 --> 00:32:56,690
we can hit the plus we'll filter it out

786
00:32:52,450 --> 00:33:00,140
I'll come on down here this is the

787
00:32:56,690 --> 00:33:04,070
actual just notice but this UID is the

788
00:33:00,140 --> 00:33:06,770
UID of the original certificate the

789
00:33:04,070 --> 00:33:07,928
original messed up in that up we'll come

790
00:33:06,770 --> 00:33:18,379
back up here

791
00:33:07,929 --> 00:33:20,419
pin him we'll go over to ja3 ssl so it

792
00:33:18,380 --> 00:33:22,039
did not fire on intel so at the time I

793
00:33:20,419 --> 00:33:24,080
download this malware this was not

794
00:33:22,039 --> 00:33:26,450
something that was tracking in the intel

795
00:33:24,080 --> 00:33:29,210
defile so it didn't fire it does not

796
00:33:26,450 --> 00:33:30,890
fire in snork or sericata even with ET

797
00:33:29,210 --> 00:33:33,530
pro ruleset because it was all done

798
00:33:30,890 --> 00:33:35,330
encrypted in the it could be channels so

799
00:33:33,530 --> 00:33:39,440
I was really blind to it without this

800
00:33:35,330 --> 00:33:41,780
script and I'm clicking on stuff but

801
00:33:39,440 --> 00:33:43,880
with touchpad it did pop-up here though

802
00:33:41,780 --> 00:33:45,649
so at some point I saw this as malware

803
00:33:43,880 --> 00:33:48,260
and I have that malware as the Durex now

804
00:33:45,650 --> 00:33:50,299
we're family so I did see it there using

805
00:33:48,260 --> 00:33:54,700
my mappings but I didn't have it the

806
00:33:50,299 --> 00:33:58,280
Intel Dada file if you scroll on down

807
00:33:54,700 --> 00:34:03,309
you can see the source is the one dot

808
00:33:58,280 --> 00:34:08,330
dot one dot 139 it is going to this a 47

809
00:34:03,309 --> 00:34:09,589
or 48 et 2.16 to you and then again if

810
00:34:08,330 --> 00:34:13,098
you have host data you can do the same

811
00:34:09,589 --> 00:34:16,279
thing you can click on this and 50 50

812
00:34:13,099 --> 00:34:19,250
508 you can go up and get that system on

813
00:34:16,280 --> 00:34:21,230
data and you can actually see the

814
00:34:19,250 --> 00:34:24,699
binaries that caused it and that's

815
00:34:21,230 --> 00:34:24,699
really where we need to be going as

816
00:34:24,790 --> 00:34:30,349
Network analyst and as we things in the

817
00:34:28,969 --> 00:34:32,089
the Internet's are getting more and more

818
00:34:30,349 --> 00:34:34,460
cryptid we need to start relying more

819
00:34:32,089 --> 00:34:36,799
heavily on host integration in all the

820
00:34:34,460 --> 00:34:38,389
conferences or all the presentations

821
00:34:36,800 --> 00:34:40,369
that I've seen will really seems like

822
00:34:38,389 --> 00:34:41,990
the whole community is moving toward

823
00:34:40,369 --> 00:34:44,119
that it we really see the importance of

824
00:34:41,989 --> 00:34:47,598
having host data integrated with network

825
00:34:44,119 --> 00:34:51,320
data in order to find bad guys so let's

826
00:34:47,599 --> 00:34:56,830
get rid of this thing and we'll see if

827
00:34:51,320 --> 00:34:56,830
we can't find 50 50 508 I think it was

828
00:34:57,780 --> 00:35:06,550
805 5050 805 we look here and this is

829
00:35:04,540 --> 00:35:12,910
the system on data from the host and you

830
00:35:06,550 --> 00:35:15,190
can see there's a reg server 30 to 90 XE

831
00:35:12,910 --> 00:35:17,620
was the mechanism that was creating this

832
00:35:15,190 --> 00:35:19,810
potential malicious file so we were just

833
00:35:17,620 --> 00:35:21,880
go to the host pull that file off and do

834
00:35:19,810 --> 00:35:23,830
some file analysis or we can use some of

835
00:35:21,880 --> 00:35:25,510
the other presentations and just grab

836
00:35:23,830 --> 00:35:29,259
that data right off I'm using ger

837
00:35:25,510 --> 00:35:32,470
something like that so that was all I

838
00:35:29,260 --> 00:35:41,070
had for my presentation I'm as far as

839
00:35:32,470 --> 00:35:41,069
the demo do you have any questions yes

840
00:35:49,590 --> 00:35:56,890
that is awesome I'm going back one hour

841
00:35:54,220 --> 00:35:58,359
and I'm searching just for the query so

842
00:35:56,890 --> 00:35:59,890
I'm looking at the query record I go

843
00:35:58,360 --> 00:36:01,450
back an hour all of this stuff is

844
00:35:59,890 --> 00:36:03,700
configurable all you gotta do is open up

845
00:36:01,450 --> 00:36:06,250
my script and go in there change however

846
00:36:03,700 --> 00:36:07,660
however long you wanted to do it that's

847
00:36:06,250 --> 00:36:11,860
a good thing that's a good question

848
00:36:07,660 --> 00:36:13,899
because if you know how bro works if a

849
00:36:11,860 --> 00:36:15,940
session bro doesn't write the file until

850
00:36:13,900 --> 00:36:17,950
after the session ends or after a

851
00:36:15,940 --> 00:36:19,390
timeout of not getting any data from it

852
00:36:17,950 --> 00:36:21,970
right so if you have a session that

853
00:36:19,390 --> 00:36:24,370
lasts three days and it finally writes

854
00:36:21,970 --> 00:36:26,109
and that's a malicious session that DNS

855
00:36:24,370 --> 00:36:29,049
queries not going to exist because that

856
00:36:26,110 --> 00:36:30,760
happened three days ago right that's

857
00:36:29,050 --> 00:36:33,630
mind-blowing right so that's a good

858
00:36:30,760 --> 00:36:36,870
question right and and this is just

859
00:36:33,630 --> 00:36:39,400
usually what I do whenever I find

860
00:36:36,870 --> 00:36:40,720
anomalies I'll go back and I'll search

861
00:36:39,400 --> 00:36:42,310
like the last seven days says this

862
00:36:40,720 --> 00:36:44,379
happened and then I'll started looking

863
00:36:42,310 --> 00:36:46,000
at each of the certificates but there is

864
00:36:44,380 --> 00:36:47,740
a chance of having false positives for

865
00:36:46,000 --> 00:36:49,810
that depending on how long that session

866
00:36:47,740 --> 00:36:52,120
is and may go outside that one hour

867
00:36:49,810 --> 00:36:54,220
threshold for DNS queries but I wanted

868
00:36:52,120 --> 00:36:55,299
to keep the query small so that elastic

869
00:36:54,220 --> 00:36:58,649
searchers are getting punched in the

870
00:36:55,300 --> 00:37:05,500
face with a bunch of additional queries

871
00:36:58,650 --> 00:37:07,390
the other questions no all right yeah

872
00:37:05,500 --> 00:37:07,850
well thank you I hope you guys enjoyed

873
00:37:07,390 --> 00:37:13,158
it

874
00:37:07,850 --> 00:37:13,159
[Applause]

