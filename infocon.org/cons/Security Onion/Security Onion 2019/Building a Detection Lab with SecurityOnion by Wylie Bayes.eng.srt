1
00:00:09,210 --> 00:00:15,450
so we'd like to open the afternoon

2
00:00:12,900 --> 00:00:17,580
talking about building a detection lab

3
00:00:15,450 --> 00:00:24,990
with security onion and so for that I

4
00:00:17,580 --> 00:00:25,320
gave you why the Bayes thank you

5
00:00:24,990 --> 00:00:28,770
everyone

6
00:00:25,320 --> 00:00:30,330
can you hear me okay all right great I'm

7
00:00:28,770 --> 00:00:33,269
here to talk to you today about how to

8
00:00:30,330 --> 00:00:36,949
how I built a detection lab with

9
00:00:33,270 --> 00:00:40,860
security onion for a class of new

10
00:00:36,949 --> 00:00:43,860
analysts and I'm gonna go over exactly

11
00:00:40,860 --> 00:00:47,700
how I did all that if you want to follow

12
00:00:43,860 --> 00:00:49,950
along I've got links to the slides here

13
00:00:47,700 --> 00:00:53,760
at the bottom if you want to pull that

14
00:00:49,950 --> 00:00:54,239
up on your own computer you can so Who

15
00:00:53,760 --> 00:00:57,449
am I

16
00:00:54,239 --> 00:01:00,059
my name is Wiley Bayes I was in the Navy

17
00:00:57,450 --> 00:01:03,750
early on right out of high school did IT

18
00:01:00,059 --> 00:01:06,119
stuff in the Navy I've been in IT for 15

19
00:01:03,750 --> 00:01:08,180
plus issued I'm good I'm gonna go try to

20
00:01:06,119 --> 00:01:11,750
deal with it systems engineering

21
00:01:08,180 --> 00:01:14,670
virtualization storage and security work

22
00:01:11,750 --> 00:01:16,650
I was a network defense analyst at the

23
00:01:14,670 --> 00:01:20,700
missile defense agency which is a

24
00:01:16,650 --> 00:01:22,920
certified to CS SP for quite a while and

25
00:01:20,700 --> 00:01:24,750
like I said I currently teach airports

26
00:01:22,920 --> 00:01:28,740
personnel how to be defensive cyber

27
00:01:24,750 --> 00:01:31,080
operators I've got a BS in computer

28
00:01:28,740 --> 00:01:35,880
network management and some certs yada

29
00:01:31,080 --> 00:01:37,679
yada yada so what are we covering today

30
00:01:35,880 --> 00:01:40,589
we're gonna talk about our lab

31
00:01:37,680 --> 00:01:43,860
architecture which is a extremely

32
00:01:40,590 --> 00:01:45,509
important piece to this talk if we don't

33
00:01:43,860 --> 00:01:47,880
understand the lab architecture it's

34
00:01:45,509 --> 00:01:51,119
going to be kind of confusing so we're

35
00:01:47,880 --> 00:01:53,399
gonna hammer that home pretty hard next

36
00:01:51,119 --> 00:01:55,619
we're gonna talk about the services and

37
00:01:53,400 --> 00:02:00,990
routing firewalling that are provided in

38
00:01:55,619 --> 00:02:02,880
this lab by a single OpenBSD machine and

39
00:02:00,990 --> 00:02:05,908
then we're gonna go over some VMware

40
00:02:02,880 --> 00:02:07,380
configurations to make this all work and

41
00:02:05,909 --> 00:02:11,390
then we're gonna talk about creating and

42
00:02:07,380 --> 00:02:14,519
executing scenarios and how those can be

43
00:02:11,390 --> 00:02:15,988
mixed and matched intertwined changed

44
00:02:14,519 --> 00:02:17,639
out at will depending on what you're

45
00:02:15,989 --> 00:02:20,519
trying to detect or what scenarios

46
00:02:17,639 --> 00:02:22,950
you're trying to create and then we're

47
00:02:20,519 --> 00:02:24,330
going to go over analyzing our results

48
00:02:22,950 --> 00:02:26,730
and then we're gonna talk about how you

49
00:02:24,330 --> 00:02:30,030
can turn all of this into a blue team

50
00:02:26,730 --> 00:02:32,640
CTF and how I was able to do that for

51
00:02:30,030 --> 00:02:34,319
students and it really resonated with

52
00:02:32,640 --> 00:02:37,319
them as far as like actually doing

53
00:02:34,319 --> 00:02:38,730
investigations and figuring out all this

54
00:02:37,319 --> 00:02:41,458
stuff is new analyzed because it's it's

55
00:02:38,730 --> 00:02:45,119
hard and then if we have time we'll take

56
00:02:41,459 --> 00:02:48,470
some questions so the environment this

57
00:02:45,120 --> 00:02:52,290
is what I used to set all this up

58
00:02:48,470 --> 00:02:56,250
IBM or D Center ESXi 6 5 with

59
00:02:52,290 --> 00:02:59,880
distributed switching at the time I used

60
00:02:56,250 --> 00:03:02,190
OpenBSD 6 3 but um all of this should be

61
00:02:59,880 --> 00:03:06,030
forward compatible all the way up to 6 5

62
00:03:02,190 --> 00:03:09,359
& 6 6 current which should be out in

63
00:03:06,030 --> 00:03:12,690
November um at the time also I use

64
00:03:09,360 --> 00:03:15,510
security onion 6.1 I know that it's up a

65
00:03:12,690 --> 00:03:17,010
couple of versions since then but at the

66
00:03:15,510 --> 00:03:18,450
time when I used to set all this up and

67
00:03:17,010 --> 00:03:21,179
made all these files I was using to

68
00:03:18,450 --> 00:03:25,170
carry onion 6.1 and then various other

69
00:03:21,180 --> 00:03:26,880
machines Kali Windows Linux lots of

70
00:03:25,170 --> 00:03:30,350
other VMs in the environment just for

71
00:03:26,880 --> 00:03:35,459
the purposes of having something to

72
00:03:30,350 --> 00:03:39,930
exploit and detect so here's our logical

73
00:03:35,459 --> 00:03:43,620
topology up in the top left corner is

74
00:03:39,930 --> 00:03:47,910
our simulated public internet the little

75
00:03:43,620 --> 00:03:49,380
the the scary Red Cloud right and I know

76
00:03:47,910 --> 00:03:52,230
this is kind of hard to see but these

77
00:03:49,380 --> 00:03:53,519
slides are available offline and you can

78
00:03:52,230 --> 00:03:58,260
drill down and look at all of the

79
00:03:53,519 --> 00:04:01,769
specifics on this but the firewall the

80
00:03:58,260 --> 00:04:05,030
brick wall machine basically is the most

81
00:04:01,769 --> 00:04:08,880
important piece to this logical operator

82
00:04:05,030 --> 00:04:12,480
it is an open BSD machine and it holds

83
00:04:08,880 --> 00:04:17,909
all of the dot one gateway interfaces

84
00:04:12,480 --> 00:04:23,390
for every subnet ok so we have in 99 5.1

85
00:04:17,910 --> 00:04:24,960
1099 6.1 1099 7.1 1099 8.1 and then our

86
00:04:23,390 --> 00:04:29,250
quote unquote

87
00:04:24,960 --> 00:04:31,890
public address on the internet is 170

88
00:04:29,250 --> 00:04:32,280
216 10.1 does that make sense to

89
00:04:31,890 --> 00:04:35,250
everybody

90
00:04:32,280 --> 00:04:35,960
I know that's a private address but for

91
00:04:35,250 --> 00:04:38,240
the

92
00:04:35,960 --> 00:04:39,888
purposes of this course I kept it

93
00:04:38,240 --> 00:04:42,050
private because I didn't want anything

94
00:04:39,889 --> 00:04:43,669
to axe accidentally leaked out to the

95
00:04:42,050 --> 00:04:48,380
Internet so for the purposes of this

96
00:04:43,669 --> 00:04:53,090
course 170 216 10.1 is our public facing

97
00:04:48,380 --> 00:04:55,009
address and then the purple line is a

98
00:04:53,090 --> 00:04:57,799
port mirror that we set up inside a

99
00:04:55,009 --> 00:04:59,090
vmware that goes to security onion it

100
00:04:57,800 --> 00:05:00,620
takes all that traffic

101
00:04:59,090 --> 00:05:02,388
anything that's traversing subnets in

102
00:05:00,620 --> 00:05:04,340
between subnets it takes all of that

103
00:05:02,389 --> 00:05:06,620
traffic and mirrors it over to our

104
00:05:04,340 --> 00:05:09,138
security onion instance so I can see

105
00:05:06,620 --> 00:05:11,840
everything these green boxes in the

106
00:05:09,139 --> 00:05:14,479
middle here are just client networks

107
00:05:11,840 --> 00:05:18,979
this is 1099 seven and eight on the left

108
00:05:14,479 --> 00:05:20,750
and 1099 six on the right with a bunch

109
00:05:18,979 --> 00:05:23,060
of servers there's a domain controller

110
00:05:20,750 --> 00:05:27,680
in there there's a couple member servers

111
00:05:23,060 --> 00:05:29,810
a bunch of Windows 10 machines SRC TFD

112
00:05:27,680 --> 00:05:32,389
servers in there as well so there's just

113
00:05:29,810 --> 00:05:33,680
a bunch of various clients out in there

114
00:05:32,389 --> 00:05:37,190
to work with

115
00:05:33,680 --> 00:05:39,800
now finally over here on the right is

116
00:05:37,190 --> 00:05:43,340
our ports protocols and services as we

117
00:05:39,800 --> 00:05:45,560
call it in the DoD community but what

118
00:05:43,340 --> 00:05:47,888
we're gonna do here and for new analysts

119
00:05:45,560 --> 00:05:50,330
this is not necessarily all that

120
00:05:47,889 --> 00:05:53,479
apparent right if you're looking at this

121
00:05:50,330 --> 00:05:55,370
and this is our boundary and it's going

122
00:05:53,479 --> 00:05:58,580
to show you these are the ports that are

123
00:05:55,370 --> 00:06:00,199
open on our boundary and those are the

124
00:05:58,580 --> 00:06:04,669
machines that we're gonna point them to

125
00:06:00,199 --> 00:06:07,099
internally right so a couple things

126
00:06:04,669 --> 00:06:10,698
there should be pretty glaring to a lot

127
00:06:07,099 --> 00:06:13,130
of us here I'm sure but to new analysts

128
00:06:10,699 --> 00:06:16,159
it's not necessarily super apparent so

129
00:06:13,130 --> 00:06:19,419
this is where we try to dive in and help

130
00:06:16,159 --> 00:06:21,830
them with that um ok so moving on

131
00:06:19,419 --> 00:06:27,198
OpenBSD route and firewall all the

132
00:06:21,830 --> 00:06:30,219
things right you I also have stickers if

133
00:06:27,199 --> 00:06:30,219
anybody wants one after

134
00:06:31,540 --> 00:06:37,510
uh-huh so these are the services and

135
00:06:35,530 --> 00:06:39,760
configurations supported by this one

136
00:06:37,510 --> 00:06:40,870
firewall machine that we've been talking

137
00:06:39,760 --> 00:06:43,680
about

138
00:06:40,870 --> 00:06:46,740
it's got PF packet filter which is

139
00:06:43,680 --> 00:06:49,180
absolutely necessary for this to work

140
00:06:46,740 --> 00:06:51,220
we've got our sis ETL IP forwarding

141
00:06:49,180 --> 00:06:54,400
that's just a configuration item that

142
00:06:51,220 --> 00:06:57,100
allows NAT to happen

143
00:06:54,400 --> 00:06:59,140
we've got DHCP this server also hands

144
00:06:57,100 --> 00:07:01,630
out DHCP to all of those different

145
00:06:59,140 --> 00:07:04,300
subnets to clients on those networks

146
00:07:01,630 --> 00:07:06,310
it's a DHCP server for all that it's

147
00:07:04,300 --> 00:07:08,740
also our ntp server for the entire

148
00:07:06,310 --> 00:07:11,170
network it listens for ntp on all

149
00:07:08,740 --> 00:07:14,050
interfaces so it provides timing to the

150
00:07:11,170 --> 00:07:18,630
entire lab and then we've got an RC

151
00:07:14,050 --> 00:07:21,970
local file this is where you can create

152
00:07:18,630 --> 00:07:24,340
or uh some commands that it started up

153
00:07:21,970 --> 00:07:26,860
when machine boots so we have a custom

154
00:07:24,340 --> 00:07:31,840
TCP dump rule to get all of our packet

155
00:07:26,860 --> 00:07:33,790
filter to our security onion okay so

156
00:07:31,840 --> 00:07:36,609
where were we

157
00:07:33,790 --> 00:07:38,920
RC local is the file we use to create a

158
00:07:36,610 --> 00:07:40,810
custom TCP dump rule that sends all of

159
00:07:38,920 --> 00:07:43,240
our packet filter data which is our

160
00:07:40,810 --> 00:07:47,020
firewall data into our security engine

161
00:07:43,240 --> 00:07:48,850
and then finally our C cough dot local

162
00:07:47,020 --> 00:07:52,780
just make sure that our other services

163
00:07:48,850 --> 00:07:57,880
are starting up like DHCP PF log D ntpd

164
00:07:52,780 --> 00:07:59,559
etc so here again is just an output of

165
00:07:57,880 --> 00:08:01,480
the open BSC

166
00:07:59,560 --> 00:08:05,410
I have config on the command line and

167
00:08:01,480 --> 00:08:07,330
also a snippet of the logical diagram

168
00:08:05,410 --> 00:08:08,830
where the firewall shows all the

169
00:08:07,330 --> 00:08:11,080
interfaces right so we have all those

170
00:08:08,830 --> 00:08:16,650
interfaces and here's just the output of

171
00:08:11,080 --> 00:08:22,599
that highlighting here in the middle are

172
00:08:16,650 --> 00:08:26,770
172 16 10.1 is our em3 interface right

173
00:08:22,600 --> 00:08:29,860
so we've got en 0 through en 5 but iam 3

174
00:08:26,770 --> 00:08:35,530
is our boundary interface for this for

175
00:08:29,860 --> 00:08:39,969
this presentation ok so inside of our

176
00:08:35,530 --> 00:08:43,030
host name file on Ian 3 our primary

177
00:08:39,969 --> 00:08:45,130
interface here is 172 1610 1 which we

178
00:08:43,030 --> 00:08:47,920
talked about however

179
00:08:45,130 --> 00:08:50,439
you can then add aliases to these

180
00:08:47,920 --> 00:08:53,589
interfaces which are sub interfaces and

181
00:08:50,440 --> 00:08:56,770
OpenBSD Z the same thing but then this

182
00:08:53,590 --> 00:09:01,990
is where you can just slap on a ton of

183
00:08:56,770 --> 00:09:04,420
extra IP ranges and target the public

184
00:09:01,990 --> 00:09:06,190
address from these other addresses it

185
00:09:04,420 --> 00:09:07,810
looks like the source address that's

186
00:09:06,190 --> 00:09:09,580
being that's coming into your network

187
00:09:07,810 --> 00:09:12,160
and attacking your boundary is actually

188
00:09:09,580 --> 00:09:13,630
one of these IPA ality on the internet

189
00:09:12,160 --> 00:09:16,120
and you can just make this up and all

190
00:09:13,630 --> 00:09:18,310
the geo-mapping inside of a security

191
00:09:16,120 --> 00:09:20,760
onion will tell you oh this came from

192
00:09:18,310 --> 00:09:25,060
North Korea or this came from wherever

193
00:09:20,760 --> 00:09:27,280
so and this is pretty seamless to the

194
00:09:25,060 --> 00:09:30,369
user to the to the student they can't

195
00:09:27,280 --> 00:09:32,860
really see this and you can add pretty

196
00:09:30,370 --> 00:09:34,360
much as many of these as you'd like so

197
00:09:32,860 --> 00:09:36,760
this could be there could be a hundred

198
00:09:34,360 --> 00:09:38,530
entries a thousand entries in here to

199
00:09:36,760 --> 00:09:41,860
find as many IP networks as you want

200
00:09:38,530 --> 00:09:44,650
really so that's what that looks like

201
00:09:41,860 --> 00:09:46,900
for our host name for our boundary now

202
00:09:44,650 --> 00:09:49,920
let's talk about our PF comm file this

203
00:09:46,900 --> 00:09:53,170
is kind of where all the magic happens

204
00:09:49,920 --> 00:09:54,880
at the top here we've just defined our

205
00:09:53,170 --> 00:09:56,949
interface if these are just comments and

206
00:09:54,880 --> 00:09:59,890
they tell you what they're for

207
00:09:56,950 --> 00:10:03,940
I bolded the em3 again to highlight our

208
00:09:59,890 --> 00:10:06,520
external boundary interface next we've

209
00:10:03,940 --> 00:10:09,880
got just some basic pass rules to pass

210
00:10:06,520 --> 00:10:11,170
out everything note again logging on a

211
00:10:09,880 --> 00:10:15,220
and three because we want to log

212
00:10:11,170 --> 00:10:17,589
everything at the boundary did we block

213
00:10:15,220 --> 00:10:19,150
some annoying IGMP just to cut down on

214
00:10:17,590 --> 00:10:20,650
the chatter and then finally the block

215
00:10:19,150 --> 00:10:24,459
at the very bottom row at the very

216
00:10:20,650 --> 00:10:26,650
bottom is our default block again log on

217
00:10:24,460 --> 00:10:32,080
em3 we always want to log at our

218
00:10:26,650 --> 00:10:37,180
boundary next we've got just a few rules

219
00:10:32,080 --> 00:10:39,550
to block either block or allow traffic

220
00:10:37,180 --> 00:10:42,280
from some scanners that we had in the

221
00:10:39,550 --> 00:10:44,680
environment but the next section the

222
00:10:42,280 --> 00:10:46,990
custom firewall rules this is where this

223
00:10:44,680 --> 00:10:48,729
is going to map out exactly to what our

224
00:10:46,990 --> 00:10:50,680
ports protocols and services are that we

225
00:10:48,730 --> 00:10:53,260
talked about from the diagram so if you

226
00:10:50,680 --> 00:10:57,520
look at this first one that's bolded

227
00:10:53,260 --> 00:10:58,720
pass in login 3 from in e to e m3 port

228
00:10:57,520 --> 00:11:02,310
22

229
00:10:58,720 --> 00:11:05,470
and then redirect that to 1099 621 on

230
00:11:02,310 --> 00:11:06,969
422 so it's gonna take that traffic out

231
00:11:05,470 --> 00:11:10,509
our boundary and forward it to our

232
00:11:06,970 --> 00:11:13,180
internal machine which is 1099 621 and

233
00:11:10,509 --> 00:11:15,459
if you look at all those it maps out

234
00:11:13,180 --> 00:11:16,930
exactly to what our ports protocols and

235
00:11:15,459 --> 00:11:21,910
services were that we highlighted in the

236
00:11:16,930 --> 00:11:26,800
beginning IAM three port 445 redirect a

237
00:11:21,910 --> 00:11:30,040
1099 632 on four four four five ten a

238
00:11:26,800 --> 00:11:31,949
nine six twenty seven or port six six

239
00:11:30,040 --> 00:11:34,959
six seven and thirty six twenty two and

240
00:11:31,949 --> 00:11:37,628
then down at the bottom this is actually

241
00:11:34,959 --> 00:11:39,339
commented out but that's another

242
00:11:37,629 --> 00:11:43,149
scenario that i had set up that was like

243
00:11:39,339 --> 00:11:45,100
an au wasp broken web applications vm i

244
00:11:43,149 --> 00:11:47,110
was doing some testing against so you

245
00:11:45,100 --> 00:11:48,550
can just open these up you can open

246
00:11:47,110 --> 00:11:50,199
these up and point them at whatever

247
00:11:48,550 --> 00:11:52,660
machines internally that you'd like to

248
00:11:50,199 --> 00:11:55,269
create different aspects like say you

249
00:11:52,660 --> 00:11:58,149
want to play around with shellshock so

250
00:11:55,269 --> 00:11:59,829
you open a port point it at the box

251
00:11:58,149 --> 00:12:02,350
that's vulnerable to shell shock attack

252
00:11:59,829 --> 00:12:04,508
it from out in the pot simulated public

253
00:12:02,350 --> 00:12:06,009
internet it runs all that traffic runs

254
00:12:04,509 --> 00:12:08,009
through your sensors runs through

255
00:12:06,009 --> 00:12:10,569
everything creates all the logs for you

256
00:12:08,009 --> 00:12:14,079
and then you get to see it live it's not

257
00:12:10,569 --> 00:12:19,479
just like replaying a pcap or you know

258
00:12:14,079 --> 00:12:21,309
it's all live so finally bear with me

259
00:12:19,480 --> 00:12:23,410
we've just got we're gonna allow syslog

260
00:12:21,309 --> 00:12:25,540
everywhere we're gonna allow dns and

261
00:12:23,410 --> 00:12:28,629
then these were just student access

262
00:12:25,540 --> 00:12:30,490
rules that i use to control access to

263
00:12:28,629 --> 00:12:33,009
certain portions of the course like I

264
00:12:30,490 --> 00:12:35,800
only wanted students to be able to get

265
00:12:33,009 --> 00:12:37,689
on the C T FD server on Friday when we

266
00:12:35,800 --> 00:12:40,420
were gonna do the CTF I didn't want them

267
00:12:37,689 --> 00:12:42,250
poking around in there until it was time

268
00:12:40,420 --> 00:12:44,439
to do that so with these rules on the

269
00:12:42,250 --> 00:12:46,569
last page or just ways that you can walk

270
00:12:44,439 --> 00:12:50,559
things down from if you were conducting

271
00:12:46,569 --> 00:12:54,670
a course so that's basically it for RPF

272
00:12:50,559 --> 00:12:57,219
Kampf now let's talk about VMware this

273
00:12:54,670 --> 00:12:59,079
is real simple so inside of the Center

274
00:12:57,220 --> 00:13:01,779
on your distributed switch there's a

275
00:12:59,079 --> 00:13:03,790
configure tab with a port mirroring

276
00:13:01,779 --> 00:13:06,850
section so and all you have to do is

277
00:13:03,790 --> 00:13:08,529
click the new button there and it would

278
00:13:06,850 --> 00:13:11,520
pop up a little dialog that looks like

279
00:13:08,529 --> 00:13:13,620
this and you give it a name

280
00:13:11,520 --> 00:13:15,449
it's enabled the only thing that I

281
00:13:13,620 --> 00:13:18,180
actually changed on this was I changed

282
00:13:15,450 --> 00:13:21,089
my mirrored packet length to 512 I found

283
00:13:18,180 --> 00:13:23,370
that that gave me the best results where

284
00:13:21,089 --> 00:13:27,240
I was getting very minimal capture loss

285
00:13:23,370 --> 00:13:29,940
on security onion and I had really good

286
00:13:27,240 --> 00:13:31,620
results with that so next thing is you

287
00:13:29,940 --> 00:13:33,930
just define your sources so here's our

288
00:13:31,620 --> 00:13:36,149
OpenBSD machine that's doing all of our

289
00:13:33,930 --> 00:13:38,849
routing for us and I want to mirror

290
00:13:36,149 --> 00:13:41,700
these 3 interfaces on it one of them is

291
00:13:38,850 --> 00:13:44,550
our public the other two are internal

292
00:13:41,700 --> 00:13:47,070
subnets that will capture and if any of

293
00:13:44,550 --> 00:13:48,750
the other subnets talk to anything in

294
00:13:47,070 --> 00:13:51,209
these mirrored subnets it ends up

295
00:13:48,750 --> 00:13:54,230
hitting the security center anyway

296
00:13:51,209 --> 00:13:57,540
so to find your sources I want those

297
00:13:54,230 --> 00:14:00,270
destination or security onion and that's

298
00:13:57,540 --> 00:14:02,189
just going to be our actual capture

299
00:14:00,270 --> 00:14:09,630
interface that we're monitoring on

300
00:14:02,190 --> 00:14:11,850
security onion all right so we've got

301
00:14:09,630 --> 00:14:15,510
all this great Network data now right we

302
00:14:11,850 --> 00:14:18,450
can see everything all this bro

303
00:14:15,510 --> 00:14:20,279
traffic's coming across we can see every

304
00:14:18,450 --> 00:14:22,110
connection that's happening one computer

305
00:14:20,279 --> 00:14:23,790
talks to another computer on two

306
00:14:22,110 --> 00:14:25,560
different subnets we've got all of this

307
00:14:23,790 --> 00:14:27,779
log traffic now in security onion right

308
00:14:25,560 --> 00:14:32,430
that's great like sweet that's great

309
00:14:27,779 --> 00:14:35,520
however we all like more data right

310
00:14:32,430 --> 00:14:37,459
let's get more data like so that these

311
00:14:35,520 --> 00:14:39,899
analysts can really have a bunch of

312
00:14:37,459 --> 00:14:42,750
juicy logs to look at and they can

313
00:14:39,899 --> 00:14:46,800
really do full investigations or

314
00:14:42,750 --> 00:14:49,649
practice investigations this way so next

315
00:14:46,800 --> 00:14:52,500
we've pushed all of the syslog data that

316
00:14:49,649 --> 00:14:56,970
we could into security onion from our

317
00:14:52,500 --> 00:14:58,740
open BSD firewall router from a web

318
00:14:56,970 --> 00:15:01,170
server that we had internally all the

319
00:14:58,740 --> 00:15:04,709
data from our ESXi hosts we just pushed

320
00:15:01,170 --> 00:15:10,170
up in their data from tenable security

321
00:15:04,709 --> 00:15:13,290
center data from HR McAfee EPO and then

322
00:15:10,170 --> 00:15:16,589
finally I mentioned that custom TCP dump

323
00:15:13,290 --> 00:15:19,079
rule that put in the RC comm file and it

324
00:15:16,589 --> 00:15:24,750
looks just like this and all this is

325
00:15:19,079 --> 00:15:27,930
doing here is monitoring the PF log zero

326
00:15:24,750 --> 00:15:31,260
interface which is basically just an

327
00:15:27,930 --> 00:15:33,239
interface in OpenBSD that anything

328
00:15:31,260 --> 00:15:36,060
that's that you tell it to login your PF

329
00:15:33,240 --> 00:15:38,040
comm file will output to this interface

330
00:15:36,060 --> 00:15:40,439
and you can TCP dump it just like any

331
00:15:38,040 --> 00:15:44,040
other interface and then I pipe that to

332
00:15:40,440 --> 00:15:47,220
logger and send it to syslog which local

333
00:15:44,040 --> 00:15:49,620
info to here will be all of our firewall

334
00:15:47,220 --> 00:15:52,200
data coming from PF and then down at the

335
00:15:49,620 --> 00:15:54,420
bottom that's just the one entry inside

336
00:15:52,200 --> 00:15:56,910
of your syslog comm where you send all

337
00:15:54,420 --> 00:15:58,439
of the different messages and at the

338
00:15:56,910 --> 00:16:01,490
host that you want it to go to in this

339
00:15:58,440 --> 00:16:05,870
case 1099 6.10 is my security center

340
00:16:01,490 --> 00:16:08,700
right i mean my security onion i'm sorry

341
00:16:05,870 --> 00:16:13,680
okay so we got all that great syslog

342
00:16:08,700 --> 00:16:15,240
data now right and that's just awesome

343
00:16:13,680 --> 00:16:17,640
like we're really getting there we've

344
00:16:15,240 --> 00:16:19,740
really got some good data now but we

345
00:16:17,640 --> 00:16:21,569
want more let's keep going let's keep

346
00:16:19,740 --> 00:16:23,850
going let's get all of our system on

347
00:16:21,570 --> 00:16:25,340
data in there now right and our Windows

348
00:16:23,850 --> 00:16:27,750
Event log data because we have all those

349
00:16:25,340 --> 00:16:29,520
Windows machines in that subnet too we

350
00:16:27,750 --> 00:16:31,050
have a domain controller we've got

351
00:16:29,520 --> 00:16:32,520
member servers we've got Windows 10

352
00:16:31,050 --> 00:16:36,329
clients like we need to get all that

353
00:16:32,520 --> 00:16:37,439
Windows data to write so here's a real

354
00:16:36,330 --> 00:16:40,760
simple

355
00:16:37,440 --> 00:16:45,440
win log beat configuration screenshot of

356
00:16:40,760 --> 00:16:48,000
just getting application security

357
00:16:45,440 --> 00:16:51,870
Microsoft Windows PowerShell operational

358
00:16:48,000 --> 00:16:54,480
task scheduler operational and our

359
00:16:51,870 --> 00:16:55,860
system on logs that's everything that I

360
00:16:54,480 --> 00:16:57,420
wanted to capture off of the windows

361
00:16:55,860 --> 00:16:59,940
host and send it security onion so

362
00:16:57,420 --> 00:17:02,040
here's the configuration file that does

363
00:16:59,940 --> 00:17:04,800
that obviously you guys probably already

364
00:17:02,040 --> 00:17:08,938
know it sends it in JSON over TCP five

365
00:17:04,800 --> 00:17:12,180
four four and four sis Mon I started out

366
00:17:08,939 --> 00:17:15,120
with Swift on security that's his

367
00:17:12,180 --> 00:17:18,030
Twitter handle but they've got a great

368
00:17:15,119 --> 00:17:19,560
configuration to start with and then you

369
00:17:18,030 --> 00:17:21,930
can kind of tweak it from there but if

370
00:17:19,560 --> 00:17:24,119
you if you don't know Swift on security

371
00:17:21,930 --> 00:17:26,819
he's got a really really really good

372
00:17:24,119 --> 00:17:28,580
system on stuff out there so check that

373
00:17:26,819 --> 00:17:32,010
out

374
00:17:28,580 --> 00:17:33,389
all right great so now we've got all of

375
00:17:32,010 --> 00:17:36,360
our windows logs coming in and we've got

376
00:17:33,390 --> 00:17:38,430
all of our syslog data coming in and

377
00:17:36,360 --> 00:17:40,570
we've got all of our network traffic

378
00:17:38,430 --> 00:17:43,660
great so now it's almost like these

379
00:17:40,570 --> 00:17:46,030
analysts have pure visibility in this

380
00:17:43,660 --> 00:17:50,890
network doesn't sound like there's too

381
00:17:46,030 --> 00:17:54,550
much missing also our system on data is

382
00:17:50,890 --> 00:17:55,810
so rich it's so rich I don't know if

383
00:17:54,550 --> 00:17:57,879
you've ever looked at sis Mon data

384
00:17:55,810 --> 00:18:01,780
before but if you haven't you should

385
00:17:57,880 --> 00:18:03,220
because it's it's rich and these are

386
00:18:01,780 --> 00:18:06,460
just examples of that this is like a

387
00:18:03,220 --> 00:18:08,980
process create command shows you you

388
00:18:06,460 --> 00:18:13,780
know what image was spawned where it

389
00:18:08,980 --> 00:18:16,270
what user spawned it session IDs login

390
00:18:13,780 --> 00:18:17,740
gooood IDs like it's it's very very rich

391
00:18:16,270 --> 00:18:22,750
data if you haven't played with this one

392
00:18:17,740 --> 00:18:25,230
you really should all right so let's

393
00:18:22,750 --> 00:18:31,450
talk about how we're gonna create

394
00:18:25,230 --> 00:18:32,770
scenarios again hammering this home

395
00:18:31,450 --> 00:18:36,670
because we really want this to be

396
00:18:32,770 --> 00:18:39,010
important this is again our our ports

397
00:18:36,670 --> 00:18:43,360
protocols and services our traffic is

398
00:18:39,010 --> 00:18:45,070
mirrored across all subnets it's

399
00:18:43,360 --> 00:18:46,689
mirrored from the simulated public

400
00:18:45,070 --> 00:18:49,149
Internet and these are the ports that

401
00:18:46,690 --> 00:18:52,090
are open at our boundary and going

402
00:18:49,150 --> 00:18:53,980
internal to our machines and these can

403
00:18:52,090 --> 00:18:57,159
be changed and it's mixed and matched at

404
00:18:53,980 --> 00:18:58,360
will that I mentioned earlier um so now

405
00:18:57,160 --> 00:19:02,050
let's look at it from the other side

406
00:18:58,360 --> 00:19:05,500
let's let's be the bad guy out in the

407
00:19:02,050 --> 00:19:07,360
public Internet and this matches up to

408
00:19:05,500 --> 00:19:09,880
what our configuration says it should

409
00:19:07,360 --> 00:19:12,340
match up to you right so here's just an

410
00:19:09,880 --> 00:19:15,100
example of an Indian map results from

411
00:19:12,340 --> 00:19:20,139
scanning our public address which is 170

412
00:19:15,100 --> 00:19:25,120
216 10.1 from the outside as you can see

413
00:19:20,140 --> 00:19:25,510
we've got port 22 84 for 536 32 + 6 6 6

414
00:19:25,120 --> 00:19:31,090
7

415
00:19:25,510 --> 00:19:33,520
oops now you can't tell where those are

416
00:19:31,090 --> 00:19:36,459
going or that you or that this isn't all

417
00:19:33,520 --> 00:19:38,410
one single machine the attacker doesn't

418
00:19:36,460 --> 00:19:42,580
know that this goes to five different

419
00:19:38,410 --> 00:19:44,380
machines internally or whatever but the

420
00:19:42,580 --> 00:19:49,780
ports match up to what we talked about

421
00:19:44,380 --> 00:19:51,730
what we have open is what's open so as

422
00:19:49,780 --> 00:19:55,149
we can see we've got

423
00:19:51,730 --> 00:19:57,070
four four five SMB which is really bad

424
00:19:55,149 --> 00:20:01,360
right

425
00:19:57,070 --> 00:20:05,168
unreal ircd on-court six six six seven

426
00:20:01,360 --> 00:20:10,870
whatever this 36:32 dist CCD is who knew

427
00:20:05,169 --> 00:20:12,760
even knows what that is right so as you

428
00:20:10,870 --> 00:20:15,629
can see there's like a few things that

429
00:20:12,760 --> 00:20:18,789
should be super glaring especially to

430
00:20:15,630 --> 00:20:21,220
experienced folks but new analysts that

431
00:20:18,789 --> 00:20:23,830
still might not this might not be

432
00:20:21,220 --> 00:20:25,510
clicking for them that four four five

433
00:20:23,830 --> 00:20:31,000
open on your boundary is not a good

434
00:20:25,510 --> 00:20:32,559
thing you know so let's so let's see

435
00:20:31,000 --> 00:20:35,380
what this looks like let's slang some

436
00:20:32,559 --> 00:20:37,210
exploits so we already know that four

437
00:20:35,380 --> 00:20:39,340
four five SMB is open out our boundary

438
00:20:37,210 --> 00:20:43,059
six six six seven is open outer boundary

439
00:20:39,340 --> 00:20:45,250
there's perfectly good exploits within

440
00:20:43,059 --> 00:20:47,668
Metasploit that will just take care of

441
00:20:45,250 --> 00:20:50,559
this for us so let's see what happens

442
00:20:47,669 --> 00:20:53,260
here's a screenshot of just running

443
00:20:50,559 --> 00:20:55,090
eternal blue against are 172 1610

444
00:20:53,260 --> 00:20:57,129
address you don't need to read all this

445
00:20:55,090 --> 00:20:59,080
it's it's not necessarily that important

446
00:20:57,130 --> 00:21:01,360
it's just a screenshot of how the

447
00:20:59,080 --> 00:21:01,899
exploit runs and looks but at the bottom

448
00:21:01,360 --> 00:21:04,570
there

449
00:21:01,899 --> 00:21:06,668
that's it pop in a system shell so the

450
00:21:04,570 --> 00:21:11,189
exploit worked now we have a system

451
00:21:06,669 --> 00:21:16,570
shell on that box so let's look at this

452
00:21:11,190 --> 00:21:20,289
from from squirt we see here we've got

453
00:21:16,570 --> 00:21:24,428
multiple different alerts that popped

454
00:21:20,289 --> 00:21:26,769
we've got CMD shell on local system CMD

455
00:21:24,429 --> 00:21:34,299
shell open on local system eternal blue

456
00:21:26,769 --> 00:21:43,539
in the 1710 a couple of those here's the

457
00:21:34,299 --> 00:21:48,629
exact same alerts in coma right here it

458
00:21:43,539 --> 00:21:48,629
is for unreal ircd same type of thing

459
00:21:51,450 --> 00:22:00,480
this is just a super cheesy simple snort

460
00:21:56,850 --> 00:22:03,959
roll that detects etsy shadow in the

461
00:22:00,480 --> 00:22:07,170
clear but this is an example of okay I

462
00:22:03,960 --> 00:22:10,890
have this certain attack vector that an

463
00:22:07,170 --> 00:22:13,140
attacker might use right I'm gonna

464
00:22:10,890 --> 00:22:15,840
create this scenario in my lab I'm gonna

465
00:22:13,140 --> 00:22:17,970
open it up to where this service is

466
00:22:15,840 --> 00:22:21,810
available and then I'm going to attack

467
00:22:17,970 --> 00:22:24,240
it and I am then able to write custom

468
00:22:21,810 --> 00:22:28,200
not only write custom smart rules but

469
00:22:24,240 --> 00:22:30,270
tune them tune your queries in Kabana

470
00:22:28,200 --> 00:22:32,670
tune your visualizations tune your

471
00:22:30,270 --> 00:22:34,320
dashboards to where you're playing with

472
00:22:32,670 --> 00:22:36,480
this stuff and figuring out in your lab

473
00:22:34,320 --> 00:22:41,040
environment before you can before you

474
00:22:36,480 --> 00:22:43,560
poured it all over into production or if

475
00:22:41,040 --> 00:22:46,440
you're teaching a course for students

476
00:22:43,560 --> 00:22:48,840
it's very very very lucrative in a

477
00:22:46,440 --> 00:22:52,440
classroom environment as far as I've had

478
00:22:48,840 --> 00:22:56,730
experience with so there it isn't square

479
00:22:52,440 --> 00:22:58,170
again same exact alert in Cabana just

480
00:22:56,730 --> 00:23:01,920
two different ways to view it right lots

481
00:22:58,170 --> 00:23:05,900
of different ways and then all the

482
00:23:01,920 --> 00:23:05,900
things Kabana you get all this great

483
00:23:23,810 --> 00:23:30,300
alright so now let's talk about how we

484
00:23:28,350 --> 00:23:34,340
can turn all this into a CTF right so

485
00:23:30,300 --> 00:23:38,370
we've got the perfect environment we see

486
00:23:34,340 --> 00:23:40,080
everything we've log everything every

487
00:23:38,370 --> 00:23:42,540
connection that happens from the

488
00:23:40,080 --> 00:23:44,939
simulated public Internet to any

489
00:23:42,540 --> 00:23:47,310
internal machine crossing over our

490
00:23:44,940 --> 00:23:49,350
firewall boundary is getting mirrored to

491
00:23:47,310 --> 00:23:51,750
our security onion we have grow logs for

492
00:23:49,350 --> 00:23:54,709
every connection that happens and then

493
00:23:51,750 --> 00:23:59,040
we get all the the rich system on and

494
00:23:54,710 --> 00:24:01,020
syslog data if I need to talk to Josh

495
00:23:59,040 --> 00:24:03,420
later and get the OS query integrated

496
00:24:01,020 --> 00:24:07,330
into this too

497
00:24:03,420 --> 00:24:11,740
but you have all this wonderful data now

498
00:24:07,330 --> 00:24:13,810
so the artifacts are all there the

499
00:24:11,740 --> 00:24:16,570
artifacts for running an entire vast

500
00:24:13,810 --> 00:24:19,570
investigation from start to finish are

501
00:24:16,570 --> 00:24:23,800
all there from the time you scan that IP

502
00:24:19,570 --> 00:24:25,300
within map to when you first make that

503
00:24:23,800 --> 00:24:28,149
initial connection to exploit that

504
00:24:25,300 --> 00:24:31,270
exploit or that service everything is

505
00:24:28,150 --> 00:24:33,400
going to show up in security onion so

506
00:24:31,270 --> 00:24:35,040
then you know I'm sure you've all used C

507
00:24:33,400 --> 00:24:39,820
T FD you probably heard of it

508
00:24:35,040 --> 00:24:42,010
tons of conferences use it for hosting

509
00:24:39,820 --> 00:24:45,669
CTS it's a great platform it's open

510
00:24:42,010 --> 00:24:52,300
source free so I got to give credit to

511
00:24:45,670 --> 00:24:54,310
them but what you can do now is I turned

512
00:24:52,300 --> 00:24:57,010
all of this into a capture the flag for

513
00:24:54,310 --> 00:25:01,270
my students starting off with let's say

514
00:24:57,010 --> 00:25:05,110
at the top the remote code execution one

515
00:25:01,270 --> 00:25:08,650
is the eternal blue and the remote code

516
00:25:05,110 --> 00:25:11,129
execution 2 is the unreal ircd

517
00:25:08,650 --> 00:25:13,420
and there are two completely different

518
00:25:11,130 --> 00:25:16,570
exploit paths right there two completely

519
00:25:13,420 --> 00:25:18,730
different compromises and they came from

520
00:25:16,570 --> 00:25:22,149
different source IPS they're two

521
00:25:18,730 --> 00:25:25,000
completely separate compromises but the

522
00:25:22,150 --> 00:25:27,190
new analysts in my courses would have to

523
00:25:25,000 --> 00:25:29,290
figure that out and that would be how

524
00:25:27,190 --> 00:25:31,660
they do it through this ETF we would ask

525
00:25:29,290 --> 00:25:36,760
them questions like you know what was

526
00:25:31,660 --> 00:25:39,070
the source IP that first compromised the

527
00:25:36,760 --> 00:25:41,320
original host and then from there like

528
00:25:39,070 --> 00:25:45,850
what was the destination port that was

529
00:25:41,320 --> 00:25:48,550
compromised or what was the code name

530
00:25:45,850 --> 00:25:50,020
given to that exploit or you can you can

531
00:25:48,550 --> 00:25:53,139
really build it in and kind of make it

532
00:25:50,020 --> 00:25:54,310
robust as far as the different types of

533
00:25:53,140 --> 00:25:56,890
questions you can ask it's not

534
00:25:54,310 --> 00:25:58,840
necessarily jeopardy style but it's kind

535
00:25:56,890 --> 00:26:01,750
of flag driven as well by they have to

536
00:25:58,840 --> 00:26:04,270
go into kibana find the source IP find

537
00:26:01,750 --> 00:26:08,020
the destination ports find the hashes

538
00:26:04,270 --> 00:26:11,800
for this file how many other machines

539
00:26:08,020 --> 00:26:13,840
were accessed after the RCU RCE of one

540
00:26:11,800 --> 00:26:15,639
compromised so now we're talking lateral

541
00:26:13,840 --> 00:26:18,860
movement they got to go and look and see

542
00:26:15,640 --> 00:26:20,630
what touched other machines around it

543
00:26:18,860 --> 00:26:23,919
right after the timeframe that that

544
00:26:20,630 --> 00:26:26,510
happened with the initial compromise

545
00:26:23,920 --> 00:26:29,060
what domain account was used to access

546
00:26:26,510 --> 00:26:31,280
the other machines so then you'd have to

547
00:26:29,060 --> 00:26:35,500
dig into your logs and find you know

548
00:26:31,280 --> 00:26:37,760
what actual service account was used to

549
00:26:35,500 --> 00:26:40,520
laterally move to other machines within

550
00:26:37,760 --> 00:26:45,250
the environment I mean all that data is

551
00:26:40,520 --> 00:26:49,540
there one other cool thing I did was I

552
00:26:45,250 --> 00:26:53,540
created an insider threat lane where I I

553
00:26:49,540 --> 00:26:55,550
built a virtual raspberry pie image and

554
00:26:53,540 --> 00:26:57,500
I put it in the in the virtual

555
00:26:55,550 --> 00:26:58,669
environment and put a change the MAC

556
00:26:57,500 --> 00:27:02,270
address on it so it looked like a

557
00:26:58,670 --> 00:27:04,880
raspberry pie and then I just fired up

558
00:27:02,270 --> 00:27:09,680
responder on it and let it run and just

559
00:27:04,880 --> 00:27:10,970
start stealing you know the traffic

560
00:27:09,680 --> 00:27:13,040
replies and you're just getting all

561
00:27:10,970 --> 00:27:15,800
these sweet in TM hashes coming across

562
00:27:13,040 --> 00:27:18,200
and all this but it's all being logged

563
00:27:15,800 --> 00:27:20,720
all of its being logged down to the file

564
00:27:18,200 --> 00:27:22,400
names that that are that are being

565
00:27:20,720 --> 00:27:24,560
touched so it's great you can see

566
00:27:22,400 --> 00:27:26,810
everything another one was an

567
00:27:24,560 --> 00:27:28,490
exfiltration Lane where there were

568
00:27:26,810 --> 00:27:31,580
certain files on these machines that

569
00:27:28,490 --> 00:27:34,880
would go and get accessed and like I'd

570
00:27:31,580 --> 00:27:37,159
use like PS CP to copy them off the Box

571
00:27:34,880 --> 00:27:38,840
to a new machine out in the public

572
00:27:37,160 --> 00:27:40,910
Internet space and that was like the

573
00:27:38,840 --> 00:27:45,770
final straw you know like PS CP touched

574
00:27:40,910 --> 00:27:48,020
this undisclosed product defects or

575
00:27:45,770 --> 00:27:49,970
something file that you know it's

576
00:27:48,020 --> 00:27:52,460
probably proprietary company information

577
00:27:49,970 --> 00:27:54,410
that you don't want to get out there and

578
00:27:52,460 --> 00:27:57,020
then you have a log file showing PS CP

579
00:27:54,410 --> 00:27:59,480
touch this file and it then created a

580
00:27:57,020 --> 00:28:01,460
network connection out to 209 dot blah

581
00:27:59,480 --> 00:28:03,230
blah blah and that's like the final

582
00:28:01,460 --> 00:28:04,940
thing that happened in the in the

583
00:28:03,230 --> 00:28:06,890
scenario right it happened it started

584
00:28:04,940 --> 00:28:09,890
with a eternal seven or a turtle blue

585
00:28:06,890 --> 00:28:10,960
Windows seven compromised laterally move

586
00:28:09,890 --> 00:28:15,050
to other things

587
00:28:10,960 --> 00:28:17,660
finally exfiltrated our data and all of

588
00:28:15,050 --> 00:28:20,389
those pieces have to be filled in they

589
00:28:17,660 --> 00:28:22,400
all have answers like what file was

590
00:28:20,390 --> 00:28:23,690
actually touched what file was stolen

591
00:28:22,400 --> 00:28:25,580
from the system and they actually have

592
00:28:23,690 --> 00:28:28,779
to plug in the file name in the CTF D

593
00:28:25,580 --> 00:28:32,899
for them to get the right answer

594
00:28:28,779 --> 00:28:35,029
so that's kind of cool you don't

595
00:28:32,899 --> 00:28:36,289
necessarily have to turn this into a CTF

596
00:28:35,029 --> 00:28:39,620
though you're just trying to use it as a

597
00:28:36,289 --> 00:28:42,379
detection lab all you would need to do

598
00:28:39,620 --> 00:28:45,559
is set it up similarly to where you have

599
00:28:42,380 --> 00:28:48,889
your public simulated boundary you have

600
00:28:45,559 --> 00:28:50,690
your port mirrors and then you just mix

601
00:28:48,889 --> 00:28:52,250
and match you open up what you want to

602
00:28:50,690 --> 00:28:54,470
open up and you send it to where you

603
00:28:52,250 --> 00:28:59,929
want to send it to this could also be

604
00:28:54,470 --> 00:29:02,659
done with Linux or I'm sure you could do

605
00:28:59,929 --> 00:29:05,389
it with a physical setup with Cisco or

606
00:29:02,659 --> 00:29:06,830
something like that I just happen to

607
00:29:05,389 --> 00:29:09,139
choose open BSD because I'm super

608
00:29:06,830 --> 00:29:11,449
comfortable with it and it's really easy

609
00:29:09,139 --> 00:29:18,320
to work with

610
00:29:11,450 --> 00:29:23,260
but anyway I think that's about it are

611
00:29:18,320 --> 00:29:23,260
there any questions yes sir

612
00:29:23,409 --> 00:29:38,120
nope it's all live and it does just in

613
00:29:36,110 --> 00:29:42,740
the normal chatter or the network will

614
00:29:38,120 --> 00:29:45,860
generate about about 800,000 logs a day

615
00:29:42,740 --> 00:29:50,419
in a completely isolated non internet

616
00:29:45,860 --> 00:29:53,019
connected environment anybody else any

617
00:29:50,419 --> 00:29:53,019
other questions

618
00:29:55,140 --> 00:29:58,440
yes sir

619
00:30:06,600 --> 00:30:11,909
any other questions yes sir

620
00:30:13,870 --> 00:30:21,370
it's ESXi 6 5 yeah I haven't got up to 6

621
00:30:18,549 --> 00:30:34,900
7 yet but 6 5 is what I use for this

622
00:30:21,370 --> 00:30:36,789
setup yes sir um so as part of the

623
00:30:34,900 --> 00:30:41,760
course they would have to build like

624
00:30:36,789 --> 00:30:46,870
different dashboards like you know

625
00:30:41,760 --> 00:30:48,820
standard services and and stuff to first

626
00:30:46,870 --> 00:30:51,370
baseline kind of baseline the system and

627
00:30:48,820 --> 00:30:56,139
then anything outside of that would pop

628
00:30:51,370 --> 00:30:59,559
up sort of yes absolutely yep we started

629
00:30:56,140 --> 00:31:02,530
them off real slow and kind of hand held

630
00:30:59,559 --> 00:31:07,059
them and step by step go build this

631
00:31:02,530 --> 00:31:08,559
going to here create this query add it

632
00:31:07,059 --> 00:31:10,720
to a visualization add that

633
00:31:08,559 --> 00:31:12,250
visualization to this dashboard and like

634
00:31:10,720 --> 00:31:14,710
really held their hands through the

635
00:31:12,250 --> 00:31:16,150
beginning of it and then at once they

636
00:31:14,710 --> 00:31:18,549
get to this point they're expect to be

637
00:31:16,150 --> 00:31:26,200
used all that stuff that they learned to

638
00:31:18,549 --> 00:31:28,460
tackle the CTF yep anybody else okay

639
00:31:26,200 --> 00:31:34,509
well thank you very much for having me

640
00:31:28,460 --> 00:31:34,509
[Applause]

