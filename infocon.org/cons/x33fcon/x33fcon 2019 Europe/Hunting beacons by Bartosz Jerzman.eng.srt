1
00:00:08,599 --> 00:00:13,379
it's a good morning everyone first of

2
00:00:11,910 --> 00:00:15,360
all I would like to say that I'm very

3
00:00:13,380 --> 00:00:19,080
glad to be here and present in front of

4
00:00:15,360 --> 00:00:22,560
you on the other hand it's a pity that I

5
00:00:19,080 --> 00:00:24,359
had to substitute solids I hope that

6
00:00:22,560 --> 00:00:26,788
next year we can meet him and listened

7
00:00:24,359 --> 00:00:29,160
to his talk during zip conned I hope he

8
00:00:26,789 --> 00:00:33,180
recovers quickly so today I prepared a

9
00:00:29,160 --> 00:00:36,420
topic on hunting beacons that's the

10
00:00:33,180 --> 00:00:39,300
general agenda for today I divided this

11
00:00:36,420 --> 00:00:42,960
presentation to three parts port one

12
00:00:39,300 --> 00:00:46,680
more generic on hunting the HTTP beacon

13
00:00:42,960 --> 00:00:49,410
second part focusing on HTTPS but

14
00:00:46,680 --> 00:00:53,430
actually I lied here it will be a very

15
00:00:49,410 --> 00:00:55,529
specific case of a protocol that was

16
00:00:53,430 --> 00:00:58,170
invented for the North Korean apt

17
00:00:55,530 --> 00:01:00,270
Lazarus and was actually very

18
00:00:58,170 --> 00:01:03,390
interesting protocol for connecting to

19
00:01:00,270 --> 00:01:06,570
see - it's an five TLS and part three

20
00:01:03,390 --> 00:01:09,900
very quick introduction to do something

21
00:01:06,570 --> 00:01:12,119
else to hunt the c2 servers early so to

22
00:01:09,900 --> 00:01:15,119
detect not the beacon in characteristic

23
00:01:12,119 --> 00:01:17,610
but the city servers so short

24
00:01:15,119 --> 00:01:20,909
introduction about myself for most of my

25
00:01:17,610 --> 00:01:23,369
career I worked as a network defender

26
00:01:20,909 --> 00:01:25,920
and a sysadmin also for the for the

27
00:01:23,369 --> 00:01:29,040
Polish Navy both mostly on the incident

28
00:01:25,920 --> 00:01:32,340
response side but also as a pen tester

29
00:01:29,040 --> 00:01:35,159
of different naval systems currently

30
00:01:32,340 --> 00:01:41,220
working mostly on the thread internal

31
00:01:35,159 --> 00:01:43,890
part so let's begin with the part one so

32
00:01:41,220 --> 00:01:46,500
beginning over HTTP let's begin with

33
00:01:43,890 --> 00:01:49,799
that kind of a definition what what is

34
00:01:46,500 --> 00:01:51,540
beaconing so generally speaking the

35
00:01:49,799 --> 00:01:53,610
beginning characteristic for the malware

36
00:01:51,540 --> 00:01:56,299
is a type of communication where the

37
00:01:53,610 --> 00:01:59,610
moral malware does not keep a 1 long

38
00:01:56,299 --> 00:02:01,860
connection to CTU but instead the

39
00:01:59,610 --> 00:02:05,509
malware connects to see to periodically

40
00:02:01,860 --> 00:02:09,149
and those beginnings can occur regularly

41
00:02:05,509 --> 00:02:11,370
at constant intervals but more

42
00:02:09,149 --> 00:02:13,740
frequently they okay they all care at

43
00:02:11,370 --> 00:02:16,080
save the random moments of time

44
00:02:13,740 --> 00:02:18,660
you can compare it to the communications

45
00:02:16,080 --> 00:02:20,520
from the submarines submarines do not

46
00:02:18,660 --> 00:02:23,579
keep their constant communications with

47
00:02:20,520 --> 00:02:24,660
their headquarters the surface they go

48
00:02:23,580 --> 00:02:27,240
to the periscope depth

49
00:02:24,660 --> 00:02:30,240
only on the specific times just to send

50
00:02:27,240 --> 00:02:32,250
and receive the messages then when they

51
00:02:30,240 --> 00:02:35,580
receive the communication then go deep

52
00:02:32,250 --> 00:02:37,710
into the sea and operate so it's a kind

53
00:02:35,580 --> 00:02:41,370
of a similar naval similar naval

54
00:02:37,710 --> 00:02:45,630
comparison probably the most popular

55
00:02:41,370 --> 00:02:47,940
meme during this edition of Zipkin how

56
00:02:45,630 --> 00:02:50,820
to detect the beacon ink can we prepare

57
00:02:47,940 --> 00:02:53,730
the signatures there's North rules for

58
00:02:50,820 --> 00:02:57,480
example for beginning probably it's very

59
00:02:53,730 --> 00:03:00,480
very hard almost impossible because this

60
00:02:57,480 --> 00:03:03,959
can be one example of the beacon ink

61
00:03:00,480 --> 00:03:06,989
so can we prepare a signal signature

62
00:03:03,960 --> 00:03:09,030
matching for such communication when the

63
00:03:06,990 --> 00:03:11,790
payload is hidden it's very often is

64
00:03:09,030 --> 00:03:15,270
obfuscated encoded and additionally

65
00:03:11,790 --> 00:03:17,760
encrypted this is example from cobalt

66
00:03:15,270 --> 00:03:21,600
right but many other malware's in the

67
00:03:17,760 --> 00:03:23,940
world use such similar characteristics

68
00:03:21,600 --> 00:03:27,030
so it's very difficult to prepare one

69
00:03:23,940 --> 00:03:29,460
signature to detect it and trigger

70
00:03:27,030 --> 00:03:32,220
another that it is that kind of

71
00:03:29,460 --> 00:03:34,290
communication we can for example other

72
00:03:32,220 --> 00:03:37,350
that it is Kapil strike no it's very

73
00:03:34,290 --> 00:03:42,000
impossible it is almost impossible on

74
00:03:37,350 --> 00:03:44,910
the other hand sometimes your your rules

75
00:03:42,000 --> 00:03:46,410
even the simple ones maybe you you

76
00:03:44,910 --> 00:03:49,590
wouldn't expect them sometimes it

77
00:03:46,410 --> 00:03:51,900
trigger if the adversary makes a mistake

78
00:03:49,590 --> 00:03:55,140
this is kind of a mistake when the

79
00:03:51,900 --> 00:03:59,010
adversary prepared a little bit wrong

80
00:03:55,140 --> 00:04:02,190
profile in for his beaconing malware in

81
00:03:59,010 --> 00:04:07,760
this case there's an alert from

82
00:04:02,190 --> 00:04:11,130
Surakarta that there's that idea

83
00:04:07,760 --> 00:04:14,429
detected that HTTP response body is not

84
00:04:11,130 --> 00:04:17,089
gzipped but it was declared that and

85
00:04:14,430 --> 00:04:21,358
that the that the whole body is

86
00:04:17,089 --> 00:04:23,760
compressed this is this kind of mistake

87
00:04:21,358 --> 00:04:27,539
you can see that the content and coding

88
00:04:23,760 --> 00:04:31,200
is gzip but actually the body so

89
00:04:27,540 --> 00:04:34,530
this case that the a car put it in in

90
00:04:31,200 --> 00:04:39,659
the beacon it's not in a real format of

91
00:04:34,530 --> 00:04:42,599
the of the gzip so let's go to the real

92
00:04:39,660 --> 00:04:46,890
detection of the behaviour of the beacon

93
00:04:42,600 --> 00:04:51,060
Inc these are the examples I prepared

94
00:04:46,890 --> 00:04:53,460
for today so four hypotheses and let's

95
00:04:51,060 --> 00:04:55,200
check them if we can try to detect the

96
00:04:53,460 --> 00:04:58,289
beacon in characteristics with those

97
00:04:55,200 --> 00:05:00,450
four hypotheses so first one is focus on

98
00:04:58,290 --> 00:05:03,540
the analysis of the intervals of

99
00:05:00,450 --> 00:05:07,490
connections and the last three are move

100
00:05:03,540 --> 00:05:11,460
more focus on the HTTP headers that are

101
00:05:07,490 --> 00:05:15,570
configured for the Peconic malware so

102
00:05:11,460 --> 00:05:18,299
that the data set that I use for this

103
00:05:15,570 --> 00:05:21,330
presentation it's mainly from the cyber

104
00:05:18,300 --> 00:05:23,580
defense exercise it's from actually the

105
00:05:21,330 --> 00:05:27,030
local shields exercise that's carried

106
00:05:23,580 --> 00:05:28,979
out by NATO every year so generally the

107
00:05:27,030 --> 00:05:32,760
pick up from this exercise most

108
00:05:28,980 --> 00:05:37,860
processed by bro IDs act nowadays it was

109
00:05:32,760 --> 00:05:42,180
renamed to to Zeke and we use the HTTP

110
00:05:37,860 --> 00:05:45,120
log from this ideas what are the

111
00:05:42,180 --> 00:05:46,860
alternative data sources it could be

112
00:05:45,120 --> 00:05:49,410
also the flows if you would like to

113
00:05:46,860 --> 00:05:52,230
analyze the intervals of connections but

114
00:05:49,410 --> 00:05:54,320
it can also be the web proxy logs you

115
00:05:52,230 --> 00:05:57,630
can see in the table what kind of

116
00:05:54,320 --> 00:06:00,840
information you can get from one line of

117
00:05:57,630 --> 00:06:03,030
the HTTP log so you can see that you can

118
00:06:00,840 --> 00:06:06,090
have some information from the HTTP

119
00:06:03,030 --> 00:06:07,890
request but also from the HTTP body so

120
00:06:06,090 --> 00:06:10,770
you've got information from the flow

121
00:06:07,890 --> 00:06:14,219
like source IP source port you can have

122
00:06:10,770 --> 00:06:16,919
some HTTP requests like cookie or user

123
00:06:14,220 --> 00:06:17,880
agent but you also have information from

124
00:06:16,920 --> 00:06:20,280
the body like that

125
00:06:17,880 --> 00:06:22,350
respond body length and all those things

126
00:06:20,280 --> 00:06:25,229
can be also used to prepare the

127
00:06:22,350 --> 00:06:28,340
detection of the beaconing so let's go

128
00:06:25,230 --> 00:06:31,890
to hypothesis one how to analyze the

129
00:06:28,340 --> 00:06:34,020
connections intervals this hypothesis is

130
00:06:31,890 --> 00:06:37,320
based on the assumption that connection

131
00:06:34,020 --> 00:06:40,688
intervals from malware to sea to our

132
00:06:37,320 --> 00:06:45,759
distributed around some average

133
00:06:40,689 --> 00:06:48,429
that they are not sailed random why do

134
00:06:45,759 --> 00:06:51,399
we assume that because often the malware

135
00:06:48,429 --> 00:06:54,279
in the configuration has such options

136
00:06:51,399 --> 00:06:57,069
like sleep or jitter it's also example

137
00:06:54,279 --> 00:06:59,619
from the Kabul strike but many other

138
00:06:57,069 --> 00:07:02,709
malware in the wild also with similar

139
00:06:59,619 --> 00:07:05,199
configuration options so in this

140
00:07:02,709 --> 00:07:07,509
configuration the operator put the

141
00:07:05,199 --> 00:07:10,509
malware into sleep for 60 seconds and

142
00:07:07,509 --> 00:07:13,089
they put a kind of a jitter so the cell

143
00:07:10,509 --> 00:07:15,819
the random value of 20 percent just to

144
00:07:13,089 --> 00:07:18,369
make it more random just make just to

145
00:07:15,819 --> 00:07:20,889
make it not connect every at constant

146
00:07:18,369 --> 00:07:23,619
values like every 60 seconds but for

147
00:07:20,889 --> 00:07:27,579
example in the interval between 48 and

148
00:07:23,619 --> 00:07:30,729
72 seconds in this example how to detect

149
00:07:27,579 --> 00:07:34,539
that so maybe let's go back to school

150
00:07:30,729 --> 00:07:37,739
and use some sorry for that have to go

151
00:07:34,539 --> 00:07:41,289
back to school and remind ourselves some

152
00:07:37,739 --> 00:07:44,258
statistics metrics but let's try we

153
00:07:41,289 --> 00:07:46,808
would like to generally find this type

154
00:07:44,259 --> 00:07:49,179
of characteristics when the connections

155
00:07:46,809 --> 00:07:53,159
and the intervals of connections are

156
00:07:49,179 --> 00:07:57,219
distributed around some average value

157
00:07:53,159 --> 00:08:00,909
more or less so what kind of example

158
00:07:57,219 --> 00:08:03,129
data do we have here we have example of

159
00:08:00,909 --> 00:08:05,769
the beacon a which is a couple strike

160
00:08:03,129 --> 00:08:10,029
payload with configuration of 60 seconds

161
00:08:05,769 --> 00:08:12,459
and jitter of 20% and the beacon B of

162
00:08:10,029 --> 00:08:15,669
the Kabul strike when the operator puts

163
00:08:12,459 --> 00:08:18,429
the beacon into sleep mode manually so

164
00:08:15,669 --> 00:08:22,269
as we see in the table we've got six

165
00:08:18,429 --> 00:08:25,198
samples of such connections for the

166
00:08:22,269 --> 00:08:28,139
beacon B the values are more random and

167
00:08:25,199 --> 00:08:31,239
for B Canaan they are more or less

168
00:08:28,139 --> 00:08:34,629
distributed around this average value I

169
00:08:31,239 --> 00:08:38,049
put also the other statistics metrics

170
00:08:34,629 --> 00:08:40,569
like standard deviation and also the

171
00:08:38,049 --> 00:08:43,240
variation coefficient and this is a very

172
00:08:40,568 --> 00:08:45,699
simple mouth because the coefficient of

173
00:08:43,240 --> 00:08:49,240
variation is just the standard deviation

174
00:08:45,699 --> 00:08:52,829
divided by the average as the percentage

175
00:08:49,240 --> 00:08:55,380
of it so we can find if the data are

176
00:08:52,829 --> 00:08:59,349
diverse

177
00:08:55,380 --> 00:09:01,950
in a more or less extent so in the case

178
00:08:59,350 --> 00:09:04,300
of the beacon be when the operator is

179
00:09:01,950 --> 00:09:09,610
manually putting the beacon into sleep

180
00:09:04,300 --> 00:09:12,849
mode we can see that those intervals are

181
00:09:09,610 --> 00:09:16,960
very diverse and for automatically

182
00:09:12,850 --> 00:09:19,390
beckoning malware those values are not

183
00:09:16,960 --> 00:09:22,120
that diverse and their coefficient of

184
00:09:19,390 --> 00:09:26,800
variation is is quite small it's even

185
00:09:22,120 --> 00:09:29,980
very close to the jitter value that's

186
00:09:26,800 --> 00:09:32,800
the sponsor sorry for that maybe looks

187
00:09:29,980 --> 00:09:36,820
quite terrible but I will focus on some

188
00:09:32,800 --> 00:09:38,890
of the details of this of this search in

189
00:09:36,820 --> 00:09:42,160
this case we generally try to aggregate

190
00:09:38,890 --> 00:09:44,890
the connections by three things like

191
00:09:42,160 --> 00:09:48,640
source IP destination IP and the user

192
00:09:44,890 --> 00:09:52,630
agent and in the second option we try to

193
00:09:48,640 --> 00:09:54,640
prepare the detection threshold so in

194
00:09:52,630 --> 00:09:56,620
this case I detected that the

195
00:09:54,640 --> 00:09:59,620
coefficient of variation should be less

196
00:09:56,620 --> 00:10:01,870
than 100 percent I should get at least

197
00:09:59,620 --> 00:10:04,780
10 connections and the average beacon

198
00:10:01,870 --> 00:10:08,950
time should be over one second this

199
00:10:04,780 --> 00:10:13,860
query was also inspired like in this

200
00:10:08,950 --> 00:10:16,840
link here by this plank team in Turkey I

201
00:10:13,860 --> 00:10:18,910
recommend you go to their blog because

202
00:10:16,840 --> 00:10:21,160
they have very interesting hunting

203
00:10:18,910 --> 00:10:24,130
methods using using Splunk

204
00:10:21,160 --> 00:10:26,890
in in their case they try to hunt the

205
00:10:24,130 --> 00:10:29,470
beacon ink over DNS they use different

206
00:10:26,890 --> 00:10:32,760
statistics metrics they used variation

207
00:10:29,470 --> 00:10:32,760
which is also okay

208
00:10:34,080 --> 00:10:42,460
and excuse me for that so this is the

209
00:10:40,300 --> 00:10:44,319
result of this query in this case we

210
00:10:42,460 --> 00:10:46,780
detect it from this data set from the

211
00:10:44,320 --> 00:10:48,760
cyber defense exercise one of the c2

212
00:10:46,780 --> 00:10:51,069
servers we can see that the

213
00:10:48,760 --> 00:10:53,260
characteristics that the average beacon

214
00:10:51,070 --> 00:10:55,690
time was seven seconds and the standard

215
00:10:53,260 --> 00:10:58,030
deviation was plus minus three seconds

216
00:10:55,690 --> 00:11:01,150
so we can say it was a very interactive

217
00:10:58,030 --> 00:11:03,459
session and operator had a handsome

218
00:11:01,150 --> 00:11:06,550
keyboard when interacting with this

219
00:11:03,460 --> 00:11:08,300
beacon on the other hand this kind of

220
00:11:06,550 --> 00:11:12,439
methods and this the

221
00:11:08,300 --> 00:11:15,560
attitude can also help us detect maybe a

222
00:11:12,440 --> 00:11:17,630
kind of a long-term operation of a

223
00:11:15,560 --> 00:11:21,050
beaconing in this case we detected

224
00:11:17,630 --> 00:11:23,420
another situ server but the beacon time

225
00:11:21,050 --> 00:11:26,540
average Beacon time is about half an

226
00:11:23,420 --> 00:11:28,790
hour 28 minutes plus minus seven minutes

227
00:11:26,540 --> 00:11:31,640
so we can see that it wasn't very

228
00:11:28,790 --> 00:11:33,500
interactive session probably it was used

229
00:11:31,640 --> 00:11:37,640
for keeping them and maintaining their

230
00:11:33,500 --> 00:11:40,190
the XS maybe kind of backup channel but

231
00:11:37,640 --> 00:11:45,860
this kind of approach for detection can

232
00:11:40,190 --> 00:11:49,010
help us also detect such a such a beacon

233
00:11:45,860 --> 00:11:53,120
Inc with a low frequency of occurrence

234
00:11:49,010 --> 00:11:55,730
so this was the hypothesis one which I

235
00:11:53,120 --> 00:11:58,820
hope it proved that it is possible it is

236
00:11:55,730 --> 00:12:01,280
doable to detect such beacon in

237
00:11:58,820 --> 00:12:03,410
characteristic using those this

238
00:12:01,280 --> 00:12:07,970
statistics metrics very simple ones

239
00:12:03,410 --> 00:12:11,120
let's go to the hypothesis 1 so in this

240
00:12:07,970 --> 00:12:16,460
hypothesis we try to analyze that you

241
00:12:11,120 --> 00:12:19,520
URI for example we assume that adversary

242
00:12:16,460 --> 00:12:23,150
is using a back door that has several C

243
00:12:19,520 --> 00:12:27,230
to backup domains included do we find

244
00:12:23,150 --> 00:12:29,600
such malware yes it is very in this

245
00:12:27,230 --> 00:12:31,520
example of the couple strike beacon

246
00:12:29,600 --> 00:12:34,280
there is also such an option to put

247
00:12:31,520 --> 00:12:37,280
several domains C two domains into one

248
00:12:34,280 --> 00:12:40,850
configuration into one of the beacons so

249
00:12:37,280 --> 00:12:44,209
there is a possibility that one type of

250
00:12:40,850 --> 00:12:48,170
malware is going to connect with the

251
00:12:44,210 --> 00:12:52,250
same URI to different host names this is

252
00:12:48,170 --> 00:12:55,579
a kind of a spoink query to to implement

253
00:12:52,250 --> 00:12:59,090
this hypothesis so let's focus on the

254
00:12:55,580 --> 00:13:02,360
most important details of this query we

255
00:12:59,090 --> 00:13:06,590
just use the HTTP log from Zig so we

256
00:13:02,360 --> 00:13:08,710
analyze the request and response data we

257
00:13:06,590 --> 00:13:13,010
try to exclude several positive Y or

258
00:13:08,710 --> 00:13:16,130
several false positives like favicon.ico

259
00:13:13,010 --> 00:13:20,450
admin because those URI can really be on

260
00:13:16,130 --> 00:13:22,370
different host names and we aggregate

261
00:13:20,450 --> 00:13:24,889
with the logic of this

262
00:13:22,370 --> 00:13:28,220
is is to ask how many different hosts

263
00:13:24,889 --> 00:13:32,269
have requested with saying where record

264
00:13:28,220 --> 00:13:34,579
where requested with the same URI this

265
00:13:32,269 --> 00:13:37,579
is the aggregation part this is the

266
00:13:34,579 --> 00:13:40,099
detection part in this case I chose that

267
00:13:37,579 --> 00:13:43,939
threshold of three different holes it's

268
00:13:40,100 --> 00:13:47,389
because of this data characteristics of

269
00:13:43,939 --> 00:13:50,059
this data set so with we detected five

270
00:13:47,389 --> 00:13:53,180
unique C to the mains discovered four to

271
00:13:50,059 --> 00:13:59,540
similar yet different URI

272
00:13:53,180 --> 00:14:02,559
requests and going to the third

273
00:13:59,540 --> 00:14:06,379
hypothesis which is also based on the

274
00:14:02,559 --> 00:14:08,899
URI analysis but focusing on the another

275
00:14:06,379 --> 00:14:11,360
aspect of the HTTP header so the

276
00:14:08,899 --> 00:14:13,639
referrer so generally when the normal

277
00:14:11,360 --> 00:14:15,920
user when the typical behavior of the

278
00:14:13,639 --> 00:14:19,160
user which is browsing a web page is

279
00:14:15,920 --> 00:14:22,309
when he goes to another URI then the

280
00:14:19,160 --> 00:14:25,040
referrer of the last visited web page

281
00:14:22,309 --> 00:14:27,829
changes malware usually does not

282
00:14:25,040 --> 00:14:29,870
implement such such a behavior so it's a

283
00:14:27,829 --> 00:14:32,209
kind of the weakness or the

284
00:14:29,870 --> 00:14:37,480
characteristics of the malware so we can

285
00:14:32,209 --> 00:14:39,979
try to use it for detection if we are

286
00:14:37,480 --> 00:14:43,790
countering the referes on single

287
00:14:39,980 --> 00:14:46,759
destination and we try to aggregate it

288
00:14:43,790 --> 00:14:50,870
and we put some detection thresholds we

289
00:14:46,759 --> 00:14:54,019
can find such new c2 servers and in this

290
00:14:50,870 --> 00:14:56,990
case those who arise were related to the

291
00:14:54,019 --> 00:15:00,079
first edge malware for c2 we can see

292
00:14:56,990 --> 00:15:03,740
that on one single destination with none

293
00:15:00,079 --> 00:15:07,059
or same referrer we can find various

294
00:15:03,740 --> 00:15:15,949
your eyes and this method where was also

295
00:15:07,059 --> 00:15:18,740
useful for for us so hypothesis for we

296
00:15:15,949 --> 00:15:24,170
discovered another c2 domain using

297
00:15:18,740 --> 00:15:26,540
another approach so we try to use look

298
00:15:24,170 --> 00:15:30,139
for different you arise but the length

299
00:15:26,540 --> 00:15:32,209
is constant very often when the malware

300
00:15:30,139 --> 00:15:35,540
is trying to put the payload into the

301
00:15:32,209 --> 00:15:36,258
URI they encoded encrypted payload into

302
00:15:35,540 --> 00:15:38,719
the URI

303
00:15:36,259 --> 00:15:43,939
that usually the length of the uri is

304
00:15:38,720 --> 00:15:46,369
constant and in this case sorry we

305
00:15:43,939 --> 00:15:48,919
discovered another in situ domain with

306
00:15:46,369 --> 00:15:51,009
three different you arise on with the

307
00:15:48,919 --> 00:15:55,579
same length hosted on the same

308
00:15:51,009 --> 00:16:00,350
destination IP and sorry for spoiler but

309
00:15:55,579 --> 00:16:03,549
if you would like to to to see different

310
00:16:00,350 --> 00:16:07,389
types of hypotheses then the Jack Kruk

311
00:16:03,549 --> 00:16:10,939
mind map which he prepared some time ago

312
00:16:07,389 --> 00:16:13,399
is a great set of hypothesis we

313
00:16:10,939 --> 00:16:15,829
implemented several of them you could

314
00:16:13,399 --> 00:16:18,589
see on the previous slides we hope that

315
00:16:15,829 --> 00:16:21,410
one day Jack is going to come because he

316
00:16:18,589 --> 00:16:23,989
was supposed to be on on the first Steve

317
00:16:21,410 --> 00:16:29,978
come with your finger keep fingers

318
00:16:23,989 --> 00:16:32,660
crossed for him so it's also very good

319
00:16:29,979 --> 00:16:37,309
way to find the inspirations for

320
00:16:32,660 --> 00:16:40,879
detecting the the beginning part so

321
00:16:37,309 --> 00:16:45,108
let's go to the part two and focus on

322
00:16:40,879 --> 00:16:47,359
beaconing over https and actually like I

323
00:16:45,109 --> 00:16:51,709
said before it will be not a generic

324
00:16:47,359 --> 00:16:58,129
detection of HTTP but just as just a

325
00:16:51,709 --> 00:17:03,169
fake TLS example from the Lazarus apt so

326
00:16:58,129 --> 00:17:07,279
just to understand how does it work it

327
00:17:03,169 --> 00:17:11,628
has worked for for several years I'm

328
00:17:07,279 --> 00:17:13,970
aware that it worked until 2018 I don't

329
00:17:11,628 --> 00:17:16,428
know if they still use use this protocol

330
00:17:13,970 --> 00:17:19,129
on 2019 I'm now more focused on

331
00:17:16,429 --> 00:17:22,870
different kind of threads so generally

332
00:17:19,128 --> 00:17:24,769
the that's the idea behind the fake TLS

333
00:17:22,869 --> 00:17:28,250
so the handshake

334
00:17:24,769 --> 00:17:30,289
for that TLS is fake and the real

335
00:17:28,250 --> 00:17:33,019
communications of this with the c2

336
00:17:30,289 --> 00:17:37,610
server between the backdoor and and the

337
00:17:33,019 --> 00:17:40,730
server is after the handshake so this is

338
00:17:37,610 --> 00:17:45,320
the handshake is the funny part when the

339
00:17:40,730 --> 00:17:48,379
for example the c2 server just sends

340
00:17:45,320 --> 00:17:49,850
back the real and often expired

341
00:17:48,379 --> 00:17:52,219
certificate which is

342
00:17:49,850 --> 00:17:57,889
copied from pages like we transfer

343
00:17:52,220 --> 00:17:59,960
google.com Dropbox so they try to make

344
00:17:57,890 --> 00:18:04,820
us think that we are connecting to such

345
00:17:59,960 --> 00:18:08,120
popular sites and in most cases our our

346
00:18:04,820 --> 00:18:11,210
systems our network analyzers they

347
00:18:08,120 --> 00:18:14,570
analyze mostly the the handshake so the

348
00:18:11,210 --> 00:18:20,630
beginning of the TLS session and due to

349
00:18:14,570 --> 00:18:23,600
the cost of the resources the dialyzer

350
00:18:20,630 --> 00:18:24,500
are switched off after the after the

351
00:18:23,600 --> 00:18:28,360
handshake

352
00:18:24,500 --> 00:18:31,640
so they took advantage of this fact

353
00:18:28,360 --> 00:18:34,820
because the real communications is after

354
00:18:31,640 --> 00:18:37,100
the handshake actually it's not TLS the

355
00:18:34,820 --> 00:18:39,889
encryption is symmetric

356
00:18:37,100 --> 00:18:44,240
there was a pre shared key usually our

357
00:18:39,890 --> 00:18:47,059
c4 which was which was preloaded into

358
00:18:44,240 --> 00:18:49,070
the backdoor c2 of course know the

359
00:18:47,059 --> 00:18:52,730
symmetric key and this is the real

360
00:18:49,070 --> 00:18:56,408
communication so does it beacon yes this

361
00:18:52,730 --> 00:18:59,450
is an example of fake TLS this is a

362
00:18:56,409 --> 00:19:01,309
graph of the actually the sizes the

363
00:18:59,450 --> 00:19:03,409
length of the messages encrypted

364
00:19:01,309 --> 00:19:07,908
messages between the back door and the

365
00:19:03,409 --> 00:19:09,620
c2 and what's interesting about it first

366
00:19:07,909 --> 00:19:12,860
of all we can see that the maximum

367
00:19:09,620 --> 00:19:16,489
message size used for the communication

368
00:19:12,860 --> 00:19:19,549
as is fixed it in this case is eight

369
00:19:16,490 --> 00:19:22,760
hundred eight bytes so it's one

370
00:19:19,549 --> 00:19:24,980
possibility to prepare a detection but

371
00:19:22,760 --> 00:19:26,750
another interesting part is that the

372
00:19:24,980 --> 00:19:29,600
beginning of the real communication

373
00:19:26,750 --> 00:19:35,419
after the handshake has also fixed size

374
00:19:29,600 --> 00:19:39,168
messages so for example first five

375
00:19:35,419 --> 00:19:44,419
messages are always of the same length

376
00:19:39,169 --> 00:19:46,220
is it really hard coded actually yes if

377
00:19:44,419 --> 00:19:49,520
you look into the code of the back door

378
00:19:46,220 --> 00:19:52,100
you can see on this example of the of

379
00:19:49,520 --> 00:19:55,820
the second message that is of the size

380
00:19:52,100 --> 00:19:59,149
of 24 bytes that it's hard coded into

381
00:19:55,820 --> 00:20:02,820
the backdoors code that it should be it

382
00:19:59,150 --> 00:20:06,480
should have that 24 bytes what can we do

383
00:20:02,820 --> 00:20:08,450
about about this fact we can prepared a

384
00:20:06,480 --> 00:20:11,940
kind of ssl/tls

385
00:20:08,450 --> 00:20:15,509
profiling so we can prepare a kind of

386
00:20:11,940 --> 00:20:18,570
TLS profiles to detect those kind of

387
00:20:15,509 --> 00:20:20,669
communications so if we only analyze the

388
00:20:18,570 --> 00:20:24,570
sizes of the first five messages of

389
00:20:20,669 --> 00:20:27,830
encrypted application data which occur

390
00:20:24,570 --> 00:20:31,649
after the TLS handshake it will help us

391
00:20:27,830 --> 00:20:35,389
detect the traffic to unknown situ

392
00:20:31,649 --> 00:20:42,809
infrastructure that fakes that that use

393
00:20:35,389 --> 00:20:46,049
the fake TLS so did anybody recognize

394
00:20:42,809 --> 00:20:51,029
what can be wrong with those messages

395
00:20:46,049 --> 00:20:54,658
with those sizes so if we analyze it

396
00:20:51,029 --> 00:20:58,230
more especially the length of the

397
00:20:54,659 --> 00:21:01,409
messages then it turns out that the TLS

398
00:20:58,230 --> 00:21:03,899
Algar inch for every message they they

399
00:21:01,409 --> 00:21:07,409
hash the values so for example if we use

400
00:21:03,899 --> 00:21:12,299
the md5 and the length of the md4 md5

401
00:21:07,409 --> 00:21:14,789
from a messages always 16 bytes then we

402
00:21:12,299 --> 00:21:17,549
can see that's impossible to have such a

403
00:21:14,789 --> 00:21:21,179
connection over TLS where the messages

404
00:21:17,549 --> 00:21:23,940
are of such low sizes so it's impossible

405
00:21:21,179 --> 00:21:26,960
that it could be a real TLS

406
00:21:23,940 --> 00:21:31,529
communication because the sizes are

407
00:21:26,960 --> 00:21:34,200
lower than 16 bytes for the fake TLS

408
00:21:31,529 --> 00:21:35,850
it's even 8 bytes of the communication

409
00:21:34,200 --> 00:21:38,580
so it must be something different

410
00:21:35,850 --> 00:21:48,090
something not something that is not a

411
00:21:38,580 --> 00:21:50,939
real TLS so where can we use this

412
00:21:48,090 --> 00:21:54,750
knowledge where can we hunt 5 TLS one

413
00:21:50,940 --> 00:21:57,590
option is to be of course we can detect

414
00:21:54,750 --> 00:22:00,629
it in our own networks we can prepare

415
00:21:57,590 --> 00:22:06,269
such analysis such detection we only

416
00:22:00,629 --> 00:22:09,480
need a good very configurable network

417
00:22:06,269 --> 00:22:11,820
analyzer that can analyze the TLS data

418
00:22:09,480 --> 00:22:16,830
after the handshake not every network

419
00:22:11,820 --> 00:22:20,580
analyzer can be reconfigured to analyze

420
00:22:16,830 --> 00:22:22,919
the data after the handshake on the

421
00:22:20,580 --> 00:22:25,679
other hand we can go and be kind of

422
00:22:22,920 --> 00:22:27,210
proactive we can for example download

423
00:22:25,680 --> 00:22:29,340
that download the pickup's

424
00:22:27,210 --> 00:22:32,280
from the services from the sandbox

425
00:22:29,340 --> 00:22:39,300
services like hybrid analysis and we can

426
00:22:32,280 --> 00:22:41,639
try to match our profiles to those to

427
00:22:39,300 --> 00:22:44,730
those pickups that was one of the option

428
00:22:41,640 --> 00:22:49,350
i used to detect unknown infrastructure

429
00:22:44,730 --> 00:22:54,690
for for lazarus and trying to check this

430
00:22:49,350 --> 00:23:00,240
hypothesis so this was the part two so

431
00:22:54,690 --> 00:23:03,230
very specific case of detecting the

432
00:23:00,240 --> 00:23:07,470
https beaconing that was not a real

433
00:23:03,230 --> 00:23:11,510
https and let's go to part three it

434
00:23:07,470 --> 00:23:16,100
could be something more more offensive

435
00:23:11,510 --> 00:23:19,860
but only a general introduction to the

436
00:23:16,100 --> 00:23:24,750
to the topic so we can always hunt the

437
00:23:19,860 --> 00:23:28,679
c2 servers so not only that the way the

438
00:23:24,750 --> 00:23:31,110
malware communicates but we can also

439
00:23:28,680 --> 00:23:35,100
find the c2 servers or the red-eye

440
00:23:31,110 --> 00:23:38,310
directors of course like guys from out

441
00:23:35,100 --> 00:23:41,310
Frank showed us today red teams you can

442
00:23:38,310 --> 00:23:43,620
also and adversary's can monitor

443
00:23:41,310 --> 00:23:46,950
themselves probably they should monitor

444
00:23:43,620 --> 00:23:50,520
but we can try to hunt them now we know

445
00:23:46,950 --> 00:23:55,080
that we have to be more stealthy about

446
00:23:50,520 --> 00:23:57,690
such proactive activities so generally I

447
00:23:55,080 --> 00:24:00,570
grew up in 1990s and there was a general

448
00:23:57,690 --> 00:24:02,730
strategy in NBA that the often starts

449
00:24:00,570 --> 00:24:04,620
with defense that was also the plan for

450
00:24:02,730 --> 00:24:07,680
my presentation that first of all I

451
00:24:04,620 --> 00:24:12,209
tried to begin with hunting a detecting

452
00:24:07,680 --> 00:24:14,430
Peconic on mine playgrounds but if I

453
00:24:12,210 --> 00:24:17,670
feel comfortable about detecting

454
00:24:14,430 --> 00:24:20,220
different mechanism of beaconing I can

455
00:24:17,670 --> 00:24:22,620
try to be more proactive and try to hunt

456
00:24:20,220 --> 00:24:25,590
them when they are preparing so on there

457
00:24:22,620 --> 00:24:28,649
maybe weaponization stage when the

458
00:24:25,590 --> 00:24:30,689
malware is being prepared this is just a

459
00:24:28,650 --> 00:24:33,799
quick intro so for example

460
00:24:30,690 --> 00:24:35,879
if we if you take the two very popular

461
00:24:33,799 --> 00:24:38,249
frameworks for the command and control

462
00:24:35,879 --> 00:24:42,658
like Kabul strike which is a commercial

463
00:24:38,249 --> 00:24:44,519
product or PS Empire you can see this is

464
00:24:42,659 --> 00:24:49,259
a data source from the my to attack that

465
00:24:44,519 --> 00:24:55,169
several apt groups use this this kind of

466
00:24:49,259 --> 00:24:57,509
software so let what can we do about it

467
00:24:55,169 --> 00:25:01,429
for sure we have to know the defaults of

468
00:24:57,509 --> 00:25:04,169
such frameworks in case of COBOL strike

469
00:25:01,429 --> 00:25:06,239
nothing fancy but you have to remember

470
00:25:04,169 --> 00:25:10,440
that the for the COBOL strike the

471
00:25:06,239 --> 00:25:13,169
console port the default port is 550

472
00:25:10,440 --> 00:25:15,899
over TCP is their console the operator

473
00:25:13,169 --> 00:25:21,450
connects to the team server sometimes if

474
00:25:15,899 --> 00:25:24,238
they make such mistake you could see on

475
00:25:21,450 --> 00:25:26,970
the day one that the infrastructure for

476
00:25:24,239 --> 00:25:29,879
the adversary could be quite complex and

477
00:25:26,970 --> 00:25:31,679
if it is complex that the adversary can

478
00:25:29,879 --> 00:25:33,988
make a mistake and for example sometimes

479
00:25:31,679 --> 00:25:36,029
they can make open port for the

480
00:25:33,989 --> 00:25:39,090
management it's not only for COBOL

481
00:25:36,029 --> 00:25:41,519
strike but the very custom see two

482
00:25:39,090 --> 00:25:44,459
servers from different a PT's are all

483
00:25:41,519 --> 00:25:48,840
always always also have the management

484
00:25:44,460 --> 00:25:50,909
port in the case of COBOL strike there

485
00:25:48,840 --> 00:25:53,428
is a kind of a characteristic it's a

486
00:25:50,909 --> 00:25:57,210
default one there is an for the DNS

487
00:25:53,429 --> 00:26:00,179
listener when there is a DNS request to

488
00:25:57,210 --> 00:26:02,639
this DNS this turn listener from Kabul

489
00:26:00,179 --> 00:26:03,119
strike then the answer is always like

490
00:26:02,639 --> 00:26:05,189
that

491
00:26:03,119 --> 00:26:09,859
of course it can be changed in the

492
00:26:05,190 --> 00:26:12,419
configuration but is the default another

493
00:26:09,859 --> 00:26:16,340
interesting aspect of the COBOL strike

494
00:26:12,419 --> 00:26:19,080
is that it's based on the Nano HTTP

495
00:26:16,340 --> 00:26:22,529
server which is a java implementation

496
00:26:19,080 --> 00:26:24,899
for HTTP D and this is a typical message

497
00:26:22,529 --> 00:26:30,239
for example if you would like to request

498
00:26:24,899 --> 00:26:32,488
for any URI not for the not for the one

499
00:26:30,239 --> 00:26:35,269
connected with the malware we probably

500
00:26:32,489 --> 00:26:39,899
will receive by default this kind of

501
00:26:35,269 --> 00:26:43,109
response which is also kind of one of

502
00:26:39,899 --> 00:26:44,219
the characteristics of this kind of c2

503
00:26:43,109 --> 00:26:48,189
server

504
00:26:44,220 --> 00:26:50,679
very something this is something new

505
00:26:48,190 --> 00:26:53,740
that was the Scout that was made not not

506
00:26:50,679 --> 00:26:57,690
discovered but made more public lightly

507
00:26:53,740 --> 00:27:01,450
with the new edition of the Kabul strike

508
00:26:57,690 --> 00:27:03,399
3.13 that for many years there was an a

509
00:27:01,450 --> 00:27:05,080
kind of additional space I don't know if

510
00:27:03,399 --> 00:27:08,379
you were aware of it there was

511
00:27:05,080 --> 00:27:12,369
additional space after the in the HT

512
00:27:08,379 --> 00:27:14,619
after the response after the code so

513
00:27:12,369 --> 00:27:18,299
after the word okay there was additional

514
00:27:14,619 --> 00:27:22,840
space it was also a signature of the

515
00:27:18,299 --> 00:27:31,860
Kabul strike which was based on nano

516
00:27:22,840 --> 00:27:34,360
httpd server so going to the conclusion

517
00:27:31,860 --> 00:27:39,969
adversary's tools and procedures are

518
00:27:34,360 --> 00:27:42,340
often have patterns so our job as threat

519
00:27:39,970 --> 00:27:45,159
analyst is to uncover those human

520
00:27:42,340 --> 00:27:48,369
factors those human traces and also

521
00:27:45,159 --> 00:27:51,789
sometimes adversary's weaknesses to to

522
00:27:48,369 --> 00:27:55,539
connect them and understand what are

523
00:27:51,789 --> 00:27:58,450
their limitations and for sure we should

524
00:27:55,539 --> 00:28:01,029
burn the defaults if we are aware that

525
00:27:58,450 --> 00:28:03,509
our adversary is using Kabul strike

526
00:28:01,029 --> 00:28:06,909
powers on Empire on or any other

527
00:28:03,509 --> 00:28:13,749
framework or custom tool that we analyze

528
00:28:06,909 --> 00:28:16,960
we have to use this knowledge to burn to

529
00:28:13,749 --> 00:28:19,299
burn it and for sure we have to burn

530
00:28:16,960 --> 00:28:21,429
everything that's connected with open

531
00:28:19,299 --> 00:28:24,100
source and commercial situ servers

532
00:28:21,429 --> 00:28:25,990
what is the what is known what is

533
00:28:24,100 --> 00:28:31,389
default this should be detected by us

534
00:28:25,990 --> 00:28:34,019
and prevented so thank you for thank you

535
00:28:31,389 --> 00:28:34,019
for your time

536
00:28:36,730 --> 00:28:39,839
[Music]

