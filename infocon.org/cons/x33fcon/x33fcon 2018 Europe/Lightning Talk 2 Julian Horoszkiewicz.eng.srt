1
00:00:06,410 --> 00:00:11,750
[Music]

2
00:00:08,469 --> 00:00:13,760
<font color="#CCCCCC">Hey hi everyone I would</font><font color="#E5E5E5"> like</font><font color="#CCCCCC"> to talk</font>

3
00:00:11,750 --> 00:00:16,279
<font color="#CCCCCC">about always common injection and Pat</font>

4
00:00:13,760 --> 00:00:18,830
reversal unusual cases<font color="#E5E5E5"> cases that</font>

5
00:00:16,279 --> 00:00:21,619
usually are missed<font color="#E5E5E5"> during assessments so</font>

6
00:00:18,830 --> 00:00:23,680
basically<font color="#E5E5E5"> false negative is when we miss</font>

7
00:00:21,619 --> 00:00:26,630
<font color="#E5E5E5">a finding although we test for it and</font>

8
00:00:23,680 --> 00:00:29,720
possible reasons<font color="#E5E5E5"> for for false negatives</font>

9
00:00:26,630 --> 00:00:32,149
are like syntax<font color="#E5E5E5"> target</font><font color="#CCCCCC"> OS that</font>

10
00:00:29,720 --> 00:00:34,339
characters that are filtered<font color="#E5E5E5"> or the</font>

11
00:00:32,149 --> 00:00:36,770
<font color="#E5E5E5">feedback channel we use which is</font><font color="#CCCCCC"> the way</font>

12
00:00:34,340 --> 00:00:38,809
we<font color="#E5E5E5"> recognize whether the vulnerability</font>

13
00:00:36,770 --> 00:00:42,409
<font color="#E5E5E5">is there like whether it's just server's</font>

14
00:00:38,809 --> 00:00:45,349
response or time or DNS or<font color="#E5E5E5"> whatever well</font>

15
00:00:42,409 --> 00:00:47,739
also<font color="#E5E5E5"> input encoding input sanitizing if</font>

16
00:00:45,350 --> 00:00:51,260
it's poorly implemented<font color="#CCCCCC"> I mean</font><font color="#E5E5E5"> and</font>

17
00:00:47,739 --> 00:00:54,288
others so here are some<font color="#E5E5E5"> examples</font><font color="#CCCCCC"> like</font>

18
00:00:51,260 --> 00:00:55,789
this is a<font color="#E5E5E5"> vulnerable count which the</font>

19
00:00:54,289 --> 00:00:57,769
common<font color="#CCCCCC"> injection count so basically it's</font>

20
00:00:55,789 --> 00:01:00,379
it's vulnerable<font color="#E5E5E5"> but it will only work if</font>

21
00:00:57,769 --> 00:01:02,780
<font color="#E5E5E5">the payload ends with a author numeric</font>

22
00:01:00,379 --> 00:01:05,679
character most of them will actually<font color="#CCCCCC"> if</font>

23
00:01:02,780 --> 00:01:09,140
it if a digit was required with more

24
00:01:05,680 --> 00:01:11,330
more<font color="#E5E5E5"> realistic</font><font color="#CCCCCC"> case but another one</font><font color="#E5E5E5"> is</font>

25
00:01:09,140 --> 00:01:13,430
<font color="#E5E5E5">when you have a false negative</font><font color="#CCCCCC"> because</font>

26
00:01:11,330 --> 00:01:15,770
no spaces are allowed or<font color="#E5E5E5"> basically no</font>

27
00:01:13,430 --> 00:01:18,770
white characters so here's a trick that

28
00:01:15,770 --> 00:01:23,630
will work on a<font color="#E5E5E5"> NIC system to to bypass</font>

29
00:01:18,770 --> 00:01:25,340
this you have another<font color="#E5E5E5"> always specific</font>

30
00:01:23,630 --> 00:01:27,710
the same code but on<font color="#CCCCCC"> Windows in this</font>

31
00:01:25,340 --> 00:01:29,540
case you can<font color="#CCCCCC"> use an environmental</font>

32
00:01:27,710 --> 00:01:31,520
variable and carve out the space

33
00:01:29,540 --> 00:01:34,310
<font color="#CCCCCC">character from Program Files</font><font color="#E5E5E5"> if it has</font>

34
00:01:31,520 --> 00:01:37,699
the<font color="#CCCCCC"> default value</font><font color="#E5E5E5"> so</font><font color="#CCCCCC"> totally owe a</font>

35
00:01:34,310 --> 00:01:39,020
specific<font color="#E5E5E5"> thing regarding the feedback</font>

36
00:01:37,700 --> 00:01:42,200
<font color="#E5E5E5">channel if the application doesn't</font>

37
00:01:39,020 --> 00:01:44,960
return any<font color="#CCCCCC"> output or if it performs to</font>

38
00:01:42,200 --> 00:01:47,210
comment asynchronously<font color="#CCCCCC"> we will not see</font>

39
00:01:44,960 --> 00:01:50,149
any any output<font color="#E5E5E5"> returned from the server</font>

40
00:01:47,210 --> 00:01:52,850
so<font color="#CCCCCC"> we need to</font><font color="#E5E5E5"> use alternative feedback</font>

41
00:01:50,150 --> 00:01:54,620
channels like<font color="#CCCCCC"> time or network or</font><font color="#E5E5E5"> a file</font>

42
00:01:52,850 --> 00:01:58,309
creation<font color="#E5E5E5"> if you have access to the file</font>

43
00:01:54,620 --> 00:02:01,580
system so in terms of input sanitizing

44
00:01:58,310 --> 00:02:04,460
well in this case we have almost all<font color="#CCCCCC"> the</font>

45
00:02:01,580 --> 00:02:07,700
<font color="#E5E5E5">comment separators filtered out except</font>

46
00:02:04,460 --> 00:02:11,599
<font color="#CCCCCC">for</font><font color="#E5E5E5"> the new line so and spaces are not</font>

47
00:02:07,700 --> 00:02:14,659
allowed either<font color="#E5E5E5"> so in terms of patch of</font>

48
00:02:11,599 --> 00:02:16,459
our soul<font color="#CCCCCC"> it's pretty similarly since the</font>

49
00:02:14,659 --> 00:02:18,888
factors can<font color="#CCCCCC"> be also target to last path</font>

50
00:02:16,459 --> 00:02:20,250
characters input sanitizing input

51
00:02:18,889 --> 00:02:22,140
encoding

52
00:02:20,250 --> 00:02:25,380
so here's<font color="#E5E5E5"> something always specific</font>

53
00:02:22,140 --> 00:02:28,829
examples and here's a<font color="#CCCCCC"> non-recursive</font>

54
00:02:25,380 --> 00:02:35,070
filter and the way to bypass<font color="#CCCCCC"> it</font><font color="#E5E5E5"> here's</font>

55
00:02:28,830 --> 00:02:39,120
another<font color="#CCCCCC"> one this</font><font color="#E5E5E5"> case is only vulnerable</font>

56
00:02:35,070 --> 00:02:42,030
if we dub<font color="#CCCCCC"> ee</font><font color="#E5E5E5"> encode the input and well</font>

57
00:02:39,120 --> 00:02:45,390
our goal is<font color="#CCCCCC"> to generate</font><font color="#E5E5E5"> a comprehensive</font>

58
00:02:42,030 --> 00:02:47,970
payload set that will defeat all poorly

59
00:02:45,390 --> 00:02:51,149
implemented filters imaginable<font color="#E5E5E5"> and</font><font color="#CCCCCC"> reach</font>

60
00:02:47,970 --> 00:02:53,820
the case<font color="#E5E5E5"> that are less obvious</font><font color="#CCCCCC"> harder to</font>

61
00:02:51,150 --> 00:02:56,850
<font color="#E5E5E5">find and well these two projects are my</font>

62
00:02:53,820 --> 00:02:58,980
solutions<font color="#CCCCCC"> to this</font><font color="#E5E5E5"> so I encourage you</font><font color="#CCCCCC"> to</font>

63
00:02:56,850 --> 00:03:01,859
checking<font color="#E5E5E5"> out the documentation</font><font color="#CCCCCC"> which</font>

64
00:02:58,980 --> 00:03:03,480
contains very<font color="#E5E5E5"> in-depth methodology and</font>

65
00:03:01,860 --> 00:03:06,150
the research behind it

66
00:03:03,480 --> 00:03:08,880
regarding the entire payload generation

67
00:03:06,150 --> 00:03:10,950
<font color="#E5E5E5">it combines all the techniques</font><font color="#CCCCCC"> and much</font>

68
00:03:08,880 --> 00:03:13,530
more so they<font color="#E5E5E5"> both they're both available</font>

69
00:03:10,950 --> 00:03:16,500
<font color="#E5E5E5">in burp app store and</font><font color="#CCCCCC"> payloads</font><font color="#E5E5E5"> can be</font>

70
00:03:13,530 --> 00:03:18,870
exported<font color="#E5E5E5"> so you can also use</font><font color="#CCCCCC"> them</font><font color="#E5E5E5"> for</font>

71
00:03:16,500 --> 00:03:21,030
<font color="#E5E5E5">for other technologies with honor</font>

72
00:03:18,870 --> 00:03:24,150
assessments than just web application

73
00:03:21,030 --> 00:03:26,130
testing so and if you come<font color="#E5E5E5"> across cases</font>

74
00:03:24,150 --> 00:03:28,110
like vulnerabilities that<font color="#E5E5E5"> are being</font>

75
00:03:26,130 --> 00:03:30,600
missed<font color="#E5E5E5"> by this</font><font color="#CCCCCC"> payload said just please</font>

76
00:03:28,110 --> 00:03:32,160
<font color="#E5E5E5">give me a shout and</font><font color="#CCCCCC"> I'll</font><font color="#E5E5E5"> just improve</font>

77
00:03:30,600 --> 00:03:35,090
the tool so<font color="#CCCCCC"> we can follow me on Twitter</font>

78
00:03:32,160 --> 00:03:37,020
<font color="#E5E5E5">and thanks that's it</font>

79
00:03:35,090 --> 00:03:41,960
[Applause]

80
00:03:37,020 --> 00:03:41,960
[Music]

