1
00:00:08,850 --> 00:00:18,080
[Music]

2
00:00:14,410 --> 00:00:20,300
monkey village here at blank stage we

3
00:00:18,080 --> 00:00:23,778
have a very special guest for you coming

4
00:00:20,300 --> 00:00:25,790
up I want you all to give a warm welcome

5
00:00:23,779 --> 00:00:34,550
and a bang big round of applause to Jeff

6
00:00:25,790 --> 00:00:36,440
Bridges he will talk about the

7
00:00:34,550 --> 00:00:41,300
cryptography for our killing

8
00:00:36,440 --> 00:00:44,899
proof-of-work and yeah when everything

9
00:00:41,300 --> 00:00:48,169
is done and you're ready oh I want to

10
00:00:44,899 --> 00:00:55,940
you all to have much fun and enjoy the

11
00:00:48,170 --> 00:00:57,890
talk okay do we have video yeah we do

12
00:00:55,940 --> 00:01:01,218
have video okay cool thank you all right

13
00:00:57,890 --> 00:01:03,949
so I'm this is not really much of a talk

14
00:01:01,219 --> 00:01:05,390
about this oh this talk may get a little

15
00:01:03,949 --> 00:01:07,340
bit mathematical I'll try not to be too

16
00:01:05,390 --> 00:01:10,010
mathematical I'm not actually going to

17
00:01:07,340 --> 00:01:11,510
say too much about the protocols for

18
00:01:10,010 --> 00:01:15,020
using the two constructions I'm going to

19
00:01:11,510 --> 00:01:16,640
tell you about but I'm going to I'll say

20
00:01:15,020 --> 00:01:18,380
something like general like what

21
00:01:16,640 --> 00:01:21,920
security of these things looks like and

22
00:01:18,380 --> 00:01:24,408
stuff but okay so two things all right

23
00:01:21,920 --> 00:01:26,570
so there's this thing that there's been

24
00:01:24,409 --> 00:01:29,540
become kind of popular lately which is

25
00:01:26,570 --> 00:01:31,158
using proof of work to try and build

26
00:01:29,540 --> 00:01:33,979
blocks on some chains or something like

27
00:01:31,159 --> 00:01:36,469
this and we don't really like this very

28
00:01:33,979 --> 00:01:38,479
much it uses more power than like a

29
00:01:36,469 --> 00:01:41,990
number of countries at the moment

30
00:01:38,479 --> 00:01:44,539
there's kind of this is a problem so I'm

31
00:01:41,990 --> 00:01:49,100
going to seems my things advances

32
00:01:44,539 --> 00:01:50,780
automatically if I don't so I'm okay so

33
00:01:49,100 --> 00:01:54,079
I'm going to tell you about sort of -

34
00:01:50,780 --> 00:01:55,460
two general categories of solutions here

35
00:01:54,079 --> 00:01:57,529
and there's some there's kind of an

36
00:01:55,460 --> 00:02:00,919
interesting parallel between them all

37
00:01:57,530 --> 00:02:02,930
right okay so the general one category

38
00:02:00,920 --> 00:02:05,329
is don't do box chains just use Fiat

39
00:02:02,930 --> 00:02:06,890
money and then we have this other when

40
00:02:05,329 --> 00:02:08,570
we do that we have this problem okay so

41
00:02:06,890 --> 00:02:11,690
one of things we actually kind of like

42
00:02:08,570 --> 00:02:13,970
about block chains is that we like quite

43
00:02:11,690 --> 00:02:15,680
a lot is that they people have started

44
00:02:13,970 --> 00:02:18,530
building privacy tools that run on them

45
00:02:15,680 --> 00:02:19,820
see cache actually works you know

46
00:02:18,530 --> 00:02:22,400
there's a number of these privacy chains

47
00:02:19,820 --> 00:02:26,090
that are not that great but so or you

48
00:02:22,400 --> 00:02:27,050
know it's unclear but but we know these

49
00:02:26,090 --> 00:02:28,700
tools can work you

50
00:02:27,050 --> 00:02:33,500
if they require some sort of Herculean

51
00:02:28,700 --> 00:02:36,700
effort and so one option is just to use

52
00:02:33,500 --> 00:02:39,020
the Fiat money but fix the privacy

53
00:02:36,700 --> 00:02:42,410
another option is to invent this thing

54
00:02:39,020 --> 00:02:44,270
called proof of stake and and then you

55
00:02:42,410 --> 00:02:46,370
still have to do all the other stuff on

56
00:02:44,270 --> 00:02:47,390
a blockchain to fix the privacy so the

57
00:02:46,370 --> 00:02:49,550
first thing I'm going to tell you about

58
00:02:47,390 --> 00:02:51,440
is sort of how you would if you do like

59
00:02:49,550 --> 00:02:53,540
fiat money how you would fix the privacy

60
00:02:51,440 --> 00:02:56,329
and then I'm going to tell you sort of

61
00:02:53,540 --> 00:02:57,920
one of the core sort of not completely

62
00:02:56,330 --> 00:03:00,580
unavoidable but mostly unavoidable

63
00:02:57,920 --> 00:03:06,350
building blocks of doing proof of stake

64
00:03:00,580 --> 00:03:08,540
all right okay so what is uh what is

65
00:03:06,350 --> 00:03:10,790
what does a blind signature so a bind

66
00:03:08,540 --> 00:03:11,870
signature is a signature where the

67
00:03:10,790 --> 00:03:14,510
signer doesn't know what they're signing

68
00:03:11,870 --> 00:03:16,430
so the first thing you notice here is

69
00:03:14,510 --> 00:03:19,940
that normally when I sign something it's

70
00:03:16,430 --> 00:03:21,410
just me and of course if it's a blind

71
00:03:19,940 --> 00:03:23,780
signature then somebody else has to have

72
00:03:21,410 --> 00:03:25,850
made up the thing that I'm signing so I

73
00:03:23,780 --> 00:03:27,500
obviously it now I need some kind of

74
00:03:25,850 --> 00:03:29,810
multi-party computation or some kind of

75
00:03:27,500 --> 00:03:33,230
protocol to do to do the signing it's no

76
00:03:29,810 --> 00:03:35,120
longer just an algorithm okay the other

77
00:03:33,230 --> 00:03:37,609
thing is is that what does it mean to

78
00:03:35,120 --> 00:03:40,760
sign something I've never seen well

79
00:03:37,610 --> 00:03:43,580
probably what it one interpret there's

80
00:03:40,760 --> 00:03:47,149
other things you can do but the normal

81
00:03:43,580 --> 00:03:50,180
interpretation is that the sort of the

82
00:03:47,150 --> 00:03:52,640
easiest thing is that the the actual

83
00:03:50,180 --> 00:03:54,500
contents of the message so the message

84
00:03:52,640 --> 00:03:58,670
that's being signed have no meaning at

85
00:03:54,500 --> 00:04:01,070
all or what yeah and the and the real

86
00:03:58,670 --> 00:04:04,369
message is just the name of the public

87
00:04:01,070 --> 00:04:07,250
key is what the public key is for in

88
00:04:04,370 --> 00:04:08,810
concrete terms the blind sign there

89
00:04:07,250 --> 00:04:10,610
tends to be some kind of Bank and they

90
00:04:08,810 --> 00:04:12,860
sign with a couple of key that says this

91
00:04:10,610 --> 00:04:15,920
is worth five euros so they're minting

92
00:04:12,860 --> 00:04:19,430
money I'll make a combinate slide

93
00:04:15,920 --> 00:04:23,300
talking about that in a second okay and

94
00:04:19,430 --> 00:04:25,580
then in that context what what what

95
00:04:23,300 --> 00:04:28,520
really happens is that the the signer

96
00:04:25,580 --> 00:04:31,880
makes they may they limit how many times

97
00:04:28,520 --> 00:04:33,349
each of these signatures can be they

98
00:04:31,880 --> 00:04:35,690
don't let you use the signature more

99
00:04:33,350 --> 00:04:36,979
than once and that's what gives it some

100
00:04:35,690 --> 00:04:38,759
kind that's your double spending

101
00:04:36,979 --> 00:04:41,610
protection

102
00:04:38,759 --> 00:04:43,559
and the and then the actual security

103
00:04:41,610 --> 00:04:47,009
construction for these things tends to

104
00:04:43,559 --> 00:04:48,809
be that you need a that the clients

105
00:04:47,009 --> 00:04:52,020
can't obtain more signatures than they

106
00:04:48,809 --> 00:04:54,120
then then they asked for and this is

107
00:04:52,020 --> 00:04:55,438
actually really sticky cryptic I'm not

108
00:04:54,120 --> 00:04:56,699
gonna talk about it but this is actually

109
00:04:55,439 --> 00:05:00,870
really cryptographically there's a lot

110
00:04:56,699 --> 00:05:02,279
of sticky stuff there okay so if you're

111
00:05:00,870 --> 00:05:03,990
interested in these things there's this

112
00:05:02,279 --> 00:05:04,919
implement this thing called new toddler

113
00:05:03,990 --> 00:05:08,099
that I'm not going to say very much

114
00:05:04,919 --> 00:05:09,568
about but it's it does a nice it has a

115
00:05:08,099 --> 00:05:12,149
very nice implementation it does a whole

116
00:05:09,569 --> 00:05:13,559
web whatever thing you can look at the

117
00:05:12,149 --> 00:05:15,599
demo and install the it's a browser

118
00:05:13,559 --> 00:05:18,899
plug-in in it lets you pull money out

119
00:05:15,599 --> 00:05:19,558
and spend things ads for people who like

120
00:05:18,899 --> 00:05:20,789
blockchains

121
00:05:19,559 --> 00:05:21,960
at the moment Tyler's not very

122
00:05:20,789 --> 00:05:23,610
blockchain friendly because you need

123
00:05:21,960 --> 00:05:25,289
this issue or somebody has to sign

124
00:05:23,610 --> 00:05:27,449
something you could you could threshhold

125
00:05:25,289 --> 00:05:29,188
sign theirs in general and cryptography

126
00:05:27,449 --> 00:05:32,039
there's threshold signing where you have

127
00:05:29,189 --> 00:05:33,749
many parties do the signing you could do

128
00:05:32,039 --> 00:05:34,919
that maybe on some kind of blockchain

129
00:05:33,749 --> 00:05:38,009
but then it wouldn't there's a lot of

130
00:05:34,919 --> 00:05:39,930
security problems with that so okay

131
00:05:38,009 --> 00:05:41,490
there's other things in this general

132
00:05:39,930 --> 00:05:43,860
category of blind stuff that I'm not

133
00:05:41,490 --> 00:05:45,270
going to talk about like there's this

134
00:05:43,860 --> 00:05:47,310
thing called coconut which comes from

135
00:05:45,270 --> 00:05:48,568
plot evil Sanders signatures who if

136
00:05:47,310 --> 00:05:50,430
you're interested in this category of

137
00:05:48,569 --> 00:05:52,979
things then there's there's a number of

138
00:05:50,430 --> 00:05:54,749
interesting constructions here but in

139
00:05:52,979 --> 00:05:56,159
general they're not the kind of things

140
00:05:54,749 --> 00:05:59,249
you would reach for when you're trying

141
00:05:56,159 --> 00:06:02,580
to build something blockchain II okay so

142
00:05:59,249 --> 00:06:04,770
just a picture of what this stuff what

143
00:06:02,580 --> 00:06:05,758
it how one would actually deploy one of

144
00:06:04,770 --> 00:06:07,438
these things so you have the guy who

145
00:06:05,759 --> 00:06:08,939
actually does these blind signatures in

146
00:06:07,439 --> 00:06:12,569
this case called an exchange or an

147
00:06:08,939 --> 00:06:15,839
issuer or bank or whatever he is and and

148
00:06:12,569 --> 00:06:17,279
it's fee I it's there's some Authority

149
00:06:15,839 --> 00:06:18,899
that's keeping them from signing too

150
00:06:17,279 --> 00:06:21,240
many things because that's the

151
00:06:18,899 --> 00:06:22,649
underlying problem is that if you have a

152
00:06:21,240 --> 00:06:26,249
key you can sign it you can sign as much

153
00:06:22,649 --> 00:06:28,499
as you want so then you have some

154
00:06:26,249 --> 00:06:30,539
customer they give they give the

155
00:06:28,499 --> 00:06:32,249
exchange some money the exchange blind

156
00:06:30,539 --> 00:06:33,808
signs these things for them and then

157
00:06:32,249 --> 00:06:37,439
they spend them and the merchant redeems

158
00:06:33,809 --> 00:06:40,319
them okay so it's a fairly it's actually

159
00:06:37,439 --> 00:06:43,139
a very simple protocol it's been around

160
00:06:40,319 --> 00:06:49,319
for 30 years this is was invented by

161
00:06:43,139 --> 00:06:51,419
David Chum ages ago and okay so I

162
00:06:49,319 --> 00:06:52,350
promised a little bit of math so I'm

163
00:06:51,419 --> 00:06:54,510
going to talk just

164
00:06:52,350 --> 00:06:56,660
so how many people have know what an RSA

165
00:06:54,510 --> 00:07:00,180
signature how an RSA signature works

166
00:06:56,660 --> 00:07:05,460
okay like almost everybody actually okay

167
00:07:00,180 --> 00:07:08,730
great then okay so we have the usual RSA

168
00:07:05,460 --> 00:07:14,250
public key generation there's really

169
00:07:08,730 --> 00:07:16,260
nothing special here now the the blind

170
00:07:14,250 --> 00:07:18,420
saw okay so the layout of this slide is

171
00:07:16,260 --> 00:07:20,430
I'm jumping back and forth between the

172
00:07:18,420 --> 00:07:23,400
what the signer does and what the what

173
00:07:20,430 --> 00:07:25,230
the user does so okay so now the this

174
00:07:23,400 --> 00:07:26,159
customer who wants to get some coins

175
00:07:25,230 --> 00:07:28,650
what do they do

176
00:07:26,160 --> 00:07:30,990
so they have to get this public key from

177
00:07:28,650 --> 00:07:34,469
the RSA via some via the other guy via

178
00:07:30,990 --> 00:07:36,420
some kind of PKI and they have a message

179
00:07:34,470 --> 00:07:39,470
that they want signed and this message

180
00:07:36,420 --> 00:07:41,970
as I said will basically be meaningless

181
00:07:39,470 --> 00:07:44,850
but the thing that's different from a

182
00:07:41,970 --> 00:07:47,300
normal RSA blind signature is that they

183
00:07:44,850 --> 00:07:50,790
have to pick some random number here and

184
00:07:47,300 --> 00:07:54,120
they multiply they they encrypt this

185
00:07:50,790 --> 00:07:57,000
raising this B to the e is an RSA

186
00:07:54,120 --> 00:07:59,010
encryption so they encrypt it to the

187
00:07:57,000 --> 00:08:01,410
public key that they want the signature

188
00:07:59,010 --> 00:08:05,610
by and then they multiply that by their

189
00:08:01,410 --> 00:08:08,010
message and so in this case the message

190
00:08:05,610 --> 00:08:11,700
it has to be the output of some hash

191
00:08:08,010 --> 00:08:16,050
function that's less than that's just

192
00:08:11,700 --> 00:08:17,789
less than n all right okay and then they

193
00:08:16,050 --> 00:08:22,350
send this M prime over to the blinds

194
00:08:17,790 --> 00:08:25,770
over to the to the signer and what the

195
00:08:22,350 --> 00:08:29,010
signer does just the usual RSA blind

196
00:08:25,770 --> 00:08:34,020
signature algorithm they they raise this

197
00:08:29,010 --> 00:08:35,760
thing to the D mod N and okay so the

198
00:08:34,020 --> 00:08:38,010
important thing that I don't have on

199
00:08:35,760 --> 00:08:40,590
this slide is that raising to the D and

200
00:08:38,010 --> 00:08:41,729
raising to the and raising to the e are

201
00:08:40,590 --> 00:08:45,810
inverses of each other

202
00:08:41,729 --> 00:08:48,750
this is really what we get from yeah so

203
00:08:45,810 --> 00:08:52,020
here it is so in the exponent the D and

204
00:08:48,750 --> 00:08:55,700
E are inverses of each other so what

205
00:08:52,020 --> 00:09:00,560
this what the at this point what the

206
00:08:55,700 --> 00:09:02,970
what the signer has done is they have

207
00:09:00,560 --> 00:09:05,949
they have they've taken the original

208
00:09:02,970 --> 00:09:09,970
message so if we distribute this D

209
00:09:05,950 --> 00:09:12,430
across the the product here they've

210
00:09:09,970 --> 00:09:14,709
raised em to the D and they've raised B

211
00:09:12,430 --> 00:09:17,649
to the which was raised to the e here to

212
00:09:14,709 --> 00:09:22,060
the e times D and so what pops out is

213
00:09:17,649 --> 00:09:24,670
just is just the is just the M to the D

214
00:09:22,060 --> 00:09:26,079
times B because this is they've we've

215
00:09:24,670 --> 00:09:30,670
encrypted to them and they've decrypted

216
00:09:26,079 --> 00:09:34,000
it for us and now so now when the when

217
00:09:30,670 --> 00:09:36,490
the the user the wallet or whatever gets

218
00:09:34,000 --> 00:09:37,690
back to this this has Prime they they

219
00:09:36,490 --> 00:09:42,430
just unblind it and they have a

220
00:09:37,690 --> 00:09:44,620
perfectly reasonable signature okay so

221
00:09:42,430 --> 00:09:46,329
I'm happy to answer questions about this

222
00:09:44,620 --> 00:09:47,769
thing later about sort of there's a

223
00:09:46,329 --> 00:09:49,540
number of little technical points here

224
00:09:47,769 --> 00:09:50,800
so like I I probably should have done a

225
00:09:49,540 --> 00:09:54,160
better job here it's actually extremely

226
00:09:50,800 --> 00:09:57,250
important that the M can go anywhere up

227
00:09:54,160 --> 00:09:59,139
to just below it to 1 minus N and it's

228
00:09:57,250 --> 00:10:03,399
also extremely important that that

229
00:09:59,139 --> 00:10:05,230
that's true for B as well the okay and

230
00:10:03,399 --> 00:10:06,610
it's important that M is the output of a

231
00:10:05,230 --> 00:10:08,649
hash function it's important the user

232
00:10:06,610 --> 00:10:10,480
can't control it so there's a number of

233
00:10:08,649 --> 00:10:14,320
actual security assumptions here that

234
00:10:10,480 --> 00:10:20,290
are that are a little bit unusual but

235
00:10:14,320 --> 00:10:22,269
okay right so this the thing that I

236
00:10:20,290 --> 00:10:26,140
probably should yes so this thing about

237
00:10:22,269 --> 00:10:29,529
the M R about our message actually being

238
00:10:26,140 --> 00:10:32,410
a that the that this that the user

239
00:10:29,529 --> 00:10:34,899
doesn't have control over mod n is

240
00:10:32,410 --> 00:10:38,529
what's is what's called the full domain

241
00:10:34,899 --> 00:10:41,800
hash so technical so the underlying RSA

242
00:10:38,529 --> 00:10:45,189
signature here that is it would be

243
00:10:41,800 --> 00:10:47,469
described as RSA fdh or is the usual RSA

244
00:10:45,190 --> 00:10:49,089
signature that everybody uses as RSA PSS

245
00:10:47,470 --> 00:10:52,540
where there's some randomness put in

246
00:10:49,089 --> 00:10:57,760
okay so whoops sorry

247
00:10:52,540 --> 00:11:00,519
all right yeah so that's actually what

248
00:10:57,760 --> 00:11:04,720
this slide is about so so there are some

249
00:11:00,519 --> 00:11:06,370
kinds of security proofs here and we

250
00:11:04,720 --> 00:11:08,680
really need that we really need this

251
00:11:06,370 --> 00:11:15,490
full domain has property in the security

252
00:11:08,680 --> 00:11:17,680
proofs and the in practice however so

253
00:11:15,490 --> 00:11:19,710
this is kind of a nice signature scheme

254
00:11:17,680 --> 00:11:21,420
because RSA is very familiar there

255
00:11:19,710 --> 00:11:22,530
some weaknesses so you can't run one of

256
00:11:21,420 --> 00:11:25,310
these things in any kind of cloud

257
00:11:22,530 --> 00:11:27,930
provider okay

258
00:11:25,310 --> 00:11:29,910
there's it's kind of weak the the way in

259
00:11:27,930 --> 00:11:31,530
which you actually optimize the signing

260
00:11:29,910 --> 00:11:35,959
algorithm makes it weak against

261
00:11:31,530 --> 00:11:38,130
side-channel attacks okay so all right

262
00:11:35,960 --> 00:11:40,740
there's another kind of blind signature

263
00:11:38,130 --> 00:11:44,970
scheme which is normally people don't

264
00:11:40,740 --> 00:11:48,150
use which is called BLS signature so

265
00:11:44,970 --> 00:11:49,890
this is just the normal BLS signature

266
00:11:48,150 --> 00:11:51,630
so there's we're going to be using a lip

267
00:11:49,890 --> 00:11:54,840
curves so the whole setup would be much

268
00:11:51,630 --> 00:11:56,640
much more complicated I don't want to go

269
00:11:54,840 --> 00:11:58,290
too much into this but the important one

270
00:11:56,640 --> 00:11:59,670
of the really important things here is

271
00:11:58,290 --> 00:12:02,370
we have to have this hash to curve

272
00:11:59,670 --> 00:12:05,819
function so this is a way that I can

273
00:12:02,370 --> 00:12:09,210
take a string and I can get out of it a

274
00:12:05,820 --> 00:12:13,050
curve point and there's no and there's

275
00:12:09,210 --> 00:12:16,260
no way that I can know from this like if

276
00:12:13,050 --> 00:12:18,209
I if I do this with two strings or then

277
00:12:16,260 --> 00:12:20,880
there's no relationship between there's

278
00:12:18,210 --> 00:12:23,040
no way to I can do do then algebra in

279
00:12:20,880 --> 00:12:27,900
the curve to get from one of those to

280
00:12:23,040 --> 00:12:31,079
the other it's like a one-way Sencha Li

281
00:12:27,900 --> 00:12:33,180
a way to think about it is that so this

282
00:12:31,080 --> 00:12:35,220
curve is some finite object but it's

283
00:12:33,180 --> 00:12:37,010
almost like we imagined it as being an

284
00:12:35,220 --> 00:12:40,590
infinite dimensional vector space and

285
00:12:37,010 --> 00:12:42,120
whenever I just give you a string what I

286
00:12:40,590 --> 00:12:43,740
get out is some other thing which is

287
00:12:42,120 --> 00:12:45,930
linearly independent to everything else

288
00:12:43,740 --> 00:12:50,400
and I can't like add them up and get get

289
00:12:45,930 --> 00:12:51,959
between them okay but what was really

290
00:12:50,400 --> 00:12:53,939
going on is that we just don't whatever

291
00:12:51,960 --> 00:12:56,670
this thing gives us we don't know the

292
00:12:53,940 --> 00:12:57,990
discrete log for it in practice how this

293
00:12:56,670 --> 00:13:00,209
hash to curve function how is it

294
00:12:57,990 --> 00:13:02,520
implemented so one way to implement it

295
00:13:00,210 --> 00:13:04,140
is you just hash and try and make a

296
00:13:02,520 --> 00:13:06,120
curve point you literally just make the

297
00:13:04,140 --> 00:13:08,010
curve point and and maybe the thing you

298
00:13:06,120 --> 00:13:09,960
make doesn't satisfy the equation then

299
00:13:08,010 --> 00:13:11,360
you try it again and you and again and

300
00:13:09,960 --> 00:13:17,100
again until you get something that works

301
00:13:11,360 --> 00:13:19,950
all right so the other feature of these

302
00:13:17,100 --> 00:13:23,640
so this kind of this hashed a curve we

303
00:13:19,950 --> 00:13:25,110
can do on any elliptic curve these BLS

304
00:13:23,640 --> 00:13:26,910
signatures require a curve that is a

305
00:13:25,110 --> 00:13:34,199
pairing the important thing about this

306
00:13:26,910 --> 00:13:37,290
is that when I if I take that if I have

307
00:13:34,199 --> 00:13:39,930
so all right well back up here just a

308
00:13:37,290 --> 00:13:43,529
second so I have this elliptic curve I

309
00:13:39,930 --> 00:13:48,660
have two subgroups of it one is realized

310
00:13:43,529 --> 00:13:50,699
over one over the elliptic curve in some

311
00:13:48,660 --> 00:13:52,350
field and probably normally the other

312
00:13:50,699 --> 00:13:54,689
one I need some kind of field extension

313
00:13:52,350 --> 00:13:56,480
whatever and I have some generators for

314
00:13:54,690 --> 00:14:01,019
them but the important thing is that

315
00:13:56,480 --> 00:14:04,740
when I multiply elements on on one side

316
00:14:01,019 --> 00:14:10,199
of the pairing I can I can flip them

317
00:14:04,740 --> 00:14:12,389
over to the other side all right so to

318
00:14:10,199 --> 00:14:14,550
show that sort of okay so what is the

319
00:14:12,389 --> 00:14:15,899
signature here it's literally just I

320
00:14:14,550 --> 00:14:17,790
hash the message to the curve and I

321
00:14:15,899 --> 00:14:19,350
multiply it so I've got all this very

322
00:14:17,790 --> 00:14:20,610
complicated elliptic curve stuff but

323
00:14:19,350 --> 00:14:24,199
then the signature is completely trivial

324
00:14:20,610 --> 00:14:30,209
and the verification equation is just

325
00:14:24,199 --> 00:14:33,689
that I that I literally am just flipping

326
00:14:30,209 --> 00:14:36,359
the a that was malted the private key

327
00:14:33,690 --> 00:14:38,339
that was multiplied here to make the

328
00:14:36,360 --> 00:14:43,399
signature I'm literally just flipping it

329
00:14:38,339 --> 00:14:43,399
over across the pairing okay

330
00:14:43,579 --> 00:14:48,449
so Bo there's a lot of interest in them

331
00:14:46,110 --> 00:14:50,490
lately so how do you make a blind

332
00:14:48,449 --> 00:14:52,290
signature out of them so basically

333
00:14:50,490 --> 00:14:54,060
exactly the same way you do it almost

334
00:14:52,290 --> 00:14:58,019
exactly the same way you do it with RSA

335
00:14:54,060 --> 00:15:01,109
except it's easier because now I this

336
00:14:58,019 --> 00:15:04,860
I'm what I'm doing when the user is

337
00:15:01,110 --> 00:15:06,779
blinding the thing if they multiply they

338
00:15:04,860 --> 00:15:08,610
multiply they sort of hide the message

339
00:15:06,779 --> 00:15:11,579
and then they send it to be signed and

340
00:15:08,610 --> 00:15:13,579
the signer just blindly does this just

341
00:15:11,579 --> 00:15:16,380
you know just does this scalar

342
00:15:13,579 --> 00:15:18,839
multiplication and then when they hand

343
00:15:16,380 --> 00:15:26,519
it back they just multiply by the

344
00:15:18,839 --> 00:15:29,339
inverse of this guy okay yeah so this is

345
00:15:26,519 --> 00:15:30,630
so alright so it's a and then the the

346
00:15:29,339 --> 00:15:33,779
verification equation just like in the

347
00:15:30,630 --> 00:15:37,230
RSA case the verification is exactly the

348
00:15:33,779 --> 00:15:41,689
same alright so any questions so far

349
00:15:37,230 --> 00:15:41,689
sorry so they're going kind of fast yeah

350
00:15:42,450 --> 00:15:48,490
accra phone Albert yeah please use the

351
00:15:46,180 --> 00:15:53,459
microphone and state your question loud

352
00:15:48,490 --> 00:15:53,460
and clear so we have it on on the stream

353
00:15:54,330 --> 00:16:04,030
sorry can can you please speak up yeah

354
00:16:01,330 --> 00:16:06,640
it should be cleared be sorry yeah

355
00:16:04,030 --> 00:16:08,770
anyway yeah yeah yeah and the SDS here

356
00:16:06,640 --> 00:16:14,490
should be in s Prime there there's okay

357
00:16:08,770 --> 00:16:18,550
my slides are a little bit messy alright

358
00:16:14,490 --> 00:16:20,110
okay so these are kind of cute so so two

359
00:16:18,550 --> 00:16:23,490
things I want to emphasize in both of

360
00:16:20,110 --> 00:16:26,950
these constructions what I needed was

361
00:16:23,490 --> 00:16:29,080
that so in the fdh construction I had to

362
00:16:26,950 --> 00:16:31,120
remove the usual randomization that I

363
00:16:29,080 --> 00:16:35,290
didn't as much about this as I probably

364
00:16:31,120 --> 00:16:37,030
should have but I had to remove the the

365
00:16:35,290 --> 00:16:39,400
randomization that often happens in the

366
00:16:37,030 --> 00:16:42,400
RSA padding and you just use this full

367
00:16:39,400 --> 00:16:44,860
domain hash and here also this H this

368
00:16:42,400 --> 00:16:47,470
hashing to the curve thing gives me this

369
00:16:44,860 --> 00:16:50,680
nice very deterministic map there's not

370
00:16:47,470 --> 00:16:52,390
really there's nothing random here so in

371
00:16:50,680 --> 00:16:53,859
both of these signature schemes there's

372
00:16:52,390 --> 00:17:01,660
nothing random and the signature scheme

373
00:16:53,860 --> 00:17:03,070
at all and that's as some of you may

374
00:17:01,660 --> 00:17:05,949
know that's not true

375
00:17:03,070 --> 00:17:08,380
in the signatures that we really use

376
00:17:05,949 --> 00:17:09,880
every day well we do use RSA every day

377
00:17:08,380 --> 00:17:11,350
but in the signatures that we really

378
00:17:09,880 --> 00:17:13,420
like to use every day well this is these

379
00:17:11,349 --> 00:17:16,208
Schnoor signet the eighty two five five

380
00:17:13,420 --> 00:17:18,690
one nine signatures or ECDSA they need

381
00:17:16,209 --> 00:17:21,690
some actual randomness in the signature

382
00:17:18,690 --> 00:17:21,690
okay

383
00:17:21,750 --> 00:17:28,240
so yeah okay

384
00:17:25,470 --> 00:17:32,890
so I'm gonna now talk just a little bit

385
00:17:28,240 --> 00:17:36,190
about this sort of consequences of

386
00:17:32,890 --> 00:17:38,230
having randomness in signatures okay so

387
00:17:36,190 --> 00:17:40,600
there's a thing choreographers do called

388
00:17:38,230 --> 00:17:43,500
a pseudo-random function and there's a

389
00:17:40,600 --> 00:17:46,240
it's just a formalization of basically

390
00:17:43,500 --> 00:17:48,160
what we do when we have these message

391
00:17:46,240 --> 00:17:51,360
authentication codes that there's a key

392
00:17:48,160 --> 00:17:53,560
and you have certain stuff use it

393
00:17:51,360 --> 00:17:54,908
essentially hashing with a key is just

394
00:17:53,560 --> 00:17:56,678
you hash the key first and then you

395
00:17:54,909 --> 00:17:59,080
hache the rest of the stuff you want to

396
00:17:56,679 --> 00:18:02,289
hash but it was a good hash function it

397
00:17:59,080 --> 00:18:04,299
is that's what it is anyway with older

398
00:18:02,289 --> 00:18:08,229
ones like sha-1 it's not you have to do

399
00:18:04,299 --> 00:18:10,269
a little bit more but okay a verifiable

400
00:18:08,229 --> 00:18:12,190
there's these things now not

401
00:18:10,269 --> 00:18:14,950
pseudo-random functions anymore they're

402
00:18:12,190 --> 00:18:17,139
verifiable random functions and they're

403
00:18:14,950 --> 00:18:21,220
there this kind of public key analog of

404
00:18:17,139 --> 00:18:23,349
a hash function with a key so I want to

405
00:18:21,220 --> 00:18:25,509
be able to put in a message and get out

406
00:18:23,349 --> 00:18:28,239
something and what I mean by public key

407
00:18:25,509 --> 00:18:30,609
analog is that anybody who if I show

408
00:18:28,239 --> 00:18:32,529
them the input in the output then I can

409
00:18:30,609 --> 00:18:36,369
show them some kind of proof that that

410
00:18:32,529 --> 00:18:39,759
output was computed correctly by you

411
00:18:36,369 --> 00:18:42,668
know sort of by someone with my with a

412
00:18:39,759 --> 00:18:45,039
public key okay our bobbum with that

413
00:18:42,669 --> 00:18:46,419
with that particular key and it should

414
00:18:45,039 --> 00:18:50,739
be a function a particular key should

415
00:18:46,419 --> 00:18:52,179
determine exactly where it goes okay so

416
00:18:50,739 --> 00:18:55,119
only the secret key holder should be

417
00:18:52,179 --> 00:18:56,289
able to compute this guy and if we think

418
00:18:55,119 --> 00:19:01,539
about what would happen with a hash

419
00:18:56,289 --> 00:19:04,299
function you know when you do like a Mac

420
00:19:01,539 --> 00:19:08,109
you're sharing the secret between you

421
00:19:04,299 --> 00:19:10,989
and somebody else that's why but okay so

422
00:19:08,109 --> 00:19:13,178
all right so we've sort of already seen

423
00:19:10,989 --> 00:19:15,849
one of these things so in this kind of

424
00:19:13,179 --> 00:19:17,139
map where we take I probably should have

425
00:19:15,849 --> 00:19:21,099
had something about our I say here too

426
00:19:17,139 --> 00:19:22,570
but if I have a message and I'm and I

427
00:19:21,099 --> 00:19:25,570
just hash it to a curve and I multiply

428
00:19:22,570 --> 00:19:27,580
it by a well this is actually one of

429
00:19:25,570 --> 00:19:30,189
these VR app this is well this is almost

430
00:19:27,580 --> 00:19:32,408
a vrf this is this is giving me

431
00:19:30,190 --> 00:19:34,539
something completely deterministic so

432
00:19:32,409 --> 00:19:36,519
these BLS signatures I'll talk about in

433
00:19:34,539 --> 00:19:39,279
a second so they these those would give

434
00:19:36,519 --> 00:19:41,590
me a V RF and also this RSA with a full

435
00:19:39,279 --> 00:19:48,700
domain hash gives me a V RF and there's

436
00:19:41,590 --> 00:19:51,549
others let's see right okay yeah let's

437
00:19:48,700 --> 00:19:53,320
just stay on this for a second so it's

438
00:19:51,549 --> 00:19:54,789
what's kind of cute is that the same

439
00:19:53,320 --> 00:20:00,269
kind of making the signature scheme

440
00:19:54,789 --> 00:20:03,669
deterministic that I needed to to do the

441
00:20:00,269 --> 00:20:06,549
to do the Vil on to really to make the

442
00:20:03,669 --> 00:20:08,200
blind signatures work though that's not

443
00:20:06,549 --> 00:20:08,629
true for all blind signature schemes but

444
00:20:08,200 --> 00:20:11,330
it's true for

445
00:20:08,630 --> 00:20:12,860
the ones that we that make sense it's

446
00:20:11,330 --> 00:20:16,460
kind of making the thing deterministic

447
00:20:12,860 --> 00:20:22,149
is exactly it also makes the thing into

448
00:20:16,460 --> 00:20:24,950
a V RF and okay now I'll say something

449
00:20:22,150 --> 00:20:27,740
so both of these signature schemes that

450
00:20:24,950 --> 00:20:32,120
we've seen the RSA with the full domain

451
00:20:27,740 --> 00:20:33,950
hash and BLS give me V ahrefs now in

452
00:20:32,120 --> 00:20:35,270
fact neither of them you probably are

453
00:20:33,950 --> 00:20:38,540
probably the ones you actually want to

454
00:20:35,270 --> 00:20:41,090
use the the thing you're actually want

455
00:20:38,540 --> 00:20:42,830
to use is this weird construction it's

456
00:20:41,090 --> 00:20:48,110
very much like a Schnoor signature but

457
00:20:42,830 --> 00:20:50,179
with extra stuff thrown in and okay what

458
00:20:48,110 --> 00:20:53,090
do you do you you do have to hash

459
00:20:50,180 --> 00:20:55,130
something to the curve just like with

460
00:20:53,090 --> 00:20:56,600
BLS except now we're not over a pairing

461
00:20:55,130 --> 00:20:58,490
friendly curve we're just over a normal

462
00:20:56,600 --> 00:21:04,429
curve there's not gonna be any pairings

463
00:20:58,490 --> 00:21:06,590
and the we we pull out of it eh okay so

464
00:21:04,430 --> 00:21:09,710
we we again have some kind of curve

465
00:21:06,590 --> 00:21:12,290
point which is our secret key multiplied

466
00:21:09,710 --> 00:21:14,420
by something hash to the curve but now

467
00:21:12,290 --> 00:21:15,290
we're gonna so we've done that looks so

468
00:21:14,420 --> 00:21:16,820
much looks like could be a less

469
00:21:15,290 --> 00:21:18,470
signature but now we're gonna make it

470
00:21:16,820 --> 00:21:20,300
look like a Schnoor signature we're

471
00:21:18,470 --> 00:21:22,580
gonna make up or an ECDSA signature we

472
00:21:20,300 --> 00:21:25,550
make up a nonce and we construct this

473
00:21:22,580 --> 00:21:28,970
challenge was called a challenge in that

474
00:21:25,550 --> 00:21:33,139
in that sort of short music terminology

475
00:21:28,970 --> 00:21:38,060
which is but in if you think about what

476
00:21:33,140 --> 00:21:39,710
would happen in a so if I drop let's see

477
00:21:38,060 --> 00:21:41,899
wait which one so if I drop all the ones

478
00:21:39,710 --> 00:21:44,060
in which so if I drop this guy this guy

479
00:21:41,900 --> 00:21:47,960
and this guy then I have a snore

480
00:21:44,060 --> 00:21:50,810
signature and it's these including these

481
00:21:47,960 --> 00:21:52,910
messages is the a cross sorry if I drop

482
00:21:50,810 --> 00:21:55,190
this guy in this guy then I have a snore

483
00:21:52,910 --> 00:21:57,710
signature and it's these ones that

484
00:21:55,190 --> 00:21:59,800
include this message point multiplied by

485
00:21:57,710 --> 00:22:02,810
something give me something new i

486
00:21:59,800 --> 00:22:04,850
compute the actual sort of signature

487
00:22:02,810 --> 00:22:07,100
scalar exactly the same way as in the

488
00:22:04,850 --> 00:22:14,600
snore signatures which middle a I didn't

489
00:22:07,100 --> 00:22:18,199
tell you about but the okay and this the

490
00:22:14,600 --> 00:22:19,850
resulting thing you and there's this the

491
00:22:18,200 --> 00:22:21,650
verification looks very much like a

492
00:22:19,850 --> 00:22:22,550
snore signature so I don't want to go

493
00:22:21,650 --> 00:22:27,830
too much into why this

494
00:22:22,550 --> 00:22:29,300
works or anything but the I the point is

495
00:22:27,830 --> 00:22:33,050
that it's actually blazingly fast

496
00:22:29,300 --> 00:22:35,930
compared to both BLS and the the RSA

497
00:22:33,050 --> 00:22:38,770
with a full domain hash so it's probably

498
00:22:35,930 --> 00:22:41,180
in practice if you want to use a via

499
00:22:38,770 --> 00:22:44,780
most of the time if you want a vrf it's

500
00:22:41,180 --> 00:22:46,400
actually what you want to do and there's

501
00:22:44,780 --> 00:22:50,210
a few implementations there's the one

502
00:22:46,400 --> 00:22:56,900
there's it's used in DNS SEC to to sort

503
00:22:50,210 --> 00:23:00,590
of to prevent basically to to be able to

504
00:22:56,900 --> 00:23:02,030
sort of yeah so it's used to actually I

505
00:23:00,590 --> 00:23:05,449
can't describe house use they're very

506
00:23:02,030 --> 00:23:07,129
well off-the-cuff anyway so Trevor

507
00:23:05,450 --> 00:23:08,780
parent has an implementation I'm not

508
00:23:07,130 --> 00:23:14,600
which I think it's used in signal

509
00:23:08,780 --> 00:23:16,790
somewhere and I have one that we use at

510
00:23:14,600 --> 00:23:21,350
work for some things in this library

511
00:23:16,790 --> 00:23:23,120
called snorkel okay now I promised

512
00:23:21,350 --> 00:23:26,000
something about proof of stake so I have

513
00:23:23,120 --> 00:23:27,409
to I have to say I have to say something

514
00:23:26,000 --> 00:23:33,020
about how the Viera how you'd actually

515
00:23:27,410 --> 00:23:36,290
use one of these V RFS so the main thing

516
00:23:33,020 --> 00:23:37,820
that I didn't okay so I didn't tell you

517
00:23:36,290 --> 00:23:41,510
too much about the security assumptions

518
00:23:37,820 --> 00:23:43,850
for using one of these things but one of

519
00:23:41,510 --> 00:23:45,530
the okay we have this message and we're

520
00:23:43,850 --> 00:23:46,610
hashing it to we're hashing it to the

521
00:23:45,530 --> 00:23:50,149
curve and then we're doing something

522
00:23:46,610 --> 00:23:51,770
we're multiplying a by a secret key but

523
00:23:50,150 --> 00:23:53,780
one of the things that I want out of

524
00:23:51,770 --> 00:23:57,650
this is that I want the resolve to the V

525
00:23:53,780 --> 00:24:02,600
okay so sorry back up a second so if I

526
00:23:57,650 --> 00:24:04,700
want the if I one of the ways I might

527
00:24:02,600 --> 00:24:06,439
use this thing is I might use the V RF

528
00:24:04,700 --> 00:24:09,890
output to determine when I should make a

529
00:24:06,440 --> 00:24:11,690
block in some blockchain like so instead

530
00:24:09,890 --> 00:24:14,510
of having proof of work what I do is I

531
00:24:11,690 --> 00:24:16,730
actually say okay let's look at this V

532
00:24:14,510 --> 00:24:21,530
RF output and decide if it's my turn or

533
00:24:16,730 --> 00:24:25,510
not so what I want one of the things I

534
00:24:21,530 --> 00:24:28,520
have to worry about there is whether the

535
00:24:25,510 --> 00:24:32,690
is whether the person who makes up the

536
00:24:28,520 --> 00:24:35,000
key gets to gets the bias at somehow so

537
00:24:32,690 --> 00:24:35,990
for example what they can do is if the

538
00:24:35,000 --> 00:24:39,140
message is just

539
00:24:35,990 --> 00:24:40,610
while kite you know just the numbers and

540
00:24:39,140 --> 00:24:45,370
that's the block I'd and I get to see if

541
00:24:40,610 --> 00:24:49,219
it's me or not then what will happen is

542
00:24:45,370 --> 00:24:50,840
the users can can just they can go back

543
00:24:49,220 --> 00:24:52,580
and do proof of work again they can try

544
00:24:50,840 --> 00:24:56,230
and guess public key yes

545
00:24:52,580 --> 00:24:58,490
public guess private keys until they get

546
00:24:56,230 --> 00:24:59,990
you get an answer that has them making a

547
00:24:58,490 --> 00:25:02,240
lot of blocks in the near future and

548
00:24:59,990 --> 00:25:03,820
then do whatever they're gonna and then

549
00:25:02,240 --> 00:25:07,580
make a bunch of blocks and then go away

550
00:25:03,820 --> 00:25:10,580
so that's not really cool so we have to

551
00:25:07,580 --> 00:25:12,500
we have to prevent that somehow so what

552
00:25:10,580 --> 00:25:14,720
we need is we need in this message that

553
00:25:12,500 --> 00:25:18,080
goes into the vrf sort of we need some

554
00:25:14,720 --> 00:25:19,400
we need some source of randomness and so

555
00:25:18,080 --> 00:25:22,189
that this is a thing called an Ouroboros

556
00:25:19,400 --> 00:25:23,690
it's from ancient mythology and there's

557
00:25:22,190 --> 00:25:25,670
a bunch of papers labeled after this but

558
00:25:23,690 --> 00:25:28,429
the basic idea and the idea existed

559
00:25:25,670 --> 00:25:31,429
before this these papers was that you

560
00:25:28,429 --> 00:25:34,730
can take a bunch of these via the vrf

561
00:25:31,429 --> 00:25:37,520
outputs that are coming from people

562
00:25:34,730 --> 00:25:38,929
making blocks and you hash them all

563
00:25:37,520 --> 00:25:40,550
together and you take a bunch of them in

564
00:25:38,929 --> 00:25:42,530
one epoch you hash them all together and

565
00:25:40,550 --> 00:25:45,800
you use that as randomness in the next

566
00:25:42,530 --> 00:25:50,480
epoch and so proving that secure is kind

567
00:25:45,800 --> 00:25:53,050
of hard and questionable but it it's

568
00:25:50,480 --> 00:25:54,830
well actually not that question sorry so

569
00:25:53,050 --> 00:25:56,750
there's a number of things there that

570
00:25:54,830 --> 00:26:00,409
are quite that are kind of tricky but

571
00:25:56,750 --> 00:26:03,080
the the general idea that what we're

572
00:26:00,410 --> 00:26:06,679
going to do is so if we have a number of

573
00:26:03,080 --> 00:26:10,129
participants in the network and they the

574
00:26:06,679 --> 00:26:12,590
different the different parties or perdu

575
00:26:10,130 --> 00:26:13,910
are producing these private sources of

576
00:26:12,590 --> 00:26:16,550
randomness and then proving they're

577
00:26:13,910 --> 00:26:17,929
correct then when we combine these all

578
00:26:16,550 --> 00:26:20,960
together with a hash then we get

579
00:26:17,929 --> 00:26:23,420
something that that nobody should

580
00:26:20,960 --> 00:26:25,340
actually have been able to foresee and

581
00:26:23,420 --> 00:26:26,870
there's other constructions so sometimes

582
00:26:25,340 --> 00:26:29,059
people there's some constructions that

583
00:26:26,870 --> 00:26:33,199
do threshold V RFS and other things like

584
00:26:29,059 --> 00:26:35,210
this but okay so yeah I'm going to stop

585
00:26:33,200 --> 00:26:36,800
there and just ask for and people are

586
00:26:35,210 --> 00:26:40,010
welcome to ask questions about sort of

587
00:26:36,800 --> 00:26:42,669
how these the different schemes play

588
00:26:40,010 --> 00:26:47,740
together and things like this all right

589
00:26:42,670 --> 00:26:47,740
thank you Jeff big applause

590
00:26:49,740 --> 00:26:57,790
so if you have any questions please come

591
00:26:53,320 --> 00:27:00,280
forward to the microphone all right

592
00:26:57,790 --> 00:27:03,270
well looks like every each and every one

593
00:27:00,280 --> 00:27:07,660
of them is ready to kill proof of work

594
00:27:03,270 --> 00:27:10,450
so all right damn thank you all thank

595
00:27:07,660 --> 00:27:14,650
you for coming here and hope you enjoyed

596
00:27:10,450 --> 00:27:17,380
the talk we have a short break and half

597
00:27:14,650 --> 00:27:19,750
past six ish we will come here back with

598
00:27:17,380 --> 00:27:23,680
new content new fresh content for you

599
00:27:19,750 --> 00:27:26,170
and so long stay well hydrated and draw

600
00:27:23,680 --> 00:27:27,960
and draw the nice weather and see you

601
00:27:26,170 --> 00:27:30,610
later

602
00:27:27,960 --> 00:27:33,690
[Applause]

603
00:27:30,610 --> 00:27:33,689
[Music]

604
00:27:38,960 --> 00:27:43,559
[Music]

605
00:27:44,470 --> 00:27:46,530
you

