1
00:00:08,850 --> 00:00:17,390
[Music]

2
00:00:13,779 --> 00:00:19,869
that respects freedom our next speaker

3
00:00:17,390 --> 00:00:21,079
is Nicole she is currently the CTO of

4
00:00:19,869 --> 00:00:23,630
purism

5
00:00:21,079 --> 00:00:25,310
and she has this role because she's been

6
00:00:23,630 --> 00:00:27,439
involved in embedded systems engineering

7
00:00:25,310 --> 00:00:29,000
for a long long time and now she will

8
00:00:27,439 --> 00:00:30,950
talk about how to make a phone that is

9
00:00:29,000 --> 00:00:32,800
actually truly free please give her a

10
00:00:30,950 --> 00:00:37,080
warm round of applause

11
00:00:32,800 --> 00:00:37,080
[Applause]

12
00:00:38,680 --> 00:00:43,309
yes hello thank you very much for having

13
00:00:41,210 --> 00:00:45,710
me here we have a lot of ground to cover

14
00:00:43,309 --> 00:00:49,430
so please excuse me if I'm a little bit

15
00:00:45,710 --> 00:00:52,039
fast so what I want to explain is the

16
00:00:49,430 --> 00:00:53,899
story that has different facets and it's

17
00:00:52,039 --> 00:00:56,120
about a quest to create a mobile phone

18
00:00:53,899 --> 00:00:59,269
that respects users privacy and users

19
00:00:56,120 --> 00:01:01,760
freedoms and that is really truly free

20
00:00:59,269 --> 00:01:05,479
and I will explain what I mean with free

21
00:01:01,760 --> 00:01:07,789
and it's also a story about a journey

22
00:01:05,479 --> 00:01:10,100
that we started over two years ago now

23
00:01:07,789 --> 00:01:11,929
and which is still ongoing then because

24
00:01:10,100 --> 00:01:14,658
making a smartphone or mobile phone

25
00:01:11,929 --> 00:01:17,720
these days is incredibly hard and that's

26
00:01:14,659 --> 00:01:20,149
also why it's called hardware so that

27
00:01:17,720 --> 00:01:23,090
the kind of freedom that I mean is the

28
00:01:20,149 --> 00:01:25,819
freedom not as in free Marta but more as

29
00:01:23,090 --> 00:01:28,520
in freedom and it's similar to what Paul

30
00:01:25,819 --> 00:01:31,369
explained just a few minutes ago what he

31
00:01:28,520 --> 00:01:33,199
called sovereignity what I call is more

32
00:01:31,369 --> 00:01:34,580
freedom it's similar to the ideas of

33
00:01:33,200 --> 00:01:37,610
freedom that the free software

34
00:01:34,580 --> 00:01:40,759
foundation has which is the freedom to

35
00:01:37,610 --> 00:01:42,979
use it for any purpose that you like to

36
00:01:40,759 --> 00:01:45,950
study it to change it and also to be

37
00:01:42,979 --> 00:01:48,049
able to share these changes because we

38
00:01:45,950 --> 00:01:49,969
at pier ISM and many others in the open

39
00:01:48,049 --> 00:01:51,500
source and free software communities we

40
00:01:49,969 --> 00:01:53,960
believe that only if these are

41
00:01:51,500 --> 00:01:57,109
guaranteed then a system can be truly

42
00:01:53,960 --> 00:02:00,548
trusted and it really can't be made in a

43
00:01:57,109 --> 00:02:03,380
way that it preserves the users privacy

44
00:02:00,549 --> 00:02:05,210
so to understand what the challenges are

45
00:02:03,380 --> 00:02:08,329
you have to look at the mobile phone

46
00:02:05,210 --> 00:02:09,649
market the current market every year I

47
00:02:08,329 --> 00:02:13,010
don't know how many of you are aware of

48
00:02:09,649 --> 00:02:16,340
that about 1.2 billion smartphones or

49
00:02:13,010 --> 00:02:18,470
phones are built worldwide so this means

50
00:02:16,340 --> 00:02:20,060
that every seven years every human being

51
00:02:18,470 --> 00:02:22,489
on the planet Earth could have a new

52
00:02:20,060 --> 00:02:25,640
phone which is really quite amazing

53
00:02:22,489 --> 00:02:28,220
so what this also means is the mobile

54
00:02:25,640 --> 00:02:31,820
phone a smartphone market is gigantic

55
00:02:28,220 --> 00:02:34,459
it's really huge about 30 percent of

56
00:02:31,820 --> 00:02:37,430
these of all these smartphones one of

57
00:02:34,459 --> 00:02:40,030
those 1.2 billion are made in just one

58
00:02:37,430 --> 00:02:43,609
single City which is Shenzhen in China

59
00:02:40,030 --> 00:02:46,750
so the largest wealth of experience in

60
00:02:43,609 --> 00:02:49,480
making mobile phones is in this location

61
00:02:46,750 --> 00:02:52,090
which is also quite amazing

62
00:02:49,480 --> 00:02:53,709
and this also led to this enormous

63
00:02:52,090 --> 00:02:55,750
experience and amazing experience that

64
00:02:53,709 --> 00:02:57,879
we just had by building the phone we

65
00:02:55,750 --> 00:03:00,580
went to change in and asked arbitrary

66
00:02:57,879 --> 00:03:03,220
companies for our project to build this

67
00:03:00,580 --> 00:03:05,440
phone and within half a day we got a

68
00:03:03,220 --> 00:03:08,050
quote for designing the PCB for our

69
00:03:05,440 --> 00:03:10,420
phone and do this in the Western

70
00:03:08,050 --> 00:03:13,060
Hemisphere and Western world engineers

71
00:03:10,420 --> 00:03:14,768
will ask the hell out of you so this is

72
00:03:13,060 --> 00:03:16,870
totally amazing what is happening down

73
00:03:14,769 --> 00:03:19,980
there they have the biggest experience

74
00:03:16,870 --> 00:03:21,970
that they are really fast to do things

75
00:03:19,980 --> 00:03:24,609
looking further at the market you will

76
00:03:21,970 --> 00:03:26,890
quickly find out that the the majority

77
00:03:24,610 --> 00:03:30,430
of the market is currently just governed

78
00:03:26,890 --> 00:03:32,619
and ruled by two major systems and two

79
00:03:30,430 --> 00:03:34,420
major companies which is Google running

80
00:03:32,620 --> 00:03:37,420
the Android platform which is about 85%

81
00:03:34,420 --> 00:03:41,290
of the overall global market in Apple

82
00:03:37,420 --> 00:03:44,920
iOS which is almost 50% so basically all

83
00:03:41,290 --> 00:03:47,078
the rest has run into insignificance so

84
00:03:44,920 --> 00:03:48,488
that where we used to have Symbian and

85
00:03:47,079 --> 00:03:50,950
all these other different platforms

86
00:03:48,489 --> 00:03:53,670
there are none these days so it's mostly

87
00:03:50,950 --> 00:03:56,709
dominated by Android and Apple iOS and

88
00:03:53,670 --> 00:03:59,619
this has a huge impact on the hardware

89
00:03:56,709 --> 00:04:01,780
market also for making a phone you need

90
00:03:59,620 --> 00:04:04,780
chips and these chips are made by

91
00:04:01,780 --> 00:04:07,239
chipset makers and there are quite a

92
00:04:04,780 --> 00:04:10,569
number of chips at makers worldwide and

93
00:04:07,239 --> 00:04:12,940
also the chipset market there you can

94
00:04:10,569 --> 00:04:15,970
see the dominance of certain companies

95
00:04:12,940 --> 00:04:19,298
and one of the major players here is

96
00:04:15,970 --> 00:04:21,370
Qualcomm Qualcomm owns more than 40% of

97
00:04:19,298 --> 00:04:25,330
the smartphone chipset market currently

98
00:04:21,370 --> 00:04:27,460
than 20% about by Apple 15% by mediatek

99
00:04:25,330 --> 00:04:29,320
which is also an Asian company mostly

100
00:04:27,460 --> 00:04:32,190
Chinese little bit of Samsung and then

101
00:04:29,320 --> 00:04:34,930
we have 15% others like Hawaii and Arles

102
00:04:32,190 --> 00:04:37,840
so there there are only a very few

103
00:04:34,930 --> 00:04:41,830
companies actually creating these

104
00:04:37,840 --> 00:04:43,900
solutions if you look inside just the

105
00:04:41,830 --> 00:04:46,000
Android ecosystem because the apple iOS

106
00:04:43,900 --> 00:04:48,969
system is pretty closed inside the

107
00:04:46,000 --> 00:04:51,639
Android system this ecosystem is

108
00:04:48,970 --> 00:04:54,940
dominated by just two which is Qualcomm

109
00:04:51,639 --> 00:04:57,849
and mediatek and if you then think that

110
00:04:54,940 --> 00:05:00,010
85% of the global market is Android this

111
00:04:57,849 --> 00:05:02,419
means in other words about two-thirds of

112
00:05:00,010 --> 00:05:03,889
the smartphone's that you find out there

113
00:05:02,419 --> 00:05:06,560
it's just dominated by two or three

114
00:05:03,889 --> 00:05:09,050
companies if you can't Google in which

115
00:05:06,560 --> 00:05:11,599
is really really amazing so that's a

116
00:05:09,050 --> 00:05:15,919
huge market and very very few companies

117
00:05:11,599 --> 00:05:18,289
actually ruling this market but then

118
00:05:15,919 --> 00:05:20,479
there's not only hardware but also the

119
00:05:18,289 --> 00:05:23,719
3gpp standards so if you want to

120
00:05:20,479 --> 00:05:25,490
introduce a device which runs on those

121
00:05:23,719 --> 00:05:26,389
cellular networks you have to comply to

122
00:05:25,490 --> 00:05:28,189
those standards

123
00:05:26,389 --> 00:05:30,289
these standards are governed by the 3gpp

124
00:05:28,189 --> 00:05:32,389
organization which is the third

125
00:05:30,289 --> 00:05:34,969
generation partnership project in short

126
00:05:32,389 --> 00:05:37,150
3gpp is a standards organization which

127
00:05:34,969 --> 00:05:41,060
develops protocols for mobile telephony

128
00:05:37,150 --> 00:05:43,008
these 3gpp specifications are in general

129
00:05:41,060 --> 00:05:47,210
open so you can download and read them

130
00:05:43,009 --> 00:05:50,960
and try to understand them it's huge but

131
00:05:47,210 --> 00:05:54,049
they are not so free to use and here we

132
00:05:50,960 --> 00:05:55,849
come into the pretty ugly area of

133
00:05:54,050 --> 00:05:58,849
patterns and especially software

134
00:05:55,849 --> 00:06:02,449
patterns and I will come in a moment

135
00:05:58,849 --> 00:06:05,870
to why this is all important so 3pp the

136
00:06:02,449 --> 00:06:08,060
three VPP standards are covered by

137
00:06:05,870 --> 00:06:11,150
literally thousands of patterns and

138
00:06:08,060 --> 00:06:14,089
every new generation from 2g to 3G to 4G

139
00:06:11,150 --> 00:06:17,000
and now 5g the number of patterns grows

140
00:06:14,089 --> 00:06:20,629
almost by a magnitude so we're talking

141
00:06:17,000 --> 00:06:23,810
about thousands of patterns and due to

142
00:06:20,629 --> 00:06:26,120
the patent legislation and the legal

143
00:06:23,810 --> 00:06:28,879
restriction or the legal legislation for

144
00:06:26,120 --> 00:06:32,659
for patents a patent is granted in

145
00:06:28,879 --> 00:06:35,389
country or use jurisdictions and this is

146
00:06:32,659 --> 00:06:39,669
why we have about 80 million patents

147
00:06:35,389 --> 00:06:43,879
worldwide on 3gpp standards and about

148
00:06:39,669 --> 00:06:45,529
250 thousand patents which are standard

149
00:06:43,879 --> 00:06:47,180
relevance that means if you want to

150
00:06:45,529 --> 00:06:48,830
create something that runs on a cellular

151
00:06:47,180 --> 00:06:51,080
network which complies to the 3gpp

152
00:06:48,830 --> 00:06:54,409
standards then it's about 200 250

153
00:06:51,080 --> 00:06:57,289
thousand patents for 4G which are

154
00:06:54,409 --> 00:06:59,750
potentially in your way or kind of in

155
00:06:57,289 --> 00:07:03,349
your way which you have to which you

156
00:06:59,750 --> 00:07:06,080
have to use and large patent holders are

157
00:07:03,349 --> 00:07:08,479
in this order basically Qualcomm

158
00:07:06,080 --> 00:07:10,729
interdigital Ericsson Nokia why Samsung

159
00:07:08,479 --> 00:07:14,270
and a few others and the first two or

160
00:07:10,729 --> 00:07:16,190
three have more than 50 percent and by

161
00:07:14,270 --> 00:07:18,289
coincidence Qualcomm is also one of

162
00:07:16,190 --> 00:07:22,910
number one chipset makers especially the

163
00:07:18,290 --> 00:07:24,740
Android phone area so this means we have

164
00:07:22,910 --> 00:07:27,470
a market which is controlled and

165
00:07:24,740 --> 00:07:31,220
dominated by very few companies so why

166
00:07:27,470 --> 00:07:34,280
is this important because of this the

167
00:07:31,220 --> 00:07:36,700
smartphone is used today everywhere by

168
00:07:34,280 --> 00:07:39,969
everyone so it's a dominant platform

169
00:07:36,700 --> 00:07:44,360
everywhere on the planet and growing

170
00:07:39,970 --> 00:07:46,070
many people or the the smartphone has by

171
00:07:44,360 --> 00:07:48,770
far surpassed the relevance of ordinary

172
00:07:46,070 --> 00:07:51,800
computers many people have ditched their

173
00:07:48,770 --> 00:07:53,750
pcs for in China that is in for a

174
00:07:51,800 --> 00:07:58,240
smartphone or a tablet and even tablets

175
00:07:53,750 --> 00:08:00,950
are now running out of importance

176
00:07:58,240 --> 00:08:08,960
smartphones are ubiquitous and universal

177
00:08:00,950 --> 00:08:11,110
and yeah so smartphones have become the

178
00:08:08,960 --> 00:08:13,789
platform the computing platform of

179
00:08:11,110 --> 00:08:16,910
basically almost everyone's everyday

180
00:08:13,790 --> 00:08:19,610
life and they store everything about us

181
00:08:16,910 --> 00:08:21,680
our whole digital life communication all

182
00:08:19,610 --> 00:08:24,320
means of communication texts emails

183
00:08:21,680 --> 00:08:26,750
voice calls encrypted are then not

184
00:08:24,320 --> 00:08:29,719
encrypted of course also location

185
00:08:26,750 --> 00:08:31,940
movement everything secrets we store on

186
00:08:29,720 --> 00:08:33,950
our or smart phones like passwords or

187
00:08:31,940 --> 00:08:39,080
access tokens to almost everything our

188
00:08:33,950 --> 00:08:42,140
bank accounts so this is exactly why it

189
00:08:39,080 --> 00:08:46,490
matters to create something that we own

190
00:08:42,140 --> 00:08:49,520
that we control and like Paul said that

191
00:08:46,490 --> 00:08:51,860
we are a sovereign of because this is

192
00:08:49,520 --> 00:08:55,400
our digital life that is controlled by

193
00:08:51,860 --> 00:08:57,710
these devices and we entrust these to

194
00:08:55,400 --> 00:09:02,510
just a handful of companies that's

195
00:08:57,710 --> 00:09:05,420
critical so how to change this and how

196
00:09:02,510 --> 00:09:07,960
to engineer a smart phone or a mobile

197
00:09:05,420 --> 00:09:10,880
phone so the things you need is

198
00:09:07,960 --> 00:09:13,430
basically a CPU which is in the embedded

199
00:09:10,880 --> 00:09:16,460
devices usually an SOC system on a chip

200
00:09:13,430 --> 00:09:18,469
which controls memory storage RAM things

201
00:09:16,460 --> 00:09:20,980
like that it also drives the screen

202
00:09:18,470 --> 00:09:22,970
through GPU IPU and all these things

203
00:09:20,980 --> 00:09:25,460
controls the cameras and different

204
00:09:22,970 --> 00:09:28,790
peripherals peripheral interfaces so

205
00:09:25,460 --> 00:09:30,050
that's main CPU and then you also need

206
00:09:28,790 --> 00:09:31,640
those wireless interface

207
00:09:30,050 --> 00:09:33,740
that everyone county expects from our

208
00:09:31,640 --> 00:09:36,680
smartphone these days which is wireless

209
00:09:33,740 --> 00:09:40,190
a Wi-Fi bluetooth and of course the

210
00:09:36,680 --> 00:09:41,599
cellular modem it's a phone so you need

211
00:09:40,190 --> 00:09:45,010
a cellular modem for all the current

212
00:09:41,600 --> 00:09:48,890
technologies this sounds kind of simple

213
00:09:45,010 --> 00:09:51,140
but it isn't so the main challenge in

214
00:09:48,890 --> 00:09:53,480
the smartphone is first of all the size

215
00:09:51,140 --> 00:09:55,130
it is incredibly small and everyone

216
00:09:53,480 --> 00:09:58,730
expects to be it's very very small these

217
00:09:55,130 --> 00:10:01,189
days and many of these components the

218
00:09:58,730 --> 00:10:04,430
CPU the SOC and also the radios consume

219
00:10:01,190 --> 00:10:07,279
a lot of power and so this itself is a

220
00:10:04,430 --> 00:10:09,500
challenge and this challenge is shared

221
00:10:07,279 --> 00:10:11,870
by all hardware manufacturers they want

222
00:10:09,500 --> 00:10:13,700
to make a mobile phone which is also the

223
00:10:11,870 --> 00:10:16,160
reason why the chipset makers like

224
00:10:13,700 --> 00:10:18,680
Qualcomm mediatek and the others have

225
00:10:16,160 --> 00:10:21,199
created solutions for that and remember

226
00:10:18,680 --> 00:10:23,060
the market is gigantic so there's a huge

227
00:10:21,200 --> 00:10:27,410
demand and the demand is of course

228
00:10:23,060 --> 00:10:29,989
answered by those manufacturers and they

229
00:10:27,410 --> 00:10:32,120
created system on chips which integrate

230
00:10:29,990 --> 00:10:35,000
all of these things including also the

231
00:10:32,120 --> 00:10:36,890
radios onto one piece of silicon which

232
00:10:35,000 --> 00:10:38,899
is perfectly lead and perfectly fine for

233
00:10:36,890 --> 00:10:40,939
many of those smartphones very tightly

234
00:10:38,899 --> 00:10:43,670
integrated and conserving power and

235
00:10:40,940 --> 00:10:48,410
storage and all these things but this

236
00:10:43,670 --> 00:10:50,750
has some problems the the advantage is

237
00:10:48,410 --> 00:10:53,600
that for example the cellular modem

238
00:10:50,750 --> 00:10:55,790
these days has become incredibly complex

239
00:10:53,600 --> 00:10:57,740
and you have seen this or you I talked

240
00:10:55,790 --> 00:10:59,569
about this with the patent situation

241
00:10:57,740 --> 00:11:01,700
there is a lot of knowledge that you

242
00:10:59,570 --> 00:11:03,649
that goes into developing the firmware

243
00:11:01,700 --> 00:11:06,320
for such a modem to control the radio

244
00:11:03,649 --> 00:11:08,630
and all the protocols they go on so the

245
00:11:06,320 --> 00:11:11,390
modem firmware itself and controlling

246
00:11:08,630 --> 00:11:14,089
the radios is extremely complex needs a

247
00:11:11,390 --> 00:11:17,060
huge firmware and if you have it into

248
00:11:14,089 --> 00:11:18,920
the same SOC silicon you can share a lot

249
00:11:17,060 --> 00:11:21,739
of the resources that you would usually

250
00:11:18,920 --> 00:11:23,180
just also use for your main CPU that

251
00:11:21,740 --> 00:11:24,740
drives your applications so you can

252
00:11:23,180 --> 00:11:26,599
share the RAM you can share the flash

253
00:11:24,740 --> 00:11:29,180
and a lot of other things and you saw

254
00:11:26,600 --> 00:11:31,970
also have fast data interconnection from

255
00:11:29,180 --> 00:11:34,370
your host CPU to this modem so that's

256
00:11:31,970 --> 00:11:35,720
very convenient same saving occur of

257
00:11:34,370 --> 00:11:38,510
course also applies to Wi-Fi and

258
00:11:35,720 --> 00:11:43,670
Bluetooth but it's less than with these

259
00:11:38,510 --> 00:11:45,809
cellular modem so these

260
00:11:43,670 --> 00:11:48,628
250,000 standard relevant patents in

261
00:11:45,809 --> 00:11:51,420
3gpp 4G are pretty much not in vain

262
00:11:48,629 --> 00:11:54,240
because it's so complex and you can see

263
00:11:51,420 --> 00:11:56,819
this also if you look at the the binary

264
00:11:54,240 --> 00:11:59,129
firmware of a cellular modem these days

265
00:11:56,819 --> 00:12:01,290
these are usually 30 megabytes just

266
00:11:59,129 --> 00:12:04,050
binary firmware of these modems so it's

267
00:12:01,290 --> 00:12:07,139
really huge piece of software which then

268
00:12:04,050 --> 00:12:08,819
runs in your SOC and has access to the

269
00:12:07,139 --> 00:12:11,220
same Rambis for example as your

270
00:12:08,819 --> 00:12:13,019
applications which is a concern as also

271
00:12:11,220 --> 00:12:14,850
Paul laid out you're probably not

272
00:12:13,019 --> 00:12:16,470
sovereign of your own data anymore

273
00:12:14,850 --> 00:12:22,259
because the modem could spy on the RAM

274
00:12:16,470 --> 00:12:24,300
bus and there was fun fact many of those

275
00:12:22,259 --> 00:12:27,360
modems actually run a Linux system and

276
00:12:24,300 --> 00:12:30,149
there was a very good talk at the 33 C 3

277
00:12:27,360 --> 00:12:32,189
by Harvard and hi graph writer which you

278
00:12:30,149 --> 00:12:34,290
can look up at this URL and they

279
00:12:32,189 --> 00:12:39,990
actually detected one of those binary

280
00:12:34,290 --> 00:12:42,689
blob firmwares and now even if you

281
00:12:39,990 --> 00:12:44,279
wanted to do something like a free bodom

282
00:12:42,689 --> 00:12:46,920
implementation implement these 30

283
00:12:44,279 --> 00:12:49,649
megabytes of binary a thing and do this

284
00:12:46,920 --> 00:12:51,709
it's really really hard because then you

285
00:12:49,649 --> 00:12:54,779
have to license all those patterns and

286
00:12:51,709 --> 00:12:56,819
3gpp patterns must be licensed there is

287
00:12:54,779 --> 00:12:58,769
legislation for that by the patent

288
00:12:56,819 --> 00:13:00,389
holders under so-called French terms

289
00:12:58,769 --> 00:13:03,870
which means fair reasonable and

290
00:13:00,389 --> 00:13:05,999
non-discriminatory but these patent

291
00:13:03,870 --> 00:13:09,420
holders still use the patterns to

292
00:13:05,999 --> 00:13:11,279
control the chip market and this also

293
00:13:09,420 --> 00:13:13,469
led to one of the lessons learned that

294
00:13:11,279 --> 00:13:16,620
we did when we first started out the

295
00:13:13,470 --> 00:13:18,329
research for doing our phone that we

296
00:13:16,620 --> 00:13:22,439
learned that there are only very few

297
00:13:18,329 --> 00:13:24,239
back in 2017 very few modem modules that

298
00:13:22,439 --> 00:13:26,309
you could buy which would actually allow

299
00:13:24,240 --> 00:13:29,189
you to make voice calls because at that

300
00:13:26,309 --> 00:13:31,769
time modern manufacturers especially a

301
00:13:29,189 --> 00:13:33,899
company called Qualcomm wanted to sell

302
00:13:31,769 --> 00:13:35,790
their smart phone ships for smart phones

303
00:13:33,899 --> 00:13:39,959
that do actually voice calls and they

304
00:13:35,790 --> 00:13:42,809
didn't want to sell modems to others to

305
00:13:39,959 --> 00:13:47,638
also do more than to also do voice calls

306
00:13:42,809 --> 00:13:49,769
and build phones with that so it was

307
00:13:47,639 --> 00:13:53,339
pretty hard at that time to find decent

308
00:13:49,769 --> 00:13:55,799
modem and to have something customized

309
00:13:53,339 --> 00:13:58,240
for us even that we're talking about ten

310
00:13:55,799 --> 00:14:00,730
thousand devices that we want to be

311
00:13:58,240 --> 00:14:03,040
motor manufacturers like these wouldn't

312
00:14:00,730 --> 00:14:04,720
talk to us at all so integrating a modem

313
00:14:03,040 --> 00:14:06,670
and asking for custom firmware something

314
00:14:04,720 --> 00:14:09,250
like that for us at our size even

315
00:14:06,670 --> 00:14:13,959
talking about 10k not an option

316
00:14:09,250 --> 00:14:16,210
and so here you see the the grip through

317
00:14:13,960 --> 00:14:17,710
software patterns from manufacturers on

318
00:14:16,210 --> 00:14:23,290
the market and what the market can

319
00:14:17,710 --> 00:14:25,089
actually do so what we wanted and now

320
00:14:23,290 --> 00:14:27,880
coming to the actual realization of what

321
00:14:25,089 --> 00:14:31,089
we do yes we wanted to create a phone

322
00:14:27,880 --> 00:14:33,070
and a smart phone which is binary blob

323
00:14:31,089 --> 00:14:35,410
free at runtime that means that the host

324
00:14:33,070 --> 00:14:37,990
CPU does not have to handle any binary

325
00:14:35,410 --> 00:14:41,920
mistery codes but to download to any

326
00:14:37,990 --> 00:14:44,650
devices we don't want to use any

327
00:14:41,920 --> 00:14:47,920
proprietary drivers no close source

328
00:14:44,650 --> 00:14:50,439
drivers no close source firmware and we

329
00:14:47,920 --> 00:14:52,990
wanted to have the radios cellular the

330
00:14:50,440 --> 00:14:55,180
Wi-Fi Bluetooth separated from the main

331
00:14:52,990 --> 00:14:57,339
CPU also two reasons what Paul explained

332
00:14:55,180 --> 00:15:00,069
to be sovereign over there over the data

333
00:14:57,339 --> 00:15:03,670
and it should be based on free software

334
00:15:00,070 --> 00:15:05,260
only we're striving to get respects our

335
00:15:03,670 --> 00:15:07,719
freedom certification from the Free

336
00:15:05,260 --> 00:15:10,209
Software Foundation and of course it

337
00:15:07,720 --> 00:15:12,370
should be a open design hackable for

338
00:15:10,209 --> 00:15:15,369
everyone schematics will be available to

339
00:15:12,370 --> 00:15:17,830
everyone without NDA so it's completely

340
00:15:15,370 --> 00:15:20,190
you can own it and you can change it and

341
00:15:17,830 --> 00:15:23,320
you can do whatever you like with that

342
00:15:20,190 --> 00:15:24,850
what we came up in 2017 as the solution

343
00:15:23,320 --> 00:15:27,910
and the best solution that we could find

344
00:15:24,850 --> 00:15:32,170
at that time was to use the NXP I am NOT

345
00:15:27,910 --> 00:15:36,250
mx8 quad is the main and host CPU which

346
00:15:32,170 --> 00:15:38,560
features four cortex a53 cores running

347
00:15:36,250 --> 00:15:41,860
at one point five megahertz gigahertz

348
00:15:38,560 --> 00:15:43,510
without megahertz we have enough

349
00:15:41,860 --> 00:15:45,400
peripheral interfaces for driving

350
00:15:43,510 --> 00:15:47,020
screens and cameras and all these things

351
00:15:45,400 --> 00:15:49,360
and all the peripherals needed nodes for

352
00:15:47,020 --> 00:15:53,110
sensors but most importantly the idle

353
00:15:49,360 --> 00:15:55,990
time xh m at that time was the only SOC

354
00:15:53,110 --> 00:15:57,940
that supported free drivers for the GPU

355
00:15:55,990 --> 00:15:59,740
the graphics engine that drives the

356
00:15:57,940 --> 00:16:03,010
screen in the end and which allows for

357
00:15:59,740 --> 00:16:07,329
graphics acceleration and this is the GC

358
00:16:03,010 --> 00:16:09,040
7000 GC 7000 light from Devon t4 which

359
00:16:07,329 --> 00:16:09,640
there is a free software implication

360
00:16:09,040 --> 00:16:11,469
driver

361
00:16:09,640 --> 00:16:13,839
which is called Aetna beef which is

362
00:16:11,470 --> 00:16:16,350
Vivante backwards and for this ya

363
00:16:13,839 --> 00:16:19,750
upstream mainline kernel drivers and

364
00:16:16,350 --> 00:16:22,480
included and the drivers also have been

365
00:16:19,750 --> 00:16:25,660
pushed upstream to Mesa already in this

366
00:16:22,480 --> 00:16:27,300
is working pretty nicely already today

367
00:16:25,660 --> 00:16:30,310
there are more choices

368
00:16:27,300 --> 00:16:33,819
unfortunately now two years ago they

369
00:16:30,310 --> 00:16:36,430
haven't been just to be fair on the Mali

370
00:16:33,820 --> 00:16:38,529
GPU is also working quite nicely now and

371
00:16:36,430 --> 00:16:41,939
also the on the part of the free Draenor

372
00:16:38,529 --> 00:16:44,740
driver to the adrenals GPUs of Qualcomm

373
00:16:41,940 --> 00:16:49,420
also become pretty much stable and

374
00:16:44,740 --> 00:16:51,640
available what we also wanted to do is

375
00:16:49,420 --> 00:16:53,680
to have the radios separated out of the

376
00:16:51,640 --> 00:16:55,630
CPU so that they don't cannot interfere

377
00:16:53,680 --> 00:16:57,279
with the data that is stored on the CPU

378
00:16:55,630 --> 00:17:00,670
and the applications that are running on

379
00:16:57,279 --> 00:17:03,939
the CPU on the main CPU so we separated

380
00:17:00,670 --> 00:17:05,619
out the the Wi-Fi and Bluetooth on an

381
00:17:03,940 --> 00:17:07,240
MDOT 2 card and this will also be

382
00:17:05,619 --> 00:17:10,659
implemented in this way in the final

383
00:17:07,240 --> 00:17:13,359
phone am the two so pretty much well

384
00:17:10,660 --> 00:17:15,579
known standard it's connected using SD

385
00:17:13,359 --> 00:17:17,708
al the firmware sits on the card the

386
00:17:15,579 --> 00:17:20,799
host CPU doesn't touch it for the

387
00:17:17,709 --> 00:17:22,290
cellular 4G we have two options also

388
00:17:20,799 --> 00:17:25,000
sitting on an AM de two card

389
00:17:22,290 --> 00:17:26,980
one is the Gemalto appeal as aid which

390
00:17:25,000 --> 00:17:28,630
is made in Germany and partly in the US

391
00:17:26,980 --> 00:17:32,470
the more the card would be made in the

392
00:17:28,630 --> 00:17:35,380
US and also the broad mo bbm 818 which

393
00:17:32,470 --> 00:17:37,059
is made in China the broke mobi is

394
00:17:35,380 --> 00:17:38,970
available for more regions of the world

395
00:17:37,059 --> 00:17:41,918
and that's why we chose a second one and

396
00:17:38,970 --> 00:17:44,919
in theory for the phone later on

397
00:17:41,919 --> 00:17:46,929
nem the two cards that can't use the

398
00:17:44,919 --> 00:17:48,610
same interfaces as we use them now and

399
00:17:46,929 --> 00:17:50,410
are supported in the front way and in

400
00:17:48,610 --> 00:17:53,229
the hardware can be plugged into the

401
00:17:50,410 --> 00:17:55,150
device and also other radios if the

402
00:17:53,230 --> 00:17:58,419
antennas of course will be tuned for the

403
00:17:55,150 --> 00:18:00,250
4G bands and for Wi-Fi and Bluetooth and

404
00:17:58,419 --> 00:18:02,950
if you have another radio they want to

405
00:18:00,250 --> 00:18:07,059
use on there of course just plug it in

406
00:18:02,950 --> 00:18:08,350
for example for these UHF radios that

407
00:18:07,059 --> 00:18:10,330
also Paul mentioned would be a

408
00:18:08,350 --> 00:18:13,809
possibility and it will be very

409
00:18:10,330 --> 00:18:15,610
interesting to see now what we also

410
00:18:13,809 --> 00:18:18,190
implemented in the hardware our hardware

411
00:18:15,610 --> 00:18:19,990
kills which is so that you have a switch

412
00:18:18,190 --> 00:18:22,150
that really physically severs the

413
00:18:19,990 --> 00:18:23,770
hardware like the cellular baseband the

414
00:18:22,150 --> 00:18:25,990
Wi-Fi cameras

415
00:18:23,770 --> 00:18:28,530
and also the sensors from the host CPU

416
00:18:25,990 --> 00:18:31,480
said so that even a malicious acting

417
00:18:28,530 --> 00:18:34,000
application cannot get access to the to

418
00:18:31,480 --> 00:18:36,520
this data and do some bad things for you

419
00:18:34,000 --> 00:18:39,730
so your privacy can be really safely and

420
00:18:36,520 --> 00:18:41,800
secure what we also do is we integrated

421
00:18:39,730 --> 00:18:43,750
a smart card here so that you can use a

422
00:18:41,800 --> 00:18:46,240
smart card like for example the open PGP

423
00:18:43,750 --> 00:18:47,770
card or arbitrary ion the smart card to

424
00:18:46,240 --> 00:18:53,680
store your secrets in a very safe place

425
00:18:47,770 --> 00:18:55,300
like encryption keys and also the smart

426
00:18:53,680 --> 00:18:56,980
card reader for this we have a separate

427
00:18:55,300 --> 00:18:59,169
project we're collaborating with one a

428
00:18:56,980 --> 00:19:01,300
colony but you talk I here for

429
00:18:59,170 --> 00:19:03,430
implementing a free sir a free firmware

430
00:19:01,300 --> 00:19:08,440
for this smart card reader which is

431
00:19:03,430 --> 00:19:10,480
based on an STM 32 L 4 3 2 KC which is a

432
00:19:08,440 --> 00:19:14,320
microcontroller and this will be

433
00:19:10,480 --> 00:19:15,970
accessible for everyone so what we did

434
00:19:14,320 --> 00:19:17,470
in the first place is we started to

435
00:19:15,970 --> 00:19:19,780
create the development kit end of last

436
00:19:17,470 --> 00:19:21,540
year and this is part of the PCB I will

437
00:19:19,780 --> 00:19:25,990
show the real device in a few seconds

438
00:19:21,540 --> 00:19:27,610
and this we did based on a so called

439
00:19:25,990 --> 00:19:29,320
system on module which implements all

440
00:19:27,610 --> 00:19:31,300
the heavy lifting for M and flash and

441
00:19:29,320 --> 00:19:33,189
all these things and we designed the

442
00:19:31,300 --> 00:19:35,560
base board for that so that we get

443
00:19:33,190 --> 00:19:36,880
something out some hardware out to

444
00:19:35,560 --> 00:19:39,669
developers that are interested in

445
00:19:36,880 --> 00:19:41,350
developing the software and helping with

446
00:19:39,670 --> 00:19:42,700
developing the software as soon as

447
00:19:41,350 --> 00:19:46,090
possible and we started to distribute

448
00:19:42,700 --> 00:19:47,590
these at the end of last year and this

449
00:19:46,090 --> 00:19:50,290
is the real hardware probably cannot

450
00:19:47,590 --> 00:19:53,139
really properly see the picture but you

451
00:19:50,290 --> 00:19:55,060
can see the separated modules here for

452
00:19:53,140 --> 00:19:57,340
the modem at the Wi-Fi and the system on

453
00:19:55,060 --> 00:19:59,679
module in in the middle and the phone

454
00:19:57,340 --> 00:20:02,050
screen on top and this is actually

455
00:19:59,680 --> 00:20:04,960
working now that's pretty nicely working

456
00:20:02,050 --> 00:20:07,510
the software is making progress and next

457
00:20:04,960 --> 00:20:10,000
I can show you very proudly this is the

458
00:20:07,510 --> 00:20:11,980
first boards that we just got received

459
00:20:10,000 --> 00:20:14,140
from from China that's the first time

460
00:20:11,980 --> 00:20:15,670
that these are shown to the public for

461
00:20:14,140 --> 00:20:19,030
the final device which has been

462
00:20:15,670 --> 00:20:20,530
developed in parallel in China this

463
00:20:19,030 --> 00:20:23,260
location where they have this incredible

464
00:20:20,530 --> 00:20:24,970
huge experience and this is one side of

465
00:20:23,260 --> 00:20:27,220
the board this is the other side of the

466
00:20:24,970 --> 00:20:29,380
board with the CPU in the middle and you

467
00:20:27,220 --> 00:20:32,410
can also see the two aMDA two slots on

468
00:20:29,380 --> 00:20:34,750
there the GNSS module and look for other

469
00:20:32,410 --> 00:20:36,640
stuff so we are getting there but

470
00:20:34,750 --> 00:20:37,330
hardware is hard everything takes much

471
00:20:36,640 --> 00:20:41,650
longer than

472
00:20:37,330 --> 00:20:44,770
anticipated of course to give you a idea

473
00:20:41,650 --> 00:20:45,670
of the complexity of that board we have

474
00:20:44,770 --> 00:20:48,370
on this board

475
00:20:45,670 --> 00:20:50,800
more than 160 different components and

476
00:20:48,370 --> 00:20:53,169
that's over one thousand and two hundred

477
00:20:50,800 --> 00:20:56,740
parts placements on these boards so

478
00:20:53,170 --> 00:21:00,030
that's an incredibly dense board the PCB

479
00:20:56,740 --> 00:21:02,890
has ten layers so ten layers of routing

480
00:21:00,030 --> 00:21:05,379
the smallest parts are Oh - or warning

481
00:21:02,890 --> 00:21:08,110
for the electronic geeks now the

482
00:21:05,380 --> 00:21:11,320
smallest ball pitch is 0.4 millimeter

483
00:21:08,110 --> 00:21:13,899
that is the distance from one ball to

484
00:21:11,320 --> 00:21:15,879
the next of those BGA devices the

485
00:21:13,900 --> 00:21:18,370
smallest diameter of drills and holes

486
00:21:15,880 --> 00:21:20,460
for example for vias is zero point two

487
00:21:18,370 --> 00:21:24,610
four or five four millimeters which is

488
00:21:20,460 --> 00:21:27,310
incredibly small and air all of that is

489
00:21:24,610 --> 00:21:31,929
condensed onto a piece B which is about

490
00:21:27,310 --> 00:21:36,570
the size of two credit cards and this is

491
00:21:31,930 --> 00:21:39,430
what hopefully the final device don't

492
00:21:36,570 --> 00:21:41,590
don't lay me down all those size numbers

493
00:21:39,430 --> 00:21:43,930
in the bottom right corner but this is

494
00:21:41,590 --> 00:21:47,010
about the the design that we intend to

495
00:21:43,930 --> 00:21:50,320
have in the end so we're getting there

496
00:21:47,010 --> 00:21:52,420
so this is the hardware part on the

497
00:21:50,320 --> 00:21:54,159
software side of course as I already

498
00:21:52,420 --> 00:21:56,440
mentioned we want to have everything

499
00:21:54,160 --> 00:21:59,290
open everything shall be free software

500
00:21:56,440 --> 00:22:01,510
on that so everything what we do inside

501
00:21:59,290 --> 00:22:05,379
of purism before the project will will

502
00:22:01,510 --> 00:22:08,050
and ears copyleft license so GPL or LGPL

503
00:22:05,380 --> 00:22:10,030
of v3 and all the contributions that we

504
00:22:08,050 --> 00:22:12,730
do to upstream projects which are quite

505
00:22:10,030 --> 00:22:15,399
a lot are of course according to the

506
00:22:12,730 --> 00:22:18,730
upstream projects our motto is upstream

507
00:22:15,400 --> 00:22:20,830
first that is if we can push our changes

508
00:22:18,730 --> 00:22:23,350
into the upstream projects then we will

509
00:22:20,830 --> 00:22:24,699
definitely do so this has several

510
00:22:23,350 --> 00:22:26,379
reasons one of them of course is

511
00:22:24,700 --> 00:22:29,110
maintenance but the others are of course

512
00:22:26,380 --> 00:22:31,000
also to avoid obsolescence of the of the

513
00:22:29,110 --> 00:22:33,580
platform and of the software we want

514
00:22:31,000 --> 00:22:36,640
this software in this platform to strive

515
00:22:33,580 --> 00:22:38,949
and to live on and this is only possible

516
00:22:36,640 --> 00:22:42,190
at least in our opinion when the things

517
00:22:38,950 --> 00:22:44,020
are mainlines the bootloader of course

518
00:22:42,190 --> 00:22:45,880
of the system will not be locked in any

519
00:22:44,020 --> 00:22:48,550
way it's a standard you boot that also

520
00:22:45,880 --> 00:22:50,960
comes with the and XP CPUs and the BSP

521
00:22:48,550 --> 00:22:53,649
for that the you boot will really

522
00:22:50,960 --> 00:22:56,300
in the emmc of the board which is the

523
00:22:53,650 --> 00:22:57,890
embedded multimedia card which is

524
00:22:56,300 --> 00:23:01,760
similar to an SD card but soldered onto

525
00:22:57,890 --> 00:23:04,940
the board and we have one tiny issue and

526
00:23:01,760 --> 00:23:07,129
this is where freedom is limited by the

527
00:23:04,940 --> 00:23:11,290
hardware and today there's almost no way

528
00:23:07,130 --> 00:23:14,360
around it for the DDL forum you need

529
00:23:11,290 --> 00:23:16,250
initialization somehow ddr4 is pretty

530
00:23:14,360 --> 00:23:20,270
fast and it's parallel signals on the

531
00:23:16,250 --> 00:23:22,610
board so the the attachment part that is

532
00:23:20,270 --> 00:23:24,830
inside the CPU has to very carefully

533
00:23:22,610 --> 00:23:28,310
tune the signal levels to talk to the

534
00:23:24,830 --> 00:23:30,679
ddr4 Ram and there are a lot of patents

535
00:23:28,310 --> 00:23:33,950
on doing this and this is also the

536
00:23:30,680 --> 00:23:35,960
reason why this ddr4 initialization

537
00:23:33,950 --> 00:23:38,000
ization sequence for almost no platform

538
00:23:35,960 --> 00:23:40,100
at all currently is open source

539
00:23:38,000 --> 00:23:41,510
the ddr4 controller it's a small

540
00:23:40,100 --> 00:23:43,939
microcontroller and you have to download

541
00:23:41,510 --> 00:23:45,680
that firmware I just mentioned it here

542
00:23:43,940 --> 00:23:47,090
these are struggles that you have when

543
00:23:45,680 --> 00:23:49,400
you start to develop things suddenly

544
00:23:47,090 --> 00:23:52,159
find oh there's a piece of binary code

545
00:23:49,400 --> 00:23:55,790
that we have to use and there's no way

546
00:23:52,160 --> 00:23:58,370
to avoid this so we handle this by a

547
00:23:55,790 --> 00:24:01,070
second CPU that is also inside of the

548
00:23:58,370 --> 00:24:03,110
idle demyx it's the cortex m4 core which

549
00:24:01,070 --> 00:24:05,030
then pulls this foam way out of an SPI

550
00:24:03,110 --> 00:24:07,129
flash and puts it into the file and the

551
00:24:05,030 --> 00:24:09,430
file can initialize DRAM and we can

552
00:24:07,130 --> 00:24:12,020
continue to boot but that's pretty

553
00:24:09,430 --> 00:24:15,560
stubborn and I don't like that approach

554
00:24:12,020 --> 00:24:17,180
but there's no way around it the kernel

555
00:24:15,560 --> 00:24:19,040
that we're running is a mainline kernel

556
00:24:17,180 --> 00:24:21,650
currently it's a five-point toodle-oo

557
00:24:19,040 --> 00:24:23,480
kernel all the patches that we do we are

558
00:24:21,650 --> 00:24:25,850
heavily working on the Vivante driver

559
00:24:23,480 --> 00:24:27,590
and also a lot of other things trying to

560
00:24:25,850 --> 00:24:30,139
mainline all the drivers that are needed

561
00:24:27,590 --> 00:24:32,679
for the idle mx8 we're doing a lot of

562
00:24:30,140 --> 00:24:35,270
work that NXP should be doing but well

563
00:24:32,680 --> 00:24:37,100
we're doing that porting all the stuff

564
00:24:35,270 --> 00:24:38,990
forward and all the patches are sent

565
00:24:37,100 --> 00:24:43,070
upstream into the kernel community and

566
00:24:38,990 --> 00:24:45,290
get merged over time then on the

567
00:24:43,070 --> 00:24:48,590
operating system side we're running a

568
00:24:45,290 --> 00:24:51,440
debian derivative so purism also makes

569
00:24:48,590 --> 00:24:53,419
laptops and on the laptops we have to do

570
00:24:51,440 --> 00:24:56,420
a Debian distribution which is called

571
00:24:53,420 --> 00:24:58,970
pure s and we're using the same pure as

572
00:24:56,420 --> 00:25:01,010
basically just compiled for arm 64 on

573
00:24:58,970 --> 00:25:03,090
the phones too which means you have the

574
00:25:01,010 --> 00:25:04,920
same packages and

575
00:25:03,090 --> 00:25:06,629
and everything available on the phone

576
00:25:04,920 --> 00:25:08,820
that you're also used to on the laptops

577
00:25:06,630 --> 00:25:10,980
which is what is pretty awesome

578
00:25:08,820 --> 00:25:13,919
which also means that you can install an

579
00:25:10,980 --> 00:25:18,030
arbitrary Debian arm 64 packages on this

580
00:25:13,920 --> 00:25:19,890
phone we also want soon to introduce

581
00:25:18,030 --> 00:25:21,420
flat pack for application distribution

582
00:25:19,890 --> 00:25:24,030
this has several reasons

583
00:25:21,420 --> 00:25:27,270
one of them is of course the possibility

584
00:25:24,030 --> 00:25:28,590
to sandbox applications and to ease also

585
00:25:27,270 --> 00:25:30,600
application development because

586
00:25:28,590 --> 00:25:32,220
dependencies can be handled a little bit

587
00:25:30,600 --> 00:25:34,169
smoother with flat packs in the flat

588
00:25:32,220 --> 00:25:37,020
pack distribution but this is still in

589
00:25:34,170 --> 00:25:41,190
the works for the graphic user interface

590
00:25:37,020 --> 00:25:44,310
environment we use a system based on

591
00:25:41,190 --> 00:25:46,260
Weiland and we had to write our own

592
00:25:44,310 --> 00:25:48,240
compositor and shell on top of Wayland

593
00:25:46,260 --> 00:25:50,580
using WI routes which is which is a

594
00:25:48,240 --> 00:25:54,390
toolkit to write compositors and shells

595
00:25:50,580 --> 00:25:56,490
and these are called fork and for fold

596
00:25:54,390 --> 00:25:58,530
compositor and for shell these are two

597
00:25:56,490 --> 00:26:00,330
of the very few parts that we wrote from

598
00:25:58,530 --> 00:26:04,170
scratch because there was nothing that

599
00:26:00,330 --> 00:26:06,990
we could contribute to for the

600
00:26:04,170 --> 00:26:08,640
application environment we chose to go

601
00:26:06,990 --> 00:26:10,770
with the free desktop tool org standard

602
00:26:08,640 --> 00:26:13,200
and we chose the the genome approach and

603
00:26:10,770 --> 00:26:14,760
we're using G lab in gtk for application

604
00:26:13,200 --> 00:26:17,850
development for native applications

605
00:26:14,760 --> 00:26:19,560
which works pretty nicely and one of the

606
00:26:17,850 --> 00:26:21,480
reasons all state choose this approach

607
00:26:19,560 --> 00:26:24,030
is that we are now working very closely

608
00:26:21,480 --> 00:26:27,210
together with the clone community to

609
00:26:24,030 --> 00:26:28,290
enable gtk and canola application

610
00:26:27,210 --> 00:26:30,960
applications at the whole genome

611
00:26:28,290 --> 00:26:33,840
environment to run smoothly on mobile

612
00:26:30,960 --> 00:26:36,660
phones also using a responsive defiant

613
00:26:33,840 --> 00:26:39,389
design methods so that applications that

614
00:26:36,660 --> 00:26:42,450
are written for the desktop can be made

615
00:26:39,390 --> 00:26:44,040
in a way that they also run on a small

616
00:26:42,450 --> 00:26:46,470
screen or smaller screen like on a

617
00:26:44,040 --> 00:26:49,590
mobile phone without having to reprogram

618
00:26:46,470 --> 00:26:52,140
or recompile them and we're developing

619
00:26:49,590 --> 00:26:54,300
specialized widgets for that and also

620
00:26:52,140 --> 00:26:56,100
all of this is going upstream currently

621
00:26:54,300 --> 00:26:57,270
it's in a separated library but we're

622
00:26:56,100 --> 00:27:01,199
working with the genome community

623
00:26:57,270 --> 00:27:03,440
community to accept this upstream for

624
00:27:01,200 --> 00:27:05,580
those that are interested in

625
00:27:03,440 --> 00:27:07,830
participating or looking at this

626
00:27:05,580 --> 00:27:10,409
development we are quite some

627
00:27:07,830 --> 00:27:12,629
development resources developer pure

628
00:27:10,410 --> 00:27:14,220
assembly room 5 this is the the main

629
00:27:12,630 --> 00:27:16,080
site where the development also

630
00:27:14,220 --> 00:27:17,640
documentation is stored

631
00:27:16,080 --> 00:27:19,679
they can also find instructions how to

632
00:27:17,640 --> 00:27:21,840
download a virtual machine image for

633
00:27:19,680 --> 00:27:23,640
running on your laptop or PC so that you

634
00:27:21,840 --> 00:27:25,350
can try the software on your PC without

635
00:27:23,640 --> 00:27:28,440
the device and also develop against this

636
00:27:25,350 --> 00:27:31,320
virtual machine of course sauce periods

637
00:27:28,440 --> 00:27:33,030
this is the the site where all the

638
00:27:31,320 --> 00:27:34,290
source code management and also

639
00:27:33,030 --> 00:27:36,840
continuous integration management

640
00:27:34,290 --> 00:27:38,340
happens it's all in the public there we

641
00:27:36,840 --> 00:27:42,870
work together with gunawan with ignore

642
00:27:38,340 --> 00:27:44,909
with the kernel forks then here are some

643
00:27:42,870 --> 00:27:46,320
pictures of the actual applications you

644
00:27:44,910 --> 00:27:48,450
maybe wonder how this actually could

645
00:27:46,320 --> 00:27:50,580
look like and this is how it looks like

646
00:27:48,450 --> 00:27:53,220
this is a modified version of the genome

647
00:27:50,580 --> 00:27:55,919
settings dialog and you can already see

648
00:27:53,220 --> 00:27:57,960
that on the left hand side you have main

649
00:27:55,920 --> 00:28:00,750
menu of the genome settings which now

650
00:27:57,960 --> 00:28:02,220
folds kind of in this responsive way if

651
00:28:00,750 --> 00:28:03,900
there's different views of different

652
00:28:02,220 --> 00:28:05,940
settings on the right hand side you can

653
00:28:03,900 --> 00:28:09,120
also see the first implementation of a

654
00:28:05,940 --> 00:28:11,100
virtual keyboard here and here's some

655
00:28:09,120 --> 00:28:14,399
other examples how to do this so that's

656
00:28:11,100 --> 00:28:17,010
the initial setup customized for the

657
00:28:14,400 --> 00:28:19,560
smaller screen which then also works in

658
00:28:17,010 --> 00:28:22,710
the same way on desktop which is pretty

659
00:28:19,560 --> 00:28:25,230
nice here we have the composite hand

660
00:28:22,710 --> 00:28:27,630
shell working a hint it's not just the

661
00:28:25,230 --> 00:28:29,790
shell it's really a shell shell on the

662
00:28:27,630 --> 00:28:33,120
right hand side of course you want to

663
00:28:29,790 --> 00:28:36,570
have a shell on the mobile phone here is

664
00:28:33,120 --> 00:28:40,560
contact setting up so a lot of things

665
00:28:36,570 --> 00:28:43,290
already working and being adapted here's

666
00:28:40,560 --> 00:28:45,450
a web browser we use the genome web

667
00:28:43,290 --> 00:28:47,970
application for that which is based on

668
00:28:45,450 --> 00:28:49,560
WebKit on the left hand side there's a

669
00:28:47,970 --> 00:28:51,360
web page the Pure's and web page in that

670
00:28:49,560 --> 00:28:55,169
case and the right-hand side you have

671
00:28:51,360 --> 00:28:57,389
the the tab handling how open tabs are

672
00:28:55,170 --> 00:28:58,770
handled in the browser which is actually

673
00:28:57,390 --> 00:29:02,460
pretty neat you can flick through the

674
00:28:58,770 --> 00:29:04,470
open tabs and do something now this

675
00:29:02,460 --> 00:29:06,900
interesting time we are running out of

676
00:29:04,470 --> 00:29:10,710
time I'm afraid but in general I have a

677
00:29:06,900 --> 00:29:12,780
deaf kid here which is this thing and in

678
00:29:10,710 --> 00:29:14,310
theory someone could call it but we

679
00:29:12,780 --> 00:29:17,910
don't have the time now to wait for that

680
00:29:14,310 --> 00:29:19,649
I'm afraid but it's working so the whole

681
00:29:17,910 --> 00:29:22,530
software stack is running we can do this

682
00:29:19,650 --> 00:29:24,840
later on you can find me in the cows

683
00:29:22,530 --> 00:29:29,129
West's village and we can do this there

684
00:29:24,840 --> 00:29:29,850
if you're interested in now summarizing

685
00:29:29,130 --> 00:29:33,030
a little bit of the channel

686
00:29:29,850 --> 00:29:35,159
so we have seen there's a lot of parts

687
00:29:33,030 --> 00:29:39,420
that we have to do to create this mobile

688
00:29:35,160 --> 00:29:40,770
phone and the one more than or a few of

689
00:29:39,420 --> 00:29:43,110
the major challenges are of course

690
00:29:40,770 --> 00:29:45,389
handling suppliers because if you want

691
00:29:43,110 --> 00:29:47,459
to do a hardware you have to work on all

692
00:29:45,390 --> 00:29:49,770
these suppliers and work to work with

693
00:29:47,460 --> 00:29:52,880
them to get the supplies which is parts

694
00:29:49,770 --> 00:29:55,860
PCBs parts for the case and all of that

695
00:29:52,880 --> 00:29:58,020
this is an immense effort so developing

696
00:29:55,860 --> 00:30:00,570
something is one thing but getting all

697
00:29:58,020 --> 00:30:01,760
those suppliers in line is really a huge

698
00:30:00,570 --> 00:30:04,260
undertaking

699
00:30:01,760 --> 00:30:05,580
then the other part is if you want to do

700
00:30:04,260 --> 00:30:07,020
something with convenient consumer

701
00:30:05,580 --> 00:30:08,699
electronics and to put this into

702
00:30:07,020 --> 00:30:11,100
production and Sears production and mass

703
00:30:08,700 --> 00:30:14,400
production at the moment there's almost

704
00:30:11,100 --> 00:30:17,280
no way around China because whole

705
00:30:14,400 --> 00:30:18,300
production facilities are there there

706
00:30:17,280 --> 00:30:21,300
are the people that have the experience

707
00:30:18,300 --> 00:30:23,250
there are the people who can crank out

708
00:30:21,300 --> 00:30:25,620
stuff really quickly and at a decent

709
00:30:23,250 --> 00:30:28,460
price it's not cheap anymore I can tell

710
00:30:25,620 --> 00:30:30,750
you but it's at least a decent price but

711
00:30:28,460 --> 00:30:32,490
it's very tough to work with China

712
00:30:30,750 --> 00:30:34,170
because of the language barrier only

713
00:30:32,490 --> 00:30:37,740
very few people speak English down there

714
00:30:34,170 --> 00:30:40,230
so you always have those translators and

715
00:30:37,740 --> 00:30:42,230
interpreters in between and this really

716
00:30:40,230 --> 00:30:44,430
makes collaboration really hard

717
00:30:42,230 --> 00:30:48,150
additional to the time zone differences

718
00:30:44,430 --> 00:30:50,490
and then also consulting suppliers the

719
00:30:48,150 --> 00:30:52,410
component sourcing for an electronics

720
00:30:50,490 --> 00:30:55,230
product like this and especially if you

721
00:30:52,410 --> 00:30:58,440
want to build a thousand or five

722
00:30:55,230 --> 00:30:59,280
thousand or even ten thousand you really

723
00:30:58,440 --> 00:31:01,380
get into trouble

724
00:30:59,280 --> 00:31:04,350
we have on some components we have lead

725
00:31:01,380 --> 00:31:06,000
times of up to 20 weeks so this means

726
00:31:04,350 --> 00:31:08,820
that you have to plan all your just

727
00:31:06,000 --> 00:31:11,250
logistics way in advance before you

728
00:31:08,820 --> 00:31:14,159
start the mass production and this is a

729
00:31:11,250 --> 00:31:15,240
huge challenge and undertaking and then

730
00:31:14,160 --> 00:31:17,520
of course there are all those

731
00:31:15,240 --> 00:31:19,170
regulations and certifications

732
00:31:17,520 --> 00:31:21,810
especially if you have an intentional

733
00:31:19,170 --> 00:31:24,660
radiator like the cellular phone or the

734
00:31:21,810 --> 00:31:27,020
cellular modem which does radiate of

735
00:31:24,660 --> 00:31:28,800
course in certain frequencies and to be

736
00:31:27,020 --> 00:31:30,900
compliant to all those regulations

737
00:31:28,800 --> 00:31:32,520
that's a huge undertaking you have to go

738
00:31:30,900 --> 00:31:34,680
to laboratories doing all those

739
00:31:32,520 --> 00:31:36,420
certifications and things so that's

740
00:31:34,680 --> 00:31:39,830
really challenging especially for a

741
00:31:36,420 --> 00:31:39,830
company that hasn't done this before

742
00:31:40,640 --> 00:31:45,710
the other challenge that we also see is

743
00:31:43,370 --> 00:31:48,020
that due to the lack of hackable

744
00:31:45,710 --> 00:31:50,210
hardware in the mobile space for the

745
00:31:48,020 --> 00:31:51,020
past years because Android has become so

746
00:31:50,210 --> 00:31:53,270
dominant

747
00:31:51,020 --> 00:31:54,889
there is only very little knowledge out

748
00:31:53,270 --> 00:31:57,379
there in the free software communities

749
00:31:54,890 --> 00:31:58,970
about these devices and how those base

750
00:31:57,380 --> 00:32:01,730
technologies that are needed for but

751
00:31:58,970 --> 00:32:03,770
needed for those devices can't be done

752
00:32:01,730 --> 00:32:05,810
and there's only very little free code

753
00:32:03,770 --> 00:32:07,430
out there so this is also a big

754
00:32:05,810 --> 00:32:09,919
challenge and was a big challenge for us

755
00:32:07,430 --> 00:32:11,960
and we are now working together with the

756
00:32:09,920 --> 00:32:14,030
different communities and empowering

757
00:32:11,960 --> 00:32:16,970
people handing out those deaf kids and

758
00:32:14,030 --> 00:32:20,030
trying to create this community because

759
00:32:16,970 --> 00:32:22,700
we think that we must change this we

760
00:32:20,030 --> 00:32:25,040
need to free this knowledge and enable

761
00:32:22,700 --> 00:32:28,580
the hacker communities to liberate

762
00:32:25,040 --> 00:32:30,920
people from this oligopoly of a very few

763
00:32:28,580 --> 00:32:34,460
corporations who currently run and

764
00:32:30,920 --> 00:32:37,460
govern our digital life and clearly at

765
00:32:34,460 --> 00:32:40,730
some point they also exploited just look

766
00:32:37,460 --> 00:32:44,000
at this Cambridge analytical scandal so

767
00:32:40,730 --> 00:32:45,200
and with this I want to close we need

768
00:32:44,000 --> 00:32:47,380
power to the people

769
00:32:45,200 --> 00:32:50,740
free the mobile and hack the planet

770
00:32:47,380 --> 00:32:50,740
thank you very much

771
00:33:00,490 --> 00:33:04,230
well thank you for this great talk

772
00:33:04,570 --> 00:33:09,610
so everybody we have about ten minutes

773
00:33:06,520 --> 00:33:11,500
for Q&A you know the drill there is a

774
00:33:09,610 --> 00:33:13,120
microphone angel somewhere in the middle

775
00:33:11,500 --> 00:33:15,760
I literally can't see anything but I

776
00:33:13,120 --> 00:33:19,209
swear he's somewhere there and just wave

777
00:33:15,760 --> 00:33:21,340
at him or queue up behind him and then

778
00:33:19,210 --> 00:33:23,350
we will get to you and if you under

779
00:33:21,340 --> 00:33:25,300
stream hop into the IRC or on Twitter

780
00:33:23,350 --> 00:33:29,469
and then the signal angel can read aloud

781
00:33:25,300 --> 00:33:31,510
your questions do we have people Wow do

782
00:33:29,470 --> 00:33:34,240
we have any questions from the audience

783
00:33:31,510 --> 00:33:35,620
yes okay please go ahead thanks a lot

784
00:33:34,240 --> 00:33:40,020
for your talk

785
00:33:35,620 --> 00:33:44,560
welcome I think a big challenge is the

786
00:33:40,020 --> 00:33:47,160
application environment only I've heard

787
00:33:44,560 --> 00:33:51,490
that only China has more than 1 million

788
00:33:47,160 --> 00:33:55,060
Android application developers and we

789
00:33:51,490 --> 00:33:57,610
need a lot of good applications on such

790
00:33:55,060 --> 00:34:01,510
a nice platform what do you think about

791
00:33:57,610 --> 00:34:03,580
that and maybe there is an option of

792
00:34:01,510 --> 00:34:07,090
running Android open source project or

793
00:34:03,580 --> 00:34:10,750
sailfish OS on your platform what do you

794
00:34:07,090 --> 00:34:12,850
think about it ok so that's of course

795
00:34:10,750 --> 00:34:15,489
one of the number one questions how do

796
00:34:12,850 --> 00:34:17,889
you want to handle applications so of

797
00:34:15,489 --> 00:34:20,589
course first this device is not intended

798
00:34:17,889 --> 00:34:22,449
to be the replacement of the average

799
00:34:20,590 --> 00:34:23,830
Android phone so we don't expect to have

800
00:34:22,449 --> 00:34:25,929
those millions and millions of

801
00:34:23,830 --> 00:34:28,020
applications there what we want to

802
00:34:25,929 --> 00:34:30,009
achieve is to create a platform that is

803
00:34:28,020 --> 00:34:33,400
conserving and respecting the user's

804
00:34:30,010 --> 00:34:35,350
privacy and also be secure and these for

805
00:34:33,400 --> 00:34:37,300
this we only need a handful of really

806
00:34:35,350 --> 00:34:39,250
good applications like a web browser or

807
00:34:37,300 --> 00:34:41,290
something that does the calls handles

808
00:34:39,250 --> 00:34:44,290
messaging and all these things the the

809
00:34:41,290 --> 00:34:46,659
most basic applications and what we also

810
00:34:44,290 --> 00:34:48,699
see in the in the community around the

811
00:34:46,659 --> 00:34:49,960
Librium primer right now is that a lot

812
00:34:48,699 --> 00:34:51,909
of people are very interested in working

813
00:34:49,960 --> 00:34:55,659
for this platform creating applications

814
00:34:51,909 --> 00:34:57,940
of course we will not be quickly at this

815
00:34:55,659 --> 00:35:00,970
1 million application or developer stage

816
00:34:57,940 --> 00:35:03,640
no way now but we're getting there and

817
00:35:00,970 --> 00:35:06,339
for the first time or for the beginning

818
00:35:03,640 --> 00:35:08,560
it will be dual use you have your

819
00:35:06,340 --> 00:35:09,910
Android platform with different

820
00:35:08,560 --> 00:35:12,160
applications and then you have this

821
00:35:09,910 --> 00:35:13,930
other platform which is probably the

822
00:35:12,160 --> 00:35:14,200
Librium 5 which conserves your privacy

823
00:35:13,930 --> 00:35:17,190
and why

824
00:35:14,200 --> 00:35:20,470
can be secured about your digital life

825
00:35:17,190 --> 00:35:22,869
and probably at some point we can also

826
00:35:20,470 --> 00:35:24,250
talk about enabling running Android

827
00:35:22,869 --> 00:35:26,010
applications there are some open source

828
00:35:24,250 --> 00:35:27,970
and free software projects about this

829
00:35:26,010 --> 00:35:29,890
which could be possible

830
00:35:27,970 --> 00:35:31,720
sailfish I'm not so sure if this works

831
00:35:29,890 --> 00:35:34,750
in parallel we can support QT

832
00:35:31,720 --> 00:35:36,339
applications in general but a wholesale

833
00:35:34,750 --> 00:35:39,940
fish I don't know how this can be

834
00:35:36,339 --> 00:35:43,630
encapsulated thanks do we have another

835
00:35:39,940 --> 00:35:50,380
question I think there's someone walking

836
00:35:43,630 --> 00:35:53,710
up just go ahead yes thank you for the

837
00:35:50,380 --> 00:35:56,650
talk is a very exciting project I was

838
00:35:53,710 --> 00:35:58,630
wondering if there's people running the

839
00:35:56,650 --> 00:36:02,950
development software on other devices

840
00:35:58,630 --> 00:36:05,680
and if your if your ISM is supporting

841
00:36:02,950 --> 00:36:08,259
that at all or interested in having this

842
00:36:05,680 --> 00:36:09,940
not just be for the upcoming hardware

843
00:36:08,260 --> 00:36:12,880
which does look cool but there's a lot

844
00:36:09,940 --> 00:36:15,190
of old devices out there there are of

845
00:36:12,880 --> 00:36:17,460
course so you have to keep in mind that

846
00:36:15,190 --> 00:36:20,109
purism is a quite small company so

847
00:36:17,460 --> 00:36:23,319
supporting other projects is tough for

848
00:36:20,109 --> 00:36:25,150
us but we do our very best so if it's

849
00:36:23,319 --> 00:36:27,160
something that we can't explain about

850
00:36:25,150 --> 00:36:29,170
things that we did of course we're

851
00:36:27,160 --> 00:36:32,230
totally open to that but of course the

852
00:36:29,170 --> 00:36:35,349
the Librium 5 is currently the the main

853
00:36:32,230 --> 00:36:37,359
driver for us and this is also the thing

854
00:36:35,349 --> 00:36:39,310
I'm making hardware it costs money

855
00:36:37,359 --> 00:36:41,410
employing all those people developing

856
00:36:39,310 --> 00:36:43,450
this thing this software stack and also

857
00:36:41,410 --> 00:36:45,490
the hardware costs a lot of money and we

858
00:36:43,450 --> 00:36:47,649
have to take we have to make some money

859
00:36:45,490 --> 00:36:50,470
and this is why the libram 5 is of

860
00:36:47,650 --> 00:36:53,290
course our main target but anyone else

861
00:36:50,470 --> 00:36:55,509
can join our communities on the matrix

862
00:36:53,290 --> 00:36:57,160
channels and get in touch with us we do

863
00:36:55,510 --> 00:37:01,089
our very best and we want this platform

864
00:36:57,160 --> 00:37:06,149
to be yea usable as widely as possible

865
00:37:01,089 --> 00:37:09,430
and now a question from the internet yes

866
00:37:06,150 --> 00:37:12,550
is there any information on the cellular

867
00:37:09,430 --> 00:37:16,328
modems firmware a source available user

868
00:37:12,550 --> 00:37:19,630
adaptable or protect against updates by

869
00:37:16,329 --> 00:37:20,050
digital signatures that's a very good

870
00:37:19,630 --> 00:37:22,349
question

871
00:37:20,050 --> 00:37:22,349
so

872
00:37:22,400 --> 00:37:29,180
the short answer is no because we're

873
00:37:26,090 --> 00:37:31,760
dependent on module makers and modem

874
00:37:29,180 --> 00:37:35,210
makers that provide these modules and

875
00:37:31,760 --> 00:37:36,950
modems to us and with the 10,000 devices

876
00:37:35,210 --> 00:37:38,960
that were intending to make we don't

877
00:37:36,950 --> 00:37:42,109
have much leverage on those modem makers

878
00:37:38,960 --> 00:37:44,120
and so the firmware is binary only we

879
00:37:42,110 --> 00:37:46,610
cannot do anything about it we just can

880
00:37:44,120 --> 00:37:48,560
try to separate it as much input as

881
00:37:46,610 --> 00:37:50,540
possible and to control the interface to

882
00:37:48,560 --> 00:37:52,910
the modem but there's no much way to

883
00:37:50,540 --> 00:37:54,050
control the firmware itself and this is

884
00:37:52,910 --> 00:37:58,730
also the reason why we have the

885
00:37:54,050 --> 00:38:03,800
separation and yeah the separation yeah

886
00:37:58,730 --> 00:38:06,290
sorry okay from the room hi thank you

887
00:38:03,800 --> 00:38:10,010
that's a very very interesting project

888
00:38:06,290 --> 00:38:12,170
very noble in 10 hate to be the bean

889
00:38:10,010 --> 00:38:16,820
counter how much you expecting to charge

890
00:38:12,170 --> 00:38:19,670
your devices oh I'm not the right person

891
00:38:16,820 --> 00:38:21,920
to ask for about finance is coming that

892
00:38:19,670 --> 00:38:23,990
you can't pre-order the phone right now

893
00:38:21,920 --> 00:38:26,600
from the peers and web page and if I'm

894
00:38:23,990 --> 00:38:34,609
not mistaken it's $700 right now is

895
00:38:26,600 --> 00:38:40,450
$6.99 does anyone know approximately 700

896
00:38:34,610 --> 00:38:40,450
apparently do we have another question

897
00:38:40,900 --> 00:38:47,540
hi thanks for the talk and I want to ask

898
00:38:44,990 --> 00:38:49,549
you some clarifications I don't know if

899
00:38:47,540 --> 00:38:51,440
they undo beside configure the questions

900
00:38:49,550 --> 00:38:54,880
but they could be answered as yes or no

901
00:38:51,440 --> 00:38:57,140
so maybe I'll get away with it like I

902
00:38:54,880 --> 00:39:01,070
from what I understood in the end you

903
00:38:57,140 --> 00:39:03,319
set it down for IP is like CPU and GPUs

904
00:39:01,070 --> 00:39:06,320
and communications that were not open

905
00:39:03,320 --> 00:39:09,220
right in the sense of the schematics

906
00:39:06,320 --> 00:39:12,590
were available and the other thing was

907
00:39:09,220 --> 00:39:14,600
did you do the integration into SOC of

908
00:39:12,590 --> 00:39:17,780
the IPS by yourself or did you have to

909
00:39:14,600 --> 00:39:19,910
contract subcontracted to people that

910
00:39:17,780 --> 00:39:21,980
maybe because what I was interesting is

911
00:39:19,910 --> 00:39:24,170
if it's something that is doable with

912
00:39:21,980 --> 00:39:26,660
only open-source tools and the very last

913
00:39:24,170 --> 00:39:30,560
thing is the GPU drivers that you

914
00:39:26,660 --> 00:39:32,930
pointed out for the GPUs are they

915
00:39:30,560 --> 00:39:34,370
reverse engineered open-source

916
00:39:32,930 --> 00:39:34,879
implementations or are they actually

917
00:39:34,370 --> 00:39:39,400
meant

918
00:39:34,880 --> 00:39:42,619
by the vendors I was one day Thanks sure

919
00:39:39,400 --> 00:39:46,220
so I hope that I got the the question

920
00:39:42,619 --> 00:39:49,250
right a lot of the knowledge that we

921
00:39:46,220 --> 00:39:52,118
used to upstream the things and

922
00:39:49,250 --> 00:39:55,549
implement them in the kernel in DMSO is

923
00:39:52,119 --> 00:39:57,740
based on the on the board Support

924
00:39:55,549 --> 00:40:00,079
Package this comes from an XP so there

925
00:39:57,740 --> 00:40:02,689
are a lot of drivers they're kind of

926
00:40:00,079 --> 00:40:04,519
free software the problem with those be

927
00:40:02,690 --> 00:40:06,799
is peace not only from an XP is usually

928
00:40:04,519 --> 00:40:09,799
that they have a huge wealth of code

929
00:40:06,799 --> 00:40:11,720
which is not suitable for up streaming

930
00:40:09,799 --> 00:40:14,420
so what we do is we kind of cherry-pick

931
00:40:11,720 --> 00:40:17,720
a lot of things from this from this

932
00:40:14,420 --> 00:40:19,970
bender kernel and upstream this into the

933
00:40:17,720 --> 00:40:21,769
into the mainline kernel and there are

934
00:40:19,970 --> 00:40:23,808
some other parts like the GPU driver

935
00:40:21,769 --> 00:40:25,519
that you also mentioned which is closed

936
00:40:23,809 --> 00:40:28,009
source in the went vendor kernel the

937
00:40:25,519 --> 00:40:30,169
vendor distribution this is an free

938
00:40:28,009 --> 00:40:31,789
software reverse engineering project the

939
00:40:30,170 --> 00:40:34,549
Vivante project which has already been

940
00:40:31,789 --> 00:40:36,980
going on for many years started with the

941
00:40:34,549 --> 00:40:39,349
IMX a to feminine form correctly and

942
00:40:36,980 --> 00:40:42,319
that's a huge amount of effort to

943
00:40:39,349 --> 00:40:44,720
reverse engineer this and by the first

944
00:40:42,319 --> 00:40:47,000
reverse engineering of the year vivant

945
00:40:44,720 --> 00:40:48,950
ace and GPUs for the idle that makes a

946
00:40:47,000 --> 00:40:52,190
lot of knowledge was gained so that the

947
00:40:48,950 --> 00:40:55,879
reverse engineering for the IRA mx8 the

948
00:40:52,190 --> 00:40:59,000
GC 7000 light that's in there has been

949
00:40:55,880 --> 00:41:02,960
lots easier and faster than it was for

950
00:40:59,000 --> 00:41:04,490
the I'm idle dynamics 6 so it's in part

951
00:41:02,960 --> 00:41:06,920
it's partly a partially reverse

952
00:41:04,490 --> 00:41:08,720
engineering partially using code that

953
00:41:06,920 --> 00:41:12,849
comes from the vendor kernel porting

954
00:41:08,720 --> 00:41:15,049
this upstream and yes it's doable for

955
00:41:12,849 --> 00:41:17,660
experienced hackers from the open-source

956
00:41:15,049 --> 00:41:19,819
community to dive into such a

957
00:41:17,660 --> 00:41:21,609
development project but it's hard work

958
00:41:19,819 --> 00:41:24,890
and you have to know a lot about

959
00:41:21,609 --> 00:41:27,049
hardware internal workings of specific

960
00:41:24,890 --> 00:41:29,170
hardware's for reverse engineering GPU

961
00:41:27,049 --> 00:41:32,299
you have to know after know a lot about

962
00:41:29,170 --> 00:41:34,910
OpenGL and Vulcan and all these drivers

963
00:41:32,299 --> 00:41:37,549
how those were always work to understand

964
00:41:34,910 --> 00:41:39,890
the binary and try to disassemble and

965
00:41:37,549 --> 00:41:41,809
understand how this works and trying to

966
00:41:39,890 --> 00:41:44,859
develop this open open-source driver and

967
00:41:41,809 --> 00:41:47,330
integrate this into the kernel framework

968
00:41:44,859 --> 00:41:49,910
alright a question from the front

969
00:41:47,330 --> 00:41:52,759
think I yes thank you for the talk

970
00:41:49,910 --> 00:41:55,100
you've shown in the beginning that the

971
00:41:52,760 --> 00:41:57,350
actual problem is not that much of a

972
00:41:55,100 --> 00:42:00,319
technical problem but it's more like a

973
00:41:57,350 --> 00:42:03,650
political problem that they're a couple

974
00:42:00,320 --> 00:42:06,940
of companies most of them in China that

975
00:42:03,650 --> 00:42:12,230
have actually a monopoly or illegal only

976
00:42:06,940 --> 00:42:15,140
only gallipoli of the technology so my

977
00:42:12,230 --> 00:42:17,300
question is what must happen from a

978
00:42:15,140 --> 00:42:20,210
political point of view to solve this

979
00:42:17,300 --> 00:42:22,040
issue oh dear

980
00:42:20,210 --> 00:42:24,200
different mobility point of view it's

981
00:42:22,040 --> 00:42:26,270
very very complicated because if you

982
00:42:24,200 --> 00:42:27,649
start to rule in two companies and try

983
00:42:26,270 --> 00:42:30,140
to tell them how they're supposed to

984
00:42:27,650 --> 00:42:33,830
work it gets very very messy very

985
00:42:30,140 --> 00:42:35,299
quickly from regulation political point

986
00:42:33,830 --> 00:42:38,440
of view I don't actually know how to

987
00:42:35,300 --> 00:42:43,640
solve this problem I think one of the

988
00:42:38,440 --> 00:42:46,520
what politics could do is to much more

989
00:42:43,640 --> 00:42:50,060
support research efforts for developing

990
00:42:46,520 --> 00:42:52,970
these things at universities and in a

991
00:42:50,060 --> 00:42:55,279
free manner to support free software

992
00:42:52,970 --> 00:42:57,890
communities to develop all these things

993
00:42:55,280 --> 00:42:59,840
let's say for example the RISC 5 CPU

994
00:42:57,890 --> 00:43:03,200
core is an awesome platform for doing

995
00:42:59,840 --> 00:43:05,270
that and for integrating a GPU of free

996
00:43:03,200 --> 00:43:06,830
GPU implementation into that and for

997
00:43:05,270 --> 00:43:07,940
integrating all the other peripherals

998
00:43:06,830 --> 00:43:11,090
that are needed for those embedded

999
00:43:07,940 --> 00:43:13,040
devices this would help a lot and the

1000
00:43:11,090 --> 00:43:14,390
other interesting part that politics

1001
00:43:13,040 --> 00:43:16,520
probably could also do and this is

1002
00:43:14,390 --> 00:43:20,029
something that may be immense to what

1003
00:43:16,520 --> 00:43:22,220
Paul said is to make it easier for for

1004
00:43:20,030 --> 00:43:25,610
communities and also universities and in

1005
00:43:22,220 --> 00:43:28,669
general the the ecosystem let's say to

1006
00:43:25,610 --> 00:43:30,830
develop free radio protocols and access

1007
00:43:28,670 --> 00:43:32,360
to to radios because those bands that

1008
00:43:30,830 --> 00:43:35,060
are used for that are highly regulated

1009
00:43:32,360 --> 00:43:38,060
so it's very complicated to develop

1010
00:43:35,060 --> 00:43:39,950
something in these bands to develop a

1011
00:43:38,060 --> 00:43:41,690
free implementation of a modem for

1012
00:43:39,950 --> 00:43:44,240
example or some alternative to a

1013
00:43:41,690 --> 00:43:46,460
cellular modem or build a network which

1014
00:43:44,240 --> 00:43:48,950
is alternative to the commercial

1015
00:43:46,460 --> 00:43:51,080
networks this would be very good thing

1016
00:43:48,950 --> 00:43:53,870
that politics could do to deregulate

1017
00:43:51,080 --> 00:43:55,098
some things an area where we can freely

1018
00:43:53,870 --> 00:44:01,538
live and hack

1019
00:43:55,099 --> 00:44:01,539
work alright do we have another question

1020
00:44:01,869 --> 00:44:06,549
or do you want to use this last minute

1021
00:44:04,369 --> 00:44:12,019
to accept a call on your phone

1022
00:44:06,549 --> 00:44:14,779
we could probably oh now it's off I

1023
00:44:12,019 --> 00:44:17,089
don't know why it works perfectly well

1024
00:44:14,779 --> 00:44:19,609
now we've benchmarking to boot up time

1025
00:44:17,089 --> 00:44:21,859
under stress yeah but we can't do this

1026
00:44:19,609 --> 00:44:25,940
later on in the chaos the West Village

1027
00:44:21,859 --> 00:44:27,440
if you want you it's pretty hot so power

1028
00:44:25,940 --> 00:44:29,089
management is still an area we have to

1029
00:44:27,440 --> 00:44:31,210
work on all right

1030
00:44:29,089 --> 00:44:43,889
then please thank our speaker

1031
00:44:31,210 --> 00:44:43,889
[Applause]

1032
00:44:50,240 --> 00:44:54,839
[Music]

1033
00:44:56,069 --> 00:44:58,130
you

