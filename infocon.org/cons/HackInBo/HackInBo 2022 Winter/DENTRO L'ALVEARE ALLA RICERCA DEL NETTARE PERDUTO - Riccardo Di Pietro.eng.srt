1
00:00:11,580 --> 00:00:14,880
So I'm very happy to invite

2
00:00:14,880 --> 00:00:18,779
an old acquaintance on stage and

3
00:00:18,779 --> 00:00:21,180
we also had him in an event

4
00:00:21,180 --> 00:00:22,859
organized by a metro holographics

5
00:00:22,859 --> 00:00:26,820
so a big round of applause for Riccardo

6
00:00:26,820 --> 00:00:28,920
Di Pietro

7
00:00:28,920 --> 00:00:31,939
what is Riccardo

8
00:00:34,579 --> 00:00:37,760
the tolc is called

9
00:00:37,760 --> 00:00:39,719
[Music]

10
00:00:39,719 --> 00:00:42,239
inside the beehive looking for

11
00:00:42,239 --> 00:00:44,520
nectar  lost I'm sure

12
00:00:44,520 --> 00:00:49,039
you've all heard of and

13
00:00:49,039 --> 00:00:52,399
Russian-style Hair ransomware

14
00:00:52,399 --> 00:00:55,640
definitely red thread at least

15
00:00:55,640 --> 00:00:58,500
the interesting thing that a few days

16
00:00:58,500 --> 00:01:01,140
ago Riccardo published on github a

17
00:01:01,140 --> 00:01:03,680
tool that many people are

18
00:01:03,680 --> 00:01:07,680
using to recover data that

19
00:01:07,680 --> 00:01:11,400
has been filtered with randson

20
00:01:11,400 --> 00:01:14,820
Square E  so if haive it's probably the hive

21
00:01:14,820 --> 00:01:17,939
but it's Riccardo who

22
00:01:17,939 --> 00:01:19,100
interprets

23
00:01:19,100 --> 00:01:22,979
the super supportive and cooperative mode

24
00:01:22,979 --> 00:01:24,799
of bees

25
00:01:24,799 --> 00:01:26,939
we'll talk about bees

26
00:01:26,939 --> 00:01:28,400
Thanks thanks to you

27
00:01:28,400 --> 00:01:33,040
[Applause]

28
00:01:33,119 --> 00:01:34,400
Wow

29
00:01:34,400 --> 00:01:37,079
So guys good morning everyone I

30
00:01:37,079 --> 00:01:40,020
'm Riccardo Di Pietro and I conducted

31
00:01:40,020 --> 00:01:42,299
a study on Ive Now  I will tell you about

32
00:01:42,299 --> 00:01:44,820
this fairy tale No because we talk about

33
00:01:44,820 --> 00:01:48,600
putting that our final result and

34
00:01:48,600 --> 00:01:51,299
we will talk about  beehives we will also talk about

35
00:01:51,299 --> 00:01:55,140
bees In every sense bees Epi hai

36
00:01:55,140 --> 00:01:58,140
Oh well I'm 37 years old I have also made

37
00:01:58,140 --> 00:02:00,600
disasters since I was a few years old on my

38
00:02:00,600 --> 00:02:02,759
father's PC Oh well however I have a past

39
00:02:02,759 --> 00:02:06,659
experience as a pentester and I am in

40
00:02:06,659 --> 00:02:08,880
love with malore analysis must

41
00:02:08,880 --> 00:02:10,860
Aversa Engineering

42
00:02:10,860 --> 00:02:13,319
So very good  introduction then

43
00:02:13,319 --> 00:02:16,459
we will go straight to the point on the aiv group

44
00:02:16,459 --> 00:02:20,099
we will also see the analysis that I will try to

45
00:02:20,099 --> 00:02:22,920
make it as light as possible and

46
00:02:22,920 --> 00:02:25,800
above all We will see Then in the end the

47
00:02:25,800 --> 00:02:27,379
results of this study

48
00:02:27,379 --> 00:02:30,840
nowadays we always find ourselves faced with

49
00:02:30,840 --> 00:02:33,560
news of various peels

50
00:02:33,560 --> 00:02:36,959
we have difficulty even counting them No

51
00:02:36,959 --> 00:02:39,780
for  how many companies are

52
00:02:39,780 --> 00:02:42,000
compromised all over the world ransomware

53
00:02:42,000 --> 00:02:44,819
encrypted disasters lost jobs people who

54
00:02:44,819 --> 00:02:47,940
obviously suffer and suffer a lot and

55
00:02:47,940 --> 00:02:50,760
this is the moment that doesn't touch me the

56
00:02:50,760 --> 00:02:52,500
most because if I did this

57
00:02:52,500 --> 00:02:54,780
job I did it exclusively because

58
00:02:54,780 --> 00:02:56,400
there must be a  human component in

59
00:02:56,400 --> 00:02:58,920
everything that

60
00:02:58,920 --> 00:03:02,040
happens Reverse Engineering allows you not

61
00:03:02,040 --> 00:03:04,980
only to understand how they are  or

62
00:03:04,980 --> 00:03:07,980
information codes have been written but also

63
00:03:07,980 --> 00:03:09,720
who wrote them So

64
00:03:09,720 --> 00:03:12,659
also from information on any vulnerabilities that

65
00:03:12,659 --> 00:03:15,300
have been inserted in the code in this

66
00:03:15,300 --> 00:03:18,180
work I will present you precisely the

67
00:03:18,180 --> 00:03:19,920
vulnerabilities that I found

68
00:03:19,920 --> 00:03:25,159
within this malware and a rocket whereve and

69
00:03:25,159 --> 00:03:28,980
I will explain to you  what happened

70
00:03:28,980 --> 00:03:31,379
and there have already been other works in the

71
00:03:31,379 --> 00:03:34,700
past done by Korean teams on

72
00:03:34,700 --> 00:03:37,560
2019 ransomware like Lucifer

73
00:03:37,560 --> 00:03:41,220
GameClub that you know No they made a

74
00:03:41,220 --> 00:03:44,360
big mess so it is important to

75
00:03:44,360 --> 00:03:48,019
understand what

76
00:03:48,019 --> 00:03:51,120
the table you see there and Reverse in

77
00:03:51,120 --> 00:03:52,379
general are talking about  it is the result of the Reverse

78
00:03:52,379 --> 00:03:55,200
Engineering of this Apple and unfortunately

79
00:03:55,200 --> 00:03:57,440
only in one of those cases

80
00:03:57,440 --> 00:03:59,580
the algorithm used by the attacker

81
00:03:59,580 --> 00:04:03,379
was vulnerable in the case of Lucifer

82
00:04:04,580 --> 00:04:06,920
the origins of Hive

83
00:04:06,920 --> 00:04:09,900
where we have to find them we find them

84
00:04:09,900 --> 00:04:12,180
in the disintegration of the

85
00:04:12,180 --> 00:04:14,760
group of accounts accounts is a

86
00:04:14,760 --> 00:04:17,959
criminal group was  a Russian crime group

87
00:04:17,959 --> 00:04:22,500
with a Russian pattern coming from ryuk

88
00:04:22,500 --> 00:04:24,720
another group that made itself known if

89
00:04:24,720 --> 00:04:27,180
done  comply with the disintegration

90
00:04:27,180 --> 00:04:29,460
of the group of accounts Practically

91
00:04:29,460 --> 00:04:30,860


92
00:04:30,860 --> 00:04:34,580
many small terrorist cells have been created

93
00:04:34,580 --> 00:04:36,979
substantially

94
00:04:36,979 --> 00:04:41,060
one of these is live he

95
00:04:42,680 --> 00:04:46,979
is a fresh young dynamic actor he

96
00:04:46,979 --> 00:04:49,380
also makes mistakes for this

97
00:04:49,380 --> 00:04:52,680
but has great potential because he has a

98
00:04:52,680 --> 00:04:53,660


99
00:04:53,660 --> 00:04:56,479
lot is in a phase of rapid growth

100
00:04:56,479 --> 00:04:59,720
such as  many

101
00:04:59,720 --> 00:05:01,460
affiliates

102
00:05:01,460 --> 00:05:05,460
of other malware campaigns Hair

103
00:05:05,460 --> 00:05:08,520
has the Double stortion model and

104
00:05:08,520 --> 00:05:11,419
a russ solution we will

105
00:05:11,419 --> 00:05:14,820
basically see that there is a team

106
00:05:14,820 --> 00:05:17,960
of developers and then

107
00:05:18,680 --> 00:05:22,440
we practically talk about affiliates that

108
00:05:22,440 --> 00:05:25,500
is, there is someone who advertises on the forums

109
00:05:25,500 --> 00:05:27,560
and say buy the  our product

110
00:05:27,560 --> 00:05:29,960
is our product

111
00:05:29,960 --> 00:05:34,199
is the rocket Look at ransower as a Service

112
00:05:34,199 --> 00:05:36,900
then obviously you will also see some

113
00:05:36,900 --> 00:05:39,720
code development which is very fast

114
00:05:39,720 --> 00:05:43,620
and to switch to Ras This is an example

115
00:05:43,620 --> 00:05:46,259
of how announcements are made there is a

116
00:05:46,259 --> 00:05:48,419
guy who writes I have  a rocket a wer

117
00:05:48,419 --> 00:05:51,720
who wants to do damage with me Ok they raise their

118
00:05:51,720 --> 00:05:53,900
hand Then the one who has more credentials

119
00:05:53,900 --> 00:05:56,280
who maybe has already led others  and

120
00:05:56,280 --> 00:05:58,800
campaigns that he is therefore known to be

121
00:05:58,800 --> 00:06:00,660
a reliable type and therefore not of the

122
00:06:00,660 --> 00:06:03,120
police not of the government therefore

123
00:06:03,120 --> 00:06:05,699
they give him this rocket now he is

124
00:06:05,699 --> 00:06:07,820
starting to cause disasters

125
00:06:07,820 --> 00:06:09,380
introduced

126
00:06:09,380 --> 00:06:13,320
the Double stortion and as a model is the

127
00:06:13,320 --> 00:06:17,240
triplestore That is, in addition to

128
00:06:17,240 --> 00:06:20,280
encrypting the file Indeed and filtering first  you

129
00:06:20,280 --> 00:06:24,620
will do it later I convince you to be a victim by

130
00:06:24,620 --> 00:06:28,020
looking for little secrets that you have

131
00:06:28,020 --> 00:06:29,880
in your data that I

132
00:06:29,880 --> 00:06:31,500
filtered you and maybe I tell the person

133
00:06:31,500 --> 00:06:32,940
that they should never become

134
00:06:32,940 --> 00:06:35,759
aware of those data governments that I

135
00:06:35,759 --> 00:06:36,560
know

136
00:06:36,560 --> 00:06:38,120
competitors

137
00:06:38,120 --> 00:06:42,060
and so on the Kill  Chain is very

138
00:06:42,060 --> 00:06:45,000
simple and more or less similar to all of

139
00:06:45,000 --> 00:06:46,460
the actors

140
00:06:46,460 --> 00:06:51,780
let's say the vulnerabilities start i.e. the

141
00:06:51,780 --> 00:06:53,580
vulnerability is the starting point more

142
00:06:53,580 --> 00:06:56,960
often than not I don't know remote desktops

143
00:06:56,960 --> 00:07:00,120
left so unguarded without

144
00:07:00,120 --> 00:07:03,840
tufactor authentication or mfa and then

145
00:07:03,840 --> 00:07:06,380
on No see there  is the first Esc

146
00:07:06,380 --> 00:07:10,199
Then there are the lateral movements there is the

147
00:07:10,199 --> 00:07:12,180
defenseevation and then there is the very famous

148
00:07:12,180 --> 00:07:15,240
e filtration because filtration does

149
00:07:15,240 --> 00:07:17,240
n't exist  never done it

150
00:07:17,240 --> 00:07:20,220
is unlikely that it will be done by the

151
00:07:20,220 --> 00:07:22,580
executable itself because it is also difficult to

152
00:07:22,580 --> 00:07:24,240
organize it from a functional point of view,

153
00:07:24,240 --> 00:07:27,120
stuff like this the guys E

154
00:07:27,120 --> 00:07:29,660
filter with this little program to the clone

155
00:07:29,660 --> 00:07:33,960
and then encrypt using various techniques

156
00:07:33,960 --> 00:07:36,960
Maybe copy the malware in the controller

157
00:07:36,960 --> 00:07:40,020
and then sbrattalo on  all the PCs on the

158
00:07:40,020 --> 00:07:42,000
network

159
00:07:42,000 --> 00:07:46,500
Ok when I encrypted myself what happens and

160
00:07:46,500 --> 00:07:48,479
there is a ransom request then there is

161
00:07:48,479 --> 00:07:50,220
this in this ransom request

162
00:07:50,220 --> 00:07:52,919
there is access to the chat there is a

163
00:07:52,919 --> 00:07:56,280
negotiation and then eventually if the

164
00:07:56,280 --> 00:07:57,840
situation is desperate  there is a

165
00:07:57,840 --> 00:08:01,380
ransom payment complete with

166
00:08:01,380 --> 00:08:04,560


167
00:08:04,560 --> 00:08:07,259


168
00:08:07,259 --> 00:08:09,300


169
00:08:09,300 --> 00:08:11,220


170
00:08:11,220 --> 00:08:14,400
a decryptor download  they put

171
00:08:14,400 --> 00:08:17,099
some pressure they already put some

172
00:08:17,099 --> 00:08:18,680
leverage

173
00:08:18,680 --> 00:08:21,180
this is what happens when you

174
00:08:21,180 --> 00:08:26,479
enter those in that chat

175
00:08:27,840 --> 00:08:31,379
it's simple there are three panels The one

176
00:08:31,379 --> 00:08:33,839
on the left and a panel that is dedicated

177
00:08:33,839 --> 00:08:36,958
to personalize the victim company

178
00:08:36,958 --> 00:08:39,479
and therefore it also wants to be

179
00:08:39,479 --> 00:08:40,860
extortion on a psychological level

180
00:08:40,860 --> 00:08:43,080
it also serves to say we know everything about you

181
00:08:43,080 --> 00:08:44,580
and often and willingly Unfortunately this is the case

182
00:08:44,580 --> 00:08:47,940
because either there are Insiders or they are very

183
00:08:47,940 --> 00:08:51,180
close to the victims in some way

184
00:08:51,180 --> 00:08:53,399
I'm not just saying  just like stolen credentials

185
00:08:53,399 --> 00:08:55,570


186
00:08:55,570 --> 00:08:56,940
[Music]

187
00:08:56,940 --> 00:08:59,700
then there is the chat in the center where

188
00:08:59,700 --> 00:09:02,040
the negotiation takes place and on the right side

189
00:09:02,040 --> 00:09:05,580
instead you can download the decryptor

190
00:09:05,580 --> 00:09:07,339
so

191
00:09:07,339 --> 00:09:10,620
this was an image licked by

192
00:09:10,620 --> 00:09:12,300
B

193
00:09:12,300 --> 00:09:16,500
E groups during one of their reports and

194
00:09:16,500 --> 00:09:18,660
thus that Cettino is created which  you have seen that

195
00:09:18,660 --> 00:09:20,940
there is a customization that even

196
00:09:20,940 --> 00:09:24,260
before the attack is carried out it

197
00:09:24,260 --> 00:09:27,600
is possible to create all the data for

198
00:09:27,600 --> 00:09:30,360
that company including the randson was

199
00:09:30,360 --> 00:09:32,279
created in this phase both

200
00:09:32,279 --> 00:09:35,040
the encryptor and the decryptor here

201
00:09:35,040 --> 00:09:38,060
the negotiation is very simple

202
00:09:38,060 --> 00:09:40,740
desperate Obviously  the tones are

203
00:09:40,740 --> 00:09:43,820
as desperate as you can imagine and

204
00:09:43,820 --> 00:09:46,320
can be conducted by the victim or

205
00:09:46,320 --> 00:09:48,959
by a negotiator hired by the

206
00:09:48,959 --> 00:09:51,779
victim but the result does not change  bia live

207
00:09:51,779 --> 00:09:55,100
does everything to cash in

208
00:09:55,140 --> 00:09:58,320
when you pay that little key there is unlocked for you

209
00:09:58,320 --> 00:10:01,019
download and download the Zip

210
00:10:01,019 --> 00:10:03,600
with the four files you see there which

211
00:10:03,600 --> 00:10:06,420
are persicsai Linux and the two versions

212
00:10:06,420 --> 00:10:10,320
of Windows 32 and 64 bit that are the subject

213
00:10:10,320 --> 00:10:12,899
of this study

214
00:10:12,899 --> 00:10:15,120
Oh vi  I was saying rapidly growing it

215
00:10:15,120 --> 00:10:17,300
means that the numbers are these

216
00:10:17,300 --> 00:10:22,279
November 2021 355 attacks November 2022

217
00:10:22,279 --> 00:10:26,220
1,300 attacks Gentlemen I would say that it is a

218
00:10:26,220 --> 00:10:29,580
big leap forward and we are talking about

219
00:10:29,580 --> 00:10:32,399
total victims those in blue and the part

220
00:10:32,399 --> 00:10:34,860
in orange are the victims of double

221
00:10:34,860 --> 00:10:38,779
extortion because they are not always  even if the

222
00:10:38,779 --> 00:10:42,899
ransom is always the same the txt

223
00:10:42,899 --> 00:10:45,060
of the ransom is always the same Not

224
00:10:45,060 --> 00:10:48,120
always Ive decides to do Double

225
00:10:48,120 --> 00:10:51,000
stortion cipher and that's it

226
00:10:51,000 --> 00:10:52,459
So

227
00:10:52,459 --> 00:10:56,220
these attacks lead him to third

228
00:10:56,220 --> 00:11:01,620
place in 2022 as the most active Ras group

229
00:11:01,620 --> 00:11:04,920
in the world with a revenue of

230
00:11:04,920 --> 00:11:07,200
approx.  100 million dollars in a year

231
00:11:07,200 --> 00:11:10,800
and a half and 34 countries affected is an

232
00:11:10,800 --> 00:11:14,279
increase of about 360 percent

233
00:11:14,279 --> 00:11:17,220
this is the trend since

234
00:11:17,220 --> 00:11:19,200
haive went into business there are pics  who

235
00:11:19,200 --> 00:11:22,440
as you can see July 2021 May 2022

236
00:11:22,440 --> 00:11:25,440
September 2022 which coincide with the

237
00:11:25,440 --> 00:11:27,720
release of increasingly strong new products

238
00:11:27,720 --> 00:11:30,899
perhaps as in the case of September

239
00:11:30,899 --> 00:11:34,140
2022 when there was also the

240
00:11:34,140 --> 00:11:36,440
Fix of the methods that we are now going to

241
00:11:36,440 --> 00:11:39,360
explain to you in short, the distribution

242
00:11:39,360 --> 00:11:41,820
seems clear to me, it affects everything  the world with the

243
00:11:41,820 --> 00:11:43,440
obvious exclusion of the pro-Russian countries

244
00:11:43,440 --> 00:11:45,120


245
00:11:45,120 --> 00:11:49,620
and America and the large one affected with

246
00:11:49,620 --> 00:11:52,860
almost 60 percent of the attacks

247
00:11:52,860 --> 00:11:55,740
but Italy was no less

248
00:11:55,740 --> 00:11:59,339
the main victims are the company in

249
00:11:59,339 --> 00:12:02,120
the manufacturing trade services sector

250
00:12:02,120 --> 00:12:04,920
and unfortunately there is a  13%

251
00:12:04,920 --> 00:12:08,540
which is very alarming because as

252
00:12:08,540 --> 00:12:10,640
noted by some

253
00:12:10,640 --> 00:12:16,560
neighbors In short, insider of the Ive group

254
00:12:16,560 --> 00:12:18,620
affiliated to the Ive group, the

255
00:12:18,620 --> 00:12:21,360
hospital health sector is also

256
00:12:21,360 --> 00:12:23,579
heavily affected because it is the one most inclined

257
00:12:23,579 --> 00:12:25,079
to pay

258
00:12:25,079 --> 00:12:28,620
Oh now let's get a little more to the heart

259
00:12:28,620 --> 00:12:29,839
because

260
00:12:29,839 --> 00:12:33,720
babook babook is another  Run super dunno

261
00:12:33,720 --> 00:12:36,300
sometime sometime ago in

262
00:12:36,300 --> 00:12:39,319
September last year

263
00:12:39,420 --> 00:12:41,880
for whatever for whatever reason it is

264
00:12:41,880 --> 00:12:44,480
this this

265
00:12:44,480 --> 00:12:47,220
source code has been released the source code of

266
00:12:47,220 --> 00:12:49,139
babuk

267
00:12:49,139 --> 00:12:51,180
and

268
00:12:51,180 --> 00:12:54,060
the relationships with Ive are many

269
00:12:54,060 --> 00:12:56,040
I here have limited myself to bringing a few

270
00:12:56,040 --> 00:12:58,980
but you see that the order on the

271
00:12:58,980 --> 00:13:01,560
left side you find the disassembled compile version

272
00:13:01,560 --> 00:13:03,800
of aive

273
00:13:03,800 --> 00:13:06,540
on the right side that the

274
00:13:06,540 --> 00:13:09,000
source code of babook the order of the

275
00:13:09,000 --> 00:13:12,200
EPI calls

276
00:13:12,200 --> 00:13:15,300
is the same and also the context is the

277
00:13:15,300 --> 00:13:17,540
same This for example the code that

278
00:13:17,540 --> 00:13:20,760
goes to ravage the various volumes present in the

279
00:13:20,760 --> 00:13:23,459
system and then decide which ones to encrypt

280
00:13:23,459 --> 00:13:26,519
from which side to

281
00:13:26,519 --> 00:13:30,300
start this is also the Maine of the  encryption

282
00:13:30,300 --> 00:13:32,579
And well in short it seems to me that there are

283
00:13:32,579 --> 00:13:35,760
enough reports on how abook and

284
00:13:35,760 --> 00:13:37,440
how hype

285
00:13:37,440 --> 00:13:40,680
I have the versions of the runware as I told you there

286
00:13:40,680 --> 00:13:43,740
have been a lot since

287
00:13:43,740 --> 00:13:47,339
it invented in action

288
00:13:47,339 --> 00:13:51,540
from June 2021 until September 2022 there

289
00:13:51,540 --> 00:13:54,860
have been five Major Releases and aive let's

290
00:13:54,860 --> 00:13:57,660
read  the versions vulnerable to my

291
00:13:57,660 --> 00:14:02,399
study are 5 5 1 5 2

292
00:14:02,399 --> 00:14:06,120
It must be said that even kisa that we say

293
00:14:06,120 --> 00:14:08,279
to the Korean Cyber

294
00:14:08,279 --> 00:14:11,399
Security Agency has released  hiatus a decryptor that

295
00:14:11,399 --> 00:14:14,339
takes care of decrypting the files from

296
00:14:14,339 --> 00:14:16,500
version one to version 4 but with Air

297
00:14:16,500 --> 00:14:19,380
v5 everything changes and they say it too

298
00:14:19,380 --> 00:14:22,740
in the chat they say Look guys Do

299
00:14:22,740 --> 00:14:25,380
n't bother too much looking in criptor

300
00:14:25,380 --> 00:14:28,079
de criptor that work because with

301
00:14:28,079 --> 00:14:29,880
Air v5 we have  changed everything in fact

302
00:14:29,880 --> 00:14:33,420
they changed everything another code

303
00:14:33,420 --> 00:14:34,920
another programming language

304
00:14:34,920 --> 00:14:37,980
another encryption algorithm a new

305
00:14:37,980 --> 00:14:40,980
list of processes taken from babook as

306
00:14:40,980 --> 00:14:44,160
in the case before and a new

307
00:14:44,160 --> 00:14:47,279
file encryption key let's see the

308
00:14:47,279 --> 00:14:50,220
basic operations of aive there are three

309
00:14:50,220 --> 00:14:52,440
I have to create a key an encrypted key

310
00:14:52,440 --> 00:14:54,000


311
00:14:54,000 --> 00:14:56,459
with which to encrypt the files

312
00:14:56,459 --> 00:14:58,380
then I have to protect it in some way

313
00:14:58,380 --> 00:15:01,680
no And then I will encrypt the

314
00:15:01,680 --> 00:15:04,199
encryption key and then there is the encryption of the

315
00:15:04,199 --> 00:15:06,060
files

316
00:15:06,060 --> 00:15:08,519
let's start from this this is the version it

317
00:15:08,519 --> 00:15:10,920
is the most scope  Vulnerable of all

318
00:15:10,920 --> 00:15:13,920
because

319
00:15:13,980 --> 00:15:16,800
Because basically they are 10

320
00:15:16,800 --> 00:15:19,560
million Bytes all predictable because

321
00:15:19,560 --> 00:15:22,620
the p rng i pseudo Random number

322
00:15:22,620 --> 00:15:25,380
Generator is absolute  highly predictable

323
00:15:25,380 --> 00:15:26,480
let's see how

324
00:15:26,480 --> 00:15:29,699
to explain it to you and this I assure you it

325
00:15:29,699 --> 00:15:32,120
was a huge concussion so I

326
00:15:32,120 --> 00:15:35,579
hope I succeeded in the analogy operation

327
00:15:35,579 --> 00:15:38,120


328
00:15:38,339 --> 00:15:41,220
let's take a stopwatch no Do you

329
00:15:41,220 --> 00:15:42,720
know a stopwatch that

330
00:15:42,720 --> 00:15:45,000
point the 5 he couldn't mount 0 he could

331
00:15:45,000 --> 00:15:47,760
bet 40 35 it doesn't matter where

332
00:15:47,760 --> 00:15:49,220
leads where it starts from

333
00:15:49,220 --> 00:15:52,380
The important thing is that you

334
00:15:52,380 --> 00:15:54,959
continuously write the value of that number

335
00:15:54,959 --> 00:15:58,880
that is pointed to by the hand

336
00:15:59,100 --> 00:16:01,740
the hand moves once a

337
00:16:01,740 --> 00:16:05,060
second So what happens

338
00:16:06,240 --> 00:16:07,920
Let's start our stopwatch I

339
00:16:07,920 --> 00:16:11,459
could be very fast and write the

340
00:16:11,459 --> 00:16:13,440
number three times in one second  value that

341
00:16:13,440 --> 00:16:15,779
was pointing the hand twice three

342
00:16:15,779 --> 00:16:18,800
times therefore 5 6 6 7 7

343
00:16:18,800 --> 00:16:23,279
8 Or I could be slow

344
00:16:23,279 --> 00:16:26,459
missing moments So 5 Then maybe

345
00:16:26,459 --> 00:16:29,339
someone that is, I have to go and see the

346
00:16:29,339 --> 00:16:32,399
stopwatch I'm slow 7 9 I lose some

347
00:16:32,399 --> 00:16:36,480
pieces Oh well it happens Or I could also

348
00:16:36,480 --> 00:16:38,940
be fast but for whatever reason

349
00:16:38,940 --> 00:16:41,459


350
00:16:41,459 --> 00:16:44,639
I get distracted and don't write a certain

351
00:16:44,639 --> 00:16:46,560
value

352
00:16:46,560 --> 00:16:49,139
ok Or I can also  going

353
00:16:49,139 --> 00:16:50,820
pretty regular i write one value per

354
00:16:50,820 --> 00:16:56,579
second 5 6 7 8 9 so what

355
00:16:56,579 --> 00:16:59,220
happens in the end after i write

356
00:16:59,220 --> 00:17:02,399
my list of 10 million values ​​i

357
00:17:02,399 --> 00:17:04,500
will have some stuff like this Obviously i don't get

358
00:17:04,500 --> 00:17:06,059
you back to 10 million values ​​here i

359
00:17:06,059 --> 00:17:07,579
don't  report a small part

360
00:17:07,579 --> 00:17:11,579
5 and the initial value and you see it in

361
00:17:11,579 --> 00:17:15,780
red this and the other 5 and the

362
00:17:15,780 --> 00:17:17,579
next cycle of the chronometer because the

363
00:17:17,579 --> 00:17:19,740
chronometer However it moves So

364
00:17:19,740 --> 00:17:22,140
Guys you see you

365
00:17:22,140 --> 00:17:24,359
see some similarities no possible values

366
00:17:24,359 --> 00:17:27,419
How many are there 60 But if I take 10

367
00:17:27,419 --> 00:17:28,679
million  of values ​​the values ​​will

368
00:17:28,679 --> 00:17:31,160
inevitably repeat themselves so

369
00:17:31,160 --> 00:17:34,620
this is to tell you

370
00:17:34,620 --> 00:17:36,360
even with small differences Obviously

371
00:17:36,360 --> 00:17:40,620
this is to give you the value

372
00:17:40,620 --> 00:17:46,760
I have in mind i.e. these two bees

373
00:17:47,220 --> 00:17:50,100
are the performance counter ones and the

374
00:17:50,100 --> 00:17:52,559
performance frequency ones now let's go a

375
00:17:52,559 --> 00:17:54,360
little more There is a little  more in the

376
00:17:54,360 --> 00:17:57,900
technical detail No, but they are two feet

377
00:17:57,900 --> 00:18:02,640
of Windows and you need

378
00:18:02,880 --> 00:18:05,460
those performance counters to read the

379
00:18:05,460 --> 00:18:08,520
chronometer you saw earlier and

380
00:18:08,520 --> 00:18:11,460
those  performance frequency instead is the

381
00:18:11,460 --> 00:18:13,919
frequency with which the hands

382
00:18:13,919 --> 00:18:16,880
move the hand moves so

383
00:18:16,880 --> 00:18:20,460
in this case it marks the seconds because it has

384
00:18:20,460 --> 00:18:22,380
a certain frequency

385
00:18:22,380 --> 00:18:24,480
But if it goes faster it could also

386
00:18:24,480 --> 00:18:27,440
mark something else

387
00:18:27,960 --> 00:18:32,280
let's see then so the algorithm is

388
00:18:32,280 --> 00:18:34,020
simple the algorithm for  creating that

389
00:18:34,020 --> 00:18:37,620
10 million key used to encrypt

390
00:18:37,620 --> 00:18:41,580
files is the byte, i.e. each Byte is given

391
00:18:41,580 --> 00:18:44,400
by the initial instant therefore tac I take

392
00:18:44,400 --> 00:18:48,240
the first instant then I take another 10

393
00:18:48,240 --> 00:18:51,780
million following and I have all the Bytes

394
00:18:51,780 --> 00:18:53,580
of my key their difference

395
00:18:53,580 --> 00:18:55,740
between  'subsequent instant and instants and

396
00:18:55,740 --> 00:19:00,200
initial instant in absolute value obviously and

397
00:19:00,200 --> 00:19:03,419
the encryption key

398
00:19:03,419 --> 00:19:07,860
It seems simple to you No no it's not at

399
00:19:07,860 --> 00:19:10,260
all but no because I almost

400
00:19:10,260 --> 00:19:13,700
gave up my life to see this stuff

401
00:19:13,740 --> 00:19:16,860
I'm crazy Yes but it was worth it

402
00:19:16,860 --> 00:19:19,440
why

403
00:19:19,440 --> 00:19:24,480
Because in my case yours you count the

404
00:19:24,480 --> 00:19:26,580
seconds

405
00:19:26,580 --> 00:19:29,640
But in the case of the CPU the frequency is

406
00:19:29,640 --> 00:19:33,900
higher and it counts in nanoseconds guys

407
00:19:33,900 --> 00:19:36,960
and the CPU is a stuff made by us made

408
00:19:36,960 --> 00:19:38,880
by the human being  and it is in any case

409
00:19:38,880 --> 00:19:41,700
subject to many errors

410
00:19:41,700 --> 00:19:44,220
there may be differences in the data

411
00:19:44,220 --> 00:19:46,980
there may be differences in the processes

412
00:19:46,980 --> 00:19:49,799
there may be problems with currents the

413
00:19:49,799 --> 00:19:51,740
same scheduler could

414
00:19:51,740 --> 00:19:55,020
decide unthinkable things that cannot be

415
00:19:55,020 --> 00:19:58,320
reproduced therefore that speech

416
00:19:58,320 --> 00:20:01,740
I made to you before taking the numbers

417
00:20:01,740 --> 00:20:03,660
and writing them down and being quick  being

418
00:20:03,660 --> 00:20:06,240
slow means Keep in mind that

419
00:20:06,240 --> 00:20:07,860
even if you are no longer performing

420
00:20:07,860 --> 00:20:10,380
there could be jumps these

421
00:20:10,380 --> 00:20:12,419
jumps are precisely due to

422
00:20:12,419 --> 00:20:15,360
the CPU operating frequency which is

423
00:20:15,360 --> 00:20:16,679
different from the frequency with which

424
00:20:16,679 --> 00:20:18,780
the hands and clocks turn

425
00:20:18,780 --> 00:20:21,600
But the CPU operating frequency

426
00:20:21,600 --> 00:20:23,580
means how fast I look at

427
00:20:23,580 --> 00:20:25,799
mine  stopwatch and so how

428
00:20:25,799 --> 00:20:27,179
fast I am able to write that

429
00:20:27,179 --> 00:20:29,360
value

430
00:20:29,460 --> 00:20:32,280
This is a real example of a key

431
00:20:32,280 --> 00:20:34,860
generated by hype it was taken during

432
00:20:34,860 --> 00:20:37,740
a debug I used the same colors

433
00:20:37,740 --> 00:20:40,740
on purpose to show you The analogy

434
00:20:40,740 --> 00:20:46,020
cc e 5 CC e5 It's not true to let you  see

435
00:20:46,020 --> 00:20:49,100
that there is an analogy in the cyclical nature

436
00:20:49,100 --> 00:20:52,740
of the sequences and you see that there  however, they are

437
00:20:52,740 --> 00:20:56,880
strange values ​​No that is, you see blue then

438
00:20:56,880 --> 00:21:00,720
jumps to a certain point after 88 at the

439
00:21:00,720 --> 00:21:03,240
top there is 50 but if I go to get the

440
00:21:03,240 --> 00:21:06,419
same sequence Blue after 88 there is e.c

441
00:21:06,419 --> 00:21:09,480
and that means C cheers no it is

442
00:21:09,480 --> 00:21:11,880
not that is not  health it's none of

443
00:21:11,880 --> 00:21:13,860
this it's simply that the CPU in

444
00:21:13,860 --> 00:21:17,280
that case and jumped it jumped it

445
00:21:17,280 --> 00:21:19,799
didn't read a byte that was passing

446
00:21:19,799 --> 00:21:22,380
at that moment on the stopwatch and

447
00:21:22,380 --> 00:21:24,000
said I don't care I read Byte

448
00:21:24,000 --> 00:21:25,380
I don't know what  'è For me they can

449
00:21:25,380 --> 00:21:27,000
also be onions

450
00:21:27,000 --> 00:21:30,299
but the important thing is to identify these

451
00:21:30,299 --> 00:21:33,539
these jumps because it is these jumps

452
00:21:33,539 --> 00:21:38,039
that then allow you to go on to

453
00:21:38,039 --> 00:21:40,980
talk about what we will do in a little while

454
00:21:40,980 --> 00:21:43,679
these jumps are due to the

455
00:21:43,679 --> 00:21:46,980
simultaneous processes in phase, that is, they are in progress

456
00:21:46,980 --> 00:21:48,919
encryption phase of the

457
00:21:48,919 --> 00:21:53,580
machine and the frequency of the CPU

458
00:21:53,580 --> 00:21:56,340
well This is a piece of code that I

459
00:21:56,340 --> 00:21:58,320
rewrote during one of my sleepless nights it

460
00:21:58,320 --> 00:22:00,200


461
00:22:00,200 --> 00:22:02,760
basically does the same things you do

462
00:22:02,760 --> 00:22:06,360
But reducing the code a lot there is a

463
00:22:06,360 --> 00:22:08,280
create seed which would be the instant  start

464
00:22:08,280 --> 00:22:10,260


465
00:22:10,260 --> 00:22:14,580
the stopwatch at zero time and then

466
00:22:14,580 --> 00:22:19,860
there is a create Byte this method here

467
00:22:19,860 --> 00:22:21,659
which is done inside a

468
00:22:21,659 --> 00:22:24,600
hole 10 million times in reality it is a

469
00:22:24,600 --> 00:22:28,280
little more it is at 0:00

470
00:22:28,280 --> 00:22:31,620
in hexadecimal so it is 10  million and

471
00:22:31,620 --> 00:22:35,120
400 thousand and broken

472
00:22:35,960 --> 00:22:37,700
Ok

473
00:22:37,700 --> 00:22:40,440
Actually

474
00:22:40,440 --> 00:22:43,799
I'm almost sure that live the group

475
00:22:43,799 --> 00:22:47,400
of developers that was there Handsome

476
00:22:47,400 --> 00:22:51,059
pissed ass writing this code he

477
00:22:51,059 --> 00:22:54,659
knew very well that the code didn't

478
00:22:54,659 --> 00:22:58,559
work because Why was this

479
00:22:58,559 --> 00:23:03,059
pseudo code generated by ghidra going

480
00:23:03,059 --> 00:23:06,059
after I worked on it  a little bit and you see

481
00:23:06,059 --> 00:23:08,460
that there are some Jumps that are not

482
00:23:08,460 --> 00:23:12,900
redundant conditional Jumps like if1 = 2 and

483
00:23:12,900 --> 00:23:14,760
I have nothing to do with that Branch That is,

484
00:23:14,760 --> 00:23:17,900
it is never verified as a

485
00:23:17,900 --> 00:23:21,539
situation no as a condition however the

486
00:23:21,539 --> 00:23:24,480
CPU always evaluates it But something happens

487
00:23:24,480 --> 00:23:26,580
that then  I'll tell you something magical

488
00:23:26,580 --> 00:23:29,220
that I still don't understand if any of

489
00:23:29,220 --> 00:23:31,799
you know it Then come and tell me

490
00:23:31,799 --> 00:23:35,000
please I'll offer you a beer

491
00:23:35,419 --> 00:23:38,700
there is the abuse of Methods to do small

492
00:23:38,700 --> 00:23:40,980
operations how do you know the method Call

493
00:23:40,980 --> 00:23:43,080
another  memory area I have to skip they

494
00:23:43,080 --> 00:23:45,179
change the contexts and therefore I waste time

495
00:23:45,179 --> 00:23:47,580
and therefore introduce a

496
00:23:47,580 --> 00:23:51,059
delay element and also the scale factors the

497
00:23:51,059 --> 00:23:53,159
scale factors that are not

498
00:23:53,159 --> 00:23:55,980
very large numbers that do not enter the

499
00:23:55,980 --> 00:23:57,960
representation in the 32

500
00:23:57,960 --> 00:23:59,640
bit architecture must be split into  two

501
00:23:59,640 --> 00:24:03,620
registers No to have 64 bits of

502
00:24:03,620 --> 00:24:07,520
representation and this generates delays

503
00:24:07,520 --> 00:24:12,059
32 bit 64 bit generates differences different

504
00:24:12,059 --> 00:24:15,059
keys the same Ranch 32 bit generates a

505
00:24:15,059 --> 00:24:18,539
key a ranch totally another

506
00:24:18,539 --> 00:24:20,039
on the same machine with the same

507
00:24:20,039 --> 00:24:23,360
characteristic and same

508
00:24:24,380 --> 00:24:26,960
frequency the algorithm is fine  that I showed you

509
00:24:26,960 --> 00:24:29,880
that for you it is simple but for me it is not

510
00:24:29,880 --> 00:24:32,000
simple it

511
00:24:32,960 --> 00:24:35,840
generates in addition to the encryption key

512
00:24:35,840 --> 00:24:39,539
also the private key and the nonns which

513
00:24:39,539 --> 00:24:43,260
are these two elements Dunno let's see them

514
00:24:43,260 --> 00:24:46,320
Because they are important

515
00:24:46,320 --> 00:24:48,059
and to do this we must go to the

516
00:24:48,059 --> 00:24:51,320
second point the encryption  of the

517
00:24:51,320 --> 00:24:54,240
encryption key we have to protect it No

518
00:24:54,240 --> 00:24:56,460
because nobody wants me to

519
00:24:56,460 --> 00:24:58,080
restore the files without paying the

520
00:24:58,080 --> 00:24:59,900
ransom Ok

521
00:24:59,900 --> 00:25:05,100
I tell you this phase is a very hard phase

522
00:25:05,100 --> 00:25:08,700
to reverse this stuff here and then I

523
00:25:08,700 --> 00:25:10,140
will thank you

524
00:25:10,140 --> 00:25:12,740
the help of a great developer was also needed

525
00:25:12,740 --> 00:25:15,120
Reverse in engineering

526
00:25:15,120 --> 00:25:16,100
And

527
00:25:16,100 --> 00:25:20,100
because they are three algorithms Made among

528
00:25:20,100 --> 00:25:22,919
other things curve by a great

529
00:25:22,919 --> 00:25:25,320
Bernstein who  he did an

530
00:25:25,320 --> 00:25:30,240
absolutely magnificent job and they are curves

531
00:25:30,240 --> 00:25:33,720
Ciaccia 20 and chasing 20 which is a

532
00:25:33,720 --> 00:25:36,960
derivative of Ciaccia 20

533
00:25:36,960 --> 00:25:39,000
curves is a key exchange algorithm

534
00:25:39,000 --> 00:25:41,159
which is robust absolutely

535
00:25:41,159 --> 00:25:42,679
robust

536
00:25:42,679 --> 00:25:45,539
Ciaccia 20 is an encryption algorithm

537
00:25:45,539 --> 00:25:48,539
even with an

538
00:25:48,539 --> 00:25:51,740
authentication agent which is Poli  13 05

539
00:25:51,740 --> 00:25:54,179
absolutely robust there are no

540
00:25:54,179 --> 00:25:57,600
known attacks against this

541
00:25:57,600 --> 00:26:01,860
algorithm But all this power No

542
00:26:01,860 --> 00:26:03,440
this

543
00:26:03,440 --> 00:26:07,260
awesomeness of math working

544
00:26:07,260 --> 00:26:11,039
and pulverized by the use of

545
00:26:11,039 --> 00:26:16,020
cryptographically unsafe elements

546
00:26:16,020 --> 00:26:18,480
or was this another effort I

547
00:26:18,480 --> 00:26:20,580
just made it for you guys me  otherwise

548
00:26:20,580 --> 00:26:22,320
I already had it in mind but to show you

549
00:26:22,320 --> 00:26:25,320
that it is a

550
00:26:25,320 --> 00:26:28,559
disastrous algorithm that is heavy to pay But

551
00:26:28,559 --> 00:26:31,380
a  in the end disastrous Here it is here I

552
00:26:31,380 --> 00:26:34,200
create the private key

553
00:26:34,200 --> 00:26:36,720
and create it in blue which would be the value

554
00:26:36,720 --> 00:26:39,240
that I showed you first with the

555
00:26:39,240 --> 00:26:41,520
vulnerable bites then there is this whole part

556
00:26:41,520 --> 00:26:42,440
here

557
00:26:42,440 --> 00:26:46,760
curved Ciaccia 20 Hz

558
00:26:46,760 --> 00:26:50,700
which leads me to encrypt the key  10

559
00:26:50,700 --> 00:26:56,039
million Mega using the noms and flash

560
00:26:56,039 --> 00:26:57,960
of the shared key created

561
00:26:57,960 --> 00:26:59,779
from the private key I generated here

562
00:26:59,779 --> 00:27:05,900
I know Guys I've seen this thing

563
00:27:05,960 --> 00:27:08,880
10 times a day for the last six

564
00:27:08,880 --> 00:27:11,360
months so now I dream about it at night

565
00:27:11,360 --> 00:27:14,700
but I don't  it's so hard to learn

566
00:27:14,700 --> 00:27:17,039
then in the end

567
00:27:17,039 --> 00:27:19,799
This is how it works curves it's an

568
00:27:19,799 --> 00:27:21,500
elliptic curve trading algorithm

569
00:27:21,500 --> 00:27:23,820
it has

570
00:27:23,820 --> 00:27:26,159
nothing wrong with it

571
00:27:26,159 --> 00:27:29,700
and it works it's robust on the

572
00:27:29,700 --> 00:27:33,059
right side you find the decryptor

573
00:27:33,059 --> 00:27:35,220
and this is the magic stuff we

574
00:27:35,220 --> 00:27:36,779
need i.e. find  the

575
00:27:36,779 --> 00:27:39,539
private key of the aive affiliate who

576
00:27:39,539 --> 00:27:41,520
hit the company But when will we ever

577
00:27:41,520 --> 00:27:42,559
have stuff like that we'll have

578
00:27:42,559 --> 00:27:44,820
to go get them in Russia

579
00:27:44,820 --> 00:27:48,240
in Ukraine where I don't know where they are

580
00:27:48,240 --> 00:27:50,520
But we have this

581
00:27:50,520 --> 00:27:53,100
victim's private key which is generated with

582
00:27:53,100 --> 00:27:55,559
that vulnerable algorithm we use

583
00:27:55,559 --> 00:27:58,080
this as leverage to overthrow all

584
00:27:58,080 --> 00:28:01,100
that system from before

585
00:28:02,640 --> 00:28:04,279
or this what is it

586
00:28:04,279 --> 00:28:08,419
Of course another reference to babook

587
00:28:08,419 --> 00:28:12,360
babook used has been used extensively

588
00:28:12,360 --> 00:28:15,240
as code as shall we say

589
00:28:15,240 --> 00:28:17,299
working code repository

590
00:28:17,299 --> 00:28:20,400
you see that curv was also used here

591
00:28:20,400 --> 00:28:24,179
to go ahead in the

592
00:28:24,179 --> 00:28:25,500
encryption of the keys to

593
00:28:25,500 --> 00:28:27,299
create the attacker's private keys

594
00:28:27,299 --> 00:28:30,080


595
00:28:30,380 --> 00:28:33,360
or see that that beautiful

596
00:28:33,360 --> 00:28:38,299
colored circle I made the keys first the

597
00:28:38,299 --> 00:28:42,379
key exchange

598
00:28:43,279 --> 00:28:45,679
lashing of the

599
00:28:45,679 --> 00:28:48,720
shared key the  encryption is done

600
00:28:48,720 --> 00:28:50,940
twice you see there are two colored circles

601
00:28:50,940 --> 00:28:53,820
with these beautiful colored arrows I start

602
00:28:53,820 --> 00:28:55,919
from the encryption key which is

603
00:28:55,919 --> 00:29:00,059
vulnerable after two turns so two

604
00:29:00,059 --> 00:29:03,539
private keys two nonnes I

605
00:29:03,539 --> 00:29:08,279
arrive here what stream

606
00:29:08,279 --> 00:29:10,740
this makes the Key and what

607
00:29:10,740 --> 00:29:13,860
the victim finds when  is compromised

608
00:29:13,860 --> 00:29:17,400
after io performs the hack and

609
00:29:17,400 --> 00:29:20,880
throws the rum into the root  of the Drives

610
00:29:20,880 --> 00:29:23,159
present in the compromised system I find

611
00:29:23,159 --> 00:29:27,179
the file who a pair of files who

612
00:29:27,179 --> 00:29:31,200
good and we are at file

613
00:29:31,200 --> 00:29:33,980
encryption the file encryption is an encryption

614
00:29:33,980 --> 00:29:37,820
that is particular also in this case

615
00:29:37,820 --> 00:29:41,419
the attacker for fear of identifying

616
00:29:41,419 --> 00:29:43,580
for fear that

617
00:29:43,580 --> 00:29:46,740
a guy an animal  how me could

618
00:29:46,740 --> 00:29:51,240
understand that there was a relation of to

619
00:29:51,240 --> 00:29:52,580
decrypt the file

620
00:29:52,580 --> 00:29:55,559
it used an offset That is, in each Run

621
00:29:55,559 --> 00:29:57,419
Where in each sample that is executed

622
00:29:57,419 --> 00:30:00,919
in the various malware campaigns

623
00:30:00,919 --> 00:30:04,260
there is this offset that changes this

624
00:30:04,260 --> 00:30:08,640
offset is xed Now I will show you

625
00:30:08,640 --> 00:30:13,020
why we are going  talking about offset

626
00:30:13,559 --> 00:30:17,820
Oh what a beautiful slide Oh well focus for

627
00:30:17,820 --> 00:30:19,860
a moment on the initial part I

628
00:30:19,860 --> 00:30:22,200
couldn't do better no here you go

629
00:30:22,200 --> 00:30:23,760
concentrate better on the

630
00:30:23,760 --> 00:30:26,399
initial part this here This is the same

631
00:30:26,399 --> 00:30:28,020
key that I showed you before I

632
00:30:28,020 --> 00:30:30,000
didn't put colors in it though

633
00:30:30,000 --> 00:30:32,520
don't be scared

634
00:30:32,520 --> 00:30:36,000
I took two offsets one in orange and

635
00:30:36,000 --> 00:30:39,240
one in blue because why the key that

636
00:30:39,240 --> 00:30:42,779
generates with those 10 million bytes bla

637
00:30:42,779 --> 00:30:45,020
bla bla bla bla

638
00:30:48,360 --> 00:30:50,640
and resume  de i Byte starting from these

639
00:30:50,640 --> 00:30:52,740
two offsets here I have reported in a

640
00:30:52,740 --> 00:30:54,419
dozen for simplicity to show you

641
00:30:54,419 --> 00:30:57,899
a little the method and to create the Real

642
00:30:57,899 --> 00:31:00,179
key with which it ciphers these files of the

643
00:31:00,179 --> 00:31:04,200
poor Christ that happens to us the xhora

644
00:31:04,440 --> 00:31:07,380
But I say  no ie if there is the

645
00:31:07,380 --> 00:31:09,779
vulnerability there on the offsets how do

646
00:31:09,779 --> 00:31:12,059
you think a simple xor can improve the

647
00:31:12,059 --> 00:31:14,779
situation in fact it was in a [ __ ] because

648
00:31:14,779 --> 00:31:18,539
Look here what a job i am This

649
00:31:18,539 --> 00:31:19,679
should be an encryption key

650
00:31:19,679 --> 00:31:23,100
guys eh ie look

651
00:31:23,100 --> 00:31:27,840
12 Byte 8 are the same Not it  I know

652
00:31:27,840 --> 00:31:29,159
Luckily these algorithms don't make them

653
00:31:29,159 --> 00:31:30,840
because otherwise

654
00:31:30,840 --> 00:31:32,760
ok

655
00:31:32,760 --> 00:31:36,840
So what happens document PDF a

656
00:31:36,840 --> 00:31:40,440
random file that is taken to encrypt to

657
00:31:40,440 --> 00:31:42,600
give you an example no

658
00:31:42,600 --> 00:31:45,240
I make it document point

659
00:31:45,240 --> 00:31:48,059
bla bla bla I don't know what that stuff is

660
00:31:48,059 --> 00:31:52,140
there eh bass64  URL Safe you can find the rfc

661
00:31:52,140 --> 00:31:55,679
on github which isn't there but I'll tell you later

662
00:31:55,679 --> 00:31:58,039
if you want

663
00:31:59,940 --> 00:32:03,659
it's easy because

664
00:32:03,779 --> 00:32:06,080
nothing but a

665
00:32:06,080 --> 00:32:10,200
various series of Bytes which contains an

666
00:32:10,200 --> 00:32:11,820
identifier of the case stream and therefore

667
00:32:11,820 --> 00:32:13,559
of the key which is  been used to

668
00:32:13,559 --> 00:32:15,140
encrypt substantially

669
00:32:15,140 --> 00:32:17,820
then there is the encrypting mode can

670
00:32:17,820 --> 00:32:21,240
have two values ​​this here Fb and then there is

671
00:32:21,240 --> 00:32:23,700
the encrypted offset one encrypted starting

672
00:32:23,700 --> 00:32:26,279
from that offset value which is different for

673
00:32:26,279 --> 00:32:30,000
each Run super and from the value 2 of the  offs

674
00:32:30,000 --> 00:32:33,980
2 encrypted starting from the first offset

675
00:32:36,240 --> 00:32:39,860
Ok what stream the criptor guys

676
00:32:39,860 --> 00:32:43,679
This is what it was it's real

677
00:32:43,679 --> 00:32:45,659
let's say it's real the work I

678
00:32:45,659 --> 00:32:48,020
've done I've done I released it in

679
00:32:48,020 --> 00:32:51,899
July and it's based on three values

680
00:32:51,899 --> 00:32:55,440
basically on three quantities

681
00:32:55,440 --> 00:32:58,500
the  nonns the dictionary the dictionary concept

682
00:32:58,500 --> 00:33:00,720
that I will now explain is the

683
00:33:00,720 --> 00:33:04,440
public key in the case stream that

684
00:33:04,440 --> 00:33:06,480
I showed you earlier the one generated

685
00:33:06,480 --> 00:33:09,980
with two beautiful colored cycles

686
00:33:10,279 --> 00:33:12,720
there is various information that is needed

687
00:33:12,720 --> 00:33:14,820
to go back it is needed by Drive

688
00:33:14,820 --> 00:33:16,500
when you get the money it is needed

689
00:33:16,500 --> 00:33:20,279
Dave with the decryptor to decrypt the files

690
00:33:20,279 --> 00:33:22,860
and I used them I used the nons to

691
00:33:22,860 --> 00:33:25,100
understand

692
00:33:25,919 --> 00:33:27,380
how

693
00:33:27,380 --> 00:33:31,200
late the CPU was in reading the stopwatch bytes

694
00:33:31,200 --> 00:33:32,000


695
00:33:32,000 --> 00:33:35,279
this gives a lot of information and

696
00:33:35,279 --> 00:33:38,960
since the  nonns and the private key

697
00:33:38,960 --> 00:33:41,519
have are generated by the same

698
00:33:41,519 --> 00:33:45,000
algorithm I can

699
00:33:45,000 --> 00:33:46,559
also get an idea of ​​what the private key could be like

700
00:33:46,559 --> 00:33:48,960
then there is this dictionary

701
00:33:48,960 --> 00:33:52,380
that I use to generate millions of

702
00:33:52,380 --> 00:33:54,419
private keys for how many you may

703
00:33:54,419 --> 00:33:55,980
think they are  many of these millions

704
00:33:55,980 --> 00:33:58,140
are still throwable within a

705
00:33:58,140 --> 00:34:01,019
day or two so I would also be

706
00:34:01,019 --> 00:34:02,519
sitting there relaxing and waiting for it to

707
00:34:02,519 --> 00:34:04,440
finish

708
00:34:04,440 --> 00:34:08,159
and I need the public key instead which

709
00:34:08,159 --> 00:34:11,460
is always inside the case stream

710
00:34:11,460 --> 00:34:13,199
because I need it because

711
00:34:13,199 --> 00:34:17,639
with the dictionary I generate 32 Bytes per

712
00:34:17,639 --> 00:34:19,020
once

713
00:34:19,020 --> 00:34:21,599
I derive them with curves I find the

714
00:34:21,599 --> 00:34:25,080
private key and the public key Sorry for the

715
00:34:25,080 --> 00:34:27,239
Public key if it is the same as the

716
00:34:27,239 --> 00:34:29,339
one in the keystream Then the

717
00:34:29,339 --> 00:34:30,719
private key I generated is the

718
00:34:30,719 --> 00:34:33,839
correct one Boom and they decrypt the first round

719
00:34:33,839 --> 00:34:37,260
then there is the  second round and then I have my

720
00:34:37,260 --> 00:34:40,560
che stream decrypted

721
00:34:40,560 --> 00:34:45,060
Oh this is how it works In short the

722
00:34:45,060 --> 00:34:48,119
che stream the criptor does a lot axor but

723
00:34:48,119 --> 00:34:52,220
basically it's a brute force

724
00:34:54,300 --> 00:34:57,480
then there's the second  aside the file de

725
00:34:57,480 --> 00:35:01,320
criptor and the file decriptor without which

726
00:35:01,320 --> 00:35:02,940
stream the criptor has no reason to

727
00:35:02,940 --> 00:35:06,420
exist because you need to decrypt the

728
00:35:06,420 --> 00:35:08,940
key-stream which is precisely the

729
00:35:08,940 --> 00:35:10,740
original key with which they quoted

730
00:35:10,740 --> 00:35:15,439
all the files in order

731
00:35:16,500 --> 00:35:20,940
to be able to decrypt the files  Exactly

732
00:35:20,940 --> 00:35:23,520
there are two options

733
00:35:23,520 --> 00:35:25,980
the encrypt file using the encrypted

734
00:35:25,980 --> 00:35:30,260
keystream or you have to ugly the offset

735
00:35:30,260 --> 00:35:33,240
because I don't know the offset because

736
00:35:33,240 --> 00:35:36,000
unless the victim tells me Oh rich

737
00:35:36,000 --> 00:35:37,640
look that

738
00:35:37,640 --> 00:35:40,200
either they encrypted you they encrypted me

739
00:35:40,200 --> 00:35:42,780
using this file ex and I  I go there to

740
00:35:42,780 --> 00:35:45,000
debug the Exe file and I find the offset

741
00:35:45,000 --> 00:35:48,240
and I write it down I don't know what it

742
00:35:48,240 --> 00:35:51,119
is so what did I do very simple if

743
00:35:51,119 --> 00:35:54,720
you take an encrypted file a pdf file JPEG

744
00:35:54,720 --> 00:35:56,880
PNG Who is it that doesn't have any encrypted files

745
00:35:56,880 --> 00:36:00,540
of this kind Office file

746
00:36:00,540 --> 00:36:04,020
and I put it next to the case stream this little

747
00:36:04,020 --> 00:36:06,060
program does nothing but throw away

748
00:36:06,060 --> 00:36:09,300
every possible initial offset value

749
00:36:09,300 --> 00:36:11,160
apply the whole encryption algorithm

750
00:36:11,160 --> 00:36:13,140
that I'm not telling myself now and all

751
00:36:13,140 --> 00:36:15,119
written on the gitab  If you want, go and

752
00:36:15,119 --> 00:36:18,300
document Here it is the link is this here

753
00:36:18,300 --> 00:36:20,540
the live

754
00:36:20,540 --> 00:36:22,700
v5

755
00:36:22,700 --> 00:36:25,400
file file decryptor ok

756
00:36:25,400 --> 00:36:31,700
And so At that point I decipher the

757
00:36:31,700 --> 00:36:35,040
I find the offset Because leader

758
00:36:35,040 --> 00:36:38,220
PNG leader JPEG leader very well known

759
00:36:38,220 --> 00:36:40,920
No they are Signature oddities

760
00:36:40,920 --> 00:36:43,200
when the first Byte of the digits of the  what

761
00:36:43,200 --> 00:36:45,839
stream of my file using that

762
00:36:45,839 --> 00:36:48,599
offset if I find them I win and therefore

763
00:36:48,599 --> 00:36:50,359
I can decrypt all the files because

764
00:36:50,359 --> 00:36:54,720
the fixed offset is valid for all files

765
00:36:54,720 --> 00:36:57,060
as opposed to the

766
00:36:57,060 --> 00:37:00,060
colored offsets that I showed you before which are valid

767
00:37:00,060 --> 00:37:01,040
only for

768
00:37:01,040 --> 00:37:04,079
one file  then each file different colored offset Sassuolo

769
00:37:04,079 --> 00:37:06,859


770
00:37:08,820 --> 00:37:10,980
or I'm quick

771
00:37:10,980 --> 00:37:13,560
because this work guys that is because

772
00:37:13,560 --> 00:37:15,060
I had to deprive myself of my life for

773
00:37:15,060 --> 00:37:17,400
six months

774
00:37:17,400 --> 00:37:20,820
to make a difference and get

775
00:37:20,820 --> 00:37:23,339
Ive to release version 3 and version 4 which

776
00:37:23,339 --> 00:37:26,160
don't contain this crap

777
00:37:26,160 --> 00:37:28,440
because you have to  give a message to

778
00:37:28,440 --> 00:37:31,800
these guys that is we are always

779
00:37:31,800 --> 00:37:33,540
there we seem to be

780
00:37:33,540 --> 00:37:36,540
late no with the hood always Omg

781
00:37:36,540 --> 00:37:39,000
slaughterhouse instead no we do the damage

782
00:37:39,000 --> 00:37:40,619
too  we waste their

783
00:37:40,619 --> 00:37:43,339
time we put pressure on them

784
00:37:43,339 --> 00:37:46,920
to give a constant message of this

785
00:37:46,920 --> 00:37:49,260
type it allows us to continue to have

786
00:37:49,260 --> 00:37:53,099
people like hype who do [ __ ]

787
00:37:53,099 --> 00:37:56,820
And what we have learned that guys in the

788
00:37:56,820 --> 00:37:58,859
end live

789
00:37:58,859 --> 00:38:01,619
and how That is, it is made up of developers

790
00:38:01,619 --> 00:38:03,960
that we all know  how many of us are

791
00:38:03,960 --> 00:38:06,900
developers you are developers and you

792
00:38:06,900 --> 00:38:09,000
write [ __ ] but now it's

793
00:38:09,000 --> 00:38:12,240
useless to tell them that is, let's say it

794
00:38:12,240 --> 00:38:14,280
to their faces we all learn we learn as we

795
00:38:14,280 --> 00:38:18,180
grow But when they think of

796
00:38:18,180 --> 00:38:21,240
copying code and complicating it and

797
00:38:21,240 --> 00:38:22,520


798
00:38:22,520 --> 00:38:26,099
sticking vulnerabilities there

799
00:38:26,099 --> 00:38:29,460
I wanted to thank that guy

800
00:38:29,460 --> 00:38:32,900
I used to give us  first rivitna that

801
00:38:32,900 --> 00:38:36,359
Andreis dunhof has a huge

802
00:38:36,359 --> 00:38:39,300
following on Twitter because he has a

803
00:38:39,300 --> 00:38:42,060
spectacular mind and we have collaborated a

804
00:38:42,060 --> 00:38:43,859
lot we have written to each other a

805
00:38:43,859 --> 00:38:47,940
lot and nothing thank you for

806
00:38:47,940 --> 00:38:49,360
your attention to your patience

807
00:38:49,360 --> 00:39:04,739
[Applause]

