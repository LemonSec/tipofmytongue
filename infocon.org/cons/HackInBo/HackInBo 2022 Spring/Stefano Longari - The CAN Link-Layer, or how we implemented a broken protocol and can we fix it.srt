1
00:00:11,759 --> 00:00:13,679
okay so hello everyone i've been asked

2
00:00:13,679 --> 00:00:15,759
to do the spd talking english so i will

3
00:00:15,759 --> 00:00:17,199
proceed to do so

4
00:00:17,199 --> 00:00:19,760
but you'll have to handle my

5
00:00:19,760 --> 00:00:21,840
english for the first time after covert

6
00:00:21,840 --> 00:00:23,840
so i hope i'll be acceptable

7
00:00:23,840 --> 00:00:24,880
so

8
00:00:24,880 --> 00:00:26,720
as you may have noticed

9
00:00:26,720 --> 00:00:27,680
the

10
00:00:27,680 --> 00:00:29,840
on the screen you have a really big car

11
00:00:29,840 --> 00:00:31,599
so the most attentive ones may have

12
00:00:31,599 --> 00:00:32,960
assumed that we're not going to talk

13
00:00:32,960 --> 00:00:34,640
about standard cyber security we're

14
00:00:34,640 --> 00:00:36,160
actually going to talk about

15
00:00:36,160 --> 00:00:38,079
automotive cyber security

16
00:00:38,079 --> 00:00:39,920
and the title of the speech is the

17
00:00:39,920 --> 00:00:41,840
conflict layer or how we implemented a

18
00:00:41,840 --> 00:00:43,440
broken protocol and can we fix it i'm

19
00:00:43,440 --> 00:00:44,960
actually pretty happy about the previous

20
00:00:44,960 --> 00:00:47,360
talk because it gives me a couple of

21
00:00:47,360 --> 00:00:49,840
points that will come back

22
00:00:49,840 --> 00:00:50,719
in

23
00:00:50,719 --> 00:00:52,399
in our talk right now

24
00:00:52,399 --> 00:00:53,600
so

25
00:00:53,600 --> 00:00:56,800
really briefly who i am who am i

26
00:00:56,800 --> 00:00:59,039
uh i'm finally a postdoc researcher at

27
00:00:59,039 --> 00:01:00,900
polytechnic milano

28
00:01:00,900 --> 00:01:02,239
[Music]

29
00:01:02,239 --> 00:01:04,640
since i was since a year ago

30
00:01:04,640 --> 00:01:05,600
and

31
00:01:05,600 --> 00:01:08,479
since my master thesis i've worked on

32
00:01:08,479 --> 00:01:10,000
automotive security and generally

33
00:01:10,000 --> 00:01:12,640
speaking cyber physical system security

34
00:01:12,640 --> 00:01:15,840
i'm with stefano zaneros

35
00:01:15,840 --> 00:01:18,320
team if you know who he is

36
00:01:18,320 --> 00:01:20,880
and generally speaking our team works

37
00:01:20,880 --> 00:01:22,720
both on offensive and on defensive

38
00:01:22,720 --> 00:01:23,920
security

39
00:01:23,920 --> 00:01:26,880
on my side my main focus have been

40
00:01:26,880 --> 00:01:28,960
offensive attacks against can which we

41
00:01:28,960 --> 00:01:30,479
will see right now

42
00:01:30,479 --> 00:01:32,560
and on the defensive side intrusion

43
00:01:32,560 --> 00:01:34,400
detection systems basically everything

44
00:01:34,400 --> 00:01:36,159
that you can do to defend

45
00:01:36,159 --> 00:01:38,079
can at the moment

46
00:01:38,079 --> 00:01:39,920
and that started university just a brief

47
00:01:39,920 --> 00:01:41,680
mention to the beer that we had before

48
00:01:41,680 --> 00:01:43,439
which i had an issue

49
00:01:43,439 --> 00:01:45,119
with because i usually don't want to

50
00:01:45,119 --> 00:01:47,119
drink before speaking but i'm the last

51
00:01:47,119 --> 00:01:49,600
one and the beer has finished i think if

52
00:01:49,600 --> 00:01:52,798
there's more i will have it

53
00:01:52,840 --> 00:01:56,000
anyway okay since i'm assuming that the

54
00:01:56,000 --> 00:01:58,159
majority of you do not really know how

55
00:01:58,159 --> 00:02:01,920
the automotive environment works from

56
00:02:01,920 --> 00:02:03,520
say cyber point of view although the

57
00:02:03,520 --> 00:02:06,079
word cyber kind of hurts us

58
00:02:06,079 --> 00:02:07,920
the general idea is that we can see

59
00:02:07,920 --> 00:02:10,639
divided in two to four layers we have

60
00:02:10,639 --> 00:02:12,239
the vehicle and everything that's inside

61
00:02:12,239 --> 00:02:14,640
of it which is cables

62
00:02:14,640 --> 00:02:15,760
can

63
00:02:15,760 --> 00:02:17,680
and a lot of devices we have a lot of

64
00:02:17,680 --> 00:02:20,480
devices like up to 100 devices probably

65
00:02:20,480 --> 00:02:23,360
tens at least in normal in normal

66
00:02:23,360 --> 00:02:24,400
vehicles

67
00:02:24,400 --> 00:02:25,680
and then we have the outside of the

68
00:02:25,680 --> 00:02:27,760
vehicle because someone at certain point

69
00:02:27,760 --> 00:02:31,519
decided that it made sense to create

70
00:02:31,519 --> 00:02:34,000
things that decide what our vehicle do

71
00:02:34,000 --> 00:02:37,040
without us so like steering accelerating

72
00:02:37,040 --> 00:02:39,680
and then it said also we may have we may

73
00:02:39,680 --> 00:02:42,720
have internet connected to this

74
00:02:42,720 --> 00:02:44,319
yes exactly

75
00:02:44,319 --> 00:02:46,480
so i'm assuming that the majority of you

76
00:02:46,480 --> 00:02:49,599
will understand that the problem is not

77
00:02:49,599 --> 00:02:51,280
making the vehicle autonomous the

78
00:02:51,280 --> 00:02:53,040
problem is not connecting the vehicle to

79
00:02:53,040 --> 00:02:55,200
the internet it's doing both things

80
00:02:55,200 --> 00:02:56,319
together

81
00:02:56,319 --> 00:02:57,440
now

82
00:02:57,440 --> 00:02:59,440
in fact at a certain point when we

83
00:02:59,440 --> 00:03:01,599
connected it to the internet for with

84
00:03:01,599 --> 00:03:03,280
many different

85
00:03:03,280 --> 00:03:04,640
devices and

86
00:03:04,640 --> 00:03:07,680
services and so on this is 2015 this is

87
00:03:07,680 --> 00:03:10,239
seven years ago so for everybody here

88
00:03:10,239 --> 00:03:11,760
that knows who they are miller and

89
00:03:11,760 --> 00:03:13,440
wallace specifically which are the ones

90
00:03:13,440 --> 00:03:16,239
on the right created the first known and

91
00:03:16,239 --> 00:03:17,280
famous

92
00:03:17,280 --> 00:03:19,840
attack to a vehicle that was able from

93
00:03:19,840 --> 00:03:22,560
remote to control the cyber physical

94
00:03:22,560 --> 00:03:24,319
systems of the vehicle right so they

95
00:03:24,319 --> 00:03:26,640
were able to shut down the engine at low

96
00:03:26,640 --> 00:03:28,000
speeds they were able to turn the

97
00:03:28,000 --> 00:03:31,519
vehicle brake stop the brakes in 2016

98
00:03:31,519 --> 00:03:34,000
they actually managed with a less famous

99
00:03:34,000 --> 00:03:36,560
analysis to do everything without

100
00:03:36,560 --> 00:03:38,959
boundaries so steering at whatever speed

101
00:03:38,959 --> 00:03:41,280
they wanted

102
00:03:41,280 --> 00:03:43,519
and i'm mentioning this because

103
00:03:43,519 --> 00:03:46,000
obviously they did this by connecting

104
00:03:46,000 --> 00:03:50,159
the uh finding a vulnerable service on a

105
00:03:50,159 --> 00:03:51,440
device that was connected to the

106
00:03:51,440 --> 00:03:55,120
internet exploit that service to get

107
00:03:55,120 --> 00:03:56,640
the capability of overwriting the

108
00:03:56,640 --> 00:03:58,560
firmware of one of these devices but the

109
00:03:58,560 --> 00:04:01,760
most important things that both them but

110
00:04:01,760 --> 00:04:04,319
them and everybody after them that made

111
00:04:04,319 --> 00:04:07,519
attacks against the automotive systems

112
00:04:07,519 --> 00:04:10,319
did was get inside the networks and send

113
00:04:10,319 --> 00:04:13,040
messages inside these internal networks

114
00:04:13,040 --> 00:04:14,959
because the problem is

115
00:04:14,959 --> 00:04:16,478
that as you can see here this is

116
00:04:16,478 --> 00:04:18,399
obviously a simplification

117
00:04:18,399 --> 00:04:20,959
as you can see here we have many

118
00:04:20,959 --> 00:04:22,639
different devices which are called say

119
00:04:22,639 --> 00:04:25,600
engine control or ignition control or

120
00:04:25,600 --> 00:04:28,400
say park assist which if you give them

121
00:04:28,400 --> 00:04:31,040
the right command will decide to steer

122
00:04:31,040 --> 00:04:32,560
on behalf of you

123
00:04:32,560 --> 00:04:34,160
and these are the problems because

124
00:04:34,160 --> 00:04:35,600
obviously

125
00:04:35,600 --> 00:04:37,199
i mean i don't know if you can read this

126
00:04:37,199 --> 00:04:39,600
but all the green lines are canon lines

127
00:04:39,600 --> 00:04:42,000
usually and then you have many others

128
00:04:42,000 --> 00:04:45,040
many other many other types of

129
00:04:45,040 --> 00:04:46,400
networks but

130
00:04:46,400 --> 00:04:47,919
at least

131
00:04:47,919 --> 00:04:51,440
i would say almost every single car

132
00:04:51,440 --> 00:04:53,520
currently on the market or currently on

133
00:04:53,520 --> 00:04:57,840
the roads have at least one can network

134
00:04:59,280 --> 00:05:01,759
so i'll take you to a trip

135
00:05:01,759 --> 00:05:04,320
to the 1980s when we decided to actually

136
00:05:04,320 --> 00:05:06,560
use this network so it's bosch in the

137
00:05:06,560 --> 00:05:08,720
1980s we do not have any kind of

138
00:05:08,720 --> 00:05:11,280
connection if not computers cable to

139
00:05:11,280 --> 00:05:12,880
something maybe we had the first cell

140
00:05:12,880 --> 00:05:14,080
phone so i actually don't know because i

141
00:05:14,080 --> 00:05:15,919
wasn't alive at the moment

142
00:05:15,919 --> 00:05:17,440
but

143
00:05:17,440 --> 00:05:19,199
definitely we were not thinking about

144
00:05:19,199 --> 00:05:22,320
connecting everything to the internet so

145
00:05:22,320 --> 00:05:24,880
when when bosh decided to try and create

146
00:05:24,880 --> 00:05:27,199
an um

147
00:05:27,199 --> 00:05:29,600
a network protocol that was perfect for

148
00:05:29,600 --> 00:05:32,000
vehicles it focused on three things it

149
00:05:32,000 --> 00:05:33,199
focused on

150
00:05:33,199 --> 00:05:35,759
reliability which means basically let's

151
00:05:35,759 --> 00:05:37,360
avoid that

152
00:05:37,360 --> 00:05:40,000
too many electromagnetic interferences

153
00:05:40,000 --> 00:05:41,520
will have issue we create as issues

154
00:05:41,520 --> 00:05:43,680
because we cannot communicate between

155
00:05:43,680 --> 00:05:45,360
one device and the other

156
00:05:45,360 --> 00:05:46,960
we have

157
00:05:46,960 --> 00:05:49,039
sort of real time it's not really real

158
00:05:49,039 --> 00:05:52,160
time can but it gets to that point

159
00:05:52,160 --> 00:05:53,840
and the third point is that since

160
00:05:53,840 --> 00:05:55,840
vehicles are marketed good we want it to

161
00:05:55,840 --> 00:05:58,000
be as cheap as possible so so they

162
00:05:58,000 --> 00:05:59,759
designed this

163
00:05:59,759 --> 00:06:01,440
really simple network which is two

164
00:06:01,440 --> 00:06:03,240
cables connected by two

165
00:06:03,240 --> 00:06:04,800
120hz

166
00:06:04,800 --> 00:06:07,759
ohm resistances and that's it

167
00:06:07,759 --> 00:06:09,360
and then you connect the cable to those

168
00:06:09,360 --> 00:06:11,039
to those two you connect the device to

169
00:06:11,039 --> 00:06:12,400
those two cables

170
00:06:12,400 --> 00:06:14,720
and you okay give me a

171
00:06:14,720 --> 00:06:18,560
second okay um and you just send logical

172
00:06:18,560 --> 00:06:20,560
ones and zeros by

173
00:06:20,560 --> 00:06:21,680
by

174
00:06:21,680 --> 00:06:22,800
basically

175
00:06:22,800 --> 00:06:24,800
considering the differential

176
00:06:24,800 --> 00:06:27,360
voltage between the two cables so if we

177
00:06:27,360 --> 00:06:28,240
have

178
00:06:28,240 --> 00:06:31,600
zero difference we have a one

179
00:06:31,600 --> 00:06:35,039
this is a little uh say counterintuitive

180
00:06:35,039 --> 00:06:37,039
but it makes sense in the long run and

181
00:06:37,039 --> 00:06:39,520
if we have i think three volts more or

182
00:06:39,520 --> 00:06:41,360
less between three and five volts of

183
00:06:41,360 --> 00:06:44,160
differential we have a zero right

184
00:06:44,160 --> 00:06:47,280
and that's it that's the network

185
00:06:47,280 --> 00:06:48,639
brief information

186
00:06:48,639 --> 00:06:51,039
on on how this works from a device point

187
00:06:51,039 --> 00:06:53,280
of view usually you have the cpu and in

188
00:06:53,280 --> 00:06:55,280
the cpu silicon you have the can

189
00:06:55,280 --> 00:06:56,800
controller which is

190
00:06:56,800 --> 00:07:00,240
everything logical about can so how the

191
00:07:00,240 --> 00:07:03,120
packets work how the packets are created

192
00:07:03,120 --> 00:07:06,000
how to handle errors how to handle

193
00:07:06,000 --> 00:07:08,240
arbitration and so on and the only thing

194
00:07:08,240 --> 00:07:10,880
that you have outside the silicon

195
00:07:10,880 --> 00:07:13,039
is the transceiver which is what defines

196
00:07:13,039 --> 00:07:15,360
which is what translates a

197
00:07:15,360 --> 00:07:18,000
standard logical one into the zero volt

198
00:07:18,000 --> 00:07:19,440
differential and the standard logical

199
00:07:19,440 --> 00:07:21,520
zero into the three volt differential

200
00:07:21,520 --> 00:07:23,280
and this is going to become

201
00:07:23,280 --> 00:07:25,360
interesting later

202
00:07:25,360 --> 00:07:26,319
now

203
00:07:26,319 --> 00:07:28,000
really briefly

204
00:07:28,000 --> 00:07:29,680
how do we define

205
00:07:29,680 --> 00:07:31,440
packets so how do we read things on can

206
00:07:31,440 --> 00:07:33,120
how do we work on can

207
00:07:33,120 --> 00:07:34,639
generally speaking we do not have the

208
00:07:34,639 --> 00:07:36,400
standard transmitter and receiver that

209
00:07:36,400 --> 00:07:38,319
we have on say

210
00:07:38,319 --> 00:07:41,120
ethernet we actually only have an id

211
00:07:41,120 --> 00:07:42,960
every single packet that we send has

212
00:07:42,960 --> 00:07:45,440
only an id that defines what's inside

213
00:07:45,440 --> 00:07:47,120
the packet

214
00:07:47,120 --> 00:07:49,919
what we can imagine is that we have a

215
00:07:49,919 --> 00:07:51,919
broadcast bus

216
00:07:51,919 --> 00:07:55,520
and if i send say id 0x20

217
00:07:55,520 --> 00:07:58,080
and i define that in my in my in my

218
00:07:58,080 --> 00:07:59,280
vehicle

219
00:07:59,280 --> 00:08:02,000
i can decide that id 0x20 will always

220
00:08:02,000 --> 00:08:05,199
have from bit 0 to 15 the speed of the

221
00:08:05,199 --> 00:08:06,720
front right wheel front left street

222
00:08:06,720 --> 00:08:07,840
sorry

223
00:08:07,840 --> 00:08:11,120
from bit 16 to 31 the speed of the front

224
00:08:11,120 --> 00:08:13,759
right and so on right and everybody that

225
00:08:13,759 --> 00:08:15,599
wants to know the speed of each of the

226
00:08:15,599 --> 00:08:18,000
wheels will search for that id passing

227
00:08:18,000 --> 00:08:19,840
on the bus and then capture the payload

228
00:08:19,840 --> 00:08:22,400
and read it right so we don't really

229
00:08:22,400 --> 00:08:24,240
we're sending information in broadcast

230
00:08:24,240 --> 00:08:25,840
we're not caring about who receives

231
00:08:25,840 --> 00:08:27,120
those information

232
00:08:27,120 --> 00:08:28,560
the other important things that i need

233
00:08:28,560 --> 00:08:30,080
to mention is that the majority of

234
00:08:30,080 --> 00:08:31,759
canned packets are periodic which means

235
00:08:31,759 --> 00:08:34,000
that we're not really asking for things

236
00:08:34,000 --> 00:08:36,719
but we're just waiting for the ecu the

237
00:08:36,719 --> 00:08:39,039
device that is

238
00:08:39,039 --> 00:08:41,519
tasked with uh sending that information

239
00:08:41,519 --> 00:08:44,240
to just repeat it usually once every

240
00:08:44,240 --> 00:08:46,800
hundredth tenth of or or once every

241
00:08:46,800 --> 00:08:48,160
second

242
00:08:48,160 --> 00:08:49,600
okay this is what we need to understand

243
00:08:49,600 --> 00:08:51,519
the first attacks because the first

244
00:08:51,519 --> 00:08:53,680
start the first attacks are

245
00:08:53,680 --> 00:08:55,440
as simple as you can imagine since i

246
00:08:55,440 --> 00:08:57,680
never mentioned authentication in this i

247
00:08:57,680 --> 00:08:58,959
never mentioned it because it does not

248
00:08:58,959 --> 00:09:00,240
exist

249
00:09:00,240 --> 00:09:02,160
and the point is that miller and valasar

250
00:09:02,160 --> 00:09:03,760
for example in their attacks what they

251
00:09:03,760 --> 00:09:05,600
did was just find a way to get to that

252
00:09:05,600 --> 00:09:07,279
network and then say whatever they

253
00:09:07,279 --> 00:09:10,480
wanted because you can decide to send id

254
00:09:10,480 --> 00:09:14,000
0x20 but writing down the speed is zero

255
00:09:14,000 --> 00:09:16,320
and everybody will believe you everybody

256
00:09:16,320 --> 00:09:18,240
the only problem is that since i

257
00:09:18,240 --> 00:09:20,320
mentioned that the packets are periodic

258
00:09:20,320 --> 00:09:22,320
what happens is that there's going to be

259
00:09:22,320 --> 00:09:23,680
someone else saying no listen the speed

260
00:09:23,680 --> 00:09:26,240
is actually 50. so you have to handle

261
00:09:26,240 --> 00:09:28,399
that the receiver will read both your

262
00:09:28,399 --> 00:09:30,800
information and the one that is

263
00:09:30,800 --> 00:09:32,880
legitimate

264
00:09:32,880 --> 00:09:35,519
and usually your problem here

265
00:09:35,519 --> 00:09:38,000
is handled by sending a lot of messages

266
00:09:38,000 --> 00:09:40,160
if you send more messages than the

267
00:09:40,160 --> 00:09:42,880
authentic the authentic ecu they will

268
00:09:42,880 --> 00:09:45,839
just believe you so say you

269
00:09:45,839 --> 00:09:47,920
send 10 messages while the other one is

270
00:09:47,920 --> 00:09:50,480
sending one fine the

271
00:09:50,480 --> 00:09:52,080
receiving issue will start believing

272
00:09:52,080 --> 00:09:54,160
your information this is the basics

273
00:09:54,160 --> 00:09:56,640
obviously we will have a little more uh

274
00:09:56,640 --> 00:09:58,720
there may be some gimmicks and details

275
00:09:58,720 --> 00:10:00,800
that i'm not entering into the details

276
00:10:00,800 --> 00:10:02,480
of just because we did not really have

277
00:10:02,480 --> 00:10:05,600
the time but this is the general concept

278
00:10:05,600 --> 00:10:06,399
right

279
00:10:06,399 --> 00:10:07,920
so at a certain point we actually

280
00:10:07,920 --> 00:10:09,440
started asking ourselves how can we

281
00:10:09,440 --> 00:10:12,320
patch this how can we solve this problem

282
00:10:12,320 --> 00:10:14,399
and amongst the value solutions one of

283
00:10:14,399 --> 00:10:16,480
the most effective one

284
00:10:16,480 --> 00:10:18,800
seemed to be intrusion detection systems

285
00:10:18,800 --> 00:10:20,720
and the reason for this and actually i

286
00:10:20,720 --> 00:10:23,519
think the guy from the split from the

287
00:10:23,519 --> 00:10:24,880
talk before is not here at the moment

288
00:10:24,880 --> 00:10:26,000
but

289
00:10:26,000 --> 00:10:28,160
intrusion detection systems in this case

290
00:10:28,160 --> 00:10:30,079
really worked because

291
00:10:30,079 --> 00:10:32,640
if messages are periodic it's super easy

292
00:10:32,640 --> 00:10:34,000
to check about the to check the

293
00:10:34,000 --> 00:10:35,600
frequency of something

294
00:10:35,600 --> 00:10:38,880
because if the authentic is here is

295
00:10:38,880 --> 00:10:41,279
writing something at speed say 10 i

296
00:10:41,279 --> 00:10:43,200
don't care about the metrics but it's

297
00:10:43,200 --> 00:10:45,839
sending something at at the speed of 10

298
00:10:45,839 --> 00:10:47,920
and i add anything i will increase the

299
00:10:47,920 --> 00:10:50,560
speed right

300
00:10:50,560 --> 00:10:53,839
so it's super easy to use say

301
00:10:53,839 --> 00:10:55,040
frequency

302
00:10:55,040 --> 00:10:57,279
to recognize attacks the other thing

303
00:10:57,279 --> 00:10:58,720
that you can do

304
00:10:58,720 --> 00:11:01,200
is to use specifications so for example

305
00:11:01,200 --> 00:11:02,959
uh checking the payload of the packet

306
00:11:02,959 --> 00:11:04,800
and see if whether that payload makes

307
00:11:04,800 --> 00:11:06,800
sense so for example you may say

308
00:11:06,800 --> 00:11:09,279
i'm expecting that the speed

309
00:11:09,279 --> 00:11:10,320
since

310
00:11:10,320 --> 00:11:13,680
0.1 seconds before was 20 it won't

311
00:11:13,680 --> 00:11:16,320
become 100 in one single tenth of a

312
00:11:16,320 --> 00:11:18,399
second right so you can use some kind of

313
00:11:18,399 --> 00:11:21,120
analysis that controls whether it makes

314
00:11:21,120 --> 00:11:23,120
sense and if an information makes sense

315
00:11:23,120 --> 00:11:25,040
with the previous one with the next one

316
00:11:25,040 --> 00:11:27,600
and so on and then you had you have for

317
00:11:27,600 --> 00:11:29,760
example you can use machine learning

318
00:11:29,760 --> 00:11:31,600
techniques obviously this is not

319
00:11:31,600 --> 00:11:33,440
implemented because come on

320
00:11:33,440 --> 00:11:35,519
we we do we do machine learning

321
00:11:35,519 --> 00:11:37,440
techniques in academia but they are

322
00:11:37,440 --> 00:11:38,959
definitely not ready to be implemented

323
00:11:38,959 --> 00:11:41,120
in a vehicle

324
00:11:41,120 --> 00:11:42,640
but generally speaking this is the

325
00:11:42,640 --> 00:11:45,200
overall concept right you can solve the

326
00:11:45,200 --> 00:11:47,360
problems that i mentioned before as long

327
00:11:47,360 --> 00:11:50,639
as they are how i mentioned them before

328
00:11:50,639 --> 00:11:52,959
like this now obviously

329
00:11:52,959 --> 00:11:56,079
spoiler alert they're not

330
00:11:56,079 --> 00:11:58,560
the general concept though is let's say

331
00:11:58,560 --> 00:12:02,079
that i am an attacker and i want to

332
00:12:02,720 --> 00:12:05,600
avoid detection how do i have to do this

333
00:12:05,600 --> 00:12:07,600
for the specification based

334
00:12:07,600 --> 00:12:09,279
intrusion detection systems my problem

335
00:12:09,279 --> 00:12:11,839
is that i have the ecu keeping that that

336
00:12:11,839 --> 00:12:13,600
keeps saying the actual

337
00:12:13,600 --> 00:12:14,399
uh

338
00:12:14,399 --> 00:12:15,920
maintaining the example the actual speed

339
00:12:15,920 --> 00:12:17,120
of the vehicle

340
00:12:17,120 --> 00:12:18,480
and i'm trying to say something

341
00:12:18,480 --> 00:12:20,320
different for example

342
00:12:20,320 --> 00:12:23,040
but everyone reading will will

343
00:12:23,040 --> 00:12:24,399
recognize that there is a difference

344
00:12:24,399 --> 00:12:26,880
between my information and the ones and

345
00:12:26,880 --> 00:12:29,360
by the previous one but yet by the by

346
00:12:29,360 --> 00:12:31,519
legitimate is here

347
00:12:31,519 --> 00:12:33,440
and regarding the frequency same thing

348
00:12:33,440 --> 00:12:35,440
as soon as i start adding something or

349
00:12:35,440 --> 00:12:37,440
if i try to remove something

350
00:12:37,440 --> 00:12:39,680
it would be obvious that the ecu that

351
00:12:39,680 --> 00:12:41,680
was sending the speed either it's not

352
00:12:41,680 --> 00:12:43,760
the only one speaking

353
00:12:43,760 --> 00:12:45,600
or has or has some issues because it's

354
00:12:45,600 --> 00:12:47,680
not speaking anymore right

355
00:12:47,680 --> 00:12:50,160
so how do i solve this

356
00:12:50,160 --> 00:12:53,399
well generally

357
00:12:55,120 --> 00:12:56,639
the best idea would be that of

358
00:12:56,639 --> 00:12:58,399
manipulating or substituting the frame

359
00:12:58,399 --> 00:13:00,000
because if i manage

360
00:13:00,000 --> 00:13:02,079
to rem to either change the frame

361
00:13:02,079 --> 00:13:05,279
payload while keeping the frequency of

362
00:13:05,279 --> 00:13:08,079
the issue that is talking or completely

363
00:13:08,079 --> 00:13:10,000
removing that frame that payload and

364
00:13:10,000 --> 00:13:11,120
choosing

365
00:13:11,120 --> 00:13:14,000
to send a new packet i'm solving both

366
00:13:14,000 --> 00:13:16,240
problems at once because the frequency

367
00:13:16,240 --> 00:13:17,680
i'm choosing what frequency i'm talking

368
00:13:17,680 --> 00:13:18,639
at

369
00:13:18,639 --> 00:13:20,560
and the payload i'm choosing the payload

370
00:13:20,560 --> 00:13:23,519
so i do not have issues with compliance

371
00:13:23,519 --> 00:13:27,279
with whatever the other issue is saying

372
00:13:29,360 --> 00:13:30,240
and

373
00:13:30,240 --> 00:13:31,120
okay

374
00:13:31,120 --> 00:13:33,440
here's the story the story is that

375
00:13:33,440 --> 00:13:34,880
can

376
00:13:34,880 --> 00:13:37,519
enables us to do this by design

377
00:13:37,519 --> 00:13:39,440
so we chose this is why i told this a

378
00:13:39,440 --> 00:13:41,760
broker i defined this a broken protocol

379
00:13:41,760 --> 00:13:44,000
we invented a protocol in the 1980s

380
00:13:44,000 --> 00:13:45,920
which justifies it but we invented a

381
00:13:45,920 --> 00:13:48,720
protocol that by definition allows us to

382
00:13:48,720 --> 00:13:49,839
attack it

383
00:13:49,839 --> 00:13:51,120
we invented a protocol that by

384
00:13:51,120 --> 00:13:53,279
definition allows us to choose a device

385
00:13:53,279 --> 00:13:56,240
and say no you're not talking anymore

386
00:13:56,240 --> 00:13:57,680
because let's see how it works i need to

387
00:13:57,680 --> 00:14:00,320
i need some say some context some

388
00:14:00,320 --> 00:14:02,800
technicalities so as i mentioned before

389
00:14:02,800 --> 00:14:04,880
the idea is we have a differential

390
00:14:04,880 --> 00:14:07,120
voltage that goes between

391
00:14:07,120 --> 00:14:09,279
zero differential to up to i think three

392
00:14:09,279 --> 00:14:12,399
3.5 volts of differential and the zero

393
00:14:12,399 --> 00:14:14,399
is the logical one and the trivol

394
00:14:14,399 --> 00:14:16,480
differential is the logical zero

395
00:14:16,480 --> 00:14:19,199
and and the logical the logical zero is

396
00:14:19,199 --> 00:14:21,839
also called dominant bit while the

397
00:14:21,839 --> 00:14:24,000
um logical one is also called recessive

398
00:14:24,000 --> 00:14:25,839
bit and there's a reason for this which

399
00:14:25,839 --> 00:14:28,000
is that the dominant bit magically

400
00:14:28,000 --> 00:14:31,760
overwrites the uh recessive one so if i

401
00:14:31,760 --> 00:14:34,639
write a zero and you write a one

402
00:14:34,639 --> 00:14:36,079
no one sees the one

403
00:14:36,079 --> 00:14:38,399
zero like anybody

404
00:14:38,399 --> 00:14:40,480
everyone will just see the zero

405
00:14:40,480 --> 00:14:44,000
appearing on the bus

406
00:14:44,000 --> 00:14:46,880
this is actually made by design because

407
00:14:46,880 --> 00:14:48,639
there's a goal of the

408
00:14:48,639 --> 00:14:49,839
designer there was a goal of the

409
00:14:49,839 --> 00:14:51,199
designer that i mentioned which is that

410
00:14:51,199 --> 00:14:53,279
of having some sort of real time

411
00:14:53,279 --> 00:14:55,920
so how do i implement real time just

412
00:14:55,920 --> 00:14:58,880
if you remember from school or whoever

413
00:14:58,880 --> 00:15:01,920
here still studies that

414
00:15:01,920 --> 00:15:03,839
if you remember how ethernet works it

415
00:15:03,839 --> 00:15:06,399
goes with csmacd or ca i never remember

416
00:15:06,399 --> 00:15:09,360
which which is the

417
00:15:09,360 --> 00:15:12,639
acronym but whatever the point is

418
00:15:12,639 --> 00:15:14,240
if you have a collision between two

419
00:15:14,240 --> 00:15:16,800
packets in ethernet for example what you

420
00:15:16,800 --> 00:15:18,000
do is

421
00:15:18,000 --> 00:15:20,079
realize that there's a collision stop

422
00:15:20,079 --> 00:15:21,360
talking

423
00:15:21,360 --> 00:15:24,079
throw a dice see whoever has the lowest

424
00:15:24,079 --> 00:15:26,800
dies basically and the one that has the

425
00:15:26,800 --> 00:15:29,440
lowest dies will repeat that message in

426
00:15:29,440 --> 00:15:31,680
short right so we we randomize the

427
00:15:31,680 --> 00:15:33,519
number and whoever has the lowest number

428
00:15:33,519 --> 00:15:35,759
will try to speak first and so the

429
00:15:35,759 --> 00:15:38,000
second one will try to speak but we'll

430
00:15:38,000 --> 00:15:41,040
see that someone is speaking already

431
00:15:41,040 --> 00:15:42,639
in can we wanted to avoid this because

432
00:15:42,639 --> 00:15:44,160
the problem of fate of internet enough

433
00:15:44,160 --> 00:15:46,079
for wife and of why i think we fight you

434
00:15:46,079 --> 00:15:48,160
right the problem of these net this

435
00:15:48,160 --> 00:15:50,560
protocols is that they will not ever

436
00:15:50,560 --> 00:15:52,720
allow us to ensure that some messages

437
00:15:52,720 --> 00:15:54,959
arrive in time and we are in a safety

438
00:15:54,959 --> 00:15:57,120
critical systems maybe that message that

439
00:15:57,120 --> 00:15:58,399
we are sending

440
00:15:58,399 --> 00:16:00,399
is hey you need to break

441
00:16:00,399 --> 00:16:02,240
or hey you need to activate the abs

442
00:16:02,240 --> 00:16:03,920
because i'm sleeping

443
00:16:03,920 --> 00:16:04,720
right

444
00:16:04,720 --> 00:16:06,720
there we need

445
00:16:06,720 --> 00:16:09,680
to be sure that even if the timings of

446
00:16:09,680 --> 00:16:11,759
our cyber physical system usually are

447
00:16:11,759 --> 00:16:12,880
not that

448
00:16:12,880 --> 00:16:15,360
short we still do we still need to be

449
00:16:15,360 --> 00:16:18,240
sure that some messages will arrive

450
00:16:18,240 --> 00:16:20,000
when we want them to arrive and will not

451
00:16:20,000 --> 00:16:22,800
be stopped by other things

452
00:16:22,800 --> 00:16:24,000
so

453
00:16:24,000 --> 00:16:26,639
how do how does can arbitration work at

454
00:16:26,639 --> 00:16:27,920
this point

455
00:16:27,920 --> 00:16:30,880
well the idea is that when everybody

456
00:16:30,880 --> 00:16:32,320
wants to talk

457
00:16:32,320 --> 00:16:34,839
everybody starts talking at the same

458
00:16:34,839 --> 00:16:37,839
time and the first thing if you let me

459
00:16:37,839 --> 00:16:40,079
see if i can show this again the first

460
00:16:40,079 --> 00:16:42,719
thing that you

461
00:16:43,120 --> 00:16:44,240
okay

462
00:16:44,240 --> 00:16:46,639
okay the first thing that you send

463
00:16:46,639 --> 00:16:48,639
is your identifier

464
00:16:48,639 --> 00:16:50,560
right it's the first thing that you send

465
00:16:50,560 --> 00:16:52,639
aside the start of frame bit which is

466
00:16:52,639 --> 00:16:55,920
one zero which everybody uses to just

467
00:16:55,920 --> 00:16:59,120
uh synchronize and start sending the id

468
00:16:59,120 --> 00:17:01,600
together

469
00:17:03,120 --> 00:17:04,959
so everybody starts talking at the same

470
00:17:04,959 --> 00:17:07,039
time the second bit is the zero that i

471
00:17:07,039 --> 00:17:09,039
was talking about then let's assume that

472
00:17:09,039 --> 00:17:10,480
we have three different tcus that want

473
00:17:10,480 --> 00:17:12,079
to talk at the same time

474
00:17:12,079 --> 00:17:13,760
the first tcu sends a one while the

475
00:17:13,760 --> 00:17:15,520
other two sends a zero the one

476
00:17:15,520 --> 00:17:17,280
disappears completely

477
00:17:17,280 --> 00:17:20,160
so the ecu sends the one sees the zero

478
00:17:20,160 --> 00:17:22,079
and goes okay i lost arbitration there's

479
00:17:22,079 --> 00:17:23,199
someone

480
00:17:23,199 --> 00:17:25,439
which has more urgency than me to send

481
00:17:25,439 --> 00:17:26,959
something

482
00:17:26,959 --> 00:17:29,280
right so i will just stop talking i will

483
00:17:29,280 --> 00:17:30,960
wait for this message to finish and i

484
00:17:30,960 --> 00:17:34,240
will try again next time

485
00:17:34,400 --> 00:17:37,120
ecu 2 and this u3 go on for other two

486
00:17:37,120 --> 00:17:40,000
bits and then co2 sends another one

487
00:17:40,000 --> 00:17:42,160
while ecu 3 sends a zero and what

488
00:17:42,160 --> 00:17:45,120
happens is just that it's u2 loses again

489
00:17:45,120 --> 00:17:46,960
and this u3 goes on

490
00:17:46,960 --> 00:17:49,440
if an ecu by the way sorry i'm talking

491
00:17:49,440 --> 00:17:51,919
about ecu and device at the same whereas

492
00:17:51,919 --> 00:17:53,760
with the same meaning because ecus are

493
00:17:53,760 --> 00:17:56,240
electro

494
00:17:56,240 --> 00:17:57,919
electronic control units but generally

495
00:17:57,919 --> 00:17:59,679
speaking is how are we called devices

496
00:17:59,679 --> 00:18:02,799
inside a vehicle nonetheless

497
00:18:02,799 --> 00:18:05,440
so if an ecu if a device finishes

498
00:18:05,440 --> 00:18:06,640
sending

499
00:18:06,640 --> 00:18:08,000
its sole id

500
00:18:08,000 --> 00:18:09,600
it considers

501
00:18:09,600 --> 00:18:11,679
that it won arbitration and it can start

502
00:18:11,679 --> 00:18:14,320
talking and send the payload right

503
00:18:14,320 --> 00:18:16,240
everybody else shouldn't

504
00:18:16,240 --> 00:18:18,400
in fact just as uh as an information

505
00:18:18,400 --> 00:18:20,640
usually we cannot have two identical

506
00:18:20,640 --> 00:18:23,360
ideas sent by two different tcus in the

507
00:18:23,360 --> 00:18:25,919
same can network although this is not

508
00:18:25,919 --> 00:18:27,520
actually enforced

509
00:18:27,520 --> 00:18:29,280
so

510
00:18:29,280 --> 00:18:31,760
this is by design

511
00:18:31,760 --> 00:18:32,960
and the other thing that i need to teach

512
00:18:32,960 --> 00:18:34,559
you

513
00:18:34,559 --> 00:18:36,880
sorry is uh academic

514
00:18:36,880 --> 00:18:38,400
the other thing they need to tell you is

515
00:18:38,400 --> 00:18:41,200
actually how diego flag works in can

516
00:18:41,200 --> 00:18:44,080
sometimes it happens that one issue

517
00:18:44,080 --> 00:18:46,000
sends a one but it wanted to send a zero

518
00:18:46,000 --> 00:18:47,520
or or there's a collision that is

519
00:18:47,520 --> 00:18:50,160
unwanted and in these cases the issue

520
00:18:50,160 --> 00:18:52,960
has to tell everybody that the collision

521
00:18:52,960 --> 00:18:55,280
was like the the package is the packet

522
00:18:55,280 --> 00:18:56,640
is incorrect

523
00:18:56,640 --> 00:18:58,799
so how does it do this it sends another

524
00:18:58,799 --> 00:19:01,440
flag which is composed of either six

525
00:19:01,440 --> 00:19:04,080
zeros or six ones

526
00:19:04,080 --> 00:19:05,600
and the reason for which we have six

527
00:19:05,600 --> 00:19:09,679
zeros or six ones is that

528
00:19:09,679 --> 00:19:13,200
there's no clock in uh in in can so you

529
00:19:13,200 --> 00:19:15,679
need a way to um synchronize the

530
00:19:15,679 --> 00:19:17,919
messages that are being sent right and

531
00:19:17,919 --> 00:19:19,440
generally speaking you do this by

532
00:19:19,440 --> 00:19:21,280
checking the folding and raising edge of

533
00:19:21,280 --> 00:19:23,679
each of each bit so the problem is would

534
00:19:23,679 --> 00:19:27,200
be that if i have a payload of 64 zeros

535
00:19:27,200 --> 00:19:29,600
there's no falling or raising edge and i

536
00:19:29,600 --> 00:19:31,039
risk to have

537
00:19:31,039 --> 00:19:33,280
some incoherences in what i'm writing

538
00:19:33,280 --> 00:19:35,280
and what everybody is reading

539
00:19:35,280 --> 00:19:37,120
so we apply a technique that's called

540
00:19:37,120 --> 00:19:39,679
bit stuffing basically you cannot have

541
00:19:39,679 --> 00:19:41,760
more than five identical bits on the

542
00:19:41,760 --> 00:19:42,880
network

543
00:19:42,880 --> 00:19:45,520
if you have five identical bits on uh

544
00:19:45,520 --> 00:19:47,440
for example on your payload what you

545
00:19:47,440 --> 00:19:50,240
will do is just add a one

546
00:19:50,240 --> 00:19:52,480
sorry an opposite bit so if you have

547
00:19:52,480 --> 00:19:54,400
five zeros you'll add a one if you have

548
00:19:54,400 --> 00:19:56,400
five ones you'll have a zero that is

549
00:19:56,400 --> 00:19:58,480
called that is called a stuff bit and

550
00:19:58,480 --> 00:19:59,760
you will remove the

551
00:19:59,760 --> 00:20:02,080
the receiver will remove this bit as

552
00:20:02,080 --> 00:20:04,960
soon as it reads it independently of

553
00:20:04,960 --> 00:20:07,280
what's after so even if you only have

554
00:20:07,280 --> 00:20:09,120
five ones and then there's a zero you

555
00:20:09,120 --> 00:20:10,799
will still add another zero there that

556
00:20:10,799 --> 00:20:13,039
is going to be removed by the receiver

557
00:20:13,039 --> 00:20:14,880
in order to be sure that the receiver

558
00:20:14,880 --> 00:20:16,960
knows what to remove right

559
00:20:16,960 --> 00:20:18,559
so as you may have noticed these are not

560
00:20:18,559 --> 00:20:20,400
five these are six zeros

561
00:20:20,400 --> 00:20:22,640
and the actually pretty intelligent idea

562
00:20:22,640 --> 00:20:24,400
that they had when they decide can is

563
00:20:24,400 --> 00:20:26,080
that what you can do

564
00:20:26,080 --> 00:20:28,320
is just make an error to tell everybody

565
00:20:28,320 --> 00:20:29,840
that they made a level

566
00:20:29,840 --> 00:20:32,400
so what you do is you send six zeros

567
00:20:32,400 --> 00:20:34,640
everybody reads six zeros and goes oh no

568
00:20:34,640 --> 00:20:36,640
you can't send six zeros and they send

569
00:20:36,640 --> 00:20:38,320
another flag on top of it but the

570
00:20:38,320 --> 00:20:40,080
general idea is that everybody will

571
00:20:40,080 --> 00:20:42,559
consider that pocket as unacceptable and

572
00:20:42,559 --> 00:20:45,440
will discard it

573
00:20:47,280 --> 00:20:49,360
and the other thing is let's assume you

574
00:20:49,360 --> 00:20:52,879
are on a car right you're on a car

575
00:20:53,440 --> 00:20:55,280
and the car has been driving for 10

576
00:20:55,280 --> 00:20:57,840
years i think maybe i would assume that

577
00:20:57,840 --> 00:21:00,559
an acceptable lifetime for a vehicle

578
00:21:00,559 --> 00:21:02,400
you don't really often go and check

579
00:21:02,400 --> 00:21:04,559
whether all your devices inside the

580
00:21:04,559 --> 00:21:06,960
vehicle work correctly so it may happen

581
00:21:06,960 --> 00:21:09,760
that one of those device fail while you

582
00:21:09,760 --> 00:21:11,760
are driving and you really don't want

583
00:21:11,760 --> 00:21:13,840
this to happen because what happens is

584
00:21:13,840 --> 00:21:15,600
that if it's talk if it's listening on

585
00:21:15,600 --> 00:21:18,720
the bus and say a device starts reading

586
00:21:18,720 --> 00:21:21,440
zeros instead of once it will start it

587
00:21:21,440 --> 00:21:23,360
will start telling everybody that

588
00:21:23,360 --> 00:21:25,440
everybody's pockets are wrong

589
00:21:25,440 --> 00:21:26,880
because it reads something that is not

590
00:21:26,880 --> 00:21:27,919
correct

591
00:21:27,919 --> 00:21:30,240
so you want to find a way to shut down

592
00:21:30,240 --> 00:21:31,919
ecu's

593
00:21:31,919 --> 00:21:34,720
that are starting to fail too much

594
00:21:34,720 --> 00:21:37,200
right that makes sense like

595
00:21:37,200 --> 00:21:38,400
logically

596
00:21:38,400 --> 00:21:41,039
as long as the device is not connected

597
00:21:41,039 --> 00:21:42,640
to the internet and nothing inside the

598
00:21:42,640 --> 00:21:44,559
vehicle is connected to the internet

599
00:21:44,559 --> 00:21:47,679
you want a way to detach devices from

600
00:21:47,679 --> 00:21:50,159
the network so how do you do this you

601
00:21:50,159 --> 00:21:52,559
create a say fine state machine like

602
00:21:52,559 --> 00:21:53,440
this

603
00:21:53,440 --> 00:21:55,200
that every device has

604
00:21:55,200 --> 00:21:56,799
that that tells it

605
00:21:56,799 --> 00:21:58,400
in which state it is and you have three

606
00:21:58,400 --> 00:22:00,559
states error active state which is the

607
00:22:00,559 --> 00:22:02,159
normal one you are allowed to do

608
00:22:02,159 --> 00:22:03,280
everything that you want and you are

609
00:22:03,280 --> 00:22:04,480
allowed to send

610
00:22:04,480 --> 00:22:06,799
um error flags that are composed of six

611
00:22:06,799 --> 00:22:08,880
zeros

612
00:22:08,880 --> 00:22:10,720
and then you you you create a counter

613
00:22:10,720 --> 00:22:12,240
you create a counter that increases

614
00:22:12,240 --> 00:22:15,120
every time an error is made inside the

615
00:22:15,120 --> 00:22:17,600
vehicle it's inside the issue sorry

616
00:22:17,600 --> 00:22:21,360
and every single device has this counter

617
00:22:21,360 --> 00:22:24,960
and if the counter goes over 128 127

618
00:22:24,960 --> 00:22:27,120
technically

619
00:22:27,120 --> 00:22:28,960
then it means that you've made too many

620
00:22:28,960 --> 00:22:31,840
errors and you will start going into a

621
00:22:31,840 --> 00:22:33,760
passive mode which is

622
00:22:33,760 --> 00:22:35,600
not particularly different because you

623
00:22:35,600 --> 00:22:37,919
can still talk on the bus but you cannot

624
00:22:37,919 --> 00:22:39,840
send

625
00:22:39,840 --> 00:22:41,280
flags you can only send their passive

626
00:22:41,280 --> 00:22:42,640
flags which are

627
00:22:42,640 --> 00:22:44,559
composed of six ones

628
00:22:44,559 --> 00:22:46,240
what we care about though

629
00:22:46,240 --> 00:22:48,559
is that if you get over 255 if you have

630
00:22:48,559 --> 00:22:51,919
to if you get to 256 or more

631
00:22:51,919 --> 00:22:53,679
then you go in a state into a state

632
00:22:53,679 --> 00:22:54,880
that's called bus off and you can

633
00:22:54,880 --> 00:22:56,400
imagine by the name what you're going to

634
00:22:56,400 --> 00:22:57,919
do in the state you're not allowed to do

635
00:22:57,919 --> 00:22:59,679
anything on the bus you're allowed to

636
00:22:59,679 --> 00:23:02,240
read but you cannot

637
00:23:02,240 --> 00:23:04,240
do or say anything on the bus you cannot

638
00:23:04,240 --> 00:23:06,880
send errors you cannot send packets you

639
00:23:06,880 --> 00:23:09,039
cannot interfere with the bus anymore

640
00:23:09,039 --> 00:23:10,480
because you are cursed you are

641
00:23:10,480 --> 00:23:12,400
considered faulty

642
00:23:12,400 --> 00:23:14,640
now

643
00:23:15,039 --> 00:23:16,960
if you remember what i mentioned before

644
00:23:16,960 --> 00:23:18,799
i said that you can overwrite a zero

645
00:23:18,799 --> 00:23:22,080
with a one with a zero right

646
00:23:22,080 --> 00:23:24,640
so how can an attacker

647
00:23:24,640 --> 00:23:27,760
exploit this to obtain

648
00:23:27,760 --> 00:23:30,000
that an ecu that he wants is not talking

649
00:23:30,000 --> 00:23:31,360
anymore

650
00:23:31,360 --> 00:23:33,760
well the idea is pretty simple if you

651
00:23:33,760 --> 00:23:35,600
have a way to send

652
00:23:35,600 --> 00:23:37,440
a zero while someone else is sending a

653
00:23:37,440 --> 00:23:38,400
one

654
00:23:38,400 --> 00:23:40,159
by the way outside of the arbitration

655
00:23:40,159 --> 00:23:42,240
phase where where i mentioned that

656
00:23:42,240 --> 00:23:44,799
you're actually going to have devices

657
00:23:44,799 --> 00:23:47,039
sending zeros on top of other of other

658
00:23:47,039 --> 00:23:50,240
devices once but while an ecu is sending

659
00:23:50,240 --> 00:23:51,840
a payload

660
00:23:51,840 --> 00:23:53,919
you can send a zero on top of its one

661
00:23:53,919 --> 00:23:55,919
and since the ecu thinks that there is

662
00:23:55,919 --> 00:23:57,039
no way

663
00:23:57,039 --> 00:23:59,200
that someone else is talking because we

664
00:23:59,200 --> 00:24:01,679
are in a secure environment

665
00:24:01,679 --> 00:24:04,080
then that is you will think that yellow

666
00:24:04,080 --> 00:24:06,000
was made by itself and will send a

667
00:24:06,000 --> 00:24:07,840
narrow flag and will increase its

668
00:24:07,840 --> 00:24:08,799
counter

669
00:24:08,799 --> 00:24:10,720
so your whole process

670
00:24:10,720 --> 00:24:12,320
will be that you discover the idea of

671
00:24:12,320 --> 00:24:13,919
the victim of the issue that you want to

672
00:24:13,919 --> 00:24:15,120
attack right

673
00:24:15,120 --> 00:24:16,400
you

674
00:24:16,400 --> 00:24:18,000
and this is going to be done by reverse

675
00:24:18,000 --> 00:24:21,440
engineering usually you detect that id

676
00:24:21,440 --> 00:24:23,520
passing on a bus you wait for the id to

677
00:24:23,520 --> 00:24:25,919
finish in order for this you to be ready

678
00:24:25,919 --> 00:24:28,320
to consider a zero

679
00:24:28,320 --> 00:24:31,360
written on top of a one as an arrow

680
00:24:31,360 --> 00:24:33,039
you find a one

681
00:24:33,039 --> 00:24:36,320
you overwrite it with a zero

682
00:24:36,559 --> 00:24:38,000
and you repeat this 32 times and you

683
00:24:38,000 --> 00:24:39,600
repeat this 32 times just because

684
00:24:39,600 --> 00:24:41,440
there's

685
00:24:41,440 --> 00:24:43,039
okay now it's written here

686
00:24:43,039 --> 00:24:44,640
this arrow

687
00:24:44,640 --> 00:24:46,400
increases the counter of fade so if i

688
00:24:46,400 --> 00:24:48,320
repeat it 32 times

689
00:24:48,320 --> 00:24:51,919
32 times 8 we have we are at 256 and the

690
00:24:51,919 --> 00:24:53,760
ecu is bus off

691
00:24:53,760 --> 00:24:55,440
and at this moment this use stops

692
00:24:55,440 --> 00:24:57,200
talking

693
00:24:57,200 --> 00:24:59,600
so i'm really hoping that the

694
00:24:59,600 --> 00:25:02,000
demo works i mean it's not live but i'm

695
00:25:02,000 --> 00:25:02,799
still

696
00:25:02,799 --> 00:25:04,640
worried that the video will not start we

697
00:25:04,640 --> 00:25:06,799
implemented this a while ago this is a

698
00:25:06,799 --> 00:25:07,919
proof of concept but we actually

699
00:25:07,919 --> 00:25:11,679
implemented it on alpha julieta

700
00:25:12,080 --> 00:25:13,600
and we aimed at the parking sensor

701
00:25:13,600 --> 00:25:14,880
module just because it's safe and the

702
00:25:14,880 --> 00:25:16,240
power in the alpha like worst case

703
00:25:16,240 --> 00:25:18,000
scenario the parking sensor module stops

704
00:25:18,000 --> 00:25:20,080
working and yeah ferguleta still works

705
00:25:20,080 --> 00:25:21,919
and the alpha julieta was of someone so

706
00:25:21,919 --> 00:25:23,520
we wanted to be sure that we were not

707
00:25:23,520 --> 00:25:25,840
breaking anything right

708
00:25:25,840 --> 00:25:27,679
so the first stop is the first step that

709
00:25:27,679 --> 00:25:29,440
i mentioned was reverse engineering and

710
00:25:29,440 --> 00:25:31,600
this is done with the parks with a

711
00:25:31,600 --> 00:25:33,200
parking sensor module is pretty straight

712
00:25:33,200 --> 00:25:35,360
forward you attach a computer to the

713
00:25:35,360 --> 00:25:37,440
to the vehicle you read the can bus

714
00:25:37,440 --> 00:25:39,200
messages that are passing and you start

715
00:25:39,200 --> 00:25:40,559
going closer to the vehicle and further

716
00:25:40,559 --> 00:25:43,120
away and you see which id changes

717
00:25:43,120 --> 00:25:44,559
right at a certain point you will

718
00:25:44,559 --> 00:25:48,159
understand which one is the correct id

719
00:25:48,159 --> 00:25:51,159
and

720
00:26:02,159 --> 00:26:04,480
so as you can see on the screen

721
00:26:04,480 --> 00:26:06,400
like we have a camera

722
00:26:06,400 --> 00:26:10,240
filming the screen where

723
00:26:10,240 --> 00:26:13,120
for now it works

724
00:26:14,720 --> 00:26:17,600
it's really annoying

725
00:26:19,200 --> 00:26:20,559
this is by the way implemented on

726
00:26:20,559 --> 00:26:22,799
arduino although i will mention that

727
00:26:22,799 --> 00:26:24,240
you're probably not going to be able to

728
00:26:24,240 --> 00:26:26,720
do it with an arduino on more

729
00:26:26,720 --> 00:26:29,120
on faster connectors which you may find

730
00:26:29,120 --> 00:26:32,678
in general in cars

731
00:26:39,120 --> 00:26:40,480
and as soon as you attach it and the

732
00:26:40,480 --> 00:26:42,640
first time the parking gas the pump the

733
00:26:42,640 --> 00:26:44,960
parking sensor tries

734
00:26:44,960 --> 00:26:46,880
to send the message we kill that message

735
00:26:46,880 --> 00:26:49,200
we kill the ecu and now the parking

736
00:26:49,200 --> 00:26:51,600
sensor does not work anymore so if you

737
00:26:51,600 --> 00:26:54,000
try to go in reverse you know nothing

738
00:26:54,000 --> 00:26:56,159
now

739
00:26:56,559 --> 00:26:58,320
as i mentioned before

740
00:26:58,320 --> 00:27:01,520
this is definitely not dangerous

741
00:27:01,520 --> 00:27:04,080
because the vehicle was our vehicle

742
00:27:04,080 --> 00:27:06,320
but the same thing you can do with every

743
00:27:06,320 --> 00:27:08,320
single device inside the vehicle as long

744
00:27:08,320 --> 00:27:10,080
as it is connected to the same connect

745
00:27:10,080 --> 00:27:11,760
car netcam

746
00:27:11,760 --> 00:27:14,480
to the same can network to which you are

747
00:27:14,480 --> 00:27:15,600
connected

748
00:27:15,600 --> 00:27:17,919
and the problem of this attack

749
00:27:17,919 --> 00:27:19,120
is that

750
00:27:19,120 --> 00:27:22,080
it is intrinsic of the protocol so you

751
00:27:22,080 --> 00:27:24,000
cannot do anything about it you cannot

752
00:27:24,000 --> 00:27:26,720
remove it there's no way to remove this

753
00:27:26,720 --> 00:27:29,039
because it exploits the vulnerability of

754
00:27:29,039 --> 00:27:31,600
in the in the concept of how do i

755
00:27:31,600 --> 00:27:34,000
remove a faulty device from the network

756
00:27:34,000 --> 00:27:36,960
itself either we remove the possibility

757
00:27:36,960 --> 00:27:40,640
of having the the faulty device handled

758
00:27:40,640 --> 00:27:42,640
or we cannot remove this for how it is

759
00:27:42,640 --> 00:27:45,520
implemented right now

760
00:27:46,159 --> 00:27:48,799
really briefly i will go through this in

761
00:27:48,799 --> 00:27:51,919
a short second just there's two ways to

762
00:27:51,919 --> 00:27:54,159
with which you can exploit this one as i

763
00:27:54,159 --> 00:27:55,919
did not yet mention is

764
00:27:55,919 --> 00:27:58,559
super simple we are foreseeing the idea

765
00:27:58,559 --> 00:28:00,240
of having run somewhere on vehicles too

766
00:28:00,240 --> 00:28:02,159
in a while we just have the issue of

767
00:28:02,159 --> 00:28:03,679
connecting to the infotainment system

768
00:28:03,679 --> 00:28:05,760
and explaining to the people why the car

769
00:28:05,760 --> 00:28:08,240
is not starting because we can stop the

770
00:28:08,240 --> 00:28:09,679
the car from starting

771
00:28:09,679 --> 00:28:12,080
we have the issues of how can i explain

772
00:28:12,080 --> 00:28:14,000
to people that they need to pay me for

773
00:28:14,000 --> 00:28:15,360
the car to start again

774
00:28:15,360 --> 00:28:17,200
right but generally speaking it's super

775
00:28:17,200 --> 00:28:19,039
simple will you have a

776
00:28:19,039 --> 00:28:21,120
you will have a how do you call it

777
00:28:21,120 --> 00:28:23,679
an engine an ignition module right that

778
00:28:23,679 --> 00:28:25,360
is connected to the keys and that will

779
00:28:25,360 --> 00:28:27,360
tell to the engine module hey start a

780
00:28:27,360 --> 00:28:29,600
car if you kill that message the car

781
00:28:29,600 --> 00:28:32,080
does not start

782
00:28:32,080 --> 00:28:33,919
and the second more interesting attack

783
00:28:33,919 --> 00:28:36,399
though because it enables you to do many

784
00:28:36,399 --> 00:28:38,799
more things is what i started to mention

785
00:28:38,799 --> 00:28:41,840
before you can do this

786
00:28:41,840 --> 00:28:44,960
to shut down an ecu and talk on behalf

787
00:28:44,960 --> 00:28:45,840
of it

788
00:28:45,840 --> 00:28:47,679
and this will enable you

789
00:28:47,679 --> 00:28:49,679
to not be detected basically from the

790
00:28:49,679 --> 00:28:51,679
majority of countermeasures that we are

791
00:28:51,679 --> 00:28:54,000
already implementing not every single

792
00:28:54,000 --> 00:28:55,440
possible country measure there are

793
00:28:55,440 --> 00:28:59,120
counter measures that will detect it

794
00:28:59,120 --> 00:29:01,039
from an academic point of view but they

795
00:29:01,039 --> 00:29:02,640
are not implemented definitely not for

796
00:29:02,640 --> 00:29:05,600
now not for a while

797
00:29:06,240 --> 00:29:06,960
now

798
00:29:06,960 --> 00:29:08,960
the last time that i made this book a

799
00:29:08,960 --> 00:29:12,720
talk similar to this one

800
00:29:12,720 --> 00:29:14,240
my answer to this question to the

801
00:29:14,240 --> 00:29:15,919
question can we do this from remote was

802
00:29:15,919 --> 00:29:17,440
no that was the

803
00:29:17,440 --> 00:29:19,440
weakness of this attack we had to

804
00:29:19,440 --> 00:29:22,000
connect to the cables because

805
00:29:22,000 --> 00:29:23,520
as you can see on the right if you

806
00:29:23,520 --> 00:29:25,520
remember the image from before

807
00:29:25,520 --> 00:29:28,640
the can controller

808
00:29:28,640 --> 00:29:31,039
blocks us from sending only once and

809
00:29:31,039 --> 00:29:32,640
zeros

810
00:29:32,640 --> 00:29:34,480
basically from this from the software

811
00:29:34,480 --> 00:29:36,799
you can only say to the controller hey

812
00:29:36,799 --> 00:29:38,960
this is an id this is a payload send

813
00:29:38,960 --> 00:29:41,200
that idm payload on the bus you are not

814
00:29:41,200 --> 00:29:43,039
allowed to send one single bit you are

815
00:29:43,039 --> 00:29:45,360
not allowed to choose how to exactly

816
00:29:45,360 --> 00:29:47,360
what to write

817
00:29:47,360 --> 00:29:48,799
however

818
00:29:48,799 --> 00:29:50,399
since last year we actually have two

819
00:29:50,399 --> 00:29:52,799
different ways to do this from remote

820
00:29:52,799 --> 00:29:55,360
the first one is on the left and it's

821
00:29:55,360 --> 00:29:57,120
actually pretty genius i'll do it i

822
00:29:57,120 --> 00:29:59,360
would say it's not really

823
00:29:59,360 --> 00:30:02,399
real world ready and the idea is

824
00:30:02,399 --> 00:30:04,080
the can controller as everything else is

825
00:30:04,080 --> 00:30:05,919
a device inside the silicon so what you

826
00:30:05,919 --> 00:30:07,520
can do is just

827
00:30:07,520 --> 00:30:10,559
hold it's its clock state

828
00:30:10,559 --> 00:30:12,399
and if you hold the clock state the

829
00:30:12,399 --> 00:30:14,399
clock does not change the device does

830
00:30:14,399 --> 00:30:17,039
not work stops working and stands still

831
00:30:17,039 --> 00:30:19,200
in that frame where it is so what you

832
00:30:19,200 --> 00:30:21,039
can do is wait for

833
00:30:21,039 --> 00:30:24,720
send a message on your bus

834
00:30:24,720 --> 00:30:27,120
hold the device shut it down

835
00:30:27,120 --> 00:30:29,760
shut down the device not the whole cpu

836
00:30:29,760 --> 00:30:32,240
wait for the victim to pass on the bus

837
00:30:32,240 --> 00:30:35,279
and as soon as the victim sends a one

838
00:30:35,279 --> 00:30:37,679
turn on the um

839
00:30:37,679 --> 00:30:41,440
say turn on the power to the 2d to the

840
00:30:41,440 --> 00:30:44,399
device to the controller and you will

841
00:30:44,399 --> 00:30:46,799
send a zero on top of something else

842
00:30:46,799 --> 00:30:49,039
obviously this is pretty difficult to do

843
00:30:49,039 --> 00:30:51,520
because you are completely blind on the

844
00:30:51,520 --> 00:30:53,520
bus as long as you have the kind

845
00:30:53,520 --> 00:30:55,919
controller not active right so this is

846
00:30:55,919 --> 00:30:57,519
not really feasible

847
00:30:57,519 --> 00:30:59,760
on complex attacks on i would say in the

848
00:30:59,760 --> 00:31:01,440
while it would become pretty hard to do

849
00:31:01,440 --> 00:31:02,960
now there's a second solution that you

850
00:31:02,960 --> 00:31:05,440
can implement it we actually managed to

851
00:31:05,440 --> 00:31:07,440
do this here i would say and we're

852
00:31:07,440 --> 00:31:09,120
waiting to publish

853
00:31:09,120 --> 00:31:10,720
but it's super simple and it actually

854
00:31:10,720 --> 00:31:14,000
works works really easy as i mentioned

855
00:31:14,000 --> 00:31:15,120
before

856
00:31:15,120 --> 00:31:17,039
there's a

857
00:31:17,039 --> 00:31:18,960
weird weird thing that we do not really

858
00:31:18,960 --> 00:31:21,440
find in any other device where the cam

859
00:31:21,440 --> 00:31:23,519
controller and the can transceiver are

860
00:31:23,519 --> 00:31:25,279
one inside the silicone and the other

861
00:31:25,279 --> 00:31:26,399
outside

862
00:31:26,399 --> 00:31:28,399
so what you can do is basically take the

863
00:31:28,399 --> 00:31:30,640
same pin

864
00:31:30,640 --> 00:31:32,640
on the silicon that connect the can

865
00:31:32,640 --> 00:31:34,799
controller to the can transceiver and as

866
00:31:34,799 --> 00:31:36,640
many of you that work with hardware will

867
00:31:36,640 --> 00:31:38,559
know generally speaking you have many

868
00:31:38,559 --> 00:31:40,320
different devices connected to the same

869
00:31:40,320 --> 00:31:42,640
pin and when you program the firmware of

870
00:31:42,640 --> 00:31:44,240
the device you say

871
00:31:44,240 --> 00:31:47,200
which pins are connected to what right

872
00:31:47,200 --> 00:31:48,720
so you find

873
00:31:48,720 --> 00:31:51,840
another device say it may be a gpiospi

874
00:31:51,840 --> 00:31:53,600
work or whatever and you just switch

875
00:31:53,600 --> 00:31:55,360
them and you say hey you're not gonna

876
00:31:55,360 --> 00:31:57,360
you can transceiver you're not connected

877
00:31:57,360 --> 00:31:59,039
to the kind of controller anymore

878
00:31:59,039 --> 00:32:01,679
you are connected to spi so when i say

879
00:32:01,679 --> 00:32:04,720
one write one when i say zero write zero

880
00:32:04,720 --> 00:32:06,240
and you have complete control on

881
00:32:06,240 --> 00:32:08,000
whatever happens on the bus you can read

882
00:32:08,000 --> 00:32:10,720
everything and you can write everything

883
00:32:10,720 --> 00:32:12,799
right so basically this attack is

884
00:32:12,799 --> 00:32:14,240
completely feasible from remote there

885
00:32:14,240 --> 00:32:16,480
are some limitations obviously but i

886
00:32:16,480 --> 00:32:17,919
lost the

887
00:32:17,919 --> 00:32:19,200
okay sorry

888
00:32:19,200 --> 00:32:20,399
uh there's some limitations but

889
00:32:20,399 --> 00:32:21,600
basically you can implement it from

890
00:32:21,600 --> 00:32:23,919
remote on the majority of devices that

891
00:32:23,919 --> 00:32:27,039
are currently in the wild

892
00:32:29,760 --> 00:32:31,919
can we do something about can we solve

893
00:32:31,919 --> 00:32:33,360
this i mentioned that we cannot really

894
00:32:33,360 --> 00:32:35,120
solve the problem because it's intrinsic

895
00:32:35,120 --> 00:32:36,799
but can we do something to patch it can

896
00:32:36,799 --> 00:32:38,960
we do something to mitigate it

897
00:32:38,960 --> 00:32:40,880
uh i will propose two things to the

898
00:32:40,880 --> 00:32:43,679
virtue detection slash prevention

899
00:32:43,679 --> 00:32:45,679
systems probably there are others that

900
00:32:45,679 --> 00:32:47,840
you may discuss that may work also on

901
00:32:47,840 --> 00:32:49,519
this although they are not designed for

902
00:32:49,519 --> 00:32:50,960
this

903
00:32:50,960 --> 00:32:52,880
the first one

904
00:32:52,880 --> 00:32:54,320
basically it's a nutrition detection

905
00:32:54,320 --> 00:32:57,600
system that we designed last year

906
00:32:57,600 --> 00:32:59,039
and this is the annoying part of it

907
00:32:59,039 --> 00:33:01,679
which i'm not going through definitely

908
00:33:01,679 --> 00:33:02,640
um

909
00:33:02,640 --> 00:33:05,519
this is all the rules on one device that

910
00:33:05,519 --> 00:33:07,760
will change its transmitter or counter

911
00:33:07,760 --> 00:33:09,200
and its receiving level counter which

912
00:33:09,200 --> 00:33:11,200
are the actual two counters that decide

913
00:33:11,200 --> 00:33:13,200
whether an issue goes bus off

914
00:33:13,200 --> 00:33:14,080
okay

915
00:33:14,080 --> 00:33:16,159
this is how they are defined on the

916
00:33:16,159 --> 00:33:17,760
canned protocol

917
00:33:17,760 --> 00:33:19,039
now

918
00:33:19,039 --> 00:33:20,799
if you study them and i did that and i

919
00:33:20,799 --> 00:33:22,000
did it for you so we're not going

920
00:33:22,000 --> 00:33:23,039
through them

921
00:33:23,039 --> 00:33:24,720
you can understand which ones you need

922
00:33:24,720 --> 00:33:26,880
to understand

923
00:33:26,880 --> 00:33:28,799
and then you can decide

924
00:33:28,799 --> 00:33:30,720
what to read under what yeah what to

925
00:33:30,720 --> 00:33:33,440
read on the bus so basically i'll skip

926
00:33:33,440 --> 00:33:35,840
this you can create something like this

927
00:33:35,840 --> 00:33:37,840
that follows what's happening on the bus

928
00:33:37,840 --> 00:33:39,840
bit by bit

929
00:33:39,840 --> 00:33:42,960
and counts alongside each ecu

930
00:33:42,960 --> 00:33:45,120
it's transmittable counter so basically

931
00:33:45,120 --> 00:33:48,000
you are checking every id that passes

932
00:33:48,000 --> 00:33:49,919
and then checking whether

933
00:33:49,919 --> 00:33:52,399
um there's an error in that id if there

934
00:33:52,399 --> 00:33:54,080
is an error increase the error counter

935
00:33:54,080 --> 00:33:55,600
if there's not an error decrease the

936
00:33:55,600 --> 00:33:57,679
error counter

937
00:33:57,679 --> 00:33:59,039
in the correct way

938
00:33:59,039 --> 00:34:00,799
and at this point what you can do is

939
00:34:00,799 --> 00:34:02,799
understand when an issue goes bust off

940
00:34:02,799 --> 00:34:03,679
right

941
00:34:03,679 --> 00:34:04,559
now

942
00:34:04,559 --> 00:34:06,320
up to now you cannot do anything else

943
00:34:06,320 --> 00:34:08,000
you cannot save this an attack or not

944
00:34:08,000 --> 00:34:11,520
because technically an su can go bus off

945
00:34:11,520 --> 00:34:15,040
because of dcu's fault

946
00:34:15,040 --> 00:34:16,079
but

947
00:34:16,079 --> 00:34:18,000
you can at least so you will not be able

948
00:34:18,000 --> 00:34:19,599
for example to recognize the ransomware

949
00:34:19,599 --> 00:34:22,239
attack scenario

950
00:34:22,239 --> 00:34:23,839
but if the attacker wants to speak on

951
00:34:23,839 --> 00:34:25,918
behalf of the ecu it will have to send

952
00:34:25,918 --> 00:34:28,320
ideas that are related to that issue

953
00:34:28,320 --> 00:34:30,320
while the ecu is passed off

954
00:34:30,320 --> 00:34:32,800
so what you can do is just listen again

955
00:34:32,800 --> 00:34:34,879
on the bus while the issue is bus off

956
00:34:34,879 --> 00:34:37,280
and if you see any kind of id that that

957
00:34:37,280 --> 00:34:41,839
ecu was tasked to send say

958
00:34:41,918 --> 00:34:43,119
the

959
00:34:43,119 --> 00:34:44,639
ignition

960
00:34:44,639 --> 00:34:47,679
command from the ignition module

961
00:34:47,679 --> 00:34:50,000
well while the ignition module is

962
00:34:50,000 --> 00:34:53,040
not active you are sure that that that

963
00:34:53,040 --> 00:34:54,719
message is not arriving from the correct

964
00:34:54,719 --> 00:34:56,480
issue right

965
00:34:56,480 --> 00:34:58,079
so that is a partial solution however

966
00:34:58,079 --> 00:34:59,920
because our problem at the moment is

967
00:34:59,920 --> 00:35:02,640
that

968
00:35:02,640 --> 00:35:04,560
you really cannot recognize the bus of

969
00:35:04,560 --> 00:35:06,800
attack now i will mention another one

970
00:35:06,800 --> 00:35:08,560
before finishing thankfully i'm actually

971
00:35:08,560 --> 00:35:10,400
pretty pretty early

972
00:35:10,400 --> 00:35:12,400
i'll mention another one which is a

973
00:35:12,400 --> 00:35:14,079
solution found by nxp which is not

974
00:35:14,079 --> 00:35:15,520
exactly for this problem but perfectly

975
00:35:15,520 --> 00:35:16,720
solves it

976
00:35:16,720 --> 00:35:18,720
the issue of this solution is that it

977
00:35:18,720 --> 00:35:20,960
has to be implemented on and on any

978
00:35:20,960 --> 00:35:23,200
single device on the car and as i

979
00:35:23,200 --> 00:35:24,880
mentioned at the beginning

980
00:35:24,880 --> 00:35:27,119
cars have to be cheap

981
00:35:27,119 --> 00:35:30,480
and we have tens of devices on each car

982
00:35:30,480 --> 00:35:32,160
but the idea is that you can implement a

983
00:35:32,160 --> 00:35:33,920
transceiver that checks what you're

984
00:35:33,920 --> 00:35:36,960
sending after exiting the silicon

985
00:35:36,960 --> 00:35:39,839
so what this does is basically it has a

986
00:35:39,839 --> 00:35:41,520
blacklist now

987
00:35:41,520 --> 00:35:43,839
an output and a whitelisting input that

988
00:35:43,839 --> 00:35:45,520
checks whether i am allowed to send

989
00:35:45,520 --> 00:35:47,520
something and everything that passes on

990
00:35:47,520 --> 00:35:49,440
the bus is of my interests

991
00:35:49,440 --> 00:35:50,240
but

992
00:35:50,240 --> 00:35:53,200
by doing this if i only say hey write a

993
00:35:53,200 --> 00:35:55,440
one it will not do it because this is

994
00:35:55,440 --> 00:35:57,760
not a valid packet and this perfectly

995
00:35:57,760 --> 00:35:59,280
solves the problem

996
00:35:59,280 --> 00:36:01,520
okay

997
00:36:02,240 --> 00:36:05,280
nice so i was pretty early thankfully

998
00:36:05,280 --> 00:36:08,480
because i was late at the beginning

999
00:36:08,880 --> 00:36:10,640
what can we get from this really brief

1000
00:36:10,640 --> 00:36:11,839
comment

1001
00:36:11,839 --> 00:36:12,880
is that

1002
00:36:12,880 --> 00:36:15,280
first can has to be changed and that

1003
00:36:15,280 --> 00:36:16,960
this every time we

1004
00:36:16,960 --> 00:36:18,640
go and talk with

1005
00:36:18,640 --> 00:36:22,240
manufacturers and start with a point

1006
00:36:22,240 --> 00:36:23,760
well but if you change can with

1007
00:36:23,760 --> 00:36:26,720
something else you fix the issues

1008
00:36:26,720 --> 00:36:28,240
do they usually turn around because the

1009
00:36:28,240 --> 00:36:30,000
problem is that it's too expensive to do

1010
00:36:30,000 --> 00:36:31,760
at least immediately you will you will

1011
00:36:31,760 --> 00:36:33,440
slowly see that

1012
00:36:33,440 --> 00:36:37,599
if automotive internet is replacing can

1013
00:36:37,920 --> 00:36:40,160
can excel it will maybe replace can but

1014
00:36:40,160 --> 00:36:41,680
probably will have the same issues

1015
00:36:41,680 --> 00:36:44,560
because it starts from the same point

1016
00:36:44,560 --> 00:36:46,240
nonetheless

1017
00:36:46,240 --> 00:36:48,320
can is broken you can do everything that

1018
00:36:48,320 --> 00:36:49,920
i've done on your vehicle if you want

1019
00:36:49,920 --> 00:36:52,079
it's pretty pretty easy i would say as

1020
00:36:52,079 --> 00:36:53,599
long as you have physical connection the

1021
00:36:53,599 --> 00:36:57,839
only difficult side is getting there by

1022
00:36:57,839 --> 00:36:59,599
finding vulnerabilities in some devices

1023
00:36:59,599 --> 00:37:01,280
but this is something that you can try

1024
00:37:01,280 --> 00:37:03,280
at home you can play with your car just

1025
00:37:03,280 --> 00:37:06,000
remember that

1026
00:37:06,000 --> 00:37:08,320
as they did not control all the side

1027
00:37:08,320 --> 00:37:10,400
effects of ken they probably did not

1028
00:37:10,400 --> 00:37:12,320
control all the side effects of sending

1029
00:37:12,320 --> 00:37:14,000
wrong messages on the bus

1030
00:37:14,000 --> 00:37:15,520
so you are not really sure what you're

1031
00:37:15,520 --> 00:37:17,760
doing and what are the consequences on

1032
00:37:17,760 --> 00:37:20,400
your car or of your weird messages that

1033
00:37:20,400 --> 00:37:22,720
you're sending or issues used that you

1034
00:37:22,720 --> 00:37:24,720
are healing aside that

1035
00:37:24,720 --> 00:37:26,800
i would strongly suggest to enjoy trying

1036
00:37:26,800 --> 00:37:28,640
hacking some vehicles thank you very

1037
00:37:28,640 --> 00:37:31,640
much

1038
00:37:38,480 --> 00:37:40,560
you

