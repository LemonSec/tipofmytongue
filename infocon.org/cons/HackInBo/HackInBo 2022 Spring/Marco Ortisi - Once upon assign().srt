1
00:00:10,110 --> 00:00:12,660
and now we have parco ortisi a good

2
00:00:12,660 --> 00:00:14,190
soap sign

3
00:00:14,190 --> 00:00:17,240
thank you marco

4
00:00:17,830 --> 00:00:19,960
yes yes an applause of encouragement

5
00:00:19,960 --> 00:00:21,090
thank you

6
00:00:21,090 --> 00:00:25,330
[Applause]

7
00:00:25,330 --> 00:00:30,050
you are beautiful asleep true after two

8
00:00:30,050 --> 00:00:33,650
hours of talk so I'll take care of giving you

9
00:00:33,650 --> 00:00:35,290
the final blow

10
00:00:35,290 --> 00:00:38,290
before lunch then I want to

11
00:00:38,290 --> 00:00:41,690
tell you the story of amat e  about

12
00:00:41,690 --> 00:00:44,769
baked chicken with potatoes

13
00:00:44,840 --> 00:00:47,629
say it has to do with it has to do with it a

14
00:00:47,629 --> 00:00:48,700
few years ago he

15
00:00:48,700 --> 00:00:51,739
worked abroad and I was

16
00:00:51,739 --> 00:00:56,300
asked to set up a team that

17
00:00:56,300 --> 00:01:00,290
dealt with offensive security from scratch and as a

18
00:01:00,290 --> 00:01:02,630
mad he was an Egyptian boy who  i had

19
00:01:02,630 --> 00:01:05,899
personally selected evolved as

20
00:01:05,899 --> 00:01:09,170
mertin the company she worked for

21
00:01:09,170 --> 00:01:10,360
mo

22
00:01:10,360 --> 00:01:14,080
offered as the location package a

23
00:01:14,080 --> 00:01:16,910
temporary apartment for about a

24
00:01:16,910 --> 00:01:18,729
month a month and a half which

25
00:01:18,729 --> 00:01:22,010
basically would have given us time

26
00:01:22,010 --> 00:01:24,770
to find a definitive accommodation

27
00:01:24,770 --> 00:01:27,130
and ahmad had been

28
00:01:27,130 --> 00:01:29,360
substantially assigned  an apartment in the

29
00:01:29,360 --> 00:01:31,820
same condominium where the undersigned lived

30
00:01:31,820 --> 00:01:33,439


31
00:01:33,439 --> 00:01:35,170
we are in the Netherlands

32
00:01:35,170 --> 00:01:38,170
and

33
00:01:38,409 --> 00:01:41,470
let's say that it was a

34
00:01:41,470 --> 00:01:44,990
temporary apartment also

35
00:01:44,990 --> 00:01:46,340
my place to live was now a

36
00:01:46,340 --> 00:01:48,290
temporary apartment, even a good one,

37
00:01:48,290 --> 00:01:50,240
which I was able to convert, however, into a

38
00:01:50,240 --> 00:01:52,970
fixed location because I liked

39
00:01:52,970 --> 00:01:54,409
quiet places and that was

40
00:01:54,409 --> 00:01:56,570
such a peaceful place that before the episode

41
00:01:56,570 --> 00:01:58,810
I'm about to tell you I had never

42
00:01:58,810 --> 00:02:02,600
seen any of the  my neighbors on the first

43
00:02:02,600 --> 00:02:06,100
day I met ahmad at work

44
00:02:06,100 --> 00:02:09,020
I discover that not only has he been

45
00:02:09,020 --> 00:02:11,120
assigned a temporary apartment in

46
00:02:11,120 --> 00:02:13,190
my same condominium but even on

47
00:02:13,190 --> 00:02:16,610
my same floor the 3d apartment two

48
00:02:16,610 --> 00:02:19,570
doors to the left of mine

49
00:02:19,570 --> 00:02:22,490
talking to him on that first day

50
00:02:22,490 --> 00:02:23,680
of his  work

51
00:02:23,680 --> 00:02:26,450
let's say he confided to me that he felt a bit

52
00:02:26,450 --> 00:02:28,220
confused because he had to leave

53
00:02:28,220 --> 00:02:31,970
his wife and daughter in Egypt and he also confided to me

54
00:02:31,970 --> 00:02:33,280
that he

55
00:02:33,280 --> 00:02:36,440
had a terrible fear he had never

56
00:02:36,440 --> 00:02:38,750
cooked once in his life he was

57
00:02:38,750 --> 00:02:41,930
terrified of this thing so in

58
00:02:41,930 --> 00:02:44,660
an attempt to calm him and

59
00:02:44,660 --> 00:02:47,600
to put him at ease I tell him that evening

60
00:02:47,600 --> 00:02:49,370
I would have prepared the baked chicken he

61
00:02:49,370 --> 00:02:51,200
bought with potatoes he would have

62
00:02:51,200 --> 00:02:53,060
I prepared a dish and once it was ready

63
00:02:53,060 --> 00:02:55,660
I would not have called on the phone

64
00:02:55,660 --> 00:02:58,250
come out of work back home I go

65
00:02:58,250 --> 00:03:00,760
to the supermarket to do the shopping

66
00:03:00,760 --> 00:03:02,690
back home I also start

67
00:03:02,690 --> 00:03:05,360
cooking at eight in the evening the chicken in the

68
00:03:05,360 --> 00:03:08,120
oven with potatoes and ready I call it the

69
00:03:08,120 --> 00:03:10,370
phone the phone but the phone rings

70
00:03:10,370 --> 00:03:12,590
incessantly he does not answer I wait

71
00:03:12,590 --> 00:03:16,760
15 minutes and after a while I tell myself you know

72
00:03:16,760 --> 00:03:20,390
he lives in the apartment 3d two doors

73
00:03:20,390 --> 00:03:22,610
next to mine I go to bring him

74
00:03:22,610 --> 00:03:25,220
the plate directly and so we make

75
00:03:25,220 --> 00:03:28,010
the door of the house I walk the short distance

76
00:03:28,010 --> 00:03:29,989
stretch of corridor that separates me from his

77
00:03:29,989 --> 00:03:32,480
apartment I come in front of his

78
00:03:32,480 --> 00:03:34,540
door and knock

79
00:03:34,540 --> 00:03:38,060
after a while the door opens

80
00:03:38,060 --> 00:03:40,580
in front of me a girl comes

81
00:03:40,580 --> 00:03:43,130
out of a playboy cover six

82
00:03:43,130 --> 00:03:46,400
feet high without a bit of

83
00:03:46,400 --> 00:03:49,400
grease on her with  only a small

84
00:03:49,400 --> 00:03:52,010
piece of cloth that covered her breasts and

85
00:03:52,010 --> 00:03:54,549
another one that scripts

86
00:03:54,549 --> 00:03:59,720
her private parts she looks at me as if to say you want I

87
00:03:59,720 --> 00:04:03,350
look at her holding the plate with

88
00:04:03,350 --> 00:04:05,840
the baked chicken and  the potatoes and the only

89
00:04:05,840 --> 00:04:07,989
thing I can say

90
00:04:07,989 --> 00:04:11,470
to hamas

91
00:04:11,650 --> 00:04:15,170
while I do it I hand her the plate

92
00:04:15,170 --> 00:04:18,230
point she looks at it a little disgusted and

93
00:04:18,230 --> 00:04:20,970
tells me here there are no boom and slams

94
00:04:20,970 --> 00:04:22,770
the door in my face also giving two

95
00:04:22,770 --> 00:04:24,440
throws you call

96
00:04:24,440 --> 00:04:27,810
while  beaten back I

97
00:04:27,810 --> 00:04:29,970
reverse the path the corridor

98
00:04:29,970 --> 00:04:32,100
goes back to my apartment

99
00:04:32,100 --> 00:04:33,660
I try to rationalize what I have just

100
00:04:33,660 --> 00:04:37,320
seen maybe you love you feel a little lonely I

101
00:04:37,320 --> 00:04:39,510
say to myself without his wife and daughter

102
00:04:39,510 --> 00:04:41,490
maybe he is just looking for a little

103
00:04:41,490 --> 00:04:45,090
comfort and company later  half an hour he

104
00:04:45,090 --> 00:04:47,640
calls me back and apologizing Marco was in

105
00:04:47,640 --> 00:04:49,850
the shower I didn't hear you I

106
00:04:49,850 --> 00:04:52,710
'm coming now to get my chicken and I'll

107
00:04:52,710 --> 00:04:55,620
bring back the clean plate later a few

108
00:04:55,620 --> 00:04:57,870
minutes later there is a knock on the door and he

109
00:04:57,870 --> 00:05:01,800
I give him the dish he important thing

110
00:05:01,800 --> 00:05:04,020
to  phone makes no mention of the

111
00:05:04,020 --> 00:05:06,320
half-naked woman in the lonely at his

112
00:05:06,320 --> 00:05:08,700
door I give him this plate of chicken he

113
00:05:08,700 --> 00:05:11,520
thanks me and more cheerful than usual he

114
00:05:11,520 --> 00:05:14,220
goes away whistling I believe that lorenzo is attached

115
00:05:14,220 --> 00:05:15,860
3 mm

116
00:05:15,860 --> 00:05:18,840
while I am about to close the p  home garden,

117
00:05:18,840 --> 00:05:22,560
however, having caught a surge of strong

118
00:05:22,560 --> 00:05:24,330
curiosity that apparently sometimes it

119
00:05:24,330 --> 00:05:28,530
is not only a woman and I say to myself I have to see

120
00:05:28,530 --> 00:05:29,940
ahmad enter with my eyes

121
00:05:29,940 --> 00:05:32,520
in the 3d apartment and then I stealthily reopen

122
00:05:32,520 --> 00:05:33,780
the door so as not to

123
00:05:33,780 --> 00:05:35,850
notice I look at  left

124
00:05:35,850 --> 00:05:37,410
where apartment 3 rite of history in

125
00:05:37,410 --> 00:05:38,940
this corridor and already I no longer see

126
00:05:38,940 --> 00:05:41,790
him so perplexed he looks to the right and

127
00:05:41,790 --> 00:05:43,590
I see him turn the corner on that side

128
00:05:43,590 --> 00:05:47,870
I say to myself ahmad he's trying to mislead them

129
00:05:47,870 --> 00:05:52,880
so I follow him 44

130
00:05:52,880 --> 00:05:54,410
and

131
00:05:54,410 --> 00:05:57,050
you must know that this  condominium

132
00:05:57,050 --> 00:06:00,180
substantially each floor was composed

133
00:06:00,180 --> 00:06:02,520
of a square corridor

134
00:06:02,520 --> 00:06:05,310
so there were 45 mini apartments

135
00:06:05,310 --> 00:06:07,730
per side

136
00:06:07,730 --> 00:06:10,290
I see after a while turn to but from the

137
00:06:10,290 --> 00:06:13,950
next corridor and my intuition

138
00:06:13,950 --> 00:06:16,800
is in

139
00:06:16,800 --> 00:06:18,389
a certain sense the suspicions are somewhat

140
00:06:18,389 --> 00:06:21,599
reinforced I think ahmad wants to be

141
00:06:21,599 --> 00:06:23,490
cautious  you are trying to go around the

142
00:06:23,490 --> 00:06:25,020
corridor to go back to the

143
00:06:25,020 --> 00:06:27,300
3d apartment but I don't do it and time to

144
00:06:27,300 --> 00:06:31,650
think that opens a door as soon as you

145
00:06:31,650 --> 00:06:33,440
turn the c  corridor

146
00:06:33,440 --> 00:06:36,360
viii enters inside and closes it behind

147
00:06:36,360 --> 00:06:37,009
him

148
00:06:37,009 --> 00:06:39,560
apartment 3m

149
00:06:39,560 --> 00:06:43,229
3m is different from 3d

150
00:06:43,229 --> 00:06:45,139
I had taken a crazy blunder it

151
00:06:45,139 --> 00:06:47,849
was all a big misunderstanding in

152
00:06:47,849 --> 00:06:49,710
the morning when we talked at

153
00:06:49,710 --> 00:06:51,840
work I don't know why I

154
00:06:51,840 --> 00:06:54,090
understood that he had been assigned

155
00:06:54,090 --> 00:06:55,909
the  3d apartment

156
00:06:55,909 --> 00:06:58,590
when we had simply said

157
00:06:58,590 --> 00:07:00,900
instead that he had been given

158
00:07:00,900 --> 00:07:04,740
the apartment on the third floor and

159
00:07:04,740 --> 00:07:08,120
consequently when I had found

160
00:07:08,120 --> 00:07:12,000
the half-naked girl at the 3d apartment

161
00:07:12,000 --> 00:07:13,770
the conclusion I had

162
00:07:13,770 --> 00:07:15,479
basically reached that ahmad was

163
00:07:15,479 --> 00:07:17,460
accompanying escorts let's say

164
00:07:17,460 --> 00:07:21,659
it was in a  some sense on

165
00:07:21,659 --> 00:07:24,779
frigate and the most logical solution and it

166
00:07:24,779 --> 00:07:26,880
was seemed to be supported by a

167
00:07:26,880 --> 00:07:28,490
series of small clues in

168
00:07:28,490 --> 00:07:31,289
the morning at work he was sad and

169
00:07:31,289 --> 00:07:32,550
depressed in

170
00:07:32,550 --> 00:07:35,669
the evening he was cheerful and whistled

171
00:07:35,669 --> 00:07:39,830
plus I find the semi-naked girl in 3d

172
00:07:40,319 --> 00:07:41,659
how to say

173
00:07:41,659 --> 00:07:44,279
these clues together with the  also did that

174
00:07:44,279 --> 00:07:46,879
on the phone when he said

175
00:07:46,879 --> 00:07:49,349
sorry I could not answer you because they were

176
00:07:49,349 --> 00:07:51,330
in the shower and  while he was doing it it

177
00:07:51,330 --> 00:07:54,629
seemed to me let's say between the sly and the

178
00:07:54,629 --> 00:07:55,789
amused

179
00:07:55,789 --> 00:07:58,199
they had basically induced me to

180
00:07:58,199 --> 00:07:59,909
take a crazy blunder they had

181
00:07:59,909 --> 00:08:02,669
all been misunderstood elements

182
00:08:02,669 --> 00:08:06,270
now when my mind is

183
00:08:06,270 --> 00:08:09,870
like saying lust to this episode and the

184
00:08:09,870 --> 00:08:12,449
misunderstanding to which it implies makes

185
00:08:12,449 --> 00:08:15,529
a sort of connection with  what I

186
00:08:15,529 --> 00:08:18,360
call the misunderstood vulnerabilities

187
00:08:18,360 --> 00:08:21,060
are vulnerabilities that when you come across you

188
00:08:21,060 --> 00:08:23,219
think they have an impact instead

189
00:08:23,219 --> 00:08:25,560
they have a completely different one for

190
00:08:25,560 --> 00:08:27,899
example you think that their impact is not

191
00:08:27,899 --> 00:08:28,480
known to be

192
00:08:28,480 --> 00:08:30,460
so serious as to allow you to execute

193
00:08:30,460 --> 00:08:34,510
remote code and it is all this by

194
00:08:34,510 --> 00:08:37,990
way  of a byas an initial prejudice

195
00:08:37,990 --> 00:08:41,559
that makes you derelict it to uninteresting stuff only to

196
00:08:41,559 --> 00:08:45,550
then reveal itself perhaps

197
00:08:45,550 --> 00:08:48,340
because rediscovered by someone or

198
00:08:48,340 --> 00:08:50,620
actively abused on the net after months or

199
00:08:50,620 --> 00:08:52,330
even after years

200
00:08:52,330 --> 00:08:55,390
a very serious and

201
00:08:55,390 --> 00:08:57,700
complex vulnerability let's say that it guarantees you a

202
00:08:57,700 --> 00:09:01,750
high level of access

203
00:09:01,750 --> 00:09:04,080
let me

204
00:09:04,080 --> 00:09:06,340
clarify more or less what I mean by

205
00:09:06,340 --> 00:09:08,550
vulnerability  à misunderstood before

206
00:09:08,550 --> 00:09:12,340
reaching the cor del of the talk let's

207
00:09:12,340 --> 00:09:15,370
jump to foot 2 never if you are

208
00:09:15,370 --> 00:09:17,470
curious you can visit my linkedin profile

209
00:09:17,470 --> 00:09:19,770


210
00:09:20,430 --> 00:09:22,720
talking about misunderstood vulnerabilities

211
00:09:22,720 --> 00:09:24,820
I want to introduce you this vulnerability

212
00:09:24,820 --> 00:09:28,210
bright star short star it was a buffer

213
00:09:28,210 --> 00:09:31,050
overflow that has plagued

214
00:09:31,050 --> 00:09:35,080
the implementation of the  net editorial

215
00:09:35,080 --> 00:09:37,660
of the tell dadt linux service a

216
00:09:37,660 --> 00:09:39,310
vulnerability that allows you to

217
00:09:39,310 --> 00:09:42,010
execute remote code and was

218
00:09:42,010 --> 00:09:45,250
disclosed around 2020 there is a

219
00:09:45,250 --> 00:09:47,610
sport for this vulnerability

220
00:09:47,610 --> 00:09:51,250
lost as of now 31 but this explorer

221
00:09:51,250 --> 00:09:55,300
only works if you run it from a

222
00:09:55,300 --> 00:09:57,880
local machine  towards the ok to lost if you

223
00:09:57,880 --> 00:10:00,730
try to launch it to a host on

224
00:10:00,730 --> 00:10:02,410
your network or even to the internet

225
00:10:02,410 --> 00:10:04,710
explorer it does not work

226
00:10:04,710 --> 00:10:08,050
I do a short troubleshooting phase

227
00:10:08,050 --> 00:10:11,020
and this reveals that for logo air

228
00:10:11,020 --> 00:10:13,750
flow to appear I have to make sure that

229
00:10:13,750 --> 00:10:17,700
the server fills a buffer of  8 kg bytes

230
00:10:17,700 --> 00:10:21,010
reading the eight kilobytes with a

231
00:10:21,010 --> 00:10:24,250
read-only act so with a single

232
00:10:24,250 --> 00:10:25,980
car

233
00:10:25,980 --> 00:10:28,330
I could use jumb  o frames that

234
00:10:28,330 --> 00:10:30,670
allow you to insert up to 9 kilobytes

235
00:10:30,670 --> 00:10:32,800
a data packet cole jumbo frames

236
00:10:32,800 --> 00:10:35,140
are not supported by all local networks

237
00:10:35,140 --> 00:10:38,170
also I want these sports to work

238
00:10:38,170 --> 00:10:39,259
on the internet

239
00:10:39,259 --> 00:10:42,839
let's say frames are not an option the

240
00:10:42,839 --> 00:10:45,539
problem at least the fact is that

241
00:10:45,539 --> 00:10:47,399
most of the  our networks works

242
00:10:47,399 --> 00:10:49,829
using the ethernet standard which has

243
00:10:49,829 --> 00:10:51,829
a maximum transmission unit of

244
00:10:51,829 --> 00:10:55,529
1,500 bytes which means that to

245
00:10:55,529 --> 00:10:58,259
transmit 8 kg bytes of data at

246
00:10:58,259 --> 00:11:00,509
best I will have to send if the

247
00:11:00,509 --> 00:11:03,299
packets through the network now

248
00:11:03,299 --> 00:11:06,269
how fast I can do it as

249
00:11:06,269 --> 00:11:08,429
in this example  in this time of

250
00:11:08,429 --> 00:11:09,679
wireshark

251
00:11:09,679 --> 00:11:12,989
I will always receive more than one trick

252
00:11:12,989 --> 00:11:15,859
from the server as in this case

253
00:11:15,859 --> 00:11:19,410
every trick so on average one

254
00:11:19,410 --> 00:11:21,569
every two packets that I send each

255
00:11:21,569 --> 00:11:24,449
trick means it is as if the

256
00:11:24,449 --> 00:11:26,579
server told us and I have received

257
00:11:26,579 --> 00:11:29,309
your data up to this moment  and there I

258
00:11:29,309 --> 00:11:32,009
immediately switched to the process in

259
00:11:32,009 --> 00:11:35,279
userland which is interested in reading them

260
00:11:35,279 --> 00:11:37,859
this way obviously we will not succeed

261
00:11:37,859 --> 00:11:40,889
never to fill a buffer of 8 kg bytes

262
00:11:40,889 --> 00:11:42,679
with a single read

263
00:11:42,679 --> 00:11:44,999
so it is a

264
00:11:44,999 --> 00:11:48,179
misunderstood vulnerability the elements seem to

265
00:11:48,179 --> 00:11:50,699
indicate it is a beautiful

266
00:11:50,699 --> 00:11:52,889
elegant vulnerability but substantially useless if it

267
00:11:52,889 --> 00:11:55,079
can only be used from local to

268
00:11:55,079 --> 00:11:56,389
local

269
00:11:56,389 --> 00:11:59,850
another clue that seems to confirm

270
00:11:59,850 --> 00:12:02,209
that this vulnerability  it is really

271
00:12:02,209 --> 00:12:04,669
let's say it is not an

272
00:12:04,669 --> 00:12:06,989
exploitable vulnerability to execute remote code

273
00:12:06,989 --> 00:12:09,989
on ours on our motorcycles precisely it is the

274
00:12:09,989 --> 00:12:11,729
fact that there is no public sport

275
00:12:11,729 --> 00:12:13,949
to date there is no public explode that

276
00:12:13,949 --> 00:12:15,449
allows you to exploit this

277
00:12:15,449 --> 00:12:18,239
vulnerability against a host on

278
00:12:18,239 --> 00:12:21,799
the local network or better  still on the internet

279
00:12:21,799 --> 00:12:25,350
the fact is that we should ask ourselves the

280
00:12:25,350 --> 00:12:27,529
following question

281
00:12:27,529 --> 00:12:30,600
is there a way to make the server

282
00:12:30,600 --> 00:12:33,809
read 8 kg bytes of data with a

283
00:12:33,809 --> 00:12:34,999
single reading

284
00:12:34,999 --> 00:12:36,899
using a medium and transmission

285
00:12:36,899 --> 00:12:39,929
that allows me to send only

286
00:12:39,929 --> 00:12:43,699
1,500 baath per  once

287
00:12:44,609 --> 00:12:45,749
well this is one of those cases where i

288
00:12:45,749 --> 00:12:48,209
am grateful in the late 90's to have

289
00:12:48,209 --> 00:12:50,730
read tcp ip  hallows trade of stevens

290
00:12:50,730 --> 00:12:52,339
since the first chapter

291
00:12:52,339 --> 00:12:55,019
and the solution is something for

292
00:12:55,019 --> 00:12:57,290
which humanity has fought for a long time

293
00:12:57,290 --> 00:13:01,079
but then abandoned it because it is considered

294
00:13:01,079 --> 00:13:03,920
too complex and difficult to manage

295
00:13:03,920 --> 00:13:06,170
aipi fragmentation

296
00:13:06,170 --> 00:13:07,939
because

297
00:13:07,939 --> 00:13:11,480
when an attack we say

298
00:13:11,480 --> 00:13:14,179
the attack for what it does in this case

299
00:13:14,179 --> 00:13:18,239
splits an ip packet inside which

300
00:13:18,239 --> 00:13:21,059
never ttp is encapsulated plus the eight

301
00:13:21,059 --> 00:13:23,699
kilobytes iridescent in more fragments as

302
00:13:23,699 --> 00:13:25,170
in this case we are sending 6

303
00:13:25,170 --> 00:13:28,369
fragments and if you see

304
00:13:28,369 --> 00:13:31,399
we receive only one canolo g20 back

305
00:13:31,399 --> 00:13:33,869
because in this case it is the kernel

306
00:13:33,869 --> 00:13:37,049
of the victim host when it receives  the

307
00:13:37,049 --> 00:13:39,239
fragments does not immediately make them

308
00:13:39,239 --> 00:13:40,429
available to the

309
00:13:40,429 --> 00:13:45,269
host in the userland process

310
00:13:45,269 --> 00:13:47,600
that has interested in reading them, he

311
00:13:47,600 --> 00:13:50,009
waits until the last fragment

312
00:13:50,009 --> 00:13:51,569
received,

313
00:13:51,569 --> 00:13:53,579
after which he reassembles the entire

314
00:13:53,579 --> 00:13:56,610
ip packet with leder types plus the data and makes

315
00:13:56,610 --> 00:13:59,790
them available  of the server of the

316
00:13:59,790 --> 00:14:01,559
application process in user land

317
00:14:01,559 --> 00:14:03,420
that wants to read them so

318
00:14:03,420 --> 00:14:06,420
basically it will read them with only one

319
00:14:06,420 --> 00:14:09,269
with only one a  tto read

320
00:14:09,269 --> 00:14:10,679
now how to go from theory to

321
00:14:10,679 --> 00:14:13,879
practice to do all this

322
00:14:14,329 --> 00:14:16,799
the worst implementation you can

323
00:14:16,799 --> 00:14:18,119
do which was mine because

324
00:14:18,119 --> 00:14:20,519
basically I was in a hurry is to

325
00:14:20,519 --> 00:14:23,209
implement a tcp ip stack

326
00:14:23,209 --> 00:14:26,749
inside the python exploit

327
00:14:26,749 --> 00:14:30,779
generating c i  packages ama in then

328
00:14:30,779 --> 00:14:32,639
just by hand 11 individually

329
00:14:32,639 --> 00:14:35,399
through red cat

330
00:14:35,399 --> 00:14:37,439
to do this with python you can

331
00:14:37,439 --> 00:14:39,059
use a library like dig for

332
00:14:39,059 --> 00:14:42,509
example now but doing so is like

333
00:14:42,509 --> 00:14:44,610
we are bypassing the kernel which

334
00:14:44,610 --> 00:14:47,459
gets pissed off and every packet

335
00:14:47,459 --> 00:14:49,319
coming from the destination from that

336
00:14:49,319 --> 00:14:51,929
moment onwards it will respect it that is

337
00:14:51,929 --> 00:14:54,389
substantially every packet that is

338
00:14:54,389 --> 00:14:57,269
received the kernel will send a reset a

339
00:14:57,269 --> 00:14:59,850
tp a segment types of type reset

340
00:14:59,850 --> 00:15:02,140
destroying the connection what we

341
00:15:02,140 --> 00:15:04,240
that we do not want obviously the

342
00:15:04,240 --> 00:15:06,370
solution is to induce the sending

343
00:15:06,370 --> 00:15:09,880
of segments dissipate reset using

344
00:15:09,880 --> 00:15:12,400
trivially a rule and pitt and bowles

345
00:15:12,400 --> 00:15:14,170
put these two concepts together and

346
00:15:14,170 --> 00:15:16,030
what you get  you will be something like

347
00:15:16,030 --> 00:15:17,550


348
00:15:17,550 --> 00:15:19,440
this then this is an export

349
00:15:19,440 --> 00:15:22,360
basically the exploded view that I

350
00:15:22,360 --> 00:15:23,280
modified

351
00:15:23,280 --> 00:15:25,110
we are on

352
00:15:25,110 --> 00:15:28,290
host 107 which is the attacker

353
00:15:28,290 --> 00:15:31,080
if we connect

354
00:15:31,080 --> 00:15:34,210
to machine 106

355
00:15:34,210 --> 00:15:36,610
this is the ip address of the

356
00:15:36,610 --> 00:15:38,920
victim server in fact a tennet service runs there

357
00:15:38,920 --> 00:15:42,180
as you can see them

358
00:15:43,380 --> 00:15:47,560
very well  now I will insert an ip

359
00:15:47,560 --> 00:15:49,420
the boss rule that I told you before to

360
00:15:49,420 --> 00:15:51,720
prevent the server from interfering in the

361
00:15:51,720 --> 00:15:54,720
communication

362
00:16:00,180 --> 00:16:02,710
I can entertain you with a dance in the

363
00:16:02,710 --> 00:16:03,750
meantime

364
00:16:03,750 --> 00:16:05,640
ok

365
00:16:05,640 --> 00:16:07,840
I am about to insert this rule

366
00:16:07,840 --> 00:16:10,270
basically here we avoid that the

367
00:16:10,270 --> 00:16:12,430
kernel can send reset packets to

368
00:16:12,430 --> 00:16:17,170
192 1680 106 the rule is there  there it is pretty

369
00:16:17,170 --> 00:16:18,720
ready

370
00:16:18,720 --> 00:16:21,190
now we launch the explodes as

371
00:16:21,190 --> 00:16:22,680
I told you this is a modified version

372
00:16:22,680 --> 00:16:27,280
that hits a more recent distribution,

373
00:16:27,280 --> 00:16:31,090
let's say a I feel set I throw it

374
00:16:31,090 --> 00:16:34,060
against the victim's ip address 106 and

375
00:16:34,060 --> 00:16:35,530
I want it to be returned to me

376
00:16:35,530 --> 00:16:37,570
reverse goes down on the host of the  attacking

377
00:16:37,570 --> 00:16:40,030
the esprit modified to receive

378
00:16:40,030 --> 00:16:42,210
a several cells on the 8,000 door

379
00:16:42,210 --> 00:16:44,830
so I put myself  listening on this

380
00:16:44,830 --> 00:16:47,670
port and launched

381
00:16:47,670 --> 00:16:50,790
the first phase of information leakage

382
00:16:50,790 --> 00:16:53,260
successful if you attempt it to our

383
00:16:53,260 --> 00:16:56,230
local network since the original explodes

384
00:16:56,230 --> 00:17:00,490
it will not be successful after a while here the

385
00:17:00,490 --> 00:17:03,240
shell is opened

386
00:17:03,240 --> 00:17:06,310
so we confirm that this is lost

387
00:17:06,310 --> 00:17:10,589
of the victim at 106 and  okay then I

388
00:17:10,589 --> 00:17:14,170
print the santos release file to

389
00:17:14,170 --> 00:17:16,619
show that this is a feel

390
00:17:16,619 --> 00:17:20,130
7.4 in this case

391
00:17:20,130 --> 00:17:23,380
very well it works well on the internet this

392
00:17:23,380 --> 00:17:26,349
stuff yes I did let's say a bit

393
00:17:26,349 --> 00:17:28,960
of bug bounty scans and I found two

394
00:17:28,960 --> 00:17:31,540
banks and vulnerable an African and

395
00:17:31,540 --> 00:17:34,240
a  'asian in addition to other os this is

396
00:17:34,240 --> 00:17:36,810
a screenshot that demonstrates that

397
00:17:36,810 --> 00:17:39,220
basically I was able to

398
00:17:39,220 --> 00:17:42,690
postpone to execute remote code

399
00:17:42,690 --> 00:17:45,220
then execute a remote command that would

400
00:17:45,220 --> 00:17:47,380
allow me to filter the host

401
00:17:47,380 --> 00:17:48,510
name

402
00:17:48,510 --> 00:17:51,070
from now on should be

403
00:17:51,070 --> 00:17:52,420
clearer for you  what do I mean by

404
00:17:52,420 --> 00:17:54,490
vulnerability so misunderstood something

405
00:17:54,490 --> 00:17:57,340
that 90 percent of people maybe would

406
00:17:57,340 --> 00:18:00,100
click as not feasible that in

407
00:18:00,100 --> 00:18:02,280
reality

408
00:18:02,990 --> 00:18:07,860
today's focus anyway  it is on the security

409
00:18:07,860 --> 00:18:09,020
appliance

410
00:18:09,020 --> 00:18:10,940
allowing for security appliance

411
00:18:10,940 --> 00:18:13,340
I mean any device that offers

412
00:18:13,340 --> 00:18:15,920
security services

413
00:18:15,920 --> 00:18:18,600
like those in this list it

414
00:18:18,600 --> 00:18:21,000
is most of the security

415
00:18:21,000 --> 00:18:23,460
appliances on the market today are based

416
00:18:23,460 --> 00:18:27,110
on linux freebsd kernel

417
00:18:28,880 --> 00:18:31,790
because the security appliance is

418
00:18:31,790 --> 00:18:34,490
good 2020 I put in the head of  do

419
00:18:34,490 --> 00:18:36,770
zero day research

420
00:18:36,770 --> 00:18:39,720
but obviously I have to do it on

421
00:18:39,720 --> 00:18:42,680
something that is within my reach

422
00:18:42,680 --> 00:18:44,370
considering that in the previous five years

423
00:18:44,370 --> 00:18:48,180
I came from having held

424
00:18:48,180 --> 00:18:51,900
non-technical and managerial roles and

425
00:18:51,900 --> 00:18:54,120
something was needed as I said precisely

426
00:18:54,120 --> 00:18:56,750
that I could

427
00:18:56,750 --> 00:19:00,030
puncture or that it was simple

428
00:19:00,030 --> 00:19:03,320
enough to  to puncture

429
00:19:04,130 --> 00:19:07,140
an old italian politician rino

430
00:19:07,140 --> 00:19:08,360
formica

431
00:19:08,360 --> 00:19:10,560
once said talking

432
00:19:10,560 --> 00:19:13,170
about politics that they were something

433
00:19:13,170 --> 00:19:14,550
he knew very well because they

434
00:19:14,550 --> 00:19:17,730
practiced it for years which was blood and

435
00:19:17,730 --> 00:19:19,970
[ __ ]

436
00:19:21,270 --> 00:19:24,480
now after putting my hands well in the

437
00:19:24,480 --> 00:19:26,510
jam

438
00:19:26,510 --> 00:19:29,930
I feel like saying without  fear of being

439
00:19:29,930 --> 00:19:34,100
denied and, net of rare exceptions,

440
00:19:34,100 --> 00:19:37,260
there is the  world of security appliances is

441
00:19:37,260 --> 00:19:39,150
exactly what rino

442
00:19:39,150 --> 00:19:41,430
formica said mixed together, it served

443
00:19:41,430 --> 00:19:44,760
users as a delicious meatball with

444
00:19:44,760 --> 00:19:47,250
the admirable observation that the

445
00:19:47,250 --> 00:19:49,050
diners at that table

446
00:19:49,050 --> 00:19:51,650
are all of us substantially

447
00:19:51,650 --> 00:19:54,660
because it is really embarrassing to notice in

448
00:19:54,660 --> 00:19:58,860
this context how the medium or large

449
00:19:58,860 --> 00:20:01,020
company that  acquire the

450
00:20:01,020 --> 00:20:03,030
high-end product receive more or less the same

451
00:20:03,030 --> 00:20:05,040
level of protection as the

452
00:20:05,040 --> 00:20:07,020
home user who buys a Chinese router for

453
00:20:07,020 --> 00:20:09,560
30 euros

454
00:20:10,520 --> 00:20:12,240
first of all

455
00:20:12,240 --> 00:20:14,760
from a technical point of view let's see where

456
00:20:14,760 --> 00:20:17,360
the main problems lie first of all

457
00:20:17,360 --> 00:20:19,740
systematic violation of the

458
00:20:19,740 --> 00:20:22,490
principle of lesser privilege

459
00:20:22,490 --> 00:20:25,470
introduced more  or less 50 years ago with

460
00:20:25,470 --> 00:20:29,059
a paper from 1975

461
00:20:29,059 --> 00:20:31,890
is a problem that still affects

462
00:20:31,890 --> 00:20:34,440
systems and the services and solutions

463
00:20:34,440 --> 00:20:36,090
aletti of today

464
00:20:36,090 --> 00:20:38,640
this that I am showing you here a

465
00:20:38,640 --> 00:20:42,690
list of some processes of getting married

466
00:20:42,690 --> 00:20:45,780
cisco interplay enns enterprise sorry

467
00:20:45,780 --> 00:20:48,510
cisco email security  appliance where

468
00:20:48,510 --> 00:20:51,210
possible I will mention the names of the vendors

469
00:20:51,210 --> 00:20:53,670
e  you see that all processes all

470
00:20:53,670 --> 00:20:55,980
services run as root and

471
00:20:55,980 --> 00:20:58,429
moreover privileges are not

472
00:20:58,429 --> 00:21:00,890
dropped where it would be desirable

473
00:21:00,890 --> 00:21:03,540
what this implies that every

474
00:21:03,540 --> 00:21:05,670
single vulnerability and allows

475
00:21:05,670 --> 00:21:08,040
remote code execution will guarantee

476
00:21:08,040 --> 00:21:10,950
the attacker maximum access access with

477
00:21:10,950 --> 00:21:14,090
the maximum  privileges in the system

478
00:21:14,090 --> 00:21:17,090
now to understand this

479
00:21:17,090 --> 00:21:19,800
you can also simply observe

480
00:21:19,800 --> 00:21:21,330
security bulletins

481
00:21:21,330 --> 00:21:23,090
issued by vendors yourself

482
00:21:23,090 --> 00:21:27,150
this is always cisco da due 6 that

483
00:21:27,150 --> 00:21:29,750
sharing a code base with

484
00:21:29,750 --> 00:21:31,890
conces cohesive with the product that

485
00:21:31,890 --> 00:21:33,330
I showed you before is that you can see

486
00:21:33,330 --> 00:21:36,570
who  he is a remote attacker and his deputies and

487
00:21:36,570 --> 00:21:39,590
privileges as root

488
00:21:39,590 --> 00:21:41,690
same thing for

489
00:21:41,690 --> 00:21:44,460
pole high

490
00:21:44,460 --> 00:21:47,190
anne authenticated by tucker raises his

491
00:21:47,190 --> 00:21:49,610
privileges as root

492
00:21:49,610 --> 00:21:51,929
same thing for non-

493
00:21:51,929 --> 00:21:53,580
identical net attacks and will detect his

494
00:21:53,580 --> 00:21:54,780
villages as root you just need to

495
00:21:54,780 --> 00:21:57,510
read these bulletins

496
00:21:57,510 --> 00:22:00,179
security to understand that everything runs as a

497
00:22:00,179 --> 00:22:02,490
routine these in these applications in

498
00:22:02,490 --> 00:22:04,440
a  Some cases selling it are a bit more

499
00:22:04,440 --> 00:22:07,440
subtle these false cures do not tell you

500
00:22:07,440 --> 00:22:10,710
that this vulnerability leads

501
00:22:10,710 --> 00:22:12,809
to access to

502
00:22:12,809 --> 00:22:15,090
code execution as root but if you look at the

503
00:22:15,090 --> 00:22:16,530
confidentiality and integrity and

504
00:22:16,530 --> 00:22:19,559
availability of the high cps score

505
00:22:19,559 --> 00:22:23,750
you will understand that the consequence is the same

506
00:22:23,750 --> 00:22:25,679
this is beautiful this is a

507
00:22:25,679 --> 00:22:27,179
vulnerability from a couple of weeks ago it

508
00:22:27,179 --> 00:22:30,299
affects the devices and five of the p's

509
00:22:30,299 --> 00:22:33,330
also here you can see the command is of

510
00:22:33,330 --> 00:22:35,870
is injected

511
00:22:35,870 --> 00:22:40,590
the service replies to us hey you are ruth

512
00:22:40,590 --> 00:22:43,110
so this service is also running

513
00:22:43,110 --> 00:22:45,799
as root

514
00:22:46,230 --> 00:22:48,090
the second problem more  shared or not shared

515
00:22:48,090 --> 00:22:50,850
security plans concerns the

516
00:22:50,850 --> 00:22:54,649
protection measures aimed at countering

517
00:22:54,649 --> 00:22:57,409
memory corruption problems

518
00:22:57,409 --> 00:22:59,850
usually security appliances run

519
00:22:59,850 --> 00:23:03,360
have a 64-bit operating system on

520
00:23:03,360 --> 00:23:05,549
which however 32-bit compiled binaries run

521
00:23:05,549 --> 00:23:07,830
, which decreases the effectiveness

522
00:23:07,830 --> 00:23:09,659
of protection measures  such as ad space

523
00:23:09,659 --> 00:23:12,240
layout randomization for example for the

524
00:23:12,240 --> 00:23:14,240
randomization of ip

525
00:23:14,240 --> 00:23:16,559
stec addresses  that ips are generally not

526
00:23:16,559 --> 00:23:18,389
executable this is good news

527
00:23:18,389 --> 00:23:21,210
spec canaris however they are usually absent

528
00:23:21,210 --> 00:23:24,019
ditto for other protection measures such as

529
00:23:24,019 --> 00:23:28,169
9 location redoli and in the vast

530
00:23:28,169 --> 00:23:31,259
majority of cases the binaries are non

531
00:23:31,259 --> 00:23:33,120
position independent execute something

532
00:23:33,120 --> 00:23:35,370
means that the location in

533
00:23:35,370 --> 00:23:38,429
memory where  the code and some sections

534
00:23:38,429 --> 00:23:40,519
such as binary data

535
00:23:40,519 --> 00:23:42,320


536
00:23:42,320 --> 00:23:44,700
will reside will always be mapped in the same

537
00:23:44,700 --> 00:23:48,179
addresses which facilitates the

538
00:23:48,179 --> 00:23:50,429
exploitation phase the phase of creation of the

539
00:23:50,429 --> 00:23:52,879
explodes

540
00:23:52,909 --> 00:23:54,899
in some cases we have

541
00:23:54,899 --> 00:23:57,019
positive and negative shifts

542
00:23:57,019 --> 00:24:00,090
more negative I must say this is

543
00:24:00,090 --> 00:24:01,500
always a vulnerability super faiths

544
00:24:01,500 --> 00:24:03,750
kestrels  discovered by google project zero

545
00:24:03,750 --> 00:24:07,399
in december 2020 and the pd process

546
00:24:07,399 --> 00:24:11,220
even has an executable stack there is

547
00:24:11,220 --> 00:24:14,309
this is a leap a leap back in the

548
00:24:14,309 --> 00:24:17,009
past of over twenty years with respect to the

549
00:24:17,009 --> 00:24:19,309
security of current desktop and server systems

550
00:24:19,309 --> 00:24:22,309


551
00:24:23,250 --> 00:24:27,110
last thing other shared problem

552
00:24:27,110 --> 00:24:29,610
libraries  system and

553
00:24:29,610 --> 00:24:31,230
obsolete components make it

554
00:24:31,230 --> 00:24:33,030
from p  adrona on these on these

555
00:24:33,030 --> 00:24:34,230
devices

556
00:24:34,230 --> 00:24:36,150
this is a case an example that I

557
00:24:36,150 --> 00:24:40,070
checked before coming here to akimbo

558
00:24:40,070 --> 00:24:42,110
look at

559
00:24:42,110 --> 00:24:46,650
this pines it allows the upload of

560
00:24:46,650 --> 00:24:49,640
cabinet file which is a microsoft format

561
00:24:49,640 --> 00:24:52,650
these cabinet files come their

562
00:24:52,650 --> 00:24:54,030
contents are then extracted by a

563
00:24:54,030 --> 00:24:56,580
utility called  cab extract the version

564
00:24:56,580 --> 00:25:00,419
included in this device is the 0.5

565
00:25:00,419 --> 00:25:02,460
which was released only 21 years ago

566
00:25:02,460 --> 00:25:06,330
between 2000 and 2020 if we

567
00:25:06,330 --> 00:25:07,860
look at the list of

568
00:25:07,860 --> 00:25:09,530
vulnerabilities affecting this device

569
00:25:09,530 --> 00:25:12,299
we will notice that the oldest of 2004 is

570
00:25:12,299 --> 00:25:15,630
a pad traversal version  vulnerable

571
00:25:15,630 --> 00:25:17,700
all those below 1.1 which

572
00:25:17,700 --> 00:25:19,820
therefore also includes our

573
00:25:19,820 --> 00:25:23,370
0.5 this

574
00:25:23,370 --> 00:25:26,419
latest version security device we are talking about is

575
00:25:26,419 --> 00:25:29,160
ok when I started

576
00:25:29,160 --> 00:25:32,490
my zero day research the purpose

577
00:25:32,490 --> 00:25:34,350
I had set was to find

578
00:25:34,350 --> 00:25:35,940
vulnerabilities that would allow me

579
00:25:35,940 --> 00:25:38,520
to run  remote commands in

580
00:25:38,520 --> 00:25:40,650
pre authentication mode and that

581
00:25:40,650 --> 00:25:43,530
means without having credentials how to

582
00:25:43,530 --> 00:25:46,160
reach there  ò the most

583
00:25:46,160 --> 00:25:49,200
logical thing that I seemed to do

584
00:25:49,200 --> 00:25:51,900
was to aim to analyze only the

585
00:25:51,900 --> 00:25:54,450
components that were exposed to the

586
00:25:54,450 --> 00:25:57,230
internet substantially

587
00:25:57,230 --> 00:26:01,850
and usually this simply says

588
00:26:01,850 --> 00:26:04,980
to analyze all the web components

589
00:26:04,980 --> 00:26:08,429
but you must know that these security

590
00:26:08,429 --> 00:26:11,270
appliances have a high  level a

591
00:26:11,270 --> 00:26:14,580
high code base and proprietary in

592
00:26:14,580 --> 00:26:17,669
written in silence plus plus subject

593
00:26:17,669 --> 00:26:19,160
to memory corruption problems

594
00:26:19,160 --> 00:26:23,610
so my focus has been much more

595
00:26:23,610 --> 00:26:26,190
focused on the fuzzing of these

596
00:26:26,190 --> 00:26:28,500
components rather than on the search for

597
00:26:28,500 --> 00:26:30,630
web vulnerabilities, fuzzing and the

598
00:26:30,630 --> 00:26:33,030
right technique for  find memory

599
00:26:33,030 --> 00:26:35,580
corruption how fuzzing is practiced in

600
00:26:35,580 --> 00:26:38,429
proprietary devices basically

601
00:26:38,429 --> 00:26:40,290
where

602
00:26:40,290 --> 00:26:42,570
tested components let's say they are black

603
00:26:42,570 --> 00:26:44,850
box components for which we do not have source code

604
00:26:44,850 --> 00:26:45,740


605
00:26:45,740 --> 00:26:48,150
well first of all we need the

606
00:26:48,150 --> 00:26:51,810
virtual machine phising tools to

607
00:26:51,810 --> 00:26:54,350
analyze they usually do not have

608
00:26:54,350 --> 00:26:56,460
compiler so we can compile

609
00:26:56,460 --> 00:26:59,100
all our tools  in some

610
00:26:59,100 --> 00:27:00,600
compatible cars  them because as I said

611
00:27:00,600 --> 00:27:01,710
most of these

612
00:27:01,710 --> 00:27:04,470
proprietary appliances are based on some

613
00:27:04,470 --> 00:27:08,030
linux freebsd distribution

614
00:27:08,030 --> 00:27:11,250
so we can compile all

615
00:27:11,250 --> 00:27:12,660
everything we need on another machine then

616
00:27:12,660 --> 00:27:15,210
transfer them to the target fuzz

617
00:27:15,210 --> 00:27:16,770
from there we can adopt a

618
00:27:16,770 --> 00:27:18,840
hybrid approach because sometimes the tools  that

619
00:27:18,840 --> 00:27:21,240
we want to use do not work

620
00:27:21,240 --> 00:27:23,550
on the target so we need to

621
00:27:23,550 --> 00:27:25,710
do some more or less

622
00:27:25,710 --> 00:27:27,330
manual customizations that require

623
00:27:27,330 --> 00:27:30,090
time if there are classes we go to

624
00:27:30,090 --> 00:27:31,800
interesting flashes that are self

625
00:27:31,800 --> 00:27:33,990
contained that are contained

626
00:27:33,990 --> 00:27:35,820
within a single shared library

627
00:27:35,820 --> 00:27:37,980
we can  extract the shared library

628
00:27:37,980 --> 00:27:41,190
and do it on another hardware

629
00:27:41,190 --> 00:27:44,750
faster that increases let's say it

630
00:27:44,750 --> 00:27:49,080
reduces the time needed for

631
00:27:49,080 --> 00:27:51,150
fuzzing usually it would otherwise be

632
00:27:51,150 --> 00:27:54,090
much slower as I feed the phaser

633
00:27:54,090 --> 00:27:56,010
as a hi tech states genero and the

634
00:27:56,010 --> 00:27:57,380
protocol

635
00:27:57,380 --> 00:28:00,330
supported by the tested component is a

636
00:28:00,330 --> 00:28:02,760
standard protocol I can  read me the

637
00:28:02,760 --> 00:28:04,710
rfc so I can create me  and test days

638
00:28:04,710 --> 00:28:06,810
manually otherwise I can

639
00:28:06,810 --> 00:28:08,790
reuse those of other researchers

640
00:28:08,790 --> 00:28:10,890
if the protocol instead is a

641
00:28:10,890 --> 00:28:13,590
proprietary protocol and there is a native client

642
00:28:13,590 --> 00:28:15,320
for that protocol they

643
00:28:15,320 --> 00:28:17,700
can simply do the

644
00:28:17,700 --> 00:28:20,960
network traffic by intercepting it through

645
00:28:20,960 --> 00:28:24,410
frida proxy server software or other methods

646
00:28:24,410 --> 00:28:27,540
so I can then take the

647
00:28:27,540 --> 00:28:29,940
intercepted requests and  pass the phase in

648
00:28:29,940 --> 00:28:31,680
all other cases manual reverse engineering

649
00:28:31,680 --> 00:28:33,730


650
00:28:33,730 --> 00:28:38,440
which is sometimes burdensome but obligatory but

651
00:28:38,440 --> 00:28:41,530
we have to run it one day during a

652
00:28:41,530 --> 00:28:43,420
year and a half ago during one of my

653
00:28:43,420 --> 00:28:45,880
fuzzing sessions this crash appears before me

654
00:28:45,880 --> 00:28:49,090
the application is trying

655
00:28:49,090 --> 00:28:52,270
to access  an unmapped area in

656
00:28:52,270 --> 00:28:54,600
memory which crashed

657
00:28:54,600 --> 00:28:56,740
this is an application in si plus plus it

658
00:28:56,740 --> 00:28:59,080
is a 32-bit binary running on

659
00:28:59,080 --> 00:29:01,980
a 64-bit operating system based on

660
00:29:01,980 --> 00:29:06,310
santos 6 the libraries are at

661
00:29:06,310 --> 00:29:08,710
least 10 years old  lips of version 2.12

662
00:29:08,710 --> 00:29:10,780
standard league si plus plus version 4

663
00:29:10,780 --> 00:29:14,050
47 st kate are not executable

664
00:29:14,050 --> 00:29:16,300
fortunately there  it is the space layout

665
00:29:16,300 --> 00:29:18,520
randomization enabled but the binary and

666
00:29:18,520 --> 00:29:22,020
not position independent consequently

667
00:29:22,020 --> 00:29:24,010
what I told you before some

668
00:29:24,010 --> 00:29:27,390
addresses are mapped memory always

669
00:29:27,390 --> 00:29:29,800
some areas are mapped memory always

670
00:29:29,800 --> 00:29:32,050
the same address which simplifies the

671
00:29:32,050 --> 00:29:34,920
creation of an explode but let's see

672
00:29:34,920 --> 00:29:37,350
what happened

673
00:29:37,350 --> 00:29:39,940
then we have  our nice

674
00:29:39,940 --> 00:29:42,850
malicious payload that is sent to the target is

675
00:29:42,850 --> 00:29:46,750
the target process stores it

676
00:29:46,750 --> 00:29:50,160
somewhere inside its hit

677
00:29:50,160 --> 00:29:52,960
now inside this buffer we

678
00:29:52,960 --> 00:29:57,250
can insert one or more messages that

679
00:29:57,250 --> 00:30:00,540
the parsa server processes one at a time

680
00:30:00,540 --> 00:30:02,740
each message includes  a header a

681
00:30:02,740 --> 00:30:05,500
header that indicates the length

682
00:30:05,500 --> 00:30:06,910
of the message that the server can

683
00:30:06,910 --> 00:30:09,010
use to understand where the

684
00:30:09,010 --> 00:30:12,010
next message is the problem, however, is

685
00:30:12,010 --> 00:30:14,620
that this land field is not validated,

686
00:30:14,620 --> 00:30:16,090
we can indicate a value greater than

687
00:30:16,090 --> 00:30:18,310
the size of the buffer in which the

688
00:30:18,310 --> 00:30:19,860
message is  content

689
00:30:19,860 --> 00:30:21,910
by making the server believe that the

690
00:30:21,910 --> 00:30:24,160
next message to be retrieved to be

691
00:30:24,160 --> 00:30:27,420
processed is  find later in the ip

692
00:30:27,420 --> 00:30:30,370
only that if that memory

693
00:30:30,370 --> 00:30:32,890
point is an unmapped point a protected memory

694
00:30:32,890 --> 00:30:34,020
area

695
00:30:34,020 --> 00:30:36,580
while attempting to read there is

696
00:30:36,580 --> 00:30:39,010
an attempt to access that

697
00:30:39,010 --> 00:30:40,660
memory area will cause the

698
00:30:40,660 --> 00:30:41,640
application to crash

699
00:30:41,640 --> 00:30:44,380
this  in jargon they are with the ability

700
00:30:44,380 --> 00:30:46,669
called out of bounds

701
00:30:46,669 --> 00:30:49,159
that is reading out of bounds now by a

702
00:30:49,159 --> 00:30:50,809
show of hands

703
00:30:50,809 --> 00:30:52,999
I ask you how many of you at this point

704
00:30:52,999 --> 00:30:55,730
would think that an out of bounds

705
00:30:55,730 --> 00:30:58,759
reed vulnerability of this type could

706
00:30:58,759 --> 00:31:01,129
allow the execution of remote

707
00:31:01,129 --> 00:31:03,320
and non-remote code  I am referring to using it

708
00:31:03,320 --> 00:31:04,850
as a primitive for an information

709
00:31:04,850 --> 00:31:07,789
information there I am referring to using it

710
00:31:07,789 --> 00:31:09,710
as a reader to achieve

711
00:31:09,710 --> 00:31:12,609
remote code execution

712
00:31:13,340 --> 00:31:15,230
I would be really curious after talking

713
00:31:15,230 --> 00:31:17,629
to you to understand why you think this

714
00:31:17,629 --> 00:31:18,799
because I do not until he has

715
00:31:18,799 --> 00:31:21,159
slammed his snout on it  I understood

716
00:31:21,159 --> 00:31:24,159
then

717
00:31:24,249 --> 00:31:26,629
a type of message that the server can

718
00:31:26,629 --> 00:31:29,289
process the type m1

719
00:31:29,289 --> 00:31:32,149
type m1 comes not only with a

720
00:31:32,149 --> 00:31:34,489
length field but also with transported data

721
00:31:34,489 --> 00:31:36,409
given what the

722
00:31:36,409 --> 00:31:38,389
vulnerable application does is basically

723
00:31:38,389 --> 00:31:41,779
take the address of the memory

724
00:31:41,779 --> 00:31:44,570
where the data is received in the ip take

725
00:31:44,570 --> 00:31:47,409
the length and pass it as a value to

726
00:31:47,409 --> 00:31:50,749
the assign method of the standard

727
00:31:50,749 --> 00:31:54,019
string object now this produces the effect of

728
00:31:54,019 --> 00:31:56,840
creating to allocate  a new buffer on the

729
00:31:56,840 --> 00:32:00,859
ip of the size of 200 bytes

730
00:32:00,859 --> 00:32:02,470
requested by us

731
00:32:02,470 --> 00:32:05,830
containing a copy of the

732
00:32:05,830 --> 00:32:08,749
transported data that are inside

733
00:32:08,749 --> 00:32:11,559
the message m1 itself

734
00:32:11,559 --> 00:32:13,730
assigned substantially the return

735
00:32:13,730 --> 00:32:15,499
to the memory address in which this

736
00:32:15,499 --> 00:32:17,210
is also allocated which is usually

737
00:32:17,210 --> 00:32:19,340
it is saved in a variable in the

738
00:32:19,340 --> 00:32:22,460
stack in this case m1 pointer you see

739
00:32:22,460 --> 00:32:27,070
that it is pointing to the junk nelip it

740
00:32:27,700 --> 00:32:31,090
is interesting to note

741
00:32:31,090 --> 00:32:34,369
how the form of this chunk

742
00:32:34,369 --> 00:32:36,909
allocated with assigned is formed because

743
00:32:36,909 --> 00:32:38,960


744
00:32:38,960 --> 00:32:41,299
the operator si plus plus is

745
00:32:41,299 --> 00:32:42,889
used internally, which I use internally the

746
00:32:42,889 --> 00:32:45,049
mallock function for the locale also says of

747
00:32:45,049 --> 00:32:47,889
memory and this double passage

748
00:32:47,889 --> 00:32:50,659
introduces new fields inside

749
00:32:50,659 --> 00:32:52,039
the leder which is not s  are normally

750
00:32:52,039 --> 00:32:54,350
present when I call a chan that

751
00:32:54,350 --> 00:32:56,710
with mallock

752
00:32:56,710 --> 00:32:59,710
trivially

753
00:32:59,950 --> 00:33:04,670
the first the first two values are all the value

754
00:33:04,670 --> 00:33:07,100
of 4 gbyte these darker than darker blue

755
00:33:07,100 --> 00:33:08,390
the first t

756
00:33:08,390 --> 00:33:11,450
o values are fields that are normally allo

757
00:33:11,450 --> 00:33:13,760
ated when using a function 

758
00:33:13,760 --> 00:33:16,580
uch as  mallock the

759
00:33:16,580 --> 00:33:18,500
he most important this case is size which

760
00:33:18,500 --> 00:33:20,750
includes which basically indicates the

761
00:33:20,750 --> 00:33:22,370
maximum size of the jean king which

762
00:33:22,370 --> 00:33:26,090
also includes max land use land and this

763
00:33:26,090 --> 00:33:28,870
goes other now from max lenin then

764
00:33:28,870 --> 00:33:31,220
basically something which instead are

765
00:33:31,220 --> 00:33:33,290
fields which are added let's say so

766
00:33:33,290 --> 00:33:35,360
when using a  function si plus

767
00:33:35,360 --> 00:33:37,580
plus as as at sign usually

768
00:33:37,580 --> 00:33:39,350
when in all cases in which

769
00:33:39,350 --> 00:33:41,110
an object is allocated with the new operator

770
00:33:41,110 --> 00:33:44,480
we can say this

771
00:33:44,480 --> 00:33:47,300
max len happens and used by the functions on

772
00:33:47,300 --> 00:33:48,890
plos plus to indicate the maximum

773
00:33:48,890 --> 00:33:51,290
size of this buffer so

774
00:33:51,290 --> 00:33:53,150
how much data what  is the maximum

775
00:33:53,150 --> 00:33:55,670
data size of this buffer use land

776
00:33:55,670 --> 00:33:59,360
instead indicates how many bytes are

777
00:33:59,360 --> 00:34:01,070
used are used  lized

778
00:34:01,070 --> 00:34:03,580
currently inside this buffer

779
00:34:03,580 --> 00:34:06,260
others are not of interest included only

780
00:34:06,260 --> 00:34:08,620
to show you visually where

781
00:34:08,620 --> 00:34:11,750
user data is the field that carries the

782
00:34:11,750 --> 00:34:14,239
real field in which the data will then be

783
00:34:14,239 --> 00:34:15,699
copied

784
00:34:15,699 --> 00:34:18,040
in this case

785
00:34:18,040 --> 00:34:20,780
since the location of

786
00:34:20,780 --> 00:34:23,980
a chunk of  200 bytes the length will be

787
00:34:23,980 --> 00:34:29,030
212 which is 200 bytes of data plus 4 bytes

788
00:34:29,030 --> 00:34:31,880
max land plus 4 patio slam plus 4 bytes

789
00:34:31,880 --> 00:34:36,020
others which is 212 max land there is the

790
00:34:36,020 --> 00:34:38,330
size of this buffer will be set

791
00:34:38,330 --> 00:34:42,469
to 200 is the number of bytes used

792
00:34:42,469 --> 00:34:44,719
since  we are using 200 bytes 200

793
00:34:44,719 --> 00:34:47,290
will also be set to 200

794
00:34:47,290 --> 00:34:50,120
at the end as I said of everything

795
00:34:50,120 --> 00:34:51,610
the copy is made

796
00:34:51,610 --> 00:34:53,659
substantially it is used a lot

797
00:34:53,659 --> 00:34:55,010
internally it uses the

798
00:34:55,010 --> 00:34:58,730
amen copy function which takes as argument the

799
00:34:58,730 --> 00:35:01,040
destination of the data which in this case

800
00:35:01,040 --> 00:35:03,680
would be the beginning of the field  user data del

801
00:35:03,680 --> 00:35:05,200
change

802
00:35:05,200 --> 00:35:07,880
the address where from where the data

803
00:35:07,880 --> 00:35:09,130


804
00:35:09,130 --> 00:35:11,710
must be started to be copied

805
00:35:11,710 --> 00:35:14,339
let's say this is the length

806
00:35:14,339 --> 00:35:17,700
200 bytes

807
00:35:18,400 --> 00:35:22,289
now we have a blink m1

808
00:35:22,289 --> 00:35:25,650
allocated in the league

809
00:35:25,900 --> 00:35:27,970
we assume that the next message to be

810
00:35:27,970 --> 00:35:31,619
processed is always

811
00:35:31,619 --> 00:35:35,680
another message of type m1

812
00:35:35,680 --> 00:35:37,349
but in this case the length

813
00:35:37,349 --> 00:35:40,740
indicated is 60 bytes

814
00:35:40,740 --> 00:35:44,319
also in this case the server

815
00:35:44,319 --> 00:35:45,849
the vulnerable application takes the

816
00:35:45,849 --> 00:35:48,279
length takes the address in which

817
00:35:48,279 --> 00:35:50,670
they said the new data passes them from stein

818
00:35:50,670 --> 00:35:53,769
very substantially what does it check

819
00:35:53,769 --> 00:35:56,289
if since it can rely on the

820
00:35:56,289 --> 00:35:58,900
pointed to yes on the pointer m1 pointer

821
00:35:58,900 --> 00:36:00,369
in the mirror checks if this

822
00:36:00,369 --> 00:36:03,099
is already allocated as it is already allocated

823
00:36:03,099 --> 00:36:06,220
the following check is made,

824
00:36:06,220 --> 00:36:07,859
i.e.

825
00:36:07,859 --> 00:36:13,359
if the  number of bytes of the name essays m1

826
00:36:13,359 --> 00:36:16,210
60 in this case it is less than the number

827
00:36:16,210 --> 00:36:18,849
of the maximum size there is also

828
00:36:18,849 --> 00:36:22,349
previously allocated i.e. 200 bytes

829
00:36:22,349 --> 00:36:25,480
well if this condition is true

830
00:36:25,480 --> 00:36:27,460
substantially the

831
00:36:27,460 --> 00:36:29,789
data is overwritten i.e.

832
00:36:29,789 --> 00:36:33,099
my age inside the message

833
00:36:33,099 --> 00:36:35,019
m1 overwrites the old data in the

834
00:36:35,019 --> 00:36:38,609
center if instead

835
00:36:38,609 --> 00:36:42,670
the message m1 contains a longer length

836
00:36:42,670 --> 00:36:46,059
then this case 256 is not

837
00:36:46,059 --> 00:36:48,440
less than

838
00:36:48,440 --> 00:36:50,119
of the size of the cyan already

839
00:36:50,119 --> 00:36:52,040
allocated of 200 bytes

840
00:36:52,040 --> 00:36:54,500
in this case what happens with assign

841
00:36:54,500 --> 00:36:58,250
is that delete is called which I

842
00:36:58,250 --> 00:36:59,660
use internally of the

843
00:36:59,660 --> 00:37:03,470
free function which is free this is also from

844
00:37:03,470 --> 00:37:07,130
memory n allocates a new one of the

845
00:37:07,130 --> 00:37:08,900
requested size in which it goes  to

846
00:37:08,900 --> 00:37:11,359
insert to do the copy of the new data

847
00:37:11,359 --> 00:37:14,990
always with me copy important thing

848
00:37:14,990 --> 00:37:16,700
the pointer in the stack will be

849
00:37:16,700 --> 00:37:18,619
updated to point to the new cianti

850
00:37:18,619 --> 00:37:21,290
well this is a primitive that

851
00:37:21,290 --> 00:37:23,810
basically and could allow you

852
00:37:23,810 --> 00:37:27,230
to free an arbitrary jab when

853
00:37:27,230 --> 00:37:30,460
you find vulnerable applications

854
00:37:30,460 --> 00:37:34,540
so something to keep  in mind

855
00:37:35,630 --> 00:37:37,640
now I ask you again the question

856
00:37:37,640 --> 00:37:39,280
gave the premises

857
00:37:39,280 --> 00:37:42,280
I gave you would you

858
00:37:42,280 --> 00:37:46,480
consider this out of bounds reed

859
00:37:46,480 --> 00:37:49,400
still a vulnerability for its

860
00:37:49,400 --> 00:37:52,430
own sake or do you think it could be a

861
00:37:52,430 --> 00:37:54,140
vulnerability that could lead us to

862
00:37:54,140 --> 00:37:56,180
remote code execution by a show

863
00:37:56,180 --> 00:37:58,450
of hands

864
00:38:00,920 --> 00:38:04,420
club  ok great

865
00:38:04,420 --> 00:38:06,800
we finally reach the conclusion

866
00:38:06,800 --> 00:38:08,420
more or less

867
00:38:08,420 --> 00:38:10,250
then we start the part point  Without

868
00:38:10,250 --> 00:38:14,660
this we have a chunk m1 allocated in

869
00:38:14,660 --> 00:38:18,980
the ip with substantially large 200 bytes

870
00:38:18,980 --> 00:38:22,750
with data controlled by the attacker

871
00:38:22,750 --> 00:38:25,400
now we assume that there is

872
00:38:25,400 --> 00:38:27,050
your christine server processing

873
00:38:27,050 --> 00:38:29,300
another message of type m2 in this

874
00:38:29,300 --> 00:38:33,230
case always 200 bytes large let's do the

875
00:38:33,230 --> 00:38:36,349
important thing is  that it is not interesting

876
00:38:36,349 --> 00:38:38,119
how this is there also is allocated it

877
00:38:38,119 --> 00:38:39,890
must not be allocated with assign it can

878
00:38:39,890 --> 00:38:41,420
be allocated with mallock it can be

879
00:38:41,420 --> 00:38:43,579
allocated as you want the

880
00:38:43,579 --> 00:38:46,220
important thing is that this chang is

881
00:38:46,220 --> 00:38:49,790
adjacent memory to there is also

882
00:38:49,790 --> 00:38:53,830
adjacent m1 means that it is immediately

883
00:38:53,830 --> 00:38:56,620
that m1 finds

884
00:38:56,620 --> 00:38:59,420
that m2 is immediately after and memory

885
00:38:59,420 --> 00:39:01,340
with respect to m1 also in this case

886
00:39:01,340 --> 00:39:05,020
we have data controlled by the attacker

887
00:39:05,020 --> 00:39:08,000
well now trigger I call the

888
00:39:08,000 --> 00:39:09,800
vulnerability out of bounds reed that is

889
00:39:09,800 --> 00:39:13,030
we make the server

890
00:39:13,030 --> 00:39:16,040
think that the next message to be

891
00:39:16,040 --> 00:39:18,520
recovered it must  to be processed

892
00:39:18,520 --> 00:39:22,430
must be taken from the inside of

893
00:39:22,430 --> 00:39:26,210
the dm1 buffer where I remind you of data

894
00:39:26,210 --> 00:39:28,100
controlled by the attacker  you because

895
00:39:28,100 --> 00:39:29,570
we would like to do something

896
00:39:29,570 --> 00:39:31,910
like that we would like to do something like that

897
00:39:31,910 --> 00:39:35,050
because in the event that

898
00:39:35,050 --> 00:39:38,480
inside the buffer m1 there was

899
00:39:38,480 --> 00:39:41,440
another message of type m1

900
00:39:41,440 --> 00:39:44,930
assign that would have to manage

901
00:39:44,930 --> 00:39:49,970
a copy between a source buffer then

902
00:39:49,970 --> 00:39:52,160
where  the copy must be made to a

903
00:39:52,160 --> 00:39:55,520
destination buffer which are

904
00:39:55,520 --> 00:39:57,680
substantially the same buffer i.e.

905
00:39:57,680 --> 00:40:00,770
the address in memory where the source buffer

906
00:40:00,770 --> 00:40:04,310
is located the destination buffer

907
00:40:04,310 --> 00:40:07,240
is substantially

908
00:40:07,240 --> 00:40:11,000
overlapped and when you try a copy

909
00:40:11,000 --> 00:40:14,840
of data in loco between a source  it is an

910
00:40:14,840 --> 00:40:17,810
overlapping destination very

911
00:40:17,810 --> 00:40:20,600
bad things can happen now as we have

912
00:40:20,600 --> 00:40:22,640
seen before a

913
00:40:22,640 --> 00:40:25,880
lot use man copy

914
00:40:25,880 --> 00:40:27,770
to copy the data in this

915
00:40:27,770 --> 00:40:30,020
case but don't copy alternative don't

916
00:40:30,020 --> 00:40:32,420
care in this case instead use memo

917
00:40:32,420 --> 00:40:35,660
which is a safer method because the data

918
00:40:35,660 --> 00:40:37,130
they are first copied to a temporary buffer

919
00:40:37,130 --> 00:40:38,540


920
00:40:38,540 --> 00:40:41,260
then transferred to the destination buffer

921
00:40:41,260 --> 00:40:43,580


922
00:40:43,580 --> 00:40:44,710
now

923
00:40:44,710 --> 00:40:48,320
the problem here is that the move

924
00:40:48,320 --> 00:40:50,930
basically it learns as arguments

925
00:40:50,930 --> 00:40:53,510
the destination a source and the

926
00:40:53,510 --> 00:40:55,580
length the problem here is that the

927
00:40:55,580 --> 00:40:58,420
length field is not validated

928
00:40:58,420 --> 00:41:00,860
so what it means that if the

929
00:41:00,860 --> 00:41:03,620
message m1 that the server will find itself

930
00:41:03,620 --> 00:41:06,650
reading were to report in the

931
00:41:06,650 --> 00:41:08,840
headers in the length of 300 bytes

932
00:41:08,840 --> 00:41:14,680
a copy would occur  of 300 bytes

933
00:41:14,680 --> 00:41:18,530
from the beginning of the cyan that m1 but

934
00:41:18,530 --> 00:41:20,330
considering that there is also m1 and large

935
00:41:20,330 --> 00:41:23,840
200 bytes so what

936
00:41:23,840 --> 00:41:27,070
basically happens will be a sort of

937
00:41:27,070 --> 00:41:30,880
upward shift of all the data

938
00:41:30,880 --> 00:41:35,020
including those that are on the cyan m2

939
00:41:35,020 --> 00:41:38,470
which will cause

940
00:41:38,470 --> 00:41:42,200
that  they will cause an overwrite of

941
00:41:42,200 --> 00:41:45,550
the cyan metadata which m2 itself

942
00:41:45,550 --> 00:41:48,350
is not very difficult to understand that is you

943
00:41:48,350 --> 00:41:52,310
are making a copy from here this is

944
00:41:52,310 --> 00:41:54,759
the destination

945
00:41:54,890 --> 00:41:57,110
this is the source you have to cover 300

946
00:41:57,110 --> 00:41:59,930
bytes which means that it does network

947
00:41:59,930 --> 00:42:04,280
not only all the data contained in the c  'is

948
00:42:04,280 --> 00:42:06,100
also m1 but it

949
00:42:06,100 --> 00:42:08,630
would also substantially shift this part

950
00:42:08,630 --> 00:42:11,240
of data that is the cyan which m2 therefore

951
00:42:11,240 --> 00:42:13,790
metadata of the cm 2 and its data if

952
00:42:13,790 --> 00:42:15,830
note here there is a part i put

953
00:42:15,830 --> 00:42:18,320
in b bbc si sites of this shift

954
00:42:18,320 --> 00:42:22,280
this copy this shifting will cause

955
00:42:22,280 --> 00:42:25,010
100 m2 metadata overwrite

956
00:42:25,010 --> 00:42:28,870
so an out of bounds rit

957
00:42:28,870 --> 00:42:31,600
vulnerability so basically a vulnerability

958
00:42:31,600 --> 00:42:33,440
that should

959
00:42:33,440 --> 00:42:36,530
only allow read access can

960
00:42:36,530 --> 00:42:39,530
to transform unipol flow is for the poor

961
00:42:39,530 --> 00:42:41,420
there are primitives that

962
00:42:41,420 --> 00:42:43,610
allow us to translate it into a remote code

963
00:42:43,610 --> 00:42:47,270
execution now it is not so important

964
00:42:47,270 --> 00:42:49,340
how I managed to create an

965
00:42:49,340 --> 00:42:51,200
explode to

966
00:42:51,200 --> 00:42:53,930
exploit this situation is not

967
00:42:53,930 --> 00:42:56,660
important because techniques for split and

968
00:42:56,660 --> 00:42:59,240
shaun deeb over  flow there are

969
00:42:59,240 --> 00:43:01,420
dozens of them I have not invented them so it is

970
00:43:01,420 --> 00:43:03,980
sufficient to simply apply the ones most

971
00:43:03,980 --> 00:43:05,960
suitable for yours for your

972
00:43:05,960 --> 00:43:07,849
environment what is important that perhaps

973
00:43:07,849 --> 00:43:10,310
has passed on the sly and that this is a

974
00:43:10,310 --> 00:43:13,700
generic exploitation technique

975
00:43:13,700 --> 00:43:15,920
this means that you can use it

976
00:43:15,920 --> 00:43:18,589
in  all those services in which there is

977
00:43:18,589 --> 00:43:20,930
at least one out of bounds reed

978
00:43:20,930 --> 00:43:22,700
vulnerability of this t  ipo and it is

979
00:43:22,700 --> 00:43:24,040
full of them the world

980
00:43:24,040 --> 00:43:26,780
allows you the location and the

981
00:43:26,780 --> 00:43:28,790
allocation also says of memory in

982
00:43:28,790 --> 00:43:30,650
a more or less controlled way and

983
00:43:30,650 --> 00:43:31,880
this is what happens when

984
00:43:31,880 --> 00:43:33,650
interacting with network services more or

985
00:43:33,650 --> 00:43:35,930
less and that at least one of the

986
00:43:35,930 --> 00:43:39,290
memory saints  is allocated with time where

987
00:43:39,290 --> 00:43:41,030
the root of the problem lies the root of the

988
00:43:41,030 --> 00:43:44,060
problem lies in a library vulnerable

989
00:43:44,060 --> 00:43:46,099
to the plus plus standards that

990
00:43:46,099 --> 00:43:49,160
this bug is used that I have discovered

991
00:43:49,160 --> 00:43:51,140
this part take it quietly

992
00:43:51,140 --> 00:43:52,460
because what the developers told me

993
00:43:52,460 --> 00:43:53,720
but that I could not

994
00:43:53,720 --> 00:43:56,359
verify it seems that this bug is

995
00:43:56,359 --> 00:43:58,700
older than twenty years it seems that it has

996
00:43:58,700 --> 00:44:00,460
been silently

997
00:44:00,460 --> 00:44:03,619
fixed inadvertently I would say

998
00:44:03,619 --> 00:44:06,500
almost when the

999
00:44:06,500 --> 00:44:09,829
gigi cdg sis ii 5.0 version was released which makes use

1000
00:44:09,829 --> 00:44:11,810
of the standard lim si plus plus or better

1001
00:44:11,810 --> 00:44:15,319
that she and al  inside it because from

1002
00:44:15,319 --> 00:44:16,880
that version onwards

1003
00:44:16,880 --> 00:44:19,369
the implementation of standard string has changed and

1004
00:44:19,369 --> 00:44:21,530
it also seems that in previous

1005
00:44:21,530 --> 00:44:23,960
versions the version prior to the  5.0

1006
00:44:23,960 --> 00:44:25,970
this problem cannot be

1007
00:44:25,970 --> 00:44:29,000
solved unless we introduce other

1008
00:44:29,000 --> 00:44:31,730
security problems already fixed in the past now

1009
00:44:31,730 --> 00:44:33,260
I for not knowing how to read or write

1010
00:44:33,260 --> 00:44:35,900
you will say well vulnerability of 2005

1011
00:44:35,900 --> 00:44:38,270
of 2015 you have found this

1012
00:44:38,270 --> 00:44:40,190
vulnerability chased appliances that

1013
00:44:40,190 --> 00:44:41,530
are notoriously

1014
00:44:41,530 --> 00:44:43,790
devices not really al  I keep up with the

1015
00:44:43,790 --> 00:44:45,859
times as regards the security features,

1016
00:44:45,859 --> 00:44:49,069
surely nothing else

1017
00:44:49,069 --> 00:44:50,960
serious will be afflicted me for not knowing how to

1018
00:44:50,960 --> 00:44:53,089
read or write since it followed it

1019
00:44:53,089 --> 00:44:55,190
appliance that tested used was

1020
00:44:55,190 --> 00:44:57,230
based on 106 I went to see

1021
00:44:57,230 --> 00:45:00,410
all the versions of I hear  from 5

1022
00:45:00,410 --> 00:45:02,780
onwards it is the only one that did not include vulnerable code,

1023
00:45:02,780 --> 00:45:06,050
the 8.0 which, however, was

1024
00:45:06,050 --> 00:45:08,640
decommissioned, reached its

1025
00:45:08,640 --> 00:45:10,080
life cycle at the end of its life cycle

1026
00:45:10,080 --> 00:45:13,200
in December 2021 and many have made,

1027
00:45:13,200 --> 00:45:15,660
let's say, a backward shift of

1028
00:45:15,660 --> 00:45:19,260
their workloads towards  santos set which

1029
00:45:19,260 --> 00:45:22,290
instead turns out to be vulnerable and which

1030
00:45:22,290 --> 00:45:24,900
will essentially expire in 2024 so

1031
00:45:24,900 --> 00:45:27,090
until 2024 we will have this vulner  skills

1032
00:45:27,090 --> 00:45:30,150
I conclude because I took the time to

1033
00:45:30,150 --> 00:45:31,680
give you a demonstration of what I say

1034
00:45:31,680 --> 00:45:33,840
in the slides you will find a small

1035
00:45:33,840 --> 00:45:35,540
source code

1036
00:45:35,540 --> 00:45:38,070
in which I substantially show that

1037
00:45:38,070 --> 00:45:40,140
putting us in a certain way and

1038
00:45:40,140 --> 00:45:43,070
trigger a copy between overlapping buffers went

1039
00:45:43,070 --> 00:45:45,720
with a lot I will go to

1040
00:45:45,720 --> 00:45:48,600
change the size of the  there is also

1041
00:45:48,600 --> 00:45:51,510
m1 which first will be 60 bytes and after place

1042
00:45:51,510 --> 00:45:55,020
instead it will be equal to 41 41 41 that

1043
00:45:55,020 --> 00:45:57,300
basically the payload we have

1044
00:45:57,300 --> 00:45:58,740
provided here so this vulnerability

1045
00:45:58,740 --> 00:46:03,470
and serious exists behind

1046
00:46:03,500 --> 00:46:06,600
there would be two more slides but we all have to

1047
00:46:06,600 --> 00:46:08,190
go to lunch which is perhaps

1048
00:46:08,190 --> 00:46:10,320
better  thank you all if

1049
00:46:10,320 --> 00:46:13,120
you want to add me on linkedin thanks

1050
00:46:13,120 --> 00:46:18,630
[Applause]

1051
00:46:19,160 --> 00:46:22,879
thanks marco

1052
00:46:22,890 --> 00:46:24,380
very

1053
00:46:24,380 --> 00:46:28,010
interesting thanks a lot

