1
00:00:04,400 --> 00:00:06,720
hey everyone welcome to our last session

2
00:00:06,720 --> 00:00:08,000
today with android

3
00:00:08,000 --> 00:00:10,000
acting android and ios apps with div

4
00:00:10,000 --> 00:00:12,000
links and xss

5
00:00:12,000 --> 00:00:15,519
this is with abraham from

6
00:00:15,519 --> 00:00:18,560
7a security so he's gonna start the

7
00:00:18,560 --> 00:00:19,199
workshop

8
00:00:19,199 --> 00:00:21,760
in a second

9
00:00:22,320 --> 00:00:31,840
or is yours

10
00:00:43,360 --> 00:00:48,399
so can everybody hear me and see me

11
00:00:50,719 --> 00:00:54,399
yeah all looking good okay good so

12
00:00:54,399 --> 00:00:57,680
okay then let's start

13
00:00:57,680 --> 00:01:00,640
cool so thank you for coming um today's

14
00:01:00,640 --> 00:01:01,840
session is

15
00:01:01,840 --> 00:01:04,959
uh about hacking uh android uh

16
00:01:04,959 --> 00:01:08,400
and ios apps with deep links and xss

17
00:01:08,400 --> 00:01:11,360
so this is a free webinar slash workshop

18
00:01:11,360 --> 00:01:13,040
right it's really a workshop because

19
00:01:13,040 --> 00:01:16,960
we have some exercises that you can try

20
00:01:16,960 --> 00:01:19,680
on your own so i sent everybody who

21
00:01:19,680 --> 00:01:21,520
registered

22
00:01:21,520 --> 00:01:24,080
an invite to the training portal so when

23
00:01:24,080 --> 00:01:26,400
you register and you log in

24
00:01:26,400 --> 00:01:29,520
you will have all the slides and

25
00:01:29,520 --> 00:01:31,040
everything

26
00:01:31,040 --> 00:01:34,159
that i'm going to use today as well as

27
00:01:34,159 --> 00:01:36,079
by clicking on the links from the slides

28
00:01:36,079 --> 00:01:38,960
you will be able to

29
00:01:39,040 --> 00:01:41,439
to to do the download that i will cover

30
00:01:41,439 --> 00:01:43,600
uh in the demos today

31
00:01:43,600 --> 00:01:47,680
right so so yeah so let's get started so

32
00:01:47,680 --> 00:01:50,240
um we're going to talk about hacking

33
00:01:50,240 --> 00:01:52,079
android and ios apps with deep links and

34
00:01:52,079 --> 00:01:53,439
xss so first

35
00:01:53,439 --> 00:01:56,640
i will give you a brief introduction

36
00:01:56,640 --> 00:01:59,200
about this and then we will talk about

37
00:01:59,200 --> 00:02:01,119
deep link attacks achieving

38
00:02:01,119 --> 00:02:03,680
user impersonation and authorization

39
00:02:03,680 --> 00:02:04,960
controls

40
00:02:04,960 --> 00:02:07,040
and deep link attacks to make phone

41
00:02:07,040 --> 00:02:08,878
calls and then we will see

42
00:02:08,878 --> 00:02:12,080
xss against mobile apps and in

43
00:02:12,080 --> 00:02:14,000
particular the scenario of

44
00:02:14,000 --> 00:02:16,400
data x filtration with xss right so how

45
00:02:16,400 --> 00:02:17,120
to read

46
00:02:17,120 --> 00:02:19,120
vocal files from the phone and send them

47
00:02:19,120 --> 00:02:20,879
to an attacker

48
00:02:20,879 --> 00:02:23,440
on both android and ios so i hope you

49
00:02:23,440 --> 00:02:24,400
find these

50
00:02:24,400 --> 00:02:27,920
entertaining so i'm abraham

51
00:02:27,920 --> 00:02:30,640
i'm the ceo of 70 security uh if you

52
00:02:30,640 --> 00:02:32,400
like this presentation there's a lot of

53
00:02:32,400 --> 00:02:34,239
public contest reports that you can see

54
00:02:34,239 --> 00:02:36,480
on the main website so two publications

55
00:02:36,480 --> 00:02:37,680
there's a lot of

56
00:02:37,680 --> 00:02:40,560
public reports that you can read three a

57
00:02:40,560 --> 00:02:42,480
very fast way to learn about what you

58
00:02:42,480 --> 00:02:44,239
should not do

59
00:02:44,239 --> 00:02:47,120
when you build your own mobile app we

60
00:02:47,120 --> 00:02:49,200
have delivered training at blackhead usa

61
00:02:49,200 --> 00:02:51,040
hacking the box what was global upset

62
00:02:51,040 --> 00:02:53,040
new code and many others hack first as

63
00:02:53,040 --> 00:02:55,120
well

64
00:02:55,120 --> 00:02:58,000
this map coming for upcoming stuff you

65
00:02:58,000 --> 00:03:00,400
can check the training link and then

66
00:03:00,400 --> 00:03:02,239
a while back i also wrote a course for

67
00:03:02,239 --> 00:03:04,080
hillary security called practical web

68
00:03:04,080 --> 00:03:05,200
defense

69
00:03:05,200 --> 00:03:07,920
so this was about hacking applications

70
00:03:07,920 --> 00:03:09,760
and then defending them i don't make any

71
00:03:09,760 --> 00:03:11,200
money out of this anymore

72
00:03:11,200 --> 00:03:13,840
but just to mention that i'm also one of

73
00:03:13,840 --> 00:03:14,720
the

74
00:03:14,720 --> 00:03:17,920
leaders of the project leaders of osw

75
00:03:17,920 --> 00:03:19,519
which is a nova's flagship project so if

76
00:03:19,519 --> 00:03:20,080
you type

77
00:03:20,080 --> 00:03:21,599
automatically of.org in your browser

78
00:03:21,599 --> 00:03:23,360
that takes you there for all the

79
00:03:23,360 --> 00:03:25,440
presentations you can check my

80
00:03:25,440 --> 00:03:27,840
slideshare and that's um some

81
00:03:27,840 --> 00:03:30,400
certification stuff so

82
00:03:30,400 --> 00:03:33,040
if after all this pandemic we meet

83
00:03:33,040 --> 00:03:34,159
someday

84
00:03:34,159 --> 00:03:36,560
um you know i can tell you how this

85
00:03:36,560 --> 00:03:39,120
happened over a year or two

86
00:03:39,120 --> 00:03:42,879
so from the public report he's got a bit

87
00:03:42,879 --> 00:03:44,080
more attention

88
00:03:44,080 --> 00:03:46,799
so uh smartsheet was an application that

89
00:03:46,799 --> 00:03:48,879
was mandated in the entire country of

90
00:03:48,879 --> 00:03:50,319
south korea so

91
00:03:50,319 --> 00:03:53,439
by law uh parents and children were

92
00:03:53,439 --> 00:03:55,519
forced to install this application

93
00:03:55,519 --> 00:03:58,879
so typical political idea or

94
00:03:58,879 --> 00:04:01,200
uh you know let's save the children and

95
00:04:01,200 --> 00:04:02,799
then get approved

96
00:04:02,799 --> 00:04:07,439
so in theory it was a nice idea to

97
00:04:07,439 --> 00:04:09,360
you know protect the children so that

98
00:04:09,360 --> 00:04:11,040
the parent would control like during

99
00:04:11,040 --> 00:04:13,920
what times the child would use the phone

100
00:04:13,920 --> 00:04:15,439
and things like this but in practice the

101
00:04:15,439 --> 00:04:17,680
implementation was really bad so that

102
00:04:17,680 --> 00:04:18,160
was

103
00:04:18,160 --> 00:04:20,478
a lot of possible attacks we tested them

104
00:04:20,478 --> 00:04:21,279
twice

105
00:04:21,279 --> 00:04:23,199
so you can see the two our defenses

106
00:04:23,199 --> 00:04:25,199
reports it was so bad that we even gave

107
00:04:25,199 --> 00:04:26,880
a talk about it so you can watch that on

108
00:04:26,880 --> 00:04:27,759
youtube

109
00:04:27,759 --> 00:04:30,160
these are the slides for that and then

110
00:04:30,160 --> 00:04:31,440
another

111
00:04:31,440 --> 00:04:35,040
series of interesting filters reports

112
00:04:35,040 --> 00:04:36,160
are

113
00:04:36,160 --> 00:04:38,080
the ones for the chinese government you

114
00:04:38,080 --> 00:04:39,199
know this uh

115
00:04:39,199 --> 00:04:41,280
the context of these applications is

116
00:04:41,280 --> 00:04:43,360
that there's a muslim minority in a

117
00:04:43,360 --> 00:04:45,600
region of china called xinjiang

118
00:04:45,600 --> 00:04:47,840
and then the human rights activists were

119
00:04:47,840 --> 00:04:49,280
concerned that

120
00:04:49,280 --> 00:04:50,560
maybe they are gathering too much

121
00:04:50,560 --> 00:04:53,600
information about the citizens

122
00:04:53,600 --> 00:04:55,520
maybe this would constitute a human

123
00:04:55,520 --> 00:04:57,120
right violation

124
00:04:57,120 --> 00:05:00,000
so we help the human rights activist

125
00:05:00,000 --> 00:05:01,840
answer these questions right so these

126
00:05:01,840 --> 00:05:04,320
are more privacy related and these are

127
00:05:04,320 --> 00:05:06,320
more security reader right so these are

128
00:05:06,320 --> 00:05:07,360
just

129
00:05:07,360 --> 00:05:08,960
some of the ones that got a bit more

130
00:05:08,960 --> 00:05:11,199
attention on the news and then there's a

131
00:05:11,199 --> 00:05:12,000
lot more

132
00:05:12,000 --> 00:05:15,039
pentest reports on the website right so

133
00:05:15,039 --> 00:05:16,400
this course is also

134
00:05:16,400 --> 00:05:20,400
uh written in part by anirudhananso he's

135
00:05:20,400 --> 00:05:22,240
a security researcher

136
00:05:22,240 --> 00:05:24,080
he's focused on web and mobile

137
00:05:24,080 --> 00:05:25,840
application security he likes to play

138
00:05:25,840 --> 00:05:26,560
ctfs

139
00:05:26,560 --> 00:05:29,199
and he's a member of the number one

140
00:05:29,199 --> 00:05:32,000
ranked team in india called t bios

141
00:05:32,000 --> 00:05:35,199
so he's an occasional bounty hunter

142
00:05:35,199 --> 00:05:38,160
so he has found google microsoft being

143
00:05:38,160 --> 00:05:40,400
it loves sentences and others

144
00:05:40,400 --> 00:05:42,400
he also likes open source has

145
00:05:42,400 --> 00:05:44,320
contributed to some projects he has some

146
00:05:44,320 --> 00:05:45,440
certifications and

147
00:05:45,440 --> 00:05:49,120
then his blog on his twitter

148
00:05:49,120 --> 00:05:52,400
so yeah this is more uh for

149
00:05:52,400 --> 00:05:56,000
the course itself right so if uh

150
00:05:56,000 --> 00:05:57,759
if somebody plans to take the course

151
00:05:57,759 --> 00:05:59,120
then you need

152
00:05:59,120 --> 00:06:01,440
you know ability to read pdf files and

153
00:06:01,440 --> 00:06:02,720
sometimes people come

154
00:06:02,720 --> 00:06:04,400
with a corporate laptop and then they

155
00:06:04,400 --> 00:06:06,080
cannot do anything

156
00:06:06,080 --> 00:06:08,479
so that is not ideal right so you need a

157
00:06:08,479 --> 00:06:10,000
usb allowed

158
00:06:10,000 --> 00:06:12,240
to you know at least import vm something

159
00:06:12,240 --> 00:06:13,120
like this

160
00:06:13,120 --> 00:06:16,160
8 gigabytes of ram should be plenty 6 60

161
00:06:16,160 --> 00:06:19,520
gigabytes of 3d space and

162
00:06:19,520 --> 00:06:21,120
for the mobile course we recommend

163
00:06:21,120 --> 00:06:23,759
virtualbox because we use genymotion and

164
00:06:23,759 --> 00:06:25,120
genymotion uses

165
00:06:25,120 --> 00:06:27,360
virtualbox under the hood so virtualbox

166
00:06:27,360 --> 00:06:28,400
is going to be

167
00:06:28,400 --> 00:06:31,440
better of course

168
00:06:31,440 --> 00:06:34,880
and then and then we will use verb

169
00:06:34,880 --> 00:06:36,400
during the class but

170
00:06:36,400 --> 00:06:39,440
you know zapa and fiddler can also uh

171
00:06:39,440 --> 00:06:41,600
the job if you are more comfortable with

172
00:06:41,600 --> 00:06:43,039
that

173
00:06:43,039 --> 00:06:45,430
and then another thing is that

174
00:06:45,430 --> 00:06:46,639
[Music]

175
00:06:46,639 --> 00:06:48,720
in the whole courses right so normally

176
00:06:48,720 --> 00:06:50,560
you are going to get digital copies of

177
00:06:50,560 --> 00:06:51,440
streaming material

178
00:06:51,440 --> 00:06:52,960
at the ends test tabs and source codes

179
00:06:52,960 --> 00:06:54,800
so the first four points are kind of the

180
00:06:54,800 --> 00:06:55,840
standard

181
00:06:55,840 --> 00:06:58,000
and then what maybe we will be different

182
00:06:58,000 --> 00:07:00,240
is we give you lifetime access to the

183
00:07:00,240 --> 00:07:01,919
training portal including all future of

184
00:07:01,919 --> 00:07:03,919
this pre-step-by-step video recording

185
00:07:03,919 --> 00:07:06,000
slice and lab pdfs and unlimited email

186
00:07:06,000 --> 00:07:07,840
support right we also have

187
00:07:07,840 --> 00:07:11,120
a slack you know where all the

188
00:07:11,120 --> 00:07:15,360
trainees also you know get to

189
00:07:15,360 --> 00:07:17,520
ask the questions and get answers in

190
00:07:17,520 --> 00:07:18,880
more kind of

191
00:07:18,880 --> 00:07:22,000
closer to real time right so just to

192
00:07:22,000 --> 00:07:23,680
mention that so

193
00:07:23,680 --> 00:07:25,840
i'm going to briefly talk about the

194
00:07:25,840 --> 00:07:27,360
course like just for five minutes and

195
00:07:27,360 --> 00:07:29,360
then while i do this i will

196
00:07:29,360 --> 00:07:30,880
focus a little bit more on what we're

197
00:07:30,880 --> 00:07:32,800
going to cover today right so

198
00:07:32,800 --> 00:07:34,240
the first part talks about hacking

199
00:07:34,240 --> 00:07:36,639
android and iot apps by example so we

200
00:07:36,639 --> 00:07:39,120
start with using thermos and try to

201
00:07:39,120 --> 00:07:41,120
understand how permissions work

202
00:07:41,120 --> 00:07:44,479
in android so with general tech and all

203
00:07:44,479 --> 00:07:45,360
this

204
00:07:45,360 --> 00:07:48,080
so we are not going to do any of this

205
00:07:48,080 --> 00:07:49,280
today but just

206
00:07:49,280 --> 00:07:52,479
mention this and then in laptop we talk

207
00:07:52,479 --> 00:07:53,680
about

208
00:07:53,680 --> 00:07:56,319
reversing and source code analysis so

209
00:07:56,319 --> 00:07:57,199
here

210
00:07:57,199 --> 00:08:00,400
we will do some

211
00:08:00,400 --> 00:08:03,840
stuff today uh in that we will look at

212
00:08:03,840 --> 00:08:05,199
the android manifest

213
00:08:05,199 --> 00:08:08,240
a little bit um and then we also take

214
00:08:08,240 --> 00:08:09,120
like some

215
00:08:09,120 --> 00:08:12,000
automated tools like work and mobile and

216
00:08:12,000 --> 00:08:13,520
others right

217
00:08:13,520 --> 00:08:15,440
then lock three attacking android apps

218
00:08:15,440 --> 00:08:16,639
so this is uh

219
00:08:16,639 --> 00:08:18,160
some of these is what we're going to

220
00:08:18,160 --> 00:08:20,080
cover today so today

221
00:08:20,080 --> 00:08:22,800
we will do a little bit of drawser in

222
00:08:22,800 --> 00:08:24,479
particular we will

223
00:08:24,479 --> 00:08:28,240
exploit the deep links with drowser

224
00:08:28,240 --> 00:08:30,960
so we will see a little bit of this and

225
00:08:30,960 --> 00:08:31,280
we

226
00:08:31,280 --> 00:08:33,919
also see deep links in android we will

227
00:08:33,919 --> 00:08:34,958
do the

228
00:08:34,958 --> 00:08:37,679
the demo for periscope but in the course

229
00:08:37,679 --> 00:08:39,519
we also have another one for

230
00:08:39,519 --> 00:08:42,958
shopify with a nice fingerprint bypass

231
00:08:42,958 --> 00:08:45,760
so this uh you know just to mention that

232
00:08:45,760 --> 00:08:47,120
the course like you have some

233
00:08:47,120 --> 00:08:50,560
notifications and in the workshop today

234
00:08:50,560 --> 00:08:53,120
we will also use this periscope cursor

235
00:08:53,120 --> 00:08:54,640
request forgery with nib links

236
00:08:54,640 --> 00:08:57,680
this will be one of the demos today

237
00:08:57,680 --> 00:08:59,360
and then with webviews and data

238
00:08:59,360 --> 00:09:00,800
exploration we will do

239
00:09:00,800 --> 00:09:02,800
a little bit of this today not not the

240
00:09:02,800 --> 00:09:03,920
whole thing because we don't

241
00:09:03,920 --> 00:09:06,959
time a little bit so that you see

242
00:09:06,959 --> 00:09:09,839
how this works right with xss and data

243
00:09:09,839 --> 00:09:13,040
exfiltration and attacking web views

244
00:09:13,040 --> 00:09:15,200
then love for art of mine in the middle

245
00:09:15,200 --> 00:09:17,040
we won't do this today but

246
00:09:17,040 --> 00:09:20,240
just to mention this and then we also

247
00:09:20,240 --> 00:09:20,720
click

248
00:09:20,720 --> 00:09:24,320
reflecting android apps so modifying the

249
00:09:24,320 --> 00:09:27,040
applications at rest and

250
00:09:27,040 --> 00:09:29,440
stuff by passing detection and doing

251
00:09:29,440 --> 00:09:30,560
other things

252
00:09:30,560 --> 00:09:32,399
and then in lab6 we talked about the

253
00:09:32,399 --> 00:09:33,600
instrument mission

254
00:09:33,600 --> 00:09:36,399
exposed by

255
00:09:40,880 --> 00:09:42,959
etf with open challenges for you to

256
00:09:42,959 --> 00:09:45,200
practice and then in part two we talk

257
00:09:45,200 --> 00:09:45,839
about

258
00:09:45,839 --> 00:09:50,000
hacking io ios by example

259
00:09:50,000 --> 00:09:52,080
so we start with an introduction how to

260
00:09:52,080 --> 00:09:53,360
install apps download

261
00:09:53,360 --> 00:09:56,800
from the broken phone and other

262
00:09:56,800 --> 00:10:00,560
things like this and then

263
00:10:00,560 --> 00:10:02,240
yeah here we will talk about the

264
00:10:02,240 --> 00:10:04,240
compiling black box analysis and so on

265
00:10:04,240 --> 00:10:04,880
but

266
00:10:04,880 --> 00:10:07,920
today we are not going to check this

267
00:10:07,920 --> 00:10:10,160
and in lab 3 we will do some of these

268
00:10:10,160 --> 00:10:12,719
today right

269
00:10:13,120 --> 00:10:14,399
attacking web views and data

270
00:10:14,399 --> 00:10:16,560
exfiltration

271
00:10:16,560 --> 00:10:18,320
attacking and then finding and

272
00:10:18,320 --> 00:10:20,079
exploiting url hunters right so these

273
00:10:20,079 --> 00:10:20,640
are the two

274
00:10:20,640 --> 00:10:23,040
things so just to mention that what i'm

275
00:10:23,040 --> 00:10:24,480
going to show you today is a very small

276
00:10:24,480 --> 00:10:25,440
part of

277
00:10:25,440 --> 00:10:28,560
the full course is about but you know

278
00:10:28,560 --> 00:10:30,560
just so that you have a little bit of

279
00:10:30,560 --> 00:10:32,240
background about where the things we're

280
00:10:32,240 --> 00:10:34,160
going to uh to cover today where they

281
00:10:34,160 --> 00:10:36,320
fall

282
00:10:36,320 --> 00:10:38,000
right then there's a man in the middle

283
00:10:38,000 --> 00:10:40,240
for ios like what is different

284
00:10:40,240 --> 00:10:42,880
and how to bypass spinning and do other

285
00:10:42,880 --> 00:10:44,000
things like this

286
00:10:44,000 --> 00:10:46,399
man in the middle modifying hyper file

287
00:10:46,399 --> 00:10:47,200
has rest

288
00:10:47,200 --> 00:10:49,360
so we will have binaries and other

289
00:10:49,360 --> 00:10:51,600
things

290
00:10:51,600 --> 00:10:54,880
also when you patch an application

291
00:10:54,880 --> 00:10:57,760
because in ios things tend to be a

292
00:10:57,760 --> 00:10:59,600
binary but sometimes

293
00:10:59,600 --> 00:11:01,680
you have a an application written in

294
00:11:01,680 --> 00:11:03,360
javascript

295
00:11:03,360 --> 00:11:05,360
you might not need to modify the binary

296
00:11:05,360 --> 00:11:07,200
you can modify it as the javascript file

297
00:11:07,200 --> 00:11:07,760
so

298
00:11:07,760 --> 00:11:10,880
we have some examples of that as well

299
00:11:10,880 --> 00:11:13,839
and then we take instrumentation with

300
00:11:13,839 --> 00:11:14,640
difficult

301
00:11:14,640 --> 00:11:16,720
different things here uh bypass

302
00:11:16,720 --> 00:11:18,079
integrated picture using

303
00:11:18,079 --> 00:11:20,160
uh cydia tweaks uh introduction to

304
00:11:20,160 --> 00:11:21,839
secret introduction to flex

305
00:11:21,839 --> 00:11:24,800
flex is a really cool tool um it allows

306
00:11:24,800 --> 00:11:26,000
you to load up

307
00:11:26,000 --> 00:11:28,640
stuff from phone and then we also cover

308
00:11:28,640 --> 00:11:29,279
passion for

309
00:11:29,279 --> 00:11:31,600
right and then at the end again open

310
00:11:31,600 --> 00:11:32,399
calendar

311
00:11:32,399 --> 00:11:35,040
so that is just a you know very quick

312
00:11:35,040 --> 00:11:36,800
overview about what the course is about

313
00:11:36,800 --> 00:11:39,600
and today we are going to see some small

314
00:11:39,600 --> 00:11:41,519
parts

315
00:11:41,519 --> 00:11:44,560
with this um now we're

316
00:11:44,560 --> 00:11:47,519
getting started with actual uh webinar

317
00:11:47,519 --> 00:11:49,120
slash workshop so

318
00:11:49,120 --> 00:11:51,440
does crosshair request forgery exist in

319
00:11:51,440 --> 00:11:52,320
mobile apps

320
00:11:52,320 --> 00:11:56,240
uh what do you think

321
00:11:56,240 --> 00:12:00,639
um yes is this a yes from

322
00:12:00,639 --> 00:12:03,279
can you hear me or is this a yes from

323
00:12:03,279 --> 00:12:06,399
the cursor request forgery

324
00:12:06,399 --> 00:12:11,839
existing mobile apps

325
00:12:28,639 --> 00:12:31,600
so anybody

326
00:12:33,920 --> 00:12:36,959
seems yeah on the stream it seems it's

327
00:12:36,959 --> 00:12:38,800
one slide behind

328
00:12:38,800 --> 00:12:44,319
of where i am so

329
00:12:48,959 --> 00:12:51,600
so yeah what do you think um cursor

330
00:12:51,600 --> 00:12:55,680
request forgery or mobile apps yes no

331
00:13:03,200 --> 00:13:05,920
it was at the beginning yes yes i think

332
00:13:05,920 --> 00:13:06,240
so

333
00:13:06,240 --> 00:13:10,800
exactly so yeah so crosstalk requests 43

334
00:13:10,800 --> 00:13:14,639
exists in mobile apps right so

335
00:13:14,639 --> 00:13:17,200
so yeah we're going to see this in this

336
00:13:17,200 --> 00:13:19,519
section now so we're going to cover

337
00:13:19,519 --> 00:13:21,760
deep link attacks achieving user

338
00:13:21,760 --> 00:13:23,040
impersonation

339
00:13:23,040 --> 00:13:25,680
and deep link attacks to bypass

340
00:13:25,680 --> 00:13:27,839
authorization controls

341
00:13:27,839 --> 00:13:30,000
right so first we have to talk a little

342
00:13:30,000 --> 00:13:31,279
bit about the basics right so

343
00:13:31,279 --> 00:13:33,279
introduction to

344
00:13:33,279 --> 00:13:35,839
mobile deep links so deep links are uris

345
00:13:35,839 --> 00:13:37,360
that can be used to

346
00:13:37,360 --> 00:13:39,360
navigate to different parts of an

347
00:13:39,360 --> 00:13:40,720
application

348
00:13:40,720 --> 00:13:42,880
they are available on both android and

349
00:13:42,880 --> 00:13:43,920
ios

350
00:13:43,920 --> 00:13:46,560
then deep links can have do not have to

351
00:13:46,560 --> 00:13:47,199
have

352
00:13:47,199 --> 00:13:50,399
custom skins right so

353
00:13:50,399 --> 00:13:52,800
i'll explain this in a moment so for

354
00:13:52,800 --> 00:13:54,800
example a social media application could

355
00:13:54,800 --> 00:13:55,600
register

356
00:13:55,600 --> 00:13:58,320
a custom important scheme like social

357
00:13:58,320 --> 00:14:00,880
app and then call on slashlash homepage

358
00:14:00,880 --> 00:14:04,160
so this would be a custom scheme

359
00:14:04,160 --> 00:14:06,880
this social app right so any

360
00:14:06,880 --> 00:14:07,600
click-to-set

361
00:14:07,600 --> 00:14:10,560
link will be automatically directed to

362
00:14:10,560 --> 00:14:12,079
this application

363
00:14:12,079 --> 00:14:14,639
so this provides the ability to navigate

364
00:14:14,639 --> 00:14:15,760
to different

365
00:14:15,760 --> 00:14:18,160
activities and pages so we can have

366
00:14:18,160 --> 00:14:20,480
social app colon slice last profile

367
00:14:20,480 --> 00:14:22,639
at least we could open a profile on

368
00:14:22,639 --> 00:14:23,600
there then

369
00:14:23,600 --> 00:14:26,240
we could also have social app and then

370
00:14:26,240 --> 00:14:28,959
column slash slides profile profile pic

371
00:14:28,959 --> 00:14:31,360
and then this will allow us to access

372
00:14:31,360 --> 00:14:33,120
the profile picture

373
00:14:33,120 --> 00:14:36,320
within the profile page

374
00:14:36,320 --> 00:14:38,720
so when we are looking on the android

375
00:14:38,720 --> 00:14:40,560
manifest

376
00:14:40,560 --> 00:14:43,519
browseable is interesting but it is not

377
00:14:43,519 --> 00:14:44,160
necessary

378
00:14:44,160 --> 00:14:48,079
for this kind of so um we have

379
00:14:48,079 --> 00:14:50,639
an activity so it starts with the

380
00:14:50,639 --> 00:14:52,560
activity tag on the

381
00:14:52,560 --> 00:14:55,440
android manifest and then we will have

382
00:14:55,440 --> 00:14:57,360
the name of the activity

383
00:14:57,360 --> 00:15:00,880
and then you can see here uh there's no

384
00:15:00,880 --> 00:15:04,240
exported true right so this is

385
00:15:04,240 --> 00:15:07,040
because the activity is not explicitly

386
00:15:07,040 --> 00:15:09,040
exported so it doesn't have exported

387
00:15:09,040 --> 00:15:10,240
through here

388
00:15:10,240 --> 00:15:13,680
but it has intent filter so the intent

389
00:15:13,680 --> 00:15:15,040
filter

390
00:15:15,040 --> 00:15:18,160
of the

391
00:15:18,160 --> 00:15:21,600
of this activity uh implicitly

392
00:15:21,600 --> 00:15:24,320
exports this activity to other apps on

393
00:15:24,320 --> 00:15:24,959
the phone

394
00:15:24,959 --> 00:15:27,120
right so even if you don't see any

395
00:15:27,120 --> 00:15:28,320
exported here

396
00:15:28,320 --> 00:15:30,959
if there's an end filter this means that

397
00:15:30,959 --> 00:15:31,680
any app

398
00:15:31,680 --> 00:15:33,279
installed on the phone can call this

399
00:15:33,279 --> 00:15:36,240
activity and try to attack it

400
00:15:36,240 --> 00:15:38,880
so in this case we have a android scheme

401
00:15:38,880 --> 00:15:40,240
of some app

402
00:15:40,240 --> 00:15:42,959
and the host part of the url is called

403
00:15:42,959 --> 00:15:45,279
get creds and then the path prefix is

404
00:15:45,279 --> 00:15:49,199
a slash user right so this means that

405
00:15:49,199 --> 00:15:51,920
we have uh we have to to build the url

406
00:15:51,920 --> 00:15:52,480
like this

407
00:15:52,480 --> 00:15:55,279
scheme column slash slash host and path

408
00:15:55,279 --> 00:15:56,639
so in this case it would be

409
00:15:56,639 --> 00:15:58,639
some app and then column slash last get

410
00:15:58,639 --> 00:15:59,920
credits and then slash

411
00:15:59,920 --> 00:16:02,880
user right so this would be the way to

412
00:16:02,880 --> 00:16:05,360
call this

413
00:16:05,360 --> 00:16:08,880
and then if we also have this possible

414
00:16:08,880 --> 00:16:10,800
thing which is optional

415
00:16:10,800 --> 00:16:13,360
but when it is present it makes the

416
00:16:13,360 --> 00:16:16,160
attack more interesting because

417
00:16:16,160 --> 00:16:17,920
uh it makes attacks more interesting

418
00:16:17,920 --> 00:16:19,759
because sometimes

419
00:16:19,759 --> 00:16:22,959
we can also exploit issues from a

420
00:16:22,959 --> 00:16:24,160
browser

421
00:16:24,160 --> 00:16:28,079
right so if you use the browseable

422
00:16:29,120 --> 00:16:32,480
category for an activity this means the

423
00:16:32,480 --> 00:16:35,440
activity can also be invoked from the

424
00:16:35,440 --> 00:16:36,880
android browser

425
00:16:36,880 --> 00:16:39,920
right so this is uh can be interesting

426
00:16:39,920 --> 00:16:40,720
as well

427
00:16:40,720 --> 00:16:43,759
with this we will start with the

428
00:16:43,759 --> 00:16:45,759
case study with a periscope cross

429
00:16:45,759 --> 00:16:47,360
request forgery using

430
00:16:47,360 --> 00:16:50,399
deep links

431
00:16:50,399 --> 00:16:53,519
so for everybody who registered i send

432
00:16:53,519 --> 00:16:54,720
you an invite to the

433
00:16:54,720 --> 00:16:57,279
training portal so when you log in and

434
00:16:57,279 --> 00:16:59,199
you download the slides

435
00:16:59,199 --> 00:17:01,600
you while you are still logged in from

436
00:17:01,600 --> 00:17:03,360
the slides just click on this link and

437
00:17:03,360 --> 00:17:04,000
then this will

438
00:17:04,000 --> 00:17:06,160
download the vulnerable periscope

439
00:17:06,160 --> 00:17:08,640
version so if you use the latest

440
00:17:08,640 --> 00:17:10,959
it won't work because this was patched

441
00:17:10,959 --> 00:17:11,919
you need this

442
00:17:11,919 --> 00:17:14,799
exact same version right so not any

443
00:17:14,799 --> 00:17:16,400
version of periscope will work for this

444
00:17:16,400 --> 00:17:18,319
you need this exact the first

445
00:17:18,319 --> 00:17:21,039
you can get from the training board

446
00:17:21,039 --> 00:17:24,559
right so if anybody has problems just uh

447
00:17:24,559 --> 00:17:27,520
send an email or something troubleshoot

448
00:17:27,520 --> 00:17:27,839
them

449
00:17:27,839 --> 00:17:31,600
right so email admin at 70security.com

450
00:17:31,600 --> 00:17:33,840
and we can either give you access or

451
00:17:33,840 --> 00:17:35,679
help you troubleshoot if you

452
00:17:35,679 --> 00:17:38,160
have any problems and then i'll mention

453
00:17:38,160 --> 00:17:41,280
this at the end as well but you can also

454
00:17:41,280 --> 00:17:43,280
get this workshop and other workshops

455
00:17:43,280 --> 00:17:44,840
for free on the store

456
00:17:44,840 --> 00:17:47,600
so uh so that's something else as well

457
00:17:47,600 --> 00:17:49,919
go to store.70security.com

458
00:17:49,919 --> 00:17:51,679
you can get this workshop and other

459
00:17:51,679 --> 00:17:53,360
workshops that

460
00:17:53,360 --> 00:17:56,640
are also there it's a much longer

461
00:17:56,640 --> 00:17:59,919
version of this that is almost four

462
00:17:59,919 --> 00:18:00,960
hours

463
00:18:00,960 --> 00:18:03,600
uh that is also about mobile apps as

464
00:18:03,600 --> 00:18:04,640
well and it has

465
00:18:04,640 --> 00:18:06,880
like the same dimensions here but then

466
00:18:06,880 --> 00:18:08,400
people there's a lot of slides covering

467
00:18:08,400 --> 00:18:08,640
all

468
00:18:08,640 --> 00:18:12,640
of our attacks so you can also find that

469
00:18:12,640 --> 00:18:15,039
interesting right so download the slides

470
00:18:15,039 --> 00:18:16,400
and then you click on this and

471
00:18:16,400 --> 00:18:18,320
this will download the vulnerable

472
00:18:18,320 --> 00:18:19,679
version of periscope and then you can

473
00:18:19,679 --> 00:18:21,919
install this in some android phone or jd

474
00:18:21,919 --> 00:18:23,520
motion or any

475
00:18:23,520 --> 00:18:26,720
android emulator and then you can try

476
00:18:26,720 --> 00:18:29,280
this exercise right so i'm explaining

477
00:18:29,280 --> 00:18:30,080
this because

478
00:18:30,080 --> 00:18:32,000
i will do the demo afterwards but as you

479
00:18:32,000 --> 00:18:33,360
follow along

480
00:18:33,360 --> 00:18:36,320
um it makes things a little easier so

481
00:18:36,320 --> 00:18:36,960
one thing

482
00:18:36,960 --> 00:18:39,760
after you install the periscope you will

483
00:18:39,760 --> 00:18:40,880
need to create

484
00:18:40,880 --> 00:18:43,280
an account of course because to

485
00:18:43,280 --> 00:18:44,320
demonstrate the

486
00:18:44,320 --> 00:18:47,919
deep link issue you need to have

487
00:18:47,919 --> 00:18:50,320
an account first right otherwise when

488
00:18:50,320 --> 00:18:53,600
you open the deep link it will just open

489
00:18:53,600 --> 00:18:55,440
this where you don't have an account yet

490
00:18:55,440 --> 00:18:57,600
so be able to see

491
00:18:57,600 --> 00:18:59,280
that this works right so just click on

492
00:18:59,280 --> 00:19:00,720
create new account and then you can

493
00:19:00,720 --> 00:19:02,640
create it between google facebook reader

494
00:19:02,640 --> 00:19:03,919
phone number that's your choice it

495
00:19:03,919 --> 00:19:06,160
doesn't really matter you can

496
00:19:06,160 --> 00:19:09,679
use whatever you want and then after

497
00:19:09,679 --> 00:19:13,360
this is created uh then you can you're

498
00:19:13,360 --> 00:19:14,160
ready to

499
00:19:14,160 --> 00:19:17,039
start doing this right so uh one thing

500
00:19:17,039 --> 00:19:17,760
would be

501
00:19:17,760 --> 00:19:20,880
um so to look at for

502
00:19:20,880 --> 00:19:22,720
crosshair request for jury issues or

503
00:19:22,720 --> 00:19:24,320
deep link issues in

504
00:19:24,320 --> 00:19:27,919
android applications first we need to

505
00:19:27,919 --> 00:19:30,080
decompile the application and take a

506
00:19:30,080 --> 00:19:31,760
look at the android manifest and then

507
00:19:31,760 --> 00:19:32,720
from there

508
00:19:32,720 --> 00:19:35,919
take a look at the activities as well

509
00:19:35,919 --> 00:19:39,200
to try to you know find some potential

510
00:19:39,200 --> 00:19:42,320
problems here right so

511
00:19:42,559 --> 00:19:44,320
so the main thing that we are looking

512
00:19:44,320 --> 00:19:46,160
for in our scenarios where

513
00:19:46,160 --> 00:19:48,240
a malicious attacker could trick a user

514
00:19:48,240 --> 00:19:50,320
to follow uh arbitrary accounts without

515
00:19:50,320 --> 00:19:52,720
the user consent using deep links

516
00:19:52,720 --> 00:19:54,799
or something similar like that right so

517
00:19:54,799 --> 00:19:56,160
some sort of

518
00:19:56,160 --> 00:19:58,799
a deep link that performs an action

519
00:19:58,799 --> 00:20:01,440
without any user confirmation right so

520
00:20:01,440 --> 00:20:03,760
if you have a scenario like that

521
00:20:03,760 --> 00:20:06,720
then it may be possible to get a

522
00:20:06,720 --> 00:20:09,919
crosstalk request forgery

523
00:20:11,440 --> 00:20:12,960
so the first the first thing we need to

524
00:20:12,960 --> 00:20:14,880
do is to decompile the application so

525
00:20:14,880 --> 00:20:16,880
you can do that with apk tools

526
00:20:16,880 --> 00:20:19,360
if you do apk tool and then for

527
00:20:19,360 --> 00:20:20,000
decompile

528
00:20:20,000 --> 00:20:23,120
and then the the periscope apk

529
00:20:23,120 --> 00:20:27,280
this will decompile the apk

530
00:20:27,280 --> 00:20:31,679
and then from there you will be able to

531
00:20:31,679 --> 00:20:34,400
you know investigate the the problem

532
00:20:34,400 --> 00:20:36,640
right so when you run apk tool this will

533
00:20:36,640 --> 00:20:39,600
look something like this you see an apk

534
00:20:39,600 --> 00:20:43,280
then you will um like this and then

535
00:20:43,280 --> 00:20:45,760
we can start looking at the android

536
00:20:45,760 --> 00:20:47,120
manifest right so

537
00:20:47,120 --> 00:20:50,159
you open the androidmanifest.xml

538
00:20:50,159 --> 00:20:53,280
and then you basically have to look for

539
00:20:53,280 --> 00:20:54,080
these

540
00:20:54,080 --> 00:20:56,960
intent filters right so you see like

541
00:20:56,960 --> 00:20:58,799
action and then category

542
00:20:58,799 --> 00:21:02,320
browserable and then here you have like

543
00:21:02,320 --> 00:21:04,400
the data android host android path

544
00:21:04,400 --> 00:21:04,960
prefix

545
00:21:04,960 --> 00:21:07,120
android scheme so this is this is

546
00:21:07,120 --> 00:21:08,080
showing you

547
00:21:08,080 --> 00:21:10,960
how the link structure is right so i

548
00:21:10,960 --> 00:21:11,440
mentioned

549
00:21:11,440 --> 00:21:14,640
before that links

550
00:21:14,640 --> 00:21:17,200
can have custom schemes but do not

551
00:21:17,200 --> 00:21:19,120
really have to have custom skips

552
00:21:19,120 --> 00:21:22,240
this is a scenario where we can see that

553
00:21:22,240 --> 00:21:24,000
right so in this case we have an android

554
00:21:24,000 --> 00:21:25,679
schema of https

555
00:21:25,679 --> 00:21:30,240
an android host of www.periscope then a

556
00:21:30,240 --> 00:21:31,919
path prefix of slash

557
00:21:31,919 --> 00:21:35,120
so this means if you have like https

558
00:21:35,120 --> 00:21:36,880
column slash slides and then that will

559
00:21:36,880 --> 00:21:39,919
direct periscope.tv slash

560
00:21:39,919 --> 00:21:42,559
then this activity the activity has this

561
00:21:42,559 --> 00:21:44,159
in the filter

562
00:21:44,159 --> 00:21:47,600
will be invoked right so the same way

563
00:21:47,600 --> 00:21:48,320
that we

564
00:21:48,320 --> 00:21:51,919
will use attack diplins using custom

565
00:21:51,919 --> 00:21:53,520
schemes we can also

566
00:21:53,520 --> 00:21:57,200
attack the applications using

567
00:21:57,760 --> 00:22:00,480
https uh links as long as the

568
00:22:00,480 --> 00:22:02,080
application has

569
00:22:02,080 --> 00:22:05,760
registered these links the

570
00:22:05,760 --> 00:22:08,720
activity itself right and then you will

571
00:22:08,720 --> 00:22:10,080
see that a lot more

572
00:22:10,080 --> 00:22:12,480
possible combinations in this particular

573
00:22:12,480 --> 00:22:15,679
case we will focus on the host the user

574
00:22:15,679 --> 00:22:17,440
the path prefix slash and then the

575
00:22:17,440 --> 00:22:19,520
scheme is pscp

576
00:22:19,520 --> 00:22:22,400
but uh this same attack is also possible

577
00:22:22,400 --> 00:22:23,039
with

578
00:22:23,039 --> 00:22:26,400
other combinations here right so

579
00:22:26,400 --> 00:22:28,640
here the deeply has the scheme pscp so

580
00:22:28,640 --> 00:22:30,960
you can see that here android scheme psp

581
00:22:30,960 --> 00:22:34,559
and the user is the host

582
00:22:34,559 --> 00:22:36,240
so this means the deep link is going to

583
00:22:36,240 --> 00:22:38,000
be psp colon

584
00:22:38,000 --> 00:22:41,360
slash user right so that is how it is

585
00:22:41,360 --> 00:22:42,320
this means

586
00:22:42,320 --> 00:22:44,000
that there could be a parameter passed

587
00:22:44,000 --> 00:22:45,440
to the steep link which could be the

588
00:22:45,440 --> 00:22:46,159
periscope

589
00:22:46,159 --> 00:22:48,480
user id so the user id is a unique

590
00:22:48,480 --> 00:22:49,840
identifier

591
00:22:49,840 --> 00:22:54,480
for any given user profile very special

592
00:22:54,480 --> 00:22:59,039
um for this demo we will use uh

593
00:22:59,039 --> 00:23:02,400
these particular users right so psp

594
00:23:02,400 --> 00:23:06,159
called slash last user and then mkbhd

595
00:23:06,159 --> 00:23:09,919
so this is just one guy in periscope

596
00:23:09,919 --> 00:23:13,360
and then we have several ways to test

597
00:23:13,360 --> 00:23:16,000
this right one way would be to use

598
00:23:16,000 --> 00:23:18,559
another application to demonstrate so

599
00:23:18,559 --> 00:23:20,559
for this you can use deep link tester

600
00:23:20,559 --> 00:23:22,400
you can also get this from the training

601
00:23:22,400 --> 00:23:24,159
portal so as you log in just click on

602
00:23:24,159 --> 00:23:24,960
this and

603
00:23:24,960 --> 00:23:26,960
just download it and install it on your

604
00:23:26,960 --> 00:23:28,400
android phone you can

605
00:23:28,400 --> 00:23:32,159
there i'll demo this as well and then

606
00:23:32,159 --> 00:23:35,280
you go to deep link tester and then in

607
00:23:35,280 --> 00:23:36,000
here you have

608
00:23:36,000 --> 00:23:39,280
psp colon slash last user and then

609
00:23:39,280 --> 00:23:41,279
the user id and then when you click on

610
00:23:41,279 --> 00:23:42,559
go to uri

611
00:23:42,559 --> 00:23:46,159
it will open the guy

612
00:23:46,159 --> 00:23:49,360
on periscope right so this is basically

613
00:23:49,360 --> 00:23:51,039
just opening the profile so we are still

614
00:23:51,039 --> 00:23:53,200
not doing any damage here

615
00:23:53,200 --> 00:23:55,200
uh i mean it could be annoying for

616
00:23:55,200 --> 00:23:57,440
pranking purposes but not being very

617
00:23:57,440 --> 00:23:59,760
serious right we are not following the

618
00:23:59,760 --> 00:24:00,480
person

619
00:24:00,480 --> 00:24:03,279
automatically we can also do this with

620
00:24:03,279 --> 00:24:05,360
an adb command so we can do idb

621
00:24:05,360 --> 00:24:08,720
shell and then android in 10 action view

622
00:24:08,720 --> 00:24:11,600
and then with data of the intent being

623
00:24:11,600 --> 00:24:13,120
peopling so psp

624
00:24:13,120 --> 00:24:18,000
colon slash slash user mbk mkbhc and

625
00:24:18,000 --> 00:24:20,159
then this will also open the profile

626
00:24:20,159 --> 00:24:23,760
and then we can also do this

627
00:24:23,760 --> 00:24:25,919
from drozer right so drawstr is

628
00:24:25,919 --> 00:24:28,240
basically

629
00:24:28,240 --> 00:24:30,640
an application that simulates a

630
00:24:30,640 --> 00:24:32,640
malicious application

631
00:24:32,640 --> 00:24:36,080
on the phone and then from the computer

632
00:24:36,080 --> 00:24:37,200
you connect to

633
00:24:37,200 --> 00:24:40,320
this trojan agent and you can run

634
00:24:40,320 --> 00:24:42,240
commands right so i will demonstrate

635
00:24:42,240 --> 00:24:43,279
this as well

636
00:24:43,279 --> 00:24:45,600
one thing that you might want to do is

637
00:24:45,600 --> 00:24:48,559
to run the scanner

638
00:24:50,000 --> 00:24:53,679
so trouser has this scanner

639
00:24:53,679 --> 00:24:55,760
that you can run so you can ram scanner

640
00:24:55,760 --> 00:24:57,760
activity browser call

641
00:24:57,760 --> 00:25:00,799
a and then periscope.android so this

642
00:25:00,799 --> 00:25:01,360
will

643
00:25:01,360 --> 00:25:04,400
scan the application for browseable

644
00:25:04,400 --> 00:25:05,440
activities

645
00:25:05,440 --> 00:25:07,039
now you can see that this is only

646
00:25:07,039 --> 00:25:08,960
checking for browseable activities and

647
00:25:08,960 --> 00:25:10,720
not all activities with

648
00:25:10,720 --> 00:25:14,080
right but still it can be interesting

649
00:25:14,080 --> 00:25:17,440
or a good serve you will also notice

650
00:25:17,440 --> 00:25:18,080
that

651
00:25:18,080 --> 00:25:20,159
rooster finds a lot less combinations

652
00:25:20,159 --> 00:25:22,559
and that are actually present

653
00:25:22,559 --> 00:25:24,240
on the application but again this can

654
00:25:24,240 --> 00:25:25,919
still be a good important just don't

655
00:25:25,919 --> 00:25:27,200
rely

656
00:25:27,200 --> 00:25:29,679
on these for comprehensiveness because

657
00:25:29,679 --> 00:25:31,360
this is not comprehensive right nothing

658
00:25:31,360 --> 00:25:32,640
beats a human

659
00:25:32,640 --> 00:25:36,080
brain um so

660
00:25:36,080 --> 00:25:39,279
yeah this is not perfect but you know it

661
00:25:39,279 --> 00:25:40,320
can sometimes

662
00:25:40,320 --> 00:25:41,919
save you a little bit of time or point

663
00:25:41,919 --> 00:25:44,559
you in the right direction

664
00:25:44,559 --> 00:25:47,360
so with this we can then do like ram app

665
00:25:47,360 --> 00:25:48,960
activity third and then

666
00:25:48,960 --> 00:25:51,600
slash dash action android intel action

667
00:25:51,600 --> 00:25:52,320
view

668
00:25:52,320 --> 00:25:57,039
and then data uri pscp colon

669
00:25:57,440 --> 00:26:00,960
and then this will launch

670
00:26:00,960 --> 00:26:03,279
the profile as well now because the

671
00:26:03,279 --> 00:26:04,640
activity is browseable

672
00:26:04,640 --> 00:26:07,600
we can also do this from this link right

673
00:26:07,600 --> 00:26:09,039
so if you open this

674
00:26:09,039 --> 00:26:11,520
link from your browser and you click on

675
00:26:11,520 --> 00:26:13,039
open user this will open

676
00:26:13,039 --> 00:26:15,120
the profile as well right so you need to

677
00:26:15,120 --> 00:26:17,360
do adb shell

678
00:26:17,360 --> 00:26:19,279
and then android interaction view and

679
00:26:19,279 --> 00:26:21,840
then you can pass the url like this

680
00:26:21,840 --> 00:26:23,840
using adb and then this will open it in

681
00:26:23,840 --> 00:26:25,120
the browser

682
00:26:25,120 --> 00:26:28,559
um unless you want to type this android

683
00:26:28,559 --> 00:26:30,000
phone which is also

684
00:26:30,000 --> 00:26:32,080
fine you can also copy paste from the

685
00:26:32,080 --> 00:26:33,200
computer into the phone

686
00:26:33,200 --> 00:26:36,400
we are using genymotion or something

687
00:26:36,400 --> 00:26:38,240
so this is how this will look like right

688
00:26:38,240 --> 00:26:40,159
so you can click on open user

689
00:26:40,159 --> 00:26:43,919
and this will open the user so

690
00:26:43,919 --> 00:26:45,520
four different ways of doing the same

691
00:26:45,520 --> 00:26:47,360
thing just

692
00:26:47,360 --> 00:26:50,720
deeply right so deeply tester

693
00:26:50,720 --> 00:26:52,960
so malicious application in the phone

694
00:26:52,960 --> 00:26:54,720
with adb

695
00:26:54,720 --> 00:26:58,559
and then we checked with truster and now

696
00:26:58,559 --> 00:27:00,640
we're checking with the browser as well

697
00:27:00,640 --> 00:27:02,080
right so this is just opening the

698
00:27:02,080 --> 00:27:04,640
profile and then to actually follow the

699
00:27:04,640 --> 00:27:06,240
user we have to add

700
00:27:06,240 --> 00:27:07,840
follow-up at the end of this but it's

701
00:27:07,840 --> 00:27:10,400
basically the same thing

702
00:27:10,400 --> 00:27:14,240
of course you need to unfollow first to

703
00:27:14,240 --> 00:27:18,159
you know be sure that this is working so

704
00:27:18,159 --> 00:27:21,919
you have this user nk slash follow and

705
00:27:21,919 --> 00:27:23,600
then go to your eye and you will notice

706
00:27:23,600 --> 00:27:24,080
that you

707
00:27:24,080 --> 00:27:26,640
start following the guy and then if you

708
00:27:26,640 --> 00:27:27,279
do it with

709
00:27:27,279 --> 00:27:29,840
adb and then flash follow at the end

710
00:27:29,840 --> 00:27:30,960
this will also

711
00:27:30,960 --> 00:27:33,120
guy and then if you do it from brusher

712
00:27:33,120 --> 00:27:34,880
is again the same thing with the slash

713
00:27:34,880 --> 00:27:36,080
follow

714
00:27:36,080 --> 00:27:39,520
and then from the html page

715
00:27:39,520 --> 00:27:41,760
uh it does the same thing but in this

716
00:27:41,760 --> 00:27:43,440
case we will click on press code

717
00:27:43,440 --> 00:27:44,080
crosstalk

718
00:27:44,080 --> 00:27:47,279
portrait demo and then you will see that

719
00:27:47,279 --> 00:27:50,480
we follow this person

720
00:27:50,480 --> 00:27:54,000
as well right so the html of the

721
00:27:54,000 --> 00:27:57,039
proof of it looks like this so pscp

722
00:27:57,039 --> 00:28:00,480
colon slash last user mkbhd and this so

723
00:28:00,480 --> 00:28:02,159
this is just opening the user

724
00:28:02,159 --> 00:28:03,679
but you can see it's basically just a

725
00:28:03,679 --> 00:28:05,840
link containing the deep link

726
00:28:05,840 --> 00:28:09,200
and then android knows that this uh

727
00:28:09,200 --> 00:28:10,880
link has been registered by an app on

728
00:28:10,880 --> 00:28:13,360
the phone it will open the app

729
00:28:13,360 --> 00:28:16,480
on the phone sending it

730
00:28:16,480 --> 00:28:18,799
the deep link right and then we do it

731
00:28:18,799 --> 00:28:20,640
with a slash follow

732
00:28:20,640 --> 00:28:24,000
then it will open the um you know it

733
00:28:24,000 --> 00:28:24,880
will follow

734
00:28:24,880 --> 00:28:28,240
any user once uh automatically right

735
00:28:28,240 --> 00:28:32,320
so so yeah uh so how could this work in

736
00:28:32,320 --> 00:28:34,240
practice like an attacker could

737
00:28:34,240 --> 00:28:37,120
you know embed a deep link on a webpage

738
00:28:37,120 --> 00:28:39,440
or an ad and then the visitors would be

739
00:28:39,440 --> 00:28:41,200
tricked to follow a profile that the

740
00:28:41,200 --> 00:28:42,720
attacker sets right so

741
00:28:42,720 --> 00:28:44,240
instead of periscope grocery request

742
00:28:44,240 --> 00:28:46,159
forgery demo in a real attack this

743
00:28:46,159 --> 00:28:48,799
would say something like wayne and i but

744
00:28:48,799 --> 00:28:50,000
now

745
00:28:50,000 --> 00:28:51,360
the user clicks on it it will

746
00:28:51,360 --> 00:28:53,760
automatically follow the user

747
00:28:53,760 --> 00:28:56,240
base for crystal access you have these

748
00:28:56,240 --> 00:28:57,679
links so you can click on this open

749
00:28:57,679 --> 00:28:58,240
piece of

750
00:28:58,240 --> 00:29:00,960
front phone and you can click a link

751
00:29:00,960 --> 00:29:03,200
from there

752
00:29:03,200 --> 00:29:06,720
so yeah so how to fix this um

753
00:29:06,720 --> 00:29:09,760
so to fix deep link issues you basically

754
00:29:09,760 --> 00:29:11,120
need to

755
00:29:11,120 --> 00:29:13,120
from the user for some confirmation

756
00:29:13,120 --> 00:29:15,520
right so

757
00:29:17,520 --> 00:29:20,399
you want deep links because they make

758
00:29:20,399 --> 00:29:22,320
you know functionality

759
00:29:22,320 --> 00:29:25,600
more useful to users but you should also

760
00:29:25,600 --> 00:29:26,240
request

761
00:29:26,240 --> 00:29:29,440
a user confirmation before performing an

762
00:29:29,440 --> 00:29:30,880
action

763
00:29:30,880 --> 00:29:32,799
so in this case it would be like do you

764
00:29:32,799 --> 00:29:34,880
really want to follow this user

765
00:29:34,880 --> 00:29:37,200
and then the user tells you yes or no

766
00:29:37,200 --> 00:29:39,520
then depending on what the user says

767
00:29:39,520 --> 00:29:41,279
you follow the user or you don't right

768
00:29:41,279 --> 00:29:42,559
so that would be

769
00:29:42,559 --> 00:29:45,679
a valid uh mitigation for this kind of

770
00:29:45,679 --> 00:29:46,080
issues

771
00:29:46,080 --> 00:29:50,480
with this um let's um

772
00:29:50,480 --> 00:29:55,840
let's do the demo so let me see

773
00:29:55,840 --> 00:29:59,600
yeah you can see my whole screen so

774
00:29:59,600 --> 00:30:04,480
i think you will be able to see this

775
00:30:04,480 --> 00:30:08,159
so okay so

776
00:30:08,159 --> 00:30:11,760
so yeah so this is the jelly motion

777
00:30:11,760 --> 00:30:14,159
uh vm that we will use to demonstrate

778
00:30:14,159 --> 00:30:15,840
this tissue this is the periscope

779
00:30:15,840 --> 00:30:17,200
application

780
00:30:17,200 --> 00:30:20,000
so you can see

781
00:30:21,600 --> 00:30:25,840
okay periscope is discontinuing

782
00:30:27,039 --> 00:30:30,960
so uh okay so this is uh

783
00:30:30,960 --> 00:30:34,240
the application and now what we're going

784
00:30:34,240 --> 00:30:34,880
to do

785
00:30:34,880 --> 00:30:38,799
is first demonstrate with

786
00:30:38,799 --> 00:30:41,919
labeling tester right so if i go to uri

787
00:30:41,919 --> 00:30:45,679
here blink tester you can see that

788
00:30:45,679 --> 00:30:49,360
we are opening the profile of this guy

789
00:30:49,360 --> 00:30:52,320
right we are not following yet and then

790
00:30:52,320 --> 00:30:52,720
if

791
00:30:52,720 --> 00:30:55,840
i um well let's look at the android

792
00:30:55,840 --> 00:30:57,600
device right here when you look at the

793
00:30:57,600 --> 00:30:59,679
android manifest

794
00:30:59,679 --> 00:31:02,799
look for filter

795
00:31:02,799 --> 00:31:05,120
and these will show you uh which

796
00:31:05,120 --> 00:31:06,480
activities have

797
00:31:06,480 --> 00:31:10,480
um filter so here you can see

798
00:31:10,480 --> 00:31:13,840
the browser activity um

799
00:31:13,840 --> 00:31:16,480
and i can like you know keep looking for

800
00:31:16,480 --> 00:31:18,080
intent filters

801
00:31:18,080 --> 00:31:20,799
you can see some of the intent filters

802
00:31:20,799 --> 00:31:21,360
have

803
00:31:21,360 --> 00:31:24,559
a hundred schemes of https

804
00:31:24,559 --> 00:31:29,840
um while others have this pscp

805
00:31:29,840 --> 00:31:33,039
so here we have this psp user

806
00:31:33,039 --> 00:31:35,840
and so on right so methodology wise you

807
00:31:35,840 --> 00:31:38,080
will look at the android manifest

808
00:31:38,080 --> 00:31:40,000
you will look for intent filters and

809
00:31:40,000 --> 00:31:41,919
then you go back up

810
00:31:41,919 --> 00:31:45,760
to the activity itself so you would

811
00:31:45,760 --> 00:31:49,279
okay so this is the actual activity

812
00:31:49,279 --> 00:31:54,240
and then you would something like

813
00:31:54,960 --> 00:31:59,519
find the activity.java

814
00:31:59,519 --> 00:32:03,200
for example and then you will open this

815
00:32:03,200 --> 00:32:03,519
and

816
00:32:03,519 --> 00:32:06,159
start analyzing the code right so in

817
00:32:06,159 --> 00:32:07,279
this case these

818
00:32:07,279 --> 00:32:10,559
upper activity extends launch activity

819
00:32:10,559 --> 00:32:13,840
so you would search for

820
00:32:13,880 --> 00:32:16,939
[Music]

821
00:32:18,880 --> 00:32:21,200
and then you would like start to go

822
00:32:21,200 --> 00:32:23,279
through this code and figure out

823
00:32:23,279 --> 00:32:25,679
you know if there's any div link issues

824
00:32:25,679 --> 00:32:26,720
right so

825
00:32:26,720 --> 00:32:28,320
keeping that part a little bit but that

826
00:32:28,320 --> 00:32:31,039
is more or less how

827
00:32:31,039 --> 00:32:32,799
of course the decompile code is not

828
00:32:32,799 --> 00:32:35,279
going to be as pretty as the developer's

829
00:32:35,279 --> 00:32:38,320
code but it can still be enough

830
00:32:38,320 --> 00:32:40,559
in most cases to get the job done right

831
00:32:40,559 --> 00:32:42,720
so that is how you will go out

832
00:32:42,720 --> 00:32:45,760
about it methodology wise and then

833
00:32:45,760 --> 00:32:49,440
to show adb so if i do adv

834
00:32:49,440 --> 00:32:52,799
shell and then third android intent

835
00:32:52,799 --> 00:32:53,919
action view

836
00:32:53,919 --> 00:32:57,039
then i'm sending as data psp user and

837
00:32:57,039 --> 00:32:59,600
the id of the user so you can see it

838
00:32:59,600 --> 00:33:00,399
open

839
00:33:00,399 --> 00:33:03,600
the user here i'm going to do it again

840
00:33:03,600 --> 00:33:06,399
and as i close that you can see that we

841
00:33:06,399 --> 00:33:07,760
opened it right

842
00:33:07,760 --> 00:33:12,320
and then trouser

843
00:33:12,320 --> 00:33:16,000
first you would rule you would run

844
00:33:16,240 --> 00:33:20,640
syntax for this so you would first run

845
00:33:20,640 --> 00:33:23,440
the scanner right so you

846
00:33:23,440 --> 00:33:26,000
run scanner activity browser so this

847
00:33:26,000 --> 00:33:27,840
will scan for possible activities and

848
00:33:27,840 --> 00:33:30,000
this is the output you know it will tell

849
00:33:30,000 --> 00:33:33,840
each other portable uris and so on

850
00:33:33,840 --> 00:33:36,960
uh and then you pass it the id of the

851
00:33:36,960 --> 00:33:39,840
app

852
00:33:40,159 --> 00:33:42,320
so this would be the packet's name in

853
00:33:42,320 --> 00:33:44,480
the android manifest right so if i go

854
00:33:44,480 --> 00:33:46,720
here

855
00:33:47,679 --> 00:33:52,960
android manifest dot xml

856
00:33:52,960 --> 00:33:56,640
i hope this one

857
00:34:01,360 --> 00:34:05,440
you can see that is in the package

858
00:34:05,440 --> 00:34:07,039
right so it's going to be at the top of

859
00:34:07,039 --> 00:34:08,800
the manifest the package

860
00:34:08,800 --> 00:34:11,359
so this is what we have to pass to

861
00:34:11,359 --> 00:34:12,879
browser here

862
00:34:12,879 --> 00:34:15,440
uh to the scanner to find the activities

863
00:34:15,440 --> 00:34:16,239
right

864
00:34:16,239 --> 00:34:18,879
so this is uh you know to try to find

865
00:34:18,879 --> 00:34:20,399
some deep links

866
00:34:20,399 --> 00:34:23,679
now again don't rely on this 100 because

867
00:34:23,679 --> 00:34:25,119
you're going to miss stuff but

868
00:34:25,119 --> 00:34:28,480
it can be a good starting point and then

869
00:34:28,480 --> 00:34:31,280
let's first make sure the profile is not

870
00:34:31,280 --> 00:34:33,760
open right so it's not open now

871
00:34:33,760 --> 00:34:37,119
and now i hit i hit it with instructor

872
00:34:37,119 --> 00:34:38,879
and you can see that we open the pro

873
00:34:38,879 --> 00:34:40,159
this to work

874
00:34:40,159 --> 00:34:42,879
you need to have browser installed and

875
00:34:42,879 --> 00:34:44,719
you need to open browser on the phone

876
00:34:44,719 --> 00:34:49,679
and make sure your computer to transfer

877
00:34:49,679 --> 00:34:51,679
now on the course of course we go into

878
00:34:51,679 --> 00:34:53,520
more detail and step by step on how to

879
00:34:53,520 --> 00:34:55,199
do this and it's also a vm

880
00:34:55,199 --> 00:34:58,240
setup but now for uh you know

881
00:34:58,240 --> 00:35:00,640
a quick workshop we don't have time for

882
00:35:00,640 --> 00:35:03,359
all that so that is just basically

883
00:35:03,359 --> 00:35:06,880
uh how it works right so when we

884
00:35:06,880 --> 00:35:08,960
use this command from the roster this

885
00:35:08,960 --> 00:35:10,480
opens the

886
00:35:10,480 --> 00:35:14,160
user and then we can

887
00:35:14,160 --> 00:35:16,960
do the same thing from the android

888
00:35:16,960 --> 00:35:18,720
browser because the activity is possible

889
00:35:18,720 --> 00:35:20,160
so i can

890
00:35:20,160 --> 00:35:22,880
click on open user and this again opens

891
00:35:22,880 --> 00:35:23,359
the user

892
00:35:23,359 --> 00:35:26,800
so i'm just going to close it and then

893
00:35:26,800 --> 00:35:29,440
going back to the android browser and

894
00:35:29,440 --> 00:35:30,720
then when i click on

895
00:35:30,720 --> 00:35:34,800
open user you can see that

896
00:35:34,800 --> 00:35:36,480
you know the profile is being opened

897
00:35:36,480 --> 00:35:38,400
right so now let's do the same thing

898
00:35:38,400 --> 00:35:39,920
with the follow

899
00:35:39,920 --> 00:35:44,880
so now if i add here slash follow

900
00:35:44,880 --> 00:35:46,800
from dibling tester you can see that

901
00:35:46,800 --> 00:35:48,560
this change to following

902
00:35:48,560 --> 00:35:51,280
right so uh we're not following this

903
00:35:51,280 --> 00:35:53,280
person but this means that any app can

904
00:35:53,280 --> 00:35:55,680
send an intent

905
00:35:55,680 --> 00:35:57,200
to this application and then it will

906
00:35:57,200 --> 00:35:59,520
follow like arbitrary uh

907
00:35:59,520 --> 00:36:01,200
people on the internet right with

908
00:36:01,200 --> 00:36:03,920
whatever you tell it to follow

909
00:36:03,920 --> 00:36:06,880
right so this is the problem so that is

910
00:36:06,880 --> 00:36:07,680
the

911
00:36:07,680 --> 00:36:11,359
demo for from the tester

912
00:36:11,359 --> 00:36:13,520
we can do the same adding the slash

913
00:36:13,520 --> 00:36:14,560
follow

914
00:36:14,560 --> 00:36:17,680
from adb so you can see that the

915
00:36:17,680 --> 00:36:20,240
following i'm going to unfold again

916
00:36:20,240 --> 00:36:23,040
right so not following and now we can do

917
00:36:23,040 --> 00:36:23,760
it from

918
00:36:23,760 --> 00:36:27,190
through here

919
00:36:27,190 --> 00:36:29,599
[Music]

920
00:36:29,599 --> 00:36:31,520
and you can see from sorcery it works as

921
00:36:31,520 --> 00:36:34,480
well so now i'm going to unfollow

922
00:36:34,480 --> 00:36:38,560
and now we can do it from uh

923
00:36:38,560 --> 00:36:41,200
from the browser right so following so

924
00:36:41,200 --> 00:36:41,760
i'm going to

925
00:36:41,760 --> 00:36:45,920
follow again and now i'm going to

926
00:36:45,920 --> 00:36:50,560
um here to the browser

927
00:36:50,560 --> 00:36:53,200
and the circumstantial again so you can

928
00:36:53,200 --> 00:36:54,240
see

929
00:36:54,240 --> 00:36:57,920
that we are following the guy right so

930
00:36:57,920 --> 00:36:58,800
this is the

931
00:36:58,800 --> 00:37:03,280
crochet request forgery with deep links

932
00:37:03,520 --> 00:37:07,040
so so yeah you can you know

933
00:37:07,040 --> 00:37:09,680
follow this these steps from the

934
00:37:09,680 --> 00:37:11,599
training portal just download the apps

935
00:37:11,599 --> 00:37:13,200
and play with this

936
00:37:13,200 --> 00:37:16,720
um and yeah and i hope you find

937
00:37:16,720 --> 00:37:22,720
you you have fun with this one

938
00:37:22,720 --> 00:37:26,079
and the one for shopify that's in the

939
00:37:26,079 --> 00:37:26,960
course

940
00:37:26,960 --> 00:37:28,640
there's also a lot of other cool

941
00:37:28,640 --> 00:37:30,160
exercises in the course but the the one

942
00:37:30,160 --> 00:37:32,079
for shopify will

943
00:37:32,079 --> 00:37:36,000
time today it's also very cool because

944
00:37:36,000 --> 00:37:37,760
it's a function that requires a

945
00:37:37,760 --> 00:37:40,000
fingerprint

946
00:37:40,000 --> 00:37:41,839
it requires the user to enter the

947
00:37:41,839 --> 00:37:43,920
fingerprint to login but using a deep

948
00:37:43,920 --> 00:37:45,520
link we can bypass the

949
00:37:45,520 --> 00:37:47,760
fingerprint check right so that's pretty

950
00:37:47,760 --> 00:37:49,040
cool

951
00:37:49,040 --> 00:37:51,920
okay so now we're going to check deep

952
00:37:51,920 --> 00:37:53,839
link attacks to make phone calls

953
00:37:53,839 --> 00:37:55,760
which is our creative version of finding

954
00:37:55,760 --> 00:37:57,760
and exploiting url handlers

955
00:37:57,760 --> 00:38:01,540
in ios so we have an ios phone here

956
00:38:01,540 --> 00:38:02,960
[Music]

957
00:38:02,960 --> 00:38:06,000
we'll trade this so i hope you find this

958
00:38:06,000 --> 00:38:08,000
entertaining now again

959
00:38:08,000 --> 00:38:10,880
uh just download the app from the

960
00:38:10,880 --> 00:38:12,240
training portal just click on this

961
00:38:12,240 --> 00:38:13,280
because we don't know

962
00:38:13,280 --> 00:38:15,040
like you know from the library websites

963
00:38:15,040 --> 00:38:16,560
if they will change the app or maybe it

964
00:38:16,560 --> 00:38:18,320
will work the same way or not

965
00:38:18,320 --> 00:38:21,359
so the safest is to use the the one from

966
00:38:21,359 --> 00:38:23,920
the portal that's the one we're sure

967
00:38:23,920 --> 00:38:27,599
it will work fine uh so

968
00:38:27,599 --> 00:38:29,119
so yeah we will use them vulnerable and

969
00:38:29,119 --> 00:38:31,599
secure version two for this

970
00:38:31,599 --> 00:38:35,760
and then here methodology wise

971
00:38:35,760 --> 00:38:37,359
instead of looking at the android

972
00:38:37,359 --> 00:38:39,119
manifest

973
00:38:39,119 --> 00:38:42,079
in ios we are going to look at the e4b

974
00:38:42,079 --> 00:38:43,040
list

975
00:38:43,040 --> 00:38:46,880
so in particular we are looking for

976
00:38:46,880 --> 00:38:50,640
cf bundle url schemes and then

977
00:38:50,640 --> 00:38:54,640
we will look for uh which urls

978
00:38:54,640 --> 00:38:56,480
right so in this case you will see these

979
00:38:56,480 --> 00:38:58,720
two schemes like

980
00:38:58,720 --> 00:39:01,118
double

981
00:39:04,160 --> 00:39:07,280
will work right so um

982
00:39:07,280 --> 00:39:10,480
you can unzip the ipad and try to look

983
00:39:10,480 --> 00:39:11,040
at the

984
00:39:11,040 --> 00:39:13,520
pillars like this but chances are this

985
00:39:13,520 --> 00:39:14,160
will be

986
00:39:14,160 --> 00:39:18,480
binary garbage unless you have a mac

987
00:39:18,480 --> 00:39:21,200
but i will show you a trick to look at

988
00:39:21,200 --> 00:39:23,598
the info

989
00:39:25,599 --> 00:39:28,640
um i'll show

990
00:39:28,640 --> 00:39:30,560
right so that's another way if you don't

991
00:39:30,560 --> 00:39:32,320
have a mac it's another way in which you

992
00:39:32,320 --> 00:39:33,760
can check

993
00:39:33,760 --> 00:39:37,359
the info bit so if you have a mac and

994
00:39:37,359 --> 00:39:38,320
you have xcode

995
00:39:38,320 --> 00:39:40,480
now if you don't have a mac you can

996
00:39:40,480 --> 00:39:41,599
google

997
00:39:41,599 --> 00:39:43,920
you know how to run a mac from windows

998
00:39:43,920 --> 00:39:45,920
or how to run a mic from

999
00:39:45,920 --> 00:39:48,880
binocs and there's a lot of tutorials

1000
00:39:48,880 --> 00:39:49,520
about that

1001
00:39:49,520 --> 00:39:52,720
be careful i'm not sure legal

1002
00:39:52,720 --> 00:39:56,880
how legal that is um but

1003
00:39:56,880 --> 00:39:58,960
just saying it's possible right so you

1004
00:39:58,960 --> 00:40:01,520
don't necessarily have to have a mac to

1005
00:40:01,520 --> 00:40:04,800
use xcode things so

1006
00:40:04,800 --> 00:40:08,400
using xcode because

1007
00:40:08,400 --> 00:40:10,880
xcode only runs on max right but you can

1008
00:40:10,880 --> 00:40:12,480
you know there's ways to get a mac

1009
00:40:12,480 --> 00:40:15,680
vm running so

1010
00:40:15,680 --> 00:40:18,480
when you open xcode you will click on

1011
00:40:18,480 --> 00:40:19,520
the

1012
00:40:19,520 --> 00:40:21,359
project for dumb vulnerability secure

1013
00:40:21,359 --> 00:40:22,640
version

1014
00:40:22,640 --> 00:40:26,480
which is public so take it there

1015
00:40:26,480 --> 00:40:29,119
and then you can click on this and then

1016
00:40:29,119 --> 00:40:29,920
go to the

1017
00:40:29,920 --> 00:40:32,079
info tab then you scroll down to the

1018
00:40:32,079 --> 00:40:34,400
bottom to url types and here

1019
00:40:34,400 --> 00:40:37,280
this also shows you the url schemes

1020
00:40:37,280 --> 00:40:38,000
right so we can

1021
00:40:38,000 --> 00:40:40,000
see here this two custom url schemes

1022
00:40:40,000 --> 00:40:41,200
down vulnerable

1023
00:40:41,200 --> 00:40:43,599
insecure up and down so that's that's

1024
00:40:43,599 --> 00:40:45,359
the way to find them

1025
00:40:45,359 --> 00:40:49,200
with xcode i'll show you the method with

1026
00:40:49,200 --> 00:40:52,720
field demo so this means that

1027
00:40:52,720 --> 00:40:56,000
uh dumb vulnerable insecure

1028
00:40:56,000 --> 00:40:59,839
swift colon slash lesson

1029
00:41:00,560 --> 00:41:04,160
these urls will be opened by this app

1030
00:41:04,160 --> 00:41:07,280
right so what can we do with this uh we

1031
00:41:07,280 --> 00:41:09,280
need to look at the source code

1032
00:41:09,280 --> 00:41:10,880
and try to see if there's any

1033
00:41:10,880 --> 00:41:12,640
vulnerability in the processing of the

1034
00:41:12,640 --> 00:41:13,920
argument

1035
00:41:13,920 --> 00:41:17,280
if there's some sql injection uh

1036
00:41:17,280 --> 00:41:18,960
some other form of injection or

1037
00:41:18,960 --> 00:41:21,280
crossover or some other

1038
00:41:21,280 --> 00:41:24,800
dangerous thing by the application when

1039
00:41:24,800 --> 00:41:25,599
it opens

1040
00:41:25,599 --> 00:41:28,960
a url like this right so if you don't

1041
00:41:28,960 --> 00:41:30,640
have xcode

1042
00:41:30,640 --> 00:41:34,800
uh file24 is i update the shift

1043
00:41:34,800 --> 00:41:38,079
now most most of the time uh ios

1044
00:41:38,079 --> 00:41:40,400
applications now are written in swift

1045
00:41:40,400 --> 00:41:42,319
before they used to be written in

1046
00:41:42,319 --> 00:41:43,680
objective c

1047
00:41:43,680 --> 00:41:46,160
so if you if you find the if the

1048
00:41:46,160 --> 00:41:48,240
application you're testing is uh

1049
00:41:48,240 --> 00:41:51,040
written for some reason objective c then

1050
00:41:51,040 --> 00:41:51,520
this

1051
00:41:51,520 --> 00:41:54,240
instead of being shrift it will be dot m

1052
00:41:54,240 --> 00:41:55,040
so

1053
00:41:55,040 --> 00:41:58,480
m is uh the extension for objective c

1054
00:41:58,480 --> 00:42:02,480
files what shrift is extension for shift

1055
00:42:02,480 --> 00:42:06,160
which is the modern way to

1056
00:42:06,160 --> 00:42:09,440
write ios applications right so

1057
00:42:09,440 --> 00:42:11,280
but in both cases is the app delegate

1058
00:42:11,280 --> 00:42:13,040
what we're looking for so you

1059
00:42:13,040 --> 00:42:16,960
find out dash name and

1060
00:42:17,280 --> 00:42:19,920
where that file is and then just take a

1061
00:42:19,920 --> 00:42:20,560
look there

1062
00:42:20,560 --> 00:42:24,079
and try to find in this case

1063
00:42:24,079 --> 00:42:27,520
we have the function application

1064
00:42:27,520 --> 00:42:30,560
open url with the url parameter and then

1065
00:42:30,560 --> 00:42:32,240
here we can see that this is

1066
00:42:32,240 --> 00:42:36,560
splitting the url by a string

1067
00:42:36,560 --> 00:42:39,839
called slash form slash call number

1068
00:42:39,839 --> 00:42:43,599
so it's taking the the url and splitting

1069
00:42:43,599 --> 00:42:45,200
it

1070
00:42:45,200 --> 00:42:47,280
based on this right so what this is

1071
00:42:47,280 --> 00:42:49,200
doing is similar to

1072
00:42:49,200 --> 00:42:53,440
exploding php so this is taking the url

1073
00:42:53,440 --> 00:42:56,560
and then the chunk before

1074
00:42:56,560 --> 00:42:59,760
before this string will be on

1075
00:42:59,760 --> 00:43:03,359
the zero position of the array then

1076
00:43:03,359 --> 00:43:05,359
whatever comes after the call number

1077
00:43:05,359 --> 00:43:07,040
this will be position

1078
00:43:07,040 --> 00:43:10,000
one of the update right so this means

1079
00:43:10,000 --> 00:43:12,079
that this check here is checking

1080
00:43:12,079 --> 00:43:15,440
the number that comes after this uh

1081
00:43:15,440 --> 00:43:17,440
because you know the array starts with

1082
00:43:17,440 --> 00:43:21,440
zero so one is what comes after

1083
00:43:22,240 --> 00:43:25,599
so url one means the second 10 which is

1084
00:43:25,599 --> 00:43:25,920
what

1085
00:43:25,920 --> 00:43:28,160
comes after the call number and then

1086
00:43:28,160 --> 00:43:29,280
this is casting

1087
00:43:29,280 --> 00:43:32,480
uh whatever value is there to integer

1088
00:43:32,480 --> 00:43:34,880
i'm checking that the casting works

1089
00:43:34,880 --> 00:43:35,920
right so

1090
00:43:35,920 --> 00:43:38,400
the casting is different than nil then

1091
00:43:38,400 --> 00:43:39,680
it assumes that

1092
00:43:39,680 --> 00:43:42,240
this is safe and then it tries to make a

1093
00:43:42,240 --> 00:43:44,720
phone call

1094
00:43:46,319 --> 00:43:49,280
right so this is um this is basically

1095
00:43:49,280 --> 00:43:51,200
how it works

1096
00:43:51,200 --> 00:43:53,760
and then using xcode you will go to

1097
00:43:53,760 --> 00:43:55,119
application

1098
00:43:55,119 --> 00:43:59,200
then function application then split url

1099
00:43:59,200 --> 00:44:00,880
and here you can see the same string and

1100
00:44:00,880 --> 00:44:02,640
then this is casting between the turn

1101
00:44:02,640 --> 00:44:05,680
so on right so that's how it looks so

1102
00:44:05,680 --> 00:44:07,680
this means that the application

1103
00:44:07,680 --> 00:44:10,480
appears to have urls like the following

1104
00:44:10,480 --> 00:44:12,720
and it will ring the number without

1105
00:44:12,720 --> 00:44:15,200
further user prompts or confirmation

1106
00:44:15,200 --> 00:44:16,079
right so

1107
00:44:16,079 --> 00:44:17,760
it's looking for urls like

1108
00:44:17,760 --> 00:44:19,119
non-vulnerable

1109
00:44:19,119 --> 00:44:22,319
insecure abstract

1110
00:44:27,359 --> 00:44:31,680
so you can open in your phone this url

1111
00:44:31,680 --> 00:44:34,800
to test this and then you can you know

1112
00:44:34,800 --> 00:44:36,079
practice the exercise for this

1113
00:44:36,079 --> 00:44:36,720
particular

1114
00:44:36,720 --> 00:44:38,960
exercise uh it will work even if you

1115
00:44:38,960 --> 00:44:41,520
don't have a jailbroken device

1116
00:44:41,520 --> 00:44:44,960
um so yeah

1117
00:44:44,960 --> 00:44:46,960
it's not necessary to have a general

1118
00:44:46,960 --> 00:44:48,480
device

1119
00:44:48,480 --> 00:44:51,440
to do this exercise actually so yeah

1120
00:44:51,440 --> 00:44:53,040
this is how

1121
00:44:53,040 --> 00:44:55,920
the html looks like so you have

1122
00:44:55,920 --> 00:44:57,119
basically the url

1123
00:44:57,119 --> 00:44:59,440
and then of course this would say win an

1124
00:44:59,440 --> 00:45:00,480
ipad or

1125
00:45:00,480 --> 00:45:03,200
click here to lottery whatever something

1126
00:45:03,200 --> 00:45:06,160
like this enticing

1127
00:45:06,640 --> 00:45:10,480
to the user uh and then um

1128
00:45:10,480 --> 00:45:12,720
actual exploitation will look something

1129
00:45:12,720 --> 00:45:14,079
like this so in safari you

1130
00:45:14,079 --> 00:45:16,160
click on some links and then you have

1131
00:45:16,160 --> 00:45:17,839
this opening down

1132
00:45:17,839 --> 00:45:20,319
version too and then you tap on open and

1133
00:45:20,319 --> 00:45:22,000
then you can see that

1134
00:45:22,000 --> 00:45:26,160
the phone call uh is being made right

1135
00:45:26,160 --> 00:45:29,359
so so yeah it shows you that the ability

1136
00:45:29,359 --> 00:45:30,079
to make

1137
00:45:30,079 --> 00:45:32,560
an app ring arbitrary from numbers

1138
00:45:32,560 --> 00:45:34,319
serious issue

1139
00:45:34,319 --> 00:45:36,079
in the mobile environment due to the

1140
00:45:36,079 --> 00:45:38,400
possibility of making the

1141
00:45:38,400 --> 00:45:40,720
numbers hence the attacker can monetize

1142
00:45:40,720 --> 00:45:43,440
the attack there

1143
00:45:43,440 --> 00:45:47,280
so let's do a demo of this

1144
00:45:47,280 --> 00:45:51,359
so here we have the ios

1145
00:45:51,359 --> 00:45:55,599
and ios pro so i'm going to

1146
00:45:55,599 --> 00:45:57,359
well i'm going to show you first how to

1147
00:45:57,359 --> 00:46:00,000
look for the info please right so

1148
00:46:00,000 --> 00:46:03,680
you would tap here

1149
00:46:03,680 --> 00:46:06,560
first of the list of applications uh

1150
00:46:06,560 --> 00:46:07,599
configure them

1151
00:46:07,599 --> 00:46:10,960
and then i will scroll down to the

1152
00:46:10,960 --> 00:46:14,079
version so i tap on the i

1153
00:46:14,079 --> 00:46:16,560
for information and then i go to the

1154
00:46:16,560 --> 00:46:18,240
bundle directory

1155
00:46:18,240 --> 00:46:22,640
and here uh i'm sorry i'm going

1156
00:46:22,640 --> 00:46:25,920
with this but there's a lot more

1157
00:46:25,920 --> 00:46:27,320
coming so

1158
00:46:27,320 --> 00:46:29,520
[Music]

1159
00:46:29,520 --> 00:46:31,280
so yeah and then on the info please you

1160
00:46:31,280 --> 00:46:32,960
just scroll down here you can see that

1161
00:46:32,960 --> 00:46:35,119
it understands the format

1162
00:46:35,119 --> 00:46:40,160
and here you can see that these are

1163
00:46:41,040 --> 00:46:45,759
uh url have tried them to carry out

1164
00:46:54,839 --> 00:46:56,560
download

1165
00:46:56,560 --> 00:47:00,000
if you can read the ipo file you can get

1166
00:47:00,000 --> 00:47:02,800
something like this right so you can see

1167
00:47:02,800 --> 00:47:03,680
here

1168
00:47:03,680 --> 00:47:06,160
that all this is like a binary format

1169
00:47:06,160 --> 00:47:07,200
that

1170
00:47:07,200 --> 00:47:10,560
bi so it's kind of

1171
00:47:10,560 --> 00:47:13,680
messy make any sense of this so you can

1172
00:47:13,680 --> 00:47:14,319
open

1173
00:47:14,319 --> 00:47:18,079
it files natively in mac

1174
00:47:18,079 --> 00:47:21,359
you can check the iot files

1175
00:47:21,359 --> 00:47:25,839
uh using

1176
00:47:25,920 --> 00:47:29,440
on an ios device and then you can also

1177
00:47:29,440 --> 00:47:29,839
use

1178
00:47:29,839 --> 00:47:32,640
a tool called pl till that allows you to

1179
00:47:32,640 --> 00:47:33,359
work with

1180
00:47:33,359 --> 00:47:36,480
this field files from the command line

1181
00:47:36,480 --> 00:47:39,040
so with that out of the way now we can

1182
00:47:39,040 --> 00:47:39,680
go

1183
00:47:39,680 --> 00:47:43,119
to actually tapping on the url handlers

1184
00:47:43,119 --> 00:47:46,319
so i'm opening here first handler and

1185
00:47:46,319 --> 00:47:49,359
you can see that it makes the phone call

1186
00:47:49,359 --> 00:47:53,520
and now i'm going to open the second one

1187
00:47:53,520 --> 00:47:55,599
and i tap on open and you can see that

1188
00:47:55,599 --> 00:47:59,040
it makes the phone call right so

1189
00:47:59,359 --> 00:48:02,000
so yeah so that is the end of that so

1190
00:48:02,000 --> 00:48:02,960
now let's talk about

1191
00:48:02,960 --> 00:48:05,839
xsl and detect filtration on android and

1192
00:48:05,839 --> 00:48:07,119
ios so

1193
00:48:07,119 --> 00:48:09,599
um let's talk about web views and data

1194
00:48:09,599 --> 00:48:11,760
exfiltration on ios so basically web

1195
00:48:11,760 --> 00:48:14,000
views are a small web browser

1196
00:48:14,000 --> 00:48:17,520
in your app and then here we can have

1197
00:48:17,520 --> 00:48:19,359
several scenarios we can have html

1198
00:48:19,359 --> 00:48:20,800
section access

1199
00:48:20,800 --> 00:48:23,680
uh latex filtration of local files and

1200
00:48:23,680 --> 00:48:25,920
then possibly user impersonation

1201
00:48:25,920 --> 00:48:29,520
using cross-service forgery

1202
00:48:30,079 --> 00:48:32,720
so for this we will use a customized

1203
00:48:32,720 --> 00:48:34,720
version of undergo so if you use the

1204
00:48:34,720 --> 00:48:36,800
official androgol this won't work so

1205
00:48:36,800 --> 00:48:37,440
again

1206
00:48:37,440 --> 00:48:40,800
you need to you know once you get access

1207
00:48:40,800 --> 00:48:41,280
to the

1208
00:48:41,280 --> 00:48:44,319
portal diesel 3

1209
00:48:44,319 --> 00:48:47,680
you can click on this link to download

1210
00:48:47,680 --> 00:48:48,800
the android

1211
00:48:48,800 --> 00:48:52,319
uh version has been this particular

1212
00:48:52,319 --> 00:48:54,240
exercise

1213
00:48:54,240 --> 00:48:55,839
and then you install this and you will

1214
00:48:55,839 --> 00:48:58,160
be able to follow

1215
00:48:58,160 --> 00:48:59,680
the exercise but it's important to use

1216
00:48:59,680 --> 00:49:02,319
this one from the training portal

1217
00:49:02,319 --> 00:49:04,800
especially in this case right so in this

1218
00:49:04,800 --> 00:49:06,559
case we have to go to insecure data

1219
00:49:06,559 --> 00:49:07,359
storage

1220
00:49:07,359 --> 00:49:10,160
and then go to share preferences and add

1221
00:49:10,160 --> 00:49:11,040
um

1222
00:49:11,040 --> 00:49:14,480
files right so you create um a file by

1223
00:49:14,480 --> 00:49:16,960
user and

1224
00:49:20,480 --> 00:49:24,079
my password and then we navigate to

1225
00:49:24,079 --> 00:49:27,040
the xss exercise so input validations

1226
00:49:27,040 --> 00:49:29,200
and input validation xss

1227
00:49:29,200 --> 00:49:31,200
and then here we can try to check for

1228
00:49:31,200 --> 00:49:33,280
html projection

1229
00:49:33,280 --> 00:49:35,760
um we can take uh you know image store

1230
00:49:35,760 --> 00:49:37,040
section roller one

1231
00:49:37,040 --> 00:49:40,240
script one to confirm so with the html

1232
00:49:40,240 --> 00:49:42,319
injection we saw a bigger

1233
00:49:42,319 --> 00:49:45,119
hello because we use h1 text so that

1234
00:49:45,119 --> 00:49:47,119
confirms we have html injection then we

1235
00:49:47,119 --> 00:49:49,280
have to check if we have xss

1236
00:49:49,280 --> 00:49:52,400
which we can do with one and so on

1237
00:49:52,400 --> 00:49:54,319
so we can try this and we can see that

1238
00:49:54,319 --> 00:49:55,599
we get the alert

1239
00:49:55,599 --> 00:49:58,079
and then we can see okay we have

1240
00:49:58,079 --> 00:49:59,839
exercise what is the location because

1241
00:49:59,839 --> 00:50:01,359
the location can tell us

1242
00:50:01,359 --> 00:50:03,680
if it's a more prevalent location for

1243
00:50:03,680 --> 00:50:05,520
example file url

1244
00:50:05,520 --> 00:50:07,680
will not have it will not be subject to

1245
00:50:07,680 --> 00:50:09,119
the same origin policy

1246
00:50:09,119 --> 00:50:12,400
uh policy especially if some of the

1247
00:50:12,400 --> 00:50:13,359
settings

1248
00:50:13,359 --> 00:50:15,599
you are in security in this case you can

1249
00:50:15,599 --> 00:50:18,240
see these using file urls

1250
00:50:18,240 --> 00:50:22,079
so this is insecure and then we have

1251
00:50:22,079 --> 00:50:24,160
two scenarios one with internal storage

1252
00:50:24,160 --> 00:50:25,200
and another

1253
00:50:25,200 --> 00:50:27,200
with external storage right so external

1254
00:50:27,200 --> 00:50:29,440
storage uh other applications on the

1255
00:50:29,440 --> 00:50:31,119
phone could write to this

1256
00:50:31,119 --> 00:50:34,880
so you don't even need to have uh xss

1257
00:50:34,880 --> 00:50:37,520
as long as you are loading html from the

1258
00:50:37,520 --> 00:50:40,480
sd card other applications could modify

1259
00:50:40,480 --> 00:50:40,800
this

1260
00:50:40,800 --> 00:50:44,319
html and attack it right so for data

1261
00:50:44,319 --> 00:50:46,800
filtration uh we need to figure out the

1262
00:50:46,800 --> 00:50:47,359
path

1263
00:50:47,359 --> 00:50:51,200
so if

1264
00:50:51,200 --> 00:50:52,640
if you're using a simulator or

1265
00:50:52,640 --> 00:50:55,359
gennymotion you already have root so you

1266
00:50:55,359 --> 00:50:55,920
can go

1267
00:50:55,920 --> 00:50:58,000
you can do adb shell and then navigate

1268
00:50:58,000 --> 00:51:00,240
to the application do a find

1269
00:51:00,240 --> 00:51:03,599
see the data files are this

1270
00:51:03,599 --> 00:51:06,839
the users xml and the a gold for the

1271
00:51:06,839 --> 00:51:08,319
sqlite

1272
00:51:08,319 --> 00:51:10,720
and then once we know that we know the

1273
00:51:10,720 --> 00:51:11,680
full url

1274
00:51:11,680 --> 00:51:13,599
of the file that we want to steal using

1275
00:51:13,599 --> 00:51:15,599
xss so we can do

1276
00:51:15,599 --> 00:51:18,960
a new xml ctp request of the path

1277
00:51:18,960 --> 00:51:20,720
and then we send this request and then

1278
00:51:20,720 --> 00:51:22,000
we alert alerted to demonstrate

1279
00:51:22,000 --> 00:51:24,480
that we can read but right so we will do

1280
00:51:24,480 --> 00:51:26,800
this with several files and this is how

1281
00:51:26,800 --> 00:51:30,160
this will look uh yeah

1282
00:51:30,160 --> 00:51:33,920
and this is um and then

1283
00:51:33,920 --> 00:51:36,400
if the application has sd card access

1284
00:51:36,400 --> 00:51:37,119
then

1285
00:51:37,119 --> 00:51:39,760
any application that any file that

1286
00:51:39,760 --> 00:51:42,319
application can read from the sd card is

1287
00:51:42,319 --> 00:51:44,559
something that you could steal with your

1288
00:51:44,559 --> 00:51:45,680
exercise

1289
00:51:45,680 --> 00:51:48,960
then if there's other files on the

1290
00:51:48,960 --> 00:51:51,200
phone that have permissions that allow

1291
00:51:51,200 --> 00:51:53,280
the applications to read them

1292
00:51:53,280 --> 00:51:56,400
then this will also uh you know

1293
00:51:56,400 --> 00:51:58,960
be possible to be stolen with access

1294
00:51:58,960 --> 00:52:00,720
with the text filtration so this is an

1295
00:52:00,720 --> 00:52:02,559
example of reading a

1296
00:52:02,559 --> 00:52:04,240
configuration file from the phone or

1297
00:52:04,240 --> 00:52:06,079
reading a file from browser

1298
00:52:06,079 --> 00:52:08,000
which has permissions that allow other

1299
00:52:08,000 --> 00:52:09,599
apps to read it

1300
00:52:09,599 --> 00:52:13,040
so uh just a demonstration right so

1301
00:52:13,040 --> 00:52:15,200
uh we can do all this and methodology

1302
00:52:15,200 --> 00:52:16,720
wise you're looking first like

1303
00:52:16,720 --> 00:52:18,880
we have expressed what is the location

1304
00:52:18,880 --> 00:52:21,040
so what context does this run and then

1305
00:52:21,040 --> 00:52:21,680
can we

1306
00:52:21,680 --> 00:52:24,240
steal local files right so that is

1307
00:52:24,240 --> 00:52:25,040
basically

1308
00:52:25,040 --> 00:52:28,480
uh what uh

1309
00:52:28,480 --> 00:52:31,280
and then with the sd card manipulation

1310
00:52:31,280 --> 00:52:32,160
we can do

1311
00:52:32,160 --> 00:52:36,160
an adb pool of so we can find where the

1312
00:52:36,160 --> 00:52:38,000
file is on the sd card and then we can

1313
00:52:38,000 --> 00:52:39,599
do adb pool

1314
00:52:39,599 --> 00:52:42,720
of this html file and modify the file

1315
00:52:42,720 --> 00:52:45,040
locally on our computer and then we do

1316
00:52:45,040 --> 00:52:46,400
adb push

1317
00:52:46,400 --> 00:52:49,599
of the html file into the phone

1318
00:52:49,599 --> 00:52:52,079
and then we can add here the payload

1319
00:52:52,079 --> 00:52:53,760
like uh you know

1320
00:52:53,760 --> 00:52:56,559
uh to read the file and then we will be

1321
00:52:56,559 --> 00:52:57,599
alerted

1322
00:52:57,599 --> 00:53:00,400
as soon as the exercise is open right

1323
00:53:00,400 --> 00:53:02,160
then when you click on input validations

1324
00:53:02,160 --> 00:53:03,200
you will get this

1325
00:53:03,200 --> 00:53:05,599
alert immediately right so for root

1326
00:53:05,599 --> 00:53:06,720
cause course uh

1327
00:53:06,720 --> 00:53:11,359
analysis you can uh

1328
00:53:11,359 --> 00:53:13,599
so i'll just keep this because we're a

1329
00:53:13,599 --> 00:53:14,640
little bit

1330
00:53:14,640 --> 00:53:18,319
behind um so in this case it's because

1331
00:53:18,319 --> 00:53:20,160
it's a domex says because it's using

1332
00:53:20,160 --> 00:53:22,559
dome right using user input

1333
00:53:22,559 --> 00:53:26,559
swissadmix says html

1334
00:53:26,559 --> 00:53:30,240
you see right and then you can like do

1335
00:53:30,240 --> 00:53:32,559
things to drill a little bit deeper and

1336
00:53:32,559 --> 00:53:33,760
then see how

1337
00:53:33,760 --> 00:53:36,640
uh you have these uh send javascript

1338
00:53:36,640 --> 00:53:37,599
enabled to true

1339
00:53:37,599 --> 00:53:39,520
that allow universal access from file

1340
00:53:39,520 --> 00:53:40,880
urls to true

1341
00:53:40,880 --> 00:53:42,640
set down our file access from value or

1342
00:53:42,640 --> 00:53:45,760
else to true set allow for likes

1343
00:53:45,760 --> 00:53:47,280
and so on right so all the insecure

1344
00:53:47,280 --> 00:53:48,960
settings are pretty much enabled

1345
00:53:48,960 --> 00:53:52,800
this is why it works as well as

1346
00:53:52,800 --> 00:53:56,880
because this is loaded from a file url

1347
00:53:56,880 --> 00:54:00,559
so if possible you take view instead of

1348
00:54:00,559 --> 00:54:02,319
webviews because nexus says it's not

1349
00:54:02,319 --> 00:54:03,920
possible excuse

1350
00:54:03,920 --> 00:54:06,480
if you must use webviews disable as many

1351
00:54:06,480 --> 00:54:08,079
settings as possible

1352
00:54:08,079 --> 00:54:10,640
especially javascript all file access

1353
00:54:10,640 --> 00:54:11,839
options and any other

1354
00:54:11,839 --> 00:54:13,760
not strictly required functionality

1355
00:54:13,760 --> 00:54:16,079
right so as in network security you want

1356
00:54:16,079 --> 00:54:16,880
to close

1357
00:54:16,880 --> 00:54:19,280
as much as possible right and then leave

1358
00:54:19,280 --> 00:54:21,119
the minimum settings possible

1359
00:54:21,119 --> 00:54:23,520
for the application to work output

1360
00:54:23,520 --> 00:54:26,000
encode a user input prior to rendering

1361
00:54:26,000 --> 00:54:27,359
it in any webview

1362
00:54:27,359 --> 00:54:29,839
and then avoid dom access things as much

1363
00:54:29,839 --> 00:54:32,400
as possible

1364
00:54:34,240 --> 00:54:36,720
or at least sanitize user input prior to

1365
00:54:36,720 --> 00:54:38,079
assigning it to a dom access

1366
00:54:38,079 --> 00:54:40,960
sync like inner html location href and

1367
00:54:40,960 --> 00:54:42,079
so on so we always

1368
00:54:42,079 --> 00:54:44,960
access prevention cheats it has a lot

1369
00:54:44,960 --> 00:54:46,960
more details on this so with this let's

1370
00:54:46,960 --> 00:54:47,280
do

1371
00:54:47,280 --> 00:54:50,480
a quick demo of this so

1372
00:54:50,480 --> 00:54:54,480
first i have to go to androgold

1373
00:54:54,480 --> 00:54:57,599
and here um

1374
00:54:57,599 --> 00:55:01,280
we will go to insecure

1375
00:55:01,280 --> 00:55:04,799
data storage share preferences part one

1376
00:55:04,799 --> 00:55:07,839
here i'm going to put my username and

1377
00:55:07,839 --> 00:55:11,280
password i'm going to hit

1378
00:55:11,280 --> 00:55:15,200
save and then

1379
00:55:16,240 --> 00:55:18,480
after we have saved this we can go to

1380
00:55:18,480 --> 00:55:19,280
sql lite

1381
00:55:19,280 --> 00:55:22,080
and do my light user

1382
00:55:22,080 --> 00:55:23,680
[Music]

1383
00:55:23,680 --> 00:55:27,040
my secret light password

1384
00:55:27,040 --> 00:55:29,839
hit save and then with this what we have

1385
00:55:29,839 --> 00:55:30,799
done is create

1386
00:55:30,799 --> 00:55:34,799
the xml and sqlite files

1387
00:55:34,799 --> 00:55:38,319
and now we can go to input validations

1388
00:55:38,319 --> 00:55:41,760
and here i'm just going to try all the

1389
00:55:41,760 --> 00:55:44,160
payloads at once

1390
00:55:44,160 --> 00:55:47,200
which will be faster and then i'll

1391
00:55:47,200 --> 00:55:48,640
explain it

1392
00:55:48,640 --> 00:55:53,359
as we go so yeah i think

1393
00:55:53,359 --> 00:55:57,680
that should be enough so

1394
00:55:57,680 --> 00:56:03,839
if i go back to the application

1395
00:56:12,960 --> 00:56:17,280
so if i paste this

1396
00:56:17,280 --> 00:56:20,559
you can see this is the alert one

1397
00:56:20,559 --> 00:56:23,119
this is the alert location so we can see

1398
00:56:23,119 --> 00:56:23,599
uh

1399
00:56:23,599 --> 00:56:26,480
you know that this is a file url so it's

1400
00:56:26,480 --> 00:56:28,839
potentially insecure

1401
00:56:28,839 --> 00:56:32,240
trouble and then this is the username

1402
00:56:32,240 --> 00:56:34,160
and the password

1403
00:56:34,160 --> 00:56:36,319
so we can read the credentials from the

1404
00:56:36,319 --> 00:56:38,880
xml file using the xss so you can see my

1405
00:56:38,880 --> 00:56:40,880
username and my password

1406
00:56:40,880 --> 00:56:43,839
from the xml file using xss and then

1407
00:56:43,839 --> 00:56:44,319
these

1408
00:56:44,319 --> 00:56:47,920
are the credentials from

1409
00:56:47,920 --> 00:56:51,040
my sqlite user my sql by password are

1410
00:56:51,040 --> 00:56:53,119
the credentials that are

1411
00:56:53,119 --> 00:56:56,559
readable uh you know from the exercise

1412
00:56:56,559 --> 00:57:00,000
right so this alert and this is the

1413
00:57:00,000 --> 00:57:02,960
file from drumser so we can read also

1414
00:57:02,960 --> 00:57:04,000
all the files

1415
00:57:04,000 --> 00:57:06,720
on as long as the permissions allow the

1416
00:57:06,720 --> 00:57:08,240
app to read it

1417
00:57:08,240 --> 00:57:11,599
um yeah that's basically it so

1418
00:57:11,599 --> 00:57:14,799
with this let's try to

1419
00:57:14,799 --> 00:57:17,119
rush a little bit through web views of

1420
00:57:17,119 --> 00:57:19,680
ios so basically it's the same thing

1421
00:57:19,680 --> 00:57:24,559
but um i'll answer it on demo directly

1422
00:57:24,559 --> 00:57:28,000
but in this case um instead of file urls

1423
00:57:28,000 --> 00:57:29,040
you could face

1424
00:57:29,040 --> 00:57:31,920
apple web data so this is basically

1425
00:57:31,920 --> 00:57:33,680
another

1426
00:57:33,680 --> 00:57:36,720
possible equivalent to file

1427
00:57:36,720 --> 00:57:38,960
that's right in android you can also

1428
00:57:38,960 --> 00:57:41,680
have in ios you can also have file urls

1429
00:57:41,680 --> 00:57:43,839
but you can have apple data it's kind of

1430
00:57:43,839 --> 00:57:45,119
combined it means

1431
00:57:45,119 --> 00:57:48,880
out of hope and then you can

1432
00:57:48,880 --> 00:57:51,520
retrieve files methodology wise is

1433
00:57:51,520 --> 00:57:53,520
basically the same thing alert one other

1434
00:57:53,520 --> 00:57:54,160
location

1435
00:57:54,160 --> 00:57:56,640
and then try to file from the phone

1436
00:57:56,640 --> 00:57:57,920
history

1437
00:57:57,920 --> 00:58:01,280
phone call things like this and then for

1438
00:58:01,280 --> 00:58:03,440
the root cause you are looking for wk

1439
00:58:03,440 --> 00:58:06,079
webviews and ui webviews

1440
00:58:06,079 --> 00:58:09,440
it's possible on both but the ui webview

1441
00:58:09,440 --> 00:58:10,960
is kind of weaker

1442
00:58:10,960 --> 00:58:14,240
by default so in ui webviews actually

1443
00:58:14,240 --> 00:58:17,599
by default in this exercise you have

1444
00:58:17,599 --> 00:58:20,000
much higher chance of

1445
00:58:20,000 --> 00:58:22,079
damage then this is a string

1446
00:58:22,079 --> 00:58:24,079
concatenation in crypt which is a little

1447
00:58:24,079 --> 00:58:24,799
bit weird

1448
00:58:24,799 --> 00:58:27,200
because we have the backslash and then

1449
00:58:27,200 --> 00:58:29,760
the the name here

1450
00:58:29,760 --> 00:58:31,680
and then this is how it looked like from

1451
00:58:31,680 --> 00:58:32,960
extras so

1452
00:58:32,960 --> 00:58:36,480
you have low html string of hello and

1453
00:58:36,480 --> 00:58:38,880
name so this is the vulnerability you

1454
00:58:38,880 --> 00:58:40,400
can see that

1455
00:58:40,400 --> 00:58:42,720
xcode understands swift because it's

1456
00:58:42,720 --> 00:58:45,040
showing the name in a different color

1457
00:58:45,040 --> 00:58:48,160
than the hello so this means that

1458
00:58:48,160 --> 00:58:49,920
this is a string concatenation and it's

1459
00:58:49,920 --> 00:58:51,280
a little bit easier to see

1460
00:58:51,280 --> 00:58:54,640
on xcode then because the base url is

1461
00:58:54,640 --> 00:58:55,359
nil

1462
00:58:55,359 --> 00:58:57,520
this means it's being loaded from apple

1463
00:58:57,520 --> 00:58:58,720
web data

1464
00:58:58,720 --> 00:59:03,520
which means that you know

1465
00:59:03,680 --> 00:59:06,480
the application is vulnerable to data x

1466
00:59:06,480 --> 00:59:08,559
filtration as well because it's using a

1467
00:59:08,559 --> 00:59:10,559
ui webview

1468
00:59:10,559 --> 00:59:13,520
without a url and therefore we don't

1469
00:59:13,520 --> 00:59:15,440
have the same origin policy right so we

1470
00:59:15,440 --> 00:59:17,119
can read local files and we can send

1471
00:59:17,119 --> 00:59:19,839
them to arbitrary websites

1472
00:59:19,839 --> 00:59:23,200
so in general um ui webview

1473
00:59:23,200 --> 00:59:26,319
is much more secure because by default

1474
00:59:26,319 --> 00:59:28,799
it has this webv webkit allow

1475
00:59:28,799 --> 00:59:31,040
universal access from file urls and with

1476
00:59:31,040 --> 00:59:32,079
keep a lot of file

1477
00:59:32,079 --> 00:59:34,640
access from file url and these two

1478
00:59:34,640 --> 00:59:36,319
insecure settings are disabled by

1479
00:59:36,319 --> 00:59:37,119
default

1480
00:59:37,119 --> 00:59:41,200
wk webview which is faster is things

1481
00:59:41,200 --> 00:59:44,799
safer by default and also

1482
00:59:44,799 --> 00:59:47,200
in ui webviews you cannot turn off

1483
00:59:47,200 --> 00:59:49,200
javascript entirely well

1484
00:59:49,200 --> 00:59:51,119
in wk webinars you can right so in

1485
00:59:51,119 --> 00:59:53,760
general try to use wk webviews for

1486
00:59:53,760 --> 00:59:56,240
mitigation purposes

1487
00:59:56,240 --> 00:59:58,319
and if you have a ui webview and you

1488
00:59:58,319 --> 01:00:00,480
have xss chances are you can do

1489
01:00:00,480 --> 01:00:04,160
uh with it let me do a demo

1490
01:00:04,160 --> 01:00:06,640
very quickly and then we can wrap up and

1491
01:00:06,640 --> 01:00:08,079
we are more or less

1492
01:00:08,079 --> 01:00:11,680
on time so in here we have to go to

1493
01:00:11,680 --> 01:00:15,920
new issues and then start challenge

1494
01:00:15,920 --> 01:00:19,200
and i'm going to open i'm going to try

1495
01:00:19,200 --> 01:00:20,079
all the payload

1496
01:00:20,079 --> 01:00:23,760
once which will save us

1497
01:00:23,760 --> 01:00:26,880
then i can explain

1498
01:00:26,880 --> 01:00:30,400
what this is about so

1499
01:00:30,799 --> 01:00:36,000
i go here you paste payloads

1500
01:00:36,000 --> 01:00:39,280
in this and now

1501
01:00:39,280 --> 01:00:41,599
we start getting the alerts right so now

1502
01:00:41,599 --> 01:00:43,359
because javascript is asynchronous you

1503
01:00:43,359 --> 01:00:45,200
won't get the alerts in the same order

1504
01:00:45,200 --> 01:00:46,480
if you do this

1505
01:00:46,480 --> 01:00:49,040
but you can see here we have the alert

1506
01:00:49,040 --> 01:00:51,200
of locations showing us apple web data

1507
01:00:51,200 --> 01:00:52,319
so this is where

1508
01:00:52,319 --> 01:00:55,760
we get excited because the potential for

1509
01:00:55,760 --> 01:00:57,440
stealing local files

1510
01:00:57,440 --> 01:00:59,280
this is the alert one which confirms the

1511
01:00:59,280 --> 01:01:00,480
xss

1512
01:01:00,480 --> 01:01:03,839
this is reading the phone call history

1513
01:01:03,839 --> 01:01:05,119
from the phone

1514
01:01:05,119 --> 01:01:09,440
using xss and yeah this is another

1515
01:01:09,440 --> 01:01:14,000
sql like database from phone um

1516
01:01:14,000 --> 01:01:16,640
and yeah and this is pretty much it so

1517
01:01:16,640 --> 01:01:18,240
this proves that

1518
01:01:18,240 --> 01:01:20,799
you know with access you can also uh

1519
01:01:20,799 --> 01:01:22,880
still local files so

1520
01:01:22,880 --> 01:01:25,040
if there's any questions uh now is the

1521
01:01:25,040 --> 01:01:26,319
time and then

1522
01:01:26,319 --> 01:01:29,440
before i start answering questions uh

1523
01:01:29,440 --> 01:01:31,799
just to mention that if you go to

1524
01:01:31,799 --> 01:01:33,200
store.70security.com

1525
01:01:33,200 --> 01:01:36,319
you can get this workshop as well as

1526
01:01:36,319 --> 01:01:38,720
other workshops so this one is only one

1527
01:01:38,720 --> 01:01:40,319
hour

1528
01:01:40,319 --> 01:01:43,680
the one called practical overlap attacks

1529
01:01:43,680 --> 01:01:44,799
by example

1530
01:01:44,799 --> 01:01:47,520
and that is almost four hours so it has

1531
01:01:47,520 --> 01:01:49,440
a lot more examples

1532
01:01:49,440 --> 01:01:52,400
goes into these scenarios a little bit

1533
01:01:52,400 --> 01:01:53,200
you know

1534
01:01:53,200 --> 01:01:55,760
with a little bit more time so if this

1535
01:01:55,760 --> 01:01:57,200
was a little bit fast

1536
01:01:57,200 --> 01:01:58,880
i think people like that one as well and

1537
01:01:58,880 --> 01:02:00,480
then there's a lot more attacks from

1538
01:02:00,480 --> 01:02:01,280
built into

1539
01:02:01,280 --> 01:02:03,920
that i think you will like that and then

1540
01:02:03,920 --> 01:02:05,200
just to mention as well there's this

1541
01:02:05,200 --> 01:02:07,920
discount score or if you are interested

1542
01:02:07,920 --> 01:02:09,440
on any of the course

1543
01:02:09,440 --> 01:02:13,200
of the courses this 25 off so

1544
01:02:13,200 --> 01:02:16,319
ny for new year 25 you can use that so

1545
01:02:16,319 --> 01:02:17,119
with that

1546
01:02:17,119 --> 01:02:20,980
uh let's take this any questions

1547
01:02:20,980 --> 01:02:24,329
[Music]

1548
01:02:26,160 --> 01:02:29,038
i'll leave this

1549
01:02:29,200 --> 01:02:32,000
for sure could you give us an example

1550
01:02:32,000 --> 01:02:33,839
how this could be exploited without the

1551
01:02:33,839 --> 01:02:35,359
browseable property

1552
01:02:35,359 --> 01:02:37,440
so yes the without the browseable

1553
01:02:37,440 --> 01:02:38,559
property

1554
01:02:38,559 --> 01:02:42,559
on on android

1555
01:02:42,559 --> 01:02:46,960
i show the adb command the deep links

1556
01:02:46,960 --> 01:02:49,280
so the dibling testers so those these

1557
01:02:49,280 --> 01:02:51,200
would all be ways

1558
01:02:51,200 --> 01:02:54,400
um let me

1559
01:02:54,400 --> 01:02:58,160
yeah this question so these were all the

1560
01:02:58,160 --> 01:02:58,720
ways

1561
01:02:58,720 --> 01:03:01,119
in which that i showed you in the demo

1562
01:03:01,119 --> 01:03:02,160
right this would

1563
01:03:02,160 --> 01:03:05,599
be ways in which you can do uh you can

1564
01:03:05,599 --> 01:03:06,960
do this right so if i go

1565
01:03:06,960 --> 01:03:10,079
here uh user follow

1566
01:03:10,079 --> 01:03:13,520
blink tester this is going to work

1567
01:03:13,520 --> 01:03:15,440
without browseable because this is an

1568
01:03:15,440 --> 01:03:16,880
application

1569
01:03:16,880 --> 01:03:20,480
installed on the phone right

1570
01:03:20,480 --> 01:03:25,599
so with dibling tester with adb

1571
01:03:25,820 --> 01:03:28,079
[Music]

1572
01:03:28,079 --> 01:03:30,640
so browseable is just for the attack

1573
01:03:30,640 --> 01:03:32,720
from the browser itself

1574
01:03:32,720 --> 01:03:35,598
maybe share

1575
01:03:38,319 --> 01:03:42,160
slides only because this cannot be messy

1576
01:03:42,160 --> 01:03:46,160
okay so uh

1577
01:03:46,160 --> 01:03:49,200
so yeah okay i think i answered that

1578
01:03:49,200 --> 01:03:50,640
if i understood correctly we thought

1579
01:03:50,640 --> 01:03:52,480
brazil we would need a malicious app on

1580
01:03:52,480 --> 01:03:54,400
the victim's phone to export yes

1581
01:03:54,400 --> 01:03:59,599
so that is correct um

1582
01:03:59,599 --> 01:04:01,760
yeah okay so i think that's the only

1583
01:04:01,760 --> 01:04:02,880
question

1584
01:04:02,880 --> 01:04:05,770
so any any other

1585
01:04:05,770 --> 01:04:09,099
[Music]

1586
01:04:10,839 --> 01:04:13,839
questions

1587
01:04:19,520 --> 01:04:22,640
seems very good anyone else no more

1588
01:04:22,640 --> 01:04:23,760
questions

1589
01:04:23,760 --> 01:04:25,520
or if you have any questions if you are

1590
01:04:25,520 --> 01:04:27,520
shy you don't want to ask the question

1591
01:04:27,520 --> 01:04:28,559
in the chat you can

1592
01:04:28,559 --> 01:04:30,799
send an email uh you know to add me at

1593
01:04:30,799 --> 01:04:32,480
certain security.com and we

1594
01:04:32,480 --> 01:04:36,160
will do our best to answer as well

1595
01:04:36,160 --> 01:04:38,240
i hope you found this interesting and

1596
01:04:38,240 --> 01:04:39,280
yeah there's a lot of

1597
01:04:39,280 --> 01:04:41,839
other uh workshops that you can get like

1598
01:04:41,839 --> 01:04:43,359
this for free on the

1599
01:04:43,359 --> 01:04:45,599
store right so it's not just about the

1600
01:04:45,599 --> 01:04:46,960
paid stuff you can also get

1601
01:04:46,960 --> 01:04:50,000
some free stuff so

1602
01:04:50,319 --> 01:04:53,760
cool so then maybe we wrap it here or

1603
01:04:53,760 --> 01:04:57,280
like one more minute

1604
01:04:57,280 --> 01:05:08,000
if somebody has a question

1605
01:05:08,000 --> 01:05:10,559
hey thanks everyone thanks for joining

1606
01:05:10,559 --> 01:05:11,359
fest holiday

1607
01:05:11,359 --> 01:05:13,440
i hope you have a good time there's no

1608
01:05:13,440 --> 01:05:14,880
more questions so thank you everybody

1609
01:05:14,880 --> 01:05:15,599
for coming

1610
01:05:15,599 --> 01:05:19,520
and i hope you uh you enjoyed this

1611
01:05:19,520 --> 01:05:21,920
thanks a lot abraham and yeah if some of

1612
01:05:21,920 --> 01:05:23,760
the people watching on youtube

1613
01:05:23,760 --> 01:05:27,520
didn't get access to

1614
01:05:27,520 --> 01:05:28,960
to the workshop you can get access

1615
01:05:28,960 --> 01:05:31,119
yourself on the store or if you prefer

1616
01:05:31,119 --> 01:05:32,160
you can send an email

1617
01:05:32,160 --> 01:05:34,400
to admin at 70 secure.com and we can

1618
01:05:34,400 --> 01:05:37,839
give you access

1619
01:05:41,680 --> 01:05:43,280
the store will be faster because it's

1620
01:05:43,280 --> 01:05:44,720
automated so

1621
01:05:44,720 --> 01:05:46,480
maybe you know while we're sleeping or

1622
01:05:46,480 --> 01:05:48,240
something

1623
01:05:48,240 --> 01:05:51,039
because of different time zones uh you

1624
01:05:51,039 --> 01:05:52,079
know

1625
01:05:52,079 --> 01:05:54,960
be able to get it

1626
01:05:55,440 --> 01:05:58,799
but uh awesome so yeah

1627
01:05:58,799 --> 01:06:01,440
it's uh

1628
01:06:02,640 --> 01:06:04,480
let's leave it here and thank you again

1629
01:06:04,480 --> 01:06:07,760
everybody and happy new year

1630
01:06:08,079 --> 01:06:11,839
oh have a good one

