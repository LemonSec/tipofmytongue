1
00:00:01,669 --> 00:00:12,349
hey Stephen all right away go to the

2
00:00:06,000 --> 00:00:22,320
mountain stick does look for coming

3
00:00:12,349 --> 00:00:27,050
uncle jokes yeah it was a lease it yet

4
00:00:22,320 --> 00:00:30,000
but the sweet page debug little bit

5
00:00:27,050 --> 00:00:36,120
overcome the html5 semantic star

6
00:00:30,000 --> 00:00:48,210
involved even if blowjo volume unless

7
00:00:36,120 --> 00:00:55,739
you take off now so i play video ck2 up

8
00:00:48,210 --> 00:00:59,160
w e've in circuit visits alright so i'll

9
00:00:55,739 --> 00:01:00,899
leave you to the the conference like I

10
00:00:59,160 --> 00:01:03,300
just said to them that we will take the

11
00:01:00,899 --> 00:01:09,229
question at the end like which is our

12
00:01:03,300 --> 00:01:09,229
before so if there's anything to sign up

13
00:01:12,260 --> 00:01:19,439
all yours okay thank you alright so

14
00:01:17,159 --> 00:01:22,049
welcome everyone thank you for coming to

15
00:01:19,439 --> 00:01:23,758
tonight's presentation before we get

16
00:01:22,049 --> 00:01:26,520
started I'm going to make the assumption

17
00:01:23,759 --> 00:01:29,490
that everyone has an idea for the De Aza

18
00:01:26,520 --> 00:01:32,070
packets and so most of you know that

19
00:01:29,490 --> 00:01:34,798
DDoS attacks are on the rise they're

20
00:01:32,070 --> 00:01:36,570
becoming more and more powerful and they

21
00:01:34,799 --> 00:01:39,420
are becoming more frequent as well and

22
00:01:36,570 --> 00:01:42,809
with that the kiosk mitigation industry

23
00:01:39,420 --> 00:01:44,939
is booming companies are spending tens

24
00:01:42,810 --> 00:01:46,680
of thousands of dollars a month putting

25
00:01:44,939 --> 00:01:49,199
all these offenses in place to protect

26
00:01:46,680 --> 00:01:51,869
their application but one thing we

27
00:01:49,200 --> 00:01:54,119
notice is that oftentimes companies

28
00:01:51,869 --> 00:01:56,880
don't look at what their application can

29
00:01:54,119 --> 00:01:59,909
do to actually help protect itself

30
00:01:56,880 --> 00:02:01,289
against ddos attacks and so tonight I'm

31
00:01:59,909 --> 00:02:03,580
going to be talking about some of the

32
00:02:01,290 --> 00:02:06,310
common issues we've seen

33
00:02:03,580 --> 00:02:07,900
with these third-party defenses and as

34
00:02:06,310 --> 00:02:10,240
well as things you can do with your

35
00:02:07,900 --> 00:02:19,840
application to actually help it be

36
00:02:10,240 --> 00:02:23,080
protected by these other defenses so a

37
00:02:19,840 --> 00:02:25,690
little bit about me um I'm actually a U

38
00:02:23,080 --> 00:02:28,930
of T grad and I was hired a couple years

39
00:02:25,690 --> 00:02:32,200
ago two sturdy compass to actually work

40
00:02:28,930 --> 00:02:34,720
on training tools so I was brought on to

41
00:02:32,200 --> 00:02:36,730
develop another solution we had for

42
00:02:34,720 --> 00:02:41,590
training the game is sandbox environment

43
00:02:36,730 --> 00:02:44,920
and a few months into my job I was asked

44
00:02:41,590 --> 00:02:46,450
to work on a secret project so naturally

45
00:02:44,920 --> 00:02:49,359
when somebody asks you to work on a

46
00:02:46,450 --> 00:02:50,799
secret project you don't say no so I

47
00:02:49,360 --> 00:02:54,070
jumped on it and it turned out what I

48
00:02:50,800 --> 00:02:57,430
had to do was find a way to evaluate a

49
00:02:54,070 --> 00:02:59,799
company's digas defenses so I started

50
00:02:57,430 --> 00:03:03,420
planning out how to actually do that and

51
00:02:59,800 --> 00:03:06,120
I figured the best solution was actually

52
00:03:03,420 --> 00:03:09,700
launching a DDoS attack against them so

53
00:03:06,120 --> 00:03:12,130
I started building our solution and it's

54
00:03:09,700 --> 00:03:15,369
funny because in University my dream job

55
00:03:12,130 --> 00:03:17,560
was developing some software that was

56
00:03:15,370 --> 00:03:19,870
super powerful it was brought on the

57
00:03:17,560 --> 00:03:22,750
distributed system they would do some

58
00:03:19,870 --> 00:03:25,690
sort of powerful computations something

59
00:03:22,750 --> 00:03:29,230
powerful you know a typical Comp Sci

60
00:03:25,690 --> 00:03:31,209
students dream and so it turns out with

61
00:03:29,230 --> 00:03:34,119
launching DDoS attacks actually fits

62
00:03:31,209 --> 00:03:37,030
that bill quite well and so now I get to

63
00:03:34,120 --> 00:03:39,850
actually live out launching DDoS attacks

64
00:03:37,030 --> 00:03:41,739
in coordinating thousands of service to

65
00:03:39,850 --> 00:03:43,989
actually you know created the office

66
00:03:41,739 --> 00:03:47,580
attack and send powerful in illicit

67
00:03:43,989 --> 00:03:51,910
traffic I kind of unsuspecting servers

68
00:03:47,580 --> 00:03:54,040
um so flash forward to today I the lead

69
00:03:51,910 --> 00:03:56,530
d das consultant for detox drink at

70
00:03:54,040 --> 00:03:59,739
security compass and a off strike is our

71
00:03:56,530 --> 00:04:02,920
in-house service for launching realty

72
00:03:59,739 --> 00:04:03,950
office attacks against annie's the

73
00:04:02,920 --> 00:04:06,708
offenses

74
00:04:03,950 --> 00:04:09,200
applications put in place and actually

75
00:04:06,709 --> 00:04:11,930
evaluating whether those defenses will

76
00:04:09,200 --> 00:04:13,518
withstand you know it's a time I built a

77
00:04:11,930 --> 00:04:15,739
platform we use for launching DDoS

78
00:04:13,519 --> 00:04:18,680
attacks and I've been building and

79
00:04:15,739 --> 00:04:23,440
launching the office attacks legally for

80
00:04:18,680 --> 00:04:26,600
about two years now so before I continue

81
00:04:23,440 --> 00:04:30,020
tonight's presentation is part two in

82
00:04:26,600 --> 00:04:32,330
part by the Empire shows a few Star Wars

83
00:04:30,020 --> 00:04:34,190
fans out there so you know if you think

84
00:04:32,330 --> 00:04:38,659
you're fighting the rebel scum consider

85
00:04:34,190 --> 00:04:42,169
joining the Empire so as I mentioned

86
00:04:38,660 --> 00:04:44,060
before DDoS attacks are happening akamai

87
00:04:42,169 --> 00:04:47,060
reported in ninety percent increase in

88
00:04:44,060 --> 00:04:50,630
the office attacks in q4 2015 over the

89
00:04:47,060 --> 00:04:52,460
previous quarter and there's constant

90
00:04:50,630 --> 00:04:54,139
news coverage of DDoS attacks I'm

91
00:04:52,460 --> 00:04:57,020
constantly getting emails every day from

92
00:04:54,139 --> 00:05:00,860
my google alerts about new DDoS attacks

93
00:04:57,020 --> 00:05:03,260
on companies extortion campaigns things

94
00:05:00,860 --> 00:05:05,450
like that and a lot of high-profile

95
00:05:03,260 --> 00:05:09,229
attacks playstation network was down

96
00:05:05,450 --> 00:05:11,240
recently and as part of their apology to

97
00:05:09,229 --> 00:05:14,300
the user base they sent out a free day 0

98
00:05:11,240 --> 00:05:18,500
PS boss because of it xbox was hit

99
00:05:14,300 --> 00:05:21,080
before the Christmas break and even more

100
00:05:18,500 --> 00:05:23,090
notable one is BBC was taken down by a

101
00:05:21,080 --> 00:05:25,370
really large penis attack and it's kind

102
00:05:23,090 --> 00:05:27,229
of interesting really really knows to

103
00:05:25,370 --> 00:05:30,800
say how powerful DDoS attacks are

104
00:05:27,229 --> 00:05:33,800
becoming because the BBC has been

105
00:05:30,800 --> 00:05:35,870
streaming digital media for years now

106
00:05:33,800 --> 00:05:38,270
and surveying hundreds of thousands

107
00:05:35,870 --> 00:05:40,130
millions of people and so their

108
00:05:38,270 --> 00:05:42,310
infrastructure is actually overwhelmed

109
00:05:40,130 --> 00:05:46,840
with the dogs a detox of flood

110
00:05:42,310 --> 00:05:46,840
indicating the power that that time

111
00:05:48,440 --> 00:05:53,820
so I'm sure there are people in the

112
00:05:52,320 --> 00:05:57,090
audience possibly the other two have

113
00:05:53,820 --> 00:05:59,030
been either hit by a gas attack or know

114
00:05:57,090 --> 00:06:02,340
someone and you can proudly share sorry

115
00:05:59,030 --> 00:06:04,469
just do the 4matic tonight with product

116
00:06:02,340 --> 00:06:07,190
we won't be sharing those stories but I

117
00:06:04,470 --> 00:06:10,140
can tell you that I can he knows i

118
00:06:07,190 --> 00:06:11,969
launched ddos attacks spread my job I've

119
00:06:10,140 --> 00:06:15,270
launched a variety of different attacks

120
00:06:11,970 --> 00:06:17,910
both volumetric and application launch

121
00:06:15,270 --> 00:06:22,500
volumetric tags up to 25 gigabits per

122
00:06:17,910 --> 00:06:24,740
second UDP jump traffic and also not as

123
00:06:22,500 --> 00:06:26,550
powerful application layer in fact I

124
00:06:24,740 --> 00:06:30,150
worked with a variety of different

125
00:06:26,550 --> 00:06:33,090
infrastructures to evaluate so things

126
00:06:30,150 --> 00:06:34,530
ranging from you know infrastructures

127
00:06:33,090 --> 00:06:37,109
that don't actually have any defenses

128
00:06:34,530 --> 00:06:40,440
and want to see what a DDoS attack will

129
00:06:37,110 --> 00:06:43,140
do to infrastructure the tub on-premise

130
00:06:40,440 --> 00:06:46,260
inning Club defenses little help that

131
00:06:43,140 --> 00:06:49,260
will protect it from any grounding point

132
00:06:46,260 --> 00:06:51,390
and so it's actually interesting because

133
00:06:49,260 --> 00:06:53,730
we typically see a lot of success with

134
00:06:51,390 --> 00:06:56,099
the a player attacks despite them not

135
00:06:53,730 --> 00:06:58,140
being as powerful it's really because

136
00:06:56,100 --> 00:07:00,900
you don't need as much power to actually

137
00:06:58,140 --> 00:07:02,700
be successful because of that they're

138
00:07:00,900 --> 00:07:05,030
actually harder to detect there's lower

139
00:07:02,700 --> 00:07:07,590
bandwidth they can fly under the radar

140
00:07:05,030 --> 00:07:11,880
making it trickier to actually notice it

141
00:07:07,590 --> 00:07:15,060
and determine this actually develop at a

142
00:07:11,880 --> 00:07:17,130
lot of times companies are hesitant to

143
00:07:15,060 --> 00:07:18,660
block these attacks because they don't

144
00:07:17,130 --> 00:07:20,490
know whether it's legitimate traffic and

145
00:07:18,660 --> 00:07:22,050
they're actually scared of being

146
00:07:20,490 --> 00:07:24,090
overzealous with what they block in

147
00:07:22,050 --> 00:07:27,690
blocking legitimate users and that's

148
00:07:24,090 --> 00:07:29,460
really why companies fear a planar tax

149
00:07:27,690 --> 00:07:34,500
the most at least when what we've seen

150
00:07:29,460 --> 00:07:36,390
that the clients we work with a lot of

151
00:07:34,500 --> 00:07:38,900
times we hear from companies that were

152
00:07:36,390 --> 00:07:42,080
trying to approach about

153
00:07:38,900 --> 00:07:44,388
is that their app is protected they pay

154
00:07:42,080 --> 00:07:47,990
Akamai tens of thousands of dollars a

155
00:07:44,389 --> 00:07:49,759
month to have a cen content delivery

156
00:07:47,990 --> 00:07:53,180
network and a web application firewall

157
00:07:49,759 --> 00:07:55,009
in place don't you know supposedly

158
00:07:53,180 --> 00:07:57,169
protect them against all of these

159
00:07:55,009 --> 00:07:59,750
details and apps and our question always

160
00:07:57,169 --> 00:08:01,460
is how do you actually tested it have

161
00:07:59,750 --> 00:08:03,560
you gone through tests and different

162
00:08:01,460 --> 00:08:05,539
parts of you have tested the parts that

163
00:08:03,560 --> 00:08:07,580
are likely to be targeted because there

164
00:08:05,539 --> 00:08:10,550
are certain parts of it even with the

165
00:08:07,580 --> 00:08:12,948
cen defense in place that will be

166
00:08:10,550 --> 00:08:16,970
targeted and consoled leagues with

167
00:08:12,949 --> 00:08:18,919
potential dee da situation and one

168
00:08:16,970 --> 00:08:20,930
question we always ask or consider is

169
00:08:18,919 --> 00:08:23,599
have you even looked at your application

170
00:08:20,930 --> 00:08:25,039
to see you know if the designing it

171
00:08:23,600 --> 00:08:28,190
actually helps protect them against eat

172
00:08:25,039 --> 00:08:34,549
off attacks if it helps make a cen to

173
00:08:28,190 --> 00:08:36,679
finance more efficient so we can't talk

174
00:08:34,549 --> 00:08:40,159
about the US attacks without talking

175
00:08:36,679 --> 00:08:42,679
about the supporting infrastructure now

176
00:08:40,159 --> 00:08:44,120
I'm sure a lot of you have seen various

177
00:08:42,679 --> 00:08:47,900
different infrastructures work with

178
00:08:44,120 --> 00:08:51,529
different ones probably combinations of

179
00:08:47,900 --> 00:08:55,490
load balancers servers other on-premise

180
00:08:51,529 --> 00:08:57,260
devices firewalls so wondering if

181
00:08:55,490 --> 00:09:04,580
anybody's infrastructure it looks like

182
00:08:57,260 --> 00:09:06,110
this probably not I mean in my past

183
00:09:04,580 --> 00:09:08,000
experience nobody's raised their hand

184
00:09:06,110 --> 00:09:11,420
for this so what if we what if we look

185
00:09:08,000 --> 00:09:14,660
at it like this you know so so the desks

186
00:09:11,420 --> 00:09:17,709
are you know not your column any

187
00:09:14,660 --> 00:09:20,709
infrastructure so maybe if we look at it

188
00:09:17,710 --> 00:09:23,740
this so you can consider the desks are a

189
00:09:20,710 --> 00:09:25,600
lot like you know that actually called

190
00:09:23,740 --> 00:09:27,970
an infrastructure we're at the very core

191
00:09:25,600 --> 00:09:31,900
that you have your origin server serving

192
00:09:27,970 --> 00:09:35,020
applications a long way have routers

193
00:09:31,900 --> 00:09:37,180
firewalls on-premise devices maybe even

194
00:09:35,020 --> 00:09:39,520
load balancers and at the very outer

195
00:09:37,180 --> 00:09:42,099
layer defense is where you have your

196
00:09:39,520 --> 00:09:44,560
content delivery network that's serving

197
00:09:42,100 --> 00:09:48,070
static content and absorbing most of an

198
00:09:44,560 --> 00:09:49,900
attack observing an attack if there is

199
00:09:48,070 --> 00:09:55,300
one on your infrastructure for the most

200
00:09:49,900 --> 00:09:57,430
part so more simplistic view is this and

201
00:09:55,300 --> 00:09:58,839
this is actually a generalization of a

202
00:09:57,430 --> 00:10:01,870
lot of the infrastructures we actually

203
00:09:58,840 --> 00:10:04,360
work with and so some combination of

204
00:10:01,870 --> 00:10:06,910
these components will see and is

205
00:10:04,360 --> 00:10:08,740
something to commonly test so even with

206
00:10:06,910 --> 00:10:12,040
all of this you know there are still

207
00:10:08,740 --> 00:10:13,990
issues you're not fully protected and

208
00:10:12,040 --> 00:10:16,360
it's surprising actually that we see

209
00:10:13,990 --> 00:10:23,020
some common issues amongst people with

210
00:10:16,360 --> 00:10:26,560
similar for structures so even with you

211
00:10:23,020 --> 00:10:29,140
know CDN layered defense we still find

212
00:10:26,560 --> 00:10:31,060
issues similar to any sort of pen

213
00:10:29,140 --> 00:10:32,980
testing where you know people have done

214
00:10:31,060 --> 00:10:35,140
their due diligence you can still type

215
00:10:32,980 --> 00:10:37,960
most of the time find some sort of

216
00:10:35,140 --> 00:10:42,640
security issue and when you're thinking

217
00:10:37,960 --> 00:10:46,260
about CDN defenses you can think of any

218
00:10:42,640 --> 00:10:49,990
issue as a big hole in the Death Star so

219
00:10:46,260 --> 00:10:52,630
some ways to bypass the cd8 defense and

220
00:10:49,990 --> 00:10:55,180
completely you know completely bypasses

221
00:10:52,630 --> 00:10:59,670
offenses and actually attack the origin

222
00:10:55,180 --> 00:11:03,880
infrastructure itself for CDN defense

223
00:10:59,670 --> 00:11:07,030
one way one vent hole is actually

224
00:11:03,880 --> 00:11:09,670
getting access to the origin IP if you

225
00:11:07,030 --> 00:11:12,790
can get access to the origin IP you can

226
00:11:09,670 --> 00:11:14,229
potentially bypass CDN defense just

227
00:11:12,790 --> 00:11:17,380
because of how they typically set up

228
00:11:14,230 --> 00:11:19,670
what we typically seen is they'll use

229
00:11:17,380 --> 00:11:22,550
DNS to route traffic to the

230
00:11:19,670 --> 00:11:24,589
gdn defense which will proxy any

231
00:11:22,550 --> 00:11:27,380
requests or serve requests from the

232
00:11:24,590 --> 00:11:30,320
network and proxy any requests it cancer

233
00:11:27,380 --> 00:11:33,080
back to the origin infrastructure so the

234
00:11:30,320 --> 00:11:34,490
vent hole there is if you can send

235
00:11:33,080 --> 00:11:37,340
traffic directly to the origin

236
00:11:34,490 --> 00:11:41,840
infrastructure your defense doesn't do

237
00:11:37,340 --> 00:11:44,840
anything for you and so one way one vent

238
00:11:41,840 --> 00:11:49,040
hole is potentially when your

239
00:11:44,840 --> 00:11:51,380
application leaks the MP so if your

240
00:11:49,040 --> 00:11:54,980
application tcpip an attacker can then

241
00:11:51,380 --> 00:11:57,200
bypass you defenses with the CDM defense

242
00:11:54,980 --> 00:11:59,330
you want to make sure that you want to

243
00:11:57,200 --> 00:12:01,490
consider your origin IP sensitive data

244
00:11:59,330 --> 00:12:04,910
so this can actually be considered one

245
00:12:01,490 --> 00:12:07,580
of the OWASP top ten the a6 sensitive

246
00:12:04,910 --> 00:12:09,650
data exposure if you're leaking your

247
00:12:07,580 --> 00:12:11,870
Jenai key to an attacker and there could

248
00:12:09,650 --> 00:12:14,600
be a number of different ways they could

249
00:12:11,870 --> 00:12:17,600
be in the response bodies even in the

250
00:12:14,600 --> 00:12:19,910
headers or even worse if it's logged in

251
00:12:17,600 --> 00:12:21,950
some file somewhere that's somehow

252
00:12:19,910 --> 00:12:24,319
publicly accessible either through other

253
00:12:21,950 --> 00:12:28,070
vulnerabilities or just really bad

254
00:12:24,320 --> 00:12:30,440
screen set and like I said all of this

255
00:12:28,070 --> 00:12:33,710
would allow traffic to be directly to

256
00:12:30,440 --> 00:12:36,350
the origin server another kind of Avenue

257
00:12:33,710 --> 00:12:39,530
or play on that is when response bodies

258
00:12:36,350 --> 00:12:42,050
are HTTP headers leave some sort of

259
00:12:39,530 --> 00:12:44,720
fingerprint so we've seen have five

260
00:12:42,050 --> 00:12:48,199
devices where they'll send back the HTTP

261
00:12:44,720 --> 00:12:49,970
header big-ip which is enough 52 private

262
00:12:48,200 --> 00:12:53,030
area technology for fighting up detox

263
00:12:49,970 --> 00:12:54,140
defenses so right away from there we

264
00:12:53,030 --> 00:12:58,730
know we're working with the neckline

265
00:12:54,140 --> 00:13:00,949
device and if we can get access we can

266
00:12:58,730 --> 00:13:02,840
find out through other means the block

267
00:13:00,950 --> 00:13:05,840
might is that company almost and then it

268
00:13:02,840 --> 00:13:08,720
is start anew Maury ting it to see which

269
00:13:05,840 --> 00:13:09,590
servers are which I keys return a

270
00:13:08,720 --> 00:13:12,170
similar head

271
00:13:09,590 --> 00:13:15,740
and kind of match up the the IP that way

272
00:13:12,170 --> 00:13:18,979
to the fingerprint we found through you

273
00:13:15,740 --> 00:13:21,170
know through some sort of leak and in

274
00:13:18,980 --> 00:13:23,480
that case through that means we have the

275
00:13:21,170 --> 00:13:27,349
origin IP and again can attack directly

276
00:13:23,480 --> 00:13:30,200
to the infrastructure another common

277
00:13:27,350 --> 00:13:34,700
thing we see a common way to see origin

278
00:13:30,200 --> 00:13:37,520
Eyed Peas linked is through DNS so one

279
00:13:34,700 --> 00:13:40,940
actually very common scenario is where

280
00:13:37,520 --> 00:13:43,600
the root domain say example.com well

281
00:13:40,940 --> 00:13:46,070
actually points in the original IP and

282
00:13:43,600 --> 00:13:48,950
when you just go there when the browser

283
00:13:46,070 --> 00:13:52,280
goes there it'll send an HTTP redirect

284
00:13:48,950 --> 00:13:55,490
back to actually go to triple w example

285
00:13:52,280 --> 00:13:58,760
calm and from there that point to the

286
00:13:55,490 --> 00:14:00,950
actual CDN infrastructure and obviously

287
00:13:58,760 --> 00:14:03,410
this is an issue because again you know

288
00:14:00,950 --> 00:14:05,300
it's an easy way to discover the origin

289
00:14:03,410 --> 00:14:07,670
of P and even though you're only sending

290
00:14:05,300 --> 00:14:09,650
can only send small amount of traffic to

291
00:14:07,670 --> 00:14:11,390
that orange light d you can still send

292
00:14:09,650 --> 00:14:13,340
traffic to it and when we're talking

293
00:14:11,390 --> 00:14:15,470
about details we can send massive

294
00:14:13,340 --> 00:14:19,790
amounts of traffic to it even enough to

295
00:14:15,470 --> 00:14:21,170
just knock it off and in some cases

296
00:14:19,790 --> 00:14:23,930
we've been able to do that there have

297
00:14:21,170 --> 00:14:27,170
been specific cases are specific

298
00:14:23,930 --> 00:14:29,120
services running that you know we said

299
00:14:27,170 --> 00:14:31,370
it enough traffic that it has memory

300
00:14:29,120 --> 00:14:33,410
issues or something and suddenly it will

301
00:14:31,370 --> 00:14:34,940
stop accepting connections tcp

302
00:14:33,410 --> 00:14:38,780
connection floods another thing you can

303
00:14:34,940 --> 00:14:41,390
do and that anyone trying to navigate to

304
00:14:38,780 --> 00:14:42,650
example calm doesn't get that redirect

305
00:14:41,390 --> 00:14:45,710
anymore is that they going to connect

306
00:14:42,650 --> 00:14:48,410
and you've successfully you're

307
00:14:45,710 --> 00:14:50,270
successful with you details of time this

308
00:14:48,410 --> 00:14:52,250
is number of different data dns records

309
00:14:50,270 --> 00:14:54,970
that can also expose the origin i think

310
00:14:52,250 --> 00:14:58,280
we've seen old and outdated records

311
00:14:54,970 --> 00:15:00,860
subdomains so might not be example.com

312
00:14:58,280 --> 00:15:02,660
but it could be blogs on example calm

313
00:15:00,860 --> 00:15:05,030
little slow point to your origin

314
00:15:02,660 --> 00:15:05,510
infrastructure and any other type of

315
00:15:05,030 --> 00:15:07,720
record

316
00:15:05,510 --> 00:15:14,360
it's like male records on our

317
00:15:07,720 --> 00:15:17,540
authoritative DNS records so the way to

318
00:15:14,360 --> 00:15:20,270
help protect yourself from those kinds

319
00:15:17,540 --> 00:15:22,910
of leaks and really just protecting

320
00:15:20,270 --> 00:15:27,470
orange my team is to subscribe to bgp

321
00:15:22,910 --> 00:15:29,600
based services with that your your

322
00:15:27,470 --> 00:15:32,480
service provider is now announcing your

323
00:15:29,600 --> 00:15:35,150
IP space so either Akamai or one of the

324
00:15:32,480 --> 00:15:37,400
top detox negation providers will

325
00:15:35,150 --> 00:15:38,720
actually announce your IP space and

326
00:15:37,400 --> 00:15:42,380
route traffic to their infrastructure

327
00:15:38,720 --> 00:15:44,930
first so that even if you get your own

328
00:15:42,380 --> 00:15:45,980
IP you know they can still rub the

329
00:15:44,930 --> 00:15:48,290
traffic before it gets the

330
00:15:45,980 --> 00:15:51,320
infrastructure and keep you protected

331
00:15:48,290 --> 00:15:53,630
there are no different services also but

332
00:15:51,320 --> 00:15:56,180
so are supposed to protect your origin

333
00:15:53,630 --> 00:16:04,670
IP I could my ass one called site shield

334
00:15:56,180 --> 00:16:09,949
and typically bgp is the way to go one

335
00:16:04,670 --> 00:16:12,050
major defense of CN providers and web

336
00:16:09,950 --> 00:16:15,760
application firewall providers is radon

337
00:16:12,050 --> 00:16:18,410
is a regulates are intended to determine

338
00:16:15,760 --> 00:16:21,800
non-human potentially not including

339
00:16:18,410 --> 00:16:23,900
clients so those are you know if a

340
00:16:21,800 --> 00:16:26,359
malicious fog is trying to attack the

341
00:16:23,900 --> 00:16:29,800
site they might be requesting it at the

342
00:16:26,360 --> 00:16:32,390
nonhuman rate of 10 requests per second

343
00:16:29,800 --> 00:16:34,849
typically the application is for

344
00:16:32,390 --> 00:16:37,400
websites I've seen there's no need for a

345
00:16:34,850 --> 00:16:40,790
person to you know request the same page

346
00:16:37,400 --> 00:16:42,120
over and over again so repeatedly and so

347
00:16:40,790 --> 00:16:44,160
great limits are intended

348
00:16:42,120 --> 00:16:46,260
to detect that and block out those

349
00:16:44,160 --> 00:16:49,290
malicious I piece or potentially

350
00:16:46,260 --> 00:16:51,060
malicious IPS because you know there

351
00:16:49,290 --> 00:16:53,760
might be a rare case for some sites

352
00:16:51,060 --> 00:16:55,709
let's say a ticking sun if you're trying

353
00:16:53,760 --> 00:16:57,300
to take it for an event you might sit

354
00:16:55,710 --> 00:16:59,490
there hitting refresh over and over

355
00:16:57,300 --> 00:17:02,099
again just to try and get the tickets

356
00:16:59,490 --> 00:17:04,770
you want so in some cases you know a

357
00:17:02,100 --> 00:17:06,480
legitimate client could actually you

358
00:17:04,770 --> 00:17:08,430
know make a request too many times

359
00:17:06,480 --> 00:17:11,280
request to page too many times and get

360
00:17:08,430 --> 00:17:13,110
themselves flogged so they've they're

361
00:17:11,280 --> 00:17:15,599
pretty defenses implemented a short

362
00:17:13,109 --> 00:17:17,790
clock period time sometimes it's

363
00:17:15,599 --> 00:17:19,469
adjustable and so it will really depend

364
00:17:17,790 --> 00:17:22,280
on your provider and we've seen times

365
00:17:19,470 --> 00:17:24,929
between two minutes and five minutes and

366
00:17:22,280 --> 00:17:26,369
there's a number of different rate

367
00:17:24,929 --> 00:17:29,250
limits that you can actually use to help

368
00:17:26,369 --> 00:17:32,070
protect yourself there's monitoring

369
00:17:29,250 --> 00:17:33,900
rates and requests for second concurrent

370
00:17:32,070 --> 00:17:38,840
connections per second from a single

371
00:17:33,900 --> 00:17:41,340
source and even the link speed typically

372
00:17:38,840 --> 00:17:43,110
depending on your client base most of

373
00:17:41,340 --> 00:17:45,480
your users will have a decent speed

374
00:17:43,110 --> 00:17:47,459
internet connection speed and so the

375
00:17:45,480 --> 00:17:49,230
really slow lines could be a sign of

376
00:17:47,460 --> 00:17:53,760
malicious users trying to do something

377
00:17:49,230 --> 00:17:55,470
like a slow loris type of attack so even

378
00:17:53,760 --> 00:17:58,610
with the rate limits we've still found

379
00:17:55,470 --> 00:18:01,860
issued when we're testing clients and

380
00:17:58,610 --> 00:18:03,840
ravens are commonly the most configured

381
00:18:01,860 --> 00:18:07,520
defense misconfigured defense that we've

382
00:18:03,840 --> 00:18:09,899
seen a lot of times we'll go into a test

383
00:18:07,520 --> 00:18:11,429
the climate be confident that it's

384
00:18:09,900 --> 00:18:13,620
protecting because it has these random

385
00:18:11,429 --> 00:18:16,230
is and it just wants us to verify on

386
00:18:13,620 --> 00:18:19,169
them however we go in we don't actually

387
00:18:16,230 --> 00:18:21,330
see a great limit take effect and that

388
00:18:19,170 --> 00:18:23,280
can be either miss configuration they're

389
00:18:21,330 --> 00:18:26,460
not switched on for whatever reason or

390
00:18:23,280 --> 00:18:28,590
even let their I'm figure to be too high

391
00:18:26,460 --> 00:18:30,480
for the application that's another

392
00:18:28,590 --> 00:18:34,500
scenario you see a lot of them where

393
00:18:30,480 --> 00:18:37,860
they arbitrarily set a rate limit on an

394
00:18:34,500 --> 00:18:41,150
application but even the amount they set

395
00:18:37,860 --> 00:18:43,610
is too high easily flying that radar

396
00:18:41,150 --> 00:18:44,980
distribute our load to you know

397
00:18:43,610 --> 00:18:47,559
thousands

398
00:18:44,980 --> 00:18:50,470
couple thousands of servers and still be

399
00:18:47,559 --> 00:18:53,530
able to take that server down and we'll

400
00:18:50,470 --> 00:18:54,790
still be doing 90 + per second if they

401
00:18:53,530 --> 00:18:56,760
have a rate limit of 10 requests per

402
00:18:54,790 --> 00:18:59,820
second which could still be considered

403
00:18:56,760 --> 00:19:02,110
non-human depending on your application

404
00:18:59,820 --> 00:19:03,460
one of the things we see is a great

405
00:19:02,110 --> 00:19:06,159
limits are only configured at the

406
00:19:03,460 --> 00:19:08,530
automotive outermost defense so they'll

407
00:19:06,160 --> 00:19:12,010
be only if we figured on the cen third

408
00:19:08,530 --> 00:19:14,730
party CDN or wack provider and that's

409
00:19:12,010 --> 00:19:17,950
kind of an issue because we talked about

410
00:19:14,730 --> 00:19:19,960
eventful being the origin IP so my can

411
00:19:17,950 --> 00:19:21,610
bypass the CDN I can bypass those great

412
00:19:19,960 --> 00:19:24,160
limits and then suddenly there's

413
00:19:21,610 --> 00:19:26,620
absolutely no defenses and you can even

414
00:19:24,160 --> 00:19:33,940
block the the most simplest of DDoS

415
00:19:26,620 --> 00:19:36,520
attacks so you want to be able to rely

416
00:19:33,940 --> 00:19:39,220
or prove your rate limits to help

417
00:19:36,520 --> 00:19:42,040
protect your infrastructure and to do

418
00:19:39,220 --> 00:19:43,960
that you need to know what limits you

419
00:19:42,040 --> 00:19:45,850
can place you can put in place so I

420
00:19:43,960 --> 00:19:50,169
managed before they're 30 there are

421
00:19:45,850 --> 00:19:52,240
three three examples those are requests

422
00:19:50,169 --> 00:19:55,210
for second connections concurrent

423
00:19:52,240 --> 00:19:57,790
connections per single source and link

424
00:19:55,210 --> 00:19:59,799
speed and you really know what to set

425
00:19:57,790 --> 00:20:02,559
those values you need to establish a

426
00:19:59,799 --> 00:20:06,190
baseline so baseline will involve

427
00:20:02,559 --> 00:20:08,830
monitoring the traffic to your site for

428
00:20:06,190 --> 00:20:11,350
a period of time we typically see two

429
00:20:08,830 --> 00:20:12,909
weeks or suggest two weeks at least so

430
00:20:11,350 --> 00:20:16,719
you can calculate averages and standard

431
00:20:12,910 --> 00:20:18,640
deviations and figure out which pages

432
00:20:16,720 --> 00:20:22,360
are accessed most frequently and things

433
00:20:18,640 --> 00:20:25,929
like that and that will allow you to set

434
00:20:22,360 --> 00:20:28,059
same same rate limits for further

435
00:20:25,929 --> 00:20:31,720
different pages in your application for

436
00:20:28,059 --> 00:20:34,120
their parts of your site if possible you

437
00:20:31,720 --> 00:20:36,610
want to be you want to set exponentially

438
00:20:34,120 --> 00:20:39,270
increasing block times for repeat

439
00:20:36,610 --> 00:20:42,189
offenders so anyone that's constantly

440
00:20:39,270 --> 00:20:43,720
you know little violate or little go

441
00:20:42,190 --> 00:20:45,520
past the limits

442
00:20:43,720 --> 00:20:47,980
plot for a period of time as they can

443
00:20:45,520 --> 00:20:51,129
pack if they come back and go above that

444
00:20:47,980 --> 00:20:53,169
way for it again you know that's even

445
00:20:51,130 --> 00:20:55,510
more indicative that they might be some

446
00:20:53,169 --> 00:20:56,830
sort of bond so you want to block them

447
00:20:55,510 --> 00:20:58,330
for a longer period of time because

448
00:20:56,830 --> 00:21:01,240
there's actually a case where an

449
00:20:58,330 --> 00:21:04,240
attacker world roll through a different

450
00:21:01,240 --> 00:21:06,669
side of my peace throughout the duration

451
00:21:04,240 --> 00:21:09,190
of an attack so it's once there we've

452
00:21:06,669 --> 00:21:13,419
actually experienced and will have pools

453
00:21:09,190 --> 00:21:15,610
of attacking nodes and basically when we

454
00:21:13,419 --> 00:21:18,429
detective one pool is blocked we'll just

455
00:21:15,610 --> 00:21:19,899
rotate to the next school and you know

456
00:21:18,429 --> 00:21:21,610
even though the first ones a block we've

457
00:21:19,900 --> 00:21:23,740
got a fresh attack going fresh eyed peas

458
00:21:21,610 --> 00:21:25,899
and those ones on your block and they

459
00:21:23,740 --> 00:21:28,690
continue to take down the site and we'll

460
00:21:25,900 --> 00:21:32,169
just keep rotating it depending on with

461
00:21:28,690 --> 00:21:34,419
the duration time if it's tagged and in

462
00:21:32,169 --> 00:21:36,909
that scenario we might we might not be

463
00:21:34,419 --> 00:21:39,370
able to keep a consistent downtime but

464
00:21:36,909 --> 00:21:42,070
we can keep knocking the page offline

465
00:21:39,370 --> 00:21:44,020
online offline to the point where any

466
00:21:42,070 --> 00:21:46,899
users of the site will probably be

467
00:21:44,020 --> 00:21:48,908
ticked off and you know will complain my

468
00:21:46,900 --> 00:21:51,760
extended email to support my coil your

469
00:21:48,909 --> 00:21:54,070
support center if you have one and well

470
00:21:51,760 --> 00:21:57,760
typically not want to use your site the

471
00:21:54,070 --> 00:21:59,200
lose confidence in it another way to

472
00:21:57,760 --> 00:22:02,650
improve your rate limit to make sure

473
00:21:59,200 --> 00:22:04,480
they're more effective is to not use a

474
00:22:02,650 --> 00:22:06,549
global brain limit and that's the thing

475
00:22:04,480 --> 00:22:09,340
we've also seen as well basically

476
00:22:06,549 --> 00:22:11,500
clients will do some sort of baselining

477
00:22:09,340 --> 00:22:14,530
they'll go through that activity but the

478
00:22:11,500 --> 00:22:16,929
lonely set a limit for the entire site

479
00:22:14,530 --> 00:22:19,090
and that's kind of an issue because

480
00:22:16,929 --> 00:22:22,179
different parts of the site are used at

481
00:22:19,090 --> 00:22:24,158
different rates basically you might have

482
00:22:22,179 --> 00:22:27,280
a gate will go back to the ticket site

483
00:22:24,159 --> 00:22:28,809
where there's one page where users will

484
00:22:27,280 --> 00:22:30,280
you know refresh a bunch of clients you

485
00:22:28,809 --> 00:22:32,049
get your tickets but when they're

486
00:22:30,280 --> 00:22:32,720
logging in they'll typically only

487
00:22:32,049 --> 00:22:35,840
abstract

488
00:22:32,720 --> 00:22:37,630
page me once or twice perception and so

489
00:22:35,840 --> 00:22:40,789
there you can set an even stricter

490
00:22:37,630 --> 00:22:43,220
unlock your you can set a stricter great

491
00:22:40,789 --> 00:22:45,799
just because you know typical use will

492
00:22:43,220 --> 00:22:47,630
be very low and that will allow you to

493
00:22:45,799 --> 00:22:50,658
better protect the login page which is

494
00:22:47,630 --> 00:22:53,390
actually actually one of the more common

495
00:22:50,659 --> 00:22:56,240
targeted attacks when you do have CDN

496
00:22:53,390 --> 00:22:58,460
defenses in place because it needs to be

497
00:22:56,240 --> 00:23:01,490
processed by the origin server and so

498
00:22:58,460 --> 00:23:04,179
more stringent controls can be placed on

499
00:23:01,490 --> 00:23:06,470
it to help protect that partner I

500
00:23:04,179 --> 00:23:09,200
mentioned before that another issue is

501
00:23:06,470 --> 00:23:12,049
only setting limits at the outer

502
00:23:09,200 --> 00:23:14,390
perimeter on a CDN or wha service

503
00:23:12,049 --> 00:23:15,590
provider now you really want to enforce

504
00:23:14,390 --> 00:23:19,010
them inside all the different layers

505
00:23:15,590 --> 00:23:21,230
because of the issue of bypassing some

506
00:23:19,010 --> 00:23:24,490
of those defenses so you can do this on

507
00:23:21,230 --> 00:23:26,780
on-premise devices routers firewalls

508
00:23:24,490 --> 00:23:28,730
even in your application server like

509
00:23:26,780 --> 00:23:32,149
internet engine X you can separate them

510
00:23:28,730 --> 00:23:33,740
is bursting limits as well so if you can

511
00:23:32,150 --> 00:23:35,870
figure it out multiple different layers

512
00:23:33,740 --> 00:23:38,809
do you have a better chance to protect

513
00:23:35,870 --> 00:23:42,979
yourself and blocking out even the most

514
00:23:38,809 --> 00:23:45,980
simplest DDoS attacks finally you want

515
00:23:42,980 --> 00:23:47,690
to verify that it all works I mean if

516
00:23:45,980 --> 00:23:49,520
you put go through the motions set

517
00:23:47,690 --> 00:23:51,919
everything up spend the time put it all

518
00:23:49,520 --> 00:23:53,600
in place you want to test it you want to

519
00:23:51,919 --> 00:23:56,240
touch that it works it works as you

520
00:23:53,600 --> 00:23:59,090
expect it to and that there aren't any

521
00:23:56,240 --> 00:24:00,799
holes or you know that the rates that

522
00:23:59,090 --> 00:24:02,449
you the limits you put in place are

523
00:24:00,799 --> 00:24:09,320
actually able to protect your

524
00:24:02,450 --> 00:24:10,789
application from a DDoS attack so even

525
00:24:09,320 --> 00:24:15,620
with all those defenses we still see

526
00:24:10,789 --> 00:24:17,360
other issues some sites will allow slow

527
00:24:15,620 --> 00:24:19,309
connections and I mentioned before that

528
00:24:17,360 --> 00:24:22,580
will open you up to slow loris type of

529
00:24:19,309 --> 00:24:25,610
the times we've seen services are to

530
00:24:22,580 --> 00:24:29,090
properly and how to adjust the open file

531
00:24:25,610 --> 00:24:31,490
limits or TCP connection pool limits to

532
00:24:29,090 --> 00:24:33,409
state amount and so it's actually really

533
00:24:31,490 --> 00:24:35,960
easy to exhaust all

534
00:24:33,410 --> 00:24:39,190
mention terminal servers we've seen a

535
00:24:35,960 --> 00:24:42,980
rare case actually where the CDN

536
00:24:39,190 --> 00:24:44,930
provider would allow invalid HTTP

537
00:24:42,980 --> 00:24:47,810
requests we are trying to do a slow

538
00:24:44,930 --> 00:24:51,170
loris or slow post type of attack where

539
00:24:47,810 --> 00:24:53,480
we send a post request but we never read

540
00:24:51,170 --> 00:24:54,980
neverend request on our end instead the

541
00:24:53,480 --> 00:24:57,770
CDN provider and close the connection

542
00:24:54,980 --> 00:25:00,140
and what we saw was happening was that

543
00:24:57,770 --> 00:25:02,000
it would actually forward that request

544
00:25:00,140 --> 00:25:04,430
back to the origin server anyways

545
00:25:02,000 --> 00:25:06,650
despite of being invalid or just like us

546
00:25:04,430 --> 00:25:08,480
than for completing it and the origin

547
00:25:06,650 --> 00:25:12,200
server would process it and we were able

548
00:25:08,480 --> 00:25:15,860
to effectively bypass the CDN through

549
00:25:12,200 --> 00:25:17,420
that post attack we've also seen servers

550
00:25:15,860 --> 00:25:19,729
with memory issues and this can be on

551
00:25:17,420 --> 00:25:22,130
more in the application side where your

552
00:25:19,730 --> 00:25:25,030
application and either has a memory or

553
00:25:22,130 --> 00:25:27,410
certain operations of memory hogs and

554
00:25:25,030 --> 00:25:29,300
you know if we hated numerous amounts of

555
00:25:27,410 --> 00:25:33,410
times not even sa the huge amounts of

556
00:25:29,300 --> 00:25:35,389
times we can still cause it to use a way

557
00:25:33,410 --> 00:25:37,130
too much memory and have the OS actually

558
00:25:35,390 --> 00:25:39,230
respect the process taking down for a

559
00:25:37,130 --> 00:25:41,120
few seconds we just sort of repeat that

560
00:25:39,230 --> 00:25:43,730
to keep taking it down over and over

561
00:25:41,120 --> 00:25:50,000
again to really really destroy the

562
00:25:43,730 --> 00:25:51,860
usability of the application so even

563
00:25:50,000 --> 00:25:53,720
with all these defenses in place let's

564
00:25:51,860 --> 00:25:55,959
say you've verified they'll work your

565
00:25:53,720 --> 00:25:59,540
rate limits are good they're adequate

566
00:25:55,960 --> 00:26:01,430
what can you do to actually helped you

567
00:25:59,540 --> 00:26:04,580
know bolster your defenses improve your

568
00:26:01,430 --> 00:26:06,380
defenses and you can look into building

569
00:26:04,580 --> 00:26:09,260
a buddy to the center building a better

570
00:26:06,380 --> 00:26:12,050
application through either it's more

571
00:26:09,260 --> 00:26:17,000
efficient or just certain designs will

572
00:26:12,050 --> 00:26:20,350
help your defense is protected so with

573
00:26:17,000 --> 00:26:26,030
the CIA in place your major issue now is

574
00:26:20,350 --> 00:26:29,500
dynamic requests so they give you issues

575
00:26:26,030 --> 00:26:31,760
you can't control them simply because

576
00:26:29,500 --> 00:26:34,669
they need to be sent to your origin

577
00:26:31,760 --> 00:26:36,710
server your server needs to process it

578
00:26:34,669 --> 00:26:39,889
and these are pages like logging pages

579
00:26:36,710 --> 00:26:41,960
where user will send credentials that a

580
00:26:39,889 --> 00:26:45,080
database needs to be interacted with to

581
00:26:41,960 --> 00:26:47,119
verify them search pages for any sort of

582
00:26:45,080 --> 00:26:50,480
story content on your server or in

583
00:26:47,119 --> 00:26:52,428
another database authenticated pages

584
00:26:50,480 --> 00:26:54,019
typically you don't want to catch those

585
00:26:52,429 --> 00:26:56,600
there's actually a recent issue with

586
00:26:54,019 --> 00:26:59,869
steam when they were under in Jos attack

587
00:26:56,600 --> 00:27:02,539
they enable they made some tweaks to

588
00:26:59,869 --> 00:27:04,939
their CDN pages or CDN configuration

589
00:27:02,539 --> 00:27:07,850
which caused authenticated pages to be

590
00:27:04,940 --> 00:27:09,590
patched and served to other users so

591
00:27:07,850 --> 00:27:11,809
that was a huge issue for them because

592
00:27:09,590 --> 00:27:14,359
it was actually leaking leaking other

593
00:27:11,809 --> 00:27:18,499
user details just because those pages

594
00:27:14,359 --> 00:27:20,090
were cashed and any foreign submission

595
00:27:18,499 --> 00:27:22,519
will also need to be processed by over

596
00:27:20,090 --> 00:27:24,799
it's over and these types of pages are

597
00:27:22,519 --> 00:27:26,119
the main target for ddos attacks it's

598
00:27:24,799 --> 00:27:28,429
what we look for when we're doing

599
00:27:26,119 --> 00:27:30,439
engagement anything that will allow us

600
00:27:28,429 --> 00:27:34,070
to send traffic to or caused some sort

601
00:27:30,440 --> 00:27:36,859
of processing on the origin server so

602
00:27:34,070 --> 00:27:38,749
what can you do to help you know reduce

603
00:27:36,859 --> 00:27:42,678
the impact of these dynamic requests so

604
00:27:38,749 --> 00:27:46,100
reduce the impact of DDoS attack you can

605
00:27:42,679 --> 00:27:47,899
try to make things more static you want

606
00:27:46,100 --> 00:27:50,059
to make things as static as possible in

607
00:27:47,899 --> 00:27:52,939
the application specifically i'm talking

608
00:27:50,059 --> 00:27:55,580
about websites here so you want to

609
00:27:52,940 --> 00:27:58,899
abstract as much of the site structure

610
00:27:55,580 --> 00:28:01,639
into some sort of capital format and

611
00:27:58,899 --> 00:28:03,590
make it easily catchable by UC game

612
00:28:01,639 --> 00:28:07,248
provider so that'll be things like your

613
00:28:03,590 --> 00:28:10,580
JavaScript your CSS any HTML these are

614
00:28:07,249 --> 00:28:14,840
all typically static and can be cached

615
00:28:10,580 --> 00:28:16,460
and you know any time you use requested

616
00:28:14,840 --> 00:28:19,488
it'll be served by ucen by the

617
00:28:16,460 --> 00:28:22,909
infrastructure even if you if you're

618
00:28:19,489 --> 00:28:25,369
using a front-end template engine to

619
00:28:22,909 --> 00:28:28,580
rendering dynamic pages that can easily

620
00:28:25,369 --> 00:28:31,939
be cash to and again reduce the load

621
00:28:28,580 --> 00:28:34,460
that your urgent has the process another

622
00:28:31,940 --> 00:28:35,530
thing you want to do is consider how

623
00:28:34,460 --> 00:28:38,260
dynamic you

624
00:28:35,530 --> 00:28:40,030
actually is if you're aggregating news

625
00:28:38,260 --> 00:28:43,300
results from various different sources

626
00:28:40,030 --> 00:28:46,330
or something like that you might not

627
00:28:43,300 --> 00:28:48,700
actually update that let's say you only

628
00:28:46,330 --> 00:28:50,439
updated every 30 minutes something like

629
00:28:48,700 --> 00:28:52,780
that can still be cash for that 30

630
00:28:50,440 --> 00:28:55,120
minutes where it's never updated and you

631
00:28:52,780 --> 00:28:57,970
can actually configure your CDN to

632
00:28:55,120 --> 00:29:00,820
invalidate that page after you know

633
00:28:57,970 --> 00:29:03,820
whatever time for install then it's

634
00:29:00,820 --> 00:29:05,830
valid for and the next request for that

635
00:29:03,820 --> 00:29:08,080
page will cause a CDN to make a single

636
00:29:05,830 --> 00:29:11,620
request here infrastructure and update

637
00:29:08,080 --> 00:29:15,460
its own cash in that case if the US is

638
00:29:11,620 --> 00:29:17,919
happy you it will only result in you

639
00:29:15,460 --> 00:29:20,920
know a thousand note sending requests to

640
00:29:17,920 --> 00:29:23,140
that one supposedly that edit card will

641
00:29:20,920 --> 00:29:25,030
only actually results in a single

642
00:29:23,140 --> 00:29:27,310
requests every 30 minutes d origin

643
00:29:25,030 --> 00:29:29,920
infrastructure so again the cen is

644
00:29:27,310 --> 00:29:32,139
taking the impact of load of the DDoS

645
00:29:29,920 --> 00:29:37,330
attack and keep your site and

646
00:29:32,140 --> 00:29:40,600
application up and running another thing

647
00:29:37,330 --> 00:29:43,629
you want to do is limit interactions so

648
00:29:40,600 --> 00:29:45,909
pages where either those form

649
00:29:43,630 --> 00:29:48,460
submissions and logging pages you want

650
00:29:45,910 --> 00:29:51,160
to be able to limit how many times a

651
00:29:48,460 --> 00:29:53,590
user can submit to it through the actual

652
00:29:51,160 --> 00:29:56,170
application and this is for the case

653
00:29:53,590 --> 00:29:58,899
where if you have a login page the

654
00:29:56,170 --> 00:30:00,970
actual process of connecting to the

655
00:29:58,900 --> 00:30:03,670
database and verifying those credentials

656
00:30:00,970 --> 00:30:05,920
to be resource intensive so if I school

657
00:30:03,670 --> 00:30:08,680
the final attack when I'm still sending

658
00:30:05,920 --> 00:30:10,450
three requests recycling let's say it

659
00:30:08,680 --> 00:30:13,270
could still be enough of the load from a

660
00:30:10,450 --> 00:30:15,460
thousand different servers or tackling

661
00:30:13,270 --> 00:30:17,410
agents to knock your application on

662
00:30:15,460 --> 00:30:19,990
flying or even not be dying so choked up

663
00:30:17,410 --> 00:30:26,350
your database and that kind of behavior

664
00:30:19,990 --> 00:30:28,300
is stall you know not typical and might

665
00:30:26,350 --> 00:30:30,040
be blocked by CN funds for the game you

666
00:30:28,300 --> 00:30:33,070
want to have multiple layers just in

667
00:30:30,040 --> 00:30:33,659
case it's somehow bypassed or whatever

668
00:30:33,070 --> 00:30:38,070
rate

669
00:30:33,660 --> 00:30:40,230
you put in place isn't you know if the

670
00:30:38,070 --> 00:30:42,570
if I can fly under it you still have

671
00:30:40,230 --> 00:30:45,720
some sort of protection and so what you

672
00:30:42,570 --> 00:30:47,790
want to do with these limiting

673
00:30:45,720 --> 00:30:50,330
interactions is probably using our

674
00:30:47,790 --> 00:30:54,030
method you already use and things like

675
00:30:50,330 --> 00:30:57,659
sessions or cookies to help block out

676
00:30:54,030 --> 00:31:00,300
more simple botnet attacks but that's

677
00:30:57,660 --> 00:31:02,190
like that can't store cookies and send

678
00:31:00,300 --> 00:31:03,840
them on subsequent requests will not be

679
00:31:02,190 --> 00:31:08,460
able to interact with that specific page

680
00:31:03,840 --> 00:31:10,949
if you validate the cookies first before

681
00:31:08,460 --> 00:31:13,770
any sort of other processing happens the

682
00:31:10,950 --> 00:31:15,540
next step up is using csrf tokens which

683
00:31:13,770 --> 00:31:19,350
you should already be doing especially

684
00:31:15,540 --> 00:31:21,960
for for submission pages these block

685
00:31:19,350 --> 00:31:24,389
endings sort of botany tags that cannot

686
00:31:21,960 --> 00:31:25,980
do any sort of HTML parsing because it

687
00:31:24,390 --> 00:31:29,100
can't parse out that token out of the

688
00:31:25,980 --> 00:31:31,380
page the next step up and this will

689
00:31:29,100 --> 00:31:32,909
block a lot of majority of you gossip

690
00:31:31,380 --> 00:31:35,130
acts out there except the most advanced

691
00:31:32,910 --> 00:31:37,560
ones is using javascript cookies and

692
00:31:35,130 --> 00:31:40,410
this is actually what a lot of Geass

693
00:31:37,560 --> 00:31:42,360
defense providers use themselves as a

694
00:31:40,410 --> 00:31:44,180
sort of challenge they'll inject the

695
00:31:42,360 --> 00:31:47,070
snippet of JavaScript into your page

696
00:31:44,180 --> 00:31:50,010
which will run all in the clients

697
00:31:47,070 --> 00:31:51,899
computer set some sort of cookie or some

698
00:31:50,010 --> 00:31:54,330
sort of value and return it on the next

699
00:31:51,900 --> 00:31:56,550
request and that validates that you know

700
00:31:54,330 --> 00:31:58,649
the clients running a legitimate browser

701
00:31:56,550 --> 00:32:05,430
or at least something that can process

702
00:31:58,650 --> 00:32:07,650
JavaScript another other tools you can

703
00:32:05,430 --> 00:32:09,960
use on any sort of energy on occasion

704
00:32:07,650 --> 00:32:12,270
controls so another example is actually

705
00:32:09,960 --> 00:32:14,370
capture and it somebody else defense

706
00:32:12,270 --> 00:32:15,600
providers use that too but kind of as a

707
00:32:14,370 --> 00:32:18,449
last set because they're not is

708
00:32:15,600 --> 00:32:20,639
user-friendly even Google uses is to

709
00:32:18,450 --> 00:32:23,130
some degree when made too many search

710
00:32:20,640 --> 00:32:24,780
requests on their page the presenting of

711
00:32:23,130 --> 00:32:26,700
the capture just embarr fly that you're

712
00:32:24,780 --> 00:32:32,610
not actually a ball so you're not using

713
00:32:26,700 --> 00:32:35,940
their infrastructure another thing to

714
00:32:32,610 --> 00:32:38,810
consider is how scalable is your

715
00:32:35,940 --> 00:32:41,310
application you might not need

716
00:32:38,810 --> 00:32:45,419
depending on your user base and things

717
00:32:41,310 --> 00:32:47,399
like that but you still want to design

718
00:32:45,420 --> 00:32:50,520
your application so lets you know if you

719
00:32:47,400 --> 00:32:53,160
do if you are receiving very high load

720
00:32:50,520 --> 00:32:56,010
for traffic you can scale up to kind of

721
00:32:53,160 --> 00:32:58,230
absorb that impact and you know this

722
00:32:56,010 --> 00:32:59,310
will help you in cases where there's

723
00:32:58,230 --> 00:33:02,490
some sort of hole and your other

724
00:32:59,310 --> 00:33:04,590
defenses or even just some of the delay

725
00:33:02,490 --> 00:33:06,270
that exists between when you get

726
00:33:04,590 --> 00:33:07,889
attacked and when your defenses are

727
00:33:06,270 --> 00:33:10,230
actually able to fully scrub out that

728
00:33:07,890 --> 00:33:13,620
attack and with some of our nation's

729
00:33:10,230 --> 00:33:16,500
you've actually seen times of up to 45

730
00:33:13,620 --> 00:33:19,379
minutes where we started an attack took

731
00:33:16,500 --> 00:33:22,950
down the site and it took the day off

732
00:33:19,380 --> 00:33:24,720
the fence provider 45 minutes to run a

733
00:33:22,950 --> 00:33:26,910
custom role that will filter out the

734
00:33:24,720 --> 00:33:30,690
traffic and then slowly roll that up to

735
00:33:26,910 --> 00:33:33,450
all of their edge nodes so in that time

736
00:33:30,690 --> 00:33:35,820
you have downtime and while they're

737
00:33:33,450 --> 00:33:39,360
mitigating its soul it's a small roll

738
00:33:35,820 --> 00:33:41,909
out and so you're still taking depending

739
00:33:39,360 --> 00:33:44,300
on size of the office attack a huge hit

740
00:33:41,910 --> 00:33:44,300
from it

741
00:33:52,130 --> 00:33:58,830
from that AWS actually believes them a

742
00:33:56,580 --> 00:33:59,970
white paper recently for when you're

743
00:33:58,830 --> 00:34:02,669
running applications on their

744
00:33:59,970 --> 00:34:04,290
infrastructure where they're

745
00:34:02,670 --> 00:34:08,010
recommending defense against ddos

746
00:34:04,290 --> 00:34:10,168
attacks is to actually use the elastic

747
00:34:08,010 --> 00:34:12,720
Beanstalk service and the elastic

748
00:34:10,168 --> 00:34:14,310
restart service will dynamically scale

749
00:34:12,719 --> 00:34:19,199
out your application by setting up

750
00:34:14,310 --> 00:34:20,880
additional VMs that'll actually be both

751
00:34:19,199 --> 00:34:23,939
balance and during a little balancer and

752
00:34:20,880 --> 00:34:29,010
do some of the processing and spread up

753
00:34:23,940 --> 00:34:31,770
that look this is kind of kind of not

754
00:34:29,010 --> 00:34:33,960
defense coming from AWS because right

755
00:34:31,770 --> 00:34:35,699
away implies up there there d das

756
00:34:33,960 --> 00:34:37,500
appliances to just pay for more their

757
00:34:35,699 --> 00:34:41,460
infrastructure and they make more money

758
00:34:37,500 --> 00:34:43,320
obviously but really just ensuring you

759
00:34:41,460 --> 00:34:45,810
have some sort of dynamics dynamic

760
00:34:43,320 --> 00:34:47,550
scaling will make it more cost effective

761
00:34:45,810 --> 00:34:49,199
so that only why do I directed office

762
00:34:47,550 --> 00:34:50,280
attack you're actually being attacked

763
00:34:49,199 --> 00:34:52,500
you don't just have tons of

764
00:34:50,280 --> 00:34:54,750
infrastructure lying around that most

765
00:34:52,500 --> 00:34:57,480
the time is 13 ugly there's even the

766
00:34:54,750 --> 00:35:00,570
concept of hybrid standing where you

767
00:34:57,480 --> 00:35:03,650
have physical machines in your data

768
00:35:00,570 --> 00:35:06,540
center and when loads get too high

769
00:35:03,650 --> 00:35:08,120
either through DNS or other methods will

770
00:35:06,540 --> 00:35:11,310
actually start splitting that load

771
00:35:08,120 --> 00:35:13,890
between auto scaling infrastructure in

772
00:35:11,310 --> 00:35:15,810
the cloud and you're only on site

773
00:35:13,890 --> 00:35:18,629
infrastructure and in that case you can

774
00:35:15,810 --> 00:35:20,640
stall see some cost saving from under

775
00:35:18,630 --> 00:35:26,130
your own infrastructure and again only

776
00:35:20,640 --> 00:35:28,350
scale up to the cloud needed so if you

777
00:35:26,130 --> 00:35:30,630
dos attacks are not just an a problem if

778
00:35:28,350 --> 00:35:33,810
your application can be easily taken

779
00:35:30,630 --> 00:35:34,880
down it becomes everyone's problem you

780
00:35:33,810 --> 00:35:37,080
want to make sure that you're actually

781
00:35:34,880 --> 00:35:39,920
testing defenses you put in place

782
00:35:37,080 --> 00:35:43,049
because any sort of small issue

783
00:35:39,920 --> 00:35:45,180
configuration issue or any overlooked

784
00:35:43,050 --> 00:35:46,170
part of the defense could result in a

785
00:35:45,180 --> 00:35:50,790
DDoS attack

786
00:35:46,170 --> 00:35:52,319
and that could actually cost you tons of

787
00:35:50,790 --> 00:35:54,470
money depending on what your application

788
00:35:52,319 --> 00:35:54,470
does

789
00:35:55,990 --> 00:36:01,970
engines revving we're in retail stores

790
00:35:58,780 --> 00:36:04,550
any online store if they're down there

791
00:36:01,970 --> 00:36:06,470
losing revenue so you want to make sure

792
00:36:04,550 --> 00:36:08,660
that all of you defenses are tested and

793
00:36:06,470 --> 00:36:10,100
not just tested a single time when you

794
00:36:08,660 --> 00:36:12,080
put them in place you want to

795
00:36:10,100 --> 00:36:14,150
continuously test test as you make

796
00:36:12,080 --> 00:36:16,490
changes test if anything in your

797
00:36:14,150 --> 00:36:19,340
infrastructure changes or even just over

798
00:36:16,490 --> 00:36:21,109
time to make sure that I like you people

799
00:36:19,340 --> 00:36:23,630
and your processes that are handling

800
00:36:21,110 --> 00:36:25,400
these DDoS attacks are our training they

801
00:36:23,630 --> 00:36:26,470
can recognize the dasa time it's

802
00:36:25,400 --> 00:36:28,520
actually something we've seen before

803
00:36:26,470 --> 00:36:31,279
where we've launched at the office

804
00:36:28,520 --> 00:36:33,730
attack but the people responsible for

805
00:36:31,280 --> 00:36:35,990
monitoring and defending infrastructure

806
00:36:33,730 --> 00:36:36,950
they didn't recognize it they just

807
00:36:35,990 --> 00:36:39,470
started with some sort of application

808
00:36:36,950 --> 00:36:41,509
issue and it took them actually a week

809
00:36:39,470 --> 00:36:44,299
and a half to realize that it was

810
00:36:41,510 --> 00:36:46,400
probably a DDoS attack and like

811
00:36:44,300 --> 00:36:48,440
obviously a week and a half later is too

812
00:36:46,400 --> 00:36:52,220
late for them to start putting defenses

813
00:36:48,440 --> 00:36:56,360
in place so you want to continuously

814
00:36:52,220 --> 00:36:58,370
test and verify so that again your staff

815
00:36:56,360 --> 00:36:59,960
is trained they can recognize it and

816
00:36:58,370 --> 00:37:02,359
that your processes make sense and

817
00:36:59,960 --> 00:37:07,370
actually able to help you recover from

818
00:37:02,360 --> 00:37:09,250
those kinds of attacks so I'd like to

819
00:37:07,370 --> 00:37:10,970
thank you all for listening to me

820
00:37:09,250 --> 00:37:12,350
hopefully you've been able to take

821
00:37:10,970 --> 00:37:15,140
something away from it to help protect

822
00:37:12,350 --> 00:37:16,880
yourself against ddos attacks because if

823
00:37:15,140 --> 00:37:30,319
you have experience in detox attack i

824
00:37:16,880 --> 00:37:44,330
might be coming for you thank you thanks

825
00:37:30,320 --> 00:37:50,890
my god that's for the question level

826
00:37:44,330 --> 00:37:50,890
this is ripped it just a sec is common

827
00:37:51,310 --> 00:37:59,360
all right just a small question for you

828
00:37:55,630 --> 00:38:01,760
during christmas from amazon.com you

829
00:37:59,360 --> 00:38:04,670
have a lot of a lot of connections the

830
00:38:01,760 --> 00:38:06,980
same time and if you have someone who is

831
00:38:04,670 --> 00:38:09,250
using a botnet you will have a lot of

832
00:38:06,980 --> 00:38:11,740
concurrent connections same time

833
00:38:09,250 --> 00:38:14,860
though the rate limits are not working

834
00:38:11,740 --> 00:38:16,509
at that moment because your application

835
00:38:14,860 --> 00:38:19,030
is highly used it's two weeks before

836
00:38:16,510 --> 00:38:23,830
Christmas so how can you detect if it's

837
00:38:19,030 --> 00:38:26,650
a pity baby DOS attack I sooner we'll

838
00:38:23,830 --> 00:38:29,799
hang on your application some of the

839
00:38:26,650 --> 00:38:33,250
more advanced detox defenses will detect

840
00:38:29,800 --> 00:38:35,650
some sort of behavioral some sort of

841
00:38:33,250 --> 00:38:38,380
behavioral pattern for how the sites

842
00:38:35,650 --> 00:38:40,900
actually use so that will involve you

843
00:38:38,380 --> 00:38:43,720
know if you have multi page application

844
00:38:40,900 --> 00:38:45,640
where the logical order of H could be

845
00:38:43,720 --> 00:38:49,509
you know going to the home page or use

846
00:38:45,640 --> 00:38:51,910
login page going to another finish and

847
00:38:49,510 --> 00:38:54,700
you sort of malicious user that is just

848
00:38:51,910 --> 00:38:57,520
hitting a single page over and over will

849
00:38:54,700 --> 00:38:59,859
be identified as fishs or something and

850
00:38:57,520 --> 00:39:06,970
in that case you can detect them in that

851
00:38:59,860 --> 00:39:08,710
way again if you notice like you with

852
00:39:06,970 --> 00:39:11,589
specifically Amazon you can get

853
00:39:08,710 --> 00:39:13,300
notifications about when your

854
00:39:11,590 --> 00:39:15,430
infrastructure is scaling out because

855
00:39:13,300 --> 00:39:18,490
you know these concurrent connections or

856
00:39:15,430 --> 00:39:21,129
usages and from there you're staffel off

857
00:39:18,490 --> 00:39:23,109
to any staff involved in your software

858
00:39:21,130 --> 00:39:25,060
that are responsible for mitigating the

859
00:39:23,110 --> 00:39:28,000
attack could potentially take a closer

860
00:39:25,060 --> 00:39:30,400
look and you know hopefully they can

861
00:39:28,000 --> 00:39:32,560
recognize that there might be some sort

862
00:39:30,400 --> 00:39:34,630
of you know hit put it to the also time

863
00:39:32,560 --> 00:39:37,570
it really depends how sophisticated the

864
00:39:34,630 --> 00:39:40,840
DDoS attack is as well only the most

865
00:39:37,570 --> 00:39:43,210
sophisticated attacks well you know

866
00:39:40,840 --> 00:39:44,920
bypass all of those controls so a lot of

867
00:39:43,210 --> 00:39:48,750
the time five percent of the attacks of

868
00:39:44,920 --> 00:39:51,670
C will be basic or simple in nature

869
00:39:48,750 --> 00:39:54,160
rolla just you know request same page

870
00:39:51,670 --> 00:39:56,890
over and over again and in that case you

871
00:39:54,160 --> 00:39:59,399
might might be able to detect it despite

872
00:39:56,890 --> 00:39:59,400
what the right

873
00:40:00,440 --> 00:40:13,560
thank you any other question good thanks

874
00:40:09,750 --> 00:40:17,480
again Michael and uh was a great

875
00:40:13,560 --> 00:40:17,480
presentation so I'll talk to you soon

