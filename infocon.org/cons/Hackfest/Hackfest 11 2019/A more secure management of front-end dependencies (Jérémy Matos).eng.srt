1
00:00:00,050 --> 00:00:03,689
so good afternoon everyone can you hear

2
00:00:03,689 --> 00:00:04,620
me fine

3
00:00:04,620 --> 00:00:07,799
yeah sure so my name is Jeremy Moto's

4
00:00:07,799 --> 00:00:09,900
I'm French but I would do this talk in

5
00:00:09,900 --> 00:00:11,580
English because it was announced in

6
00:00:11,580 --> 00:00:14,580
English sorry for people who wanted

7
00:00:14,580 --> 00:00:18,570
French so I used to be a developer and

8
00:00:18,570 --> 00:00:21,630
about 10 years ago I started doing like

9
00:00:21,630 --> 00:00:27,680
100% upset I used to have my own company

10
00:00:27,680 --> 00:00:30,869
so if you search on Google centering

11
00:00:30,869 --> 00:00:34,050
gaps you find several talks about it and

12
00:00:34,050 --> 00:00:38,070
I join in gitlab six months ago so I was

13
00:00:38,070 --> 00:00:42,690
really happy to do so I'm also coach

14
00:00:42,690 --> 00:00:45,180
chapter leader at Ava's Geneva and I

15
00:00:45,180 --> 00:00:47,309
used to organize a security conference

16
00:00:47,309 --> 00:00:52,289
in Switzerland so we are going to talk

17
00:00:52,289 --> 00:00:55,559
about management of we have front-end

18
00:00:55,559 --> 00:00:57,210
dependencies so basically in your web

19
00:00:57,210 --> 00:00:59,309
application when you include third-party

20
00:00:59,309 --> 00:01:03,510
Java scripts from what I've seen in many

21
00:01:03,510 --> 00:01:05,610
organizations when they care about

22
00:01:05,610 --> 00:01:07,770
application security which is not that

23
00:01:07,770 --> 00:01:11,939
often for them application security is

24
00:01:11,939 --> 00:01:13,680
really you have to do stuff on the

25
00:01:13,680 --> 00:01:17,189
backhand side because well you know

26
00:01:17,189 --> 00:01:19,770
input validation is because of that you

27
00:01:19,770 --> 00:01:22,369
get XSS and all this kind of stuff well

28
00:01:22,369 --> 00:01:25,110
so fix is you have to do something well

29
00:01:25,110 --> 00:01:27,509
server-side when you have permission

30
00:01:27,509 --> 00:01:29,640
issues well you have to fix it

31
00:01:29,640 --> 00:01:32,640
server-side because otherwise people can

32
00:01:32,640 --> 00:01:34,979
cheats when you have SQL injection

33
00:01:34,979 --> 00:01:36,329
issues well you have to fix it

34
00:01:36,329 --> 00:01:38,400
server-side because you have to do

35
00:01:38,400 --> 00:01:42,810
people statements so that's for let's

36
00:01:42,810 --> 00:01:45,060
say the fixing part as a security

37
00:01:45,060 --> 00:01:49,259
analyst also I admit personally you know

38
00:01:49,259 --> 00:01:51,329
when you have to review thousands of

39
00:01:51,329 --> 00:01:52,979
lines of code you tend to ignore

40
00:01:52,979 --> 00:01:54,990
everything has happened in a front-end

41
00:01:54,990 --> 00:01:56,579
layer everything that's why could you

42
00:01:56,579 --> 00:01:59,280
say well that may be the dirty thing

43
00:01:59,280 --> 00:02:01,680
there but do you really care because

44
00:02:01,680 --> 00:02:03,960
what's important is what is done in the

45
00:02:03,960 --> 00:02:06,149
backend because if everything has been

46
00:02:06,149 --> 00:02:07,770
implemented in the backend correctly

47
00:02:07,770 --> 00:02:11,008
also checks we should be fine and I

48
00:02:11,008 --> 00:02:13,458
think that's

49
00:02:13,500 --> 00:02:15,390
get this impression that ya are only

50
00:02:15,390 --> 00:02:17,250
back in security matters because yeah

51
00:02:17,250 --> 00:02:20,460
it's well she'll never trust what

52
00:02:20,460 --> 00:02:22,980
happens and what comes from the client

53
00:02:22,980 --> 00:02:24,870
because everything can be manipulated so

54
00:02:24,870 --> 00:02:27,620
people really tend to believe that

55
00:02:27,620 --> 00:02:30,180
everything should be addressed on the

56
00:02:30,180 --> 00:02:33,050
back end but but it's wrong because

57
00:02:33,050 --> 00:02:36,110
browsers have implemented a really

58
00:02:36,110 --> 00:02:39,690
complex but strong web security model so

59
00:02:39,690 --> 00:02:42,150
you cannot do anything from let's say

60
00:02:42,150 --> 00:02:43,020
your website

61
00:02:43,020 --> 00:02:45,540
err you cannot do whatever you want and

62
00:02:45,540 --> 00:02:51,090
a browser as many controls and on top of

63
00:02:51,090 --> 00:02:54,150
that now so if you are building a web

64
00:02:54,150 --> 00:02:56,360
application and you want some nice UI

65
00:02:56,360 --> 00:02:58,830
you have to include third-party

66
00:02:58,830 --> 00:03:01,320
dependencies so you need JavaScript

67
00:03:01,320 --> 00:03:03,239
libraries you need JavaScript frameworks

68
00:03:03,239 --> 00:03:05,550
and you also need content delivery

69
00:03:05,550 --> 00:03:08,940
networks to cache source JavaScript so

70
00:03:08,940 --> 00:03:10,950
that the first time the user comes it

71
00:03:10,950 --> 00:03:12,930
doesn't take edges to load like maybe

72
00:03:12,930 --> 00:03:17,880
five megabytes of JavaScript so for me

73
00:03:17,880 --> 00:03:20,430
what it mean it means that front-end

74
00:03:20,430 --> 00:03:22,769
security is getting a bigger and bigger

75
00:03:22,769 --> 00:03:25,380
concern and we tend to forget it

76
00:03:25,380 --> 00:03:28,459
and which we will see why with two

77
00:03:28,459 --> 00:03:31,560
thousand cases what can go wrong if you

78
00:03:31,560 --> 00:03:35,340
don't really care about it and sometimes

79
00:03:35,340 --> 00:03:37,560
I have question I say minima my

80
00:03:37,560 --> 00:03:39,690
organization yeah this cannot happen

81
00:03:39,690 --> 00:03:41,850
because we have a full stack that we

82
00:03:41,850 --> 00:03:43,530
have full stack developer of who stuck

83
00:03:43,530 --> 00:03:45,150
to me no it doesn't mean that you know

84
00:03:45,150 --> 00:03:47,190
front-end security doesn't mean that you

85
00:03:47,190 --> 00:03:48,600
do everything doesn't mean that you do

86
00:03:48,600 --> 00:03:51,480
everything well so still reply for you

87
00:03:51,480 --> 00:03:55,700
if you are full stack developer so now

88
00:03:55,700 --> 00:04:00,269
let's discuss with ya - real packing

89
00:04:00,269 --> 00:04:05,459
cases Ticketmaster and British Airways

90
00:04:05,459 --> 00:04:09,299
and see what went wrong and I would

91
00:04:09,299 --> 00:04:12,030
could have been improved because many

92
00:04:12,030 --> 00:04:14,579
time in security conference especially

93
00:04:14,579 --> 00:04:17,548
when you're when there is a CTF you have

94
00:04:17,548 --> 00:04:19,649
billion people that are able to break

95
00:04:19,649 --> 00:04:23,370
stuff to AK into it but as an engineer

96
00:04:23,370 --> 00:04:27,300
the former developer for me

97
00:04:27,300 --> 00:04:29,550
inyoung you get like a pessimistic

98
00:04:29,550 --> 00:04:31,259
feeling at the end of those conference

99
00:04:31,259 --> 00:04:33,090
because you know well basically everyone

100
00:04:33,090 --> 00:04:35,129
can break everything and then what do we

101
00:04:35,129 --> 00:04:41,490
do with that how do we fix it so we will

102
00:04:41,490 --> 00:04:43,699
see some solutions so I don't claim

103
00:04:43,699 --> 00:04:45,870
after that you will be able to fix

104
00:04:45,870 --> 00:04:49,409
everything but at least have have some

105
00:04:49,409 --> 00:04:51,449
knowledge of how you can improve it and

106
00:04:51,449 --> 00:04:54,599
improve it efficiently at the end we

107
00:04:54,599 --> 00:04:56,909
have a Q&A session and I'd be happy to

108
00:04:56,909 --> 00:04:58,470
discuss openly with you or how you

109
00:04:58,470 --> 00:05:01,560
manage it and maybe you have good ideas

110
00:05:01,560 --> 00:05:04,199
to share so something that form is

111
00:05:04,199 --> 00:05:06,240
really missing in the security industry

112
00:05:06,240 --> 00:05:09,719
is really sharing your best practices

113
00:05:09,719 --> 00:05:12,120
concerning application security there is

114
00:05:12,120 --> 00:05:13,620
not really a good book on what you

115
00:05:13,620 --> 00:05:14,610
should do

116
00:05:14,610 --> 00:05:17,009
you just have many many talks I say one

117
00:05:17,009 --> 00:05:20,340
what you should not do so let's discuss

118
00:05:20,340 --> 00:05:23,340
again and see if we can share best

119
00:05:23,340 --> 00:05:27,080
practices around it so first guess

120
00:05:27,080 --> 00:05:30,900
ticketmaster last cure we had to

121
00:05:30,900 --> 00:05:33,389
disclose in June that credit card data

122
00:05:33,389 --> 00:05:38,250
of around 40,000 users had been nixed

123
00:05:38,250 --> 00:05:42,300
mostly UK customers and it was not clear

124
00:05:42,300 --> 00:05:44,520
in the communication and maybe because

125
00:05:44,520 --> 00:05:46,830
what not hear from them if the leaks

126
00:05:46,830 --> 00:05:48,810
happening you know it had started in

127
00:05:48,810 --> 00:05:53,370
February so they did a forensic study

128
00:05:53,370 --> 00:05:56,099
and conclusions were really interesting

129
00:05:56,099 --> 00:06:00,360
because Ticketmaster database was not

130
00:06:00,360 --> 00:06:01,159
stolen

131
00:06:01,159 --> 00:06:03,900
in fact Ticketmaster was not react

132
00:06:03,900 --> 00:06:06,449
directly and the payment processor was

133
00:06:06,449 --> 00:06:09,539
not act so they had credit card data in

134
00:06:09,539 --> 00:06:11,969
the while but not coming from the

135
00:06:11,969 --> 00:06:14,219
database not coming from the payment

136
00:06:14,219 --> 00:06:16,500
processor but the confusion is that yeah

137
00:06:16,500 --> 00:06:19,259
it's been stolen by JavaScript that was

138
00:06:19,259 --> 00:06:22,050
ousted by a third party so what's really

139
00:06:22,050 --> 00:06:23,340
interesting there is that world

140
00:06:23,340 --> 00:06:25,289
Ticketmaster of course they have to

141
00:06:25,289 --> 00:06:26,759
handle credit card data so they have

142
00:06:26,759 --> 00:06:30,270
there are PCI DSS compliant so as a show

143
00:06:30,270 --> 00:06:33,210
and they do we have to do good security

144
00:06:33,210 --> 00:06:36,719
to achieve this certification but what

145
00:06:36,719 --> 00:06:39,029
we will see is totally out of cope of

146
00:06:39,029 --> 00:06:41,169
this certification

147
00:06:41,169 --> 00:06:43,990
because it's something that the

148
00:06:43,990 --> 00:06:47,819
regulators have not thought about so

149
00:06:47,819 --> 00:06:55,060
let's see more details so so there's a

150
00:06:55,060 --> 00:06:56,979
third party in the loop the third party

151
00:06:56,979 --> 00:06:59,499
is called inventor I'm not blaming them

152
00:06:59,499 --> 00:07:02,740
so it's it's a Spanish company they are

153
00:07:02,740 --> 00:07:08,469
doing AI stuff for marketing and what he

154
00:07:08,469 --> 00:07:10,650
did they made a custom JavaScript

155
00:07:10,650 --> 00:07:12,849
specifically for Ticketmaster because

156
00:07:12,849 --> 00:07:17,199
they wanted to not know yet whatever

157
00:07:17,199 --> 00:07:19,750
marketing data for Ticketmaster and

158
00:07:19,750 --> 00:07:21,669
Ticketmaster believe that this company

159
00:07:21,669 --> 00:07:24,279
could provide them useful insight and

160
00:07:24,279 --> 00:07:26,379
Indian what happened is that this

161
00:07:26,379 --> 00:07:29,740
JavaScript tailor-made for Ticketmaster

162
00:07:29,740 --> 00:07:32,740
but not returned by Ticketmaster was

163
00:07:32,740 --> 00:07:36,639
directly hosted I have not only be

164
00:07:36,639 --> 00:07:40,319
included in Ticketmaster payment page

165
00:07:40,319 --> 00:07:43,360
the Aventa did not knew about it so

166
00:07:43,360 --> 00:07:46,120
somehow they say and when you look at

167
00:07:46,120 --> 00:07:47,800
all the responses and all that and as I

168
00:07:47,800 --> 00:07:49,930
say bent I said yeah you know somehow we

169
00:07:49,930 --> 00:07:52,089
deliver the JavaScript to you but it was

170
00:07:52,089 --> 00:07:54,430
some kind of pop of course you should

171
00:07:54,430 --> 00:07:57,159
never have put it in production and even

172
00:07:57,159 --> 00:07:59,560
less in the payment page otherwise we

173
00:07:59,560 --> 00:08:01,210
would have told you you shouldn't have

174
00:08:01,210 --> 00:08:06,399
done that so that was really yeah let's

175
00:08:06,399 --> 00:08:10,899
say the responsibilities were blurry but

176
00:08:10,899 --> 00:08:12,969
what's really interesting is in detail

177
00:08:12,969 --> 00:08:16,270
the attack so there is a magic card

178
00:08:16,270 --> 00:08:19,949
backing group now they have dozens of

179
00:08:19,949 --> 00:08:23,469
cases documented on them but this one

180
00:08:23,469 --> 00:08:26,289
the two I'm sure I'm showing to you is

181
00:08:26,289 --> 00:08:29,139
singly easiest one and the most

182
00:08:29,139 --> 00:08:31,800
impactful so what they did in fact end

183
00:08:31,800 --> 00:08:37,779
of 2016 so one year and a half ago the

184
00:08:37,779 --> 00:08:40,419
bridge to inventor which is some kind of

185
00:08:40,419 --> 00:08:42,880
startup doing AI and for marketing and

186
00:08:42,880 --> 00:08:44,500
all that so I guess there are

187
00:08:44,500 --> 00:08:46,990
differences are clearly not to the level

188
00:08:46,990 --> 00:08:50,350
of Ticketmaster so they bridge them and

189
00:08:50,350 --> 00:08:53,910
what they did so basically they just

190
00:08:54,130 --> 00:08:56,279
to the server and then at some point

191
00:08:56,279 --> 00:08:58,839
when they saw that Ticketmaster was

192
00:08:58,839 --> 00:09:01,180
using was including this JavaScript

193
00:09:01,180 --> 00:09:03,100
Interop I'm on page one does he decide

194
00:09:03,100 --> 00:09:07,899
to edit the script and to add just few

195
00:09:07,899 --> 00:09:10,779
JavaScript line that is doing what shows

196
00:09:10,779 --> 00:09:14,079
when you type the credit card number it

197
00:09:14,079 --> 00:09:17,680
takes it and it's ended three attacks to

198
00:09:17,680 --> 00:09:20,259
some web domain call web thoughts that

199
00:09:20,259 --> 00:09:22,240
Miss or some kind of wrong web demand so

200
00:09:22,240 --> 00:09:23,740
it's just basically it's a keylogger

201
00:09:23,740 --> 00:09:26,500
they added a keylogger functionality in

202
00:09:26,500 --> 00:09:28,959
his third-party JavaScript and they

203
00:09:28,959 --> 00:09:32,050
didn't try to Aidid while on earth so if

204
00:09:32,050 --> 00:09:34,240
you're really interested in that or we

205
00:09:34,240 --> 00:09:35,740
will shadow side of course and you have

206
00:09:35,740 --> 00:09:38,699
the detail analysis but by risk IQ ear

207
00:09:38,699 --> 00:09:43,209
but again it's so simple you just need

208
00:09:43,209 --> 00:09:45,730
to copy past a few lines of code in a

209
00:09:45,730 --> 00:09:48,370
Java Script and then that's it so you

210
00:09:48,370 --> 00:09:51,550
have a provider of service that is PCI

211
00:09:51,550 --> 00:09:56,139
DSS certified but all the data is leaked

212
00:09:56,139 --> 00:09:59,230
and then people told me yeah but how

213
00:09:59,230 --> 00:09:59,709
come

214
00:09:59,709 --> 00:10:02,529
Ticketmaster couldn't detect it don't

215
00:10:02,529 --> 00:10:05,470
they have the italic prevention

216
00:10:05,470 --> 00:10:07,829
don't they have IDs and all that well

217
00:10:07,829 --> 00:10:12,220
nothing is reaching Ticketmaster servers

218
00:10:12,220 --> 00:10:14,889
nothing happened Ticketmaster cannot see

219
00:10:14,889 --> 00:10:16,689
anything because it's just happening in

220
00:10:16,689 --> 00:10:20,139
the brothers of the users so as soon as

221
00:10:20,139 --> 00:10:21,730
you're typing something in your browser

222
00:10:21,730 --> 00:10:24,550
an extra request goes to e Banta and

223
00:10:24,550 --> 00:10:26,920
then well know directly benta but

224
00:10:26,920 --> 00:10:29,170
because of a bantha it goes directly to

225
00:10:29,170 --> 00:10:29,889
the ackers

226
00:10:29,889 --> 00:10:32,079
so Ticketmaster cannot see anything

227
00:10:32,079 --> 00:10:38,800
about it so before going further I'd

228
00:10:38,800 --> 00:10:42,850
just like to make a talk about the same

229
00:10:42,850 --> 00:10:44,350
origin policy because it's something

230
00:10:44,350 --> 00:10:48,009
that not so clear out the brother should

231
00:10:48,009 --> 00:10:51,759
protect from such attacks so so the

232
00:10:51,759 --> 00:10:54,670
basic so when you design a web page you

233
00:10:54,670 --> 00:10:56,860
can include static resources from any

234
00:10:56,860 --> 00:10:59,490
other domain so you are ticketmaster.com

235
00:10:59,490 --> 00:11:01,959
you can include a JavaScript from

236
00:11:01,959 --> 00:11:04,360
google.com teacher whatever is going to

237
00:11:04,360 --> 00:11:07,149
work because by design you can include

238
00:11:07,149 --> 00:11:07,980
external with

239
00:11:07,980 --> 00:11:14,850
this was supposed to be called static so

240
00:11:14,850 --> 00:11:16,290
this is for the loading and then they

241
00:11:16,290 --> 00:11:18,540
somehow for the execution of the

242
00:11:18,540 --> 00:11:21,180
JavaScript code so the there goes the

243
00:11:21,180 --> 00:11:26,070
same origin policy where it says that so

244
00:11:26,070 --> 00:11:29,790
Java scripts that has been loaded I can

245
00:11:29,790 --> 00:11:33,210
only access to the page content only if

246
00:11:33,210 --> 00:11:36,150
it has been loaded from the same origin

247
00:11:36,150 --> 00:11:37,740
so basically it means that if you are

248
00:11:37,740 --> 00:11:40,950
ticketmaster.com e from ticketmaster.com

249
00:11:40,950 --> 00:11:42,750
you say yeah include something from

250
00:11:42,750 --> 00:11:45,300
google.com then this script from

251
00:11:45,300 --> 00:11:47,490
google.com is going to be able to see

252
00:11:47,490 --> 00:11:50,550
all the page content but now let's say

253
00:11:50,550 --> 00:11:55,760
you are evil calm and you try to somehow

254
00:11:55,760 --> 00:11:59,310
read the page of ticketmaster.com you

255
00:11:59,310 --> 00:12:00,990
will not be able to do it because the

256
00:12:00,990 --> 00:12:03,450
browser will say 1:00 or sorry evil.com

257
00:12:03,450 --> 00:12:05,270
has not been loaded from

258
00:12:05,270 --> 00:12:07,680
ticketmaster.com so I don't give the

259
00:12:07,680 --> 00:12:15,170
permission to read it and just a remark

260
00:12:15,170 --> 00:12:19,500
this you cannot steal cookies if they

261
00:12:19,500 --> 00:12:22,020
are protected by the HTTP only errors

262
00:12:22,020 --> 00:12:24,600
which means that even if we are in the

263
00:12:24,600 --> 00:12:26,850
context of the same origin policy this

264
00:12:26,850 --> 00:12:28,890
clip from google.com will never be able

265
00:12:28,890 --> 00:12:31,700
to read the cookies ticketmaster.com

266
00:12:31,700 --> 00:12:39,120
so now solutions it's something that in

267
00:12:39,120 --> 00:12:41,040
fact rather a comment for payment page

268
00:12:41,040 --> 00:12:44,100
or for some pages where you have really

269
00:12:44,100 --> 00:12:45,960
sensitive information well first thing

270
00:12:45,960 --> 00:12:49,190
is well don't use any third-party

271
00:12:49,190 --> 00:12:51,450
JavaScript for your payment pages so

272
00:12:51,450 --> 00:12:52,890
that's why you can get you know like

273
00:12:52,890 --> 00:12:55,500
really ugly payment page where you enter

274
00:12:55,500 --> 00:12:57,360
your credit card data like I don't want

275
00:12:57,360 --> 00:12:59,340
to mention the one of eBay or whatever

276
00:12:59,340 --> 00:13:01,650
but they don't look good especially on

277
00:13:01,650 --> 00:13:03,930
mobile it's because of that so in fact

278
00:13:03,930 --> 00:13:06,360
they have maybe a nice UI in the website

279
00:13:06,360 --> 00:13:08,490
but then you get rid of eighty-two

280
00:13:08,490 --> 00:13:10,290
payment page and his payment page is

281
00:13:10,290 --> 00:13:12,360
mostly static and I don't have any like

282
00:13:12,360 --> 00:13:19,759
fancy UI and all that so that's why yeah

283
00:13:19,759 --> 00:13:22,100
some people ask me yeah you know well

284
00:13:22,100 --> 00:13:24,379
you told me about some origin policy but

285
00:13:24,379 --> 00:13:27,139
how can people then because of it oh you

286
00:13:27,139 --> 00:13:29,809
cannot filtrate data because you are not

287
00:13:29,809 --> 00:13:31,819
supposed to be able to do anything ever

288
00:13:31,819 --> 00:13:34,519
to actually trade data in fact as long

289
00:13:34,519 --> 00:13:36,529
as your javascript is about you run

290
00:13:36,529 --> 00:13:38,600
that's super easy because you just have

291
00:13:38,600 --> 00:13:43,389
for example to request a picture from

292
00:13:43,389 --> 00:13:46,399
whatever URL so for example malicious

293
00:13:46,399 --> 00:13:49,910
come slash image one and then you the

294
00:13:49,910 --> 00:13:51,739
server that you control that's under

295
00:13:51,739 --> 00:13:54,739
malicious gum will not have a picture on

296
00:13:54,739 --> 00:13:56,989
the list URL but in the log you will be

297
00:13:56,989 --> 00:14:00,529
able to find some data and whatever so

298
00:14:00,529 --> 00:14:02,779
that's easy so well first solution is

299
00:14:02,779 --> 00:14:06,049
well I have ugly payment pages and then

300
00:14:06,049 --> 00:14:10,040
maybe you can survive with it second

301
00:14:10,040 --> 00:14:11,839
option would be to use an iframe with

302
00:14:11,839 --> 00:14:15,379
the sandbox attributes so with it in

303
00:14:15,379 --> 00:14:17,059
fact you let's say your sensitive

304
00:14:17,059 --> 00:14:19,519
content you put it in an iframe and this

305
00:14:19,519 --> 00:14:22,129
iframe you give sandbox instruction that

306
00:14:22,129 --> 00:14:24,739
say well from this iframe you can the

307
00:14:24,739 --> 00:14:26,569
JavaScript cannot do anything that

308
00:14:26,569 --> 00:14:30,220
javascript cannot free that or whatever

309
00:14:30,220 --> 00:14:35,209
so it allows you to have let's say

310
00:14:35,209 --> 00:14:38,239
full-page ads somehow not too ugly and

311
00:14:38,239 --> 00:14:39,949
just the payment fields that are

312
00:14:39,949 --> 00:14:46,999
protected another solution could be to

313
00:14:46,999 --> 00:14:49,339
use a sub resource integrity called a

314
00:14:49,339 --> 00:14:53,509
server from the values we see so what he

315
00:14:53,509 --> 00:14:57,350
does is in fact the first time so you're

316
00:14:57,350 --> 00:14:59,209
developing so you say yeah I want to

317
00:14:59,209 --> 00:15:00,829
include this script and you compute a

318
00:15:00,829 --> 00:15:03,199
hash of the script and then you store

319
00:15:03,199 --> 00:15:05,059
the hash in your web page and then when

320
00:15:05,059 --> 00:15:06,559
the browser loads the external

321
00:15:06,559 --> 00:15:09,350
javascript it will compare it and if it

322
00:15:09,350 --> 00:15:11,209
does not match it will say well I won't

323
00:15:11,209 --> 00:15:13,220
load it so for example for Ticketmaster

324
00:15:13,220 --> 00:15:15,499
it would have worked because they would

325
00:15:15,499 --> 00:15:17,989
have computed the hash of the inventor

326
00:15:17,989 --> 00:15:19,879
script at the beginning and then when

327
00:15:19,879 --> 00:15:23,899
when magical changes it well the border

328
00:15:23,899 --> 00:15:25,489
we don't have loaded it and then nothing

329
00:15:25,489 --> 00:15:27,379
would have happened but it's a bit heavy

330
00:15:27,379 --> 00:15:31,069
we will discuss after on the operational

331
00:15:31,069 --> 00:15:33,339
challenges

332
00:15:33,600 --> 00:15:36,600
gee I talk too little so you can still

333
00:15:36,600 --> 00:15:39,090
use JavaScript but yeah really cheap

334
00:15:39,090 --> 00:15:42,390
pages as simple as possible so for me

335
00:15:42,390 --> 00:15:44,670
it's a bit like a nonsense to try to do

336
00:15:44,670 --> 00:15:49,110
AI on the payment page because yeah what

337
00:15:49,110 --> 00:15:51,510
do you want to do with it really if you

338
00:15:51,510 --> 00:15:53,220
want to match statistic on the

339
00:15:53,220 --> 00:15:55,650
expiration date so whatever so I don't

340
00:15:55,650 --> 00:15:59,130
see it so personally I don't know why it

341
00:15:59,130 --> 00:16:01,620
has been - yeah maybe the only valid

342
00:16:01,620 --> 00:16:03,930
reason is was he included it in every

343
00:16:03,930 --> 00:16:06,630
page and then it arrived there otherwise

344
00:16:06,630 --> 00:16:10,650
yeah doesn't really make sense and last

345
00:16:10,650 --> 00:16:12,570
but not least there is something strong

346
00:16:12,570 --> 00:16:16,350
now called content security policy which

347
00:16:16,350 --> 00:16:18,870
is some kind of much better sandboxing

348
00:16:18,870 --> 00:16:20,910
than iframe we will discuss later with

349
00:16:20,910 --> 00:16:23,610
the second example of what can go wrong

350
00:16:23,610 --> 00:16:28,080
and how to protect from it so the first

351
00:16:28,080 --> 00:16:30,780
case was Ticketmaster and somehow well a

352
00:16:30,780 --> 00:16:33,270
third party was leaked and because of

353
00:16:33,270 --> 00:16:35,790
that all these credit card data was

354
00:16:35,790 --> 00:16:39,240
stolen few months after Letitia was that

355
00:16:39,240 --> 00:16:43,920
something that looked similar ten times

356
00:16:43,920 --> 00:16:45,960
more user but he has three months after

357
00:16:45,960 --> 00:16:48,500
and and it was this time it was personal

358
00:16:48,500 --> 00:16:51,290
information and credit card data and

359
00:16:51,290 --> 00:16:53,820
stolen from the website and also the web

360
00:16:53,820 --> 00:16:58,200
application again the forensic study

361
00:16:58,200 --> 00:17:01,080
concluded that while British Airways

362
00:17:01,080 --> 00:17:03,630
database was not leaked and that he was

363
00:17:03,630 --> 00:17:06,209
not an issue with their payment

364
00:17:06,209 --> 00:17:08,670
processor at this time it was a

365
00:17:08,670 --> 00:17:12,240
JavaScript hosted directly by British

366
00:17:12,240 --> 00:17:15,180
Airways so moderniser which is some gang

367
00:17:15,180 --> 00:17:17,790
of uui javascript library so they don't

368
00:17:17,790 --> 00:17:20,819
know did it the footage in the server so

369
00:17:20,819 --> 00:17:22,790
somehow it should be in better control

370
00:17:22,790 --> 00:17:26,490
because yeah they are not flooding it

371
00:17:26,490 --> 00:17:30,690
from a third-party domain but what did

372
00:17:30,690 --> 00:17:36,000
the magic out I did well they hacked the

373
00:17:36,000 --> 00:17:38,490
British Airways web server on August

374
00:17:38,490 --> 00:17:40,620
21st so they know it now because it's

375
00:17:40,620 --> 00:17:42,510
happening in their infrastructure so

376
00:17:42,510 --> 00:17:44,040
British iOS can do better what's

377
00:17:44,040 --> 00:17:45,390
happening

378
00:17:45,390 --> 00:17:47,760
and again they added this kind of sin

379
00:17:47,760 --> 00:17:49,529
line so they are did the editor couch

380
00:17:49,529 --> 00:17:52,110
screaming a schemer or feature directly

381
00:17:52,110 --> 00:17:55,919
in this library of course I guess if I

382
00:17:55,919 --> 00:17:58,380
ask you a question when you include

383
00:17:58,380 --> 00:18:00,210
JavaScript library that are thousands of

384
00:18:00,210 --> 00:18:02,250
Dania do you read them before including

385
00:18:02,250 --> 00:18:07,950
them no of course no so it's why they

386
00:18:07,950 --> 00:18:09,929
did so so so that this one this one is

387
00:18:09,929 --> 00:18:12,330
really nasty so so they enter the web

388
00:18:12,330 --> 00:18:15,120
server and they just say yeah let's

389
00:18:15,120 --> 00:18:17,909
let's just change the UI and and let's

390
00:18:17,909 --> 00:18:19,169
just change the source code of a

391
00:18:19,169 --> 00:18:20,880
third-party library and we found nobody

392
00:18:20,880 --> 00:18:25,919
is going to have a look at it and then

393
00:18:25,919 --> 00:18:28,590
what happened well Indian it's exactly

394
00:18:28,590 --> 00:18:30,659
the same impacts at for Ticketmaster as

395
00:18:30,659 --> 00:18:32,909
soon as someone times personal

396
00:18:32,909 --> 00:18:35,880
information or credit card data then

397
00:18:35,880 --> 00:18:39,029
they send they steal his data directly

398
00:18:39,029 --> 00:18:40,860
from the browser and the son it to

399
00:18:40,860 --> 00:18:45,570
effect domain which again is Vietnamese

400
00:18:45,570 --> 00:18:49,919
like interesting which he be a double VA

401
00:18:49,919 --> 00:18:51,840
West come so it really looks like it's

402
00:18:51,840 --> 00:18:54,779
the domain from British Airways so even

403
00:18:54,779 --> 00:18:56,640
if you are paranoid and you use no

404
00:18:56,640 --> 00:18:59,100
script extension and no and that you see

405
00:18:59,100 --> 00:19:01,830
yeah be a waste come here should be

406
00:19:01,830 --> 00:19:03,899
British Airways so I would authorize it

407
00:19:03,899 --> 00:19:09,510
so it's kind of well done so did the

408
00:19:09,510 --> 00:19:11,940
detailed report is really interesting to

409
00:19:11,940 --> 00:19:13,049
know oh yeah

410
00:19:13,049 --> 00:19:17,309
I will try to stay undercover for a long

411
00:19:17,309 --> 00:19:19,919
time and another question yeah but what

412
00:19:19,919 --> 00:19:22,200
happened about the mobile app still

413
00:19:22,200 --> 00:19:23,549
something totally different because

414
00:19:23,549 --> 00:19:25,230
you're not supposed to have JavaScript

415
00:19:25,230 --> 00:19:26,850
and it's supposed to be an app right

416
00:19:26,850 --> 00:19:28,230
because you don't know the app from the

417
00:19:28,230 --> 00:19:31,610
Play Store or from a u.s. marketplace

418
00:19:31,610 --> 00:19:35,640
well in fact they had a good idea or

419
00:19:35,640 --> 00:19:38,039
because I wanted to save on development

420
00:19:38,039 --> 00:19:40,770
cost all the pages that were ending

421
00:19:40,770 --> 00:19:43,049
personal data a credit card data and all

422
00:19:43,049 --> 00:19:44,880
that in fact they were using a webview

423
00:19:44,880 --> 00:19:48,630
so they were reusing all the pages from

424
00:19:48,630 --> 00:19:51,450
the web server that was leaked and I

425
00:19:51,450 --> 00:19:54,299
don't even know if magical knew it when

426
00:19:54,299 --> 00:19:56,940
the little trick but yeah so in the end

427
00:19:56,940 --> 00:19:58,080
all the cost

428
00:19:58,080 --> 00:20:02,940
were impacted because of that so what

429
00:20:02,940 --> 00:20:05,299
can we do with that and now it's really

430
00:20:05,299 --> 00:20:08,909
becoming a tough question because of

431
00:20:08,909 --> 00:20:11,250
course yeah when we say don't also party

432
00:20:11,250 --> 00:20:12,870
javis people well now we own the same

433
00:20:12,870 --> 00:20:16,500
domain so well somehow they have their

434
00:20:16,500 --> 00:20:20,580
web server hacked so should feel like

435
00:20:20,580 --> 00:20:21,510
it's game over

436
00:20:21,510 --> 00:20:24,559
but wewe still may find some solution

437
00:20:24,559 --> 00:20:26,909
well of course if they well as I try to

438
00:20:26,909 --> 00:20:28,980
use iframes and boxing right it's

439
00:20:28,980 --> 00:20:31,799
useless because if they can edit our

440
00:20:31,799 --> 00:20:33,600
JavaScript they can also go to the web

441
00:20:33,600 --> 00:20:36,090
page and say yeah Edie's sandbox

442
00:20:36,090 --> 00:20:39,389
attribute sub resource integrity same

443
00:20:39,389 --> 00:20:41,159
stuff just remove this attribute and

444
00:20:41,159 --> 00:20:45,870
then that's over of course if the goal

445
00:20:45,870 --> 00:20:47,580
was to say okay now we keep the payment

446
00:20:47,580 --> 00:20:49,260
edge really super simple and all that

447
00:20:49,260 --> 00:20:51,389
well they are free to include whatever

448
00:20:51,389 --> 00:20:54,120
extra stuff they want so that they can

449
00:20:54,120 --> 00:20:56,190
add this teaming functionality in it of

450
00:20:56,190 --> 00:20:58,200
course if it's getting too big they are

451
00:20:58,200 --> 00:21:00,990
going to it's going to be visible if

452
00:21:00,990 --> 00:21:02,970
let's say the payment page becomes pink

453
00:21:02,970 --> 00:21:05,880
and all that other users will see that

454
00:21:05,880 --> 00:21:09,779
some something is worth but it's still

455
00:21:09,779 --> 00:21:13,889
difficult to you yeah a if you are let's

456
00:21:13,889 --> 00:21:16,590
say discreet and it's going to be hard

457
00:21:16,590 --> 00:21:18,690
to detect it for British Airways oh but

458
00:21:18,690 --> 00:21:20,940
what do we have left now what can we do

459
00:21:20,940 --> 00:21:23,970
in this case except yeah be sure that

460
00:21:23,970 --> 00:21:28,440
your web server is not hard so here

461
00:21:28,440 --> 00:21:30,269
comes we will discuss more about content

462
00:21:30,269 --> 00:21:34,679
security policy so what he does in fact

463
00:21:34,679 --> 00:21:38,630
it allows to whitelist

464
00:21:38,630 --> 00:21:40,769
everything that is authorized from the

465
00:21:40,769 --> 00:21:42,779
web page so from where can you lock

466
00:21:42,779 --> 00:21:44,909
pictures for Martin you load scripts can

467
00:21:44,909 --> 00:21:48,690
you load phones which kind of JavaScript

468
00:21:48,690 --> 00:21:50,510
methods are allowed to run and all that

469
00:21:50,510 --> 00:21:53,519
so again you can tell me what okay

470
00:21:53,519 --> 00:21:55,110
it's the goodies content security policy

471
00:21:55,110 --> 00:21:57,990
but they can just change because they're

472
00:21:57,990 --> 00:22:00,179
on the server the web server they can

473
00:22:00,179 --> 00:22:01,889
just change it and remove it and

474
00:22:01,889 --> 00:22:07,110
whatever yes and no fee depends on the

475
00:22:07,110 --> 00:22:09,240
web infrastructure because many times

476
00:22:09,240 --> 00:22:11,430
you have a

477
00:22:11,430 --> 00:22:14,490
or reverse proxy an engineer for example

478
00:22:14,490 --> 00:22:17,630
in front of your web application and

479
00:22:17,630 --> 00:22:19,740
generally it's not managed by the same

480
00:22:19,740 --> 00:22:23,400
people so it's likely that if your web

481
00:22:23,400 --> 00:22:26,309
server get sacked maybe your engine X in

482
00:22:26,309 --> 00:22:29,100
front of it is not taxed so if you set

483
00:22:29,100 --> 00:22:31,670
up all the content security policy

484
00:22:31,670 --> 00:22:34,380
configuration in your engine geeks and

485
00:22:34,380 --> 00:22:36,330
not directly in your in your web server

486
00:22:36,330 --> 00:22:39,780
then somehow well you have shared

487
00:22:39,780 --> 00:22:42,960
responsibilities and you you can hope to

488
00:22:42,960 --> 00:22:46,110
be protected from that if it's not this

489
00:22:46,110 --> 00:22:48,720
case occurs and there is one last

490
00:22:48,720 --> 00:22:51,120
solution that I thought about maybe you

491
00:22:51,120 --> 00:22:55,650
have other ideas is well you have to

492
00:22:55,650 --> 00:22:57,780
make things difficult for magicapp so

493
00:22:57,780 --> 00:23:00,870
you are just adding three lines of

494
00:23:00,870 --> 00:23:02,760
JavaScript is too easy so what you have

495
00:23:02,760 --> 00:23:04,679
to do is you have to obfuscate the

496
00:23:04,679 --> 00:23:09,780
JavaScript and add tampering detection

497
00:23:09,780 --> 00:23:11,880
code inside the JavaScript so that if

498
00:23:11,880 --> 00:23:13,050
they try to play with it they just

499
00:23:13,050 --> 00:23:15,510
change y9 so javascript is not going to

500
00:23:15,510 --> 00:23:18,450
work and it can alert zero nurse and all

501
00:23:18,450 --> 00:23:20,970
that so I'm not doing any advertisement

502
00:23:20,970 --> 00:23:23,820
there but some companies try to do it at

503
00:23:23,820 --> 00:23:26,220
sample one is called J's grumbler so it

504
00:23:26,220 --> 00:23:28,470
takes your clear text JavaScript and it

505
00:23:28,470 --> 00:23:30,600
gets something super Ivy dirty and all

506
00:23:30,600 --> 00:23:34,410
that and it should protect from people

507
00:23:34,410 --> 00:23:37,080
easily modifying some rings of

508
00:23:37,080 --> 00:23:39,300
JavaScript and I'm open

509
00:23:39,300 --> 00:23:41,580
afterwards at the end of this talk so if

510
00:23:41,580 --> 00:23:44,550
you have any other ideas I would like to

511
00:23:44,550 --> 00:23:50,040
let them okay

512
00:23:50,040 --> 00:23:52,590
so now you say okay that's fine so yeah

513
00:23:52,590 --> 00:23:54,600
maybe we should take care about those

514
00:23:54,600 --> 00:23:56,850
third-party dependencies we should do

515
00:23:56,850 --> 00:24:00,350
something but how much work for it you

516
00:24:00,350 --> 00:24:03,150
know when you're developing a web

517
00:24:03,150 --> 00:24:06,960
application you have to yeah you have to

518
00:24:06,960 --> 00:24:08,820
deliver everything for your sprint you

519
00:24:08,820 --> 00:24:11,730
have lots of tasks to do so you can say

520
00:24:11,730 --> 00:24:14,550
to your manager say Yama the feature is

521
00:24:14,550 --> 00:24:16,290
two days but then I need three weeks to

522
00:24:16,290 --> 00:24:18,870
secure it I'd say well come on you're

523
00:24:18,870 --> 00:24:21,450
fronting developer you don't need to do

524
00:24:21,450 --> 00:24:22,010
security

525
00:24:22,010 --> 00:24:25,260
you're not back-end

526
00:24:25,260 --> 00:24:29,940
so I just put some open questions so

527
00:24:29,940 --> 00:24:32,850
first question is yeah well how do you

528
00:24:32,850 --> 00:24:34,830
make sure the JavaScript you you don't

529
00:24:34,830 --> 00:24:37,950
know the skin so that's not easy but

530
00:24:37,950 --> 00:24:39,720
yeah most of the time you don't know it

531
00:24:39,720 --> 00:24:46,020
from like famous repository it's up so

532
00:24:46,020 --> 00:24:48,059
it should be fine so that somehow you

533
00:24:48,059 --> 00:24:49,260
have to be careful from where you

534
00:24:49,260 --> 00:24:52,559
download it form but what I'm more

535
00:24:52,559 --> 00:24:55,620
worried about in practice for having for

536
00:24:55,620 --> 00:24:58,530
helping companies set up that is yeah

537
00:24:58,530 --> 00:25:01,470
there is a performance impact at one

538
00:25:01,470 --> 00:25:02,700
point for the end user

539
00:25:02,700 --> 00:25:05,040
well if we say don't don't float

540
00:25:05,040 --> 00:25:08,250
JavaScript from third-party domains the

541
00:25:08,250 --> 00:25:09,660
first time you connect to the page you

542
00:25:09,660 --> 00:25:11,250
have to load this JavaScript sometimes

543
00:25:11,250 --> 00:25:12,809
the JavaScript sides are crazy some

544
00:25:12,809 --> 00:25:14,549
scripts are like two megabytes so if you

545
00:25:14,549 --> 00:25:16,710
have a slow connection and you are not

546
00:25:16,710 --> 00:25:18,510
using this again is going to take like

547
00:25:18,510 --> 00:25:21,780
maybe 10 20 seconds to load so you have

548
00:25:21,780 --> 00:25:24,660
to be careful about it and maybe it's

549
00:25:24,660 --> 00:25:26,100
also a good reason not to include that

550
00:25:26,100 --> 00:25:29,760
oh yeah anything that you think might be

551
00:25:29,760 --> 00:25:33,900
helpful but there's also a performance

552
00:25:33,900 --> 00:25:35,549
impact for the dev team you know when

553
00:25:35,549 --> 00:25:37,590
what people do sometimes because those

554
00:25:37,590 --> 00:25:39,900
Java scripts are crazy heavy you take

555
00:25:39,900 --> 00:25:41,760
all of them and you pack them and you

556
00:25:41,760 --> 00:25:43,830
try to reduce them and all that so you

557
00:25:43,830 --> 00:25:46,950
have a complex build chain because of it

558
00:25:46,950 --> 00:25:51,030
and this bill chain may be broken if you

559
00:25:51,030 --> 00:25:53,640
want to add all those extra steps of

560
00:25:53,640 --> 00:25:55,290
like you know you want to computer ash

561
00:25:55,290 --> 00:25:57,540
but if you're Bill Chen is taking

562
00:25:57,540 --> 00:25:59,820
several scripts and then packing them

563
00:25:59,820 --> 00:26:02,100
and somehow you have to add the ash on

564
00:26:02,100 --> 00:26:03,750
the pack version and on the clear ocean

565
00:26:03,750 --> 00:26:06,360
so there are operational challenges

566
00:26:06,360 --> 00:26:10,790
there and what I saw in practice people

567
00:26:10,790 --> 00:26:13,620
say yeah we we will handle this issue

568
00:26:13,620 --> 00:26:15,570
because this is really a big concern we

569
00:26:15,570 --> 00:26:17,730
really care about the security of user

570
00:26:17,730 --> 00:26:21,360
data so we compute those ashes and we do

571
00:26:21,360 --> 00:26:24,390
whatever we want to do there and then

572
00:26:24,390 --> 00:26:26,669
comes yeah well you know three months

573
00:26:26,669 --> 00:26:29,450
after there's a civvy published on this

574
00:26:29,450 --> 00:26:31,770
javascript library because it can leak

575
00:26:31,770 --> 00:26:33,990
data you provide like some crazy unicode

576
00:26:33,990 --> 00:26:36,390
input or whatever and then they say yeah

577
00:26:36,390 --> 00:26:38,730
well you know it spins tumor

578
00:26:38,730 --> 00:26:40,080
work we are not going to have that

579
00:26:40,080 --> 00:26:42,600
because we have to recompute the rush

580
00:26:42,600 --> 00:26:44,400
and the deployment process is too

581
00:26:44,400 --> 00:26:48,480
complex and all that oh well you know we

582
00:26:48,480 --> 00:26:50,910
did it once and we stayed with the old

583
00:26:50,910 --> 00:26:53,429
version because otherwise I'm not sure

584
00:26:53,429 --> 00:26:54,750
what's going to be the name in the

585
00:26:54,750 --> 00:26:58,080
content delivery network so yeah I'm not

586
00:26:58,080 --> 00:27:02,340
going to go up good so please for if you

587
00:27:02,340 --> 00:27:03,780
just have to do something yeah please

588
00:27:03,780 --> 00:27:07,140
update before and if you can only do

589
00:27:07,140 --> 00:27:08,790
something I just update and then forget

590
00:27:08,790 --> 00:27:10,559
what I said about the first point better

591
00:27:10,559 --> 00:27:12,870
have up to the dependencies it should be

592
00:27:12,870 --> 00:27:16,919
better that now you say okay now I want

593
00:27:16,919 --> 00:27:19,380
to do things well I understand what I'm

594
00:27:19,380 --> 00:27:21,750
doing I will do up that's one I need to

595
00:27:21,750 --> 00:27:25,320
do updates I'm okay to have some impact

596
00:27:25,320 --> 00:27:27,419
on it because I want to protect my users

597
00:27:27,419 --> 00:27:30,360
then come to the point you say well

598
00:27:30,360 --> 00:27:33,330
maybe content security policy is the

599
00:27:33,330 --> 00:27:36,090
best thing you can do so in practice

600
00:27:36,090 --> 00:27:38,000
what it means is really for me it's

601
00:27:38,000 --> 00:27:40,950
night from sandbox on steroids well you

602
00:27:40,950 --> 00:27:42,750
can configure everything you want with

603
00:27:42,750 --> 00:27:45,600
it it's really difficult to configure

604
00:27:45,600 --> 00:27:48,990
well Google so it's Google will really

605
00:27:48,990 --> 00:27:51,660
push this standard now I discussed with

606
00:27:51,660 --> 00:27:53,400
some guys from Google that work on it

607
00:27:53,400 --> 00:27:56,160
and they had so many issues in Gmail

608
00:27:56,160 --> 00:27:58,500
with XSS and all that because you can

609
00:27:58,500 --> 00:28:00,510
include whatever crops you want in Gmail

610
00:28:00,510 --> 00:28:03,750
so it was really really out for them on

611
00:28:03,750 --> 00:28:05,940
the back end part and to filter

612
00:28:05,940 --> 00:28:10,500
everything so they say well now we we

613
00:28:10,500 --> 00:28:12,210
are convinced we will never be able to

614
00:28:12,210 --> 00:28:14,610
get run on what percent of the XSS stuff

615
00:28:14,610 --> 00:28:17,280
in Gmail so what we do we would add a

616
00:28:17,280 --> 00:28:20,400
browser protection so let's do it in

617
00:28:20,400 --> 00:28:22,290
Chrome and then let's push standards and

618
00:28:22,290 --> 00:28:24,030
then let's blame the other browsers if

619
00:28:24,030 --> 00:28:27,480
they don't implement it and it worked

620
00:28:27,480 --> 00:28:29,580
well up to the point when it was only

621
00:28:29,580 --> 00:28:31,320
used by Google and then maybe two three

622
00:28:31,320 --> 00:28:33,000
years after they realized that it was

623
00:28:33,000 --> 00:28:35,669
crazy complex that had an animated

624
00:28:35,669 --> 00:28:39,120
survey and they find out that 95% of the

625
00:28:39,120 --> 00:28:41,160
CSP configurations were wrong and while

626
00:28:41,160 --> 00:28:43,230
protecting from nothing and this

627
00:28:43,230 --> 00:28:45,419
included like some amateur web site like

628
00:28:45,419 --> 00:28:49,950
Facebook or things like that so then the

629
00:28:49,950 --> 00:28:52,110
some of the change of mind and they try

630
00:28:52,110 --> 00:28:52,830
to work

631
00:28:52,830 --> 00:28:55,890
which you have something easier

632
00:28:55,890 --> 00:28:59,909
yet for debugging debugging is hard and

633
00:28:59,909 --> 00:29:02,159
the only trick that was proposed by

634
00:29:02,159 --> 00:29:04,860
Google was the notion of reports you

635
00:29:04,860 --> 00:29:11,070
were right so what it does is each time

636
00:29:11,070 --> 00:29:15,029
so the browser will load this policy and

637
00:29:15,029 --> 00:29:17,130
I want something happen on the page if

638
00:29:17,130 --> 00:29:18,690
we check if it's compliant with the

639
00:29:18,690 --> 00:29:21,240
policy and if it's not by default it's

640
00:29:21,240 --> 00:29:22,710
going to block it if you go to the

641
00:29:22,710 --> 00:29:24,179
developer console you will see alerts

642
00:29:24,179 --> 00:29:26,490
for it but then you can configure the

643
00:29:26,490 --> 00:29:31,200
report URL which we'll call an API at

644
00:29:31,200 --> 00:29:33,899
your website or whatever so that you get

645
00:29:33,899 --> 00:29:36,179
information that someone is either

646
00:29:36,179 --> 00:29:39,149
engaging strange data on your website

647
00:29:39,149 --> 00:29:41,580
all that well may be something you've

648
00:29:41,580 --> 00:29:43,080
been too tight in the configuration

649
00:29:43,080 --> 00:29:45,360
policy and then something is not working

650
00:29:45,360 --> 00:29:48,389
so it's really good first for debugging

651
00:29:48,389 --> 00:29:50,190
run your own testing phase so you can

652
00:29:50,190 --> 00:29:53,429
have it on in report on e mode so what

653
00:29:53,429 --> 00:29:55,740
you do in practice you set up maybe some

654
00:29:55,740 --> 00:29:58,289
tiles policy you run all your

655
00:29:58,289 --> 00:29:59,730
integration tests because you have

656
00:29:59,730 --> 00:30:01,230
integration test and you have good

657
00:30:01,230 --> 00:30:05,549
integration test and then you only have

658
00:30:05,549 --> 00:30:07,559
to go through the report and see what

659
00:30:07,559 --> 00:30:09,899
you have to to find Hume there and then

660
00:30:09,899 --> 00:30:11,460
in production mode that's also really

661
00:30:11,460 --> 00:30:13,710
helpful so you are in blocking mode but

662
00:30:13,710 --> 00:30:16,169
you say that it's blocking but each time

663
00:30:16,169 --> 00:30:18,929
there is a violation your API is

664
00:30:18,929 --> 00:30:20,730
contacted and so you have an idea of the

665
00:30:20,730 --> 00:30:24,029
payload people are playing with so at

666
00:30:24,029 --> 00:30:25,500
the beginning it sounds like a good idea

667
00:30:25,500 --> 00:30:27,269
but let's say if you are hit lab comm

668
00:30:27,269 --> 00:30:30,299
you don't want to receive like thousands

669
00:30:30,299 --> 00:30:32,039
of payloads broadly because you cannot

670
00:30:32,039 --> 00:30:37,350
manage anything with it so what were

671
00:30:37,350 --> 00:30:39,630
using a deep lab so we are using content

672
00:30:39,630 --> 00:30:42,059
security policy because rock a bit like

673
00:30:42,059 --> 00:30:44,130
Gmail yeah you know why in the issues

674
00:30:44,130 --> 00:30:45,690
everything is self-service so you can

675
00:30:45,690 --> 00:30:47,279
post whatever you want you can include

676
00:30:47,279 --> 00:30:49,260
attachments you can include pictures and

677
00:30:49,260 --> 00:30:51,690
JavaScript and all that on our outer one

678
00:30:51,690 --> 00:30:53,970
bug bounty program we have like too many

679
00:30:53,970 --> 00:30:56,940
XSS reports some of them are not that

680
00:30:56,940 --> 00:30:58,950
good watcher we get many so we decided

681
00:30:58,950 --> 00:31:02,419
to to go with content security policy

682
00:31:02,419 --> 00:31:04,980
but we wanted something that was

683
00:31:04,980 --> 00:31:06,190
reasonable for

684
00:31:06,190 --> 00:31:07,970
deployment point of view from an

685
00:31:07,970 --> 00:31:10,070
operational point of view we don't want

686
00:31:10,070 --> 00:31:12,890
to have like 50 security engineers doing

687
00:31:12,890 --> 00:31:15,920
all the coding content security policy

688
00:31:15,920 --> 00:31:18,230
and having users complain that yeah well

689
00:31:18,230 --> 00:31:20,960
you know this page is broken down now I

690
00:31:20,960 --> 00:31:23,090
can't icon do this comment on whatever

691
00:31:23,090 --> 00:31:25,610
so what we are using we are using the

692
00:31:25,610 --> 00:31:28,130
letter specification that has introduced

693
00:31:28,130 --> 00:31:32,000
the notion of announces so I won't give

694
00:31:32,000 --> 00:31:34,340
the exact details but what you do in

695
00:31:34,340 --> 00:31:37,070
fact you don't have to pre-compute ashes

696
00:31:37,070 --> 00:31:39,830
to do so it's just a server that's

697
00:31:39,830 --> 00:31:41,450
computes a random number when you

698
00:31:41,450 --> 00:31:44,450
include the resource and and only your

699
00:31:44,450 --> 00:31:48,290
resources can guess the secret number so

700
00:31:48,290 --> 00:31:50,050
let's see if someone is trying to gather

701
00:31:50,050 --> 00:31:53,360
together an external resource it doesn't

702
00:31:53,360 --> 00:31:57,800
know these nouns and you cannot see so

703
00:31:57,800 --> 00:32:01,160
it's not as secure as ashes but it's

704
00:32:01,160 --> 00:32:03,470
it's a good balance so for people

705
00:32:03,470 --> 00:32:05,030
interested you you can either look at

706
00:32:05,030 --> 00:32:07,880
ads or think of course the content

707
00:32:07,880 --> 00:32:09,740
security policy at this lab is not

708
00:32:09,740 --> 00:32:13,790
trying to and 100% because we don't want

709
00:32:13,790 --> 00:32:19,400
to spend o time just with user contents

710
00:32:19,400 --> 00:32:23,120
on it and all that it's it's something

711
00:32:23,120 --> 00:32:24,980
that may be the best balance for you if

712
00:32:24,980 --> 00:32:26,540
you want to have some decent security

713
00:32:26,540 --> 00:32:29,270
and and be able to Chilean delete from

714
00:32:29,270 --> 00:32:35,180
an aversion point of view so so that's

715
00:32:35,180 --> 00:32:39,650
it so I don't want to frighten you but I

716
00:32:39,650 --> 00:32:41,390
hope that now you are convinced that

717
00:32:41,390 --> 00:32:44,000
malicious content libraries yeah can be

718
00:32:44,000 --> 00:32:47,840
a real issue you can be your target this

719
00:32:47,840 --> 00:32:50,210
magical group maybe now it's like 40

720
00:32:50,210 --> 00:32:52,670
companies that have disclosed that I've

721
00:32:52,670 --> 00:32:55,670
been act by this group so it's a lot so

722
00:32:55,670 --> 00:32:57,590
they're also playing with WordPress and

723
00:32:57,590 --> 00:32:59,270
all that but playing with WordPress is

724
00:32:59,270 --> 00:33:03,560
cheating so I prefer when there's a

725
00:33:03,560 --> 00:33:05,480
really H in the server and they try to

726
00:33:05,480 --> 00:33:09,880
do and we do a targeted attack like that

727
00:33:11,110 --> 00:33:12,630
we saw that

728
00:33:12,630 --> 00:33:18,000
yeah so as a front-end developer oh yeah

729
00:33:18,000 --> 00:33:22,140
so you should care about security now so

730
00:33:22,140 --> 00:33:24,210
something that maybe people know there

731
00:33:24,210 --> 00:33:26,340
it's really hard for me to find a good

732
00:33:26,340 --> 00:33:28,230
book to recommend on the web security

733
00:33:28,230 --> 00:33:31,650
model so tangled web is okay from a book

734
00:33:31,650 --> 00:33:33,510
but it's I would like to have like maybe

735
00:33:33,510 --> 00:33:36,120
a book that's 40 50 pages long and I'd

736
00:33:36,120 --> 00:33:37,740
explain me like like okay those are

737
00:33:37,740 --> 00:33:39,780
those five security others that are

738
00:33:39,780 --> 00:33:41,970
important and and that explained me yeah

739
00:33:41,970 --> 00:33:44,040
okay you can load from facebook comments

740
00:33:44,040 --> 00:33:45,930
again you cannot load from API does

741
00:33:45,930 --> 00:33:48,750
Facebook own because whatever so so it's

742
00:33:48,750 --> 00:33:50,250
hard and you have to document yourself

743
00:33:50,250 --> 00:33:51,990
and you have to play and you have to

744
00:33:51,990 --> 00:33:54,210
play with the developer console to see

745
00:33:54,210 --> 00:33:56,810
warnings to understand what's happening

746
00:33:56,810 --> 00:34:00,870
and yeah just do it a few Firefox just

747
00:34:00,870 --> 00:34:03,120
go in the developer console in any

748
00:34:03,120 --> 00:34:05,190
website and you love you see so many

749
00:34:05,190 --> 00:34:08,668
errors everything is red because people

750
00:34:08,668 --> 00:34:10,230
just don't realize that the javascript

751
00:34:10,230 --> 00:34:12,120
is not working because of the of those

752
00:34:12,120 --> 00:34:15,030
errors but like the website seems to be

753
00:34:15,030 --> 00:34:17,550
working so shouldn't be shouldn't be too

754
00:34:17,550 --> 00:34:20,668
bad so their solution and content

755
00:34:20,668 --> 00:34:22,649
security policy is for me clearly the

756
00:34:22,649 --> 00:34:26,040
best of them but yeah you you have to

757
00:34:26,040 --> 00:34:28,800
invest some time to have it working is

758
00:34:28,800 --> 00:34:31,350
not just setting like a magical flag and

759
00:34:31,350 --> 00:34:34,350
then it's going to happen if the yeah

760
00:34:34,350 --> 00:34:36,210
sure management said yeah I want content

761
00:34:36,210 --> 00:34:37,980
security policy you can add one and you

762
00:34:37,980 --> 00:34:40,560
can say well I trust all the world it's

763
00:34:40,560 --> 00:34:42,300
not going to be useful what you're just

764
00:34:42,300 --> 00:34:45,149
going to be part of the 95% of the

765
00:34:45,149 --> 00:34:47,190
website that have CSP on and that are

766
00:34:47,190 --> 00:34:50,399
not doing a good job there are some

767
00:34:50,399 --> 00:34:54,000
tools to check if your policy is doing

768
00:34:54,000 --> 00:34:56,550
its job they are not so good today

769
00:34:56,550 --> 00:34:59,730
so yeah just use the developer console

770
00:34:59,730 --> 00:35:04,560
and test and now I'm open to question

771
00:35:04,560 --> 00:35:07,530
and also to feedback on what you do on

772
00:35:07,530 --> 00:35:12,230
your daily life to undo it

773
00:36:06,530 --> 00:36:09,649
[Music]

774
00:36:11,190 --> 00:36:16,960
so let's see there's not like a good

775
00:36:16,960 --> 00:36:20,290
solution otherwise we need to talk about

776
00:36:20,290 --> 00:36:24,280
it but we vet libraries we reload and

777
00:36:24,280 --> 00:36:28,330
each time we have woke up on the jumper

778
00:36:28,330 --> 00:36:30,580
github is mostly Ruby so each time a new

779
00:36:30,580 --> 00:36:33,790
dependency is included so we get alerts

780
00:36:33,790 --> 00:36:36,520
at the app section so that we can which

781
00:36:36,520 --> 00:36:38,350
are do we really need this extra

782
00:36:38,350 --> 00:36:40,810
dependency and otherwise well we

783
00:36:40,810 --> 00:36:43,150
download them and we read them it

784
00:36:43,150 --> 00:36:45,340
doesn't mean that we read everything but

785
00:36:45,340 --> 00:36:48,030
if we recharge them locally and we don't

786
00:36:48,030 --> 00:36:50,740
let's say each time I get the packages

787
00:36:50,740 --> 00:36:52,840
built it's not really downloaded each

788
00:36:52,840 --> 00:37:01,750
time from NPM or whatever yes yeah yeah

789
00:37:01,750 --> 00:37:03,430
so there is no to have that and all that

790
00:37:03,430 --> 00:37:05,530
and I like when I have some time yet you

791
00:37:05,530 --> 00:37:07,060
over to have a look at it if my new

792
00:37:07,060 --> 00:37:14,670
chief is reasonable in size yes

793
00:37:34,100 --> 00:37:36,140
because it was a an embedded browser

794
00:37:36,140 --> 00:37:55,610
with Safari also so for unready depends

795
00:37:55,610 --> 00:37:57,320
on the version of android so it used to

796
00:37:57,320 --> 00:38:01,850
be but now it's browser good so let's

797
00:38:01,850 --> 00:38:03,950
see - mixing cg latest version of

798
00:38:03,950 --> 00:38:06,410
android is like you are in private mode

799
00:38:06,410 --> 00:38:11,800
so it does in its own life the details

800
00:38:11,800 --> 00:38:15,320
but it's not as simple because you know

801
00:38:15,320 --> 00:38:18,020
many website or many mobile applications

802
00:38:18,020 --> 00:38:20,090
yeah this is lack of Facebook all that

803
00:38:20,090 --> 00:38:23,540
the they do login on a web page and they

804
00:38:23,540 --> 00:38:25,370
do it for on purpose because they are or

805
00:38:25,370 --> 00:38:26,870
thread of phishing attack so let's say

806
00:38:26,870 --> 00:38:28,040
you don't know the fake facebook

807
00:38:28,040 --> 00:38:30,410
application lock you're dead already but

808
00:38:30,410 --> 00:38:32,510
at least they try to avoid that you

809
00:38:32,510 --> 00:38:34,610
enter the login credentials in the

810
00:38:34,610 --> 00:38:36,740
mobile app so they use holes and they

811
00:38:36,740 --> 00:38:39,320
say yeah yeah I will redirect you to the

812
00:38:39,320 --> 00:38:41,360
official website and you type it there

813
00:38:41,360 --> 00:38:43,640
and because of that they have to be

814
00:38:43,640 --> 00:38:46,220
somehow or lakhs vehicles most of the

815
00:38:46,220 --> 00:38:49,400
time that says login patch is not on the

816
00:38:49,400 --> 00:38:51,800
same domain is not like BG Sharad common

817
00:38:51,800 --> 00:38:53,360
is going to be login dot which are

818
00:38:53,360 --> 00:38:55,010
welcome because I want to set specific

819
00:38:55,010 --> 00:38:57,440
cookie to it so because of that the

820
00:38:57,440 --> 00:38:59,720
webview tends to be a bit flux from a

821
00:38:59,720 --> 00:39:05,480
security point of view so in practice

822
00:39:05,480 --> 00:39:08,210
you you get the same origin policy in it

823
00:39:08,210 --> 00:39:11,690
but it's let's say choice mode browser

824
00:39:11,690 --> 00:39:13,640
and practicing implementation so

825
00:39:13,640 --> 00:39:15,110
normally you cannot browse somewhere

826
00:39:15,110 --> 00:39:18,020
else but if someone has been able to

827
00:39:18,020 --> 00:39:19,880
edit your web page and is loading

828
00:39:19,880 --> 00:39:21,260
something from some world and you're

829
00:39:21,260 --> 00:39:23,440
dead

830
00:39:48,480 --> 00:39:52,860
any other question

831
00:39:53,700 --> 00:39:55,599
well so if you

832
00:39:55,599 --> 00:39:57,789
want to talk I get that boost is just on

833
00:39:57,789 --> 00:39:59,859
the left so feel free to come and talk

834
00:39:59,859 --> 00:40:01,869
if you have questions about disabled so

835
00:40:01,869 --> 00:40:03,130
we'll be able to answer on the booze

836
00:40:03,130 --> 00:40:06,239
thank you

