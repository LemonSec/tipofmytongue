1
00:00:00,000 --> 00:00:07,130
um so yeah when's the last time you

2
00:00:05,490 --> 00:00:10,200
weren't or gated while leaving a country

3
00:00:07,130 --> 00:00:13,799
turns out most authorities are concerned

4
00:00:10,200 --> 00:00:15,329
about things entering a sorry turns out

5
00:00:13,799 --> 00:00:16,650
that most authorities are more concerned

6
00:00:15,330 --> 00:00:17,430
with things entering rather than think

7
00:00:16,650 --> 00:00:19,529
of things leaving

8
00:00:17,430 --> 00:00:21,119
I think this metaphor illustrates

9
00:00:19,529 --> 00:00:24,960
properly how developers handle service

10
00:00:21,119 --> 00:00:26,220
traffic a lot of time is spent on making

11
00:00:24,960 --> 00:00:28,380
sure that ingress is handled properly

12
00:00:26,220 --> 00:00:32,009
and egress is sometimes is often

13
00:00:28,380 --> 00:00:34,230
neglected so this talk is about best

14
00:00:32,009 --> 00:00:49,969
practices regarding attending egress

15
00:00:34,230 --> 00:00:54,000
traffic alright so hi my name is Mark I

16
00:00:49,969 --> 00:00:57,719
come from Montreal so right now I work

17
00:00:54,000 --> 00:00:59,039
at stripe as a security engineer before

18
00:00:57,719 --> 00:01:01,170
that I used to work at Samsung and

19
00:00:59,039 --> 00:01:07,460
during that time I graduated from

20
00:01:01,170 --> 00:01:09,540
universities Quebec lol yay alright so

21
00:01:07,460 --> 00:01:11,639
alright since we're gonna be talking

22
00:01:09,540 --> 00:01:14,400
about egress let's define what egress is

23
00:01:11,640 --> 00:01:16,409
in order to be egress there has to be

24
00:01:14,400 --> 00:01:18,540
your organization your organs going to

25
00:01:16,409 --> 00:01:19,820
be defined as the set of services that

26
00:01:18,540 --> 00:01:25,380
your company operates

27
00:01:19,820 --> 00:01:29,100
I'm sure it's neat and tidy but in order

28
00:01:25,380 --> 00:01:31,079
to either provide services or consume

29
00:01:29,100 --> 00:01:33,119
services your organization has to be

30
00:01:31,079 --> 00:01:37,860
part of something way in a way more

31
00:01:33,119 --> 00:01:39,210
scarier the world wide web so now we

32
00:01:37,860 --> 00:01:42,299
have all the herbs so in the world wide

33
00:01:39,210 --> 00:01:44,880
web lives providers clients as well as

34
00:01:42,299 --> 00:01:46,979
threats now we have all the pieces to

35
00:01:44,880 --> 00:01:48,869
describe egress if your egress is simply

36
00:01:46,979 --> 00:01:50,399
a data transfer or session which it

37
00:01:48,869 --> 00:01:53,040
which is initiated from the inside of

38
00:01:50,399 --> 00:01:56,299
the organization to the outside all

39
00:01:53,040 --> 00:01:59,939
right so let's get more concrete with it

40
00:01:56,299 --> 00:02:01,680
this is your or your services come in

41
00:01:59,939 --> 00:02:04,380
use case for egress is for storage for

42
00:02:01,680 --> 00:02:06,689
egress let's go with Web books Web books

43
00:02:04,380 --> 00:02:09,500
are super popular in order to inform

44
00:02:06,689 --> 00:02:12,209
your customers whenever an event happens

45
00:02:09,500 --> 00:02:13,290
for example let's drive you can go in

46
00:02:12,209 --> 00:02:15,030
the dashboard

47
00:02:13,290 --> 00:02:16,679
you can provide if you're a merchant you

48
00:02:15,030 --> 00:02:18,269
can provide us with a URL and select

49
00:02:16,680 --> 00:02:19,890
which event you're interested in and

50
00:02:18,269 --> 00:02:22,470
whenever it happens we're going to send

51
00:02:19,890 --> 00:02:23,970
you a notification so this is this is

52
00:02:22,470 --> 00:02:25,650
obviously going to be a session that

53
00:02:23,970 --> 00:02:27,120
originates from the inside of

54
00:02:25,650 --> 00:02:30,420
organization that's going to go outside

55
00:02:27,120 --> 00:02:32,250
to the merchants organization another

56
00:02:30,420 --> 00:02:34,559
case is falling polling is when a

57
00:02:32,250 --> 00:02:37,829
service wants to go fetch a resource in

58
00:02:34,560 --> 00:02:40,230
order to use it another stripe example

59
00:02:37,829 --> 00:02:43,500
would be receive teaming if you opt into

60
00:02:40,230 --> 00:02:46,140
this feature we will send a receipt to

61
00:02:43,500 --> 00:02:48,900
your customers whenever they there's a

62
00:02:46,140 --> 00:02:51,328
successful charge and but in order to

63
00:02:48,900 --> 00:02:53,010
team to receive to your company's color

64
00:02:51,329 --> 00:02:55,079
we will go and fetch your website

65
00:02:53,010 --> 00:02:58,828
extract the color scheme and then to me

66
00:02:55,079 --> 00:03:01,920
receive with that know the presentation

67
00:02:58,829 --> 00:03:06,359
is not broken this is this is a falling

68
00:03:01,920 --> 00:03:08,220
case from Google Docs so you can insert

69
00:03:06,359 --> 00:03:08,790
an image in a document by providing a

70
00:03:08,220 --> 00:03:10,019
URL

71
00:03:08,790 --> 00:03:11,760
this means that Google is going to go

72
00:03:10,019 --> 00:03:13,590
and reach out for the image on your

73
00:03:11,760 --> 00:03:15,959
behalf and insert it in the document

74
00:03:13,590 --> 00:03:18,030
that you're making the last case and

75
00:03:15,959 --> 00:03:20,370
maybe the most common is third-party

76
00:03:18,030 --> 00:03:22,230
services so whenever you want to consume

77
00:03:20,370 --> 00:03:24,870
a service for example whenever you want

78
00:03:22,230 --> 00:03:27,119
to send tech sorry your text message

79
00:03:24,870 --> 00:03:28,919
using a platform like like Twilio you

80
00:03:27,120 --> 00:03:30,480
want to send email or you want to reach

81
00:03:28,919 --> 00:03:32,910
out to a cloud provider in order to

82
00:03:30,480 --> 00:03:34,828
spell new instances you will have to go

83
00:03:32,910 --> 00:03:37,109
and reach out for those service

84
00:03:34,829 --> 00:03:38,699
providers something which is somewhat

85
00:03:37,109 --> 00:03:40,260
common with service providers is that

86
00:03:38,699 --> 00:03:42,989
they provide libraries in order to

87
00:03:40,260 --> 00:03:45,179
interact with them so you're not making

88
00:03:42,989 --> 00:03:46,799
the request somewhat manually you'll use

89
00:03:45,180 --> 00:03:50,459
the interface they provide which's right

90
00:03:46,799 --> 00:03:54,150
which makes your life simpler alright so

91
00:03:50,459 --> 00:03:56,010
now that we know about some egress use

92
00:03:54,150 --> 00:03:58,079
cases we can look we can try to

93
00:03:56,010 --> 00:04:00,060
categorize them into big families so

94
00:03:58,079 --> 00:04:02,639
this restricted and unrestricted a

95
00:04:00,060 --> 00:04:06,480
restricted works super well for service

96
00:04:02,639 --> 00:04:07,739
providers it is for use cases where your

97
00:04:06,480 --> 00:04:10,440
addresses or IPs

98
00:04:07,739 --> 00:04:13,500
sorry addresses or names are not going

99
00:04:10,440 --> 00:04:17,279
to change often and it's you can

100
00:04:13,500 --> 00:04:20,220
identify them by sorry you can identify

101
00:04:17,279 --> 00:04:21,958
them by functionalities that there are

102
00:04:20,220 --> 00:04:23,280
hard dependencies basically your service

103
00:04:21,959 --> 00:04:27,240
won't work without those external

104
00:04:23,280 --> 00:04:30,030
resources the unrestricted case

105
00:04:27,240 --> 00:04:32,009
is is ideal for things like web books

106
00:04:30,030 --> 00:04:33,508
when it's your customer that's going to

107
00:04:32,009 --> 00:04:38,400
provide you with their.you our URL to go

108
00:04:33,509 --> 00:04:40,680
and reach out for so this is for the use

109
00:04:38,400 --> 00:04:43,500
cases where you can go with a sorry well

110
00:04:40,680 --> 00:04:46,979
this is for use cases where an address

111
00:04:43,500 --> 00:04:48,360
or a name can change for example I can

112
00:04:46,979 --> 00:04:50,250
just go on my dashboard change your web

113
00:04:48,360 --> 00:04:51,449
book destination and it's all going to

114
00:04:50,250 --> 00:04:54,300
be fine

115
00:04:51,449 --> 00:04:55,979
you can either usually those don't have

116
00:04:54,300 --> 00:04:57,930
your service don't doesn't have any

117
00:04:55,979 --> 00:04:59,400
dependency on those if those resources

118
00:04:57,930 --> 00:05:03,449
are not available your service is not

119
00:04:59,400 --> 00:05:05,520
going to be degraded all right so let's

120
00:05:03,449 --> 00:05:07,590
try to do some naive egress so this is

121
00:05:05,520 --> 00:05:10,049
again your organization and this is the

122
00:05:07,590 --> 00:05:11,580
public web in the organization there are

123
00:05:10,050 --> 00:05:12,930
services for example there's an API

124
00:05:11,580 --> 00:05:15,180
there's a database and there's a message

125
00:05:12,930 --> 00:05:19,229
broker if you want to reach out to

126
00:05:15,180 --> 00:05:21,419
example.com in order to make this

127
00:05:19,229 --> 00:05:24,330
example more lifelike let's give those

128
00:05:21,419 --> 00:05:26,340
services IP addresses so if API service

129
00:05:24,330 --> 00:05:29,159
wants to reach out to example.com first

130
00:05:26,340 --> 00:05:30,840
it's gonna have to go and reach its its

131
00:05:29,159 --> 00:05:33,870
IP it's going to use the public name

132
00:05:30,840 --> 00:05:37,080
system and retrieve an IP and then it

133
00:05:33,870 --> 00:05:39,389
can connect to this service there are a

134
00:05:37,080 --> 00:05:42,090
couple issues that that come with that

135
00:05:39,389 --> 00:05:44,990
doing it this way the first one would be

136
00:05:42,090 --> 00:05:47,638
SSR f so server side request forgery

137
00:05:44,990 --> 00:05:48,900
this is an abuse and functionality where

138
00:05:47,639 --> 00:05:51,690
you make an application make your

139
00:05:48,900 --> 00:05:55,080
request to somewhere where it was not it

140
00:05:51,690 --> 00:05:56,940
like where it's not intended so for

141
00:05:55,080 --> 00:05:59,190
example if I go back to the dashboard

142
00:05:56,940 --> 00:06:02,099
and in the web book URL I set a

143
00:05:59,190 --> 00:06:03,930
localhost the API service is going to

144
00:06:02,099 --> 00:06:06,060
resolve itself so this is pretty bad

145
00:06:03,930 --> 00:06:07,440
because you're gonna have some

146
00:06:06,060 --> 00:06:11,340
interaction with something that the

147
00:06:07,440 --> 00:06:13,139
service is not expecting so on the same

148
00:06:11,340 --> 00:06:14,489
host there could be another service

149
00:06:13,139 --> 00:06:16,139
listening on an other port and if you

150
00:06:14,490 --> 00:06:17,610
say localhost and you just write

151
00:06:16,139 --> 00:06:19,770
anywhere each port you might hit

152
00:06:17,610 --> 00:06:25,080
something that that you're not supposed

153
00:06:19,770 --> 00:06:28,080
to if you try to resolve for 10.0 the

154
00:06:25,080 --> 00:06:30,330
sorry tender order ode to that x IP dot

155
00:06:28,080 --> 00:06:32,490
io everything and if you put an IP

156
00:06:30,330 --> 00:06:33,750
address before exactly at i/o that's

157
00:06:32,490 --> 00:06:35,460
going to resolve to the IP address you

158
00:06:33,750 --> 00:06:39,330
put in front so in this case if if in

159
00:06:35,460 --> 00:06:40,770
the web text blocks I put I put this one

160
00:06:39,330 --> 00:06:43,349
I'm gonna resolve I'm gonna go in

161
00:06:40,770 --> 00:06:43,799
hit the database if I try to resolve

162
00:06:43,349 --> 00:06:45,900
this one

163
00:06:43,800 --> 00:06:49,440
oh no that translate at IO I'm going to

164
00:06:45,900 --> 00:06:51,120
resolve 1000 dot for and then what about

165
00:06:49,440 --> 00:06:53,430
example.com in the previous slide we

166
00:06:51,120 --> 00:06:55,229
weren't and reach out for it

167
00:06:53,430 --> 00:06:56,550
nothing guarantees there's there's no

168
00:06:55,229 --> 00:07:00,090
guarantee that example that I will still

169
00:06:56,550 --> 00:07:01,919
resolve something public maybe the name

170
00:07:00,090 --> 00:07:05,549
system has been compromised maybe the

171
00:07:01,919 --> 00:07:08,219
owner of the domain is a rogue actor so

172
00:07:05,550 --> 00:07:10,440
no guarantee is there what about one

173
00:07:08,220 --> 00:07:12,449
sixty nine to five four one six nine to

174
00:07:10,440 --> 00:07:15,330
five for this one is a link local

175
00:07:12,449 --> 00:07:18,539
address for example if you run on AWS

176
00:07:15,330 --> 00:07:20,370
this is the meta data endpoint your

177
00:07:18,539 --> 00:07:23,580
instance will go we'll go and reach out

178
00:07:20,370 --> 00:07:25,560
for user data or credentials that it's

179
00:07:23,580 --> 00:07:29,400
going to use to interact with other advs

180
00:07:25,560 --> 00:07:33,780
services so if I provide that in the web

181
00:07:29,400 --> 00:07:36,780
work URL yeah and if yeah and if I can

182
00:07:33,780 --> 00:07:39,210
view the result of like going fetching

183
00:07:36,780 --> 00:07:43,919
this data I will be able to get it IDs

184
00:07:39,210 --> 00:07:45,799
keys for for this instance alright so

185
00:07:43,919 --> 00:07:48,419
what's the solution how can we fix that

186
00:07:45,800 --> 00:07:50,759
we just have to make sure that the IPS

187
00:07:48,419 --> 00:07:53,698
so whenever we resolve an MMO whenever

188
00:07:50,759 --> 00:07:56,159
we get an address we have to make sure

189
00:07:53,699 --> 00:07:58,409
that this address is actually going out

190
00:07:56,159 --> 00:08:05,340
to it's actually pointing to the public

191
00:07:58,409 --> 00:08:07,050
Internet all right all right

192
00:08:05,340 --> 00:08:09,388
so how do we defined what the public

193
00:08:07,050 --> 00:08:12,779
Internet is it's actually easier to

194
00:08:09,389 --> 00:08:15,259
define what the private Internet is the

195
00:08:12,779 --> 00:08:17,969
most of today RFC on that is RFC 6890

196
00:08:15,259 --> 00:08:20,990
it's going to give you a list of special

197
00:08:17,969 --> 00:08:24,900
IP side oh sorry special cyber blocks

198
00:08:20,990 --> 00:08:28,139
that are meant to be used for private

199
00:08:24,900 --> 00:08:29,630
usage or like special test users so

200
00:08:28,139 --> 00:08:31,860
basically you just have to ensure that

201
00:08:29,630 --> 00:08:34,409
you're not trying to connect to one of

202
00:08:31,860 --> 00:08:37,140
tonight when you're trying to connect to

203
00:08:34,409 --> 00:08:39,599
some remote host it's not at one of

204
00:08:37,140 --> 00:08:43,199
those it I'd one of the addresses

205
00:08:39,599 --> 00:08:44,520
covered by one of those blocks all right

206
00:08:43,200 --> 00:08:46,890
so if you want this talking about is

207
00:08:44,520 --> 00:08:48,209
sorry this talk is not about SS RF so if

208
00:08:46,890 --> 00:08:50,189
you want to know more about that it's a

209
00:08:48,209 --> 00:08:52,319
well-known class of attack I highly

210
00:08:50,190 --> 00:08:54,540
suggest or insight slice they have

211
00:08:52,320 --> 00:08:56,550
pretty good slides

212
00:08:54,540 --> 00:08:59,969
all right another issue that can arise

213
00:08:56,550 --> 00:09:02,640
is unsolicited egress so still again

214
00:08:59,970 --> 00:09:05,310
there's your org there's a public web if

215
00:09:02,640 --> 00:09:07,050
a host gets compromised it has access to

216
00:09:05,310 --> 00:09:08,969
database it has access to other services

217
00:09:07,050 --> 00:09:10,949
such as the message broker there's

218
00:09:08,970 --> 00:09:14,820
nothing I would permit your host one

219
00:09:10,950 --> 00:09:17,310
week so take still trading data so the

220
00:09:14,820 --> 00:09:19,350
solution for that of course you just

221
00:09:17,310 --> 00:09:24,329
give the smallest set of permission to

222
00:09:19,350 --> 00:09:25,680
each service so for example if your API

223
00:09:24,330 --> 00:09:27,480
service does not need to access all

224
00:09:25,680 --> 00:09:31,290
collections in a database just give it a

225
00:09:27,480 --> 00:09:33,360
small set of just give it the least yeah

226
00:09:31,290 --> 00:09:35,719
set of like collections that connect

227
00:09:33,360 --> 00:09:38,580
access just try to restrict permissions

228
00:09:35,720 --> 00:09:42,050
same for all internal services if your

229
00:09:38,580 --> 00:09:46,590
service doesn't need to reach out to two

230
00:09:42,050 --> 00:09:48,719
undetermined addresses or host sorry

231
00:09:46,590 --> 00:09:50,580
only allow your service to talk to the

232
00:09:48,720 --> 00:09:53,520
host you know it's you want to allow it

233
00:09:50,580 --> 00:09:55,170
anyways sorry let me rephrase that only

234
00:09:53,520 --> 00:09:57,360
allow your service to talk to me most

235
00:09:55,170 --> 00:10:02,579
remote host um you know supposed to talk

236
00:09:57,360 --> 00:10:05,970
to one last thing DNS data Rexville it's

237
00:10:02,580 --> 00:10:07,770
been seen in like two talks earlier so

238
00:10:05,970 --> 00:10:09,600
for example let's say we owned the name

239
00:10:07,770 --> 00:10:11,400
server for evil.com

240
00:10:09,600 --> 00:10:12,930
and we try to resolve secret evil

241
00:10:11,400 --> 00:10:16,079
account the name server is gonna be

242
00:10:12,930 --> 00:10:17,880
aware of what secret was so as long as

243
00:10:16,080 --> 00:10:21,690
you have access to the public names as

244
00:10:17,880 --> 00:10:23,220
well as long as your service can access

245
00:10:21,690 --> 00:10:24,570
the public name system you're still

246
00:10:23,220 --> 00:10:26,520
somewhat vulnerable you're still

247
00:10:24,570 --> 00:10:29,160
vulnerable to that so what's the

248
00:10:26,520 --> 00:10:30,660
solution for that well don't don't let

249
00:10:29,160 --> 00:10:34,770
you service talk to the public name

250
00:10:30,660 --> 00:10:36,930
system so now we put many restrictions

251
00:10:34,770 --> 00:10:39,180
like things we should or shouldn't we

252
00:10:36,930 --> 00:10:40,920
sorry we just like said things that we

253
00:10:39,180 --> 00:10:42,989
should or should not do for example this

254
00:10:40,920 --> 00:10:44,579
one which is like hey don't resolve

255
00:10:42,990 --> 00:10:47,280
public names so there's only one

256
00:10:44,580 --> 00:10:51,420
question that can come up what are we

257
00:10:47,280 --> 00:10:52,920
gonna do it's alright so we can look at

258
00:10:51,420 --> 00:10:57,870
existing things so for example there's

259
00:10:52,920 --> 00:10:59,490
IP tables it's great it talks it talks

260
00:10:57,870 --> 00:11:02,280
in in sorry it talks in terms of

261
00:10:59,490 --> 00:11:04,470
addresses but it doesn't know anything

262
00:11:02,280 --> 00:11:07,050
about names and if you restrict

263
00:11:04,470 --> 00:11:08,730
if you try to restrict some like a host

264
00:11:07,050 --> 00:11:10,589
from talking to some

265
00:11:08,730 --> 00:11:12,779
sorry if you try to restrict a host from

266
00:11:10,589 --> 00:11:14,639
talking to some other remote host system

267
00:11:12,779 --> 00:11:15,959
addresses you might just not be able to

268
00:11:14,639 --> 00:11:18,480
talk to some internal services which is

269
00:11:15,959 --> 00:11:20,628
not which might not be what you want dns

270
00:11:18,480 --> 00:11:23,999
mask is great but it does not know about

271
00:11:20,629 --> 00:11:26,100
addresses and so if you want to do

272
00:11:23,999 --> 00:11:28,290
something with both you it would be like

273
00:11:26,100 --> 00:11:30,389
somewhat hard you'd have to find a way

274
00:11:28,290 --> 00:11:31,319
to synchronize actually like I don't

275
00:11:30,389 --> 00:11:34,290
want you I don't want to think about

276
00:11:31,319 --> 00:11:35,699
that you could use a proxy to proxy all

277
00:11:34,290 --> 00:11:38,160
the requests that go to the outside but

278
00:11:35,699 --> 00:11:40,729
if you use a simple proxy there's

279
00:11:38,160 --> 00:11:43,079
nothing that will prevent a proxy from

280
00:11:40,730 --> 00:11:44,910
resolving things that are not accessible

281
00:11:43,079 --> 00:11:49,579
from the outside if the proxy obviously

282
00:11:44,910 --> 00:11:53,100
has access to those so what we need is

283
00:11:49,579 --> 00:11:56,550
do you remember do you remember the good

284
00:11:53,100 --> 00:11:59,610
old phone operator I don't I'm too young

285
00:11:56,550 --> 00:12:01,378
for that but they are what we need we

286
00:11:59,610 --> 00:12:04,589
need to bring them back so let's let's

287
00:12:01,379 --> 00:12:07,559
think of a listing of domain names as

288
00:12:04,589 --> 00:12:12,569
people names and a sorry Peters next

289
00:12:07,559 --> 00:12:15,569
let's think is dom a listing sorry let's

290
00:12:12,569 --> 00:12:17,998
think as domain let's think domain names

291
00:12:15,569 --> 00:12:20,370
are people's name and IP addresses are

292
00:12:17,999 --> 00:12:22,319
phone numbers so we need we need a phone

293
00:12:20,370 --> 00:12:24,569
operator that's gonna ensure that

294
00:12:22,319 --> 00:12:26,910
whenever I'm using this phone to call

295
00:12:24,569 --> 00:12:29,579
another another person that's outside my

296
00:12:26,910 --> 00:12:31,199
company whenever I make this call it's

297
00:12:29,579 --> 00:12:32,729
I'm not actually this operator will

298
00:12:31,199 --> 00:12:34,019
actually figure out that oh I'm actually

299
00:12:32,730 --> 00:12:35,370
trying to call outside it's great I'm

300
00:12:34,019 --> 00:12:39,179
trying to call inside the company it's

301
00:12:35,370 --> 00:12:40,769
bad but also if this operator needs to

302
00:12:39,179 --> 00:12:43,649
know who I am if I'm only allowed to

303
00:12:40,769 --> 00:12:45,870
call a person ABC if I try to call

304
00:12:43,649 --> 00:12:47,759
person D it won't even go and look up

305
00:12:45,870 --> 00:12:50,839
it'sit's nice re its phone number it

306
00:12:47,759 --> 00:12:53,519
will just say no sorry you can't do it

307
00:12:50,839 --> 00:12:56,730
on top of that we want an operator that

308
00:12:53,519 --> 00:12:59,519
when they see something wrong happening

309
00:12:56,730 --> 00:13:01,589
they will just tell the C the police so

310
00:12:59,519 --> 00:13:04,439
they can go and fix a problem yeah

311
00:13:01,589 --> 00:13:07,980
that's a security team basically all

312
00:13:04,439 --> 00:13:09,389
right so our solution for that is smoke

313
00:13:07,980 --> 00:13:11,009
screen it's an open source project is

314
00:13:09,389 --> 00:13:14,639
totally free you can contribute to it if

315
00:13:11,009 --> 00:13:16,019
you want so it's a HTTP an HTTP

316
00:13:14,639 --> 00:13:18,509
connection C I'm going to so basically

317
00:13:16,019 --> 00:13:20,759
I'm gonna expand on all those points in

318
00:13:18,509 --> 00:13:22,200
a few minutes it has a notion of site

319
00:13:20,759 --> 00:13:24,540
identity so

320
00:13:22,200 --> 00:13:27,000
if in those which services is trying to

321
00:13:24,540 --> 00:13:29,339
reach outside it performs the name

322
00:13:27,000 --> 00:13:33,170
lookups with the public name service it

323
00:13:29,339 --> 00:13:36,149
also performs request authorization so

324
00:13:33,170 --> 00:13:37,829
you give it an e an ACL that says oh

325
00:13:36,149 --> 00:13:40,050
this service is allowed to talk to this

326
00:13:37,829 --> 00:13:43,019
remote host and it will basically it's

327
00:13:40,050 --> 00:13:44,849
an allow list it collects some metadata

328
00:13:43,019 --> 00:13:47,040
about the connections alright that are

329
00:13:44,850 --> 00:13:50,730
established and on top of that it does

330
00:13:47,040 --> 00:13:53,849
not decrypt track seek data all right so

331
00:13:50,730 --> 00:13:58,260
let's go who's familiar with HTTP

332
00:13:53,850 --> 00:14:02,610
proxies yeah all right so HTTP proxies

333
00:13:58,260 --> 00:14:04,680
are somewhat simple this sorry the the

334
00:14:02,610 --> 00:14:07,589
internal service will make a request to

335
00:14:04,680 --> 00:14:09,750
the proxy this request will be sent to

336
00:14:07,589 --> 00:14:11,190
the remote host the remote host will

337
00:14:09,750 --> 00:14:14,760
respond to the proxy and the proxy will

338
00:14:11,190 --> 00:14:17,399
respond to the to the source source

339
00:14:14,760 --> 00:14:20,040
service this is really simple there's

340
00:14:17,399 --> 00:14:21,870
one downside to it it's that the proxy

341
00:14:20,040 --> 00:14:25,050
has to be able to read the data from

342
00:14:21,870 --> 00:14:28,410
this HTTP session to be able to figure

343
00:14:25,050 --> 00:14:30,810
out where to connect to so if so it

344
00:14:28,410 --> 00:14:36,959
won't work with encrypted so basically

345
00:14:30,810 --> 00:14:38,819
HTTP now yeah sorry I forgot to put the

346
00:14:36,959 --> 00:14:41,609
next slide okay so now it's HTTP connect

347
00:14:38,820 --> 00:14:43,709
Roxy the way this one works is a bit

348
00:14:41,610 --> 00:14:45,630
different you will send to the proxy the

349
00:14:43,709 --> 00:14:47,569
verb connect you will tell where you

350
00:14:45,630 --> 00:14:49,709
want it to connect as well as the port

351
00:14:47,570 --> 00:14:54,839
and then you can send headers to the

352
00:14:49,709 --> 00:14:56,399
proxy if all right and then once this is

353
00:14:54,839 --> 00:14:57,810
the so basically this is data that the

354
00:14:56,399 --> 00:14:59,160
if you want to identify through the

355
00:14:57,810 --> 00:15:02,880
proxy you could send let's say a

356
00:14:59,160 --> 00:15:05,310
cryptographic proof that's that says

357
00:15:02,880 --> 00:15:07,260
like a yes I'm this this is a proof I am

358
00:15:05,310 --> 00:15:09,420
this service so it could be a great way

359
00:15:07,260 --> 00:15:12,449
to identify your service to the proxy

360
00:15:09,420 --> 00:15:14,640
and then once the headers are done the

361
00:15:12,449 --> 00:15:16,410
proxy will go and try it as it will go

362
00:15:14,640 --> 00:15:18,180
and try to establish a connection if the

363
00:15:16,410 --> 00:15:20,490
connection established is properly it

364
00:15:18,180 --> 00:15:22,410
will go and tell the local the local

365
00:15:20,490 --> 00:15:24,779
service hey it's fine use this

366
00:15:22,410 --> 00:15:26,670
connection as a tunnel for talking to

367
00:15:24,779 --> 00:15:31,199
outside to where you actually requested

368
00:15:26,670 --> 00:15:33,569
to talk all right so it also performs a

369
00:15:31,199 --> 00:15:35,699
request authorization so you can provide

370
00:15:33,569 --> 00:15:37,169
it with an ACL we're going to see one

371
00:15:35,699 --> 00:15:40,410
during a demo you can provide it with an

372
00:15:37,169 --> 00:15:43,049
ACL and put rules into either and force

373
00:15:40,410 --> 00:15:45,209
a report note and for a little bit like

374
00:15:43,049 --> 00:15:48,629
SELinux if a rule is enforced note

375
00:15:45,209 --> 00:15:51,299
anything which breaks the ACL is not

376
00:15:48,629 --> 00:15:53,579
gonna be allowed if and if you put it in

377
00:15:51,299 --> 00:15:55,619
report mode you're still gonna get flags

378
00:15:53,579 --> 00:15:58,738
things are not in the ACL but it's great

379
00:15:55,619 --> 00:16:00,660
for but it's great in order to test out

380
00:15:58,739 --> 00:16:02,639
policies so basically let's say you're

381
00:16:00,660 --> 00:16:04,290
not using anything like smoke screen at

382
00:16:02,639 --> 00:16:05,639
your company right now you could start

383
00:16:04,290 --> 00:16:08,849
using smoke between in a report mode

384
00:16:05,639 --> 00:16:10,859
start collecting the data and once you

385
00:16:08,850 --> 00:16:12,959
feel comfortable you can sorry and now

386
00:16:10,859 --> 00:16:13,980
you can build an ACL with that data that

387
00:16:12,959 --> 00:16:15,660
you collect it and once you feel

388
00:16:13,980 --> 00:16:18,600
comfortable turn that in in force mode

389
00:16:15,660 --> 00:16:22,169
and yeah and now you're a bit more

390
00:16:18,600 --> 00:16:24,899
secure all right so we're gonna look at

391
00:16:22,169 --> 00:16:28,589
an ACL warning or some llamó so I hope

392
00:16:24,899 --> 00:16:29,999
you brought your rulers all right so you

393
00:16:28,589 --> 00:16:33,569
have a list of services and you have a

394
00:16:29,999 --> 00:16:36,899
default rule so name is the name of this

395
00:16:33,569 --> 00:16:38,729
a name of a service project is the name

396
00:16:36,899 --> 00:16:40,859
of the team that's responsible for that

397
00:16:38,730 --> 00:16:42,779
service so if you want to be able to

398
00:16:40,859 --> 00:16:44,459
tell oh yeah this project is owned by

399
00:16:42,779 --> 00:16:46,889
this team and you want to give them

400
00:16:44,459 --> 00:16:49,469
alerts then it's like it's a it's a it's

401
00:16:46,889 --> 00:16:51,299
a final way to do it also you can

402
00:16:49,470 --> 00:16:53,669
provide a list of allowed domains or

403
00:16:51,299 --> 00:16:55,709
addresses there so for example this

404
00:16:53,669 --> 00:16:58,079
would mean that my name service would be

405
00:16:55,709 --> 00:17:01,319
allowed to only reach out to example

406
00:16:58,079 --> 00:17:05,158
outcome and everything that is like

407
00:17:01,319 --> 00:17:09,480
every sub domain from example.com yep so

408
00:17:05,159 --> 00:17:11,100
it's it's pretty simple so smokescreen

409
00:17:09,480 --> 00:17:12,329
has a notion of site identity one thing

410
00:17:11,099 --> 00:17:14,279
one thing I didn't tell you is that

411
00:17:12,329 --> 00:17:16,740
small string can be used as a either as

412
00:17:14,279 --> 00:17:19,109
a binary or is the library if you use it

413
00:17:16,740 --> 00:17:21,539
as a binary it will provide you with a

414
00:17:19,109 --> 00:17:23,188
SS RF protection basically everything

415
00:17:21,539 --> 00:17:24,689
that you try to proxy to it to it it

416
00:17:23,189 --> 00:17:27,899
will just ensure that you're not trying

417
00:17:24,689 --> 00:17:31,190
to connect to some to a host that is in

418
00:17:27,898 --> 00:17:34,260
the local sorry in a special IP IP range

419
00:17:31,190 --> 00:17:35,820
but if you use it as a library and the

420
00:17:34,260 --> 00:17:37,379
config in a configuration item that

421
00:17:35,820 --> 00:17:39,450
we're gonna see in the demo you can

422
00:17:37,380 --> 00:17:41,929
provide it with a function that takes a

423
00:17:39,450 --> 00:17:44,700
request and that returns a service name

424
00:17:41,929 --> 00:17:46,019
yeah so basically once you return the

425
00:17:44,700 --> 00:17:47,309
service name smoke screen just runs with

426
00:17:46,019 --> 00:17:48,990
that and assumes that the connection was

427
00:17:47,309 --> 00:17:53,190
established by by that service

428
00:17:48,990 --> 00:17:56,309
um performs names name name lookups so

429
00:17:53,190 --> 00:17:58,650
whenever it receives the proxy requests

430
00:17:56,309 --> 00:18:00,899
it will be able to extract what is the

431
00:17:58,650 --> 00:18:04,800
remote host and and handle that properly

432
00:18:00,900 --> 00:18:07,110
so there's no URL part it limits you

433
00:18:04,800 --> 00:18:10,710
well parse your abuse so you are partial

434
00:18:07,110 --> 00:18:12,360
partial abuse or when a URL will which

435
00:18:10,710 --> 00:18:14,940
is s been forge will be interpreted

436
00:18:12,360 --> 00:18:16,709
differently by different parsers so you

437
00:18:14,940 --> 00:18:18,750
could be in your application logic

438
00:18:16,710 --> 00:18:20,790
taking a URL making sure oh yeah its

439
00:18:18,750 --> 00:18:23,280
reach uh it's this host name in it and

440
00:18:20,790 --> 00:18:26,370
you pass it to let's say you pass it to

441
00:18:23,280 --> 00:18:28,050
another you pass it to another step and

442
00:18:26,370 --> 00:18:29,850
the step passes it to curl crows gonna

443
00:18:28,050 --> 00:18:32,370
parse it but my parse it differently and

444
00:18:29,850 --> 00:18:33,600
you you in in the end you will not be

445
00:18:32,370 --> 00:18:36,419
reaching out to the host you were

446
00:18:33,600 --> 00:18:38,550
expecting because of this parse parser

447
00:18:36,420 --> 00:18:41,730
abuse also one thing which is nice is

448
00:18:38,550 --> 00:18:44,190
there some one I DNA rule set across the

449
00:18:41,730 --> 00:18:46,440
stack so I DNA is the International

450
00:18:44,190 --> 00:18:48,929
internationalized domain names in

451
00:18:46,440 --> 00:18:51,330
applications so for example sorry it's

452
00:18:48,929 --> 00:18:53,760
for URLs that contain characters that

453
00:18:51,330 --> 00:18:55,350
are not ASCII so anything should like

454
00:18:53,760 --> 00:18:56,460
anything which is unicode we need to

455
00:18:55,350 --> 00:18:59,520
find out we need to have a way to

456
00:18:56,460 --> 00:19:02,309
translate it to ask you only URLs so

457
00:18:59,520 --> 00:19:04,860
since we're handing names at this step

458
00:19:02,309 --> 00:19:07,260
we know that all the names across our

459
00:19:04,860 --> 00:19:08,850
stack are gonna be handled with the same

460
00:19:07,260 --> 00:19:12,510
rule which is great because now in the

461
00:19:08,850 --> 00:19:17,399
ACL which is just like write this this

462
00:19:12,510 --> 00:19:18,960
final the ASCII only domain name also it

463
00:19:17,400 --> 00:19:20,880
won't resolve the name it should not for

464
00:19:18,960 --> 00:19:24,960
because of the the step we saw

465
00:19:20,880 --> 00:19:27,630
previously yes a this is actually what

466
00:19:24,960 --> 00:19:28,950
prevents DNS data expels if it knows

467
00:19:27,630 --> 00:19:30,480
that a whole should not be reaching out

468
00:19:28,950 --> 00:19:31,950
to if it's trying to reach to a domain

469
00:19:30,480 --> 00:19:33,630
it should not then of course it's not

470
00:19:31,950 --> 00:19:37,500
going to try to go and get the address

471
00:19:33,630 --> 00:19:39,780
the address for the sauce alright so one

472
00:19:37,500 --> 00:19:42,300
last thing it does not decrypt proxy

473
00:19:39,780 --> 00:19:44,790
data this is super important it's

474
00:19:42,300 --> 00:19:47,940
important because if a proxy box just

475
00:19:44,790 --> 00:19:53,490
gets compromised then the attackers

476
00:19:47,940 --> 00:19:55,800
don't get all the traffic yeah so there

477
00:19:53,490 --> 00:19:58,320
can still be a TLS session from the

478
00:19:55,800 --> 00:20:01,379
source service to the remote host and

479
00:19:58,320 --> 00:20:02,050
the proxy won't be able to do to

480
00:20:01,380 --> 00:20:07,210
eavesdrop

481
00:20:02,050 --> 00:20:10,300
on it so yeah it yeah so where the smoke

482
00:20:07,210 --> 00:20:12,580
screen fit in in the infrastructure so

483
00:20:10,300 --> 00:20:14,530
you have your services services that can

484
00:20:12,580 --> 00:20:16,990
talk to the internet in any ways there's

485
00:20:14,530 --> 00:20:19,899
a layer of smoke there sorry there's a

486
00:20:16,990 --> 00:20:22,300
layer of smoke screen servers or proxy

487
00:20:19,900 --> 00:20:25,630
boxes and then there's the internet so

488
00:20:22,300 --> 00:20:26,310
the only way is to go through smoke

489
00:20:25,630 --> 00:20:28,360
screen

490
00:20:26,310 --> 00:20:32,220
don't you 3G Internet is to go through

491
00:20:28,360 --> 00:20:35,169
smoke screen so let's see how we would

492
00:20:32,220 --> 00:20:37,360
house we would reach out to the Internet

493
00:20:35,170 --> 00:20:39,700
using smoke screen so here's your

494
00:20:37,360 --> 00:20:42,580
service it's going to connect to the to

495
00:20:39,700 --> 00:20:44,680
this to smoke screen and then it's going

496
00:20:42,580 --> 00:20:45,399
to say hey please let me reach out to

497
00:20:44,680 --> 00:20:48,490
example.com

498
00:20:45,400 --> 00:20:50,410
I'm service X ideally ideally provide a

499
00:20:48,490 --> 00:20:52,480
cryptographic proof otherwise like if I

500
00:20:50,410 --> 00:20:55,210
just provide a string giving saying oh

501
00:20:52,480 --> 00:20:56,500
yeah that's my service name then any

502
00:20:55,210 --> 00:20:58,990
service could impersonate any other

503
00:20:56,500 --> 00:21:00,700
service so that would be pretty bad so a

504
00:20:58,990 --> 00:21:02,890
good way to do it would be to talk with

505
00:21:00,700 --> 00:21:06,100
smoochie a mutual TLS that's actually

506
00:21:02,890 --> 00:21:08,500
what we do or if you'd like to as I said

507
00:21:06,100 --> 00:21:10,959
earlier user JWT that would be fine as

508
00:21:08,500 --> 00:21:14,760
long as you set expiration and have a

509
00:21:10,960 --> 00:21:16,630
way to be vote um so once this is done

510
00:21:14,760 --> 00:21:19,090
smoking we'll use a function that you

511
00:21:16,630 --> 00:21:21,670
can prove that you that you did provide

512
00:21:19,090 --> 00:21:23,740
that will extract the service sorry the

513
00:21:21,670 --> 00:21:26,530
service name from the request once it's

514
00:21:23,740 --> 00:21:28,930
done it will check with the ACL hey is

515
00:21:26,530 --> 00:21:30,670
this actually good thing if it is great

516
00:21:28,930 --> 00:21:31,900
it's gonna continue if it's not then

517
00:21:30,670 --> 00:21:35,580
it's just going to sell tell the

518
00:21:31,900 --> 00:21:39,760
requesting service sorry I can't do that

519
00:21:35,580 --> 00:21:43,230
so once this is okay it's gonna do the

520
00:21:39,760 --> 00:21:49,570
name is sorry the the address resolution

521
00:21:43,230 --> 00:21:51,580
if yeah basically and yeah and then it

522
00:21:49,570 --> 00:21:54,280
from the resolution it will get an

523
00:21:51,580 --> 00:21:55,540
address and it will just check if the

524
00:21:54,280 --> 00:21:57,160
address belongs in one of the cyber

525
00:21:55,540 --> 00:21:58,720
blocks that we saw earlier if it does

526
00:21:57,160 --> 00:22:01,600
then it's gonna say it to tell the

527
00:21:58,720 --> 00:22:03,910
service sorry can't do if it if it's not

528
00:22:01,600 --> 00:22:05,260
in those blocks then it will move on it

529
00:22:03,910 --> 00:22:07,000
will try to establish a connection with

530
00:22:05,260 --> 00:22:09,400
the remote service if this is successful

531
00:22:07,000 --> 00:22:11,920
it will tell the service sure go ahead

532
00:22:09,400 --> 00:22:13,900
use the connection that we established

533
00:22:11,920 --> 00:22:15,370
earlier and use it to talk to the remote

534
00:22:13,900 --> 00:22:17,640
service so basically the connection

535
00:22:15,370 --> 00:22:22,110
downgrades

536
00:22:17,640 --> 00:22:22,110
yeah so it's time for the demo right

537
00:22:26,880 --> 00:22:51,760
this is where everything is supposed to

538
00:22:29,080 --> 00:22:53,290
go bad did you do all right all right so

539
00:22:51,760 --> 00:22:55,900
in order to use smokescreen as as simple

540
00:22:53,290 --> 00:22:59,040
as this RF protection you can just clone

541
00:22:55,900 --> 00:22:59,040
smokescreen build it

542
00:22:59,080 --> 00:23:05,679
so here it's can you actually see it's a

543
00:23:04,360 --> 00:23:09,959
bit small all right I'll just like go in

544
00:23:05,680 --> 00:23:13,870
every window and just like that's better

545
00:23:09,960 --> 00:23:14,770
okay so you can just like build it and

546
00:23:13,870 --> 00:23:18,189
then start using it

547
00:23:14,770 --> 00:23:20,139
smokescreen speaks stats D so whenever

548
00:23:18,190 --> 00:23:22,480
some so this is the way we collect

549
00:23:20,140 --> 00:23:25,150
metrics it's pretty great so whenever

550
00:23:22,480 --> 00:23:27,940
there's a reason I was an image solution

551
00:23:25,150 --> 00:23:30,370
which is successful or whether the ACL

552
00:23:27,940 --> 00:23:31,780
is so when our connection is being

553
00:23:30,370 --> 00:23:34,209
denied we will just increase a counter

554
00:23:31,780 --> 00:23:38,590
and we will be alerted based on that so

555
00:23:34,210 --> 00:23:41,560
I just started small screen locally I'm

556
00:23:38,590 --> 00:23:44,970
just gonna yeah and I'm also gonna

557
00:23:41,560 --> 00:23:50,980
listen locally on UDP 125 sorry 8 125

558
00:23:44,970 --> 00:23:53,020
and all right what else so I'm just

559
00:23:50,980 --> 00:23:56,230
gonna try to use Kerr up and try to

560
00:23:53,020 --> 00:23:58,570
reach out to Google Doc um this should

561
00:23:56,230 --> 00:24:00,400
work so basically here dash X means I'm

562
00:23:58,570 --> 00:24:01,600
gonna use a proxy which is like located

563
00:24:00,400 --> 00:24:04,660
there and this is where I want to reach

564
00:24:01,600 --> 00:24:09,010
out don't matter it sorry don't don't

565
00:24:04,660 --> 00:24:11,020
mind the header for the moment so let's

566
00:24:09,010 --> 00:24:12,700
look at that it was actually it was

567
00:24:11,020 --> 00:24:16,240
successful here we got a response from

568
00:24:12,700 --> 00:24:17,800
Google so you see at the top there

569
00:24:16,240 --> 00:24:20,230
there's a connect and then the

570
00:24:17,800 --> 00:24:22,240
destination and the port this is what

571
00:24:20,230 --> 00:24:25,420
this is what was sent to the proxy the

572
00:24:22,240 --> 00:24:27,150
proxy got that and then the proxies to

573
00:24:25,420 --> 00:24:29,850
establish the connection with Google and

574
00:24:27,150 --> 00:24:32,370
then yeah and then

575
00:24:29,850 --> 00:24:34,860
once the connection was established curl

576
00:24:32,370 --> 00:24:38,250
could talk directly to the server that

577
00:24:34,860 --> 00:24:44,429
the remote host so this is great but now

578
00:24:38,250 --> 00:24:49,200
we're talking about SS RF so this

579
00:24:44,430 --> 00:24:52,350
results to 10.4 as we saw earlier yep

580
00:24:49,200 --> 00:24:54,210
so smokescreen just said destination

581
00:24:52,350 --> 00:24:56,550
address is standard Ola roll at four so

582
00:24:54,210 --> 00:24:59,370
it's a private range sorry we can do

583
00:24:56,550 --> 00:25:01,909
that anybody has an address that we

584
00:24:59,370 --> 00:25:04,889
would like to try for fine

585
00:25:01,910 --> 00:25:09,210
no all right I'll just like do locals

586
00:25:04,890 --> 00:25:10,860
then yeah so it was denied yeah it's not

587
00:25:09,210 --> 00:25:11,220
a global unicast sorry it's not gonna

588
00:25:10,860 --> 00:25:12,719
work

589
00:25:11,220 --> 00:25:14,880
so this is great so this is like truck

590
00:25:12,720 --> 00:25:20,010
sorry this is machina is a simple proxy

591
00:25:14,880 --> 00:25:22,230
but now we will quickly extend

592
00:25:20,010 --> 00:25:24,720
smokescreen so in order to use motion as

593
00:25:22,230 --> 00:25:27,750
a library it's super simple you just

594
00:25:24,720 --> 00:25:32,070
have to basically import the proper

595
00:25:27,750 --> 00:25:34,470
packages build a new create create a new

596
00:25:32,070 --> 00:25:37,050
configuration and then pass it the

597
00:25:34,470 --> 00:25:40,020
function that you want to use for this

598
00:25:37,050 --> 00:25:41,850
request to service length so here we're

599
00:25:40,020 --> 00:25:44,400
just gonna extract the header X

600
00:25:41,850 --> 00:25:46,230
application role and if there's a value

601
00:25:44,400 --> 00:25:49,440
for if there's a value for it return the

602
00:25:46,230 --> 00:25:50,550
first one that we see if there's and if

603
00:25:49,440 --> 00:25:52,350
there's nothing just return an empty

604
00:25:50,550 --> 00:25:55,050
string empty string is considered as the

605
00:25:52,350 --> 00:25:56,610
default service and here's our ACL that

606
00:25:55,050 --> 00:25:58,350
we're gonna use so basically we're gonna

607
00:25:56,610 --> 00:26:00,240
have a project a call sorry we're gonna

608
00:25:58,350 --> 00:26:02,520
have a service called memes means can

609
00:26:00,240 --> 00:26:04,410
only reach out to imager because that

610
00:26:02,520 --> 00:26:05,790
that makes sense there's gonna be

611
00:26:04,410 --> 00:26:09,000
another service called web books which

612
00:26:05,790 --> 00:26:11,159
can talk to everything and the default

613
00:26:09,000 --> 00:26:13,320
rule for other and added sorry

614
00:26:11,160 --> 00:26:15,930
unidentified sir unidentified services

615
00:26:13,320 --> 00:26:17,760
it's gonna be enforced with no list of

616
00:26:15,930 --> 00:26:23,060
hosts so basically can't talk to

617
00:26:17,760 --> 00:26:26,010
anything so let's go and start this one

618
00:26:23,060 --> 00:26:30,750
so basically oh yeah I forgot to show

619
00:26:26,010 --> 00:26:33,300
you where's the UDP thing oh yeah so

620
00:26:30,750 --> 00:26:38,420
basically this is a stats D oh my god

621
00:26:33,300 --> 00:26:38,419
it's so small yeah oops

622
00:26:41,160 --> 00:26:50,080
yeah all right so basically those events

623
00:26:47,200 --> 00:26:54,610
are basically in a stats D format and

624
00:26:50,080 --> 00:26:58,480
they were triggered whenever we tried to

625
00:26:54,610 --> 00:27:01,449
reach out to ho so for example here - -

626
00:26:58,480 --> 00:27:02,920
- I'm just trying to attempt so

627
00:27:01,450 --> 00:27:06,010
basically here we see we had a die

628
00:27:02,920 --> 00:27:07,930
denied private range we had an adenine

629
00:27:06,010 --> 00:27:10,060
not global so this is great because if

630
00:27:07,930 --> 00:27:13,270
you want to set alerting on that you can

631
00:27:10,060 --> 00:27:20,290
just yeah you can just do that all right

632
00:27:13,270 --> 00:27:24,240
but the ACLU get more information so all

633
00:27:20,290 --> 00:27:27,040
right where is it

634
00:27:24,240 --> 00:27:28,780
all right so let's start this smoke

635
00:27:27,040 --> 00:27:30,010
screen which was used as a library with

636
00:27:28,780 --> 00:27:31,750
this function to extract the service

637
00:27:30,010 --> 00:27:33,820
name from the header don't do that it's

638
00:27:31,750 --> 00:27:37,720
not safe don't do that use some as I

639
00:27:33,820 --> 00:27:40,300
mentioned earlier use something that

640
00:27:37,720 --> 00:27:41,260
provides a cryptographic proof that you

641
00:27:40,300 --> 00:27:44,980
know something that you can't tamper

642
00:27:41,260 --> 00:27:48,370
with all right so know it's there it's

643
00:27:44,980 --> 00:27:53,160
listening now we're using we're saying

644
00:27:48,370 --> 00:27:53,159
that we're sorry that's not working so

645
00:27:53,790 --> 00:28:05,170
let's try to make the same request to a

646
00:27:59,020 --> 00:28:09,670
legitimate host so let's try to reach

647
00:28:05,170 --> 00:28:12,280
out for Google as the service name means

648
00:28:09,670 --> 00:28:14,260
as we saw earlier and the ACL service

649
00:28:12,280 --> 00:28:21,940
means can only talk to the imager so

650
00:28:14,260 --> 00:28:24,040
let's all right yeah so basically we got

651
00:28:21,940 --> 00:28:25,900
this roll is not allowed to access this

652
00:28:24,040 --> 00:28:32,290
host which makes total sense and now if

653
00:28:25,900 --> 00:28:35,050
we try to reach out - yeah this did work

654
00:28:32,290 --> 00:28:36,490
the network is flow so yeah and now we

655
00:28:35,050 --> 00:28:39,970
got the response from imager so

656
00:28:36,490 --> 00:28:42,220
basically it's a neat way of its analyst

657
00:28:39,970 --> 00:28:46,750
it's a neat way to restrict what

658
00:28:42,220 --> 00:28:49,660
services can talk - all right let's go

659
00:28:46,750 --> 00:28:53,380
back to the slides

660
00:28:49,660 --> 00:28:53,380
[Music]

661
00:28:54,340 --> 00:28:57,520
sure about that

662
00:28:59,320 --> 00:29:06,980
really

663
00:29:01,150 --> 00:29:11,929
okay great so to conclude smokescreen is

664
00:29:06,980 --> 00:29:14,120
our answer to both SS RF and data X

665
00:29:11,929 --> 00:29:16,760
fills it's not perfect but it can

666
00:29:14,120 --> 00:29:22,789
definitely reduce the blast radius of a

667
00:29:16,760 --> 00:29:24,950
compromise yeah also one one point which

668
00:29:22,789 --> 00:29:28,129
is one other side effect of using small

669
00:29:24,950 --> 00:29:30,770
screen is since there's only one tier of

670
00:29:28,130 --> 00:29:32,539
smoke screen hosts we can provide stable

671
00:29:30,770 --> 00:29:34,789
IPS for our partners if they want to

672
00:29:32,539 --> 00:29:37,610
ensure that hey we're gonna receive Web

673
00:29:34,789 --> 00:29:39,250
books from from stripe and they want to

674
00:29:37,610 --> 00:29:43,010
make sure that it's from a certain IP

675
00:29:39,250 --> 00:29:47,510
that we can provide them with a with IP

676
00:29:43,010 --> 00:29:50,570
ranges yep so I want to say special

677
00:29:47,510 --> 00:29:52,580
thanks to Ryan one of my co-workers that

678
00:29:50,570 --> 00:29:54,590
will that will also work for you heavily

679
00:29:52,580 --> 00:29:57,139
on smokescreen and the team for all the

680
00:29:54,590 --> 00:29:58,820
input I want to I want to say thanks to

681
00:29:57,140 --> 00:30:01,490
Kristina for lending me your tablet so I

682
00:29:58,820 --> 00:30:03,860
can do so I could draw no slides ritual

683
00:30:01,490 --> 00:30:07,309
photo mentoring as well as other smoke

684
00:30:03,860 --> 00:30:08,629
screen contributors so this is a QR for

685
00:30:07,309 --> 00:30:11,450
the slides if you're ever interested in

686
00:30:08,630 --> 00:30:13,880
them I would like to have your feedback

687
00:30:11,450 --> 00:30:17,750
on this presentation and as well on

688
00:30:13,880 --> 00:30:19,010
small screen if you think that smoke

689
00:30:17,750 --> 00:30:21,470
screen is applicable in your

690
00:30:19,010 --> 00:30:23,929
organization we'd like to know and also

691
00:30:21,470 --> 00:30:26,149
oh yeah I also forgot to say thank you

692
00:30:23,929 --> 00:30:27,799
strike first shipping here that is great

693
00:30:26,149 --> 00:30:34,489
I appreciate that yeah

694
00:30:27,799 --> 00:30:39,710
anybody has questions oh that's just the

695
00:30:34,490 --> 00:30:41,210
way we do things I guess that what you

696
00:30:39,710 --> 00:30:43,570
could do is have a local sidecar for

697
00:30:41,210 --> 00:30:47,539
aggregation and then just present a

698
00:30:43,570 --> 00:30:49,520
prometheus endpoint so it's not a big

699
00:30:47,539 --> 00:30:51,879
deal it's I think that's the work of

700
00:30:49,520 --> 00:30:51,879
also

701
00:30:59,290 --> 00:31:03,260
yes actually the way we use into

702
00:31:01,610 --> 00:31:07,340
internally is in the highly available

703
00:31:03,260 --> 00:31:09,590
way one host will have multiple solution

704
00:31:07,340 --> 00:31:12,320
instances and whenever we want to roll

705
00:31:09,590 --> 00:31:13,939
out let's say a new a new ACL we make

706
00:31:12,320 --> 00:31:15,169
sure that we drain the connections from

707
00:31:13,940 --> 00:31:17,060
every of those hosts and they get

708
00:31:15,170 --> 00:31:18,230
replaced with the new the new ones with

709
00:31:17,060 --> 00:31:22,700
the new version or the new configuration

710
00:31:18,230 --> 00:31:26,300
so yes there it has to be deployed in a

711
00:31:22,700 --> 00:31:57,860
highly available manner otherwise you're

712
00:31:26,300 --> 00:31:59,240
gonna have service interruption no you

713
00:31:57,860 --> 00:32:02,750
have to extend it and provide it with a

714
00:31:59,240 --> 00:32:05,570
function but it should be somewhat

715
00:32:02,750 --> 00:32:08,710
simple like internally or the way we use

716
00:32:05,570 --> 00:32:12,020
it it's like a lines or something

717
00:32:08,710 --> 00:32:14,570
basically since we talked to since every

718
00:32:12,020 --> 00:32:17,150
machine as a machine client sorry it has

719
00:32:14,570 --> 00:32:19,580
a client sir would you we from the

720
00:32:17,150 --> 00:32:21,710
request you can access the TLX the TLS

721
00:32:19,580 --> 00:32:25,610
context for the session and we look at

722
00:32:21,710 --> 00:32:27,320
the client sort so I mean of course you

723
00:32:25,610 --> 00:32:29,120
have to implement it yourself but it's

724
00:32:27,320 --> 00:32:31,370
it's not like it's eight line up like

725
00:32:29,120 --> 00:32:35,060
eight lines of codes and get it you can

726
00:32:31,370 --> 00:32:38,959
get it reviewed by peers and I that that

727
00:32:35,060 --> 00:32:42,139
should be sufficient yes I think does

728
00:32:38,960 --> 00:32:43,660
answer the question yeah thank you any

729
00:32:42,140 --> 00:32:47,330
other question

730
00:32:43,660 --> 00:32:50,089
yay we're done thank you so much

731
00:32:47,330 --> 00:32:50,089
[Applause]

