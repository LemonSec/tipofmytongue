1
00:00:04,180 --> 00:00:18,830
so required

2
00:00:15,950 --> 00:00:25,159
exploitation and when they introduce a

3
00:00:18,830 --> 00:00:26,150
new tool which is so if you didn't

4
00:00:25,159 --> 00:00:28,130
through about myself

5
00:00:26,150 --> 00:00:31,970
I'm Alicia students and I love Jackie

6
00:00:28,130 --> 00:00:34,940
jr. and information system security I'm

7
00:00:31,970 --> 00:00:37,730
from Montreal and I'm also the research

8
00:00:34,940 --> 00:00:40,519
intern at the MFA Financial Regulator

9
00:00:37,730 --> 00:00:44,559
I'm now working at decentralized order

10
00:00:40,519 --> 00:00:47,750
books and I've given talk and FC ETS

11
00:00:44,559 --> 00:00:50,870
Lucien and Corey affecting society and

12
00:00:47,750 --> 00:00:54,350
I'm doing research on blockchain and in

13
00:00:50,870 --> 00:00:58,428
tech tennis and model and I'm doing also

14
00:00:54,350 --> 00:01:00,739
usable security stuff so the yeah the

15
00:00:58,429 --> 00:01:03,260
talk today is about a paper that we just

16
00:01:00,739 --> 00:01:06,950
published at last year's FC conference

17
00:01:03,260 --> 00:01:09,590
and here's the outline I'm gonna go

18
00:01:06,950 --> 00:01:12,740
through a PKI introduction very briefly

19
00:01:09,590 --> 00:01:15,530
we talk about the existing issues in a

20
00:01:12,740 --> 00:01:17,810
PKI and I'm gonna show you the empirical

21
00:01:15,530 --> 00:01:21,110
study that I did on the CIA ecosystem

22
00:01:17,810 --> 00:01:23,990
and because of the issues that we found

23
00:01:21,110 --> 00:01:26,299
there we moved into the blockchain I'll

24
00:01:23,990 --> 00:01:27,949
tell you why and I give you the

25
00:01:26,299 --> 00:01:30,460
introduction to the blockchain and then

26
00:01:27,950 --> 00:01:33,140
ethereum blockchain more specific and

27
00:01:30,460 --> 00:01:35,539
the new solution is called as al is a

28
00:01:33,140 --> 00:01:37,009
decentralized application and at the end

29
00:01:35,540 --> 00:01:38,600
I do the performance and security

30
00:01:37,009 --> 00:01:43,250
evaluation and then we have the future

31
00:01:38,600 --> 00:01:46,429
works so what is HTTP we had a few talk

32
00:01:43,250 --> 00:01:50,119
and that they talked about like TCP and

33
00:01:46,430 --> 00:01:51,439
SSL it's like the protocol that we all

34
00:01:50,119 --> 00:01:53,750
use in our daily lives

35
00:01:51,439 --> 00:01:56,000
in our daily communication to secure the

36
00:01:53,750 --> 00:01:58,369
connection to the web servers that we

37
00:01:56,000 --> 00:02:00,770
are visiting over the web like in our

38
00:01:58,369 --> 00:02:03,079
daily life so this protocol provides

39
00:02:00,770 --> 00:02:05,210
message integrity confidentiality and

40
00:02:03,079 --> 00:02:07,038
the server authentication the server

41
00:02:05,210 --> 00:02:09,049
authentication itself relies on a

42
00:02:07,039 --> 00:02:11,090
client's ability to obtain the public

43
00:02:09,050 --> 00:02:13,430
key which is bound to the server that we

44
00:02:11,090 --> 00:02:14,200
are visiting and in order to provide

45
00:02:13,430 --> 00:02:16,870
that

46
00:02:14,200 --> 00:02:18,910
current whip CI model relies on a like

47
00:02:16,870 --> 00:02:21,160
some businesses or companies called

48
00:02:18,910 --> 00:02:24,190
certificate authorities or the CAS and

49
00:02:21,160 --> 00:02:27,069
they're basically doing three steps and

50
00:02:24,190 --> 00:02:29,319
a paper they receive certificate request

51
00:02:27,069 --> 00:02:31,780
from domain names from everybody doesn't

52
00:02:29,319 --> 00:02:33,369
matter who and the most important step

53
00:02:31,780 --> 00:02:35,350
is to verify the ownership of these

54
00:02:33,370 --> 00:02:36,910
domain names they have to make sure the

55
00:02:35,350 --> 00:02:39,430
person who's asking for a certificate

56
00:02:36,910 --> 00:02:41,109
for that specific domain name is the

57
00:02:39,430 --> 00:02:43,750
real owner of that domain is the

58
00:02:41,110 --> 00:02:45,459
authoritative party and at the end once

59
00:02:43,750 --> 00:02:47,850
the verification is done they issued a

60
00:02:45,459 --> 00:02:50,590
certificate for the domain name and by

61
00:02:47,850 --> 00:02:52,329
issuing certificate we basically mean

62
00:02:50,590 --> 00:02:54,549
they bind a public key to that domain

63
00:02:52,330 --> 00:02:56,110
name of course there's a lot more in a

64
00:02:54,549 --> 00:03:01,000
certificate but this is the most

65
00:02:56,110 --> 00:03:02,260
important thing so CAS have issues the

66
00:03:01,000 --> 00:03:04,569
first one is they have been targeted

67
00:03:02,260 --> 00:03:05,470
like focused of targeted attack during

68
00:03:04,569 --> 00:03:07,630
the last few years

69
00:03:05,470 --> 00:03:10,750
for example Komodo and diginotar they

70
00:03:07,630 --> 00:03:12,819
were hacked in 2011 and attackers were

71
00:03:10,750 --> 00:03:14,380
able to issue fixed certificate for

72
00:03:12,819 --> 00:03:16,298
top-level domains such as Google and

73
00:03:14,380 --> 00:03:17,980
Yahoo so in that case all of the

74
00:03:16,299 --> 00:03:20,079
communications from the client to those

75
00:03:17,980 --> 00:03:22,690
web servers were just intercepted by the

76
00:03:20,079 --> 00:03:24,310
attackers which is very bad the other

77
00:03:22,690 --> 00:03:27,040
one is the number of CS has exploded

78
00:03:24,310 --> 00:03:28,810
this is because root CAS can delegate

79
00:03:27,040 --> 00:03:30,548
the power of issuing certificate to the

80
00:03:28,810 --> 00:03:33,220
intermediate ones without anyone knowing

81
00:03:30,549 --> 00:03:36,489
so we don't really know how many of CAS

82
00:03:33,220 --> 00:03:38,769
now exist on the web it's really like

83
00:03:36,489 --> 00:03:40,930
it's hard to say except for scanning the

84
00:03:38,769 --> 00:03:43,180
entire web and we know very little about

85
00:03:40,930 --> 00:03:45,250
them because there has not been a lot of

86
00:03:43,180 --> 00:03:46,900
research done and all of these CAS are

87
00:03:45,250 --> 00:03:48,489
working like black box yeah they're

88
00:03:46,900 --> 00:03:50,530
saying yeah we have three steps you

89
00:03:48,489 --> 00:03:53,470
register you fill out a form and then

90
00:03:50,530 --> 00:03:55,150
they verify but the real reality is that

91
00:03:53,470 --> 00:03:57,519
they're not always doing the thing that

92
00:03:55,150 --> 00:03:59,290
they're saying and the last one is as

93
00:03:57,519 --> 00:04:01,299
I've mentioned the intermediate CAS are

94
00:03:59,290 --> 00:04:03,010
invisible there's no way of knowing how

95
00:04:01,299 --> 00:04:04,630
many of them are there what are the

96
00:04:03,010 --> 00:04:06,640
names what are their certificate

97
00:04:04,630 --> 00:04:09,549
practice statement except for scanning

98
00:04:06,640 --> 00:04:11,529
the entire web so what did we do was

99
00:04:09,549 --> 00:04:13,530
enumerate all these trusted companies

100
00:04:11,530 --> 00:04:16,120
why do I call them companies because

101
00:04:13,530 --> 00:04:18,250
they're basically companies they're like

102
00:04:16,120 --> 00:04:21,039
issuing certificates to the public

103
00:04:18,250 --> 00:04:23,169
directly and we formulate a detailed

104
00:04:21,039 --> 00:04:25,900
documentation of the existing validation

105
00:04:23,169 --> 00:04:27,880
mechanics and we started designing and

106
00:04:25,900 --> 00:04:30,159
implementing a decentralized PK

107
00:04:27,880 --> 00:04:32,350
a naming system for the web on the

108
00:04:30,160 --> 00:04:34,210
second blockchain so the first step is

109
00:04:32,350 --> 00:04:36,970
to identify all the existing CAS

110
00:04:34,210 --> 00:04:40,780
I got a short list I got a list actually

111
00:04:36,970 --> 00:04:43,210
from Microsoft Windows Apple and Mozilla

112
00:04:40,780 --> 00:04:44,739
all the route CAS and after merging all

113
00:04:43,210 --> 00:04:46,239
these data and collapsing different

114
00:04:44,740 --> 00:04:49,510
identities for the same CAS

115
00:04:46,240 --> 00:04:51,430
I got a short list up to 259 unique

116
00:04:49,510 --> 00:04:52,539
route CAS and I did the same for

117
00:04:51,430 --> 00:04:54,580
intermediate CAS

118
00:04:52,540 --> 00:04:57,640
except for I because as I've mentioned

119
00:04:54,580 --> 00:04:59,800
are invisible so I used the other major

120
00:04:57,640 --> 00:05:01,630
research project AFF see map and

121
00:04:59,800 --> 00:05:04,570
certificate transparency from Google and

122
00:05:01,630 --> 00:05:08,409
I got a shortlist of 446 unique

123
00:05:04,570 --> 00:05:10,840
intermediate CAS so we have around 700

124
00:05:08,410 --> 00:05:12,730
route and intermediate CAS we want to

125
00:05:10,840 --> 00:05:14,169
identify the companies those wanted

126
00:05:12,730 --> 00:05:17,590
issue certificate because there are a

127
00:05:14,170 --> 00:05:19,420
lot of them that they don't issue and so

128
00:05:17,590 --> 00:05:21,369
to do that I went to each and every one

129
00:05:19,420 --> 00:05:24,730
of them manually I researched and I

130
00:05:21,370 --> 00:05:27,040
found that only 200 to that 223

131
00:05:24,730 --> 00:05:30,430
companies issue certificate to the

132
00:05:27,040 --> 00:05:32,230
public the rest either they issued the

133
00:05:30,430 --> 00:05:35,380
certificates internally or they're

134
00:05:32,230 --> 00:05:37,270
managed by different CAS and I have

135
00:05:35,380 --> 00:05:40,180
mentioned that these domain controller

136
00:05:37,270 --> 00:05:42,760
validation they are like black box so no

137
00:05:40,180 --> 00:05:46,060
one really knows how is it so what I did

138
00:05:42,760 --> 00:05:47,770
was I created my own website using the

139
00:05:46,060 --> 00:05:51,040
domain this was a workshop registration

140
00:05:47,770 --> 00:05:53,440
website so a user would go there create

141
00:05:51,040 --> 00:05:55,030
an account pay for the workshop so it

142
00:05:53,440 --> 00:05:56,920
would make sense for the CA that I

143
00:05:55,030 --> 00:05:59,169
really need a certificate for my domain

144
00:05:56,920 --> 00:06:01,270
and I started buying a regular one year

145
00:05:59,170 --> 00:06:03,940
single domain certificate from each and

146
00:06:01,270 --> 00:06:06,520
every companies that we got so the

147
00:06:03,940 --> 00:06:08,800
result shows that only 71 of these

148
00:06:06,520 --> 00:06:12,669
companies actually issued certificate to

149
00:06:08,800 --> 00:06:14,620
the public and out of this 71 42 of them

150
00:06:12,670 --> 00:06:16,570
are willing to issued domain validated

151
00:06:14,620 --> 00:06:19,030
certificate which is a great issue I

152
00:06:16,570 --> 00:06:21,520
tell you why and I found that companies

153
00:06:19,030 --> 00:06:24,130
do not always document their CPS which

154
00:06:21,520 --> 00:06:26,169
is like it was obvious but no one has

155
00:06:24,130 --> 00:06:30,430
really like looked into it so we proved

156
00:06:26,170 --> 00:06:33,250
that so as I've mentioned 41 of them out

157
00:06:30,430 --> 00:06:35,140
of 71 they are willing to issue DV

158
00:06:33,250 --> 00:06:37,540
certificates so the web still runs

159
00:06:35,140 --> 00:06:40,120
largely on domain validated certificates

160
00:06:37,540 --> 00:06:41,740
and it's bad why because in terms of

161
00:06:40,120 --> 00:06:44,110
these kind of certs

162
00:06:41,740 --> 00:06:46,420
seeds are not authoritative over who

163
00:06:44,110 --> 00:06:48,880
owns what domain more than you and I and

164
00:06:46,420 --> 00:06:50,740
I found that there's no actual single

165
00:06:48,880 --> 00:06:52,719
party that is authoritative to zonkey I

166
00:06:50,740 --> 00:06:55,030
can they're managing top-level domains

167
00:06:52,720 --> 00:06:56,620
then they delegate the power of

168
00:06:55,030 --> 00:06:58,960
registering domain names to the

169
00:06:56,620 --> 00:07:01,570
registrar and registrar when they want

170
00:06:58,960 --> 00:07:03,880
to recommend that give domain to users

171
00:07:01,570 --> 00:07:05,110
they don't verify the identity they have

172
00:07:03,880 --> 00:07:07,360
username and passwords

173
00:07:05,110 --> 00:07:09,550
we know passwords like and then there's

174
00:07:07,360 --> 00:07:11,110
CAS they can be register or some other

175
00:07:09,550 --> 00:07:15,010
parties and they're also dealing with

176
00:07:11,110 --> 00:07:17,440
passwords so now security is kind of the

177
00:07:15,010 --> 00:07:20,590
issue here so we found that certificate

178
00:07:17,440 --> 00:07:23,980
authorities rely on indirection to

179
00:07:20,590 --> 00:07:27,700
perform domain ownership verification so

180
00:07:23,980 --> 00:07:30,250
how let's look at the domain validation

181
00:07:27,700 --> 00:07:32,830
itself so in the old days if a person

182
00:07:30,250 --> 00:07:34,810
would want to like like prove that he

183
00:07:32,830 --> 00:07:37,210
owns the domain the CA they would either

184
00:07:34,810 --> 00:07:39,010
call the CA so they or they would go to

185
00:07:37,210 --> 00:07:41,739
the C so it was in person it was great

186
00:07:39,010 --> 00:07:43,450
from the usability perspective but from

187
00:07:41,740 --> 00:07:45,060
the economic perspective of course it's

188
00:07:43,450 --> 00:07:48,370
not easy and it takes a lot of steps

189
00:07:45,060 --> 00:07:51,130
nowadays email based is the most is the

190
00:07:48,370 --> 00:07:53,170
like most popular way of doing domain

191
00:07:51,130 --> 00:07:55,030
controller validation in which the CA

192
00:07:53,170 --> 00:07:56,770
would send some secret a validation

193
00:07:55,030 --> 00:07:58,000
token to some email addresses the

194
00:07:56,770 --> 00:08:01,000
assumed is controlled by the domain

195
00:07:58,000 --> 00:08:03,000
owner and if the domain owner can access

196
00:08:01,000 --> 00:08:06,040
this email the verification is done

197
00:08:03,000 --> 00:08:08,530
let's take entry so in order to send a

198
00:08:06,040 --> 00:08:11,410
validation email CA it needs to have the

199
00:08:08,530 --> 00:08:15,039
IP address for the mail servers of the

200
00:08:11,410 --> 00:08:17,020
domain name of that email and they

201
00:08:15,040 --> 00:08:18,880
consult with the DNS and they get the IP

202
00:08:17,020 --> 00:08:21,400
address who puts the IP address here

203
00:08:18,880 --> 00:08:23,469
it's put by some registrar and there's a

204
00:08:21,400 --> 00:08:25,900
person out there who has a password to

205
00:08:23,470 --> 00:08:28,690
this registrar who's affiliated with

206
00:08:25,900 --> 00:08:30,789
domain SCA so once the seat gets their

207
00:08:28,690 --> 00:08:32,679
IP address they would send the email and

208
00:08:30,790 --> 00:08:35,230
it will go to a mail server first

209
00:08:32,679 --> 00:08:36,969
there's again another person here who's

210
00:08:35,230 --> 00:08:38,260
the password to this mail server maybe

211
00:08:36,970 --> 00:08:39,850
it's the same person maybe it's the

212
00:08:38,260 --> 00:08:42,280
different one who's also affiliated with

213
00:08:39,850 --> 00:08:44,020
them in the CA and at the end the email

214
00:08:42,280 --> 00:08:45,640
would end up in somebody's mailbox we

215
00:08:44,020 --> 00:08:47,590
hope is the domain owner and if the

216
00:08:45,640 --> 00:08:49,210
domain owner can get this email address

217
00:08:47,590 --> 00:08:52,210
the validation token which is secret

218
00:08:49,210 --> 00:08:54,340
means that the verification is done so

219
00:08:52,210 --> 00:08:55,240
if you carefully look at this picture we

220
00:08:54,340 --> 00:08:58,350
find that there

221
00:08:55,240 --> 00:09:02,320
two levels of indirection and each level

222
00:08:58,350 --> 00:09:04,510
is vulnerable to some security attacks

223
00:09:02,320 --> 00:09:06,850
for example there are passwords here

224
00:09:04,510 --> 00:09:08,560
there's some users they can login so if

225
00:09:06,850 --> 00:09:10,600
the attacker can break a password they

226
00:09:08,560 --> 00:09:12,640
can break the validation the other one

227
00:09:10,600 --> 00:09:14,800
is CIA needs to have a good view of the

228
00:09:12,640 --> 00:09:17,560
DNS and if the attacker can poison the

229
00:09:14,800 --> 00:09:21,250
DNS or do other like attacks on the DNS

230
00:09:17,560 --> 00:09:23,380
then he's done great the other one is we

231
00:09:21,250 --> 00:09:25,959
have secrets so confidentiality matters

232
00:09:23,380 --> 00:09:27,850
but SMTP protocol uses opportunistic and

233
00:09:25,959 --> 00:09:30,520
gritch encryption which is not really

234
00:09:27,850 --> 00:09:33,940
secure against active adversaries and at

235
00:09:30,520 --> 00:09:36,699
the end I told you CAS have some lists

236
00:09:33,940 --> 00:09:38,649
of email addresses that is affiliated

237
00:09:36,700 --> 00:09:40,360
with different domain names but it's

238
00:09:38,649 --> 00:09:41,860
really hard to hold and reserve this

239
00:09:40,360 --> 00:09:43,899
kind of email addresses and sometimes

240
00:09:41,860 --> 00:09:46,149
the domain owners denied it do not even

241
00:09:43,899 --> 00:09:48,250
know that these email addresses exists

242
00:09:46,149 --> 00:09:51,730
and they're being used by some people

243
00:09:48,250 --> 00:09:54,970
out there so yeah these are the list of

244
00:09:51,730 --> 00:09:57,130
threats to email based validation so

245
00:09:54,970 --> 00:09:59,470
there are there has been solution for

246
00:09:57,130 --> 00:10:01,839
this some people were doing detective or

247
00:09:59,470 --> 00:10:03,250
protective schemes but we started

248
00:10:01,839 --> 00:10:05,110
thinking about this issue a little bit

249
00:10:03,250 --> 00:10:07,600
different like on the blockchain so I'll

250
00:10:05,110 --> 00:10:10,180
tell you why first a little like

251
00:10:07,600 --> 00:10:12,730
introduction to the blockchain Valjean

252
00:10:10,180 --> 00:10:16,540
is a peer-to-peer network and it's run

253
00:10:12,730 --> 00:10:18,339
by a lot of computer any like anywhere

254
00:10:16,540 --> 00:10:19,959
in the world they can join anytime they

255
00:10:18,339 --> 00:10:22,060
want they can leave anytime they want

256
00:10:19,959 --> 00:10:23,890
and transactions are being validated

257
00:10:22,060 --> 00:10:26,349
through the consensus of the network and

258
00:10:23,890 --> 00:10:28,899
once the transaction is validated

259
00:10:26,350 --> 00:10:31,120
they're there forever nobody can change

260
00:10:28,899 --> 00:10:32,920
it so it's an append-only sequential

261
00:10:31,120 --> 00:10:35,440
data structure it's distributed

262
00:10:32,920 --> 00:10:36,910
consensus mechanism and new blocks can

263
00:10:35,440 --> 00:10:38,620
only be added at the end of the chain

264
00:10:36,910 --> 00:10:39,910
you can't go back in to change the

265
00:10:38,620 --> 00:10:41,649
middle of the chain and change a block

266
00:10:39,910 --> 00:10:43,689
why because that needs a lot of

267
00:10:41,649 --> 00:10:47,649
computation power that not everyone has

268
00:10:43,690 --> 00:10:50,200
that but if their own blockchain is the

269
00:10:47,649 --> 00:10:52,570
word computer why because it allows you

270
00:10:50,200 --> 00:10:54,670
to use the blockchain instead of using

271
00:10:52,570 --> 00:10:56,470
it as an append-only broadcast channel

272
00:10:54,670 --> 00:10:58,959
now you can run code on it in a

273
00:10:56,470 --> 00:11:02,050
decentralized manner it has the theorem

274
00:10:58,959 --> 00:11:06,189
virtual machine that allows you to write

275
00:11:02,050 --> 00:11:08,550
to write and run programmable the smart

276
00:11:06,190 --> 00:11:10,649
contracts to determine blockchain

277
00:11:08,550 --> 00:11:12,149
and smart contracts are written in a

278
00:11:10,649 --> 00:11:15,899
high-level programming language called

279
00:11:12,149 --> 00:11:18,750
solidity so how did we use a theory on

280
00:11:15,899 --> 00:11:21,540
blockchain just imagine a scheme in

281
00:11:18,750 --> 00:11:23,279
which the domain name itself would be

282
00:11:21,540 --> 00:11:24,719
issued through the blockchain who would

283
00:11:23,279 --> 00:11:28,079
be authoritative over this domain name

284
00:11:24,720 --> 00:11:31,079
of course it's a blockchain itself so we

285
00:11:28,079 --> 00:11:33,329
created and designed a new uni

286
00:11:31,079 --> 00:11:36,149
authoritative paradigm that results in

287
00:11:33,329 --> 00:11:38,040
direction and authority issues it's a

288
00:11:36,149 --> 00:11:42,120
smart contract based naming and Pai

289
00:11:38,040 --> 00:11:44,160
system and it's in it enables user to

290
00:11:42,120 --> 00:11:45,810
fully manage and maintain control of

291
00:11:44,160 --> 00:11:48,329
their domain name and also their

292
00:11:45,810 --> 00:11:50,729
certificate without having to rely on

293
00:11:48,329 --> 00:11:53,880
any trusted third party edges such as

294
00:11:50,730 --> 00:11:56,370
registrar or CAS and it's decentralized

295
00:11:53,880 --> 00:11:59,850
so names cannot be reassigned without

296
00:11:56,370 --> 00:12:01,950
the cooperation of the owner so our

297
00:11:59,850 --> 00:12:04,860
decentralized applications called as an

298
00:12:01,950 --> 00:12:06,720
and in these system users can register

299
00:12:04,860 --> 00:12:08,519
their domain names we have registration

300
00:12:06,720 --> 00:12:10,980
fees which are against domain names

301
00:12:08,519 --> 00:12:13,170
coding they can also renew their domain

302
00:12:10,980 --> 00:12:15,899
names and for that they have to again

303
00:12:13,170 --> 00:12:17,990
pay the registration fees and they can

304
00:12:15,899 --> 00:12:21,180
transfer the domain names as well and

305
00:12:17,990 --> 00:12:24,240
they can do it through either auction or

306
00:12:21,180 --> 00:12:27,120
transfer domain names auction process is

307
00:12:24,240 --> 00:12:28,770
where I leverage the programmability of

308
00:12:27,120 --> 00:12:30,480
the term blockchain because I used

309
00:12:28,770 --> 00:12:35,819
inheritance to create a child country of

310
00:12:30,480 --> 00:12:37,770
our main contract and here's how we

311
00:12:35,820 --> 00:12:40,800
implemented the auction as you can see

312
00:12:37,770 --> 00:12:42,839
each action can be at any stage of open

313
00:12:40,800 --> 00:12:44,880
locked and ended that's because we want

314
00:12:42,839 --> 00:12:47,279
we didn't want the domain owner to run

315
00:12:44,880 --> 00:12:48,839
action let's say on an expired domain

316
00:12:47,279 --> 00:12:51,779
names or on a domain names that is

317
00:12:48,839 --> 00:12:53,850
already being under auction so user can

318
00:12:51,779 --> 00:12:56,100
run any number of auction on any number

319
00:12:53,850 --> 00:12:58,290
of domain name they have but once

320
00:12:56,100 --> 00:13:01,740
auction at a time on each domain name

321
00:12:58,290 --> 00:13:03,930
and yeah so they can do it through the

322
00:13:01,740 --> 00:13:06,149
auction or they can do it through the

323
00:13:03,930 --> 00:13:09,810
transfer domain name and MIT that's

324
00:13:06,149 --> 00:13:12,720
basically through calling the transfer

325
00:13:09,810 --> 00:13:14,729
domain function and when you call this

326
00:13:12,720 --> 00:13:16,170
function it basically changes the

327
00:13:14,730 --> 00:13:18,390
etherium address that controls the

328
00:13:16,170 --> 00:13:20,579
domain name and owners are free to

329
00:13:18,390 --> 00:13:23,519
decide to either transfer them

330
00:13:20,579 --> 00:13:25,589
names associated attributes such as TLS

331
00:13:23,519 --> 00:13:27,179
certificates or not they can provide it

332
00:13:25,589 --> 00:13:32,999
either with the previous value or with

333
00:13:27,179 --> 00:13:35,790
zero yeah here is how I implemented the

334
00:13:32,999 --> 00:13:38,339
transfer function as you can see there's

335
00:13:35,790 --> 00:13:41,579
something like mod called modifiers here

336
00:13:38,339 --> 00:13:44,129
that modifiers are the ones in a theorem

337
00:13:41,579 --> 00:13:46,439
block and solidity that allow you that

338
00:13:44,129 --> 00:13:49,049
every time you want to run a function

339
00:13:46,439 --> 00:13:51,238
you can create a modifier and it applies

340
00:13:49,049 --> 00:13:53,519
certain condition so if the conditions

341
00:13:51,239 --> 00:13:55,319
are met then it allows you to run an

342
00:13:53,519 --> 00:13:57,209
execute a function so why did I use that

343
00:13:55,319 --> 00:13:59,399
because in the ethereum blockchain or

344
00:13:57,209 --> 00:14:01,439
any blockchain there's no notion of time

345
00:13:59,399 --> 00:14:02,910
because it's decentralized it's a

346
00:14:01,439 --> 00:14:05,429
peer-to-peer network so there's no

347
00:14:02,910 --> 00:14:07,618
notion of time so you can say this

348
00:14:05,429 --> 00:14:09,929
domain specific domain name is gonna be

349
00:14:07,619 --> 00:14:12,959
expires in two years there's no there's

350
00:14:09,929 --> 00:14:15,089
nothing like that there's there's only

351
00:14:12,959 --> 00:14:16,469
way that you in two years you come here

352
00:14:15,089 --> 00:14:18,509
you call it don't let you call a

353
00:14:16,470 --> 00:14:20,459
function on this domain name it marks

354
00:14:18,509 --> 00:14:22,379
this domain name as an expired there is

355
00:14:20,459 --> 00:14:24,508
a service like a theorem alarm clock to

356
00:14:22,379 --> 00:14:26,459
do that but I really didn't want to rely

357
00:14:24,509 --> 00:14:28,919
on any trusted third parties in system

358
00:14:26,459 --> 00:14:31,679
so what I did was I created a check

359
00:14:28,919 --> 00:14:33,749
domain expiry modifier I put it at the

360
00:14:31,679 --> 00:14:36,389
beginning of every function in the smart

361
00:14:33,749 --> 00:14:38,249
contract so every time a domain owner

362
00:14:36,389 --> 00:14:41,489
would want to do anything on that domain

363
00:14:38,249 --> 00:14:43,259
name this modifier will go through and

364
00:14:41,489 --> 00:14:45,360
if the domain name is expired

365
00:14:43,259 --> 00:14:48,419
it can just mark the expire and it

366
00:14:45,360 --> 00:14:50,519
either a low or doesn't allow the domain

367
00:14:48,419 --> 00:14:52,110
owner to run the function so we have

368
00:14:50,519 --> 00:14:54,350
this modifier we have another one that

369
00:14:52,110 --> 00:14:56,399
doesn't allow the domain owner to

370
00:14:54,350 --> 00:14:58,739
transfer the domain name if it's

371
00:14:56,399 --> 00:15:00,389
unregistered or expired and the other

372
00:14:58,739 --> 00:15:02,790
one is only the domain owner can

373
00:15:00,389 --> 00:15:06,389
transfer the domain name here but you

374
00:15:02,790 --> 00:15:09,059
can see that my modifier on the owner so

375
00:15:06,389 --> 00:15:11,160
the other things the domain owner can do

376
00:15:09,059 --> 00:15:13,019
they can assign arbitrary data to their

377
00:15:11,160 --> 00:15:15,209
domain names and because it's

378
00:15:13,019 --> 00:15:19,529
decentralized these values are globally

379
00:15:15,209 --> 00:15:21,329
readable non equivocated and not one

380
00:15:19,529 --> 00:15:23,759
orbit to any interaction attacks and

381
00:15:21,329 --> 00:15:28,469
these values include CLS certificates

382
00:15:23,759 --> 00:15:30,720
and they use multiple sized arrays so a

383
00:15:28,470 --> 00:15:32,069
user can assign multiple certificate to

384
00:15:30,720 --> 00:15:34,070
her domain name this is for load

385
00:15:32,069 --> 00:15:37,160
balancing stuff

386
00:15:34,070 --> 00:15:39,680
they can also add Deanna stone files to

387
00:15:37,160 --> 00:15:41,660
add resource records to domain name but

388
00:15:39,680 --> 00:15:43,069
because storing a lot of data on the

389
00:15:41,660 --> 00:15:46,250
therm blockchain is not economically

390
00:15:43,070 --> 00:15:48,470
efficient they would add it on a server

391
00:15:46,250 --> 00:15:50,420
somewhere and they provide a hash of

392
00:15:48,470 --> 00:15:53,870
that file on the blockchain for further

393
00:15:50,420 --> 00:15:56,000
file verification and here is the

394
00:15:53,870 --> 00:15:57,470
primary States and transition for domain

395
00:15:56,000 --> 00:15:59,660
name so you can see that the main name

396
00:15:57,470 --> 00:16:02,240
have these different states that's

397
00:15:59,660 --> 00:16:04,219
because we want different functions to

398
00:16:02,240 --> 00:16:08,810
be executed when domain names are at

399
00:16:04,220 --> 00:16:11,209
different specific States so at the end

400
00:16:08,810 --> 00:16:12,888
I implemented a cost evaluation to see

401
00:16:11,209 --> 00:16:14,689
how much to compare how much does it

402
00:16:12,889 --> 00:16:17,569
cost to register domain name and to get

403
00:16:14,690 --> 00:16:20,000
a certificate in the real world versus

404
00:16:17,569 --> 00:16:22,250
in the nice new system which is built on

405
00:16:20,000 --> 00:16:24,740
the theorem so this mark on track is

406
00:16:22,250 --> 00:16:27,199
implemented in 317 lines of solidity

407
00:16:24,740 --> 00:16:29,480
languages and language and I tested it

408
00:16:27,199 --> 00:16:32,089
on the etherium test network so you can

409
00:16:29,480 --> 00:16:34,250
see here to register a domain name in

410
00:16:32,089 --> 00:16:37,069
our system it only cost three dollars

411
00:16:34,250 --> 00:16:39,139
and fifteen cents whereas in the real

412
00:16:37,069 --> 00:16:42,560
world for GoDaddy for example it would

413
00:16:39,139 --> 00:16:44,360
cost $20 per year and to get a

414
00:16:42,560 --> 00:16:46,699
certificate for example it would only

415
00:16:44,360 --> 00:16:48,949
cost one dollar and forty three cents

416
00:16:46,699 --> 00:16:52,880
whereas in the real world you have to

417
00:16:48,949 --> 00:16:55,370
pay around $80 per year and because

418
00:16:52,880 --> 00:16:58,010
smart contracts are very much vulnerable

419
00:16:55,370 --> 00:16:59,959
to security attacks we also did a

420
00:16:58,010 --> 00:17:01,430
security analysis on our code to make

421
00:16:59,959 --> 00:17:03,680
sure that it's not one durable to any

422
00:17:01,430 --> 00:17:06,079
known vulnerabilities and we use the

423
00:17:03,680 --> 00:17:09,438
security analysis tool called oriented

424
00:17:06,079 --> 00:17:12,740
and we tested it against different box

425
00:17:09,439 --> 00:17:14,449
parity call stack depth attack and also

426
00:17:12,740 --> 00:17:16,819
transaction ordering and stuff and if

427
00:17:14,449 --> 00:17:18,860
these forces here show that it's not one

428
00:17:16,819 --> 00:17:21,079
or about to any of those attacks this is

429
00:17:18,859 --> 00:17:23,089
actually a great security tool I really

430
00:17:21,079 --> 00:17:26,149
recommend it to anybody who's recording

431
00:17:23,089 --> 00:17:28,490
on a terran blockchain and as i've

432
00:17:26,150 --> 00:17:31,730
mentioned there have been solutions to

433
00:17:28,490 --> 00:17:34,880
this CA and on and some of them are

434
00:17:31,730 --> 00:17:38,390
blockchain based and for example there's

435
00:17:34,880 --> 00:17:41,270
named coin but name can only offer named

436
00:17:38,390 --> 00:17:43,309
services you can only register domain

437
00:17:41,270 --> 00:17:46,510
names in a decentralized manner there

438
00:17:43,309 --> 00:17:48,020
are block stack and third coin there

439
00:17:46,510 --> 00:17:49,850
providers on

440
00:17:48,020 --> 00:17:52,700
they're built on the namecoin so they

441
00:17:49,850 --> 00:17:54,379
add some PKI extension you can register

442
00:17:52,700 --> 00:17:57,050
the main name you can get certificates

443
00:17:54,380 --> 00:17:59,390
but there are unnamed coin and named

444
00:17:57,050 --> 00:18:02,690
coin is bitcoin al coin so you can't run

445
00:17:59,390 --> 00:18:04,910
any code on it so there's another one a

446
00:18:02,690 --> 00:18:07,670
third name service that it provides a

447
00:18:04,910 --> 00:18:10,370
name service and it's built on the

448
00:18:07,670 --> 00:18:12,530
etherium so you have program ability but

449
00:18:10,370 --> 00:18:15,979
again you don't have PKI

450
00:18:12,530 --> 00:18:19,399
functionality so here we are we offer

451
00:18:15,980 --> 00:18:20,780
name service we offer PKI functionality

452
00:18:19,400 --> 00:18:22,880
and we are built on the ethereum

453
00:18:20,780 --> 00:18:24,830
blockchain so we have program ability

454
00:18:22,880 --> 00:18:28,309
you can add another functions to this

455
00:18:24,830 --> 00:18:30,559
system so the future works could be for

456
00:18:28,309 --> 00:18:32,780
this for those ones that are interested

457
00:18:30,559 --> 00:18:34,910
in this research they can work on the

458
00:18:32,780 --> 00:18:37,370
scalability and understanding the issues

459
00:18:34,910 --> 00:18:39,170
of the scalability and how to minimize

460
00:18:37,370 --> 00:18:41,510
the amount of data a client needs to

461
00:18:39,170 --> 00:18:43,610
fetch from the ethereum blockchain every

462
00:18:41,510 --> 00:18:46,280
every time they want to look up a domain

463
00:18:43,610 --> 00:18:47,959
name and actually we're currently a

464
00:18:46,280 --> 00:18:50,540
research group looking at the domain

465
00:18:47,960 --> 00:18:53,270
name front running because in blockchain

466
00:18:50,540 --> 00:18:55,520
especially in Atheneum miners can censor

467
00:18:53,270 --> 00:18:57,350
transactions so they can easily do the

468
00:18:55,520 --> 00:19:00,620
domain name front running so we're

469
00:18:57,350 --> 00:19:03,110
looking at that now and another another

470
00:19:00,620 --> 00:19:04,820
one is user interface you can create a

471
00:19:03,110 --> 00:19:07,040
user interface it's it should be very

472
00:19:04,820 --> 00:19:08,899
easy and the other one is because it's

473
00:19:07,040 --> 00:19:10,730
built it's built on the ethereum

474
00:19:08,900 --> 00:19:12,950
blockchain and you have program ability

475
00:19:10,730 --> 00:19:17,030
there are a lot more function to be

476
00:19:12,950 --> 00:19:19,690
explored and thank you if you have any

477
00:19:17,030 --> 00:19:19,690
question for me

478
00:19:23,270 --> 00:19:30,179
and I forgot to mention our code is open

479
00:19:27,480 --> 00:19:33,260
source on my github so you can use it

480
00:19:30,179 --> 00:19:48,720
anytime good one

481
00:19:33,260 --> 00:19:50,640
sure yes yeah so one of our design

482
00:19:48,720 --> 00:19:52,530
decisions is like that vine domain name

483
00:19:50,640 --> 00:19:55,410
expires it still continues to function

484
00:19:52,530 --> 00:19:58,350
but you can't do anything on it you can

485
00:19:55,410 --> 00:20:00,570
go like get like auction it you can you

486
00:19:58,350 --> 00:20:02,760
can do an edit and a certificate so a

487
00:20:00,570 --> 00:20:04,350
domain owner would really want if he

488
00:20:02,760 --> 00:20:12,809
wants to do anything he should pay the

489
00:20:04,350 --> 00:20:14,959
registration fees again yeah okay thank

490
00:20:12,809 --> 00:20:14,960
you

