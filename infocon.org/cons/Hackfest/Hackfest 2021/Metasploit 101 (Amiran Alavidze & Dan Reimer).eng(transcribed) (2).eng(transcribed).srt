1
00:00:09,760 --> 00:00:13,280
good morning everybody uh this is imran

2
00:00:13,280 --> 00:00:16,880
aka airman and then uh we're

3
00:00:16,880 --> 00:00:19,039
presenting to you today from the west

4
00:00:19,039 --> 00:00:21,039
coast so you can imagine how much time

5
00:00:21,039 --> 00:00:23,840
like what time is it um here at the

6
00:00:23,840 --> 00:00:25,199
moment so

7
00:00:25,199 --> 00:00:27,599
pardon us if we're a little bit sleepy

8
00:00:27,599 --> 00:00:30,320
uh we're presenting today the workshop

9
00:00:30,320 --> 00:00:32,399
called metasploit 101 this is

10
00:00:32,399 --> 00:00:34,640
essentially introduction into

11
00:00:34,640 --> 00:00:37,760
metasploit and we're using the custom

12
00:00:37,760 --> 00:00:40,320
vulnerable machine that we've created

13
00:00:40,320 --> 00:00:41,280
to

14
00:00:41,280 --> 00:00:45,039
uh to run the labs so first of all while

15
00:00:45,039 --> 00:00:47,440
we're doing the introductions

16
00:00:47,440 --> 00:00:49,760
oh the slides work perfect

17
00:00:49,760 --> 00:00:51,760
while we're doing the introductions

18
00:00:51,760 --> 00:00:54,399
uh make sure that you firstly and most

19
00:00:54,399 --> 00:00:56,320
importantly join the metasploit 101

20
00:00:56,320 --> 00:00:59,440
workshop channel on the hackfest discord

21
00:00:59,440 --> 00:01:02,079
uh check is the first message in the

22
00:01:02,079 --> 00:01:04,080
channel there's a link to prerequisites

23
00:01:04,080 --> 00:01:06,880
document if you haven't had a chance to

24
00:01:06,880 --> 00:01:08,720
download the vm and register everything

25
00:01:08,720 --> 00:01:10,799
you need to make sure everything works

26
00:01:10,799 --> 00:01:12,720
now is probably the last time you'll be

27
00:01:12,720 --> 00:01:15,119
able to do that so that first link on

28
00:01:15,119 --> 00:01:17,920
the slide uh grab it uh that's the link

29
00:01:17,920 --> 00:01:20,400
to the prerequisites uh also in the

30
00:01:20,400 --> 00:01:23,200
channel and on the slide uh the other

31
00:01:23,200 --> 00:01:25,520
link is the link to the pdf of the slide

32
00:01:25,520 --> 00:01:28,080
so if you want to follow along but also

33
00:01:28,080 --> 00:01:30,000
use them as reference because we'll be

34
00:01:30,000 --> 00:01:32,400
uh we'll be explaining a lot of them

35
00:01:32,400 --> 00:01:34,640
metasploit commands etc

36
00:01:34,640 --> 00:01:36,560
so you can use the flags to go back and

37
00:01:36,560 --> 00:01:40,360
use them as reference

38
00:01:41,360 --> 00:01:44,560
with that we'll start with uh quick

39
00:01:44,560 --> 00:01:46,880
introductions uh as i said my name is

40
00:01:46,880 --> 00:01:50,240
amran i've been in infosec for over 20

41
00:01:50,240 --> 00:01:51,119
years

42
00:01:51,119 --> 00:01:54,159
uh mostly on the blue teaming side

43
00:01:54,159 --> 00:01:56,880
across multiple industries

44
00:01:56,880 --> 00:01:58,240
and i'm doing

45
00:01:58,240 --> 00:01:59,920
application security and just security

46
00:01:59,920 --> 00:02:03,040
program management at the moment

47
00:02:03,040 --> 00:02:04,719
the best way to

48
00:02:04,719 --> 00:02:06,479
reach out to me probably is on the

49
00:02:06,479 --> 00:02:08,399
discord but also

50
00:02:08,399 --> 00:02:09,919
for the workshop today we're going to

51
00:02:09,919 --> 00:02:11,920
use as i said the metasploit 101 dash

52
00:02:11,920 --> 00:02:14,640
workshop channel in the heck fest

53
00:02:14,640 --> 00:02:19,359
and then i'm going to switch it to you

54
00:02:19,840 --> 00:02:21,520
for your intro

55
00:02:21,520 --> 00:02:24,319
hope you're still there

56
00:02:28,319 --> 00:02:30,800
well maybe not okay i'll i'll do the

57
00:02:30,800 --> 00:02:32,640
other intro as well

58
00:02:32,640 --> 00:02:36,560
uh so dan has been in i.t for a while

59
00:02:36,560 --> 00:02:39,599
he's been infosec hobbyist for over 20

60
00:02:39,599 --> 00:02:42,239
years he's actually doing pen testing

61
00:02:42,239 --> 00:02:43,760
professionally

62
00:02:43,760 --> 00:02:46,640
right now so he's been using metal split

63
00:02:46,640 --> 00:02:49,920
quite a while in his professional life

64
00:02:49,920 --> 00:02:52,640
you can reach him on you can find him on

65
00:02:52,640 --> 00:02:53,760
github

66
00:02:53,760 --> 00:02:55,760
and on discord as well just search for

67
00:02:55,760 --> 00:02:58,159
aldro he should be in the

68
00:02:58,159 --> 00:03:01,599
medisploy channel as well

69
00:03:02,840 --> 00:03:06,800
um again before we get going please

70
00:03:06,800 --> 00:03:09,120
please you won't be able to do the labs

71
00:03:09,120 --> 00:03:10,720
if you don't download the machine it's

72
00:03:10,720 --> 00:03:13,519
1.7 gigs if you have not

73
00:03:13,519 --> 00:03:14,879
done it yet

74
00:03:14,879 --> 00:03:18,080
now is the last time you can do do it go

75
00:03:18,080 --> 00:03:20,159
check the prerequisites

76
00:03:20,159 --> 00:03:22,239
um

77
00:03:22,239 --> 00:03:26,239
check the slides uh and join back in

78
00:03:26,239 --> 00:03:27,519
okay with that

79
00:03:27,519 --> 00:03:29,599
our first topic is

80
00:03:29,599 --> 00:03:32,239
that we want to cover is on ethics

81
00:03:32,239 --> 00:03:34,239
essentially we're what we're going to be

82
00:03:34,239 --> 00:03:36,560
talking about today is kind of

83
00:03:36,560 --> 00:03:38,400
explaining to you how

84
00:03:38,400 --> 00:03:41,280
in a sense guns work uh we're obviously

85
00:03:41,280 --> 00:03:44,640
not responsible for anything you do

86
00:03:44,640 --> 00:03:47,680
with those guns so

87
00:03:47,680 --> 00:03:50,080
as a general rule make sure that uh

88
00:03:50,080 --> 00:03:53,120
everything you do is perfectly legal

89
00:03:53,120 --> 00:03:54,720
rule of thumb is you can test the

90
00:03:54,720 --> 00:03:56,720
systems that you own or you can test the

91
00:03:56,720 --> 00:03:58,319
systems that

92
00:03:58,319 --> 00:04:00,480
you have authorization to test and only

93
00:04:00,480 --> 00:04:02,959
within the authorized scope anything

94
00:04:02,959 --> 00:04:05,760
beyond that is likely illegal wherever

95
00:04:05,760 --> 00:04:06,799
you are

96
00:04:06,799 --> 00:04:10,000
uh respect confidentiality of your

97
00:04:10,000 --> 00:04:11,519
customers so

98
00:04:11,519 --> 00:04:13,840
if you do test some system and you do

99
00:04:13,840 --> 00:04:15,519
come across

100
00:04:15,519 --> 00:04:18,798
data that you shouldn't have access to

101
00:04:18,798 --> 00:04:22,400
don't just grab it run away with it

102
00:04:22,960 --> 00:04:24,080
with that

103
00:04:24,080 --> 00:04:26,400
with that out of the way

104
00:04:26,400 --> 00:04:29,600
let's dive right into it

105
00:04:29,600 --> 00:04:32,960
so what is metasploit

106
00:04:34,000 --> 00:04:36,080
and before going there i'll actually

107
00:04:36,080 --> 00:04:37,759
wants to quickly cover what this

108
00:04:37,759 --> 00:04:39,759
workshop is we

109
00:04:39,759 --> 00:04:41,440
we are going to be doing introduction

110
00:04:41,440 --> 00:04:42,960
into metasploit

111
00:04:42,960 --> 00:04:45,520
uh and a little bit of kind of thinking

112
00:04:45,520 --> 00:04:47,919
that goes along along the way thinking

113
00:04:47,919 --> 00:04:50,479
uh kind of defensive thinking this is a

114
00:04:50,479 --> 00:04:52,800
hands-on workshop we don't give you a

115
00:04:52,800 --> 00:04:54,960
lot of introduction into linux so you

116
00:04:54,960 --> 00:04:56,720
should be comfortable with linux command

117
00:04:56,720 --> 00:04:58,000
line

118
00:04:58,000 --> 00:05:00,000
uh anything that relates to mesploit

119
00:05:00,000 --> 00:05:03,039
will cover from basically the grounds up

120
00:05:03,039 --> 00:05:04,880
from the get-go

121
00:05:04,880 --> 00:05:07,120
so it's not entering to linux it's not

122
00:05:07,120 --> 00:05:09,120
introduction into zero days or any

123
00:05:09,120 --> 00:05:11,360
latest hacking techniques we're just

124
00:05:11,360 --> 00:05:13,280
gonna be using the modules that are

125
00:05:13,280 --> 00:05:15,919
already available within metasploit uh

126
00:05:15,919 --> 00:05:17,520
we're not gonna be talking about writing

127
00:05:17,520 --> 00:05:19,759
exploits and it's not necessarily a

128
00:05:19,759 --> 00:05:22,000
step-by-step instruction so

129
00:05:22,000 --> 00:05:23,360
we're gonna give you directions we're

130
00:05:23,360 --> 00:05:25,199
gonna give you all the right commands

131
00:05:25,199 --> 00:05:26,880
and where to look but ultimately the

132
00:05:26,880 --> 00:05:29,199
labs it's best if you do them

133
00:05:29,199 --> 00:05:32,800
uh yourself and explore things and we'll

134
00:05:32,800 --> 00:05:35,520
we'll do the walkthrough at the end but

135
00:05:35,520 --> 00:05:37,600
ultimately the more you learn yourself

136
00:05:37,600 --> 00:05:41,120
the better you'll you'll retain

137
00:05:42,240 --> 00:05:43,520
uh so

138
00:05:43,520 --> 00:05:45,840
what are we covering today uh we'll do a

139
00:05:45,840 --> 00:05:48,000
quick intro we'll talk about scanning

140
00:05:48,000 --> 00:05:50,160
we'll talk about exploitation finding

141
00:05:50,160 --> 00:05:52,160
and using exploits we'll talk quite a

142
00:05:52,160 --> 00:05:54,720
lot about meterpreter because this is

143
00:05:54,720 --> 00:05:55,680
one of the

144
00:05:55,680 --> 00:05:57,919
one of the benefits of using

145
00:05:57,919 --> 00:06:00,639
metasploit is their

146
00:06:00,639 --> 00:06:03,039
flagship payload uh we'll talk about

147
00:06:03,039 --> 00:06:06,080
pivoting to me pivoting was the core

148
00:06:06,080 --> 00:06:07,919
part of the workshop when we initially

149
00:06:07,919 --> 00:06:11,600
created it uh it's not always covered

150
00:06:11,600 --> 00:06:12,400
well

151
00:06:12,400 --> 00:06:14,319
and you don't always encounter it when

152
00:06:14,319 --> 00:06:17,280
doing things like hacked wax machine or

153
00:06:17,280 --> 00:06:19,199
volume hub machines

154
00:06:19,199 --> 00:06:21,440
because you don't have that opportunity

155
00:06:21,440 --> 00:06:23,600
to kind of compromise one machine and go

156
00:06:23,600 --> 00:06:26,080
from there access other networks but

157
00:06:26,080 --> 00:06:29,199
pivoting is a core functionality within

158
00:06:29,199 --> 00:06:32,240
metasploit and and it's uh very

159
00:06:32,240 --> 00:06:33,919
important in kind of getting all the

160
00:06:33,919 --> 00:06:37,039
benefits uh of the of the framework

161
00:06:37,039 --> 00:06:39,440
uh we might talk a little bit a little

162
00:06:39,440 --> 00:06:42,000
bit about client-side exploits uh maybe

163
00:06:42,000 --> 00:06:45,039
not and hopefully by the end of it um

164
00:06:45,039 --> 00:06:45,580
you'll be

165
00:06:45,580 --> 00:06:47,280
[Music]

166
00:06:47,280 --> 00:06:49,280
you'll be set on the path to learn

167
00:06:49,280 --> 00:06:51,360
anything else you might need then i did

168
00:06:51,360 --> 00:06:52,800
intros sorry

169
00:06:52,800 --> 00:06:55,440
it probably didn't do a good job

170
00:06:55,440 --> 00:06:57,280
oh it's all good at least your computer

171
00:06:57,280 --> 00:06:58,720
didn't crash

172
00:06:58,720 --> 00:07:02,919
yeah i'm happy about that

173
00:07:05,840 --> 00:07:09,280
all right so in terms of logistics um

174
00:07:09,280 --> 00:07:12,479
ask your questions in the

175
00:07:12,479 --> 00:07:13,599
um

176
00:07:13,599 --> 00:07:16,639
in the discord channel um

177
00:07:16,639 --> 00:07:18,400
if you see a question that you know the

178
00:07:18,400 --> 00:07:21,759
answer to please help other other people

179
00:07:21,759 --> 00:07:23,599
uh there's only two of us i'm not sure

180
00:07:23,599 --> 00:07:25,919
how many people we have joined but

181
00:07:25,919 --> 00:07:27,759
chances are we're not going to be able

182
00:07:27,759 --> 00:07:30,400
to answer every single question that

183
00:07:30,400 --> 00:07:32,720
comes our way

184
00:07:32,720 --> 00:07:33,759
and

185
00:07:33,759 --> 00:07:36,000
yeah basically use use the channel as

186
00:07:36,000 --> 00:07:37,759
the main means of communication then if

187
00:07:37,759 --> 00:07:39,360
you can watch

188
00:07:39,360 --> 00:07:41,599
the channel while i'm doing the slides

189
00:07:41,599 --> 00:07:43,280
that probably would be great

190
00:07:43,280 --> 00:07:45,840
not a problem

191
00:07:47,840 --> 00:07:50,400
all right

192
00:07:53,520 --> 00:07:58,080
let's go for it so what is meta split

193
00:07:58,080 --> 00:08:00,319
metasploit is a penetration testing

194
00:08:00,319 --> 00:08:03,360
framework um at the core of it is

195
00:08:03,360 --> 00:08:05,759
essentially a

196
00:08:05,759 --> 00:08:07,759
number of rules that they've created and

197
00:08:07,759 --> 00:08:09,599
this is why they call it framework but

198
00:08:09,599 --> 00:08:11,440
number of rules that in patterns that

199
00:08:11,440 --> 00:08:13,599
they've created how the modules in

200
00:08:13,599 --> 00:08:16,639
metasploit work so you basically have a

201
00:08:16,639 --> 00:08:20,000
fairly familiar and consistent interface

202
00:08:20,000 --> 00:08:22,000
to work with the modules which could be

203
00:08:22,000 --> 00:08:24,479
scanning modules or exploitation modules

204
00:08:24,479 --> 00:08:27,360
or privilege escalation modules and you

205
00:08:27,360 --> 00:08:30,160
basically have this

206
00:08:30,160 --> 00:08:31,120
easy

207
00:08:31,120 --> 00:08:32,880
uh

208
00:08:32,880 --> 00:08:34,880
common way of of

209
00:08:34,880 --> 00:08:36,559
interacting with all of those different

210
00:08:36,559 --> 00:08:37,599
modules

211
00:08:37,599 --> 00:08:41,760
uh it has it basically works as a human

212
00:08:41,760 --> 00:08:43,360
api if you will

213
00:08:43,360 --> 00:08:45,519
uh so you get that consistent interface

214
00:08:45,519 --> 00:08:48,959
you kind of abstract uh

215
00:08:48,959 --> 00:08:51,519
payloads from exploits so

216
00:08:51,519 --> 00:08:52,800
in a sense

217
00:08:52,800 --> 00:08:55,360
uh there's number of exploits that that

218
00:08:55,360 --> 00:08:56,800
it supports there's number of payloads

219
00:08:56,800 --> 00:08:58,800
that it supports and you can mix and

220
00:08:58,800 --> 00:09:01,279
match to a certain degree so

221
00:09:01,279 --> 00:09:02,640
you basically

222
00:09:02,640 --> 00:09:03,600
uh

223
00:09:03,600 --> 00:09:06,480
detach the exploitation from the

224
00:09:06,480 --> 00:09:07,839
subsequent

225
00:09:07,839 --> 00:09:10,320
actions

226
00:09:11,200 --> 00:09:13,519
uh the first version one was created

227
00:09:13,519 --> 00:09:17,279
back in 2003 by hd moore it was uh

228
00:09:17,279 --> 00:09:20,560
acquired by rapid seven in 2009 it's

229
00:09:20,560 --> 00:09:22,959
currently at version 6.

230
00:09:22,959 --> 00:09:24,480
there's multiple interfaces and

231
00:09:24,480 --> 00:09:26,240
additions you can

232
00:09:26,240 --> 00:09:28,000
you can use the one we're going to be

233
00:09:28,000 --> 00:09:29,120
using

234
00:09:29,120 --> 00:09:30,800
today is essentially the one that's

235
00:09:30,800 --> 00:09:32,880
built into

236
00:09:32,880 --> 00:09:34,800
kali linux

237
00:09:34,800 --> 00:09:37,200
and and it's the core metasploit

238
00:09:37,200 --> 00:09:39,920
framework it's a command line interface

239
00:09:39,920 --> 00:09:42,560
and and the command you uh run in kala

240
00:09:42,560 --> 00:09:45,040
linux to open uh metasploit is msf

241
00:09:45,040 --> 00:09:48,399
console but be aware that there's other

242
00:09:48,399 --> 00:09:51,519
uh interfaces uh to metasploit there's

243
00:09:51,519 --> 00:09:52,320
uh

244
00:09:52,320 --> 00:09:54,480
web-based ones there's gui ones there's

245
00:09:54,480 --> 00:09:57,440
ones that are uh created by rapid7 with

246
00:09:57,440 --> 00:09:58,800
some additional functionality with

247
00:09:58,800 --> 00:10:01,600
regard to exploitation etc and there's

248
00:10:01,600 --> 00:10:04,240
also the cobalt strike probably one of

249
00:10:04,240 --> 00:10:05,920
the most well-known

250
00:10:05,920 --> 00:10:09,519
uis for metasploit and beyond metasploit

251
00:10:09,519 --> 00:10:12,160
uh that allows you to kind of uh do

252
00:10:12,160 --> 00:10:13,519
everything we're going to be doing today

253
00:10:13,519 --> 00:10:16,079
in a more visual way but the metasploit

254
00:10:16,079 --> 00:10:18,720
framework itself that's the core

255
00:10:18,720 --> 00:10:19,519
uh

256
00:10:19,519 --> 00:10:22,800
the core product that essentially has

257
00:10:22,800 --> 00:10:25,600
all the modules and and has the

258
00:10:25,600 --> 00:10:27,040
capabilities that we're going to be

259
00:10:27,040 --> 00:10:28,959
exploring today

260
00:10:28,959 --> 00:10:30,000
um

261
00:10:30,000 --> 00:10:32,000
i think last time i've checked this

262
00:10:32,000 --> 00:10:35,440
maybe six months ago there was uh 2100

263
00:10:35,440 --> 00:10:37,200
different exploits

264
00:10:37,200 --> 00:10:39,279
and a whole bunch of different payloads

265
00:10:39,279 --> 00:10:40,480
so we're

266
00:10:40,480 --> 00:10:42,959
gonna be uh covering a little bit of

267
00:10:42,959 --> 00:10:45,760
that but in terms of the payloads will

268
00:10:45,760 --> 00:10:49,040
will be focusing mostly on

269
00:10:49,040 --> 00:10:51,680
on them interpreter

270
00:10:51,680 --> 00:10:52,640
so

271
00:10:52,640 --> 00:10:53,760
um

272
00:10:53,760 --> 00:10:55,279
as i said we're going to be working with

273
00:10:55,279 --> 00:10:58,399
metal split framework um make sure to

274
00:10:58,399 --> 00:10:59,920
update your calendar machine on a

275
00:10:59,920 --> 00:11:02,000
regular basis that's how you get the new

276
00:11:02,000 --> 00:11:03,760
versions of the framework itself but

277
00:11:03,760 --> 00:11:06,880
also the new versions uh new versions of

278
00:11:06,880 --> 00:11:09,120
the exploits

279
00:11:09,120 --> 00:11:11,440
uh in addition to

280
00:11:11,440 --> 00:11:12,399
uh

281
00:11:12,399 --> 00:11:13,839
to the

282
00:11:13,839 --> 00:11:15,920
metasploit commands that so you start

283
00:11:15,920 --> 00:11:18,160
manufacturing using msf console in

284
00:11:18,160 --> 00:11:20,720
you'll basically once you do that this

285
00:11:20,720 --> 00:11:21,839
is the

286
00:11:21,839 --> 00:11:23,920
sample of a screen you might see you can

287
00:11:23,920 --> 00:11:25,920
type start typing meta split commands

288
00:11:25,920 --> 00:11:27,600
but even

289
00:11:27,600 --> 00:11:29,440
you can type uh just shell commands

290
00:11:29,440 --> 00:11:31,440
within their been displayed shell and

291
00:11:31,440 --> 00:11:32,959
they're going to be executed as shell

292
00:11:32,959 --> 00:11:36,160
commands things like ls uh pwd

293
00:11:36,160 --> 00:11:37,120
um

294
00:11:37,120 --> 00:11:38,800
cut your local files and things like

295
00:11:38,800 --> 00:11:41,279
that so it's kind of a metasploit shell

296
00:11:41,279 --> 00:11:43,120
is a combination of the commands that

297
00:11:43,120 --> 00:11:46,160
you can run within metasploit plus

298
00:11:46,160 --> 00:11:47,920
shell commands that you can run on local

299
00:11:47,920 --> 00:11:49,440
machine

300
00:11:49,440 --> 00:11:54,560
let's go over some terminology quickly

301
00:11:54,720 --> 00:11:57,120
so vulnerability is a weakness in the

302
00:11:57,120 --> 00:12:00,000
system that can be exploited or attacked

303
00:12:00,000 --> 00:12:02,399
uh usually to perform unauthorized

304
00:12:02,399 --> 00:12:04,880
actions hopefully all of our actions are

305
00:12:04,880 --> 00:12:06,000
authorized

306
00:12:06,000 --> 00:12:07,839
uh there's different types of

307
00:12:07,839 --> 00:12:09,600
vulnerabilities there's like file

308
00:12:09,600 --> 00:12:11,600
uploads buffer overflows hip overflows

309
00:12:11,600 --> 00:12:13,040
etc so

310
00:12:13,040 --> 00:12:15,440
essentially exploit is a piece of code

311
00:12:15,440 --> 00:12:16,720
that takes advantage of the

312
00:12:16,720 --> 00:12:19,360
vulnerability and to

313
00:12:19,360 --> 00:12:22,000
uh to do something that you want

314
00:12:22,000 --> 00:12:24,560
on on the target system

315
00:12:24,560 --> 00:12:27,360
paid load is code that you want in the

316
00:12:27,360 --> 00:12:31,200
end executed uh using the exploits so

317
00:12:31,200 --> 00:12:33,519
if exploit is remote code execution at

318
00:12:33,519 --> 00:12:36,160
least uh the exploit is

319
00:12:36,160 --> 00:12:38,320
essentially using the vulnerability to

320
00:12:38,320 --> 00:12:41,040
execute execute the payload

321
00:12:41,040 --> 00:12:43,440
now payloads in metasploit can be quite

322
00:12:43,440 --> 00:12:45,760
large so interpreters like several

323
00:12:45,760 --> 00:12:48,160
megabytes in length and exploits

324
00:12:48,160 --> 00:12:50,959
themselves are often limited in terms of

325
00:12:50,959 --> 00:12:53,600
how much memory they they can use

326
00:12:53,600 --> 00:12:54,880
and so

327
00:12:54,880 --> 00:12:57,839
there is this idea of staged um staged

328
00:12:57,839 --> 00:13:00,720
payloads which is essentially

329
00:13:00,720 --> 00:13:01,519
uh

330
00:13:01,519 --> 00:13:03,360
when you run the exploit it will roll

331
00:13:03,360 --> 00:13:06,880
load very small initial stage and the

332
00:13:06,880 --> 00:13:08,800
the only purpose of that initial stage

333
00:13:08,800 --> 00:13:11,040
is to load the core payload

334
00:13:11,040 --> 00:13:13,760
functionality from your attacker box

335
00:13:13,760 --> 00:13:15,839
load it in memory so you can have that

336
00:13:15,839 --> 00:13:17,680
functionality later on so it's basically

337
00:13:17,680 --> 00:13:20,560
a two-step process just a way to load

338
00:13:20,560 --> 00:13:22,240
larger payloads into the memory using

339
00:13:22,240 --> 00:13:24,320
this two-state process

340
00:13:24,320 --> 00:13:26,480
and there's also a concept of listener

341
00:13:26,480 --> 00:13:28,160
which is something

342
00:13:28,160 --> 00:13:30,480
uh it's actually a module in in

343
00:13:30,480 --> 00:13:32,800
metasploit but it's basically a back-end

344
00:13:32,800 --> 00:13:34,959
that receives connections from the

345
00:13:34,959 --> 00:13:37,519
target and it does things like serve

346
00:13:37,519 --> 00:13:40,880
stagers uh when you type in commands in

347
00:13:40,880 --> 00:13:42,959
in your metasploit console this is it's

348
00:13:42,959 --> 00:13:44,480
the listener that's essentially

349
00:13:44,480 --> 00:13:45,920
interacting with your payload that's

350
00:13:45,920 --> 00:13:47,519
sending those commands to the payload

351
00:13:47,519 --> 00:13:49,680
receiving the results and

352
00:13:49,680 --> 00:13:52,000
displaying them to you

353
00:13:52,000 --> 00:13:54,399
and pivoting as i said it's a core thing

354
00:13:54,399 --> 00:13:56,240
that we want to cover today uh

355
00:13:56,240 --> 00:13:58,800
essentially

356
00:13:59,120 --> 00:14:01,760
an act of using a compromised machine to

357
00:14:01,760 --> 00:14:03,839
access other networks that you don't

358
00:14:03,839 --> 00:14:06,720
have direct access to but the compromise

359
00:14:06,720 --> 00:14:09,760
machine does

360
00:14:12,959 --> 00:14:15,600
some more terminology so

361
00:14:15,600 --> 00:14:17,839
mod so metasploit framework consists of

362
00:14:17,839 --> 00:14:20,000
modules modules can be of different

363
00:14:20,000 --> 00:14:22,639
types uh there's exploits there's

364
00:14:22,639 --> 00:14:26,639
auxiliary auxiliary modules uh provide

365
00:14:26,639 --> 00:14:28,720
capabilities to gather information

366
00:14:28,720 --> 00:14:32,639
either scan or information about a

367
00:14:32,639 --> 00:14:34,959
target machine in in general

368
00:14:34,959 --> 00:14:37,839
uh post modules are essentially

369
00:14:37,839 --> 00:14:39,680
local modules that you can use for

370
00:14:39,680 --> 00:14:42,160
previous score local reconnaissance so

371
00:14:42,160 --> 00:14:44,800
once you've ran the exploit

372
00:14:44,800 --> 00:14:47,120
once you have a payload running on the

373
00:14:47,120 --> 00:14:50,000
target now exploring what's on the

374
00:14:50,000 --> 00:14:51,040
target

375
00:14:51,040 --> 00:14:54,720
and doing things like not pivoting etc

376
00:14:54,720 --> 00:14:56,399
there's also a new

377
00:14:56,399 --> 00:15:00,079
module type as of version five evasion

378
00:15:00,079 --> 00:15:00,959
um

379
00:15:00,959 --> 00:15:03,360
basically the idea is it provides some

380
00:15:03,360 --> 00:15:05,600
encoding capabilities so that

381
00:15:05,600 --> 00:15:08,000
the detection on the endpoints of of the

382
00:15:08,000 --> 00:15:10,639
payloads and of the modules that you run

383
00:15:10,639 --> 00:15:14,000
is uh more complicated uh my personal

384
00:15:14,000 --> 00:15:17,199
opinion is they mostly don't work

385
00:15:17,199 --> 00:15:19,040
because most of them

386
00:15:19,040 --> 00:15:21,360
antivirus companies track metasploit

387
00:15:21,360 --> 00:15:23,519
quite closely in terms of being able to

388
00:15:23,519 --> 00:15:25,519
detect the payloads and so

389
00:15:25,519 --> 00:15:28,399
even the event evasion modules that new

390
00:15:28,399 --> 00:15:30,240
evasion modules that come up the

391
00:15:30,240 --> 00:15:32,560
detections are being rolled out fairly

392
00:15:32,560 --> 00:15:34,880
quickly

393
00:15:36,720 --> 00:15:38,959
there's a special type of module called

394
00:15:38,959 --> 00:15:41,360
handler that's the that's the listener

395
00:15:41,360 --> 00:15:43,360
so you probably will

396
00:15:43,360 --> 00:15:45,680
hear me using handler and listener

397
00:15:45,680 --> 00:15:47,360
interchangeably

398
00:15:47,360 --> 00:15:49,519
uh the name of that handler module is

399
00:15:49,519 --> 00:15:52,240
exploit slash multi slash handler

400
00:15:52,240 --> 00:15:54,079
you probably won't need the name because

401
00:15:54,079 --> 00:15:56,160
it's usually started automatically when

402
00:15:56,160 --> 00:15:58,560
you run the payload but it does handle

403
00:15:58,560 --> 00:16:00,240
that communication with the payload

404
00:16:00,240 --> 00:16:04,320
sense command uh student stages etc

405
00:16:04,320 --> 00:16:08,000
and the payload is um the the the thing

406
00:16:08,000 --> 00:16:10,560
that you run uh on on the target once

407
00:16:10,560 --> 00:16:12,399
you've exploited it and that's what

408
00:16:12,399 --> 00:16:13,759
allows you to

409
00:16:13,759 --> 00:16:15,680
run those commands send those commands

410
00:16:15,680 --> 00:16:18,480
and explore uh explore the machine

411
00:16:18,480 --> 00:16:20,480
download files and do do things like

412
00:16:20,480 --> 00:16:21,680
that

413
00:16:21,680 --> 00:16:23,199
we're going to be mainly talking about

414
00:16:23,199 --> 00:16:24,240
the

415
00:16:24,240 --> 00:16:25,839
metasploit

416
00:16:25,839 --> 00:16:27,360
uh payload

417
00:16:27,360 --> 00:16:28,160
uh

418
00:16:28,160 --> 00:16:30,079
it's it's uh

419
00:16:30,079 --> 00:16:32,800
um sorry interpreter payload i'm

420
00:16:32,800 --> 00:16:34,560
actually gonna talk about that on the

421
00:16:34,560 --> 00:16:36,800
next slides uh

422
00:16:36,800 --> 00:16:38,880
one more thing worth mentioning is this

423
00:16:38,880 --> 00:16:41,199
concept of a workspace so we'll we'll

424
00:16:41,199 --> 00:16:44,160
see in in just a bit um

425
00:16:44,160 --> 00:16:47,360
metasploit has a database uh behind that

426
00:16:47,360 --> 00:16:49,680
that it connects to behind the scenes it

427
00:16:49,680 --> 00:16:52,160
can work without the the database

428
00:16:52,160 --> 00:16:53,839
but if you do have the connection to the

429
00:16:53,839 --> 00:16:55,120
database

430
00:16:55,120 --> 00:16:57,120
everything that you do and explore

431
00:16:57,120 --> 00:16:59,360
through the metasploit modules will be

432
00:16:59,360 --> 00:17:02,399
saved into the database so for example

433
00:17:02,399 --> 00:17:03,759
if you did a port scan through

434
00:17:03,759 --> 00:17:06,959
metasploit explored some open ports all

435
00:17:06,959 --> 00:17:08,720
of that information about the host and

436
00:17:08,720 --> 00:17:10,880
the ports that were found open will be

437
00:17:10,880 --> 00:17:13,280
saved in into the database so later on

438
00:17:13,280 --> 00:17:15,039
you can go back and check what hosts

439
00:17:15,039 --> 00:17:17,679
you've scanned what open ports you found

440
00:17:17,679 --> 00:17:20,160
if you ran some uh scanners that

441
00:17:20,160 --> 00:17:22,720
basically did like a username password

442
00:17:22,720 --> 00:17:24,880
enumeration if you found any credentials

443
00:17:24,880 --> 00:17:26,559
all of that is going to be in the

444
00:17:26,559 --> 00:17:29,120
database so from that perspective it's

445
00:17:29,120 --> 00:17:30,880
kind of automated

446
00:17:30,880 --> 00:17:33,840
record keeping that could be useful uh

447
00:17:33,840 --> 00:17:36,480
down the line

448
00:17:36,799 --> 00:17:39,840
so meterpreter uh metropolita is the

449
00:17:39,840 --> 00:17:42,320
flagship metasploit payload this is one

450
00:17:42,320 --> 00:17:44,400
of the things that makes metasploit so

451
00:17:44,400 --> 00:17:47,039
great it supports stage loading the

452
00:17:47,039 --> 00:17:48,960
interpreter itself is quite large so in

453
00:17:48,960 --> 00:17:50,640
majority of the cases you are going to

454
00:17:50,640 --> 00:17:53,360
be using uh stage loading it supports

455
00:17:53,360 --> 00:17:54,480
things like

456
00:17:54,480 --> 00:17:56,559
uh encrypted communication it supports

457
00:17:56,559 --> 00:18:00,000
communication over http or https as well

458
00:18:00,000 --> 00:18:02,720
or straight up tcp

459
00:18:02,720 --> 00:18:03,600
it

460
00:18:03,600 --> 00:18:06,000
has process migration capabilities

461
00:18:06,000 --> 00:18:07,200
basically

462
00:18:07,200 --> 00:18:10,160
uh once you exploit that initial process

463
00:18:10,160 --> 00:18:13,039
you can migrate the metasploit payload

464
00:18:13,039 --> 00:18:15,360
into different process so the detection

465
00:18:15,360 --> 00:18:18,080
is harder on one hand but also

466
00:18:18,080 --> 00:18:21,360
uh if if that initial process crashes

467
00:18:21,360 --> 00:18:23,520
because of the exploit you still have a

468
00:18:23,520 --> 00:18:25,840
connection back and you still uh have

469
00:18:25,840 --> 00:18:26,840
that

470
00:18:26,840 --> 00:18:31,280
uh foot into into the target

471
00:18:31,280 --> 00:18:32,240
um

472
00:18:32,240 --> 00:18:34,480
there's also modules that can be run

473
00:18:34,480 --> 00:18:37,200
within uh interpreter so it's kind of

474
00:18:37,200 --> 00:18:39,280
dynamically extensible it

475
00:18:39,280 --> 00:18:42,640
it's all mostly seamless to you but uh

476
00:18:42,640 --> 00:18:44,640
sometimes you you will be loading

477
00:18:44,640 --> 00:18:46,960
additional modules this is mostly true

478
00:18:46,960 --> 00:18:50,160
i think for uh windows because you have

479
00:18:50,160 --> 00:18:51,360
things like

480
00:18:51,360 --> 00:18:54,000
uh modules for things like mimikats and

481
00:18:54,000 --> 00:18:56,320
and likes they're not uh loaded

482
00:18:56,320 --> 00:18:58,240
automatically but just keep in mind

483
00:18:58,240 --> 00:19:00,640
there's additional things you can launch

484
00:19:00,640 --> 00:19:02,160
load the dynamically into the

485
00:19:02,160 --> 00:19:03,360
interpreter

486
00:19:03,360 --> 00:19:05,440
and it has quite a lot of capabilities

487
00:19:05,440 --> 00:19:07,600
obviously you can invoke shells uh to

488
00:19:07,600 --> 00:19:10,559
interact with the target but uh there's

489
00:19:10,559 --> 00:19:12,960
modules there's uh network traffic

490
00:19:12,960 --> 00:19:14,799
forwarding so we'll talk about that when

491
00:19:14,799 --> 00:19:16,720
we talk about pivoting

492
00:19:16,720 --> 00:19:19,280
upload download files search for files

493
00:19:19,280 --> 00:19:22,960
etc and it doesn't touch disk so when

494
00:19:22,960 --> 00:19:25,760
the exploit is executed

495
00:19:25,760 --> 00:19:27,600
and the interpreter is loaded into the

496
00:19:27,600 --> 00:19:30,080
memory it it in majority of the cases

497
00:19:30,080 --> 00:19:33,840
it's not going to be written to the disk

498
00:19:35,039 --> 00:19:38,880
okay the database um

499
00:19:38,880 --> 00:19:42,160
so as i said the database is an optional

500
00:19:42,160 --> 00:19:44,559
component you can run metasploit without

501
00:19:44,559 --> 00:19:45,760
the database

502
00:19:45,760 --> 00:19:48,400
i would recommend doing doing

503
00:19:48,400 --> 00:19:52,360
starting the the database

504
00:19:53,360 --> 00:19:54,720
um and

505
00:19:54,720 --> 00:19:56,320
basically anything you do will be

506
00:19:56,320 --> 00:19:58,559
populated within the database

507
00:19:58,559 --> 00:20:00,799
there's this concept of workspaces which

508
00:20:00,799 --> 00:20:02,320
allows you to

509
00:20:02,320 --> 00:20:04,159
if you want it allows you to segregate

510
00:20:04,159 --> 00:20:06,080
different engagements into different

511
00:20:06,080 --> 00:20:07,919
kind of partitions of the database so

512
00:20:07,919 --> 00:20:11,520
you basically can create a new workspace

513
00:20:11,520 --> 00:20:14,320
uh for a new target or a new engagement

514
00:20:14,320 --> 00:20:15,919
and then

515
00:20:15,919 --> 00:20:18,000
your kind of default workspace will not

516
00:20:18,000 --> 00:20:18,960
be

517
00:20:18,960 --> 00:20:20,640
so basically all the information that's

518
00:20:20,640 --> 00:20:22,640
being collected for a single engagement

519
00:20:22,640 --> 00:20:24,960
can be isolated in a single workspace so

520
00:20:24,960 --> 00:20:26,880
that it's easier to reuse easier to

521
00:20:26,880 --> 00:20:29,120
explore later on

522
00:20:29,120 --> 00:20:30,799
i'm not going to explain all the

523
00:20:30,799 --> 00:20:32,799
commands right away we have a slide if

524
00:20:32,799 --> 00:20:35,600
we get to it talking about the

525
00:20:35,600 --> 00:20:38,480
database commands at the end but the the

526
00:20:38,480 --> 00:20:40,880
main one is probably db status it'll

527
00:20:40,880 --> 00:20:43,200
show you if your metasploit framework is

528
00:20:43,200 --> 00:20:44,960
connected to the database at the moment

529
00:20:44,960 --> 00:20:46,240
or not

530
00:20:46,240 --> 00:20:49,919
uh and workspace command is used to

531
00:20:49,919 --> 00:20:51,919
create or switch between the workspaces

532
00:20:51,919 --> 00:20:53,840
so when you start mess fluid

533
00:20:53,840 --> 00:20:56,159
uh initially you're you're gonna end up

534
00:20:56,159 --> 00:20:58,559
in the default workspace so if you don't

535
00:20:58,559 --> 00:21:00,640
create a new workspace everything you

536
00:21:00,640 --> 00:21:02,720
ever do in the metasploit is going to be

537
00:21:02,720 --> 00:21:05,760
saved into that default works workspace

538
00:21:05,760 --> 00:21:07,360
and the last of the the rest of the

539
00:21:07,360 --> 00:21:09,679
commands are used to essentially query

540
00:21:09,679 --> 00:21:11,520
the database so you can list hosts

541
00:21:11,520 --> 00:21:13,919
services that you found uh things like

542
00:21:13,919 --> 00:21:16,799
files and hashtags and vulnerabilities

543
00:21:16,799 --> 00:21:18,640
you've exploited credentials you found

544
00:21:18,640 --> 00:21:20,559
etc

545
00:21:20,559 --> 00:21:22,559
so the database

546
00:21:22,559 --> 00:21:25,520
on cali is not started automatically at

547
00:21:25,520 --> 00:21:28,799
least it wasn't six months ago

548
00:21:28,799 --> 00:21:31,120
so when you first use metasploit you

549
00:21:31,120 --> 00:21:33,440
need to initialize the database you do

550
00:21:33,440 --> 00:21:37,520
that using msfdb init command and then

551
00:21:37,520 --> 00:21:40,559
before you start the metasploit console

552
00:21:40,559 --> 00:21:44,159
you do ms msfdb start and then once you

553
00:21:44,159 --> 00:21:46,159
start the console it's gonna

554
00:21:46,159 --> 00:21:47,840
connect to the database and start using

555
00:21:47,840 --> 00:21:49,918
it

556
00:21:52,960 --> 00:21:55,200
okay one more thing before we dive into

557
00:21:55,200 --> 00:21:57,440
the actual meta split commands there's

558
00:21:57,440 --> 00:21:59,760
metasploit also comes with additional

559
00:21:59,760 --> 00:22:02,000
command line tools that you can use

560
00:22:02,000 --> 00:22:04,640
outside of the metasploit console or or

561
00:22:04,640 --> 00:22:06,640
the metals or any of the

562
00:22:06,640 --> 00:22:07,679
uis

563
00:22:07,679 --> 00:22:10,159
so the first one is probably the most

564
00:22:10,159 --> 00:22:13,360
widely used one uh it's called msf venom

565
00:22:13,360 --> 00:22:15,600
it's a tool that basically allows you to

566
00:22:15,600 --> 00:22:18,960
generate mess with payloads outside

567
00:22:18,960 --> 00:22:21,520
outside of the console it's often used

568
00:22:21,520 --> 00:22:23,840
for client-side attacks so you basically

569
00:22:23,840 --> 00:22:26,240
like generate hda file that you then

570
00:22:26,240 --> 00:22:29,200
send to some user they open it and that

571
00:22:29,200 --> 00:22:31,760
runs uh that runs the

572
00:22:31,760 --> 00:22:33,120
the payload connects back to your

573
00:22:33,120 --> 00:22:34,640
machine that kind of thing so you can

574
00:22:34,640 --> 00:22:37,120
specify all the parameters that you'll

575
00:22:37,120 --> 00:22:39,120
need to make that payload work like

576
00:22:39,120 --> 00:22:40,960
where to connect back to you what ports

577
00:22:40,960 --> 00:22:44,640
to use what type of payload etc and from

578
00:22:44,640 --> 00:22:46,880
command line you basically generate this

579
00:22:46,880 --> 00:22:49,360
file and they support

580
00:22:49,360 --> 00:22:51,520
various different types of

581
00:22:51,520 --> 00:22:53,280
of the

582
00:22:53,280 --> 00:22:55,200
file formats for the output

583
00:22:55,200 --> 00:22:57,360
uh and you specify all the parameters

584
00:22:57,360 --> 00:22:59,679
and you get the file that you can use

585
00:22:59,679 --> 00:23:01,919
as a payload and basically execute

586
00:23:01,919 --> 00:23:04,559
somehow outside of metasploit but then

587
00:23:04,559 --> 00:23:06,080
uh the connection comes back to your

588
00:23:06,080 --> 00:23:07,919
meta split console and you can interact

589
00:23:07,919 --> 00:23:09,679
with that payload from your metasploit

590
00:23:09,679 --> 00:23:11,760
console

591
00:23:11,760 --> 00:23:15,600
there's also interactive assembler shell

592
00:23:15,600 --> 00:23:17,679
this could be useful if you're writing

593
00:23:17,679 --> 00:23:19,919
your own exploits like stack overflows

594
00:23:19,919 --> 00:23:20,960
and whatnot

595
00:23:20,960 --> 00:23:23,360
and also pattern create pattern offset

596
00:23:23,360 --> 00:23:25,600
that's very useful for

597
00:23:25,600 --> 00:23:28,880
uh again static uh

598
00:23:28,880 --> 00:23:31,600
stack overflow exploit writing to find

599
00:23:31,600 --> 00:23:33,840
offset it's basically a way to create

600
00:23:33,840 --> 00:23:35,440
and search for unique patterns to find

601
00:23:35,440 --> 00:23:37,600
find the offsets

602
00:23:37,600 --> 00:23:40,159
uh all of these under cali are installed

603
00:23:40,159 --> 00:23:42,880
in user share metasploit framework slash

604
00:23:42,880 --> 00:23:43,840
tools

605
00:23:43,840 --> 00:23:45,840
uh they are in your path so you can just

606
00:23:45,840 --> 00:23:47,200
type if you need to use them you can

607
00:23:47,200 --> 00:23:49,360
just type msf venom and

608
00:23:49,360 --> 00:23:51,440
go from there

609
00:23:51,440 --> 00:23:52,720
okay

610
00:23:52,720 --> 00:23:54,159
now i'm going to quickly check if

611
00:23:54,159 --> 00:23:56,640
there's any questions and then feel free

612
00:23:56,640 --> 00:23:58,559
to interrupt me as well if there's a

613
00:23:58,559 --> 00:24:00,720
question that's worthwhile

614
00:24:00,720 --> 00:24:03,720
discussing

615
00:24:05,600 --> 00:24:06,960
i think most of the questions have just

616
00:24:06,960 --> 00:24:08,880
been about setting up the uh vm at the

617
00:24:08,880 --> 00:24:10,159
moment so i think we're probably okay

618
00:24:10,159 --> 00:24:12,320
okay perfect

619
00:24:12,320 --> 00:24:15,200
uh one thing i'll mention about that uh

620
00:24:15,200 --> 00:24:18,559
make sure you register on that ctfd

621
00:24:18,559 --> 00:24:20,159
site per

622
00:24:20,159 --> 00:24:23,360
per the guide per the setup guide

623
00:24:23,360 --> 00:24:26,080
this is not a ctf but it's a good way

624
00:24:26,080 --> 00:24:28,960
for us to kind of track progress and see

625
00:24:28,960 --> 00:24:31,039
how much time we need per

626
00:24:31,039 --> 00:24:33,360
lab that kind of thing and also see if

627
00:24:33,360 --> 00:24:36,000
anybody needs help and is too shy to to

628
00:24:36,000 --> 00:24:38,799
to ask questions

629
00:24:39,679 --> 00:24:40,880
all right

630
00:24:40,880 --> 00:24:45,120
with that uh some basics of the basic

631
00:24:45,120 --> 00:24:47,360
fluid commands

632
00:24:47,360 --> 00:24:49,039
so the first one and the most important

633
00:24:49,039 --> 00:24:51,360
one is called use and that's what allows

634
00:24:51,360 --> 00:24:53,919
you to load the module that you want to

635
00:24:53,919 --> 00:24:56,159
use

636
00:24:56,799 --> 00:24:59,039
it doesn't run the module from the get

637
00:24:59,039 --> 00:25:00,880
go it basically allows you to set

638
00:25:00,880 --> 00:25:02,880
parameters for that module before you

639
00:25:02,880 --> 00:25:05,440
execute the module so

640
00:25:05,440 --> 00:25:08,559
the general workflow for at least the

641
00:25:08,559 --> 00:25:10,559
exploitation modules is you'll find the

642
00:25:10,559 --> 00:25:13,440
right module you you'll do use and then

643
00:25:13,440 --> 00:25:15,200
the module name and the module name is

644
00:25:15,200 --> 00:25:17,279
kind of modular with the slashes so

645
00:25:17,279 --> 00:25:19,840
you'll see that in a bit to use and then

646
00:25:19,840 --> 00:25:22,320
the module name you set parameters so

647
00:25:22,320 --> 00:25:25,120
that set and set g commands the fourth

648
00:25:25,120 --> 00:25:27,360
line allows you to set parameters for

649
00:25:27,360 --> 00:25:29,279
that module so the parameters would be

650
00:25:29,279 --> 00:25:30,480
things like

651
00:25:30,480 --> 00:25:31,600
target

652
00:25:31,600 --> 00:25:33,279
target port

653
00:25:33,279 --> 00:25:34,799
your local

654
00:25:34,799 --> 00:25:36,960
host ip basically where to connect back

655
00:25:36,960 --> 00:25:38,880
your local host port what port to use

656
00:25:38,880 --> 00:25:40,880
for that connection and things like that

657
00:25:40,880 --> 00:25:44,080
there's there's going to be other other

658
00:25:44,080 --> 00:25:46,000
parameters as well we'll we'll go

659
00:25:46,000 --> 00:25:48,000
through the most common ones in just a

660
00:25:48,000 --> 00:25:50,559
bit but set and set g will allow you to

661
00:25:50,559 --> 00:25:54,000
set parameters after you you've done use

662
00:25:54,000 --> 00:25:56,400
the difference between set and set g is

663
00:25:56,400 --> 00:25:58,799
g stands for global so if you just do

664
00:25:58,799 --> 00:26:01,840
set and uh parameter name parameter

665
00:26:01,840 --> 00:26:04,159
value it will set that parameter for

666
00:26:04,159 --> 00:26:06,480
that module only if you do set g and

667
00:26:06,480 --> 00:26:08,720
this is set g is useful

668
00:26:08,720 --> 00:26:12,240
uh for the target host as an example it

669
00:26:12,240 --> 00:26:14,640
will set that parameter globally meaning

670
00:26:14,640 --> 00:26:16,720
that even if you use a diff different

671
00:26:16,720 --> 00:26:19,360
module later on that parameter will be

672
00:26:19,360 --> 00:26:22,080
preset to that global value

673
00:26:22,080 --> 00:26:24,799
so once you do use uh module name you

674
00:26:24,799 --> 00:26:27,039
can also or before you do use module

675
00:26:27,039 --> 00:26:28,960
name you can also do info and module

676
00:26:28,960 --> 00:26:30,480
name and it will give you information

677
00:26:30,480 --> 00:26:34,320
about that module so what it is what cbs

678
00:26:34,320 --> 00:26:36,960
it it

679
00:26:37,039 --> 00:26:39,919
it exploits uh etc

680
00:26:39,919 --> 00:26:42,480
uh show options will show you all the

681
00:26:42,480 --> 00:26:44,000
different options that this module

682
00:26:44,000 --> 00:26:46,559
supports so what are the things that you

683
00:26:46,559 --> 00:26:48,159
can't what are the parameters that you

684
00:26:48,159 --> 00:26:50,240
can set it will also indicate which

685
00:26:50,240 --> 00:26:52,880
parameters are required and which are

686
00:26:52,880 --> 00:26:55,120
optional and it will also show you what

687
00:26:55,120 --> 00:26:57,039
are the default values for some of those

688
00:26:57,039 --> 00:26:59,520
parameters if they have any so once you

689
00:26:59,520 --> 00:27:01,279
do all of that

690
00:27:01,279 --> 00:27:02,640
you

691
00:27:02,640 --> 00:27:04,159
you

692
00:27:04,159 --> 00:27:06,559
do run or exploit this is the basically

693
00:27:06,559 --> 00:27:08,400
the same command and that actually

694
00:27:08,400 --> 00:27:10,159
executes the module

695
00:27:10,159 --> 00:27:10,960
and

696
00:27:10,960 --> 00:27:13,279
it you can do exploit even if it's not

697
00:27:13,279 --> 00:27:15,039
an exploit module is just the name of

698
00:27:15,039 --> 00:27:16,640
the command obviously

699
00:27:16,640 --> 00:27:18,720
so you find the module you use the

700
00:27:18,720 --> 00:27:21,760
module you show you review the options

701
00:27:21,760 --> 00:27:24,480
you set all the parameters you run it if

702
00:27:24,480 --> 00:27:26,640
you if the execution is successful you

703
00:27:26,640 --> 00:27:29,440
will get a session back you basically

704
00:27:29,440 --> 00:27:31,360
have will have an established session

705
00:27:31,360 --> 00:27:33,360
with the target host

706
00:27:33,360 --> 00:27:35,279
with the payload that that you've set

707
00:27:35,279 --> 00:27:37,440
for that module and you can interact

708
00:27:37,440 --> 00:27:39,360
with those sessions using the sessions

709
00:27:39,360 --> 00:27:42,480
command so things like list sessions uh

710
00:27:42,480 --> 00:27:44,320
interact with a session to

711
00:27:44,320 --> 00:27:46,720
uh open shell or check information about

712
00:27:46,720 --> 00:27:48,880
the host et cetera et cetera and once

713
00:27:48,880 --> 00:27:51,120
you're in uh and in the session you can

714
00:27:51,120 --> 00:27:53,520
use at least the interpreter session you

715
00:27:53,520 --> 00:27:54,720
can use

716
00:27:54,720 --> 00:27:58,320
uh background command or back command to

717
00:27:58,320 --> 00:28:00,559
so for the interpreter session you can

718
00:28:00,559 --> 00:28:02,480
use background command to kind of exit

719
00:28:02,480 --> 00:28:04,399
from that session back to the main

720
00:28:04,399 --> 00:28:07,120
metasploit console uh prompt and you can

721
00:28:07,120 --> 00:28:09,200
use back command if you did a used

722
00:28:09,200 --> 00:28:11,279
module you can use back to go back to

723
00:28:11,279 --> 00:28:12,960
the kind of the main

724
00:28:12,960 --> 00:28:15,120
uh the main prompt of

725
00:28:15,120 --> 00:28:16,720
exit the module prompt go back to the

726
00:28:16,720 --> 00:28:18,960
main prompt

727
00:28:18,960 --> 00:28:21,760
now this last bit bit is quite important

728
00:28:21,760 --> 00:28:25,200
in terms of your ability to

729
00:28:25,200 --> 00:28:28,320
find information and and help yourself

730
00:28:28,320 --> 00:28:29,360
so

731
00:28:29,360 --> 00:28:33,120
uh help command uh provides help about

732
00:28:33,120 --> 00:28:35,919
metasploit commands so if you don't know

733
00:28:35,919 --> 00:28:37,520
how to or like what commands are

734
00:28:37,520 --> 00:28:39,919
available to you help is helpful if you

735
00:28:39,919 --> 00:28:41,760
know the command you can do command

736
00:28:41,760 --> 00:28:43,520
usually with with

737
00:28:43,520 --> 00:28:45,440
h and it will show you all the options

738
00:28:45,440 --> 00:28:47,520
for that specific command

739
00:28:47,520 --> 00:28:49,520
search is very useful we'll talk about

740
00:28:49,520 --> 00:28:53,200
search in quite a bit of detail in after

741
00:28:53,200 --> 00:28:55,679
the first lab so search allows you to

742
00:28:55,679 --> 00:28:59,279
find the mod the right modules that uh

743
00:28:59,279 --> 00:29:01,520
will be applicable to your target system

744
00:29:01,520 --> 00:29:05,840
so you can do it by keyword or cve id or

745
00:29:05,840 --> 00:29:08,480
like version numbers etc

746
00:29:08,480 --> 00:29:10,320
info shows you information about the

747
00:29:10,320 --> 00:29:12,720
modules so you can either do use module

748
00:29:12,720 --> 00:29:15,039
name and then once you're in the module

749
00:29:15,039 --> 00:29:16,799
do info and it will display your

750
00:29:16,799 --> 00:29:18,320
information about the current module you

751
00:29:18,320 --> 00:29:21,039
can do info and then the module name

752
00:29:21,039 --> 00:29:22,880
from the main

753
00:29:22,880 --> 00:29:25,919
metasploit prompt to check information

754
00:29:25,919 --> 00:29:28,159
about that specific module

755
00:29:28,159 --> 00:29:29,279
and show

756
00:29:29,279 --> 00:29:31,600
uh shows information about modules so

757
00:29:31,600 --> 00:29:33,360
we'll cover show

758
00:29:33,360 --> 00:29:35,440
later on as well and keep in mind

759
00:29:35,440 --> 00:29:37,600
there's tab completion so

760
00:29:37,600 --> 00:29:39,600
uh tab completion works for command

761
00:29:39,600 --> 00:29:42,240
stamp tab completion works for module

762
00:29:42,240 --> 00:29:45,440
parameters it basically

763
00:29:45,440 --> 00:29:47,600
as in uh linux command line tab

764
00:29:47,600 --> 00:29:50,159
completion is a must-have

765
00:29:50,159 --> 00:29:53,360
so if you're stuck definitely

766
00:29:53,360 --> 00:29:54,640
no

767
00:29:54,640 --> 00:29:57,360
keep in mind those uh help commands help

768
00:29:57,360 --> 00:29:59,279
search info probably are the the main

769
00:29:59,279 --> 00:30:00,159
ones

770
00:30:00,159 --> 00:30:02,080
uh and and

771
00:30:02,080 --> 00:30:06,158
that's how you get unstuck usually

772
00:30:06,880 --> 00:30:08,480
all right

773
00:30:08,480 --> 00:30:09,919
with that

774
00:30:09,919 --> 00:30:12,960
we are at lab one and in lab one we're

775
00:30:12,960 --> 00:30:14,320
essentially

776
00:30:14,320 --> 00:30:15,360
uh

777
00:30:15,360 --> 00:30:17,760
starting all the machines uh making sure

778
00:30:17,760 --> 00:30:20,480
that uh the connectivity works

779
00:30:20,480 --> 00:30:21,279
uh

780
00:30:21,279 --> 00:30:23,039
and then just exploring some module

781
00:30:23,039 --> 00:30:24,640
listing uh

782
00:30:24,640 --> 00:30:26,080
listing

783
00:30:26,080 --> 00:30:30,000
exploits listing payloads um etc so this

784
00:30:30,000 --> 00:30:33,039
is the tasks for lab one i think we're

785
00:30:33,039 --> 00:30:34,640
gonna do then we're probably gonna do

786
00:30:34,640 --> 00:30:37,279
what five minutes or so and then do do a

787
00:30:37,279 --> 00:30:39,279
walkthrough

788
00:30:39,279 --> 00:30:41,520
yeah so we'll give you a

789
00:30:41,520 --> 00:30:43,120
chance here to actually do this yourself

790
00:30:43,120 --> 00:30:44,480
and then i'll walk you through the

791
00:30:44,480 --> 00:30:46,720
different commands

792
00:30:46,720 --> 00:30:48,159
so it's about

793
00:30:48,159 --> 00:30:53,679
6 37 east oh sorry 9 37 eastern

794
00:30:53,679 --> 00:30:56,720
and uh we'll be back around

795
00:30:56,720 --> 00:30:59,600
uh 6 42 so if you haven't finished the

796
00:30:59,600 --> 00:31:02,159
setup do that now

797
00:31:02,159 --> 00:31:03,200
if you need

798
00:31:03,200 --> 00:31:05,600
to ask for help do it in the discord

799
00:31:05,600 --> 00:31:06,640
channel

800
00:31:06,640 --> 00:31:08,880
and we'll be back with the walkthrough

801
00:31:08,880 --> 00:31:12,360
in five minutes

802
00:31:36,159 --> 00:31:40,600
dan can you check you can share screen

803
00:31:48,000 --> 00:31:49,440
yep yep

804
00:31:49,440 --> 00:31:51,440
i think it's yours

805
00:31:51,440 --> 00:31:53,360
uh korean is controlling which screen is

806
00:31:53,360 --> 00:31:54,799
being shipped oh okay

807
00:31:54,799 --> 00:31:56,720
so okay you're getting the presentation

808
00:31:56,720 --> 00:31:58,480
until it's my turn to share thanks for

809
00:31:58,480 --> 00:32:01,519
paying attention here green

810
00:32:02,720 --> 00:32:03,840
we're going to keep you on your toes

811
00:32:03,840 --> 00:32:05,120
because we go back and forth a couple

812
00:32:05,120 --> 00:32:08,120
times

813
00:32:13,060 --> 00:32:16,210
[Music]

814
00:32:41,840 --> 00:32:43,918
you

815
00:33:16,960 --> 00:33:19,279
your mic is on by the way then

816
00:33:19,279 --> 00:33:21,600
yep no worries

817
00:33:21,600 --> 00:33:24,799
is it being kind of loud

818
00:33:24,799 --> 00:33:29,440
no but just in case you start swearing

819
00:33:29,600 --> 00:33:30,720
everything's working right now i don't

820
00:33:30,720 --> 00:33:33,960
need to swear

821
00:34:12,800 --> 00:34:14,480
for everyone setting up their vm as well

822
00:34:14,480 --> 00:34:15,839
you're going to want to make note of

823
00:34:15,839 --> 00:34:17,918
what i p address the gibson actually got

824
00:34:17,918 --> 00:34:19,679
there it's going to make your work here

825
00:34:19,679 --> 00:34:23,079
a little bit easier

826
00:34:35,679 --> 00:34:38,679
uh

827
00:34:49,679 --> 00:34:51,119
and if there are any questions setting

828
00:34:51,119 --> 00:34:52,399
this up or if you still have problems

829
00:34:52,399 --> 00:34:54,320
with your vm you got another couple

830
00:34:54,320 --> 00:34:58,200
minutes here to ask us

831
00:35:14,079 --> 00:35:17,079
so

832
00:35:18,000 --> 00:35:20,320
by the way you should all see

833
00:35:20,320 --> 00:35:23,280
all the labs in the

834
00:35:23,280 --> 00:35:26,320
in ctfd

835
00:35:27,200 --> 00:35:30,000
and so if you think you've done with

836
00:35:30,000 --> 00:35:34,280
lab1 you can mark it as complete

837
00:35:53,890 --> 00:35:56,969
[Music]

838
00:36:23,839 --> 00:36:27,280
we're at five minutes

839
00:36:27,280 --> 00:36:30,160
everybody post in in discord if you need

840
00:36:30,160 --> 00:36:31,760
a little bit more time

841
00:36:31,760 --> 00:36:34,880
if not i think we're gonna

842
00:36:34,880 --> 00:36:38,680
do a walkthrough

843
00:36:40,560 --> 00:36:42,240
all right so a little bit worried that i

844
00:36:42,240 --> 00:36:44,079
haven't seen anybody put their name up

845
00:36:44,079 --> 00:36:45,599
on the scoreboard yet

846
00:36:45,599 --> 00:36:48,720
but we'll go through here

847
00:36:50,000 --> 00:36:52,400
so first thing we want to do

848
00:36:52,400 --> 00:36:54,160
hopefully you've got a screen similar to

849
00:36:54,160 --> 00:36:55,760
what i have here with the nice cali

850
00:36:55,760 --> 00:36:58,160
prompts

851
00:36:59,440 --> 00:37:01,119
we want to bring up the database first

852
00:37:01,119 --> 00:37:02,240
so we're going to initialize the

853
00:37:02,240 --> 00:37:08,118
database and that's sudo msfdb in it

854
00:37:09,599 --> 00:37:11,440
this will go through and

855
00:37:11,440 --> 00:37:13,040
i've done this one already so mine's

856
00:37:13,040 --> 00:37:15,280
ready to go

857
00:37:15,280 --> 00:37:16,320
we also want to make sure that the

858
00:37:16,320 --> 00:37:20,280
database is actually running

859
00:37:26,880 --> 00:37:28,320
and then we want to bring up the msf

860
00:37:28,320 --> 00:37:31,320
console

861
00:37:49,280 --> 00:37:52,720
so we've got this running

862
00:37:52,720 --> 00:37:54,000
we're going to create ourselves a new

863
00:37:54,000 --> 00:37:56,560
workspace

864
00:37:57,440 --> 00:38:02,119
we'll call it hackfest because why not

865
00:38:09,359 --> 00:38:11,040
and we're going to show all the exploits

866
00:38:11,040 --> 00:38:14,279
that we have

867
00:38:21,200 --> 00:38:23,480
and we can see that last point has

868
00:38:23,480 --> 00:38:26,960
1841 exploits at the moment

869
00:38:26,960 --> 00:38:30,320
and that is always expanding

870
00:38:30,640 --> 00:38:33,839
check payloads

871
00:38:35,119 --> 00:38:38,480
73 different payloads

872
00:38:42,160 --> 00:38:46,118
we're going to list the post exploits

873
00:38:46,960 --> 00:38:48,560
should i be using poster type here

874
00:38:48,560 --> 00:38:50,480
rather than just the name but this works

875
00:38:50,480 --> 00:38:52,760
better

876
00:38:52,760 --> 00:38:56,079
366 different post exploitation

877
00:38:56,079 --> 00:38:58,640
modules

878
00:38:59,200 --> 00:39:00,640
you'll notice that all of the names

879
00:39:00,640 --> 00:39:02,480
always start with whatever type of

880
00:39:02,480 --> 00:39:04,640
module it is first

881
00:39:04,640 --> 00:39:07,359
then some kind of categorization

882
00:39:07,359 --> 00:39:09,680
before you get to the actual name of it

883
00:39:09,680 --> 00:39:11,200
however when you're trying to use any of

884
00:39:11,200 --> 00:39:13,040
these for instance if i was trying to

885
00:39:13,040 --> 00:39:14,480
use

886
00:39:14,480 --> 00:39:17,440
this android gather sub info

887
00:39:17,440 --> 00:39:19,760
i can just type use just that little bit

888
00:39:19,760 --> 00:39:21,680
there

889
00:39:21,680 --> 00:39:23,119
and it will find it

890
00:39:23,119 --> 00:39:24,400
and will get me

891
00:39:24,400 --> 00:39:27,960
set up for it

892
00:39:32,560 --> 00:39:33,839
all right are there any questions about

893
00:39:33,839 --> 00:39:35,119
this so far

894
00:39:35,119 --> 00:39:37,280
difference between use and show use if

895
00:39:37,280 --> 00:39:38,960
there's only one result is going to

896
00:39:38,960 --> 00:39:41,119
immediately load that module

897
00:39:41,119 --> 00:39:44,000
not just show it

898
00:39:45,440 --> 00:39:46,880
so if i know the one that i'm looking

899
00:39:46,880 --> 00:39:48,960
for and i have a pretty good idea how

900
00:39:48,960 --> 00:39:50,800
long the string is there

901
00:39:50,800 --> 00:39:52,480
or how much of the string i need to type

902
00:39:52,480 --> 00:39:54,480
to get just one module i can just type

903
00:39:54,480 --> 00:39:57,680
use and it'll immediately allow

904
00:40:09,359 --> 00:40:12,560
what if i it something like that

905
00:40:13,440 --> 00:40:18,640
sorry 2162 modules exploit modules

906
00:40:21,359 --> 00:40:24,720
yeah close enough

907
00:40:24,720 --> 00:40:27,680
a lot of modules

908
00:40:32,160 --> 00:40:33,839
and lastly we're going to check the db

909
00:40:33,839 --> 00:40:36,000
status here

910
00:40:36,000 --> 00:40:37,680
we can see that we are connected we do

911
00:40:37,680 --> 00:40:38,560
have

912
00:40:38,560 --> 00:40:41,680
connection to the database

913
00:40:43,680 --> 00:40:44,960
and since i didn't do this at the

914
00:40:44,960 --> 00:40:46,640
beginning i would like to also show that

915
00:40:46,640 --> 00:40:48,400
we have i guess you're probably not

916
00:40:48,400 --> 00:40:50,560
going to be able to see this but

917
00:40:50,560 --> 00:40:52,960
my ip address for my gibson box my

918
00:40:52,960 --> 00:40:56,760
target box is 10.024

919
00:40:56,960 --> 00:40:58,720
and i do have connectivity to it right

920
00:40:58,720 --> 00:41:00,400
now

921
00:41:00,400 --> 00:41:04,200
so i'm ready to go

922
00:41:13,839 --> 00:41:14,720
all right

923
00:41:14,720 --> 00:41:16,400
any other questions here before we move

924
00:41:16,400 --> 00:41:19,400
on

925
00:41:21,440 --> 00:41:23,599
can you provide the url yes i can

926
00:41:23,599 --> 00:41:25,440
provide the url

927
00:41:25,440 --> 00:41:27,920
there was a question then

928
00:41:27,920 --> 00:41:29,680
so one of the questions we have is a

929
00:41:29,680 --> 00:41:32,560
difference between

930
00:41:32,839 --> 00:41:35,520
um yeah that's what that was

931
00:41:35,520 --> 00:41:36,720
okay

932
00:41:36,720 --> 00:41:37,680
oh you did

933
00:41:37,680 --> 00:41:38,880
yep

934
00:41:38,880 --> 00:41:40,880
between stage and unstaged

935
00:41:40,880 --> 00:41:42,800
oh i'm sorry

936
00:41:42,800 --> 00:41:45,520
yes sorry the last part of the lab here

937
00:41:45,520 --> 00:41:47,920
so you can see the different module

938
00:41:47,920 --> 00:41:50,720
names you have linux x64 interpreter

939
00:41:50,720 --> 00:41:54,000
reverse reverse tcp you have slash

940
00:41:54,000 --> 00:41:56,160
reverse http

941
00:41:56,160 --> 00:41:57,359
and then you have one further down

942
00:41:57,359 --> 00:41:59,599
that's interpreter underscore reverse

943
00:41:59,599 --> 00:42:01,040
tcp

944
00:42:01,040 --> 00:42:02,480
now the difference between the slash and

945
00:42:02,480 --> 00:42:04,400
the underscore is the underscore is an

946
00:42:04,400 --> 00:42:06,960
unstaged payload meaning that the entire

947
00:42:06,960 --> 00:42:08,800
payload is in that whatever you produce

948
00:42:08,800 --> 00:42:11,680
with the uh executable or whatever you

949
00:42:11,680 --> 00:42:14,000
produce with either msf venom or

950
00:42:14,000 --> 00:42:16,880
when you're executing an exploit

951
00:42:16,880 --> 00:42:18,640
it's going to be a much larger upload

952
00:42:18,640 --> 00:42:20,400
initially but it won't need to download

953
00:42:20,400 --> 00:42:22,160
any kind of staging afterwards to get it

954
00:42:22,160 --> 00:42:24,319
going

955
00:42:24,319 --> 00:42:27,119
with the interpreter slash reverse tcp

956
00:42:27,119 --> 00:42:30,000
or slash whatever transport you're using

957
00:42:30,000 --> 00:42:32,960
it will actually only load a very small

958
00:42:32,960 --> 00:42:35,200
less than a kilobyte of data to load the

959
00:42:35,200 --> 00:42:38,078
rest of the module

960
00:42:39,359 --> 00:42:41,359
so if you have a limit to how much data

961
00:42:41,359 --> 00:42:42,480
you can actually upload or how much

962
00:42:42,480 --> 00:42:45,760
shell code you can upload the staged

963
00:42:45,760 --> 00:42:47,359
payload is always going to be the better

964
00:42:47,359 --> 00:42:49,680
option

965
00:42:57,440 --> 00:42:59,520
ale you have copied and pasted your

966
00:42:59,520 --> 00:43:02,560
entire command prompt into there so try

967
00:43:02,560 --> 00:43:06,920
just the db underscore status

968
00:43:12,960 --> 00:43:15,040
remember that this prompt will actually

969
00:43:15,040 --> 00:43:16,800
change as we go through the different

970
00:43:16,800 --> 00:43:17,839
modules

971
00:43:17,839 --> 00:43:19,440
so we'll always show which module we're

972
00:43:19,440 --> 00:43:22,839
currently on

973
00:43:32,880 --> 00:43:34,480
now if you have gone through this

974
00:43:34,480 --> 00:43:36,000
already you make sure that you're on

975
00:43:36,000 --> 00:43:38,880
ctfd and you have put the

976
00:43:38,880 --> 00:43:41,119
you have marked the flag is complete i

977
00:43:41,119 --> 00:43:42,880
see four people have gone through so far

978
00:43:42,880 --> 00:43:44,640
that's perfect that's gonna help us keep

979
00:43:44,640 --> 00:43:46,160
track of how far and how fast we're

980
00:43:46,160 --> 00:43:49,399
going here

981
00:43:54,640 --> 00:43:56,480
and again that's just that this address

982
00:43:56,480 --> 00:43:58,800
here

983
00:43:59,599 --> 00:44:02,599
packfest.ctf.dc604.ca

984
00:44:13,760 --> 00:44:16,400
we've got five people yes

985
00:44:16,400 --> 00:44:18,720
where do you find the flag uh there is

986
00:44:18,720 --> 00:44:20,400
no flag for this one you just have to go

987
00:44:20,400 --> 00:44:22,800
to the challenge

988
00:44:22,800 --> 00:44:25,359
the flag is in the challenge

989
00:44:25,359 --> 00:44:28,078
description

990
00:44:28,400 --> 00:44:30,319
there's gonna be flags down the road

991
00:44:30,319 --> 00:44:32,560
yeah

992
00:44:32,640 --> 00:44:34,560
we don't work very hard at hiding these

993
00:44:34,560 --> 00:44:37,839
flags don't worry

994
00:44:47,520 --> 00:44:49,280
okay

995
00:44:49,280 --> 00:44:51,880
a couple of more minutes and we're gonna

996
00:44:51,880 --> 00:44:54,989
[Music]

997
00:44:56,319 --> 00:44:57,680
make sure you've

998
00:44:57,680 --> 00:45:00,480
marked the lab as complete

999
00:45:00,480 --> 00:45:02,640
so if you go for this one if you go into

1000
00:45:02,640 --> 00:45:05,640
the

1001
00:45:05,760 --> 00:45:07,520
into the challenges

1002
00:45:07,520 --> 00:45:10,640
and open lab 1

1003
00:45:11,040 --> 00:45:14,640
there's only one challenge in there

1004
00:45:14,640 --> 00:45:16,640
and it gives you the

1005
00:45:16,640 --> 00:45:19,440
flag name right in the challenge so just

1006
00:45:19,440 --> 00:45:20,480
mark

1007
00:45:20,480 --> 00:45:24,599
lab1 is complete basically

1008
00:45:33,760 --> 00:45:38,280
yes we've got seven people

1009
00:45:48,800 --> 00:45:52,079
okay are we ready

1010
00:45:54,960 --> 00:45:57,359
no more

1011
00:45:58,839 --> 00:46:02,880
questions going once going twice

1012
00:46:02,880 --> 00:46:04,880
all right green can you switch our uh

1013
00:46:04,880 --> 00:46:07,760
presentation back

1014
00:46:08,160 --> 00:46:11,480
thank you

1015
00:46:16,240 --> 00:46:18,880
okay so i think we've talked about

1016
00:46:18,880 --> 00:46:22,160
all of this um

1017
00:46:22,640 --> 00:46:25,040
so the module names uh we talked about

1018
00:46:25,040 --> 00:46:26,400
that they're kind of

1019
00:46:26,400 --> 00:46:28,800
separated by slashes there's

1020
00:46:28,800 --> 00:46:31,280
module type uh

1021
00:46:31,280 --> 00:46:32,560
so

1022
00:46:32,560 --> 00:46:33,920
basically different components talk

1023
00:46:33,920 --> 00:46:37,520
about different things so there's uh

1024
00:46:37,520 --> 00:46:40,000
module type type of the

1025
00:46:40,000 --> 00:46:41,680
scanner for auxiliary type of the

1026
00:46:41,680 --> 00:46:44,480
service name of the module itself and

1027
00:46:44,480 --> 00:46:48,079
exploits they go by os first and then

1028
00:46:48,079 --> 00:46:50,079
service that they exploit or a product

1029
00:46:50,079 --> 00:46:51,760
or software that they exploit and then

1030
00:46:51,760 --> 00:46:54,319
name of the module etc and we've talked

1031
00:46:54,319 --> 00:46:56,480
about the differences between staged and

1032
00:46:56,480 --> 00:46:59,119
unstaged

1033
00:47:02,000 --> 00:47:04,400
okay

1034
00:47:08,000 --> 00:47:09,680
here we go so first thing we're going to

1035
00:47:09,680 --> 00:47:11,520
do is scan

1036
00:47:11,520 --> 00:47:13,200
our vulnerable machine

1037
00:47:13,200 --> 00:47:15,680
there's multiple ways of doing that

1038
00:47:15,680 --> 00:47:17,200
firstly

1039
00:47:17,200 --> 00:47:18,880
metasploit can

1040
00:47:18,880 --> 00:47:22,640
import scan results from other tools

1041
00:47:22,640 --> 00:47:25,119
and so what you do in in that case you

1042
00:47:25,119 --> 00:47:26,400
can

1043
00:47:26,400 --> 00:47:28,240
scan the host outside of metasploit

1044
00:47:28,240 --> 00:47:31,040
using for example nmap and then there's

1045
00:47:31,040 --> 00:47:34,160
a command called db import and it will

1046
00:47:34,160 --> 00:47:36,400
import the scan results into the

1047
00:47:36,400 --> 00:47:38,640
metasploit if you care about having

1048
00:47:38,640 --> 00:47:40,960
those results in the database at all or

1049
00:47:40,960 --> 00:47:43,920
you can run db underscore end map right

1050
00:47:43,920 --> 00:47:46,720
from metasploit and that actually does

1051
00:47:46,720 --> 00:47:48,640
all those steps automatically so you can

1052
00:47:48,640 --> 00:47:50,720
provide the same flags to db and map

1053
00:47:50,720 --> 00:47:52,720
that you would to nmap

1054
00:47:52,720 --> 00:47:54,000
and it will

1055
00:47:54,000 --> 00:47:55,920
run the end map with those flags and

1056
00:47:55,920 --> 00:47:56,720
then

1057
00:47:56,720 --> 00:47:59,119
import the results into the database

1058
00:47:59,119 --> 00:48:02,079
there's also scanning modules within

1059
00:48:02,079 --> 00:48:04,960
like native modules within metasploit so

1060
00:48:04,960 --> 00:48:07,359
you can search for port scan

1061
00:48:07,359 --> 00:48:10,319
for port scanning so an example of of a

1062
00:48:10,319 --> 00:48:12,480
port scan would will be this auxiliary

1063
00:48:12,480 --> 00:48:17,359
module scanner slash port scan slash tcp

1064
00:48:17,359 --> 00:48:18,880
there's other

1065
00:48:18,880 --> 00:48:20,800
scanning modules as well not just the

1066
00:48:20,800 --> 00:48:23,119
port scans you can and to explore them

1067
00:48:23,119 --> 00:48:25,440
you can search for scanner or underscore

1068
00:48:25,440 --> 00:48:28,800
login and that basically checks uh a

1069
00:48:28,800 --> 00:48:31,280
specific user id and password

1070
00:48:31,280 --> 00:48:32,800
combination if you can

1071
00:48:32,800 --> 00:48:35,040
log into to some service and there's

1072
00:48:35,040 --> 00:48:37,440
also enum which tries to enumerate

1073
00:48:37,440 --> 00:48:40,800
either users or enumerate uh usernames

1074
00:48:40,800 --> 00:48:43,040
and and and passwords as well so you can

1075
00:48:43,040 --> 00:48:44,319
search for

1076
00:48:44,319 --> 00:48:46,480
for those to to explore

1077
00:48:46,480 --> 00:48:49,839
additional scanners

1078
00:48:49,839 --> 00:48:51,440
um

1079
00:48:51,440 --> 00:48:53,920
all right

1080
00:48:54,480 --> 00:48:56,559
uh this is this is just showing all the

1081
00:48:56,559 --> 00:48:58,319
different formats that db import

1082
00:48:58,319 --> 00:49:00,800
supports again this is to import this

1083
00:49:00,800 --> 00:49:02,880
skin results that of the scans that

1084
00:49:02,880 --> 00:49:04,960
happened outside of mensploit into the

1085
00:49:04,960 --> 00:49:06,640
metasploit database

1086
00:49:06,640 --> 00:49:08,800
uh there's a lot of them i've never used

1087
00:49:08,800 --> 00:49:12,400
anything uh apart from nmap and even in

1088
00:49:12,400 --> 00:49:13,599
nmap i

1089
00:49:13,599 --> 00:49:15,359
don't think i ever used actually db

1090
00:49:15,359 --> 00:49:17,040
import command like if you need map

1091
00:49:17,040 --> 00:49:18,960
results in metal split you just do db

1092
00:49:18,960 --> 00:49:21,760
underscore and map

1093
00:49:22,559 --> 00:49:24,720
so again the the way you use scanner

1094
00:49:24,720 --> 00:49:27,119
modules the flow is very similar to what

1095
00:49:27,119 --> 00:49:29,839
we went through already so you find the

1096
00:49:29,839 --> 00:49:33,359
right module you issue use module name

1097
00:49:33,359 --> 00:49:34,480
command

1098
00:49:34,480 --> 00:49:36,880
then you do show options to check what

1099
00:49:36,880 --> 00:49:38,880
parameters you need to set

1100
00:49:38,880 --> 00:49:41,760
uh and then you do set parameter name

1101
00:49:41,760 --> 00:49:44,480
parameter value all with spaces no equal

1102
00:49:44,480 --> 00:49:46,240
signs

1103
00:49:46,240 --> 00:49:47,680
and then you

1104
00:49:47,680 --> 00:49:48,880
do run

1105
00:49:48,880 --> 00:49:51,119
so

1106
00:49:52,559 --> 00:49:56,400
an example would be the sport scan so

1107
00:49:56,400 --> 00:49:57,359
we've

1108
00:49:57,359 --> 00:49:59,920
we've loaded the module options or show

1109
00:49:59,920 --> 00:50:02,800
options shows us uh what what parameters

1110
00:50:02,800 --> 00:50:05,599
we can set so things like concurrency uh

1111
00:50:05,599 --> 00:50:08,079
delay jitter etc etc

1112
00:50:08,079 --> 00:50:11,760
and then the our hosts parameter is

1113
00:50:11,760 --> 00:50:13,680
required so you can see it in this

1114
00:50:13,680 --> 00:50:15,359
column in the required column and it

1115
00:50:15,359 --> 00:50:17,440
doesn't have any value obviously by

1116
00:50:17,440 --> 00:50:20,640
default so you need to set our host to

1117
00:50:20,640 --> 00:50:22,720
to be the target ip address of our

1118
00:50:22,720 --> 00:50:24,400
vulnerable vm

1119
00:50:24,400 --> 00:50:29,119
and then run um and then you yeah you

1120
00:50:29,119 --> 00:50:32,400
see results of that scan

1121
00:50:32,960 --> 00:50:34,800
so that's what we're gonna do for lab

1122
00:50:34,800 --> 00:50:38,720
two support scan the vm uh identify the

1123
00:50:38,720 --> 00:50:40,319
all the versions of all the active

1124
00:50:40,319 --> 00:50:42,559
services

1125
00:50:42,559 --> 00:50:44,880
check available scanner modules use

1126
00:50:44,880 --> 00:50:45,760
those

1127
00:50:45,760 --> 00:50:47,760
search scanner

1128
00:50:47,760 --> 00:50:49,520
command to see if you find anything

1129
00:50:49,520 --> 00:50:50,880
interesting

1130
00:50:50,880 --> 00:50:51,599
so

1131
00:50:51,599 --> 00:50:53,359
do a little bit of exploration if you

1132
00:50:53,359 --> 00:50:55,040
have time left

1133
00:50:55,040 --> 00:50:58,880
um and a couple hints here the the port

1134
00:50:58,880 --> 00:51:01,280
scan the build the metasploit for scan

1135
00:51:01,280 --> 00:51:03,599
module can be slow if you use it

1136
00:51:03,599 --> 00:51:05,920
definitely adjust that concurrency

1137
00:51:05,920 --> 00:51:08,000
parameter to be something like a hundred

1138
00:51:08,000 --> 00:51:10,480
maybe like a couple hundred

1139
00:51:10,480 --> 00:51:13,520
uh if not you can use db nmap and set

1140
00:51:13,520 --> 00:51:14,960
whatever like

1141
00:51:14,960 --> 00:51:18,480
dash t5 or the min rate

1142
00:51:18,480 --> 00:51:23,640
and and use that to port scan

1143
00:51:23,839 --> 00:51:26,559
this should be fairly quick i'm gonna

1144
00:51:26,559 --> 00:51:31,200
set the timer for five minutes and we'll

1145
00:51:31,200 --> 00:51:34,480
check back afterwards

1146
00:51:35,119 --> 00:51:38,400
so in lab two there's more

1147
00:51:38,400 --> 00:51:40,160
uh there's more flags than the

1148
00:51:40,160 --> 00:51:42,720
challenges

1149
00:51:43,200 --> 00:51:47,760
so in in lab two uh so open ports um

1150
00:51:47,760 --> 00:51:49,520
there's a service

1151
00:51:49,520 --> 00:51:51,440
there's a tomcat service

1152
00:51:51,440 --> 00:51:53,760
that's on one of the open ports

1153
00:51:53,760 --> 00:51:54,559
so

1154
00:51:54,559 --> 00:51:56,079
one of the flags is the version of the

1155
00:51:56,079 --> 00:51:58,400
tomcat and then just mark lab2 is

1156
00:51:58,400 --> 00:52:00,319
completed so there's three

1157
00:52:00,319 --> 00:52:02,640
uh three challenges in lab two

1158
00:52:02,640 --> 00:52:05,839
in in ctfd

1159
00:53:56,640 --> 00:53:58,079
i suppose it works better when our mics

1160
00:53:58,079 --> 00:53:59,280
are turned on

1161
00:53:59,280 --> 00:54:02,079
airmen youtube

1162
00:54:04,559 --> 00:54:06,319
so we've been talking for the last uh

1163
00:54:06,319 --> 00:54:07,599
minute here without anyone hearing us

1164
00:54:07,599 --> 00:54:10,480
that's fantastic

1165
00:54:10,480 --> 00:54:11,599
all right

1166
00:54:11,599 --> 00:54:13,839
sorry guys so there was a question chat

1167
00:54:13,839 --> 00:54:16,000
sorry oh sorry go ahead now i was going

1168
00:54:16,000 --> 00:54:18,880
to say the a hint for open ports

1169
00:54:18,880 --> 00:54:21,040
challenge or the answer to the open

1170
00:54:21,040 --> 00:54:23,359
ports challenge is there's more than one

1171
00:54:23,359 --> 00:54:26,720
open port go find it

1172
00:54:29,440 --> 00:54:31,599
so there is a question in chat here

1173
00:54:31,599 --> 00:54:33,599
about the difference between db and map

1174
00:54:33,599 --> 00:54:35,839
and port scan tcp

1175
00:54:35,839 --> 00:54:37,280
dbm map will actually launch the

1176
00:54:37,280 --> 00:54:39,280
external tool and map

1177
00:54:39,280 --> 00:54:41,040
which usually exists on most pen testing

1178
00:54:41,040 --> 00:54:43,040
installations

1179
00:54:43,040 --> 00:54:44,720
and then it will take the results and

1180
00:54:44,720 --> 00:54:46,079
put that into the database for

1181
00:54:46,079 --> 00:54:48,720
metasploit

1182
00:54:48,720 --> 00:54:50,640
it does not however use something called

1183
00:54:50,640 --> 00:54:52,240
metasploit routing which we haven't

1184
00:54:52,240 --> 00:54:53,839
touched on yet but we will talk about in

1185
00:54:53,839 --> 00:54:56,000
just a moment here

1186
00:54:56,000 --> 00:54:58,960
port scan tcp goes slower typically than

1187
00:54:58,960 --> 00:55:00,880
nmap but it will actually use

1188
00:55:00,880 --> 00:55:02,559
metasploits routing which makes it a lot

1189
00:55:02,559 --> 00:55:04,319
more powerful when you are going through

1190
00:55:04,319 --> 00:55:07,839
pivots and things like that

1191
00:56:07,680 --> 00:56:10,680
so

1192
00:56:30,960 --> 00:56:33,040
just looking at ctfd here it looks like

1193
00:56:33,040 --> 00:56:34,640
at least one person's jumped ahead to

1194
00:56:34,640 --> 00:56:37,200
lab three

1195
00:56:37,280 --> 00:56:39,280
that's actually good to see

1196
00:56:39,280 --> 00:56:41,359
and somebody's scanning the wrong

1197
00:56:41,359 --> 00:56:42,319
host

1198
00:56:42,319 --> 00:56:44,480
finding port 135

1199
00:56:44,480 --> 00:56:48,480
there's no port 135 on the voldemort vm

1200
00:56:48,480 --> 00:56:50,559
check your ip address

1201
00:56:50,559 --> 00:56:52,400
if you're finding port 135 you're

1202
00:56:52,400 --> 00:56:54,240
probably scanning your host computer not

1203
00:56:54,240 --> 00:56:56,240
your own computer

1204
00:56:56,240 --> 00:56:59,839
turn up the target computer rather

1205
00:57:05,200 --> 00:57:09,879
all right our timer is up

1206
00:57:13,359 --> 00:57:16,960
all right so again on my ibm the ip

1207
00:57:16,960 --> 00:57:20,079
address i'm getting for gibson is 10 0 2

1208
00:57:20,079 --> 00:57:23,079
4.

1209
00:57:27,119 --> 00:57:30,160
the first thing i'm going to do

1210
00:57:30,160 --> 00:57:33,040
bring up nmap

1211
00:57:34,640 --> 00:57:36,480
we're going to not bother pinging this

1212
00:57:36,480 --> 00:57:37,760
that's what that

1213
00:57:37,760 --> 00:57:39,280
means

1214
00:57:39,280 --> 00:57:41,839
we're going to use tcp connect

1215
00:57:41,839 --> 00:57:43,119
because we're not running his route

1216
00:57:43,119 --> 00:57:44,799
right now so the syn connect is not

1217
00:57:44,799 --> 00:57:46,480
going to work

1218
00:57:46,480 --> 00:57:49,440
we're going to scan all ports

1219
00:57:49,440 --> 00:57:50,640
and we're going to make sure that this

1220
00:57:50,640 --> 00:57:52,480
doesn't take forever by making sure that

1221
00:57:52,480 --> 00:57:54,160
it tries ten thousand attempts every

1222
00:57:54,160 --> 00:57:56,558
second

1223
00:57:57,040 --> 00:58:00,480
and then we'll give it the target ip

1224
00:58:05,599 --> 00:58:07,599
and in about six or seven seconds here

1225
00:58:07,599 --> 00:58:11,079
this should finish

1226
00:58:24,319 --> 00:58:27,040
10 seconds 20 seconds

1227
00:58:27,040 --> 00:58:28,960
there we go

1228
00:58:28,960 --> 00:58:32,559
and we found our two open ports here

1229
00:58:33,680 --> 00:58:34,839
so we have

1230
00:58:34,839 --> 00:58:39,720
8080 and we have 49009

1231
00:58:53,760 --> 00:58:56,079
and we'll i don't know

1232
00:58:56,079 --> 00:58:57,520
amaran should we just use the end map

1233
00:58:57,520 --> 00:59:00,400
for uh version identification

1234
00:59:00,400 --> 00:59:01,920
oh yeah i think so

1235
00:59:01,920 --> 00:59:02,839
all

1236
00:59:02,839 --> 00:59:05,040
right so again we're going to open up

1237
00:59:05,040 --> 00:59:06,559
that map we're not going to bother

1238
00:59:06,559 --> 00:59:08,960
pinging we're going to use tcp

1239
00:59:08,960 --> 00:59:10,319
this time we're only going to target

1240
00:59:10,319 --> 00:59:14,240
ports 8080 and 49009

1241
00:59:14,240 --> 00:59:16,079
and if i was smart i would actually do

1242
00:59:16,079 --> 00:59:21,200
sv which is the version not tcp

1243
00:59:21,200 --> 00:59:23,040
and then again give it the target ip

1244
00:59:23,040 --> 00:59:25,359
address

1245
00:59:25,680 --> 00:59:29,599
so dvn map don't bother pinging it

1246
00:59:29,599 --> 00:59:31,839
look for the version on these two ports

1247
00:59:31,839 --> 00:59:35,160
of this ip

1248
00:59:51,839 --> 00:59:54,839
don't

1249
01:00:02,000 --> 01:00:03,680
and we see here that we have apache

1250
01:00:03,680 --> 01:00:05,920
tomcat 8521

1251
01:00:05,920 --> 01:00:11,400
and we have a java rmi exposed here

1252
01:00:14,480 --> 01:00:15,760
i think that was all we needed for the

1253
01:00:15,760 --> 01:00:16,640
flags

1254
01:00:16,640 --> 01:00:18,400
yeah yeah d

1255
01:00:18,400 --> 01:00:20,480
can you run also the same command but

1256
01:00:20,480 --> 01:00:24,720
with scripts to show that rmi there's

1257
01:00:24,720 --> 01:00:28,680
what's running in that rmi

1258
01:00:30,079 --> 01:00:32,480
sc

1259
01:00:33,839 --> 01:00:36,720
with scripts yep

1260
01:00:36,880 --> 01:00:39,200
is that a separate command or just that

1261
01:00:39,200 --> 01:00:41,119
uh it does matter

1262
01:00:41,119 --> 01:00:43,760
both work

1263
01:00:43,760 --> 01:00:46,000
yeah

1264
01:00:46,160 --> 01:00:48,319
what i meant is you can do that but and

1265
01:00:48,319 --> 01:00:53,960
you can also do both uh version and um

1266
01:01:03,520 --> 01:01:05,200
what

1267
01:01:05,200 --> 01:01:08,319
well that's a bit of a surprise

1268
01:01:09,440 --> 01:01:12,140
i'm pretty sure it used to work

1269
01:01:12,140 --> 01:01:16,400
[Laughter]

1270
01:01:16,400 --> 01:01:21,799
uh try both the version and the scripts

1271
01:01:24,240 --> 01:01:26,319
because didn't it it did detect that

1272
01:01:26,319 --> 01:01:30,160
it's java rmi right yes it did

1273
01:01:30,160 --> 01:01:32,000
you when you don't detect that scripts

1274
01:01:32,000 --> 01:01:35,040
don't know that they need to run

1275
01:01:35,040 --> 01:01:38,599
that's what i'm thinking

1276
01:01:47,440 --> 01:01:51,720
it's taking longer this time at least

1277
01:01:55,359 --> 01:01:57,760
if you need help to finish the lab uh

1278
01:01:57,760 --> 01:02:01,599
post your questions in discord

1279
01:02:02,079 --> 01:02:04,240
we're gonna do

1280
01:02:04,240 --> 01:02:06,079
a couple more minutes and we're gonna

1281
01:02:06,079 --> 01:02:08,559
continue

1282
01:02:08,559 --> 01:02:10,799
there we go

1283
01:02:10,799 --> 01:02:13,039
okay so we have java rmi the command

1284
01:02:13,039 --> 01:02:15,440
that we use

1285
01:02:15,440 --> 01:02:18,400
is here you need both the dash sv and

1286
01:02:18,400 --> 01:02:21,039
dash sc in there to show the proper

1287
01:02:21,039 --> 01:02:23,760
information that we're looking for

1288
01:02:23,760 --> 01:02:28,319
and what we have here is a jmx rmi

1289
01:02:31,760 --> 01:02:33,520
and i'll copy and paste this into

1290
01:02:33,520 --> 01:02:36,960
discord just so everyone can see here

1291
01:02:38,799 --> 01:02:39,839
so

1292
01:02:39,839 --> 01:02:41,760
dash v

1293
01:02:41,760 --> 01:02:43,760
v is in victor

1294
01:02:43,760 --> 01:02:45,599
that will do version checking so that's

1295
01:02:45,599 --> 01:02:47,200
what it checks to see

1296
01:02:47,200 --> 01:02:48,960
what kind of thing is running on that

1297
01:02:48,960 --> 01:02:50,400
port that's what showed us with the

1298
01:02:50,400 --> 01:02:52,240
version of tomcat

1299
01:02:52,240 --> 01:02:53,760
dash sc

1300
01:02:53,760 --> 01:02:55,599
c is in charlie

1301
01:02:55,599 --> 01:02:56,720
that will

1302
01:02:56,720 --> 01:02:59,280
do a run the end app scripts on it as

1303
01:02:59,280 --> 01:03:01,119
well which gives you more information or

1304
01:03:01,119 --> 01:03:04,240
sometimes can even show you

1305
01:03:04,559 --> 01:03:06,319
login information or anything else that

1306
01:03:06,319 --> 01:03:08,799
nmap might have in its custom scripts

1307
01:03:08,799 --> 01:03:09,920
we're not going to go too much further

1308
01:03:09,920 --> 01:03:11,359
into nmap this time around but if you

1309
01:03:11,359 --> 01:03:13,760
ever get a chance the nmap scripts have

1310
01:03:13,760 --> 01:03:17,839
a lot of useful information in them

1311
01:03:30,400 --> 01:03:31,440
and

1312
01:03:31,440 --> 01:03:32,799
i'm going to do this quickly on port

1313
01:03:32,799 --> 01:03:36,079
scan as well just so you can see

1314
01:03:39,839 --> 01:03:41,599
but i'm not going to do the full port

1315
01:03:41,599 --> 01:03:42,880
range because that will actually take

1316
01:03:42,880 --> 01:03:44,880
quite a while on this module

1317
01:03:44,880 --> 01:03:47,760
but we can see here

1318
01:03:47,760 --> 01:03:49,520
set that

1319
01:03:49,520 --> 01:03:51,359
we can set the ports to 8080 down to

1320
01:03:51,359 --> 01:03:54,319
49009

1321
01:03:54,319 --> 01:03:56,799
we'll set the r host to

1322
01:03:56,799 --> 01:03:58,640
the proper ip address not what i have on

1323
01:03:58,640 --> 01:04:01,279
my clipboard

1324
01:04:02,720 --> 01:04:05,919
and then we can try running this

1325
01:04:06,240 --> 01:04:07,680
and you can see that it did report that

1326
01:04:07,680 --> 01:04:09,599
both of these ports are open

1327
01:04:09,599 --> 01:04:13,839
assuming that both ports are open here

1328
01:04:17,119 --> 01:04:19,280
and as that mrm mentioned earlier there

1329
01:04:19,280 --> 01:04:21,280
is a concurrency option here

1330
01:04:21,280 --> 01:04:23,119
by default it's only set to 10 meaning

1331
01:04:23,119 --> 01:04:25,039
that it's only going to try 10 ports at

1332
01:04:25,039 --> 01:04:27,680
a time per target

1333
01:04:27,680 --> 01:04:29,039
obviously that would take quite a long

1334
01:04:29,039 --> 01:04:31,599
time to do if you're scanning all 65 000

1335
01:04:31,599 --> 01:04:32,799
ports

1336
01:04:32,799 --> 01:04:35,039
so if you are ever using port scan tcp

1337
01:04:35,039 --> 01:04:38,000
to scan in all ips on a host turn this

1338
01:04:38,000 --> 01:04:41,559
way up

1339
01:04:46,799 --> 01:04:49,119
and i would say about half of the people

1340
01:04:49,119 --> 01:04:50,960
participating right now have put the

1341
01:04:50,960 --> 01:04:53,200
flags in are there any issues with the

1342
01:04:53,200 --> 01:04:54,480
other people who haven't put the flags

1343
01:04:54,480 --> 01:04:56,799
in yet

1344
01:04:58,640 --> 01:05:01,119
dan somebody's having a weird issue the

1345
01:05:01,119 --> 01:05:04,720
db status showing that the connection is

1346
01:05:04,720 --> 01:05:08,160
fine but db and map says database not

1347
01:05:08,160 --> 01:05:10,000
connected have you ever seen anything

1348
01:05:10,000 --> 01:05:12,400
like that

1349
01:05:13,280 --> 01:05:15,359
only one that's been a

1350
01:05:15,359 --> 01:05:16,640
large number of hosts that i've been

1351
01:05:16,640 --> 01:05:19,280
scanning and you exhaust the

1352
01:05:19,280 --> 01:05:22,760
postgres connections

1353
01:05:23,359 --> 01:05:24,880
i doubt we're doing that since we're

1354
01:05:24,880 --> 01:05:28,000
only scanning the one host

1355
01:05:32,160 --> 01:05:35,160
okay

1356
01:05:50,319 --> 01:05:52,319
yeah if you initiated the database in a

1357
01:05:52,319 --> 01:05:54,559
separate terminal window after launching

1358
01:05:54,559 --> 01:05:57,200
msf console msf console likely won't be

1359
01:05:57,200 --> 01:05:58,160
connecting

1360
01:05:58,160 --> 01:05:59,440
properly

1361
01:05:59,440 --> 01:06:01,440
you can try closing the msf console and

1362
01:06:01,440 --> 01:06:03,039
reopening it and that should get you the

1363
01:06:03,039 --> 01:06:06,079
connection that you're looking for

1364
01:06:12,319 --> 01:06:13,680
and if you do want to make sure you can

1365
01:06:13,680 --> 01:06:15,839
just exit

1366
01:06:15,839 --> 01:06:18,960
again pseudo msfd msfdb.net

1367
01:06:18,960 --> 01:06:20,480
make sure that it is already started

1368
01:06:20,480 --> 01:06:22,720
already working

1369
01:06:22,720 --> 01:06:24,559
you start again just to double check

1370
01:06:24,559 --> 01:06:27,280
that it is going

1371
01:06:27,359 --> 01:06:28,799
and then reopen the console and it

1372
01:06:28,799 --> 01:06:32,200
should work there

1373
01:06:37,839 --> 01:06:39,680
all right we've got a number of people

1374
01:06:39,680 --> 01:06:42,319
who've done who've completed lab 2 if

1375
01:06:42,319 --> 01:06:44,880
you're still

1376
01:06:45,200 --> 01:06:47,200
on your way there uh if you've got

1377
01:06:47,200 --> 01:06:49,039
questions post in discord but we're

1378
01:06:49,039 --> 01:06:50,640
gonna

1379
01:06:50,640 --> 01:06:51,760
um

1380
01:06:51,760 --> 01:06:56,440
continue with the with the presentation

1381
01:07:03,520 --> 01:07:05,520
there we go okay

1382
01:07:05,520 --> 01:07:08,160
so exploitation

1383
01:07:08,160 --> 01:07:10,480
i mean that at the core this this works

1384
01:07:10,480 --> 01:07:13,039
the same as the as the scanners so

1385
01:07:13,039 --> 01:07:15,039
there's a bunch of exploitation modules

1386
01:07:15,039 --> 01:07:17,440
you find the right one you load it up

1387
01:07:17,440 --> 01:07:19,680
you set parameters you exploit you're

1388
01:07:19,680 --> 01:07:22,880
done or maybe not you're done but you

1389
01:07:22,880 --> 01:07:25,119
interact with the payload you do

1390
01:07:25,119 --> 01:07:28,880
pivoting you do whatever you need to do

1391
01:07:28,880 --> 01:07:31,359
so that's that's kind of at the core the

1392
01:07:31,359 --> 01:07:33,119
workflow is the same

1393
01:07:33,119 --> 01:07:35,760
so what's

1394
01:07:35,760 --> 01:07:37,440
what's important in that process is

1395
01:07:37,440 --> 01:07:40,160
finding the right exploit obviously uh

1396
01:07:40,160 --> 01:07:42,559
there's different ways to to approach

1397
01:07:42,559 --> 01:07:45,440
this um in kali there's a tool a command

1398
01:07:45,440 --> 01:07:47,200
line tool service ploid

1399
01:07:47,200 --> 01:07:50,400
which allows you to search exploit db

1400
01:07:50,400 --> 01:07:54,079
um you can use that uh it will in the

1401
01:07:54,079 --> 01:07:56,240
search results if if the name of the

1402
01:07:56,240 --> 01:07:58,559
exploit contains metasploit and in

1403
01:07:58,559 --> 01:07:59,760
brackets

1404
01:07:59,760 --> 01:08:02,960
uh or in parenthesis it it means that

1405
01:08:02,960 --> 01:08:06,000
it's a metasploit exploit in a lot of

1406
01:08:06,000 --> 01:08:07,520
cases it's going to be part of the

1407
01:08:07,520 --> 01:08:10,000
metasploit framework already sometimes

1408
01:08:10,000 --> 01:08:13,039
there's custom metasploit modules uh in

1409
01:08:13,039 --> 01:08:14,960
the exploit db that are not part of the

1410
01:08:14,960 --> 01:08:16,399
core metasploit framework so you

1411
01:08:16,399 --> 01:08:18,479
basically need to download it load it

1412
01:08:18,479 --> 01:08:20,880
separately and use it that way

1413
01:08:20,880 --> 01:08:23,359
what we're going to explore today is

1414
01:08:23,359 --> 01:08:25,520
searching within metasploits so in

1415
01:08:25,520 --> 01:08:26,960
metasploit we're going to use search

1416
01:08:26,960 --> 01:08:28,640
command i'm going to

1417
01:08:28,640 --> 01:08:30,319
show a little bit more about the search

1418
01:08:30,319 --> 01:08:32,799
in in just a bit but in simple terms you

1419
01:08:32,799 --> 01:08:35,279
do search and then use you can search by

1420
01:08:35,279 --> 01:08:37,679
keyword so if you're looking as we found

1421
01:08:37,679 --> 01:08:39,359
the tomcat

1422
01:08:39,359 --> 01:08:41,040
service if you're looking for exploits

1423
01:08:41,040 --> 01:08:42,880
that affect tomcat you you will do

1424
01:08:42,880 --> 01:08:45,520
search tomcat and often you will add the

1425
01:08:45,520 --> 01:08:48,399
version number as well so that you don't

1426
01:08:48,399 --> 01:08:51,198
get 100 irrelevant results

1427
01:08:51,198 --> 01:08:54,158
now when once you do that uh you would

1428
01:08:54,158 --> 01:08:56,719
want to at least if you narrowed down to

1429
01:08:56,719 --> 01:08:59,279
like a handful of modules that you want

1430
01:08:59,279 --> 01:09:00,479
to try

1431
01:09:00,479 --> 01:09:02,560
it's useful to check information about

1432
01:09:02,560 --> 01:09:05,880
those modules

1433
01:09:07,359 --> 01:09:10,319
the the information about the those mod

1434
01:09:10,319 --> 01:09:12,880
the modules will will contain the name

1435
01:09:12,880 --> 01:09:14,560
of the module the category in the

1436
01:09:14,560 --> 01:09:16,158
description and description will

1437
01:09:16,158 --> 01:09:19,120
basically say what that module does and

1438
01:09:19,120 --> 01:09:21,920
the category is more or less uh like

1439
01:09:21,920 --> 01:09:24,719
what type of service this this module uh

1440
01:09:24,719 --> 01:09:26,158
is applicable to

1441
01:09:26,158 --> 01:09:28,319
so in this case the example i have here

1442
01:09:28,319 --> 01:09:29,759
exploit is the

1443
01:09:29,759 --> 01:09:32,080
type of module it's an exploit module

1444
01:09:32,080 --> 01:09:34,479
multi means that it uh it is applicable

1445
01:09:34,479 --> 01:09:36,719
to multiple architectures multiple

1446
01:09:36,719 --> 01:09:39,920
operating systems http is the the

1447
01:09:39,920 --> 01:09:42,000
service category and then this is the

1448
01:09:42,000 --> 01:09:44,960
name of the module itself

1449
01:09:44,960 --> 01:09:47,198
the next interesting thing just to check

1450
01:09:47,198 --> 01:09:49,120
is the disclosure date that basically

1451
01:09:49,120 --> 01:09:50,399
shows you

1452
01:09:50,399 --> 01:09:52,960
uh gives you an understanding of like

1453
01:09:52,960 --> 01:09:55,679
how fresh that module is so if you know

1454
01:09:55,679 --> 01:09:58,239
that your target is fairly relatively

1455
01:09:58,239 --> 01:09:59,600
fresh or

1456
01:09:59,600 --> 01:10:01,520
is being updated

1457
01:10:01,520 --> 01:10:03,360
uh on a regular schedule then the

1458
01:10:03,360 --> 01:10:05,600
disclosure date will be an important

1459
01:10:05,600 --> 01:10:07,600
part of your search so you can narrow

1460
01:10:07,600 --> 01:10:10,159
down like you don't even check out

1461
01:10:10,159 --> 01:10:12,400
really old old modules

1462
01:10:12,400 --> 01:10:14,239
and the last important thing to check is

1463
01:10:14,239 --> 01:10:17,920
the rank the rank basically so with uh

1464
01:10:17,920 --> 01:10:19,920
exploit modules in a lot of cases those

1465
01:10:19,920 --> 01:10:21,520
modules will

1466
01:10:21,520 --> 01:10:22,480
work

1467
01:10:22,480 --> 01:10:24,719
um will be

1468
01:10:24,719 --> 01:10:27,040
kind of iffy in the sense that

1469
01:10:27,040 --> 01:10:29,760
they won't always work and the rank uh

1470
01:10:29,760 --> 01:10:32,159
is is a way for the authors of the

1471
01:10:32,159 --> 01:10:34,239
exploit to give you an indication of how

1472
01:10:34,239 --> 01:10:37,040
reliable that that exploit is

1473
01:10:37,040 --> 01:10:38,480
and so these are the ranks that are

1474
01:10:38,480 --> 01:10:41,360
defined what you're looking for ideally

1475
01:10:41,360 --> 01:10:45,920
is either excellent or great and

1476
01:10:45,920 --> 01:10:48,080
anything below that

1477
01:10:48,080 --> 01:10:50,480
there's high chance that it's

1478
01:10:50,480 --> 01:10:52,400
probably not going to work good might be

1479
01:10:52,400 --> 01:10:54,080
okay too

1480
01:10:54,080 --> 01:10:56,080
so excellent means it's a reliable it

1481
01:10:56,080 --> 01:10:58,960
will never crash the service that's um

1482
01:10:58,960 --> 01:11:00,880
important information as well

1483
01:11:00,880 --> 01:11:02,640
it usually doesn't involve memory

1484
01:11:02,640 --> 01:11:04,719
corruption which is kind of interrelated

1485
01:11:04,719 --> 01:11:07,679
with never crash the service so typical

1486
01:11:07,679 --> 01:11:10,400
uh exploit types for that that are

1487
01:11:10,400 --> 01:11:12,640
excellent would be sickle injection

1488
01:11:12,640 --> 01:11:14,159
command injection

1489
01:11:14,159 --> 01:11:16,000
uh remote file inclusion local fire

1490
01:11:16,000 --> 01:11:17,679
inclusion things like that so things

1491
01:11:17,679 --> 01:11:21,199
that don't usually uh include like

1492
01:11:21,199 --> 01:11:22,000
uh

1493
01:11:22,000 --> 01:11:24,800
hip exploits or stack overflows etc

1494
01:11:24,800 --> 01:11:27,360
because those have a higher chance of

1495
01:11:27,360 --> 01:11:29,120
crashing services that they try to

1496
01:11:29,120 --> 01:11:30,480
exploit

1497
01:11:30,480 --> 01:11:32,640
and then it goes from there it goes all

1498
01:11:32,640 --> 01:11:34,880
the way to manual manual meaning it's

1499
01:11:34,880 --> 01:11:35,760
very

1500
01:11:35,760 --> 01:11:39,120
unreliable if it works it's it's a

1501
01:11:39,120 --> 01:11:41,440
miracle essentially so in majority of

1502
01:11:41,440 --> 01:11:42,880
the cases you probably shouldn't be

1503
01:11:42,880 --> 01:11:45,440
looking at manual exploits unless you've

1504
01:11:45,440 --> 01:11:48,640
exhausted all of your other options so

1505
01:11:48,640 --> 01:11:50,640
the higher the rank the the more

1506
01:11:50,640 --> 01:11:53,360
reliable they exploit and and you should

1507
01:11:53,360 --> 01:11:55,600
be looking at at the exploits and at the

1508
01:11:55,600 --> 01:11:57,760
options that have higher rank

1509
01:11:57,760 --> 01:12:00,400
generally before you you look at the

1510
01:12:00,400 --> 01:12:03,760
exploits with the with the lower rank

1511
01:12:03,760 --> 01:12:07,040
so when you check uh with using the

1512
01:12:07,040 --> 01:12:09,920
example of that wordpress ninja forms i

1513
01:12:09,920 --> 01:12:12,400
don't think an authenticated file upload

1514
01:12:12,400 --> 01:12:13,600
so if you do

1515
01:12:13,600 --> 01:12:16,560
info on that module so we've got the the

1516
01:12:16,560 --> 01:12:18,640
name here the full name here

1517
01:12:18,640 --> 01:12:20,640
uh and then the rank excellent

1518
01:12:20,640 --> 01:12:23,280
disclosure date in the description down

1519
01:12:23,280 --> 01:12:25,280
below which usually will give you the

1520
01:12:25,280 --> 01:12:28,800
versions of um of that of the target

1521
01:12:28,800 --> 01:12:30,800
software that this exploit is applicable

1522
01:12:30,800 --> 01:12:33,600
to so these are the the main things then

1523
01:12:33,600 --> 01:12:36,560
info also will give you who wrote the

1524
01:12:36,560 --> 01:12:39,760
exploit information about the platform

1525
01:12:39,760 --> 01:12:42,080
available targets that sometimes is

1526
01:12:42,080 --> 01:12:43,920
interesting too so

1527
01:12:43,920 --> 01:12:47,840
uh in in some cases at least for like

1528
01:12:47,840 --> 01:12:49,679
lower ranked exploits you need to

1529
01:12:49,679 --> 01:12:51,840
manually set the target

1530
01:12:51,840 --> 01:12:53,840
sometimes the exploits can detect the

1531
01:12:53,840 --> 01:12:55,920
target automatically so basically

1532
01:12:55,920 --> 01:12:58,239
exploit might be targeting

1533
01:12:58,239 --> 01:13:00,080
it could be like different versions of

1534
01:13:00,080 --> 01:13:01,920
the target software or different

1535
01:13:01,920 --> 01:13:03,600
architectures

1536
01:13:03,600 --> 01:13:05,520
and things like that so that that's what

1537
01:13:05,520 --> 01:13:07,760
the target parameter is and then gives

1538
01:13:07,760 --> 01:13:10,480
you an idea of of the options uh for

1539
01:13:10,480 --> 01:13:13,199
that exploit

1540
01:13:13,199 --> 01:13:15,760
so how do we find the exploits so at the

1541
01:13:15,760 --> 01:13:18,719
core we're using search command and

1542
01:13:18,719 --> 01:13:21,040
looking for uh for the name of the

1543
01:13:21,040 --> 01:13:22,800
software and often you'll include the

1544
01:13:22,800 --> 01:13:24,560
version of the software as well at least

1545
01:13:24,560 --> 01:13:26,800
the major dot uh

1546
01:13:26,800 --> 01:13:28,000
miner

1547
01:13:28,000 --> 01:13:31,199
uh type version um you can also

1548
01:13:31,199 --> 01:13:33,360
you can also add search modifiers to the

1549
01:13:33,360 --> 01:13:35,440
search command and you do that

1550
01:13:35,440 --> 01:13:38,480
by using the modifier semicolon

1551
01:13:38,480 --> 01:13:40,960
so and the modifiers can be cve to

1552
01:13:40,960 --> 01:13:44,960
search by specific cbe id edb to search

1553
01:13:44,960 --> 01:13:47,679
by specific exploit db id

1554
01:13:47,679 --> 01:13:50,080
uh date and you can use abbreviated like

1555
01:13:50,080 --> 01:13:53,120
if you want exploits uh created in 2018

1556
01:13:53,120 --> 01:13:56,320
you can use date semicolon 2018

1557
01:13:56,320 --> 01:13:58,800
uh and then type if you want to add like

1558
01:13:58,800 --> 01:14:00,560
the module type because search will

1559
01:14:00,560 --> 01:14:02,480
search through all the modules not just

1560
01:14:02,480 --> 01:14:04,080
the exploit modules

1561
01:14:04,080 --> 01:14:05,920
and if you're getting a lot of the like

1562
01:14:05,920 --> 01:14:08,320
scanners or post exploitation results

1563
01:14:08,320 --> 01:14:09,760
and you want to filter them out you can

1564
01:14:09,760 --> 01:14:11,600
use type 2

1565
01:14:11,600 --> 01:14:12,719
to do that

1566
01:14:12,719 --> 01:14:16,320
you can filter by rank platform uh

1567
01:14:16,320 --> 01:14:18,000
name you usually wouldn't use name you

1568
01:14:18,000 --> 01:14:20,800
just will use uh keyword keyword search

1569
01:14:20,800 --> 01:14:23,840
but so these modifiers allow you to so

1570
01:14:23,840 --> 01:14:27,040
generally what i do is i search for

1571
01:14:27,040 --> 01:14:28,960
for the software name

1572
01:14:28,960 --> 01:14:31,360
uh if it's too much i cannot go through

1573
01:14:31,360 --> 01:14:33,360
all of them i'll add a version number or

1574
01:14:33,360 --> 01:14:35,120
at least start adding the version number

1575
01:14:35,120 --> 01:14:37,199
so for example for apache i'll start

1576
01:14:37,199 --> 01:14:40,000
with like 2.4 and then i might if it's

1577
01:14:40,000 --> 01:14:43,120
still too much i'll add the the last

1578
01:14:43,120 --> 01:14:46,239
version like 2.4 point something

1579
01:14:46,239 --> 01:14:48,400
at the end and then if it's too much

1580
01:14:48,400 --> 01:14:51,520
again uh you will try to narrow it down

1581
01:14:51,520 --> 01:14:54,480
using these search modifiers

1582
01:14:54,480 --> 01:14:56,400
so that's um

1583
01:14:56,400 --> 01:14:58,640
general approach for

1584
01:14:58,640 --> 01:15:01,360
searching for the right exploit

1585
01:15:01,360 --> 01:15:04,159
uh now running the exploit you will as

1586
01:15:04,159 --> 01:15:06,560
we've talked about you will do use

1587
01:15:06,560 --> 01:15:09,600
the module name uh generally you will

1588
01:15:09,600 --> 01:15:12,480
want to do at least show options uh

1589
01:15:12,480 --> 01:15:14,400
possibly info to just understand what

1590
01:15:14,400 --> 01:15:16,640
the exploit does but show options to

1591
01:15:16,640 --> 01:15:18,880
definitely check what parameters that

1592
01:15:18,880 --> 01:15:21,440
the module expects and so that you set

1593
01:15:21,440 --> 01:15:23,280
all the required parameters before

1594
01:15:23,280 --> 01:15:24,560
running it

1595
01:15:24,560 --> 01:15:26,239
common parameters

1596
01:15:26,239 --> 01:15:28,480
for the exploit modules

1597
01:15:28,480 --> 01:15:31,040
uh the most important one and that's

1598
01:15:31,040 --> 01:15:32,480
going to be present in the majority of

1599
01:15:32,480 --> 01:15:35,199
them is going to be our hosts and our

1600
01:15:35,199 --> 01:15:38,640
port that's the target host ipo host

1601
01:15:38,640 --> 01:15:40,800
name and the port number

1602
01:15:40,800 --> 01:15:44,719
uh you can see that uh it's the host is

1603
01:15:44,719 --> 01:15:47,920
plural you can specify multiple ips or

1604
01:15:47,920 --> 01:15:50,640
host names in there using comma

1605
01:15:50,640 --> 01:15:52,640
this actually is

1606
01:15:52,640 --> 01:15:55,040
relatively it's i don't want to say it's

1607
01:15:55,040 --> 01:15:57,679
new i think it was new in like version

1608
01:15:57,679 --> 01:16:00,880
five so it's been a couple years now but

1609
01:16:00,880 --> 01:16:02,960
previously you could only specify a

1610
01:16:02,960 --> 01:16:04,719
single host for the exploit now you can

1611
01:16:04,719 --> 01:16:07,280
specify multiple hosts and run across

1612
01:16:07,280 --> 01:16:10,320
multiple machines at the same time

1613
01:16:10,320 --> 01:16:14,400
uh uri path and target uri

1614
01:16:14,400 --> 01:16:16,640
so if it's an exploit against a web

1615
01:16:16,640 --> 01:16:18,000
service

1616
01:16:18,000 --> 01:16:20,320
they will often include this parameter

1617
01:16:20,320 --> 01:16:22,320
and that's so imagine like you're trying

1618
01:16:22,320 --> 01:16:24,320
to exploit wordpress and what presence

1619
01:16:24,320 --> 01:16:27,360
is installed under like site name slash

1620
01:16:27,360 --> 01:16:30,000
wordpress not at the root of the website

1621
01:16:30,000 --> 01:16:32,000
you will you will specify that slash

1622
01:16:32,000 --> 01:16:34,880
wordpress as uri path or target uri so

1623
01:16:34,880 --> 01:16:36,000
it basically

1624
01:16:36,000 --> 01:16:37,360
allows you to

1625
01:16:37,360 --> 01:16:40,880
uh target web exploits based on on that

1626
01:16:40,880 --> 01:16:42,960
uri path

1627
01:16:42,960 --> 01:16:45,520
l host and ml port

1628
01:16:45,520 --> 01:16:47,600
that's the host number and

1629
01:16:47,600 --> 01:16:51,679
and the host ip or name usually ap and

1630
01:16:51,679 --> 01:16:53,760
the port number to use on your local

1631
01:16:53,760 --> 01:16:56,320
attacker machine to receive connections

1632
01:16:56,320 --> 01:16:59,520
back so your machine might have

1633
01:16:59,520 --> 01:17:02,640
multiple ip addresses uh you might want

1634
01:17:02,640 --> 01:17:04,719
to use so it might be behind some sort

1635
01:17:04,719 --> 01:17:07,600
of net device and you might have a port

1636
01:17:07,600 --> 01:17:09,679
forwarded so you you wouldn't use your

1637
01:17:09,679 --> 01:17:11,760
like private ap you can specify a public

1638
01:17:11,760 --> 01:17:13,920
ip so that's ip that should be

1639
01:17:13,920 --> 01:17:16,320
accessible from your target machine so

1640
01:17:16,320 --> 01:17:18,320
it can connect back to your attacker

1641
01:17:18,320 --> 01:17:19,440
machine

1642
01:17:19,440 --> 01:17:22,480
you can also specify interface name and

1643
01:17:22,480 --> 01:17:24,880
this is very useful so for example if

1644
01:17:24,880 --> 01:17:26,320
you do

1645
01:17:26,320 --> 01:17:28,560
one of the hack the box machines

1646
01:17:28,560 --> 01:17:30,640
you'll connect over the vpn to to the

1647
01:17:30,640 --> 01:17:33,760
network you'll run meta split console

1648
01:17:33,760 --> 01:17:35,440
and you can do then

1649
01:17:35,440 --> 01:17:39,120
set lhost ton 0 which will be your vpn

1650
01:17:39,120 --> 01:17:41,600
interface and it will automatically pick

1651
01:17:41,600 --> 01:17:44,400
up the ap address on that interface to

1652
01:17:44,400 --> 01:17:46,400
use for those reverse connections you

1653
01:17:46,400 --> 01:17:48,159
don't need to go back and check if

1654
01:17:48,159 --> 01:17:49,280
config

1655
01:17:49,280 --> 01:17:51,679
or or things like that you're basically

1656
01:17:51,679 --> 01:17:53,440
you know the interface name you don't

1657
01:17:53,440 --> 01:17:55,920
care what dynamic ip it gives you just

1658
01:17:55,920 --> 01:17:59,760
specify the name and it's all good

1659
01:17:59,760 --> 01:18:03,360
then there's srv host and srv port

1660
01:18:03,360 --> 01:18:05,440
this is again the ip address and the

1661
01:18:05,440 --> 01:18:07,760
port number on your attacker machine

1662
01:18:07,760 --> 01:18:09,120
sometimes

1663
01:18:09,120 --> 01:18:11,600
sometimes the exploits require you to

1664
01:18:11,600 --> 01:18:13,600
host additional components that the

1665
01:18:13,600 --> 01:18:16,800
exploit uses as as part of the

1666
01:18:16,800 --> 01:18:19,920
exploitation and so srv hosts our report

1667
01:18:19,920 --> 01:18:23,120
is tells metasploit where to run

1668
01:18:23,120 --> 01:18:25,120
uh that service that serves those

1669
01:18:25,120 --> 01:18:26,640
additional components

1670
01:18:26,640 --> 01:18:29,920
generally l port and srv port should be

1671
01:18:29,920 --> 01:18:31,679
different so the connection from the

1672
01:18:31,679 --> 01:18:33,600
payload back to your machine is going to

1673
01:18:33,600 --> 01:18:35,520
be different from that serving

1674
01:18:35,520 --> 01:18:37,120
additional components for for the

1675
01:18:37,120 --> 01:18:39,120
exploit

1676
01:18:39,120 --> 01:18:42,080
um as i mentioned set g is a

1677
01:18:42,080 --> 01:18:44,719
useful thing so

1678
01:18:44,719 --> 01:18:47,679
often you would do that on our hosts uh

1679
01:18:47,679 --> 01:18:50,560
l host l port so you don't want to be

1680
01:18:50,560 --> 01:18:52,239
doing that every time you use a new

1681
01:18:52,239 --> 01:18:54,480
module so you do set g once and then

1682
01:18:54,480 --> 01:18:57,199
reuse it across multiple modules as you

1683
01:18:57,199 --> 01:18:59,199
kind of try different things

1684
01:18:59,199 --> 01:19:02,320
and the payload parameter sets

1685
01:19:02,320 --> 01:19:03,760
the payload

1686
01:19:03,760 --> 01:19:04,560
for

1687
01:19:04,560 --> 01:19:06,400
for that exploit

1688
01:19:06,400 --> 01:19:08,800
majority of the exploits will support

1689
01:19:08,800 --> 01:19:10,880
interpreter that's not always the case

1690
01:19:10,880 --> 01:19:13,760
sometimes uh shell is the only one that

1691
01:19:13,760 --> 01:19:16,960
they will support but you can do show

1692
01:19:16,960 --> 01:19:20,400
and possible uh payloads for

1693
01:19:20,400 --> 01:19:23,199
for a specific exploit is not shown in

1694
01:19:23,199 --> 01:19:24,719
show options

1695
01:19:24,719 --> 01:19:27,120
uh so you will you can do show payloads

1696
01:19:27,120 --> 01:19:28,880
once you've loaded them a specific

1697
01:19:28,880 --> 01:19:31,280
module to see what payloads it supports

1698
01:19:31,280 --> 01:19:33,679
and pick the right one if generally if

1699
01:19:33,679 --> 01:19:36,080
the payload if the explo exploit

1700
01:19:36,080 --> 01:19:38,320
supports interpreter it will be selected

1701
01:19:38,320 --> 01:19:40,640
by default so you don't need to set the

1702
01:19:40,640 --> 01:19:42,800
payload only if you want to tweak that

1703
01:19:42,800 --> 01:19:46,000
payload to better fit your needs uh you

1704
01:19:46,000 --> 01:19:48,640
can do that but by default it's it's

1705
01:19:48,640 --> 01:19:50,560
it's trying to set the most appropriate

1706
01:19:50,560 --> 01:19:53,120
one for that

1707
01:19:53,679 --> 01:19:56,159
okay i think i've covered most of the

1708
01:19:56,159 --> 01:19:58,800
stuff here i just wanted to visually go

1709
01:19:58,800 --> 01:20:00,560
again through through some of those

1710
01:20:00,560 --> 01:20:02,560
parameters at least the ones that you'll

1711
01:20:02,560 --> 01:20:05,120
encounter the most most often

1712
01:20:05,120 --> 01:20:07,600
so if you think about how that those

1713
01:20:07,600 --> 01:20:11,120
exploitation modules work so

1714
01:20:11,120 --> 01:20:13,120
your metasploit machine your attacker

1715
01:20:13,120 --> 01:20:15,120
machine is on the left here your target

1716
01:20:15,120 --> 01:20:16,639
is on the right here

1717
01:20:16,639 --> 01:20:18,719
that exploit will connect to the target

1718
01:20:18,719 --> 01:20:21,679
service so this number one here you need

1719
01:20:21,679 --> 01:20:23,360
to specify that

1720
01:20:23,360 --> 01:20:26,159
our hosts our port where to connect to

1721
01:20:26,159 --> 01:20:27,840
and if it's a web service sometimes

1722
01:20:27,840 --> 01:20:30,239
target uri

1723
01:20:30,239 --> 01:20:32,480
then this part is optional not all the

1724
01:20:32,480 --> 01:20:34,480
exploits will have these parameters or

1725
01:20:34,480 --> 01:20:36,480
will have this additional connection but

1726
01:20:36,480 --> 01:20:38,159
if the exploit requires additional

1727
01:20:38,159 --> 01:20:39,840
components to work

1728
01:20:39,840 --> 01:20:42,719
those components will be served on srv

1729
01:20:42,719 --> 01:20:45,600
host as the ip address srb port

1730
01:20:45,600 --> 01:20:49,040
and uri path if usually those things are

1731
01:20:49,040 --> 01:20:51,199
served through a web through a web

1732
01:20:51,199 --> 01:20:52,320
service

1733
01:20:52,320 --> 01:20:54,480
uri path in majority of the cases you

1734
01:20:54,480 --> 01:20:56,159
don't need to specify is generated

1735
01:20:56,159 --> 01:20:58,159
automatically randomly but if you're

1736
01:20:58,159 --> 01:20:59,920
picky about that you you can also

1737
01:20:59,920 --> 01:21:02,239
manually set it so this is optional this

1738
01:21:02,239 --> 01:21:04,159
is for those uh additional components

1739
01:21:04,159 --> 01:21:05,280
and again

1740
01:21:05,280 --> 01:21:08,320
uh srv host and this is true for both

1741
01:21:08,320 --> 01:21:11,520
srv host and lhost that ip address

1742
01:21:11,520 --> 01:21:14,159
should be reachable from your target so

1743
01:21:14,159 --> 01:21:16,080
think about that if there's any sort of

1744
01:21:16,080 --> 01:21:18,480
netting devices or if you're like doing

1745
01:21:18,480 --> 01:21:21,280
pivoting and and their connection back

1746
01:21:21,280 --> 01:21:22,560
comes through

1747
01:21:22,560 --> 01:21:24,560
some different networks so

1748
01:21:24,560 --> 01:21:27,120
the ip address should be accessible from

1749
01:21:27,120 --> 01:21:29,199
the target the target should be able to

1750
01:21:29,199 --> 01:21:31,679
connect back to your attacker machine

1751
01:21:31,679 --> 01:21:34,159
using that ap address

1752
01:21:34,159 --> 01:21:36,159
and the last connection is if the

1753
01:21:36,159 --> 01:21:38,960
exploit is successful and the payload

1754
01:21:38,960 --> 01:21:41,120
connects back to your handler that's the

1755
01:21:41,120 --> 01:21:42,560
connection number three and that

1756
01:21:42,560 --> 01:21:45,280
connection happens on l host is the ap

1757
01:21:45,280 --> 01:21:47,920
address and l port is the port number so

1758
01:21:47,920 --> 01:21:50,320
l port default port that the

1759
01:21:50,320 --> 01:21:53,199
metasploit uses is four four four four

1760
01:21:53,199 --> 01:21:56,639
uh if you want to be sneaky uh it's

1761
01:21:56,639 --> 01:22:00,239
generally a good idea to set it to 80 or

1762
01:22:00,239 --> 01:22:02,800
443 or 8080

1763
01:22:02,800 --> 01:22:05,920
though keep in mind if it's less than uh

1764
01:22:05,920 --> 01:22:09,040
10 24 you will need root permissions to

1765
01:22:09,040 --> 01:22:11,199
to open that port on your attacker

1766
01:22:11,199 --> 01:22:13,519
machine

1767
01:22:14,719 --> 01:22:16,719
so i'm gonna pause

1768
01:22:16,719 --> 01:22:18,880
for just a sec to see if there's any

1769
01:22:18,880 --> 01:22:22,320
questions about this

1770
01:22:23,280 --> 01:22:25,360
and i don't see any questions so if you

1771
01:22:25,360 --> 01:22:27,760
do have questions uh shout them out in

1772
01:22:27,760 --> 01:22:30,960
the discord

1773
01:22:34,639 --> 01:22:36,239
um

1774
01:22:36,239 --> 01:22:38,480
so the parameters that i've reviewed in

1775
01:22:38,480 --> 01:22:40,239
the previous slide those are the most

1776
01:22:40,239 --> 01:22:42,400
frequently used uh you can also

1777
01:22:42,400 --> 01:22:44,719
encounter additional ones

1778
01:22:44,719 --> 01:22:47,120
uh there can be username password or

1779
01:22:47,120 --> 01:22:50,239
user as pass and blank password stats

1780
01:22:50,239 --> 01:22:52,800
so modules that scan for brute force

1781
01:22:52,800 --> 01:22:54,800
username and passwords will use these

1782
01:22:54,800 --> 01:22:58,639
parameters so username password usually

1783
01:22:58,639 --> 01:23:00,719
if you want to check one specific set of

1784
01:23:00,719 --> 01:23:03,840
credentials users pass controls whether

1785
01:23:03,840 --> 01:23:06,560
to try to use username as password when

1786
01:23:06,560 --> 01:23:09,120
doing enumeration and blank passwords

1787
01:23:09,120 --> 01:23:12,159
uh basically it's a flag that that says

1788
01:23:12,159 --> 01:23:14,880
whether to try uh empty password or not

1789
01:23:14,880 --> 01:23:17,360
uh user pass file user file and pass

1790
01:23:17,360 --> 01:23:19,920
file again the same type of modules

1791
01:23:19,920 --> 01:23:22,480
where try to brute force credentials

1792
01:23:22,480 --> 01:23:24,639
user pass file is a single file that

1793
01:23:24,639 --> 01:23:27,199
specifies username semicolon password

1794
01:23:27,199 --> 01:23:29,760
and it the the scanner will go through

1795
01:23:29,760 --> 01:23:32,320
all those combinations and try them or

1796
01:23:32,320 --> 01:23:34,639
you can specify two separate files user

1797
01:23:34,639 --> 01:23:37,679
file and pass file and it in that case

1798
01:23:37,679 --> 01:23:40,560
the module will try every password in

1799
01:23:40,560 --> 01:23:42,639
the pass file with every username in the

1800
01:23:42,639 --> 01:23:44,560
user file so all the combinations

1801
01:23:44,560 --> 01:23:46,560
between the two whereas the user pass

1802
01:23:46,560 --> 01:23:48,480
file just specific username and

1803
01:23:48,480 --> 01:23:50,959
passwords

1804
01:23:51,280 --> 01:23:54,639
db all creds db all pass to be all users

1805
01:23:54,639 --> 01:23:57,199
that's for database scanning

1806
01:23:57,199 --> 01:24:00,080
again for the same user enumeration

1807
01:24:00,080 --> 01:24:01,440
modules you can

1808
01:24:01,440 --> 01:24:04,400
generally specify we see the flags says

1809
01:24:04,400 --> 01:24:06,560
saying stop on success this that's a

1810
01:24:06,560 --> 01:24:08,080
true false

1811
01:24:08,080 --> 01:24:10,719
uh parameter that you can set to true in

1812
01:24:10,719 --> 01:24:12,960
which case the module will stop as soon

1813
01:24:12,960 --> 01:24:14,800
as it finds the first set of valid

1814
01:24:14,800 --> 01:24:17,040
credentials if you don't set that flag

1815
01:24:17,040 --> 01:24:18,880
and i don't think it's set by default it

1816
01:24:18,880 --> 01:24:21,600
will try to go through your whole

1817
01:24:21,600 --> 01:24:24,080
provided users and passwords and just

1818
01:24:24,080 --> 01:24:25,120
show you

1819
01:24:25,120 --> 01:24:29,360
basically do the full enumeration

1820
01:24:29,600 --> 01:24:32,080
so target uh we won't use it today but

1821
01:24:32,080 --> 01:24:33,920
sometimes it's good to check there might

1822
01:24:33,920 --> 01:24:36,400
be multiple targets uh

1823
01:24:36,400 --> 01:24:38,400
and you might need to show target

1824
01:24:38,400 --> 01:24:40,400
especially for the exploits that are

1825
01:24:40,400 --> 01:24:42,960
rent less than excellent

1826
01:24:42,960 --> 01:24:45,520
and if you want to see advanced options

1827
01:24:45,520 --> 01:24:48,560
sometimes it's useful if for whatever

1828
01:24:48,560 --> 01:24:50,560
reason the exploit doesn't work

1829
01:24:50,560 --> 01:24:53,199
uh you can do show advanced and it will

1830
01:24:53,199 --> 01:24:56,000
show you the advanced parameters for uh

1831
01:24:56,000 --> 01:24:59,440
that module that you're in

1832
01:24:59,440 --> 01:25:01,679
last thing here is the check command

1833
01:25:01,679 --> 01:25:04,000
some modules exploit modules support

1834
01:25:04,000 --> 01:25:06,480
that meaning that you can actually

1835
01:25:06,480 --> 01:25:08,480
before you run the exploit you can check

1836
01:25:08,480 --> 01:25:10,719
whether there's a good chance that the

1837
01:25:10,719 --> 01:25:13,760
exploit will work it's kind of optional

1838
01:25:13,760 --> 01:25:15,520
but all the excellent exploits will

1839
01:25:15,520 --> 01:25:18,480
support check and you can use that to

1840
01:25:18,480 --> 01:25:20,400
sort of like verify do you send its

1841
01:25:20,400 --> 01:25:24,239
check if if the exploit is going to work

1842
01:25:25,760 --> 01:25:28,800
so payloads um

1843
01:25:28,800 --> 01:25:31,120
you can uh we've talked about show

1844
01:25:31,120 --> 01:25:33,120
payloads so if you load a specific

1845
01:25:33,120 --> 01:25:35,120
module you can do show payloads to list

1846
01:25:35,120 --> 01:25:36,560
all the payloads that are supported by

1847
01:25:36,560 --> 01:25:37,679
that module

1848
01:25:37,679 --> 01:25:40,480
payloads also have this modular name uh

1849
01:25:40,480 --> 01:25:43,280
first comes the platform so it can be

1850
01:25:43,280 --> 01:25:47,120
linux windows osx java python etc

1851
01:25:47,120 --> 01:25:49,840
then the action in majority of the cases

1852
01:25:49,840 --> 01:25:51,920
if the module supports it you will want

1853
01:25:51,920 --> 01:25:54,239
to use the meterprepare payload but

1854
01:25:54,239 --> 01:25:56,400
there's also sometimes interpreter is

1855
01:25:56,400 --> 01:25:59,040
not supported so you can

1856
01:25:59,040 --> 01:26:01,760
try shell or exact which executes single

1857
01:26:01,760 --> 01:26:04,000
command or add user read file things

1858
01:26:04,000 --> 01:26:05,120
like that

1859
01:26:05,120 --> 01:26:06,800
uh the next

1860
01:26:06,800 --> 01:26:08,880
you will have the parameters usually in

1861
01:26:08,880 --> 01:26:11,040
the name parameters for the connection

1862
01:26:11,040 --> 01:26:14,000
so it can be bind if this so subsequent

1863
01:26:14,000 --> 01:26:16,000
connection is also made from your

1864
01:26:16,000 --> 01:26:17,520
attacker machine

1865
01:26:17,520 --> 01:26:20,159
uh to the target and generally you will

1866
01:26:20,159 --> 01:26:21,679
have uh

1867
01:26:21,679 --> 01:26:23,840
uh reverse shells or reverse connections

1868
01:26:23,840 --> 01:26:25,040
back to your

1869
01:26:25,040 --> 01:26:27,040
attacker machine and you can also

1870
01:26:27,040 --> 01:26:29,120
control at least with the interpreter

1871
01:26:29,120 --> 01:26:31,199
payloads uh whether you you want to use

1872
01:26:31,199 --> 01:26:33,840
straight up tcp or http and whether you

1873
01:26:33,840 --> 01:26:34,960
want to

1874
01:26:34,960 --> 01:26:38,159
encrypt that connection as well

1875
01:26:38,159 --> 01:26:39,920
and we've talked about the staged versus

1876
01:26:39,920 --> 01:26:42,400
non-staged if you remember if there is a

1877
01:26:42,400 --> 01:26:44,480
slash from interpreter if there is a

1878
01:26:44,480 --> 01:26:47,199
slash between meterpreter and reverse

1879
01:26:47,199 --> 01:26:49,679
whatever tcp generally

1880
01:26:49,679 --> 01:26:51,840
it means it's a staged payload and

1881
01:26:51,840 --> 01:26:53,840
that's in majority of the cases that's

1882
01:26:53,840 --> 01:26:55,360
the one that you want to use but there's

1883
01:26:55,360 --> 01:26:57,760
also an interpreter underscore reversed

1884
01:26:57,760 --> 01:26:59,280
tcp

1885
01:26:59,280 --> 01:27:01,360
and that's going to be non-staged

1886
01:27:01,360 --> 01:27:05,040
basically that it'll try to uh send the

1887
01:27:05,040 --> 01:27:07,360
whole payload uh

1888
01:27:07,360 --> 01:27:09,760
in on the initial in the initial as part

1889
01:27:09,760 --> 01:27:12,719
of the initial exploit

1890
01:27:14,159 --> 01:27:16,560
so once you've picked the exploit you

1891
01:27:16,560 --> 01:27:19,360
did use exploit name you've set all the

1892
01:27:19,360 --> 01:27:22,080
parameters then you

1893
01:27:22,080 --> 01:27:24,400
use run command to run it

1894
01:27:24,400 --> 01:27:26,320
uh there's a couple

1895
01:27:26,320 --> 01:27:28,880
flags that you if you want to use them

1896
01:27:28,880 --> 01:27:31,520
dash g will make that exploit run as a

1897
01:27:31,520 --> 01:27:33,440
background job so you basically don't

1898
01:27:33,440 --> 01:27:35,600
wait until that exploit completes you

1899
01:27:35,600 --> 01:27:37,120
can do other things in metasploit

1900
01:27:37,120 --> 01:27:38,239
console

1901
01:27:38,239 --> 01:27:41,120
and uh in generally if you run the

1902
01:27:41,120 --> 01:27:42,960
exploit and it gives you a session back

1903
01:27:42,960 --> 01:27:44,080
you start

1904
01:27:44,080 --> 01:27:45,360
it puts you

1905
01:27:45,360 --> 01:27:48,320
into the uh metasploit uh

1906
01:27:48,320 --> 01:27:50,080
command pro or interpreter command

1907
01:27:50,080 --> 01:27:51,760
prompt right away to interact with that

1908
01:27:51,760 --> 01:27:53,840
session if you don't want to do that if

1909
01:27:53,840 --> 01:27:55,520
you want to just keep that session in

1910
01:27:55,520 --> 01:27:57,360
the background and do something else you

1911
01:27:57,360 --> 01:27:59,280
can do the taxi

1912
01:27:59,280 --> 01:28:00,960
and that will basically just run the

1913
01:28:00,960 --> 01:28:03,199
exploit get the session but won't put

1914
01:28:03,199 --> 01:28:05,440
you in the interpreter command prompt

1915
01:28:05,440 --> 01:28:07,839
right away

1916
01:28:08,639 --> 01:28:11,920
uh just the screenshot so lab three

1917
01:28:11,920 --> 01:28:13,199
so we've done the

1918
01:28:13,199 --> 01:28:15,199
port scans we know some of the services

1919
01:28:15,199 --> 01:28:16,880
that are running there

1920
01:28:16,880 --> 01:28:18,800
based on that information that we

1921
01:28:18,800 --> 01:28:21,040
already found so we know that there's a

1922
01:28:21,040 --> 01:28:24,000
tomcat we know the version of the tomcat

1923
01:28:24,000 --> 01:28:27,199
uh we also know that there's a jmx

1924
01:28:27,199 --> 01:28:30,000
running on that four nine zero zero nine

1925
01:28:30,000 --> 01:28:32,800
so based on that information search and

1926
01:28:32,800 --> 01:28:35,120
try to find the exploit to use on that

1927
01:28:35,120 --> 01:28:36,159
host

1928
01:28:36,159 --> 01:28:37,679
um

1929
01:28:37,679 --> 01:28:40,560
set the parameters run the exploit and

1930
01:28:40,560 --> 01:28:43,840
try to get the session essentially

1931
01:28:43,920 --> 01:28:45,679
and the last one is just explore what

1932
01:28:45,679 --> 01:28:47,440
payloads are supported by the exploit

1933
01:28:47,440 --> 01:28:49,120
that you find

1934
01:28:49,120 --> 01:28:50,239
so we'll

1935
01:28:50,239 --> 01:28:51,440
do

1936
01:28:51,440 --> 01:28:54,000
maybe 10 minutes

1937
01:28:54,000 --> 01:28:55,440
for this one

1938
01:28:55,440 --> 01:28:59,440
and be back with um with the walkthrough

1939
01:28:59,440 --> 01:29:03,120
uh do we want to do 10 or 20 on this one

1940
01:29:03,120 --> 01:29:06,719
let's start with 10 and see how we go

1941
01:29:06,880 --> 01:29:08,480
and again if anybody needs some help

1942
01:29:08,480 --> 01:29:09,440
just

1943
01:29:09,440 --> 01:29:11,520
put the questions in discord or on

1944
01:29:11,520 --> 01:29:15,639
youtube and we will respond

1945
01:29:30,000 --> 01:29:33,000
so

1946
01:40:48,159 --> 01:40:50,159
all right then we're 10 minutes in do we

1947
01:40:50,159 --> 01:40:51,199
want to

1948
01:40:51,199 --> 01:40:55,440
wait a bit more or walk through

1949
01:40:56,800 --> 01:40:58,480
well considering the only questions in

1950
01:40:58,480 --> 01:41:00,800
chat right now are about lab five i

1951
01:41:00,800 --> 01:41:03,360
think we're probably okay to move on

1952
01:41:03,360 --> 01:41:05,679
there's only one person asking about

1953
01:41:05,679 --> 01:41:08,560
level five come on

1954
01:41:11,360 --> 01:41:12,560
um

1955
01:41:12,560 --> 01:41:14,000
yeah i think we're probably good to move

1956
01:41:14,000 --> 01:41:15,920
on if anybody has any problems with this

1957
01:41:15,920 --> 01:41:19,840
this is the time to tell us

1958
01:41:22,960 --> 01:41:26,560
going once going twice

1959
01:41:29,600 --> 01:41:31,199
all right we're going to move forward up

1960
01:41:31,199 --> 01:41:33,839
to this one then

1961
01:41:37,119 --> 01:41:38,320
so

1962
01:41:38,320 --> 01:41:40,239
as we saw earlier the ports that we have

1963
01:41:40,239 --> 01:41:43,280
open are ports 8080 which has a tomcat

1964
01:41:43,280 --> 01:41:47,119
uh instance running on it

1965
01:41:47,119 --> 01:41:51,199
and the other one is a jmx rmi on port

1966
01:41:51,199 --> 01:41:54,199
49009

1967
01:41:54,560 --> 01:41:56,400
so for tomcat if we do a quick search

1968
01:41:56,400 --> 01:41:58,840
for tomcat in

1969
01:41:58,840 --> 01:42:00,800
metasploit we've actually got a fair

1970
01:42:00,800 --> 01:42:02,000
number of

1971
01:42:02,000 --> 01:42:05,280
possible modules here

1972
01:42:09,600 --> 01:42:14,199
didn't cover search for this tv okay

1973
01:42:14,400 --> 01:42:15,840
over the one that we're going to look at

1974
01:42:15,840 --> 01:42:18,080
here

1975
01:42:21,360 --> 01:42:25,719
is if i can find it

1976
01:42:35,520 --> 01:42:38,800
this is the one we're looking for

1977
01:42:39,280 --> 01:42:42,880
so this is the auxiliary module scanner

1978
01:42:42,880 --> 01:42:48,080
http tomcat mgr manager login

1979
01:42:54,320 --> 01:42:55,679
and we've got a few different options

1980
01:42:55,679 --> 01:42:57,600
here

1981
01:42:57,600 --> 01:42:58,960
first of all we're going to set that our

1982
01:42:58,960 --> 01:43:01,199
host to the ip address and this might be

1983
01:43:01,199 --> 01:43:04,239
different for you but for me it is

1984
01:43:04,239 --> 01:43:08,759
10 0 2 4.

1985
01:43:10,560 --> 01:43:12,320
and the defaults here i believe are all

1986
01:43:12,320 --> 01:43:13,920
going to be correct so we don't actually

1987
01:43:13,920 --> 01:43:15,760
need to change anything else but what

1988
01:43:15,760 --> 01:43:20,520
this module is doing if we type info

1989
01:43:26,719 --> 01:43:28,960
here

1990
01:43:34,320 --> 01:43:35,920
excuse me

1991
01:43:35,920 --> 01:43:37,600
so what this module does is look for

1992
01:43:37,600 --> 01:43:39,840
some default usernames and logins to log

1993
01:43:39,840 --> 01:43:41,520
into tomcat because there's a set of

1994
01:43:41,520 --> 01:43:43,440
about 20 different logins that are very

1995
01:43:43,440 --> 01:43:47,360
popular with tomcat installations

1996
01:43:48,560 --> 01:43:50,239
there's a question in discord where did

1997
01:43:50,239 --> 01:43:52,000
you search for this particular module

1998
01:43:52,000 --> 01:43:55,440
although there are loads for tomcat

1999
01:43:55,440 --> 01:43:57,119
um i'm cheating and i know what the

2000
01:43:57,119 --> 01:43:58,719
answer is

2001
01:43:58,719 --> 01:44:01,199
that's that's basically the answer

2002
01:44:01,199 --> 01:44:03,600
otherwise you can

2003
01:44:03,600 --> 01:44:05,199
you can try going through and finding it

2004
01:44:05,199 --> 01:44:06,880
there's no requirement for version the

2005
01:44:06,880 --> 01:44:08,000
only reason i'm using this one is

2006
01:44:08,000 --> 01:44:10,239
because it's tomcat it's very popular to

2007
01:44:10,239 --> 01:44:11,040
have

2008
01:44:11,040 --> 01:44:12,800
default credentials on a tomcat out of

2009
01:44:12,800 --> 01:44:14,239
an installation

2010
01:44:14,239 --> 01:44:15,840
so yes this

2011
01:44:15,840 --> 01:44:16,880
sorry yeah

2012
01:44:16,880 --> 01:44:19,040
that'll go for it uh i was going to say

2013
01:44:19,040 --> 01:44:21,119
uh so

2014
01:44:21,119 --> 01:44:22,960
some of the exploits will be for a

2015
01:44:22,960 --> 01:44:25,360
particular version of software some of

2016
01:44:25,360 --> 01:44:27,679
the exploits will be for a particular

2017
01:44:27,679 --> 01:44:30,000
configuration of the software regardless

2018
01:44:30,000 --> 01:44:31,840
of the version so

2019
01:44:31,840 --> 01:44:34,800
uh if if i'm yeah i'm looking at the

2020
01:44:34,800 --> 01:44:36,000
right one so

2021
01:44:36,000 --> 01:44:37,840
basically

2022
01:44:37,840 --> 01:44:40,000
with with tomcat and you can't by the

2023
01:44:40,000 --> 01:44:41,840
way search for the specific version of

2024
01:44:41,840 --> 01:44:43,840
tomcat and there's an exploit that

2025
01:44:43,840 --> 01:44:46,320
targets that specific version that works

2026
01:44:46,320 --> 01:44:48,239
but there's also every tomcat

2027
01:44:48,239 --> 01:44:50,320
installation by default comes with this

2028
01:44:50,320 --> 01:44:52,960
manager application that allows you to

2029
01:44:52,960 --> 01:44:55,679
remotely deploy applications and and

2030
01:44:55,679 --> 01:44:57,760
like shut them down manage them restart

2031
01:44:57,760 --> 01:44:59,600
the service and things like that

2032
01:44:59,600 --> 01:45:01,280
and so what this module does is

2033
01:45:01,280 --> 01:45:03,760
interacts it interacts with that

2034
01:45:03,760 --> 01:45:06,480
management application and tries to

2035
01:45:06,480 --> 01:45:08,400
guess passwords essentially

2036
01:45:08,400 --> 01:45:09,440
and so

2037
01:45:09,440 --> 01:45:12,000
regardless of the tomcat version that

2038
01:45:12,000 --> 01:45:13,440
management application is going to be

2039
01:45:13,440 --> 01:45:16,159
there so that's um

2040
01:45:16,159 --> 01:45:18,800
that's a good target to try to to figure

2041
01:45:18,800 --> 01:45:20,880
out

2042
01:45:21,840 --> 01:45:23,679
yeah configuration problems are always

2043
01:45:23,679 --> 01:45:24,800
an issue

2044
01:45:24,800 --> 01:45:26,400
if you've ever done pen testing or if

2045
01:45:26,400 --> 01:45:27,440
you've ever

2046
01:45:27,440 --> 01:45:29,360
just done system administration default

2047
01:45:29,360 --> 01:45:31,679
credentials are a terrible problem

2048
01:45:31,679 --> 01:45:34,159
they're all over the place

2049
01:45:34,159 --> 01:45:36,000
so we'll go here

2050
01:45:36,000 --> 01:45:37,840
again metasploit has

2051
01:45:37,840 --> 01:45:39,440
some built-in usernames and passwords

2052
01:45:39,440 --> 01:45:41,280
that it's going to try

2053
01:45:41,280 --> 01:45:45,000
if we just run this

2054
01:45:45,679 --> 01:45:47,920
all of them failed except for this guy

2055
01:45:47,920 --> 01:45:50,560
right here

2056
01:45:52,320 --> 01:45:54,000
so we do have a default username and

2057
01:45:54,000 --> 01:45:57,960
password of j2 deployer

2058
01:45:58,560 --> 01:45:59,360
now

2059
01:45:59,360 --> 01:46:01,840
we can log in now

2060
01:46:01,840 --> 01:46:04,000
but we still want to be able to upload

2061
01:46:04,000 --> 01:46:07,199
something kind of easily here

2062
01:46:07,199 --> 01:46:08,480
so what we're going to do is use another

2063
01:46:08,480 --> 01:46:10,000
module

2064
01:46:10,000 --> 01:46:14,719
this is tomcat mgr upload

2065
01:46:16,320 --> 01:46:17,920
and this kind of works hand in hand and

2066
01:46:17,920 --> 01:46:19,360
once you have a username and credential

2067
01:46:19,360 --> 01:46:21,440
for tomcat you can get into it by

2068
01:46:21,440 --> 01:46:23,840
uploading some code

2069
01:46:23,840 --> 01:46:26,719
so so the first one was um basically a

2070
01:46:26,719 --> 01:46:28,960
brute force scanner trying to guess the

2071
01:46:28,960 --> 01:46:31,520
user names and passwords and we've used

2072
01:46:31,520 --> 01:46:32,560
default

2073
01:46:32,560 --> 01:46:34,880
set that comes with metal split but you

2074
01:46:34,880 --> 01:46:36,960
can like when you do show options

2075
01:46:36,960 --> 01:46:38,880
there's options of that like user file

2076
01:46:38,880 --> 01:46:41,440
user pass the ones that i walk through

2077
01:46:41,440 --> 01:46:44,000
that you can change if you want to use

2078
01:46:44,000 --> 01:46:45,040
different

2079
01:46:45,040 --> 01:46:47,600
dictionaries

2080
01:46:47,679 --> 01:46:49,440
exactly

2081
01:46:49,440 --> 01:46:51,040
so again we look at the info for this

2082
01:46:51,040 --> 01:46:52,719
module and this module can be used to

2083
01:46:52,719 --> 01:46:54,880
execute payloads on tomcat servers with

2084
01:46:54,880 --> 01:46:56,880
an exposed manager application and that

2085
01:46:56,880 --> 01:46:58,560
is what we found

2086
01:46:58,560 --> 01:47:00,000
so this is going to take care of all the

2087
01:47:00,000 --> 01:47:01,520
nitty gritty of going through and

2088
01:47:01,520 --> 01:47:03,360
creating the archive creating the back

2089
01:47:03,360 --> 01:47:06,560
door the reverse shell whatever else

2090
01:47:06,560 --> 01:47:10,960
so for this look at the options

2091
01:47:14,880 --> 01:47:16,880
we can see that the local host

2092
01:47:16,880 --> 01:47:20,920
is my local host here

2093
01:47:27,520 --> 01:47:29,199
so that's gonna be wrong because that's

2094
01:47:29,199 --> 01:47:31,360
actually on my local network

2095
01:47:31,360 --> 01:47:35,480
uh no wait that's right sorry

2096
01:47:36,639 --> 01:47:38,719
so lhost here is correct we're not going

2097
01:47:38,719 --> 01:47:40,880
to change that it is for me anyway if

2098
01:47:40,880 --> 01:47:43,760
you need to change it just set lhost

2099
01:47:43,760 --> 01:47:45,760
and again this is your cali machine that

2100
01:47:45,760 --> 01:47:46,960
you're setting here

2101
01:47:46,960 --> 01:47:49,199
this is the ip address that your reverse

2102
01:47:49,199 --> 01:47:51,360
shell is going to connect back to after

2103
01:47:51,360 --> 01:47:54,000
we upload it

2104
01:47:55,840 --> 01:47:57,600
the other option we need to set

2105
01:47:57,600 --> 01:48:00,400
is our hosts

2106
01:48:00,719 --> 01:48:02,800
this is our target machine so this is

2107
01:48:02,800 --> 01:48:04,960
the one that has tomcat running on it

2108
01:48:04,960 --> 01:48:06,960
gives an ip address and for me that's

2109
01:48:06,960 --> 01:48:09,960
10.024

2110
01:48:11,760 --> 01:48:13,760
and then lastly we need to set the http

2111
01:48:13,760 --> 01:48:15,920
password and username

2112
01:48:15,920 --> 01:48:18,239
and we know from that scanner module

2113
01:48:18,239 --> 01:48:21,919
that the http username

2114
01:48:23,040 --> 01:48:25,760
is sorry j2 developer jt deployer

2115
01:48:25,760 --> 01:48:26,800
deployment

2116
01:48:26,800 --> 01:48:29,800
deployer

2117
01:48:34,239 --> 01:48:38,480
so username j2 deployer

2118
01:48:38,960 --> 01:48:40,239
password

2119
01:48:40,239 --> 01:48:43,440
also j2 deployer

2120
01:48:45,119 --> 01:48:48,239
and that gives us options like this

2121
01:48:48,239 --> 01:48:49,840
now you'll notice the default payload

2122
01:48:49,840 --> 01:48:51,600
for this job from interpreter reverse

2123
01:48:51,600 --> 01:48:53,199
tcp

2124
01:48:53,199 --> 01:48:54,800
since we're not going to be in any

2125
01:48:54,800 --> 01:48:56,239
hostel environment or anything like that

2126
01:48:56,239 --> 01:48:58,239
we don't really need to hide this at all

2127
01:48:58,239 --> 01:49:00,000
but if we wanted to make this blend in a

2128
01:49:00,000 --> 01:49:01,280
little bit more we could change that to

2129
01:49:01,280 --> 01:49:04,800
reverse http https we can change the

2130
01:49:04,800 --> 01:49:07,920
local port from 444 which

2131
01:49:07,920 --> 01:49:08,960
every

2132
01:49:08,960 --> 01:49:10,800
security analyst should know is the

2133
01:49:10,800 --> 01:49:15,719
metasploit's default port

2134
01:49:18,719 --> 01:49:20,400
once we have that all set we're going to

2135
01:49:20,400 --> 01:49:22,080
run this no we're not we're going to set

2136
01:49:22,080 --> 01:49:23,040
the

2137
01:49:23,040 --> 01:49:24,639
remote port as well because remember

2138
01:49:24,639 --> 01:49:27,599
that this was on port 8080

2139
01:49:27,599 --> 01:49:28,960
almost forgot that that would have been

2140
01:49:28,960 --> 01:49:31,280
silly

2141
01:49:33,440 --> 01:49:34,719
so again

2142
01:49:34,719 --> 01:49:38,080
ht password j2 deployer http username j2

2143
01:49:38,080 --> 01:49:39,440
deployer

2144
01:49:39,440 --> 01:49:41,760
our hosts is whatever your gibson ip

2145
01:49:41,760 --> 01:49:43,599
address is

2146
01:49:43,599 --> 01:49:46,080
our port is that port that we found for

2147
01:49:46,080 --> 01:49:48,159
tomcat which was 8080

2148
01:49:48,159 --> 01:49:51,679
and everything else can stay the same

2149
01:49:51,679 --> 01:49:55,560
so now we're going to run this

2150
01:49:58,400 --> 01:50:00,080
and we notice that we already have an

2151
01:50:00,080 --> 01:50:02,639
issue here

2152
01:50:02,800 --> 01:50:04,159
now a lot of these modules will do

2153
01:50:04,159 --> 01:50:05,440
checks to see if they're going to be

2154
01:50:05,440 --> 01:50:07,440
working or not and sometimes they fail

2155
01:50:07,440 --> 01:50:10,320
when they probably would succeed anyway

2156
01:50:10,320 --> 01:50:11,760
we can see here that it's looking for a

2157
01:50:11,760 --> 01:50:13,440
particular string

2158
01:50:13,440 --> 01:50:16,400
in the response and it's not there

2159
01:50:16,400 --> 01:50:18,320
but if we know that it should be working

2160
01:50:18,320 --> 01:50:19,840
regardless

2161
01:50:19,840 --> 01:50:21,760
we can actually do this set fingerprint

2162
01:50:21,760 --> 01:50:25,000
print check

2163
01:50:26,080 --> 01:50:27,199
to false

2164
01:50:27,199 --> 01:50:28,880
and that will disable this check and run

2165
01:50:28,880 --> 01:50:30,560
the exploit regardless of what it

2166
01:50:30,560 --> 01:50:33,280
actually detects

2167
01:50:35,360 --> 01:50:36,800
so now that we have that fingerprint

2168
01:50:36,800 --> 01:50:40,639
check set to false we can run this

2169
01:50:41,679 --> 01:50:44,000
and there we go we got our very first

2170
01:50:44,000 --> 01:50:46,960
interpreter session

2171
01:50:47,920 --> 01:50:49,760
that's always a great thing to see on

2172
01:50:49,760 --> 01:50:52,880
pen test

2173
01:50:52,880 --> 01:50:54,639
then we can take a look at the processes

2174
01:50:54,639 --> 01:50:56,639
on here

2175
01:50:56,639 --> 01:50:59,360
nothing that we can see right now

2176
01:50:59,360 --> 01:51:00,800
take a look at the folder that we landed

2177
01:51:00,800 --> 01:51:03,800
in

2178
01:51:06,880 --> 01:51:08,639
some people here might be noticing a

2179
01:51:08,639 --> 01:51:10,239
certain file there that kind of stands

2180
01:51:10,239 --> 01:51:13,239
out

2181
01:51:22,639 --> 01:51:23,840
so i'm going to pause here just for a

2182
01:51:23,840 --> 01:51:25,360
second does anybody have any questions

2183
01:51:25,360 --> 01:51:29,239
or is everybody up to here

2184
01:51:47,520 --> 01:51:49,119
i'm gonna assume everyone's good with

2185
01:51:49,119 --> 01:51:51,519
this one

2186
01:51:52,239 --> 01:51:54,320
so there are two other exploits that we

2187
01:51:54,320 --> 01:51:56,239
can do here we'll go we'll run both uh

2188
01:51:56,239 --> 01:51:59,280
through both of them pretty quick

2189
01:52:01,520 --> 01:52:03,599
there we go

2190
01:52:03,599 --> 01:52:05,599
so i'm going to close uh no i'm not

2191
01:52:05,599 --> 01:52:06,480
going to close this i'm going to

2192
01:52:06,480 --> 01:52:07,920
background this right now and we're

2193
01:52:07,920 --> 01:52:08,960
going to go through these commands in

2194
01:52:08,960 --> 01:52:11,760
just a little bit here but

2195
01:52:11,760 --> 01:52:13,760
there's another module here that should

2196
01:52:13,760 --> 01:52:16,000
work

2197
01:52:16,639 --> 01:52:20,960
tomcat jsp upload bypass

2198
01:52:21,679 --> 01:52:25,440
and if we look at the info for this one

2199
01:52:25,920 --> 01:52:27,599
we can see that it actually targets a

2200
01:52:27,599 --> 01:52:30,560
specific cve number we could even look

2201
01:52:30,560 --> 01:52:32,960
this up

2202
01:52:37,650 --> 01:52:40,750
[Music]

2203
01:52:42,480 --> 01:52:45,840
or not oh

2204
01:52:45,840 --> 01:52:47,119
no i can't look it up through there but

2205
01:52:47,119 --> 01:52:49,360
you can look look this up on your own

2206
01:52:49,360 --> 01:52:51,199
and if you're doing a search on google

2207
01:52:51,199 --> 01:52:52,560
you probably would have seen this for

2208
01:52:52,560 --> 01:52:56,119
this version of tomcat

2209
01:53:01,280 --> 01:53:03,280
but if you do look this up it says that

2210
01:53:03,280 --> 01:53:04,560
this version of tomcat that we're

2211
01:53:04,560 --> 01:53:06,960
running uh which

2212
01:53:06,960 --> 01:53:09,280
what was the version number again eight

2213
01:53:09,280 --> 01:53:12,280
five

2214
01:53:14,119 --> 01:53:17,040
8521 should be vulnerable to this jsp

2215
01:53:17,040 --> 01:53:19,440
upload bypass

2216
01:53:19,440 --> 01:53:22,879
and if we look at our options again

2217
01:53:23,599 --> 01:53:26,639
again l host is set to by default l port

2218
01:53:26,639 --> 01:53:27,920
is good

2219
01:53:27,920 --> 01:53:29,440
all you have to really have to do is set

2220
01:53:29,440 --> 01:53:31,440
the r host and the r port we don't even

2221
01:53:31,440 --> 01:53:33,970
need a username and password on this one

2222
01:53:33,970 --> 01:53:36,800
[Music]

2223
01:53:36,800 --> 01:53:41,199
so we set the r hosts to our target ip

2224
01:53:41,199 --> 01:53:43,440
in this case our port is already correct

2225
01:53:43,440 --> 01:53:45,760
so i don't need to change that

2226
01:53:45,760 --> 01:53:48,159
and i can run this

2227
01:53:48,159 --> 01:53:50,400
payload executed

2228
01:53:50,400 --> 01:53:52,560
and if we're lucky we get a command

2229
01:53:52,560 --> 01:53:55,560
shell

2230
01:53:56,239 --> 01:53:57,599
so this is the same as sitting at a

2231
01:53:57,599 --> 01:53:59,920
linux prompt

2232
01:53:59,920 --> 01:54:01,280
now you may notice there's a difference

2233
01:54:01,280 --> 01:54:02,800
between this and the other one we only

2234
01:54:02,800 --> 01:54:04,400
got an interpreter session here we did

2235
01:54:04,400 --> 01:54:07,759
not get a full

2236
01:54:08,639 --> 01:54:10,320
sorry we only got a shell session not a

2237
01:54:10,320 --> 01:54:11,840
full interpreter

2238
01:54:11,840 --> 01:54:13,520
you can see i left my payload as shell

2239
01:54:13,520 --> 01:54:16,400
reverse tcp

2240
01:54:16,400 --> 01:54:17,760
if i exit out of here i'm going to lose

2241
01:54:17,760 --> 01:54:20,480
my command shell

2242
01:54:21,199 --> 01:54:24,799
but i can actually set my payload

2243
01:54:25,040 --> 01:54:27,040
to

2244
01:54:27,040 --> 01:54:29,440
use linux right

2245
01:54:29,440 --> 01:54:30,800
this one would work from perfect or

2246
01:54:30,800 --> 01:54:33,040
linux right

2247
01:54:33,040 --> 01:54:35,040
camera i don't think so

2248
01:54:35,040 --> 01:54:36,719
no okay

2249
01:54:36,719 --> 01:54:39,520
well you can you can do show payloads

2250
01:54:39,520 --> 01:54:42,480
see what lists there

2251
01:54:44,000 --> 01:54:45,040
okay

2252
01:54:45,040 --> 01:54:47,679
yeah so yeah we don't get any

2253
01:54:47,679 --> 01:54:51,280
special interpreter just yet

2254
01:54:51,280 --> 01:54:52,719
but i'm going to actually run this

2255
01:54:52,719 --> 01:54:54,159
anyway

2256
01:54:54,159 --> 01:54:55,599
i'm going to leave that shell session

2257
01:54:55,599 --> 01:54:57,840
open

2258
01:54:58,719 --> 01:55:01,520
again it's there and if i do a control z

2259
01:55:01,520 --> 01:55:03,599
zed

2260
01:55:03,599 --> 01:55:06,880
that will background the session

2261
01:55:07,119 --> 01:55:08,800
and that'll be sitting there wait for

2262
01:55:08,800 --> 01:55:10,159
the next section that we're about to go

2263
01:55:10,159 --> 01:55:12,239
through

2264
01:55:12,239 --> 01:55:14,560
the last one that we can do

2265
01:55:14,560 --> 01:55:16,639
is that rmi

2266
01:55:16,639 --> 01:55:21,360
jmx jmx jmxim yeah

2267
01:55:21,520 --> 01:55:23,440
and if we look up

2268
01:55:23,440 --> 01:55:26,080
jmx

2269
01:55:26,080 --> 01:55:27,679
again there's a few different ones the

2270
01:55:27,679 --> 01:55:29,679
one that we're going to look for is this

2271
01:55:29,679 --> 01:55:32,920
guy here

2272
01:55:39,440 --> 01:55:41,360
so

2273
01:55:41,360 --> 01:55:43,520
this is i believe all the defaults work

2274
01:55:43,520 --> 01:55:45,119
for this one as well we just need to set

2275
01:55:45,119 --> 01:55:49,199
the our hosts if i'm not mistaken

2276
01:55:50,960 --> 01:55:52,320
uh yep

2277
01:55:52,320 --> 01:55:54,559
yeah

2278
01:55:54,719 --> 01:55:59,239
so again remember we had

2279
01:56:00,400 --> 01:56:03,760
our host is our target 1024

2280
01:56:03,760 --> 01:56:05,360
for me anyway for you it might be

2281
01:56:05,360 --> 01:56:07,598
different

2282
01:56:09,840 --> 01:56:14,159
set the r port to 49009 no i am on the

2283
01:56:14,159 --> 01:56:18,080
wrong payload right now wrong exploit

2284
01:56:18,080 --> 01:56:19,119
we want to make sure we're actually

2285
01:56:19,119 --> 01:56:20,719
using the right one so i was using

2286
01:56:20,719 --> 01:56:22,560
tomcat and the wrong things were coming

2287
01:56:22,560 --> 01:56:24,880
up here

2288
01:56:25,040 --> 01:56:28,360
there we go

2289
01:56:29,520 --> 01:56:32,239
okay so we're going to set our hosts

2290
01:56:32,239 --> 01:56:35,280
10 0 to 4. again that ip might be

2291
01:56:35,280 --> 01:56:37,840
different for you

2292
01:56:38,800 --> 01:56:42,840
we're going to set the r port

2293
01:56:43,520 --> 01:56:44,320
to

2294
01:56:44,320 --> 01:56:47,320
49.009

2295
01:56:50,159 --> 01:56:51,599
and i think that's all we're going to

2296
01:56:51,599 --> 01:56:54,239
need to do

2297
01:56:54,239 --> 01:56:56,000
we may need to set server host at a

2298
01:56:56,000 --> 01:56:57,440
moment here but we'll try to see if we

2299
01:56:57,440 --> 01:57:01,799
can see if this works without it

2300
01:57:38,490 --> 01:57:40,560
[Music]

2301
01:57:40,560 --> 01:57:41,920
there we go

2302
01:57:41,920 --> 01:57:43,280
and we've got our next interpreter

2303
01:57:43,280 --> 01:57:45,599
session

2304
01:57:47,040 --> 01:57:51,320
so again we can see who we are

2305
01:58:02,480 --> 01:58:05,040
and without going too much forward here

2306
01:58:05,040 --> 01:58:06,639
we can see we have

2307
01:58:06,639 --> 01:58:08,159
three different sessions each opened

2308
01:58:08,159 --> 01:58:11,839
with a different exploit on this target

2309
01:58:18,080 --> 01:58:19,760
all right do we have any questions about

2310
01:58:19,760 --> 01:58:22,000
these

2311
01:58:26,880 --> 01:58:29,360
looking at the scoreboard i see a few

2312
01:58:29,360 --> 01:58:31,599
people have gotten past this we still

2313
01:58:31,599 --> 01:58:35,840
have a few people back on flags one two

2314
01:58:42,239 --> 01:58:44,560
can you guys post on discord if you need

2315
01:58:44,560 --> 01:58:46,639
more a little bit more time for the lab

2316
01:58:46,639 --> 01:58:50,159
or just take a five minute break

2317
01:58:53,119 --> 01:58:55,839
all right guys

2318
01:59:01,360 --> 01:59:03,840
anybody needs a break

2319
01:59:03,840 --> 01:59:09,000
or a bit more more time for the lab 3.

2320
01:59:23,679 --> 01:59:25,199
will the challenges be available in a

2321
01:59:25,199 --> 01:59:26,960
couple of days well you can download the

2322
01:59:26,960 --> 01:59:28,880
vm and you can do them at your own pace

2323
01:59:28,880 --> 01:59:32,719
you actually don't need to be online

2324
01:59:34,320 --> 01:59:35,920
slides are also downloadable if you'll

2325
01:59:35,920 --> 01:59:37,760
check the pin in discord there's a link

2326
01:59:37,760 --> 01:59:39,040
to the

2327
01:59:39,040 --> 01:59:41,920
entire stack there

2328
01:59:42,560 --> 01:59:46,239
okay let's take a five-minute break

2329
01:59:46,239 --> 01:59:48,000
yep

2330
01:59:48,000 --> 01:59:51,920
and we'll be back with

2331
01:59:52,800 --> 01:59:54,239
slides

2332
01:59:54,239 --> 01:59:55,440
sounds good

2333
01:59:55,440 --> 01:59:59,239
see you guys in five minutes

2334
02:00:16,159 --> 02:00:17,360
oops sorry

2335
02:00:17,360 --> 02:00:19,760
we had one youtube question here your ip

2336
02:00:19,760 --> 02:00:20,880
is different because you haven't

2337
02:00:20,880 --> 02:00:24,000
specified your lhost i'm not quite

2338
02:00:24,000 --> 02:00:26,400
certain what you're referring to

2339
02:00:26,400 --> 02:00:30,719
but my local ipa is this ip here 10 0

2340
02:00:30,719 --> 02:00:32,320
sorry no

2341
02:00:32,320 --> 02:00:35,599
my local ip is

2342
02:00:35,599 --> 02:00:37,599
this ip

2343
02:00:37,599 --> 02:00:39,840
now this is the ip address of my calling

2344
02:00:39,840 --> 02:00:41,679
machine not my target

2345
02:00:41,679 --> 02:00:43,199
this is the ip address that i want my

2346
02:00:43,199 --> 02:00:45,440
interpreter to connect back to after i

2347
02:00:45,440 --> 02:00:47,360
upload it

2348
02:00:47,360 --> 02:00:50,239
so that's why that's specified as lhost

2349
02:00:50,239 --> 02:00:51,599
does that kind of answer your question

2350
02:00:51,599 --> 02:00:52,639
or did you

2351
02:00:52,639 --> 02:00:55,840
was there something else

2352
02:01:11,520 --> 02:01:15,119
you see a 172 ip address

2353
02:01:15,119 --> 02:01:18,080
uh that'll depend on whether or not you

2354
02:01:18,080 --> 02:01:20,719
have multiple interfaces on your cali

2355
02:01:20,719 --> 02:01:22,400
machine

2356
02:01:22,400 --> 02:01:25,280
so check to make sure that you have a

2357
02:01:25,280 --> 02:01:26,880
ip address

2358
02:01:26,880 --> 02:01:29,440
oh do i

2359
02:01:34,239 --> 02:01:36,080
170 is the

2360
02:01:36,080 --> 02:01:40,320
ap address with within the vulnerable vm

2361
02:01:40,320 --> 02:01:42,400
yes so this is what the

2362
02:01:42,400 --> 02:01:44,000
interpreter is reporting on the other

2363
02:01:44,000 --> 02:01:45,360
side

2364
02:01:45,360 --> 02:01:46,880
so we might see

2365
02:01:46,880 --> 02:01:48,800
10 0 2 4

2366
02:01:48,800 --> 02:01:50,719
but inside that it might be a different

2367
02:01:50,719 --> 02:01:52,239
address it could be port forwarded to

2368
02:01:52,239 --> 02:01:54,000
some other machine it could be a docker

2369
02:01:54,000 --> 02:01:55,679
container it could be a docker container

2370
02:01:55,679 --> 02:01:58,400
it could be a docker container

2371
02:01:58,400 --> 02:02:00,960
but this is what the inside what is

2372
02:02:00,960 --> 02:02:02,880
being seen inside of the machine not

2373
02:02:02,880 --> 02:02:05,840
outside

2374
02:02:13,760 --> 02:02:15,280
so in just a little bit that will become

2375
02:02:15,280 --> 02:02:16,800
a little bit more relevant but we're

2376
02:02:16,800 --> 02:02:18,400
going to finish up our

2377
02:02:18,400 --> 02:02:19,760
well i guess it's a two minute break at

2378
02:02:19,760 --> 02:02:24,440
this point and i'm gonna go get a drink

2379
02:05:26,159 --> 02:05:27,199
oh

2380
02:05:27,199 --> 02:05:29,839
oh the screen

2381
02:05:30,960 --> 02:05:34,159
thank you

2382
02:05:34,159 --> 02:05:36,638
all right

2383
02:05:36,960 --> 02:05:39,840
so we're getting to the fun part uh by

2384
02:05:39,840 --> 02:05:42,400
the way if anybody still needs help uh

2385
02:05:42,400 --> 02:05:44,960
dan's gonna be on discord uh we'll help

2386
02:05:44,960 --> 02:05:48,560
you out but we're getting into

2387
02:05:48,560 --> 02:05:52,639
interacting with interpreter

2388
02:05:53,599 --> 02:05:56,800
if i can get my slides to change

2389
02:05:56,800 --> 02:05:59,199
there we go

2390
02:05:59,199 --> 02:06:01,440
so working with meterpreter sessions so

2391
02:06:01,440 --> 02:06:03,760
hopefully most of you will have an

2392
02:06:03,760 --> 02:06:06,079
interpreter session by now or some

2393
02:06:06,079 --> 02:06:09,119
session at least um

2394
02:06:09,119 --> 02:06:11,840
and uh we're going to be learning how to

2395
02:06:11,840 --> 02:06:13,040
work with them

2396
02:06:13,040 --> 02:06:15,679
so the firs the the core command to work

2397
02:06:15,679 --> 02:06:18,480
with interpreter sessions is sessions uh

2398
02:06:18,480 --> 02:06:21,440
with and and it has multiple flags uh

2399
02:06:21,440 --> 02:06:23,920
with tech l uh

2400
02:06:23,920 --> 02:06:25,840
sessions lists all of your active

2401
02:06:25,840 --> 02:06:26,960
sessions

2402
02:06:26,960 --> 02:06:29,679
uh with tech i and the number so every

2403
02:06:29,679 --> 02:06:31,760
major person or every session that you

2404
02:06:31,760 --> 02:06:33,360
have every open session will have a

2405
02:06:33,360 --> 02:06:36,560
number so if you do sessions tag i

2406
02:06:36,560 --> 02:06:38,960
number you will start interacting with

2407
02:06:38,960 --> 02:06:40,159
the sessions

2408
02:06:40,159 --> 02:06:41,280
uh tech

2409
02:06:41,280 --> 02:06:43,520
k with the number kills a specific

2410
02:06:43,520 --> 02:06:45,840
session and capital k kills all the

2411
02:06:45,840 --> 02:06:47,280
sessions

2412
02:06:47,280 --> 02:06:50,320
also you saw one of the exploits i can't

2413
02:06:50,320 --> 02:06:52,560
remember which one it was i think it's

2414
02:06:52,560 --> 02:06:55,199
the jsp upload one didn't give us

2415
02:06:55,199 --> 02:06:57,119
interpreter sessions so it's not

2416
02:06:57,119 --> 02:06:58,800
compatible with that payload for

2417
02:06:58,800 --> 02:07:00,159
whatever reason

2418
02:07:00,159 --> 02:07:03,199
but any shell session you can actually

2419
02:07:03,199 --> 02:07:05,040
upgrade to full interpreter session

2420
02:07:05,040 --> 02:07:07,840
using sessions tech you and the session

2421
02:07:07,840 --> 02:07:10,400
number it will keep the original session

2422
02:07:10,400 --> 02:07:12,960
as is the shell session simple

2423
02:07:12,960 --> 02:07:16,480
one but it will uh execute commands to

2424
02:07:16,480 --> 02:07:18,400
open a new session that it's going to be

2425
02:07:18,400 --> 02:07:20,800
an interpreter session so that's a good

2426
02:07:20,800 --> 02:07:23,520
way if you even if the payload doesn't

2427
02:07:23,520 --> 02:07:24,960
support meterpreter you can still

2428
02:07:24,960 --> 02:07:27,679
upgrade to interpreter session and

2429
02:07:27,679 --> 02:07:30,560
go from there

2430
02:07:32,560 --> 02:07:34,960
okay

2431
02:07:35,040 --> 02:07:37,440
so basic commands um

2432
02:07:37,440 --> 02:07:39,360
when you interact with a session an

2433
02:07:39,360 --> 02:07:42,480
important command is background or bg

2434
02:07:42,480 --> 02:07:45,199
that basically takes you out of that

2435
02:07:45,199 --> 02:07:47,520
session so you can do other things in

2436
02:07:47,520 --> 02:07:48,880
metasploit

2437
02:07:48,880 --> 02:07:49,679
uh

2438
02:07:49,679 --> 02:07:52,840
you can also exit and that

2439
02:07:52,840 --> 02:07:55,760
basically uh terminates the session uh

2440
02:07:55,760 --> 02:07:59,119
if if you're in the session and you uh

2441
02:07:59,119 --> 02:08:00,480
if you're let's say you're in

2442
02:08:00,480 --> 02:08:02,079
interpreter session then you issued

2443
02:08:02,079 --> 02:08:03,599
shell command we'll talk about that by

2444
02:08:03,599 --> 02:08:06,320
the way in just a bit and you end up in

2445
02:08:06,320 --> 02:08:08,639
a shell you can do exit there to go back

2446
02:08:08,639 --> 02:08:11,280
to to interpret itself

2447
02:08:11,280 --> 02:08:13,199
uh with interpreter sessions you can do

2448
02:08:13,199 --> 02:08:14,800
migrate we've talked a little bit about

2449
02:08:14,800 --> 02:08:16,159
that so

2450
02:08:16,159 --> 02:08:18,079
initially when you exploit some service

2451
02:08:18,079 --> 02:08:20,320
that session will be that payload will

2452
02:08:20,320 --> 02:08:22,560
be running as part of the process of

2453
02:08:22,560 --> 02:08:24,480
that service and you can migrate it to a

2454
02:08:24,480 --> 02:08:26,560
different process if you want to

2455
02:08:26,560 --> 02:08:29,840
either avoid detection or just concerned

2456
02:08:29,840 --> 02:08:32,000
that the service can crash so you lose

2457
02:08:32,000 --> 02:08:34,400
your session to kind of make it more

2458
02:08:34,400 --> 02:08:36,239
resilient

2459
02:08:36,239 --> 02:08:38,800
other useful commands sysinfo

2460
02:08:38,800 --> 02:08:40,239
this is all of these are from

2461
02:08:40,239 --> 02:08:42,719
interpreter sessions so sysinfo uh shows

2462
02:08:42,719 --> 02:08:45,599
you system information about the target

2463
02:08:45,599 --> 02:08:47,280
so things like

2464
02:08:47,280 --> 02:08:49,599
uh host name operating system version

2465
02:08:49,599 --> 02:08:53,599
what uh what what base where you are

2466
02:08:53,599 --> 02:08:57,760
get uid will show you which user id your

2467
02:08:57,760 --> 02:09:00,159
session is running under

2468
02:09:00,159 --> 02:09:02,400
uh you can use commands that are similar

2469
02:09:02,400 --> 02:09:05,520
to linux commands to

2470
02:09:05,520 --> 02:09:08,079
walk around the target so basically cd

2471
02:09:08,079 --> 02:09:11,199
for change directory copy files

2472
02:09:11,199 --> 02:09:13,679
list files move files create directories

2473
02:09:13,679 --> 02:09:15,920
check current directory and things like

2474
02:09:15,920 --> 02:09:16,719
that

2475
02:09:16,719 --> 02:09:19,840
you can also do cat and search so cat

2476
02:09:19,840 --> 02:09:22,560
basically will you you do cat and then

2477
02:09:22,560 --> 02:09:25,280
the path to your file name on the target

2478
02:09:25,280 --> 02:09:27,119
and it will display the contents of that

2479
02:09:27,119 --> 02:09:28,079
file

2480
02:09:28,079 --> 02:09:31,360
you can edit files in which case

2481
02:09:31,360 --> 02:09:33,280
metasploit essentially downloads the

2482
02:09:33,280 --> 02:09:35,360
file allows you to edit it locally and

2483
02:09:35,360 --> 02:09:37,360
then once you're done it will upload the

2484
02:09:37,360 --> 02:09:40,560
file back to where it was on the target

2485
02:09:40,560 --> 02:09:42,079
and you can search for files so we'll

2486
02:09:42,079 --> 02:09:43,920
cover search in in just a bit but

2487
02:09:43,920 --> 02:09:47,520
basically this is like a built-in find

2488
02:09:47,520 --> 02:09:50,000
command that's part of the interpreter

2489
02:09:50,000 --> 02:09:52,239
session so you don't any of these are

2490
02:09:52,239 --> 02:09:54,719
using meterpreter itself like there's no

2491
02:09:54,719 --> 02:09:57,040
reliance virtually to any of the

2492
02:09:57,040 --> 02:09:59,679
operating system commands and also these

2493
02:09:59,679 --> 02:10:01,760
work regardless of whether your target

2494
02:10:01,760 --> 02:10:05,040
is linux or windows or anything else so

2495
02:10:05,040 --> 02:10:07,760
these commands work the same way for all

2496
02:10:07,760 --> 02:10:09,760
the different platforms

2497
02:10:09,760 --> 02:10:12,079
you can upload and download files with

2498
02:10:12,079 --> 02:10:14,159
upload download commands you can run

2499
02:10:14,159 --> 02:10:17,119
ifconfig again this is ifconfig it's not

2500
02:10:17,119 --> 02:10:18,960
an os command so it's going to be if

2501
02:10:18,960 --> 02:10:21,599
config given if it's a windows session

2502
02:10:21,599 --> 02:10:23,920
and it will display information about

2503
02:10:23,920 --> 02:10:26,000
network interfaces ap addresses on those

2504
02:10:26,000 --> 02:10:28,239
interfaces etc

2505
02:10:28,239 --> 02:10:31,679
uh also ps to list processes and do

2506
02:10:31,679 --> 02:10:34,480
things like p grab and p kill to kind of

2507
02:10:34,480 --> 02:10:36,639
search processes for specific string or

2508
02:10:36,639 --> 02:10:38,320
kill process

2509
02:10:38,320 --> 02:10:42,000
um shell in invokes an interactive shell

2510
02:10:42,000 --> 02:10:44,480
from interpreter sessions so

2511
02:10:44,480 --> 02:10:47,199
it basically creates a new what they

2512
02:10:47,199 --> 02:10:48,880
call channel you might have multiple

2513
02:10:48,880 --> 02:10:50,320
kind of channels of communication

2514
02:10:50,320 --> 02:10:53,040
between your your attacker machine

2515
02:10:53,040 --> 02:10:54,719
and and the

2516
02:10:54,719 --> 02:10:56,880
metropolitan session so shell creates a

2517
02:10:56,880 --> 02:10:58,639
new channel executes the shell you can

2518
02:10:58,639 --> 02:11:00,560
issue commands you can exit that shell

2519
02:11:00,560 --> 02:11:02,880
but the return recession still

2520
02:11:02,880 --> 02:11:05,679
stays connected doesn't doesn't drop

2521
02:11:05,679 --> 02:11:08,320
and you can do just execute any commands

2522
02:11:08,320 --> 02:11:10,480
on the host without an interactive shell

2523
02:11:10,480 --> 02:11:11,840
and that's using

2524
02:11:11,840 --> 02:11:13,760
uh execute command

2525
02:11:13,760 --> 02:11:16,480
uh help command is available so there's

2526
02:11:16,480 --> 02:11:18,719
more commands that interpreter supports

2527
02:11:18,719 --> 02:11:20,719
but and you can list all of them using

2528
02:11:20,719 --> 02:11:22,320
help

2529
02:11:22,320 --> 02:11:25,520
and um essentially

2530
02:11:25,520 --> 02:11:27,760
there's a lot of things you can do just

2531
02:11:27,760 --> 02:11:30,400
within the sharper without issuing

2532
02:11:30,400 --> 02:11:32,560
uh without dropping into the interactive

2533
02:11:32,560 --> 02:11:34,639
shell to to check out information about

2534
02:11:34,639 --> 02:11:38,560
the host that you're connected to

2535
02:11:38,560 --> 02:11:40,320
so that's uh

2536
02:11:40,320 --> 02:11:42,719
just basically as an example screenshot

2537
02:11:42,719 --> 02:11:44,239
so you

2538
02:11:44,239 --> 02:11:46,639
uh when you execute exploit and unless

2539
02:11:46,639 --> 02:11:48,560
you do run c

2540
02:11:48,560 --> 02:11:51,040
uh you will and you the exploit

2541
02:11:51,040 --> 02:11:53,679
succeeded you will end up in in the

2542
02:11:53,679 --> 02:11:56,480
session but if you go back from that

2543
02:11:56,480 --> 02:11:58,639
session and you you want to like return

2544
02:11:58,639 --> 02:12:00,159
to interact with the session again you

2545
02:12:00,159 --> 02:12:03,280
do dash i and this the session id

2546
02:12:03,280 --> 02:12:04,960
and this is essentially what what it

2547
02:12:04,960 --> 02:12:06,960
looks like system for as i said gives

2548
02:12:06,960 --> 02:12:09,520
you like ap address or host name

2549
02:12:09,520 --> 02:12:11,920
operating system architecture and the

2550
02:12:11,920 --> 02:12:13,040
type of

2551
02:12:13,040 --> 02:12:15,920
session that you have

2552
02:12:17,679 --> 02:12:21,639
okay some more commands

2553
02:12:22,639 --> 02:12:24,000
um

2554
02:12:24,000 --> 02:12:28,480
all of these will have a dash h flag

2555
02:12:28,480 --> 02:12:30,480
uh that will show you information about

2556
02:12:30,480 --> 02:12:32,239
all the different flags that they

2557
02:12:32,239 --> 02:12:33,679
support

2558
02:12:33,679 --> 02:12:35,679
so i'll

2559
02:12:35,679 --> 02:12:37,440
i'll talk a little bit about the search

2560
02:12:37,440 --> 02:12:39,360
search and we're going to use that in in

2561
02:12:39,360 --> 02:12:41,280
the next lab search allows you to search

2562
02:12:41,280 --> 02:12:44,000
for files on the target

2563
02:12:44,000 --> 02:12:47,199
and you can use it with dash f flag

2564
02:12:47,199 --> 02:12:50,480
and provided with a pattern for the file

2565
02:12:50,480 --> 02:12:52,239
name to search for

2566
02:12:52,239 --> 02:12:53,760
so that

2567
02:12:53,760 --> 02:12:56,239
that can include things like star and

2568
02:12:56,239 --> 02:12:58,880
question mark so it's basically glob

2569
02:12:58,880 --> 02:13:01,440
pattern and it searches the whole hard

2570
02:13:01,440 --> 02:13:03,840
drive of the target to to find any files

2571
02:13:03,840 --> 02:13:05,040
that match

2572
02:13:05,040 --> 02:13:07,840
whose name matches that pattern

2573
02:13:07,840 --> 02:13:10,159
cat displays the file so you provide a

2574
02:13:10,159 --> 02:13:13,920
path to the file on the target

2575
02:13:13,920 --> 02:13:16,400
getsystem sometimes can be useful on

2576
02:13:16,400 --> 02:13:18,239
windows machines so this is only

2577
02:13:18,239 --> 02:13:20,239
supported on windows

2578
02:13:20,239 --> 02:13:23,679
and you already need to have admin

2579
02:13:23,679 --> 02:13:26,000
rights uh on the target so it's not

2580
02:13:26,000 --> 02:13:27,920
privilege escalation from regular user

2581
02:13:27,920 --> 02:13:30,480
to admin but if you do have admin

2582
02:13:30,480 --> 02:13:33,599
permissions this will uh try different

2583
02:13:33,599 --> 02:13:35,760
techniques to get system on on the

2584
02:13:35,760 --> 02:13:38,079
target machine

2585
02:13:38,079 --> 02:13:40,400
so remember when we talked about that

2586
02:13:40,400 --> 02:13:43,440
interpreter can has dynamic

2587
02:13:43,440 --> 02:13:45,840
has capability to dynamically

2588
02:13:45,840 --> 02:13:48,079
load extensions to its capabilities so

2589
02:13:48,079 --> 02:13:50,239
that's done through load command we're

2590
02:13:50,239 --> 02:13:52,159
not going to do that today but you can

2591
02:13:52,159 --> 02:13:54,960
check out what additional modules are

2592
02:13:54,960 --> 02:13:58,079
enabled most notably on windows you can

2593
02:13:58,079 --> 02:14:00,159
load things like mimikats and and use

2594
02:14:00,159 --> 02:14:02,079
memcats related commands uh in

2595
02:14:02,079 --> 02:14:05,040
meterpreter as well

2596
02:14:05,360 --> 02:14:07,760
uh and another one that's specific to

2597
02:14:07,760 --> 02:14:10,639
windows is reg and that's for

2598
02:14:10,639 --> 02:14:12,960
interacting with uh with registry like

2599
02:14:12,960 --> 02:14:14,079
querying and

2600
02:14:14,079 --> 02:14:16,440
changing keys without using

2601
02:14:16,440 --> 02:14:20,320
reg.exe on the target

2602
02:14:21,119 --> 02:14:22,320
so

2603
02:14:22,320 --> 02:14:24,480
there's actually multiple flavors of

2604
02:14:24,480 --> 02:14:26,880
interpreter uh there's

2605
02:14:26,880 --> 02:14:28,480
the the best one you can get is the

2606
02:14:28,480 --> 02:14:30,480
native interpreter that's basically a

2607
02:14:30,480 --> 02:14:32,719
native binary that runs on the target

2608
02:14:32,719 --> 02:14:34,000
platform but

2609
02:14:34,000 --> 02:14:36,800
uh and as is the case with our target

2610
02:14:36,800 --> 02:14:38,800
what we will actually get is a java

2611
02:14:38,800 --> 02:14:40,800
based interpreter and so just keep that

2612
02:14:40,800 --> 02:14:43,599
in mind not all of the commands are

2613
02:14:43,599 --> 02:14:45,440
supported in all of the types of

2614
02:14:45,440 --> 02:14:48,159
interpreter sessions so but you can

2615
02:14:48,159 --> 02:14:52,079
always do help and check what commands

2616
02:14:52,079 --> 02:14:53,760
what commands are supported by your

2617
02:14:53,760 --> 02:14:54,719
session

2618
02:14:54,719 --> 02:14:57,840
and with the load uh the load tag l or

2619
02:14:57,840 --> 02:14:59,599
dash l will

2620
02:14:59,599 --> 02:15:02,000
list all of the available modules that

2621
02:15:02,000 --> 02:15:03,599
you can

2622
02:15:03,599 --> 02:15:05,700
load

2623
02:15:05,700 --> 02:15:08,239
[Music]

2624
02:15:08,239 --> 02:15:10,560
thing worth mentioning is the post

2625
02:15:10,560 --> 02:15:13,040
exploitation modules um

2626
02:15:13,040 --> 02:15:15,840
again the the naming is uh

2627
02:15:15,840 --> 02:15:18,159
sort of modular so you will have post

2628
02:15:18,159 --> 02:15:19,599
and then slash

2629
02:15:19,599 --> 02:15:22,079
usually platform like operating system

2630
02:15:22,079 --> 02:15:23,920
and then type of post exploitation

2631
02:15:23,920 --> 02:15:26,480
module and then the module name itself

2632
02:15:26,480 --> 02:15:29,440
uh and the type could be

2633
02:15:29,440 --> 02:15:32,320
capture gather manage escalate recon

2634
02:15:32,320 --> 02:15:34,880
wlan so all the different things that

2635
02:15:34,880 --> 02:15:36,880
you can do once you have an active

2636
02:15:36,880 --> 02:15:38,400
session

2637
02:15:38,400 --> 02:15:39,199
uh

2638
02:15:39,199 --> 02:15:41,679
on on the target so gather is for

2639
02:15:41,679 --> 02:15:43,440
information gathering so that will be

2640
02:15:43,440 --> 02:15:46,960
things like dumping password hashes or

2641
02:15:46,960 --> 02:15:48,960
or things like that and recon is just

2642
02:15:48,960 --> 02:15:49,840
gaining

2643
02:15:49,840 --> 02:15:53,280
more information about the the host etc

2644
02:15:53,280 --> 02:15:56,159
escalation for privilege escalations so

2645
02:15:56,159 --> 02:15:58,400
it's just good to understand that the

2646
02:15:58,400 --> 02:15:59,520
types

2647
02:15:59,520 --> 02:16:01,440
when you look at the module name

2648
02:16:01,440 --> 02:16:03,599
there's three different

2649
02:16:03,599 --> 02:16:06,400
ways to run post modules i just usually

2650
02:16:06,400 --> 02:16:07,119
do

2651
02:16:07,119 --> 02:16:07,920
as

2652
02:16:07,920 --> 02:16:10,560
the approach the way you would execute

2653
02:16:10,560 --> 02:16:12,719
any other modules so from

2654
02:16:12,719 --> 02:16:15,599
metasploit command metasploit prompt you

2655
02:16:15,599 --> 02:16:18,400
will do use and then the module name uh

2656
02:16:18,400 --> 02:16:21,599
most of the if not all post modules will

2657
02:16:21,599 --> 02:16:23,280
have a session parameter that's

2658
02:16:23,280 --> 02:16:25,360
basically tells you

2659
02:16:25,360 --> 02:16:28,239
on which active session to execute this

2660
02:16:28,239 --> 02:16:30,800
post exploitation module so again this

2661
02:16:30,800 --> 02:16:32,959
is not the exploit itself it's like you

2662
02:16:32,959 --> 02:16:36,240
need to be already connected uh to

2663
02:16:36,240 --> 02:16:38,879
the target and it's running things on

2664
02:16:38,879 --> 02:16:41,280
the target so they usually apply to an

2665
02:16:41,280 --> 02:16:43,359
active session

2666
02:16:43,359 --> 02:16:45,599
uh so you do use module you set session

2667
02:16:45,599 --> 02:16:47,679
set any other parameters do run and

2668
02:16:47,679 --> 02:16:50,000
that's how you run them uh you can also

2669
02:16:50,000 --> 02:16:50,959
do

2670
02:16:50,959 --> 02:16:53,040
run it through sessions with the

2671
02:16:53,040 --> 02:16:54,478
sessions dash

2672
02:16:54,478 --> 02:16:56,478
s and then the module name and then give

2673
02:16:56,478 --> 02:16:57,760
it a session

2674
02:16:57,760 --> 02:17:02,000
id with dash i um i rarely do that some

2675
02:17:02,000 --> 02:17:04,318
but also from within when you're

2676
02:17:04,318 --> 02:17:06,160
interacting with an active session with

2677
02:17:06,160 --> 02:17:07,840
the negative interpreter session you can

2678
02:17:07,840 --> 02:17:09,920
also do run and then the module name and

2679
02:17:09,920 --> 02:17:11,599
it will run that module for this

2680
02:17:11,599 --> 02:17:15,840
specific active session

2681
02:17:16,478 --> 02:17:18,879
uh you can list modules just to check

2682
02:17:18,879 --> 02:17:21,200
what they are some of the interesting

2683
02:17:21,200 --> 02:17:23,599
ones uh

2684
02:17:23,599 --> 02:17:26,080
are listed on the slide so

2685
02:17:26,080 --> 02:17:28,000
a lot of them are applicable to linux a

2686
02:17:28,000 --> 02:17:29,599
lot of them are applicable to windows

2687
02:17:29,599 --> 02:17:31,599
there's some that are applicable to

2688
02:17:31,599 --> 02:17:34,558
multiple platforms so the ssh credential

2689
02:17:34,558 --> 02:17:35,920
gathering one

2690
02:17:35,920 --> 02:17:38,879
it will uh you can run it on on multiple

2691
02:17:38,879 --> 02:17:40,558
platforms

2692
02:17:40,558 --> 02:17:41,519
so

2693
02:17:41,519 --> 02:17:43,200
uh check them out you can search for

2694
02:17:43,200 --> 02:17:47,359
more uh post modules obviously as well

2695
02:17:47,359 --> 02:17:49,679
um an interesting

2696
02:17:49,679 --> 02:17:52,558
feature i don't know if you ever will

2697
02:17:52,558 --> 02:17:53,920
need to use it

2698
02:17:53,920 --> 02:17:55,840
but uh if whatever reason you're trying

2699
02:17:55,840 --> 02:17:57,920
to understand what the module

2700
02:17:57,920 --> 02:18:00,318
does and it's important and you cannot

2701
02:18:00,318 --> 02:18:02,160
get it from the description

2702
02:18:02,160 --> 02:18:04,318
once you load the module with the use

2703
02:18:04,318 --> 02:18:06,718
command like use module name you can

2704
02:18:06,718 --> 02:18:08,638
then use edit command and it will

2705
02:18:08,638 --> 02:18:09,840
actually

2706
02:18:09,840 --> 02:18:12,558
open up your default editor and open up

2707
02:18:12,558 --> 02:18:14,398
the source code for that module in the

2708
02:18:14,398 --> 02:18:17,599
default editor so that allows you to do

2709
02:18:17,599 --> 02:18:20,080
two things one is you can manually

2710
02:18:20,080 --> 02:18:21,760
review how it works

2711
02:18:21,760 --> 02:18:24,558
uh and by the way uh metasploit is

2712
02:18:24,558 --> 02:18:26,558
written in ruby and so majority of the

2713
02:18:26,558 --> 02:18:29,840
modules are going to be ruby based

2714
02:18:29,840 --> 02:18:31,040
uh if

2715
02:18:31,040 --> 02:18:33,120
but also if you want to change any of

2716
02:18:33,120 --> 02:18:35,840
the behavior uh of a metasploit module

2717
02:18:35,840 --> 02:18:37,040
you can

2718
02:18:37,040 --> 02:18:39,920
update it in in that editor but then

2719
02:18:39,920 --> 02:18:42,799
once you're you exit you need to run

2720
02:18:42,799 --> 02:18:44,879
reload command to kind of reload that

2721
02:18:44,879 --> 02:18:47,279
module

2722
02:18:49,519 --> 02:18:50,879
all right

2723
02:18:50,879 --> 02:18:53,359
so with that we're getting to session

2724
02:18:53,359 --> 02:18:54,558
four

2725
02:18:54,558 --> 02:18:57,920
and we're basically uh sorry lab four so

2726
02:18:57,920 --> 02:19:00,558
lab four is essentially interacting with

2727
02:19:00,558 --> 02:19:03,040
that new session that we've created

2728
02:19:03,040 --> 02:19:05,200
so if you have an interpreter session uh

2729
02:19:05,200 --> 02:19:07,599
use that if you don't uh use that

2730
02:19:07,599 --> 02:19:09,280
command to upgrade session to

2731
02:19:09,280 --> 02:19:11,120
interpreter session so if you've used

2732
02:19:11,120 --> 02:19:12,959
the jsp

2733
02:19:12,959 --> 02:19:16,318
upload exploit uh do that first

2734
02:19:16,318 --> 02:19:18,398
and then there's uh several things we're

2735
02:19:18,398 --> 02:19:20,398
gonna do we're going to enumerate users

2736
02:19:20,398 --> 02:19:22,318
on the compromised host so go back and

2737
02:19:22,318 --> 02:19:24,638
review that list of post modules and

2738
02:19:24,638 --> 02:19:26,799
pick the one that will enumerate users

2739
02:19:26,799 --> 02:19:28,240
around that

2740
02:19:28,240 --> 02:19:30,638
that use search command to find the

2741
02:19:30,638 --> 02:19:33,599
second flag we have first flag

2742
02:19:33,599 --> 02:19:35,519
already that's in the home directory of

2743
02:19:35,519 --> 02:19:38,000
the user that we've exploited uh find

2744
02:19:38,000 --> 02:19:39,920
the second flag it's hidden somewhere in

2745
02:19:39,920 --> 02:19:41,519
the file system

2746
02:19:41,519 --> 02:19:43,840
just see the pattern of the name in in

2747
02:19:43,840 --> 02:19:46,160
the first flag and and find the second

2748
02:19:46,160 --> 02:19:47,120
one

2749
02:19:47,120 --> 02:19:50,479
list processes um if you still have time

2750
02:19:50,479 --> 02:19:52,399
check other interesting post

2751
02:19:52,399 --> 02:19:55,439
exploitation modules

2752
02:19:58,319 --> 02:19:59,520
all right

2753
02:19:59,520 --> 02:20:01,040
with that

2754
02:20:01,040 --> 02:20:03,520
we're gonna no can we keep the slide for

2755
02:20:03,520 --> 02:20:04,880
now please

2756
02:20:04,880 --> 02:20:06,720
oh sorry i actually asked her to change

2757
02:20:06,720 --> 02:20:08,000
it just sorry

2758
02:20:08,000 --> 02:20:10,240
there yeah never mind just for people

2759
02:20:10,240 --> 02:20:14,560
who got the shell java linux session

2760
02:20:14,560 --> 02:20:16,640
if you go sessions

2761
02:20:16,640 --> 02:20:20,399
upgrade and then whatever the number is

2762
02:20:21,359 --> 02:20:23,280
it should

2763
02:20:23,280 --> 02:20:24,720
change that into an interpreter session

2764
02:20:24,720 --> 02:20:26,000
or give you a new session that will

2765
02:20:26,000 --> 02:20:29,319
upgrade it

2766
02:20:30,960 --> 02:20:32,479
and you can see here i got a brand new

2767
02:20:32,479 --> 02:20:34,160
material session and in just a moment

2768
02:20:34,160 --> 02:20:35,280
it's going to say that the session's

2769
02:20:35,280 --> 02:20:36,100
ready to go

2770
02:20:36,100 --> 02:20:39,309
[Music]

2771
02:20:40,880 --> 02:20:43,120
perfect

2772
02:20:43,120 --> 02:20:44,720
but remember until you have this

2773
02:20:44,720 --> 02:20:46,399
information here it's not finished

2774
02:20:46,399 --> 02:20:48,319
loading so just give it a minute to

2775
02:20:48,319 --> 02:20:51,600
actually load up entirely

2776
02:20:56,880 --> 02:20:58,880
all right so we're gonna

2777
02:20:58,880 --> 02:21:01,520
do 10 minutes see where we are there we

2778
02:21:01,520 --> 02:21:02,560
go

2779
02:21:02,560 --> 02:21:05,439
there's session five

2780
02:21:05,600 --> 02:21:06,960
so now i have

2781
02:21:06,960 --> 02:21:09,040
a fully fledged native

2782
02:21:09,040 --> 02:21:11,040
interpreter here you can see that it's

2783
02:21:11,040 --> 02:21:14,640
x86 rather than java

2784
02:21:17,200 --> 02:21:18,319
all right we can switch back to the

2785
02:21:18,319 --> 02:21:21,720
other slide now

2786
02:22:03,439 --> 02:22:06,439
uh

2787
02:22:49,040 --> 02:22:50,640
i'm gonna use this time to catch up with

2788
02:22:50,640 --> 02:22:53,640
lab4

2789
02:22:57,600 --> 02:23:00,889
[Music]

2790
02:23:15,439 --> 02:23:17,760
then did we cover that after search you

2791
02:23:17,760 --> 02:23:21,120
can do using the name sorry the number

2792
02:23:21,120 --> 02:23:24,319
of the search result

2793
02:23:24,640 --> 02:23:25,840
uh

2794
02:23:25,840 --> 02:23:27,920
it was mentioned briefly in chat but i

2795
02:23:27,920 --> 02:23:29,760
don't think we actually said it on the

2796
02:23:29,760 --> 02:23:31,680
presentation here so

2797
02:23:31,680 --> 02:23:34,080
you want to go

2798
02:23:34,960 --> 02:23:37,439
maybe as i don't know will there be no

2799
02:23:37,439 --> 02:23:39,040
there won't be okay

2800
02:23:39,040 --> 02:23:40,000
um

2801
02:23:40,000 --> 02:23:42,399
yeah let's do that

2802
02:23:42,399 --> 02:23:44,000
all right

2803
02:23:44,000 --> 02:23:46,720
switching back my screen real quick here

2804
02:23:46,720 --> 02:23:48,640
that's a useful shortcut

2805
02:23:48,640 --> 02:23:52,000
that took me too long to learn

2806
02:23:52,160 --> 02:23:53,760
so what amaron is talking about is when

2807
02:23:53,760 --> 02:23:57,760
we do a search for say tomcat

2808
02:23:57,760 --> 02:23:59,439
we get a lot of different results but

2809
02:23:59,439 --> 02:24:00,960
each one has a number at the beginning

2810
02:24:00,960 --> 02:24:02,640
here

2811
02:24:02,640 --> 02:24:04,880
instead of going through and copying and

2812
02:24:04,880 --> 02:24:06,960
pasting the whole string

2813
02:24:06,960 --> 02:24:08,640
what you can actually do is just say i

2814
02:24:08,640 --> 02:24:11,840
want to use the let's say 20 second

2815
02:24:11,840 --> 02:24:13,040
result

2816
02:24:13,040 --> 02:24:14,560
and it will load that up without having

2817
02:24:14,560 --> 02:24:17,040
to type in that entire string

2818
02:24:17,040 --> 02:24:18,640
it's really useful especially if you

2819
02:24:18,640 --> 02:24:20,080
don't have a mouse or if you're going

2820
02:24:20,080 --> 02:24:21,920
through a console that you can't copy

2821
02:24:21,920 --> 02:24:25,319
and paste on

2822
02:24:28,399 --> 02:24:29,680
all right i think we can go back to the

2823
02:24:29,680 --> 02:24:30,880
slide there

2824
02:24:30,880 --> 02:24:33,880
thanks

2825
02:24:50,570 --> 02:24:57,809
[Music]

2826
02:26:12,010 --> 02:26:15,139
[Music]

2827
02:26:57,680 --> 02:27:00,680
hmm

2828
02:28:34,050 --> 02:28:37,109
[Music]

2829
02:29:21,730 --> 02:29:24,910
[Music]

2830
02:29:58,640 --> 02:30:01,640
um

2831
02:31:09,760 --> 02:31:14,120
all right 10 minutes is done

2832
02:31:27,520 --> 02:31:29,200
then

2833
02:31:29,200 --> 02:31:31,359
everyone ready to go

2834
02:31:31,359 --> 02:31:32,720
we have any questions before we go

2835
02:31:32,720 --> 02:31:36,039
forward here

2836
02:31:43,520 --> 02:31:46,000
all right

2837
02:31:46,720 --> 02:31:49,920
over the flags on this one

2838
02:31:53,040 --> 02:31:56,319
ready to go all right good to hear

2839
02:31:56,319 --> 02:31:58,160
uh one thing did come up in the youtube

2840
02:31:58,160 --> 02:32:00,160
comments here uh someone mentioned that

2841
02:32:00,160 --> 02:32:02,560
you can also use tabbing for with use so

2842
02:32:02,560 --> 02:32:03,760
if you ever know

2843
02:32:03,760 --> 02:32:05,280
part of what you're looking for let's

2844
02:32:05,280 --> 02:32:07,040
say we want to post the exploit module

2845
02:32:07,040 --> 02:32:10,000
on linux that gathers something but we

2846
02:32:10,000 --> 02:32:12,080
don't know what you can just double tap

2847
02:32:12,080 --> 02:32:13,680
tab you can actually get a list of all

2848
02:32:13,680 --> 02:32:17,120
the possibilities in that in that

2849
02:32:17,120 --> 02:32:20,880
folder i guess or under that subheading

2850
02:32:22,560 --> 02:32:27,039
so for instance we could use enum system

2851
02:32:28,319 --> 02:32:29,760
and i've got a few sessions to check

2852
02:32:29,760 --> 02:32:31,600
from right or choose from right now but

2853
02:32:31,600 --> 02:32:32,880
i'm just going to use my number one

2854
02:32:32,880 --> 02:32:35,880
session

2855
02:32:46,640 --> 02:32:48,080
we can see it pulled a bunch of

2856
02:32:48,080 --> 02:32:51,800
information back here

2857
02:33:01,280 --> 02:33:02,960
and we're on which module are you using

2858
02:33:02,960 --> 02:33:06,160
to enumerate users

2859
02:33:06,160 --> 02:33:09,280
and you think i remember

2860
02:33:09,600 --> 02:33:10,880
well that's not in the notes here so

2861
02:33:10,880 --> 02:33:12,080
that's why i'm asking if there's a

2862
02:33:12,080 --> 02:33:14,319
specific one you were looking for um let

2863
02:33:14,319 --> 02:33:15,760
me check the way i'm gonna do it is just

2864
02:33:15,760 --> 02:33:19,359
gonna pull out that uh password file

2865
02:33:19,359 --> 02:33:23,200
joe let's do that i think i listed

2866
02:33:23,200 --> 02:33:24,240
uh

2867
02:33:24,240 --> 02:33:26,319
no i didn't

2868
02:33:26,319 --> 02:33:30,560
so there's also uh enum users history

2869
02:33:30,560 --> 02:33:32,840
but i can't remember what that

2870
02:33:32,840 --> 02:33:36,000
does oh no sorry that's that's

2871
02:33:36,000 --> 02:33:38,560
yeah that's uh command prompt history

2872
02:33:38,560 --> 02:33:39,520
okay

2873
02:33:39,520 --> 02:33:41,760
so we're gonna

2874
02:33:41,760 --> 02:33:43,280
look at our sessions here we're gonna

2875
02:33:43,280 --> 02:33:45,120
use sessions

2876
02:33:45,120 --> 02:33:46,720
and we're gonna interact with number one

2877
02:33:46,720 --> 02:33:49,760
again and again i only reason i have

2878
02:33:49,760 --> 02:33:51,439
multiple sessions here is because i did

2879
02:33:51,439 --> 02:33:53,520
all of the exploits instead of just one

2880
02:33:53,520 --> 02:33:57,880
you only need one of these sessions

2881
02:34:02,080 --> 02:34:06,240
and if we go to etc

2882
02:34:06,399 --> 02:34:09,760
we can cut out that password file

2883
02:34:09,760 --> 02:34:13,960
and there's our list of users here

2884
02:34:16,000 --> 02:34:19,280
we could also go to a shell

2885
02:34:20,160 --> 02:34:22,960
do the same thing

2886
02:34:27,280 --> 02:34:28,720
now it's really important that when you

2887
02:34:28,720 --> 02:34:31,120
open the shell you're in a sub

2888
02:34:31,120 --> 02:34:33,439
uh process here so you can type exit to

2889
02:34:33,439 --> 02:34:34,960
exit the shell

2890
02:34:34,960 --> 02:34:36,560
but if you type exit at the interpreter

2891
02:34:36,560 --> 02:34:38,800
you're gonna lose your session and if

2892
02:34:38,800 --> 02:34:40,880
you've ever made that mistake

2893
02:34:40,880 --> 02:34:42,399
it's not so fun to have to go through an

2894
02:34:42,399 --> 02:34:44,240
entire exploit chain to re-establish

2895
02:34:44,240 --> 02:34:46,880
that connection

2896
02:34:49,850 --> 02:34:52,969
[Music]

2897
02:34:54,479 --> 02:34:55,760
now we're going to do a search real

2898
02:34:55,760 --> 02:34:58,760
quick

2899
02:35:00,479 --> 02:35:04,960
for anything any file labeled flag

2900
02:35:06,800 --> 02:35:07,600
oh

2901
02:35:07,600 --> 02:35:09,040
that is because i changed the folder

2902
02:35:09,040 --> 02:35:11,600
that we are in

2903
02:35:11,600 --> 02:35:13,200
[Music]

2904
02:35:13,200 --> 02:35:16,160
uh remember which flight my folder

2905
02:35:16,160 --> 02:35:20,000
whatever uh just search yeah

2906
02:35:20,800 --> 02:35:22,880
search also has where to start the

2907
02:35:22,880 --> 02:35:26,679
search like

2908
02:35:30,640 --> 02:35:34,000
uh you're you're not in the session ah

2909
02:35:34,000 --> 02:35:35,680
well that would do it then wouldn't it

2910
02:35:35,680 --> 02:35:38,479
so yeah search on

2911
02:35:38,479 --> 02:35:40,319
so just ignore everything i just did

2912
02:35:40,319 --> 02:35:42,000
there

2913
02:35:42,000 --> 02:35:44,880
clear wipes away all the history

2914
02:35:44,880 --> 02:35:46,080
so we're going to go back into our

2915
02:35:46,080 --> 02:35:48,399
session

2916
02:35:49,280 --> 02:35:52,080
and here we're going to do a search

2917
02:35:52,080 --> 02:35:53,280
we're going to look for files let's

2918
02:35:53,280 --> 02:35:56,080
start with flag

2919
02:36:06,560 --> 02:36:09,600
there we go so i had to go back to the

2920
02:36:09,600 --> 02:36:10,880
main directory because i had changed

2921
02:36:10,880 --> 02:36:13,120
mine since i started the session

2922
02:36:13,120 --> 02:36:15,520
but we can see that there's one flag

2923
02:36:15,520 --> 02:36:19,200
in tomcat opt tomcat flag one

2924
02:36:19,200 --> 02:36:20,960
there's another one over here and user

2925
02:36:20,960 --> 02:36:23,439
share flag bash to so the first thing

2926
02:36:23,439 --> 02:36:25,439
we're going to do is go over here back

2927
02:36:25,439 --> 02:36:28,319
to optomcat

2928
02:36:28,880 --> 02:36:31,520
going to take a look ls just like linux

2929
02:36:31,520 --> 02:36:34,080
and we'll do flag one

2930
02:36:34,080 --> 02:36:36,000
and cap works just like it does in linux

2931
02:36:36,000 --> 02:36:37,200
except right now it's going through

2932
02:36:37,200 --> 02:36:38,720
interpreter so all that's happening is

2933
02:36:38,720 --> 02:36:39,840
interpreter is going to open up that

2934
02:36:39,840 --> 02:36:43,200
file and send the contents to us

2935
02:36:43,200 --> 02:36:47,399
so there's our flag number one

2936
02:36:50,000 --> 02:36:52,160
and again we have the other file here

2937
02:36:52,160 --> 02:36:56,479
user share doc bash flag 2

2938
02:36:57,920 --> 02:37:01,359
little cd over there

2939
02:37:02,960 --> 02:37:06,399
and we'll cat out flag too

2940
02:37:06,720 --> 02:37:09,840
and there's black number two

2941
02:37:14,880 --> 02:37:16,319
i think that was all that we needed for

2942
02:37:16,319 --> 02:37:19,720
this lab right

2943
02:37:20,720 --> 02:37:22,960
yeah

2944
02:37:22,960 --> 02:37:24,399
you can also poke around some of the

2945
02:37:24,399 --> 02:37:27,358
other options here

2946
02:37:27,600 --> 02:37:29,280
we'll background this but you can look

2947
02:37:29,280 --> 02:37:30,160
for

2948
02:37:30,160 --> 02:37:33,119
say a

2949
02:37:44,640 --> 02:37:46,240
looking forward to post exploitation

2950
02:37:46,240 --> 02:37:49,200
module called stump

2951
02:37:49,200 --> 02:37:51,920
and we see we have this one here

2952
02:37:51,920 --> 02:37:55,040
so we'll use number three

2953
02:37:55,040 --> 02:37:58,640
we'll set the session to session one

2954
02:37:58,640 --> 02:38:01,439
run that

2955
02:38:01,439 --> 02:38:03,200
but we can see we're not root right now

2956
02:38:03,200 --> 02:38:04,319
so we're not going to be able to get

2957
02:38:04,319 --> 02:38:06,960
those hashes

2958
02:38:07,040 --> 02:38:09,600
we look at our sessions again

2959
02:38:09,600 --> 02:38:11,120
you can see that i'm running as the user

2960
02:38:11,120 --> 02:38:12,319
damon

2961
02:38:12,319 --> 02:38:14,080
which does not have access to read the

2962
02:38:14,080 --> 02:38:15,280
shadow file so we're not going to be

2963
02:38:15,280 --> 02:38:18,000
able to hashtag

2964
02:38:19,760 --> 02:38:21,920
is everyone okay with that

2965
02:38:21,920 --> 02:38:24,560
any questions

2966
02:38:27,439 --> 02:38:29,439
i can see that we've got a good number

2967
02:38:29,439 --> 02:38:31,840
of people on the fourth flag already our

2968
02:38:31,840 --> 02:38:35,760
flag lab four flag rather

2969
02:38:38,160 --> 02:38:40,080
all right do we need five minutes break

2970
02:38:40,080 --> 02:38:43,080
break

2971
02:38:44,640 --> 02:38:46,160
i don't know about anyone else but i'm

2972
02:38:46,160 --> 02:38:47,439
going to take a five-minute break here i

2973
02:38:47,439 --> 02:38:49,600
think

2974
02:38:51,920 --> 02:38:54,640
act 4 bbq you've been on

2975
02:38:54,640 --> 02:38:57,200
lab five for the last half hour here so

2976
02:38:57,200 --> 02:38:58,960
i think you might be slightly ahead of

2977
02:38:58,960 --> 02:39:02,000
everybody else at the moment

2978
02:39:05,840 --> 02:39:07,840
okay let's do a break because the next

2979
02:39:07,840 --> 02:39:09,680
module is probably the most important

2980
02:39:09,680 --> 02:39:12,160
one or the most important one for me and

2981
02:39:12,160 --> 02:39:13,840
it's about pivoting

2982
02:39:13,840 --> 02:39:16,240
so we'll do a five minute break i'm

2983
02:39:16,240 --> 02:39:18,240
gonna set up a timer

2984
02:39:18,240 --> 02:39:20,560
and we'll be back and if you need to

2985
02:39:20,560 --> 02:39:21,840
catch up on the

2986
02:39:21,840 --> 02:39:25,040
on lab four do that

2987
02:39:25,040 --> 02:39:27,760
and if not then just

2988
02:39:27,760 --> 02:39:30,960
grab some more coffee

2989
02:39:31,120 --> 02:39:34,600
see you soon guys

2990
02:44:36,479 --> 02:44:39,479
so

2991
02:45:08,319 --> 02:45:11,039
all right

2992
02:45:13,040 --> 02:45:16,800
yeah can we get the slide up thank you

2993
02:45:18,479 --> 02:45:21,439
perfect so this lab was about uh

2994
02:45:21,439 --> 02:45:23,680
interacting with metropolitan

2995
02:45:23,680 --> 02:45:25,520
we did search

2996
02:45:25,520 --> 02:45:27,279
we explored some of the post

2997
02:45:27,279 --> 02:45:30,399
exploitation modules

2998
02:45:30,399 --> 02:45:33,200
and if you use the jsp upload exploit

2999
02:45:33,200 --> 02:45:35,439
initially you had a chance to upgrade

3000
02:45:35,439 --> 02:45:38,880
your session to meterpreter

3001
02:45:39,680 --> 02:45:43,319
so now

3002
02:45:44,960 --> 02:45:47,600
uh let's go let's talk about pivoting

3003
02:45:47,600 --> 02:45:49,840
options so

3004
02:45:49,840 --> 02:45:50,960
this is

3005
02:45:50,960 --> 02:45:52,319
another area

3006
02:45:52,319 --> 02:45:54,720
in my mind together with

3007
02:45:54,720 --> 02:45:57,120
the interpreter where

3008
02:45:57,120 --> 02:45:59,680
metasploit really shines is is the

3009
02:45:59,680 --> 02:46:01,680
pivoting capabilities there's

3010
02:46:01,680 --> 02:46:03,279
essentially at least what we're going to

3011
02:46:03,279 --> 02:46:04,720
cover today there's

3012
02:46:04,720 --> 02:46:07,760
two options for for pivoting one is port

3013
02:46:07,760 --> 02:46:10,399
forwarding and another one is routing

3014
02:46:10,399 --> 02:46:12,160
and so let's start with uh port

3015
02:46:12,160 --> 02:46:14,080
forwarding and i mean you can use them

3016
02:46:14,080 --> 02:46:15,439
both uh

3017
02:46:15,439 --> 02:46:17,120
some are better in certain situations

3018
02:46:17,120 --> 02:46:19,760
but ultimately it's up to you to decide

3019
02:46:19,760 --> 02:46:21,359
what's what's more convenient so we're

3020
02:46:21,359 --> 02:46:22,960
gonna talk about the

3021
02:46:22,960 --> 02:46:24,720
the differences

3022
02:46:24,720 --> 02:46:27,680
uh what port forwarding is is

3023
02:46:27,680 --> 02:46:30,160
essentially it's very similar to ssh

3024
02:46:30,160 --> 02:46:32,800
port forwarding but works through uh

3025
02:46:32,800 --> 02:46:34,640
interpreter session

3026
02:46:34,640 --> 02:46:35,840
so when

3027
02:46:35,840 --> 02:46:38,080
uh when you interact with the

3028
02:46:38,080 --> 02:46:39,920
interpreter session you can set up

3029
02:46:39,920 --> 02:46:42,240
either forward or reverse port

3030
02:46:42,240 --> 02:46:43,359
forwarding

3031
02:46:43,359 --> 02:46:46,240
which allows you to forward traffic for

3032
02:46:46,240 --> 02:46:48,000
one single port

3033
02:46:48,000 --> 02:46:49,680
uh through that active interpreter

3034
02:46:49,680 --> 02:46:52,560
session so you can either the forward

3035
02:46:52,560 --> 02:46:54,880
port forwarding is you can either

3036
02:46:54,880 --> 02:46:58,479
um open a port on your local machine

3037
02:46:58,479 --> 02:47:00,399
and get the tools to connect to that

3038
02:47:00,399 --> 02:47:03,279
port and forward that connection to

3039
02:47:03,279 --> 02:47:05,279
anything that's accessible from your

3040
02:47:05,279 --> 02:47:06,399
target

3041
02:47:06,399 --> 02:47:08,399
and reverse port forwarding allows you

3042
02:47:08,399 --> 02:47:11,120
to open the port on your target machine

3043
02:47:11,120 --> 02:47:13,760
and accept connections from the

3044
02:47:13,760 --> 02:47:15,680
network that's that the target is

3045
02:47:15,680 --> 02:47:18,080
connected to and then forward that

3046
02:47:18,080 --> 02:47:21,040
traffic back to some process on your

3047
02:47:21,040 --> 02:47:22,720
machine

3048
02:47:22,720 --> 02:47:25,279
all of that is done using port fwd

3049
02:47:25,279 --> 02:47:27,600
command uh that's a command for

3050
02:47:27,600 --> 02:47:30,399
meterpreter so you need to be in an

3051
02:47:30,399 --> 02:47:34,960
active session to to run that command uh

3052
02:47:34,960 --> 02:47:36,080
you do

3053
02:47:36,080 --> 02:47:39,680
uh basically you add port forwards with

3054
02:47:39,680 --> 02:47:41,760
add you delete port forwards with delete

3055
02:47:41,760 --> 02:47:44,000
and you can also list and flash and

3056
02:47:44,000 --> 02:47:46,800
flashes uh deleting all of the

3057
02:47:46,800 --> 02:47:49,840
existing port forwards

3058
02:47:49,920 --> 02:47:54,160
to give you a little bit of visual is um

3059
02:47:54,160 --> 02:47:56,399
and so this picture kind of describes

3060
02:47:56,399 --> 02:48:00,319
the uh the regular port forwarding

3061
02:48:00,319 --> 02:48:03,840
so when you do port fwd add

3062
02:48:03,840 --> 02:48:05,680
uh you specify

3063
02:48:05,680 --> 02:48:07,920
a number of flags so for for port

3064
02:48:07,920 --> 02:48:09,520
forwarding we're going to be listening

3065
02:48:09,520 --> 02:48:12,160
here on a port on our local

3066
02:48:12,160 --> 02:48:14,240
uh attacker machine

3067
02:48:14,240 --> 02:48:17,359
and then if anybody connects we're gonna

3068
02:48:17,359 --> 02:48:19,120
forward that connection

3069
02:48:19,120 --> 02:48:20,640
through the compromise through the

3070
02:48:20,640 --> 02:48:23,040
target through the compromised host

3071
02:48:23,040 --> 02:48:24,800
to a different machine that the

3072
02:48:24,800 --> 02:48:27,760
compromised host has access to on their

3073
02:48:27,760 --> 02:48:28,840
local

3074
02:48:28,840 --> 02:48:31,520
network and so the flags for the port

3075
02:48:31,520 --> 02:48:33,200
fwd ad

3076
02:48:33,200 --> 02:48:34,319
are

3077
02:48:34,319 --> 02:48:37,279
dash capital l allows you to specify an

3078
02:48:37,279 --> 02:48:39,520
ip address on your attacker machine

3079
02:48:39,520 --> 02:48:42,240
where to listen to that port this is

3080
02:48:42,240 --> 02:48:44,880
very useful if you only want to uh

3081
02:48:44,880 --> 02:48:47,840
listen on localhost and not expose that

3082
02:48:47,840 --> 02:48:50,319
forwarded port to anything else on your

3083
02:48:50,319 --> 02:48:51,840
local network

3084
02:48:51,840 --> 02:48:54,960
uh dash lowercase cell specifies the

3085
02:48:54,960 --> 02:48:57,200
port number to listen to

3086
02:48:57,200 --> 02:48:59,840
so the uppercase cell is not required

3087
02:48:59,840 --> 02:49:02,880
but the lowercase l is required to to

3088
02:49:02,880 --> 02:49:04,560
set up port forwarding

3089
02:49:04,560 --> 02:49:07,680
and then the lowercase r specifies the

3090
02:49:07,680 --> 02:49:11,040
host to connect to from the attack

3091
02:49:11,040 --> 02:49:12,560
from the target machine

3092
02:49:12,560 --> 02:49:14,800
and the dash p specifies the port number

3093
02:49:14,800 --> 02:49:16,160
to connect to

3094
02:49:16,160 --> 02:49:18,000
from the attacker machine

3095
02:49:18,000 --> 02:49:20,160
this dash r can be ap address of the

3096
02:49:20,160 --> 02:49:22,040
host you can even specify

3097
02:49:22,040 --> 02:49:25,120
127.001 which will be interpreted on the

3098
02:49:25,120 --> 02:49:27,120
on the target so it's gonna be

3099
02:49:27,120 --> 02:49:29,439
essentially a local connection

3100
02:49:29,439 --> 02:49:31,680
that could be useful if

3101
02:49:31,680 --> 02:49:34,160
there is a local firewall or a firewall

3102
02:49:34,160 --> 02:49:36,080
in front of that target machine of

3103
02:49:36,080 --> 02:49:38,000
whatever reason you want to connect to

3104
02:49:38,000 --> 02:49:39,760
another service that's not directly

3105
02:49:39,760 --> 02:49:41,840
accessible from your attacker machine

3106
02:49:41,840 --> 02:49:42,560
but

3107
02:49:42,560 --> 02:49:43,920
you can connect to it essentially

3108
02:49:43,920 --> 02:49:46,560
locally using port forwarding

3109
02:49:46,560 --> 02:49:48,880
and the p is kind of self-explanatory

3110
02:49:48,880 --> 02:49:51,840
it's just a port number

3111
02:49:51,840 --> 02:49:54,720
so now what this does is once you've set

3112
02:49:54,720 --> 02:49:57,359
up port forwarding you can now

3113
02:49:57,359 --> 02:50:00,880
either use tools within metasploit or

3114
02:50:00,880 --> 02:50:03,600
use tools outside of metasploit to

3115
02:50:03,600 --> 02:50:05,920
connect to that local port that you've

3116
02:50:05,920 --> 02:50:08,720
opened and pass the the traffic to to

3117
02:50:08,720 --> 02:50:11,679
the target network

3118
02:50:12,720 --> 02:50:16,000
uh so this is just demonstration um

3119
02:50:16,000 --> 02:50:17,840
we we need to be interacting with an

3120
02:50:17,840 --> 02:50:21,359
active session uh for port forwarding

3121
02:50:21,359 --> 02:50:25,279
dash h works as as usual giving you help

3122
02:50:25,279 --> 02:50:27,439
and there's a list of options that you

3123
02:50:27,439 --> 02:50:28,720
specify

3124
02:50:28,720 --> 02:50:29,600
now

3125
02:50:29,600 --> 02:50:31,920
i find that this list of options the

3126
02:50:31,920 --> 02:50:34,399
help is very confusing because it both

3127
02:50:34,399 --> 02:50:36,960
tries to describe both regular and

3128
02:50:36,960 --> 02:50:39,040
reverse port forwarding

3129
02:50:39,040 --> 02:50:43,520
and they they're reusing the the

3130
02:50:43,520 --> 02:50:46,080
the options for both so

3131
02:50:46,080 --> 02:50:48,080
the trick that i use here to kind of

3132
02:50:48,080 --> 02:50:50,399
understand how it works is if you

3133
02:50:50,399 --> 02:50:51,520
want to do

3134
02:50:51,520 --> 02:50:54,080
regular port forwarding don't even read

3135
02:50:54,080 --> 02:50:55,760
the part of the help that that's

3136
02:50:55,760 --> 02:50:57,920
applicable to reverse port forwarding so

3137
02:50:57,920 --> 02:50:58,800
here

3138
02:50:58,800 --> 02:51:00,880
as an example that

3139
02:51:00,880 --> 02:51:04,080
dash l option i'll just read this part

3140
02:51:04,080 --> 02:51:05,760
and completely ignore this part because

3141
02:51:05,760 --> 02:51:08,720
that's going to be confusing for me

3142
02:51:08,720 --> 02:51:10,399
probably forward

3143
02:51:10,399 --> 02:51:12,160
port forwarding is or regular port

3144
02:51:12,160 --> 02:51:14,000
forwarding is the one that you'll use

3145
02:51:14,000 --> 02:51:15,520
most often

3146
02:51:15,520 --> 02:51:18,240
with if you want to set up the reverse

3147
02:51:18,240 --> 02:51:20,880
uh you're going to use um

3148
02:51:20,880 --> 02:51:22,399
dash capital r

3149
02:51:22,399 --> 02:51:25,279
and as i said the flags are reused but

3150
02:51:25,279 --> 02:51:27,279
you basically read the description after

3151
02:51:27,279 --> 02:51:28,640
their reverse

3152
02:51:28,640 --> 02:51:32,920
semicolon for those

3153
02:51:34,000 --> 02:51:36,080
so that was the first option and again

3154
02:51:36,080 --> 02:51:38,000
you set up port forwarding it's a single

3155
02:51:38,000 --> 02:51:39,920
port that you can for from your local

3156
02:51:39,920 --> 02:51:41,359
machine to

3157
02:51:41,359 --> 02:51:43,920
uh any machine that's accessible from

3158
02:51:43,920 --> 02:51:46,319
your target machine that you have x

3159
02:51:46,319 --> 02:51:48,160
active session on

3160
02:51:48,160 --> 02:51:51,200
uh and you can use both modules within

3161
02:51:51,200 --> 02:51:54,240
metasploit to to use that forwarding or

3162
02:51:54,240 --> 02:51:56,720
you can use uh any tools outside of

3163
02:51:56,720 --> 02:51:58,640
metasploit and connect to that local

3164
02:51:58,640 --> 02:52:00,960
port that you've opened that you formed

3165
02:52:00,960 --> 02:52:02,080
it

3166
02:52:02,080 --> 02:52:05,600
the other pivoting technique is traffic

3167
02:52:05,600 --> 02:52:08,960
routing so this allows you to send

3168
02:52:08,960 --> 02:52:12,080
uh all the traffic uh

3169
02:52:12,080 --> 02:52:15,600
used in in by the metalloid modules

3170
02:52:15,600 --> 02:52:17,439
through that connection so you don't

3171
02:52:17,439 --> 02:52:19,040
need to specify

3172
02:52:19,040 --> 02:52:21,200
uh one by one for that ports you

3173
02:52:21,200 --> 02:52:23,760
basically can use that target host in

3174
02:52:23,760 --> 02:52:26,080
which you have an active session

3175
02:52:26,080 --> 02:52:26,960
to

3176
02:52:26,960 --> 02:52:29,600
forward any traffic as if you were

3177
02:52:29,600 --> 02:52:32,319
connecting to their local network uh

3178
02:52:32,319 --> 02:52:33,840
directly

3179
02:52:33,840 --> 02:52:37,359
so the way you do this is um two ways

3180
02:52:37,359 --> 02:52:39,680
you can manually add routes

3181
02:52:39,680 --> 02:52:42,880
uh using the route command so route add

3182
02:52:42,880 --> 02:52:44,399
will add

3183
02:52:44,399 --> 02:52:46,479
that route you need to specify a subnet

3184
02:52:46,479 --> 02:52:48,640
and netmask and that's subnet and

3185
02:52:48,640 --> 02:52:51,200
netmask accessible from your target

3186
02:52:51,200 --> 02:52:53,920
machine and you specify the session id

3187
02:52:53,920 --> 02:52:56,240
and that's the session id through which

3188
02:52:56,240 --> 02:52:59,520
to try to forward that that traffic

3189
02:52:59,520 --> 02:53:01,760
uh so once you've added that you can

3190
02:53:01,760 --> 02:53:03,920
remove or you can do route flush if you

3191
02:53:03,920 --> 02:53:06,399
want to remove those routes flush will

3192
02:53:06,399 --> 02:53:09,439
remove all the routes and just you know

3193
02:53:09,439 --> 02:53:12,160
clean everything and you can do route

3194
02:53:12,160 --> 02:53:13,279
print

3195
02:53:13,279 --> 02:53:17,040
uh to display uh all the active uh

3196
02:53:17,040 --> 02:53:18,000
routes

3197
02:53:18,000 --> 02:53:20,319
uh so that subnet netmask you can

3198
02:53:20,319 --> 02:53:22,560
specify them directly or insider

3199
02:53:22,560 --> 02:53:24,800
notations you can do like ip address

3200
02:53:24,800 --> 02:53:27,520
slash 24 or whatever net mask there is

3201
02:53:27,520 --> 02:53:29,359
but you always need to specify the

3202
02:53:29,359 --> 02:53:31,279
session because that's through that

3203
02:53:31,279 --> 02:53:33,200
session the drop the traffic will be

3204
02:53:33,200 --> 02:53:34,319
routed

3205
02:53:34,319 --> 02:53:35,930
so that's the manual wave

3206
02:53:35,930 --> 02:53:37,200
[Music]

3207
02:53:37,200 --> 02:53:39,920
there's also a module called auto route

3208
02:53:39,920 --> 02:53:43,120
and that's basically what it does is it

3209
02:53:43,120 --> 02:53:45,600
explores it identifies the local

3210
02:53:45,600 --> 02:53:47,040
networks that

3211
02:53:47,040 --> 02:53:49,920
uh your target your active session is

3212
02:53:49,920 --> 02:53:52,240
connected to and automatically adds

3213
02:53:52,240 --> 02:53:55,840
routes to those to those networks

3214
02:53:55,840 --> 02:53:58,240
that works fine i know den doesn't like

3215
02:53:58,240 --> 02:53:59,920
that

3216
02:53:59,920 --> 02:54:03,359
he's had some issues with it previously

3217
02:54:03,359 --> 02:54:05,600
generally i try to use other route if

3218
02:54:05,600 --> 02:54:07,760
some things and then i would do a route

3219
02:54:07,760 --> 02:54:09,680
print if something's wrong i'll just

3220
02:54:09,680 --> 02:54:13,279
flush the routes and add them manually

3221
02:54:13,279 --> 02:54:14,720
yeah the issues that i've had with the

3222
02:54:14,720 --> 02:54:16,720
auto route is if you have a target that

3223
02:54:16,720 --> 02:54:18,880
has multiple interfaces and some of them

3224
02:54:18,880 --> 02:54:20,640
might share the same ip addresses that

3225
02:54:20,640 --> 02:54:22,319
you're using here or the same ranges

3226
02:54:22,319 --> 02:54:24,880
that you're using on other interpreters

3227
02:54:24,880 --> 02:54:26,399
you can get some conflicts and then all

3228
02:54:26,399 --> 02:54:27,600
of a sudden you're attacking the wrong

3229
02:54:27,600 --> 02:54:29,279
host when you're running an exploit or

3230
02:54:29,279 --> 02:54:30,720
something like that

3231
02:54:30,720 --> 02:54:31,600
so

3232
02:54:31,600 --> 02:54:33,120
maybe not so much of an option or so

3233
02:54:33,120 --> 02:54:35,359
much of an issue in ctfs but in real

3234
02:54:35,359 --> 02:54:38,240
world pem tests that can be a serious

3235
02:54:38,240 --> 02:54:40,640
problem

3236
02:54:42,240 --> 02:54:43,520
yep

3237
02:54:43,520 --> 02:54:46,160
um i think that's fair so

3238
02:54:46,160 --> 02:54:49,920
um again what routing does regardless of

3239
02:54:49,920 --> 02:54:52,560
how you add those routes is

3240
02:54:52,560 --> 02:54:55,200
it routes traffic from

3241
02:54:55,200 --> 02:54:58,080
metasploit modules through that active

3242
02:54:58,080 --> 02:55:00,720
session which means that at least by

3243
02:55:00,720 --> 02:55:03,760
default any tools outside of metasploit

3244
02:55:03,760 --> 02:55:05,520
are not going to be using that that

3245
02:55:05,520 --> 02:55:07,840
routing it's it's a metasploit concept

3246
02:55:07,840 --> 02:55:09,279
that's routing

3247
02:55:09,279 --> 02:55:11,120
um and so

3248
02:55:11,120 --> 02:55:12,960
whereas with port forwarding although

3249
02:55:12,960 --> 02:55:14,720
it's one single port but once you

3250
02:55:14,720 --> 02:55:16,880
establish that you can use tools outside

3251
02:55:16,880 --> 02:55:19,120
of metasploit to

3252
02:55:19,120 --> 02:55:22,960
take advantage of that port forwarding

3253
02:55:23,520 --> 02:55:24,399
um

3254
02:55:24,399 --> 02:55:25,760
now

3255
02:55:25,760 --> 02:55:27,520
there is a way to actually use

3256
02:55:27,520 --> 02:55:32,080
metasploit routing outside of metasploit

3257
02:55:32,080 --> 02:55:34,640
the trick is there is a module that

3258
02:55:34,640 --> 02:55:36,160
creates a sox

3259
02:55:36,160 --> 02:55:38,240
proxy that you can

3260
02:55:38,240 --> 02:55:40,560
run in metasploit

3261
02:55:40,560 --> 02:55:43,680
and once you do that you basically if if

3262
02:55:43,680 --> 02:55:46,080
you can tell outside tools to use that

3263
02:55:46,080 --> 02:55:48,640
socks proxy that sucks proxy

3264
02:55:48,640 --> 02:55:50,960
will for traffic through metasploit

3265
02:55:50,960 --> 02:55:52,960
using the routing that's defined in

3266
02:55:52,960 --> 02:55:54,720
metasploit so

3267
02:55:54,720 --> 02:55:56,880
the steps here would be

3268
02:55:56,880 --> 02:55:58,880
you have an active session you establish

3269
02:55:58,880 --> 02:56:02,000
routing with in in metasploit you run

3270
02:56:02,000 --> 02:56:05,359
socks proxy uh and usually you will run

3271
02:56:05,359 --> 02:56:08,080
it in background mode so you're not

3272
02:56:08,080 --> 02:56:10,560
stuck in that proxy thing

3273
02:56:10,560 --> 02:56:13,439
uh and then you go outside you configure

3274
02:56:13,439 --> 02:56:15,680
your tool either through proxy chains or

3275
02:56:15,680 --> 02:56:19,279
directly to use uh socks proxy and point

3276
02:56:19,279 --> 02:56:20,800
it to the um

3277
02:56:20,800 --> 02:56:22,479
your local ip address and the port

3278
02:56:22,479 --> 02:56:25,279
number that's uh that you specified or

3279
02:56:25,279 --> 02:56:26,960
that was default

3280
02:56:26,960 --> 02:56:29,279
uh and then those tools when they

3281
02:56:29,279 --> 02:56:32,800
connect to the sox proxy that traffic is

3282
02:56:32,800 --> 02:56:34,640
going to be routed according to the

3283
02:56:34,640 --> 02:56:37,040
routing defined within your

3284
02:56:37,040 --> 02:56:38,560
metasploit

3285
02:56:38,560 --> 02:56:40,800
session

3286
02:56:40,800 --> 02:56:41,600
so

3287
02:56:41,600 --> 02:56:44,000
once you run socks proxy i again i

3288
02:56:44,000 --> 02:56:46,640
highly recommend always setting uh for

3289
02:56:46,640 --> 02:56:48,800
port forwarding and the for socks proxy

3290
02:56:48,800 --> 02:56:50,399
to always setting

3291
02:56:50,399 --> 02:56:54,000
uh that host to listen to to your host

3292
02:56:54,000 --> 02:56:57,760
so that you're not exposing um

3293
02:56:57,760 --> 02:56:59,840
machines on the target network to other

3294
02:56:59,840 --> 02:57:00,880
machines

3295
02:57:00,880 --> 02:57:02,800
on on the network that you're connected

3296
02:57:02,800 --> 02:57:03,760
to

3297
02:57:03,760 --> 02:57:05,680
and again to reiterate on a real world

3298
02:57:05,680 --> 02:57:07,920
pen test if you don't do this that can

3299
02:57:07,920 --> 02:57:10,319
be a major violation you might even have

3300
02:57:10,319 --> 02:57:12,319
to report that to a client if you have

3301
02:57:12,319 --> 02:57:14,960
accidentally exposed a proxy into their

3302
02:57:14,960 --> 02:57:18,319
network to another network

3303
02:57:21,680 --> 02:57:23,680
all right

3304
02:57:23,680 --> 02:57:26,800
so with that we're gonna do lab five now

3305
02:57:26,800 --> 02:57:29,279
this lab is huge because we're gonna

3306
02:57:29,279 --> 02:57:32,479
pivot through the existing session and

3307
02:57:32,479 --> 02:57:34,080
find a different

3308
02:57:34,080 --> 02:57:36,000
uh well actually the finding part is

3309
02:57:36,000 --> 02:57:38,479
broken but we're giving you a addre

3310
02:57:38,479 --> 02:57:41,040
address of a different host

3311
02:57:41,040 --> 02:57:43,120
on the network that's accessible from

3312
02:57:43,120 --> 02:57:45,359
our existing target

3313
02:57:45,359 --> 02:57:49,040
uh we're gonna do um port scanning of

3314
02:57:49,040 --> 02:57:51,200
that host so that this is the ap address

3315
02:57:51,200 --> 02:57:54,000
that we're going to be targeting

3316
02:57:54,000 --> 02:57:56,800
uh we configure routing we support scan

3317
02:57:56,800 --> 02:57:59,600
this ap address through this routing

3318
02:57:59,600 --> 02:58:01,680
we identify the service we find the

3319
02:58:01,680 --> 02:58:03,279
version number of that service we

3320
02:58:03,279 --> 02:58:05,359
identify potential exploit we exploit

3321
02:58:05,359 --> 02:58:08,800
the new host so this first part is

3322
02:58:08,800 --> 02:58:11,359
getting an active session on a different

3323
02:58:11,359 --> 02:58:13,520
host that's only accessible from that

3324
02:58:13,520 --> 02:58:15,680
initial target that we already have an

3325
02:58:15,680 --> 02:58:19,200
active session on and then the second

3326
02:58:19,200 --> 02:58:21,279
part is escalating your privileges from

3327
02:58:21,279 --> 02:58:25,200
that second target to the root of of the

3328
02:58:25,200 --> 02:58:26,479
of the vm

3329
02:58:26,479 --> 02:58:28,880
uh then i'm thinking we're gonna do at

3330
02:58:28,880 --> 02:58:31,120
least 15 minutes for the first part and

3331
02:58:31,120 --> 02:58:32,560
then

3332
02:58:32,560 --> 02:58:33,680
do

3333
02:58:33,680 --> 02:58:36,080
the the kind of the pivoting walkthrough

3334
02:58:36,080 --> 02:58:38,000
and then do another 15 maybe even 20

3335
02:58:38,000 --> 02:58:41,040
minutes for prevest and then do the best

3336
02:58:41,040 --> 02:58:44,040
walkthrough

3337
02:58:46,319 --> 02:58:47,120
nope

3338
02:58:47,120 --> 02:58:49,840
other slides so

3339
02:58:49,840 --> 02:58:51,279
okay

3340
02:58:51,279 --> 02:58:52,399
so

3341
02:58:52,399 --> 02:58:55,920
um if you have questions ask them uh if

3342
02:58:55,920 --> 02:58:58,720
not this is lab five

3343
02:58:58,720 --> 02:59:00,800
so i'm gonna set a timer for 15 minutes

3344
02:59:00,800 --> 02:59:02,720
and we'll be back with uh with the

3345
02:59:02,720 --> 02:59:04,319
walkthrough

3346
02:59:04,319 --> 02:59:06,080
if you're stuck on any particular point

3347
02:59:06,080 --> 02:59:09,200
do ask in channel here we can give a few

3348
02:59:09,200 --> 02:59:10,880
pointers to get you forward if we need

3349
02:59:10,880 --> 02:59:12,399
to

3350
02:59:12,399 --> 02:59:15,399
yep

3351
02:59:34,560 --> 02:59:36,800
suppose we should point out that the uh

3352
02:59:36,800 --> 02:59:38,399
did you really point out that the ping

3353
02:59:38,399 --> 02:59:40,640
scanner ping sweep is

3354
02:59:40,640 --> 02:59:43,520
broken on there

3355
02:59:43,520 --> 02:59:45,120
no yeah so but

3356
02:59:45,120 --> 02:59:47,680
yeah so the second bullet point

3357
02:59:47,680 --> 02:59:50,720
um is broken so you won't be able to do

3358
02:59:50,720 --> 02:59:53,279
pink sweep um through the next active

3359
02:59:53,279 --> 02:59:54,640
session so we're giving you the ap

3360
02:59:54,640 --> 02:59:56,560
address of the other host

3361
02:59:56,560 --> 03:00:00,080
but um i don't know i i can i can show i

3362
03:00:00,080 --> 03:00:02,640
fixed it on my vm i can show how that

3363
03:00:02,640 --> 03:00:04,319
works as part of the walkthrough of the

3364
03:00:04,319 --> 03:00:06,800
first part

3365
03:00:45,120 --> 03:00:48,120
so

3366
03:00:58,880 --> 03:01:01,880
so

3367
03:02:40,050 --> 03:02:43,429
[Music]

3368
03:05:34,400 --> 03:05:37,619
[Music]

3369
03:05:39,760 --> 03:05:42,760
uh

3370
03:05:55,040 --> 03:05:58,040
um

3371
03:06:00,080 --> 03:06:01,439
okay guys so we're just gonna

3372
03:06:01,439 --> 03:06:03,439
demonstrate the route real quick here

3373
03:06:03,439 --> 03:06:04,960
just to make sure nobody's stuck on this

3374
03:06:04,960 --> 03:06:06,560
initial part

3375
03:06:06,560 --> 03:06:08,800
so we have our session again most people

3376
03:06:08,800 --> 03:06:11,679
should only have the one

3377
03:06:12,240 --> 03:06:13,439
but we know

3378
03:06:13,439 --> 03:06:16,479
we go into the session

3379
03:06:17,760 --> 03:06:21,200
that we have certain ip ranges in here

3380
03:06:21,200 --> 03:06:25,880
including this 172 1702

3381
03:06:25,920 --> 03:06:27,600
we want to do is make sure that we can

3382
03:06:27,600 --> 03:06:29,680
scan the rest of that ip range while

3383
03:06:29,680 --> 03:06:31,279
we're still outside of that because this

3384
03:06:31,279 --> 03:06:33,040
is an internal network obviously we

3385
03:06:33,040 --> 03:06:35,600
can't connect to it directly

3386
03:06:35,600 --> 03:06:37,200
so what we're going to do is we're going

3387
03:06:37,200 --> 03:06:38,960
to add our route

3388
03:06:38,960 --> 03:06:40,399
the 172

3389
03:06:40,399 --> 03:06:41,600
17

3390
03:06:41,600 --> 03:06:43,520
zero zero

3391
03:06:43,520 --> 03:06:45,359
slash 24

3392
03:06:45,359 --> 03:06:47,600
meaning that so long as the first three

3393
03:06:47,600 --> 03:06:49,760
digits here are the same

3394
03:06:49,760 --> 03:06:51,200
it will route through this and we're

3395
03:06:51,200 --> 03:06:54,640
going to route that into session one

3396
03:06:55,200 --> 03:06:56,720
once we've done that

3397
03:06:56,720 --> 03:06:59,840
we can use the port scan tcp

3398
03:06:59,840 --> 03:07:01,359
because remember

3399
03:07:01,359 --> 03:07:03,120
nmap isn't going to work through this it

3400
03:07:03,120 --> 03:07:06,160
doesn't go through the uh

3401
03:07:06,160 --> 03:07:08,640
through metasploits routing

3402
03:07:08,640 --> 03:07:11,439
so we're that's good point even db and

3403
03:07:11,439 --> 03:07:13,600
map doesn't work through routing because

3404
03:07:13,600 --> 03:07:16,000
it in the background it runs and map and

3405
03:07:16,000 --> 03:07:18,880
just imports the results afterwards

3406
03:07:18,880 --> 03:07:19,840
yeah

3407
03:07:19,840 --> 03:07:21,840
there are ways you can get nmap to go

3408
03:07:21,840 --> 03:07:24,479
through it but db and map never will it

3409
03:07:24,479 --> 03:07:25,920
just isn't going to work properly the

3410
03:07:25,920 --> 03:07:28,479
white matters flick setup

3411
03:07:28,479 --> 03:07:30,960
but we have our options here

3412
03:07:30,960 --> 03:07:33,519
we're going to do

3413
03:07:34,319 --> 03:07:36,640
we're going to set our hosts

3414
03:07:36,640 --> 03:07:38,479
for the one seven two

3415
03:07:38,479 --> 03:07:42,319
one seven zero zero slash 24 subnet

3416
03:07:42,319 --> 03:07:46,319
so this is the same one that we just

3417
03:07:46,640 --> 03:07:49,199
routed here

3418
03:07:51,279 --> 03:07:53,200
and we're going to set we can do the

3419
03:07:53,200 --> 03:07:55,200
first 10 000 ports but for that range

3420
03:07:55,200 --> 03:07:56,319
that's going to take a little while so

3421
03:07:56,319 --> 03:07:57,359
we're going to cheat a little bit and

3422
03:07:57,359 --> 03:07:58,880
look at some of the most common ones

3423
03:07:58,880 --> 03:08:01,840
we'll say we'll look at ssh

3424
03:08:01,840 --> 03:08:03,720
we'll look at http

3425
03:08:03,720 --> 03:08:05,439
https

3426
03:08:05,439 --> 03:08:08,640
maybe say our windows rpc

3427
03:08:08,640 --> 03:08:10,720
things that we're highly likely to find

3428
03:08:10,720 --> 03:08:11,920
there

3429
03:08:11,920 --> 03:08:15,040
maybe 8080 again 49009 like we found on

3430
03:08:15,040 --> 03:08:17,760
the first ones

3431
03:08:18,640 --> 03:08:21,840
and then we can run that

3432
03:08:27,520 --> 03:08:28,800
now it's going to take a moment or two

3433
03:08:28,800 --> 03:08:31,120
to come back here

3434
03:08:31,120 --> 03:08:32,319
i'm actually going to cancel this real

3435
03:08:32,319 --> 03:08:34,000
quick i'm going to change the r host to

3436
03:08:34,000 --> 03:08:35,240
172

3437
03:08:35,240 --> 03:08:37,680
1703 because i know that host is on the

3438
03:08:37,680 --> 03:08:39,600
network here

3439
03:08:39,600 --> 03:08:41,520
the reason i know it's there

3440
03:08:41,520 --> 03:08:42,800
again

3441
03:08:42,800 --> 03:08:44,399
ping ping sweep is what we would

3442
03:08:44,399 --> 03:08:45,600
normally use and i'll show that in a

3443
03:08:45,600 --> 03:08:46,880
second but unfortunately it's not

3444
03:08:46,880 --> 03:08:49,040
working right now but i know that this

3445
03:08:49,040 --> 03:08:50,640
is the host that we're looking for so we

3446
03:08:50,640 --> 03:08:54,039
can run this again

3447
03:09:02,560 --> 03:09:04,880
hmm

3448
03:09:15,279 --> 03:09:16,960
that's uh

3449
03:09:16,960 --> 03:09:19,759
less than ideal

3450
03:09:22,479 --> 03:09:24,080
probably should have tested this before

3451
03:09:24,080 --> 03:09:26,720
demoing it

3452
03:09:27,200 --> 03:09:28,560
oh you know what this is the same issue

3453
03:09:28,560 --> 03:09:31,279
i was having earlier

3454
03:09:31,279 --> 03:09:33,520
okay

3455
03:09:34,000 --> 03:09:36,479
new plan

3456
03:09:36,800 --> 03:09:39,278
so again

3457
03:09:39,600 --> 03:09:41,359
i have multiple sessions open i want to

3458
03:09:41,359 --> 03:09:42,560
demo something real quick i'm going to

3459
03:09:42,560 --> 03:09:44,640
flush the routing that i did earlier and

3460
03:09:44,640 --> 03:09:46,239
instead of routing it through session

3461
03:09:46,239 --> 03:09:48,880
one which is a java linux

3462
03:09:48,880 --> 03:09:50,080
interpreter

3463
03:09:50,080 --> 03:09:52,080
i'm gonna actually route it

3464
03:09:52,080 --> 03:09:55,680
through session five

3465
03:09:55,840 --> 03:09:59,920
which is a x86 linux native

3466
03:09:59,920 --> 03:10:02,479
interpreter

3467
03:10:06,880 --> 03:10:09,600
yeah okay so we're routed here

3468
03:10:09,600 --> 03:10:11,359
so i'm gonna run this again and my guess

3469
03:10:11,359 --> 03:10:13,040
is it's going to come back almost

3470
03:10:13,040 --> 03:10:15,520
immediately properly

3471
03:10:15,520 --> 03:10:17,840
so the java interpreter doesn't always

3472
03:10:17,840 --> 03:10:20,080
have or it doesn't always work properly

3473
03:10:20,080 --> 03:10:22,239
if you can ever if you can migrate to a

3474
03:10:22,239 --> 03:10:24,720
native one it works much better i'm

3475
03:10:24,720 --> 03:10:26,239
going to demo that for you real quick

3476
03:10:26,239 --> 03:10:28,000
here

3477
03:10:28,000 --> 03:10:31,920
so open up a different window

3478
03:10:36,000 --> 03:10:38,560
by the way it's weird but

3479
03:10:38,560 --> 03:10:41,359
it worked fine for me through the jaguar

3480
03:10:41,359 --> 03:10:43,200
but i guess

3481
03:10:43,200 --> 03:10:44,640
yeah it works for me

3482
03:10:44,640 --> 03:10:46,239
it worked for me at other times but i

3483
03:10:46,239 --> 03:10:48,000
was having routing issues on this one so

3484
03:10:48,000 --> 03:10:49,439
if you are having routing issues you

3485
03:10:49,439 --> 03:10:51,359
need to follow this

3486
03:10:51,359 --> 03:10:52,560
so we're gonna

3487
03:10:52,560 --> 03:10:55,600
use msf msf venom

3488
03:10:55,600 --> 03:10:57,760
i'm going to set the payload to a linux

3489
03:10:57,760 --> 03:10:59,760
interpreter

3490
03:10:59,760 --> 03:11:02,800
reverse tcp

3491
03:11:02,960 --> 03:11:06,080
we're going to set the lhost to our

3492
03:11:06,080 --> 03:11:09,359
cali computer which in my case is 10 0 2

3493
03:11:09,359 --> 03:11:10,560
1 5.

3494
03:11:10,560 --> 03:11:14,720
let's set the l port to 4 4 4 4.

3495
03:11:17,120 --> 03:11:18,720
we're going to set the

3496
03:11:18,720 --> 03:11:22,199
payload type

3497
03:11:22,720 --> 03:11:24,640
i'm gonna look on the format

3498
03:11:24,640 --> 03:11:28,239
the dash f to an elf

3499
03:11:28,479 --> 03:11:31,840
and i'm just gonna call it met

3500
03:11:32,000 --> 03:11:33,520
what this is gonna do is generate a

3501
03:11:33,520 --> 03:11:36,160
binary a linux binary that we can upload

3502
03:11:36,160 --> 03:11:37,439
to the target

3503
03:11:37,439 --> 03:11:39,600
and it works even better if i tell it a

3504
03:11:39,600 --> 03:11:43,200
actual payload name

3505
03:11:43,200 --> 03:11:45,840
so linux needs to have the x86 in there

3506
03:11:45,840 --> 03:11:47,840
for the proper uh

3507
03:11:47,840 --> 03:11:51,560
for the full name of the payload

3508
03:11:56,239 --> 03:12:00,399
so if i take a look at met real quick

3509
03:12:00,720 --> 03:12:05,040
i've got a 207 byte file that is a fully

3510
03:12:05,040 --> 03:12:07,200
executable linux

3511
03:12:07,200 --> 03:12:09,279
fully

3512
03:12:09,279 --> 03:12:11,680
fully working our fully executable linux

3513
03:12:11,680 --> 03:12:13,520
binary so we can upload this and run it

3514
03:12:13,520 --> 03:12:16,080
on a remote host

3515
03:12:16,080 --> 03:12:17,359
so now that we have this i'm going to

3516
03:12:17,359 --> 03:12:19,680
copy this command into

3517
03:12:19,680 --> 03:12:21,279
discord chat real quick here just so

3518
03:12:21,279 --> 03:12:24,160
everyone can see it easy

3519
03:12:26,160 --> 03:12:28,000
i'm just going to go back into

3520
03:12:28,000 --> 03:12:30,560
sorry i was just going to say

3521
03:12:30,560 --> 03:12:32,319
yeah just making sure everyone's strong

3522
03:12:32,319 --> 03:12:33,840
page just make sure that you change that

3523
03:12:33,840 --> 03:12:36,720
l host to whatever it needs to be

3524
03:12:36,720 --> 03:12:37,920
and that was the other problem i was

3525
03:12:37,920 --> 03:12:39,520
having with the auto routing is it kills

3526
03:12:39,520 --> 03:12:42,960
the interpreter session so

3527
03:12:44,160 --> 03:12:48,880
who knows oh just did

3528
03:12:50,640 --> 03:12:54,080
i did too i'm sorry

3529
03:12:54,399 --> 03:12:58,000
nobody saw that

3530
03:12:58,160 --> 03:13:02,399
nobody saw that little typo twice

3531
03:13:05,120 --> 03:13:06,880
so i'm gonna go back into my interpreter

3532
03:13:06,880 --> 03:13:07,760
now

3533
03:13:07,760 --> 03:13:10,479
and i'm gonna go to the exploit multi

3534
03:13:10,479 --> 03:13:12,640
handler

3535
03:13:12,640 --> 03:13:13,920
this is what we can use to catch

3536
03:13:13,920 --> 03:13:15,439
meterpreter sessions that are connecting

3537
03:13:15,439 --> 03:13:17,439
back to us

3538
03:13:17,439 --> 03:13:20,000
so again we take a look at the options

3539
03:13:20,000 --> 03:13:21,600
right now we can see that the payload is

3540
03:13:21,600 --> 03:13:24,640
set to generic shell reverse tcp

3541
03:13:24,640 --> 03:13:26,319
we want to make sure that it matches the

3542
03:13:26,319 --> 03:13:28,399
payload that we've set

3543
03:13:28,399 --> 03:13:30,800
which is linux x86 from interpreter

3544
03:13:30,800 --> 03:13:33,120
reverse tcp

3545
03:13:33,120 --> 03:13:36,160
so we'll set the payload

3546
03:13:37,200 --> 03:13:42,840
to linux x86 interpreter reverse tcp

3547
03:13:45,279 --> 03:13:47,520
we're going to set the lhost which is a

3548
03:13:47,520 --> 03:13:50,160
10 0 2 1 5.

3549
03:13:50,160 --> 03:13:51,760
now model split will typically figure

3550
03:13:51,760 --> 03:13:54,000
this one out by itself but just to make

3551
03:13:54,000 --> 03:13:55,120
it a little bit easier on ourselves

3552
03:13:55,120 --> 03:13:57,840
we're going to make sure it's there

3553
03:13:58,720 --> 03:14:01,200
and we'll notice that we also set the l

3554
03:14:01,200 --> 03:14:04,479
port to 444 already so that

3555
03:14:04,479 --> 03:14:07,200
is already correct

3556
03:14:07,200 --> 03:14:08,720
so

3557
03:14:08,720 --> 03:14:09,920
i'm going to run this but i'm going to

3558
03:14:09,920 --> 03:14:11,920
put it in the background with the dash j

3559
03:14:11,920 --> 03:14:13,520
at the end there

3560
03:14:13,520 --> 03:14:15,279
so that way the exploit or the handler

3561
03:14:15,279 --> 03:14:16,560
is going to run in the background and we

3562
03:14:16,560 --> 03:14:18,880
can keep doing other stuff in

3563
03:14:18,880 --> 03:14:21,438
metasploit

3564
03:14:22,640 --> 03:14:24,880
so we're going to go back into our

3565
03:14:24,880 --> 03:14:26,239
sessions here

3566
03:14:26,239 --> 03:14:28,160
we're going to choose that

3567
03:14:28,160 --> 03:14:30,239
java session that i have

3568
03:14:30,239 --> 03:14:32,880
number four

3569
03:14:36,720 --> 03:14:38,080
and we're going to check the current

3570
03:14:38,080 --> 03:14:40,560
director in that's fine

3571
03:14:40,560 --> 03:14:42,800
what i'm going to do is upload

3572
03:14:42,800 --> 03:14:44,800
from my home directory

3573
03:14:44,800 --> 03:14:47,279
the met file that i created with msf

3574
03:14:47,279 --> 03:14:48,399
venom

3575
03:14:48,399 --> 03:14:49,920
you can see here that's where i am right

3576
03:14:49,920 --> 03:14:52,920
now

3577
03:14:58,000 --> 03:15:01,120
this is the file i created

3578
03:15:01,359 --> 03:15:04,720
so i'm going to upload map

3579
03:15:05,600 --> 03:15:08,640
and change one work in here no

3580
03:15:08,640 --> 03:15:11,760
so i got to go into a shell session now

3581
03:15:11,760 --> 03:15:15,040
ignore the change mod

3582
03:15:17,120 --> 03:15:18,800
and the shell should take a moment here

3583
03:15:18,800 --> 03:15:21,840
to come up there we go

3584
03:15:22,880 --> 03:15:24,800
so

3585
03:15:24,800 --> 03:15:26,479
you can see the folder i'm in you can

3586
03:15:26,479 --> 03:15:28,239
see the met

3587
03:15:28,239 --> 03:15:30,720
and we can see that

3588
03:15:30,720 --> 03:15:35,000
met is not currently executable

3589
03:15:35,120 --> 03:15:37,279
so we're going to change mod that

3590
03:15:37,279 --> 03:15:40,239
make it executable

3591
03:15:44,239 --> 03:15:46,319
and if we look again at that now it's

3592
03:15:46,319 --> 03:15:48,630
executable we can start up met

3593
03:15:48,630 --> 03:15:50,640
[Music]

3594
03:15:50,640 --> 03:15:52,080
and we can see we immediately got a

3595
03:15:52,080 --> 03:15:53,680
connection back we're sending the

3596
03:15:53,680 --> 03:15:56,160
interpreter to the next or two

3597
03:15:56,160 --> 03:15:57,439
met

3598
03:15:57,439 --> 03:15:58,960
and just a moment here it should say

3599
03:15:58,960 --> 03:16:01,359
that we have a new session created

3600
03:16:01,359 --> 03:16:02,880
there we go

3601
03:16:02,880 --> 03:16:04,960
now this is very important you want to

3602
03:16:04,960 --> 03:16:07,359
do a control z here

3603
03:16:07,359 --> 03:16:08,880
because this interpreter has to keep

3604
03:16:08,880 --> 03:16:11,120
running or we lose our shell or we lose

3605
03:16:11,120 --> 03:16:12,399
our interpreter

3606
03:16:12,399 --> 03:16:14,640
so ctrl z

3607
03:16:14,640 --> 03:16:18,160
background channel two yes

3608
03:16:18,160 --> 03:16:20,640
and again we do bg to get back to

3609
03:16:20,640 --> 03:16:23,200
interpreter metasploit itself

3610
03:16:23,200 --> 03:16:25,760
and if we check our sessions

3611
03:16:25,760 --> 03:16:28,160
now we have a proper native running

3612
03:16:28,160 --> 03:16:31,160
interpreter

3613
03:16:31,760 --> 03:16:32,960
now i know that was a lot to throw at

3614
03:16:32,960 --> 03:16:34,399
you really quick but hopefully that

3615
03:16:34,399 --> 03:16:36,000
helps anyone else that was having issues

3616
03:16:36,000 --> 03:16:38,640
with the routing

3617
03:16:38,880 --> 03:16:42,160
and again we can flush out the route

3618
03:16:42,160 --> 03:16:47,120
and i'll route add 172 1700

3619
03:16:47,120 --> 03:16:49,439
24 and we'll add that to session five

3620
03:16:49,439 --> 03:16:51,680
again

3621
03:16:57,760 --> 03:16:59,600
interpreter

3622
03:16:59,600 --> 03:17:01,840
why

3623
03:17:06,880 --> 03:17:10,080
oh sorry

3624
03:17:10,720 --> 03:17:13,039
delete

3625
03:17:16,720 --> 03:17:18,560
no it just wanted me to do it explicitly

3626
03:17:18,560 --> 03:17:20,880
apparently

3627
03:17:20,880 --> 03:17:22,800
there we go oh flushed in the park

3628
03:17:22,800 --> 03:17:24,479
interesting no flush did not work for

3629
03:17:24,479 --> 03:17:26,800
some reason so if you need to manually

3630
03:17:26,800 --> 03:17:29,439
delete it do that

3631
03:17:29,439 --> 03:17:31,040
but now it's working properly we're not

3632
03:17:31,040 --> 03:17:33,279
getting any error messages

3633
03:17:33,279 --> 03:17:35,120
this

3634
03:17:35,120 --> 03:17:36,720
not entirely certain what happened there

3635
03:17:36,720 --> 03:17:40,679
and why that came up but

3636
03:17:42,800 --> 03:17:44,160
again i know that was a lot to throw at

3637
03:17:44,160 --> 03:17:45,760
you but if that's

3638
03:17:45,760 --> 03:17:47,040
if everyone

3639
03:17:47,040 --> 03:17:48,239
if anyone has any problems with that

3640
03:17:48,239 --> 03:17:49,760
just let us know

3641
03:17:49,760 --> 03:17:51,600
and if routing worked fine with for you

3642
03:17:51,600 --> 03:17:52,960
through the java interpreter you can

3643
03:17:52,960 --> 03:17:55,359
ignore everything i just said

3644
03:17:55,359 --> 03:17:57,359
yeah so the routing through java meter

3645
03:17:57,359 --> 03:17:58,880
worked fine for me

3646
03:17:58,880 --> 03:18:01,920
that's the first thing you should check

3647
03:18:01,920 --> 03:18:04,720
try the route add or

3648
03:18:04,720 --> 03:18:07,279
try the order out if you want

3649
03:18:07,279 --> 03:18:08,560
both should work

3650
03:18:08,560 --> 03:18:11,359
and if not then

3651
03:18:11,359 --> 03:18:13,680
the msf venom

3652
03:18:13,680 --> 03:18:16,319
is still there

3653
03:18:19,040 --> 03:18:20,160
okay

3654
03:18:20,160 --> 03:18:22,640
we're gonna take another 10 minutes and

3655
03:18:22,640 --> 03:18:22,970
then

3656
03:18:22,970 --> 03:18:25,040
[Music]

3657
03:18:25,040 --> 03:18:26,640
walk through

3658
03:18:26,640 --> 03:18:27,600
the

3659
03:18:27,600 --> 03:18:31,080
exploit part

3660
03:19:40,399 --> 03:19:43,399
so

3661
03:19:59,760 --> 03:20:02,760
uh

3662
03:20:22,430 --> 03:20:25,530
[Music]

3663
03:21:09,700 --> 03:21:12,829
[Music]

3664
03:21:44,160 --> 03:21:47,160
so

3665
03:23:04,340 --> 03:23:07,469
[Music]

3666
03:23:28,820 --> 03:23:31,940
[Music]

3667
03:23:42,850 --> 03:23:45,979
[Music]

3668
03:24:21,439 --> 03:24:24,439
then

3669
03:25:30,230 --> 03:25:33,289
[Music]

3670
03:25:48,880 --> 03:25:52,439
[Music]

3671
03:26:18,160 --> 03:26:21,219
[Music]

3672
03:27:37,430 --> 03:27:40,549
[Music]

3673
03:27:43,520 --> 03:27:44,960
all right guys we're going to try going

3674
03:27:44,960 --> 03:27:47,919
through the exploit now

3675
03:27:49,040 --> 03:27:51,279
now as most of you have probably found

3676
03:27:51,279 --> 03:27:53,760
by this point there is

3677
03:27:53,760 --> 03:27:57,920
a http server open on 17

3678
03:27:57,920 --> 03:28:00,920
172.17.0.3

3679
03:28:10,000 --> 03:28:11,200
i'm just going to show that real quick

3680
03:28:11,200 --> 03:28:14,560
172 1703

3681
03:28:14,560 --> 03:28:17,680
ports on 80.

3682
03:28:18,319 --> 03:28:20,000
and again i've already done my routing

3683
03:28:20,000 --> 03:28:22,239
so i am routing through correctly to

3684
03:28:22,239 --> 03:28:24,640
this target now

3685
03:28:24,640 --> 03:28:27,040
and there we go so we have port 80 open

3686
03:28:27,040 --> 03:28:30,439
on 1703

3687
03:28:32,960 --> 03:28:35,040
so what i can also do instead of using

3688
03:28:35,040 --> 03:28:36,560
nmap because obviously we're not able to

3689
03:28:36,560 --> 03:28:38,880
route right now but i can use htv

3690
03:28:38,880 --> 03:28:41,199
version

3691
03:28:44,399 --> 03:28:46,160
i'll set the r hosts and i already set

3692
03:28:46,160 --> 03:28:48,239
the r hosts

3693
03:28:48,239 --> 03:28:53,200
to 172 1703 remote port is eighty

3694
03:28:53,200 --> 03:28:55,279
i can run that

3695
03:28:55,279 --> 03:28:56,800
it's gonna take a moment or two to come

3696
03:28:56,800 --> 03:28:58,880
back here

3697
03:28:58,880 --> 03:29:00,399
but once it does we should see what

3698
03:29:00,399 --> 03:29:01,760
version what

3699
03:29:01,760 --> 03:29:03,040
uh

3700
03:29:03,040 --> 03:29:07,840
what type of uh server is being run here

3701
03:29:11,279 --> 03:29:12,560
there we go

3702
03:29:12,560 --> 03:29:17,279
so we have an apache version 2.4.49

3703
03:29:17,279 --> 03:29:20,000
now anybody who's one paying attention

3704
03:29:20,000 --> 03:29:21,600
to the news in the last couple months

3705
03:29:21,600 --> 03:29:22,960
here

3706
03:29:22,960 --> 03:29:24,720
will probably recognize that version

3707
03:29:24,720 --> 03:29:26,560
number

3708
03:29:26,560 --> 03:29:28,960
and if you look online

3709
03:29:28,960 --> 03:29:32,720
you'll find results for cve

3710
03:29:33,880 --> 03:29:36,960
cbe2021 41773

3711
03:29:36,960 --> 03:29:38,880
and there's actually a complimentary one

3712
03:29:38,880 --> 03:29:40,160
as well

3713
03:29:40,160 --> 03:29:44,239
but if we do just a search for that cbe

3714
03:29:44,319 --> 03:29:46,000
we can see that there are actually two

3715
03:29:46,000 --> 03:29:50,160
modules that are applicable to the cve

3716
03:29:52,239 --> 03:29:53,359
we're going to go straight to the

3717
03:29:53,359 --> 03:29:54,720
exploit on this one because i know it

3718
03:29:54,720 --> 03:29:56,399
does actually work

3719
03:29:56,399 --> 03:29:59,439
so we're going to use zero

3720
03:29:59,600 --> 03:30:01,359
this is a problem in apache that they

3721
03:30:01,359 --> 03:30:03,200
found in two particular versions that

3722
03:30:03,200 --> 03:30:04,800
were released

3723
03:30:04,800 --> 03:30:07,520
and it actually allows you to run a

3724
03:30:07,520 --> 03:30:09,520
or to gain a shell

3725
03:30:09,520 --> 03:30:11,680
just by connecting to the http server

3726
03:30:11,680 --> 03:30:13,200
you don't have to have authentication

3727
03:30:13,200 --> 03:30:14,800
you don't have to have anything

3728
03:30:14,800 --> 03:30:16,560
as long as you can connect to it you

3729
03:30:16,560 --> 03:30:18,720
have an access to this there's a really

3730
03:30:18,720 --> 03:30:20,239
big problem so anyone who's running this

3731
03:30:20,239 --> 03:30:21,760
version you should really go out there

3732
03:30:21,760 --> 03:30:25,120
and update pretty quickly

3733
03:30:25,520 --> 03:30:28,479
take a look at the options

3734
03:30:29,439 --> 03:30:31,920
we've got our normal stuff here we got

3735
03:30:31,920 --> 03:30:33,840
two different possible cbes that we're

3736
03:30:33,840 --> 03:30:35,040
going to use we're going to leave it on

3737
03:30:35,040 --> 03:30:37,040
the default for now

3738
03:30:37,040 --> 03:30:39,760
but you have cve 2021

3739
03:30:39,760 --> 03:30:41,680
41773

3740
03:30:41,680 --> 03:30:45,439
and 42013

3741
03:30:45,439 --> 03:30:47,760
we're going to leave it on the 42013 for

3742
03:30:47,760 --> 03:30:50,000
now

3743
03:30:50,479 --> 03:30:53,279
so we're going to set our hosts

3744
03:30:53,279 --> 03:30:56,439
to 172.17.0.3.

3745
03:30:58,000 --> 03:30:59,840
we're going to set our remote port to

3746
03:30:59,840 --> 03:31:02,000
port 80

3747
03:31:02,000 --> 03:31:03,920
and you can see at the moment that ssl

3748
03:31:03,920 --> 03:31:06,160
is actually enabled we need to disable

3749
03:31:06,160 --> 03:31:07,840
that because this is a non-encrypted

3750
03:31:07,840 --> 03:31:10,080
port

3751
03:31:11,760 --> 03:31:13,680
now the payload that i have set is linux

3752
03:31:13,680 --> 03:31:16,720
x64 interpreter reverse tcp

3753
03:31:16,720 --> 03:31:18,640
that should work just fine but you could

3754
03:31:18,640 --> 03:31:20,800
probably set it to x86 if you're worried

3755
03:31:20,800 --> 03:31:23,199
about that

3756
03:31:24,319 --> 03:31:26,000
we're going to set the l host and again

3757
03:31:26,000 --> 03:31:27,279
this is going to change depending on

3758
03:31:27,279 --> 03:31:29,680
what your system is but on mine it is 10

3759
03:31:29,680 --> 03:31:32,880
0 215 and this is the ip address of your

3760
03:31:32,880 --> 03:31:36,720
cali install not the target

3761
03:31:39,040 --> 03:31:40,479
so that should be all configured

3762
03:31:40,479 --> 03:31:42,880
properly now

3763
03:31:42,880 --> 03:31:44,800
uh i think there is one thing that we're

3764
03:31:44,800 --> 03:31:47,840
missing though isn't there

3765
03:31:49,439 --> 03:31:52,560
no not sure that should be fine

3766
03:31:52,840 --> 03:31:56,160
yeah sometimes if you have a cgi i think

3767
03:31:56,160 --> 03:31:57,520
you do you have to have a cgi for this

3768
03:31:57,520 --> 03:31:59,439
one or does it just have to be

3769
03:31:59,439 --> 03:32:04,080
for remote for remote code execution

3770
03:32:04,080 --> 03:32:06,479
it the cgi directory has to be

3771
03:32:06,479 --> 03:32:08,160
configured you don't need any scripts in

3772
03:32:08,160 --> 03:32:09,279
there

3773
03:32:09,279 --> 03:32:10,319
okay

3774
03:32:10,319 --> 03:32:12,479
and this is a default on a lot of

3775
03:32:12,479 --> 03:32:14,080
installations out there which is why

3776
03:32:14,080 --> 03:32:15,600
this was such a big problem when it came

3777
03:32:15,600 --> 03:32:16,960
out

3778
03:32:16,960 --> 03:32:18,479
but we've got all of our settings here

3779
03:32:18,479 --> 03:32:22,119
we're going to run this

3780
03:32:22,239 --> 03:32:23,920
it's running the check i didn't need to

3781
03:32:23,920 --> 03:32:24,960
run the check probably should have

3782
03:32:24,960 --> 03:32:26,640
disabled that but it

3783
03:32:26,640 --> 03:32:28,319
tells us that we are indeed vulnerable

3784
03:32:28,319 --> 03:32:30,640
to that

3785
03:32:32,239 --> 03:32:34,160
so we're just waiting for the next part

3786
03:32:34,160 --> 03:32:37,479
of this exploit

3787
03:32:37,680 --> 03:32:40,720
sending the payload

3788
03:32:41,040 --> 03:32:43,359
and we've got a stage going through now

3789
03:32:43,359 --> 03:32:45,279
that's good

3790
03:32:45,279 --> 03:32:46,960
and in just a moment it should give us a

3791
03:32:46,960 --> 03:32:50,278
new session

3792
03:32:51,279 --> 03:32:54,000
there we go

3793
03:32:58,960 --> 03:33:00,319
just waiting for another interpreter

3794
03:33:00,319 --> 03:33:02,560
prompt there we go

3795
03:33:02,560 --> 03:33:03,760
you'll notice that it did tell us that

3796
03:33:03,760 --> 03:33:05,760
we may have a file left behind on the

3797
03:33:05,760 --> 03:33:07,680
operating system or on the target system

3798
03:33:07,680 --> 03:33:09,439
rather

3799
03:33:09,439 --> 03:33:10,800
and if we look going here we can

3800
03:33:10,800 --> 03:33:12,560
actually look at that and yes we did

3801
03:33:12,560 --> 03:33:14,560
actually leave a file behind here

3802
03:33:14,560 --> 03:33:15,920
and that just happens to be how this

3803
03:33:15,920 --> 03:33:20,080
particular exploit works in metasploit

3804
03:33:20,080 --> 03:33:23,040
so we could remove that if we want to be

3805
03:33:23,040 --> 03:33:24,800
more stealthy with what we're doing but

3806
03:33:24,800 --> 03:33:27,279
we've already touched the desk

3807
03:33:27,279 --> 03:33:28,239
alright

3808
03:33:28,239 --> 03:33:32,039
so now we can check again

3809
03:33:33,439 --> 03:33:35,920
we are indeed on a new system it's one

3810
03:33:35,920 --> 03:33:40,080
seven two one seven zero three

3811
03:33:40,640 --> 03:33:42,239
we go to the background we check our

3812
03:33:42,239 --> 03:33:44,399
sessions

3813
03:33:44,399 --> 03:33:46,800
we can see we are actually root on this

3814
03:33:46,800 --> 03:33:48,960
new machine

3815
03:33:48,960 --> 03:33:51,358
however

3816
03:33:51,760 --> 03:33:54,800
if we check container

3817
03:33:54,800 --> 03:33:58,278
container check

3818
03:34:00,720 --> 03:34:02,399
what is the payload for that one

3819
03:34:02,399 --> 03:34:04,399
you can't figure out the name

3820
03:34:04,399 --> 03:34:06,160
container space check

3821
03:34:06,160 --> 03:34:07,840
should find it

3822
03:34:07,840 --> 03:34:13,160
or search container space chain

3823
03:34:15,680 --> 03:34:17,200
check container

3824
03:34:17,200 --> 03:34:18,160
oh

3825
03:34:18,160 --> 03:34:19,359
yeah

3826
03:34:19,359 --> 03:34:21,920
there we go

3827
03:34:23,920 --> 03:34:27,960
so we'll use zero here

3828
03:34:28,560 --> 03:34:30,720
show our options just needs the session

3829
03:34:30,720 --> 03:34:34,080
the session number is seven

3830
03:34:36,479 --> 03:34:37,920
if we run this

3831
03:34:37,920 --> 03:34:41,600
we appear to be in a docker container

3832
03:34:41,600 --> 03:34:43,200
so we're going to give you a little bit

3833
03:34:43,200 --> 03:34:46,880
of time to figure out the next step here

3834
03:34:47,920 --> 03:34:51,760
if you look on the slide i believe

3835
03:34:51,760 --> 03:34:53,920
you get a little bit of hint there yeah

3836
03:34:53,920 --> 03:34:55,840
there's a hint at the bottom of the lab

3837
03:34:55,840 --> 03:34:58,640
5 slide in korean you can go back to the

3838
03:34:58,640 --> 03:35:01,199
slides now

3839
03:35:06,720 --> 03:35:08,399
and on the bottom there it's talking

3840
03:35:08,399 --> 03:35:10,160
about file system mounts which is a

3841
03:35:10,160 --> 03:35:13,200
really really good hint and also do not

3842
03:35:13,200 --> 03:35:15,600
bother trying any kind of curl exploits

3843
03:35:15,600 --> 03:35:19,200
or anything like that it will not work

3844
03:35:21,840 --> 03:35:24,319
all right so we'll pause for 10 minutes

3845
03:35:24,319 --> 03:35:26,239
and come back with the rest of the

3846
03:35:26,239 --> 03:35:27,680
walkthrough

3847
03:35:27,680 --> 03:35:29,040
don't forget to look for that flag on

3848
03:35:29,040 --> 03:35:32,439
the way as well

3849
03:35:51,570 --> 03:35:58,840
[Music]

3850
03:35:59,760 --> 03:36:02,760
so

3851
03:45:43,439 --> 03:45:45,359
i see people still struggling with the

3852
03:45:45,359 --> 03:45:47,439
prevask it's a tricky one don't worry

3853
03:45:47,439 --> 03:45:49,600
we're gonna do a walkthrough for that as

3854
03:45:49,600 --> 03:45:51,840
well uh you don't

3855
03:45:51,840 --> 03:45:53,439
just nest floyd is not enough for this

3856
03:45:53,439 --> 03:45:55,040
one so

3857
03:45:55,040 --> 03:45:56,880
but um

3858
03:45:56,880 --> 03:45:58,880
if there's any questions about any

3859
03:45:58,880 --> 03:46:01,279
previous steps we're still in discord

3860
03:46:01,279 --> 03:46:03,840
ask them

3861
03:46:04,399 --> 03:46:06,160
all right guys

3862
03:46:06,160 --> 03:46:07,520
we're gonna go through the final bit

3863
03:46:07,520 --> 03:46:09,760
here

3864
03:46:09,760 --> 03:46:11,520
we're almost out of time so i'm gonna be

3865
03:46:11,520 --> 03:46:15,600
a little quick on this one not too quick

3866
03:46:15,600 --> 03:46:17,840
so we have our sessions up here

3867
03:46:17,840 --> 03:46:22,239
and again we have our root session

3868
03:46:22,239 --> 03:46:24,640
in a docker container on the dot zero

3869
03:46:24,640 --> 03:46:25,840
three or

3870
03:46:25,840 --> 03:46:28,319
0.3 uh

3871
03:46:28,319 --> 03:46:30,800
container

3872
03:46:30,800 --> 03:46:32,319
and if we

3873
03:46:32,319 --> 03:46:33,760
do we have show mount

3874
03:46:33,760 --> 03:46:36,560
i think show mount is you no

3875
03:46:36,560 --> 03:46:38,399
not support okay never mind uh if we go

3876
03:46:38,399 --> 03:46:41,119
into a shell here

3877
03:46:41,760 --> 03:46:45,439
this is a normal linux shell

3878
03:46:46,720 --> 03:46:48,239
no i guess we have a little extra time

3879
03:46:48,239 --> 03:46:50,000
on this one

3880
03:46:50,000 --> 03:46:52,239
so

3881
03:46:52,640 --> 03:46:54,080
if we go in here and we look at our

3882
03:46:54,080 --> 03:46:54,960
mounts

3883
03:46:54,960 --> 03:46:56,880
our mount command you can see there's a

3884
03:46:56,880 --> 03:46:58,720
number of different file systems loaded

3885
03:46:58,720 --> 03:47:00,319
but the one that we're really interested

3886
03:47:00,319 --> 03:47:04,319
in here is this one

3887
03:47:04,319 --> 03:47:05,680
we've got a run

3888
03:47:05,680 --> 03:47:08,160
docker dot sock

3889
03:47:08,160 --> 03:47:09,840
now dot sock if you're not familiar with

3890
03:47:09,840 --> 03:47:13,359
the linux is often used as a suffix for

3891
03:47:13,359 --> 03:47:15,279
unix sockets and they're kind of like

3892
03:47:15,279 --> 03:47:17,920
normal tcp sockets except they only work

3893
03:47:17,920 --> 03:47:20,640
on the same system that you're on

3894
03:47:20,640 --> 03:47:22,080
so you can kind of treat them if you're

3895
03:47:22,080 --> 03:47:23,279
familiar with windows they're kind of

3896
03:47:23,279 --> 03:47:25,439
like named pipes

3897
03:47:25,439 --> 03:47:28,640
except they only work on a local unix

3898
03:47:28,640 --> 03:47:29,920
now

3899
03:47:29,920 --> 03:47:31,520
the docker sock

3900
03:47:31,520 --> 03:47:33,040
that's kind of an indicator that we

3901
03:47:33,040 --> 03:47:34,960
might have access to the docker daemon

3902
03:47:34,960 --> 03:47:37,279
itself which we really should not within

3903
03:47:37,279 --> 03:47:41,359
a container that's a huge security risk

3904
03:47:41,920 --> 03:47:43,520
and if we exit out of the shell real

3905
03:47:43,520 --> 03:47:45,520
quick

3906
03:47:45,520 --> 03:47:46,720
we can look

3907
03:47:46,720 --> 03:47:48,080
for docker

3908
03:47:48,080 --> 03:47:50,560
socket

3909
03:47:51,840 --> 03:47:53,439
and we can see that we actually have an

3910
03:47:53,439 --> 03:47:55,840
exploit here

3911
03:47:55,840 --> 03:47:57,359
but

3912
03:47:57,359 --> 03:47:59,359
it looks like it's only going to work

3913
03:47:59,359 --> 03:48:02,160
with tcp

3914
03:48:05,439 --> 03:48:08,000
so utilizing docker via unprotected tcp

3915
03:48:08,000 --> 03:48:10,479
socket

3916
03:48:11,120 --> 03:48:12,880
so what we have to do is find some way

3917
03:48:12,880 --> 03:48:15,920
to connect this tcp to the unix socket

3918
03:48:15,920 --> 03:48:20,239
that's in on this target here

3919
03:48:23,439 --> 03:48:25,120
so we're going to do is go interactive

3920
03:48:25,120 --> 03:48:26,640
on 7 again

3921
03:48:26,640 --> 03:48:30,080
we're going to go back into a shell

3922
03:48:30,479 --> 03:48:32,720
and there's a little tool called socat

3923
03:48:32,720 --> 03:48:35,720
socat

3924
03:48:38,080 --> 03:48:40,000
and again we're going to look for that

3925
03:48:40,000 --> 03:48:42,640
docker

3926
03:48:42,640 --> 03:48:44,000
it is

3927
03:48:44,000 --> 03:48:47,199
run docker sock

3928
03:48:47,760 --> 03:48:48,960
so what we're going to do is we're going

3929
03:48:48,960 --> 03:48:51,040
to take

3930
03:48:51,040 --> 03:48:54,479
socat we're going to forward a tcp tcp

3931
03:48:54,479 --> 03:48:56,880
listen i think it is

3932
03:48:56,880 --> 03:48:58,239
yep

3933
03:48:58,239 --> 03:49:00,080
we're going to listen on the tcp socket

3934
03:49:00,080 --> 03:49:01,359
it doesn't really matter what port we

3935
03:49:01,359 --> 03:49:02,960
give it because we can always change it

3936
03:49:02,960 --> 03:49:05,040
but the default

3937
03:49:05,040 --> 03:49:08,439
is 2375.

3938
03:49:08,560 --> 03:49:13,199
so so socatlist tcp listen2375

3939
03:49:13,199 --> 03:49:14,640
we're going to add the fork command

3940
03:49:14,640 --> 03:49:17,520
after it just so we have multiple cad

3941
03:49:17,520 --> 03:49:20,720
multiple connection attempts available

3942
03:49:20,720 --> 03:49:22,160
on the next side we're going to make it

3943
03:49:22,160 --> 03:49:25,279
unix and we're going to go to run docker

3944
03:49:25,279 --> 03:49:27,040
dot sock

3945
03:49:27,040 --> 03:49:28,640
so what this is doing is going to listen

3946
03:49:28,640 --> 03:49:31,600
on tcp port 2375

3947
03:49:31,600 --> 03:49:33,439
it's going to create a multiple

3948
03:49:33,439 --> 03:49:34,640
connection so it's going to allow us to

3949
03:49:34,640 --> 03:49:36,479
connect multiple times

3950
03:49:36,479 --> 03:49:37,439
and it's going to route all the

3951
03:49:37,439 --> 03:49:40,800
connections into this unix socket

3952
03:49:40,800 --> 03:49:43,679
we hit enter there

3953
03:49:44,080 --> 03:49:47,760
uh yep no hup would be better as well

3954
03:49:47,760 --> 03:49:49,520
but now that we've done that that

3955
03:49:49,520 --> 03:49:51,520
program is running we don't want that to

3956
03:49:51,520 --> 03:49:53,439
end or we're going to lose our forward

3957
03:49:53,439 --> 03:49:55,279
here so again we're going to do control

3958
03:49:55,279 --> 03:49:57,520
z

3959
03:49:57,520 --> 03:49:58,720
we're going to say yes we want to

3960
03:49:58,720 --> 03:50:01,199
background that channel

3961
03:50:01,199 --> 03:50:02,640
then we want to go background on the

3962
03:50:02,640 --> 03:50:05,279
interpreter as well

3963
03:50:05,279 --> 03:50:06,479
we want to

3964
03:50:06,479 --> 03:50:11,039
find our docker socket exploit

3965
03:50:12,239 --> 03:50:15,359
and we're going to use xero

3966
03:50:18,479 --> 03:50:20,080
take a look at the options in here real

3967
03:50:20,080 --> 03:50:21,439
quick

3968
03:50:21,439 --> 03:50:23,040
again our payload options are the same

3969
03:50:23,040 --> 03:50:24,239
as they've always been we're going to

3970
03:50:24,239 --> 03:50:26,560
leave it at whatever our cali ip address

3971
03:50:26,560 --> 03:50:27,279
is

3972
03:50:27,279 --> 03:50:28,960
the local port doesn't really matter but

3973
03:50:28,960 --> 03:50:32,479
we're going to leave it on 444.

3974
03:50:33,680 --> 03:50:35,920
i changed my port here so i'm going to

3975
03:50:35,920 --> 03:50:38,960
take that port back in walk a second

3976
03:50:38,960 --> 03:50:40,479
and it's giving us a number of options

3977
03:50:40,479 --> 03:50:42,960
here luckily for us all of the defaults

3978
03:50:42,960 --> 03:50:44,319
are going to be fine we don't have to

3979
03:50:44,319 --> 03:50:47,199
change anything except for our hosts

3980
03:50:47,199 --> 03:50:49,920
and our port

3981
03:50:50,000 --> 03:50:54,000
so i need to change my r port

3982
03:50:54,319 --> 03:50:56,160
back to the two three seven five and

3983
03:50:56,160 --> 03:50:59,760
that's what i was forwarding with socat

3984
03:51:00,720 --> 03:51:02,960
and i'm going to get the our hosts as

3985
03:51:02,960 --> 03:51:06,960
one seven two one seven zero three

3986
03:51:08,080 --> 03:51:10,800
now we're all ready to go except for one

3987
03:51:10,800 --> 03:51:13,040
issue

3988
03:51:13,040 --> 03:51:14,560
that ip address

3989
03:51:14,560 --> 03:51:17,840
oh well wait a second

3990
03:51:18,239 --> 03:51:20,160
no it should be fine as long as you have

3991
03:51:20,160 --> 03:51:21,279
problems yeah

3992
03:51:21,279 --> 03:51:23,520
so we've exposed so uh we've exposed

3993
03:51:23,520 --> 03:51:26,319
that uh tcp port on all the interfaces

3994
03:51:26,319 --> 03:51:27,840
for the target so we don't need to worry

3995
03:51:27,840 --> 03:51:30,160
about routing or anything like that

3996
03:51:30,160 --> 03:51:32,000
although i think i just flushed my route

3997
03:51:32,000 --> 03:51:33,439
yes i did

3998
03:51:33,439 --> 03:51:35,600
so i'm just going to add a my route back

3999
03:51:35,600 --> 03:51:37,840
here

4000
03:51:38,239 --> 03:51:39,760
and that was going through

4001
03:51:39,760 --> 03:51:41,760
i think it was six wasn't it we'll say

4002
03:51:41,760 --> 03:51:44,720
six

4003
03:51:44,720 --> 03:51:46,479
so you should not need to do this

4004
03:51:46,479 --> 03:51:48,080
because you probably didn't flush your

4005
03:51:48,080 --> 03:51:51,520
routes whereas i just did

4006
03:51:53,359 --> 03:51:55,359
so once again

4007
03:51:55,359 --> 03:51:57,359
we have everything set up are all set up

4008
03:51:57,359 --> 03:51:59,600
properly our port is set up properly we

4009
03:51:59,600 --> 03:52:01,760
got our local cali machine ip address

4010
03:52:01,760 --> 03:52:03,359
we've got the port

4011
03:52:03,359 --> 03:52:06,239
we're going to run this

4012
03:52:08,239 --> 03:52:09,760
and this is going to take a minute or

4013
03:52:09,760 --> 03:52:11,040
two to go through

4014
03:52:11,040 --> 03:52:12,720
what's happening here is it's actually

4015
03:52:12,720 --> 03:52:15,279
using that docker socket

4016
03:52:15,279 --> 03:52:16,239
to

4017
03:52:16,239 --> 03:52:18,720
deploy a new docker container that's

4018
03:52:18,720 --> 03:52:20,239
going to give us full access to the

4019
03:52:20,239 --> 03:52:22,560
target

4020
03:52:22,800 --> 03:52:24,479
so there it's created a new container

4021
03:52:24,479 --> 03:52:26,560
for us

4022
03:52:26,560 --> 03:52:30,519
just a moment it's going to deploy

4023
03:52:42,560 --> 03:52:44,319
all right so the new container is

4024
03:52:44,319 --> 03:52:47,279
deployed we're looking

4025
03:52:47,279 --> 03:52:49,600
what it's done now is created a cron job

4026
03:52:49,600 --> 03:52:52,239
using its file system access

4027
03:52:52,239 --> 03:52:53,680
remember when a docker container is

4028
03:52:53,680 --> 03:52:56,000
created it has whatever access you give

4029
03:52:56,000 --> 03:52:58,239
it so when you expose say a root folder

4030
03:52:58,239 --> 03:52:59,840
or something like that

4031
03:52:59,840 --> 03:53:01,600
you can have full access to the whole

4032
03:53:01,600 --> 03:53:03,359
system

4033
03:53:03,359 --> 03:53:05,279
since we have access to the docker

4034
03:53:05,279 --> 03:53:07,520
socket we can control exactly how we

4035
03:53:07,520 --> 03:53:10,000
want to configure a new container

4036
03:53:10,000 --> 03:53:11,359
and in this case we've just given that

4037
03:53:11,359 --> 03:53:12,720
container full access to the whole

4038
03:53:12,720 --> 03:53:14,640
system

4039
03:53:14,640 --> 03:53:16,399
and there we go we've got a stage going

4040
03:53:16,399 --> 03:53:18,800
in now

4041
03:53:18,880 --> 03:53:20,319
in just a moment we should see an

4042
03:53:20,319 --> 03:53:23,800
interpreter session

4043
03:53:40,410 --> 03:53:41,920
[Music]

4044
03:53:41,920 --> 03:53:45,760
and this one even cleans up after itself

4045
03:53:49,120 --> 03:53:51,120
there we go interpreter session nine

4046
03:53:51,120 --> 03:53:53,439
opened

4047
03:53:55,199 --> 03:53:56,640
and if we go to the background real

4048
03:53:56,640 --> 03:53:58,479
quick

4049
03:53:58,479 --> 03:54:01,760
we'll take a look at our sessions

4050
03:54:01,760 --> 03:54:05,840
and we see we've got root at gibson

4051
03:54:05,840 --> 03:54:09,600
one fully exploited machine

4052
03:54:16,720 --> 03:54:19,840
and there we go

4053
03:54:20,560 --> 03:54:22,160
now who's having some issues with this

4054
03:54:22,160 --> 03:54:25,160
one

4055
03:54:34,650 --> 03:54:36,960
[Music]

4056
03:54:36,960 --> 03:54:38,720
you gotta know the docker exploit yes

4057
03:54:38,720 --> 03:54:41,039
you do

4058
03:54:42,319 --> 03:54:44,399
and to be fair this one again it's not

4059
03:54:44,399 --> 03:54:46,160
really an exploit in docker so much as

4060
03:54:46,160 --> 03:54:48,080
it is a misconfiguration on the

4061
03:54:48,080 --> 03:54:49,840
container

4062
03:54:49,840 --> 03:54:51,680
this shouldn't be like you should never

4063
03:54:51,680 --> 03:54:52,720
have

4064
03:54:52,720 --> 03:54:54,800
docker being controlled by a container

4065
03:54:54,800 --> 03:54:59,160
that's a big security flaw

4066
03:55:00,399 --> 03:55:02,880
all right so i just wanted to

4067
03:55:02,880 --> 03:55:04,640
do a quick overview of what you've done

4068
03:55:04,640 --> 03:55:06,479
so far so

4069
03:55:06,479 --> 03:55:09,600
we used routing to for traffic through

4070
03:55:09,600 --> 03:55:13,120
that initial target uh so you you could

4071
03:55:13,120 --> 03:55:15,199
do it through auto route or just

4072
03:55:15,199 --> 03:55:17,520
manually add routes through existing

4073
03:55:17,520 --> 03:55:18,560
session

4074
03:55:18,560 --> 03:55:21,199
we didn't do this we can probably do a

4075
03:55:21,199 --> 03:55:24,160
quick demo ping sweep works but you need

4076
03:55:24,160 --> 03:55:26,160
to have ping

4077
03:55:26,160 --> 03:55:28,640
command installed on the target which in

4078
03:55:28,640 --> 03:55:31,120
the first container that we ended up in

4079
03:55:31,120 --> 03:55:32,880
is not

4080
03:55:32,880 --> 03:55:35,680
uh so we did poor scan through the

4081
03:55:35,680 --> 03:55:38,720
initial target uh of a machine on the

4082
03:55:38,720 --> 03:55:40,239
same network different machine on the

4083
03:55:40,239 --> 03:55:43,439
same network we found open port we found

4084
03:55:43,439 --> 03:55:45,120
that it's running apache we found the

4085
03:55:45,120 --> 03:55:46,880
version number of apache we found

4086
03:55:46,880 --> 03:55:48,640
exploit for that version number we've

4087
03:55:48,640 --> 03:55:50,960
exploited it apache ended up in the

4088
03:55:50,960 --> 03:55:52,479
second container

4089
03:55:52,479 --> 03:55:54,399
and the second container had docker

4090
03:55:54,399 --> 03:55:56,960
socket mounted in it

4091
03:55:56,960 --> 03:55:58,800
if you check docker documentation it's a

4092
03:55:58,800 --> 03:56:00,239
it's a fairly well known fact

4093
03:56:00,239 --> 03:56:02,479
essentially if you have access to docker

4094
03:56:02,479 --> 03:56:04,720
it's basically the same as having root

4095
03:56:04,720 --> 03:56:06,960
access to the host so

4096
03:56:06,960 --> 03:56:09,520
when you mount a docker socket into the

4097
03:56:09,520 --> 03:56:11,920
container so docker docker user is using

4098
03:56:11,920 --> 03:56:13,600
docker socket to

4099
03:56:13,600 --> 03:56:16,000
receive api calls this is how like the

4100
03:56:16,000 --> 03:56:18,000
cli tool docker

4101
03:56:18,000 --> 03:56:19,760
talks to the docker daemon is through

4102
03:56:19,760 --> 03:56:22,399
that docker contain darker socket and so

4103
03:56:22,399 --> 03:56:24,239
access to docker socket essentially is

4104
03:56:24,239 --> 03:56:27,120
the same as access to docker itself

4105
03:56:27,120 --> 03:56:28,319
and because the

4106
03:56:28,319 --> 03:56:30,239
socket was mounted within the container

4107
03:56:30,239 --> 03:56:32,080
we were able to use

4108
03:56:32,080 --> 03:56:35,040
uh the docker exploit to

4109
03:56:35,040 --> 03:56:37,520
escalate our privileges we had to do a

4110
03:56:37,520 --> 03:56:40,000
little bit of trick because that's that

4111
03:56:40,000 --> 03:56:41,199
exploit

4112
03:56:41,199 --> 03:56:44,399
uh the way it works in uh metasploit it

4113
03:56:44,399 --> 03:56:46,960
it basically expects to connect to that

4114
03:56:46,960 --> 03:56:49,040
to the docker daemon through a tcp

4115
03:56:49,040 --> 03:56:51,120
connection we didn't have that we had

4116
03:56:51,120 --> 03:56:53,359
just access to the socket file but we

4117
03:56:53,359 --> 03:56:56,239
used socat to open the port on the

4118
03:56:56,239 --> 03:56:59,279
second target to pipe that connection

4119
03:56:59,279 --> 03:57:02,720
back to uh to the docker sock file and

4120
03:57:02,720 --> 03:57:05,600
then we used uh the the module to

4121
03:57:05,600 --> 03:57:08,479
connect to that uh open port and do the

4122
03:57:08,479 --> 03:57:10,160
exploit it takes a bit of time because

4123
03:57:10,160 --> 03:57:12,800
it basically creates a new container

4124
03:57:12,800 --> 03:57:15,120
uh schedules a job within the container

4125
03:57:15,120 --> 03:57:17,120
and within a minute the job is executed

4126
03:57:17,120 --> 03:57:19,600
and that's what gets you a session back

4127
03:57:19,600 --> 03:57:22,160
so the last session that we got is on

4128
03:57:22,160 --> 03:57:24,880
the host itself as the root user you can

4129
03:57:24,880 --> 03:57:26,479
find the

4130
03:57:26,479 --> 03:57:30,479
flag for in in the roots home directory

4131
03:57:30,479 --> 03:57:32,880
there's actually a bonus flag we're not

4132
03:57:32,880 --> 03:57:35,359
gonna go through uh so think about where

4133
03:57:35,359 --> 03:57:38,319
we haven't been yet uh so

4134
03:57:38,319 --> 03:57:41,439
as an outline we have the vm itself

4135
03:57:41,439 --> 03:57:43,600
it's run that's the last session where

4136
03:57:43,600 --> 03:57:45,920
we are we're running two containers in

4137
03:57:45,920 --> 03:57:47,760
that vm the first container is what's

4138
03:57:47,760 --> 03:57:49,520
exposed to the outside world that's the

4139
03:57:49,520 --> 03:57:52,399
tomcat service and the jmx

4140
03:57:52,399 --> 03:57:54,640
the second container is running that

4141
03:57:54,640 --> 03:57:57,520
apache invulnerable configuration so

4142
03:57:57,520 --> 03:57:58,960
we've basically jumped to the first

4143
03:57:58,960 --> 03:58:00,720
container then to the second container

4144
03:58:00,720 --> 03:58:03,120
from the second container to the host

4145
03:58:03,120 --> 03:58:06,479
and so think about where we haven't been

4146
03:58:06,479 --> 03:58:08,239
yet or you can just

4147
03:58:08,239 --> 03:58:10,239
do a brute force search and you'll find

4148
03:58:10,239 --> 03:58:12,080
the last flag

4149
03:58:12,080 --> 03:58:14,560
that's the bonus and that's the overview

4150
03:58:14,560 --> 03:58:17,359
what i want to do first we've been told

4151
03:58:17,359 --> 03:58:19,840
there's another 30 minutes we can use so

4152
03:58:19,840 --> 03:58:21,920
we want to cover a little bit of the

4153
03:58:21,920 --> 03:58:25,680
database but before that uh if anybody

4154
03:58:25,680 --> 03:58:28,239
needs to drop off that's fine

4155
03:58:28,239 --> 03:58:30,800
i wanted to mention that dan and i are

4156
03:58:30,800 --> 03:58:31,760
uh

4157
03:58:31,760 --> 03:58:34,000
part of the organizing committee for

4158
03:58:34,000 --> 03:58:38,239
defcon group dc604 it's local here in

4159
03:58:38,239 --> 03:58:40,800
vancouver bc but we're running uh

4160
03:58:40,800 --> 03:58:43,120
virtual meetups every month

4161
03:58:43,120 --> 03:58:45,680
so if you're interested we do we try to

4162
03:58:45,680 --> 03:58:47,840
do workshops it's not always workshops

4163
03:58:47,840 --> 03:58:49,840
sometimes we have you know talks but

4164
03:58:49,840 --> 03:58:51,439
it's essentially

4165
03:58:51,439 --> 03:58:54,160
uh vendor agnostic it's it's people from

4166
03:58:54,160 --> 03:58:56,720
the community who come and talk and

4167
03:58:56,720 --> 03:58:58,479
present on topics that they're

4168
03:58:58,479 --> 03:59:01,120
interested in and so we're facilitating

4169
03:59:01,120 --> 03:59:03,040
essentially knowledge sharing across the

4170
03:59:03,040 --> 03:59:05,040
community of local hackers

4171
03:59:05,040 --> 03:59:06,160
um

4172
03:59:06,160 --> 03:59:08,399
check us out if you want join us we've

4173
03:59:08,399 --> 03:59:10,080
got to meet up next week we're going to

4174
03:59:10,080 --> 03:59:13,439
be doing uh doing a walkthrough of a

4175
03:59:13,439 --> 03:59:16,479
gitlab ctf it's going to be quite fun

4176
03:59:16,479 --> 03:59:18,560
i'm quite excited about that so it's

4177
03:59:18,560 --> 03:59:21,359
next thursday but check our meetup page

4178
03:59:21,359 --> 03:59:24,319
see if you want to join

4179
03:59:24,319 --> 03:59:27,120
with that i think our content is done um

4180
03:59:27,120 --> 03:59:29,920
we're gonna stick around in discord for

4181
03:59:29,920 --> 03:59:32,000
a little bit and then maybe we can go

4182
03:59:32,000 --> 03:59:35,040
through the like what did we end up in

4183
03:59:35,040 --> 03:59:37,840
database with uh based on all the stuff

4184
03:59:37,840 --> 03:59:41,199
that we ran today throughout a collapse

4185
03:59:41,199 --> 03:59:43,680
definitely

4186
03:59:45,920 --> 03:59:48,080
uh korean if we get the screen back

4187
03:59:48,080 --> 03:59:50,560
perfect

4188
03:59:50,880 --> 03:59:51,680
so

4189
03:59:51,680 --> 03:59:52,800
we're gonna take a look at the different

4190
03:59:52,800 --> 03:59:54,720
hosts that we saw

4191
03:59:54,720 --> 03:59:56,800
all the tools that we were using anytime

4192
03:59:56,800 --> 03:59:58,479
it encounters a host it's going to end

4193
03:59:58,479 --> 04:00:00,800
up in this list here

4194
04:00:00,800 --> 04:00:03,040
so we can see this was our first target

4195
04:00:03,040 --> 04:00:04,880
that we went after

4196
04:00:04,880 --> 04:00:06,960
these are the internal ip addresses for

4197
04:00:06,960 --> 04:00:09,839
those containers

4198
04:00:10,640 --> 04:00:11,760
you can also take a look at the

4199
04:00:11,760 --> 04:00:13,040
different services that we collected

4200
04:00:13,040 --> 04:00:14,640
along the way

4201
04:00:14,640 --> 04:00:18,640
we found that port 8080 for uh 49009 and

4202
04:00:18,640 --> 04:00:23,319
480 on the different ip addresses

4203
04:00:23,359 --> 04:00:25,040
we can take out some of the i'll look at

4204
04:00:25,040 --> 04:00:26,000
some of the loop that we may have

4205
04:00:26,000 --> 04:00:28,880
collected along the way

4206
04:00:29,279 --> 04:00:31,199
so you can see here i did an enumeration

4207
04:00:31,199 --> 04:00:32,800
on the linux system at one point and i

4208
04:00:32,800 --> 04:00:33,920
collected

4209
04:00:33,920 --> 04:00:35,680
information about the users installed

4210
04:00:35,680 --> 04:00:38,640
packages the version disk info

4211
04:00:38,640 --> 04:00:41,680
and all those end up in folders on

4212
04:00:41,680 --> 04:00:45,199
our local cali machine

4213
04:00:46,720 --> 04:00:50,160
take a look at any notes

4214
04:00:50,160 --> 04:00:51,520
so these are different things that are

4215
04:00:51,520 --> 04:00:54,080
collected again along the way

4216
04:00:54,080 --> 04:00:55,840
sometimes you can find some useful clues

4217
04:00:55,840 --> 04:00:57,120
in here if you have to go back and

4218
04:00:57,120 --> 04:00:58,239
figure out

4219
04:00:58,239 --> 04:00:59,840
you know

4220
04:00:59,840 --> 04:01:01,359
what's more information i can look at

4221
04:01:01,359 --> 04:01:03,359
here how did it determine this was the

4222
04:01:03,359 --> 04:01:04,399
version

4223
04:01:04,399 --> 04:01:07,039
things like that

4224
04:01:11,120 --> 04:01:14,160
take a look at the bones

4225
04:01:15,680 --> 04:01:17,199
so these are the vulnerabilities that we

4226
04:01:17,199 --> 04:01:20,080
used we've got the tomcat manager the

4227
04:01:20,080 --> 04:01:21,760
authenticated upload

4228
04:01:21,760 --> 04:01:23,840
we have the tomcat rce from the jsp

4229
04:01:23,840 --> 04:01:25,199
bypass

4230
04:01:25,199 --> 04:01:26,720
and we have the

4231
04:01:26,720 --> 04:01:30,080
apache for traversal

4232
04:01:31,680 --> 04:01:34,080
and i think we had

4233
04:01:34,080 --> 04:01:34,960
yeah

4234
04:01:34,960 --> 04:01:36,319
it doesn't actually show the rmi in

4235
04:01:36,319 --> 04:01:38,479
there

4236
04:01:38,800 --> 04:01:40,479
so that's weird

4237
04:01:40,479 --> 04:01:42,080
yeah it should have been in there the

4238
04:01:42,080 --> 04:01:44,080
java rmi jmx should have been in there

4239
04:01:44,080 --> 04:01:47,199
as well but i guess not yeah

4240
04:01:47,199 --> 04:01:48,800
or maybe oh it probably came back as a

4241
04:01:48,800 --> 04:01:50,720
generic payload handler

4242
04:01:50,720 --> 04:01:52,800
no that was probably when you did the

4243
04:01:52,800 --> 04:01:56,560
msf venom and upgraded uh discussion

4244
04:01:56,560 --> 04:01:57,920
weird

4245
04:01:57,920 --> 04:02:01,840
and then finally our docker exploit

4246
04:02:02,080 --> 04:02:03,760
so those of you are doing reports and

4247
04:02:03,760 --> 04:02:05,120
things like that if you're keeping track

4248
04:02:05,120 --> 04:02:06,640
of which exploits you're using this can

4249
04:02:06,640 --> 04:02:09,279
be really useful for exporting things

4250
04:02:09,279 --> 04:02:10,560
make your reports just a little bit

4251
04:02:10,560 --> 04:02:12,880
easier

4252
04:02:12,960 --> 04:02:14,239
and we can also take a look at any

4253
04:02:14,239 --> 04:02:15,520
corresponding way to crop collected

4254
04:02:15,520 --> 04:02:16,800
along the way

4255
04:02:16,800 --> 04:02:18,399
this one we didn't use any credentials

4256
04:02:18,399 --> 04:02:19,359
it was all exploits and

4257
04:02:19,359 --> 04:02:22,000
misconfigurations so nothing to worry

4258
04:02:22,000 --> 04:02:23,120
about there

4259
04:02:23,120 --> 04:02:25,120
the enumeration but didn't you do that

4260
04:02:25,120 --> 04:02:27,600
scan of like tomcat manager brute

4261
04:02:27,600 --> 04:02:30,160
forcing which should yeah

4262
04:02:30,160 --> 04:02:32,399
i don't know why it was lost

4263
04:02:32,399 --> 04:02:35,359
uh i'm not entirely certain um

4264
04:02:35,359 --> 04:02:37,040
as great as motorboat is there are some

4265
04:02:37,040 --> 04:02:39,439
weird quirks to it sometimes i've had

4266
04:02:39,439 --> 04:02:40,960
some times where some things just don't

4267
04:02:40,960 --> 04:02:42,640
get collected into the database after i

4268
04:02:42,640 --> 04:02:44,080
run them

4269
04:02:44,080 --> 04:02:46,239
uh it's especially

4270
04:02:46,239 --> 04:02:48,000
uh confusing especially confusing

4271
04:02:48,000 --> 04:02:49,680
especially annoying after you do a

4272
04:02:49,680 --> 04:02:51,199
really large port scan something like

4273
04:02:51,199 --> 04:02:52,479
that and you find out that you've only

4274
04:02:52,479 --> 04:02:54,239
collected maybe a quarter of the actual

4275
04:02:54,239 --> 04:02:55,760
results

4276
04:02:55,760 --> 04:02:56,800
then you go through and you try to

4277
04:02:56,800 --> 04:02:59,600
figure out where all my posts were what

4278
04:02:59,600 --> 04:03:00,720
just happened here i just saw a whole

4279
04:03:00,720 --> 04:03:02,239
ton of stuff go past the screen and

4280
04:03:02,239 --> 04:03:05,600
there's like three things in my database

4281
04:03:05,600 --> 04:03:06,640
yeah

4282
04:03:06,640 --> 04:03:07,600
but

4283
04:03:07,600 --> 04:03:08,880
for the most part it's actually pretty

4284
04:03:08,880 --> 04:03:11,839
good

4285
04:03:15,359 --> 04:03:16,720
now while we are here anyway does

4286
04:03:16,720 --> 04:03:18,800
anybody have any more questions

4287
04:03:18,800 --> 04:03:20,720
we don't have extra time here so

4288
04:03:20,720 --> 04:03:22,479
we have three people who completed all

4289
04:03:22,479 --> 04:03:24,960
of them including the bonus flag so the

4290
04:03:24,960 --> 04:03:27,040
bonus flag there there's a little little

4291
04:03:27,040 --> 04:03:28,640
bit of a

4292
04:03:28,640 --> 04:03:31,600
cheat way of finding it if if you search

4293
04:03:31,600 --> 04:03:33,920
the host itself you'll find it but it's

4294
04:03:33,920 --> 04:03:36,720
actually in the tomcat container so when

4295
04:03:36,720 --> 04:03:39,040
we got access to the initial container

4296
04:03:39,040 --> 04:03:41,840
we had access as daemon as user daemon

4297
04:03:41,840 --> 04:03:44,080
and user daemon doesn't have access to

4298
04:03:44,080 --> 04:03:45,040
the

4299
04:03:45,040 --> 04:03:47,040
fifth flag but if you

4300
04:03:47,040 --> 04:03:48,960
now having access to the host you can

4301
04:03:48,960 --> 04:03:51,520
exact into that container as root and

4302
04:03:51,520 --> 04:03:53,359
find the flag that's in root's home

4303
04:03:53,359 --> 04:03:55,840
folder but because it's a container it's

4304
04:03:55,840 --> 04:03:57,680
essentially a process an isolated

4305
04:03:57,680 --> 04:03:59,840
process that's running on the host

4306
04:03:59,840 --> 04:04:02,399
you can find the flag lying around on

4307
04:04:02,399 --> 04:04:04,640
the host's file system that's kind of

4308
04:04:04,640 --> 04:04:07,760
related mounted into the container so

4309
04:04:07,760 --> 04:04:09,520
i don't know if you guys found it that

4310
04:04:09,520 --> 04:04:10,479
way

4311
04:04:10,479 --> 04:04:13,920
or did the proper

4312
04:04:13,920 --> 04:04:18,600
jump into the container thing

4313
04:04:20,080 --> 04:04:21,600
right um

4314
04:04:21,600 --> 04:04:23,279
thanks everyone i guess that's all we

4315
04:04:23,279 --> 04:04:25,199
had for today um

4316
04:04:25,199 --> 04:04:27,040
i can stick around for another 20

4317
04:04:27,040 --> 04:04:28,880
minutes or so in discord if you are

4318
04:04:28,880 --> 04:04:30,479
still working in the machine

4319
04:04:30,479 --> 04:04:32,880
need some help feel free to

4320
04:04:32,880 --> 04:04:36,080
ask questions um i'll check it later in

4321
04:04:36,080 --> 04:04:38,239
the evening as well

4322
04:04:38,239 --> 04:04:40,080
just in case so if you

4323
04:04:40,080 --> 04:04:42,399
have questions let us know or you can

4324
04:04:42,399 --> 04:04:46,000
also just ping us directly in discord

4325
04:04:46,000 --> 04:04:47,840
i'll be there as well just as soon as i

4326
04:04:47,840 --> 04:04:49,760
grab some breakfast since i've been up

4327
04:04:49,760 --> 04:04:52,320
doing this since 6am

4328
04:04:52,320 --> 04:04:54,479
[Laughter]

4329
04:04:54,479 --> 04:04:56,880
take care everybody

4330
04:04:56,880 --> 04:04:59,880
thanks

