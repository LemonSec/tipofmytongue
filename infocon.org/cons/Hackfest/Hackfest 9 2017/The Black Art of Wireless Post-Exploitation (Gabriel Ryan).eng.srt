1
00:00:00,800 --> 00:00:03,120
all right so first things first okay my

2
00:00:03,120 --> 00:00:05,210
mic is working excellent all right so

3
00:00:05,210 --> 00:00:07,440
actually he just did this part so we can

4
00:00:07,440 --> 00:00:09,870
skip it cool all right so two new things

5
00:00:09,870 --> 00:00:11,610
in this presentation we're gonna have

6
00:00:11,610 --> 00:00:13,410
two new attacks one is a hostel portal

7
00:00:13,410 --> 00:00:14,400
attack and you can use that to steal

8
00:00:14,400 --> 00:00:16,980
Active Directory credentials from WPA to

9
00:00:16,980 --> 00:00:18,690
AP now works out to recognize our cats s

10
00:00:18,690 --> 00:00:20,400
and the second thing we're gonna go over

11
00:00:20,400 --> 00:00:22,199
is the indirect wireless pivot which you

12
00:00:22,199 --> 00:00:25,710
can use to bypass nak mechanisms so

13
00:00:25,710 --> 00:00:26,970
before we do any of this stuff we need

14
00:00:26,970 --> 00:00:29,970
to talk about WPA to EAP now the cool

15
00:00:29,970 --> 00:00:31,679
thing about 30 p2 EAP is that it's very

16
00:00:31,679 --> 00:00:33,660
vulnerable to rogue ap attacks so in

17
00:00:33,660 --> 00:00:35,340
order to really talk about EAP we need

18
00:00:35,340 --> 00:00:37,559
to talk about rogue AP's and Rho VP is

19
00:00:37,559 --> 00:00:38,579
that pretty much the bread and butter of

20
00:00:38,579 --> 00:00:40,770
modern wireless pen tests you can use

21
00:00:40,770 --> 00:00:42,090
them for stealthy man the middle attacks

22
00:00:42,090 --> 00:00:43,530
stealing radius credentials all kinds of

23
00:00:43,530 --> 00:00:45,989
really cool stuff at their core the way

24
00:00:45,989 --> 00:00:47,430
that they work the most simple type of

25
00:00:47,430 --> 00:00:50,160
rogue ap attack is the evil twin attack

26
00:00:50,160 --> 00:00:51,780
and that is if you look at this diagram

27
00:00:51,780 --> 00:00:54,480
that we have here you can pardon me if

28
00:00:54,480 --> 00:00:55,500
you look at this diagram that we have

29
00:00:55,500 --> 00:00:57,300
here we have like four laptops that are

30
00:00:57,300 --> 00:00:58,710
connected to this access point and this

31
00:00:58,710 --> 00:00:59,879
access point you know just to pick on

32
00:00:59,879 --> 00:01:03,449
Def Con a bit but what we'll call this

33
00:01:03,449 --> 00:01:05,970
network Def Con open and there's an open

34
00:01:05,970 --> 00:01:07,470
network so I guess the question is if an

35
00:01:07,470 --> 00:01:09,840
attacker word it creates another access

36
00:01:09,840 --> 00:01:11,820
point with this very very same name how

37
00:01:11,820 --> 00:01:13,350
these devices know to want to connect to

38
00:01:13,350 --> 00:01:14,820
and the truth instead really come down

39
00:01:14,820 --> 00:01:15,840
to who has a better signal-to-noise

40
00:01:15,840 --> 00:01:17,880
ratio and better signal strength among

41
00:01:17,880 --> 00:01:20,729
other things so essentially what this

42
00:01:20,729 --> 00:01:22,830
allows you to do as an attacker you

43
00:01:22,830 --> 00:01:24,360
could just create your own hotspot you

44
00:01:24,360 --> 00:01:26,130
know mimicking the the network that

45
00:01:26,130 --> 00:01:27,390
you're targeting and this will force

46
00:01:27,390 --> 00:01:28,890
devices to connect to you now you have a

47
00:01:28,890 --> 00:01:29,700
man in the middle and you can do all

48
00:01:29,700 --> 00:01:32,280
kinds of cool stuff with that so this is

49
00:01:32,280 --> 00:01:33,570
not a new attack I mean this these have

50
00:01:33,570 --> 00:01:35,369
been around for pretty much like the

51
00:01:35,369 --> 00:01:37,229
inception of Wi-Fi so you know we're

52
00:01:37,229 --> 00:01:38,880
talking 2002 is when the evil twin

53
00:01:38,880 --> 00:01:41,390
attack first started to kind of emerge

54
00:01:41,390 --> 00:01:43,470
you know fast forward a couple years we

55
00:01:43,470 --> 00:01:44,909
have karma attacks and that's a

56
00:01:44,909 --> 00:01:46,320
different attack by the unity has oviya

57
00:01:46,320 --> 00:01:47,060
and chain McCauley

58
00:01:47,060 --> 00:01:49,140
you know that that's if you use like a

59
00:01:49,140 --> 00:01:50,250
pineapple that's pretty much what it's

60
00:01:50,250 --> 00:01:53,490
doing that's word 2008 and we have free

61
00:01:53,490 --> 00:01:54,299
reign as wpe

62
00:01:54,299 --> 00:01:56,189
by Josh right and Brad and Tony wits and

63
00:01:56,189 --> 00:01:57,479
this is actually where you start to use

64
00:01:57,479 --> 00:02:00,180
see rogue ap attacks use as a method of

65
00:02:00,180 --> 00:02:02,100
stealing credentials from radius radius

66
00:02:02,100 --> 00:02:04,200
networks and then back you know fast

67
00:02:04,200 --> 00:02:07,680
forward a bit to 2014 you know that by

68
00:02:07,680 --> 00:02:09,119
this point karma attacks have been

69
00:02:09,119 --> 00:02:11,580
significantly less effective so you know

70
00:02:11,580 --> 00:02:13,170
at this point two really awesome

71
00:02:13,170 --> 00:02:13,910
researchers

72
00:02:13,910 --> 00:02:15,740
daaamn white and in de villiers they

73
00:02:15,740 --> 00:02:17,210
actually figured out how to improve this

74
00:02:17,210 --> 00:02:19,040
and kind of you know get back to square

75
00:02:19,040 --> 00:02:19,970
one and make this really effective

76
00:02:19,970 --> 00:02:22,490
attack again and filing 2017 very

77
00:02:22,490 --> 00:02:23,720
recently we have to lure ten attack

78
00:02:23,720 --> 00:02:26,090
which targets Wi-Fi sense which is used

79
00:02:26,090 --> 00:02:28,790
by it by windows so i mean one thing

80
00:02:28,790 --> 00:02:30,020
that all these different in this

81
00:02:30,020 --> 00:02:31,850
evolution of rogue AP attacks has have

82
00:02:31,850 --> 00:02:34,160
in common is the fact that they you know

83
00:02:34,160 --> 00:02:35,510
the Robie p it's a kind of primarily

84
00:02:35,510 --> 00:02:37,220
falls into one of two roles man the

85
00:02:37,220 --> 00:02:38,690
middle tax for stealing credentials and

86
00:02:38,690 --> 00:02:40,850
also breaching wpa2 networks to gain

87
00:02:40,850 --> 00:02:42,950
access to the wireless network we're

88
00:02:42,950 --> 00:02:44,030
going to look a little bit different in

89
00:02:44,030 --> 00:02:45,260
this talk today and that's using Roby

90
00:02:45,260 --> 00:02:46,310
opiates after the means of lateral

91
00:02:46,310 --> 00:02:49,790
movement alright so now that we've gone

92
00:02:49,790 --> 00:02:52,430
over a gap he attacks so when we talk

93
00:02:52,430 --> 00:02:54,980
about wpa2 EAP or WPA enterprise we're

94
00:02:54,980 --> 00:02:55,910
usually talking about two

95
00:02:55,910 --> 00:02:58,940
implementations of this EAP so we're

96
00:02:58,940 --> 00:03:00,440
talking about you if a peep and he appt

97
00:03:00,440 --> 00:03:03,940
LS anyone here familiar with EAP at all

98
00:03:03,940 --> 00:03:08,330
all right some okay cool so just a brief

99
00:03:08,330 --> 00:03:10,040
overview of how this works

100
00:03:10,040 --> 00:03:11,180
you know what we see here's a diagram

101
00:03:11,180 --> 00:03:13,880
and this thing but this quiet over the

102
00:03:13,880 --> 00:03:15,290
left side this is your client device

103
00:03:15,290 --> 00:03:16,940
also knows the supplicate if you wanna

104
00:03:16,940 --> 00:03:18,590
be technical that's like your laptop

105
00:03:18,590 --> 00:03:20,360
your cell phone whatever and this over

106
00:03:20,360 --> 00:03:22,160
here is the authentication server now

107
00:03:22,160 --> 00:03:23,840
the authentication server now when the

108
00:03:23,840 --> 00:03:25,430
client wants to connect the network the

109
00:03:25,430 --> 00:03:26,540
clients gonna send off that occasion

110
00:03:26,540 --> 00:03:28,280
request to the authentication server and

111
00:03:28,280 --> 00:03:29,870
the authentication server is going to

112
00:03:29,870 --> 00:03:32,270
respond with an x.509 certificate and

113
00:03:32,270 --> 00:03:35,030
you know once this happens we at this

114
00:03:35,030 --> 00:03:36,830
point completes provided by the way that

115
00:03:36,830 --> 00:03:39,410
a client accepts a certificate at this

116
00:03:39,410 --> 00:03:40,459
point we complete the outer

117
00:03:40,459 --> 00:03:42,080
authentication we move on to the inner

118
00:03:42,080 --> 00:03:43,220
authentication the outer authentication

119
00:03:43,220 --> 00:03:45,200
can only proceed once the client has

120
00:03:45,200 --> 00:03:47,170
established that it can trust the server

121
00:03:47,170 --> 00:03:49,430
so we finished the outer authentication

122
00:03:49,430 --> 00:03:51,080
and then the secure titles establish

123
00:03:51,080 --> 00:03:51,770
between the client and the

124
00:03:51,770 --> 00:03:53,300
authentication server we move to the

125
00:03:53,300 --> 00:03:54,739
inner authentication at this point which

126
00:03:54,739 --> 00:03:55,700
is where you actually enter in your

127
00:03:55,700 --> 00:03:57,170
username and password and all this

128
00:03:57,170 --> 00:03:59,420
happens to the secure tunnel now the

129
00:03:59,420 --> 00:04:01,700
reason by the way why we need a secure

130
00:04:01,700 --> 00:04:05,060
tunnel is the fact that well actually so

131
00:04:05,060 --> 00:04:06,620
EAP right we're talking to EP as an

132
00:04:06,620 --> 00:04:08,870
authentication mechanism basically what

133
00:04:08,870 --> 00:04:10,160
that's authentication mechanisms

134
00:04:10,160 --> 00:04:12,140
providing you access to is access to

135
00:04:12,140 --> 00:04:14,900
this Wi-Fi network to Wi-Fi networks WPA

136
00:04:14,900 --> 00:04:17,180
capabilities until you finish the soft

137
00:04:17,180 --> 00:04:18,798
indication mechanism this is entirely

138
00:04:18,798 --> 00:04:20,660
happening over open Wi-Fi because you

139
00:04:20,660 --> 00:04:21,769
can't get that encryption until you've

140
00:04:21,769 --> 00:04:23,360
finished authenticating so with the

141
00:04:23,360 --> 00:04:24,950
other secure tunnel you could actually

142
00:04:24,950 --> 00:04:26,630
sniff this entire process offline and

143
00:04:26,630 --> 00:04:27,800
you'd have problems

144
00:04:27,800 --> 00:04:30,560
in fact legacy implementations of EAP

145
00:04:30,560 --> 00:04:32,240
we're very susceptible to this if you

146
00:04:32,240 --> 00:04:34,699
find a PMD 5 there's one that comes to

147
00:04:34,699 --> 00:04:38,270
mind so you know when I mentioned

148
00:04:38,270 --> 00:04:39,919
they're actually two components here but

149
00:04:39,919 --> 00:04:41,810
that's that's actually a bit of a you

150
00:04:41,810 --> 00:04:44,030
know oversimplification we actually have

151
00:04:44,030 --> 00:04:47,270
three components in total the supplicant

152
00:04:47,270 --> 00:04:48,409
or wireless client which we were talking

153
00:04:48,409 --> 00:04:49,669
about earlier that it's screening here

154
00:04:49,669 --> 00:04:51,379
with authentication server well your

155
00:04:51,379 --> 00:04:52,639
wireless wireless client is actually

156
00:04:52,639 --> 00:04:55,639
communicating over layer two so in order

157
00:04:55,639 --> 00:04:56,750
to make this work we actually need

158
00:04:56,750 --> 00:04:57,800
something that's able to speak layer

159
00:04:57,800 --> 00:04:59,930
seven which is what your radius server

160
00:04:59,930 --> 00:05:01,550
speaks so that's why you need the access

161
00:05:01,550 --> 00:05:02,930
point in the middle which is you know

162
00:05:02,930 --> 00:05:04,190
technically knows the Authenticator but

163
00:05:04,190 --> 00:05:05,930
we can just call it the IP and that just

164
00:05:05,930 --> 00:05:06,770
kind of sits in the middle this whole

165
00:05:06,770 --> 00:05:08,389
transaction and acts as a mediator

166
00:05:08,389 --> 00:05:11,479
between these two parties so you know

167
00:05:11,479 --> 00:05:13,400
our complete diagram actually would look

168
00:05:13,400 --> 00:05:14,870
like this you know it's very similar to

169
00:05:14,870 --> 00:05:16,370
what we had before you see the

170
00:05:16,370 --> 00:05:17,690
authentication requests the x.509

171
00:05:17,690 --> 00:05:20,000
certificates were returned as a response

172
00:05:20,000 --> 00:05:22,520
client then trust it or does not trust

173
00:05:22,520 --> 00:05:24,650
it but the key difference here is that

174
00:05:24,650 --> 00:05:26,030
we have the Authenticator operating as

175
00:05:26,030 --> 00:05:27,740
an intermediary between the client and

176
00:05:27,740 --> 00:05:32,870
the server so we mentioned that you know

177
00:05:32,870 --> 00:05:35,060
evil that open networks are susceptible

178
00:05:35,060 --> 00:05:37,190
to evil twin attacks where these these

179
00:05:37,190 --> 00:05:38,270
attacks where you can't really like

180
00:05:38,270 --> 00:05:40,729
force devices to you connect to a rogue

181
00:05:40,729 --> 00:05:42,259
access point and attack them in that way

182
00:05:42,259 --> 00:05:45,289
well and we also mentioned that ap in

183
00:05:45,289 --> 00:05:47,330
until like the CFP process completes

184
00:05:47,330 --> 00:05:48,770
this entire network is gonna be

185
00:05:48,770 --> 00:05:50,870
operating over open Wi-Fi so it follows

186
00:05:50,870 --> 00:05:53,419
then that this entire process should be

187
00:05:53,419 --> 00:05:54,949
attackable using Rho VP attacks and

188
00:05:54,949 --> 00:05:57,650
actually that is originally how you

189
00:05:57,650 --> 00:05:59,930
would gain access to wpa2 enterprise

190
00:05:59,930 --> 00:06:01,310
network is essentially you create your

191
00:06:01,310 --> 00:06:03,500
own and you know your own wireless

192
00:06:03,500 --> 00:06:05,630
access point with its own authentication

193
00:06:05,630 --> 00:06:07,610
server running in the background spoof

194
00:06:07,610 --> 00:06:09,110
the target network and force the client

195
00:06:09,110 --> 00:06:10,789
device to connect to you this point you

196
00:06:10,789 --> 00:06:12,259
present the client device in an x.509

197
00:06:12,259 --> 00:06:14,120
certificate if the client accepts a

198
00:06:14,120 --> 00:06:15,469
certificate a secure Tom's established

199
00:06:15,469 --> 00:06:17,389
with you and at this point the client

200
00:06:17,389 --> 00:06:18,770
authenticates with you and you're able

201
00:06:18,770 --> 00:06:21,650
to you essentially get a mschap e to

202
00:06:21,650 --> 00:06:23,599
challenge a response was can be cracked

203
00:06:23,599 --> 00:06:26,180
and that gives you radius credentials as

204
00:06:26,180 --> 00:06:27,500
the talk was first talked about by

205
00:06:27,500 --> 00:06:30,430
Brandon Tony was to 2008 and essentially

206
00:06:30,430 --> 00:06:33,380
you know yeah it's been around for one

207
00:06:33,380 --> 00:06:34,520
time it hasn't really fully been

208
00:06:34,520 --> 00:06:36,469
addressed yet so we mentioned mschap e

209
00:06:36,469 --> 00:06:38,690
to as the inter indication mechanism

210
00:06:38,690 --> 00:06:41,080
that's used you know to

211
00:06:41,080 --> 00:06:42,620
once we once we finish the

212
00:06:42,620 --> 00:06:43,880
authentication the thing that happens to

213
00:06:43,880 --> 00:06:45,530
the secure tunnel the inner

214
00:06:45,530 --> 00:06:47,330
authentication mechanism used by EVP pin

215
00:06:47,330 --> 00:06:50,300
even TTLs is called MSG avi - and Emmas

216
00:06:50,300 --> 00:06:52,670
Chevy - there are a couple ways that we

217
00:06:52,670 --> 00:06:54,200
can crack those I mean mschap you to

218
00:06:54,200 --> 00:06:55,640
challenge the responses that we that we

219
00:06:55,640 --> 00:06:58,100
captured the first one is a straight

220
00:06:58,100 --> 00:06:59,600
dictionary attack say just sequentially

221
00:06:59,600 --> 00:07:02,840
iterate over passwords anyone like kind

222
00:07:02,840 --> 00:07:04,310
of see like why that might take a long

223
00:07:04,310 --> 00:07:07,370
time yeah well actually we're actually

224
00:07:07,370 --> 00:07:10,400
in luck because emili´s Chevy 2 is

225
00:07:10,400 --> 00:07:12,050
actually vulnerable to something called

226
00:07:12,050 --> 00:07:13,820
a divide-and-conquer attack so basically

227
00:07:13,820 --> 00:07:15,980
to researchers named David marked Moxie

228
00:07:15,980 --> 00:07:18,110
Marlinspike and David Holton back in

229
00:07:18,110 --> 00:07:19,340
2012 they figured out that you could

230
00:07:19,340 --> 00:07:21,919
actually well the MFE - essentially was

231
00:07:21,919 --> 00:07:23,150
very very similar to 3des

232
00:07:23,150 --> 00:07:25,520
and you could actually reduce it to 56

233
00:07:25,520 --> 00:07:27,830
bits of DES encryption you know similar

234
00:07:27,830 --> 00:07:30,110
to what you can do with mes until mv1

235
00:07:30,110 --> 00:07:32,330
and because of this you can actually you

236
00:07:32,330 --> 00:07:33,860
know crack these things very very very

237
00:07:33,860 --> 00:07:36,590
very fast and in fact you know with

238
00:07:36,590 --> 00:07:38,900
their FPGA pace cracking rig they can

239
00:07:38,900 --> 00:07:40,640
actually do it in you know under 24

240
00:07:40,640 --> 00:07:42,110
hours a 100% success rate that's

241
00:07:42,110 --> 00:07:44,169
regardless of the length of the password

242
00:07:44,169 --> 00:07:46,880
so in other words to summarize if you

243
00:07:46,880 --> 00:07:48,740
have a situation in which with EAP

244
00:07:48,740 --> 00:07:50,990
peepin even TTLs you can force the visor

245
00:07:50,990 --> 00:07:52,220
to connect to you to authenticate with

246
00:07:52,220 --> 00:07:53,930
you and then once you get that those

247
00:07:53,930 --> 00:07:55,790
hashes that they send you in this in

248
00:07:55,790 --> 00:07:57,020
this authentication process you can

249
00:07:57,020 --> 00:07:58,400
crack them very quickly do the

250
00:07:58,400 --> 00:07:59,960
cryptograph you grab cryptographic

251
00:07:59,960 --> 00:08:03,500
weaknesses so here's this like a quick

252
00:08:03,500 --> 00:08:05,450
demo of essentially what this attack

253
00:08:05,450 --> 00:08:06,830
would look like you know the attacker

254
00:08:06,830 --> 00:08:14,630
would create a certificate and then

255
00:08:14,630 --> 00:08:20,140
would create the rogue access point and

256
00:08:20,140 --> 00:08:23,419
you can as you can see here right you

257
00:08:23,419 --> 00:08:25,100
know the access points enabled and

258
00:08:25,100 --> 00:08:27,350
you'll see a Emma Chaffee to challenge

259
00:08:27,350 --> 00:08:28,550
and response kind of pop up on the

260
00:08:28,550 --> 00:08:30,200
screen after the client associates it

261
00:08:30,200 --> 00:08:32,719
finishes authenticating and this will

262
00:08:32,719 --> 00:08:36,200
happen very shortly speed this along a

263
00:08:36,200 --> 00:08:37,010
little bit there we go

264
00:08:37,010 --> 00:08:39,169
so yeah the attacker then takes the Emma

265
00:08:39,169 --> 00:08:41,719
Chaffee to challenge a response in this

266
00:08:41,719 --> 00:08:42,950
demo there it's just like a dictionary

267
00:08:42,950 --> 00:08:45,170
attack because the divide-and-conquer

268
00:08:45,170 --> 00:08:46,670
this takes a little more time a little

269
00:08:46,670 --> 00:08:49,520
more work so but you know in this case

270
00:08:49,520 --> 00:08:52,360
you could just whoops

271
00:08:52,540 --> 00:08:57,680
it's a very sensitive keyboard all right

272
00:08:57,680 --> 00:08:59,590
there you go gonna leave that alone and

273
00:08:59,590 --> 00:09:01,430
so at this point you take the challenge

274
00:09:01,430 --> 00:09:03,260
response feed it to a asleep which is

275
00:09:03,260 --> 00:09:04,490
this tool that does a dictionary attack

276
00:09:04,490 --> 00:09:07,340
upon them and from there it will crack

277
00:09:07,340 --> 00:09:10,190
your password in this case it's like a

278
00:09:10,190 --> 00:09:11,510
really simple password so it's gonna get

279
00:09:11,510 --> 00:09:12,650
it very quickly but this could take a

280
00:09:12,650 --> 00:09:13,730
lot of time if you do the dictionary

281
00:09:13,730 --> 00:09:17,540
attack with a complex password so yeah I

282
00:09:17,540 --> 00:09:18,950
mean that's that's traditional weakness

283
00:09:18,950 --> 00:09:20,930
of EA pppt pppt less is that you can do

284
00:09:20,930 --> 00:09:23,030
that you can you can capture crunches

285
00:09:23,030 --> 00:09:24,680
that way the solution that was kind of

286
00:09:24,680 --> 00:09:26,270
introduced to mitigate this issue was

287
00:09:26,270 --> 00:09:28,820
something called EAP TLS and EAP TLS was

288
00:09:28,820 --> 00:09:32,060
introduced in 2008 and essentially uses

289
00:09:32,060 --> 00:09:33,260
a mutual certificate based

290
00:09:33,260 --> 00:09:35,720
authentication for the outer layer of

291
00:09:35,720 --> 00:09:38,180
authentication so in order to pass that

292
00:09:38,180 --> 00:09:41,150
outer layer of authentication you know

293
00:09:41,150 --> 00:09:42,860
basically both the client and the server

294
00:09:42,860 --> 00:09:44,990
have to present valid search to one

295
00:09:44,990 --> 00:09:47,060
another so you know this actually stops

296
00:09:47,060 --> 00:09:48,620
that stops the rogue ap attacks that we

297
00:09:48,620 --> 00:09:49,490
talked about earlier dead in their

298
00:09:49,490 --> 00:09:53,330
tracks the problem of EAP TLS is that

299
00:09:53,330 --> 00:09:54,760
you now have a situation any network

300
00:09:54,760 --> 00:09:57,020
administrators out there like anyone

301
00:09:57,020 --> 00:09:59,110
ever just like sis admin's I mean anyone

302
00:09:59,110 --> 00:10:02,860
Wow ok none ok well essentially um

303
00:10:02,860 --> 00:10:05,000
essentially that the problem is if you

304
00:10:05,000 --> 00:10:07,070
can imagine you're running a network and

305
00:10:07,070 --> 00:10:08,510
you now in order to deploy this thing

306
00:10:08,510 --> 00:10:09,860
you now have to install a client server

307
00:10:09,860 --> 00:10:10,850
on every single device on your network

308
00:10:10,850 --> 00:10:12,680
that can be kind of painful and

309
00:10:12,680 --> 00:10:14,450
time-consuming and if you have like a

310
00:10:14,450 --> 00:10:15,830
really large you know enterprise network

311
00:10:15,830 --> 00:10:17,840
it can also cost a lot of money if it's

312
00:10:17,840 --> 00:10:18,770
not something that you know you're

313
00:10:18,770 --> 00:10:21,140
already equipped to do so essentially

314
00:10:21,140 --> 00:10:22,400
you know it as a network administrator

315
00:10:22,400 --> 00:10:24,110
you kind of you know end up with this

316
00:10:24,110 --> 00:10:25,700
classic security versus convenience

317
00:10:25,700 --> 00:10:27,620
scenario where you kind of have

318
00:10:27,620 --> 00:10:29,240
authentication mechanism that you that

319
00:10:29,240 --> 00:10:30,620
you can choose but they have like known

320
00:10:30,620 --> 00:10:32,030
weaknesses but they're still pretty easy

321
00:10:32,030 --> 00:10:33,950
to use or you have a very very secure

322
00:10:33,950 --> 00:10:36,980
but also very impractical and method of

323
00:10:36,980 --> 00:10:40,190
authenticating with the network so you

324
00:10:40,190 --> 00:10:41,720
know essentially this creates a market

325
00:10:41,720 --> 00:10:43,700
gap and this market gap can be you know

326
00:10:43,700 --> 00:10:45,860
is for products that can can can

327
00:10:45,860 --> 00:10:47,240
essentially compensate for the security

328
00:10:47,240 --> 00:10:49,850
issues found in eep-eep eep-eep TTLs but

329
00:10:49,850 --> 00:10:52,430
are also easy to use so I mean the

330
00:10:52,430 --> 00:10:54,290
current trend in this regard is to focus

331
00:10:54,290 --> 00:10:55,430
on breach containment rather than breach

332
00:10:55,430 --> 00:10:56,750
prevention so in other words you

333
00:10:56,750 --> 00:10:58,630
acknowledge the risks associated with

334
00:10:58,630 --> 00:11:01,040
using these implementations of EAP and

335
00:11:01,040 --> 00:11:03,170
say you know what it's too expensive to

336
00:11:03,170 --> 00:11:04,940
employ EAP TLS instead

337
00:11:04,940 --> 00:11:06,260
focus on making sure that once an

338
00:11:06,260 --> 00:11:07,700
attacker gets on the network but they

339
00:11:07,700 --> 00:11:08,960
can't do any damage so you focus on

340
00:11:08,960 --> 00:11:11,420
breach containment and what we're gonna

341
00:11:11,420 --> 00:11:12,440
try to answer today is whether this

342
00:11:12,440 --> 00:11:16,070
actually works I'm just gonna like flip

343
00:11:16,070 --> 00:11:19,540
to this cartoon here before continue I

344
00:11:20,170 --> 00:11:25,630
can't draw as you can see all right so

345
00:11:25,630 --> 00:11:27,860
yeah so I mean that the most common way

346
00:11:27,860 --> 00:11:28,940
of approaching the problem of breach

347
00:11:28,940 --> 00:11:30,440
containment is to use an app and you

348
00:11:30,440 --> 00:11:31,670
know that's reasonable right because a

349
00:11:31,670 --> 00:11:34,040
network act an act mechanism or in a

350
00:11:34,040 --> 00:11:36,410
compliance you know case you don't know

351
00:11:36,410 --> 00:11:37,430
what it is it's it's a device that

352
00:11:37,430 --> 00:11:38,480
essentially is able to distinguish

353
00:11:38,480 --> 00:11:40,190
between authorized and unauthorised

354
00:11:40,190 --> 00:11:41,960
Network endpoints so in other words you

355
00:11:41,960 --> 00:11:43,430
connect a new device to the network and

356
00:11:43,430 --> 00:11:45,110
the night.the the nack is gonna do some

357
00:11:45,110 --> 00:11:46,610
kind of magic I'll go more into that

358
00:11:46,610 --> 00:11:49,250
later and and and by doing this it's

359
00:11:49,250 --> 00:11:50,720
able to identify whether the new network

360
00:11:50,720 --> 00:11:52,400
is authorized or unauthorized to be

361
00:11:52,400 --> 00:11:53,660
there if it's unauthorized it's gonna

362
00:11:53,660 --> 00:11:55,190
you know put it in a quarantine VLAN or

363
00:11:55,190 --> 00:11:56,480
it can't really do anything or it's

364
00:11:56,480 --> 00:11:59,360
gonna block the port entirely you can't

365
00:11:59,360 --> 00:12:00,350
really take the device off the network

366
00:12:00,350 --> 00:12:01,700
because the device obviously can get

367
00:12:01,700 --> 00:12:02,840
back on the network in the first place

368
00:12:02,840 --> 00:12:04,030
this was why we're using an ACK

369
00:12:04,030 --> 00:12:06,560
but anyways personally we have two

370
00:12:06,560 --> 00:12:07,880
varieties of nack we have agent based an

371
00:12:07,880 --> 00:12:10,040
accent agent let snacks and agent based

372
00:12:10,040 --> 00:12:11,270
max I mean sensor the way the work is

373
00:12:11,270 --> 00:12:12,680
you have a software component that's

374
00:12:12,680 --> 00:12:13,850
installed on every single authorized

375
00:12:13,850 --> 00:12:15,470
network on the endpoint on the network

376
00:12:15,470 --> 00:12:17,750
and the software component communicates

377
00:12:17,750 --> 00:12:19,280
with like this the centralized brain of

378
00:12:19,280 --> 00:12:21,560
the neck or the controller and and by

379
00:12:21,560 --> 00:12:22,820
doing this it's able to report back

380
00:12:22,820 --> 00:12:24,650
information about the internals of these

381
00:12:24,650 --> 00:12:26,090
devices and this is there so really

382
00:12:26,090 --> 00:12:27,710
effective unfortunately you're also now

383
00:12:27,710 --> 00:12:29,150
the situation where you have to deployed

384
00:12:29,150 --> 00:12:30,680
something on every single device in our

385
00:12:30,680 --> 00:12:32,090
network and this you know is kind of

386
00:12:32,090 --> 00:12:33,350
back to square one because needle is

387
00:12:33,350 --> 00:12:36,230
impractical as eap-tls on the other side

388
00:12:36,230 --> 00:12:38,030
inspecting we have agent list acts and

389
00:12:38,030 --> 00:12:39,710
these purely external methods you can

390
00:12:39,710 --> 00:12:41,090
pass the fingerprinting act of scanning

391
00:12:41,090 --> 00:12:42,680
and they're actually you know a lot

392
00:12:42,680 --> 00:12:43,940
easier to employ for this for this

393
00:12:43,940 --> 00:12:45,440
method because for these reasons because

394
00:12:45,440 --> 00:12:47,450
they actually don't require you to

395
00:12:47,450 --> 00:12:48,710
install something on every network

396
00:12:48,710 --> 00:12:50,390
endpoint unfortunately you're also

397
00:12:50,390 --> 00:12:51,950
unable to examine the internals of these

398
00:12:51,950 --> 00:12:53,780
devices so you can bypass them simply by

399
00:12:53,780 --> 00:12:57,410
masquerading as an authorized device so

400
00:12:57,410 --> 00:12:58,580
I mean once again this kind of leads us

401
00:12:58,580 --> 00:13:00,680
back to yet another you know kind of

402
00:13:00,680 --> 00:13:02,180
iteration of this dilemma of in security

403
00:13:02,180 --> 00:13:04,970
versus in practicality I which in turn

404
00:13:04,970 --> 00:13:06,589
you know creates another market gap

405
00:13:06,589 --> 00:13:08,210
there's like huge demand for solutions

406
00:13:08,210 --> 00:13:09,830
that offer deep interrogation

407
00:13:09,830 --> 00:13:11,360
capabilities of agent base knacks but

408
00:13:11,360 --> 00:13:12,700
don't have the additional overhead and

409
00:13:12,700 --> 00:13:14,810
this has led to the rise of something

410
00:13:14,810 --> 00:13:15,980
you know that what we usually call the

411
00:13:15,980 --> 00:13:17,750
next generation or we'll usually call

412
00:13:17,750 --> 00:13:18,829
next generation axe

413
00:13:18,829 --> 00:13:20,629
so you know what's kind of like position

414
00:13:20,629 --> 00:13:22,160
themselves to be the best of both worlds

415
00:13:22,160 --> 00:13:25,009
you know these usually use like a

416
00:13:25,009 --> 00:13:26,300
variety of techniques to do this I mean

417
00:13:26,300 --> 00:13:27,410
a lot of them like you know advertise

418
00:13:27,410 --> 00:13:28,550
themselves like machine learning based

419
00:13:28,550 --> 00:13:30,709
or whatever one really interesting one

420
00:13:30,709 --> 00:13:32,269
actually I tried to bring this device

421
00:13:32,269 --> 00:13:35,079
here because we have one in our building

422
00:13:35,079 --> 00:13:37,910
somewhere so I actually opened at the

423
00:13:37,910 --> 00:13:40,819
ticket to our IT department and yeah you

424
00:13:40,819 --> 00:13:42,410
can kind of guess how that what you're

425
00:13:42,410 --> 00:13:44,329
like actually not only that legal got

426
00:13:44,329 --> 00:13:47,839
involved was like like so yeah so like I

427
00:13:47,839 --> 00:13:49,839
actually can't legally name this device

428
00:13:49,839 --> 00:13:52,429
so we're gonna call this vendor a but I

429
00:13:52,429 --> 00:13:53,989
just want to pick on vendor a a bit

430
00:13:53,989 --> 00:13:55,220
because like it's a really good example

431
00:13:55,220 --> 00:13:56,779
of a well thought out attempt to bridge

432
00:13:56,779 --> 00:13:58,360
this gap but it doesn't actually work so

433
00:13:58,360 --> 00:14:00,649
vendor a actually uses WMI to

434
00:14:00,649 --> 00:14:02,149
interrogate new devices as they're added

435
00:14:02,149 --> 00:14:03,559
to the network so this is cool because

436
00:14:03,559 --> 00:14:04,910
it lets you you know perform these two

437
00:14:04,910 --> 00:14:06,589
deep internal checks without using an

438
00:14:06,589 --> 00:14:08,869
agent and the way that this works is

439
00:14:08,869 --> 00:14:10,100
that you know it essentially

440
00:14:10,100 --> 00:14:11,449
authenticates with new net network end

441
00:14:11,449 --> 00:14:13,069
points over SMB using a single

442
00:14:13,069 --> 00:14:14,720
administrative service account and this

443
00:14:14,720 --> 00:14:16,249
service account you naturally has to

444
00:14:16,249 --> 00:14:17,989
have remote login privileges in order to

445
00:14:17,989 --> 00:14:19,100
do this it has to have pretty deep

446
00:14:19,100 --> 00:14:23,829
administrative privileges d8 in order to

447
00:14:23,829 --> 00:14:25,879
be able to perform these internal checks

448
00:14:25,879 --> 00:14:27,470
and this is cool because it lets it

449
00:14:27,470 --> 00:14:28,730
perform these deep interrogation so you

450
00:14:28,730 --> 00:14:30,139
don't need an agent it's wonderful

451
00:14:30,139 --> 00:14:31,670
except it also creates a single point of

452
00:14:31,670 --> 00:14:33,949
failure you now have this device that

453
00:14:33,949 --> 00:14:35,389
you know has like god mode mode

454
00:14:35,389 --> 00:14:37,100
privileges that as soon as you put a new

455
00:14:37,100 --> 00:14:38,209
end point on the network it tries to

456
00:14:38,209 --> 00:14:40,429
authenticate with it you know over ntlm

457
00:14:40,429 --> 00:14:42,980
which you can relay to other things so

458
00:14:42,980 --> 00:14:45,199
naturally you know like if you don't set

459
00:14:45,199 --> 00:14:46,339
up your network with us and be signing

460
00:14:46,339 --> 00:14:47,600
you can just start and this thing's

461
00:14:47,600 --> 00:14:49,009
there you can just kind of add new

462
00:14:49,009 --> 00:14:50,209
endpoints the network and then relay

463
00:14:50,209 --> 00:14:52,459
these authentication attack attempts to

464
00:14:52,459 --> 00:14:54,410
basically anything you want unless you

465
00:14:54,410 --> 00:14:56,720
enable SMB signing which you know I

466
00:14:56,720 --> 00:14:57,799
guess I kind of stopped in your tracks

467
00:14:57,799 --> 00:14:59,059
from doing that but you still these if

468
00:14:59,059 --> 00:15:00,189
these these really really powerful

469
00:15:00,189 --> 00:15:02,240
hashes being sent to any of your device

470
00:15:02,240 --> 00:15:04,309
that is added to the network so that

471
00:15:04,309 --> 00:15:08,990
kind of sucks I mention that some be

472
00:15:08,990 --> 00:15:10,429
signing basically that's the process of

473
00:15:10,429 --> 00:15:14,419
signing packet for an authentic but ya

474
00:15:14,419 --> 00:15:15,709
know interesting thing about this vendor

475
00:15:15,709 --> 00:15:17,239
is that they actually you know they do

476
00:15:17,239 --> 00:15:18,949
offer if you if you if you kind of probe

477
00:15:18,949 --> 00:15:21,709
them about this they do actually offer a

478
00:15:21,709 --> 00:15:23,209
piece of software that you can install

479
00:15:23,209 --> 00:15:25,819
in on your network at endpoints to kind

480
00:15:25,819 --> 00:15:27,049
of prevent this this this kind of

481
00:15:27,049 --> 00:15:28,610
problem from occurring but when you

482
00:15:28,610 --> 00:15:29,629
think about doing that it sounds like

483
00:15:29,629 --> 00:15:31,579
they're talking a lot the subject

484
00:15:31,579 --> 00:15:32,570
they're talking about a

485
00:15:32,570 --> 00:15:34,160
like an agent pulled over again and

486
00:15:34,160 --> 00:15:35,330
considering the chief selling point here

487
00:15:35,330 --> 00:15:38,210
is that no agent is required yeah kind

488
00:15:38,210 --> 00:15:40,100
of back to square one again so the

489
00:15:40,100 --> 00:15:41,180
reason why I bring this up is it just

490
00:15:41,180 --> 00:15:42,710
kind of illustrates the point that there

491
00:15:42,710 --> 00:15:44,810
really is no magic bullet here security

492
00:15:44,810 --> 00:15:46,430
with convenient it really is a paradox

493
00:15:46,430 --> 00:15:48,440
and it ultimately comes down you have to

494
00:15:48,440 --> 00:15:49,730
have an honest business decision about

495
00:15:49,730 --> 00:15:51,530
how much of either one you wanted any

496
00:15:51,530 --> 00:15:54,830
given situation all right now we've

497
00:15:54,830 --> 00:15:55,430
talked about knacks

498
00:15:55,430 --> 00:15:56,960
another another cool thing we need to

499
00:15:56,960 --> 00:15:58,100
talk about in order to go back to what

500
00:15:58,100 --> 00:15:59,660
we originally you know going forwards is

501
00:15:59,660 --> 00:16:01,090
whether this containment thing works

502
00:16:01,090 --> 00:16:03,290
let's talk about client isolation on a

503
00:16:03,290 --> 00:16:05,600
wireless network so client isolation

504
00:16:05,600 --> 00:16:06,770
it's typically used to prevent wireless

505
00:16:06,770 --> 00:16:08,360
devices from communicating one another

506
00:16:08,360 --> 00:16:10,190
you can do it on a wired network too but

507
00:16:10,190 --> 00:16:11,360
a wireless network case actually uses a

508
00:16:11,360 --> 00:16:13,880
security control typical use case is a

509
00:16:13,880 --> 00:16:16,070
open network you know the way a tor 2.11

510
00:16:16,070 --> 00:16:17,840
is supposed to work and say we have

511
00:16:17,840 --> 00:16:18,980
these two laptops our character this

512
00:16:18,980 --> 00:16:20,570
network this this ap here supposed to

513
00:16:20,570 --> 00:16:23,180
act as a mediator between all traffic so

514
00:16:23,180 --> 00:16:24,590
if you know laptop a in the bottom left

515
00:16:24,590 --> 00:16:26,450
that's offbeat laptop being the bottom

516
00:16:26,450 --> 00:16:28,940
or top right are trying to communicate

517
00:16:28,940 --> 00:16:29,840
with one another

518
00:16:29,840 --> 00:16:31,640
if the AP doesn't want us to happen they

519
00:16:31,640 --> 00:16:34,220
can just start dropping packets and and

520
00:16:34,220 --> 00:16:37,100
this one occurred the problem is that

521
00:16:37,100 --> 00:16:38,360
you know at least on a wireless network

522
00:16:38,360 --> 00:16:40,040
client installation is a purely logical

523
00:16:40,040 --> 00:16:42,410
control you can't really prevent radio

524
00:16:42,410 --> 00:16:43,640
transceivers from communicating with one

525
00:16:43,640 --> 00:16:45,170
another and this was a point that was

526
00:16:45,170 --> 00:16:46,940
really seized upon by a research

527
00:16:46,940 --> 00:16:48,470
researcher named Cedric Blanchard in

528
00:16:48,470 --> 00:16:51,080
2005 and he introduced this really cool

529
00:16:51,080 --> 00:16:53,480
tool called Wi-Fi tap which was later

530
00:16:53,480 --> 00:16:55,520
revived by Oliver Lavery of GDS way

531
00:16:55,520 --> 00:16:58,250
before my time there but since we the

532
00:16:58,250 --> 00:16:59,390
way it works is a tree's packets from

533
00:16:59,390 --> 00:17:01,490
the victim to the AP using a Wi-Fi

534
00:17:01,490 --> 00:17:03,380
interface on monitor mode and injects

535
00:17:03,380 --> 00:17:04,730
response to those packages if they came

536
00:17:04,730 --> 00:17:06,980
from the AP this allows Wi-Fi tap to

537
00:17:06,980 --> 00:17:08,839
actually bypass client isolation and

538
00:17:08,839 --> 00:17:10,849
furthermore communicate with devices on

539
00:17:10,849 --> 00:17:12,650
an open network without actually being

540
00:17:12,650 --> 00:17:14,030
associated with that network in the

541
00:17:14,030 --> 00:17:18,079
first place so that's kind of like blows

542
00:17:18,079 --> 00:17:19,310
the whole like client insulation thing

543
00:17:19,310 --> 00:17:22,670
out of water so I mean there are some

544
00:17:22,670 --> 00:17:24,560
other tools that do similar stuff but

545
00:17:24,560 --> 00:17:26,449
with more capabilities so the aircraft

546
00:17:26,449 --> 00:17:29,510
suite has some really they have air town

547
00:17:29,510 --> 00:17:30,590
in G which is really cool because you

548
00:17:30,590 --> 00:17:33,050
can do this on a web network it has tkip

549
00:17:33,050 --> 00:17:34,610
ton in G which lets you do this on a WPA

550
00:17:34,610 --> 00:17:36,130
one Network although it's a lot slower

551
00:17:36,130 --> 00:17:38,570
and they're also like some theoretical

552
00:17:38,570 --> 00:17:39,980
attacks which honestly I don't really

553
00:17:39,980 --> 00:17:41,570
believe they work but it's I just kind

554
00:17:41,570 --> 00:17:42,530
of put them in here to be thorough

555
00:17:42,530 --> 00:17:44,630
there's whole 9196 which apparently

556
00:17:44,630 --> 00:17:46,100
theoretically it should be you should be

557
00:17:46,100 --> 00:17:46,430
able do

558
00:17:46,430 --> 00:17:49,660
wpa2 Network yeah I don't really know

559
00:17:49,660 --> 00:17:53,330
I've never actually seen it work so I

560
00:17:53,330 --> 00:17:54,710
mean here's demo how like Wi-Fi tap

561
00:17:54,710 --> 00:17:58,400
would work and essentially you know what

562
00:17:58,400 --> 00:18:00,020
we're gonna do here we have three VMs

563
00:18:00,020 --> 00:18:01,820
each represented by these terminals the

564
00:18:01,820 --> 00:18:03,110
top-right is gonna be a VM that's gonna

565
00:18:03,110 --> 00:18:05,000
host our access point actually this two

566
00:18:05,000 --> 00:18:06,470
VMs I'm sorry the host operating system

567
00:18:06,470 --> 00:18:08,990
two VMs and this this so we have the

568
00:18:08,990 --> 00:18:09,920
first VM which is our gonna be our

569
00:18:09,920 --> 00:18:11,690
access point the second VM which is our

570
00:18:11,690 --> 00:18:13,040
which is going to be our attacker and

571
00:18:13,040 --> 00:18:14,060
this is on the left here where I'm kind

572
00:18:14,060 --> 00:18:16,400
of moving my mouse and then the bottom

573
00:18:16,400 --> 00:18:18,320
right we're gonna have a terminal that's

574
00:18:18,320 --> 00:18:20,360
kind of synced to our host operating

575
00:18:20,360 --> 00:18:22,610
system so we've created a network using

576
00:18:22,610 --> 00:18:24,410
our first VM write a wireless network

577
00:18:24,410 --> 00:18:27,380
and we're gonna associate to with it

578
00:18:27,380 --> 00:18:28,970
using our host operating system as you

579
00:18:28,970 --> 00:18:31,460
can see so we've done that the first

580
00:18:31,460 --> 00:18:32,510
thing we're gonna do is we're going to

581
00:18:32,510 --> 00:18:36,740
send five IC IC MP packets from our host

582
00:18:36,740 --> 00:18:38,440
operating system so we've done that

583
00:18:38,440 --> 00:18:40,700
since five of them and as expected we

584
00:18:40,700 --> 00:18:43,310
receive five ICMP responses so there's

585
00:18:43,310 --> 00:18:44,570
this really cool proof-of-concept tool

586
00:18:44,570 --> 00:18:46,940
that comes with Wi-Fi tap you know and

587
00:18:46,940 --> 00:18:48,380
it's called Wi-Fi ping essentially all

588
00:18:48,380 --> 00:18:49,820
dozens and jack responses to ICMP

589
00:18:49,820 --> 00:18:50,690
packets it's a really cool

590
00:18:50,690 --> 00:18:52,070
proof-of-concept because it just really

591
00:18:52,070 --> 00:18:56,480
easily shows that you can do this so

592
00:18:56,480 --> 00:18:58,340
we're gonna send those five ICMP packets

593
00:18:58,340 --> 00:18:59,690
again but this time we're also gonna be

594
00:18:59,690 --> 00:19:01,220
running Wi-Fi ping from the attackers

595
00:19:01,220 --> 00:19:04,460
machine over here and as you can see

596
00:19:04,460 --> 00:19:06,680
despite the fact that we're sending five

597
00:19:06,680 --> 00:19:10,040
ICMP requests we're receiving ten ICMP

598
00:19:10,040 --> 00:19:13,190
responses and this attacker here is not

599
00:19:13,190 --> 00:19:14,930
even associated with that network so

600
00:19:14,930 --> 00:19:15,950
that really just demonstrates that

601
00:19:15,950 --> 00:19:18,500
client isolation is you know ultimately

602
00:19:18,500 --> 00:19:19,940
doesn't really work if you really want

603
00:19:19,940 --> 00:19:23,360
to try hard at getting around it but

604
00:19:23,360 --> 00:19:25,340
yeah you know that's enacting you know

605
00:19:25,340 --> 00:19:26,960
we were talking about whether knacks you

606
00:19:26,960 --> 00:19:28,070
know you know if they're effective or

607
00:19:28,070 --> 00:19:30,410
not identifying endpoints when they're

608
00:19:30,410 --> 00:19:31,880
authorized or unauthorized but I really

609
00:19:31,880 --> 00:19:32,960
think that that's actually missing the

610
00:19:32,960 --> 00:19:35,720
point because you know nak isn't really

611
00:19:35,720 --> 00:19:36,950
the only problem problem that you're

612
00:19:36,950 --> 00:19:38,780
dealing with on a wireless network you

613
00:19:38,780 --> 00:19:39,830
know if you think about the role in

614
00:19:39,830 --> 00:19:41,450
containing a wireless breach you're

615
00:19:41,450 --> 00:19:42,530
using it to prevent attackers from

616
00:19:42,530 --> 00:19:44,600
accessing sensitive information after

617
00:19:44,600 --> 00:19:46,730
the breach occurs you know the way that

618
00:19:46,730 --> 00:19:48,920
does this is if an unauthorized employ

619
00:19:48,920 --> 00:19:50,030
is detected you know you're gonna take

620
00:19:50,030 --> 00:19:51,770
one of two actions you're gonna place

621
00:19:51,770 --> 00:19:53,000
the endpoint in quarantine or you're

622
00:19:53,000 --> 00:19:55,580
gonna block the port so in other words

623
00:19:55,580 --> 00:19:56,720
you know violating an access control

624
00:19:56,720 --> 00:19:58,880
policy set forth by this nak it's going

625
00:19:58,880 --> 00:20:00,380
to call it an act to impose some privacy

626
00:20:00,380 --> 00:20:02,270
correction on this device and a wired

627
00:20:02,270 --> 00:20:03,230
network this is actually a physical

628
00:20:03,230 --> 00:20:05,630
restriction in a wireless network as we

629
00:20:05,630 --> 00:20:06,950
just you know slot with legislation

630
00:20:06,950 --> 00:20:08,210
there's gonna only be a logical

631
00:20:08,210 --> 00:20:11,390
restriction so I want you to imagine

632
00:20:11,390 --> 00:20:12,950
this scenario we've just actually you

633
00:20:12,950 --> 00:20:14,390
know we're on like a pen test or

634
00:20:14,390 --> 00:20:16,730
something or what you know and we've

635
00:20:16,730 --> 00:20:18,740
just you know gained access to a

636
00:20:18,740 --> 00:20:20,420
wireless network and unfortunately

637
00:20:20,420 --> 00:20:21,800
there's this been there's a snack here

638
00:20:21,800 --> 00:20:23,510
that was kind of waiting for us and it's

639
00:20:23,510 --> 00:20:25,310
placed us in a quarantine VLAN and so

640
00:20:25,310 --> 00:20:26,270
we're kind of dead in the water because

641
00:20:26,270 --> 00:20:27,140
we want to get over here to this

642
00:20:27,140 --> 00:20:28,730
restricted VLAN where we can access

643
00:20:28,730 --> 00:20:30,520
these sensitive resources

644
00:20:30,520 --> 00:20:32,360
unfortunately we know that we have one

645
00:20:32,360 --> 00:20:33,830
victim device already on this network

646
00:20:33,830 --> 00:20:35,330
and it's authorized and with the reason

647
00:20:35,330 --> 00:20:36,410
why we know that is because we would

648
00:20:36,410 --> 00:20:37,700
have had to attack this victim device to

649
00:20:37,700 --> 00:20:39,080
get access to this network in the first

650
00:20:39,080 --> 00:20:40,760
place using the technique that we saw in

651
00:20:40,760 --> 00:20:43,130
the very very beginning of this talk so

652
00:20:43,130 --> 00:20:44,090
the question is how do we get out of

653
00:20:44,090 --> 00:20:45,770
this how do we pivot from this

654
00:20:45,770 --> 00:20:47,210
quarantine VLAN to the restorative VLAN

655
00:20:47,210 --> 00:20:50,030
so before we you know talk about that we

656
00:20:50,030 --> 00:20:51,200
have to review a couple things one is

657
00:20:51,200 --> 00:20:52,810
element argument and betina's poisoning

658
00:20:52,810 --> 00:20:54,680
basically the way NetBIOS name

659
00:20:54,680 --> 00:20:56,150
resolution works is that you check your

660
00:20:56,150 --> 00:20:59,750
local cache and also you check your

661
00:20:59,750 --> 00:21:01,520
lmhosts so essentially when one Windows

662
00:21:01,520 --> 00:21:03,470
machine wants to talk to another Windows

663
00:21:03,470 --> 00:21:06,200
machine on a network right it's first

664
00:21:06,200 --> 00:21:07,730
going to check its local cache and also

665
00:21:07,730 --> 00:21:09,260
check it's like you know hard-coded host

666
00:21:09,260 --> 00:21:10,310
file which has a bunch of the names and

667
00:21:10,310 --> 00:21:12,380
IP addresses that result one another if

668
00:21:12,380 --> 00:21:14,000
all that fails it's going to attempt to

669
00:21:14,000 --> 00:21:17,270
use DNS you know it's gonna make the NS

670
00:21:17,270 --> 00:21:19,520
request to local name servers if that

671
00:21:19,520 --> 00:21:20,720
fails it's going to fall back to two

672
00:21:20,720 --> 00:21:22,550
protocols called Elliman RMB TNS which

673
00:21:22,550 --> 00:21:24,440
are you know implemented differently but

674
00:21:24,440 --> 00:21:26,930
basically behave the same way and the

675
00:21:26,930 --> 00:21:27,890
best way to understand how I'm an

676
00:21:27,890 --> 00:21:30,020
element rmb T Network is through example

677
00:21:30,020 --> 00:21:31,790
so we have two windows computers named

678
00:21:31,790 --> 00:21:34,130
Allison Leroy and Alice wants to request

679
00:21:34,130 --> 00:21:35,750
a file from Leroy because Leroy's a file

680
00:21:35,750 --> 00:21:38,900
server Alice does not know Leroy's IP so

681
00:21:38,900 --> 00:21:40,190
Alice is going to attempt to resolve

682
00:21:40,190 --> 00:21:41,660
Leroy's hostname

683
00:21:41,660 --> 00:21:43,940
both locally and also using DNS but say

684
00:21:43,940 --> 00:21:46,430
this fails at this point Alice will fall

685
00:21:46,430 --> 00:21:47,840
back to element R and n between s and

686
00:21:47,840 --> 00:21:49,790
and and by doing this else will actually

687
00:21:49,790 --> 00:21:51,980
send a broadcast request to every single

688
00:21:51,980 --> 00:21:54,020
host on alice's subnet and this

689
00:21:54,020 --> 00:21:56,090
broadcast is request is basically going

690
00:21:56,090 --> 00:21:58,850
to say hey are you Leroy if you are

691
00:21:58,850 --> 00:22:00,140
please send me a response with your IP

692
00:22:00,140 --> 00:22:01,880
address and of course you know every

693
00:22:01,880 --> 00:22:03,050
computer analysis summons can receive

694
00:22:03,050 --> 00:22:04,520
this and the idea is that only Leroy

695
00:22:04,520 --> 00:22:07,990
will respond yeah right

696
00:22:07,990 --> 00:22:10,340
this basically like creates a problem

697
00:22:10,340 --> 00:22:12,800
because you know you can just sit on you

698
00:22:12,800 --> 00:22:14,240
can just sit on the subnet and

699
00:22:14,240 --> 00:22:16,010
listen for these requests and if you see

700
00:22:16,010 --> 00:22:17,330
one you can just send a response to it

701
00:22:17,330 --> 00:22:19,760
and you know essentially providing the

702
00:22:19,760 --> 00:22:21,920
victim receive the response before your

703
00:22:21,920 --> 00:22:24,770
response before the before the

704
00:22:24,770 --> 00:22:27,200
legitimate you know computers that this

705
00:22:27,200 --> 00:22:28,309
is gonna you know essentially the first

706
00:22:28,309 --> 00:22:29,300
one's going to be considered valid the

707
00:22:29,300 --> 00:22:30,860
first one that the the targets and

708
00:22:30,860 --> 00:22:33,190
receive is going to consider ballot and

709
00:22:33,190 --> 00:22:36,170
this one actually let you force devices

710
00:22:36,170 --> 00:22:38,809
to send traffic to you as an attacker so

711
00:22:38,809 --> 00:22:39,830
it's a really effective and the middle

712
00:22:39,830 --> 00:22:43,700
attack and this is just kind of how it

713
00:22:43,700 --> 00:22:45,410
works essentially the most common tool

714
00:22:45,410 --> 00:22:46,550
for doing this is called responder by

715
00:22:46,550 --> 00:22:48,920
the way written by Lauren job Laurence

716
00:22:48,920 --> 00:22:55,280
Joffe and kind of kind of fast words the

717
00:22:55,280 --> 00:22:57,860
point we running so essentially the way

718
00:22:57,860 --> 00:22:59,000
this attack works is you're gonna have

719
00:22:59,000 --> 00:23:00,830
you know some poisoners here which gonna

720
00:23:00,830 --> 00:23:02,870
respond to these you know any of these

721
00:23:02,870 --> 00:23:04,730
MBT a necessary element are requests and

722
00:23:04,730 --> 00:23:06,170
you're going to also have authentication

723
00:23:06,170 --> 00:23:08,510
service on a variety of ports listening

724
00:23:08,510 --> 00:23:12,500
for this attempt to succeed so we're

725
00:23:12,500 --> 00:23:14,360
over here we're actually going to open

726
00:23:14,360 --> 00:23:16,670
up Explorer on our victim machine named

727
00:23:16,670 --> 00:23:18,830
Jenkins yes there is a machine named

728
00:23:18,830 --> 00:23:23,330
Leroy later on and we're gonna put in

729
00:23:23,330 --> 00:23:24,980
the name of a non-existent server well

730
00:23:24,980 --> 00:23:26,450
that's gonna do because the server

731
00:23:26,450 --> 00:23:27,559
doesn't actually exist it's going to

732
00:23:27,559 --> 00:23:29,360
force this device to fall back to Elmen

733
00:23:29,360 --> 00:23:31,940
REM BTS and the result is that hashes

734
00:23:31,940 --> 00:23:33,890
are going to happen very quickly as you

735
00:23:33,890 --> 00:23:36,200
can see already that causes the attacker

736
00:23:36,200 --> 00:23:39,860
be able to harvest hashes so yeah you

737
00:23:39,860 --> 00:23:41,300
know as far as our little escape attempt

738
00:23:41,300 --> 00:23:42,500
here that gives us a little bit of the

739
00:23:42,500 --> 00:23:45,140
way there let's talk about one more

740
00:23:45,140 --> 00:23:47,410
thing and that's redirect a sunbeam

741
00:23:47,410 --> 00:23:49,940
so the redirect S&B is an attack that

742
00:23:49,940 --> 00:23:51,860
was developed by some people at silence

743
00:23:51,860 --> 00:23:54,380
a few years ago and essentially the way

744
00:23:54,380 --> 00:23:55,820
that works is that you forced the victim

745
00:23:55,820 --> 00:23:57,710
to you to visit an HTTP endpoint so you

746
00:23:57,710 --> 00:24:00,650
provide them with a URL and it it this

747
00:24:00,650 --> 00:24:02,300
URL takes them to a server which

748
00:24:02,300 --> 00:24:04,160
instantly redirects them to a rogue SMB

749
00:24:04,160 --> 00:24:06,110
server on your machine so you basically

750
00:24:06,110 --> 00:24:08,450
make redirect into a file that you are

751
00:24:08,450 --> 00:24:10,280
hosting you're not really hosting it but

752
00:24:10,280 --> 00:24:11,809
you know you're listening on the port

753
00:24:11,809 --> 00:24:13,610
where it's gonna try to connect to this

754
00:24:13,610 --> 00:24:16,130
will actually cause them to to

755
00:24:16,130 --> 00:24:17,510
authenticate with you and by doing this

756
00:24:17,510 --> 00:24:19,490
you can capture ntlm hashes or relay

757
00:24:19,490 --> 00:24:21,800
this until my authentication attempts

758
00:24:21,800 --> 00:24:23,330
there's a variation of this where you

759
00:24:23,330 --> 00:24:26,840
actually redirect them to a non-existent

760
00:24:26,840 --> 00:24:28,130
SMB share instead which

761
00:24:28,130 --> 00:24:30,380
trigger element are MBT Ness but either

762
00:24:30,380 --> 00:24:31,400
way it's a pretty fast way to get

763
00:24:31,400 --> 00:24:32,720
hatchets it does require social

764
00:24:32,720 --> 00:24:35,630
engineering so this is the part of

765
00:24:35,630 --> 00:24:36,830
presentation where we actually got to do

766
00:24:36,830 --> 00:24:39,460
new stuff everyone's here

767
00:24:39,460 --> 00:24:45,590
yeah we made it this far let me do the

768
00:24:45,590 --> 00:24:48,490
time check really fast actually

769
00:24:49,520 --> 00:24:51,110
all right it's like 4 p.m.

770
00:24:51,110 --> 00:24:54,050
good we're doing great all right so

771
00:24:54,050 --> 00:24:55,880
hostile portal attacks they're actually

772
00:24:55,880 --> 00:24:57,260
a way that you could steal ad credits

773
00:24:57,260 --> 00:24:59,180
from wireless networks without network

774
00:24:59,180 --> 00:25:00,980
access this kind of ties into the next

775
00:25:00,980 --> 00:25:02,300
stuff we were talking about earlier but

776
00:25:02,300 --> 00:25:03,500
it's more like a stepping stone that we

777
00:25:03,500 --> 00:25:05,290
need to in order to pull off its attack

778
00:25:05,290 --> 00:25:07,640
so I I'm guessing you guys have seen

779
00:25:07,640 --> 00:25:08,750
something like this recently staying at

780
00:25:08,750 --> 00:25:11,150
this hotel or anywhere yeah so that's

781
00:25:11,150 --> 00:25:12,530
that's a captive portal and essentially

782
00:25:12,530 --> 00:25:14,090
the way that it works it's usually used

783
00:25:14,090 --> 00:25:15,380
to restrict access to open Wi-Fi

784
00:25:15,380 --> 00:25:16,940
networks and the way that they work is

785
00:25:16,940 --> 00:25:17,990
that you know when you pin to the

786
00:25:17,990 --> 00:25:19,580
network all your DNS queries are gonna

787
00:25:19,580 --> 00:25:21,530
be resolved to the location of that

788
00:25:21,530 --> 00:25:23,030
captive portal login page all your DNS

789
00:25:23,030 --> 00:25:25,190
traffic is gonna be redirected to the

790
00:25:25,190 --> 00:25:27,740
network owners DNS server so that you're

791
00:25:27,740 --> 00:25:29,090
forced to use this specially configured

792
00:25:29,090 --> 00:25:31,460
DNS server and additionally they'll

793
00:25:31,460 --> 00:25:34,190
usually you know redirect all your HTTP

794
00:25:34,190 --> 00:25:36,380
traffic to that login page as well so no

795
00:25:36,380 --> 00:25:37,970
matter what you do until you you know

796
00:25:37,970 --> 00:25:41,210
either entering credentials pay for or

797
00:25:41,210 --> 00:25:44,000
just spoof someone's MAC address you're

798
00:25:44,000 --> 00:25:45,410
forced to go back to here no matter what

799
00:25:45,410 --> 00:25:47,690
you do every time you send HTTP traffic

800
00:25:47,690 --> 00:25:49,880
pretty much so a hostile portal attack

801
00:25:49,880 --> 00:25:51,260
it kind of actually like ties in this

802
00:25:51,260 --> 00:25:53,300
this this captive portal concept with

803
00:25:53,300 --> 00:25:56,180
with the redirects SMB attack what

804
00:25:56,180 --> 00:25:57,980
happens is that when you when you launch

805
00:25:57,980 --> 00:25:59,750
a hostile portal the first thing you do

806
00:25:59,750 --> 00:26:01,490
is you use a rogue ap attack to force

807
00:26:01,490 --> 00:26:03,440
the victim device to associate with you

808
00:26:03,440 --> 00:26:05,360
once you do that now you're their

809
00:26:05,360 --> 00:26:07,460
gateway so that enables you to do kind

810
00:26:07,460 --> 00:26:09,080
of something similar to what we saw with

811
00:26:09,080 --> 00:26:10,160
the captive portal except that instead

812
00:26:10,160 --> 00:26:12,680
of redirecting their HTTP traffic to a

813
00:26:12,680 --> 00:26:14,330
login page we're going to redirect their

814
00:26:14,330 --> 00:26:17,120
HTTP traffic to an SMB share on your

815
00:26:17,120 --> 00:26:19,070
machine as we saw with the previous two

816
00:26:19,070 --> 00:26:20,720
attacks this will actually force their

817
00:26:20,720 --> 00:26:22,100
browser to attempt ntlm authentication

818
00:26:22,100 --> 00:26:26,980
with you so kind of show how this works

819
00:26:26,980 --> 00:26:30,440
and this in this scenario we have

820
00:26:30,440 --> 00:26:34,430
jenkins again and we have the legitimate

821
00:26:34,430 --> 00:26:35,630
access point in the top right in this

822
00:26:35,630 --> 00:26:37,430
terminal and we have the attackers over

823
00:26:37,430 --> 00:26:41,180
here in the left terminal and so jenkins

824
00:26:41,180 --> 00:26:41,960
the victims currently

825
00:26:41,960 --> 00:26:43,549
associated with this Network example

826
00:26:43,549 --> 00:26:48,440
Wi-Fi and here we're going to actually

827
00:26:48,440 --> 00:26:49,909
you know send somethi off packets and

828
00:26:49,909 --> 00:26:52,940
that's going to force Jenkins to roam

829
00:26:52,940 --> 00:26:54,679
over from the legitimate access point to

830
00:26:54,679 --> 00:26:56,240
the attackers access point and you see

831
00:26:56,240 --> 00:26:59,390
it's connected here the attacker is now

832
00:26:59,390 --> 00:27:03,890
going to open internet explorer and it

833
00:27:03,890 --> 00:27:05,179
goes to the home page and already we

834
00:27:05,179 --> 00:27:06,890
have hatched this because we you know

835
00:27:06,890 --> 00:27:08,779
sometimes defeat traffic actually if you

836
00:27:08,779 --> 00:27:10,220
see you know we're typing in the address

837
00:27:10,220 --> 00:27:11,929
bar there there's like this autocomplete

838
00:27:11,929 --> 00:27:13,250
feature where it's just every time you

839
00:27:13,250 --> 00:27:14,960
type a character it's making you HTTP

840
00:27:14,960 --> 00:27:16,730
requests to try to autocomplete for your

841
00:27:16,730 --> 00:27:18,500
little Bing search thing and that's just

842
00:27:18,500 --> 00:27:19,700
send the hashes to the attacker over and

843
00:27:19,700 --> 00:27:23,210
over again so that's a basic cost portal

844
00:27:23,210 --> 00:27:25,399
attack I guess an open network here

845
00:27:25,399 --> 00:27:27,260
we're talking about WPA EAP network so

846
00:27:27,260 --> 00:27:28,580
you actually have to you know bridge a

847
00:27:28,580 --> 00:27:29,899
couple more gasp before we can use an

848
00:27:29,899 --> 00:27:31,990
attack against an enterprise network so

849
00:27:31,990 --> 00:27:34,070
once again when we're talking about WPA

850
00:27:34,070 --> 00:27:36,289
EAP most cases we're talking about EEP

851
00:27:36,289 --> 00:27:39,289
EEP EEP and EPT TLS both of these used

852
00:27:39,289 --> 00:27:40,640
ms Chafee to is the inter authentication

853
00:27:40,640 --> 00:27:43,820
that method so an interesting thing

854
00:27:43,820 --> 00:27:45,169
about em is Chafee - it's a mutual

855
00:27:45,169 --> 00:27:46,610
authentication protocol you know this

856
00:27:46,610 --> 00:27:47,720
means that the radiance server actually

857
00:27:47,720 --> 00:27:49,399
has to prove knowledge of the supplicant

858
00:27:49,399 --> 00:27:51,350
faster the clients password for the

859
00:27:51,350 --> 00:27:54,590
interrupt n ocation to succeed so what

860
00:27:54,590 --> 00:27:56,809
this means is that although the attacker

861
00:27:56,809 --> 00:27:58,100
can force the victim to authenticate

862
00:27:58,100 --> 00:28:00,350
with the evil twin and use it to steal

863
00:28:00,350 --> 00:28:03,200
hashes or you know that can be cracked

864
00:28:03,200 --> 00:28:05,029
it actually the radius network the

865
00:28:05,029 --> 00:28:06,620
attacker actually cannot complete the

866
00:28:06,620 --> 00:28:08,990
entire authentication process because

867
00:28:08,990 --> 00:28:09,799
the very end of this authentication

868
00:28:09,799 --> 00:28:11,510
process the attacker has to prove

869
00:28:11,510 --> 00:28:12,950
knowledge of the victims password and if

870
00:28:12,950 --> 00:28:13,850
we knew the victims password who

871
00:28:13,850 --> 00:28:14,899
wouldn't be doing this attack in the

872
00:28:14,899 --> 00:28:18,649
first place so we have to we have to you

873
00:28:18,649 --> 00:28:20,330
know find a way around this problem and

874
00:28:20,330 --> 00:28:21,460
there are a couple ways you can do this

875
00:28:21,460 --> 00:28:24,890
for weak radius passwords the leg works

876
00:28:24,890 --> 00:28:26,419
actually already been done once again by

877
00:28:26,419 --> 00:28:27,649
Tom white and Ian de Villiers back in

878
00:28:27,649 --> 00:28:29,570
2014 they came up with a technique

879
00:28:29,570 --> 00:28:31,279
called Auto crack and AD which can be

880
00:28:31,279 --> 00:28:33,140
used for weak radius passwords to kind

881
00:28:33,140 --> 00:28:35,120
of get around this whole issue and we'll

882
00:28:35,120 --> 00:28:36,529
talk about that in a second and for

883
00:28:36,529 --> 00:28:38,840
stronger radius passwords once again

884
00:28:38,840 --> 00:28:39,860
remember that you can crack them as

885
00:28:39,860 --> 00:28:43,279
cheffy to challenge responses very very

886
00:28:43,279 --> 00:28:45,529
very quickly so you know the solution

887
00:28:45,529 --> 00:28:47,929
there simply to crack those offline you

888
00:28:47,929 --> 00:28:49,640
know come back the next day and then

889
00:28:49,640 --> 00:28:52,700
finish the attack so auto crack can add

890
00:28:52,700 --> 00:28:53,809
the way with it it works

891
00:28:53,809 --> 00:28:56,360
you know hostapd by the way is the name

892
00:28:56,360 --> 00:28:58,370
of the radius server that you

893
00:28:58,370 --> 00:29:00,290
traditionally use when you perform this

894
00:29:00,290 --> 00:29:02,420
kind of the style of the tap so at the

895
00:29:02,420 --> 00:29:04,040
very end of the MS happy to process

896
00:29:04,040 --> 00:29:05,570
authentication process this is what

897
00:29:05,570 --> 00:29:06,590
we're looking at actually is the the

898
00:29:06,590 --> 00:29:09,380
last two steps of MS jv2 authentication

899
00:29:09,380 --> 00:29:12,140
process this victim device is going to

900
00:29:12,140 --> 00:29:14,690
set a challenge response to the radius

901
00:29:14,690 --> 00:29:16,490
server or hostapd in this case now

902
00:29:16,490 --> 00:29:17,990
hostapd at this point is going to

903
00:29:17,990 --> 00:29:20,420
attempt to load the user's password from

904
00:29:20,420 --> 00:29:22,010
this this very special text file that

905
00:29:22,010 --> 00:29:23,360
stores the stuff in plain text the I

906
00:29:23,360 --> 00:29:26,270
know it's silly but yeah it's gonna

907
00:29:26,270 --> 00:29:27,860
attempt to load the users password from

908
00:29:27,860 --> 00:29:31,070
the EAP user file and you know using

909
00:29:31,070 --> 00:29:32,120
that password that's loaded from the EAP

910
00:29:32,120 --> 00:29:33,890
user file it's then going to construct

911
00:29:33,890 --> 00:29:36,440
the this authentication response which

912
00:29:36,440 --> 00:29:37,970
is used to prove knowledge of the

913
00:29:37,970 --> 00:29:39,890
victims password to the victim you know

914
00:29:39,890 --> 00:29:42,470
at this point it sends that to the

915
00:29:42,470 --> 00:29:44,809
victim with the authentication success

916
00:29:44,809 --> 00:29:46,820
message and the entire thing is succeeds

917
00:29:46,820 --> 00:29:48,919
the problem is that you know as we

918
00:29:48,919 --> 00:29:50,990
mentioned this this spot here where I'm

919
00:29:50,990 --> 00:29:52,400
kinda waving my mouse that's actually

920
00:29:52,400 --> 00:29:53,450
where this process is going to break

921
00:29:53,450 --> 00:29:55,580
down if you don't already know the

922
00:29:55,580 --> 00:29:58,400
victim's password right because we're

923
00:29:58,400 --> 00:30:00,140
you know they've sent us the child

924
00:30:00,140 --> 00:30:01,970
response but we don't have their their

925
00:30:01,970 --> 00:30:03,590
password or empty password hashes which

926
00:30:03,590 --> 00:30:05,510
is past your equivalent in the EP user

927
00:30:05,510 --> 00:30:08,140
file so this is gonna fail right there

928
00:30:08,140 --> 00:30:10,760
so I don't crack an ADD it's actually a

929
00:30:10,760 --> 00:30:11,780
really really cool technique and the way

930
00:30:11,780 --> 00:30:13,429
that it works is that instead of

931
00:30:13,429 --> 00:30:15,200
immediately loading or attempting to

932
00:30:15,200 --> 00:30:16,610
load the password from the if user file

933
00:30:16,610 --> 00:30:18,470
you take that challenge response and

934
00:30:18,470 --> 00:30:19,910
then shoot it off you may be just gonna

935
00:30:19,910 --> 00:30:22,130
make an API call to a remote cracking

936
00:30:22,130 --> 00:30:24,440
rig that's equipped to crack these

937
00:30:24,440 --> 00:30:27,410
things very very quickly so you send

938
00:30:27,410 --> 00:30:29,299
this challenge and response off to a

939
00:30:29,299 --> 00:30:31,100
cracking rig it kind of looks like a

940
00:30:31,100 --> 00:30:32,240
tool here in the top right if you can

941
00:30:32,240 --> 00:30:34,299
notice and then you know essentially

942
00:30:34,299 --> 00:30:37,490
once you crack that you receive the API

943
00:30:37,490 --> 00:30:40,130
response from the cracking rig then you

944
00:30:40,130 --> 00:30:42,080
just append the cracked a password or a

945
00:30:42,080 --> 00:30:44,870
password hash to the end of the EP user

946
00:30:44,870 --> 00:30:47,330
file at this point host hippety which is

947
00:30:47,330 --> 00:30:48,559
which is patched to do this by the way

948
00:30:48,559 --> 00:30:50,690
loads this pasture to pasture has from

949
00:30:50,690 --> 00:30:52,520
the EP user file as if nothing happened

950
00:30:52,520 --> 00:30:54,400
uses that's constructed the

951
00:30:54,400 --> 00:30:57,620
authentication response and from there

952
00:30:57,620 --> 00:30:59,980
you know this whole process concedes

953
00:30:59,980 --> 00:31:04,580
so that's Auto cracking add the second

954
00:31:04,580 --> 00:31:06,350
option as we talked about is to simply

955
00:31:06,350 --> 00:31:07,610
crack you know that the credentials

956
00:31:07,610 --> 00:31:10,040
offline and finish the attack later and

957
00:31:10,040 --> 00:31:11,720
you know once again with a the proper

958
00:31:11,720 --> 00:31:14,480
effigy it's fpga-based hardware I can't

959
00:31:14,480 --> 00:31:17,000
talk today or even just like

960
00:31:17,000 --> 00:31:18,350
sufficiently powerful for cracking great

961
00:31:18,350 --> 00:31:19,580
you're going to get really really good

962
00:31:19,580 --> 00:31:22,730
results usually within 24 hours so

963
00:31:22,730 --> 00:31:23,840
here's the same attack that we saw

964
00:31:23,840 --> 00:31:24,350
earlier

965
00:31:24,350 --> 00:31:26,300
this time we're leveraging this attack

966
00:31:26,300 --> 00:31:30,590
against a wpa2 EAP PEEP that work right

967
00:31:30,590 --> 00:31:32,420
we're using you know it's no longer an

968
00:31:32,420 --> 00:31:34,040
open network and we're using the auto

969
00:31:34,040 --> 00:31:37,340
crack and AD technique and as you see

970
00:31:37,340 --> 00:31:41,150
here this time it's not an open network

971
00:31:41,150 --> 00:31:42,380
the user is going to receive a

972
00:31:42,380 --> 00:31:46,490
certificate warning it's you notice it's

973
00:31:46,490 --> 00:31:47,630
not very descriptive by the way just

974
00:31:47,630 --> 00:31:49,010
says are you expecting this network to

975
00:31:49,010 --> 00:31:50,780
be here well considering you just

976
00:31:50,780 --> 00:31:52,460
connected to this network a few minutes

977
00:31:52,460 --> 00:31:54,770
ago probably but yeah as you can see it

978
00:31:54,770 --> 00:31:57,230
still succeeds and we have the ntlm v2

979
00:31:57,230 --> 00:31:58,760
hash that we were able to capture using

980
00:31:58,760 --> 00:32:02,030
the hostel portal tag so what is what

981
00:32:02,030 --> 00:32:03,020
does this attack get you it gets you

982
00:32:03,020 --> 00:32:04,730
lots and lots of ntlm hashes you know

983
00:32:04,730 --> 00:32:05,810
the results you get are actually very

984
00:32:05,810 --> 00:32:08,180
very similar to element rmb teen s

985
00:32:08,180 --> 00:32:09,410
poisoning but there are a few key

986
00:32:09,410 --> 00:32:11,150
advantages here and the the most glaring

987
00:32:11,150 --> 00:32:12,200
one is that you don't need direct

988
00:32:12,200 --> 00:32:13,640
network access which makes it stealthier

989
00:32:13,640 --> 00:32:16,220
you also are not limited to a local

990
00:32:16,220 --> 00:32:17,600
subnet now you get everything that's

991
00:32:17,600 --> 00:32:19,520
connected to a wireless the wireless

992
00:32:19,520 --> 00:32:21,140
network it's also not a passive attack

993
00:32:21,140 --> 00:32:23,090
you're not waiting for element REM UTS

994
00:32:23,090 --> 00:32:24,710
requests are similar to show up on the

995
00:32:24,710 --> 00:32:27,710
network you're forcing this to happen so

996
00:32:27,710 --> 00:32:28,580
back to a little scenario we were

997
00:32:28,580 --> 00:32:30,740
talking about we can actually build off

998
00:32:30,740 --> 00:32:32,690
this to do the second you know new thing

999
00:32:32,690 --> 00:32:34,550
that we're going to introduce today and

1000
00:32:34,550 --> 00:32:37,340
that's the indirect wireless pivot so

1001
00:32:37,340 --> 00:32:38,780
you can use this to bypass rogue if you

1002
00:32:38,780 --> 00:32:40,370
can use the bypass port based actual

1003
00:32:40,370 --> 00:32:42,380
control mechanisms on these networks

1004
00:32:42,380 --> 00:32:43,940
that we pretty much spent the first part

1005
00:32:43,940 --> 00:32:46,910
of the talk talking about so here's our

1006
00:32:46,910 --> 00:32:48,440
scenario again once again we are on this

1007
00:32:48,440 --> 00:32:50,630
quarantine VLAN and we want to get over

1008
00:32:50,630 --> 00:32:54,410
to this restricted VLAN so let's assume

1009
00:32:54,410 --> 00:32:56,060
by the way you know we already have the

1010
00:32:56,060 --> 00:32:58,970
victims of password hash and we know

1011
00:32:58,970 --> 00:33:01,300
this ten minutes we're good

1012
00:33:01,300 --> 00:33:06,140
awesome okay so yeah so let's assume by

1013
00:33:06,140 --> 00:33:08,270
the way that you know we already have

1014
00:33:08,270 --> 00:33:09,800
this victim's password hatch and the

1015
00:33:09,800 --> 00:33:11,060
reason why we know this is because we

1016
00:33:11,060 --> 00:33:12,080
would have had to capture this to get

1017
00:33:12,080 --> 00:33:13,880
all this network in the first place so

1018
00:33:13,880 --> 00:33:15,530
you know assume we assuming we have two

1019
00:33:15,530 --> 00:33:16,670
wireless interfaces and the first

1020
00:33:16,670 --> 00:33:17,660
wireless interface or the one with that

1021
00:33:17,660 --> 00:33:19,310
IP address on let's quarantine VLAN we

1022
00:33:19,310 --> 00:33:21,200
can use the second wireless interface to

1023
00:33:21,200 --> 00:33:22,670
use a rogue ap attack to force this

1024
00:33:22,670 --> 00:33:23,720
victim to connect

1025
00:33:23,720 --> 00:33:25,520
our second wireless interface at this

1026
00:33:25,520 --> 00:33:26,510
point we perform the hostile

1027
00:33:26,510 --> 00:33:28,190
portal-to-portal attack once again using

1028
00:33:28,190 --> 00:33:29,900
the second wireless interface and use

1029
00:33:29,900 --> 00:33:31,429
the capture and TLM hashes from the

1030
00:33:31,429 --> 00:33:33,559
victim at this point we crack that

1031
00:33:33,559 --> 00:33:35,480
hashes offline I mean we may not have to

1032
00:33:35,480 --> 00:33:37,039
come back and pick up the pick off the

1033
00:33:37,039 --> 00:33:39,860
attack where we left off but at this

1034
00:33:39,860 --> 00:33:41,240
point you know we essentially kill a

1035
00:33:41,240 --> 00:33:42,470
rogue access point and this allows the

1036
00:33:42,470 --> 00:33:43,730
victim to reassociate with the target

1037
00:33:43,730 --> 00:33:46,700
network so you know at this point this

1038
00:33:46,700 --> 00:33:48,950
this still is an authorized device so

1039
00:33:48,950 --> 00:33:51,500
you know at this point the the device

1040
00:33:51,500 --> 00:33:52,789
will get moved back to over to the

1041
00:33:52,789 --> 00:33:53,990
restricted VLAN which is where you want

1042
00:33:53,990 --> 00:33:55,820
to go and this point we wait for the

1043
00:33:55,820 --> 00:33:57,530
reverse shell and we've successfully

1044
00:33:57,530 --> 00:34:00,500
bypassed an app a better way of doing

1045
00:34:00,500 --> 00:34:02,600
this see use nasan be relay attack say

1046
00:34:02,600 --> 00:34:03,919
that we have two victims you know with

1047
00:34:03,919 --> 00:34:05,750
with an account that can access both do

1048
00:34:05,750 --> 00:34:07,400
the same thing forced them to connect to

1049
00:34:07,400 --> 00:34:09,830
your second wireless device perform the

1050
00:34:09,830 --> 00:34:11,239
SMB relay attack from one to the other

1051
00:34:11,239 --> 00:34:14,359
and then once again kill your rogue ap

1052
00:34:14,359 --> 00:34:15,980
and allowed them to reassociate the

1053
00:34:15,980 --> 00:34:17,719
target Network now just wait for the

1054
00:34:17,719 --> 00:34:19,219
reverse shell and you bypass the nak

1055
00:34:19,219 --> 00:34:22,010
once again so quick demo of this

1056
00:34:22,010 --> 00:34:31,940
happening so essentially we you know now

1057
00:34:31,940 --> 00:34:33,409
we have Leroy and Jenkins by the way

1058
00:34:33,409 --> 00:34:35,869
we're gonna be attacking and we have the

1059
00:34:35,869 --> 00:34:38,060
legitimate AP is gonna be over here on

1060
00:34:38,060 --> 00:34:40,010
the left the first thing we're going to

1061
00:34:40,010 --> 00:34:42,800
do is we're going to force these devices

1062
00:34:42,800 --> 00:34:46,849
to connect to us using a real ap attack

1063
00:34:46,849 --> 00:34:49,389
and you can see we just did that here

1064
00:34:49,389 --> 00:34:51,230
now we're gonna force the second device

1065
00:34:51,230 --> 00:34:57,940
to connect to us and then essentially

1066
00:34:57,940 --> 00:35:00,230
we're gonna start this SMB relay server

1067
00:35:00,230 --> 00:35:02,390
or use ion packet for that and we're

1068
00:35:02,390 --> 00:35:03,890
going to handle our duel of our agent

1069
00:35:03,890 --> 00:35:08,390
handling using Empire so the first thing

1070
00:35:08,390 --> 00:35:09,470
we do is we're actually gonna grab you

1071
00:35:09,470 --> 00:35:11,390
IP address of the victim device that

1072
00:35:11,390 --> 00:35:12,470
we're gonna try to you know pivot into

1073
00:35:12,470 --> 00:35:14,540
I'm gonna feed that to our SMB relay

1074
00:35:14,540 --> 00:35:18,470
server we are then going to generate

1075
00:35:18,470 --> 00:35:21,260
some HTTP traffic on one of our victim

1076
00:35:21,260 --> 00:35:22,640
devices and you can see this activity

1077
00:35:22,640 --> 00:35:24,080
here that's the SMB relay attack

1078
00:35:24,080 --> 00:35:27,050
actually happening this will give us an

1079
00:35:27,050 --> 00:35:30,440
agent on this device and we're gonna you

1080
00:35:30,440 --> 00:35:31,280
know this point fast-forward a little

1081
00:35:31,280 --> 00:35:32,810
bit the way we're going to do this is

1082
00:35:32,810 --> 00:35:34,339
were actually is a persistent module

1083
00:35:34,339 --> 00:35:36,140
persistence module that places a

1084
00:35:36,140 --> 00:35:37,250
scheduled task

1085
00:35:37,250 --> 00:35:39,080
on this system and his federal taxes

1086
00:35:39,080 --> 00:35:42,920
going to launch a reverse shell and this

1087
00:35:42,920 --> 00:35:45,380
reverse shell is going to execute you

1088
00:35:45,380 --> 00:35:47,030
know once once the devices are connected

1089
00:35:47,030 --> 00:35:48,680
back to the target network and it's

1090
00:35:48,680 --> 00:35:50,960
gonna give us that access so something

1091
00:35:50,960 --> 00:35:51,860
really interesting happened when I

1092
00:35:51,860 --> 00:35:53,390
actually recorded this which was that

1093
00:35:53,390 --> 00:35:55,130
you know I actually forgot to attach the

1094
00:35:55,130 --> 00:35:57,020
virtual USB interface and VMware so I

1095
00:35:57,020 --> 00:35:58,340
was like oh well this the sucks because

1096
00:35:58,340 --> 00:36:00,380
I'm gonna have to rerecord it but then

1097
00:36:00,380 --> 00:36:01,460
something really really interesting

1098
00:36:01,460 --> 00:36:02,930
happen and actually that's kind of why I

1099
00:36:02,930 --> 00:36:04,490
kept this little this little thing in

1100
00:36:04,490 --> 00:36:10,910
here essentially I had placed 120

1101
00:36:10,910 --> 00:36:13,640
retries that happened over an over 45

1102
00:36:13,640 --> 00:36:17,150
second period on this reverse shell so

1103
00:36:17,150 --> 00:36:18,620
in other words when I reconnected the

1104
00:36:18,620 --> 00:36:20,750
wireless interface and then went to you

1105
00:36:20,750 --> 00:36:22,010
know kind of like clear clear the

1106
00:36:22,010 --> 00:36:25,250
screens and and and restart this attack

1107
00:36:25,250 --> 00:36:26,720
it's just kind of you know start with

1108
00:36:26,720 --> 00:36:29,570
pick up where I left off I magically

1109
00:36:29,570 --> 00:36:32,600
received should see it bobby-pin a

1110
00:36:32,600 --> 00:36:34,850
second the reverse shell that I was

1111
00:36:34,850 --> 00:36:36,350
originally looking for and I thought

1112
00:36:36,350 --> 00:36:37,310
that was kind of cool so I left it in

1113
00:36:37,310 --> 00:36:38,270
there because it proves a really good

1114
00:36:38,270 --> 00:36:39,380
point about like really persistent

1115
00:36:39,380 --> 00:36:41,000
implants is the fact that you know you

1116
00:36:41,000 --> 00:36:42,140
can you can't actually design something

1117
00:36:42,140 --> 00:36:43,850
that will just you know doggedly try to

1118
00:36:43,850 --> 00:36:45,260
like connect back to you despite the

1119
00:36:45,260 --> 00:36:47,650
fact that if you can't do so immediately

1120
00:36:47,650 --> 00:36:50,030
so that's indirect Wireless pivot you

1121
00:36:50,030 --> 00:36:52,280
know the equivalent technique on a wired

1122
00:36:52,280 --> 00:36:53,180
network would be literally like

1123
00:36:53,180 --> 00:36:54,560
unplugging the authorized device from

1124
00:36:54,560 --> 00:36:56,180
the wall checking to a hostile network

1125
00:36:56,180 --> 00:36:57,860
on which you can attack it and the

1126
00:36:57,860 --> 00:36:59,570
reason why this works is it for support

1127
00:36:59,570 --> 00:37:02,120
based yeah I love that movie so the

1128
00:37:02,120 --> 00:37:03,380
reason why it's attack works is that

1129
00:37:03,380 --> 00:37:05,030
port based action controls they rely on

1130
00:37:05,030 --> 00:37:06,290
the assumption of the physical layer can

1131
00:37:06,290 --> 00:37:08,090
be trusted in a wireless network

1132
00:37:08,090 --> 00:37:09,980
wpa2 EAP is the means to us the

1133
00:37:09,980 --> 00:37:11,330
integrity of physical layer protected

1134
00:37:11,330 --> 00:37:14,090
when a weak form of wpa2 EAP is used

1135
00:37:14,090 --> 00:37:15,590
this means the attacker can actually

1136
00:37:15,590 --> 00:37:17,450
freely control the physical layer and by

1137
00:37:17,450 --> 00:37:18,530
doing this this actually renders

1138
00:37:18,530 --> 00:37:20,960
port-based nak mechanisms useless what

1139
00:37:20,960 --> 00:37:23,060
this demonstrates is that port based nak

1140
00:37:23,060 --> 00:37:24,350
mechanisms they don't effectively

1141
00:37:24,350 --> 00:37:26,600
mitigate the risk presented by weak wpa2

1142
00:37:26,600 --> 00:37:29,090
EAP implications and you know

1143
00:37:29,090 --> 00:37:30,500
furthermore it also demonstrates that

1144
00:37:30,500 --> 00:37:32,060
adding port based nak mechanisms to

1145
00:37:32,060 --> 00:37:33,800
wireless networks that does not make the

1146
00:37:33,800 --> 00:37:35,870
use of EAP TLS or if you keep any less

1147
00:37:35,870 --> 00:37:37,700
inappropriate if the network in question

1148
00:37:37,700 --> 00:37:39,620
is used to grant access to sensitive

1149
00:37:39,620 --> 00:37:42,380
information so you know before we wrap

1150
00:37:42,380 --> 00:37:43,910
this up gonna make one last is you know

1151
00:37:43,910 --> 00:37:45,740
kind of case for using EAP TLS it's

1152
00:37:45,740 --> 00:37:47,330
really not as bad as it used to be you

1153
00:37:47,330 --> 00:37:48,920
can use you can actually leverage group

1154
00:37:48,920 --> 00:37:50,810
policy quite extensively to configure

1155
00:37:50,810 --> 00:37:53,210
8'o 2.1 ex-clients your best options

1156
00:37:53,210 --> 00:37:55,430
really to use a private CA to leverage

1157
00:37:55,430 --> 00:37:57,530
ad as much as possible to deploy eap-tls

1158
00:37:57,530 --> 00:37:59,150
and you can even you know distribute the

1159
00:37:59,150 --> 00:38:01,520
server sort to clients and if you're

1160
00:38:01,520 --> 00:38:03,440
like in a BYOD situation you can use a

1161
00:38:03,440 --> 00:38:05,270
really streamlined view ID on board a

1162
00:38:05,270 --> 00:38:07,730
solution or an MDM to disturb you the

1163
00:38:07,730 --> 00:38:10,010
search that way and actually you can

1164
00:38:10,010 --> 00:38:11,450
even use lots and Cripps although like

1165
00:38:11,450 --> 00:38:12,950
even on let scripts website they're like

1166
00:38:12,950 --> 00:38:14,090
this is probably not the best way to do

1167
00:38:14,090 --> 00:38:16,490
this but I mean that is an option as

1168
00:38:16,490 --> 00:38:18,650
well so just some closing thoughts

1169
00:38:18,650 --> 00:38:20,480
just because wireless and wired networks

1170
00:38:20,480 --> 00:38:23,210
operate in the same way at the logical

1171
00:38:23,210 --> 00:38:25,010
level it's important to remember that

1172
00:38:25,010 --> 00:38:26,300
they don't necessarily operate the same

1173
00:38:26,300 --> 00:38:28,100
way at the physical level so that's

1174
00:38:28,100 --> 00:38:28,940
something to keep in mind when designing

1175
00:38:28,940 --> 00:38:30,440
security controls for wireless networks

1176
00:38:30,440 --> 00:38:32,420
and also has the community we really

1177
00:38:32,420 --> 00:38:33,530
should question whether it's a truly a

1178
00:38:33,530 --> 00:38:35,120
sound business decision to neglect

1179
00:38:35,120 --> 00:38:37,190
eap-tls in favor of a more reactive

1180
00:38:37,190 --> 00:38:38,810
approach that forced us on actions

1181
00:38:38,810 --> 00:38:40,540
control and threat containment and

1182
00:38:40,540 --> 00:38:43,250
finally if there's one thing to take

1183
00:38:43,250 --> 00:38:45,320
away from this talk it's that this needs

1184
00:38:45,320 --> 00:38:46,610
for security and convenience are really

1185
00:38:46,610 --> 00:38:48,710
often at odds with one another so it's

1186
00:38:48,710 --> 00:38:49,760
really important to maintain a healthy

1187
00:38:49,760 --> 00:38:51,320
skepticism towards solutions that really

1188
00:38:51,320 --> 00:38:56,350
promise to be both of those thank you

1189
00:39:03,460 --> 00:39:10,340
cyber questions okay any questions no

1190
00:39:10,340 --> 00:39:19,120
questions all right cool use or we got

1191
00:39:20,740 --> 00:39:23,780
the slides shoot actually like I don't

1192
00:39:23,780 --> 00:39:26,720
know where the slides are yet I guess

1193
00:39:26,720 --> 00:39:27,710
like check the hacks test Twitter

1194
00:39:27,710 --> 00:39:28,790
because I'll light just tweeted at them

1195
00:39:28,790 --> 00:39:30,920
and then the slides will be there does

1196
00:39:30,920 --> 00:39:33,980
that work all right cool awesome sauce

1197
00:39:33,980 --> 00:39:37,370
some other hands over there okay anyone

1198
00:39:37,370 --> 00:39:48,880
else no really all right that was easy

