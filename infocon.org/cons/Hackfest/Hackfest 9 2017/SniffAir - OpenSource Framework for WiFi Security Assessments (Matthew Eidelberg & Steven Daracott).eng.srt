1
00:00:00,469 --> 00:00:02,879
so here to talk about sniff air it's an

2
00:00:02,879 --> 00:00:11,700
open source wireless framework so Who am

3
00:00:11,700 --> 00:00:12,300
I

4
00:00:12,300 --> 00:00:13,920
Matthew Adelberg I'm a security

5
00:00:13,920 --> 00:00:16,440
consultant in an optics attacking Penn

6
00:00:16,440 --> 00:00:19,740
team the co-author of this tool

7
00:00:19,740 --> 00:00:21,420
Steven Derek OTT unfortunately he is

8
00:00:21,420 --> 00:00:24,180
unable to be here today due to family

9
00:00:24,180 --> 00:00:26,490
obligations he's also a security

10
00:00:26,490 --> 00:00:29,039
consultant in Optus attacking Penn team

11
00:00:29,039 --> 00:00:31,650
and for the most part we're responsible

12
00:00:31,650 --> 00:00:34,920
for a majority of the wireless testing

13
00:00:34,920 --> 00:00:37,350
that we do as well as methodology and

14
00:00:37,350 --> 00:00:39,239
basically troubleshooting when the

15
00:00:39,239 --> 00:00:43,559
hits the fan so before we talk about the

16
00:00:43,559 --> 00:00:45,120
tool let's talk about wireless pen

17
00:00:45,120 --> 00:00:51,360
testing why so I like to tell clients is

18
00:00:51,360 --> 00:00:54,960
yeah having internet Wireless in your

19
00:00:54,960 --> 00:00:56,699
infrastructure is great but it's also

20
00:00:56,699 --> 00:00:58,530
like running Ethernet to your parking

21
00:00:58,530 --> 00:01:00,270
lot you don't know who's there you don't

22
00:01:00,270 --> 00:01:02,039
know who's seeing this stuff you don't

23
00:01:02,039 --> 00:01:04,860
know who's connected especially with how

24
00:01:04,860 --> 00:01:07,250
the trends with wireless technology is

25
00:01:07,250 --> 00:01:09,360
has more and more devices are becoming

26
00:01:09,360 --> 00:01:11,100
integrated with wireless light bulbs

27
00:01:11,100 --> 00:01:15,030
fridges cars TVs more and more devices

28
00:01:15,030 --> 00:01:21,720
are connecting and broadcasting so what

29
00:01:21,720 --> 00:01:24,479
do we look for what we do when we're

30
00:01:24,479 --> 00:01:26,130
doing wireless line testing typically is

31
00:01:26,130 --> 00:01:28,110
that we want to fingerprint the access

32
00:01:28,110 --> 00:01:30,259
points as well as the client devices

33
00:01:30,259 --> 00:01:33,540
this allows us to identify any malicious

34
00:01:33,540 --> 00:01:37,770
or rogue access points in clients or

35
00:01:37,770 --> 00:01:40,799
environments once we've done that we can

36
00:01:40,799 --> 00:01:42,570
also analyze the traffic between the

37
00:01:42,570 --> 00:01:45,500
legitimate access points and the clients

38
00:01:45,500 --> 00:01:47,909
with this information we can then begin

39
00:01:47,909 --> 00:01:51,600
to build comprehensive attacks based on

40
00:01:51,600 --> 00:01:53,579
this information we gather this

41
00:01:53,579 --> 00:01:56,579
information by either passively or

42
00:01:56,579 --> 00:02:00,960
actively and actively we send packets we

43
00:02:00,960 --> 00:02:02,909
create Pat wireless package we send them

44
00:02:02,909 --> 00:02:05,340
to the clients and the access points see

45
00:02:05,340 --> 00:02:07,590
how they respond what they send back to

46
00:02:07,590 --> 00:02:10,348
us or we possibly listen as a lot of

47
00:02:10,348 --> 00:02:14,569
this wireless traffic is unencrypted

48
00:02:14,569 --> 00:02:17,129
when I say unencrypted I'm talking about

49
00:02:17,129 --> 00:02:19,920
the management to pack packets including

50
00:02:19,920 --> 00:02:22,459
beacon frames so this is one of the four

51
00:02:22,459 --> 00:02:25,079
packets that we often look for when

52
00:02:25,079 --> 00:02:26,250
trying to understand and get a lay of

53
00:02:26,250 --> 00:02:30,569
the land so beacon frames are their

54
00:02:30,569 --> 00:02:32,840
purpose is to announce the presence

55
00:02:32,840 --> 00:02:35,579
themselves in an area they typically

56
00:02:35,579 --> 00:02:37,829
broadcast their physical address from

57
00:02:37,829 --> 00:02:41,250
address as well as the SSID which is the

58
00:02:41,250 --> 00:02:43,170
network name the wireless network to

59
00:02:43,170 --> 00:02:45,750
dissociate themselves from other ones in

60
00:02:45,750 --> 00:02:47,670
the area they also contain information

61
00:02:47,670 --> 00:02:50,700
about the encryption the channel that

62
00:02:50,700 --> 00:02:52,230
they sit on as well as other

63
00:02:52,230 --> 00:02:54,329
authentication information this

64
00:02:54,329 --> 00:02:56,849
information is sent out unencrypted

65
00:02:56,849 --> 00:02:58,980
allowing other clients to see and if

66
00:02:58,980 --> 00:03:00,840
they need to they can connect they know

67
00:03:00,840 --> 00:03:02,430
that this is the network in this area

68
00:03:02,430 --> 00:03:04,019
that they want to connect to this

69
00:03:04,019 --> 00:03:05,519
information is very good for us when

70
00:03:05,519 --> 00:03:06,510
we're fingerprinting trying to

71
00:03:06,510 --> 00:03:09,030
understand what type of attacks we want

72
00:03:09,030 --> 00:03:12,359
to proceed with so the next set of

73
00:03:12,359 --> 00:03:17,069
attacks our frames are pros there are

74
00:03:17,069 --> 00:03:19,199
two types of probes we often the first

75
00:03:19,199 --> 00:03:22,769
one is requests probe requests are sent

76
00:03:22,769 --> 00:03:28,139
by clients to look for any Masai D in

77
00:03:28,139 --> 00:03:30,150
range that they've previously connected

78
00:03:30,150 --> 00:03:34,410
to they send out these packets hey is X

79
00:03:34,410 --> 00:03:38,310
in vicinity my Mac my address is why

80
00:03:38,310 --> 00:03:40,739
they send out this information their own

81
00:03:40,739 --> 00:03:42,299
MAC address as well as what they're

82
00:03:42,299 --> 00:03:44,280
looking for if they don't get a response

83
00:03:44,280 --> 00:03:46,949
they move to the next channel and repeat

84
00:03:46,949 --> 00:03:49,440
the process until they receive a

85
00:03:49,440 --> 00:03:52,349
connection this connection only occurs

86
00:03:52,349 --> 00:03:55,440
when an access point sent a probe

87
00:03:55,440 --> 00:03:57,750
response which is a response to that

88
00:03:57,750 --> 00:04:00,389
request packet which basically says I'm

89
00:04:00,389 --> 00:04:02,180
part of that network you're looking for

90
00:04:02,180 --> 00:04:04,799
here is the information that you need to

91
00:04:04,799 --> 00:04:06,780
be compatible with in order for you to

92
00:04:06,780 --> 00:04:09,479
successfully connect and that is the

93
00:04:09,479 --> 00:04:14,010
data rate the type of encryption and the

94
00:04:14,010 --> 00:04:16,048
authentication schemas and ciphers have

95
00:04:16,048 --> 00:04:18,510
to be compatible they're not there's a

96
00:04:18,510 --> 00:04:21,800
rejection and the connection is broken

97
00:04:21,800 --> 00:04:25,669
once this is all done the next step

98
00:04:25,669 --> 00:04:28,580
authentication eat packets occur which

99
00:04:28,580 --> 00:04:31,270
is an extensible authentication protocol

100
00:04:31,270 --> 00:04:33,680
like I said it handles authentication

101
00:04:33,680 --> 00:04:35,800
there are many different types of

102
00:04:35,800 --> 00:04:38,779
authentication set it supports ranging

103
00:04:38,779 --> 00:04:42,229
from credentials to tokens to TLS

104
00:04:42,229 --> 00:04:46,580
certificates most of these methods

105
00:04:46,580 --> 00:04:49,340
require a radius server which handles

106
00:04:49,340 --> 00:04:51,169
the authentication for the access points

107
00:04:51,169 --> 00:04:53,659
this makes the access point in turn act

108
00:04:53,659 --> 00:04:56,120
as an Authenticator which basically like

109
00:04:56,120 --> 00:04:58,430
a man-in-the-middle device when a client

110
00:04:58,430 --> 00:05:00,400
sends a request it takes that

111
00:05:00,400 --> 00:05:02,120
authentication information those II

112
00:05:02,120 --> 00:05:05,389
packets and sends them to the radius

113
00:05:05,389 --> 00:05:07,729
server the range server then processes

114
00:05:07,729 --> 00:05:11,120
the request and if it's the credentials

115
00:05:11,120 --> 00:05:12,650
are valid and the requirements are met

116
00:05:12,650 --> 00:05:14,960
we'll send a success and that

117
00:05:14,960 --> 00:05:17,300
Authenticator will then allow that

118
00:05:17,300 --> 00:05:20,240
device access if there isn't I'll send

119
00:05:20,240 --> 00:05:23,539
it nine and the Authenticator will and

120
00:05:23,539 --> 00:05:28,520
terminate the communication so with all

121
00:05:28,520 --> 00:05:30,589
that type of stuff here's an example of

122
00:05:30,589 --> 00:05:34,669
the typical tool you would see out when

123
00:05:34,669 --> 00:05:35,569
you're fingerprinting in trying to

124
00:05:35,569 --> 00:05:36,710
gather a lot of information

125
00:05:36,710 --> 00:05:39,379
these tools are have a plethora of

126
00:05:39,379 --> 00:05:40,849
information but they can be a little

127
00:05:40,849 --> 00:05:43,129
clumsy and complex and hard to really

128
00:05:43,129 --> 00:05:44,300
get an understanding of what you're

129
00:05:44,300 --> 00:05:47,360
looking at as you can see the

130
00:05:47,360 --> 00:05:49,279
information is set up in such a way that

131
00:05:49,279 --> 00:05:53,270
it's two bars one that will grow one

132
00:05:53,270 --> 00:05:55,899
that grows on top of each other heis

133
00:05:55,899 --> 00:05:59,500
sorry so sorry can you guys hear me now

134
00:05:59,500 --> 00:06:07,689
there's five yes okay so as you can see

135
00:06:07,689 --> 00:06:11,110
the MAC address of the access points the

136
00:06:11,110 --> 00:06:14,539
power when you hear about power when it

137
00:06:14,539 --> 00:06:16,819
comes to wireless it's denoted as how

138
00:06:16,819 --> 00:06:19,129
close you are it's done in a Nega

139
00:06:19,129 --> 00:06:21,680
negative range and what it discerns is

140
00:06:21,680 --> 00:06:23,539
the smaller the value the closer you are

141
00:06:23,539 --> 00:06:25,399
so obviously you want to look for the

142
00:06:25,399 --> 00:06:27,229
ones that are close by and not worry

143
00:06:27,229 --> 00:06:29,060
about the ones that are in the eighties

144
00:06:29,060 --> 00:06:31,639
100 range as that's when communications

145
00:06:31,639 --> 00:06:35,479
can start become limited and delays can

146
00:06:35,479 --> 00:06:37,729
happen you can also see the channel that

147
00:06:37,729 --> 00:06:39,800
they sit on as well as the type of

148
00:06:39,800 --> 00:06:42,530
Seifer and authentication they use if

149
00:06:42,530 --> 00:06:44,420
you look here at the bottom you can see

150
00:06:44,420 --> 00:06:49,130
at number eight Pro what this denotes is

151
00:06:49,130 --> 00:06:51,500
that these are the clients looking for

152
00:06:51,500 --> 00:06:53,660
an axe and for a network so these are

153
00:06:53,660 --> 00:06:56,540
what they're probing for and you can see

154
00:06:56,540 --> 00:06:59,950
the clients MAC address at station and

155
00:06:59,950 --> 00:07:02,090
whether or not they actually connect it

156
00:07:02,090 --> 00:07:03,920
so this is a lot of great information

157
00:07:03,920 --> 00:07:05,270
but it's sometimes hard to read

158
00:07:05,270 --> 00:07:06,650
especially if it's coming in in real

159
00:07:06,650 --> 00:07:08,810
time as you can sometimes overwrite

160
00:07:08,810 --> 00:07:11,570
pushing that bottom bar all the way off

161
00:07:11,570 --> 00:07:12,860
the screen making it hard for you to

162
00:07:12,860 --> 00:07:16,160
understand what you see another thing

163
00:07:16,160 --> 00:07:19,130
that a lot of tools do is that when

164
00:07:19,130 --> 00:07:21,830
looking for or detecting hidden access

165
00:07:21,830 --> 00:07:24,110
points ones that do not broadcast their

166
00:07:24,110 --> 00:07:27,320
name if they detect a sequence of

167
00:07:27,320 --> 00:07:30,170
packets probe requests sent by a client

168
00:07:30,170 --> 00:07:32,390
looking for a certain access point and

169
00:07:32,390 --> 00:07:35,570
if that hidden SF access point responds

170
00:07:35,570 --> 00:07:38,480
to that SSID it will mark it down that

171
00:07:38,480 --> 00:07:40,910
this is the name of it which is fine but

172
00:07:40,910 --> 00:07:42,620
it doesn't actually tell you this which

173
00:07:42,620 --> 00:07:43,880
sometimes makes it harder when you're

174
00:07:43,880 --> 00:07:47,660
trying to identify hidden SS IDs in your

175
00:07:47,660 --> 00:07:48,200
environment

176
00:07:48,200 --> 00:07:50,540
there's no way to detect this I'll talk

177
00:07:50,540 --> 00:07:55,820
more about that and a little bit so the

178
00:07:55,820 --> 00:07:57,560
attachments these are the common ones

179
00:07:57,560 --> 00:08:00,020
that we see a lot and we have the most

180
00:08:00,020 --> 00:08:01,960
success with these are not all of them

181
00:08:01,960 --> 00:08:05,450
more and more coming out every time

182
00:08:05,450 --> 00:08:06,950
they're depending on the environment

183
00:08:06,950 --> 00:08:08,630
there's always a different way of doing

184
00:08:08,630 --> 00:08:10,820
it I like to tell people that Wireless

185
00:08:10,820 --> 00:08:16,460
is less science it's more of an art when

186
00:08:16,460 --> 00:08:16,940
we get down

187
00:08:16,940 --> 00:08:18,710
but these are the type of common network

188
00:08:18,710 --> 00:08:20,690
setups like I said it's more of an art

189
00:08:20,690 --> 00:08:22,880
these are not an inclusive list these

190
00:08:22,880 --> 00:08:25,150
are the most common ones that we see

191
00:08:25,150 --> 00:08:27,830
enterprises use and they can be using a

192
00:08:27,830 --> 00:08:30,410
combination where they have one network

193
00:08:30,410 --> 00:08:33,049
meant for their company or corporate

194
00:08:33,049 --> 00:08:36,260
devices a second one meant for guests or

195
00:08:36,260 --> 00:08:39,919
BYOD devices and that typically is

196
00:08:39,919 --> 00:08:42,169
either like a captive portal where

197
00:08:42,169 --> 00:08:44,900
there's no encryption at all but you are

198
00:08:44,900 --> 00:08:46,760
presented with a web application log and

199
00:08:46,760 --> 00:08:49,730
field and it could be a set of

200
00:08:49,730 --> 00:08:51,710
credentials valid domain credentials or

201
00:08:51,710 --> 00:08:53,690
may be a common phrase that's shared

202
00:08:53,690 --> 00:08:55,910
between teams or floors or just one for

203
00:08:55,910 --> 00:08:56,830
the whole company

204
00:08:56,830 --> 00:09:02,120
another one is wpa2 pre-shared keys this

205
00:09:02,120 --> 00:09:05,540
is passphrase that is used the single

206
00:09:05,540 --> 00:09:09,500
passphrase and a multiple devices can

207
00:09:09,500 --> 00:09:10,940
authenticate using the same passphrase

208
00:09:10,940 --> 00:09:13,790
what we see more and more is enterprise

209
00:09:13,790 --> 00:09:16,400
level authentication schemas as well as

210
00:09:16,400 --> 00:09:19,990
ciphers and those are deep fast which

211
00:09:19,990 --> 00:09:22,880
cisco has recently and adopted into what

212
00:09:22,880 --> 00:09:25,670
they call deep chaining where you chain

213
00:09:25,670 --> 00:09:27,620
series of authentication together so

214
00:09:27,620 --> 00:09:29,510
that would be passing a set of

215
00:09:29,510 --> 00:09:30,020
credentials

216
00:09:30,020 --> 00:09:34,460
maybe it's laptops long search name with

217
00:09:34,460 --> 00:09:37,190
pre shared key and then their own

218
00:09:37,190 --> 00:09:40,220
software like cisco anyconnect cisco

219
00:09:40,220 --> 00:09:43,010
mobile clients VPN and if that had

220
00:09:43,010 --> 00:09:44,570
changed a series of authentication of

221
00:09:44,570 --> 00:09:46,610
each one of them is met that device is

222
00:09:46,610 --> 00:09:50,600
then allowed access to the network the

223
00:09:50,600 --> 00:09:52,820
next one is peat which is which is

224
00:09:52,820 --> 00:09:55,160
referred to as protected leaf in which

225
00:09:55,160 --> 00:09:57,170
credentials are sent down an encrypted

226
00:09:57,170 --> 00:10:00,050
tunnel because of how old this protocol

227
00:10:00,050 --> 00:10:02,690
is there's a systemic flaw with it that

228
00:10:02,690 --> 00:10:04,580
we offer a lot of people often don't

229
00:10:04,580 --> 00:10:07,370
realize is that yes this tunnel is

230
00:10:07,370 --> 00:10:08,960
encrypted and credentials are sent down

231
00:10:08,960 --> 00:10:12,890
but not all of it is encrypted usernames

232
00:10:12,890 --> 00:10:16,370
are sent in clear text and once that is

233
00:10:16,370 --> 00:10:19,280
received then the tunnel is created

234
00:10:19,280 --> 00:10:22,640
sending the encrypted password so if you

235
00:10:22,640 --> 00:10:24,650
were to look at it like this you have

236
00:10:24,650 --> 00:10:26,480
your whole company they have a

237
00:10:26,480 --> 00:10:29,750
Blackberry iPhone laptop they're all

238
00:10:29,750 --> 00:10:30,800
sending out

239
00:10:30,800 --> 00:10:34,760
their usernames out into the air for

240
00:10:34,760 --> 00:10:36,950
anyone to collect before they enter in

241
00:10:36,950 --> 00:10:39,740
their password and that's a lot of stuff

242
00:10:39,740 --> 00:10:41,140
you can do with that for attack vectors

243
00:10:41,140 --> 00:10:44,180
the next one we talk and typically see

244
00:10:44,180 --> 00:10:46,190
this one's a little bit more difficult

245
00:10:46,190 --> 00:10:49,790
to implement his EEP TLS in which each

246
00:10:49,790 --> 00:10:53,329
devices given their own TLS cert this is

247
00:10:53,329 --> 00:10:55,130
the issue with this from an attackers

248
00:10:55,130 --> 00:10:56,930
point of view is that comes on to

249
00:10:56,930 --> 00:10:59,899
cracking the encryption and TLS to my

250
00:10:59,899 --> 00:11:01,790
knowledge as at this point hasn't been

251
00:11:01,790 --> 00:11:06,399
broken like the current teeth TLS 1.2

252
00:11:06,430 --> 00:11:09,019
what I was saying before about difficult

253
00:11:09,019 --> 00:11:11,990
is that it's hard to manage each search

254
00:11:11,990 --> 00:11:15,620
you have to manage it for laptops the

255
00:11:15,620 --> 00:11:17,690
employees devices do they have a

256
00:11:17,690 --> 00:11:19,760
secondary device or sorry tertiary

257
00:11:19,760 --> 00:11:23,360
device and if your company has over 200

258
00:11:23,360 --> 00:11:25,040
or 400 people that can be a lot of

259
00:11:25,040 --> 00:11:28,790
things to manage the next one is ET TLS

260
00:11:28,790 --> 00:11:31,610
which is a combination of peep and EEP

261
00:11:31,610 --> 00:11:35,779
TLS in which first an EEP TLS session is

262
00:11:35,779 --> 00:11:39,560
created at which point a peep tunnel is

263
00:11:39,560 --> 00:11:43,810
created in through that TLS tunnel

264
00:11:43,810 --> 00:11:48,279
sending those in those credentials down

265
00:11:48,459 --> 00:11:53,060
so what is sniffing so sniffer is an

266
00:11:53,060 --> 00:11:55,279
open source wireless framework its

267
00:11:55,279 --> 00:11:57,920
primary purpose is to provide a way to

268
00:11:57,920 --> 00:12:00,740
collect manage and analyze large amounts

269
00:12:00,740 --> 00:12:04,089
of traffic from pee taps or live capture

270
00:12:04,089 --> 00:12:07,579
when we typically get on sites we are

271
00:12:07,579 --> 00:12:10,520
not just asked ok walk around or try to

272
00:12:10,520 --> 00:12:13,699
hack it's here is our building of 40

273
00:12:13,699 --> 00:12:15,740
floors we want you to walk each single

274
00:12:15,740 --> 00:12:17,750
one of them looking for malicious

275
00:12:17,750 --> 00:12:20,990
traffic so 40 floors that's a lot of

276
00:12:20,990 --> 00:12:23,089
traffic hard to manage it hard to figure

277
00:12:23,089 --> 00:12:25,490
out when you go back and review where

278
00:12:25,490 --> 00:12:27,890
did this access point match up which

279
00:12:27,890 --> 00:12:30,890
floor where is it when you go back so we

280
00:12:30,890 --> 00:12:33,079
developed this as a way help alleviate

281
00:12:33,079 --> 00:12:35,510
that stress and manage it's a way you

282
00:12:35,510 --> 00:12:38,899
can focus more on the analysis and the

283
00:12:38,899 --> 00:12:41,410
attempts

284
00:12:43,170 --> 00:12:46,810
so it takes offline data or you can feed

285
00:12:46,810 --> 00:12:50,230
it using a wireless interface a live

286
00:12:50,230 --> 00:12:52,450
captured data what it does is we

287
00:12:52,450 --> 00:12:54,010
developed a comprehensive fingerprinting

288
00:12:54,010 --> 00:12:56,980
engine using Python and scampi and what

289
00:12:56,980 --> 00:12:59,980
it does is it breaks down each packet in

290
00:12:59,980 --> 00:13:02,230
groups into one of four categories it's

291
00:13:02,230 --> 00:13:04,329
in an access point is it a probe request

292
00:13:04,329 --> 00:13:06,820
is it a probe response or is it an

293
00:13:06,820 --> 00:13:08,910
enterprise authentication base packet

294
00:13:08,910 --> 00:13:12,100
once that's done it then parses each of

295
00:13:12,100 --> 00:13:14,350
those packets looking for the important

296
00:13:14,350 --> 00:13:16,930
information that we just discussed and

297
00:13:16,930 --> 00:13:19,540
then storing it into a string into the

298
00:13:19,540 --> 00:13:23,200
tip into a database once that's done it

299
00:13:23,200 --> 00:13:24,579
compresses it look making sure that

300
00:13:24,579 --> 00:13:27,190
there's only unique values so you as we

301
00:13:27,190 --> 00:13:28,930
know that access points clients they are

302
00:13:28,930 --> 00:13:30,970
constantly probing out looking for the

303
00:13:30,970 --> 00:13:33,459
same information so you could have 100

304
00:13:33,459 --> 00:13:36,730
or 200 of the same packet information in

305
00:13:36,730 --> 00:13:37,930
your database so what we've done is

306
00:13:37,930 --> 00:13:40,420
we've stripped all that out so you only

307
00:13:40,420 --> 00:13:42,190
look at this unique one so you can focus

308
00:13:42,190 --> 00:13:44,440
and drill down more into the information

309
00:13:44,440 --> 00:13:48,250
you want to see not duplicates so I've

310
00:13:48,250 --> 00:13:50,200
talked enough about this so let me show

311
00:13:50,200 --> 00:14:02,079
you this everyone can see this okay just

312
00:14:02,079 --> 00:14:10,200
shout out if you have trouble scenes so

313
00:14:10,200 --> 00:14:13,839
like I said you can feed in live capture

314
00:14:13,839 --> 00:14:18,700
data or offline stuff you can also store

315
00:14:18,700 --> 00:14:20,950
them in what we call workspaces so I've

316
00:14:20,950 --> 00:14:23,290
done that already so we can kinda show

317
00:14:23,290 --> 00:14:25,570
you how you can use this tool so I'm

318
00:14:25,570 --> 00:14:27,999
gonna load up this workspace

319
00:14:27,999 --> 00:14:31,939
and each time you load it up or if after

320
00:14:31,939 --> 00:14:33,920
you feed in in information you get a

321
00:14:33,920 --> 00:14:36,499
little dashboard and you can see right

322
00:14:36,499 --> 00:14:37,550
now the top

323
00:14:37,550 --> 00:14:43,639
yes s IDs in this workspace now we also

324
00:14:43,639 --> 00:14:45,170
provide you a feature called in scope

325
00:14:45,170 --> 00:14:46,639
which I'll talk a bit more about that

326
00:14:46,639 --> 00:14:48,649
allows you to just focus in on the ones

327
00:14:48,649 --> 00:14:51,110
you care about say maybe your task to

328
00:14:51,110 --> 00:14:53,149
find out anything that's happening on a

329
00:14:53,149 --> 00:14:56,389
certain access less our network so you

330
00:14:56,389 --> 00:14:58,220
can focus in bayson using the in scope

331
00:14:58,220 --> 00:15:01,249
command to separate everything related

332
00:15:01,249 --> 00:15:03,529
to that network into separate tables and

333
00:15:03,529 --> 00:15:05,809
it will create a separate dashboard for

334
00:15:05,809 --> 00:15:08,749
you of information so let me show you

335
00:15:08,749 --> 00:15:15,410
the first table so first thing I just

336
00:15:15,410 --> 00:15:17,899
want to say is this database has over

337
00:15:17,899 --> 00:15:21,230
500 200 and 75 rows and just in this

338
00:15:21,230 --> 00:15:24,410
table so this is in demo mode the one on

339
00:15:24,410 --> 00:15:26,059
the that way you're using that's out

340
00:15:26,059 --> 00:15:28,100
there right now is not so you see the

341
00:15:28,100 --> 00:15:30,049
full table I just wanted you guys give

342
00:15:30,049 --> 00:15:31,790
you a good example of how a table can

343
00:15:31,790 --> 00:15:34,519
look so you can see right now all that

344
00:15:34,519 --> 00:15:35,420
information I was talking about

345
00:15:35,420 --> 00:15:37,189
previously is here for you

346
00:15:37,189 --> 00:15:40,610
with regards to the power level we only

347
00:15:40,610 --> 00:15:44,209
record sniff it only reports the closest

348
00:15:44,209 --> 00:15:46,279
the lowest value because that's the

349
00:15:46,279 --> 00:15:49,879
closest you were to that access point so

350
00:15:49,879 --> 00:15:58,010
the next table is the probe rook

351
00:15:58,010 --> 00:16:00,410
table so these would be the client

352
00:16:00,410 --> 00:16:03,410
devices looking for certain ones you can

353
00:16:03,410 --> 00:16:06,170
see the vendor that of that device who

354
00:16:06,170 --> 00:16:12,500
manufactured it the next one is the

355
00:16:12,500 --> 00:16:15,790
probe response

356
00:16:16,209 --> 00:16:21,379
so in this table we see the access point

357
00:16:21,379 --> 00:16:24,230
that responded what name Wireless name

358
00:16:24,230 --> 00:16:26,690
that they respond with who manufactured

359
00:16:26,690 --> 00:16:27,079
it

360
00:16:27,079 --> 00:16:29,449
what channel they sit on what are the

361
00:16:29,449 --> 00:16:31,009
requirements of encryption

362
00:16:31,009 --> 00:16:33,019
authentication that they need as well as

363
00:16:33,019 --> 00:16:40,459
which client did they respond to the

364
00:16:40,459 --> 00:16:42,829
last table I'll show you right now it's

365
00:16:42,829 --> 00:16:45,649
the enterprise tail so as you can see I

366
00:16:45,649 --> 00:16:47,029
was talking about that before there's a

367
00:16:47,029 --> 00:16:51,019
issue with Deepthi protocol where user

368
00:16:51,019 --> 00:16:53,569
names are sent out in clear text so what

369
00:16:53,569 --> 00:16:54,589
we've done is we pulled out the

370
00:16:54,589 --> 00:16:56,810
information so you can find out the MAC

371
00:16:56,810 --> 00:17:00,290
address of the device the user name from

372
00:17:00,290 --> 00:17:02,810
which access point they sent it to now

373
00:17:02,810 --> 00:17:05,179
this information is great because some

374
00:17:05,179 --> 00:17:08,230
clients may set up rules that say only

375
00:17:08,230 --> 00:17:12,829
Alice can log in from this specific MAC

376
00:17:12,829 --> 00:17:15,199
address so with that information here

377
00:17:15,199 --> 00:17:17,990
you can spoof the MAC address you have

378
00:17:17,990 --> 00:17:19,909
the username all you have to do is get

379
00:17:19,909 --> 00:17:21,679
the user for the password somehow

380
00:17:21,679 --> 00:17:25,609
there's other ways to get that now it's

381
00:17:25,609 --> 00:17:27,319
not just limited just to those tables

382
00:17:27,319 --> 00:17:30,049
you can perform other requests so if you

383
00:17:30,049 --> 00:17:32,390
wanted to see all of a certain value in

384
00:17:32,390 --> 00:17:35,240
across all the tables you can just use

385
00:17:35,240 --> 00:17:37,340
the show command so you can do show

386
00:17:37,340 --> 00:17:41,030
channels show encryption or just show

387
00:17:41,030 --> 00:17:43,309
you SSID so this will show you every

388
00:17:43,309 --> 00:17:45,350
single SSID across all the tables

389
00:17:45,350 --> 00:17:50,240
reported in your current workspace so

390
00:17:50,240 --> 00:17:53,110
some of these might be devices that

391
00:17:53,110 --> 00:17:55,340
client devices I've connected elsewhere

392
00:17:55,340 --> 00:17:57,919
like maybe random hotspots home networks

393
00:17:57,919 --> 00:18:00,260
they're probing which we could use to

394
00:18:00,260 --> 00:18:02,570
create evil twins to get them to connect

395
00:18:02,570 --> 00:18:07,789
to us I also mentioned a little bit of

396
00:18:07,789 --> 00:18:10,100
go about the in scope table so I'm going

397
00:18:10,100 --> 00:18:12,470
to show you kind of what you can do with

398
00:18:12,470 --> 00:18:14,450
that and why we really may feel like

399
00:18:14,450 --> 00:18:16,610
this is a very important part of sniff

400
00:18:16,610 --> 00:18:19,460
error so what we're going to do is we'll

401
00:18:19,460 --> 00:18:25,659
put 2 SS IDs in the Ensco so

402
00:18:29,169 --> 00:18:31,519
so what it's done is it's gone through

403
00:18:31,519 --> 00:18:33,559
each of those four tables looking for

404
00:18:33,559 --> 00:18:37,070
information related to those networks

405
00:18:37,070 --> 00:18:39,769
and created separate tables loading them

406
00:18:39,769 --> 00:18:40,340
into it

407
00:18:40,340 --> 00:18:43,639
so now you can do queries maybe look at

408
00:18:43,639 --> 00:18:45,289
a dashboard get just a sense of what

409
00:18:45,289 --> 00:18:47,149
you're looking at we've created a module

410
00:18:47,149 --> 00:18:54,769
called SSID info but what you can see

411
00:18:54,769 --> 00:18:57,379
here is you get a brief dashboard of all

412
00:18:57,379 --> 00:19:01,210
the access points broadcasting that SSID

413
00:19:01,210 --> 00:19:05,480
the vendor who manufactured it all the

414
00:19:05,480 --> 00:19:07,340
channels that they're sitting on and the

415
00:19:07,340 --> 00:19:09,950
Ginetta the at all the encryption that

416
00:19:09,950 --> 00:19:11,629
they use so you can see right here that

417
00:19:11,629 --> 00:19:17,779
hahahahaa is an unencrypted network that

418
00:19:17,779 --> 00:19:20,570
sits on eleven six one forty eight forty

419
00:19:20,570 --> 00:19:23,840
forty four and two you can also see that

420
00:19:23,840 --> 00:19:26,540
star labs

421
00:19:26,540 --> 00:19:32,360
sits on 11:48 6 and 48 however there's

422
00:19:32,360 --> 00:19:34,640
two types of encryption so that's kind

423
00:19:34,640 --> 00:19:36,520
of weird whether it would there be too

424
00:19:36,520 --> 00:19:38,510
significantly different sets of

425
00:19:38,510 --> 00:19:41,750
encryption I'll talk more about that in

426
00:19:41,750 --> 00:19:45,290
a little bit but we saw before a lot of

427
00:19:45,290 --> 00:19:47,960
hidden SS items so I mentioned that

428
00:19:47,960 --> 00:19:49,640
briefly talking about other tools how

429
00:19:49,640 --> 00:19:52,070
they just changed the value for you so

430
00:19:52,070 --> 00:19:54,170
we have a module that passively probes

431
00:19:54,170 --> 00:19:56,900
all these tables looking for all the

432
00:19:56,900 --> 00:20:00,590
hidden SSIDs looks to see if a client

433
00:20:00,590 --> 00:20:03,800
requested a certain name and if one of

434
00:20:03,800 --> 00:20:06,500
those hidden responded to it you can do

435
00:20:06,500 --> 00:20:09,010
that by using the show to use the hidden

436
00:20:09,010 --> 00:20:12,200
SSID and what that will do is it will

437
00:20:12,200 --> 00:20:16,070
parse through and update for you in the

438
00:20:16,070 --> 00:20:19,600
access point table all of these as well

439
00:20:19,600 --> 00:20:25,040
create its own table for you to see in

440
00:20:25,040 --> 00:20:26,540
query so now you know these are all the

441
00:20:26,540 --> 00:20:27,860
ones you discovered that were previously

442
00:20:27,860 --> 00:20:33,560
hidden now say for instance you wanted

443
00:20:33,560 --> 00:20:36,080
to look at something specific we provide

444
00:20:36,080 --> 00:20:37,670
you the option to do your own custom

445
00:20:37,670 --> 00:20:40,670
queries using the query option so you

446
00:20:40,670 --> 00:20:42,890
show you an example of that but it uses

447
00:20:42,890 --> 00:20:46,330
just SQL syntax

448
00:21:17,280 --> 00:21:20,320
and you can see that we've updated in

449
00:21:20,320 --> 00:21:22,630
the access point table that this is no

450
00:21:22,630 --> 00:21:24,820
longer a hidden SSID we now see it as

451
00:21:24,820 --> 00:21:28,960
the name that it's actually so going

452
00:21:28,960 --> 00:21:30,700
back I mentioned that was kind of odd

453
00:21:30,700 --> 00:21:35,260
about by an access point so why network

454
00:21:35,260 --> 00:21:38,590
has two different types of encryption so

455
00:21:38,590 --> 00:21:40,390
we have a couple of modules that allow

456
00:21:40,390 --> 00:21:41,800
you to kind of get a better sense of

457
00:21:41,800 --> 00:21:44,350
those in scope networks

458
00:21:44,350 --> 00:21:48,070
it's called suspicious ap so what this

459
00:21:48,070 --> 00:21:50,920
does it goes through and says okay let's

460
00:21:50,920 --> 00:21:54,400
look at every other access point in the

461
00:21:54,400 --> 00:21:56,050
environment that you've collected let's

462
00:21:56,050 --> 00:21:56,740
look and see if there's any

463
00:21:56,740 --> 00:21:58,420
discrepancies so the first one we look

464
00:21:58,420 --> 00:22:01,690
at is hey the channel you can see right

465
00:22:01,690 --> 00:22:07,750
here so you can see right here that

466
00:22:07,750 --> 00:22:09,970
three access points are sitting on

467
00:22:09,970 --> 00:22:11,890
different channels and the rest of the

468
00:22:11,890 --> 00:22:14,110
environment maybe that's a miss

469
00:22:14,110 --> 00:22:15,280
configuration that you can let the

470
00:22:15,280 --> 00:22:16,990
client know maybe that is something

471
00:22:16,990 --> 00:22:18,280
malicious that you need to investigate

472
00:22:18,280 --> 00:22:20,140
further but let's keep looking

473
00:22:20,140 --> 00:22:23,590
the next one is vendor so we discovered

474
00:22:23,590 --> 00:22:25,870
that an access point is using a

475
00:22:25,870 --> 00:22:27,430
completely different vendor than any of

476
00:22:27,430 --> 00:22:30,250
the other ones in the environment maybe

477
00:22:30,250 --> 00:22:31,990
that's a test maybe that's something

478
00:22:31,990 --> 00:22:33,550
that hey you know what we should go and

479
00:22:33,550 --> 00:22:35,260
talk to the client about and see if

480
00:22:35,260 --> 00:22:36,820
they're aware about or maybe this is

481
00:22:36,820 --> 00:22:38,470
actually an access point stood up

482
00:22:38,470 --> 00:22:40,390
somewhere and someone is oh she's trying

483
00:22:40,390 --> 00:22:44,080
to attack the network final one is

484
00:22:44,080 --> 00:22:48,400
encryption so this one is that big one

485
00:22:48,400 --> 00:22:52,060
because we went from a client of this or

486
00:22:52,060 --> 00:22:54,520
lab running eyes a management enterprise

487
00:22:54,520 --> 00:22:57,670
using strong encryption to one that's

488
00:22:57,670 --> 00:22:59,980
using no encryption so this right here

489
00:22:59,980 --> 00:23:03,250
is something to be alarmed about so this

490
00:23:03,250 --> 00:23:05,380
allows you to give you a quick sense of

491
00:23:05,380 --> 00:23:07,510
what's going on based on all the

492
00:23:07,510 --> 00:23:10,870
information you captured another module

493
00:23:10,870 --> 00:23:16,780
that we have is called the AP hunter so

494
00:23:16,780 --> 00:23:19,720
this module allows you based on the

495
00:23:19,720 --> 00:23:22,890
information you have collected find out

496
00:23:22,890 --> 00:23:26,920
what is in the area walk the parade the

497
00:23:26,920 --> 00:23:29,860
floors you've walked the complex

498
00:23:29,860 --> 00:23:31,150
so let's take a look and start making

499
00:23:31,150 --> 00:23:32,770
some queries based on the encryption and

500
00:23:32,770 --> 00:23:35,290
the range based on the power see what we

501
00:23:35,290 --> 00:23:37,179
can see maybe there's something that

502
00:23:37,179 --> 00:23:38,920
shouldn't be there maybe there's some

503
00:23:38,920 --> 00:23:40,240
access points that need to be

504
00:23:40,240 --> 00:23:44,520
decommissioned so let's change the power

505
00:23:44,520 --> 00:23:49,450
- thank you 60 ok so right now we see

506
00:23:49,450 --> 00:23:50,950
that there are a bunch of them within

507
00:23:50,950 --> 00:23:52,990
that range well we don't see anything

508
00:23:52,990 --> 00:23:54,990
below that okay but we know that

509
00:23:54,990 --> 00:23:58,900
ha-ha-ha-ha is one of the in scope ones

510
00:23:58,900 --> 00:24:02,530
but we see two here follow the and a

511
00:24:02,530 --> 00:24:06,280
hidden one maybe the client shares the

512
00:24:06,280 --> 00:24:08,440
floor with another vendor or a company

513
00:24:08,440 --> 00:24:11,830
so maybe one of these is phenom maybe

514
00:24:11,830 --> 00:24:14,799
this is somewhere that like I've seen it

515
00:24:14,799 --> 00:24:16,870
before where the help desk I set up

516
00:24:16,870 --> 00:24:18,340
their own access point plugged it into

517
00:24:18,340 --> 00:24:20,290
the network so that way they can torrent

518
00:24:20,290 --> 00:24:21,820
and stream without them thinking the

519
00:24:21,820 --> 00:24:24,549
company can see them so this gives you

520
00:24:24,549 --> 00:24:26,169
that sense of what's going on and how to

521
00:24:26,169 --> 00:24:32,740
help close those gaps in your network so

522
00:24:32,740 --> 00:24:39,580
I have a couple of videos of a couple of

523
00:24:39,580 --> 00:24:43,200
videos of some of the attacks you can do

524
00:24:43,200 --> 00:24:47,350
so this first one it's what we call Auto

525
00:24:47,350 --> 00:24:51,490
and that is automated eeep brute forcing

526
00:24:51,490 --> 00:24:54,970
attacks so we discussed a lot about how

527
00:24:54,970 --> 00:24:59,080
the eat protocol sends out those

528
00:24:59,080 --> 00:25:01,080
usernames in the unencrypted manner

529
00:25:01,080 --> 00:25:04,240
brute forcing is a common attack vector

530
00:25:04,240 --> 00:25:07,299
that we use in web apps networks

531
00:25:07,299 --> 00:25:09,700
perimeters why can't we apply that same

532
00:25:09,700 --> 00:25:13,480
thing here this tool addresses that and

533
00:25:13,480 --> 00:25:16,480
as you can see you can see that this

534
00:25:16,480 --> 00:25:20,440
highlighted SSID side-b SSID is one of

535
00:25:20,440 --> 00:25:22,210
the ones that are in our access point

536
00:25:22,210 --> 00:25:26,230
table and we have all these usernames

537
00:25:26,230 --> 00:25:28,270
that so what we can do is using this

538
00:25:28,270 --> 00:25:31,840
module create the hand shape using a

539
00:25:31,840 --> 00:25:35,200
specified password and see if we can get

540
00:25:35,200 --> 00:25:38,390
any successful authentication so

541
00:25:38,390 --> 00:25:41,610
load up the module we have variables to

542
00:25:41,610 --> 00:25:43,890
set we need to set up the interface that

543
00:25:43,890 --> 00:25:45,059
we're going to use that's usually a

544
00:25:45,059 --> 00:25:48,450
wireless interface the name of the of

545
00:25:48,450 --> 00:25:53,419
the network in this case it's honeypot

546
00:25:54,409 --> 00:25:56,970
then the type of encryption as well as

547
00:25:56,970 --> 00:25:58,260
the password that we're going to try to

548
00:25:58,260 --> 00:26:00,440
use

549
00:26:17,140 --> 00:26:19,340
so here we're going to use a very secure

550
00:26:19,340 --> 00:26:21,850
password to see anyone's vulnerable

551
00:26:21,850 --> 00:26:26,620
no one's I really hope no one has this

552
00:26:27,720 --> 00:26:30,190
see all the variables are now set so we

553
00:26:30,190 --> 00:26:33,940
can then begin our attack so on this

554
00:26:33,940 --> 00:26:36,070
side you can see that this is an actual

555
00:26:36,070 --> 00:26:37,720
radius server this is the output of a

556
00:26:37,720 --> 00:26:39,519
running radius server so you can

557
00:26:39,519 --> 00:26:41,080
actually see the authentication requests

558
00:26:41,080 --> 00:26:45,789
come in so it seems that Alice has a bad

559
00:26:45,789 --> 00:26:51,720
password hacker does not

560
00:26:54,850 --> 00:26:56,909
you

561
00:27:03,620 --> 00:27:05,679
you

562
00:27:17,610 --> 00:27:20,860
now using these credentials maybe for

563
00:27:20,860 --> 00:27:22,810
instance as I mentioned EEP TLS or

564
00:27:22,810 --> 00:27:23,920
something like that they might use that

565
00:27:23,920 --> 00:27:26,290
as well or something like that but now

566
00:27:26,290 --> 00:27:27,850
you have credentials you can log into

567
00:27:27,850 --> 00:27:32,790
permitter apps Citrix VPN output and

568
00:27:32,790 --> 00:27:35,650
perform further analysis you'll see that

569
00:27:35,650 --> 00:27:37,930
we store all the successful passwords in

570
00:27:37,930 --> 00:27:40,930
a loop table so we have that prefer to

571
00:27:40,930 --> 00:27:42,550
think that you want to try to post acts

572
00:27:42,550 --> 00:27:46,960
and connect the network so in keeping

573
00:27:46,960 --> 00:27:48,790
with that we also another module called

574
00:27:48,790 --> 00:27:53,200
Auto PSK same sort of concept except we

575
00:27:53,200 --> 00:27:55,780
don't look at enterprise-e packets we're

576
00:27:55,780 --> 00:27:59,470
looking at or of those home pre shared

577
00:27:59,470 --> 00:28:01,390
key networks where it's a pass phrase

578
00:28:01,390 --> 00:28:04,420
used by everyone so we see we have

579
00:28:04,420 --> 00:28:07,090
honeypot running again and it's this

580
00:28:07,090 --> 00:28:09,330
time it's running as pre shared key

581
00:28:09,330 --> 00:28:13,180
network we're going to load this up now

582
00:28:13,180 --> 00:28:14,710
with this module you can feed it a

583
00:28:14,710 --> 00:28:17,740
wordless like Rock you you tell it the

584
00:28:17,740 --> 00:28:20,800
interface and the network name and it

585
00:28:20,800 --> 00:28:22,420
will start brute-forcing those passwords

586
00:28:22,420 --> 00:28:24,820
for you and once it has its - its

587
00:28:24,820 --> 00:28:27,910
successful one it will just stop you

588
00:28:27,910 --> 00:28:31,170
have that you can then login

589
00:29:08,410 --> 00:29:11,170
thank you so you so the first password

590
00:29:11,170 --> 00:29:13,770
failed

591
00:29:13,770 --> 00:29:16,000
now it's gonna try the next one and then

592
00:29:16,000 --> 00:29:17,590
the next one until it hits a successful

593
00:29:17,590 --> 00:29:19,679
one

594
00:29:23,710 --> 00:29:25,770
you

595
00:29:28,370 --> 00:29:30,810
like you said this is this is Lily from

596
00:29:30,810 --> 00:29:33,270
the rocky wordless so some of those at

597
00:29:33,270 --> 00:29:46,530
the first are pretty obvious so this

598
00:29:46,530 --> 00:29:48,180
network was once again using another

599
00:29:48,180 --> 00:29:54,840
great password so this attack is

600
00:29:54,840 --> 00:29:57,180
actually a series of attacks that we use

601
00:29:57,180 --> 00:29:58,770
a lot against clients

602
00:29:58,770 --> 00:30:01,230
it's called evil twin in which case

603
00:30:01,230 --> 00:30:03,630
where you set up malicious or

604
00:30:03,630 --> 00:30:05,520
masquerading access point to be able to

605
00:30:05,520 --> 00:30:07,860
pretend to be a legitimate one in range

606
00:30:07,860 --> 00:30:10,650
and you try to get clients by passively

607
00:30:10,650 --> 00:30:14,150
or actively connect to you

608
00:30:15,020 --> 00:30:17,940
Microsoft Android iOS have taken certain

609
00:30:17,940 --> 00:30:19,920
steps some have been more successful

610
00:30:19,920 --> 00:30:21,750
than others so in this one you can see

611
00:30:21,750 --> 00:30:23,880
we're sending four certificates so you

612
00:30:23,880 --> 00:30:25,410
can generate your own starts based on

613
00:30:25,410 --> 00:30:27,170
the information you have gathered and

614
00:30:27,170 --> 00:30:29,490
with this certificate you can then embed

615
00:30:29,490 --> 00:30:32,250
it into your evil twin so that way when

616
00:30:32,250 --> 00:30:34,710
a user gets prompted saying hey you just

617
00:30:34,710 --> 00:30:36,570
connected to an unknown network or

618
00:30:36,570 --> 00:30:38,040
something that they'll see a company's

619
00:30:38,040 --> 00:30:39,360
certificate they'll see the name of the

620
00:30:39,360 --> 00:30:41,910
company it kind of looks like it's this

621
00:30:41,910 --> 00:30:43,590
is alright this is legit this is my

622
00:30:43,590 --> 00:30:48,660
company exam and in some cases actually

623
00:30:48,660 --> 00:30:50,820
this isn't one of the few cases but I'll

624
00:30:50,820 --> 00:30:54,060
talk about in a little bit but and there

625
00:30:54,060 --> 00:30:56,670
are some misconfigurations that iOS has

626
00:30:56,670 --> 00:30:59,370
in which that if you review the

627
00:30:59,370 --> 00:31:01,620
certificate even if you decline it in

628
00:31:01,620 --> 00:31:03,390
some cases it will still send the

629
00:31:03,390 --> 00:31:06,200
credentials even if you haven't accepted

630
00:31:06,200 --> 00:31:09,960
the flaw with the handshake so you can

631
00:31:09,960 --> 00:31:10,830
see here we've set up all these

632
00:31:10,830 --> 00:31:22,110
variables one more variable away we're

633
00:31:22,110 --> 00:31:22,659
now going to

634
00:31:22,659 --> 00:31:28,539
right this sir once we have this

635
00:31:28,539 --> 00:31:29,979
generated cert we can then start using

636
00:31:29,979 --> 00:31:32,919
it and there are two forms of evil twin

637
00:31:32,919 --> 00:31:36,909
attacks the first one is just trying to

638
00:31:36,909 --> 00:31:43,330
capture the mschap b2 hatch so what that

639
00:31:43,330 --> 00:31:45,549
entails is that a you machine has

640
00:31:45,549 --> 00:31:48,009
connected to you and this closes hatch

641
00:31:48,009 --> 00:31:50,979
now you can take that patch and load it

642
00:31:50,979 --> 00:31:53,710
up into John the Ripper hash cat and

643
00:31:53,710 --> 00:31:55,869
then perform password offline password

644
00:31:55,869 --> 00:32:00,099
cracking the other one is what we call

645
00:32:00,099 --> 00:32:03,249
the GTC downgrade in which you force the

646
00:32:03,249 --> 00:32:05,169
client to downgrade the communication to

647
00:32:05,169 --> 00:32:08,590
GT C where the issue with them is no

648
00:32:08,590 --> 00:32:11,529
longer used but it's still available as

649
00:32:11,529 --> 00:32:14,559
an option is that the credentials both

650
00:32:14,559 --> 00:32:16,509
username and password are both sent in

651
00:32:16,509 --> 00:32:19,840
the tunnel unencrypted GT c downgrade

652
00:32:19,840 --> 00:32:23,970
only works on iOS OS x and android

653
00:32:23,970 --> 00:32:26,559
microsoft windows is not vulnerable to

654
00:32:26,559 --> 00:32:28,479
it

655
00:32:28,479 --> 00:32:30,369
so that's what we've included this

656
00:32:30,369 --> 00:32:32,259
mschap attack as well so that way you

657
00:32:32,259 --> 00:32:35,169
can still be able to attack Windows

658
00:32:35,169 --> 00:32:35,739
machines

659
00:32:35,739 --> 00:32:37,899
so once we've set those variables we're

660
00:32:37,899 --> 00:32:40,090
going to extend the module so it's fun

661
00:32:40,090 --> 00:32:43,119
up illegitimate access points and what

662
00:32:43,119 --> 00:32:45,460
we'll see is as users start probing

663
00:32:45,460 --> 00:32:48,970
though connects we can see that Alice

664
00:32:48,970 --> 00:32:50,529
and Bob have both disposed their

665
00:32:50,529 --> 00:32:56,200
corporate credentials so now I'm going

666
00:32:56,200 --> 00:32:58,749
to show you the GTC where we can get

667
00:32:58,749 --> 00:33:03,429
clear text passwords these type of

668
00:33:03,429 --> 00:33:05,349
finding ulnar abilities are typically

669
00:33:05,349 --> 00:33:08,049
caused by misconfigurations with the

670
00:33:08,049 --> 00:33:09,820
clients where they do not validate or

671
00:33:09,820 --> 00:33:12,779
even look at the service in fact in

672
00:33:12,779 --> 00:33:15,609
Android you could send you can spin it

673
00:33:15,609 --> 00:33:17,279
up and they'll never see the cert and

674
00:33:17,279 --> 00:33:19,239
everywhere else you'll see a search

675
00:33:19,239 --> 00:33:21,669
maybe even if you hit decline they'll

676
00:33:21,669 --> 00:33:23,529
still send the credentials if you have

677
00:33:23,529 --> 00:33:25,179
it set up properly we'll only a look

678
00:33:25,179 --> 00:33:28,690
allow for certain ones so being able to

679
00:33:28,690 --> 00:33:30,190
have this ability of having these both

680
00:33:30,190 --> 00:33:32,289
these our tanks at your hands will allow

681
00:33:32,289 --> 00:33:35,940
you to have a much higher success rate

682
00:33:35,940 --> 00:33:37,770
so with this case we're still spinning

683
00:33:37,770 --> 00:33:40,800
up in an evil twin access point but

684
00:33:40,800 --> 00:33:43,140
we're now connecting a radius server you

685
00:33:43,140 --> 00:33:47,010
can see that with this Android on the

686
00:33:47,010 --> 00:33:49,020
side you haven't seen a cert yet

687
00:33:49,020 --> 00:33:52,650
just flex connect and now the second one

688
00:33:52,650 --> 00:33:55,230
unfortunately I fell does not have a

689
00:33:55,230 --> 00:33:57,810
bility to let you screen record for

690
00:33:57,810 --> 00:34:00,480
privacy and other apps but you could see

691
00:34:00,480 --> 00:34:02,880
that there was a second handshake I'm

692
00:34:02,880 --> 00:34:05,310
gonna show you what that looks like but

693
00:34:05,310 --> 00:34:06,720
you can see the credentials from both

694
00:34:06,720 --> 00:34:12,030
those attempts so here's what the

695
00:34:12,030 --> 00:34:14,060
curtain that certificate looks like and

696
00:34:14,060 --> 00:34:17,610
if you define it we still disclose the

697
00:34:17,610 --> 00:34:22,440
credentials it's one of those flaws the

698
00:34:22,440 --> 00:34:24,389
final attack that we've included in this

699
00:34:24,389 --> 00:34:26,219
framework as of right now is what we

700
00:34:26,219 --> 00:34:30,120
call the captive portal in essence what

701
00:34:30,120 --> 00:34:32,699
it is is being able to spin up an open

702
00:34:32,699 --> 00:34:35,370
network with a convincing web

703
00:34:35,370 --> 00:34:37,440
application currently we only have one

704
00:34:37,440 --> 00:34:40,020
template which is a Cisco authentication

705
00:34:40,020 --> 00:34:42,330
login port so it just looks like normal

706
00:34:42,330 --> 00:34:46,710
Cisco username and password fields but

707
00:34:46,710 --> 00:34:49,889
what's interesting is that devices if

708
00:34:49,889 --> 00:34:51,840
they are probing they've previously

709
00:34:51,840 --> 00:34:53,909
connected to this before and you're in

710
00:34:53,909 --> 00:34:55,620
the Arian they connect you they'll

711
00:34:55,620 --> 00:34:58,350
instantly load the application they

712
00:34:58,350 --> 00:35:00,090
won't you won't be asked to say hey go

713
00:35:00,090 --> 00:35:02,190
to this IP address or do anything like

714
00:35:02,190 --> 00:35:03,660
that they'll just bring up and say hey

715
00:35:03,660 --> 00:35:05,880
you got give me your credentials which

716
00:35:05,880 --> 00:35:08,610
when has a user you're just gonna think

717
00:35:08,610 --> 00:35:11,790
ok my session has expired reenter my

718
00:35:11,790 --> 00:35:13,620
credentials and what happens with this

719
00:35:13,620 --> 00:35:17,190
in this module is it takes them shows

720
00:35:17,190 --> 00:35:19,350
just a success message then kicks you

721
00:35:19,350 --> 00:35:22,350
off the network you can see that right

722
00:35:22,350 --> 00:35:24,870
here once we finish up setting up

723
00:35:24,870 --> 00:35:27,440
variables

724
00:35:45,550 --> 00:35:48,640
so we're gonna spin up an access point

725
00:35:48,640 --> 00:35:54,890
we're gonna spin up a Dean web server as

726
00:35:54,890 --> 00:35:56,600
well as we're going to configure the DNS

727
00:35:56,600 --> 00:35:59,390
so that way we can filter and block

728
00:35:59,390 --> 00:36:06,200
using IP tables so once it's launched

729
00:36:06,200 --> 00:36:08,270
will then show you an example what it

730
00:36:08,270 --> 00:36:09,260
would look like from my users

731
00:36:09,260 --> 00:36:11,660
perspective so here's the Android

732
00:36:11,660 --> 00:36:13,760
this is affects every single one windows

733
00:36:13,760 --> 00:36:14,840
or anything like that they see the

734
00:36:14,840 --> 00:36:17,870
network they can they've connected now

735
00:36:17,870 --> 00:36:19,550
we haven't previously connected but

736
00:36:19,550 --> 00:36:23,810
intensely loads a Cisco page type in

737
00:36:23,810 --> 00:36:32,600
your credentials and once you hit submit

738
00:36:32,600 --> 00:36:34,730
you can see them in one side and boom

739
00:36:34,730 --> 00:36:40,700
kicks you out and of course all these

740
00:36:40,700 --> 00:36:42,890
credentials are collected and stored in

741
00:36:42,890 --> 00:36:46,310
our loop table for you to view when you

742
00:36:46,310 --> 00:36:48,490
need to

743
00:36:53,120 --> 00:36:59,360
show you okay so to recap sniff air is

744
00:36:59,360 --> 00:37:01,700
an open source plus wireless security

745
00:37:01,700 --> 00:37:04,100
framework that allows you to parse and

746
00:37:04,100 --> 00:37:06,410
pull out information that you need help

747
00:37:06,410 --> 00:37:08,990
you understand the environment to lie

748
00:37:08,990 --> 00:37:12,590
form queries and then to perform attacks

749
00:37:12,590 --> 00:37:16,100
against clients and access points in a

750
00:37:16,100 --> 00:37:18,460
network

751
00:37:19,070 --> 00:37:21,080
we've been we're constantly building

752
00:37:21,080 --> 00:37:24,050
this actually today marks the release of

753
00:37:24,050 --> 00:37:26,630
version 2 with all these new attacks in

754
00:37:26,630 --> 00:37:29,540
there we are continuously building we're

755
00:37:29,540 --> 00:37:31,610
always looking for community ideas we've

756
00:37:31,610 --> 00:37:34,880
had great feedback if you feel free to

757
00:37:34,880 --> 00:37:36,500
ever send us a message about some ideas

758
00:37:36,500 --> 00:37:38,480
maybe there's a bug or anything like

759
00:37:38,480 --> 00:37:40,160
that or if you just like the tool or

760
00:37:40,160 --> 00:37:42,740
want to talk about it you can reach us

761
00:37:42,740 --> 00:37:44,870
at these twitter handles as well as

762
00:37:44,870 --> 00:37:46,430
here's a link to the github everything

763
00:37:46,430 --> 00:37:49,520
is up and active and you guys can start

764
00:37:49,520 --> 00:37:52,700
playing around with it just remember use

765
00:37:52,700 --> 00:37:57,560
this wisely and ethically that's any

766
00:37:57,560 --> 00:38:08,510
questions so we started building that

767
00:38:08,510 --> 00:38:09,980
unfortunately we don't know if we're

768
00:38:09,980 --> 00:38:11,810
going to get to it have it ready for the

769
00:38:11,810 --> 00:38:14,630
for people to use on the public github

770
00:38:14,630 --> 00:38:17,420
this year but by January you'll be able

771
00:38:17,420 --> 00:38:21,170
to either clone a site and then import

772
00:38:21,170 --> 00:38:23,660
it into the templates or have the

773
00:38:23,660 --> 00:38:25,190
ability to have a structure where you

774
00:38:25,190 --> 00:38:27,110
can actually fill in or take your own

775
00:38:27,110 --> 00:38:48,430
make your own you can in that

776
00:38:48,430 --> 00:38:51,490
it wasn't just because the complexity of

777
00:38:51,490 --> 00:38:53,020
just doing the video but you have the

778
00:38:53,020 --> 00:38:56,470
ability to do that we also are going and

779
00:38:56,470 --> 00:38:57,640
we just recently are going to be

780
00:38:57,640 --> 00:38:59,530
implementing in the ability to feed it

781
00:38:59,530 --> 00:39:00,910
in multiple passwords so you don't have

782
00:39:00,910 --> 00:39:02,020
to do it one at a time you could be

783
00:39:02,020 --> 00:39:05,590
Alyce this password out Bob and then it

784
00:39:05,590 --> 00:39:09,580
will repeat the list continuously we do

785
00:39:09,580 --> 00:39:11,470
have we are messing around with controls

786
00:39:11,470 --> 00:39:13,570
around that for delays so that way you

787
00:39:13,570 --> 00:39:16,210
don't cause lock outs or anything like

788
00:39:16,210 --> 00:39:17,890
that and that's where the hold of has

789
00:39:17,890 --> 00:39:18,880
been because it's kind of hard to

790
00:39:18,880 --> 00:39:21,010
sometimes stop part way through wireless

791
00:39:21,010 --> 00:39:34,720
traffic yeah you can you can set it to

792
00:39:34,720 --> 00:39:38,770
do that or you can just use it off like

793
00:39:38,770 --> 00:39:42,340
that a lot of times because of how auto

794
00:39:42,340 --> 00:39:44,590
it works is that you're integrating with

795
00:39:44,590 --> 00:39:47,380
the WPA supplicant and that so you might

796
00:39:47,380 --> 00:39:49,359
get a success but it may not allow you

797
00:39:49,359 --> 00:39:52,240
access so what this is done as in hey

798
00:39:52,240 --> 00:39:54,910
this is valid but you can't log in so

799
00:39:54,910 --> 00:39:57,730
that's when you can then do mac changer

800
00:39:57,730 --> 00:40:03,970
and then spoof the MAC address any other

801
00:40:03,970 --> 00:40:06,359
questions

802
00:40:07,050 --> 00:40:10,710
okay thank you guys

