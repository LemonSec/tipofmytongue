1
00:00:00,079 --> 00:00:03,750
first off this is supposed to be my nut

2
00:00:03,750 --> 00:00:05,670
my schedule it was switch if you're

3
00:00:05,670 --> 00:00:08,820
looking at your paper schedule it's a

4
00:00:08,820 --> 00:00:10,590
different one right but it was changed

5
00:00:10,590 --> 00:00:13,530
on the website so if you're not supposed

6
00:00:13,530 --> 00:00:16,520
to be here I'll give you a chance too

7
00:00:16,520 --> 00:00:18,869
otherwise you'll be stuck for me poor

8
00:00:18,869 --> 00:00:25,500
and art okay about me talk about me

9
00:00:25,500 --> 00:00:26,430
first right

10
00:00:26,430 --> 00:00:29,340
I work at fortunate a senior security

11
00:00:29,340 --> 00:00:32,790
researcher I published articles in virus

12
00:00:32,790 --> 00:00:34,380
ability and if you know that it's

13
00:00:34,380 --> 00:00:37,670
actually I made it a user friendly

14
00:00:37,670 --> 00:00:40,320
malware research so you can look into

15
00:00:40,320 --> 00:00:43,050
those things and then if you have time

16
00:00:43,050 --> 00:00:45,870
you can read them and I also wrote some

17
00:00:45,870 --> 00:00:48,750
articles in our company blog blog that

18
00:00:48,750 --> 00:00:51,079
forty Netcom that's the sales pitch

19
00:00:51,079 --> 00:00:54,739
gonna kill me here

20
00:00:54,870 --> 00:00:57,480
I just made some matrix were some of the

21
00:00:57,480 --> 00:00:59,879
fun press that I've been to and mostly

22
00:00:59,879 --> 00:01:03,270
my profile looks like that but deep

23
00:01:03,270 --> 00:01:07,560
inside that's me supposed to be Batman

24
00:01:07,560 --> 00:01:12,080
but it feels appropriate with the guy

25
00:01:12,080 --> 00:01:15,450
anyway okay there are different kinds of

26
00:01:15,450 --> 00:01:19,049
malware that we can look into but this

27
00:01:19,049 --> 00:01:20,640
one if you're if you want to analyze

28
00:01:20,640 --> 00:01:23,820
millions of malware at the same time he

29
00:01:23,820 --> 00:01:25,470
used the same the line if you've been to

30
00:01:25,470 --> 00:01:28,140
the other talk earlier use that and then

31
00:01:28,140 --> 00:01:30,060
throw it all and then you get all your

32
00:01:30,060 --> 00:01:32,490
analysis it can probably make my life

33
00:01:32,490 --> 00:01:36,030
easier to write I may try to use that

34
00:01:36,030 --> 00:01:39,450
assembly line but for for me this we are

35
00:01:39,450 --> 00:01:42,000
going to look into just one sample today

36
00:01:42,000 --> 00:01:44,700
not one million okay we're just going to

37
00:01:44,700 --> 00:01:47,670
look into the code how it works and and

38
00:01:47,670 --> 00:01:49,740
everything but first malware categories

39
00:01:49,740 --> 00:01:51,090
there are different kinds of malware

40
00:01:51,090 --> 00:01:54,930
nowadays okay and most likely we heard

41
00:01:54,930 --> 00:01:58,020
in the news about ransomware like bad

42
00:01:58,020 --> 00:02:02,130
rabbit patch and so on and so forth now

43
00:02:02,130 --> 00:02:03,450
we're going to talk about this

44
00:02:03,450 --> 00:02:06,090
ransomware we're in it is not just a

45
00:02:06,090 --> 00:02:09,449
ransomware it is also a pile in factor

46
00:02:09,449 --> 00:02:11,520
which is a virus it needs and a host

47
00:02:11,520 --> 00:02:13,830
file to attach itself

48
00:02:13,830 --> 00:02:18,240
impact okay we're going to look into

49
00:02:18,240 --> 00:02:20,340
some of the visible signs of this

50
00:02:20,340 --> 00:02:22,830
ransomware okay the reversing stage how

51
00:02:22,830 --> 00:02:24,840
you want to reverse the malware itself

52
00:02:24,840 --> 00:02:27,600
okay we try to of course if it is a

53
00:02:27,600 --> 00:02:29,760
Palin factor we try to clean it so we

54
00:02:29,760 --> 00:02:32,340
have to extract the host part and of

55
00:02:32,340 --> 00:02:34,620
course we're going to look into how it

56
00:02:34,620 --> 00:02:37,050
creates actually upon demand polymorphic

57
00:02:37,050 --> 00:02:39,300
algorithm we know going in to look into

58
00:02:39,300 --> 00:02:41,760
that and if you want to create a

59
00:02:41,760 --> 00:02:43,830
metamorphic malware now I'm not saying

60
00:02:43,830 --> 00:02:46,260
you create a metamorphic my way we're

61
00:02:46,260 --> 00:02:48,830
just going to look into how it creates

62
00:02:48,830 --> 00:02:51,660
that engine and then how it it is

63
00:02:51,660 --> 00:02:53,820
actually generated we're going to look

64
00:02:53,820 --> 00:02:56,459
some of the video demo I don't usually

65
00:02:56,459 --> 00:03:00,000
do live demo it doesn't really work for

66
00:03:00,000 --> 00:03:00,420
me

67
00:03:00,420 --> 00:03:02,490
okay so we're going to look some of the

68
00:03:02,490 --> 00:03:04,560
video demo how the malware works in

69
00:03:04,560 --> 00:03:07,500
quality but we I use only poor for

70
00:03:07,500 --> 00:03:12,390
debugging okay buck is let's before we

71
00:03:12,390 --> 00:03:15,150
look into burlap we what is a file in

72
00:03:15,150 --> 00:03:17,310
fact our file inspector it needs a host

73
00:03:17,310 --> 00:03:20,010
file for example your calculator that

74
00:03:20,010 --> 00:03:22,769
exe it needs to attach itself to an

75
00:03:22,769 --> 00:03:25,769
executable and and put the code there

76
00:03:25,769 --> 00:03:28,230
that is a pile impactor okay usually it

77
00:03:28,230 --> 00:03:30,810
is hard to restore normally if you're

78
00:03:30,810 --> 00:03:34,100
infected with a parent backdoor just

79
00:03:34,100 --> 00:03:37,470
reformat your system just kidding we try

80
00:03:37,470 --> 00:03:40,860
to still clean the system a ransomware

81
00:03:40,860 --> 00:03:43,700
of course everybody knows ransomware

82
00:03:43,700 --> 00:03:47,100
when apply right but Robbie the last one

83
00:03:47,100 --> 00:03:50,250
the picture it tries to hold your

84
00:03:50,250 --> 00:03:52,470
computer for ransom that means you have

85
00:03:52,470 --> 00:03:55,920
to pay in Bitcoin to get your your

86
00:03:55,920 --> 00:03:58,739
system back but that is at not actually

87
00:03:58,739 --> 00:04:01,050
a bulletproof sometimes you pay in

88
00:04:01,050 --> 00:04:03,360
Bitcoin you still don't have your system

89
00:04:03,360 --> 00:04:05,730
back right it increased fast and of

90
00:04:05,730 --> 00:04:07,410
course you use the Bitcoin for payment

91
00:04:07,410 --> 00:04:10,230
and the lock is a combination of both

92
00:04:10,230 --> 00:04:12,570
it is a ransomware and a file in back

93
00:04:12,570 --> 00:04:15,150
door and locks your screen and deep

94
00:04:15,150 --> 00:04:17,820
within KB use assembly line you will not

95
00:04:17,820 --> 00:04:20,488
might not be able to see the polymorphic

96
00:04:20,488 --> 00:04:22,800
algorithm and metamorphic algorithm so

97
00:04:22,800 --> 00:04:25,229
we try to divert on that system because

98
00:04:25,229 --> 00:04:27,210
assembly line

99
00:04:27,210 --> 00:04:29,039
stay somebody from assembly line here

100
00:04:29,039 --> 00:04:32,250
they might kill me okay don't tell

101
00:04:32,250 --> 00:04:36,800
anyone okay it doesn't touch your screen

102
00:04:37,430 --> 00:04:41,669
ransomware if you're infected with Iran

103
00:04:41,669 --> 00:04:45,060
somewhere like this

104
00:04:45,060 --> 00:04:49,139
maybe I'm infected we're done okay long

105
00:04:49,139 --> 00:04:49,560
lunch

106
00:04:49,560 --> 00:04:51,360
if you're infected with the ransomware

107
00:04:51,360 --> 00:04:54,150
the good thing is unlike other malware

108
00:04:54,150 --> 00:04:57,090
you will know you're infected okay

109
00:04:57,090 --> 00:04:58,910
because if you're infected before

110
00:04:58,910 --> 00:05:02,160
malware or trojan doesn't want you to

111
00:05:02,160 --> 00:05:04,770
know that they are stealing your your

112
00:05:04,770 --> 00:05:06,810
system but if you're infected with this

113
00:05:06,810 --> 00:05:08,910
kind of ransomware you will see a blank

114
00:05:08,910 --> 00:05:13,139
screen purse you will see if you if you

115
00:05:13,139 --> 00:05:16,500
live in Canada it knows that you are in

116
00:05:16,500 --> 00:05:19,199
Canada it will ask you for course

117
00:05:19,199 --> 00:05:21,750
Canadian dollar but if you're in u.s.

118
00:05:21,750 --> 00:05:24,300
you run this ransomware it will ask for

119
00:05:24,300 --> 00:05:29,250
your USB it is an old one because it

120
00:05:29,250 --> 00:05:32,130
still had the BTC point five eight eight

121
00:05:32,130 --> 00:05:34,620
now it is probably if you want to pay to

122
00:05:34,620 --> 00:05:37,050
the peakin agents probably point zero

123
00:05:37,050 --> 00:05:40,590
how much is Bitcoin now it's like crazy

124
00:05:40,590 --> 00:05:43,740
right and it will look something like

125
00:05:43,740 --> 00:05:47,099
that okay it will be looked like coming

126
00:05:47,099 --> 00:05:51,090
from from your RCMP okay

127
00:05:51,090 --> 00:05:54,180
now getting with the ransomware normally

128
00:05:54,180 --> 00:05:57,330
it tries to educate the user for example

129
00:05:57,330 --> 00:06:00,270
you don't know Bitcoin it will explain

130
00:06:00,270 --> 00:06:02,639
what is Bitcoin because they want you to

131
00:06:02,639 --> 00:06:06,690
pay so it gives you information and for

132
00:06:06,690 --> 00:06:08,490
example where do you get a Bitcoin you

133
00:06:08,490 --> 00:06:11,250
only have your your ATM machine you can

134
00:06:11,250 --> 00:06:14,820
actually go to different places where

135
00:06:14,820 --> 00:06:16,860
you can actually change your money here

136
00:06:16,860 --> 00:06:19,620
Canadian money to Bitcoin okay I

137
00:06:19,620 --> 00:06:23,729
there is one in in Vancouver okay

138
00:06:23,729 --> 00:06:25,770
downtown I haven't seen it actually but

139
00:06:25,770 --> 00:06:28,919
I've seen one in Seattle us okay but the

140
00:06:28,919 --> 00:06:31,650
problem is I'm about to do a video shot

141
00:06:31,650 --> 00:06:35,789
of the at Pace but I need they need your

142
00:06:35,789 --> 00:06:38,449
driver's license so it's not actually

143
00:06:38,449 --> 00:06:40,900
anonymous anymore right so

144
00:06:40,900 --> 00:06:43,840
didn't do I didn't do it if you don't

145
00:06:43,840 --> 00:06:49,270
live in Vancouver and where's Quebec oh

146
00:06:49,270 --> 00:06:51,300
let's get back okay if you're infected

147
00:06:51,300 --> 00:06:53,800
with this ransomware and you live in

148
00:06:53,800 --> 00:06:55,900
Quebec do you live here you can go you

149
00:06:55,900 --> 00:06:57,729
can click this one and then it will tell

150
00:06:57,729 --> 00:07:00,160
you where to change your money okay very

151
00:07:00,160 --> 00:07:03,030
educational

152
00:07:03,539 --> 00:07:06,039
of course you can access your screen

153
00:07:06,039 --> 00:07:08,500
because it is locked so you can only

154
00:07:08,500 --> 00:07:11,080
have notepad and of course some network

155
00:07:11,080 --> 00:07:13,419
connection and thence that's it okay

156
00:07:13,419 --> 00:07:15,910
okay don't worry if you're infected with

157
00:07:15,910 --> 00:07:21,310
ransomware you will know okay that's a

158
00:07:21,310 --> 00:07:24,160
common malware normally we try to we try

159
00:07:24,160 --> 00:07:27,150
to analyze the malware using a debugger

160
00:07:27,150 --> 00:07:30,310
or some other tools assembly line you

161
00:07:30,310 --> 00:07:32,919
can just send everything and then you

162
00:07:32,919 --> 00:07:34,510
will get the information that you want

163
00:07:34,510 --> 00:07:36,729
but if you want to go deeper okay you

164
00:07:36,729 --> 00:07:39,639
can use quality bug immunity the big

165
00:07:39,639 --> 00:07:41,349
debugger which is almost the same

166
00:07:41,349 --> 00:07:44,139
actually same features but this one is

167
00:07:44,139 --> 00:07:48,039
you can use Python scripting in order to

168
00:07:48,039 --> 00:07:50,889
automate your your debugging and if

169
00:07:50,889 --> 00:07:53,320
there is a 64 version of the malware you

170
00:07:53,320 --> 00:07:57,130
can actually just use x64 dvg okay it is

171
00:07:57,130 --> 00:08:02,440
actually being develop most of the time

172
00:08:02,440 --> 00:08:05,169
it's like that they have the daily or

173
00:08:05,169 --> 00:08:09,220
weekly weekly updates normally when we

174
00:08:09,220 --> 00:08:11,800
try to okay assuming this is your

175
00:08:11,800 --> 00:08:14,139
executable file when we try to the crib

176
00:08:14,139 --> 00:08:16,389
or unpacked the malware okay and then

177
00:08:16,389 --> 00:08:18,159
you will be able to get the decrypted

178
00:08:18,159 --> 00:08:20,830
version and then now you can do the ID a

179
00:08:20,830 --> 00:08:23,620
static analysis or you can also still do

180
00:08:23,620 --> 00:08:26,130
the dynamic analysis okay

181
00:08:26,130 --> 00:08:28,840
okay for this one the reversing stages

182
00:08:28,840 --> 00:08:32,110
the at first when you get your burlap

183
00:08:32,110 --> 00:08:35,110
you only have the text section and the

184
00:08:35,110 --> 00:08:37,390
research section okay there's like two

185
00:08:37,390 --> 00:08:39,969
spaces there and then when you try at

186
00:08:39,969 --> 00:08:43,719
the very end of the executable file

187
00:08:43,719 --> 00:08:45,490
there's this code the metamorphic

188
00:08:45,490 --> 00:08:47,920
algorithm that is our purpose later on

189
00:08:47,920 --> 00:08:50,680
okay when it it trusts the metamorphic

190
00:08:50,680 --> 00:08:54,339
algorithm it generates this particular

191
00:08:54,339 --> 00:08:54,880
they go

192
00:08:54,880 --> 00:08:57,640
bytes after generating the decoded bus

193
00:08:57,640 --> 00:09:01,360
it generates the main function and then

194
00:09:01,360 --> 00:09:04,540
when we have the main function it now

195
00:09:04,540 --> 00:09:08,470
produces that what I call fun demand

196
00:09:08,470 --> 00:09:10,630
polymorphic why do we call it only one

197
00:09:10,630 --> 00:09:13,750
polymorphic because every time it runs

198
00:09:13,750 --> 00:09:17,200
it will decrypt itself with the original

199
00:09:17,200 --> 00:09:20,200
key and then after executing that

200
00:09:20,200 --> 00:09:22,810
particular code it encrypts back with a

201
00:09:22,810 --> 00:09:25,180
different key that means every time it

202
00:09:25,180 --> 00:09:27,700
executes a single function it will look

203
00:09:27,700 --> 00:09:30,880
something like this it is no different

204
00:09:30,880 --> 00:09:32,410
from the original code because it is

205
00:09:32,410 --> 00:09:35,620
encrypted now with a new key okay and

206
00:09:35,620 --> 00:09:38,800
then execute another on demand and then

207
00:09:38,800 --> 00:09:42,430
if you put some colors in your virtual

208
00:09:42,430 --> 00:09:45,580
memory K it will look like Christmas

209
00:09:45,580 --> 00:09:48,370
lights different colors different codes

210
00:09:48,370 --> 00:09:50,320
compared to the original one that means

211
00:09:50,320 --> 00:09:53,410
every time it impacts your files it will

212
00:09:53,410 --> 00:09:57,250
create a different set of op codes that

213
00:09:57,250 --> 00:10:02,410
is what I call on-demand polymorphic as

214
00:10:02,410 --> 00:10:04,840
a file impact or let's look at some of

215
00:10:04,840 --> 00:10:07,510
the different kinds of file inspectors

216
00:10:07,510 --> 00:10:10,030
okay we have appending prepending there

217
00:10:10,030 --> 00:10:13,450
is only how how they try to to impact

218
00:10:13,450 --> 00:10:17,470
your files appending is it's coming from

219
00:10:17,470 --> 00:10:20,230
gate attaches itself at the bottom of

220
00:10:20,230 --> 00:10:26,650
your hosts file prepending is at just at

221
00:10:26,650 --> 00:10:28,540
the bottom cavity is harder to clean

222
00:10:28,540 --> 00:10:32,170
because it looks it looks for spaces in

223
00:10:32,170 --> 00:10:35,020
your executable and put those codes

224
00:10:35,020 --> 00:10:36,940
inside overwriting

225
00:10:36,940 --> 00:10:38,950
just operate everything if you have

226
00:10:38,950 --> 00:10:41,740
overwriting file in fact or you have to

227
00:10:41,740 --> 00:10:44,950
reformat your system sound like this

228
00:10:44,950 --> 00:10:47,470
this is your malware appending this is

229
00:10:47,470 --> 00:10:50,200
your host file okay this is the pre

230
00:10:50,200 --> 00:10:53,080
pending cavity it used looks for spaces

231
00:10:53,080 --> 00:10:54,880
and so on somewhat but beer love is

232
00:10:54,880 --> 00:10:57,700
actually it grabs your host pile and

233
00:10:57,700 --> 00:11:00,540
clip the host spine and put it inside

234
00:11:00,540 --> 00:11:04,900
the big build up file okay and then and

235
00:11:04,900 --> 00:11:08,390
then this is now your impacted by

236
00:11:08,390 --> 00:11:10,790
they were going to I'm going to show you

237
00:11:10,790 --> 00:11:13,520
a bit later on on which part do you try

238
00:11:13,520 --> 00:11:15,530
to you can try to encrypt you're ready

239
00:11:15,530 --> 00:11:20,030
clip your horse while extracting the

240
00:11:20,030 --> 00:11:23,000
host belt from gridlock is kinda a bit

241
00:11:23,000 --> 00:11:27,590
as long as you can find the key you'd be

242
00:11:27,590 --> 00:11:29,990
able to turn the clip you're your host

243
00:11:29,990 --> 00:11:30,410
file

244
00:11:30,410 --> 00:11:33,800
yes it is using a simple XOR not very

245
00:11:33,800 --> 00:11:37,010
complicated it doesn't use AES or some

246
00:11:37,010 --> 00:11:42,380
some different cryptographic system ok

247
00:11:42,380 --> 00:11:44,510
the hot spot is actually somewhere here

248
00:11:44,510 --> 00:11:46,220
if you're able to run met the

249
00:11:46,220 --> 00:11:48,890
metamorphic algorithm get them in

250
00:11:48,890 --> 00:11:51,020
function you got all the on-demand and

251
00:11:51,020 --> 00:11:53,390
then after a while you will be able to

252
00:11:53,390 --> 00:11:55,220
get those but you don't need to run

253
00:11:55,220 --> 00:11:57,800
everything here you can actually find

254
00:11:57,800 --> 00:12:00,350
the host part and then extract it then

255
00:12:00,350 --> 00:12:02,480
you can have your your host part back

256
00:12:02,480 --> 00:12:05,800
but if you're infected with this ok ok

257
00:12:05,800 --> 00:12:08,660
try to the opera broadly you can

258
00:12:08,660 --> 00:12:11,480
probably download some or your AV system

259
00:12:11,480 --> 00:12:14,480
will be able to clean those Hospit the

260
00:12:14,480 --> 00:12:17,860
antivirus that you have installed it

261
00:12:17,860 --> 00:12:19,880
will look something like this

262
00:12:19,880 --> 00:12:24,500
ok this is your host pine encrypted ok

263
00:12:24,500 --> 00:12:27,470
it will not look the same like this

264
00:12:27,470 --> 00:12:29,630
because it is always it always changed

265
00:12:29,630 --> 00:12:31,940
if you're in if your host file if your

266
00:12:31,940 --> 00:12:34,430
calculator is infected today you clean

267
00:12:34,430 --> 00:12:36,410
the system you are infected the other

268
00:12:36,410 --> 00:12:39,020
day if you compare those infection will

269
00:12:39,020 --> 00:12:41,540
be different right because of the formal

270
00:12:41,540 --> 00:12:43,280
peak algorithm all you have to do is to

271
00:12:43,280 --> 00:12:45,620
look for this particular code you can

272
00:12:45,620 --> 00:12:48,320
actually search them in your debugger ok

273
00:12:48,320 --> 00:12:50,630
if you find them then you will be able

274
00:12:50,630 --> 00:12:53,990
to actually decrypt your hosts file that

275
00:12:53,990 --> 00:12:56,300
is the initial key if you want to follow

276
00:12:56,300 --> 00:12:58,280
the code all you have to do is to look

277
00:12:58,280 --> 00:13:01,040
for this one just simple XOR that is how

278
00:13:01,040 --> 00:13:05,480
it encrypts your file ok and then just

279
00:13:05,480 --> 00:13:09,470
just follow the decryption it will just

280
00:13:09,470 --> 00:13:12,770
make some loop ok look going back here

281
00:13:12,770 --> 00:13:15,590
it will execute until finally everything

282
00:13:15,590 --> 00:13:21,260
is decrypted your host file will look

283
00:13:21,260 --> 00:13:21,920
something

284
00:13:21,920 --> 00:13:25,189
this now the host file will contain or

285
00:13:25,189 --> 00:13:28,279
the impacted part will contain the

286
00:13:28,279 --> 00:13:30,709
actual pile there is that the pile name

287
00:13:30,709 --> 00:13:33,529
that was encrypted and then this is now

288
00:13:33,529 --> 00:13:37,429
they start of your first MZ and said

289
00:13:37,429 --> 00:13:39,649
header there is no they start of your

290
00:13:39,649 --> 00:13:42,019
your file or your hospital all you have

291
00:13:42,019 --> 00:13:44,119
to do is to cut from the end said up to

292
00:13:44,119 --> 00:13:46,309
the end of the the host part and then

293
00:13:46,309 --> 00:13:48,679
you'll be able to extra for your host

294
00:13:48,679 --> 00:13:51,529
part and that's it that is how you try

295
00:13:51,529 --> 00:13:54,169
to clean your system with your impacted

296
00:13:54,169 --> 00:14:01,269
works there is no your decryption key

297
00:14:04,600 --> 00:14:09,160
let's look at the on demand polymorphic

298
00:14:09,160 --> 00:14:12,379
okay the only one polymorphic looks see

299
00:14:12,379 --> 00:14:14,929
like this there is a code okay with

300
00:14:14,929 --> 00:14:17,779
which use the Decrypter to decrypt the

301
00:14:17,779 --> 00:14:22,040
block of code using the old key okay you

302
00:14:22,040 --> 00:14:23,660
will you will try to look for the

303
00:14:23,660 --> 00:14:25,639
garbage code the garbage code this were

304
00:14:25,639 --> 00:14:27,860
in we don't actually need them it is

305
00:14:27,860 --> 00:14:30,529
just to to make your analysis even

306
00:14:30,529 --> 00:14:33,829
longer it's the main purpose of the

307
00:14:33,829 --> 00:14:35,809
garbage code is to to waste your time

308
00:14:35,809 --> 00:14:37,669
right all you have to do is to skip

309
00:14:37,669 --> 00:14:41,360
those things and then find the x or okay

310
00:14:41,360 --> 00:14:43,759
and then you'll be able to to the creep

311
00:14:43,759 --> 00:14:48,919
your your malware or Billa okay the red

312
00:14:48,919 --> 00:14:51,290
ones they are actually their garbage

313
00:14:51,290 --> 00:14:55,009
code you don't need them okay they

314
00:14:55,009 --> 00:14:57,169
change too so if you're making a

315
00:14:57,169 --> 00:14:59,029
signature detection for that you'll but

316
00:14:59,029 --> 00:15:00,860
we won't be able to you have to skip

317
00:15:00,860 --> 00:15:06,079
those things hey there's the generate

318
00:15:06,079 --> 00:15:08,739
the kitchen function which generates the

319
00:15:08,739 --> 00:15:12,199
ducky x EI x wishes the value or which

320
00:15:12,199 --> 00:15:16,249
the ducky and then there is now your

321
00:15:16,249 --> 00:15:19,369
starting location of the decryption

322
00:15:19,369 --> 00:15:20,660
if you want to decrypt you can follow

323
00:15:20,660 --> 00:15:23,059
this you can dump it to your old debug

324
00:15:23,059 --> 00:15:25,669
and then you can party those those bytes

325
00:15:25,669 --> 00:15:30,499
it that it will be decrypted that is the

326
00:15:30,499 --> 00:15:33,470
actual C is only a simple XOR that is

327
00:15:33,470 --> 00:15:35,779
the actual decree

328
00:15:35,779 --> 00:15:40,160
within the xo1 and this is actually your

329
00:15:40,160 --> 00:15:43,220
key it checks it is just a redundant

330
00:15:43,220 --> 00:15:45,319
check to make sure that you are actually

331
00:15:45,319 --> 00:15:48,579
in the right malware in the right code

332
00:15:48,579 --> 00:15:51,769
okay there is now your X or decrypt or

333
00:15:51,769 --> 00:15:54,259
if you go to this to this function and

334
00:15:54,259 --> 00:15:56,480
then it will try to decrypt that

335
00:15:56,480 --> 00:16:01,429
particular function and execute it uses

336
00:16:01,429 --> 00:16:03,619
the de creeper to do that okay to

337
00:16:03,619 --> 00:16:06,889
generate a new key it uses a function R

338
00:16:06,889 --> 00:16:09,769
DT as if it timestamp counter it changes

339
00:16:09,769 --> 00:16:11,869
every time you run that's why I told you

340
00:16:11,869 --> 00:16:13,519
when you actually when you infect your

341
00:16:13,519 --> 00:16:15,739
calculator today it will be different

342
00:16:15,739 --> 00:16:17,809
actually in the afternoon in the evening

343
00:16:17,809 --> 00:16:20,239
or the other day because it generally it

344
00:16:20,239 --> 00:16:22,549
generates the key based on the time

345
00:16:22,549 --> 00:16:26,600
stamp counter okay and then it uses the

346
00:16:26,600 --> 00:16:29,720
same set of codes in order to this one

347
00:16:29,720 --> 00:16:32,359
generates the new the new key he uses

348
00:16:32,359 --> 00:16:35,600
the are DTSC save it in different memory

349
00:16:35,600 --> 00:16:38,359
location and then using the different X

350
00:16:38,359 --> 00:16:40,730
or e or the Decrypter then you'll be

351
00:16:40,730 --> 00:16:45,769
able to get the new kid all you to this

352
00:16:45,769 --> 00:16:49,189
so dope for this code and then you will

353
00:16:49,189 --> 00:16:52,879
be able to see how it generates the new

354
00:16:52,879 --> 00:16:56,209
key just a location device needed to

355
00:16:56,209 --> 00:16:58,639
generate the key and then there is now

356
00:16:58,639 --> 00:17:01,100
your new key place on this in this

357
00:17:01,100 --> 00:17:04,220
number and this location okay if you're

358
00:17:04,220 --> 00:17:06,919
going to look at the same code this is

359
00:17:06,919 --> 00:17:10,069
your your your code with the old key and

360
00:17:10,069 --> 00:17:13,369
then after generating the new key you'll

361
00:17:13,369 --> 00:17:16,039
be able to find it the same set of codes

362
00:17:16,039 --> 00:17:18,500
looking at the offset you will be able

363
00:17:18,500 --> 00:17:21,439
to find a different set of keys so this

364
00:17:21,439 --> 00:17:25,159
is 9 B 7 B this is 9 7 a and something

365
00:17:25,159 --> 00:17:28,099
so it changes every time it gets that's

366
00:17:28,099 --> 00:17:29,440
why it's called the on demand

367
00:17:29,440 --> 00:17:32,440
polymorphic

368
00:17:35,180 --> 00:17:46,550
what happen what I'm infected good thing

369
00:17:46,550 --> 00:17:54,380
I have Supergirl oh we are very now and

370
00:17:54,380 --> 00:18:00,280
uh let's go to sorry about that

371
00:18:00,280 --> 00:18:05,889
what happened did I step on something

372
00:18:10,180 --> 00:18:13,450
where are we

373
00:18:27,540 --> 00:18:33,970
yes realize I had so many slides see I

374
00:18:33,970 --> 00:18:36,840
don't have yet my my demo and then it's

375
00:18:36,840 --> 00:18:44,790
destroying my system again let's do this

376
00:18:58,010 --> 00:19:03,370
oh they're done

377
00:19:20,000 --> 00:19:23,340
cases so that's the new key this is

378
00:19:23,340 --> 00:19:27,570
where we die ohai still working ok the

379
00:19:27,570 --> 00:19:29,250
Decrypter actually uses the same

380
00:19:29,250 --> 00:19:32,370
algorithm as the encrypter but it just

381
00:19:32,370 --> 00:19:35,900
uses a different key if you use an X or

382
00:19:35,900 --> 00:19:39,299
X or function if you use X or and then

383
00:19:39,299 --> 00:19:41,700
use the same key XOR it with the same

384
00:19:41,700 --> 00:19:42,330
value

385
00:19:42,330 --> 00:19:44,970
it actually encrypts and eclipse ok just

386
00:19:44,970 --> 00:19:49,289
using the the same value if you're going

387
00:19:49,289 --> 00:19:51,929
to look into the original said this is

388
00:19:51,929 --> 00:19:55,140
the encrypted code ok I just grabbed us

389
00:19:55,140 --> 00:19:57,620
and just grabbed it ok with the old key

390
00:19:57,620 --> 00:20:01,799
getting the first 16 bytes and then this

391
00:20:01,799 --> 00:20:06,150
is the decrypted code ok section bus is

392
00:20:06,150 --> 00:20:08,340
here and then after executing this

393
00:20:08,340 --> 00:20:11,250
decrypted code it will actually generate

394
00:20:11,250 --> 00:20:14,250
generate the new key encrypt this one

395
00:20:14,250 --> 00:20:17,909
with the new the new key look they are

396
00:20:17,909 --> 00:20:21,090
in the same memory location okay this is

397
00:20:21,090 --> 00:20:23,640
encrypted with the old key this is

398
00:20:23,640 --> 00:20:25,890
encrypted with the new key and this is

399
00:20:25,890 --> 00:20:29,039
your decrypted code if you want to make

400
00:20:29,039 --> 00:20:31,830
a signature detection in your company or

401
00:20:31,830 --> 00:20:34,950
or Europe you're doing it at home ok all

402
00:20:34,950 --> 00:20:36,870
you have to do is to look for for this

403
00:20:36,870 --> 00:20:39,750
one first because even though you have a

404
00:20:39,750 --> 00:20:43,110
different key every time ok you will

405
00:20:43,110 --> 00:20:46,260
have the same set of decrypted told

406
00:20:46,260 --> 00:20:49,169
different keys you won't be able to

407
00:20:49,169 --> 00:20:51,659
detect this one every time okay but you

408
00:20:51,659 --> 00:20:54,510
have to to follow this one to be able to

409
00:20:54,510 --> 00:21:00,150
detect your your samples and just know

410
00:21:00,150 --> 00:21:03,120
everything this matter if you're going

411
00:21:03,120 --> 00:21:04,380
to look up you're going to make

412
00:21:04,380 --> 00:21:06,870
signature with the code ok do not fall

413
00:21:06,870 --> 00:21:09,690
do not detect this one because this this

414
00:21:09,690 --> 00:21:13,169
contains the the garbage code collected

415
00:21:13,169 --> 00:21:15,450
is to detect this except this part ok

416
00:21:15,450 --> 00:21:19,320
because this one changes to let's go now

417
00:21:19,320 --> 00:21:22,260
to the metamorphic algorithm metamorphic

418
00:21:22,260 --> 00:21:24,809
is kinda different with the polymorphic

419
00:21:24,809 --> 00:21:27,539
polymorphic is it changes the code but

420
00:21:27,539 --> 00:21:30,179
at the same time it encrypts encrypts

421
00:21:30,179 --> 00:21:31,110
plus changing

422
00:21:31,110 --> 00:21:34,140
code that is polymorphic in my turn okay

423
00:21:34,140 --> 00:21:37,200
metamorphic is it doesn't change the it

424
00:21:37,200 --> 00:21:39,809
changes the code but the code is nothing

425
00:21:39,809 --> 00:21:42,090
cryptid that means you can still execute

426
00:21:42,090 --> 00:21:43,020
the code

427
00:21:43,020 --> 00:21:46,320
what is metamorphic paper example the

428
00:21:46,320 --> 00:21:48,660
basic for metamorphic is for example you

429
00:21:48,660 --> 00:21:51,210
want to put a value to a register for

430
00:21:51,210 --> 00:21:53,610
sample value zero to a certain register

431
00:21:53,610 --> 00:21:57,110
ei XK you can do that in so many ways

432
00:21:57,110 --> 00:22:02,970
mobi X 0 X or the same register it gives

433
00:22:02,970 --> 00:22:06,840
you 0 K subtract the same register again

434
00:22:06,840 --> 00:22:09,390
you it gives you 0 or you can do a

435
00:22:09,390 --> 00:22:12,059
different combination of codes at the

436
00:22:12,059 --> 00:22:14,400
end you still get the serum that is

437
00:22:14,400 --> 00:22:17,010
metamorphic okay if you want to create a

438
00:22:17,010 --> 00:22:19,020
metamorphic algorithm all you have to do

439
00:22:19,020 --> 00:22:22,470
is to generate the same or different set

440
00:22:22,470 --> 00:22:25,410
of working codes but the same result

441
00:22:25,410 --> 00:22:27,710
that is metamorphic polymorphic

442
00:22:27,710 --> 00:22:30,690
encrypted plus changing changing of code

443
00:22:30,690 --> 00:22:33,480
metamorphic it does it doesn't increase

444
00:22:33,480 --> 00:22:39,480
K but it still changes the code that the

445
00:22:39,480 --> 00:22:41,340
problem is it's hard to find similar

446
00:22:41,340 --> 00:22:43,980
bytes and there are different lengths

447
00:22:43,980 --> 00:22:45,570
when you create the metamorphic

448
00:22:45,570 --> 00:22:48,630
algorithm of course unpredictable code

449
00:22:48,630 --> 00:22:51,360
the problem with this one is if your

450
00:22:51,360 --> 00:22:55,590
antivirus engine K tries to detect your

451
00:22:55,590 --> 00:22:58,380
your sample and then it it punked it it

452
00:22:58,380 --> 00:23:00,390
points that they are actually encrypted

453
00:23:00,390 --> 00:23:02,910
it will try to encrypt it will try to

454
00:23:02,910 --> 00:23:05,340
decrypt that means it is malicious in

455
00:23:05,340 --> 00:23:08,220
itself if it is encrypted but if it is

456
00:23:08,220 --> 00:23:09,960
metamorphic K

457
00:23:09,960 --> 00:23:12,750
the mod the code still executes your

458
00:23:12,750 --> 00:23:15,330
antivirus engine will think that it is

459
00:23:15,330 --> 00:23:18,059
just a regular application that is one

460
00:23:18,059 --> 00:23:20,100
of the difference with the metamorphic

461
00:23:20,100 --> 00:23:25,710
and polymorphic there are different ways

462
00:23:25,710 --> 00:23:29,100
to generate the metamorphic engine okay

463
00:23:29,100 --> 00:23:31,679
but Birla were going to focus on burlap

464
00:23:31,679 --> 00:23:36,000
k verloc uses different instructions to

465
00:23:36,000 --> 00:23:39,690
generate the registers okay it uses

466
00:23:39,690 --> 00:23:41,910
different number of bytes it has a

467
00:23:41,910 --> 00:23:44,640
pseudo random value generator

468
00:23:44,640 --> 00:23:47,400
generates different sets of instructions

469
00:23:47,400 --> 00:23:50,130
we'll see that later and of course it is

470
00:23:50,130 --> 00:23:55,200
it has a different length of code this

471
00:23:55,200 --> 00:23:58,080
particular part this function generates

472
00:23:58,080 --> 00:24:00,900
a pseudo-random number and then based on

473
00:24:00,900 --> 00:24:04,530
that number it actually detects I do it

474
00:24:04,530 --> 00:24:07,730
will tell you which register to use EDI

475
00:24:07,730 --> 00:24:12,360
ESI for whatever EAX okay and then up

476
00:24:12,360 --> 00:24:15,030
from that code it generates a new

477
00:24:15,030 --> 00:24:20,790
address register and code register okay

478
00:24:20,790 --> 00:24:23,280
for example the buffers temporary it

479
00:24:23,280 --> 00:24:25,160
changes it depends on the on your

480
00:24:25,160 --> 00:24:27,630
execution okay it changes the location

481
00:24:27,630 --> 00:24:31,140
and then it generates randomly what kind

482
00:24:31,140 --> 00:24:33,930
of address register that you use and the

483
00:24:33,930 --> 00:24:38,070
code register we see that later in the

484
00:24:38,070 --> 00:24:41,280
video demo okay after generating the

485
00:24:41,280 --> 00:24:43,500
pseudo-random number it depends on the

486
00:24:43,500 --> 00:24:47,340
value of the the register eax

487
00:24:47,340 --> 00:24:51,210
EDI combination of e^x EDI and EBX for

488
00:24:51,210 --> 00:24:54,990
example this one it generates a mob

489
00:24:54,990 --> 00:24:58,230
address register value and then if it is

490
00:24:58,230 --> 00:25:02,430
EPA X is 1 he is 0 similar but this one

491
00:25:02,430 --> 00:25:05,940
it generates the code register and then

492
00:25:05,940 --> 00:25:09,600
it depends on the value again IX EDI P

493
00:25:09,600 --> 00:25:12,390
DX it will tell you if it is subtraction

494
00:25:12,390 --> 00:25:18,510
addition or whatever ok so that is how

495
00:25:18,510 --> 00:25:21,270
it generates the different combinations

496
00:25:21,270 --> 00:25:23,280
of bytes or different combinations of

497
00:25:23,280 --> 00:25:26,430
registers - ok so it is not very it is

498
00:25:26,430 --> 00:25:28,290
not fixed that's why even the

499
00:25:28,290 --> 00:25:29,970
metamorphic algorithm will generate

500
00:25:29,970 --> 00:25:32,640
different set of codes and this one also

501
00:25:32,640 --> 00:25:35,700
generates the second this is these are

502
00:25:35,700 --> 00:25:38,130
the combinations of registers for

503
00:25:38,130 --> 00:25:41,220
example if it is it generates the b8 it

504
00:25:41,220 --> 00:25:44,490
will get the move AEA X if it generates

505
00:25:44,490 --> 00:25:48,690
the c3 it will get a dbx it depends on

506
00:25:48,690 --> 00:25:52,530
the generated value it will look at this

507
00:25:52,530 --> 00:25:54,690
is the lookup table on which kind of

508
00:25:54,690 --> 00:25:58,290
register is it needs to do ok

509
00:25:58,290 --> 00:26:00,750
I stay with me people already sleeping

510
00:26:00,750 --> 00:26:05,300
it's okay I will just wake you up later

511
00:26:05,570 --> 00:26:08,190
the last one the last actually the last

512
00:26:08,190 --> 00:26:10,320
code is actually the one that generates

513
00:26:10,320 --> 00:26:12,870
the the trance the moving of the bytes

514
00:26:12,870 --> 00:26:19,100
key to a different registers like this

515
00:26:19,100 --> 00:26:21,930
okay let's have some video demo to wake

516
00:26:21,930 --> 00:26:33,240
you up this is a HUD video okay this is

517
00:26:33,240 --> 00:26:39,390
a this isn't only how I can falsify so

518
00:26:39,390 --> 00:26:41,460
this one generates the pseudo-random

519
00:26:41,460 --> 00:26:46,560
value and then based on the

520
00:26:46,560 --> 00:26:48,660
pseudo-random value it will generate

521
00:26:48,660 --> 00:26:53,910
again the combination of bytes you will

522
00:26:53,910 --> 00:26:56,940
see here I just followed the virtual

523
00:26:56,940 --> 00:27:00,510
memory 9000 okay after generating that

524
00:27:00,510 --> 00:27:03,450
one you will see that it will generate a

525
00:27:03,450 --> 00:27:06,570
combination of seed now there is for

526
00:27:06,570 --> 00:27:08,850
this one call instruction okay based on

527
00:27:08,850 --> 00:27:10,890
the number of the different combination

528
00:27:10,890 --> 00:27:14,190
it generates the mob edx and a random

529
00:27:14,190 --> 00:27:17,850
value right and then another

530
00:27:17,850 --> 00:27:21,210
pseudorandom value generates that

531
00:27:21,210 --> 00:27:22,980
particular byte it will keep on

532
00:27:22,980 --> 00:27:30,150
generating the the bytes what is the

533
00:27:30,150 --> 00:27:31,290
main purpose of that one

534
00:27:31,290 --> 00:27:35,420
the main purpose is it is tried to

535
00:27:35,420 --> 00:27:40,200
create a metamorphic encrypted value in

536
00:27:40,200 --> 00:27:43,260
metamorphic value for the poor bytes

537
00:27:43,260 --> 00:27:47,990
here it will create a series of mode

538
00:27:47,990 --> 00:27:51,540
subtraction and addition values addition

539
00:27:51,540 --> 00:27:53,070
instructions okay

540
00:27:53,070 --> 00:27:56,130
just to produce the ball four bytes here

541
00:27:56,130 --> 00:27:59,010
this is the the decrypted code okay

542
00:27:59,010 --> 00:27:59,670
later

543
00:27:59,670 --> 00:28:02,390
after creating those theories of

544
00:28:02,390 --> 00:28:05,010
subtractions and additions instructions

545
00:28:05,010 --> 00:28:08,010
okay you will be able to to change this

546
00:28:08,010 --> 00:28:10,740
to a different value change it to tour

547
00:28:10,740 --> 00:28:12,120
detoured and it

548
00:28:12,120 --> 00:28:14,400
looks like an encrypted value what

549
00:28:14,400 --> 00:28:20,840
happen what's going on with this again

550
00:28:20,840 --> 00:28:27,750
stiff again our DPS Steve guess the

551
00:28:27,750 --> 00:28:30,440
random value

552
00:28:42,249 --> 00:28:45,799
so it generates that big bunch of codes

553
00:28:45,799 --> 00:28:50,389
or the like 718 7 bytes I seven lines of

554
00:28:50,389 --> 00:28:53,359
instructions to generate just to to port

555
00:28:53,359 --> 00:28:56,289
was on the poor bytes

556
00:29:08,320 --> 00:29:10,820
you will see that it will change the but

557
00:29:10,820 --> 00:29:13,159
the poor bytes value in the original

558
00:29:13,159 --> 00:29:22,610
code so that one changes by now see it

559
00:29:22,610 --> 00:29:24,950
changes that particular four bytes

560
00:29:24,950 --> 00:29:27,499
just superb bytes and now it is going to

561
00:29:27,499 --> 00:29:30,110
generate the mob instruction where in

562
00:29:30,110 --> 00:29:33,019
that value will be placed to a certain

563
00:29:33,019 --> 00:29:37,429
register that one the mode B word in the

564
00:29:37,429 --> 00:29:42,049
X psi and then that seven or eight lines

565
00:29:42,049 --> 00:29:45,080
of instruction is only poor for the

566
00:29:45,080 --> 00:29:47,720
first D word okay for first four bytes

567
00:29:47,720 --> 00:29:52,669
now if you will see here I just press f9

568
00:29:52,669 --> 00:29:56,480
rf8 okay and then it generates this more

569
00:29:56,480 --> 00:29:59,840
than ten instructions tool to try to

570
00:29:59,840 --> 00:30:03,950
encrypt the the next four bytes okay and

571
00:30:03,950 --> 00:30:06,350
then again followed by the mob

572
00:30:06,350 --> 00:30:12,830
instruction it will continue doing that

573
00:30:12,830 --> 00:30:16,369
until all the the actual the original

574
00:30:16,369 --> 00:30:20,239
code is already in its encrypted form

575
00:30:20,239 --> 00:30:24,489
okay but it now generates its new set of

576
00:30:24,489 --> 00:30:27,259
metamorphic algorithms so you will see

577
00:30:27,259 --> 00:30:29,929
that the metamorphic algorithm is only a

578
00:30:29,929 --> 00:30:33,379
combination of addition subtraction and

579
00:30:33,379 --> 00:30:37,070
mob instructions it is very simple

580
00:30:37,070 --> 00:30:39,470
actually in turns but if you want to

581
00:30:39,470 --> 00:30:41,869
make a very complicated one you can

582
00:30:41,869 --> 00:30:45,129
insert garbage code you can insert nope

583
00:30:45,129 --> 00:30:48,440
operations were in it will delay further

584
00:30:48,440 --> 00:30:51,590
analysis but I'm not the bad guy here I

585
00:30:51,590 --> 00:30:54,470
am just saying that it will delay the

586
00:30:54,470 --> 00:30:57,200
researchers time okay for example you're

587
00:30:57,200 --> 00:30:59,960
trying to analyze this at work and then

588
00:30:59,960 --> 00:31:05,090
you only have like an hour to do the to

589
00:31:05,090 --> 00:31:07,159
do the execution or to do the virus

590
00:31:07,159 --> 00:31:10,820
report okay you cannot do this you have

591
00:31:10,820 --> 00:31:13,039
to use the same language right to

592
00:31:13,039 --> 00:31:15,289
generate the base report but if you want

593
00:31:15,289 --> 00:31:16,940
to dig deeper on the

594
00:31:16,940 --> 00:31:20,090
you want to see how it works or how to

595
00:31:20,090 --> 00:31:23,480
try to do the - to try to extract the

596
00:31:23,480 --> 00:31:26,540
the file okay you have to go deeper like

597
00:31:26,540 --> 00:31:28,670
looking into this and then the malware

598
00:31:28,670 --> 00:31:31,760
is the main purpose is for you to waste

599
00:31:31,760 --> 00:31:34,400
your time debugging okay but if you

600
00:31:34,400 --> 00:31:36,140
really want to dig this one and then you

601
00:31:36,140 --> 00:31:38,390
only have an hour or two and then you

602
00:31:38,390 --> 00:31:41,660
didn't produce the result you'll be

603
00:31:41,660 --> 00:31:42,080
fired

604
00:31:42,080 --> 00:31:45,280
okay I'm actually I'm not yet paid yet

605
00:31:45,280 --> 00:31:49,150
I'm still working okay so that is how

606
00:31:49,150 --> 00:31:52,430
metamorphic algorithm or this the engine

607
00:31:52,430 --> 00:31:54,560
metamorphic engine that the malware uses

608
00:31:54,560 --> 00:31:57,380
in order for it to to generate the

609
00:31:57,380 --> 00:31:59,720
metamorphic code later we will see how

610
00:31:59,720 --> 00:32:02,720
the metamorphic this is creating the

611
00:32:02,720 --> 00:32:03,830
metamorphic code

612
00:32:03,830 --> 00:32:06,080
okay later we will run the metamorphic

613
00:32:06,080 --> 00:32:09,560
code to bring back the original my way

614
00:32:09,560 --> 00:32:15,020
okay so that is how it executes the

615
00:32:15,020 --> 00:32:18,830
whole thing it's almost done don't worry

616
00:32:18,830 --> 00:32:23,379
if you're hungry it's almost done

617
00:32:23,530 --> 00:32:27,170
they said we will be here up to 12:30

618
00:32:27,170 --> 00:32:34,400
right no so that is so so it different

619
00:32:34,400 --> 00:32:37,280
number of bytes different number that is

620
00:32:37,280 --> 00:32:39,800
how it makes it harder the good thing

621
00:32:39,800 --> 00:32:41,990
with this one is later I will tell you

622
00:32:41,990 --> 00:32:45,350
how to simplify the the reverse

623
00:32:45,350 --> 00:32:46,160
engineering

624
00:32:46,160 --> 00:32:48,170
if you encounter not only for build up

625
00:32:48,170 --> 00:32:50,240
if you encounter a malware with

626
00:32:50,240 --> 00:32:53,240
metamorphic algorithm it will there is a

627
00:32:53,240 --> 00:32:57,830
simple way to skip those things I will

628
00:32:57,830 --> 00:33:01,250
tell you later if you if you stay if you

629
00:33:01,250 --> 00:33:04,190
don't you will not see it so it

630
00:33:04,190 --> 00:33:06,260
generates that one if you look into the

631
00:33:06,260 --> 00:33:08,420
malware with metamorphic algorithm it

632
00:33:08,420 --> 00:33:10,040
will be like it will look something like

633
00:33:10,040 --> 00:33:12,170
it's hard to do right so that's the end

634
00:33:12,170 --> 00:33:16,870
I didn't finish the whole thing okay so

635
00:33:17,050 --> 00:33:20,180
the generated metamorphic algorithm is

636
00:33:20,180 --> 00:33:23,390
actually this one the very first one we

637
00:33:23,390 --> 00:33:25,790
go back to this one this is actually the

638
00:33:25,790 --> 00:33:27,890
generated metamorphic algorithm is the

639
00:33:27,890 --> 00:33:30,890
very first set of codes being exactly

640
00:33:30,890 --> 00:33:34,520
that once you execute the malware he it

641
00:33:34,520 --> 00:33:37,730
changes in sizes it is approximately to

642
00:33:37,730 --> 00:33:39,970
828 kilobytes lon

643
00:33:39,970 --> 00:33:44,030
okay I compared to samples which is the

644
00:33:44,030 --> 00:33:47,990
same same host file okay but different

645
00:33:47,990 --> 00:33:51,800
sets so this is the the decrypted at the

646
00:33:51,800 --> 00:33:54,050
encrypted metamorphic encrypted code

647
00:33:54,050 --> 00:33:57,680
this is the actual malware code okay the

648
00:33:57,680 --> 00:34:00,050
first D word divorce the poor bytes it

649
00:34:00,050 --> 00:34:03,820
actually decrypt that one into this one

650
00:34:03,820 --> 00:34:07,010
okay the second D word is actually

651
00:34:07,010 --> 00:34:10,550
generated by this group of codes to

652
00:34:10,550 --> 00:34:14,918
produce this one the third D word is

653
00:34:14,918 --> 00:34:17,870
actually produced using this one so

654
00:34:17,870 --> 00:34:20,000
different number of bytes different

655
00:34:20,000 --> 00:34:21,560
number of instructions different lengths

656
00:34:21,560 --> 00:34:25,190
okay another example the some second

657
00:34:25,190 --> 00:34:28,100
sample that I use okay the same the same

658
00:34:28,100 --> 00:34:32,090
host file different encryption okay I

659
00:34:32,090 --> 00:34:35,840
didn't change the square boxes here okay

660
00:34:35,840 --> 00:34:37,730
to show you that they they have

661
00:34:37,730 --> 00:34:40,340
different sets of codes look at looking

662
00:34:40,340 --> 00:34:41,000
into this

663
00:34:41,000 --> 00:34:43,668
they have different bytes here but it

664
00:34:43,668 --> 00:34:48,710
generates the same malware code okay

665
00:34:48,710 --> 00:34:52,570
third D word and so on okay

666
00:34:52,570 --> 00:34:54,530
comparing the per sample

667
00:34:54,530 --> 00:34:57,410
this is your second sample which is the

668
00:34:57,410 --> 00:35:00,350
same host file different encryption

669
00:35:00,350 --> 00:35:02,690
okay comparing against the first avoid

670
00:35:02,690 --> 00:35:05,480
for the second and per sample came of

671
00:35:05,480 --> 00:35:05,990
EDI

672
00:35:05,990 --> 00:35:07,730
it uses even the movie selection is

673
00:35:07,730 --> 00:35:12,710
different second award different third

674
00:35:12,710 --> 00:35:15,290
award and so and support but if you want

675
00:35:15,290 --> 00:35:18,350
to create signature detection okay you

676
00:35:18,350 --> 00:35:20,660
can actually just detect the decrypt

677
00:35:20,660 --> 00:35:22,790
advice again they are the same even

678
00:35:22,790 --> 00:35:24,860
though they are different it uses

679
00:35:24,860 --> 00:35:27,260
different number of bytes they are still

680
00:35:27,260 --> 00:35:29,300
the same except for this one okay that

681
00:35:29,300 --> 00:35:32,510
is the initial value initial key which

682
00:35:32,510 --> 00:35:34,430
is different every time but if you want

683
00:35:34,430 --> 00:35:36,560
to detect this it is always the same

684
00:35:36,560 --> 00:35:38,990
demo be X and the nope

685
00:35:38,990 --> 00:35:41,780
and the jump okay that is if you want to

686
00:35:41,780 --> 00:35:44,660
make variate action

687
00:35:44,660 --> 00:35:47,539
and for the another demo showing you how

688
00:35:47,539 --> 00:35:50,450
the metamorphic engine works or the

689
00:35:50,450 --> 00:35:54,039
metamorphic algorithm works so this one

690
00:35:54,039 --> 00:35:57,530
we are now running the the generated

691
00:35:57,530 --> 00:36:01,270
algorithm it is now going to change back

692
00:36:01,270 --> 00:36:05,359
the code okay every time it has the mob

693
00:36:05,359 --> 00:36:06,230
instruction

694
00:36:06,230 --> 00:36:11,119
this one this one changes okay it is now

695
00:36:11,119 --> 00:36:13,730
returning back the malware code that is

696
00:36:13,730 --> 00:36:16,970
actually the very first set of execution

697
00:36:16,970 --> 00:36:21,170
of the malware it will continue again

698
00:36:21,170 --> 00:36:25,210
until the whole metamorphic code

699
00:36:25,210 --> 00:36:28,520
generates the actual malware algorithm

700
00:36:28,520 --> 00:36:31,220
and then the secret is if you

701
00:36:31,220 --> 00:36:33,710
encountered the malware that uses

702
00:36:33,710 --> 00:36:36,980
metamorphic algorithm there's always a

703
00:36:36,980 --> 00:36:40,039
jump out there's always a way out

704
00:36:40,039 --> 00:36:41,119
all you have to do is to put a

705
00:36:41,119 --> 00:36:43,730
breakpoint on that particular location

706
00:36:43,730 --> 00:36:46,849
and then you will be able to to skip all

707
00:36:46,849 --> 00:36:51,020
the time wasting debugging okay all you

708
00:36:51,020 --> 00:36:52,160
have to do is to look for that

709
00:36:52,160 --> 00:36:53,119
particular part

710
00:36:53,119 --> 00:36:55,789
if you encounter a code and then your

711
00:36:55,789 --> 00:36:57,529
debugging is step by step and then you

712
00:36:57,529 --> 00:36:59,619
figure that this is actually a

713
00:36:59,619 --> 00:37:01,910
metamorphic algorithm all you have to do

714
00:37:01,910 --> 00:37:04,039
is to look for the jump out put a

715
00:37:04,039 --> 00:37:07,549
breakpoint up to four four ollie and

716
00:37:07,549 --> 00:37:10,970
then execute press f9 do not press f9

717
00:37:10,970 --> 00:37:14,140
first before you put the f2k it will

718
00:37:14,140 --> 00:37:17,119
execute your malware right so all you

719
00:37:17,119 --> 00:37:18,950
have to do is to it will continue doing

720
00:37:18,950 --> 00:37:21,619
that imagine if we I am actually

721
00:37:21,619 --> 00:37:25,369
automating this with with just pressing

722
00:37:25,369 --> 00:37:28,309
C and pressing some 100 times I think I

723
00:37:28,309 --> 00:37:30,500
think I press 1 million times there

724
00:37:30,500 --> 00:37:34,309
chalo this this is actually there is

725
00:37:34,309 --> 00:37:36,770
actually every time you encounter a

726
00:37:36,770 --> 00:37:39,020
metamorphic algorithm there is a jump

727
00:37:39,020 --> 00:37:42,789
there is a hole going out look for that

728
00:37:42,789 --> 00:37:46,520
breakpoint and then execute it you will

729
00:37:46,520 --> 00:37:51,680
now be able to see the actual the actual

730
00:37:51,680 --> 00:37:54,559
malware called after generating there is

731
00:37:54,559 --> 00:37:58,070
now the call EDX the EDX contains the

732
00:37:58,070 --> 00:38:02,990
is the that part this is the the one

733
00:38:02,990 --> 00:38:04,640
that is already decrypted that is your

734
00:38:04,640 --> 00:38:06,530
mother called okay that is the technique

735
00:38:06,530 --> 00:38:09,500
of the decrypting the malware made

736
00:38:09,500 --> 00:38:12,440
metamorphic algorithm okay there is look

737
00:38:12,440 --> 00:38:19,900
for the fall or the jump out cold Rico

738
00:38:23,440 --> 00:38:25,970
Pro conclusion I look to this for

739
00:38:25,970 --> 00:38:28,340
reversing elected is to look for the

740
00:38:28,340 --> 00:38:30,170
metamorphic algorithm end of the

741
00:38:30,170 --> 00:38:32,270
metamorphic algorithm as I said earlier

742
00:38:32,270 --> 00:38:35,810
the jump and the hole copy the decrypted

743
00:38:35,810 --> 00:38:38,210
code if you want to analyze it in I da

744
00:38:38,210 --> 00:38:41,500
or what this ascender that you have

745
00:38:41,500 --> 00:38:43,820
detection get the patterns from the

746
00:38:43,820 --> 00:38:47,090
decrypted code not from the the

747
00:38:47,090 --> 00:38:50,060
encrypted or the the metamorphic

748
00:38:50,060 --> 00:38:53,090
algorithm okay and for cleaning most

749
00:38:53,090 --> 00:38:54,500
most of the time the malware has

750
00:38:54,500 --> 00:38:57,050
registry keys a loop to do is to delete

751
00:38:57,050 --> 00:38:59,360
those things first you can extract the

752
00:38:59,360 --> 00:39:01,040
host files and of course they need all

753
00:39:01,040 --> 00:39:05,200
the drop wise or a simpler thing is get

754
00:39:05,200 --> 00:39:08,480
get you installer and operate the whole

755
00:39:08,480 --> 00:39:11,510
thing and you're dead right that is for

756
00:39:11,510 --> 00:39:14,690
the for the cleaning I think that's the

757
00:39:14,690 --> 00:39:16,460
only thing that that's everything that I

758
00:39:16,460 --> 00:39:29,720
have any question mercy we have 10

759
00:39:29,720 --> 00:39:34,450
minutes for question No

760
00:39:40,720 --> 00:39:47,450
for for me or if you're going to do if

761
00:39:47,450 --> 00:39:49,730
you're going to analyze the the malware

762
00:39:49,730 --> 00:39:52,370
and then you want to to generate the

763
00:39:52,370 --> 00:39:54,770
virus report for example because that's

764
00:39:54,770 --> 00:39:58,010
what I usually do I can I can run all

765
00:39:58,010 --> 00:40:00,320
the tools that I have run the malware

766
00:40:00,320 --> 00:40:02,360
and then I will be able to get all the

767
00:40:02,360 --> 00:40:05,090
the codes but because I prepared this

768
00:40:05,090 --> 00:40:08,450
for the presentation for the top ok took

769
00:40:08,450 --> 00:40:11,660
took me awhile for it for the analysis

770
00:40:11,660 --> 00:40:14,420
part you can have like a week doing the

771
00:40:14,420 --> 00:40:16,340
because you're trying to look for the

772
00:40:16,340 --> 00:40:18,920
algorithm and so on and so forth but it

773
00:40:18,920 --> 00:40:20,570
will take longer if you want to make

774
00:40:20,570 --> 00:40:23,510
some slice and everything but even

775
00:40:23,510 --> 00:40:25,010
though the malware is very complicated

776
00:40:25,010 --> 00:40:27,200
if you use the tools and everything to

777
00:40:27,200 --> 00:40:29,570
automate it you will be able to get you

778
00:40:29,570 --> 00:40:31,550
will be able to know that is it is a

779
00:40:31,550 --> 00:40:33,830
malware you'll be able to Turner that

780
00:40:33,830 --> 00:40:36,080
that is malicious but if you want to go

781
00:40:36,080 --> 00:40:38,570
to dig deeper it will take you time

782
00:40:38,570 --> 00:40:41,120
probably one week is enough to see the

783
00:40:41,120 --> 00:40:43,910
code ok to see the metamorphic and

784
00:40:43,910 --> 00:40:45,280
everything one week without slipping

785
00:40:45,280 --> 00:40:48,830
okay not not regular work time okay and

786
00:40:48,830 --> 00:40:50,510
then he'll be able to see the code and

787
00:40:50,510 --> 00:40:54,230
then another probably a month to do some

788
00:40:54,230 --> 00:40:57,560
some graphics for the presentation for

789
00:40:57,560 --> 00:40:59,690
you to be able to sleep while you're

790
00:40:59,690 --> 00:41:02,300
listening to me that's mostly how it

791
00:41:02,300 --> 00:41:04,910
works but if you use assembly line send

792
00:41:04,910 --> 00:41:06,230
all your samples there and then you'll

793
00:41:06,230 --> 00:41:08,950
be able to see your your body support

794
00:41:08,950 --> 00:41:35,000
question no the thing is if you have the

795
00:41:35,000 --> 00:41:37,850
infected malware or impacted very low

796
00:41:37,850 --> 00:41:40,550
okay if you use ID a right away you

797
00:41:40,550 --> 00:41:42,800
won't be able to see anything because it

798
00:41:42,800 --> 00:41:45,710
is polymorphic and metamorphic encrypted

799
00:41:45,710 --> 00:41:48,140
so you have to run first it in a

800
00:41:48,140 --> 00:41:50,750
debugger and then you break point you

801
00:41:50,750 --> 00:41:51,759
stop somewhere

802
00:41:51,759 --> 00:41:54,489
you got the decrypted code and after

803
00:41:54,489 --> 00:41:57,429
that you can now dump it back to IDF

804
00:41:57,429 --> 00:42:00,939
but the kitchen and the name you have to

805
00:42:00,939 --> 00:42:03,989
get over it yourself

806
00:42:03,989 --> 00:42:11,519
did I answer your question yeah yeah

807
00:42:11,519 --> 00:42:15,519
yeah yeah you have to to know analyze

808
00:42:15,519 --> 00:42:16,989
the function then or this function

809
00:42:16,989 --> 00:42:19,599
actually generates the metamorphic then

810
00:42:19,599 --> 00:42:21,819
you put the name so that when the next

811
00:42:21,819 --> 00:42:23,769
time you encounter the function you will

812
00:42:23,769 --> 00:42:25,329
know that it uses so you don't need to

813
00:42:25,329 --> 00:42:26,349
do it again

814
00:42:26,349 --> 00:42:28,919
right you will know what it does

815
00:42:28,919 --> 00:43:02,990
pressure so the question

816
00:43:02,990 --> 00:43:05,810
was it what is the impact of the

817
00:43:05,810 --> 00:43:09,140
discontent gated malware from day to day

818
00:43:09,140 --> 00:43:17,960
basis there are actually different kinds

819
00:43:17,960 --> 00:43:20,630
of transformer that uses different kinds

820
00:43:20,630 --> 00:43:23,240
of techniques like for example beer love

821
00:43:23,240 --> 00:43:26,210
is using metamorphic polymorphic engine

822
00:43:26,210 --> 00:43:29,480
k2n uses file infection most of the

823
00:43:29,480 --> 00:43:31,910
ransomware that we have is they just

824
00:43:31,910 --> 00:43:34,250
encrypt your files put a message and

825
00:43:34,250 --> 00:43:36,440
then that's it okay but this one okay I

826
00:43:36,440 --> 00:43:38,630
personally choose this one because it

827
00:43:38,630 --> 00:43:40,850
also impacts files because even though

828
00:43:40,850 --> 00:43:44,150
you unlock your skin you will be still

829
00:43:44,150 --> 00:43:46,100
be infected if you get the infected

830
00:43:46,100 --> 00:43:48,710
files okay but there's another one like

831
00:43:48,710 --> 00:43:50,630
petia if you heard up a TIA

832
00:43:50,630 --> 00:43:52,820
the one with the blinking skull okay

833
00:43:52,820 --> 00:43:56,990
that one uses some form of polymorphic

834
00:43:56,990 --> 00:43:59,570
algorithm metamorphic but it is it uses

835
00:43:59,570 --> 00:44:01,820
some crypto logic but at the same time

836
00:44:01,820 --> 00:44:05,480
it is actually impacting your operating

837
00:44:05,480 --> 00:44:07,520
your MBR the Master Boot Record so it

838
00:44:07,520 --> 00:44:09,950
uses it overrides your Master Boot

839
00:44:09,950 --> 00:44:12,920
Record and at the same time it tries to

840
00:44:12,920 --> 00:44:14,990
locks your your screen so that that

841
00:44:14,990 --> 00:44:17,690
particular part is actually petia is not

842
00:44:17,690 --> 00:44:20,000
actually encrypting your files it is

843
00:44:20,000 --> 00:44:23,119
encrypting the table the MSFT table of

844
00:44:23,119 --> 00:44:25,130
the file and then that's it you will not

845
00:44:25,130 --> 00:44:28,010
be able to to use the nature so

846
00:44:28,010 --> 00:44:30,140
different malware different ransomware

847
00:44:30,140 --> 00:44:32,720
they uses different techniques but for

848
00:44:32,720 --> 00:44:34,520
your second question we can actually

849
00:44:34,520 --> 00:44:36,800
categorize them for example you will be

850
00:44:36,800 --> 00:44:39,680
able to get the same group of weight the

851
00:44:39,680 --> 00:44:41,570
way they use it and then you can tell

852
00:44:41,570 --> 00:44:44,240
that this actually this particular group

853
00:44:44,240 --> 00:44:46,850
created the same set of mugger because

854
00:44:46,850 --> 00:44:48,950
they just reusing their code but some

855
00:44:48,950 --> 00:44:52,280
malware authors they just actually uses

856
00:44:52,280 --> 00:44:55,010
other other peoples code and then they

857
00:44:55,010 --> 00:44:57,680
create their own so usually that that's

858
00:44:57,680 --> 00:45:06,980
what happened question the windbg the

859
00:45:06,980 --> 00:45:10,070
windbg is actually a very strong

860
00:45:10,070 --> 00:45:13,400
debugger okay but i prepare only an

861
00:45:13,400 --> 00:45:17,000
immunity debugger and x64 dbg because

862
00:45:17,000 --> 00:45:19,070
I'm actually familiar already familiar

863
00:45:19,070 --> 00:45:21,680
with the GUI and everything but windbg

864
00:45:21,680 --> 00:45:24,770
is very strong if you're if you're doing

865
00:45:24,770 --> 00:45:27,920
using windbg I said yes you can stick to

866
00:45:27,920 --> 00:45:30,650
the windbg it's probably the the way we

867
00:45:30,650 --> 00:45:33,320
use all the bugger C's is by preference

868
00:45:33,320 --> 00:45:36,140
you want to use this we wants like going

869
00:45:36,140 --> 00:45:38,120
to McDonald's you it you want

870
00:45:38,120 --> 00:45:40,340
cheeseburger the other one but but this

871
00:45:40,340 --> 00:45:42,410
their their burgers right just different

872
00:45:42,410 --> 00:45:48,290
flavors question you want to it nice now

873
00:45:48,290 --> 00:45:55,180
right thank you for for your time

