1
00:00:21,180 --> 00:00:23,279
hi everyone my name is Doug krass and

2
00:00:23,279 --> 00:00:24,359
I'm going to teach you about the

3
00:00:24,359 --> 00:00:27,180
adventures of iot hacking

4
00:00:27,180 --> 00:00:30,539
so who am I I am a hacker I am a

5
00:00:30,539 --> 00:00:32,759
security test security testing

6
00:00:32,759 --> 00:00:35,579
consultant at a on Cyber Solutions

7
00:00:35,579 --> 00:00:38,160
so to Aeon we offer a wide variety of

8
00:00:38,160 --> 00:00:39,960
different tests including penetration

9
00:00:39,960 --> 00:00:43,260
testing dfir testing high value Asset

10
00:00:43,260 --> 00:00:44,879
testing when you get into more of the

11
00:00:44,879 --> 00:00:46,440
red teaming

12
00:00:46,440 --> 00:00:48,719
a physical security testing a lot of

13
00:00:48,719 --> 00:00:51,000
different tests so if your company is

14
00:00:51,000 --> 00:00:53,280
looking for security testing we can

15
00:00:53,280 --> 00:00:54,660
provide that

16
00:00:54,660 --> 00:00:56,940
I'm also a continuous learner and my

17
00:00:56,940 --> 00:01:00,440
wife would say I'm a mega goober

18
00:01:01,020 --> 00:01:03,300
so what is iot well it stands for

19
00:01:03,300 --> 00:01:04,680
internet of things and we're going to

20
00:01:04,680 --> 00:01:07,439
generalize it a little bit for this talk

21
00:01:07,439 --> 00:01:08,939
we're going to say that it's some kind

22
00:01:08,939 --> 00:01:11,400
of product doesn't it has some kind of

23
00:01:11,400 --> 00:01:13,260
connectivity it could be Bluetooth could

24
00:01:13,260 --> 00:01:17,100
be uh online could have HTTP servers or

25
00:01:17,100 --> 00:01:18,600
something

26
00:01:18,600 --> 00:01:20,460
and they read data do some kind of

27
00:01:20,460 --> 00:01:21,600
function right it might be like a

28
00:01:21,600 --> 00:01:24,020
temperature sensor that reads your

29
00:01:24,020 --> 00:01:26,520
temperature of your fridge and says hey

30
00:01:26,520 --> 00:01:28,979
you left the fridge open it's rising

31
00:01:28,979 --> 00:01:32,900
maybe you should go close your fridge

32
00:01:33,720 --> 00:01:35,340
so do that right we have the temperature

33
00:01:35,340 --> 00:01:37,619
sensors like we talked about security

34
00:01:37,619 --> 00:01:40,079
cameras but now we're putting everything

35
00:01:40,079 --> 00:01:42,479
online right we want to put our washers

36
00:01:42,479 --> 00:01:45,240
and our dryers and our fridges yes all

37
00:01:45,240 --> 00:01:49,439
new exciting smart home stuff did it get

38
00:01:49,439 --> 00:01:53,399
tested I don't know maybe not

39
00:01:53,399 --> 00:01:55,200
um so we classified things that are

40
00:01:55,200 --> 00:01:58,259
online really not your normal computer

41
00:01:58,259 --> 00:01:59,939
and they don't always get the best

42
00:01:59,939 --> 00:02:01,439
testing Maybe

43
00:02:01,439 --> 00:02:03,720
the company just doesn't have the

44
00:02:03,720 --> 00:02:05,880
ability to test they don't have internal

45
00:02:05,880 --> 00:02:08,940
test teams and they don't want to pay 75

46
00:02:08,940 --> 00:02:11,879
000 a product every version to push it

47
00:02:11,879 --> 00:02:14,879
out so just goes in prod and we'll see

48
00:02:14,879 --> 00:02:17,239
what happens

49
00:02:17,400 --> 00:02:18,900
so why do we want to hack these devices

50
00:02:18,900 --> 00:02:20,580
well we said they're less secure so

51
00:02:20,580 --> 00:02:24,420
sometimes you can find some cool things

52
00:02:24,420 --> 00:02:25,800
um they're a lot of fun there's a lot of

53
00:02:25,800 --> 00:02:27,720
interesting vulnerabilities that you

54
00:02:27,720 --> 00:02:28,860
find

55
00:02:28,860 --> 00:02:32,400
I found a vulnerability where when you

56
00:02:32,400 --> 00:02:34,920
send input into this field

57
00:02:34,920 --> 00:02:37,680
the uh it caused the denial of service

58
00:02:37,680 --> 00:02:39,900
the iot device totally stopped

59
00:02:39,900 --> 00:02:40,980
functioning

60
00:02:40,980 --> 00:02:42,660
and then it just vomited source code

61
00:02:42,660 --> 00:02:45,180
onto your web browser hey source code

62
00:02:45,180 --> 00:02:47,519
disclosure that was easy

63
00:02:47,519 --> 00:02:48,720
there's a lot of different attack

64
00:02:48,720 --> 00:02:50,760
surfaces too right we don't have the

65
00:02:50,760 --> 00:02:52,800
standard like you have the standard

66
00:02:52,800 --> 00:02:55,800
Network Style

67
00:02:55,800 --> 00:02:57,959
areas but you also can get into Hardware

68
00:02:57,959 --> 00:03:00,360
so you can get into removing the chips

69
00:03:00,360 --> 00:03:02,220
or connecting the hardware debug

70
00:03:02,220 --> 00:03:03,840
interface

71
00:03:03,840 --> 00:03:07,080
and it's really hard to hire iot

72
00:03:07,080 --> 00:03:09,599
contesters I was looking for someone to

73
00:03:09,599 --> 00:03:11,700
join my previous team

74
00:03:11,700 --> 00:03:13,920
we couldn't find anyone it took a really

75
00:03:13,920 --> 00:03:16,019
long time so it'd make you really

76
00:03:16,019 --> 00:03:18,420
marketable hey it's another thing that I

77
00:03:18,420 --> 00:03:21,000
have in my toolkit so I can do networks

78
00:03:21,000 --> 00:03:22,700
and web apps and I can do Hardware

79
00:03:22,700 --> 00:03:26,720
companies are going to want to hire you

80
00:03:26,760 --> 00:03:29,400
so what kind of skills do you need for

81
00:03:29,400 --> 00:03:32,159
you know starting General electronic

82
00:03:32,159 --> 00:03:34,200
knowledge but not like super crazy right

83
00:03:34,200 --> 00:03:37,560
can you look at a PCB board and start

84
00:03:37,560 --> 00:03:40,080
googling components might be all you

85
00:03:40,080 --> 00:03:42,299
need maybe you know identifying some

86
00:03:42,299 --> 00:03:44,879
chips and it says hey this is a flash

87
00:03:44,879 --> 00:03:45,720
chip

88
00:03:45,720 --> 00:03:48,299
okay so what does The Flash chip do and

89
00:03:48,299 --> 00:03:49,920
Google will tell you maybe it stores

90
00:03:49,920 --> 00:03:51,780
your firmware or it does

91
00:03:51,780 --> 00:03:55,140
this function and that function

92
00:03:55,140 --> 00:03:58,080
um you don't have to be a crazy coder

93
00:03:58,080 --> 00:04:00,959
either right C code is very easy to

94
00:04:00,959 --> 00:04:03,659
understand and you can Google the C code

95
00:04:03,659 --> 00:04:06,900
and say hey what is this function do

96
00:04:06,900 --> 00:04:09,060
and Google will gladly tell you well it

97
00:04:09,060 --> 00:04:11,400
takes an integer and a pointer and it

98
00:04:11,400 --> 00:04:13,379
does this with this and here's the

99
00:04:13,379 --> 00:04:15,780
results and you can infer what the iot

100
00:04:15,780 --> 00:04:19,139
device is doing based off knowing what

101
00:04:19,139 --> 00:04:21,540
that c function does

102
00:04:21,540 --> 00:04:23,940
and then soldering sometimes you got a

103
00:04:23,940 --> 00:04:26,100
solder directly to the board or directly

104
00:04:26,100 --> 00:04:28,620
to processor pins which is really risky

105
00:04:28,620 --> 00:04:30,120
and something I don't recommend but

106
00:04:30,120 --> 00:04:31,860
there's test points typically on board

107
00:04:31,860 --> 00:04:33,960
so if I want to

108
00:04:33,960 --> 00:04:36,600
connect to this specific test Point well

109
00:04:36,600 --> 00:04:38,520
it's over here on the board and it's

110
00:04:38,520 --> 00:04:40,380
this pin on the processor these connect

111
00:04:40,380 --> 00:04:42,120
I can solder there

112
00:04:42,120 --> 00:04:43,860
and we can connect

113
00:04:43,860 --> 00:04:47,040
another sense of adventure there's not a

114
00:04:47,040 --> 00:04:49,860
lot of good documentation out on kind of

115
00:04:49,860 --> 00:04:52,860
how to go about and do iot testing so

116
00:04:52,860 --> 00:04:55,020
you have to get creative and just don't

117
00:04:55,020 --> 00:04:57,120
be afraid to try things

118
00:04:57,120 --> 00:04:59,400
sometimes you might try things and break

119
00:04:59,400 --> 00:05:00,540
a device

120
00:05:00,540 --> 00:05:04,759
done that lots of fun oops

121
00:05:04,759 --> 00:05:08,040
but it's a really fun field

122
00:05:08,040 --> 00:05:10,740
so let's get into some Hardware

123
00:05:10,740 --> 00:05:12,600
attack surfaces and then some Network

124
00:05:12,600 --> 00:05:13,919
Services

125
00:05:13,919 --> 00:05:15,919
so if you are this is universal

126
00:05:15,919 --> 00:05:19,139
asynchronous transmit and receive

127
00:05:19,139 --> 00:05:21,720
and you can normally connect to this and

128
00:05:21,720 --> 00:05:23,460
then it will connect to the processor

129
00:05:23,460 --> 00:05:25,080
sometimes you can interact with the

130
00:05:25,080 --> 00:05:26,280
bootloader

131
00:05:26,280 --> 00:05:30,240
and the bootloader will tell the device

132
00:05:30,240 --> 00:05:32,220
hey this is how you need to boot up so

133
00:05:32,220 --> 00:05:32,940
you need to

134
00:05:32,940 --> 00:05:34,979
run these commands then talk to flash

135
00:05:34,979 --> 00:05:36,960
get the firmware and then do some other

136
00:05:36,960 --> 00:05:38,280
things

137
00:05:38,280 --> 00:05:40,560
you can interrupt this process and you

138
00:05:40,560 --> 00:05:42,479
can sometimes get shells sometimes dump

139
00:05:42,479 --> 00:05:43,979
firmware

140
00:05:43,979 --> 00:05:44,580
um

141
00:05:44,580 --> 00:05:47,520
use the JTAG protocol as well this one's

142
00:05:47,520 --> 00:05:49,440
more interacting with some of the memory

143
00:05:49,440 --> 00:05:52,560
so the device you know my boot up and my

144
00:05:52,560 --> 00:05:54,780
run some kind of binary let's say your

145
00:05:54,780 --> 00:05:57,419
firmware is encrypted but if you can

146
00:05:57,419 --> 00:06:00,539
dump the memory off the processor maybe

147
00:06:00,539 --> 00:06:02,340
there's an encryption key in there so

148
00:06:02,340 --> 00:06:04,380
now you can use that encryption key to

149
00:06:04,380 --> 00:06:06,060
decode the firmware or decrypt the

150
00:06:06,060 --> 00:06:06,960
firmware

151
00:06:06,960 --> 00:06:08,280
and now you can start doing more

152
00:06:08,280 --> 00:06:11,220
analysis and start finding bugs

153
00:06:11,220 --> 00:06:13,740
I know there's the Spy protocol this

154
00:06:13,740 --> 00:06:15,720
will send data typically like one bit at

155
00:06:15,720 --> 00:06:18,660
a time across a bus and you can connect

156
00:06:18,660 --> 00:06:21,060
via spy and you can read that and kind

157
00:06:21,060 --> 00:06:23,400
of see how the device boots up or other

158
00:06:23,400 --> 00:06:24,539
zones

159
00:06:24,539 --> 00:06:28,139
I O2 devices have Network Services like

160
00:06:28,139 --> 00:06:30,060
you know you're doing a standard web app

161
00:06:30,060 --> 00:06:32,660
pen test so you might have HTTP servers

162
00:06:32,660 --> 00:06:35,759
https servers they always use

163
00:06:35,759 --> 00:06:38,400
self-signed certificates because nobody

164
00:06:38,400 --> 00:06:41,039
ever interacts these with actual

165
00:06:41,039 --> 00:06:43,080
certificate authorities

166
00:06:43,080 --> 00:06:46,259
do things like mqtt and mqtts this is

167
00:06:46,259 --> 00:06:48,740
like a published service so you might

168
00:06:48,740 --> 00:06:51,840
send your data from a temperature

169
00:06:51,840 --> 00:06:55,139
reading hey it is 9 five degrees and

170
00:06:55,139 --> 00:06:57,180
you'll publish that to your topic on

171
00:06:57,180 --> 00:06:59,039
that server and that

172
00:06:59,039 --> 00:07:02,400
the mqtt server might do something based

173
00:07:02,400 --> 00:07:04,500
on that right alert that your fridge is

174
00:07:04,500 --> 00:07:06,660
open

175
00:07:06,660 --> 00:07:08,100
um and then there's upgrade mechanisms

176
00:07:08,100 --> 00:07:10,800
maybe you're doing it over USB or

177
00:07:10,800 --> 00:07:13,440
or over like a http server and then

178
00:07:13,440 --> 00:07:15,660
there's Bluetooth as well so maybe

179
00:07:15,660 --> 00:07:17,400
you can mess with the function of the

180
00:07:17,400 --> 00:07:19,380
Bluetooth when it's connecting to a

181
00:07:19,380 --> 00:07:21,300
device or doing firmware upgrades or

182
00:07:21,300 --> 00:07:23,940
something like that

183
00:07:23,940 --> 00:07:25,380
so let's get in the disassembling

184
00:07:25,380 --> 00:07:26,340
devices

185
00:07:26,340 --> 00:07:28,919
here's a picture of a router

186
00:07:28,919 --> 00:07:31,680
and you can see you want to like

187
00:07:31,680 --> 00:07:33,720
carefully open these because you can

188
00:07:33,720 --> 00:07:36,599
easily snap pins and other things you

189
00:07:36,599 --> 00:07:37,919
don't know what's connected underneath

190
00:07:37,919 --> 00:07:41,099
so you rip ribbon cables or something

191
00:07:41,099 --> 00:07:43,620
and then you can see it's kind of hard

192
00:07:43,620 --> 00:07:45,539
to see because it's small

193
00:07:45,539 --> 00:07:49,219
that's not what I want to do

194
00:07:51,300 --> 00:07:53,580
but you can see some of these chips here

195
00:07:53,580 --> 00:07:55,319
it's like the one on the bottom left

196
00:07:55,319 --> 00:07:57,000
it's really hard to see it says wind

197
00:07:57,000 --> 00:07:58,979
Bond and there's a chip number so you

198
00:07:58,979 --> 00:08:00,360
could Google that and say what does that

199
00:08:00,360 --> 00:08:01,259
do

200
00:08:01,259 --> 00:08:02,699
what your results will tell you is

201
00:08:02,699 --> 00:08:05,880
that's the RAM for this device so on the

202
00:08:05,880 --> 00:08:08,280
chip that's upside down it says broadcom

203
00:08:08,280 --> 00:08:10,080
so you Google that you find out it's a

204
00:08:10,080 --> 00:08:12,539
processor this one's not as nice because

205
00:08:12,539 --> 00:08:14,280
the chips aren't on the outside so it's

206
00:08:14,280 --> 00:08:17,520
harder to pin out and then the small one

207
00:08:17,520 --> 00:08:20,160
with the eight pins to the right of that

208
00:08:20,160 --> 00:08:21,419
is The Flash and that's where your

209
00:08:21,419 --> 00:08:22,979
firmware is going to be so if you need

210
00:08:22,979 --> 00:08:25,199
to dump firmware you might be able to

211
00:08:25,199 --> 00:08:27,440
interact

212
00:08:28,259 --> 00:08:29,879
and then use the firmware to understand

213
00:08:29,879 --> 00:08:32,458
how the device does all its different

214
00:08:32,458 --> 00:08:33,839
functionality and then look for

215
00:08:33,839 --> 00:08:35,940
vulnerabilities

216
00:08:35,940 --> 00:08:38,520
so do we need to communicate with these

217
00:08:38,520 --> 00:08:40,559
iot devices well

218
00:08:40,559 --> 00:08:42,899
you need things like a multimeter so

219
00:08:42,899 --> 00:08:45,660
this can help you measure voltages on

220
00:08:45,660 --> 00:08:48,980
the device it can also help you pin out

221
00:08:48,980 --> 00:08:50,700
different

222
00:08:50,700 --> 00:08:53,040
pins so if you're looking for a specific

223
00:08:53,040 --> 00:08:56,339
pin you might hold this end on the PIN

224
00:08:56,339 --> 00:08:58,560
and this one on a test pad or vice versa

225
00:08:58,560 --> 00:09:00,480
I put this on a test pad and say where

226
00:09:00,480 --> 00:09:02,519
does it go and then brush this across

227
00:09:02,519 --> 00:09:04,920
the processor and as you hit the chip

228
00:09:04,920 --> 00:09:07,320
that it electrically connects with it'll

229
00:09:07,320 --> 00:09:08,279
be

230
00:09:08,279 --> 00:09:10,800
so if you flush it real quick oh It

231
00:09:10,800 --> 00:09:12,779
beeped on the bottom row so now I can go

232
00:09:12,779 --> 00:09:16,080
one two three okay this is

233
00:09:16,080 --> 00:09:19,920
shift 65. and then I can look at the

234
00:09:19,920 --> 00:09:22,500
processor diagram to know about chip65

235
00:09:22,500 --> 00:09:25,320
does XYZ function

236
00:09:25,320 --> 00:09:27,420
then we have things like a USB to serial

237
00:09:27,420 --> 00:09:31,440
analyzer so our serial cable and this

238
00:09:31,440 --> 00:09:33,480
just lets you connect to things like you

239
00:09:33,480 --> 00:09:35,940
are it's just an interface you can pull

240
00:09:35,940 --> 00:09:37,440
it up and putty and have like an like a

241
00:09:37,440 --> 00:09:40,019
nice little shell watch the device boot

242
00:09:40,019 --> 00:09:41,760
itself on top

243
00:09:41,760 --> 00:09:43,800
then you have a logic analyzer this

244
00:09:43,800 --> 00:09:46,200
helps you

245
00:09:46,200 --> 00:09:48,180
kind of look at the voltage up and down

246
00:09:48,180 --> 00:09:50,820
and good logic analyzer software will

247
00:09:50,820 --> 00:09:53,459
also help you say okay here's the actual

248
00:09:53,459 --> 00:09:56,040
characters moving across the line

249
00:09:56,040 --> 00:09:58,080
and you can maybe find passwords or

250
00:09:58,080 --> 00:10:00,839
things like that and putty of yours and

251
00:10:00,839 --> 00:10:02,880
windows just to connect to that USB to

252
00:10:02,880 --> 00:10:05,640
serial TTY if you're on Linux you can

253
00:10:05,640 --> 00:10:08,820
use things like screen to connect to the

254
00:10:08,820 --> 00:10:12,420
USB drive or USB cord

255
00:10:12,420 --> 00:10:14,880
so how do we go about attacking Hardware

256
00:10:14,880 --> 00:10:17,459
well we connect over that Ur Port so

257
00:10:17,459 --> 00:10:19,980
that transmit receive pin and the ground

258
00:10:19,980 --> 00:10:22,680
pin are you normally you need ground

259
00:10:22,680 --> 00:10:24,300
and you can watch it boot up and we'll

260
00:10:24,300 --> 00:10:26,519
do this here in a little

261
00:10:26,519 --> 00:10:28,260
bit and it'll come up and it'll say okay

262
00:10:28,260 --> 00:10:30,300
like we're going to load the data

263
00:10:30,300 --> 00:10:31,920
section and it's that memory address

264
00:10:31,920 --> 00:10:33,779
this and now we're going to load this

265
00:10:33,779 --> 00:10:35,580
menu and it's at this address so that

266
00:10:35,580 --> 00:10:37,380
helps you kind of understand what the ad

267
00:10:37,380 --> 00:10:38,880
are

268
00:10:38,880 --> 00:10:40,560
and then it might tell you things like

269
00:10:40,560 --> 00:10:42,240
hey I'm starting up Bluetooth I'm

270
00:10:42,240 --> 00:10:45,000
starting out the hey my IP address is

271
00:10:45,000 --> 00:10:47,279
this this script might have failed or

272
00:10:47,279 --> 00:10:48,360
I'm running

273
00:10:48,360 --> 00:10:51,779
you know slash bar slash www boot or

274
00:10:51,779 --> 00:10:52,860
something

275
00:10:52,860 --> 00:10:54,540
can you get some information based on

276
00:10:54,540 --> 00:10:56,220
that

277
00:10:56,220 --> 00:10:58,440
so and what we can do is we do what's

278
00:10:58,440 --> 00:11:00,120
known as interrupting the food so we're

279
00:11:00,120 --> 00:11:01,980
going to power on the device the

280
00:11:01,980 --> 00:11:04,200
processor is going to go hey flash I

281
00:11:04,200 --> 00:11:05,940
need the firmware

282
00:11:05,940 --> 00:11:09,060
sometimes you can just hold Ctrl C and

283
00:11:09,060 --> 00:11:11,519
the device goes up interrupt cool we're

284
00:11:11,519 --> 00:11:13,560
good and then you can start modifying

285
00:11:13,560 --> 00:11:16,079
arguments or sometimes you might have to

286
00:11:16,079 --> 00:11:19,079
Short The Flash so the processor goes to

287
00:11:19,079 --> 00:11:21,720
read The Flash but the flash is not

288
00:11:21,720 --> 00:11:24,180
there it can't read it it's also a pin

289
00:11:24,180 --> 00:11:25,980
that's called the Cs pin or the chip

290
00:11:25,980 --> 00:11:28,800
select pin so if that's an active higher

291
00:11:28,800 --> 00:11:30,540
low depending on what it is you might

292
00:11:30,540 --> 00:11:33,240
have to short that pin so the processor

293
00:11:33,240 --> 00:11:35,640
tries to read it doesn't know what to do

294
00:11:35,640 --> 00:11:37,800
lots of devices just fall back into a

295
00:11:37,800 --> 00:11:40,560
root shell and say here you go you win

296
00:11:40,560 --> 00:11:42,360
sometimes you have to actually modify

297
00:11:42,360 --> 00:11:44,760
some boot arguments and go

298
00:11:44,760 --> 00:11:47,579
get the shell on the device dump the

299
00:11:47,579 --> 00:11:50,220
firmware find more vulnerabilities and

300
00:11:50,220 --> 00:11:53,000
have all the fun

301
00:11:53,040 --> 00:11:56,220
so let's look at what doing a uart

302
00:11:56,220 --> 00:11:58,079
connection would look like

303
00:11:58,079 --> 00:11:59,519
so it might look something like this

304
00:11:59,519 --> 00:12:01,980
right but the top red box we see it's

305
00:12:01,980 --> 00:12:05,640
disclosing the CFE it's a bootloader and

306
00:12:05,640 --> 00:12:07,320
then there's a version

307
00:12:07,320 --> 00:12:09,660
you'll be shocked to find out the amount

308
00:12:09,660 --> 00:12:11,040
of versions they're like oh we're

309
00:12:11,040 --> 00:12:13,620
running 2008 because we've never updated

310
00:12:13,620 --> 00:12:15,420
our Hardware because

311
00:12:15,420 --> 00:12:17,040
why

312
00:12:17,040 --> 00:12:19,680
and then on the bottom you can see some

313
00:12:19,680 --> 00:12:21,660
of the memory addresses the data

314
00:12:21,660 --> 00:12:25,079
partitions bdss ass some of the stack

315
00:12:25,079 --> 00:12:27,000
that might have good information if you

316
00:12:27,000 --> 00:12:28,800
can dump that

317
00:12:28,800 --> 00:12:31,019
and then like we talked about you might

318
00:12:31,019 --> 00:12:32,700
have to short that flash troop down

319
00:12:32,700 --> 00:12:34,500
there when you're looking for your

320
00:12:34,500 --> 00:12:36,959
there's four pins down there at the

321
00:12:36,959 --> 00:12:38,640
bottom and four pins normally tells you

322
00:12:38,640 --> 00:12:40,920
that it's you are if they're in a row

323
00:12:40,920 --> 00:12:42,959
but still pin them out because if you

324
00:12:42,959 --> 00:12:46,560
were to plug the wrong pins in

325
00:12:46,560 --> 00:12:49,800
you might plug into the VCC which is the

326
00:12:49,800 --> 00:12:52,440
actual like voltage port and if that is

327
00:12:52,440 --> 00:12:55,860
plugged into your computer it may a fire

328
00:12:55,860 --> 00:12:58,200
power back into your computer

329
00:12:58,200 --> 00:13:00,300
you might fry your motherboard your

330
00:13:00,300 --> 00:13:02,040
second week of work and have to tell

331
00:13:02,040 --> 00:13:05,100
your company you need a new laptop

332
00:13:05,100 --> 00:13:07,440
yay

333
00:13:07,440 --> 00:13:10,040
oops

334
00:13:10,620 --> 00:13:13,139
so what kind of software do we need well

335
00:13:13,139 --> 00:13:15,180
on Linux you can use things like screen

336
00:13:15,180 --> 00:13:18,240
NM and then walk I think binwalk's also

337
00:13:18,240 --> 00:13:19,560
on Windows

338
00:13:19,560 --> 00:13:22,160
NM will let you identify different

339
00:13:22,160 --> 00:13:25,740
functions that are in binaries so you

340
00:13:25,740 --> 00:13:27,839
can look for things like

341
00:13:27,839 --> 00:13:29,639
command injection where you're doing

342
00:13:29,639 --> 00:13:33,360
like system calls or exec Halls

343
00:13:33,360 --> 00:13:35,279
and that'll help you go okay I want to

344
00:13:35,279 --> 00:13:37,440
look at this binary

345
00:13:37,440 --> 00:13:41,040
we can't look at 254 binaries on a

346
00:13:41,040 --> 00:13:42,959
device with hundreds of thousands of

347
00:13:42,959 --> 00:13:44,880
lines of code and reversing that would

348
00:13:44,880 --> 00:13:46,380
take forever

349
00:13:46,380 --> 00:13:48,360
been walking you can use to extract

350
00:13:48,360 --> 00:13:50,279
firmware images you might have like a

351
00:13:50,279 --> 00:13:53,160
DOT bin bin file or a zip file and what

352
00:13:53,160 --> 00:13:55,200
it does is it looks for magic bytes and

353
00:13:55,200 --> 00:13:56,820
the header of the files and then

354
00:13:56,820 --> 00:13:58,920
identifies hey it's a

355
00:13:58,920 --> 00:14:01,560
zip file I know how to deal with this

356
00:14:01,560 --> 00:14:03,540
and it'll extract it out for you you can

357
00:14:03,540 --> 00:14:05,339
do it recursively

358
00:14:05,339 --> 00:14:07,980
so then you go from a firmware image

359
00:14:07,980 --> 00:14:10,440
six layers deep you finally find like oh

360
00:14:10,440 --> 00:14:11,459
Linux

361
00:14:11,459 --> 00:14:15,420
standard operating system file format

362
00:14:15,420 --> 00:14:19,200
on Windows Putty ghidro for reverse

363
00:14:19,200 --> 00:14:21,000
engineering there's also things like

364
00:14:21,000 --> 00:14:22,920
binary ninja and Ida

365
00:14:22,920 --> 00:14:26,220
they're expensive features free

366
00:14:26,220 --> 00:14:29,100
very nice to have a free decompiler that

367
00:14:29,100 --> 00:14:31,620
you can use that in my opinion is good

368
00:14:31,620 --> 00:14:33,899
enough to go find bugs when I was doing

369
00:14:33,899 --> 00:14:35,880
this at the Enterprise level

370
00:14:35,880 --> 00:14:38,880
they had I done I just learned a teacher

371
00:14:38,880 --> 00:14:41,220
about her so I used running

372
00:14:41,220 --> 00:14:43,920
same effect found all the bugs

373
00:14:43,920 --> 00:14:45,779
you can also use Windows subsystem for

374
00:14:45,779 --> 00:14:49,560
Linux sometimes it can be good for like

375
00:14:49,560 --> 00:14:51,660
just running quick and end to dump the

376
00:14:51,660 --> 00:14:53,160
functions but

377
00:14:53,160 --> 00:14:54,899
I wouldn't use it for anything like

378
00:14:54,899 --> 00:14:56,519
interacting with the device

379
00:14:56,519 --> 00:14:58,019
of Hardware protocol I would just do

380
00:14:58,019 --> 00:15:00,139
whatever

381
00:15:00,180 --> 00:15:01,800
it comes to Virtual machines right you

382
00:15:01,800 --> 00:15:04,019
might want to do exploit development or

383
00:15:04,019 --> 00:15:06,060
testing you might want to emulate the

384
00:15:06,060 --> 00:15:07,860
firmware so you could just take that

385
00:15:07,860 --> 00:15:10,380
whole firmware image emulated in a

386
00:15:10,380 --> 00:15:12,000
virtual machine and then do your testing

387
00:15:12,000 --> 00:15:14,040
you can also build out like fuzzing

388
00:15:14,040 --> 00:15:16,560
inside your VM that way if you do

389
00:15:16,560 --> 00:15:19,199
something that breaks the VM or you make

390
00:15:19,199 --> 00:15:20,820
a bad change

391
00:15:20,820 --> 00:15:23,279
roll back or start a new via

392
00:15:23,279 --> 00:15:26,240
it'll be all good

393
00:15:26,699 --> 00:15:28,680
so how do we get into practicing reverse

394
00:15:28,680 --> 00:15:30,839
engineering because this is not not

395
00:15:30,839 --> 00:15:34,199
something that's super easy to do

396
00:15:34,199 --> 00:15:36,180
you can just download

397
00:15:36,180 --> 00:15:39,180
firmware so what I like to do is I look

398
00:15:39,180 --> 00:15:41,279
at write-ups from places like Cisco

399
00:15:41,279 --> 00:15:44,279
tallows or pen test Partners In this

400
00:15:44,279 --> 00:15:45,180
case

401
00:15:45,180 --> 00:15:47,639
and people like to write blog posts aeon

402
00:15:47,639 --> 00:15:50,040
also writes blog posts

403
00:15:50,040 --> 00:15:52,199
vulnerabilities they found

404
00:15:52,199 --> 00:15:54,600
here's how we found it here's what the

405
00:15:54,600 --> 00:15:56,519
vulnerable code looks like and then once

406
00:15:56,519 --> 00:15:59,459
you understand what to look for you can

407
00:15:59,459 --> 00:16:01,260
use that same methodology across all

408
00:16:01,260 --> 00:16:03,720
your tests you get very quick at going

409
00:16:03,720 --> 00:16:05,880
okay these binaries have system calls

410
00:16:05,880 --> 00:16:07,500
they're probably interesting let's look

411
00:16:07,500 --> 00:16:08,399
at them

412
00:16:08,399 --> 00:16:11,279
this one seems to do nothing there's no

413
00:16:11,279 --> 00:16:14,339
exciting system calls so let's ignore it

414
00:16:14,339 --> 00:16:16,740
so that's a really great article read I

415
00:16:16,740 --> 00:16:18,480
highly recommend it

416
00:16:18,480 --> 00:16:21,300
I think my slides will go up probably on

417
00:16:21,300 --> 00:16:23,459
the Circle City or on his website as

418
00:16:23,459 --> 00:16:25,579
well

419
00:16:25,740 --> 00:16:28,260
so we get the firmware we went to

420
00:16:28,260 --> 00:16:30,959
vendor.com and we downloaded it

421
00:16:30,959 --> 00:16:33,360
you can use bin walk to extract it using

422
00:16:33,360 --> 00:16:35,579
all those magic pipes that I can find

423
00:16:35,579 --> 00:16:37,920
and this is what you'll probably end up

424
00:16:37,920 --> 00:16:40,800
getting assuming you have some kind of

425
00:16:40,800 --> 00:16:43,860
OS a lot of iot devices use embedded

426
00:16:43,860 --> 00:16:46,680
Linux same exact concept as Linux just

427
00:16:46,680 --> 00:16:48,300
the smaller format

428
00:16:48,300 --> 00:16:50,579
so you see we have things like Dev Etsy

429
00:16:50,579 --> 00:16:53,519
home all the folders that you would be

430
00:16:53,519 --> 00:16:56,880
used to if you have run any kind of

431
00:16:56,880 --> 00:17:00,300
when you extract these folders it will

432
00:17:00,300 --> 00:17:02,639
have an underscore in the folder name

433
00:17:02,639 --> 00:17:04,679
so that way you know like okay that's

434
00:17:04,679 --> 00:17:06,540
the extracted one it's successfully

435
00:17:06,540 --> 00:17:09,480
extracted CD underscore Tab and then

436
00:17:09,480 --> 00:17:11,760
just go down the line until you find

437
00:17:11,760 --> 00:17:14,000
this

438
00:17:15,119 --> 00:17:17,339
so this is what it would look like when

439
00:17:17,339 --> 00:17:19,699
you've actually done it you can see that

440
00:17:19,699 --> 00:17:22,380
it thinks there's a bunch of Zips in

441
00:17:22,380 --> 00:17:23,280
here

442
00:17:23,280 --> 00:17:25,679
and then eventually it'll just extract

443
00:17:25,679 --> 00:17:27,419
it out

444
00:17:27,419 --> 00:17:30,240
em is the option you use for extract M

445
00:17:30,240 --> 00:17:31,559
is for

446
00:17:31,559 --> 00:17:33,780
something but it basically recursively

447
00:17:33,780 --> 00:17:36,360
does it if you just ran Tac e on the

448
00:17:36,360 --> 00:17:39,000
firmware in this case it's a zip file

449
00:17:39,000 --> 00:17:41,580
it'll only do it one layer deep then you

450
00:17:41,580 --> 00:17:43,320
have to CD and then you have to do the

451
00:17:43,320 --> 00:17:46,260
same thing again just run attack M yeah

452
00:17:46,260 --> 00:17:48,539
and it'll go all the way through the

453
00:17:48,539 --> 00:17:51,059
firmware

454
00:17:51,059 --> 00:17:53,520
so we go through we find something like

455
00:17:53,520 --> 00:17:55,620
this like we saw in the previous slide

456
00:17:55,620 --> 00:17:57,960
and we have

457
00:17:57,960 --> 00:17:59,580
all the next systems when we start

458
00:17:59,580 --> 00:18:02,059
looking at

459
00:18:03,600 --> 00:18:05,220
ads so how do we go about finding some

460
00:18:05,220 --> 00:18:06,900
of these vulnerable well you want to try

461
00:18:06,900 --> 00:18:09,900
and start fuzzling some services

462
00:18:09,900 --> 00:18:11,880
so I would look for anything that you

463
00:18:11,880 --> 00:18:13,440
think is going to be listening on the

464
00:18:13,440 --> 00:18:16,100
network and then you

465
00:18:17,340 --> 00:18:20,640
post field or it's it's you know random

466
00:18:20,640 --> 00:18:22,320
binary listening on a poor like what

467
00:18:22,320 --> 00:18:24,120
happens when you send

468
00:18:24,120 --> 00:18:27,419
500 000 A's does it just crash

469
00:18:27,419 --> 00:18:29,940
cool at what point does it crash can you

470
00:18:29,940 --> 00:18:31,919
change that crash into something you

471
00:18:31,919 --> 00:18:34,919
control to get code execution

472
00:18:34,919 --> 00:18:36,480
and then

473
00:18:36,480 --> 00:18:38,160
um you can also do reverse engineering

474
00:18:38,160 --> 00:18:40,799
which is my favorite part go look at

475
00:18:40,799 --> 00:18:42,240
what those binaries are on the network

476
00:18:42,240 --> 00:18:43,980
services start going through some of

477
00:18:43,980 --> 00:18:46,980
their functions Google for or search for

478
00:18:46,980 --> 00:18:48,360
different

479
00:18:48,360 --> 00:18:51,179
keywords like system and exact

480
00:18:51,179 --> 00:18:55,080
ly for that uh SF print those will

481
00:18:55,080 --> 00:18:57,240
possibly help you find command injection

482
00:18:57,240 --> 00:18:58,559
as well

483
00:18:58,559 --> 00:19:01,679
and then you can look to see how the

484
00:19:01,679 --> 00:19:03,360
function is going to handle the endpoint

485
00:19:03,360 --> 00:19:06,059
so maybe you make a post request with

486
00:19:06,059 --> 00:19:07,740
the username so it takes in your

487
00:19:07,740 --> 00:19:10,860
username and then below it checks you

488
00:19:10,860 --> 00:19:13,340
know is your username in the VAR

489
00:19:13,340 --> 00:19:16,200
www.users dot text or something to know

490
00:19:16,200 --> 00:19:18,059
if you're a valid user

491
00:19:18,059 --> 00:19:19,740
who wants you know how those inputs are

492
00:19:19,740 --> 00:19:21,299
handled you can learn how

493
00:19:21,299 --> 00:19:22,620
to manipulated

494
00:19:22,620 --> 00:19:26,100
this so that you can find issues

495
00:19:26,100 --> 00:19:27,600
so what kind of vulnerabilities we

496
00:19:27,600 --> 00:19:28,679
typically find

497
00:19:28,679 --> 00:19:32,580
Mo code execution all the time it's it's

498
00:19:32,580 --> 00:19:36,740
trivial sometimes at how easy it is

499
00:19:36,780 --> 00:19:39,840
uh buffer overflows a lot too a lot of

500
00:19:39,840 --> 00:19:43,200
iot devices don't implement the controls

501
00:19:43,200 --> 00:19:46,140
like address randomization

502
00:19:46,140 --> 00:19:48,539
so a lot of times it's easy to find

503
00:19:48,539 --> 00:19:50,640
buffer overflows you can do malicious

504
00:19:50,640 --> 00:19:53,220
firmware updates what happens if

505
00:19:53,220 --> 00:19:55,380
I put a back door in that zip file and

506
00:19:55,380 --> 00:19:57,299
then I updated

507
00:19:57,299 --> 00:20:00,179
you're checking on our iot devices to

508
00:20:00,179 --> 00:20:02,640
make sure that it's actually a valid

509
00:20:02,640 --> 00:20:05,400
firmware a lot of times not

510
00:20:05,400 --> 00:20:07,620
there's the debug interfaces you are

511
00:20:07,620 --> 00:20:10,380
JTAG or the big ones

512
00:20:10,380 --> 00:20:11,940
just connect to those and you might

513
00:20:11,940 --> 00:20:14,100
easily be able to get action access to

514
00:20:14,100 --> 00:20:15,299
device

515
00:20:15,299 --> 00:20:18,360
iot or a denial of service and iot

516
00:20:18,360 --> 00:20:21,059
devices when you send bad strings or a

517
00:20:21,059 --> 00:20:23,280
lot of packets and then a lot of like

518
00:20:23,280 --> 00:20:25,320
unencrypted Communications I've seen

519
00:20:25,320 --> 00:20:29,220
devices update over HTTP so a well

520
00:20:29,220 --> 00:20:31,620
positioned attack around the network or

521
00:20:31,620 --> 00:20:33,360
your own home lab you could just

522
00:20:33,360 --> 00:20:36,240
Wireshark that and pull the firmware

523
00:20:36,240 --> 00:20:37,260
right out

524
00:20:37,260 --> 00:20:39,600
because maybe you can just just easily

525
00:20:39,600 --> 00:20:41,400
go to the website now

526
00:20:41,400 --> 00:20:43,320
or you could find the binary that's

527
00:20:43,320 --> 00:20:45,299
responsible for that and you could find

528
00:20:45,299 --> 00:20:48,780
the password to their website that lets

529
00:20:48,780 --> 00:20:50,580
you just log into their website and

530
00:20:50,580 --> 00:20:53,059
download all the

531
00:20:54,179 --> 00:20:56,100
others so let's look at finding command

532
00:20:56,100 --> 00:20:58,200
injection this is a pretty simplified

533
00:20:58,200 --> 00:21:01,559
examples we have our function here

534
00:21:01,559 --> 00:21:04,320
the important thing is to know

535
00:21:04,320 --> 00:21:06,360
there's a character pointer to an art C

536
00:21:06,360 --> 00:21:08,100
and an argb

537
00:21:08,100 --> 00:21:10,740
and you have this Command right we're

538
00:21:10,740 --> 00:21:12,299
setting this command variable to user

539
00:21:12,299 --> 00:21:14,640
bin cat so I'm going to make a binary

540
00:21:14,640 --> 00:21:17,460
that literally just pass out a file

541
00:21:17,460 --> 00:21:19,460
and then

542
00:21:19,460 --> 00:21:22,679
if you look at stir cat it's got two

543
00:21:22,679 --> 00:21:26,280
arguments there I command and ARG V1 and

544
00:21:26,280 --> 00:21:27,960
argue V1 is going to be what's user

545
00:21:27,960 --> 00:21:30,900
controlled so RV is the ARG of b0 would

546
00:21:30,900 --> 00:21:32,400
be the name of the program that you're

547
00:21:32,400 --> 00:21:34,260
running kind of like when you do python

548
00:21:34,260 --> 00:21:36,539
stuff and then one is going to be the

549
00:21:36,539 --> 00:21:39,240
argument you supply so we control argue

550
00:21:39,240 --> 00:21:41,100
one

551
00:21:41,100 --> 00:21:45,299
so Google what does stir cat C code do

552
00:21:45,299 --> 00:21:47,039
and it'll show you this and they'll say

553
00:21:47,039 --> 00:21:50,159
hey it takes a character pointer to a

554
00:21:50,159 --> 00:21:51,360
destination

555
00:21:51,360 --> 00:21:53,940
and it should contain a c code in this

556
00:21:53,940 --> 00:21:56,780
case it was that user bin cat

557
00:21:56,780 --> 00:21:58,559
command

558
00:21:58,559 --> 00:22:00,179
source is the string that's going to get

559
00:22:00,179 --> 00:22:02,039
appended so now we have user bin cat

560
00:22:02,039 --> 00:22:04,559
whatever I want it to be and then it's

561
00:22:04,559 --> 00:22:07,320
going to return a pointer to that

562
00:22:07,320 --> 00:22:10,620
new string so now when the program runs

563
00:22:10,620 --> 00:22:14,280
it's going to run system on that new

564
00:22:14,280 --> 00:22:17,640
so we'll have command and argue one just

565
00:22:17,640 --> 00:22:20,900
get combined with the space

566
00:22:22,380 --> 00:22:24,179
so since we're going to cat out this

567
00:22:24,179 --> 00:22:27,000
command let's find command injection

568
00:22:27,000 --> 00:22:29,640
we can just simply in this case put in a

569
00:22:29,640 --> 00:22:31,440
semicolon because Linux if you want to

570
00:22:31,440 --> 00:22:34,080
run like CD and LS you do CD semicolon

571
00:22:34,080 --> 00:22:38,100
LS same concept here give it a file and

572
00:22:38,100 --> 00:22:41,100
then give it a bad file too and if you

573
00:22:41,100 --> 00:22:43,320
didn't want to actually cut out the file

574
00:22:43,320 --> 00:22:45,600
and just start bidding that cat and now

575
00:22:45,600 --> 00:22:47,280
you have a listener and you could

576
00:22:47,280 --> 00:22:50,159
connect so maybe if I can only interact

577
00:22:50,159 --> 00:22:51,840
with the website but I find this kind of

578
00:22:51,840 --> 00:22:53,760
command objection but I can open

579
00:22:53,760 --> 00:22:55,919
Port facts

580
00:22:55,919 --> 00:22:58,760
back reach out and

581
00:23:00,900 --> 00:23:04,260
so now we can connect remotely to this

582
00:23:04,260 --> 00:23:07,140
so let's look at some more this is a

583
00:23:07,140 --> 00:23:09,179
little more complex right but

584
00:23:09,179 --> 00:23:13,020
what we see is we have this SSID that is

585
00:23:13,020 --> 00:23:14,520
a post parameter so this is probably

586
00:23:14,520 --> 00:23:17,520
your setting up your device you move you

587
00:23:17,520 --> 00:23:19,679
need to change the Wi-Fi or something

588
00:23:19,679 --> 00:23:22,679
Thrones is really long command user bin

589
00:23:22,679 --> 00:23:25,320
you know blah blah blah and then you see

590
00:23:25,320 --> 00:23:27,600
at the very end that percent s is going

591
00:23:27,600 --> 00:23:31,919
to be where the SSID variable gets in

592
00:23:31,919 --> 00:23:33,960
and at the bottom we're going to exec

593
00:23:33,960 --> 00:23:35,520
systems we're going to cost system on

594
00:23:35,520 --> 00:23:37,020
this whole command so it's like we're

595
00:23:37,020 --> 00:23:38,940
fitting at a Linux terminal running this

596
00:23:38,940 --> 00:23:41,419
really long time

597
00:23:42,059 --> 00:23:46,020
so if we Google what is SN printf do

598
00:23:46,020 --> 00:23:49,080
it looks like this stir is going to be

599
00:23:49,080 --> 00:23:51,299
where the strain is going to be stored

600
00:23:51,299 --> 00:23:53,880
size T was the maximum number of bytes

601
00:23:53,880 --> 00:23:55,980
and then the last one is the format of

602
00:23:55,980 --> 00:23:57,600
the C string

603
00:23:57,600 --> 00:23:59,120
so

604
00:23:59,120 --> 00:24:01,919
in this case it's like a hundred bytes

605
00:24:01,919 --> 00:24:04,919
long which is plenty

606
00:24:04,919 --> 00:24:07,200
so we can inject into that percent S

607
00:24:07,200 --> 00:24:09,299
field that was solved before so you can

608
00:24:09,299 --> 00:24:10,260
just

609
00:24:10,260 --> 00:24:12,299
break out of the command add your

610
00:24:12,299 --> 00:24:14,820
semicolon run the command and then

611
00:24:14,820 --> 00:24:18,059
always remember to use the pound symbol

612
00:24:18,059 --> 00:24:20,280
after that because it'll comment out the

613
00:24:20,280 --> 00:24:22,559
rest of the codes maybe your code

614
00:24:22,559 --> 00:24:24,659
injection happens here but the command

615
00:24:24,659 --> 00:24:27,480
is this long so like all this stuff will

616
00:24:27,480 --> 00:24:30,179
get still be part of your command

617
00:24:30,179 --> 00:24:32,520
but if you have that hashtag in there

618
00:24:32,520 --> 00:24:35,100
it'll comment the rest of that out so it

619
00:24:35,100 --> 00:24:38,120
just runs your own image

620
00:24:39,659 --> 00:24:42,659
so we look at what our exploit would

621
00:24:42,659 --> 00:24:43,559
look like

622
00:24:43,559 --> 00:24:45,720
it's a post request

623
00:24:45,720 --> 00:24:48,360
nothing the bottom is super important

624
00:24:48,360 --> 00:24:50,460
except that SSID that's that variable

625
00:24:50,460 --> 00:24:51,840
that we're going to set

626
00:24:51,840 --> 00:24:54,240
so we're going to put a double quote to

627
00:24:54,240 --> 00:24:56,340
escape out and then a single quote in

628
00:24:56,340 --> 00:24:58,799
our semicolon now we're totally escaped

629
00:24:58,799 --> 00:25:00,419
out of the command

630
00:25:00,419 --> 00:25:04,700
in this case just ran who am I

631
00:25:05,320 --> 00:25:08,280
[Music]

632
00:25:08,280 --> 00:25:10,200
at any command here works right you

633
00:25:10,200 --> 00:25:12,240
could dub get to your C2 server and

634
00:25:12,240 --> 00:25:15,059
download malicious files and ransomware

635
00:25:15,059 --> 00:25:18,299
or if you're doing security testing you

636
00:25:18,299 --> 00:25:19,620
know download your own shell or

637
00:25:19,620 --> 00:25:22,399
something to get access

638
00:25:23,940 --> 00:25:25,440
so what else could we do with this well

639
00:25:25,440 --> 00:25:27,539
any command in One X right you could put

640
00:25:27,539 --> 00:25:29,700
your own

641
00:25:29,700 --> 00:25:30,419
um

642
00:25:30,419 --> 00:25:33,179
hash in the Etsy Shadow and then put

643
00:25:33,179 --> 00:25:34,740
something else into

644
00:25:34,740 --> 00:25:36,600
the password and login

645
00:25:36,600 --> 00:25:39,000
sometimes iot devices do weird things

646
00:25:39,000 --> 00:25:40,679
where they don't a separate Etsy

647
00:25:40,679 --> 00:25:42,840
password Etsy Shadow so you might want

648
00:25:42,840 --> 00:25:45,059
to look at the firmware ahead of time if

649
00:25:45,059 --> 00:25:46,919
you found command injections that you

650
00:25:46,919 --> 00:25:48,779
know like okay I just need to put this

651
00:25:48,779 --> 00:25:51,000
and that's a password with a username

652
00:25:51,000 --> 00:25:53,279
and a hash and I can I can log in

653
00:25:53,279 --> 00:25:55,559
you can also modify like bootstrips or

654
00:25:55,559 --> 00:25:57,539
something like that so you could just

655
00:25:57,539 --> 00:26:00,059
turn on SSH maybe SSH doesn't start

656
00:26:00,059 --> 00:26:01,320
normally

657
00:26:01,320 --> 00:26:03,900
um kind of stuff you can do

658
00:26:03,900 --> 00:26:06,659
so how can you get started please buy

659
00:26:06,659 --> 00:26:09,419
some kind of old router a multimeter you

660
00:26:09,419 --> 00:26:12,120
don't need those 500 multimeters right

661
00:26:12,120 --> 00:26:13,860
I'm pretty sure mine was like 10 bucks

662
00:26:13,860 --> 00:26:15,960
and it works great

663
00:26:15,960 --> 00:26:18,900
uh soldering irons get like a nicer one

664
00:26:18,900 --> 00:26:21,419
I had a really cheap one and the tip

665
00:26:21,419 --> 00:26:24,900
literally melted off in

666
00:26:24,900 --> 00:26:26,700
the fan test

667
00:26:26,700 --> 00:26:28,919
but not super expensive I think mine was

668
00:26:28,919 --> 00:26:31,260
like 70 bucks

669
00:26:31,260 --> 00:26:33,960
um also a note when you're soldering be

670
00:26:33,960 --> 00:26:36,120
sure to get a fan as well cause you

671
00:26:36,120 --> 00:26:37,559
don't want to always intake intake all

672
00:26:37,559 --> 00:26:40,020
that solder fume because it's not good

673
00:26:40,020 --> 00:26:42,120
for your body so the fan will pull it

674
00:26:42,120 --> 00:26:44,640
away it'll put it through a filter

675
00:26:44,640 --> 00:26:46,679
so be sure to do that

676
00:26:46,679 --> 00:26:48,779
then go download some firmware off the

677
00:26:48,779 --> 00:26:51,600
Internet run Ben walk extract out the

678
00:26:51,600 --> 00:26:54,120
firmware look for interesting binaries

679
00:26:54,120 --> 00:26:56,100
and go through the engagement you don't

680
00:26:56,100 --> 00:26:58,440
have to be this reverse Engineer Expert

681
00:26:58,440 --> 00:27:00,240
just start looking to see what do you

682
00:27:00,240 --> 00:27:02,400
think is going on and that's the entire

683
00:27:02,400 --> 00:27:04,620
purpose of reverse engineering it's yes

684
00:27:04,620 --> 00:27:05,820
and check

685
00:27:05,820 --> 00:27:09,179
okay I think that if I do this then this

686
00:27:09,179 --> 00:27:11,159
will happen and then doesn't like okay

687
00:27:11,159 --> 00:27:13,380
well why didn't that happen maybe your

688
00:27:13,380 --> 00:27:14,760
command injection's wrong maybe

689
00:27:14,760 --> 00:27:16,679
something else is wrong maybe you you

690
00:27:16,679 --> 00:27:18,720
know you tried to run netcat but

691
00:27:18,720 --> 00:27:21,539
netcat's not on the device because

692
00:27:21,539 --> 00:27:24,720
usually it's not sometimes it is

693
00:27:24,720 --> 00:27:26,100
so you just got to play around and

694
00:27:26,100 --> 00:27:28,500
understand what kind of devices you

695
00:27:28,500 --> 00:27:30,120
might or what kind of commands you might

696
00:27:30,120 --> 00:27:32,479
be able to run

697
00:27:34,200 --> 00:27:36,720
it's not always secure iot devices we

698
00:27:36,720 --> 00:27:37,980
don't want to just stand up here and say

699
00:27:37,980 --> 00:27:40,340
hey all these iot devices are so

700
00:27:40,340 --> 00:27:44,760
insecure and awful and does not so you

701
00:27:44,760 --> 00:27:47,100
encrypt your firmware as a company

702
00:27:47,100 --> 00:27:49,260
put your firmware online for download

703
00:27:49,260 --> 00:27:51,539
but it's encrypted so now

704
00:27:51,539 --> 00:27:53,580
I need to know a password to get in I

705
00:27:53,580 --> 00:27:55,860
need to decrypt it with

706
00:27:55,860 --> 00:27:58,799
special key that key might live on the

707
00:27:58,799 --> 00:28:00,960
device itself

708
00:28:00,960 --> 00:28:03,539
issues there or if somebody leaks that

709
00:28:03,539 --> 00:28:06,360
key then you might have to redo your

710
00:28:06,360 --> 00:28:07,020
whole

711
00:28:07,020 --> 00:28:09,299
encryption but

712
00:28:09,299 --> 00:28:11,760
definitely worth it

713
00:28:11,760 --> 00:28:14,100
don't make plain text available future

714
00:28:14,100 --> 00:28:16,140
developers how to write secure code

715
00:28:16,140 --> 00:28:18,600
teach them what bad code looks like and

716
00:28:18,600 --> 00:28:21,000
why it is bad code not just

717
00:28:21,000 --> 00:28:24,419
hey never use this it's horrible no why

718
00:28:24,419 --> 00:28:27,960
is it because I can do x y and z Oh okay

719
00:28:27,960 --> 00:28:29,159
I didn't even know you could do that

720
00:28:29,159 --> 00:28:30,779
kind of stuff so now I'll write better

721
00:28:30,779 --> 00:28:32,760
code

722
00:28:32,760 --> 00:28:35,279
you can segment these devices so

723
00:28:35,279 --> 00:28:37,020
corporate network if you laying them off

724
00:28:37,020 --> 00:28:39,379
don't have

725
00:28:40,860 --> 00:28:42,000
to and

726
00:28:42,000 --> 00:28:43,980
if they do set up your own domain

727
00:28:43,980 --> 00:28:46,440
controller for just that and the one

728
00:28:46,440 --> 00:28:48,840
that contains all your comfy secrets and

729
00:28:48,840 --> 00:28:50,340
fun stuff

730
00:28:50,340 --> 00:28:52,260
you can disable the hardware interfaces

731
00:28:52,260 --> 00:28:54,059
you can do that in software and Hardware

732
00:28:54,059 --> 00:28:56,700
you could also like when you go to put

733
00:28:56,700 --> 00:28:58,500
out your production board just don't put

734
00:28:58,500 --> 00:29:01,320
the traces in there now I have to

735
00:29:01,320 --> 00:29:03,419
connect directly to the chip

736
00:29:03,419 --> 00:29:06,240
I'm not that great of a solder I don't

737
00:29:06,240 --> 00:29:08,580
have that good of a setup so I'm gonna

738
00:29:08,580 --> 00:29:11,039
ruin the ship and you're safe

739
00:29:11,039 --> 00:29:12,600
somebody really wants to get in like

740
00:29:12,600 --> 00:29:15,720
they can but let's make it harder it's

741
00:29:15,720 --> 00:29:16,740
not

742
00:29:16,740 --> 00:29:18,659
easy for someone or they have to make

743
00:29:18,659 --> 00:29:20,700
significant Investments

744
00:29:20,700 --> 00:29:23,100
in their tool set

745
00:29:23,100 --> 00:29:25,679
hack them before production so let's get

746
00:29:25,679 --> 00:29:28,140
these things tested don't just hey we

747
00:29:28,140 --> 00:29:30,779
put it out it works great

748
00:29:30,779 --> 00:29:33,840
here we go no get them security tested

749
00:29:33,840 --> 00:29:36,059
buy third-party firms buy your own

750
00:29:36,059 --> 00:29:38,700
internal team just do it

751
00:29:38,700 --> 00:29:40,799
and you can do firmware signatures so I

752
00:29:40,799 --> 00:29:42,419
can't just push malicious for more

753
00:29:42,419 --> 00:29:44,039
updates without having to mess with

754
00:29:44,039 --> 00:29:46,380
signature verification and that you know

755
00:29:46,380 --> 00:29:49,760
it's another level that makes it

756
00:29:50,820 --> 00:29:51,960
important all right

757
00:29:51,960 --> 00:29:55,020
we're in trying to do a live demo here

758
00:29:55,020 --> 00:29:57,620
real quick

759
00:30:04,500 --> 00:30:07,919
all right so I'm going to open up putty

760
00:30:07,919 --> 00:30:10,440
I'm also going to check so when you plug

761
00:30:10,440 --> 00:30:13,980
in a USB to serial adapter

762
00:30:13,980 --> 00:30:16,860
it will enumerate typically on Windows

763
00:30:16,860 --> 00:30:18,720
as some kind of com Port so you can just

764
00:30:18,720 --> 00:30:20,340
go in here

765
00:30:20,340 --> 00:30:24,600
and we see the mine is on com4

766
00:30:24,600 --> 00:30:28,080
like serial we'll say com4 baud rate is

767
00:30:28,080 --> 00:30:29,760
the rate

768
00:30:29,760 --> 00:30:31,860
the the device like communicates speed

769
00:30:31,860 --> 00:30:33,539
wise so if you get this wrong you may

770
00:30:33,539 --> 00:30:35,460
not be audio type things it might look

771
00:30:35,460 --> 00:30:38,159
super gibberish-y but you can play

772
00:30:38,159 --> 00:30:39,840
around right there's grip subtle Auto

773
00:30:39,840 --> 00:30:42,480
Group forces but there's only

774
00:30:42,480 --> 00:30:45,120
six that are typically in use normally

775
00:30:45,120 --> 00:30:49,559
it's 115 200 and that normally works

776
00:30:49,559 --> 00:30:52,260
this case it's 56

777
00:30:52,260 --> 00:30:53,940
700

778
00:30:53,940 --> 00:30:56,820
so we'll connect to that and this is

779
00:30:56,820 --> 00:30:58,440
what you should expect to see you don't

780
00:30:58,440 --> 00:31:00,360
have to boot the device this is just

781
00:31:00,360 --> 00:31:03,678
connecting to your interface

782
00:31:03,960 --> 00:31:05,760
so we'll turn on the device and you can

783
00:31:05,760 --> 00:31:07,020
see

784
00:31:07,020 --> 00:31:09,299
student Opera

785
00:31:09,299 --> 00:31:12,059
you know if you caught there but it says

786
00:31:12,059 --> 00:31:14,700
all about three seconds try to interrupt

787
00:31:14,700 --> 00:31:17,700
so if you turn it on

788
00:31:17,700 --> 00:31:20,640
try to interrupt it hit Ctrl C nothing

789
00:31:20,640 --> 00:31:23,640
works turn it off if you did more

790
00:31:23,640 --> 00:31:25,679
reverse engineering on

791
00:31:25,679 --> 00:31:27,240
on this you'll learn that the password

792
00:31:27,240 --> 00:31:30,240
is Alpha 168.

793
00:31:30,240 --> 00:31:32,700
so those are boots

794
00:31:32,700 --> 00:31:36,440
you type Alpha 168

795
00:31:37,020 --> 00:31:39,320
Maybe

796
00:31:42,480 --> 00:31:45,380
now you can see

797
00:31:46,740 --> 00:31:48,960
I can't seem to zoom in but we're in

798
00:31:48,960 --> 00:31:52,320
like the u-boot interface

799
00:31:52,320 --> 00:31:54,380
so now we do things like print

800
00:31:54,380 --> 00:31:58,140
environment variables out

801
00:31:58,140 --> 00:32:00,720
sorry I know this is really hard this is

802
00:32:00,720 --> 00:32:03,059
the long boot command that it's going to

803
00:32:03,059 --> 00:32:03,779
run

804
00:32:03,779 --> 00:32:06,480
so you can just modify this so it still

805
00:32:06,480 --> 00:32:08,340
Boots the entire firmware it'll go to

806
00:32:08,340 --> 00:32:10,440
flash and grab it and then we'll just

807
00:32:10,440 --> 00:32:12,659
say hey you're in it your first process

808
00:32:12,659 --> 00:32:14,220
that you need to do afterwards let's

809
00:32:14,220 --> 00:32:17,779
just call it Ben shell

810
00:32:19,260 --> 00:32:20,640
so

811
00:32:20,640 --> 00:32:23,340
you change the arguments by using set

812
00:32:23,340 --> 00:32:24,659
EnV

813
00:32:24,659 --> 00:32:27,539
so we'll do that you can also call the

814
00:32:27,539 --> 00:32:29,580
variables with dollar sign curly braces

815
00:32:29,580 --> 00:32:32,640
which will make your life much easier

816
00:32:32,640 --> 00:32:36,299
then you can run add-on at the end

817
00:32:36,299 --> 00:32:38,580
show

818
00:32:38,580 --> 00:32:41,220
and that we're going to run a boot

819
00:32:41,220 --> 00:32:43,520
command

820
00:32:48,600 --> 00:32:50,580
and now we see the device is booting up

821
00:32:50,580 --> 00:32:52,919
there's all sorts of really valuable

822
00:32:52,919 --> 00:32:54,720
information so if you log putty you can

823
00:32:54,720 --> 00:32:57,059
go back and read all this

824
00:32:57,059 --> 00:32:57,960
um and now it's going to go ahead and

825
00:32:57,960 --> 00:33:00,179
boot up it'll start in this case

826
00:33:00,179 --> 00:33:01,980
the interface there's a web service

827
00:33:01,980 --> 00:33:05,059
that's also running

828
00:33:05,100 --> 00:33:06,960
so it'll do that

829
00:33:06,960 --> 00:33:10,520
and after it boots

830
00:33:15,179 --> 00:33:18,179
which takes a minute

831
00:33:18,179 --> 00:33:21,720
you will end up with a root shell on the

832
00:33:21,720 --> 00:33:23,960
device

833
00:33:25,980 --> 00:33:27,960
and while that's going I'll give closing

834
00:33:27,960 --> 00:33:31,039
thoughts and then we'll go back to the

835
00:33:31,919 --> 00:33:34,799
so in closing there's a wide variety of

836
00:33:34,799 --> 00:33:36,360
devices you can hack right there's

837
00:33:36,360 --> 00:33:38,940
thermostats there's routers there's IP

838
00:33:38,940 --> 00:33:41,640
cameras there's all sorts of fun things

839
00:33:41,640 --> 00:33:43,860
so it's a really cool field it's got a

840
00:33:43,860 --> 00:33:45,240
lot of exciting vulnerabilities and

841
00:33:45,240 --> 00:33:47,460
companies are struggling to hire these

842
00:33:47,460 --> 00:33:49,519
people

843
00:33:53,159 --> 00:33:55,620
spices and anyone that interviews with

844
00:33:55,620 --> 00:33:57,899
me and comes in and says oh you know

845
00:33:57,899 --> 00:33:59,700
like I want to know what you're doing in

846
00:33:59,700 --> 00:34:01,200
your home life so if you're telling me

847
00:34:01,200 --> 00:34:04,200
that yeah you know I heard tp-link or

848
00:34:04,200 --> 00:34:06,779
Asus or whoever had some kind of

849
00:34:06,779 --> 00:34:08,219
vulnerability and I went and I

850
00:34:08,219 --> 00:34:10,379
downloaded the firmware and I

851
00:34:10,379 --> 00:34:13,260
found a replicated the steps oh that's

852
00:34:13,260 --> 00:34:14,520
awesome you're playing around in your

853
00:34:14,520 --> 00:34:16,500
home lab I'll take somebody that's

854
00:34:16,500 --> 00:34:18,780
curious and playing around in their home

855
00:34:18,780 --> 00:34:21,179
lab and someone that's a super seasoned

856
00:34:21,179 --> 00:34:24,200
veteran but they're not safe

857
00:34:24,359 --> 00:34:27,119
because I can help teach you I can't

858
00:34:27,119 --> 00:34:30,320
help drive you

859
00:34:30,540 --> 00:34:35,159
so it's a lot of fun if we go back to

860
00:34:35,159 --> 00:34:37,560
our buddy session this one actually

861
00:34:37,560 --> 00:34:40,560
didn't work for whatever reason but

862
00:34:40,560 --> 00:34:42,540
normally you would just see the pound

863
00:34:42,540 --> 00:34:45,500
symbol and you would have a

864
00:34:45,719 --> 00:34:48,960
and that's all I got thank you

865
00:34:48,960 --> 00:34:53,210
[Applause]

866
00:34:55,739 --> 00:34:58,140
it looks like we've got about five

867
00:34:58,140 --> 00:35:00,599
minutes I'll take questions and I'll oh

868
00:35:00,599 --> 00:35:03,720
we have 10 minutes cool so

869
00:35:03,720 --> 00:35:04,500
um

870
00:35:04,500 --> 00:35:06,780
thank you sled if anyone is interested

871
00:35:06,780 --> 00:35:09,900
in being a part of aeon you can reach

872
00:35:09,900 --> 00:35:12,180
out to this email address there is a

873
00:35:12,180 --> 00:35:14,640
link to our a on Cyber Labs where we

874
00:35:14,640 --> 00:35:16,260
publish blog posts about cool

875
00:35:16,260 --> 00:35:18,359
vulnerabilities that we find on

876
00:35:18,359 --> 00:35:20,820
engagements and things like that

877
00:35:20,820 --> 00:35:23,339
and yeah any questions

878
00:35:23,339 --> 00:35:25,880
yep

879
00:35:29,400 --> 00:35:32,900
yeah absolutely

880
00:35:33,780 --> 00:35:37,079
yeah uh up front he said the best uh

881
00:35:37,079 --> 00:35:38,700
best place to go look for your thrift

882
00:35:38,700 --> 00:35:39,480
store

883
00:35:39,480 --> 00:35:41,640
yep people will throw away all sorts of

884
00:35:41,640 --> 00:35:44,760
stuff and don't know what they have and

885
00:35:44,760 --> 00:35:46,560
or Ebay there's a lot of like cheap

886
00:35:46,560 --> 00:35:48,420
stuff on eBay you can find for a couple

887
00:35:48,420 --> 00:35:50,579
bucks or ask your buddy oh I just

888
00:35:50,579 --> 00:35:53,040
upgraded my system cool can I have that

889
00:35:53,040 --> 00:35:55,759
I just want to thank

890
00:36:17,520 --> 00:36:20,040
um typically

891
00:36:20,040 --> 00:36:22,800
yeah so like um the question was you

892
00:36:22,800 --> 00:36:24,060
know if you go to Best Buy or something

893
00:36:24,060 --> 00:36:26,220
you buy something off the shelf

894
00:36:26,220 --> 00:36:27,660
um you know how easy is it really to

895
00:36:27,660 --> 00:36:30,839
find some of this stuff uh sadly it's

896
00:36:30,839 --> 00:36:32,400
really easy a lot of companies still

897
00:36:32,400 --> 00:36:33,960
miss these even when they have bug

898
00:36:33,960 --> 00:36:37,020
Bounty programs the their team missed it

899
00:36:37,020 --> 00:36:40,079
or bug Bounty platforms Mr right it's

900
00:36:40,079 --> 00:36:42,839
like any kind of website or we keep

901
00:36:42,839 --> 00:36:45,720
finding vulnerabilities and web services

902
00:36:45,720 --> 00:36:47,820
and things like that oh yeah that's been

903
00:36:47,820 --> 00:36:50,339
around for 20 years but

904
00:36:50,339 --> 00:36:51,660
there's not a lot of people that look

905
00:36:51,660 --> 00:36:54,140
into iOS

906
00:37:01,380 --> 00:37:03,839
absolutely

907
00:37:03,839 --> 00:37:06,980
yeah I

908
00:37:07,440 --> 00:37:09,599
yeah

909
00:37:09,599 --> 00:37:12,000
yeah so the question was you know I was

910
00:37:12,000 --> 00:37:14,520
there's still a problem in all iot and

911
00:37:14,520 --> 00:37:18,000
yeah I think the issue is that we just

912
00:37:18,000 --> 00:37:20,280
haven't been doing security that long

913
00:37:20,280 --> 00:37:22,320
around iot and people weren't you know

914
00:37:22,320 --> 00:37:24,599
this we're putting a camera on our

915
00:37:24,599 --> 00:37:26,339
Network like how bad could it really be

916
00:37:26,339 --> 00:37:27,720
an hour seeing uh

917
00:37:27,720 --> 00:37:29,339
well I'm gonna use that as a pivot point

918
00:37:29,339 --> 00:37:31,200
so your camera's public I'll hit that

919
00:37:31,200 --> 00:37:33,000
and then I'll pivot into your network as

920
00:37:33,000 --> 00:37:34,079
the attack

921
00:37:34,079 --> 00:37:36,300
now I think companies are starting to go

922
00:37:36,300 --> 00:37:37,980
well maybe we should have thought about

923
00:37:37,980 --> 00:37:40,680
this because you know imagine I bought

924
00:37:40,680 --> 00:37:43,020
device XYZ put it on my corporate

925
00:37:43,020 --> 00:37:44,460
Network and now I'm calling that company

926
00:37:44,460 --> 00:37:45,720
going

927
00:37:45,720 --> 00:37:48,240
what the heck happened why did this

928
00:37:48,240 --> 00:37:50,339
happen did you do your security testing

929
00:37:50,339 --> 00:37:51,900
and

930
00:37:51,900 --> 00:37:54,240
sometimes the answer is no and we need

931
00:37:54,240 --> 00:37:56,760
to do more about them so if your company

932
00:37:56,760 --> 00:37:58,920
is a producer of some kind of a smart

933
00:37:58,920 --> 00:38:01,740
thing Bluetooth Wi-Fi networks SIM card

934
00:38:01,740 --> 00:38:03,240
whatever

935
00:38:03,240 --> 00:38:05,220
get your devices tested because they're

936
00:38:05,220 --> 00:38:07,079
going to end up in you know your grocery

937
00:38:07,079 --> 00:38:08,640
stores and stuff like that or you're

938
00:38:08,640 --> 00:38:10,020
going to look at supply chain attack

939
00:38:10,020 --> 00:38:12,359
style things where somebody Hoards a

940
00:38:12,359 --> 00:38:15,660
zero day and they know oh these you know

941
00:38:15,660 --> 00:38:19,020
this store we know uses this device in

942
00:38:19,020 --> 00:38:23,160
25 000 locations and here's an O day we

943
00:38:23,160 --> 00:38:25,520
got in

944
00:38:29,280 --> 00:38:32,780
can you send me two devices

945
00:38:45,960 --> 00:38:46,940
yeah

946
00:38:46,940 --> 00:38:49,500
so the issue

947
00:38:49,500 --> 00:38:51,660
um that we run into a lot of times is we

948
00:38:51,660 --> 00:38:54,000
can only afford one of our test devices

949
00:38:54,000 --> 00:38:54,900
because

950
00:38:54,900 --> 00:38:57,180
we only made three of them it's still

951
00:38:57,180 --> 00:38:59,040
early on in the process because we're

952
00:38:59,040 --> 00:39:00,839
lucky and we got brought in before it

953
00:39:00,839 --> 00:39:02,640
went to production which was awesome

954
00:39:02,640 --> 00:39:04,619
but we can only give you this one so

955
00:39:04,619 --> 00:39:07,380
don't break it and it really sucks when

956
00:39:07,380 --> 00:39:08,880
you're the guy that has to call the

957
00:39:08,880 --> 00:39:11,220
developers and say hey I know you only

958
00:39:11,220 --> 00:39:14,099
had one but can I get a new one because

959
00:39:14,099 --> 00:39:16,500
oops

960
00:39:16,500 --> 00:39:19,020
yeah they weren't too happy

961
00:39:19,020 --> 00:39:20,760
yeah right

962
00:39:20,760 --> 00:39:22,800
it had nothing to do with the fact I

963
00:39:22,800 --> 00:39:24,839
shot voltage into the processor what are

964
00:39:24,839 --> 00:39:28,160
you talking about who's

965
00:39:35,880 --> 00:39:38,720
absolutely

966
00:39:46,859 --> 00:39:49,079
yeah yeah so like my home network I have

967
00:39:49,079 --> 00:39:50,460
a firewall

968
00:39:50,460 --> 00:39:53,099
you ask my wife we have eight Wi-Fi

969
00:39:53,099 --> 00:39:55,560
networks with the house right so I have

970
00:39:55,560 --> 00:39:57,300
my own corporate one I have my research

971
00:39:57,300 --> 00:40:00,720
one she's got her own one the PS4 and

972
00:40:00,720 --> 00:40:03,060
stuff is on its own because

973
00:40:03,060 --> 00:40:07,200
I don't know if that TV is vulnerable

974
00:40:07,200 --> 00:40:09,180
and I don't want them to use that to

975
00:40:09,180 --> 00:40:11,280
Pivot into the rest of my stuff so you

976
00:40:11,280 --> 00:40:13,440
know if you hack my TV and then my PS4

977
00:40:13,440 --> 00:40:15,780
and this and that whatever they're my

978
00:40:15,780 --> 00:40:17,880
smart devices they stop working that

979
00:40:17,880 --> 00:40:19,320
sucks I don't want you to steal my

980
00:40:19,320 --> 00:40:22,280
credit card because you

981
00:40:27,540 --> 00:40:30,079
whoever

982
00:40:40,140 --> 00:40:42,359
yeah so the question was uh heard about

983
00:40:42,359 --> 00:40:44,160
these smart home hubs you know what are

984
00:40:44,160 --> 00:40:46,320
they for well yeah that's great because

985
00:40:46,320 --> 00:40:48,359
that could also be your pivot Points

986
00:40:48,359 --> 00:40:50,820
maybe your smart home hub is the thing

987
00:40:50,820 --> 00:40:53,579
that's publicly facing and then all your

988
00:40:53,579 --> 00:40:57,000
iot devices are behind that so maybe you

989
00:40:57,000 --> 00:40:58,980
know you can't directly connect to these

990
00:40:58,980 --> 00:41:01,020
but you could hit that find something

991
00:41:01,020 --> 00:41:02,820
there and land on that device and the

992
00:41:02,820 --> 00:41:06,839
pivot onto other devices or

993
00:41:06,839 --> 00:41:09,960
around the network depending on segment

994
00:41:09,960 --> 00:41:12,960
s like it's another thing of iot devices

995
00:41:12,960 --> 00:41:14,040
is

996
00:41:14,040 --> 00:41:16,800
it's not just the IP camera but it's

997
00:41:16,800 --> 00:41:18,720
when it comes with the IP camera and

998
00:41:18,720 --> 00:41:21,060
additional router and a list and that

999
00:41:21,060 --> 00:41:22,920
like all those components should be

1000
00:41:22,920 --> 00:41:24,240
tested

1001
00:41:24,240 --> 00:41:26,820
as separate engagements as in total

1002
00:41:26,820 --> 00:41:29,160
because you should really dig into each

1003
00:41:29,160 --> 00:41:31,619
component and then see like can you find

1004
00:41:31,619 --> 00:41:33,420
a weaponized exploit to go all the way

1005
00:41:33,420 --> 00:41:35,640
through the chain and end up you know on

1006
00:41:35,640 --> 00:41:39,440
a company server or something like that

1007
00:41:39,839 --> 00:41:42,259
yep

1008
00:41:43,260 --> 00:41:45,839
the question was what got me into iot

1009
00:41:45,839 --> 00:41:49,020
so I was doing threat intelligence for a

1010
00:41:49,020 --> 00:41:50,339
company and I was looking for a pen

1011
00:41:50,339 --> 00:41:53,220
tester job and I could not get a pen

1012
00:41:53,220 --> 00:41:55,560
tester job to save my life everyone

1013
00:41:55,560 --> 00:41:58,560
wanted five years experience in the

1014
00:41:58,560 --> 00:42:00,660
corporate side not playing around at

1015
00:42:00,660 --> 00:42:02,520
home and hacking around

1016
00:42:02,520 --> 00:42:05,160
which is a whole nother talk

1017
00:42:05,160 --> 00:42:07,500
um but I interviewed this company and I

1018
00:42:07,500 --> 00:42:09,180
actually didn't really understand what

1019
00:42:09,180 --> 00:42:11,520
the job title really was I just thought

1020
00:42:11,520 --> 00:42:13,140
it was kind of like Network fun testing

1021
00:42:13,140 --> 00:42:14,760
all right cool

1022
00:42:14,760 --> 00:42:16,200
and they brought me in they're like what

1023
00:42:16,200 --> 00:42:18,000
are all these protocols

1024
00:42:18,000 --> 00:42:21,060
oh I've no idea but I can learn and I

1025
00:42:21,060 --> 00:42:22,260
will figure it out

1026
00:42:22,260 --> 00:42:24,359
and I got lucky and I took a chance and

1027
00:42:24,359 --> 00:42:26,880
I had a mentor who was hi God my

1028
00:42:26,880 --> 00:42:29,700
bachelor's and my Master's in iot

1029
00:42:29,700 --> 00:42:32,160
here's all of my knowledge and I just

1030
00:42:32,160 --> 00:42:33,599
drank from a fire

1031
00:42:33,599 --> 00:42:35,400
a year

1032
00:42:35,400 --> 00:42:38,280
going home mentally drained because I'm

1033
00:42:38,280 --> 00:42:40,859
so tired from learning all those things

1034
00:42:40,859 --> 00:42:43,200
that's how I got into it

1035
00:42:43,200 --> 00:42:45,660
there's some courses online I'm going

1036
00:42:45,660 --> 00:42:48,000
through the addify course right now

1037
00:42:48,000 --> 00:42:50,640
kind of price thanks like 2500 bucks so

1038
00:42:50,640 --> 00:42:53,160
maybe ask your company to do it but it's

1039
00:42:53,160 --> 00:42:54,660
cool because they send you devices to

1040
00:42:54,660 --> 00:42:57,240
hack as well so they'll send you

1041
00:42:57,240 --> 00:42:59,940
like a camera and a Bluetooth block and

1042
00:42:59,940 --> 00:43:01,560
things like that so you can get into

1043
00:43:01,560 --> 00:43:04,140
like sniffing Bluetooth and they give

1044
00:43:04,140 --> 00:43:05,700
you the tools that you do it as well so

1045
00:43:05,700 --> 00:43:07,819
you

1046
00:43:10,859 --> 00:43:11,940
know

1047
00:43:11,940 --> 00:43:13,680
yeah

1048
00:43:13,680 --> 00:43:16,140
yeah I'd like to do one of those at some

1049
00:43:16,140 --> 00:43:17,520
point

1050
00:43:17,520 --> 00:43:20,359
yeah right right

1051
00:43:20,400 --> 00:43:22,520
yeah

1052
00:43:32,940 --> 00:43:34,560
can you repeat the question one more

1053
00:43:34,560 --> 00:43:36,740
time

1054
00:43:45,480 --> 00:43:48,060
yeah you can look um you like connect

1055
00:43:48,060 --> 00:43:50,099
directly to your iot device and then you

1056
00:43:50,099 --> 00:43:52,140
look at like if it's running some kind

1057
00:43:52,140 --> 00:43:54,119
of like small Linux or something you can

1058
00:43:54,119 --> 00:43:56,640
look at like Etsy in-app files to see

1059
00:43:56,640 --> 00:43:59,099
what it's doing when it's booting so you

1060
00:43:59,099 --> 00:44:00,480
can find the attacker I'm not going to

1061
00:44:00,480 --> 00:44:03,180
exploit the iot device and not leave

1062
00:44:03,180 --> 00:44:05,579
myself some kind of back door

1063
00:44:05,579 --> 00:44:07,560
you could go and also download the

1064
00:44:07,560 --> 00:44:09,420
firmware for the current image and

1065
00:44:09,420 --> 00:44:11,220
compare it against your own

1066
00:44:11,220 --> 00:44:14,339
oh wait there's netcat on this on my

1067
00:44:14,339 --> 00:44:16,500
home but there's not on this one there

1068
00:44:16,500 --> 00:44:18,540
this binary

1069
00:44:18,540 --> 00:44:20,579
but it's not here and they're the same

1070
00:44:20,579 --> 00:44:21,900
versions

1071
00:44:21,900 --> 00:44:24,839
and anytime like you know look for your

1072
00:44:24,839 --> 00:44:27,060
iot device to be trying to talk to other

1073
00:44:27,060 --> 00:44:29,839
things or suddenly you're on you know

1074
00:44:29,839 --> 00:44:32,880
192.16a 1.x Network

1075
00:44:32,880 --> 00:44:35,339
and your IP address is dot two when it's

1076
00:44:35,339 --> 00:44:37,079
trying to talk three and four and five

1077
00:44:37,079 --> 00:44:38,579
and six because someone's just ping

1078
00:44:38,579 --> 00:44:40,619
sweeping your network your iot device

1079
00:44:40,619 --> 00:44:43,520
should not be doing that

1080
00:44:57,619 --> 00:45:00,900
so the question was any devices that

1081
00:45:00,900 --> 00:45:02,819
I've tested have they been using a

1082
00:45:02,819 --> 00:45:05,099
secure boot that I've been looking at I

1083
00:45:05,099 --> 00:45:07,140
haven't seen it it's kind of uncommon

1084
00:45:07,140 --> 00:45:09,060
and I think it's kind of that I think

1085
00:45:09,060 --> 00:45:10,740
it's been around for a while but it's

1086
00:45:10,740 --> 00:45:13,319
kind of newer for companies to start

1087
00:45:13,319 --> 00:45:15,780
putting that into their devices

1088
00:45:15,780 --> 00:45:17,819
unfortunately because it makes you know

1089
00:45:17,819 --> 00:45:20,160
your job a lot harder but there are

1090
00:45:20,160 --> 00:45:21,540
still ways you know you could still

1091
00:45:21,540 --> 00:45:23,819
corrupt it as it's booting up maybe and

1092
00:45:23,819 --> 00:45:26,400
it falls back and gives you information

1093
00:45:26,400 --> 00:45:29,220
in a Rochelle or something but it does

1094
00:45:29,220 --> 00:45:31,440
make it a lot harder right you can't

1095
00:45:31,440 --> 00:45:36,380
you boot shell and win makes things

1096
00:45:39,119 --> 00:45:41,960
any other questions

1097
00:45:43,079 --> 00:45:45,500
yep

1098
00:45:51,240 --> 00:45:52,380
yeah

1099
00:45:52,380 --> 00:45:54,300
um so I did it internally for a while so

1100
00:45:54,300 --> 00:45:56,819
I just disclosed it to my internal teams

1101
00:45:56,819 --> 00:45:59,940
and had meetings with them as any like

1102
00:45:59,940 --> 00:46:03,480
pen test style report hey we found these

1103
00:46:03,480 --> 00:46:05,579
it's really helpful in your reports when

1104
00:46:05,579 --> 00:46:07,859
you write them to have like this is the

1105
00:46:07,859 --> 00:46:09,300
vulnerable code right it'll be really

1106
00:46:09,300 --> 00:46:11,640
bad just be like hey you have command

1107
00:46:11,640 --> 00:46:14,819
injection on login.html

1108
00:46:14,819 --> 00:46:16,740
or okay like I understand there's only

1109
00:46:16,740 --> 00:46:19,079
two parameters but if you can pull out

1110
00:46:19,079 --> 00:46:21,000
the decompiled code and be like hey it's

1111
00:46:21,000 --> 00:46:22,020
here

1112
00:46:22,020 --> 00:46:24,780
it looks close enough to their actual

1113
00:46:24,780 --> 00:46:27,240
code that it can go and help find that

1114
00:46:27,240 --> 00:46:29,540
stuff

1115
00:46:31,800 --> 00:46:33,960
all right and that's my time I'll be

1116
00:46:33,960 --> 00:46:36,000
around the con I'll stand outside if you

1117
00:46:36,000 --> 00:46:39,500
want to ask questions thank you

