1
00:00:00,060 --> 00:00:08,730
[Music]

2
00:00:09,280 --> 00:00:11,360
hello

3
00:00:11,360 --> 00:00:14,400
uh welcome to again to another session

4
00:00:14,400 --> 00:00:17,920
for circle citycon i love this year's

5
00:00:17,920 --> 00:00:18,800
theme

6
00:00:18,800 --> 00:00:19,520
so

7
00:00:19,520 --> 00:00:20,960
i am

8
00:00:20,960 --> 00:00:23,439
a happy little avatar for a happy little

9
00:00:23,439 --> 00:00:25,119
conference

10
00:00:25,119 --> 00:00:27,359
well this is going to be a shock to the

11
00:00:27,359 --> 00:00:28,480
system

12
00:00:28,480 --> 00:00:32,159
real static analysis for real absec

13
00:00:32,159 --> 00:00:34,800
my slide deck and everything and i do

14
00:00:34,800 --> 00:00:36,480
mean everything i talk about in

15
00:00:36,480 --> 00:00:39,280
references to the tech that i reference

16
00:00:39,280 --> 00:00:40,559
in this talk

17
00:00:40,559 --> 00:00:45,200
is available at tiny si slash static

18
00:00:45,200 --> 00:00:46,079
so

19
00:00:46,079 --> 00:00:48,399
who am i and what do i do

20
00:00:48,399 --> 00:00:51,199
my name is sean marshall i code i teach

21
00:00:51,199 --> 00:00:54,000
i hack i am a full-time developer

22
00:00:54,000 --> 00:00:55,440
full-time

23
00:00:55,440 --> 00:00:57,520
cyber security consultant slash

24
00:00:57,520 --> 00:00:59,359
penetration tester and when i'm not

25
00:00:59,359 --> 00:01:01,120
doing either of those things i'm

26
00:01:01,120 --> 00:01:04,879
teaching you how to take over the world

27
00:01:04,879 --> 00:01:08,400
this is not a security talk this is

28
00:01:08,400 --> 00:01:11,680
more of a developer talk this comes from

29
00:01:11,680 --> 00:01:14,400
not only being a red teamer but also

30
00:01:14,400 --> 00:01:17,119
having to also be a dev

31
00:01:17,119 --> 00:01:19,600
with deadlines and have to work in the

32
00:01:19,600 --> 00:01:22,560
ci cd pipeline

33
00:01:22,560 --> 00:01:23,600
so

34
00:01:23,600 --> 00:01:26,799
without further ado let's get started

35
00:01:26,799 --> 00:01:28,960
the three points that we're going to

36
00:01:28,960 --> 00:01:32,960
talk about in this talk is ttp tools

37
00:01:32,960 --> 00:01:35,920
techniques and people of a static

38
00:01:35,920 --> 00:01:38,000
analysis engagement

39
00:01:38,000 --> 00:01:38,720
now

40
00:01:38,720 --> 00:01:40,960
i know what you're thinking i thought

41
00:01:40,960 --> 00:01:42,960
this was a technical thought

42
00:01:42,960 --> 00:01:45,759
how dare you infiltrate your thought

43
00:01:45,759 --> 00:01:47,200
leadership

44
00:01:47,200 --> 00:01:49,520
but understand and know that if you

45
00:01:49,520 --> 00:01:51,920
ignore the human element you aren't

46
00:01:51,920 --> 00:01:54,000
going to get anywhere especially when

47
00:01:54,000 --> 00:01:55,759
we're diving into source code and

48
00:01:55,759 --> 00:01:58,719
working with development teams

49
00:01:58,719 --> 00:02:01,280
so this is not the traditional use of

50
00:02:01,280 --> 00:02:03,280
ttp but

51
00:02:03,280 --> 00:02:07,200
every element here is essential

52
00:02:07,200 --> 00:02:10,318
for the uninitiated stack analysis is

53
00:02:10,318 --> 00:02:13,680
the process of examining software code

54
00:02:13,680 --> 00:02:17,120
without execution the whole point is to

55
00:02:17,120 --> 00:02:20,560
be see what information we can grab or

56
00:02:20,560 --> 00:02:22,080
glean

57
00:02:22,080 --> 00:02:24,319
from just looking at the source code

58
00:02:24,319 --> 00:02:26,080
itself

59
00:02:26,080 --> 00:02:29,040
now what thing what bugs

60
00:02:29,040 --> 00:02:31,800
can we find that actually compromise

61
00:02:31,800 --> 00:02:34,239
confidentiality integrity or

62
00:02:34,239 --> 00:02:36,400
availability and there are many things

63
00:02:36,400 --> 00:02:40,319
that can lie to you but code can't now

64
00:02:40,319 --> 00:02:43,680
a pen test is wonderful a pen test is

65
00:02:43,680 --> 00:02:46,080
beautiful i say that as a pen tester

66
00:02:46,080 --> 00:02:48,480
there are no false positives on a pen

67
00:02:48,480 --> 00:02:49,760
test

68
00:02:49,760 --> 00:02:51,599
however

69
00:02:51,599 --> 00:02:53,360
this is a big however

70
00:02:53,360 --> 00:02:55,760
pen tests are expensive

71
00:02:55,760 --> 00:02:57,920
and not everyone has a

72
00:02:57,920 --> 00:02:58,720
and

73
00:02:58,720 --> 00:03:01,840
maybe you can get a pen test once a year

74
00:03:01,840 --> 00:03:04,879
maybe once a quarter maybe monthly but

75
00:03:04,879 --> 00:03:08,000
you're not pen testing constantly as new

76
00:03:08,000 --> 00:03:10,879
code is added new features chances are

77
00:03:10,879 --> 00:03:13,519
you're going to add dozens of features

78
00:03:13,519 --> 00:03:16,480
before you or next pen test comes around

79
00:03:16,480 --> 00:03:19,519
in that cycle so here we can actually

80
00:03:19,519 --> 00:03:21,360
with static analysis we can actually

81
00:03:21,360 --> 00:03:24,000
insert into our pipelines and

82
00:03:24,000 --> 00:03:26,799
take a deep dive into security flaws

83
00:03:26,799 --> 00:03:30,080
that may be present within the code

84
00:03:30,080 --> 00:03:32,080
it's turtle and the wonderful thing

85
00:03:32,080 --> 00:03:33,760
about this is now we've got

86
00:03:33,760 --> 00:03:36,879
infrastructure as code so not only do

87
00:03:36,879 --> 00:03:39,680
you have the actual application ready

88
00:03:39,680 --> 00:03:42,400
but you also can have the

89
00:03:42,400 --> 00:03:44,319
uh entire

90
00:03:44,319 --> 00:03:46,480
you can have also the entire

91
00:03:46,480 --> 00:03:49,040
infrastructure cloud infrastructure that

92
00:03:49,040 --> 00:03:51,519
is going to be deployed in tied into the

93
00:03:51,519 --> 00:03:54,319
same product

94
00:03:54,560 --> 00:03:56,879
it's turtles all the way down and it

95
00:03:56,879 --> 00:03:58,400
always was

96
00:03:58,400 --> 00:04:01,760
so quick story time before we begin

97
00:04:01,760 --> 00:04:04,000
here's how a usual

98
00:04:04,000 --> 00:04:06,720
stack analysis engagement goes

99
00:04:06,720 --> 00:04:07,760
um

100
00:04:07,760 --> 00:04:10,080
the sec people get around we all

101
00:04:10,080 --> 00:04:12,640
commiserate together um there may not be

102
00:04:12,640 --> 00:04:14,959
a developer in the room the closest

103
00:04:14,959 --> 00:04:16,880
thing we'll get there is a project

104
00:04:16,880 --> 00:04:19,440
manager and this is from the client side

105
00:04:19,440 --> 00:04:20,959
and

106
00:04:20,959 --> 00:04:24,000
we just we commiserate and cecil loves

107
00:04:24,000 --> 00:04:25,840
us they say okay let's whip the devs

108
00:04:25,840 --> 00:04:27,120
into shape

109
00:04:27,120 --> 00:04:29,520
and so

110
00:04:29,520 --> 00:04:32,240
right then and there i some red flags

111
00:04:32,240 --> 00:04:34,080
appearing but okay

112
00:04:34,080 --> 00:04:35,440
um

113
00:04:35,440 --> 00:04:38,080
we do our best in the in that engagement

114
00:04:38,080 --> 00:04:40,720
we ask the right questions and then we

115
00:04:40,720 --> 00:04:42,639
generate a report which

116
00:04:42,639 --> 00:04:46,160
is useful it's helpful for that little

117
00:04:46,160 --> 00:04:49,040
brief engage time but

118
00:04:49,040 --> 00:04:51,759
it doesn't age well in the next of what

119
00:04:51,759 --> 00:04:54,160
if you fix all of the bugs that we

120
00:04:54,160 --> 00:04:55,680
generate with the report are you really

121
00:04:55,680 --> 00:04:58,639
going to wait until the next report

122
00:04:58,639 --> 00:05:01,199
there's a better way to integrate static

123
00:05:01,199 --> 00:05:05,600
analysis into your appsec program

124
00:05:05,600 --> 00:05:08,800
now your first instinct when you're in

125
00:05:08,800 --> 00:05:11,039
diving into this endeavor is

126
00:05:11,039 --> 00:05:14,320
grab all the things buy all the tools

127
00:05:14,320 --> 00:05:15,520
however

128
00:05:15,520 --> 00:05:18,960
you must be calm you must be tranquil

129
00:05:18,960 --> 00:05:21,840
think what sparks joy

130
00:05:21,840 --> 00:05:26,000
minimalism minimalism is key

131
00:05:26,000 --> 00:05:26,800
so

132
00:05:26,800 --> 00:05:29,440
first of all do you know what language

133
00:05:29,440 --> 00:05:31,919
or language is the application is

134
00:05:31,919 --> 00:05:34,960
written in or apps that we're testing

135
00:05:34,960 --> 00:05:36,960
are you aware of the technology stack

136
00:05:36,960 --> 00:05:38,560
that surrounds it

137
00:05:38,560 --> 00:05:41,039
the tools we pick and the tools we bring

138
00:05:41,039 --> 00:05:43,120
to the table

139
00:05:43,120 --> 00:05:45,919
have to come from

140
00:05:45,919 --> 00:05:48,160
have to be useful to actually deriving

141
00:05:48,160 --> 00:05:51,280
information from the application that

142
00:05:51,280 --> 00:05:53,840
we're testing

143
00:05:54,080 --> 00:05:56,960
noise reduction is especially important

144
00:05:56,960 --> 00:06:00,400
if you've got a whole bunch of tools

145
00:06:00,400 --> 00:06:02,800
that you'll get a whole bunch of false

146
00:06:02,800 --> 00:06:05,600
positives and you have to go through

147
00:06:05,600 --> 00:06:08,479
a lot of false positives because they're

148
00:06:08,479 --> 00:06:10,240
if because they're going to be either

149
00:06:10,240 --> 00:06:11,919
two things wrong

150
00:06:11,919 --> 00:06:12,800
one

151
00:06:12,800 --> 00:06:15,199
your dev team is written a horribly

152
00:06:15,199 --> 00:06:17,199
vulnerable app

153
00:06:17,199 --> 00:06:18,720
or two

154
00:06:18,720 --> 00:06:21,440
your tool isn't configured correctly and

155
00:06:21,440 --> 00:06:23,280
the only way you can get there is

156
00:06:23,280 --> 00:06:26,080
actually by diving in and trying to

157
00:06:26,080 --> 00:06:28,880
understand context within it and also

158
00:06:28,880 --> 00:06:31,360
configuration to the tool so it doesn't

159
00:06:31,360 --> 00:06:35,840
blare off on the wrong thing

160
00:06:36,000 --> 00:06:37,919
also and

161
00:06:37,919 --> 00:06:39,840
but one thing that stack analysis is

162
00:06:39,840 --> 00:06:42,000
really good for is analyzing the

163
00:06:42,000 --> 00:06:44,400
software supply chain because if you

164
00:06:44,400 --> 00:06:45,360
spend

165
00:06:45,360 --> 00:06:47,440
thousands and i'm talking thousands of

166
00:06:47,440 --> 00:06:49,680
dollars on a pen test

167
00:06:49,680 --> 00:06:52,639
and the most and

168
00:06:52,639 --> 00:06:54,000
the

169
00:06:54,000 --> 00:06:57,199
it's news to you it's brand new the fact

170
00:06:57,199 --> 00:07:00,160
that you've got missing patches you are

171
00:07:00,160 --> 00:07:02,720
wasting your time and money

172
00:07:02,720 --> 00:07:05,199
that's because your pen test your

173
00:07:05,199 --> 00:07:08,240
quarterly monthly yearly pen test should

174
00:07:08,240 --> 00:07:10,720
never be the first place you find out

175
00:07:10,720 --> 00:07:13,599
that you have missing patches

176
00:07:13,599 --> 00:07:15,680
also

177
00:07:15,680 --> 00:07:17,840
manual patching

178
00:07:17,840 --> 00:07:20,479
is a waste of time if you can automate

179
00:07:20,479 --> 00:07:23,680
it do so

180
00:07:23,759 --> 00:07:26,080
and also when you're starting out and

181
00:07:26,080 --> 00:07:29,039
you're building a project avoid

182
00:07:29,039 --> 00:07:31,520
avoid deprecated and end-of-life

183
00:07:31,520 --> 00:07:34,560
software i know that's harder than it

184
00:07:34,560 --> 00:07:37,199
seems especially with like

185
00:07:37,199 --> 00:07:39,680
j-thon for example the

186
00:07:39,680 --> 00:07:43,120
java python library

187
00:07:43,120 --> 00:07:45,120
yeah the java python library that's

188
00:07:45,120 --> 00:07:47,199
still running two dot

189
00:07:47,199 --> 00:07:49,840
that's still running 2.x

190
00:07:49,840 --> 00:07:52,000
um and also

191
00:07:52,000 --> 00:07:54,479
the fact that if you have a node library

192
00:07:54,479 --> 00:07:56,720
running and you may have written a node

193
00:07:56,720 --> 00:07:58,720
app within the past five years you have

194
00:07:58,720 --> 00:08:00,800
to check your dependencies dependencies

195
00:08:00,800 --> 00:08:03,919
dependency to find out if you're using

196
00:08:03,919 --> 00:08:06,560
the request library because the request

197
00:08:06,560 --> 00:08:08,879
library is entering maintenance mode and

198
00:08:08,879 --> 00:08:12,639
will eventually be deprecated

199
00:08:12,639 --> 00:08:14,479
so

200
00:08:14,479 --> 00:08:17,199
i'm going to go into a brief demo

201
00:08:17,199 --> 00:08:19,919
uh just this is to cover the work flow

202
00:08:19,919 --> 00:08:22,080
of an analyst so if you're a consultant

203
00:08:22,080 --> 00:08:25,919
called on job if you're the one security

204
00:08:25,919 --> 00:08:29,120
champion who's ball and told to do all

205
00:08:29,120 --> 00:08:32,240
of these things this is useful for you

206
00:08:32,240 --> 00:08:33,440
i'm going to see

207
00:08:33,440 --> 00:08:35,279
and for those of you who download the

208
00:08:35,279 --> 00:08:38,240
slide deck later

209
00:08:38,240 --> 00:08:40,000
there's a little treat we've got music

210
00:08:40,000 --> 00:08:41,760
and all that i'm going to try to mute

211
00:08:41,760 --> 00:08:43,919
that because i'm not sure of the audio

212
00:08:43,919 --> 00:08:46,640
setup here

213
00:08:49,760 --> 00:08:50,959
so

214
00:08:50,959 --> 00:08:54,800
right here um i know i expect you all to

215
00:08:54,800 --> 00:08:57,760
know how to clone a repository uh the

216
00:08:57,760 --> 00:09:01,120
links to it is stack analysis dot stack

217
00:09:01,120 --> 00:09:04,880
analysis ttp it's open source and so

218
00:09:04,880 --> 00:09:06,720
this is just a vagrant box that will

219
00:09:06,720 --> 00:09:10,160
spin up so first thing is first i

220
00:09:10,160 --> 00:09:11,519
flounder

221
00:09:11,519 --> 00:09:14,959
cd into the directory of course and then

222
00:09:14,959 --> 00:09:15,839
i

223
00:09:15,839 --> 00:09:18,240
edit the vagrant file this is important

224
00:09:18,240 --> 00:09:20,000
you can configure

225
00:09:20,000 --> 00:09:22,399
different things for the vm same way as

226
00:09:22,399 --> 00:09:24,959
if you're using virtualbox

227
00:09:24,959 --> 00:09:26,800
gui the

228
00:09:26,800 --> 00:09:29,600
settings here will actually overwrite

229
00:09:29,600 --> 00:09:31,839
the

230
00:09:32,160 --> 00:09:34,959
will actually overwrite the

231
00:09:34,959 --> 00:09:36,080
settings that you will have in

232
00:09:36,080 --> 00:09:38,080
virtualbox

233
00:09:38,080 --> 00:09:41,360
what i'm adding here is just a synced

234
00:09:41,360 --> 00:09:43,279
folder that way

235
00:09:43,279 --> 00:09:46,720
that the client code stays in my host

236
00:09:46,720 --> 00:09:48,720
and i'm just doing the analysis in the

237
00:09:48,720 --> 00:09:51,519
vagrant box and then i just output

238
00:09:51,519 --> 00:09:54,800
output the analysis into that same

239
00:09:54,800 --> 00:09:57,199
folder

240
00:10:02,720 --> 00:10:04,640
and we will skip

241
00:10:04,640 --> 00:10:06,320
because that's another reason

242
00:10:06,320 --> 00:10:08,959
uh to actually spin up the vagrant box

243
00:10:08,959 --> 00:10:11,279
we just do a vagrant up i'm going to

244
00:10:11,279 --> 00:10:12,240
spin

245
00:10:12,240 --> 00:10:14,240
i'm going to skip some things

246
00:10:14,240 --> 00:10:16,800
uh trust me i've done this demo live

247
00:10:16,800 --> 00:10:22,079
before it's 10 minutes and 10 minutes is

248
00:10:22,079 --> 00:10:24,720
maybe quick for you guys but on the

249
00:10:24,720 --> 00:10:28,000
stage it's absolute agony so

250
00:10:28,000 --> 00:10:31,360
we're gonna fast forward and then

251
00:10:31,360 --> 00:10:33,760
from there it's just vagrant ssh to

252
00:10:33,760 --> 00:10:37,200
actually get into the box

253
00:10:37,760 --> 00:10:40,240
now there are a couple of typos that i

254
00:10:40,240 --> 00:10:41,279
do

255
00:10:41,279 --> 00:10:43,440
skip those

256
00:10:43,440 --> 00:10:48,160
to get to the juicy part and that is

257
00:10:48,720 --> 00:10:50,800
we're exiting out and i'm going to

258
00:10:50,800 --> 00:10:53,200
provision sonar cube the tools that i

259
00:10:53,200 --> 00:10:54,720
mentioned in the previous slide like

260
00:10:54,720 --> 00:10:56,800
bandit

261
00:10:56,800 --> 00:10:58,640
bandit

262
00:10:58,640 --> 00:11:03,120
not just sonar cube as well but also

263
00:11:03,120 --> 00:11:05,200
shell check and other things are

264
00:11:05,200 --> 00:11:07,519
actually provisioned into the

265
00:11:07,519 --> 00:11:09,920
vagrant box so

266
00:11:09,920 --> 00:11:11,200
with different

267
00:11:11,200 --> 00:11:13,279
provisioning scripts you can actually

268
00:11:13,279 --> 00:11:15,920
customize it based on the application or

269
00:11:15,920 --> 00:11:17,279
what client

270
00:11:17,279 --> 00:11:18,640
and their needs

271
00:11:18,640 --> 00:11:21,360
here we've also got some scripts to

272
00:11:21,360 --> 00:11:24,000
create the docker the

273
00:11:24,000 --> 00:11:26,720
shouldn't say uh docker image yes docker

274
00:11:26,720 --> 00:11:28,000
image

275
00:11:28,000 --> 00:11:29,760
and then start it

276
00:11:29,760 --> 00:11:32,000
the ip addresses are local to your

277
00:11:32,000 --> 00:11:34,160
machine so you can connect to them from

278
00:11:34,160 --> 00:11:35,279
the host

279
00:11:35,279 --> 00:11:36,160
so

280
00:11:36,160 --> 00:11:38,160
this window i'm actually pulling from

281
00:11:38,160 --> 00:11:40,320
the host machine

282
00:11:40,320 --> 00:11:43,120
copy the ip address pull from the host

283
00:11:43,120 --> 00:11:45,440
machine

284
00:11:45,440 --> 00:11:47,600
and we're just running you know sonar

285
00:11:47,600 --> 00:11:51,040
cube this is a fresh like trial install

286
00:11:51,040 --> 00:11:53,440
and the beautiful thing about this is

287
00:11:53,440 --> 00:11:56,800
that you could actually save the

288
00:11:56,800 --> 00:11:59,440
analysis from

289
00:11:59,440 --> 00:12:02,399
the tooling here by just saving

290
00:12:02,399 --> 00:12:04,880
exporting the vagrant image

291
00:12:04,880 --> 00:12:07,600
so if you can't so like for the example

292
00:12:07,600 --> 00:12:09,519
the trial version of sonar cube won't

293
00:12:09,519 --> 00:12:12,480
let you export reports you can just ship

294
00:12:12,480 --> 00:12:17,200
the machine into your internal evidence

295
00:12:17,200 --> 00:12:18,399
systems

296
00:12:18,399 --> 00:12:20,320
so

297
00:12:20,320 --> 00:12:23,120
um the vagrant box of course is linux

298
00:12:23,120 --> 00:12:26,079
this is the your standard

299
00:12:26,079 --> 00:12:28,959
this is your standard sonar cube run i

300
00:12:28,959 --> 00:12:32,399
think the app in this case is python use

301
00:12:32,399 --> 00:12:34,720
python yes

302
00:12:34,720 --> 00:12:36,240
yep

303
00:12:36,240 --> 00:12:38,480
and i found some vulnerable

304
00:12:38,480 --> 00:12:41,120
old library on the internet and then i

305
00:12:41,120 --> 00:12:43,200
just run the quick analysis

306
00:12:43,200 --> 00:12:46,320
and that's not fast forward and that's

307
00:12:46,320 --> 00:12:49,120
actually real time so a lot of depending

308
00:12:49,120 --> 00:12:50,320
on how much

309
00:12:50,320 --> 00:12:52,000
how

310
00:12:52,000 --> 00:12:54,800
much of your system resources that you

311
00:12:54,800 --> 00:12:56,480
allow to your

312
00:12:56,480 --> 00:12:58,000
vagrant image

313
00:12:58,000 --> 00:13:00,959
is how quickly it can go right now it's

314
00:13:00,959 --> 00:13:02,880
a simple example it's one security

315
00:13:02,880 --> 00:13:05,360
hotspot and we've got hard-coded

316
00:13:05,360 --> 00:13:06,720
credentials

317
00:13:06,720 --> 00:13:09,200
now normally you would dive in

318
00:13:09,200 --> 00:13:12,240
investigate see is this really a false

319
00:13:12,240 --> 00:13:15,279
positive but um since they go through

320
00:13:15,279 --> 00:13:17,600
the effort of hashing that hard-coded

321
00:13:17,600 --> 00:13:20,320
string i'm going to assume

322
00:13:20,320 --> 00:13:24,959
that this is indeed what it says it is

323
00:13:27,120 --> 00:13:29,120
so

324
00:13:29,120 --> 00:13:32,839
now we move to the second part technique

325
00:13:32,839 --> 00:13:36,399
technique so we let engineers if you let

326
00:13:36,399 --> 00:13:39,680
your engineers actually look in the code

327
00:13:39,680 --> 00:13:41,600
you they're going to find things that

328
00:13:41,600 --> 00:13:43,440
you you're not going to find

329
00:13:43,440 --> 00:13:45,440
this beautiful image is a wonderful

330
00:13:45,440 --> 00:13:46,480
example

331
00:13:46,480 --> 00:13:49,360
i would not see this

332
00:13:49,360 --> 00:13:51,680
and now that i do

333
00:13:51,680 --> 00:13:54,240
c-span will never be the same again it's

334
00:13:54,240 --> 00:13:56,959
the same way as when you train up uh

335
00:13:56,959 --> 00:14:00,079
your developers and your engineers

336
00:14:00,079 --> 00:14:02,959
they will see flaws that you didn't even

337
00:14:02,959 --> 00:14:04,399
think about

338
00:14:04,399 --> 00:14:06,720
and for them it's not just a check it's

339
00:14:06,720 --> 00:14:10,000
not just a checklist it's a design flaw

340
00:14:10,000 --> 00:14:13,600
into something that they built

341
00:14:13,600 --> 00:14:14,399
so

342
00:14:14,399 --> 00:14:16,480
my advice to you is if you're a

343
00:14:16,480 --> 00:14:19,680
consultant company or you're

344
00:14:19,680 --> 00:14:22,079
working with your internal resources

345
00:14:22,079 --> 00:14:25,279
assign someone who has written

346
00:14:25,279 --> 00:14:26,880
production code

347
00:14:26,880 --> 00:14:29,680
within the past decade please

348
00:14:29,680 --> 00:14:31,839
please

349
00:14:32,079 --> 00:14:34,720
that actually helps to find real design

350
00:14:34,720 --> 00:14:37,199
flaws

351
00:14:37,760 --> 00:14:39,279
another thing that

352
00:14:39,279 --> 00:14:41,440
we another thing that we need to

353
00:14:41,440 --> 00:14:44,480
understand is it's okay

354
00:14:44,480 --> 00:14:48,000
if some things are manual at first

355
00:14:48,000 --> 00:14:48,959
uh

356
00:14:48,959 --> 00:14:51,600
anything that relevant to it there is an

357
00:14:51,600 --> 00:14:54,320
xkcd for it i love this image because

358
00:14:54,320 --> 00:14:56,839
this is my life this is an

359
00:14:56,839 --> 00:14:59,440
autobiography and so

360
00:14:59,440 --> 00:15:00,800
we spend a lot

361
00:15:00,800 --> 00:15:03,040
there's so much time wasted in

362
00:15:03,040 --> 00:15:05,279
automation that it would have been

363
00:15:05,279 --> 00:15:08,800
simpler just to do the tasks

364
00:15:08,800 --> 00:15:11,040
so

365
00:15:11,360 --> 00:15:13,920
understand that automation is great it's

366
00:15:13,920 --> 00:15:17,440
fantastic but it only works if you

367
00:15:17,440 --> 00:15:20,399
absolutely have a deep understanding of

368
00:15:20,399 --> 00:15:22,880
what it is you're automating the reason

369
00:15:22,880 --> 00:15:24,800
why you would use something like cloud

370
00:15:24,800 --> 00:15:27,760
formation is because you're automating

371
00:15:27,760 --> 00:15:30,320
the task of manually going into the

372
00:15:30,320 --> 00:15:33,440
console of aws and then changing the

373
00:15:33,440 --> 00:15:35,199
configuration settings for different

374
00:15:35,199 --> 00:15:37,199
resources

375
00:15:37,199 --> 00:15:39,279
unless you know what your audit if you

376
00:15:39,279 --> 00:15:41,600
just jump straight into cloudformation

377
00:15:41,600 --> 00:15:43,519
or terraform

378
00:15:43,519 --> 00:15:46,160
not knowing what everything is

379
00:15:46,160 --> 00:15:47,839
is actually going to be difficult

380
00:15:47,839 --> 00:15:50,240
because the infrastructure as code is

381
00:15:50,240 --> 00:15:52,959
just json and it's just json of the

382
00:15:52,959 --> 00:15:54,800
configuration settings that you would

383
00:15:54,800 --> 00:15:58,560
find in the console

384
00:15:58,800 --> 00:16:01,040
so

385
00:16:01,120 --> 00:16:02,800
i'm going to do demo with some

386
00:16:02,800 --> 00:16:04,639
automation

387
00:16:04,639 --> 00:16:06,079
because

388
00:16:06,079 --> 00:16:08,560
the manual steps we already know

389
00:16:08,560 --> 00:16:10,399
we already have known and engrained with

390
00:16:10,399 --> 00:16:12,480
ourselves to the point that it is good

391
00:16:12,480 --> 00:16:14,880
enough to add that automation before we

392
00:16:14,880 --> 00:16:15,920
do

393
00:16:15,920 --> 00:16:18,160
i also want to remind you all to

394
00:16:18,160 --> 00:16:20,959
integrate your

395
00:16:20,959 --> 00:16:23,040
static analysis that you put into the

396
00:16:23,040 --> 00:16:24,399
pipeline

397
00:16:24,399 --> 00:16:28,560
in with all of your existing security

398
00:16:28,560 --> 00:16:31,040
methodologies for example this four-step

399
00:16:31,040 --> 00:16:35,120
methodology is what we use secure ideas

400
00:16:35,120 --> 00:16:37,839
and it's beautiful because

401
00:16:37,839 --> 00:16:40,959
as part of recon you could have a full

402
00:16:40,959 --> 00:16:43,759
white box engagement where you have one

403
00:16:43,759 --> 00:16:45,199
consultant

404
00:16:45,199 --> 00:16:47,600
working on the stack analysis

405
00:16:47,600 --> 00:16:50,639
diving into reports and finding x code

406
00:16:50,639 --> 00:16:52,320
execution flaws and you could have

407
00:16:52,320 --> 00:16:54,480
another and you could have another

408
00:16:54,480 --> 00:16:58,160
analyst actually performing the pen test

409
00:16:58,160 --> 00:17:00,560
dynamically and it's beautiful you'll be

410
00:17:00,560 --> 00:17:03,279
interested in what we find i think

411
00:17:03,279 --> 00:17:05,039
cves get

412
00:17:05,039 --> 00:17:07,599
found this way

413
00:17:07,599 --> 00:17:08,640
so

414
00:17:08,640 --> 00:17:11,520
if you don't have that full white box

415
00:17:11,520 --> 00:17:13,280
assessment going on and it's just a

416
00:17:13,280 --> 00:17:15,520
straight up static analysis you just

417
00:17:15,520 --> 00:17:18,880
gotta break up that whole recon of being

418
00:17:18,880 --> 00:17:20,799
more twenty percent

419
00:17:20,799 --> 00:17:22,000
uh

420
00:17:22,000 --> 00:17:24,160
thirty percent thirty five percent would

421
00:17:24,160 --> 00:17:26,959
be mapping the application so traversing

422
00:17:26,959 --> 00:17:28,720
through the code base seeing where

423
00:17:28,720 --> 00:17:30,640
everything fits together

424
00:17:30,640 --> 00:17:33,520
and then 35 percent this vulnerability

425
00:17:33,520 --> 00:17:37,200
discovery once you have once you've done

426
00:17:37,200 --> 00:17:39,360
once you've done the scans the

427
00:17:39,360 --> 00:17:41,200
vulnerabilities pop out

428
00:17:41,200 --> 00:17:43,280
the possible vulnerabilities pop out at

429
00:17:43,280 --> 00:17:45,600
you and they're already discovered and

430
00:17:45,600 --> 00:17:47,120
then the 10

431
00:17:47,120 --> 00:17:50,480
is the exploitation

432
00:17:50,480 --> 00:17:52,320
so we're going to do a brief demo on

433
00:17:52,320 --> 00:17:55,039
just the ci cd pipeline we're doing the

434
00:17:55,039 --> 00:17:57,600
video for a different reason than the

435
00:17:57,600 --> 00:17:59,919
other reason the demos for this is

436
00:17:59,919 --> 00:18:01,760
actually quite short and this pipeline

437
00:18:01,760 --> 00:18:03,200
runs in minutes

438
00:18:03,200 --> 00:18:05,039
however

439
00:18:05,039 --> 00:18:06,640
i love you all

440
00:18:06,640 --> 00:18:08,559
but i don't trust you having it

441
00:18:08,559 --> 00:18:12,000
pre-recorded lets me censor some pii and

442
00:18:12,000 --> 00:18:15,440
sensitive information so let's get in

443
00:18:15,440 --> 00:18:18,400
so we've got

444
00:18:19,760 --> 00:18:22,400
pipeline and we notice that the build

445
00:18:22,400 --> 00:18:24,480
failed so we dive in

446
00:18:24,480 --> 00:18:27,760
and we see that we're running yarn audit

447
00:18:27,760 --> 00:18:30,240
now yarn audit is wonderful it allows

448
00:18:30,240 --> 00:18:33,520
you to see all these vulnerabilities

449
00:18:33,520 --> 00:18:35,360
in the code

450
00:18:35,360 --> 00:18:37,919
not in necessarily in the code but also

451
00:18:37,919 --> 00:18:40,000
in the software supply chain your

452
00:18:40,000 --> 00:18:43,280
dependencies i don't know about you but

453
00:18:43,280 --> 00:18:46,960
my boss is a killer with the code review

454
00:18:46,960 --> 00:18:49,360
and will not let me ship code with

455
00:18:49,360 --> 00:18:52,240
cross-site scripting in it

456
00:18:52,240 --> 00:18:55,360
however this demo is incomplete

457
00:18:55,360 --> 00:18:57,679
it's incomplete because

458
00:18:57,679 --> 00:18:58,640
it is

459
00:18:58,640 --> 00:19:01,120
because although we've demonstrated that

460
00:19:01,120 --> 00:19:03,520
we can block access

461
00:19:03,520 --> 00:19:05,840
i think alyssa miller once quote was

462
00:19:05,840 --> 00:19:07,919
once said that developers don't want

463
00:19:07,919 --> 00:19:10,559
gatekeepers they want functional code

464
00:19:10,559 --> 00:19:13,520
and i agree my boss also would like

465
00:19:13,520 --> 00:19:15,280
functional code and functional pipeline

466
00:19:15,280 --> 00:19:18,080
so this is screenshots of the pipeline

467
00:19:18,080 --> 00:19:21,679
actually working and how we've opened it

468
00:19:21,679 --> 00:19:23,919
up so that we get the same security

469
00:19:23,919 --> 00:19:25,200
checking

470
00:19:25,200 --> 00:19:26,080
well

471
00:19:26,080 --> 00:19:28,640
here you can set the audit levels on

472
00:19:28,640 --> 00:19:32,240
yarn audit to high and you can also set

473
00:19:32,240 --> 00:19:35,039
it to tact dependencies

474
00:19:35,039 --> 00:19:37,280
and so that way you don't focus in on

475
00:19:37,280 --> 00:19:39,440
vulnerable dev dependencies that don't

476
00:19:39,440 --> 00:19:41,679
actually ship to client

477
00:19:41,679 --> 00:19:44,240
don't actually get shipped in your

478
00:19:44,240 --> 00:19:46,640
client-side code you can actually

479
00:19:46,640 --> 00:19:48,960
make it even more granular so you don't

480
00:19:48,960 --> 00:19:51,520
stop the build and you also don't have

481
00:19:51,520 --> 00:19:53,919
to stop the build you can hook alert

482
00:19:53,919 --> 00:19:55,760
scripts into

483
00:19:55,760 --> 00:19:58,720
uh trigger you can hook up alert scripts

484
00:19:58,720 --> 00:20:01,280
on a high trigger

485
00:20:01,280 --> 00:20:02,080
thing

486
00:20:02,080 --> 00:20:02,880
so

487
00:20:02,880 --> 00:20:07,600
if the pipeline has to be available 24 7

488
00:20:07,600 --> 00:20:08,640
0

489
00:20:08,640 --> 00:20:11,200
0 downtime

490
00:20:11,200 --> 00:20:12,159
then

491
00:20:12,159 --> 00:20:14,559
maybe change the configuration settings

492
00:20:14,559 --> 00:20:16,640
so that you get alerted rather than

493
00:20:16,640 --> 00:20:19,440
blocking the pipeline

494
00:20:19,440 --> 00:20:21,840
another thing that's really useful is

495
00:20:21,840 --> 00:20:25,360
for cloud formation stacks

496
00:20:25,360 --> 00:20:29,280
and cloud formation templates is cf nag

497
00:20:29,280 --> 00:20:32,960
now cf nag is just this good linter

498
00:20:32,960 --> 00:20:34,480
and also

499
00:20:34,480 --> 00:20:35,760
cf

500
00:20:35,760 --> 00:20:39,679
cfn lint which aws uses

501
00:20:39,679 --> 00:20:43,520
the ad is also useful for examining for

502
00:20:43,520 --> 00:20:46,559
security flaws within the im policy this

503
00:20:46,559 --> 00:20:49,039
is useful for when i

504
00:20:49,039 --> 00:20:52,240
dive in for when i have to do i am as

505
00:20:52,240 --> 00:20:54,960
part of the cloud formation template

506
00:20:54,960 --> 00:20:57,679
and i link to both i link to the at

507
00:20:57,679 --> 00:21:00,240
least cfn nag but you can ping me later

508
00:21:00,240 --> 00:21:02,080
and i can point you in the direction of

509
00:21:02,080 --> 00:21:03,280
cfn

510
00:21:03,280 --> 00:21:05,600
lent

511
00:21:06,640 --> 00:21:09,440
and now we go

512
00:21:09,440 --> 00:21:10,880
to

513
00:21:10,880 --> 00:21:12,159
a vision

514
00:21:12,159 --> 00:21:14,640
for you

515
00:21:14,960 --> 00:21:18,240
our organizations have deteriorated to

516
00:21:18,240 --> 00:21:20,559
the point that every time

517
00:21:20,559 --> 00:21:23,600
uh a thought leader again walks on stage

518
00:21:23,600 --> 00:21:26,640
and points out that cooperation leads to

519
00:21:26,640 --> 00:21:29,679
better business outcomes uh we hail them

520
00:21:29,679 --> 00:21:32,720
as the innovator of the 21st century

521
00:21:32,720 --> 00:21:36,480
and you may ask well okay what is your

522
00:21:36,480 --> 00:21:39,200
solution to the people problem within

523
00:21:39,200 --> 00:21:41,440
the static analysis engagement and i'm

524
00:21:41,440 --> 00:21:45,760
like dude i'm 26 i bust holes in walls

525
00:21:45,760 --> 00:21:47,120
and write code

526
00:21:47,120 --> 00:21:48,880
but

527
00:21:48,880 --> 00:21:52,320
i do see from our clients that are

528
00:21:52,320 --> 00:21:54,080
performing well in their application

529
00:21:54,080 --> 00:21:56,880
security cl program versus clients that

530
00:21:56,880 --> 00:21:58,960
are not doing well in application

531
00:21:58,960 --> 00:22:03,360
security program and the way they start

532
00:22:03,360 --> 00:22:06,000
the way that the professionals do it is

533
00:22:06,000 --> 00:22:07,919
they start with that asking the right

534
00:22:07,919 --> 00:22:10,640
questions so whether you're part of an

535
00:22:10,640 --> 00:22:12,720
internal security team or you're

536
00:22:12,720 --> 00:22:15,520
stepping on to a fresh static analysis

537
00:22:15,520 --> 00:22:17,679
engagement and this is the first time

538
00:22:17,679 --> 00:22:19,679
that you're working with a client here

539
00:22:19,679 --> 00:22:22,640
are some questions that you need to ask

540
00:22:22,640 --> 00:22:23,600
one

541
00:22:23,600 --> 00:22:26,799
what is this app supposed to do

542
00:22:26,799 --> 00:22:29,679
you'd be surprised on how many people

543
00:22:29,679 --> 00:22:30,960
missed that

544
00:22:30,960 --> 00:22:34,480
very simple question

545
00:22:34,480 --> 00:22:36,559
then you have to figure out

546
00:22:36,559 --> 00:22:38,840
what are the standard use

547
00:22:38,840 --> 00:22:40,640
cases so

548
00:22:40,640 --> 00:22:43,679
this thing was built for a purpose

549
00:22:43,679 --> 00:22:47,200
so what are what's the happy path here

550
00:22:47,200 --> 00:22:48,240
and then

551
00:22:48,240 --> 00:22:50,320
then you can drill down into the

552
00:22:50,320 --> 00:22:53,360
security questions like what should a

553
00:22:53,360 --> 00:22:55,840
user be able to do what should an admin

554
00:22:55,840 --> 00:22:57,360
be able to do

555
00:22:57,360 --> 00:23:00,080
what again from questions from beginning

556
00:23:00,080 --> 00:23:02,240
of the talk what infrastructure is

557
00:23:02,240 --> 00:23:03,679
surrounding it

558
00:23:03,679 --> 00:23:07,280
you can save yourself so much time while

559
00:23:07,280 --> 00:23:08,880
you're fuzzing

560
00:23:08,880 --> 00:23:12,240
if you fig if you ask them hey are you

561
00:23:12,240 --> 00:23:15,200
using sql database no it's a nosql use

562
00:23:15,200 --> 00:23:16,880
dynamodb

563
00:23:16,880 --> 00:23:18,320
wow

564
00:23:18,320 --> 00:23:20,240
so i don't have to wait so i don't have

565
00:23:20,240 --> 00:23:22,960
to waste execution time

566
00:23:22,960 --> 00:23:26,080
pushing sqli payloads in the request

567
00:23:26,080 --> 00:23:29,440
it's not going to do anything

568
00:23:29,440 --> 00:23:32,400
second thing is this obsession that we

569
00:23:32,400 --> 00:23:35,520
have with compliance

570
00:23:35,600 --> 00:23:37,200
there are a lot of security team there

571
00:23:37,200 --> 00:23:38,559
are security teams that are just

572
00:23:38,559 --> 00:23:41,279
starting usually it's just one guy on

573
00:23:41,279 --> 00:23:44,000
board and they're just trying to get all

574
00:23:44,000 --> 00:23:48,240
everyone to comply with all the things

575
00:23:48,240 --> 00:23:51,679
but the focus you focus really needs to

576
00:23:51,679 --> 00:23:53,840
be cooperation

577
00:23:53,840 --> 00:23:56,960
you will get compliance

578
00:23:56,960 --> 00:23:59,679
you will get compliance eventually if

579
00:23:59,679 --> 00:24:01,840
you've got teams communicating with each

580
00:24:01,840 --> 00:24:03,039
other and

581
00:24:03,039 --> 00:24:05,520
and collaborating with each other not

582
00:24:05,520 --> 00:24:08,480
just cooperation but collaboration

583
00:24:08,480 --> 00:24:10,400
if you have that

584
00:24:10,400 --> 00:24:13,039
then the compliance thing is re it

585
00:24:13,039 --> 00:24:15,520
literally is a check box because

586
00:24:15,520 --> 00:24:17,279
you're all it's

587
00:24:17,279 --> 00:24:18,960
in that you don't have to do anything

588
00:24:18,960 --> 00:24:22,320
new your the security team is aware of

589
00:24:22,320 --> 00:24:25,679
the new technology that the development

590
00:24:25,679 --> 00:24:28,320
is spinning up in their enviro in the

591
00:24:28,320 --> 00:24:30,559
environment

592
00:24:30,559 --> 00:24:33,520
and i don't bring static analysis to the

593
00:24:33,520 --> 00:24:34,640
table

594
00:24:34,640 --> 00:24:37,919
to raise another holy war between

595
00:24:37,919 --> 00:24:40,240
security teams and devs

596
00:24:40,240 --> 00:24:41,679
it doesn't matter if you're a

597
00:24:41,679 --> 00:24:44,320
traditional devops

598
00:24:44,320 --> 00:24:46,400
person or you have

599
00:24:46,400 --> 00:24:49,600
dev and ops as separate teams

600
00:24:49,600 --> 00:24:52,320
the point is these are function those

601
00:24:52,320 --> 00:24:54,559
things are functionally equivalent if

602
00:24:54,559 --> 00:24:58,240
you've got collaboration with the group

603
00:24:58,240 --> 00:24:59,200
so

604
00:24:59,200 --> 00:25:02,640
one bring engineers to the table

605
00:25:02,640 --> 00:25:04,559
for the kickoff call

606
00:25:04,559 --> 00:25:06,880
you can you can find some senior

607
00:25:06,880 --> 00:25:09,200
engineer his life is consumed with

608
00:25:09,200 --> 00:25:11,520
meetings anyway he's not actually

609
00:25:11,520 --> 00:25:14,400
writing code so you can bring them in

610
00:25:14,400 --> 00:25:15,840
when we're actually doing the static

611
00:25:15,840 --> 00:25:17,360
analysis or even when we're doing the

612
00:25:17,360 --> 00:25:19,840
pen test to start to explain the use

613
00:25:19,840 --> 00:25:22,960
cases for the product

614
00:25:22,960 --> 00:25:25,200
then

615
00:25:25,520 --> 00:25:26,640
then

616
00:25:26,640 --> 00:25:29,840
you can begin the conversation

617
00:25:29,840 --> 00:25:30,799
and

618
00:25:30,799 --> 00:25:33,520
genuine collaboration between security

619
00:25:33,520 --> 00:25:35,440
dev and ops

620
00:25:35,440 --> 00:25:37,679
and this is what agile was all about

621
00:25:37,679 --> 00:25:40,960
this was what um

622
00:25:40,960 --> 00:25:43,600
devops was supposed to be four anyway

623
00:25:43,600 --> 00:25:45,520
and in the olden days

624
00:25:45,520 --> 00:25:46,400
met

625
00:25:46,400 --> 00:25:50,880
the thought leaders called it synergy

626
00:25:53,279 --> 00:25:56,440
and so

627
00:25:56,559 --> 00:25:58,480
that brings us to the end of the talk

628
00:25:58,480 --> 00:26:00,240
the three things that you need to focus

629
00:26:00,240 --> 00:26:03,200
on to really defibrillate and bring life

630
00:26:03,200 --> 00:26:06,799
back into a step into an apsec program

631
00:26:06,799 --> 00:26:08,880
through static analysis

632
00:26:08,880 --> 00:26:12,640
is one remove waste find tooling

633
00:26:12,640 --> 00:26:15,760
that is designed to give you insight

634
00:26:15,760 --> 00:26:18,000
into your technology stack

635
00:26:18,000 --> 00:26:19,200
then

636
00:26:19,200 --> 00:26:21,679
you bring the engineers to the table and

637
00:26:21,679 --> 00:26:25,360
we do detailed analysis

638
00:26:25,360 --> 00:26:27,679
do a detailed analysis of the source

639
00:26:27,679 --> 00:26:28,559
code

640
00:26:28,559 --> 00:26:30,000
we automate

641
00:26:30,000 --> 00:26:32,720
what we already know how to do and then

642
00:26:32,720 --> 00:26:35,679
we also associate that existing tooling

643
00:26:35,679 --> 00:26:39,520
and processes with the more traditional

644
00:26:39,520 --> 00:26:42,799
parts of security like dynam dynamic

645
00:26:42,799 --> 00:26:46,720
announce das tools as well as pen tests

646
00:26:46,720 --> 00:26:48,159
and then finally

647
00:26:48,159 --> 00:26:51,279
just stay curious and collaborate ask

648
00:26:51,279 --> 00:26:53,360
the right questions

649
00:26:53,360 --> 00:26:54,880
and

650
00:26:54,880 --> 00:26:56,960
you have to understand that this is not

651
00:26:56,960 --> 00:26:58,799
just a journey for

652
00:26:58,799 --> 00:26:59,840
the one

653
00:26:59,840 --> 00:27:03,279
or two or five or 200

654
00:27:03,279 --> 00:27:04,840
security people

655
00:27:04,840 --> 00:27:07,679
and that it's a

656
00:27:07,679 --> 00:27:10,000
collaborative journey for everyone

657
00:27:10,000 --> 00:27:13,600
together in the organization

658
00:27:17,760 --> 00:27:20,159
stack analysis and put a shock to your

659
00:27:20,159 --> 00:27:23,159
system

