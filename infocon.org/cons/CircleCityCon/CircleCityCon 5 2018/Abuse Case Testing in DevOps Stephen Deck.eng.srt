1
00:00:04,009 --> 00:00:14,160
where you go<font color="#CCCCCC"> alright</font><font color="#E5E5E5"> hey everybody</font><font color="#CCCCCC"> my</font>

2
00:00:10,920 --> 00:00:17,490
name's<font color="#CCCCCC"> Stephen deck so how many you guys</font>

3
00:00:14,160 --> 00:00:21,210
work in the<font color="#E5E5E5"> app</font><font color="#CCCCCC"> sack field anybody okay</font>

4
00:00:17,490 --> 00:00:22,528
some<font color="#CCCCCC"> people do at least I</font><font color="#E5E5E5"> think a lot</font><font color="#CCCCCC"> of</font>

5
00:00:21,210 --> 00:00:24,260
times<font color="#E5E5E5"> people think that developers</font>

6
00:00:22,529 --> 00:00:27,180
really aren't<font color="#E5E5E5"> doing</font><font color="#CCCCCC"> their</font><font color="#E5E5E5"> jobs</font><font color="#CCCCCC"> I know</font>

7
00:00:24,260 --> 00:00:30,330
<font color="#CCCCCC">yesterday we had kind of a Throwdown and</font>

8
00:00:27,180 --> 00:00:32,159
one of the talks<font color="#E5E5E5"> about if</font><font color="#CCCCCC"> developers</font>

9
00:00:30,330 --> 00:00:34,800
were like the source of some great

10
00:00:32,159 --> 00:00:37,800
problem in<font color="#CCCCCC"> our industry I don't really</font>

11
00:00:34,800 --> 00:00:39,328
blame the developers I think devs have

12
00:00:37,800 --> 00:00:41,599
problems because<font color="#CCCCCC"> we don't really give</font>

13
00:00:39,329 --> 00:00:44,280
them enough tools<font color="#E5E5E5"> and so that's kind of</font>

14
00:00:41,600 --> 00:00:45,960
what this presentation is about<font color="#E5E5E5"> so I</font>

15
00:00:44,280 --> 00:00:47,430
want<font color="#E5E5E5"> to give everybody some information</font>

16
00:00:45,960 --> 00:00:49,500
on how<font color="#CCCCCC"> to</font><font color="#E5E5E5"> make developers</font><font color="#CCCCCC"> kind of do</font>

17
00:00:47,430 --> 00:00:52,949
your job<font color="#CCCCCC"> for you because I</font><font color="#E5E5E5"> personally am</font>

18
00:00:49,500 --> 00:00:54,420
really<font color="#E5E5E5"> lazy so a little bit of</font>

19
00:00:52,949 --> 00:00:56,640
background<font color="#E5E5E5"> information about myself I'm</font>

20
00:00:54,420 --> 00:00:59,039
<font color="#CCCCCC">a</font><font color="#E5E5E5"> application security consultant so I</font>

21
00:00:56,640 --> 00:01:00,809
test people's apps<font color="#E5E5E5"> sometimes</font><font color="#CCCCCC"> their</font>

22
00:00:59,039 --> 00:01:02,190
before production sometimes<font color="#E5E5E5"> after</font>

23
00:01:00,809 --> 00:01:04,110
sometimes IOT devices

24
00:01:02,190 --> 00:01:07,259
pretty much anything anybody will pay me

25
00:01:04,110 --> 00:01:10,530
to test and I worked with a<font color="#E5E5E5"> lot of</font>

26
00:01:07,260 --> 00:01:13,979
<font color="#CCCCCC">devops shops</font><font color="#E5E5E5"> in that kind of work</font><font color="#CCCCCC"> I also</font>

27
00:01:10,530 --> 00:01:16,979
was a developer for<font color="#CCCCCC"> eight years prior to</font>

28
00:01:13,979 --> 00:01:20,400
<font color="#E5E5E5">this</font><font color="#CCCCCC"> I did</font><font color="#E5E5E5"> security engineering work</font>

29
00:01:16,979 --> 00:01:22,650
Incident Response<font color="#E5E5E5"> and I was also in the</font>

30
00:01:20,400 --> 00:01:26,670
infantry in<font color="#CCCCCC"> the Army for</font><font color="#E5E5E5"> four years so I</font>

31
00:01:22,650 --> 00:01:29,070
kind<font color="#CCCCCC"> of get around</font><font color="#E5E5E5"> but yeah so what I'm</font>

32
00:01:26,670 --> 00:01:31,350
working with<font color="#E5E5E5"> software developers</font><font color="#CCCCCC"> and app</font>

33
00:01:29,070 --> 00:01:32,850
SEC teams<font color="#CCCCCC"> I'm generally</font><font color="#E5E5E5"> coming along</font>

34
00:01:31,350 --> 00:01:34,289
like<font color="#CCCCCC"> at the eleventh hour just like</font>

35
00:01:32,850 --> 00:01:36,419
<font color="#E5E5E5">kicking developers right in the knee</font>

36
00:01:34,290 --> 00:01:37,920
with<font color="#CCCCCC"> a bunch of findings and some like</font>

37
00:01:36,420 --> 00:01:39,390
app it's already in<font color="#CCCCCC"> production then</font>

38
00:01:37,920 --> 00:01:43,409
everybody hates<font color="#E5E5E5"> me and there's like big</font>

39
00:01:39,390 --> 00:01:44,549
fights on<font color="#CCCCCC"> the phone and so the app</font><font color="#E5E5E5"> SEC</font>

40
00:01:43,409 --> 00:01:46,560
team started asking me they're like<font color="#E5E5E5"> hey</font>

41
00:01:44,549 --> 00:01:48,390
how<font color="#CCCCCC"> can we find</font><font color="#E5E5E5"> these vulnerabilities</font>

42
00:01:46,560 --> 00:01:50,340
earlier you know we're<font color="#E5E5E5"> doing</font><font color="#CCCCCC"> dynamic</font>

43
00:01:48,390 --> 00:01:52,229
analysis we're doing static<font color="#E5E5E5"> analysis</font><font color="#CCCCCC"> and</font>

44
00:01:50,340 --> 00:01:54,780
<font color="#E5E5E5">still we get just</font><font color="#CCCCCC"> kneecapped by</font>

45
00:01:52,229 --> 00:01:56,490
penetration testing on the apps<font color="#E5E5E5"> way</font>

46
00:01:54,780 --> 00:01:57,479
after<font color="#CCCCCC"> and the developers don't even</font>

47
00:01:56,490 --> 00:02:00,390
remember<font color="#E5E5E5"> the code anymore</font>

48
00:01:57,479 --> 00:02:01,860
<font color="#E5E5E5">it takes forever to fix things</font><font color="#CCCCCC"> so I</font>

49
00:02:00,390 --> 00:02:03,750
asked him<font color="#CCCCCC"> what</font><font color="#E5E5E5"> guys ever thought about</font>

50
00:02:01,860 --> 00:02:05,310
<font color="#E5E5E5">using like abuse</font><font color="#CCCCCC"> case as a security unit</font>

51
00:02:03,750 --> 00:02:08,429
<font color="#E5E5E5">test</font><font color="#CCCCCC"> and everybody looks at me</font><font color="#E5E5E5"> like I'm</font>

52
00:02:05,310 --> 00:02:10,080
<font color="#E5E5E5">insane because developers are trained</font>

53
00:02:08,429 --> 00:02:13,050
completely differently<font color="#E5E5E5"> from security</font>

54
00:02:10,080 --> 00:02:13,860
professionals<font color="#E5E5E5"> and so being able to like</font>

55
00:02:13,050 --> 00:02:17,970
bridge that

56
00:02:13,860 --> 00:02:20,880
I think is a pretty pretty powerful

57
00:02:17,970 --> 00:02:23,010
thing<font color="#E5E5E5"> and when you look at the sands</font>

58
00:02:20,880 --> 00:02:24,329
<font color="#E5E5E5">like app sack surveys and like hey what</font>

59
00:02:23,010 --> 00:02:26,640
<font color="#CCCCCC">are some things that you should be</font><font color="#E5E5E5"> doing</font>

60
00:02:24,330 --> 00:02:29,490
they always<font color="#E5E5E5"> list abuse cases and</font>

61
00:02:26,640 --> 00:02:30,750
security unit tests on<font color="#E5E5E5"> there but they</font>

62
00:02:29,490 --> 00:02:33,540
don't<font color="#E5E5E5"> actually tell you how</font><font color="#CCCCCC"> to do that</font>

63
00:02:30,750 --> 00:02:35,610
<font color="#E5E5E5">and I couldn't find any good resources</font>

64
00:02:33,540 --> 00:02:37,260
on how to do that<font color="#E5E5E5"> so I wrote a paper at</font>

65
00:02:35,610 --> 00:02:39,570
some of the<font color="#E5E5E5"> sands reading room</font><font color="#CCCCCC"> and I</font>

66
00:02:37,260 --> 00:02:41,190
made this<font color="#CCCCCC"> presentation</font><font color="#E5E5E5"> because when I'm</font>

67
00:02:39,570 --> 00:02:43,290
<font color="#CCCCCC">doing an app test I do a lot of</font><font color="#E5E5E5"> white</font>

68
00:02:41,190 --> 00:02:45,240
box testing<font color="#CCCCCC"> and somebody sends me their</font>

69
00:02:43,290 --> 00:02:48,030
code and you start<font color="#CCCCCC"> looking through</font><font color="#E5E5E5"> their</font>

70
00:02:45,240 --> 00:02:49,950
security<font color="#E5E5E5"> unit</font><font color="#CCCCCC"> tests they're like oh man</font>

71
00:02:48,030 --> 00:02:52,650
this is gonna<font color="#E5E5E5"> be a terrible</font><font color="#CCCCCC"> day for me</font>

72
00:02:49,950 --> 00:02:55,530
because<font color="#E5E5E5"> when you look through their unit</font>

73
00:02:52,650 --> 00:02:58,740
<font color="#CCCCCC">tests they've already tested about</font><font color="#E5E5E5"> 90%</font>

74
00:02:55,530 --> 00:03:00,360
of what<font color="#E5E5E5"> I'm about to</font><font color="#CCCCCC"> look for so that</font>

75
00:02:58,740 --> 00:03:01,890
way<font color="#E5E5E5"> I never come along and find</font>

76
00:03:00,360 --> 00:03:04,290
<font color="#CCCCCC">something at the</font><font color="#E5E5E5"> 11th hour in those</font>

77
00:03:01,890 --> 00:03:07,769
projects<font color="#E5E5E5"> so</font><font color="#CCCCCC"> I think it's a good way to</font>

78
00:03:04,290 --> 00:03:09,209
to move as an industry<font color="#E5E5E5"> I'm gonna give a</font>

79
00:03:07,770 --> 00:03:11,700
<font color="#E5E5E5">little bit of background about DevOps</font>

80
00:03:09,209 --> 00:03:13,680
<font color="#E5E5E5">today so that everybody at</font><font color="#CCCCCC"> least kind</font><font color="#E5E5E5"> of</font>

81
00:03:11,700 --> 00:03:16,230
understands can kind of grass some of

82
00:03:13,680 --> 00:03:18,180
<font color="#CCCCCC">the problems</font><font color="#E5E5E5"> talk a little bit about the</font>

83
00:03:16,230 --> 00:03:20,459
security controls but I see<font color="#E5E5E5"> app SEC</font>

84
00:03:18,180 --> 00:03:22,590
teams<font color="#E5E5E5"> using now and</font><font color="#CCCCCC"> how well those work</font>

85
00:03:20,459 --> 00:03:25,050
<font color="#E5E5E5">and then go through the</font><font color="#CCCCCC"> process of</font>

86
00:03:22,590 --> 00:03:27,540
taking the developers use<font color="#CCCCCC"> cases using</font>

87
00:03:25,050 --> 00:03:29,850
threat modeling to turn those<font color="#CCCCCC"> into abuse</font>

88
00:03:27,540 --> 00:03:31,799
cases and then finally writing security

89
00:03:29,850 --> 00:03:33,540
unit tests so<font color="#E5E5E5"> that way you can</font>

90
00:03:31,800 --> 00:03:35,340
automatically<font color="#E5E5E5"> test for these do</font>

91
00:03:33,540 --> 00:03:39,230
<font color="#E5E5E5">regression testing</font><font color="#CCCCCC"> they'll talk a little</font>

92
00:03:35,340 --> 00:03:41,760
bit about how I use this in consulting

93
00:03:39,230 --> 00:03:43,200
before you do anything<font color="#E5E5E5"> with abuse</font><font color="#CCCCCC"> cases</font>

94
00:03:41,760 --> 00:03:45,120
you should<font color="#E5E5E5"> probably at least do these</font>

95
00:03:43,200 --> 00:03:49,440
four<font color="#E5E5E5"> things or you're gonna</font><font color="#CCCCCC"> have a bad</font>

96
00:03:45,120 --> 00:03:51,060
<font color="#CCCCCC">time so security</font><font color="#E5E5E5"> champions are really</font>

97
00:03:49,440 --> 00:03:53,880
important if you don't<font color="#E5E5E5"> have security</font>

98
00:03:51,060 --> 00:03:55,530
<font color="#E5E5E5">champions they're kind of</font><font color="#CCCCCC"> your they're</font>

99
00:03:53,880 --> 00:03:57,120
your eyes and ears<font color="#E5E5E5"> on those developer</font>

100
00:03:55,530 --> 00:03:58,830
teams so these are<font color="#E5E5E5"> software</font><font color="#CCCCCC"> developers</font>

101
00:03:57,120 --> 00:04:02,970
that<font color="#CCCCCC"> have been gotten</font><font color="#E5E5E5"> a little bit of</font>

102
00:03:58,830 --> 00:04:04,590
specific training<font color="#CCCCCC"> on security and they</font>

103
00:04:02,970 --> 00:04:06,300
can kind<font color="#CCCCCC"> of</font><font color="#E5E5E5"> help out everybody else and</font>

104
00:04:04,590 --> 00:04:07,850
<font color="#E5E5E5">at least identify problems and find</font>

105
00:04:06,300 --> 00:04:09,720
things that<font color="#E5E5E5"> need to be raised up</font>

106
00:04:07,850 --> 00:04:11,190
developer<font color="#E5E5E5"> training if you haven't</font>

107
00:04:09,720 --> 00:04:13,380
trained your developers code securely

108
00:04:11,190 --> 00:04:15,780
<font color="#E5E5E5">assume they have no idea how to do</font>

109
00:04:13,380 --> 00:04:18,899
anything security related so<font color="#E5E5E5"> that should</font>

110
00:04:15,780 --> 00:04:21,510
<font color="#E5E5E5">be your first stop</font><font color="#CCCCCC"> and then use cases</font>

111
00:04:18,899 --> 00:04:23,580
<font color="#E5E5E5">this is pretty common I don't think I've</font>

112
00:04:21,510 --> 00:04:27,590
<font color="#E5E5E5">ever seen a dev off shop that doesn't</font>

113
00:04:23,580 --> 00:04:29,780
<font color="#CCCCCC">use use cases</font><font color="#E5E5E5"> and then unit tests</font>

114
00:04:27,590 --> 00:04:31,969
that's most everybody<font color="#E5E5E5"> I think</font><font color="#CCCCCC"> if you're</font>

115
00:04:29,780 --> 00:04:34,099
doing<font color="#CCCCCC"> devops you don't have some unit</font>

116
00:04:31,970 --> 00:04:38,980
tests<font color="#CCCCCC"> you should probably question the</font>

117
00:04:34,100 --> 00:04:41,630
way you're developing<font color="#CCCCCC"> software so DevOps</font>

118
00:04:38,980 --> 00:04:43,970
<font color="#E5E5E5">DevOps is a software development</font>

119
00:04:41,630 --> 00:04:45,800
methodology<font color="#E5E5E5"> some previous development</font>

120
00:04:43,970 --> 00:04:47,660
methodologies were like waterfall and

121
00:04:45,800 --> 00:04:50,690
waterfall was characterized by like

122
00:04:47,660 --> 00:04:53,000
really long deployment cycles<font color="#E5E5E5"> so it</font>

123
00:04:50,690 --> 00:04:55,070
might<font color="#E5E5E5"> be</font><font color="#CCCCCC"> like a year</font><font color="#E5E5E5"> from the time</font><font color="#CCCCCC"> that</font>

124
00:04:53,000 --> 00:04:56,210
you<font color="#CCCCCC"> conceived of a project to</font><font color="#E5E5E5"> the time</font>

125
00:04:55,070 --> 00:04:59,990
you<font color="#CCCCCC"> actually</font><font color="#E5E5E5"> have something to deliver</font>

126
00:04:56,210 --> 00:05:02,090
which was not so bad when you<font color="#E5E5E5"> have to</font>

127
00:04:59,990 --> 00:05:04,610
stick security gates<font color="#E5E5E5"> into that process</font>

128
00:05:02,090 --> 00:05:06,200
<font color="#E5E5E5">but the speed to market is just terrible</font>

129
00:05:04,610 --> 00:05:09,050
right so so if you finish<font color="#CCCCCC"> your</font>

130
00:05:06,200 --> 00:05:11,900
requirements gathering phase at a month

131
00:05:09,050 --> 00:05:14,270
in it could conceivably<font color="#CCCCCC"> be 23 months</font>

132
00:05:11,900 --> 00:05:17,419
before a new idea actually<font color="#E5E5E5"> hits a</font>

133
00:05:14,270 --> 00:05:19,370
production system<font color="#CCCCCC"> also with waterfall a</font>

134
00:05:17,419 --> 00:05:22,010
lot of projects<font color="#E5E5E5"> just were abject</font>

135
00:05:19,370 --> 00:05:23,600
failures<font color="#E5E5E5"> because you spend years and</font>

136
00:05:22,010 --> 00:05:26,539
years developing this and if you<font color="#E5E5E5"> don't</font>

137
00:05:23,600 --> 00:05:29,030
have a perfect<font color="#CCCCCC"> plan</font><font color="#E5E5E5"> and then do not</font>

138
00:05:26,540 --> 00:05:32,150
deviate<font color="#CCCCCC"> from it then</font><font color="#E5E5E5"> things are gonna go</font>

139
00:05:29,030 --> 00:05:34,250
awry<font color="#E5E5E5"> really quickly with waterfall so</font>

140
00:05:32,150 --> 00:05:36,440
trying to get<font color="#E5E5E5"> our speed</font><font color="#CCCCCC"> to mark it up</font><font color="#E5E5E5"> we</font>

141
00:05:34,250 --> 00:05:40,070
moved over to agile so agile you moved

142
00:05:36,440 --> 00:05:42,350
<font color="#E5E5E5">from like</font><font color="#CCCCCC"> year-long</font><font color="#E5E5E5"> to like</font><font color="#CCCCCC"> two to</font><font color="#E5E5E5"> six</font>

143
00:05:40,070 --> 00:05:46,610
<font color="#CCCCCC">week Sprint's</font><font color="#E5E5E5"> depending on the company</font>

144
00:05:42,350 --> 00:05:48,500
and and agile was good for speed to

145
00:05:46,610 --> 00:05:50,300
market<font color="#CCCCCC"> but I feel</font><font color="#E5E5E5"> like people kind of</font>

146
00:05:48,500 --> 00:05:52,610
stripped it<font color="#CCCCCC"> down to bare bones</font><font color="#E5E5E5"> I know I</font>

147
00:05:50,300 --> 00:05:55,940
used to<font color="#E5E5E5"> work on a software project that</font>

148
00:05:52,610 --> 00:05:57,680
was agile and<font color="#E5E5E5"> and they got rid</font><font color="#CCCCCC"> of all</font>

149
00:05:55,940 --> 00:05:59,300
<font color="#E5E5E5">the scrum meetings because they thought</font>

150
00:05:57,680 --> 00:06:00,590
they were a waste of time<font color="#E5E5E5"> and they told</font>

151
00:05:59,300 --> 00:06:02,389
<font color="#E5E5E5">us we couldn't talk</font><font color="#CCCCCC"> to the customers</font>

152
00:06:00,590 --> 00:06:04,520
<font color="#E5E5E5">because</font><font color="#CCCCCC"> that was not</font><font color="#E5E5E5"> the way we wanted</font>

153
00:06:02,389 --> 00:06:06,289
<font color="#E5E5E5">to do business and so it just</font><font color="#CCCCCC"> devolved</font>

154
00:06:04,520 --> 00:06:08,539
into like five<font color="#CCCCCC"> of us just throwing code</font>

155
00:06:06,289 --> 00:06:11,630
on a server as fast as we could<font color="#CCCCCC"> so it</font>

156
00:06:08,539 --> 00:06:15,050
was a<font color="#E5E5E5"> it got pretty bad and I'm a little</font>

157
00:06:11,630 --> 00:06:18,020
<font color="#CCCCCC">more hopeful on DevOps I haven't seen</font>

158
00:06:15,050 --> 00:06:20,080
that happen quite<font color="#E5E5E5"> as often</font><font color="#CCCCCC"> mainly</font>

159
00:06:18,020 --> 00:06:24,049
<font color="#E5E5E5">because the focus on automation with it</font>

160
00:06:20,080 --> 00:06:26,270
so<font color="#E5E5E5"> I've domestic about DevOps I think it</font>

161
00:06:24,050 --> 00:06:28,100
can do a<font color="#E5E5E5"> lot both for the business and</font>

162
00:06:26,270 --> 00:06:32,630
<font color="#E5E5E5">for</font><font color="#CCCCCC"> security so you kind of have to</font>

163
00:06:28,100 --> 00:06:34,520
approach<font color="#E5E5E5"> it from that</font><font color="#CCCCCC"> way and so DevOps</font>

164
00:06:32,630 --> 00:06:36,229
<font color="#E5E5E5">instead of being like</font><font color="#CCCCCC"> that</font><font color="#E5E5E5"> two to six</font>

165
00:06:34,520 --> 00:06:37,789
week deployment cycle<font color="#E5E5E5"> you're looking at</font>

166
00:06:36,229 --> 00:06:40,099
like trying to<font color="#E5E5E5"> do ten deployments in a</font>

167
00:06:37,789 --> 00:06:41,360
day which is<font color="#CCCCCC"> kind</font><font color="#E5E5E5"> of unreal so a lot of</font>

168
00:06:40,099 --> 00:06:44,930
processes don't<font color="#E5E5E5"> scale</font>

169
00:06:41,360 --> 00:06:47,180
very well when you<font color="#E5E5E5"> try to do that so how</font>

170
00:06:44,930 --> 00:06:48,830
do you get<font color="#E5E5E5"> from like these really long</font>

171
00:06:47,180 --> 00:06:51,110
deployments down to super small

172
00:06:48,830 --> 00:06:53,270
deployments<font color="#CCCCCC"> you kind of have to</font><font color="#E5E5E5"> get on</font>

173
00:06:51,110 --> 00:06:55,490
<font color="#E5E5E5">board</font><font color="#CCCCCC"> with the</font><font color="#E5E5E5"> three ways so you have to</font>

174
00:06:53,270 --> 00:06:58,520
understand and<font color="#E5E5E5"> optimize the flow of work</font>

175
00:06:55,490 --> 00:07:00,560
<font color="#E5E5E5">so you have to understand how all your</font>

176
00:06:58,520 --> 00:07:03,169
requirements<font color="#CCCCCC"> come in everything that</font>

177
00:07:00,560 --> 00:07:05,659
<font color="#E5E5E5">happens</font><font color="#CCCCCC"> along the</font><font color="#E5E5E5"> way</font><font color="#CCCCCC"> so</font><font color="#E5E5E5"> software is</font>

178
00:07:03,169 --> 00:07:07,340
delivered to<font color="#E5E5E5"> the customer</font><font color="#CCCCCC"> and</font><font color="#E5E5E5"> then along</font>

179
00:07:05,659 --> 00:07:10,490
that path you're gonna have bottlenecks

180
00:07:07,340 --> 00:07:12,469
<font color="#E5E5E5">and work you'll see building up at the</font>

181
00:07:10,490 --> 00:07:14,479
bottlenecks<font color="#CCCCCC"> so that's where you apply</font>

182
00:07:12,469 --> 00:07:17,000
your<font color="#E5E5E5"> optimization is that those</font>

183
00:07:14,479 --> 00:07:20,840
<font color="#CCCCCC">bottlenecks to</font><font color="#E5E5E5"> open it up and let the</font>

184
00:07:17,000 --> 00:07:23,599
work flow freely<font color="#E5E5E5"> so optimization is</font>

185
00:07:20,840 --> 00:07:26,299
often going<font color="#E5E5E5"> to be automation in in</font>

186
00:07:23,599 --> 00:07:27,979
DevOps<font color="#E5E5E5"> and and that's one of the coolest</font>

187
00:07:26,300 --> 00:07:29,659
things because people<font color="#CCCCCC"> are terrible</font><font color="#E5E5E5"> at</font>

188
00:07:27,979 --> 00:07:31,909
<font color="#E5E5E5">doing the same thing over and over again</font>

189
00:07:29,659 --> 00:07:33,620
<font color="#E5E5E5">and I myself if I have to do something</font>

190
00:07:31,909 --> 00:07:35,419
<font color="#CCCCCC">more than like once I'm probably gonna</font>

191
00:07:33,620 --> 00:07:39,500
try to write a<font color="#E5E5E5"> script</font><font color="#CCCCCC"> just for my own</font>

192
00:07:35,419 --> 00:07:41,900
<font color="#E5E5E5">sanity</font><font color="#CCCCCC"> so once you've done that</font><font color="#E5E5E5"> the next</font>

193
00:07:39,500 --> 00:07:44,360
<font color="#CCCCCC">thing</font><font color="#E5E5E5"> is feedback so the second way is</font>

194
00:07:41,900 --> 00:07:47,989
when one team<font color="#CCCCCC"> learns something</font><font color="#E5E5E5"> the whole</font>

195
00:07:44,360 --> 00:07:50,029
organization should<font color="#E5E5E5"> learn that so</font>

196
00:07:47,990 --> 00:07:51,830
whether it worked well or didn't work

197
00:07:50,029 --> 00:07:54,469
<font color="#CCCCCC">you need to make sure</font><font color="#E5E5E5"> that is fed back</font>

198
00:07:51,830 --> 00:07:56,210
into<font color="#E5E5E5"> all the teams so</font><font color="#CCCCCC"> that they can all</font>

199
00:07:54,469 --> 00:07:58,490
benefit<font color="#CCCCCC"> from</font><font color="#E5E5E5"> that knowledge</font><font color="#CCCCCC"> you don't</font>

200
00:07:56,210 --> 00:08:00,680
have these like little<font color="#E5E5E5"> tribal silos off</font>

201
00:07:58,490 --> 00:08:02,000
somewhere then the final one<font color="#CCCCCC"> is</font>

202
00:08:00,680 --> 00:08:06,289
<font color="#E5E5E5">continuous improvement</font><font color="#CCCCCC"> through</font>

203
00:08:02,000 --> 00:08:08,479
experiments for this you're encouraged

204
00:08:06,289 --> 00:08:11,150
<font color="#CCCCCC">to take risks in DevOps</font>

205
00:08:08,479 --> 00:08:13,699
<font color="#E5E5E5">and it's you have such small deployment</font>

206
00:08:11,150 --> 00:08:15,739
cycles<font color="#E5E5E5"> it's easy to figure</font><font color="#CCCCCC"> out what's</font>

207
00:08:13,699 --> 00:08:17,089
going<font color="#CCCCCC"> to work and what's</font><font color="#E5E5E5"> not right if</font>

208
00:08:15,740 --> 00:08:19,279
you do something<font color="#CCCCCC"> if you do</font><font color="#E5E5E5"> ten</font>

209
00:08:17,089 --> 00:08:21,080
deployments a day<font color="#E5E5E5"> and you try something</font>

210
00:08:19,279 --> 00:08:22,909
out for five days<font color="#CCCCCC"> you have</font><font color="#E5E5E5"> 50</font>

211
00:08:21,080 --> 00:08:25,039
deployments worth of<font color="#E5E5E5"> experience on that</font>

212
00:08:22,909 --> 00:08:26,990
<font color="#E5E5E5">to see if it helped as opposed to</font>

213
00:08:25,039 --> 00:08:31,219
waterfall which would take you 50 years

214
00:08:26,990 --> 00:08:32,899
<font color="#E5E5E5">to accomplish the same thing so with</font>

215
00:08:31,219 --> 00:08:35,870
continuous improvement one of the things

216
00:08:32,899 --> 00:08:37,370
I liked was Netflix with chaos monkey<font color="#E5E5E5"> so</font>

217
00:08:35,870 --> 00:08:39,860
they wanted<font color="#CCCCCC"> to improve system</font>

218
00:08:37,370 --> 00:08:42,890
availability<font color="#E5E5E5"> by turning off systems and</font>

219
00:08:39,860 --> 00:08:44,839
by killing<font color="#E5E5E5"> processes which i think is</font>

220
00:08:42,890 --> 00:08:46,430
awesome because it<font color="#CCCCCC"> actually worked</font><font color="#E5E5E5"> so</font>

221
00:08:44,839 --> 00:08:49,550
<font color="#E5E5E5">that was a really cool</font><font color="#CCCCCC"> idea that's</font>

222
00:08:46,430 --> 00:08:51,079
thinking outside<font color="#E5E5E5"> the box so that's kind</font>

223
00:08:49,550 --> 00:08:53,510
<font color="#CCCCCC">of where you need</font><font color="#E5E5E5"> to</font><font color="#CCCCCC"> have your mindset</font>

224
00:08:51,079 --> 00:08:55,219
is<font color="#E5E5E5"> I'm</font><font color="#CCCCCC"> gonna</font><font color="#E5E5E5"> try something</font><font color="#CCCCCC"> new we're</font>

225
00:08:53,510 --> 00:08:57,560
gonna see if we<font color="#E5E5E5"> can use this to</font><font color="#CCCCCC"> help</font>

226
00:08:55,220 --> 00:08:59,330
<font color="#E5E5E5">on our projects</font><font color="#CCCCCC"> the</font><font color="#E5E5E5"> DevOps is gonna be</font>

227
00:08:57,560 --> 00:09:01,630
characterized<font color="#E5E5E5"> by these like really small</font>

228
00:08:59,330 --> 00:09:03,980
deployments<font color="#CCCCCC"> a lot of automation</font>

229
00:09:01,630 --> 00:09:06,020
<font color="#CCCCCC">blameless culture so when you have when</font>

230
00:09:03,980 --> 00:09:07,910
<font color="#E5E5E5">you're doing</font><font color="#CCCCCC"> your feedback</font><font color="#E5E5E5"> you're trying</font>

231
00:09:06,020 --> 00:09:10,010
to get the root cause you're<font color="#E5E5E5"> not trying</font>

232
00:09:07,910 --> 00:09:12,350
<font color="#CCCCCC">to just crucify somebody</font><font color="#E5E5E5"> for messing</font>

233
00:09:10,010 --> 00:09:15,050
something up and that's really<font color="#E5E5E5"> important</font>

234
00:09:12,350 --> 00:09:17,150
<font color="#E5E5E5">and trying to empower</font><font color="#CCCCCC"> developers to do</font>

235
00:09:15,050 --> 00:09:18,589
their<font color="#E5E5E5"> work without you right you want</font>

236
00:09:17,150 --> 00:09:20,300
the developers to be<font color="#E5E5E5"> able to control</font>

237
00:09:18,590 --> 00:09:22,040
that<font color="#CCCCCC"> flow of work because if you're that</font>

238
00:09:20,300 --> 00:09:25,069
bottleneck<font color="#CCCCCC"> someone's going to optimize</font>

239
00:09:22,040 --> 00:09:29,569
<font color="#E5E5E5">you right out of the</font><font color="#CCCCCC"> business</font><font color="#E5E5E5"> so don't</font>

240
00:09:25,070 --> 00:09:32,410
be the bottleneck<font color="#E5E5E5"> so what do we do</font><font color="#CCCCCC"> in</font>

241
00:09:29,570 --> 00:09:34,760
app<font color="#E5E5E5"> sack right how what are</font><font color="#CCCCCC"> our tools</font>

242
00:09:32,410 --> 00:09:37,520
<font color="#E5E5E5">first I want to cover in band</font><font color="#CCCCCC"> vs.</font>

243
00:09:34,760 --> 00:09:40,250
<font color="#CCCCCC">out-of-band</font><font color="#E5E5E5"> testing so when you hit</font>

244
00:09:37,520 --> 00:09:41,720
deploy<font color="#E5E5E5"> as a developer and you're pushing</font>

245
00:09:40,250 --> 00:09:43,880
your code to<font color="#CCCCCC"> production it goes through</font>

246
00:09:41,720 --> 00:09:45,590
a series<font color="#CCCCCC"> of steps</font><font color="#E5E5E5"> generally to</font><font color="#CCCCCC"> make sure</font>

247
00:09:43,880 --> 00:09:50,090
that<font color="#E5E5E5"> code doesn't destroy the entire</font>

248
00:09:45,590 --> 00:09:53,810
<font color="#E5E5E5">world</font><font color="#CCCCCC"> so an in band</font><font color="#E5E5E5"> test is something</font>

249
00:09:50,090 --> 00:09:56,720
<font color="#CCCCCC">that can run</font><font color="#E5E5E5"> provide feedback and then</font>

250
00:09:53,810 --> 00:10:00,670
you can either<font color="#E5E5E5"> pass</font><font color="#CCCCCC"> or fail the build</font>

251
00:09:56,720 --> 00:10:02,540
based on the results<font color="#E5E5E5"> of those tests and</font>

252
00:10:00,670 --> 00:10:04,490
<font color="#E5E5E5">out-of-band would be something that</font>

253
00:10:02,540 --> 00:10:06,650
<font color="#CCCCCC">doesn't work that way so maybe it takes</font>

254
00:10:04,490 --> 00:10:08,690
too long<font color="#CCCCCC"> you know maybe it takes a day</font>

255
00:10:06,650 --> 00:10:10,459
or a week to run and you're trying to

256
00:10:08,690 --> 00:10:13,160
<font color="#E5E5E5">play</font><font color="#CCCCCC"> ten times a day so you</font><font color="#E5E5E5"> can't really</font>

257
00:10:10,460 --> 00:10:15,230
<font color="#E5E5E5">do that in</font><font color="#CCCCCC"> van or maybe you're getting</font>

258
00:10:13,160 --> 00:10:17,810
<font color="#E5E5E5">like a PDF</font><font color="#CCCCCC"> report</font><font color="#E5E5E5"> and you can't</font>

259
00:10:15,230 --> 00:10:19,400
automatically process that back into

260
00:10:17,810 --> 00:10:23,180
<font color="#CCCCCC">your system</font><font color="#E5E5E5"> to see if that works or not</font>

261
00:10:19,400 --> 00:10:25,340
<font color="#CCCCCC">regardless of how fast</font><font color="#E5E5E5"> it goes so</font><font color="#CCCCCC"> our</font>

262
00:10:23,180 --> 00:10:27,709
three<font color="#E5E5E5"> tools</font><font color="#CCCCCC"> that I see</font><font color="#E5E5E5"> most of time or</font>

263
00:10:25,340 --> 00:10:30,620
static analysis dynamic analysis and

264
00:10:27,710 --> 00:10:33,020
application penetration testing static

265
00:10:30,620 --> 00:10:34,340
<font color="#CCCCCC">analysis looks at compiled apps or</font>

266
00:10:33,020 --> 00:10:37,520
source code<font color="#E5E5E5"> to try to identify</font>

267
00:10:34,340 --> 00:10:41,810
vulnerabilities<font color="#E5E5E5"> and this actually not</font>

268
00:10:37,520 --> 00:10:43,069
too bad<font color="#CCCCCC"> for DevOps</font><font color="#E5E5E5"> it's not also it's</font>

269
00:10:41,810 --> 00:10:45,079
also not<font color="#CCCCCC"> that great at finding</font>

270
00:10:43,070 --> 00:10:46,400
vulnerabilities it has a lot of<font color="#E5E5E5"> false</font>

271
00:10:45,080 --> 00:10:49,760
positives<font color="#CCCCCC"> and there's some</font><font color="#E5E5E5"> things that</font>

272
00:10:46,400 --> 00:10:53,390
<font color="#CCCCCC">it just doesn't</font><font color="#E5E5E5"> find very well like</font>

273
00:10:49,760 --> 00:10:55,250
<font color="#E5E5E5">broken</font><font color="#CCCCCC"> access control type findings but</font>

274
00:10:53,390 --> 00:10:56,720
it<font color="#E5E5E5"> runs pretty quickly</font><font color="#CCCCCC"> a lot</font><font color="#E5E5E5"> of times I</font>

275
00:10:55,250 --> 00:10:58,310
see developers<font color="#E5E5E5"> using it in their</font>

276
00:10:56,720 --> 00:11:00,350
development environment so right as

277
00:10:58,310 --> 00:11:02,810
they're typing their code they<font color="#CCCCCC"> can find</font>

278
00:11:00,350 --> 00:11:05,450
out hey<font color="#E5E5E5"> am i writing a sequel injection</font>

279
00:11:02,810 --> 00:11:07,160
<font color="#E5E5E5">here and it'll beat them over the head</font>

280
00:11:05,450 --> 00:11:08,450
<font color="#E5E5E5">and they can fix it right then while</font>

281
00:11:07,160 --> 00:11:10,980
it's fresh in<font color="#CCCCCC"> their mind</font>

282
00:11:08,450 --> 00:11:13,020
<font color="#E5E5E5">but SAS tools are normally gonna take</font>

283
00:11:10,980 --> 00:11:14,760
like minutes<font color="#CCCCCC"> two hours</font><font color="#E5E5E5"> most</font><font color="#CCCCCC"> the</font><font color="#E5E5E5"> time so</font>

284
00:11:13,020 --> 00:11:18,569
they're pretty<font color="#E5E5E5"> fast and I often see this</font>

285
00:11:14,760 --> 00:11:20,550
as an in<font color="#E5E5E5"> band test dynamic analysis on</font>

286
00:11:18,570 --> 00:11:22,860
the other hand I usually see it take

287
00:11:20,550 --> 00:11:25,530
hours<font color="#CCCCCC"> today</font><font color="#E5E5E5"> so this</font><font color="#CCCCCC"> is sending requests</font>

288
00:11:22,860 --> 00:11:26,700
to a running<font color="#CCCCCC"> system and then looking at</font>

289
00:11:25,530 --> 00:11:31,050
<font color="#E5E5E5">the responses to try to identify</font>

290
00:11:26,700 --> 00:11:33,270
vulnerabilities<font color="#CCCCCC"> a lot of times you can</font>

291
00:11:31,050 --> 00:11:34,949
<font color="#E5E5E5">pare that down a little bit so instead</font>

292
00:11:33,270 --> 00:11:38,010
<font color="#CCCCCC">of hours to</font><font color="#E5E5E5"> days you can get the time</font>

293
00:11:34,950 --> 00:11:40,320
reduced by using<font color="#CCCCCC"> something to</font><font color="#E5E5E5"> seat it so</font>

294
00:11:38,010 --> 00:11:43,050
you'll use like selenium<font color="#CCCCCC"> or you can use</font>

295
00:11:40,320 --> 00:11:45,120
the unit<font color="#E5E5E5"> tests or integration tests that</font>

296
00:11:43,050 --> 00:11:47,430
<font color="#E5E5E5">the developers have written and route</font>

297
00:11:45,120 --> 00:11:49,500
those through your proxy tool like<font color="#CCCCCC"> Zed</font>

298
00:11:47,430 --> 00:11:51,449
attack proxy or verb and then

299
00:11:49,500 --> 00:11:53,310
<font color="#E5E5E5">automatically kick off the scan just on</font>

300
00:11:51,450 --> 00:11:54,900
the parts of code that<font color="#E5E5E5"> have</font><font color="#CCCCCC"> changed</font><font color="#E5E5E5"> so</font>

301
00:11:53,310 --> 00:11:57,180
I've seen people manage<font color="#CCCCCC"> to get it in</font>

302
00:11:54,900 --> 00:11:59,579
band<font color="#E5E5E5"> doing that but it does take a</font>

303
00:11:57,180 --> 00:12:01,349
little bit<font color="#CCCCCC"> of extra work</font><font color="#E5E5E5"> and finally</font>

304
00:11:59,580 --> 00:12:02,160
application penetration testing that's

305
00:12:01,350 --> 00:12:05,040
what I do

306
00:12:02,160 --> 00:12:07,709
it's very<font color="#E5E5E5"> manual work so it's a human</font>

307
00:12:05,040 --> 00:12:08,640
being<font color="#CCCCCC"> testing the software</font><font color="#E5E5E5"> and it takes</font>

308
00:12:07,710 --> 00:12:10,740
a long<font color="#CCCCCC"> time</font>

309
00:12:08,640 --> 00:12:13,530
usually days<font color="#E5E5E5"> two</font><font color="#CCCCCC"> weeks</font><font color="#E5E5E5"> even like a micro</font>

310
00:12:10,740 --> 00:12:14,970
service that has like<font color="#CCCCCC"> 15 API endpoints</font>

311
00:12:13,530 --> 00:12:16,620
is probably gonna take<font color="#CCCCCC"> me like a day</font><font color="#E5E5E5"> to</font>

312
00:12:14,970 --> 00:12:20,130
<font color="#E5E5E5">get through and then I got to go write a</font>

313
00:12:16,620 --> 00:12:23,340
report<font color="#E5E5E5"> and give it</font><font color="#CCCCCC"> to the client so it's</font>

314
00:12:20,130 --> 00:12:25,830
not<font color="#E5E5E5"> typically that fast but it does find</font>

315
00:12:23,340 --> 00:12:28,620
logic vulnerabilities<font color="#E5E5E5"> so both</font><font color="#CCCCCC"> DAST and</font>

316
00:12:25,830 --> 00:12:30,780
SAS have problems saying should user<font color="#E5E5E5"> a</font>

317
00:12:28,620 --> 00:12:32,400
be able<font color="#CCCCCC"> to</font><font color="#E5E5E5"> access user B's record and</font>

318
00:12:30,780 --> 00:12:34,350
being able to<font color="#CCCCCC"> figure</font><font color="#E5E5E5"> that kind of thing</font>

319
00:12:32,400 --> 00:12:36,329
<font color="#E5E5E5">out but that's what application</font>

320
00:12:34,350 --> 00:12:38,160
penetration tester is very good at like

321
00:12:36,330 --> 00:12:39,660
to me I can look<font color="#E5E5E5"> and see hey I'm getting</font>

322
00:12:38,160 --> 00:12:41,310
somebody<font color="#CCCCCC"> else's Social Security number</font>

323
00:12:39,660 --> 00:12:43,800
here<font color="#CCCCCC"> or I'm seeing something</font><font color="#E5E5E5"> I shouldn't</font>

324
00:12:41,310 --> 00:12:47,489
be seeing so that's kind of the

325
00:12:43,800 --> 00:12:51,449
advantage<font color="#E5E5E5"> so how well is that working</font>

326
00:12:47,490 --> 00:12:53,339
<font color="#CCCCCC">not very</font><font color="#E5E5E5"> well</font><font color="#CCCCCC"> I feel</font><font color="#E5E5E5"> like it's it's</font>

327
00:12:51,450 --> 00:12:55,290
pretty sad we're not getting on board

328
00:12:53,339 --> 00:12:57,570
with DevOps<font color="#CCCCCC"> if you've read anything like</font>

329
00:12:55,290 --> 00:12:59,969
<font color="#CCCCCC">the Phoenix project</font><font color="#E5E5E5"> or something</font>

330
00:12:57,570 --> 00:13:01,650
you need<font color="#E5E5E5"> to get on board</font><font color="#CCCCCC"> or</font><font color="#E5E5E5"> people are</font>

331
00:12:59,970 --> 00:13:03,320
<font color="#CCCCCC">just</font><font color="#E5E5E5"> gonna push you off to the side and</font>

332
00:13:01,650 --> 00:13:06,449
then you're not<font color="#E5E5E5"> doing</font><font color="#CCCCCC"> anybody any good</font>

333
00:13:03,320 --> 00:13:08,820
<font color="#E5E5E5">so we have these old busted tools that</font>

334
00:13:06,450 --> 00:13:10,800
we made for<font color="#E5E5E5"> waterfall when we had these</font>

335
00:13:08,820 --> 00:13:11,910
long deployment cycles<font color="#E5E5E5"> and you</font><font color="#CCCCCC"> can tell</font>

336
00:13:10,800 --> 00:13:13,560
<font color="#CCCCCC">somebody hey that's gonna take me two</font>

337
00:13:11,910 --> 00:13:15,540
weeks to<font color="#CCCCCC"> test</font><font color="#E5E5E5"> this thing and they were</font>

338
00:13:13,560 --> 00:13:17,790
like you know<font color="#E5E5E5"> that's</font><font color="#CCCCCC"> okay I</font><font color="#E5E5E5"> can deal</font>

339
00:13:15,540 --> 00:13:19,740
with that<font color="#E5E5E5"> but we're saying hey we're</font>

340
00:13:17,790 --> 00:13:21,900
security<font color="#E5E5E5"> if you want to be secure you</font>

341
00:13:19,740 --> 00:13:24,589
<font color="#E5E5E5">better let us do these things</font>

342
00:13:21,900 --> 00:13:27,779
and let us<font color="#E5E5E5"> inject this into</font><font color="#CCCCCC"> your cycle</font>

343
00:13:24,589 --> 00:13:31,680
<font color="#E5E5E5">so we're really slow most</font><font color="#CCCCCC"> of our stuff</font>

344
00:13:27,779 --> 00:13:34,170
runs on compiled<font color="#E5E5E5"> apps and it's all about</font>

345
00:13:31,680 --> 00:13:36,089
<font color="#E5E5E5">the</font><font color="#CCCCCC"> security team and this</font><font color="#E5E5E5"> is</font><font color="#CCCCCC"> really not</font>

346
00:13:34,170 --> 00:13:37,620
keeping in the<font color="#E5E5E5"> DevOps spirit we're</font>

347
00:13:36,089 --> 00:13:39,900
saying hey<font color="#E5E5E5"> the security team we have</font>

348
00:13:37,620 --> 00:13:42,390
these specialized tools<font color="#E5E5E5"> come on out and</font>

349
00:13:39,900 --> 00:13:44,160
we're gonna<font color="#E5E5E5"> run these tools we own this</font>

350
00:13:42,390 --> 00:13:45,600
process and<font color="#E5E5E5"> that's how you become</font><font color="#CCCCCC"> the</font>

351
00:13:44,160 --> 00:13:48,170
bottleneck<font color="#E5E5E5"> because you can't possibly</font>

352
00:13:45,600 --> 00:13:50,550
hire enough app<font color="#CCCCCC"> set</font><font color="#E5E5E5"> people to do that</font>

353
00:13:48,170 --> 00:13:54,000
<font color="#E5E5E5">iBM has a report that says there's like</font>

354
00:13:50,550 --> 00:13:56,010
a hundred developers per application

355
00:13:54,000 --> 00:13:58,770
<font color="#CCCCCC">security consultant or application</font>

356
00:13:56,010 --> 00:14:01,560
<font color="#CCCCCC">security engineer and I've seen</font><font color="#E5E5E5"> it in</font>

357
00:13:58,770 --> 00:14:05,250
practice be like a thousand developers

358
00:14:01,560 --> 00:14:06,869
to a single app<font color="#E5E5E5"> sack person</font><font color="#CCCCCC"> so if you're</font>

359
00:14:05,250 --> 00:14:08,850
out there<font color="#E5E5E5"> saying hey look just let</font><font color="#CCCCCC"> me</font>

360
00:14:06,870 --> 00:14:11,220
configure<font color="#E5E5E5"> this - scanner on your app</font>

361
00:14:08,850 --> 00:14:13,560
it's not<font color="#CCCCCC"> gonna</font><font color="#E5E5E5"> happen you can't do it</font>

362
00:14:11,220 --> 00:14:17,250
for a thousand developers<font color="#E5E5E5"> perhaps</font><font color="#CCCCCC"> AK</font>

363
00:14:13,560 --> 00:14:19,949
person and in<font color="#E5E5E5"> the</font><font color="#CCCCCC"> certain the</font><font color="#E5E5E5"> 90s</font><font color="#CCCCCC"> I was</font>

364
00:14:17,250 --> 00:14:22,860
<font color="#CCCCCC">a QA engineer and there's a lot of</font>

365
00:14:19,950 --> 00:14:25,050
parallels<font color="#E5E5E5"> between 1990s QA engineering</font>

366
00:14:22,860 --> 00:14:27,330
and<font color="#CCCCCC"> present-day application security</font>

367
00:14:25,050 --> 00:14:30,120
right<font color="#E5E5E5"> I would come in I would get my</font>

368
00:14:27,330 --> 00:14:32,160
build and while I was installing<font color="#E5E5E5"> the</font>

369
00:14:30,120 --> 00:14:34,950
software<font color="#E5E5E5"> maybe</font><font color="#CCCCCC"> you've</font><font color="#E5E5E5"> write up some unit</font>

370
00:14:32,160 --> 00:14:36,689
tests<font color="#CCCCCC"> and use cases and then I would</font>

371
00:14:34,950 --> 00:14:38,850
<font color="#E5E5E5">just sit</font><font color="#CCCCCC"> there and tap tap tap on all</font>

372
00:14:36,690 --> 00:14:41,459
the keyboards and<font color="#E5E5E5"> we were just coming</font>

373
00:14:38,850 --> 00:14:43,290
out<font color="#CCCCCC"> with the idea of automation</font><font color="#E5E5E5"> for that</font>

374
00:14:41,459 --> 00:14:45,920
where I could<font color="#E5E5E5"> record something</font><font color="#CCCCCC"> and then</font>

375
00:14:43,290 --> 00:14:49,980
do<font color="#E5E5E5"> regression testing with</font><font color="#CCCCCC"> it</font>

376
00:14:45,920 --> 00:14:51,300
so that's kind<font color="#E5E5E5"> of what we've done now</font>

377
00:14:49,980 --> 00:14:53,730
<font color="#E5E5E5">with QA</font>

378
00:14:51,300 --> 00:14:55,529
is we've gotten away from<font color="#E5E5E5"> that idea</font><font color="#CCCCCC"> of</font>

379
00:14:53,730 --> 00:14:57,839
somebody tapping<font color="#E5E5E5"> on the keyboard and</font>

380
00:14:55,529 --> 00:14:59,730
<font color="#E5E5E5">we've gone automation</font><font color="#CCCCCC"> a lot of companies</font>

381
00:14:57,839 --> 00:15:01,620
<font color="#E5E5E5">have completely just gotten rid of their</font>

382
00:14:59,730 --> 00:15:03,630
QA departments because<font color="#E5E5E5"> they're using</font>

383
00:15:01,620 --> 00:15:04,100
these use cases<font color="#E5E5E5"> and unit tests to do it</font>

384
00:15:03,630 --> 00:15:06,600
instead

385
00:15:04,100 --> 00:15:09,570
so a use case<font color="#E5E5E5"> is going to test the</font>

386
00:15:06,600 --> 00:15:12,930
software functionality<font color="#CCCCCC"> I see it in most</font>

387
00:15:09,570 --> 00:15:15,420
development<font color="#CCCCCC"> DevOps shops</font><font color="#E5E5E5"> and the</font>

388
00:15:12,930 --> 00:15:18,329
developers are<font color="#E5E5E5"> going to control this so</font>

389
00:15:15,420 --> 00:15:21,900
they're<font color="#E5E5E5"> going to write scripts unit and</font>

390
00:15:18,330 --> 00:15:24,810
integration<font color="#E5E5E5"> tests to actually go</font><font color="#CCCCCC"> through</font>

391
00:15:21,900 --> 00:15:27,480
this<font color="#E5E5E5"> process and automated fashion an</font>

392
00:15:24,810 --> 00:15:29,130
example of like a use case might be<font color="#E5E5E5"> so</font>

393
00:15:27,480 --> 00:15:31,230
there's a user<font color="#E5E5E5"> I should</font><font color="#CCCCCC"> build access</font><font color="#E5E5E5"> my</font>

394
00:15:29,130 --> 00:15:34,470
shopping<font color="#E5E5E5"> cart that has these items that</font>

395
00:15:31,230 --> 00:15:35,340
I want to buy so is there<font color="#E5E5E5"> something that</font>

396
00:15:34,470 --> 00:15:38,400
we<font color="#E5E5E5"> can</font><font color="#CCCCCC"> use as</font>

397
00:15:35,340 --> 00:15:40,800
<font color="#CCCCCC">a</font><font color="#E5E5E5"> application of security people that's</font>

398
00:15:38,400 --> 00:15:43,770
going<font color="#E5E5E5"> to</font><font color="#CCCCCC"> accomplish the exact same goal</font>

399
00:15:40,800 --> 00:15:46,199
and conveniently enough<font color="#E5E5E5"> there are we</font>

400
00:15:43,770 --> 00:15:48,540
have<font color="#E5E5E5"> abuse cases so it's the exact same</font>

401
00:15:46,200 --> 00:15:50,850
<font color="#CCCCCC">idea</font><font color="#E5E5E5"> except now we're flipping it on its</font>

402
00:15:48,540 --> 00:15:54,300
head<font color="#CCCCCC"> and we're testing for</font><font color="#E5E5E5"> testing under</font>

403
00:15:50,850 --> 00:15:58,320
adverse conditions<font color="#CCCCCC"> so what happens when</font>

404
00:15:54,300 --> 00:16:02,250
I send<font color="#CCCCCC"> in send input that is generally</font>

405
00:15:58,320 --> 00:16:04,170
not going<font color="#E5E5E5"> to be expected well the one of</font>

406
00:16:02,250 --> 00:16:06,360
the common arguments against this<font color="#E5E5E5"> kind</font>

407
00:16:04,170 --> 00:16:08,910
of<font color="#E5E5E5"> thing is developers are really bad at</font>

408
00:16:06,360 --> 00:16:13,380
testing their own<font color="#E5E5E5"> software</font><font color="#CCCCCC"> I know I</font>

409
00:16:08,910 --> 00:16:14,939
personally<font color="#CCCCCC"> was terrible at it but that</font>

410
00:16:13,380 --> 00:16:16,610
<font color="#CCCCCC">argument didn't really hold</font><font color="#E5E5E5"> up that was</font>

411
00:16:14,940 --> 00:16:18,630
<font color="#E5E5E5">the same</font><font color="#CCCCCC"> thing</font><font color="#E5E5E5"> that we said about QA</font>

412
00:16:16,610 --> 00:16:20,640
developers can't test their<font color="#CCCCCC"> own code</font>

413
00:16:18,630 --> 00:16:23,220
because they only<font color="#E5E5E5"> know this one path and</font>

414
00:16:20,640 --> 00:16:26,040
they're<font color="#E5E5E5"> not good at deviating from it</font>

415
00:16:23,220 --> 00:16:27,270
and trying<font color="#E5E5E5"> different</font><font color="#CCCCCC"> things but we see</font>

416
00:16:26,040 --> 00:16:29,099
where that<font color="#E5E5E5"> kind</font><font color="#CCCCCC"> of went for QA</font>

417
00:16:27,270 --> 00:16:32,640
<font color="#E5E5E5">you know they just don't</font><font color="#CCCCCC"> exist anymore</font>

418
00:16:29,100 --> 00:16:35,610
sometimes so this is kind of what we're

419
00:16:32,640 --> 00:16:37,020
gonna do is help guide the developers

420
00:16:35,610 --> 00:16:39,000
right we don't<font color="#E5E5E5"> expect them to be</font>

421
00:16:37,020 --> 00:16:41,220
security experts but with threat

422
00:16:39,000 --> 00:16:43,830
modeling<font color="#E5E5E5"> we can kind of give them hints</font>

423
00:16:41,220 --> 00:16:46,500
on where to go<font color="#E5E5E5"> to create these abuse</font>

424
00:16:43,830 --> 00:16:48,930
cases<font color="#CCCCCC"> and then after you've created the</font>

425
00:16:46,500 --> 00:16:51,600
abuse case you just test it the same way

426
00:16:48,930 --> 00:16:53,760
that you<font color="#E5E5E5"> were testing your use cases so</font>

427
00:16:51,600 --> 00:16:56,070
here is an attacker<font color="#CCCCCC"> I should not be</font>

428
00:16:53,760 --> 00:16:59,280
<font color="#E5E5E5">accessing somebody else's shopping cart</font>

429
00:16:56,070 --> 00:17:02,190
so this is your classic<font color="#CCCCCC"> insecure direct</font>

430
00:16:59,280 --> 00:17:03,660
object reference that's<font color="#E5E5E5"> kind of it's my</font>

431
00:17:02,190 --> 00:17:05,580
<font color="#CCCCCC">bread-and-butter</font><font color="#E5E5E5"> when I'm testing apps</font>

432
00:17:03,660 --> 00:17:06,899
because most<font color="#E5E5E5"> the time people haven't</font>

433
00:17:05,579 --> 00:17:11,879
checked for it<font color="#E5E5E5"> because automated tools</font>

434
00:17:06,900 --> 00:17:13,190
are bad at it<font color="#E5E5E5"> so try to keep this</font>

435
00:17:11,880 --> 00:17:16,500
<font color="#E5E5E5">straight I came up with a</font><font color="#CCCCCC"> couple of</font>

436
00:17:13,190 --> 00:17:19,170
<font color="#E5E5E5">phases for this process and this is</font>

437
00:17:16,500 --> 00:17:20,790
<font color="#E5E5E5">strictly for the abuse case part so not</font>

438
00:17:19,170 --> 00:17:22,680
getting<font color="#CCCCCC"> into the rest of software</font>

439
00:17:20,790 --> 00:17:24,450
development methodologies<font color="#E5E5E5"> because you</font>

440
00:17:22,680 --> 00:17:27,480
can<font color="#E5E5E5"> kind of plug this in wherever it</font>

441
00:17:24,450 --> 00:17:29,190
<font color="#E5E5E5">works in your organization</font><font color="#CCCCCC"> so first</font>

442
00:17:27,480 --> 00:17:30,420
we're going<font color="#E5E5E5"> to do threat modeling and</font>

443
00:17:29,190 --> 00:17:32,610
we're going<font color="#E5E5E5"> to use our threat</font><font color="#CCCCCC"> model to</font>

444
00:17:30,420 --> 00:17:35,580
generate<font color="#CCCCCC"> our threats</font><font color="#E5E5E5"> and then we're</font>

445
00:17:32,610 --> 00:17:37,379
going to create abuse cases<font color="#E5E5E5"> the</font>

446
00:17:35,580 --> 00:17:39,629
developers will<font color="#E5E5E5"> then write the code and</font>

447
00:17:37,380 --> 00:17:41,910
the<font color="#CCCCCC"> test</font><font color="#E5E5E5"> for those and then run those</font>

448
00:17:39,630 --> 00:17:44,040
tests<font color="#E5E5E5"> and then finally we're</font><font color="#CCCCCC"> going to as</font>

449
00:17:41,910 --> 00:17:45,810
<font color="#E5E5E5">the app SEC teams we just watch what</font>

450
00:17:44,040 --> 00:17:48,920
they're<font color="#CCCCCC"> doing and then try</font><font color="#E5E5E5"> to help make</font>

451
00:17:45,810 --> 00:17:48,919
things<font color="#E5E5E5"> better in</font><font color="#CCCCCC"> the</font><font color="#E5E5E5"> future</font>

452
00:17:49,080 --> 00:17:52,769
now threat modeling<font color="#E5E5E5"> I'm not gonna go</font>

453
00:17:51,330 --> 00:17:54,480
<font color="#E5E5E5">into a lot</font><font color="#CCCCCC"> of depth</font><font color="#E5E5E5"> because there's</font>

454
00:17:52,769 --> 00:17:56,940
already a<font color="#CCCCCC"> ton of material on throught</font>

455
00:17:54,480 --> 00:18:00,149
modeling<font color="#CCCCCC"> Adams show stacks book is is</font>

456
00:17:56,940 --> 00:18:01,019
really<font color="#E5E5E5"> good I think but the general</font><font color="#CCCCCC"> idea</font>

457
00:18:00,149 --> 00:18:02,908
of threat modeling is you're going<font color="#E5E5E5"> to</font>

458
00:18:01,019 --> 00:18:05,220
<font color="#E5E5E5">create this architecture model which is</font>

459
00:18:02,909 --> 00:18:07,049
great<font color="#E5E5E5"> because now as a security team you</font>

460
00:18:05,220 --> 00:18:08,730
have an<font color="#E5E5E5"> architecture model which is</font>

461
00:18:07,049 --> 00:18:10,619
better than<font color="#E5E5E5"> I</font><font color="#CCCCCC"> can say for a lot of</font>

462
00:18:08,730 --> 00:18:12,600
<font color="#E5E5E5">applications that</font><font color="#CCCCCC"> I worked on in the</font>

463
00:18:10,619 --> 00:18:15,389
<font color="#E5E5E5">past where</font><font color="#CCCCCC"> you have no idea how it</font><font color="#E5E5E5"> works</font>

464
00:18:12,600 --> 00:18:17,488
or how<font color="#E5E5E5"> things go together</font><font color="#CCCCCC"> and</font><font color="#E5E5E5"> then you</font>

465
00:18:15,389 --> 00:18:19,498
take that<font color="#CCCCCC"> architecture model and you</font>

466
00:18:17,489 --> 00:18:22,169
take a template and<font color="#E5E5E5"> slap it</font><font color="#CCCCCC"> on there and</font>

467
00:18:19,499 --> 00:18:25,019
<font color="#E5E5E5">then</font><font color="#CCCCCC"> you get</font><font color="#E5E5E5"> a list of threats</font><font color="#CCCCCC"> and</font>

468
00:18:22,169 --> 00:18:26,909
that's and then you can prioritize<font color="#E5E5E5"> those</font>

469
00:18:25,019 --> 00:18:29,539
threats and<font color="#E5E5E5"> see how they</font><font color="#CCCCCC"> relate to your</font>

470
00:18:26,909 --> 00:18:32,489
<font color="#E5E5E5">abuse cases</font><font color="#CCCCCC"> or</font><font color="#E5E5E5"> to your use cases sorry</font>

471
00:18:29,539 --> 00:18:34,679
<font color="#E5E5E5">the Microsoft modeling tool is the one</font>

472
00:18:32,489 --> 00:18:36,210
that I use all<font color="#CCCCCC"> the time because</font><font color="#E5E5E5"> it's the</font>

473
00:18:34,679 --> 00:18:36,960
only<font color="#CCCCCC"> one that supports</font><font color="#E5E5E5"> templates right</font>

474
00:18:36,210 --> 00:18:40,710
now

475
00:18:36,960 --> 00:18:42,090
<font color="#CCCCCC">Mozilla</font><font color="#E5E5E5"> sea sponge and</font><font color="#CCCCCC"> wasp</font><font color="#E5E5E5"> the right</font>

476
00:18:40,710 --> 00:18:45,239
<font color="#CCCCCC">dragon</font><font color="#E5E5E5"> or coming out and they're</font>

477
00:18:42,090 --> 00:18:46,439
supposed<font color="#CCCCCC"> to</font><font color="#E5E5E5"> be like amazing but threat</font>

478
00:18:45,239 --> 00:18:49,289
dragon is still<font color="#E5E5E5"> like an incubator</font>

479
00:18:46,440 --> 00:18:51,359
<font color="#E5E5E5">project</font><font color="#CCCCCC"> at OWASP so it doesn't support</font>

480
00:18:49,289 --> 00:18:52,710
templates<font color="#CCCCCC"> they're on the roadmap but</font>

481
00:18:51,359 --> 00:18:55,499
<font color="#E5E5E5">they're not there</font><font color="#CCCCCC"> yet so you can't</font>

482
00:18:52,710 --> 00:18:58,919
<font color="#CCCCCC">really can't really use that in an</font>

483
00:18:55,499 --> 00:19:01,200
enterprise just<font color="#E5E5E5"> yet</font><font color="#CCCCCC"> and that templating</font>

484
00:18:58,919 --> 00:19:03,600
<font color="#CCCCCC">process is really important</font><font color="#E5E5E5"> because as a</font>

485
00:19:01,200 --> 00:19:07,499
security<font color="#E5E5E5"> team this is</font><font color="#CCCCCC"> your only</font><font color="#E5E5E5"> touch</font>

486
00:19:03,600 --> 00:19:10,109
point<font color="#E5E5E5"> until way later</font><font color="#CCCCCC"> on in this process</font>

487
00:19:07,499 --> 00:19:12,210
<font color="#CCCCCC">so that's why you definitely need to</font>

488
00:19:10,109 --> 00:19:13,889
<font color="#CCCCCC">have</font><font color="#E5E5E5"> those templates and the Microsoft</font>

489
00:19:12,210 --> 00:19:16,049
<font color="#E5E5E5">threat modeling tool is obviously</font>

490
00:19:13,889 --> 00:19:17,580
<font color="#E5E5E5">heavily Microsoft centric oh it's free</font>

491
00:19:16,049 --> 00:19:21,809
by the way<font color="#CCCCCC"> so you have</font><font color="#E5E5E5"> to like buy</font><font color="#CCCCCC"> it or</font>

492
00:19:17,580 --> 00:19:24,269
anything<font color="#E5E5E5"> no</font><font color="#CCCCCC"> but you will</font><font color="#E5E5E5"> have to go in</font>

493
00:19:21,809 --> 00:19:26,009
and<font color="#E5E5E5"> modify third stock templates to</font>

494
00:19:24,269 --> 00:19:27,989
actually get threats that<font color="#E5E5E5"> are</font><font color="#CCCCCC"> useful or</font>

495
00:19:26,009 --> 00:19:30,269
your your developers will probably be

496
00:19:27,989 --> 00:19:35,549
like this is<font color="#E5E5E5"> stupid</font><font color="#CCCCCC"> and and get rid of</font>

497
00:19:30,269 --> 00:19:37,950
it not use it so the process of creating

498
00:19:35,549 --> 00:19:41,220
abuse cases<font color="#CCCCCC"> all you're gonna do is take</font>

499
00:19:37,950 --> 00:19:44,129
<font color="#CCCCCC">the existing developer use cases</font><font color="#E5E5E5"> and</font>

500
00:19:41,220 --> 00:19:47,609
then combine those with the threats that

501
00:19:44,129 --> 00:19:49,709
<font color="#CCCCCC">come</font><font color="#E5E5E5"> in from</font><font color="#CCCCCC"> your threat</font><font color="#E5E5E5"> model</font><font color="#CCCCCC"> so our</font>

502
00:19:47,609 --> 00:19:51,720
previous use case was as a user I should

503
00:19:49,710 --> 00:19:53,940
be able<font color="#E5E5E5"> to access my shopping cart well</font>

504
00:19:51,720 --> 00:19:55,649
the threat would be attackers<font color="#E5E5E5"> may try to</font>

505
00:19:53,940 --> 00:19:58,049
directly access and<font color="#E5E5E5"> other users</font>

506
00:19:55,649 --> 00:20:00,359
<font color="#CCCCCC">information</font><font color="#E5E5E5"> so the developer asked to</font>

507
00:19:58,049 --> 00:20:02,940
think<font color="#CCCCCC"> as</font><font color="#E5E5E5"> they're writing this down</font><font color="#CCCCCC"> maybe</font>

508
00:20:00,359 --> 00:20:06,990
making<font color="#E5E5E5"> these stories they say</font>

509
00:20:02,940 --> 00:20:10,500
<font color="#E5E5E5">all right how do these threats apply to</font>

510
00:20:06,990 --> 00:20:12,270
my current use case<font color="#E5E5E5"> and</font><font color="#CCCCCC"> so from this we</font>

511
00:20:10,500 --> 00:20:13,860
might come<font color="#CCCCCC"> up with</font><font color="#E5E5E5"> as an attacker I</font>

512
00:20:12,270 --> 00:20:16,560
should not be<font color="#CCCCCC"> able to access another</font>

513
00:20:13,860 --> 00:20:20,639
<font color="#E5E5E5">users</font><font color="#CCCCCC"> car and you</font><font color="#E5E5E5"> can have a whole host</font>

514
00:20:16,560 --> 00:20:22,740
of other threats<font color="#E5E5E5"> or other abuse cases</font>

515
00:20:20,640 --> 00:20:24,960
<font color="#E5E5E5">you might get from the same threat like</font>

516
00:20:22,740 --> 00:20:27,510
as an attacker<font color="#CCCCCC"> I</font><font color="#E5E5E5"> should not be</font><font color="#CCCCCC"> able to</font>

517
00:20:24,960 --> 00:20:28,710
<font color="#E5E5E5">add an item to another users</font><font color="#CCCCCC"> cart</font><font color="#E5E5E5"> as an</font>

518
00:20:27,510 --> 00:20:33,379
attacker I should not be<font color="#CCCCCC"> able to</font><font color="#E5E5E5"> check</font>

519
00:20:28,710 --> 00:20:33,380
out<font color="#E5E5E5"> another</font><font color="#CCCCCC"> users cart</font><font color="#E5E5E5"> and and so on</font>

520
00:20:34,370 --> 00:20:39,840
another<font color="#CCCCCC"> example this</font><font color="#E5E5E5"> is another one that</font>

521
00:20:37,020 --> 00:20:42,410
<font color="#E5E5E5">I see all the time that scanners and SAS</font>

522
00:20:39,840 --> 00:20:45,990
tools are terrible at is identifying

523
00:20:42,410 --> 00:20:48,390
unsecured api's so you have a use case

524
00:20:45,990 --> 00:20:50,130
<font color="#E5E5E5">here</font><font color="#CCCCCC"> hey we have to</font><font color="#E5E5E5"> have this logging</font>

525
00:20:48,390 --> 00:20:51,810
API that's available<font color="#E5E5E5"> to our</font>

526
00:20:50,130 --> 00:20:53,430
administrators<font color="#E5E5E5"> so it should be</font>

527
00:20:51,810 --> 00:20:55,919
authenticated<font color="#CCCCCC"> and</font><font color="#E5E5E5"> like IP address</font>

528
00:20:53,430 --> 00:21:00,390
limited well the threat is attacker may

529
00:20:55,920 --> 00:21:01,890
try to<font color="#E5E5E5"> directly access that and so your</font>

530
00:21:00,390 --> 00:21:03,750
abuse<font color="#CCCCCC"> cases just be as an attacker</font>

531
00:21:01,890 --> 00:21:07,170
should not be<font color="#E5E5E5"> able to directly access</font>

532
00:21:03,750 --> 00:21:09,510
<font color="#E5E5E5">this logging API like one I was testing</font>

533
00:21:07,170 --> 00:21:11,220
a thick<font color="#E5E5E5"> client app one time and and I</font>

534
00:21:09,510 --> 00:21:14,850
looked at<font color="#E5E5E5"> it</font><font color="#CCCCCC"> actually had an API</font><font color="#E5E5E5"> call</font>

535
00:21:11,220 --> 00:21:16,440
called execute arbitrary sequel and so

536
00:21:14,850 --> 00:21:18,209
it did<font color="#E5E5E5"> exactly what</font><font color="#CCCCCC"> you</font><font color="#E5E5E5"> would think</font><font color="#CCCCCC"> it</font>

537
00:21:16,440 --> 00:21:19,950
did and they obviously had like<font color="#CCCCCC"> XP</font>

538
00:21:18,210 --> 00:21:22,380
command shell enabled on<font color="#CCCCCC"> the database</font>

539
00:21:19,950 --> 00:21:24,660
server<font color="#E5E5E5"> and it ran his domain admin so</font>

540
00:21:22,380 --> 00:21:28,050
that kind of thing was<font color="#CCCCCC"> a like</font><font color="#E5E5E5"> just</font>

541
00:21:24,660 --> 00:21:29,970
<font color="#CCCCCC">god-awful vulnerability that nobody</font><font color="#E5E5E5"> was</font>

542
00:21:28,050 --> 00:21:31,320
<font color="#CCCCCC">gonna find because the a lot</font><font color="#E5E5E5"> of the</font>

543
00:21:29,970 --> 00:21:34,290
<font color="#E5E5E5">tools are</font><font color="#CCCCCC"> just</font><font color="#E5E5E5"> gonna be like oh yeah</font>

544
00:21:31,320 --> 00:21:35,730
this<font color="#E5E5E5"> is this is fine just continue</font><font color="#CCCCCC"> on or</font>

545
00:21:34,290 --> 00:21:38,700
they never found it<font color="#E5E5E5"> because</font><font color="#CCCCCC"> it was</font><font color="#E5E5E5"> never</font>

546
00:21:35,730 --> 00:21:43,190
actually called in the thick line<font color="#E5E5E5"> out so</font>

547
00:21:38,700 --> 00:21:45,630
this<font color="#E5E5E5"> is a good place to</font><font color="#CCCCCC"> look with those</font>

548
00:21:43,190 --> 00:21:49,440
<font color="#E5E5E5">so for the rest of this I'm gonna use</font>

549
00:21:45,630 --> 00:21:51,090
<font color="#E5E5E5">mocha mocha just as a testing</font><font color="#CCCCCC"> framework</font>

550
00:21:49,440 --> 00:21:52,950
for a node<font color="#E5E5E5"> and I started using it</font>

551
00:21:51,090 --> 00:21:54,990
<font color="#CCCCCC">because that was</font><font color="#E5E5E5"> what my customers were</font>

552
00:21:52,950 --> 00:21:56,520
<font color="#CCCCCC">using</font><font color="#E5E5E5"> they were using nodejs</font><font color="#CCCCCC"> and they</font>

553
00:21:54,990 --> 00:21:59,070
were<font color="#E5E5E5"> using mocha to do their unit</font><font color="#CCCCCC"> tests</font>

554
00:21:56,520 --> 00:22:00,870
so that's kind of where I went<font color="#E5E5E5"> by no</font>

555
00:21:59,070 --> 00:22:03,600
<font color="#E5E5E5">means am I</font><font color="#CCCCCC"> saying</font><font color="#E5E5E5"> that everybody needs</font>

556
00:22:00,870 --> 00:22:05,719
<font color="#E5E5E5">to test their software</font><font color="#CCCCCC"> with mocha</font><font color="#E5E5E5"> and</font>

557
00:22:03,600 --> 00:22:08,189
fitting in with like that DevOps

558
00:22:05,720 --> 00:22:10,470
<font color="#E5E5E5">philosophy what we need to be doing is</font>

559
00:22:08,190 --> 00:22:12,390
<font color="#E5E5E5">not throwing extra work on our</font>

560
00:22:10,470 --> 00:22:14,550
developers we need to be<font color="#E5E5E5"> living off the</font>

561
00:22:12,390 --> 00:22:16,920
land using what the developers are

562
00:22:14,550 --> 00:22:19,200
already<font color="#E5E5E5"> using so if they're</font><font color="#CCCCCC"> using</font>

563
00:22:16,920 --> 00:22:21,570
<font color="#E5E5E5">they're using j-unit whatever it is</font>

564
00:22:19,200 --> 00:22:23,940
<font color="#E5E5E5">that's what you're gonna use</font><font color="#CCCCCC"> and this</font><font color="#E5E5E5"> is</font>

565
00:22:21,570 --> 00:22:25,590
<font color="#E5E5E5">important</font><font color="#CCCCCC"> for acceptance and them not</font>

566
00:22:23,940 --> 00:22:26,600
having<font color="#CCCCCC"> to learn a whole other tool that</font>

567
00:22:25,590 --> 00:22:29,760
you're chucking at them

568
00:22:26,600 --> 00:22:32,429
and later on when<font color="#CCCCCC"> we start taking</font><font color="#E5E5E5"> their</font>

569
00:22:29,760 --> 00:22:36,600
unit<font color="#E5E5E5"> tests and twisting them to become</font>

570
00:22:32,430 --> 00:22:38,100
our security unit tests you really don't

571
00:22:36,600 --> 00:22:39,540
want to<font color="#E5E5E5"> have to make people write unit</font>

572
00:22:38,100 --> 00:22:42,139
tests in<font color="#E5E5E5"> a totally different language</font>

573
00:22:39,540 --> 00:22:49,040
<font color="#E5E5E5">than they've already written them so</font>

574
00:22:42,140 --> 00:22:49,040
it'll save you a lot<font color="#CCCCCC"> of trouble so mocha</font>

575
00:22:54,050 --> 00:23:00,690
<font color="#CCCCCC">alright so mocha has a couple of</font><font color="#E5E5E5"> really</font>

576
00:22:56,370 --> 00:23:04,590
cool<font color="#CCCCCC"> things about</font><font color="#E5E5E5"> it you have these this</font>

577
00:23:00,690 --> 00:23:08,130
<font color="#CCCCCC">describe block so the describe block</font>

578
00:23:04,590 --> 00:23:11,699
<font color="#E5E5E5">separates a set of tests that all have</font>

579
00:23:08,130 --> 00:23:13,680
something<font color="#E5E5E5"> kind of in common and it gives</font>

580
00:23:11,700 --> 00:23:17,910
us access<font color="#CCCCCC"> to four really important</font>

581
00:23:13,680 --> 00:23:21,450
methods before<font color="#E5E5E5"> before each after and</font>

582
00:23:17,910 --> 00:23:24,420
<font color="#E5E5E5">after each so what these do is they</font>

583
00:23:21,450 --> 00:23:26,910
<font color="#CCCCCC">allow you to execute so before you</font>

584
00:23:24,420 --> 00:23:28,710
<font color="#E5E5E5">execute a task one time at the beginning</font>

585
00:23:26,910 --> 00:23:30,270
<font color="#E5E5E5">of the describe block and that's really</font>

586
00:23:28,710 --> 00:23:31,890
good if you have<font color="#CCCCCC"> to say create an</font>

587
00:23:30,270 --> 00:23:34,139
account<font color="#E5E5E5"> that you're</font><font color="#CCCCCC"> going to use during</font>

588
00:23:31,890 --> 00:23:35,970
testing<font color="#CCCCCC"> so you</font><font color="#E5E5E5"> can automate that account</font>

589
00:23:34,140 --> 00:23:37,560
creation process<font color="#CCCCCC"> when you run the</font>

590
00:23:35,970 --> 00:23:39,390
<font color="#E5E5E5">describe block it can create that</font>

591
00:23:37,560 --> 00:23:42,030
account<font color="#CCCCCC"> for you so you can use it for</font>

592
00:23:39,390 --> 00:23:45,090
<font color="#E5E5E5">all</font><font color="#CCCCCC"> of those</font><font color="#E5E5E5"> unit or integration tests</font>

593
00:23:42,030 --> 00:23:46,080
then at the end<font color="#E5E5E5"> you have an after module</font>

594
00:23:45,090 --> 00:23:48,689
<font color="#E5E5E5">that can clean that up</font>

595
00:23:46,080 --> 00:23:51,540
delete the account for you<font color="#CCCCCC"> you could</font>

596
00:23:48,690 --> 00:23:54,900
<font color="#CCCCCC">have a before each function in this</font><font color="#E5E5E5"> case</font>

597
00:23:51,540 --> 00:23:57,600
<font color="#E5E5E5">what I'm doing in my</font><font color="#CCCCCC"> before each is</font><font color="#E5E5E5"> I'm</font>

598
00:23:54,900 --> 00:24:01,050
posting to<font color="#CCCCCC"> the user login</font><font color="#E5E5E5"> page of the</font>

599
00:23:57,600 --> 00:24:04,469
OWASP<font color="#E5E5E5"> juice shop application so this is</font>

600
00:24:01,050 --> 00:24:07,110
authenticating my user and then I get

601
00:24:04,470 --> 00:24:09,360
this<font color="#E5E5E5"> authentication token just pulled</font>

602
00:24:07,110 --> 00:24:11,610
out of the JSON from<font color="#E5E5E5"> the response body</font>

603
00:24:09,360 --> 00:24:14,129
and then I can set<font color="#CCCCCC"> whatever I need to</font>

604
00:24:11,610 --> 00:24:16,020
<font color="#E5E5E5">for</font><font color="#CCCCCC"> my future calls in this</font><font color="#E5E5E5"> case I'm</font>

605
00:24:14,130 --> 00:24:18,990
<font color="#CCCCCC">setting the authorization bear header</font>

606
00:24:16,020 --> 00:24:21,389
<font color="#E5E5E5">and the cookie token and a lot of times</font>

607
00:24:18,990 --> 00:24:23,700
these are things<font color="#CCCCCC"> that I see I see</font>

608
00:24:21,390 --> 00:24:25,620
testing tools kind<font color="#E5E5E5"> of fall flat</font><font color="#CCCCCC"> on when</font>

609
00:24:23,700 --> 00:24:27,810
you<font color="#CCCCCC"> start trying to use these weird</font>

610
00:24:25,620 --> 00:24:30,350
headers<font color="#CCCCCC"> and you have all this</font><font color="#E5E5E5"> JavaScript</font>

611
00:24:27,810 --> 00:24:33,330
like building<font color="#CCCCCC"> things behind the</font><font color="#E5E5E5"> scenes</font>

612
00:24:30,350 --> 00:24:35,459
this way you can<font color="#E5E5E5"> automate that task</font><font color="#CCCCCC"> and</font>

613
00:24:33,330 --> 00:24:37,590
<font color="#E5E5E5">your your tool won't fail</font><font color="#CCCCCC"> you because</font>

614
00:24:35,460 --> 00:24:39,900
you have complete control<font color="#CCCCCC"> over what's</font>

615
00:24:37,590 --> 00:24:42,570
happening<font color="#E5E5E5"> another thing I wanted to</font>

616
00:24:39,900 --> 00:24:45,570
<font color="#E5E5E5">point out was</font><font color="#CCCCCC"> timeout so as a as</font><font color="#E5E5E5"> a</font>

617
00:24:42,570 --> 00:24:48,270
consultant<font color="#CCCCCC"> I use</font><font color="#E5E5E5"> these tests to give to</font>

618
00:24:45,570 --> 00:24:50,220
customers and timeout is really

619
00:24:48,270 --> 00:24:52,379
important<font color="#E5E5E5"> when you do that because in my</font>

620
00:24:50,220 --> 00:24:54,360
<font color="#CCCCCC">house I run over Google Fiber so I have</font>

621
00:24:52,380 --> 00:24:55,920
<font color="#CCCCCC">gigabit ethernet go</font><font color="#E5E5E5"> into their testing</font>

622
00:24:54,360 --> 00:24:57,870
sites and the customers<font color="#E5E5E5"> don't always</font>

623
00:24:55,920 --> 00:24:59,400
have that<font color="#E5E5E5"> fastened of a connection so I</font>

624
00:24:57,870 --> 00:25:01,439
had a couple<font color="#CCCCCC"> of</font><font color="#E5E5E5"> instances where I would</font>

625
00:24:59,400 --> 00:25:02,640
give somebody some tests they would run

626
00:25:01,440 --> 00:25:04,170
them<font color="#CCCCCC"> they're</font><font color="#E5E5E5"> like hey we're</font><font color="#CCCCCC"> failing all</font>

627
00:25:02,640 --> 00:25:05,940
these tests<font color="#CCCCCC"> even though we think</font><font color="#E5E5E5"> we fix</font>

628
00:25:04,170 --> 00:25:08,190
these<font color="#E5E5E5"> and you go and look and it's all</font>

629
00:25:05,940 --> 00:25:09,750
<font color="#E5E5E5">because they're timing out</font><font color="#CCCCCC"> so</font><font color="#E5E5E5"> being able</font>

630
00:25:08,190 --> 00:25:13,470
to set that<font color="#E5E5E5"> timeout</font><font color="#CCCCCC"> like in this case</font>

631
00:25:09,750 --> 00:25:14,760
<font color="#E5E5E5">it's</font><font color="#CCCCCC"> 10 seconds</font><font color="#E5E5E5"> and it may not be an</font>

632
00:25:13,470 --> 00:25:16,920
<font color="#E5E5E5">issue if you're doing this like</font>

633
00:25:14,760 --> 00:25:21,840
internally but<font color="#E5E5E5"> for me with customers it</font>

634
00:25:16,920 --> 00:25:26,670
is then you<font color="#CCCCCC"> have your individual tests</font>

635
00:25:21,840 --> 00:25:28,669
so<font color="#E5E5E5"> you designate those with IT and give</font>

636
00:25:26,670 --> 00:25:30,480
the test a name so in this case

637
00:25:28,670 --> 00:25:33,390
administrators<font color="#CCCCCC"> should be able</font><font color="#E5E5E5"> to view</font>

638
00:25:30,480 --> 00:25:34,710
the<font color="#E5E5E5"> email addresses for all</font><font color="#CCCCCC"> the</font><font color="#E5E5E5"> users so</font>

639
00:25:33,390 --> 00:25:39,930
in this case what I'm going<font color="#CCCCCC"> to do is</font>

640
00:25:34,710 --> 00:25:44,070
create an account<font color="#E5E5E5"> and then</font><font color="#CCCCCC"> go check to</font>

641
00:25:39,930 --> 00:25:46,830
<font color="#CCCCCC">see</font><font color="#E5E5E5"> does</font><font color="#CCCCCC"> that account</font><font color="#E5E5E5"> exist so it'll</font>

642
00:25:44,070 --> 00:25:49,320
actually yeah this<font color="#E5E5E5"> is the creation and</font>

643
00:25:46,830 --> 00:25:52,860
then this is me checking<font color="#E5E5E5"> to see is that</font>

644
00:25:49,320 --> 00:25:55,200
account there or can I<font color="#CCCCCC"> get the accounts</font>

645
00:25:52,860 --> 00:25:58,530
and<font color="#E5E5E5"> then is the account there so this is</font>

646
00:25:55,200 --> 00:26:00,720
<font color="#CCCCCC">the</font><font color="#E5E5E5"> expect module so expect is a</font>

647
00:25:58,530 --> 00:26:05,010
function of like a<font color="#E5E5E5"> library called chai</font>

648
00:26:00,720 --> 00:26:07,260
that goes along well with<font color="#E5E5E5"> mocha and so</font>

649
00:26:05,010 --> 00:26:09,620
expect says it allows you use like plain

650
00:26:07,260 --> 00:26:13,050
English to<font color="#CCCCCC"> say this is going</font><font color="#E5E5E5"> to be why</font>

651
00:26:09,620 --> 00:26:15,330
the conditions<font color="#CCCCCC"> that pass this test so in</font>

652
00:26:13,050 --> 00:26:18,360
this case I'm expecting the status code

653
00:26:15,330 --> 00:26:21,710
to be<font color="#E5E5E5"> 200 which is</font><font color="#CCCCCC"> okay</font><font color="#E5E5E5"> and I'm</font>

654
00:26:18,360 --> 00:26:24,990
expecting<font color="#CCCCCC"> that the JSON is going to have</font>

655
00:26:21,710 --> 00:26:27,510
somewhere in<font color="#E5E5E5"> the body the text email and</font>

656
00:26:24,990 --> 00:26:30,960
the test email<font color="#E5E5E5"> that I just</font><font color="#CCCCCC"> submitted for</font>

657
00:26:27,510 --> 00:26:35,570
the account so that's generally<font color="#E5E5E5"> how</font>

658
00:26:30,960 --> 00:26:39,020
mocha is<font color="#CCCCCC"> going to work and again</font><font color="#E5E5E5"> don't</font>

659
00:26:35,570 --> 00:26:42,899
rely solely on mocha<font color="#E5E5E5"> use whatever</font>

660
00:26:39,020 --> 00:26:43,920
<font color="#E5E5E5">developers want to use let's see and</font>

661
00:26:42,900 --> 00:26:47,190
then<font color="#E5E5E5"> the last thing I want to</font>

662
00:26:43,920 --> 00:26:50,940
show you about<font color="#CCCCCC"> moco</font><font color="#E5E5E5"> was the output so</font>

663
00:26:47,190 --> 00:26:53,070
<font color="#CCCCCC">MOCA when you run it it goes through and</font>

664
00:26:50,940 --> 00:26:56,700
runs all these tests as<font color="#E5E5E5"> you can see here</font>

665
00:26:53,070 --> 00:26:58,020
it gives<font color="#CCCCCC"> you like timing</font><font color="#E5E5E5"> information</font><font color="#CCCCCC"> so</font>

666
00:26:56,700 --> 00:26:59,160
this is<font color="#E5E5E5"> saying that this test took a</font>

667
00:26:58,020 --> 00:27:01,889
<font color="#CCCCCC">really long</font><font color="#E5E5E5"> time right</font>

668
00:26:59,160 --> 00:27:04,140
<font color="#E5E5E5">92 milliseconds which is</font><font color="#CCCCCC"> really not that</font>

669
00:27:01,890 --> 00:27:06,210
<font color="#E5E5E5">bad</font><font color="#CCCCCC"> when you compare</font><font color="#E5E5E5"> it</font><font color="#CCCCCC"> to like dynamic</font>

670
00:27:04,140 --> 00:27:07,620
<font color="#E5E5E5">application security testing</font><font color="#CCCCCC"> where</font>

671
00:27:06,210 --> 00:27:10,260
you're gonna<font color="#E5E5E5"> spend two days sending</font>

672
00:27:07,620 --> 00:27:12,540
sending data<font color="#CCCCCC"> to</font><font color="#E5E5E5"> the server you can get</font>

673
00:27:10,260 --> 00:27:15,150
this one specific test done in a couple

674
00:27:12,540 --> 00:27:17,879
<font color="#CCCCCC">of milliseconds</font><font color="#E5E5E5"> so here like</font><font color="#CCCCCC"> I ran</font><font color="#E5E5E5"> nine</font>

675
00:27:15,150 --> 00:27:20,970
tests and they completed<font color="#E5E5E5"> in two seconds</font>

676
00:27:17,880 --> 00:27:22,590
and if you're doing<font color="#E5E5E5"> these are all</font>

677
00:27:20,970 --> 00:27:25,590
integration<font color="#E5E5E5"> tests that run against</font><font color="#CCCCCC"> the</font>

678
00:27:22,590 --> 00:27:27,389
live system and the unit tests<font color="#E5E5E5"> are even</font>

679
00:27:25,590 --> 00:27:29,459
<font color="#E5E5E5">faster</font><font color="#CCCCCC"> right so you can execute</font>

680
00:27:27,390 --> 00:27:31,920
thousands and thousands of unit tests in

681
00:27:29,460 --> 00:27:34,080
<font color="#E5E5E5">a couple of seconds so</font><font color="#CCCCCC"> those are really</font>

682
00:27:31,920 --> 00:27:36,120
good<font color="#E5E5E5"> ways</font><font color="#CCCCCC"> to test your software</font><font color="#E5E5E5"> and</font>

683
00:27:34,080 --> 00:27:40,080
that's<font color="#CCCCCC"> why developers started</font><font color="#E5E5E5"> using them</font>

684
00:27:36,120 --> 00:27:44,010
to do their<font color="#CCCCCC"> testing</font><font color="#E5E5E5"> as you can see here</font>

685
00:27:40,080 --> 00:27:46,860
with our abuse case tests<font color="#E5E5E5"> these are the</font>

686
00:27:44,010 --> 00:27:48,930
<font color="#E5E5E5">failures so everything in red it says is</font>

687
00:27:46,860 --> 00:27:54,149
not good everything with the green check

688
00:27:48,930 --> 00:27:56,610
is good and then these are the<font color="#E5E5E5"> describe</font>

689
00:27:54,150 --> 00:27:58,350
block headers that<font color="#CCCCCC"> I used so you can it</font>

690
00:27:56,610 --> 00:28:00,000
kind of breaks them<font color="#CCCCCC"> down for you</font><font color="#E5E5E5"> and</font>

691
00:27:58,350 --> 00:28:02,250
gives<font color="#E5E5E5"> you a summary of how many tests</font>

692
00:28:00,000 --> 00:28:05,160
passed and failed<font color="#E5E5E5"> and how long it took</font>

693
00:28:02,250 --> 00:28:08,540
to run and then for every failing test

694
00:28:05,160 --> 00:28:11,160
<font color="#E5E5E5">it gives you really nice error messages</font>

695
00:28:08,540 --> 00:28:17,389
<font color="#CCCCCC">such as this that are really easy</font><font color="#E5E5E5"> to</font>

696
00:28:11,160 --> 00:28:19,290
read<font color="#E5E5E5"> so this one it puts the</font><font color="#CCCCCC"> entire JSON</font>

697
00:28:17,390 --> 00:28:22,410
response from the server<font color="#CCCCCC"> in there</font>

698
00:28:19,290 --> 00:28:27,409
<font color="#E5E5E5">because that's what my test was for and</font>

699
00:28:22,410 --> 00:28:27,410
<font color="#CCCCCC">it says</font><font color="#E5E5E5"> I expected this massive string</font>

700
00:28:27,980 --> 00:28:34,020
to not include<font color="#E5E5E5"> this specific email</font>

701
00:28:31,800 --> 00:28:37,110
<font color="#CCCCCC">address so in this case my abuse case</font>

702
00:28:34,020 --> 00:28:39,629
test was are they properly encoding the

703
00:28:37,110 --> 00:28:41,490
output coming<font color="#E5E5E5"> from this JSON response</font><font color="#CCCCCC"> so</font>

704
00:28:39,630 --> 00:28:44,820
I would want that<font color="#E5E5E5"> to be like HTML</font>

705
00:28:41,490 --> 00:28:47,490
encoded or something<font color="#CCCCCC"> and in this case it</font>

706
00:28:44,820 --> 00:28:49,879
was<font color="#E5E5E5"> not so I didn't want it to have</font>

707
00:28:47,490 --> 00:28:53,250
derpy<font color="#E5E5E5"> mcfumbles with script alert one</font>

708
00:28:49,880 --> 00:28:55,200
stuck in<font color="#CCCCCC"> there and it actually</font><font color="#E5E5E5"> did have</font>

709
00:28:53,250 --> 00:28:57,020
it and then it tells<font color="#E5E5E5"> you specifically</font>

710
00:28:55,200 --> 00:28:59,670
where that test was

711
00:28:57,020 --> 00:29:02,430
some other confusing<font color="#CCCCCC"> error messages not</font>

712
00:28:59,670 --> 00:29:04,800
quite so verbose<font color="#E5E5E5"> expected</font><font color="#CCCCCC"> 201</font><font color="#E5E5E5"> to equal</font>

713
00:29:02,430 --> 00:29:06,930
400<font color="#E5E5E5"> right that that makes perfect sense</font>

714
00:29:04,800 --> 00:29:09,899
<font color="#E5E5E5">to everybody</font><font color="#CCCCCC"> but what it's actually</font>

715
00:29:06,930 --> 00:29:13,350
<font color="#CCCCCC">saying is I expected</font><font color="#E5E5E5"> this green value of</font>

716
00:29:09,900 --> 00:29:16,890
400 the actual value<font color="#CCCCCC"> that I observed was</font>

717
00:29:13,350 --> 00:29:20,340
201<font color="#E5E5E5"> so I expected it to fail</font><font color="#CCCCCC"> because</font>

718
00:29:16,890 --> 00:29:26,660
<font color="#CCCCCC">this is an abuse</font><font color="#E5E5E5"> case test security unit</font>

719
00:29:20,340 --> 00:29:29,639
test not a not a actual use case test

720
00:29:26,660 --> 00:29:32,820
all right so that's mocha<font color="#E5E5E5"> so now the</font>

721
00:29:29,640 --> 00:29:35,670
developers finally get around to

722
00:29:32,820 --> 00:29:37,530
<font color="#CCCCCC">actually writing the application they</font>

723
00:29:35,670 --> 00:29:38,550
might write<font color="#CCCCCC"> the test</font><font color="#E5E5E5"> before the code so</font>

724
00:29:37,530 --> 00:29:41,370
that<font color="#E5E5E5"> would be like test-driven</font>

725
00:29:38,550 --> 00:29:43,919
development<font color="#CCCCCC"> test-driven development</font>

726
00:29:41,370 --> 00:29:45,810
you'll write all the tests for<font color="#E5E5E5"> your</font>

727
00:29:43,920 --> 00:29:47,310
application<font color="#E5E5E5"> run them</font><font color="#CCCCCC"> they all fail</font>

728
00:29:45,810 --> 00:29:48,659
because<font color="#E5E5E5"> you never wrote the code</font><font color="#CCCCCC"> write</font>

729
00:29:47,310 --> 00:29:50,879
the code<font color="#E5E5E5"> and then run them again and</font>

730
00:29:48,660 --> 00:29:52,830
then it and<font color="#CCCCCC"> then it should pass every</font>

731
00:29:50,880 --> 00:29:56,940
single<font color="#E5E5E5"> test that you've written and the</font>

732
00:29:52,830 --> 00:30:00,540
<font color="#E5E5E5">developers should have some unit or unit</font>

733
00:29:56,940 --> 00:30:02,100
and integration<font color="#CCCCCC"> tests for you I still</font>

734
00:30:00,540 --> 00:30:04,889
delineate between unit and integration

735
00:30:02,100 --> 00:30:06,840
<font color="#E5E5E5">tests I've noticed some people do not</font>

736
00:30:04,890 --> 00:30:09,000
but I feel<font color="#CCCCCC"> like</font><font color="#E5E5E5"> it's kind of an</font>

737
00:30:06,840 --> 00:30:11,820
important designation sometimes but it

738
00:30:09,000 --> 00:30:13,770
does get a little<font color="#E5E5E5"> wordy so a unit test</font>

739
00:30:11,820 --> 00:30:16,260
doesn't check<font color="#E5E5E5"> a functional requirement</font>

740
00:30:13,770 --> 00:30:18,629
and an integration test does which<font color="#E5E5E5"> is</font>

741
00:30:16,260 --> 00:30:20,760
kind of an awkward<font color="#E5E5E5"> way</font><font color="#CCCCCC"> of saying</font><font color="#E5E5E5"> you</font>

742
00:30:18,630 --> 00:30:22,860
<font color="#E5E5E5">won't see the interactions between two</font>

743
00:30:20,760 --> 00:30:27,540
systems<font color="#E5E5E5"> with unit tests whereas you</font>

744
00:30:22,860 --> 00:30:31,169
would with an<font color="#E5E5E5"> integration test and so</font>

745
00:30:27,540 --> 00:30:32,879
this is one example of yes<font color="#E5E5E5"> this hand</font>

746
00:30:31,170 --> 00:30:35,190
dryer works<font color="#E5E5E5"> just fine you stick your</font>

747
00:30:32,880 --> 00:30:36,960
hand under<font color="#CCCCCC"> it and the air blows out and</font>

748
00:30:35,190 --> 00:30:38,880
it works<font color="#E5E5E5"> great</font><font color="#CCCCCC"> and then you</font><font color="#E5E5E5"> have a</font>

749
00:30:36,960 --> 00:30:41,730
separate unit test of yes I can throw my

750
00:30:38,880 --> 00:30:43,380
paper towel into the trash can<font color="#CCCCCC"> but as</font>

751
00:30:41,730 --> 00:30:45,750
soon as<font color="#E5E5E5"> you stick the two</font><font color="#CCCCCC"> together it's</font>

752
00:30:43,380 --> 00:30:47,700
not<font color="#CCCCCC"> going</font><font color="#E5E5E5"> to work out</font><font color="#CCCCCC"> so well and you</font>

753
00:30:45,750 --> 00:30:49,410
might<font color="#E5E5E5"> have the same</font><font color="#CCCCCC"> problem with so a</font>

754
00:30:47,700 --> 00:30:51,690
lot of<font color="#E5E5E5"> times in unit tests they'll like</font>

755
00:30:49,410 --> 00:30:53,610
stub out databases<font color="#E5E5E5"> well it's really hard</font>

756
00:30:51,690 --> 00:30:55,800
<font color="#CCCCCC">to find sequel injection vulnerabilities</font>

757
00:30:53,610 --> 00:30:57,360
when you stubbed out the<font color="#E5E5E5"> database right</font>

758
00:30:55,800 --> 00:30:59,610
it's<font color="#CCCCCC"> just not</font><font color="#E5E5E5"> going</font><font color="#CCCCCC"> to it's not going</font><font color="#E5E5E5"> to</font>

759
00:30:57,360 --> 00:31:05,490
be there so<font color="#CCCCCC"> you have to recognize</font><font color="#E5E5E5"> the</font>

760
00:30:59,610 --> 00:31:07,679
<font color="#E5E5E5">limitations</font><font color="#CCCCCC"> of</font><font color="#E5E5E5"> the</font><font color="#CCCCCC"> two so the security</font>

761
00:31:05,490 --> 00:31:10,170
<font color="#E5E5E5">unit integration tests you're going to</font>

762
00:31:07,680 --> 00:31:10,380
take those and the same idea<font color="#CCCCCC"> that</font><font color="#E5E5E5"> you</font>

763
00:31:10,170 --> 00:31:12,539
<font color="#CCCCCC">have</font>

764
00:31:10,380 --> 00:31:14,730
with the use<font color="#E5E5E5"> cases going to abuse cases</font>

765
00:31:12,539 --> 00:31:17,820
<font color="#CCCCCC">they're doing the same thing to their</font>

766
00:31:14,730 --> 00:31:20,520
existing unit integration tests so you

767
00:31:17,820 --> 00:31:22,168
<font color="#E5E5E5">base these on an abuse case and you're</font>

768
00:31:20,520 --> 00:31:24,809
gonna use their<font color="#E5E5E5"> tests that</font><font color="#CCCCCC"> they already</font>

769
00:31:22,169 --> 00:31:27,929
<font color="#E5E5E5">wrote is kind of a template for</font><font color="#CCCCCC"> it</font><font color="#E5E5E5"> and</font>

770
00:31:24,809 --> 00:31:30,240
this<font color="#E5E5E5"> is why it's good</font><font color="#CCCCCC"> for DevOps it's</font>

771
00:31:27,929 --> 00:31:32,549
not a ton of<font color="#E5E5E5"> extra work for that</font>

772
00:31:30,240 --> 00:31:34,559
developer<font color="#E5E5E5"> they've already done this as</font>

773
00:31:32,549 --> 00:31:36,720
part of their job<font color="#CCCCCC"> and</font><font color="#E5E5E5"> now they just have</font>

774
00:31:34,559 --> 00:31:39,299
to<font color="#CCCCCC"> tweak it</font><font color="#E5E5E5"> a little bit a few times and</font>

775
00:31:36,720 --> 00:31:42,690
they're good<font color="#CCCCCC"> you only need</font><font color="#E5E5E5"> to change two</font>

776
00:31:39,299 --> 00:31:44,100
parts<font color="#E5E5E5"> and most of the unit integration</font>

777
00:31:42,690 --> 00:31:46,799
<font color="#CCCCCC">tests</font><font color="#E5E5E5"> and that's the request that you're</font>

778
00:31:44,100 --> 00:31:49,610
submitting<font color="#E5E5E5"> and the expectation of what</font>

779
00:31:46,799 --> 00:31:53,610
you're going<font color="#CCCCCC"> to get back</font><font color="#E5E5E5"> from the server</font>

780
00:31:49,610 --> 00:31:56,629
so a few<font color="#E5E5E5"> examples of that here we have</font>

781
00:31:53,610 --> 00:32:00,178
<font color="#E5E5E5">this unit test so this one is for</font>

782
00:31:56,630 --> 00:32:02,340
redirection<font color="#E5E5E5"> in the OS do shop</font>

783
00:32:00,179 --> 00:32:06,929
application they<font color="#E5E5E5"> have this white listing</font>

784
00:32:02,340 --> 00:32:09,360
function that's written in node and this

785
00:32:06,929 --> 00:32:11,610
white listing function says if you give

786
00:32:09,360 --> 00:32:14,090
me a<font color="#E5E5E5"> URL</font><font color="#CCCCCC"> I will tell you if you're</font>

787
00:32:11,610 --> 00:32:18,799
allowed<font color="#CCCCCC"> to redirect to that site or not</font>

788
00:32:14,090 --> 00:32:23,070
so here what we're saying<font color="#E5E5E5"> is we expect</font>

789
00:32:18,799 --> 00:32:26,940
<font color="#E5E5E5">this is redirect allowed module if I</font>

790
00:32:23,070 --> 00:32:28,860
give<font color="#E5E5E5"> it this white listed address that</font>

791
00:32:26,940 --> 00:32:30,419
should give me true<font color="#E5E5E5"> right so the</font>

792
00:32:28,860 --> 00:32:32,428
function we're not calling<font color="#E5E5E5"> the web</font>

793
00:32:30,419 --> 00:32:32,880
server<font color="#CCCCCC"> that's</font><font color="#E5E5E5"> why this is</font><font color="#CCCCCC"> just a unit</font>

794
00:32:32,429 --> 00:32:34,799
test

795
00:32:32,880 --> 00:32:38,700
we're just directly<font color="#E5E5E5"> calling that</font>

796
00:32:34,799 --> 00:32:41,429
<font color="#CCCCCC">JavaScript well we can</font><font color="#E5E5E5"> twist</font><font color="#CCCCCC"> that into a</font>

797
00:32:38,700 --> 00:32:44,760
security unit test<font color="#E5E5E5"> so if you had a</font>

798
00:32:41,429 --> 00:32:49,260
threat<font color="#CCCCCC"> that said you that somebody might</font>

799
00:32:44,760 --> 00:32:52,740
include a white listed URL as a

800
00:32:49,260 --> 00:32:56,190
parameter<font color="#CCCCCC"> to their bad URL so here we</font>

801
00:32:52,740 --> 00:32:59,929
have evil site dot local<font color="#E5E5E5"> and at the end</font>

802
00:32:56,190 --> 00:33:03,900
we have this link to the legitimate site

803
00:32:59,929 --> 00:33:06,630
and here we would<font color="#E5E5E5"> expect is redirect</font>

804
00:33:03,900 --> 00:33:07,740
allowed now it's going to<font color="#E5E5E5"> be false</font><font color="#CCCCCC"> right</font>

805
00:33:06,630 --> 00:33:11,159
because now we're trying<font color="#E5E5E5"> to direct</font>

806
00:33:07,740 --> 00:33:14,130
<font color="#E5E5E5">outside of our whiteness and so that's</font>

807
00:33:11,159 --> 00:33:17,270
what<font color="#E5E5E5"> makes this the security unit test</font>

808
00:33:14,130 --> 00:33:19,890
we<font color="#E5E5E5"> just changed this function call</font>

809
00:33:17,270 --> 00:33:22,770
parameter and then<font color="#E5E5E5"> we changed the</font>

810
00:33:19,890 --> 00:33:24,250
expectation another example I didn't

811
00:33:22,770 --> 00:33:28,480
really I've<font color="#CCCCCC"> never actually seen</font>

812
00:33:24,250 --> 00:33:32,170
<font color="#E5E5E5">we do a unit</font><font color="#CCCCCC"> test for their JWT s so</font>

813
00:33:28,480 --> 00:33:34,810
it's a JSON web token and<font color="#CCCCCC"> JW T's</font><font color="#E5E5E5"> are</font>

814
00:33:32,170 --> 00:33:36,580
commonly<font color="#E5E5E5"> passed back</font><font color="#CCCCCC"> and forth in</font>

815
00:33:34,810 --> 00:33:38,320
authentication<font color="#E5E5E5"> mechanisms now and</font>

816
00:33:36,580 --> 00:33:42,040
chucked in like<font color="#CCCCCC"> their headers</font><font color="#E5E5E5"> and</font>

817
00:33:38,320 --> 00:33:46,120
cookies<font color="#CCCCCC"> and a</font><font color="#E5E5E5"> JWT</font><font color="#CCCCCC"> is nothing more</font><font color="#E5E5E5"> than</font>

818
00:33:42,040 --> 00:33:51,159
the<font color="#E5E5E5"> base64 encoded and signed bit of</font>

819
00:33:46,120 --> 00:33:53,500
JSON<font color="#E5E5E5"> so you can take that as an attacker</font>

820
00:33:51,160 --> 00:33:55,990
<font color="#E5E5E5">and run an offline</font><font color="#CCCCCC"> brute-force against</font>

821
00:33:53,500 --> 00:33:58,000
it<font color="#E5E5E5"> and if you can</font><font color="#CCCCCC"> recover this secret</font>

822
00:33:55,990 --> 00:34:00,700
they<font color="#E5E5E5"> use to sign it then you can modify</font>

823
00:33:58,000 --> 00:34:02,950
<font color="#CCCCCC">that JWT</font><font color="#E5E5E5"> and resubmit</font><font color="#CCCCCC"> it</font><font color="#E5E5E5"> to the server</font>

824
00:34:00,700 --> 00:34:04,690
<font color="#E5E5E5">with varying effects depending on how</font>

825
00:34:02,950 --> 00:34:05,620
much the application<font color="#CCCCCC"> trust the content</font>

826
00:34:04,690 --> 00:34:08,230
of that JWT

827
00:34:05,620 --> 00:34:11,049
<font color="#E5E5E5">so you want it to be really strong yeah</font>

828
00:34:08,230 --> 00:34:13,030
<font color="#E5E5E5">so this</font><font color="#CCCCCC"> is when I'm doing a manual test</font>

829
00:34:11,050 --> 00:34:15,460
<font color="#E5E5E5">one of the first things I do is I see a</font>

830
00:34:13,030 --> 00:34:17,260
<font color="#E5E5E5">JWT I pull it out and start running hash</font>

831
00:34:15,460 --> 00:34:18,639
cat or John the Ripper or something on

832
00:34:17,260 --> 00:34:20,530
it<font color="#E5E5E5"> at the very beginning of an</font>

833
00:34:18,639 --> 00:34:23,200
<font color="#CCCCCC">assessment and then I see if I can</font>

834
00:34:20,530 --> 00:34:25,240
recover<font color="#E5E5E5"> that secret by the end of the by</font>

835
00:34:23,199 --> 00:34:27,040
the<font color="#E5E5E5"> end of the test if that's one day or</font>

836
00:34:25,239 --> 00:34:29,469
five days<font color="#E5E5E5"> that's how much time I have to</font>

837
00:34:27,040 --> 00:34:31,239
<font color="#E5E5E5">work on it and that's not really a great</font>

838
00:34:29,469 --> 00:34:33,790
<font color="#E5E5E5">solution right because I'm trying to</font>

839
00:34:31,239 --> 00:34:35,229
<font color="#CCCCCC">brute-force something and that's</font><font color="#E5E5E5"> not a</font>

840
00:34:33,790 --> 00:34:38,469
really good<font color="#E5E5E5"> way</font><font color="#CCCCCC"> to</font><font color="#E5E5E5"> test to</font><font color="#CCCCCC"> see if</font><font color="#E5E5E5"> that's</font>

841
00:34:35,230 --> 00:34:41,080
<font color="#CCCCCC">a</font><font color="#E5E5E5"> good secret or not but what you can do</font>

842
00:34:38,469 --> 00:34:43,719
is include<font color="#E5E5E5"> other node libraries like</font>

843
00:34:41,080 --> 00:34:46,989
this<font color="#E5E5E5"> PW STR so that checks password</font>

844
00:34:43,719 --> 00:34:48,850
strength<font color="#E5E5E5"> and it kind of comes up with an</font>

845
00:34:46,989 --> 00:34:51,790
<font color="#E5E5E5">entropy value for that JWT</font>

846
00:34:48,850 --> 00:34:54,899
so here we<font color="#CCCCCC"> want</font><font color="#E5E5E5"> to see is the entropy of</font>

847
00:34:51,790 --> 00:34:57,430
this default secret at least a<font color="#CCCCCC"> hundred</font>

848
00:34:54,899 --> 00:34:58,900
<font color="#CCCCCC">and that's just arbitrary value you pick</font>

849
00:34:57,430 --> 00:35:00,460
whatever you<font color="#E5E5E5"> want</font><font color="#CCCCCC"> not saying</font><font color="#E5E5E5"> that that's</font>

850
00:34:58,900 --> 00:35:03,640
<font color="#E5E5E5">like the perfect one or something that</font>

851
00:35:00,460 --> 00:35:06,760
<font color="#E5E5E5">it's made up but this would take me</font><font color="#CCCCCC"> days</font>

852
00:35:03,640 --> 00:35:08,710
<font color="#CCCCCC">to reliably test</font><font color="#E5E5E5"> and the only other way</font>

853
00:35:06,760 --> 00:35:10,390
to that I've seen<font color="#E5E5E5"> people test this is</font>

854
00:35:08,710 --> 00:35:12,160
with like<font color="#E5E5E5"> black listing of saying hey</font>

855
00:35:10,390 --> 00:35:14,350
you can't use<font color="#CCCCCC"> these weak secrets in your</font>

856
00:35:12,160 --> 00:35:17,080
<font color="#E5E5E5">app and then developers just like add</font>

857
00:35:14,350 --> 00:35:19,420
something on to it and and voila<font color="#E5E5E5"> it's</font>

858
00:35:17,080 --> 00:35:21,190
like a perfect<font color="#E5E5E5"> secret now but this would</font>

859
00:35:19,420 --> 00:35:23,770
still<font color="#E5E5E5"> catch that so if somebody</font><font color="#CCCCCC"> has a</font>

860
00:35:21,190 --> 00:35:26,400
bad secret<font color="#E5E5E5"> you will find it with this</font>

861
00:35:23,770 --> 00:35:26,400
<font color="#E5E5E5">kind of test</font>

862
00:35:27,540 --> 00:35:36,570
moving on to integration tests so in

863
00:35:31,800 --> 00:35:38,220
this one we're checking to<font color="#CCCCCC"> see can</font>

864
00:35:36,570 --> 00:35:40,790
users check the contents<font color="#E5E5E5"> of their own</font>

865
00:35:38,220 --> 00:35:42,779
shopping<font color="#CCCCCC"> cart so this would be a common</font>

866
00:35:40,790 --> 00:35:45,720
integration test here<font color="#E5E5E5"> we're actually</font>

867
00:35:42,780 --> 00:35:49,710
<font color="#E5E5E5">gonna send a request use this agent or</font>

868
00:35:45,720 --> 00:35:52,770
<font color="#E5E5E5">super agent node module to request the</font>

869
00:35:49,710 --> 00:35:56,400
user shopping cart<font color="#E5E5E5"> and then we expect to</font>

870
00:35:52,770 --> 00:35:59,880
get a<font color="#E5E5E5"> 200 when we do that I'm gonna</font>

871
00:35:56,400 --> 00:36:21,750
switch<font color="#CCCCCC"> back out of this</font><font color="#E5E5E5"> and go look at</font>

872
00:35:59,880 --> 00:36:24,630
it<font color="#E5E5E5"> in here instead so here's an example</font>

873
00:36:21,750 --> 00:36:26,730
<font color="#E5E5E5">of this after I did the slides they've</font>

874
00:36:24,630 --> 00:36:28,830
released a new version of the wasp shoe

875
00:36:26,730 --> 00:36:32,070
shop application so I had to make<font color="#CCCCCC"> a</font><font color="#E5E5E5"> few</font>

876
00:36:28,830 --> 00:36:34,770
changes<font color="#E5E5E5"> from this original slide so what</font>

877
00:36:32,070 --> 00:36:37,110
we have here<font color="#CCCCCC"> as I'm</font><font color="#E5E5E5"> sending this</font><font color="#CCCCCC"> product</font>

878
00:36:34,770 --> 00:36:39,120
<font color="#E5E5E5">ID adding it to basket number</font><font color="#CCCCCC"> one with a</font>

879
00:36:37,110 --> 00:36:41,820
quantity of<font color="#E5E5E5"> two so this is something</font>

880
00:36:39,120 --> 00:36:44,759
that should work and then I check<font color="#E5E5E5"> can I</font>

881
00:36:41,820 --> 00:36:46,800
actually check out for that item<font color="#E5E5E5"> and</font>

882
00:36:44,760 --> 00:36:50,790
<font color="#E5E5E5">that's kind</font><font color="#CCCCCC"> of satisfy a wasp's</font><font color="#E5E5E5"> you shop</font>

883
00:36:46,800 --> 00:36:54,270
for for my security<font color="#E5E5E5"> test well all I've</font>

884
00:36:50,790 --> 00:36:58,800
<font color="#CCCCCC">really changed</font><font color="#E5E5E5"> when</font><font color="#CCCCCC"> you</font><font color="#E5E5E5"> come</font><font color="#CCCCCC"> over</font><font color="#E5E5E5"> here</font>

885
00:36:54,270 --> 00:37:01,170
is the product ID and the quantity I

886
00:36:58,800 --> 00:37:03,210
changed the product ID because<font color="#CCCCCC"> to shop</font>

887
00:37:01,170 --> 00:37:06,090
won't<font color="#E5E5E5"> let you add the same product twice</font>

888
00:37:03,210 --> 00:37:07,650
<font color="#E5E5E5">anymore and and I didn't want to I</font>

889
00:37:06,090 --> 00:37:09,900
didn't put in an after a function or

890
00:37:07,650 --> 00:37:14,550
anything<font color="#E5E5E5"> to clean it up but now I'm</font>

891
00:37:09,900 --> 00:37:17,130
gonna<font color="#CCCCCC"> add a</font><font color="#E5E5E5"> quantity of</font><font color="#CCCCCC"> nine- 99,999</font><font color="#E5E5E5"> and</font>

892
00:37:14,550 --> 00:37:20,550
so in<font color="#CCCCCC"> into shop this allows you</font><font color="#E5E5E5"> to make</font>

893
00:37:17,130 --> 00:37:22,830
a purchase<font color="#E5E5E5"> that gives you money</font><font color="#CCCCCC"> and this</font>

894
00:37:20,550 --> 00:37:25,650
<font color="#E5E5E5">might be caught by a threat in your</font>

895
00:37:22,830 --> 00:37:30,420
<font color="#E5E5E5">threat</font><font color="#CCCCCC"> model like users may submit</font><font color="#E5E5E5"> out</font>

896
00:37:25,650 --> 00:37:31,800
of<font color="#E5E5E5"> pounds values to API calls</font><font color="#CCCCCC"> and so</font>

897
00:37:30,420 --> 00:37:33,600
that's<font color="#CCCCCC"> exactly</font><font color="#E5E5E5"> what this is out of</font>

898
00:37:31,800 --> 00:37:35,850
<font color="#E5E5E5">bounds value being passed in you should</font>

899
00:37:33,600 --> 00:37:39,180
never<font color="#E5E5E5"> have</font><font color="#CCCCCC"> a negative number and</font><font color="#E5E5E5"> then</font>

900
00:37:35,850 --> 00:37:44,970
here we're we expect that<font color="#E5E5E5"> that response</font>

901
00:37:39,180 --> 00:37:48,480
should<font color="#CCCCCC"> be a 400 as opposed to 200 so 400</font>

902
00:37:44,970 --> 00:37:49,850
client<font color="#E5E5E5"> bad client requests and here 200</font>

903
00:37:48,480 --> 00:37:54,080
is what we would

904
00:37:49,850 --> 00:37:55,670
from the unit<font color="#E5E5E5"> test</font><font color="#CCCCCC"> then we also have</font>

905
00:37:54,080 --> 00:38:04,549
some<font color="#E5E5E5"> other ones you know like you can</font>

906
00:37:55,670 --> 00:38:06,800
<font color="#E5E5E5">test authentication for that so here you</font>

907
00:38:04,550 --> 00:38:08,690
<font color="#E5E5E5">can test can I do this to somebody</font>

908
00:38:06,800 --> 00:38:14,150
<font color="#CCCCCC">else's shopping cart</font><font color="#E5E5E5"> right and in this</font>

909
00:38:08,690 --> 00:38:15,860
<font color="#E5E5E5">case I still had negative 9999 here with</font>

910
00:38:14,150 --> 00:38:20,000
a<font color="#E5E5E5"> different product ID and a different</font>

911
00:38:15,860 --> 00:38:22,970
basket<font color="#E5E5E5"> so you</font><font color="#CCCCCC"> know can I add something</font>

912
00:38:20,000 --> 00:38:25,370
<font color="#CCCCCC">to</font><font color="#E5E5E5"> somebody else's shopping cart</font><font color="#CCCCCC"> I don't</font>

913
00:38:22,970 --> 00:38:28,430
know<font color="#E5E5E5"> let's try</font><font color="#CCCCCC"> it</font><font color="#E5E5E5"> out so these are the</font>

914
00:38:25,370 --> 00:38:30,170
kind<font color="#CCCCCC"> of things it's the same exact set</font>

915
00:38:28,430 --> 00:38:32,240
of requests<font color="#E5E5E5"> just</font><font color="#CCCCCC"> with slight</font>

916
00:38:30,170 --> 00:38:33,740
<font color="#CCCCCC">modifications to it and so that's</font><font color="#E5E5E5"> kind</font>

917
00:38:32,240 --> 00:38:35,959
of how<font color="#E5E5E5"> you can sell this the development</font>

918
00:38:33,740 --> 00:38:38,149
teams<font color="#E5E5E5"> is this is something that's almost</font>

919
00:38:35,960 --> 00:38:40,580
impossible<font color="#CCCCCC"> for a dash tool to find but I</font>

920
00:38:38,150 --> 00:38:43,790
can find this as a tester and<font color="#E5E5E5"> this way</font>

921
00:38:40,580 --> 00:38:50,330
your software developers can find it and

922
00:38:43,790 --> 00:38:54,230
finally we have<font color="#E5E5E5"> key pass so so key pass</font>

923
00:38:50,330 --> 00:38:56,150
they in to shop they have<font color="#E5E5E5"> this</font><font color="#CCCCCC"> KBB X</font>

924
00:38:54,230 --> 00:38:59,030
file<font color="#E5E5E5"> that's sitting out there</font><font color="#CCCCCC"> and you</font>

925
00:38:56,150 --> 00:39:01,010
can go download it<font color="#E5E5E5"> and hear what we're</font>

926
00:38:59,030 --> 00:39:03,770
<font color="#CCCCCC">saying is I</font><font color="#E5E5E5"> should have</font><font color="#CCCCCC"> to be an</font>

927
00:39:01,010 --> 00:39:05,870
<font color="#E5E5E5">administrator to</font><font color="#CCCCCC"> access this KDB X file</font>

928
00:39:03,770 --> 00:39:07,430
<font color="#E5E5E5">so here I'm just</font><font color="#CCCCCC"> in the describe block</font>

929
00:39:05,870 --> 00:39:09,940
that already does my administrative

930
00:39:07,430 --> 00:39:13,819
authentication<font color="#E5E5E5"> and I should get it 200</font>

931
00:39:09,940 --> 00:39:16,850
so when we flip that around<font color="#CCCCCC"> stat is not</font>

932
00:39:13,820 --> 00:39:17,540
equal to 200<font color="#E5E5E5"> I and as a consultant</font><font color="#CCCCCC"> I use</font>

933
00:39:16,850 --> 00:39:20,150
this one

934
00:39:17,540 --> 00:39:21,920
the not equal<font color="#CCCCCC"> a lot</font><font color="#E5E5E5"> I don't see as</font>

935
00:39:20,150 --> 00:39:24,350
internal development teams don't

936
00:39:21,920 --> 00:39:26,180
<font color="#E5E5E5">typically use it because they know what</font>

937
00:39:24,350 --> 00:39:30,589
response they're gonna give if it's a

938
00:39:26,180 --> 00:39:32,960
401 or<font color="#E5E5E5"> a 403 the developers kind of have</font>

939
00:39:30,590 --> 00:39:35,690
an<font color="#E5E5E5"> idea but</font><font color="#CCCCCC"> I as an outside tester have</font>

940
00:39:32,960 --> 00:39:37,460
no idea what they're<font color="#E5E5E5"> gonna do so</font>

941
00:39:35,690 --> 00:39:39,340
sometimes I'll<font color="#CCCCCC"> just say it's</font><font color="#E5E5E5"> not gonna</font>

942
00:39:37,460 --> 00:39:41,830
be 200 whatever it is I don't<font color="#E5E5E5"> know</font>

943
00:39:39,340 --> 00:39:44,450
<font color="#E5E5E5">you're gonna come</font><font color="#CCCCCC"> up with</font><font color="#E5E5E5"> something</font><font color="#CCCCCC"> oh</font>

944
00:39:41,830 --> 00:39:46,580
<font color="#E5E5E5">yeah so it's it's</font><font color="#CCCCCC"> pretty simple and</font><font color="#E5E5E5"> this</font>

945
00:39:44,450 --> 00:39:50,259
<font color="#E5E5E5">is</font><font color="#CCCCCC"> how you find this broken access</font>

946
00:39:46,580 --> 00:39:50,259
control vulnerability there

947
00:39:54,380 --> 00:39:59,340
and then the last thing I wanted to do

948
00:39:57,060 --> 00:40:01,350
was<font color="#E5E5E5"> just because I think it's kind</font><font color="#CCCCCC"> of</font>

949
00:39:59,340 --> 00:40:03,270
funny<font color="#E5E5E5"> so here's the</font><font color="#CCCCCC"> wasyou</font><font color="#E5E5E5"> shop</font>

950
00:40:01,350 --> 00:40:05,490
application and the OS do shop

951
00:40:03,270 --> 00:40:08,940
application is intentionally vulnerable

952
00:40:05,490 --> 00:40:10,979
web app and<font color="#E5E5E5"> as you find folder abilities</font>

953
00:40:08,940 --> 00:40:12,750
in the OWASP juice shop application<font color="#CCCCCC"> it</font>

954
00:40:10,980 --> 00:40:14,460
pops up these<font color="#E5E5E5"> boxes so lets you know hey</font>

955
00:40:12,750 --> 00:40:16,140
<font color="#E5E5E5">you found a problem with the with the</font>

956
00:40:14,460 --> 00:40:20,010
application congratulations you solved

957
00:40:16,140 --> 00:40:23,220
the challenge so<font color="#E5E5E5"> I can run</font><font color="#CCCCCC"> Moka against</font>

958
00:40:20,010 --> 00:40:24,990
it<font color="#E5E5E5"> and these are use</font><font color="#CCCCCC"> cases that I ran</font>

959
00:40:23,220 --> 00:40:27,810
and there were a couple<font color="#E5E5E5"> things that it</font>

960
00:40:24,990 --> 00:40:30,240
<font color="#E5E5E5">tripped for like logging in using the</font>

961
00:40:27,810 --> 00:40:36,140
admin credentials<font color="#E5E5E5"> so that's</font><font color="#CCCCCC"> nothing too</font>

962
00:40:30,240 --> 00:40:36,140
<font color="#CCCCCC">serious but you can also do mocha</font><font color="#E5E5E5"> abuse</font>

963
00:40:37,100 --> 00:40:46,860
<font color="#CCCCCC">test</font><font color="#E5E5E5"> you can run your abuse case tests</font>

964
00:40:41,960 --> 00:40:48,750
and it just finds<font color="#E5E5E5"> a ton of finding so</font>

965
00:40:46,860 --> 00:40:52,440
you can conceivably use this to automate

966
00:40:48,750 --> 00:40:54,510
finding all the vulnerabilities<font color="#CCCCCC"> so this</font>

967
00:40:52,440 --> 00:40:57,270
is kind of the way<font color="#E5E5E5"> that I use</font><font color="#CCCCCC"> it as a</font>

968
00:40:54,510 --> 00:40:59,820
consultant<font color="#E5E5E5"> is</font><font color="#CCCCCC"> I when I find tat when I</font>

969
00:40:57,270 --> 00:41:01,710
find issues in an<font color="#CCCCCC"> application I might</font>

970
00:40:59,820 --> 00:41:03,750
write out some of these unit and

971
00:41:01,710 --> 00:41:05,730
integration<font color="#E5E5E5"> tests so that way developers</font>

972
00:41:03,750 --> 00:41:07,440
can do their regression testing<font color="#CCCCCC"> I was</font>

973
00:41:05,730 --> 00:41:09,390
talking<font color="#E5E5E5"> to one</font><font color="#CCCCCC"> customer and</font><font color="#E5E5E5"> he told me</font>

974
00:41:07,440 --> 00:41:11,670
it seemed a little<font color="#E5E5E5"> high but</font><font color="#CCCCCC"> he said they</font>

975
00:41:09,390 --> 00:41:14,910
spend like eight hours<font color="#E5E5E5"> trying to</font>

976
00:41:11,670 --> 00:41:16,590
<font color="#CCCCCC">validate findings</font><font color="#E5E5E5"> each finding from a</font>

977
00:41:14,910 --> 00:41:18,960
pen test report on their applications

978
00:41:16,590 --> 00:41:21,120
<font color="#E5E5E5">which is</font><font color="#CCCCCC"> a massive drain on developers</font>

979
00:41:18,960 --> 00:41:22,920
like that one in particular<font color="#CCCCCC"> had thirty</font>

980
00:41:21,120 --> 00:41:24,839
cross-site scripting vulnerabilities in

981
00:41:22,920 --> 00:41:26,370
that app<font color="#E5E5E5"> so if you go ahead and</font><font color="#CCCCCC"> do the</font>

982
00:41:24,840 --> 00:41:27,810
math<font color="#E5E5E5"> it's gonna be like</font><font color="#CCCCCC"> two hundred</font>

983
00:41:26,370 --> 00:41:29,520
<font color="#CCCCCC">forty hours that they're gonna spend</font>

984
00:41:27,810 --> 00:41:32,370
<font color="#E5E5E5">just validating my cross-site scripting</font>

985
00:41:29,520 --> 00:41:34,650
findings<font color="#E5E5E5"> this works out pretty well</font>

986
00:41:32,370 --> 00:41:37,020
because<font color="#E5E5E5"> the developers can just see</font>

987
00:41:34,650 --> 00:41:39,840
exactly<font color="#E5E5E5"> what all the requests are what</font>

988
00:41:37,020 --> 00:41:42,150
all the responses are and yeah sometimes

989
00:41:39,840 --> 00:41:44,370
developers will try to do something

990
00:41:42,150 --> 00:41:48,990
chintzy like blacklist the word script

991
00:41:44,370 --> 00:41:50,730
<font color="#E5E5E5">or</font><font color="#CCCCCC"> something</font><font color="#E5E5E5"> to escape my escape my</font><font color="#CCCCCC"> test</font>

992
00:41:48,990 --> 00:41:53,459
but really<font color="#E5E5E5"> they're only hurting</font>

993
00:41:50,730 --> 00:41:55,260
<font color="#E5E5E5">themselves at that point so but it's</font>

994
00:41:53,460 --> 00:41:57,690
still useful<font color="#E5E5E5"> and then the client doesn't</font>

995
00:41:55,260 --> 00:41:59,400
<font color="#E5E5E5">have to come back to me to to test</font>

996
00:41:57,690 --> 00:42:01,140
things<font color="#CCCCCC"> they</font><font color="#E5E5E5"> don't come back unless</font>

997
00:41:59,400 --> 00:42:03,440
everything<font color="#E5E5E5"> in the script is already</font>

998
00:42:01,140 --> 00:42:05,640
fixed<font color="#CCCCCC"> and then I can try to bypass</font>

999
00:42:03,440 --> 00:42:06,770
<font color="#E5E5E5">bypass functions because that's</font>

1000
00:42:05,640 --> 00:42:08,060
something<font color="#E5E5E5"> that you</font>

1001
00:42:06,770 --> 00:42:10,370
they're good at<font color="#E5E5E5"> machines aren't</font>

1002
00:42:08,060 --> 00:42:13,660
necessarily<font color="#E5E5E5"> perfect at right now right</font>

1003
00:42:10,370 --> 00:42:16,339
<font color="#E5E5E5">trying to find ways to bypass these</font>

1004
00:42:13,660 --> 00:42:18,350
these<font color="#E5E5E5"> protections that developers put in</font>

1005
00:42:16,340 --> 00:42:20,480
so that's<font color="#E5E5E5"> a much better way for me</font><font color="#CCCCCC"> as a</font>

1006
00:42:18,350 --> 00:42:22,759
<font color="#E5E5E5">consultant to spend my time rather than</font>

1007
00:42:20,480 --> 00:42:29,360
finding junk findings like user a

1008
00:42:22,760 --> 00:42:32,420
accesses user B's record so finally<font color="#E5E5E5"> now</font>

1009
00:42:29,360 --> 00:42:34,580
<font color="#E5E5E5">we've written and run all of our tests</font>

1010
00:42:32,420 --> 00:42:37,460
<font color="#E5E5E5">and this is the first time the security</font>

1011
00:42:34,580 --> 00:42:39,250
team actually<font color="#CCCCCC"> does work</font><font color="#E5E5E5"> and that's kind</font>

1012
00:42:37,460 --> 00:42:41,240
of what I like<font color="#CCCCCC"> about it because I'm lazy</font>

1013
00:42:39,250 --> 00:42:43,190
<font color="#E5E5E5">everything else is done by the project</font>

1014
00:42:41,240 --> 00:42:44,959
<font color="#CCCCCC">team and that works</font><font color="#E5E5E5"> well for DevOps</font>

1015
00:42:43,190 --> 00:42:47,870
because now the developers are

1016
00:42:44,960 --> 00:42:49,280
controlling that flow<font color="#CCCCCC"> of work so as</font><font color="#E5E5E5"> long</font>

1017
00:42:47,870 --> 00:42:51,230
as<font color="#E5E5E5"> you have good security champions</font>

1018
00:42:49,280 --> 00:42:53,000
<font color="#E5E5E5">you've done</font><font color="#CCCCCC"> you're a decent</font><font color="#E5E5E5"> job training</font>

1019
00:42:51,230 --> 00:42:56,150
your developers it's<font color="#E5E5E5"> gonna work out okay</font>

1020
00:42:53,000 --> 00:42:58,040
<font color="#CCCCCC">for</font><font color="#E5E5E5"> you now as</font><font color="#CCCCCC"> a knapsack</font><font color="#E5E5E5"> team</font><font color="#CCCCCC"> all</font>

1021
00:42:56,150 --> 00:42:59,810
you're<font color="#CCCCCC"> doing</font><font color="#E5E5E5"> is checking the the volume</font>

1022
00:42:58,040 --> 00:43:02,330
of tests<font color="#E5E5E5"> that they've created and the</font>

1023
00:42:59,810 --> 00:43:04,190
types of tests they've made sometimes

1024
00:43:02,330 --> 00:43:05,569
you'll see teams come back in and like

1025
00:43:04,190 --> 00:43:06,890
all they've done<font color="#E5E5E5"> or broken access</font>

1026
00:43:05,570 --> 00:43:08,780
control findings<font color="#E5E5E5"> and you're like hey</font>

1027
00:43:06,890 --> 00:43:10,990
maybe we should<font color="#E5E5E5"> do some inputs and</font>

1028
00:43:08,780 --> 00:43:15,080
ization stuff here<font color="#CCCCCC"> too guys</font>

1029
00:43:10,990 --> 00:43:16,700
<font color="#E5E5E5">hmm but that's not too terrible you can</font>

1030
00:43:15,080 --> 00:43:19,370
have them put like metadata into<font color="#E5E5E5"> their</font>

1031
00:43:16,700 --> 00:43:21,620
unit<font color="#E5E5E5"> test so you can</font><font color="#CCCCCC"> check</font><font color="#E5E5E5"> and easily</font>

1032
00:43:19,370 --> 00:43:24,410
script like hey what type of<font color="#E5E5E5"> control are</font>

1033
00:43:21,620 --> 00:43:26,060
we<font color="#E5E5E5"> checking here with this and the past</font>

1034
00:43:24,410 --> 00:43:29,720
<font color="#CCCCCC">I</font><font color="#E5E5E5"> gotten questions about code coverage</font>

1035
00:43:26,060 --> 00:43:31,730
so<font color="#E5E5E5"> you can use code coverage tools they</font>

1036
00:43:29,720 --> 00:43:33,890
instrument the application and<font color="#E5E5E5"> then</font>

1037
00:43:31,730 --> 00:43:37,340
determine<font color="#CCCCCC"> how much of the application</font>

1038
00:43:33,890 --> 00:43:38,600
actually<font color="#E5E5E5"> gets called in your testing so</font>

1039
00:43:37,340 --> 00:43:41,540
<font color="#E5E5E5">you can use this as an application</font>

1040
00:43:38,600 --> 00:43:43,700
security tester<font color="#E5E5E5"> to say hey I tested 80%</font>

1041
00:43:41,540 --> 00:43:46,300
of your application<font color="#E5E5E5"> and you</font><font color="#CCCCCC"> can also use</font>

1042
00:43:43,700 --> 00:43:48,589
it say your unit integration tests test

1043
00:43:46,300 --> 00:43:52,760
<font color="#E5E5E5">80% of your application before it's even</font>

1044
00:43:48,590 --> 00:43:54,200
<font color="#CCCCCC">sent anywhere and which</font><font color="#E5E5E5"> you just use</font>

1045
00:43:52,760 --> 00:43:56,210
whichever<font color="#E5E5E5"> one your developers are</font>

1046
00:43:54,200 --> 00:43:57,710
already<font color="#E5E5E5"> using so it's nothing new</font><font color="#CCCCCC"> that</font>

1047
00:43:56,210 --> 00:43:58,850
<font color="#E5E5E5">you're adding on to them and then you</font>

1048
00:43:57,710 --> 00:44:01,190
<font color="#CCCCCC">just have to come up with some kind of</font>

1049
00:43:58,850 --> 00:44:03,920
threshold<font color="#E5E5E5"> unfortunately when I tried to</font>

1050
00:44:01,190 --> 00:44:06,530
find a acceptable<font color="#E5E5E5"> threshold</font><font color="#CCCCCC"> there is not</font>

1051
00:44:03,920 --> 00:44:09,830
an acceptable threshold<font color="#E5E5E5"> for how many</font>

1052
00:44:06,530 --> 00:44:11,330
unit and integration<font color="#CCCCCC"> tests or enough and</font>

1053
00:44:09,830 --> 00:44:13,220
there's a couple reasons for<font color="#CCCCCC"> that</font>

1054
00:44:11,330 --> 00:44:15,350
<font color="#E5E5E5">different software is going to need</font>

1055
00:44:13,220 --> 00:44:17,089
different<font color="#CCCCCC"> amounts of coverage and it's</font>

1056
00:44:15,350 --> 00:44:19,759
also possible to<font color="#CCCCCC"> achieve a</font><font color="#E5E5E5"> hundred</font>

1057
00:44:17,090 --> 00:44:20,549
<font color="#E5E5E5">percent code coverage without actually</font>

1058
00:44:19,760 --> 00:44:23,910
testing

1059
00:44:20,549 --> 00:44:25,619
vulnerabilities<font color="#E5E5E5"> so if you had if you're</font>

1060
00:44:23,910 --> 00:44:27,420
putting<font color="#E5E5E5"> an inputs and cessation check</font>

1061
00:44:25,619 --> 00:44:29,819
and you write an input sanitization

1062
00:44:27,420 --> 00:44:34,049
routine that does<font color="#CCCCCC"> nothing</font><font color="#E5E5E5"> but say if you</font>

1063
00:44:29,819 --> 00:44:35,910
have like single quote then return<font color="#E5E5E5"> fail</font>

1064
00:44:34,049 --> 00:44:40,709
<font color="#E5E5E5">and if you don't have single quote</font>

1065
00:44:35,910 --> 00:44:42,928
return pass<font color="#CCCCCC"> and so if I submit something</font>

1066
00:44:40,709 --> 00:44:44,939
<font color="#E5E5E5">that's not sequel injection maybe I'm</font>

1067
00:44:42,929 --> 00:44:46,589
spinning like cross-site scripting and

1068
00:44:44,939 --> 00:44:48,749
you<font color="#E5E5E5"> you're missing</font><font color="#CCCCCC"> characters from</font><font color="#E5E5E5"> your</font>

1069
00:44:46,589 --> 00:44:51,630
<font color="#E5E5E5">blacklist you could have already tested</font>

1070
00:44:48,749 --> 00:44:53,578
<font color="#CCCCCC">both code paths they're gotten 100% code</font>

1071
00:44:51,630 --> 00:44:56,009
coverage<font color="#E5E5E5"> and still not tested for</font>

1072
00:44:53,579 --> 00:44:57,839
cross-site scripting so<font color="#E5E5E5"> that's why you</font>

1073
00:44:56,009 --> 00:45:00,150
should<font color="#E5E5E5"> never get all wrapped around the</font>

1074
00:44:57,839 --> 00:45:04,709
axle about how much code coverage<font color="#E5E5E5"> you've</font>

1075
00:45:00,150 --> 00:45:06,420
actually actually<font color="#E5E5E5"> managed to</font><font color="#CCCCCC"> get and</font>

1076
00:45:04,709 --> 00:45:09,419
then continuous improvement<font color="#CCCCCC"> as our</font><font color="#E5E5E5"> other</font>

1077
00:45:06,420 --> 00:45:11,400
job<font color="#CCCCCC"> we should be running</font><font color="#E5E5E5"> the training</font>

1078
00:45:09,420 --> 00:45:14,189
for<font color="#E5E5E5"> the developers and you look and see</font>

1079
00:45:11,400 --> 00:45:16,799
what's happening<font color="#E5E5E5"> one of the ideas that I</font>

1080
00:45:14,189 --> 00:45:19,920
like is heaven<font color="#E5E5E5"> mortality and morbidity</font>

1081
00:45:16,799 --> 00:45:21,630
conferences so in medicine when somebody

1082
00:45:19,920 --> 00:45:24,179
dies<font color="#CCCCCC"> and you want to figure out what</font>

1083
00:45:21,630 --> 00:45:26,400
went wrong<font color="#CCCCCC"> so from as soon</font><font color="#E5E5E5"> as this</font>

1084
00:45:24,179 --> 00:45:28,589
person<font color="#E5E5E5"> came in what their symptoms were</font>

1085
00:45:26,400 --> 00:45:30,239
until the time that they died everything

1086
00:45:28,589 --> 00:45:32,160
<font color="#E5E5E5">that happened and again you're</font><font color="#CCCCCC"> not</font>

1087
00:45:30,239 --> 00:45:34,319
trying to<font color="#E5E5E5"> blame anybody here</font><font color="#CCCCCC"> that's</font>

1088
00:45:32,160 --> 00:45:36,509
<font color="#CCCCCC">never the goal</font><font color="#E5E5E5"> you're just trying to</font>

1089
00:45:34,319 --> 00:45:39,359
<font color="#E5E5E5">figure</font><font color="#CCCCCC"> out what</font><font color="#E5E5E5"> steps</font><font color="#CCCCCC"> happened and how</font>

1090
00:45:36,509 --> 00:45:41,809
can we improve<font color="#CCCCCC"> on this so</font><font color="#E5E5E5"> you can use</font>

1091
00:45:39,359 --> 00:45:44,400
that with people's code<font color="#CCCCCC"> you say here's a</font>

1092
00:45:41,809 --> 00:45:47,459
<font color="#E5E5E5">anonymized vulnerability that we had in</font>

1093
00:45:44,400 --> 00:45:49,259
one<font color="#CCCCCC"> of</font><font color="#E5E5E5"> our apps because then it's it's</font>

1094
00:45:47,459 --> 00:45:50,788
more important<font color="#CCCCCC"> to developers when it's</font>

1095
00:45:49,259 --> 00:45:52,410
somebody they know<font color="#E5E5E5"> even if they don't</font>

1096
00:45:50,789 --> 00:45:54,390
know who that<font color="#E5E5E5"> person is just the fact</font>

1097
00:45:52,410 --> 00:45:55,890
that it was their organization instead

1098
00:45:54,390 --> 00:45:58,049
of you<font color="#CCCCCC"> know you pulling something off</font>

1099
00:45:55,890 --> 00:46:00,058
the news or some like open<font color="#E5E5E5"> source</font>

1100
00:45:58,049 --> 00:46:02,999
project<font color="#CCCCCC"> that they don't care about this</font>

1101
00:46:00,059 --> 00:46:04,650
<font color="#E5E5E5">kind of brings it home to</font><font color="#CCCCCC"> them and then</font>

1102
00:46:02,999 --> 00:46:07,558
<font color="#E5E5E5">you can</font><font color="#CCCCCC"> try to work to</font><font color="#E5E5E5"> improve the code</font>

1103
00:46:04,650 --> 00:46:08,880
<font color="#E5E5E5">coverage 20% probably not okay</font><font color="#CCCCCC"> and</font>

1104
00:46:07,559 --> 00:46:10,679
you'll want<font color="#E5E5E5"> to try to get that up</font><font color="#CCCCCC"> over</font>

1105
00:46:08,880 --> 00:46:12,839
<font color="#E5E5E5">time but it allows you to show these</font>

1106
00:46:10,679 --> 00:46:14,910
nice trending metrics as you're

1107
00:46:12,839 --> 00:46:16,170
improving<font color="#E5E5E5"> that way everybody can</font><font color="#CCCCCC"> say oh</font>

1108
00:46:14,910 --> 00:46:19,410
<font color="#E5E5E5">look we're actually like getting</font>

1109
00:46:16,170 --> 00:46:20,789
<font color="#E5E5E5">something out of this</font><font color="#CCCCCC"> and then you can</font>

1110
00:46:19,410 --> 00:46:22,678
<font color="#E5E5E5">try to make</font><font color="#CCCCCC"> sure</font><font color="#E5E5E5"> that you have that good</font>

1111
00:46:20,789 --> 00:46:24,329
<font color="#E5E5E5">diversity in your code coverage so</font>

1112
00:46:22,679 --> 00:46:26,939
you're testing<font color="#CCCCCC"> all the different types</font>

1113
00:46:24,329 --> 00:46:28,709
of<font color="#CCCCCC"> vulnerabilities and then</font><font color="#E5E5E5"> super</font>

1114
00:46:26,939 --> 00:46:33,149
<font color="#E5E5E5">important is updating your threat model</font>

1115
00:46:28,709 --> 00:46:34,250
templates so do root cause analysis when

1116
00:46:33,150 --> 00:46:36,240
you have a

1117
00:46:34,250 --> 00:46:38,250
penetration<font color="#E5E5E5"> test finding on your</font>

1118
00:46:36,240 --> 00:46:40,348
application<font color="#E5E5E5"> there's a reason that that</font>

1119
00:46:38,250 --> 00:46:42,390
vulnerability made it all the way<font color="#CCCCCC"> to</font>

1120
00:46:40,349 --> 00:46:44,549
that last phase<font color="#E5E5E5"> maybe it was</font><font color="#CCCCCC"> already</font><font color="#E5E5E5"> in</font>

1121
00:46:42,390 --> 00:46:46,288
production<font color="#CCCCCC"> so how do we stop that from</font>

1122
00:46:44,549 --> 00:46:47,460
happening in<font color="#E5E5E5"> the future</font><font color="#CCCCCC"> where</font><font color="#E5E5E5"> are we</font>

1123
00:46:46,289 --> 00:46:50,069
missing<font color="#CCCCCC"> something in</font><font color="#E5E5E5"> our threat model</font>

1124
00:46:47,460 --> 00:46:52,470
<font color="#E5E5E5">template is that</font><font color="#CCCCCC"> the problem did</font>

1125
00:46:50,069 --> 00:46:55,470
<font color="#E5E5E5">something else go awry our dynamic tools</font>

1126
00:46:52,470 --> 00:46:58,109
not catching it<font color="#CCCCCC"> what happened why did we</font>

1127
00:46:55,470 --> 00:47:00,899
not find this there's a<font color="#E5E5E5"> reason and again</font>

1128
00:46:58,109 --> 00:47:05,848
<font color="#CCCCCC">not blaming anybody</font><font color="#E5E5E5"> but you got to find</font>

1129
00:47:00,900 --> 00:47:07,890
out why it happened<font color="#E5E5E5"> using this as a</font>

1130
00:47:05,849 --> 00:47:11,010
consultant<font color="#E5E5E5"> these are a couple</font><font color="#CCCCCC"> of things</font>

1131
00:47:07,890 --> 00:47:12,509
<font color="#E5E5E5">that I've run into try whenever possible</font>

1132
00:47:11,010 --> 00:47:15,240
talk to the developers about<font color="#E5E5E5"> what</font>

1133
00:47:12,510 --> 00:47:17,490
they're gonna<font color="#E5E5E5"> do to</font><font color="#CCCCCC"> fix this problem one</font>

1134
00:47:15,240 --> 00:47:21,569
good<font color="#E5E5E5"> example</font><font color="#CCCCCC"> of that for me I was I've</font>

1135
00:47:17,490 --> 00:47:24,629
had<font color="#CCCCCC"> a finding</font><font color="#E5E5E5"> for they weren't enforcing</font>

1136
00:47:21,569 --> 00:47:29,250
<font color="#E5E5E5">their CAPTCHA on account creation and so</font>

1137
00:47:24,630 --> 00:47:31,890
I wrote<font color="#CCCCCC"> a test saying hey this test will</font>

1138
00:47:29,250 --> 00:47:34,829
pass when I submit this and when I

1139
00:47:31,890 --> 00:47:37,440
submit like valid input<font color="#E5E5E5"> but an invalid</font>

1140
00:47:34,829 --> 00:47:38,759
CAPTCHA and<font color="#E5E5E5"> I get the server response</font>

1141
00:47:37,440 --> 00:47:42,119
well<font color="#E5E5E5"> their server a response for</font><font color="#CCCCCC"> a</font>

1142
00:47:38,759 --> 00:47:46,980
failed<font color="#E5E5E5"> account creation was</font><font color="#CCCCCC"> that 200</font>

1143
00:47:42,119 --> 00:47:49,559
with null JSON<font color="#E5E5E5"> so that was what I wrote</font>

1144
00:47:46,980 --> 00:47:51,509
<font color="#E5E5E5">by a unit test for</font><font color="#CCCCCC"> my</font><font color="#E5E5E5"> integration test I</font>

1145
00:47:49,559 --> 00:47:53,099
said<font color="#E5E5E5"> all right</font><font color="#CCCCCC"> I'm gonna</font><font color="#E5E5E5"> send this with</font>

1146
00:47:51,509 --> 00:47:56,069
bad CAPTCHA and<font color="#E5E5E5"> this is what I</font><font color="#CCCCCC"> should</font>

1147
00:47:53,099 --> 00:47:59,400
get<font color="#CCCCCC"> back and they made it a</font><font color="#E5E5E5"> 400 response</font>

1148
00:47:56,069 --> 00:48:02,069
code with error invalid<font color="#E5E5E5"> CAPTCHA which is</font>

1149
00:47:59,400 --> 00:48:03,480
fine it achieved the<font color="#E5E5E5"> same result but it</font>

1150
00:48:02,069 --> 00:48:04,619
kind<font color="#CCCCCC"> of caught me</font><font color="#E5E5E5"> off guard</font><font color="#CCCCCC"> just</font><font color="#E5E5E5"> like</font><font color="#CCCCCC"> I</font>

1151
00:48:03,480 --> 00:48:08,009
don't<font color="#E5E5E5"> know why you did something</font><font color="#CCCCCC"> totally</font>

1152
00:48:04,619 --> 00:48:10,079
different<font color="#E5E5E5"> than</font><font color="#CCCCCC"> what</font><font color="#E5E5E5"> you were doing but</font>

1153
00:48:08,009 --> 00:48:11,339
it was a<font color="#E5E5E5"> little bit of frustration on</font>

1154
00:48:10,079 --> 00:48:13,019
their side<font color="#CCCCCC"> because they're like hey we</font>

1155
00:48:11,339 --> 00:48:15,808
fixed<font color="#E5E5E5"> this why does it keep coming back</font>

1156
00:48:13,019 --> 00:48:18,379
what's wrong with your<font color="#E5E5E5"> test so this is</font>

1157
00:48:15,809 --> 00:48:20,460
this was an important<font color="#CCCCCC"> lesson for me</font>

1158
00:48:18,380 --> 00:48:21,750
<font color="#E5E5E5">sometimes I give these over the security</font>

1159
00:48:20,460 --> 00:48:23,250
team<font color="#E5E5E5"> thinking that they're gonna like</font>

1160
00:48:21,750 --> 00:48:25,109
put them<font color="#E5E5E5"> in with their regression</font>

1161
00:48:23,250 --> 00:48:26,759
testing<font color="#E5E5E5"> and the security teams don't</font>

1162
00:48:25,109 --> 00:48:28,380
<font color="#E5E5E5">want to talk to the developers about it</font>

1163
00:48:26,759 --> 00:48:30,569
<font color="#E5E5E5">so they decide</font><font color="#CCCCCC"> to like pull these off</font>

1164
00:48:28,380 --> 00:48:35,069
<font color="#E5E5E5">and they'll install mocha on their own</font>

1165
00:48:30,569 --> 00:48:36,808
<font color="#CCCCCC">Linux image and mmm and that really</font><font color="#E5E5E5"> kind</font>

1166
00:48:35,069 --> 00:48:38,519
<font color="#E5E5E5">of threw</font><font color="#CCCCCC"> me for a loop</font><font color="#E5E5E5"> because like you</font>

1167
00:48:36,809 --> 00:48:40,980
guys<font color="#E5E5E5"> already have these tools</font><font color="#CCCCCC"> why are</font>

1168
00:48:38,519 --> 00:48:43,169
you starting over<font color="#CCCCCC"> from ground up</font><font color="#E5E5E5"> but</font>

1169
00:48:40,980 --> 00:48:44,849
they might be<font color="#CCCCCC"> doing that</font><font color="#E5E5E5"> and that's kind</font>

1170
00:48:43,170 --> 00:48:46,079
of where I also found a lot of<font color="#CCCCCC"> timeout</font>

1171
00:48:44,849 --> 00:48:48,060
problems because they were running<font color="#E5E5E5"> on</font>

1172
00:48:46,079 --> 00:48:50,460
<font color="#E5E5E5">some like rinky-dink VM</font><font color="#CCCCCC"> that they start</font>

1173
00:48:48,060 --> 00:48:56,820
so making sure<font color="#CCCCCC"> that</font><font color="#E5E5E5"> the timeouts are</font>

1174
00:48:50,460 --> 00:48:58,740
<font color="#E5E5E5">okay but whenever you do a knapsack</font><font color="#CCCCCC"> make</font>

1175
00:48:56,820 --> 00:48:59,940
sure<font color="#E5E5E5"> that your security controls don't</font>

1176
00:48:58,740 --> 00:49:03,540
shank your business

1177
00:48:59,940 --> 00:49:06,090
all right you if you<font color="#E5E5E5"> get in the way</font><font color="#CCCCCC"> of</font>

1178
00:49:03,540 --> 00:49:08,460
<font color="#E5E5E5">DevOps at an organization where it seems</font>

1179
00:49:06,090 --> 00:49:11,010
<font color="#E5E5E5">to be working for them you are going to</font>

1180
00:49:08,460 --> 00:49:13,890
get annihilated<font color="#CCCCCC"> and that will not help</font>

1181
00:49:11,010 --> 00:49:15,630
<font color="#E5E5E5">anybody at your company so so don't do</font>

1182
00:49:13,890 --> 00:49:18,029
it<font color="#E5E5E5"> try to come up</font><font color="#CCCCCC"> with as many controls</font>

1183
00:49:15,630 --> 00:49:20,700
that<font color="#E5E5E5"> are not gonna put you in</font><font color="#CCCCCC"> that</font>

1184
00:49:18,030 --> 00:49:23,340
<font color="#E5E5E5">bottleneck position so that's why you</font>

1185
00:49:20,700 --> 00:49:25,830
try<font color="#E5E5E5"> not to make your team have to go</font>

1186
00:49:23,340 --> 00:49:27,240
have hands-on with anything<font color="#E5E5E5"> use</font>

1187
00:49:25,830 --> 00:49:29,819
developer tools whenever<font color="#E5E5E5"> possible</font>

1188
00:49:27,240 --> 00:49:31,979
<font color="#CCCCCC">because</font><font color="#E5E5E5"> that will always increase your</font>

1189
00:49:29,820 --> 00:49:33,720
acceptance with developers<font color="#E5E5E5"> because</font>

1190
00:49:31,980 --> 00:49:35,160
you're not just<font color="#E5E5E5"> like foisting something</font>

1191
00:49:33,720 --> 00:49:38,549
on them<font color="#E5E5E5"> being like here just learn this</font>

1192
00:49:35,160 --> 00:49:40,830
<font color="#E5E5E5">new technology when they've got stuff to</font>

1193
00:49:38,550 --> 00:49:43,920
do it's<font color="#CCCCCC"> hard to be a</font><font color="#E5E5E5"> developer you</font><font color="#CCCCCC"> have</font>

1194
00:49:40,830 --> 00:49:45,630
a lot of<font color="#E5E5E5"> competing</font><font color="#CCCCCC"> priorities</font><font color="#E5E5E5"> but I</font>

1195
00:49:43,920 --> 00:49:47,580
<font color="#CCCCCC">think abuse case is a security unit</font>

1196
00:49:45,630 --> 00:49:49,590
<font color="#E5E5E5">tests</font><font color="#CCCCCC"> are a great way to actually</font>

1197
00:49:47,580 --> 00:49:52,290
accomplish this goal<font color="#CCCCCC"> because you can do</font>

1198
00:49:49,590 --> 00:49:54,780
automated<font color="#E5E5E5"> testing</font><font color="#CCCCCC"> and it works great for</font>

1199
00:49:52,290 --> 00:49:57,240
<font color="#E5E5E5">regression testing so whenever they</font>

1200
00:49:54,780 --> 00:49:59,040
deploy<font color="#E5E5E5"> software again if somebody</font><font color="#CCCCCC"> goes</font>

1201
00:49:57,240 --> 00:50:00,839
back and modifies<font color="#CCCCCC"> that piece of code you</font>

1202
00:49:59,040 --> 00:50:02,880
already have the<font color="#CCCCCC"> tests written</font><font color="#E5E5E5"> and it'll</font>

1203
00:50:00,840 --> 00:50:05,700
pick it up right<font color="#E5E5E5"> away</font><font color="#CCCCCC"> possibly before</font>

1204
00:50:02,880 --> 00:50:07,860
<font color="#E5E5E5">they even check their code in which is</font>

1205
00:50:05,700 --> 00:50:10,439
glorious so it'll never hit production

1206
00:50:07,860 --> 00:50:12,690
and it shifts<font color="#E5E5E5"> everything out</font><font color="#CCCCCC"> of the</font>

1207
00:50:10,440 --> 00:50:14,760
<font color="#E5E5E5">developer so you are you're jumping on</font>

1208
00:50:12,690 --> 00:50:17,700
<font color="#E5E5E5">the bandwagon with this right you're not</font>

1209
00:50:14,760 --> 00:50:20,010
fighting against the the<font color="#E5E5E5"> rising tide</font><font color="#CCCCCC"> of</font>

1210
00:50:17,700 --> 00:50:23,759
DevOps because you will definitely<font color="#E5E5E5"> lose</font>

1211
00:50:20,010 --> 00:50:25,350
<font color="#E5E5E5">and then you just monitor and assess and</font>

1212
00:50:23,760 --> 00:50:27,450
<font color="#E5E5E5">then the last one doesn't necessarily</font>

1213
00:50:25,350 --> 00:50:30,450
<font color="#CCCCCC">have anything to do with a unit</font>

1214
00:50:27,450 --> 00:50:33,649
integration test but I see so many<font color="#CCCCCC"> app</font>

1215
00:50:30,450 --> 00:50:36,450
<font color="#CCCCCC">SEC teams just being mean to developers</font>

1216
00:50:33,650 --> 00:50:39,960
so don't sit there<font color="#CCCCCC"> and</font><font color="#E5E5E5"> blame</font><font color="#CCCCCC"> them</font><font color="#E5E5E5"> like I</font>

1217
00:50:36,450 --> 00:50:42,330
had a test and the the app<font color="#E5E5E5"> psych team</font>

1218
00:50:39,960 --> 00:50:44,790
was furious<font color="#CCCCCC"> that it took</font><font color="#E5E5E5"> like six</font><font color="#CCCCCC"> months</font>

1219
00:50:42,330 --> 00:50:46,470
<font color="#E5E5E5">to get this fix in on this poor</font>

1220
00:50:44,790 --> 00:50:47,970
overworked developer<font color="#E5E5E5"> and they were</font>

1221
00:50:46,470 --> 00:50:49,799
trying<font color="#E5E5E5"> everything they could to get me</font>

1222
00:50:47,970 --> 00:50:52,560
to say that the developer had done a bad

1223
00:50:49,800 --> 00:50:54,390
<font color="#CCCCCC">job and</font><font color="#E5E5E5"> I'm like look no it's not the</font>

1224
00:50:52,560 --> 00:50:56,009
developer<font color="#CCCCCC"> did</font><font color="#E5E5E5"> a bad job</font><font color="#CCCCCC"> you have one</font>

1225
00:50:54,390 --> 00:50:59,060
developer doing<font color="#E5E5E5"> this thing is like</font>

1226
00:50:56,010 --> 00:51:01,860
<font color="#E5E5E5">part-time duty this is your expectation</font>

1227
00:50:59,060 --> 00:51:03,720
<font color="#E5E5E5">these fixes should go in with the</font>

1228
00:51:01,860 --> 00:51:06,000
same priority if you have a critical

1229
00:51:03,720 --> 00:51:07,470
<font color="#E5E5E5">security vulnerability it should be</font>

1230
00:51:06,000 --> 00:51:09,540
<font color="#E5E5E5">handled about the same as if</font><font color="#CCCCCC"> you have a</font>

1231
00:51:07,470 --> 00:51:11,850
critical<font color="#E5E5E5"> functionality vulnerability a</font>

1232
00:51:09,540 --> 00:51:14,430
critical functionality problem in your

1233
00:51:11,850 --> 00:51:16,560
application if your app crashes or if

1234
00:51:14,430 --> 00:51:18,779
your app<font color="#CCCCCC"> has like this</font><font color="#E5E5E5"> just</font><font color="#CCCCCC"> god-awful</font>

1235
00:51:16,560 --> 00:51:20,190
sequel injection vulnerability in it<font color="#E5E5E5"> you</font>

1236
00:51:18,780 --> 00:51:24,420
should<font color="#CCCCCC"> treat those things</font><font color="#E5E5E5"> with the same</font>

1237
00:51:20,190 --> 00:51:26,130
level<font color="#E5E5E5"> of respect and so if that's</font><font color="#CCCCCC"> okay</font>

1238
00:51:24,420 --> 00:51:28,440
<font color="#E5E5E5">for you to have a functional problem for</font>

1239
00:51:26,130 --> 00:51:30,890
six months<font color="#CCCCCC"> you know then then</font><font color="#E5E5E5"> that's</font>

1240
00:51:28,440 --> 00:51:34,410
fine<font color="#E5E5E5"> and that's how you should treat it</font>

1241
00:51:30,890 --> 00:51:35,910
but but that's<font color="#E5E5E5"> pretty</font><font color="#CCCCCC"> much</font><font color="#E5E5E5"> it</font><font color="#CCCCCC"> thanks</font>

1242
00:51:34,410 --> 00:51:36,810
everybody for for<font color="#E5E5E5"> coming out</font><font color="#CCCCCC"> I know</font>

1243
00:51:35,910 --> 00:51:39,109
Sunday's<font color="#E5E5E5"> Ross</font>

1244
00:51:36,810 --> 00:51:46,740
so thanks anybody have any questions

1245
00:51:39,110 --> 00:51:52,820
<font color="#E5E5E5">yeah yeah so the the paper is up on the</font>

1246
00:51:46,740 --> 00:52:01,470
<font color="#CCCCCC">sans</font><font color="#E5E5E5"> reading room hmm what's that</font><font color="#CCCCCC"> a</font>

1247
00:51:52,820 --> 00:52:03,480
<font color="#CCCCCC">Steven deck and it's I want to say it's</font>

1248
00:52:01,470 --> 00:52:07,080
<font color="#CCCCCC">like abuse case testing in DevOps or</font>

1249
00:52:03,480 --> 00:52:09,120
something<font color="#E5E5E5"> like</font><font color="#CCCCCC"> that</font><font color="#E5E5E5"> but yeah so the the</font>

1250
00:52:07,080 --> 00:52:11,040
papers up on there<font color="#E5E5E5"> so that</font><font color="#CCCCCC"> way it's a</font>

1251
00:52:09,120 --> 00:52:14,490
little<font color="#E5E5E5"> bit better explained and has some</font>

1252
00:52:11,040 --> 00:52:18,450
some research behind it<font color="#CCCCCC"> I'm just Ranger</font>

1253
00:52:14,490 --> 00:52:19,649
<font color="#CCCCCC">Sean github so and I put all my unit and</font>

1254
00:52:18,450 --> 00:52:22,710
integration tests that<font color="#E5E5E5"> I use in the</font>

1255
00:52:19,650 --> 00:52:24,870
presentation on there<font color="#E5E5E5"> too and a no wasp</font>

1256
00:52:22,710 --> 00:52:27,630
juice shop is free so you can<font color="#E5E5E5"> go grab</font>

1257
00:52:24,870 --> 00:52:29,279
<font color="#CCCCCC">that I'm running on</font><font color="#E5E5E5"> docker in</font><font color="#CCCCCC"> Cali</font>

1258
00:52:27,630 --> 00:52:31,830
<font color="#E5E5E5">so you can just</font><font color="#CCCCCC"> throw it</font><font color="#E5E5E5"> out there and</font>

1259
00:52:29,280 --> 00:52:34,500
and it<font color="#E5E5E5"> works just fine that way so it's</font>

1260
00:52:31,830 --> 00:52:40,580
a good way<font color="#CCCCCC"> to</font><font color="#E5E5E5"> try to pitch this to</font>

1261
00:52:34,500 --> 00:52:40,580
people I<font color="#CCCCCC"> think so</font><font color="#E5E5E5"> do you have</font><font color="#CCCCCC"> a</font><font color="#E5E5E5"> question</font>

1262
00:53:46,340 --> 00:53:50,570
yes

1263
00:53:47,810 --> 00:53:53,029
the question is if you have a somebody

1264
00:53:50,570 --> 00:53:56,440
<font color="#E5E5E5">writing requirements who's not going to</font>

1265
00:53:53,030 --> 00:53:59,390
<font color="#E5E5E5">be a developer</font><font color="#CCCCCC"> and then that</font><font color="#E5E5E5"> person</font>

1266
00:53:56,440 --> 00:54:04,220
doesn't<font color="#E5E5E5"> include a lot of these things as</font>

1267
00:53:59,390 --> 00:54:06,440
as<font color="#E5E5E5"> requirements right</font><font color="#CCCCCC"> I guess if if the</font>

1268
00:54:04,220 --> 00:54:09,230
developers are<font color="#CCCCCC"> already on board the</font>

1269
00:54:06,440 --> 00:54:11,930
developers can have<font color="#E5E5E5"> so if they're</font>

1270
00:54:09,230 --> 00:54:14,840
allowed<font color="#CCCCCC"> to write their own</font><font color="#E5E5E5"> like use</font>

1271
00:54:11,930 --> 00:54:16,609
cases for<font color="#E5E5E5"> it they can potentially handle</font>

1272
00:54:14,840 --> 00:54:19,850
some of that but I would definitely I

1273
00:54:16,610 --> 00:54:22,310
mean<font color="#E5E5E5"> I always when I worked on I worked</font>

1274
00:54:19,850 --> 00:54:25,160
on internal app teams for a long time

1275
00:54:22,310 --> 00:54:27,080
<font color="#E5E5E5">before I went into</font><font color="#CCCCCC"> consulting and I</font>

1276
00:54:25,160 --> 00:54:29,149
would go do like lunch and learn

1277
00:54:27,080 --> 00:54:30,950
workshops with people and<font color="#E5E5E5"> just</font><font color="#CCCCCC"> try</font><font color="#E5E5E5"> to</font>

1278
00:54:29,150 --> 00:54:32,810
show them the benefits<font color="#CCCCCC"> of it</font><font color="#E5E5E5"> and the</font>

1279
00:54:30,950 --> 00:54:34,250
<font color="#E5E5E5">other thing is</font><font color="#CCCCCC"> just beating people over</font>

1280
00:54:32,810 --> 00:54:37,870
the head<font color="#CCCCCC"> with metrics</font>

1281
00:54:34,250 --> 00:54:40,280
I love metrics<font color="#E5E5E5"> and I feel like</font>

1282
00:54:37,870 --> 00:54:42,680
<font color="#E5E5E5">application stuff it's really</font><font color="#CCCCCC"> easy to</font>

1283
00:54:40,280 --> 00:54:44,030
<font color="#E5E5E5">get good metrics on this right you</font>

1284
00:54:42,680 --> 00:54:45,830
already<font color="#E5E5E5"> are running these</font><font color="#CCCCCC"> things through</font>

1285
00:54:44,030 --> 00:54:47,990
you know how many<font color="#CCCCCC"> errors that they're</font>

1286
00:54:45,830 --> 00:54:49,970
having<font color="#CCCCCC"> come back on the application so</font>

1287
00:54:47,990 --> 00:54:51,830
like if they're<font color="#E5E5E5"> not doing error handling</font>

1288
00:54:49,970 --> 00:54:53,750
in their code<font color="#E5E5E5"> and it gets to production</font>

1289
00:54:51,830 --> 00:54:56,330
<font color="#E5E5E5">theoretically you know there should be</font>

1290
00:54:53,750 --> 00:54:58,940
some error handling issues in the actual

1291
00:54:56,330 --> 00:55:01,819
production<font color="#CCCCCC"> app and so you can say like</font>

1292
00:54:58,940 --> 00:55:04,580
keep trending<font color="#E5E5E5"> lists of those and be like</font>

1293
00:55:01,820 --> 00:55:07,970
hey look this is requiring us all<font color="#E5E5E5"> to do</font>

1294
00:55:04,580 --> 00:55:10,600
all this rework on things and and with

1295
00:55:07,970 --> 00:55:12,799
<font color="#E5E5E5">DevOps you're trying to do it as as</font>

1296
00:55:10,600 --> 00:55:15,710
close to the code as possible<font color="#E5E5E5"> because</font>

1297
00:55:12,800 --> 00:55:19,820
<font color="#E5E5E5">you get a and this</font><font color="#CCCCCC"> isn't like a total</font>

1298
00:55:15,710 --> 00:55:22,100
DevOps presentation<font color="#E5E5E5"> but with DevOps</font><font color="#CCCCCC"> one</font>

1299
00:55:19,820 --> 00:55:25,220
of the big benefits<font color="#E5E5E5"> is the developers</font>

1300
00:55:22,100 --> 00:55:26,810
<font color="#E5E5E5">find out I've made a</font><font color="#CCCCCC"> mistake</font><font color="#E5E5E5"> like right</font>

1301
00:55:25,220 --> 00:55:28,850
<font color="#CCCCCC">after they've written the code so if you</font>

1302
00:55:26,810 --> 00:55:29,990
do ten deployments a day<font color="#E5E5E5"> that developer</font>

1303
00:55:28,850 --> 00:55:32,150
goes to push the production

1304
00:55:29,990 --> 00:55:34,310
something doesn't<font color="#E5E5E5"> work right they know</font>

1305
00:55:32,150 --> 00:55:36,440
and they<font color="#CCCCCC"> just finished</font><font color="#E5E5E5"> working on that</font>

1306
00:55:34,310 --> 00:55:38,210
so it's<font color="#E5E5E5"> not so bad you're not coming</font>

1307
00:55:36,440 --> 00:55:39,950
back in six<font color="#E5E5E5"> months later trying to do</font>

1308
00:55:38,210 --> 00:55:42,350
<font color="#E5E5E5">this and the bugs cost you a bajillion</font>

1309
00:55:39,950 --> 00:55:45,890
<font color="#E5E5E5">dollars to fix at that point</font><font color="#CCCCCC"> right</font><font color="#E5E5E5"> so</font>

1310
00:55:42,350 --> 00:55:49,160
it's a monetary thing<font color="#E5E5E5"> in my opinion</font><font color="#CCCCCC"> if</font>

1311
00:55:45,890 --> 00:55:51,080
you can push that left<font color="#CCCCCC"> as as much</font><font color="#E5E5E5"> as</font>

1312
00:55:49,160 --> 00:55:53,180
possible<font color="#CCCCCC"> and</font><font color="#E5E5E5"> then you can build like</font>

1313
00:55:51,080 --> 00:55:55,520
business<font color="#E5E5E5"> cases so that's why it's just</font>

1314
00:55:53,180 --> 00:55:57,799
important to keep<font color="#CCCCCC"> fine metrics that</font><font color="#E5E5E5"> are</font>

1315
00:55:55,520 --> 00:56:00,590
<font color="#E5E5E5">gonna support</font><font color="#CCCCCC"> which you are like your</font>

1316
00:55:57,800 --> 00:56:01,400
agenda<font color="#E5E5E5"> and then try to weasel those into</font>

1317
00:56:00,590 --> 00:56:03,230
your

1318
00:56:01,400 --> 00:56:06,800
and<font color="#E5E5E5"> app sack teams that's what I always</font>

1319
00:56:03,230 --> 00:56:08,450
did because as soon<font color="#E5E5E5"> as I put like</font><font color="#CCCCCC"> like</font>

1320
00:56:06,800 --> 00:56:10,430
you<font color="#E5E5E5"> always want all your lines to like</font>

1321
00:56:08,450 --> 00:56:11,720
go the same way<font color="#CCCCCC"> on things and</font><font color="#E5E5E5"> so like</font>

1322
00:56:10,430 --> 00:56:13,940
we'd<font color="#CCCCCC"> have these</font><font color="#E5E5E5"> lines like that</font><font color="#CCCCCC"> are</font>

1323
00:56:11,720 --> 00:56:16,220
supposed to<font color="#E5E5E5"> be trending down and as soon</font>

1324
00:56:13,940 --> 00:56:19,790
<font color="#E5E5E5">as my boss would go and start briefing</font>

1325
00:56:16,220 --> 00:56:21,649
<font color="#E5E5E5">that in front of like the CIO and</font>

1326
00:56:19,790 --> 00:56:23,450
everything the CIO would be like why in

1327
00:56:21,650 --> 00:56:25,790
the name of<font color="#CCCCCC"> God</font><font color="#E5E5E5"> is this line going up</font>

1328
00:56:23,450 --> 00:56:27,410
and<font color="#E5E5E5"> you're like well because we're not</font>

1329
00:56:25,790 --> 00:56:29,270
<font color="#E5E5E5">doing</font><font color="#CCCCCC"> this and then you</font><font color="#E5E5E5"> have the answer</font>

1330
00:56:27,410 --> 00:56:32,060
ready and you're like hey look if we can

1331
00:56:29,270 --> 00:56:34,610
get this in here then it's<font color="#CCCCCC"> gonna</font><font color="#E5E5E5"> help us</font>

1332
00:56:32,060 --> 00:56:35,630
out<font color="#E5E5E5"> and make that line go down so as</font>

1333
00:56:34,610 --> 00:56:38,110
long<font color="#E5E5E5"> as</font><font color="#CCCCCC"> you can</font><font color="#E5E5E5"> deliver on</font><font color="#CCCCCC"> that promise</font>

1334
00:56:35,630 --> 00:56:41,900
<font color="#CCCCCC">that'll work out</font><font color="#E5E5E5"> well for</font><font color="#CCCCCC"> you</font>

1335
00:56:38,110 --> 00:56:44,480
anybody else<font color="#CCCCCC"> all</font><font color="#E5E5E5"> right thanks everybody</font>

1336
00:56:41,900 --> 00:56:46,590
for coming<font color="#CCCCCC"> I appreciate</font><font color="#E5E5E5"> having an</font>

1337
00:56:44,480 --> 00:56:51,349
audience<font color="#CCCCCC"> good</font><font color="#E5E5E5"> not being alone</font>

1338
00:56:46,590 --> 00:56:51,349
[Applause]

