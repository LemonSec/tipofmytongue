1
00:00:00,050 --> 00:00:06,950
<font color="#E5E5E5">you grab</font><font color="#CCCCCC"> the back door we're good</font><font color="#E5E5E5"> great</font>

2
00:00:10,400 --> 00:00:15,540
everyone how you<font color="#E5E5E5"> doing I'll Circle City</font>

3
00:00:13,650 --> 00:00:17,730
<font color="#CCCCCC">training</font><font color="#E5E5E5"> a shirker</font><font color="#CCCCCC"> City Khan treating</font>

4
00:00:15,540 --> 00:00:19,288
you so far<font color="#E5E5E5"> good good</font>

5
00:00:17,730 --> 00:00:22,500
forgive me if<font color="#CCCCCC"> I</font><font color="#E5E5E5"> spaced out I'm on a</font>

6
00:00:19,289 --> 00:00:23,880
bunch of allergy meds so thanks for

7
00:00:22,500 --> 00:00:25,289
<font color="#E5E5E5">coming I know it's the last stop of the</font>

8
00:00:23,880 --> 00:00:26,580
<font color="#E5E5E5">day it's been a long day I'm sure your</font>

9
00:00:25,289 --> 00:00:29,369
minds are already<font color="#E5E5E5"> full</font><font color="#CCCCCC"> of a</font><font color="#E5E5E5"> lot of</font>

10
00:00:26,580 --> 00:00:32,278
<font color="#CCCCCC">information</font><font color="#E5E5E5"> so unfortunately this one's</font>

11
00:00:29,369 --> 00:00:34,079
<font color="#E5E5E5">going to be a doozy</font><font color="#CCCCCC"> it's I got 60 slides</font>

12
00:00:32,279 --> 00:00:35,700
they're going to<font color="#E5E5E5"> follow like pretty</font>

13
00:00:34,079 --> 00:00:37,350
quickly<font color="#CCCCCC"> I'm going to try to you know</font>

14
00:00:35,700 --> 00:00:39,270
<font color="#CCCCCC">avoid the death by PowerPoint I'm gonna</font>

15
00:00:37,350 --> 00:00:42,960
do a lot of<font color="#E5E5E5"> lot</font><font color="#CCCCCC"> of talking I do have</font>

16
00:00:39,270 --> 00:00:44,670
like<font color="#E5E5E5"> a</font><font color="#CCCCCC"> two-minute</font><font color="#E5E5E5"> video demo</font><font color="#CCCCCC"> but again</font>

17
00:00:42,960 --> 00:00:46,320
I'll try to hustle through<font color="#E5E5E5"> this and</font>

18
00:00:44,670 --> 00:00:48,450
leave some<font color="#CCCCCC"> questions toward the end I'm</font>

19
00:00:46,320 --> 00:00:51,719
<font color="#E5E5E5">happy to stick around afterwards if you</font>

20
00:00:48,450 --> 00:00:54,930
<font color="#E5E5E5">have any</font><font color="#CCCCCC"> follow-up</font><font color="#E5E5E5"> so my name</font><font color="#CCCCCC"> is Bryan</font>

21
00:00:51,719 --> 00:00:59,129
makinen<font color="#E5E5E5"> ch my talks titled the</font><font color="#CCCCCC"> fads and</font>

22
00:00:54,930 --> 00:01:00,149
<font color="#E5E5E5">the curious so here's a quick agenda of</font>

23
00:00:59,129 --> 00:01:01,410
<font color="#CCCCCC">what we're</font><font color="#E5E5E5"> gonna be</font><font color="#CCCCCC"> talking about</font><font color="#E5E5E5"> the</font>

24
00:01:00,149 --> 00:01:03,480
day<font color="#E5E5E5"> I'd go</font><font color="#CCCCCC"> over a brief introduction</font>

25
00:01:01,410 --> 00:01:05,789
<font color="#CCCCCC">about myself</font><font color="#E5E5E5"> and where I gathered my</font>

26
00:01:03,480 --> 00:01:08,640
<font color="#E5E5E5">sources of inspiration for this talk a</font>

27
00:01:05,790 --> 00:01:09,659
quick<font color="#E5E5E5"> overview of faz some of the AWS</font>

28
00:01:08,640 --> 00:01:12,990
services that we're going to<font color="#E5E5E5"> be</font>

29
00:01:09,659 --> 00:01:14,310
concerned<font color="#E5E5E5"> with</font><font color="#CCCCCC"> types of attack vectors</font>

30
00:01:12,990 --> 00:01:18,570
and then how<font color="#E5E5E5"> it can mitigate some of</font>

31
00:01:14,310 --> 00:01:21,210
those so introduction again<font color="#CCCCCC"> Brian</font><font color="#E5E5E5"> McCann</font>

32
00:01:18,570 --> 00:01:24,360
in case you<font color="#E5E5E5"> already forgot my hacker</font>

33
00:01:21,210 --> 00:01:26,309
handles<font color="#CCCCCC"> Aphex listening a lot</font><font color="#E5E5E5"> of effects</font>

34
00:01:24,360 --> 00:01:28,710
twin while<font color="#CCCCCC"> it was coding so hey thanks</font>

35
00:01:26,310 --> 00:01:31,259
<font color="#CCCCCC">there's my twitter</font><font color="#E5E5E5"> handle creatively</font>

36
00:01:28,710 --> 00:01:32,850
named brianmacdonnach<font color="#CCCCCC"> I mean a founder</font>

37
00:01:31,259 --> 00:01:35,130
and<font color="#E5E5E5"> executive director</font><font color="#CCCCCC"> at pervades</font>

38
00:01:32,850 --> 00:01:39,149
cybersecurity it's a<font color="#E5E5E5"> five-person startup</font>

39
00:01:35,130 --> 00:01:42,390
and<font color="#E5E5E5"> Dallas also</font><font color="#CCCCCC"> Prive del LC my</font>

40
00:01:39,150 --> 00:01:44,759
backgrounds in a variety<font color="#CCCCCC"> of disciplines</font>

41
00:01:42,390 --> 00:01:46,920
as most of us<font color="#CCCCCC"> probably are</font><font color="#E5E5E5"> started off</font>

42
00:01:44,759 --> 00:01:48,930
in<font color="#E5E5E5"> pen testing got into security</font>

43
00:01:46,920 --> 00:01:50,549
architecture digital forensics<font color="#E5E5E5"> and now</font>

44
00:01:48,930 --> 00:01:53,220
I'm<font color="#CCCCCC"> really focusing</font><font color="#E5E5E5"> a lot of research on</font>

45
00:01:50,549 --> 00:01:55,290
<font color="#E5E5E5">cloud containerization and trying to get</font>

46
00:01:53,220 --> 00:01:57,000
<font color="#CCCCCC">into AI a little bit and by that I'm not</font>

47
00:01:55,290 --> 00:02:01,619
<font color="#CCCCCC">talking about automated scripts</font><font color="#E5E5E5"> actually</font>

48
00:01:57,000 --> 00:02:03,030
<font color="#CCCCCC">AI so an inspirational</font><font color="#E5E5E5"> source is here so</font>

49
00:02:01,619 --> 00:02:03,659
there's a gentleman by the name of rich

50
00:02:03,030 --> 00:02:06,600
<font color="#E5E5E5">Jones</font>

51
00:02:03,659 --> 00:02:08,789
there's his Twitter handle<font color="#CCCCCC"> it's a gun</font><font color="#E5E5E5"> I</font>

52
00:02:06,600 --> 00:02:11,549
<font color="#CCCCCC">owe</font><font color="#E5E5E5"> I think it's a security company</font><font color="#CCCCCC"> that</font>

53
00:02:08,788 --> 00:02:13,440
<font color="#E5E5E5">he owns or is</font><font color="#CCCCCC"> he may</font><font color="#E5E5E5"> be a partner of he</font>

54
00:02:11,550 --> 00:02:15,180
did<font color="#E5E5E5"> a talk called</font>

55
00:02:13,440 --> 00:02:17,370
gone in 60<font color="#E5E5E5"> milliseconds he's done</font>

56
00:02:15,180 --> 00:02:19,590
<font color="#E5E5E5">several iterations of</font><font color="#CCCCCC"> him really good</font>

57
00:02:17,370 --> 00:02:22,370
stuff kind of<font color="#E5E5E5"> laid</font><font color="#CCCCCC"> the groundwork for a</font>

58
00:02:19,590 --> 00:02:24,930
lot of<font color="#CCCCCC"> this</font><font color="#E5E5E5"> type of research on AWS and</font>

59
00:02:22,370 --> 00:02:27,180
<font color="#CCCCCC">lamda specifically or otherwise known as</font>

60
00:02:24,930 --> 00:02:30,000
function as a service another<font color="#E5E5E5"> gentleman</font>

61
00:02:27,180 --> 00:02:33,540
named Andrew Krug presented<font color="#E5E5E5"> last year at</font>

62
00:02:30,000 --> 00:02:35,280
blackhat Vegas<font color="#E5E5E5"> saw him talk his talk was</font>

63
00:02:33,540 --> 00:02:37,320
titled hacking<font color="#E5E5E5"> serve</font><font color="#CCCCCC"> Atlas</font><font color="#E5E5E5"> runtimes</font>

64
00:02:35,280 --> 00:02:39,480
again<font color="#E5E5E5"> really good inspirational source</font>

65
00:02:37,320 --> 00:02:41,670
and then just<font color="#CCCCCC"> want to give a quick</font><font color="#E5E5E5"> shout</font>

66
00:02:39,480 --> 00:02:43,790
<font color="#E5E5E5">out I'm from</font><font color="#CCCCCC"> Dallas we have a really</font>

67
00:02:41,670 --> 00:02:47,369
<font color="#CCCCCC">really awesome hacker community they're</font>

68
00:02:43,790 --> 00:02:51,150
<font color="#CCCCCC">the first one North Texas</font><font color="#E5E5E5"> cybersecurity</font>

69
00:02:47,370 --> 00:02:53,700
group Dallas hackers DC<font color="#CCCCCC"> 214 DFW and</font>

70
00:02:51,150 --> 00:02:55,460
<font color="#CCCCCC">OWASP Dallas feel</font><font color="#E5E5E5"> free to look them up</font>

71
00:02:53,700 --> 00:02:59,280
on<font color="#E5E5E5"> Twitter they've got some really cool</font>

72
00:02:55,460 --> 00:03:02,750
<font color="#E5E5E5">members and content alrighty so getting</font>

73
00:02:59,280 --> 00:03:05,280
to it what is fast so quickly<font color="#CCCCCC"> and just</font>

74
00:03:02,750 --> 00:03:07,740
<font color="#CCCCCC">by a</font><font color="#E5E5E5"> show of hands how many of</font><font color="#CCCCCC"> you are</font>

75
00:03:05,280 --> 00:03:09,870
<font color="#E5E5E5">familiar with cloud just generally</font>

76
00:03:07,740 --> 00:03:13,050
<font color="#CCCCCC">speaking cool and then</font><font color="#E5E5E5"> containerization</font>

77
00:03:09,870 --> 00:03:17,250
and function as a service or service

78
00:03:13,050 --> 00:03:18,690
<font color="#CCCCCC">cool fantastic right on</font><font color="#E5E5E5"> so a lot of this</font>

79
00:03:17,250 --> 00:03:19,890
<font color="#CCCCCC">again I'll just do</font><font color="#E5E5E5"> talking points</font>

80
00:03:18,690 --> 00:03:21,239
because it sounds<font color="#CCCCCC"> like you guys already</font>

81
00:03:19,890 --> 00:03:23,820
know a lot about<font color="#E5E5E5"> it</font>

82
00:03:21,239 --> 00:03:27,000
server lists as its name<font color="#CCCCCC"> implies</font><font color="#E5E5E5"> is</font><font color="#CCCCCC"> not</font>

83
00:03:23,820 --> 00:03:31,440
actually service its containers running

84
00:03:27,000 --> 00:03:32,670
<font color="#E5E5E5">beneath and event-driven application in</font>

85
00:03:31,440 --> 00:03:36,900
this<font color="#E5E5E5"> case we're gonna be talking about</font>

86
00:03:32,670 --> 00:03:38,100
AWS<font color="#CCCCCC"> Lambda benefits of</font><font color="#E5E5E5"> which are minimal</font>

87
00:03:36,900 --> 00:03:41,239
cloud infrastructure to maintain

88
00:03:38,100 --> 00:03:44,190
administer configure<font color="#CCCCCC"> hatchets etc</font><font color="#E5E5E5"> and</font>

89
00:03:41,239 --> 00:03:47,900
because of that minimal operational

90
00:03:44,190 --> 00:03:49,859
overhead<font color="#CCCCCC"> growth estimates on this</font>

91
00:03:47,900 --> 00:03:53,940
<font color="#E5E5E5">valuation of seven point seven</font><font color="#CCCCCC"> five</font>

92
00:03:49,860 --> 00:03:55,769
billion USD by 2021 forecasted to grow

93
00:03:53,940 --> 00:03:57,000
<font color="#E5E5E5">your of a year at a rate about</font><font color="#CCCCCC"> 33</font>

94
00:03:55,769 --> 00:04:00,230
percent so it's gonna be a phenomenal

95
00:03:57,000 --> 00:04:02,850
<font color="#CCCCCC">growth here in the next</font><font color="#E5E5E5"> few</font><font color="#CCCCCC"> years so</font>

96
00:04:00,230 --> 00:04:06,030
<font color="#CCCCCC">what</font><font color="#E5E5E5"> is faz for those of you who didn't</font>

97
00:04:02,850 --> 00:04:07,560
<font color="#CCCCCC">raise your hand just</font><font color="#E5E5E5"> describing that</font>

98
00:04:06,030 --> 00:04:08,970
here's some<font color="#CCCCCC"> of the from a business</font>

99
00:04:07,560 --> 00:04:11,370
standpoint some of the benefits of<font color="#E5E5E5"> its</font>

100
00:04:08,970 --> 00:04:14,310
own the left you see<font color="#CCCCCC"> they rack and stack</font>

101
00:04:11,370 --> 00:04:17,340
<font color="#E5E5E5">rack-mounted servers you know to deploy</font>

102
00:04:14,310 --> 00:04:21,418
and maintain you know<font color="#CCCCCC"> ton of</font><font color="#E5E5E5"> deploy was</font>

103
00:04:17,339 --> 00:04:24,299
days cost agility scalability<font color="#E5E5E5"> not so</font>

104
00:04:21,418 --> 00:04:25,620
<font color="#E5E5E5">ideal then we moved into virtualization</font>

105
00:04:24,300 --> 00:04:27,510
we're trying to squeeze more out<font color="#CCCCCC"> of</font>

106
00:04:25,620 --> 00:04:31,110
<font color="#CCCCCC">those</font><font color="#E5E5E5"> hardware</font><font color="#CCCCCC"> resources by putting</font>

107
00:04:27,510 --> 00:04:33,539
multiple VMs<font color="#CCCCCC"> onto one hardware platform</font>

108
00:04:31,110 --> 00:04:35,240
<font color="#CCCCCC">and then somebody somewhere wasn't</font><font color="#E5E5E5"> happy</font>

109
00:04:33,540 --> 00:04:37,950
enough<font color="#CCCCCC"> with that</font><font color="#E5E5E5"> so they came</font><font color="#CCCCCC"> up with</font>

110
00:04:35,240 --> 00:04:41,850
containers docker being probably<font color="#E5E5E5"> though</font>

111
00:04:37,950 --> 00:04:43,800
well<font color="#CCCCCC"> LX c LC XX that was it was</font><font color="#E5E5E5"> probably</font>

112
00:04:41,850 --> 00:04:45,030
the first<font color="#E5E5E5"> but Dockers become more the</font>

113
00:04:43,800 --> 00:04:46,950
predominant<font color="#E5E5E5"> one now you've got</font>

114
00:04:45,030 --> 00:04:50,520
<font color="#E5E5E5">kubernetes</font><font color="#CCCCCC"> and its other variants</font><font color="#E5E5E5"> and</font>

115
00:04:46,950 --> 00:04:53,599
whatnot<font color="#CCCCCC"> so</font><font color="#E5E5E5"> we can deploy those very very</font>

116
00:04:50,520 --> 00:04:56,880
quickly<font color="#CCCCCC"> they're they're transient</font><font color="#E5E5E5"> state</font>

117
00:04:53,600 --> 00:04:58,910
<font color="#E5E5E5">cost is low give it you know three out</font>

118
00:04:56,880 --> 00:05:01,860
of four stars<font color="#CCCCCC"> and now we're looking at</font>

119
00:04:58,910 --> 00:05:04,190
function as a service it's you know

120
00:05:01,860 --> 00:05:06,210
millisecond very very transient

121
00:05:04,190 --> 00:05:08,850
<font color="#CCCCCC">up-and-down very minimal maintenance</font>

122
00:05:06,210 --> 00:05:10,469
<font color="#CCCCCC">it's pretty</font><font color="#E5E5E5"> much</font><font color="#CCCCCC"> you're you know</font><font color="#E5E5E5"> pushing</font>

123
00:05:08,850 --> 00:05:13,950
code out to<font color="#CCCCCC"> this fully managed</font>

124
00:05:10,470 --> 00:05:14,630
infrastructure and it runs<font color="#E5E5E5"> any questions</font>

125
00:05:13,950 --> 00:05:19,260
<font color="#E5E5E5">so far</font>

126
00:05:14,630 --> 00:05:21,210
cool so AWS services again<font color="#E5E5E5"> I've done a</font>

127
00:05:19,260 --> 00:05:24,450
lot<font color="#E5E5E5"> of focus on AWS I work with it</font>

128
00:05:21,210 --> 00:05:26,549
pretty<font color="#CCCCCC"> regularly so quick overview of</font>

129
00:05:24,450 --> 00:05:28,800
lambda<font color="#E5E5E5"> again it's their function as a</font>

130
00:05:26,550 --> 00:05:30,270
service implementation<font color="#CCCCCC"> this just</font>

131
00:05:28,800 --> 00:05:33,420
description<font color="#CCCCCC"> I've ripped off their</font>

132
00:05:30,270 --> 00:05:36,830
<font color="#CCCCCC">website but</font><font color="#E5E5E5"> reason doing so is after</font>

133
00:05:33,420 --> 00:05:39,180
reading that hopefully you<font color="#E5E5E5"> all have</font><font color="#CCCCCC"> now</font>

134
00:05:36,830 --> 00:05:41,609
this is kind<font color="#CCCCCC"> of what I pulled</font><font color="#E5E5E5"> out</font><font color="#CCCCCC"> of it</font>

135
00:05:39,180 --> 00:05:43,620
right runs your code on underlying

136
00:05:41,610 --> 00:05:46,230
compute with back-end<font color="#E5E5E5"> services and I was</font>

137
00:05:43,620 --> 00:05:48,060
like that sounds<font color="#E5E5E5"> like a really good</font>

138
00:05:46,230 --> 00:05:50,340
<font color="#E5E5E5">opportunity</font><font color="#CCCCCC"> to start doing some</font><font color="#E5E5E5"> research</font>

139
00:05:48,060 --> 00:05:55,860
on how<font color="#CCCCCC"> that can</font><font color="#E5E5E5"> be manipulated</font><font color="#CCCCCC"> and</font>

140
00:05:50,340 --> 00:05:57,239
potentially abused<font color="#E5E5E5"> so again not to kill</font>

141
00:05:55,860 --> 00:06:01,010
you with death by PowerPoint the big

142
00:05:57,240 --> 00:06:03,420
takeaway<font color="#CCCCCC"> here really is with most</font>

143
00:06:01,010 --> 00:06:05,550
<font color="#E5E5E5">containerization and particularly</font><font color="#CCCCCC"> faz</font>

144
00:06:03,420 --> 00:06:09,180
<font color="#CCCCCC">it's stateless got a federal</font><font color="#E5E5E5"> resources</font>

145
00:06:05,550 --> 00:06:11,730
read-only file system<font color="#E5E5E5"> for billing</font>

146
00:06:09,180 --> 00:06:13,650
purposes<font color="#CCCCCC"> again because of the big</font>

147
00:06:11,730 --> 00:06:18,780
benefits<font color="#E5E5E5"> from a business and operational</font>

148
00:06:13,650 --> 00:06:21,780
standpoint<font color="#CCCCCC"> lambda will run for a minimum</font>

149
00:06:18,780 --> 00:06:24,299
<font color="#CCCCCC">of one millisecond AWS will charge you a</font>

150
00:06:21,780 --> 00:06:28,320
<font color="#E5E5E5">minimum of one second they have a</font>

151
00:06:24,300 --> 00:06:31,110
maximum<font color="#E5E5E5"> lifetime of 300 seconds and</font>

152
00:06:28,320 --> 00:06:34,890
<font color="#CCCCCC">scaleable it's monitored</font><font color="#E5E5E5"> AWS provides</font>

153
00:06:31,110 --> 00:06:38,550
<font color="#E5E5E5">this x-ray</font><font color="#CCCCCC"> service they call it to help</font>

154
00:06:34,890 --> 00:06:40,610
you find<font color="#E5E5E5"> resource utilization metrics</font>

155
00:06:38,550 --> 00:06:42,590
<font color="#E5E5E5">telemetry data basically on your</font>

156
00:06:40,610 --> 00:06:45,830
right it helps you find some<font color="#E5E5E5"> bugs and</font>

157
00:06:42,590 --> 00:06:47,810
<font color="#E5E5E5">stuff</font><font color="#CCCCCC"> like that and later on I'll kind</font>

158
00:06:45,830 --> 00:06:52,520
of allude back to that on how some<font color="#CCCCCC"> of</font>

159
00:06:47,810 --> 00:06:54,199
that might be tampered with<font color="#CCCCCC"> so I level</font>

160
00:06:52,520 --> 00:06:55,639
overview of<font color="#E5E5E5"> what may be like a lambda</font>

161
00:06:54,199 --> 00:06:59,270
architecture would<font color="#E5E5E5"> look like so on the</font>

162
00:06:55,639 --> 00:07:01,759
<font color="#CCCCCC">left</font><font color="#E5E5E5"> you'll see this is by no means a</font>

163
00:06:59,270 --> 00:07:04,250
holistic list but<font color="#E5E5E5"> just an example of</font>

164
00:07:01,759 --> 00:07:07,430
different<font color="#E5E5E5"> AWS services that you can plug</font>

165
00:07:04,250 --> 00:07:10,009
<font color="#CCCCCC">in to lamda different</font><font color="#E5E5E5"> event sources if</font>

166
00:07:07,430 --> 00:07:12,379
you will<font color="#E5E5E5"> so right there in the middle</font>

167
00:07:10,009 --> 00:07:16,009
you've got<font color="#CCCCCC"> ECS which is Amazon's elastic</font>

168
00:07:12,379 --> 00:07:18,349
container service this<font color="#CCCCCC"> is a bit of a</font>

169
00:07:16,009 --> 00:07:20,090
<font color="#E5E5E5">presumption on my part there's</font><font color="#CCCCCC"> no you</font>

170
00:07:18,349 --> 00:07:21,860
<font color="#CCCCCC">know documented evidence that this</font><font color="#E5E5E5"> is</font>

171
00:07:20,090 --> 00:07:23,989
<font color="#E5E5E5">actually how it is but based on</font><font color="#CCCCCC"> my</font>

172
00:07:21,860 --> 00:07:25,930
research this is my<font color="#E5E5E5"> best guess</font><font color="#CCCCCC"> is that</font>

173
00:07:23,990 --> 00:07:29,270
<font color="#E5E5E5">lambda is actually running on an EC</font>

174
00:07:25,930 --> 00:07:32,599
<font color="#CCCCCC">set.2 cluster</font><font color="#E5E5E5"> and when it's invoked</font>

175
00:07:29,270 --> 00:07:34,490
fires up<font color="#CCCCCC"> bootstraps your code fires up a</font>

176
00:07:32,599 --> 00:07:37,990
docker container<font color="#CCCCCC"> execute it and</font><font color="#E5E5E5"> then</font>

177
00:07:34,490 --> 00:07:41,379
dies and then behind<font color="#E5E5E5"> the</font><font color="#CCCCCC"> scenes</font>

178
00:07:37,990 --> 00:07:44,599
<font color="#CCCCCC">currently it supports</font><font color="#E5E5E5"> Python no js'</font>

179
00:07:41,379 --> 00:07:47,090
c-sharp and<font color="#CCCCCC"> Java with plans</font><font color="#E5E5E5"> to expand</font>

180
00:07:44,599 --> 00:07:48,378
into I<font color="#E5E5E5"> can trouble with the other</font>

181
00:07:47,090 --> 00:07:54,500
<font color="#E5E5E5">language it was off the top of my head</font>

182
00:07:48,379 --> 00:07:57,080
but<font color="#E5E5E5"> um yeah</font><font color="#CCCCCC"> so a quick example of what</font>

183
00:07:54,500 --> 00:07:58,699
what how<font color="#E5E5E5"> lambda actually operates so</font>

184
00:07:57,080 --> 00:08:03,229
<font color="#CCCCCC">they're at the input you'll see</font><font color="#E5E5E5"> a kind</font>

185
00:07:58,699 --> 00:08:06,050
<font color="#E5E5E5">of a JSON formatted key value pair</font><font color="#CCCCCC"> you</font>

186
00:08:03,229 --> 00:08:08,620
can<font color="#E5E5E5"> receive that from any of those other</font>

187
00:08:06,050 --> 00:08:11,240
<font color="#CCCCCC">services or your own that</font><font color="#E5E5E5"> you write and</font>

188
00:08:08,620 --> 00:08:14,419
on the right you'll see<font color="#E5E5E5"> the code</font><font color="#CCCCCC"> against</font>

189
00:08:11,240 --> 00:08:16,580
<font color="#E5E5E5">kind of a hello world</font><font color="#CCCCCC"> lambda function</font>

190
00:08:14,419 --> 00:08:18,349
but it's basically just<font color="#E5E5E5"> printing out the</font>

191
00:08:16,580 --> 00:08:21,258
key value pairs<font color="#CCCCCC"> and then back down</font><font color="#E5E5E5"> on</font>

192
00:08:18,349 --> 00:08:22,610
the left corner<font color="#E5E5E5"> you see the output of</font>

193
00:08:21,259 --> 00:08:25,490
<font color="#CCCCCC">that function right so it's saying</font>

194
00:08:22,610 --> 00:08:34,659
loading function event<font color="#CCCCCC"> key 1 value 1</font>

195
00:08:25,490 --> 00:08:37,279
cetera et cetera so<font color="#CCCCCC"> AWS</font><font color="#E5E5E5"> I am is the I</font>

196
00:08:34,659 --> 00:08:42,349
would<font color="#E5E5E5"> say the</font><font color="#CCCCCC"> foundation of all security</font>

197
00:08:37,279 --> 00:08:44,779
<font color="#E5E5E5">and AWS they have</font><font color="#CCCCCC"> very granular access</font>

198
00:08:42,349 --> 00:08:45,980
<font color="#E5E5E5">control it's a what I would</font><font color="#CCCCCC"> call more or</font>

199
00:08:44,779 --> 00:08:49,100
less like a mandatory<font color="#E5E5E5"> access control</font>

200
00:08:45,980 --> 00:08:51,140
<font color="#E5E5E5">model meaning it's</font><font color="#CCCCCC"> deny by default so</font>

201
00:08:49,100 --> 00:08:52,610
you know if you're going<font color="#E5E5E5"> to create a new</font>

202
00:08:51,140 --> 00:08:54,140
user they don't even<font color="#E5E5E5"> have the</font><font color="#CCCCCC"> ability to</font>

203
00:08:52,610 --> 00:08:56,320
<font color="#E5E5E5">change their password</font>

204
00:08:54,140 --> 00:08:59,689
<font color="#CCCCCC">and you</font><font color="#E5E5E5"> really have to</font><font color="#CCCCCC"> go one-by-one</font>

205
00:08:56,320 --> 00:09:02,720
<font color="#E5E5E5">explicitly allow users and/or resources</font>

206
00:08:59,690 --> 00:09:07,519
<font color="#E5E5E5">to perform certain actions on certain</font>

207
00:09:02,720 --> 00:09:10,640
<font color="#E5E5E5">resources just kind of brushed over that</font>

208
00:09:07,519 --> 00:09:13,160
a<font color="#E5E5E5"> minute ago</font><font color="#CCCCCC"> in the context of AWS you</font>

209
00:09:10,640 --> 00:09:15,529
actually have a user but they extend

210
00:09:13,160 --> 00:09:18,199
that to include<font color="#E5E5E5"> resources so you can</font>

211
00:09:15,529 --> 00:09:19,970
assign<font color="#E5E5E5"> some of these roles and policies</font>

212
00:09:18,200 --> 00:09:22,450
that<font color="#CCCCCC"> will show</font><font color="#E5E5E5"> here in just a sec you</font>

213
00:09:19,970 --> 00:09:25,310
can apply to ec2 instances for<font color="#CCCCCC"> example</font>

214
00:09:22,450 --> 00:09:28,040
<font color="#E5E5E5">and they can assume a role temporarily</font>

215
00:09:25,310 --> 00:09:31,369
and execute whatever<font color="#E5E5E5"> action is desired</font>

216
00:09:28,040 --> 00:09:34,610
on an intended resource<font color="#E5E5E5"> again big</font>

217
00:09:31,370 --> 00:09:35,240
takeaway<font color="#CCCCCC"> is that</font><font color="#E5E5E5"> the users the accounts</font>

218
00:09:34,610 --> 00:09:37,730
for<font color="#CCCCCC"> that matter</font>

219
00:09:35,240 --> 00:09:41,690
are<font color="#CCCCCC"> created with no permissions by</font>

220
00:09:37,730 --> 00:09:43,040
default<font color="#E5E5E5"> no big news here</font><font color="#CCCCCC"> nothing special</font>

221
00:09:41,690 --> 00:09:44,779
about<font color="#E5E5E5"> a group it's really</font><font color="#CCCCCC"> just a</font>

222
00:09:43,040 --> 00:09:46,370
collection<font color="#E5E5E5"> of users with common</font>

223
00:09:44,779 --> 00:09:50,420
permissions you might have an admins

224
00:09:46,370 --> 00:09:55,670
group or a you<font color="#E5E5E5"> know backup</font><font color="#CCCCCC"> DRP group</font>

225
00:09:50,420 --> 00:09:58,519
something like that roles as<font color="#E5E5E5"> I just kind</font>

226
00:09:55,670 --> 00:10:00,829
<font color="#CCCCCC">of mentioned with with ec2 instances and</font>

227
00:09:58,519 --> 00:10:02,839
resources collectively or services<font color="#E5E5E5"> you</font>

228
00:10:00,829 --> 00:10:06,260
<font color="#CCCCCC">can apply the roles</font><font color="#E5E5E5"> you can also do that</font>

229
00:10:02,839 --> 00:10:08,779
for users as<font color="#CCCCCC"> well those</font><font color="#E5E5E5"> credentials are</font>

230
00:10:06,260 --> 00:10:12,800
retrieved on an ec2 instance from the

231
00:10:08,779 --> 00:10:17,390
ec2 metadata<font color="#E5E5E5"> or from AWS</font><font color="#CCCCCC"> a simple token</font>

232
00:10:12,800 --> 00:10:20,420
<font color="#CCCCCC">service the policies</font><font color="#E5E5E5"> are the point at</font>

233
00:10:17,390 --> 00:10:23,630
which<font color="#CCCCCC"> your your access controls are</font>

234
00:10:20,420 --> 00:10:25,729
actually<font color="#E5E5E5"> enforced so JSON formatted</font>

235
00:10:23,630 --> 00:10:29,300
object defines explicit permissions

236
00:10:25,730 --> 00:10:31,040
against deny by default<font color="#CCCCCC"> they have AWS</font>

237
00:10:29,300 --> 00:10:32,510
managed policies so if you don't want to

238
00:10:31,040 --> 00:10:34,160
go<font color="#CCCCCC"> anything</font><font color="#E5E5E5"> or create anything from</font>

239
00:10:32,510 --> 00:10:36,350
scratch<font color="#E5E5E5"> which is pretty cumbersome to do</font>

240
00:10:34,160 --> 00:10:38,480
<font color="#E5E5E5">they give you a nice template to</font><font color="#CCCCCC"> work</font>

241
00:10:36,350 --> 00:10:40,220
with you<font color="#E5E5E5"> can keep that one or you</font><font color="#CCCCCC"> can do</font>

242
00:10:38,480 --> 00:10:43,640
what they call it<font color="#E5E5E5"> like a custom inline</font>

243
00:10:40,220 --> 00:10:45,649
template maybe they give<font color="#CCCCCC"> you a managed</font>

244
00:10:43,640 --> 00:10:47,209
and you want one additional permission

245
00:10:45,649 --> 00:10:49,760
added to that you can put that inline

246
00:10:47,209 --> 00:10:51,739
<font color="#CCCCCC">really</font><font color="#E5E5E5"> easy to use</font><font color="#CCCCCC"> extremely granular</font>

247
00:10:49,760 --> 00:10:52,399
<font color="#CCCCCC">which can</font><font color="#E5E5E5"> be a double-edged</font><font color="#CCCCCC"> sword we'll</font>

248
00:10:51,740 --> 00:10:55,579
get to that<font color="#CCCCCC"> in</font><font color="#E5E5E5"> a bit</font>

249
00:10:52,399 --> 00:10:59,480
<font color="#CCCCCC">but it at the same time supports entity</font>

250
00:10:55,579 --> 00:11:04,239
<font color="#E5E5E5">wildcards</font><font color="#CCCCCC"> so that also tends to open</font><font color="#E5E5E5"> the</font>

251
00:10:59,480 --> 00:11:05,590
the<font color="#CCCCCC"> door for compromised at times</font>

252
00:11:04,240 --> 00:11:10,330
so this is

253
00:11:05,590 --> 00:11:12,490
example policy<font color="#CCCCCC"> I am</font><font color="#E5E5E5"> confused</font><font color="#CCCCCC"> because</font>

254
00:11:10,330 --> 00:11:15,040
it's a<font color="#E5E5E5"> it they can get quite complex</font>

255
00:11:12,490 --> 00:11:17,320
this<font color="#E5E5E5"> is</font><font color="#CCCCCC"> a pretty simple</font><font color="#E5E5E5"> one actually we</font>

256
00:11:15,040 --> 00:11:21,069
<font color="#E5E5E5">have here an s3 bucket</font><font color="#CCCCCC"> that we'd be</font>

257
00:11:17,320 --> 00:11:23,590
granting access to the bucket<font color="#E5E5E5"> name as</font>

258
00:11:21,070 --> 00:11:25,660
Colonel Sanders<font color="#E5E5E5"> and I'm sorry the</font>

259
00:11:23,590 --> 00:11:29,500
resource is called Colonel Sanders<font color="#CCCCCC"> um</font>

260
00:11:25,660 --> 00:11:32,260
gosh<font color="#E5E5E5"> allergy meds the resource is called</font>

261
00:11:29,500 --> 00:11:34,240
KFC bucket<font color="#E5E5E5"> the principle that access it</font>

262
00:11:32,260 --> 00:11:36,550
would be someone named Colonel<font color="#E5E5E5"> Sanders</font>

263
00:11:34,240 --> 00:11:38,200
you can put conditions in there when

264
00:11:36,550 --> 00:11:42,359
they can access it<font color="#E5E5E5"> before after during</font>

265
00:11:38,200 --> 00:11:44,650
<font color="#E5E5E5">this era etc any questions on that</font><font color="#CCCCCC"> I'm</font>

266
00:11:42,360 --> 00:11:49,300
really<font color="#E5E5E5"> flying by because I really want</font>

267
00:11:44,650 --> 00:11:51,730
<font color="#E5E5E5">to focus on this section good cool so</font>

268
00:11:49,300 --> 00:11:54,189
just a<font color="#E5E5E5"> quick disclaimer</font><font color="#CCCCCC"> is that</font><font color="#E5E5E5"> I've</font>

269
00:11:51,730 --> 00:11:55,960
been<font color="#CCCCCC"> at a couple other presentations</font><font color="#E5E5E5"> I</font>

270
00:11:54,190 --> 00:11:58,270
think most notably last year there was a

271
00:11:55,960 --> 00:12:00,940
<font color="#CCCCCC">DEFCON</font><font color="#E5E5E5"> kind of a side talk I forget what</font>

272
00:11:58,270 --> 00:12:03,520
they<font color="#CCCCCC"> call</font><font color="#E5E5E5"> those</font><font color="#CCCCCC"> I sat through it and</font>

273
00:12:00,940 --> 00:12:05,740
kind of wonder<font color="#CCCCCC"> how is he doing</font><font color="#E5E5E5"> this and</font>

274
00:12:03,520 --> 00:12:07,510
it turned out all the<font color="#CCCCCC"> appropriate</font>

275
00:12:05,740 --> 00:12:09,280
permissions<font color="#CCCCCC"> were already</font><font color="#E5E5E5"> in place and I</font>

276
00:12:07,510 --> 00:12:10,600
<font color="#E5E5E5">was like well that's not really telling</font>

277
00:12:09,280 --> 00:12:12,579
me<font color="#E5E5E5"> anything and more I got to talk to</font>

278
00:12:10,600 --> 00:12:16,060
him the more<font color="#E5E5E5"> I understood that you</font><font color="#CCCCCC"> know</font>

279
00:12:12,580 --> 00:12:17,890
he's got a<font color="#E5E5E5"> point is that do their</font>

280
00:12:16,060 --> 00:12:19,569
esoteric nature<font color="#E5E5E5"> and they very</font>

281
00:12:17,890 --> 00:12:22,750
fine-grained and they can become<font color="#CCCCCC"> very</font>

282
00:12:19,570 --> 00:12:24,280
<font color="#E5E5E5">complex a lot of these policies become</font>

283
00:12:22,750 --> 00:12:25,480
very<font color="#E5E5E5"> relaxed</font><font color="#CCCCCC"> right they</font><font color="#E5E5E5"> need to</font>

284
00:12:24,280 --> 00:12:27,189
troubleshoot something<font color="#CCCCCC"> they're going to</font>

285
00:12:25,480 --> 00:12:29,830
insert a wild card maybe they forget<font color="#CCCCCC"> to</font>

286
00:12:27,190 --> 00:12:31,570
change<font color="#E5E5E5"> it back so you know culprits</font>

287
00:12:29,830 --> 00:12:34,300
include everything from<font color="#CCCCCC"> serverless web</font>

288
00:12:31,570 --> 00:12:38,110
service frameworks<font color="#E5E5E5"> automation tools for</font>

289
00:12:34,300 --> 00:12:40,270
<font color="#CCCCCC">CI CD deployments</font><font color="#E5E5E5"> third-party solutions</font>

290
00:12:38,110 --> 00:12:42,160
and untrained cloud admins right maybe

291
00:12:40,270 --> 00:12:44,230
they've<font color="#CCCCCC"> just assumed the</font><font color="#E5E5E5"> role because</font>

292
00:12:42,160 --> 00:12:45,880
<font color="#E5E5E5">they were promoted off as some other or</font>

293
00:12:44,230 --> 00:12:48,280
maybe they were a server of admin for

294
00:12:45,880 --> 00:12:50,230
<font color="#E5E5E5">on-prem systems and they're moving to</font>

295
00:12:48,280 --> 00:12:52,060
cloud they're doing their<font color="#CCCCCC"> best</font><font color="#E5E5E5"> but</font><font color="#CCCCCC"> they</font>

296
00:12:50,230 --> 00:12:54,480
really<font color="#E5E5E5"> don't understand the</font><font color="#CCCCCC"> whole I am</font>

297
00:12:52,060 --> 00:12:57,099
thing and<font color="#CCCCCC"> truly is its own science so</font>

298
00:12:54,480 --> 00:13:01,420
<font color="#E5E5E5">he'll fall to their own but things like</font>

299
00:12:57,100 --> 00:13:04,750
<font color="#E5E5E5">that</font><font color="#CCCCCC"> do happens so in terms of attack</font>

300
00:13:01,420 --> 00:13:06,910
vectors<font color="#E5E5E5"> as you would do</font><font color="#CCCCCC"> on any</font><font color="#E5E5E5"> sort of</font>

301
00:13:04,750 --> 00:13:08,140
research<font color="#E5E5E5"> penetration testing engagement</font>

302
00:13:06,910 --> 00:13:09,610
anything like that<font color="#E5E5E5"> you know first thing</font>

303
00:13:08,140 --> 00:13:11,080
<font color="#CCCCCC">you want to do is really</font><font color="#E5E5E5"> get an</font><font color="#CCCCCC"> idea of</font>

304
00:13:09,610 --> 00:13:13,330
<font color="#E5E5E5">what your target looks like so we're</font>

305
00:13:11,080 --> 00:13:15,340
going to do go<font color="#CCCCCC"> over some active</font>

306
00:13:13,330 --> 00:13:16,630
reconnaissance techniques<font color="#E5E5E5"> I'm going to</font>

307
00:13:15,340 --> 00:13:18,610
<font color="#E5E5E5">look at how we can start height</font>

308
00:13:16,630 --> 00:13:21,910
hijacking credentials

309
00:13:18,610 --> 00:13:24,069
of the underlying lambda container what

310
00:13:21,910 --> 00:13:25,509
we can do that<font color="#E5E5E5"> and how we can do that</font>

311
00:13:24,069 --> 00:13:27,128
<font color="#E5E5E5">and how we might</font><font color="#CCCCCC"> be</font><font color="#E5E5E5"> able</font><font color="#CCCCCC"> to use some of</font>

312
00:13:25,509 --> 00:13:29,860
<font color="#CCCCCC">the permissions</font><font color="#E5E5E5"> that have been granted</font>

313
00:13:27,129 --> 00:13:31,449
through I am<font color="#E5E5E5"> we're gonna look at how we</font>

314
00:13:29,860 --> 00:13:33,730
can gain persistent remote access

315
00:13:31,449 --> 00:13:35,679
through those means<font color="#E5E5E5"> and then we're going</font>

316
00:13:33,730 --> 00:13:37,989
<font color="#E5E5E5">to look at reverse engineering the</font>

317
00:13:35,679 --> 00:13:40,809
lambda runtime environment<font color="#E5E5E5"> so they have</font>

318
00:13:37,989 --> 00:13:45,489
a couple<font color="#CCCCCC"> interesting things you can do</font>

319
00:13:40,809 --> 00:13:47,079
with<font color="#E5E5E5"> that as well so curious minds want</font>

320
00:13:45,489 --> 00:13:49,959
to know<font color="#E5E5E5"> this again this is the</font><font color="#CCCCCC"> phasma</font>

321
00:13:47,079 --> 00:13:51,488
curious<font color="#E5E5E5"> right so it's a list here</font><font color="#CCCCCC"> but</font>

322
00:13:49,959 --> 00:13:54,040
you know anytime<font color="#E5E5E5"> you you're thinking</font>

323
00:13:51,489 --> 00:13:55,959
about getting credentials<font color="#E5E5E5"> it's usually</font>

324
00:13:54,040 --> 00:13:57,670
an<font color="#E5E5E5"> attackers dream if you can get</font>

325
00:13:55,959 --> 00:13:59,679
<font color="#CCCCCC">credentials you can do local privilege</font>

326
00:13:57,670 --> 00:14:01,110
escalation you can do lateral<font color="#E5E5E5"> movement</font>

327
00:13:59,679 --> 00:14:03,429
there's a number<font color="#E5E5E5"> of things once you have</font>

328
00:14:01,110 --> 00:14:05,709
<font color="#E5E5E5">credentials as we'll see</font><font color="#CCCCCC"> here in a</font>

329
00:14:03,429 --> 00:14:08,649
minute there's a couple<font color="#E5E5E5"> things that AWS</font>

330
00:14:05,709 --> 00:14:11,018
<font color="#E5E5E5">has put in place to</font><font color="#CCCCCC"> try to</font><font color="#E5E5E5"> prevent</font><font color="#CCCCCC"> that</font>

331
00:14:08,649 --> 00:14:14,019
but there's<font color="#E5E5E5"> also some workarounds from</font>

332
00:14:11,019 --> 00:14:15,610
an offensive<font color="#E5E5E5"> standpoint so how can we</font>

333
00:14:14,019 --> 00:14:18,129
<font color="#E5E5E5">abuse the credentials what's the</font>

334
00:14:15,610 --> 00:14:19,899
operating system the<font color="#E5E5E5"> network</font><font color="#CCCCCC"> a little</font>

335
00:14:18,129 --> 00:14:22,449
<font color="#CCCCCC">further</font><font color="#E5E5E5"> down you'll see how our code</font>

336
00:14:19,899 --> 00:14:25,149
bootstraps if I put in malicious code

337
00:14:22,449 --> 00:14:28,329
how does AWS handle it<font color="#E5E5E5"> what data can</font><font color="#CCCCCC"> we</font>

338
00:14:25,149 --> 00:14:31,209
<font color="#E5E5E5">control once it's bootstrap and can we</font>

339
00:14:28,329 --> 00:14:33,248
change the runtime execution flow is AWS

340
00:14:31,209 --> 00:14:36,638
has done a phenomenal job<font color="#E5E5E5"> at locking</font>

341
00:14:33,249 --> 00:14:40,360
<font color="#E5E5E5">down this environment right I'm getting</font>

342
00:14:36,639 --> 00:14:42,369
ahead of myself<font color="#E5E5E5"> but kudos to them</font><font color="#CCCCCC"> for</font>

343
00:14:40,360 --> 00:14:43,179
<font color="#E5E5E5">what they've already done there's just</font>

344
00:14:42,369 --> 00:14:46,569
always going to<font color="#CCCCCC"> be a way around</font>

345
00:14:43,179 --> 00:14:48,549
<font color="#E5E5E5">something right if you got</font><font color="#CCCCCC"> a enough time</font>

346
00:14:46,569 --> 00:14:50,618
and resources<font color="#E5E5E5"> on</font><font color="#CCCCCC"> your hands whether</font><font color="#E5E5E5"> it's</font>

347
00:14:48,549 --> 00:14:52,419
<font color="#E5E5E5">just a</font><font color="#CCCCCC"> board hacker or nation-state</font>

348
00:14:50,619 --> 00:14:53,919
entity someone's always<font color="#E5E5E5"> going</font><font color="#CCCCCC"> to</font><font color="#E5E5E5"> find a</font>

349
00:14:52,419 --> 00:14:58,389
<font color="#E5E5E5">way around any control you've</font>

350
00:14:53,919 --> 00:15:01,329
implemented so<font color="#E5E5E5"> first place I looked was</font>

351
00:14:58,389 --> 00:15:02,949
AWS lambda<font color="#CCCCCC"> f ecus it's like what</font><font color="#E5E5E5"> can I</font>

352
00:15:01,329 --> 00:15:05,258
do with this<font color="#E5E5E5"> thing I was really</font><font color="#CCCCCC"> new to</font>

353
00:15:02,949 --> 00:15:07,689
lambda<font color="#E5E5E5"> and</font><font color="#CCCCCC"> I was just wanting to kind</font><font color="#E5E5E5"> of</font>

354
00:15:05,259 --> 00:15:09,879
get<font color="#E5E5E5"> no scrape the</font><font color="#CCCCCC"> surface with Python</font>

355
00:15:07,689 --> 00:15:12,099
start coding with<font color="#E5E5E5"> Python I've done a</font>

356
00:15:09,879 --> 00:15:14,110
number of<font color="#E5E5E5"> other development languages</font>

357
00:15:12,100 --> 00:15:15,850
but never really jumped in and did

358
00:15:14,110 --> 00:15:18,220
anything with Python so this would be a

359
00:15:15,850 --> 00:15:19,660
<font color="#E5E5E5">really cool a cool opportunity to learn</font>

360
00:15:18,220 --> 00:15:22,720
<font color="#E5E5E5">a little</font><font color="#CCCCCC"> bit more and</font><font color="#E5E5E5"> apply it and do</font>

361
00:15:19,660 --> 00:15:25,059
some<font color="#E5E5E5"> research with</font><font color="#CCCCCC"> it so first question</font>

362
00:15:22,720 --> 00:15:27,459
on that<font color="#CCCCCC"> I came across relevant to this</font>

363
00:15:25,059 --> 00:15:28,529
research was does<font color="#E5E5E5"> AWS land to support</font>

364
00:15:27,459 --> 00:15:32,069
environment variables

365
00:15:28,529 --> 00:15:34,379
yes it does so that's cooling<font color="#CCCCCC"> you can</font>

366
00:15:32,069 --> 00:15:38,219
easily create or modify and let's

367
00:15:34,379 --> 00:15:40,560
remember<font color="#E5E5E5"> that from the lambda console</font>

368
00:15:38,220 --> 00:15:42,810
CLI or SDKs<font color="#CCCCCC"> today we're going to be</font>

369
00:15:40,560 --> 00:15:45,569
<font color="#E5E5E5">mostly talking about the lambda web</font>

370
00:15:42,810 --> 00:15:49,199
console<font color="#E5E5E5"> but a lot</font><font color="#CCCCCC"> of it as well can we</font>

371
00:15:45,569 --> 00:15:50,910
do through the<font color="#E5E5E5"> CLI</font><font color="#CCCCCC"> and SDKs what</font>

372
00:15:49,199 --> 00:15:52,859
restrictions<font color="#E5E5E5"> apply now I found this</font>

373
00:15:50,910 --> 00:15:55,529
really interesting<font color="#CCCCCC"> is</font><font color="#E5E5E5"> lambda attempts to</font>

374
00:15:52,860 --> 00:15:57,959
impose as few<font color="#CCCCCC"> restrictions as possible</font>

375
00:15:55,529 --> 00:16:01,370
on normal language<font color="#E5E5E5"> and operating systems</font>

376
00:15:57,959 --> 00:16:04,170
activities nothing<font color="#E5E5E5"> that's awesome</font><font color="#CCCCCC"> for</font>

377
00:16:01,370 --> 00:16:05,790
for the research anyway<font color="#E5E5E5"> right is that</font>

378
00:16:04,170 --> 00:16:07,498
<font color="#CCCCCC">gives me a lot</font><font color="#E5E5E5"> of flexibility on going</font>

379
00:16:05,790 --> 00:16:09,599
in and profiling the the<font color="#E5E5E5"> underlying</font>

380
00:16:07,499 --> 00:16:10,769
container<font color="#E5E5E5"> there are a few activities</font>

381
00:16:09,600 --> 00:16:12,269
that are disabled again<font color="#E5E5E5"> they've done</font>

382
00:16:10,769 --> 00:16:15,569
their due diligence<font color="#CCCCCC"> they're making sure</font>

383
00:16:12,269 --> 00:16:19,079
<font color="#E5E5E5">that you're not sending out a bunch of</font>

384
00:16:15,569 --> 00:16:21,269
traffic on TCP port<font color="#CCCCCC"> 25 and you know</font>

385
00:16:19,079 --> 00:16:22,410
sitting fishing a<font color="#E5E5E5"> phishing campaign or</font>

386
00:16:21,269 --> 00:16:26,339
something like that<font color="#E5E5E5"> so they've done some</font>

387
00:16:22,410 --> 00:16:28,469
due diligence there<font color="#CCCCCC"> can my application</font>

388
00:16:26,339 --> 00:16:31,170
trigger an AWS<font color="#CCCCCC"> lambeth function directly</font>

389
00:16:28,470 --> 00:16:34,379
yeah can in<font color="#E5E5E5"> fact we're gonna go over how</font>

390
00:16:31,170 --> 00:16:36,930
<font color="#E5E5E5">we can use Amazon API gateway to gain</font>

391
00:16:34,379 --> 00:16:39,600
some persistent remote access to<font color="#E5E5E5"> the to</font>

392
00:16:36,930 --> 00:16:41,128
the environment but it says here you can

393
00:16:39,600 --> 00:16:43,559
<font color="#CCCCCC">invoke the</font><font color="#E5E5E5"> lambda</font><font color="#CCCCCC"> function using a</font>

394
00:16:41,129 --> 00:16:46,139
custom<font color="#E5E5E5"> event through AWS lambdas and VOC</font>

395
00:16:43,559 --> 00:16:47,459
API<font color="#E5E5E5"> you guys able to read this okay</font>

396
00:16:46,139 --> 00:16:50,879
sometimes it's a<font color="#E5E5E5"> little washed out with</font>

397
00:16:47,459 --> 00:16:53,638
<font color="#E5E5E5">the light okay</font><font color="#CCCCCC"> second one</font><font color="#E5E5E5"> how can</font><font color="#CCCCCC"> I</font>

398
00:16:50,879 --> 00:16:56,579
invoke a lambda<font color="#E5E5E5"> function</font><font color="#CCCCCC"> over HTTP this</font>

399
00:16:53,639 --> 00:16:58,860
is kind<font color="#E5E5E5"> of alluding to that</font><font color="#CCCCCC"> AWS API</font>

400
00:16:56,579 --> 00:17:00,059
<font color="#E5E5E5">gateway we're going to use so we're</font>

401
00:16:58,860 --> 00:17:02,819
gonna we're<font color="#E5E5E5"> gonna use that to gain</font>

402
00:17:00,059 --> 00:17:05,189
remote<font color="#E5E5E5"> a persistent remote access but on</font>

403
00:17:02,819 --> 00:17:06,688
top<font color="#CCCCCC"> of</font><font color="#E5E5E5"> that it's going to be over</font><font color="#CCCCCC"> HTTP</font>

404
00:17:05,189 --> 00:17:10,789
<font color="#E5E5E5">and it's gonna be difficult to intercept</font>

405
00:17:06,689 --> 00:17:10,789
and detect so even<font color="#E5E5E5"> better for us</font>

406
00:17:11,000 --> 00:17:17,579
so I started<font color="#E5E5E5"> this after after reading</font>

407
00:17:15,959 --> 00:17:19,230
<font color="#E5E5E5">you know we controlled the environment</font>

408
00:17:17,579 --> 00:17:21,178
variables only<font color="#CCCCCC"> well what what kind of</font>

409
00:17:19,230 --> 00:17:22,679
environment variables could possibly be

410
00:17:21,179 --> 00:17:25,620
in a<font color="#CCCCCC"> lambda function or the container</font>

411
00:17:22,679 --> 00:17:27,360
underneath<font color="#E5E5E5"> it so again I was really new</font>

412
00:17:25,619 --> 00:17:29,580
to Python<font color="#E5E5E5"> this was last summer I started</font>

413
00:17:27,359 --> 00:17:31,770
working<font color="#E5E5E5"> on this so I was like</font><font color="#CCCCCC"> hmm well</font>

414
00:17:29,580 --> 00:17:34,500
<font color="#E5E5E5">go do some</font><font color="#CCCCCC"> research and how we can kind</font>

415
00:17:31,770 --> 00:17:36,270
<font color="#CCCCCC">of enumerate through Python what the</font>

416
00:17:34,500 --> 00:17:39,510
<font color="#CCCCCC">environment variables are</font><font color="#E5E5E5"> and I</font><font color="#CCCCCC"> just did</font>

417
00:17:36,270 --> 00:17:40,180
a little<font color="#E5E5E5"> very very simple OS system and</font>

418
00:17:39,510 --> 00:17:41,830
you pass it

419
00:17:40,180 --> 00:17:44,110
whatever<font color="#CCCCCC"> she'll command</font><font color="#E5E5E5"> you want</font><font color="#CCCCCC"> to</font>

420
00:17:41,830 --> 00:17:45,970
<font color="#CCCCCC">execute I passed an ls1 the list the</font>

421
00:17:44,110 --> 00:17:50,050
directory<font color="#E5E5E5"> see what kind</font><font color="#CCCCCC"> of files are</font>

422
00:17:45,970 --> 00:17:52,210
there LS was simple<font color="#CCCCCC"> I did a couple</font>

423
00:17:50,050 --> 00:17:55,200
<font color="#E5E5E5">others I started on like</font><font color="#CCCCCC"> Cat Cat</font><font color="#E5E5E5"> Etsy</font>

424
00:17:52,210 --> 00:17:57,310
password<font color="#E5E5E5"> a number of other things and</font>

425
00:17:55,200 --> 00:17:59,500
worked<font color="#E5E5E5"> for</font><font color="#CCCCCC"> about a month</font><font color="#E5E5E5"> and</font><font color="#CCCCCC"> then</font>

426
00:17:57,310 --> 00:18:01,419
<font color="#E5E5E5">suddenly</font><font color="#CCCCCC"> stopped working so I don't know</font>

427
00:17:59,500 --> 00:18:04,180
if that you<font color="#E5E5E5"> know maybe triggered</font>

428
00:18:01,420 --> 00:18:08,590
something<font color="#E5E5E5"> AWS is very good at staying on</font>

429
00:18:04,180 --> 00:18:11,050
top of detecting attacks<font color="#E5E5E5"> I've done some</font>

430
00:18:08,590 --> 00:18:12,820
scanning<font color="#E5E5E5"> from my own V PC before</font><font color="#CCCCCC"> going</font>

431
00:18:11,050 --> 00:18:15,659
<font color="#E5E5E5">out to</font><font color="#CCCCCC"> the internet and they were they</font>

432
00:18:12,820 --> 00:18:18,250
were on it<font color="#CCCCCC"> like</font><font color="#E5E5E5"> that so chances are I</font>

433
00:18:15,660 --> 00:18:20,380
probably<font color="#E5E5E5"> you know raised a flag</font>

434
00:18:18,250 --> 00:18:22,210
somewhere or someone<font color="#E5E5E5"> else did doing some</font>

435
00:18:20,380 --> 00:18:24,550
<font color="#E5E5E5">similar research and they now do</font>

436
00:18:22,210 --> 00:18:26,670
<font color="#E5E5E5">restrict some of the OS</font><font color="#CCCCCC"> system</font>

437
00:18:24,550 --> 00:18:31,030
parameters that you can<font color="#E5E5E5"> pass to</font><font color="#CCCCCC"> that</font><font color="#E5E5E5"> so</font>

438
00:18:26,670 --> 00:18:32,380
but nonetheless I said to myself well

439
00:18:31,030 --> 00:18:33,940
why don't we<font color="#E5E5E5"> just</font><font color="#CCCCCC"> dump</font><font color="#E5E5E5"> all the</font>

440
00:18:32,380 --> 00:18:36,040
environment variables<font color="#E5E5E5"> and again I can</font><font color="#CCCCCC"> I</font>

441
00:18:33,940 --> 00:18:37,870
hope you can see this<font color="#E5E5E5"> I tried to break</font>

442
00:18:36,040 --> 00:18:40,960
<font color="#E5E5E5">these slides up and make these as big as</font>

443
00:18:37,870 --> 00:18:43,840
<font color="#CCCCCC">possible</font><font color="#E5E5E5"> but</font><font color="#CCCCCC"> um basically you you saw</font>

444
00:18:40,960 --> 00:18:45,580
the example<font color="#E5E5E5"> function earlier all this</font>

445
00:18:43,840 --> 00:18:47,980
<font color="#E5E5E5">really is doing is I'm printing out</font><font color="#CCCCCC"> all</font>

446
00:18:45,580 --> 00:18:50,530
<font color="#CCCCCC">the OS environment</font><font color="#E5E5E5"> variables of the</font>

447
00:18:47,980 --> 00:18:52,720
underlying shell<font color="#E5E5E5"> right so I'm gonna get</font>

448
00:18:50,530 --> 00:18:55,330
an idea<font color="#E5E5E5"> of what is</font><font color="#CCCCCC"> art this is all</font>

449
00:18:52,720 --> 00:18:58,420
through the web console so this is the

450
00:18:55,330 --> 00:19:00,730
output<font color="#CCCCCC"> that I got now you'll notice this</font>

451
00:18:58,420 --> 00:19:04,420
orange arrow here is pointing to this

452
00:19:00,730 --> 00:19:06,010
variable<font color="#E5E5E5"> called AWS</font><font color="#CCCCCC"> session token' for</font>

453
00:19:04,420 --> 00:19:09,130
those of you that<font color="#E5E5E5"> aren't familiar with</font>

454
00:19:06,010 --> 00:19:13,390
<font color="#E5E5E5">AWS I am you know we talked about users</font>

455
00:19:09,130 --> 00:19:15,910
and<font color="#CCCCCC"> roles and policies</font><font color="#E5E5E5"> they they have</font>

456
00:19:13,390 --> 00:19:20,320
this simple<font color="#CCCCCC"> token service</font><font color="#E5E5E5"> and they grant</font>

457
00:19:15,910 --> 00:19:23,380
this token to you for temporary access

458
00:19:20,320 --> 00:19:24,850
<font color="#E5E5E5">to resources so that it's not hard-coded</font>

459
00:19:23,380 --> 00:19:27,940
you<font color="#CCCCCC"> don't you know you're not</font><font color="#E5E5E5"> putting it</font>

460
00:19:24,850 --> 00:19:31,540
into your<font color="#E5E5E5"> code or you know maybe it's a</font>

461
00:19:27,940 --> 00:19:36,070
<font color="#E5E5E5">a developer that</font><font color="#CCCCCC"> has what they call a</font>

462
00:19:31,540 --> 00:19:37,629
secret access key and access key ID you

463
00:19:36,070 --> 00:19:39,790
can<font color="#CCCCCC"> put it</font><font color="#E5E5E5"> your your command-line</font>

464
00:19:37,630 --> 00:19:42,190
interface configuration file and<font color="#CCCCCC"> that</font>

465
00:19:39,790 --> 00:19:44,220
<font color="#CCCCCC">will</font><font color="#E5E5E5"> grant you access this is a nicer</font>

466
00:19:42,190 --> 00:19:47,050
<font color="#CCCCCC">way a little bit more seamless way to</font>

467
00:19:44,220 --> 00:19:49,360
you know<font color="#E5E5E5"> on board resources and users</font>

468
00:19:47,050 --> 00:19:51,070
and<font color="#CCCCCC"> grant access to</font><font color="#E5E5E5"> them nonetheless I</font>

469
00:19:49,360 --> 00:19:52,510
looked at this<font color="#E5E5E5"> and I</font><font color="#CCCCCC"> said well we've got</font>

470
00:19:51,070 --> 00:19:54,549
access<font color="#E5E5E5"> to a session</font><font color="#CCCCCC"> to</font>

471
00:19:52,510 --> 00:19:56,860
for this<font color="#E5E5E5"> container and likely it's</font>

472
00:19:54,549 --> 00:19:58,840
running with whatever<font color="#E5E5E5"> I am role that</font>

473
00:19:56,860 --> 00:20:01,689
I've<font color="#CCCCCC"> applied to it and again</font><font color="#E5E5E5"> for</font>

474
00:19:58,840 --> 00:20:04,000
<font color="#E5E5E5">purposes of you know</font><font color="#CCCCCC"> proof</font><font color="#E5E5E5"> of concept</font>

475
00:20:01,690 --> 00:20:07,660
<font color="#E5E5E5">and research</font><font color="#CCCCCC"> it just gave it access</font>

476
00:20:04,000 --> 00:20:11,020
<font color="#E5E5E5">makes it go ahead</font><font color="#CCCCCC"> and have access to s3</font>

477
00:20:07,660 --> 00:20:12,940
and<font color="#CCCCCC"> at DynamoDB and a couple</font><font color="#E5E5E5"> other</font>

478
00:20:11,020 --> 00:20:14,950
things<font color="#E5E5E5"> so I can read and write</font><font color="#CCCCCC"> and</font><font color="#E5E5E5"> just</font>

479
00:20:12,940 --> 00:20:18,220
kind of see what parameters I could

480
00:20:14,950 --> 00:20:20,590
operate<font color="#E5E5E5"> with them so I said well why</font>

481
00:20:18,220 --> 00:20:22,150
<font color="#E5E5E5">don't we just</font><font color="#CCCCCC"> go</font><font color="#E5E5E5"> ahead and dump all the</font>

482
00:20:20,590 --> 00:20:25,178
really<font color="#E5E5E5"> cool</font>

483
00:20:22,150 --> 00:20:28,179
I am credential environment variables

484
00:20:25,179 --> 00:20:31,570
<font color="#E5E5E5">and as you can see here those are</font><font color="#CCCCCC"> the</font>

485
00:20:28,179 --> 00:20:35,290
names we've got AWS access key ID secret

486
00:20:31,570 --> 00:20:37,960
access key AWS security token AWS

487
00:20:35,290 --> 00:20:40,000
session token the security token and the

488
00:20:37,960 --> 00:20:42,280
session token are the same values<font color="#CCCCCC"> I</font>

489
00:20:40,000 --> 00:20:44,230
don't know why that is<font color="#CCCCCC"> but I suspect</font>

490
00:20:42,280 --> 00:20:46,450
<font color="#E5E5E5">they're gonna probably phase out one for</font>

491
00:20:44,230 --> 00:20:49,480
the<font color="#E5E5E5"> other sometime in the future</font>

492
00:20:46,450 --> 00:20:51,580
<font color="#E5E5E5">yeah just it it returns</font><font color="#CCCCCC"> the credentials</font>

493
00:20:49,480 --> 00:20:52,419
at the end and now we've we've<font color="#E5E5E5"> got what</font>

494
00:20:51,580 --> 00:20:54,520
you can see<font color="#E5E5E5"> here</font>

495
00:20:52,419 --> 00:20:56,410
don't get excited these are<font color="#E5E5E5"> already</font>

496
00:20:54,520 --> 00:21:05,168
expired you can't copy and paste them

497
00:20:56,410 --> 00:21:06,790
<font color="#E5E5E5">and go hijack my account</font><font color="#CCCCCC"> alrighty</font><font color="#E5E5E5"> so so</font>

498
00:21:05,169 --> 00:21:09,820
there's some limitations<font color="#CCCCCC"> with</font><font color="#E5E5E5"> this right</font>

499
00:21:06,790 --> 00:21:12,580
because we're using a web interface<font color="#CCCCCC"> and</font>

500
00:21:09,820 --> 00:21:14,980
passing<font color="#E5E5E5"> commands it's kind of a</font>

501
00:21:12,580 --> 00:21:17,559
spray-and-pray approach it's<font color="#E5E5E5"> uh it's</font>

502
00:21:14,980 --> 00:21:18,970
really<font color="#CCCCCC"> inefficient</font><font color="#E5E5E5"> it got me to a really</font>

503
00:21:17,559 --> 00:21:20,500
<font color="#CCCCCC">good starting point</font><font color="#E5E5E5"> that I couldn't kind</font>

504
00:21:18,970 --> 00:21:24,460
of leap off of<font color="#CCCCCC"> and do a little</font><font color="#E5E5E5"> bit</font><font color="#CCCCCC"> more</font>

505
00:21:20,500 --> 00:21:25,990
<font color="#CCCCCC">research but the best</font><font color="#E5E5E5"> workaround</font>

506
00:21:24,460 --> 00:21:28,059
obviously is to have some<font color="#E5E5E5"> sort</font><font color="#CCCCCC"> of</font>

507
00:21:25,990 --> 00:21:30,970
<font color="#E5E5E5">interactive show and I'm like</font><font color="#CCCCCC"> how are</font>

508
00:21:28,059 --> 00:21:37,928
<font color="#CCCCCC">you</font><font color="#E5E5E5"> gonna get an interactive shell</font><font color="#CCCCCC"> river</font>

509
00:21:30,970 --> 00:21:40,600
<font color="#CCCCCC">of shell</font><font color="#E5E5E5"> so I found a Python reverse</font>

510
00:21:37,929 --> 00:21:43,260
shell script on I think was like<font color="#CCCCCC"> pen</font>

511
00:21:40,600 --> 00:21:47,320
<font color="#CCCCCC">test monkey they've got a cheat sheet</font>

512
00:21:43,260 --> 00:21:50,110
<font color="#E5E5E5">within a matter of minutes</font><font color="#CCCCCC"> I fired up</font><font color="#E5E5E5"> a</font>

513
00:21:47,320 --> 00:21:55,139
<font color="#E5E5E5">County Linux instance on my own</font>

514
00:21:50,110 --> 00:21:57,699
<font color="#CCCCCC">B</font><font color="#E5E5E5"> PC and had a reverse shell</font><font color="#CCCCCC"> on the</font>

515
00:21:55,140 --> 00:22:00,040
container that the lambda<font color="#E5E5E5"> function is</font>

516
00:21:57,700 --> 00:22:01,980
executing on now the interesting thing

517
00:22:00,040 --> 00:22:06,460
<font color="#E5E5E5">keep this in mind is that lambda</font>

518
00:22:01,980 --> 00:22:09,970
<font color="#E5E5E5">lifetimes are limited to 300 seconds so</font>

519
00:22:06,460 --> 00:22:12,640
to go through and do<font color="#E5E5E5"> this you have</font><font color="#CCCCCC"> to be</font>

520
00:22:09,970 --> 00:22:14,440
a very quick<font color="#E5E5E5"> typer</font><font color="#CCCCCC"> right</font><font color="#E5E5E5"> you know your</font>

521
00:22:12,640 --> 00:22:16,840
words per minute<font color="#E5E5E5"> let them be up there in</font>

522
00:22:14,440 --> 00:22:19,420
about<font color="#E5E5E5"> 200 range to really get anything</font>

523
00:22:16,840 --> 00:22:21,850
<font color="#E5E5E5">meaningful</font><font color="#CCCCCC"> I was able</font><font color="#E5E5E5"> to you know cat</font>

524
00:22:19,420 --> 00:22:23,620
<font color="#E5E5E5">Etsy password if config</font><font color="#CCCCCC"> and things like</font>

525
00:22:21,850 --> 00:22:25,540
<font color="#E5E5E5">that</font><font color="#CCCCCC"> and and</font><font color="#E5E5E5"> give a good</font><font color="#CCCCCC"> understanding</font>

526
00:22:23,620 --> 00:22:27,189
but you really want to dig deep<font color="#CCCCCC"> you</font>

527
00:22:25,540 --> 00:22:28,600
don't want to have to keep doing<font color="#E5E5E5"> this</font>

528
00:22:27,190 --> 00:22:33,550
over and<font color="#E5E5E5"> over and get a reverse shell</font>

529
00:22:28,600 --> 00:22:37,379
<font color="#E5E5E5">and login so um I was gonna show a quick</font>

530
00:22:33,550 --> 00:22:41,770
video<font color="#CCCCCC"> hopefully this will work</font>

531
00:22:37,380 --> 00:22:46,210
I'm<font color="#E5E5E5"> not confident enough to do it yeah</font>

532
00:22:41,770 --> 00:22:48,100
cool<font color="#E5E5E5"> right on it so that's the this is</font>

533
00:22:46,210 --> 00:22:50,950
the reverse shell code that I just

534
00:22:48,100 --> 00:22:54,760
<font color="#CCCCCC">showed you</font><font color="#E5E5E5"> this is</font><font color="#CCCCCC"> my AWS account I'm</font>

535
00:22:50,950 --> 00:22:58,300
just<font color="#E5E5E5"> gonna play</font><font color="#CCCCCC"> it here so</font><font color="#E5E5E5"> you insert</font>

536
00:22:54,760 --> 00:23:00,100
<font color="#E5E5E5">that you</font><font color="#CCCCCC"> host name IP port</font><font color="#E5E5E5"> right</font><font color="#CCCCCC"> here</font>

537
00:22:58,300 --> 00:23:05,200
I'm<font color="#E5E5E5"> setting up the netcat listener on my</font>

538
00:23:00,100 --> 00:23:06,909
<font color="#CCCCCC">kali linux</font><font color="#E5E5E5"> instance in my own v pc and i</font>

539
00:23:05,200 --> 00:23:09,420
just executed<font color="#E5E5E5"> that and you'll see</font><font color="#CCCCCC"> now</font>

540
00:23:06,910 --> 00:23:13,120
<font color="#CCCCCC">the screenshot that</font><font color="#E5E5E5"> I just showed you</font>

541
00:23:09,420 --> 00:23:14,470
who am I and now hopefully you can keep

542
00:23:13,120 --> 00:23:17,739
<font color="#E5E5E5">up</font><font color="#CCCCCC"> with some</font><font color="#E5E5E5"> of</font><font color="#CCCCCC"> this</font><font color="#E5E5E5"> can</font><font color="#CCCCCC"> you see this</font>

543
00:23:14,470 --> 00:23:19,480
<font color="#E5E5E5">okay it's a little little okay okay so</font>

544
00:23:17,740 --> 00:23:20,710
what i'm doing<font color="#CCCCCC"> here i'll just</font><font color="#E5E5E5"> pause as i</font>

545
00:23:19,480 --> 00:23:24,010
go through this what i'm doing here is

546
00:23:20,710 --> 00:23:26,920
i'm excuse me cat<font color="#CCCCCC"> etsy password i'm</font>

547
00:23:24,010 --> 00:23:29,379
sorry<font color="#CCCCCC"> I did a who am i user that I'm</font>

548
00:23:26,920 --> 00:23:31,650
operating under<font color="#E5E5E5"> is called SB X</font>

549
00:23:29,380 --> 00:23:35,260
underscore user thank you very much

550
00:23:31,650 --> 00:23:37,150
<font color="#E5E5E5">SB X underscore user</font><font color="#CCCCCC"> one zero five seven</font>

551
00:23:35,260 --> 00:23:41,170
like that's an interesting<font color="#E5E5E5"> user name</font>

552
00:23:37,150 --> 00:23:45,460
what could<font color="#CCCCCC"> SPX stand</font><font color="#E5E5E5"> for the ideas</font><font color="#CCCCCC"> maybe</font>

553
00:23:41,170 --> 00:23:49,600
<font color="#E5E5E5">a sandbox user right yeah cool so</font><font color="#CCCCCC"> that's</font>

554
00:23:45,460 --> 00:23:54,160
<font color="#E5E5E5">like well I wonder what what's the login</font>

555
00:23:49,600 --> 00:23:56,260
profile look like cat<font color="#E5E5E5"> Etsy password</font><font color="#CCCCCC"> or I</font>

556
00:23:54,160 --> 00:23:59,890
grew up for that user an Etsy password

557
00:23:56,260 --> 00:24:01,990
rather and found that you<font color="#CCCCCC"> know it's</font><font color="#E5E5E5"> even</font>

558
00:23:59,890 --> 00:24:03,610
better<font color="#E5E5E5"> awesome it's still a little small</font>

559
00:24:01,990 --> 00:24:07,720
<font color="#CCCCCC">but that's</font><font color="#E5E5E5"> good that's not that's not on</font>

560
00:24:03,610 --> 00:24:09,520
you that's on me<font color="#CCCCCC"> yeah you can't zoom in</font>

561
00:24:07,720 --> 00:24:11,650
on this either

562
00:24:09,520 --> 00:24:14,080
so what by grubbing for<font color="#E5E5E5"> that username</font>

563
00:24:11,650 --> 00:24:16,660
<font color="#CCCCCC">you can probably see at the</font><font color="#E5E5E5"> end of that</font>

564
00:24:14,080 --> 00:24:18,178
line it says s been no login so clearly

565
00:24:16,660 --> 00:24:19,950
<font color="#E5E5E5">Amazon's not expect</font>

566
00:24:18,179 --> 00:24:23,369
need to be<font color="#E5E5E5"> logged into this show right</font>

567
00:24:19,950 --> 00:24:26,190
<font color="#E5E5E5">now</font><font color="#CCCCCC"> the unpause this another</font><font color="#E5E5E5"> step</font>

568
00:24:23,369 --> 00:24:28,499
<font color="#CCCCCC">forward I'm just highlighting the fact</font>

569
00:24:26,190 --> 00:24:30,240
<font color="#E5E5E5">of when I just want to just</font><font color="#CCCCCC"> mention</font><font color="#E5E5E5"> so</font>

570
00:24:28,499 --> 00:24:31,350
<font color="#CCCCCC">cat etsy password now here's where</font>

571
00:24:30,240 --> 00:24:35,039
<font color="#E5E5E5">things get interesting</font>

572
00:24:31,350 --> 00:24:38,490
see how many<font color="#CCCCCC"> sbx users</font><font color="#E5E5E5"> there are listed</font>

573
00:24:35,039 --> 00:24:40,799
<font color="#E5E5E5">right</font><font color="#CCCCCC"> so</font><font color="#E5E5E5"> Emma's the</font><font color="#CCCCCC"> lambda containers</font>

574
00:24:38,490 --> 00:24:44,159
<font color="#E5E5E5">again they're transient they come up and</font>

575
00:24:40,799 --> 00:24:46,649
go down<font color="#CCCCCC"> but not all of them are new</font><font color="#E5E5E5"> so</font>

576
00:24:44,159 --> 00:24:48,059
they have and<font color="#E5E5E5"> this</font><font color="#CCCCCC"> is some research that</font>

577
00:24:46,649 --> 00:24:50,039
the<font color="#CCCCCC"> other</font><font color="#E5E5E5"> gentleman I mentioned at the</font>

578
00:24:48,059 --> 00:24:52,619
beginning of the talk<font color="#E5E5E5"> have done as</font>

579
00:24:50,039 --> 00:24:54,960
they've done<font color="#E5E5E5"> some</font><font color="#CCCCCC"> really cool analysis</font>

580
00:24:52,619 --> 00:24:57,509
on like cold boot<font color="#E5E5E5"> warm boot of the</font>

581
00:24:54,960 --> 00:24:59,820
<font color="#E5E5E5">underlying container and some really</font>

582
00:24:57,509 --> 00:25:01,769
<font color="#E5E5E5">kind</font><font color="#CCCCCC"> of discreet artifacts they've</font>

583
00:24:59,820 --> 00:25:04,980
discovered in their research so I highly

584
00:25:01,769 --> 00:25:06,210
recommend<font color="#E5E5E5"> looking at their work but from</font>

585
00:25:04,980 --> 00:25:09,840
what I can<font color="#E5E5E5"> tell a lot</font><font color="#CCCCCC"> of</font><font color="#E5E5E5"> these</font>

586
00:25:06,210 --> 00:25:11,220
<font color="#E5E5E5">containers</font><font color="#CCCCCC"> are reused there's a there's</font>

587
00:25:09,840 --> 00:25:13,320
there's<font color="#E5E5E5"> one place that you can</font><font color="#CCCCCC"> actually</font>

588
00:25:11,220 --> 00:25:15,869
<font color="#E5E5E5">write to on the file system</font><font color="#CCCCCC"> we'll get to</font>

589
00:25:13,320 --> 00:25:17,730
<font color="#E5E5E5">that in a minute but there may be some</font>

590
00:25:15,869 --> 00:25:20,519
potential<font color="#E5E5E5"> for abuse there as well if</font>

591
00:25:17,730 --> 00:25:22,519
there's a I'm using a<font color="#E5E5E5"> container and I</font>

592
00:25:20,519 --> 00:25:25,619
write to it and then someone<font color="#CCCCCC"> else</font>

593
00:25:22,519 --> 00:25:27,929
invokes<font color="#CCCCCC"> that again</font><font color="#E5E5E5"> and I can simply may</font>

594
00:25:25,619 --> 00:25:30,509
be predict<font color="#E5E5E5"> what file they're going to</font>

595
00:25:27,929 --> 00:25:32,970
try to<font color="#CCCCCC"> access if I can insert some</font>

596
00:25:30,509 --> 00:25:34,549
malicious code and then maybe gain

597
00:25:32,970 --> 00:25:37,200
control of<font color="#E5E5E5"> their lambda function right</font>

598
00:25:34,549 --> 00:25:38,730
<font color="#E5E5E5">possibilities</font><font color="#CCCCCC"> are I want</font><font color="#E5E5E5"> say limitless</font>

599
00:25:37,200 --> 00:25:40,769
but there's definitely possibilities

600
00:25:38,730 --> 00:25:42,690
<font color="#E5E5E5">there really what this is just</font><font color="#CCCCCC"> showing</font>

601
00:25:40,769 --> 00:25:47,940
<font color="#CCCCCC">that</font><font color="#E5E5E5"> all these sandbox users log in</font>

602
00:25:42,690 --> 00:25:49,320
<font color="#E5E5E5">shells are set to s been no login</font><font color="#CCCCCC"> and</font>

603
00:25:47,940 --> 00:25:54,869
I'm just scrolling up here and I'm just

604
00:25:49,320 --> 00:25:57,119
<font color="#E5E5E5">showing</font><font color="#CCCCCC"> that the</font><font color="#E5E5E5"> root and ECT - user are</font>

605
00:25:54,869 --> 00:25:59,639
the only two users with<font color="#E5E5E5"> been bash</font>

606
00:25:57,119 --> 00:26:02,730
everything else in fact is set to s been

607
00:25:59,639 --> 00:26:05,309
no login<font color="#E5E5E5"> so clearly Amazon is not</font>

608
00:26:02,730 --> 00:26:10,700
expecting anyone<font color="#E5E5E5"> but those two users to</font>

609
00:26:05,309 --> 00:26:10,700
<font color="#CCCCCC">actually be logged in here's an if</font>

610
00:26:10,730 --> 00:26:14,669
condition<font color="#CCCCCC"> turf aces again those</font>

611
00:26:12,720 --> 00:26:15,840
questions that<font color="#E5E5E5"> I you know curious minds</font>

612
00:26:14,669 --> 00:26:18,149
want to know<font color="#E5E5E5"> just</font><font color="#CCCCCC"> kind of going through</font>

613
00:26:15,840 --> 00:26:19,980
<font color="#CCCCCC">that list here</font><font color="#E5E5E5"> we've got three</font>

614
00:26:18,149 --> 00:26:21,600
interfaces we've got a loopback<font color="#CCCCCC"> we've</font>

615
00:26:19,980 --> 00:26:23,789
got one<font color="#CCCCCC"> that's</font><font color="#E5E5E5"> called the internal</font>

616
00:26:21,600 --> 00:26:29,820
underscore<font color="#E5E5E5"> three and we've got another</font>

617
00:26:23,789 --> 00:26:31,440
one<font color="#E5E5E5"> called V target underscore</font><font color="#CCCCCC"> two those</font>

618
00:26:29,820 --> 00:26:35,399
<font color="#E5E5E5">are on two different</font><font color="#CCCCCC"> networks</font>

619
00:26:31,440 --> 00:26:41,250
<font color="#CCCCCC">a 169</font><font color="#E5E5E5"> to 54 Network</font><font color="#CCCCCC"> there's a routing</font>

620
00:26:35,399 --> 00:26:46,080
table<font color="#E5E5E5"> default route points</font><font color="#CCCCCC"> to 1 6 9</font><font color="#E5E5E5"> to</font><font color="#CCCCCC"> 5</font>

621
00:26:41,250 --> 00:26:48,629
<font color="#CCCCCC">4 70 6.6</font><font color="#E5E5E5"> on this container I haven't</font>

622
00:26:46,080 --> 00:26:50,908
found that<font color="#E5E5E5"> the change in my research</font><font color="#CCCCCC"> but</font>

623
00:26:48,629 --> 00:26:52,529
again I could<font color="#E5E5E5"> have just this day I could</font>

624
00:26:50,909 --> 00:26:56,159
<font color="#E5E5E5">have been reusing a container</font><font color="#CCCCCC"> in name</font>

625
00:26:52,529 --> 00:26:58,440
<font color="#E5E5E5">that hadn't changed</font><font color="#CCCCCC"> I did find that the</font>

626
00:26:56,159 --> 00:27:02,669
<font color="#CCCCCC">some of the IPS are</font><font color="#E5E5E5"> dynamically assigned</font>

627
00:26:58,440 --> 00:27:04,529
though<font color="#E5E5E5"> so I this second command down</font>

628
00:27:02,669 --> 00:27:07,220
here at the bottom<font color="#CCCCCC"> is just a you</font><font color="#E5E5E5"> name</font><font color="#CCCCCC"> -</font>

629
00:27:04,529 --> 00:27:11,129
a good way to get some nice<font color="#CCCCCC"> information</font>

630
00:27:07,220 --> 00:27:13,350
<font color="#CCCCCC">this actual video here is from last</font>

631
00:27:11,129 --> 00:27:16,469
<font color="#E5E5E5">October and had time to go in and remake</font>

632
00:27:13,350 --> 00:27:19,408
all this yet but<font color="#E5E5E5"> basically it's showing</font>

633
00:27:16,470 --> 00:27:25,429
that<font color="#E5E5E5"> the you know it's it's Linux IP -</font>

634
00:27:19,409 --> 00:27:27,720
10 - 12<font color="#E5E5E5"> - 1 7 2 - 1 7 7 so chances are</font>

635
00:27:25,429 --> 00:27:29,309
again I was I was earlier saying that

636
00:27:27,720 --> 00:27:32,070
this is<font color="#CCCCCC"> probably running</font><font color="#E5E5E5"> on an ec2</font>

637
00:27:29,309 --> 00:27:35,220
cluster<font color="#E5E5E5"> with any</font><font color="#CCCCCC"> CS</font><font color="#E5E5E5"> that's probably the</font>

638
00:27:32,070 --> 00:27:37,379
IP that<font color="#CCCCCC"> it's either compiled</font><font color="#E5E5E5"> under on</font>

639
00:27:35,220 --> 00:27:43,830
that<font color="#CCCCCC"> environment or something related to</font>

640
00:27:37,379 --> 00:27:48,389
that it's running<font color="#E5E5E5"> version 4.4 5 1-4 0.67</font>

641
00:27:43,830 --> 00:27:50,820
of Amazon Linux for x86<font color="#E5E5E5"> 64 bit</font><font color="#CCCCCC"> symmetric</font>

642
00:27:48,389 --> 00:27:53,129
multiprocessing compiled on Friday June

643
00:27:50,820 --> 00:27:57,418
23rd again<font color="#CCCCCC"> this was from</font><font color="#E5E5E5"> last October or</font>

644
00:27:53,129 --> 00:27:59,189
so<font color="#CCCCCC"> but that being said</font><font color="#E5E5E5"> if I pulled this</font>

645
00:27:57,419 --> 00:28:01,320
in<font color="#E5E5E5"> October and it was compiled on June</font>

646
00:27:59,190 --> 00:28:03,840
23rd that's<font color="#E5E5E5"> to say</font><font color="#CCCCCC"> that they're</font><font color="#E5E5E5"> probably</font>

647
00:28:01,320 --> 00:28:06,480
<font color="#E5E5E5">you know</font><font color="#CCCCCC"> not staying behind</font><font color="#E5E5E5"> on anything</font>

648
00:28:03,840 --> 00:28:08,549
but<font color="#CCCCCC"> there</font><font color="#E5E5E5"> their release cycles probably</font>

649
00:28:06,480 --> 00:28:10,769
or a couple<font color="#CCCCCC"> months spread from</font><font color="#E5E5E5"> one</font>

650
00:28:08,549 --> 00:28:12,120
another assuming that<font color="#CCCCCC"> I</font><font color="#E5E5E5"> was toward the</font>

651
00:28:10,769 --> 00:28:15,509
<font color="#CCCCCC">end of that</font><font color="#E5E5E5"> it could have been longer of</font>

652
00:28:12,120 --> 00:28:20,129
course<font color="#E5E5E5"> so</font><font color="#CCCCCC"> then I try</font><font color="#E5E5E5"> to move along</font>

653
00:28:15,509 --> 00:28:21,690
because we are at half past already<font color="#CCCCCC"> just</font>

654
00:28:20,129 --> 00:28:23,340
looking at the<font color="#E5E5E5"> processes now those of</font>

655
00:28:21,690 --> 00:28:24,809
<font color="#E5E5E5">you that are familiar with containers</font>

656
00:28:23,340 --> 00:28:26,639
<font color="#E5E5E5">you know that there's a very limited</font>

657
00:28:24,809 --> 00:28:28,440
attack surface one of the reason being

658
00:28:26,639 --> 00:28:30,840
is that there's<font color="#E5E5E5"> usually only one or two</font>

659
00:28:28,440 --> 00:28:33,210
processes running<font color="#E5E5E5"> however this is the</font>

660
00:28:30,840 --> 00:28:37,889
<font color="#CCCCCC">really interesting part of lambda</font>

661
00:28:33,210 --> 00:28:42,809
functions is it is you probably<font color="#E5E5E5"> can't</font>

662
00:28:37,889 --> 00:28:44,780
read<font color="#E5E5E5"> it but this line right</font><font color="#CCCCCC"> here is</font><font color="#E5E5E5"> user</font>

663
00:28:42,809 --> 00:28:47,149
bin Python<font color="#CCCCCC"> 2 dot</font>

664
00:28:44,780 --> 00:28:51,550
seven and it's executing a file called

665
00:28:47,150 --> 00:28:54,200
<font color="#CCCCCC">VAR</font><font color="#E5E5E5"> runtime AWS lambda bootstrap py</font>

666
00:28:51,550 --> 00:28:55,460
that's when I was<font color="#E5E5E5"> like okay I</font><font color="#CCCCCC"> think you</font>

667
00:28:54,200 --> 00:28:58,220
know we're getting<font color="#CCCCCC"> onto something here</font>

668
00:28:55,460 --> 00:29:03,110
so<font color="#E5E5E5"> I think I just</font><font color="#CCCCCC"> make a quick move over</font>

669
00:28:58,220 --> 00:29:05,120
to<font color="#CCCCCC"> that directory and I'll probably just</font>

670
00:29:03,110 --> 00:29:07,490
<font color="#E5E5E5">skip past the rest of that here</font><font color="#CCCCCC"> but</font>

671
00:29:05,120 --> 00:29:10,159
because<font color="#CCCCCC"> I've got details on the re</font><font color="#E5E5E5"> end</font>

672
00:29:07,490 --> 00:29:14,620
of it but<font color="#E5E5E5"> there's the files bootstrap</font>

673
00:29:10,160 --> 00:29:18,950
that py and<font color="#CCCCCC"> runtime so here</font><font color="#E5E5E5"> I'm just</font>

674
00:29:14,620 --> 00:29:21,620
<font color="#CCCCCC">catting bootstrap py just showing you</font>

675
00:29:18,950 --> 00:29:24,410
some<font color="#CCCCCC"> of them it's a long file but it's a</font>

676
00:29:21,620 --> 00:29:27,979
Python<font color="#E5E5E5"> file the runtime file is a</font><font color="#CCCCCC"> C</font>

677
00:29:24,410 --> 00:29:29,780
<font color="#CCCCCC">Python shared object file</font><font color="#E5E5E5"> and I think</font>

678
00:29:27,980 --> 00:29:32,150
I'll<font color="#E5E5E5"> just probably skip past the rest of</font>

679
00:29:29,780 --> 00:29:33,830
it<font color="#E5E5E5"> really just</font><font color="#CCCCCC"> shows the the environment</font>

680
00:29:32,150 --> 00:29:35,720
<font color="#E5E5E5">variables that I've already showed you</font>

681
00:29:33,830 --> 00:29:37,460
but<font color="#E5E5E5"> uh I found it interesting that was</font>

682
00:29:35,720 --> 00:29:40,430
able<font color="#CCCCCC"> to get</font><font color="#E5E5E5"> a reverse shell</font><font color="#CCCCCC"> on us and do</font>

683
00:29:37,460 --> 00:29:43,160
all this again<font color="#E5E5E5"> it's three</font><font color="#CCCCCC"> 300 seconds so</font>

684
00:29:40,430 --> 00:29:46,670
once this died at the end which was

685
00:29:43,160 --> 00:29:51,080
about right here<font color="#CCCCCC"> right it's going</font><font color="#E5E5E5"> to go</font>

686
00:29:46,670 --> 00:29:53,170
back and as all lambda functions do

687
00:29:51,080 --> 00:29:55,550
<font color="#CCCCCC">they've returned some sort of a value</font><font color="#E5E5E5"> so</font>

688
00:29:53,170 --> 00:30:00,500
<font color="#E5E5E5">all right so let</font><font color="#CCCCCC"> me get back to</font><font color="#E5E5E5"> the</font>

689
00:29:55,550 --> 00:30:18,320
presentation<font color="#CCCCCC"> now take a beverage</font><font color="#E5E5E5"> so</font>

690
00:30:00,500 --> 00:30:21,140
there's the reverse<font color="#E5E5E5"> shell yeah sure no I</font>

691
00:30:18,320 --> 00:30:23,600
did<font color="#E5E5E5"> not do that</font><font color="#CCCCCC"> simultaneously it's a</font>

692
00:30:21,140 --> 00:30:25,520
good idea<font color="#E5E5E5"> and</font><font color="#CCCCCC"> I'm</font><font color="#E5E5E5"> doing through the web</font>

693
00:30:23,600 --> 00:30:30,290
interface<font color="#E5E5E5"> so I imagine</font><font color="#CCCCCC"> you'll have to</font>

694
00:30:25,520 --> 00:30:31,820
<font color="#CCCCCC">open up two tabs</font><font color="#E5E5E5"> probably I don't</font><font color="#CCCCCC"> know</font>

695
00:30:30,290 --> 00:30:33,620
<font color="#E5E5E5">it's a good point I don't know if you</font>

696
00:30:31,820 --> 00:30:35,179
can<font color="#CCCCCC"> X I imagine you'd be able</font><font color="#E5E5E5"> to execute</font>

697
00:30:33,620 --> 00:30:37,250
<font color="#E5E5E5">the same function</font><font color="#CCCCCC"> but you may have to</font>

698
00:30:35,180 --> 00:30:39,920
have two<font color="#CCCCCC"> different ones with the same</font>

699
00:30:37,250 --> 00:30:42,410
code and execute<font color="#E5E5E5"> those simultaneously</font>

700
00:30:39,920 --> 00:30:44,120
there'd be an<font color="#E5E5E5"> interesting path to take</font>

701
00:30:42,410 --> 00:30:46,160
them I'll try that<font color="#E5E5E5"> now thank you</font><font color="#CCCCCC"> very</font>

702
00:30:44,120 --> 00:30:50,110
very<font color="#E5E5E5"> much for the input yeah other</font>

703
00:30:46,160 --> 00:30:50,110
questions yeah

704
00:30:50,179 --> 00:31:01,110
<font color="#CCCCCC">uh-huh I so</font><font color="#E5E5E5"> I the the lambda function</font>

705
00:30:58,110 --> 00:31:04,260
that<font color="#E5E5E5"> I wrote was</font><font color="#CCCCCC"> a was reverse shell</font>

706
00:31:01,110 --> 00:31:07,409
code written in Python<font color="#CCCCCC"> so when lambda</font>

707
00:31:04,260 --> 00:31:10,770
and<font color="#CCCCCC"> Vokes it basically takes</font><font color="#E5E5E5"> my code and</font>

708
00:31:07,410 --> 00:31:13,770
<font color="#CCCCCC">execute</font><font color="#E5E5E5"> it</font><font color="#CCCCCC"> and then so I had that</font><font color="#E5E5E5"> do a</font>

709
00:31:10,770 --> 00:31:16,320
connect outbound connection to a net cat

710
00:31:13,770 --> 00:31:18,270
listener I had running<font color="#E5E5E5"> on Kali Linux and</font>

711
00:31:16,320 --> 00:31:23,159
that dumps me into a show and<font color="#E5E5E5"> then I'm</font>

712
00:31:18,270 --> 00:31:25,020
logged in<font color="#E5E5E5"> yeah nothing truly innovative</font>

713
00:31:23,160 --> 00:31:26,520
in<font color="#E5E5E5"> the</font><font color="#CCCCCC"> sense of</font><font color="#E5E5E5"> a reverse shell but this</font>

714
00:31:25,020 --> 00:31:28,170
the fact<font color="#CCCCCC"> that it's a reverse shell in a</font>

715
00:31:26,520 --> 00:31:31,250
lambda container that's where I was

716
00:31:28,170 --> 00:31:33,510
<font color="#E5E5E5">coming that's that's kind of cool so</font>

717
00:31:31,250 --> 00:31:34,950
<font color="#E5E5E5">okay so we're it was still an</font><font color="#CCCCCC"> act of</font>

718
00:31:33,510 --> 00:31:39,360
<font color="#E5E5E5">reconnaissance</font><font color="#CCCCCC"> I got a lot to talk about</font>

719
00:31:34,950 --> 00:31:41,040
<font color="#E5E5E5">still so we've got a containerized</font>

720
00:31:39,360 --> 00:31:42,689
<font color="#E5E5E5">amulet on</font><font color="#CCCCCC"> lummix we've got kernel</font>

721
00:31:41,040 --> 00:31:44,700
version compilation<font color="#E5E5E5"> yet we've got</font><font color="#CCCCCC"> a lot</font>

722
00:31:42,690 --> 00:31:46,200
<font color="#CCCCCC">of a lot of</font><font color="#E5E5E5"> good information we can work</font>

723
00:31:44,700 --> 00:31:47,040
with there's the network dynamically

724
00:31:46,200 --> 00:31:49,230
assigned<font color="#CCCCCC"> IPs</font>

725
00:31:47,040 --> 00:31:51,360
we've talked about<font color="#E5E5E5"> this users</font>

726
00:31:49,230 --> 00:31:53,160
interactive login shells<font color="#E5E5E5"> only for ec2</font>

727
00:31:51,360 --> 00:31:56,699
user and<font color="#E5E5E5"> root users you've got the</font>

728
00:31:53,160 --> 00:31:58,350
nomenclature<font color="#CCCCCC"> now the services again I</font>

729
00:31:56,700 --> 00:32:01,860
want to<font color="#CCCCCC"> mention this</font><font color="#E5E5E5"> x-ray visitors some</font>

730
00:31:58,350 --> 00:32:04,770
possibilities that<font color="#CCCCCC"> I actually can't talk</font>

731
00:32:01,860 --> 00:32:10,139
about but<font color="#E5E5E5"> hopefully I will be</font><font color="#CCCCCC"> able to</font>

732
00:32:04,770 --> 00:32:11,850
<font color="#E5E5E5">talk about at a future talk so we're</font>

733
00:32:10,140 --> 00:32:13,320
looking at x-ray and then<font color="#E5E5E5"> we want to</font>

734
00:32:11,850 --> 00:32:16,740
<font color="#E5E5E5">look at like</font><font color="#CCCCCC"> lam the bootstrapping and</font>

735
00:32:13,320 --> 00:32:19,559
execution process<font color="#CCCCCC"> I've started</font><font color="#E5E5E5"> looking</font>

736
00:32:16,740 --> 00:32:22,500
<font color="#E5E5E5">at different mount points this</font><font color="#CCCCCC"> is just</font>

737
00:32:19,559 --> 00:32:23,820
kind<font color="#CCCCCC"> of a dump</font><font color="#E5E5E5"> of those you can</font><font color="#CCCCCC"> see the</font>

738
00:32:22,500 --> 00:32:25,950
names where they're mounted the

739
00:32:23,820 --> 00:32:28,678
permissions you'll see that<font color="#CCCCCC"> almost every</font>

740
00:32:25,950 --> 00:32:32,070
one<font color="#CCCCCC"> of them has you know</font><font color="#E5E5E5"> no su it's no</font>

741
00:32:28,679 --> 00:32:34,370
dev<font color="#CCCCCC"> no a time</font><font color="#E5E5E5"> read-only</font><font color="#CCCCCC"> the</font><font color="#E5E5E5"> only one</font>

742
00:32:32,070 --> 00:32:37,800
you're<font color="#E5E5E5"> going to see that has any</font>

743
00:32:34,370 --> 00:32:41,580
possibility of exploitation is the one

744
00:32:37,800 --> 00:32:43,919
here at the bottom<font color="#CCCCCC"> with dev loop zero</font><font color="#E5E5E5"> is</font>

745
00:32:41,580 --> 00:32:46,340
<font color="#E5E5E5">mapped to slash temp that's the only</font>

746
00:32:43,920 --> 00:32:50,760
place that<font color="#E5E5E5"> we have any read and write</font>

747
00:32:46,340 --> 00:32:54,000
everything else is read-only<font color="#CCCCCC"> this was</font>

748
00:32:50,760 --> 00:32:59,190
just a listing of<font color="#E5E5E5"> the dev directory just</font>

749
00:32:54,000 --> 00:33:01,860
<font color="#CCCCCC">to kind of give</font><font color="#E5E5E5"> you an</font><font color="#CCCCCC"> idea</font><font color="#E5E5E5"> of what sort</font>

750
00:32:59,190 --> 00:33:02,940
of devices<font color="#CCCCCC"> it has access</font><font color="#E5E5E5"> to so if you're</font>

751
00:33:01,860 --> 00:33:05,008
familiar<font color="#CCCCCC"> with</font>

752
00:33:02,940 --> 00:33:06,840
<font color="#CCCCCC">Dockers security and it's being you know</font>

753
00:33:05,009 --> 00:33:08,239
if it's being running<font color="#E5E5E5"> like privileged</font>

754
00:33:06,840 --> 00:33:10,738
mode<font color="#E5E5E5"> you'll be able to see the host</font>

755
00:33:08,239 --> 00:33:13,440
<font color="#E5E5E5">devices and stuff so it's a good way to</font>

756
00:33:10,739 --> 00:33:16,289
profile that I had suspected<font color="#E5E5E5"> AWS</font>

757
00:33:13,440 --> 00:33:18,779
wouldn't be that negligent and<font color="#E5E5E5"> there</font>

758
00:33:16,289 --> 00:33:19,889
they<font color="#E5E5E5"> weren't again</font><font color="#CCCCCC"> they're doing a</font>

759
00:33:18,779 --> 00:33:22,259
really<font color="#CCCCCC"> good job at locking this</font>

760
00:33:19,889 --> 00:33:24,299
environment<font color="#E5E5E5"> down that sandbox users</font>

761
00:33:22,259 --> 00:33:27,809
non-privileged from what I can<font color="#E5E5E5"> tell</font><font color="#CCCCCC"> at</font>

762
00:33:24,299 --> 00:33:29,970
this<font color="#CCCCCC"> point there's no any in any sort</font><font color="#E5E5E5"> of</font>

763
00:33:27,809 --> 00:33:33,830
local privilege escalation but there's

764
00:33:29,970 --> 00:33:38,309
some possibilities and<font color="#E5E5E5"> those</font><font color="#CCCCCC"> meant to</font>

765
00:33:33,830 --> 00:33:40,199
<font color="#E5E5E5">okay so the fun stuff now</font><font color="#CCCCCC"> so we've we've</font>

766
00:33:38,309 --> 00:33:42,330
profiled this we know all the all the

767
00:33:40,200 --> 00:33:44,129
different<font color="#CCCCCC"> things that how things</font><font color="#E5E5E5"> are</font>

768
00:33:42,330 --> 00:33:46,439
configured we know that we can<font color="#E5E5E5"> get those</font>

769
00:33:44,129 --> 00:33:49,649
<font color="#E5E5E5">credentials we have a land execution</font>

770
00:33:46,440 --> 00:33:52,259
lifetime of 300 seconds<font color="#E5E5E5"> that simple</font>

771
00:33:49,649 --> 00:33:55,529
token<font color="#E5E5E5"> service for the session tokens</font><font color="#CCCCCC"> has</font>

772
00:33:52,259 --> 00:33:58,379
a default value<font color="#E5E5E5"> of</font><font color="#CCCCCC"> one hour but</font><font color="#E5E5E5"> because</font>

773
00:33:55,529 --> 00:34:00,389
the lambda execution is 300 seconds

774
00:33:58,379 --> 00:34:03,389
that's kind of our low water market if

775
00:34:00,389 --> 00:34:07,469
you<font color="#E5E5E5"> will but what we can do is we can</font>

776
00:34:03,389 --> 00:34:10,500
take<font color="#E5E5E5"> those credentials extract them or</font>

777
00:34:07,470 --> 00:34:12,418
export<font color="#E5E5E5"> them right and then we can</font><font color="#CCCCCC"> put</font>

778
00:34:10,500 --> 00:34:14,699
those<font color="#E5E5E5"> directly into our</font><font color="#CCCCCC"> command-line</font>

779
00:34:12,418 --> 00:34:17,969
interface configuration file<font color="#CCCCCC"> which is</font>

780
00:34:14,699 --> 00:34:20,250
<font color="#CCCCCC">going</font><font color="#E5E5E5"> to be like tilde - AWS slash</font>

781
00:34:17,969 --> 00:34:22,319
credentials<font color="#CCCCCC"> I believe</font><font color="#E5E5E5"> that the file name</font>

782
00:34:20,250 --> 00:34:23,819
is called<font color="#E5E5E5"> and we can set those up with</font>

783
00:34:22,319 --> 00:34:27,299
<font color="#CCCCCC">the</font><font color="#E5E5E5"> you know key value pairs</font>

784
00:34:23,819 --> 00:34:29,489
AWS secret access key<font color="#E5E5E5"> and again these</font>

785
00:34:27,299 --> 00:34:31,399
<font color="#CCCCCC">are all</font><font color="#E5E5E5"> still don't don't try to copy</font>

786
00:34:29,489 --> 00:34:33,959
them<font color="#CCCCCC"> and try</font><font color="#E5E5E5"> to do something</font><font color="#CCCCCC"> with them</font>

787
00:34:31,399 --> 00:34:36,598
<font color="#CCCCCC">but we can we can we can</font><font color="#E5E5E5"> use it with the</font>

788
00:34:33,960 --> 00:34:40,129
CLI we can use it with AWS as API

789
00:34:36,599 --> 00:34:43,200
directly<font color="#E5E5E5"> we can also use these in SDKs</font>

790
00:34:40,129 --> 00:34:45,149
what could<font color="#E5E5E5"> be the problem</font><font color="#CCCCCC"> with that</font><font color="#E5E5E5"> so</font>

791
00:34:43,199 --> 00:34:46,469
we're avoiding the land of execution

792
00:34:45,149 --> 00:34:48,388
time because we've now got their

793
00:34:46,469 --> 00:34:51,509
credentials but<font color="#E5E5E5"> now what</font><font color="#CCCCCC"> is our</font><font color="#E5E5E5"> other</font>

794
00:34:48,389 --> 00:34:53,579
limitation the one hour<font color="#E5E5E5"> of session time</font>

795
00:34:51,510 --> 00:34:54,299
right<font color="#E5E5E5"> so</font><font color="#CCCCCC"> now we've got to</font><font color="#E5E5E5"> find a</font><font color="#CCCCCC"> way</font>

796
00:34:53,579 --> 00:34:57,630
<font color="#E5E5E5">around that</font>

797
00:34:54,299 --> 00:35:01,069
nonetheless<font color="#E5E5E5"> with these credentials</font><font color="#CCCCCC"> you</font>

798
00:34:57,630 --> 00:35:05,990
<font color="#E5E5E5">can do whatever the lambda container is</font>

799
00:35:01,069 --> 00:35:09,119
granted access to<font color="#CCCCCC"> do through AWS I am</font>

800
00:35:05,990 --> 00:35:12,058
more importantly<font color="#E5E5E5"> all of that is done as</font>

801
00:35:09,119 --> 00:35:14,970
these arrows are<font color="#CCCCCC"> showing under the AWS</font>

802
00:35:12,059 --> 00:35:16,620
lambda user context or<font color="#E5E5E5"> the role rather</font>

803
00:35:14,970 --> 00:35:18,779
right so

804
00:35:16,620 --> 00:35:21,029
it could be you it<font color="#CCCCCC"> could be</font><font color="#E5E5E5"> you and</font><font color="#CCCCCC"> me</font>

805
00:35:18,780 --> 00:35:24,890
all have these<font color="#E5E5E5"> credentials but as</font><font color="#CCCCCC"> it's</font>

806
00:35:21,030 --> 00:35:27,240
reported<font color="#CCCCCC"> within cloud</font><font color="#E5E5E5"> watch</font><font color="#CCCCCC"> it's it's</font>

807
00:35:24,890 --> 00:35:29,040
<font color="#CCCCCC">lambdas doing it</font><font color="#E5E5E5"> so it's very difficult</font>

808
00:35:27,240 --> 00:35:31,830
<font color="#E5E5E5">to</font><font color="#CCCCCC"> attribute some sort of an attack</font>

809
00:35:29,040 --> 00:35:33,210
<font color="#CCCCCC">that's occurring through</font><font color="#E5E5E5"> lambda to you</font>

810
00:35:31,830 --> 00:35:37,890
<font color="#CCCCCC">and your year the whole non-repudiation</font>

811
00:35:33,210 --> 00:35:39,690
<font color="#E5E5E5">or in this case reputable</font><font color="#CCCCCC"> there's really</font>

812
00:35:37,890 --> 00:35:41,370
no way to say<font color="#E5E5E5"> with a high</font><font color="#CCCCCC"> level</font><font color="#E5E5E5"> of</font>

813
00:35:39,690 --> 00:35:45,210
certainty it was it was someone<font color="#CCCCCC"> that did</font>

814
00:35:41,370 --> 00:35:47,279
<font color="#E5E5E5">this so we've got credential hijacking</font>

815
00:35:45,210 --> 00:35:49,590
<font color="#E5E5E5">again limitation we've got lambda max</font>

816
00:35:47,280 --> 00:35:52,890
lifetime we've got<font color="#E5E5E5"> security token max</font>

817
00:35:49,590 --> 00:35:54,000
<font color="#E5E5E5">lifetime how do we work around this well</font>

818
00:35:52,890 --> 00:35:55,560
first of all we're not<font color="#E5E5E5"> going to</font><font color="#CCCCCC"> login</font>

819
00:35:54,000 --> 00:35:58,680
<font color="#CCCCCC">and reverse shell as cool as that</font><font color="#E5E5E5"> is</font>

820
00:35:55,560 --> 00:36:01,020
it's still has that limitation<font color="#E5E5E5"> but now</font>

821
00:35:58,680 --> 00:36:02,910
we've<font color="#CCCCCC"> got so session</font><font color="#E5E5E5"> token expiration</font>

822
00:36:01,020 --> 00:36:05,610
that<font color="#CCCCCC"> we need to concern ourselves with</font>

823
00:36:02,910 --> 00:36:08,299
so we need to be able<font color="#E5E5E5"> to renew</font><font color="#CCCCCC"> that some</font>

824
00:36:05,610 --> 00:36:10,290
way so<font color="#E5E5E5"> that we can retain this</font>

825
00:36:08,300 --> 00:36:13,830
persistent remote access that we're

826
00:36:10,290 --> 00:36:16,650
wanting so why don't<font color="#E5E5E5"> we stand up an AWS</font>

827
00:36:13,830 --> 00:36:20,340
<font color="#E5E5E5">API gateway and just use</font><font color="#CCCCCC"> it through a</font>

828
00:36:16,650 --> 00:36:23,640
browser<font color="#E5E5E5"> simple HTTP gets to the API</font>

829
00:36:20,340 --> 00:36:26,520
gateway and<font color="#E5E5E5"> then pass whatever commands</font>

830
00:36:23,640 --> 00:36:28,560
<font color="#E5E5E5">you want such as OS dot environ as we</font>

831
00:36:26,520 --> 00:36:30,750
did<font color="#CCCCCC"> earlier and</font><font color="#E5E5E5"> get all those</font>

832
00:36:28,560 --> 00:36:32,940
environment variables<font color="#E5E5E5"> now as we do is</font>

833
00:36:30,750 --> 00:36:35,820
hit the browser refresh<font color="#E5E5E5"> and if an hours</font>

834
00:36:32,940 --> 00:36:38,340
<font color="#E5E5E5">passed we've got a renewed session token</font>

835
00:36:35,820 --> 00:36:40,290
right<font color="#E5E5E5"> so I mean maybe we're maybe we're</font>

836
00:36:38,340 --> 00:36:43,770
<font color="#E5E5E5">doing something and we</font><font color="#CCCCCC"> get an access</font>

837
00:36:40,290 --> 00:36:48,720
denied visits<font color="#E5E5E5"> now it's expired hit</font>

838
00:36:43,770 --> 00:36:50,850
refresh you've got a new<font color="#E5E5E5"> one</font><font color="#CCCCCC"> I think it</font>

839
00:36:48,720 --> 00:36:53,399
might have my slide out<font color="#CCCCCC"> of oh no this is</font>

840
00:36:50,850 --> 00:36:54,779
<font color="#E5E5E5">just more</font><font color="#CCCCCC"> of</font><font color="#E5E5E5"> the you know what I got</font>

841
00:36:53,400 --> 00:36:56,340
this<font color="#E5E5E5"> a little out</font><font color="#CCCCCC"> of water</font><font color="#E5E5E5"> this was</font>

842
00:36:54,780 --> 00:36:58,350
supposed to go<font color="#CCCCCC"> a little</font><font color="#E5E5E5"> earlier on</font><font color="#CCCCCC"> what</font>

843
00:36:56,340 --> 00:37:01,320
the other the the<font color="#CCCCCC"> cloud</font><font color="#E5E5E5"> trail logs just</font>

844
00:36:58,350 --> 00:37:06,089
the showing the context that<font color="#E5E5E5"> it's</font>

845
00:37:01,320 --> 00:37:09,390
actually executed in this was<font color="#E5E5E5"> the one I</font>

846
00:37:06,090 --> 00:37:11,910
intended<font color="#CCCCCC"> to show again stell credentials</font>

847
00:37:09,390 --> 00:37:15,150
<font color="#E5E5E5">but if</font><font color="#CCCCCC"> you've</font><font color="#E5E5E5"> refreshed the you know the</font>

848
00:37:11,910 --> 00:37:16,049
page and the the session<font color="#E5E5E5"> token hasn't</font>

849
00:37:15,150 --> 00:37:18,060
been updated<font color="#E5E5E5"> you're going to get the</font>

850
00:37:16,050 --> 00:37:20,430
same results if it expires you're going

851
00:37:18,060 --> 00:37:23,040
to notice<font color="#CCCCCC"> a change</font><font color="#E5E5E5"> on this page so very</font>

852
00:37:20,430 --> 00:37:25,500
easy<font color="#E5E5E5"> to script this type of stuff right</font>

853
00:37:23,040 --> 00:37:28,259
<font color="#E5E5E5">whether it's directly through CLI or you</font>

854
00:37:25,500 --> 00:37:30,630
can set<font color="#CCCCCC"> up an</font><font color="#E5E5E5"> API yourself and do it or</font>

855
00:37:28,260 --> 00:37:33,119
you can script something<font color="#E5E5E5"> else and you</font>

856
00:37:30,630 --> 00:37:37,130
<font color="#CCCCCC">I use curl and</font><font color="#E5E5E5"> parse it out and do</font>

857
00:37:33,119 --> 00:37:37,130
whatever<font color="#E5E5E5"> you want with the the results</font>

858
00:37:37,400 --> 00:37:44,309
<font color="#CCCCCC">how about we start doing</font><font color="#E5E5E5"> like some sort</font>

859
00:37:41,970 --> 00:37:46,140
of reconnaissance within an AWS

860
00:37:44,309 --> 00:37:47,670
environment whether it's<font color="#CCCCCC"> in a V PC</font><font color="#E5E5E5"> or</font>

861
00:37:46,140 --> 00:37:48,390
it's one of their more you know<font color="#E5E5E5"> managed</font>

862
00:37:47,670 --> 00:37:51,000
service

863
00:37:48,390 --> 00:37:53,578
well again assuming<font color="#E5E5E5"> that</font><font color="#CCCCCC"> lambda function</font>

864
00:37:51,000 --> 00:37:55,980
has the proper<font color="#E5E5E5"> I</font><font color="#CCCCCC"> M</font><font color="#E5E5E5"> roles and policies</font>

865
00:37:53,579 --> 00:37:57,750
assigned you can just kind of start

866
00:37:55,980 --> 00:38:00,980
<font color="#E5E5E5">going</font><font color="#CCCCCC"> out trial and error</font><font color="#E5E5E5"> and see what</font>

867
00:37:57,750 --> 00:38:04,140
what it has<font color="#CCCCCC"> access to</font><font color="#E5E5E5"> so for instance</font>

868
00:38:00,980 --> 00:38:06,390
maybe it's got<font color="#E5E5E5"> access</font><font color="#CCCCCC"> to an s3 bucket</font>

869
00:38:04,140 --> 00:38:09,990
with<font color="#CCCCCC"> god forbid personally identifiable</font>

870
00:38:06,390 --> 00:38:12,328
information<font color="#E5E5E5"> or whatever well we can make</font>

871
00:38:09,990 --> 00:38:15,328
that call<font color="#E5E5E5"> through</font><font color="#CCCCCC"> the API gateway have</font>

872
00:38:12,329 --> 00:38:18,450
<font color="#E5E5E5">lambda retrieve it from</font><font color="#CCCCCC"> the s3 bucket</font>

873
00:38:15,329 --> 00:38:21,509
which fingers cross is<font color="#CCCCCC"> not public bucket</font>

874
00:38:18,450 --> 00:38:22,680
like they so<font color="#E5E5E5"> often have been lately</font><font color="#CCCCCC"> but</font>

875
00:38:21,509 --> 00:38:24,660
again that's<font color="#E5E5E5"> a good way around that</font>

876
00:38:22,680 --> 00:38:26,549
<font color="#E5E5E5">maybe it's a private bucket you can't</font>

877
00:38:24,660 --> 00:38:29,640
directly access over the<font color="#CCCCCC"> Internet</font><font color="#E5E5E5"> but</font>

878
00:38:26,549 --> 00:38:32,009
this is a nice backdoor<font color="#CCCCCC"> and to the to</font>

879
00:38:29,640 --> 00:38:35,069
the private bucket<font color="#E5E5E5"> and it's just it's</font>

880
00:38:32,009 --> 00:38:37,200
<font color="#E5E5E5">it's a get object call and sure enough</font>

881
00:38:35,069 --> 00:38:43,369
<font color="#E5E5E5">if those permissions have</font><font color="#CCCCCC"> been</font><font color="#E5E5E5"> granted</font>

882
00:38:37,200 --> 00:38:45,058
s3 is going to return<font color="#E5E5E5"> that what about</font>

883
00:38:43,369 --> 00:38:47,930
network scanning

884
00:38:45,059 --> 00:38:51,240
what about proxying attacks off of this

885
00:38:47,930 --> 00:38:54,118
right<font color="#E5E5E5"> what if we want to do an in map</font>

886
00:38:51,240 --> 00:38:56,279
scan or we want<font color="#E5E5E5"> to run</font><font color="#CCCCCC"> Nessus against a</font>

887
00:38:54,119 --> 00:38:57,990
<font color="#E5E5E5">host on the</font><font color="#CCCCCC"> internet</font><font color="#E5E5E5"> we don't want</font><font color="#CCCCCC"> it</font>

888
00:38:56,279 --> 00:39:02,819
coming<font color="#E5E5E5"> from our IP so kind of think of</font>

889
00:38:57,990 --> 00:39:05,160
<font color="#E5E5E5">this similar to a proxy socks5 proxy</font><font color="#CCCCCC"> I</font>

890
00:39:02,819 --> 00:39:06,779
want to say<font color="#CCCCCC"> tor</font><font color="#E5E5E5"> bits not quite tor</font>

891
00:39:05,160 --> 00:39:09,210
doesn't provide the<font color="#CCCCCC"> anonymity and</font>

892
00:39:06,779 --> 00:39:12,390
security that that<font color="#CCCCCC"> nonetheless this</font><font color="#E5E5E5"> is</font><font color="#CCCCCC"> a</font>

893
00:39:09,210 --> 00:39:16,019
way<font color="#E5E5E5"> to kind</font><font color="#CCCCCC"> of you know</font><font color="#E5E5E5"> leapfrog or</font>

894
00:39:12,390 --> 00:39:18,450
whatnot<font color="#CCCCCC"> out to the internet through</font>

895
00:39:16,019 --> 00:39:22,740
lambda from your machine<font color="#CCCCCC"> and hiding your</font>

896
00:39:18,450 --> 00:39:24,569
<font color="#CCCCCC">identity</font><font color="#E5E5E5"> and again all the cloud admins</font>

897
00:39:22,740 --> 00:39:28,379
going to see through cloud<font color="#E5E5E5"> watch cloud</font>

898
00:39:24,569 --> 00:39:30,359
trail is this<font color="#E5E5E5"> lambda function executing</font>

899
00:39:28,380 --> 00:39:34,470
under that assigned role it's not going

900
00:39:30,359 --> 00:39:36,990
to<font color="#E5E5E5"> appear to</font><font color="#CCCCCC"> be</font><font color="#E5E5E5"> you</font><font color="#CCCCCC"> now could they maybe</font>

901
00:39:34,470 --> 00:39:38,669
go in and start enumerated what source

902
00:39:36,990 --> 00:39:41,209
IP address<font color="#CCCCCC"> that might be</font><font color="#E5E5E5"> coming from</font>

903
00:39:38,670 --> 00:39:43,950
sure they could do that in the you know

904
00:39:41,210 --> 00:39:44,610
<font color="#CCCCCC">API gateway logs</font><font color="#E5E5E5"> that would be logged</font>

905
00:39:43,950 --> 00:39:46,410
<font color="#E5E5E5">into</font><font color="#CCCCCC"> cloud</font>

906
00:39:44,610 --> 00:39:48,120
watch so there's some<font color="#E5E5E5"> additional hoops</font>

907
00:39:46,410 --> 00:39:49,440
you have to jump through if you really

908
00:39:48,120 --> 00:39:53,450
wanted<font color="#CCCCCC"> to hide your identity</font><font color="#E5E5E5"> but</font>

909
00:39:49,440 --> 00:39:56,640
nonetheless<font color="#CCCCCC"> pretty easy way to do it</font>

910
00:39:53,450 --> 00:39:59,330
<font color="#E5E5E5">so we've talked about persistent remote</font>

911
00:39:56,640 --> 00:40:03,330
access we've got about 10 or 15<font color="#CCCCCC"> minutes</font>

912
00:39:59,330 --> 00:40:06,060
<font color="#CCCCCC">some of the</font><font color="#E5E5E5"> limitations billing costs if</font>

913
00:40:03,330 --> 00:40:08,220
I'm invoking this over and over<font color="#CCCCCC"> again</font>

914
00:40:06,060 --> 00:40:10,799
right<font color="#E5E5E5"> remember</font><font color="#CCCCCC"> that the the</font><font color="#E5E5E5"> minimum</font>

915
00:40:08,220 --> 00:40:13,290
billing is<font color="#E5E5E5"> one hunt or one millisecond</font>

916
00:40:10,800 --> 00:40:15,500
<font color="#CCCCCC">oh I'm</font><font color="#E5E5E5"> sorry one second it's a hundred</font>

917
00:40:13,290 --> 00:40:18,810
Millicent

918
00:40:15,500 --> 00:40:21,420
so it costs<font color="#CCCCCC"> add up as this is going out</font>

919
00:40:18,810 --> 00:40:23,060
<font color="#E5E5E5">and and maybe doing port scans or maybe</font>

920
00:40:21,420 --> 00:40:26,300
it's pulling down files any of the other

921
00:40:23,060 --> 00:40:28,950
<font color="#E5E5E5">examples I just</font><font color="#CCCCCC"> cited</font><font color="#E5E5E5"> that's gonna be</font>

922
00:40:26,300 --> 00:40:32,220
costing someone money<font color="#CCCCCC"> or if you're doing</font>

923
00:40:28,950 --> 00:40:34,620
<font color="#E5E5E5">it</font><font color="#CCCCCC"> for yourself maybe for just whatever</font>

924
00:40:32,220 --> 00:40:37,020
purpose<font color="#E5E5E5"> maybe it's not even malicious in</font>

925
00:40:34,620 --> 00:40:42,180
nature<font color="#CCCCCC"> it's gonna it's going to add up</font>

926
00:40:37,020 --> 00:40:44,490
<font color="#E5E5E5">so we also have limitation on the</font><font color="#CCCCCC"> run</font>

927
00:40:42,180 --> 00:40:45,960
<font color="#CCCCCC">time execution so some of the</font>

928
00:40:44,490 --> 00:40:48,390
workarounds we want to look<font color="#E5E5E5"> at for</font><font color="#CCCCCC"> that</font>

929
00:40:45,960 --> 00:40:51,330
<font color="#E5E5E5">is maybe we can reverse engineer the</font>

930
00:40:48,390 --> 00:40:53,790
<font color="#E5E5E5">bootstrap in the</font><font color="#CCCCCC"> run time environment</font><font color="#E5E5E5"> we</font>

931
00:40:51,330 --> 00:40:57,569
<font color="#E5E5E5">want to ultimately control the data and</font>

932
00:40:53,790 --> 00:41:00,240
flow<font color="#CCCCCC"> of the run time execution so we'll</font>

933
00:40:57,570 --> 00:41:03,390
go<font color="#CCCCCC"> ahead</font><font color="#E5E5E5"> and pull down that bootstrap py</font>

934
00:41:00,240 --> 00:41:04,979
file but before we do that I found this

935
00:41:03,390 --> 00:41:08,009
<font color="#E5E5E5">really</font><font color="#CCCCCC"> interesting</font><font color="#E5E5E5"> is</font><font color="#CCCCCC"> right at the top</font>

936
00:41:04,980 --> 00:41:11,610
of<font color="#CCCCCC"> it</font><font color="#E5E5E5"> it's copyright 2013 and this is</font>

937
00:41:08,010 --> 00:41:15,870
<font color="#E5E5E5">you know this</font><font color="#CCCCCC"> is recent</font><font color="#E5E5E5"> so roughly five</font>

938
00:41:11,610 --> 00:41:19,290
six seven years<font color="#E5E5E5"> old now right</font><font color="#CCCCCC"> this is</font>

939
00:41:15,870 --> 00:41:24,420
when this bootstrap<font color="#E5E5E5"> file or function was</font>

940
00:41:19,290 --> 00:41:27,620
written<font color="#E5E5E5"> it's pretty lengthy but it again</font>

941
00:41:24,420 --> 00:41:29,850
is accompanied<font color="#E5E5E5"> by a shared</font><font color="#CCCCCC"> object file</font>

942
00:41:27,620 --> 00:41:32,220
<font color="#E5E5E5">and we'll get to that</font><font color="#CCCCCC"> here in</font><font color="#E5E5E5"> just a</font>

943
00:41:29,850 --> 00:41:36,150
second<font color="#CCCCCC"> I'm trying</font><font color="#E5E5E5"> to be very</font><font color="#CCCCCC"> careful</font>

944
00:41:32,220 --> 00:41:38,330
with this<font color="#E5E5E5"> visit</font><font color="#CCCCCC"> is</font><font color="#E5E5E5"> copyrighted and yeah</font>

945
00:41:36,150 --> 00:41:44,400
<font color="#CCCCCC">I don't I</font><font color="#E5E5E5"> don't want this off</font><font color="#CCCCCC"> Amazon</font>

946
00:41:38,330 --> 00:41:46,440
there Jeff<font color="#E5E5E5"> Bezos specifically so what</font>

947
00:41:44,400 --> 00:41:48,480
you're going to see here if you<font color="#E5E5E5"> are or</font>

948
00:41:46,440 --> 00:41:50,070
are not familiar<font color="#CCCCCC"> with Python</font><font color="#E5E5E5"> basically</font>

949
00:41:48,480 --> 00:41:52,710
this this line here with<font color="#CCCCCC"> the</font><font color="#E5E5E5"> arrow</font>

950
00:41:50,070 --> 00:41:55,490
pointing<font color="#CCCCCC"> to it we're importing something</font>

951
00:41:52,710 --> 00:41:58,320
<font color="#E5E5E5">called</font><font color="#CCCCCC"> run time as lamb to run time and</font>

952
00:41:55,490 --> 00:42:00,299
run<font color="#E5E5E5"> time is at the</font>

953
00:41:58,320 --> 00:42:02,430
shared object file in the same directory

954
00:42:00,300 --> 00:42:06,500
now that's something important<font color="#CCCCCC"> I will</font>

955
00:42:02,430 --> 00:42:11,279
<font color="#CCCCCC">get</font><font color="#E5E5E5"> here to get to momentarily but</font>

956
00:42:06,500 --> 00:42:14,280
anything that<font color="#CCCCCC"> is being called as lambda</font>

957
00:42:11,280 --> 00:42:15,780
<font color="#CCCCCC">runtime parenthesis and whatever is</font>

958
00:42:14,280 --> 00:42:20,880
going<font color="#E5E5E5"> to</font><font color="#CCCCCC"> come out of the shared object</font>

959
00:42:15,780 --> 00:42:24,510
<font color="#E5E5E5">file which again is C</font><font color="#CCCCCC"> Python so in the</font>

960
00:42:20,880 --> 00:42:25,740
main<font color="#E5E5E5"> function of bootstrap py found</font>

961
00:42:24,510 --> 00:42:28,830
something really<font color="#E5E5E5"> interesting</font>

962
00:42:25,740 --> 00:42:32,729
<font color="#CCCCCC">a WS goes through one</font><font color="#E5E5E5"> two three four</font>

963
00:42:28,830 --> 00:42:35,850
<font color="#E5E5E5">five environment variables called lambda</font>

964
00:42:32,730 --> 00:42:39,030
control socket lambda shared mem D file

965
00:42:35,850 --> 00:42:41,069
memory file descriptor<font color="#E5E5E5"> lambda log</font><font color="#CCCCCC"> FD</font>

966
00:42:39,030 --> 00:42:43,680
which<font color="#CCCCCC"> is a log file descriptor lambda</font>

967
00:42:41,070 --> 00:42:47,310
console socket<font color="#E5E5E5"> and lambda runtime load</font>

968
00:42:43,680 --> 00:42:50,220
time okay interesting<font color="#CCCCCC"> they go</font><font color="#E5E5E5"> through</font>

969
00:42:47,310 --> 00:42:51,990
and delete<font color="#CCCCCC"> all those</font><font color="#E5E5E5"> they cycle through</font>

970
00:42:50,220 --> 00:42:55,430
<font color="#E5E5E5">it and delete them that's the last line</font>

971
00:42:51,990 --> 00:43:00,000
so like why would they<font color="#CCCCCC"> be deleting those</font>

972
00:42:55,430 --> 00:43:02,069
well<font color="#CCCCCC"> now this</font><font color="#E5E5E5"> is where okay</font>

973
00:43:00,000 --> 00:43:04,470
maybe you<font color="#E5E5E5"> can see that good so a little</font>

974
00:43:02,070 --> 00:43:06,660
<font color="#E5E5E5">further down and bootstrap py main</font>

975
00:43:04,470 --> 00:43:10,620
function we've got a call to wait for

976
00:43:06,660 --> 00:43:12,750
start<font color="#CCCCCC"> ok so again</font><font color="#E5E5E5"> this is this is</font><font color="#CCCCCC"> before</font>

977
00:43:10,620 --> 00:43:14,400
we're even<font color="#CCCCCC"> running right this is when</font>

978
00:43:12,750 --> 00:43:16,110
it's being invoked it's bringing<font color="#E5E5E5"> it up</font>

979
00:43:14,400 --> 00:43:18,930
it's setting up the staging the

980
00:43:16,110 --> 00:43:20,610
environment basically<font color="#E5E5E5"> for execution so</font>

981
00:43:18,930 --> 00:43:23,339
let's take a<font color="#E5E5E5"> quick look at wait for</font>

982
00:43:20,610 --> 00:43:25,530
start function and what you're gonna<font color="#E5E5E5"> see</font>

983
00:43:23,340 --> 00:43:27,620
on<font color="#CCCCCC"> the right is lambda runtime dot</font>

984
00:43:25,530 --> 00:43:30,240
<font color="#E5E5E5">receive start and remember that's</font>

985
00:43:27,620 --> 00:43:32,279
imported from that shared object file<font color="#E5E5E5"> so</font>

986
00:43:30,240 --> 00:43:36,180
what what<font color="#E5E5E5"> could receive start possibly</font>

987
00:43:32,280 --> 00:43:37,470
<font color="#E5E5E5">mean so I opened this up I know this is</font>

988
00:43:36,180 --> 00:43:42,390
<font color="#E5E5E5">going</font><font color="#CCCCCC"> to be really</font><font color="#E5E5E5"> hard</font><font color="#CCCCCC"> to</font><font color="#E5E5E5"> see and</font>

989
00:43:37,470 --> 00:43:45,180
there's not<font color="#E5E5E5"> a lot to</font><font color="#CCCCCC"> see per se here but</font>

990
00:43:42,390 --> 00:43:48,120
I did find some interesting<font color="#E5E5E5"> artifacts on</font>

991
00:43:45,180 --> 00:43:51,660
the the file path from which the shared

992
00:43:48,120 --> 00:43:54,029
object was compiled<font color="#E5E5E5"> it's a it's a little</font>

993
00:43:51,660 --> 00:43:58,020
revealing<font color="#E5E5E5"> on maybe some of AWS Azure</font>

994
00:43:54,030 --> 00:44:02,070
Amazon<font color="#E5E5E5"> development environment</font><font color="#CCCCCC"> it does</font>

995
00:43:58,020 --> 00:44:05,820
say here in the bottom<font color="#E5E5E5"> part</font><font color="#CCCCCC"> I can't</font>

996
00:44:02,070 --> 00:44:08,520
point to<font color="#E5E5E5"> it that way there's a string</font>

997
00:44:05,820 --> 00:44:10,050
called session<font color="#E5E5E5"> here and a string called</font>

998
00:44:08,520 --> 00:44:11,119
secret here which caught<font color="#CCCCCC"> my eye</font>

999
00:44:10,050 --> 00:44:13,640
naturally

1000
00:44:11,119 --> 00:44:15,469
<font color="#E5E5E5">secret so clearly they're handling</font>

1001
00:44:13,640 --> 00:44:17,509
credentials and again<font color="#E5E5E5"> they have</font><font color="#CCCCCC"> to do</font>

1002
00:44:15,469 --> 00:44:19,819
that<font color="#E5E5E5"> as part</font><font color="#CCCCCC"> of the bootstrapping</font>

1003
00:44:17,509 --> 00:44:22,549
process<font color="#E5E5E5"> so whatever your code is running</font>

1004
00:44:19,819 --> 00:44:23,299
can execute with those permissions kind

1005
00:44:22,549 --> 00:44:25,210
of like what<font color="#E5E5E5"> we were talking about</font>

1006
00:44:23,299 --> 00:44:28,009
<font color="#E5E5E5">earlier</font>

1007
00:44:25,210 --> 00:44:28,910
so moving<font color="#E5E5E5"> on a</font><font color="#CCCCCC"> little</font><font color="#E5E5E5"> further down right</font>

1008
00:44:28,009 --> 00:44:30,529
here<font color="#E5E5E5"> at the top</font>

1009
00:44:28,910 --> 00:44:33,259
it was wait for start that we just

1010
00:44:30,529 --> 00:44:35,229
looked at it does some you know some

1011
00:44:33,259 --> 00:44:38,299
<font color="#CCCCCC">setup and configuration for the runtime</font>

1012
00:44:35,229 --> 00:44:40,189
<font color="#E5E5E5">but it gets down here to this other</font>

1013
00:44:38,299 --> 00:44:42,950
function<font color="#E5E5E5"> called underscore get</font>

1014
00:44:40,190 --> 00:44:45,019
underscore handlers and<font color="#E5E5E5"> it passes</font><font color="#CCCCCC"> two</font>

1015
00:44:42,950 --> 00:44:47,868
arguments to<font color="#E5E5E5"> it once called handler</font><font color="#CCCCCC"> ones</font>

1016
00:44:45,019 --> 00:44:51,109
called mode<font color="#E5E5E5"> well let's see what get</font>

1017
00:44:47,869 --> 00:44:53,989
handlers does<font color="#E5E5E5"> ah</font><font color="#CCCCCC"> interesting</font>

1018
00:44:51,109 --> 00:44:57,229
<font color="#E5E5E5">the first line in it is calling lambda</font>

1019
00:44:53,989 --> 00:45:01,579
underscore<font color="#CCCCCC"> run time dot report user in</font>

1020
00:44:57,229 --> 00:45:05,089
it start hmm interesting<font color="#CCCCCC"> also</font>

1021
00:45:01,579 --> 00:45:08,269
<font color="#CCCCCC">interesting</font><font color="#E5E5E5"> they leave this code or</font><font color="#CCCCCC"> this</font>

1022
00:45:05,089 --> 00:45:10,969
comment in the code I was like wow

1023
00:45:08,269 --> 00:45:14,229
that's it just seems to me that they

1024
00:45:10,969 --> 00:45:17,029
hadn't intended for<font color="#CCCCCC"> people to see this</font>

1025
00:45:14,229 --> 00:45:18,739
but I don't know<font color="#CCCCCC"> maybe they maybe</font><font color="#E5E5E5"> they</font>

1026
00:45:17,029 --> 00:45:21,140
want you to know that<font color="#E5E5E5"> this is the old</font>

1027
00:45:18,739 --> 00:45:26,479
way they were loading modules<font color="#E5E5E5"> I don't</font>

1028
00:45:21,140 --> 00:45:28,999
see why but yeah<font color="#CCCCCC"> so let's</font><font color="#E5E5E5"> look at what</font>

1029
00:45:26,479 --> 00:45:32,359
report user in<font color="#E5E5E5"> its start means or does</font>

1030
00:45:28,999 --> 00:45:34,819
because you know the<font color="#CCCCCC"> idea I had with the</font>

1031
00:45:32,359 --> 00:45:36,859
<font color="#CCCCCC">start-stop is</font><font color="#E5E5E5"> that with the with regards</font>

1032
00:45:34,819 --> 00:45:41,359
<font color="#CCCCCC">to the billing is there a way that</font><font color="#E5E5E5"> we</font>

1033
00:45:36,859 --> 00:45:43,308
can maybe<font color="#E5E5E5"> hmm tell lambda and the the</font>

1034
00:45:41,359 --> 00:45:45,469
underlying infrastructure that the

1035
00:45:43,309 --> 00:45:49,039
function<font color="#CCCCCC"> is no longer running when it</font>

1036
00:45:45,469 --> 00:45:54,200
<font color="#E5E5E5">really is right and get 299 seconds of</font>

1037
00:45:49,039 --> 00:45:56,119
free lambda so again not<font color="#E5E5E5"> a lot to really</font>

1038
00:45:54,200 --> 00:45:59,868
<font color="#E5E5E5">see here other</font><font color="#CCCCCC"> than what the</font><font color="#E5E5E5"> arrow is</font>

1039
00:45:56,119 --> 00:46:03,680
pointing<font color="#CCCCCC"> at and it's basically it's</font>

1040
00:45:59,869 --> 00:46:06,739
returning a value<font color="#E5E5E5"> for a report user in</font>

1041
00:46:03,680 --> 00:46:09,288
its start<font color="#E5E5E5"> plus I can't even see it on my</font>

1042
00:46:06,739 --> 00:46:13,940
<font color="#CCCCCC">screen so small 104 so it's returning</font><font color="#E5E5E5"> a</font>

1043
00:46:09,289 --> 00:46:16,400
value basically<font color="#E5E5E5"> and from what I can tell</font>

1044
00:46:13,940 --> 00:46:19,910
<font color="#E5E5E5">that's that's hooked into Amazon billing</font>

1045
00:46:16,400 --> 00:46:21,079
they know when it starts<font color="#E5E5E5"> and then</font><font color="#CCCCCC"> they</font>

1046
00:46:19,910 --> 00:46:23,118
know when it stops

1047
00:46:21,079 --> 00:46:23,810
<font color="#E5E5E5">so the next thing a little below or that</font>

1048
00:46:23,119 --> 00:46:26,090
below

1049
00:46:23,810 --> 00:46:29,390
that is called<font color="#E5E5E5"> lambda</font><font color="#CCCCCC"> run</font><font color="#E5E5E5"> time</font><font color="#CCCCCC"> dot</font>

1050
00:46:26,090 --> 00:46:31,880
report done and then immediately<font color="#E5E5E5"> after</font>

1051
00:46:29,390 --> 00:46:36,589
that<font color="#E5E5E5"> log info in it complete at epoch</font>

1052
00:46:31,880 --> 00:46:38,810
<font color="#E5E5E5">yada yada</font><font color="#CCCCCC"> yada</font><font color="#E5E5E5"> right</font><font color="#CCCCCC"> times 1000</font><font color="#E5E5E5"> so</font>

1053
00:46:36,590 --> 00:46:42,680
that's clearly doing<font color="#CCCCCC"> something the</font>

1054
00:46:38,810 --> 00:46:45,290
billing system and went ahead and<font color="#CCCCCC"> took</font>

1055
00:46:42,680 --> 00:46:47,270
you know a little little<font color="#E5E5E5"> look at what</font>

1056
00:46:45,290 --> 00:46:50,930
<font color="#CCCCCC">that particular</font><font color="#E5E5E5"> function is doing and</font>

1057
00:46:47,270 --> 00:46:53,750
again that<font color="#E5E5E5"> last line there it's a report</font>

1058
00:46:50,930 --> 00:46:55,520
underscore done plus<font color="#CCCCCC"> one eighty six</font><font color="#E5E5E5"> a</font>

1059
00:46:53,750 --> 00:46:57,380
little bit different value so it's

1060
00:46:55,520 --> 00:46:59,690
reporting something<font color="#CCCCCC"> at the beginning and</font>

1061
00:46:57,380 --> 00:47:03,080
something at the end<font color="#E5E5E5"> the difference of</font>

1062
00:46:59,690 --> 00:47:04,640
which they're<font color="#CCCCCC"> gonna bill you for so now</font>

1063
00:47:03,080 --> 00:47:07,520
<font color="#CCCCCC">I start thinking to</font><font color="#E5E5E5"> myself well</font><font color="#CCCCCC"> how can</font>

1064
00:47:04,640 --> 00:47:10,220
<font color="#CCCCCC">we gain control of</font><font color="#E5E5E5"> this how can we</font>

1065
00:47:07,520 --> 00:47:13,610
manipulate some of<font color="#E5E5E5"> it well it's I did a</font>

1066
00:47:10,220 --> 00:47:15,140
little<font color="#E5E5E5"> research on</font><font color="#CCCCCC"> C</font><font color="#E5E5E5"> Python again new to</font>

1067
00:47:13,610 --> 00:47:19,810
<font color="#CCCCCC">Python so I'm like wow this is</font><font color="#E5E5E5"> really</font>

1068
00:47:15,140 --> 00:47:23,000
<font color="#E5E5E5">cool evidently</font><font color="#CCCCCC"> you can tell C</font><font color="#E5E5E5"> Python</font>

1069
00:47:19,810 --> 00:47:25,910
<font color="#E5E5E5">what path what Python path you want to</font>

1070
00:47:23,000 --> 00:47:28,190
use and I was<font color="#E5E5E5"> like well AWS if you</font>

1071
00:47:25,910 --> 00:47:31,600
recall from some of those the the<font color="#CCCCCC"> FAQ</font>

1072
00:47:28,190 --> 00:47:33,920
earlier it says create and modify

1073
00:47:31,600 --> 00:47:37,730
environment<font color="#E5E5E5"> variable so I was like why</font>

1074
00:47:33,920 --> 00:47:40,700
don't<font color="#E5E5E5"> I just modify the Python path to</font>

1075
00:47:37,730 --> 00:47:43,630
be a path of my own choosing<font color="#CCCCCC"> ID temp or</font>

1076
00:47:40,700 --> 00:47:47,960
whatever or we have<font color="#CCCCCC"> write capability and</font>

1077
00:47:43,630 --> 00:47:49,190
then import our own package and then we

1078
00:47:47,960 --> 00:47:53,390
can control<font color="#CCCCCC"> I mean we could basically</font>

1079
00:47:49,190 --> 00:47:55,510
take bootstrap py copy paste it into our

1080
00:47:53,390 --> 00:47:59,720
<font color="#CCCCCC">own</font><font color="#E5E5E5"> and then go through and</font><font color="#CCCCCC"> modify it</font>

1081
00:47:55,510 --> 00:48:03,200
<font color="#E5E5E5">follow me right so when this</font><font color="#CCCCCC"> is invoked</font>

1082
00:47:59,720 --> 00:48:06,799
with a modified Python path with the

1083
00:48:03,200 --> 00:48:09,290
exact same package name right I'll show

1084
00:48:06,800 --> 00:48:11,300
you here<font color="#E5E5E5"> in just a sec it's going to do</font>

1085
00:48:09,290 --> 00:48:13,430
a order of operation it's gonna pick

1086
00:48:11,300 --> 00:48:16,400
ours up first and load it instead of<font color="#E5E5E5"> the</font>

1087
00:48:13,430 --> 00:48:21,710
<font color="#E5E5E5">intended one so some of the hypothetical</font>

1088
00:48:16,400 --> 00:48:23,210
possibilities hypothetical again<font color="#CCCCCC"> I want</font>

1089
00:48:21,710 --> 00:48:26,960
to be respectful<font color="#E5E5E5"> of Amazon I'm just</font>

1090
00:48:23,210 --> 00:48:30,770
security researcher<font color="#E5E5E5"> right that I'm very</font>

1091
00:48:26,960 --> 00:48:33,530
confident that<font color="#E5E5E5"> some of these could</font>

1092
00:48:30,770 --> 00:48:35,420
actually<font color="#E5E5E5"> materialize I'm just giving you</font>

1093
00:48:33,530 --> 00:48:38,899
<font color="#E5E5E5">enough information for you to do it on</font>

1094
00:48:35,420 --> 00:48:42,019
<font color="#CCCCCC">your own for educational purposes and</font>

1095
00:48:38,899 --> 00:48:43,999
but we can spoof<font color="#E5E5E5"> the lamb to execution</font>

1096
00:48:42,019 --> 00:48:45,828
time<font color="#E5E5E5"> and again we we're gonna get billed</font>

1097
00:48:43,999 --> 00:48:48,078
<font color="#E5E5E5">for one second but</font><font color="#CCCCCC"> if we can tell it</font>

1098
00:48:45,829 --> 00:48:52,880
it's already<font color="#E5E5E5"> done we can run it for</font>

1099
00:48:48,079 --> 00:48:55,880
another 299 seconds for free<font color="#CCCCCC"> we could</font>

1100
00:48:52,880 --> 00:48:57,859
maybe mullet inject malicious code<font color="#E5E5E5"> we</font>

1101
00:48:55,880 --> 00:49:01,069
could<font color="#E5E5E5"> do log poisoning now remember I</font>

1102
00:48:57,859 --> 00:49:05,089
<font color="#CCCCCC">said don't</font><font color="#E5E5E5"> forget about x-ray right what</font>

1103
00:49:01,069 --> 00:49:07,609
if we have an admin<font color="#CCCCCC"> or some lead code</font>

1104
00:49:05,089 --> 00:49:09,919
developer<font color="#E5E5E5"> and maybe we want something</font>

1105
00:49:07,609 --> 00:49:11,659
<font color="#E5E5E5">off</font><font color="#CCCCCC"> of</font><font color="#E5E5E5"> their their system if we can</font>

1106
00:49:09,919 --> 00:49:15,799
<font color="#CCCCCC">poison</font><font color="#E5E5E5"> the logs or inject some sort of</font>

1107
00:49:11,659 --> 00:49:17,869
<font color="#CCCCCC">malicious code</font><font color="#E5E5E5"> into</font><font color="#CCCCCC"> the x-ray logs</font><font color="#E5E5E5"> right</font>

1108
00:49:15,799 --> 00:49:21,919
<font color="#E5E5E5">they view that through a web interface</font>

1109
00:49:17,869 --> 00:49:24,409
<font color="#CCCCCC">an AWS</font><font color="#E5E5E5"> through debugging something but</font>

1110
00:49:21,919 --> 00:49:26,359
cross-site scripting cookie hijacking

1111
00:49:24,409 --> 00:49:27,439
now we've<font color="#CCCCCC"> hijacked their session and we</font>

1112
00:49:26,359 --> 00:49:31,009
can do what they do

1113
00:49:27,439 --> 00:49:33,259
so some cool possibilities there and I

1114
00:49:31,009 --> 00:49:35,529
<font color="#CCCCCC">don't know if Elizabeth is in the room</font>

1115
00:49:33,259 --> 00:49:38,569
but<font color="#CCCCCC"> she just gave a phenomenal talk on</font>

1116
00:49:35,529 --> 00:49:40,640
<font color="#E5E5E5">container security and track</font><font color="#CCCCCC"> one</font><font color="#E5E5E5"> I</font>

1117
00:49:38,569 --> 00:49:42,969
suspect<font color="#CCCCCC"> she and I are gonna be</font><font color="#E5E5E5"> bouncing</font>

1118
00:49:40,640 --> 00:49:45,888
<font color="#E5E5E5">some ideas off each other tonight</font><font color="#CCCCCC"> I</font>

1119
00:49:42,969 --> 00:49:47,809
think there may be a way to<font color="#E5E5E5"> escape</font>

1120
00:49:45,889 --> 00:49:49,419
containers<font color="#E5E5E5"> so I'm not really sure</font><font color="#CCCCCC"> so I</font>

1121
00:49:47,809 --> 00:49:52,159
want<font color="#E5E5E5"> to consult</font><font color="#CCCCCC"> with</font><font color="#E5E5E5"> her on</font><font color="#CCCCCC"> that but um</font>

1122
00:49:49,419 --> 00:49:54,219
<font color="#E5E5E5">once you can gain execution flow and</font>

1123
00:49:52,159 --> 00:49:56,479
<font color="#CCCCCC">control there's again the attack surface</font>

1124
00:49:54,219 --> 00:49:59,779
expands dramatically at that point is

1125
00:49:56,479 --> 00:50:01,939
you're pretty much<font color="#E5E5E5"> in</font><font color="#CCCCCC"> control so just</font>

1126
00:49:59,779 --> 00:50:04,689
noting here<font color="#CCCCCC"> these are some of the</font>

1127
00:50:01,939 --> 00:50:07,729
<font color="#E5E5E5">imports again we would have to name our</font>

1128
00:50:04,689 --> 00:50:11,328
imports<font color="#E5E5E5"> exactly what these were so if we</font>

1129
00:50:07,729 --> 00:50:13,698
did decimal dot<font color="#E5E5E5"> py modified Python path</font>

1130
00:50:11,329 --> 00:50:16,639
the point or our own decimal py we could

1131
00:50:13,699 --> 00:50:19,069
execute<font color="#E5E5E5"> that just as we want so all</font>

1132
00:50:16,639 --> 00:50:23,329
<font color="#E5E5E5">right we're right on time</font><font color="#CCCCCC"> actually</font><font color="#E5E5E5"> does</font>

1133
00:50:19,069 --> 00:50:25,209
that<font color="#CCCCCC"> have</font><font color="#E5E5E5"> been big one really fast so</font>

1134
00:50:23,329 --> 00:50:29,689
<font color="#E5E5E5">getting here to the mitigations part</font>

1135
00:50:25,209 --> 00:50:33,109
<font color="#E5E5E5">access control study I am for science</font>

1136
00:50:29,689 --> 00:50:35,649
<font color="#E5E5E5">it's it's it really</font><font color="#CCCCCC"> is its own science</font>

1137
00:50:33,109 --> 00:50:38,719
<font color="#E5E5E5">places that I've worked</font><font color="#CCCCCC"> that have used</font>

1138
00:50:35,649 --> 00:50:40,999
<font color="#E5E5E5">AWS very heavily and heavily rely on</font>

1139
00:50:38,719 --> 00:50:43,219
them have a complete Identity and Access

1140
00:50:40,999 --> 00:50:46,669
Management<font color="#E5E5E5"> team that's all they do as</font>

1141
00:50:43,219 --> 00:50:48,859
they manage<font color="#E5E5E5"> policies and it's it truly</font>

1142
00:50:46,669 --> 00:50:51,200
as its own silence<font color="#E5E5E5"> science and if you</font>

1143
00:50:48,859 --> 00:50:52,759
really want to lock down<font color="#CCCCCC"> your AWS</font>

1144
00:50:51,200 --> 00:50:55,040
environment properly<font color="#E5E5E5"> you need to</font>

1145
00:50:52,760 --> 00:50:56,510
understand it very<font color="#E5E5E5"> well</font><font color="#CCCCCC"> otherwise you're</font>

1146
00:50:55,040 --> 00:51:00,520
going to<font color="#E5E5E5"> go in and probably use an</font>

1147
00:50:56,510 --> 00:51:00,520
asterisk<font color="#CCCCCC"> just to make</font><font color="#E5E5E5"> life easier right</font>

1148
00:51:01,390 --> 00:51:08,690
<font color="#E5E5E5">lease privilege need to know kind of</font>

1149
00:51:03,770 --> 00:51:11,180
best practice stuff here right<font color="#CCCCCC"> is maybe</font>

1150
00:51:08,690 --> 00:51:14,150
often overlooked as it is<font color="#E5E5E5"> good</font>

1151
00:51:11,180 --> 00:51:16,730
housekeeping<font color="#E5E5E5"> for your account is always</font>

1152
00:51:14,150 --> 00:51:19,490
paramount<font color="#CCCCCC"> if you've</font><font color="#E5E5E5"> got a user that's</font>

1153
00:51:16,730 --> 00:51:22,880
new and you give<font color="#E5E5E5"> them an account make</font>

1154
00:51:19,490 --> 00:51:24,348
<font color="#E5E5E5">sure you're taking those rights away or</font>

1155
00:51:22,880 --> 00:51:26,030
deleting the account if they<font color="#CCCCCC"> either</font>

1156
00:51:24,349 --> 00:51:28,940
leave the team leave the company

1157
00:51:26,030 --> 00:51:30,530
whatever<font color="#CCCCCC"> decoupling of that account</font>

1158
00:51:28,940 --> 00:51:34,160
provisioning is<font color="#E5E5E5"> oftentimes very</font>

1159
00:51:30,530 --> 00:51:37,130
problematic<font color="#CCCCCC"> because there are</font>

1160
00:51:34,160 --> 00:51:39,890
environments<font color="#CCCCCC"> where the provisioning</font>

1161
00:51:37,130 --> 00:51:41,540
takes place perhaps<font color="#E5E5E5"> through ad but when</font>

1162
00:51:39,890 --> 00:51:43,520
that person leaves and they're removed

1163
00:51:41,540 --> 00:51:46,310
<font color="#E5E5E5">from</font><font color="#CCCCCC"> ad their accounts still active an</font>

1164
00:51:43,520 --> 00:51:50,210
AWS<font color="#E5E5E5"> not naming any names</font><font color="#CCCCCC"> certain</font>

1165
00:51:46,310 --> 00:51:55,009
<font color="#E5E5E5">companies yeah then you can also</font>

1166
00:51:50,210 --> 00:51:59,690
restrict access for CLI or web interface

1167
00:51:55,010 --> 00:52:01,430
<font color="#E5E5E5">or web console access SDK API calls you</font>

1168
00:51:59,690 --> 00:52:05,359
can<font color="#E5E5E5"> restrict those act that access as</font>

1169
00:52:01,430 --> 00:52:08,180
well test and assess the code<font color="#E5E5E5"> again this</font>

1170
00:52:05,359 --> 00:52:10,578
is<font color="#CCCCCC"> a</font><font color="#E5E5E5"> very dev</font><font color="#CCCCCC"> sach</font><font color="#E5E5E5"> op see a lot</font><font color="#CCCCCC"> of</font>

1171
00:52:08,180 --> 00:52:14,149
automated deployments<font color="#CCCCCC"> see ICD pipelines</font>

1172
00:52:10,579 --> 00:52:17,210
so back<font color="#CCCCCC"> to good old you know peer review</font>

1173
00:52:14,150 --> 00:52:19,700
if<font color="#E5E5E5"> you write some</font><font color="#CCCCCC"> land you</font><font color="#E5E5E5"> know lambda</font>

1174
00:52:17,210 --> 00:52:22,369
code<font color="#E5E5E5"> I need to look at it requires a</font>

1175
00:52:19,700 --> 00:52:24,049
little<font color="#E5E5E5"> bit</font><font color="#CCCCCC"> more of collusion</font><font color="#E5E5E5"> a little</font>

1176
00:52:22,369 --> 00:52:26,710
bit of a segregation of duties right

1177
00:52:24,050 --> 00:52:29,540
it's just<font color="#CCCCCC"> a due diligence measure</font>

1178
00:52:26,710 --> 00:52:32,329
integrate the testing into your<font color="#E5E5E5"> CI</font><font color="#CCCCCC"> CD</font>

1179
00:52:29,540 --> 00:52:36,020
pipeline perhaps with<font color="#CCCCCC"> some sort of</font>

1180
00:52:32,329 --> 00:52:38,720
<font color="#E5E5E5">automated sassed testing</font><font color="#CCCCCC"> there's a</font>

1181
00:52:36,020 --> 00:52:41,210
<font color="#E5E5E5">number of</font><font color="#CCCCCC"> solutions out there</font><font color="#E5E5E5"> and then</font>

1182
00:52:38,720 --> 00:52:44,209
leverage infrastructure is code which is

1183
00:52:41,210 --> 00:52:45,710
kind of<font color="#E5E5E5"> the hot thing with cloud</font>

1184
00:52:44,210 --> 00:52:49,940
formation<font color="#CCCCCC"> templates I'll get to that</font>

1185
00:52:45,710 --> 00:52:53,599
<font color="#CCCCCC">just a sec I think</font><font color="#E5E5E5"> this is the last yeah</font>

1186
00:52:49,940 --> 00:52:55,910
last<font color="#E5E5E5"> slide here so</font><font color="#CCCCCC"> monitoring in the</font>

1187
00:52:53,599 --> 00:52:58,849
cloud watch and cloud trail there's

1188
00:52:55,910 --> 00:53:00,589
going to be certain<font color="#CCCCCC"> i/o sees even though</font>

1189
00:52:58,849 --> 00:53:03,349
it's being logged<font color="#E5E5E5"> as that lambda role</font>

1190
00:53:00,589 --> 00:53:04,130
there's certain you know fishy things

1191
00:53:03,349 --> 00:53:06,620
going on right

1192
00:53:04,130 --> 00:53:09,310
you start<font color="#E5E5E5"> seeing a ton of invocations</font>

1193
00:53:06,620 --> 00:53:12,350
and<font color="#E5E5E5"> it's doing</font><font color="#CCCCCC"> you know it's executing a</font>

1194
00:53:09,310 --> 00:53:17,990
lambda<font color="#E5E5E5"> function called my</font><font color="#CCCCCC"> port scan</font><font color="#E5E5E5"> dot</font>

1195
00:53:12,350 --> 00:53:19,520
<font color="#E5E5E5">py what's this right</font><font color="#CCCCCC"> also if you if</font>

1196
00:53:17,990 --> 00:53:22,509
you've<font color="#CCCCCC"> never played around</font><font color="#E5E5E5"> the elk stack</font>

1197
00:53:19,520 --> 00:53:26,630
they have a native implementation in AWS

1198
00:53:22,510 --> 00:53:30,230
elk stack is elastic search<font color="#CCCCCC"> long</font><font color="#E5E5E5"> stash</font>

1199
00:53:26,630 --> 00:53:32,750
and<font color="#CCCCCC"> Cabana</font><font color="#E5E5E5"> they it's pretty much an elk</font>

1200
00:53:30,230 --> 00:53:34,340
stack but you're using VPC flow logs and

1201
00:53:32,750 --> 00:53:38,030
some<font color="#E5E5E5"> other stuff to visualize it really</font>

1202
00:53:34,340 --> 00:53:41,330
neat stuff but a easier<font color="#CCCCCC"> way to maybe see</font>

1203
00:53:38,030 --> 00:53:43,100
some sort<font color="#E5E5E5"> of an</font><font color="#CCCCCC"> anomaly or</font><font color="#E5E5E5"> more</font>

1204
00:53:41,330 --> 00:53:44,840
<font color="#CCCCCC">traditional means</font><font color="#E5E5E5"> send the logs over to</font>

1205
00:53:43,100 --> 00:53:46,610
a sock<font color="#CCCCCC"> form or you know a little</font><font color="#E5E5E5"> bit</font>

1206
00:53:44,840 --> 00:53:49,040
<font color="#E5E5E5">deeper analysis and correlation and</font>

1207
00:53:46,610 --> 00:53:51,740
stuff<font color="#E5E5E5"> and in response you</font><font color="#CCCCCC"> know leverage</font>

1208
00:53:49,040 --> 00:53:56,270
the power of automation<font color="#CCCCCC"> and</font><font color="#E5E5E5"> your CI CD</font>

1209
00:53:51,740 --> 00:54:00,140
pipelines<font color="#CCCCCC"> you can do</font><font color="#E5E5E5"> alerting instantly</font>

1210
00:53:56,270 --> 00:54:04,220
to your<font color="#CCCCCC"> d14 upon some sort</font><font color="#E5E5E5"> of detection</font>

1211
00:54:00,140 --> 00:54:07,490
<font color="#CCCCCC">maybe you see an IOT or IOC</font><font color="#E5E5E5"> so</font><font color="#CCCCCC"> many so</font>

1212
00:54:04,220 --> 00:54:09,470
many acronyms in<font color="#E5E5E5"> our industry</font><font color="#CCCCCC"> you know</font>

1213
00:54:07,490 --> 00:54:12,200
alert them<font color="#E5E5E5"> immediately so</font><font color="#CCCCCC"> they can take</font>

1214
00:54:09,470 --> 00:54:15,140
you<font color="#E5E5E5"> know responsive measures to go in</font>

1215
00:54:12,200 --> 00:54:16,790
and fix it<font color="#E5E5E5"> and I was going to say revert</font>

1216
00:54:15,140 --> 00:54:19,370
the snapshot but that's more<font color="#E5E5E5"> of</font><font color="#CCCCCC"> a</font>

1217
00:54:16,790 --> 00:54:21,620
<font color="#E5E5E5">virtualization term so revert to known</font>

1218
00:54:19,370 --> 00:54:23,630
known good<font color="#E5E5E5"> state or known</font><font color="#CCCCCC"> state with a</font>

1219
00:54:21,620 --> 00:54:27,230
cloud formation template so every time

1220
00:54:23,630 --> 00:54:29,930
<font color="#E5E5E5">you you update your your environment</font>

1221
00:54:27,230 --> 00:54:32,480
your<font color="#CCCCCC"> VPC if you're using infrastructure</font>

1222
00:54:29,930 --> 00:54:35,240
as code using cloud formation templates

1223
00:54:32,480 --> 00:54:38,060
or terraform or whatnot<font color="#CCCCCC"> you should have</font>

1224
00:54:35,240 --> 00:54:39,649
had the<font color="#CCCCCC"> the previous</font><font color="#E5E5E5"> version that was</font>

1225
00:54:38,060 --> 00:54:41,029
pushed in the previous version of that

1226
00:54:39,650 --> 00:54:44,510
<font color="#E5E5E5">right it's got version in control and</font>

1227
00:54:41,030 --> 00:54:46,490
whatnot<font color="#CCCCCC"> so revert back</font><font color="#E5E5E5"> go and look at</font>

1228
00:54:44,510 --> 00:54:47,930
things if it's the same you can<font color="#E5E5E5"> revert</font>

1229
00:54:46,490 --> 00:54:49,549
back to the previous in the previous

1230
00:54:47,930 --> 00:54:52,700
until<font color="#E5E5E5"> you had a known good state and</font>

1231
00:54:49,550 --> 00:54:56,510
then you know relaunch so to speak from

1232
00:54:52,700 --> 00:54:58,279
<font color="#E5E5E5">there so that is all I have for</font><font color="#CCCCCC"> today</font><font color="#E5E5E5"> I</font>

1233
00:54:56,510 --> 00:55:02,120
want to<font color="#E5E5E5"> thank you all</font><font color="#CCCCCC"> again</font><font color="#E5E5E5"> for sticking</font>

1234
00:54:58,280 --> 00:55:03,890
around<font color="#CCCCCC"> late in</font><font color="#E5E5E5"> the day available</font><font color="#CCCCCC"> here</font>

1235
00:55:02,120 --> 00:55:05,450
for<font color="#CCCCCC"> five</font><font color="#E5E5E5"> minutes for</font><font color="#CCCCCC"> questions I'll be</font>

1236
00:55:03,890 --> 00:55:07,549
<font color="#E5E5E5">here</font><font color="#CCCCCC"> the</font><font color="#E5E5E5"> remainder of the evening as</font>

1237
00:55:05,450 --> 00:55:10,149
<font color="#CCCCCC">well but um thanks</font><font color="#E5E5E5"> very much for</font>

1238
00:55:07,550 --> 00:55:10,150
<font color="#E5E5E5">listening to</font><font color="#CCCCCC"> me</font>

1239
00:55:13,950 --> 00:55:19,629
this is to suggest<font color="#E5E5E5"> I'm going to continue</font>

1240
00:55:16,180 --> 00:55:21,250
<font color="#CCCCCC">my my research</font><font color="#E5E5E5"> hopefully</font><font color="#CCCCCC"> I get some</font>

1241
00:55:19,630 --> 00:55:22,450
other ideas and it's also a little<font color="#CCCCCC"> bit</font>

1242
00:55:21,250 --> 00:55:24,120
<font color="#E5E5E5">of play because they've had how many</font>

1243
00:55:22,450 --> 00:55:26,439
<font color="#CCCCCC">fast</font><font color="#E5E5E5"> and the</font><font color="#CCCCCC"> furious</font><font color="#E5E5E5"> not like eight</font>

1244
00:55:24,120 --> 00:55:28,000
right<font color="#E5E5E5"> so maybe I'll start like</font>

1245
00:55:26,440 --> 00:55:30,970
versioning this or something<font color="#CCCCCC"> I don't</font>

1246
00:55:28,000 --> 00:56:12,910
<font color="#E5E5E5">know any questions that can answer</font>

1247
00:55:30,970 --> 00:56:16,029
yeah usually from what I can<font color="#CCCCCC"> tell you</font>

1248
00:56:12,910 --> 00:56:18,220
each time<font color="#E5E5E5"> a containers invoke as part of</font>

1249
00:56:16,030 --> 00:56:20,290
bootstrapping<font color="#CCCCCC"> your lambda</font><font color="#E5E5E5"> function code</font>

1250
00:56:18,220 --> 00:56:22,330
right there's like this is like

1251
00:56:20,290 --> 00:56:27,460
<font color="#CCCCCC">Inception there's so many like layers to</font>

1252
00:56:22,330 --> 00:56:30,250
this but you<font color="#CCCCCC"> eat</font><font color="#E5E5E5"> user that</font><font color="#CCCCCC"> SVX user has</font>

1253
00:56:27,460 --> 00:56:33,370
a dedicated container<font color="#CCCCCC"> and what I can</font>

1254
00:56:30,250 --> 00:56:35,890
<font color="#E5E5E5">tell so</font><font color="#CCCCCC"> if</font><font color="#E5E5E5"> I launch a if I if I execute</font>

1255
00:56:33,370 --> 00:56:38,740
a function<font color="#CCCCCC"> its invoked that function</font>

1256
00:56:35,890 --> 00:56:40,359
exists in that dedicated<font color="#E5E5E5"> container if</font>

1257
00:56:38,740 --> 00:56:41,919
you did you would get a<font color="#CCCCCC"> different</font>

1258
00:56:40,360 --> 00:56:44,230
dedicated container you and I are not

1259
00:56:41,920 --> 00:56:45,700
both running<font color="#E5E5E5"> it these again then the</font>

1260
00:56:44,230 --> 00:56:47,320
billing gets kind of<font color="#E5E5E5"> quirky they don't</font>

1261
00:56:45,700 --> 00:56:51,810
know how<font color="#E5E5E5"> to build to you versus me and</font>

1262
00:56:47,320 --> 00:56:51,810
<font color="#E5E5E5">stuff like that so plus for security so</font>

1263
00:57:04,590 --> 00:57:12,430
huh it knows<font color="#E5E5E5"> how to</font><font color="#CCCCCC"> bill you right I</font>

1264
00:57:09,970 --> 00:57:14,709
guess what I'm saying<font color="#CCCCCC"> is if he's got a</font>

1265
00:57:12,430 --> 00:57:16,629
different<font color="#E5E5E5"> account like I mean</font><font color="#CCCCCC"> like AWS</font>

1266
00:57:14,710 --> 00:57:19,450
<font color="#E5E5E5">account yours is one two</font><font color="#CCCCCC"> three</font><font color="#E5E5E5"> -</font><font color="#CCCCCC"> four</font>

1267
00:57:16,630 --> 00:57:21,150
<font color="#CCCCCC">five six</font><font color="#E5E5E5"> right and we both execute let's</font>

1268
00:57:19,450 --> 00:57:23,308
just say<font color="#CCCCCC"> for simplicity</font><font color="#E5E5E5"> we execute</font>

1269
00:57:21,150 --> 00:57:25,710
the same code<font color="#E5E5E5"> you're gonna get a</font>

1270
00:57:23,309 --> 00:57:30,270
different<font color="#CCCCCC"> container than I do</font><font color="#E5E5E5"> now</font><font color="#CCCCCC"> once</font>

1271
00:57:25,710 --> 00:57:32,549
that<font color="#E5E5E5"> goes down and</font><font color="#CCCCCC"> weary invoke you know</font>

1272
00:57:30,270 --> 00:57:34,259
you could<font color="#E5E5E5"> get my container I could get</font>

1273
00:57:32,549 --> 00:57:38,038
yours for all I know right<font color="#E5E5E5"> because</font>

1274
00:57:34,260 --> 00:57:39,180
there's all those<font color="#CCCCCC"> SVX users I was that</font>

1275
00:57:38,039 --> 00:57:40,410
was<font color="#E5E5E5"> going down the same line of thinking</font>

1276
00:57:39,180 --> 00:57:42,569
<font color="#CCCCCC">because I was like why would they</font><font color="#E5E5E5"> need</font>

1277
00:57:40,410 --> 00:57:44,250
more<font color="#CCCCCC"> than one sandbox user why do they</font>

1278
00:57:42,569 --> 00:57:49,190
need<font color="#CCCCCC"> what like thirty</font><font color="#E5E5E5"> of them</font><font color="#CCCCCC"> or</font>

1279
00:57:44,250 --> 00:57:49,190
<font color="#E5E5E5">whatever they had in there</font><font color="#CCCCCC"> but from</font>

1280
00:58:00,349 --> 00:58:07,829
those credentials<font color="#E5E5E5"> are specific to that</font>

1281
00:58:03,599 --> 00:58:09,599
AWS<font color="#E5E5E5"> lambda</font><font color="#CCCCCC"> role that's a sign through I</font>

1282
00:58:07,829 --> 00:58:13,500
<font color="#CCCCCC">am yeah yeah that's where those are</font>

1283
00:58:09,599 --> 00:58:15,299
coming<font color="#E5E5E5"> from so everything's</font><font color="#CCCCCC"> in AWS has</font>

1284
00:58:13,500 --> 00:58:17,010
hooked into I am one way or another I

1285
00:58:15,299 --> 00:58:20,910
<font color="#CCCCCC">mean that's like the root of all</font>

1286
00:58:17,010 --> 00:58:23,400
security<font color="#E5E5E5"> in an AWS so yeah if you</font>

1287
00:58:20,910 --> 00:58:27,180
invoked a<font color="#CCCCCC"> lambda function and that</font>

1288
00:58:23,400 --> 00:58:30,720
container spun up<font color="#CCCCCC"> if you and I had a</font>

1289
00:58:27,180 --> 00:58:32,460
shared a like AWS<font color="#E5E5E5"> account we would have</font>

1290
00:58:30,720 --> 00:58:34,439
the<font color="#E5E5E5"> same credentials then but if you're</font>

1291
00:58:32,460 --> 00:58:36,720
in another<font color="#E5E5E5"> AWS account you would get a</font>

1292
00:58:34,440 --> 00:58:38,339
completely separate one yeah<font color="#E5E5E5"> does that</font>

1293
00:58:36,720 --> 00:58:41,578
make<font color="#CCCCCC"> sense okay does that</font><font color="#E5E5E5"> answer your</font>

1294
00:58:38,339 --> 00:58:42,930
question<font color="#CCCCCC"> too cool did everyone</font><font color="#E5E5E5"> hear his</font>

1295
00:58:41,579 --> 00:58:44,309
question I'm usually good about

1296
00:58:42,930 --> 00:58:46,950
repeating it and make sure<font color="#E5E5E5"> everyone</font>

1297
00:58:44,309 --> 00:58:50,279
<font color="#E5E5E5">heard it okay anything else I thought</font><font color="#CCCCCC"> I</font>

1298
00:58:46,950 --> 00:58:51,930
saw a hand<font color="#CCCCCC"> over here</font><font color="#E5E5E5"> no all right well</font>

1299
00:58:50,279 --> 00:58:55,549
let's go drink some beer<font color="#CCCCCC"> and eat some</font>

1300
00:58:51,930 --> 00:58:55,549
food<font color="#CCCCCC"> thanks</font>

