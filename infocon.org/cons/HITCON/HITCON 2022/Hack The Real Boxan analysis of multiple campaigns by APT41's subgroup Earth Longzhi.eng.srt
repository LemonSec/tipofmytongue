1
00:00:04,259 --> 00:00:07,680
uh hello everyone so uh in this talk

2
00:00:07,680 --> 00:00:09,900
well we it's very special we have a

3
00:00:09,900 --> 00:00:12,360
Japanese speaker but he's on site and

4
00:00:12,360 --> 00:00:17,820
can directly uh talk to us and for this

5
00:00:17,820 --> 00:00:21,960
station uh is a real box and analyze of

6
00:00:21,960 --> 00:00:25,080
multiple campaign by apt-41 subscript

7
00:00:25,080 --> 00:00:28,500
Earth uh

8
00:00:28,500 --> 00:00:31,260
Earth long Z okay

9
00:00:31,260 --> 00:00:32,640
yeah

10
00:00:32,640 --> 00:00:35,100
um because ipd41 is a very famous group

11
00:00:35,100 --> 00:00:36,780
and become much a much complex

12
00:00:36,780 --> 00:00:40,379
complicated and larger so it gives us to

13
00:00:40,379 --> 00:00:42,239
do the CTI when we do a straight

14
00:00:42,239 --> 00:00:44,460
intelligent it make a lot of trouble so

15
00:00:44,460 --> 00:00:47,340
to divide this big group apt-41 into

16
00:00:47,340 --> 00:00:51,000
more details uh subgroup and do a more

17
00:00:51,000 --> 00:00:52,860
detailed analysis it's very requirement

18
00:00:52,860 --> 00:00:56,280
research so today they will give a

19
00:00:56,280 --> 00:00:59,160
introduce a list sub uh this subgroup of

20
00:00:59,160 --> 00:01:02,280
ap41 and introduce layer TTP

21
00:01:02,280 --> 00:01:04,260
an auto speaker

22
00:01:04,260 --> 00:01:08,880
uh the first one is the hierarchy horror

23
00:01:08,880 --> 00:01:13,020
yeah it's a researcher from micro and we

24
00:01:13,020 --> 00:01:15,000
also had the teddly he's also a

25
00:01:15,000 --> 00:01:16,560
researcher from trademark

26
00:01:16,560 --> 00:01:18,420
so let's uh

27
00:01:18,420 --> 00:01:20,280
pass a time to land for this

28
00:01:20,280 --> 00:01:22,680
presentation so let's welcome their

29
00:01:22,680 --> 00:01:25,159
presentation

30
00:01:25,850 --> 00:01:28,080
[Applause]

31
00:01:28,080 --> 00:01:30,960
uh hello a good morning everyone

32
00:01:30,960 --> 00:01:33,780
um today you are welcome to share in our

33
00:01:33,780 --> 00:01:36,659
recent research on the subgroups of the

34
00:01:36,659 --> 00:01:38,100
av-41

35
00:01:38,100 --> 00:01:42,479
so um on desktop briefly talk about us

36
00:01:42,479 --> 00:01:45,360
so um I'm teddly I'm currently the

37
00:01:45,360 --> 00:01:47,880
research researchers in tramango Taiwan

38
00:01:47,880 --> 00:01:51,420
so uh my best my researchers mainly

39
00:01:51,420 --> 00:01:55,020
focused on the app pack best uh uh avd

40
00:01:55,020 --> 00:01:58,680
incidents and so how uh Hassan do you

41
00:01:58,680 --> 00:02:00,720
want to introduce yourself to our

42
00:02:00,720 --> 00:02:03,960
audience okay uh hello

43
00:02:03,960 --> 00:02:07,200
um I'm Hara and I'm our researcher at

44
00:02:07,200 --> 00:02:10,258
the tree micro Japan so I usually work

45
00:02:10,258 --> 00:02:13,319
in Japan so I'm super happy to be here

46
00:02:13,319 --> 00:02:16,140
physically so um anyway

47
00:02:16,140 --> 00:02:18,360
um I also do our third intelligence

48
00:02:18,360 --> 00:02:21,599
research especially on APAC regions and

49
00:02:21,599 --> 00:02:24,540
I do our hunting insane response and

50
00:02:24,540 --> 00:02:28,200
model analysis whatever and uh uh I like

51
00:02:28,200 --> 00:02:31,020
to think about new Mario naming so we

52
00:02:31,020 --> 00:02:32,940
are excited to be here to share our new

53
00:02:32,940 --> 00:02:34,920
Mario thank you

54
00:02:34,920 --> 00:02:40,200
okay so okay so here's the uh the today

55
00:02:40,200 --> 00:02:43,319
is the sharing will uh be uh three parts

56
00:02:43,319 --> 00:02:45,720
the first part we're talking about who

57
00:02:45,720 --> 00:02:48,420
is the earth long Z and second part is

58
00:02:48,420 --> 00:02:51,720
uh because uh uh when we are investigate

59
00:02:51,720 --> 00:02:53,459
in the the Earth's lonzi we found

60
00:02:53,459 --> 00:02:55,500
there's a two campaign in different time

61
00:02:55,500 --> 00:02:57,599
time time periods so we were talking

62
00:02:57,599 --> 00:02:59,879
about more details about these two

63
00:02:59,879 --> 00:03:04,739
campaign and third one uh we are uh uh

64
00:03:04,739 --> 00:03:07,440
introduce uh how how we attribute this

65
00:03:07,440 --> 00:03:10,680
group to uh it's related to this every

66
00:03:10,680 --> 00:03:13,319
41 groups okay

67
00:03:13,319 --> 00:03:15,840
okay first section who is the Earth

68
00:03:15,840 --> 00:03:20,220
lonzy so um we believe the Earth long Z

69
00:03:20,220 --> 00:03:24,780
is uh subgroups of the av-41 or is the

70
00:03:24,780 --> 00:03:27,540
highly corroborate rating with entity

71
00:03:27,540 --> 00:03:30,720
with the heavy volume one so because uh

72
00:03:30,720 --> 00:03:34,140
we found some relationship with the uh

73
00:03:34,140 --> 00:03:39,060
with some uh subgroups in of the ab41

74
00:03:39,060 --> 00:03:41,700
which is just uh be revealed last year

75
00:03:41,700 --> 00:03:45,840
uh it's the Earth Baku and the group CC

76
00:03:45,840 --> 00:03:48,299
um earthbaku is just also our research

77
00:03:48,299 --> 00:03:50,940
last year and the group cc is uh

78
00:03:50,940 --> 00:03:56,459
published by the tnt5 and okay so and in

79
00:03:56,459 --> 00:03:58,440
for the Earth long see their target we

80
00:03:58,440 --> 00:04:01,739
found their targeting sectors is uh is

81
00:04:01,739 --> 00:04:05,340
including some uh defense and Aviation

82
00:04:05,340 --> 00:04:09,299
sectors uh in uh basically the in the

83
00:04:09,299 --> 00:04:12,239
country impact countries uh in the Apec

84
00:04:12,239 --> 00:04:16,798
region yeah okay so uh so because as you

85
00:04:16,798 --> 00:04:19,918
know av-41 is quite it's a very huge uh

86
00:04:19,918 --> 00:04:24,120
hacking groups so uh and based on the

87
00:04:24,120 --> 00:04:26,580
multiplication we could classify as a

88
00:04:26,580 --> 00:04:27,960
two different

89
00:04:27,960 --> 00:04:31,860
uh uh subgroups a different uh subgroups

90
00:04:31,860 --> 00:04:34,440
so today uh we are going to talk about

91
00:04:34,440 --> 00:04:36,419
the Earth's long series belongs to the

92
00:04:36,419 --> 00:04:42,360
Espionage uh packing subgroups yeah okay

93
00:04:42,360 --> 00:04:45,060
okay so let's talk about what we found

94
00:04:45,060 --> 00:04:48,600
in the two different campaigns

95
00:04:48,600 --> 00:04:51,840
so this table is a overview of the two

96
00:04:51,840 --> 00:04:54,240
different campaigns so in the campaign

97
00:04:54,240 --> 00:04:58,380
one that is uh It Started from the uh

98
00:04:58,380 --> 00:05:02,100
May 2020 to the last February

99
00:05:02,100 --> 00:05:06,419
so that's his Target region is mainly

100
00:05:06,419 --> 00:05:09,620
targeted the government and the

101
00:05:09,620 --> 00:05:11,940
infrastructure and Health Care related

102
00:05:11,940 --> 00:05:14,759
organization in Taiwan and most

103
00:05:14,759 --> 00:05:17,100
interesting part is that there's also a

104
00:05:17,100 --> 00:05:20,759
banking industry in China also uh be

105
00:05:20,759 --> 00:05:23,900
their targets yeah as for the campaign

106
00:05:23,900 --> 00:05:27,960
and the attack Vector is uh they there's

107
00:05:27,960 --> 00:05:30,360
a two different approach but men but in

108
00:05:30,360 --> 00:05:32,580
most cases they are using a spearfishing

109
00:05:32,580 --> 00:05:35,220
attachment to deploy their malware

110
00:05:35,220 --> 00:05:39,900
so and the tools using the campaign 1 is

111
00:05:39,900 --> 00:05:43,139
a they just uh develop a customized

112
00:05:43,139 --> 00:05:45,539
custom loader code we call this

113
00:05:45,539 --> 00:05:48,360
simultane loader and and try and used it

114
00:05:48,360 --> 00:05:50,460
to load the code the payload cover

115
00:05:50,460 --> 00:05:53,039
strike and also found the interest in

116
00:05:53,039 --> 00:05:55,800
hack tools uh we coded all in one which

117
00:05:55,800 --> 00:05:58,979
means uh it just combined all of all

118
00:05:58,979 --> 00:06:01,800
necessary files he wants

119
00:06:01,800 --> 00:06:06,120
um in a one execute as curable yeah as

120
00:06:06,120 --> 00:06:10,320
for campaign 2 uh is is we founded uh

121
00:06:10,320 --> 00:06:13,139
started from the at least the last

122
00:06:13,139 --> 00:06:17,880
August to uh this June so the victim is

123
00:06:17,880 --> 00:06:20,580
quite similar to The Campaign one and

124
00:06:20,580 --> 00:06:24,000
also government but but now we found

125
00:06:24,000 --> 00:06:26,220
there there's a new targets is the

126
00:06:26,220 --> 00:06:29,819
defense and the aviation industry and

127
00:06:29,819 --> 00:06:33,300
the impact region is expanded to the app

128
00:06:33,300 --> 00:06:35,039
pack region yeah

129
00:06:35,039 --> 00:06:37,919
uh attack Vector is also the same as the

130
00:06:37,919 --> 00:06:39,240
campaign one

131
00:06:39,240 --> 00:06:43,080
that's and let's do the uh the tools in

132
00:06:43,080 --> 00:06:45,360
using the campaign too you can you could

133
00:06:45,360 --> 00:06:48,240
uh apparently found that there's uh in

134
00:06:48,240 --> 00:06:51,000
the campaign 2 they use multiple types

135
00:06:51,000 --> 00:06:54,720
of loader to loaded the payload to the

136
00:06:54,720 --> 00:06:57,840
payload payload copper strike and

137
00:06:57,840 --> 00:07:00,900
that we also found some interest uh they

138
00:07:00,900 --> 00:07:03,660
just they developed their own hacking

139
00:07:03,660 --> 00:07:06,120
tools based on some open source project

140
00:07:06,120 --> 00:07:08,639
so the detail we were talking about in

141
00:07:08,639 --> 00:07:13,039
the uh later in a later session

142
00:07:13,139 --> 00:07:16,259
okay so campaign one so the active time

143
00:07:16,259 --> 00:07:19,860
is uh started from the May 2020 to last

144
00:07:19,860 --> 00:07:23,639
February so that shows us I say uh it's

145
00:07:23,639 --> 00:07:26,039
uh their targets it's got basically a

146
00:07:26,039 --> 00:07:28,919
government related uh organization in

147
00:07:28,919 --> 00:07:31,800
Taiwan and also the banking industry in

148
00:07:31,800 --> 00:07:33,180
China

149
00:07:33,180 --> 00:07:35,880
so the this is the loader using the

150
00:07:35,880 --> 00:07:38,880
campaign one Simon take loader uh we

151
00:07:38,880 --> 00:07:43,740
found this loader in the uh May 2020 so

152
00:07:43,740 --> 00:07:46,020
um after we checking the code we uh it's

153
00:07:46,020 --> 00:07:48,900
upper apparently uh this this this

154
00:07:48,900 --> 00:07:52,919
loader is designed to bypass the some

155
00:07:52,919 --> 00:07:56,520
current AV or EDR solution so are they

156
00:07:56,520 --> 00:07:59,280
it just adopts two different uh

157
00:07:59,280 --> 00:08:02,099
technique to to bypass the security

158
00:08:02,099 --> 00:08:04,560
products so the first one is it will

159
00:08:04,560 --> 00:08:08,460
trying to unhook uh any possible hooks

160
00:08:08,460 --> 00:08:12,960
in the ntdll and the second part it will

161
00:08:12,960 --> 00:08:14,880
try and do masquerade in the process

162
00:08:14,880 --> 00:08:18,960
parent process with an API is a update

163
00:08:18,960 --> 00:08:20,879
prox thread attribute

164
00:08:20,879 --> 00:08:22,979
okay

165
00:08:22,979 --> 00:08:24,960
okay so

166
00:08:24,960 --> 00:08:25,740
um

167
00:08:25,740 --> 00:08:28,379
so because this this loader is being

168
00:08:28,379 --> 00:08:31,139
used to decrypt and uh run decrypt the

169
00:08:31,139 --> 00:08:34,380
payload and run it and run it so uh here

170
00:08:34,380 --> 00:08:36,899
is the uh decrypt uh decryption

171
00:08:36,899 --> 00:08:39,719
algorithm used by the simultane loaders

172
00:08:39,719 --> 00:08:43,260
so it's quite simple just sub us doing a

173
00:08:43,260 --> 00:08:47,580
sub 10 and using the xor with the key uh

174
00:08:47,580 --> 00:08:49,980
CC yeah

175
00:08:49,980 --> 00:08:53,220
okay okay so it's the only one two two

176
00:08:53,220 --> 00:08:56,399
sets so this tool is interesting uh

177
00:08:56,399 --> 00:08:58,800
because in the early phase of the

178
00:08:58,800 --> 00:09:01,800
campaign one uh they didn't use the the

179
00:09:01,800 --> 00:09:05,100
All-In-One tools like this but but in a

180
00:09:05,100 --> 00:09:07,080
later phases they're just starting to

181
00:09:07,080 --> 00:09:11,220
use use uh the tool like this yeah

182
00:09:11,220 --> 00:09:15,839
okay okay 10 pound two so active time

183
00:09:15,839 --> 00:09:18,060
yeah we just we just talk about it's uh

184
00:09:18,060 --> 00:09:22,320
actually last August to this June so and

185
00:09:22,320 --> 00:09:23,459
also

186
00:09:23,459 --> 00:09:25,980
um that the targets is also same as

187
00:09:25,980 --> 00:09:28,260
basically same as the campaign one but

188
00:09:28,260 --> 00:09:32,459
uh but they they just uh add some new

189
00:09:32,459 --> 00:09:34,380
targets is the defense and Aviation

190
00:09:34,380 --> 00:09:37,680
related uh organization and the impact

191
00:09:37,680 --> 00:09:41,459
country is uh not only Taiwan uh it was

192
00:09:41,459 --> 00:09:43,440
including the Thailand Malaysia

193
00:09:43,440 --> 00:09:46,740
Philippines Indonesia Pakistan and even

194
00:09:46,740 --> 00:09:48,300
Ukraine

195
00:09:48,300 --> 00:09:50,479
foreign

196
00:09:57,140 --> 00:10:00,720
attack vectors so but in most cases the

197
00:10:00,720 --> 00:10:03,060
spear fission attachment this case is a

198
00:10:03,060 --> 00:10:06,660
few uh a few cases we found uh they are

199
00:10:06,660 --> 00:10:09,540
trying to you using the surface uh

200
00:10:09,540 --> 00:10:13,560
public surface in application to uh rung

201
00:10:13,560 --> 00:10:17,519
and deploy their malware so

202
00:10:17,519 --> 00:10:20,820
um based on what the logs we found we

203
00:10:20,820 --> 00:10:22,320
found that they try they are trying to

204
00:10:22,320 --> 00:10:26,240
use uh the IIs service to doing the rce

205
00:10:26,240 --> 00:10:28,980
and they will deploy downloader and web

206
00:10:28,980 --> 00:10:32,279
show and then just deploy the loader and

207
00:10:32,279 --> 00:10:36,019
the hack tools they want

208
00:10:36,300 --> 00:10:41,160
okay okay so personal tables uh we are

209
00:10:41,160 --> 00:10:45,120
just a quick summary for the overview of

210
00:10:45,120 --> 00:10:48,060
the old old of the loader used by the

211
00:10:48,060 --> 00:10:51,540
Earth long Z so the first one simultane

212
00:10:51,540 --> 00:10:54,060
loader this loader is uh basically using

213
00:10:54,060 --> 00:10:58,440
in uh in the campaign one and the rest

214
00:10:58,440 --> 00:11:03,420
of the loader is uh uh new uh is just

215
00:11:03,420 --> 00:11:05,760
developed using in the campaign 2.

216
00:11:05,760 --> 00:11:08,100
basically this though the design purpose

217
00:11:08,100 --> 00:11:11,160
of this loaders are basically same and

218
00:11:11,160 --> 00:11:14,459
uh the major difference uh is uh the

219
00:11:14,459 --> 00:11:18,240
algorithm they used to uh decrypt the

220
00:11:18,240 --> 00:11:21,019
payload yeah

221
00:11:21,019 --> 00:11:25,380
okay so here's the list uh here's a list

222
00:11:25,380 --> 00:11:28,380
to show you uh the loader we found we

223
00:11:28,380 --> 00:11:29,700
found

224
00:11:29,700 --> 00:11:32,100
um and in this table I want to just

225
00:11:32,100 --> 00:11:35,880
mention is uh uh actually based on the

226
00:11:35,880 --> 00:11:38,820
the file name of these files uh we could

227
00:11:38,820 --> 00:11:41,519
just in our infer the

228
00:11:41,519 --> 00:11:45,000
info uh which which will be the the

229
00:11:45,000 --> 00:11:47,399
potential targets of these attackers

230
00:11:47,399 --> 00:11:50,700
text for example the first one is just

231
00:11:50,700 --> 00:11:53,959
simply is written in simplified Chinese

232
00:11:53,959 --> 00:11:57,120
so these tools might be you just using

233
00:11:57,120 --> 00:12:00,000
in the Chinese Chinese in Chinese China

234
00:12:00,000 --> 00:12:03,480
sorry in China and oh sorry

235
00:12:03,480 --> 00:12:06,540
uh take another example this one the

236
00:12:06,540 --> 00:12:09,060
fourth one this file is the the file

237
00:12:09,060 --> 00:12:11,880
name is just written in the Malai so

238
00:12:11,880 --> 00:12:14,459
this file is actually just using to

239
00:12:14,459 --> 00:12:17,100
attack the militia yeah something like

240
00:12:17,100 --> 00:12:19,740
that yeah

241
00:12:19,740 --> 00:12:23,640
and also the the droplet decoy files so

242
00:12:23,640 --> 00:12:27,180
uh most of actually most of the dot drop

243
00:12:27,180 --> 00:12:29,760
it documents password protected so we

244
00:12:29,760 --> 00:12:31,800
could not know the actual content inside

245
00:12:31,800 --> 00:12:35,279
but here's also here's some uh

246
00:12:35,279 --> 00:12:37,800
uh some documents is without password

247
00:12:37,800 --> 00:12:41,220
protection so um so we just give you

248
00:12:41,220 --> 00:12:43,200
some example here

249
00:12:43,200 --> 00:12:43,740
um

250
00:12:43,740 --> 00:12:46,440
basically as you check the content you

251
00:12:46,440 --> 00:12:49,200
could you could uh very clearly know the

252
00:12:49,200 --> 00:12:53,519
what kind of uh targets you want to

253
00:12:53,519 --> 00:12:55,320
sorry

254
00:12:55,320 --> 00:12:59,279
you want to attack so I'll take this for

255
00:12:59,279 --> 00:13:00,360
example

256
00:13:00,360 --> 00:13:03,120
um probably based on the language and

257
00:13:03,120 --> 00:13:05,220
the content yeah

258
00:13:05,220 --> 00:13:07,260
so this

259
00:13:07,260 --> 00:13:12,000
sorry okay so the the last the third one

260
00:13:12,000 --> 00:13:14,880
Indonesia this files just are written in

261
00:13:14,880 --> 00:13:18,959
the Indonesian so it's as we indicate uh

262
00:13:18,959 --> 00:13:21,660
this file is using in uh used to attack

263
00:13:21,660 --> 00:13:25,040
the uh Indonesia

264
00:13:26,579 --> 00:13:28,320
okay so

265
00:13:28,320 --> 00:13:28,920
um

266
00:13:28,920 --> 00:13:33,180
uh so in so now we are going to uh talk

267
00:13:33,180 --> 00:13:35,940
more details about the loader uh used by

268
00:13:35,940 --> 00:13:38,279
the issues in the campaign too so the

269
00:13:38,279 --> 00:13:41,160
first one is the Crux loader uh yeah

270
00:13:41,160 --> 00:13:43,740
it's a it's a custom show called loader

271
00:13:43,740 --> 00:13:45,420
you uh we found in the last September

272
00:13:45,420 --> 00:13:49,139
last October so there's the two types of

273
00:13:49,139 --> 00:13:52,320
cracks loader the first one is uh it

274
00:13:52,320 --> 00:13:55,680
just directly uh running and the

275
00:13:55,680 --> 00:13:58,620
decrypt the payload and run and doing

276
00:13:58,620 --> 00:14:02,160
the uh remote process injection and the

277
00:14:02,160 --> 00:14:06,139
second one is uh it was trying to drop a

278
00:14:06,139 --> 00:14:09,360
decoy file first and then doing and

279
00:14:09,360 --> 00:14:12,500
running the code strike

280
00:14:12,959 --> 00:14:16,079
so for Crux loader there's a two

281
00:14:16,079 --> 00:14:16,920
different

282
00:14:16,920 --> 00:14:20,880
um procedure to load the payload or once

283
00:14:20,880 --> 00:14:23,160
you just uh just read the file the read

284
00:14:23,160 --> 00:14:24,899
the payload files and another one is

285
00:14:24,899 --> 00:14:27,839
just embedded the payload inside the

286
00:14:27,839 --> 00:14:29,339
loader

287
00:14:29,339 --> 00:14:32,940
and here and also uh there was uh for

288
00:14:32,940 --> 00:14:36,360
the decryption algorithm there's also uh

289
00:14:36,360 --> 00:14:38,820
two different types

290
00:14:38,820 --> 00:14:40,980
so the first one as you can see this one

291
00:14:40,980 --> 00:14:44,339
is just basically the same as the uh

292
00:14:44,339 --> 00:14:47,399
simultane loader uh you just using the

293
00:14:47,399 --> 00:14:50,579
campaign one but uh in the latter

294
00:14:50,579 --> 00:14:53,160
version of Crux loader it would change

295
00:14:53,160 --> 00:14:55,800
to use the you were trying to use the

296
00:14:55,800 --> 00:15:00,720
lzn T1 uh encoding and the xor with the

297
00:15:00,720 --> 00:15:03,839
key CC yeah

298
00:15:03,839 --> 00:15:07,440
that's one the big pipe loader

299
00:15:07,440 --> 00:15:08,339
um

300
00:15:08,339 --> 00:15:11,339
so it's also the uh analysis analysis

301
00:15:11,339 --> 00:15:13,139
the stroke although the uh we found last

302
00:15:13,139 --> 00:15:16,560
September so you also have two different

303
00:15:16,560 --> 00:15:19,860
types so the first one is just just just

304
00:15:19,860 --> 00:15:22,800
uh drop the decoy file and run the code

305
00:15:22,800 --> 00:15:25,920
strike that's simple but uh recently we

306
00:15:25,920 --> 00:15:28,440
found uh they have a new div new

307
00:15:28,440 --> 00:15:31,500
procedure to run in a big pipe loader it

308
00:15:31,500 --> 00:15:34,620
creates a wrapper for they didn't just

309
00:15:34,620 --> 00:15:36,720
uh run in the big pipe load directly

310
00:15:36,720 --> 00:15:39,480
they create a wrapper then wrapper will

311
00:15:39,480 --> 00:15:42,959
just also doing the drop the files and

312
00:15:42,959 --> 00:15:45,779
then you will trying to use the Sile

313
00:15:45,779 --> 00:15:49,139
loading technique to launch the big pipe

314
00:15:49,139 --> 00:15:53,339
loader and then close Drive was executed

315
00:15:53,339 --> 00:15:55,620
okay

316
00:15:55,620 --> 00:15:58,260
okay so in this slide I just want to

317
00:15:58,260 --> 00:16:01,019
show you uh why this loader code big

318
00:16:01,019 --> 00:16:03,779
pipe loader because uh

319
00:16:03,779 --> 00:16:08,040
uh to this loader will use will rewrite

320
00:16:08,040 --> 00:16:11,160
the uh the payload uh via the name pipe

321
00:16:11,160 --> 00:16:14,720
and then using the multi-thread uh

322
00:16:14,720 --> 00:16:18,320
multiser to doing the whole decryption

323
00:16:18,320 --> 00:16:22,740
uh process process yeah

324
00:16:22,740 --> 00:16:24,120
okay

325
00:16:24,120 --> 00:16:27,480
last one I'll load it so this one is

326
00:16:27,480 --> 00:16:29,940
basically the same as the uh the

327
00:16:29,940 --> 00:16:31,620
previous low there the only the major

328
00:16:31,620 --> 00:16:35,880
difference is uh uh the he was trying to

329
00:16:35,880 --> 00:16:38,160
connect the remote server to download

330
00:16:38,160 --> 00:16:40,440
the payload and then decrypt and run

331
00:16:40,440 --> 00:16:41,880
yeah

332
00:16:41,880 --> 00:16:43,620
okay

333
00:16:43,620 --> 00:16:46,980
okay so now we have finished the uh uh

334
00:16:46,980 --> 00:16:50,459
introduction about this uh loaders in

335
00:16:50,459 --> 00:16:51,839
the following session we are talking

336
00:16:51,839 --> 00:16:55,620
more about the hack tools they used so

337
00:16:55,620 --> 00:16:59,339
this tools uh is also including the use

338
00:16:59,339 --> 00:17:01,320
for the privilege escalation and

339
00:17:01,320 --> 00:17:03,480
credential dumping and even and

340
00:17:03,480 --> 00:17:05,059
defensive

341
00:17:05,059 --> 00:17:09,240
so let's welcome the harassing to

342
00:17:09,240 --> 00:17:13,679
introduce this to you okay on uh let us

343
00:17:13,679 --> 00:17:17,459
dig more on about the hacking tours so

344
00:17:17,459 --> 00:17:19,799
uh in many of the incidents that we

345
00:17:19,799 --> 00:17:23,880
observed we find uh uh re-implementation

346
00:17:23,880 --> 00:17:26,640
of the mimikats modules as a standalone

347
00:17:26,640 --> 00:17:30,020
binary so for example uh we found a get

348
00:17:30,020 --> 00:17:33,660
pass.exe in some incidents which we uh

349
00:17:33,660 --> 00:17:36,419
which was our re-implementation of our

350
00:17:36,419 --> 00:17:39,780
secure LSA modules Logan passwords

351
00:17:39,780 --> 00:17:42,720
command from mimikats so upon comparing

352
00:17:42,720 --> 00:17:45,660
the binary and the sales score on the we

353
00:17:45,660 --> 00:17:47,700
find that the attacker just cut out the

354
00:17:47,700 --> 00:17:49,980
required modular source code and compile

355
00:17:49,980 --> 00:17:53,520
it as a standalone binary so um it's

356
00:17:53,520 --> 00:17:56,400
like one feature for one binary so we

357
00:17:56,400 --> 00:17:58,140
call this technique as a bring your own

358
00:17:58,140 --> 00:18:01,380
mimikats so adding to that we also found

359
00:18:01,380 --> 00:18:04,440
that this is sync.exe or logdot dot

360
00:18:04,440 --> 00:18:07,559
which is a re-implementation of our LSA

361
00:18:07,559 --> 00:18:09,900
modules this is in command which to

362
00:18:09,900 --> 00:18:12,480
perform the DC sync attack and we also

363
00:18:12,480 --> 00:18:15,919
find that column click chrome.exe or DB

364
00:18:15,919 --> 00:18:19,320
api.exe which is a combination of the

365
00:18:19,320 --> 00:18:22,620
two modules lsdap modules backup key

366
00:18:22,620 --> 00:18:24,660
commands and the DP API modulus Chrome

367
00:18:24,660 --> 00:18:27,059
sub command so uh this is used to

368
00:18:27,059 --> 00:18:29,460
download are Chrome's credentials by

369
00:18:29,460 --> 00:18:31,799
using backup key from domain controller

370
00:18:31,799 --> 00:18:34,679
so this binary is designed to be run in

371
00:18:34,679 --> 00:18:37,860
the domain controller and uh now we also

372
00:18:37,860 --> 00:18:40,860
find that xpn.exe which is our

373
00:18:40,860 --> 00:18:44,039
implementation of a misc Motors mssp

374
00:18:44,039 --> 00:18:46,620
command so this is years to dump

375
00:18:46,620 --> 00:18:49,080
credentials from our security support

376
00:18:49,080 --> 00:18:52,559
provider AKA SSB which is a important

377
00:18:52,559 --> 00:18:53,760
feature of our windows for

378
00:18:53,760 --> 00:18:56,640
authentication so uh actually this is

379
00:18:56,640 --> 00:18:58,860
not a copy from the mimikas but they

380
00:18:58,860 --> 00:19:01,860
copied from the security researchers on

381
00:19:01,860 --> 00:19:04,799
AKA xbn implementation

382
00:19:04,799 --> 00:19:07,440
so our re-implementation of this kind of

383
00:19:07,440 --> 00:19:09,179
Open Source hacking tools such as

384
00:19:09,179 --> 00:19:11,940
mimikas is being quite common among the

385
00:19:11,940 --> 00:19:14,160
red team Community because

386
00:19:14,160 --> 00:19:17,280
um it's easy to reduce the chance to get

387
00:19:17,280 --> 00:19:19,380
detected

388
00:19:19,380 --> 00:19:21,960
okay so on adding to that uh we find

389
00:19:21,960 --> 00:19:25,080
unique hacking tools for uh anti-av or

390
00:19:25,080 --> 00:19:28,100
anti-edr by an abusing vulnerable driver

391
00:19:28,100 --> 00:19:31,440
which we call proc Bonner and Evie

392
00:19:31,440 --> 00:19:34,320
Bonner so these two hacking tools has a

393
00:19:34,320 --> 00:19:37,260
different feature for each but they use

394
00:19:37,260 --> 00:19:41,520
same technique behind it so both two are

395
00:19:41,520 --> 00:19:45,080
on our views on vulnerable driver named

396
00:19:45,080 --> 00:19:48,120
rtcore64.6 which is a ship as a

397
00:19:48,120 --> 00:19:50,940
component of our After Burner on

398
00:19:50,940 --> 00:19:54,780
afterburner products from our MSI so in

399
00:19:54,780 --> 00:19:58,080
2019 uh the driver was assigned a cve

400
00:19:58,080 --> 00:20:01,799
which vulnerability allows users to read

401
00:20:01,799 --> 00:20:04,820
or write any arbitrary address of

402
00:20:04,820 --> 00:20:08,400
any arbitrary address including Corner

403
00:20:08,400 --> 00:20:11,400
spaces so actually they already patched

404
00:20:11,400 --> 00:20:14,160
so the vulnerability itself is quite

405
00:20:14,160 --> 00:20:17,100
looks old but um the problem here is

406
00:20:17,100 --> 00:20:19,860
that on the old version of vulnerable

407
00:20:19,860 --> 00:20:23,160
driver has a valid signature yet so the

408
00:20:23,160 --> 00:20:25,740
attacker delivers the old version of

409
00:20:25,740 --> 00:20:28,440
driver into the victim machine and to

410
00:20:28,440 --> 00:20:32,039
abuse for some Merchants purposes such

411
00:20:32,039 --> 00:20:35,340
as anti-av or anti-edl so uh this

412
00:20:35,340 --> 00:20:37,799
technique is known as uh bring your own

413
00:20:37,799 --> 00:20:41,700
vulnerable driver AKA by ovd so our it's

414
00:20:41,700 --> 00:20:43,919
quite interesting that apt operators

415
00:20:43,919 --> 00:20:47,280
employs this technique to bypass AVR EDR

416
00:20:47,280 --> 00:20:49,740
because this is quite common among the

417
00:20:49,740 --> 00:20:51,660
Cyber criminals especially our

418
00:20:51,660 --> 00:20:54,240
ransomware operators but

419
00:20:54,240 --> 00:20:57,600
um it's quite rare for the on among APD

420
00:20:57,600 --> 00:21:01,740
operators to adopt these techniques so

421
00:21:01,740 --> 00:21:03,720
um okay um let me introduce the details

422
00:21:03,720 --> 00:21:07,020
of these unique hacking tools so first

423
00:21:07,020 --> 00:21:09,720
the proc Banner they simply put the proc

424
00:21:09,720 --> 00:21:12,419
boundaries are the process Terminator so

425
00:21:12,419 --> 00:21:15,660
this tool uses a vulnerable RT core 64.6

426
00:21:15,660 --> 00:21:18,840
to force patch the 100 table entry

427
00:21:18,840 --> 00:21:21,320
structures granted access base field

428
00:21:21,320 --> 00:21:25,020
with the process all access value

429
00:21:25,020 --> 00:21:28,080
so on the 100 table entry is a corner

430
00:21:28,080 --> 00:21:30,480
object and uh the granted activist field

431
00:21:30,480 --> 00:21:32,400
contains the value of our access

432
00:21:32,400 --> 00:21:34,860
permission of the some specific handle

433
00:21:34,860 --> 00:21:37,440
so the changing the value of the granted

434
00:21:37,440 --> 00:21:39,960
access bits means that it tries to

435
00:21:39,960 --> 00:21:43,559
forcibly change the access permission of

436
00:21:43,559 --> 00:21:45,299
the target process

437
00:21:45,299 --> 00:21:48,000
but on the problem here is that the 100

438
00:21:48,000 --> 00:21:50,460
table interstructor is stored in the

439
00:21:50,460 --> 00:21:52,919
corner space which is not accessible

440
00:21:52,919 --> 00:21:55,200
from the user space so um how it could

441
00:21:55,200 --> 00:21:57,059
be possible

442
00:21:57,059 --> 00:21:59,760
so uh before that on I'm going to

443
00:21:59,760 --> 00:22:02,340
explain under the environment on the

444
00:22:02,340 --> 00:22:06,000
Windows 10 20 H2 64-bit version because

445
00:22:06,000 --> 00:22:08,580
the offset of the structure will be

446
00:22:08,580 --> 00:22:10,679
different for each Windows view version

447
00:22:10,679 --> 00:22:13,500
so and uh the attacker must install the

448
00:22:13,500 --> 00:22:15,240
vulnerable driver before running the pro

449
00:22:15,240 --> 00:22:18,059
Banner okay so uh let's break it down so

450
00:22:18,059 --> 00:22:20,159
the first the pro Banner opens the

451
00:22:20,159 --> 00:22:22,320
target process with the process clearly

452
00:22:22,320 --> 00:22:25,020
limited information which is quite a low

453
00:22:25,020 --> 00:22:27,299
privilege and then it receives the

454
00:22:27,299 --> 00:22:29,520
handle of the target process so for

455
00:22:29,520 --> 00:22:32,340
example in this case we got the 0x1da

456
00:22:32,340 --> 00:22:33,659
handle

457
00:22:33,659 --> 00:22:36,360
and then the pro Banner tried to get the

458
00:22:36,360 --> 00:22:39,480
address of the uh 100 table entry object

459
00:22:39,480 --> 00:22:41,640
or the target Handle by tracking back

460
00:22:41,640 --> 00:22:45,600
from the e-process object okay

461
00:22:45,600 --> 00:22:48,120
all right this one so the e-process

462
00:22:48,120 --> 00:22:50,640
object is a current object so the proc

463
00:22:50,640 --> 00:22:53,820
Banner uses our on article 64.6 to get

464
00:22:53,820 --> 00:22:56,820
the address of e-process object then

465
00:22:56,820 --> 00:22:58,860
tracking down the field in the structure

466
00:22:58,860 --> 00:23:01,020
the e-process object has a object table

467
00:23:01,020 --> 00:23:03,200
field which has a pointer to another

468
00:23:03,200 --> 00:23:06,000
structure this structure has a table

469
00:23:06,000 --> 00:23:08,100
called field that has a pointer to the

470
00:23:08,100 --> 00:23:12,299
head of a 100 table entry array so this

471
00:23:12,299 --> 00:23:14,880
array is a pointer table to the existing

472
00:23:14,880 --> 00:23:18,179
Hunters then we can get the index of the

473
00:23:18,179 --> 00:23:21,240
target Hunters by calculating based on

474
00:23:21,240 --> 00:23:25,020
the target handle like this one so we

475
00:23:25,020 --> 00:23:30,059
got the 100 ID 0x1dh just on our

476
00:23:30,059 --> 00:23:32,400
two bit right shift and multiply 16

477
00:23:32,400 --> 00:23:35,159
times so we get that index so now we get

478
00:23:35,159 --> 00:23:37,860
the address of the target handle of the

479
00:23:37,860 --> 00:23:40,080
100 table entry structure

480
00:23:40,080 --> 00:23:42,840
so then the pro bonuses are ioc there

481
00:23:42,840 --> 00:23:45,240
request to our vulnerable article 60.

482
00:23:45,240 --> 00:23:47,600
sys to mask the hundred table entries

483
00:23:47,600 --> 00:23:51,000
granted access bits to uh with the

484
00:23:51,000 --> 00:23:53,340
process all access in this case it's a

485
00:23:53,340 --> 00:23:58,500
xerx one ffff so it's patched so on the

486
00:23:58,500 --> 00:24:01,140
handle against the target process is the

487
00:24:01,140 --> 00:24:03,179
all access so we can do whatever we want

488
00:24:03,179 --> 00:24:05,520
so the program just call the terminate

489
00:24:05,520 --> 00:24:09,000
process to terminate the process so

490
00:24:09,000 --> 00:24:11,880
um it's available on the even if the

491
00:24:11,880 --> 00:24:15,059
target process is protected by some on

492
00:24:15,059 --> 00:24:17,700
the cell protection or something so it

493
00:24:17,700 --> 00:24:19,500
could be on terminated by these

494
00:24:19,500 --> 00:24:21,780
techniques so this is how the pro Banner

495
00:24:21,780 --> 00:24:23,100
works

496
00:24:23,100 --> 00:24:26,520
the next is uh heavy Bonner this is a

497
00:24:26,520 --> 00:24:28,380
simply put on the corner callback

498
00:24:28,380 --> 00:24:31,799
remover so it uses a or it also uses a

499
00:24:31,799 --> 00:24:34,679
vulnerable driver article 64. sys to

500
00:24:34,679 --> 00:24:37,740
remove the chronicleback routine onto

501
00:24:37,740 --> 00:24:40,559
unregister especially EV or EDR

502
00:24:40,559 --> 00:24:42,000
monitoring

503
00:24:42,000 --> 00:24:45,000
so uh what is a chronicleback so the

504
00:24:45,000 --> 00:24:47,720
conical back is a Windows OS mechanism

505
00:24:47,720 --> 00:24:51,360
to allow drivers including heavy drivers

506
00:24:51,360 --> 00:24:54,780
on to register some callback routines to

507
00:24:54,780 --> 00:24:57,299
receive some notification over some

508
00:24:57,299 --> 00:25:00,240
certain events for example the process

509
00:25:00,240 --> 00:25:02,760
creation or threat creation or registry

510
00:25:02,760 --> 00:25:04,380
creation or something like that

511
00:25:04,380 --> 00:25:07,020
so uh first uh let me show you how this

512
00:25:07,020 --> 00:25:09,960
corner callback works so the ntrs

513
00:25:09,960 --> 00:25:12,480
colonel provides several API for drivers

514
00:25:12,480 --> 00:25:14,760
to register on callback for each event

515
00:25:14,760 --> 00:25:17,100
for example for monitoring process

516
00:25:17,100 --> 00:25:19,980
creation the PS set create process

517
00:25:19,980 --> 00:25:23,460
Notifier routine is exported so uh this

518
00:25:23,460 --> 00:25:25,620
API receives the function pointer to

519
00:25:25,620 --> 00:25:28,500
invoke when any process is created so

520
00:25:28,500 --> 00:25:30,539
when the PS set create processor

521
00:25:30,539 --> 00:25:32,760
notified routine is called it calls

522
00:25:32,760 --> 00:25:36,059
another API PSP set Creator versus

523
00:25:36,059 --> 00:25:38,460
notify routine so the prefix is a bit

524
00:25:38,460 --> 00:25:39,480
different

525
00:25:39,480 --> 00:25:42,779
and uh in this function Windows content

526
00:25:42,779 --> 00:25:45,960
registers the given callback function at

527
00:25:45,960 --> 00:25:48,900
the end of the Callback array named PSP

528
00:25:48,900 --> 00:25:51,240
create versus notify routine so every

529
00:25:51,240 --> 00:25:53,700
name is similar so it's confusing and

530
00:25:53,700 --> 00:25:56,100
after this the uh when any process is

531
00:25:56,100 --> 00:25:59,039
created on Windows kernel enormous this

532
00:25:59,039 --> 00:26:02,640
table to find the Callback function to

533
00:26:02,640 --> 00:26:05,520
get invoked so this is how connecting

534
00:26:05,520 --> 00:26:08,640
callback works so uh let me uh go

535
00:26:08,640 --> 00:26:11,880
through how every everyone works so in

536
00:26:11,880 --> 00:26:14,159
in this case I will show you how

537
00:26:14,159 --> 00:26:16,380
everybody unregistered the process

538
00:26:16,380 --> 00:26:18,480
creation because every burner has a

539
00:26:18,480 --> 00:26:20,700
feature to unregister the process

540
00:26:20,700 --> 00:26:23,400
creation or third creation and the image

541
00:26:23,400 --> 00:26:25,559
loading but in this case I will show you

542
00:26:25,559 --> 00:26:27,600
the how they um bypass the process

543
00:26:27,600 --> 00:26:30,720
Creation in the windows OS 10 build

544
00:26:30,720 --> 00:26:33,120
2004.

545
00:26:33,120 --> 00:26:36,179
okay so on at first on every burner try

546
00:26:36,179 --> 00:26:39,000
to get the address of PSP set create

547
00:26:39,000 --> 00:26:41,520
person notified routine API and I'll

548
00:26:41,520 --> 00:26:43,860
create a driver API which is exported by

549
00:26:43,860 --> 00:26:45,419
the ntos corner

550
00:26:45,419 --> 00:26:48,539
then it searches some specific sequence

551
00:26:48,539 --> 00:26:51,720
bytes like this so This secret spice is

552
00:26:51,720 --> 00:26:55,020
uh actually the instruction on that is

553
00:26:55,020 --> 00:26:57,179
used in the PSP grid process notify

554
00:26:57,179 --> 00:27:00,419
routine and we can get we can find the

555
00:27:00,419 --> 00:27:03,240
address of the PSP grid process notify

556
00:27:03,240 --> 00:27:06,179
routine before just just before the

557
00:27:06,179 --> 00:27:09,120
target instruction here so it's like uh

558
00:27:09,120 --> 00:27:11,700
running the pattern searching by

559
00:27:11,700 --> 00:27:14,820
themselves so anyway and so we can get

560
00:27:14,820 --> 00:27:17,340
the address of this important on

561
00:27:17,340 --> 00:27:20,460
structures now uh let's get uh yeah

562
00:27:20,460 --> 00:27:22,740
important address and then the PSP

563
00:27:22,740 --> 00:27:25,799
create process notify routine this one

564
00:27:25,799 --> 00:27:28,860
is a table of the Callback function that

565
00:27:28,860 --> 00:27:31,380
contains some custom pointers to another

566
00:27:31,380 --> 00:27:34,380
structure ex callback routine block

567
00:27:34,380 --> 00:27:37,320
object which address can be calculated

568
00:27:37,320 --> 00:27:39,240
by removing the last four bits of the

569
00:27:39,240 --> 00:27:41,400
pointer so just do the math we can get

570
00:27:41,400 --> 00:27:44,640
the address of the Target on callback

571
00:27:44,640 --> 00:27:46,380
address

572
00:27:46,380 --> 00:27:49,320
so the ex callback routine block

573
00:27:49,320 --> 00:27:52,500
structure has a function field at offset

574
00:27:52,500 --> 00:27:54,840
0x8 which contains a pointer to the

575
00:27:54,840 --> 00:27:58,020
Callback function so for example in this

576
00:27:58,020 --> 00:28:00,360
case on this function field has

577
00:28:00,360 --> 00:28:02,279
appointed to the sound function inside

578
00:28:02,279 --> 00:28:04,919
the driver.sys which is a legitimate

579
00:28:04,919 --> 00:28:05,880
driver

580
00:28:05,880 --> 00:28:08,940
so then it gets the driver's fire path

581
00:28:08,940 --> 00:28:12,000
that core box function belongs to and

582
00:28:12,000 --> 00:28:14,700
examine if the driver fire Pass Property

583
00:28:14,700 --> 00:28:17,520
fire property has some Target string for

584
00:28:17,520 --> 00:28:20,039
example a trend or Microsoft or whatever

585
00:28:20,039 --> 00:28:24,600
you want to unregister then so if it

586
00:28:24,600 --> 00:28:27,240
falls everyone overrides the pointer

587
00:28:27,240 --> 00:28:30,419
with the neural here so which result in

588
00:28:30,419 --> 00:28:31,980
removing the corner callback

589
00:28:31,980 --> 00:28:33,720
registration

590
00:28:33,720 --> 00:28:37,080
so this is how the every Runner works

591
00:28:37,080 --> 00:28:39,659
so actually these techniques are not

592
00:28:39,659 --> 00:28:42,299
unique on among everyone and a pro

593
00:28:42,299 --> 00:28:45,360
Banner this is we could find on similar

594
00:28:45,360 --> 00:28:48,299
implementation on the GitHub but uh upon

595
00:28:48,299 --> 00:28:50,220
comparing those tours and the Public

596
00:28:50,220 --> 00:28:54,360
Public ones uh this attacker tried to

597
00:28:54,360 --> 00:28:57,179
implement more flexibility or they

598
00:28:57,179 --> 00:29:00,900
support on more versions of Windows than

599
00:29:00,900 --> 00:29:04,020
others so we think there are not just a

600
00:29:04,020 --> 00:29:06,720
copycat they're they're trying to keep

601
00:29:06,720 --> 00:29:08,580
updating their own tools

602
00:29:08,580 --> 00:29:09,779
okay

603
00:29:09,779 --> 00:29:12,840
so on the process of attribution now

604
00:29:12,840 --> 00:29:15,419
let's go to the attribution section

605
00:29:15,419 --> 00:29:19,260
so as we already mentioned on now we we

606
00:29:19,260 --> 00:29:22,020
believe that on Earth long G is uh

607
00:29:22,020 --> 00:29:25,919
related to or is a subgroup of abd41

608
00:29:25,919 --> 00:29:28,679
based on some reasons one is a

609
00:29:28,679 --> 00:29:31,679
victimology and copper strike metadata

610
00:29:31,679 --> 00:29:33,899
overlap and the core similarity of the

611
00:29:33,899 --> 00:29:37,080
loaders and the TDP overlaps but on

612
00:29:37,080 --> 00:29:39,899
we're still unclear as to how they

613
00:29:39,899 --> 00:29:42,360
collaborate with each other they may be

614
00:29:42,360 --> 00:29:45,840
the subgroup of apd-41 or they may be

615
00:29:45,840 --> 00:29:48,179
just sharing the tools or tdps or

616
00:29:48,179 --> 00:29:50,520
sharing the members for each other

617
00:29:50,520 --> 00:29:53,220
okay so um let me introduce how we think

618
00:29:53,220 --> 00:29:55,860
so the victimology so in the campaign

619
00:29:55,860 --> 00:29:57,899
number one the main target was Taiwan

620
00:29:57,899 --> 00:30:00,120
and the campaign number two the main

621
00:30:00,120 --> 00:30:03,779
targets were on East or South East Asia

622
00:30:03,779 --> 00:30:05,580
but they're also targeting the

623
00:30:05,580 --> 00:30:07,500
geopolitical critical countries

624
00:30:07,500 --> 00:30:10,980
including Pakistan and Ukraine

625
00:30:10,980 --> 00:30:13,799
so uh this indicates that the the

626
00:30:13,799 --> 00:30:17,159
attackers are on geopolitical interests

627
00:30:17,159 --> 00:30:21,059
in these areas so um this are is

628
00:30:21,059 --> 00:30:24,360
consistent with the existing apd-41s and

629
00:30:24,360 --> 00:30:28,100
its own related groups

630
00:30:28,220 --> 00:30:30,720
and uh before talking about a cover

631
00:30:30,720 --> 00:30:33,299
strike metadata overlap and we need to

632
00:30:33,299 --> 00:30:35,159
understand some art Parts in the cover

633
00:30:35,159 --> 00:30:40,200
strike so on the the one is uh public

634
00:30:40,200 --> 00:30:43,080
key the public key is RSC public key to

635
00:30:43,080 --> 00:30:45,779
encrypt the session social metadata on

636
00:30:45,779 --> 00:30:48,120
the CNC communication by the copper

637
00:30:48,120 --> 00:30:51,360
strike so this key is generated from the

638
00:30:51,360 --> 00:30:54,179
dot cobalstrike dot Beacon Keys Fire

639
00:30:54,179 --> 00:30:56,159
which is generated in the working

640
00:30:56,159 --> 00:31:00,299
directly or if it doesn't exist when on

641
00:31:00,299 --> 00:31:03,360
someone log on to the team server so the

642
00:31:03,360 --> 00:31:06,179
important thing is that much in public

643
00:31:06,179 --> 00:31:08,700
key means that two different payloads

644
00:31:08,700 --> 00:31:11,580
possibly came from the same team server

645
00:31:11,580 --> 00:31:14,460
but there's an exception so our summer

646
00:31:14,460 --> 00:31:17,039
on some copper strike is leaked or

647
00:31:17,039 --> 00:31:19,679
cracked or someone just copy the whole

648
00:31:19,679 --> 00:31:22,200
directly to the another machine or

649
00:31:22,200 --> 00:31:25,380
another directly so in this case on

650
00:31:25,380 --> 00:31:28,919
resulted in marching public key okay so

651
00:31:28,919 --> 00:31:31,080
the second one is the watermark this is

652
00:31:31,080 --> 00:31:33,059
a unique for by value embedded in

653
00:31:33,059 --> 00:31:35,460
Bitcoin and the watermark is generated

654
00:31:35,460 --> 00:31:38,640
from the Cobra strike auth file which is

655
00:31:38,640 --> 00:31:41,039
a config file used to check if the

656
00:31:41,039 --> 00:31:44,580
license is valid or is not expired The

657
00:31:44,580 --> 00:31:46,200
Watermark will be changed when the

658
00:31:46,200 --> 00:31:48,720
margin is updated so the important thing

659
00:31:48,720 --> 00:31:51,059
here is a matching Watermark means that

660
00:31:51,059 --> 00:31:53,700
two different payloads uh possibly came

661
00:31:53,700 --> 00:31:55,740
from the same team server

662
00:31:55,740 --> 00:31:58,740
there's also exception on the craft

663
00:31:58,740 --> 00:32:02,640
cover strike can be our same watermark

664
00:32:02,640 --> 00:32:05,760
okay so um to understand the cover

665
00:32:05,760 --> 00:32:07,620
strike operation let me give you some

666
00:32:07,620 --> 00:32:10,559
example so for example on some multiple

667
00:32:10,559 --> 00:32:13,860
populators shares some copper psych

668
00:32:13,860 --> 00:32:16,260
license how it goes so there's the two

669
00:32:16,260 --> 00:32:19,799
Operator Operator a and operator B and

670
00:32:19,799 --> 00:32:22,740
uh they are sharing the same license but

671
00:32:22,740 --> 00:32:24,779
um or they are working different

672
00:32:24,779 --> 00:32:27,059
directly or they are using a different

673
00:32:27,059 --> 00:32:29,700
machine so the the beacon key will be

674
00:32:29,700 --> 00:32:33,179
the different for each so then they

675
00:32:33,179 --> 00:32:36,600
generated a Bitcoin so in this case The

676
00:32:36,600 --> 00:32:38,880
Watermark will be the same for each

677
00:32:38,880 --> 00:32:40,860
because they are sharing the licenses

678
00:32:40,860 --> 00:32:43,679
but um the public key will be the

679
00:32:43,679 --> 00:32:44,940
different because they are different

680
00:32:44,940 --> 00:32:46,980
they're using the different public key

681
00:32:46,980 --> 00:32:52,200
Beacon keys so like this okay so now

682
00:32:52,200 --> 00:32:55,260
let's connect in the dots so we analyze

683
00:32:55,260 --> 00:32:56,940
the copper strike observed in campaign

684
00:32:56,940 --> 00:32:59,820
number two then we find that all of the

685
00:32:59,820 --> 00:33:02,640
all of them Shares are same order mark

686
00:33:02,640 --> 00:33:05,940
but um different public key as shown

687
00:33:05,940 --> 00:33:06,779
this

688
00:33:06,779 --> 00:33:10,200
so this means that there might be some

689
00:33:10,200 --> 00:33:13,140
multiple operators for each operations

690
00:33:13,140 --> 00:33:16,620
but but sharing same license across the

691
00:33:16,620 --> 00:33:19,380
campaign maybe the someone's targeting

692
00:33:19,380 --> 00:33:23,039
on Thailand for some operation and some

693
00:33:23,039 --> 00:33:24,899
other one targeting the Taiwan for some

694
00:33:24,899 --> 00:33:27,120
operation but they are sharing the same

695
00:33:27,120 --> 00:33:29,460
license but they are using different

696
00:33:29,460 --> 00:33:31,980
directly your machine or something

697
00:33:31,980 --> 00:33:34,740
okay so and then upon checking on the

698
00:33:34,740 --> 00:33:37,980
past report we found that Watermark four

699
00:33:37,980 --> 00:33:40,679
two six three blah blah and a public

700
00:33:40,679 --> 00:33:46,559
kmd5 9 ee3e blah blah on are used by the

701
00:33:46,559 --> 00:33:49,500
auth Baku which is reported by us and a

702
00:33:49,500 --> 00:33:51,960
group CC which is reported by team T5

703
00:33:51,960 --> 00:33:55,980
and both on third actor is believed to

704
00:33:55,980 --> 00:33:58,740
be a subgroup of abd41

705
00:33:58,740 --> 00:34:01,559
okay so uh this shows that the left one

706
00:34:01,559 --> 00:34:04,559
shows that off buckush on or using the

707
00:34:04,559 --> 00:34:06,600
same Watermark and the right one shows

708
00:34:06,600 --> 00:34:09,480
by on team T5 that they are using same

709
00:34:09,480 --> 00:34:12,839
Watermark and the same public key md5 so

710
00:34:12,839 --> 00:34:14,399
uh this is the one with the evidence

711
00:34:14,399 --> 00:34:17,699
that we think uh they might link to the

712
00:34:17,699 --> 00:34:19,440
apd41

713
00:34:19,440 --> 00:34:22,918
okay so and adding to that we found some

714
00:34:22,918 --> 00:34:25,980
overlaps with the tools and the tdps of

715
00:34:25,980 --> 00:34:29,399
a group CC so first the loaders used by

716
00:34:29,399 --> 00:34:32,699
the group CC and they use loaders used

717
00:34:32,699 --> 00:34:34,739
by in this campaign number one and

718
00:34:34,739 --> 00:34:37,139
campaign number two implemented as the

719
00:34:37,139 --> 00:34:38,820
same routine to dig with the payloads

720
00:34:38,820 --> 00:34:42,659
the on sub Xerox a and Excel is there

721
00:34:42,659 --> 00:34:45,839
Xerox CC so actually to be honest on

722
00:34:45,839 --> 00:34:48,780
this algorithm is not that unique but we

723
00:34:48,780 --> 00:34:52,139
think it's still not quality and and uh

724
00:34:52,139 --> 00:34:54,000
also upon examine the copper strike

725
00:34:54,000 --> 00:34:57,480
profile and the cover strike in the

726
00:34:57,480 --> 00:35:00,900
group CC are used by covers I used by

727
00:35:00,900 --> 00:35:03,839
the group CC and the Cobalt strike

728
00:35:03,839 --> 00:35:07,200
um loaded by a big pipe loader I used in

729
00:35:07,200 --> 00:35:10,260
the campaign number two tries to hide a

730
00:35:10,260 --> 00:35:13,980
CRC server by abusing fastly CDM like

731
00:35:13,980 --> 00:35:16,980
this so they are using the same TDP to

732
00:35:16,980 --> 00:35:20,180
on hidea CNC servers

733
00:35:20,180 --> 00:35:23,280
so on the based on the artwork that we

734
00:35:23,280 --> 00:35:25,560
have shown We Believe with the

735
00:35:25,560 --> 00:35:28,680
confidence that the Athlon G should be

736
00:35:28,680 --> 00:35:30,240
the group CC

737
00:35:30,240 --> 00:35:33,060
and the other since the group cc is

738
00:35:33,060 --> 00:35:35,339
believed to be a subgroup of everyday 41

739
00:35:35,339 --> 00:35:38,460
we also think that Alpha 1G is probably

740
00:35:38,460 --> 00:35:42,780
a subgroup of abd41 or clobulating or

741
00:35:42,780 --> 00:35:47,599
sharing tools or tdps with apd41

742
00:35:47,880 --> 00:35:51,420
okay so Outlast let me get summarized so

743
00:35:51,420 --> 00:35:53,900
off Ong has been operating some multiple

744
00:35:53,900 --> 00:35:56,359
campaign targeting several Industries

745
00:35:56,359 --> 00:36:00,240
mainly on apoc regions and the athology

746
00:36:00,240 --> 00:36:03,180
is very familiar with the red teaming

747
00:36:03,180 --> 00:36:05,460
techniques as we've shown so actually

748
00:36:05,460 --> 00:36:08,700
this uh looks like they are playing some

749
00:36:08,700 --> 00:36:11,400
the hack the box in the real world the

750
00:36:11,400 --> 00:36:13,859
hack the box is a online platform

751
00:36:13,859 --> 00:36:16,800
training platform for pin testers so

752
00:36:16,800 --> 00:36:18,900
actually the title the hack the real box

753
00:36:18,900 --> 00:36:22,079
comes from here okay and arthrology

754
00:36:22,079 --> 00:36:25,440
could be related to uh apd41 so because

755
00:36:25,440 --> 00:36:29,760
they are using the same tdps on with the

756
00:36:29,760 --> 00:36:32,460
ones that used by the apd41 it's known

757
00:36:32,460 --> 00:36:35,220
subgroups and the day possibly sharing

758
00:36:35,220 --> 00:36:38,160
the Cobalt strike licenses okay

759
00:36:38,160 --> 00:36:40,859
it also at last uh we put some

760
00:36:40,859 --> 00:36:43,140
challenges that we feel during the

761
00:36:43,140 --> 00:36:46,500
research because on the attribution is

762
00:36:46,500 --> 00:36:49,260
getting more and more complex especially

763
00:36:49,260 --> 00:36:53,339
the mpd41 because the threat actors are

764
00:36:53,339 --> 00:36:56,220
not even a monolithic or static group

765
00:36:56,220 --> 00:36:59,220
anymore we think that the threat actors

766
00:36:59,220 --> 00:37:01,940
are sharing their own tours and tdps

767
00:37:01,940 --> 00:37:06,480
each other or sometimes the members in

768
00:37:06,480 --> 00:37:09,180
the three actors on going out or going

769
00:37:09,180 --> 00:37:11,579
coming in and they are changing the

770
00:37:11,579 --> 00:37:15,480
members inside it so just so the

771
00:37:15,480 --> 00:37:17,700
attribution based on the just single

772
00:37:17,700 --> 00:37:22,560
artwork is quite on or dangerous so we

773
00:37:22,560 --> 00:37:24,839
have to be more careful on the

774
00:37:24,839 --> 00:37:28,200
attribution especially the apd41 Okay

775
00:37:28,200 --> 00:37:32,520
so uh this is all also on uh we hope our

776
00:37:32,520 --> 00:37:34,440
research will help your research or

777
00:37:34,440 --> 00:37:36,839
protect your network and you can see the

778
00:37:36,839 --> 00:37:41,339
ircs on appendix in the appendix so uh

779
00:37:41,339 --> 00:37:44,240
thank you so much

780
00:37:46,859 --> 00:37:49,320
okay so I think we still have time to

781
00:37:49,320 --> 00:37:53,099
have some creation and uh we all already

782
00:37:53,099 --> 00:37:55,920
have some question in the unlike uh in

783
00:37:55,920 --> 00:37:59,520
our yes vital but I want to leave the

784
00:37:59,520 --> 00:38:03,660
chance first to the outside audience uh

785
00:38:03,660 --> 00:38:06,660
foreign

786
00:38:26,640 --> 00:38:29,640
to

787
00:38:40,980 --> 00:38:43,140
um kind of find the relationship between

788
00:38:43,140 --> 00:38:47,339
group CC and these are Earth's uh this

789
00:38:47,339 --> 00:38:51,420
group so so they are um I I mean how

790
00:38:51,420 --> 00:38:54,000
many other is there any other

791
00:38:54,000 --> 00:38:57,359
actors leveraging the same uh Watermark

792
00:38:57,359 --> 00:39:00,300
uh with with this group thank you thank

793
00:39:00,300 --> 00:39:04,079
you on our upon our investigation uh we

794
00:39:04,079 --> 00:39:06,839
did not observe any other the reactors

795
00:39:06,839 --> 00:39:09,720
using the same on order Mark so I think

796
00:39:09,720 --> 00:39:12,060
this Watermark is exclusive

797
00:39:12,060 --> 00:39:13,200
thank you

798
00:39:13,200 --> 00:39:16,079
so does listen Watermark is come from a

799
00:39:16,079 --> 00:39:19,200
leaks a couple strike or is a licensed

800
00:39:19,200 --> 00:39:22,079
one uh I think this is a valid license

801
00:39:22,079 --> 00:39:24,480
it's not leaked because not any other

802
00:39:24,480 --> 00:39:26,940
the reactors using this one so we

803
00:39:26,940 --> 00:39:30,000
believe this is our on valid one still

804
00:39:30,000 --> 00:39:32,760
special one yeah fine yeah you ask my

805
00:39:32,760 --> 00:39:33,960
question

806
00:39:33,960 --> 00:39:36,960
foreign

807
00:39:42,359 --> 00:39:44,040
thank you for the presentation my name

808
00:39:44,040 --> 00:39:45,180
is James

809
00:39:45,180 --> 00:39:47,400
um so my question is you commented uh

810
00:39:47,400 --> 00:39:49,500
there you might be a subgroup of apt-41

811
00:39:49,500 --> 00:39:52,380
with high confidence but we all know

812
00:39:52,380 --> 00:39:55,560
for you has been attributed to the PRC

813
00:39:55,560 --> 00:39:59,520
government so can you comment more on

814
00:39:59,520 --> 00:40:02,099
how that intersects with this group

815
00:40:02,099 --> 00:40:06,560
targeting Assets in the PRC

816
00:40:06,839 --> 00:40:09,839
foreign

817
00:40:20,900 --> 00:40:24,240
could you please yeah so I'm sorry I'm

818
00:40:24,240 --> 00:40:26,099
sorry about that so

819
00:40:26,099 --> 00:40:28,800
um apt-41 has been attributed as a state

820
00:40:28,800 --> 00:40:32,339
sponsored group yeah from the PRC yeah

821
00:40:32,339 --> 00:40:34,680
um and you mentioned that this group

822
00:40:34,680 --> 00:40:37,140
also targets

823
00:40:37,140 --> 00:40:41,460
um banking industry in China so can you

824
00:40:41,460 --> 00:40:43,260
comment on that more like

825
00:40:43,260 --> 00:40:45,359
what are your thoughts behind that yeah

826
00:40:45,359 --> 00:40:47,339
uh uh yeah

827
00:40:47,339 --> 00:40:49,759
um okay

828
00:40:51,240 --> 00:40:54,240
[Music]

829
00:40:54,240 --> 00:40:58,440
okay uh for this uh for this question is

830
00:40:58,440 --> 00:41:01,020
a good question actually and because uh

831
00:41:01,020 --> 00:41:04,140
in actually in our investigation uh we

832
00:41:04,140 --> 00:41:06,839
found that uh they might have some

833
00:41:06,839 --> 00:41:09,900
habits to I mean

834
00:41:09,900 --> 00:41:14,060
we will considered as a

835
00:41:15,060 --> 00:41:19,740
a pen test to the uh the the sectors in

836
00:41:19,740 --> 00:41:23,280
the in the China yeah

837
00:41:23,280 --> 00:41:24,380
um

838
00:41:24,380 --> 00:41:27,540
I've just uh actually the if you are

839
00:41:27,540 --> 00:41:30,060
checking the uh the some information

840
00:41:30,060 --> 00:41:33,480
behind the ability 41 actually they are

841
00:41:33,480 --> 00:41:36,000
related to some uh some red team

842
00:41:36,000 --> 00:41:39,960
companies so uh we'll consider it as

843
00:41:39,960 --> 00:41:43,260
they will try they will keep trying to

844
00:41:43,260 --> 00:41:43,859
um

845
00:41:43,859 --> 00:41:46,380
doing the

846
00:41:46,380 --> 00:41:50,160
during doing a pen test to the sectors

847
00:41:50,160 --> 00:41:53,400
in the China in the dark yeah just don't

848
00:41:53,400 --> 00:41:56,400
don't just they don't just uh tell you

849
00:41:56,400 --> 00:41:58,380
uh wow we are going to do in a rare team

850
00:41:58,380 --> 00:42:01,619
they just do it and trying to find out

851
00:42:01,619 --> 00:42:05,640
uh if you your uh your your you are in

852
00:42:05,640 --> 00:42:07,560
the vulnerable exploring your

853
00:42:07,560 --> 00:42:09,420
environments yeah something that I will

854
00:42:09,420 --> 00:42:12,780
say something like that that's uh that's

855
00:42:12,780 --> 00:42:16,440
what all we uh have in for based on what

856
00:42:16,440 --> 00:42:19,380
we have information yeah

857
00:42:19,380 --> 00:42:23,160
yeah so uh yeah the last year the team

858
00:42:23,160 --> 00:42:25,920
T5 on reviewed on I think this in the

859
00:42:25,920 --> 00:42:28,740
team hit uh hit coin they are they are

860
00:42:28,740 --> 00:42:31,859
mentioning about our the HW operation

861
00:42:31,859 --> 00:42:34,680
which is uh on operated by Chinese

862
00:42:34,680 --> 00:42:37,320
government are maybe the Chinese

863
00:42:37,320 --> 00:42:39,480
government asks some security on

864
00:42:39,480 --> 00:42:42,420
companies to test their own the or

865
00:42:42,420 --> 00:42:43,980
important infrastructure including

866
00:42:43,980 --> 00:42:46,500
banking or infrastructure whatever so we

867
00:42:46,500 --> 00:42:48,119
believe that attacking against the

868
00:42:48,119 --> 00:42:50,940
banking industry in the China is a part

869
00:42:50,940 --> 00:42:52,800
of the HW operation or something like

870
00:42:52,800 --> 00:42:53,820
that

871
00:42:53,820 --> 00:42:57,000
thank you okay thanks so I want to leave

872
00:42:57,000 --> 00:42:59,400
the last question for myself

873
00:42:59,400 --> 00:43:00,960
sorry if you have a question you can

874
00:43:00,960 --> 00:43:04,640
still come to a final speaker later yes

875
00:43:04,640 --> 00:43:07,980
uh because in left in the last next

876
00:43:07,980 --> 00:43:09,960
session we will have the other research

877
00:43:09,960 --> 00:43:12,540
team from tremical it's also to present

878
00:43:12,540 --> 00:43:16,319
the uh group called Earth Luca can you

879
00:43:16,319 --> 00:43:18,420
comment up about the difference between

880
00:43:18,420 --> 00:43:21,960
uh the computer you analyze and the

881
00:43:21,960 --> 00:43:24,740
Earth's loose car

882
00:43:28,560 --> 00:43:30,420
on

883
00:43:30,420 --> 00:43:34,200
I think uh everyone could just listen

884
00:43:34,200 --> 00:43:38,339
the the devotees in the US gas station

885
00:43:38,339 --> 00:43:40,440
is also on

886
00:43:40,440 --> 00:43:42,119
I would say it's a great session

887
00:43:42,119 --> 00:43:45,060
actually yeah so I think everyone can

888
00:43:45,060 --> 00:43:48,000
just join that session and listen uh

889
00:43:48,000 --> 00:43:50,400
Joseph uh speaking Yeah

890
00:43:50,400 --> 00:43:53,099
okay fine I I think that's why we

891
00:43:53,099 --> 00:43:54,839
designed the station as a lot we want to

892
00:43:54,839 --> 00:43:56,940
put several strong intelligence paper

893
00:43:56,940 --> 00:43:58,980
together so we can continue to listen

894
00:43:58,980 --> 00:44:00,240
this talk

895
00:44:00,240 --> 00:44:04,160
oh uh okay now um

