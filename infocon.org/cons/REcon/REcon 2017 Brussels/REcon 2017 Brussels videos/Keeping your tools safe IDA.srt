1
00:00:01,650 --> 00:00:13,309
[Music]

2
00:00:08,960 --> 00:00:13,309
<font color="#E5E5E5">Arkel 2017</font>

3
00:00:17,050 --> 00:00:19,109
you

4
00:00:20,930 --> 00:00:27,020
hi guys so<font color="#E5E5E5"> this talk</font><font color="#CCCCCC"> is called keep</font>

5
00:00:24,050 --> 00:00:29,000
<font color="#CCCCCC">minsu to</font><font color="#E5E5E5"> safe so my just tiny bit of</font>

6
00:00:27,020 --> 00:00:30,829
background first<font color="#E5E5E5"> so I'm my</font><font color="#CCCCCC"> name is I</font>

7
00:00:29,000 --> 00:00:33,350
know I joined a bunch<font color="#E5E5E5"> of crazy people</font><font color="#CCCCCC"> in</font>

8
00:00:30,829 --> 00:00:35,720
2011<font color="#CCCCCC"> and I work not so far from</font><font color="#E5E5E5"> here on</font>

9
00:00:33,350 --> 00:00:38,750
<font color="#CCCCCC">the</font><font color="#E5E5E5"> project that some of you</font><font color="#CCCCCC"> know</font><font color="#E5E5E5"> when I</font>

10
00:00:35,720 --> 00:00:40,820
<font color="#E5E5E5">joined I had no idea exactly what we</font>

11
00:00:38,750 --> 00:00:43,400
what I would be<font color="#E5E5E5"> working on but something</font>

12
00:00:40,820 --> 00:00:45,620
interesting<font color="#E5E5E5"> happened is that Ida had</font>

13
00:00:43,400 --> 00:00:48,019
just been released<font color="#CCCCCC"> like it's a couple</font>

14
00:00:45,620 --> 00:00:50,480
first versions and using<font color="#E5E5E5"> QT as their as</font>

15
00:00:48,019 --> 00:00:52,970
their as a<font color="#E5E5E5"> toolkit</font><font color="#CCCCCC"> and unfortunately the</font>

16
00:00:50,480 --> 00:00:55,099
guy who did the port and<font color="#E5E5E5"> Danielle to</font>

17
00:00:52,970 --> 00:00:57,199
study<font color="#CCCCCC"> whom some of</font><font color="#E5E5E5"> you know actually</font>

18
00:00:55,100 --> 00:00:58,729
left the company<font color="#E5E5E5"> at that</font><font color="#CCCCCC"> time</font><font color="#E5E5E5"> giving a</font>

19
00:00:57,199 --> 00:01:00,379
lot<font color="#E5E5E5"> of meaning</font><font color="#CCCCCC"> to the best factor</font><font color="#E5E5E5"> thing</font>

20
00:00:58,729 --> 00:01:02,659
because it was the UI guy and nobody

21
00:01:00,379 --> 00:01:06,380
<font color="#CCCCCC">else</font><font color="#E5E5E5"> actually really knew how to</font><font color="#CCCCCC"> handle</font>

22
00:01:02,659 --> 00:01:08,570
the UI so that<font color="#CCCCCC"> was maybe a bit of a</font>

23
00:01:06,380 --> 00:01:10,310
problem<font color="#E5E5E5"> there so first of all just to</font>

24
00:01:08,570 --> 00:01:12,679
<font color="#CCCCCC">make it clear we have two big categories</font>

25
00:01:10,310 --> 00:01:14,479
of<font color="#CCCCCC"> buggin it took</font><font color="#E5E5E5"> it big categories of</font>

26
00:01:12,680 --> 00:01:16,729
bugs in<font color="#CCCCCC"> Ida we have first kernel bugs</font>

27
00:01:14,479 --> 00:01:18,048
which<font color="#E5E5E5"> typically can affect the loaders</font>

28
00:01:16,729 --> 00:01:19,729
and<font color="#E5E5E5"> processor modules</font><font color="#CCCCCC"> or anything</font>

29
00:01:18,049 --> 00:01:21,680
<font color="#CCCCCC">they're all about the disassembly itself</font>

30
00:01:19,729 --> 00:01:23,210
<font color="#CCCCCC">and then we have another</font><font color="#E5E5E5"> class I would</font>

31
00:01:21,680 --> 00:01:25,670
<font color="#E5E5E5">say off bugs which is typically the UI</font>

32
00:01:23,210 --> 00:01:27,559
bugs<font color="#E5E5E5"> which is everything user interface</font>

33
00:01:25,670 --> 00:01:31,000
related happy crashes and things like

34
00:01:27,560 --> 00:01:34,610
<font color="#E5E5E5">that</font><font color="#CCCCCC"> and this talk is about the</font><font color="#E5E5E5"> actual</font>

35
00:01:31,000 --> 00:01:37,250
the UI bugs not what we call the kernel

36
00:01:34,610 --> 00:01:40,940
bugs<font color="#E5E5E5"> so it's</font><font color="#CCCCCC"> Alaska and all not the OS</font>

37
00:01:37,250 --> 00:01:45,080
kernel obviously so this is about UI

38
00:01:40,940 --> 00:01:46,908
bugs and how we deal with those<font color="#E5E5E5"> so the</font>

39
00:01:45,080 --> 00:01:48,860
UI when<font color="#E5E5E5"> I'm talking about UI is not</font>

40
00:01:46,909 --> 00:01:50,270
about hey this<font color="#CCCCCC"> button is</font><font color="#E5E5E5"> misplaced or</font>

41
00:01:48,860 --> 00:01:53,720
anything like that we know they are

42
00:01:50,270 --> 00:01:58,039
right<font color="#CCCCCC"> this is about basically rendering</font>

43
00:01:53,720 --> 00:01:59,479
pipeline<font color="#E5E5E5"> how the stuff that</font><font color="#CCCCCC"> you hasten</font>

44
00:01:58,040 --> 00:02:01,010
<font color="#CCCCCC">your IDB is actually rendered on the</font>

45
00:01:59,479 --> 00:02:04,220
<font color="#E5E5E5">screen</font><font color="#CCCCCC"> that's</font><font color="#E5E5E5"> that scope that's what we</font>

46
00:02:01,010 --> 00:02:06,229
call the rendering pipeline<font color="#CCCCCC"> this is</font>

47
00:02:04,220 --> 00:02:07,850
about that I was not at a clearly

48
00:02:06,229 --> 00:02:09,769
inclined to go down that road<font color="#E5E5E5"> but then</font>

49
00:02:07,850 --> 00:02:11,599
again<font color="#E5E5E5"> it's not as stupid as positioning</font>

50
00:02:09,769 --> 00:02:14,390
buttons so it's<font color="#CCCCCC"> actually fairly</font>

51
00:02:11,599 --> 00:02:16,790
interesting<font color="#E5E5E5"> and anyway we still had bugs</font>

52
00:02:14,390 --> 00:02:19,579
<font color="#E5E5E5">coming in and somebody had</font><font color="#CCCCCC"> to take over</font>

53
00:02:16,790 --> 00:02:21,200
<font color="#E5E5E5">because well the situation</font><font color="#CCCCCC"> was not</font>

54
00:02:19,580 --> 00:02:23,629
<font color="#E5E5E5">exactly great especially we had the</font>

55
00:02:21,200 --> 00:02:25,010
blanket problem where when<font color="#E5E5E5"> I fixed one</font>

56
00:02:23,629 --> 00:02:26,209
bug in one<font color="#E5E5E5"> place it</font><font color="#CCCCCC"> actually did get</font>

57
00:02:25,010 --> 00:02:27,739
broke something in<font color="#E5E5E5"> the other place and</font>

58
00:02:26,209 --> 00:02:29,029
of course then you rushed<font color="#E5E5E5"> the other</font>

59
00:02:27,739 --> 00:02:30,859
place<font color="#CCCCCC"> you fix it</font><font color="#E5E5E5"> and it broke in the</font>

60
00:02:29,029 --> 00:02:35,030
first<font color="#CCCCCC"> place</font><font color="#E5E5E5"> which you can do that</font>

61
00:02:30,859 --> 00:02:38,690
<font color="#E5E5E5">forever</font><font color="#CCCCCC"> if if that's</font><font color="#E5E5E5"> your</font><font color="#CCCCCC"> thing</font>

62
00:02:35,030 --> 00:02:41,640
<font color="#E5E5E5">we</font><font color="#CCCCCC"> decided we</font><font color="#E5E5E5"> would try</font><font color="#CCCCCC"> to do better so</font>

63
00:02:38,690 --> 00:02:43,710
whatever I wanted<font color="#E5E5E5"> to do whatever I want</font>

64
00:02:41,640 --> 00:02:46,470
whatever<font color="#E5E5E5"> I fixed we wanted to make</font><font color="#CCCCCC"> sure</font>

65
00:02:43,710 --> 00:02:48,420
<font color="#E5E5E5">that this was fixed properly and did not</font>

66
00:02:46,470 --> 00:02:50,010
happen in<font color="#E5E5E5"> the future</font><font color="#CCCCCC"> the best way to do</font>

67
00:02:48,420 --> 00:02:51,839
that<font color="#CCCCCC"> obviously is non regression tests</font>

68
00:02:50,010 --> 00:02:54,750
non regression tests for<font color="#E5E5E5"> you I however</font>

69
00:02:51,840 --> 00:02:57,330
<font color="#E5E5E5">are not exactly trivial given that we</font>

70
00:02:54,750 --> 00:03:00,870
actually wanted to<font color="#E5E5E5"> have</font><font color="#CCCCCC"> a platform</font>

71
00:02:57,330 --> 00:03:02,280
independent testing framework we

72
00:03:00,870 --> 00:03:04,560
obviously want them to ought to be

73
00:03:02,280 --> 00:03:06,360
automated<font color="#E5E5E5"> and we don't want to have to</font>

74
00:03:04,560 --> 00:03:08,040
reach<font color="#CCCCCC"> Ange all the tests every time the</font>

75
00:03:06,360 --> 00:03:09,510
UI<font color="#E5E5E5"> changes a little so we want to be</font>

76
00:03:08,040 --> 00:03:11,390
able to<font color="#E5E5E5"> access the parts that we're</font>

77
00:03:09,510 --> 00:03:14,940
<font color="#CCCCCC">interested in for a specific</font><font color="#E5E5E5"> test and</font>

78
00:03:11,390 --> 00:03:16,470
and deal with<font color="#E5E5E5"> that and</font><font color="#CCCCCC"> also yeah the</font>

79
00:03:14,940 --> 00:03:20,310
results must be easily interpretable

80
00:03:16,470 --> 00:03:21,810
<font color="#E5E5E5">that aka text files so that</font><font color="#CCCCCC"> we don't in</font>

81
00:03:20,310 --> 00:03:23,700
text<font color="#E5E5E5"> files whatever we're interested in</font>

82
00:03:21,810 --> 00:03:26,730
that's good because then it's in it's<font color="#E5E5E5"> in</font>

83
00:03:23,700 --> 00:03:28,920
our servers<font color="#E5E5E5"> and repositories so we know</font>

84
00:03:26,730 --> 00:03:33,420
the<font color="#CCCCCC"> history of tests we can do</font><font color="#E5E5E5"> real</font>

85
00:03:28,920 --> 00:03:35,250
relevant in operations on those<font color="#E5E5E5"> just</font>

86
00:03:33,420 --> 00:03:37,488
<font color="#E5E5E5">quick parentheses here in my previous</font>

87
00:03:35,250 --> 00:03:40,320
<font color="#CCCCCC">job</font><font color="#E5E5E5"> I was</font><font color="#CCCCCC"> working on something and</font>

88
00:03:37,489 --> 00:03:42,989
literally a team of guys<font color="#E5E5E5"> in a plant I</font>

89
00:03:40,320 --> 00:03:44,880
was where the HQ<font color="#CCCCCC"> of the company I was</font>

90
00:03:42,989 --> 00:03:47,400
<font color="#E5E5E5">working for was they were literally just</font>

91
00:03:44,880 --> 00:03:48,930
recording<font color="#CCCCCC"> test</font><font color="#E5E5E5"> Yui because a lot of UI</font>

92
00:03:47,400 --> 00:03:51,180
testing is<font color="#CCCCCC"> done through what they call</font>

93
00:03:48,930 --> 00:03:53,400
UI recorders so you just launch the

94
00:03:51,180 --> 00:03:56,870
application you click in places and then

95
00:03:53,400 --> 00:03:58,800
it does typically<font color="#E5E5E5"> screenshot comparisons</font>

96
00:03:56,870 --> 00:04:00,300
unfortunately the<font color="#CCCCCC"> problem the project</font>

97
00:03:58,800 --> 00:04:02,040
was under heavy<font color="#CCCCCC"> development which means</font>

98
00:04:00,300 --> 00:04:04,350
the guys<font color="#E5E5E5"> literally and I'm not making</font>

99
00:04:02,040 --> 00:04:06,060
<font color="#CCCCCC">this up they were just really recording</font>

100
00:04:04,350 --> 00:04:08,910
all the<font color="#CCCCCC"> tests</font><font color="#E5E5E5"> every week that's all they</font>

101
00:04:06,060 --> 00:04:13,320
were doing<font color="#CCCCCC"> and I mean we're a small team</font>

102
00:04:08,910 --> 00:04:14,940
at<font color="#CCCCCC"> x-rays and we we don't</font><font color="#E5E5E5"> want that and</font>

103
00:04:13,320 --> 00:04:16,380
in<font color="#CCCCCC"> fact I don't</font><font color="#E5E5E5"> think anybody should</font>

104
00:04:14,940 --> 00:04:19,410
ever ever want<font color="#CCCCCC"> that I</font><font color="#E5E5E5"> mean this is</font><font color="#CCCCCC"> in</font>

105
00:04:16,380 --> 00:04:22,469
decent job in<font color="#CCCCCC"> my opinion done</font><font color="#E5E5E5"> anyway</font><font color="#CCCCCC"> so</font>

106
00:04:19,410 --> 00:04:24,120
we<font color="#E5E5E5"> investigated a few options</font><font color="#CCCCCC"> to two</font><font color="#E5E5E5"> to</font>

107
00:04:22,470 --> 00:04:28,320
<font color="#E5E5E5">four tools that would</font><font color="#CCCCCC"> help us achieve</font>

108
00:04:24,120 --> 00:04:30,510
<font color="#E5E5E5">the goal we set</font><font color="#CCCCCC"> up to achieve among all</font>

109
00:04:28,320 --> 00:04:32,880
of<font color="#E5E5E5"> those that the three that I list here</font>

110
00:04:30,510 --> 00:04:35,820
<font color="#E5E5E5">one was less</font><font color="#CCCCCC"> brain-dead</font><font color="#E5E5E5"> than</font><font color="#CCCCCC"> the other</font>

111
00:04:32,880 --> 00:04:38,550
of the<font color="#E5E5E5"> out-of-the-box</font><font color="#CCCCCC"> it was called</font>

112
00:04:35,820 --> 00:04:40,440
squish by a company called frag logic<font color="#E5E5E5"> it</font>

113
00:04:38,550 --> 00:04:42,900
<font color="#E5E5E5">scriptable in Python among other things</font>

114
00:04:40,440 --> 00:04:45,479
because it supports like six or seven

115
00:04:42,900 --> 00:04:46,630
<font color="#E5E5E5">languages so you get to choose whichever</font>

116
00:04:45,479 --> 00:04:48,550
you<font color="#E5E5E5"> want</font>

117
00:04:46,630 --> 00:04:50,890
and the very important part is that<font color="#E5E5E5"> it</font>

118
00:04:48,550 --> 00:04:53,500
has an easy access<font color="#E5E5E5"> to</font><font color="#CCCCCC"> the QT widget tree</font>

119
00:04:50,890 --> 00:04:56,169
<font color="#E5E5E5">which is kind of what we wanted so</font>

120
00:04:53,500 --> 00:04:57,550
there's a lot of<font color="#E5E5E5"> buzz going</font><font color="#CCCCCC"> around in</font>

121
00:04:56,170 --> 00:05:01,930
the squish if you go to their<font color="#CCCCCC"> websites</font>

122
00:04:57,550 --> 00:05:05,110
<font color="#E5E5E5">you may get</font><font color="#CCCCCC"> notice at the the word</font><font color="#E5E5E5"> salad</font>

123
00:05:01,930 --> 00:05:07,360
that they stuff in there<font color="#CCCCCC"> but never</font><font color="#E5E5E5"> mind</font>

124
00:05:05,110 --> 00:05:11,770
<font color="#E5E5E5">QT widget 3 again this is what we wanted</font>

125
00:05:07,360 --> 00:05:13,870
and<font color="#E5E5E5"> we got it and the time so just</font><font color="#CCCCCC"> a</font>

126
00:05:11,770 --> 00:05:15,909
quick rant these<font color="#CCCCCC"> tests recorder things</font>

127
00:05:13,870 --> 00:05:18,040
<font color="#E5E5E5">don't use them they're stupid</font>

128
00:05:15,910 --> 00:05:19,450
literally stupid even<font color="#E5E5E5"> squishes</font><font color="#CCCCCC"> test</font>

129
00:05:18,040 --> 00:05:23,170
recorder<font color="#E5E5E5"> because they have one they have</font>

130
00:05:19,450 --> 00:05:25,120
<font color="#CCCCCC">two if you start clicking in places</font><font color="#E5E5E5"> they</font>

131
00:05:23,170 --> 00:05:28,240
<font color="#CCCCCC">will it will actually have to</font><font color="#E5E5E5"> put sweeps</font>

132
00:05:25,120 --> 00:05:30,910
in<font color="#E5E5E5"> order to make</font><font color="#CCCCCC"> sure</font><font color="#E5E5E5"> that the test will</font>

133
00:05:28,240 --> 00:05:32,830
run again just fine and in fact it's<font color="#E5E5E5"> not</font>

134
00:05:30,910 --> 00:05:35,710
even a guarantee<font color="#E5E5E5"> is just hopefully</font><font color="#CCCCCC"> it's</font>

135
00:05:32,830 --> 00:05:38,050
going<font color="#E5E5E5"> to run again</font><font color="#CCCCCC"> no no way that this</font>

136
00:05:35,710 --> 00:05:40,570
stuff<font color="#E5E5E5"> is</font><font color="#CCCCCC"> its platform independent of</font>

137
00:05:38,050 --> 00:05:42,850
course that is if if you run the test on

138
00:05:40,570 --> 00:05:46,240
OS<font color="#CCCCCC"> 10 obviously the widgets will be at</font>

139
00:05:42,850 --> 00:05:48,010
<font color="#E5E5E5">different pixel coordinates the so my</font>

140
00:05:46,240 --> 00:05:50,640
advice would<font color="#CCCCCC"> be just stay away</font><font color="#E5E5E5"> from it</font>

141
00:05:48,010 --> 00:05:54,760
it's<font color="#CCCCCC"> completely done</font><font color="#E5E5E5"> another completely</font>

142
00:05:50,640 --> 00:05:56,530
and<font color="#E5E5E5"> also a lot</font><font color="#CCCCCC"> of UI testing is done</font><font color="#E5E5E5"> by</font>

143
00:05:54,760 --> 00:05:58,330
<font color="#CCCCCC">comparing screenshots which</font><font color="#E5E5E5"> I let you</font>

144
00:05:56,530 --> 00:06:02,440
<font color="#E5E5E5">guess if that works well there is this</font>

145
00:05:58,330 --> 00:06:04,780
whole page<font color="#E5E5E5"> on the squish the</font><font color="#CCCCCC"> frog logic</font>

146
00:06:02,440 --> 00:06:06,430
website and<font color="#CCCCCC"> explained like</font><font color="#E5E5E5"> okay this is</font>

147
00:06:04,780 --> 00:06:07,900
unknown reason for<font color="#CCCCCC"> screen shot</font>

148
00:06:06,430 --> 00:06:09,370
differences obvious reason for screen

149
00:06:07,900 --> 00:06:11,739
shot differences in other words<font color="#E5E5E5"> screen</font>

150
00:06:09,370 --> 00:06:13,240
<font color="#E5E5E5">shot comparisons don't work just don't</font>

151
00:06:11,740 --> 00:06:14,980
do that because then what they start

152
00:06:13,240 --> 00:06:16,750
doing<font color="#E5E5E5"> is fudge the comparison of</font>

153
00:06:14,980 --> 00:06:18,430
<font color="#CCCCCC">screenshots and then of course there are</font>

154
00:06:16,750 --> 00:06:20,350
some items<font color="#E5E5E5"> that you</font><font color="#CCCCCC"> don't want but they</font>

155
00:06:18,430 --> 00:06:22,840
<font color="#E5E5E5">passed the</font><font color="#CCCCCC"> test because of the fuzziness</font>

156
00:06:20,350 --> 00:06:25,680
<font color="#CCCCCC">so this is exactly what you</font><font color="#E5E5E5"> don't want</font>

157
00:06:22,840 --> 00:06:29,260
<font color="#E5E5E5">to be doing in our opinion at least so</font>

158
00:06:25,680 --> 00:06:33,400
just<font color="#E5E5E5"> a</font><font color="#CCCCCC"> brief very very brief on the</font>

159
00:06:29,260 --> 00:06:35,860
<font color="#CCCCCC">squishy architecture it basically</font><font color="#E5E5E5"> it</font>

160
00:06:33,400 --> 00:06:38,560
runs<font color="#CCCCCC"> tests Python tests in our case we</font>

161
00:06:35,860 --> 00:06:40,420
chose<font color="#CCCCCC"> Brighton and it sends it</font><font color="#E5E5E5"> sends</font>

162
00:06:38,560 --> 00:06:41,860
commands to to a<font color="#E5E5E5"> to a third-party tool</font>

163
00:06:40,420 --> 00:06:43,360
that's called<font color="#CCCCCC"> the squish server and</font><font color="#E5E5E5"> that</font>

164
00:06:41,860 --> 00:06:44,530
actually<font color="#CCCCCC"> is in charge of launching the</font>

165
00:06:43,360 --> 00:06:48,460
<font color="#CCCCCC">application and then dispatching the</font>

166
00:06:44,530 --> 00:06:51,309
<font color="#CCCCCC">course into the</font><font color="#E5E5E5"> application they did</font>

167
00:06:48,460 --> 00:06:53,039
this is<font color="#CCCCCC"> not that</font><font color="#E5E5E5"> interesting</font><font color="#CCCCCC"> this</font><font color="#E5E5E5"> is</font>

168
00:06:51,310 --> 00:06:55,810
<font color="#E5E5E5">typically what happens you have</font><font color="#CCCCCC"> the test</font>

169
00:06:53,040 --> 00:06:58,150
<font color="#E5E5E5">script on the left then</font><font color="#CCCCCC"> you have the</font>

170
00:06:55,810 --> 00:07:00,490
<font color="#CCCCCC">squish server and that launches either</font>

171
00:06:58,150 --> 00:07:02,500
<font color="#E5E5E5">and so if you wait</font><font color="#CCCCCC"> for a special</font><font color="#E5E5E5"> way</font>

172
00:07:00,490 --> 00:07:04,030
for example<font color="#E5E5E5"> is going</font><font color="#CCCCCC"> to say okay wait</font>

173
00:07:02,500 --> 00:07:06,819
until this widget<font color="#E5E5E5"> is available that is</font>

174
00:07:04,030 --> 00:07:08,289
<font color="#E5E5E5">it's visible and active</font><font color="#CCCCCC"> and then it's</font>

175
00:07:06,819 --> 00:07:10,150
going to return<font color="#CCCCCC"> a pointer so speaking</font>

176
00:07:08,289 --> 00:07:11,740
<font color="#CCCCCC">that if you call vertical scrollbar</font><font color="#E5E5E5"> to</font>

177
00:07:10,150 --> 00:07:14,469
<font color="#E5E5E5">get</font><font color="#CCCCCC"> the scrollbar on</font><font color="#E5E5E5"> that particular</font>

178
00:07:11,740 --> 00:07:16,840
<font color="#CCCCCC">widget then it's going</font><font color="#E5E5E5"> to send invoked</font>

179
00:07:14,470 --> 00:07:18,490
<font color="#E5E5E5">get</font><font color="#CCCCCC"> scrollbar basically under on</font><font color="#E5E5E5"> that</font>

180
00:07:16,840 --> 00:07:20,020
widget<font color="#E5E5E5"> to</font><font color="#CCCCCC"> the server</font><font color="#E5E5E5"> the server will do</font>

181
00:07:18,490 --> 00:07:21,699
its<font color="#E5E5E5"> thing and return another pointer and</font>

182
00:07:20,020 --> 00:07:24,698
so on so forth<font color="#CCCCCC"> so basically it's just</font>

183
00:07:21,699 --> 00:07:28,449
<font color="#E5E5E5">it's an RPC mechanism really RPC</font>

184
00:07:24,699 --> 00:07:33,310
<font color="#E5E5E5">wrapping the the</font><font color="#CCCCCC"> Qt interfaces in our</font>

185
00:07:28,449 --> 00:07:35,919
particular<font color="#E5E5E5"> case so that's great</font><font color="#CCCCCC"> the way</font>

186
00:07:33,310 --> 00:07:39,130
squish itself is built<font color="#E5E5E5"> is that when you</font>

187
00:07:35,919 --> 00:07:42,190
want to build<font color="#E5E5E5"> it from source you need to</font>

188
00:07:39,130 --> 00:07:43,180
provide a QT source tree because what

189
00:07:42,190 --> 00:07:45,310
it's going to do is<font color="#E5E5E5"> that it's going to</font>

190
00:07:43,180 --> 00:07:47,409
parse all the headers<font color="#CCCCCC"> and generate IDL</font>

191
00:07:45,310 --> 00:07:49,000
<font color="#E5E5E5">there for an indefinite interface</font>

192
00:07:47,409 --> 00:07:50,409
definition language<font color="#E5E5E5"> for all</font><font color="#CCCCCC"> of the</font>

193
00:07:49,000 --> 00:07:51,940
<font color="#CCCCCC">headers that</font><font color="#E5E5E5"> event counters and it's</font>

194
00:07:50,409 --> 00:07:53,800
just going<font color="#E5E5E5"> to generate automatically a</font>

195
00:07:51,940 --> 00:07:55,780
lot of stubs for you like this vertical

196
00:07:53,800 --> 00:07:57,970
<font color="#CCCCCC">scrollbar method call that</font><font color="#E5E5E5"> I showed</font>

197
00:07:55,780 --> 00:07:59,469
above<font color="#E5E5E5"> it knows that that thing has a</font>

198
00:07:57,970 --> 00:08:02,620
vertical scoreboard method at all

199
00:07:59,470 --> 00:08:04,620
<font color="#E5E5E5">because of this IDL and therefore you</font>

200
00:08:02,620 --> 00:08:08,199
<font color="#CCCCCC">have an easy access</font><font color="#E5E5E5"> to</font><font color="#CCCCCC"> the existing</font><font color="#E5E5E5"> QT</font>

201
00:08:04,620 --> 00:08:10,180
<font color="#E5E5E5">widgets which is great but either has a</font>

202
00:08:08,199 --> 00:08:12,340
lot of custom widgets<font color="#E5E5E5"> and we don't build</font>

203
00:08:10,180 --> 00:08:14,139
squish against this in fact<font color="#E5E5E5"> maybe it is</font>

204
00:08:12,340 --> 00:08:16,690
<font color="#CCCCCC">that the</font><font color="#E5E5E5"> rule</font><font color="#CCCCCC"> they should have taken</font>

205
00:08:14,139 --> 00:08:18,370
<font color="#E5E5E5">that is injecting our own widgets in it</font>

206
00:08:16,690 --> 00:08:21,430
<font color="#CCCCCC">before building</font><font color="#E5E5E5"> it but we chose a</font>

207
00:08:18,370 --> 00:08:23,560
different<font color="#E5E5E5"> approach and the problem is</font>

208
00:08:21,430 --> 00:08:25,180
that<font color="#CCCCCC"> our own widgets so what I call the</font>

209
00:08:23,560 --> 00:08:29,500
rendering pipeline<font color="#E5E5E5"> typically things such</font>

210
00:08:25,180 --> 00:08:31,990
as this<font color="#E5E5E5"> like the disassembly view the</font>

211
00:08:29,500 --> 00:08:34,919
these widgets<font color="#E5E5E5"> are complete black boxes</font>

212
00:08:31,990 --> 00:08:37,589
to<font color="#E5E5E5"> squish which means</font><font color="#CCCCCC"> whatever</font><font color="#E5E5E5"> you do</font>

213
00:08:34,919 --> 00:08:46,990
yeah<font color="#E5E5E5"> what am I doing</font><font color="#CCCCCC"> here</font>

214
00:08:37,589 --> 00:08:49,290
right what where<font color="#CCCCCC"> is gone where is my</font>

215
00:08:46,990 --> 00:08:49,290
other

216
00:08:52,240 --> 00:09:04,749
I'm sorry<font color="#E5E5E5"> three fingers swipe to the</font>

217
00:08:57,939 --> 00:09:06,730
right but more left brilliant<font color="#CCCCCC"> I do not</font>

218
00:09:04,749 --> 00:09:09,490
see who you<font color="#E5E5E5"> are but you will</font><font color="#CCCCCC"> definitely</font>

219
00:09:06,730 --> 00:09:15,009
get a free coffee after this is really

220
00:09:09,490 --> 00:09:16,899
cool<font color="#E5E5E5"> okay so again whatever operations</font>

221
00:09:15,009 --> 00:09:18,550
you want to be<font color="#E5E5E5"> doing on our own</font><font color="#CCCCCC"> widget I</font>

222
00:09:16,899 --> 00:09:21,059
will not go back<font color="#E5E5E5"> there because</font><font color="#CCCCCC"> otherwise</font>

223
00:09:18,550 --> 00:09:23,740
I have to<font color="#E5E5E5"> do three finger swipes again</font>

224
00:09:21,059 --> 00:09:25,990
the old<font color="#CCCCCC"> squish will be able</font><font color="#E5E5E5"> to do if we</font>

225
00:09:23,740 --> 00:09:28,540
<font color="#E5E5E5">record that it is going to say</font><font color="#CCCCCC"> okay</font>

226
00:09:25,990 --> 00:09:30,730
click at this position<font color="#CCCCCC"> and</font><font color="#E5E5E5"> then drag for</font>

227
00:09:28,540 --> 00:09:32,379
example not<font color="#E5E5E5"> going to work</font><font color="#CCCCCC"> for us again</font>

228
00:09:30,730 --> 00:09:34,949
<font color="#E5E5E5">because of font size differences or</font>

229
00:09:32,379 --> 00:09:37,929
platform differences<font color="#CCCCCC"> a</font><font color="#E5E5E5"> lot of possible</font>

230
00:09:34,949 --> 00:09:39,790
problems<font color="#E5E5E5"> really now you may say yeah but</font>

231
00:09:37,929 --> 00:09:41,350
stick<font color="#E5E5E5"> to just one font size no don't do</font>

232
00:09:39,790 --> 00:09:43,209
<font color="#CCCCCC">that because some tests anyway will need</font>

233
00:09:41,350 --> 00:09:45,910
to<font color="#E5E5E5"> use</font><font color="#CCCCCC"> different font sizes we precisely</font>

234
00:09:43,209 --> 00:09:50,589
<font color="#E5E5E5">because</font><font color="#CCCCCC"> in some cases</font><font color="#E5E5E5"> we want to check</font>

235
00:09:45,910 --> 00:09:52,868
<font color="#E5E5E5">the font sizes</font><font color="#CCCCCC"> work fine so okay so what</font>

236
00:09:50,589 --> 00:09:54,550
we introduced is just thanks<font color="#CCCCCC"> to one</font>

237
00:09:52,869 --> 00:09:57,009
thing that's called the<font color="#CCCCCC"> QT mate</font><font color="#E5E5E5"> object</font>

238
00:09:54,550 --> 00:10:00,309
protocol on our own widgets we have just

239
00:09:57,009 --> 00:10:02,529
one entry point that<font color="#CCCCCC"> we call the squish</font>

240
00:10:00,309 --> 00:10:06,519
facade it's just basically in charge of

241
00:10:02,529 --> 00:10:09,100
returning<font color="#CCCCCC"> a QT object that is intro that</font>

242
00:10:06,519 --> 00:10:11,049
can be introspected<font color="#CCCCCC"> and that squish can</font>

243
00:10:09,100 --> 00:10:13,389
do so it cannot call the original

244
00:10:11,049 --> 00:10:15,189
<font color="#E5E5E5">methods of our widgets</font><font color="#CCCCCC"> but through the</font>

245
00:10:13,389 --> 00:10:17,350
squish facade we can have bridges

246
00:10:15,189 --> 00:10:21,429
basically to our methods that means now

247
00:10:17,350 --> 00:10:23,949
<font color="#CCCCCC">we have an entry point</font><font color="#E5E5E5"> to calling stuff</font>

248
00:10:21,429 --> 00:10:25,929
in our own widgets even though squish

249
00:10:23,949 --> 00:10:27,758
itself does not<font color="#E5E5E5"> know natively about our</font>

250
00:10:25,929 --> 00:10:30,879
own widgets<font color="#E5E5E5"> and that's</font><font color="#CCCCCC"> actually pretty</font>

251
00:10:27,759 --> 00:10:33,639
<font color="#CCCCCC">cool</font><font color="#E5E5E5"> this is this is the this is a</font>

252
00:10:30,879 --> 00:10:37,649
facade<font color="#E5E5E5"> over a type of</font><font color="#CCCCCC"> widget we called a</font>

253
00:10:33,639 --> 00:10:40,149
custom<font color="#CCCCCC"> item MO</font><font color="#E5E5E5"> and basically it has</font><font color="#CCCCCC"> this</font>

254
00:10:37,649 --> 00:10:41,980
it has one property<font color="#CCCCCC"> like the renderer</font>

255
00:10:40,149 --> 00:10:44,829
type<font color="#CCCCCC"> whether in the flood mode or grass</font>

256
00:10:41,980 --> 00:10:46,990
<font color="#E5E5E5">view for</font><font color="#CCCCCC"> example and and</font><font color="#E5E5E5"> as you can</font><font color="#CCCCCC"> see</font>

257
00:10:44,829 --> 00:10:50,019
the slots<font color="#E5E5E5"> there what they call a slot is</font>

258
00:10:46,990 --> 00:10:51,790
something in respectable<font color="#E5E5E5"> the get render</font>

259
00:10:50,019 --> 00:10:53,740
type will just return resource<font color="#CCCCCC"> render</font>

260
00:10:51,790 --> 00:10:56,049
<font color="#E5E5E5">type in fact so it's just literally just</font>

261
00:10:53,740 --> 00:10:57,999
<font color="#CCCCCC">a bridge</font><font color="#E5E5E5"> it's usually what it does is</font>

262
00:10:56,049 --> 00:11:02,799
just<font color="#E5E5E5"> it's</font><font color="#CCCCCC"> just a trampoline</font><font color="#E5E5E5"> so to speak</font>

263
00:10:57,999 --> 00:11:04,149
and so this is so moved everything from

264
00:11:02,799 --> 00:11:05,959
the custom widgets<font color="#CCCCCC"> because initially I</font>

265
00:11:04,149 --> 00:11:08,060
<font color="#CCCCCC">started putting those discoverable</font>

266
00:11:05,960 --> 00:11:09,560
properties<font color="#E5E5E5"> and slots on our widgets but</font>

267
00:11:08,060 --> 00:11:11,300
it quickly became a mess so that's why I

268
00:11:09,560 --> 00:11:14,089
extracted<font color="#E5E5E5"> them into a facade that I</font>

269
00:11:11,300 --> 00:11:16,490
could<font color="#E5E5E5"> just retrieve and work on them</font><font color="#CCCCCC"> so</font>

270
00:11:14,090 --> 00:11:18,410
<font color="#E5E5E5">you have you</font><font color="#CCCCCC"> have something</font><font color="#E5E5E5"> like this on</font>

271
00:11:16,490 --> 00:11:20,690
our widget now<font color="#E5E5E5"> we define</font><font color="#CCCCCC"> a</font><font color="#E5E5E5"> public squish</font>

272
00:11:18,410 --> 00:11:23,569
<font color="#E5E5E5">facade property which expands to blah</font>

273
00:11:20,690 --> 00:11:25,610
not so interesting but it's basically

274
00:11:23,570 --> 00:11:28,520
just a bag of properties<font color="#E5E5E5"> and accessories</font>

275
00:11:25,610 --> 00:11:30,200
right<font color="#CCCCCC"> sort of</font><font color="#E5E5E5"> a</font><font color="#CCCCCC"> namespace</font><font color="#E5E5E5"> if you will I</font>

276
00:11:28,520 --> 00:11:32,840
mean<font color="#E5E5E5"> we can call it</font><font color="#CCCCCC"> include that if</font><font color="#E5E5E5"> you</font>

277
00:11:30,200 --> 00:11:34,670
<font color="#E5E5E5">want and they just do very little very</font>

278
00:11:32,840 --> 00:11:37,880
little<font color="#CCCCCC"> they just query so that's</font><font color="#E5E5E5"> just</font>

279
00:11:34,670 --> 00:11:39,800
our use of<font color="#E5E5E5"> squish with our own widgets</font>

280
00:11:37,880 --> 00:11:41,900
<font color="#E5E5E5">and once you have that you would</font>

281
00:11:39,800 --> 00:11:44,870
typically call it like this<font color="#E5E5E5"> so you</font><font color="#CCCCCC"> would</font>

282
00:11:41,900 --> 00:11:47,060
wait<font color="#CCCCCC"> for the folder for the first</font>

283
00:11:44,870 --> 00:11:48,800
specific<font color="#E5E5E5"> kind of view in this case</font><font color="#CCCCCC"> IWA</font>

284
00:11:47,060 --> 00:11:50,209
so the disassembly<font color="#CCCCCC"> view and then you</font>

285
00:11:48,800 --> 00:11:51,589
<font color="#CCCCCC">would you would retrieve the squishy</font>

286
00:11:50,210 --> 00:11:53,660
facade and<font color="#E5E5E5"> then</font><font color="#CCCCCC"> call</font><font color="#E5E5E5"> on the squish</font>

287
00:11:51,590 --> 00:11:55,850
facade and that calls into our

288
00:11:53,660 --> 00:11:59,120
application and retrieves our own custom

289
00:11:55,850 --> 00:12:00,560
widget specific stuff<font color="#E5E5E5"> and then of</font><font color="#CCCCCC"> course</font>

290
00:11:59,120 --> 00:12:02,210
you wrap<font color="#CCCCCC"> it up</font><font color="#E5E5E5"> into more or less</font>

291
00:12:00,560 --> 00:12:03,560
well-defined api's because we didn't

292
00:12:02,210 --> 00:12:05,930
exactly know where we were<font color="#E5E5E5"> going first</font>

293
00:12:03,560 --> 00:12:08,030
so<font color="#E5E5E5"> our</font><font color="#CCCCCC"> ready ices are a bit of a mess in</font>

294
00:12:05,930 --> 00:12:10,130
<font color="#CCCCCC">terms of coherency but it doesn't really</font>

295
00:12:08,030 --> 00:12:12,170
matter<font color="#E5E5E5"> what matters is that they work so</font>

296
00:12:10,130 --> 00:12:13,820
thanks<font color="#E5E5E5"> to the</font><font color="#CCCCCC"> Qt mate</font><font color="#E5E5E5"> object protocol</font>

297
00:12:12,170 --> 00:12:17,209
<font color="#E5E5E5">this kind of thing is feasible and this</font>

298
00:12:13,820 --> 00:12:19,760
is really really<font color="#E5E5E5"> really cool so then we</font>

299
00:12:17,210 --> 00:12:22,340
started<font color="#CCCCCC"> writing tests we</font><font color="#E5E5E5"> wanted to have</font>

300
00:12:19,760 --> 00:12:25,160
pretty small scripts because<font color="#E5E5E5"> otherwise</font>

301
00:12:22,340 --> 00:12:28,610
it's<font color="#E5E5E5"> dumb and we</font><font color="#CCCCCC"> want the results to be</font>

302
00:12:25,160 --> 00:12:31,100
text files just easy to<font color="#E5E5E5"> do to stuff into</font>

303
00:12:28,610 --> 00:12:33,860
<font color="#CCCCCC">an</font><font color="#E5E5E5"> SCM</font><font color="#CCCCCC"> and then do comparisons over</font><font color="#E5E5E5"> them</font>

304
00:12:31,100 --> 00:12:35,720
<font color="#CCCCCC">this</font><font color="#E5E5E5"> is an example test for example</font><font color="#CCCCCC"> the</font>

305
00:12:33,860 --> 00:12:38,240
<font color="#E5E5E5">first time is</font><font color="#CCCCCC"> just in areas</font><font color="#E5E5E5"> but then I</font>

306
00:12:35,720 --> 00:12:40,670
call on the<font color="#CCCCCC"> view I just say</font><font color="#E5E5E5"> okay</font><font color="#CCCCCC"> go flat</font>

307
00:12:38,240 --> 00:12:43,040
mode<font color="#CCCCCC"> then</font><font color="#E5E5E5"> jump to a certain address and</font>

308
00:12:40,670 --> 00:12:45,620
then go up and then go<font color="#E5E5E5"> to graph and then</font>

309
00:12:43,040 --> 00:12:47,300
make sure<font color="#E5E5E5"> that the</font><font color="#CCCCCC"> current da makes</font>

310
00:12:45,620 --> 00:12:48,500
sense for example<font color="#CCCCCC"> right because there</font>

311
00:12:47,300 --> 00:12:50,510
might have been a<font color="#CCCCCC"> problem there I don't</font>

312
00:12:48,500 --> 00:12:53,720
<font color="#CCCCCC">know this</font><font color="#E5E5E5"> is a</font><font color="#CCCCCC"> this</font><font color="#E5E5E5"> was extracted from a</font>

313
00:12:50,510 --> 00:12:55,250
test<font color="#E5E5E5"> so I</font><font color="#CCCCCC"> edged that out at the bit at</font>

314
00:12:53,720 --> 00:12:57,410
the<font color="#CCCCCC"> end which is typically what will be</font>

315
00:12:55,250 --> 00:12:58,850
ended up<font color="#CCCCCC"> into the listing file that we</font>

316
00:12:57,410 --> 00:13:02,870
will<font color="#E5E5E5"> actually submit in for so that</font>

317
00:12:58,850 --> 00:13:06,410
would be the<font color="#E5E5E5"> test result basically so a</font>

318
00:13:02,870 --> 00:13:08,930
few numbers<font color="#E5E5E5"> so we started actually</font>

319
00:13:06,410 --> 00:13:11,390
<font color="#E5E5E5">writing stuff in April</font><font color="#CCCCCC"> of 2013 and we've</font>

320
00:13:08,930 --> 00:13:13,189
been added since<font color="#E5E5E5"> then at the time</font><font color="#CCCCCC"> of</font>

321
00:13:11,390 --> 00:13:14,510
<font color="#CCCCCC">this writing which is</font><font color="#E5E5E5"> this is a small</font>

322
00:13:13,190 --> 00:13:15,750
<font color="#E5E5E5">presentation I gave some time ago</font>

323
00:13:14,510 --> 00:13:20,970
actually

324
00:13:15,750 --> 00:13:23,640
<font color="#CCCCCC">were</font><font color="#E5E5E5"> 400 test scripts but in all tests</font>

325
00:13:20,970 --> 00:13:25,350
<font color="#E5E5E5">the descriptor basically</font><font color="#CCCCCC"> themes and</font><font color="#E5E5E5"> in</font>

326
00:13:23,640 --> 00:13:27,510
all<font color="#E5E5E5"> of those tests we have multiple</font>

327
00:13:25,350 --> 00:13:29,130
<font color="#E5E5E5">whether what I call phases</font><font color="#CCCCCC"> so if you</font>

328
00:13:27,510 --> 00:13:30,750
<font color="#E5E5E5">take into</font><font color="#CCCCCC"> consideration all of</font><font color="#E5E5E5"> the</font>

329
00:13:29,130 --> 00:13:32,220
<font color="#CCCCCC">phases of all of the test scripts really</font>

330
00:13:30,750 --> 00:13:34,130
literally<font color="#CCCCCC"> tests for thousands</font><font color="#E5E5E5"> of things</font>

331
00:13:32,220 --> 00:13:37,410
which is<font color="#CCCCCC"> not too</font><font color="#E5E5E5"> bad</font>

332
00:13:34,130 --> 00:13:40,439
and<font color="#E5E5E5"> yeah some pictures some numbers</font>

333
00:13:37,410 --> 00:13:43,650
rather this this as you may guess is the

334
00:13:40,440 --> 00:13:44,940
the curve of the<font color="#CCCCCC"> tests as we</font><font color="#E5E5E5"> we started</font>

335
00:13:43,650 --> 00:13:46,500
writing<font color="#E5E5E5"> and so as you can</font><font color="#CCCCCC"> see in the</font>

336
00:13:44,940 --> 00:13:47,340
beginning<font color="#E5E5E5"> we had a bit</font><font color="#CCCCCC"> of a hard time</font>

337
00:13:46,500 --> 00:13:49,020
<font color="#CCCCCC">setting it up</font>

338
00:13:47,340 --> 00:13:51,810
setting it all up<font color="#CCCCCC"> with squares and</font>

339
00:13:49,020 --> 00:13:54,720
everything so finding our<font color="#E5E5E5"> marks and then</font>

340
00:13:51,810 --> 00:13:57,540
it's sorry<font color="#CCCCCC"> that some points in in 2013</font>

341
00:13:54,720 --> 00:14:00,330
<font color="#CCCCCC">by the end</font><font color="#E5E5E5"> of 2013 and then we</font><font color="#CCCCCC"> have a</font>

342
00:13:57,540 --> 00:14:02,069
huge curve going up there this is

343
00:14:00,330 --> 00:14:05,070
basically me<font color="#E5E5E5"> spending a shitload of time</font>

344
00:14:02,070 --> 00:14:07,440
writing tests and and then fortunately

345
00:14:05,070 --> 00:14:09,690
enter the curve softened a little<font color="#E5E5E5"> bit</font>

346
00:14:07,440 --> 00:14:12,720
which means that hey there are probably

347
00:14:09,690 --> 00:14:15,090
<font color="#E5E5E5">less bugs now right and one thing that's</font>

348
00:14:12,720 --> 00:14:18,120
probably<font color="#E5E5E5"> worth mentioning is that around</font>

349
00:14:15,090 --> 00:14:19,320
<font color="#E5E5E5">that time around here there was and this</font>

350
00:14:18,120 --> 00:14:21,630
<font color="#CCCCCC">is a</font><font color="#E5E5E5"> little bit of an</font><font color="#CCCCCC"> achievement I'm</font>

351
00:14:19,320 --> 00:14:24,510
proud of<font color="#E5E5E5"> there was a massive refactoring</font>

352
00:14:21,630 --> 00:14:28,439
in<font color="#E5E5E5"> Ida between okay so the red</font><font color="#CCCCCC"> line here</font>

353
00:14:24,510 --> 00:14:30,600
<font color="#E5E5E5">is</font><font color="#CCCCCC"> the Ida release six 6.8</font><font color="#E5E5E5"> service</font><font color="#CCCCCC"> pack</font>

354
00:14:28,440 --> 00:14:32,700
and the other red line is either<font color="#E5E5E5"> six</font>

355
00:14:30,600 --> 00:14:34,200
<font color="#E5E5E5">nine</font><font color="#CCCCCC"> and in between there was a massive</font>

356
00:14:32,700 --> 00:14:36,810
refactoring in the UI<font color="#E5E5E5"> and when I say</font>

357
00:14:34,200 --> 00:14:40,440
massive<font color="#CCCCCC"> its massive</font><font color="#E5E5E5"> and thanks to the</font>

358
00:14:36,810 --> 00:14:43,079
<font color="#E5E5E5">test we hardly noticed real-world</font>

359
00:14:40,440 --> 00:14:45,720
problems when<font color="#E5E5E5"> during our bezel testing</font>

360
00:14:43,080 --> 00:14:48,000
and<font color="#E5E5E5"> even more so after the release so it</font>

361
00:14:45,720 --> 00:14:50,760
actually<font color="#E5E5E5"> works right it's a</font><font color="#CCCCCC"> done thing</font>

362
00:14:48,000 --> 00:14:52,890
<font color="#E5E5E5">it's a significant amount of work but it</font>

363
00:14:50,760 --> 00:14:54,480
definitely<font color="#E5E5E5"> is</font><font color="#CCCCCC"> worth it in my opinion at</font>

364
00:14:52,890 --> 00:14:58,260
least<font color="#E5E5E5"> and I believe I'm not the only one</font>

365
00:14:54,480 --> 00:15:00,990
thinking<font color="#E5E5E5"> that so</font><font color="#CCCCCC"> the typical the</font><font color="#E5E5E5"> typical</font>

366
00:14:58,260 --> 00:15:02,670
<font color="#E5E5E5">average output</font><font color="#CCCCCC"> lock size again this must</font>

367
00:15:00,990 --> 00:15:04,320
be readable<font color="#CCCCCC"> by a</font><font color="#E5E5E5"> human and the</font>

368
00:15:02,670 --> 00:15:06,689
comparisons must be<font color="#E5E5E5"> visible so</font><font color="#CCCCCC"> we end up</font>

369
00:15:04,320 --> 00:15:09,990
<font color="#E5E5E5">with</font><font color="#CCCCCC"> logs that on</font><font color="#E5E5E5"> average are</font><font color="#CCCCCC"> 1:1</font><font color="#E5E5E5"> about</font>

370
00:15:06,690 --> 00:15:14,460
200<font color="#E5E5E5"> lines the average test size is to be</font>

371
00:15:09,990 --> 00:15:17,490
<font color="#CCCCCC">74 lines per script which is not big</font><font color="#E5E5E5"> and</font>

372
00:15:14,460 --> 00:15:19,680
they work well I mean that<font color="#E5E5E5"> is they were</font>

373
00:15:17,490 --> 00:15:22,410
<font color="#E5E5E5">usually cross platforms we have less</font>

374
00:15:19,680 --> 00:15:25,079
stability<font color="#E5E5E5"> on OS 10 and</font><font color="#CCCCCC"> Windows in fact</font>

375
00:15:22,410 --> 00:15:26,910
the my<font color="#E5E5E5"> platform of choice being Linux</font>

376
00:15:25,080 --> 00:15:27,290
this is where I<font color="#E5E5E5"> focus the most and this</font>

377
00:15:26,910 --> 00:15:29,719
is where

378
00:15:27,290 --> 00:15:32,509
tests are by far the<font color="#E5E5E5"> most stable and and</font>

379
00:15:29,720 --> 00:15:35,089
the fastest<font color="#CCCCCC"> and as you will see I gang I</font>

380
00:15:32,509 --> 00:15:39,829
have<font color="#E5E5E5"> a certain advantage</font><font color="#CCCCCC"> of by working</font>

381
00:15:35,089 --> 00:15:42,589
<font color="#E5E5E5">on Linux on this right so difficulties I</font>

382
00:15:39,829 --> 00:15:44,209
believe that<font color="#E5E5E5"> UI testing is actually</font>

383
00:15:42,589 --> 00:15:46,459
<font color="#CCCCCC">fairly hard a</font><font color="#E5E5E5"> lot of companies don't</font>

384
00:15:44,209 --> 00:15:48,920
<font color="#CCCCCC">even bother</font><font color="#E5E5E5"> because it's pretty hard but</font>

385
00:15:46,459 --> 00:15:50,689
<font color="#E5E5E5">Ida has a fairly large surface of</font>

386
00:15:48,920 --> 00:15:52,610
actions and<font color="#E5E5E5"> if you don't test that it's</font>

387
00:15:50,690 --> 00:15:53,990
easy to<font color="#E5E5E5"> not even notice that you broke</font>

388
00:15:52,610 --> 00:15:55,430
something<font color="#E5E5E5"> and then the release goes out</font>

389
00:15:53,990 --> 00:15:56,600
<font color="#E5E5E5">and people start complaining because hey</font>

390
00:15:55,430 --> 00:15:59,388
I'm using<font color="#E5E5E5"> that all the time now it's</font>

391
00:15:56,600 --> 00:16:01,009
<font color="#E5E5E5">broken yes sorry we didn't notice so a</font>

392
00:15:59,389 --> 00:16:03,199
lot<font color="#CCCCCC"> of</font><font color="#E5E5E5"> companies I think don't even</font>

393
00:16:01,009 --> 00:16:05,149
bother and if they do they do it in the

394
00:16:03,199 --> 00:16:08,500
way that<font color="#CCCCCC"> they record the tests and quite</font>

395
00:16:05,149 --> 00:16:08,500
frankly<font color="#CCCCCC"> No</font>

396
00:16:10,339 --> 00:16:16,519
<font color="#E5E5E5">yeah so we have a first we have squish</font>

397
00:16:14,420 --> 00:16:18,740
and as I<font color="#CCCCCC"> said I introduced</font><font color="#E5E5E5"> the notion of</font>

398
00:16:16,519 --> 00:16:20,959
the squish facade<font color="#E5E5E5"> over our own custom</font>

399
00:16:18,740 --> 00:16:23,209
<font color="#CCCCCC">widgets and then on top</font><font color="#E5E5E5"> of that we top</font>

400
00:16:20,959 --> 00:16:27,050
of that we had to<font color="#E5E5E5"> slap our own script</font>

401
00:16:23,209 --> 00:16:29,810
<font color="#E5E5E5">helpers so this is a this</font><font color="#CCCCCC"> is a total</font>

402
00:16:27,050 --> 00:16:31,219
amount<font color="#CCCCCC"> of lines</font><font color="#E5E5E5"> just for the helpers and</font>

403
00:16:29,810 --> 00:16:33,109
<font color="#E5E5E5">that is all the tests will typically use</font>

404
00:16:31,220 --> 00:16:37,069
those helpers I have about<font color="#CCCCCC"> eleven</font>

405
00:16:33,110 --> 00:16:40,010
<font color="#CCCCCC">thousand lines</font><font color="#E5E5E5"> right there</font><font color="#CCCCCC"> just to have</font>

406
00:16:37,069 --> 00:16:44,719
<font color="#CCCCCC">a</font><font color="#E5E5E5"> cross-platform kind of user friendly</font>

407
00:16:40,010 --> 00:16:46,730
<font color="#CCCCCC">interface for writing tests yeah so the</font>

408
00:16:44,720 --> 00:16:48,139
tests are pretty<font color="#E5E5E5"> damn stable on Linux</font>

409
00:16:46,730 --> 00:16:50,060
<font color="#E5E5E5">and as I</font><font color="#CCCCCC"> said a little</font><font color="#E5E5E5"> less than the</font>

410
00:16:48,139 --> 00:16:52,910
<font color="#CCCCCC">windows and OS</font><font color="#E5E5E5"> 10 but they do run and a</font>

411
00:16:50,060 --> 00:16:55,300
colleague<font color="#CCCCCC"> of</font><font color="#E5E5E5"> mine Troy added recently a</font>

412
00:16:52,910 --> 00:16:57,319
bunch of tests for iOS debugging and

413
00:16:55,300 --> 00:17:01,699
obviously those must be<font color="#E5E5E5"> run from our</font>

414
00:16:57,319 --> 00:17:03,649
platform because<font color="#E5E5E5"> Apple so Linux as the</font>

415
00:17:01,699 --> 00:17:06,980
reference<font color="#E5E5E5"> platform has one very very</font>

416
00:17:03,649 --> 00:17:09,740
great advantages<font color="#CCCCCC"> x-ray at be suggested</font>

417
00:17:06,980 --> 00:17:10,849
by my colleague Ramiro here<font color="#E5E5E5"> exactly I</font>

418
00:17:09,740 --> 00:17:14,179
don't<font color="#CCCCCC"> know if you know</font><font color="#E5E5E5"> what that is but</font>

419
00:17:10,849 --> 00:17:17,299
it's basically<font color="#CCCCCC"> an</font><font color="#E5E5E5"> X server therefore the</font>

420
00:17:14,179 --> 00:17:19,010
Linux<font color="#E5E5E5"> visual interface except it's in</font>

421
00:17:17,299 --> 00:17:21,260
memory<font color="#E5E5E5"> and it fakes</font><font color="#CCCCCC"> the inputs and</font>

422
00:17:19,010 --> 00:17:23,390
<font color="#E5E5E5">outputs which is cool because then we</font>

423
00:17:21,260 --> 00:17:25,669
can<font color="#E5E5E5"> actually run the</font><font color="#CCCCCC"> test the squish</font>

424
00:17:23,390 --> 00:17:26,990
tests<font color="#CCCCCC"> actually require input</font><font color="#E5E5E5"> and output</font>

425
00:17:25,669 --> 00:17:28,820
<font color="#CCCCCC">that is</font><font color="#E5E5E5"> they need a mouse they will</font>

426
00:17:26,990 --> 00:17:32,120
literally go<font color="#CCCCCC"> and click</font><font color="#E5E5E5"> on buttons and</font>

427
00:17:28,820 --> 00:17:33,439
things so that's<font color="#E5E5E5"> pretty annoying when</font>

428
00:17:32,120 --> 00:17:35,270
you're working<font color="#E5E5E5"> and you run a test and</font>

429
00:17:33,440 --> 00:17:36,860
you have<font color="#CCCCCC"> seeing everything</font><font color="#E5E5E5"> happening on</font>

430
00:17:35,270 --> 00:17:39,629
<font color="#E5E5E5">your screen this</font><font color="#CCCCCC"> is</font><font color="#E5E5E5"> a little bit</font>

431
00:17:36,860 --> 00:17:41,909
upsetting so<font color="#CCCCCC"> x-rays B is</font>

432
00:17:39,630 --> 00:17:44,130
super<font color="#CCCCCC"> because not only</font><font color="#E5E5E5"> that</font><font color="#CCCCCC"> it</font><font color="#E5E5E5"> lets you</font>

433
00:17:41,910 --> 00:17:45,810
run tests<font color="#E5E5E5"> in</font><font color="#CCCCCC"> xvf B and therefore does</font>

434
00:17:44,130 --> 00:17:48,120
<font color="#CCCCCC">not interfere with your work that's the</font>

435
00:17:45,810 --> 00:17:50,129
first bonus<font color="#E5E5E5"> but you can paralyze</font><font color="#CCCCCC"> it so</font>

436
00:17:48,120 --> 00:17:52,800
now we<font color="#E5E5E5"> run the</font><font color="#CCCCCC"> test</font><font color="#E5E5E5"> literally by cuts of</font>

437
00:17:50,130 --> 00:17:55,170
<font color="#CCCCCC">sixteen and there you go</font><font color="#E5E5E5"> so at the time</font>

438
00:17:52,800 --> 00:17:57,450
we have<font color="#E5E5E5"> right now we have maybe a little</font>

439
00:17:55,170 --> 00:17:59,100
less<font color="#CCCCCC"> than 500 tests and running them all</font>

440
00:17:57,450 --> 00:18:02,040
takes about half an<font color="#E5E5E5"> hour I would say</font>

441
00:17:59,100 --> 00:18:03,689
which<font color="#CCCCCC"> is not that</font><font color="#E5E5E5"> big a deal and we get</font>

442
00:18:02,040 --> 00:18:06,000
since<font color="#CCCCCC"> obviously it's in continuous</font>

443
00:18:03,690 --> 00:18:08,760
integration now driven<font color="#E5E5E5"> by your test</font>

444
00:18:06,000 --> 00:18:11,010
drivers<font color="#E5E5E5"> I will mention later</font><font color="#CCCCCC"> we get</font>

445
00:18:08,760 --> 00:18:13,110
results every<font color="#E5E5E5"> now and then like multiple</font>

446
00:18:11,010 --> 00:18:17,220
times<font color="#CCCCCC"> a day obviously saying that hey</font>

447
00:18:13,110 --> 00:18:18,689
just<font color="#E5E5E5"> just broke and it's a great help we</font>

448
00:18:17,220 --> 00:18:21,060
couldn't find any way to<font color="#E5E5E5"> have an</font>

449
00:18:18,690 --> 00:18:22,560
equivalent<font color="#E5E5E5"> on Windows and on OS 10 we</font>

450
00:18:21,060 --> 00:18:26,550
had a kind<font color="#CCCCCC"> of a kludge on where standard</font>

451
00:18:22,560 --> 00:18:29,040
didn't really work<font color="#E5E5E5"> but running running</font>

452
00:18:26,550 --> 00:18:31,399
<font color="#E5E5E5">on egfp and parallel eyes and then</font><font color="#CCCCCC"> just</font>

453
00:18:29,040 --> 00:18:35,370
made our<font color="#CCCCCC"> life so</font><font color="#E5E5E5"> much better</font>

454
00:18:31,400 --> 00:18:38,220
so yeah this t2 thing is<font color="#E5E5E5"> actually the</font>

455
00:18:35,370 --> 00:18:40,620
test driver<font color="#CCCCCC"> which helps run a lot of</font>

456
00:18:38,220 --> 00:18:44,280
<font color="#E5E5E5">things including the UI tests but not</font>

457
00:18:40,620 --> 00:18:46,979
only and and with this test driver I

458
00:18:44,280 --> 00:18:48,930
have<font color="#CCCCCC"> added a few things such as the flag</font>

459
00:18:46,980 --> 00:18:51,960
look for trouble<font color="#E5E5E5"> which means I will run</font>

460
00:18:48,930 --> 00:18:55,230
the specified tests endlessly until<font color="#E5E5E5"> it</font>

461
00:18:51,960 --> 00:18:57,930
finds a failure or a crash or any any

462
00:18:55,230 --> 00:18:59,490
<font color="#E5E5E5">kind of trouble and really -</font><font color="#CCCCCC"> J is the</font>

463
00:18:57,930 --> 00:19:03,060
<font color="#CCCCCC">glue</font><font color="#E5E5E5"> same as with makes</font><font color="#CCCCCC"> on multiple</font>

464
00:18:59,490 --> 00:19:04,560
processes<font color="#CCCCCC"> video</font><font color="#E5E5E5"> capture that's cool</font>

465
00:19:03,060 --> 00:19:06,540
<font color="#E5E5E5">because when you run in</font><font color="#CCCCCC"> X VfB and</font>

466
00:19:04,560 --> 00:19:08,550
something goes wrong<font color="#E5E5E5"> well you don't have</font>

467
00:19:06,540 --> 00:19:10,500
your visual feedback but now with visual

468
00:19:08,550 --> 00:19:12,180
capture using ffmpeg for the capture<font color="#CCCCCC"> and</font>

469
00:19:10,500 --> 00:19:14,610
<font color="#CCCCCC">i'm player typically for the playback I</font>

470
00:19:12,180 --> 00:19:17,190
can actually<font color="#E5E5E5"> in C frame by frame what's</font>

471
00:19:14,610 --> 00:19:19,199
going on and that that is super<font color="#E5E5E5"> helpful</font>

472
00:19:17,190 --> 00:19:21,360
<font color="#CCCCCC">and</font><font color="#E5E5E5"> then there is also</font><font color="#CCCCCC"> wait</font><font color="#E5E5E5"> for the</font>

473
00:19:19,200 --> 00:19:25,440
burger<font color="#CCCCCC"> which is</font><font color="#E5E5E5"> very very cool because</font>

474
00:19:21,360 --> 00:19:29,000
whenever whenever something goes I mean

475
00:19:25,440 --> 00:19:31,350
gives me<font color="#E5E5E5"> the ability together with with</font>

476
00:19:29,000 --> 00:19:34,200
with<font color="#CCCCCC"> X VfB gives me the</font><font color="#E5E5E5"> ability to</font>

477
00:19:31,350 --> 00:19:37,560
launch<font color="#CCCCCC"> endlessly the</font><font color="#E5E5E5"> test and as soon as</font>

478
00:19:34,200 --> 00:19:40,620
I start<font color="#E5E5E5"> it plugs the gdb into it and and</font>

479
00:19:37,560 --> 00:19:42,960
<font color="#E5E5E5">and so with specific commands so that if</font>

480
00:19:40,620 --> 00:19:44,760
<font color="#E5E5E5">the tests crash well it stays right</font>

481
00:19:42,960 --> 00:19:47,040
there<font color="#CCCCCC"> but if the test succeeds</font><font color="#E5E5E5"> an Ida</font>

482
00:19:44,760 --> 00:19:49,650
exits gdb exits as well so it's

483
00:19:47,040 --> 00:19:51,920
<font color="#E5E5E5">automated again in UI testing because</font>

484
00:19:49,650 --> 00:19:54,830
<font color="#E5E5E5">it's events based and everything it</font>

485
00:19:51,920 --> 00:19:57,800
some<font color="#E5E5E5"> crashes are very very very hard to</font>

486
00:19:54,830 --> 00:20:02,090
<font color="#CCCCCC">reproduce but thanks to this I mean I</font>

487
00:19:57,800 --> 00:20:04,940
could for example open invention new tab

488
00:20:02,090 --> 00:20:07,340
this is something<font color="#CCCCCC"> that happened</font><font color="#E5E5E5"> so I</font><font color="#CCCCCC"> I</font>

489
00:20:04,940 --> 00:20:08,290
ran this particular test called tracing

490
00:20:07,340 --> 00:20:12,169
misc

491
00:20:08,290 --> 00:20:14,659
<font color="#E5E5E5">looking for trouble any and -</font><font color="#CCCCCC"> j1 meaning</font>

492
00:20:12,170 --> 00:20:17,570
in<font color="#CCCCCC"> xvs</font><font color="#E5E5E5"> B this</font><font color="#CCCCCC"> is in the</font><font color="#E5E5E5"> VN but still and</font>

493
00:20:14,660 --> 00:20:19,280
that then<font color="#CCCCCC"> - W which is a short for waste</font>

494
00:20:17,570 --> 00:20:21,169
<font color="#E5E5E5">for the burger and so the test that you</font>

495
00:20:19,280 --> 00:20:23,480
<font color="#E5E5E5">can see ran quite a few times here and</font>

496
00:20:21,170 --> 00:20:26,600
then at some<font color="#CCCCCC"> point eventually</font><font color="#E5E5E5"> I receive</font>

497
00:20:23,480 --> 00:20:28,790
the sex<font color="#CCCCCC"> 6 egg and I have a back trace a</font>

498
00:20:26,600 --> 00:20:31,699
proper back trace and I can<font color="#E5E5E5"> actually</font>

499
00:20:28,790 --> 00:20:36,770
investigate all that stuff at ease so

500
00:20:31,700 --> 00:20:37,850
that's like massively helpful yeah so

501
00:20:36,770 --> 00:20:39,770
the future<font color="#CCCCCC"> directions</font>

502
00:20:37,850 --> 00:20:40,969
<font color="#CCCCCC">Igor</font><font color="#E5E5E5"> Michael</font><font color="#CCCCCC"> II suggested maybe doing</font>

503
00:20:39,770 --> 00:20:42,710
some kind of<font color="#CCCCCC"> such thing</font><font color="#E5E5E5"> but it needs to</font>

504
00:20:40,970 --> 00:20:44,240
be heavily directed because<font color="#E5E5E5"> otherwise</font>

505
00:20:42,710 --> 00:20:46,190
it's just a<font color="#CCCCCC"> waste of</font><font color="#E5E5E5"> time but I</font><font color="#CCCCCC"> believe</font>

506
00:20:44,240 --> 00:20:48,560
that<font color="#CCCCCC"> ones</font><font color="#E5E5E5"> who are a little bit</font><font color="#CCCCCC"> more</font>

507
00:20:46,190 --> 00:20:52,910
<font color="#E5E5E5">comfortable with all that stuff yeah</font>

508
00:20:48,560 --> 00:20:54,200
<font color="#CCCCCC">it's definitely definitely possible so</font>

509
00:20:52,910 --> 00:20:56,060
yeah<font color="#E5E5E5"> whenever</font><font color="#CCCCCC"> you report</font><font color="#E5E5E5"> the bug</font>

510
00:20:54,200 --> 00:20:57,230
depending on the nature of bugs<font color="#E5E5E5"> as I</font>

511
00:20:56,060 --> 00:20:59,149
said in the beginning<font color="#E5E5E5"> you will fall into</font>

512
00:20:57,230 --> 00:21:00,920
<font color="#E5E5E5">two big buckets either it's what we call</font>

513
00:20:59,150 --> 00:21:02,990
it either kernel bug it's typically

514
00:21:00,920 --> 00:21:06,710
processor module<font color="#E5E5E5"> loaders and all that</font>

515
00:21:02,990 --> 00:21:09,470
stuff<font color="#CCCCCC"> auto analyzes</font><font color="#E5E5E5"> or it's a UI bug in</font>

516
00:21:06,710 --> 00:21:11,930
which case one of us will actually<font color="#E5E5E5"> add a</font>

517
00:21:09,470 --> 00:21:15,800
UI test for it first<font color="#CCCCCC"> before fixing it</font>

518
00:21:11,930 --> 00:21:17,360
obviously and yeah you'd be surprised by

519
00:21:15,800 --> 00:21:19,580
the amount<font color="#E5E5E5"> of things</font><font color="#CCCCCC"> that we can test</font>

520
00:21:17,360 --> 00:21:22,219
there are<font color="#E5E5E5"> some limitations</font><font color="#CCCCCC"> to UI testing</font>

521
00:21:19,580 --> 00:21:24,110
but usually it's incredible the amount

522
00:21:22,220 --> 00:21:27,650
of things<font color="#E5E5E5"> that we can test already and</font>

523
00:21:24,110 --> 00:21:29,719
we have a we obviously don't have<font color="#CCCCCC"> a</font><font color="#E5E5E5"> 100%</font>

524
00:21:27,650 --> 00:21:32,690
<font color="#E5E5E5">coverage but it gets better</font><font color="#CCCCCC"> every day</font>

525
00:21:29,720 --> 00:21:35,750
<font color="#E5E5E5">literally and this is this is very very</font>

526
00:21:32,690 --> 00:21:39,890
<font color="#CCCCCC">helpful and we have so much more</font>

527
00:21:35,750 --> 00:21:41,360
<font color="#CCCCCC">confidence in what we are</font><font color="#E5E5E5"> doing so yeah</font>

528
00:21:39,890 --> 00:21:44,530
<font color="#E5E5E5">thank you very much for listening</font><font color="#CCCCCC"> and</font>

529
00:21:41,360 --> 00:21:44,530
<font color="#CCCCCC">this is all I have</font>

530
00:21:46,139 --> 00:21:59,289
if there is any kind<font color="#E5E5E5"> of question be</font>

531
00:21:49,059 --> 00:22:03,668
happy<font color="#E5E5E5"> to answer thank you for the talk</font>

532
00:21:59,289 --> 00:22:06,730
<font color="#E5E5E5">do you have any api's or examples so</font>

533
00:22:03,669 --> 00:22:08,590
<font color="#CCCCCC">plug-in</font><font color="#E5E5E5"> developers could use a test and</font>

534
00:22:06,730 --> 00:22:12,850
make this now we haven't published those

535
00:22:08,590 --> 00:22:14,470
as I said<font color="#E5E5E5"> briefly before</font><font color="#CCCCCC"> it kind it</font>

536
00:22:12,850 --> 00:22:16,149
devolved a little bit organically it's a

537
00:22:14,470 --> 00:22:18,850
bit of a mess they are not pretty they

538
00:22:16,149 --> 00:22:22,418
<font color="#CCCCCC">are not at the moment we don't really</font>

539
00:22:18,850 --> 00:22:24,789
have plans<font color="#E5E5E5"> to publish them but maybe I</font>

540
00:22:22,419 --> 00:22:25,840
mean it's among other things<font color="#E5E5E5"> because we</font>

541
00:22:24,789 --> 00:22:28,179
<font color="#CCCCCC">don't know if people would be interested</font>

542
00:22:25,840 --> 00:22:30,370
<font color="#CCCCCC">so</font><font color="#E5E5E5"> thank you for suggesting it</font><font color="#CCCCCC"> I don't</font>

543
00:22:28,179 --> 00:22:33,070
know if if the pressure becomes

544
00:22:30,370 --> 00:22:35,229
unbearable we just release them at one

545
00:22:33,070 --> 00:22:36,990
point but there is no there<font color="#CCCCCC"> is no plan</font>

546
00:22:35,230 --> 00:22:40,960
at the moment<font color="#E5E5E5"> and as I</font><font color="#CCCCCC"> said it relies on</font>

547
00:22:36,990 --> 00:22:43,210
it really<font color="#CCCCCC"> yeah it relies on a boatload</font>

548
00:22:40,960 --> 00:22:47,309
of scripts that<font color="#CCCCCC"> are in a state that</font><font color="#E5E5E5"> I</font>

549
00:22:43,210 --> 00:22:56,549
mean I wouldn't show my mother<font color="#E5E5E5"> so yeah</font>

550
00:22:47,309 --> 00:22:56,549
<font color="#CCCCCC">thanks</font><font color="#E5E5E5"> okay thank you guys</font>

551
00:22:58,130 --> 00:23:00,190
you

552
00:23:02,980 --> 00:23:05,040
you

