1
00:00:01,950 --> 00:00:07,300
here's my favorite hello hi hi everyone

2
00:00:07,300 --> 00:00:09,400
apologies for the delay on Aryan but

3
00:00:09,400 --> 00:00:11,650
welcome to the first ever secure

4
00:00:11,650 --> 00:00:14,740
developer event and so that's our first

5
00:00:14,740 --> 00:00:17,429
one and we will be joined today by

6
00:00:17,429 --> 00:00:20,109
Germany Co talking about a top ten

7
00:00:20,109 --> 00:00:22,300
proactive controls but before we do that

8
00:00:22,300 --> 00:00:23,740
I thought I would quickly introduce

9
00:00:23,740 --> 00:00:25,839
myself so I'm Sam I'm the community

10
00:00:25,839 --> 00:00:28,210
manager here at sneaked and hopefully

11
00:00:28,210 --> 00:00:29,560
the human working behind the scenes to

12
00:00:29,560 --> 00:00:32,080
make all these sessions happen I'm also

13
00:00:32,080 --> 00:00:34,059
joined today by my colleague Brian I

14
00:00:34,059 --> 00:00:35,739
will be the one facilitating the mission

15
00:00:35,739 --> 00:00:40,360
through to Jim so Brian say hi hello can

16
00:00:40,360 --> 00:00:41,800
everybody see me I don't know and

17
00:00:41,800 --> 00:00:44,530
because I still see you Sam but hi I'm

18
00:00:44,530 --> 00:00:46,359
Brian I'm one of the developer advocates

19
00:00:46,359 --> 00:00:50,140
at sneak and probably yeah

20
00:00:50,140 --> 00:00:51,699
if you see me or now there's no problem

21
00:00:51,699 --> 00:00:54,250
but we have this live session channel in

22
00:00:54,250 --> 00:00:56,620
slack please if you have any questions

23
00:00:56,620 --> 00:00:59,199
put them there and I will tunnel them

24
00:00:59,199 --> 00:01:02,399
right straight to Jim so he will not get

25
00:01:02,399 --> 00:01:05,140
the same questions all over again first

26
00:01:05,140 --> 00:01:08,590
of all and we can streamline it like we

27
00:01:08,590 --> 00:01:10,990
are professionals of course so let's get

28
00:01:10,990 --> 00:01:17,700
go in perfect thanks my feedback welcome

29
00:01:17,700 --> 00:01:20,439
communities for you guys so you can find

30
00:01:20,439 --> 00:01:23,229
us on the website or on Twitter as F and

31
00:01:23,229 --> 00:01:25,689
secure devs or as I mentioned on the

32
00:01:25,689 --> 00:01:27,970
slack if you haven't joined the slack if

33
00:01:27,970 --> 00:01:29,560
you go to any secure the benefit I'll

34
00:01:29,560 --> 00:01:31,090
come and click on the top right hand

35
00:01:31,090 --> 00:01:33,670
corner you'll see join and that'll take

36
00:01:33,670 --> 00:01:35,079
you to the slack and if you can join the

37
00:01:35,079 --> 00:01:36,939
live sessions channel then Brian can

38
00:01:36,939 --> 00:01:38,920
pick up all those questions and get over

39
00:01:38,920 --> 00:01:42,159
to Jim and also on the bottom right hand

40
00:01:42,159 --> 00:01:43,149
corner of your screen there should be a

41
00:01:43,149 --> 00:01:45,820
cog if you put that up to maximum it

42
00:01:45,820 --> 00:01:48,219
should the resolution of it should be

43
00:01:48,219 --> 00:01:51,310
the best way to view and yeah and

44
00:01:51,310 --> 00:01:52,299
there's gonna be a person watching you

45
00:01:52,299 --> 00:01:54,189
by sleep and we're looking to make a

46
00:01:54,189 --> 00:01:55,990
vendor-neutral community for all things

47
00:01:55,990 --> 00:01:57,219
application security

48
00:01:57,219 --> 00:01:59,680
enough for me I'm gonna hand over to Jim

49
00:01:59,680 --> 00:02:01,030
and hopefully with the delay we can

50
00:02:01,030 --> 00:02:02,880
still get some stuff out so over to you

51
00:02:02,880 --> 00:02:05,020
Sam how are you doing today how you

52
00:02:05,020 --> 00:02:06,170
doing Sam

53
00:02:06,170 --> 00:02:09,679
panic attack panic over we're live now

54
00:02:09,679 --> 00:02:11,870
we're going to talk about the wasp

55
00:02:11,870 --> 00:02:14,930
proactive controls today this is a look

56
00:02:14,930 --> 00:02:17,030
it's a top 10 list you know it's it's

57
00:02:17,030 --> 00:02:20,300
not we're not trying to solve solve like

58
00:02:20,300 --> 00:02:22,610
you know the secrets of cold fusion or

59
00:02:22,610 --> 00:02:24,260
stuff here we're trying to provide

60
00:02:24,260 --> 00:02:27,410
initial awareness on what secure

61
00:02:27,410 --> 00:02:29,450
software means what it means to be a

62
00:02:29,450 --> 00:02:31,550
secure developer what it means to

63
00:02:31,550 --> 00:02:35,000
actively proactively build the right

64
00:02:35,000 --> 00:02:37,610
controls into software in the standard

65
00:02:37,610 --> 00:02:39,800
frameworks of the day and so that's what

66
00:02:39,800 --> 00:02:41,150
we're going to talk about and I think I

67
00:02:41,150 --> 00:02:43,790
think Brian and Sam and this other guy

68
00:02:43,790 --> 00:02:45,019
who's just other guy who's on our

69
00:02:45,019 --> 00:02:46,310
hangout by the way I don't know who he

70
00:02:46,310 --> 00:02:49,430
is he just jumped it off sudden I just

71
00:02:49,430 --> 00:02:51,170
live on hangouts these days so it's just

72
00:02:51,170 --> 00:02:53,150
I just have one it's just pure luck

73
00:02:53,150 --> 00:02:55,130
what's right what's your name sir

74
00:02:55,130 --> 00:02:57,500
I'm sorry maple I'm I'm a job champion

75
00:02:57,500 --> 00:02:58,760
as well I don't have the jacket today

76
00:02:58,760 --> 00:03:00,530
with me Jim so you'll have to you'll

77
00:03:00,530 --> 00:03:03,739
have to represent us both i I works Nick

78
00:03:03,739 --> 00:03:05,750
I'm one of the dev roles in snick as

79
00:03:05,750 --> 00:03:08,480
well so I'm very pleased to be on this

80
00:03:08,480 --> 00:03:09,950
call with you Jim my pleasure cheers

81
00:03:09,950 --> 00:03:13,190
Cheers future cheers to you I bid you a

82
00:03:13,190 --> 00:03:14,840
good day I just want to make sure I knew

83
00:03:14,840 --> 00:03:16,880
who this this new person was on hangout

84
00:03:16,880 --> 00:03:18,140
okay we're back we're back everybody

85
00:03:18,140 --> 00:03:19,519
we're going to talk about the OWASP

86
00:03:19,519 --> 00:03:21,350
proactive controls I think this is a

87
00:03:21,350 --> 00:03:23,900
good topic to talk about here in the

88
00:03:23,900 --> 00:03:28,010
inaugural secure developer podcast this

89
00:03:28,010 --> 00:03:30,200
is hopefully this will set the stage for

90
00:03:30,200 --> 00:03:32,030
all the other talks that are going to

91
00:03:32,030 --> 00:03:35,329
show up and so you know what what what I

92
00:03:35,329 --> 00:03:39,140
want is for developers who are embarking

93
00:03:39,140 --> 00:03:41,660
on a journey to be a security engineer I

94
00:03:41,660 --> 00:03:44,660
I want them to understand the the big

95
00:03:44,660 --> 00:03:47,030
picture of all the different layers that

96
00:03:47,030 --> 00:03:48,769
we need to add to software from a

97
00:03:48,769 --> 00:03:50,870
security point of view and we'll be

98
00:03:50,870 --> 00:03:53,329
diving into those details in future

99
00:03:53,329 --> 00:03:55,549
versions of this podcast I'm sure but

100
00:03:55,549 --> 00:03:57,890
you know without much further ado I say

101
00:03:57,890 --> 00:03:59,660
we get started everybody I'm not gonna

102
00:03:59,660 --> 00:04:01,489
put slides up I'm just gonna we're just

103
00:04:01,489 --> 00:04:03,470
gonna have a we're just gonna have a

104
00:04:03,470 --> 00:04:04,880
conversation here right you're gonna

105
00:04:04,880 --> 00:04:06,260
we're gonna talk about secure software

106
00:04:06,260 --> 00:04:08,060
it's gonna be a hoot we're gonna have a

107
00:04:08,060 --> 00:04:08,840
good time

108
00:04:08,840 --> 00:04:10,609
you know so we're gonna have a great

109
00:04:10,609 --> 00:04:12,140
time by the way right what are you

110
00:04:12,140 --> 00:04:14,750
talking about sorry sorry everyone

111
00:04:14,750 --> 00:04:16,579
STOBAR we have to threaten Brian with a

112
00:04:16,579 --> 00:04:18,500
knife that's how we keep Brian and lying

113
00:04:18,500 --> 00:04:19,940
around here but let's

114
00:04:19,940 --> 00:04:22,400
let's talk about secure software now

115
00:04:22,400 --> 00:04:24,530
this project all right it's good to work

116
00:04:24,530 --> 00:04:25,400
enough already

117
00:04:25,400 --> 00:04:27,080
enough already I think I might be

118
00:04:27,080 --> 00:04:28,700
showing here I'm wearing a sarong see

119
00:04:28,700 --> 00:04:30,200
that's what I'm wearing I'm wearing a

120
00:04:30,200 --> 00:04:32,660
sarong it's some people call it a dress

121
00:04:32,660 --> 00:04:36,260
but go like Sam go on Google and go do a

122
00:04:36,260 --> 00:04:39,350
search on like like hot guys sarong and

123
00:04:39,350 --> 00:04:41,570
I'm probably one of those pictures let's

124
00:04:41,570 --> 00:04:42,020
move on

125
00:04:42,020 --> 00:04:44,600
so wasp is the open web application

126
00:04:44,600 --> 00:04:46,340
security project

127
00:04:46,340 --> 00:04:49,430
it's a 501 C 3 charity in the u.s. it's

128
00:04:49,430 --> 00:04:52,280
a charity in Europe as well we're

129
00:04:52,280 --> 00:04:54,350
dedicated to building secure software

130
00:04:54,350 --> 00:04:57,650
and doing and informing people about the

131
00:04:57,650 --> 00:04:59,090
different risk around application

132
00:04:59,090 --> 00:05:00,980
security and secure software there's

133
00:05:00,980 --> 00:05:03,740
different events different open source

134
00:05:03,740 --> 00:05:06,080
document projects there's different

135
00:05:06,080 --> 00:05:08,660
actual software open source projects to

136
00:05:08,660 --> 00:05:10,610
assess and do other things within the

137
00:05:10,610 --> 00:05:12,230
worlds of application security and

138
00:05:12,230 --> 00:05:14,780
secure software so this presentation is

139
00:05:14,780 --> 00:05:16,490
about an open source document project

140
00:05:16,490 --> 00:05:19,400
called the Olas proactive controls this

141
00:05:19,400 --> 00:05:21,080
is a top 10 list

142
00:05:21,080 --> 00:05:23,720
that was a direct comment to the OWASP

143
00:05:23,720 --> 00:05:26,830
top 10 risks this is more of a defensive

144
00:05:26,830 --> 00:05:29,330
perspective of a top 10 awareness list

145
00:05:29,330 --> 00:05:33,710
so the first topic is number 1 to find

146
00:05:33,710 --> 00:05:35,900
security requirements and I think this

147
00:05:35,900 --> 00:05:39,260
is a very timely first top 10 item to

148
00:05:39,260 --> 00:05:40,790
talk about again everybody if you're

149
00:05:40,790 --> 00:05:42,590
just joining we're talking about the

150
00:05:42,590 --> 00:05:45,530
OWASP top 10 proactive controls this is

151
00:05:45,530 --> 00:05:48,650
a documentation project from the

152
00:05:48,650 --> 00:05:51,230
nonprofit foundation it's nowhereness

153
00:05:51,230 --> 00:05:54,650
document meant to spread education and

154
00:05:54,650 --> 00:05:56,450
information about application security

155
00:05:56,450 --> 00:05:59,510
this is a good initial document to read

156
00:05:59,510 --> 00:06:01,780
it's gonna map out in a very broad

157
00:06:01,780 --> 00:06:04,100
high-level point of view what secure

158
00:06:04,100 --> 00:06:06,140
software is we're talking about the

159
00:06:06,140 --> 00:06:08,600
first control so what's the first thing

160
00:06:08,600 --> 00:06:10,220
that we want to talk about when we're

161
00:06:10,220 --> 00:06:12,050
beginning to discuss if your software

162
00:06:12,050 --> 00:06:14,150
and I think that answer is security

163
00:06:14,150 --> 00:06:16,220
requirements that's the number one item

164
00:06:16,220 --> 00:06:17,870
on the OAuth top ten practical control

165
00:06:17,870 --> 00:06:20,419
list now there are a lot of different

166
00:06:20,419 --> 00:06:22,760
standards that address security you know

167
00:06:22,760 --> 00:06:24,740
one of the standards that we do at the

168
00:06:24,740 --> 00:06:26,270
Olas foundation will the standards I

169
00:06:26,270 --> 00:06:28,400
work on with Daniel Cuthbert and Joe

170
00:06:28,400 --> 00:06:30,710
Vander stock Joshua Greenberg and many

171
00:06:30,710 --> 00:06:32,920
other volunteers from around the world

172
00:06:32,920 --> 00:06:36,430
is the wasp application security

173
00:06:36,430 --> 00:06:40,470
verification standard this is in every

174
00:06:40,470 --> 00:06:42,970
SDLC you look at the first thing they

175
00:06:42,970 --> 00:06:44,560
want to talk about is requirements they

176
00:06:44,560 --> 00:06:46,630
want you to set the scene and define

177
00:06:46,630 --> 00:06:49,390
clearly what functional software is in

178
00:06:49,390 --> 00:06:51,790
an art case what secure software is we

179
00:06:51,790 --> 00:06:54,340
want to define clear requirements the

180
00:06:54,340 --> 00:06:58,920
standard 4.0 was just released today

181
00:06:58,920 --> 00:07:00,700
coincidentally yesterday or today

182
00:07:00,700 --> 00:07:02,110
depending on what you want to say but

183
00:07:02,110 --> 00:07:07,210
the ASVs version 4.0 just went live and

184
00:07:07,210 --> 00:07:09,730
if you just look at github ASVs

185
00:07:09,730 --> 00:07:12,280
you'll see the 4.0 master branch is

186
00:07:12,280 --> 00:07:15,130
released this defines about 200

187
00:07:15,130 --> 00:07:17,440
different controls for web applications

188
00:07:17,440 --> 00:07:19,750
secure software I'm really proud of the

189
00:07:19,750 --> 00:07:22,390
standard and the team that built it we

190
00:07:22,390 --> 00:07:23,590
this is our get our fourth iteration

191
00:07:23,590 --> 00:07:27,010
this version 4.0 and a lot of meticulous

192
00:07:27,010 --> 00:07:30,460
care went into really discussing each of

193
00:07:30,460 --> 00:07:32,890
these requirements REE categorizing them

194
00:07:32,890 --> 00:07:35,680
in a sensible way to map our

195
00:07:35,680 --> 00:07:40,510
authentication requirements to NIST 863

196
00:07:40,510 --> 00:07:43,180
be a new digital media guideline

197
00:07:43,180 --> 00:07:44,860
standard from the federal government

198
00:07:44,860 --> 00:07:46,810
which i think is astute so let's see

199
00:07:46,810 --> 00:07:49,360
that that's number one folks that's

200
00:07:49,360 --> 00:07:51,820
that's number one in the OS top ten

201
00:07:51,820 --> 00:07:54,640
proactive controls that would be MIT

202
00:07:54,640 --> 00:07:56,560
building security requirements somehow

203
00:07:56,560 --> 00:07:58,330
into your program take a standard like a

204
00:07:58,330 --> 00:08:00,880
SDS for kit for your company boom you

205
00:08:00,880 --> 00:08:02,680
have a secure coding standard and

206
00:08:02,680 --> 00:08:04,120
hopefully you use every day in the

207
00:08:04,120 --> 00:08:05,920
process of defining building and

208
00:08:05,920 --> 00:08:08,430
assessing software all right number two

209
00:08:08,430 --> 00:08:10,510
let's go to the Olaf's table tender

210
00:08:10,510 --> 00:08:12,670
practical control number two and I'll go

211
00:08:12,670 --> 00:08:14,650
through some of these quickly I'll go

212
00:08:14,650 --> 00:08:16,300
through some of these in detail to is

213
00:08:16,300 --> 00:08:18,190
leverage security frameworks and

214
00:08:18,190 --> 00:08:21,610
libraries early on in any software

215
00:08:21,610 --> 00:08:26,070
project we want to have a clear roadmap

216
00:08:26,070 --> 00:08:29,170
for what tools the developer needs to

217
00:08:29,170 --> 00:08:31,150
write secure software can't just write

218
00:08:31,150 --> 00:08:32,710
code and get secure software you need

219
00:08:32,710 --> 00:08:35,590
you need a team of componentry right you

220
00:08:35,590 --> 00:08:38,140
need you need authentication you need

221
00:08:38,140 --> 00:08:39,789
access control you need different

222
00:08:39,789 --> 00:08:41,919
libraries for injection protection for

223
00:08:41,919 --> 00:08:43,299
user interface security

224
00:08:43,299 --> 00:08:44,980
you're gonna need Secrets vaults for

225
00:08:44,980 --> 00:08:46,270
like storing key

226
00:08:46,270 --> 00:08:48,190
and different kind of design patterns

227
00:08:48,190 --> 00:08:50,920
for doing crypto and configuring HD

228
00:08:50,920 --> 00:08:53,170
there's a lot going on here you're not

229
00:08:53,170 --> 00:08:55,290
gonna hand code all this a lot of the

230
00:08:55,290 --> 00:08:57,940
frameworks that we use to build software

231
00:08:57,940 --> 00:09:01,060
have these various controls built in we

232
00:09:01,060 --> 00:09:03,310
want to learn how to use our framework

233
00:09:03,310 --> 00:09:04,900
to the fullest learn how to configure

234
00:09:04,900 --> 00:09:08,650
and enable these controls as a core part

235
00:09:08,650 --> 00:09:09,940
of an application security program

236
00:09:09,940 --> 00:09:12,160
sometimes we need third-party libraries

237
00:09:12,160 --> 00:09:15,610
like I talked about react security with

238
00:09:15,610 --> 00:09:17,350
a friend of mine ron paris who also does

239
00:09:17,350 --> 00:09:20,230
it talks about this topic a lot and if

240
00:09:20,230 --> 00:09:23,170
we want to escape a piece of data you

241
00:09:23,170 --> 00:09:25,750
put into a style we need to do CSS

242
00:09:25,750 --> 00:09:28,270
escaping CSS hex escaping is the right

243
00:09:28,270 --> 00:09:30,310
control as you add data to dynamic style

244
00:09:30,310 --> 00:09:33,070
and so i don't have that in Koryak you

245
00:09:33,070 --> 00:09:34,540
gotta get a library for that so whatever

246
00:09:34,540 --> 00:09:37,210
so i like to have that stuff identified

247
00:09:37,210 --> 00:09:39,880
and well maintained and kept an eye on

248
00:09:39,880 --> 00:09:42,190
and we have good expertise expertise how

249
00:09:42,190 --> 00:09:44,110
to use these different security

250
00:09:44,110 --> 00:09:46,330
frameworks and libraries really early on

251
00:09:46,330 --> 00:09:48,790
one of our responsibilities in the world

252
00:09:48,790 --> 00:09:51,070
of third-party libraries you ready you

253
00:09:51,070 --> 00:09:53,230
ready for this everybody is to manage

254
00:09:53,230 --> 00:09:55,390
the security of third-party componentry

255
00:09:55,390 --> 00:09:57,760
that you're using this message brought

256
00:09:57,760 --> 00:10:00,040
to you by Sandy Carly's let's move on

257
00:10:00,040 --> 00:10:01,990
let's move on so let's talk about C 3

258
00:10:01,990 --> 00:10:04,300
now let's talk about the we're talking

259
00:10:04,300 --> 00:10:06,160
about the what do we talk about we're

260
00:10:06,160 --> 00:10:08,440
talking about the OWASP what do you say

261
00:10:08,440 --> 00:10:10,540
Brian all right sorry certainly put that

262
00:10:10,540 --> 00:10:13,600
back everyone break 1 relax everyone sit

263
00:10:13,600 --> 00:10:16,390
down ok it's ok it's right are you quiet

264
00:10:16,390 --> 00:10:18,730
I keep quiet I keep quiet I do i well I

265
00:10:18,730 --> 00:10:20,350
wouldn't dare to to interrupt

266
00:10:20,350 --> 00:10:24,430
Brian number 3 anybody here anybody now

267
00:10:24,430 --> 00:10:26,830
we're talking about the third proactive

268
00:10:26,830 --> 00:10:29,140
control we're talking about securing

269
00:10:29,140 --> 00:10:31,960
database access guess what topic I want

270
00:10:31,960 --> 00:10:33,550
to talk about in this section we talked

271
00:10:33,550 --> 00:10:37,930
about securing your connection with your

272
00:10:37,930 --> 00:10:40,090
with your database of any kind within

273
00:10:40,090 --> 00:10:41,380
application what about when we could

274
00:10:41,380 --> 00:10:46,480
talk about I have anybody who again I

275
00:10:46,480 --> 00:10:49,890
think we C 3 is really trying to inject

276
00:10:49,890 --> 00:10:53,620
is really trying to talk about sequel

277
00:10:53,620 --> 00:10:55,660
injection specifically here we are going

278
00:10:55,660 --> 00:10:59,690
from broad design topics down to really

279
00:10:59,690 --> 00:11:01,940
topics and secure software development

280
00:11:01,940 --> 00:11:06,110
and when we're talking about secure

281
00:11:06,110 --> 00:11:08,600
database access we want to use the

282
00:11:08,600 --> 00:11:09,620
proper control

283
00:11:09,620 --> 00:11:12,680
that's query query parameter ization is

284
00:11:12,680 --> 00:11:15,380
the main control to build a secure

285
00:11:15,380 --> 00:11:18,710
database connection and to build sequel

286
00:11:18,710 --> 00:11:21,080
in a secure fashion that's the core of

287
00:11:21,080 --> 00:11:23,780
your application this is pretty much the

288
00:11:23,780 --> 00:11:25,280
same control for any kind of database

289
00:11:25,280 --> 00:11:27,650
access whether it's do hibernate some

290
00:11:27,650 --> 00:11:29,600
kind of object relational mapping engine

291
00:11:29,600 --> 00:11:34,190
some kind of oql or just normal SQL you

292
00:11:34,190 --> 00:11:36,020
want to use query parameterization and

293
00:11:36,020 --> 00:11:37,340
you want to configure your database

294
00:11:37,340 --> 00:11:38,870
properly let's move to that we're

295
00:11:38,870 --> 00:11:40,340
talking about if you just joined us

296
00:11:40,340 --> 00:11:43,100
we're talking about the OWASP proactive

297
00:11:43,100 --> 00:11:46,520
control 2018 top 10 list it's a list of

298
00:11:46,520 --> 00:11:48,950
10 different control categories that

299
00:11:48,950 --> 00:11:50,930
developers need to understand in some

300
00:11:50,930 --> 00:11:52,100
way in order to build secure software

301
00:11:52,100 --> 00:11:54,620
we're now on the 4th of this top 10 list

302
00:11:54,620 --> 00:11:57,380
which is encoding and escaping data we

303
00:11:57,380 --> 00:11:59,270
were just talking about the third sequel

304
00:11:59,270 --> 00:12:02,000
injection parameterize your queries go

305
00:12:02,000 --> 00:12:04,250
look at Bobbie tables comm for

306
00:12:04,250 --> 00:12:06,020
information on parameterize queries

307
00:12:06,020 --> 00:12:07,940
we're gonna move on now we're gonna move

308
00:12:07,940 --> 00:12:11,770
on to question on that Jim you've got

309
00:12:11,770 --> 00:12:14,090
you've got you've got these CDs he's

310
00:12:14,090 --> 00:12:15,830
very perimeter ization but what's the

311
00:12:15,830 --> 00:12:17,810
difference between query parameter

312
00:12:17,810 --> 00:12:19,550
ization and prepare statements for

313
00:12:19,550 --> 00:12:21,800
instance because if you ask people in

314
00:12:21,800 --> 00:12:23,300
the Java world they will say yeah well

315
00:12:23,300 --> 00:12:25,610
the the the thing to do is prepared

316
00:12:25,610 --> 00:12:27,350
statements can you explain me the

317
00:12:27,350 --> 00:12:29,480
difference to that prepared statements

318
00:12:29,480 --> 00:12:31,450
is a form of query parameter ization

319
00:12:31,450 --> 00:12:33,650
that's what I'm saying so I'm gonna use

320
00:12:33,650 --> 00:12:35,660
a prepared statement you're building

321
00:12:35,660 --> 00:12:38,000
your query with a static string instead

322
00:12:38,000 --> 00:12:40,490
of using a dynamic string assembly where

323
00:12:40,490 --> 00:12:43,460
you're adding variables into your SQL to

324
00:12:43,460 --> 00:12:46,040
string concatenation you want to you

325
00:12:46,040 --> 00:12:48,230
build a static string to define your

326
00:12:48,230 --> 00:12:51,430
query and in Java use question marks for

327
00:12:51,430 --> 00:12:54,050
placeholders within that static string

328
00:12:54,050 --> 00:12:56,570
that is your query and then you set

329
00:12:56,570 --> 00:12:59,240
string set int and other set statements

330
00:12:59,240 --> 00:13:02,510
to attach certain data to those question

331
00:13:02,510 --> 00:13:04,280
mark placeholders in a static query

332
00:13:04,280 --> 00:13:05,990
there's a technique called query

333
00:13:05,990 --> 00:13:08,330
parameter ization in Java you use the

334
00:13:08,330 --> 00:13:10,880
preparedstatement class to accomplish

335
00:13:10,880 --> 00:13:12,750
query parameterization by

336
00:13:12,750 --> 00:13:15,120
never using string assembly to assemble

337
00:13:15,120 --> 00:13:17,400
your query but by using this this

338
00:13:17,400 --> 00:13:19,950
binding of variables into your query for

339
00:13:19,950 --> 00:13:21,780
you have placeholders that represent

340
00:13:21,780 --> 00:13:24,240
those those individual parameters yeah

341
00:13:24,240 --> 00:13:27,450
and so that's what we're talking about

342
00:13:27,450 --> 00:13:29,940
and this this technique query parameter

343
00:13:29,940 --> 00:13:31,530
ization exists in most programming

344
00:13:31,530 --> 00:13:33,450
languages in Java is to

345
00:13:33,450 --> 00:13:34,800
preparedstatement class and when you're

346
00:13:34,800 --> 00:13:36,840
doing hibernate queries if using the

347
00:13:36,840 --> 00:13:38,130
hibernate object relational mapping

348
00:13:38,130 --> 00:13:41,040
engine you would use a different place

349
00:13:41,040 --> 00:13:43,200
holder you use like call a colon

350
00:13:43,200 --> 00:13:45,300
variable name as your place holder and

351
00:13:45,300 --> 00:13:48,120
use the same binding steps go look at

352
00:13:48,120 --> 00:13:51,720
Bobby - tables comm and you'll see an

353
00:13:51,720 --> 00:13:53,460
example of what I mean by query

354
00:13:53,460 --> 00:13:55,110
parameterization and every major

355
00:13:55,110 --> 00:13:58,620
language one of those being Java which

356
00:13:58,620 --> 00:14:00,720
is the preparedstatement class which is

357
00:14:00,720 --> 00:14:03,120
one way to accomplish for your parameter

358
00:14:03,120 --> 00:14:05,420
is a ssin alright

359
00:14:05,420 --> 00:14:08,340
cool but how about no no sequel a

360
00:14:08,340 --> 00:14:10,950
database is nowadays I mean people using

361
00:14:10,950 --> 00:14:13,200
more and more no sequel databases is a

362
00:14:13,200 --> 00:14:15,540
simple objection still valid that's a

363
00:14:15,540 --> 00:14:17,490
really good question so you know what

364
00:14:17,490 --> 00:14:18,960
kind of feature a lot of these know

365
00:14:18,960 --> 00:14:20,910
sequel databases have anat and recent

366
00:14:20,910 --> 00:14:24,690
years Brian that B sequel thank you very

367
00:14:24,690 --> 00:14:27,690
much but I'm from and it's true so

368
00:14:27,690 --> 00:14:30,960
there's I also a common interface into

369
00:14:30,960 --> 00:14:33,650
no sequel a duper type databases is

370
00:14:33,650 --> 00:14:36,060
hibernate it's object relational mapping

371
00:14:36,060 --> 00:14:37,830
engine so I'm just doing object calls to

372
00:14:37,830 --> 00:14:39,690
retrieve data but it's from you know

373
00:14:39,690 --> 00:14:42,660
from an object store from a from a no

374
00:14:42,660 --> 00:14:45,089
sequel type database and I can either

375
00:14:45,089 --> 00:14:48,260
use function calls off like the off the

376
00:14:48,260 --> 00:14:51,030
criteria you build my criteria through

377
00:14:51,030 --> 00:14:53,010
programmatic clause which is secure by

378
00:14:53,010 --> 00:14:55,920
default I believe and or I can write in

379
00:14:55,920 --> 00:14:59,160
by hand I can write hql which is very

380
00:14:59,160 --> 00:15:01,589
similar to SQL but it's an object query

381
00:15:01,589 --> 00:15:04,620
language and depending how I how here we

382
00:15:04,620 --> 00:15:07,560
go Brian depending how I build that hql

383
00:15:07,560 --> 00:15:10,620
I might have object query or hibernate

384
00:15:10,620 --> 00:15:12,630
query injection same a sequel injection

385
00:15:12,630 --> 00:15:14,870
and to stop this I want to do

386
00:15:14,870 --> 00:15:19,200
parameterize queries as I assemble hql

387
00:15:19,200 --> 00:15:21,660
queries by hand in my application thank

388
00:15:21,660 --> 00:15:22,490
you very much

389
00:15:22,490 --> 00:15:25,670
thank you Jim all right

390
00:15:25,670 --> 00:15:28,730
all right continue go on we've lost the

391
00:15:28,730 --> 00:15:31,120
fourth guy he's he's very mysterious

392
00:15:31,120 --> 00:15:33,620
fourth guy's mysterious I'm just saying

393
00:15:33,620 --> 00:15:36,110
it's okay he's well I think he he's just

394
00:15:36,110 --> 00:15:38,810
afraid he's not he's now working through

395
00:15:38,810 --> 00:15:41,360
his his applications and working through

396
00:15:41,360 --> 00:15:43,970
his teague injections and making sure

397
00:15:43,970 --> 00:15:46,790
they all he used prior statements and a

398
00:15:46,790 --> 00:15:49,670
premature ization to to make it make it

399
00:15:49,670 --> 00:15:50,899
safe because we're all trying to hack

400
00:15:50,899 --> 00:15:51,320
him now

401
00:15:51,320 --> 00:15:54,589
I guess Brian one of my friends is very

402
00:15:54,589 --> 00:15:56,870
upset that I stole their lighter from

403
00:15:56,870 --> 00:15:58,850
them you know I was over at their house

404
00:15:58,850 --> 00:16:00,829
I accidentally pocketed their lighter I

405
00:16:00,829 --> 00:16:03,050
just happened it was an accident but I

406
00:16:03,050 --> 00:16:04,910
just want us I sort of say this is that

407
00:16:04,910 --> 00:16:06,740
lighter and it's live on the podcast

408
00:16:06,740 --> 00:16:09,380
with me so it's a head of friend so it's

409
00:16:09,380 --> 00:16:12,350
live on the podcast and real quick Brian

410
00:16:12,350 --> 00:16:15,680
real quick Brian we're almost we're

411
00:16:15,680 --> 00:16:18,200
almost getting back whoa whoa everybody

412
00:16:18,200 --> 00:16:20,060
hang on here we're gonna get back to C

413
00:16:20,060 --> 00:16:23,600
for the Olas practive control hello

414
00:16:23,600 --> 00:16:25,279
everybody we're live with my friends

415
00:16:25,279 --> 00:16:27,950
later boom okay let's get back to work

416
00:16:27,950 --> 00:16:30,980
here so when we talk about escaping data

417
00:16:30,980 --> 00:16:34,310
we're trying to convert data that's

418
00:16:34,310 --> 00:16:36,079
potentially dangerous this is usually

419
00:16:36,079 --> 00:16:38,899
untrusted data data that came from an

420
00:16:38,899 --> 00:16:41,120
attacker data that a user entered in

421
00:16:41,120 --> 00:16:43,760
data from a cookie data that a potential

422
00:16:43,760 --> 00:16:46,279
threat agent can edit and modify to

423
00:16:46,279 --> 00:16:48,529
attempt to attack your application when

424
00:16:48,529 --> 00:16:51,740
this data like a chat message I'm doing

425
00:16:51,740 --> 00:16:54,500
or a post to social media lands and

426
00:16:54,500 --> 00:16:56,930
somebody else's browser we have to treat

427
00:16:56,930 --> 00:16:59,420
that data with care as an attacker I can

428
00:16:59,420 --> 00:17:01,910
add JavaScript to that data that I

429
00:17:01,910 --> 00:17:04,069
submit to your website that another user

430
00:17:04,069 --> 00:17:06,020
looks at and that JavaScript executes

431
00:17:06,020 --> 00:17:07,939
syn their browser I can do all kinds of

432
00:17:07,939 --> 00:17:09,470
harmful things called cross-site

433
00:17:09,470 --> 00:17:11,929
scripting so what if one of the controls

434
00:17:11,929 --> 00:17:13,669
we need to stop cross-site scripting is

435
00:17:13,669 --> 00:17:17,359
to escape or encode data so if I have a

436
00:17:17,359 --> 00:17:19,910
less than symbol that's potential code

437
00:17:19,910 --> 00:17:22,490
that starts a tag so what I want to drop

438
00:17:22,490 --> 00:17:24,890
at that same character that dangerous

439
00:17:24,890 --> 00:17:27,380
character a less than symbol yeah yeah

440
00:17:27,380 --> 00:17:31,400
that's good a less than symbol it could

441
00:17:31,400 --> 00:17:33,740
be a beginning of a tag the browser tree

442
00:17:33,740 --> 00:17:36,020
to this code that code executes through

443
00:17:36,020 --> 00:17:38,300
my input that's a potential danger so I

444
00:17:38,300 --> 00:17:39,320
want to see any

445
00:17:39,320 --> 00:17:42,259
input or any frankly any data that they

446
00:17:42,259 --> 00:17:44,240
add to a user interface on the web I

447
00:17:44,240 --> 00:17:46,820
want to escape that data to make sure

448
00:17:46,820 --> 00:17:49,190
it's neutralized and convert it from a

449
00:17:49,190 --> 00:17:51,740
form that will execute to a form that

450
00:17:51,740 --> 00:17:53,750
will just be displayed on the web page

451
00:17:53,750 --> 00:17:55,789
for example if I put a less than symbol

452
00:17:55,789 --> 00:17:58,220
it's code but if I can escape it it

453
00:17:58,220 --> 00:18:01,429
becomes ampersand LT semicolon that's

454
00:18:01,429 --> 00:18:03,679
the HTML entity for the less than symbol

455
00:18:03,679 --> 00:18:05,690
which will cause the character to be

456
00:18:05,690 --> 00:18:08,809
displayed on the screen while not

457
00:18:08,809 --> 00:18:10,580
treating that character as code that

458
00:18:10,580 --> 00:18:12,799
starts an HTML tag and you're gonna

459
00:18:12,799 --> 00:18:14,570
apply this escaping in many different

460
00:18:14,570 --> 00:18:16,370
forms there's like if you're putting

461
00:18:16,370 --> 00:18:18,320
data in a block of JavaScript you would

462
00:18:18,320 --> 00:18:20,120
do JavaScript hexxus caping if you're

463
00:18:20,120 --> 00:18:21,830
putting a chunk of data in a block of

464
00:18:21,830 --> 00:18:25,340
style you it is a CSS hex escaping if

465
00:18:25,340 --> 00:18:27,019
you're putting data in the middle URL

466
00:18:27,019 --> 00:18:29,179
you would do URL escaping and if you

467
00:18:29,179 --> 00:18:30,950
didn't put that URL in an attribute you

468
00:18:30,950 --> 00:18:32,779
would then attribute escape the URL so

469
00:18:32,779 --> 00:18:35,029
every time we drop data in a web and a

470
00:18:35,029 --> 00:18:37,789
web browser and a web user interface

471
00:18:37,789 --> 00:18:40,460
chunk of code we want to escape that

472
00:18:40,460 --> 00:18:43,909
data as well as other controls escaping

473
00:18:43,909 --> 00:18:47,330
also shows up as a control when you're

474
00:18:47,330 --> 00:18:49,190
building operating system commands in a

475
00:18:49,190 --> 00:18:51,049
web app or any any kind of part if

476
00:18:51,049 --> 00:18:52,759
you're building an LDAP query there's

477
00:18:52,759 --> 00:18:55,039
like LDAP distinguished name escaping as

478
00:18:55,039 --> 00:18:56,750
one of the escaping formats so in

479
00:18:56,750 --> 00:18:59,059
general one of the controls to stop

480
00:18:59,059 --> 00:19:01,370
injection class attacks like I'm just

481
00:19:01,370 --> 00:19:02,990
describing is going to be escaping or

482
00:19:02,990 --> 00:19:05,480
encoding this is one of the top Pinchuk

483
00:19:05,480 --> 00:19:08,480
top core controls a secure developer

484
00:19:08,480 --> 00:19:10,730
needs to master that's the fourth of the

485
00:19:10,730 --> 00:19:14,629
OAuth proactive controls a right are we

486
00:19:14,629 --> 00:19:17,029
doing let's do this again let's do this

487
00:19:17,029 --> 00:19:18,590
again so let's go five let's get right I

488
00:19:18,590 --> 00:19:20,389
know it works or kind of chitchat and

489
00:19:20,389 --> 00:19:22,429
let's go to five is your question go

490
00:19:22,429 --> 00:19:25,399
question if you got it Mike if I have

491
00:19:25,399 --> 00:19:28,129
questions I will come to you Jim but but

492
00:19:28,129 --> 00:19:29,840
you used to basically say that every

493
00:19:29,840 --> 00:19:32,600
every kind of what is a mess I'm sorry

494
00:19:32,600 --> 00:19:35,690
I'm sorry I'm um no more nerds no you

495
00:19:35,690 --> 00:19:39,799
might be there but you say actually

496
00:19:39,799 --> 00:19:41,840
every every piece of data that comes

497
00:19:41,840 --> 00:19:44,929
into your system you have to escape how

498
00:19:44,929 --> 00:19:48,139
about data that you reach me from your

499
00:19:48,139 --> 00:19:50,330
database should you escape it or should

500
00:19:50,330 --> 00:19:52,870
you not I

501
00:19:53,840 --> 00:19:56,900
Hey all right private let's let's let's

502
00:19:56,900 --> 00:19:59,919
go deep let's go deep shall we

503
00:19:59,919 --> 00:20:04,039
of course Brian so Brian's asking the

504
00:20:04,039 --> 00:20:06,110
question if I pulled data from the

505
00:20:06,110 --> 00:20:09,260
database that might be not necessarily

506
00:20:09,260 --> 00:20:11,480
be data that the attacker can taint

507
00:20:11,480 --> 00:20:15,799
right it's not necessarily data that

508
00:20:15,799 --> 00:20:19,610
that the attacker contains right do we

509
00:20:19,610 --> 00:20:22,070
escape it Brian what do you think the

510
00:20:22,070 --> 00:20:24,020
secure developer would do with a secure

511
00:20:24,020 --> 00:20:26,720
developer look at a variable and do

512
00:20:26,720 --> 00:20:28,850
taint tracking to see if it's dangerous

513
00:20:28,850 --> 00:20:31,039
or not and then decide to protect it or

514
00:20:31,039 --> 00:20:33,710
Brian with the secure developer build a

515
00:20:33,710 --> 00:20:36,230
user interface so every single effing

516
00:20:36,230 --> 00:20:37,880
variable that you put in that user

517
00:20:37,880 --> 00:20:40,610
interface is protected in some way so no

518
00:20:40,610 --> 00:20:42,740
matter what both shine is given to you

519
00:20:42,740 --> 00:20:45,289
by the other parts of the application as

520
00:20:45,289 --> 00:20:47,570
that data is fed into your user

521
00:20:47,570 --> 00:20:50,330
interface its protected in some way

522
00:20:50,330 --> 00:20:52,070
through escaping or sanitization or

523
00:20:52,070 --> 00:20:54,289
whatnot so your user interface oh it's

524
00:20:54,289 --> 00:20:56,270
like rock-solid secure which one do you

525
00:20:56,270 --> 00:20:59,230
think the secure developer does Brian um

526
00:20:59,230 --> 00:21:02,740
I would say escape everything that

527
00:21:02,740 --> 00:21:05,960
escape or sanitize like if it's 10ml

528
00:21:05,960 --> 00:21:08,029
yeah okay yeah if it's a chunk of HTML

529
00:21:08,029 --> 00:21:10,429
that was authored by the user you can't

530
00:21:10,429 --> 00:21:12,260
escape anymore so you want to sanitize

531
00:21:12,260 --> 00:21:15,279
it using something like Dom purify but

532
00:21:15,279 --> 00:21:18,649
don't don't look back to see if that

533
00:21:18,649 --> 00:21:20,870
variables dangerous just protect

534
00:21:20,870 --> 00:21:22,370
everything and that's what most

535
00:21:22,370 --> 00:21:24,380
automatic escaping frameworks do do

536
00:21:24,380 --> 00:21:26,210
anyways Brian can we move on now to

537
00:21:26,210 --> 00:21:28,940
leave any more questions now you can

538
00:21:28,940 --> 00:21:33,980
move on okay let's do this so I'm gonna

539
00:21:33,980 --> 00:21:36,080
talk about input validation X let's look

540
00:21:36,080 --> 00:21:41,330
at validate our inputs you know just as

541
00:21:41,330 --> 00:21:41,890
a big

542
00:21:41,890 --> 00:21:44,770
hygiene software every variable flowing

543
00:21:44,770 --> 00:21:47,080
into an application should be validated

544
00:21:47,080 --> 00:21:49,030
in some way like if it's a username

545
00:21:49,030 --> 00:21:51,100
maybe I have a rule that says anywhere

546
00:21:51,100 --> 00:21:53,620
from five to twelve characters that must

547
00:21:53,620 --> 00:21:55,330
be lowercase letters and numbers only

548
00:21:55,330 --> 00:21:57,100
whatever that's a rule that's an input

549
00:21:57,100 --> 00:21:59,860
validation rule that defines the quality

550
00:21:59,860 --> 00:22:01,630
of a piece of input we can use a regular

551
00:22:01,630 --> 00:22:03,790
expression or other artifact to apply

552
00:22:03,790 --> 00:22:05,770
that rule in software and we should do

553
00:22:05,770 --> 00:22:07,630
this to every single variable as things

554
00:22:07,630 --> 00:22:09,130
get tougher like you're doing

555
00:22:09,130 --> 00:22:10,420
internationalization and you're

556
00:22:10,420 --> 00:22:11,980
supporting a broader character set I

557
00:22:11,980 --> 00:22:13,870
tend to punt and just use for regular

558
00:22:13,870 --> 00:22:16,390
expression any printable character so

559
00:22:16,390 --> 00:22:18,970
it's not the greatest validation but as

560
00:22:18,970 --> 00:22:21,610
software gets more complex validation in

561
00:22:21,610 --> 00:22:23,260
my world tends to get weaker over time

562
00:22:23,260 --> 00:22:25,540
as the implicants more complex like

563
00:22:25,540 --> 00:22:29,260
internationalization so what we what I

564
00:22:29,260 --> 00:22:31,090
recommend is at the very least every

565
00:22:31,090 --> 00:22:32,350
single variable should be limit to

566
00:22:32,350 --> 00:22:33,910
printable printable characters and

567
00:22:33,910 --> 00:22:35,410
should have a size limit you've never

568
00:22:35,410 --> 00:22:36,850
won they never want to allow unlimited

569
00:22:36,850 --> 00:22:38,800
input size that's usually a

570
00:22:38,800 --> 00:22:40,900
denial-of-service vector so that's what

571
00:22:40,900 --> 00:22:42,580
I mean by input validation basic hygiene

572
00:22:42,580 --> 00:22:46,690
we mean that every single possible piece

573
00:22:46,690 --> 00:22:49,150
of data entering your software goes to a

574
00:22:49,150 --> 00:22:51,550
layer that helps define what good

575
00:22:51,550 --> 00:22:53,800
software is and rejects everything else

576
00:22:53,800 --> 00:22:55,960
that's basic validation but like we were

577
00:22:55,960 --> 00:22:58,570
talking before Brian suppose the user is

578
00:22:58,570 --> 00:23:01,000
authoring HTML out of a WYSIWYG editor

579
00:23:01,000 --> 00:23:03,190
and some user is sending me a chunk of

580
00:23:03,190 --> 00:23:05,530
HTML that I'm adding to like their user

581
00:23:05,530 --> 00:23:08,800
profile or something Brian that's that I

582
00:23:08,800 --> 00:23:10,660
can't just use a regular expression for

583
00:23:10,660 --> 00:23:13,720
that I need a specialized HTML sanitizer

584
00:23:13,720 --> 00:23:17,610
server side and probably client-side to

585
00:23:17,610 --> 00:23:20,380
verify in some way and clean up that

586
00:23:20,380 --> 00:23:23,080
chunk of HTML authored by a user to make

587
00:23:23,080 --> 00:23:24,400
sure it doesn't contain any evil

588
00:23:24,400 --> 00:23:26,440
JavaScript or suppose someone's

589
00:23:26,440 --> 00:23:29,620
uploading a file Brian if someone's

590
00:23:29,620 --> 00:23:31,300
trying to upload a file I want to do

591
00:23:31,300 --> 00:23:33,970
like image rewriting to verify the image

592
00:23:33,970 --> 00:23:36,400
is secure in some kind of sandbox on the

593
00:23:36,400 --> 00:23:38,590
on my server I want to verify the size

594
00:23:38,590 --> 00:23:41,050
of data coming in and one of their I

595
00:23:41,050 --> 00:23:43,720
want to treat the file name from

596
00:23:43,720 --> 00:23:46,060
uploaded files as dangerous and use some

597
00:23:46,060 --> 00:23:49,090
kind of lookup map to obscure the actual

598
00:23:49,090 --> 00:23:51,400
name and the file path that was uploaded

599
00:23:51,400 --> 00:23:54,220
people can put malicious you know path

600
00:23:54,220 --> 00:23:55,700
injection another attacks in

601
00:23:55,700 --> 00:23:57,769
that to mess with how I saved that file

602
00:23:57,769 --> 00:24:00,230
so I'm just trying to prove I'm just

603
00:24:00,230 --> 00:24:02,090
trying to get get a hold of the idea

604
00:24:02,090 --> 00:24:04,460
that we want to do input validation on

605
00:24:04,460 --> 00:24:06,889
all input some input simple regular

606
00:24:06,889 --> 00:24:09,019
expression strings like to find good

607
00:24:09,019 --> 00:24:11,690
data that's easy to do some kind of

608
00:24:11,690 --> 00:24:13,970
validation specialized like file or HTML

609
00:24:13,970 --> 00:24:16,250
upload we have to use specialized tools

610
00:24:16,250 --> 00:24:18,169
for that and I want to and here's the

611
00:24:18,169 --> 00:24:20,779
most important thing even valid data can

612
00:24:20,779 --> 00:24:22,730
cause injection remember what I was

613
00:24:22,730 --> 00:24:25,330
talking about escaping and query

614
00:24:25,330 --> 00:24:27,169
parameterization as a way to stop

615
00:24:27,169 --> 00:24:29,779
injection attacks well the other side of

616
00:24:29,779 --> 00:24:32,750
that rule is don't rely on validation to

617
00:24:32,750 --> 00:24:35,179
save you from injection so what I mean

618
00:24:35,179 --> 00:24:39,799
by that is that I can have a query into

619
00:24:39,799 --> 00:24:41,929
an email address that email address

620
00:24:41,929 --> 00:24:45,200
might be a valid legal good email

621
00:24:45,200 --> 00:24:47,659
address but it could be dangerous to add

622
00:24:47,659 --> 00:24:50,029
to SQL like one of my malicious email

623
00:24:50,029 --> 00:24:53,299
addresses is Jim single quote or single

624
00:24:53,299 --> 00:24:55,639
quote one single quote does not equal

625
00:24:55,639 --> 00:24:58,309
single quote atmanah code comm that's a

626
00:24:58,309 --> 00:25:01,760
little snippet of SQL at Monaco comm and

627
00:25:01,760 --> 00:25:03,799
if you add that to the middle of a query

628
00:25:03,799 --> 00:25:07,010
it will will put a universal truth into

629
00:25:07,010 --> 00:25:08,840
it cause the where Clause criteria to

630
00:25:08,840 --> 00:25:11,179
drop as part of single injection alright

631
00:25:11,179 --> 00:25:12,950
that's a lot of validation for one day

632
00:25:12,950 --> 00:25:17,000
with ya you have a few of them the first

633
00:25:17,000 --> 00:25:22,130
of the questions is do you have any good

634
00:25:22,130 --> 00:25:24,409
libraries to do sanitation or an

635
00:25:24,409 --> 00:25:30,649
escaping and somebody called SRP or

636
00:25:30,649 --> 00:25:32,539
something over here that was recommended

637
00:25:32,539 --> 00:25:35,029
by a bio us peer do to do input

638
00:25:35,029 --> 00:25:36,649
validation it's it's still quite active

639
00:25:36,649 --> 00:25:38,389
is the question over here so do you

640
00:25:38,389 --> 00:25:41,260
generally do you have some tips for for

641
00:25:41,260 --> 00:25:43,929
libraries for sanitation and it's KB

642
00:25:43,929 --> 00:25:46,370
sappy is not getting maintained as well

643
00:25:46,370 --> 00:25:48,080
as I like if you're I think it's okay if

644
00:25:48,080 --> 00:25:49,909
you're using it for a legacy purpose I

645
00:25:49,909 --> 00:25:51,320
wouldn't start a new project with it if

646
00:25:51,320 --> 00:25:53,870
you wanted to escaping in Java I grabbed

647
00:25:53,870 --> 00:25:57,470
the OWASP Java encoder project written

648
00:25:57,470 --> 00:25:59,419
by dr. Jeff I can now see for

649
00:25:59,419 --> 00:26:01,760
server-side HTML sanitization I'd

650
00:26:01,760 --> 00:26:04,639
recommend the OWASP HTML sanitizer

651
00:26:04,639 --> 00:26:06,289
written by Michael Samuelle one of the

652
00:26:06,289 --> 00:26:09,260
Google security engineers for

653
00:26:09,260 --> 00:26:12,140
javascript-based HTML sanitization I'd

654
00:26:12,140 --> 00:26:14,840
recommend Dom purify ritmo written by

655
00:26:14,840 --> 00:26:16,700
the cure 53 team Mario Heinrich of

656
00:26:16,700 --> 00:26:21,140
really high-end XSS researcher for input

657
00:26:21,140 --> 00:26:23,150
validation I wouldn't use the stand I

658
00:26:23,150 --> 00:26:25,640
wouldn't use a separate library for

659
00:26:25,640 --> 00:26:26,990
input validation I would use your

660
00:26:26,990 --> 00:26:28,760
frameworks validation just make sure

661
00:26:28,760 --> 00:26:31,010
you're configuring every endpoint with

662
00:26:31,010 --> 00:26:32,360
some kind of regular expression or

663
00:26:32,360 --> 00:26:35,780
sanitizer whoo-hoo so those are there's

664
00:26:35,780 --> 00:26:37,150
your answer to those questions Brian

665
00:26:37,150 --> 00:26:39,650
awesome awesome I think that answers the

666
00:26:39,650 --> 00:26:41,630
question there there that are asked here

667
00:26:41,630 --> 00:26:43,760
in the channel so I would say please

668
00:26:43,760 --> 00:26:47,390
continue Jim let's go look at c6

669
00:26:47,390 --> 00:26:50,450
implement digital identity so this is a

670
00:26:50,450 --> 00:26:53,000
broad topic notice we went from some of

671
00:26:53,000 --> 00:26:55,130
these OS top 10 proactive controls which

672
00:26:55,130 --> 00:26:57,380
were real specific to some that we can

673
00:26:57,380 --> 00:26:59,150
spend a week talking about digital

674
00:26:59,150 --> 00:27:01,670
identity this is a broad topic so think

675
00:27:01,670 --> 00:27:04,100
of any kind of authentication session

676
00:27:04,100 --> 00:27:07,880
management identity proofing Federation

677
00:27:07,880 --> 00:27:12,290
and Wow just Federation sam'l or already

678
00:27:12,290 --> 00:27:14,210
connect we could spend a week or a month

679
00:27:14,210 --> 00:27:16,490
talking about that or more so I just

680
00:27:16,490 --> 00:27:18,410
want to get so but this is a core part

681
00:27:18,410 --> 00:27:21,140
of the developers world now rather than

682
00:27:21,140 --> 00:27:22,880
having to build this from scratch most

683
00:27:22,880 --> 00:27:24,500
developers are gonna have to integrate

684
00:27:24,500 --> 00:27:27,140
and verify that their code goes through

685
00:27:27,140 --> 00:27:29,690
a proper digital identity layer make

686
00:27:29,690 --> 00:27:31,490
sure the user's identity is established

687
00:27:31,490 --> 00:27:33,530
so I'm gonna go through this fast to go

688
00:27:33,530 --> 00:27:34,970
to another control I'm gonna give you a

689
00:27:34,970 --> 00:27:36,800
homework I know you're like you're just

690
00:27:36,800 --> 00:27:39,650
jumping into a podcast I'm gonna sit

691
00:27:39,650 --> 00:27:41,510
back and casually listen but all of a

692
00:27:41,510 --> 00:27:43,700
sudden I'm giving you homework yes this

693
00:27:43,700 --> 00:27:48,770
is miss publication 863 B this is

694
00:27:48,770 --> 00:27:52,220
revision 3 of the digital identity

695
00:27:52,220 --> 00:27:54,560
guidelines specifically how to make

696
00:27:54,560 --> 00:27:57,080
decisions around authentication and how

697
00:27:57,080 --> 00:27:59,000
to define passwords in the modern era

698
00:27:59,000 --> 00:28:01,820
which really dispels a lot of the

699
00:28:01,820 --> 00:28:03,590
assumptions that we've had in the past

700
00:28:03,590 --> 00:28:06,530
like in the past we would do things like

701
00:28:06,530 --> 00:28:08,300
for a password oh it must be uppercase

702
00:28:08,300 --> 00:28:10,490
lowercase numbers special character that

703
00:28:10,490 --> 00:28:13,130
does not address real risk when it comes

704
00:28:13,130 --> 00:28:15,650
to password theft and credential

705
00:28:15,650 --> 00:28:18,860
stuffing and brute-force attacks we need

706
00:28:18,860 --> 00:28:20,570
to think a little bit different so go

707
00:28:20,570 --> 00:28:23,340
read miss

708
00:28:23,340 --> 00:28:27,870
863 be brine say it with me ready Brian

709
00:28:27,870 --> 00:28:31,600
863 be miss special publication on

710
00:28:31,600 --> 00:28:33,640
digital media identity this is going to

711
00:28:33,640 --> 00:28:35,980
change a lot of everyone's assumptions

712
00:28:35,980 --> 00:28:37,480
around identity and identity management

713
00:28:37,480 --> 00:28:40,210
and password storage all that I'll give

714
00:28:40,210 --> 00:28:42,400
you one one quick little dip into tech

715
00:28:42,400 --> 00:28:44,140
four we go there next oh I stopped in

716
00:28:44,140 --> 00:28:46,270
Prak and control when you're when you

717
00:28:46,270 --> 00:28:48,490
want to store password consider the

718
00:28:48,490 --> 00:28:53,220
algorithm bcrypt s crypt and argon - i

719
00:28:53,220 --> 00:28:56,260
bcrypt adds a time cost to slow it down

720
00:28:56,260 --> 00:28:58,690
s script also adds a memory cost to

721
00:28:58,690 --> 00:29:00,909
force it to use memory on your server to

722
00:29:00,909 --> 00:29:03,250
slow down certain kinds of attacks argon

723
00:29:03,250 --> 00:29:05,980
- I also adds a parallelism degree to

724
00:29:05,980 --> 00:29:07,960
only let one-third of execution mess

725
00:29:07,960 --> 00:29:09,669
with your password story - algorithm so

726
00:29:09,669 --> 00:29:12,760
again decrypt s crypt argon

727
00:29:12,760 --> 00:29:15,669
- I those are the algorithms you should

728
00:29:15,669 --> 00:29:17,380
be used for password storage and now

729
00:29:17,380 --> 00:29:18,880
we're going as a seven category if

730
00:29:18,880 --> 00:29:20,559
you're just joining us it's the OS

731
00:29:20,559 --> 00:29:23,230
proactive control we're here with Brian

732
00:29:23,230 --> 00:29:25,299
we're here with Sam we're hanging out

733
00:29:25,299 --> 00:29:27,100
with sneaked here and we're talking

734
00:29:27,100 --> 00:29:30,280
about the top 10 controls every software

735
00:29:30,280 --> 00:29:33,460
needs to master in some way - to build

736
00:29:33,460 --> 00:29:35,590
secure software we're on the seventh of

737
00:29:35,590 --> 00:29:38,020
that list we're we're nearing the end

738
00:29:38,020 --> 00:29:39,970
we've the mountaintop is in sight the

739
00:29:39,970 --> 00:29:41,020
under end of this list

740
00:29:41,020 --> 00:29:44,200
so there are some quizzes but that's

741
00:29:44,200 --> 00:29:46,960
what you there question bring on the

742
00:29:46,960 --> 00:29:48,159
bring on the questions that we're going

743
00:29:48,159 --> 00:29:50,049
back we're going back to see category

744
00:29:50,049 --> 00:29:52,150
six everybody yeah what are you saying

745
00:29:52,150 --> 00:29:54,010
Brian sorry sorry I keep threatened Ryan

746
00:29:54,010 --> 00:29:55,480
with the big machete that's not right

747
00:29:55,480 --> 00:29:58,210
kids and kids don't do this at home

748
00:29:58,210 --> 00:30:00,880
don't pull knives on your podcast host

749
00:30:00,880 --> 00:30:03,490
I'm a bad person don't do it I smile let

750
00:30:03,490 --> 00:30:04,929
you all know that but Brian I have a

751
00:30:04,929 --> 00:30:06,669
special relationship he doesn't mind he

752
00:30:06,669 --> 00:30:07,809
likes it hi Brian

753
00:30:07,809 --> 00:30:10,780
hi no there's a question over here that

754
00:30:10,780 --> 00:30:12,340
what are your thoughts on password

755
00:30:12,340 --> 00:30:14,679
expiration what do you think about that

756
00:30:14,679 --> 00:30:18,070
and how long should it be according to

757
00:30:18,070 --> 00:30:22,780
NIST 863 B say it with me Brian

758
00:30:22,780 --> 00:30:28,120
NIST 863 B go ahead nixed it missed 863

759
00:30:28,120 --> 00:30:30,909
be excellent I want you all to read that

760
00:30:30,909 --> 00:30:32,860
that's your homework where Brian where

761
00:30:32,860 --> 00:30:35,200
were we we were talking about password

762
00:30:35,200 --> 00:30:37,779
raishin this this new standard we're

763
00:30:37,779 --> 00:30:40,570
just citing says stop expiring passwords

764
00:30:40,570 --> 00:30:43,389
it actually encourages bad behavior

765
00:30:43,389 --> 00:30:45,429
you should only expire passwords that

766
00:30:45,429 --> 00:30:46,990
there's a need to like you've had a

767
00:30:46,990 --> 00:30:48,549
breach you're going to a major

768
00:30:48,549 --> 00:30:51,760
technology change there's got to be or E

769
00:30:51,760 --> 00:30:54,460
or you realize your policy was doing a

770
00:30:54,460 --> 00:30:56,860
terrible job at the activating older

771
00:30:56,860 --> 00:30:58,720
user accounts during a security audit

772
00:30:58,720 --> 00:31:01,450
give me a reason Brian and then let's

773
00:31:01,450 --> 00:31:03,760
reset our passwords every three months

774
00:31:03,760 --> 00:31:08,010
is not a good reason according to nist

775
00:31:08,010 --> 00:31:12,510
brian is not with me yeah 800 MIT nist

776
00:31:12,510 --> 00:31:17,049
863 b let's go to our next control any

777
00:31:17,049 --> 00:31:19,600
more questions any more questions no no

778
00:31:19,600 --> 00:31:21,250
so what's going

779
00:31:21,250 --> 00:31:22,990
let's go access control let's go access

780
00:31:22,990 --> 00:31:25,659
control you know access could boy that

781
00:31:25,659 --> 00:31:27,070
escalated quickly

782
00:31:27,070 --> 00:31:31,929
so this is a hard topic i can talk about

783
00:31:31,929 --> 00:31:33,700
access control for a long time because

784
00:31:33,700 --> 00:31:37,090
access control is a design heavy topic

785
00:31:37,090 --> 00:31:40,840
and it's gonna exist at multiple layers

786
00:31:40,840 --> 00:31:42,850
throughout your application and

787
00:31:42,850 --> 00:31:44,679
different layers may require different

788
00:31:44,679 --> 00:31:48,309
designs like at the web service level

789
00:31:48,309 --> 00:31:50,049
you may have really crude role-based

790
00:31:50,049 --> 00:31:52,450
access control to see who gets to even

791
00:31:52,450 --> 00:31:55,690
hit what api that's defined by your rest

792
00:31:55,690 --> 00:31:57,760
verbs or something similar whatever and

793
00:31:57,760 --> 00:31:59,980
then deeper in your application you may

794
00:31:59,980 --> 00:32:01,600
have extremely fine-grained access

795
00:32:01,600 --> 00:32:04,330
control to define which user can see

796
00:32:04,330 --> 00:32:07,480
what data or maybe you limit data access

797
00:32:07,480 --> 00:32:09,159
only if you're the owner of that data

798
00:32:09,159 --> 00:32:10,289
whatever

799
00:32:10,289 --> 00:32:14,049
so access control is more complex if at

800
00:32:14,049 --> 00:32:15,720
Brian what I'm trying to say Brian if

801
00:32:15,720 --> 00:32:19,570
access control was a relationship status

802
00:32:19,570 --> 00:32:22,529
on facebook what would it be Brian

803
00:32:22,529 --> 00:32:29,559
complicated it's complicated oh one of

804
00:32:29,559 --> 00:32:32,289
the aspects of access control is your

805
00:32:32,289 --> 00:32:34,179
enforcement point I think that's called

806
00:32:34,179 --> 00:32:37,500
a pit policy enforcement point

807
00:32:37,500 --> 00:32:39,250
enforcement's actually spell with the e

808
00:32:39,250 --> 00:32:41,940
so I'd be pet

809
00:32:41,940 --> 00:32:44,860
policy enforcement point it's the area

810
00:32:44,860 --> 00:32:46,539
in your code where you're putting in an

811
00:32:46,539 --> 00:32:49,059
action control check then you have other

812
00:32:49,059 --> 00:32:51,370
parts of the access control empire like

813
00:32:51,370 --> 00:32:53,889
your rule system and similar I just want

814
00:32:53,889 --> 00:32:56,049
to talk about the placing code where

815
00:32:56,049 --> 00:32:58,389
you're doing a check the commonly we do

816
00:32:58,389 --> 00:32:59,230
that's with roles

817
00:32:59,230 --> 00:33:01,960
if a user has role admin or if the user

818
00:33:01,960 --> 00:33:04,990
has role manager then let them conduct

819
00:33:04,990 --> 00:33:06,820
the action I want to encourage

820
00:33:06,820 --> 00:33:08,740
developers to stop doing that it's

821
00:33:08,740 --> 00:33:10,559
limiting it doesn't let me achieve

822
00:33:10,559 --> 00:33:12,820
multi-tenancy it doesn't give me the

823
00:33:12,820 --> 00:33:15,970
ability to do data layer access control

824
00:33:15,970 --> 00:33:18,759
and it basically forces me to hard-code

825
00:33:18,759 --> 00:33:21,580
the policy in code what I'm encouraging

826
00:33:21,580 --> 00:33:24,869
my developers that I teach is to use

827
00:33:24,869 --> 00:33:27,159
like a permission based access control

828
00:33:27,159 --> 00:33:30,159
scheme what dotnet calls a capability

829
00:33:30,159 --> 00:33:33,249
based access control scheme it which is

830
00:33:33,249 --> 00:33:35,139
I believe necessary if you're moving

831
00:33:35,139 --> 00:33:37,179
into complex standards like a back

832
00:33:37,179 --> 00:33:39,309
attribute based access control for

833
00:33:39,309 --> 00:33:42,279
example if I was in a game where you're

834
00:33:42,279 --> 00:33:44,710
driving a Winnebago you're driving a

835
00:33:44,710 --> 00:33:46,389
Motorhome that's the game that don't get

836
00:33:46,389 --> 00:33:49,119
me started on my game ideas let's just

837
00:33:49,119 --> 00:33:50,799
lets us cope with it it's a it's a

838
00:33:50,799 --> 00:33:53,200
popular game it's sold billions of

839
00:33:53,200 --> 00:33:55,299
copies it's the best Winnebago game in

840
00:33:55,299 --> 00:33:56,980
the world and you know I'm crazy because

841
00:33:56,980 --> 00:33:58,840
I'm Winnebago game but let's just get

842
00:33:58,840 --> 00:34:00,669
past that everybody this is good get

843
00:34:00,669 --> 00:34:03,519
past that get past that so what I'm

844
00:34:03,519 --> 00:34:05,350
trying to say here is in code you could

845
00:34:05,350 --> 00:34:08,649
say if the user was a Winnebago driver

846
00:34:08,649 --> 00:34:10,839
now you're hard coding policy in code

847
00:34:10,839 --> 00:34:13,060
instead I want to say on my code if the

848
00:34:13,060 --> 00:34:16,810
user is permitted to drive : Winnebago

849
00:34:16,810 --> 00:34:21,040
: Eagle 5 a specific Winnebago now I'm

850
00:34:21,040 --> 00:34:23,440
just checking not on an attribute of the

851
00:34:23,440 --> 00:34:26,050
user in my code I'm checking on the

852
00:34:26,050 --> 00:34:28,119
feature and the data that they're

853
00:34:28,119 --> 00:34:30,879
accessing and I'll push my actual rules

854
00:34:30,879 --> 00:34:33,399
to a database in some way java calls

855
00:34:33,399 --> 00:34:34,649
this permission based access control

856
00:34:34,649 --> 00:34:37,510
again dotnet calls a claims based access

857
00:34:37,510 --> 00:34:39,849
control I don't care what you call it I

858
00:34:39,849 --> 00:34:41,319
want to recommend your enforcement

859
00:34:41,319 --> 00:34:45,550
points our features and data not roles

860
00:34:45,550 --> 00:34:48,579
in code up the stack rolls can be a

861
00:34:48,579 --> 00:34:51,159
category that's great but let's move to

862
00:34:51,159 --> 00:34:53,230
CA any questions Brian I'm gonna move

863
00:34:53,230 --> 00:34:55,599
along I know I've been sometimes I get a

864
00:34:55,599 --> 00:34:57,549
little a little chatty a little bit too

865
00:34:57,549 --> 00:34:59,260
chatty it's a personal problem that's

866
00:34:59,260 --> 00:34:59,980
why I'm a teacher

867
00:34:59,980 --> 00:35:02,440
no no quote no questions yet so keep

868
00:35:02,440 --> 00:35:02,920
keep

869
00:35:02,920 --> 00:35:05,440
if people ever ask questions please put

870
00:35:05,440 --> 00:35:07,869
them in even if it's on on points that

871
00:35:07,869 --> 00:35:11,020
already passed so continue Jim c8

872
00:35:11,020 --> 00:35:12,940
protect data everywhere a few quick

873
00:35:12,940 --> 00:35:13,480
points

874
00:35:13,480 --> 00:35:17,500
Brian number one HTTPS how often should

875
00:35:17,500 --> 00:35:19,630
we use HTTPS we should do that

876
00:35:19,630 --> 00:35:21,670
everywhere do it everywhere in a well

877
00:35:21,670 --> 00:35:23,530
configured way use forward secrecy

878
00:35:23,530 --> 00:35:25,960
ciphers turn off renegotiation make sure

879
00:35:25,960 --> 00:35:27,609
you're turning on things like the higher

880
00:35:27,609 --> 00:35:30,609
versions of TLS I dropped TLS one Oh TLS

881
00:35:30,609 --> 00:35:32,380
one water above use a good cipher suite

882
00:35:32,380 --> 00:35:34,180
make sure you're verifying it all of us

883
00:35:34,180 --> 00:35:35,530
to sell labs use strict Transport

884
00:35:35,530 --> 00:35:37,660
Security certificate pinning for a

885
00:35:37,660 --> 00:35:40,000
little bit of bonus configure that stuff

886
00:35:40,000 --> 00:35:43,059
all the way so I like again I'm not I'm

887
00:35:43,059 --> 00:35:45,069
not affiliated not trying to endorse

888
00:35:45,069 --> 00:35:47,530
them I like SSL labs it's a way I can do

889
00:35:47,530 --> 00:35:49,780
an online verification of how good my

890
00:35:49,780 --> 00:35:55,359
HTTPS setup is and get an A+ so I hope

891
00:35:55,359 --> 00:35:56,920
when you're using libraries to do

892
00:35:56,920 --> 00:35:59,020
cryptographic storage I don't recommend

893
00:35:59,020 --> 00:36:01,089
hand coding that I yeah well I like

894
00:36:01,089 --> 00:36:03,910
libraries like Google tape or Lib sodium

895
00:36:03,910 --> 00:36:07,119
for my you know fir symmetric encryption

896
00:36:07,119 --> 00:36:10,359
for digital signatures most of my

897
00:36:10,359 --> 00:36:12,250
cryptographic needs I would do in a well

898
00:36:12,250 --> 00:36:13,839
vetted library rather than coding it

899
00:36:13,839 --> 00:36:14,260
myself

900
00:36:14,260 --> 00:36:17,290
I'm just saying Brian why like cake ink

901
00:36:17,290 --> 00:36:18,069
is special

902
00:36:18,069 --> 00:36:21,280
cuz tank integrates with key bolts and

903
00:36:21,280 --> 00:36:23,319
that that's the that's the hardest part

904
00:36:23,319 --> 00:36:25,210
of cryptographic solutions where you

905
00:36:25,210 --> 00:36:26,260
gonna skip your key

906
00:36:26,260 --> 00:36:28,540
let me be the I'm gonna be the smartest

907
00:36:28,540 --> 00:36:30,130
cryptographer in the world now I'm not

908
00:36:30,130 --> 00:36:31,960
but if I was playing one on TV and you

909
00:36:31,960 --> 00:36:35,140
asked me Jim how do we store keys and if

910
00:36:35,140 --> 00:36:36,880
I was a mathematical photographer I

911
00:36:36,880 --> 00:36:38,440
would say I don't know good luck with

912
00:36:38,440 --> 00:36:38,619
that

913
00:36:38,619 --> 00:36:41,380
bye that's a lot of cryptographers punt

914
00:36:41,380 --> 00:36:44,740
on that hard question today Brian we

915
00:36:44,740 --> 00:36:48,069
have secrets bolts secrets vaults like

916
00:36:48,069 --> 00:36:50,950
passion corpse vault and similar to

917
00:36:50,950 --> 00:36:53,290
store keys so we talked about HP s

918
00:36:53,290 --> 00:36:55,240
well-configured everywhere users use a

919
00:36:55,240 --> 00:36:56,470
well then equipped a cryptographic

920
00:36:56,470 --> 00:36:59,440
library keep it up to date and use a

921
00:36:59,440 --> 00:37:01,450
property vault to store your T's let's

922
00:37:01,450 --> 00:37:03,130
look at the night category if you're

923
00:37:03,130 --> 00:37:06,069
joining us where have you been if you're

924
00:37:06,069 --> 00:37:07,930
just joining us but if you have if you

925
00:37:07,930 --> 00:37:10,390
are just joining us for on the night a

926
00:37:10,390 --> 00:37:13,809
loss top-10 practice control implement

927
00:37:13,809 --> 00:37:14,619
security

928
00:37:14,619 --> 00:37:16,869
logging and monitoring

929
00:37:16,869 --> 00:37:18,819
put airgun I'm so excited we're at nine

930
00:37:18,819 --> 00:37:21,730
little airgun look well airgun this is a

931
00:37:21,730 --> 00:37:24,579
I use what is this this is a little

932
00:37:24,579 --> 00:37:26,920
little dust right people do it like this

933
00:37:26,920 --> 00:37:29,019
and I'm like why that's boring I do it

934
00:37:29,019 --> 00:37:30,730
like that that's freaking exciting

935
00:37:30,730 --> 00:37:33,519
number nine implement logging and

936
00:37:33,519 --> 00:37:36,190
monitoring I think this is a no-brainer

937
00:37:36,190 --> 00:37:38,890
for most security professionals I want

938
00:37:38,890 --> 00:37:40,480
to get out of this use a good library

939
00:37:40,480 --> 00:37:42,789
Olas has a secure logging that lets you

940
00:37:42,789 --> 00:37:44,829
flag different log events and security

941
00:37:44,829 --> 00:37:46,809
events you can do that and strings

942
00:37:46,809 --> 00:37:49,119
yourself whatever what I want to suggest

943
00:37:49,119 --> 00:37:52,029
though is you log three things everybody

944
00:37:52,029 --> 00:37:54,099
what you should do is talk to your

945
00:37:54,099 --> 00:37:56,170
security team and work on a logging plan

946
00:37:56,170 --> 00:37:58,680
of exactly what you're gonna log and

947
00:37:58,680 --> 00:38:02,289
unicorns fly out my butt too but as a

948
00:38:02,289 --> 00:38:05,289
developer log three things all input

949
00:38:05,289 --> 00:38:08,799
validation failures first of all do good

950
00:38:08,799 --> 00:38:10,420
input validation everywhere and every

951
00:38:10,420 --> 00:38:12,160
time an input validation layer fails and

952
00:38:12,160 --> 00:38:13,839
they variable log that stuff I want it

953
00:38:13,839 --> 00:38:17,049
number to log all authentication events

954
00:38:17,049 --> 00:38:19,420
all of them good and bad session bad

955
00:38:19,420 --> 00:38:21,039
session IDs good session ID verification

956
00:38:21,039 --> 00:38:24,579
login bad password password Risa I want

957
00:38:24,579 --> 00:38:26,259
all of that in detail around

958
00:38:26,259 --> 00:38:28,960
authentication and any access control

959
00:38:28,960 --> 00:38:31,450
failure me want that to so I can detect

960
00:38:31,450 --> 00:38:33,220
when users are trying to privilege

961
00:38:33,220 --> 00:38:34,420
escalation if you just give me those

962
00:38:34,420 --> 00:38:36,819
three things I got great visibility into

963
00:38:36,819 --> 00:38:38,410
what you're doing good luck and that's

964
00:38:38,410 --> 00:38:39,910
what I'm trying to say go get the OS

965
00:38:39,910 --> 00:38:42,069
logging project watch security logging

966
00:38:42,069 --> 00:38:45,460
project is also a logging chichi you

967
00:38:45,460 --> 00:38:47,980
know Brian you know Sam all good things

968
00:38:47,980 --> 00:38:50,589
need to come to an end that's someone

969
00:38:50,589 --> 00:38:52,630
who said that that was wise not me

970
00:38:52,630 --> 00:38:54,999
we're out our final category it's been a

971
00:38:54,999 --> 00:38:56,829
pleasure being on this podcast with you

972
00:38:56,829 --> 00:38:59,499
it's early morning for me I drank way

973
00:38:59,499 --> 00:39:03,210
too much coffee in my in my awesome

974
00:39:03,210 --> 00:39:05,109
stormtrooper mug I'm gonna show you one

975
00:39:05,109 --> 00:39:08,079
more mug Sam this is this is this is not

976
00:39:08,079 --> 00:39:10,869
my normal like dating strategy show I

977
00:39:10,869 --> 00:39:14,140
know he just is like Brian showing you

978
00:39:14,140 --> 00:39:17,109
my mug weird where's my where's my other

979
00:39:17,109 --> 00:39:19,599
Star Wars mug this is sad I want to show

980
00:39:19,599 --> 00:39:21,489
it to you it was really cool I can't

981
00:39:21,489 --> 00:39:23,349
find it because more important than my

982
00:39:23,349 --> 00:39:27,059
others that's my

983
00:39:30,070 --> 00:39:32,860
oh you could thank you I want to show

984
00:39:32,860 --> 00:39:34,330
you my mug here this is awesome I'm

985
00:39:34,330 --> 00:39:36,310
wearing a sarong I think I just show a

986
00:39:36,310 --> 00:39:38,500
little too much knee there it's got Star

987
00:39:38,500 --> 00:39:40,810
Wars on the and it's got I love that

988
00:39:40,810 --> 00:39:43,630
picture it's a nice picture I like you

989
00:39:43,630 --> 00:39:49,390
Luke you're awesome alright Brian I know

990
00:39:49,390 --> 00:39:52,150
we just met but I like you so much I'm

991
00:39:52,150 --> 00:39:57,150
showing you my Star Wars mug alright

992
00:39:59,490 --> 00:40:01,840
we're talking about the OS top-10

993
00:40:01,840 --> 00:40:03,760
practive controls we're on the final

994
00:40:03,760 --> 00:40:07,680
control handle all errors and exceptions

995
00:40:07,680 --> 00:40:10,480
so the basic best practices here we're

996
00:40:10,480 --> 00:40:12,610
almost done manage exceptions in a

997
00:40:12,610 --> 00:40:14,980
centralized manner avoid duplicate try

998
00:40:14,980 --> 00:40:17,340
catch blocks ensure that unexpected

999
00:40:17,340 --> 00:40:20,350
behaviors and software is caught and

1000
00:40:20,350 --> 00:40:23,380
handled correctly preferably using a

1001
00:40:23,380 --> 00:40:26,410
standardized air convention we want to

1002
00:40:26,410 --> 00:40:28,300
ensure that error message is played by

1003
00:40:28,300 --> 00:40:30,670
users do not leak critical data to the

1004
00:40:30,670 --> 00:40:32,770
user as well like stack traces or

1005
00:40:32,770 --> 00:40:35,320
specialized air codes or cryptographic

1006
00:40:35,320 --> 00:40:38,410
error codes even worse and when you're

1007
00:40:38,410 --> 00:40:40,270
using like rest services and you're

1008
00:40:40,270 --> 00:40:42,130
doing and you're building rest services

1009
00:40:42,130 --> 00:40:44,380
I want you to make sure that every

1010
00:40:44,380 --> 00:40:47,800
single rest error code is consistent

1011
00:40:47,800 --> 00:40:50,140
across your architecture rest usually

1012
00:40:50,140 --> 00:40:52,450
says that you want to use an HTTP

1013
00:40:52,450 --> 00:40:54,940
response code that Maps HTTP I think

1014
00:40:54,940 --> 00:40:56,650
more important than doing that exactly

1015
00:40:56,650 --> 00:40:59,140
is to have a standard in your

1016
00:40:59,140 --> 00:41:01,270
development practice that all developers

1017
00:41:01,270 --> 00:41:03,400
across different rest tiers are

1018
00:41:03,400 --> 00:41:05,950
following if you have any other

1019
00:41:05,950 --> 00:41:08,940
questions please and final thoughts

1020
00:41:08,940 --> 00:41:12,460
again requirements the Olas ASVs

1021
00:41:12,460 --> 00:41:15,460
standard version 4.0 went out today also

1022
00:41:15,460 --> 00:41:17,860
look at the cheat sheet series we moved

1023
00:41:17,860 --> 00:41:19,960
the whole series to github so we can

1024
00:41:19,960 --> 00:41:21,880
triage your questions in a more

1025
00:41:21,880 --> 00:41:23,320
effective manner so if you have

1026
00:41:23,320 --> 00:41:25,480
questions on secure coding go look at

1027
00:41:25,480 --> 00:41:29,410
the wasp chichi series and for testing

1028
00:41:29,410 --> 00:41:32,650
test all your software continuously

1029
00:41:32,650 --> 00:41:35,380
static analysis dynamic analysis third

1030
00:41:35,380 --> 00:41:37,840
party security analysis and go look at

1031
00:41:37,840 --> 00:41:40,150
the OWASP testing guide it has been a

1032
00:41:40,150 --> 00:41:42,340
great pleasure being with you today

1033
00:41:42,340 --> 00:41:43,210
this is

1034
00:41:43,210 --> 00:41:45,400
I'm honored to be a part of the secure

1035
00:41:45,400 --> 00:41:47,380
developer to work with great people like

1036
00:41:47,380 --> 00:41:49,359
Brian Sam you're and sneak there's the

1037
00:41:49,359 --> 00:41:52,059
first episode I'm stoked we we did we

1038
00:41:52,059 --> 00:41:53,980
did all right I think it went well it's

1039
00:41:53,980 --> 00:41:57,880
we're done any questions for me I'm a

1040
00:41:57,880 --> 00:41:59,800
secure coding teacher you can find me at

1041
00:41:59,800 --> 00:42:05,859
Jim atmanah code calm or Jim single

1042
00:42:05,859 --> 00:42:09,839
quote or single quote one single quote a

1043
00:42:09,839 --> 00:42:13,300
single quote at matakohe comm you can

1044
00:42:13,300 --> 00:42:15,520
catch me there as well so that's it

1045
00:42:15,520 --> 00:42:18,520
Brian brought Brian and Sam I'm done any

1046
00:42:18,520 --> 00:42:20,980
any final questions or any thoughts

1047
00:42:20,980 --> 00:42:24,760
where we wrap this up not really there

1048
00:42:24,760 --> 00:42:27,220
there are some slightest some simple

1049
00:42:27,220 --> 00:42:28,809
question by or simple questions and some

1050
00:42:28,809 --> 00:42:32,380
small question about BB permissions and

1051
00:42:32,380 --> 00:42:36,940
roles people our asking should I use

1052
00:42:36,940 --> 00:42:39,040
some kind of permission manager or

1053
00:42:39,040 --> 00:42:40,869
something like that

1054
00:42:40,869 --> 00:42:43,809
can you can you please recap that one

1055
00:42:43,809 --> 00:42:49,660
yes this is a hard question what I want

1056
00:42:49,660 --> 00:42:52,119
is to say that software has it built in

1057
00:42:52,119 --> 00:42:54,010
for you that there's different models

1058
00:42:54,010 --> 00:42:57,369
you can use in the unfortunate answer is

1059
00:42:57,369 --> 00:42:59,710
I still think you should be building

1060
00:42:59,710 --> 00:43:01,839
your access control yourself build your

1061
00:43:01,839 --> 00:43:05,020
own database around how you map a

1062
00:43:05,020 --> 00:43:08,319
feature name to a list of permissions to

1063
00:43:08,319 --> 00:43:11,260
a rule system all that is stuff I still

1064
00:43:11,260 --> 00:43:12,940
recommend you do yourself and I rather

1065
00:43:12,940 --> 00:43:15,099
not I wish I could recommend a a turnkey

1066
00:43:15,099 --> 00:43:18,640
product but access control becomes such

1067
00:43:18,640 --> 00:43:20,619
a custom thing for each organization or

1068
00:43:20,619 --> 00:43:22,390
each application or any layer I looked

1069
00:43:22,390 --> 00:43:25,540
at most large enterprises that I know of

1070
00:43:25,540 --> 00:43:28,569
that have built complicated software

1071
00:43:28,569 --> 00:43:32,680
they build in their own access control

1072
00:43:32,680 --> 00:43:35,380
methodology to satisfy these needs and

1073
00:43:35,380 --> 00:43:37,750
things like dotnet has a lot of it built

1074
00:43:37,750 --> 00:43:39,790
in and their claims face system but you

1075
00:43:39,790 --> 00:43:41,859
have to start mapping these individual

1076
00:43:41,859 --> 00:43:44,140
claims to again a list of features a

1077
00:43:44,140 --> 00:43:46,059
list of users different grouping of

1078
00:43:46,059 --> 00:43:48,309
users different rules for individual

1079
00:43:48,309 --> 00:43:51,069
data access and it gets complicated and

1080
00:43:51,069 --> 00:43:53,380
a lot of the turnkey access control

1081
00:43:53,380 --> 00:43:55,359
solutions don't address that layer of

1082
00:43:55,359 --> 00:43:57,130
detail but that's the hard

1083
00:43:57,130 --> 00:44:00,400
we need to address so I still think you

1084
00:44:00,400 --> 00:44:01,930
have to build it and that's that's an

1085
00:44:01,930 --> 00:44:04,960
unfortunate answer but it's the it's the

1086
00:44:04,960 --> 00:44:06,670
best I got today and it's what I see in

1087
00:44:06,670 --> 00:44:09,070
the field more often than not for big

1088
00:44:09,070 --> 00:44:14,290
orgs doing complex software hey all

1089
00:44:14,290 --> 00:44:14,740
right

1090
00:44:14,740 --> 00:44:16,660
thank you thank you Sam thank you I

1091
00:44:16,660 --> 00:44:19,480
think I'm Brian Simpson and that

1092
00:44:19,480 --> 00:44:21,580
continues and but there were all the

1093
00:44:21,580 --> 00:44:23,230
questions that came out but so thank you

1094
00:44:23,230 --> 00:44:26,680
so much Jim and for everything today I'm

1095
00:44:26,680 --> 00:44:28,630
sure when I was injury that as much as I

1096
00:44:28,630 --> 00:44:31,660
did if there are other questions oh they

1097
00:44:31,660 --> 00:44:33,130
come up guys please put them on the

1098
00:44:33,130 --> 00:44:35,380
slack and we'll try get those answer for

1099
00:44:35,380 --> 00:44:37,720
you but again a huge thanks to Jim

1100
00:44:37,720 --> 00:44:39,130
hopefully this is not the last time we

1101
00:44:39,130 --> 00:44:40,840
have you on the security benefit ever

1102
00:44:40,840 --> 00:44:42,840
thank you for being our first ever gift

1103
00:44:42,840 --> 00:44:45,460
well it's my honor to be here I wish you

1104
00:44:45,460 --> 00:44:47,680
all great success Sam and Brian again

1105
00:44:47,680 --> 00:44:48,940
thank you for giving me a chance to talk

1106
00:44:48,940 --> 00:44:51,880
with all of you today thank you and yeah

1107
00:44:51,880 --> 00:44:53,260
guys if you enjoyed that please and

1108
00:44:53,260 --> 00:44:55,600
share it our next event will be in two

1109
00:44:55,600 --> 00:44:58,240
weeks time and we'll be having a panel

1110
00:44:58,240 --> 00:45:00,430
discussion on the state of open source

1111
00:45:00,430 --> 00:45:02,320
security report that sneak put out

1112
00:45:02,320 --> 00:45:04,060
earlier this week you can find

1113
00:45:04,060 --> 00:45:06,850
everything on the secure developer web

1114
00:45:06,850 --> 00:45:08,500
site which is the secure developer comm

1115
00:45:08,500 --> 00:45:10,180
you can sign up there find out all the

1116
00:45:10,180 --> 00:45:12,460
details but if you enjoyed the session

1117
00:45:12,460 --> 00:45:14,500
please Sharon and we'll take a few

1118
00:45:14,500 --> 00:45:15,970
minutes to do a bit of action but then

1119
00:45:15,970 --> 00:45:17,680
we will put it on the website for you to

1120
00:45:17,680 --> 00:45:20,200
view what share and show your colleagues

1121
00:45:20,200 --> 00:45:21,400
or friends are hopefully they're your

1122
00:45:21,400 --> 00:45:24,040
friends that are your honey and but yeah

1123
00:45:24,040 --> 00:45:26,020
thank you very much and again apologies

1124
00:45:26,020 --> 00:45:28,600
for the delay and the change in links

1125
00:45:28,600 --> 00:45:30,460
but hopefully next time would all run a

1126
00:45:30,460 --> 00:45:32,890
bit smoother and thanks again to Brian

1127
00:45:32,890 --> 00:45:36,210
for doing all the questions for us and

1128
00:45:36,210 --> 00:45:38,710
have a great day wherever you are in the

1129
00:45:38,710 --> 00:45:45,150
world bye everyone

