1
00:00:02,449 --> 00:00:06,629
hello hello and welcome to my dev tech

2
00:00:06,629 --> 00:00:08,220
ops and for those of you who are

3
00:00:08,220 --> 00:00:09,570
first-time yeah we're an inclusive

4
00:00:09,570 --> 00:00:11,250
community that educates enables

5
00:00:11,250 --> 00:00:13,590
developers in application security today

6
00:00:13,590 --> 00:00:15,630
we actually joined by Josh grassman and

7
00:00:15,630 --> 00:00:16,830
he's gonna be talking about what's new

8
00:00:16,830 --> 00:00:19,730
and exciting in a SBS version for and

9
00:00:19,730 --> 00:00:22,289
for those of you who don't know Josh and

10
00:00:22,289 --> 00:00:24,000
he's actually one of our friends of

11
00:00:24,000 --> 00:00:25,680
community care but he's head of security

12
00:00:25,680 --> 00:00:27,930
services at exit labs he's also always

13
00:00:27,930 --> 00:00:30,150
Israel's chapter on OS it is Ross

14
00:00:30,150 --> 00:00:32,159
chapter board and actually the project

15
00:00:32,159 --> 00:00:33,930
leader for the application security

16
00:00:33,930 --> 00:00:36,180
verification stand so definitely

17
00:00:36,180 --> 00:00:39,600
well-versed in sharing the content with

18
00:00:39,600 --> 00:00:42,510
us today so hi hey Sam how's it going

19
00:00:42,510 --> 00:00:44,129
good to be here ok thanks to having you

20
00:00:44,129 --> 00:00:46,079
all right before we get started as you

21
00:00:46,079 --> 00:00:47,820
housekeeping rules for those of you who

22
00:00:47,820 --> 00:00:50,340
don't know me my name is Sam HIPAA and

23
00:00:50,340 --> 00:00:52,230
I'm the community manager here so any

24
00:00:52,230 --> 00:00:55,949
questions concerns subject ideas

25
00:00:55,949 --> 00:00:57,480
anything like that to ping me on the

26
00:00:57,480 --> 00:00:59,609
slack on the Twitter on a mailing list

27
00:00:59,609 --> 00:01:02,239
and I'm glad to get back to you and

28
00:01:02,239 --> 00:01:05,309
that's actually nice to interact today

29
00:01:05,309 --> 00:01:06,540
so if you're not a part of us your

30
00:01:06,540 --> 00:01:08,549
community get future onto my dev sick

31
00:01:08,549 --> 00:01:09,570
opstat IO

32
00:01:09,570 --> 00:01:10,710
you'll find the need to join these

33
00:01:10,710 --> 00:01:12,420
select community and if you join live

34
00:01:12,420 --> 00:01:14,250
sessions you can then ask and Josh

35
00:01:14,250 --> 00:01:15,570
efficient as we go through today's

36
00:01:15,570 --> 00:01:18,630
session if anyone's watching this post

37
00:01:18,630 --> 00:01:20,700
live recording and feel free to jump in

38
00:01:20,700 --> 00:01:22,350
and ask those questions as and when they

39
00:01:22,350 --> 00:01:22,950
arise

40
00:01:22,950 --> 00:01:25,200
John is a member of josh as a member of

41
00:01:25,200 --> 00:01:27,960
our community but he'll answer them all

42
00:01:27,960 --> 00:01:29,430
we have obviously a vast community in

43
00:01:29,430 --> 00:01:33,270
parts those questions as well that's all

44
00:01:33,270 --> 00:01:34,860
then I'm going to cover today and my

45
00:01:34,860 --> 00:01:36,060
district ops actually brought to you by

46
00:01:36,060 --> 00:01:37,740
sneaked our aim is to create a vendor

47
00:01:37,740 --> 00:01:39,270
neutral space to share knowledge in this

48
00:01:39,270 --> 00:01:41,100
practice relates to cybersecurity so

49
00:01:41,100 --> 00:01:42,630
huge thanks to them making this happen

50
00:01:42,630 --> 00:01:44,340
right but that's enough for me

51
00:01:44,340 --> 00:01:47,310
and over to you Josh welcome excellent

52
00:01:47,310 --> 00:01:48,780
thanks very much Mike I say really glad

53
00:01:48,780 --> 00:01:51,780
glad to be on here again and also really

54
00:01:51,780 --> 00:01:54,840
excited to talk about the SVS definitely

55
00:01:54,840 --> 00:01:56,820
a project I think is really important

56
00:01:56,820 --> 00:01:59,549
and can be really big benefit to

57
00:01:59,549 --> 00:02:02,840
developers and it's a sec ops community

58
00:02:02,840 --> 00:02:05,759
so yeah if I just share my screen I

59
00:02:05,759 --> 00:02:08,639
think one thing I would say is that I am

60
00:02:08,639 --> 00:02:10,889
the sps project co-leader there are

61
00:02:10,889 --> 00:02:12,870
various other leaders as well that

62
00:02:12,870 --> 00:02:15,060
a lot of working clothes as well so I'll

63
00:02:15,060 --> 00:02:16,560
talk about that later on I just want to

64
00:02:16,560 --> 00:02:17,849
make sure that nan thinks I'm doing this

65
00:02:17,849 --> 00:02:23,370
all on my own okay so let's get sharing

66
00:02:23,370 --> 00:02:26,720
up justperson one second please

67
00:02:28,250 --> 00:02:31,400
there it is

68
00:02:34,159 --> 00:02:35,370
okay

69
00:02:35,370 --> 00:02:39,120
can you see that okay perfect

70
00:02:39,120 --> 00:02:44,069
all right so into it maybe start off

71
00:02:44,069 --> 00:02:46,470
with a little bit about Who I am to

72
00:02:46,470 --> 00:02:47,849
still expand on that a little bit so

73
00:02:47,849 --> 00:02:50,519
like I say my name is Josh Grossman I've

74
00:02:50,519 --> 00:02:53,459
worked in IT risk IT security for over a

75
00:02:53,459 --> 00:02:56,370
decade now for us different roles also

76
00:02:56,370 --> 00:02:59,090
worked as a developer some time as well

77
00:02:59,090 --> 00:03:01,680
currently I work as the head of security

78
00:03:01,680 --> 00:03:04,500
services for upstate labs so we were a

79
00:03:04,500 --> 00:03:05,879
boutique application security

80
00:03:05,879 --> 00:03:09,269
consultancy based here in Israel and I

81
00:03:09,269 --> 00:03:11,159
lead the consulting team so the team of

82
00:03:11,159 --> 00:03:13,200
consultants who report to me as I lead

83
00:03:13,200 --> 00:03:15,959
application penetration testing work I

84
00:03:15,959 --> 00:03:18,239
would also work like secure design

85
00:03:18,239 --> 00:03:20,280
secure architecture for applications and

86
00:03:20,280 --> 00:03:22,819
or seeing a lot of work in helping

87
00:03:22,819 --> 00:03:24,750
organizations to build security into

88
00:03:24,750 --> 00:03:28,500
their software developers

89
00:03:28,500 --> 00:03:30,870
so our clients are based both in Israel

90
00:03:30,870 --> 00:03:33,379
also lots of clients based abroad and

91
00:03:33,379 --> 00:03:36,090
yes our projects locally overseas and

92
00:03:36,090 --> 00:03:37,590
I've also delivered training both

93
00:03:37,590 --> 00:03:39,500
locally and overseas and talks as well

94
00:03:39,500 --> 00:03:42,299
so very much immersed in the world of

95
00:03:42,299 --> 00:03:45,209
application security so that's my day

96
00:03:45,209 --> 00:03:49,079
job and then in my spare time as son

97
00:03:49,079 --> 00:03:52,109
said I work on the on the OS DISA Israel

98
00:03:52,109 --> 00:03:55,290
chapter board we recently organized back

99
00:03:55,290 --> 00:03:57,120
in May the global app sector live

100
00:03:57,120 --> 00:03:59,129
conference which went really really well

101
00:03:59,129 --> 00:04:01,560
had some really exciting and interesting

102
00:04:01,560 --> 00:04:03,269
speakers come from all over the world

103
00:04:03,269 --> 00:04:05,430
sounds great and this year we're gonna

104
00:04:05,430 --> 00:04:06,660
have our regular apps like Israel

105
00:04:06,660 --> 00:04:09,090
conference so if you're interested in

106
00:04:09,090 --> 00:04:10,829
that please get in touch with me it's a

107
00:04:10,829 --> 00:04:12,329
really great really cool great

108
00:04:12,329 --> 00:04:15,359
conference very interesting outside of

109
00:04:15,359 --> 00:04:18,478
that I've also been involved with the OS

110
00:04:18,478 --> 00:04:20,849
top ten proactive controls project did

111
00:04:20,849 --> 00:04:23,640
serve as contributions for that which

112
00:04:23,640 --> 00:04:26,070
we'll talk about later on and I was also

113
00:04:26,070 --> 00:04:26,550
your

114
00:04:26,550 --> 00:04:28,770
slightly involved in the most recent OS

115
00:04:28,770 --> 00:04:31,500
top ten top ten risks and also the OS

116
00:04:31,500 --> 00:04:33,479
juice shop project if you're looking for

117
00:04:33,479 --> 00:04:35,699
a vulnerable application to practice

118
00:04:35,699 --> 00:04:36,900
your skills against or learn more about

119
00:04:36,900 --> 00:04:38,190
application security I'd strongly

120
00:04:38,190 --> 00:04:41,370
recommend juice shop for that and yeah

121
00:04:41,370 --> 00:04:44,190
and as I said and that's well we're here

122
00:04:44,190 --> 00:04:46,080
today to talk about I'm a co-leader on

123
00:04:46,080 --> 00:04:50,190
the OS PS PS project as well okay so

124
00:04:50,190 --> 00:04:52,020
that's a lot about me let's move on to

125
00:04:52,020 --> 00:04:54,210
what's the problem we're trying to solve

126
00:04:54,210 --> 00:04:56,550
today there's a great guy called Michael

127
00:04:56,550 --> 00:04:59,310
Santangelo who goes by catalyst on

128
00:04:59,310 --> 00:05:01,949
Twitter who his basic question is what

129
00:05:01,949 --> 00:05:02,849
is the problem what they're trying to

130
00:05:02,849 --> 00:05:07,740
solve so I'm thinking I'm a specialist

131
00:05:07,740 --> 00:05:10,770
application security I work for an

132
00:05:10,770 --> 00:05:12,330
organization called abscess labs

133
00:05:12,330 --> 00:05:15,180
application security labs and I'm very

134
00:05:15,180 --> 00:05:16,860
active in the open web application

135
00:05:16,860 --> 00:05:20,039
security projects so that means that

136
00:05:20,039 --> 00:05:22,800
people often ask me how can we secure

137
00:05:22,800 --> 00:05:27,389
our applications and that's quite a big

138
00:05:27,389 --> 00:05:29,550
topic that's pickar a big ask there's a

139
00:05:29,550 --> 00:05:32,400
lot going on there's a lot to answer I'm

140
00:05:32,400 --> 00:05:34,680
really the idea behind the application

141
00:05:34,680 --> 00:05:37,139
security verification standard is having

142
00:05:37,139 --> 00:05:38,310
a way to do that having a comprehensive

143
00:05:38,310 --> 00:05:40,440
way of saying how can we build a secure

144
00:05:40,440 --> 00:05:43,819
application so I'm going to talk about

145
00:05:43,819 --> 00:05:46,979
yeah a bit of the background to the SVS

146
00:05:46,979 --> 00:05:49,139
a bit of context maybe we relate it to a

147
00:05:49,139 --> 00:05:51,210
couple of other projects that are may be

148
00:05:51,210 --> 00:05:54,840
better known talk about what the ASVs is

149
00:05:54,840 --> 00:05:59,009
what's new in this 4.0 version I'll pull

150
00:05:59,009 --> 00:06:00,180
out some of the interesting parts of

151
00:06:00,180 --> 00:06:02,009
assets and the things I think make it a

152
00:06:02,009 --> 00:06:04,310
really exciting and relevant standard

153
00:06:04,310 --> 00:06:07,020
and then talk about different use cases

154
00:06:07,020 --> 00:06:09,120
ways you can use it ways you can get

155
00:06:09,120 --> 00:06:10,919
involved as well in helping out the

156
00:06:10,919 --> 00:06:15,539
project so to explain what the ASVs is I

157
00:06:15,539 --> 00:06:17,190
like to start by saying well what what

158
00:06:17,190 --> 00:06:20,750
is the ASVs not what isn't there a SVS

159
00:06:20,750 --> 00:06:24,240
so everyone's heard of the OS top 10

160
00:06:24,240 --> 00:06:27,419
risks probably us my most favorite

161
00:06:27,419 --> 00:06:29,400
projects been running for over a decade

162
00:06:29,400 --> 00:06:32,849
so like a decade and a half now and it

163
00:06:32,849 --> 00:06:35,009
focuses on releasing every three or four

164
00:06:35,009 --> 00:06:37,289
year years a list of the top ten most

165
00:06:37,289 --> 00:06:39,750
critical applications security risks

166
00:06:39,750 --> 00:06:41,760
one of the most concerning things that

167
00:06:41,760 --> 00:06:45,270
we should be worried about lots of great

168
00:06:45,270 --> 00:06:46,740
experts who lead that project especially

169
00:06:46,740 --> 00:06:48,630
the 2017 version there's some of the

170
00:06:48,630 --> 00:06:51,750
really great team for that and also a

171
00:06:51,750 --> 00:06:53,550
lot of community input this year this

172
00:06:53,550 --> 00:06:55,860
for this year this version 2017 the most

173
00:06:55,860 --> 00:06:56,970
recent one was the first time they'd

174
00:06:56,970 --> 00:06:59,010
solicited a lot more community inputs

175
00:06:59,010 --> 00:07:01,590
both requesting data but also requesting

176
00:07:01,590 --> 00:07:03,540
opinions saying what sort of issues do

177
00:07:03,540 --> 00:07:05,370
you see as being the most concerning and

178
00:07:05,370 --> 00:07:06,720
they incorporate that into the final

179
00:07:06,720 --> 00:07:10,460
document but ultimately the document is

180
00:07:10,460 --> 00:07:15,860
10 10 most critical things it's 10 items

181
00:07:15,860 --> 00:07:18,840
and it's it's all designed to be an

182
00:07:18,840 --> 00:07:20,460
awareness document it's designed to say

183
00:07:20,460 --> 00:07:22,080
look application security web security

184
00:07:22,080 --> 00:07:23,790
is a big deal you need to be thinking

185
00:07:23,790 --> 00:07:25,980
about it here are some examples of that

186
00:07:25,980 --> 00:07:28,260
what can go wrong it's not designed to

187
00:07:28,260 --> 00:07:29,430
be a standard it's not designed to be

188
00:07:29,430 --> 00:07:31,680
comprehensive unfortunately see often

189
00:07:31,680 --> 00:07:34,950
that's I just other standards bodies or

190
00:07:34,950 --> 00:07:37,260
when building requirements people say ok

191
00:07:37,260 --> 00:07:38,880
we have to comply the OS top-10 they are

192
00:07:38,880 --> 00:07:39,810
spot-on isn't really something you

193
00:07:39,810 --> 00:07:41,430
comply with it's not really a standard

194
00:07:41,430 --> 00:07:43,380
it's not a list of okay here are all the

195
00:07:43,380 --> 00:07:46,080
things you should be worried about the

196
00:07:46,080 --> 00:07:47,460
other thing is it it kind of brings

197
00:07:47,460 --> 00:07:48,870
problems it says up here lots of

198
00:07:48,870 --> 00:07:51,000
problems you need to solve but it

199
00:07:51,000 --> 00:07:53,190
doesn't really focus on the solution

200
00:07:53,190 --> 00:07:57,240
sides as much so else it's great for

201
00:07:57,240 --> 00:07:58,410
awareness it's not necessarily great for

202
00:07:58,410 --> 00:08:00,000
saying look here's how we actually go

203
00:08:00,000 --> 00:08:03,210
and fix these things so that brings us

204
00:08:03,210 --> 00:08:04,710
to another RS project another top 10

205
00:08:04,710 --> 00:08:06,479
project which is maybe slightly less

206
00:08:06,479 --> 00:08:09,780
known called the proactive controls so

207
00:08:09,780 --> 00:08:12,150
this is also a top 10 but very much

208
00:08:12,150 --> 00:08:14,520
focused on here are a set of

209
00:08:14,520 --> 00:08:17,280
requirements that or here a set of

210
00:08:17,280 --> 00:08:19,350
things a developer needs to consider

211
00:08:19,350 --> 00:08:22,530
when they're building application so you

212
00:08:22,530 --> 00:08:24,740
know here we have a great set of

213
00:08:24,740 --> 00:08:27,360
starting points a great set of things to

214
00:08:27,360 --> 00:08:28,530
be considering things to be thinking

215
00:08:28,530 --> 00:08:31,890
about and in this case it's much more

216
00:08:31,890 --> 00:08:33,390
developer focus it's much more here's

217
00:08:33,390 --> 00:08:35,190
how we fix things how is how we bring

218
00:08:35,190 --> 00:08:37,260
solutions to problems is the sort of

219
00:08:37,260 --> 00:08:38,400
things you want to be building into a

220
00:08:38,400 --> 00:08:40,860
secure application and again a really

221
00:08:40,860 --> 00:08:43,530
great team to develop this yeah some

222
00:08:43,530 --> 00:08:44,640
very great professionals who have a lot

223
00:08:44,640 --> 00:08:47,970
of insight into this area but it is

224
00:08:47,970 --> 00:08:50,550
still just a top 10 it's still focused

225
00:08:50,550 --> 00:08:52,230
on your hair the the main thing is that

226
00:08:52,230 --> 00:08:53,490
you want to do

227
00:08:53,490 --> 00:08:54,810
so it means again it's more about

228
00:08:54,810 --> 00:08:56,190
awareness it's not necessarily so much

229
00:08:56,190 --> 00:08:59,610
about something you can comply with

230
00:08:59,610 --> 00:09:00,720
something that you can sort of

231
00:09:00,720 --> 00:09:03,960
methodically implement and it's not not

232
00:09:03,960 --> 00:09:05,250
really organizing that way it's more of

233
00:09:05,250 --> 00:09:06,510
a narrative document that says you know

234
00:09:06,510 --> 00:09:07,710
here's an interesting document you can

235
00:09:07,710 --> 00:09:10,350
read through that talks to you about

236
00:09:10,350 --> 00:09:12,180
ways you can secure an application

237
00:09:12,180 --> 00:09:15,660
without necessary that in a organized or

238
00:09:15,660 --> 00:09:20,550
framework style way so that because this

239
00:09:20,550 --> 00:09:22,080
is a question we've got some toptenz

240
00:09:22,080 --> 00:09:23,880
that they're not really helping us build

241
00:09:23,880 --> 00:09:25,350
this in a methodical way what are we

242
00:09:25,350 --> 00:09:28,380
gonna do how we're gonna fix this and

243
00:09:28,380 --> 00:09:31,020
that's how that's why the ASVs comes in

244
00:09:31,020 --> 00:09:32,250
the application security verification

245
00:09:32,250 --> 00:09:35,670
standard the standard is very much about

246
00:09:35,670 --> 00:09:37,350
saying look here we're going to present

247
00:09:37,350 --> 00:09:39,690
a detailed framework for building a

248
00:09:39,690 --> 00:09:43,920
secure application so it's built up of

249
00:09:43,920 --> 00:09:45,899
requirements or controls that in various

250
00:09:45,899 --> 00:09:48,510
different sections set out in a

251
00:09:48,510 --> 00:09:52,130
relatively structured methodical way and

252
00:09:52,130 --> 00:09:54,420
you know the kids in the name is

253
00:09:54,420 --> 00:09:55,770
designed to be a standards designed to

254
00:09:55,770 --> 00:09:56,880
be something you comply with it's

255
00:09:56,880 --> 00:09:58,580
designed to be something that you can

256
00:09:58,580 --> 00:10:01,050
compare yourself to or test yourself

257
00:10:01,050 --> 00:10:03,360
against and I think I think it sound

258
00:10:03,360 --> 00:10:04,740
really really important I still want to

259
00:10:04,740 --> 00:10:06,540
digress a little bit and say that we've

260
00:10:06,540 --> 00:10:07,890
talked about top tens there lots of

261
00:10:07,890 --> 00:10:11,600
different OS top ten projects but

262
00:10:11,600 --> 00:10:14,850
ultimately they're not all very easy for

263
00:10:14,850 --> 00:10:17,490
developers or application developers to

264
00:10:17,490 --> 00:10:19,800
focus on and to find ways of

265
00:10:19,800 --> 00:10:21,450
comprehensively securing application I'm

266
00:10:21,450 --> 00:10:24,510
very much hoping that we can push more

267
00:10:24,510 --> 00:10:26,279
tools direction of more standards

268
00:10:26,279 --> 00:10:28,160
through either than just more top tens

269
00:10:28,160 --> 00:10:30,120
but luckily I think that that is

270
00:10:30,120 --> 00:10:34,500
happening we'll see that later on so

271
00:10:34,500 --> 00:10:36,420
it's designed to be a set of leading

272
00:10:36,420 --> 00:10:38,760
practices the idea is that it shouldn't

273
00:10:38,760 --> 00:10:40,950
just be yesterday's controls or today's

274
00:10:40,950 --> 00:10:43,079
controls it should also be controls that

275
00:10:43,079 --> 00:10:46,079
will be relevant for the upcoming years

276
00:10:46,079 --> 00:10:48,900
as well and ideally the most leading the

277
00:10:48,900 --> 00:10:51,270
most cutting-edge guidance getting away

278
00:10:51,270 --> 00:10:53,730
from anything that we think of as an old

279
00:10:53,730 --> 00:10:55,860
control isn't really right isn't really

280
00:10:55,860 --> 00:10:59,070
relevant anymore like something other

281
00:10:59,070 --> 00:11:00,300
projects we talked about it's very much

282
00:11:00,300 --> 00:11:01,980
community driven it's not developed up

283
00:11:01,980 --> 00:11:04,050
in some ivory tower somewhere it's very

284
00:11:04,050 --> 00:11:07,200
much encourages input encourages fee

285
00:11:07,200 --> 00:11:08,550
that encourages contributions from the

286
00:11:08,550 --> 00:11:10,640
community it's developed in github

287
00:11:10,640 --> 00:11:13,140
consumer issues can submit pull requests

288
00:11:13,140 --> 00:11:16,650
to get to submit feedback or submit

289
00:11:16,650 --> 00:11:22,530
ideas and I suppose one of the key

290
00:11:22,530 --> 00:11:24,570
points about it is it's quite large

291
00:11:24,570 --> 00:11:25,860
there's quite a lot going on there there

292
00:11:25,860 --> 00:11:28,200
are quite a lot of requirements because

293
00:11:28,200 --> 00:11:29,400
it is designed to be something that's

294
00:11:29,400 --> 00:11:31,740
comprehensive and because of that it's

295
00:11:31,740 --> 00:11:33,960
split into three levels the idea being

296
00:11:33,960 --> 00:11:35,940
that you start at the first level and

297
00:11:35,940 --> 00:11:37,920
then you gradually build up to the the

298
00:11:37,920 --> 00:11:40,770
higher levels so for example level one

299
00:11:40,770 --> 00:11:42,690
we would consider to be the minimum

300
00:11:42,690 --> 00:11:45,300
level we'd say that that's the the basic

301
00:11:45,300 --> 00:11:47,820
level you need to be at in order to be

302
00:11:47,820 --> 00:11:49,650
able to say that this is a secure

303
00:11:49,650 --> 00:11:54,240
application it's not where we'd

304
00:11:54,240 --> 00:11:56,010
recommend that you want to be away

305
00:11:56,010 --> 00:11:57,600
necessarily we recommend you want to

306
00:11:57,600 --> 00:11:58,800
stay but it's certainly an important

307
00:11:58,800 --> 00:12:00,470
start and it's important stepping stone

308
00:12:00,470 --> 00:12:02,700
there are a lot of requirements in this

309
00:12:02,700 --> 00:12:06,180
section ok about 130 requirements but

310
00:12:06,180 --> 00:12:07,860
each one should be relatively small and

311
00:12:07,860 --> 00:12:09,690
relatively straightforward

312
00:12:09,690 --> 00:12:11,490
the idea being it gives you that entry

313
00:12:11,490 --> 00:12:14,460
point into starting to comprehensively

314
00:12:14,460 --> 00:12:18,150
build security into the application but

315
00:12:18,150 --> 00:12:19,410
again we'd say that it's more of a

316
00:12:19,410 --> 00:12:20,580
stepping stone really we want to be

317
00:12:20,580 --> 00:12:23,220
looking at level 2 level 2 is where we

318
00:12:23,220 --> 00:12:25,110
say should be the standard level for any

319
00:12:25,110 --> 00:12:26,100
application that's dealing with

320
00:12:26,100 --> 00:12:29,330
sensitive data or sensitive transactions

321
00:12:29,330 --> 00:12:31,170
which is going to be the probably the

322
00:12:31,170 --> 00:12:34,620
vast majority of applications it fries

323
00:12:34,620 --> 00:12:36,150
lots of different additional protections

324
00:12:36,150 --> 00:12:37,800
lots dition different additional

325
00:12:37,800 --> 00:12:40,290
requirements again about another 130

326
00:12:40,290 --> 00:12:43,680
hopefully not too ownerís although made

327
00:12:43,680 --> 00:12:46,650
may be slightly more complicated than

328
00:12:46,650 --> 00:12:49,320
the level one requirements we'd

329
00:12:49,320 --> 00:12:50,460
certainly say this is where we think you

330
00:12:50,460 --> 00:12:52,800
should be aiming for if you have a

331
00:12:52,800 --> 00:12:54,480
standard application that has sensitive

332
00:12:54,480 --> 00:12:58,530
data and then there's level three which

333
00:12:58,530 --> 00:13:00,240
is the the highest level we consider

334
00:13:00,240 --> 00:13:02,370
that to be the advanced level the the

335
00:13:02,370 --> 00:13:06,600
most secure level we we see this is more

336
00:13:06,600 --> 00:13:09,450
for the the highest risk applications

337
00:13:09,450 --> 00:13:12,800
the high value transactions medical data

338
00:13:12,800 --> 00:13:14,880
anything whether the highest level of

339
00:13:14,880 --> 00:13:17,370
assurance is needed whilst there aren't

340
00:13:17,370 --> 00:13:19,710
that many additional requirements to go

341
00:13:19,710 --> 00:13:20,830
from level two to

342
00:13:20,830 --> 00:13:23,500
three yummy these requirements tend to

343
00:13:23,500 --> 00:13:25,540
be the most significant the ones that

344
00:13:25,540 --> 00:13:27,880
require the most effort to implement but

345
00:13:27,880 --> 00:13:29,320
also provide that highest level of

346
00:13:29,320 --> 00:13:34,510
assurance so yeah so level two is where

347
00:13:34,510 --> 00:13:35,410
we're everyone should be aiming for

348
00:13:35,410 --> 00:13:37,000
level three if you think that this is a

349
00:13:37,000 --> 00:13:38,769
an application that's totally sensitive

350
00:13:38,769 --> 00:13:40,420
that's where you want to be trying to

351
00:13:40,420 --> 00:13:44,110
get to that highest level like I said

352
00:13:44,110 --> 00:13:45,700
I'm not the only only one of the leaders

353
00:13:45,700 --> 00:13:46,420
on this project

354
00:13:46,420 --> 00:13:49,839
Andrew Daniel Jim mark all very very

355
00:13:49,839 --> 00:13:51,700
heavily involved in the most recent

356
00:13:51,700 --> 00:13:53,620
version they've all got a lot of

357
00:13:53,620 --> 00:13:55,959
experience in the area it wasn't just

358
00:13:55,959 --> 00:13:58,269
them like I say this came from a lot of

359
00:13:58,269 --> 00:14:01,089
community contributions as well some big

360
00:14:01,089 --> 00:14:03,100
names who also provided feedback

361
00:14:03,100 --> 00:14:06,279
provided submissions provided ideas and

362
00:14:06,279 --> 00:14:08,290
you can be involved as well yes

363
00:14:08,290 --> 00:14:10,329
certainly it's developed out in the open

364
00:14:10,329 --> 00:14:13,300
we're very open to additional

365
00:14:13,300 --> 00:14:14,649
contributions or to additional help

366
00:14:14,649 --> 00:14:16,779
there's lots of areas where we could do

367
00:14:16,779 --> 00:14:19,269
with your help and improving the

368
00:14:19,269 --> 00:14:21,040
standard and I'll talk about more how

369
00:14:21,040 --> 00:14:25,120
you can do that later on so if we talk

370
00:14:25,120 --> 00:14:27,490
about what's new in this most recent

371
00:14:27,490 --> 00:14:32,680
version so if you're familiar with the

372
00:14:32,680 --> 00:14:34,329
previous version it was a quite big

373
00:14:34,329 --> 00:14:35,560
document it's now all being moved to

374
00:14:35,560 --> 00:14:37,600
github format so now everything is in

375
00:14:37,600 --> 00:14:40,300
markdown text sort of annotated text

376
00:14:40,300 --> 00:14:43,240
format and github makes it a lot more

377
00:14:43,240 --> 00:14:44,860
accessible a lot easier to edit in a

378
00:14:44,860 --> 00:14:48,430
sort of incremental way it's also very

379
00:14:48,430 --> 00:14:51,370
easy to take that markdown format and

380
00:14:51,370 --> 00:14:53,560
use an automated script to put that into

381
00:14:53,560 --> 00:14:55,630
the format that we want maybe that's a

382
00:14:55,630 --> 00:14:57,550
word document maybe that's an excel file

383
00:14:57,550 --> 00:14:59,560
maybe that's a PDF the idea is from this

384
00:14:59,560 --> 00:15:01,420
markdown basis we can generate at these

385
00:15:01,420 --> 00:15:03,160
different formats depending on what's

386
00:15:03,160 --> 00:15:04,149
most useful to you

387
00:15:04,149 --> 00:15:06,190
but it comes from the same common base

388
00:15:06,190 --> 00:15:09,790
in github and markdown it's a lot easier

389
00:15:09,790 --> 00:15:11,829
to figure out what's changed when it

390
00:15:11,829 --> 00:15:14,410
changed potentially why it changed based

391
00:15:14,410 --> 00:15:16,510
on comments when submitting changes and

392
00:15:16,510 --> 00:15:19,149
changes have been submitted that's

393
00:15:19,149 --> 00:15:20,050
really useful especially for

394
00:15:20,050 --> 00:15:21,310
understanding the rationale behind

395
00:15:21,310 --> 00:15:23,470
particular controls we had a an issue

396
00:15:23,470 --> 00:15:24,910
that was open where someone was asking

397
00:15:24,910 --> 00:15:26,380
why why is his control written in this

398
00:15:26,380 --> 00:15:28,449
particular way why does it specify this

399
00:15:28,449 --> 00:15:30,160
and I was able to search back in the

400
00:15:30,160 --> 00:15:32,380
issue history and find a discussion from

401
00:15:32,380 --> 00:15:34,420
the github issues history

402
00:15:34,420 --> 00:15:35,740
few people had discussion about this

403
00:15:35,740 --> 00:15:37,060
particular issue had come to a decision

404
00:15:37,060 --> 00:15:38,740
and that's what was behind that

405
00:15:38,740 --> 00:15:39,820
particular control I was able to

406
00:15:39,820 --> 00:15:41,800
reference that discussion is all out in

407
00:15:41,800 --> 00:15:45,460
the open and easily accessible it also

408
00:15:45,460 --> 00:15:47,850
makes it a lot easier to translate

409
00:15:47,850 --> 00:15:49,690
obviously very pleased if you want to

410
00:15:49,690 --> 00:15:51,520
take the the standard and put it into a

411
00:15:51,520 --> 00:15:52,360
different language

412
00:15:52,360 --> 00:15:53,890
that's quite challenging if there's a

413
00:15:53,890 --> 00:15:55,150
big document it's not clear what's

414
00:15:55,150 --> 00:15:57,580
changed here you can see exactly this

415
00:15:57,580 --> 00:15:59,230
element change or you can see the set of

416
00:15:59,230 --> 00:16:00,490
changes that occur between particular

417
00:16:00,490 --> 00:16:02,650
dates so someone creates a translation

418
00:16:02,650 --> 00:16:04,450
they can then go and update that later

419
00:16:04,450 --> 00:16:06,250
on just looking at what's changed in the

420
00:16:06,250 --> 00:16:09,640
original standard sites a lot of great

421
00:16:09,640 --> 00:16:10,930
advantages from having it out in the

422
00:16:10,930 --> 00:16:13,900
open having it in that simpler format a

423
00:16:13,900 --> 00:16:17,170
big change this time around was bringing

424
00:16:17,170 --> 00:16:18,370
our authentication and session

425
00:16:18,370 --> 00:16:20,170
management sections in line with NIST

426
00:16:20,170 --> 00:16:23,890
so NIST released a standard called 800

427
00:16:23,890 --> 00:16:27,130
or numbered 863 B which is called

428
00:16:27,130 --> 00:16:28,660
digital identity guidelines and it's

429
00:16:28,660 --> 00:16:31,000
very much about authentication and user

430
00:16:31,000 --> 00:16:33,460
lifecycle and this is a really really

431
00:16:33,460 --> 00:16:35,200
useful standard has a lot of sort of

432
00:16:35,200 --> 00:16:36,760
useful ideas that a data based and also

433
00:16:36,760 --> 00:16:39,970
very much based on what's practically

434
00:16:39,970 --> 00:16:42,250
useful for the real life and what they

435
00:16:42,250 --> 00:16:45,430
see as or future-looking requirements so

436
00:16:45,430 --> 00:16:46,870
we've very much tried to make sure our

437
00:16:46,870 --> 00:16:50,370
authentication sections fit in with that

438
00:16:50,760 --> 00:16:52,840
the vers different mappings as well

439
00:16:52,840 --> 00:16:54,700
mappings defer ActiveX controls project

440
00:16:54,700 --> 00:16:57,280
mappings to mitre corporations common

441
00:16:57,280 --> 00:16:59,860
weakness enumerations project which sets

442
00:16:59,860 --> 00:17:01,420
out to provide an identifier for source

443
00:17:01,420 --> 00:17:04,510
different possible application

444
00:17:04,510 --> 00:17:07,300
weaknesses and also mappings to cheat

445
00:17:07,300 --> 00:17:09,910
sheets projects the OSP sheets have lots

446
00:17:09,910 --> 00:17:12,400
of information about how to develop

447
00:17:12,400 --> 00:17:14,109
particular things in a secure way and a

448
00:17:14,109 --> 00:17:16,770
very very sort of detailed step-by-step

449
00:17:16,770 --> 00:17:19,180
fashion so we've got links to those

450
00:17:19,180 --> 00:17:22,060
resources as well and finally if you

451
00:17:22,060 --> 00:17:25,630
find yourself involved with PCI then PCI

452
00:17:25,630 --> 00:17:28,660
DSS 6.5 requirements 6.5 talks about

453
00:17:28,660 --> 00:17:31,510
software security and s.vs comply to

454
00:17:31,510 --> 00:17:33,220
that section as well so if you have

455
00:17:33,220 --> 00:17:35,080
implemented the SPS and you'll comply

456
00:17:35,080 --> 00:17:36,010
with the SPS so you can be comfortable

457
00:17:36,010 --> 00:17:37,540
you're covering off that requirement if

458
00:17:37,540 --> 00:17:40,649
you deal with cardholder data

459
00:17:43,500 --> 00:17:45,720
big change in version four lots of

460
00:17:45,720 --> 00:17:48,710
changes lots of things moved around

461
00:17:48,710 --> 00:17:50,850
offsets challenging if you approve asan

462
00:17:50,850 --> 00:17:52,410
version three but hopefully it's for the

463
00:17:52,410 --> 00:17:52,890
better

464
00:17:52,890 --> 00:17:55,290
the numbering changed completely to make

465
00:17:55,290 --> 00:17:56,640
it a lot easier to navigate around the

466
00:17:56,640 --> 00:17:59,400
standard a lot easy to understand where

467
00:17:59,400 --> 00:18:02,550
a particular requirement fits in first

468
00:18:02,550 --> 00:18:05,190
sections are reordered reorganized we

469
00:18:05,190 --> 00:18:06,480
also made a big effort to make sure that

470
00:18:06,480 --> 00:18:08,580
real controls and requirements weren't

471
00:18:08,580 --> 00:18:10,290
repeated across different sections so

472
00:18:10,290 --> 00:18:14,040
you end up having duplicated work and it

473
00:18:14,040 --> 00:18:14,940
also makes it important though that

474
00:18:14,940 --> 00:18:16,260
you're considering every single section

475
00:18:16,260 --> 00:18:17,490
you can't necessarily say okay this

476
00:18:17,490 --> 00:18:19,680
section sounds less relevant to me I'm

477
00:18:19,680 --> 00:18:22,020
gonna leave it out because it's likely

478
00:18:22,020 --> 00:18:23,250
there a requirement so you do need to

479
00:18:23,250 --> 00:18:25,830
consider but hopefully that structure

480
00:18:25,830 --> 00:18:28,430
makes it a lot easier to get around

481
00:18:28,430 --> 00:18:30,870
like I say level one is a the new

482
00:18:30,870 --> 00:18:33,600
minimum the basics basis that you need

483
00:18:33,600 --> 00:18:36,140
to be considered to have a secure

484
00:18:36,140 --> 00:18:39,600
application well we also made a big

485
00:18:39,600 --> 00:18:41,670
effort to achieve is that level one

486
00:18:41,670 --> 00:18:43,890
should be almost completely verifiable

487
00:18:43,890 --> 00:18:45,510
using something like application

488
00:18:45,510 --> 00:18:48,360
penetration testing where a tester comes

489
00:18:48,360 --> 00:18:51,630
from the outside and is interacting the

490
00:18:51,630 --> 00:18:52,680
application trying to find

491
00:18:52,680 --> 00:18:53,940
vulnerabilities in the application from

492
00:18:53,940 --> 00:18:55,710
the outside they should be able to

493
00:18:55,710 --> 00:18:57,720
verify that all of these level one

494
00:18:57,720 --> 00:18:59,460
requirements or almost all of these

495
00:18:59,460 --> 00:19:00,690
level one requirement and controls being

496
00:19:00,690 --> 00:19:03,810
put in place that was tricky in certain

497
00:19:03,810 --> 00:19:06,450
circumstances but it was the feedback

498
00:19:06,450 --> 00:19:07,560
from the community was that's really

499
00:19:07,560 --> 00:19:09,660
important for giving making easy of

500
00:19:09,660 --> 00:19:12,420
people to enter this framework to give

501
00:19:12,420 --> 00:19:13,620
them a starting point to make sure

502
00:19:13,620 --> 00:19:15,840
they're complying with this level one so

503
00:19:15,840 --> 00:19:16,910
we made a big effort to make sure that

504
00:19:16,910 --> 00:19:20,850
someone performing a would call a black

505
00:19:20,850 --> 00:19:22,350
box penetration test where you don't

506
00:19:22,350 --> 00:19:23,430
have any information that was going on

507
00:19:23,430 --> 00:19:25,790
behind the scenes you can they can still

508
00:19:25,790 --> 00:19:28,620
still ensure the application complies

509
00:19:28,620 --> 00:19:32,040
with the SPS level one

510
00:19:32,040 --> 00:19:34,410
having said that level two is what we

511
00:19:34,410 --> 00:19:37,380
think we should be aiming for that won't

512
00:19:37,380 --> 00:19:39,980
be verifiable just using a sort of

513
00:19:39,980 --> 00:19:43,320
closed closed up penetration test where

514
00:19:43,320 --> 00:19:44,370
the test doesn't know what's going

515
00:19:44,370 --> 00:19:45,720
behind the scenes if they want to check

516
00:19:45,720 --> 00:19:49,080
the compliance level two they will have

517
00:19:49,080 --> 00:19:50,340
to speak to developers they will have to

518
00:19:50,340 --> 00:19:51,920
understand how the applications working

519
00:19:51,920 --> 00:19:55,920
behind the scenes and we very much do

520
00:19:55,920 --> 00:19:57,070
say that

521
00:19:57,070 --> 00:19:58,660
it encourage companies to move in this

522
00:19:58,660 --> 00:20:01,390
direction anyway to stop doing the black

523
00:20:01,390 --> 00:20:04,300
box penetration testing where the tester

524
00:20:04,300 --> 00:20:05,200
doesn't know what's going on but really

525
00:20:05,200 --> 00:20:06,850
moved to this sort of white box or gray

526
00:20:06,850 --> 00:20:10,030
box hybrid reviews where the tester can

527
00:20:10,030 --> 00:20:11,170
see what's going on behind the scenes

528
00:20:11,170 --> 00:20:12,430
they can use that to tailor their

529
00:20:12,430 --> 00:20:14,110
testing it means they're not only you're

530
00:20:14,110 --> 00:20:15,670
gonna get more value the tester isn't

531
00:20:15,670 --> 00:20:16,870
discovering things that you already know

532
00:20:16,870 --> 00:20:20,260
but also they can verify that these sort

533
00:20:20,260 --> 00:20:21,520
of level two requirements are being

534
00:20:21,520 --> 00:20:24,660
addressed and have been implemented

535
00:20:24,660 --> 00:20:26,890
we've talked about it let's have a look

536
00:20:26,890 --> 00:20:30,400
at it this is an example from section

537
00:20:30,400 --> 00:20:33,850
four access control and so you can see

538
00:20:33,850 --> 00:20:36,430
starts off with a overall heading about

539
00:20:36,430 --> 00:20:39,190
what is the what does this section goes

540
00:20:39,190 --> 00:20:41,260
into a little bit detail about what's

541
00:20:41,260 --> 00:20:42,460
going to be control covered in this

542
00:20:42,460 --> 00:20:44,110
section and what are the high-level aims

543
00:20:44,110 --> 00:20:46,630
of this section and then into the

544
00:20:46,630 --> 00:20:49,120
different subsections within the section

545
00:20:49,120 --> 00:20:50,530
again previous deals will want each

546
00:20:50,530 --> 00:20:52,540
section was one long list of controls

547
00:20:52,540 --> 00:20:53,890
we've tried to split it up a little bit

548
00:20:53,890 --> 00:20:55,060
make it a little bit easier to navigate

549
00:20:55,060 --> 00:20:57,310
around and then we end up with these are

550
00:20:57,310 --> 00:21:02,140
XY dot Z style number numbering system

551
00:21:02,140 --> 00:21:03,550
so it's easy to see okay this is from

552
00:21:03,550 --> 00:21:06,940
section four subsection one it makes it

553
00:21:06,940 --> 00:21:08,740
a lot easier to figure out okay where do

554
00:21:08,740 --> 00:21:09,910
I need to look to find this particular

555
00:21:09,910 --> 00:21:12,610
control where are my in the inside the

556
00:21:12,610 --> 00:21:15,520
standard we've made a big effort to make

557
00:21:15,520 --> 00:21:17,350
sure that these descriptions of the

558
00:21:17,350 --> 00:21:18,820
controls descriptions and requirements

559
00:21:18,820 --> 00:21:21,820
are as to the point and sort of short

560
00:21:21,820 --> 00:21:24,490
and focused as possible we don't want to

561
00:21:24,490 --> 00:21:26,530
try and incorporate loads and loads of

562
00:21:26,530 --> 00:21:30,070
requirements into one control if they're

563
00:21:30,070 --> 00:21:32,350
if I had a one one criticism of the NIST

564
00:21:32,350 --> 00:21:33,400
standard that I was talking about

565
00:21:33,400 --> 00:21:37,270
earlier it's very much lots of long

566
00:21:37,270 --> 00:21:38,260
paragraphs there's all sorts of

567
00:21:38,260 --> 00:21:39,430
different requirements inside them you

568
00:21:39,430 --> 00:21:41,260
have to sort of dissect that standard to

569
00:21:41,260 --> 00:21:43,090
pull them out here the idea is that's

570
00:21:43,090 --> 00:21:45,670
those controls are very much split out

571
00:21:45,670 --> 00:21:49,510
into individual individual controls

572
00:21:49,510 --> 00:21:50,620
individual requirements so you can

573
00:21:50,620 --> 00:21:54,280
address one at a time here we can see an

574
00:21:54,280 --> 00:21:56,560
indicator of which level the control is

575
00:21:56,560 --> 00:21:59,500
relevant for maybe it's this these

576
00:21:59,500 --> 00:22:00,550
requirements are irrelevant for all

577
00:22:00,550 --> 00:22:01,990
three levels level one level two and

578
00:22:01,990 --> 00:22:04,030
level three and if it was only a level

579
00:22:04,030 --> 00:22:05,560
two requirement and we would wouldn't

580
00:22:05,560 --> 00:22:07,990
see a tick here we just see a tick over

581
00:22:07,990 --> 00:22:10,770
here for a level two and level three

582
00:22:10,770 --> 00:22:13,620
and here we see the CW mapping the

583
00:22:13,620 --> 00:22:15,770
common weakness enumeration mapping

584
00:22:15,770 --> 00:22:18,600
we've tried on the best efforts basis to

585
00:22:18,600 --> 00:22:19,980
do that to source a look here's the

586
00:22:19,980 --> 00:22:23,280
control and here's the weakness this

587
00:22:23,280 --> 00:22:24,900
control is trying to address but

588
00:22:24,900 --> 00:22:26,760
certainly we do still see some

589
00:22:26,760 --> 00:22:27,900
discrepancies there and if you've got

590
00:22:27,900 --> 00:22:29,790
feedback about that with a definite in

591
00:22:29,790 --> 00:22:31,860
hearing about suggested mappings or

592
00:22:31,860 --> 00:22:35,000
improve mappings for here and little

593
00:22:35,000 --> 00:22:37,590
subtly over here it's difficult to see

594
00:22:37,590 --> 00:22:40,410
but this is them this indicates that

595
00:22:40,410 --> 00:22:43,170
this particular control also sits in the

596
00:22:43,170 --> 00:22:45,179
OS for top ten proactive controls

597
00:22:45,179 --> 00:22:47,550
projects seeing as how the proactive

598
00:22:47,550 --> 00:22:49,050
controls project sort the starting point

599
00:22:49,050 --> 00:22:50,340
of all of this we wanted to make sure

600
00:22:50,340 --> 00:22:51,870
that there's that cross-reference back

601
00:22:51,870 --> 00:22:58,230
to it as well so lots of requirements

602
00:22:58,230 --> 00:23:02,429
lots of sections I'm going to talk

603
00:23:02,429 --> 00:23:05,400
through all of them individually in

604
00:23:05,400 --> 00:23:07,260
detail I do also want to cut touch on

605
00:23:07,260 --> 00:23:09,590
what to eat with each one's covers

606
00:23:09,590 --> 00:23:12,890
version one version one section one

607
00:23:12,890 --> 00:23:14,640
architecture and just sort of overall

608
00:23:14,640 --> 00:23:17,370
controls section to covering

609
00:23:17,370 --> 00:23:19,290
authentication how you make sure that

610
00:23:19,290 --> 00:23:21,390
the user is indeed allowed to access

611
00:23:21,390 --> 00:23:24,660
this application section three session

612
00:23:24,660 --> 00:23:27,300
management how you deal with the the

613
00:23:27,300 --> 00:23:28,740
users authenticate a session once

614
00:23:28,740 --> 00:23:30,750
they've successfully authenticated how

615
00:23:30,750 --> 00:23:33,320
you make sure they that their session is

616
00:23:33,320 --> 00:23:37,740
secured and ended appropriately access

617
00:23:37,740 --> 00:23:40,470
control dealing with permissions which

618
00:23:40,470 --> 00:23:41,910
users should have access to which area

619
00:23:41,910 --> 00:23:43,320
of application or which functions in the

620
00:23:43,320 --> 00:23:46,830
application section 5 violation

621
00:23:46,830 --> 00:23:49,410
sanitization and encoding talking about

622
00:23:49,410 --> 00:23:52,290
how we deal with potential malicious

623
00:23:52,290 --> 00:23:53,910
strings or malicious payloads that an

624
00:23:53,910 --> 00:23:56,370
attacker might try and send into an

625
00:23:56,370 --> 00:24:00,210
application stores cryptography think

626
00:24:00,210 --> 00:24:01,770
about how we protect data at rest

627
00:24:01,770 --> 00:24:03,809
through encryption and make sure that

628
00:24:03,809 --> 00:24:05,220
when that data is stored within the

629
00:24:05,220 --> 00:24:07,610
application that's being stored securely

630
00:24:07,610 --> 00:24:10,650
error handling and logging making sure

631
00:24:10,650 --> 00:24:12,960
that the application isn't disclosing

632
00:24:12,960 --> 00:24:14,640
sensitive information through errors or

633
00:24:14,640 --> 00:24:17,100
it's not failing in an insecure ways or

634
00:24:17,100 --> 00:24:18,950
failing open but rather failing secure

635
00:24:18,950 --> 00:24:21,660
and logging to make sure that's when

636
00:24:21,660 --> 00:24:22,919
suspicious activity is taking place

637
00:24:22,919 --> 00:24:24,179
that's yeah

638
00:24:24,179 --> 00:24:25,889
is noticing and that idea its alerting

639
00:24:25,889 --> 00:24:29,399
someone dates protection it's more about

640
00:24:29,399 --> 00:24:32,340
privacy protesters to incorporate to the

641
00:24:32,340 --> 00:24:33,419
application to make sure the data

642
00:24:33,419 --> 00:24:35,460
privacy and individuals privacy is being

643
00:24:35,460 --> 00:24:39,299
respected communications looking at how

644
00:24:39,299 --> 00:24:41,369
data is communicated between parts of

645
00:24:41,369 --> 00:24:42,690
the application or between the end user

646
00:24:42,690 --> 00:24:45,090
and the application itself make sure

647
00:24:45,090 --> 00:24:48,059
that's done in a secure way malicious

648
00:24:48,059 --> 00:24:49,499
codes that could be introduced truth

649
00:24:49,499 --> 00:24:51,360
party libraries or through malicious

650
00:24:51,360 --> 00:24:54,600
developers or through end-users

651
00:24:54,600 --> 00:24:57,539
themselves our business logic making

652
00:24:57,539 --> 00:24:59,309
sure that business logic is correctly

653
00:24:59,309 --> 00:25:01,679
enforced in the application and that an

654
00:25:01,679 --> 00:25:04,470
end user can't start manipulating the

655
00:25:04,470 --> 00:25:06,179
application to do things they shouldn't

656
00:25:06,179 --> 00:25:07,529
be able to do based on the way the

657
00:25:07,529 --> 00:25:10,499
organization works files and resources

658
00:25:10,499 --> 00:25:13,710
how the application handles these API

659
00:25:13,710 --> 00:25:16,529
and web services specific controls that

660
00:25:16,529 --> 00:25:17,820
are particularly relevant for

661
00:25:17,820 --> 00:25:20,149
applications that use these

662
00:25:20,149 --> 00:25:22,529
configuration configuration of how the

663
00:25:22,529 --> 00:25:23,519
application is configured how the

664
00:25:23,519 --> 00:25:24,779
deployment is configured how the

665
00:25:24,779 --> 00:25:27,049
deployment environment is configured

666
00:25:27,049 --> 00:25:29,879
again making sure those settings are

667
00:25:29,879 --> 00:25:32,129
secure and deployed in a applications

668
00:25:32,129 --> 00:25:35,940
are deployed in a hardened way so yeah I

669
00:25:35,940 --> 00:25:37,409
could spend a long time talking about

670
00:25:37,409 --> 00:25:40,409
all of these individually but I think

671
00:25:40,409 --> 00:25:42,809
I've given a high-level idea of what's

672
00:25:42,809 --> 00:25:44,220
in each one so now I want to move over

673
00:25:44,220 --> 00:25:46,559
and talk just pull out some interesting

674
00:25:46,559 --> 00:25:48,779
areas from across the stand there just

675
00:25:48,779 --> 00:25:52,259
saw some specific ideas sort of diving

676
00:25:52,259 --> 00:25:53,340
into ok what makes this down and

677
00:25:53,340 --> 00:25:55,110
interesting what makes it relevant or as

678
00:25:55,110 --> 00:25:58,350
I like to call it the OS ASVs top 10

679
00:25:58,350 --> 00:26:00,779
cool features everyone loves a nice top

680
00:26:00,779 --> 00:26:04,009
10 so here I made a top 10 about the SBS

681
00:26:04,009 --> 00:26:10,830
so let's dive into that so I talked a

682
00:26:10,830 --> 00:26:12,269
little bit about section 1 the

683
00:26:12,269 --> 00:26:14,570
architecture section this underwent a

684
00:26:14,570 --> 00:26:18,450
big change a big modification where

685
00:26:18,450 --> 00:26:19,950
we've really changed around the

686
00:26:19,950 --> 00:26:23,730
structure made it a lot more usable if

687
00:26:23,730 --> 00:26:25,679
we see jumping back to the sections for

688
00:26:25,679 --> 00:26:27,509
a second lots of different sections in

689
00:26:27,509 --> 00:26:30,059
the SPS the idea behind section 1 is it

690
00:26:30,059 --> 00:26:31,769
should provide the underpinning for all

691
00:26:31,769 --> 00:26:34,049
of these other sections all these other

692
00:26:34,049 --> 00:26:35,570
areas so it should provide the

693
00:26:35,570 --> 00:26:37,470
architecture level considerations that

694
00:26:37,470 --> 00:26:37,920
you want

695
00:26:37,920 --> 00:26:39,600
in order to gather implement the

696
00:26:39,600 --> 00:26:41,760
controls in these other sections in the

697
00:26:41,760 --> 00:26:46,020
best possible way it also talks about

698
00:26:46,020 --> 00:26:49,590
other sort of general level controls you

699
00:26:49,590 --> 00:26:52,050
want to think about ideas around secure

700
00:26:52,050 --> 00:26:53,070
stuff what software development

701
00:26:53,070 --> 00:26:55,070
lifecycle ideas around threat modeling

702
00:26:55,070 --> 00:26:57,570
basically what you need to design and

703
00:26:57,570 --> 00:27:01,050
build security and from the start at the

704
00:27:01,050 --> 00:27:03,510
same time we recognize that you can't

705
00:27:03,510 --> 00:27:05,460
always start from the very beginning you

706
00:27:05,460 --> 00:27:06,810
can't always start at the beginning of a

707
00:27:06,810 --> 00:27:08,100
development process maybe you need to

708
00:27:08,100 --> 00:27:09,540
come in in the middle and start using

709
00:27:09,540 --> 00:27:12,390
the SPS there because of that these

710
00:27:12,390 --> 00:27:15,510
controls are only for levels 2 & 3 we

711
00:27:15,510 --> 00:27:17,040
haven't made any level 1 controls in

712
00:27:17,040 --> 00:27:18,270
this area because we recognized that

713
00:27:18,270 --> 00:27:19,770
first of all is generally quite

714
00:27:19,770 --> 00:27:21,900
difficult to discover them from

715
00:27:21,900 --> 00:27:25,560
penetration testing and secondly they

716
00:27:25,560 --> 00:27:27,210
they tend to be things you need to be

717
00:27:27,210 --> 00:27:28,320
thinking about from the beginning but

718
00:27:28,320 --> 00:27:30,030
certainly once you get to level 2 and

719
00:27:30,030 --> 00:27:31,260
you want to start out making sure that

720
00:27:31,260 --> 00:27:33,750
this these security processes start

721
00:27:33,750 --> 00:27:35,430
coming from the start that's what we

722
00:27:35,430 --> 00:27:36,930
want to start making sure that these

723
00:27:36,930 --> 00:27:39,090
controls are being addressed and being

724
00:27:39,090 --> 00:27:42,450
implemented but hopefully if level 1 we

725
00:27:42,450 --> 00:27:44,370
leave them out so it's not to to higher

726
00:27:44,370 --> 00:27:46,200
bar to meet you know just get started

727
00:27:46,200 --> 00:27:53,490
level 1 number 2 mr. Liman so we talked

728
00:27:53,490 --> 00:27:54,660
about how that's a really great

729
00:27:54,660 --> 00:27:56,160
forward-looking standard I'm gonna give

730
00:27:56,160 --> 00:27:59,100
a an example of that here because we're

731
00:27:59,100 --> 00:28:00,870
basically completely aligned with the

732
00:28:00,870 --> 00:28:02,640
requirements of nist with the exception

733
00:28:02,640 --> 00:28:05,070
of passwords where nist still say a

734
00:28:05,070 --> 00:28:07,710
character password we insisted on moving

735
00:28:07,710 --> 00:28:09,900
up to a 12 character password because

736
00:28:09,900 --> 00:28:11,910
the difference in cracking time between

737
00:28:11,910 --> 00:28:13,470
8 characters and 12 characters is just

738
00:28:13,470 --> 00:28:15,570
enough that it makes it important enough

739
00:28:15,570 --> 00:28:17,790
to be worthwhile and also nicely ties

740
00:28:17,790 --> 00:28:19,410
into the way the other the other

741
00:28:19,410 --> 00:28:20,910
controls are going because here we see

742
00:28:20,910 --> 00:28:24,420
we explicitly say you must not implement

743
00:28:24,420 --> 00:28:26,460
password complexity rules don't make the

744
00:28:26,460 --> 00:28:28,650
users choose big letter small letter

745
00:28:28,650 --> 00:28:30,450
symbol number because you're just gonna

746
00:28:30,450 --> 00:28:33,660
end up with password 1 exclamation mark

747
00:28:33,660 --> 00:28:36,900
or something similarly unpleasant and

748
00:28:36,900 --> 00:28:39,980
similarly we say do not incorporate

749
00:28:39,980 --> 00:28:42,210
password rotation don't make the users

750
00:28:42,210 --> 00:28:43,440
change their passwords once they've got

751
00:28:43,440 --> 00:28:44,640
a password because again you're gonna

752
00:28:44,640 --> 00:28:46,080
see parts with one exclamation mark

753
00:28:46,080 --> 00:28:48,240
password - exclamation mark potter -

754
00:28:48,240 --> 00:28:51,539
exclamation mark and often you

755
00:28:51,539 --> 00:28:53,369
realized that even if a password expired

756
00:28:53,369 --> 00:28:54,450
you can figure out what the current

757
00:28:54,450 --> 00:28:57,539
password is just by looking at previous

758
00:28:57,539 --> 00:29:00,929
passwords and rolling forwards the

759
00:29:00,929 --> 00:29:02,460
number of rotations that user would have

760
00:29:02,460 --> 00:29:09,899
had to do and we also very much say they

761
00:29:09,899 --> 00:29:11,039
have to ensure that the paste

762
00:29:11,039 --> 00:29:13,350
functionality is disabled is enabled

763
00:29:13,350 --> 00:29:14,909
sorry that it should be possible to

764
00:29:14,909 --> 00:29:17,580
paste in passwords we still see

765
00:29:17,580 --> 00:29:19,109
applications unfortunately where for

766
00:29:19,109 --> 00:29:21,899
some reason that supposedly is based in

767
00:29:21,899 --> 00:29:22,979
security that doesn't really make any

768
00:29:22,979 --> 00:29:24,629
sense you can't paste a password into

769
00:29:24,629 --> 00:29:26,909
the application that means it breaks

770
00:29:26,909 --> 00:29:29,099
password managers it breaks more secure

771
00:29:29,099 --> 00:29:30,419
ways of storing passwords and that's

772
00:29:30,419 --> 00:29:32,009
really where all these requirements are

773
00:29:32,009 --> 00:29:34,229
going saying look the only really secure

774
00:29:34,229 --> 00:29:35,580
way of dealing with passwords nowadays

775
00:29:35,580 --> 00:29:37,409
for the end user is to use a password

776
00:29:37,409 --> 00:29:39,239
manager that generates you a long unique

777
00:29:39,239 --> 00:29:42,929
complicated password and therefore all

778
00:29:42,929 --> 00:29:44,820
these controls are just getting in the

779
00:29:44,820 --> 00:29:45,960
way I thought ultimately just want to be

780
00:29:45,960 --> 00:29:48,059
using a password manager storing it

781
00:29:48,059 --> 00:29:50,549
securely and then you know pasting that

782
00:29:50,549 --> 00:29:52,379
in as needed the password manager is

783
00:29:52,379 --> 00:29:54,960
very good at creating long passwords

784
00:29:54,960 --> 00:29:59,460
that you can use this purpose so yeah we

785
00:29:59,460 --> 00:30:01,320
think that's definitely the way to go

786
00:30:01,320 --> 00:30:02,940
it's backed up by the nice guidance and

787
00:30:02,940 --> 00:30:04,080
hopefully we'll start seeing

788
00:30:04,080 --> 00:30:07,340
applications pushing in that direction

789
00:30:08,299 --> 00:30:12,809
still around passwords the we've tried

790
00:30:12,809 --> 00:30:15,179
to put practices in here controls in

791
00:30:15,179 --> 00:30:16,320
here that we think you know are

792
00:30:16,320 --> 00:30:20,609
definitely useful for for organizations

793
00:30:20,609 --> 00:30:22,440
before useful for applications based on

794
00:30:22,440 --> 00:30:24,059
the actual attacks not just theoretical

795
00:30:24,059 --> 00:30:25,529
attacks that might happen but really

796
00:30:25,529 --> 00:30:27,359
here the actual practical attacks that

797
00:30:27,359 --> 00:30:28,649
happening in the wild and again this

798
00:30:28,649 --> 00:30:31,619
comes from NIST as well so I apologize

799
00:30:31,619 --> 00:30:33,119
for the length of this particular

800
00:30:33,119 --> 00:30:35,369
requirements because we wanted to give a

801
00:30:35,369 --> 00:30:39,330
few options here but also clarify making

802
00:30:39,330 --> 00:30:40,710
sure this is a secure mechanism

803
00:30:40,710 --> 00:30:42,419
basically the idea behind this

804
00:30:42,419 --> 00:30:45,690
particular control is saying look most

805
00:30:45,690 --> 00:30:48,109
preachers nowadays are based on

806
00:30:48,109 --> 00:30:52,080
attackers taking previously breached at

807
00:30:52,080 --> 00:30:53,940
information infused combinations of

808
00:30:53,940 --> 00:30:56,279
usernames and passwords and trying those

809
00:30:56,279 --> 00:30:58,349
against other applications so if we know

810
00:30:58,349 --> 00:31:00,210
that a password the user has tried to

811
00:31:00,210 --> 00:31:03,119
use is very weak it's in one of the top

812
00:31:03,119 --> 00:31:05,280
1,000 top 10,000 most common part

813
00:31:05,280 --> 00:31:07,950
words or we can use an API to discover

814
00:31:07,950 --> 00:31:09,600
that this is a password that's appeared

815
00:31:09,600 --> 00:31:11,550
in a previous breach then we want to

816
00:31:11,550 --> 00:31:12,980
tell the user don't use that password

817
00:31:12,980 --> 00:31:15,360
the way that most accounts have reached

818
00:31:15,360 --> 00:31:17,370
now using by based on common passwords

819
00:31:17,370 --> 00:31:19,320
or previously breached passwords so this

820
00:31:19,320 --> 00:31:20,640
control says don't let the user use that

821
00:31:20,640 --> 00:31:21,660
pass but make them choose a password

822
00:31:21,660 --> 00:31:23,430
that hasn't approved had never reach

823
00:31:23,430 --> 00:31:26,520
isn't a weak password and that way we

824
00:31:26,520 --> 00:31:28,620
can effectively sidestep this very

825
00:31:28,620 --> 00:31:30,390
dangerous credential stuffing attacks

826
00:31:30,390 --> 00:31:32,610
where the tackles will take previous

827
00:31:32,610 --> 00:31:33,990
data dumps previous combinations of

828
00:31:33,990 --> 00:31:35,280
usernames and passwords and try them

829
00:31:35,280 --> 00:31:37,320
against the application so again try to

830
00:31:37,320 --> 00:31:38,910
make sure that this guidance is really

831
00:31:38,910 --> 00:31:41,760
providing useful practices that will

832
00:31:41,760 --> 00:31:43,380
improve the level of security of the

833
00:31:43,380 --> 00:31:49,530
application we try and focus on not just

834
00:31:49,530 --> 00:31:51,300
today's controls but also tomorrow's

835
00:31:51,300 --> 00:31:53,810
controls so imagine anyone who's done

836
00:31:53,810 --> 00:31:55,860
spend some time with the security

837
00:31:55,860 --> 00:31:57,330
application security where applications

838
00:31:57,330 --> 00:32:00,330
we familiar with the secure and HTTP

839
00:32:00,330 --> 00:32:02,940
only attributes to increase the security

840
00:32:02,940 --> 00:32:05,400
of cookies in an application hopefully

841
00:32:05,400 --> 00:32:07,200
also now are familiar with the same site

842
00:32:07,200 --> 00:32:09,920
attributes which provides additional

843
00:32:09,920 --> 00:32:11,730
protection against cross-site request

844
00:32:11,730 --> 00:32:15,930
forgery but I wonder if you are familiar

845
00:32:15,930 --> 00:32:17,670
with this requirement here around the

846
00:32:17,670 --> 00:32:20,610
host prefix I certainly wasn't familiar

847
00:32:20,610 --> 00:32:23,310
with it when I first came into the into

848
00:32:23,310 --> 00:32:25,080
the SPS and looks at the SPS I had to

849
00:32:25,080 --> 00:32:28,940
look it up and find out what this was

850
00:32:28,940 --> 00:32:34,200
turns out there is an RFC a internet

851
00:32:34,200 --> 00:32:37,590
draft for an additional cookie security

852
00:32:37,590 --> 00:32:40,080
technique where if you give the cookie

853
00:32:40,080 --> 00:32:41,850
name a particular prefix the underscore

854
00:32:41,850 --> 00:32:45,330
underscore host - prefix the browser

855
00:32:45,330 --> 00:32:46,740
will automatically know to apply

856
00:32:46,740 --> 00:32:49,050
particular security controls to this

857
00:32:49,050 --> 00:32:52,500
cookie so that means that we don't have

858
00:32:52,500 --> 00:32:54,180
to worry about okay if we're applying a

859
00:32:54,180 --> 00:32:56,070
cookie flag here we apply a cookie flag

860
00:32:56,070 --> 00:32:58,470
later on or we as it's being done the

861
00:32:58,470 --> 00:32:59,550
right places has been missed off

862
00:32:59,550 --> 00:33:01,380
somewhere you can just give the cookie

863
00:33:01,380 --> 00:33:02,490
that particular name and the browser

864
00:33:02,490 --> 00:33:03,690
will automatically treat it in as

865
00:33:03,690 --> 00:33:07,530
possible secure way and that's a really

866
00:33:07,530 --> 00:33:08,970
nice sort of capsule control that

867
00:33:08,970 --> 00:33:10,890
doesn't cost cost very much and some of

868
00:33:10,890 --> 00:33:12,690
the significant increases the security

869
00:33:12,690 --> 00:33:14,070
around cookies and the assurance that

870
00:33:14,070 --> 00:33:15,360
cookie security is being applied

871
00:33:15,360 --> 00:33:18,929
correctly it is still a draft RS

872
00:33:18,929 --> 00:33:20,940
but I did actually reach out to the

873
00:33:20,940 --> 00:33:22,529
author at some point recently and asked

874
00:33:22,529 --> 00:33:24,179
you know is this definitely is this can

875
00:33:24,179 --> 00:33:26,039
be released in his I said well working

876
00:33:26,039 --> 00:33:27,989
on releasing it in the meantime and I

877
00:33:27,989 --> 00:33:30,089
quote it is shipping in practically

878
00:33:30,089 --> 00:33:32,580
every browser so even though it's a

879
00:33:32,580 --> 00:33:32,940
draft

880
00:33:32,940 --> 00:33:34,589
RFC the browser's are using it and

881
00:33:34,589 --> 00:33:36,029
that's what counts that the control is

882
00:33:36,029 --> 00:33:37,259
implemented in the browsers this is

883
00:33:37,259 --> 00:33:38,279
something you can use today the

884
00:33:38,279 --> 00:33:40,019
browser's will respect it I'll configure

885
00:33:40,019 --> 00:33:41,999
the cookies properly and you can be sure

886
00:33:41,999 --> 00:33:43,499
that the cookies are configured in the

887
00:33:43,499 --> 00:33:45,929
most secure way possible so it may be

888
00:33:45,929 --> 00:33:46,830
something that we weren't familiar with

889
00:33:46,830 --> 00:33:49,229
already but certainly something that a

890
00:33:49,229 --> 00:33:51,539
new protection that can add security to

891
00:33:51,539 --> 00:33:58,679
the overall process so a lot of the

892
00:33:58,679 --> 00:34:00,299
applications we see nowadays when we're

893
00:34:00,299 --> 00:34:02,399
assessing applications or performing

894
00:34:02,399 --> 00:34:05,279
security tests or security reviews they

895
00:34:05,279 --> 00:34:09,089
don't really have the old client-server

896
00:34:09,089 --> 00:34:11,039
model where there's a client or a thick

897
00:34:11,039 --> 00:34:12,629
client or browser and there's a server

898
00:34:12,629 --> 00:34:15,649
many of them are using micro services or

899
00:34:15,649 --> 00:34:19,619
even in service functions to to operate

900
00:34:19,619 --> 00:34:21,480
and previously this standard talked

901
00:34:21,480 --> 00:34:23,760
about server side we've tried to move

902
00:34:23,760 --> 00:34:25,020
away from the concept of server side

903
00:34:25,020 --> 00:34:26,339
because often either there isn't a

904
00:34:26,339 --> 00:34:27,599
server or there are lots lots of

905
00:34:27,599 --> 00:34:29,010
different services and there wasn't so

906
00:34:29,010 --> 00:34:31,289
much as service lis thinking of so we've

907
00:34:31,289 --> 00:34:33,418
tried to use expression trusted service

908
00:34:33,418 --> 00:34:35,510
layer so here we're talking about how

909
00:34:35,510 --> 00:34:37,949
accident assess access is controlled and

910
00:34:37,949 --> 00:34:40,859
how accesses and control is enforced so

911
00:34:40,859 --> 00:34:43,739
instead of saying look let's put these

912
00:34:43,739 --> 00:34:46,710
controls at the server side layer which

913
00:34:46,710 --> 00:34:47,969
maybe doesn't exist anymore saying look

914
00:34:47,969 --> 00:34:51,059
put it a trusted layer within the

915
00:34:51,059 --> 00:34:54,089
relevant service so if this is a service

916
00:34:54,089 --> 00:34:55,500
that allows database access check

917
00:34:55,500 --> 00:34:57,149
authorization or access database there

918
00:34:57,149 --> 00:34:58,260
if this is a different service that

919
00:34:58,260 --> 00:34:59,960
allows file access check the

920
00:34:59,960 --> 00:35:02,309
authorization there but the idea is to

921
00:35:02,309 --> 00:35:03,779
do it at the right service well it makes

922
00:35:03,779 --> 00:35:06,359
sense but also do it make sure that

923
00:35:06,359 --> 00:35:08,549
services trusted service the the end

924
00:35:08,549 --> 00:35:11,130
user can't interfere with the idea being

925
00:35:11,130 --> 00:35:13,049
that using this terminology we fit in to

926
00:35:13,049 --> 00:35:14,760
more modern applications as well as the

927
00:35:14,760 --> 00:35:17,089
older applications

928
00:35:19,910 --> 00:35:23,660
vulnerabilities today so server side

929
00:35:23,660 --> 00:35:25,760
request forgery SS RF is there a big

930
00:35:25,760 --> 00:35:28,010
concern right now we saw that I think

931
00:35:28,010 --> 00:35:29,569
for the most famously most recently in

932
00:35:29,569 --> 00:35:31,549
the capital one breach where the

933
00:35:31,549 --> 00:35:35,119
attacker used that to send a an HTTP

934
00:35:35,119 --> 00:35:38,750
request as the the server side and to

935
00:35:38,750 --> 00:35:42,829
send a request to the AWS metadata

936
00:35:42,829 --> 00:35:45,319
service to pull out sensitive keys it's

937
00:35:45,319 --> 00:35:46,579
the hot topic we see in lots of

938
00:35:46,579 --> 00:35:50,660
different applications but back in 2017

939
00:35:50,660 --> 00:35:52,160
when the OS top 10 was released it was

940
00:35:52,160 --> 00:35:53,960
sort of less known about it was less of

941
00:35:53,960 --> 00:35:55,569
a big deal and it's not in there but

942
00:35:55,569 --> 00:35:57,650
people are concerned about it now that

943
00:35:57,650 --> 00:36:00,230
for example Andrew Vander stock who runs

944
00:36:00,230 --> 00:36:02,140
the OS top 10 project

945
00:36:02,140 --> 00:36:04,880
he actually said look should we release

946
00:36:04,880 --> 00:36:06,680
a point release to the OS top 10 to

947
00:36:06,680 --> 00:36:08,569
include SS RF because we see this as

948
00:36:08,569 --> 00:36:11,150
that important we didn't do that in the

949
00:36:11,150 --> 00:36:12,980
end that it's other illustrates why

950
00:36:12,980 --> 00:36:15,020
having this sort of wide standard that

951
00:36:15,020 --> 00:36:17,119
covers all different situations I was a

952
00:36:17,119 --> 00:36:18,980
big benefit because you know proved

953
00:36:18,980 --> 00:36:21,349
already from fall from 4.0 in previous

954
00:36:21,349 --> 00:36:25,099
versions we had this these protections

955
00:36:25,099 --> 00:36:26,720
in place for making sure that SSR F

956
00:36:26,720 --> 00:36:28,220
doesn't come into the application and

957
00:36:28,220 --> 00:36:31,430
it's something that isn't as easy when

958
00:36:31,430 --> 00:36:32,839
you're restricted to okay what are the

959
00:36:32,839 --> 00:36:34,880
most critical applications at any point

960
00:36:34,880 --> 00:36:36,410
in time when we really serve that

961
00:36:36,410 --> 00:36:38,410
particular version of the projects so

962
00:36:38,410 --> 00:36:40,549
that's definitely a big benefit that

963
00:36:40,549 --> 00:36:43,160
hopefully it's not just covering the

964
00:36:43,160 --> 00:36:44,510
most critical applications at the point

965
00:36:44,510 --> 00:36:45,829
as the most critical vulnerabilities

966
00:36:45,829 --> 00:36:48,230
when the project was released but it's

967
00:36:48,230 --> 00:36:51,289
covering okay here is almost yeah all

968
00:36:51,289 --> 00:36:52,760
the vent quit all the potential

969
00:36:52,760 --> 00:36:54,710
vulnerabilities and there's an answer

970
00:36:54,710 --> 00:36:59,299
somewhere in this standard unless you've

971
00:36:59,299 --> 00:37:01,940
been living under a rock for a long time

972
00:37:01,940 --> 00:37:04,099
the you'll be familiar with the current

973
00:37:04,099 --> 00:37:05,480
trend towards data protection data

974
00:37:05,480 --> 00:37:08,980
privacy be that the GDP are I get in

975
00:37:08,980 --> 00:37:12,140
Europe or the regulations that are

976
00:37:12,140 --> 00:37:13,910
coming up in the state of California in

977
00:37:13,910 --> 00:37:16,880
the US the data protection they crew C

978
00:37:16,880 --> 00:37:19,339
is a big topic and the SPS has a whole

979
00:37:19,339 --> 00:37:21,859
section dedicated to that so a lot of

980
00:37:21,859 --> 00:37:23,150
these controls are on sort of

981
00:37:23,150 --> 00:37:24,619
traditional security controls but

982
00:37:24,619 --> 00:37:25,520
they're really sort of wider

983
00:37:25,520 --> 00:37:27,589
considerations about how do you handle

984
00:37:27,589 --> 00:37:29,900
data how do you process data

985
00:37:29,900 --> 00:37:32,150
the idea being I can't promise the ovg

986
00:37:32,150 --> 00:37:33,790
DVR compliant if you can find with all

987
00:37:33,790 --> 00:37:35,920
these butts you should definitely be

988
00:37:35,920 --> 00:37:37,090
well on the way it should definitely be

989
00:37:37,090 --> 00:37:38,140
putting in the right direction in terms

990
00:37:38,140 --> 00:37:41,560
of how you address data privacy

991
00:37:41,560 --> 00:37:42,880
notification how you deal with sensitive

992
00:37:42,880 --> 00:37:45,730
data and how you make sure that your

993
00:37:45,730 --> 00:37:47,710
end-users can control their data and

994
00:37:47,710 --> 00:37:49,420
indicate how they want their data to be

995
00:37:49,420 --> 00:37:51,940
processed so that's a really useful

996
00:37:51,940 --> 00:37:55,500
section to cover those sort of issues

997
00:37:56,460 --> 00:38:01,810
talking about the sort of less obvious

998
00:38:01,810 --> 00:38:04,690
less well-known ideas or away from just

999
00:38:04,690 --> 00:38:07,090
the top 10 most critical here's another

1000
00:38:07,090 --> 00:38:09,370
interesting example of putting in a

1001
00:38:09,370 --> 00:38:11,650
control that's maybe not obvious and

1002
00:38:11,650 --> 00:38:14,380
immediately but still quite important so

1003
00:38:14,380 --> 00:38:18,040
this control talks about using the

1004
00:38:18,040 --> 00:38:21,640
application in an allowed way in a way

1005
00:38:21,640 --> 00:38:22,960
that where the user has permissions to

1006
00:38:22,960 --> 00:38:24,910
do that but maybe at a rate you're a

1007
00:38:24,910 --> 00:38:26,920
number of requests per minute number of

1008
00:38:26,920 --> 00:38:28,960
attempts per minute that's not expected

1009
00:38:28,960 --> 00:38:30,580
for the application so if you think for

1010
00:38:30,580 --> 00:38:32,650
example a call center let's say the call

1011
00:38:32,650 --> 00:38:34,780
center employee is taking calls from

1012
00:38:34,780 --> 00:38:36,460
customers and they can take calls from

1013
00:38:36,460 --> 00:38:37,990
10 customers in an hour

1014
00:38:37,990 --> 00:38:39,970
so if they're opening 10 customer

1015
00:38:39,970 --> 00:38:41,530
records they're making a request for 10

1016
00:38:41,530 --> 00:38:43,120
customer details and now our that makes

1017
00:38:43,120 --> 00:38:44,860
sense that's about right but if

1018
00:38:44,860 --> 00:38:45,910
something we see that they're requesting

1019
00:38:45,910 --> 00:38:48,070
a hundred customers now a thousand

1020
00:38:48,070 --> 00:38:50,740
customers an hour maybe that's data that

1021
00:38:50,740 --> 00:38:52,540
they are technically authorized to see

1022
00:38:52,540 --> 00:38:54,340
as part of their job but certainly not

1023
00:38:54,340 --> 00:38:55,750
of that sort of volume not of that sort

1024
00:38:55,750 --> 00:38:56,590
of rate and that would potentially

1025
00:38:56,590 --> 00:38:59,890
indicate that something untoward is

1026
00:38:59,890 --> 00:39:03,370
going on and again we're trying to come

1027
00:39:03,370 --> 00:39:06,250
up with all different edge cases of you

1028
00:39:06,250 --> 00:39:07,960
know what could cause the security or

1029
00:39:07,960 --> 00:39:09,370
privacy problem within this application

1030
00:39:09,370 --> 00:39:10,570
and try and cover as many them as

1031
00:39:10,570 --> 00:39:16,780
possible in the in the standard so we

1032
00:39:16,780 --> 00:39:18,280
talked about a lot about this is what

1033
00:39:18,280 --> 00:39:20,920
you should do but it's not just what you

1034
00:39:20,920 --> 00:39:21,850
should do it's how you should do it as

1035
00:39:21,850 --> 00:39:23,320
well how can you actually implement

1036
00:39:23,320 --> 00:39:27,280
something obviously in a short control

1037
00:39:27,280 --> 00:39:29,500
we can't say here is exactly how you do

1038
00:39:29,500 --> 00:39:31,120
this for a particular scenario we're

1039
00:39:31,120 --> 00:39:33,340
saying what you should do what control

1040
00:39:33,340 --> 00:39:34,840
you should implement but you also do try

1041
00:39:34,840 --> 00:39:36,550
and provide links and other information

1042
00:39:36,550 --> 00:39:40,630
to help you understand okay what what

1043
00:39:40,630 --> 00:39:41,980
resources are out there to help you with

1044
00:39:41,980 --> 00:39:45,220
that so for example

1045
00:39:45,220 --> 00:39:47,410
is a great mapping that the the guys and

1046
00:39:47,410 --> 00:39:49,420
people on the GOS cheatsheet project

1047
00:39:49,420 --> 00:39:51,760
pulled together where the are Street

1048
00:39:51,760 --> 00:39:53,800
sheets provide in-depth advice for

1049
00:39:53,800 --> 00:39:55,210
particular topics in security and

1050
00:39:55,210 --> 00:39:56,500
they've gone through the ISPs and said

1051
00:39:56,500 --> 00:39:57,640
look here are the cheat sheets it can

1052
00:39:57,640 --> 00:39:59,770
help you a section 2.1 here the cheat

1053
00:39:59,770 --> 00:40:01,710
sheets that can help you a section 2.2

1054
00:40:01,710 --> 00:40:04,180
so we have references within the ASVs

1055
00:40:04,180 --> 00:40:05,650
for certain cheat sheets and his and

1056
00:40:05,650 --> 00:40:06,730
there's also there's more comprehensive

1057
00:40:06,730 --> 00:40:08,290
mapping as well so really moving from

1058
00:40:08,290 --> 00:40:10,270
okay what do i do - how do i do it as

1059
00:40:10,270 --> 00:40:11,530
well I'm making sure that a link is

1060
00:40:11,530 --> 00:40:14,859
there there's another example for a tool

1061
00:40:14,859 --> 00:40:17,650
that we link to inside the SBS itself we

1062
00:40:17,650 --> 00:40:18,839
say that you need to have a secure

1063
00:40:18,839 --> 00:40:20,980
transport layer security configuration

1064
00:40:20,980 --> 00:40:25,089
and secure SSL TLS configuration and

1065
00:40:25,089 --> 00:40:26,140
that's all well and good but that very

1066
00:40:26,140 --> 00:40:27,190
much depends on you know what's your

1067
00:40:27,190 --> 00:40:29,500
server what's your application so we

1068
00:40:29,500 --> 00:40:30,970
point to this very nice tool that

1069
00:40:30,970 --> 00:40:34,089
Mozilla have provided which helps you

1070
00:40:34,089 --> 00:40:38,349
create a secure configuration depending

1071
00:40:38,349 --> 00:40:40,210
on what your server software is what

1072
00:40:40,210 --> 00:40:42,339
your server application is running to

1073
00:40:42,339 --> 00:40:44,260
make sure that you can not just no candy

1074
00:40:44,260 --> 00:40:45,460
to build a secure can that I need a

1075
00:40:45,460 --> 00:40:47,410
secure configuration but also okay how

1076
00:40:47,410 --> 00:40:48,940
am I going to get a secure configuration

1077
00:40:48,940 --> 00:40:50,260
how am I going to build that secure

1078
00:40:50,260 --> 00:40:53,050
configuration so that's a really

1079
00:40:53,050 --> 00:40:54,910
important part of the the standard

1080
00:40:54,910 --> 00:40:57,220
saying look here's what you need to do

1081
00:40:57,220 --> 00:40:59,859
and then flowing into resources for how

1082
00:40:59,859 --> 00:41:00,940
you can do that obviously every

1083
00:41:00,940 --> 00:41:02,950
application is different every situation

1084
00:41:02,950 --> 00:41:04,420
is different but we want to make sure

1085
00:41:04,420 --> 00:41:05,650
that we're providing links to those

1086
00:41:05,650 --> 00:41:09,000
resources so that you can go out and

1087
00:41:09,000 --> 00:41:12,240
find that information

1088
00:41:14,170 --> 00:41:18,589
okay so number 10 I talked earlier on

1089
00:41:18,589 --> 00:41:19,940
about how I'm really hope we're moving

1090
00:41:19,940 --> 00:41:21,710
away from top tens and how I hope we're

1091
00:41:21,710 --> 00:41:23,660
moving towards more standards I'm

1092
00:41:23,660 --> 00:41:25,550
pleased to say that there are lots of

1093
00:41:25,550 --> 00:41:26,690
different standards that are sore

1094
00:41:26,690 --> 00:41:30,079
growing up around this security

1095
00:41:30,079 --> 00:41:32,240
verification standards for mobile for

1096
00:41:32,240 --> 00:41:34,700
containers for software components for

1097
00:41:34,700 --> 00:41:37,339
IOT for smart contracts for Active

1098
00:41:37,339 --> 00:41:39,920
Directory some of these are OS from

1099
00:41:39,920 --> 00:41:43,339
these are not throw us but overall it's

1100
00:41:43,339 --> 00:41:44,390
a really encouraging direction it's

1101
00:41:44,390 --> 00:41:45,470
really great to see that different

1102
00:41:45,470 --> 00:41:47,089
people are still stepping up and saying

1103
00:41:47,089 --> 00:41:48,640
look here we're going to build this

1104
00:41:48,640 --> 00:41:53,150
comprehensive style standard to to pick

1105
00:41:53,150 --> 00:41:54,829
up and say look this is how you do this

1106
00:41:54,829 --> 00:41:57,560
in a secure way this is how you deal

1107
00:41:57,560 --> 00:41:58,819
with this particular technology in a

1108
00:41:58,819 --> 00:42:00,589
secure way it's not just here are the

1109
00:42:00,589 --> 00:42:02,150
top ten things that are gonna cause you

1110
00:42:02,150 --> 00:42:04,099
problems that rather here is the guide

1111
00:42:04,099 --> 00:42:05,510
that you can follow in order to do that

1112
00:42:05,510 --> 00:42:09,069
securely so most new these are all

1113
00:42:09,069 --> 00:42:11,030
projects I think of sort of stems from

1114
00:42:11,030 --> 00:42:12,589
the SPS which has been going on for a

1115
00:42:12,589 --> 00:42:13,940
long time I'm really pleased to see that

1116
00:42:13,940 --> 00:42:16,130
these standards are starts on the graph

1117
00:42:16,130 --> 00:42:17,839
I'm really excited to see the direction

1118
00:42:17,839 --> 00:42:23,270
these additional standards take I put

1119
00:42:23,270 --> 00:42:24,680
word about the mobile version just

1120
00:42:24,680 --> 00:42:26,540
because it's the most developed and I

1121
00:42:26,540 --> 00:42:28,339
think it's a really great focus on

1122
00:42:28,339 --> 00:42:32,390
mobile specific issues more about your

1123
00:42:32,390 --> 00:42:33,109
things are specific to mobile

1124
00:42:33,109 --> 00:42:34,970
applications client-side issues or

1125
00:42:34,970 --> 00:42:38,569
transports security issues focus on

1126
00:42:38,569 --> 00:42:42,200
fighting guidance at a there's platform

1127
00:42:42,200 --> 00:42:44,030
independence which work for our Android

1128
00:42:44,030 --> 00:42:46,010
work for iOS they're also looking at

1129
00:42:46,010 --> 00:42:47,599
providing guidance that covers

1130
00:42:47,599 --> 00:42:50,480
particular frameworks but at the same

1131
00:42:50,480 --> 00:42:52,369
time the items that are common with the

1132
00:42:52,369 --> 00:42:54,109
ASVs they're not trying to replace so

1133
00:42:54,109 --> 00:42:55,880
things that the server-side things that

1134
00:42:55,880 --> 00:42:58,099
API is the mobile applications use still

1135
00:42:58,099 --> 00:43:02,359
go through the regular ASVs it's a

1136
00:43:02,359 --> 00:43:04,369
different team we run it I do want to

1137
00:43:04,369 --> 00:43:06,020
pick out one really great feature about

1138
00:43:06,020 --> 00:43:07,819
it which is that it's very closely

1139
00:43:07,819 --> 00:43:09,859
linked to the the mobile security

1140
00:43:09,859 --> 00:43:14,810
testing guide in that you can see in the

1141
00:43:14,810 --> 00:43:17,960
ASVs here here's the mobile ASVs sorry

1142
00:43:17,960 --> 00:43:19,310
here's the control here's what should be

1143
00:43:19,310 --> 00:43:20,540
happening this mobile application and

1144
00:43:20,540 --> 00:43:22,910
then link links over to here's how you

1145
00:43:22,910 --> 00:43:24,650
can test for that here's our as

1146
00:43:24,650 --> 00:43:26,839
huge test or as an Assessor you can test

1147
00:43:26,839 --> 00:43:28,309
that control has been implemented so

1148
00:43:28,309 --> 00:43:30,859
that's a really great feature and

1149
00:43:30,859 --> 00:43:31,970
something we want to try move towards

1150
00:43:31,970 --> 00:43:34,760
and the main ASVs as well but yes I

1151
00:43:34,760 --> 00:43:37,359
shout out to spend her own and Carlos

1152
00:43:37,359 --> 00:43:43,099
who lead that project so I've talked

1153
00:43:43,099 --> 00:43:44,690
quite a long time Sam is there any

1154
00:43:44,690 --> 00:43:46,700
questions Yomi to take a quick break and

1155
00:43:46,700 --> 00:43:49,220
see if any questions from the from the

1156
00:43:49,220 --> 00:43:53,270
strap group yeah thinking in Scotland

1157
00:43:53,270 --> 00:43:54,740
wanted I think was a more of a general

1158
00:43:54,740 --> 00:43:56,599
person for and the community both have

1159
00:43:56,599 --> 00:43:58,880
to get your thoughts on it people

1160
00:43:58,880 --> 00:44:00,230
thinking about fast witless

1161
00:44:00,230 --> 00:44:02,029
authentication things like magic strips

1162
00:44:02,029 --> 00:44:05,660
like slack or mando and use a magic

1163
00:44:05,660 --> 00:44:09,289
links and I say not strips what do we

1164
00:44:09,289 --> 00:44:11,119
think about that in terms of you spoke

1165
00:44:11,119 --> 00:44:12,829
about sort of using passwords and

1166
00:44:12,829 --> 00:44:14,779
craters and stuff what about fast within

1167
00:44:14,779 --> 00:44:17,960
this authentication it's a good question

1168
00:44:17,960 --> 00:44:20,329
I think it often depends on the

1169
00:44:20,329 --> 00:44:22,069
particular use case I guess these things

1170
00:44:22,069 --> 00:44:24,920
like magic links are often in use where

1171
00:44:24,920 --> 00:44:28,910
there's some sort of transfer between

1172
00:44:28,910 --> 00:44:30,799
applications or between contexts where

1173
00:44:30,799 --> 00:44:32,480
the user experience people don't want

1174
00:44:32,480 --> 00:44:33,349
the user to have to enter another

1175
00:44:33,349 --> 00:44:37,369
password so potentially it's a good

1176
00:44:37,369 --> 00:44:38,779
option for moving between different

1177
00:44:38,779 --> 00:44:39,859
contexts moving between different

1178
00:44:39,859 --> 00:44:44,000
applications I'd obviously be a little

1179
00:44:44,000 --> 00:44:45,529
bit concerned about using it as sort of

1180
00:44:45,529 --> 00:44:46,880
the ultimate authentication or the

1181
00:44:46,880 --> 00:44:49,490
initial authentication I know that

1182
00:44:49,490 --> 00:44:51,170
certain applications may just say look

1183
00:44:51,170 --> 00:44:52,789
we'll send a link to email and I'll just

1184
00:44:52,789 --> 00:44:54,770
log you straight in and then at least

1185
00:44:54,770 --> 00:44:56,720
they've got the assurance that you've

1186
00:44:56,720 --> 00:44:58,039
got access to your email and they're

1187
00:44:58,039 --> 00:44:59,270
hoping that no one else has access to

1188
00:44:59,270 --> 00:45:03,980
your email I know maybe in depending on

1189
00:45:03,980 --> 00:45:05,660
your the threats of that particular

1190
00:45:05,660 --> 00:45:09,140
application phases or the the the level

1191
00:45:09,140 --> 00:45:10,309
of security why for a particular

1192
00:45:10,309 --> 00:45:13,069
application that might be required but I

1193
00:45:13,069 --> 00:45:16,039
think overall it's gonna it's probably

1194
00:45:16,039 --> 00:45:18,410
not there an ideal method for an initial

1195
00:45:18,410 --> 00:45:21,349
login and it very much depends on you

1196
00:45:21,349 --> 00:45:22,940
know what is a threat model what is what

1197
00:45:22,940 --> 00:45:23,960
are the threats you're trying to put

1198
00:45:23,960 --> 00:45:25,039
them to get protect against in a

1199
00:45:25,039 --> 00:45:30,890
particular application personal mission

1200
00:45:30,890 --> 00:45:34,070
we have on the and

1201
00:45:34,070 --> 00:45:35,870
at the moment when it is listening you

1202
00:45:35,870 --> 00:45:37,490
can always jump onto slack or the

1203
00:45:37,490 --> 00:45:39,110
message board on YouTube and add your

1204
00:45:39,110 --> 00:45:44,600
question okay great so I just want to

1205
00:45:44,600 --> 00:45:46,190
spend a few more minutes oh wait we had

1206
00:45:46,190 --> 00:45:51,710
another question actually can you give

1207
00:45:51,710 --> 00:45:53,930
an example of adoption recommendations

1208
00:45:53,930 --> 00:45:56,570
how do you start never mind ignore me

1209
00:45:56,570 --> 00:45:59,270
completely different different question

1210
00:45:59,270 --> 00:46:04,490
different channel okay that's a quite

1211
00:46:04,490 --> 00:46:05,870
nice segue because the next section is

1212
00:46:05,870 --> 00:46:07,520
you know how do I use it how do we how

1213
00:46:07,520 --> 00:46:09,830
they bring this standard in so it's all

1214
00:46:09,830 --> 00:46:12,250
present in quite nicely

1215
00:46:12,250 --> 00:46:14,990
so it's all those different ways that

1216
00:46:14,990 --> 00:46:17,540
you can use the ASVs I just want to sort

1217
00:46:17,540 --> 00:46:19,190
of pull out a few examples talk about

1218
00:46:19,190 --> 00:46:24,260
them very briefly so it can be used as

1219
00:46:24,260 --> 00:46:26,180
part of the software development cycle

1220
00:46:26,180 --> 00:46:29,870
to use as a security guide maybe that's

1221
00:46:29,870 --> 00:46:33,740
for creating security requirements maybe

1222
00:46:33,740 --> 00:46:36,350
that's for creating a secure design once

1223
00:46:36,350 --> 00:46:37,580
we've got the requirements in place we

1224
00:46:37,580 --> 00:46:39,410
want to start building the application

1225
00:46:39,410 --> 00:46:40,700
together you know how should that all

1226
00:46:40,700 --> 00:46:42,680
fit together how will that work in the

1227
00:46:42,680 --> 00:46:45,830
secure way but not just designing

1228
00:46:45,830 --> 00:46:47,510
security but also designing security

1229
00:46:47,510 --> 00:46:49,430
features so the application will have

1230
00:46:49,430 --> 00:46:51,020
various security features and needs to

1231
00:46:51,020 --> 00:46:53,630
build in or it may offer the end-user

1232
00:46:53,630 --> 00:46:55,250
various security features and the SVS

1233
00:46:55,250 --> 00:46:57,440
can provide guidance for the best ways

1234
00:46:57,440 --> 00:47:00,560
of influencing those features once it

1235
00:47:00,560 --> 00:47:02,390
gets to the implementation stage where

1236
00:47:02,390 --> 00:47:03,470
the developers are actually writing a

1237
00:47:03,470 --> 00:47:04,790
code they can also refer to this and

1238
00:47:04,790 --> 00:47:06,230
think about okay what sort of problems

1239
00:47:06,230 --> 00:47:07,370
do I need to be worried about what sort

1240
00:47:07,370 --> 00:47:09,350
of issues Jenny to be thinking about

1241
00:47:09,350 --> 00:47:12,350
when I'm actually writing this code it

1242
00:47:12,350 --> 00:47:14,510
can also be used for testing as well

1243
00:47:14,510 --> 00:47:16,700
looking at various different testing

1244
00:47:16,700 --> 00:47:17,930
scenarios maybe that's internal

1245
00:47:17,930 --> 00:47:20,090
developer testing or penetration testing

1246
00:47:20,090 --> 00:47:21,140
or I'll talk a little bit more about

1247
00:47:21,140 --> 00:47:26,390
line a sec I think the key thing

1248
00:47:26,390 --> 00:47:29,299
I'd say which applied to using the SVS

1249
00:47:29,299 --> 00:47:31,099
but it also made more general reminders

1250
00:47:31,099 --> 00:47:32,390
I think it's important when considering

1251
00:47:32,390 --> 00:47:34,760
building security into the software

1252
00:47:34,760 --> 00:47:37,760
development lifecycle you don't want to

1253
00:47:37,760 --> 00:47:39,349
just drop this standard on someone and

1254
00:47:39,349 --> 00:47:44,180
run away yeah this does provide a very

1255
00:47:44,180 --> 00:47:46,460
good guide to follow but it's the

1256
00:47:46,460 --> 00:47:48,170
whoever's working on other developers

1257
00:47:48,170 --> 00:47:49,940
are working with it the architect to

1258
00:47:49,940 --> 00:47:52,160
work with it may well need assistance

1259
00:47:52,160 --> 00:47:54,349
from someone with more experience in

1260
00:47:54,349 --> 00:47:56,480
security is to help them interpret or

1261
00:47:56,480 --> 00:47:59,289
develop these these particular controls

1262
00:47:59,289 --> 00:48:01,490
you just want to be there to show a

1263
00:48:01,490 --> 00:48:03,349
helping hand showing you're helping them

1264
00:48:03,349 --> 00:48:06,529
through using it it's important to make

1265
00:48:06,529 --> 00:48:09,829
sure that detailing it - tailoring it to

1266
00:48:09,829 --> 00:48:11,599
your particular business so we've tried

1267
00:48:11,599 --> 00:48:13,849
to cover as many possible use cases as

1268
00:48:13,849 --> 00:48:18,559
many possible situations in the SPS but

1269
00:48:18,559 --> 00:48:20,089
it may be the in your particular

1270
00:48:20,089 --> 00:48:21,140
organization your particular business

1271
00:48:21,140 --> 00:48:23,119
certain elements are more important

1272
00:48:23,119 --> 00:48:24,589
certain elements are less important so

1273
00:48:24,589 --> 00:48:26,510
we'd certainly say take this is a

1274
00:48:26,510 --> 00:48:28,010
starting point and customize it to your

1275
00:48:28,010 --> 00:48:32,329
particular needs we also say get

1276
00:48:32,329 --> 00:48:33,319
everyone from the development process

1277
00:48:33,319 --> 00:48:35,150
involved in this don't just decide at

1278
00:48:35,150 --> 00:48:36,349
some point either the beginning and

1279
00:48:36,349 --> 00:48:37,789
don't tell anyone or decide at the end

1280
00:48:37,789 --> 00:48:38,930
that you ought to be complying with this

1281
00:48:38,930 --> 00:48:40,400
and make it clear from the beginning

1282
00:48:40,400 --> 00:48:41,450
that you know we're going to be building

1283
00:48:41,450 --> 00:48:42,500
this application we're going to be

1284
00:48:42,500 --> 00:48:45,799
operating this development process with

1285
00:48:45,799 --> 00:48:48,259
name of complying with a SPS level 1sps

1286
00:48:48,259 --> 00:48:51,019
level - and make sure that's you know

1287
00:48:51,019 --> 00:48:52,519
that's clear to everyone all the way

1288
00:48:52,519 --> 00:48:53,630
through the process so that's what

1289
00:48:53,630 --> 00:48:56,539
you're looking for and certainly this

1290
00:48:56,539 --> 00:48:58,700
also gives you a big advantage when we

1291
00:48:58,700 --> 00:49:00,920
see a lot of our organizations we work

1292
00:49:00,920 --> 00:49:02,630
with the building a product they then

1293
00:49:02,630 --> 00:49:04,670
need to market and sell to a third party

1294
00:49:04,670 --> 00:49:06,769
and pretty much always that third party

1295
00:49:06,769 --> 00:49:08,240
saying of how do you secure your product

1296
00:49:08,240 --> 00:49:09,970
how do you develop your product securely

1297
00:49:09,970 --> 00:49:12,140
and the ASVs is a great way of

1298
00:49:12,140 --> 00:49:14,180
presenting that saying that kisses this

1299
00:49:14,180 --> 00:49:16,329
is what we comply with this is how we

1300
00:49:16,329 --> 00:49:19,000
ensure that we're developing securely

1301
00:49:19,000 --> 00:49:22,579
but having said that the SPS doesn't

1302
00:49:22,579 --> 00:49:25,730
capture everything certainly having a

1303
00:49:25,730 --> 00:49:27,769
secure sort of an right cycle involves

1304
00:49:27,769 --> 00:49:28,940
all sorts different activities and all

1305
00:49:28,940 --> 00:49:30,589
of which the SPS will specifically help

1306
00:49:30,589 --> 00:49:33,650
with more information about that there's

1307
00:49:33,650 --> 00:49:36,430
the the OS Sam projects the software

1308
00:49:36,430 --> 00:49:39,530
Software Assurance maturity model

1309
00:49:39,530 --> 00:49:42,120
which provides a good overview of how to

1310
00:49:42,120 --> 00:49:46,380
build a secure development lifecycle but

1311
00:49:46,380 --> 00:49:47,640
certainly various different areas are

1312
00:49:47,640 --> 00:49:51,030
can useful there another interesting use

1313
00:49:51,030 --> 00:49:54,630
cases in procurement about how you deal

1314
00:49:54,630 --> 00:49:56,430
with vendors I deal with third parties

1315
00:49:56,430 --> 00:49:58,980
so first of all if you incorporate say

1316
00:49:58,980 --> 00:50:00,060
you're developing software and you

1317
00:50:00,060 --> 00:50:02,250
incorporate third-party libraries even

1318
00:50:02,250 --> 00:50:05,280
in and of itself it talks about how you

1319
00:50:05,280 --> 00:50:07,320
should deal with party libraries how I

1320
00:50:07,320 --> 00:50:08,640
should deal with dependencies making

1321
00:50:08,640 --> 00:50:09,750
sure they're up-to-date making sure

1322
00:50:09,750 --> 00:50:13,230
they're being included in a secure way

1323
00:50:13,230 --> 00:50:16,380
so that goes both for the your internal

1324
00:50:16,380 --> 00:50:20,130
libraries but also for on a wider scale

1325
00:50:20,130 --> 00:50:21,660
you know vendors that you're using fer

1326
00:50:21,660 --> 00:50:22,830
you're bringing in a

1327
00:50:22,830 --> 00:50:24,330
software-as-a-service vendor you can be

1328
00:50:24,330 --> 00:50:26,070
using their platform and you want to

1329
00:50:26,070 --> 00:50:27,780
understand like I said earlier how are

1330
00:50:27,780 --> 00:50:29,130
they making sure their product is secure

1331
00:50:29,130 --> 00:50:31,200
you can say you know do you use a guide

1332
00:50:31,200 --> 00:50:32,970
like a SDS can you indicate which

1333
00:50:32,970 --> 00:50:34,470
controls your compiler that controls you

1334
00:50:34,470 --> 00:50:37,680
don't comply with provides a good

1335
00:50:37,680 --> 00:50:39,890
framework for getting that assurance

1336
00:50:39,890 --> 00:50:41,850
although I will note that often when

1337
00:50:41,850 --> 00:50:43,620
you're talking to a vendor you get more

1338
00:50:43,620 --> 00:50:45,600
information from how the vendor responds

1339
00:50:45,600 --> 00:50:48,030
the questions rather than exactly what

1340
00:50:48,030 --> 00:50:50,310
they say yes the vendors very evasive or

1341
00:50:50,310 --> 00:50:51,240
doesn't want to answer security

1342
00:50:51,240 --> 00:50:54,690
questions that tends to raise more red

1343
00:50:54,690 --> 00:50:56,280
flags or alarm bells and if the vendors

1344
00:50:56,280 --> 00:51:00,200
very open is keen to provide information

1345
00:51:00,200 --> 00:51:03,570
and specifically if you're procuring a

1346
00:51:03,570 --> 00:51:05,190
security product and may be that you're

1347
00:51:05,190 --> 00:51:07,350
looking to use a security product to

1348
00:51:07,350 --> 00:51:08,700
protect your application in a particular

1349
00:51:08,700 --> 00:51:09,960
way you may want to understand together

1350
00:51:09,960 --> 00:51:11,970
with the vendor which elements of the

1351
00:51:11,970 --> 00:51:13,740
SVS which controls in ASVs so you

1352
00:51:13,740 --> 00:51:15,180
expecting this secured product is going

1353
00:51:15,180 --> 00:51:18,150
to help you with that helps set

1354
00:51:18,150 --> 00:51:21,090
expectations on both sides so those

1355
00:51:21,090 --> 00:51:22,590
different possible use cases in that

1356
00:51:22,590 --> 00:51:26,280
case and finally risk identification

1357
00:51:26,280 --> 00:51:28,230
which I guess the Posche we're saying

1358
00:51:28,230 --> 00:51:29,670
using it in testing it using it in

1359
00:51:29,670 --> 00:51:32,400
reviews using it as a checklist or using

1360
00:51:32,400 --> 00:51:34,080
as a guide say look these are the areas

1361
00:51:34,080 --> 00:51:36,390
we need to make sure we cover developers

1362
00:51:36,390 --> 00:51:37,980
can potentially write automated tests in

1363
00:51:37,980 --> 00:51:39,330
certain cases for example security

1364
00:51:39,330 --> 00:51:41,520
headers or cookie Flags you can run

1365
00:51:41,520 --> 00:51:42,840
automated tests to check that these

1366
00:51:42,840 --> 00:51:44,310
controls are actually being applied and

1367
00:51:44,310 --> 00:51:46,200
come back and say look the application

1368
00:51:46,200 --> 00:51:47,550
is complying with these control this

1369
00:51:47,550 --> 00:51:48,540
controller or the application is not

1370
00:51:48,540 --> 00:51:49,800
complying with that control this control

1371
00:51:49,800 --> 00:51:52,440
and similarly for application

1372
00:51:52,440 --> 00:51:53,760
penetration test

1373
00:51:53,760 --> 00:51:56,280
having a framework where you can say

1374
00:51:56,280 --> 00:51:58,319
look the application for penetration

1375
00:51:58,319 --> 00:52:01,500
test was performed to make sure they

1376
00:52:01,500 --> 00:52:03,000
covered these particular areas these

1377
00:52:03,000 --> 00:52:04,559
particular controls and verify the error

1378
00:52:04,559 --> 00:52:07,109
in place so it provides a nice framework

1379
00:52:07,109 --> 00:52:09,059
for that as well it's definitely a very

1380
00:52:09,059 --> 00:52:11,400
useful way of saying look this is how we

1381
00:52:11,400 --> 00:52:13,109
can demonstrate the areas of all we're

1382
00:52:13,109 --> 00:52:17,099
looking to cover in this test so that's

1383
00:52:17,099 --> 00:52:18,539
very different use cases hopefully at

1384
00:52:18,539 --> 00:52:20,940
this point you understand sort of a

1385
00:52:20,940 --> 00:52:22,950
little bit more about the standard while

1386
00:52:22,950 --> 00:52:24,780
White's solve an interesting relevant

1387
00:52:24,780 --> 00:52:27,329
standard and where you can use it so

1388
00:52:27,329 --> 00:52:29,280
where can you find it so the most recent

1389
00:52:29,280 --> 00:52:31,260
version the most recent static version

1390
00:52:31,260 --> 00:52:33,839
is 4.0 point 1 as a very small change to

1391
00:52:33,839 --> 00:52:38,190
4 4.0 version and there are various

1392
00:52:38,190 --> 00:52:39,930
different proof paid documents Word PDF

1393
00:52:39,930 --> 00:52:45,030
CSV z-- that's on the OS website and

1394
00:52:45,030 --> 00:52:48,780
also on the OS / ASVs github repository

1395
00:52:48,780 --> 00:52:51,119
where there's a tree which is pinned at

1396
00:52:51,119 --> 00:52:54,119
that static release so you can make sure

1397
00:52:54,119 --> 00:52:55,619
you always get in the correct version if

1398
00:52:55,619 --> 00:52:58,010
you need to be benchmarking against it

1399
00:52:58,010 --> 00:53:00,150
if you're looking for something slightly

1400
00:53:00,150 --> 00:53:01,980
more bleeding-edge I'm gonna be looking

1401
00:53:01,980 --> 00:53:04,589
at the most recent developments or if

1402
00:53:04,589 --> 00:53:05,910
you want to make suggestions and

1403
00:53:05,910 --> 00:53:08,069
comments the the master branch for that

1404
00:53:08,069 --> 00:53:10,920
repository the SPS repository is the the

1405
00:53:10,920 --> 00:53:13,319
bleeding edge version where changes have

1406
00:53:13,319 --> 00:53:15,029
already been incorporated in preparation

1407
00:53:15,029 --> 00:53:17,609
for the next version and other feedback

1408
00:53:17,609 --> 00:53:21,839
and ideas are being discussed one useful

1409
00:53:21,839 --> 00:53:24,329
resource as well in in that repository

1410
00:53:24,329 --> 00:53:25,890
there various different versions of this

1411
00:53:25,890 --> 00:53:27,569
presentation if you want to go back to

1412
00:53:27,569 --> 00:53:29,730
organization or back to your local OS

1413
00:53:29,730 --> 00:53:31,380
chapter back to your local meet up and

1414
00:53:31,380 --> 00:53:32,789
talk about this presentation in more

1415
00:53:32,789 --> 00:53:35,220
detail talk about it with them their

1416
00:53:35,220 --> 00:53:36,650
various presentations you can base off

1417
00:53:36,650 --> 00:53:39,210
to do that and thanks to Andrew vans a

1418
00:53:39,210 --> 00:53:41,160
stock who created the original version

1419
00:53:41,160 --> 00:53:43,770
of this presentation but yeah it's a

1420
00:53:43,770 --> 00:53:47,180
great way of sort of sharing love and

1421
00:53:47,180 --> 00:53:49,529
making sure that people all ware of this

1422
00:53:49,529 --> 00:53:53,039
standard aware of the project so yeah if

1423
00:53:53,039 --> 00:53:54,569
you wanna get involved you get a copy

1424
00:53:54,569 --> 00:53:57,240
for no github talk to us on slack

1425
00:53:57,240 --> 00:53:59,730
especially if you're interested in being

1426
00:53:59,730 --> 00:54:02,339
involved in translating I'll put a link

1427
00:54:02,339 --> 00:54:06,450
at the end to the OAS PS channel on the

1428
00:54:06,450 --> 00:54:08,339
OS

1429
00:54:08,339 --> 00:54:09,900
a big area that we're interested in is

1430
00:54:09,900 --> 00:54:13,020
case studies if you use the SPS it'd be

1431
00:54:13,020 --> 00:54:14,339
really great to hear back from you how

1432
00:54:14,339 --> 00:54:16,380
that went what you've how you found it

1433
00:54:16,380 --> 00:54:18,450
sir you've got good stories about how

1434
00:54:18,450 --> 00:54:21,000
it's helped you increase the security of

1435
00:54:21,000 --> 00:54:23,579
your of your application or improve the

1436
00:54:23,579 --> 00:54:24,960
security processes you definitely get in

1437
00:54:24,960 --> 00:54:26,400
touch with that we'd love to incorporate

1438
00:54:26,400 --> 00:54:29,400
that sort of feedback in and again sit

1439
00:54:29,400 --> 00:54:30,630
there and get hub you can create issues

1440
00:54:30,630 --> 00:54:34,650
and create pull requests yeah just give

1441
00:54:34,650 --> 00:54:35,849
us your ideas give us your suggestions

1442
00:54:35,849 --> 00:54:37,650
reasonably active on there maybe the

1443
00:54:37,650 --> 00:54:39,240
certain issues get delayed until them

1444
00:54:39,240 --> 00:54:41,640
the upcoming version but we do try and

1445
00:54:41,640 --> 00:54:43,290
respond and we do try and build up that

1446
00:54:43,290 --> 00:54:45,030
interaction and obviously the best-case

1447
00:54:45,030 --> 00:54:46,650
scenarios if you can give us a pull

1448
00:54:46,650 --> 00:54:49,829
request with your suggested wording or

1449
00:54:49,829 --> 00:54:52,050
suggested control and hopefully you too

1450
00:54:52,050 --> 00:54:55,680
can get yourself input into the the SVS

1451
00:54:55,680 --> 00:54:58,740
standard the application security

1452
00:54:58,740 --> 00:55:01,859
verification standard so yeah hopefully

1453
00:55:01,859 --> 00:55:03,030
that's been useful if that's given a

1454
00:55:03,030 --> 00:55:05,339
good overview there's some quantity

1455
00:55:05,339 --> 00:55:08,310
tails for me and also how to find the

1456
00:55:08,310 --> 00:55:09,660
standard to find resources about the

1457
00:55:09,660 --> 00:55:11,430
standard I've got any questions about

1458
00:55:11,430 --> 00:55:14,040
this or anything else application secure

1459
00:55:14,040 --> 00:55:15,619
later please feel free to get in touch

1460
00:55:15,619 --> 00:55:17,849
with any other questions in the group we

1461
00:55:17,849 --> 00:55:20,310
can talk to them now I guess I think

1462
00:55:20,310 --> 00:55:23,880
there's actually quite a few excellent

1463
00:55:23,880 --> 00:55:26,400
so we actually have one on YouTube which

1464
00:55:26,400 --> 00:55:28,349
I think you covered a little bit and in

1465
00:55:28,349 --> 00:55:30,420
terms of sort of adding testing into

1466
00:55:30,420 --> 00:55:31,800
developments and things like that but

1467
00:55:31,800 --> 00:55:32,849
maybe just to go a little bit more

1468
00:55:32,849 --> 00:55:35,160
detail we have a question about how can

1469
00:55:35,160 --> 00:55:37,500
we use this in say angular and nodejs

1470
00:55:37,500 --> 00:55:40,170
applications easy to be checklist but

1471
00:55:40,170 --> 00:55:41,940
how can you implement in a project while

1472
00:55:41,940 --> 00:55:43,470
during development I know you've sort of

1473
00:55:43,470 --> 00:55:44,490
covered that because anything you'd like

1474
00:55:44,490 --> 00:55:50,060
to add to it so in terms of how we I

1475
00:55:50,060 --> 00:55:53,579
implemented during development so I get

1476
00:55:53,579 --> 00:55:55,800
obviously that the old story that were

1477
00:55:55,800 --> 00:55:57,300
the best part time to plant a tree is 20

1478
00:55:57,300 --> 00:55:59,190
years ago but the second best time is

1479
00:55:59,190 --> 00:56:02,880
tomorrow so it's clearly if we can't

1480
00:56:02,880 --> 00:56:04,349
start at the beginning then we we have

1481
00:56:04,349 --> 00:56:06,030
to come in Midway then at least it gives

1482
00:56:06,030 --> 00:56:07,680
some guidance for saying or reviewing

1483
00:56:07,680 --> 00:56:09,569
the current state saying or where where

1484
00:56:09,569 --> 00:56:10,770
we at with this application what

1485
00:56:10,770 --> 00:56:12,420
security controls the current implement

1486
00:56:12,420 --> 00:56:13,500
or their security controls that are

1487
00:56:13,500 --> 00:56:16,349
particularly crucial that we haven't

1488
00:56:16,349 --> 00:56:17,670
seen to be implementing implementing at

1489
00:56:17,670 --> 00:56:18,780
the moment that we want to start

1490
00:56:18,780 --> 00:56:21,240
implementing now

1491
00:56:21,240 --> 00:56:23,760
certainly the standard doesn't is it

1492
00:56:23,760 --> 00:56:25,080
sort of OIG's focusing on a particular

1493
00:56:25,080 --> 00:56:28,320
technology but different areas will be

1494
00:56:28,320 --> 00:56:30,900
relevant at different different parts so

1495
00:56:30,900 --> 00:56:32,940
for example maybe if we talk about for

1496
00:56:32,940 --> 00:56:34,470
example section 5 which talks about

1497
00:56:34,470 --> 00:56:37,080
about the violation sanitization and

1498
00:56:37,080 --> 00:56:40,230
encoding so something like sanitization

1499
00:56:40,230 --> 00:56:42,420
of malicious input before to be done by

1500
00:56:42,420 --> 00:56:44,340
say the node.js server side but it's

1501
00:56:44,340 --> 00:56:46,800
possible the encoding and making sure

1502
00:56:46,800 --> 00:56:48,330
that content is being written securely

1503
00:56:48,330 --> 00:56:50,400
to the actual output page will be in the

1504
00:56:50,400 --> 00:56:53,220
angularjs section so we don't

1505
00:56:53,220 --> 00:56:55,440
necessarily say exactly where that needs

1506
00:56:55,440 --> 00:56:56,790
to be because it is technology dependent

1507
00:56:56,790 --> 00:56:59,670
but certainly it should apply to any

1508
00:56:59,670 --> 00:57:01,920
application and it's something that can

1509
00:57:01,920 --> 00:57:04,350
be implemented with way through but you

1510
00:57:04,350 --> 00:57:06,030
do need to take a second say look where

1511
00:57:06,030 --> 00:57:10,040
we are and what can we start building in

1512
00:57:12,560 --> 00:57:15,290
now we're jumping on T's slack as if you

1513
00:57:15,290 --> 00:57:17,790
missions yeah Gareth wants to know if

1514
00:57:17,790 --> 00:57:19,230
you have any examples of adoption

1515
00:57:19,230 --> 00:57:21,750
techniques how to embed in a way that

1516
00:57:21,750 --> 00:57:25,860
works and sort of revising engineering

1517
00:57:25,860 --> 00:57:27,450
understand it'll always be a difficult

1518
00:57:27,450 --> 00:57:29,430
to gain traction and these are for

1519
00:57:29,430 --> 00:57:31,260
context they have a small team with less

1520
00:57:31,260 --> 00:57:33,390
with more resources like constraints as

1521
00:57:33,390 --> 00:57:38,820
such I think sort of those goes to also

1522
00:57:38,820 --> 00:57:40,440
a wider question of how you how you

1523
00:57:40,440 --> 00:57:42,780
build secure security processes into the

1524
00:57:42,780 --> 00:57:46,320
SDLC it always has to be a gradual

1525
00:57:46,320 --> 00:57:50,730
process ultimately you are to a certain

1526
00:57:50,730 --> 00:57:53,100
extent creating more work for four

1527
00:57:53,100 --> 00:57:54,750
people and it's important to run bring

1528
00:57:54,750 --> 00:57:57,780
that in in a gradual way start off small

1529
00:57:57,780 --> 00:57:59,550
say look here that the key things here

1530
00:57:59,550 --> 00:58:01,740
are the the most concerning things let's

1531
00:58:01,740 --> 00:58:03,690
start with these maybe we'll start off

1532
00:58:03,690 --> 00:58:05,460
by doing an external test and see what

1533
00:58:05,460 --> 00:58:06,930
comes up or maybe we'll start by saying

1534
00:58:06,930 --> 00:58:08,250
that we're gonna try and eliminate all

1535
00:58:08,250 --> 00:58:10,530
these potential issues by applying this

1536
00:58:10,530 --> 00:58:13,020
particular control and just sort of

1537
00:58:13,020 --> 00:58:16,940
taking a gradual approach I've seen

1538
00:58:16,940 --> 00:58:19,350
attempts to try and just drop an entire

1539
00:58:19,350 --> 00:58:22,170
security process and all sorts documents

1540
00:58:22,170 --> 00:58:24,920
on a development team all in one go and

1541
00:58:24,920 --> 00:58:27,120
it doesn't work it's not possible

1542
00:58:27,120 --> 00:58:29,250
they've they've got their own jobs to

1543
00:58:29,250 --> 00:58:31,860
achieve and then I'm gonna do that if

1544
00:58:31,860 --> 00:58:33,600
you suddenly drop a load of work on them

1545
00:58:33,600 --> 00:58:34,930
all and

1546
00:58:34,930 --> 00:58:37,070
so certainly the gradual approach is

1547
00:58:37,070 --> 00:58:40,280
important there another thing I would

1548
00:58:40,280 --> 00:58:43,220
say which I think maybe it's lonely we

1549
00:58:43,220 --> 00:58:45,250
could look out for a future version

1550
00:58:45,250 --> 00:58:47,420
which we don't really have at the moment

1551
00:58:47,420 --> 00:58:50,960
is about sort of the the lowest hanging

1552
00:58:50,960 --> 00:58:52,220
fruit or the most critical elements

1553
00:58:52,220 --> 00:58:53,810
maybe a maybe that's where the top ten

1554
00:58:53,810 --> 00:58:54,500
doesn't need to come in where the

1555
00:58:54,500 --> 00:58:55,609
priority of controls needs to come in

1556
00:58:55,609 --> 00:58:57,020
and say look let's start with a

1557
00:58:57,020 --> 00:58:58,369
proactive controls that start with these

1558
00:58:58,369 --> 00:58:59,690
items that probably the most critical

1559
00:58:59,690 --> 00:59:01,640
maybe we're not going to be at level one

1560
00:59:01,640 --> 00:59:04,250
today but maybe a few months down line

1561
00:59:04,250 --> 00:59:07,100
we're down line we'll be at level one

1562
00:59:07,100 --> 00:59:08,119
but at least we now have a guide of

1563
00:59:08,119 --> 00:59:09,950
where we want to start and so providing

1564
00:59:09,950 --> 00:59:11,359
some sort of prioritization where we

1565
00:59:11,359 --> 00:59:13,010
can't do all this today but let's start

1566
00:59:13,010 --> 00:59:17,450
off it and therefore the questions that

1567
00:59:17,450 --> 00:59:20,330
we have on the slack channel and on

1568
00:59:20,330 --> 00:59:21,980
YouTube we did have an input that

1569
00:59:21,980 --> 00:59:23,630
someone has to use a previous version of

1570
00:59:23,630 --> 00:59:25,940
a SBS so maybe someone to talk to about

1571
00:59:25,940 --> 00:59:28,070
potential case studies and he's also

1572
00:59:28,070 --> 00:59:30,650
handsome security stories so jump into

1573
00:59:30,650 --> 00:59:34,160
to slap anyone who's interested but

1574
00:59:34,160 --> 00:59:36,260
thank you again Josh and anyone who's

1575
00:59:36,260 --> 00:59:38,000
listening who's got more questions as I

1576
00:59:38,000 --> 00:59:39,560
said you should be on our slack as well

1577
00:59:39,560 --> 00:59:41,810
as we've got a wealth of knowledge on

1578
00:59:41,810 --> 00:59:44,000
the community so please pop into there

1579
00:59:44,000 --> 00:59:45,980
even post recording and we'll get those

1580
00:59:45,980 --> 00:59:48,530
questions answered for you as well as

1581
00:59:48,530 --> 00:59:50,980
and we'll link through to the slides and

1582
00:59:50,980 --> 00:59:53,359
any other sort of templates that and

1583
00:59:53,359 --> 00:59:55,910
josh has made they will put in those

1584
00:59:55,910 --> 00:59:59,240
show notes as well and but again a huge

1585
00:59:59,240 --> 01:00:00,590
thank you to getting involved in the

1586
01:00:00,590 --> 01:00:01,520
second time we've had you on the show

1587
01:00:01,520 --> 01:00:04,910
and hopefully not the last time we glad

1588
01:00:04,910 --> 01:00:06,440
to be here again yeah a really great

1589
01:00:06,440 --> 01:00:09,380
session perfect I am so those of you and

1590
01:00:09,380 --> 01:00:11,630
who enjoy today's session and our next

1591
01:00:11,630 --> 01:00:13,430
session will be in two weeks time and

1592
01:00:13,430 --> 01:00:14,930
we're going to be talking about

1593
01:00:14,930 --> 01:00:17,330
application firewalls and how there can

1594
01:00:17,330 --> 01:00:19,940
be a friend of the DevOps pipeline

1595
01:00:19,940 --> 01:00:23,080
actually suggested by and Josh and

1596
01:00:23,080 --> 01:00:26,359
Francesca Bueller I think you pronounce

1597
01:00:26,359 --> 01:00:28,100
her name really excited to have her join

1598
01:00:28,100 --> 01:00:29,930
us and so again you can find all the

1599
01:00:29,930 --> 01:00:32,960
details on my dipstick upstart IO if

1600
01:00:32,960 --> 01:00:34,100
you've enjoyed today please share

1601
01:00:34,100 --> 01:00:37,010
comment tell your friends and I know we

1602
01:00:37,010 --> 01:00:38,720
have a number of people who join and

1603
01:00:38,720 --> 01:00:41,210
watch together so let us know maybe we

1604
01:00:41,210 --> 01:00:42,950
can sit you some pizza

1605
01:00:42,950 --> 01:00:45,020
but again have a lovely evening my

1606
01:00:45,020 --> 01:00:47,180
morning lunchtime wherever you are in

1607
01:00:47,180 --> 01:00:49,460
the world and thank you again just for

1608
01:00:49,460 --> 01:00:51,319
joining us I thank you and thank you

1609
01:00:51,319 --> 01:00:52,700
very much everyone for tuning in really

1610
01:00:52,700 --> 01:00:54,589
appreciate it and I hope it's useful and

1611
01:00:54,589 --> 01:00:56,569
yeah go gain contact if you've got any

1612
01:00:56,569 --> 01:00:58,750
other questions

1613
01:01:00,490 --> 01:01:03,490
bye

