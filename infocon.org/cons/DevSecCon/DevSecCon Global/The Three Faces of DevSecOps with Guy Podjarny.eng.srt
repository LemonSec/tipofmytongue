1
00:00:04,670 --> 00:00:09,510
okay so I know it should be live now I

2
00:00:09,510 --> 00:00:15,450
guess but so much pain yeah via YouTube

3
00:00:15,450 --> 00:00:18,140
spear yep I think it's good

4
00:00:18,140 --> 00:00:20,789
alright so hello and welcome to NASA to

5
00:00:20,789 --> 00:00:22,529
develop or an inclusive community that

6
00:00:22,529 --> 00:00:24,300
educates and enables developers and

7
00:00:24,300 --> 00:00:26,609
application security coming up we'll be

8
00:00:26,609 --> 00:00:28,710
joined by guy Johnny talking about the

9
00:00:28,710 --> 00:00:31,529
three phases of the cups but before we

10
00:00:31,529 --> 00:00:33,000
dive into that I wanted to quickly

11
00:00:33,000 --> 00:00:35,309
introduce myself my name is Durant Allen

12
00:00:35,309 --> 00:00:37,980
I'm a developer advocate at sync working

13
00:00:37,980 --> 00:00:41,190
to help security a system and you know a

14
00:00:41,190 --> 00:00:43,350
few developers we'd love your feedback

15
00:00:43,350 --> 00:00:45,660
so we can continue to improve so you can

16
00:00:45,660 --> 00:00:47,520
find us on Twitter at the security tab

17
00:00:47,520 --> 00:00:50,730
or on the slack group which is actually

18
00:00:50,730 --> 00:00:52,079
the best place to interact with our

19
00:00:52,079 --> 00:00:54,329
speakers and fellow community members if

20
00:00:54,329 --> 00:00:56,039
you haven't already signed up you can

21
00:00:56,039 --> 00:00:57,930
find a link on our website there's

22
00:00:57,930 --> 00:01:00,449
actual developer calm and by joining the

23
00:01:00,449 --> 00:01:03,090
live session channel that we have on the

24
00:01:03,090 --> 00:01:04,739
slack rope and we'll be able to

25
00:01:04,739 --> 00:01:06,570
facilitate your questions there to guide

26
00:01:06,570 --> 00:01:07,939
for journey during this session

27
00:01:07,939 --> 00:01:11,790
once this session is over you will will

28
00:01:11,790 --> 00:01:14,040
be able to rewatch it on our website to

29
00:01:14,040 --> 00:01:15,780
share it with friends or colleagues or

30
00:01:15,780 --> 00:01:18,000
hopefully both the security Valparaiso

31
00:01:18,000 --> 00:01:19,619
ought to you by sneak our aim is to

32
00:01:19,619 --> 00:01:22,110
create a vendor neutral space to share

33
00:01:22,110 --> 00:01:23,909
knowledge and best practices related to

34
00:01:23,909 --> 00:01:26,970
this software security right so that you

35
00:01:26,970 --> 00:01:28,530
know from me without further ado I'm

36
00:01:28,530 --> 00:01:30,119
going to hand over to guy for joining

37
00:01:30,119 --> 00:01:33,180
guy will come to a situation fell apart

38
00:01:33,180 --> 00:01:35,759
thanks for also exciting to be a to be

39
00:01:35,759 --> 00:01:39,210
actually on the you know on the talk you

40
00:01:39,210 --> 00:01:41,909
know some sequence here that we set up

41
00:01:41,909 --> 00:01:44,549
so thanks again for the tea up cool well

42
00:01:44,549 --> 00:01:46,680
welcome everybody I'm gonna shift you

43
00:01:46,680 --> 00:01:48,180
know hello and then I'm gonna sort of

44
00:01:48,180 --> 00:01:49,770
turn on the presentation so you're not I

45
00:01:49,770 --> 00:01:50,700
don't know if you're gonna see me

46
00:01:50,700 --> 00:01:54,180
terribly much but let's let's dive into

47
00:01:54,180 --> 00:01:55,649
it a little bit I'll switch here to the

48
00:01:55,649 --> 00:01:59,850
slide and share my screen might see it

49
00:01:59,850 --> 00:02:03,450
on twice here and and we're gonna go go

50
00:02:03,450 --> 00:02:06,149
alive cool well hi everybody thanks for

51
00:02:06,149 --> 00:02:09,000
for tuning in as I mentioned we're gonna

52
00:02:09,000 --> 00:02:10,830
talk about the three phases of Mexico

53
00:02:10,830 --> 00:02:12,920
ups done introduced himself a little bit

54
00:02:12,920 --> 00:02:14,270
just to give you a little bit of context

55
00:02:14,270 --> 00:02:17,480
about Who I am or what they might or

56
00:02:17,480 --> 00:02:19,220
might not know as I'm the CEO and

57
00:02:19,220 --> 00:02:21,050
co-founder here at snake super excited

58
00:02:21,050 --> 00:02:23,650
that we're doing at secure developer and

59
00:02:23,650 --> 00:02:26,390
I'm already teed that up before sneaker

60
00:02:26,390 --> 00:02:28,130
was I spent about a decade in

61
00:02:28,130 --> 00:02:30,440
application security and then I went to

62
00:02:30,440 --> 00:02:32,300
the world of performance founding a

63
00:02:32,300 --> 00:02:33,770
company called place a oh and then that

64
00:02:33,770 --> 00:02:35,510
got acquired by Akamai so it was CTO and

65
00:02:35,510 --> 00:02:38,090
Akamai for a bunch of times and I've

66
00:02:38,090 --> 00:02:40,130
been very much like deep into that

67
00:02:40,130 --> 00:02:41,810
DevOps and performance for seven years

68
00:02:41,810 --> 00:02:43,880
and then prior to that ten years in app

69
00:02:43,880 --> 00:02:46,670
sec and now in this world covers both so

70
00:02:46,670 --> 00:02:49,670
I have these you know I guess kind of a

71
00:02:49,670 --> 00:02:51,920
different insights into these two worlds

72
00:02:51,920 --> 00:02:53,390
that I'm trying to communicate here in

73
00:02:53,390 --> 00:02:55,280
this talk when want to talk about it so

74
00:02:55,280 --> 00:02:56,780
I'm gonna go a little bit fast I've got

75
00:02:56,780 --> 00:02:58,940
a lot of slides that have a little bit

76
00:02:58,940 --> 00:03:00,769
of content on each so let's get to it

77
00:03:00,769 --> 00:03:03,320
and as I mentioned you know just I've

78
00:03:03,320 --> 00:03:04,880
asked questions on the slack channel in

79
00:03:04,880 --> 00:03:08,630
the live life session channel if you

80
00:03:08,630 --> 00:03:10,310
have any questions and you'll interrupt

81
00:03:10,310 --> 00:03:11,660
me with them or sort of ask them at the

82
00:03:11,660 --> 00:03:15,790
end as appropriate cool so taking in

83
00:03:15,790 --> 00:03:18,049
well-loved DevOps you know right I think

84
00:03:18,049 --> 00:03:18,530
so

85
00:03:18,530 --> 00:03:19,910
thanks I'm mighty enough if you don't

86
00:03:19,910 --> 00:03:23,450
have to tip ups explain why but why no

87
00:03:23,450 --> 00:03:25,160
why do we like DevOps you know why is

88
00:03:25,160 --> 00:03:28,430
there Bob's thing well a lot of

89
00:03:28,430 --> 00:03:30,110
interpretations a lot of reasons for it

90
00:03:30,110 --> 00:03:32,120
I'm gonna choose one that you know for

91
00:03:32,120 --> 00:03:33,769
the context of this presentation which

92
00:03:33,769 --> 00:03:35,269
is that the reason we embrace DevOps is

93
00:03:35,269 --> 00:03:37,790
because of speed because what it does is

94
00:03:37,790 --> 00:03:40,700
it helps us deliver value to our users

95
00:03:40,700 --> 00:03:42,860
and adapts to market needs quickly and

96
00:03:42,860 --> 00:03:45,709
at scale right we we change the market

97
00:03:45,709 --> 00:03:47,480
the world is moving in a lightning pace

98
00:03:47,480 --> 00:03:49,310
the customers have a demand and they

99
00:03:49,310 --> 00:03:50,630
want to be delighted and we need to be

100
00:03:50,630 --> 00:03:53,989
able to move quickly to adapt them so

101
00:03:53,989 --> 00:03:56,030
this is this is a strong motivation and

102
00:03:56,030 --> 00:03:58,160
strong value and therefore we all want

103
00:03:58,160 --> 00:04:00,230
to do DevOps but you know what what does

104
00:04:00,230 --> 00:04:01,850
that even mean right like what is doing

105
00:04:01,850 --> 00:04:06,560
DevOps even mean so again a bunch of

106
00:04:06,560 --> 00:04:08,209
interpretations for it I'm gonna look at

107
00:04:08,209 --> 00:04:09,980
it in these three steps and that's gonna

108
00:04:09,980 --> 00:04:11,630
be maybe the structure for the rest of

109
00:04:11,630 --> 00:04:14,269
our talk here when you talk about doing

110
00:04:14,269 --> 00:04:16,579
DevOps there are three maybe evolution

111
00:04:16,579 --> 00:04:18,620
steps for it the first is using DevOps

112
00:04:18,620 --> 00:04:21,289
technologies containers cloud open

113
00:04:21,289 --> 00:04:22,550
source and the likes

114
00:04:22,550 --> 00:04:24,440
clearly useful capabilities on their own

115
00:04:24,440 --> 00:04:25,700
rights the second is DevOps

116
00:04:25,700 --> 00:04:26,870
methodologies

117
00:04:26,870 --> 00:04:28,460
micro-services continuous integration

118
00:04:28,460 --> 00:04:31,100
and continuous deployment those are our

119
00:04:31,100 --> 00:04:33,320
methodologies around changing the way we

120
00:04:33,320 --> 00:04:34,850
develop software and to use those

121
00:04:34,850 --> 00:04:36,560
technologies and third and maybe most

122
00:04:36,560 --> 00:04:38,510
important as this DevOps shared

123
00:04:38,510 --> 00:04:40,220
ownership mindset right the very core

124
00:04:40,220 --> 00:04:41,900
notion of dev and ops coming together

125
00:04:41,900 --> 00:04:43,910
that you don't just throw code over the

126
00:04:43,910 --> 00:04:45,800
wall and operate it as an operator you

127
00:04:45,800 --> 00:04:47,540
care about the success of the business

128
00:04:47,540 --> 00:04:48,680
you don't just run the code you know

129
00:04:48,680 --> 00:04:50,540
what it does and what the value of it is

130
00:04:50,540 --> 00:04:53,510
so this is this is a structure for what

131
00:04:53,510 --> 00:04:56,960
DevOps is and if we take that model we

132
00:04:56,960 --> 00:04:59,570
can say well so what is DevOps you know

133
00:04:59,570 --> 00:05:01,490
what what does deficit cops mean and

134
00:05:01,490 --> 00:05:03,020
deficit cops is you know it's a buzzword

135
00:05:03,020 --> 00:05:04,729
no buzzwords would only take you so far

136
00:05:04,729 --> 00:05:06,740
it's awesome because it kind of drives a

137
00:05:06,740 --> 00:05:09,020
movement just like DevOps but it's not

138
00:05:09,020 --> 00:05:11,690
awesome in in explaining new ones right

139
00:05:11,690 --> 00:05:14,150
or complicated topics so what I'm going

140
00:05:14,150 --> 00:05:16,190
to do is I'm going to suggest the

141
00:05:16,190 --> 00:05:18,800
structure here for using that same trial

142
00:05:18,800 --> 00:05:21,650
for explaining what dev Cyclops is as

143
00:05:21,650 --> 00:05:24,229
well and and maybe that would help us a

144
00:05:24,229 --> 00:05:25,430
little bit hopefully by the end of this

145
00:05:25,430 --> 00:05:27,770
talk have a bit of a frame a bit of a

146
00:05:27,770 --> 00:05:30,410
mental frame to to assess when somebody

147
00:05:30,410 --> 00:05:31,940
says you know I want to do deficit

148
00:05:31,940 --> 00:05:33,350
officer you say I want to do deficit

149
00:05:33,350 --> 00:05:34,880
cops or when you look at a vendor that

150
00:05:34,880 --> 00:05:36,979
says I'm a deficit cops vendor what does

151
00:05:36,979 --> 00:05:39,500
that mean so to me those three tiers are

152
00:05:39,500 --> 00:05:41,840
once again securing DevOps technologies

153
00:05:41,840 --> 00:05:43,630
we'll dig more into each of these

154
00:05:43,630 --> 00:05:46,010
building security into DevOps

155
00:05:46,010 --> 00:05:47,900
methodologies so making it a part of

156
00:05:47,900 --> 00:05:49,789
that flow and then most importantly how

157
00:05:49,789 --> 00:05:52,340
do we embrace security into this share

158
00:05:52,340 --> 00:05:54,760
the ownership mindset so that's it again

159
00:05:54,760 --> 00:05:57,110
let's start from the first one securing

160
00:05:57,110 --> 00:06:00,020
develop technologies so DevOps brings

161
00:06:00,020 --> 00:06:02,090
along or at least kind of emphasizes

162
00:06:02,090 --> 00:06:04,160
really like accelerates a bunch of new

163
00:06:04,160 --> 00:06:06,260
technologies they range from you know

164
00:06:06,260 --> 00:06:08,240
cloud and containers you know serverless

165
00:06:08,240 --> 00:06:11,570
being the thing to do or you know open

166
00:06:11,570 --> 00:06:12,830
source that has been around forever but

167
00:06:12,830 --> 00:06:14,830
really this accelerated and impart

168
00:06:14,830 --> 00:06:17,750
development teams has really grown to

169
00:06:17,750 --> 00:06:19,940
you see how much open source is embraced

170
00:06:19,940 --> 00:06:21,979
open source libraries all of those are

171
00:06:21,979 --> 00:06:24,710
great technologies that that DevOps can

172
00:06:24,710 --> 00:06:26,150
bring to the fore and takes advantage of

173
00:06:26,150 --> 00:06:28,550
and that creates two types of security

174
00:06:28,550 --> 00:06:32,660
problems the first problem is that is

175
00:06:32,660 --> 00:06:34,460
very sort of technical early almost

176
00:06:34,460 --> 00:06:36,289
administrative and that is that many of

177
00:06:36,289 --> 00:06:38,630
these security solutions don't work in

178
00:06:38,630 --> 00:06:40,129
this new surrounding there

179
00:06:40,129 --> 00:06:42,409
talking about security needs that are

180
00:06:42,409 --> 00:06:44,899
still relevant in the world of a new

181
00:06:44,899 --> 00:06:46,159
environment you know for instance you

182
00:06:46,159 --> 00:06:47,899
might still want to you know understand

183
00:06:47,899 --> 00:06:49,729
that you have a virus on a container you

184
00:06:49,729 --> 00:06:51,709
know you might still want to secure your

185
00:06:51,709 --> 00:06:54,800
network or on your microservices but

186
00:06:54,800 --> 00:06:56,599
technically you might not be able to

187
00:06:56,599 --> 00:06:58,939
install your endpoint solution you're

188
00:06:58,939 --> 00:07:01,009
sort of malware detection system on the

189
00:07:01,009 --> 00:07:02,749
container so those are just their

190
00:07:02,749 --> 00:07:05,330
technical adaptations and let's sort of

191
00:07:05,330 --> 00:07:06,769
dig a little bit at a couple of examples

192
00:07:06,769 --> 00:07:10,039
a little bit more more in depth the

193
00:07:10,039 --> 00:07:12,139
first example I'll talk about is a web

194
00:07:12,139 --> 00:07:13,909
app firewall so hopefully most of you

195
00:07:13,909 --> 00:07:15,830
know whether web app firewall is it's

196
00:07:15,830 --> 00:07:17,449
well it's kind of a firewall at the

197
00:07:17,449 --> 00:07:20,149
application layer and it helps protect

198
00:07:20,149 --> 00:07:22,249
against SQL injections it's a similar

199
00:07:22,249 --> 00:07:24,769
attacks and historically web firewalls

200
00:07:24,769 --> 00:07:26,629
were an appliance you know they were a

201
00:07:26,629 --> 00:07:28,969
box that you just had to put in front of

202
00:07:28,969 --> 00:07:31,879
your system or maybe many boxes and you

203
00:07:31,879 --> 00:07:33,079
know they would filter the traffic and

204
00:07:33,079 --> 00:07:34,909
try to do it at a high capacity this is

205
00:07:34,909 --> 00:07:36,529
a diagram of Imperva which is you know

206
00:07:36,529 --> 00:07:37,879
maybe the leader in the world firewall

207
00:07:37,879 --> 00:07:39,889
space and you know they've indeed

208
00:07:39,889 --> 00:07:42,469
started as an appliance now an appliance

209
00:07:42,469 --> 00:07:44,990
is good when you're running your spheres

210
00:07:44,990 --> 00:07:48,409
or your sort of data center but it's not

211
00:07:48,409 --> 00:07:50,179
necessarily the best thing when you are

212
00:07:50,179 --> 00:07:52,610
you know in the cloud and when you auto

213
00:07:52,610 --> 00:07:54,379
scale right how do you sort of adjust

214
00:07:54,379 --> 00:07:57,199
boxes elastically if your servers behind

215
00:07:57,199 --> 00:07:59,689
are elastic and so you know these

216
00:07:59,689 --> 00:08:04,159
systems or these applications the world

217
00:08:04,159 --> 00:08:06,589
formal systems had to had to adapt right

218
00:08:06,589 --> 00:08:09,079
how to change to be able to block wave

219
00:08:09,079 --> 00:08:11,509
attacks and all those scaling

220
00:08:11,509 --> 00:08:13,519
surroundings sounds simple enough right

221
00:08:13,519 --> 00:08:16,969
here just do this this is an actual

222
00:08:16,969 --> 00:08:20,300
diagram from impervious documentation to

223
00:08:20,300 --> 00:08:22,999
talk about how do they although scale to

224
00:08:22,999 --> 00:08:25,669
adapt to to an auto scaling surrounding

225
00:08:25,669 --> 00:08:27,259
now you know like it's kind of easy to

226
00:08:27,259 --> 00:08:29,209
poke fun you know these fancy diagrams

227
00:08:29,209 --> 00:08:31,159
these things do get complicated for a

228
00:08:31,159 --> 00:08:32,120
reason

229
00:08:32,120 --> 00:08:33,649
but that is indeed a solution it's an

230
00:08:33,649 --> 00:08:35,539
adaptation that says okay you know you

231
00:08:35,539 --> 00:08:37,039
can use these virtual appliances and

232
00:08:37,039 --> 00:08:39,229
auto scale them accordingly so you're

233
00:08:39,229 --> 00:08:40,880
still applying the what about firewall

234
00:08:40,880 --> 00:08:42,349
that's the most direct and most

235
00:08:42,349 --> 00:08:44,029
simplistic statement that you might say

236
00:08:44,029 --> 00:08:45,949
is a deficit cops think they've adapted

237
00:08:45,949 --> 00:08:49,490
into this DevOps technology maybe a

238
00:08:49,490 --> 00:08:51,829
slightly more forward-thinking angle to

239
00:08:51,829 --> 00:08:52,900
it or like a

240
00:08:52,900 --> 00:08:55,300
you were thinking from the same vendor

241
00:08:55,300 --> 00:08:57,910
is the notion of like shifting gears and

242
00:08:57,910 --> 00:09:00,130
saying well maybe you're your solution

243
00:09:00,130 --> 00:09:02,980
itself should also be a cloud and moving

244
00:09:02,980 --> 00:09:04,330
this notion about what about far world

245
00:09:04,330 --> 00:09:07,660
to be as a service so this is again kind

246
00:09:07,660 --> 00:09:09,250
of the service might put it in front of

247
00:09:09,250 --> 00:09:11,230
those clouds and then you yourself you

248
00:09:11,230 --> 00:09:13,360
improve in this case you know might Auto

249
00:09:13,360 --> 00:09:16,120
scale your system but offload that from

250
00:09:16,120 --> 00:09:18,940
the user so you know two different

251
00:09:18,940 --> 00:09:20,560
models again very simple we're starting

252
00:09:20,560 --> 00:09:22,420
from the basics here just adapting an

253
00:09:22,420 --> 00:09:23,650
existing capability to these

254
00:09:23,650 --> 00:09:26,470
technologies and it's worth noting that

255
00:09:26,470 --> 00:09:28,390
when you do this type of adaptation it

256
00:09:28,390 --> 00:09:30,070
shakes the industry a little bit right

257
00:09:30,070 --> 00:09:32,320
so if you're talking about this you know

258
00:09:32,320 --> 00:09:34,930
cloud service being a place where the

259
00:09:34,930 --> 00:09:36,790
weather firewall would sit well there's

260
00:09:36,790 --> 00:09:38,230
a bunch of other solutions out there

261
00:09:38,230 --> 00:09:40,540
that are already a cloud service that

262
00:09:40,540 --> 00:09:42,430
funnels your traffic maybe they can

263
00:09:42,430 --> 00:09:44,890
introduce web a firewall and indeed if

264
00:09:44,890 --> 00:09:46,270
you look it's today and what about

265
00:09:46,270 --> 00:09:47,680
firewalls and this is probably the most

266
00:09:47,680 --> 00:09:49,960
mature security technology I mentioned

267
00:09:49,960 --> 00:09:54,280
in this in this presentation you know

268
00:09:54,280 --> 00:09:56,200
the one the security technology that has

269
00:09:56,200 --> 00:09:59,860
most adapted to cloud and DevOps you can

270
00:09:59,860 --> 00:10:02,560
see CD ends you know content delivery

271
00:10:02,560 --> 00:10:04,570
networks like Akamai CloudFlare fastly

272
00:10:04,570 --> 00:10:08,140
that have already been proxying traffic

273
00:10:08,140 --> 00:10:09,610
you know they've already been in the

274
00:10:09,610 --> 00:10:11,830
line of fire and they've added a web app

275
00:10:11,830 --> 00:10:13,660
far more capability now that this is a

276
00:10:13,660 --> 00:10:15,700
legitimate and in fact valuable way to

277
00:10:15,700 --> 00:10:19,240
deploy a laugh right so this is an

278
00:10:19,240 --> 00:10:21,100
example of what about Farwell adapting

279
00:10:21,100 --> 00:10:23,520
to cloud in this case and auto scaling

280
00:10:23,520 --> 00:10:25,930
the other example I'll show kind of

281
00:10:25,930 --> 00:10:27,880
under that context of adaptation is

282
00:10:27,880 --> 00:10:30,610
containers containers are a totally

283
00:10:30,610 --> 00:10:33,550
trouble child problem maker in the world

284
00:10:33,550 --> 00:10:36,190
of security for DevOps they rock the

285
00:10:36,190 --> 00:10:38,920
boat you know they are maybe the epitome

286
00:10:38,920 --> 00:10:42,220
of merging the sort of ops and virtual

287
00:10:42,220 --> 00:10:44,050
machines and sort of infrastructure type

288
00:10:44,050 --> 00:10:48,070
mindset and Dev so they rock the boat

289
00:10:48,070 --> 00:10:51,130
shall we say right so when you talk

290
00:10:51,130 --> 00:10:53,650
about adapting to containers or adapting

291
00:10:53,650 --> 00:10:55,630
security containers probably the best

292
00:10:55,630 --> 00:10:58,150
example or one good example is endpoint

293
00:10:58,150 --> 00:11:01,390
protection so n put protection is sort

294
00:11:01,390 --> 00:11:04,210
of the combined name for anti-virus

295
00:11:04,210 --> 00:11:06,700
anti-malware it's the idea that says

296
00:11:06,700 --> 00:11:06,910
well

297
00:11:06,910 --> 00:11:08,830
if somebody did manage to compromise

298
00:11:08,830 --> 00:11:11,590
your machine you kind of want to know

299
00:11:11,590 --> 00:11:12,010
about it

300
00:11:12,010 --> 00:11:13,150
right and you want to know about it

301
00:11:13,150 --> 00:11:15,340
whether it's a physical machine a VM or

302
00:11:15,340 --> 00:11:17,190
a container you know containers are not

303
00:11:17,190 --> 00:11:20,170
wonderfully immune to malware they are

304
00:11:20,170 --> 00:11:21,850
you know just as susceptible and if that

305
00:11:21,850 --> 00:11:23,920
happens you want to be able to detect it

306
00:11:23,920 --> 00:11:26,020
so when you look at solutions there's a

307
00:11:26,020 --> 00:11:27,550
bunch of these solutions in the endpoint

308
00:11:27,550 --> 00:11:28,690
protection space you know for instance

309
00:11:28,690 --> 00:11:31,390
Symantec being one of them but they are

310
00:11:31,390 --> 00:11:32,770
now faced with this challenge it says

311
00:11:32,770 --> 00:11:35,350
how do you identify malware or viruses

312
00:11:35,350 --> 00:11:38,080
within a container containers are not

313
00:11:38,080 --> 00:11:40,510
really a machine you know these these

314
00:11:40,510 --> 00:11:42,520
systems are designed at first for from

315
00:11:42,520 --> 00:11:44,440
bare metal then they adapted to be able

316
00:11:44,440 --> 00:11:45,820
to run into virtual machines and

317
00:11:45,820 --> 00:11:47,590
containers really messed that up you

318
00:11:47,590 --> 00:11:50,110
know they're not really a host but they

319
00:11:50,110 --> 00:11:53,170
kind of are as well and so the solution

320
00:11:53,170 --> 00:11:54,940
is adapt you know this is an example of

321
00:11:54,940 --> 00:11:57,010
you know a first step of adaptation that

322
00:11:57,010 --> 00:11:58,480
Symantec is taken and others have done a

323
00:11:58,480 --> 00:12:00,070
similar thing I think Trend Micro does

324
00:12:00,070 --> 00:12:03,940
this as well which basically says ok run

325
00:12:03,940 --> 00:12:05,890
our endpoint protection on the container

326
00:12:05,890 --> 00:12:08,260
host the machine that is running of the

327
00:12:08,260 --> 00:12:10,330
containers and then we'll take in and

328
00:12:10,330 --> 00:12:11,980
that's you know an interesting evolution

329
00:12:11,980 --> 00:12:14,380
it already runs into problems or

330
00:12:14,380 --> 00:12:16,090
challenges when you think about Fargate

331
00:12:16,090 --> 00:12:17,410
for instance or environments where you

332
00:12:17,410 --> 00:12:20,140
do not own the hosts you know you you

333
00:12:20,140 --> 00:12:21,670
the application owner don't own the host

334
00:12:21,670 --> 00:12:24,670
but it's a step towards that path again

335
00:12:24,670 --> 00:12:28,030
an example of adapting a security to the

336
00:12:28,030 --> 00:12:29,710
DevOps environment and maybe the minimal

337
00:12:29,710 --> 00:12:33,280
deficit cops motion also in this world

338
00:12:33,280 --> 00:12:36,760
of the containers is another very common

339
00:12:36,760 --> 00:12:38,860
practice of patching your servers so

340
00:12:38,860 --> 00:12:40,660
patching your servers basically means

341
00:12:40,660 --> 00:12:42,550
you know you run a server it has a bunch

342
00:12:42,550 --> 00:12:44,350
of these operating system dependencies

343
00:12:44,350 --> 00:12:47,050
and those dependencies are very widely

344
00:12:47,050 --> 00:12:52,120
used in open SSL - SSH and if like those

345
00:12:52,120 --> 00:12:53,530
are pieces of software and over time

346
00:12:53,530 --> 00:12:55,630
maybe vulnerabilities or maybe security

347
00:12:55,630 --> 00:12:57,220
bugs vulnerabilities are discovered in

348
00:12:57,220 --> 00:12:59,260
them and once they are discovered you

349
00:12:59,260 --> 00:13:01,720
need to update the the versions of those

350
00:13:01,720 --> 00:13:03,610
components in your system and if you

351
00:13:03,610 --> 00:13:05,770
don't patch your servers you're going to

352
00:13:05,770 --> 00:13:06,310
get hacked

353
00:13:06,310 --> 00:13:09,910
you know span patch servers has long

354
00:13:09,910 --> 00:13:12,730
been the number one reason that that

355
00:13:12,730 --> 00:13:14,230
systems get compromised the number one

356
00:13:14,230 --> 00:13:17,680
path to to be compromised that really

357
00:13:17,680 --> 00:13:19,270
hasn't changed you know that continues

358
00:13:19,270 --> 00:13:20,380
to be

359
00:13:20,380 --> 00:13:22,180
massive problem wrangling all these

360
00:13:22,180 --> 00:13:25,090
servers is a tough problem so how do you

361
00:13:25,090 --> 00:13:27,010
you know when you think about containers

362
00:13:27,010 --> 00:13:29,140
containers run an operating system and

363
00:13:29,140 --> 00:13:31,360
those operating systems have you know

364
00:13:31,360 --> 00:13:33,370
the operating system components that I

365
00:13:33,370 --> 00:13:35,470
mentioned and you want to patch them you

366
00:13:35,470 --> 00:13:37,810
have the same need but these containers

367
00:13:37,810 --> 00:13:39,850
are not a machine that you know some IT

368
00:13:39,850 --> 00:13:42,490
or you know even cloud architect is

369
00:13:42,490 --> 00:13:45,280
managing they are machines that that are

370
00:13:45,280 --> 00:13:46,870
built as part of your software

371
00:13:46,870 --> 00:13:49,690
environment so how do you adapt your

372
00:13:49,690 --> 00:13:52,240
server patching to this container

373
00:13:52,240 --> 00:13:54,940
technology right and here once again

374
00:13:54,940 --> 00:13:56,200
there's a bunch of solutions I'm using

375
00:13:56,200 --> 00:13:58,420
sneaks example here there's a few others

376
00:13:58,420 --> 00:14:00,550
you know clear open sources a few

377
00:14:00,550 --> 00:14:03,940
commercial ones that can scan an image

378
00:14:03,940 --> 00:14:06,640
in a container image for these types of

379
00:14:06,640 --> 00:14:08,560
unpatched components or vulnerable

380
00:14:08,560 --> 00:14:10,570
components and do that in a way that is

381
00:14:10,570 --> 00:14:12,970
more oriented with you know with docker

382
00:14:12,970 --> 00:14:15,460
with builds with with sort of the

383
00:14:15,460 --> 00:14:19,690
developer workflow so so far you know we

384
00:14:19,690 --> 00:14:21,250
really talked about the the basics which

385
00:14:21,250 --> 00:14:23,010
is dead-set cobs

386
00:14:23,010 --> 00:14:26,380
B as the interpretation of adapting just

387
00:14:26,380 --> 00:14:29,290
being able to run security solutions

388
00:14:29,290 --> 00:14:31,060
that are already you know silver are

389
00:14:31,060 --> 00:14:33,910
still logically valuable on these newer

390
00:14:33,910 --> 00:14:35,890
technologies and just tech adapting

391
00:14:35,890 --> 00:14:37,450
that's the minimum like title if you see

392
00:14:37,450 --> 00:14:40,690
a vendor say def say cops still under

393
00:14:40,690 --> 00:14:44,050
that develops technology notion the

394
00:14:44,050 --> 00:14:45,880
second challenge we have with security

395
00:14:45,880 --> 00:14:47,920
develops technologies are new security

396
00:14:47,920 --> 00:14:50,050
risks that these technologies introduced

397
00:14:50,050 --> 00:14:53,140
and you know every technology every

398
00:14:53,140 --> 00:14:54,910
power of your capability introduces you

399
00:14:54,910 --> 00:14:56,530
know opportunities and risks that's just

400
00:14:56,530 --> 00:14:58,540
reality you know that's kind of a truism

401
00:14:58,540 --> 00:14:59,410
in the world

402
00:14:59,410 --> 00:15:03,280
so as we introduce containers cloud etc

403
00:15:03,280 --> 00:15:05,980
they create a risk that you have to

404
00:15:05,980 --> 00:15:09,040
maybe build new security solutions to

405
00:15:09,040 --> 00:15:10,660
address these new security risk or these

406
00:15:10,660 --> 00:15:13,180
new security features I'm going to give

407
00:15:13,180 --> 00:15:16,780
two examples here the first is unsecured

408
00:15:16,780 --> 00:15:18,490
buckets this is probably the most like

409
00:15:18,490 --> 00:15:20,950
famous security flaw of this world of

410
00:15:20,950 --> 00:15:23,650
modern infrastructure you see all the

411
00:15:23,650 --> 00:15:25,690
times you know all these massive

412
00:15:25,690 --> 00:15:27,510
breaches talking about some you know

413
00:15:27,510 --> 00:15:29,800
unsecured storage holding sensitive

414
00:15:29,800 --> 00:15:32,740
information and that just got disclosed

415
00:15:32,740 --> 00:15:34,000
then you

416
00:15:34,000 --> 00:15:36,519
you know have online publicly available

417
00:15:36,519 --> 00:15:38,440
storage that was unsecured before DevOps

418
00:15:38,440 --> 00:15:40,899
but you didn't you know the likelihood

419
00:15:40,899 --> 00:15:43,269
of you having bad in some you know s3

420
00:15:43,269 --> 00:15:44,410
bucket that you didn't secure is just

421
00:15:44,410 --> 00:15:47,050
dramatically higher in this world of

422
00:15:47,050 --> 00:15:49,779
DevOps or cloud I'm going to use a

423
00:15:49,779 --> 00:15:52,570
couple of examples for this the first is

424
00:15:52,570 --> 00:15:54,790
the uber hack of 2016 you know who were

425
00:15:54,790 --> 00:15:56,680
you know gives us a lot of material in

426
00:15:56,680 --> 00:15:58,000
these security presentations

427
00:15:58,000 --> 00:15:59,470
unfortunately they've had a bunch of

428
00:15:59,470 --> 00:16:01,720
Miss steps around the security side in

429
00:16:01,720 --> 00:16:04,180
this specific case there was a problem

430
00:16:04,180 --> 00:16:05,880
or attackers access to details of

431
00:16:05,880 --> 00:16:09,370
600,000 goober drivers and some personal

432
00:16:09,370 --> 00:16:11,130
info email sometimes much more of

433
00:16:11,130 --> 00:16:14,230
57million uber users pretty much all the

434
00:16:14,230 --> 00:16:16,510
Lubar users at the time so a lot of

435
00:16:16,510 --> 00:16:18,640
information was leaked or was accessed

436
00:16:18,640 --> 00:16:21,600
by attackers the way this happened was a

437
00:16:21,600 --> 00:16:24,760
developer pushed some s3 tokens to a

438
00:16:24,760 --> 00:16:26,800
private github.com repository so this

439
00:16:26,800 --> 00:16:29,610
was still kind of within the realm of

440
00:16:29,610 --> 00:16:32,260
private code but attackers managed to

441
00:16:32,260 --> 00:16:33,640
compromise maybe the developers it's

442
00:16:33,640 --> 00:16:35,890
unclear how and they gained access to

443
00:16:35,890 --> 00:16:38,230
the repository and stole those tokens

444
00:16:38,230 --> 00:16:39,550
you know Oberon was not using to a

445
00:16:39,550 --> 00:16:42,310
failure so the they used this

446
00:16:42,310 --> 00:16:43,899
information they downloaded it on the

447
00:16:43,899 --> 00:16:45,550
event and the information was available

448
00:16:45,550 --> 00:16:47,620
you know it was technically accessible

449
00:16:47,620 --> 00:16:51,100
on github.com once he had those tokens

450
00:16:51,100 --> 00:16:53,829
and they stole this information not

451
00:16:53,829 --> 00:16:56,019
awesome and in practice actually a

452
00:16:56,019 --> 00:16:57,790
little bit better than the hack that

453
00:16:57,790 --> 00:17:01,060
they had in 2014 were a developer stored

454
00:17:01,060 --> 00:17:03,430
a sensitive URL with some tokens in a

455
00:17:03,430 --> 00:17:04,390
public github.com

456
00:17:04,390 --> 00:17:06,790
gist you know so this was not even with

457
00:17:06,790 --> 00:17:09,579
a key and that information once again

458
00:17:09,579 --> 00:17:12,429
attacker has access to that data in an

459
00:17:12,429 --> 00:17:14,980
only exposed information about 50,000

460
00:17:14,980 --> 00:17:17,380
developers sort of drivers at the time

461
00:17:17,380 --> 00:17:19,150
so hopefully not the same developer but

462
00:17:19,150 --> 00:17:21,429
sort of a similar-sounding mistake so

463
00:17:21,429 --> 00:17:24,910
this is these are sensitive URLs and you

464
00:17:24,910 --> 00:17:26,290
know tokens that are stored in a repo

465
00:17:26,290 --> 00:17:28,900
but you know sometimes you know you had

466
00:17:28,900 --> 00:17:31,059
an access key you you were lucky and if

467
00:17:31,059 --> 00:17:33,090
you can relate to the Monty Python

468
00:17:33,090 --> 00:17:36,010
reference here when you look at the

469
00:17:36,010 --> 00:17:38,410
worlds today right or the the actual

470
00:17:38,410 --> 00:17:40,179
incidents that you read about many of

471
00:17:40,179 --> 00:17:41,890
these really had no token whatsoever

472
00:17:41,890 --> 00:17:43,929
right you see a whole you know the

473
00:17:43,929 --> 00:17:45,790
myriad of this frankly like every week

474
00:17:45,790 --> 00:17:47,450
there's some new examples

475
00:17:47,450 --> 00:17:49,790
of big massive companies that just have

476
00:17:49,790 --> 00:17:51,980
these very sensitive information stored

477
00:17:51,980 --> 00:17:54,350
in a bucket fury relying on the fact

478
00:17:54,350 --> 00:17:55,730
that nobody would ever figure out the

479
00:17:55,730 --> 00:17:59,000
URL so this is a very very common

480
00:17:59,000 --> 00:18:00,710
problem and you need security solutions

481
00:18:00,710 --> 00:18:02,080
for it we'll talk about that in a sec

482
00:18:02,080 --> 00:18:04,430
before we go to solutions just to say

483
00:18:04,430 --> 00:18:06,590
that there is kind of a close cousin of

484
00:18:06,590 --> 00:18:10,250
this you know unsecured storage in the

485
00:18:10,250 --> 00:18:11,900
cloud world and that is in secure

486
00:18:11,900 --> 00:18:14,030
configuration sort of a similar type

487
00:18:14,030 --> 00:18:16,000
notion right you have some database with

488
00:18:16,000 --> 00:18:18,950
with with default passwords that are

489
00:18:18,950 --> 00:18:20,570
very easy to guess or with no passwords

490
00:18:20,570 --> 00:18:22,640
that go at all and once again we see a

491
00:18:22,640 --> 00:18:23,870
bunch of these you know these are just

492
00:18:23,870 --> 00:18:26,030
three quick examples the two top ones

493
00:18:26,030 --> 00:18:29,150
are about an elastic storage that you

494
00:18:29,150 --> 00:18:30,710
know these things these systems bias

495
00:18:30,710 --> 00:18:33,350
both elastic and and others they

496
00:18:33,350 --> 00:18:35,060
bias for ease of use so they deploy it

497
00:18:35,060 --> 00:18:37,940
with this very easy passwords and access

498
00:18:37,940 --> 00:18:39,230
and then people just take those and they

499
00:18:39,230 --> 00:18:40,520
deploy them and they store a lot of

500
00:18:40,520 --> 00:18:42,050
information on them and they just make

501
00:18:42,050 --> 00:18:44,510
them available to the web so we have you

502
00:18:44,510 --> 00:18:46,250
know Dow Jones leaking some sort of

503
00:18:46,250 --> 00:18:49,070
fraud like risky individuals run fraud

504
00:18:49,070 --> 00:18:50,480
the likes we have rubric which is

505
00:18:50,480 --> 00:18:53,450
ironically a data backup or a data

506
00:18:53,450 --> 00:18:55,820
management system that has a similar

507
00:18:55,820 --> 00:18:58,070
breach and a couple years back we

508
00:18:58,070 --> 00:19:00,920
actually had a whole instance of 28,000

509
00:19:00,920 --> 00:19:03,290
MongoDB instances that were very easily

510
00:19:03,290 --> 00:19:05,780
crawled and discovered that used these

511
00:19:05,780 --> 00:19:08,630
default insecure passwords this is a

512
00:19:08,630 --> 00:19:11,630
very real problem in the world of DevOps

513
00:19:11,630 --> 00:19:15,050
and kind of cloud storage

514
00:19:15,050 --> 00:19:17,270
and so it requires some new solutions so

515
00:19:17,270 --> 00:19:20,510
we see cloud security scanners coming to

516
00:19:20,510 --> 00:19:21,950
the fore you know this is at this point

517
00:19:21,950 --> 00:19:24,830
new tools new solutions tools like

518
00:19:24,830 --> 00:19:26,810
clouds checker there's I think every

519
00:19:26,810 --> 00:19:28,520
detail as well it's a bit of a grainy

520
00:19:28,520 --> 00:19:30,230
image over here that scan your

521
00:19:30,230 --> 00:19:32,180
configuration and find mistakes so this

522
00:19:32,180 --> 00:19:34,550
is maybe the dominant solution that has

523
00:19:34,550 --> 00:19:36,200
kind of come up for this type of problem

524
00:19:36,200 --> 00:19:39,380
you also see scanners just adapt to

525
00:19:39,380 --> 00:19:40,850
these environments so you have tenable

526
00:19:40,850 --> 00:19:42,440
which is the kind of the home of

527
00:19:42,440 --> 00:19:45,020
necessity the creator of necess which is

528
00:19:45,020 --> 00:19:46,580
a scanner that scans your system from

529
00:19:46,580 --> 00:19:49,070
the outside and finds these types of of

530
00:19:49,070 --> 00:19:51,530
problems and they've adapted to be able

531
00:19:51,530 --> 00:19:55,040
to crawl or scan cloud infrastructure so

532
00:19:55,040 --> 00:19:58,400
trying to tackle you know a new a new

533
00:19:58,400 --> 00:20:00,320
type of risk read with new features or

534
00:20:00,320 --> 00:20:01,990
news

535
00:20:01,990 --> 00:20:05,540
and you know I can't containers are

536
00:20:05,540 --> 00:20:06,620
you'll see you know they're kind of the

537
00:20:06,620 --> 00:20:08,300
poster child of challenges from a

538
00:20:08,300 --> 00:20:10,100
security perspective you know they also

539
00:20:10,100 --> 00:20:12,190
introduce new security risks you know

540
00:20:12,190 --> 00:20:15,860
they create this like kinda sorta not

541
00:20:15,860 --> 00:20:21,020
really a virtual machine that is that is

542
00:20:21,020 --> 00:20:22,940
running on a machine and so two

543
00:20:22,940 --> 00:20:25,580
different machines in theory but in

544
00:20:25,580 --> 00:20:27,590
practice those machines are not fully

545
00:20:27,590 --> 00:20:29,150
fully isolated which is a part of the

546
00:20:29,150 --> 00:20:30,470
reason that we get all the agility that

547
00:20:30,470 --> 00:20:32,510
we get from it so it creates this risk

548
00:20:32,510 --> 00:20:35,810
of sandbox escaping the idea of jumping

549
00:20:35,810 --> 00:20:38,540
from one container to the host that is

550
00:20:38,540 --> 00:20:39,980
running another container or sort of

551
00:20:39,980 --> 00:20:42,650
influencing that container as well this

552
00:20:42,650 --> 00:20:44,390
is this is a problem that platforms

553
00:20:44,390 --> 00:20:46,520
generally try to have under control but

554
00:20:46,520 --> 00:20:48,170
fairly regularly in ludecke including

555
00:20:48,170 --> 00:20:49,250
actually you know this is opposed from

556
00:20:49,250 --> 00:20:52,880
from Leon here that that just talks

557
00:20:52,880 --> 00:20:54,560
about a vulnerability from a couple

558
00:20:54,560 --> 00:20:56,870
months ago which was this very serious

559
00:20:56,870 --> 00:20:58,400
security flaw and run see that allowed

560
00:20:58,400 --> 00:21:00,080
you know this type of action and there's

561
00:21:00,080 --> 00:21:01,400
a whole bunch of vulnerabilities over

562
00:21:01,400 --> 00:21:02,770
the years that have come up

563
00:21:02,770 --> 00:21:05,500
so sandbox escaping is a security risk

564
00:21:05,500 --> 00:21:08,120
naturally there are security solutions

565
00:21:08,120 --> 00:21:09,890
new security solutions that come along

566
00:21:09,890 --> 00:21:11,240
and they focus on these types of

567
00:21:11,240 --> 00:21:13,190
problems you have sandbox escaping

568
00:21:13,190 --> 00:21:14,870
protection from the companies like you

569
00:21:14,870 --> 00:21:16,760
know twistlock Rockwell for new startups

570
00:21:16,760 --> 00:21:18,730
or again existing endpoint protection

571
00:21:18,730 --> 00:21:21,260
companies like Trend Micro trying to

572
00:21:21,260 --> 00:21:23,090
sort of revert back and tackle this risk

573
00:21:23,090 --> 00:21:26,660
as well so a little long-winded but all

574
00:21:26,660 --> 00:21:29,600
of this foundation is around deficit

575
00:21:29,600 --> 00:21:31,760
cops in the notion of security for

576
00:21:31,760 --> 00:21:33,620
DevOps technologies right either

577
00:21:33,620 --> 00:21:36,860
securities that have adapted existing

578
00:21:36,860 --> 00:21:39,830
tools to just work in in in the new

579
00:21:39,830 --> 00:21:41,480
environments there's no real fundamental

580
00:21:41,480 --> 00:21:42,770
new functionality it's just the

581
00:21:42,770 --> 00:21:45,080
different surroundings or it's around

582
00:21:45,080 --> 00:21:46,940
understanding new security risks these

583
00:21:46,940 --> 00:21:49,010
technology introduced and then trying to

584
00:21:49,010 --> 00:21:51,770
cover them cool hopefully so far so good

585
00:21:51,770 --> 00:21:55,640
on to phase two phase two of the

586
00:21:55,640 --> 00:21:57,020
evolution is not just about hey I'm

587
00:21:57,020 --> 00:21:59,210
using containers but I'm adapting it

588
00:21:59,210 --> 00:22:00,950
right I'm not say you know kind of

589
00:22:00,950 --> 00:22:02,540
lifting and shifting my you know

590
00:22:02,540 --> 00:22:06,200
monolith from you know just running on a

591
00:22:06,200 --> 00:22:07,820
VM to running in a container because I

592
00:22:07,820 --> 00:22:09,440
think it's cooler but I'm also now

593
00:22:09,440 --> 00:22:11,510
breaking it up into these micro services

594
00:22:11,510 --> 00:22:13,340
and I'm taking advantage of the benefits

595
00:22:13,340 --> 00:22:14,810
that brings the four

596
00:22:14,810 --> 00:22:17,510
so you know DevOps introduces a whole

597
00:22:17,510 --> 00:22:19,850
set of these methodologies we're going

598
00:22:19,850 --> 00:22:21,590
to talk about CI CD and about

599
00:22:21,590 --> 00:22:24,110
micro-services let's start by saying CT

600
00:22:24,110 --> 00:22:26,060
CD and this notion of continuous

601
00:22:26,060 --> 00:22:29,120
delivery is is maybe one of the anchor

602
00:22:29,120 --> 00:22:30,740
tenants of DevOps you know you don't

603
00:22:30,740 --> 00:22:32,750
stop yourself Iran you just continuously

604
00:22:32,750 --> 00:22:35,330
deploy and that's challenging for

605
00:22:35,330 --> 00:22:36,890
security when you think about how

606
00:22:36,890 --> 00:22:38,960
security has been applied typically even

607
00:22:38,960 --> 00:22:41,600
is applied in many shops it tends to

608
00:22:41,600 --> 00:22:45,350
rely on gates on stops right even if you

609
00:22:45,350 --> 00:22:47,630
are forward-thinking and you and you do

610
00:22:47,630 --> 00:22:49,040
those games sort of apply those gates

611
00:22:49,040 --> 00:22:50,960
early there is a point in time in your

612
00:22:50,960 --> 00:22:52,970
waterfall development process where you

613
00:22:52,970 --> 00:22:55,040
stop for an audit for a design review

614
00:22:55,040 --> 00:22:56,570
for you know some form of security

615
00:22:56,570 --> 00:22:59,450
assessment and say city doesn't allow

616
00:22:59,450 --> 00:23:01,220
that you don't stop it's continuous you

617
00:23:01,220 --> 00:23:02,540
know there are no gates you know you

618
00:23:02,540 --> 00:23:04,940
just you don't stop you know we stop for

619
00:23:04,940 --> 00:23:08,330
nobody and so stopping is not an option

620
00:23:08,330 --> 00:23:10,460
and security solutions have to adapt

621
00:23:10,460 --> 00:23:12,230
they have to figure out how do they run

622
00:23:12,230 --> 00:23:14,720
in that environment the solution for

623
00:23:14,720 --> 00:23:17,300
that is you know basically automation

624
00:23:17,300 --> 00:23:18,650
you know it's basically the idea of

625
00:23:18,650 --> 00:23:20,570
taking something that the industry has

626
00:23:20,570 --> 00:23:22,400
long been trying to do with application

627
00:23:22,400 --> 00:23:25,330
security and that is run automated scans

628
00:23:25,330 --> 00:23:28,400
concept conceptually it were actually

629
00:23:28,400 --> 00:23:29,960
very prepared for this and we have you

630
00:23:29,960 --> 00:23:31,730
know SAS tasked you know these like

631
00:23:31,730 --> 00:23:33,380
static and then I'm make application

632
00:23:33,380 --> 00:23:34,940
security testing tools that are all

633
00:23:34,940 --> 00:23:36,890
about automation so they should fit

634
00:23:36,890 --> 00:23:40,340
right in kind of they don't fully fully

635
00:23:40,340 --> 00:23:41,990
work so let's dig in we're gonna look at

636
00:23:41,990 --> 00:23:43,130
the sort of the three buckets some of

637
00:23:43,130 --> 00:23:45,080
these types of automated security tests

638
00:23:45,080 --> 00:23:47,900
the first one to look at is static so

639
00:23:47,900 --> 00:23:50,240
static analysis static application

640
00:23:50,240 --> 00:23:51,860
security testing or sassed and sort of

641
00:23:51,860 --> 00:23:55,010
analysts speak basically what it is is

642
00:23:55,010 --> 00:23:56,840
something called taint flow analysis so

643
00:23:56,840 --> 00:23:58,490
it scans your codes to try and find

644
00:23:58,490 --> 00:24:00,980
potential vulnerable code paths it tries

645
00:24:00,980 --> 00:24:03,410
to find sources like a form field and

646
00:24:03,410 --> 00:24:06,260
sinks like a database right and see if

647
00:24:06,260 --> 00:24:08,510
data could flow from a source to a sink

648
00:24:08,510 --> 00:24:10,430
without being sanitized without being

649
00:24:10,430 --> 00:24:13,430
cleaned or verified in the process

650
00:24:13,430 --> 00:24:15,080
fundamentally you know a very sort of

651
00:24:15,080 --> 00:24:17,690
automation friendly thing to do

652
00:24:17,690 --> 00:24:19,880
I'd you know sure just run this test in

653
00:24:19,880 --> 00:24:20,900
your build and if it found the

654
00:24:20,900 --> 00:24:23,540
vulnerability break but it's not that

655
00:24:23,540 --> 00:24:24,050
simple

656
00:24:24,050 --> 00:24:27,200
first scan take a very very long time to

657
00:24:27,200 --> 00:24:27,670
run

658
00:24:27,670 --> 00:24:29,230
you know sometimes definitely hours

659
00:24:29,230 --> 00:24:31,270
sometimes days depending on the size of

660
00:24:31,270 --> 00:24:33,520
your of your path and that's sort of

661
00:24:33,520 --> 00:24:36,490
unacceptably slow for pretty much all

662
00:24:36,490 --> 00:24:38,290
build systems I know you're gonna get

663
00:24:38,290 --> 00:24:39,780
kicked out of the bill fairly quickly so

664
00:24:39,780 --> 00:24:44,140
SAS solutions had to adapt this world is

665
00:24:44,140 --> 00:24:46,660
still kind of in progress a little bit

666
00:24:46,660 --> 00:24:48,130
but the primary adaptation that has

667
00:24:48,130 --> 00:24:49,630
happened here is this notion of

668
00:24:49,630 --> 00:24:52,060
incremental scans so what does that mean

669
00:24:52,060 --> 00:24:54,640
it means you run one long scam and you

670
00:24:54,640 --> 00:24:56,350
do that at whatever frequency weekly

671
00:24:56,350 --> 00:24:57,790
monthly quarterly whatever makes sense

672
00:24:57,790 --> 00:24:58,480
for you

673
00:24:58,480 --> 00:24:59,560
and that's a very thorough and

674
00:24:59,560 --> 00:25:01,300
comprehensive scan and then you run

675
00:25:01,300 --> 00:25:04,000
these Delta scans as part of the build

676
00:25:04,000 --> 00:25:06,730
and those Delta scans only check you

677
00:25:06,730 --> 00:25:08,110
know the Delta the difference between

678
00:25:08,110 --> 00:25:09,490
the baseline that let's say you were

679
00:25:09,490 --> 00:25:11,890
doing weekly and you know what you've

680
00:25:11,890 --> 00:25:13,540
changed over here and hopefully that

681
00:25:13,540 --> 00:25:15,340
makes them fast enough they're not as

682
00:25:15,340 --> 00:25:16,750
comprehensive but they're still pretty

683
00:25:16,750 --> 00:25:19,420
good and they are may be fast enough to

684
00:25:19,420 --> 00:25:23,170
to run within the build so this is a

685
00:25:23,170 --> 00:25:25,240
simple it may be in the world of ast one

686
00:25:25,240 --> 00:25:27,010
of the kind of a more widely

687
00:25:27,010 --> 00:25:28,900
acknowledged widely accepted adaptation

688
00:25:28,900 --> 00:25:31,960
of security testing to the DevOps

689
00:25:31,960 --> 00:25:34,870
environment or methodology it's worth

690
00:25:34,870 --> 00:25:36,220
noting that there's a different problem

691
00:25:36,220 --> 00:25:38,610
around sass which is the results are

692
00:25:38,610 --> 00:25:41,290
just not accurate enough by default and

693
00:25:41,290 --> 00:25:42,520
for the most part you know this is the

694
00:25:42,520 --> 00:25:44,470
bane of existence for sass is the

695
00:25:44,470 --> 00:25:45,850
results you know the build will break

696
00:25:45,850 --> 00:25:46,960
and you'll find out it's a false

697
00:25:46,960 --> 00:25:48,880
positive and that's probably the biggest

698
00:25:48,880 --> 00:25:50,770
barrier for adoption the incremental

699
00:25:50,770 --> 00:25:52,840
scan is a decent adaptation that has

700
00:25:52,840 --> 00:25:57,100
happened so this is fast and you know

701
00:25:57,100 --> 00:25:59,200
sassed is again adapting to the CIC the

702
00:25:59,200 --> 00:26:01,690
environment that's dynamic application

703
00:26:01,690 --> 00:26:03,310
security testing is this notion of these

704
00:26:03,310 --> 00:26:05,260
blackbox testing so you know you deploy

705
00:26:05,260 --> 00:26:07,750
a system and this is this automated bot

706
00:26:07,750 --> 00:26:09,610
that would that would try to hack it you

707
00:26:09,610 --> 00:26:10,840
know putting in also some malicious

708
00:26:10,840 --> 00:26:13,000
inputs or luck you know simulated

709
00:26:13,000 --> 00:26:15,040
malicious inputs into form fields and

710
00:26:15,040 --> 00:26:18,190
the likes and seeing what happens once

711
00:26:18,190 --> 00:26:19,720
again you know it's an automated

712
00:26:19,720 --> 00:26:21,490
capability but it has some challenges

713
00:26:21,490 --> 00:26:23,590
around building that into a C ICD

714
00:26:23,590 --> 00:26:27,070
pipeline two challenges first the scans

715
00:26:27,070 --> 00:26:28,660
require some form of dedicated

716
00:26:28,660 --> 00:26:30,580
environment this is not a security

717
00:26:30,580 --> 00:26:32,080
specific problem many of these

718
00:26:32,080 --> 00:26:33,430
functional tests and things like that

719
00:26:33,430 --> 00:26:34,810
when you want to do end-to-end tests

720
00:26:34,810 --> 00:26:36,730
require you know an end to an

721
00:26:36,730 --> 00:26:39,040
environment that is deployed but it's a

722
00:26:39,040 --> 00:26:40,429
challenge it oftentimes doesn't

723
00:26:40,429 --> 00:26:42,499
hopefully you're doing that anyway there

724
00:26:42,499 --> 00:26:44,929
are solutions for it today and then the

725
00:26:44,929 --> 00:26:46,549
second is once again a performance

726
00:26:46,549 --> 00:26:47,809
problem you know if your thoughts asked

727
00:26:47,809 --> 00:26:50,539
was low no doing that for comprehensive

728
00:26:50,539 --> 00:26:52,249
scan and comprehensive crawling of an

729
00:26:52,249 --> 00:26:54,259
application and take a very very long

730
00:26:54,259 --> 00:26:57,379
time and so once again you know security

731
00:26:57,379 --> 00:26:59,419
solutions have adapted you know this is

732
00:26:59,419 --> 00:27:02,720
the deficit of motion first or so the

733
00:27:02,720 --> 00:27:05,149
probably the the most notable adaptation

734
00:27:05,149 --> 00:27:06,460
is iist

735
00:27:06,460 --> 00:27:08,450
interactive application security testing

736
00:27:08,450 --> 00:27:10,399
you know this is gonna have to love the

737
00:27:10,399 --> 00:27:13,999
analyst acronyms here so what I asked

738
00:27:13,999 --> 00:27:16,429
means is you instrument the app so you

739
00:27:16,429 --> 00:27:18,559
require some library or you know you

740
00:27:18,559 --> 00:27:20,149
include some library in your loads time

741
00:27:20,149 --> 00:27:22,549
and that modifies the application so

742
00:27:22,549 --> 00:27:23,899
that it knows what's happening when you

743
00:27:23,899 --> 00:27:25,730
run it and then you run the unit tests

744
00:27:25,730 --> 00:27:28,100
just regular unit tests and you deduce

745
00:27:28,100 --> 00:27:31,070
security issues from that so you

746
00:27:31,070 --> 00:27:33,080
understand the data flowed in a certain

747
00:27:33,080 --> 00:27:35,119
way and you figure out okay now I can

748
00:27:35,119 --> 00:27:36,679
start manipulating that and see if that

749
00:27:36,679 --> 00:27:41,419
works and I think thing OS zap works

750
00:27:41,419 --> 00:27:43,070
this way and there's some vendors like

751
00:27:43,070 --> 00:27:44,480
contrast security the likes that are

752
00:27:44,480 --> 00:27:47,360
doing this point commercially so this is

753
00:27:47,360 --> 00:27:49,340
less comprehensive but it works quickly

754
00:27:49,340 --> 00:27:51,619
and because it relies on your unit tests

755
00:27:51,619 --> 00:27:53,539
then it's only as you know it's it's

756
00:27:53,539 --> 00:27:55,190
length is proportional to the amount of

757
00:27:55,190 --> 00:27:56,539
time it takes you to run those unit

758
00:27:56,539 --> 00:27:59,899
tests and you know probably the best

759
00:27:59,899 --> 00:28:02,240
solution that the word has like this

760
00:28:02,240 --> 00:28:04,759
industry has has provided for the most

761
00:28:04,759 --> 00:28:06,889
part but it's still you know it

762
00:28:06,889 --> 00:28:08,869
sometimes works at the end of the day

763
00:28:08,869 --> 00:28:11,600
you know dast is rarely seen in SES in

764
00:28:11,600 --> 00:28:13,039
the environment and it ends up you know

765
00:28:13,039 --> 00:28:15,259
not being embraced into into the devs

766
00:28:15,259 --> 00:28:18,350
AQAP's motion just as a quick shout out

767
00:28:18,350 --> 00:28:20,389
on the side to a solution that is

768
00:28:20,389 --> 00:28:22,669
interesting i'm not sure if it's fully

769
00:28:22,669 --> 00:28:24,019
valid yet but i think it's worth

770
00:28:24,019 --> 00:28:25,999
considering it's from a company called

771
00:28:25,999 --> 00:28:28,340
detective phi which is a little bit more

772
00:28:28,340 --> 00:28:30,320
you know the solution as I understand it

773
00:28:30,320 --> 00:28:32,419
is they're more about starting a scan in

774
00:28:32,419 --> 00:28:33,679
the build but then running an

775
00:28:33,679 --> 00:28:36,110
asynchronous so you're still using the

776
00:28:36,110 --> 00:28:39,110
builds as a trigger as a statement that

777
00:28:39,110 --> 00:28:40,490
something has changed you need to scan

778
00:28:40,490 --> 00:28:43,129
again but you're not providing the

779
00:28:43,129 --> 00:28:44,539
results in line you don't break the

780
00:28:44,539 --> 00:28:48,139
build if there was a problem and then

781
00:28:48,139 --> 00:28:50,090
the last sort of automated security test

782
00:28:50,090 --> 00:28:51,710
that I'll talk about is SE a software

783
00:28:51,710 --> 00:28:52,860
composition analysis

784
00:28:52,860 --> 00:28:55,350
this is about fixing vulnerable

785
00:28:55,350 --> 00:28:57,210
libraries and as part of those

786
00:28:57,210 --> 00:28:59,190
components an SCA is an example of a

787
00:28:59,190 --> 00:29:01,950
very DevOps friendly type of problem you

788
00:29:01,950 --> 00:29:04,860
know you it's a very fast and accurate

789
00:29:04,860 --> 00:29:06,929
type of scan you figure out you running

790
00:29:06,929 --> 00:29:08,010
the build you figure out which

791
00:29:08,010 --> 00:29:10,679
components are installed over here you

792
00:29:10,679 --> 00:29:11,970
intersect that with a vulnerability

793
00:29:11,970 --> 00:29:13,890
database and you break the build if a

794
00:29:13,890 --> 00:29:16,409
phoner ability exists so fundamentally

795
00:29:16,409 --> 00:29:17,580
this is something that you actually see

796
00:29:17,580 --> 00:29:19,740
a lot of adoption inside build system

797
00:29:19,740 --> 00:29:21,330
and it's sort of a naturally deficit

798
00:29:21,330 --> 00:29:27,450
Copsey kind of form of functionality and

799
00:29:27,450 --> 00:29:28,679
that's great but even within that

800
00:29:28,679 --> 00:29:30,630
there's a lot of evolutions or sort of

801
00:29:30,630 --> 00:29:32,010
you know experimentations about how do

802
00:29:32,010 --> 00:29:34,230
you engage developers we'll talk about

803
00:29:34,230 --> 00:29:36,149
that a little bit more later on but just

804
00:29:36,149 --> 00:29:38,610
to show a couple of examples one is you

805
00:29:38,610 --> 00:29:39,840
know I mentioned in the previous slide

806
00:29:39,840 --> 00:29:41,309
break the build if there's a

807
00:29:41,309 --> 00:29:43,080
vulnerability breaking the build is a

808
00:29:43,080 --> 00:29:44,789
little harsh right you pull the cord

809
00:29:44,789 --> 00:29:47,700
it's not necessarily you know the it's a

810
00:29:47,700 --> 00:29:49,139
sledgehammer approach you don't always

811
00:29:49,139 --> 00:29:50,179
want to do it

812
00:29:50,179 --> 00:29:52,769
another model in a word using this and

813
00:29:52,769 --> 00:29:55,440
uh you know in sneak and you can you can

814
00:29:55,440 --> 00:29:57,059
doing a bunch of others is to actually

815
00:29:57,059 --> 00:29:58,860
test in the pull request so that's an

816
00:29:58,860 --> 00:30:00,210
interesting different engagement model

817
00:30:00,210 --> 00:30:02,549
the builds tests a state if you have a

818
00:30:02,549 --> 00:30:04,980
vulnerability from before it would break

819
00:30:04,980 --> 00:30:06,630
if a former ability was just disclosed

820
00:30:06,630 --> 00:30:09,149
it would break while a pull request to

821
00:30:09,149 --> 00:30:11,549
test this specific set of code changes

822
00:30:11,549 --> 00:30:14,010
so only if you introduced a new

823
00:30:14,010 --> 00:30:16,380
vulnerability with your specific code

824
00:30:16,380 --> 00:30:18,419
changes the pull request test would fail

825
00:30:18,419 --> 00:30:21,419
so it's a slightly more subtle element

826
00:30:21,419 --> 00:30:23,850
and it only fails on new issues that

827
00:30:23,850 --> 00:30:27,000
developers introduce on the flipside you

828
00:30:27,000 --> 00:30:28,860
also have the problem of breaking the

829
00:30:28,860 --> 00:30:30,809
build but when a new vulnerability is

830
00:30:30,809 --> 00:30:32,220
disclosed and you've got a vulnerability

831
00:30:32,220 --> 00:30:33,840
you've got a sister I've got a clean

832
00:30:33,840 --> 00:30:35,820
bill of health you have you know using a

833
00:30:35,820 --> 00:30:37,860
whole bunch of libraries and they

834
00:30:37,860 --> 00:30:39,000
weren't they weren't kosher they were so

835
00:30:39,000 --> 00:30:41,399
good before but now one of them you know

836
00:30:41,399 --> 00:30:43,230
a new vulnerability has been discovered

837
00:30:43,230 --> 00:30:45,090
in it suddenly your build breaks and

838
00:30:45,090 --> 00:30:46,740
that's disruptive you haven't done

839
00:30:46,740 --> 00:30:48,360
anything why are you breaking my build

840
00:30:48,360 --> 00:30:50,490
so similarly you need a different

841
00:30:50,490 --> 00:30:52,620
mechanism than breaking the builds to

842
00:30:52,620 --> 00:30:55,049
notify when a new vulnerability has been

843
00:30:55,049 --> 00:30:57,240
disclosed and in the case of snake would

844
00:30:57,240 --> 00:30:58,649
do this through alerts and through

845
00:30:58,649 --> 00:31:01,559
automated fix PRS and you know this

846
00:31:01,559 --> 00:31:03,990
notion of actionable automated fixes the

847
00:31:03,990 --> 00:31:05,700
notion of separating these two use cases

848
00:31:05,700 --> 00:31:06,570
are

849
00:31:06,570 --> 00:31:08,909
all different engaged models that that

850
00:31:08,909 --> 00:31:10,230
kind of derive from from from

851
00:31:10,230 --> 00:31:11,940
experimentation from how do you work

852
00:31:11,940 --> 00:31:17,389
with this methodology of of a CI CG flow

853
00:31:17,389 --> 00:31:19,889
cool a lot of information right this is

854
00:31:19,889 --> 00:31:22,169
a fairly condensed presentation where I

855
00:31:22,169 --> 00:31:23,519
talked about the DevOps technologies we

856
00:31:23,519 --> 00:31:25,950
talked about the first sort of DevOps

857
00:31:25,950 --> 00:31:27,389
methodology and how do you invent

858
00:31:27,389 --> 00:31:29,370
security into it and that's C ICD

859
00:31:29,370 --> 00:31:32,070
slightly lighter with example when we

860
00:31:32,070 --> 00:31:34,440
talk about adapting security is micro

861
00:31:34,440 --> 00:31:36,419
services micro services once again a

862
00:31:36,419 --> 00:31:39,419
core tenant of DevOps the idea of

863
00:31:39,419 --> 00:31:41,250
separating your application into many

864
00:31:41,250 --> 00:31:44,039
many different components is super

865
00:31:44,039 --> 00:31:47,039
powerful and not super pleasant for

866
00:31:47,039 --> 00:31:49,919
security when you stop to think about it

867
00:31:49,919 --> 00:31:53,370
monoliths are very convenient for

868
00:31:53,370 --> 00:31:55,620
security right you have this this beast

869
00:31:55,620 --> 00:31:57,809
you know you that that has inputs on one

870
00:31:57,809 --> 00:31:59,850
side and has outputs on the stuff on the

871
00:31:59,850 --> 00:32:01,679
other side and you know it could be a

872
00:32:01,679 --> 00:32:04,110
disaster in internally but from a

873
00:32:04,110 --> 00:32:05,340
security perspective maybe you don't

874
00:32:05,340 --> 00:32:06,840
care as much you kind of care about you

875
00:32:06,840 --> 00:32:08,429
know what came in what came out and

876
00:32:08,429 --> 00:32:10,169
maybe you can secure the perimeter the

877
00:32:10,169 --> 00:32:12,120
perimeter is very it's very clear and

878
00:32:12,120 --> 00:32:14,309
it's it's constrained it doesn't change

879
00:32:14,309 --> 00:32:15,899
you know it's flexibility is limited

880
00:32:15,899 --> 00:32:18,120
which is makes it easier for security to

881
00:32:18,120 --> 00:32:19,669
kind of you know wrap its mind around it

882
00:32:19,669 --> 00:32:22,769
micro services are you know a mess no

883
00:32:22,769 --> 00:32:24,809
they're basically you know they're

884
00:32:24,809 --> 00:32:26,490
amazing but they're super messy there

885
00:32:26,490 --> 00:32:27,720
are a lot of different components you

886
00:32:27,720 --> 00:32:29,789
know what's the perimeter really in this

887
00:32:29,789 --> 00:32:31,919
surrounding you know they move around

888
00:32:31,919 --> 00:32:33,450
all the time you know you call this

889
00:32:33,450 --> 00:32:34,679
sequence of services then you call

890
00:32:34,679 --> 00:32:37,649
another it's not easy to some wrangle

891
00:32:37,649 --> 00:32:39,779
micro services and that requires

892
00:32:39,779 --> 00:32:41,669
adapting the security components you

893
00:32:41,669 --> 00:32:43,440
know what is data flow what is normal

894
00:32:43,440 --> 00:32:45,360
and so you see and this is we're

895
00:32:45,360 --> 00:32:48,509
starting to go into like very much new

896
00:32:48,509 --> 00:32:50,250
territories right it's not territories

897
00:32:50,250 --> 00:32:51,990
that the industry has figured out yet

898
00:32:51,990 --> 00:32:53,700
this is where we're getting a little bit

899
00:32:53,700 --> 00:32:55,350
more into like the first steps into

900
00:32:55,350 --> 00:32:57,299
solutions you're seeing things like

901
00:32:57,299 --> 00:32:59,549
security monitoring for micro services

902
00:32:59,549 --> 00:33:02,429
that try to maybe adapt to this is a

903
00:33:02,429 --> 00:33:04,200
pariah it's one example they just kind

904
00:33:04,200 --> 00:33:05,909
of had the visual and all of these

905
00:33:05,909 --> 00:33:07,500
examples I gave our or they're not

906
00:33:07,500 --> 00:33:09,000
necessarily like touts or

907
00:33:09,000 --> 00:33:10,259
recommendations they're just examples

908
00:33:10,259 --> 00:33:13,289
this is an industry-wide sort of

909
00:33:13,289 --> 00:33:15,659
challenge but what they do is they try

910
00:33:15,659 --> 00:33:17,580
to map data flows between the micro

911
00:33:17,580 --> 00:33:20,350
services and therefore they might know

912
00:33:20,350 --> 00:33:22,870
be able to show you know some highlights

913
00:33:22,870 --> 00:33:25,360
what is a good data flow you know what

914
00:33:25,360 --> 00:33:26,919
is a bad data flow maybe even just a

915
00:33:26,919 --> 00:33:28,210
machine learning to sort of establish

916
00:33:28,210 --> 00:33:30,309
what normal is and just visualize those

917
00:33:30,309 --> 00:33:34,299
components to identify attacks related

918
00:33:34,299 --> 00:33:36,549
you know micro-services also create

919
00:33:36,549 --> 00:33:38,679
challenges around installation you know

920
00:33:38,679 --> 00:33:40,600
when it's one monolith when it's one VM

921
00:33:40,600 --> 00:33:42,700
you can maybe SSH into that machine and

922
00:33:42,700 --> 00:33:44,740
install something when you're talking

923
00:33:44,740 --> 00:33:46,419
about these containers environment and

924
00:33:46,419 --> 00:33:48,820
all that containerized environment they

925
00:33:48,820 --> 00:33:50,049
you know they get deployed through that

926
00:33:50,049 --> 00:33:51,429
docker file you need to change how you

927
00:33:51,429 --> 00:33:53,110
install so this is an example of how

928
00:33:53,110 --> 00:33:55,360
signal sciences installs their their

929
00:33:55,360 --> 00:33:58,600
agent the component they need inside the

930
00:33:58,600 --> 00:34:00,490
docker file right some other container

931
00:34:00,490 --> 00:34:03,460
security solutions might run as a as a

932
00:34:03,460 --> 00:34:05,350
sidecar so they run a different

933
00:34:05,350 --> 00:34:07,169
container inside of your communities

934
00:34:07,169 --> 00:34:09,520
cluster so all of those are adaptations

935
00:34:09,520 --> 00:34:13,030
around installation and then the third

936
00:34:13,030 --> 00:34:15,550
kind of more recent example that that I

937
00:34:15,550 --> 00:34:17,560
like is for mechanical small step and

938
00:34:17,560 --> 00:34:19,540
that talks about okay in this notion of

939
00:34:19,540 --> 00:34:21,609
microservices you also have this new

940
00:34:21,609 --> 00:34:25,210
concern this new risk that the talks

941
00:34:25,210 --> 00:34:27,879
about identity right you now have a lot

942
00:34:27,879 --> 00:34:29,290
of these different components and the

943
00:34:29,290 --> 00:34:31,119
old past data between one another but

944
00:34:31,119 --> 00:34:32,770
how do they know who are they talking to

945
00:34:32,770 --> 00:34:36,099
you know how do they know if if it's you

946
00:34:36,099 --> 00:34:38,319
know if it's a real thing on the other

947
00:34:38,319 --> 00:34:39,849
side if they're actually talking to the

948
00:34:39,849 --> 00:34:42,790
party to sort of the entity on the other

949
00:34:42,790 --> 00:34:45,190
side or not you know if it's the correct

950
00:34:45,190 --> 00:34:47,379
one so you need you know TLS you need

951
00:34:47,379 --> 00:34:48,609
certificates but then you need to get

952
00:34:48,609 --> 00:34:49,810
into this world of how do you manage

953
00:34:49,810 --> 00:34:51,730
identity how do you manage certificates

954
00:34:51,730 --> 00:34:53,139
for all those components you know one

955
00:34:53,139 --> 00:34:55,359
small step pieces is a is an open source

956
00:34:55,359 --> 00:34:57,640
based company that is that is building

957
00:34:57,640 --> 00:34:58,960
in that space it's kind of like it let's

958
00:34:58,960 --> 00:35:00,369
encrypt but for sort of internal

959
00:35:00,369 --> 00:35:02,619
identities so all of those are really

960
00:35:02,619 --> 00:35:05,050
cool tools that they tried to adapt

961
00:35:05,050 --> 00:35:07,900
security into this world of Microsoft's

962
00:35:07,900 --> 00:35:10,119
into the Smith mythology of micro

963
00:35:10,119 --> 00:35:13,540
services so shifting a little bit you

964
00:35:13,540 --> 00:35:14,800
know I've been a little bit doom and

965
00:35:14,800 --> 00:35:16,240
gloom ish you know up until now it's

966
00:35:16,240 --> 00:35:17,619
like Oh DevOps introduces all these

967
00:35:17,619 --> 00:35:19,540
changes all these shifts security

968
00:35:19,540 --> 00:35:21,030
solutions need to adapt

969
00:35:21,030 --> 00:35:24,280
there's also goodness in these DevOps

970
00:35:24,280 --> 00:35:25,599
methodologies of course in the

971
00:35:25,599 --> 00:35:27,550
technologies themselves and this is you

972
00:35:27,550 --> 00:35:29,740
know like a lot of the question that is

973
00:35:29,740 --> 00:35:31,240
happening in the world of app sack is

974
00:35:31,240 --> 00:35:33,369
you know or is there Bob's good for

975
00:35:33,369 --> 00:35:33,680
secure

976
00:35:33,680 --> 00:35:35,569
bad for secure aims first of all you

977
00:35:35,569 --> 00:35:36,710
know it doesn't matter it's happening

978
00:35:36,710 --> 00:35:39,290
you know business business needs drive

979
00:35:39,290 --> 00:35:41,869
us there but but really what you want to

980
00:35:41,869 --> 00:35:43,550
do is you want to say what are the

981
00:35:43,550 --> 00:35:46,040
opportunities that the DevOps

982
00:35:46,040 --> 00:35:47,630
methodologies offer and make sure that

983
00:35:47,630 --> 00:35:49,190
you tap into that so it's not just

984
00:35:49,190 --> 00:35:51,020
attacks you know the reality is that

985
00:35:51,020 --> 00:35:53,240
they cause once again some opportunities

986
00:35:53,240 --> 00:35:56,720
and some risks so let me let me show a

987
00:35:56,720 --> 00:35:58,790
few examples of these types of

988
00:35:58,790 --> 00:36:01,160
opportunities and for the most part they

989
00:36:01,160 --> 00:36:05,990
rely on quick response so you know first

990
00:36:05,990 --> 00:36:07,369
and you know maybe like they're the

991
00:36:07,369 --> 00:36:08,869
cleanest and and you know an example

992
00:36:08,869 --> 00:36:10,760
that I really love is the notion of what

993
00:36:10,760 --> 00:36:12,859
do you do as a response to a suspicion

994
00:36:12,859 --> 00:36:15,319
element you know if you are in a VM and

995
00:36:15,319 --> 00:36:17,960
you see some potential malware potential

996
00:36:17,960 --> 00:36:19,579
virus you you get into trouble like what

997
00:36:19,579 --> 00:36:21,319
do you do do you like quarantine it

998
00:36:21,319 --> 00:36:23,480
somehow you alert you need to do

999
00:36:23,480 --> 00:36:24,829
something about it if you're in a

1000
00:36:24,829 --> 00:36:27,109
container containers are for the most

1001
00:36:27,109 --> 00:36:29,660
part fairly you know stateless or at

1002
00:36:29,660 --> 00:36:30,890
least they're lightweight they can come

1003
00:36:30,890 --> 00:36:32,450
back up so if you see something

1004
00:36:32,450 --> 00:36:33,920
misbehaving if you suspect something

1005
00:36:33,920 --> 00:36:35,809
you're just kill it you just destroyed

1006
00:36:35,809 --> 00:36:37,550
this instance of the container and

1007
00:36:37,550 --> 00:36:39,829
unless the original image was malicious

1008
00:36:39,829 --> 00:36:41,750
when the new image comes up it comes up

1009
00:36:41,750 --> 00:36:43,339
clean containers don't have these

1010
00:36:43,339 --> 00:36:46,400
long-lived servers as much so that's an

1011
00:36:46,400 --> 00:36:48,140
awesome capability that really allows

1012
00:36:48,140 --> 00:36:50,839
for much more sort of harsh and

1013
00:36:50,839 --> 00:36:52,849
effective responses from security

1014
00:36:52,849 --> 00:36:57,109
solutions in the area another example of

1015
00:36:57,109 --> 00:36:59,809
DevOps being an advantage for security

1016
00:36:59,809 --> 00:37:02,059
is the notion of deployment speed so

1017
00:37:02,059 --> 00:37:03,559
when you talk about let's say you have a

1018
00:37:03,559 --> 00:37:05,359
server and it's unpatched and you know

1019
00:37:05,359 --> 00:37:07,309
like some new massive vulnerability and

1020
00:37:07,309 --> 00:37:09,799
whatever in open SSL comes out and you

1021
00:37:09,799 --> 00:37:12,410
need to patch it if it's urgent it

1022
00:37:12,410 --> 00:37:14,960
creates all these like old paths around

1023
00:37:14,960 --> 00:37:16,970
how do you deploy your application so it

1024
00:37:16,970 --> 00:37:18,859
creates these you know red carpet

1025
00:37:18,859 --> 00:37:20,299
elements where you need to find all your

1026
00:37:20,299 --> 00:37:22,040
systems and out-of-band

1027
00:37:22,040 --> 00:37:24,680
update or modify them you know in the

1028
00:37:24,680 --> 00:37:25,760
world of DevOps whether you're using

1029
00:37:25,760 --> 00:37:27,440
containers or things like chef and

1030
00:37:27,440 --> 00:37:28,670
puppet for sort of automated

1031
00:37:28,670 --> 00:37:31,130
provisioning you have standard ways of

1032
00:37:31,130 --> 00:37:32,750
deploying in bulk you know you have the

1033
00:37:32,750 --> 00:37:35,059
paved path of saying hey just you know

1034
00:37:35,059 --> 00:37:37,280
rebuild this container and push it to

1035
00:37:37,280 --> 00:37:39,109
production you know it is the the paved

1036
00:37:39,109 --> 00:37:41,780
path it's the standard one way to get to

1037
00:37:41,780 --> 00:37:43,940
production so it allows you to to deploy

1038
00:37:43,940 --> 00:37:45,490
much more safely and much more quickly

1039
00:37:45,490 --> 00:37:47,540
once you've sort of embraced this type

1040
00:37:47,540 --> 00:37:47,869
of the

1041
00:37:47,869 --> 00:37:52,430
tomorrow you know see a CD that we've

1042
00:37:52,430 --> 00:37:53,690
talked about before you know I talked

1043
00:37:53,690 --> 00:37:55,190
about the challenges of putting you know

1044
00:37:55,190 --> 00:37:58,099
time constraint tests into the build but

1045
00:37:58,099 --> 00:38:00,019
fundamentally as security we've always

1046
00:38:00,019 --> 00:38:02,839
longed for you know some place to put

1047
00:38:02,839 --> 00:38:05,420
tests some place to put policy

1048
00:38:05,420 --> 00:38:07,849
enforcement rights to be able to say you

1049
00:38:07,849 --> 00:38:10,490
know like this type of practice cannot

1050
00:38:10,490 --> 00:38:12,619
make it to production or or capture

1051
00:38:12,619 --> 00:38:14,539
everything that is deployed and see ICD

1052
00:38:14,539 --> 00:38:16,339
gives us precisely that right this

1053
00:38:16,339 --> 00:38:20,240
methodology introduces a a natural home

1054
00:38:20,240 --> 00:38:22,759
and a very elegant one for these types

1055
00:38:22,759 --> 00:38:24,859
of security tests so that's awesome you

1056
00:38:24,859 --> 00:38:26,569
know and we need to embrace it and you

1057
00:38:26,569 --> 00:38:27,799
see more and more security teams

1058
00:38:27,799 --> 00:38:31,099
starting to build security tests and

1059
00:38:31,099 --> 00:38:33,259
actually put them into into the CI CT

1060
00:38:33,259 --> 00:38:36,410
process and then you know last but not

1061
00:38:36,410 --> 00:38:37,339
least and a little bit more

1062
00:38:37,339 --> 00:38:38,569
forward-thinking is this notion of

1063
00:38:38,569 --> 00:38:41,420
securing in in the get flow in you know

1064
00:38:41,420 --> 00:38:42,799
which I think it's kind of double disc

1065
00:38:42,799 --> 00:38:44,930
atop these days or is that's a terms

1066
00:38:44,930 --> 00:38:46,759
it's starting to build up and this is

1067
00:38:46,759 --> 00:38:48,440
the example I showed before of some

1068
00:38:48,440 --> 00:38:50,359
sneaks pull request test and automated

1069
00:38:50,359 --> 00:38:53,720
fixes gets is a much more interactive

1070
00:38:53,720 --> 00:38:56,509
offers a much more interactive and maybe

1071
00:38:56,509 --> 00:38:58,640
granular this notion of testing deltas

1072
00:38:58,640 --> 00:39:01,430
Orissa state surrounding them and build

1073
00:39:01,430 --> 00:39:04,009
build is a little bit sledgehammer II in

1074
00:39:04,009 --> 00:39:06,589
a lot of its actions and they it allows

1075
00:39:06,589 --> 00:39:09,170
for code reviews it allows for you know

1076
00:39:09,170 --> 00:39:11,630
comments to be added it allows for you

1077
00:39:11,630 --> 00:39:14,480
know blocking it allows for raising

1078
00:39:14,480 --> 00:39:16,220
visibility because it interacts with the

1079
00:39:16,220 --> 00:39:18,619
developers more so it's a central place

1080
00:39:18,619 --> 00:39:21,259
unlike say NID a plugin but it is an

1081
00:39:21,259 --> 00:39:23,359
interactive place unlike a build and it

1082
00:39:23,359 --> 00:39:24,470
offers a lot of great security

1083
00:39:24,470 --> 00:39:26,119
opportunities and I first see a lot of

1084
00:39:26,119 --> 00:39:30,859
kind of growth and embracing that so to

1085
00:39:30,859 --> 00:39:32,749
conclude kind of the the second you know

1086
00:39:32,749 --> 00:39:34,730
the second of the third of the three

1087
00:39:34,730 --> 00:39:37,400
elements that we have is you know we

1088
00:39:37,400 --> 00:39:38,239
talked about security for DevOps

1089
00:39:38,239 --> 00:39:40,039
technologies this is security for DevOps

1090
00:39:40,039 --> 00:39:41,989
methodologies and here you have to think

1091
00:39:41,989 --> 00:39:44,390
about how do you adapt your existing

1092
00:39:44,390 --> 00:39:46,970
hopefully existing security tools into

1093
00:39:46,970 --> 00:39:48,470
those environments but then also how do

1094
00:39:48,470 --> 00:39:50,299
you capitalize on these new

1095
00:39:50,299 --> 00:39:53,859
methodologies to do security better

1096
00:39:53,859 --> 00:39:56,980
so my last bid is a little bit more

1097
00:39:56,980 --> 00:39:59,720
philosophical when you think about all

1098
00:39:59,720 --> 00:40:01,069
these changes they talked about up until

1099
00:40:01,069 --> 00:40:04,069
now they're fairly analogous to the

1100
00:40:04,069 --> 00:40:05,599
changes we've seen when virtualization

1101
00:40:05,599 --> 00:40:07,579
came on board right or when mobile came

1102
00:40:07,579 --> 00:40:09,529
on board its new surroundings they

1103
00:40:09,529 --> 00:40:10,640
create new technologies new

1104
00:40:10,640 --> 00:40:12,140
opportunities new risks and we had to

1105
00:40:12,140 --> 00:40:13,970
adapt one of the things that's a little

1106
00:40:13,970 --> 00:40:16,609
bit more DevOps specific is the people

1107
00:40:16,609 --> 00:40:19,039
change when you talk to you know anybody

1108
00:40:19,039 --> 00:40:20,480
relax to sort of you know philosophize a

1109
00:40:20,480 --> 00:40:22,249
little bit about DevOps you know really

1110
00:40:22,249 --> 00:40:23,599
the answer you would get is DevOps is

1111
00:40:23,599 --> 00:40:26,089
first and foremost about people right

1112
00:40:26,089 --> 00:40:27,710
it's about breaking the barriers between

1113
00:40:27,710 --> 00:40:29,420
dev and ops and everything else kind of

1114
00:40:29,420 --> 00:40:32,480
derives from it and so we have to figure

1115
00:40:32,480 --> 00:40:34,430
out from a security perspective the

1116
00:40:34,430 --> 00:40:37,220
third evolution of deficit cops is to

1117
00:40:37,220 --> 00:40:38,900
understand how do we how do we put

1118
00:40:38,900 --> 00:40:40,759
security into DevOps you know how do we

1119
00:40:40,759 --> 00:40:42,829
indeed you know add that second DevOps

1120
00:40:42,829 --> 00:40:44,359
there's a lot of criticism about the

1121
00:40:44,359 --> 00:40:46,190
word deficit cops because it says well

1122
00:40:46,190 --> 00:40:47,450
security should already just be

1123
00:40:47,450 --> 00:40:49,789
naturally a part of DevOps how do we how

1124
00:40:49,789 --> 00:40:52,910
do we do that in so sort of two

1125
00:40:52,910 --> 00:40:54,499
perspectives on it you know first it's

1126
00:40:54,499 --> 00:40:57,079
kind of the need and the how first is

1127
00:40:57,079 --> 00:40:59,029
you have to understand that you you have

1128
00:40:59,029 --> 00:40:59,869
to do this

1129
00:40:59,869 --> 00:41:02,059
you know consider that in this world of

1130
00:41:02,059 --> 00:41:04,339
DevOps developers are more powerful than

1131
00:41:04,339 --> 00:41:04,640
ever

1132
00:41:04,640 --> 00:41:07,720
decisions are made in the world of

1133
00:41:07,720 --> 00:41:10,279
developers you know of the application

1134
00:41:10,279 --> 00:41:11,989
and you don't really get the opportunity

1135
00:41:11,989 --> 00:41:15,019
to to interact with it as much there's a

1136
00:41:15,019 --> 00:41:17,359
lot more decision power but at the hand

1137
00:41:17,359 --> 00:41:19,279
of developers you know for a good reason

1138
00:41:19,279 --> 00:41:20,749
but it's also you know with all the risk

1139
00:41:20,749 --> 00:41:23,749
that entails those developers are

1140
00:41:23,749 --> 00:41:26,089
working at a faster pace in other

1141
00:41:26,089 --> 00:41:27,829
shipping code continuously constantly

1142
00:41:27,829 --> 00:41:29,779
there's the notion of like being more

1143
00:41:29,779 --> 00:41:32,420
more resilient or willing to make

1144
00:41:32,420 --> 00:41:34,039
mistakes and then roll them back so you

1145
00:41:34,039 --> 00:41:37,039
have to factor that in and they have

1146
00:41:37,039 --> 00:41:39,049
more access so every one of those

1147
00:41:39,049 --> 00:41:40,700
developers is also a more compelling

1148
00:41:40,700 --> 00:41:43,849
attack a target for four attackers right

1149
00:41:43,849 --> 00:41:45,859
developers can access production systems

1150
00:41:45,859 --> 00:41:47,960
on a regular basis they can access user

1151
00:41:47,960 --> 00:41:51,619
data on a regular basis so so developers

1152
00:41:51,619 --> 00:41:53,329
are are moving faster they're more

1153
00:41:53,329 --> 00:41:55,160
powerful they you know they they have a

1154
00:41:55,160 --> 00:41:57,259
lot of this access and in the

1155
00:41:57,259 --> 00:41:59,140
organization they vastly vastly

1156
00:41:59,140 --> 00:42:02,150
outnumber security people all right this

1157
00:42:02,150 --> 00:42:03,440
is like the classic hundred-to-one

1158
00:42:03,440 --> 00:42:04,670
there's a whole bunch of data around

1159
00:42:04,670 --> 00:42:06,619
this but fundamentally it boils down to

1160
00:42:06,619 --> 00:42:07,130
a bud

1161
00:42:07,130 --> 00:42:08,990
ratio and oftentimes that's actually

1162
00:42:08,990 --> 00:42:10,820
generous if you call that security if

1163
00:42:10,820 --> 00:42:12,140
you talk about product security or

1164
00:42:12,140 --> 00:42:14,840
application security people on it there

1165
00:42:14,840 --> 00:42:17,270
really is just dramatically more

1166
00:42:17,270 --> 00:42:19,400
developers than there are security

1167
00:42:19,400 --> 00:42:22,610
people so the bottom line of this is

1168
00:42:22,610 --> 00:42:25,100
that you can't outsource security

1169
00:42:25,100 --> 00:42:27,230
outside of developers nobody else can

1170
00:42:27,230 --> 00:42:29,540
keep up with security with sort of with

1171
00:42:29,540 --> 00:42:31,790
developers nobody else can can sort of

1172
00:42:31,790 --> 00:42:33,830
sustain the pace or have the visibility

1173
00:42:33,830 --> 00:42:35,720
in the access that the modern DevOps

1174
00:42:35,720 --> 00:42:37,640
developer has and that's that's not a

1175
00:42:37,640 --> 00:42:40,750
problem that's just fact that's reality

1176
00:42:40,750 --> 00:42:43,580
so we have to tackle it the good news is

1177
00:42:43,580 --> 00:42:47,120
that developers also think so we did the

1178
00:42:47,120 --> 00:42:48,380
survey as part of the state of open

1179
00:42:48,380 --> 00:42:51,170
social security and both when we talked

1180
00:42:51,170 --> 00:42:53,810
about generally who is responsible who

1181
00:42:53,810 --> 00:42:55,340
should be responsible for security and

1182
00:42:55,340 --> 00:42:56,570
when we asked specifically about

1183
00:42:56,570 --> 00:43:00,340
containers the the dominant answer was

1184
00:43:00,340 --> 00:43:02,660
developers developers should really own

1185
00:43:02,660 --> 00:43:04,880
this aspect it doesn't mean security

1186
00:43:04,880 --> 00:43:06,230
shouldn't be there to be the governor

1187
00:43:06,230 --> 00:43:08,900
should to be the the the experts kind of

1188
00:43:08,900 --> 00:43:12,320
like an s3 in in ops or or sort of

1189
00:43:12,320 --> 00:43:14,720
DevOps people but the primary work needs

1190
00:43:14,720 --> 00:43:18,470
to be in the hands of developers and to

1191
00:43:18,470 --> 00:43:20,750
do so to successfully do so we have two

1192
00:43:20,750 --> 00:43:24,050
challenges the first is the security

1193
00:43:24,050 --> 00:43:26,660
tools security tools are fundamentally

1194
00:43:26,660 --> 00:43:28,550
designed for security professionals you

1195
00:43:28,550 --> 00:43:31,790
know I I have personally fallen for this

1196
00:43:31,790 --> 00:43:33,770
I built a tool called AppScan developer

1197
00:43:33,770 --> 00:43:35,870
edition and you know it had developer in

1198
00:43:35,870 --> 00:43:37,730
the name and it did static code analysis

1199
00:43:37,730 --> 00:43:40,070
and it ran in in in eclipse which at the

1200
00:43:40,070 --> 00:43:43,040
time was kind of the idea door and in

1201
00:43:43,040 --> 00:43:44,540
practice you know it succeeded

1202
00:43:44,540 --> 00:43:46,190
financially by selling to security

1203
00:43:46,190 --> 00:43:47,810
people that kind of shoved it down the

1204
00:43:47,810 --> 00:43:49,220
throats of developers but developers

1205
00:43:49,220 --> 00:43:51,110
didn't embrace it because at the end of

1206
00:43:51,110 --> 00:43:53,140
the day this was an auditor tool

1207
00:43:53,140 --> 00:43:55,270
integrated into a developer environment

1208
00:43:55,270 --> 00:43:57,470
but just the fact that he wrote you know

1209
00:43:57,470 --> 00:43:59,300
an intelligent plugin or a Jenkins

1210
00:43:59,300 --> 00:44:01,700
plug-in doesn't turn your tool into a

1211
00:44:01,700 --> 00:44:03,410
successful developer tools you have to

1212
00:44:03,410 --> 00:44:05,990
think about a tool if you're building a

1213
00:44:05,990 --> 00:44:07,280
tool or if you're consuming it's all you

1214
00:44:07,280 --> 00:44:09,370
have to think about is this a good

1215
00:44:09,370 --> 00:44:12,110
developer tool right is this a good so

1216
00:44:12,110 --> 00:44:13,370
well the developers will actually want

1217
00:44:13,370 --> 00:44:16,850
to use so what is that well in the

1218
00:44:16,850 --> 00:44:18,500
developer tooling is its own world of

1219
00:44:18,500 --> 00:44:20,190
expertise but if

1220
00:44:20,190 --> 00:44:22,560
give a few examples from security issues

1221
00:44:22,560 --> 00:44:25,140
you know a developer tool has good

1222
00:44:25,140 --> 00:44:27,119
documentation if you developer tool so

1223
00:44:27,119 --> 00:44:28,619
this is off the zero and have amazing

1224
00:44:28,619 --> 00:44:30,510
docks into your security also have good

1225
00:44:30,510 --> 00:44:32,540
dogs you know they're very much about

1226
00:44:32,540 --> 00:44:34,829
you know they're not a security officer

1227
00:44:34,829 --> 00:44:36,089
is not a security company per se but

1228
00:44:36,089 --> 00:44:38,490
they're very security related function

1229
00:44:38,490 --> 00:44:40,770
you know in authentication and they have

1230
00:44:40,770 --> 00:44:42,390
amazing dogs and developers love them

1231
00:44:42,390 --> 00:44:45,060
for it another example of a good

1232
00:44:45,060 --> 00:44:46,560
developer tool property is the ability

1233
00:44:46,560 --> 00:44:48,839
to try it self-serve security tools them

1234
00:44:48,839 --> 00:44:50,369
to be very opaque you have to talk to a

1235
00:44:50,369 --> 00:44:51,869
sales person sometimes you can't even

1236
00:44:51,869 --> 00:44:53,550
POC those components you know you

1237
00:44:53,550 --> 00:44:56,160
developers like self-serve tools hashing

1238
00:44:56,160 --> 00:44:57,450
curbs fault which is very much a

1239
00:44:57,450 --> 00:44:59,069
security product it's a key management

1240
00:44:59,069 --> 00:45:02,400
system is very self-serve and that's

1241
00:45:02,400 --> 00:45:03,810
great you know it's great to use and

1242
00:45:03,810 --> 00:45:05,280
developers like it for it they they love

1243
00:45:05,280 --> 00:45:07,020
it for it and they use it they also have

1244
00:45:07,020 --> 00:45:10,349
great dogs good developer tools have

1245
00:45:10,349 --> 00:45:14,490
good education for developers so you

1246
00:45:14,490 --> 00:45:15,960
know oftentimes what happens in security

1247
00:45:15,960 --> 00:45:17,700
tools that they assume security level of

1248
00:45:17,700 --> 00:45:21,359
expertise but they don't they don't you

1249
00:45:21,359 --> 00:45:23,490
know they they over educated maybe about

1250
00:45:23,490 --> 00:45:24,569
developer surroundings but they

1251
00:45:24,569 --> 00:45:27,420
basically lack the the understanding or

1252
00:45:27,420 --> 00:45:29,069
like you know an adapt to the fact that

1253
00:45:29,069 --> 00:45:31,290
the people hearing this don't have deep

1254
00:45:31,290 --> 00:45:33,210
security expertise this is a great

1255
00:45:33,210 --> 00:45:34,800
example from pager do these dogs where

1256
00:45:34,800 --> 00:45:36,210
they actually release their incident

1257
00:45:36,210 --> 00:45:38,640
response a handling and their own to and

1258
00:45:38,640 --> 00:45:40,349
pager Duty is not a security tool per se

1259
00:45:40,349 --> 00:45:42,240
but it is oftentimes used for security

1260
00:45:42,240 --> 00:45:44,490
incident response and you know they

1261
00:45:44,490 --> 00:45:46,380
these are a great education systems

1262
00:45:46,380 --> 00:45:47,730
about how do you handle incidents

1263
00:45:47,730 --> 00:45:49,770
including security incidents and it's

1264
00:45:49,770 --> 00:45:52,140
meant for non security experts so you

1265
00:45:52,140 --> 00:45:54,450
want to do that and then last then you

1266
00:45:54,450 --> 00:45:56,670
know maybe the most important is it's

1267
00:45:56,670 --> 00:46:00,420
around action ability so you know at the

1268
00:46:00,420 --> 00:46:01,890
end of the day a developer's job isn't

1269
00:46:01,890 --> 00:46:03,990
defined issues it's the fix issues and

1270
00:46:03,990 --> 00:46:06,380
pretty much all security tools out there

1271
00:46:06,380 --> 00:46:09,060
creates they find problems and therefore

1272
00:46:09,060 --> 00:46:10,890
they create they make work for me a

1273
00:46:10,890 --> 00:46:13,099
developer you know they make work and

1274
00:46:13,099 --> 00:46:15,270
you know like if all you're doing is

1275
00:46:15,270 --> 00:46:16,589
you're sort of adding work on my plate

1276
00:46:16,589 --> 00:46:18,510
just you might not be my favorite person

1277
00:46:18,510 --> 00:46:20,280
right no like he might not be the person

1278
00:46:20,280 --> 00:46:22,319
that I want to talk to you so what you

1279
00:46:22,319 --> 00:46:24,690
want is you know as a as a developer

1280
00:46:24,690 --> 00:46:26,910
oriented security tool you have to think

1281
00:46:26,910 --> 00:46:28,890
about how do you make the tasks that you

1282
00:46:28,890 --> 00:46:30,990
gave actionable truly actionable not

1283
00:46:30,990 --> 00:46:32,900
just guidance how do you make it as easy

1284
00:46:32,900 --> 00:46:37,730
as possible - - to fix this security

1285
00:46:37,730 --> 00:46:38,450
concern

1286
00:46:38,450 --> 00:46:39,770
that you've just introduced you know

1287
00:46:39,770 --> 00:46:41,600
from security libraries to automated

1288
00:46:41,600 --> 00:46:43,760
fixes like we do and sneak you know just

1289
00:46:43,760 --> 00:46:45,050
make it easy make it easy to make the

1290
00:46:45,050 --> 00:46:49,010
problem go away so if you are a consumer

1291
00:46:49,010 --> 00:46:51,740
of security tools you want to find and

1292
00:46:51,740 --> 00:46:54,050
the the security tools that you think

1293
00:46:54,050 --> 00:46:55,730
developers will actually embrace if you

1294
00:46:55,730 --> 00:46:57,260
are building them internally or you're a

1295
00:46:57,260 --> 00:46:58,910
vendor you know just consider these

1296
00:46:58,910 --> 00:47:00,980
things try to build security tools that

1297
00:47:00,980 --> 00:47:02,600
really are developer tools that use

1298
00:47:02,600 --> 00:47:06,080
security the second challenge that is

1299
00:47:06,080 --> 00:47:08,420
probably the most meta here is is how do

1300
00:47:08,420 --> 00:47:09,950
we actually get the peoples to change

1301
00:47:09,950 --> 00:47:11,090
the people to change you know how do you

1302
00:47:11,090 --> 00:47:12,980
get developers to embrace security and

1303
00:47:12,980 --> 00:47:14,180
how do you get security to embrace

1304
00:47:14,180 --> 00:47:16,340
developer so unfortunately I don't have

1305
00:47:16,340 --> 00:47:17,810
a you know how you do these one two

1306
00:47:17,810 --> 00:47:19,790
three things and this problem solved

1307
00:47:19,790 --> 00:47:21,560
what I do have is some ideas from people

1308
00:47:21,560 --> 00:47:24,950
that do this better than I do so I have

1309
00:47:24,950 --> 00:47:27,290
the the kind of privilege of running the

1310
00:47:27,290 --> 00:47:28,970
security Belapur podcast you know so

1311
00:47:28,970 --> 00:47:30,560
you're on the security developer talk

1312
00:47:30,560 --> 00:47:31,970
here there's also the security developer

1313
00:47:31,970 --> 00:47:33,530
podcast which you can find on itunes and

1314
00:47:33,530 --> 00:47:36,470
on our on our community site and I've

1315
00:47:36,470 --> 00:47:39,440
had various you know great minds dealing

1316
00:47:39,440 --> 00:47:42,140
with with security in their in their

1317
00:47:42,140 --> 00:47:43,400
perspectives running and there are

1318
00:47:43,400 --> 00:47:44,930
companies and I'd like to share some

1319
00:47:44,930 --> 00:47:46,490
perspective from them about how do they

1320
00:47:46,490 --> 00:47:48,830
get you know how do they see the changes

1321
00:47:48,830 --> 00:47:50,150
necessary to make developers embrace

1322
00:47:50,150 --> 00:47:53,090
security so the first tip comes from the

1323
00:47:53,090 --> 00:47:54,560
pager Duty security team where I had

1324
00:47:54,560 --> 00:47:57,740
three of them on my my podcast and they

1325
00:47:57,740 --> 00:47:59,360
talked about being you know that we're

1326
00:47:59,360 --> 00:48:00,980
here to make it easy to do the right

1327
00:48:00,980 --> 00:48:02,540
thing you know this very much epitomizes

1328
00:48:02,540 --> 00:48:04,280
this idea of make it easy for developers

1329
00:48:04,280 --> 00:48:06,170
right don't don't just make work for

1330
00:48:06,170 --> 00:48:08,150
them help them help them do things

1331
00:48:08,150 --> 00:48:10,310
correct and the second tip that they

1332
00:48:10,310 --> 00:48:12,620
have is think about security problems or

1333
00:48:12,620 --> 00:48:14,840
setups as operational problems it's just

1334
00:48:14,840 --> 00:48:17,600
ops and use tools these chefs plunk you

1335
00:48:17,600 --> 00:48:18,830
know idea versatile in their own page of

1336
00:48:18,830 --> 00:48:21,560
duty to handle these security tools you

1337
00:48:21,560 --> 00:48:23,240
don't need to learn a whole breed of

1338
00:48:23,240 --> 00:48:26,540
other tools other good tips come from

1339
00:48:26,540 --> 00:48:28,580
from optimizing work I'll Randolph there

1340
00:48:28,580 --> 00:48:30,560
who I think was their first object hire

1341
00:48:30,560 --> 00:48:32,630
for security hire they have these

1342
00:48:32,630 --> 00:48:34,400
awesome t-shirts that say security hero

1343
00:48:34,400 --> 00:48:36,200
so security is not just about shaming

1344
00:48:36,200 --> 00:48:37,190
it's not just about saying you hey

1345
00:48:37,190 --> 00:48:38,600
you've done something wrong can you

1346
00:48:38,600 --> 00:48:40,790
celebrate successes and give these like

1347
00:48:40,790 --> 00:48:42,500
more exclusive high-quality

1348
00:48:42,500 --> 00:48:45,390
t-shirts you know one medical Zak

1349
00:48:45,390 --> 00:48:46,500
they're talked about how they give

1350
00:48:46,500 --> 00:48:49,170
hoodies you know to their developers

1351
00:48:49,170 --> 00:48:50,670
talking about some Houdini who do driven

1352
00:48:50,670 --> 00:48:53,400
security so you know it helps help

1353
00:48:53,400 --> 00:48:54,930
celebrate those they did well and helps

1354
00:48:54,930 --> 00:48:57,510
show it and once again just like Pedro

1355
00:48:57,510 --> 00:49:00,450
Duty they use spinnaker and ops tools to

1356
00:49:00,450 --> 00:49:04,920
handle security concerns New Relic see

1357
00:49:04,920 --> 00:49:08,340
so Shaun Gordon talk more about what not

1358
00:49:08,340 --> 00:49:10,260
to do and it says well you're going to

1359
00:49:10,260 --> 00:49:12,090
turn the developer off if you give them

1360
00:49:12,090 --> 00:49:13,680
on actionable information this comes

1361
00:49:13,680 --> 00:49:15,030
back to the tooling advice I said before

1362
00:49:15,030 --> 00:49:16,710
but when you're embracing tools and

1363
00:49:16,710 --> 00:49:18,330
practices you have to make sure that

1364
00:49:18,330 --> 00:49:19,380
it's not something that they don't

1365
00:49:19,380 --> 00:49:21,360
understand or that they don't know how

1366
00:49:21,360 --> 00:49:22,560
to fix it and if you did they're just

1367
00:49:22,560 --> 00:49:24,030
gonna they're gonna throw you out

1368
00:49:24,030 --> 00:49:25,140
they're definitely not going to embrace

1369
00:49:25,140 --> 00:49:26,490
it you're just gonna muddy your

1370
00:49:26,490 --> 00:49:29,820
relationship with them and the the other

1371
00:49:29,820 --> 00:49:31,500
element that he said is is he wants to

1372
00:49:31,500 --> 00:49:33,390
change the security team so he talked

1373
00:49:33,390 --> 00:49:34,920
about adding developers hiring

1374
00:49:34,920 --> 00:49:36,030
developers or people with dev

1375
00:49:36,030 --> 00:49:38,160
backgrounds into their team and change

1376
00:49:38,160 --> 00:49:40,560
the way they do security to fit the way

1377
00:49:40,560 --> 00:49:42,240
developers perform their job this is a

1378
00:49:42,240 --> 00:49:44,280
two-way street developers or security

1379
00:49:44,280 --> 00:49:46,530
have to adapt to this environment as

1380
00:49:46,530 --> 00:49:50,700
well just in a smelly I think I might be

1381
00:49:50,700 --> 00:49:52,200
butchering his name a little bit was the

1382
00:49:52,200 --> 00:49:55,920
SA P at the CSO at sa P inbox and Yahoo

1383
00:49:55,920 --> 00:49:58,110
and Symantec also talked about you know

1384
00:49:58,110 --> 00:50:00,650
making making security teams be more

1385
00:50:00,650 --> 00:50:05,460
product builders and then last example

1386
00:50:05,460 --> 00:50:06,870
is the slacks Isildur talking what about

1387
00:50:06,870 --> 00:50:09,050
org design so we talked about how

1388
00:50:09,050 --> 00:50:11,250
security used to be this sort of more

1389
00:50:11,250 --> 00:50:14,250
second-class sis and MIT sort of

1390
00:50:14,250 --> 00:50:17,940
external you know outside of engineering

1391
00:50:17,940 --> 00:50:19,410
group that wasn't didn't get the

1392
00:50:19,410 --> 00:50:21,690
dissuade needed with an engineering and

1393
00:50:21,690 --> 00:50:23,430
it moved to be a first-class citizen of

1394
00:50:23,430 --> 00:50:25,290
the engineering environment and that

1395
00:50:25,290 --> 00:50:26,790
helped them sort of affect change

1396
00:50:26,790 --> 00:50:28,230
internally and the other thing that

1397
00:50:28,230 --> 00:50:29,490
they've done which was awesome is more

1398
00:50:29,490 --> 00:50:31,920
about the community bit of it they're

1399
00:50:31,920 --> 00:50:33,150
they're quite well-known you know a

1400
00:50:33,150 --> 00:50:35,100
bunch of people do this now as well for

1401
00:50:35,100 --> 00:50:37,500
sending even competitors that have a

1402
00:50:37,500 --> 00:50:38,190
security breach

1403
00:50:38,190 --> 00:50:39,930
showing him love you know sending them

1404
00:50:39,930 --> 00:50:42,270
Pizza sending them cake to a neighboring

1405
00:50:42,270 --> 00:50:43,590
security team that he's suffering a

1406
00:50:43,590 --> 00:50:44,670
breach there is dealing with something

1407
00:50:44,670 --> 00:50:46,500
understanding that it's not because you

1408
00:50:46,500 --> 00:50:47,820
know they're bad at their job it's

1409
00:50:47,820 --> 00:50:49,110
because you know this is the world of

1410
00:50:49,110 --> 00:50:51,060
security and and outages and security

1411
00:50:51,060 --> 00:50:52,830
breaches happen

1412
00:50:52,830 --> 00:50:55,750
so so you want to look to in gate for

1413
00:50:55,750 --> 00:50:57,550
ways to engage developer and security to

1414
00:50:57,550 --> 00:51:01,300
truly embrace densa cops and we talked

1415
00:51:01,300 --> 00:51:02,620
about finding security tools that would

1416
00:51:02,620 --> 00:51:04,270
that would actually you know be embraced

1417
00:51:04,270 --> 00:51:05,950
by developers and then finding ways in

1418
00:51:05,950 --> 00:51:07,510
your organization to engage developers

1419
00:51:07,510 --> 00:51:08,410
in this practice

1420
00:51:08,410 --> 00:51:10,900
so to summarize were sort of towards the

1421
00:51:10,900 --> 00:51:11,730
end here

1422
00:51:11,730 --> 00:51:14,590
DevOps is there to help us move fast

1423
00:51:14,590 --> 00:51:18,070
right it helps deliver value to our

1424
00:51:18,070 --> 00:51:19,930
customers faster when they ask for

1425
00:51:19,930 --> 00:51:21,640
something it helps adapt to market

1426
00:51:21,640 --> 00:51:23,230
changes which you know happened all the

1427
00:51:23,230 --> 00:51:25,300
time faster and helps you do all of that

1428
00:51:25,300 --> 00:51:27,370
at scale and grow the company and also

1429
00:51:27,370 --> 00:51:30,820
keep people happier and and deficit cops

1430
00:51:30,820 --> 00:51:32,740
is is about maintaining that it's about

1431
00:51:32,740 --> 00:51:35,170
adapting to this philosophy you can

1432
00:51:35,170 --> 00:51:37,450
think about deficit go up so about doing

1433
00:51:37,450 --> 00:51:39,490
deficit cops in these three steps or

1434
00:51:39,490 --> 00:51:40,870
three evolutions how do you secure the

1435
00:51:40,870 --> 00:51:42,760
DevOps technologies you use how do you

1436
00:51:42,760 --> 00:51:44,350
embrace security into the DevOps

1437
00:51:44,350 --> 00:51:47,020
methodologies that you have and how how

1438
00:51:47,020 --> 00:51:49,330
do you include the security team in this

1439
00:51:49,330 --> 00:51:51,040
DevOps shared ownership team adapting

1440
00:51:51,040 --> 00:51:52,180
both the security team and the

1441
00:51:52,180 --> 00:51:55,630
developers to do so and you talked about

1442
00:51:55,630 --> 00:51:57,010
the specific ones just to quickly recap

1443
00:51:57,010 --> 00:51:58,630
when you talk about DevOps technologies

1444
00:51:58,630 --> 00:52:02,650
it's about adapting real security needs

1445
00:52:02,650 --> 00:52:04,540
to sort of these new surroundings and

1446
00:52:04,540 --> 00:52:06,460
about tackling the new security risk

1447
00:52:06,460 --> 00:52:08,470
that these technologies introduced when

1448
00:52:08,470 --> 00:52:10,600
you talk about methodologies one aspect

1449
00:52:10,600 --> 00:52:12,400
is adapting once again you know how

1450
00:52:12,400 --> 00:52:14,110
you're applying your security practices

1451
00:52:14,110 --> 00:52:15,880
but the other is how do you how do you

1452
00:52:15,880 --> 00:52:17,830
capitalize on these DevOps methodologies

1453
00:52:17,830 --> 00:52:20,770
to be able to to to make DevOps help you

1454
00:52:20,770 --> 00:52:22,990
not hinder you and then lastly we just

1455
00:52:22,990 --> 00:52:24,490
talked about this you know for demo

1456
00:52:24,490 --> 00:52:25,780
shared ownership think about

1457
00:52:25,780 --> 00:52:27,220
inclusiveness thinks about both the

1458
00:52:27,220 --> 00:52:29,380
tooling that would help you make

1459
00:52:29,380 --> 00:52:31,060
developers like security versus dislike

1460
00:52:31,060 --> 00:52:33,220
it and and more the practices around the

1461
00:52:33,220 --> 00:52:34,350
org to embrace it

1462
00:52:34,350 --> 00:52:36,880
so one last point before I kind of do

1463
00:52:36,880 --> 00:52:39,370
the few minutes for question which is we

1464
00:52:39,370 --> 00:52:40,450
have all of this backwards

1465
00:52:40,450 --> 00:52:43,180
you know fundamentally DevOps is first

1466
00:52:43,180 --> 00:52:45,250
and foremost about people I mentioned

1467
00:52:45,250 --> 00:52:47,290
this in the beginning and when you talk

1468
00:52:47,290 --> 00:52:49,900
about the the the steps for this

1469
00:52:49,900 --> 00:52:52,210
evolution you this is probably the

1470
00:52:52,210 --> 00:52:53,830
simplest explanation the tech to

1471
00:52:53,830 --> 00:52:55,690
methodology to share ownership but

1472
00:52:55,690 --> 00:52:57,430
fundamentally if you manage to do that

1473
00:52:57,430 --> 00:52:59,650
third if you manage to embrace the

1474
00:52:59,650 --> 00:53:03,010
DevOps shared ownership and and embrace

1475
00:53:03,010 --> 00:53:05,530
security into that motion the rest will

1476
00:53:05,530 --> 00:53:06,369
follow and

1477
00:53:06,369 --> 00:53:07,959
and you'll be you know the methodologies

1478
00:53:07,959 --> 00:53:09,910
and the technologies will follow and

1479
00:53:09,910 --> 00:53:13,059
you'll be in a much better place so

1480
00:53:13,059 --> 00:53:14,979
that's it for me thanks thanks a lot I

1481
00:53:14,979 --> 00:53:17,229
hope this was interesting and with that

1482
00:53:17,229 --> 00:53:18,939
the I know I know if you have any

1483
00:53:18,939 --> 00:53:21,099
questions on the on the poll I'll stop

1484
00:53:21,099 --> 00:53:22,779
here stop the presentation go back to

1485
00:53:22,779 --> 00:53:29,259
video there's a great and interesting

1486
00:53:29,259 --> 00:53:33,969
session as always do we have questions

1487
00:53:33,969 --> 00:53:38,140
go ahead so let's see there was there

1488
00:53:38,140 --> 00:53:40,439
were couple of of them fitted to the

1489
00:53:40,439 --> 00:53:43,380
session and I replied to some of them

1490
00:53:43,380 --> 00:53:46,599
one from Andrea is what are your

1491
00:53:46,599 --> 00:53:48,400
recommendations for a company just

1492
00:53:48,400 --> 00:53:52,900
beginning we dead stack ops so when you

1493
00:53:52,900 --> 00:53:55,150
just begin with deficit cops I guess it

1494
00:53:55,150 --> 00:53:56,109
depends a little bit if you're a company

1495
00:53:56,109 --> 00:53:57,549
that's just beginning with DevOps in

1496
00:53:57,549 --> 00:54:00,069
general or just beginning period or if

1497
00:54:00,069 --> 00:54:01,569
you're morphing into deaths across it's

1498
00:54:01,569 --> 00:54:02,650
a little bit different right if you're a

1499
00:54:02,650 --> 00:54:05,680
new company or a new word company the

1500
00:54:05,680 --> 00:54:07,239
deficit cops is really something that is

1501
00:54:07,239 --> 00:54:09,009
about you know embedding security into

1502
00:54:09,009 --> 00:54:12,160
your philosophy from the get-go and you

1503
00:54:12,160 --> 00:54:13,539
know you need to hunt for them a little

1504
00:54:13,539 --> 00:54:15,249
bit faster but you have to sort of

1505
00:54:15,249 --> 00:54:18,329
understand the security practice and not

1506
00:54:18,329 --> 00:54:20,439
not cemented is something that is

1507
00:54:20,439 --> 00:54:22,329
outside so like if you're hiring an

1508
00:54:22,329 --> 00:54:23,829
application security person make them a

1509
00:54:23,829 --> 00:54:25,150
part of your engineering team in fact

1510
00:54:25,150 --> 00:54:27,670
you know don't even hire an application

1511
00:54:27,670 --> 00:54:29,650
security person that is dedicated first

1512
00:54:29,650 --> 00:54:31,869
you know just make security goals and

1513
00:54:31,869 --> 00:54:33,249
security responsibilities a part of your

1514
00:54:33,249 --> 00:54:35,140
team may be a part of your ops team or

1515
00:54:35,140 --> 00:54:37,929
something for team if you have that so

1516
00:54:37,929 --> 00:54:39,249
have that guidance be something that's

1517
00:54:39,249 --> 00:54:41,199
built in and then look for tools that

1518
00:54:41,199 --> 00:54:43,359
that that align you know that you'll

1519
00:54:43,359 --> 00:54:44,769
judge them from from the DevOps

1520
00:54:44,769 --> 00:54:46,029
environment in snake we see a lot of

1521
00:54:46,029 --> 00:54:47,829
companies that are these like veterans

1522
00:54:47,829 --> 00:54:50,499
to to modern development and new to

1523
00:54:50,499 --> 00:54:53,799
security or new word to security and and

1524
00:54:53,799 --> 00:54:56,079
they know what a good developer tool

1525
00:54:56,079 --> 00:54:57,160
looks like in the world of security

1526
00:54:57,160 --> 00:54:59,229
sphere probably in that space if you're

1527
00:54:59,229 --> 00:55:00,729
morphing if you're just starting with

1528
00:55:00,729 --> 00:55:02,289
their cups but you're changing you know

1529
00:55:02,289 --> 00:55:03,910
from a reality that is a little bit more

1530
00:55:03,910 --> 00:55:06,189
siloed they look for the easy wins like

1531
00:55:06,189 --> 00:55:09,279
look for you know you might have a Miss

1532
00:55:09,279 --> 00:55:10,630
like you might have already an

1533
00:55:10,630 --> 00:55:12,789
established perception that security

1534
00:55:12,789 --> 00:55:14,289
will never work for developers that it's

1535
00:55:14,289 --> 00:55:15,729
always going to be a disaster that it's

1536
00:55:15,729 --> 00:55:17,769
you know so look for tools or

1537
00:55:17,769 --> 00:55:20,740
methodologies that would that would help

1538
00:55:20,740 --> 00:55:23,980
and and help you get some wins you know

1539
00:55:23,980 --> 00:55:25,450
ASAS an example of that you know we're a

1540
00:55:25,450 --> 00:55:27,130
little device but also you know maybe

1541
00:55:27,130 --> 00:55:28,210
it's around and you do the key

1542
00:55:28,210 --> 00:55:30,700
management systems in Hasek or just try

1543
00:55:30,700 --> 00:55:32,980
to find things that are that are wins

1544
00:55:32,980 --> 00:55:34,930
and then the other is celebrate the

1545
00:55:34,930 --> 00:55:36,069
successes you know there's gonna be

1546
00:55:36,069 --> 00:55:38,109
people within the groups that are that

1547
00:55:38,109 --> 00:55:41,440
are much more ready to embrace security

1548
00:55:41,440 --> 00:55:42,579
that care about security that get

1549
00:55:42,579 --> 00:55:44,079
excited about security you want to

1550
00:55:44,079 --> 00:55:47,020
celebrate them way too many teams all

1551
00:55:47,020 --> 00:55:48,490
they do in the world of security is they

1552
00:55:48,490 --> 00:55:50,140
bash people over the head you know they

1553
00:55:50,140 --> 00:55:52,270
don't you know it's this whole builders

1554
00:55:52,270 --> 00:55:53,710
vs. breakers I'm very cynical

1555
00:55:53,710 --> 00:55:55,329
surrounding so you want to make sure

1556
00:55:55,329 --> 00:55:56,410
that you know when somebody does

1557
00:55:56,410 --> 00:55:58,030
something good for security you know

1558
00:55:58,030 --> 00:56:00,160
seek those people out and give them you

1559
00:56:00,160 --> 00:56:01,990
know celebrate them you know just might

1560
00:56:01,990 --> 00:56:03,579
make as much noise as you can around

1561
00:56:03,579 --> 00:56:06,910
them and embrace that around so I think

1562
00:56:06,910 --> 00:56:08,410
I pointed out specific tools you know

1563
00:56:08,410 --> 00:56:10,210
around you know whether it's a whether

1564
00:56:10,210 --> 00:56:12,910
it's a CA or the incremental scanning

1565
00:56:12,910 --> 00:56:15,130
with SAS or you know a bunch of these

1566
00:56:15,130 --> 00:56:16,300
techniques hopefully through the talk

1567
00:56:16,300 --> 00:56:18,190
happy to answer questions own on that

1568
00:56:18,190 --> 00:56:22,900
after as well yeah I think in it makes

1569
00:56:22,900 --> 00:56:25,990
sense it's kind of tapping into as

1570
00:56:25,990 --> 00:56:28,450
you're small make use of your developers

1571
00:56:28,450 --> 00:56:30,010
as you have more of those than you know

1572
00:56:30,010 --> 00:56:32,740
have security people and investment as

1573
00:56:32,740 --> 00:56:35,170
well kind of shift with that so like it

1574
00:56:35,170 --> 00:56:37,510
makes sense to do that yeah and I like

1575
00:56:37,510 --> 00:56:39,849
the idea of and agree I think in other

1576
00:56:39,849 --> 00:56:41,740
people as well kind of commented on the

1577
00:56:41,740 --> 00:56:44,109
cake and cookies and Huli driven

1578
00:56:44,109 --> 00:56:47,589
security which again like like I said

1579
00:56:47,589 --> 00:56:49,390
kind of like let's also celebrate

1580
00:56:49,390 --> 00:56:50,950
success let's create security heroes

1581
00:56:50,950 --> 00:56:55,390
let's kind of make that something that's

1582
00:56:55,390 --> 00:56:58,270
a building step instead of something

1583
00:56:58,270 --> 00:56:59,559
that's a shaming step or something like

1584
00:56:59,559 --> 00:57:01,809
that which is I think that it goes

1585
00:57:01,809 --> 00:57:04,630
really well and I remember Italian stock

1586
00:57:04,630 --> 00:57:07,210
was also kind of talking about having

1587
00:57:07,210 --> 00:57:08,950
better communications between devs and

1588
00:57:08,950 --> 00:57:10,780
security people and stuff like that so

1589
00:57:10,780 --> 00:57:16,000
yeah because I think often times in in

1590
00:57:16,000 --> 00:57:16,599
DevOps

1591
00:57:16,599 --> 00:57:18,460
there's so much more to say you know can

1592
00:57:18,460 --> 00:57:19,809
never really squeeze everything into one

1593
00:57:19,809 --> 00:57:22,960
talk but when they talk about DevOps was

1594
00:57:22,960 --> 00:57:24,430
successfully rolled out in companies and

1595
00:57:24,430 --> 00:57:27,930
oftentimes the one of the ways is to Co

1596
00:57:27,930 --> 00:57:30,010
basically to rotate people through the

1597
00:57:30,010 --> 00:57:32,619
teams so you have a you know put a

1598
00:57:32,619 --> 00:57:33,770
developer in

1599
00:57:33,770 --> 00:57:35,690
into into the security role either

1600
00:57:35,690 --> 00:57:37,550
trying to build a security tool into the

1601
00:57:37,550 --> 00:57:39,170
system or needing to handle incidents

1602
00:57:39,170 --> 00:57:41,570
you know that's very sobering similarly

1603
00:57:41,570 --> 00:57:43,070
you know take a security person teach

1604
00:57:43,070 --> 00:57:44,330
them a little bit to code and have them

1605
00:57:44,330 --> 00:57:45,800
deliver a feature right and sort of show

1606
00:57:45,800 --> 00:57:47,390
them you know all the complexity

1607
00:57:47,390 --> 00:57:49,280
involved in how security is one of many

1608
00:57:49,280 --> 00:57:51,890
things that they need to do but it's not

1609
00:57:51,890 --> 00:57:55,880
the entirety of their job so you know

1610
00:57:55,880 --> 00:57:58,420
getting getting some shared a visceral

1611
00:57:58,420 --> 00:58:02,360
understanding of the other pains

1612
00:58:02,360 --> 00:58:06,170
involved definitely cool and there are

1613
00:58:06,170 --> 00:58:07,580
the questions for folks on the channel

1614
00:58:07,580 --> 00:58:14,840
let's see how do we define the

1615
00:58:14,840 --> 00:58:16,670
Doublemint feature so funny enough you

1616
00:58:16,670 --> 00:58:17,750
know like so the question is how do we

1617
00:58:17,750 --> 00:58:19,430
how do we define the doberman pinscher

1618
00:58:19,430 --> 00:58:21,500
it's not a picture so don't run you know

1619
00:58:21,500 --> 00:58:22,730
just that it's just small because it's a

1620
00:58:22,730 --> 00:58:27,290
logo for a for a logo and you know funny

1621
00:58:27,290 --> 00:58:28,820
enough it's actually even relevant to

1622
00:58:28,820 --> 00:58:31,369
the topic so we know we found we wanted

1623
00:58:31,369 --> 00:58:34,310
and sneak we wanted a logo that relates

1624
00:58:34,310 --> 00:58:36,110
to sort of the dev tooling world and

1625
00:58:36,110 --> 00:58:37,850
animal logos are very common and you can

1626
00:58:37,850 --> 00:58:39,770
make fun stuff with them and all that we

1627
00:58:39,770 --> 00:58:41,990
have it is like you know two year three

1628
00:58:41,990 --> 00:58:43,280
years sort of you know like celebratory

1629
00:58:43,280 --> 00:58:46,070
logos and a bunch of those that we play

1630
00:58:46,070 --> 00:58:47,600
with them but then we also wanted to

1631
00:58:47,600 --> 00:58:49,310
have you know to convey security and

1632
00:58:49,310 --> 00:58:51,920
convey protection and a guards a guard

1633
00:58:51,920 --> 00:58:55,640
dog felt felt right for it it was funny

1634
00:58:55,640 --> 00:58:57,380
doing the exercise of trying to find we

1635
00:58:57,380 --> 00:58:59,810
wanted a friendly logo and yet one that

1636
00:58:59,810 --> 00:59:01,760
keeps you secure and if you take our

1637
00:59:01,760 --> 00:59:03,560
logo and if you do this experiment take

1638
00:59:03,560 --> 00:59:05,300
this nickel when you flip the eyes you

1639
00:59:05,300 --> 00:59:07,010
know sleep the same eye circles to be to

1640
00:59:07,010 --> 00:59:09,230
be reversed it becomes too friendly

1641
00:59:09,230 --> 00:59:10,790
so really it comes down to the point

1642
00:59:10,790 --> 00:59:12,770
that you know you see a you see a dog

1643
00:59:12,770 --> 00:59:14,210
and you either want to sort of combine

1644
00:59:14,210 --> 00:59:17,200
at him or you want to give a difference

1645
00:59:17,200 --> 00:59:20,930
and and and we which I was like at the

1646
00:59:20,930 --> 00:59:22,310
end of the day we're here to secure you

1647
00:59:22,310 --> 00:59:24,650
so which owes the at the slightly more

1648
00:59:24,650 --> 00:59:29,119
secure version of the logo so everything

1649
00:59:29,119 --> 00:59:30,560
matters the colors come on the website

1650
00:59:30,560 --> 00:59:32,660
the events we go to the you know very

1651
00:59:32,660 --> 00:59:33,050
much

1652
00:59:33,050 --> 00:59:35,030
aim to be a developer to one company for

1653
00:59:35,030 --> 00:59:38,800
that security right and

1654
00:59:38,800 --> 00:59:40,950
[Music]

1655
00:59:40,950 --> 00:59:42,359
one more do you want to take that maybe

1656
00:59:42,359 --> 00:59:43,200
as shortly one

1657
00:59:43,200 --> 00:59:46,470
it's about against ensuring that the

1658
00:59:46,470 --> 00:59:49,230
pipelines are inter causing friction due

1659
00:59:49,230 --> 00:59:53,520
to adding security too little company we

1660
00:59:53,520 --> 00:59:56,070
get how do you make security how do you

1661
00:59:56,070 --> 00:59:57,690
kind of keep security pipelines from

1662
00:59:57,690 --> 01:00:00,660
from creating friction so I think from

1663
01:00:00,660 --> 01:00:02,490
so it's a very good question and it's a

1664
01:00:02,490 --> 01:00:03,990
classic one basically what happens is

1665
01:00:03,990 --> 01:00:05,550
the CI city offers an opportunity to

1666
01:00:05,550 --> 01:00:09,090
instill a policy and then security can

1667
01:00:09,090 --> 01:00:12,570
very overly rotate and use that as a

1668
01:00:12,570 --> 01:00:15,510
sledgehammer to break things but you

1669
01:00:15,510 --> 01:00:17,010
have to understand that breaking the

1670
01:00:17,010 --> 01:00:20,130
build is a very disruptive action so you

1671
01:00:20,130 --> 01:00:22,830
have to you should do two primary things

1672
01:00:22,830 --> 01:00:26,340
is one you should use it sparingly so

1673
01:00:26,340 --> 01:00:28,920
you can run you can run tests in the

1674
01:00:28,920 --> 01:00:31,109
build and you can make them you know log

1675
01:00:31,109 --> 01:00:33,690
issues you can make them you know spit

1676
01:00:33,690 --> 01:00:36,359
out sort of information but breaking the

1677
01:00:36,359 --> 01:00:37,590
build is something you should really do

1678
01:00:37,590 --> 01:00:40,950
only if it is if it is a hard problems

1679
01:00:40,950 --> 01:00:42,630
like maybe a CVS s10 sort of a critical

1680
01:00:42,630 --> 01:00:44,849
vulnerability right or so GTL components

1681
01:00:44,849 --> 01:00:46,320
not quite security but oftentimes falls

1682
01:00:46,320 --> 01:00:48,390
into it those warrant breaking the build

1683
01:00:48,390 --> 01:00:52,320
and the second thing is that when you do

1684
01:00:52,320 --> 01:00:53,490
break the build and even when you don't

1685
01:00:53,490 --> 01:00:55,109
you make the results very very

1686
01:00:55,109 --> 01:00:56,730
actionable so paint a very clear picture

1687
01:00:56,730 --> 01:00:58,680
to say okay I broke the build this

1688
01:00:58,680 --> 01:01:00,599
problem occurred this is what you need

1689
01:01:00,599 --> 01:01:02,400
to do to get back to a coming state and

1690
01:01:02,400 --> 01:01:04,830
hopefully empower developers to make

1691
01:01:04,830 --> 01:01:06,150
that decision so don't get in their way

1692
01:01:06,150 --> 01:01:07,619
so a really good example of that is

1693
01:01:07,619 --> 01:01:09,030
allowing developers to ignore

1694
01:01:09,030 --> 01:01:11,910
vulnerability themselves you can choose

1695
01:01:11,910 --> 01:01:13,589
not to do it and sometimes people fear

1696
01:01:13,589 --> 01:01:15,240
doing it if you don't let them do it

1697
01:01:15,240 --> 01:01:16,500
then you're breaking the process and

1698
01:01:16,500 --> 01:01:18,330
you're just creating disruption to their

1699
01:01:18,330 --> 01:01:21,599
process and it's a you know they're not

1700
01:01:21,599 --> 01:01:22,800
gonna like you know like it's not

1701
01:01:22,800 --> 01:01:24,450
something that will be embraced then and

1702
01:01:24,450 --> 01:01:26,910
that group will will push to move you

1703
01:01:26,910 --> 01:01:29,099
out of the build so you have to think

1704
01:01:29,099 --> 01:01:31,740
about the specific cases I do think it

1705
01:01:31,740 --> 01:01:33,930
Ops is a really interesting place to

1706
01:01:33,930 --> 01:01:38,130
allow dynamic and automated engagement

1707
01:01:38,130 --> 01:01:39,599
with developers without being intrusive

1708
01:01:39,599 --> 01:01:41,730
so if you open a pull request with a

1709
01:01:41,730 --> 01:01:43,500
suggested fix it's a full request it

1710
01:01:43,500 --> 01:01:45,180
doesn't get into anybody's way you can

1711
01:01:45,180 --> 01:01:46,380
choose to merge it or not you know if

1712
01:01:46,380 --> 01:01:48,540
you add automated code review or some

1713
01:01:48,540 --> 01:01:50,280
form of lynch or static analysis and I'm

1714
01:01:50,280 --> 01:01:51,990
keen to see the static analysis player

1715
01:01:51,990 --> 01:01:54,900
kick into that and open reviews on pull

1716
01:01:54,900 --> 01:01:55,980
requests once again there are

1717
01:01:55,980 --> 01:01:58,560
recommendations very visible easy to

1718
01:01:58,560 --> 01:02:00,360
engage with they don't get in your way

1719
01:02:00,360 --> 01:02:01,650
they just inform you and then reach you

1720
01:02:01,650 --> 01:02:03,960
so so I think it's it's about that it's

1721
01:02:03,960 --> 01:02:08,700
but you know using the opportunity but

1722
01:02:08,700 --> 01:02:10,020
not abusing it you know using the

1723
01:02:10,020 --> 01:02:11,850
opportunity for for knowledge and

1724
01:02:11,850 --> 01:02:14,190
insight but being very very mindful

1725
01:02:14,190 --> 01:02:15,930
about when do you when do you break

1726
01:02:15,930 --> 01:02:19,320
that's a that's a heavy heavy action do

1727
01:02:19,320 --> 01:02:28,530
it do it wisely yep cool thank you bye

1728
01:02:28,530 --> 01:02:30,000
that's all the time we have today but

1729
01:02:30,000 --> 01:02:31,590
please continue to drop your questions

1730
01:02:31,590 --> 01:02:32,940
in the slack Channel and I'll try to get

1731
01:02:32,940 --> 01:02:35,580
those answers for you each thanks to guy

1732
01:02:35,580 --> 01:02:37,440
Johnny it was great having you on the

1733
01:02:37,440 --> 01:02:39,270
ask you developer we hope aiight won't

1734
01:02:39,270 --> 01:02:41,250
be the last time to have you join us

1735
01:02:41,250 --> 01:02:43,740
also thanks all of you for listening I

1736
01:02:43,740 --> 01:02:44,580
hope you enjoyed it

1737
01:02:44,580 --> 01:02:46,710
our next section is going to be in a in

1738
01:02:46,710 --> 01:02:48,690
a two weeks time probably on that chart

1739
01:02:48,690 --> 01:02:50,580
of May that happens to be and will be

1740
01:02:50,580 --> 01:02:53,850
Schreyer money with using SS octopus I'm

1741
01:02:53,850 --> 01:02:55,050
already excited to hear what's that

1742
01:02:55,050 --> 01:02:57,210
about you can grab your tea get online

1743
01:02:57,210 --> 01:02:59,340
on three developer website which is

1744
01:02:59,340 --> 01:03:01,590
that's free developer calm and in the

1745
01:03:01,590 --> 01:03:03,000
meantime if you enjoy the session please

1746
01:03:03,000 --> 01:03:04,710
remember to share the video and tell

1747
01:03:04,710 --> 01:03:06,869
others about the community thank you and

1748
01:03:06,869 --> 01:03:07,910
goodbye

1749
01:03:07,910 --> 01:03:12,980
thanks everybody yeah

