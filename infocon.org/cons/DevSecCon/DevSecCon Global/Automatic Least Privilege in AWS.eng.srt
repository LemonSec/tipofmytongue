1
00:00:07,220 --> 00:00:11,070
hello everyone and welcome to the secure

2
00:00:11,070 --> 00:00:12,599
developer if it's your first time

3
00:00:12,599 --> 00:00:16,619
joining us our community that is to

4
00:00:16,619 --> 00:00:18,029
educate and enable developers and

5
00:00:18,029 --> 00:00:20,189
application security and today I am

6
00:00:20,189 --> 00:00:23,039
joined by Travis McPhee hi Travis

7
00:00:23,039 --> 00:00:26,099
hello before I heard let me Travis

8
00:00:26,099 --> 00:00:27,720
quickly once and introduce myself so my

9
00:00:27,720 --> 00:00:29,250
name is Sam - and I'm actually the

10
00:00:29,250 --> 00:00:31,740
community manager yeah working behind

11
00:00:31,740 --> 00:00:33,450
the scenes to make everything happen so

12
00:00:33,450 --> 00:00:35,760
any questions and session ideas anything

13
00:00:35,760 --> 00:00:38,370
like that and ping me a message on

14
00:00:38,370 --> 00:00:40,800
Twitter slack email and I'm happy on to

15
00:00:40,800 --> 00:00:43,050
them slack is actually the best place to

16
00:00:43,050 --> 00:00:45,899
go and to interact with Travis today so

17
00:00:45,899 --> 00:00:48,420
if you're not part of our community if

18
00:00:48,420 --> 00:00:52,230
you hop on to be secured and join the

19
00:00:52,230 --> 00:00:54,629
slack and join live sessions you can ask

20
00:00:54,629 --> 00:00:56,940
your questions interact as well as if

21
00:00:56,940 --> 00:00:58,859
you watched it watching the session post

22
00:00:58,859 --> 00:01:01,590
recording and have questions pop them in

23
00:01:01,590 --> 00:01:02,910
there and either Travis or one of our

24
00:01:02,910 --> 00:01:04,619
community members can answer them for

25
00:01:04,619 --> 00:01:05,330
you

26
00:01:05,330 --> 00:01:07,950
the last thing so housekeeping is if

27
00:01:07,950 --> 00:01:09,360
you're watching this on YouTube there is

28
00:01:09,360 --> 00:01:12,210
a cog on the bottom right hand corner if

29
00:01:12,210 --> 00:01:13,830
you turn your resolution up to maximum

30
00:01:13,830 --> 00:01:15,630
it's actually the best way to do today's

31
00:01:15,630 --> 00:01:18,470
session and the skill developer is

32
00:01:18,470 --> 00:01:21,330
powered by sneak they aim to bring a

33
00:01:21,330 --> 00:01:23,009
vendor-neutral community to share

34
00:01:23,009 --> 00:01:24,689
knowledge and best practice so huge

35
00:01:24,689 --> 00:01:26,790
thanks to them and but I think that's

36
00:01:26,790 --> 00:01:29,579
enough for me so I'm gonna hand over to

37
00:01:29,579 --> 00:01:32,430
Travis Travis welcome again thank you so

38
00:01:32,430 --> 00:01:32,880
much

39
00:01:32,880 --> 00:01:35,640
and I am going to briefly close my

40
00:01:35,640 --> 00:01:41,880
browser like a pro good so welcome

41
00:01:41,880 --> 00:01:43,530
everybody thank you so much for spending

42
00:01:43,530 --> 00:01:45,780
the morning with me or the evening or

43
00:01:45,780 --> 00:01:48,649
the afternoon wherever the case may be

44
00:01:48,649 --> 00:01:50,850
today we're going to talk about at least

45
00:01:50,850 --> 00:01:53,579
privileged in AWS as soon as I share my

46
00:01:53,579 --> 00:01:59,070
slides cool so hello again I'm Travis

47
00:01:59,070 --> 00:02:01,229
McGee if you feel so inclined you can

48
00:02:01,229 --> 00:02:02,700
follow me on Twitter

49
00:02:02,700 --> 00:02:05,100
I'll probably follow you back I'm on

50
00:02:05,100 --> 00:02:09,209
LinkedIn but let's jump right into it so

51
00:02:09,209 --> 00:02:09,490
I like

52
00:02:09,490 --> 00:02:12,400
show this slide because the way that I

53
00:02:12,400 --> 00:02:14,200
kind of think about you know depends in

54
00:02:14,200 --> 00:02:18,070
depth and and in controls and stuff is

55
00:02:18,070 --> 00:02:20,860
is it hopefully you've all seen one of

56
00:02:20,860 --> 00:02:22,360
the obstacle course shows like the

57
00:02:22,360 --> 00:02:25,150
ultimate beast master for American Ninja

58
00:02:25,150 --> 00:02:26,980
Warrior this is ultimate beast master I

59
00:02:26,980 --> 00:02:28,960
work for Netflix so I'm contractually

60
00:02:28,960 --> 00:02:31,360
obligated to plug Netflix shows at any

61
00:02:31,360 --> 00:02:34,120
open opportunity but basically the idea

62
00:02:34,120 --> 00:02:36,610
is that you get these really strong

63
00:02:36,610 --> 00:02:38,440
people and you know some of the

64
00:02:38,440 --> 00:02:39,640
strongest people in the world they're

65
00:02:39,640 --> 00:02:41,620
gymnasts they're rock climbers they're

66
00:02:41,620 --> 00:02:43,780
all these amazing people and then you

67
00:02:43,780 --> 00:02:46,050
build a super difficult obstacle course

68
00:02:46,050 --> 00:02:48,610
and the idea is that the obstacle course

69
00:02:48,610 --> 00:02:51,250
becomes so difficult that even these

70
00:02:51,250 --> 00:02:53,170
super-strong people can't get their way

71
00:02:53,170 --> 00:02:57,160
through and I kind of liken this in in

72
00:02:57,160 --> 00:02:59,680
what we're doing in cybersecurity to the

73
00:02:59,680 --> 00:03:02,200
attack chain and the cyber kill chain so

74
00:03:02,200 --> 00:03:04,630
an attacker is trying to do something in

75
00:03:04,630 --> 00:03:05,890
our environment something we don't want

76
00:03:05,890 --> 00:03:06,580
them to do

77
00:03:06,580 --> 00:03:08,650
maybe that steal our data maybe that's

78
00:03:08,650 --> 00:03:10,660
take our site down do you face something

79
00:03:10,660 --> 00:03:13,990
like that and our job so they're in in

80
00:03:13,990 --> 00:03:16,300
this analogy they are the contestants

81
00:03:16,300 --> 00:03:17,590
they are the people trying to get

82
00:03:17,590 --> 00:03:19,870
through the obstacle course and we are

83
00:03:19,870 --> 00:03:21,130
of course are the obstacle course

84
00:03:21,130 --> 00:03:25,450
builders so we can layer these cool

85
00:03:25,450 --> 00:03:28,210
controls on repo kit which I'll be

86
00:03:28,210 --> 00:03:30,400
talking about today stream alert de

87
00:03:30,400 --> 00:03:32,050
misto are alerting stack which I've

88
00:03:32,050 --> 00:03:33,850
talked about and other points and then

89
00:03:33,850 --> 00:03:36,370
of course some super confidential secret

90
00:03:36,370 --> 00:03:37,720
sauce which we're never going to talk

91
00:03:37,720 --> 00:03:40,750
about we layer these controls on and we

92
00:03:40,750 --> 00:03:43,030
get hopefully into a state where even

93
00:03:43,030 --> 00:03:44,920
the best attackers are going to try to

94
00:03:44,920 --> 00:03:47,110
get through our obstacle course and are

95
00:03:47,110 --> 00:03:48,910
going to get thrown off into the water

96
00:03:48,910 --> 00:03:50,830
and disgraced at some point and that

97
00:03:50,830 --> 00:03:52,060
that's kind of what we're trying to do

98
00:03:52,060 --> 00:03:53,170
here we're trying to build this really

99
00:03:53,170 --> 00:03:58,180
good obstacle course now of course this

100
00:03:58,180 --> 00:04:00,100
is just one step we'll talk about others

101
00:04:00,100 --> 00:04:01,870
but for today we're talking about lease

102
00:04:01,870 --> 00:04:04,270
privilege and why don't we just it seems

103
00:04:04,270 --> 00:04:05,650
so obvious everybody talks about it

104
00:04:05,650 --> 00:04:07,780
let's just lease privilege hopefully

105
00:04:07,780 --> 00:04:09,040
I'll convince you that it's not quite

106
00:04:09,040 --> 00:04:11,110
that simple we'll give a little bit of

107
00:04:11,110 --> 00:04:13,000
context about AWS and how this

108
00:04:13,000 --> 00:04:15,130
specifically works here and then we'll

109
00:04:15,130 --> 00:04:16,630
launch straight into you our approach

110
00:04:16,630 --> 00:04:19,510
here at Netflix which leads well into

111
00:04:19,510 --> 00:04:21,070
repo key at our open source tool for

112
00:04:21,070 --> 00:04:22,650
doing this kind of work and

113
00:04:22,650 --> 00:04:24,240
some next steps that we're taking and

114
00:04:24,240 --> 00:04:25,680
that you might take if you're interested

115
00:04:25,680 --> 00:04:30,330
as well so why don't we just leave llege

116
00:04:30,330 --> 00:04:31,979
it seems pretty easy right it's been

117
00:04:31,979 --> 00:04:35,100
around since 1975 if you had any formal

118
00:04:35,100 --> 00:04:38,340
training in security or took classes in

119
00:04:38,340 --> 00:04:40,020
school or you've been in security in the

120
00:04:40,020 --> 00:04:41,220
industry you'll probably have heard of

121
00:04:41,220 --> 00:04:44,340
this concept it's pretty simple it's

122
00:04:44,340 --> 00:04:48,090
basically you just give the whoever is

123
00:04:48,090 --> 00:04:49,830
using a system the minimum level of

124
00:04:49,830 --> 00:04:52,590
access that they need to do it and this

125
00:04:52,590 --> 00:04:54,840
was formalized in this paper the

126
00:04:54,840 --> 00:04:56,340
protection of information and computer

127
00:04:56,340 --> 00:04:59,639
systems by Saltzer and Schroder way back

128
00:04:59,639 --> 00:05:02,310
when computers look like this and you

129
00:05:02,310 --> 00:05:03,780
would think it's like okay this isn't

130
00:05:03,780 --> 00:05:06,090
new like it's been around for you know

131
00:05:06,090 --> 00:05:08,310
well over 40 years at this point why are

132
00:05:08,310 --> 00:05:14,699
we just doing it so if I want to give

133
00:05:14,699 --> 00:05:17,310
you access to a document I will only

134
00:05:17,310 --> 00:05:20,010
give you like maybe read or edit access

135
00:05:20,010 --> 00:05:21,270
on that one document I'm not going to

136
00:05:21,270 --> 00:05:23,039
give you every single document that I

137
00:05:23,039 --> 00:05:27,990
own right that's pretty obvious so given

138
00:05:27,990 --> 00:05:29,669
all this it's been around forever it

139
00:05:29,669 --> 00:05:31,639
makes sense you can articulate it to

140
00:05:31,639 --> 00:05:33,889
your dad or somebody

141
00:05:33,889 --> 00:05:36,620
everybody's got least privilege right

142
00:05:36,620 --> 00:05:40,710
not even close it turns out that least

143
00:05:40,710 --> 00:05:42,659
privilege is one of those things where

144
00:05:42,659 --> 00:05:44,099
when you start reading about breaches

145
00:05:44,099 --> 00:05:46,050
and things that went wrong in security

146
00:05:46,050 --> 00:05:48,389
it's like lease privilege what it made

147
00:05:48,389 --> 00:05:49,889
this better or at least privilege would

148
00:05:49,889 --> 00:05:51,780
have stopped it and you wonder like okay

149
00:05:51,780 --> 00:05:54,180
well these people care about it they're

150
00:05:54,180 --> 00:05:55,440
very smart people working on this

151
00:05:55,440 --> 00:05:59,099
problem why is it not happening a few

152
00:05:59,099 --> 00:06:00,930
problems one of them is that you get

153
00:06:00,930 --> 00:06:02,220
these permissions that are kind of like

154
00:06:02,220 --> 00:06:04,260
frozen in time you know like like an

155
00:06:04,260 --> 00:06:07,349
artifact the the reason this happens is

156
00:06:07,349 --> 00:06:09,990
you typically do a review right you're

157
00:06:09,990 --> 00:06:11,699
your own security team and you're

158
00:06:11,699 --> 00:06:13,050
meeting with an application team or vice

159
00:06:13,050 --> 00:06:16,889
versa and the application team says ok

160
00:06:16,889 --> 00:06:18,570
we kind of think that we need this set

161
00:06:18,570 --> 00:06:22,020
of permissions to get done and if the

162
00:06:22,020 --> 00:06:23,760
application team ever ends up needing

163
00:06:23,760 --> 00:06:25,440
more than that set of permissions you'll

164
00:06:25,440 --> 00:06:27,750
definitely hear about that because they

165
00:06:27,750 --> 00:06:29,070
they're blocked they need new

166
00:06:29,070 --> 00:06:31,139
permissions to get their job done but

167
00:06:31,139 --> 00:06:32,370
you don't really hear about that other

168
00:06:32,370 --> 00:06:34,229
way where it's like oh actually we've

169
00:06:34,229 --> 00:06:35,729
got more permissions that we need and so

170
00:06:35,729 --> 00:06:37,020
you kind of get this

171
00:06:37,020 --> 00:06:39,410
this fossilised set of permissions that

172
00:06:39,410 --> 00:06:42,660
that you came to agreement in that one

173
00:06:42,660 --> 00:06:44,070
time that you had a meeting with the

174
00:06:44,070 --> 00:06:48,750
team 25 months ago or whatever you don't

175
00:06:48,750 --> 00:06:50,790
want over provision permissions has

176
00:06:50,790 --> 00:06:53,280
anybody ever I know I've never done this

177
00:06:53,280 --> 00:06:55,020
for sure but has anybody ever been

178
00:06:55,020 --> 00:06:57,600
working with a NIC system and just said

179
00:06:57,600 --> 00:06:59,520
I don't know what permissions this file

180
00:06:59,520 --> 00:07:01,170
needs I'm just gonna seven seven seven

181
00:07:01,170 --> 00:07:03,690
and it'll probably work or you know I

182
00:07:03,690 --> 00:07:05,460
don't know every time I pseudo blah blah

183
00:07:05,460 --> 00:07:07,020
blah just it just sort of works out well

184
00:07:07,020 --> 00:07:09,030
for me like this is this is over

185
00:07:09,030 --> 00:07:10,470
provision and I understand why this

186
00:07:10,470 --> 00:07:12,930
happens its permissions are pretty hard

187
00:07:12,930 --> 00:07:15,000
it's difficult to wrap your mind around

188
00:07:15,000 --> 00:07:16,920
if this isn't something that you do day

189
00:07:16,920 --> 00:07:18,060
in and day out as part of your job

190
00:07:18,060 --> 00:07:20,900
they're really hard to understand and

191
00:07:20,900 --> 00:07:22,500
especially when you're working on a

192
00:07:22,500 --> 00:07:24,660
problem you don't want to stop context

193
00:07:24,660 --> 00:07:26,340
switch out of that and figure out

194
00:07:26,340 --> 00:07:28,020
exactly what permissions you need so you

195
00:07:28,020 --> 00:07:30,120
kind of like just just give it admin

196
00:07:30,120 --> 00:07:33,000
just give it 777 just sudo this this

197
00:07:33,000 --> 00:07:35,310
command and everything will work out and

198
00:07:35,310 --> 00:07:36,960
then of course you'll go back and fix it

199
00:07:36,960 --> 00:07:38,970
later but we're all busy that doesn't

200
00:07:38,970 --> 00:07:43,230
happen as often as we'd like and then I

201
00:07:43,230 --> 00:07:44,970
think in my personal opinion this is

202
00:07:44,970 --> 00:07:46,970
probably the biggest reason that we have

203
00:07:46,970 --> 00:07:49,590
over over permission or not least

204
00:07:49,590 --> 00:07:51,930
privilege is because permission granting

205
00:07:51,930 --> 00:07:53,580
the whole ceremony associated with it

206
00:07:53,580 --> 00:07:56,370
sucks like you have you have this kind

207
00:07:56,370 --> 00:07:58,560
of adversarial situation you really

208
00:07:58,560 --> 00:08:00,390
shouldn't have it I mean everybody's

209
00:08:00,390 --> 00:08:02,010
sort of on the same page which is that

210
00:08:02,010 --> 00:08:04,500
security team application team everybody

211
00:08:04,500 --> 00:08:07,620
wants the permissions for the app that

212
00:08:07,620 --> 00:08:10,170
the app actually needs and yet the way

213
00:08:10,170 --> 00:08:11,610
that they're approaching the problem is

214
00:08:11,610 --> 00:08:13,980
subtly different enough such that it

215
00:08:13,980 --> 00:08:15,750
becomes this kind of like adversarial

216
00:08:15,750 --> 00:08:18,840
you know time-suck everybody's kind of

217
00:08:18,840 --> 00:08:21,120
like oh I might need it down the road

218
00:08:21,120 --> 00:08:24,690
just give me these permissions and the

219
00:08:24,690 --> 00:08:26,520
whole process associated with it like

220
00:08:26,520 --> 00:08:28,440
let's say that one of these meetings

221
00:08:28,440 --> 00:08:31,470
took 10 minutes which i think is I think

222
00:08:31,470 --> 00:08:32,760
it's generous I think they typically

223
00:08:32,760 --> 00:08:34,289
take longer than this with the overhead

224
00:08:34,289 --> 00:08:35,940
of going to a meeting and the number of

225
00:08:35,940 --> 00:08:37,049
people that need to be in the room to

226
00:08:37,049 --> 00:08:39,690
actually make a decision and you know we

227
00:08:39,690 --> 00:08:41,520
live in a we live in a CIC Dee

228
00:08:41,520 --> 00:08:43,650
constantly deploying you know a single

229
00:08:43,650 --> 00:08:45,930
app might have five deploys a day and we

230
00:08:45,930 --> 00:08:49,020
live in a micro service world where now

231
00:08:49,020 --> 00:08:50,880
instead of one big monolith we've got

232
00:08:50,880 --> 00:08:53,130
hundreds or thousands of many services

233
00:08:53,130 --> 00:08:54,540
which are apps and they each need their

234
00:08:54,540 --> 00:08:56,550
own permissions and so when you do the

235
00:08:56,550 --> 00:08:58,320
numbers on this you figure out that the

236
00:08:58,320 --> 00:09:00,270
the overhead to an organization of

237
00:09:00,270 --> 00:09:01,860
having these kind of meetings quickly

238
00:09:01,860 --> 00:09:04,110
just spirals out of control and so we

239
00:09:04,110 --> 00:09:05,520
don't want all that I think this is a

240
00:09:05,520 --> 00:09:07,290
really big reason why at least privilege

241
00:09:07,290 --> 00:09:09,000
isn't done well is because everybody

242
00:09:09,000 --> 00:09:10,020
just kind of bummed out on these

243
00:09:10,020 --> 00:09:13,800
meetings and so because you have the

244
00:09:13,800 --> 00:09:15,810
they don't permissions don't really get

245
00:09:15,810 --> 00:09:18,330
smaller because everyone just leaves

246
00:09:18,330 --> 00:09:19,650
them alone and doesn't really ever give

247
00:09:19,650 --> 00:09:22,500
permissions back voluntarily and and the

248
00:09:22,500 --> 00:09:24,300
meetings suck and all this you kind of

249
00:09:24,300 --> 00:09:25,680
get this sort of gravity that pulls

250
00:09:25,680 --> 00:09:28,560
policies larger over time and they just

251
00:09:28,560 --> 00:09:29,850
sort of you know like this astronaut

252
00:09:29,850 --> 00:09:31,140
here they just sort of like float off

253
00:09:31,140 --> 00:09:33,870
into space which is exactly the opposite

254
00:09:33,870 --> 00:09:35,640
of what we want this is not what salts

255
00:09:35,640 --> 00:09:36,750
are in Schroeder we're thinking when

256
00:09:36,750 --> 00:09:39,990
they define lease privilege in 1975 so

257
00:09:39,990 --> 00:09:43,170
there needs to be a better way in a

258
00:09:43,170 --> 00:09:44,460
physical world this all sort of just

259
00:09:44,460 --> 00:09:46,770
happens it just makes sense it works out

260
00:09:46,770 --> 00:09:49,800
for example if I move out of my

261
00:09:49,800 --> 00:09:51,600
apartment it has never happened that my

262
00:09:51,600 --> 00:09:53,280
landlord has forgotten to get my keys

263
00:09:53,280 --> 00:09:54,900
back like this is just like yep of

264
00:09:54,900 --> 00:09:57,120
course you no longer need the

265
00:09:57,120 --> 00:09:59,370
permissions to this apartment and so

266
00:09:59,370 --> 00:10:01,650
you're gonna give them up and similarly

267
00:10:01,650 --> 00:10:04,230
if I stop working at Netflix 100% sure

268
00:10:04,230 --> 00:10:05,940
my badge is not gonna work tomorrow like

269
00:10:05,940 --> 00:10:08,640
it just happens nobody ever keeps those

270
00:10:08,640 --> 00:10:10,730
privileges around for longer than needed

271
00:10:10,730 --> 00:10:13,110
if I don't renew my passport on a

272
00:10:13,110 --> 00:10:14,910
regular basis at some point I'm going to

273
00:10:14,910 --> 00:10:16,050
show up at the airport

274
00:10:16,050 --> 00:10:17,310
and it's not gonna work they're not

275
00:10:17,310 --> 00:10:18,330
gonna let me out of the country they're

276
00:10:18,330 --> 00:10:20,160
not gonna let me on the plane so these

277
00:10:20,160 --> 00:10:22,410
are kind of all examples of a least

278
00:10:22,410 --> 00:10:24,210
privileged approach that works in the

279
00:10:24,210 --> 00:10:26,460
physical world but tends to break down

280
00:10:26,460 --> 00:10:28,980
in the software world where these kind

281
00:10:28,980 --> 00:10:30,720
of status changes nobody really pays

282
00:10:30,720 --> 00:10:31,560
attention to you

283
00:10:31,560 --> 00:10:34,590
and what I mean by status changes so we

284
00:10:34,590 --> 00:10:36,630
had I'm moving out of my apartment right

285
00:10:36,630 --> 00:10:39,210
that's a status change that's Travis no

286
00:10:39,210 --> 00:10:42,080
longer has access to his apartment but

287
00:10:42,080 --> 00:10:44,730
the software that we're developing is it

288
00:10:44,730 --> 00:10:46,680
and actively maintained anymore or the

289
00:10:46,680 --> 00:10:49,740
developers change positions or now it

290
00:10:49,740 --> 00:10:52,110
does this whole new pile of things these

291
00:10:52,110 --> 00:10:54,270
are also status changes and they aren't

292
00:10:54,270 --> 00:10:57,720
tracked well in software and so while we

293
00:10:57,720 --> 00:10:59,130
get the hey it's time to giving your

294
00:10:59,130 --> 00:11:01,110
keys in the physical world we don't

295
00:11:01,110 --> 00:11:04,040
really get this in software

296
00:11:04,350 --> 00:11:07,120
and so I don't know about you but I'm

297
00:11:07,120 --> 00:11:09,040
definitely you know I've been personally

298
00:11:09,040 --> 00:11:12,430
aware of abandoned projects where there

299
00:11:12,430 --> 00:11:13,750
were developers they were certainly

300
00:11:13,750 --> 00:11:15,250
excited about working on it at the time

301
00:11:15,250 --> 00:11:17,740
and then they've moved off there they

302
00:11:17,740 --> 00:11:19,540
went to some other company they moved

303
00:11:19,540 --> 00:11:21,850
under a different project and those

304
00:11:21,850 --> 00:11:23,470
applications are still running today

305
00:11:23,470 --> 00:11:25,329
these with the exact same permissions

306
00:11:25,329 --> 00:11:27,700
that they were running before except for

307
00:11:27,700 --> 00:11:29,079
now they're not getting patched nobody's

308
00:11:29,079 --> 00:11:30,730
paying attention to them and these

309
00:11:30,730 --> 00:11:33,100
represent big-time liability in an

310
00:11:33,100 --> 00:11:34,959
organization especially as you consider

311
00:11:34,959 --> 00:11:37,029
the sheer magnitude of number of

312
00:11:37,029 --> 00:11:38,890
projects like this that a large

313
00:11:38,890 --> 00:11:46,810
organization is likely to have so if you

314
00:11:46,810 --> 00:11:49,630
have a really small environment you know

315
00:11:49,630 --> 00:11:51,850
you're working on startup you're lucky

316
00:11:51,850 --> 00:11:54,490
enough that you're a security person and

317
00:11:54,490 --> 00:11:57,010
there are relatively small number of

318
00:11:57,010 --> 00:11:59,529
developers and small number of apps then

319
00:11:59,529 --> 00:12:01,660
you can probably just take care of this

320
00:12:01,660 --> 00:12:04,180
yourself you'd say oK we've got a we are

321
00:12:04,180 --> 00:12:06,579
apt changed we need new permissions or

322
00:12:06,579 --> 00:12:07,690
app change we don't need these

323
00:12:07,690 --> 00:12:10,510
permissions anymore here's the new

324
00:12:10,510 --> 00:12:12,940
permissions the option have that kind of

325
00:12:12,940 --> 00:12:15,790
stuff that seems reasonable for a really

326
00:12:15,790 --> 00:12:18,040
small environment but I would argue that

327
00:12:18,040 --> 00:12:19,839
that is not the reality that most of us

328
00:12:19,839 --> 00:12:22,540
are dealing in which is these extremely

329
00:12:22,540 --> 00:12:24,730
complicated you know I can mentioned

330
00:12:24,730 --> 00:12:27,820
earlier system of interconnected micro

331
00:12:27,820 --> 00:12:29,709
services that are doing multiple ships a

332
00:12:29,709 --> 00:12:33,010
day or very large projects lots of

333
00:12:33,010 --> 00:12:35,620
different things going on every company

334
00:12:35,620 --> 00:12:37,570
that I've ever been a part of feels a

335
00:12:37,570 --> 00:12:39,579
lot more like this metropolis than the

336
00:12:39,579 --> 00:12:43,420
small house situation and so much so

337
00:12:43,420 --> 00:12:45,519
that the manual approach of let me just

338
00:12:45,519 --> 00:12:47,199
think about the permissions that the app

339
00:12:47,199 --> 00:13:03,790
needs isn't gonna work here we go back

340
00:13:03,790 --> 00:13:06,339
on track so let's talk about specifics

341
00:13:06,339 --> 00:13:10,120
about the better approach here so this

342
00:13:10,120 --> 00:13:12,069
will probably be recap for some of you

343
00:13:12,069 --> 00:13:13,540
please bear with me we'll get on to the

344
00:13:13,540 --> 00:13:16,510
fun stuff in a minute I promise but AWS

345
00:13:16,510 --> 00:13:17,470
is the cloud

346
00:13:17,470 --> 00:13:20,890
provider that Netflix uses and AWS

347
00:13:20,890 --> 00:13:22,840
implements a really nice role based

348
00:13:22,840 --> 00:13:25,240
access control system or our back if

349
00:13:25,240 --> 00:13:28,270
you're a security nerd via the Identity

350
00:13:28,270 --> 00:13:30,940
and Access Manager service so Identity

351
00:13:30,940 --> 00:13:33,370
and Access Management is a AWS service

352
00:13:33,370 --> 00:13:36,910
and it provides API api's that you can

353
00:13:36,910 --> 00:13:39,910
call just like s3 and an AWS has other

354
00:13:39,910 --> 00:13:42,250
well-known services and the whole

355
00:13:42,250 --> 00:13:44,830
purpose of it is to implement role based

356
00:13:44,830 --> 00:13:47,620
access control which was which is this

357
00:13:47,620 --> 00:13:49,600
system where you can say Travis gains

358
00:13:49,600 --> 00:13:52,810
access to his apartment basically and so

359
00:13:52,810 --> 00:13:57,490
in AWS you have applications probably a

360
00:13:57,490 --> 00:13:58,660
lot of them if you're the big

361
00:13:58,660 --> 00:14:00,190
organization like we talked about and

362
00:14:00,190 --> 00:14:03,160
those applications assume roles the

363
00:14:03,160 --> 00:14:05,410
roles have policies attached to them and

364
00:14:05,410 --> 00:14:08,800
each of those policies defines basically

365
00:14:08,800 --> 00:14:11,950
what the role or application can do with

366
00:14:11,950 --> 00:14:17,530
what other AWS services and resources so

367
00:14:17,530 --> 00:14:19,270
let's uh let's use an example here to

368
00:14:19,270 --> 00:14:21,160
make this a little bit more clear let's

369
00:14:21,160 --> 00:14:23,080
say that we're going to implement a

370
00:14:23,080 --> 00:14:25,750
cloud-based word processor right so

371
00:14:25,750 --> 00:14:27,370
something like think like Google Docs or

372
00:14:27,370 --> 00:14:29,680
something so what are we going to have

373
00:14:29,680 --> 00:14:32,020
we have an application it's going to

374
00:14:32,020 --> 00:14:34,360
read and write files delete files stuff

375
00:14:34,360 --> 00:14:37,360
like that and it's going to if you were

376
00:14:37,360 --> 00:14:38,710
doing this in Amazon world you'd

377
00:14:38,710 --> 00:14:40,660
probably want an object store and the

378
00:14:40,660 --> 00:14:45,310
object store would be s3 so here's what

379
00:14:45,310 --> 00:14:47,500
a policy could look like for your word

380
00:14:47,500 --> 00:14:50,560
processor so this is like this is first

381
00:14:50,560 --> 00:14:53,350
cut and please look at the policy and

382
00:14:53,350 --> 00:14:56,560
tell me what you think I put the little

383
00:14:56,560 --> 00:14:58,270
newspaper emoji up here because I would

384
00:14:58,270 --> 00:14:59,740
say that if you have this kind of policy

385
00:14:59,740 --> 00:15:00,970
then you're probably going to end up in

386
00:15:00,970 --> 00:15:02,440
the news at some point and not in a way

387
00:15:02,440 --> 00:15:04,330
that you want people are gonna come

388
00:15:04,330 --> 00:15:06,520
storming it on your door and saying why

389
00:15:06,520 --> 00:15:07,960
is the word processor suck like why do

390
00:15:07,960 --> 00:15:10,390
we get this breach basically what we're

391
00:15:10,390 --> 00:15:11,980
doing here is we're saying the word

392
00:15:11,980 --> 00:15:14,350
processor is essentially full admin on

393
00:15:14,350 --> 00:15:17,050
your account which probably is not what

394
00:15:17,050 --> 00:15:18,160
you want especially as you start

395
00:15:18,160 --> 00:15:20,320
thinking about what else is running in

396
00:15:20,320 --> 00:15:21,850
the account is the word processor the

397
00:15:21,850 --> 00:15:22,510
only thing

398
00:15:22,510 --> 00:15:25,510
okay well even if it is you probably

399
00:15:25,510 --> 00:15:27,820
don't want if it gets compromised you

400
00:15:27,820 --> 00:15:29,800
don't want the word processor to be able

401
00:15:29,800 --> 00:15:30,910
to you

402
00:15:30,910 --> 00:15:33,300
change your organization or turn on the

403
00:15:33,300 --> 00:15:36,399
shield service which cost $36,000 a year

404
00:15:36,399 --> 00:15:37,930
all kinds of other calls that you can

405
00:15:37,930 --> 00:15:40,360
make with admin so I would argue and

406
00:15:40,360 --> 00:15:41,800
hopefully you agree with me that this

407
00:15:41,800 --> 00:15:43,680
policy is not good

408
00:15:43,680 --> 00:15:46,449
okay let's refine it a little bit let's

409
00:15:46,449 --> 00:15:49,089
say that instead of full admin we change

410
00:15:49,089 --> 00:15:51,910
it to this which basically means that

411
00:15:51,910 --> 00:15:56,019
your s3 admin hopefully the scream emoji

412
00:15:56,019 --> 00:15:59,829
here conveys my my feelings about this I

413
00:15:59,829 --> 00:16:01,839
still say this is not good and the

414
00:16:01,839 --> 00:16:04,480
reason is because do you really need s3

415
00:16:04,480 --> 00:16:06,850
admin do you need to be able to do

416
00:16:06,850 --> 00:16:09,759
anything with any bucket if is there if

417
00:16:09,759 --> 00:16:10,930
there's something else in the account

418
00:16:10,930 --> 00:16:12,940
for example one thing that you could do

419
00:16:12,940 --> 00:16:14,980
with s3 admin is you can make the

420
00:16:14,980 --> 00:16:18,430
buckets public so every bucket the

421
00:16:18,430 --> 00:16:19,569
bucket that your word processor is

422
00:16:19,569 --> 00:16:21,269
dealing with is now on the Internet and

423
00:16:21,269 --> 00:16:23,740
if you're paying attention to the news a

424
00:16:23,740 --> 00:16:24,819
lot of companies have done this

425
00:16:24,819 --> 00:16:26,949
accidentally or or just forgotten to

426
00:16:26,949 --> 00:16:28,600
turn it back on so this is not good we

427
00:16:28,600 --> 00:16:31,120
want to apply more restriction for this

428
00:16:31,120 --> 00:16:33,790
and get that scream emoji to come to a

429
00:16:33,790 --> 00:16:37,029
happier emoji all right now we're

430
00:16:37,029 --> 00:16:37,689
getting somewhere

431
00:16:37,689 --> 00:16:42,100
we've swapped s3 star for s3 specific

432
00:16:42,100 --> 00:16:44,740
actions get object and put object which

433
00:16:44,740 --> 00:16:46,420
is Amazon's version of read and write

434
00:16:46,420 --> 00:16:50,110
and the problem that the the reason that

435
00:16:50,110 --> 00:16:51,670
this is still not ideal for us is

436
00:16:51,670 --> 00:16:53,709
because we're scoped to the star

437
00:16:53,709 --> 00:16:56,079
resource which basically means that our

438
00:16:56,079 --> 00:16:57,579
word processor can read and write

439
00:16:57,579 --> 00:16:59,410
objects from any bucket in the account

440
00:16:59,410 --> 00:17:02,500
and if you have code tenancy meaning

441
00:17:02,500 --> 00:17:04,630
your word processor is sitting next to

442
00:17:04,630 --> 00:17:05,859
other applications that you're

443
00:17:05,859 --> 00:17:08,650
developing on such as maybe Google

444
00:17:08,650 --> 00:17:10,299
sheets or something like this then if

445
00:17:10,299 --> 00:17:12,730
the word processor gets compromised then

446
00:17:12,730 --> 00:17:14,559
it can read and write documents from

447
00:17:14,559 --> 00:17:17,530
Google sheets which breaks your your and

448
00:17:17,530 --> 00:17:19,839
and ozzie models and is not something

449
00:17:19,839 --> 00:17:24,010
you want so we're gonna swap that with

450
00:17:24,010 --> 00:17:29,169
our deal state which is that this is

451
00:17:29,169 --> 00:17:30,250
this is what we're trying to get to you

452
00:17:30,250 --> 00:17:31,630
this is our Holy Grail

453
00:17:31,630 --> 00:17:34,840
now we've got specific actions specific

454
00:17:34,840 --> 00:17:37,090
services and the specific resource that

455
00:17:37,090 --> 00:17:39,640
we need to do it for all right so this

456
00:17:39,640 --> 00:17:42,880
is this is what we're shooting for so to

457
00:17:42,880 --> 00:17:44,630
get there we're going to use D

458
00:17:44,630 --> 00:17:47,140
the Amazon gives us in the form of

459
00:17:47,140 --> 00:17:53,000
service action and resource usage and to

460
00:17:53,000 --> 00:17:55,190
show how this works let's talk about

461
00:17:55,190 --> 00:17:59,570
another example it is October now crown

462
00:17:59,570 --> 00:18:01,010
is coming back soon I'm really excited

463
00:18:01,010 --> 00:18:03,920
about it and of course you know like I

464
00:18:03,920 --> 00:18:05,420
mentioned contractually obligated to

465
00:18:05,420 --> 00:18:07,400
pitch all the Netflix shows so let's

466
00:18:07,400 --> 00:18:09,380
talk about a really cool app that's

467
00:18:09,380 --> 00:18:12,440
going to use some machine learning or

468
00:18:12,440 --> 00:18:15,670
something like that and and put a crown

469
00:18:15,670 --> 00:18:18,860
image on top of any person's face that

470
00:18:18,860 --> 00:18:23,510
sounds pretty cool to me so we're gonna

471
00:18:23,510 --> 00:18:26,270
implement that in AWS and we're

472
00:18:26,270 --> 00:18:28,670
basically it's gonna be an app it does

473
00:18:28,670 --> 00:18:32,240
some it's gonna access a bucket that

474
00:18:32,240 --> 00:18:34,210
contains images of people's face and

475
00:18:34,210 --> 00:18:36,950
it's going to write out new images that

476
00:18:36,950 --> 00:18:38,420
contain the person's face with a crown

477
00:18:38,420 --> 00:18:38,900
on it

478
00:18:38,900 --> 00:18:40,970
and something that we're probably going

479
00:18:40,970 --> 00:18:43,460
to need here is a queue and the queue is

480
00:18:43,460 --> 00:18:44,960
going to tell us when new people's faces

481
00:18:44,960 --> 00:18:47,000
come into the bucket and then we have

482
00:18:47,000 --> 00:18:52,640
work to do so it Netflix the way that

483
00:18:52,640 --> 00:18:55,000
this works is that every application

484
00:18:55,000 --> 00:18:57,380
starts off through our deployment tool

485
00:18:57,380 --> 00:18:59,330
which is called spinnaker and the

486
00:18:59,330 --> 00:19:01,370
developers will come in and say I want a

487
00:19:01,370 --> 00:19:03,410
new app so I'm the developer of this

488
00:19:03,410 --> 00:19:05,840
cool crown app I come in I said I click

489
00:19:05,840 --> 00:19:08,600
the button new app I say Travis's cool

490
00:19:08,600 --> 00:19:11,870
crown app deploy and then it gives me a

491
00:19:11,870 --> 00:19:14,060
role and that role has a base set of

492
00:19:14,060 --> 00:19:15,710
permissions associated with it and it's

493
00:19:15,710 --> 00:19:18,290
basically the same for everybody now

494
00:19:18,290 --> 00:19:20,270
these permissions are things that we've

495
00:19:20,270 --> 00:19:22,190
noticed over time the developers tend to

496
00:19:22,190 --> 00:19:24,530
really need and so everybody gets the

497
00:19:24,530 --> 00:19:26,630
same ones and it should cover you know

498
00:19:26,630 --> 00:19:29,150
well above 95 percent of people's use of

499
00:19:29,150 --> 00:19:33,980
cases out of the box and then once my

500
00:19:33,980 --> 00:19:37,670
Crown app is deployed and working repo

501
00:19:37,670 --> 00:19:39,230
kid in the process that I'm talking

502
00:19:39,230 --> 00:19:42,230
about here we basically use these to

503
00:19:42,230 --> 00:19:45,590
passively watch the application for 90

504
00:19:45,590 --> 00:19:47,720
days and see which permissions are being

505
00:19:47,720 --> 00:19:50,630
actively used now the reason we picked

506
00:19:50,630 --> 00:19:53,960
90 days is two reasons actually at

507
00:19:53,960 --> 00:19:55,340
Netflix we've got something called the

508
00:19:55,340 --> 00:19:57,380
quarterly deprecation cycle and this

509
00:19:57,380 --> 00:19:58,520
means that developers

510
00:19:58,520 --> 00:19:59,930
are expected to redeploy their

511
00:19:59,930 --> 00:20:02,440
application at least once a quarter and

512
00:20:02,440 --> 00:20:04,940
so there are some permissions that may

513
00:20:04,940 --> 00:20:07,480
be exercised only on instance start and

514
00:20:07,480 --> 00:20:10,430
even those permissions we shall have we

515
00:20:10,430 --> 00:20:11,930
should have observed once a quarter if

516
00:20:11,930 --> 00:20:13,490
developers are adhering to this product

517
00:20:13,490 --> 00:20:16,610
practice and also we just we think it's

518
00:20:16,610 --> 00:20:18,110
a pretty reasonable amount of time to

519
00:20:18,110 --> 00:20:20,150
let applications settle into steady

520
00:20:20,150 --> 00:20:23,140
state you know ninety days is a while it

521
00:20:23,140 --> 00:20:25,360
at the beginning when you have a new app

522
00:20:25,360 --> 00:20:27,830
developers are iterating on it we're not

523
00:20:27,830 --> 00:20:29,240
exactly sure what they're gonna need yet

524
00:20:29,240 --> 00:20:31,880
but after after it quarters so we tend

525
00:20:31,880 --> 00:20:33,500
to see that it sells down pretty well so

526
00:20:33,500 --> 00:20:36,290
we're passively monitoring for the first

527
00:20:36,290 --> 00:20:37,670
ninety days and then after that we're

528
00:20:37,670 --> 00:20:40,540
gonna start doing stuff

529
00:20:41,010 --> 00:20:43,420
so after 90 days we start taking away

530
00:20:43,420 --> 00:20:45,760
unused permissions now I remember our

531
00:20:45,760 --> 00:20:47,350
crown app is going to read and write

532
00:20:47,350 --> 00:20:49,330
objects from s3 which is people's spaces

533
00:20:49,330 --> 00:20:51,280
and modified people's spaces with the

534
00:20:51,280 --> 00:20:53,260
crown image and it's going to receive

535
00:20:53,260 --> 00:20:54,970
cue messages about when new work is

536
00:20:54,970 --> 00:20:57,370
available for us but whatever these dots

537
00:20:57,370 --> 00:20:58,570
were like we don't need the rest of that

538
00:20:58,570 --> 00:21:02,800
crap so repo kid will actually take the

539
00:21:02,800 --> 00:21:06,100
applications role it'll edit it to

540
00:21:06,100 --> 00:21:07,750
remove the unused permissions and then

541
00:21:07,750 --> 00:21:10,210
it'll save it back and and save a

542
00:21:10,210 --> 00:21:11,740
version so in case we have to rollback

543
00:21:11,740 --> 00:21:14,350
or anything and that's the way repo kid

544
00:21:14,350 --> 00:21:16,390
works basically reads the role makes

545
00:21:16,390 --> 00:21:18,910
these changes saves it back in the IAM

546
00:21:18,910 --> 00:21:22,680
service and then saves a backup version

547
00:21:22,770 --> 00:21:26,620
so let's say that the crown adds scope a

548
00:21:26,620 --> 00:21:28,120
little bit right now we need to do

549
00:21:28,120 --> 00:21:30,580
something new that we didn't have to do

550
00:21:30,580 --> 00:21:32,590
before or you know one of those things

551
00:21:32,590 --> 00:21:35,050
that we had removed we actually do end

552
00:21:35,050 --> 00:21:37,240
up needing this is pretty easy instead

553
00:21:37,240 --> 00:21:39,220
of that horrible like sit down

554
00:21:39,220 --> 00:21:42,130
10-minute meeting 10 minutes at best I

555
00:21:42,130 --> 00:21:43,510
mean we're talking like our meetings

556
00:21:43,510 --> 00:21:45,310
hour and a half meetings we don't have

557
00:21:45,310 --> 00:21:46,900
to do any of that anymore this is a

558
00:21:46,900 --> 00:21:49,720
simple swing by my desk this is a simple

559
00:21:49,720 --> 00:21:50,920
slack request

560
00:21:50,920 --> 00:21:53,590
I need generally this class of thing and

561
00:21:53,590 --> 00:21:55,330
then we can add it and we're not even

562
00:21:55,330 --> 00:21:57,580
very worried about is this the exact

563
00:21:57,580 --> 00:21:59,170
right set of permissions because we know

564
00:21:59,170 --> 00:22:01,060
that repo kid is going to automatically

565
00:22:01,060 --> 00:22:02,860
take us down to least privilege over

566
00:22:02,860 --> 00:22:05,110
time so we don't have to spend all this

567
00:22:05,110 --> 00:22:09,670
time thinking so much about it so in the

568
00:22:09,670 --> 00:22:11,440
case of you know these things that were

569
00:22:11,440 --> 00:22:12,730
removed it doesn't matter what they are

570
00:22:12,730 --> 00:22:14,670
but a couple of them get put back and

571
00:22:14,670 --> 00:22:17,560
that's not something the repo kid does

572
00:22:17,560 --> 00:22:19,630
that's a manual process by us developers

573
00:22:19,630 --> 00:22:22,570
or sorry us as the security team but

574
00:22:22,570 --> 00:22:25,240
it's much simpler than that that picture

575
00:22:25,240 --> 00:22:26,470
of the awful meeting that I showed

576
00:22:26,470 --> 00:22:31,390
earlier and then when developers stop

577
00:22:31,390 --> 00:22:33,130
using permissions at all like you know

578
00:22:33,130 --> 00:22:34,750
like let's say that I move on and I'm

579
00:22:34,750 --> 00:22:37,210
not doing the the crown application

580
00:22:37,210 --> 00:22:40,810
anymore they get removed and so I'm like

581
00:22:40,810 --> 00:22:42,550
hey I'm not I'm not doing this crown

582
00:22:42,550 --> 00:22:44,710
thing it's abandoned like that picture

583
00:22:44,710 --> 00:22:47,170
of the abandoned village I showed

584
00:22:47,170 --> 00:22:49,210
earlier the whole thing the whole policy

585
00:22:49,210 --> 00:22:51,580
gets zeroed out which is super cool

586
00:22:51,580 --> 00:22:52,870
because those

587
00:22:52,870 --> 00:22:55,600
unused you know forsaken applications

588
00:22:55,600 --> 00:22:56,920
where the developers have all moved on

589
00:22:56,920 --> 00:22:58,780
are completely powerless in our

590
00:22:58,780 --> 00:23:01,180
environment after a quarter and that we

591
00:23:01,180 --> 00:23:13,630
feel D risks us a lot so with all that

592
00:23:13,630 --> 00:23:15,700
being said what do you think you want to

593
00:23:15,700 --> 00:23:17,050
jump in you want to buy some repo Kid

594
00:23:17,050 --> 00:23:19,930
figure out how this thing works well

595
00:23:19,930 --> 00:23:21,700
you're on a webcast and you can't really

596
00:23:21,700 --> 00:23:25,660
tell me now so I'm gonna go ahead so

597
00:23:25,660 --> 00:23:27,670
let's let's dive into specifically the

598
00:23:27,670 --> 00:23:29,980
mechanics of repo kid how it's doing the

599
00:23:29,980 --> 00:23:32,410
updates the data sources that it uses

600
00:23:32,410 --> 00:23:34,750
and all that stuff and in order to do

601
00:23:34,750 --> 00:23:36,070
that we need to jump in a little bit

602
00:23:36,070 --> 00:23:37,960
more back into the policy mechanics of I

603
00:23:37,960 --> 00:23:42,760
am so this is a very simple statement it

604
00:23:42,760 --> 00:23:46,330
allows the the role or the application

605
00:23:46,330 --> 00:23:49,080
to list the contents of example bucket

606
00:23:49,080 --> 00:23:52,540
and there's a few parts here that are

607
00:23:52,540 --> 00:23:56,920
important the the effect which is

608
00:23:56,920 --> 00:23:59,170
allowed there there are also deny base

609
00:23:59,170 --> 00:24:01,750
statements but in the case of Netflix to

610
00:24:01,750 --> 00:24:03,670
keep everything simple and to make it

611
00:24:03,670 --> 00:24:05,380
easy to understand what permissions are

612
00:24:05,380 --> 00:24:07,059
actually in scope or out of scope we

613
00:24:07,059 --> 00:24:09,270
just use allow statements in all times

614
00:24:09,270 --> 00:24:11,260
for the most part we have we have a few

615
00:24:11,260 --> 00:24:13,059
denies but those are not those are an

616
00:24:13,059 --> 00:24:15,690
exception rather than the normal case

617
00:24:15,690 --> 00:24:20,770
and then the action so this is there we

618
00:24:20,770 --> 00:24:24,190
go the action so this is s3 list bucket

619
00:24:24,190 --> 00:24:26,890
which is you know you can think of it in

620
00:24:26,890 --> 00:24:29,080
s3 object store like the ability to list

621
00:24:29,080 --> 00:24:30,790
a directory right like what's in the

622
00:24:30,790 --> 00:24:33,610
bucket what are in sub directories and

623
00:24:33,610 --> 00:24:35,980
stuff like that and then the specific

624
00:24:35,980 --> 00:24:38,559
resource that this is applying to so the

625
00:24:38,559 --> 00:24:43,420
example bucket and so repo kin is going

626
00:24:43,420 --> 00:24:46,900
to the the basic the basic daily flow of

627
00:24:46,900 --> 00:24:50,170
it is that it operates you know for us

628
00:24:50,170 --> 00:24:51,910
on a bunch of accounts but for each

629
00:24:51,910 --> 00:24:56,170
account it jumps in there and it lists

630
00:24:56,170 --> 00:24:59,020
all of the roles it key it maintains a

631
00:24:59,020 --> 00:25:01,300
data store which is all of the roles it

632
00:25:01,300 --> 00:25:02,980
knows about and their current state and

633
00:25:02,980 --> 00:25:05,500
so it'll first list all the roles see

634
00:25:05,500 --> 00:25:06,820
has anything changed with

635
00:25:06,820 --> 00:25:08,650
and then write all that back to its

636
00:25:08,650 --> 00:25:12,580
table and then on a daily basis it'll

637
00:25:12,580 --> 00:25:15,760
figure out what role what permissions

638
00:25:15,760 --> 00:25:17,530
are being actively exercised by this

639
00:25:17,530 --> 00:25:19,000
role and what permissions does it have

640
00:25:19,000 --> 00:25:21,400
and then it takes those two and combines

641
00:25:21,400 --> 00:25:23,560
them to do a diff and based on the diff

642
00:25:23,560 --> 00:25:26,470
like okay we have these 20 permissions

643
00:25:26,470 --> 00:25:29,110
but only these ten are being used so

644
00:25:29,110 --> 00:25:30,490
we're going to remove the other ten and

645
00:25:30,490 --> 00:25:33,640
then it stores the these are the

646
00:25:33,640 --> 00:25:35,080
permissions that can be removed in its

647
00:25:35,080 --> 00:25:38,620
table and then periodically which for us

648
00:25:38,620 --> 00:25:41,440
is once a week we go and we say schedule

649
00:25:41,440 --> 00:25:43,180
a repo which means we let developers

650
00:25:43,180 --> 00:25:45,430
know that unused permissions are going

651
00:25:45,430 --> 00:25:47,830
to be taken away and then a week after

652
00:25:47,830 --> 00:25:49,600
the repo schedule will actually go in

653
00:25:49,600 --> 00:25:53,560
repo so to do the first part which is

654
00:25:53,560 --> 00:25:56,050
the diff which permissions are being

655
00:25:56,050 --> 00:25:58,390
used that we can take are not being used

656
00:25:58,390 --> 00:26:00,310
we can take away we're gonna use three

657
00:26:00,310 --> 00:26:03,760
data sources the first one this really

658
00:26:03,760 --> 00:26:05,650
cute little aardvark in the in the

659
00:26:05,650 --> 00:26:09,010
Netflix sweater is our proxy for access

660
00:26:09,010 --> 00:26:11,080
advisor which is an Amazon service and

661
00:26:11,080 --> 00:26:14,950
it tells us which services so an

662
00:26:14,950 --> 00:26:17,500
application remember has permissions and

663
00:26:17,500 --> 00:26:18,760
the permissions give it access to

664
00:26:18,760 --> 00:26:24,430
services like s3 ec2 queues and access

665
00:26:24,430 --> 00:26:26,380
advisor is great and then it says on a

666
00:26:26,380 --> 00:26:28,600
service by service level for every

667
00:26:28,600 --> 00:26:31,000
application what's being used and what

668
00:26:31,000 --> 00:26:35,260
is not being used at all now when we

669
00:26:35,260 --> 00:26:37,870
created aardvark access advisor was only

670
00:26:37,870 --> 00:26:40,300
available in the UI but since then

671
00:26:40,300 --> 00:26:43,120
amazon has made it available via an API

672
00:26:43,120 --> 00:26:45,730
and the reason that we keep aardvark is

673
00:26:45,730 --> 00:26:47,890
because it's useful to have a cache of

674
00:26:47,890 --> 00:26:50,440
the data so repo can just for a little

675
00:26:50,440 --> 00:26:53,170
context repo can for some of our large

676
00:26:53,170 --> 00:26:55,960
accounts could take up to 45 minutes to

677
00:26:55,960 --> 00:26:58,030
run and we want to complete the entire

678
00:26:58,030 --> 00:27:00,670
repo period within the early part of our

679
00:27:00,670 --> 00:27:03,070
daily operation but we don't want repo

680
00:27:03,070 --> 00:27:05,470
kid making changes to roles after we all

681
00:27:05,470 --> 00:27:07,540
go home and so we want to keep the

682
00:27:07,540 --> 00:27:10,180
actual repo time window short and to do

683
00:27:10,180 --> 00:27:11,680
this we want to have all of the access

684
00:27:11,680 --> 00:27:13,300
advisor data and every other piece of

685
00:27:13,300 --> 00:27:16,000
data that we need ready to go and so

686
00:27:16,000 --> 00:27:17,590
that's what aardvark does for us it's

687
00:27:17,590 --> 00:27:19,600
basically just a queue of access advisor

688
00:27:19,600 --> 00:27:20,500
data

689
00:27:20,500 --> 00:27:22,120
I'm sorry it's a cache of access advisor

690
00:27:22,120 --> 00:27:26,680
data we also use cloud trails the cloud

691
00:27:26,680 --> 00:27:27,520
trail

692
00:27:27,520 --> 00:27:29,770
unlike access advisor which can only

693
00:27:29,770 --> 00:27:32,410
tell us on a service level either yes

694
00:27:32,410 --> 00:27:34,150
something is within the service is being

695
00:27:34,150 --> 00:27:36,310
used or no nothing of the service is

696
00:27:36,310 --> 00:27:38,440
being used cloud trail can give us

697
00:27:38,440 --> 00:27:41,080
specific actions that are being used but

698
00:27:41,080 --> 00:27:42,970
it doesn't work everywhere so there is

699
00:27:42,970 --> 00:27:49,300
there's some caveats some actions are

700
00:27:49,300 --> 00:27:51,130
not tracked at all in cloud trail so

701
00:27:51,130 --> 00:27:53,800
like even with them a service did there

702
00:27:53,800 --> 00:27:56,020
are just untracked actions and then data

703
00:27:56,020 --> 00:27:57,730
plane operations generally are not

704
00:27:57,730 --> 00:28:01,290
tracked as well so while we might have

705
00:28:01,290 --> 00:28:04,810
well we might have like s3 create bucket

706
00:28:04,810 --> 00:28:08,530
by default that'll show up and and s3

707
00:28:08,530 --> 00:28:11,860
reads will not so the create bucket is

708
00:28:11,860 --> 00:28:13,060
what's considered a control plane

709
00:28:13,060 --> 00:28:16,240
operation and s3 get object is a data

710
00:28:16,240 --> 00:28:19,030
plane operation and for s3 you can

711
00:28:19,030 --> 00:28:20,770
actually turn on cloud trail for data

712
00:28:20,770 --> 00:28:22,450
plate operations but for other services

713
00:28:22,450 --> 00:28:26,170
you cannot so we have no way to see for

714
00:28:26,170 --> 00:28:28,480
example in cloud trail when things are

715
00:28:28,480 --> 00:28:31,810
being read from a sqs queue so that's

716
00:28:31,810 --> 00:28:34,300
why it's useful to blend a few of these

717
00:28:34,300 --> 00:28:36,250
data sources together is because access

718
00:28:36,250 --> 00:28:38,590
advisor and aardvark can tell us part of

719
00:28:38,590 --> 00:28:40,690
the story and cloud trail can tell us a

720
00:28:40,690 --> 00:28:43,240
different part of the story and finally

721
00:28:43,240 --> 00:28:45,550
another data source that we have is is

722
00:28:45,550 --> 00:28:48,010
in our case s3 server access logs but

723
00:28:48,010 --> 00:28:50,740
you can get the same thing with s3 cloud

724
00:28:50,740 --> 00:28:53,710
trail and basically this is this gives

725
00:28:53,710 --> 00:28:56,230
us the data plane visibility for

726
00:28:56,230 --> 00:29:03,550
specifically for the s3 service so we're

727
00:29:03,550 --> 00:29:06,190
gonna take these three data sources and

728
00:29:06,190 --> 00:29:08,980
we're going to show how repo kid would

729
00:29:08,980 --> 00:29:11,800
make changes based on what on on what

730
00:29:11,800 --> 00:29:14,050
they say to a slightly more complicated

731
00:29:14,050 --> 00:29:17,890
policy than the one we saw before so

732
00:29:17,890 --> 00:29:19,480
we've got this policy and it's got its

733
00:29:19,480 --> 00:29:22,180
got some ec2 which is Amazon's compute

734
00:29:22,180 --> 00:29:24,550
service it's got some s3 actions and

735
00:29:24,550 --> 00:29:27,490
it's got some sqs and some Q actions and

736
00:29:27,490 --> 00:29:30,730
first up we can query access advisor and

737
00:29:30,730 --> 00:29:33,340
see that the application is not actually

738
00:29:33,340 --> 00:29:34,300
using any of the

739
00:29:34,300 --> 00:29:36,160
to stuff at all so we can just

740
00:29:36,160 --> 00:29:38,470
completely get rid of this entire Q

741
00:29:38,470 --> 00:29:41,440
block which is pretty cool

742
00:29:41,440 --> 00:29:42,640
we've already dropped our permissions

743
00:29:42,640 --> 00:29:45,400
down significantly and then next up we

744
00:29:45,400 --> 00:29:49,710
can use cloud trail to determine that

745
00:29:49,710 --> 00:29:53,830
excuse me we can use cloud trails to

746
00:29:53,830 --> 00:29:56,650
determine that some of the ec2 actions

747
00:29:56,650 --> 00:29:58,630
specifically the ability to create a

748
00:29:58,630 --> 00:30:01,210
volume is not being used and so we can

749
00:30:01,210 --> 00:30:06,130
remove that as well and finally we can

750
00:30:06,130 --> 00:30:09,130
use our s3 server access logs or s3

751
00:30:09,130 --> 00:30:11,520
cloud trail whichever and determine that

752
00:30:11,520 --> 00:30:14,140
the application is not actually using

753
00:30:14,140 --> 00:30:17,080
all s3 buckets of course it's just using

754
00:30:17,080 --> 00:30:19,270
maybe one or two in this case it's using

755
00:30:19,270 --> 00:30:22,930
the bucket name my bucket name bucket so

756
00:30:22,930 --> 00:30:25,240
by combining these three data feeds

757
00:30:25,240 --> 00:30:26,530
together we can actually trim this

758
00:30:26,530 --> 00:30:29,230
policy significantly beyond what any

759
00:30:29,230 --> 00:30:30,880
individual data feed would allow us to

760
00:30:30,880 --> 00:30:35,590
do so in Netflix the the way it is this

761
00:30:35,590 --> 00:30:37,600
is working we've got this tool repo kid

762
00:30:37,600 --> 00:30:40,150
it's updating the data it's using these

763
00:30:40,150 --> 00:30:42,160
three data feeds and then applying back

764
00:30:42,160 --> 00:30:44,680
what it thinks roles could keep and

765
00:30:44,680 --> 00:30:47,950
remove and we update we use repo kit and

766
00:30:47,950 --> 00:30:49,810
we update this data every single day and

767
00:30:49,810 --> 00:30:52,500
we run it across all of our accounts and

768
00:30:52,500 --> 00:30:55,930
then we have the accounts all of our

769
00:30:55,930 --> 00:30:59,200
accounts split into two groups and their

770
00:30:59,200 --> 00:31:00,940
I think they're actually internally just

771
00:31:00,940 --> 00:31:01,900
called a and B and it doesn't really

772
00:31:01,900 --> 00:31:03,580
matter like what they are we just don't

773
00:31:03,580 --> 00:31:05,710
want to do you for a given stack we

774
00:31:05,710 --> 00:31:07,240
don't want to do the test and prod at

775
00:31:07,240 --> 00:31:10,930
the same time and so we have if we have

776
00:31:10,930 --> 00:31:13,270
like our main tests and main prod main

777
00:31:13,270 --> 00:31:15,310
tests will be an A and main prod will be

778
00:31:15,310 --> 00:31:19,840
in B and then for our actual repoing and

779
00:31:19,840 --> 00:31:21,190
scheduling we run on a tick-tock

780
00:31:21,190 --> 00:31:24,760
schedule so maybe the you know on

781
00:31:24,760 --> 00:31:27,550
Tuesday the first week of the month

782
00:31:27,550 --> 00:31:30,490
we're going to schedule a and repo B and

783
00:31:30,490 --> 00:31:34,000
then Tuesday the next week we'll do the

784
00:31:34,000 --> 00:31:36,100
opposite of that well schedule the one

785
00:31:36,100 --> 00:31:37,510
that we just repoed and will reap other

786
00:31:37,510 --> 00:31:40,660
when we just schedule now scheduling

787
00:31:40,660 --> 00:31:43,420
involves some hooks and hooks in my

788
00:31:43,420 --> 00:31:44,860
opinion are one of the coolest parts of

789
00:31:44,860 --> 00:31:47,170
repo kid they be we have an upstream

790
00:31:47,170 --> 00:31:48,070
open source

791
00:31:48,070 --> 00:31:50,529
but some of the business logic the repo

792
00:31:50,529 --> 00:31:52,389
kids using is going to be a little

793
00:31:52,389 --> 00:31:56,529
specific to organizations such as how do

794
00:31:56,529 --> 00:31:59,109
we notify application owners and Netflix

795
00:31:59,109 --> 00:32:01,359
this is all internal software tools that

796
00:32:01,359 --> 00:32:04,659
we have API is that we can call to find

797
00:32:04,659 --> 00:32:07,960
out who owns this role like what what

798
00:32:07,960 --> 00:32:09,970
application does the role map to you and

799
00:32:09,970 --> 00:32:13,299
then what team owns that application and

800
00:32:13,299 --> 00:32:15,460
then just send them an email and let

801
00:32:15,460 --> 00:32:17,830
them know what's happening so we have a

802
00:32:17,830 --> 00:32:19,239
hook that we've written that does all

803
00:32:19,239 --> 00:32:21,820
this and if you want to use repo kid and

804
00:32:21,820 --> 00:32:24,070
you want out like for example notify

805
00:32:24,070 --> 00:32:25,779
application owners or you want to use

806
00:32:25,779 --> 00:32:27,970
your own data feed you can do all of

807
00:32:27,970 --> 00:32:31,809
that via a hook and then anytime repo

808
00:32:31,809 --> 00:32:33,639
kid makes changes it calls yet another

809
00:32:33,639 --> 00:32:35,950
hook that posts a message to our

810
00:32:35,950 --> 00:32:37,779
internal system and basically says hey

811
00:32:37,779 --> 00:32:39,369
something has changed with this

812
00:32:39,369 --> 00:32:44,080
environment that's how we do it in

813
00:32:44,080 --> 00:32:47,639
Netflix I would very much love for

814
00:32:47,639 --> 00:32:49,960
everybody on this webcast and all your

815
00:32:49,960 --> 00:32:51,849
friends and everybody to be using repo

816
00:32:51,849 --> 00:32:53,889
kit as well in fact if you want to use

817
00:32:53,889 --> 00:32:56,590
it please we have a Gitter Channel I'm

818
00:32:56,590 --> 00:32:58,629
very happy to get you started if you

819
00:32:58,629 --> 00:32:59,830
have any questions about it but

820
00:32:59,830 --> 00:33:01,840
basically what you're gonna want to do

821
00:33:01,840 --> 00:33:03,700
is download and install aardvark and

822
00:33:03,700 --> 00:33:09,309
repo kin update the data for your

823
00:33:09,309 --> 00:33:11,229
environment for both of those tools and

824
00:33:11,229 --> 00:33:13,539
then and then just run through a repo

825
00:33:13,539 --> 00:33:15,009
kit see like what is it telling you

826
00:33:15,009 --> 00:33:15,909
about your environment

827
00:33:15,909 --> 00:33:17,889
do you have roles that are not used at

828
00:33:17,889 --> 00:33:20,109
all that it can repo to zero do you have

829
00:33:20,109 --> 00:33:22,840
some over privileged roles you can run

830
00:33:22,840 --> 00:33:24,639
it in a non commit mode so if you want

831
00:33:24,639 --> 00:33:26,019
to just see what it's gonna do you just

832
00:33:26,019 --> 00:33:28,299
run a repo role give it the name of your

833
00:33:28,299 --> 00:33:30,399
role and just don't pass the commit flag

834
00:33:30,399 --> 00:33:32,200
and it'll actually tell you the changes

835
00:33:32,200 --> 00:33:34,809
that it'll make ahead of time and then

836
00:33:34,809 --> 00:33:37,629
you're probably going to need to write

837
00:33:37,629 --> 00:33:39,279
your own automation Runner so if you

838
00:33:39,279 --> 00:33:41,049
have more than one account you're gonna

839
00:33:41,049 --> 00:33:42,549
want to set up like a cron thing that

840
00:33:42,549 --> 00:33:44,109
loops through all your accounts and runs

841
00:33:44,109 --> 00:33:45,789
on a periodic schedule whatever makes

842
00:33:45,789 --> 00:33:48,639
sense for you in any hooks that you have

843
00:33:48,639 --> 00:33:51,159
for your environment so for example the

844
00:33:51,159 --> 00:33:52,479
cloud trail part that I talked about

845
00:33:52,479 --> 00:33:55,179
earlier we use elasticsearch and the

846
00:33:55,179 --> 00:33:57,999
hook for getting that data is something

847
00:33:57,999 --> 00:33:59,590
that makes sense for our elasticsearch

848
00:33:59,590 --> 00:34:01,599
cluster and doesn't make sense for the

849
00:34:01,599 --> 00:34:01,870
commute

850
00:34:01,870 --> 00:34:04,210
so you would probably want to write

851
00:34:04,210 --> 00:34:07,059
whatever hook that you need for your to

852
00:34:07,059 --> 00:34:09,760
get cloud trail in your environment and

853
00:34:09,760 --> 00:34:13,810
please of course submit PRS for example

854
00:34:13,810 --> 00:34:15,520
if you run through the update process

855
00:34:15,520 --> 00:34:17,770
and decide that something's not clear or

856
00:34:17,770 --> 00:34:20,949
one of the flags is not useful or is

857
00:34:20,949 --> 00:34:23,379
unclear how to use it or you're confused

858
00:34:23,379 --> 00:34:25,060
about getting started and you actually

859
00:34:25,060 --> 00:34:26,530
do get unblocked and you figure out how

860
00:34:26,530 --> 00:34:28,239
to do it please update the documentation

861
00:34:28,239 --> 00:34:30,010
we love stuff like that we want to make

862
00:34:30,010 --> 00:34:31,480
it really easy for everybody to get

863
00:34:31,480 --> 00:34:36,250
involved in this project and there are a

864
00:34:36,250 --> 00:34:38,080
few things that that people have been

865
00:34:38,080 --> 00:34:39,399
asking for that I would love some help

866
00:34:39,399 --> 00:34:42,879
on so at netflix we use in-line policies

867
00:34:42,879 --> 00:34:45,340
for everything and I understand that

868
00:34:45,340 --> 00:34:47,199
this is not this is not what every but

869
00:34:47,199 --> 00:34:49,000
you know Amazon's a big complicated

870
00:34:49,000 --> 00:34:50,460
beast people are doing different things

871
00:34:50,460 --> 00:34:52,719
everybody's kind of cut permissions and

872
00:34:52,719 --> 00:34:55,750
policies their own way so manage

873
00:34:55,750 --> 00:34:57,610
policies is something that I know a lot

874
00:34:57,610 --> 00:34:59,350
of people are using and I would love for

875
00:34:59,350 --> 00:35:02,320
somebody to contribute this this and a

876
00:35:02,320 --> 00:35:03,760
repo kid I'm happy to help with the

877
00:35:03,760 --> 00:35:05,140
architecture or to point you in the

878
00:35:05,140 --> 00:35:07,180
right direction I know a few people have

879
00:35:07,180 --> 00:35:08,590
already expressed interest in doing this

880
00:35:08,590 --> 00:35:10,450
so if you are interested happen to our

881
00:35:10,450 --> 00:35:12,640
Gitter channel tell them that you want

882
00:35:12,640 --> 00:35:14,260
to do this and I'm sure you'll have some

883
00:35:14,260 --> 00:35:16,930
great people to work with um I think an

884
00:35:16,930 --> 00:35:19,060
upstream plugin for cloud trail makes a

885
00:35:19,060 --> 00:35:20,830
lot of sense this would probably be

886
00:35:20,830 --> 00:35:23,560
Athena which is a you know a tool the

887
00:35:23,560 --> 00:35:25,690
Amazon provides to query data from s3

888
00:35:25,690 --> 00:35:28,510
buckets so you could just query the s3

889
00:35:28,510 --> 00:35:30,040
bucket where cloud trail logs are

890
00:35:30,040 --> 00:35:32,020
delivered and I think it probably makes

891
00:35:32,020 --> 00:35:34,150
sense to put this in aardvark again if

892
00:35:34,150 --> 00:35:35,320
this is something you're interested in

893
00:35:35,320 --> 00:35:37,000
please let me know I'm happy to get you

894
00:35:37,000 --> 00:35:38,020
started pointing in the right direction

895
00:35:38,020 --> 00:35:41,140
and better testing coverage you know

896
00:35:41,140 --> 00:35:43,090
right now we've got maybe 60% I think we

897
00:35:43,090 --> 00:35:45,370
can do better so if you're interested in

898
00:35:45,370 --> 00:35:46,420
the project and you want to just

899
00:35:46,420 --> 00:35:48,190
understand how it works better I think

900
00:35:48,190 --> 00:35:49,540
test coverage would be a great way to

901
00:35:49,540 --> 00:35:53,380
start and with that I want to thank you

902
00:35:53,380 --> 00:35:55,360
all so much for attending the webcast

903
00:35:55,360 --> 00:35:56,920
and I will open it up for any questions

904
00:35:56,920 --> 00:36:00,760
that you might have awesome thank you so

905
00:36:00,760 --> 00:36:04,510
so much Travis it seems that not too

906
00:36:04,510 --> 00:36:05,470
many questions have come in today

907
00:36:05,470 --> 00:36:07,450
probably a lot of process and I like

908
00:36:07,450 --> 00:36:10,720
that of the quarter to get started so we

909
00:36:10,720 --> 00:36:12,490
can also direct those questions to you

910
00:36:12,490 --> 00:36:14,170
as they come in a bit later but again

911
00:36:14,170 --> 00:36:15,369
thank you so so much

912
00:36:15,369 --> 00:36:16,809
we're getting involved lever the next

913
00:36:16,809 --> 00:36:19,119
ethnic references to show you something

914
00:36:19,119 --> 00:36:20,710
really looking forward to the crown

915
00:36:20,710 --> 00:36:23,700
coming out so that's perfect thank you

916
00:36:23,700 --> 00:36:25,779
but it can thank you so much hopefully

917
00:36:25,779 --> 00:36:27,759
you're not and not the last time we have

918
00:36:27,759 --> 00:36:31,539
you on one of our live sessions and for

919
00:36:31,539 --> 00:36:34,089
anyone who enjoyed the session please

920
00:36:34,089 --> 00:36:36,190
remember that we put it all on the

921
00:36:36,190 --> 00:36:38,200
websites afterwards you can rewatch

922
00:36:38,200 --> 00:36:41,950
share and show colleagues friends

923
00:36:41,950 --> 00:36:44,680
anything like that for me secure

924
00:36:44,680 --> 00:36:47,470
developer.com and we also run sessions

925
00:36:47,470 --> 00:36:49,329
every two weeks so our next session will

926
00:36:49,329 --> 00:36:51,490
be on the 24th of October and we're

927
00:36:51,490 --> 00:36:54,749
talking about modern epic gotchas with

928
00:36:54,749 --> 00:36:57,190
Heisler and he's the founder and hence

929
00:36:57,190 --> 00:36:58,450
to you so it should be really really

930
00:36:58,450 --> 00:37:00,279
good so if you enjoy that it must get

931
00:37:00,279 --> 00:37:01,990
the ticket some websites but other than

932
00:37:01,990 --> 00:37:04,359
that as I said please and share get

933
00:37:04,359 --> 00:37:07,690
involved ask questions someone is typing

934
00:37:07,690 --> 00:37:09,549
so there might be questions coming

935
00:37:09,549 --> 00:37:10,749
you'll give him a second

936
00:37:10,749 --> 00:37:15,700
but if not we will see everyone saying

937
00:37:15,700 --> 00:37:18,910
thank you so much we will see you all

938
00:37:18,910 --> 00:37:20,619
again soon so again thank you so much

939
00:37:20,619 --> 00:37:26,309
everyone and thank you for having me

