1
00:00:04,520 --> 00:00:07,140
alright hello everyone and welcome to my

2
00:00:07,140 --> 00:00:08,700
dev psych ops an inclusive community

3
00:00:08,700 --> 00:00:11,130
that educates and enables developers

4
00:00:11,130 --> 00:00:13,320
application security coming up we'll be

5
00:00:13,320 --> 00:00:15,480
joined by a car crash Grove hey Garrett

6
00:00:15,480 --> 00:00:16,289
how's it going

7
00:00:16,289 --> 00:00:19,560
hey good thanks awesome thank you for

8
00:00:19,560 --> 00:00:21,150
joining us your it will be speaking

9
00:00:21,150 --> 00:00:23,720
about the pros of configuration security

10
00:00:23,720 --> 00:00:26,490
short introduction figure it before he

11
00:00:26,490 --> 00:00:29,699
does its own basically Garrett is a

12
00:00:29,699 --> 00:00:31,859
director of product that sneaked he has

13
00:00:31,859 --> 00:00:32,940
previously worked for the UK government

14
00:00:32,940 --> 00:00:35,910
puppet and docker and I don't know when

15
00:00:35,910 --> 00:00:37,380
he when he finds the time but when he

16
00:00:37,380 --> 00:00:39,239
does he also runs the DevOps weekly

17
00:00:39,239 --> 00:00:42,450
newsletter so but before we dive into

18
00:00:42,450 --> 00:00:44,940
all of this just a quick intro on myself

19
00:00:44,940 --> 00:00:46,260
my name is Raquel I'm a developer

20
00:00:46,260 --> 00:00:49,890
advocate at snick we'd love to hear any

21
00:00:49,890 --> 00:00:52,230
feedback you have so up until we

22
00:00:52,230 --> 00:00:53,309
continue to improve so if you have

23
00:00:53,309 --> 00:00:54,899
anything just shoot us on Twitter or

24
00:00:54,899 --> 00:00:58,199
search the my dev psych ops channel on a

25
00:00:58,199 --> 00:01:01,710
group the group itself is actually the

26
00:01:01,710 --> 00:01:03,379
best place to contact us if you have any

27
00:01:03,379 --> 00:01:05,580
speakers you want to reach out to or

28
00:01:05,580 --> 00:01:07,409
just ask questions we're all there to

29
00:01:07,409 --> 00:01:09,299
kind of like learn from each other so go

30
00:01:09,299 --> 00:01:11,310
ahead and also join us on the live

31
00:01:11,310 --> 00:01:13,229
sessions channel so you can ask some

32
00:01:13,229 --> 00:01:17,189
questions at the end of it if you

33
00:01:17,189 --> 00:01:19,140
listening that is after the live session

34
00:01:19,140 --> 00:01:20,490
so this is a recording but you can still

35
00:01:20,490 --> 00:01:22,830
go on the slack channel and reach out

36
00:01:22,830 --> 00:01:25,830
once the session is over you can rewatch

37
00:01:25,830 --> 00:01:28,049
it you know and share it with friends my

38
00:01:28,049 --> 00:01:30,030
dev sir cops is brought to you by stick

39
00:01:30,030 --> 00:01:31,350
or aim is to create a vendor neutral

40
00:01:31,350 --> 00:01:33,540
space to share knowledge and best

41
00:01:33,540 --> 00:01:35,210
practices related to software security

42
00:01:35,210 --> 00:01:38,460
so that's enough with me and all the

43
00:01:38,460 --> 00:01:41,189
heading up without further ado I'm going

44
00:01:41,189 --> 00:01:44,100
to move it over to Garrett to welcome

45
00:01:44,100 --> 00:01:47,340
you to this session well thanks a lot

46
00:01:47,340 --> 00:01:51,509
Lauren so I'm gonna talk about the

47
00:01:51,509 --> 00:01:53,939
perils of configuration security

48
00:01:53,939 --> 00:01:55,500
who doesn't like a slightly over the

49
00:01:55,500 --> 00:01:59,100
word title and so as Larry mentioned I'm

50
00:01:59,100 --> 00:02:02,520
garish Grove based I've Cambridge in the

51
00:02:02,520 --> 00:02:06,180
UK and I work with Lauren and sneak I

52
00:02:06,180 --> 00:02:08,220
also know I think Polly

53
00:02:08,220 --> 00:02:09,360
some of the things I'm talking about are

54
00:02:09,360 --> 00:02:12,230
things I knew further afield as well um

55
00:02:12,230 --> 00:02:13,819
so I've been involved

56
00:02:13,819 --> 00:02:16,879
in the DevOps community from just around

57
00:02:16,879 --> 00:02:19,459
the coining of the term just a little

58
00:02:19,459 --> 00:02:21,680
bastards and I run the DevOps weekly

59
00:02:21,680 --> 00:02:22,670
newsletter

60
00:02:22,670 --> 00:02:24,920
I'm also actively involved in a bunch of

61
00:02:24,920 --> 00:02:26,870
open source projects probably most

62
00:02:26,870 --> 00:02:28,489
recently open policy agent which I'm

63
00:02:28,489 --> 00:02:32,120
going to talk about a little bit so what

64
00:02:32,120 --> 00:02:34,609
can you expect from this talk and I'm

65
00:02:34,609 --> 00:02:36,799
gonna do a bit a little bit of an

66
00:02:36,799 --> 00:02:38,720
introduction to configuration security

67
00:02:38,720 --> 00:02:41,450
it's not necessarily two words you often

68
00:02:41,450 --> 00:02:44,090
find together even if they're two words

69
00:02:44,090 --> 00:02:47,060
you probably use a lot individually I

70
00:02:47,060 --> 00:02:48,590
think bringing them together is so

71
00:02:48,590 --> 00:02:51,170
interesting I'm gonna touch very briefly

72
00:02:51,170 --> 00:02:54,040
and hopefully without causing any

73
00:02:54,040 --> 00:02:56,569
religious fighting about on static

74
00:02:56,569 --> 00:02:58,790
analysis and always get some people

75
00:02:58,790 --> 00:03:02,209
interested and others angry I'm gonna

76
00:03:02,209 --> 00:03:05,540
bring two examples really in this sort

77
00:03:05,540 --> 00:03:07,489
of conversation around configuration and

78
00:03:07,489 --> 00:03:09,620
specifically talking about kubernetes

79
00:03:09,620 --> 00:03:12,280
and also then talking about terraform

80
00:03:12,280 --> 00:03:15,739
we'll look at the sort of what sort of

81
00:03:15,739 --> 00:03:18,560
security problems you see in them from a

82
00:03:18,560 --> 00:03:20,780
configuration perspective we'll also

83
00:03:20,780 --> 00:03:23,030
look at a few tools and mainly from the

84
00:03:23,030 --> 00:03:24,799
open source community around like

85
00:03:24,799 --> 00:03:26,840
helping you address them and then we'll

86
00:03:26,840 --> 00:03:28,340
sort of wrap up with probably a few

87
00:03:28,340 --> 00:03:30,949
other broad points and see where we go

88
00:03:30,949 --> 00:03:33,019
from there and all been well we should

89
00:03:33,019 --> 00:03:34,220
have some time for questions as well so

90
00:03:34,220 --> 00:03:36,590
if you've got any questions do leave

91
00:03:36,590 --> 00:03:38,540
them on Channel learn and ask them or

92
00:03:38,540 --> 00:03:40,310
we'll head over to the slack Channel

93
00:03:40,310 --> 00:03:47,020
afterwards ok so I configure

94
00:03:47,020 --> 00:03:52,180
security and starting out without the

95
00:03:52,180 --> 00:03:53,800
security side and just talking about

96
00:03:53,800 --> 00:03:56,020
configuration and I guess one of the

97
00:03:56,020 --> 00:03:57,370
things we've definitely been seeing over

98
00:03:57,370 --> 00:04:01,270
the past maybe sort of five six seven

99
00:04:01,270 --> 00:04:03,670
eight years I'm I guess really is this

100
00:04:03,670 --> 00:04:06,280
move towards infrastructure as code and

101
00:04:06,280 --> 00:04:08,190
it predates that I mean like with

102
00:04:08,190 --> 00:04:12,010
cfengine with puppet with chef and who

103
00:04:12,010 --> 00:04:13,990
is I guess this is becoming a lot more

104
00:04:13,990 --> 00:04:17,920
than norm now so whether it's you're all

105
00:04:17,920 --> 00:04:19,750
in on kubernetes and you're writing a

106
00:04:19,750 --> 00:04:21,730
lot of kubernetes config files and

107
00:04:21,730 --> 00:04:24,610
you're writing too much ammo or whether

108
00:04:24,610 --> 00:04:26,410
you're actually all in on civilus

109
00:04:26,410 --> 00:04:28,960
framework and writing llamo or whether

110
00:04:28,960 --> 00:04:33,790
you're using ansible and llamo and go

111
00:04:33,790 --> 00:04:35,920
can you really write too much yellow or

112
00:04:35,920 --> 00:04:37,450
is it right

113
00:04:37,450 --> 00:04:41,290
I definitely feel you can I at least by

114
00:04:41,290 --> 00:04:44,400
hand I'm much more of a fan of

115
00:04:44,400 --> 00:04:46,810
generating your llamo from higher-level

116
00:04:46,810 --> 00:04:53,380
languages go mad yeah I'm terraform at

117
00:04:53,380 --> 00:04:55,990
not yeah more HCl it's fantastic we'll

118
00:04:55,990 --> 00:04:57,550
talk about terraform in a bit both way

119
00:04:57,550 --> 00:04:59,260
there's all these this explosion of

120
00:04:59,260 --> 00:05:01,960
tooling around helping you describe your

121
00:05:01,960 --> 00:05:06,190
infrastructure in code and I made love

122
00:05:06,190 --> 00:05:07,840
all the elmo jokes before but it's not

123
00:05:07,840 --> 00:05:10,360
just me honest even Brian controls would

124
00:05:10,360 --> 00:05:15,910
agree ultimately it's everywhere and

125
00:05:15,910 --> 00:05:18,990
we're increasingly seeing configuration

126
00:05:18,990 --> 00:05:22,390
being written by developers in source

127
00:05:22,390 --> 00:05:24,520
control repositories so if you look at

128
00:05:24,520 --> 00:05:27,160
even just publicly on github at the

129
00:05:27,160 --> 00:05:29,919
moment there are more than 2 million

130
00:05:29,919 --> 00:05:32,830
sort of kubernetes shaped config files

131
00:05:32,830 --> 00:05:36,220
and there are like millions of Dokka

132
00:05:36,220 --> 00:05:38,800
files and hundreds and hundreds of

133
00:05:38,800 --> 00:05:40,750
thousands of compose files and terraform

134
00:05:40,750 --> 00:05:44,290
files and remember this is public this

135
00:05:44,290 --> 00:05:45,940
is not most of the time when you're

136
00:05:45,940 --> 00:05:47,890
describing your infrastructure you're

137
00:05:47,890 --> 00:05:49,419
not doing it in public you're doing it

138
00:05:49,419 --> 00:05:51,160
in private it's your private

139
00:05:51,160 --> 00:05:53,500
infrastructure and but this is our

140
00:05:53,500 --> 00:05:55,260
public so this is the tip of an iceberg

141
00:05:55,260 --> 00:05:57,850
when ultimately the amount of code were

142
00:05:57,850 --> 00:05:59,860
writing to generate our infrastructure

143
00:05:59,860 --> 00:06:01,000
manage our own structure

144
00:06:01,000 --> 00:06:05,280
one of your applications is increasing

145
00:06:05,280 --> 00:06:09,040
the downside unfortunately of this is

146
00:06:09,040 --> 00:06:12,700
that this poses a risk ultimately this

147
00:06:12,700 --> 00:06:15,340
is a new risk it's not that because

148
00:06:15,340 --> 00:06:16,990
we're writing our configuration in code

149
00:06:16,990 --> 00:06:19,780
we have potential security problems the

150
00:06:19,780 --> 00:06:21,610
problems were there in us our systems as

151
00:06:21,610 --> 00:06:23,590
they were configured before they were

152
00:06:23,590 --> 00:06:26,500
often magically invisible and because we

153
00:06:26,500 --> 00:06:28,570
configured them via pressing buttons in

154
00:06:28,570 --> 00:06:31,930
web forms or we put on like on thin

155
00:06:31,930 --> 00:06:34,120
clients the configuration actually was

156
00:06:34,120 --> 00:06:38,530
only on the hosts on the machines and so

157
00:06:38,530 --> 00:06:39,820
this is actually a good thing but it

158
00:06:39,820 --> 00:06:40,990
doesn't mean there's not security

159
00:06:40,990 --> 00:06:42,550
problems in the code we're writing to

160
00:06:42,550 --> 00:06:45,220
configure our infrastructure and so a

161
00:06:45,220 --> 00:06:47,730
good example of this was the Capital One

162
00:06:47,730 --> 00:06:50,770
recent breach and they said well but

163
00:06:50,770 --> 00:06:51,720
yeah this is a configuration

164
00:06:51,720 --> 00:06:54,940
vulnerability and again I think adding

165
00:06:54,940 --> 00:06:56,950
those two words together is was really

166
00:06:56,950 --> 00:06:59,620
interesting I'm a conflict geek and a

167
00:06:59,620 --> 00:07:02,260
security geek and the idea of a

168
00:07:02,260 --> 00:07:03,790
configuration vulnerability is

169
00:07:03,790 --> 00:07:04,900
definitely something I think that

170
00:07:04,900 --> 00:07:07,720
resonates with me now it's nice to have

171
00:07:07,720 --> 00:07:12,270
language around problems I rapid7

172
00:07:12,270 --> 00:07:15,190
another sort of security vendor does a

173
00:07:15,190 --> 00:07:17,560
lot of work with penetration testing

174
00:07:17,560 --> 00:07:19,780
with customers and they say though in

175
00:07:19,780 --> 00:07:24,030
this this stat we're sort of like 96% of

176
00:07:24,030 --> 00:07:27,430
the work they do they detect some

177
00:07:27,430 --> 00:07:29,350
misconfigurations resulting in a scale

178
00:07:29,350 --> 00:07:30,610
that could result in a security problem

179
00:07:30,610 --> 00:07:33,820
like so basically most secure most

180
00:07:33,820 --> 00:07:37,120
configuration these insecure again

181
00:07:37,120 --> 00:07:39,400
whether it's that insecure or whether

182
00:07:39,400 --> 00:07:41,229
it's higher actually or whether it's a

183
00:07:41,229 --> 00:07:45,010
bit lower and this feels plausible and

184
00:07:45,010 --> 00:07:48,520
feels right based on my experience and a

185
00:07:48,520 --> 00:07:49,960
recent report that's definitely worth

186
00:07:49,960 --> 00:07:53,169
reading from the NSA actually stated

187
00:07:53,169 --> 00:07:54,970
that like wow cloud service providers

188
00:07:54,970 --> 00:07:56,470
often provide tools to help manage

189
00:07:56,470 --> 00:07:59,770
configuration misconfigurations of power

190
00:07:59,770 --> 00:08:01,540
resources remain the most prevalent

191
00:08:01,540 --> 00:08:05,110
cloud vulnerability and I need the idea

192
00:08:05,110 --> 00:08:08,520
that the cloud is is a security risk

193
00:08:08,520 --> 00:08:10,740
actually for the most part isn't true

194
00:08:10,740 --> 00:08:13,630
until people start using it and they're

195
00:08:13,630 --> 00:08:14,889
people using it

196
00:08:14,889 --> 00:08:17,020
introduced those problems and that's

197
00:08:17,020 --> 00:08:18,699
actually pretty much what happens with

198
00:08:18,699 --> 00:08:23,699
most software the cloud is no exception

199
00:08:23,699 --> 00:08:27,009
so and if we're seeing a lot of

200
00:08:27,009 --> 00:08:30,069
configuration ultimately shift to that

201
00:08:30,069 --> 00:08:32,380
bearding code and that actually doesn't

202
00:08:32,380 --> 00:08:34,419
mean it's in source control systems it's

203
00:08:34,419 --> 00:08:36,370
often been written by developers or

204
00:08:36,370 --> 00:08:38,799
develop people who are close to

205
00:08:38,799 --> 00:08:40,299
developers yeah

206
00:08:40,299 --> 00:08:42,849
and that that configuration can result

207
00:08:42,849 --> 00:08:46,320
in a sort of a type of security issue

208
00:08:46,320 --> 00:08:50,230
what can we do about it well one of the

209
00:08:50,230 --> 00:08:51,880
areas I think that's interesting is is

210
00:08:51,880 --> 00:08:56,079
good old static analysis so quick

211
00:08:56,079 --> 00:08:57,820
definition really stuffing analysis is

212
00:08:57,820 --> 00:09:00,430
defined hours like a static program

213
00:09:00,430 --> 00:09:02,019
analysis is the analysis of a computer

214
00:09:02,019 --> 00:09:03,070
software that is performed without

215
00:09:03,070 --> 00:09:06,310
actually executing the program the

216
00:09:06,310 --> 00:09:08,470
upside here with regards to

217
00:09:08,470 --> 00:09:11,850
configuration in particular is that

218
00:09:11,850 --> 00:09:14,140
executing that program might result in

219
00:09:14,140 --> 00:09:17,050
you firing up expensive infrastructure

220
00:09:17,050 --> 00:09:20,290
and also that could like provisioning

221
00:09:20,290 --> 00:09:21,970
virtual machines even launching

222
00:09:21,970 --> 00:09:25,000
containers at scale and whether that's

223
00:09:25,000 --> 00:09:27,220
fire a service interface or something

224
00:09:27,220 --> 00:09:29,380
else provisioning a database whatever it

225
00:09:29,380 --> 00:09:31,769
might be can still be time consuming and

226
00:09:31,769 --> 00:09:35,470
so having the sort of time and cost

227
00:09:35,470 --> 00:09:37,660
complexity static analysis houses

228
00:09:37,660 --> 00:09:40,570
benefits have these detractors and often

229
00:09:40,570 --> 00:09:42,910
down to sort of a I guess a false

230
00:09:42,910 --> 00:09:47,050
positive and false negative issue there

231
00:09:47,050 --> 00:09:48,519
are some reasons why that's less of a

232
00:09:48,519 --> 00:09:49,899
problem in configuration I'll come back

233
00:09:49,899 --> 00:09:51,310
to you

234
00:09:51,310 --> 00:09:54,620
so I guess I often if you're writing an

235
00:09:54,620 --> 00:09:56,690
application you might have acceptance

236
00:09:56,690 --> 00:09:58,700
tests and integration tests and you test

237
00:09:58,700 --> 00:10:01,250
again some of these words end up being

238
00:10:01,250 --> 00:10:02,960
used differently in different language

239
00:10:02,960 --> 00:10:04,790
ecosystems or in different companies or

240
00:10:04,790 --> 00:10:06,980
organizations or frameworks but broadly

241
00:10:06,980 --> 00:10:08,960
speaking like there's often this

242
00:10:08,960 --> 00:10:11,180
progression and stuffing analysis is

243
00:10:11,180 --> 00:10:14,090
often used first and especially where

244
00:10:14,090 --> 00:10:16,280
it's done right in the senses it can be

245
00:10:16,280 --> 00:10:19,250
really fast and this is not always true

246
00:10:19,250 --> 00:10:23,210
of all program languages ultimately some

247
00:10:23,210 --> 00:10:24,680
languages are actually really fast

248
00:10:24,680 --> 00:10:27,650
executing but analyzing them because of

249
00:10:27,650 --> 00:10:28,910
their inherent complexity is actually

250
00:10:28,910 --> 00:10:31,300
really computationally expensive

251
00:10:31,300 --> 00:10:33,350
sometimes if you're trying to do it in

252
00:10:33,350 --> 00:10:35,900
the same language you end up with paying

253
00:10:35,900 --> 00:10:38,570
that panel that saman spend on twice so

254
00:10:38,570 --> 00:10:42,230
this is not generally true however one

255
00:10:42,230 --> 00:10:45,800
of the advantages of as mainly using

256
00:10:45,800 --> 00:10:49,030
declarative languages for configuration

257
00:10:49,030 --> 00:10:53,330
so llamo is ultimately data HDL is a

258
00:10:53,330 --> 00:10:55,460
configuration language or puppet is a

259
00:10:55,460 --> 00:10:58,040
configuration language others they're

260
00:10:58,040 --> 00:11:00,920
not exclusively but often have a number

261
00:11:00,920 --> 00:11:02,540
of properties that make them fast to Ana

262
00:11:02,540 --> 00:11:05,810
lines so that declarative nature often

263
00:11:05,810 --> 00:11:08,510
they're not sure incomplete this can

264
00:11:08,510 --> 00:11:10,010
allow actually something Arty's to be

265
00:11:10,010 --> 00:11:13,540
very fast compared to other testing

266
00:11:13,540 --> 00:11:17,360
approaches especially compared to like

267
00:11:17,360 --> 00:11:18,740
when you're actually spinning up a

268
00:11:18,740 --> 00:11:20,510
spinning of infrastructure you're

269
00:11:20,510 --> 00:11:22,790
actually executing the program because

270
00:11:22,790 --> 00:11:25,130
then you're bringing in not just not

271
00:11:25,130 --> 00:11:26,510
just the network to someone else's

272
00:11:26,510 --> 00:11:29,390
computers but actually the network to

273
00:11:29,390 --> 00:11:31,130
someone else's hypervisor and a control

274
00:11:31,130 --> 00:11:34,570
plane to provision of the computers so

275
00:11:34,570 --> 00:11:38,030
for configuration and infrastructure as

276
00:11:38,030 --> 00:11:40,850
code static analysis can be both faster

277
00:11:40,850 --> 00:11:42,200
than it is often the case in more

278
00:11:42,200 --> 00:11:44,390
complex languages but also acceptance

279
00:11:44,390 --> 00:11:47,210
testing can be much slower so you start

280
00:11:47,210 --> 00:11:49,100
getting more benefit out of analyzing

281
00:11:49,100 --> 00:11:52,880
things earlier I mentioned that that

282
00:11:52,880 --> 00:11:54,590
sort of declarative languages ultimately

283
00:11:54,590 --> 00:11:56,600
lend themselves really well to static

284
00:11:56,600 --> 00:11:59,990
analysis and I think I had this

285
00:11:59,990 --> 00:12:02,570
originally I was like heart stuffing

286
00:12:02,570 --> 00:12:04,970
analysis and so on said well

287
00:12:04,970 --> 00:12:06,920
and I think that's fair and but I do

288
00:12:06,920 --> 00:12:09,350
think adding that declarative

289
00:12:09,350 --> 00:12:10,850
configuration to something else this is

290
00:12:10,850 --> 00:12:13,040
a good starting point

291
00:12:13,040 --> 00:12:15,050
I'll show you some tools which actually

292
00:12:15,050 --> 00:12:17,660
take that idea and run with it and I'll

293
00:12:17,660 --> 00:12:21,709
show you why I mean the second I'll do

294
00:12:21,709 --> 00:12:24,110
that through the lens of a couple of

295
00:12:24,110 --> 00:12:29,240
different if you like ecosystems again

296
00:12:29,240 --> 00:12:31,129
there are lots of different areas where

297
00:12:31,129 --> 00:12:32,959
people are using different configuration

298
00:12:32,959 --> 00:12:35,420
tools and I've just picked two here and

299
00:12:35,420 --> 00:12:36,920
I think looking at two is useful

300
00:12:36,920 --> 00:12:38,509
probably more useful than just looking

301
00:12:38,509 --> 00:12:40,730
at one and I think too that I'm

302
00:12:40,730 --> 00:12:42,170
reasonably familiar with but we could

303
00:12:42,170 --> 00:12:46,009
jump it around as well so kubernetes and

304
00:12:46,009 --> 00:12:47,870
it's probably something lots of people

305
00:12:47,870 --> 00:12:49,100
are familiar with at this point and

306
00:12:49,100 --> 00:12:53,180
whether they're using it or not and

307
00:12:53,180 --> 00:12:55,670
ultimately communities configs are

308
00:12:55,670 --> 00:12:58,160
getting increasingly common as well so

309
00:12:58,160 --> 00:12:59,209
if you're wanting to deploy your

310
00:12:59,209 --> 00:13:01,129
application to communities you've

311
00:13:01,129 --> 00:13:03,110
probably written or seen something like

312
00:13:03,110 --> 00:13:05,930
this so this is a deployment manifest

313
00:13:05,930 --> 00:13:08,209
for kubernetes it's describing a mold

314
00:13:08,209 --> 00:13:09,649
you can use with the for maps and other

315
00:13:09,649 --> 00:13:11,870
high-level languages and we'll leave

316
00:13:11,870 --> 00:13:13,970
that outside for this and as I mentioned

317
00:13:13,970 --> 00:13:17,120
there are a lot of these literally just

318
00:13:17,120 --> 00:13:19,209
publicly on the internet never mind

319
00:13:19,209 --> 00:13:21,709
elsewhere it's definitely being the sort

320
00:13:21,709 --> 00:13:27,680
of a growth tool so and what we're

321
00:13:27,680 --> 00:13:29,959
showing here is obviously a deployment

322
00:13:29,959 --> 00:13:32,540
and it has a name it has some replicas

323
00:13:32,540 --> 00:13:35,120
and it has a bunch of sort of metadata

324
00:13:35,120 --> 00:13:37,939
and some template information I say

325
00:13:37,939 --> 00:13:40,220
obviously but I've been using

326
00:13:40,220 --> 00:13:43,610
communities for a number of years and if

327
00:13:43,610 --> 00:13:46,430
you haven't then you look at this and go

328
00:13:46,430 --> 00:13:49,970
well I don't know what's going on or you

329
00:13:49,970 --> 00:13:51,500
might be able to do by go well yeah

330
00:13:51,500 --> 00:13:53,569
replicas there's only three of them and

331
00:13:53,569 --> 00:13:55,550
you might not know what replicas are yet

332
00:13:55,550 --> 00:13:58,819
you might have an idea but we know

333
00:13:58,819 --> 00:14:01,569
there's going to be three of them

334
00:14:04,850 --> 00:14:08,100
the issue there is that configuration

335
00:14:08,100 --> 00:14:10,140
file I showed you again that snippet of

336
00:14:10,140 --> 00:14:12,360
one

337
00:14:12,360 --> 00:14:13,589
they had a number of configuration

338
00:14:13,589 --> 00:14:16,290
issues a number of configuration issues

339
00:14:16,290 --> 00:14:19,310
that could lead to security problems and

340
00:14:19,310 --> 00:14:22,170
now just looking at it and seeing them

341
00:14:22,170 --> 00:14:24,750
is probably built beyond the most people

342
00:14:24,750 --> 00:14:26,670
certainly I would miss things and I've

343
00:14:26,670 --> 00:14:28,680
been using connected a long time this is

344
00:14:28,680 --> 00:14:32,310
definitely a job for machines some of

345
00:14:32,310 --> 00:14:33,540
the issue here and this has been

346
00:14:33,540 --> 00:14:35,160
discussed quite a bit in the communities

347
00:14:35,160 --> 00:14:36,930
community at the moment about you making

348
00:14:36,930 --> 00:14:39,630
communities more secure by default but

349
00:14:39,630 --> 00:14:41,160
there are still a lot of insecure

350
00:14:41,160 --> 00:14:44,519
defaults around and some of those are

351
00:14:44,519 --> 00:14:46,100
for good reasons some of them may be

352
00:14:46,100 --> 00:14:49,339
historical ones but a few examples are

353
00:14:49,339 --> 00:14:53,880
actually resource limits by default if

354
00:14:53,880 --> 00:14:56,339
you run a container as part of that

355
00:14:56,339 --> 00:14:58,589
deployment it basically has access to

356
00:14:58,589 --> 00:15:01,140
the resources of the hosts it couldn't

357
00:15:01,140 --> 00:15:03,839
run with as much CPU memory limits as it

358
00:15:03,839 --> 00:15:05,640
can get away with and the cluster will

359
00:15:05,640 --> 00:15:09,089
chisel it around the issue there is from

360
00:15:09,089 --> 00:15:11,940
a security standpoint one of denial of

361
00:15:11,940 --> 00:15:14,220
service and that actually can be an

362
00:15:14,220 --> 00:15:16,860
operational one in terms of it might

363
00:15:16,860 --> 00:15:18,449
just be an a service because it's bad

364
00:15:18,449 --> 00:15:20,010
code and it runs with too many resources

365
00:15:20,010 --> 00:15:21,750
and it's actually an internal issue

366
00:15:21,750 --> 00:15:24,510
rather than a security one badly from a

367
00:15:24,510 --> 00:15:25,890
DDoS perspective if you can find

368
00:15:25,890 --> 00:15:28,140
something running without limits there's

369
00:15:28,140 --> 00:15:29,670
a chance that you can start saturating

370
00:15:29,670 --> 00:15:32,459
out the host or the nodes and so running

371
00:15:32,459 --> 00:15:34,500
with like memory and CPU limits like

372
00:15:34,500 --> 00:15:36,570
pointing some bounds around things is a

373
00:15:36,570 --> 00:15:40,649
good security practice in the example

374
00:15:40,649 --> 00:15:44,910
well I didn't have limits there and the

375
00:15:44,910 --> 00:15:47,579
rather confusingly named run as non-root

376
00:15:47,579 --> 00:15:50,610
and which you set to true in order to

377
00:15:50,610 --> 00:15:53,880
run as non-root which is if they're like

378
00:15:53,880 --> 00:15:57,180
all about whether the actual container

379
00:15:57,180 --> 00:15:59,810
running has root level permissions

380
00:15:59,810 --> 00:16:03,240
mostly by default it does and you need

381
00:16:03,240 --> 00:16:04,769
to set these settings in the security

382
00:16:04,769 --> 00:16:07,380
context to change that around or change

383
00:16:07,380 --> 00:16:09,269
the cluster defaults which most people

384
00:16:09,269 --> 00:16:12,930
don't go ahead and do so so finding

385
00:16:12,930 --> 00:16:16,110
deployments that are ultimately running

386
00:16:16,110 --> 00:16:18,720
is route and is surprisingly common

387
00:16:18,720 --> 00:16:21,480
because people don't think about the

388
00:16:21,480 --> 00:16:22,860
fact that they need to add something in

389
00:16:22,860 --> 00:16:24,850
order to change that

390
00:16:24,850 --> 00:16:28,660
and similarly read-only file systems and

391
00:16:28,660 --> 00:16:31,809
again that said I mean right if you've

392
00:16:31,809 --> 00:16:33,309
got a writable file system if someone

393
00:16:33,309 --> 00:16:36,600
can get a running a command on that

394
00:16:36,600 --> 00:16:39,699
machine by a some exploit or get a shell

395
00:16:39,699 --> 00:16:41,529
on their will they can write to that

396
00:16:41,529 --> 00:16:44,979
disk that that disk might be virtualized

397
00:16:44,979 --> 00:16:46,720
it might have access or things like that

398
00:16:46,720 --> 00:16:48,970
ultimately you have the fact that they

399
00:16:48,970 --> 00:16:51,029
could drop malware on in that container

400
00:16:51,029 --> 00:16:53,470
yes there's issues around that being

401
00:16:53,470 --> 00:16:55,929
persistent but you still don't want

402
00:16:55,929 --> 00:16:57,970
people finding an exploit and being able

403
00:16:57,970 --> 00:16:59,999
to change files on disk

404
00:16:59,999 --> 00:17:02,289
especially if they might be shared and

405
00:17:02,289 --> 00:17:06,369
having a read of read-only file system

406
00:17:06,369 --> 00:17:09,059
prohibits that it's a common security

407
00:17:09,059 --> 00:17:11,289
precaution in any sort of operating

408
00:17:11,289 --> 00:17:14,559
system level Amazon security and

409
00:17:14,559 --> 00:17:17,019
enabling that in committees is actually

410
00:17:17,019 --> 00:17:19,089
really simple you just put read-only

411
00:17:19,089 --> 00:17:22,119
root fast and true however in order to

412
00:17:22,119 --> 00:17:23,859
do that you need to know this exists and

413
00:17:23,859 --> 00:17:27,309
do it both of which are actually not the

414
00:17:27,309 --> 00:17:32,710
default and as another example bad the

415
00:17:32,710 --> 00:17:36,070
idea of like exposing Linux capabilities

416
00:17:36,070 --> 00:17:39,250
and these are the low-level system calls

417
00:17:39,250 --> 00:17:42,940
that that Linux provides access to to

418
00:17:42,940 --> 00:17:45,250
touchy do things like connect to the

419
00:17:45,250 --> 00:17:48,100
network and write files to disk again

420
00:17:48,100 --> 00:17:50,740
there are fantastic security control for

421
00:17:50,740 --> 00:17:53,139
any Linux operating system containers

422
00:17:53,139 --> 00:17:55,450
expose those the default is ultimately

423
00:17:55,450 --> 00:17:57,639
you have access to all the capabilities

424
00:17:57,639 --> 00:18:01,299
and by dropping all of them you

425
00:18:01,299 --> 00:18:02,559
ultimately enter into that least

426
00:18:02,559 --> 00:18:04,360
privileged mode now you have to add

427
00:18:04,360 --> 00:18:07,240
everything back it can be revoked it

428
00:18:07,240 --> 00:18:09,429
doesn't mean you need to understand this

429
00:18:09,429 --> 00:18:11,980
low-level component but it doesn't mean

430
00:18:11,980 --> 00:18:13,779
for example you can have container like

431
00:18:13,779 --> 00:18:15,279
containers we don't need access to the

432
00:18:15,279 --> 00:18:17,259
network literally at the Linux

433
00:18:17,259 --> 00:18:19,480
capability level unable to access the

434
00:18:19,480 --> 00:18:21,250
network it's a great secure to control

435
00:18:21,250 --> 00:18:26,379
but it's easy to ignore or miss partly

436
00:18:26,379 --> 00:18:28,809
cuz it's low level partly because again

437
00:18:28,809 --> 00:18:30,519
the defaults are everything's a wide

438
00:18:30,519 --> 00:18:32,550
open

439
00:18:32,550 --> 00:18:35,380
so there are a number of challenges when

440
00:18:35,380 --> 00:18:38,080
writing committees configs especially if

441
00:18:38,080 --> 00:18:40,720
you're a new user and you couldn't be

442
00:18:40,720 --> 00:18:43,270
able to be expected to be expert in such

443
00:18:43,270 --> 00:18:45,280
a large domain so quickly

444
00:18:45,280 --> 00:18:47,410
even if writing that hello world first

445
00:18:47,410 --> 00:18:49,440
deployment is actually really simple um

446
00:18:49,440 --> 00:18:51,610
the good news is there's a few tools

447
00:18:51,610 --> 00:18:54,130
that might be able to help um again

448
00:18:54,130 --> 00:18:55,600
there's always tools sort of emerging

449
00:18:55,600 --> 00:18:58,000
and one of the first ones was definitely

450
00:18:58,000 --> 00:19:00,850
cube Seck um from the folks over at

451
00:19:00,850 --> 00:19:03,220
control plane so they make this

452
00:19:03,220 --> 00:19:05,860
available both as an API online as well

453
00:19:05,860 --> 00:19:07,660
as a command-line tool and you can run

454
00:19:07,660 --> 00:19:10,540
against your configuration files and it

455
00:19:10,540 --> 00:19:13,780
has a number of rules set aside for some

456
00:19:13,780 --> 00:19:15,220
of the problems I just highlighted as

457
00:19:15,220 --> 00:19:17,440
well as others and it's reasonably

458
00:19:17,440 --> 00:19:18,940
popular it's been around for a few years

459
00:19:18,940 --> 00:19:21,730
and I don't see as much use of it um as

460
00:19:21,730 --> 00:19:23,980
I'm I expect but maybe I'm more

461
00:19:23,980 --> 00:19:25,630
interested in this particular problem

462
00:19:25,630 --> 00:19:31,300
than others and another tool that I'm I

463
00:19:31,300 --> 00:19:34,150
will disclose that my bias here I'm one

464
00:19:34,150 --> 00:19:36,550
of the contributors to and work on is

465
00:19:36,550 --> 00:19:39,430
actually contests the contests a little

466
00:19:39,430 --> 00:19:43,870
bit different in that it's a sort of not

467
00:19:43,870 --> 00:19:45,520
exactly a static analysis tools which is

468
00:19:45,520 --> 00:19:47,230
a unit testing tool for configuration

469
00:19:47,230 --> 00:19:49,980
and it allows you to write your own

470
00:19:49,980 --> 00:19:53,020
tests against structured data and that

471
00:19:53,020 --> 00:19:55,180
structured data might be yellow files or

472
00:19:55,180 --> 00:19:58,600
JSON files it could actually be HDL or Q

473
00:19:58,600 --> 00:20:03,040
or Tamil or XML in fact even so it's

474
00:20:03,040 --> 00:20:04,810
really flexible for writing tests

475
00:20:04,810 --> 00:20:06,640
against any configuration not just

476
00:20:06,640 --> 00:20:08,680
communities but a lot of the usage at

477
00:20:08,680 --> 00:20:09,640
the moment has been around the

478
00:20:09,640 --> 00:20:12,310
kubernetes community increasingly

479
00:20:12,310 --> 00:20:14,760
popular and I say this I was one of the

480
00:20:14,760 --> 00:20:17,410
what I created this originally there's

481
00:20:17,410 --> 00:20:20,500
now a core set of maintainence who had

482
00:20:20,500 --> 00:20:22,840
doing most the work frankly this started

483
00:20:22,840 --> 00:20:25,780
about ten months ago or so and yeah the

484
00:20:25,780 --> 00:20:28,360
upsides of flexibility downsides of you

485
00:20:28,360 --> 00:20:32,140
needing to write your own rules but

486
00:20:32,140 --> 00:20:33,970
we'll get into it some ways of avoiding

487
00:20:33,970 --> 00:20:37,740
that in a second contest sup sleep

488
00:20:37,740 --> 00:20:40,470
on top of open policy agent so open

489
00:20:40,470 --> 00:20:43,470
policy agent is a generic tool for busy

490
00:20:43,470 --> 00:20:45,809
policy enforcement it's a policy engine

491
00:20:45,809 --> 00:20:48,179
as a library and if you've ever written

492
00:20:48,179 --> 00:20:51,809
sort of I guess complicated code in the

493
00:20:51,809 --> 00:20:54,080
middle of something that makes a

494
00:20:54,080 --> 00:20:55,830
sitations about whether something's

495
00:20:55,830 --> 00:20:57,390
right or not you've probably written

496
00:20:57,390 --> 00:20:59,970
basically a policy engine and open

497
00:20:59,970 --> 00:21:02,160
policy agent is is that engine bit on

498
00:21:02,160 --> 00:21:04,110
steroids it's basically been written

499
00:21:04,110 --> 00:21:07,530
solely for that purpose generically so

500
00:21:07,530 --> 00:21:09,120
then you can plug it into your different

501
00:21:09,120 --> 00:21:12,420
tools and it's written go so you can be

502
00:21:12,420 --> 00:21:14,070
used natively there there's actually a

503
00:21:14,070 --> 00:21:15,600
bunch of webassembly support making it

504
00:21:15,600 --> 00:21:17,429
easy to integrate as well but also it

505
00:21:17,429 --> 00:21:19,860
provides api is if you're using other

506
00:21:19,860 --> 00:21:22,620
languages it's actually one of the CMC F

507
00:21:22,620 --> 00:21:24,600
projects and there's a really sort of

508
00:21:24,600 --> 00:21:26,309
vibrant open-source community around it

509
00:21:26,309 --> 00:21:29,160
and it's finding its way into lots of

510
00:21:29,160 --> 00:21:31,170
different tools as well which i think is

511
00:21:31,170 --> 00:21:32,760
interesting from a sort of reusability

512
00:21:32,760 --> 00:21:37,080
point of view and contest makes it easy

513
00:21:37,080 --> 00:21:40,140
to integrate like that sort of those

514
00:21:40,140 --> 00:21:43,110
testing into lots of different places so

515
00:21:43,110 --> 00:21:45,660
it provides us a CLI tool but there's

516
00:21:45,660 --> 00:21:47,790
also a github actions there's Techcon

517
00:21:47,790 --> 00:21:50,040
pipeline tasks there's a circle CI orb

518
00:21:50,040 --> 00:21:52,110
as well yeah it's really easy to

519
00:21:52,110 --> 00:21:56,790
integrate into your CI system and tests

520
00:21:56,790 --> 00:21:59,850
look a bit like this so these are not

521
00:21:59,850 --> 00:22:01,710
actually for terraforming oh these are

522
00:22:01,710 --> 00:22:04,350
for communities where we're saying well

523
00:22:04,350 --> 00:22:07,920
actually if this is a deployment well it

524
00:22:07,920 --> 00:22:10,610
doesn't have runners non-root true then

525
00:22:10,610 --> 00:22:13,920
deny this config file so they see we're

526
00:22:13,920 --> 00:22:15,510
flagging up that the container must not

527
00:22:15,510 --> 00:22:18,510
run as root and contest itself I say

528
00:22:18,510 --> 00:22:21,240
that is the simplest version is simply a

529
00:22:21,240 --> 00:22:24,030
CLI tool where we can point out a config

530
00:22:24,030 --> 00:22:26,070
file have our policies locally and it

531
00:22:26,070 --> 00:22:28,500
will return those results like what's

532
00:22:28,500 --> 00:22:31,920
wrong with our company files and as I

533
00:22:31,920 --> 00:22:35,700
mentioned like no you meet you sort of

534
00:22:35,700 --> 00:22:38,220
need some expertise in identifying those

535
00:22:38,220 --> 00:22:40,410
problems so you probably don't want to

536
00:22:40,410 --> 00:22:42,480
be the person on the hook to know all

537
00:22:42,480 --> 00:22:43,710
the things that are wrong and have to

538
00:22:43,710 --> 00:22:46,050
encode them in rego and the nice thing

539
00:22:46,050 --> 00:22:47,580
with contests is it allows you to use

540
00:22:47,580 --> 00:22:49,770
third-party policies so we could just

541
00:22:49,770 --> 00:22:51,389
simply point to a github

542
00:22:51,389 --> 00:22:54,709
all point images of like ser or the

543
00:22:54,709 --> 00:22:57,509
container registries and automatically

544
00:22:57,509 --> 00:22:58,679
use the policies from there

545
00:22:58,679 --> 00:23:01,379
and again so like you don't have to be

546
00:23:01,379 --> 00:23:03,839
an expert and the sort of that meta

547
00:23:03,839 --> 00:23:07,019
question of if you need testing tool

548
00:23:07,019 --> 00:23:08,849
where you don't write the unit tests is

549
00:23:08,849 --> 00:23:11,759
that starting analysis I don't think it

550
00:23:11,759 --> 00:23:13,829
matters that much but ultimately be who

551
00:23:13,829 --> 00:23:17,969
behaves in the similar way so let's see

552
00:23:17,969 --> 00:23:26,329
a quick demo of that in action let me

553
00:23:27,079 --> 00:23:31,679
let's move over to my terminal so here

554
00:23:31,679 --> 00:23:34,769
I've got a a committees configuration

555
00:23:34,769 --> 00:23:36,989
file and in fact he's actually a multi

556
00:23:36,989 --> 00:23:39,299
document file and we've got a deployment

557
00:23:39,299 --> 00:23:42,239
defined here with a simple hello hello

558
00:23:42,239 --> 00:23:45,179
world example and there's a service that

559
00:23:45,179 --> 00:23:47,279
will run it this is exactly the sort of

560
00:23:47,279 --> 00:23:49,200
thing you would find simply on a

561
00:23:49,200 --> 00:23:51,570
introduction to queue at ease and it's

562
00:23:51,570 --> 00:23:53,219
probably the first thing you ran when

563
00:23:53,219 --> 00:23:55,919
you first learned communities and the

564
00:23:55,919 --> 00:23:58,679
issue though is it has some of those the

565
00:23:58,679 --> 00:24:01,799
security problems we mentioned it is not

566
00:24:01,799 --> 00:24:06,570
speak up on some tutorials I guess just

567
00:24:06,570 --> 00:24:08,549
start off as like as you learned copy

568
00:24:08,549 --> 00:24:10,469
pasted put it in a microsphere recently

569
00:24:10,469 --> 00:24:12,239
you'll figure out to do it later but I

570
00:24:12,239 --> 00:24:14,579
guess that's where things get messy

571
00:24:14,579 --> 00:24:16,919
hey exactly but I think there's also

572
00:24:16,919 --> 00:24:19,940
third and this is true in all

573
00:24:19,940 --> 00:24:22,349
programming languages and I think the

574
00:24:22,349 --> 00:24:24,359
more we treat configuration as a

575
00:24:24,359 --> 00:24:26,579
language with all the same pluses and

576
00:24:26,579 --> 00:24:28,979
minuses the better so if you go along

577
00:24:28,979 --> 00:24:33,029
and look at a a simple Ruby application

578
00:24:33,029 --> 00:24:36,089
or a HelloWorld Sinatra application it's

579
00:24:36,089 --> 00:24:38,459
beautiful it's three lines go look at

580
00:24:38,459 --> 00:24:39,989
something for express and it's one or

581
00:24:39,989 --> 00:24:42,989
two lines and the reality of the person

582
00:24:42,989 --> 00:24:45,539
who's been deploying those in production

583
00:24:45,539 --> 00:24:49,399
in like for a few years

584
00:24:49,580 --> 00:24:51,320
benefited from that fact that and that's

585
00:24:51,320 --> 00:24:52,970
why they got started they were like wow

586
00:24:52,970 --> 00:24:56,240
it's two or three lines realistically

587
00:24:56,240 --> 00:24:57,920
you know that that's not gonna remain

588
00:24:57,920 --> 00:25:00,050
two or three lines you know you're gonna

589
00:25:00,050 --> 00:25:01,430
have to do some work to make it more

590
00:25:01,430 --> 00:25:05,030
secure badly if you do I think I think

591
00:25:05,030 --> 00:25:07,160
the flip side of that is if you just

592
00:25:07,160 --> 00:25:08,480
show someone a real-world application

593
00:25:08,480 --> 00:25:11,000
with not just the security things

594
00:25:11,000 --> 00:25:13,970
enabled but also logging and monitoring

595
00:25:13,970 --> 00:25:17,090
and instrumentation and and error

596
00:25:17,090 --> 00:25:18,530
checking you know and all the things you

597
00:25:18,530 --> 00:25:20,210
need to do to be a good engineer and

598
00:25:20,210 --> 00:25:22,940
ship a final production app you end up

599
00:25:22,940 --> 00:25:24,820
with hello world applications that are

600
00:25:24,820 --> 00:25:28,550
three hundred lines long and and yes the

601
00:25:28,550 --> 00:25:30,290
Java HelloWorld application is already

602
00:25:30,290 --> 00:25:35,090
three hundred lines long but I thought

603
00:25:35,090 --> 00:25:38,570
you'd like that like so realistically I

604
00:25:38,570 --> 00:25:40,460
don't think the answer there is hello

605
00:25:40,460 --> 00:25:41,750
all the applications need to have all

606
00:25:41,750 --> 00:25:43,700
the security stuff enabled I think it is

607
00:25:43,700 --> 00:25:46,420
a platform problem and also making

608
00:25:46,420 --> 00:25:49,340
tooling more somewhat approachable if

609
00:25:49,340 --> 00:25:50,840
you like right there's some of the

610
00:25:50,840 --> 00:25:56,150
developers exactly yeah so contest I say

611
00:25:56,150 --> 00:25:58,150
can poke and pull down policies from

612
00:25:58,150 --> 00:26:01,010
third-party sources if I run this this

613
00:26:01,010 --> 00:26:02,780
will download those policies and

614
00:26:02,780 --> 00:26:04,760
actually then test them against that

615
00:26:04,760 --> 00:26:06,380
config file and as you say that was

616
00:26:06,380 --> 00:26:08,540
incredibly quick including a network hop

617
00:26:08,540 --> 00:26:10,940
to get home and back home is obviously

618
00:26:10,940 --> 00:26:12,710
super fast my network is reasonably fast

619
00:26:12,710 --> 00:26:15,430
but again that that's that benefit of

620
00:26:15,430 --> 00:26:18,860
static analysis of declarative languages

621
00:26:18,860 --> 00:26:20,900
we're not trying to solve like really

622
00:26:20,900 --> 00:26:22,460
complex problems the languages are

623
00:26:22,460 --> 00:26:25,790
optimized for query and we can see some

624
00:26:25,790 --> 00:26:27,530
of the problems that cropping up here

625
00:26:27,530 --> 00:26:29,570
again it's telling us where based on the

626
00:26:29,570 --> 00:26:31,940
policies I brought down but it's we're

627
00:26:31,940 --> 00:26:34,120
not dropping capabilities we're allowing

628
00:26:34,120 --> 00:26:36,170
privileged containers running it's

629
00:26:36,170 --> 00:26:37,970
running as root some of the problems I

630
00:26:37,970 --> 00:26:43,149
highlighted earlier I mentioned cubes

631
00:26:43,149 --> 00:26:46,450
as well which if I can spell should be

632
00:26:46,450 --> 00:26:51,989
installed I did not point it at the file

633
00:26:55,340 --> 00:26:58,110
like I stand like an image funny they

634
00:26:58,110 --> 00:27:00,150
like the tree doing a speed test on your

635
00:27:00,150 --> 00:27:02,730
Ben do it you know and it's the yeast

636
00:27:02,730 --> 00:27:05,660
the usefulness of working at home and

637
00:27:05,660 --> 00:27:07,680
coop site basically gives me structured

638
00:27:07,680 --> 00:27:10,310
data back against that a similar sort of

639
00:27:10,310 --> 00:27:13,929
that the issues we detected

640
00:27:13,929 --> 00:27:26,639
and so let's head back to slides road

641
00:27:26,890 --> 00:27:29,510
so those are already like a good couple

642
00:27:29,510 --> 00:27:31,700
of starting point if you if you want to

643
00:27:31,700 --> 00:27:33,530
start out like building no criminal

644
00:27:33,530 --> 00:27:35,810
security these are like at least the

645
00:27:35,810 --> 00:27:38,840
basic things to figure out yeah I think

646
00:27:38,840 --> 00:27:40,850
sigh again I think there's always more

647
00:27:40,850 --> 00:27:44,270
you can do and like there's lots of

648
00:27:44,270 --> 00:27:45,800
different facets to secure in

649
00:27:45,800 --> 00:27:47,450
communities there's the cluster itself

650
00:27:47,450 --> 00:27:49,160
there's the application Germany on top

651
00:27:49,160 --> 00:27:51,170
of it and there's the configuration

652
00:27:51,170 --> 00:27:53,870
that's putting it on there and one of

653
00:27:53,870 --> 00:27:55,760
the reasons I like sort of tools like

654
00:27:55,760 --> 00:27:57,530
this especially where you are using

655
00:27:57,530 --> 00:27:59,900
reusable policies with contests or cube

656
00:27:59,900 --> 00:28:02,210
Seck is you probably learn something

657
00:28:02,210 --> 00:28:05,930
very quickly and pretty low cost and

658
00:28:05,930 --> 00:28:09,140
that's faster run and easy to integrate

659
00:28:09,140 --> 00:28:11,420
with and you sort of learned something

660
00:28:11,420 --> 00:28:12,830
quickly and I think they're good

661
00:28:12,830 --> 00:28:14,060
properties to have when you're getting

662
00:28:14,060 --> 00:28:19,460
started and similarly like moving on to

663
00:28:19,460 --> 00:28:23,210
terraform so terraform is another great

664
00:28:23,210 --> 00:28:25,670
example of the sort of an ecosystem

665
00:28:25,670 --> 00:28:27,710
that's built up around a really great

666
00:28:27,710 --> 00:28:29,930
instructors code tool so terraform is

667
00:28:29,930 --> 00:28:32,750
used for provisioning really any API

668
00:28:32,750 --> 00:28:34,310
driven infrastructure provisioning and

669
00:28:34,310 --> 00:28:37,310
managing any API driven in structure but

670
00:28:37,310 --> 00:28:40,480
I guess it's mainly associated with

671
00:28:40,480 --> 00:28:43,580
spinning up lots of structure on EDS or

672
00:28:43,580 --> 00:28:46,940
ads or a Google cloud there are again

673
00:28:46,940 --> 00:28:49,550
like profile providers for bewilderingly

674
00:28:49,550 --> 00:28:53,450
our array of services but firing up sort

675
00:28:53,450 --> 00:28:56,060
of load balancers and vm's and these

676
00:28:56,060 --> 00:28:58,430
clusters in fact it's probably the main

677
00:28:58,430 --> 00:29:01,490
use case terraform is basically gives

678
00:29:01,490 --> 00:29:03,770
you a language called HCl so a Hashi

679
00:29:03,770 --> 00:29:05,810
comp configuration language and that

680
00:29:05,810 --> 00:29:08,060
looks a bit like this and all it looks

681
00:29:08,060 --> 00:29:11,150
exactly like so here we're saying and

682
00:29:11,150 --> 00:29:14,090
this is a bit of a sort of cooked down

683
00:29:14,090 --> 00:29:16,280
example but here we've got a BBS

684
00:29:16,280 --> 00:29:20,420
security group we've decided defined it

685
00:29:20,420 --> 00:29:24,350
as an ingress type with a sort of cedar

686
00:29:24,350 --> 00:29:27,710
blog we've got an an al be based in

687
00:29:27,710 --> 00:29:29,990
application load balancer setup we've

688
00:29:29,990 --> 00:29:32,690
got a secure black security group we've

689
00:29:32,690 --> 00:29:35,210
got a managed disk and is there again

690
00:29:35,210 --> 00:29:37,090
you have lots of these resources in

691
00:29:37,090 --> 00:29:40,620
terraform but again similar to our

692
00:29:40,620 --> 00:29:44,340
kubernetes problem if i said well how

693
00:29:44,340 --> 00:29:47,900
many security problems can you spot then

694
00:29:47,900 --> 00:29:51,750
the answer might be ah so LaRon how many

695
00:29:51,750 --> 00:29:54,480
security problems can you spot to be

696
00:29:54,480 --> 00:29:55,920
unless they think the problem is a

697
00:29:55,920 --> 00:29:58,110
natural what I'm looking for right like

698
00:29:58,110 --> 00:30:00,090
what what can go wrong

699
00:30:00,090 --> 00:30:02,790
what's the problem here yep and again

700
00:30:02,790 --> 00:30:04,950
like I think they're one of the

701
00:30:04,950 --> 00:30:07,110
advantages to instructure scurries like

702
00:30:07,110 --> 00:30:09,000
especially with great tutorials online

703
00:30:09,000 --> 00:30:12,480
it's actually easy to get started like

704
00:30:12,480 --> 00:30:13,800
you have to have a lower barrier to

705
00:30:13,800 --> 00:30:15,600
entry to get adoption with technology

706
00:30:15,600 --> 00:30:18,120
today but then that means that it's

707
00:30:18,120 --> 00:30:19,860
actually super easy for people to fire

708
00:30:19,860 --> 00:30:21,660
restrictive them might be less secure

709
00:30:21,660 --> 00:30:23,520
the cloud providers I have to say are

710
00:30:23,520 --> 00:30:25,950
doing a much better job today there's a

711
00:30:25,950 --> 00:30:27,630
load of so interesting tooling going

712
00:30:27,630 --> 00:30:30,330
along on the cloud side and I still

713
00:30:30,330 --> 00:30:32,700
think it's good if you write secure

714
00:30:32,700 --> 00:30:35,100
config to start with ultimately having

715
00:30:35,100 --> 00:30:37,170
like the checks and balances works well

716
00:30:37,170 --> 00:30:39,720
um so a couple of things here I mean

717
00:30:39,720 --> 00:30:41,070
like we've got widening open ingress

718
00:30:41,070 --> 00:30:43,890
rules might not be terrible but not a

719
00:30:43,890 --> 00:30:46,920
great default and an encrypted transport

720
00:30:46,920 --> 00:30:48,630
protocols again that's probably internal

721
00:30:48,630 --> 00:30:50,190
load balancer we've heard a lot about

722
00:30:50,190 --> 00:30:53,880
the need to encrypt internal traffic the

723
00:30:53,880 --> 00:30:56,520
idea that I think the hopefully most

724
00:30:56,520 --> 00:30:59,160
people have now like disabusing

725
00:30:59,160 --> 00:31:00,420
themselves of the idea that no my

726
00:31:00,420 --> 00:31:01,890
perimeter is secure everything

727
00:31:01,890 --> 00:31:05,340
internally is fine and getting to the

728
00:31:05,340 --> 00:31:06,570
point where you're encrypting all of

729
00:31:06,570 --> 00:31:08,490
your internal traffic especially in an

730
00:31:08,490 --> 00:31:11,570
internal network is a lot of work and

731
00:31:11,570 --> 00:31:15,690
certainly starting from terraform things

732
00:31:15,690 --> 00:31:17,220
like they said bad practice has been

733
00:31:17,220 --> 00:31:21,950
starting out when again we we explicitly

734
00:31:21,950 --> 00:31:25,470
unencrypted the storage and now maybe

735
00:31:25,470 --> 00:31:28,020
you had a good reason for that but your

736
00:31:28,020 --> 00:31:29,460
company probably has a policy about not

737
00:31:29,460 --> 00:31:32,490
doing that anywhere your reason was

738
00:31:32,490 --> 00:31:35,250
probably something oh I couldn't get the

739
00:31:35,250 --> 00:31:38,130
encryption working site and be off that

740
00:31:38,130 --> 00:31:39,630
turns out not to be a great security

741
00:31:39,630 --> 00:31:44,610
reason every because um yeah and where

742
00:31:44,610 --> 00:31:48,510
you allow people to send things off they

743
00:31:48,510 --> 00:31:50,820
will do and if it makes their life a bit

744
00:31:50,820 --> 00:31:52,530
easier even if it makes something else

745
00:31:52,530 --> 00:31:53,070
worse

746
00:31:53,070 --> 00:31:54,480
and you often need those

747
00:31:54,480 --> 00:31:57,870
checks and balances and on the cloudy

748
00:31:57,870 --> 00:31:59,150
side is actually really interesting

749
00:31:59,150 --> 00:32:03,210
you've got groups like CIS so the Center

750
00:32:03,210 --> 00:32:06,840
for Internet Security so one of the

751
00:32:06,840 --> 00:32:08,520
things they do and they do this across a

752
00:32:08,520 --> 00:32:11,940
wide range of different technologies it

753
00:32:11,940 --> 00:32:14,940
produced benchmarks so you might have

754
00:32:14,940 --> 00:32:16,470
heard of the suspension arcs they exist

755
00:32:16,470 --> 00:32:17,700
for lots of different technology

756
00:32:17,700 --> 00:32:21,210
platforms Windows and others and and

757
00:32:21,210 --> 00:32:23,820
they produce a really good benchmark

758
00:32:23,820 --> 00:32:25,590
documents for both Azure and for anybody

759
00:32:25,590 --> 00:32:27,720
else um there are other ones around

760
00:32:27,720 --> 00:32:29,580
containers actually as well but and

761
00:32:29,580 --> 00:32:32,540
they're really in-depth looks at and

762
00:32:32,540 --> 00:32:36,450
sort of common problems and what you

763
00:32:36,450 --> 00:32:37,950
should do about them so each of the

764
00:32:37,950 --> 00:32:39,780
problems gets actually a description of

765
00:32:39,780 --> 00:32:42,510
yeah this is this is the problem this is

766
00:32:42,510 --> 00:32:43,799
why it's a problem and this is what you

767
00:32:43,799 --> 00:32:45,510
should do about it and they're really

768
00:32:45,510 --> 00:32:47,309
good documents you can download them

769
00:32:47,309 --> 00:32:50,730
freely online and I guess the only

770
00:32:50,730 --> 00:32:54,240
downside from my perspective is this is

771
00:32:54,240 --> 00:32:56,340
what you get you get a really text

772
00:32:56,340 --> 00:32:58,590
really dense document which actually

773
00:32:58,590 --> 00:33:00,450
isn't it's good to read as something

774
00:33:00,450 --> 00:33:04,169
like that can be bullets it's a lot of

775
00:33:04,169 --> 00:33:08,580
stuff and so even just sort of staring

776
00:33:08,580 --> 00:33:09,840
at that screen for a little while you're

777
00:33:09,840 --> 00:33:12,120
I start glazing over and that's just a

778
00:33:12,120 --> 00:33:16,440
subset of the the index the actual index

779
00:33:16,440 --> 00:33:18,150
this one's runs the number of pages

780
00:33:18,150 --> 00:33:20,330
again these are these are really good

781
00:33:20,330 --> 00:33:23,160
but can we get machines to do some of

782
00:33:23,160 --> 00:33:27,450
this work horrors this turns out not to

783
00:33:27,450 --> 00:33:30,480
be a novel thought which is great novel

784
00:33:30,480 --> 00:33:32,190
thoughts are generally often dangerous

785
00:33:32,190 --> 00:33:34,679
and was actually a number of tools and

786
00:33:34,679 --> 00:33:36,990
even specifically just around terraform

787
00:33:36,990 --> 00:33:39,470
to help you with like this sort of

788
00:33:39,470 --> 00:33:41,990
security checks for your terraform code

789
00:33:41,990 --> 00:33:44,520
so one of them actually fairly recent

790
00:33:44,520 --> 00:33:47,760
leads tariffs on terror scan and lets

791
00:33:47,760 --> 00:33:49,110
you to a number of Python tools around

792
00:33:49,110 --> 00:33:50,850
the telephone community I think because

793
00:33:50,850 --> 00:33:52,740
of that sort of overlap with system

794
00:33:52,740 --> 00:33:55,290
administrators and Python started a few

795
00:33:55,290 --> 00:33:57,750
months ago by that just one chat bears

796
00:33:57,750 --> 00:34:00,210
picked up a bit of steam mainly focused

797
00:34:00,210 --> 00:34:02,880
on any BS it has about 30 or so rules

798
00:34:02,880 --> 00:34:04,409
they might have a few more now since I

799
00:34:04,409 --> 00:34:07,020
looked a couple of weeks ago and and he

800
00:34:07,020 --> 00:34:08,250
thought he built on top all

801
00:34:08,250 --> 00:34:10,379
and I like things like this well built

802
00:34:10,379 --> 00:34:14,489
on top of a telephone ballad a command

803
00:34:14,489 --> 00:34:17,179
basically a library there in Python and

804
00:34:17,179 --> 00:34:20,070
it provides a simple CLI it's it's not

805
00:34:20,070 --> 00:34:21,540
doing much more but this you can scan

806
00:34:21,540 --> 00:34:22,830
your terraform code if you're using a

807
00:34:22,830 --> 00:34:23,370
TBS

808
00:34:23,370 --> 00:34:24,929
it'll probably pick up some things that

809
00:34:24,929 --> 00:34:30,449
a worth investigation and not one to

810
00:34:30,449 --> 00:34:32,489
probably look at but I wanted to check

811
00:34:32,489 --> 00:34:34,050
out cuz I like a bit of a historical

812
00:34:34,050 --> 00:34:36,449
record is Terra Firma and this is

813
00:34:36,449 --> 00:34:38,040
actually created more than ten years ago

814
00:34:38,040 --> 00:34:40,230
again just a point that these ideas are

815
00:34:40,230 --> 00:34:40,590
not listed

816
00:34:40,590 --> 00:34:42,510
not necessarily novel but they often

817
00:34:42,510 --> 00:34:45,570
come round in waves and again didn't

818
00:34:45,570 --> 00:34:46,889
pick up much interest the time mainly

819
00:34:46,889 --> 00:34:49,020
focused on TCP doesn't seem to be

820
00:34:49,020 --> 00:34:51,060
actively maintained but a nice bit of

821
00:34:51,060 --> 00:34:54,418
the historical record check off more

822
00:34:54,418 --> 00:34:56,489
recently again like the last few months

823
00:34:56,489 --> 00:34:57,930
it seems to be like I said these things

824
00:34:57,930 --> 00:35:00,960
come around in cycles and maybe four or

825
00:35:00,960 --> 00:35:02,520
five months ago a number of people said

826
00:35:02,520 --> 00:35:03,900
you know what we should build this and

827
00:35:03,900 --> 00:35:06,270
they did that independently and checkups

828
00:35:06,270 --> 00:35:08,490
another Python tool and has a few rules

829
00:35:08,490 --> 00:35:10,530
for anyway Sanders earn a couple for GCP

830
00:35:10,530 --> 00:35:12,660
as well and the game provides you a

831
00:35:12,660 --> 00:35:14,850
python-based CLI tool for checking your

832
00:35:14,850 --> 00:35:20,460
config again similar sort of period of

833
00:35:20,460 --> 00:35:24,360
time this time written in go we have TF

834
00:35:24,360 --> 00:35:26,570
sec

835
00:35:27,270 --> 00:35:29,430
and this specifically calls itself out

836
00:35:29,430 --> 00:35:31,230
is a static analysis tool for terraform

837
00:35:31,230 --> 00:35:34,830
code again similar sort of small number

838
00:35:34,830 --> 00:35:36,720
of set of rules mainly focused on any BS

839
00:35:36,720 --> 00:35:38,790
builds up there's a lot of potential to

840
00:35:38,790 --> 00:35:40,470
sort of centralized a bunch of these

841
00:35:40,470 --> 00:35:42,180
things and there's a lot more rules than

842
00:35:42,180 --> 00:35:43,590
the sis benchmarks that none of these

843
00:35:43,590 --> 00:35:45,060
tools are checking as well at the moment

844
00:35:45,060 --> 00:35:47,630
but again some of them are pretty new

845
00:35:47,630 --> 00:35:52,020
and TF sick and catchy does a really

846
00:35:52,020 --> 00:35:54,150
good job of outputting useful like

847
00:35:54,150 --> 00:35:56,580
actionable information it detects

848
00:35:56,580 --> 00:35:58,950
problems picks those up gives them all

849
00:35:58,950 --> 00:36:00,240
unique reference which i think is useful

850
00:36:00,240 --> 00:36:02,490
and really shows you that lines and the

851
00:36:02,490 --> 00:36:04,530
kurds that are actually causing that

852
00:36:04,530 --> 00:36:06,340
problem

853
00:36:06,340 --> 00:36:08,050
and there's sort of clear textual

854
00:36:08,050 --> 00:36:09,640
descriptions of things I think the UI

855
00:36:09,640 --> 00:36:13,890
for this is actually pretty nice and

856
00:36:13,890 --> 00:36:16,390
again because I'm biased and I work on

857
00:36:16,390 --> 00:36:21,490
this contest also is able to pass HDL so

858
00:36:21,490 --> 00:36:23,590
the terraform language actually both the

859
00:36:23,590 --> 00:36:25,390
previous generation one and the new HDL

860
00:36:25,390 --> 00:36:29,950
two so you can actually write your tests

861
00:36:29,950 --> 00:36:33,250
in contest as well for terraform so here

862
00:36:33,250 --> 00:36:34,600
we've got a couple of examples and I

863
00:36:34,600 --> 00:36:36,220
won't dig into the regal language here

864
00:36:36,220 --> 00:36:38,890
at all but you can sort of pass through

865
00:36:38,890 --> 00:36:40,720
and say like well yeah web we're looking

866
00:36:40,720 --> 00:36:43,960
for any application load balancers we're

867
00:36:43,960 --> 00:36:45,220
looking for any application load

868
00:36:45,220 --> 00:36:48,280
balancers where the protocol is HTTP and

869
00:36:48,280 --> 00:36:51,760
we're gonna basically deny invalidate

870
00:36:51,760 --> 00:36:57,190
those issues and we saw terraform like

871
00:36:57,190 --> 00:36:58,240
contest running against communities

872
00:36:58,240 --> 00:37:00,490
files here you can see when you need to

873
00:37:00,490 --> 00:37:03,250
be explicit about HDL too and we'll

874
00:37:03,250 --> 00:37:04,840
probably make that the default before we

875
00:37:04,840 --> 00:37:06,250
g8 contest

876
00:37:06,250 --> 00:37:10,480
but another thing I didn't mention about

877
00:37:10,480 --> 00:37:12,730
complex actually that I think is

878
00:37:12,730 --> 00:37:14,680
interesting and gets to sort of some

879
00:37:14,680 --> 00:37:18,280
questions you can have about like rules

880
00:37:18,280 --> 00:37:21,130
around config is actually contest itself

881
00:37:21,130 --> 00:37:23,050
provides a built-in unit testing

882
00:37:23,050 --> 00:37:24,430
framework written in the same language

883
00:37:24,430 --> 00:37:26,650
so you can actually write tests for your

884
00:37:26,650 --> 00:37:29,140
policy and this gets a little bit better

885
00:37:29,140 --> 00:37:30,820
in the sense you can have tests for your

886
00:37:30,820 --> 00:37:32,850
policies which are checking your config

887
00:37:32,850 --> 00:37:35,110
all of those things are being somewhat

888
00:37:35,110 --> 00:37:38,050
similar so I see a couple of quick demos

889
00:37:38,050 --> 00:37:42,220
of some of those tools as well jump over

890
00:37:42,220 --> 00:37:44,460
to our terminal

891
00:37:44,460 --> 00:37:52,770
oh that the sharing button disappeared

892
00:37:52,770 --> 00:38:03,240
from its back yeah thank you so so here

893
00:38:03,240 --> 00:38:07,980
we've got a simple terraform file it's

894
00:38:07,980 --> 00:38:09,060
actually the one we were looking at

895
00:38:09,060 --> 00:38:11,880
previously and here I've actually got

896
00:38:11,880 --> 00:38:13,230
the policies locally rather than

897
00:38:13,230 --> 00:38:18,480
downloading them the reason I wrote so

898
00:38:18,480 --> 00:38:20,220
you've got a number of different tests

899
00:38:20,220 --> 00:38:22,080
there again you could definitely reuse

900
00:38:22,080 --> 00:38:25,560
someone else's so we can type

901
00:38:25,560 --> 00:38:29,970
come test verify that's going to run our

902
00:38:29,970 --> 00:38:32,040
tests so really that's a sort of oh yeah

903
00:38:32,040 --> 00:38:34,080
that the tests we have have unit tests

904
00:38:34,080 --> 00:38:35,670
themselves they're actually doing the

905
00:38:35,670 --> 00:38:36,780
thing that they were designed to do

906
00:38:36,780 --> 00:38:40,380
always a good son to check and then we

907
00:38:40,380 --> 00:38:42,900
can run commonest test again I mean to

908
00:38:42,900 --> 00:38:44,940
be explicit about the fact this is HDL -

909
00:38:44,940 --> 00:38:47,460
which is the new version of HDL which is

910
00:38:47,460 --> 00:38:50,730
used in terraform but or twelve onwards

911
00:38:50,730 --> 00:38:52,830
and will point it out our config file

912
00:38:52,830 --> 00:38:55,020
and again we're detecting a couple

913
00:38:55,020 --> 00:38:59,010
issues again let's go fix one of these

914
00:38:59,010 --> 00:39:06,420
in this example so actually not

915
00:39:06,420 --> 00:39:08,300
including our disk was a bad idea

916
00:39:08,300 --> 00:39:12,480
so let's enable that and obviously our

917
00:39:12,480 --> 00:39:14,250
failures disappeared if we were to fix

918
00:39:14,250 --> 00:39:15,930
all the issues we can exit with a knob

919
00:39:15,930 --> 00:39:17,970
there it's Ted it's good this makes it

920
00:39:17,970 --> 00:39:20,430
useful luckily especially with my

921
00:39:20,430 --> 00:39:22,320
terminal but also makes it really easy

922
00:39:22,320 --> 00:39:25,230
to integrate into like a CI system or or

923
00:39:25,230 --> 00:39:26,980
the tooling

924
00:39:26,980 --> 00:39:32,260
yep then you can have ultimately your

925
00:39:32,260 --> 00:39:33,799
tests run

926
00:39:33,799 --> 00:39:36,319
they fought any changes in your code so

927
00:39:36,319 --> 00:39:37,400
lots of people have been building this

928
00:39:37,400 --> 00:39:39,650
into their CI systems I mentioned some

929
00:39:39,650 --> 00:39:43,329
specific integrations earlier

930
00:39:44,019 --> 00:39:47,419
so late like rounding up and then we'll

931
00:39:47,419 --> 00:39:50,029
have some time for questions um and if

932
00:39:50,029 --> 00:39:53,119
all you take away really is but if

933
00:39:53,119 --> 00:39:55,219
structures code is increasingly part of

934
00:39:55,219 --> 00:39:58,699
the application I guess the definitions

935
00:39:58,699 --> 00:40:00,409
of like words like application and

936
00:40:00,409 --> 00:40:01,849
infrastructure are really interesting

937
00:40:01,849 --> 00:40:03,229
and definitely change with different

938
00:40:03,229 --> 00:40:06,139
contexts I guess what I'm meaning here

939
00:40:06,139 --> 00:40:08,829
is that infrastructure becoming code

940
00:40:08,829 --> 00:40:11,630
he's often meaning that that code lives

941
00:40:11,630 --> 00:40:14,899
alongside the Java or the Python or the

942
00:40:14,899 --> 00:40:16,969
Ruby or the JavaScript code you were

943
00:40:16,969 --> 00:40:20,509
writing previously the config files the

944
00:40:20,509 --> 00:40:22,189
configuration languages they're in the

945
00:40:22,189 --> 00:40:24,859
same repositories often they're going

946
00:40:24,859 --> 00:40:27,019
through CI systems as well we're able to

947
00:40:27,019 --> 00:40:28,489
test them and I think these are really

948
00:40:28,489 --> 00:40:31,929
good properties alongside the sort of

949
00:40:31,929 --> 00:40:35,719
technology parts there though are people

950
00:40:35,719 --> 00:40:37,999
it's often the set of the developers

951
00:40:37,999 --> 00:40:39,859
increasingly who are writing this config

952
00:40:39,859 --> 00:40:44,059
and that's a change from I guess 10-15

953
00:40:44,059 --> 00:40:45,739
years ago where configuration management

954
00:40:45,739 --> 00:40:47,809
was definitely I can tell you a sort of

955
00:40:47,809 --> 00:40:51,169
strange subdomain in IT and where even

956
00:40:51,169 --> 00:40:52,579
the database people thought the content

957
00:40:52,579 --> 00:40:58,309
management people were strange my

958
00:40:58,309 --> 00:40:59,929
infrastructures code is leading to its

959
00:40:59,929 --> 00:41:03,259
own security challenges and they're not

960
00:41:03,259 --> 00:41:05,509
new problems ultimately we've had

961
00:41:05,509 --> 00:41:08,409
misconfigured firewalls and networks and

962
00:41:08,409 --> 00:41:10,579
application servers for as long as we've

963
00:41:10,579 --> 00:41:12,439
had fireworks networks and application

964
00:41:12,439 --> 00:41:15,589
servers and what could is doing is

965
00:41:15,589 --> 00:41:17,869
making that a lot more transparent in

966
00:41:17,869 --> 00:41:22,309
some ways before I had to sort of not

967
00:41:22,309 --> 00:41:24,109
there's not value in looking at all of

968
00:41:24,109 --> 00:41:26,149
your network load balancers for example

969
00:41:26,149 --> 00:41:28,369
and saying are they not configured there

970
00:41:28,369 --> 00:41:31,159
definitely is but if I have assurance

971
00:41:31,159 --> 00:41:33,709
that they're all configured according to

972
00:41:33,709 --> 00:41:37,609
the source code I have then actually I

973
00:41:37,609 --> 00:41:39,919
can do things in a way that I couldn't

974
00:41:39,919 --> 00:41:42,349
before like looking at my hundred load

975
00:41:42,349 --> 00:41:44,119
balancers might be expensive looking at

976
00:41:44,119 --> 00:41:45,919
like the configuration that led to those

977
00:41:45,919 --> 00:41:47,989
being created and managed and he's

978
00:41:47,989 --> 00:41:49,279
constantly making sure they're

979
00:41:49,279 --> 00:41:51,609
configured in that way is a lot cheaper

980
00:41:51,609 --> 00:41:55,159
there's value on in both ends but one of

981
00:41:55,159 --> 00:41:57,120
them can give you feedback and

982
00:41:57,120 --> 00:42:00,240
much faster and especially if you're

983
00:42:00,240 --> 00:42:01,830
adopting something like a saga tops

984
00:42:01,830 --> 00:42:03,540
approach where you have that control

985
00:42:03,540 --> 00:42:06,000
loop fundamentally based into how you're

986
00:42:06,000 --> 00:42:09,600
rolling out your tooling testing that

987
00:42:09,600 --> 00:42:12,570
code makes a lot of sense because what

988
00:42:12,570 --> 00:42:14,550
we're really trying to do here isn't

989
00:42:14,550 --> 00:42:17,040
just fine security problems that's

990
00:42:17,040 --> 00:42:19,650
always good that's always a desirable

991
00:42:19,650 --> 00:42:21,840
thing to do we want to find those

992
00:42:21,840 --> 00:42:25,170
problems earlier and by finding them

993
00:42:25,170 --> 00:42:27,420
earlier we can ultimately fix them

994
00:42:27,420 --> 00:42:29,850
before they're in production even as

995
00:42:29,850 --> 00:42:32,670
things change we can we can fix them

996
00:42:32,670 --> 00:42:35,400
with the people that who are making the

997
00:42:35,400 --> 00:42:36,900
like writing that configuration in the

998
00:42:36,900 --> 00:42:40,050
first place and that reduces up

999
00:42:40,050 --> 00:42:42,420
communication overhead it reduces that

1000
00:42:42,420 --> 00:42:45,120
sort of gap between like thinking you've

1001
00:42:45,120 --> 00:42:47,130
done something and needing to go back to

1002
00:42:47,130 --> 00:42:50,070
it all of that really speeds things up

1003
00:42:50,070 --> 00:42:51,360
because ultimately we don't want to be

1004
00:42:51,360 --> 00:42:53,100
writing configuration all our time we

1005
00:42:53,100 --> 00:42:54,750
want to be writing our application is

1006
00:42:54,750 --> 00:42:59,130
that's the valuable thing so thanks for

1007
00:42:59,130 --> 00:43:01,670
listening again shameless plug for that

1008
00:43:01,670 --> 00:43:04,680
sneaked web mail our work but if you're

1009
00:43:04,680 --> 00:43:07,200
interested in any of these topics please

1010
00:43:07,200 --> 00:43:08,910
do ask any questions now or we'll jump

1011
00:43:08,910 --> 00:43:10,350
into the slack channel for questions

1012
00:43:10,350 --> 00:43:13,790
there as well and thanks for listening

1013
00:43:13,790 --> 00:43:16,080
awesome things go this is just been

1014
00:43:16,080 --> 00:43:18,330
interesting and I think the recap of all

1015
00:43:18,330 --> 00:43:19,950
the tools is is really valuable

1016
00:43:19,950 --> 00:43:21,450
understanding that there's several

1017
00:43:21,450 --> 00:43:23,630
options that you can start weights

1018
00:43:23,630 --> 00:43:26,450
pretty cool

1019
00:43:26,450 --> 00:43:28,860
it's all to be in the merging space I

1020
00:43:28,860 --> 00:43:31,830
think that it's I say that it's not

1021
00:43:31,830 --> 00:43:34,770
novel but I don't think we like we

1022
00:43:34,770 --> 00:43:37,010
talked about configuration security

1023
00:43:37,010 --> 00:43:39,300
people have started building tools I

1024
00:43:39,300 --> 00:43:40,710
think we'll hear a lot more about it

1025
00:43:40,710 --> 00:43:44,180
especially as we observe like

1026
00:43:44,180 --> 00:43:46,110
democratization of like that

1027
00:43:46,110 --> 00:43:47,640
institutions code at the same time as a

1028
00:43:47,640 --> 00:43:50,940
realization that and it's not the fact

1029
00:43:50,940 --> 00:43:52,140
that the cloud is secure that's gonna

1030
00:43:52,140 --> 00:43:53,910
get you is the fact that you configured

1031
00:43:53,910 --> 00:43:55,590
the cloud in securely that's gonna get

1032
00:43:55,590 --> 00:43:59,190
you right the thing that's basically the

1033
00:43:59,190 --> 00:44:01,920
human error kind of like what kind of it

1034
00:44:01,920 --> 00:44:05,820
I think it's again like it blaming on

1035
00:44:05,820 --> 00:44:08,190
human error feels like it's sort of the

1036
00:44:08,190 --> 00:44:10,500
person's fault and

1037
00:44:10,500 --> 00:44:14,940
ultimately it's like we we have like as

1038
00:44:14,940 --> 00:44:17,250
humans we talk to computers using

1039
00:44:17,250 --> 00:44:20,480
programming languages none of them are

1040
00:44:20,480 --> 00:44:23,630
perfect in the sort of perfect sense of

1041
00:44:23,630 --> 00:44:26,010
it's impossible to write an insecure

1042
00:44:26,010 --> 00:44:28,140
application and and you can argue pros

1043
00:44:28,140 --> 00:44:29,460
and cons of different ones and that's

1044
00:44:29,460 --> 00:44:31,849
true of configuration languages as well

1045
00:44:31,849 --> 00:44:34,920
but I think it's it's a property of

1046
00:44:34,920 --> 00:44:36,720
software development of software

1047
00:44:36,720 --> 00:44:40,290
engineering today that you're not going

1048
00:44:40,290 --> 00:44:42,750
to get security for free so you have to

1049
00:44:42,750 --> 00:44:44,760
think about it I think how we address

1050
00:44:44,760 --> 00:44:49,020
that is awareness if you think oh I

1051
00:44:49,020 --> 00:44:50,520
haven't thought about if you have if you

1052
00:44:50,520 --> 00:44:51,390
think I haven't thought about this

1053
00:44:51,390 --> 00:44:53,609
before then you're not gonna fix it if

1054
00:44:53,609 --> 00:44:55,170
you think oh no I've thought about it

1055
00:44:55,170 --> 00:44:56,910
now what should I do

1056
00:44:56,910 --> 00:44:58,800
the nice thing is people are starting to

1057
00:44:58,800 --> 00:45:00,510
build tools and that's I guess how as an

1058
00:45:00,510 --> 00:45:02,840
industry we address some of these issues

1059
00:45:02,840 --> 00:45:06,720
certainly in the short medium term yeah

1060
00:45:06,720 --> 00:45:08,490
no totally we're we're all like part of

1061
00:45:08,490 --> 00:45:10,349
this of the second sisters who are

1062
00:45:10,349 --> 00:45:11,730
helping each other building the right

1063
00:45:11,730 --> 00:45:16,800
tools cool so heading off to the live

1064
00:45:16,800 --> 00:45:19,890
session we have a question from asana

1065
00:45:19,890 --> 00:45:24,060
and if you have any insight or gauging

1066
00:45:24,060 --> 00:45:26,609
like rate of false positive for static

1067
00:45:26,609 --> 00:45:29,730
tools for like configuration languages

1068
00:45:29,730 --> 00:45:31,589
is there anything that you haven't seen

1069
00:45:31,589 --> 00:45:36,690
like from puppet or maybe so no actually

1070
00:45:36,690 --> 00:45:38,910
I think it's a bit like that I think for

1071
00:45:38,910 --> 00:45:41,369
the most part most I mean the tools are

1072
00:45:41,369 --> 00:45:45,300
focused on quite explicit sort of issues

1073
00:45:45,300 --> 00:45:47,730
the the benchmarks do a pretty good job

1074
00:45:47,730 --> 00:45:51,060
I guess one of the things here with that

1075
00:45:51,060 --> 00:45:54,869
make it a bit different to like is this

1076
00:45:54,869 --> 00:45:57,960
a vulnerability or not is context

1077
00:45:57,960 --> 00:46:01,109
matters a little bit good example might

1078
00:46:01,109 --> 00:46:06,540
might be the encryption thing sort of on

1079
00:46:06,540 --> 00:46:09,750
a general rule don't do that don't don't

1080
00:46:09,750 --> 00:46:11,430
explicitly unencrypted your disk when

1081
00:46:11,430 --> 00:46:13,580
that cloud problem is gonna give you

1082
00:46:13,580 --> 00:46:16,980
like encryption literally because you

1083
00:46:16,980 --> 00:46:20,210
said true that that isn't amazing like

1084
00:46:20,210 --> 00:46:22,680
encrypting disks like as a sysadmin

1085
00:46:22,680 --> 00:46:23,880
and like actually money

1086
00:46:23,880 --> 00:46:26,150
the instructure to do that ad scale is

1087
00:46:26,150 --> 00:46:28,470
difficult the idea that you can get this

1088
00:46:28,470 --> 00:46:30,890
because she put a boolean is amazing

1089
00:46:30,890 --> 00:46:34,170
throwing that away I think is nearly

1090
00:46:34,170 --> 00:46:35,750
always the wrong thing to do

1091
00:46:35,750 --> 00:46:39,210
the issue there isn't that it's a false

1092
00:46:39,210 --> 00:46:41,069
positive and I've detected something

1093
00:46:41,069 --> 00:46:42,720
that's not happening the issue there is

1094
00:46:42,720 --> 00:46:45,029
you might have a business reason to do

1095
00:46:45,029 --> 00:46:48,180
so and I think in those cases that's

1096
00:46:48,180 --> 00:46:52,009
about having tooling that allows you to

1097
00:46:52,009 --> 00:46:54,509
know I'm not willing million or things

1098
00:46:54,509 --> 00:46:58,500
but ultimately and don't be me well it's

1099
00:46:58,500 --> 00:47:01,769
that sort of like when you get out of

1100
00:47:01,769 --> 00:47:05,519
sort of very specific security domains

1101
00:47:05,519 --> 00:47:07,440
you very quickly becoming got into risk

1102
00:47:07,440 --> 00:47:09,180
and you start talking about what risk is

1103
00:47:09,180 --> 00:47:10,619
and where you're good to accept that

1104
00:47:10,619 --> 00:47:12,569
risk and sometimes you can go too far

1105
00:47:12,569 --> 00:47:14,069
and simply say oh yeah just give me a

1106
00:47:14,069 --> 00:47:15,450
number and I'll accept all the risks I

1107
00:47:15,450 --> 00:47:17,700
think the issue here is it's

1108
00:47:17,700 --> 00:47:21,140
highlighting something of interest I

1109
00:47:21,140 --> 00:47:23,430
don't think a lot of the tools and

1110
00:47:23,430 --> 00:47:24,930
mature enough to really have gone

1111
00:47:24,930 --> 00:47:27,240
through that sort of generation of these

1112
00:47:27,240 --> 00:47:30,329
rules are more valuable than others as I

1113
00:47:30,329 --> 00:47:32,549
said some of them are they have a small

1114
00:47:32,549 --> 00:47:34,440
number of rules I think what we're gonna

1115
00:47:34,440 --> 00:47:36,990
see is this like this interest over time

1116
00:47:36,990 --> 00:47:39,450
we'll see tools have all a lot more

1117
00:47:39,450 --> 00:47:41,400
rules we'll have a lot more examples to

1118
00:47:41,400 --> 00:47:44,069
go on I'd love to see a conversation

1119
00:47:44,069 --> 00:47:47,220
about configuration security in general

1120
00:47:47,220 --> 00:47:48,869
not just individual tools and I think

1121
00:47:48,869 --> 00:47:50,579
from there we'll get into conversations

1122
00:47:50,579 --> 00:47:53,369
of I don't think it's about I don't call

1123
00:47:53,369 --> 00:47:54,779
I don't think it was false positives I

1124
00:47:54,779 --> 00:47:57,930
think about it in terms of which ones

1125
00:47:57,930 --> 00:48:04,839
are more likely to be like sort of

1126
00:48:04,839 --> 00:48:08,759
okay from a company risk perspective

1127
00:48:10,019 --> 00:48:12,279
yeah it's definitely a definitely good

1128
00:48:12,279 --> 00:48:14,519
question especially I think like

1129
00:48:14,519 --> 00:48:16,509
touching on like it feels like a

1130
00:48:16,509 --> 00:48:18,759
question that touches on a history of

1131
00:48:18,759 --> 00:48:19,719
static analysis

1132
00:48:19,719 --> 00:48:21,609
I think declarative languages remove a

1133
00:48:21,609 --> 00:48:24,940
lot of the busy or not problems from

1134
00:48:24,940 --> 00:48:27,670
something in arsons it doesn't mean that

1135
00:48:27,670 --> 00:48:29,410
everything is a security problem to you

1136
00:48:29,410 --> 00:48:33,119
and I think that's the interesting area

1137
00:48:33,119 --> 00:48:39,640
compasses is always yeah all right so we

1138
00:48:39,640 --> 00:48:41,440
want to wrap up that's all the time we

1139
00:48:41,440 --> 00:48:42,969
have for today thank you for all the

1140
00:48:42,969 --> 00:48:45,640
questions and a huge thank you to guards

1141
00:48:45,640 --> 00:48:48,269
for joining us and delivering this talk

1142
00:48:48,269 --> 00:48:50,469
thank you everyone for joining us as

1143
00:48:50,469 --> 00:48:52,299
well I hope you enjoyed it our next

1144
00:48:52,299 --> 00:48:54,339
session is going to be in two weeks on a

1145
00:48:54,339 --> 00:48:57,400
merge tangent will be about fun

1146
00:48:57,400 --> 00:48:58,719
durability scanning for container images

1147
00:48:58,719 --> 00:49:01,450
we please write from aqua I can get your

1148
00:49:01,450 --> 00:49:03,369
tickets you know just sign up for it to

1149
00:49:03,369 --> 00:49:05,319
notice it be on my lipstick upside your

1150
00:49:05,319 --> 00:49:07,539
websites in the meantime if you enjoy

1151
00:49:07,539 --> 00:49:08,739
the session you're welcome to share the

1152
00:49:08,739 --> 00:49:11,829
video and reach out to us on my deaf

1153
00:49:11,829 --> 00:49:13,599
psych-up so our communities so we're

1154
00:49:13,599 --> 00:49:16,390
older just being us so thanks everyone

1155
00:49:16,390 --> 00:49:17,739
Thank You Garrett thanks everyone for

1156
00:49:17,739 --> 00:49:21,749
joining us have a great day bye bye

