1
00:00:00,000 --> 00:00:07,230
you know um yeah the thing about an

2
00:00:04,049 --> 00:00:10,469
afternoon slot is you you get to sit

3
00:00:07,230 --> 00:00:12,630
back and watch a lot of really talented

4
00:00:10,469 --> 00:00:14,489
people talk about all the stuff you were

5
00:00:12,630 --> 00:00:17,430
going to talk about and do a far better

6
00:00:14,490 --> 00:00:19,350
job of it than you could hope to but

7
00:00:17,430 --> 00:00:20,100
hopefully uh you know I think yeah but

8
00:00:19,350 --> 00:00:21,630
that's a good thing

9
00:00:20,100 --> 00:00:23,640
you know I mean it's good because it

10
00:00:21,630 --> 00:00:25,529
means that I guess we're all doing

11
00:00:23,640 --> 00:00:27,570
something right if we all agree in this

12
00:00:25,529 --> 00:00:30,630
so hopefully I can give you you know a

13
00:00:27,570 --> 00:00:32,308
unique take on on how we're doing things

14
00:00:30,630 --> 00:00:35,309
and how we you know how we hoped some

15
00:00:32,308 --> 00:00:37,169
things that just eat so it's just a bit

16
00:00:35,309 --> 00:00:40,050
of an introduction I used to be a

17
00:00:37,170 --> 00:00:42,420
developer then I moved into security and

18
00:00:40,050 --> 00:00:45,930
now a security engineer on the security

19
00:00:42,420 --> 00:00:47,879
team Jeff seid just give you the context

20
00:00:45,930 --> 00:00:52,140
on the security team there's about six

21
00:00:47,879 --> 00:00:55,199
permanent members just II we have over a

22
00:00:52,140 --> 00:00:56,309
hundred developers a lot more than

23
00:00:55,199 --> 00:00:58,379
hundred developers actually in the

24
00:00:56,309 --> 00:01:00,000
region of 30 to 50 you know you need

25
00:00:58,379 --> 00:01:02,699
unique features so there's a lot going

26
00:01:00,000 --> 00:01:05,700
on there's a lot of change of the six

27
00:01:02,699 --> 00:01:09,750
members of the security team you know

28
00:01:05,700 --> 00:01:12,030
one is leadership we have two in ops and

29
00:01:09,750 --> 00:01:14,070
there's three of us in who kind of focus

30
00:01:12,030 --> 00:01:16,740
more in app SEC up until a month ago

31
00:01:14,070 --> 00:01:19,320
there was one of us who concentrated

32
00:01:16,740 --> 00:01:21,419
apps X so I think it's a challenge a lot

33
00:01:19,320 --> 00:01:23,639
of people face in organizations where

34
00:01:21,420 --> 00:01:25,530
you have quite a small security team and

35
00:01:23,640 --> 00:01:26,880
you have a lot of developers and you

36
00:01:25,530 --> 00:01:28,439
have a lot of change happening and a lot

37
00:01:26,880 --> 00:01:32,280
of features so I think it's a common

38
00:01:28,439 --> 00:01:35,369
challenge for all of us here so yeah

39
00:01:32,280 --> 00:01:37,079
I've done the lot I've I've been an

40
00:01:35,369 --> 00:01:38,700
engineer for a while and I've worked in

41
00:01:37,079 --> 00:01:41,490
the firmware we had waterfall where you

42
00:01:38,700 --> 00:01:43,229
get this mythical week-long security

43
00:01:41,490 --> 00:01:46,048
your view at the end of her just before

44
00:01:43,229 --> 00:01:47,850
release you know it's a fortnightly not

45
00:01:46,049 --> 00:01:50,040
bi-weekly for early sprints and and now

46
00:01:47,850 --> 00:01:52,589
you know just II we do a lot of

47
00:01:50,040 --> 00:01:55,140
continuous delivery and we like to be

48
00:01:52,590 --> 00:01:56,850
able to react quickly to the market to

49
00:01:55,140 --> 00:01:59,399
get stuff out there you know get stuff

50
00:01:56,850 --> 00:02:03,960
out there quick it's we like to be fast

51
00:01:59,399 --> 00:02:05,670
and I found two things along the way the

52
00:02:03,960 --> 00:02:08,549
first one application Security's either

53
00:02:05,670 --> 00:02:10,739
is a bottle death and security or is

54
00:02:08,550 --> 00:02:12,930
perceived as sorry a bottleneck in the

55
00:02:10,739 --> 00:02:13,530
Diploma process or is perceived as a

56
00:02:12,930 --> 00:02:15,630
bottleneck

57
00:02:13,530 --> 00:02:18,930
in the deployment process and it's

58
00:02:15,630 --> 00:02:20,549
essentially the same thing and the other

59
00:02:18,930 --> 00:02:23,400
thing I discovered is that security

60
00:02:20,550 --> 00:02:25,290
isn't anything special I mean I you know

61
00:02:23,400 --> 00:02:26,700
I'm kidding somewhat we are all very

62
00:02:25,290 --> 00:02:31,109
special we're you know we're all

63
00:02:26,700 --> 00:02:33,420
unicorns but the specifically the part

64
00:02:31,110 --> 00:02:36,870
of application security which is finding

65
00:02:33,420 --> 00:02:38,250
flaws in software that's not anything

66
00:02:36,870 --> 00:02:40,680
special we've been people have been

67
00:02:38,250 --> 00:02:45,090
doing this for a long time its bugs its

68
00:02:40,680 --> 00:02:46,800
its flaws in code so it's let's you know

69
00:02:45,090 --> 00:02:49,680
look at how people have been doing that

70
00:02:46,800 --> 00:02:53,700
and and see if we can use those

71
00:02:49,680 --> 00:02:55,950
techniques to find security issues a

72
00:02:53,700 --> 00:02:57,359
couple of definitions I think you know

73
00:02:55,950 --> 00:02:59,160
possibly everyone knows he's already

74
00:02:57,360 --> 00:03:01,650
this might kind of go to definition for

75
00:02:59,160 --> 00:03:03,600
continuous delivery you know as a

76
00:03:01,650 --> 00:03:06,330
feature is always in a releasable state

77
00:03:03,600 --> 00:03:08,250
and production ready so you may not push

78
00:03:06,330 --> 00:03:10,800
every change to production but you

79
00:03:08,250 --> 00:03:12,840
certainly have a releasable artifact

80
00:03:10,800 --> 00:03:15,720
that could go to production at any point

81
00:03:12,840 --> 00:03:18,150
and that's achieved through you know

82
00:03:15,720 --> 00:03:19,859
show development cycles automated

83
00:03:18,150 --> 00:03:21,720
deployment pipeline and the course

84
00:03:19,860 --> 00:03:22,860
continuous integration and perhaps the

85
00:03:21,720 --> 00:03:25,200
next step will be as I mentioned

86
00:03:22,860 --> 00:03:27,260
continuous deployment where every change

87
00:03:25,200 --> 00:03:30,119
goes straight out the door to production

88
00:03:27,260 --> 00:03:32,399
what are we in for SEC do lots one of

89
00:03:30,120 --> 00:03:34,140
the things we do is we have to provide

90
00:03:32,400 --> 00:03:36,420
assurance that we're only pushing secure

91
00:03:34,140 --> 00:03:37,589
software to a production we do that for

92
00:03:36,420 --> 00:03:40,048
a number of reasons it could be

93
00:03:37,590 --> 00:03:41,970
regulation it could group compliance we

94
00:03:40,049 --> 00:03:43,140
want to protect our customer data and we

95
00:03:41,970 --> 00:03:44,430
don't want to get hacked because that

96
00:03:43,140 --> 00:03:48,420
just doesn't it doesn't look good for us

97
00:03:44,430 --> 00:03:50,329
and so the question we have to ask

98
00:03:48,420 --> 00:03:53,429
something if you've just started

99
00:03:50,329 --> 00:03:54,989
somewhere which was my experience you

100
00:03:53,430 --> 00:03:57,840
know there's no security team there

101
00:03:54,989 --> 00:03:59,340
there's so much change happening because

102
00:03:57,840 --> 00:04:01,560
there's so many deployments happening

103
00:03:59,340 --> 00:04:03,959
all the time how the hell do you stay on

104
00:04:01,560 --> 00:04:05,910
top of it and initially yeah it was you

105
00:04:03,959 --> 00:04:07,920
know a bit of panic like I don't know

106
00:04:05,910 --> 00:04:09,630
how I'm really gonna do this there's

107
00:04:07,920 --> 00:04:12,298
only one of me but there's all this

108
00:04:09,630 --> 00:04:15,060
stuff happening and and how do you how

109
00:04:12,299 --> 00:04:16,260
do you govern that as security so

110
00:04:15,060 --> 00:04:18,780
there's an you know there's a number of

111
00:04:16,260 --> 00:04:23,969
ways you know you can govern change

112
00:04:18,779 --> 00:04:26,489
within an organization this is one I I

113
00:04:23,970 --> 00:04:27,210
don't know if anyone you know I'm not

114
00:04:26,490 --> 00:04:29,130
gonna

115
00:04:27,210 --> 00:04:30,870
bad-mouth change advisory boards they

116
00:04:29,130 --> 00:04:32,820
definitely have their place and I've

117
00:04:30,870 --> 00:04:36,090
worked places that do change advisory

118
00:04:32,820 --> 00:04:38,099
boards if if anyone hasn't been involved

119
00:04:36,090 --> 00:04:40,969
in these what usually happens is you

120
00:04:38,100 --> 00:04:44,370
have a board of people that will decide

121
00:04:40,970 --> 00:04:46,470
what can change so people will have a

122
00:04:44,370 --> 00:04:49,050
list of proposed changes you will stand

123
00:04:46,470 --> 00:04:51,210
in a room as representing security and

124
00:04:49,050 --> 00:04:53,280
people say security have you reviewed

125
00:04:51,210 --> 00:04:55,138
this range have you that's just have you

126
00:04:53,280 --> 00:04:57,780
reviewed this change you know it can't

127
00:04:55,139 --> 00:04:59,370
go out and and that definitely you know

128
00:04:57,780 --> 00:05:01,109
that there's a place for that and in

129
00:04:59,370 --> 00:05:03,690
some places that works but in an

130
00:05:01,110 --> 00:05:05,580
environment where you have to react

131
00:05:03,690 --> 00:05:08,219
quickly and you're putting out you can't

132
00:05:05,580 --> 00:05:09,960
wait the next day to release a change it

133
00:05:08,220 --> 00:05:15,210
doesn't it doesn't really fit that kind

134
00:05:09,960 --> 00:05:17,190
of model so the alternative if you are

135
00:05:15,210 --> 00:05:19,109
doing continuous delivery and just to

136
00:05:17,190 --> 00:05:21,599
say if you are doing change advisory

137
00:05:19,110 --> 00:05:23,490
boards so you are doing next day change

138
00:05:21,599 --> 00:05:25,169
this still works because this is just

139
00:05:23,490 --> 00:05:26,729
the stuff that happens beforehand it

140
00:05:25,169 --> 00:05:30,000
doesn't really matter how how the code

141
00:05:26,729 --> 00:05:37,260
goes out there so I'll talk about early

142
00:05:30,000 --> 00:05:39,690
engagement and tools and reporting so

143
00:05:37,260 --> 00:05:41,940
yeah I'm the early engagement don't be

144
00:05:39,690 --> 00:05:43,979
late to the party two questions need to

145
00:05:41,940 --> 00:05:47,580
ask yourself first one hour security

146
00:05:43,979 --> 00:05:50,010
part of the feature design when at

147
00:05:47,580 --> 00:05:53,400
inception point of software are you

148
00:05:50,010 --> 00:05:54,930
doing threat modeling the next question

149
00:05:53,400 --> 00:05:56,580
need to ask yourself is do you need to

150
00:05:54,930 --> 00:05:59,880
is that actually necessary is that a

151
00:05:56,580 --> 00:06:01,169
good use of your time if do you have the

152
00:05:59,880 --> 00:06:03,599
time to do that like you might be

153
00:06:01,169 --> 00:06:07,590
spreading yourself far to threaten thin

154
00:06:03,599 --> 00:06:08,789
to do a review of every single change

155
00:06:07,590 --> 00:06:10,679
this happening and feeding requirements

156
00:06:08,789 --> 00:06:15,150
to every change and do that threat

157
00:06:10,680 --> 00:06:17,490
modeling it doesn't always work so maybe

158
00:06:15,150 --> 00:06:19,469
instead of doing the threat modeling and

159
00:06:17,490 --> 00:06:20,580
then giving the you know the dev team is

160
00:06:19,470 --> 00:06:25,050
a bunch of requirements that they have

161
00:06:20,580 --> 00:06:27,840
to do let's give them the training tools

162
00:06:25,050 --> 00:06:30,570
resources they need to do it themselves

163
00:06:27,840 --> 00:06:32,489
let's outsource that to dev teams to

164
00:06:30,570 --> 00:06:34,590
architects you know so it doesn't

165
00:06:32,490 --> 00:06:37,529
necessarily have to sit within security

166
00:06:34,590 --> 00:06:38,789
it's a process and anyone can follow a

167
00:06:37,529 --> 00:06:39,870
process you just that you need the

168
00:06:38,789 --> 00:06:42,930
training

169
00:06:39,870 --> 00:06:45,180
and then you know security can

170
00:06:42,930 --> 00:06:47,040
absolutely be a part of that but you

171
00:06:45,180 --> 00:06:48,810
don't have to sit in in every threat

172
00:06:47,040 --> 00:06:50,880
modeling session or you don't have to

173
00:06:48,810 --> 00:06:53,210
feed them requirement so it's more it's

174
00:06:50,880 --> 00:06:56,550
less requirements and more guidelines

175
00:06:53,210 --> 00:06:57,900
and this can lead into you know you can

176
00:06:56,550 --> 00:07:00,660
have security stories within their

177
00:06:57,900 --> 00:07:02,280
projects and your requirements the

178
00:07:00,660 --> 00:07:03,750
security runners that came out of the

179
00:07:02,280 --> 00:07:05,250
threat modeling those who can become

180
00:07:03,750 --> 00:07:09,000
acceptance criteria which I'll talk

181
00:07:05,250 --> 00:07:10,320
about now let's be realistic you know

182
00:07:09,000 --> 00:07:12,479
that's their that's the utopian

183
00:07:10,320 --> 00:07:15,150
situation where everyone writes really

184
00:07:12,479 --> 00:07:17,180
good code and Nan makes any mistakes and

185
00:07:15,150 --> 00:07:19,560
no one's going to make a change that

186
00:07:17,180 --> 00:07:21,720
impact security negative way that's

187
00:07:19,560 --> 00:07:23,130
stuff will stuff will happen and you

188
00:07:21,720 --> 00:07:27,210
still need the visibility over what's

189
00:07:23,130 --> 00:07:30,450
going on so we use JIRA just II think a

190
00:07:27,210 --> 00:07:32,969
lot of people do and so we built a bot

191
00:07:30,450 --> 00:07:34,050
called Marvin and don't panic Marvin

192
00:07:32,970 --> 00:07:37,229
you're probably seeing a bit of a

193
00:07:34,050 --> 00:07:39,240
Douglas Adams scene here so we what

194
00:07:37,229 --> 00:07:41,250
Marvin does is marvin looks at the JIRA

195
00:07:39,240 --> 00:07:43,800
API and it does a keyword search for

196
00:07:41,250 --> 00:07:46,139
security relevant terms say encryption

197
00:07:43,800 --> 00:07:49,440
password you know and a lot more and

198
00:07:46,139 --> 00:07:49,770
that kind of stuff and when it finds an

199
00:07:49,440 --> 00:07:52,289
issue

200
00:07:49,770 --> 00:07:53,700
it adds itself as a watcher there's a

201
00:07:52,289 --> 00:07:54,900
marvin user so now marvin is now

202
00:07:53,700 --> 00:07:57,150
watching this great you have the

203
00:07:54,900 --> 00:07:59,190
visibility so let's go a step further

204
00:07:57,150 --> 00:08:03,810
and it leaves a little comment on there

205
00:07:59,190 --> 00:08:05,130
saying you're being watched we after a

206
00:08:03,810 --> 00:08:06,990
bit of feedback because feedback

207
00:08:05,130 --> 00:08:08,070
important the message has now changed

208
00:08:06,990 --> 00:08:10,889
from you are being watched

209
00:08:08,070 --> 00:08:13,020
because that doesn't help with this

210
00:08:10,889 --> 00:08:14,070
image of Big Brother security watching

211
00:08:13,020 --> 00:08:17,010
everything you do so it's far more

212
00:08:14,070 --> 00:08:19,080
friendly we're actually saying is you

213
00:08:17,010 --> 00:08:20,909
know this contains a security relevant

214
00:08:19,080 --> 00:08:22,620
keyword would love you to come talk to

215
00:08:20,910 --> 00:08:24,630
us please come talk to us

216
00:08:22,620 --> 00:08:26,010
you know we're lonely we like people and

217
00:08:24,630 --> 00:08:28,349
it opens up that chain of communication

218
00:08:26,010 --> 00:08:30,389
between you and the development teams

219
00:08:28,349 --> 00:08:32,580
which is absolutely crucial and it's

220
00:08:30,389 --> 00:08:36,570
really good to make yourself known like

221
00:08:32,580 --> 00:08:39,270
that so we're still working on it

222
00:08:36,570 --> 00:08:41,459
you know we're going to improve the

223
00:08:39,270 --> 00:08:43,260
feedback so there's going to be false

224
00:08:41,458 --> 00:08:44,640
positives let people feedback and then

225
00:08:43,260 --> 00:08:46,890
that'll improve that their search

226
00:08:44,640 --> 00:08:48,300
filters and so on and it gives you it

227
00:08:46,890 --> 00:08:50,819
just gives you that visibility which is

228
00:08:48,300 --> 00:08:53,709
which is so vital and

229
00:08:50,820 --> 00:08:56,410
yeah as I said you know don't this is

230
00:08:53,710 --> 00:08:59,080
again the it's this idea of security not

231
00:08:56,410 --> 00:09:01,870
being ivory tower security who set up

232
00:08:59,080 --> 00:09:03,790
there and you know just before

233
00:09:01,870 --> 00:09:05,860
production give you a whole load of

234
00:09:03,790 --> 00:09:08,079
stuff that they're static analysis

235
00:09:05,860 --> 00:09:09,700
scanner founds and you have to go fix it

236
00:09:08,080 --> 00:09:12,040
and it's all false positives and

237
00:09:09,700 --> 00:09:16,390
security don't understand that so it you

238
00:09:12,040 --> 00:09:19,839
know instead security should let's give

239
00:09:16,390 --> 00:09:21,520
the developers QA arctas let's give them

240
00:09:19,840 --> 00:09:24,100
the tools they need to do that

241
00:09:21,520 --> 00:09:26,470
so let's trust let's let's do this taste

242
00:09:24,100 --> 00:09:30,850
test and trust and verify approach that

243
00:09:26,470 --> 00:09:34,870
we we provide the tooling we look at the

244
00:09:30,850 --> 00:09:37,000
output of that tooling but we it's the

245
00:09:34,870 --> 00:09:38,110
the developers and the engineering teams

246
00:09:37,000 --> 00:09:40,660
that are in charge of the security

247
00:09:38,110 --> 00:09:42,370
tooling they they're in charge of run it

248
00:09:40,660 --> 00:09:47,650
against their products and it goes into

249
00:09:42,370 --> 00:09:50,560
their pipeline and of course I think

250
00:09:47,650 --> 00:09:54,090
Ronaldo mentioned security champions

251
00:09:50,560 --> 00:09:56,890
it's again something of a big fan of and

252
00:09:54,090 --> 00:09:58,660
so you know if you want so you can put

253
00:09:56,890 --> 00:10:02,020
security champions within teams and they

254
00:09:58,660 --> 00:10:05,170
become the go-to people for security

255
00:10:02,020 --> 00:10:08,050
within your engineering teams and you

256
00:10:05,170 --> 00:10:10,540
can provide you know you can provide

257
00:10:08,050 --> 00:10:12,670
training now when I say training I don't

258
00:10:10,540 --> 00:10:14,890
mean secure coding training I don't know

259
00:10:12,670 --> 00:10:16,540
I'm sure many of a lot of you had to do

260
00:10:14,890 --> 00:10:18,220
secure coding training whereas that

261
00:10:16,540 --> 00:10:20,410
stuff that you have to do to check the

262
00:10:18,220 --> 00:10:24,460
PCI box where you have to watch a bunch

263
00:10:20,410 --> 00:10:27,310
of videos about code instead I mean

264
00:10:24,460 --> 00:10:29,710
teach people how to hack that's much

265
00:10:27,310 --> 00:10:33,040
more fun you know get people in a room

266
00:10:29,710 --> 00:10:35,530
give them burp or zap or whatever and

267
00:10:33,040 --> 00:10:37,060
you know do some man-in-the-middle on

268
00:10:35,530 --> 00:10:38,410
the mobile device and let them see

269
00:10:37,060 --> 00:10:40,390
what's happening and get them to hack

270
00:10:38,410 --> 00:10:41,890
some vulnerable applications it's a lot

271
00:10:40,390 --> 00:10:43,600
more interesting and you'll get a lot

272
00:10:41,890 --> 00:10:45,189
out of that and that's how you make your

273
00:10:43,600 --> 00:10:47,140
security champions that's how you get

274
00:10:45,190 --> 00:10:48,940
people incentive ice-t-- and you can put

275
00:10:47,140 --> 00:10:51,490
those within the security teams and they

276
00:10:48,940 --> 00:10:54,100
can be the people you go to about those

277
00:10:51,490 --> 00:10:55,780
tools guidelines standards another

278
00:10:54,100 --> 00:11:00,130
approach and one we've taken it just eat

279
00:10:55,780 --> 00:11:02,260
is we've now hired to you know very

280
00:11:00,130 --> 00:11:03,560
talented software engineers have to say

281
00:11:02,260 --> 00:11:06,860
that because they're in the room

282
00:11:03,560 --> 00:11:08,660
and they will be security software

283
00:11:06,860 --> 00:11:11,620
engineers so there will be they'll work

284
00:11:08,660 --> 00:11:14,089
within teams know right features and

285
00:11:11,620 --> 00:11:15,830
there but they'll also be the go-to

286
00:11:14,090 --> 00:11:17,390
people for security so they'll write the

287
00:11:15,830 --> 00:11:19,400
features they write them well with

288
00:11:17,390 --> 00:11:21,529
security in mind but then they can also

289
00:11:19,400 --> 00:11:24,760
do the kind of security overall like

290
00:11:21,529 --> 00:11:24,760
improvement work as well

291
00:11:25,330 --> 00:11:31,550
so this is our broadly what our

292
00:11:29,510 --> 00:11:34,240
deployment pipeline looks at just eat

293
00:11:31,550 --> 00:11:36,469
and so what's a deployment pipeline it's

294
00:11:34,240 --> 00:11:39,830
it's the only way you can get your stuff

295
00:11:36,470 --> 00:11:42,529
to production and it's the pipeline is

296
00:11:39,830 --> 00:11:45,290
basically orchestrating the continuous

297
00:11:42,529 --> 00:11:47,240
integration so you know starts where

298
00:11:45,290 --> 00:11:49,819
everything starts with a commit then we

299
00:11:47,240 --> 00:11:51,560
do our build our unit tests put stuff on

300
00:11:49,820 --> 00:11:53,060
QA and that's where we do all our

301
00:11:51,560 --> 00:11:55,010
functional testing and so on you see

302
00:11:53,060 --> 00:11:56,029
there's an authorized depth there that's

303
00:11:55,010 --> 00:11:57,819
because we're not doing continuous

304
00:11:56,029 --> 00:12:00,380
deployment yet doing continuous delivery

305
00:11:57,820 --> 00:12:02,360
so that will create a releasable

306
00:12:00,380 --> 00:12:04,040
artifact then actually rise a manual

307
00:12:02,360 --> 00:12:07,610
step of someone going in and authorizing

308
00:12:04,040 --> 00:12:09,349
it and it goes out to production so this

309
00:12:07,610 --> 00:12:11,810
is where we're and this is great because

310
00:12:09,350 --> 00:12:13,250
it means that there's only one way to go

311
00:12:11,810 --> 00:12:16,910
to production and now we know we're only

312
00:12:13,250 --> 00:12:18,740
putting tested proven software in

313
00:12:16,910 --> 00:12:20,719
production so this is the obvious place

314
00:12:18,740 --> 00:12:25,070
we should start checking for security in

315
00:12:20,720 --> 00:12:26,570
this thing here people have spoken about

316
00:12:25,070 --> 00:12:29,830
these already so I don't think I need to

317
00:12:26,570 --> 00:12:32,540
static analysis looks at the code

318
00:12:29,830 --> 00:12:36,920
dynamic analysis you know it looks at

319
00:12:32,540 --> 00:12:39,140
the outside now come I'll come back to

320
00:12:36,920 --> 00:12:40,819
that so there's a couple of couple

321
00:12:39,140 --> 00:12:43,069
things about our SAST and DAST which

322
00:12:40,820 --> 00:12:45,470
people mentioned is they're slow they're

323
00:12:43,070 --> 00:12:48,200
not that fast because they do a complex

324
00:12:45,470 --> 00:12:50,089
job and they have there's dusty slow

325
00:12:48,200 --> 00:12:52,970
because it has to fuzz so much in the

326
00:12:50,089 --> 00:12:56,810
ancestors you know it's quite complex to

327
00:12:52,970 --> 00:12:59,959
static analysis so I challenge you my

328
00:12:56,810 --> 00:13:02,329
face is we have a ten-minute pipeline a

329
00:12:59,959 --> 00:13:04,250
20-minute pipeline that's now a 4-hour

330
00:13:02,330 --> 00:13:07,850
pipeline because security have messed

331
00:13:04,250 --> 00:13:09,740
with it yeah and ok great you know that

332
00:13:07,850 --> 00:13:11,660
might be that maybe that's just how it

333
00:13:09,740 --> 00:13:15,370
has to be to make sure you're put in the

334
00:13:11,660 --> 00:13:17,600
security secure code out there if you're

335
00:13:15,370 --> 00:13:20,899
if the business way

336
00:13:17,600 --> 00:13:23,089
you work says okay I'm fine with that

337
00:13:20,899 --> 00:13:25,100
you're very lucky and that does really

338
00:13:23,089 --> 00:13:27,529
good and it doesn't always work like

339
00:13:25,100 --> 00:13:29,839
that so perhaps what you might have to

340
00:13:27,529 --> 00:13:32,029
consider is doing your own security

341
00:13:29,839 --> 00:13:33,350
built and I think again

342
00:13:32,029 --> 00:13:36,620
Ronaldo mentioned this as well where you

343
00:13:33,350 --> 00:13:38,420
have like a security build and that can

344
00:13:36,620 --> 00:13:41,149
trigger at the same time but it takes a

345
00:13:38,420 --> 00:13:41,719
bit longer now if that security build

346
00:13:41,149 --> 00:13:45,230
fails

347
00:13:41,720 --> 00:13:48,410
perhaps in the original development

348
00:13:45,230 --> 00:13:51,199
builds they can check the status of that

349
00:13:48,410 --> 00:13:53,600
security build and if that's failed you

350
00:13:51,199 --> 00:13:55,459
know stop no more releases maybe even if

351
00:13:53,600 --> 00:13:57,440
you've done a release roll back to the

352
00:13:55,459 --> 00:13:59,750
previous version before these

353
00:13:57,440 --> 00:14:02,149
vulnerabilities were introduced yet that

354
00:13:59,750 --> 00:14:04,990
means we put some vulnerable code on

355
00:14:02,149 --> 00:14:07,100
production for well that's not good so

356
00:14:04,990 --> 00:14:09,079
there's a risk there but it's a

357
00:14:07,100 --> 00:14:11,480
quantifiable risk there's a there's a

358
00:14:09,079 --> 00:14:13,550
time difference between how when the two

359
00:14:11,480 --> 00:14:15,440
builds completed is quantifiable risk

360
00:14:13,550 --> 00:14:17,959
and the good thing about quantifiable

361
00:14:15,440 --> 00:14:19,759
risks if you can get someone to sign off

362
00:14:17,959 --> 00:14:22,430
on it you can make people aware of it

363
00:14:19,759 --> 00:14:23,779
it's not ideal ideal is the previous

364
00:14:22,430 --> 00:14:25,880
situation where you have blocking

365
00:14:23,779 --> 00:14:27,649
security steps in your pipeline but you

366
00:14:25,880 --> 00:14:29,000
know let's be realistic that's not

367
00:14:27,649 --> 00:14:32,480
always going to be the case and it's all

368
00:14:29,000 --> 00:14:35,149
about your own organizations attitude to

369
00:14:32,480 --> 00:14:39,500
risk and what's more important and to

370
00:14:35,149 --> 00:14:41,600
them so functional security testing so

371
00:14:39,500 --> 00:14:44,839
this one talking about where we should

372
00:14:41,600 --> 00:14:47,000
use how people have already been testing

373
00:14:44,839 --> 00:14:48,920
for code and quality but you know

374
00:14:47,000 --> 00:14:53,120
software quality Bert's test for

375
00:14:48,920 --> 00:14:54,649
security software quality so as a few

376
00:14:53,120 --> 00:14:57,290
people meant I think Marcus mentioned

377
00:14:54,649 --> 00:14:59,060
this morning dynamic analysis and static

378
00:14:57,290 --> 00:15:02,889
analysis aren't going to find a business

379
00:14:59,060 --> 00:15:07,609
logic issue that's for pen tests find

380
00:15:02,889 --> 00:15:09,410
now but what is that that when safe the

381
00:15:07,610 --> 00:15:11,930
example of a broken login form so this

382
00:15:09,410 --> 00:15:12,410
is where if I log in with an incorrect

383
00:15:11,930 --> 00:15:15,709
password

384
00:15:12,410 --> 00:15:18,589
I still get in that's you know that

385
00:15:15,709 --> 00:15:21,138
that's not good um but what that is is

386
00:15:18,589 --> 00:15:22,970
that a break down because it's not the

387
00:15:21,139 --> 00:15:26,089
software has not been designed or built

388
00:15:22,970 --> 00:15:27,649
to requirements so this is where we've

389
00:15:26,089 --> 00:15:30,070
gone back to the beginning where we

390
00:15:27,649 --> 00:15:32,650
engaged early or we the teams

391
00:15:30,070 --> 00:15:34,660
they're their threat modeling and out of

392
00:15:32,650 --> 00:15:36,520
that came a set of requirements or

393
00:15:34,660 --> 00:15:40,329
acceptance criteria the acceptance

394
00:15:36,520 --> 00:15:42,550
criteria says that when I try and log in

395
00:15:40,330 --> 00:15:46,410
with an incorrect password I should get

396
00:15:42,550 --> 00:15:48,819
an error so if we can test for that

397
00:15:46,410 --> 00:15:51,100
automatically but before it goes to

398
00:15:48,820 --> 00:15:52,750
production then this wouldn't happen so

399
00:15:51,100 --> 00:15:54,970
it's a way so these business logic

400
00:15:52,750 --> 00:15:57,580
issues they can be tested automatically

401
00:15:54,970 --> 00:16:00,280
in not all of them can but there's you

402
00:15:57,580 --> 00:16:02,020
can get you can get coverage of your

403
00:16:00,280 --> 00:16:05,170
business logic issues by automated

404
00:16:02,020 --> 00:16:08,260
testing it already got a lot of mentions

405
00:16:05,170 --> 00:16:10,390
already BDD security - so continuum

406
00:16:08,260 --> 00:16:12,430
security - a very good framework for

407
00:16:10,390 --> 00:16:15,189
this BDD security which are also a

408
00:16:12,430 --> 00:16:16,870
screenshot next and of course selenium

409
00:16:15,190 --> 00:16:19,570
which is what a lot of this functional

410
00:16:16,870 --> 00:16:23,920
testing is based on it's a screen from

411
00:16:19,570 --> 00:16:26,140
am scenario as an example of BDD

412
00:16:23,920 --> 00:16:29,890
security so what they're doing here is

413
00:16:26,140 --> 00:16:33,730
they're they're testing for sequel

414
00:16:29,890 --> 00:16:35,290
injection as a scenario so this this is

415
00:16:33,730 --> 00:16:38,400
going to be this is going to be the

416
00:16:35,290 --> 00:16:41,709
scenario in the you know documented test

417
00:16:38,400 --> 00:16:44,980
so this this is the documented test and

418
00:16:41,710 --> 00:16:48,310
helping kept his code so that's you know

419
00:16:44,980 --> 00:16:50,200
that's good and we can now track there

420
00:16:48,310 --> 00:16:53,020
we can set the level we want to test

421
00:16:50,200 --> 00:16:56,200
that the attack threshold you know log

422
00:16:53,020 --> 00:16:59,020
false positives here what this is

423
00:16:56,200 --> 00:17:03,550
actually does which is quite interesting

424
00:16:59,020 --> 00:17:05,500
is its using zap and I think there was a

425
00:17:03,550 --> 00:17:07,959
workshop early on or maybe it's on a

426
00:17:05,500 --> 00:17:10,359
later on I think of 4 o'clock yeah so

427
00:17:07,959 --> 00:17:11,560
that there's one about automating zap

428
00:17:10,359 --> 00:17:13,750
because you can actually runs up in

429
00:17:11,560 --> 00:17:15,159
headless mode and an API hangs off it

430
00:17:13,750 --> 00:17:17,439
and you can send commands to it and it

431
00:17:15,160 --> 00:17:19,150
becomes your dynamic application scanner

432
00:17:17,439 --> 00:17:22,060
and you can tell it what endpoints to

433
00:17:19,150 --> 00:17:25,630
scan and how to scan them so that can be

434
00:17:22,060 --> 00:17:29,710
part of your test framework much simpler

435
00:17:25,630 --> 00:17:31,360
scenario here which is where I

436
00:17:29,710 --> 00:17:34,360
subscribed you have a business logic

437
00:17:31,360 --> 00:17:37,030
issue where this is our classic there's

438
00:17:34,360 --> 00:17:38,709
a password reset link if someone clicks

439
00:17:37,030 --> 00:17:41,320
on it once they shouldn't be able to

440
00:17:38,710 --> 00:17:43,580
click on it again so let's write a

441
00:17:41,320 --> 00:17:45,320
scenario so we're saying you know

442
00:17:43,580 --> 00:17:47,179
given the customers done something

443
00:17:45,320 --> 00:17:48,800
they've clicked the password reset link

444
00:17:47,180 --> 00:17:52,180
when I navigate to the password reset

445
00:17:48,800 --> 00:17:56,030
link I should see an error response code

446
00:17:52,180 --> 00:17:58,100
so just to go back what we had what we

447
00:17:56,030 --> 00:18:00,350
had perform what we used to do in

448
00:17:58,100 --> 00:18:02,659
security is we used to write tech

449
00:18:00,350 --> 00:18:05,780
required the requirements document or

450
00:18:02,660 --> 00:18:09,110
requirement stories instead of that now

451
00:18:05,780 --> 00:18:12,200
we're writing test scenarios so these

452
00:18:09,110 --> 00:18:17,240
are we are our requirements are now

453
00:18:12,200 --> 00:18:19,820
tests so e-even now let's turn these

454
00:18:17,240 --> 00:18:23,000
into code so we can do that manually or

455
00:18:19,820 --> 00:18:25,669
we can use a parser to run as a part of

456
00:18:23,000 --> 00:18:27,380
a test suite so there's a I don't know

457
00:18:25,670 --> 00:18:29,270
if anyone's hurt I think it's quite calm

458
00:18:27,380 --> 00:18:32,420
down the cucumber test framework has a

459
00:18:29,270 --> 00:18:34,100
really good and parser a gherkin parser

460
00:18:32,420 --> 00:18:36,020
which will take these give them when

461
00:18:34,100 --> 00:18:39,260
then scenarios and and turn them into

462
00:18:36,020 --> 00:18:40,670
into functional tests so you know what

463
00:18:39,260 --> 00:18:43,520
you'll see is something like this where

464
00:18:40,670 --> 00:18:45,620
you have your your test steps and in

465
00:18:43,520 --> 00:18:47,000
there you're gonna have some code which

466
00:18:45,620 --> 00:18:50,090
will spin up a browser automation

467
00:18:47,000 --> 00:18:53,030
framework selenium perhaps and actually

468
00:18:50,090 --> 00:18:54,860
go through the steps and if it doesn't

469
00:18:53,030 --> 00:18:57,379
see the response code you're expecting

470
00:18:54,860 --> 00:18:59,629
if it sees a 200 response code when you

471
00:18:57,380 --> 00:19:01,910
clicked on that link you shouldn't be

472
00:18:59,630 --> 00:19:06,350
able to click on then the test fails the

473
00:19:01,910 --> 00:19:09,560
build stops and you have to fix it yeah

474
00:19:06,350 --> 00:19:11,959
and another good use for this kind of

475
00:19:09,560 --> 00:19:14,960
testing is regression testing which is

476
00:19:11,960 --> 00:19:17,570
all mentioned earlier because yeah if so

477
00:19:14,960 --> 00:19:19,040
say if you have a pen test and the pen

478
00:19:17,570 --> 00:19:22,399
test finds a cross-site scripting issue

479
00:19:19,040 --> 00:19:24,620
and you're devs go then they check in

480
00:19:22,400 --> 00:19:27,260
the fix instead of just checking in the

481
00:19:24,620 --> 00:19:30,860
fix checking the fix and the regression

482
00:19:27,260 --> 00:19:32,450
test because now this cross subscripting

483
00:19:30,860 --> 00:19:34,219
seems to regress a lot actually is it

484
00:19:32,450 --> 00:19:36,920
something that seems to happen so it's a

485
00:19:34,220 --> 00:19:38,960
good and so now you have that regression

486
00:19:36,920 --> 00:19:41,420
stat test in there so if someone

487
00:19:38,960 --> 00:19:42,560
reintroduces the bug somehow your tests

488
00:19:41,420 --> 00:19:43,910
are going to start failing in your

489
00:19:42,560 --> 00:19:48,139
pipeline and stuff that's go out to

490
00:19:43,910 --> 00:19:50,150
production so here's our pipeline again

491
00:19:48,140 --> 00:19:52,400
so what have we done we put our static

492
00:19:50,150 --> 00:19:54,500
analysis I dynamic an artist and the

493
00:19:52,400 --> 00:19:56,690
functional tests and now security you

494
00:19:54,500 --> 00:19:58,070
know hopefully it's part of the pipeline

495
00:19:56,690 --> 00:20:01,190
or as I said

496
00:19:58,070 --> 00:20:06,590
security could be its own pipeline which

497
00:20:01,190 --> 00:20:10,040
is okay right so metrics and reporting

498
00:20:06,590 --> 00:20:12,879
so yeah this is very important because

499
00:20:10,040 --> 00:20:14,960
you're doing all this great stuff and

500
00:20:12,880 --> 00:20:17,860
you're good doing all these great stuff

501
00:20:14,960 --> 00:20:21,470
but you know no one knows about it so

502
00:20:17,860 --> 00:20:23,419
the thing about security are big at one

503
00:20:21,470 --> 00:20:26,060
of our challenges is we don't make the

504
00:20:23,420 --> 00:20:28,940
business very much money where we're not

505
00:20:26,060 --> 00:20:30,590
we don't generate revenue I don't think

506
00:20:28,940 --> 00:20:31,760
that I said we don't increase conversion

507
00:20:30,590 --> 00:20:34,580
that's not necessarily true if you're

508
00:20:31,760 --> 00:20:37,010
writing good secure software actually

509
00:20:34,580 --> 00:20:38,929
that does good in secure applications

510
00:20:37,010 --> 00:20:40,250
that does attract customers and you are

511
00:20:38,930 --> 00:20:43,190
actually improving your stuff for

512
00:20:40,250 --> 00:20:46,120
customers but anyway so what we want to

513
00:20:43,190 --> 00:20:48,650
show is we want to show improvements in

514
00:20:46,120 --> 00:20:52,010
closed vulnerabilities or bugs so we're

515
00:20:48,650 --> 00:20:53,600
showing improvement so you could

516
00:20:52,010 --> 00:20:55,990
what's nice if it if you have a graph

517
00:20:53,600 --> 00:20:58,939
that shows you know the number of closed

518
00:20:55,990 --> 00:21:00,410
vulnerabilities even better have a graph

519
00:20:58,940 --> 00:21:02,180
which shows the number of discovered

520
00:21:00,410 --> 00:21:04,190
vulnerabilities and then the number of

521
00:21:02,180 --> 00:21:06,050
closed so what your you know what your

522
00:21:04,190 --> 00:21:07,370
chart should look like is you have the

523
00:21:06,050 --> 00:21:09,770
line going up like this when you

524
00:21:07,370 --> 00:21:11,090
establish your baseline and then you

525
00:21:09,770 --> 00:21:13,790
know now now you're closing them off

526
00:21:11,090 --> 00:21:15,020
because discovered vulnerability it's

527
00:21:13,790 --> 00:21:17,180
actually a good thing and showing that

528
00:21:15,020 --> 00:21:18,530
you have good coverage and that's what

529
00:21:17,180 --> 00:21:19,940
should start happening as you start

530
00:21:18,530 --> 00:21:21,680
putting in this tooling and you start

531
00:21:19,940 --> 00:21:23,510
testing you're increasing your

532
00:21:21,680 --> 00:21:26,990
visibility you're increasing coverage

533
00:21:23,510 --> 00:21:28,879
there's no more unknowns you you have

534
00:21:26,990 --> 00:21:30,830
lots of gnomes you have lots of known

535
00:21:28,880 --> 00:21:32,120
bugs but that's much better than when

536
00:21:30,830 --> 00:21:34,970
they were hidden and you didn't know

537
00:21:32,120 --> 00:21:38,750
about these issues this is a fun thing

538
00:21:34,970 --> 00:21:39,710
to do is to publicize that you know

539
00:21:38,750 --> 00:21:41,330
publicize when you're being attacked

540
00:21:39,710 --> 00:21:44,420
because you're being attacked all the

541
00:21:41,330 --> 00:21:46,600
time you know if you run a you know a

542
00:21:44,420 --> 00:21:49,310
medium to large or even a small online

543
00:21:46,600 --> 00:21:50,810
platform people are always gonna be

544
00:21:49,310 --> 00:21:54,889
trying to have it have a go at it like

545
00:21:50,810 --> 00:21:56,629
an if you I love showing people the the

546
00:21:54,890 --> 00:21:59,000
blocks on our web page Web Application

547
00:21:56,630 --> 00:22:00,650
Firewall because people don't realize

548
00:21:59,000 --> 00:22:02,630
it's happening all the time people are

549
00:22:00,650 --> 00:22:04,490
always you know and it's script cadiz

550
00:22:02,630 --> 00:22:05,960
you know it most of the time it's not

551
00:22:04,490 --> 00:22:08,150
effective but it just goes to show you

552
00:22:05,960 --> 00:22:11,330
there is this constant level of attack

553
00:22:08,150 --> 00:22:11,930
so put it on a dashboard and put it on a

554
00:22:11,330 --> 00:22:14,120
big

555
00:22:11,930 --> 00:22:16,400
if you want to have a world map that

556
00:22:14,120 --> 00:22:19,489
shows attacks with like pew noises like

557
00:22:16,400 --> 00:22:21,560
the the Norse DDoS graph and it'll you

558
00:22:19,490 --> 00:22:25,100
know that's it's a really good way of

559
00:22:21,560 --> 00:22:27,379
getting people interested because people

560
00:22:25,100 --> 00:22:28,939
may not be aware that they think it's

561
00:22:27,380 --> 00:22:30,260
security something special we're just

562
00:22:28,940 --> 00:22:32,210
doing it for compliance but then they

563
00:22:30,260 --> 00:22:39,980
all realize this is a challenge and just

564
00:22:32,210 --> 00:22:41,540
how big the challenges so someone I

565
00:22:39,980 --> 00:22:44,900
think someone asked earlier how do you

566
00:22:41,540 --> 00:22:46,639
incentivize security champion so how do

567
00:22:44,900 --> 00:22:49,430
you incentivize developers to write

568
00:22:46,640 --> 00:22:53,210
secure software and I don't think you

569
00:22:49,430 --> 00:22:54,770
need to because maybe I've just been

570
00:22:53,210 --> 00:22:58,700
have the privilege of working with very

571
00:22:54,770 --> 00:23:00,950
you know very good engineers but we're

572
00:22:58,700 --> 00:23:02,390
we're proud of what we make and we want

573
00:23:00,950 --> 00:23:06,160
to make good stuff we want to make

574
00:23:02,390 --> 00:23:09,410
really good stuff so the incentivize

575
00:23:06,160 --> 00:23:11,600
you're incentivize because you want to

576
00:23:09,410 --> 00:23:14,900
make the best code and you want to make

577
00:23:11,600 --> 00:23:17,510
the most secure code so you know how you

578
00:23:14,900 --> 00:23:20,090
can incentivize that further is start

579
00:23:17,510 --> 00:23:22,070
publicizing who has the most secure code

580
00:23:20,090 --> 00:23:23,990
so you have all these great metrics you

581
00:23:22,070 --> 00:23:26,300
have all these metrics about coverage

582
00:23:23,990 --> 00:23:28,400
and security coverage and security

583
00:23:26,300 --> 00:23:30,320
issues found and closed and so on so

584
00:23:28,400 --> 00:23:32,630
let's make a leak table or a dashboard

585
00:23:30,320 --> 00:23:35,270
of who has who's the best team who's

586
00:23:32,630 --> 00:23:36,680
writing the most secure code and I

587
00:23:35,270 --> 00:23:40,129
guarantee that'll get people motivated

588
00:23:36,680 --> 00:23:42,800
and it which is good it's a good thing

589
00:23:40,130 --> 00:23:43,730
because we're you know we're a lot of

590
00:23:42,800 --> 00:23:45,440
people the Taylor's you were all quite

591
00:23:43,730 --> 00:23:47,630
competitive we want to be making the

592
00:23:45,440 --> 00:23:49,490
best stuff even in internal and it's not

593
00:23:47,630 --> 00:23:51,350
spreading discord or anything like that

594
00:23:49,490 --> 00:23:53,180
but it you know it does get people

595
00:23:51,350 --> 00:23:56,570
motivated me it gets people incentive

596
00:23:53,180 --> 00:23:58,580
Iced important highlight the best not

597
00:23:56,570 --> 00:24:00,889
the worst don't do a league table of

598
00:23:58,580 --> 00:24:02,060
people that have broken the build the

599
00:24:00,890 --> 00:24:05,150
most times that's not going to make you

600
00:24:02,060 --> 00:24:07,790
any friends and so you know who's doing

601
00:24:05,150 --> 00:24:09,620
the best and it's it's you could use

602
00:24:07,790 --> 00:24:11,990
this to promote training you know maybe

603
00:24:09,620 --> 00:24:14,449
you could you know I see you haven't

604
00:24:11,990 --> 00:24:17,360
you've had a lot of introduced and you a

605
00:24:14,450 --> 00:24:19,010
lot of new vulnerabilities let's talk

606
00:24:17,360 --> 00:24:20,270
about let's talk about training would

607
00:24:19,010 --> 00:24:23,090
you be interested in doing a workshop

608
00:24:20,270 --> 00:24:25,550
and it fits with you know we're at just

609
00:24:23,090 --> 00:24:27,919
eat we embrace DevOps

610
00:24:25,550 --> 00:24:31,100
particular aspect we embraces or Tama

611
00:24:27,920 --> 00:24:33,620
nice so if you're in the team you own

612
00:24:31,100 --> 00:24:37,699
everything in terms of how your code

613
00:24:33,620 --> 00:24:40,909
gets to production now there's there's

614
00:24:37,700 --> 00:24:42,260
teams that will have they provide this

615
00:24:40,910 --> 00:24:43,850
you know platform-as-a-service they

616
00:24:42,260 --> 00:24:45,590
provide the pipelines they provide all

617
00:24:43,850 --> 00:24:47,870
that good stuff but in terms of how you

618
00:24:45,590 --> 00:24:50,360
use it and what you do you own it and

619
00:24:47,870 --> 00:24:52,129
this really am this is good because it

620
00:24:50,360 --> 00:24:54,770
promotes that it promotes those team's

621
00:24:52,130 --> 00:24:56,030
ownership of their code ownership of

622
00:24:54,770 --> 00:25:03,200
their software they want to write the

623
00:24:56,030 --> 00:25:06,910
best stuff yeah so this is this always

624
00:25:03,200 --> 00:25:08,990
seems to come up whenever I talk about

625
00:25:06,910 --> 00:25:11,000
continuous delivery and then how we do

626
00:25:08,990 --> 00:25:14,090
security especially when talking to our

627
00:25:11,000 --> 00:25:15,770
PCI QSI because he says but what about

628
00:25:14,090 --> 00:25:17,659
segregation of duties here

629
00:25:15,770 --> 00:25:19,100
you can't let developers have access to

630
00:25:17,660 --> 00:25:21,290
production the world will end

631
00:25:19,100 --> 00:25:22,699
you know if developers has access to

632
00:25:21,290 --> 00:25:24,440
production be a disaster they have no

633
00:25:22,700 --> 00:25:26,000
idea what they're doing apparently so

634
00:25:24,440 --> 00:25:29,600
you know that's completely that's not

635
00:25:26,000 --> 00:25:30,410
true and first of all in this scenario I

636
00:25:29,600 --> 00:25:32,179
described

637
00:25:30,410 --> 00:25:33,650
we're not giving anyone access to

638
00:25:32,180 --> 00:25:35,930
production we're giving people access to

639
00:25:33,650 --> 00:25:39,230
a pipeline this is actually a much

640
00:25:35,930 --> 00:25:41,420
better scenario for security so because

641
00:25:39,230 --> 00:25:46,130
now what that means is anything that

642
00:25:41,420 --> 00:25:49,940
goes from code to production has to go

643
00:25:46,130 --> 00:25:52,190
through the same set of checks it has to

644
00:25:49,940 --> 00:25:55,760
use the pipeline so that's a really good

645
00:25:52,190 --> 00:25:56,780
thing that means that whereas before we

646
00:25:55,760 --> 00:25:58,129
were in this era where there are lots of

647
00:25:56,780 --> 00:25:59,750
different ways you could get to

648
00:25:58,130 --> 00:26:02,240
production and maybe the pipeline could

649
00:25:59,750 --> 00:26:04,640
be bypassed and security could be

650
00:26:02,240 --> 00:26:06,950
bypassed because security is now an

651
00:26:04,640 --> 00:26:09,260
inherent part of this software delivery

652
00:26:06,950 --> 00:26:10,970
pipeline that's actually a much better

653
00:26:09,260 --> 00:26:13,400
situation that's it so that's the way

654
00:26:10,970 --> 00:26:15,680
you sell this and what also helps is if

655
00:26:13,400 --> 00:26:18,440
you have your pipeline you know you have

656
00:26:15,680 --> 00:26:19,730
its ads accountability because you know

657
00:26:18,440 --> 00:26:22,190
who made the change that goes to

658
00:26:19,730 --> 00:26:24,140
production and you know you can add

659
00:26:22,190 --> 00:26:27,290
access control into that and all that

660
00:26:24,140 --> 00:26:29,570
good stuff so that's the thing when I

661
00:26:27,290 --> 00:26:31,129
when I started we continuous delivery I

662
00:26:29,570 --> 00:26:33,530
thought this is terrifying because it

663
00:26:31,130 --> 00:26:34,880
you know it means that there's going to

664
00:26:33,530 --> 00:26:37,399
be all this change happening and we have

665
00:26:34,880 --> 00:26:39,110
no control over it but eventually it

666
00:26:37,400 --> 00:26:42,350
came to the realization that

667
00:26:39,110 --> 00:26:44,059
if you have everyone yeah everyone's

668
00:26:42,350 --> 00:26:45,139
putting stuff to production then changes

669
00:26:44,059 --> 00:26:48,918
are happening all the time for this

670
00:26:45,140 --> 00:26:50,539
happening in a in a static way it's all

671
00:26:48,919 --> 00:26:53,029
it's going all going through the

672
00:26:50,539 --> 00:26:56,000
pipeline and if you can control that and

673
00:26:53,029 --> 00:26:57,260
if you can make security a part of that

674
00:26:56,000 --> 00:27:02,510
you're you're going to be in a good

675
00:26:57,260 --> 00:27:04,460
place so that's a lot of stuff that's a

676
00:27:02,510 --> 00:27:07,070
lot of stuff and as I said there's a lot

677
00:27:04,460 --> 00:27:08,059
of small security team so where do you

678
00:27:07,070 --> 00:27:10,158
where do you start

679
00:27:08,059 --> 00:27:12,139
perhaps you're doing all of that perhaps

680
00:27:10,159 --> 00:27:13,220
you none of that maybe you're doing a

681
00:27:12,139 --> 00:27:15,918
little so if you're not doing any of

682
00:27:13,220 --> 00:27:19,279
that what I would suggest to just pick

683
00:27:15,919 --> 00:27:23,659
one thing and do it right so for example

684
00:27:19,279 --> 00:27:26,389
automate one thing automate your makeup

685
00:27:23,659 --> 00:27:28,610
get a functional test automate it use

686
00:27:26,389 --> 00:27:30,949
that the BDD security framework is it's

687
00:27:28,610 --> 00:27:33,408
free SAP it's free you know you can you

688
00:27:30,950 --> 00:27:35,210
can do that so perhaps there's no

689
00:27:33,409 --> 00:27:37,370
continuous integration at your

690
00:27:35,210 --> 00:27:40,070
organization so start it there's great

691
00:27:37,370 --> 00:27:44,629
security and now driving continuous

692
00:27:40,070 --> 00:27:46,100
integration and you perhaps talk to your

693
00:27:44,630 --> 00:27:49,070
QA guys because they might already have

694
00:27:46,100 --> 00:27:50,480
a test framework that they're using hey

695
00:27:49,070 --> 00:27:51,830
you know a lot of this stuff already so

696
00:27:50,480 --> 00:27:53,330
if maybe they're doing a lot of this and

697
00:27:51,830 --> 00:27:56,720
you can piggyback on what they're doing

698
00:27:53,330 --> 00:27:58,760
and one last tip is to you know measure

699
00:27:56,720 --> 00:28:00,799
and build a baseline because you don't

700
00:27:58,760 --> 00:28:02,500
know you can't measure improvement until

701
00:28:00,799 --> 00:28:08,389
you know what the current situation is

702
00:28:02,500 --> 00:28:10,630
and yeah that's it so does anyone have

703
00:28:08,389 --> 00:28:10,629
any questions

704
00:28:18,860 --> 00:28:33,840
this one at the back of it him someone

705
00:28:22,980 --> 00:28:41,250
over there had a hand up yep oh I can

706
00:28:33,840 --> 00:28:42,720
hear a fter he introduced Marvin since

707
00:28:41,250 --> 00:28:44,310
you are talking about measuring I was

708
00:28:42,720 --> 00:28:46,680
kind of curious and this might be a

709
00:28:44,310 --> 00:28:49,260
naughty question but did you find any

710
00:28:46,680 --> 00:28:51,270
difference in how developers raised the

711
00:28:49,260 --> 00:28:54,810
tickets in Xero if you find that they

712
00:28:51,270 --> 00:28:56,910
actually go both ways maybe they

713
00:28:54,810 --> 00:28:59,070
actually tagged security keywords to get

714
00:28:56,910 --> 00:29:01,050
your attention opinion maybe they alter

715
00:28:59,070 --> 00:29:04,800
their vocabulary did you track any of

716
00:29:01,050 --> 00:29:06,870
that and so what we found in that and I

717
00:29:04,800 --> 00:29:09,389
just what I mean they say it's it is

718
00:29:06,870 --> 00:29:12,629
definitely in its early stages at the

719
00:29:09,390 --> 00:29:15,720
moment but talking to developers I think

720
00:29:12,630 --> 00:29:19,050
what we found is it's they might be more

721
00:29:15,720 --> 00:29:20,580
likely to label security people aren't

722
00:29:19,050 --> 00:29:23,669
going to try and get around this

723
00:29:20,580 --> 00:29:27,360
hopefully because you know if you have

724
00:29:23,670 --> 00:29:29,780
it just means that it just allows you to

725
00:29:27,360 --> 00:29:31,949
start the conversation with security

726
00:29:29,780 --> 00:29:33,720
early instead of having the

727
00:29:31,950 --> 00:29:38,160
conversations with security later on

728
00:29:33,720 --> 00:29:39,690
when it's gone to production and you've

729
00:29:38,160 --> 00:29:41,310
done a pen test and they found a really

730
00:29:39,690 --> 00:29:44,640
bad issue because you didn't start that

731
00:29:41,310 --> 00:29:46,620
early conversation so yes of course it

732
00:29:44,640 --> 00:29:48,240
can be bypassed you could you could put

733
00:29:46,620 --> 00:29:50,879
you could stop using the security

734
00:29:48,240 --> 00:29:53,100
keyword definitely but I suppose it's

735
00:29:50,880 --> 00:29:54,840
you have to take this kind of trust and

736
00:29:53,100 --> 00:29:57,030
verify approach to avoid those

737
00:29:54,840 --> 00:29:58,470
situations I was just curious if you're

738
00:29:57,030 --> 00:30:00,090
tracking how you're altering their

739
00:29:58,470 --> 00:30:02,100
behavior through this it's a type of a/b

740
00:30:00,090 --> 00:30:04,949
testing you're introducing a new style

741
00:30:02,100 --> 00:30:07,260
of culture and so on yeah and the

742
00:30:04,950 --> 00:30:10,680
question is how is that sifting it how

743
00:30:07,260 --> 00:30:12,420
is their developer behavior yeah it'd be

744
00:30:10,680 --> 00:30:14,220
really interesting to do and I'll be

745
00:30:12,420 --> 00:30:16,500
honest like we haven't we don't have the

746
00:30:14,220 --> 00:30:19,920
the sample size to do yet to do kind of

747
00:30:16,500 --> 00:30:22,050
a be testing around that but it's yeah

748
00:30:19,920 --> 00:30:24,150
it would be very interesting too because

749
00:30:22,050 --> 00:30:25,710
at that and you're absolutely right it's

750
00:30:24,150 --> 00:30:27,660
all about you should be able to measure

751
00:30:25,710 --> 00:30:28,169
everything because and that's another

752
00:30:27,660 --> 00:30:30,509
thing

753
00:30:28,169 --> 00:30:31,950
we should measure is how how this does

754
00:30:30,509 --> 00:30:33,210
influence security and how it does

755
00:30:31,950 --> 00:30:34,619
improve things because how do you know

756
00:30:33,210 --> 00:30:52,169
it's doing anything right if you can't

757
00:30:34,619 --> 00:30:53,809
measure it so thank you thanks Andy so

758
00:30:52,169 --> 00:30:56,429
when you talk about training and

759
00:30:53,809 --> 00:30:57,899
developers to obviously to understand

760
00:30:56,429 --> 00:30:59,309
security issues like cross-site

761
00:30:57,899 --> 00:31:00,869
scripting have you ever had the

762
00:30:59,309 --> 00:31:03,090
situation where you've had two trained

763
00:31:00,869 --> 00:31:05,459
security specialists on how to use

764
00:31:03,090 --> 00:31:08,070
pipelines on the concept of a pipeline

765
00:31:05,460 --> 00:31:10,379
and how to be certain that the policy we

766
00:31:08,070 --> 00:31:14,519
put in place using a pipeline is being

767
00:31:10,379 --> 00:31:18,359
put in place watch that so track how do

768
00:31:14,519 --> 00:31:20,999
we train how do we train the kind of

769
00:31:18,359 --> 00:31:22,350
security guys on how to use the pipeline

770
00:31:20,999 --> 00:31:25,470
but also how do we integrate with the

771
00:31:22,350 --> 00:31:28,830
pipeline yeah I mean it's I had to train

772
00:31:25,470 --> 00:31:30,570
myself on how to use teamcity

773
00:31:28,830 --> 00:31:32,129
even as part of this and how to use

774
00:31:30,570 --> 00:31:34,649
Jenkins and how to use looks at NU in

775
00:31:32,129 --> 00:31:39,149
continuous integration tools so it's a

776
00:31:34,649 --> 00:31:41,100
very key part of it for other guys on

777
00:31:39,149 --> 00:31:42,719
the team you know it hasn't been there's

778
00:31:41,100 --> 00:31:46,320
no formal training it's basically sit

779
00:31:42,720 --> 00:31:48,960
sit down and talk to the the guys in the

780
00:31:46,320 --> 00:31:50,850
organization that know this and have

781
00:31:48,960 --> 00:31:53,669
those conversations do a bit of a

782
00:31:50,850 --> 00:31:55,559
workshop on how the pipeline works and

783
00:31:53,669 --> 00:32:00,059
how continuous integration works and how

784
00:31:55,559 --> 00:32:02,039
security can be a part of that it's it's

785
00:32:00,059 --> 00:32:04,049
again I think it's and then you know

786
00:32:02,039 --> 00:32:06,480
it's this promoting this idea of a

787
00:32:04,049 --> 00:32:08,668
two-way conversation between those

788
00:32:06,480 --> 00:32:10,230
platforms the service guys that built

789
00:32:08,669 --> 00:32:12,149
the pipeline and the engineers and

790
00:32:10,230 --> 00:32:14,039
security rather than the security saying

791
00:32:12,149 --> 00:32:16,498
we're going to be part of your pipeline

792
00:32:14,039 --> 00:32:19,649
now put these tools in and sort it out

793
00:32:16,499 --> 00:32:23,190
because that's we did we do that

794
00:32:19,649 --> 00:32:27,539
ourselves you know we we create the

795
00:32:23,190 --> 00:32:30,090
build steps because and so it's good yet

796
00:32:27,539 --> 00:32:33,179
to answer your question absolutely yes I

797
00:32:30,090 --> 00:32:35,189
think security teams should be

798
00:32:33,179 --> 00:32:38,429
completely up to speed on how a pipeline

799
00:32:35,190 --> 00:32:42,470
works just as we would expect developers

800
00:32:38,429 --> 00:32:42,470
to be trained up on security thank you

801
00:32:46,440 --> 00:32:50,760
okay breathe thank you

