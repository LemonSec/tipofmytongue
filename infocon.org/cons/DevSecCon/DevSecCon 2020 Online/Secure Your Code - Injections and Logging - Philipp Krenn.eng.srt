1
00:00:00,260 --> 00:00:04,019
hi and welcome I'm Philip let's dive

2
00:00:04,019 --> 00:00:06,750
into the next session let me share my

3
00:00:06,750 --> 00:00:12,590
screen and while I'm getting there

4
00:00:12,590 --> 00:00:16,680
slice secured injections and the login

5
00:00:16,680 --> 00:00:19,220
is what I want to show you today's so

6
00:00:19,220 --> 00:00:22,680
Alston is probably a topic that you

7
00:00:22,680 --> 00:00:24,840
already have heard of so it's a list of

8
00:00:24,840 --> 00:00:27,480
the most common security issues in web

9
00:00:27,480 --> 00:00:30,449
applications ranging from something like

10
00:00:30,449 --> 00:00:34,250
injections in number one to number ten

11
00:00:34,250 --> 00:00:37,440
logging so let's see what we have here

12
00:00:37,440 --> 00:00:40,020
oftentimes in terms of security you say

13
00:00:40,020 --> 00:00:42,030
well this is kind of fine maybe my

14
00:00:42,030 --> 00:00:43,710
application or maybe this external

15
00:00:43,710 --> 00:00:45,989
application that we're running is okay

16
00:00:45,989 --> 00:00:48,600
if security wise and then you see all

17
00:00:48,600 --> 00:00:51,000
the issues around SQL injections that

18
00:00:51,000 --> 00:00:53,070
keep coming up again and again

19
00:00:53,070 --> 00:00:56,309
and you realize that maybe things are

20
00:00:56,309 --> 00:00:59,879
not as fine as you wanted to be and then

21
00:00:59,879 --> 00:01:01,980
you continue further down the list and

22
00:01:01,980 --> 00:01:03,860
then you see at ten for example

23
00:01:03,860 --> 00:01:05,850
insufficient logging and monitoring you

24
00:01:05,850 --> 00:01:07,290
don't even know what is happening if

25
00:01:07,290 --> 00:01:09,570
your application and then you realize

26
00:01:09,570 --> 00:01:12,030
well maybe nothing this fine in my

27
00:01:12,030 --> 00:01:14,070
application and everything is on fire

28
00:01:14,070 --> 00:01:16,619
and everything is terrible and we kind

29
00:01:16,619 --> 00:01:18,330
of want to avoid this everything is

30
00:01:18,330 --> 00:01:21,810
terrible approach so let's dive into how

31
00:01:21,810 --> 00:01:25,950
we can work around that a bit until it's

32
00:01:25,950 --> 00:01:28,049
like I said I work for elastic as a

33
00:01:28,049 --> 00:01:30,060
developer I focus so I mostly show

34
00:01:30,060 --> 00:01:32,579
interesting technology around our stack

35
00:01:32,579 --> 00:01:34,259
or other things in that general

36
00:01:34,259 --> 00:01:36,240
ecosystem if you've never heard of

37
00:01:36,240 --> 00:01:38,549
elastic we do with things like elastic

38
00:01:38,549 --> 00:01:42,630
search key banner feeds log stash so we

39
00:01:42,630 --> 00:01:44,790
do a lot around collecting information

40
00:01:44,790 --> 00:01:47,579
and we will type into that here and

41
00:01:47,579 --> 00:01:51,570
there today so I generally build hello

42
00:01:51,570 --> 00:01:53,579
world applications so those are probably

43
00:01:53,579 --> 00:01:56,670
simpler than what you will run into in

44
00:01:56,670 --> 00:01:59,159
the real world but you will find a lot

45
00:01:59,159 --> 00:02:01,829
of pieces that you can reuse here so one

46
00:02:01,829 --> 00:02:03,600
of my problems are kind of simplified

47
00:02:03,600 --> 00:02:05,880
and especially for 35 minutes we need to

48
00:02:05,880 --> 00:02:08,610
keep it kind of short hopefully you will

49
00:02:08,610 --> 00:02:11,190
learn something that you can apply this

50
00:02:11,190 --> 00:02:12,650
afternoon or more

51
00:02:12,650 --> 00:02:14,569
morning already in production so let's

52
00:02:14,569 --> 00:02:16,700
see and let's dive into the problem I

53
00:02:16,700 --> 00:02:19,340
have a very simple application running

54
00:02:19,340 --> 00:02:22,700
at Sierra WTF if you wonder where that

55
00:02:22,700 --> 00:02:23,239
comes from

56
00:02:23,239 --> 00:02:26,090
wTF is obviously the right to mean for

57
00:02:26,090 --> 00:02:28,760
any demo let's hope it doesn't break

58
00:02:28,760 --> 00:02:29,359
today

59
00:02:29,359 --> 00:02:33,140
Clara is my Twitter and github Hangul

60
00:02:33,140 --> 00:02:35,120
and I try to use it wherever I can it's

61
00:02:35,120 --> 00:02:38,840
a rot13 of my last name which is friend

62
00:02:38,840 --> 00:02:41,959
you rotate the letters by 13 you're at

63
00:02:41,959 --> 00:02:44,209
this the nice thing about rot13

64
00:02:44,209 --> 00:02:47,120
is if you rotate by 13 again you're back

65
00:02:47,120 --> 00:02:50,239
at the original because well 26 letters

66
00:02:50,239 --> 00:02:52,459
in the alphabet so encryption and

67
00:02:52,459 --> 00:02:54,709
decryption is the same just in case you

68
00:02:54,709 --> 00:02:57,379
were wondering and what we have here is

69
00:02:57,379 --> 00:02:59,629
I have a lot important I will show you

70
00:02:59,629 --> 00:03:01,760
form in a moment I just want to show you

71
00:03:01,760 --> 00:03:05,030
the code first and we have really the

72
00:03:05,030 --> 00:03:07,939
hello world or code injections here we

73
00:03:07,939 --> 00:03:10,129
have a select star from employees where

74
00:03:10,129 --> 00:03:12,920
a name and we just pass in the variable

75
00:03:12,920 --> 00:03:16,730
here and password shall one so we hash

76
00:03:16,730 --> 00:03:19,239
the password that we provide here and

77
00:03:19,239 --> 00:03:22,519
then we don't escape this we don't have

78
00:03:22,519 --> 00:03:24,049
a stored procedure we don't have any

79
00:03:24,049 --> 00:03:26,269
other security mechanisms really around

80
00:03:26,269 --> 00:03:29,780
this so this will be very insecure but

81
00:03:29,780 --> 00:03:32,329
let's look at the form let's create the

82
00:03:32,329 --> 00:03:34,760
user and then we can continue from there

83
00:03:34,760 --> 00:03:38,569
so this is my application and let's say

84
00:03:38,569 --> 00:03:40,790
we want to add another user so right now

85
00:03:40,790 --> 00:03:43,430
I have shy our CEO I'm only one of our

86
00:03:43,430 --> 00:03:45,739
co-founders and me in the application

87
00:03:45,739 --> 00:03:48,109
and we want to add another colleague or

88
00:03:48,109 --> 00:03:52,220
blastic employee so I need to login my

89
00:03:52,220 --> 00:03:54,349
credentials are Phyllis and my password

90
00:03:54,349 --> 00:03:57,590
is secret which is not very secret but

91
00:03:57,590 --> 00:03:59,299
good enough for here and let's say we

92
00:03:59,299 --> 00:04:02,150
create another colleague so I'll create

93
00:04:02,150 --> 00:04:05,599
my colleague Alex space in Munich who

94
00:04:05,599 --> 00:04:09,109
has a salary and I don't know he has

95
00:04:09,109 --> 00:04:12,079
attached and I create this new user so

96
00:04:12,079 --> 00:04:17,269
this worked fine and maybe you don't

97
00:04:17,269 --> 00:04:18,829
have the right credentials and you still

98
00:04:18,829 --> 00:04:20,959
want to add somebody to elastic or maybe

99
00:04:20,959 --> 00:04:23,020
you want to add yourself to Allah

100
00:04:23,020 --> 00:04:26,240
coming back to the hello world of SQL

101
00:04:26,240 --> 00:04:29,030
injections how do we circumvent this now

102
00:04:29,030 --> 00:04:32,860
so what you could do is you could just

103
00:04:32,860 --> 00:04:36,110
close the current command say go through

104
00:04:36,110 --> 00:04:39,260
and comment out the rest of life so what

105
00:04:39,260 --> 00:04:41,240
you would have here is then you would

106
00:04:41,240 --> 00:04:44,840
pass in here this for true or maybe you

107
00:04:44,840 --> 00:04:49,000
would pass it in here and then just

108
00:04:49,000 --> 00:04:51,500
comment out whatever it comes after that

109
00:04:51,500 --> 00:04:54,860
so we can very easily do that let me

110
00:04:54,860 --> 00:04:58,850
switch to my form again so we close the

111
00:04:58,850 --> 00:05:01,400
name because we don't care we say for

112
00:05:01,400 --> 00:05:04,160
true and we comment out the rest of the

113
00:05:04,160 --> 00:05:06,230
line we need to provide some password

114
00:05:06,230 --> 00:05:07,880
but that will be commented out as well

115
00:05:07,880 --> 00:05:10,070
because this form speed needs to be

116
00:05:10,070 --> 00:05:13,850
filled but if I run that even without

117
00:05:13,850 --> 00:05:16,400
having any user or credentials I can

118
00:05:16,400 --> 00:05:19,430
just break into the form and I can just

119
00:05:19,430 --> 00:05:27,010
say I don't know this is a wrong user in

120
00:05:27,010 --> 00:05:33,080
who is coming from let's see how so we

121
00:05:33,080 --> 00:05:35,840
have our wrong user who has been created

122
00:05:35,840 --> 00:05:40,520
in our port here so this was not great

123
00:05:40,520 --> 00:05:42,950
but this was also very simple let's see

124
00:05:42,950 --> 00:05:45,470
if we can find other interesting pieces

125
00:05:45,470 --> 00:05:48,350
in this application so we have done this

126
00:05:48,350 --> 00:05:51,410
let's have a look around or let's

127
00:05:51,410 --> 00:05:54,350
discuss the problem in general so yes

128
00:05:54,350 --> 00:05:56,570
SQL injections are thing and has been

129
00:05:56,570 --> 00:05:58,640
around for long if you are coming from

130
00:05:58,640 --> 00:06:01,100
the newer world of draft um some people

131
00:06:01,100 --> 00:06:03,740
might call SQL injections be accidental

132
00:06:03,740 --> 00:06:06,140
drops well suddenly you have all the

133
00:06:06,140 --> 00:06:08,420
powers and you can run whatever commands

134
00:06:08,420 --> 00:06:11,810
you want and I find this very nice

135
00:06:11,810 --> 00:06:15,710
comparison for graph GL which is

136
00:06:15,710 --> 00:06:17,270
probably not entirely true so don't

137
00:06:17,270 --> 00:06:20,210
complain too much about it you have

138
00:06:20,210 --> 00:06:23,000
probably seen this table a somewhere

139
00:06:23,000 --> 00:06:25,910
already it's called little bobby tables

140
00:06:25,910 --> 00:06:31,070
where somebody means their kids clothes

141
00:06:31,070 --> 00:06:33,290
whatever you're doing here drop table

142
00:06:33,290 --> 00:06:35,360
students and comment out the rest of the

143
00:06:35,360 --> 00:06:36,289
line this

144
00:06:36,289 --> 00:06:38,899
similar to what I have tried to do and

145
00:06:38,899 --> 00:06:41,449
we can by the way try this out as well

146
00:06:41,449 --> 00:06:45,499
later on and see what happens so don't

147
00:06:45,499 --> 00:06:47,449
call your kids like that or especially

148
00:06:47,449 --> 00:06:50,149
if you run any database systems don't

149
00:06:50,149 --> 00:06:53,059
allow SQL injections which are

150
00:06:53,059 --> 00:06:55,339
susceptible to little poppy tables

151
00:06:55,339 --> 00:06:57,710
otherwise you will probably learn your

152
00:06:57,710 --> 00:07:00,289
lessons at the latest when your students

153
00:07:00,289 --> 00:07:02,449
try something like this so don't be

154
00:07:02,449 --> 00:07:05,839
caught there another thing that might be

155
00:07:05,839 --> 00:07:09,830
interesting is if I look at some

156
00:07:09,830 --> 00:07:11,389
employee here so you see we have

157
00:07:11,389 --> 00:07:13,520
Cheyenne which here just being displayed

158
00:07:13,520 --> 00:07:15,229
and I could go back what is interesting

159
00:07:15,229 --> 00:07:18,979
is I just pass in the ID here and this

160
00:07:18,979 --> 00:07:21,649
lists the users of examples if I had old

161
00:07:21,649 --> 00:07:24,830
user - and this will switch to the next

162
00:07:24,830 --> 00:07:29,149
user and once again the code is probably

163
00:07:29,149 --> 00:07:31,240
not as good as it could be

164
00:07:31,240 --> 00:07:34,520
let's have a look at the actual code in

165
00:07:34,520 --> 00:07:40,969
the I so that should be in HTML and I

166
00:07:40,969 --> 00:07:45,259
think we have some read pH so what I'm

167
00:07:45,259 --> 00:07:49,189
doing here is this is the command where

168
00:07:49,189 --> 00:07:51,649
I am basically fetching the user so you

169
00:07:51,649 --> 00:07:53,899
can see it's a select all from Floyd's

170
00:07:53,899 --> 00:07:57,229
where Adi is whatever ID we provide in

171
00:07:57,229 --> 00:08:01,189
here again no filtering no escaping no

172
00:08:01,189 --> 00:08:03,469
stored procedure or anything and what we

173
00:08:03,469 --> 00:08:06,409
do here and by the way we visit in the

174
00:08:06,409 --> 00:08:09,680
other form as well and we did love now

175
00:08:09,680 --> 00:08:12,949
the SQL statement and this will come in

176
00:08:12,949 --> 00:08:14,509
very handy when we try to figure out

177
00:08:14,509 --> 00:08:16,639
what has been happening here afterwards

178
00:08:16,639 --> 00:08:19,639
so we always lock this SQL statement

179
00:08:19,639 --> 00:08:21,769
before running it which might be

180
00:08:21,769 --> 00:08:23,539
generally a good idea if you run into

181
00:08:23,539 --> 00:08:25,639
any SQL injections because then it is

182
00:08:25,639 --> 00:08:28,449
you can figure out what went wrong and

183
00:08:28,449 --> 00:08:33,070
then I just run this command here and

184
00:08:33,070 --> 00:08:34,419
[Music]

185
00:08:34,419 --> 00:08:37,099
just to keep it more interesting I'm

186
00:08:37,099 --> 00:08:40,849
using my sequel multi period so this

187
00:08:40,849 --> 00:08:43,279
will not be able only to run single

188
00:08:43,279 --> 00:08:47,300
query but multiple queries and why this

189
00:08:47,300 --> 00:08:48,860
is making a difference here I will show

190
00:08:48,860 --> 00:08:50,500
you in a moment

191
00:08:50,500 --> 00:08:54,140
so what might we have or do here in our

192
00:08:54,140 --> 00:08:57,200
application to make a difference so this

193
00:08:57,200 --> 00:08:59,390
looks interesting but before I give you

194
00:08:59,390 --> 00:09:01,700
the final solution of how to break this

195
00:09:01,700 --> 00:09:04,820
let's just take a look with SQL map of

196
00:09:04,820 --> 00:09:07,460
how this looks like so what we want to

197
00:09:07,460 --> 00:09:09,980
do is or if you've never seen STL mmm

198
00:09:09,980 --> 00:09:11,780
and if you'll map is an automated tool

199
00:09:11,780 --> 00:09:13,910
that checks for SQL injections in

200
00:09:13,910 --> 00:09:16,790
databases and tries to take them over or

201
00:09:16,790 --> 00:09:19,010
it basically just scans and price

202
00:09:19,010 --> 00:09:22,340
parameters and in various variations see

203
00:09:22,340 --> 00:09:26,630
what might be possible in a specific

204
00:09:26,630 --> 00:09:28,760
form or variable that you pass on and

205
00:09:28,760 --> 00:09:30,350
then will tell you well I found

206
00:09:30,350 --> 00:09:31,700
something that looks kind of suspicious

207
00:09:31,700 --> 00:09:34,430
yet and what you need to do is you'll

208
00:09:34,430 --> 00:09:37,970
need to run SQL map against this URL and

209
00:09:37,970 --> 00:09:40,370
then we just provided with this ID here

210
00:09:40,370 --> 00:09:42,440
and then SQL map would try to run

211
00:09:42,440 --> 00:09:44,720
interesting parameters against this ID

212
00:09:44,720 --> 00:09:47,930
parameter also I run is with purge since

213
00:09:47,930 --> 00:09:49,850
I have been running this before already

214
00:09:49,850 --> 00:09:53,780
so we can actually clean this or it

215
00:09:53,780 --> 00:09:56,660
doesn't run into or reuse old

216
00:09:56,660 --> 00:09:58,610
experiments I just want to show you that

217
00:09:58,610 --> 00:10:02,810
fresh appreciated so what I run is SQL

218
00:10:02,810 --> 00:10:09,410
map search URL and then I also purge and

219
00:10:09,410 --> 00:10:13,990
I think we should quote this

220
00:10:14,230 --> 00:10:17,389
[Music]

221
00:10:18,040 --> 00:10:20,950
so this is SQL map it's running it's

222
00:10:20,950 --> 00:10:23,230
starting up and it starts running

223
00:10:23,230 --> 00:10:25,780
various parameters here after some

224
00:10:25,780 --> 00:10:27,280
commands it will actually figure out

225
00:10:27,280 --> 00:10:31,650
that this is running against my sequel

226
00:10:32,550 --> 00:10:35,520
so here you can see when it's trying

227
00:10:35,520 --> 00:10:39,610
sleep command against my sequel this is

228
00:10:39,610 --> 00:10:42,310
- it's taking a bit longer and then it

229
00:10:42,310 --> 00:10:44,710
will tell you well I think this is my

230
00:10:44,710 --> 00:10:47,050
ticket which is correct in this case so

231
00:10:47,050 --> 00:10:49,300
yes I only want to run test for my

232
00:10:49,300 --> 00:10:51,520
sequel and yes I also want to run the

233
00:10:51,520 --> 00:10:54,760
risk ear command so I don't have any

234
00:10:54,760 --> 00:10:56,020
production data so I'm not going to

235
00:10:56,020 --> 00:10:58,660
destroy anything here so we can just run

236
00:10:58,660 --> 00:11:02,650
this at some point now it will ask us

237
00:11:02,650 --> 00:11:04,300
that it's purely test any other

238
00:11:04,300 --> 00:11:05,890
parameters no nothing else will be

239
00:11:05,890 --> 00:11:07,780
vulnerable here so we can just finish it

240
00:11:07,780 --> 00:11:12,010
and then it tells us well the backend

241
00:11:12,010 --> 00:11:14,500
database is my sequel and this is

242
00:11:14,500 --> 00:11:16,240
running on an engine X Server which is

243
00:11:16,240 --> 00:11:19,030
also correct and and it's found a couple

244
00:11:19,030 --> 00:11:21,580
of interesting things so for example if

245
00:11:21,580 --> 00:11:23,980
found out that it can run the human fury

246
00:11:23,980 --> 00:11:26,530
and found multiple columns that it could

247
00:11:26,530 --> 00:11:29,230
access here or that it could do a time

248
00:11:29,230 --> 00:11:36,880
baseline SQL attack here so what could

249
00:11:36,880 --> 00:11:40,870
we do with our data I've already shown

250
00:11:40,870 --> 00:11:43,300
you the code here what we could do now

251
00:11:43,300 --> 00:11:45,550
is we could just run the second command

252
00:11:45,550 --> 00:11:47,800
here so we could again finish this one

253
00:11:47,800 --> 00:11:49,780
and just attach the second command

254
00:11:49,780 --> 00:11:53,350
because we're using this multi query so

255
00:11:53,350 --> 00:11:55,720
next to that select statement we could

256
00:11:55,720 --> 00:11:59,440
just insert more users maybe something

257
00:11:59,440 --> 00:12:02,410
like this where we add a bad actor for

258
00:12:02,410 --> 00:12:04,930
example so we're just adding a second

259
00:12:04,930 --> 00:12:08,200
after the semicolon f-scale command

260
00:12:08,200 --> 00:12:10,480
after the first one and just add our

261
00:12:10,480 --> 00:12:13,150
second one since you don't want to see

262
00:12:13,150 --> 00:12:16,570
me type this I'll just copy and paste

263
00:12:16,570 --> 00:12:22,240
this otherwise I'll just miss type and

264
00:12:22,240 --> 00:12:23,980
nobody would be happier so what I'm

265
00:12:23,980 --> 00:12:27,100
doing is I keep the previous command

266
00:12:27,100 --> 00:12:29,080
I keep the ID and then I just run the

267
00:12:29,080 --> 00:12:31,600
second parameter and after running this

268
00:12:31,600 --> 00:12:33,790
nothing seems to happen but when I go

269
00:12:33,790 --> 00:12:37,120
back to the initial form you see that

270
00:12:37,120 --> 00:12:41,019
the bad actor is here now and he has

271
00:12:41,019 --> 00:12:43,269
been since I only provided the name the

272
00:12:43,269 --> 00:12:45,910
rest are default venues so everybody is

273
00:12:45,910 --> 00:12:49,509
from Earth and has a salary of zero so

274
00:12:49,509 --> 00:12:51,880
that was pretty easy and another

275
00:12:51,880 --> 00:12:55,120
interesting thing here by the way is we

276
00:12:55,120 --> 00:12:58,120
don't escape the output either so once

277
00:12:58,120 --> 00:13:00,910
you add something bad here and that will

278
00:13:00,910 --> 00:13:03,069
be shown directly to you this one is

279
00:13:03,069 --> 00:13:05,019
slightly longer so what I'm doing here

280
00:13:05,019 --> 00:13:09,190
is I'm adding not just a simple string

281
00:13:09,190 --> 00:13:12,250
but I'm adding a script with an alert

282
00:13:12,250 --> 00:13:15,490
hello friend so let's see when I run

283
00:13:15,490 --> 00:13:18,970
this and I go back then you will have a

284
00:13:18,970 --> 00:13:21,399
pop-up every time you try to open this

285
00:13:21,399 --> 00:13:25,750
form which is slightly annoying but this

286
00:13:25,750 --> 00:13:28,000
is what we have just added because where

287
00:13:28,000 --> 00:13:29,800
we just had a script tag here so there

288
00:13:29,800 --> 00:13:33,310
is no actual string to display and just

289
00:13:33,310 --> 00:13:36,250
a pop-up that we have had or that we

290
00:13:36,250 --> 00:13:38,079
have just see so this is what I've done

291
00:13:38,079 --> 00:13:39,970
here I just added a script and you could

292
00:13:39,970 --> 00:13:41,380
do whatever you want you could even

293
00:13:41,380 --> 00:13:43,740
break the entire table if you have or

294
00:13:43,740 --> 00:13:46,029
provide some HTML that cannot be

295
00:13:46,029 --> 00:13:47,620
rendered properly anymore then you will

296
00:13:47,620 --> 00:13:49,300
break the entire page and nothing would

297
00:13:49,300 --> 00:13:54,430
work anymore so not good pretty broken

298
00:13:54,430 --> 00:13:56,560
application but if you run some

299
00:13:56,560 --> 00:13:57,850
application like this and somebody

300
00:13:57,850 --> 00:13:59,589
starts breaking into it you probably

301
00:13:59,589 --> 00:14:01,540
want to figure out what the heck has

302
00:14:01,540 --> 00:14:03,850
happened and what is the security issue

303
00:14:03,850 --> 00:14:05,470
and what do I need to fix

304
00:14:05,470 --> 00:14:09,189
so you want to probably look at you log

305
00:14:09,189 --> 00:14:11,730
and ideally you have locks otherwise

306
00:14:11,730 --> 00:14:14,170
yeah it's not so great

307
00:14:14,170 --> 00:14:16,269
one few that some people have is the

308
00:14:16,269 --> 00:14:18,279
people break into your application they

309
00:14:18,279 --> 00:14:20,769
might be able to delete the locks you

310
00:14:20,769 --> 00:14:22,449
put recommended by not logging at all

311
00:14:22,449 --> 00:14:24,399
but again that's that's not really the

312
00:14:24,399 --> 00:14:26,259
solution like you want to have logs

313
00:14:26,259 --> 00:14:28,120
see what people have been trying here

314
00:14:28,120 --> 00:14:30,550
and we basically want to log all the

315
00:14:30,550 --> 00:14:33,939
things so as much as possible and I only

316
00:14:33,939 --> 00:14:36,069
have these log statements for the SQL

317
00:14:36,069 --> 00:14:38,230
statements but for my example this will

318
00:14:38,230 --> 00:14:43,510
be exactly what I want so how do I get

319
00:14:43,510 --> 00:14:45,040
those logs well I could

320
00:14:45,040 --> 00:14:47,769
now ssh into the right server and then

321
00:14:47,769 --> 00:14:50,769
tails through the lords or prep through

322
00:14:50,769 --> 00:14:52,180
the logs but that's probably not

323
00:14:52,180 --> 00:14:54,070
scalable if you have more than two or

324
00:14:54,070 --> 00:14:57,639
three service and if you have very large

325
00:14:57,639 --> 00:14:59,800
stockpiles this is also not going to be

326
00:14:59,800 --> 00:15:01,750
much fun like you will end up pretty

327
00:15:01,750 --> 00:15:04,569
much like this little submarine up here

328
00:15:04,569 --> 00:15:07,209
that's trying to find something in this

329
00:15:07,209 --> 00:15:11,829
bigger titanic life log file and you

330
00:15:11,829 --> 00:15:14,829
don't find anything and perhaps you

331
00:15:14,829 --> 00:15:17,290
might be already using the infamous or

332
00:15:17,290 --> 00:15:19,930
famous Alex XO classic search to store

333
00:15:19,930 --> 00:15:23,980
your data log sense to get parts and

334
00:15:23,980 --> 00:15:26,199
enrich your data and the banner to

335
00:15:26,199 --> 00:15:26,980
visualize it

336
00:15:26,980 --> 00:15:30,130
when I say parse it's normally a regular

337
00:15:30,130 --> 00:15:32,019
expression trying to parse different

338
00:15:32,019 --> 00:15:35,800
pieces out of one log line and like the

339
00:15:35,800 --> 00:15:39,069
timestamp a log level the message maybe

340
00:15:39,069 --> 00:15:40,899
some other metadata that you have an

341
00:15:40,899 --> 00:15:42,730
enrichment would be adding additional

342
00:15:42,730 --> 00:15:45,880
metadata to that on top of it so if you

343
00:15:45,880 --> 00:15:49,389
have anything like I don't know you run

344
00:15:49,389 --> 00:15:50,920
in a specific container and you want to

345
00:15:50,920 --> 00:15:52,389
know the container idea where this is

346
00:15:52,389 --> 00:15:54,610
running order version and you could add

347
00:15:54,610 --> 00:15:55,959
that and then you could figure out the

348
00:15:55,959 --> 00:15:57,699
case this was this specific container

349
00:15:57,699 --> 00:16:00,040
version or container ID where we have

350
00:16:00,040 --> 00:16:04,029
security and today's that actually looks

351
00:16:04,029 --> 00:16:06,010
more like this so we have added this

352
00:16:06,010 --> 00:16:08,079
other components called beets which is

353
00:16:08,079 --> 00:16:10,329
like a lightweight agent or shipper so

354
00:16:10,329 --> 00:16:12,490
for a lot of files we have five bits and

355
00:16:12,490 --> 00:16:15,399
that is pretty much like 10s but over

356
00:16:15,399 --> 00:16:17,769
the network end on steroids so this can

357
00:16:17,769 --> 00:16:19,889
just take a long time forward it to

358
00:16:19,889 --> 00:16:22,540
elasticsearch to store it and then keep

359
00:16:22,540 --> 00:16:24,970
on I can visualize it sometimes you want

360
00:16:24,970 --> 00:16:26,980
to have log stash in here sometimes you

361
00:16:26,980 --> 00:16:29,050
don't need it for today I will keep it

362
00:16:29,050 --> 00:16:30,970
simple we won't have log stash because

363
00:16:30,970 --> 00:16:34,209
five bit with just four words lost if we

364
00:16:34,209 --> 00:16:36,220
need to do any parsing elasticsearch can

365
00:16:36,220 --> 00:16:39,279
do with some parsing as well and then

366
00:16:39,279 --> 00:16:41,230
Kabana can just visualize what has it

367
00:16:41,230 --> 00:16:45,040
happening so before we get into this

368
00:16:45,040 --> 00:16:47,829
file let's take a quick look on what we

369
00:16:47,829 --> 00:16:51,970
actually have here so going back to my

370
00:16:51,970 --> 00:16:54,310
application what I have done here is and

371
00:16:54,310 --> 00:16:56,680
this is really the simplest form of

372
00:16:56,680 --> 00:16:57,790
logging that you could

373
00:16:57,790 --> 00:17:00,730
anywhere I'm just logging out to bar log

374
00:17:00,730 --> 00:17:03,670
app law let's take a very quick look at

375
00:17:03,670 --> 00:17:10,630
this by say let's just again and you can

376
00:17:10,630 --> 00:17:13,720
see this was the last SQL query in which

377
00:17:13,720 --> 00:17:16,119
PHP that I have been running so this is

378
00:17:16,119 --> 00:17:18,880
just collecting all the desperate

379
00:17:18,880 --> 00:17:20,770
theories that we have real money and you

380
00:17:20,770 --> 00:17:22,810
can see this was a few lms that was

381
00:17:22,810 --> 00:17:26,290
trying some Arora version whatever query

382
00:17:26,290 --> 00:17:28,660
so this was trying some whatever tricky

383
00:17:28,660 --> 00:17:31,600
queries whereas here you can see these

384
00:17:31,600 --> 00:17:34,120
where my injections where I was on

385
00:17:34,120 --> 00:17:36,580
adding the bad actor or mine hello

386
00:17:36,580 --> 00:17:39,880
friends haha and now we obviously want

387
00:17:39,880 --> 00:17:43,120
to collect that and store that in that

388
00:17:43,120 --> 00:17:48,420
such so for that let's take a quick look

389
00:17:48,420 --> 00:17:57,180
file bit and find it can collect some

390
00:17:57,180 --> 00:18:00,190
standardized or evil log files

391
00:18:00,190 --> 00:18:02,140
automatically so basically here those

392
00:18:02,140 --> 00:18:03,670
are the so-called modules where they

393
00:18:03,670 --> 00:18:06,430
will take the Apache log and taking my

394
00:18:06,430 --> 00:18:09,160
sequel log and the nginx dot and system

395
00:18:09,160 --> 00:18:12,250
logs so just collect those where we know

396
00:18:12,250 --> 00:18:14,170
this is the default location and

397
00:18:14,170 --> 00:18:16,390
standard form of them and then they will

398
00:18:16,390 --> 00:18:18,310
be automatically picked up and parsed

399
00:18:18,310 --> 00:18:20,530
and we can easily work with that and we

400
00:18:20,530 --> 00:18:22,780
could if we have time and look at the

401
00:18:22,780 --> 00:18:23,620
nginx

402
00:18:23,620 --> 00:18:25,510
access logs for example where you would

403
00:18:25,510 --> 00:18:28,510
see what is the response code how long

404
00:18:28,510 --> 00:18:29,890
does it take how much traffic do we

405
00:18:29,890 --> 00:18:32,080
generate etc and all of that could be

406
00:18:32,080 --> 00:18:34,630
put into a dashboard ect but what is

407
00:18:34,630 --> 00:18:36,010
more interesting and what I want to

408
00:18:36,010 --> 00:18:38,890
focus on right now is that dialogue a

409
00:18:38,890 --> 00:18:41,650
blog file that we have been generating

410
00:18:41,650 --> 00:18:44,830
so what I'm saying here is I want to

411
00:18:44,830 --> 00:18:48,520
collect this log file and I'm just

412
00:18:48,520 --> 00:18:52,180
putting that into or storing that with

413
00:18:52,180 --> 00:18:56,110
an extra fee application dot app so this

414
00:18:56,110 --> 00:18:57,640
is how we will be able to find that

415
00:18:57,640 --> 00:18:59,380
since we are collecting lots of other

416
00:18:59,380 --> 00:19:01,330
log files as well and there will be

417
00:19:01,330 --> 00:19:03,280
quite a bit of information application

418
00:19:03,280 --> 00:19:05,530
app is how we'll be able to find it and

419
00:19:05,530 --> 00:19:07,630
probably you should mainly replicates a

420
00:19:07,630 --> 00:19:11,320
bit better than F but for a demo and

421
00:19:11,320 --> 00:19:14,980
lol this will do so let's head over to

422
00:19:14,980 --> 00:19:18,550
my browser and talk about the classic

423
00:19:18,550 --> 00:19:20,230
way how you would approach this would

424
00:19:20,230 --> 00:19:22,360
have been to use discover but there's a

425
00:19:22,360 --> 00:19:24,070
better way to actually see your logs

426
00:19:24,070 --> 00:19:26,950
nowadays and it's under this logo and

427
00:19:26,950 --> 00:19:29,620
it's called logs so this already sounds

428
00:19:29,620 --> 00:19:32,950
promising I think I just should just

429
00:19:32,950 --> 00:19:35,350
make this slightly larger so once my

430
00:19:35,350 --> 00:19:38,410
screen has loaded let me make this

431
00:19:38,410 --> 00:19:42,040
slightly larger so we will actually see

432
00:19:42,040 --> 00:19:47,740
a bit more so this is the stream of logs

433
00:19:47,740 --> 00:19:49,990
this is pretty much what you were used

434
00:19:49,990 --> 00:19:52,480
to in teh left when you were just

435
00:19:52,480 --> 00:19:53,770
following a log file

436
00:19:53,770 --> 00:19:56,860
this view is very similar to that so

437
00:19:56,860 --> 00:19:59,980
here you can see this is just a mapping

438
00:19:59,980 --> 00:20:02,500
and I'm can live stream so this is

439
00:20:02,500 --> 00:20:05,200
really the tailless feeling this will

440
00:20:05,200 --> 00:20:06,940
just show you what it is collecting and

441
00:20:06,940 --> 00:20:09,130
you can see we have some edge logs and I

442
00:20:09,130 --> 00:20:11,350
could scroll up and then you might see

443
00:20:11,350 --> 00:20:16,330
okay we have some my sequel laws and ya

444
00:20:16,330 --> 00:20:18,640
goin error reading communication packets

445
00:20:18,640 --> 00:20:20,470
so something is wrong with my sequel

446
00:20:20,470 --> 00:20:22,810
here and we have another Apache access

447
00:20:22,810 --> 00:20:25,150
law so we're collecting all kinds of

448
00:20:25,150 --> 00:20:28,120
pieces of information but let's stop

449
00:20:28,120 --> 00:20:31,620
this and or let's actually filter down

450
00:20:31,620 --> 00:20:33,790
to the application that we're interested

451
00:20:33,790 --> 00:20:37,890
in here so what I want to have here is

452
00:20:37,890 --> 00:20:42,520
application and let me change my zoom

453
00:20:42,520 --> 00:20:47,560
level again this is caesium so this will

454
00:20:47,560 --> 00:20:48,970
suggest all the fields that are

455
00:20:48,970 --> 00:20:51,040
available so here I have application and

456
00:20:51,040 --> 00:20:54,760
then I can just say equals and then if

457
00:20:54,760 --> 00:20:56,200
we even suggest like what are the

458
00:20:56,200 --> 00:20:59,410
applications that or which values are

459
00:20:59,410 --> 00:21:01,420
available for this application fee and

460
00:21:01,420 --> 00:21:03,730
app is exactly what we had in here so

461
00:21:03,730 --> 00:21:08,620
when I flip it down on that and I can

462
00:21:08,620 --> 00:21:12,970
just so here we have collected the

463
00:21:12,970 --> 00:21:14,830
exactly the same thing that we have seen

464
00:21:14,830 --> 00:21:19,810
in the log file and if I open another

465
00:21:19,810 --> 00:21:23,270
view here

466
00:21:23,270 --> 00:21:26,610
then the next statement and it will

467
00:21:26,610 --> 00:21:28,980
appear in I don't know couple of seconds

468
00:21:28,980 --> 00:21:31,560
you will basically see what the

469
00:21:31,560 --> 00:21:34,830
application is doing here so you will

470
00:21:34,830 --> 00:21:38,580
always have a fresh view of what do

471
00:21:38,580 --> 00:21:41,850
queries are looking like and what do

472
00:21:41,850 --> 00:21:44,520
what your users are doing and you could

473
00:21:44,520 --> 00:21:47,030
also use highlights so you could only

474
00:21:47,030 --> 00:21:51,450
just look for research be HP and just

475
00:21:51,450 --> 00:21:56,040
see for example which which we PHP

476
00:21:56,040 --> 00:22:01,290
accesses we you have have and except

477
00:22:01,290 --> 00:22:03,690
that I just stopped the screaming

478
00:22:03,690 --> 00:22:05,730
because with zoom running in the

479
00:22:05,730 --> 00:22:07,710
background this seems to be struggling a

480
00:22:07,710 --> 00:22:11,070
little bit so we just let this run like

481
00:22:11,070 --> 00:22:13,920
this so this is where you can see what

482
00:22:13,920 --> 00:22:15,540
we have collected here you could also

483
00:22:15,540 --> 00:22:18,960
open one of these entries here and you

484
00:22:18,960 --> 00:22:20,880
can see we have not only collected the

485
00:22:20,880 --> 00:22:23,130
raw log message but we have already also

486
00:22:23,130 --> 00:22:25,080
enriched that with some other meta

487
00:22:25,080 --> 00:22:27,210
information so for example I would know

488
00:22:27,210 --> 00:22:30,020
that this is this is a bit instanceid

489
00:22:30,020 --> 00:22:33,000
this is running on AWS so we could

490
00:22:33,000 --> 00:22:35,040
pinpoint the instance ID that might have

491
00:22:35,040 --> 00:22:37,380
been compromised by an attacker and then

492
00:22:37,380 --> 00:22:39,060
do something or you could see for

493
00:22:39,060 --> 00:22:41,310
example this is the IP address or the

494
00:22:41,310 --> 00:22:43,980
host ID we could also see what operating

495
00:22:43,980 --> 00:22:46,290
system this is running and all of those

496
00:22:46,290 --> 00:22:48,810
we could again include in our searches

497
00:22:48,810 --> 00:22:51,120
to actually filter down that we just

498
00:22:51,120 --> 00:22:53,640
want to see this specific kind of

499
00:22:53,640 --> 00:22:56,250
information and this was the SQL queries

500
00:22:56,250 --> 00:23:01,480
that we have been so this

501
00:23:01,480 --> 00:23:04,710
reasonable so we have found what our

502
00:23:04,710 --> 00:23:09,040
attackers have been up to here what

503
00:23:09,040 --> 00:23:11,230
happens if I run the delete was robbed

504
00:23:11,230 --> 00:23:20,280
it won't work let's say we go back here

505
00:23:20,280 --> 00:23:29,620
we had this one and then we drop or

506
00:23:29,620 --> 00:23:34,600
years they go back there it is still

507
00:23:34,600 --> 00:23:38,710
there because so I don't boom I won't be

508
00:23:38,710 --> 00:23:42,100
able to sabotage my own demo I have only

509
00:23:42,100 --> 00:23:44,440
allowed breathe and insert Commission's

510
00:23:44,440 --> 00:23:46,510
on that user that I'm using to interact

511
00:23:46,510 --> 00:23:49,150
here with the database so nobody can

512
00:23:49,150 --> 00:23:51,490
delete the data so at least that I have

513
00:23:51,490 --> 00:23:53,530
done correctly that I have limited the

514
00:23:53,530 --> 00:23:55,710
permissions of what I could run

515
00:23:55,710 --> 00:23:59,580
however in Cabana I should still be able

516
00:23:59,580 --> 00:24:04,439
to find

517
00:24:06,880 --> 00:24:09,380
find the SQL statement that I've just

518
00:24:09,380 --> 00:24:11,000
been running so you can see these where

519
00:24:11,000 --> 00:24:13,370
the lecturer was accessing that data

520
00:24:13,370 --> 00:24:17,870
table and now I already ran that drop

521
00:24:17,870 --> 00:24:20,030
table employees which didn't work

522
00:24:20,030 --> 00:24:24,940
because I don't have a creation okay so

523
00:24:24,940 --> 00:24:28,250
how can we protect against this maybe

524
00:24:28,250 --> 00:24:31,850
you have heard more modsecurity and so

525
00:24:31,850 --> 00:24:33,920
what my security is is an open source

526
00:24:33,920 --> 00:24:35,510
project that is a Web Application

527
00:24:35,510 --> 00:24:38,809
Firewall so it runs in front of your

528
00:24:38,809 --> 00:24:41,540
application and can intercept the HTTP

529
00:24:41,540 --> 00:24:43,940
and HTTPS traffic and then run some

530
00:24:43,940 --> 00:24:48,290
rules to filter out the bad stuff and

531
00:24:48,290 --> 00:24:51,020
there are two rules as that you can use

532
00:24:51,020 --> 00:24:53,510
and there is the free and open source

533
00:24:53,510 --> 00:24:56,809
core rule set which has real-time

534
00:24:56,809 --> 00:24:59,960
blacklisting and it can detect denial of

535
00:24:59,960 --> 00:25:02,360
service attacks and it has a lot of

536
00:25:02,360 --> 00:25:05,210
rules built in filter out attacks

537
00:25:05,210 --> 00:25:08,660
there's also a commercial version that

538
00:25:08,660 --> 00:25:12,140
can do more things and it works kind of

539
00:25:12,140 --> 00:25:14,799
like separate and run by separate people

540
00:25:14,799 --> 00:25:19,240
so they do share one github organization

541
00:25:19,240 --> 00:25:22,010
so these are the two things that you can

542
00:25:22,010 --> 00:25:24,080
run I'm sticking to the free and

543
00:25:24,080 --> 00:25:26,660
open-source version here by the way so

544
00:25:26,660 --> 00:25:33,250
I'm running nginx on port 443 with HTTPS

545
00:25:33,250 --> 00:25:35,630
without more security and I'm running

546
00:25:35,630 --> 00:25:39,950
Apache with more security on port 80 so

547
00:25:39,950 --> 00:25:48,350
if I run SQL map against this and I just

548
00:25:48,350 --> 00:25:50,840
need to change the port

549
00:25:50,840 --> 00:25:53,850
[Music]

550
00:25:53,850 --> 00:25:55,530
this will behave differently because

551
00:25:55,530 --> 00:25:57,780
it's exactly the same application I'm

552
00:25:57,780 --> 00:26:01,230
even using the same bar www HTML folder

553
00:26:01,230 --> 00:26:03,740
so it's really going against the same

554
00:26:03,740 --> 00:26:06,240
file so it has exactly the same

555
00:26:06,240 --> 00:26:09,690
vulnerabilities but on port 8080 it has

556
00:26:09,690 --> 00:26:12,180
more security running in front of it or

557
00:26:12,180 --> 00:26:15,320
as part of the application acacia server

558
00:26:15,320 --> 00:26:17,940
and this will actually block the

559
00:26:17,940 --> 00:26:19,500
requests so you can see their response

560
00:26:19,500 --> 00:26:22,340
here from SQL map is very different

561
00:26:22,340 --> 00:26:25,770
because we want to reduce the number of

562
00:26:25,770 --> 00:26:27,960
requests and all we don't want to do

563
00:26:27,960 --> 00:26:30,000
that so it will just keep running a lot

564
00:26:30,000 --> 00:26:33,440
of requests but it doesn't find anything

565
00:26:33,440 --> 00:26:36,030
unlike before when it's cool with our

566
00:26:36,030 --> 00:26:38,430
when it did identify my sequel pretty

567
00:26:38,430 --> 00:26:40,320
quickly and enter like well I found all

568
00:26:40,320 --> 00:26:42,090
of these security issues and what we

569
00:26:42,090 --> 00:26:46,320
have here is we see 126 times the

570
00:26:46,320 --> 00:26:49,230
request from SQL map where we've got a

571
00:26:49,230 --> 00:26:52,200
response 403 forbidden why do you forget

572
00:26:52,200 --> 00:26:54,570
all those forbidden because that is

573
00:26:54,570 --> 00:26:58,290
exactly what what security is doing its

574
00:26:58,290 --> 00:27:01,890
detecting potential attack and then you

575
00:27:01,890 --> 00:27:03,270
can put it into different mode so you

576
00:27:03,270 --> 00:27:05,580
could just monitor and you law attacks

577
00:27:05,580 --> 00:27:08,040
but I have put it into the more

578
00:27:08,040 --> 00:27:10,200
aggressive like actually block mode so

579
00:27:10,200 --> 00:27:12,810
any requests that it deems and attack it

580
00:27:12,810 --> 00:27:16,190
will just block and respond with the 403

581
00:27:16,190 --> 00:27:21,180
response code so just to show you how

582
00:27:21,180 --> 00:27:24,510
this behaves when I actually use it when

583
00:27:24,510 --> 00:27:28,830
I have two port 8080 and they did same

584
00:27:28,830 --> 00:27:32,330
but when I try to add a new employee you

585
00:27:32,330 --> 00:27:34,890
remember what we had to do so we were

586
00:27:34,890 --> 00:27:37,560
closing the previous command and said or

587
00:27:37,560 --> 00:27:39,840
true and becoming it off the rest of the

588
00:27:39,840 --> 00:27:42,840
line when I run that you just suddenly

589
00:27:42,840 --> 00:27:45,480
now run into a forbidden and this is

590
00:27:45,480 --> 00:27:47,310
where most security is basically jumping

591
00:27:47,310 --> 00:27:49,020
in into like well this doesn't look like

592
00:27:49,020 --> 00:27:52,290
a proper request let's block that and

593
00:27:52,290 --> 00:27:55,530
SQL map had exactly the same looking

594
00:27:55,530 --> 00:27:58,180
more like it so

595
00:27:58,180 --> 00:28:01,330
here you can see and well it's pretty

596
00:28:01,330 --> 00:28:06,460
hard to read but this is one of the

597
00:28:06,460 --> 00:28:09,130
rules that blocked something so if I

598
00:28:09,130 --> 00:28:15,340
open that one up here here is the

599
00:28:15,340 --> 00:28:18,730
detected SQL injection using the

600
00:28:18,730 --> 00:28:22,350
fingerprint because well we used that

601
00:28:22,350 --> 00:28:25,330
that was especially or exactly the

602
00:28:25,330 --> 00:28:27,010
command that I was trying to run and

603
00:28:27,010 --> 00:28:29,470
this is one of the things that most

604
00:28:29,470 --> 00:28:32,440
security does detects so this is what it

605
00:28:32,440 --> 00:28:34,510
actually flips it out and then rejected

606
00:28:34,510 --> 00:28:39,400
my entire request we could run or show

607
00:28:39,400 --> 00:28:41,980
this on an error dashboard now as well

608
00:28:41,980 --> 00:28:44,590
and then we would see all the response

609
00:28:44,590 --> 00:28:47,560
codes that we had and the actual errors

610
00:28:47,560 --> 00:28:49,420
but let's skip the first day we don't

611
00:28:49,420 --> 00:28:51,550
have enough time what I want to point

612
00:28:51,550 --> 00:28:54,460
out is in most securities so it has a

613
00:28:54,460 --> 00:28:56,380
configuration file and there you can

614
00:28:56,380 --> 00:28:59,470
turn the rule on detect only or off I

615
00:28:59,470 --> 00:29:01,810
have it in the onload for your

616
00:29:01,810 --> 00:29:02,800
production data

617
00:29:02,800 --> 00:29:04,930
it is probably highly advisable to put

618
00:29:04,930 --> 00:29:07,840
it into detection only mode then go

619
00:29:07,840 --> 00:29:09,610
through your lock see what it would

620
00:29:09,610 --> 00:29:12,610
block and only if it does block actual

621
00:29:12,610 --> 00:29:15,190
attacks and not legitimate uses I would

622
00:29:15,190 --> 00:29:17,260
turn this on otherwise you might enrage

623
00:29:17,260 --> 00:29:19,330
your users by blocking their proper

624
00:29:19,330 --> 00:29:22,450
requests and you can also limit things

625
00:29:22,450 --> 00:29:27,460
like how big can the body of posts be

626
00:29:27,460 --> 00:29:30,850
for example or how big can an upload

627
00:29:30,850 --> 00:29:33,220
speed so things like that just to

628
00:29:33,220 --> 00:29:35,140
protect your application against denial

629
00:29:35,140 --> 00:29:36,700
of service attack for example all of

630
00:29:36,700 --> 00:29:38,650
that is easily possible with mott

631
00:29:38,650 --> 00:29:41,800
security what is very important for the

632
00:29:41,800 --> 00:29:44,740
lock part is that you actually specify

633
00:29:44,740 --> 00:29:48,850
that this should be output as Jason it

634
00:29:48,850 --> 00:29:51,430
doesn't really look like Jason here so

635
00:29:51,430 --> 00:29:53,920
that the actual field is very hard to

636
00:29:53,920 --> 00:29:56,770
read but you can see on it handler

637
00:29:56,770 --> 00:30:00,060
application came from here audit engine

638
00:30:00,060 --> 00:30:05,020
the operator etc all of that was

639
00:30:05,020 --> 00:30:07,750
actually spelled out in Jason from Mott

640
00:30:07,750 --> 00:30:09,310
security otherwise you would need to

641
00:30:09,310 --> 00:30:10,840
parse that by

642
00:30:10,840 --> 00:30:12,880
and the regular expression and that's

643
00:30:12,880 --> 00:30:15,100
normally not that much fun whenever I

644
00:30:15,100 --> 00:30:16,690
ask that who writes likes writing

645
00:30:16,690 --> 00:30:19,540
regular expression a couple of people

646
00:30:19,540 --> 00:30:21,430
raise their hands and then my answer

647
00:30:21,430 --> 00:30:23,170
will normally be that this is like the

648
00:30:23,170 --> 00:30:25,060
Stockholm Syndrome where you get so used

649
00:30:25,060 --> 00:30:26,920
to doing something that at some point

650
00:30:26,920 --> 00:30:28,360
you accept that this is the right way to

651
00:30:28,360 --> 00:30:30,310
do but I'm lazy

652
00:30:30,310 --> 00:30:32,110
I don't want to write my own regular

653
00:30:32,110 --> 00:30:35,140
expression so probably you should not

654
00:30:35,140 --> 00:30:38,230
either okay

655
00:30:38,230 --> 00:30:40,450
you can also add custom rules in

656
00:30:40,450 --> 00:30:42,100
non-security and this is actually an

657
00:30:42,100 --> 00:30:44,410
interesting one or a fun one what I'm

658
00:30:44,410 --> 00:30:48,330
doing here is on the create PHP for if

659
00:30:48,330 --> 00:30:52,210
somebody tries to post a body which

660
00:30:52,210 --> 00:30:54,940
contains shy or been on our founders so

661
00:30:54,940 --> 00:30:57,010
basically if somebody tries to create a

662
00:30:57,010 --> 00:31:00,400
page shy then I want to block that

663
00:31:00,400 --> 00:31:03,640
request in reality probably especially

664
00:31:03,640 --> 00:31:05,350
if you cannot change your vacation you

665
00:31:05,350 --> 00:31:07,510
would put in something like here that

666
00:31:07,510 --> 00:31:11,470
fills us out Rolex or viagra or whatever

667
00:31:11,470 --> 00:31:13,960
emma's might be using so this could be a

668
00:31:13,960 --> 00:31:16,450
very easy way to actually add spam rules

669
00:31:16,450 --> 00:31:19,000
on the fly without changing your

670
00:31:19,000 --> 00:31:21,340
application and what security can just

671
00:31:21,340 --> 00:31:23,470
filter that out from any request and

672
00:31:23,470 --> 00:31:26,350
reject the best request as I try to add

673
00:31:26,350 --> 00:31:30,220
a big shot so what I want to do is I

674
00:31:30,220 --> 00:31:33,040
want to reload the blogging form I know

675
00:31:33,040 --> 00:31:37,780
my correct blogging that was secret to

676
00:31:37,780 --> 00:31:41,050
login and then I want to say there is

677
00:31:41,050 --> 00:31:44,110
another shine I need to spell his name

678
00:31:44,110 --> 00:31:46,780
correctly let's say he's still based in

679
00:31:46,780 --> 00:31:48,670
Amsterdam where he shy used to live in

680
00:31:48,670 --> 00:31:52,720
the past let's create this password and

681
00:31:52,720 --> 00:31:55,180
when we do this again we get the

682
00:31:55,180 --> 00:31:57,970
forbidden back because the wrong guy or

683
00:31:57,970 --> 00:32:00,970
the fake shyam was filtered out just

684
00:32:00,970 --> 00:32:02,650
looks like this and then shy is even

685
00:32:02,650 --> 00:32:04,450
smiling when you filter out the page shy

686
00:32:04,450 --> 00:32:07,360
so what the result would look like is it

687
00:32:07,360 --> 00:32:10,060
would say like exercise with for a 3

688
00:32:10,060 --> 00:32:13,600
because we match this shy pennon request

689
00:32:13,600 --> 00:32:16,600
in here and as you saw it was actually

690
00:32:16,600 --> 00:32:20,610
really filtered up this is already you

691
00:32:20,610 --> 00:32:23,399
appear

692
00:32:23,399 --> 00:32:27,469
on livestream find my feet shy

693
00:32:27,469 --> 00:32:30,839
it's shy right now but it it will appear

694
00:32:30,839 --> 00:32:33,809
in a couple of moments or so or we could

695
00:32:33,809 --> 00:32:36,989
just highlight shy because I think I've

696
00:32:36,989 --> 00:32:41,429
tried it up short and that should find

697
00:32:41,429 --> 00:32:49,349
the fake shine as well or maybe not

698
00:32:49,349 --> 00:32:52,279
where's my fig shy

699
00:32:52,320 --> 00:32:56,300
[Music]

700
00:32:56,950 --> 00:32:59,900
okay you'll have to believe me you will

701
00:32:59,900 --> 00:33:02,620
be able to find the page shy in here

702
00:33:02,620 --> 00:33:05,600
probably a browser refresh would fix it

703
00:33:05,600 --> 00:33:07,780
my processing speed sluggish today

704
00:33:07,780 --> 00:33:11,150
however one final note here is what

705
00:33:11,150 --> 00:33:13,310
security is not hopeful there are ways

706
00:33:13,310 --> 00:33:15,950
to circumvent it so for example if you

707
00:33:15,950 --> 00:33:18,950
try to use the login form and you use

708
00:33:18,950 --> 00:33:21,110
parenthesis in the right combination

709
00:33:21,110 --> 00:33:26,300
this will pass through security so just

710
00:33:26,300 --> 00:33:29,360
to show you and I will copy that

711
00:33:29,360 --> 00:33:33,140
so I want me to type this one so if I

712
00:33:33,140 --> 00:33:42,500
copy this one I will cancel that trip

713
00:33:42,500 --> 00:33:50,030
with the friend I will login and ok

714
00:33:50,030 --> 00:33:52,280
since I I still haven't created a proper

715
00:33:52,280 --> 00:33:54,230
user I still need to create the proper

716
00:33:54,230 --> 00:33:56,060
user once because on the afterwards they

717
00:33:56,060 --> 00:33:59,540
will be locked out let me log in now so

718
00:33:59,540 --> 00:34:04,130
if I use this one here this one passes

719
00:34:04,130 --> 00:34:06,130
through more security unfortunately

720
00:34:06,130 --> 00:34:09,050
which is slightly unfortunate but yeah

721
00:34:09,050 --> 00:34:11,330
yeah if the rules need to be updated

722
00:34:11,330 --> 00:34:15,800
again so yeah everything is on fire and

723
00:34:15,800 --> 00:34:20,330
terrible so to wrap up security incident

724
00:34:20,330 --> 00:34:22,909
normally come in three levels it's like

725
00:34:22,909 --> 00:34:24,889
for your information which you mostly

726
00:34:24,889 --> 00:34:28,100
ignore the WTF besides probably

727
00:34:28,100 --> 00:34:29,899
something you want to fix and the oh my

728
00:34:29,899 --> 00:34:32,030
god is stuff that you definitely want to

729
00:34:32,030 --> 00:34:35,630
fix immediately ideally you fix the

730
00:34:35,630 --> 00:34:38,060
security issues in your application if

731
00:34:38,060 --> 00:34:39,560
you cannot do it especially if it's

732
00:34:39,560 --> 00:34:42,110
external applications what security will

733
00:34:42,110 --> 00:34:44,960
still give you extra offer and it may be

734
00:34:44,960 --> 00:34:46,280
a good protection for your own

735
00:34:46,280 --> 00:34:48,550
applications as well

736
00:34:48,550 --> 00:34:50,870
and the takeaway you write better code

737
00:34:50,870 --> 00:34:53,810
than me and my demo and use the proper

738
00:34:53,810 --> 00:34:55,610
libraries and frameworks especially

739
00:34:55,610 --> 00:34:58,040
around injections because there is good

740
00:34:58,040 --> 00:35:00,290
tooling out there correct you might feel

741
00:35:00,290 --> 00:35:03,710
life easier the question I get quite

742
00:35:03,710 --> 00:35:05,600
frequently is anybody using

743
00:35:05,600 --> 00:35:10,760
this well quite a few um one common use

744
00:35:10,760 --> 00:35:12,770
case where for example what security is

745
00:35:12,770 --> 00:35:14,960
pretty widely used for now is in it lab

746
00:35:14,960 --> 00:35:18,890
they have added that as an ingress in

747
00:35:18,890 --> 00:35:22,100
there beneath this deployment so this is

748
00:35:22,100 --> 00:35:24,890
one of the many places where for example

749
00:35:24,890 --> 00:35:27,290
what Security's being black views for

750
00:35:27,290 --> 00:35:28,970
logging around security

751
00:35:28,970 --> 00:35:31,160
our second those pretty widely used from

752
00:35:31,160 --> 00:35:34,880
slag to Missoula to Cisco and we have a

753
00:35:34,880 --> 00:35:36,530
couple of other applications and use

754
00:35:36,530 --> 00:35:38,690
cases in security space by now as well

755
00:35:38,690 --> 00:35:43,490
so generally more security and logging

756
00:35:43,490 --> 00:35:46,580
go very well together and one won't make

757
00:35:46,580 --> 00:35:48,440
so much sense without the other so even

758
00:35:48,440 --> 00:35:50,300
if you block out lots of stuff you still

759
00:35:50,300 --> 00:35:52,520
need that centralized logging see like

760
00:35:52,520 --> 00:35:54,680
go block any legitimate requests and

761
00:35:54,680 --> 00:35:57,140
also what bad stuff am i blocking out

762
00:35:57,140 --> 00:35:59,360
and do I need to fix anything in my

763
00:35:59,360 --> 00:36:01,490
application so there it would make a lot

764
00:36:01,490 --> 00:36:04,130
of sense to actually have that if you

765
00:36:04,130 --> 00:36:05,800
want to try out of all that yourself

766
00:36:05,800 --> 00:36:09,080
here is the code so just copy that and

767
00:36:09,080 --> 00:36:12,830
koala slides are available on the disk

768
00:36:12,830 --> 00:36:15,230
QR code so I'll let you take a picture

769
00:36:15,230 --> 00:36:19,700
of that this I guess we can just jump to

770
00:36:19,700 --> 00:36:23,529
questions um thanks a lot for joining

771
00:36:30,270 --> 00:36:37,240
okay great talk so I think one of the

772
00:36:37,240 --> 00:36:38,740
common themes we've been seeing across

773
00:36:38,740 --> 00:36:40,690
this event is that I guess you know

774
00:36:40,690 --> 00:36:44,020
security is I liked how seryeong put it

775
00:36:44,020 --> 00:36:45,820
that's out of scope said no attacker

776
00:36:45,820 --> 00:36:49,030
ever so yeah you have quite a few

777
00:36:49,030 --> 00:36:51,790
questions in yeah in the feet so go

778
00:36:51,790 --> 00:36:54,670
right ahead so what's the overhead of

779
00:36:54,670 --> 00:36:59,080
the file beating the final beat so you

780
00:36:59,080 --> 00:37:00,400
know the answer that we will always give

781
00:37:00,400 --> 00:37:02,680
to that is it depends because it depends

782
00:37:02,680 --> 00:37:04,180
on how many files and folders really

783
00:37:04,180 --> 00:37:05,650
monitor or how much data are you

784
00:37:05,650 --> 00:37:07,360
shipping off but generally it should be

785
00:37:07,360 --> 00:37:10,180
pretty low like not so much I all or if

786
00:37:10,180 --> 00:37:11,830
you're on Linux it's probably still in a

787
00:37:11,830 --> 00:37:13,960
file buffer so you're basically hemming

788
00:37:13,960 --> 00:37:16,150
over whatever you had in memory to the

789
00:37:16,150 --> 00:37:18,070
network interface and just ship that off

790
00:37:18,070 --> 00:37:20,440
and since we don't do any parsing on the

791
00:37:20,440 --> 00:37:22,300
hosts air this should be very minimal

792
00:37:22,300 --> 00:37:25,780
and like in terms of network depending

793
00:37:25,780 --> 00:37:27,630
on how much data you want to transfer

794
00:37:27,630 --> 00:37:29,890
CPU and memory should be pretty minimal

795
00:37:29,890 --> 00:37:34,480
so it's a go binary really minimum I

796
00:37:34,480 --> 00:37:40,660
wouldn't worry about that okay and I

797
00:37:40,660 --> 00:37:43,960
guess without being biased ahead and

798
00:37:43,960 --> 00:37:45,730
gonna be kind of a tough question to

799
00:37:45,730 --> 00:37:48,010
answer but what are the advantages /

800
00:37:48,010 --> 00:37:51,040
disadvantages hooks back to other log

801
00:37:51,040 --> 00:37:52,920
management products like you mean your

802
00:37:52,920 --> 00:38:01,090
long colony oh you do yeah what kind of

803
00:38:01,090 --> 00:38:06,310
answer do you expect now I don't know

804
00:38:06,310 --> 00:38:09,070
Splunk or other products that well they

805
00:38:09,070 --> 00:38:10,900
all have kind of like their sweet spots

806
00:38:10,900 --> 00:38:13,120
I think's plank is kind of

807
00:38:13,120 --> 00:38:16,240
well-established from a long time ago

808
00:38:16,240 --> 00:38:17,950
and if you have the right amount of

809
00:38:17,950 --> 00:38:19,960
money and other approaches are very

810
00:38:19,960 --> 00:38:22,570
cloud heavy and cloud focused I think

811
00:38:22,570 --> 00:38:24,550
our approach is very much that we are

812
00:38:24,550 --> 00:38:26,170
trying to bring the solution to wherever

813
00:38:26,170 --> 00:38:28,270
you are so we have the cloud service you

814
00:38:28,270 --> 00:38:31,630
can run it on premise it's just up to

815
00:38:31,630 --> 00:38:35,230
you and we build on this speed and

816
00:38:35,230 --> 00:38:37,690
relevancy parody because what people

817
00:38:37,690 --> 00:38:39,520
often forget is in the logs you're not

818
00:38:39,520 --> 00:38:40,990
interested in storing the logs but

819
00:38:40,990 --> 00:38:42,330
you're interested in

820
00:38:42,330 --> 00:38:44,490
quickly retrieving the relevant parts so

821
00:38:44,490 --> 00:38:46,260
this is where we come from I'm

822
00:38:46,260 --> 00:38:48,090
definitely not the right person to give

823
00:38:48,090 --> 00:38:50,430
you the comparison I think and I I won't

824
00:38:50,430 --> 00:38:53,220
try because this will not be fair and I

825
00:38:53,220 --> 00:38:55,020
would just misrepresent the other

826
00:38:55,020 --> 00:38:57,360
products um so I I would kind of touch

827
00:38:57,360 --> 00:38:59,150
that question

828
00:38:59,150 --> 00:39:06,330
okay a couple of I guess what would be

829
00:39:06,330 --> 00:39:13,560
your best practices so best practices

830
00:39:13,560 --> 00:39:15,330
for log management the number one thing

831
00:39:15,330 --> 00:39:17,460
that I see that makes people's lives

832
00:39:17,460 --> 00:39:19,320
much harder than it needs to be is that

833
00:39:19,320 --> 00:39:21,060
you have like your application knows

834
00:39:21,060 --> 00:39:23,040
what you have in your log and then you

835
00:39:23,040 --> 00:39:24,810
log out that log line and then you write

836
00:39:24,810 --> 00:39:26,460
a regular expression to parse it back

837
00:39:26,460 --> 00:39:28,440
and then people complain this is a lot

838
00:39:28,440 --> 00:39:30,270
of work and this is overhead and yes

839
00:39:30,270 --> 00:39:32,430
you're right this is overhead for the

840
00:39:32,430 --> 00:39:34,080
computer to actually parse it because

841
00:39:34,080 --> 00:39:36,480
regular expressions are not always that

842
00:39:36,480 --> 00:39:39,960
performance performant and you know the

843
00:39:39,960 --> 00:39:42,690
plural of regs is regret so don't do

844
00:39:42,690 --> 00:39:45,300
that you should rather have a structured

845
00:39:45,300 --> 00:39:47,430
format and ideally especially for our

846
00:39:47,430 --> 00:39:49,560
case would be Jason so if you log to

847
00:39:49,560 --> 00:39:51,690
Jason right away you can just tail the

848
00:39:51,690 --> 00:39:53,730
Jason put it into elasticsearch and

849
00:39:53,730 --> 00:39:56,370
you're done and we have this schema

850
00:39:56,370 --> 00:39:58,350
format we call it elastic comment schema

851
00:39:58,350 --> 00:40:00,330
if you stick to that you're really done

852
00:40:00,330 --> 00:40:02,070
and you can easily correlate different

853
00:40:02,070 --> 00:40:04,290
lock types together we have like the

854
00:40:04,290 --> 00:40:05,940
right log libraries for different

855
00:40:05,940 --> 00:40:08,070
programming languages and our products

856
00:40:08,070 --> 00:40:10,230
will try to produce that not format and

857
00:40:10,230 --> 00:40:12,030
that will really make your life a lot

858
00:40:12,030 --> 00:40:13,950
easier and you don't have to struggle

859
00:40:13,950 --> 00:40:16,080
with writing regular expressions and

860
00:40:16,080 --> 00:40:18,540
mapping different kind of formats to

861
00:40:18,540 --> 00:40:21,090
each other and fiddling with dates and

862
00:40:21,090 --> 00:40:22,920
whatever just don't do that

863
00:40:22,920 --> 00:40:25,560
be lazy like me and just use the

864
00:40:25,560 --> 00:40:27,540
libraries to do that and use a

865
00:40:27,540 --> 00:40:30,150
structured format unless you want job

866
00:40:30,150 --> 00:40:31,770
security and you want to write the

867
00:40:31,770 --> 00:40:33,540
regular expressions that nobody else can

868
00:40:33,540 --> 00:40:35,850
debug anymore that might be the only

869
00:40:35,850 --> 00:40:45,120
excuse I think nope thanks a lot for for

870
00:40:45,120 --> 00:40:46,560
joining if you have any questions just

871
00:40:46,560 --> 00:40:50,250
ping me on Twitter by the way the the

872
00:40:50,250 --> 00:40:52,260
instance is still live and running so if

873
00:40:52,260 --> 00:40:55,170
you go to 0 WTF you can't just try it

874
00:40:55,170 --> 00:40:56,180
out yourself

875
00:40:56,180 --> 00:40:58,880
life if you can break in or not so if

876
00:40:58,880 --> 00:41:00,349
you're bored this afternoon or morning

877
00:41:00,349 --> 00:41:03,020
or whatever your time is and go wild

878
00:41:03,020 --> 00:41:05,029
I'll probably take it down tomorrow and

879
00:41:05,029 --> 00:41:07,970
so it doesn't end up like spam host or

880
00:41:07,970 --> 00:41:10,720
anything but if you want to have a play

881
00:41:10,720 --> 00:41:15,799
enjoy a evening the demo we're good to

882
00:41:15,799 --> 00:41:17,510
you although it was pre-recorded but it

883
00:41:17,510 --> 00:41:18,880
looks like it was working in real time

884
00:41:18,880 --> 00:41:22,210
very cool thank you for being with us

885
00:41:22,210 --> 00:41:25,579
great having you thank you feel free to

886
00:41:25,579 --> 00:41:27,529
check out the platform and interact with

887
00:41:27,529 --> 00:41:28,819
the folks or some people ask me more

888
00:41:28,819 --> 00:41:32,240
questions so feel free to I just jump

889
00:41:32,240 --> 00:41:35,379
over there bye

