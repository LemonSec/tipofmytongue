1
00:00:00,000 --> 00:00:03,060
all right Deb second we are back and

2
00:00:03,060 --> 00:00:05,359
we're ready to bring in our next speaker

3
00:00:05,359 --> 00:00:09,240
evan is with us and he is currently a

4
00:00:09,240 --> 00:00:12,690
developer advocate at elastic and he's

5
00:00:12,690 --> 00:00:15,509
gonna talk to you today about micro

6
00:00:15,509 --> 00:00:18,060
services and some of the struggles of

7
00:00:18,060 --> 00:00:19,410
Guinea visibility into those

8
00:00:19,410 --> 00:00:21,689
environments and how we can do better

9
00:00:21,689 --> 00:00:24,150
so with that arrogant I'm gonna turn it

10
00:00:24,150 --> 00:00:28,500
over to you oh I the floor is now yours

11
00:00:28,500 --> 00:00:31,769
thank you a design thanks Deb said Kuan

12
00:00:31,769 --> 00:00:34,440
24 organizers and helping putting us

13
00:00:34,440 --> 00:00:36,840
putting this together it's been a great

14
00:00:36,840 --> 00:00:39,239
experience throughout and I look forward

15
00:00:39,239 --> 00:00:42,030
to enjoy the talks as well so that being

16
00:00:42,030 --> 00:00:44,510
said and welcome to the session today

17
00:00:44,510 --> 00:00:46,680
good morning good afternoon good evening

18
00:00:46,680 --> 00:00:49,410
or for people who are joining from

19
00:00:49,410 --> 00:00:52,289
different parts of the world and we hope

20
00:00:52,289 --> 00:00:54,690
you have a great day today we're gonna

21
00:00:54,690 --> 00:00:56,579
look about building an observable

22
00:00:56,579 --> 00:00:59,070
infrastructure and code so specifically

23
00:00:59,070 --> 00:01:01,770
talking about how do you bring up a

24
00:01:01,770 --> 00:01:02,910
crowd platform where you're running

25
00:01:02,910 --> 00:01:05,670
something like micro service app and

26
00:01:05,670 --> 00:01:08,250
then like collect logs matrix in traces

27
00:01:08,250 --> 00:01:10,950
all from from from practitioner

28
00:01:10,950 --> 00:01:12,659
perspective and also from a developer

29
00:01:12,659 --> 00:01:15,930
perspective so initially what we'll do

30
00:01:15,930 --> 00:01:18,090
is let me quickly go back to the will to

31
00:01:18,090 --> 00:01:20,369
keep created elastic star cluster I'll

32
00:01:20,369 --> 00:01:21,750
explain because this is just to save

33
00:01:21,750 --> 00:01:24,659
that time so that like we have enough

34
00:01:24,659 --> 00:01:26,990
time to talk about all of these things

35
00:01:26,990 --> 00:01:29,790
yeah I'm trying to deploy it and replace

36
00:01:29,790 --> 00:01:31,590
where I live in mostly and then like

37
00:01:31,590 --> 00:01:35,250
kind of create deploy that's it oh and

38
00:01:35,250 --> 00:01:38,640
also we're gonna do all things on gke

39
00:01:38,640 --> 00:01:41,130
google kubernetes engine so I already

40
00:01:41,130 --> 00:01:43,320
have a script so that I don't miss type

41
00:01:43,320 --> 00:01:45,540
and like we don't spend time to bugging

42
00:01:45,540 --> 00:01:49,290
things so I already have a cloud shell

43
00:01:49,290 --> 00:01:51,960
here which is like a Google proxy Li

44
00:01:51,960 --> 00:01:55,979
shell I'll just create a you know our

45
00:01:55,979 --> 00:01:58,560
demo cluster and again like let it let

46
00:01:58,560 --> 00:02:00,810
the time take it and like we can you can

47
00:02:00,810 --> 00:02:02,790
come back and when we are up for demo

48
00:02:02,790 --> 00:02:05,280
we'll start to that this with a simple

49
00:02:05,280 --> 00:02:08,068
thing okay that brings us to the session

50
00:02:08,068 --> 00:02:11,038
and hello welcome again and I am urban

51
00:02:11,038 --> 00:02:12,780
and I work at elastic as a developer

52
00:02:12,780 --> 00:02:14,160
advocate and

53
00:02:14,160 --> 00:02:16,890
I do many things I run meetups I help

54
00:02:16,890 --> 00:02:19,290
help the local developer look developer

55
00:02:19,290 --> 00:02:22,670
communities in India and Southeast Asia

56
00:02:22,670 --> 00:02:25,920
like pretty much all the community stuff

57
00:02:25,920 --> 00:02:28,320
activities that I do if you want to

58
00:02:28,320 --> 00:02:30,300
reach out its my website and where you

59
00:02:30,300 --> 00:02:32,040
can read some blogs and also the Twitter

60
00:02:32,040 --> 00:02:35,310
ID so I want to take it in a different

61
00:02:35,310 --> 00:02:37,350
take the session in a different format

62
00:02:37,350 --> 00:02:39,450
than the usual one because usually when

63
00:02:39,450 --> 00:02:41,700
we talk about observability

64
00:02:41,700 --> 00:02:44,220
infrastructure getting logs and a lot of

65
00:02:44,220 --> 00:02:47,010
these we generally look at like you know

66
00:02:47,010 --> 00:02:50,130
from from like theory perspective there

67
00:02:50,130 --> 00:02:51,780
are many many good definitions there are

68
00:02:51,780 --> 00:02:53,520
many bookish definitions which also like

69
00:02:53,520 --> 00:02:56,220
are quite deep in explaining the

70
00:02:56,220 --> 00:02:58,080
terminology and explaining everything so

71
00:02:58,080 --> 00:02:59,670
I'm trying to take a different sort of a

72
00:02:59,670 --> 00:03:01,770
perspective bit and what it is for me

73
00:03:01,770 --> 00:03:03,810
for it if I am a developer if I am a

74
00:03:03,810 --> 00:03:05,190
practitioner what it is for me

75
00:03:05,190 --> 00:03:07,890
so specifically why do you want to do

76
00:03:07,890 --> 00:03:09,600
something like an observability or

77
00:03:09,600 --> 00:03:11,790
looking gaining visibility into micro

78
00:03:11,790 --> 00:03:14,310
services because as a developer we want

79
00:03:14,310 --> 00:03:16,650
less bugs we want our software to be

80
00:03:16,650 --> 00:03:18,600
reliable running all the time without

81
00:03:18,600 --> 00:03:21,180
even complaining it this is the perfect

82
00:03:21,180 --> 00:03:23,130
zero condition right like this is the

83
00:03:23,130 --> 00:03:25,230
ideal condition that every developer

84
00:03:25,230 --> 00:03:27,690
expects their code to perform at the

85
00:03:27,690 --> 00:03:30,300
same point of time once I deliver or

86
00:03:30,300 --> 00:03:32,340
once I put my code and once I am done

87
00:03:32,340 --> 00:03:33,150
with it

88
00:03:33,150 --> 00:03:35,760
as a practitioner as a person who is

89
00:03:35,760 --> 00:03:38,310
looking after the health of the systems

90
00:03:38,310 --> 00:03:40,530
as a DevOps practitioner or the security

91
00:03:40,530 --> 00:03:44,459
practitioner so I want all the systems

92
00:03:44,459 --> 00:03:46,980
to function well I want everything to be

93
00:03:46,980 --> 00:03:49,410
operationally looked after so that

94
00:03:49,410 --> 00:03:51,570
whenever there is a need to collect

95
00:03:51,570 --> 00:03:53,280
metrics I should be able to deliver

96
00:03:53,280 --> 00:03:55,620
value not just from dashboards but

97
00:03:55,620 --> 00:03:57,030
anything that I should be able to do

98
00:03:57,030 --> 00:04:00,090
with the data and then if I am InfoSec

99
00:04:00,090 --> 00:04:02,670
person if I am someone who is in the

100
00:04:02,670 --> 00:04:05,010
security and who looks after the overall

101
00:04:05,010 --> 00:04:06,989
organizational protection let's say if

102
00:04:06,989 --> 00:04:08,760
you are a SAS company and building a SAS

103
00:04:08,760 --> 00:04:10,770
service and then you would need to

104
00:04:10,770 --> 00:04:12,750
protect the customers data also the

105
00:04:12,750 --> 00:04:15,209
interest of the organization so then if

106
00:04:15,209 --> 00:04:17,160
you are a developer you're a security

107
00:04:17,160 --> 00:04:19,320
practitioner and then like you need to

108
00:04:19,320 --> 00:04:21,630
secure and protect with the data of your

109
00:04:21,630 --> 00:04:23,640
platform as well as the customers data a

110
00:04:23,640 --> 00:04:26,100
lot of these things and then and then

111
00:04:26,100 --> 00:04:27,810
like if you are a product owner

112
00:04:27,810 --> 00:04:30,980
maybe supervisor as somebody who is was

113
00:04:30,980 --> 00:04:33,720
managing a team and then you might want

114
00:04:33,720 --> 00:04:35,520
to look after the product performance

115
00:04:35,520 --> 00:04:38,580
you might want to see okay I want to

116
00:04:38,580 --> 00:04:40,919
find out how much does this type the

117
00:04:40,919 --> 00:04:43,110
space takes to load or what are the

118
00:04:43,110 --> 00:04:44,639
problems between the team how we can

119
00:04:44,639 --> 00:04:47,460
improve this processes so so all of

120
00:04:47,460 --> 00:04:49,530
these are the problems that we could

121
00:04:49,530 --> 00:04:52,440
potentially address using the single you

122
00:04:52,440 --> 00:04:53,700
know building an observable

123
00:04:53,700 --> 00:04:56,040
infrastructure and code now quickly

124
00:04:56,040 --> 00:04:57,389
going through I don't have much slides

125
00:04:57,389 --> 00:04:59,190
but I I quickly I don't want to get into

126
00:04:59,190 --> 00:05:01,500
demo but I want to tell you how like

127
00:05:01,500 --> 00:05:03,330
generally when people talk about how

128
00:05:03,330 --> 00:05:05,970
it's simple right it's like collect all

129
00:05:05,970 --> 00:05:09,120
the data but what people are collecting

130
00:05:09,120 --> 00:05:11,100
and what are different things that

131
00:05:11,100 --> 00:05:14,580
people do and what is per se in a way

132
00:05:14,580 --> 00:05:17,340
that observability tells you so usual

133
00:05:17,340 --> 00:05:19,650
scenario you have a tool for collecting

134
00:05:19,650 --> 00:05:21,330
your traces APM is nothing for

135
00:05:21,330 --> 00:05:23,640
application performance monitoring you

136
00:05:23,640 --> 00:05:25,680
calop your real user monitoring traces

137
00:05:25,680 --> 00:05:27,360
you call up your transaction performance

138
00:05:27,360 --> 00:05:29,250
you you do code tracing which is very

139
00:05:29,250 --> 00:05:31,440
very interesting and you also can

140
00:05:31,440 --> 00:05:33,150
capture errors very interesting you will

141
00:05:33,150 --> 00:05:35,130
see one one error tray and we'll see how

142
00:05:35,130 --> 00:05:37,650
we can capture that and then and then

143
00:05:37,650 --> 00:05:40,200
you also have service level availability

144
00:05:40,200 --> 00:05:42,330
matrix which is again another important

145
00:05:42,330 --> 00:05:44,340
angle to this entire data collection

146
00:05:44,340 --> 00:05:47,010
wherein you you want to know a spec you

147
00:05:47,010 --> 00:05:48,810
have like say it 10 microseconds a

148
00:05:48,810 --> 00:05:50,520
second then is very less nowadays but

149
00:05:50,520 --> 00:05:52,050
then if you have 10 maker services in

150
00:05:52,050 --> 00:05:54,240
you want to understand which micro

151
00:05:54,240 --> 00:05:56,039
service or which service of yours is

152
00:05:56,039 --> 00:05:58,620
down click is your own personal status

153
00:05:58,620 --> 00:06:01,020
page and then like find out the response

154
00:06:01,020 --> 00:06:03,030
time of all all of these like that is

155
00:06:03,030 --> 00:06:04,680
another way to look at and then

156
00:06:04,680 --> 00:06:06,810
obviously metrics different sort of

157
00:06:06,810 --> 00:06:09,690
metrics from your cloud platforms from

158
00:06:09,690 --> 00:06:11,700
your whatsoever infrastructure that you

159
00:06:11,700 --> 00:06:13,530
are running your cloud services that

160
00:06:13,530 --> 00:06:15,240
you're specifically looking at or even

161
00:06:15,240 --> 00:06:18,750
more and more you know like hardware

162
00:06:18,750 --> 00:06:20,900
level metrics also you might color and

163
00:06:20,900 --> 00:06:23,220
the most favorable and like people

164
00:06:23,220 --> 00:06:25,860
generally do is start from here not from

165
00:06:25,860 --> 00:06:28,590
here they start from blocks and then you

166
00:06:28,590 --> 00:06:30,930
also have logs different types of logs

167
00:06:30,930 --> 00:06:33,090
you are your logs from your application

168
00:06:33,090 --> 00:06:36,030
servers your logs from your data from in

169
00:06:36,030 --> 00:06:38,729
like database is your custom application

170
00:06:38,729 --> 00:06:39,400
logs or the

171
00:06:39,400 --> 00:06:41,470
that is generated by some react app

172
00:06:41,470 --> 00:06:43,000
which is in the browser and a lot of

173
00:06:43,000 --> 00:06:45,100
these things so so there are multiple

174
00:06:45,100 --> 00:06:47,650
angles to it multiple data points and

175
00:06:47,650 --> 00:06:49,389
dimensions that you want to like really

176
00:06:49,389 --> 00:06:51,820
look forward but do you also observe

177
00:06:51,820 --> 00:06:53,860
that there is one common thing in all of

178
00:06:53,860 --> 00:06:55,750
these you that time is a common

179
00:06:55,750 --> 00:06:57,460
perspective but what happens is like

180
00:06:57,460 --> 00:07:00,370
people generally what I have looked at

181
00:07:00,370 --> 00:07:02,979
there are multiple tools and doing

182
00:07:02,979 --> 00:07:04,750
individual things and there is a one

183
00:07:04,750 --> 00:07:06,970
common incident management tool or one

184
00:07:06,970 --> 00:07:09,699
common you know like even slack right

185
00:07:09,699 --> 00:07:11,680
they push all the notifications to slack

186
00:07:11,680 --> 00:07:13,210
and discuss as a team and let put

187
00:07:13,210 --> 00:07:16,000
effects back to the other and so this is

188
00:07:16,000 --> 00:07:18,430
once one such solution to kind of like

189
00:07:18,430 --> 00:07:20,530
think of but people are using different

190
00:07:20,530 --> 00:07:22,510
different tools but the time is a common

191
00:07:22,510 --> 00:07:24,669
factor among all of this you have the

192
00:07:24,669 --> 00:07:27,370
time which does which is a that's why

193
00:07:27,370 --> 00:07:28,870
it's called also called as time series

194
00:07:28,870 --> 00:07:31,000
data you have time stamp in each one of

195
00:07:31,000 --> 00:07:32,860
this data and then which can be

196
00:07:32,860 --> 00:07:35,410
correlated so what do we have here like

197
00:07:35,410 --> 00:07:36,490
how do we do that

198
00:07:36,490 --> 00:07:39,009
so specifically if you unify all of this

199
00:07:39,009 --> 00:07:41,710
data into one platform and then and then

200
00:07:41,710 --> 00:07:44,020
the ability to look at your system and

201
00:07:44,020 --> 00:07:46,260
query at any point of time and

202
00:07:46,260 --> 00:07:48,490
understand the internal status of the

203
00:07:48,490 --> 00:07:51,400
system like the system as a whole is

204
00:07:51,400 --> 00:07:54,789
nothing or like the unification of all

205
00:07:54,789 --> 00:07:56,349
these things is nothing but

206
00:07:56,349 --> 00:07:58,630
observability so observability is like

207
00:07:58,630 --> 00:08:00,310
if i have to put it in very simple

208
00:08:00,310 --> 00:08:03,610
manner your logs metrics traces all your

209
00:08:03,610 --> 00:08:06,520
operational data structured in a proper

210
00:08:06,520 --> 00:08:08,710
format like of course there is a if the

211
00:08:08,710 --> 00:08:10,630
format I'll also mentioned Y format is

212
00:08:10,630 --> 00:08:13,240
very important here so and then you have

213
00:08:13,240 --> 00:08:15,669
time as a common common way and like you

214
00:08:15,669 --> 00:08:17,979
can unify all of this and all your teams

215
00:08:17,979 --> 00:08:20,889
can like can do this analysis pretty

216
00:08:20,889 --> 00:08:23,380
easily and do all of this I didn't add

217
00:08:23,380 --> 00:08:25,780
security or more into that area but

218
00:08:25,780 --> 00:08:28,030
we'll also see a bit of it at the end in

219
00:08:28,030 --> 00:08:31,900
the session so again what frameworks and

220
00:08:31,900 --> 00:08:33,909
tools like I understand that all of this

221
00:08:33,909 --> 00:08:36,580
is there but maybe what what are they

222
00:08:36,580 --> 00:08:38,919
and in the obviously a lot many people

223
00:08:38,919 --> 00:08:40,330
use elastic search for logs

224
00:08:40,330 --> 00:08:42,099
it's a popular open-source storage

225
00:08:42,099 --> 00:08:44,229
engine and people ship logs but then

226
00:08:44,229 --> 00:08:46,570
also when you core into this kubernetes

227
00:08:46,570 --> 00:08:49,300
ecosystem the the kubernetes is the

228
00:08:49,300 --> 00:08:50,800
undisputed leader in the container

229
00:08:50,800 --> 00:08:52,750
orchestration ecosystem and then you

230
00:08:52,750 --> 00:08:54,130
have this

231
00:08:54,130 --> 00:08:56,380
the tracing the tracing solution called

232
00:08:56,380 --> 00:08:58,030
Jaeger sorry for the black guys because

233
00:08:58,030 --> 00:08:59,770
I have the bits likes s back so that's

234
00:08:59,770 --> 00:09:02,320
why you have you have the eager with the

235
00:09:02,320 --> 00:09:04,450
black eye but you girl is a tracing

236
00:09:04,450 --> 00:09:06,070
system and then you can collect traces

237
00:09:06,070 --> 00:09:08,140
from the application this is another

238
00:09:08,140 --> 00:09:09,820
tool there are many tracing tools which

239
00:09:09,820 --> 00:09:11,230
I which are also mentioned today and

240
00:09:11,230 --> 00:09:14,170
then and you have prometheus Prometheus

241
00:09:14,170 --> 00:09:16,210
is a matrix store and then you can

242
00:09:16,210 --> 00:09:18,400
collect metrics from again from your

243
00:09:18,400 --> 00:09:20,620
micro services from this can also be an

244
00:09:20,620 --> 00:09:21,880
individual store and then you can

245
00:09:21,880 --> 00:09:23,650
collect data from all of this

246
00:09:23,650 --> 00:09:27,220
etc so you can do that as well and then

247
00:09:27,220 --> 00:09:28,930
and then you also have several other

248
00:09:28,930 --> 00:09:31,000
creasing metrology selling Zipkin is one

249
00:09:31,000 --> 00:09:33,280
another prison tracing methodology which

250
00:09:33,280 --> 00:09:34,030
is quite popular

251
00:09:34,030 --> 00:09:36,010
I believe Ritter also use the connect

252
00:09:36,010 --> 00:09:38,290
some point but there are more and more

253
00:09:38,290 --> 00:09:40,300
popular ones more maturity coming in

254
00:09:40,300 --> 00:09:41,890
this area then you also have open

255
00:09:41,890 --> 00:09:43,840
pressing open pressing is an API or a

256
00:09:43,840 --> 00:09:45,520
library based mode waiting like you can

257
00:09:45,520 --> 00:09:47,800
ship data in that particular format and

258
00:09:47,800 --> 00:09:49,870
then like the tracing happens and then

259
00:09:49,870 --> 00:09:52,990
you have the more like the upcoming one

260
00:09:52,990 --> 00:09:55,770
or like the more popular open telemetry

261
00:09:55,770 --> 00:09:57,940
like which is which has a lot of

262
00:09:57,940 --> 00:09:59,980
collectors which collects data from your

263
00:09:59,980 --> 00:10:02,110
thing and it's also vendor agnostic and

264
00:10:02,110 --> 00:10:03,550
that that means like conjugator

265
00:10:03,550 --> 00:10:05,770
across your place and then obviously

266
00:10:05,770 --> 00:10:08,350
like in the company illustrator company

267
00:10:08,350 --> 00:10:10,810
that I work we also have abuse which is

268
00:10:10,810 --> 00:10:13,120
like a data ship which shifts data like

269
00:10:13,120 --> 00:10:15,220
all types of data like five minute logs

270
00:10:15,220 --> 00:10:18,490
a matrix audit data and different sort

271
00:10:18,490 --> 00:10:20,680
of pizza beats the like we did a super

272
00:10:20,680 --> 00:10:25,240
then we have our own APM agents like the

273
00:10:25,240 --> 00:10:27,130
pizza another open source project and

274
00:10:27,130 --> 00:10:29,110
then through which you can also collapse

275
00:10:29,110 --> 00:10:31,390
application places the cool thing here

276
00:10:31,390 --> 00:10:33,580
is like you could also stream all the

277
00:10:33,580 --> 00:10:35,350
data to a VM server and it can still

278
00:10:35,350 --> 00:10:36,760
understand all of this and like it can

279
00:10:36,760 --> 00:10:38,080
stream back to

280
00:10:38,080 --> 00:10:40,150
elasticsearch even if open telemetry can

281
00:10:40,150 --> 00:10:44,440
do that so but then right when we when

282
00:10:44,440 --> 00:10:46,480
we think of putting all the data in one

283
00:10:46,480 --> 00:10:48,190
single place or when we trying to

284
00:10:48,190 --> 00:10:50,320
collate all the data each phrase or each

285
00:10:50,320 --> 00:10:52,660
framing or each algorithm what it does

286
00:10:52,660 --> 00:10:54,460
is it shifts and stores data in a

287
00:10:54,460 --> 00:10:56,530
different schema obviously everyone has

288
00:10:56,530 --> 00:10:58,570
their own structure it's not like all

289
00:10:58,570 --> 00:11:00,040
the projects are working together they

290
00:11:00,040 --> 00:11:02,920
have their own good way of solving the

291
00:11:02,920 --> 00:11:05,050
problems right so so how do you solve

292
00:11:05,050 --> 00:11:07,150
that particular problem even

293
00:11:07,150 --> 00:11:08,950
as a company and when we when we have

294
00:11:08,950 --> 00:11:12,100
several open source projects and using

295
00:11:12,100 --> 00:11:13,840
different different techniques to solve

296
00:11:13,840 --> 00:11:16,210
the unique problems to that particular

297
00:11:16,210 --> 00:11:17,620
domains for example we have a search

298
00:11:17,620 --> 00:11:20,800
project which where is where is the the

299
00:11:20,800 --> 00:11:23,230
if the PDFs or files for different sort

300
00:11:23,230 --> 00:11:25,330
of data non time series data is ingested

301
00:11:25,330 --> 00:11:28,630
into the search product and its data to

302
00:11:28,630 --> 00:11:30,730
elastic search in a different format its

303
00:11:30,730 --> 00:11:32,170
alias one but is shipped in a different

304
00:11:32,170 --> 00:11:35,260
format then you also have beads which we

305
00:11:35,260 --> 00:11:37,000
should sit by a variety of data you have

306
00:11:37,000 --> 00:11:39,760
seven bits I believe five bit or it be

307
00:11:39,760 --> 00:11:42,970
metric bead function bead each bead for

308
00:11:42,970 --> 00:11:45,730
a different use case packet beat so so

309
00:11:45,730 --> 00:11:47,290
that collapse the data and like pushes

310
00:11:47,290 --> 00:11:49,570
into a different format and then you

311
00:11:49,570 --> 00:11:52,810
also have APM process which I just

312
00:11:52,810 --> 00:11:54,730
mentioned and then you also have the

313
00:11:54,730 --> 00:11:57,040
security product like we're in a seam

314
00:11:57,040 --> 00:11:59,050
where and it collects data from the

315
00:11:59,050 --> 00:12:02,050
endpoints so all of this is not being

316
00:12:02,050 --> 00:12:05,050
shipped in a common data earlier like to

317
00:12:05,050 --> 00:12:06,910
elastic search but we actually came up

318
00:12:06,910 --> 00:12:09,340
with something that could help as a

319
00:12:09,340 --> 00:12:12,190
company as well as other community so

320
00:12:12,190 --> 00:12:14,950
elastic common schema is a schema that

321
00:12:14,950 --> 00:12:16,510
we have developed over a period of time

322
00:12:16,510 --> 00:12:19,630
and then it's also like it's also long

323
00:12:19,630 --> 00:12:21,760
term you can raise feedback so what it

324
00:12:21,760 --> 00:12:23,620
specifically does is like it's a Cooley

325
00:12:23,620 --> 00:12:25,870
a table common schema that can unify

326
00:12:25,870 --> 00:12:27,220
data coming from different systems

327
00:12:27,220 --> 00:12:29,890
whatsoever different symmetries it's

328
00:12:29,890 --> 00:12:32,290
like a large table of things that

329
00:12:32,290 --> 00:12:34,240
everything is mapped to a proper data

330
00:12:34,240 --> 00:12:37,060
type so that whenever you take or data

331
00:12:37,060 --> 00:12:39,670
from your applications and you want to

332
00:12:39,670 --> 00:12:41,920
do a security analysis on top of it like

333
00:12:41,920 --> 00:12:45,430
understanding say okay that I got a I

334
00:12:45,430 --> 00:12:47,620
got a post request but there is no user

335
00:12:47,620 --> 00:12:49,510
agent or there is some something really

336
00:12:49,510 --> 00:12:51,790
wrong and I want to unify I want to

337
00:12:51,790 --> 00:12:53,860
check with the align with the audit data

338
00:12:53,860 --> 00:12:56,380
of my application overlay one on one and

339
00:12:56,380 --> 00:12:58,270
see whether the eye piece are matching

340
00:12:58,270 --> 00:13:01,180
or whether whether the ports are are

341
00:13:01,180 --> 00:13:03,160
similar like I want to understand at the

342
00:13:03,160 --> 00:13:04,660
same point of time whether these two

343
00:13:04,660 --> 00:13:07,320
these two things are matching or not so

344
00:13:07,320 --> 00:13:09,880
probably you might have a custom custom

345
00:13:09,880 --> 00:13:11,890
thing like you know the Cisco Cisco

346
00:13:11,890 --> 00:13:13,720
Rooter so I probably say some other

347
00:13:13,720 --> 00:13:15,790
Paulo Palo Alto Networks you have might

348
00:13:15,790 --> 00:13:18,130
have a custom implemented a specific

349
00:13:18,130 --> 00:13:20,769
vendor related solution so

350
00:13:20,769 --> 00:13:22,739
all of them the data coming from that

351
00:13:22,739 --> 00:13:25,689
using EC as implemented in August of

352
00:13:25,689 --> 00:13:27,519
libraries you can simply take advantage

353
00:13:27,519 --> 00:13:29,920
of it and and unify that it is in the

354
00:13:29,920 --> 00:13:33,069
same structure so I'll also explain how

355
00:13:33,069 --> 00:13:34,899
it can be I mean like this this is very

356
00:13:34,899 --> 00:13:37,839
easy to understand but all of the data

357
00:13:37,839 --> 00:13:39,639
that we came to ship all of the data

358
00:13:39,639 --> 00:13:41,470
that we have the products that we have

359
00:13:41,470 --> 00:13:43,540
like to be it's tracers will shift in

360
00:13:43,540 --> 00:13:45,309
the EECS format there are a couple of

361
00:13:45,309 --> 00:13:47,649
partners within like you know Cisco and

362
00:13:47,649 --> 00:13:49,629
Palo Alto which has which has a lot of

363
00:13:49,629 --> 00:13:52,480
infrastructure they also they also made

364
00:13:52,480 --> 00:13:53,860
changes so that like they could ship the

365
00:13:53,860 --> 00:13:55,420
data and the specific format of

366
00:13:55,420 --> 00:13:58,059
customers or users required so for

367
00:13:58,059 --> 00:14:00,329
example if you are looking at you know

368
00:14:00,329 --> 00:14:02,889
like the cloud platform or your on-prem

369
00:14:02,889 --> 00:14:06,759
datacenter you until you use beats or

370
00:14:06,759 --> 00:14:08,769
like say suppose even promise yes to

371
00:14:08,769 --> 00:14:10,689
store the matrix but you can use a bit

372
00:14:10,689 --> 00:14:13,029
symmetric modules it will ship data in a

373
00:14:13,029 --> 00:14:15,040
EGS format to elasticsearch at the same

374
00:14:15,040 --> 00:14:16,839
time with either one of them you use all

375
00:14:16,839 --> 00:14:19,779
of this tracing methodologies I mean to

376
00:14:19,779 --> 00:14:21,819
place your application and then it can

377
00:14:21,819 --> 00:14:23,559
still ship data to the in the easiest

378
00:14:23,559 --> 00:14:25,689
format I think like probably this is

379
00:14:25,689 --> 00:14:27,970
wrong because it doesn't ship out of box

380
00:14:27,970 --> 00:14:31,209
like the easiest but it ships here in

381
00:14:31,209 --> 00:14:33,220
ASIS format because APM is a server that

382
00:14:33,220 --> 00:14:36,339
we manage so so in throughout you can

383
00:14:36,339 --> 00:14:38,170
correlate and you can unify the data

384
00:14:38,170 --> 00:14:39,999
overlay on one on one so that is one

385
00:14:39,999 --> 00:14:44,079
another thing to look at here so you can

386
00:14:44,079 --> 00:14:45,879
remove because I have an interesting

387
00:14:45,879 --> 00:14:49,350
demo to show something so I have a

388
00:14:49,350 --> 00:14:52,869
spring boot app I showed you the Google

389
00:14:52,869 --> 00:14:55,179
shell I have built that and I'll push

390
00:14:55,179 --> 00:14:56,799
that into a Google container registry

391
00:14:56,799 --> 00:14:59,619
image and then I we have already created

392
00:14:59,619 --> 00:15:02,709
a Google kubernetes engine faster before

393
00:15:02,709 --> 00:15:04,509
starting you know before starting the

394
00:15:04,509 --> 00:15:06,249
session and I think it should be ready

395
00:15:06,249 --> 00:15:08,049
and we'll deploy that and we'll trace it

396
00:15:08,049 --> 00:15:10,119
using one of some of these technologies

397
00:15:10,119 --> 00:15:11,649
I know that time is a limiting factor

398
00:15:11,649 --> 00:15:15,339
here and we really can't like probably

399
00:15:15,339 --> 00:15:17,079
implement everything but I'll also have

400
00:15:17,079 --> 00:15:18,189
to take questions so what we'll do is

401
00:15:18,189 --> 00:15:20,079
like I'll show whatever I could do and

402
00:15:20,079 --> 00:15:21,999
then if you have any more questions I'm

403
00:15:21,999 --> 00:15:24,939
happy to answer as well so here you go

404
00:15:24,939 --> 00:15:27,189
that I have spinned up clustered here

405
00:15:27,189 --> 00:15:31,029
and then I have I have this particular

406
00:15:31,029 --> 00:15:31,690
you know

407
00:15:31,690 --> 00:15:33,790
the username password and click download

408
00:15:33,790 --> 00:15:35,950
on it this is a safe side and then I'll

409
00:15:35,950 --> 00:15:39,520
click copy and so the password is copy I

410
00:15:39,520 --> 00:15:40,900
think on launch key bar now so that the

411
00:15:40,900 --> 00:15:43,240
Cabana is launched and meanwhile we'll

412
00:15:43,240 --> 00:15:46,030
check the demo cluster is up and we just

413
00:15:46,030 --> 00:15:47,170
need to connect to this particular

414
00:15:47,170 --> 00:15:50,440
cluster so that you know it works so let

415
00:15:50,440 --> 00:15:53,890
me quickly go to one event at this

416
00:15:53,890 --> 00:15:56,670
particular thing so that it locks in

417
00:15:56,670 --> 00:15:59,500
simple we just log into the system video

418
00:15:59,500 --> 00:16:02,350
due any day anything specific so let us

419
00:16:02,350 --> 00:16:04,720
connect to this cluster this is a

420
00:16:04,720 --> 00:16:08,520
kubernetes as a service pop very popular

421
00:16:08,520 --> 00:16:13,090
google kubernetes engine so I have this

422
00:16:13,090 --> 00:16:15,340
Scout shell which is which is linked to

423
00:16:15,340 --> 00:16:17,290
the same project here Deb dish the

424
00:16:17,290 --> 00:16:19,690
project is yeah it's a different name

425
00:16:19,690 --> 00:16:22,170
but actually the keyword established so

426
00:16:22,170 --> 00:16:25,930
I have the cluster created and let us

427
00:16:25,930 --> 00:16:36,670
see Cpl okay faster info takes a bit of

428
00:16:36,670 --> 00:16:40,780
time maybe I don't know yeah so we have

429
00:16:40,780 --> 00:16:43,620
the cluster running with all things and

430
00:16:43,620 --> 00:16:46,180
we just need to like build and deploy

431
00:16:46,180 --> 00:16:47,740
the stuff so I also have a script so

432
00:16:47,740 --> 00:16:49,840
that like we we can we can quickly go

433
00:16:49,840 --> 00:16:52,990
and see the application that we have so

434
00:16:52,990 --> 00:16:55,450
the application that I have here is a

435
00:16:55,450 --> 00:16:59,260
simple spring boot app it has it has a

436
00:16:59,260 --> 00:17:01,810
one single class application dot Java

437
00:17:01,810 --> 00:17:05,560
and then I have a agent running here

438
00:17:05,560 --> 00:17:08,200
this is interesting so what what we have

439
00:17:08,200 --> 00:17:11,740
here is a programmatic attached to the

440
00:17:11,740 --> 00:17:14,079
application from an APM agent so what

441
00:17:14,079 --> 00:17:15,849
happens here is if you go back to my

442
00:17:15,849 --> 00:17:18,940
slides you will see that I have I have

443
00:17:18,940 --> 00:17:20,980
spoken about like ok the application is

444
00:17:20,980 --> 00:17:22,569
running in this cloud can ship the data

445
00:17:22,569 --> 00:17:25,569
to the places no even even if you don't

446
00:17:25,569 --> 00:17:27,280
use these you can simply ship the data

447
00:17:27,280 --> 00:17:29,050
to the tracing platforms and then like

448
00:17:29,050 --> 00:17:31,120
it can shape data to elastic through

449
00:17:31,120 --> 00:17:32,860
which you can use it you can use gabbana

450
00:17:32,860 --> 00:17:35,770
to look at to it so I'll simply I'll

451
00:17:35,770 --> 00:17:37,810
simply kind of like show you how this

452
00:17:37,810 --> 00:17:41,380
works out so I have an agent a Java

453
00:17:41,380 --> 00:17:44,740
library which is imported here and

454
00:17:44,740 --> 00:17:47,289
I have an attached er which can attach

455
00:17:47,289 --> 00:17:48,789
the binary there are three types of

456
00:17:48,789 --> 00:17:50,860
weights that you can attach to an using

457
00:17:50,860 --> 00:17:52,600
a double agent you can use the command

458
00:17:52,600 --> 00:17:54,640
line odds you can use the programmatic

459
00:17:54,640 --> 00:17:56,649
attach there's one another address that

460
00:17:56,649 --> 00:17:58,840
you can use as a char that you can

461
00:17:58,840 --> 00:18:01,299
attach to the process and like I'll

462
00:18:01,299 --> 00:18:04,450
start collecting data so we we put this

463
00:18:04,450 --> 00:18:06,460
particular library here but we also have

464
00:18:06,460 --> 00:18:09,279
to give way it needs to ship the traces

465
00:18:09,279 --> 00:18:11,980
too right so so we'll need to look at

466
00:18:11,980 --> 00:18:14,590
the there is a way that you do is meet

467
00:18:14,590 --> 00:18:16,059
automatically the agent automatically

468
00:18:16,059 --> 00:18:17,710
looks at elastic a primitive property is

469
00:18:17,710 --> 00:18:19,570
a file that you create which tells about

470
00:18:19,570 --> 00:18:21,130
the service name the application

471
00:18:21,130 --> 00:18:22,870
packages that you want to trace and then

472
00:18:22,870 --> 00:18:24,940
the server URL and then the secret token

473
00:18:24,940 --> 00:18:27,760
so I already have something here a demo

474
00:18:27,760 --> 00:18:29,950
a backup environment but I want to like

475
00:18:29,950 --> 00:18:32,620
literally create a look for something

476
00:18:32,620 --> 00:18:34,419
like and this password is only shown

477
00:18:34,419 --> 00:18:36,640
once if you move away you have to be

478
00:18:36,640 --> 00:18:38,500
able to do it again or you need to reset

479
00:18:38,500 --> 00:18:40,450
it so that's why I have copied it so let

480
00:18:40,450 --> 00:18:42,610
me quickly go back and copy the APM

481
00:18:42,610 --> 00:18:45,039
server so if you go here there are three

482
00:18:45,039 --> 00:18:47,320
things already deployed and I have an

483
00:18:47,320 --> 00:18:50,289
APM server I have a secret token for it

484
00:18:50,289 --> 00:18:53,980
so to ship the data so I quickly copy

485
00:18:53,980 --> 00:19:07,270
this one and then I also have o assuming

486
00:19:07,270 --> 00:19:08,980
that I am I'll be able to ship the data

487
00:19:08,980 --> 00:19:11,279
directly to this from this application

488
00:19:11,279 --> 00:19:14,289
like to the to the atrium support but

489
00:19:14,289 --> 00:19:15,850
what else is there in this application I

490
00:19:15,850 --> 00:19:17,890
have an authentication this is a

491
00:19:17,890 --> 00:19:22,059
springboard secure you know the getting

492
00:19:22,059 --> 00:19:25,149
started spin would secure app so I just

493
00:19:25,149 --> 00:19:27,940
changed a bit of it here and then like

494
00:19:27,940 --> 00:19:29,380
checking whether word the application

495
00:19:29,380 --> 00:19:31,419
the user is authenticated or not if the

496
00:19:31,419 --> 00:19:33,370
user doesn't indicate what is the cause

497
00:19:33,370 --> 00:19:35,320
and a lot of these details and then if

498
00:19:35,320 --> 00:19:37,450
suppose if somebody tries to log in with

499
00:19:37,450 --> 00:19:40,419
an 8 min then say create an error saying

500
00:19:40,419 --> 00:19:43,179
that there is no admin here so that we

501
00:19:43,179 --> 00:19:46,000
can trace that a specific error handle

502
00:19:46,000 --> 00:19:48,070
description I don't have any code here I

503
00:19:48,070 --> 00:19:51,130
only have one particular line of code in

504
00:19:51,130 --> 00:19:52,299
the application dot Java

505
00:19:52,299 --> 00:19:54,399
nothing more than that I also don't have

506
00:19:54,399 --> 00:19:56,320
any other thing like I have specific

507
00:19:56,320 --> 00:19:57,789
user and password

508
00:19:57,789 --> 00:19:58,510
the username

509
00:19:58,510 --> 00:20:00,430
a password as user password and the role

510
00:20:00,430 --> 00:20:03,670
is specifically said I have three three

511
00:20:03,670 --> 00:20:05,290
lines like three templates I use

512
00:20:05,290 --> 00:20:06,550
template that time leave

513
00:20:06,550 --> 00:20:09,430
hello home and login these are the three

514
00:20:09,430 --> 00:20:11,230
templates HTML files that I have

515
00:20:11,230 --> 00:20:13,600
application properties doesn't have

516
00:20:13,600 --> 00:20:15,490
anything you have log Springwood block

517
00:20:15,490 --> 00:20:16,990
which is being locked at this particular

518
00:20:16,990 --> 00:20:20,170
place so that's it from my point of view

519
00:20:20,170 --> 00:20:24,400
so so you can also use you can also use

520
00:20:24,400 --> 00:20:27,340
specifically use something like ECS

521
00:20:27,340 --> 00:20:30,330
logger to log the data in a format that

522
00:20:30,330 --> 00:20:32,710
specifically works because it's less

523
00:20:32,710 --> 00:20:34,510
time I can't discuss more about it but

524
00:20:34,510 --> 00:20:37,090
you can I can simply show you that so

525
00:20:37,090 --> 00:20:39,010
this is a library that you could include

526
00:20:39,010 --> 00:20:41,200
in your quadrant XML which is an

527
00:20:41,200 --> 00:20:43,210
implementer which structures your logs

528
00:20:43,210 --> 00:20:45,490
coming from your spring boot framework

529
00:20:45,490 --> 00:20:49,780
in a format that the entire it can be

530
00:20:49,780 --> 00:20:51,430
correlated with naturally so that is the

531
00:20:51,430 --> 00:20:53,560
goal here so just we are just writing a

532
00:20:53,560 --> 00:20:55,660
ECS JSON file so that if I'll be can

533
00:20:55,660 --> 00:20:57,700
pick up and send the data but we are not

534
00:20:57,700 --> 00:20:59,170
specifically looking at that will just

535
00:20:59,170 --> 00:21:01,210
simply shipping the pod locks nowadays

536
00:21:01,210 --> 00:21:04,060
so that being said let me let us quickly

537
00:21:04,060 --> 00:21:06,550
go back here and try to like you know

538
00:21:06,550 --> 00:21:08,560
sheep you know build this particular

539
00:21:08,560 --> 00:21:12,100
thing so I am in this Bay same same

540
00:21:12,100 --> 00:21:15,370
location where we have started so let us

541
00:21:15,370 --> 00:21:17,590
quickly go back and see if you can run

542
00:21:17,590 --> 00:21:19,570
this application once and see whether if

543
00:21:19,570 --> 00:21:23,320
it is shipping the data so this is all

544
00:21:23,320 --> 00:21:25,360
my localhost and then I'm trying to chip

545
00:21:25,360 --> 00:21:28,570
that it automatically it shows that it

546
00:21:28,570 --> 00:21:31,030
is trying to attach the agents as you

547
00:21:31,030 --> 00:21:33,280
see and it is trying to connect to that

548
00:21:33,280 --> 00:21:35,170
particular course that we have it

549
00:21:35,170 --> 00:21:37,300
successfully connected and the server is

550
00:21:37,300 --> 00:21:40,450
saying like 7.7 dot one and we could

551
00:21:40,450 --> 00:21:42,370
chip matrix or stuff like that to that

552
00:21:42,370 --> 00:21:45,700
so let me let me quickly get started and

553
00:21:45,700 --> 00:21:55,690
then again so you could see that I hope

554
00:21:55,690 --> 00:22:02,850
it is up by this time no it is now

555
00:22:07,820 --> 00:22:12,020
it is not sucker right that's right now

556
00:22:12,020 --> 00:22:15,450
great you see a welcome you see a

557
00:22:15,450 --> 00:22:17,580
welcome greeting and it's it's very

558
00:22:17,580 --> 00:22:20,510
small I'm sorry but let me increase that

559
00:22:20,510 --> 00:22:24,330
it's very simple then you have click

560
00:22:24,330 --> 00:22:26,460
here to see greeting and then you have

561
00:22:26,460 --> 00:22:31,680
user password as well as a password and

562
00:22:31,680 --> 00:22:34,080
then when we login it locks in it

563
00:22:34,080 --> 00:22:36,870
generates the logs accordingly and I

564
00:22:36,870 --> 00:22:39,240
have logged a specific thing but you can

565
00:22:39,240 --> 00:22:42,990
also see sign out and then I do admin

566
00:22:42,990 --> 00:22:46,380
admin which is a place where we can edit

567
00:22:46,380 --> 00:22:47,760
the error you see the error being

568
00:22:47,760 --> 00:22:50,210
generated in this context here

569
00:22:50,210 --> 00:22:52,200
understanding what's what's wrong with

570
00:22:52,200 --> 00:22:54,600
the specific stuff now this is great I

571
00:22:54,600 --> 00:22:56,520
feel that the data is being shipped here

572
00:22:56,520 --> 00:22:59,340
and it's already there now quickly go

573
00:22:59,340 --> 00:23:01,890
back to the cubanos to see whether it

574
00:23:01,890 --> 00:23:04,470
simply works or not whether it is being

575
00:23:04,470 --> 00:23:06,390
shipped from the local instance itself

576
00:23:06,390 --> 00:23:06,780
or not

577
00:23:06,780 --> 00:23:09,630
so click down the APM app I didn't show

578
00:23:09,630 --> 00:23:11,310
you I can show you in a minute

579
00:23:11,310 --> 00:23:15,030
so specifically yeah you see the service

580
00:23:15,030 --> 00:23:16,140
name that we have given in the

581
00:23:16,140 --> 00:23:18,750
properties file which shown up here you

582
00:23:18,750 --> 00:23:20,580
see the agent that is being shipped here

583
00:23:20,580 --> 00:23:23,520
and then you also see the JVM that is

584
00:23:23,520 --> 00:23:26,210
running this particular thing my macbook

585
00:23:26,210 --> 00:23:28,830
since the cpu average will not get into

586
00:23:28,830 --> 00:23:30,480
that but we see that the data is coming

587
00:23:30,480 --> 00:23:32,520
and like the data has been done and a

588
00:23:32,520 --> 00:23:34,620
lot of these things are doing them so

589
00:23:34,620 --> 00:23:37,800
let us quickly come you know that is

590
00:23:37,800 --> 00:23:40,830
this and then we we kind of like ship it

591
00:23:40,830 --> 00:23:42,930
to the cloud and then install in the

592
00:23:42,930 --> 00:23:45,330
cloud and do all that you know collect

593
00:23:45,330 --> 00:23:46,830
all the metrics and traces everything

594
00:23:46,830 --> 00:23:49,230
from that place so let me simply quickly

595
00:23:49,230 --> 00:23:52,970
pack is this one

596
00:24:00,000 --> 00:24:02,200
if you have any questions in between

597
00:24:02,200 --> 00:24:03,880
that you can write it into the comments

598
00:24:03,880 --> 00:24:06,400
so that whenever we are done with the

599
00:24:06,400 --> 00:24:08,050
session we can definitely take it so

600
00:24:08,050 --> 00:24:10,210
don't keep holding on to you so that

601
00:24:10,210 --> 00:24:13,330
it's difficult again you forget so I

602
00:24:13,330 --> 00:24:15,880
know how I have already enabled the

603
00:24:15,880 --> 00:24:17,980
continuous key continually this fee is a

604
00:24:17,980 --> 00:24:19,480
place where you hold all the containers

605
00:24:19,480 --> 00:24:21,610
every cloud has a continually to speak

606
00:24:21,610 --> 00:24:23,350
it obvious as a catalyst for you to as

607
00:24:23,350 --> 00:24:24,790
container this way each has a different

608
00:24:24,790 --> 00:24:28,330
name GCR ACR and it may be something

609
00:24:28,330 --> 00:24:31,090
with AWS as well so so I have enabled it

610
00:24:31,090 --> 00:24:32,560
this in EPA enabled from the Google

611
00:24:32,560 --> 00:24:35,290
Cloud SDK so one thing I have already

612
00:24:35,290 --> 00:24:39,040
done that I could simply use this to

613
00:24:39,040 --> 00:24:41,500
ship this particular please this image

614
00:24:41,500 --> 00:24:43,450
let me quickly see that I haven't I

615
00:24:43,450 --> 00:24:45,850
don't have any specific bills already so

616
00:24:45,850 --> 00:24:49,150
I don't have any bill right now it's all

617
00:24:49,150 --> 00:24:53,080
three and I am using a plugin called zip

618
00:24:53,080 --> 00:24:56,020
which they IB which is another open

619
00:24:56,020 --> 00:24:58,750
source plugin from Google Cloud where in

620
00:24:58,750 --> 00:25:01,390
it simply you know it kind of like

621
00:25:01,390 --> 00:25:03,610
simply builds the container image for

622
00:25:03,610 --> 00:25:04,960
you you can also mention what sort of

623
00:25:04,960 --> 00:25:07,450
base images that you want a specific

624
00:25:07,450 --> 00:25:09,220
image if you are looking at and also the

625
00:25:09,220 --> 00:25:11,290
programs and multiple stuff it's an

626
00:25:11,290 --> 00:25:12,550
interesting project it's a MAV and

627
00:25:12,550 --> 00:25:13,930
plugin if you're a Java developer

628
00:25:13,930 --> 00:25:16,410
probably you might want to look at that

629
00:25:16,410 --> 00:25:20,020
then then I'll create a fresh I should

630
00:25:20,020 --> 00:25:22,930
see a hollow dot Java you also need to

631
00:25:22,930 --> 00:25:25,210
look at the tagging perspective like if

632
00:25:25,210 --> 00:25:26,980
the file hash or something changes like

633
00:25:26,980 --> 00:25:29,290
you will have a different tag here now

634
00:25:29,290 --> 00:25:31,150
now that we have shipped the data from

635
00:25:31,150 --> 00:25:34,480
here to there the custom things you can

636
00:25:34,480 --> 00:25:36,280
also run it on a docker using the cloud

637
00:25:36,280 --> 00:25:38,560
shell I think in the interest of time I

638
00:25:38,560 --> 00:25:40,420
will not do that let us quickly see if

639
00:25:40,420 --> 00:25:42,250
there are any parts and see what

640
00:25:42,250 --> 00:25:44,110
resources are there in the kubernetes

641
00:25:44,110 --> 00:25:46,720
system using the croucher now remember

642
00:25:46,720 --> 00:25:48,130
we see is the shell that is there in the

643
00:25:48,130 --> 00:25:49,960
Google cloud and I am doing nothing here

644
00:25:49,960 --> 00:25:52,870
it's just using for the kubernetes stuff

645
00:25:52,870 --> 00:25:55,780
actually so now let me quickly go back

646
00:25:55,780 --> 00:25:58,060
and see I don't have any part so I will

647
00:25:58,060 --> 00:26:01,270
just apply this you know from the from

648
00:26:01,270 --> 00:26:05,800
the the VCR I have DCR dot io / web -

649
00:26:05,800 --> 00:26:08,410
dev - my project name and then the

650
00:26:08,410 --> 00:26:10,810
container name and the tag name so just

651
00:26:10,810 --> 00:26:12,490
trying to deploy that

652
00:26:12,490 --> 00:26:14,350
I should quickly see that the app has

653
00:26:14,350 --> 00:26:18,370
been created and we can quickly get to

654
00:26:18,370 --> 00:26:20,890
the deployments part like say cube CPL

655
00:26:20,890 --> 00:26:22,840
get with primes

656
00:26:22,840 --> 00:26:24,580
I am trying to do this in kubernetes for

657
00:26:24,580 --> 00:26:26,559
various variety of reasons because like

658
00:26:26,559 --> 00:26:27,730
you know kubernetes

659
00:26:27,730 --> 00:26:30,100
is the go-to place for a lot of people

660
00:26:30,100 --> 00:26:32,470
and then people run my services open it

661
00:26:32,470 --> 00:26:34,390
is like that's why it is interesting to

662
00:26:34,390 --> 00:26:37,360
me actually so one thing that we didn't

663
00:26:37,360 --> 00:26:41,170
showcase or I didn't tell you here is we

664
00:26:41,170 --> 00:26:43,540
have created a pod we have but we

665
00:26:43,540 --> 00:26:46,570
haven't created externally accessible

666
00:26:46,570 --> 00:26:49,960
you are and so I want to see you that I

667
00:26:49,960 --> 00:26:52,000
want to show you that there is no

668
00:26:52,000 --> 00:26:54,910
services are that running that exposes

669
00:26:54,910 --> 00:26:56,950
the sub use externally so just like it's

670
00:26:56,950 --> 00:26:58,840
not your localhost or you can't do that

671
00:26:58,840 --> 00:27:00,580
you either need to do port forwarding

672
00:27:00,580 --> 00:27:02,530
and access through you or this

673
00:27:02,530 --> 00:27:04,870
particular machine but we want to put an

674
00:27:04,870 --> 00:27:06,640
give an external IP so I'll quickly

675
00:27:06,640 --> 00:27:09,820
click on the load balancer part and then

676
00:27:09,820 --> 00:27:12,700
it creates the service and we will get

677
00:27:12,700 --> 00:27:14,950
an external IP here in a minute because

678
00:27:14,950 --> 00:27:17,380
it takes time to get an IP that command

679
00:27:17,380 --> 00:27:20,080
available pool and then you could also

680
00:27:20,080 --> 00:27:23,260
access this particular URL from your own

681
00:27:23,260 --> 00:27:25,330
from your own browser and can generate

682
00:27:25,330 --> 00:27:27,700
the date data for us so that we can see

683
00:27:27,700 --> 00:27:30,880
that so when that is happening I also

684
00:27:30,880 --> 00:27:32,470
talked about some other things that we

685
00:27:32,470 --> 00:27:36,190
want to deploy here so very easy are

686
00:27:36,190 --> 00:27:38,590
some specific files that I have created

687
00:27:38,590 --> 00:27:41,980
and I will explain you about that and to

688
00:27:41,980 --> 00:27:44,140
collect the Lobsang matrix from the who

689
00:27:44,140 --> 00:27:46,570
be flowered or the platform here so this

690
00:27:46,570 --> 00:27:49,809
is file B dot Yemen again in kubernetes

691
00:27:49,809 --> 00:27:51,670
it's a dictatorial trickled a two way to

692
00:27:51,670 --> 00:27:53,380
like program program and get all the

693
00:27:53,380 --> 00:27:57,640
data so you have EML files which can be

694
00:27:57,640 --> 00:27:59,410
deployed and then you can collect data

695
00:27:59,410 --> 00:28:03,190
automatically and using five beat we are

696
00:28:03,190 --> 00:28:05,679
we are trying to ship you know we're

697
00:28:05,679 --> 00:28:07,630
trying to we are trying to like collect

698
00:28:07,630 --> 00:28:10,270
data from the five beat let me see if

699
00:28:10,270 --> 00:28:14,020
something is wrong wait okay using the

700
00:28:14,020 --> 00:28:18,030
file beat here you could

701
00:28:28,980 --> 00:28:32,860
okay I think I had some problem here in

702
00:28:32,860 --> 00:28:35,860
between using the five bit here you can

703
00:28:35,860 --> 00:28:38,920
shape a lot of data and you can you can

704
00:28:38,920 --> 00:28:42,760
do a lot of stuff let me share my screen

705
00:28:42,760 --> 00:28:47,860
here great I hope I hope you are able to

706
00:28:47,860 --> 00:28:53,380
see it I think it helps me to you know

707
00:28:53,380 --> 00:29:02,170
put put the screen back okay that's

708
00:29:02,170 --> 00:29:04,360
great thank you so there's a blip here

709
00:29:04,360 --> 00:29:07,840
and then I'm trying to push the I'm

710
00:29:07,840 --> 00:29:10,480
trying to push the fire continue here

711
00:29:10,480 --> 00:29:14,260
and then I have I have the logs and

712
00:29:14,260 --> 00:29:16,600
stuff enabled here and then I also have

713
00:29:16,600 --> 00:29:17,950
the metric beat which that's the

714
00:29:17,950 --> 00:29:20,170
specific same specific thing but where

715
00:29:20,170 --> 00:29:22,179
does this ship data collecting the data

716
00:29:22,179 --> 00:29:24,550
how does it get deployed it gets

717
00:29:24,550 --> 00:29:26,309
deployed as Adam and said it is not

718
00:29:26,309 --> 00:29:29,710
poking into every container of your

719
00:29:29,710 --> 00:29:31,630
running on kubernetes what it

720
00:29:31,630 --> 00:29:34,720
specifically does this it it gets the

721
00:29:34,720 --> 00:29:37,000
mall it gets the final bit is running as

722
00:29:37,000 --> 00:29:38,860
a dimension like a container just like

723
00:29:38,860 --> 00:29:42,220
any any other pot but the logs coming

724
00:29:42,220 --> 00:29:43,750
from your own container your own

725
00:29:43,750 --> 00:29:45,850
namespace is getting mounted onto the

726
00:29:45,850 --> 00:29:48,550
five bit and then that is where we pick

727
00:29:48,550 --> 00:29:50,170
up your hogs and push it to other places

728
00:29:50,170 --> 00:29:52,480
in a structured format again five bit

729
00:29:52,480 --> 00:29:55,900
ships data in our ECS format so but

730
00:29:55,900 --> 00:29:57,640
where does it know like how does the

731
00:29:57,640 --> 00:29:59,920
username password so you could also

732
00:29:59,920 --> 00:30:03,250
gives in the kubernetes secrets i have

733
00:30:03,250 --> 00:30:04,450
just given it here this is not a

734
00:30:04,450 --> 00:30:06,700
standard way to do things I apologize

735
00:30:06,700 --> 00:30:08,290
but but you should definitely use the

736
00:30:08,290 --> 00:30:10,240
secrets but in the interest of time and

737
00:30:10,240 --> 00:30:12,580
everything so I just use the cloud ID

738
00:30:12,580 --> 00:30:14,830
which is there here which is an identity

739
00:30:14,830 --> 00:30:16,900
for the cluster that you have and then

740
00:30:16,900 --> 00:30:20,500
you also have we also have the password

741
00:30:20,500 --> 00:30:22,360
that we have created like elastic and

742
00:30:22,360 --> 00:30:24,250
this thing again it is a good practice

743
00:30:24,250 --> 00:30:26,920
to use a faceless or the ID that is not

744
00:30:26,920 --> 00:30:28,630
used by any user you can do that using

745
00:30:28,630 --> 00:30:30,730
effect in the cloud you can you can

746
00:30:30,730 --> 00:30:32,470
define permissions you can see what is

747
00:30:32,470 --> 00:30:35,279
that user you can also assign rules

748
00:30:35,279 --> 00:30:38,299
so I have that that specific thing here

749
00:30:38,299 --> 00:30:41,519
let us quickly see whether I would get

750
00:30:41,519 --> 00:30:43,500
the IP or not and see if we can access

751
00:30:43,500 --> 00:30:45,659
this particular thing I have got an

752
00:30:45,659 --> 00:30:51,600
external IP let me see if I could access

753
00:30:51,600 --> 00:30:56,100
data you know we are very near but also

754
00:30:56,100 --> 00:30:59,100
we are me very near to the showing

755
00:30:59,100 --> 00:31:01,409
everything so I have this accessible if

756
00:31:01,409 --> 00:31:02,820
you want to access that you can also see

757
00:31:02,820 --> 00:31:06,149
the IP n use it so let me bring that

758
00:31:06,149 --> 00:31:10,049
here and see the data is coming through

759
00:31:10,049 --> 00:31:12,149
so now now that the application is

760
00:31:12,149 --> 00:31:14,610
started we should see another JVM as

761
00:31:14,610 --> 00:31:17,130
well so it shows last 24 hours let us

762
00:31:17,130 --> 00:31:19,710
apply the last 15 hours and see if it

763
00:31:19,710 --> 00:31:21,720
shows me anything different so I'm

764
00:31:21,720 --> 00:31:23,880
trying to show ya okay now you got a

765
00:31:23,880 --> 00:31:25,830
different container you got a different

766
00:31:25,830 --> 00:31:29,220
places and more more metrics around that

767
00:31:29,220 --> 00:31:31,980
let us pause for a while and we also see

768
00:31:31,980 --> 00:31:34,620
that whether the error is occurring or

769
00:31:34,620 --> 00:31:38,010
not so we don't obviously this is an

770
00:31:38,010 --> 00:31:39,450
error that is generated from my laptop

771
00:31:39,450 --> 00:31:41,309
see let us see if we could generate an

772
00:31:41,309 --> 00:31:46,490
error in the last two minutes or so so

773
00:31:46,490 --> 00:31:48,690
there's no error as of now so we will

774
00:31:48,690 --> 00:31:52,049
see if we can capture errors and then we

775
00:31:52,049 --> 00:31:54,090
can see whether the related logs in to

776
00:31:54,090 --> 00:31:57,240
that particular place as well so I think

777
00:31:57,240 --> 00:31:59,309
it should showcase the error now because

778
00:31:59,309 --> 00:32:01,110
we are trying to look at this particular

779
00:32:01,110 --> 00:32:02,779
thing

780
00:32:02,779 --> 00:32:05,309
okay takes a while and it tries to

781
00:32:05,309 --> 00:32:08,399
connect to that particular system yeah

782
00:32:08,399 --> 00:32:11,130
just see just see the application you

783
00:32:11,130 --> 00:32:12,720
can also see the occurrences like how

784
00:32:12,720 --> 00:32:14,639
many tiny pieces this error is happening

785
00:32:14,639 --> 00:32:16,559
and you can see the traces etcetera but

786
00:32:16,559 --> 00:32:17,970
this is not we want to do we want to

787
00:32:17,970 --> 00:32:19,889
correlate the data we want to see okay

788
00:32:19,889 --> 00:32:21,450
this error has occurred where it has

789
00:32:21,450 --> 00:32:22,889
occurred how it has occurred what are

790
00:32:22,889 --> 00:32:24,570
the metadata that you have you can look

791
00:32:24,570 --> 00:32:26,429
at the metadata here but that's not it

792
00:32:26,429 --> 00:32:29,730
again we just want to see whether the

793
00:32:29,730 --> 00:32:32,610
the logs are appropriate or whether we

794
00:32:32,610 --> 00:32:35,490
are able to see a specific specific car

795
00:32:35,490 --> 00:32:37,409
race etc so if you see that it is

796
00:32:37,409 --> 00:32:40,080
showing the API that it is queried to

797
00:32:40,080 --> 00:32:41,730
pull this data see I'm trying to do

798
00:32:41,730 --> 00:32:44,190
login in together that I've logged in

799
00:32:44,190 --> 00:32:46,350
and then it's also showing multiple

800
00:32:46,350 --> 00:32:48,500
actions here like see I could create

801
00:32:48,500 --> 00:32:51,020
power locks matrix container locks and

802
00:32:51,020 --> 00:32:52,940
multiple stuff let me quickly click on

803
00:32:52,940 --> 00:32:54,470
the pod lock so that like we'll go to

804
00:32:54,470 --> 00:32:56,750
the locks and we'll see what is there

805
00:32:56,750 --> 00:32:59,320
before and after what did the user do or

806
00:32:59,320 --> 00:33:01,940
do we do we have anything specific there

807
00:33:01,940 --> 00:33:02,810
is no locks

808
00:33:02,810 --> 00:33:06,950
how come so because you know you didn't

809
00:33:06,950 --> 00:33:09,590
apply the beats here so let us quickly

810
00:33:09,590 --> 00:33:13,220
deploy the beats this is the last part

811
00:33:13,220 --> 00:33:15,260
of the session and I'm going to deploy

812
00:33:15,260 --> 00:33:17,390
some of this like wherein you have you

813
00:33:17,390 --> 00:33:21,320
know I have already clone a specific

814
00:33:21,320 --> 00:33:23,390
stuff so cute make cube shape matrix is

815
00:33:23,390 --> 00:33:24,710
another open-source project to which you

816
00:33:24,710 --> 00:33:27,500
will be able to like kind of collect

817
00:33:27,500 --> 00:33:31,160
matrix and then I also have when it is

818
00:33:31,160 --> 00:33:33,200
so I'm just deploying all of these files

819
00:33:33,200 --> 00:33:34,940
and I'll share this so that you will

820
00:33:34,940 --> 00:33:39,080
also be able to do some of this so it's

821
00:33:39,080 --> 00:33:42,080
running and I'm going to create a file

822
00:33:42,080 --> 00:33:45,230
BD ml I'm gonna create a metric VD ml so

823
00:33:45,230 --> 00:33:48,110
that will collect process we connected

824
00:33:48,110 --> 00:33:50,420
the things we pick supply and we can see

825
00:33:50,420 --> 00:33:52,820
while taking questions as well so now

826
00:33:52,820 --> 00:33:54,950
the app is deployed and now everything

827
00:33:54,950 --> 00:33:59,390
is running is deployed everything is

828
00:33:59,390 --> 00:34:00,680
running we are collecting races we are

829
00:34:00,680 --> 00:34:02,150
collecting logs we are collecting matrix

830
00:34:02,150 --> 00:34:04,310
and all into a center platform that is

831
00:34:04,310 --> 00:34:07,880
correlated so the file should be here

832
00:34:07,880 --> 00:34:10,159
any point of time and you should be able

833
00:34:10,159 --> 00:34:12,260
to see the data but then it's also

834
00:34:12,260 --> 00:34:14,239
important that you need to like keep

835
00:34:14,239 --> 00:34:16,159
accessing this application otherwise the

836
00:34:16,159 --> 00:34:17,540
locks will not be generated it also

837
00:34:17,540 --> 00:34:21,440
places the old logs but then but then I

838
00:34:21,440 --> 00:34:23,780
let us see let us see if we can see at

839
00:34:23,780 --> 00:34:26,210
the end of the session now quickly

840
00:34:26,210 --> 00:34:29,690
coming back to the demo that we have so

841
00:34:29,690 --> 00:34:32,540
so I have few links here I have put up a

842
00:34:32,540 --> 00:34:34,639
notion page so that you can go and

843
00:34:34,639 --> 00:34:36,739
access and see what I have demoed here

844
00:34:36,739 --> 00:34:39,469
and they have where of all the details I

845
00:34:39,469 --> 00:34:41,210
should definitely go and check out some

846
00:34:41,210 --> 00:34:44,060
of this like I have a guy put up a guide

847
00:34:44,060 --> 00:34:46,520
some videos and also blogs to collect

848
00:34:46,520 --> 00:34:48,020
data from different different platforms

849
00:34:48,020 --> 00:34:50,960
etc you can go and look at that and then

850
00:34:50,960 --> 00:34:53,060
we also have a community platform

851
00:34:53,060 --> 00:34:54,860
through which we run similar sort of

852
00:34:54,860 --> 00:34:58,760
sessions so you can join there so that's

853
00:34:58,760 --> 00:35:01,170
it from my side and then

854
00:35:01,170 --> 00:35:03,029
I think because we are near time I think

855
00:35:03,029 --> 00:35:10,319
we should take questions yeah so yeah at

856
00:35:10,319 --> 00:35:12,359
least one question there just a quick

857
00:35:12,359 --> 00:35:15,690
question asking err the elastic services

858
00:35:15,690 --> 00:35:19,650
running the elastic service is running

859
00:35:19,650 --> 00:35:23,309
in the I have created a custom you know

860
00:35:23,309 --> 00:35:25,440
Google cloud platform in Mumbai in the

861
00:35:25,440 --> 00:35:27,299
first step that have created probably it

862
00:35:27,299 --> 00:35:29,700
doesn't identify but then it is running

863
00:35:29,700 --> 00:35:33,349
in the region in the Mumbai region yes

864
00:35:33,349 --> 00:35:37,769
it's running in a car all right if

865
00:35:37,769 --> 00:35:39,779
there's any other questions for the

866
00:35:39,779 --> 00:35:41,490
folks out there be sure you get those

867
00:35:41,490 --> 00:35:44,609
into the show here quickly otherwise I

868
00:35:44,609 --> 00:35:47,160
think we will doesn't look like we're

869
00:35:47,160 --> 00:35:49,140
getting any additional questions so I

870
00:35:49,140 --> 00:35:51,210
think we'll go ahead and and wrap things

871
00:35:51,210 --> 00:35:54,150
up but Everman please definitely

872
00:35:54,150 --> 00:35:56,549
appreciate it thank you very much for a

873
00:35:56,549 --> 00:35:59,339
wonderful presentation I hope I hope

874
00:35:59,339 --> 00:36:00,839
everybody else learned as much as I did

875
00:36:00,839 --> 00:36:05,910
from that one so thank you again yeah

876
00:36:05,910 --> 00:36:07,130
thank you so much

877
00:36:07,130 --> 00:36:10,170
yeah I mean I'm trying to show something

878
00:36:10,170 --> 00:36:12,869
here but anyway that's great I think if

879
00:36:12,869 --> 00:36:16,769
you specifically want to look at the the

880
00:36:16,769 --> 00:36:18,750
loss matrix or whatever we are looking

881
00:36:18,750 --> 00:36:21,480
at I have a specific guide published

882
00:36:21,480 --> 00:36:25,380
related to it and probably you could go

883
00:36:25,380 --> 00:36:27,630
and look at it so I'm just trying to

884
00:36:27,630 --> 00:36:30,900
show because we have time see if we can

885
00:36:30,900 --> 00:36:32,490
show the logs because by this time

886
00:36:32,490 --> 00:36:35,119
probably it should open up automatically

887
00:36:35,119 --> 00:36:38,250
and you could also look at the

888
00:36:38,250 --> 00:36:40,140
infrastructure of you know just not it

889
00:36:40,140 --> 00:36:44,849
does not come up yet okay questions a

890
00:36:44,849 --> 00:36:47,910
persistent volume fitness as well which

891
00:36:47,910 --> 00:36:50,940
one do you need a persistent volume for

892
00:36:50,940 --> 00:36:55,680
this as well so I meant to say like when

893
00:36:55,680 --> 00:36:57,240
you say persistent volume there are

894
00:36:57,240 --> 00:36:58,140
because we are also discussing

895
00:36:58,140 --> 00:37:00,390
kubernetes I am not sure whether you're

896
00:37:00,390 --> 00:37:03,289
talking about personal volumes but the

897
00:37:03,289 --> 00:37:06,180
cluster which is deployed here in the

898
00:37:06,180 --> 00:37:10,200
cloud is fully managed by us and then it

899
00:37:10,200 --> 00:37:12,960
it has a persistent volume and

900
00:37:12,960 --> 00:37:15,540
data we also snapchat it it's not shot

901
00:37:15,540 --> 00:37:18,900
at every 25 minutes so so there is

902
00:37:18,900 --> 00:37:20,010
nothing that you need to worry with

903
00:37:20,010 --> 00:37:21,480
respect to the storage from the elastic

904
00:37:21,480 --> 00:37:23,640
cluster but even if you are building

905
00:37:23,640 --> 00:37:26,069
something on your own we recommend

906
00:37:26,069 --> 00:37:28,349
persistent volumes because you know that

907
00:37:28,349 --> 00:37:30,540
when you when you when you see a custard

908
00:37:30,540 --> 00:37:32,400
down during your upgrade or your error

909
00:37:32,400 --> 00:37:35,099
you might want to bring it back when you

910
00:37:35,099 --> 00:37:36,930
want Mike on to attach it in a specific

911
00:37:36,930 --> 00:37:39,390
one so persistent volumes are really

912
00:37:39,390 --> 00:37:41,250
recommended especially this is a

913
00:37:41,250 --> 00:37:43,619
distributed system and much needed

914
00:37:43,619 --> 00:37:48,300
actually yeah great awesome well thank

915
00:37:48,300 --> 00:37:51,329
you again and with their folks we are

916
00:37:51,329 --> 00:37:55,579
going to break for meal break here

