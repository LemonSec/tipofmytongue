1
00:00:00,060 --> 00:00:02,850
if all goes well the the screen should

2
00:00:02,850 --> 00:00:04,410
be shared by now so yes thank you very

3
00:00:04,410 --> 00:00:07,170
much Simon I for the kind words

4
00:00:07,170 --> 00:00:08,730
I'm Mattias module I'm the CTO and

5
00:00:08,730 --> 00:00:11,580
co-founder of secure code warrior my

6
00:00:11,580 --> 00:00:14,280
history goes back to doing a PhD at

7
00:00:14,280 --> 00:00:16,410
Ghent University where I was playing

8
00:00:16,410 --> 00:00:18,600
with static analysis solutions and with

9
00:00:18,600 --> 00:00:20,189
that knowledge I actually joined a

10
00:00:20,189 --> 00:00:22,800
company called fortify and I actually

11
00:00:22,800 --> 00:00:25,680
moved to the u.s. joining fortify and

12
00:00:25,680 --> 00:00:27,720
that was very very interesting and I

13
00:00:27,720 --> 00:00:29,310
think you know these static analysis

14
00:00:29,310 --> 00:00:30,900
solutions are really good at finding

15
00:00:30,900 --> 00:00:33,030
problems in code but ultimately I said

16
00:00:33,030 --> 00:00:35,880
well gee it's not kind of hard to find

17
00:00:35,880 --> 00:00:37,860
problems in code if you never tell a

18
00:00:37,860 --> 00:00:40,290
developer if you never teach a developer

19
00:00:40,290 --> 00:00:42,270
how to write secure code in the first

20
00:00:42,270 --> 00:00:44,840
place so with that kind of mindset I

21
00:00:44,840 --> 00:00:46,110
jumped ship

22
00:00:46,110 --> 00:00:48,930
and and we started this and we really

23
00:00:48,930 --> 00:00:50,579
wanted to make sure that we give the

24
00:00:50,579 --> 00:00:52,800
developer the tools and the means and

25
00:00:52,800 --> 00:00:55,050
the knowledge to write secure code from

26
00:00:55,050 --> 00:00:58,640
the start and as Simon was saying yes

27
00:00:58,640 --> 00:01:01,739
we're running a challenge we're running

28
00:01:01,739 --> 00:01:03,589
a secure code or your tournaments

29
00:01:03,589 --> 00:01:06,060
there's still plenty of time so don't go

30
00:01:06,060 --> 00:01:06,330
away

31
00:01:06,330 --> 00:01:07,799
there's still time to check out this

32
00:01:07,799 --> 00:01:11,189
talk for example the it's a it's it's in

33
00:01:11,189 --> 00:01:13,409
line with the conference so it was 24

34
00:01:13,409 --> 00:01:15,840
hour challenge and a tournament if you

35
00:01:15,840 --> 00:01:17,820
want to know how to participate go for

36
00:01:17,820 --> 00:01:19,350
example to the security code warriors

37
00:01:19,350 --> 00:01:21,180
slack channel and there's even some

38
00:01:21,180 --> 00:01:23,640
prizes that you can make with that

39
00:01:23,640 --> 00:01:25,380
tournament if you're the first prize you

40
00:01:25,380 --> 00:01:26,700
can get a two hundred dollar gaming

41
00:01:26,700 --> 00:01:28,890
voucher and I just heard that

42
00:01:28,890 --> 00:01:30,869
fortnight's has another event so maybe

43
00:01:30,869 --> 00:01:32,909
that you can use it for that so the

44
00:01:32,909 --> 00:01:35,460
agenda for today so first of all I would

45
00:01:35,460 --> 00:01:37,140
like to talk about you know why are we

46
00:01:37,140 --> 00:01:38,670
still here why are we still talking

47
00:01:38,670 --> 00:01:41,490
about security why is it impossible to

48
00:01:41,490 --> 00:01:44,189
write secure code and then I would like

49
00:01:44,189 --> 00:01:46,770
to you know focus on on the software

50
00:01:46,770 --> 00:01:49,399
security person what is he doing and

51
00:01:49,399 --> 00:01:52,110
more what was he doing hopefully and

52
00:01:52,110 --> 00:01:53,880
what should he be doing on a day to day

53
00:01:53,880 --> 00:01:55,920
basis and then I would like to take

54
00:01:55,920 --> 00:01:58,649
DevOps and and I I found a very

55
00:01:58,649 --> 00:02:00,689
interesting way to look at DevOps and

56
00:02:00,689 --> 00:02:03,329
how can we get security into DevOps how

57
00:02:03,329 --> 00:02:05,340
can we get security in the culture in

58
00:02:05,340 --> 00:02:06,930
the automation in the measurement in the

59
00:02:06,930 --> 00:02:09,030
sharing and ultimately I will come to a

60
00:02:09,030 --> 00:02:10,739
conclusion and hopefully there's some

61
00:02:10,739 --> 00:02:12,100
time for QA

62
00:02:12,100 --> 00:02:16,480
so why why are we still here so we all

63
00:02:16,480 --> 00:02:20,980
make mistakes small one big ones if you

64
00:02:20,980 --> 00:02:22,120
look at a very big one

65
00:02:22,120 --> 00:02:25,870
then the Ariane 5 rocket well within a

66
00:02:25,870 --> 00:02:28,270
minute and after the launch they had to

67
00:02:28,270 --> 00:02:31,240
self detonate the rocket and with the

68
00:02:31,240 --> 00:02:33,370
self-detonation seven billion dollars

69
00:02:33,370 --> 00:02:35,740
was lost and also ten years of work well

70
00:02:35,740 --> 00:02:38,500
they actually tried to do was fairly

71
00:02:38,500 --> 00:02:40,120
simple from a coding perspective a very

72
00:02:40,120 --> 00:02:43,360
simple mistake they tried to cram a 64

73
00:02:43,360 --> 00:02:45,730
bit float into a 16-bit integer and they

74
00:02:45,730 --> 00:02:47,620
said you know what for performance let's

75
00:02:47,620 --> 00:02:50,170
suppress the error handling and that

76
00:02:50,170 --> 00:02:52,360
cause of you note so crowning that into

77
00:02:52,360 --> 00:02:54,880
a 16-bit cause the overflow and and

78
00:02:54,880 --> 00:02:56,650
error handling was not there so

79
00:02:56,650 --> 00:02:59,050
ultimately instead of going forward the

80
00:02:59,050 --> 00:03:00,880
rocket had to go backward and they had

81
00:03:00,880 --> 00:03:03,760
to self detonate a rocket mistakes

82
00:03:03,760 --> 00:03:06,760
happen imagine being the developer and

83
00:03:06,760 --> 00:03:09,040
and this is your code where you try to

84
00:03:09,040 --> 00:03:11,470
do that but hey out of something bad

85
00:03:11,470 --> 00:03:13,840
comes something good lessons are learned

86
00:03:13,840 --> 00:03:16,450
NASA said you know what how can you

87
00:03:16,450 --> 00:03:18,340
prevent something like that and and the

88
00:03:18,340 --> 00:03:20,350
way they did it was they said you know

89
00:03:20,350 --> 00:03:23,650
what from now on we have to be very very

90
00:03:23,650 --> 00:03:25,600
cautious with every line of code that

91
00:03:25,600 --> 00:03:28,180
goes into these Rockets we only have one

92
00:03:28,180 --> 00:03:32,070
chance one faulty line and we're done so

93
00:03:32,070 --> 00:03:34,900
they put a lot of things in place and

94
00:03:34,900 --> 00:03:36,970
they burnt essentially the cost of every

95
00:03:36,970 --> 00:03:38,740
line of code to a thousand dollars a

96
00:03:38,740 --> 00:03:40,930
line where the average cost around the

97
00:03:40,930 --> 00:03:44,710
same time was was $50 a line of code and

98
00:03:44,710 --> 00:03:47,170
and they were able to prevent that yes

99
00:03:47,170 --> 00:03:49,810
it's expensive but imagine what you

100
00:03:49,810 --> 00:03:51,250
could do with the mouth with the amount

101
00:03:51,250 --> 00:03:54,040
of money and the time you also lost with

102
00:03:54,040 --> 00:03:57,400
the previous mistake unfortunately I saw

103
00:03:57,400 --> 00:03:59,530
that my video didn't work here the sound

104
00:03:59,530 --> 00:04:01,510
didn't come through but as Bob Ross

105
00:04:01,510 --> 00:04:04,630
would say we do not make mistakes we

106
00:04:04,630 --> 00:04:06,700
only have happy accidents I'm very

107
00:04:06,700 --> 00:04:09,220
curious if that developer had the same

108
00:04:09,220 --> 00:04:11,230
reasoning the day he found out that his

109
00:04:11,230 --> 00:04:14,850
code caused Ariana 5 rocket blow up

110
00:04:14,850 --> 00:04:21,728
anyway sometimes bugs become essentially

111
00:04:21,728 --> 00:04:25,090
features in our solutions let's have a

112
00:04:25,090 --> 00:04:25,840
look at four

113
00:04:25,840 --> 00:04:28,510
the most known thing is Street Fighter -

114
00:04:28,510 --> 00:04:30,580
Street Fighter 2 is immensely popular or

115
00:04:30,580 --> 00:04:32,740
was immensely popular and it would not

116
00:04:32,740 --> 00:04:34,510
have been popular if it wasn't for the

117
00:04:34,510 --> 00:04:38,050
combo and ultimately the combo was well

118
00:04:38,050 --> 00:04:41,230
initially a glitch a developer figured

119
00:04:41,230 --> 00:04:43,180
out that hey you could hit a person

120
00:04:43,180 --> 00:04:46,060
twice and it would count as one

121
00:04:46,060 --> 00:04:48,340
so they elaborated on that glitch and

122
00:04:48,340 --> 00:04:50,020
essentially dived wedge between a nice

123
00:04:50,020 --> 00:04:52,690
feature in Street Fighter 2 which made

124
00:04:52,690 --> 00:04:55,120
it immensely popular another very

125
00:04:55,120 --> 00:04:56,919
interesting feature that we have these

126
00:04:56,919 --> 00:05:00,130
days in our applications is the feature

127
00:05:00,130 --> 00:05:02,680
where external people can execute

128
00:05:02,680 --> 00:05:05,139
whatever query am against our database

129
00:05:05,139 --> 00:05:08,410
they can alter our data in the database

130
00:05:08,410 --> 00:05:12,130
they can remove entries out of the

131
00:05:12,130 --> 00:05:14,139
database all at their own measure of

132
00:05:14,139 --> 00:05:15,490
course this is not a feature this is

133
00:05:15,490 --> 00:05:16,840
sequel injection and we were still

134
00:05:16,840 --> 00:05:18,400
talking about CQ injection why are we

135
00:05:18,400 --> 00:05:19,680
still talking about sequence action

136
00:05:19,680 --> 00:05:23,680
because even this frame was received by

137
00:05:23,680 --> 00:05:25,930
me by my manager I got that from my

138
00:05:25,930 --> 00:05:27,790
manager back in the day where I was

139
00:05:27,790 --> 00:05:29,620
still at fortify and the interesting

140
00:05:29,620 --> 00:05:31,539
part is the back it is signed hey Merry

141
00:05:31,539 --> 00:05:34,350
Christmas Matias its from jacob 2008

142
00:05:34,350 --> 00:05:38,020
that's 12 years ago that is 12 years ago

143
00:05:38,020 --> 00:05:40,539
and and that was not new 12 years ago

144
00:05:40,539 --> 00:05:43,810
that was already 10 years old in 2008 so

145
00:05:43,810 --> 00:05:45,130
we're still talking about something that

146
00:05:45,130 --> 00:05:48,669
is 22 years old why is that so let's

147
00:05:48,669 --> 00:05:50,890
have first of all a look at numbers I

148
00:05:50,890 --> 00:05:52,630
love numbers because if we have to go

149
00:05:52,630 --> 00:05:53,950
with my opinion that would not be good

150
00:05:53,950 --> 00:05:56,710
so let's go with the numbers one in

151
00:05:56,710 --> 00:05:59,800
three newly scant applications had still

152
00:05:59,800 --> 00:06:01,300
sequel injection in the last five years

153
00:06:01,300 --> 00:06:03,370
well the joke goes that two out of three

154
00:06:03,370 --> 00:06:06,760
do not have a database 111 billion lines

155
00:06:06,760 --> 00:06:08,650
of code are written by developers every

156
00:06:08,650 --> 00:06:11,229
year we're all software developers right

157
00:06:11,229 --> 00:06:13,570
who is this software deleter in your

158
00:06:13,570 --> 00:06:16,000
organization very hard to find that

159
00:06:16,000 --> 00:06:17,500
particular person you want to create

160
00:06:17,500 --> 00:06:19,510
more features and we want more more and

161
00:06:19,510 --> 00:06:22,240
more developer customers want more we

162
00:06:22,240 --> 00:06:26,950
all want more we write more code 30

163
00:06:26,950 --> 00:06:28,750
times more expensive to fix a problem

164
00:06:28,750 --> 00:06:33,550
early on then later in the cycle you can

165
00:06:33,550 --> 00:06:35,860
you know what we do these days is we

166
00:06:35,860 --> 00:06:37,390
wait until it land into our birth

167
00:06:37,390 --> 00:06:39,310
tracking system and we only fix well one

168
00:06:39,310 --> 00:06:39,750
out of

169
00:06:39,750 --> 00:06:41,580
well maybe there's there's a different

170
00:06:41,580 --> 00:06:43,140
strategy that you can deploy in your

171
00:06:43,140 --> 00:06:45,240
organization to fix essentially all

172
00:06:45,240 --> 00:06:47,610
vulnerabilities and the average cost of

173
00:06:47,610 --> 00:06:48,360
a data breach

174
00:06:48,360 --> 00:06:52,140
almost formally why are we still talking

175
00:06:52,140 --> 00:06:54,120
about this particular problem why do we

176
00:06:54,120 --> 00:06:56,850
still have sequin Gyptian well this is

177
00:06:56,850 --> 00:06:59,490
an oversimplified way of what we're

178
00:06:59,490 --> 00:07:03,660
doing today if we have a concatenation

179
00:07:03,660 --> 00:07:07,110
of four parameters in a query and our

180
00:07:07,110 --> 00:07:09,000
pen testers come back and they scream

181
00:07:09,000 --> 00:07:10,680
and they say oh my god we're vulnerable

182
00:07:10,680 --> 00:07:13,590
to sequins action we even saw a couple

183
00:07:13,590 --> 00:07:16,110
hacks on our platform parameter 1 and

184
00:07:16,110 --> 00:07:17,760
parameter 2 are vulnerable to sequel

185
00:07:17,760 --> 00:07:19,710
injection well then instantly the

186
00:07:19,710 --> 00:07:21,390
developers are mobilized and they have

187
00:07:21,390 --> 00:07:23,880
to fix the problem if for static

188
00:07:23,880 --> 00:07:25,770
analysis solutions come back and say

189
00:07:25,770 --> 00:07:28,770
well if all the stars align and if

190
00:07:28,770 --> 00:07:30,840
everything goes right then potentially

191
00:07:30,840 --> 00:07:33,030
parameter 3 is vulnerable to sequel

192
00:07:33,030 --> 00:07:35,550
injection what quite often happen in

193
00:07:35,550 --> 00:07:37,919
that scenario is well you start a fight

194
00:07:37,919 --> 00:07:40,350
between QA security and developers to

195
00:07:40,350 --> 00:07:42,390
figure out if it's really a problem or

196
00:07:42,390 --> 00:07:45,660
not sometimes the fix is even easier to

197
00:07:45,660 --> 00:07:49,320
deploy then the whole discussion around

198
00:07:49,320 --> 00:07:51,600
trying to find out if this is really a

199
00:07:51,600 --> 00:07:54,720
problem and last but not least if nobody

200
00:07:54,720 --> 00:07:56,669
can tell today that parameter 4 is a

201
00:07:56,669 --> 00:07:59,220
problem if none of our tools none of our

202
00:07:59,220 --> 00:08:01,050
pen testers none of our internal people

203
00:08:01,050 --> 00:08:03,030
can figure out if parameter 4 is a

204
00:08:03,030 --> 00:08:04,830
problem well we are not going to fix

205
00:08:04,830 --> 00:08:07,650
that because it works it works it's

206
00:08:07,650 --> 00:08:11,490
perfect first of all well quite often we

207
00:08:11,490 --> 00:08:13,620
do not know if it's if it's really safe

208
00:08:13,620 --> 00:08:16,020
because there are so many parts in the

209
00:08:16,020 --> 00:08:17,370
application that can lead to that

210
00:08:17,370 --> 00:08:21,030
parameter but second even tomorrow order

211
00:08:21,030 --> 00:08:23,190
or next week or next year a new

212
00:08:23,190 --> 00:08:25,979
developer can come on board and in add

213
00:08:25,979 --> 00:08:27,870
some new parts in the application and

214
00:08:27,870 --> 00:08:29,760
parameter for where it is safe today

215
00:08:29,760 --> 00:08:32,520
becomes vulnerable tomorrow this is how

216
00:08:32,520 --> 00:08:34,469
we treat application security today

217
00:08:34,469 --> 00:08:36,870
we're not going back to the root cause

218
00:08:36,870 --> 00:08:39,479
which is hey let's make everything safe

219
00:08:39,479 --> 00:08:43,289
from the beginning and why is that not

220
00:08:43,289 --> 00:08:49,380
safe why is this not and all going well

221
00:08:49,380 --> 00:08:51,390
into today's world well let's look at

222
00:08:51,390 --> 00:08:52,630
what we do

223
00:08:52,630 --> 00:08:54,340
on how to fix problems in codes well

224
00:08:54,340 --> 00:08:56,290
first of all I have never seen an empty

225
00:08:56,290 --> 00:08:57,820
bird tracking system there's always

226
00:08:57,820 --> 00:08:59,590
problems in a bird tracking system if

227
00:08:59,590 --> 00:09:01,090
you find one let me know by the way and

228
00:09:01,090 --> 00:09:03,580
we ask the developers hey can you fix

229
00:09:03,580 --> 00:09:05,500
the security issues all these security

230
00:09:05,500 --> 00:09:09,760
birds can you fix them and we help the

231
00:09:09,760 --> 00:09:12,070
developer with giving almost nothing you

232
00:09:12,070 --> 00:09:14,620
know we say you know google it Stack

233
00:09:14,620 --> 00:09:18,640
Overflow whatever figure it out and we

234
00:09:18,640 --> 00:09:20,830
ask them to fix the problems sure they

235
00:09:20,830 --> 00:09:22,480
can rely on the application security

236
00:09:22,480 --> 00:09:25,210
team unfortunately there's one person

237
00:09:25,210 --> 00:09:29,470
per 100 developers that has to guide and

238
00:09:29,470 --> 00:09:31,300
steer the development team the

239
00:09:31,300 --> 00:09:33,340
developers so one in a hundred think

240
00:09:33,340 --> 00:09:34,990
about a hundred people have you

241
00:09:34,990 --> 00:09:36,430
interacted with a hundred people this

242
00:09:36,430 --> 00:09:38,980
month can you can you enlist a hundred

243
00:09:38,980 --> 00:09:41,830
people that you've talked to you know in

244
00:09:41,830 --> 00:09:43,720
the last three months six months I don't

245
00:09:43,720 --> 00:09:45,970
know a hundred people is a lot of people

246
00:09:45,970 --> 00:09:48,730
and imagine that you have to guide them

247
00:09:48,730 --> 00:09:50,680
on a day-to-day basis you're responsible

248
00:09:50,680 --> 00:09:52,270
for the security for the code that they

249
00:09:52,270 --> 00:09:54,780
are writing it's nearly impossible

250
00:09:54,780 --> 00:09:57,670
there's also a ton of overhead if you

251
00:09:57,670 --> 00:09:59,470
fix the security issue there's there's a

252
00:09:59,470 --> 00:10:01,840
ton of overhead in trying to find you

253
00:10:01,840 --> 00:10:04,480
take the bug you find a solution for the

254
00:10:04,480 --> 00:10:06,100
work you implement the security a

255
00:10:06,100 --> 00:10:08,260
solution for the work you have to test

256
00:10:08,260 --> 00:10:10,540
it yourself it has to go through QA and

257
00:10:10,540 --> 00:10:12,010
so and so forth so everything that you

258
00:10:12,010 --> 00:10:16,480
fix causes a ton of overhead quite often

259
00:10:16,480 --> 00:10:19,690
also developers and security they kind

260
00:10:19,690 --> 00:10:22,510
of speak the same language they do kind

261
00:10:22,510 --> 00:10:24,040
of do not speak the same language of

262
00:10:24,040 --> 00:10:25,950
course the developers speak about

263
00:10:25,950 --> 00:10:28,420
languages and frameworks and coding

264
00:10:28,420 --> 00:10:31,000
techniques while security people they

265
00:10:31,000 --> 00:10:32,770
talk about you know breaking this stuff

266
00:10:32,770 --> 00:10:35,830
and and not giving answers to how to fix

267
00:10:35,830 --> 00:10:38,260
it essentially although the security

268
00:10:38,260 --> 00:10:40,360
people have to do and the old days was

269
00:10:40,360 --> 00:10:43,480
just show that it is broken even if they

270
00:10:43,480 --> 00:10:45,520
do not see the code if they do it black

271
00:10:45,520 --> 00:10:47,920
box they attack the application they

272
00:10:47,920 --> 00:10:50,110
show that it is broken and it is the

273
00:10:50,110 --> 00:10:52,330
developer it's his problem well or her

274
00:10:52,330 --> 00:10:54,460
problem that is why they speak a

275
00:10:54,460 --> 00:10:58,480
different language so ultimately we fix

276
00:10:58,480 --> 00:11:00,940
a couple problems but not all of them as

277
00:11:00,940 --> 00:11:03,100
you as I said earlier maybe one in 30

278
00:11:03,100 --> 00:11:06,360
security problems

279
00:11:06,720 --> 00:11:09,850
second we keep on introducing new code

280
00:11:09,850 --> 00:11:12,100
as you saw in the previous light we

281
00:11:12,100 --> 00:11:14,470
create billions of lines of code so on a

282
00:11:14,470 --> 00:11:17,350
daily basis we introduce new problems

283
00:11:17,350 --> 00:11:20,200
into the code I once did an analysis of

284
00:11:20,200 --> 00:11:22,510
an organization and every developer in

285
00:11:22,510 --> 00:11:24,910
that organization caused $50 of

286
00:11:24,910 --> 00:11:26,980
ultimately problems that another person

287
00:11:26,980 --> 00:11:29,230
had to fix and and that's actually

288
00:11:29,230 --> 00:11:32,080
normal because there's 700 different

289
00:11:32,080 --> 00:11:33,910
categories of problems so these static

290
00:11:33,910 --> 00:11:36,160
analysis solutions can find 700

291
00:11:36,160 --> 00:11:38,190
different karaoke categories of problems

292
00:11:38,190 --> 00:11:41,650
so with more code comes of course more

293
00:11:41,650 --> 00:11:44,320
bugs and then there is a stuff that we

294
00:11:44,320 --> 00:11:45,970
do not know that nobody knows of that

295
00:11:45,970 --> 00:11:49,930
nobody finds so ultimately it's a never

296
00:11:49,930 --> 00:11:52,210
ending story so what there's a security

297
00:11:52,210 --> 00:11:55,090
person app sake def sake software

298
00:11:55,090 --> 00:11:56,920
security name it what does the security

299
00:11:56,920 --> 00:12:00,250
person have to do well if we look at

300
00:12:00,250 --> 00:12:02,440
what a software security person has to

301
00:12:02,440 --> 00:12:05,440
do well in greeny concede that he should

302
00:12:05,440 --> 00:12:07,150
deal with you know top security

303
00:12:07,150 --> 00:12:10,240
questions like hey how can we make sure

304
00:12:10,240 --> 00:12:13,090
that throughout our organization if we

305
00:12:13,090 --> 00:12:16,720
create codes that that code is this is

306
00:12:16,720 --> 00:12:19,240
secure unfortunately quite often they

307
00:12:19,240 --> 00:12:22,300
are very distracted with other stuff and

308
00:12:22,300 --> 00:12:23,380
that's mainly because they own their

309
00:12:23,380 --> 00:12:25,000
they are understaffed you know there's

310
00:12:25,000 --> 00:12:27,100
only one person per 100 developer so

311
00:12:27,100 --> 00:12:29,230
it's it's hard to make sure that

312
00:12:29,230 --> 00:12:30,910
everything is moving into the right

313
00:12:30,910 --> 00:12:32,520
direction

314
00:12:32,520 --> 00:12:35,710
luckily there's quite often a good

315
00:12:35,710 --> 00:12:38,980
budget for app sight because companies

316
00:12:38,980 --> 00:12:41,260
are security aware these days they want

317
00:12:41,260 --> 00:12:46,210
to do the good thing and as my my my

318
00:12:46,210 --> 00:12:48,070
good friend would say more money more

319
00:12:48,070 --> 00:12:50,980
problems so we can throw more money to

320
00:12:50,980 --> 00:12:53,230
our problems today but unfortunate thats

321
00:12:53,230 --> 00:12:54,670
not always gonna work you know because

322
00:12:54,670 --> 00:12:57,100
we keep on creating more code which is

323
00:12:57,100 --> 00:13:00,490
causing more vulnerabilities so

324
00:13:00,490 --> 00:13:03,160
ultimately more code more problems we

325
00:13:03,160 --> 00:13:05,080
have to start understanding the code as

326
00:13:05,080 --> 00:13:07,810
an absurd person as a deaf sick person

327
00:13:07,810 --> 00:13:09,970
we have to make sure that we really

328
00:13:09,970 --> 00:13:12,430
really understand the code we have to

329
00:13:12,430 --> 00:13:14,950
move away from just finding the problem

330
00:13:14,950 --> 00:13:16,800
and not fixing the vulnerabilities

331
00:13:16,800 --> 00:13:19,030
breaking we're not the builders we have

332
00:13:19,030 --> 00:13:19,760
to move

333
00:13:19,760 --> 00:13:22,519
you know what we as security people have

334
00:13:22,519 --> 00:13:24,949
to understand code that we can help the

335
00:13:24,949 --> 00:13:27,560
developers what what you know what

336
00:13:27,560 --> 00:13:29,360
they're doing on a day to day basis it's

337
00:13:29,360 --> 00:13:31,250
no longer just breaking this stuff and

338
00:13:31,250 --> 00:13:33,620
leaving them behind no we have to

339
00:13:33,620 --> 00:13:37,279
understand the code so how can we do

340
00:13:37,279 --> 00:13:39,800
that how can we create secure code today

341
00:13:39,800 --> 00:13:41,510
well there's a lot of different

342
00:13:41,510 --> 00:13:44,570
methodologies right we moved on from

343
00:13:44,570 --> 00:13:47,660
waterfall quite often Al's the question

344
00:13:47,660 --> 00:13:49,339
did we really move on because I still

345
00:13:49,339 --> 00:13:52,399
see it quite often we try to do some

346
00:13:52,399 --> 00:13:54,380
agile methodology you know we want to

347
00:13:54,380 --> 00:13:56,930
make sure that it goes faster whether

348
00:13:56,930 --> 00:13:59,480
we're closer to to to our customers we

349
00:13:59,480 --> 00:14:02,360
do things in rapid sprints so that they

350
00:14:02,360 --> 00:14:04,820
can test and see if it's working for

351
00:14:04,820 --> 00:14:07,370
them and ultimately DevOps you know

352
00:14:07,370 --> 00:14:09,589
where we have that continuous loop where

353
00:14:09,589 --> 00:14:11,930
we want to make sure that we have that

354
00:14:11,930 --> 00:14:14,420
feedback from operations and I think

355
00:14:14,420 --> 00:14:16,820
over there there's a real opportunity to

356
00:14:16,820 --> 00:14:19,399
bacon security and how can we do that

357
00:14:19,399 --> 00:14:22,730
well we you know a developer he already

358
00:14:22,730 --> 00:14:24,920
has a job remember and it's writing

359
00:14:24,920 --> 00:14:27,649
features so we cannot ask him to type

360
00:14:27,649 --> 00:14:31,579
faster harder doing more hours no we

361
00:14:31,579 --> 00:14:33,560
have to make sure that he can work

362
00:14:33,560 --> 00:14:36,019
smarter doesn't have to work harder or

363
00:14:36,019 --> 00:14:38,630
faster but we have to work smarter so I

364
00:14:38,630 --> 00:14:41,389
think there's an evolution from

365
00:14:41,389 --> 00:14:44,329
waterfall to to agile and DevOps at the

366
00:14:44,329 --> 00:14:46,610
same time in security we have to think

367
00:14:46,610 --> 00:14:49,100
how we can make sure that we can rate

368
00:14:49,100 --> 00:14:51,589
right that same wave that we can make

369
00:14:51,589 --> 00:14:53,959
sure that our security processes or

370
00:14:53,959 --> 00:14:55,880
tooling or training everything that we

371
00:14:55,880 --> 00:15:00,339
do in security follows that same trend

372
00:15:00,339 --> 00:15:03,410
the opportunity is clear I think there's

373
00:15:03,410 --> 00:15:06,410
an opportunity to around developers

374
00:15:06,410 --> 00:15:08,569
create an environment to write secure

375
00:15:08,569 --> 00:15:11,149
code I personally think that there

376
00:15:11,149 --> 00:15:12,740
should be an environment where

377
00:15:12,740 --> 00:15:16,670
everything that a developer does we as

378
00:15:16,670 --> 00:15:18,829
security people have to integrate with

379
00:15:18,829 --> 00:15:21,500
their solution and help them on their

380
00:15:21,500 --> 00:15:24,399
platforms if they are working with

381
00:15:24,399 --> 00:15:26,990
IntelliJ if they are working with visual

382
00:15:26,990 --> 00:15:29,360
code well we should help them over there

383
00:15:29,360 --> 00:15:32,000
if they are on slack if they you know

384
00:15:32,000 --> 00:15:32,980
whatever there

385
00:15:32,980 --> 00:15:35,139
they are we should be able to integrate

386
00:15:35,139 --> 00:15:37,959
with their solutions I think that is

387
00:15:37,959 --> 00:15:40,899
that is the most powerful thing at the

388
00:15:40,899 --> 00:15:42,519
same time also from a security

389
00:15:42,519 --> 00:15:44,440
perspective we have to make sure that we

390
00:15:44,440 --> 00:15:47,380
tap into the operation side and that we

391
00:15:47,380 --> 00:15:48,970
bring that knowledge through the

392
00:15:48,970 --> 00:15:50,709
developers that gives them visibility

393
00:15:50,709 --> 00:15:52,949
into what's really happening

394
00:15:52,949 --> 00:15:54,910
and I think there's a real opportunity

395
00:15:54,910 --> 00:15:58,180
and maybe there's even some room in that

396
00:15:58,180 --> 00:16:01,930
in that loopy in that DevOps loop to

397
00:16:01,930 --> 00:16:04,930
train people and assess people to get

398
00:16:04,930 --> 00:16:07,300
them better every time and making sure

399
00:16:07,300 --> 00:16:09,880
that they create secure codes from the

400
00:16:09,880 --> 00:16:15,760
start so DevOps what are the pillars of

401
00:16:15,760 --> 00:16:19,930
DevOps well I did a quick google search

402
00:16:19,930 --> 00:16:23,769
and it seems to be between 3 & 9 I think

403
00:16:23,769 --> 00:16:26,260
nobody can really tell what the pillars

404
00:16:26,260 --> 00:16:28,600
are of Devils well I didn't find a

405
00:16:28,600 --> 00:16:30,850
concise answer so that gives me a little

406
00:16:30,850 --> 00:16:33,040
bit of a freedom to look into all these

407
00:16:33,040 --> 00:16:35,620
pillars and and and pick something and

408
00:16:35,620 --> 00:16:39,310
one that I particularly liked was coms

409
00:16:39,310 --> 00:16:41,440
which which transformed the columns but

410
00:16:41,440 --> 00:16:43,329
how else I'll start with the original

411
00:16:43,329 --> 00:16:45,550
one which is culture automation

412
00:16:45,550 --> 00:16:49,829
measurement and sharing so incomes and

413
00:16:49,829 --> 00:16:53,740
to have DevOps right we have to make

414
00:16:53,740 --> 00:16:55,480
changes in the culture in the automation

415
00:16:55,480 --> 00:16:57,250
the measurement in the sharing I'll

416
00:16:57,250 --> 00:16:59,709
leave that as such but my question is

417
00:16:59,709 --> 00:17:02,370
how can we from a security perspective

418
00:17:02,370 --> 00:17:05,679
make sure that we embed ourself into the

419
00:17:05,679 --> 00:17:08,349
culture into that automation piece into

420
00:17:08,349 --> 00:17:09,760
that measurement piece and into that

421
00:17:09,760 --> 00:17:12,549
sharing piece so let me go through that

422
00:17:12,549 --> 00:17:16,689
so first of all I think it has to be a

423
00:17:16,689 --> 00:17:19,030
change throughout the organization from

424
00:17:19,030 --> 00:17:21,730
a culture perspective we have to move on

425
00:17:21,730 --> 00:17:24,520
from all that reactive stuff and we have

426
00:17:24,520 --> 00:17:26,559
to be proactive if you think about

427
00:17:26,559 --> 00:17:29,110
building a house it is not when the

428
00:17:29,110 --> 00:17:31,480
house is done and you're ready to move

429
00:17:31,480 --> 00:17:33,970
in if you discover at that point that

430
00:17:33,970 --> 00:17:36,250
all the wiring is faulty well you have a

431
00:17:36,250 --> 00:17:39,010
really really big problem you almost

432
00:17:39,010 --> 00:17:41,200
have to start from scratch but this is

433
00:17:41,200 --> 00:17:43,000
where we are today we have a lot of

434
00:17:43,000 --> 00:17:45,730
pretty shiny application

435
00:17:45,730 --> 00:17:48,250
but if you look under the hood quite

436
00:17:48,250 --> 00:17:50,710
often they are they are just from a

437
00:17:50,710 --> 00:17:54,100
security perspective and entire mess and

438
00:17:54,100 --> 00:17:56,799
it's not really the developers fault it

439
00:17:56,799 --> 00:17:58,870
has a lot to do with deadlines and

440
00:17:58,870 --> 00:18:01,029
delivering and making sure that the

441
00:18:01,029 --> 00:18:02,919
customers are happy and delivering

442
00:18:02,919 --> 00:18:05,409
features so if it doesn't come from the

443
00:18:05,409 --> 00:18:09,190
top down it's not gonna happen so from a

444
00:18:09,190 --> 00:18:11,860
culture perspective it is not the

445
00:18:11,860 --> 00:18:13,990
developers fault you know he has to be

446
00:18:13,990 --> 00:18:16,960
given the time to make sure that the

447
00:18:16,960 --> 00:18:18,880
security piece is right in that

448
00:18:18,880 --> 00:18:20,980
organization and in that application

449
00:18:20,980 --> 00:18:25,480
that he is creating so we have to make

450
00:18:25,480 --> 00:18:27,669
something that is relevant for

451
00:18:27,669 --> 00:18:29,440
developers if we want to help the

452
00:18:29,440 --> 00:18:32,019
developer in writing secure code we have

453
00:18:32,019 --> 00:18:34,480
to make something that he really loves

454
00:18:34,480 --> 00:18:37,139
okay and and that can be you know online

455
00:18:37,139 --> 00:18:40,090
hands-on game a fight tailored you know

456
00:18:40,090 --> 00:18:42,730
it has to be something that that a lot

457
00:18:42,730 --> 00:18:45,070
of developers like and love at the same

458
00:18:45,070 --> 00:18:48,789
time you know making a platform that is

459
00:18:48,789 --> 00:18:51,909
gamified without some substance is not

460
00:18:51,909 --> 00:18:53,710
gonna work neither is it going to work

461
00:18:53,710 --> 00:18:55,539
if the developer does not see the

462
00:18:55,539 --> 00:18:59,980
benefit of why he should do that so he

463
00:18:59,980 --> 00:19:03,309
developer should understand that if you

464
00:19:03,309 --> 00:19:07,240
always write secure code what we see is

465
00:19:07,240 --> 00:19:10,990
that you're really above average there's

466
00:19:10,990 --> 00:19:13,630
definitely a clear correlation between a

467
00:19:13,630 --> 00:19:15,970
good developer and a security savvy

468
00:19:15,970 --> 00:19:19,000
developer and and my personal reasoning

469
00:19:19,000 --> 00:19:20,980
over there as well you start by just

470
00:19:20,980 --> 00:19:22,960
creating something as a junior developer

471
00:19:22,960 --> 00:19:25,419
once you do that you'll learn more about

472
00:19:25,419 --> 00:19:27,669
hey how does it how do I build software

473
00:19:27,669 --> 00:19:30,610
how do I do stuff and when you learn

474
00:19:30,610 --> 00:19:32,049
everything when you learn a lot

475
00:19:32,049 --> 00:19:33,970
ultimately you need a new challenge and

476
00:19:33,970 --> 00:19:35,529
you got to ask yourself how does that

477
00:19:35,529 --> 00:19:37,360
security piece work and and how do I

478
00:19:37,360 --> 00:19:41,080
build secure applications so it's not

479
00:19:41,080 --> 00:19:42,909
something that you start straight off

480
00:19:42,909 --> 00:19:46,690
but ultimately you roll into so if you

481
00:19:46,690 --> 00:19:48,820
want to be you know if you think like

482
00:19:48,820 --> 00:19:51,130
hey I want to I want to be a highly

483
00:19:51,130 --> 00:19:53,230
sought after developer I want to work on

484
00:19:53,230 --> 00:19:55,610
projects that require

485
00:19:55,610 --> 00:19:58,400
good developers with a security mindset

486
00:19:58,400 --> 00:20:01,670
well think about security think about

487
00:20:01,670 --> 00:20:04,100
hey how can i UPS kill myself and make

488
00:20:04,100 --> 00:20:07,240
sure that I always produce secure code

489
00:20:07,240 --> 00:20:09,650
ultimately the company has to rally

490
00:20:09,650 --> 00:20:11,450
around like hey there's only one type of

491
00:20:11,450 --> 00:20:13,910
good code in our organization and it is

492
00:20:13,910 --> 00:20:18,830
secure code has to be a cultural fit

493
00:20:18,830 --> 00:20:21,770
why is duolingo doing really really good

494
00:20:21,770 --> 00:20:25,430
versus old-school in class and training

495
00:20:25,430 --> 00:20:28,520
well it appeals to a younger generation

496
00:20:28,520 --> 00:20:30,920
they want to learn in a particular way

497
00:20:30,920 --> 00:20:32,810
they want to take their mobile and learn

498
00:20:32,810 --> 00:20:34,610
a couple words even my kids are doing it

499
00:20:34,610 --> 00:20:36,380
they want to learn another language well

500
00:20:36,380 --> 00:20:38,540
there they're on duolingo they learn by

501
00:20:38,540 --> 00:20:40,610
just doing if I would say you know you

502
00:20:40,610 --> 00:20:42,380
have to you know they they do not

503
00:20:42,380 --> 00:20:45,410
particularly like school but duolingo

504
00:20:45,410 --> 00:20:48,080
they quite often are on duolingo without

505
00:20:48,080 --> 00:20:50,450
me asking to do that school is a

506
00:20:50,450 --> 00:20:55,280
different thing second one automation

507
00:20:55,280 --> 00:20:59,360
and all too often with automation

508
00:20:59,360 --> 00:21:03,230
I see security tools being deployed into

509
00:21:03,230 --> 00:21:06,020
an organization where it truly does not

510
00:21:06,020 --> 00:21:09,830
fit they've one hell one group has done

511
00:21:09,830 --> 00:21:12,230
a test with a security solution they

512
00:21:12,230 --> 00:21:14,900
bought it it organically grew in that in

513
00:21:14,900 --> 00:21:17,570
that team and now they want to deploy to

514
00:21:17,570 --> 00:21:19,370
the entire organization but the entire

515
00:21:19,370 --> 00:21:21,620
other other developers are not on the

516
00:21:21,620 --> 00:21:23,180
same stack and they still want to

517
00:21:23,180 --> 00:21:24,950
implement that or it's not doing the

518
00:21:24,950 --> 00:21:28,370
right thing for them so if you do that

519
00:21:28,370 --> 00:21:30,530
from a security perspective you have to

520
00:21:30,530 --> 00:21:33,440
make sure that developers are on your

521
00:21:33,440 --> 00:21:35,600
side they you you want to help them you

522
00:21:35,600 --> 00:21:37,490
really want to make sure that we give

523
00:21:37,490 --> 00:21:39,710
them something that shows benefit to

524
00:21:39,710 --> 00:21:42,050
them so if you were going through tools

525
00:21:42,050 --> 00:21:43,790
if you're going through something that

526
00:21:43,790 --> 00:21:46,460
you want to buy for developers with a

527
00:21:46,460 --> 00:21:48,860
security angle you really have to make

528
00:21:48,860 --> 00:21:50,960
sure that it fits the technology it fits

529
00:21:50,960 --> 00:21:52,550
the stack it is relevant for what

530
00:21:52,550 --> 00:21:54,850
they're doing

531
00:21:55,120 --> 00:21:58,100
automation it's all about you know you

532
00:21:58,100 --> 00:22:00,920
wanna you want to make sure that as many

533
00:22:00,920 --> 00:22:08,450
security pests or are executed as often

534
00:22:08,450 --> 00:22:08,990
and as

535
00:22:08,990 --> 00:22:12,020
frequent as possible but not too many

536
00:22:12,020 --> 00:22:14,390
security tests and what that means is

537
00:22:14,390 --> 00:22:16,700
you know what if the developer goes away

538
00:22:16,700 --> 00:22:18,200
from his desk and he say you know what

539
00:22:18,200 --> 00:22:20,179
now I want to build my code and I want

540
00:22:20,179 --> 00:22:22,670
to test my code by the time he has

541
00:22:22,670 --> 00:22:24,860
grabbed the coffee and comes back the

542
00:22:24,860 --> 00:22:26,750
test should be done you know and he

543
00:22:26,750 --> 00:22:29,990
should have a result I've dropped five

544
00:22:29,990 --> 00:22:31,760
minutes on there it can be two minutes

545
00:22:31,760 --> 00:22:33,590
for your organization it can be ten

546
00:22:33,590 --> 00:22:35,300
minutes depending on how long people

547
00:22:35,300 --> 00:22:37,340
take a coffee break but you know what I

548
00:22:37,340 --> 00:22:39,530
mean right you do not want to stop the

549
00:22:39,530 --> 00:22:42,590
developer and you could cram as many

550
00:22:42,590 --> 00:22:45,260
tests in there as possible and all the

551
00:22:45,260 --> 00:22:47,390
tests that do not go in there you either

552
00:22:47,390 --> 00:22:49,640
paralyze the rest or you drop them into

553
00:22:49,640 --> 00:22:54,670
an i3 built maybe a controversial one

554
00:22:54,670 --> 00:22:58,490
for security people well we do we do not

555
00:22:58,490 --> 00:23:00,500
block the build we do not block the

556
00:23:00,500 --> 00:23:04,100
release you should really get everything

557
00:23:04,100 --> 00:23:08,090
into production you know only if you're

558
00:23:08,090 --> 00:23:11,360
really really sure that something is not

559
00:23:11,360 --> 00:23:13,730
right from a security perspective then

560
00:23:13,730 --> 00:23:15,080
you stop them you know if there are

561
00:23:15,080 --> 00:23:18,050
security credentials that are going life

562
00:23:18,050 --> 00:23:20,300
then you definitely should stop them but

563
00:23:20,300 --> 00:23:23,300
you have to make sure that if you stop

564
00:23:23,300 --> 00:23:25,670
them you stop them for the right reason

565
00:23:25,670 --> 00:23:28,280
because that is that happened all too

566
00:23:28,280 --> 00:23:29,990
often back in the day right you know we

567
00:23:29,990 --> 00:23:32,420
blocked all too often developers and

568
00:23:32,420 --> 00:23:34,550
afterwards we said oh sorry this was a

569
00:23:34,550 --> 00:23:37,309
false positive you know it's our tool so

570
00:23:37,309 --> 00:23:39,500
if if we implement something we should

571
00:23:39,500 --> 00:23:42,050
think from a developer perspective and

572
00:23:42,050 --> 00:23:44,390
we should be really really sure if we

573
00:23:44,390 --> 00:23:48,800
stopped our breakout developers chat

574
00:23:48,800 --> 00:23:52,490
chat ops in our organization developers

575
00:23:52,490 --> 00:23:55,580
no longer read email they are

576
00:23:55,580 --> 00:23:58,490
communicating in a different way and I

577
00:23:58,490 --> 00:24:00,860
think from a security perspective we

578
00:24:00,860 --> 00:24:03,290
have to look into what these new ways

579
00:24:03,290 --> 00:24:06,170
are that people are chatting with each

580
00:24:06,170 --> 00:24:08,600
other so we have to integrate ourselves

581
00:24:08,600 --> 00:24:10,429
again again we do not have to force

582
00:24:10,429 --> 00:24:12,020
ourselves and say now you have to read

583
00:24:12,020 --> 00:24:14,300
email know if they are using slack or

584
00:24:14,300 --> 00:24:16,190
whatever we should integrate from a

585
00:24:16,190 --> 00:24:18,710
security perspective with the way they

586
00:24:18,710 --> 00:24:21,559
want to communicate and last but not

587
00:24:21,559 --> 00:24:22,520
least if

588
00:24:22,520 --> 00:24:24,500
spinning up containers for security we

589
00:24:24,500 --> 00:24:26,120
have to make sure that they really stand

590
00:24:26,120 --> 00:24:28,550
alone containers because you know

591
00:24:28,550 --> 00:24:31,040
ultimately if there are dependencies and

592
00:24:31,040 --> 00:24:33,110
another container goes down and we have

593
00:24:33,110 --> 00:24:34,580
some dependencies from a security

594
00:24:34,580 --> 00:24:36,530
perspective they will point the finger

595
00:24:36,530 --> 00:24:38,960
rightfully at the security people broke

596
00:24:38,960 --> 00:24:44,240
it again measurement it's a really hard

597
00:24:44,240 --> 00:24:46,220
one how do you measure security I think

598
00:24:46,220 --> 00:24:50,630
there's been numerous books and papers

599
00:24:50,630 --> 00:24:52,760
academic and white papers written about

600
00:24:52,760 --> 00:24:54,890
how to measure security it's really

601
00:24:54,890 --> 00:24:57,560
really hard but the way I would like to

602
00:24:57,560 --> 00:25:00,230
think about that in the new world is we

603
00:25:00,230 --> 00:25:03,110
have to think about the end goal and the

604
00:25:03,110 --> 00:25:06,080
end goal is that we want to ship in a

605
00:25:06,080 --> 00:25:07,070
reliable way

606
00:25:07,070 --> 00:25:10,070
software into production that should be

607
00:25:10,070 --> 00:25:12,560
the end goal we have to make sure that

608
00:25:12,560 --> 00:25:13,910
our customers are happy with our

609
00:25:13,910 --> 00:25:16,490
solution that they see new features that

610
00:25:16,490 --> 00:25:18,800
they can use them that they are good so

611
00:25:18,800 --> 00:25:23,030
that is our end goal and security should

612
00:25:23,030 --> 00:25:26,960
align with these goals and security

613
00:25:26,960 --> 00:25:29,240
should not have goals that contradict

614
00:25:29,240 --> 00:25:32,540
that ultimate goal over here so what is

615
00:25:32,540 --> 00:25:34,970
important I think speed of delivery is

616
00:25:34,970 --> 00:25:38,540
very important speed of going to market

617
00:25:38,540 --> 00:25:40,160
speed of getting something into

618
00:25:40,160 --> 00:25:44,090
production is really really import so we

619
00:25:44,090 --> 00:25:46,400
can measure a lot of things in DevOps

620
00:25:46,400 --> 00:25:49,250
and from a security perspective we have

621
00:25:49,250 --> 00:25:52,640
to think where can we help you know and

622
00:25:52,640 --> 00:25:56,080
there's stuff that we should avoid and

623
00:25:56,080 --> 00:25:59,510
we should help with deployment frequency

624
00:25:59,510 --> 00:26:01,100
with lead time and so on and so forth so

625
00:26:01,100 --> 00:26:02,710
there are really good things that

626
00:26:02,710 --> 00:26:06,740
security can help we're one thing that

627
00:26:06,740 --> 00:26:08,840
we should not measure is the mean time

628
00:26:08,840 --> 00:26:12,530
to failure we actually want to fail we

629
00:26:12,530 --> 00:26:14,630
want to fail fast we do not want to

630
00:26:14,630 --> 00:26:17,150
lengthen the time in between two

631
00:26:17,150 --> 00:26:20,510
incidents because that will have an

632
00:26:20,510 --> 00:26:22,430
inverse effect of what we're trying to

633
00:26:22,430 --> 00:26:24,260
do because you will only make it worse

634
00:26:24,260 --> 00:26:26,600
no what you really want to do is you

635
00:26:26,600 --> 00:26:28,670
want to find the problems you want to

636
00:26:28,670 --> 00:26:30,620
tackle the problems and a good

637
00:26:30,620 --> 00:26:34,070
measurement is if we're failing how fast

638
00:26:34,070 --> 00:26:35,820
can we recover

639
00:26:35,820 --> 00:26:40,050
so we want to make sure that you can

640
00:26:40,050 --> 00:26:42,330
recover very fast make sure that you

641
00:26:42,330 --> 00:26:45,210
measure the right thing which is hey

642
00:26:45,210 --> 00:26:47,640
making sure that we are back up and

643
00:26:47,640 --> 00:26:50,160
running not trying to lengthen the time

644
00:26:50,160 --> 00:26:53,100
in between failures because again that

645
00:26:53,100 --> 00:26:55,380
that contributes to our end goal we want

646
00:26:55,380 --> 00:26:59,580
a ship reliable code and last but not

647
00:26:59,580 --> 00:27:03,570
least sharing what is sharing and what

648
00:27:03,570 --> 00:27:06,420
it is and what it is not I think maybe

649
00:27:06,420 --> 00:27:09,750
back to my title app SEC is dead all too

650
00:27:09,750 --> 00:27:13,290
often I IC application security as the

651
00:27:13,290 --> 00:27:15,930
people with the papers they write

652
00:27:15,930 --> 00:27:18,690
endless documents they write coding

653
00:27:18,690 --> 00:27:20,490
guidelines documents and they write

654
00:27:20,490 --> 00:27:23,250
documents for everything and well

655
00:27:23,250 --> 00:27:25,800
unfortunately that is that is not how

656
00:27:25,800 --> 00:27:28,020
you reach a developer you do not reach

657
00:27:28,020 --> 00:27:29,940
the developer by writing endless

658
00:27:29,940 --> 00:27:34,080
documents on how to do security it has

659
00:27:34,080 --> 00:27:36,900
to be in technology it has to be into

660
00:27:36,900 --> 00:27:39,210
the frameworks into the tools that the

661
00:27:39,210 --> 00:27:41,400
developer is using on a day to day basis

662
00:27:41,400 --> 00:27:43,280
and think about this one

663
00:27:43,280 --> 00:27:47,100
what happens when a developer fixes a

664
00:27:47,100 --> 00:27:49,860
security problem and let's say the day

665
00:27:49,860 --> 00:27:52,290
after he leaves the organization so a

666
00:27:52,290 --> 00:27:54,780
problem has been found we've located the

667
00:27:54,780 --> 00:27:59,400
problem we the developer sits down looks

668
00:27:59,400 --> 00:28:01,350
for a solution looks really hard for a

669
00:28:01,350 --> 00:28:03,900
solution finds a solution he fix a

670
00:28:03,900 --> 00:28:06,660
solution and he checks us in he checks

671
00:28:06,660 --> 00:28:11,250
his new code in and he closes the bug

672
00:28:11,250 --> 00:28:14,340
and the day after let's say he moves on

673
00:28:14,340 --> 00:28:16,680
to another organization that knowledge

674
00:28:16,680 --> 00:28:18,750
is unfortunately gone yes it's it is

675
00:28:18,750 --> 00:28:21,420
fixed on one line of code or two lines

676
00:28:21,420 --> 00:28:23,400
of code it is fixed in the application

677
00:28:23,400 --> 00:28:26,700
but that knowledge is ultimately gone it

678
00:28:26,700 --> 00:28:29,070
is not populated to the other developers

679
00:28:29,070 --> 00:28:31,860
on how that fix work we didn't look for

680
00:28:31,860 --> 00:28:34,380
other places in the application where

681
00:28:34,380 --> 00:28:36,420
that same problem occurs and where we

682
00:28:36,420 --> 00:28:39,000
could have fixed that that information

683
00:28:39,000 --> 00:28:41,670
is all gone and and that happens

684
00:28:41,670 --> 00:28:44,100
unfortunately quite often and it does

685
00:28:44,100 --> 00:28:47,460
not help by as a security person to go

686
00:28:47,460 --> 00:28:49,470
there and document the stuff

687
00:28:49,470 --> 00:28:51,179
and send an email to all the developers

688
00:28:51,179 --> 00:28:52,710
and say hey you know what this is what

689
00:28:52,710 --> 00:28:54,299
we've done this is a point in time it

690
00:28:54,299 --> 00:28:56,789
doesn't help we have to share this with

691
00:28:56,789 --> 00:29:00,330
technology means so the way I envision

692
00:29:00,330 --> 00:29:04,770
sharing what is coming is really we

693
00:29:04,770 --> 00:29:07,650
identify a problem with whatever

694
00:29:07,650 --> 00:29:09,840
application security testing tool a

695
00:29:09,840 --> 00:29:12,770
knapsack person helps the developer of

696
00:29:12,770 --> 00:29:15,630
fixing that particular problem but then

697
00:29:15,630 --> 00:29:17,190
we capture it we capture it in

698
00:29:17,190 --> 00:29:19,559
technology we capture it in the IDE we

699
00:29:19,559 --> 00:29:23,220
capture it in our in our source code

700
00:29:23,220 --> 00:29:25,710
repository we capture that knowledge so

701
00:29:25,710 --> 00:29:28,409
that we never ever make a similar

702
00:29:28,409 --> 00:29:31,289
problem in our code again or we actually

703
00:29:31,289 --> 00:29:34,049
remediate all the problems into into the

704
00:29:34,049 --> 00:29:35,669
codes and I think that is really the

705
00:29:35,669 --> 00:29:38,750
future for sharing if you think about

706
00:29:38,750 --> 00:29:42,030
intelligent intelligent security sharing

707
00:29:42,030 --> 00:29:46,549
I think it has to be the new technology

708
00:29:47,330 --> 00:29:51,390
so I come to the conclusion of my talk I

709
00:29:51,390 --> 00:29:54,150
was able to explain why we're still here

710
00:29:54,150 --> 00:29:56,820
why it is still impossible of writing

711
00:29:56,820 --> 00:29:59,669
secure code we've seen in throughout

712
00:29:59,669 --> 00:30:01,260
history that we've made a lot of

713
00:30:01,260 --> 00:30:03,150
mistakes and we always try to learn from

714
00:30:03,150 --> 00:30:05,159
these mistakes and I also think we have

715
00:30:05,159 --> 00:30:07,380
to learn and tackle the problems that we

716
00:30:07,380 --> 00:30:10,140
have today we've seen that a security

717
00:30:10,140 --> 00:30:12,780
person today has a you know it's kauai

718
00:30:12,780 --> 00:30:14,700
dunder staff and as a result is not

719
00:30:14,700 --> 00:30:18,179
always busy with the code and and is

720
00:30:18,179 --> 00:30:19,380
busy with other stuff

721
00:30:19,380 --> 00:30:21,750
I think the software security person

722
00:30:21,750 --> 00:30:24,059
really has to be very close to the

723
00:30:24,059 --> 00:30:26,669
developer he has to intimately involved

724
00:30:26,669 --> 00:30:28,830
with the code he has to understand the

725
00:30:28,830 --> 00:30:32,280
framework says the technology detects

726
00:30:32,280 --> 00:30:33,570
tax that they are using

727
00:30:33,570 --> 00:30:38,669
then I hope I hope I was able to show

728
00:30:38,669 --> 00:30:41,039
how security can help from a culture

729
00:30:41,039 --> 00:30:42,960
perspective so if you're already doing a

730
00:30:42,960 --> 00:30:45,720
shift in culture where does security fit

731
00:30:45,720 --> 00:30:49,409
in and how can we do some automation and

732
00:30:49,409 --> 00:30:51,450
not disrupt the developer how can we

733
00:30:51,450 --> 00:30:53,490
blend in with the regular automation

734
00:30:53,490 --> 00:30:54,720
that is happening but then from a

735
00:30:54,720 --> 00:30:56,940
security perspective what are good

736
00:30:56,940 --> 00:30:58,799
things to measure from a security

737
00:30:58,799 --> 00:31:00,899
perspective we should not measure or

738
00:31:00,899 --> 00:31:02,940
lengthen the time between failures we

739
00:31:02,940 --> 00:31:03,180
have

740
00:31:03,180 --> 00:31:05,280
to make sure that we recover fast and I

741
00:31:05,280 --> 00:31:06,810
think ultimately from a security

742
00:31:06,810 --> 00:31:09,300
perspective sharing happens in the tools

743
00:31:09,300 --> 00:31:11,220
in the technology that a developer is

744
00:31:11,220 --> 00:31:14,850
using with that I would like to conclude

745
00:31:14,850 --> 00:31:17,850
my talk and I was wondering if there are

746
00:31:17,850 --> 00:31:23,520
any questions Simon okay we have yeah we

747
00:31:23,520 --> 00:31:27,360
have a question far short bossy asks how

748
00:31:27,360 --> 00:31:29,550
do you share through technology adding

749
00:31:29,550 --> 00:31:31,830
issues to github is just another place

750
00:31:31,830 --> 00:31:35,190
where they are documented how do you

751
00:31:35,190 --> 00:31:38,340
share through technology so one thing

752
00:31:38,340 --> 00:31:42,720
that I really like is in the IDE sharing

753
00:31:42,720 --> 00:31:45,480
and I'm happy so I'm sorry I didn't

754
00:31:45,480 --> 00:31:47,160
catch the name but please pick me over

755
00:31:47,160 --> 00:31:49,080
slack and I'm happy to show you a couple

756
00:31:49,080 --> 00:31:51,360
things on how you can share through

757
00:31:51,360 --> 00:31:53,430
technology there is there's nifty

758
00:31:53,430 --> 00:31:54,960
technology out there where you

759
00:31:54,960 --> 00:31:56,430
essentially through rules through

760
00:31:56,430 --> 00:31:59,490
customization of existing tools can can

761
00:31:59,490 --> 00:32:01,410
capture your knowledge find similar

762
00:32:01,410 --> 00:32:04,650
problems and fixing other problems Osen

763
00:32:04,650 --> 00:32:07,160
of the question Sarah in and around

764
00:32:07,160 --> 00:32:10,230
measuring I guess so in terms of things

765
00:32:10,230 --> 00:32:11,160
like you know source code Wario

766
00:32:11,160 --> 00:32:13,370
obviously there to kind of really help

767
00:32:13,370 --> 00:32:15,810
really help can I level up developers

768
00:32:15,810 --> 00:32:18,930
going forward how do you how do you

769
00:32:18,930 --> 00:32:19,980
measure these kind of things is it

770
00:32:19,980 --> 00:32:21,630
simply through vulnerabilities that are

771
00:32:21,630 --> 00:32:24,920
found either either you know before

772
00:32:24,920 --> 00:32:27,900
production or after production or how is

773
00:32:27,900 --> 00:32:31,560
that are aligned yeah so that's a very

774
00:32:31,560 --> 00:32:34,110
good question so the way and and and I

775
00:32:34,110 --> 00:32:36,600
think personally that that's what I

776
00:32:36,600 --> 00:32:38,940
really like about the solution that we

777
00:32:38,940 --> 00:32:41,730
roll out in organisations is we work

778
00:32:41,730 --> 00:32:44,070
with the organization with the company

779
00:32:44,070 --> 00:32:47,010
and we we asked you know what what is

780
00:32:47,010 --> 00:32:48,750
your what is your problem if you if you

781
00:32:48,750 --> 00:32:51,060
have your pen testers your static

782
00:32:51,060 --> 00:32:53,640
analysis solutions running does it come

783
00:32:53,640 --> 00:32:55,260
back with always the same thing and and

784
00:32:55,260 --> 00:32:57,330
quite often it does you know quite often

785
00:32:57,330 --> 00:32:59,970
they're the usual suspects like CQ

786
00:32:59,970 --> 00:33:01,980
injection and cross-site scripting so

787
00:33:01,980 --> 00:33:04,070
they're aware of what their top three

788
00:33:04,070 --> 00:33:06,720
vulnerabilities are what we then do is

789
00:33:06,720 --> 00:33:08,700
we put a program in place where we

790
00:33:08,700 --> 00:33:10,800
specifically focus on these three

791
00:33:10,800 --> 00:33:13,080
problems these three vulnerabilities and

792
00:33:13,080 --> 00:33:15,180
we are going to roll that out in an

793
00:33:15,180 --> 00:33:16,920
organization and say hey you know what

794
00:33:16,920 --> 00:33:19,200
this year we're gonna make work of

795
00:33:19,200 --> 00:33:21,330
psycho injection cross-site scripting

796
00:33:21,330 --> 00:33:24,240
and held-up injection whatever at the

797
00:33:24,240 --> 00:33:26,580
end of the year we're gonna look at

798
00:33:26,580 --> 00:33:28,590
scans again and you're going to look at

799
00:33:28,590 --> 00:33:30,720
the pen testers again and what we see of

800
00:33:30,720 --> 00:33:32,280
course over there so we're not doing the

801
00:33:32,280 --> 00:33:34,500
measurement in our solution itself we

802
00:33:34,500 --> 00:33:36,840
can but we love to do the measurement on

803
00:33:36,840 --> 00:33:39,600
on the real things on what is produced

804
00:33:39,600 --> 00:33:42,480
by these developers because that that is

805
00:33:42,480 --> 00:33:43,980
ultimately what you want to measure you

806
00:33:43,980 --> 00:33:45,510
know you you know you kind of want to

807
00:33:45,510 --> 00:33:47,460
measure how often do people visit our

808
00:33:47,460 --> 00:33:49,260
platform or how often do they interact

809
00:33:49,260 --> 00:33:51,990
with our solution that it that that is a

810
00:33:51,990 --> 00:33:52,980
means to an end

811
00:33:52,980 --> 00:33:54,750
you know because the end game is you

812
00:33:54,750 --> 00:33:56,610
really want to measure did I see a

813
00:33:56,610 --> 00:33:59,010
reduction in the top three categories

814
00:33:59,010 --> 00:34:02,390
that I really wanted to tackle this year

815
00:34:02,390 --> 00:34:05,280
also another question coming in from how

816
00:34:05,280 --> 00:34:08,010
much why is the color why is the culture

817
00:34:08,010 --> 00:34:11,639
not changing why is the culture not

818
00:34:11,639 --> 00:34:14,790
changing so why is the culture not

819
00:34:14,790 --> 00:34:17,130
changing I'm not sure what what exactly

820
00:34:17,130 --> 00:34:21,510
that refers to but quite often that is a

821
00:34:21,510 --> 00:34:23,730
pretty interesting one but quite often

822
00:34:23,730 --> 00:34:26,940
and an organization has to have an

823
00:34:26,940 --> 00:34:29,219
incident before the culture changes you

824
00:34:29,219 --> 00:34:32,850
know there's even companies in recent

825
00:34:32,850 --> 00:34:34,800
history that had to make announcements

826
00:34:34,800 --> 00:34:36,060
you know that they said you know what

827
00:34:36,060 --> 00:34:38,219
right now we really have to make sure

828
00:34:38,219 --> 00:34:40,949
you we have to invest in security it you

829
00:34:40,949 --> 00:34:43,409
know we didn't do before but we have to

830
00:34:43,409 --> 00:34:45,540
do it and what causes that figure point

831
00:34:45,540 --> 00:34:49,889
is is really a public problem or a

832
00:34:49,889 --> 00:34:51,810
problem security problem that becomes

833
00:34:51,810 --> 00:34:54,330
public and that is quite and that quite

834
00:34:54,330 --> 00:34:56,730
often is embarrassing for them so what

835
00:34:56,730 --> 00:34:59,220
triggers the if quite often they are

836
00:34:59,220 --> 00:35:01,170
under spending insecurity if they're

837
00:35:01,170 --> 00:35:03,960
under spending insecurity what we see is

838
00:35:03,960 --> 00:35:06,000
there's not a whole lot that you can do

839
00:35:06,000 --> 00:35:08,010
as a developer unfortunately or as a

840
00:35:08,010 --> 00:35:09,930
security person there's not much you can

841
00:35:09,930 --> 00:35:11,070
do

842
00:35:11,070 --> 00:35:13,470
hoping for a security incident is kind

843
00:35:13,470 --> 00:35:15,450
of ugly you can't become hope for a

844
00:35:15,450 --> 00:35:16,560
security incident against your

845
00:35:16,560 --> 00:35:18,810
organization but ultimately that's what

846
00:35:18,810 --> 00:35:20,310
you have to wait for if there's a

847
00:35:20,310 --> 00:35:22,770
security incident then the eyes go open

848
00:35:22,770 --> 00:35:24,690
that's one thing and the second thing is

849
00:35:24,690 --> 00:35:27,660
if if they break in into your neighbor's

850
00:35:27,660 --> 00:35:29,640
house that's when you realize you have

851
00:35:29,640 --> 00:35:30,910
to do something yourself

852
00:35:30,910 --> 00:35:33,069
so if you look at your competition and

853
00:35:33,069 --> 00:35:35,829
your competition has been hacked or is

854
00:35:35,829 --> 00:35:37,509
going under because of a hack that's

855
00:35:37,509 --> 00:35:40,089
when normally the eyes go open and they

856
00:35:40,089 --> 00:35:42,160
say oh my god we have to make sure we're

857
00:35:42,160 --> 00:35:44,319
not the next one it's a con lock a bit

858
00:35:44,319 --> 00:35:45,549
like an alt each kind of thing as well

859
00:35:45,549 --> 00:35:47,079
like is that what is the cost of an

860
00:35:47,079 --> 00:35:48,700
outage how do you measure that and what

861
00:35:48,700 --> 00:35:51,430
is the cost of breach or a hack oh yeah

862
00:35:51,430 --> 00:35:53,710
it's an extremely hard thing to kind of

863
00:35:53,710 --> 00:35:56,859
like foresee right but ya know that's

864
00:35:56,859 --> 00:36:00,099
what you know when do you install a

865
00:36:00,099 --> 00:36:01,000
burglar alarm

866
00:36:01,000 --> 00:36:07,509
yeah you know the cost of the burglar

867
00:36:07,509 --> 00:36:07,809
alarm

868
00:36:07,809 --> 00:36:10,119
just in time or money in actually

869
00:36:10,119 --> 00:36:12,339
installing it is is you know not it's

870
00:36:12,339 --> 00:36:17,079
not insignificant but it's oh do smoke

871
00:36:17,079 --> 00:36:19,089
alarm then this yak alarm these things

872
00:36:19,089 --> 00:36:22,809
cost you ten bucks yeah you know yeah I

873
00:36:22,809 --> 00:36:24,880
have them but you know quite often

874
00:36:24,880 --> 00:36:26,769
people do not have them or they're too

875
00:36:26,769 --> 00:36:29,619
late in having them yeah one last one

876
00:36:29,619 --> 00:36:31,230
last question for we before we conclude

877
00:36:31,230 --> 00:36:33,819
Mohammed asks what are your thoughts

878
00:36:33,819 --> 00:36:36,009
about maturity of an open source tooling

879
00:36:36,009 --> 00:36:39,940
in to support the automation you

880
00:36:39,940 --> 00:36:43,000
referred to in your presentation open

881
00:36:43,000 --> 00:36:46,269
source tooling I'm a big fan of open

882
00:36:46,269 --> 00:36:51,640
source it always sparks some some

883
00:36:51,640 --> 00:36:55,410
interesting ideas that quite often then

884
00:36:55,410 --> 00:36:58,839
companies are built upon with I have to

885
00:36:58,839 --> 00:37:02,349
say better support so I always like open

886
00:37:02,349 --> 00:37:04,329
source and there's always good stuff in

887
00:37:04,329 --> 00:37:07,089
there you well unfortunately quite often

888
00:37:07,089 --> 00:37:09,339
there is not the support layer around it

889
00:37:09,339 --> 00:37:11,650
and quite often you see commercial

890
00:37:11,650 --> 00:37:13,569
companies and picking that that up but I

891
00:37:13,569 --> 00:37:15,039
really like open source and there's

892
00:37:15,039 --> 00:37:16,599
there's some really good things out

893
00:37:16,599 --> 00:37:18,789
there that that are still you know

894
00:37:18,789 --> 00:37:21,220
cutting-edge very relevant and and if

895
00:37:21,220 --> 00:37:23,380
you're an early adopter you definitely

896
00:37:23,380 --> 00:37:24,779
should you should go with open source

897
00:37:24,779 --> 00:37:26,740
that means you're also ahead of the

898
00:37:26,740 --> 00:37:27,130
curve

899
00:37:27,130 --> 00:37:32,680
I think awesome tests thank you so much

900
00:37:32,680 --> 00:37:34,660
great great talk and thank you very much

901
00:37:34,660 --> 00:37:37,079
for joining us and as well thank you

902
00:37:37,079 --> 00:37:40,630
thank you secure code warrior for for

903
00:37:40,630 --> 00:37:42,609
being platinum sponsor so we really

904
00:37:42,609 --> 00:37:44,130
appreciate you

905
00:37:44,130 --> 00:37:46,200
or of of the community as well as the

906
00:37:46,200 --> 00:37:47,910
conference absolutely thank you very

907
00:37:47,910 --> 00:37:51,049
much for having me Simon

