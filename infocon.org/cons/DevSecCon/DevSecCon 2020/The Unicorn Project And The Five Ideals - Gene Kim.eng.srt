1
00:00:00,000 --> 00:00:02,250
this is talk start hello Jean good

2
00:00:02,250 --> 00:00:04,170
seeing you in fact I was just reading

3
00:00:04,170 --> 00:00:07,740
here oh here's your link okay right on

4
00:00:07,740 --> 00:00:09,809
good see you again buddy it's great

5
00:00:09,809 --> 00:00:10,620
seeing you

6
00:00:10,620 --> 00:00:15,240
so um once again I am so lucky to be in

7
00:00:15,240 --> 00:00:18,000
your graces I know on the way are you

8
00:00:18,000 --> 00:00:18,690
reading

9
00:00:18,690 --> 00:00:22,410
I've been reading books appreciate all

10
00:00:22,410 --> 00:00:26,130
the content and our our our viewers are

11
00:00:26,130 --> 00:00:28,109
really going to enjoy your talk I'm

12
00:00:28,109 --> 00:00:29,460
gonna give you two minutes to get

13
00:00:29,460 --> 00:00:33,180
yourself set up um but so we're really

14
00:00:33,180 --> 00:00:34,829
looking forward to it awesome tonight

15
00:00:34,829 --> 00:00:36,329
do I share my screen right now and just

16
00:00:36,329 --> 00:00:37,649
get all set up or does that happen only

17
00:00:37,649 --> 00:00:39,710
after that you go ahead and get sure

18
00:00:39,710 --> 00:00:42,480
shared and then I'll put y'all on when

19
00:00:42,480 --> 00:00:43,320
you're ready to go

20
00:00:43,320 --> 00:00:45,510
all right cool all right and meaning I'm

21
00:00:45,510 --> 00:00:46,980
doing this just so that everything's are

22
00:00:46,980 --> 00:00:49,530
locked in yeah I want you to work in and

23
00:00:49,530 --> 00:00:51,149
then I'll turn it on for you soon as

24
00:00:51,149 --> 00:00:53,190
your says right on I can't believe the

25
00:00:53,190 --> 00:00:55,340
last time we were hanging out we were in

26
00:00:55,340 --> 00:01:02,609
Vegas yeah Wow time flies yeah back when

27
00:01:02,609 --> 00:01:04,799
life was normal and life is not normal

28
00:01:04,799 --> 00:01:10,770
now yeah alright so actually thank you

29
00:01:10,770 --> 00:01:13,080
very much everybody who is on the other

30
00:01:13,080 --> 00:01:16,920
side if that's Mike or Jeff we are going

31
00:01:16,920 --> 00:01:20,100
to just wait a minute I want to remind

32
00:01:20,100 --> 00:01:22,380
everyone I'm gonna do this one more

33
00:01:22,380 --> 00:01:25,670
banner we're still accepting donations

34
00:01:25,670 --> 00:01:28,890
donations donations give us no money to

35
00:01:28,890 --> 00:01:31,470
give to these people for a very good

36
00:01:31,470 --> 00:01:35,100
cause other than that it is the half of

37
00:01:35,100 --> 00:01:38,250
the hour and I want to lead to mr. gene

38
00:01:38,250 --> 00:01:41,220
Kim to provide us with information on a

39
00:01:41,220 --> 00:01:43,500
talk called the unicorn project in the

40
00:01:43,500 --> 00:01:47,759
five ideas thank you and let's go haha

41
00:01:47,759 --> 00:01:50,130
awesome J thank you so much I've had the

42
00:01:50,130 --> 00:01:52,200
privilege of hyper studying high

43
00:01:52,200 --> 00:01:54,329
performing technology organizations for

44
00:01:54,329 --> 00:01:55,619
20 years and that was a journey I

45
00:01:55,619 --> 00:01:57,540
started for me back when I was the CTO

46
00:01:57,540 --> 00:01:59,219
and founder of a company called tripwire

47
00:01:59,219 --> 00:02:01,110
in the information security space

48
00:02:01,110 --> 00:02:03,030
historic goal was always to understand

49
00:02:03,030 --> 00:02:05,009
these high performers and those were the

50
00:02:05,009 --> 00:02:06,450
organization that had the best project

51
00:02:06,450 --> 00:02:07,380
due date performance and development

52
00:02:07,380 --> 00:02:09,209
they had the best operational

53
00:02:09,209 --> 00:02:11,280
reliability and stability we also had

54
00:02:11,280 --> 00:02:13,470
the best posture security and compliance

55
00:02:13,470 --> 00:02:15,470
so we understand what how did those

56
00:02:15,470 --> 00:02:17,130
organizations make they're good to great

57
00:02:17,130 --> 00:02:18,360
transformation so that we could

58
00:02:18,360 --> 00:02:20,520
understand how other organizations could

59
00:02:20,520 --> 00:02:22,560
replicate those amazing outcomes and as

60
00:02:22,560 --> 00:02:24,090
you can imagine in that 20 year journey

61
00:02:24,090 --> 00:02:26,400
like that there were many surprises but

62
00:02:26,400 --> 00:02:29,010
by far by far the largest prize was how

63
00:02:29,010 --> 00:02:30,330
it brought me into the middle of the

64
00:02:30,330 --> 00:02:32,460
DevOps movement which i think is urgent

65
00:02:32,460 --> 00:02:34,440
and important I think the last time that

66
00:02:34,440 --> 00:02:36,570
any industry is being disrupted to the

67
00:02:36,570 --> 00:02:38,610
extent that our industry is being

68
00:02:38,610 --> 00:02:41,880
disrupted today now which includes co19

69
00:02:41,880 --> 00:02:46,260
is the manufacturing moving what

70
00:02:46,260 --> 00:02:48,210
compared to that well with the exception

71
00:02:48,210 --> 00:02:52,500
of Copa 19 and so what I think DevOps is

72
00:02:52,500 --> 00:02:54,360
is exactly those same lean principles

73
00:02:54,360 --> 00:02:56,490
that revolutionize manufacturing that

74
00:02:56,490 --> 00:02:57,660
allowed them to increase do day

75
00:02:57,660 --> 00:02:59,550
performance and increase possibility or

76
00:02:59,550 --> 00:03:02,070
exactly what's at play in DevOps you

77
00:03:02,070 --> 00:03:03,510
take those same principles apply them to

78
00:03:03,510 --> 00:03:05,310
a technology value stream and you end up

79
00:03:05,310 --> 00:03:06,720
with these amazing emergent patterns

80
00:03:06,720 --> 00:03:08,310
that allow organizations do tens

81
00:03:08,310 --> 00:03:09,900
hundreds even hundreds of thousand

82
00:03:09,900 --> 00:03:11,580
points per day while preserving

83
00:03:11,580 --> 00:03:13,500
world-class reliability stability

84
00:03:13,500 --> 00:03:16,200
security and security as well so

85
00:03:16,200 --> 00:03:17,489
something I just didn't even think

86
00:03:17,489 --> 00:03:21,150
possible even ten years ago so I want to

87
00:03:21,150 --> 00:03:23,100
start just by sharing with you my

88
00:03:23,100 --> 00:03:26,130
definition of DevOps which is this is a

89
00:03:26,130 --> 00:03:27,270
definition we put into the DevOps

90
00:03:27,270 --> 00:03:29,040
handbook it is specifically the

91
00:03:29,040 --> 00:03:30,600
architectural practices technical

92
00:03:30,600 --> 00:03:32,730
practices and cultural norms that enable

93
00:03:32,730 --> 00:03:34,500
us to increase our ability to deliver

94
00:03:34,500 --> 00:03:36,900
application services quickly and safely

95
00:03:36,900 --> 00:03:39,390
this enables us to rapidly experiment

96
00:03:39,390 --> 00:03:41,730
and innovate allows us to have the

97
00:03:41,730 --> 00:03:43,110
fastest delivery of value to our

98
00:03:43,110 --> 00:03:45,780
customers while ensuring world-class

99
00:03:45,780 --> 00:03:47,940
security reliability and stability and

100
00:03:47,940 --> 00:03:49,920
so why do we care about that is that

101
00:03:49,920 --> 00:03:52,260
those are the abilities allow us to win

102
00:03:52,260 --> 00:03:54,030
in the marketplace so I love that

103
00:03:54,030 --> 00:03:55,800
definition just because it doesn't have

104
00:03:55,800 --> 00:03:57,810
to say what DevOps is instead it

105
00:03:57,810 --> 00:03:59,510
describes the outcomes that we aspire to

106
00:03:59,510 --> 00:04:02,660
so as much as I like that definition

107
00:04:02,660 --> 00:04:05,400
there was a definition I like even more

108
00:04:05,400 --> 00:04:07,080
than that that comes from not me but

109
00:04:07,080 --> 00:04:09,390
john smart who for many years I led the

110
00:04:09,390 --> 00:04:10,860
better ways of working at Barclays an

111
00:04:10,860 --> 00:04:12,989
organization founded in the Year 1634

112
00:04:12,989 --> 00:04:14,880
which actually predates the invention of

113
00:04:14,880 --> 00:04:16,890
paper cash and his definition is simply

114
00:04:16,890 --> 00:04:20,100
this it is better value sooner safer and

115
00:04:20,100 --> 00:04:23,220
happier and I just love that definition

116
00:04:23,220 --> 00:04:25,289
because it's only five words and it is

117
00:04:25,289 --> 00:04:27,150
as correct

118
00:04:27,150 --> 00:04:29,220
as any other definition I've heard so

119
00:04:29,220 --> 00:04:31,260
this is actually my favorite definition

120
00:04:31,260 --> 00:04:33,060
and so in 2013 I had the privilege of

121
00:04:33,060 --> 00:04:34,139
co-authoring a book called The Venus

122
00:04:34,139 --> 00:04:36,930
Project in 2016 the DevOps handbook

123
00:04:36,930 --> 00:04:37,949
which is meant to be the prescriptive

124
00:04:37,949 --> 00:04:40,680
guide to the fees

125
00:04:40,680 --> 00:04:43,680
was part of a effort to with dr. nicole

126
00:04:43,680 --> 00:04:46,139
forstman just humble and the amazing

127
00:04:46,139 --> 00:04:48,360
team at puppet around the state of Davos

128
00:04:48,360 --> 00:04:49,830
support and now Lana Brown is speaking

129
00:04:49,830 --> 00:04:51,479
after me which I'm so delayed

130
00:04:51,479 --> 00:04:53,220
that'll be being able to see her

131
00:04:53,220 --> 00:04:54,960
presentation but I think there are some

132
00:04:54,960 --> 00:04:56,880
problems that still remain and these are

133
00:04:56,880 --> 00:04:59,370
the ideas I want explore more in the

134
00:04:59,370 --> 00:05:02,270
unicorn project one is the absence of

135
00:05:02,270 --> 00:05:03,960
understanding of all the invisible

136
00:05:03,960 --> 00:05:06,090
structures needed to enable developer

137
00:05:06,090 --> 00:05:09,930
productivity two is there's this other

138
00:05:09,930 --> 00:05:11,729
orthogonal problem that is just as

139
00:05:11,729 --> 00:05:14,160
important of DevOps so DevOps rightly

140
00:05:14,160 --> 00:05:15,870
pointed out that was so difficult to get

141
00:05:15,870 --> 00:05:17,310
code to where it needed to go which is

142
00:05:17,310 --> 00:05:19,770
in production so that customers could

143
00:05:19,770 --> 00:05:21,810
get value of what we create this is

144
00:05:21,810 --> 00:05:23,639
other orthogonal problem around data

145
00:05:23,639 --> 00:05:25,560
which is that data is often trapped in

146
00:05:25,560 --> 00:05:28,080
systems of record and data warehouses

147
00:05:28,080 --> 00:05:29,880
and it takes weeks months or quarters to

148
00:05:29,880 --> 00:05:31,380
get it to where it needs to go which is

149
00:05:31,380 --> 00:05:33,930
in the hands of developers so that we

150
00:05:33,930 --> 00:05:35,550
can use it to out-innovate the

151
00:05:35,550 --> 00:05:39,810
competition and so in an organization in

152
00:05:39,810 --> 00:05:42,990
most modern organizations 30 to 50

153
00:05:42,990 --> 00:05:45,900
percent of employees actually use and

154
00:05:45,900 --> 00:05:47,430
manipulate data in the data what daily

155
00:05:47,430 --> 00:05:48,599
work so arguably this is a problem

156
00:05:48,599 --> 00:05:51,060
that's even bigger than devops third

157
00:05:51,060 --> 00:05:52,770
there's this strong opposition to

158
00:05:52,770 --> 00:05:54,150
support these new ways of working

159
00:05:54,150 --> 00:05:56,280
there's ambiguity on what exact

160
00:05:56,280 --> 00:05:58,620
behaviors we need to support a DevOps

161
00:05:58,620 --> 00:06:02,039
transformation and so these are what

162
00:06:02,039 --> 00:06:03,150
really these are problem that really

163
00:06:03,150 --> 00:06:05,340
attracted me and so in the unicorn

164
00:06:05,340 --> 00:06:08,099
project use the instrument of the five

165
00:06:08,099 --> 00:06:10,650
ideals to explore them so in the Phoenix

166
00:06:10,650 --> 00:06:12,840
project we had the three the three ways

167
00:06:12,840 --> 00:06:15,030
the four types work and the unicorn

168
00:06:15,030 --> 00:06:16,740
project has the five ideals the first

169
00:06:16,740 --> 00:06:18,960
ideal is locality and simplicity the

170
00:06:18,960 --> 00:06:21,389
second ideal is focus flow and joy the

171
00:06:21,389 --> 00:06:23,250
third ideal is improvement of daily work

172
00:06:23,250 --> 00:06:25,110
the fourth ideal is psychological safety

173
00:06:25,110 --> 00:06:28,800
and the fifth ideal is customer focus so

174
00:06:28,800 --> 00:06:31,080
what I'd like to do in this presentation

175
00:06:31,080 --> 00:06:32,370
just go through each one and give you an

176
00:06:32,370 --> 00:06:34,770
example of what ideal and not ideal look

177
00:06:34,770 --> 00:06:36,750
like so let's start with the first ideal

178
00:06:36,750 --> 00:06:39,690
of locality and simplicity let me just

179
00:06:39,690 --> 00:06:40,970
briefly

180
00:06:40,970 --> 00:06:44,099
tell you about the story that I think

181
00:06:44,099 --> 00:06:45,870
embodies is the best which is the birth

182
00:06:45,870 --> 00:06:47,129
and death of a technology called

183
00:06:47,129 --> 00:06:49,949
sprouter at Etsy this is really a story

184
00:06:49,949 --> 00:06:51,509
about how engineers work together to

185
00:06:51,509 --> 00:06:53,310
create value so back in the bad old days

186
00:06:53,310 --> 00:06:56,580
of Etsy in 2008 even they realized they

187
00:06:56,580 --> 00:06:58,259
had this big problem which was that for

188
00:06:58,259 --> 00:07:00,750
a feature to get put into production for

189
00:07:00,750 --> 00:07:02,729
customers get value cheap teams would

190
00:07:02,729 --> 00:07:04,020
have to work together

191
00:07:04,020 --> 00:07:05,490
the devs would work in the front end

192
00:07:05,490 --> 00:07:07,979
inside a PHP the DBAs would work on the

193
00:07:07,979 --> 00:07:09,449
backend inside of the stored procedures

194
00:07:09,449 --> 00:07:11,669
inside of Postgres and so this meant

195
00:07:11,669 --> 00:07:13,979
that for any feature they would have

196
00:07:13,979 --> 00:07:15,690
these two teams have to communicate and

197
00:07:15,690 --> 00:07:17,789
coordinate and prioritize and signal and

198
00:07:17,789 --> 00:07:18,870
Marshall and deconflict

199
00:07:18,870 --> 00:07:21,300
for us for them to actually complete the

200
00:07:21,300 --> 00:07:25,050
feature and so their goal was can we

201
00:07:25,050 --> 00:07:26,520
create something in the middle that

202
00:07:26,520 --> 00:07:27,419
would allow these teams to work

203
00:07:27,419 --> 00:07:30,840
independently and so in 2009 they

204
00:07:30,840 --> 00:07:32,580
created sprouter scriber stands for

205
00:07:32,580 --> 00:07:35,219
stored procedure router and the idea was

206
00:07:35,219 --> 00:07:36,210
that these two teams would work

207
00:07:36,210 --> 00:07:37,650
independently and just meet in the

208
00:07:37,650 --> 00:07:39,870
middle inside of sprouter and as ian

209
00:07:39,870 --> 00:07:42,180
Malpass an engineer as he said this

210
00:07:42,180 --> 00:07:43,889
required a degree of synchronization and

211
00:07:43,889 --> 00:07:47,159
coordination that was rarely achieved to

212
00:07:47,159 --> 00:07:48,840
the point where almost every deployment

213
00:07:48,840 --> 00:07:51,539
became a mini outage and so what I find

214
00:07:51,539 --> 00:07:52,979
marvelous about this is that Conway's

215
00:07:52,979 --> 00:07:55,080
law would us it would predict this as we

216
00:07:55,080 --> 00:07:56,310
go from two teams that have to

217
00:07:56,310 --> 00:07:57,779
communicate coordinates prioritize

218
00:07:57,779 --> 00:07:59,880
marshal sequence then deconflict and so

219
00:07:59,880 --> 00:08:01,710
forth the three teams to have to

220
00:08:01,710 --> 00:08:03,300
communicate coordinate Marshall D

221
00:08:03,300 --> 00:08:04,789
sequence to deconflict

222
00:08:04,789 --> 00:08:08,340
lead times went way up and then quality

223
00:08:08,340 --> 00:08:11,099
outcomes went way down and so as part of

224
00:08:11,099 --> 00:08:12,840
the great rebirth of engineering

225
00:08:12,840 --> 00:08:15,240
greatness at C their goal was to kill

226
00:08:15,240 --> 00:08:17,279
sprouter among many of the things right

227
00:08:17,279 --> 00:08:19,169
and that what they found was that the

228
00:08:19,169 --> 00:08:21,840
goal was to make it so that features

229
00:08:21,840 --> 00:08:23,490
could be implemented just by developers

230
00:08:23,490 --> 00:08:25,949
on the front end with no need for DBAs

231
00:08:25,949 --> 00:08:27,930
to make changes and so they did this

232
00:08:27,930 --> 00:08:30,860
through object relational model models

233
00:08:30,860 --> 00:08:32,849
what it meant what they found was that

234
00:08:32,849 --> 00:08:34,589
in every part of the XE property where

235
00:08:34,589 --> 00:08:37,229
they eliminated router suddenly code

236
00:08:37,229 --> 00:08:38,698
deployment team lead times don't weigh

237
00:08:38,698 --> 00:08:40,708
down and the quality outcomes went way

238
00:08:40,708 --> 00:08:43,409
up and so Congress law was to predict

239
00:08:43,409 --> 00:08:44,940
this as well because when you have no

240
00:08:44,940 --> 00:08:46,800
teams that need to coordinate with each

241
00:08:46,800 --> 00:08:48,870
other they can work independently right

242
00:08:48,870 --> 00:08:51,480
a whole category problems go away and so

243
00:08:51,480 --> 00:08:53,880
the learning here is that is not enough

244
00:08:53,880 --> 00:08:54,630
to move

245
00:08:54,630 --> 00:08:57,030
box around on an org chart we must also

246
00:08:57,030 --> 00:08:59,160
have a software architecture that is

247
00:08:59,160 --> 00:09:01,890
congruent that is isomorphic to those

248
00:09:01,890 --> 00:09:04,410
boxes right and so that's what I love

249
00:09:04,410 --> 00:09:07,050
about the story is it shows how bad it

250
00:09:07,050 --> 00:09:08,280
can get when you go from two teams of

251
00:09:08,280 --> 00:09:10,440
three teams and how great it can be when

252
00:09:10,440 --> 00:09:12,570
we go from three teams to one team but

253
00:09:12,570 --> 00:09:14,430
the sad reality is that most

254
00:09:14,430 --> 00:09:15,870
organizations that have been around for

255
00:09:15,870 --> 00:09:17,790
years or decades or even centuries is

256
00:09:17,790 --> 00:09:19,410
that it's not three teams I have to work

257
00:09:19,410 --> 00:09:22,350
together often its scores of team so

258
00:09:22,350 --> 00:09:23,850
when we initiate the deployment on the

259
00:09:23,850 --> 00:09:25,740
left and then get to a happy customer on

260
00:09:25,740 --> 00:09:27,180
the right we often have to transit

261
00:09:27,180 --> 00:09:29,730
through 20 30 40 different teams so it's

262
00:09:29,730 --> 00:09:32,190
middleware teams environment teams user

263
00:09:32,190 --> 00:09:35,400
met user account teams security change

264
00:09:35,400 --> 00:09:37,530
approvals architecture review boards

265
00:09:37,530 --> 00:09:39,270
alright firewall changes right it

266
00:09:39,270 --> 00:09:40,650
doesn't take a lot to go wrong before

267
00:09:40,650 --> 00:09:41,820
we're looking at code deployment lead

268
00:09:41,820 --> 00:09:43,200
time to measure in the weeks months or

269
00:09:43,200 --> 00:09:47,360
quarters so uh one of the most marvelous

270
00:09:47,360 --> 00:09:49,550
findings in the state of Davos report

271
00:09:49,550 --> 00:09:53,460
was in 2017 when we found that

272
00:09:53,460 --> 00:09:54,990
architecture was one of the top

273
00:09:54,990 --> 00:09:57,420
predictors of performance architecture

274
00:09:57,420 --> 00:09:59,820
was a even a higher particular

275
00:09:59,820 --> 00:10:01,490
performance and even continuous delivery

276
00:10:01,490 --> 00:10:04,050
so what are the aspects of great

277
00:10:04,050 --> 00:10:07,830
architecture it is the ability for teams

278
00:10:07,830 --> 00:10:09,360
to be able to make large-scale changes

279
00:10:09,360 --> 00:10:10,980
to their parts of the system without

280
00:10:10,980 --> 00:10:13,080
permission from anyone else can they

281
00:10:13,080 --> 00:10:14,550
complete their work with a lot of fine

282
00:10:14,550 --> 00:10:16,110
grained communication coordination with

283
00:10:16,110 --> 00:10:18,300
people outside the team can they deploy

284
00:10:18,300 --> 00:10:21,120
and release their service on demand

285
00:10:21,120 --> 00:10:22,980
independent of services it depends upon

286
00:10:22,980 --> 00:10:25,080
can they they do their own testing on

287
00:10:25,080 --> 00:10:26,520
demand without the use of a scarce

288
00:10:26,520 --> 00:10:27,960
integrated test environment of which

289
00:10:27,960 --> 00:10:30,300
there are never enough and if our little

290
00:10:30,300 --> 00:10:31,740
things are true then you should be able

291
00:10:31,740 --> 00:10:33,270
to do deployments during normal business

292
00:10:33,270 --> 00:10:37,440
hours with negligible downtime so in the

293
00:10:37,440 --> 00:10:39,990
Phoenix project one of the measures was

294
00:10:39,990 --> 00:10:42,300
the bus factor which is as measured by

295
00:10:42,300 --> 00:10:44,130
how many people need to be hit by a bus

296
00:10:44,130 --> 00:10:46,350
before the service project or company is

297
00:10:46,350 --> 00:10:48,300
in grave jeopardy in the phase project

298
00:10:48,300 --> 00:10:50,760
the bus factor was one it was Brent if

299
00:10:50,760 --> 00:10:53,100
Brent got hit by a bus no major piece of

300
00:10:53,100 --> 00:10:53,370
work

301
00:10:53,370 --> 00:10:56,370
no outage could be remediated at all

302
00:10:56,370 --> 00:10:59,070
right because they're all Brent was the

303
00:10:59,070 --> 00:11:00,180
only person who had the critical

304
00:11:00,180 --> 00:11:01,620
knowledge in his head so we want a bus

305
00:11:01,620 --> 00:11:04,110
factor larger than that in the unicorn

306
00:11:04,110 --> 00:11:06,180
project I think the equivalent one is

307
00:11:06,180 --> 00:11:08,640
the lunch factor as measured by

308
00:11:08,640 --> 00:11:10,170
how many people you need to take out to

309
00:11:10,170 --> 00:11:12,000
lunch in order to get any major piece of

310
00:11:12,000 --> 00:11:14,519
work done so is it the Amazonian ideal

311
00:11:14,519 --> 00:11:16,589
of the to pizza team where that each

312
00:11:16,589 --> 00:11:19,829
team is able to do what needs to get

313
00:11:19,829 --> 00:11:21,990
done without any dependencies outside

314
00:11:21,990 --> 00:11:24,450
the team or do you need to feed everyone

315
00:11:24,450 --> 00:11:27,390
in the building do you need to take 45

316
00:11:27,390 --> 00:11:29,579
people out to lunch do you need to feed

317
00:11:29,579 --> 00:11:31,829
300 people to complete the deployment

318
00:11:31,829 --> 00:11:33,779
and so here we really want low lunch

319
00:11:33,779 --> 00:11:37,380
factors ideal is that when you need to

320
00:11:37,380 --> 00:11:39,420
make a change you can just look at one

321
00:11:39,420 --> 00:11:41,220
file one module in one namespace one

322
00:11:41,220 --> 00:11:43,950
application one container one workload

323
00:11:43,950 --> 00:11:46,470
and change it there right

324
00:11:46,470 --> 00:11:48,690
not ideal is that to make your need a

325
00:11:48,690 --> 00:11:50,399
change you have to change all the files

326
00:11:50,399 --> 00:11:52,320
all the namespaces all the modules all

327
00:11:52,320 --> 00:11:53,399
the containers right then that's

328
00:11:53,399 --> 00:11:55,500
obviously you know drives a lunch factor

329
00:11:55,500 --> 00:11:57,660
way up or you can't get things done

330
00:11:57,660 --> 00:11:59,220
you know if you have to coordinate with

331
00:11:59,220 --> 00:12:01,980
that many people ideal is when your

332
00:12:01,980 --> 00:12:04,680
changes can be independently implemented

333
00:12:04,680 --> 00:12:07,019
and tested in other words isolated from

334
00:12:07,019 --> 00:12:08,760
the other components so that we can get

335
00:12:08,760 --> 00:12:09,810
a higher your assurance that work

336
00:12:09,810 --> 00:12:11,730
components our changes will actually

337
00:12:11,730 --> 00:12:13,890
operate as designed in production not

338
00:12:13,890 --> 00:12:15,750
ideal in order for us to gain any

339
00:12:15,750 --> 00:12:17,430
confidence that changes will work we

340
00:12:17,430 --> 00:12:19,500
have to test it in the presence of every

341
00:12:19,500 --> 00:12:21,180
other component all right in other words

342
00:12:21,180 --> 00:12:23,760
that integrated test environment which

343
00:12:23,760 --> 00:12:27,269
are so problematic and so this is where

344
00:12:27,269 --> 00:12:28,860
I think the notion of composition comes

345
00:12:28,860 --> 00:12:30,930
so important can we test it and run it

346
00:12:30,930 --> 00:12:34,529
in isolation to everything else every

347
00:12:34,529 --> 00:12:36,089
team and the ideal has the expertise and

348
00:12:36,089 --> 00:12:38,790
capability and authority to satisfy the

349
00:12:38,790 --> 00:12:41,010
customer needs not ideal is in order to

350
00:12:41,010 --> 00:12:42,269
do what the customer wants we have to

351
00:12:42,269 --> 00:12:44,130
escalate every decision up to levels

352
00:12:44,130 --> 00:12:46,019
over 2 and then down to so visual

353
00:12:46,019 --> 00:12:48,329
depicted it looks like this we have to

354
00:12:48,329 --> 00:12:50,790
go up to over 2 and down to this is what

355
00:12:50,790 --> 00:12:52,740
a friend of mine called the square all

356
00:12:52,740 --> 00:12:56,190
right and yeah when I showed him this he

357
00:12:56,190 --> 00:12:58,440
said that's actually the good case the

358
00:12:58,440 --> 00:12:59,670
not good case is we have to do the

359
00:12:59,670 --> 00:13:02,100
return path in order for two engineers

360
00:13:02,100 --> 00:13:03,390
to actually work together and solve a

361
00:13:03,390 --> 00:13:07,890
problem for a customer and I'll just say

362
00:13:07,890 --> 00:13:09,269
this I think one of the best books that

363
00:13:09,269 --> 00:13:11,760
describe this problems team of teams the

364
00:13:11,760 --> 00:13:13,740
story the amazing story of the Joint

365
00:13:13,740 --> 00:13:16,140
Special Forces task force in Iraq

366
00:13:16,140 --> 00:13:18,959
battling far small or far but far

367
00:13:18,959 --> 00:13:21,510
nimbler adversary and they were tasked

368
00:13:21,510 --> 00:13:22,230
with protecting the

369
00:13:22,230 --> 00:13:26,190
citizenry and Iraq and this is a story

370
00:13:26,190 --> 00:13:29,880
about how they push decision-making down

371
00:13:29,880 --> 00:13:31,500
to the lowest possible levels fully

372
00:13:31,500 --> 00:13:35,640
enabled them and created a team of teams

373
00:13:35,640 --> 00:13:39,570
are working together to solve a very

374
00:13:39,570 --> 00:13:41,370
important mission by the way my favorite

375
00:13:41,370 --> 00:13:42,990
quote in that book is the team was the

376
00:13:42,990 --> 00:13:44,850
boundary of which everyone else sucked

377
00:13:44,850 --> 00:13:47,760
so if you're an Army Ranger right that's

378
00:13:47,760 --> 00:13:49,530
what you think about that Navy SEALs if

379
00:13:49,530 --> 00:13:50,910
you're a Navy SEAL you don't have a lot

380
00:13:50,910 --> 00:13:55,140
of respect for the state Delta Force let

381
00:13:55,140 --> 00:13:57,150
alone the intelligence agencies so I

382
00:13:57,150 --> 00:13:59,730
think is a phenomenal book that anyone

383
00:13:59,730 --> 00:14:01,160
who loves DevOps will also enjoy

384
00:14:01,160 --> 00:14:06,030
so first ideal is locality and

385
00:14:06,030 --> 00:14:07,710
simplicity the second idea was focus

386
00:14:07,710 --> 00:14:09,030
flow and joy which I think are the

387
00:14:09,030 --> 00:14:11,760
outcomes of this so so much of this

388
00:14:11,760 --> 00:14:14,130
informed by learning a functional

389
00:14:14,130 --> 00:14:15,590
programming language called closure I

390
00:14:15,590 --> 00:14:19,290
love as a functional programming

391
00:14:19,290 --> 00:14:21,060
language that runs on the JVM so I loved

392
00:14:21,060 --> 00:14:24,510
all the Java talks that were on today

393
00:14:24,510 --> 00:14:29,040
especially my buddy Josh long he and

394
00:14:29,040 --> 00:14:31,200
just to paint it show the context of

395
00:14:31,200 --> 00:14:33,180
this for 20 years I really identified

396
00:14:33,180 --> 00:14:35,190
not as a developer but as an ops person

397
00:14:35,190 --> 00:14:37,020
so I got my graduate degree in compiler

398
00:14:37,020 --> 00:14:39,380
design and networking and yet you know

399
00:14:39,380 --> 00:14:41,970
being despite being formally trained as

400
00:14:41,970 --> 00:14:44,970
a developer I chose ops as my real area

401
00:14:44,970 --> 00:14:46,890
of passion I think it was because it was

402
00:14:46,890 --> 00:14:48,600
my observation that it was ops where the

403
00:14:48,600 --> 00:14:51,120
saves were made it was offs who saved us

404
00:14:51,120 --> 00:14:52,530
from terrible developers who kept

405
00:14:52,530 --> 00:14:54,300
blowing up things in production because

406
00:14:54,300 --> 00:14:56,070
they didn't care about testing it was

407
00:14:56,070 --> 00:14:58,880
ops to actually protected us from the

408
00:14:58,880 --> 00:15:00,840
adversaries because it certainly wasn't

409
00:15:00,840 --> 00:15:03,030
the security people and yet over the

410
00:15:03,030 --> 00:15:06,060
last three four years identifying that

411
00:15:06,060 --> 00:15:08,210
as an ops person for the first time in

412
00:15:08,210 --> 00:15:11,280
20 years I now self-identify decisively

413
00:15:11,280 --> 00:15:13,710
as a developer I think it's because of

414
00:15:13,710 --> 00:15:16,020
learning how good programming can be and

415
00:15:16,020 --> 00:15:17,520
through functional programming and how

416
00:15:17,520 --> 00:15:19,500
much you can build I was so little

417
00:15:19,500 --> 00:15:23,180
effort these days and so at the core of

418
00:15:23,180 --> 00:15:25,910
languages like closure and Lisp and

419
00:15:25,910 --> 00:15:28,650
Erlang and reason ml appear script is a

420
00:15:28,650 --> 00:15:30,660
notion of immutability and the famous

421
00:15:30,660 --> 00:15:32,300
French philosopher Claude lévi-strauss

422
00:15:32,300 --> 00:15:34,650
would say of certain tools is it a good

423
00:15:34,650 --> 00:15:35,560
tool to think with

424
00:15:35,560 --> 00:15:37,240
I think there are certain things that

425
00:15:37,240 --> 00:15:39,310
you find in Funchal programs are better

426
00:15:39,310 --> 00:15:41,439
tools to think with the notion that you

427
00:15:41,439 --> 00:15:43,449
can't change states it's the source of

428
00:15:43,449 --> 00:15:46,600
so much incidental complexity and so

429
00:15:46,600 --> 00:15:49,089
immutability really was pioneered in

430
00:15:49,089 --> 00:15:51,129
programming languages over the last 40

431
00:15:51,129 --> 00:15:53,019
years but what I find so exciting is

432
00:15:53,019 --> 00:15:54,430
that immutability shows up in

433
00:15:54,430 --> 00:15:56,800
infrastructure and operations as well in

434
00:15:56,800 --> 00:15:58,059
fact if you look at docker it is

435
00:15:58,059 --> 00:15:59,680
fundamentally immutable right well if

436
00:15:59,680 --> 00:16:01,389
you want to make a change that lasts in

437
00:16:01,389 --> 00:16:03,490
a container now you you can't you have

438
00:16:03,490 --> 00:16:05,620
to make a new container kubernetes safe

439
00:16:05,620 --> 00:16:08,290
that's - not just a component but the

440
00:16:08,290 --> 00:16:10,990
system of components every time you see

441
00:16:10,990 --> 00:16:12,819
something like Apache Kafka yeah this

442
00:16:12,819 --> 00:16:13,720
chance that if someone's actually

443
00:16:13,720 --> 00:16:14,920
thinking about the need for this

444
00:16:14,920 --> 00:16:17,350
immutable data model and in fact source

445
00:16:17,350 --> 00:16:18,790
control is fundamentally immutable

446
00:16:18,790 --> 00:16:20,410
that's why we get yelled at if we

447
00:16:20,410 --> 00:16:22,480
rewrite the commit history because we

448
00:16:22,480 --> 00:16:25,990
want it to be you know always a high

449
00:16:25,990 --> 00:16:27,339
fidelity of what actually happened in

450
00:16:27,339 --> 00:16:31,240
the past but so in the ideal our time

451
00:16:31,240 --> 00:16:33,279
and energy is focused on solving the

452
00:16:33,279 --> 00:16:35,410
business problem and we're having fun

453
00:16:35,410 --> 00:16:38,379
not ideal is that all our time is spent

454
00:16:38,379 --> 00:16:39,610
solving problems that we don't even want

455
00:16:39,610 --> 00:16:41,800
to solve like learning how to write

456
00:16:41,800 --> 00:16:43,720
properly you know configured yamo files

457
00:16:43,720 --> 00:16:46,389
that don't barf out syntax errors for

458
00:16:46,389 --> 00:16:48,790
you or learning how to escape spaces in

459
00:16:48,790 --> 00:16:50,290
the file names inside of make files or

460
00:16:50,290 --> 00:16:54,579
writing bash scripts and so what I found

461
00:16:54,579 --> 00:16:56,379
in after learning closures that there's

462
00:16:56,379 --> 00:16:58,629
all these things that I used to enjoy 10

463
00:16:58,629 --> 00:17:01,149
20 30 years ago that I absolutely detest

464
00:17:01,149 --> 00:17:03,819
now I find that I now detest doing

465
00:17:03,819 --> 00:17:05,470
anything outside of my application I

466
00:17:05,470 --> 00:17:07,089
hate connecting anything to anything

467
00:17:07,089 --> 00:17:09,099
else especially databases because it

468
00:17:09,099 --> 00:17:11,020
will take me a week I hate updating my

469
00:17:11,020 --> 00:17:12,849
dependencies I hate secrets management

470
00:17:12,849 --> 00:17:14,619
I'm the Jackass who always checks in

471
00:17:14,619 --> 00:17:16,240
things into source code repo causing all

472
00:17:16,240 --> 00:17:18,898
sorts of problems

473
00:17:18,898 --> 00:17:21,909
yeah mole patching building correct

474
00:17:21,909 --> 00:17:24,039
kubernetes deployment files these are

475
00:17:24,039 --> 00:17:25,780
all the things that I detest it's not

476
00:17:25,780 --> 00:17:27,309
because they're not important they are

477
00:17:27,309 --> 00:17:28,870
very important arguably they're as

478
00:17:28,870 --> 00:17:30,399
important as the features we're trying

479
00:17:30,399 --> 00:17:31,840
to build in applications but I just

480
00:17:31,840 --> 00:17:33,010
don't want to do it anymore and I think

481
00:17:33,010 --> 00:17:35,230
this is why I believe platforms are so

482
00:17:35,230 --> 00:17:37,270
important and why they are so great for

483
00:17:37,270 --> 00:17:41,020
operations and security is that we want

484
00:17:41,020 --> 00:17:42,880
to create platforms allow developers do

485
00:17:42,880 --> 00:17:45,159
what they need to do self-service on

486
00:17:45,159 --> 00:17:47,260
demand with immediacy and fast feedback

487
00:17:47,260 --> 00:17:49,270
which allows for the condition

488
00:17:49,270 --> 00:17:51,340
that allow us to have focus and flow and

489
00:17:51,340 --> 00:17:53,170
even joy and so all these things like

490
00:17:53,170 --> 00:17:55,000
monitoring deployment environment

491
00:17:55,000 --> 00:17:57,010
creation security scans all these things

492
00:17:57,010 --> 00:17:59,040
should be have these characteristics and

493
00:17:59,040 --> 00:18:00,880
this is why I make the claim that

494
00:18:00,880 --> 00:18:02,950
there's never been a better time to be

495
00:18:02,950 --> 00:18:04,330
in infrastructure in operation it's the

496
00:18:04,330 --> 00:18:07,900
best days for ops and security QA are

497
00:18:07,900 --> 00:18:09,610
not behind us now they are without a

498
00:18:09,610 --> 00:18:13,000
doubt for me ahead of us I want to make

499
00:18:13,000 --> 00:18:15,910
one last point before I leave this topic

500
00:18:15,910 --> 00:18:17,560
which is a notion of flow I think the

501
00:18:17,560 --> 00:18:19,840
best treatment of this topic comes from

502
00:18:19,840 --> 00:18:22,870
dr. Mihaly Csikszentmihalyi he wrote the

503
00:18:22,870 --> 00:18:24,880
famous book called flow the psychology

504
00:18:24,880 --> 00:18:27,040
of optimal experience I gave the best

505
00:18:27,040 --> 00:18:29,050
TED talks of all time and he describes

506
00:18:29,050 --> 00:18:31,000
flow as being the state where we lose we

507
00:18:31,000 --> 00:18:32,530
are loved the work we're doing so much

508
00:18:32,530 --> 00:18:34,180
we lose track of time and maybe even

509
00:18:34,180 --> 00:18:36,580
sense of self so that transcendental joy

510
00:18:36,580 --> 00:18:38,110
we get from doing with the work we love

511
00:18:38,110 --> 00:18:42,040
right that is what we aspire to and so I

512
00:18:42,040 --> 00:18:44,410
think that is really what the second

513
00:18:44,410 --> 00:18:47,650
ideal is all about focus flow enjoy so

514
00:18:47,650 --> 00:18:49,540
ideal is when we can implement and test

515
00:18:49,540 --> 00:18:51,640
what are what we wrote on a laptop and

516
00:18:51,640 --> 00:18:53,050
learn whether it will work in production

517
00:18:53,050 --> 00:18:55,060
in seconds not ideal we have to work

518
00:18:55,060 --> 00:19:00,640
wait weeks months or even quarters ideas

519
00:19:00,640 --> 00:19:02,050
we're doing trunk based development

520
00:19:02,050 --> 00:19:04,450
we're not ideal is that every time we

521
00:19:04,450 --> 00:19:06,310
merge code we have to spend five days

522
00:19:06,310 --> 00:19:08,440
merging with 50 people trapped in a war

523
00:19:08,440 --> 00:19:10,450
room right that is not ideal

524
00:19:10,450 --> 00:19:12,010
and so here's a little depiction and a

525
00:19:12,010 --> 00:19:14,860
reminder I do solo projects right and

526
00:19:14,860 --> 00:19:16,300
there are often situations where I do

527
00:19:16,300 --> 00:19:17,800
feature branches where I can't even

528
00:19:17,800 --> 00:19:19,930
merge with myself I find that actually

529
00:19:19,930 --> 00:19:22,240
easier to retype the changes than to do

530
00:19:22,240 --> 00:19:26,920
the Automator merge not ideal so yeah

531
00:19:26,920 --> 00:19:29,980
the third first idea was locality

532
00:19:29,980 --> 00:19:31,480
simplicity the second ideal is focus

533
00:19:31,480 --> 00:19:33,370
flow enjoy the third ideal is

534
00:19:33,370 --> 00:19:36,310
improvement of daily work so that ideal

535
00:19:36,310 --> 00:19:38,460
is tois d the way we've always done it

536
00:19:38,460 --> 00:19:42,400
the ideal is MTB TT to make tomorrow

537
00:19:42,400 --> 00:19:44,230
better than today which is Google s re

538
00:19:44,230 --> 00:19:46,810
principle number two and and so not

539
00:19:46,810 --> 00:19:49,480
ideal I think the best example of this

540
00:19:49,480 --> 00:19:51,340
is the Fremont manufacturing plant in

541
00:19:51,340 --> 00:19:55,930
the 1903 1970s and 80s where for decades

542
00:19:55,930 --> 00:19:58,000
it was a worst manufacturing plant not

543
00:19:58,000 --> 00:19:59,380
just in North America but around the

544
00:19:59,380 --> 00:20:02,440
globe and there were so many documented

545
00:20:02,440 --> 00:20:02,940
instance

546
00:20:02,940 --> 00:20:04,500
is where because there are no effective

547
00:20:04,500 --> 00:20:06,960
procedures in place insect problems nor

548
00:20:06,960 --> 00:20:09,690
were the procedures to tell you what to

549
00:20:09,690 --> 00:20:11,760
do there are so many instances of

550
00:20:11,760 --> 00:20:13,320
engines being put in backwards cars

551
00:20:13,320 --> 00:20:14,610
missing steering wheels of tires

552
00:20:14,610 --> 00:20:16,470
cards being happening to be towed off

553
00:20:16,470 --> 00:20:17,490
the assembly line because they wouldn't

554
00:20:17,490 --> 00:20:20,100
start so that is not ideal instead what

555
00:20:20,100 --> 00:20:21,900
we want is to it as much feedback into

556
00:20:21,900 --> 00:20:24,360
our system as many and as many places as

557
00:20:24,360 --> 00:20:26,070
possible soon or faster and cheaper so

558
00:20:26,070 --> 00:20:27,510
we can have more and more clarity

559
00:20:27,510 --> 00:20:28,890
between cause and effect because the

560
00:20:28,890 --> 00:20:30,960
more assumptions we invalidate the more

561
00:20:30,960 --> 00:20:32,310
we learn the more we learn the more we

562
00:20:32,310 --> 00:20:36,000
out learn the competition and so without

563
00:20:36,000 --> 00:20:39,150
a doubt the Paragon of this principle is

564
00:20:39,150 --> 00:20:40,770
probably the and on cord the most

565
00:20:40,770 --> 00:20:42,870
studied tool in the Toyota Production

566
00:20:42,870 --> 00:20:45,540
system toolkit and so it was amazing to

567
00:20:45,540 --> 00:20:47,430
me when I took a course at the

568
00:20:47,430 --> 00:20:49,140
University of Michigan in 2011 at the

569
00:20:49,140 --> 00:20:50,820
University of Michigan getting trained

570
00:20:50,820 --> 00:20:53,040
in toyota product and process it's true

571
00:20:53,040 --> 00:20:56,460
on top of every workcenter Oh everyone's

572
00:20:56,460 --> 00:20:57,990
trained to pull the cord

573
00:20:57,990 --> 00:21:01,170
I want something goes wrong so if I get

574
00:21:01,170 --> 00:21:02,760
a defective part from someone I pulled a

575
00:21:02,760 --> 00:21:04,560
cord if I create a defect to part myself

576
00:21:04,560 --> 00:21:07,410
I pulled a cord if I don't have anything

577
00:21:07,410 --> 00:21:09,540
to work on I pull the cord and even if I

578
00:21:09,540 --> 00:21:12,870
don't can't complete the documented

579
00:21:12,870 --> 00:21:14,850
steps within time allotted it was

580
00:21:14,850 --> 00:21:16,230
supposed to take 55 seconds and then

581
00:21:16,230 --> 00:21:19,440
took a minute 20 and pull the cord so I

582
00:21:19,440 --> 00:21:21,720
knew that going into the training but

583
00:21:21,720 --> 00:21:23,370
what I didn't know was how many times

584
00:21:23,370 --> 00:21:25,560
the and on cord is pulled in a typical

585
00:21:25,560 --> 00:21:28,590
Toyota plant in a typical day and so I

586
00:21:28,590 --> 00:21:31,860
was stunned to find out that that number

587
00:21:31,860 --> 00:21:34,200
is thirty five hundred times a day and

588
00:21:34,200 --> 00:21:37,440
so when you were my reaction was you

589
00:21:37,440 --> 00:21:38,640
know these people are idiots they have

590
00:21:38,640 --> 00:21:41,220
no idea what they're doing and I think

591
00:21:41,220 --> 00:21:42,810
the reason why I reacted that way was

592
00:21:42,810 --> 00:21:44,910
that the way I was trained as a

593
00:21:44,910 --> 00:21:46,410
first-time manager was that I thought my

594
00:21:46,410 --> 00:21:49,350
job was to solve problems in my area of

595
00:21:49,350 --> 00:21:50,730
control without causing a global

596
00:21:50,730 --> 00:21:52,950
disturbance it seems like these people

597
00:21:52,950 --> 00:21:54,240
are doing it the opposite way we're

598
00:21:54,240 --> 00:21:55,680
taking a global disturbance turning into

599
00:21:55,680 --> 00:21:57,870
a global disturbance and so the reason

600
00:21:57,870 --> 00:21:59,820
they do this is that we want to fix

601
00:21:59,820 --> 00:22:01,320
issues then and there before they cause

602
00:22:01,320 --> 00:22:03,710
technical debt to accrue downstream and

603
00:22:03,710 --> 00:22:06,000
there's an even more visceral reason

604
00:22:06,000 --> 00:22:09,210
which is that if we don't fix it then

605
00:22:09,210 --> 00:22:11,130
and there we're going to have the same

606
00:22:11,130 --> 00:22:12,900
problem fifty five seconds later and so

607
00:22:12,900 --> 00:22:14,100
that's called the day that's the notion

608
00:22:14,100 --> 00:22:15,650
of a daily workaround

609
00:22:15,650 --> 00:22:17,320
so daily workarounds exist in artwork

610
00:22:17,320 --> 00:22:20,420
but because it takes more than 55

611
00:22:20,420 --> 00:22:22,910
seconds it is far less visible but just

612
00:22:22,910 --> 00:22:27,170
as destructive so am i learning here is

613
00:22:27,170 --> 00:22:28,580
that greatness is never free you have to

614
00:22:28,580 --> 00:22:30,920
pay down technical debt so here is a

615
00:22:30,920 --> 00:22:32,570
story of technical debt of how it's born

616
00:22:32,570 --> 00:22:35,690
and how we eradicate it using only up

617
00:22:35,690 --> 00:22:37,370
and down arrows so imagine a time when

618
00:22:37,370 --> 00:22:39,950
you've been pushing to market we have to

619
00:22:39,950 --> 00:22:41,540
push on features we have to cut corners

620
00:22:41,540 --> 00:22:43,309
we have to maybe take on Technol debt

621
00:22:43,309 --> 00:22:45,380
what happens usually is that quality

622
00:22:45,380 --> 00:22:47,929
goes down and defects go up right and

623
00:22:47,929 --> 00:22:51,050
but the story doesn't end there what

624
00:22:51,050 --> 00:22:52,880
happens is that the feature Urvasi goes

625
00:22:52,880 --> 00:22:55,250
down because the time we spend on

626
00:22:55,250 --> 00:22:57,770
defects goes up even exceeding 100% and

627
00:22:57,770 --> 00:22:59,720
so this absolutely happens these are

628
00:22:59,720 --> 00:23:02,059
when not only are we going slow and

629
00:23:02,059 --> 00:23:03,410
slower but customers leave or our

630
00:23:03,410 --> 00:23:04,880
plunges and engineers leave because

631
00:23:04,880 --> 00:23:07,970
everything is so hard what was easy once

632
00:23:07,970 --> 00:23:11,230
is now seems impossible John Cutler

633
00:23:11,230 --> 00:23:13,309
observed this and told me on Twitter

634
00:23:13,309 --> 00:23:16,400
right exactly yes 15 2015 a certain

635
00:23:16,400 --> 00:23:17,750
class of features would take fifteen to

636
00:23:17,750 --> 00:23:20,150
thirty days three years later it takes

637
00:23:20,150 --> 00:23:22,700
ten times longer and that is technical

638
00:23:22,700 --> 00:23:25,370
debt and this has happened to every

639
00:23:25,370 --> 00:23:27,920
major technology organization that they

640
00:23:27,920 --> 00:23:29,929
were all had near-death experiences due

641
00:23:29,929 --> 00:23:31,820
to technical debt I think the most

642
00:23:31,820 --> 00:23:33,530
famous example of what's one did about

643
00:23:33,530 --> 00:23:35,840
it was Microsoft in 2002 after the

644
00:23:35,840 --> 00:23:37,700
summer of worms when CodeRed nimda

645
00:23:37,700 --> 00:23:41,000
sequel server a simple slammer took I

646
00:23:41,000 --> 00:23:42,950
was taking down everything that will

647
00:23:42,950 --> 00:23:44,630
Microsoft was building Bill Gates put

648
00:23:44,630 --> 00:23:46,340
out a memo to the entire company saying

649
00:23:46,340 --> 00:23:48,440
if any developer has to choose between

650
00:23:48,440 --> 00:23:51,140
working on a feature or fixing a

651
00:23:51,140 --> 00:23:52,309
security issue they should choose

652
00:23:52,309 --> 00:23:53,840
security all the time there was a

653
00:23:53,840 --> 00:23:56,510
year-long security stand down that that

654
00:23:56,510 --> 00:23:58,280
simply said only fixed security issues

655
00:23:58,280 --> 00:24:00,710
no features will be worked on so that

656
00:24:00,710 --> 00:24:02,030
means we take features that's a zero

657
00:24:02,030 --> 00:24:03,920
which allows us to pay down technical

658
00:24:03,920 --> 00:24:05,720
debt which allows us to increase quality

659
00:24:05,720 --> 00:24:07,429
which allows us to take down defects

660
00:24:07,429 --> 00:24:08,809
maybe not to zero but to something we

661
00:24:08,809 --> 00:24:10,640
can actually manage which allows us to

662
00:24:10,640 --> 00:24:13,700
feature to bring up feature velocity to

663
00:24:13,700 --> 00:24:15,890
even much higher than where we began and

664
00:24:15,890 --> 00:24:18,740
so that's the notion of having 20

665
00:24:18,740 --> 00:24:20,179
percent of all your cycles at least

666
00:24:20,179 --> 00:24:22,880
being taken off the table to pay down

667
00:24:22,880 --> 00:24:27,740
technical debt so ideal three to five

668
00:24:27,740 --> 00:24:28,540
percent developers

669
00:24:28,540 --> 00:24:29,620
dedicate improving developer

670
00:24:29,620 --> 00:24:31,690
productivity Google has 1500 developers

671
00:24:31,690 --> 00:24:33,340
working on just dead productivity

672
00:24:33,340 --> 00:24:35,500
Microsoft's probably two to three times

673
00:24:35,500 --> 00:24:38,020
as many and that ideal is the only

674
00:24:38,020 --> 00:24:39,520
people working on dead productivity and

675
00:24:39,520 --> 00:24:41,650
builds are the people not good enough to

676
00:24:41,650 --> 00:24:42,790
be developers let's give it to the

677
00:24:42,790 --> 00:24:48,430
summer interns so in a wonderful karmic

678
00:24:48,430 --> 00:24:50,650
continuance story such an Adela in a

679
00:24:50,650 --> 00:24:52,180
town hall meeting last year said if a

680
00:24:52,180 --> 00:24:53,470
developer ever has to choose between

681
00:24:53,470 --> 00:24:55,330
working on a feature or working on

682
00:24:55,330 --> 00:24:57,250
productivity choose their productivity

683
00:24:57,250 --> 00:25:00,010
because they are using interest in their

684
00:25:00,010 --> 00:25:03,210
favor as opposed to Technol is our enemy

685
00:25:03,210 --> 00:25:07,510
so the Forks ideal is psychological

686
00:25:07,510 --> 00:25:10,690
safety to this I go back to the state of

687
00:25:10,690 --> 00:25:12,970
DevOps report one of my favorite

688
00:25:12,970 --> 00:25:14,530
instruments that describe this is the

689
00:25:14,530 --> 00:25:16,350
western organizational typology model

690
00:25:16,350 --> 00:25:19,110
that does such a great job in describing

691
00:25:19,110 --> 00:25:21,430
organizations are we an organization

692
00:25:21,430 --> 00:25:22,570
where we hide information we're

693
00:25:22,570 --> 00:25:24,640
messengers of bad news a shot where

694
00:25:24,640 --> 00:25:26,650
we've cover up failures and new ideas

695
00:25:26,650 --> 00:25:28,390
are crushed or do we have a generative

696
00:25:28,390 --> 00:25:30,040
culture where we seek information

697
00:25:30,040 --> 00:25:32,230
messengers are trained to tell bad news

698
00:25:32,230 --> 00:25:35,080
we encourage bridging between teams and

699
00:25:35,080 --> 00:25:38,080
new ideas are welcomed and so we love

700
00:25:38,080 --> 00:25:41,740
talking about brainless post-mortems and

701
00:25:41,740 --> 00:25:43,270
chaos monkeys none of that is possible

702
00:25:43,270 --> 00:25:47,080
without psychological safety so the

703
00:25:47,080 --> 00:25:48,700
first idea was locality and simplicity

704
00:25:48,700 --> 00:25:50,980
second ideals focus on joy third ideals

705
00:25:50,980 --> 00:25:52,570
improvement daily work and the fifth

706
00:25:52,570 --> 00:25:54,970
ideal is customer focus and for me the

707
00:25:54,970 --> 00:25:57,670
best example of this was a picture that

708
00:25:57,670 --> 00:26:00,310
I took at the Compuware tech quarters in

709
00:26:00,310 --> 00:26:00,880
Detroit

710
00:26:00,880 --> 00:26:02,560
there are famously resurgent mainframe

711
00:26:02,560 --> 00:26:05,380
vendors and you walk into the data

712
00:26:05,380 --> 00:26:07,630
center and at first I'm thinking why are

713
00:26:07,630 --> 00:26:09,460
we here and I'm not gonna learn how

714
00:26:09,460 --> 00:26:10,780
about what am i learned from seeing a

715
00:26:10,780 --> 00:26:12,310
bunch of halen extinguishers but what I

716
00:26:12,310 --> 00:26:13,990
saw blew me away

717
00:26:13,990 --> 00:26:16,270
because what you saw in the data center

718
00:26:16,270 --> 00:26:18,370
was essentially it was empty there are

719
00:26:18,370 --> 00:26:22,440
two Z mainframes and the rest are these

720
00:26:22,440 --> 00:26:24,700
outlines like an a murder scene where

721
00:26:24,700 --> 00:26:26,530
the server racks used to be and in each

722
00:26:26,530 --> 00:26:28,600
in the center of each one is a tombstone

723
00:26:28,600 --> 00:26:30,520
that says here's the business process

724
00:26:30,520 --> 00:26:31,990
that used to be here and here's how much

725
00:26:31,990 --> 00:26:33,790
you save per year by getting rid of it

726
00:26:33,790 --> 00:26:37,000
by moving to a SAS service and so the

727
00:26:37,000 --> 00:26:38,890
outcome of doing this is that they were

728
00:26:38,890 --> 00:26:40,690
re able to reallocate eight million

729
00:26:40,690 --> 00:26:42,850
dollars from back-office things that

730
00:26:42,850 --> 00:26:45,730
customers did not care about to our D

731
00:26:45,730 --> 00:26:47,650
which customers do care about that helps

732
00:26:47,650 --> 00:26:50,050
them win in the marketplace and so core

733
00:26:50,050 --> 00:26:52,570
is the core competencies of the

734
00:26:52,570 --> 00:26:54,580
organization that could create lasting

735
00:26:54,580 --> 00:26:56,980
durable business advantage in context is

736
00:26:56,980 --> 00:26:59,440
everything else and so the goal is let's

737
00:26:59,440 --> 00:27:02,400
make sure that we don't starve core by

738
00:27:02,400 --> 00:27:06,220
allowing context to go unmanaged so I

739
00:27:06,220 --> 00:27:07,750
did not ideal as functional silo

740
00:27:07,750 --> 00:27:09,490
managers prioritized silo goals over

741
00:27:09,490 --> 00:27:12,670
business goals ideals is when every

742
00:27:12,670 --> 00:27:15,300
leader and every member of a team

743
00:27:15,300 --> 00:27:17,080
unflinchingly looks at the work they do

744
00:27:17,080 --> 00:27:19,600
and say is this core or is this context

745
00:27:19,600 --> 00:27:21,520
of his core let's double down on it if

746
00:27:21,520 --> 00:27:23,740
its context let's question if even work

747
00:27:23,740 --> 00:27:25,660
that we should be doing so I think this

748
00:27:25,660 --> 00:27:27,250
is so important for so many reasons

749
00:27:27,250 --> 00:27:29,200
DevOps will create winners or losers in

750
00:27:29,200 --> 00:27:32,790
the marketplace and our work matters and

751
00:27:32,790 --> 00:27:35,170
why because the world is changing very

752
00:27:35,170 --> 00:27:37,540
fast big does that beat small anymore

753
00:27:37,540 --> 00:27:40,600
instead it is fast beating the slow so I

754
00:27:40,600 --> 00:27:42,010
think this is work as important that

755
00:27:42,010 --> 00:27:43,720
five ideals are was discussed in the

756
00:27:43,720 --> 00:27:45,490
uniform project and I'm so delighted

757
00:27:45,490 --> 00:27:47,050
that the unicorn project hit the number

758
00:27:47,050 --> 00:27:48,040
two on the Wall Street Journal

759
00:27:48,040 --> 00:27:49,870
bestseller for one week in the business

760
00:27:49,870 --> 00:27:52,180
hardcover category so thank you so much

761
00:27:52,180 --> 00:27:54,550
and J let me turn it back over to you

762
00:27:54,550 --> 00:28:00,520
for Q&A hey thank you so much for being

763
00:28:00,520 --> 00:28:04,090
part of all this it's been so cool to

764
00:28:04,090 --> 00:28:08,680
watch this talk again I've learned so

765
00:28:08,680 --> 00:28:12,130
much from you every single time I hear

766
00:28:12,130 --> 00:28:12,760
from you

767
00:28:12,760 --> 00:28:16,300
thank you awesome oh we got a chance to

768
00:28:16,300 --> 00:28:17,950
hang out twice last year which is so

769
00:28:17,950 --> 00:28:21,730
great yeah yeah yeah so I'm gonna go and

770
00:28:21,730 --> 00:28:23,890
take a look everybody we've got a few

771
00:28:23,890 --> 00:28:26,050
minutes till our next talk with Alanna

772
00:28:26,050 --> 00:28:28,570
and so what I really like to do is know

773
00:28:28,570 --> 00:28:31,750
if anybody has any questions we've got

774
00:28:31,750 --> 00:28:35,230
any way for you to send them on the Q&A

775
00:28:35,230 --> 00:28:39,910
section on the website you can also take

776
00:28:39,910 --> 00:28:44,070
a look at slack we've got the track

777
00:28:44,070 --> 00:28:47,110
deficit ops channel where if you want to

778
00:28:47,110 --> 00:28:50,020
ask a question but until I hear

779
00:28:50,020 --> 00:28:51,640
something I want to talk a little bit

780
00:28:51,640 --> 00:28:56,440
about something that I really

781
00:28:56,440 --> 00:28:58,000
appreciate that I thought about

782
00:28:58,000 --> 00:29:00,190
productive productivity and developers

783
00:29:00,190 --> 00:29:03,370
you talked about and I think a lot about

784
00:29:03,370 --> 00:29:07,240
the security matters letter from Bill

785
00:29:07,240 --> 00:29:12,400
Gates and years ago and I think about

786
00:29:12,400 --> 00:29:16,540
how much we've made a decision nowadays

787
00:29:16,540 --> 00:29:19,060
that productivity matters and security

788
00:29:19,060 --> 00:29:22,150
matters and that pushing features isn't

789
00:29:22,150 --> 00:29:25,000
always the right direction yeah yeah

790
00:29:25,000 --> 00:29:26,740
agrees another great example I should

791
00:29:26,740 --> 00:29:28,420
have had to the presentation zoom it

792
00:29:28,420 --> 00:29:30,010
actually announced the 60-day features

793
00:29:30,010 --> 00:29:30,900
stand down

794
00:29:30,900 --> 00:29:34,000
right to shore up security right they

795
00:29:34,000 --> 00:29:35,470
brought announced a most who was to see

796
00:29:35,470 --> 00:29:37,810
a chief security officer Yahoo and many

797
00:29:37,810 --> 00:29:39,520
other things now Stanford you know to

798
00:29:39,520 --> 00:29:41,320
help them you know do security right I

799
00:29:41,320 --> 00:29:44,290
think that's a great example of another

800
00:29:44,290 --> 00:29:46,920
demonstration of the same principle play

801
00:29:46,920 --> 00:29:50,860
yeah I'm really happy to see a number of

802
00:29:50,860 --> 00:29:53,950
organizations that have deep prioritize

803
00:29:53,950 --> 00:29:56,020
the advancement of features and really

804
00:29:56,020 --> 00:29:59,740
focused on reliability because that's

805
00:29:59,740 --> 00:30:04,030
really in a crisis you know this dude

806
00:30:04,030 --> 00:30:06,940
you don't need to be having the hardest

807
00:30:06,940 --> 00:30:09,970
time we're worrying about so many other

808
00:30:09,970 --> 00:30:12,640
things in our society that come along

809
00:30:12,640 --> 00:30:16,690
with a pandemic so um just on a personal

810
00:30:16,690 --> 00:30:18,850
note how are you getting through

811
00:30:18,850 --> 00:30:20,800
everything is your family doing alright

812
00:30:20,800 --> 00:30:22,450
everything cool yeah hi in fact

813
00:30:22,450 --> 00:30:24,760
everyone's safe and you know in the

814
00:30:24,760 --> 00:30:26,470
grand scheme of things I have absolutely

815
00:30:26,470 --> 00:30:29,020
nothing to complain about so it's just

816
00:30:29,020 --> 00:30:32,410
uh yeah I it's amazing to see events

817
00:30:32,410 --> 00:30:35,140
like this that give us such a great

818
00:30:35,140 --> 00:30:37,000
break from everything that we've been

819
00:30:37,000 --> 00:30:40,240
having to you know deal with in our

820
00:30:40,240 --> 00:30:41,920
daily lives though it's great to be with

821
00:30:41,920 --> 00:30:45,370
you day hey thank you so much Jean I'm

822
00:30:45,370 --> 00:30:48,280
gonna say goodbye and I'm gonna kick off

823
00:30:48,280 --> 00:30:50,860
for our next talk but I want to give

824
00:30:50,860 --> 00:30:52,750
everybody a little bit of a reminder

825
00:30:52,750 --> 00:30:56,610
just a little bit of reminder

