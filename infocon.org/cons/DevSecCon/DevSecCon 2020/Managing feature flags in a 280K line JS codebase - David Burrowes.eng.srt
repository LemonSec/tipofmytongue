1
00:00:01,469 --> 00:00:04,650
thank you very much I hope my screen is

2
00:00:04,650 --> 00:00:09,059
sharing welcome welcome to the managing

3
00:00:09,059 --> 00:00:12,870
feature flags in a 280,000 line

4
00:00:12,870 --> 00:00:17,940
javascript code base I am pressed the

5
00:00:17,940 --> 00:00:27,779
wrong button try that again okay so my

6
00:00:27,779 --> 00:00:29,039
name is David burrows

7
00:00:29,039 --> 00:00:31,470
I'm currently a front-end software

8
00:00:31,470 --> 00:00:33,600
developer at split software we make him

9
00:00:33,600 --> 00:00:36,180
feature flag product previously I worked

10
00:00:36,180 --> 00:00:38,160
at balk software where I worked on a

11
00:00:38,160 --> 00:00:41,730
node Jas micro service framework in

12
00:00:41,730 --> 00:00:44,489
JavaScript and before that I worked at

13
00:00:44,489 --> 00:00:46,050
another company called del phix where I

14
00:00:46,050 --> 00:00:48,090
was a front-end developer including

15
00:00:48,090 --> 00:00:49,410
working and things like ActionScript

16
00:00:49,410 --> 00:00:55,230
remember that so if you have thought

17
00:00:55,230 --> 00:00:57,149
about using future flags or used feature

18
00:00:57,149 --> 00:00:59,910
flags you may have found that they can

19
00:00:59,910 --> 00:01:02,699
get difficult to integrating your

20
00:01:02,699 --> 00:01:06,299
codebase and manage in your code base we

21
00:01:06,299 --> 00:01:08,490
have found that if you think about your

22
00:01:08,490 --> 00:01:09,990
code architecture differently and think

23
00:01:09,990 --> 00:01:12,270
about a different way of managing these

24
00:01:12,270 --> 00:01:14,250
feature flags you can actually make the

25
00:01:14,250 --> 00:01:15,960
integration of future Flags in your

26
00:01:15,960 --> 00:01:20,189
codebase surprisingly pleasant to use so

27
00:01:20,189 --> 00:01:22,020
from my talk today I'm going to start

28
00:01:22,020 --> 00:01:24,290
off remind us all what a feature flag is

29
00:01:24,290 --> 00:01:27,240
why they're useful talk a little bit

30
00:01:27,240 --> 00:01:29,909
about how introducing them into your

31
00:01:29,909 --> 00:01:31,710
code base can be difficult and then talk

32
00:01:31,710 --> 00:01:33,540
about a solution we found that has made

33
00:01:33,540 --> 00:01:36,150
managing our own feature flags fairly

34
00:01:36,150 --> 00:01:38,970
easy after that there will be a period

35
00:01:38,970 --> 00:01:42,899
for questions and answers so let's start

36
00:01:42,899 --> 00:01:45,689
talking about a feature flag why do you

37
00:01:45,689 --> 00:01:47,100
want to use them you want to use them

38
00:01:47,100 --> 00:01:48,479
because you want to make some feature

39
00:01:48,479 --> 00:01:50,369
available and how might you go about

40
00:01:50,369 --> 00:01:53,549
making a feature available well one

41
00:01:53,549 --> 00:01:55,290
thing you might do is just decide hey

42
00:01:55,290 --> 00:01:58,439
making code changes is far too risky we

43
00:01:58,439 --> 00:02:00,060
don't want to do that just don't

44
00:02:00,060 --> 00:02:01,320
introduce any new features

45
00:02:01,320 --> 00:02:04,549
tell your p.m. and go on about your day

46
00:02:04,549 --> 00:02:07,590
another option would be just to go ahead

47
00:02:07,590 --> 00:02:08,848
and ink your codebase remove the old

48
00:02:08,848 --> 00:02:11,879
code add the new feature roll it out let

49
00:02:11,879 --> 00:02:13,299
everyone start using it because

50
00:02:13,299 --> 00:02:17,109
everyone enjoys a new feature another

51
00:02:17,109 --> 00:02:19,239
option might be to take your codebase

52
00:02:19,239 --> 00:02:21,730
make a copy of it put your new feature

53
00:02:21,730 --> 00:02:23,829
into that and then deploy that to

54
00:02:23,829 --> 00:02:27,719
another URL and have people use that

55
00:02:27,719 --> 00:02:30,549
another variation might be to have both

56
00:02:30,549 --> 00:02:32,439
versions of your code in one code base

57
00:02:32,439 --> 00:02:34,510
and then use something like a random

58
00:02:34,510 --> 00:02:36,489
number generator decide who gets to see

59
00:02:36,489 --> 00:02:38,859
which version which of these these foes

60
00:02:38,859 --> 00:02:42,430
is the best pattern to use for releasing

61
00:02:42,430 --> 00:02:45,340
a new feature well from the modern

62
00:02:45,340 --> 00:02:47,349
standpoint of using feature flags

63
00:02:47,349 --> 00:02:49,840
none of these are a good answer the

64
00:02:49,840 --> 00:02:53,470
first one is almost obviously a terrible

65
00:02:53,470 --> 00:02:55,090
way to go you're going to get new new

66
00:02:55,090 --> 00:02:57,099
features your company's going to go out

67
00:02:57,099 --> 00:02:57,549
of business

68
00:02:57,549 --> 00:03:01,090
you're gonna have a very boring life the

69
00:03:01,090 --> 00:03:03,280
next option to just make your code

70
00:03:03,280 --> 00:03:06,250
change and release it people do do that

71
00:03:06,250 --> 00:03:08,859
but it can be a bit of a disaster we've

72
00:03:08,859 --> 00:03:10,540
seen some cases where that's happened

73
00:03:10,540 --> 00:03:12,219
lately where people just roll out a new

74
00:03:12,219 --> 00:03:14,500
feature hey everyone use it and it

75
00:03:14,500 --> 00:03:15,730
hasn't gone as well as they'd really

76
00:03:15,730 --> 00:03:18,310
hoped another problem with this approach

77
00:03:18,310 --> 00:03:20,889
is that if you've got a bug in the code

78
00:03:20,889 --> 00:03:22,449
you've rolled out suddenly all your

79
00:03:22,449 --> 00:03:24,389
customers are using the buggy code and

80
00:03:24,389 --> 00:03:26,859
you have to go through some sort of fire

81
00:03:26,859 --> 00:03:28,810
internally to go fix the code and get a

82
00:03:28,810 --> 00:03:31,750
change rolled out and tested not a very

83
00:03:31,750 --> 00:03:34,599
pleasant situation a much more insidious

84
00:03:34,599 --> 00:03:36,669
problem is you will out a new feature

85
00:03:36,669 --> 00:03:39,220
suppose it has an impact on your sales

86
00:03:39,220 --> 00:03:41,109
how are you even going to know that your

87
00:03:41,109 --> 00:03:42,849
new feature caused an impact in sales

88
00:03:42,849 --> 00:03:45,340
maybe your feature rolled out of the

89
00:03:45,340 --> 00:03:47,139
exact same time a pandemic started

90
00:03:47,139 --> 00:03:48,669
happening and you have no way of judging

91
00:03:48,669 --> 00:03:50,560
is the reduction in sales because

92
00:03:50,560 --> 00:03:52,449
there's a pandemic or is it because of

93
00:03:52,449 --> 00:03:55,359
my feature so that doesn't work really

94
00:03:55,359 --> 00:03:58,299
well either you can take your code as I

95
00:03:58,299 --> 00:04:00,970
said make a copy put it somewhere else

96
00:04:00,970 --> 00:04:03,009
make it run another copy in parallel I

97
00:04:03,009 --> 00:04:06,069
have people use that the downside to

98
00:04:06,069 --> 00:04:08,829
that is that it's cumbersome to do

99
00:04:08,829 --> 00:04:10,590
you've got another codebase to manage

100
00:04:10,590 --> 00:04:13,150
and when people go visit that website

101
00:04:13,150 --> 00:04:15,129
are you actually going to get real use

102
00:04:15,129 --> 00:04:17,978
cases there it's really hard going to be

103
00:04:17,978 --> 00:04:19,810
hard to tell if you're getting actual

104
00:04:19,810 --> 00:04:22,570
normal uses there to judge whether your

105
00:04:22,570 --> 00:04:24,390
feature is good or not

106
00:04:24,390 --> 00:04:26,440
finally we have this idea of putting

107
00:04:26,440 --> 00:04:28,540
both versions of your code and using a

108
00:04:28,540 --> 00:04:30,280
random number generator decide who gets

109
00:04:30,280 --> 00:04:33,220
to see that the problem with this is you

110
00:04:33,220 --> 00:04:35,380
really have no control over who is going

111
00:04:35,380 --> 00:04:38,260
to get to see this feature you might for

112
00:04:38,260 --> 00:04:40,570
example have a large customer paying you

113
00:04:40,570 --> 00:04:43,750
lots of money and they've built training

114
00:04:43,750 --> 00:04:45,910
materials and run books around your

115
00:04:45,910 --> 00:04:47,740
product and now some of their employees

116
00:04:47,740 --> 00:04:50,500
are seeing a random feature they're not

117
00:04:50,500 --> 00:04:52,420
going to be happy with it the company's

118
00:04:52,420 --> 00:04:54,280
not gonna be happy with you it's not a

119
00:04:54,280 --> 00:04:57,010
good pass in addition you have no way to

120
00:04:57,010 --> 00:05:01,210
measure which of these versions is doing

121
00:05:01,210 --> 00:05:02,710
what because a random number journeyer

122
00:05:02,710 --> 00:05:05,440
it's happening on the client you can't

123
00:05:05,440 --> 00:05:07,210
sit back and see which users are seeing

124
00:05:07,210 --> 00:05:08,710
which version of your feature and you're

125
00:05:08,710 --> 00:05:10,150
kind of blind to whether this is

126
00:05:10,150 --> 00:05:14,530
actually a good feature or not so if you

127
00:05:14,530 --> 00:05:16,840
want to make use of feature flags in a

128
00:05:16,840 --> 00:05:18,460
modern context you want all of these

129
00:05:18,460 --> 00:05:19,960
things you want to be able to deploy

130
00:05:19,960 --> 00:05:22,060
your multiple features in a single

131
00:05:22,060 --> 00:05:25,900
codebase you want to be able to do the

132
00:05:25,900 --> 00:05:28,300
release of the feature that is separate

133
00:05:28,300 --> 00:05:29,980
the deployment of the code from the

134
00:05:29,980 --> 00:05:31,480
release of the feature to your customers

135
00:05:31,480 --> 00:05:33,970
and you want the releasing process to

136
00:05:33,970 --> 00:05:36,700
happen separately so for example you you

137
00:05:36,700 --> 00:05:38,320
deploy your code and then later on the

138
00:05:38,320 --> 00:05:40,600
PM will go and as I went to release a

139
00:05:40,600 --> 00:05:43,030
feature or not you also want to control

140
00:05:43,030 --> 00:05:45,130
exactly who can see the feature so you

141
00:05:45,130 --> 00:05:46,990
might want your beta users to see the

142
00:05:46,990 --> 00:05:49,000
new feature or you might want your

143
00:05:49,000 --> 00:05:50,860
cutting edge customers to see the new

144
00:05:50,860 --> 00:05:52,630
feature you might want the customer that

145
00:05:52,630 --> 00:05:55,000
passed for this to see the new feature

146
00:05:55,000 --> 00:05:57,010
or you might just want to release it to

147
00:05:57,010 --> 00:05:58,570
like a small percentage of your

148
00:05:58,570 --> 00:06:01,360
customers in all of these cases you want

149
00:06:01,360 --> 00:06:03,460
to be able to measure exactly who is

150
00:06:03,460 --> 00:06:05,320
seeing which feature and what results

151
00:06:05,320 --> 00:06:07,150
are you want to be to correlate if

152
00:06:07,150 --> 00:06:08,770
there's an engineering problem like

153
00:06:08,770 --> 00:06:10,720
you've got you know exceptions happen

154
00:06:10,720 --> 00:06:12,040
your code you want to be to correlate

155
00:06:12,040 --> 00:06:13,660
that with the feature and the users that

156
00:06:13,660 --> 00:06:16,090
are seeing that you also want to be able

157
00:06:16,090 --> 00:06:18,040
to be able to correlate your business

158
00:06:18,040 --> 00:06:20,380
metrics with your feature so you've

159
00:06:20,380 --> 00:06:21,850
released a new feature you want to be to

160
00:06:21,850 --> 00:06:24,490
notice that there's a 10% decrease in

161
00:06:24,490 --> 00:06:26,590
your sales because of this feature or

162
00:06:26,590 --> 00:06:29,170
10% increase because of this feature so

163
00:06:29,170 --> 00:06:30,520
these are all the things you want out of

164
00:06:30,520 --> 00:06:33,540
a feature flagging system these days

165
00:06:33,540 --> 00:06:36,840
so in summary here your feature flag in

166
00:06:36,840 --> 00:06:38,340
your code it's probably going to look

167
00:06:38,340 --> 00:06:40,320
something like this you're going to ask

168
00:06:40,320 --> 00:06:44,400
some SDK hey given my feature flag and

169
00:06:44,400 --> 00:06:46,770
the current user get me the value of the

170
00:06:46,770 --> 00:06:49,020
flag and if it's on show them one

171
00:06:49,020 --> 00:06:51,000
feature and if it's off show them the

172
00:06:51,000 --> 00:06:54,870
other and then you want to use some kind

173
00:06:54,870 --> 00:06:57,900
of a dashboard elsewhere to manage who

174
00:06:57,900 --> 00:07:01,860
can it cannot see that feature so that's

175
00:07:01,860 --> 00:07:04,260
an introduction to feature flags now I'd

176
00:07:04,260 --> 00:07:05,520
like to talk a little bit about how we

177
00:07:05,520 --> 00:07:08,250
use them ourselves so as I mentioned at

178
00:07:08,250 --> 00:07:11,010
the introduction we have a 280,000 line

179
00:07:11,010 --> 00:07:13,560
JavaScript code base there's something

180
00:07:13,560 --> 00:07:15,510
like 4000 components in there we've got

181
00:07:15,510 --> 00:07:17,730
hundreds of actions hundreds of reducers

182
00:07:17,730 --> 00:07:20,220
the code base is five years old and

183
00:07:20,220 --> 00:07:21,990
we've got one grade team though building

184
00:07:21,990 --> 00:07:26,220
it within our code base we have

185
00:07:26,220 --> 00:07:29,700
something like 35 feature flags on this

186
00:07:29,700 --> 00:07:31,830
number varies from time to time there

187
00:07:31,830 --> 00:07:33,750
are new features constantly being added

188
00:07:33,750 --> 00:07:36,000
and new features being removed so the

189
00:07:36,000 --> 00:07:39,630
number is constantly fluctuating many of

190
00:07:39,630 --> 00:07:41,400
these features are orthogonal that is to

191
00:07:41,400 --> 00:07:43,320
say we've got a feature over here in the

192
00:07:43,320 --> 00:07:45,510
application which has its feature flag

193
00:07:45,510 --> 00:07:47,070
and we've got another feature over here

194
00:07:47,070 --> 00:07:49,050
with its own feature flag and they don't

195
00:07:49,050 --> 00:07:51,270
have a whole lot of overlap but we also

196
00:07:51,270 --> 00:07:52,710
certainly have places where you have

197
00:07:52,710 --> 00:07:54,600
multiple features flags in the same

198
00:07:54,600 --> 00:07:56,130
place where we end up with three or more

199
00:07:56,130 --> 00:07:58,800
variations of the UI at any given point

200
00:07:58,800 --> 00:08:01,970
in different stages of development so

201
00:08:01,970 --> 00:08:05,130
here's an example we had on the left

202
00:08:05,130 --> 00:08:08,400
here we had a bit of UI before which

203
00:08:08,400 --> 00:08:10,140
allowed people to pick which columns in

204
00:08:10,140 --> 00:08:12,960
a table to show would this exists in

205
00:08:12,960 --> 00:08:15,630
several places in our UI and and after

206
00:08:15,630 --> 00:08:16,590
it was in there for a while the

207
00:08:16,590 --> 00:08:17,970
designers looked at it and said you know

208
00:08:17,970 --> 00:08:21,090
I'm not sure we need to supply button or

209
00:08:21,090 --> 00:08:22,500
this cancel button anymore let's just

210
00:08:22,500 --> 00:08:23,910
get rid of that and let's simplify the

211
00:08:23,910 --> 00:08:26,250
design some so they designed the new

212
00:08:26,250 --> 00:08:28,490
version well we didn't want to just

213
00:08:28,490 --> 00:08:30,690
change it and throw it out for all our

214
00:08:30,690 --> 00:08:32,429
customers we do so as always we want to

215
00:08:32,429 --> 00:08:34,169
control how this is being roll out and

216
00:08:34,169 --> 00:08:35,909
pick who is going to get to see the new

217
00:08:35,909 --> 00:08:37,559
version initially so we can get early

218
00:08:37,559 --> 00:08:41,340
feedback so when we put this component

219
00:08:41,340 --> 00:08:43,380
in put it behind a feature flag and now

220
00:08:43,380 --> 00:08:45,690
when you flip the feature flag to the

221
00:08:45,690 --> 00:08:46,960
new version you see that

222
00:08:46,960 --> 00:08:49,980
with the old one you see the the other

223
00:08:49,980 --> 00:08:52,480
here's another example we've introduced

224
00:08:52,480 --> 00:08:54,010
a whole new feature which allowed you to

225
00:08:54,010 --> 00:08:56,050
approve a change so you see on the left

226
00:08:56,050 --> 00:08:58,810
there was the old UI for making a change

227
00:08:58,810 --> 00:09:01,810
and on the right is a new UI which has

228
00:09:01,810 --> 00:09:03,340
an improvement section at the bottom to

229
00:09:03,340 --> 00:09:05,380
give more detail about who can cannot

230
00:09:05,380 --> 00:09:08,710
approve this change another example here

231
00:09:08,710 --> 00:09:11,500
is we have this previous UI with four

232
00:09:11,500 --> 00:09:14,080
tabs we introduced an entirely new tab

233
00:09:14,080 --> 00:09:15,490
with new features that are on the right

234
00:09:15,490 --> 00:09:18,180
again all this behind a feature flag

235
00:09:18,180 --> 00:09:20,950
what's maybe interesting here is that

236
00:09:20,950 --> 00:09:23,050
when I gathered these snapshots for

237
00:09:23,050 --> 00:09:25,420
these slides I didn't go find some old

238
00:09:25,420 --> 00:09:27,550
version of the application to run it on

239
00:09:27,550 --> 00:09:29,530
I just turned the feature flag on and

240
00:09:29,530 --> 00:09:31,480
off and took a snapshot on each side so

241
00:09:31,480 --> 00:09:33,310
both of these features exists

242
00:09:33,310 --> 00:09:36,040
simultaneously in the code base quite

243
00:09:36,040 --> 00:09:40,390
happily so let's move on to talk about

244
00:09:40,390 --> 00:09:44,560
implementation now so as I said earlier

245
00:09:44,560 --> 00:09:46,360
your inclination would be to start

246
00:09:46,360 --> 00:09:48,970
building a feature like this you have

247
00:09:48,970 --> 00:09:52,710
some SDK you say get me the value of

248
00:09:52,710 --> 00:09:55,300
this feature flag for this user and show

249
00:09:55,300 --> 00:09:57,040
the new feature of the old feature based

250
00:09:57,040 --> 00:10:01,090
on the setting now if you have done this

251
00:10:01,090 --> 00:10:02,500
in your code you're gonna find this

252
00:10:02,500 --> 00:10:04,240
starts to get really sort of hard to

253
00:10:04,240 --> 00:10:06,250
read you end up with these conditionals

254
00:10:06,250 --> 00:10:08,110
all over the place which bloat your code

255
00:10:08,110 --> 00:10:09,910
so you end up with multiple versions of

256
00:10:09,910 --> 00:10:12,100
the same code in the same file if this

257
00:10:12,100 --> 00:10:14,520
of that and when your if you're

258
00:10:14,520 --> 00:10:16,870
maintaining the code modifying anything

259
00:10:16,870 --> 00:10:18,670
you have to think about these two very

260
00:10:18,670 --> 00:10:20,310
very distinct paths through the code

261
00:10:20,310 --> 00:10:23,230
simultaneously which can be kind of a

262
00:10:23,230 --> 00:10:26,500
head twister removing these things can

263
00:10:26,500 --> 00:10:28,930
also be hard to do it's tedious and it

264
00:10:28,930 --> 00:10:30,040
doesn't give you a lot of confidence

265
00:10:30,040 --> 00:10:31,720
that you're doing the right thing he

266
00:10:31,720 --> 00:10:33,340
despite its seeming like a fairly

267
00:10:33,340 --> 00:10:38,350
mundane activity now when we we were

268
00:10:38,350 --> 00:10:40,000
doing this and we were running a busiest

269
00:10:40,000 --> 00:10:42,130
problem saying we're not super happy

270
00:10:42,130 --> 00:10:44,170
with our managing these features is

271
00:10:44,170 --> 00:10:46,060
getting to be sort of a drag in the

272
00:10:46,060 --> 00:10:47,290
codebase especially when you've got

273
00:10:47,290 --> 00:10:49,430
features coming in all the time

274
00:10:49,430 --> 00:10:51,230
and features being removes all the time

275
00:10:51,230 --> 00:10:53,450
so we've tried to figure out how to make

276
00:10:53,450 --> 00:10:55,160
this better we did some things were

277
00:10:55,160 --> 00:10:57,589
moving that SDK call and puddings out

278
00:10:57,589 --> 00:10:59,480
into her ducts and pulling that into

279
00:10:59,480 --> 00:11:01,460
connected components and that improved

280
00:11:01,460 --> 00:11:04,070
it some but the fundamental discomfort

281
00:11:04,070 --> 00:11:08,180
was still there so over time we evolved

282
00:11:08,180 --> 00:11:09,740
to a new solution which were actually

283
00:11:09,740 --> 00:11:12,170
very happy with at this point there are

284
00:11:12,170 --> 00:11:14,000
three parts to this solution I'm going

285
00:11:14,000 --> 00:11:15,529
to go into these in a little more detail

286
00:11:15,529 --> 00:11:17,480
the first is to talk about the

287
00:11:17,480 --> 00:11:21,050
architectural units of the code the

288
00:11:21,050 --> 00:11:23,660
second is to talk about toddlers and the

289
00:11:23,660 --> 00:11:25,790
third is to talk about a files of some

290
00:11:25,790 --> 00:11:28,100
structure put together these give a very

291
00:11:28,100 --> 00:11:29,899
elegant solution to managing your

292
00:11:29,899 --> 00:11:32,990
feature flags so let's first talk about

293
00:11:32,990 --> 00:11:36,529
the architectural units your code always

294
00:11:36,529 --> 00:11:37,790
is going to have some kind of

295
00:11:37,790 --> 00:11:40,010
architectural units in a react code base

296
00:11:40,010 --> 00:11:42,170
you're gonna have components when you

297
00:11:42,170 --> 00:11:44,060
have our ducks in there as we do you're

298
00:11:44,060 --> 00:11:46,430
gonna have actions and reducers but your

299
00:11:46,430 --> 00:11:47,839
whatever framework you're using you're

300
00:11:47,839 --> 00:11:49,450
still going to end up with some kind of

301
00:11:49,450 --> 00:11:51,649
natural component out of that

302
00:11:51,649 --> 00:11:54,050
architectural design so we begin to

303
00:11:54,050 --> 00:11:55,520
realize rather than thinking about

304
00:11:55,520 --> 00:11:58,070
feature Flags being introduced on a sort

305
00:11:58,070 --> 00:12:00,650
of per line basis in a file we instead

306
00:12:00,650 --> 00:12:02,300
start of thinking about future Flags as

307
00:12:02,300 --> 00:12:05,060
wrapping up around individual components

308
00:12:05,060 --> 00:12:07,310
and that begins to cool some of this

309
00:12:07,310 --> 00:12:08,720
sort of conditional stuff out of

310
00:12:08,720 --> 00:12:11,180
individual are out of arbitrary places

311
00:12:11,180 --> 00:12:12,920
in code and puts it into more natural

312
00:12:12,920 --> 00:12:15,740
more easy to think about position in the

313
00:12:15,740 --> 00:12:19,430
code base the second part of this was we

314
00:12:19,430 --> 00:12:20,540
introduced the notion of something

315
00:12:20,540 --> 00:12:22,339
called a toggle or so what I have on the

316
00:12:22,339 --> 00:12:23,839
screen right now this is a very generic

317
00:12:23,839 --> 00:12:26,839
talk or if toggle something it takes a

318
00:12:26,839 --> 00:12:28,880
flag and new thing in an old thing

319
00:12:28,880 --> 00:12:30,680
saying and when you call this it returns

320
00:12:30,680 --> 00:12:33,200
a new thing which will call either the

321
00:12:33,200 --> 00:12:35,390
new of the old depending on what you set

322
00:12:35,390 --> 00:12:37,190
up so let's talk about one of these

323
00:12:37,190 --> 00:12:42,740
concretely this is an example of using a

324
00:12:42,740 --> 00:12:45,829
toggle or for a component so on this

325
00:12:45,829 --> 00:12:48,320
code here you can see at the top of the

326
00:12:48,320 --> 00:12:49,940
screen I'm bringing in the toggler

327
00:12:49,940 --> 00:12:51,680
engine I'll talk about this in moments

328
00:12:51,680 --> 00:12:53,450
we bring in the name of our featured

329
00:12:53,450 --> 00:12:56,060
flag we bring in the old version the

330
00:12:56,060 --> 00:12:58,550
legacy version of the component the new

331
00:12:58,550 --> 00:13:01,400
version and then I pass this all to the

332
00:13:01,400 --> 00:13:02,850
component toggler

333
00:13:02,850 --> 00:13:05,040
I get back a new component this being

334
00:13:05,040 --> 00:13:08,040
react my new component is itself another

335
00:13:08,040 --> 00:13:10,500
function which acts like a component as

336
00:13:10,500 --> 00:13:12,449
far as reactive concerned but when I go

337
00:13:12,449 --> 00:13:15,029
and call it it's simply going to look at

338
00:13:15,029 --> 00:13:16,829
the feature flag and to decide which sub

339
00:13:16,829 --> 00:13:20,220
component to to render now let's talk

340
00:13:20,220 --> 00:13:23,790
about the toggler code itself so this is

341
00:13:23,790 --> 00:13:25,800
the engine behind this code is slightly

342
00:13:25,800 --> 00:13:28,079
simplified but it is basically the

343
00:13:28,079 --> 00:13:30,269
essence of the problem so we have this

344
00:13:30,269 --> 00:13:32,250
function we talked about earlier the

345
00:13:32,250 --> 00:13:34,079
component toggler I handed the flag and

346
00:13:34,079 --> 00:13:36,930
the two versions of the component within

347
00:13:36,930 --> 00:13:40,190
it I set up a very normal Redux

348
00:13:40,190 --> 00:13:42,360
connected component I set up my map

349
00:13:42,360 --> 00:13:44,519
state the props function it pulls

350
00:13:44,519 --> 00:13:46,470
features there are set of feature flags

351
00:13:46,470 --> 00:13:48,959
out of the redox state sets of a

352
00:13:48,959 --> 00:13:50,910
property called it is feature on which

353
00:13:50,910 --> 00:13:52,709
will be set to on or off based on the

354
00:13:52,709 --> 00:13:56,209
value of the feature I then call connect

355
00:13:56,209 --> 00:13:59,490
passive state props as you normally

356
00:13:59,490 --> 00:14:01,740
would and I call this other function

357
00:14:01,740 --> 00:14:04,110
which returns a component this function

358
00:14:04,110 --> 00:14:06,329
is up here this component is a

359
00:14:06,329 --> 00:14:09,029
functional component it takes to come to

360
00:14:09,029 --> 00:14:12,630
other components it sorry I should say

361
00:14:12,630 --> 00:14:15,120
it creates a new component it creates a

362
00:14:15,120 --> 00:14:16,709
functional component here which takes it

363
00:14:16,709 --> 00:14:18,779
property is feature on and some other

364
00:14:18,779 --> 00:14:20,550
properties and based on that feature

365
00:14:20,550 --> 00:14:23,490
flag it returns either one component or

366
00:14:23,490 --> 00:14:25,800
the other so this is fairly

367
00:14:25,800 --> 00:14:27,930
straightforward I think to follow and

368
00:14:27,930 --> 00:14:30,540
you can see I think it's pretty easy to

369
00:14:30,540 --> 00:14:32,790
see that action of reducers can follow

370
00:14:32,790 --> 00:14:36,449
the same basic pattern so for example

371
00:14:36,449 --> 00:14:38,880
I'm sorry so for the third part of this

372
00:14:38,880 --> 00:14:40,920
we have a file system structure in this

373
00:14:40,920 --> 00:14:43,620
case we've got a component inside of

374
00:14:43,620 --> 00:14:46,319
this directory I've got a new component

375
00:14:46,319 --> 00:14:48,930
the toggler we just looked at and the

376
00:14:48,930 --> 00:14:52,680
old component me so the benefits of all

377
00:14:52,680 --> 00:14:54,959
this the benefits here are that the code

378
00:14:54,959 --> 00:14:56,579
that is calling your component your

379
00:14:56,579 --> 00:14:58,709
component which is being toggled that

380
00:14:58,709 --> 00:15:00,089
doesn't need to know anything about the

381
00:15:00,089 --> 00:15:02,220
feature flag it just imports your new

382
00:15:02,220 --> 00:15:04,630
component and uses it

383
00:15:04,630 --> 00:15:07,120
nice and of course is a toggle which is

384
00:15:07,120 --> 00:15:10,060
toggling another code but then each of

385
00:15:10,060 --> 00:15:11,740
the individual components the new one

386
00:15:11,740 --> 00:15:14,140
the old one they also don't know that

387
00:15:14,140 --> 00:15:16,570
the flag is there so my new component

388
00:15:16,570 --> 00:15:18,580
the trivial component my do new

389
00:15:18,580 --> 00:15:20,320
component doesn't know about the feature

390
00:15:20,320 --> 00:15:23,620
flag the toggler and the index file yet

391
00:15:23,620 --> 00:15:25,300
yet that's where the feature flag lives

392
00:15:25,300 --> 00:15:28,030
and when I look at the old component it

393
00:15:28,030 --> 00:15:29,170
doesn't know anything about the feature

394
00:15:29,170 --> 00:15:33,460
flying either a third benefit here is

395
00:15:33,460 --> 00:15:35,830
that now removing a feature flag and

396
00:15:35,830 --> 00:15:38,020
conversely adding a feature flag is

397
00:15:38,020 --> 00:15:40,600
trivial so let's look at this directory

398
00:15:40,600 --> 00:15:42,280
structure again so if I just said that I

399
00:15:42,280 --> 00:15:43,990
don't want this feature flag anymore I'm

400
00:15:43,990 --> 00:15:45,820
now rolled this feature out everyone's

401
00:15:45,820 --> 00:15:48,550
happy with it or conversely they hate it

402
00:15:48,550 --> 00:15:50,340
I want to use the legacy of version only

403
00:15:50,340 --> 00:15:53,980
what I do is I move the component out

404
00:15:53,980 --> 00:15:57,760
the one I want to keep out I rename it

405
00:15:57,760 --> 00:16:01,030
to their new name and then delete the

406
00:16:01,030 --> 00:16:04,420
directory at this point again because

407
00:16:04,420 --> 00:16:06,430
the callin component and the calling

408
00:16:06,430 --> 00:16:08,350
components don't know about the feature

409
00:16:08,350 --> 00:16:10,210
fly against error I have now removed my

410
00:16:10,210 --> 00:16:12,730
feature flag in a completely automated

411
00:16:12,730 --> 00:16:14,200
way I can write a script to do this

412
00:16:14,200 --> 00:16:16,480
there are no code changes involved in

413
00:16:16,480 --> 00:16:22,180
the process so to summarize here its

414
00:16:22,180 --> 00:16:26,040
three-part observation about our code of

415
00:16:26,040 --> 00:16:30,010
wrapping your flags around architectural

416
00:16:30,010 --> 00:16:31,810
units rather than arbitrary lines of

417
00:16:31,810 --> 00:16:35,740
code of using centralizing all the

418
00:16:35,740 --> 00:16:39,100
feature flying into a toggler and then

419
00:16:39,100 --> 00:16:41,020
using a directory structure to manage

420
00:16:41,020 --> 00:16:43,810
this the feature flagging gives us an

421
00:16:43,810 --> 00:16:46,090
organization where the code is easy to

422
00:16:46,090 --> 00:16:48,550
read and understand and modify because

423
00:16:48,550 --> 00:16:49,780
you're not having to do all this

424
00:16:49,780 --> 00:16:51,370
thinking about the feature flag nests

425
00:16:51,370 --> 00:16:53,770
within the code it makes it very easy to

426
00:16:53,770 --> 00:16:55,510
test you can write your unit test for

427
00:16:55,510 --> 00:16:57,250
all your components and they are

428
00:16:57,250 --> 00:16:59,320
completely ignorant about the feature

429
00:16:59,320 --> 00:17:01,930
flag and adding and removing feature

430
00:17:01,930 --> 00:17:03,430
flags is just a file system

431
00:17:03,430 --> 00:17:06,099
transformation which again makes

432
00:17:06,099 --> 00:17:08,589
managing of these really easy

433
00:17:08,589 --> 00:17:12,230
this problem we've ended up with it has

434
00:17:12,230 --> 00:17:14,119
been a team effort and I just want to

435
00:17:14,119 --> 00:17:15,560
call up the rest of the team that has

436
00:17:15,560 --> 00:17:17,960
worked on this i'm marcio manu JC

437
00:17:17,960 --> 00:17:21,920
Leandro and jake and that is all I have

438
00:17:21,920 --> 00:17:33,830
to say thank you it's David that was

439
00:17:33,830 --> 00:17:36,950
very informative appreciate it

440
00:17:36,950 --> 00:17:40,490
what are some of the challenges that you

441
00:17:40,490 --> 00:17:45,020
have phased in implementing the

442
00:17:45,020 --> 00:17:47,260
solutions that you have explained

443
00:17:47,260 --> 00:17:49,490
compared to other things you discussed

444
00:17:49,490 --> 00:17:52,100
before some things that kind of you know

445
00:17:52,100 --> 00:17:54,740
kept you awake in the night well you're

446
00:17:54,740 --> 00:17:56,090
you're saying what sort of problems

447
00:17:56,090 --> 00:17:57,680
might we have run in with this this new

448
00:17:57,680 --> 00:17:59,900
solution versus ones in the past yeah

449
00:17:59,900 --> 00:18:02,240
well the biggest the biggest thing here

450
00:18:02,240 --> 00:18:04,730
if you have this instinct to want to to

451
00:18:04,730 --> 00:18:06,710
go and wrap the feature around the

452
00:18:06,710 --> 00:18:08,420
smallest unit of code your instincts

453
00:18:08,420 --> 00:18:10,670
research is saying I'm going to end up

454
00:18:10,670 --> 00:18:12,320
with duplicate code between the new and

455
00:18:12,320 --> 00:18:14,540
the old version and so it's better for

456
00:18:14,540 --> 00:18:16,220
me to go and optimize this and put this

457
00:18:16,220 --> 00:18:18,890
at the individual sort of line level and

458
00:18:18,890 --> 00:18:20,420
the that that's definitely

459
00:18:20,420 --> 00:18:23,150
understandable but it actually then it

460
00:18:23,150 --> 00:18:25,640
tends to be a false optimization it

461
00:18:25,640 --> 00:18:27,560
drags your productivity down by trying

462
00:18:27,560 --> 00:18:29,300
to optimize every line of code in

463
00:18:29,300 --> 00:18:31,880
practice in many cases when you're

464
00:18:31,880 --> 00:18:34,340
adding a new feature the new version and

465
00:18:34,340 --> 00:18:36,290
the old version are sitting side by side

466
00:18:36,290 --> 00:18:37,760
and you're really not changing the old

467
00:18:37,760 --> 00:18:39,740
version very much so the inclination to

468
00:18:39,740 --> 00:18:42,110
optimize and and share code between your

469
00:18:42,110 --> 00:18:45,170
new and your old is a false benefit but

470
00:18:45,170 --> 00:18:46,310
that's something you need it sort of

471
00:18:46,310 --> 00:18:50,150
constantly work against very good thank

472
00:18:50,150 --> 00:18:52,340
you for that I have a question here of

473
00:18:52,340 --> 00:18:55,460
how would this work with back-end

474
00:18:55,460 --> 00:19:01,000
changes or without redux

475
00:19:01,100 --> 00:19:03,710
so without Redux then you just want to

476
00:19:03,710 --> 00:19:05,960
do that with actions and the reducers

477
00:19:05,960 --> 00:19:07,460
you would need to do whatever other

478
00:19:07,460 --> 00:19:09,830
pattern you're using for managing your

479
00:19:09,830 --> 00:19:12,170
state you'd want to wrap that in the

480
00:19:12,170 --> 00:19:14,080
same way if you are for example

481
00:19:14,080 --> 00:19:17,780
injecting functions into your react code

482
00:19:17,780 --> 00:19:19,520
for example to call something a graph QL

483
00:19:19,520 --> 00:19:21,950
you probably want identify those makes

484
00:19:21,950 --> 00:19:23,750
a pattern and then wrap the flag around

485
00:19:23,750 --> 00:19:25,370
that in much and kind of similar to what

486
00:19:25,370 --> 00:19:27,950
we're doing with actions here for back

487
00:19:27,950 --> 00:19:30,769
end I do kind of the same same basic

488
00:19:30,769 --> 00:19:32,360
saying I'd step back and say what I'm a

489
00:19:32,360 --> 00:19:35,059
major units it may be a class or maybe

490
00:19:35,059 --> 00:19:37,389
you've got some unit that you're using

491
00:19:37,389 --> 00:19:39,950
bigger than a class and I'd be wrapping

492
00:19:39,950 --> 00:19:41,690
the features around that again rather

493
00:19:41,690 --> 00:19:47,480
than the individual lines I don't think

494
00:19:47,480 --> 00:19:51,559
we have any more questions so thank you

495
00:19:51,559 --> 00:19:53,059
so much for your time it's been a

496
00:19:53,059 --> 00:19:55,100
pleasure listening to you okay we

497
00:19:55,100 --> 00:19:56,990
actually hang on a second yes we just

498
00:19:56,990 --> 00:19:59,510
got one minute

499
00:19:59,510 --> 00:20:02,380
excellent this is from Thomas what

500
00:20:02,380 --> 00:20:07,340
exactly controls the toggle so in the

501
00:20:07,340 --> 00:20:09,320
examples I was giving the what's exactly

502
00:20:09,320 --> 00:20:11,389
controlling the toggle let me see if I

503
00:20:11,389 --> 00:20:14,289
can go back to that is our reduc store

504
00:20:14,289 --> 00:20:17,360
obviously that's specific to react redux

505
00:20:17,360 --> 00:20:20,029
so you would want to do your own you

506
00:20:20,029 --> 00:20:21,830
know you want to find your own pattern

507
00:20:21,830 --> 00:20:23,269
there but if I can get back here fast

508
00:20:23,269 --> 00:20:24,139
enough

509
00:20:24,139 --> 00:20:27,260
if we come back to the talk then code so

510
00:20:27,260 --> 00:20:29,059
there we go yeah so if you come back

511
00:20:29,059 --> 00:20:31,370
here in in our map state de Pras in a

512
00:20:31,370 --> 00:20:31,940
redux

513
00:20:31,940 --> 00:20:34,549
I'm pulling the feature flags out of the

514
00:20:34,549 --> 00:20:36,260
reduc store and we've actually set stuff

515
00:20:36,260 --> 00:20:40,340
up so the SDK is gets the new flags it

516
00:20:40,340 --> 00:20:42,529
pumps them into redux or outside on a

517
00:20:42,529 --> 00:20:45,350
react redox system and then if there's

518
00:20:45,350 --> 00:20:47,419
updates and flags if it then goes and

519
00:20:47,419 --> 00:20:49,250
pushes us into redux so all the

520
00:20:49,250 --> 00:20:50,690
components are just pulling this out of

521
00:20:50,690 --> 00:20:53,690
redux into a nice little map state two

522
00:20:53,690 --> 00:20:55,639
props here again if you're not using

523
00:20:55,639 --> 00:20:57,019
we're ducks you won't have that but

524
00:20:57,019 --> 00:20:58,279
you're going to have someplace where

525
00:20:58,279 --> 00:20:59,419
you're going to be keeping these flags

526
00:20:59,419 --> 00:21:01,490
centrally and the key is just to get

527
00:21:01,490 --> 00:21:03,289
those back into wherever your toddler is

528
00:21:03,289 --> 00:21:08,360
I hope that answered the question let's

529
00:21:08,360 --> 00:21:10,279
see if Thomas has anything to say our

530
00:21:10,279 --> 00:21:13,570
follow up okay

531
00:21:17,480 --> 00:21:21,180
look he says thanks great thank you

532
00:21:21,180 --> 00:21:23,490
thank you very much I'm sorry you were

533
00:21:23,490 --> 00:21:24,930
saying something I was just saying thank

534
00:21:24,930 --> 00:21:26,820
you to Thomas for the question very good

535
00:21:26,820 --> 00:21:29,070
well thank you so much David

536
00:21:29,070 --> 00:21:31,470
appreciate it well thank you baby here

537
00:21:31,470 --> 00:21:33,420
very good luck with the rest of the

538
00:21:33,420 --> 00:21:34,190
conference

539
00:21:34,190 --> 00:21:37,320
we have about five more minutes so we'll

540
00:21:37,320 --> 00:21:39,510
be back with a next speaker in about

541
00:21:39,510 --> 00:21:41,840
five minutes

