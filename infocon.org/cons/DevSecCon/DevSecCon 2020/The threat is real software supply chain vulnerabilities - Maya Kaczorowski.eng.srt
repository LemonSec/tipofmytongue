1
00:00:02,159 --> 00:00:04,799
just don't mute yourself

2
00:00:04,799 --> 00:00:07,520
hey um so i'm going to continue over the

3
00:00:07,520 --> 00:00:08,960
schedule if you don't mind you can

4
00:00:08,960 --> 00:00:11,840
feel free to prep yourself uh we've got

5
00:00:11,840 --> 00:00:13,440
maya here at 10 30

6
00:00:13,440 --> 00:00:16,400
uh at 11. we have a break and mike and i

7
00:00:16,400 --> 00:00:17,119
will

8
00:00:17,119 --> 00:00:19,840
chill out and probably bs for a second

9
00:00:19,840 --> 00:00:20,640
and then

10
00:00:20,640 --> 00:00:24,160
mike's uh gonna welcome the very very

11
00:00:24,160 --> 00:00:27,680
uh wonderfully vulgar at times cherry

12
00:00:27,680 --> 00:00:28,560
majors

13
00:00:28,560 --> 00:00:31,439
love a great great mouthful of cursed

14
00:00:31,439 --> 00:00:33,440
words from a talk once in a while

15
00:00:33,440 --> 00:00:35,280
and once in a while you get that and i

16
00:00:35,280 --> 00:00:36,480
appreciate it

17
00:00:36,480 --> 00:00:39,600
um and then uh mike is gonna host best

18
00:00:39,600 --> 00:00:41,040
of ignite talks

19
00:00:41,040 --> 00:00:43,600
uh which um there are a lot of great uh

20
00:00:43,600 --> 00:00:44,559
five-minute good

21
00:00:44,559 --> 00:00:46,960
night talks out there in the world and

22
00:00:46,960 --> 00:00:49,440
um mike's gonna present a few of them

23
00:00:49,440 --> 00:00:51,840
and uh you'll all be able to check them

24
00:00:51,840 --> 00:00:53,199
out so

25
00:00:53,199 --> 00:00:56,320
first of all maya

26
00:00:56,320 --> 00:00:58,320
let's give you a chance to introduce

27
00:00:58,320 --> 00:01:00,000
yourself um

28
00:01:00,000 --> 00:01:01,359
how are you where are you calling in

29
00:01:01,359 --> 00:01:03,840
from sure i'm in san francisco calling

30
00:01:03,840 --> 00:01:06,559
it from my place

31
00:01:06,880 --> 00:01:09,680
sorry i said awesome thank you yeah much

32
00:01:09,680 --> 00:01:09,920
for

33
00:01:09,920 --> 00:01:13,040
being part where are you i am in new

34
00:01:13,040 --> 00:01:13,920
york city

35
00:01:13,920 --> 00:01:17,360
where it's late so it's it's so

36
00:01:17,360 --> 00:01:20,560
weird um but you know

37
00:01:20,560 --> 00:01:23,840
um i'm i'm glad to be here and to be

38
00:01:23,840 --> 00:01:25,439
able to do something like this with

39
00:01:25,439 --> 00:01:26,479
yourself

40
00:01:26,479 --> 00:01:30,159
i'm very very lucky that we are a part

41
00:01:30,159 --> 00:01:32,640
of kind of a community that

42
00:01:32,640 --> 00:01:35,280
you know we got a lot to talk about and

43
00:01:35,280 --> 00:01:35,680
we

44
00:01:35,680 --> 00:01:38,880
we tend to talk a lot

45
00:01:38,880 --> 00:01:41,119
but if if we can take all that talking

46
00:01:41,119 --> 00:01:42,640
and produce it into something that's

47
00:01:42,640 --> 00:01:44,240
beneficial to someone other than

48
00:01:44,240 --> 00:01:46,079
ourselves or the places where that we

49
00:01:46,079 --> 00:01:47,439
work for

50
00:01:47,439 --> 00:01:49,520
then i think uh you know me and you

51
00:01:49,520 --> 00:01:52,159
being part of the big microsoft uh

52
00:01:52,159 --> 00:01:54,000
umbrella we can feel a little bit better

53
00:01:54,000 --> 00:01:55,200
about ourselves

54
00:01:55,200 --> 00:01:59,119
so um for you and the rest of my uh my

55
00:01:59,119 --> 00:02:01,439
microsoft family i say thank you for

56
00:02:01,439 --> 00:02:04,000
uh being in a way whether it's github

57
00:02:04,000 --> 00:02:05,759
microsoft or whatever we're doing

58
00:02:05,759 --> 00:02:07,680
we're all kind of been dealing with it

59
00:02:07,680 --> 00:02:10,080
in our own way all over the country and

60
00:02:10,080 --> 00:02:12,800
and so uh thanks for giving this talk

61
00:02:12,800 --> 00:02:13,680
about

62
00:02:13,680 --> 00:02:16,879
software um yeah thank you for

63
00:02:16,879 --> 00:02:18,319
volunteering and hosting i love loving

64
00:02:18,319 --> 00:02:19,920
the music that you had

65
00:02:19,920 --> 00:02:22,959
thanks i i try so i'm gonna uh give the

66
00:02:22,959 --> 00:02:25,520
um the room to you if you will but the

67
00:02:25,520 --> 00:02:26,640
virtual room

68
00:02:26,640 --> 00:02:28,959
um and uh we'll hopefully get some

69
00:02:28,959 --> 00:02:30,640
questions and we'll talk a little bit in

70
00:02:30,640 --> 00:02:31,920
a few minutes all right so

71
00:02:31,920 --> 00:02:37,839
please uh enjoy sounds good

72
00:02:38,640 --> 00:02:41,280
great so it sounds like i will just get

73
00:02:41,280 --> 00:02:42,000
started

74
00:02:42,000 --> 00:02:43,680
so today we'll be talking about software

75
00:02:43,680 --> 00:02:46,080
supply chain vulnerabilities

76
00:02:46,080 --> 00:02:47,519
and they are real that's the whole point

77
00:02:47,519 --> 00:02:48,800
of this talk they are actually things

78
00:02:48,800 --> 00:02:50,319
that we have seen happen in the wild and

79
00:02:50,319 --> 00:02:51,840
that can exist

80
00:02:51,840 --> 00:02:54,720
um so i'm maya i'm a product manager at

81
00:02:54,720 --> 00:02:56,480
github i work on software supply chain

82
00:02:56,480 --> 00:02:57,360
security

83
00:02:57,360 --> 00:02:58,720
no wonder i'm talking about this topic

84
00:02:58,720 --> 00:03:00,159
right now it's something i find really

85
00:03:00,159 --> 00:03:01,440
interesting and really

86
00:03:01,440 --> 00:03:03,599
exciting and because it's such a big

87
00:03:03,599 --> 00:03:05,120
real threat that we know we need to go

88
00:03:05,120 --> 00:03:06,800
solve in the industry

89
00:03:06,800 --> 00:03:09,120
so we'll be covering software supply

90
00:03:09,120 --> 00:03:10,239
chain vulnerabilities

91
00:03:10,239 --> 00:03:12,000
we'll first talk about what a software

92
00:03:12,000 --> 00:03:13,440
supply chain is

93
00:03:13,440 --> 00:03:15,120
if you haven't heard that term before

94
00:03:15,120 --> 00:03:16,640
unfamiliar with that term

95
00:03:16,640 --> 00:03:18,879
we'll dive right in and cover specific

96
00:03:18,879 --> 00:03:20,319
compromises that we've seen

97
00:03:20,319 --> 00:03:22,080
and we'll cover common kinds of attacks

98
00:03:22,080 --> 00:03:24,239
and when they're likely to happen

99
00:03:24,239 --> 00:03:26,799
and uh how and why these attacks are

100
00:03:26,799 --> 00:03:27,519
happening

101
00:03:27,519 --> 00:03:29,120
and we'll close out by discussing what

102
00:03:29,120 --> 00:03:31,280
as developers you can do today to avoid

103
00:03:31,280 --> 00:03:33,760
these kinds of situations so let's get

104
00:03:33,760 --> 00:03:35,519
started

105
00:03:35,519 --> 00:03:37,599
so the reality is today that it's

106
00:03:37,599 --> 00:03:38,720
extremely common

107
00:03:38,720 --> 00:03:40,720
to not actually really know what's

108
00:03:40,720 --> 00:03:42,000
running in your environment right as a

109
00:03:42,000 --> 00:03:42,720
developer

110
00:03:42,720 --> 00:03:44,159
a large amount of code that a typical

111
00:03:44,159 --> 00:03:46,000
organization uses as open source

112
00:03:46,000 --> 00:03:47,920
i've heard anything from 80 percent to

113
00:03:47,920 --> 00:03:49,840
you know more than 99

114
00:03:49,840 --> 00:03:51,360
and you don't necessarily know what that

115
00:03:51,360 --> 00:03:53,120
actually includes so

116
00:03:53,120 --> 00:03:54,799
though you decide to pull in dependency

117
00:03:54,799 --> 00:03:56,799
a for your project it's possible that a

118
00:03:56,799 --> 00:03:58,959
has other dependencies b and c known as

119
00:03:58,959 --> 00:04:00,000
transit dependencies

120
00:04:00,000 --> 00:04:01,120
and sometimes you don't even know that

121
00:04:01,120 --> 00:04:02,879
you have a dependency at all so you're

122
00:04:02,879 --> 00:04:03,920
faced with a situation where you don't

123
00:04:03,920 --> 00:04:04,799
actually know what you're running in

124
00:04:04,799 --> 00:04:05,920
your environment

125
00:04:05,920 --> 00:04:07,680
and you just can't verify all of that

126
00:04:07,680 --> 00:04:10,159
code it's simply impossible today

127
00:04:10,159 --> 00:04:12,400
so where we've landed as an industry so

128
00:04:12,400 --> 00:04:14,080
far is that you need to be able to get

129
00:04:14,080 --> 00:04:16,798
some information and manage risk for the

130
00:04:16,798 --> 00:04:17,918
dependencies that you do have in your

131
00:04:17,918 --> 00:04:18,639
code

132
00:04:18,639 --> 00:04:20,000
and the potential vulnerabilities that

133
00:04:20,000 --> 00:04:21,759
these dependencies are introducing

134
00:04:21,759 --> 00:04:22,880
and that's where the concept of this

135
00:04:22,880 --> 00:04:24,479
software supply chain comes into play

136
00:04:24,479 --> 00:04:25,840
just like you might have a hardware

137
00:04:25,840 --> 00:04:27,759
supply chain or a food supply chain

138
00:04:27,759 --> 00:04:29,360
understanding what ends up in that end

139
00:04:29,360 --> 00:04:31,759
product that you consume

140
00:04:31,759 --> 00:04:34,080
software dependencies are pervasive it's

141
00:04:34,080 --> 00:04:35,759
normal for your projects to use hundreds

142
00:04:35,759 --> 00:04:37,120
or even thousands of open source

143
00:04:37,120 --> 00:04:38,320
dependencies

144
00:04:38,320 --> 00:04:40,840
if one of these dependencies has a

145
00:04:40,840 --> 00:04:42,240
vulnerability then

146
00:04:42,240 --> 00:04:43,280
chances are that you have a

147
00:04:43,280 --> 00:04:45,759
vulnerability as well being able to

148
00:04:45,759 --> 00:04:47,600
leverage the work of thousands of open

149
00:04:47,600 --> 00:04:48,720
source developers

150
00:04:48,720 --> 00:04:51,199
means also that thousands of strangers

151
00:04:51,199 --> 00:04:52,880
effectively have commit access to your

152
00:04:52,880 --> 00:04:53,919
production code

153
00:04:53,919 --> 00:04:56,240
so an innocent mistake or a malicious

154
00:04:56,240 --> 00:04:57,919
attack to your supply chain

155
00:04:57,919 --> 00:05:02,080
uh will affect you deeply and

156
00:05:02,080 --> 00:05:03,360
so to kind of think about what that

157
00:05:03,360 --> 00:05:05,120
really means a software supply chain is

158
00:05:05,120 --> 00:05:06,720
then anything that you depend on to

159
00:05:06,720 --> 00:05:07,919
deliver your product right for a

160
00:05:07,919 --> 00:05:09,360
pharmaceutical company

161
00:05:09,360 --> 00:05:11,280
it's the provenance and the verification

162
00:05:11,280 --> 00:05:13,919
of ingredients that go into each drug

163
00:05:13,919 --> 00:05:16,000
to ensure high quality you know for a

164
00:05:16,000 --> 00:05:17,440
chocolate bar that you buy at the store

165
00:05:17,440 --> 00:05:18,880
it's the list of ingredients and some

166
00:05:18,880 --> 00:05:20,479
information on nutritional contents

167
00:05:20,479 --> 00:05:21,039
maybe

168
00:05:21,039 --> 00:05:22,639
organic ingredients and production

169
00:05:22,639 --> 00:05:23,759
facilities that you might have the

170
00:05:23,759 --> 00:05:25,039
package you know doesn't

171
00:05:25,039 --> 00:05:26,400
produce in a facility that doesn't you

172
00:05:26,400 --> 00:05:27,840
know process peanuts whatever it happens

173
00:05:27,840 --> 00:05:29,520
to be

174
00:05:29,520 --> 00:05:31,280
so then a software supply chain is

175
00:05:31,280 --> 00:05:33,199
everything that goes into your software

176
00:05:33,199 --> 00:05:35,919
and where it comes from who wrote it

177
00:05:35,919 --> 00:05:37,280
when it was contributed

178
00:05:37,280 --> 00:05:39,600
how it's been reviewed including reviews

179
00:05:39,600 --> 00:05:41,039
for security issues

180
00:05:41,039 --> 00:05:43,039
any known vulnerabilities supported

181
00:05:43,039 --> 00:05:44,800
versions license information if that's

182
00:05:44,800 --> 00:05:45,759
applicable

183
00:05:45,759 --> 00:05:47,600
just everything it's everything that you

184
00:05:47,600 --> 00:05:49,440
could could want to know about the

185
00:05:49,440 --> 00:05:50,720
software that you're running to help you

186
00:05:50,720 --> 00:05:52,800
determine your risk profile

187
00:05:52,800 --> 00:05:54,320
a software supply chain is anything that

188
00:05:54,320 --> 00:05:56,319
goes into or affects your code

189
00:05:56,319 --> 00:05:59,039
from development through your ci cd

190
00:05:59,039 --> 00:05:59,840
pipeline

191
00:05:59,840 --> 00:06:02,639
until it gets deployed into production

192
00:06:02,639 --> 00:06:04,800
now when you talk about dependencies as

193
00:06:04,800 --> 00:06:06,880
you know alluding to earlier it's what's

194
00:06:06,880 --> 00:06:08,160
scary isn't as much as what you're

195
00:06:08,160 --> 00:06:08,720
developing

196
00:06:08,720 --> 00:06:09,840
internally because hopefully you have

197
00:06:09,840 --> 00:06:12,000
some controls to say prevent developers

198
00:06:12,000 --> 00:06:13,919
from pushing code from their bathtub

199
00:06:13,919 --> 00:06:16,000
um maybe not during you know today's

200
00:06:16,000 --> 00:06:17,840
times or are you restricted who has

201
00:06:17,840 --> 00:06:19,600
super admin rights in your environment

202
00:06:19,600 --> 00:06:21,680
but what's scary with open source code

203
00:06:21,680 --> 00:06:22,720
is that you

204
00:06:22,720 --> 00:06:25,039
um are allowing open source developers

205
00:06:25,039 --> 00:06:26,000
to to

206
00:06:26,000 --> 00:06:26,800
the code that you're allowing your

207
00:06:26,800 --> 00:06:28,319
developers to fill in from open source

208
00:06:28,319 --> 00:06:29,360
you don't

209
00:06:29,360 --> 00:06:31,440
know um what's actually there right

210
00:06:31,440 --> 00:06:32,720
because open source is easy for

211
00:06:32,720 --> 00:06:34,479
developers it means it's also easy for

212
00:06:34,479 --> 00:06:35,600
attackers

213
00:06:35,600 --> 00:06:37,199
i don't want to scare you i want you to

214
00:06:37,199 --> 00:06:38,319
keep using open source code and

215
00:06:38,319 --> 00:06:39,440
contributing to it

216
00:06:39,440 --> 00:06:40,880
and and working on it i just want you to

217
00:06:40,880 --> 00:06:42,400
do it thoughtfully from a security point

218
00:06:42,400 --> 00:06:43,360
of view

219
00:06:43,360 --> 00:06:44,960
what's attractive from an attacker in a

220
00:06:44,960 --> 00:06:46,479
supply chain attack is that a single

221
00:06:46,479 --> 00:06:47,919
compromise vector can actually give them

222
00:06:47,919 --> 00:06:50,160
access to multiple targets

223
00:06:50,160 --> 00:06:52,080
so what developers are purposefully

224
00:06:52,080 --> 00:06:53,840
pulling into their code

225
00:06:53,840 --> 00:06:56,319
isn't you know actually in reality as as

226
00:06:56,319 --> 00:06:57,759
closely examined as say like network

227
00:06:57,759 --> 00:06:58,960
intrusions into your into your

228
00:06:58,960 --> 00:07:00,880
environment so that's it's a very

229
00:07:00,880 --> 00:07:02,400
attractive way of attacking your

230
00:07:02,400 --> 00:07:04,799
environment

231
00:07:05,039 --> 00:07:07,039
okay so you might have heard security

232
00:07:07,039 --> 00:07:08,720
attacks broken down into kind of three

233
00:07:08,720 --> 00:07:09,360
components

234
00:07:09,360 --> 00:07:11,520
who the attacker is like a script kitty

235
00:07:11,520 --> 00:07:14,000
or a competitor or a nation state

236
00:07:14,000 --> 00:07:17,039
how the attack is conducted and

237
00:07:17,039 --> 00:07:19,599
what the attack is attempting to do a

238
00:07:19,599 --> 00:07:20,720
supply chain attack

239
00:07:20,720 --> 00:07:22,880
in and of itself isn't usually the end

240
00:07:22,880 --> 00:07:24,720
goal right it's usually a step towards

241
00:07:24,720 --> 00:07:25,840
something else

242
00:07:25,840 --> 00:07:27,919
and unfortunately or fortunately almost

243
00:07:27,919 --> 00:07:29,680
anyone can conduct such an attack

244
00:07:29,680 --> 00:07:32,800
so instead of focusing on uh the who uh

245
00:07:32,800 --> 00:07:34,639
we'll focus on the how which is what

246
00:07:34,639 --> 00:07:35,280
happens

247
00:07:35,280 --> 00:07:36,880
to infiltrate your supply chain and the

248
00:07:36,880 --> 00:07:38,160
what what the attacker is actually

249
00:07:38,160 --> 00:07:40,160
trying to get at

250
00:07:40,160 --> 00:07:41,280
there are a couple of different methods

251
00:07:41,280 --> 00:07:44,000
to attack your supply chain the how

252
00:07:44,000 --> 00:07:45,759
inserting malicious code directly into

253
00:07:45,759 --> 00:07:47,520
dependency this could be a purposeful

254
00:07:47,520 --> 00:07:48,639
backdoor

255
00:07:48,639 --> 00:07:50,800
known malware or a known vulnerability

256
00:07:50,800 --> 00:07:52,479
or even introducing a new dependency

257
00:07:52,479 --> 00:07:53,120
this is like

258
00:07:53,120 --> 00:07:55,039
walking through the front door to

259
00:07:55,039 --> 00:07:57,120
introduce a backdoor

260
00:07:57,120 --> 00:07:59,039
compromising a build tool infrastructure

261
00:07:59,039 --> 00:08:00,479
tool or another piece of the cicd

262
00:08:00,479 --> 00:08:01,120
development

263
00:08:01,120 --> 00:08:02,960
pipeline which again could be yet

264
00:08:02,960 --> 00:08:04,479
another supply chain attack

265
00:08:04,479 --> 00:08:06,000
so a supply chain attack for a supply

266
00:08:06,000 --> 00:08:08,639
chain attack it can get a bit meta

267
00:08:08,639 --> 00:08:10,240
compromising signing keys to make it

268
00:08:10,240 --> 00:08:12,000
seem like an unknown package came from

269
00:08:12,000 --> 00:08:13,759
a known trusted source right because who

270
00:08:13,759 --> 00:08:16,639
verifies those signatures anyways

271
00:08:16,639 --> 00:08:18,960
compromising a package manager or any

272
00:08:18,960 --> 00:08:19,759
kind of

273
00:08:19,759 --> 00:08:23,280
other distribution tool for for packages

274
00:08:23,280 --> 00:08:24,560
to affect several artifacts being

275
00:08:24,560 --> 00:08:26,319
distributed in the supply chain it could

276
00:08:26,319 --> 00:08:28,000
be a website used for software updates

277
00:08:28,000 --> 00:08:29,120
like an update server

278
00:08:29,120 --> 00:08:32,958
um it could be anything

279
00:08:32,958 --> 00:08:34,719
compromised vulnerability reporting um

280
00:08:34,719 --> 00:08:36,399
so this is basically man in the middling

281
00:08:36,399 --> 00:08:37,760
or man on the personing is there a

282
00:08:37,760 --> 00:08:38,719
person in the middling

283
00:08:38,719 --> 00:08:40,880
getting myself confused like a security

284
00:08:40,880 --> 00:08:42,640
ad reporting address

285
00:08:42,640 --> 00:08:44,240
getting into bug reports for example on

286
00:08:44,240 --> 00:08:45,680
a bug bounty site

287
00:08:45,680 --> 00:08:48,080
or even getting uh on a fixed or

288
00:08:48,080 --> 00:08:50,000
disclosure mailing list for a project

289
00:08:50,000 --> 00:08:51,680
that would allow a malicious actor to

290
00:08:51,680 --> 00:08:53,120
find out about a known vulnerability

291
00:08:53,120 --> 00:08:54,000
before it's widely

292
00:08:54,000 --> 00:08:56,160
announced and patched sometimes you've

293
00:08:56,160 --> 00:08:57,839
heard of this term called a

294
00:08:57,839 --> 00:09:01,279
bug door the idea is you know about a

295
00:09:01,279 --> 00:09:02,880
bug and you can use it as a back door

296
00:09:02,880 --> 00:09:04,399
and then you just choose not to fix it

297
00:09:04,399 --> 00:09:06,240
so you can keep using it as a bug door

298
00:09:06,240 --> 00:09:09,040
into into an environment account

299
00:09:09,040 --> 00:09:10,560
takeover of a maintainer

300
00:09:10,560 --> 00:09:12,399
uh this could be the fake commits and

301
00:09:12,399 --> 00:09:13,760
depending on how signing keys are

302
00:09:13,760 --> 00:09:15,279
managed this might be you know one in

303
00:09:15,279 --> 00:09:16,480
the same attack if they can get access

304
00:09:16,480 --> 00:09:18,000
to those keys as well

305
00:09:18,000 --> 00:09:19,680
um in addition to compromising what a

306
00:09:19,680 --> 00:09:21,200
maintainer can publish without

307
00:09:21,200 --> 00:09:22,880
even going that far this could also

308
00:09:22,880 --> 00:09:24,160
include something like compromising a

309
00:09:24,160 --> 00:09:25,360
maintainer's email again to get

310
00:09:25,360 --> 00:09:26,800
something like the security at

311
00:09:26,800 --> 00:09:29,519
bug reports a project takeover

312
00:09:29,519 --> 00:09:32,320
especially of an abandoned project

313
00:09:32,320 --> 00:09:34,000
accidental attacks like typo squatting

314
00:09:34,000 --> 00:09:35,519
to get users to accidentally pull in

315
00:09:35,519 --> 00:09:36,080
your project

316
00:09:36,080 --> 00:09:37,440
as a dependency when they mistype

317
00:09:37,440 --> 00:09:39,839
something and deletion

318
00:09:39,839 --> 00:09:41,040
just getting rid of whatever that

319
00:09:41,040 --> 00:09:42,720
dependency or that or that piece of code

320
00:09:42,720 --> 00:09:44,160
was

321
00:09:44,160 --> 00:09:45,440
and these have a few different aims or

322
00:09:45,440 --> 00:09:47,120
goals you know spoiler alert as like

323
00:09:47,120 --> 00:09:48,480
other attacks and security

324
00:09:48,480 --> 00:09:50,240
the ultimate motivation is almost always

325
00:09:50,240 --> 00:09:51,600
money so

326
00:09:51,600 --> 00:09:52,640
introducing a backdoor into your

327
00:09:52,640 --> 00:09:54,240
environment this might be targeted for

328
00:09:54,240 --> 00:09:55,839
users of only a particular

329
00:09:55,839 --> 00:09:57,440
piece of software operating system or

330
00:09:57,440 --> 00:09:59,680
region um or it might just be a wide

331
00:09:59,680 --> 00:10:01,839
swath to see what they can get access to

332
00:10:01,839 --> 00:10:03,440
introducing malware for example to

333
00:10:03,440 --> 00:10:05,120
select login information

334
00:10:05,120 --> 00:10:06,800
uh but really the easiest way to make

335
00:10:06,800 --> 00:10:09,120
malware uh to make money these days is

336
00:10:09,120 --> 00:10:10,880
from cryptocurrency mining so abusing

337
00:10:10,880 --> 00:10:12,640
any extra compute to mine

338
00:10:12,640 --> 00:10:14,800
uh the trendy currency of the day uh or

339
00:10:14,800 --> 00:10:16,320
setting up a botnet also falls in this

340
00:10:16,320 --> 00:10:18,720
in this spot and lastly service

341
00:10:18,720 --> 00:10:19,760
disruption right this could be for

342
00:10:19,760 --> 00:10:21,839
example taking a service offline

343
00:10:21,839 --> 00:10:23,120
so let's get into some of the examples

344
00:10:23,120 --> 00:10:24,240
because this is the part that i find

345
00:10:24,240 --> 00:10:26,399
really really fascinating here

346
00:10:26,399 --> 00:10:28,000
so first let's look at event stream this

347
00:10:28,000 --> 00:10:29,760
is probably the one that if you've heard

348
00:10:29,760 --> 00:10:30,959
of us supply chain attack you've

349
00:10:30,959 --> 00:10:32,399
probably heard of event stream

350
00:10:32,399 --> 00:10:34,560
um it's a widely used node.js library

351
00:10:34,560 --> 00:10:35,760
available via npm

352
00:10:35,760 --> 00:10:37,279
and when i say widely used i'm talking

353
00:10:37,279 --> 00:10:38,720
you know two million plus weekly

354
00:10:38,720 --> 00:10:40,240
downloads

355
00:10:40,240 --> 00:10:43,040
so what happened in the fall of 2018 a

356
00:10:43,040 --> 00:10:43,519
user

357
00:10:43,519 --> 00:10:44,959
right in mind control volunteered to

358
00:10:44,959 --> 00:10:46,800
take over event stream on github

359
00:10:46,800 --> 00:10:48,320
against a widely used package but not

360
00:10:48,320 --> 00:10:50,399
for all supported so the author welcomed

361
00:10:50,399 --> 00:10:51,600
the extra help and even gave the

362
00:10:51,600 --> 00:10:53,600
newcomer publishing rights

363
00:10:53,600 --> 00:10:55,040
i want to emphasize that the author is

364
00:10:55,040 --> 00:10:56,399
not to blame here because we should have

365
00:10:56,399 --> 00:10:58,240
better ways to support these developers

366
00:10:58,240 --> 00:11:00,480
and also verify trust of our ecosystem

367
00:11:00,480 --> 00:11:01,440
um the

368
00:11:01,440 --> 00:11:02,959
the author literally wrote in a github

369
00:11:02,959 --> 00:11:04,560
issue he emailed me and he said he

370
00:11:04,560 --> 00:11:06,079
wanted to maintain the module so i gave

371
00:11:06,079 --> 00:11:06,880
it to him

372
00:11:06,880 --> 00:11:08,160
i don't get anything from maintaining

373
00:11:08,160 --> 00:11:09,600
this module and i don't even use it

374
00:11:09,600 --> 00:11:11,600
anymore and it happened for years

375
00:11:11,600 --> 00:11:14,560
so very much in the unsupported category

376
00:11:14,560 --> 00:11:15,680
on september 9th

377
00:11:15,680 --> 00:11:18,160
uh write 9 control added a new

378
00:11:18,160 --> 00:11:19,680
dependency to event stream flat map

379
00:11:19,680 --> 00:11:20,480
stream

380
00:11:20,480 --> 00:11:22,240
and then a week later on september 16th

381
00:11:22,240 --> 00:11:23,680
they rewrote the code to no longer

382
00:11:23,680 --> 00:11:25,040
require that dependency and tried to

383
00:11:25,040 --> 00:11:26,000
remove it

384
00:11:26,000 --> 00:11:27,360
that change was made in the code base

385
00:11:27,360 --> 00:11:28,880
but wasn't actually pushed through where

386
00:11:28,880 --> 00:11:31,120
the library is being hosted on npm

387
00:11:31,120 --> 00:11:33,120
and then on october 5th another user

388
00:11:33,120 --> 00:11:35,120
huge glass added malware to flatmap

389
00:11:35,120 --> 00:11:36,240
stream

390
00:11:36,240 --> 00:11:37,839
so then anyone who would have used event

391
00:11:37,839 --> 00:11:39,279
stream and pulled in the latest version

392
00:11:39,279 --> 00:11:40,399
of blackmapstream

393
00:11:40,399 --> 00:11:42,720
would receive that malware uh this was

394
00:11:42,720 --> 00:11:44,959
discovered in late november 2018

395
00:11:44,959 --> 00:11:46,320
meaning the dependency and malware were

396
00:11:46,320 --> 00:11:47,760
running for almost two months before it

397
00:11:47,760 --> 00:11:49,279
was discovered

398
00:11:49,279 --> 00:11:50,959
now fortunately this wasn't actually

399
00:11:50,959 --> 00:11:52,880
that bad um it was bad

400
00:11:52,880 --> 00:11:54,560
that we didn't find it sooner uh but

401
00:11:54,560 --> 00:11:56,079
this was extremely targeted

402
00:11:56,079 --> 00:11:57,760
the malware looked to see if the host

403
00:11:57,760 --> 00:11:59,839
was a developer for a particular kind of

404
00:11:59,839 --> 00:12:01,680
cryptocurrency wallet the dash copay

405
00:12:01,680 --> 00:12:02,560
wallet

406
00:12:02,560 --> 00:12:04,480
and if the host was a developer for that

407
00:12:04,480 --> 00:12:06,480
piece of software it inserted additional

408
00:12:06,480 --> 00:12:08,160
code to be distributed

409
00:12:08,160 --> 00:12:10,560
into the copay wallet uh the code would

410
00:12:10,560 --> 00:12:12,160
scan user deposits to see if their

411
00:12:12,160 --> 00:12:13,760
bitcoin or bitcoin cash deposits were

412
00:12:13,760 --> 00:12:15,120
over a certain amount

413
00:12:15,120 --> 00:12:16,959
and if so captured passwords and sent

414
00:12:16,959 --> 00:12:18,480
those to remote address

415
00:12:18,480 --> 00:12:20,639
um the malware did in fact make it into

416
00:12:20,639 --> 00:12:22,399
a handful of releases of dash copay so

417
00:12:22,399 --> 00:12:25,120
it was a successful uh insertion into

418
00:12:25,120 --> 00:12:26,399
the supply chain um there's no

419
00:12:26,399 --> 00:12:27,680
information that i could find as to

420
00:12:27,680 --> 00:12:28,880
whether or not they were actually able

421
00:12:28,880 --> 00:12:32,240
to get any bitcoin from this attack

422
00:12:32,480 --> 00:12:35,040
next up eslint i love this example as

423
00:12:35,040 --> 00:12:36,639
it's a again a software supply chain

424
00:12:36,639 --> 00:12:37,440
attack

425
00:12:37,440 --> 00:12:39,120
to try to make more software supply

426
00:12:39,120 --> 00:12:40,480
chain attacks happen so a

427
00:12:40,480 --> 00:12:42,880
meta software supply chain attack in the

428
00:12:42,880 --> 00:12:44,240
morning of july 12

429
00:12:44,240 --> 00:12:46,639
2018 uh new versions of two of the

430
00:12:46,639 --> 00:12:48,320
components of eslint were published on

431
00:12:48,320 --> 00:12:49,360
pm

432
00:12:49,360 --> 00:12:51,440
within an hour of publication a user

433
00:12:51,440 --> 00:12:52,880
filed a bug against the project and the

434
00:12:52,880 --> 00:12:54,160
malicious packages

435
00:12:54,160 --> 00:12:57,279
were unpublished alto all towed those

436
00:12:57,279 --> 00:12:58,320
packages were

437
00:12:58,320 --> 00:13:01,920
up for less than four hours and um

438
00:13:01,920 --> 00:13:03,600
a few hours later fully remediated with

439
00:13:03,600 --> 00:13:04,880
new uncompromised versions being

440
00:13:04,880 --> 00:13:06,000
published

441
00:13:06,000 --> 00:13:07,440
so what actually happened in that you

442
00:13:07,440 --> 00:13:09,279
know four hour time frame when when

443
00:13:09,279 --> 00:13:10,720
those packages were up or we know how to

444
00:13:10,720 --> 00:13:11,279
how did this

445
00:13:11,279 --> 00:13:12,639
how did the malicious packages get

446
00:13:12,639 --> 00:13:15,600
published well a maintainer of eslint

447
00:13:15,600 --> 00:13:17,519
reused their password elsewhere and

448
00:13:17,519 --> 00:13:20,240
didn't have 2fa enabled so attackers use

449
00:13:20,240 --> 00:13:21,760
credential stuffing to generate auth

450
00:13:21,760 --> 00:13:23,040
tokens for their account and start

451
00:13:23,040 --> 00:13:24,959
publishing new packages

452
00:13:24,959 --> 00:13:26,480
the malicious versions of eslint would

453
00:13:26,480 --> 00:13:28,160
try to connect to and

454
00:13:28,160 --> 00:13:30,000
download and execute code found on

455
00:13:30,000 --> 00:13:33,360
pastebin that captured the npmrc file

456
00:13:33,360 --> 00:13:35,120
which is typically where npm off tokens

457
00:13:35,120 --> 00:13:37,200
for publishing packages are stored

458
00:13:37,200 --> 00:13:39,199
so the goal here in publishing in

459
00:13:39,199 --> 00:13:40,959
compromising one npm package is that

460
00:13:40,959 --> 00:13:42,320
they were hoping to get credentials

461
00:13:42,320 --> 00:13:45,279
for lots more npm packages that they

462
00:13:45,279 --> 00:13:47,120
could then go compromise

463
00:13:47,120 --> 00:13:48,800
since his malware was trying to capture

464
00:13:48,800 --> 00:13:50,240
npm credentials

465
00:13:50,240 --> 00:13:51,680
the response to this issue had to be

466
00:13:51,680 --> 00:13:53,600
wider than just a single package right

467
00:13:53,600 --> 00:13:56,079
and in fact npm took action to revoke

468
00:13:56,079 --> 00:13:57,360
all the access tokens

469
00:13:57,360 --> 00:13:59,680
generated before the incident that

470
00:13:59,680 --> 00:14:01,120
includes private packages so you think

471
00:14:01,120 --> 00:14:02,079
of the impact of that that's

472
00:14:02,079 --> 00:14:04,639
huge that's a lot of potential users

473
00:14:04,639 --> 00:14:05,199
affected

474
00:14:05,199 --> 00:14:07,040
by the cleanup of a single incident even

475
00:14:07,040 --> 00:14:09,120
though um the the postmortem determined

476
00:14:09,120 --> 00:14:10,079
that only a

477
00:14:10,079 --> 00:14:11,760
very small number of packages and users

478
00:14:11,760 --> 00:14:13,760
were affected

479
00:14:13,760 --> 00:14:15,199
so as much as i want you to also you

480
00:14:15,199 --> 00:14:17,199
know automate and automatically update

481
00:14:17,199 --> 00:14:18,560
all your dependencies this is a great

482
00:14:18,560 --> 00:14:19,760
example of where this would actually

483
00:14:19,760 --> 00:14:20,720
have been bad

484
00:14:20,720 --> 00:14:22,560
um so for the downstream packages you

485
00:14:22,560 --> 00:14:23,920
should make it as easy as possible to

486
00:14:23,920 --> 00:14:24,639
upgrade

487
00:14:24,639 --> 00:14:26,399
but ideally a human is still in the loop

488
00:14:26,399 --> 00:14:27,519
especially if you're publishing a new

489
00:14:27,519 --> 00:14:28,639
version

490
00:14:28,639 --> 00:14:30,399
using a lock file is another great way

491
00:14:30,399 --> 00:14:32,320
of forcing the explicit acknowledgement

492
00:14:32,320 --> 00:14:34,079
of any new versions of a dependency that

493
00:14:34,079 --> 00:14:36,479
you're using

494
00:14:37,279 --> 00:14:39,600
next up kingslayer no i'm not talking

495
00:14:39,600 --> 00:14:40,880
about jamie lannister

496
00:14:40,880 --> 00:14:42,959
this is an interesting one this supply

497
00:14:42,959 --> 00:14:44,000
chain attack dubbed

498
00:14:44,000 --> 00:14:46,959
kingslayer was presented on at rsa

499
00:14:46,959 --> 00:14:48,800
without initially disclosing which

500
00:14:48,800 --> 00:14:50,399
software had been attacked

501
00:14:50,399 --> 00:14:52,320
brian krebs then wrote a piece shortly

502
00:14:52,320 --> 00:14:54,160
afterwards to draw attention to the fact

503
00:14:54,160 --> 00:14:56,079
there wasn't a sufficient disclosure

504
00:14:56,079 --> 00:14:58,560
identifying the software as evlog which

505
00:14:58,560 --> 00:15:01,519
is produced by altair technologies

506
00:15:01,519 --> 00:15:03,360
this is also one of the og supply chain

507
00:15:03,360 --> 00:15:05,360
attacks right this happened way back

508
00:15:05,360 --> 00:15:10,000
in uh march uh 2015 on march 31 2015

509
00:15:10,000 --> 00:15:11,600
a website used for distributing the

510
00:15:11,600 --> 00:15:13,360
windows log management software

511
00:15:13,360 --> 00:15:16,480
eb log was compromised with attackers

512
00:15:16,480 --> 00:15:17,360
publishing new

513
00:15:17,360 --> 00:15:19,199
signed software with the kingslayer

514
00:15:19,199 --> 00:15:21,360
backdoor in that software

515
00:15:21,360 --> 00:15:23,199
a few days later on april 9th so it's

516
00:15:23,199 --> 00:15:24,480
literally like 10 days later

517
00:15:24,480 --> 00:15:25,680
the attackers also compromised the

518
00:15:25,680 --> 00:15:27,440
update website so that versions that

519
00:15:27,440 --> 00:15:28,399
were automating

520
00:15:28,399 --> 00:15:29,440
that were updating themselves

521
00:15:29,440 --> 00:15:32,079
automatically would also update and pull

522
00:15:32,079 --> 00:15:34,160
in the the compromise software version

523
00:15:34,160 --> 00:15:36,240
um this is suspected of being an attack

524
00:15:36,240 --> 00:15:38,079
connected by an apt

525
00:15:38,079 --> 00:15:39,920
i couldn't easily find details on what

526
00:15:39,920 --> 00:15:41,440
the kingslayer malware did

527
00:15:41,440 --> 00:15:42,959
but it seems like it was meant to steal

528
00:15:42,959 --> 00:15:45,440
some sort of credentials

529
00:15:45,440 --> 00:15:47,600
so although the the vendor actually

530
00:15:47,600 --> 00:15:48,720
found the issue

531
00:15:48,720 --> 00:15:51,680
and fixed it on april 26 of 2015 so

532
00:15:51,680 --> 00:15:53,040
again all of this taking place within

533
00:15:53,040 --> 00:15:54,399
within a month and being fixed within a

534
00:15:54,399 --> 00:15:55,199
month

535
00:15:55,199 --> 00:15:56,880
with a republished version they didn't

536
00:15:56,880 --> 00:15:58,480
do a very good job here in terms of

537
00:15:58,480 --> 00:16:00,800
incident response and communications

538
00:16:00,800 --> 00:16:03,040
so a defense contractor kept running the

539
00:16:03,040 --> 00:16:04,720
backdoor software until it was

540
00:16:04,720 --> 00:16:07,199
discovered in august of 2016. so that's

541
00:16:07,199 --> 00:16:09,759
more than a year later before they went

542
00:16:09,759 --> 00:16:11,600
ahead and found and identified other

543
00:16:11,600 --> 00:16:13,600
parties that were also at risk

544
00:16:13,600 --> 00:16:15,440
in order to help them remediate

545
00:16:15,440 --> 00:16:17,920
according to the talk at rsa

546
00:16:17,920 --> 00:16:20,000
um based on which ips were contacting

547
00:16:20,000 --> 00:16:21,519
the update server

548
00:16:21,519 --> 00:16:23,360
the victims could have included so not

549
00:16:23,360 --> 00:16:25,120
confirmed but could have included

550
00:16:25,120 --> 00:16:27,440
five different contractors four telcos

551
00:16:27,440 --> 00:16:29,920
more than ten military organizations

552
00:16:29,920 --> 00:16:32,079
uh 24 banks or other financial

553
00:16:32,079 --> 00:16:33,519
institutions and a handful of other

554
00:16:33,519 --> 00:16:34,639
fortune 500 companies

555
00:16:34,639 --> 00:16:37,839
so a huge potential attack for some of

556
00:16:37,839 --> 00:16:38,800
these these large

557
00:16:38,800 --> 00:16:42,639
conglomerates large large organizations

558
00:16:42,720 --> 00:16:45,360
all right next up webmin webmin is a web

559
00:16:45,360 --> 00:16:47,040
app for managing unix servers like those

560
00:16:47,040 --> 00:16:49,759
running linux or opendsd

561
00:16:49,759 --> 00:16:52,480
in august of 2019 it was revealed by a

562
00:16:52,480 --> 00:16:54,240
researcher at defcon that webman had had

563
00:16:54,240 --> 00:16:55,279
a back door

564
00:16:55,279 --> 00:16:57,839
allowing for unauthenticated remote code

565
00:16:57,839 --> 00:16:59,600
execution

566
00:16:59,600 --> 00:17:02,480
this allowed in some earlier versions

567
00:17:02,480 --> 00:17:04,400
any unauthoricated access and in later

568
00:17:04,400 --> 00:17:05,280
versions

569
00:17:05,280 --> 00:17:06,799
only on authenticated access if the

570
00:17:06,799 --> 00:17:09,199
installer had changed the authentication

571
00:17:09,199 --> 00:17:10,720
to allow for users with expired

572
00:17:10,720 --> 00:17:12,240
passwords to then reset their password

573
00:17:12,240 --> 00:17:14,880
so there was a flag that they needed to

574
00:17:14,880 --> 00:17:17,679
um to enable the attackers actually

575
00:17:17,679 --> 00:17:20,480
enabled that flag by default

576
00:17:20,480 --> 00:17:22,720
this was disclosed as a researcher as a

577
00:17:22,720 --> 00:17:24,400
zero day without previously notifying

578
00:17:24,400 --> 00:17:27,039
the project of the vulnerability

579
00:17:27,039 --> 00:17:28,480
the backdoor was inserted as part of the

580
00:17:28,480 --> 00:17:30,960
build process interestingly

581
00:17:30,960 --> 00:17:32,880
the attackers only compromised some of

582
00:17:32,880 --> 00:17:34,960
the distribution with valid webmin and

583
00:17:34,960 --> 00:17:36,480
user min code on github

584
00:17:36,480 --> 00:17:38,080
but backdoor packages only on

585
00:17:38,080 --> 00:17:40,080
sourceforge so it's not

586
00:17:40,080 --> 00:17:41,840
clear to me exactly what part of the

587
00:17:41,840 --> 00:17:42,880
build process compromise and the

588
00:17:42,880 --> 00:17:44,320
maintainers didn't clarify how this

589
00:17:44,320 --> 00:17:46,160
could have happened

590
00:17:46,160 --> 00:17:47,760
this remained from multiple versions of

591
00:17:47,760 --> 00:17:49,120
webmin with backward versions being

592
00:17:49,120 --> 00:17:51,520
distributed for over a year

593
00:17:51,520 --> 00:17:53,200
likely the build servers were first

594
00:17:53,200 --> 00:17:55,679
compromised in april 2018.

595
00:17:55,679 --> 00:17:56,720
what's really sad here is that the

596
00:17:56,720 --> 00:17:58,880
maintainers even moved to a new build

597
00:17:58,880 --> 00:18:01,200
infrastructure in september of 2018

598
00:18:01,200 --> 00:18:03,280
and just copied over the backups that

599
00:18:03,280 --> 00:18:04,799
had the back door in it

600
00:18:04,799 --> 00:18:06,720
so instead of rebuilding from source

601
00:18:06,720 --> 00:18:09,039
which is a great practice to try here um

602
00:18:09,039 --> 00:18:10,559
please don't copy over your malware and

603
00:18:10,559 --> 00:18:12,160
keep distributing it

604
00:18:12,160 --> 00:18:13,520
thankfully they were able to fix the

605
00:18:13,520 --> 00:18:16,080
issue by factory building from source

606
00:18:16,080 --> 00:18:18,960
and um that is that is a lesson here

607
00:18:18,960 --> 00:18:20,240
building from checked in source code on

608
00:18:20,240 --> 00:18:22,160
github not a local directory that you're

609
00:18:22,160 --> 00:18:24,400
using

610
00:18:25,440 --> 00:18:27,039
another great example here docker one

611
00:18:27,039 --> 00:18:30,000
two three three two one in may of 2018

612
00:18:30,000 --> 00:18:31,679
several malicious images were discovered

613
00:18:31,679 --> 00:18:33,840
on docker hub um cromtech which is the

614
00:18:33,840 --> 00:18:35,200
research company that found this found

615
00:18:35,200 --> 00:18:36,480
17 images

616
00:18:36,480 --> 00:18:39,200
with plain names like docker12321 and

617
00:18:39,200 --> 00:18:40,720
those contain malware

618
00:18:40,720 --> 00:18:42,720
um the docker one two three three two

619
00:18:42,720 --> 00:18:45,200
one registry was created in may of 2017

620
00:18:45,200 --> 00:18:47,280
so a year earlier and malware was added

621
00:18:47,280 --> 00:18:48,880
in the summer of 2017.

622
00:18:48,880 --> 00:18:50,320
uh the community was actually pretty

623
00:18:50,320 --> 00:18:52,240
good at discovering this and these

624
00:18:52,240 --> 00:18:54,000
identifying these issues with complaints

625
00:18:54,000 --> 00:18:56,799
made to dockerhub in the fall of 2017

626
00:18:56,799 --> 00:18:58,160
however nothing actually happened and

627
00:18:58,160 --> 00:18:59,600
these images stayed up published it

628
00:18:59,600 --> 00:19:01,760
publishing even new versions including

629
00:19:01,760 --> 00:19:05,039
the same malware uh fortinet

630
00:19:05,039 --> 00:19:06,720
was able to link these images to a

631
00:19:06,720 --> 00:19:08,480
cryptocurrency mining.net

632
00:19:08,480 --> 00:19:11,120
definitively in early may of 2018 and

633
00:19:11,120 --> 00:19:12,559
then docker have promptly removed the

634
00:19:12,559 --> 00:19:13,679
images

635
00:19:13,679 --> 00:19:15,120
nonetheless in that time period that one

636
00:19:15,120 --> 00:19:16,880
year time period when this was online

637
00:19:16,880 --> 00:19:18,640
uh the 17 images in the registry were

638
00:19:18,640 --> 00:19:20,880
downloaded over 5 million times

639
00:19:20,880 --> 00:19:22,720
that malware that they contained was for

640
00:19:22,720 --> 00:19:24,559
mining cryptocurrency locally in this

641
00:19:24,559 --> 00:19:25,600
case monero

642
00:19:25,600 --> 00:19:27,520
and then sending it to a remote server

643
00:19:27,520 --> 00:19:29,840
it's estimated that over uh 90 000 us

644
00:19:29,840 --> 00:19:31,360
dollars worth of monero was mined by

645
00:19:31,360 --> 00:19:32,320
these images in that

646
00:19:32,320 --> 00:19:34,799
time period so i was a little bit

647
00:19:34,799 --> 00:19:36,320
surprised by that i was like 5 million

648
00:19:36,320 --> 00:19:37,600
that's terrible and i was like oh ninety

649
00:19:37,600 --> 00:19:38,799
thousand dollars a minute that doesn't

650
00:19:38,799 --> 00:19:39,440
seem like

651
00:19:39,440 --> 00:19:42,320
that much um this was basically like a

652
00:19:42,320 --> 00:19:43,280
toy library

653
00:19:43,280 --> 00:19:44,720
like they were just depending on users

654
00:19:44,720 --> 00:19:47,039
testing random images and like

655
00:19:47,039 --> 00:19:49,120
messing around to see what they could do

656
00:19:49,120 --> 00:19:50,559
or accidentally downloading them so i

657
00:19:50,559 --> 00:19:51,840
think for you know an accidental

658
00:19:51,840 --> 00:19:52,320
download

659
00:19:52,320 --> 00:19:53,919
taking home a 90k paycheck is pretty

660
00:19:53,919 --> 00:19:56,160
good uh

661
00:19:56,160 --> 00:19:57,280
and if anything this just gives

662
00:19:57,280 --> 00:19:58,640
attackers an idea of how quickly their

663
00:19:58,640 --> 00:20:00,160
malware could be detected and how it be

664
00:20:00,160 --> 00:20:01,440
handled this was a great

665
00:20:01,440 --> 00:20:03,440
test example if i was an attacker to see

666
00:20:03,440 --> 00:20:04,960
what i could get away with and over how

667
00:20:04,960 --> 00:20:07,840
much time

668
00:20:07,840 --> 00:20:10,559
and lastly left pad this is this may

669
00:20:10,559 --> 00:20:11,679
quit the headlines and you might not

670
00:20:11,679 --> 00:20:12,400
think of this as a

671
00:20:12,400 --> 00:20:13,600
supply chain attack and you've probably

672
00:20:13,600 --> 00:20:15,360
heard of it but i want to point out that

673
00:20:15,360 --> 00:20:17,520
it is still service disruption

674
00:20:17,520 --> 00:20:20,720
so on may sorry on march 11 2016

675
00:20:20,720 --> 00:20:22,000
a developer who maintained a small

676
00:20:22,000 --> 00:20:24,320
library called kik kik on npm was

677
00:20:24,320 --> 00:20:25,840
approached by kik.com which is the

678
00:20:25,840 --> 00:20:27,440
canadian messaging app

679
00:20:27,440 --> 00:20:30,000
to change the name of his package um he

680
00:20:30,000 --> 00:20:31,440
refused and they didn't want to pay the

681
00:20:31,440 --> 00:20:32,960
amount that he proposed to take over

682
00:20:32,960 --> 00:20:34,000
that

683
00:20:34,000 --> 00:20:36,880
that name a week later on march 18th

684
00:20:36,880 --> 00:20:38,799
kick.com lawyers went to npm

685
00:20:38,799 --> 00:20:39,840
who agreed that this could create

686
00:20:39,840 --> 00:20:41,600
confusion and handed the kick library

687
00:20:41,600 --> 00:20:43,600
name over to kik.com

688
00:20:43,600 --> 00:20:45,840
just a few days later on march 20th the

689
00:20:45,840 --> 00:20:47,440
developer sent an angry email to npm

690
00:20:47,440 --> 00:20:49,520
about this decision he wrote

691
00:20:49,520 --> 00:20:51,360
i think i have the right of deleting all

692
00:20:51,360 --> 00:20:52,559
my stuff

693
00:20:52,559 --> 00:20:54,080
and that's exactly what he did removing

694
00:20:54,080 --> 00:20:56,320
273 of his packages

695
00:20:56,320 --> 00:20:59,120
on march 22nd millions of developers

696
00:20:59,120 --> 00:21:00,159
experienced

697
00:21:00,159 --> 00:21:01,919
exactly that when their packages were no

698
00:21:01,919 --> 00:21:03,679
longer run because they were missing a

699
00:21:03,679 --> 00:21:05,679
left pad library which most of them

700
00:21:05,679 --> 00:21:06,960
didn't even know they needed

701
00:21:06,960 --> 00:21:08,559
that the same developer had owned and

702
00:21:08,559 --> 00:21:11,200
deleted it's a tiny function that you

703
00:21:11,200 --> 00:21:12,320
could write yourself

704
00:21:12,320 --> 00:21:14,080
11 lines of code to add characters at

705
00:21:14,080 --> 00:21:15,440
the beginning of a string

706
00:21:15,440 --> 00:21:17,120
but so many other packages depend on

707
00:21:17,120 --> 00:21:18,880
that to be able to function

708
00:21:18,880 --> 00:21:20,480
two hours later npm made the

709
00:21:20,480 --> 00:21:22,000
controversial decision to republish the

710
00:21:22,000 --> 00:21:23,919
deleted package

711
00:21:23,919 --> 00:21:25,440
this wasn't a malicious attacker like i

712
00:21:25,440 --> 00:21:26,799
said and so it's weird to think about

713
00:21:26,799 --> 00:21:28,640
about this as a supply chain attack but

714
00:21:28,640 --> 00:21:31,280
but i do um the developer himself was

715
00:21:31,280 --> 00:21:31,679
mad

716
00:21:31,679 --> 00:21:32,960
i don't think he understood the impact

717
00:21:32,960 --> 00:21:35,120
this would have um it's more about just

718
00:21:35,120 --> 00:21:36,559
showing how interconnected all of our

719
00:21:36,559 --> 00:21:37,760
software is and how

720
00:21:37,760 --> 00:21:39,360
few know the dependencies that they

721
00:21:39,360 --> 00:21:41,280
truly depend on right like

722
00:21:41,280 --> 00:21:42,480
the developer didn't know it's going to

723
00:21:42,480 --> 00:21:44,480
have the effect that it did users didn't

724
00:21:44,480 --> 00:21:46,000
know that they were using this package

725
00:21:46,000 --> 00:21:47,840
it caused major service disruption right

726
00:21:47,840 --> 00:21:49,039
that's still something that i would be

727
00:21:49,039 --> 00:21:50,240
worried about happening in my

728
00:21:50,240 --> 00:21:52,240
environment

729
00:21:52,240 --> 00:21:53,840
so looking at some of these together

730
00:21:53,840 --> 00:21:56,480
right i only picked six attacks

731
00:21:56,480 --> 00:21:58,080
this isn't a complete overview but more

732
00:21:58,080 --> 00:21:59,600
of a reminder in case you didn't realize

733
00:21:59,600 --> 00:22:00,799
like we've been seeing those attacks for

734
00:22:00,799 --> 00:22:02,080
a long time

735
00:22:02,080 --> 00:22:04,559
uh since at least 2015 uh supply chain

736
00:22:04,559 --> 00:22:05,440
attacks that affect

737
00:22:05,440 --> 00:22:06,799
server software have been have been

738
00:22:06,799 --> 00:22:09,520
occurring in in in our world

739
00:22:09,520 --> 00:22:10,720
um and there's a lot more examples that

740
00:22:10,720 --> 00:22:12,159
i could have listed this is just six of

741
00:22:12,159 --> 00:22:13,679
the examples that i chose to focus on

742
00:22:13,679 --> 00:22:14,880
today

743
00:22:14,880 --> 00:22:16,559
so now that i've sufficiently scared you

744
00:22:16,559 --> 00:22:18,080
all and you know

745
00:22:18,080 --> 00:22:19,679
told the great stories that i find very

746
00:22:19,679 --> 00:22:21,760
interesting what should we be doing

747
00:22:21,760 --> 00:22:23,919
right as much as we want to think that

748
00:22:23,919 --> 00:22:24,880
we're all going to be dealing with the

749
00:22:24,880 --> 00:22:25,280
next

750
00:22:25,280 --> 00:22:27,039
super scary crazy supply chain

751
00:22:27,039 --> 00:22:29,200
compromise if you have a software supply

752
00:22:29,200 --> 00:22:30,480
chain security issue it's

753
00:22:30,480 --> 00:22:32,880
uh probably your fault did you forget to

754
00:22:32,880 --> 00:22:34,559
update your dependencies again

755
00:22:34,559 --> 00:22:36,320
um this is about basic hygiene right

756
00:22:36,320 --> 00:22:38,559
reviewing and patching your dependencies

757
00:22:38,559 --> 00:22:41,440
boring super boring but that's it right

758
00:22:41,440 --> 00:22:43,039
white source found in the latest state

759
00:22:43,039 --> 00:22:45,039
of open source vulnerabilities report

760
00:22:45,039 --> 00:22:47,200
that 85 of open source vulnerabilities

761
00:22:47,200 --> 00:22:49,440
have a fix available at disclosure

762
00:22:49,440 --> 00:22:51,919
all you need to do is apply them and

763
00:22:51,919 --> 00:22:53,360
that's why this is boring advice that

764
00:22:53,360 --> 00:22:54,000
people don't want to fall

765
00:22:54,000 --> 00:22:55,280
it's like brushing your teeth or washing

766
00:22:55,280 --> 00:22:56,880
your hands for 20 seconds right we all

767
00:22:56,880 --> 00:22:57,679
know that we should

768
00:22:57,679 --> 00:22:59,120
we should be doing this we should be

769
00:22:59,120 --> 00:23:00,720
following the what our dentists and

770
00:23:00,720 --> 00:23:02,000
doctors tell us

771
00:23:02,000 --> 00:23:04,960
um and our security teams tell us but

772
00:23:04,960 --> 00:23:06,159
it's still it's still hard to kind of

773
00:23:06,159 --> 00:23:09,280
wrap your head around sometimes

774
00:23:09,280 --> 00:23:10,640
um so let's talk about what you can do

775
00:23:10,640 --> 00:23:13,039
as a developer like i said boring advice

776
00:23:13,039 --> 00:23:14,960
um but you know you should really be

777
00:23:14,960 --> 00:23:16,080
doing it

778
00:23:16,080 --> 00:23:17,760
first figure out what your dependencies

779
00:23:17,760 --> 00:23:19,760
are now that can be kind of hard

780
00:23:19,760 --> 00:23:21,200
if you're running on github there's a

781
00:23:21,200 --> 00:23:22,559
feature called a dependency graph that

782
00:23:22,559 --> 00:23:23,919
lets you see these things

783
00:23:23,919 --> 00:23:25,200
if you're a developer of a package

784
00:23:25,200 --> 00:23:27,360
explicitly declare dependencies

785
00:23:27,360 --> 00:23:28,880
consider using a lock file and keeping

786
00:23:28,880 --> 00:23:30,720
it updated

787
00:23:30,720 --> 00:23:31,840
next and this is the step that

788
00:23:31,840 --> 00:23:34,159
everyone's too lazy to do but remove

789
00:23:34,159 --> 00:23:36,240
your unnecessary dependencies right

790
00:23:36,240 --> 00:23:37,520
you don't have to patch something that

791
00:23:37,520 --> 00:23:40,159
you don't have that's like the

792
00:23:40,159 --> 00:23:42,400
like zen zen art of patching don't patch

793
00:23:42,400 --> 00:23:43,600
things that are not not in your

794
00:23:43,600 --> 00:23:44,559
environment

795
00:23:44,559 --> 00:23:45,760
uh so for example if you're using

796
00:23:45,760 --> 00:23:47,279
containers use a scratch image or a

797
00:23:47,279 --> 00:23:48,880
minimal base image that's a great way of

798
00:23:48,880 --> 00:23:50,000
getting rid of things that you don't

799
00:23:50,000 --> 00:23:52,480
actually need in your environment

800
00:23:52,480 --> 00:23:54,720
automate security updates

801
00:23:54,720 --> 00:23:56,240
if you can automatically pull in

802
00:23:56,240 --> 00:23:57,760
security fixes for your code right i

803
00:23:57,760 --> 00:23:59,200
know and i know i said earlier

804
00:23:59,200 --> 00:24:01,360
in one of the examples there are some

805
00:24:01,360 --> 00:24:02,480
cases where you might not want to do

806
00:24:02,480 --> 00:24:03,679
that for example if you're automatically

807
00:24:03,679 --> 00:24:05,520
then publishing or not having a human

808
00:24:05,520 --> 00:24:07,919
review anything that goes on but this is

809
00:24:07,919 --> 00:24:09,600
so so so important and if you take one

810
00:24:09,600 --> 00:24:11,840
to do away from this talk it's do this

811
00:24:11,840 --> 00:24:13,520
if your testing isn't good enough that

812
00:24:13,520 --> 00:24:15,440
you feel okay automatically

813
00:24:15,440 --> 00:24:17,520
pushing security updates then please pay

814
00:24:17,520 --> 00:24:20,000
close attention to security advisories

815
00:24:20,000 --> 00:24:22,960
um security advisory emails or alerts or

816
00:24:22,960 --> 00:24:24,320
twitter or however you get your latest

817
00:24:24,320 --> 00:24:26,080
vulnerability information

818
00:24:26,080 --> 00:24:28,320
and know that you can patch right just

819
00:24:28,320 --> 00:24:29,279
because you're

820
00:24:29,279 --> 00:24:31,120
you're not patching on a regular basis

821
00:24:31,120 --> 00:24:32,320
you want to make sure that you're

822
00:24:32,320 --> 00:24:32,799
actually

823
00:24:32,799 --> 00:24:34,320
using a recent enough version that you

824
00:24:34,320 --> 00:24:35,760
can apply a patch like that the patch

825
00:24:35,760 --> 00:24:37,120
will come out for that version

826
00:24:37,120 --> 00:24:38,320
and then it's not disruptive to your

827
00:24:38,320 --> 00:24:39,600
environment to actually apply that patch

828
00:24:39,600 --> 00:24:40,480
because if you have to do something

829
00:24:40,480 --> 00:24:41,200
urgently

830
00:24:41,200 --> 00:24:43,360
you want to be able to do it testing out

831
00:24:43,360 --> 00:24:44,799
your patching

832
00:24:44,799 --> 00:24:48,159
and deployment pipeline great activity

833
00:24:48,159 --> 00:24:49,760
to do in corn times

834
00:24:49,760 --> 00:24:51,120
great great thing you can go spend a

835
00:24:51,120 --> 00:24:52,400
couple hours on and see if you can patch

836
00:24:52,400 --> 00:24:53,520
something

837
00:24:53,520 --> 00:24:56,159
and lastly verify if and where you can

838
00:24:56,159 --> 00:24:57,360
what your dependencies are that you're

839
00:24:57,360 --> 00:24:57,840
using

840
00:24:57,840 --> 00:24:59,600
if you're part of a big company conduct

841
00:24:59,600 --> 00:25:01,600
your own audit publish the results

842
00:25:01,600 --> 00:25:02,799
in a way that's respectful to the

843
00:25:02,799 --> 00:25:05,440
maintainers run tools like npm audit to

844
00:25:05,440 --> 00:25:06,799
verify your packages before you pull

845
00:25:06,799 --> 00:25:07,600
them

846
00:25:07,600 --> 00:25:09,120
scan your code and packages for known

847
00:25:09,120 --> 00:25:11,120
vulnerabilities check the checksums of

848
00:25:11,120 --> 00:25:12,559
what you actually pull to verify that

849
00:25:12,559 --> 00:25:13,600
that's what you expected check the

850
00:25:13,600 --> 00:25:14,400
signatures

851
00:25:14,400 --> 00:25:17,200
like do do that check that you you would

852
00:25:17,200 --> 00:25:18,480
want to be able to do to have trust in

853
00:25:18,480 --> 00:25:19,039
your in

854
00:25:19,039 --> 00:25:19,840
in your environment and your

855
00:25:19,840 --> 00:25:22,400
dependencies in your code so it's really

856
00:25:22,400 --> 00:25:23,200
boring advice

857
00:25:23,200 --> 00:25:24,720
remove what you don't need patch what

858
00:25:24,720 --> 00:25:26,400
you do and do it regularly

859
00:25:26,400 --> 00:25:30,480
uh patch patch and if you're

860
00:25:30,480 --> 00:25:32,000
using github there's a couple features

861
00:25:32,000 --> 00:25:33,600
here that you can use to to

862
00:25:33,600 --> 00:25:34,960
to address some of these things security

863
00:25:34,960 --> 00:25:37,120
alerts notify you of vulnerabilities in

864
00:25:37,120 --> 00:25:39,120
code dependencies that you have

865
00:25:39,120 --> 00:25:41,120
automated security updates generate a pr

866
00:25:41,120 --> 00:25:43,279
to actually move you to a fixed version

867
00:25:43,279 --> 00:25:44,880
um those are generated automatically

868
00:25:44,880 --> 00:25:46,720
when a new vulnerable

869
00:25:46,720 --> 00:25:49,120
oh sorry vulnerable dependency is found

870
00:25:49,120 --> 00:25:50,400
and these work for

871
00:25:50,400 --> 00:25:52,000
various environments including various

872
00:25:52,000 --> 00:25:54,400
ecosystems including composer maven npm

873
00:25:54,400 --> 00:25:56,960
nougat pip and ruby gems those features

874
00:25:56,960 --> 00:25:59,039
are on by default on public repos go

875
00:25:59,039 --> 00:26:02,480
turn it on for your private repos please

876
00:26:02,480 --> 00:26:04,960
and then lastly to learn more oops i

877
00:26:04,960 --> 00:26:06,880
lost my screen

878
00:26:06,880 --> 00:26:10,400
uh to learn more uh there's a list uh

879
00:26:10,400 --> 00:26:12,480
here of some links you can go check out

880
00:26:12,480 --> 00:26:13,840
one the first one there is a list of

881
00:26:13,840 --> 00:26:15,760
supply chain compromises um published by

882
00:26:15,760 --> 00:26:16,240
the

883
00:26:16,240 --> 00:26:18,799
cloud native compute foundation and then

884
00:26:18,799 --> 00:26:20,080
i have some links to some features you

885
00:26:20,080 --> 00:26:23,360
should be enabling in your environment

886
00:26:23,360 --> 00:26:25,840
that's it

887
00:26:29,200 --> 00:26:31,760
hey sorry about that was trying to

888
00:26:31,760 --> 00:26:32,400
reshare

889
00:26:32,400 --> 00:26:35,279
my my screen to come back in and made a

890
00:26:35,279 --> 00:26:36,080
little silly

891
00:26:36,080 --> 00:26:39,120
uh mistake so thank you so much

892
00:26:39,120 --> 00:26:41,600
i thought that was really interesting to

893
00:26:41,600 --> 00:26:42,640
listen to

894
00:26:42,640 --> 00:26:46,720
uh security remains so important

895
00:26:46,720 --> 00:26:49,360
uh to all this and and one of the things

896
00:26:49,360 --> 00:26:49,840
that

897
00:26:49,840 --> 00:26:53,600
i um i really enjoyed hearing

898
00:26:53,600 --> 00:26:57,120
uh were about the supply chain attacks

899
00:26:57,120 --> 00:26:58,480
specifically

900
00:26:58,480 --> 00:27:01,520
uh one of my favorite ones obviously is

901
00:27:01,520 --> 00:27:03,200
left pad

902
00:27:03,200 --> 00:27:06,159
and it's not really even a supply chain

903
00:27:06,159 --> 00:27:07,919
attack if you think about it

904
00:27:07,919 --> 00:27:11,120
it's simply um almost

905
00:27:11,120 --> 00:27:14,640
in the same way that um seth

906
00:27:14,640 --> 00:27:18,080
from google when he removed

907
00:27:18,080 --> 00:27:22,320
his chef um

908
00:27:22,399 --> 00:27:24,159
had issues with who was using his his a

909
00:27:24,159 --> 00:27:26,480
package downstream he was like

910
00:27:26,480 --> 00:27:29,200
yeah i'll take clip offline right and

911
00:27:29,200 --> 00:27:30,480
change licensing and things like that

912
00:27:30,480 --> 00:27:31,440
like that's

913
00:27:31,440 --> 00:27:33,200
i think developers can do these things

914
00:27:33,200 --> 00:27:34,960
for various reasons right

915
00:27:34,960 --> 00:27:37,760
yeah i love seth and um i think one of

916
00:27:37,760 --> 00:27:39,600
the things that i got the most out of it

917
00:27:39,600 --> 00:27:40,559
is that

918
00:27:40,559 --> 00:27:44,399
um sometimes um you make decisions about

919
00:27:44,399 --> 00:27:46,960
the code that's used that you create

920
00:27:46,960 --> 00:27:50,399
and um and and it has

921
00:27:50,399 --> 00:27:53,360
repercussions um and sometimes those

922
00:27:53,360 --> 00:27:54,640
repercussions

923
00:27:54,640 --> 00:27:58,640
are are to some benefit some

924
00:27:58,640 --> 00:28:01,440
it's not quite as much uh and so that's

925
00:28:01,440 --> 00:28:03,200
something that um

926
00:28:03,200 --> 00:28:05,919
you know it's really interesting to to

927
00:28:05,919 --> 00:28:07,440
to learn about through

928
00:28:07,440 --> 00:28:11,600
how you you you can't just always prepay

929
00:28:11,600 --> 00:28:15,039
prepared for um the obvious

930
00:28:15,039 --> 00:28:18,559
intrusion agreed and i think it's been

931
00:28:18,559 --> 00:28:19,760
really interesting i've been looking at

932
00:28:19,760 --> 00:28:20,720
a lot of different

933
00:28:20,720 --> 00:28:22,320
uh supply chain attacks focused on

934
00:28:22,320 --> 00:28:24,000
server attacks i should say not

935
00:28:24,000 --> 00:28:26,000
there's also attacks to like put things

936
00:28:26,000 --> 00:28:27,520
in a you know

937
00:28:27,520 --> 00:28:30,080
apple app store app or like into you

938
00:28:30,080 --> 00:28:31,440
know

939
00:28:31,440 --> 00:28:33,840
some piece of remote software that you

940
00:28:33,840 --> 00:28:36,000
use to like ss you know anyways

941
00:28:36,000 --> 00:28:37,600
i'm looking at what's on the server side

942
00:28:37,600 --> 00:28:39,120
and it's interesting to see

943
00:28:39,120 --> 00:28:42,559
um how i mean

944
00:28:42,559 --> 00:28:43,840
how often this is just caught by the

945
00:28:43,840 --> 00:28:45,039
community like the people who are

946
00:28:45,039 --> 00:28:46,159
finding this are people who are going

947
00:28:46,159 --> 00:28:46,799
huh

948
00:28:46,799 --> 00:28:49,120
that looks weird and we're really lucky

949
00:28:49,120 --> 00:28:51,039
when that happens within an hour or two

950
00:28:51,039 --> 00:28:52,799
hours or four hours of something

951
00:28:52,799 --> 00:28:55,679
weird happening right um a lot of the

952
00:28:55,679 --> 00:28:57,520
time though it's

953
00:28:57,520 --> 00:28:59,200
people people aren't paying attention

954
00:28:59,200 --> 00:29:01,200
because you know everybody has too much

955
00:29:01,200 --> 00:29:02,320
 going on

956
00:29:02,320 --> 00:29:04,480
uh so so it's good to see people step up

957
00:29:04,480 --> 00:29:06,000
and and and

958
00:29:06,000 --> 00:29:07,600
pay attention where they can be paying

959
00:29:07,600 --> 00:29:09,440
attention but we can't expect that to

960
00:29:09,440 --> 00:29:09,919
happen

961
00:29:09,919 --> 00:29:11,279
right we need people we need to be able

962
00:29:11,279 --> 00:29:12,960
to verify this stuff automate this stuff

963
00:29:12,960 --> 00:29:14,799
so that we don't have to rely on on

964
00:29:14,799 --> 00:29:17,440
humans to be doing this work for free

965
00:29:17,440 --> 00:29:20,880
that that's really a great point and i

966
00:29:20,880 --> 00:29:22,480
think that we don't

967
00:29:22,480 --> 00:29:26,159
sometimes think quite as deep

968
00:29:26,159 --> 00:29:28,960
uh when we start prepping we we think

969
00:29:28,960 --> 00:29:29,520
you know

970
00:29:29,520 --> 00:29:32,960
a couple levels but we we like um

971
00:29:32,960 --> 00:29:36,159
like how many osi uh layers we have

972
00:29:36,159 --> 00:29:38,559
um in the stack you sometimes have to

973
00:29:38,559 --> 00:29:40,159
think about all

974
00:29:40,159 --> 00:29:42,159
layers and when you think about security

975
00:29:42,159 --> 00:29:44,000
sometimes you have to peel it

976
00:29:44,000 --> 00:29:46,159
like like an onion gonna get through all

977
00:29:46,159 --> 00:29:47,600
the layers to make sure that

978
00:29:47,600 --> 00:29:50,080
you've really secured all aspects of not

979
00:29:50,080 --> 00:29:51,760
only your business but the applications

980
00:29:51,760 --> 00:29:54,640
that come along with it

981
00:29:54,640 --> 00:29:57,760
so hey maya you want to help me um close

982
00:29:57,760 --> 00:29:58,080
the

983
00:29:58,080 --> 00:30:01,120
uh section of the evening sure

984
00:30:01,120 --> 00:30:04,720
i'm gonna put on um i like run the

985
00:30:04,720 --> 00:30:06,720
jewels i'm a big fan of them

986
00:30:06,720 --> 00:30:11,440
um so let's uh

987
00:30:11,600 --> 00:30:15,279
this week on yankee in the brain

988
00:30:15,840 --> 00:30:17,919
finish up the evening thank you so much

989
00:30:17,919 --> 00:30:19,360
maya um

990
00:30:19,360 --> 00:30:22,640
another great talk and

991
00:30:22,640 --> 00:30:24,960
um i really appreciate you being part of

992
00:30:24,960 --> 00:30:26,000
this and

993
00:30:26,000 --> 00:30:28,799
um is there anything you want to share

994
00:30:28,799 --> 00:30:29,360
um

995
00:30:29,360 --> 00:30:31,760
about anything you're doing or anybody

996
00:30:31,760 --> 00:30:33,120
you want to say

997
00:30:33,120 --> 00:30:36,000
a big thanks in all this to i think i'm

998
00:30:36,000 --> 00:30:36,399
just

999
00:30:36,399 --> 00:30:38,000
really excited for the entire community

1000
00:30:38,000 --> 00:30:39,840
to put this on and volunteers like

1001
00:30:39,840 --> 00:30:41,440
yourself for for making it happen

1002
00:30:41,440 --> 00:30:43,760
i'm really thankful for that well you

1003
00:30:43,760 --> 00:30:45,279
know it's it's

1004
00:30:45,279 --> 00:30:49,200
you know i i i like to use the word um

1005
00:30:49,200 --> 00:30:51,440
i guess the word is dope when i talk

1006
00:30:51,440 --> 00:30:53,760
about opportunities like this is a dope

1007
00:30:53,760 --> 00:30:54,720
opportunity

1008
00:30:54,720 --> 00:30:56,720
and so um you're part of that

1009
00:30:56,720 --> 00:30:58,399
opportunity so thank you for giving me

1010
00:30:58,399 --> 00:31:00,159
uh some of your time tonight

1011
00:31:00,159 --> 00:31:04,880
thank you have a good night cheers

