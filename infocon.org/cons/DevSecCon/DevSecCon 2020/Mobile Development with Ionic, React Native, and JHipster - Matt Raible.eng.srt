1
00:00:00,000 --> 00:00:03,240
hello nice to be here so today I'll be

2
00:00:03,240 --> 00:00:05,549
talking about mobile development with

3
00:00:05,549 --> 00:00:07,680
ionic react native and JE hipster and I

4
00:00:07,680 --> 00:00:09,510
did pre record this talk just because

5
00:00:09,510 --> 00:00:10,980
there's a lot of things that take a long

6
00:00:10,980 --> 00:00:13,769
time to occur so I trim those out so

7
00:00:13,769 --> 00:00:17,030
I'll go ahead and share my screen

8
00:00:21,590 --> 00:00:24,689
hello developers and welcome to mobile

9
00:00:24,689 --> 00:00:27,630
development with je hipster ionic and

10
00:00:27,630 --> 00:00:30,840
react native my name is Matt Raible I

11
00:00:30,840 --> 00:00:32,790
grew up in the backwoods of Montana with

12
00:00:32,790 --> 00:00:35,850
no electricity no running water I had to

13
00:00:35,850 --> 00:00:38,250
walk two miles to the bus stop every day

14
00:00:38,250 --> 00:00:40,290
and it felt like it was uphill both ways

15
00:00:40,290 --> 00:00:42,660
I live in Denver Colorado my beautiful

16
00:00:42,660 --> 00:00:44,670
wife Trish my two awesome kids Abbie and

17
00:00:44,670 --> 00:00:46,739
Jack I also have a middle child

18
00:00:46,739 --> 00:00:49,399
his name is jefe I bought it off eBay in

19
00:00:49,399 --> 00:00:52,829
2004 and restored him over the next 12

20
00:00:52,829 --> 00:00:54,149
years Porsche engine Porsche

21
00:00:54,149 --> 00:00:56,219
transmission he really gets up and goes

22
00:00:56,219 --> 00:00:58,680
I work for a company called octa octo

23
00:00:58,680 --> 00:01:00,239
the word means a unit of cloud

24
00:01:00,239 --> 00:01:02,250
measurement so if it's an a doc today

25
00:01:02,250 --> 00:01:04,500
that means it's very cloudy zero Octus

26
00:01:04,500 --> 00:01:07,170
means nice and sunny so we're at cloud

27
00:01:07,170 --> 00:01:08,400
based authentication and authorization

28
00:01:08,400 --> 00:01:11,310
company we support a lot to open ID

29
00:01:11,310 --> 00:01:13,590
connect and sam'l so if you're looking

30
00:01:13,590 --> 00:01:16,320
for some way to authorize your users

31
00:01:16,320 --> 00:01:19,110
look to us so today I'll talk a little

32
00:01:19,110 --> 00:01:21,119
bit about J hipster show you how to use

33
00:01:21,119 --> 00:01:22,560
it show you how to build a progressive

34
00:01:22,560 --> 00:01:24,450
web application with it and then I'll

35
00:01:24,450 --> 00:01:26,220
show you how to use ionic forge a

36
00:01:26,220 --> 00:01:27,630
hipster and then I'll show you how to

37
00:01:27,630 --> 00:01:29,939
use J hipster ignite and at the end I'll

38
00:01:29,939 --> 00:01:31,680
tell you about what's coming with J

39
00:01:31,680 --> 00:01:34,229
hipster so the first part will be

40
00:01:34,229 --> 00:01:36,000
talking about what is J hipster how to

41
00:01:36,000 --> 00:01:38,340
install and use it how you can use J

42
00:01:38,340 --> 00:01:40,829
hipster to develop microservices and use

43
00:01:40,829 --> 00:01:43,049
Open ID connect and then progressive web

44
00:01:43,049 --> 00:01:45,329
applications with J hipster so J hipster

45
00:01:45,329 --> 00:01:47,850
started as just a generator that creates

46
00:01:47,850 --> 00:01:49,200
a spring boot and angular apps

47
00:01:49,200 --> 00:01:51,240
well now it's developed into much more

48
00:01:51,240 --> 00:01:52,590
it's more of like a development platform

49
00:01:52,590 --> 00:01:54,869
now because we generate docker files we

50
00:01:54,869 --> 00:01:56,700
generate kubernetes files we allow you

51
00:01:56,700 --> 00:01:58,680
to create micro services so there's all

52
00:01:58,680 --> 00:02:00,329
this other stuff that we do not only

53
00:02:00,329 --> 00:02:03,390
that but we support react and view to so

54
00:02:03,390 --> 00:02:05,130
J hipsters goals are to create a high

55
00:02:05,130 --> 00:02:07,140
performance or robust Java stack on the

56
00:02:07,140 --> 00:02:09,479
server side whispering boo it's a sleek

57
00:02:09,479 --> 00:02:11,190
modern mobile first front end with

58
00:02:11,190 --> 00:02:13,740
angular and bootstrap obviously angular

59
00:02:13,740 --> 00:02:15,780
using react and that's not angular but

60
00:02:15,780 --> 00:02:17,940
angular was our first one and we try to

61
00:02:17,940 --> 00:02:20,550
use bootstrap for not only view but for

62
00:02:20,550 --> 00:02:22,440
react as well we support a robust

63
00:02:22,440 --> 00:02:24,270
microservices architecture with J

64
00:02:24,270 --> 00:02:26,820
hipster registry based on Netflix Eureka

65
00:02:26,820 --> 00:02:29,640
and elastic stack and docker and then we

66
00:02:29,640 --> 00:02:31,050
have a powerful workflow to build your

67
00:02:31,050 --> 00:02:32,910
application with web pack and maven or

68
00:02:32,910 --> 00:02:35,310
Gradle so basically you don't have to

69
00:02:35,310 --> 00:02:36,690
restart your app all the time

70
00:02:36,690 --> 00:02:38,520
it'll just detect when things have

71
00:02:38,520 --> 00:02:40,560
changed and restart it for you so how do

72
00:02:40,560 --> 00:02:42,900
you used a hipster NPM install - gee

73
00:02:42,900 --> 00:02:44,940
generator J hipster then you'll create a

74
00:02:44,940 --> 00:02:46,620
directory and CD into it and then you'll

75
00:02:46,620 --> 00:02:48,900
just run J hipster we also support micro

76
00:02:48,900 --> 00:02:50,850
services so J hipster registry is your

77
00:02:50,850 --> 00:02:52,740
service registry and then we also have a

78
00:02:52,740 --> 00:02:54,240
gateway on the front end there's also

79
00:02:54,240 --> 00:02:56,580
some examples that I have J hipster six

80
00:02:56,580 --> 00:02:58,950
demo is a quick blog post application

81
00:02:58,950 --> 00:03:01,920
that I created and that has a YouTube

82
00:03:01,920 --> 00:03:03,750
tutorial on how to create the whole

83
00:03:03,750 --> 00:03:05,730
thing in about 15 minutes I also created

84
00:03:05,730 --> 00:03:08,520
a 21 points Health application and 21

85
00:03:08,520 --> 00:03:10,050
points health is something that I use to

86
00:03:10,050 --> 00:03:12,060
monitor my health just like actuator and

87
00:03:12,060 --> 00:03:14,160
monitors spring boots health 21 points

88
00:03:14,160 --> 00:03:16,320
is basically you can get 21 points in a

89
00:03:16,320 --> 00:03:18,480
week and you can get 3 points a day so

90
00:03:18,480 --> 00:03:20,760
you get a point if you eat well for me

91
00:03:20,760 --> 00:03:22,560
it was a low sugar so I try not to eat

92
00:03:22,560 --> 00:03:24,810
sugar - if you exercise you get a point

93
00:03:24,810 --> 00:03:26,970
and the third one is if you don't drink

94
00:03:26,970 --> 00:03:29,340
you get a point you can get 21 points in

95
00:03:29,340 --> 00:03:31,500
a week and and what I found is if I get

96
00:03:31,500 --> 00:03:33,330
above 18 points typically I'll lose

97
00:03:33,330 --> 00:03:35,520
weight feel really good if I get 15

98
00:03:35,520 --> 00:03:38,010
points typically maintained and lower

99
00:03:38,010 --> 00:03:38,640
than that

100
00:03:38,640 --> 00:03:40,980
not so good and I've even come to the

101
00:03:40,980 --> 00:03:43,080
conclusion that if I get lower than 10

102
00:03:43,080 --> 00:03:45,090
especially a couple weeks in a row I

103
00:03:45,090 --> 00:03:47,550
usually get 6 so I stop blaming it on my

104
00:03:47,550 --> 00:03:49,200
kids when I got sick and now I know it's

105
00:03:49,200 --> 00:03:50,910
my fault so what we're going to do today

106
00:03:50,910 --> 00:03:53,070
is actually use that 21 points health

107
00:03:53,070 --> 00:03:55,680
system that I put together to create a

108
00:03:55,680 --> 00:03:58,350
new app and then we'll create our mobile

109
00:03:58,350 --> 00:04:00,270
apps based on that as well so but first

110
00:04:00,270 --> 00:04:01,830
before we get to the demo I want to

111
00:04:01,830 --> 00:04:03,270
mention progressive Web Apps real quick

112
00:04:03,270 --> 00:04:04,860
so progressive web apps have to

113
00:04:04,860 --> 00:04:06,780
originate from a secure location load

114
00:04:06,780 --> 00:04:08,610
while offline and reference a web app

115
00:04:08,610 --> 00:04:10,650
manifest the web app manifest gives it

116
00:04:10,650 --> 00:04:12,720
details on how to install it basically

117
00:04:12,720 --> 00:04:14,400
what page to load when it pops up on

118
00:04:14,400 --> 00:04:17,370
your mobile device and icons things of

119
00:04:17,370 --> 00:04:17,790
that sort

120
00:04:17,790 --> 00:04:19,769
loading offline is done with service

121
00:04:19,769 --> 00:04:21,660
workers and so they can be installed

122
00:04:21,660 --> 00:04:23,880
they look like native apps distributed

123
00:04:23,880 --> 00:04:25,530
through the web and they're fast so to

124
00:04:25,530 --> 00:04:27,660
enable a PW a and J hipster

125
00:04:27,660 --> 00:04:29,580
you generate your app there's in the

126
00:04:29,580 --> 00:04:32,750
index.html this code that needs to be

127
00:04:32,750 --> 00:04:34,830
uncommented so now I'll do a demo of

128
00:04:34,830 --> 00:04:36,990
creating a J hipster app generating

129
00:04:36,990 --> 00:04:38,970
entities into that app and convert the

130
00:04:38,970 --> 00:04:41,190
app to be a PW a and then I'll show you

131
00:04:41,190 --> 00:04:43,980
the lighthouse score afterwards in M

132
00:04:43,980 --> 00:04:46,740
rable Mobile J hipster that's where all

133
00:04:46,740 --> 00:04:49,140
the code that I'm creating today resides

134
00:04:49,140 --> 00:04:51,510
and in here there's this demo doc file

135
00:04:51,510 --> 00:04:53,460
well I've loaded that up with my handy

136
00:04:53,460 --> 00:04:55,380
asciidoctor plug-in here you can see if

137
00:04:55,380 --> 00:04:57,600
I toggle it off it's just raw asciidoc

138
00:04:57,600 --> 00:04:59,430
if I toggle back on it looks pretty nice

139
00:04:59,430 --> 00:05:00,570
and it shows that there's some

140
00:05:00,570 --> 00:05:04,020
prerequisites Java 8 no 10 yarn and

141
00:05:04,020 --> 00:05:06,480
cocoa pods so I don't have any versions

142
00:05:06,480 --> 00:05:08,670
on any of the npm installs here and so

143
00:05:08,670 --> 00:05:10,260
if you try this in the future I can't

144
00:05:10,260 --> 00:05:12,360
guarantee it works it should work but

145
00:05:12,360 --> 00:05:13,680
rather than locking down to a certain

146
00:05:13,680 --> 00:05:15,360
version these instructions just assume

147
00:05:15,360 --> 00:05:17,550
latest version so everything so you

148
00:05:17,550 --> 00:05:19,380
start by installing J hipster which I've

149
00:05:19,380 --> 00:05:21,630
already done an NPM install generator J

150
00:05:21,630 --> 00:05:23,490
hipster create a new directory make

151
00:05:23,490 --> 00:05:25,470
their mobile J hipster and then download

152
00:05:25,470 --> 00:05:28,560
this 21 points health JD l JD l stands

153
00:05:28,560 --> 00:05:30,630
for J hipster domain language that's how

154
00:05:30,630 --> 00:05:32,010
we know we're hip we have our own domain

155
00:05:32,010 --> 00:05:34,080
language and you can see in here it's a

156
00:05:34,080 --> 00:05:35,880
monolith it's gonna use a base name of

157
00:05:35,880 --> 00:05:38,280
health points it's gonna use OAuth 2 for

158
00:05:38,280 --> 00:05:40,650
authentication cradle plastic search

159
00:05:40,650 --> 00:05:42,690
we're going to use react just for the

160
00:05:42,690 --> 00:05:43,919
heck of it just to show that whatever

161
00:05:43,919 --> 00:05:45,720
you have on the J hipster side doesn't

162
00:05:45,720 --> 00:05:47,520
affect what you have on the mobile side

163
00:05:47,520 --> 00:05:49,380
and then we have entities for points

164
00:05:49,380 --> 00:05:50,910
blood pressure and weight so blood

165
00:05:50,910 --> 00:05:52,290
pressure you know just systolic

166
00:05:52,290 --> 00:05:54,180
diastolic and the timestamp when you

167
00:05:54,180 --> 00:05:56,370
recorded it the weight is just a

168
00:05:56,370 --> 00:05:58,200
timestamp in your weight and then the

169
00:05:58,200 --> 00:05:59,580
points right you get a point for

170
00:05:59,580 --> 00:06:01,110
exercise you can get a point for eating

171
00:06:01,110 --> 00:06:02,490
well you get a point for alcohol so I'm

172
00:06:02,490 --> 00:06:04,020
just using integers for those rather

173
00:06:04,020 --> 00:06:05,760
than boolean x' because you know you

174
00:06:05,760 --> 00:06:07,110
could change your system someday and

175
00:06:07,110 --> 00:06:08,790
then preferences you know your weekly

176
00:06:08,790 --> 00:06:10,620
goal and the weight units and then we

177
00:06:10,620 --> 00:06:12,090
have some items in there and then

178
00:06:12,090 --> 00:06:15,000
relationships one-to-one preferences to

179
00:06:15,000 --> 00:06:17,250
user and then many-to-one for your blood

180
00:06:17,250 --> 00:06:19,680
pressure to user your weight to user and

181
00:06:19,680 --> 00:06:21,390
your points to user so they're all you

182
00:06:21,390 --> 00:06:22,950
know pointing to those users and then

183
00:06:22,950 --> 00:06:24,870
pagination rules at the bottom there so

184
00:06:24,870 --> 00:06:27,120
back to our instructions we'll create a

185
00:06:27,120 --> 00:06:29,160
back end directory and run import jdl

186
00:06:29,160 --> 00:06:30,600
from it and that will basically create

187
00:06:30,600 --> 00:06:32,040
the whole lot for us so I've already

188
00:06:32,040 --> 00:06:33,720
done that just to speed things up a bit

189
00:06:33,720 --> 00:06:35,820
and you can see if we scroll back to the

190
00:06:35,820 --> 00:06:37,979
beginning here that I start with J

191
00:06:37,979 --> 00:06:39,539
hipster version and you'll see we're

192
00:06:39,539 --> 00:06:41,040
using the latest version at least

193
00:06:41,040 --> 00:06:43,590
of today 6.8 dot zero and then I run a

194
00:06:43,590 --> 00:06:46,530
double you get to get that 21 points JH

195
00:06:46,530 --> 00:06:49,200
right there and then take is a command

196
00:06:49,200 --> 00:06:51,870
that does make dirt and CDs into it so

197
00:06:51,870 --> 00:06:53,460
it's kind of convenient I created that

198
00:06:53,460 --> 00:06:54,420
back-end directory

199
00:06:54,420 --> 00:06:57,840
I ran J hipster import jdl 21 points and

200
00:06:57,840 --> 00:06:59,340
then it goes through and creates

201
00:06:59,340 --> 00:07:00,300
everything for me

202
00:07:00,300 --> 00:07:02,190
creates a whole bunch of Java files and

203
00:07:02,190 --> 00:07:04,020
a bunch of typescript files in the front

204
00:07:04,020 --> 00:07:06,030
end it also creates database schema

205
00:07:06,030 --> 00:07:07,530
files so when you start up your database

206
00:07:07,530 --> 00:07:09,480
it creates the tables for you and it

207
00:07:09,480 --> 00:07:11,130
uses liquid base for that so you can see

208
00:07:11,130 --> 00:07:13,560
it took one minute and 26 seconds to run

209
00:07:13,560 --> 00:07:16,380
so I put this on right here put this on

210
00:07:16,380 --> 00:07:18,510
the left and now I'm just gonna start it

211
00:07:18,510 --> 00:07:21,450
alright Gradle W oh I have to start key

212
00:07:21,450 --> 00:07:24,660
click first so docker compose source

213
00:07:24,660 --> 00:07:31,800
main docker key look up - D well I have

214
00:07:31,800 --> 00:07:35,640
a shortcut for its JH key cloak up now

215
00:07:35,640 --> 00:07:37,650
everything's up and running and go ahead

216
00:07:37,650 --> 00:07:39,690
and open it up we were to login it

217
00:07:39,690 --> 00:07:41,820
redirects us to key cloak let me do

218
00:07:41,820 --> 00:07:44,640
admin admin we're logged in you can see

219
00:07:44,640 --> 00:07:46,320
there's our entities alright blood

220
00:07:46,320 --> 00:07:48,990
pressure and it uses faker J s to create

221
00:07:48,990 --> 00:07:50,670
a bunch of fake data so there is some

222
00:07:50,670 --> 00:07:53,460
data in there wait you can go to the

223
00:07:53,460 --> 00:07:55,710
administration see the metrics timings

224
00:07:55,710 --> 00:07:59,090
for certain requests and there's also

225
00:07:59,090 --> 00:08:03,750
helped in here and even swagger so if

226
00:08:03,750 --> 00:08:05,100
you just want your front-end developers

227
00:08:05,100 --> 00:08:06,600
to be able to see the swagger Doc's you

228
00:08:06,600 --> 00:08:08,280
could certainly do that and then of

229
00:08:08,280 --> 00:08:10,770
course we could switch to Spanish there

230
00:08:10,770 --> 00:08:14,370
and back to English there's on this page

231
00:08:14,370 --> 00:08:16,800
points if you were to create new points

232
00:08:16,800 --> 00:08:18,420
you would see that you could enter any

233
00:08:18,420 --> 00:08:20,580
value so I want to fix that and make it

234
00:08:20,580 --> 00:08:23,520
so we can actually just use check boxes

235
00:08:23,520 --> 00:08:25,830
right you either did it or you didn't so

236
00:08:25,830 --> 00:08:28,020
let's open up IntelliJ and make those

237
00:08:28,020 --> 00:08:30,120
changes so now if we look for points

238
00:08:30,120 --> 00:08:36,929
update TSX so if we scroll into the code

239
00:08:36,929 --> 00:08:40,610
here you'll see that we have these

240
00:08:40,610 --> 00:08:43,380
points alcohol points meals and points

241
00:08:43,380 --> 00:08:45,540
exercise so let's change those to

242
00:08:45,540 --> 00:08:48,349
checkboxes

243
00:08:50,670 --> 00:08:53,200
so that was my life templates now it's

244
00:08:53,200 --> 00:08:55,089
checkboxes well we've already built our

245
00:08:55,089 --> 00:08:56,860
app so it's not actually gonna see those

246
00:08:56,860 --> 00:08:59,710
changes but we can use NPM start and

247
00:08:59,710 --> 00:09:02,200
then it'll use browser sync load up the

248
00:09:02,200 --> 00:09:04,540
changes and if we make any UI changes it

249
00:09:04,540 --> 00:09:05,920
will automatically refresh the browser

250
00:09:05,920 --> 00:09:07,959
and it'll proxy all the requests to the

251
00:09:07,959 --> 00:09:12,250
backend so now you can see we're logged

252
00:09:12,250 --> 00:09:15,040
in if we go to points and create new

253
00:09:15,040 --> 00:09:17,020
point you can see now you've got check

254
00:09:17,020 --> 00:09:20,010
boxes right so today's been a good day

255
00:09:20,010 --> 00:09:22,270
we'll go ahead and assign that to the

256
00:09:22,270 --> 00:09:25,060
admin user you can save it you can see

257
00:09:25,060 --> 00:09:27,310
it down at the bottom and then you could

258
00:09:27,310 --> 00:09:30,820
delete it so that's all working let's

259
00:09:30,820 --> 00:09:32,560
see anything else we need to do I

260
00:09:32,560 --> 00:09:35,860
turning off fakers so I'm gonna close

261
00:09:35,860 --> 00:09:40,330
down this one and then I don't want to

262
00:09:40,330 --> 00:09:42,520
use faker because with the mobile apps

263
00:09:42,520 --> 00:09:44,680
it shows so much data it's kind of nicer

264
00:09:44,680 --> 00:09:46,209
just to have you know one record show up

265
00:09:46,209 --> 00:09:48,370
and everything's a bit cleaner so that's

266
00:09:48,370 --> 00:09:49,839
why I'm turning off faker so if you go

267
00:09:49,839 --> 00:09:52,450
into source main resources config

268
00:09:52,450 --> 00:09:56,050
application dev yml and search for faker

269
00:09:56,050 --> 00:09:58,209
you'll see it's one of the liquid base

270
00:09:58,209 --> 00:10:00,360
contacts so you can just remove it and

271
00:10:00,360 --> 00:10:02,800
then there won't be fake data that's

272
00:10:02,800 --> 00:10:05,560
entered so you do need to remove it from

273
00:10:05,560 --> 00:10:08,200
build h2d because that's the database

274
00:10:08,200 --> 00:10:11,290
and then if you restart it then you'll

275
00:10:11,290 --> 00:10:13,209
have a version that doesn't have fake

276
00:10:13,209 --> 00:10:15,010
data in there so I could continue and do

277
00:10:15,010 --> 00:10:17,050
the ionic and react native part of it

278
00:10:17,050 --> 00:10:20,020
but let's go into the presentation real

279
00:10:20,020 --> 00:10:22,870
quick so I didn't convert it to be a PWA

280
00:10:22,870 --> 00:10:25,839
but I did in a previous project and so I

281
00:10:25,839 --> 00:10:27,430
can show you the score that it will get

282
00:10:27,430 --> 00:10:29,140
but again all you need to do is change

283
00:10:29,140 --> 00:10:31,510
that index.html file and actually

284
00:10:31,510 --> 00:10:33,520
comment out the serviceworker part and

285
00:10:33,520 --> 00:10:34,630
then you need to run it with a prod

286
00:10:34,630 --> 00:10:36,430
profile so it actually does the

287
00:10:36,430 --> 00:10:38,470
serviceworker copying into the final

288
00:10:38,470 --> 00:10:39,970
directory so the test coverage is very

289
00:10:39,970 --> 00:10:42,160
good on J hipster project by default you

290
00:10:42,160 --> 00:10:45,070
can see here we have 66% and down at the

291
00:10:45,070 --> 00:10:47,529
bottom there and zero bugs so that's all

292
00:10:47,529 --> 00:10:48,910
looking pretty good and then the

293
00:10:48,910 --> 00:10:51,279
lighthouse report on succeed zero when I

294
00:10:51,279 --> 00:10:53,050
started everything using prod and

295
00:10:53,050 --> 00:10:55,149
uncommon that serviceworker you can see

296
00:10:55,149 --> 00:10:56,620
hundred performance hundred

297
00:10:56,620 --> 00:10:58,839
accessibility and it certifies as a

298
00:10:58,839 --> 00:11:00,730
professor one episode looks pretty good

299
00:11:00,730 --> 00:11:03,040
so part two ionic forge a hit

300
00:11:03,040 --> 00:11:05,740
first of all what is ionic well ionic

301
00:11:05,740 --> 00:11:08,529
was created by the ion company so that's

302
00:11:08,529 --> 00:11:10,329
why they call it the ionic framework was

303
00:11:10,329 --> 00:11:11,440
one of those things where they started

304
00:11:11,440 --> 00:11:12,970
project and a company they call them the

305
00:11:12,970 --> 00:11:14,500
same thing and then they needed some

306
00:11:14,500 --> 00:11:16,690
distinction so the ionic framework is

307
00:11:16,690 --> 00:11:20,019
what people can use to develop PW A's or

308
00:11:20,019 --> 00:11:22,149
hybrid mobile apps using web

309
00:11:22,149 --> 00:11:23,860
technologies it started out as just an

310
00:11:23,860 --> 00:11:25,690
angularjs thing and then they adopted

311
00:11:25,690 --> 00:11:27,610
angular and now they support react and

312
00:11:27,610 --> 00:11:29,410
view as well so you can go to ionic

313
00:11:29,410 --> 00:11:31,149
framework to learn more about it they

314
00:11:31,149 --> 00:11:33,310
also created stencil which allows you to

315
00:11:33,310 --> 00:11:35,380
create web components and then they also

316
00:11:35,380 --> 00:11:36,970
have a PW a toolkit so they're

317
00:11:36,970 --> 00:11:39,610
definitely web focused they're very into

318
00:11:39,610 --> 00:11:42,100
the web embracing the web and really

319
00:11:42,100 --> 00:11:43,540
great people that work there so why

320
00:11:43,540 --> 00:11:46,209
would I want to create an ionic app when

321
00:11:46,209 --> 00:11:50,259
I can do a PWA well I first created 21

322
00:11:50,259 --> 00:11:52,899
points health for the J hipster mini

323
00:11:52,899 --> 00:11:54,880
book that I wrote what I learned is it

324
00:11:54,880 --> 00:11:56,500
was very frustrating to use in the

325
00:11:56,500 --> 00:11:57,910
beginning because first of all it didn't

326
00:11:57,910 --> 00:11:59,470
have remember me I had to log in each

327
00:11:59,470 --> 00:12:01,329
time that was a pain and then just the

328
00:12:01,329 --> 00:12:04,480
transitions and the animations and kind

329
00:12:04,480 --> 00:12:06,670
of how it works just isn't quite as good

330
00:12:06,670 --> 00:12:09,130
as you get in a lot of native apps so I

331
00:12:09,130 --> 00:12:10,480
want to develop the best user experience

332
00:12:10,480 --> 00:12:13,240
and so native apps um you know are

333
00:12:13,240 --> 00:12:15,130
painful but distribute but sometimes

334
00:12:15,130 --> 00:12:16,329
they have a better experience so that's

335
00:12:16,329 --> 00:12:19,060
why I wanted to explore ionic I created

336
00:12:19,060 --> 00:12:21,519
the ionic module for J hipster and you

337
00:12:21,519 --> 00:12:23,589
can install it you have to install the

338
00:12:23,589 --> 00:12:25,690
ionic CLI as well because it uses that

339
00:12:25,690 --> 00:12:27,970
and then generator J hipster ionic and

340
00:12:27,970 --> 00:12:31,839
yeoman that's yo so yo creamy on ionic

341
00:12:31,839 --> 00:12:34,269
app right you run it with yo J hipster -

342
00:12:34,269 --> 00:12:36,940
ionic and then you'll profit so in this

343
00:12:36,940 --> 00:12:39,279
demo I'll create an app with ionic for J

344
00:12:39,279 --> 00:12:40,839
that's what I like to call it in Java

345
00:12:40,839 --> 00:12:42,940
there's log4j and there's other for J so

346
00:12:42,940 --> 00:12:44,319
I thought it was kind of cute

347
00:12:44,319 --> 00:12:45,910
will generate some entities in that app

348
00:12:45,910 --> 00:12:47,740
these same entities that we have in the

349
00:12:47,740 --> 00:12:49,660
main J hips trap well modify the UI to

350
00:12:49,660 --> 00:12:51,519
be a bit friendlier and then we'll run

351
00:12:51,519 --> 00:12:54,880
it on iOS alright so I have it down here

352
00:12:54,880 --> 00:12:57,610
I started it up beforehand and you can

353
00:12:57,610 --> 00:13:00,189
see we scroll all the way to the top I

354
00:13:00,189 --> 00:13:01,930
started by installing generator J

355
00:13:01,930 --> 00:13:04,870
hipster ionic ionic CLI and yeoman and

356
00:13:04,870 --> 00:13:06,819
you'll see these are the versions I'm

357
00:13:06,819 --> 00:13:08,319
using so I can't guarantee this will

358
00:13:08,319 --> 00:13:10,149
work if you're using other versions but

359
00:13:10,149 --> 00:13:12,430
you know this works today and you're on

360
00:13:12,430 --> 00:13:15,279
yo J hipster ionic and it goes ahead and

361
00:13:15,279 --> 00:13:16,899
prompts you for

362
00:13:16,899 --> 00:13:18,970
name of your app and then wear your je

363
00:13:18,970 --> 00:13:20,860
hipster back-end is located so since we

364
00:13:20,860 --> 00:13:22,240
just called it back-end that's what I

365
00:13:22,240 --> 00:13:24,339
did and it reads from your je hipster

366
00:13:24,339 --> 00:13:25,959
configuration and knows

367
00:13:25,959 --> 00:13:26,980
for instance what authentication

368
00:13:26,980 --> 00:13:29,350
mechanism you're using either JW t ro

369
00:13:29,350 --> 00:13:31,569
auth and then creates an app accordingly

370
00:13:31,569 --> 00:13:33,850
so down here at the bottom I can put

371
00:13:33,850 --> 00:13:36,240
this on the right now we started by

372
00:13:36,240 --> 00:13:38,769
renaming health points to ionic right

373
00:13:38,769 --> 00:13:41,199
which I did right here and then CD into

374
00:13:41,199 --> 00:13:43,899
it and so now if I are on ionic serve we

375
00:13:43,899 --> 00:13:45,579
can see the app up and running

376
00:13:45,579 --> 00:13:49,240
now if we were to login it redirected us

377
00:13:49,240 --> 00:13:50,949
to Key Club but it happened so fast you

378
00:13:50,949 --> 00:13:53,350
didn't even notice so if I were to say

379
00:13:53,350 --> 00:13:56,319
doing an incognito window and then maybe

380
00:13:56,319 --> 00:13:58,749
even down at the bottom here it's

381
00:13:58,749 --> 00:14:01,179
turning this into an iPhone you can see

382
00:14:01,179 --> 00:14:02,829
kind of more what it looks like so

383
00:14:02,829 --> 00:14:08,259
localhost 8,100 sign in three directions

384
00:14:08,259 --> 00:14:11,589
key click comes back and we're logged in

385
00:14:11,589 --> 00:14:13,329
right and then if we click on entities

386
00:14:13,329 --> 00:14:15,910
we don't have any yet so we can go here

387
00:14:15,910 --> 00:14:18,100
close this one down since it's the same

388
00:14:18,100 --> 00:14:20,350
as this one over here and we can do

389
00:14:20,350 --> 00:14:23,769
ionic for J which is a shortcut to yo J

390
00:14:23,769 --> 00:14:27,730
hipster ionic and import jdl and those

391
00:14:27,730 --> 00:14:32,519
21 points let's try J hipster ionic

392
00:14:32,519 --> 00:14:39,819
import JBL 21 points okay so I look for

393
00:14:39,819 --> 00:14:41,589
J doesn't always work but you know the

394
00:14:41,589 --> 00:14:43,509
main one does so that's good it detects

395
00:14:43,509 --> 00:14:44,980
that we have some new files in there

396
00:14:44,980 --> 00:14:46,959
recompiles everything and so if we go to

397
00:14:46,959 --> 00:14:50,829
ionic here and sign in you'll see

398
00:14:50,829 --> 00:14:52,959
there's all of our points so we can see

399
00:14:52,959 --> 00:14:54,519
there's no blood pressures right because

400
00:14:54,519 --> 00:14:56,559
there isn't any on the backend but if we

401
00:14:56,559 --> 00:14:59,529
were to go here and go into let's say

402
00:14:59,529 --> 00:15:01,779
just a blood pressure create a new one

403
00:15:01,779 --> 00:15:07,389
and say you know 120 over 70 this is

404
00:15:07,389 --> 00:15:12,040
where admin we save it come back here go

405
00:15:12,040 --> 00:15:14,019
to blood pressure there it is right so

406
00:15:14,019 --> 00:15:14,980
you can see they're kind of talking

407
00:15:14,980 --> 00:15:16,629
about each other so now if we want to

408
00:15:16,629 --> 00:15:18,069
make the same change where we go into

409
00:15:18,069 --> 00:15:21,009
points and we make these into toggles we

410
00:15:21,009 --> 00:15:23,139
have to do a bit of work so we have to

411
00:15:23,139 --> 00:15:25,179
change the points update to use ion

412
00:15:25,179 --> 00:15:28,029
toggle and then points update that TS to

413
00:15:28,029 --> 00:15:30,129
use boolean's I'll open this up and

414
00:15:30,129 --> 00:15:30,730
intelligence

415
00:15:30,730 --> 00:15:35,040
I'll find that points update HTML

416
00:15:35,040 --> 00:15:38,170
close this one and I said we had to

417
00:15:38,170 --> 00:15:40,870
change right these two toggles so I on

418
00:15:40,870 --> 00:15:46,360
toggle instead of an input and then slot

419
00:15:46,360 --> 00:15:49,690
equals start and then remove this

420
00:15:49,690 --> 00:15:55,180
position here all right so now points

421
00:15:55,180 --> 00:16:00,880
update we need to change first of all in

422
00:16:00,880 --> 00:16:06,120
the save method add these two convert it

423
00:16:06,720 --> 00:16:10,150
all right from boolean's to int and then

424
00:16:10,150 --> 00:16:13,120
in the same file this is new then set

425
00:16:13,120 --> 00:16:14,860
some defaults and then we'll run

426
00:16:14,860 --> 00:16:17,970
everything in iOS simulator so ionic

427
00:16:17,970 --> 00:16:23,670
Cordova prepare iOS and then back here

428
00:16:23,670 --> 00:16:28,870
if we were to login you can see that if

429
00:16:28,870 --> 00:16:30,040
we go to our points

430
00:16:30,040 --> 00:16:32,800
now they're toggles so we got one

431
00:16:32,800 --> 00:16:35,020
toggling the others aren't so let's look

432
00:16:35,020 --> 00:16:38,770
back at our HTML we got change these two

433
00:16:38,770 --> 00:16:42,790
toggles now you can see their toggle

434
00:16:42,790 --> 00:16:46,360
right pretty slick and if we look at it

435
00:16:46,360 --> 00:16:49,210
on a mobile device looks much better

436
00:16:49,210 --> 00:16:51,250
right and you can even add like a user

437
00:16:51,250 --> 00:16:55,870
to it it okay and save it creates all

438
00:16:55,870 --> 00:16:57,580
those points successfully so now it's

439
00:16:57,580 --> 00:16:59,770
prompting me do I want to integrate my

440
00:16:59,770 --> 00:17:04,449
app with Cordova yep and then iOS is not

441
00:17:04,449 --> 00:17:07,270
installed do I wanna install it yep so

442
00:17:07,270 --> 00:17:09,069
you can see that took about five minutes

443
00:17:09,069 --> 00:17:12,400
to run so kind of a lengthy process once

444
00:17:12,400 --> 00:17:14,920
you have it compiled and ready to go run

445
00:17:14,920 --> 00:17:21,970
open platforms iOS my app dot X C space

446
00:17:21,970 --> 00:17:24,910
that opens it up and Xcode and then you

447
00:17:24,910 --> 00:17:26,740
can click on my app at the top there

448
00:17:26,740 --> 00:17:29,170
click Play and then once your app is up

449
00:17:29,170 --> 00:17:31,810
and running you can click Sign In it'll

450
00:17:31,810 --> 00:17:34,180
redirect you to ki cloak to login so you

451
00:17:34,180 --> 00:17:38,800
can do you know admin admin come back

452
00:17:38,800 --> 00:17:41,290
see your entities go to points and we

453
00:17:41,290 --> 00:17:43,900
see that point is there so we could edit

454
00:17:43,900 --> 00:17:44,380
it

455
00:17:44,380 --> 00:17:47,130
say you know I didn't eat well today and

456
00:17:47,130 --> 00:17:49,780
change that if we were to go back here

457
00:17:49,780 --> 00:17:56,710
and refresh we're gonna sign in you can

458
00:17:56,710 --> 00:17:58,390
see the changes made there as well so

459
00:17:58,390 --> 00:18:02,590
it's working on iOS and you know that's

460
00:18:02,590 --> 00:18:05,560
ionic so works pretty well now back to

461
00:18:05,560 --> 00:18:08,410
the presentation I wrote a blog post

462
00:18:08,410 --> 00:18:11,680
about this that shows not exactly the

463
00:18:11,680 --> 00:18:13,240
same demo but it shows you how to add a

464
00:18:13,240 --> 00:18:15,730
photo gallery when I put old Jefe up

465
00:18:15,730 --> 00:18:17,770
there so you can read that and see how

466
00:18:17,770 --> 00:18:19,780
that was all created as well and now

467
00:18:19,780 --> 00:18:21,520
we'll dig into at night Jay hipster so

468
00:18:21,520 --> 00:18:24,100
first of all what is react native react

469
00:18:24,100 --> 00:18:26,200
native is similar to ionic except it

470
00:18:26,200 --> 00:18:29,110
actually uses the native components so

471
00:18:29,110 --> 00:18:31,270
you'll write it in react but it's kind

472
00:18:31,270 --> 00:18:32,650
of a bridge and then the native

473
00:18:32,650 --> 00:18:34,900
components are used so ignite CLI is

474
00:18:34,900 --> 00:18:36,880
similar to je hipster but for a react

475
00:18:36,880 --> 00:18:39,340
native apps so it's from infinite red

476
00:18:39,340 --> 00:18:41,620
you can see up there in the top right

477
00:18:41,620 --> 00:18:44,020
the infinite dot red slash ignite allows

478
00:18:44,020 --> 00:18:45,970
you to easily spin up a new react native

479
00:18:45,970 --> 00:18:48,520
app saves an average of two weeks has an

480
00:18:48,520 --> 00:18:50,320
ever-expanding list of boiler plates and

481
00:18:50,320 --> 00:18:52,180
plugins and JE hipster is one of those

482
00:18:52,180 --> 00:18:54,070
boiler plates and it works on Mac OS

483
00:18:54,070 --> 00:18:56,740
Windows and Linux so to install ignite a

484
00:18:56,740 --> 00:18:58,030
hipster which is you know this

485
00:18:58,030 --> 00:19:00,550
boilerplate for ignite CLI NPM install

486
00:19:00,550 --> 00:19:03,910
dash G ignite CLI and then ignite J

487
00:19:03,910 --> 00:19:05,740
hipster you'll create a new app with it

488
00:19:05,740 --> 00:19:09,100
and then have fun right so in this demo

489
00:19:09,100 --> 00:19:10,630
I created an app with ignite a hipster

490
00:19:10,630 --> 00:19:13,150
generate entities in the app modify the

491
00:19:13,150 --> 00:19:15,250
UI to be friendlier and run it on

492
00:19:15,250 --> 00:19:17,890
Android so back to our instructions here

493
00:19:17,890 --> 00:19:20,680
you'll see we start by installing the

494
00:19:20,680 --> 00:19:23,440
ignite CLI and ignite J hipster and then

495
00:19:23,440 --> 00:19:26,020
create a health points react native app

496
00:19:26,020 --> 00:19:27,640
so I've already done some of these steps

497
00:19:27,640 --> 00:19:30,400
you can see I installed ignite CLI and

498
00:19:30,400 --> 00:19:32,410
ignite J hipster and these are the

499
00:19:32,410 --> 00:19:34,420
versions that are used and then I went

500
00:19:34,420 --> 00:19:36,790
ahead and ignite new health points and

501
00:19:36,790 --> 00:19:39,220
use that boilerplate for ignite J

502
00:19:39,220 --> 00:19:41,530
hipster and this does take quite a while

503
00:19:41,530 --> 00:19:43,030
to run so you can see even though

504
00:19:43,030 --> 00:19:44,980
there's not much output it did take four

505
00:19:44,980 --> 00:19:47,440
minutes and in 30 seconds so and I moved

506
00:19:47,440 --> 00:19:49,720
it to react native and I'm in that

507
00:19:49,720 --> 00:19:51,730
directory so we'll put this on there

508
00:19:51,730 --> 00:19:53,980
right here and the first thing we need

509
00:19:53,980 --> 00:19:56,800
to do is just we could run iOS but I

510
00:19:56,800 --> 00:19:57,970
said I was going to do this on

511
00:19:57,970 --> 00:20:00,460
Android so first of all let's go ahead

512
00:20:00,460 --> 00:20:04,090
and shortcut this and get our entities

513
00:20:04,090 --> 00:20:08,320
generated so this is 21 points all right

514
00:20:08,320 --> 00:20:11,890
ignite generate import jdl and then the

515
00:20:11,890 --> 00:20:13,960
name of your jdl file so we have all

516
00:20:13,960 --> 00:20:15,640
those and then what I'll do is I'll do

517
00:20:15,640 --> 00:20:19,240
it NPM run Android so while that's

518
00:20:19,240 --> 00:20:21,610
starting we do need to run some ADB

519
00:20:21,610 --> 00:20:24,010
reverse command so it can talk to not

520
00:20:24,010 --> 00:20:27,090
only on a hipster API but also key code

521
00:20:27,090 --> 00:20:29,590
so we don't want that Metro bundle is

522
00:20:29,590 --> 00:20:31,810
just gonna cause problems so back here

523
00:20:31,810 --> 00:20:36,280
we'll do the ADB reverse okay so

524
00:20:36,280 --> 00:20:37,960
everything's up and running now if we

525
00:20:37,960 --> 00:20:42,070
were to go and click on login come on

526
00:20:42,070 --> 00:20:42,900
baby

527
00:20:42,900 --> 00:20:45,130
maybe it's because this reverse didn't

528
00:20:45,130 --> 00:20:46,120
happen soon enough

529
00:20:46,120 --> 00:20:51,220
do our are to reload then try it now

530
00:20:51,220 --> 00:20:54,640
it's working so we can do add an admin

531
00:20:54,640 --> 00:20:57,760
and now if you were to go to our

532
00:20:57,760 --> 00:21:01,120
entities see if we look at points sorry

533
00:21:01,120 --> 00:21:03,040
that one that's when we entered in right

534
00:21:03,040 --> 00:21:05,980
that's the zero one zero one so this one

535
00:21:05,980 --> 00:21:09,370
has text box just like ionic did so

536
00:21:09,370 --> 00:21:11,650
let's change those to boolean so open

537
00:21:11,650 --> 00:21:13,960
this up in IntelliJ and it'll go to the

538
00:21:13,960 --> 00:21:18,160
points and T edit screen points entity

539
00:21:18,160 --> 00:21:21,150
there we go

540
00:21:21,450 --> 00:21:24,490
and we need to change these two

541
00:21:24,490 --> 00:21:28,900
boolean's instead of being numbers and

542
00:21:28,900 --> 00:21:31,690
that'll change the form so it handles it

543
00:21:31,690 --> 00:21:34,000
but then we have to change entity to

544
00:21:34,000 --> 00:21:36,400
form value we have to change that so

545
00:21:36,400 --> 00:21:37,930
when it comes from our database it

546
00:21:37,930 --> 00:21:41,320
converts it to boolean so exercise meals

547
00:21:41,320 --> 00:21:45,520
and alcohol by default it's 0 and if it

548
00:21:45,520 --> 00:21:48,310
exists then it's 1 and then form value

549
00:21:48,310 --> 00:21:50,770
to entity which is just converting the

550
00:21:50,770 --> 00:21:52,980
forum to send it back to the server and

551
00:21:52,980 --> 00:21:56,890
then we can add some default values you

552
00:21:56,890 --> 00:22:01,300
can see it says if it has an ID then go

553
00:22:01,300 --> 00:22:03,250
ahead and say it's not a new entity but

554
00:22:03,250 --> 00:22:05,080
we're gonna say if it doesn't have an ID

555
00:22:05,080 --> 00:22:07,660
then go ahead and create a date and set

556
00:22:07,660 --> 00:22:09,100
everything to true because we want

557
00:22:09,100 --> 00:22:12,130
everyone you know be ready to have

558
00:22:12,130 --> 00:22:14,650
good day so now you can see it's already

559
00:22:14,650 --> 00:22:16,960
refreshed and it's got that information

560
00:22:16,960 --> 00:22:18,970
in there so if we were to toggle off the

561
00:22:18,970 --> 00:22:22,540
exercise for instance and save it save

562
00:22:22,540 --> 00:22:24,940
successfully go back and look at health

563
00:22:24,940 --> 00:22:31,030
points go to points and this one's timed

564
00:22:31,030 --> 00:22:36,010
out as well so you log in again and then

565
00:22:36,010 --> 00:22:39,790
go to the points you can see it's taking

566
00:22:39,790 --> 00:22:41,440
out that exercise line so now

567
00:22:41,440 --> 00:22:43,000
everything's working there the last

568
00:22:43,000 --> 00:22:45,160
thing I wanted to show you is how to use

569
00:22:45,160 --> 00:22:48,100
octa instead of key coke you'll create a

570
00:22:48,100 --> 00:22:50,290
web application on Opta you go to

571
00:22:50,290 --> 00:22:54,340
developer octo comm and you'll click

572
00:22:54,340 --> 00:22:57,550
create free account then you'll put in

573
00:22:57,550 --> 00:22:59,140
your information and then you'll get an

574
00:22:59,140 --> 00:23:00,610
account and then you can log into that

575
00:23:00,610 --> 00:23:02,200
account and create what's called a web

576
00:23:02,200 --> 00:23:04,210
application and then you'll use this URL

577
00:23:04,210 --> 00:23:06,940
this is for spring security as your

578
00:23:06,940 --> 00:23:09,490
login and redirect URI and then you'll

579
00:23:09,490 --> 00:23:12,220
set a logout redirect URI of localhost

580
00:23:12,220 --> 00:23:14,980
8080 so then you need to set it up a

581
00:23:14,980 --> 00:23:17,290
groups claim and you need to configure

582
00:23:17,290 --> 00:23:20,440
an environment file that has this

583
00:23:20,440 --> 00:23:22,270
information in it so I've already done

584
00:23:22,270 --> 00:23:23,800
all that just because you know watching

585
00:23:23,800 --> 00:23:25,930
that it's kind of boring so if we look

586
00:23:25,930 --> 00:23:29,530
at octant env you can see these are my

587
00:23:29,530 --> 00:23:31,510
settings and have also created a native

588
00:23:31,510 --> 00:23:35,350
app so if we were to source octan B this

589
00:23:35,350 --> 00:23:37,030
is J hipster right then we can run

590
00:23:37,030 --> 00:23:39,520
Gradle and start it up and since we've

591
00:23:39,520 --> 00:23:41,260
set those environment variables spring

592
00:23:41,260 --> 00:23:42,940
boot knows to override its default

593
00:23:42,940 --> 00:23:45,100
settings so now if we were to sign-in

594
00:23:45,100 --> 00:23:47,260
let me do in an incognito window just to

595
00:23:47,260 --> 00:23:51,070
make sure local host 8080 and click Sign

596
00:23:51,070 --> 00:23:51,310
In

597
00:23:51,310 --> 00:23:56,110
now the redirect just octa and we can

598
00:23:56,110 --> 00:23:58,900
login with that user right so that all

599
00:23:58,900 --> 00:24:01,420
works we could also change our react

600
00:24:01,420 --> 00:24:03,520
native application just because that's

601
00:24:03,520 --> 00:24:05,020
one of the easier ones to modify it's

602
00:24:05,020 --> 00:24:08,290
still up and running in log in saga SJS

603
00:24:08,290 --> 00:24:10,900
to use the generated client ID and we

604
00:24:10,900 --> 00:24:13,150
had it running in IntelliJ go here and

605
00:24:13,150 --> 00:24:18,220
look for large index Arges and basically

606
00:24:18,220 --> 00:24:20,590
there's a client ID in here right here

607
00:24:20,590 --> 00:24:23,290
and instead of getting it from J hipster

608
00:24:23,290 --> 00:24:25,480
we want to have a more

609
00:24:25,480 --> 00:24:28,150
here one from octa if I was to go back

610
00:24:28,150 --> 00:24:31,240
to react native and are are to refresh

611
00:24:31,240 --> 00:24:37,230
it and go to login no no there we go

612
00:24:37,230 --> 00:24:41,280
so now we're to login

613
00:24:41,280 --> 00:24:43,630
it all works right and we can see our

614
00:24:43,630 --> 00:24:46,630
entities and we can talk to J hipster so

615
00:24:46,630 --> 00:24:49,330
lastly J hipster road map today you

616
00:24:49,330 --> 00:24:51,220
learned first of all that J hipster is a

617
00:24:51,220 --> 00:24:52,870
project for generating back-end

618
00:24:52,870 --> 00:24:55,030
applications and front-end applications

619
00:24:55,030 --> 00:24:57,160
on the same platform you can also use

620
00:24:57,160 --> 00:24:59,919
ionic ignite J hipster and octa with it

621
00:24:59,919 --> 00:25:02,260
and next forge a hipster we have Micra

622
00:25:02,260 --> 00:25:04,419
not and Korkis blueprints in the works

623
00:25:04,419 --> 00:25:06,340
so people are working hard on those we

624
00:25:06,340 --> 00:25:08,710
also have dotnet and nodejs blueprints

625
00:25:08,710 --> 00:25:10,030
that basically means that you can

626
00:25:10,030 --> 00:25:11,980
replace the whole back-end with those

627
00:25:11,980 --> 00:25:13,450
different frameworks and if you like

628
00:25:13,450 --> 00:25:14,770
spring boot course you can use the

629
00:25:14,770 --> 00:25:16,660
default one and there's even Kotlin

630
00:25:16,660 --> 00:25:18,250
support if you wanted to use Kotlin

631
00:25:18,250 --> 00:25:20,080
instead of java there's full reactive

632
00:25:20,080 --> 00:25:21,669
support with wet flux in spring cloud

633
00:25:21,669 --> 00:25:24,549
gateway right now that's in j hipster

634
00:25:24,549 --> 00:25:27,160
6.80 personally I'm interested in adding

635
00:25:27,160 --> 00:25:29,380
graph QL and micro front-end support so

636
00:25:29,380 --> 00:25:31,059
I don't know if that'll happen but you

637
00:25:31,059 --> 00:25:32,320
know I got some time on my hands

638
00:25:32,320 --> 00:25:34,540
nowadays so maybe it will so my action

639
00:25:34,540 --> 00:25:36,790
to you is to try J hipster learn more

640
00:25:36,790 --> 00:25:39,280
about pwace try ionic forge a hipster

641
00:25:39,280 --> 00:25:41,200
ignite a hipster if you're interested in

642
00:25:41,200 --> 00:25:43,030
react native and report any issues you

643
00:25:43,030 --> 00:25:44,830
find if you have questions please post

644
00:25:44,830 --> 00:25:46,480
them on Stack Overflow and just tag it

645
00:25:46,480 --> 00:25:47,919
with a hipster and the whole team will

646
00:25:47,919 --> 00:25:50,200
get notifications we post a ton of blog

647
00:25:50,200 --> 00:25:52,210
posts on our developer blog at octa you

648
00:25:52,210 --> 00:25:53,860
can also follow my team on twitter and

649
00:25:53,860 --> 00:25:55,809
the source code for everything we did

650
00:25:55,809 --> 00:25:58,480
today is at mobile j hipster thank you

651
00:25:58,480 --> 00:26:01,000
for coming you can find me on rabl

652
00:26:01,000 --> 00:26:03,220
designs comm you can find me on twitter

653
00:26:03,220 --> 00:26:05,440
my direct messages are right open this

654
00:26:05,440 --> 00:26:07,330
presentation i'll upload in the next

655
00:26:07,330 --> 00:26:09,220
couple of days to speaker deck and then

656
00:26:09,220 --> 00:26:10,750
you can find most of the other code that

657
00:26:10,750 --> 00:26:13,600
I do on the octave developer github may

658
00:26:13,600 --> 00:26:16,889
the auth be with you

659
00:26:19,380 --> 00:26:22,560
all right hey Matt that was awesome well

660
00:26:22,560 --> 00:26:24,960
we don't have too many questions but we

661
00:26:24,960 --> 00:26:27,540
do have one question from Simon if

662
00:26:27,540 --> 00:26:31,050
you're ready for it sure question is do

663
00:26:31,050 --> 00:26:33,690
you really like JavaScript more than

664
00:26:33,690 --> 00:26:38,010
Java for the front-end I do I don't

665
00:26:38,010 --> 00:26:40,230
write many JavaScript backends but I

666
00:26:40,230 --> 00:26:41,730
write a lot of JavaScript front-end and

667
00:26:41,730 --> 00:26:44,280
same a Java I don't write many Java

668
00:26:44,280 --> 00:26:46,050
front ends but I write a lot of Java

669
00:26:46,050 --> 00:26:49,290
back-end well so one of the things that

670
00:26:49,290 --> 00:26:51,840
I notice generally speaking when I use

671
00:26:51,840 --> 00:26:54,180
JavaScript in all these different tools

672
00:26:54,180 --> 00:26:57,150
and frameworks when I teach courses way

673
00:26:57,150 --> 00:27:00,570
too many moving parts which drives us

674
00:27:00,570 --> 00:27:03,720
crazy it's going to get better any time

675
00:27:03,720 --> 00:27:06,660
before I retire I think the biggest

676
00:27:06,660 --> 00:27:08,100
problem with the JavaScript and I've

677
00:27:08,100 --> 00:27:08,940
learned this just from personal

678
00:27:08,940 --> 00:27:10,950
experiences no one ever specifies

679
00:27:10,950 --> 00:27:12,840
versions whenever they say install this

680
00:27:12,840 --> 00:27:14,670
library use this which is very different

681
00:27:14,670 --> 00:27:16,560
from Java right we always say use this

682
00:27:16,560 --> 00:27:19,050
version and even though Gradle and maven

683
00:27:19,050 --> 00:27:21,390
support version ranges no one ever uses

684
00:27:21,390 --> 00:27:23,280
them versus JavaScript they're always

685
00:27:23,280 --> 00:27:25,140
trying to use semantic versioning and

686
00:27:25,140 --> 00:27:27,000
people break it all the time so it's not

687
00:27:27,000 --> 00:27:29,010
really that it moves that much faster

688
00:27:29,010 --> 00:27:31,230
it's just people break stuff in minor

689
00:27:31,230 --> 00:27:33,090
releases and if we lock down our

690
00:27:33,090 --> 00:27:34,560
versions that's what we do in J hipster

691
00:27:34,560 --> 00:27:36,710
then you don't experience that as much

692
00:27:36,710 --> 00:27:39,570
very good well thank you so much it was

693
00:27:39,570 --> 00:27:43,860
great having you and I'll see you on the

694
00:27:43,860 --> 00:27:47,840
other side all right thank you Thanks

