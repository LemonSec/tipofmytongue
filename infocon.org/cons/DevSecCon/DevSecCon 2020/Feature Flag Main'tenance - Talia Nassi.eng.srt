1
00:00:00,080 --> 00:00:03,199
and hi um

2
00:00:03,199 --> 00:00:05,120
do you want to eat yourself and see if

3
00:00:05,120 --> 00:00:06,319
we can hear you

4
00:00:06,319 --> 00:00:09,360
yes can you hear me now yes and you can

5
00:00:09,360 --> 00:00:11,040
share your screen when you're ready

6
00:00:11,040 --> 00:00:14,320
okay and talia is going to be talking

7
00:00:14,320 --> 00:00:16,000
about future flag maintenance which i'm

8
00:00:16,000 --> 00:00:18,800
really excited about

9
00:00:20,640 --> 00:00:23,920
okay can you see the signs

10
00:00:23,920 --> 00:00:27,119
i can see it i can hear you so take it

11
00:00:27,119 --> 00:00:28,320
away

12
00:00:28,320 --> 00:00:31,840
perfect okay

13
00:00:32,800 --> 00:00:35,120
so i'm talia and today we're going to

14
00:00:35,120 --> 00:00:36,960
talk about something that i'm

15
00:00:36,960 --> 00:00:39,520
really passionate about and that is

16
00:00:39,520 --> 00:00:41,360
feature flags

17
00:00:41,360 --> 00:00:43,120
and specifically feature flag

18
00:00:43,120 --> 00:00:44,559
maintenance

19
00:00:44,559 --> 00:00:47,600
so just to recap what a feature flag is

20
00:00:47,600 --> 00:00:49,680
is it allows you to separate your code

21
00:00:49,680 --> 00:00:51,039
deployment from

22
00:00:51,039 --> 00:00:54,399
feature release and there's so many

23
00:00:54,399 --> 00:00:56,399
different use cases when we talk about

24
00:00:56,399 --> 00:00:57,760
future flags

25
00:00:57,760 --> 00:00:59,840
we use feature flags to test our

26
00:00:59,840 --> 00:01:02,160
features in production to ensure proper

27
00:01:02,160 --> 00:01:03,440
functionality

28
00:01:03,440 --> 00:01:05,840
and we use feature flags to perform a b

29
00:01:05,840 --> 00:01:07,840
testing to figure out which version of a

30
00:01:07,840 --> 00:01:08,799
feature gives us

31
00:01:08,799 --> 00:01:10,960
a higher conversion rate you can also

32
00:01:10,960 --> 00:01:12,400
use feature flags

33
00:01:12,400 --> 00:01:14,640
as a kill switch which allows you to

34
00:01:14,640 --> 00:01:17,119
turn off a feature for everyone in case

35
00:01:17,119 --> 00:01:18,640
something goes wrong and you need to

36
00:01:18,640 --> 00:01:20,080
hide that feature

37
00:01:20,080 --> 00:01:21,759
you can also use feature flagging for

38
00:01:21,759 --> 00:01:23,200
subscription management

39
00:01:23,200 --> 00:01:25,520
to manage permissions for specific user

40
00:01:25,520 --> 00:01:26,320
groups

41
00:01:26,320 --> 00:01:28,400
and you can also use feature feature

42
00:01:28,400 --> 00:01:29,600
flags to

43
00:01:29,600 --> 00:01:32,640
migrate your monolith to microservices

44
00:01:32,640 --> 00:01:34,720
um there's so many different use cases

45
00:01:34,720 --> 00:01:36,240
for feature flags

46
00:01:36,240 --> 00:01:37,840
we don't have time to go through all of

47
00:01:37,840 --> 00:01:39,439
them but i just want to go through a

48
00:01:39,439 --> 00:01:40,000
couple of

49
00:01:40,000 --> 00:01:42,799
examples and i'm going to go through

50
00:01:42,799 --> 00:01:44,240
using feature flags with

51
00:01:44,240 --> 00:01:46,399
testing and production and a b testing

52
00:01:46,399 --> 00:01:47,759
and then we'll talk about the best

53
00:01:47,759 --> 00:01:50,320
practices for your feature flags

54
00:01:50,320 --> 00:01:52,840
so we're going to start with testing and

55
00:01:52,840 --> 00:01:54,399
production

56
00:01:54,399 --> 00:01:57,520
and usually when i bring up this topic

57
00:01:57,520 --> 00:02:00,640
this is the reaction that i get testing

58
00:02:00,640 --> 00:02:01,119
in prod

59
00:02:01,119 --> 00:02:03,439
is scary and risky if you don't do it

60
00:02:03,439 --> 00:02:05,360
correctly and safely

61
00:02:05,360 --> 00:02:07,759
so let's go through why feature flags

62
00:02:07,759 --> 00:02:11,280
really are the magic ingredient

63
00:02:11,760 --> 00:02:14,239
so here's what the process looks like

64
00:02:14,239 --> 00:02:15,920
once your feature is written

65
00:02:15,920 --> 00:02:18,239
you launch it into a feature flag and

66
00:02:18,239 --> 00:02:19,520
make sure to target

67
00:02:19,520 --> 00:02:21,599
all the members of your team when you

68
00:02:21,599 --> 00:02:23,680
target users in a feature flag it means

69
00:02:23,680 --> 00:02:25,599
that only they can see the changes

70
00:02:25,599 --> 00:02:27,200
related to that feature

71
00:02:27,200 --> 00:02:30,400
so the outside world your real end users

72
00:02:30,400 --> 00:02:32,400
cannot see anything related to that

73
00:02:32,400 --> 00:02:33,760
feature

74
00:02:33,760 --> 00:02:35,920
and if there's a bug or something goes

75
00:02:35,920 --> 00:02:37,200
wrong only you

76
00:02:37,200 --> 00:02:39,360
and your team will see that issue the

77
00:02:39,360 --> 00:02:40,400
rest of the world

78
00:02:40,400 --> 00:02:42,720
your end users will not be able to see

79
00:02:42,720 --> 00:02:43,760
anything wrong

80
00:02:43,760 --> 00:02:45,760
because they're not on the feature flag

81
00:02:45,760 --> 00:02:47,519
it's also a good idea to put your

82
00:02:47,519 --> 00:02:49,599
automation bots inside the feature flag

83
00:02:49,599 --> 00:02:50,160
so that

84
00:02:50,160 --> 00:02:52,080
you're able to manipulate the experience

85
00:02:52,080 --> 00:02:55,040
of the box for successful automation

86
00:02:55,040 --> 00:02:58,400
so now you can test your code in

87
00:02:58,400 --> 00:02:59,440
production

88
00:02:59,440 --> 00:03:01,120
and once it's ready and you're confident

89
00:03:01,120 --> 00:03:03,360
that your feature is working

90
00:03:03,360 --> 00:03:06,000
then you can turn the flag on knowing a

91
00:03:06,000 --> 00:03:07,200
hundred percent

92
00:03:07,200 --> 00:03:09,040
that your features are already working

93
00:03:09,040 --> 00:03:10,319
in production and you didn't break

94
00:03:10,319 --> 00:03:12,080
anything that's existing

95
00:03:12,080 --> 00:03:14,560
and now your users are happy and dancing

96
00:03:14,560 --> 00:03:18,080
because they have a bug free product

97
00:03:18,080 --> 00:03:20,159
you then repeat this process for every

98
00:03:20,159 --> 00:03:21,120
new feature

99
00:03:21,120 --> 00:03:23,280
so that each feature has its own feature

100
00:03:23,280 --> 00:03:25,440
flag and what this does is it allows you

101
00:03:25,440 --> 00:03:26,640
to have a kill switch

102
00:03:26,640 --> 00:03:28,480
so that even after the feature flag is

103
00:03:28,480 --> 00:03:29,760
on if in a week

104
00:03:29,760 --> 00:03:31,360
you want to turn off the feature or if

105
00:03:31,360 --> 00:03:32,720
something goes wrong when you need to

106
00:03:32,720 --> 00:03:33,680
kill the feature

107
00:03:33,680 --> 00:03:35,440
you have this off button that allows you

108
00:03:35,440 --> 00:03:37,200
to do so

109
00:03:37,200 --> 00:03:38,560
so hopefully testing and production

110
00:03:38,560 --> 00:03:40,799
doesn't seem too scary anymore

111
00:03:40,799 --> 00:03:42,480
but if i didn't convince you i have a

112
00:03:42,480 --> 00:03:44,159
few more videos on this topic that go a

113
00:03:44,159 --> 00:03:46,080
little bit more in depth so

114
00:03:46,080 --> 00:03:49,200
let's take a look at a b testing

115
00:03:49,200 --> 00:03:51,680
so let's say i'm a product owner and i

116
00:03:51,680 --> 00:03:53,360
have a feature that's been around

117
00:03:53,360 --> 00:03:55,200
for a while that's doing pretty well in

118
00:03:55,200 --> 00:03:57,760
production however i want to see if a

119
00:03:57,760 --> 00:03:59,760
new version of that feature performs

120
00:03:59,760 --> 00:04:00,560
better

121
00:04:00,560 --> 00:04:03,120
so i have my developers whip up some new

122
00:04:03,120 --> 00:04:03,840
code

123
00:04:03,840 --> 00:04:05,840
and then i allocate fifty percent of my

124
00:04:05,840 --> 00:04:07,519
traffic to the old version

125
00:04:07,519 --> 00:04:10,159
and fifty percent to my new version and

126
00:04:10,159 --> 00:04:11,920
i check this for a week

127
00:04:11,920 --> 00:04:14,959
and i go into my metrics dashboard and i

128
00:04:14,959 --> 00:04:15,360
see

129
00:04:15,360 --> 00:04:18,478
this i'm getting a significant

130
00:04:18,478 --> 00:04:21,199
undesired impact with this new change

131
00:04:21,199 --> 00:04:23,120
which means that i'm getting a decrease

132
00:04:23,120 --> 00:04:25,120
in activity from users who are getting

133
00:04:25,120 --> 00:04:25,520
this

134
00:04:25,520 --> 00:04:28,080
new treatment so i'm going to go back

135
00:04:28,080 --> 00:04:29,680
and kill this experiment

136
00:04:29,680 --> 00:04:31,680
and give all of my users the original

137
00:04:31,680 --> 00:04:34,080
experience because quite frankly the new

138
00:04:34,080 --> 00:04:34,639
version

139
00:04:34,639 --> 00:04:37,680
just wasn't doing it

140
00:04:37,680 --> 00:04:39,759
so once you have your use cases down and

141
00:04:39,759 --> 00:04:41,440
you know what you want to do with your

142
00:04:41,440 --> 00:04:42,479
feature flags

143
00:04:42,479 --> 00:04:44,639
you need to have a maintenance process

144
00:04:44,639 --> 00:04:45,680
in place

145
00:04:45,680 --> 00:04:47,759
because it can be overwhelming

146
00:04:47,759 --> 00:04:49,199
especially when you have

147
00:04:49,199 --> 00:04:51,120
hundreds of feature flags and there's no

148
00:04:51,120 --> 00:04:54,560
process or plan in place

149
00:04:54,560 --> 00:04:56,800
so let's take a look at the future flag

150
00:04:56,800 --> 00:04:57,919
life cycle

151
00:04:57,919 --> 00:05:00,639
the four stages of the life cycle are

152
00:05:00,639 --> 00:05:01,360
creation

153
00:05:01,360 --> 00:05:03,919
implementation rollout and cleanup so

154
00:05:03,919 --> 00:05:05,199
we're going to go through each of these

155
00:05:05,199 --> 00:05:07,520
and talk about best practices for each

156
00:05:07,520 --> 00:05:09,520
section

157
00:05:09,520 --> 00:05:12,560
so the first step is creation and when

158
00:05:12,560 --> 00:05:13,440
you're creating

159
00:05:13,440 --> 00:05:15,759
um a feature flag it's really important

160
00:05:15,759 --> 00:05:17,840
to have a naming convention

161
00:05:17,840 --> 00:05:19,759
and there's a few options you can choose

162
00:05:19,759 --> 00:05:20,960
from some of the

163
00:05:20,960 --> 00:05:22,800
some of the things you can do are you

164
00:05:22,800 --> 00:05:24,800
can include a ticket number in the name

165
00:05:24,800 --> 00:05:26,400
of the feature flag so

166
00:05:26,400 --> 00:05:28,639
if you use jira or asana or whatever

167
00:05:28,639 --> 00:05:29,840
ticketing system

168
00:05:29,840 --> 00:05:32,639
you can you can include the name um

169
00:05:32,639 --> 00:05:34,240
sorry the number of the ticket

170
00:05:34,240 --> 00:05:36,400
inside of the name of the feature flag

171
00:05:36,400 --> 00:05:37,919
you can also include the name of the

172
00:05:37,919 --> 00:05:39,120
service that your

173
00:05:39,120 --> 00:05:41,360
feature flag is for you can include the

174
00:05:41,360 --> 00:05:43,520
name of the team that the flag belongs

175
00:05:43,520 --> 00:05:44,240
to

176
00:05:44,240 --> 00:05:45,759
you can also include the name of the

177
00:05:45,759 --> 00:05:47,919
functionality so what is this feature

178
00:05:47,919 --> 00:05:49,680
flag doing what is it testing what are

179
00:05:49,680 --> 00:05:50,160
we

180
00:05:50,160 --> 00:05:53,840
trying to prove what are we rolling out

181
00:05:54,000 --> 00:05:55,680
um you should also engage with the

182
00:05:55,680 --> 00:05:57,919
different stakeholders on your team

183
00:05:57,919 --> 00:06:00,000
to define something that makes sense for

184
00:06:00,000 --> 00:06:01,520
all of your teammates

185
00:06:01,520 --> 00:06:03,440
um you want to make sure that there's

186
00:06:03,440 --> 00:06:05,280
clear ownership when you create this

187
00:06:05,280 --> 00:06:07,919
flag to reduce friction later on

188
00:06:07,919 --> 00:06:09,840
um and if you don't have a concrete

189
00:06:09,840 --> 00:06:11,280
naming convention in place

190
00:06:11,280 --> 00:06:13,600
it's like when you have siblings and

191
00:06:13,600 --> 00:06:15,199
your mom goes through every sibling

192
00:06:15,199 --> 00:06:17,440
before she correctly identifies you like

193
00:06:17,440 --> 00:06:19,039
my name is talia and my brothers are

194
00:06:19,039 --> 00:06:20,639
trevor and tyler and when i would get in

195
00:06:20,639 --> 00:06:22,479
trouble when i was a kid my mom would go

196
00:06:22,479 --> 00:06:24,720
trevor tyler talia and then she would

197
00:06:24,720 --> 00:06:26,720
like ground me or whatever

198
00:06:26,720 --> 00:06:28,639
um so you don't want that to happen with

199
00:06:28,639 --> 00:06:29,600
your feature flags you don't want to

200
00:06:29,600 --> 00:06:31,199
have to go through every single flag

201
00:06:31,199 --> 00:06:32,400
before you get to the

202
00:06:32,400 --> 00:06:33,759
one you need you want to be able to look

203
00:06:33,759 --> 00:06:35,919
at a flag and say this is the one i need

204
00:06:35,919 --> 00:06:37,120
this is what it's doing

205
00:06:37,120 --> 00:06:40,720
and have all the details right away

206
00:06:40,720 --> 00:06:42,639
and just remember consistency is key

207
00:06:42,639 --> 00:06:44,319
here so if you start out with one naming

208
00:06:44,319 --> 00:06:46,400
convention be sure to keep that

209
00:06:46,400 --> 00:06:48,080
consistency throughout the entire

210
00:06:48,080 --> 00:06:51,680
project to avoid confusion

211
00:06:51,759 --> 00:06:55,199
the next step is implementation

212
00:06:55,199 --> 00:06:58,639
so one big thing with implementation

213
00:06:58,639 --> 00:07:00,400
is that changes to your feature flag

214
00:07:00,400 --> 00:07:01,680
should be treated like

215
00:07:01,680 --> 00:07:04,720
code deploys so if you require two code

216
00:07:04,720 --> 00:07:06,240
reviews for your code base before

217
00:07:06,240 --> 00:07:07,840
someone gets to merge their code to

218
00:07:07,840 --> 00:07:08,720
master

219
00:07:08,720 --> 00:07:11,120
you should also have two code reviews

220
00:07:11,120 --> 00:07:13,360
for any configuration changes to your

221
00:07:13,360 --> 00:07:14,560
feature flags

222
00:07:14,560 --> 00:07:16,400
although you're not writing code in the

223
00:07:16,400 --> 00:07:18,400
feature flagging system itself

224
00:07:18,400 --> 00:07:20,400
the changes you make here directly

225
00:07:20,400 --> 00:07:22,160
impact your users in production so you

226
00:07:22,160 --> 00:07:23,680
want to be really careful

227
00:07:23,680 --> 00:07:25,680
and by having this approval process here

228
00:07:25,680 --> 00:07:27,120
you can prevent people

229
00:07:27,120 --> 00:07:29,199
from making a change the configuration

230
00:07:29,199 --> 00:07:30,319
of a flag that

231
00:07:30,319 --> 00:07:32,000
they don't own or that they meant to

232
00:07:32,000 --> 00:07:33,680
make for a different flag

233
00:07:33,680 --> 00:07:35,280
this prevents those mistakes that could

234
00:07:35,280 --> 00:07:36,639
have been solved with using these

235
00:07:36,639 --> 00:07:39,440
approval flows

236
00:07:39,599 --> 00:07:41,520
it's also a good idea to move your

237
00:07:41,520 --> 00:07:43,440
flagging decisions to the server side

238
00:07:43,440 --> 00:07:44,400
rather than the client

239
00:07:44,400 --> 00:07:47,680
side this does three things the first

240
00:07:47,680 --> 00:07:50,400
is that since single page applications

241
00:07:50,400 --> 00:07:52,879
are already making a server-side call to

242
00:07:52,879 --> 00:07:55,039
render the data needed for the ui

243
00:07:55,039 --> 00:07:56,800
you can make a call to a feature flag

244
00:07:56,800 --> 00:07:58,400
service at the same time

245
00:07:58,400 --> 00:08:01,039
so that one network call fetches all of

246
00:08:01,039 --> 00:08:02,800
the feature flag evaluations with the

247
00:08:02,800 --> 00:08:05,120
server side data

248
00:08:05,120 --> 00:08:07,199
also if you have to kill a feature for

249
00:08:07,199 --> 00:08:08,160
some reason

250
00:08:08,160 --> 00:08:09,919
how would your client side future plugin

251
00:08:09,919 --> 00:08:11,680
system find out would you

252
00:08:11,680 --> 00:08:14,160
pull for updates like what would you do

253
00:08:14,160 --> 00:08:16,000
keeping your decisions on the server

254
00:08:16,000 --> 00:08:18,080
helps to reduce the challenges of cash

255
00:08:18,080 --> 00:08:19,759
and validation

256
00:08:19,759 --> 00:08:22,000
lastly making toggling decisions on the

257
00:08:22,000 --> 00:08:24,160
server side significantly decreases the

258
00:08:24,160 --> 00:08:26,000
complexity of the feature flagging

259
00:08:26,000 --> 00:08:29,759
system so you also want to make sure

260
00:08:29,759 --> 00:08:30,720
that you don't

261
00:08:30,720 --> 00:08:33,039
change the scope of your components just

262
00:08:33,039 --> 00:08:35,279
to support your feature flying decisions

263
00:08:35,279 --> 00:08:37,440
you want to make your feature flagging

264
00:08:37,440 --> 00:08:39,599
decisions as close to the logic as you

265
00:08:39,599 --> 00:08:40,320
can

266
00:08:40,320 --> 00:08:42,080
so these decisions should be

267
00:08:42,080 --> 00:08:44,240
encapsulated as much as possible

268
00:08:44,240 --> 00:08:46,720
therefore avoiding the need for every

269
00:08:46,720 --> 00:08:48,480
part of your code base to be aware of

270
00:08:48,480 --> 00:08:51,360
every component

271
00:08:52,640 --> 00:08:55,839
in terms of testing with feature flags

272
00:08:55,839 --> 00:08:58,160
a lot of questions that i usually get is

273
00:08:58,160 --> 00:08:59,839
how do i know which combinations of

274
00:08:59,839 --> 00:09:01,200
future flags to test

275
00:09:01,200 --> 00:09:04,640
how do i know um how do i know how to

276
00:09:04,640 --> 00:09:06,240
automate this it can get really

277
00:09:06,240 --> 00:09:07,360
complicated

278
00:09:07,360 --> 00:09:09,120
the the biggest thing i would say is

279
00:09:09,120 --> 00:09:10,480
work with your product donor to

280
00:09:10,480 --> 00:09:11,600
prioritize

281
00:09:11,600 --> 00:09:14,720
what flows are um the highest priority

282
00:09:14,720 --> 00:09:15,440
which flow

283
00:09:15,440 --> 00:09:17,360
which flows um bring you the most

284
00:09:17,360 --> 00:09:18,880
business value

285
00:09:18,880 --> 00:09:21,600
and then after you have that list of the

286
00:09:21,600 --> 00:09:23,120
most important flows and the most

287
00:09:23,120 --> 00:09:24,480
important combinations

288
00:09:24,480 --> 00:09:26,640
of feature flags you can use your

289
00:09:26,640 --> 00:09:27,760
automation use

290
00:09:27,760 --> 00:09:30,080
users and target them inside of whatever

291
00:09:30,080 --> 00:09:31,920
combination of flags that you need

292
00:09:31,920 --> 00:09:34,560
to validate your test cases so if you

293
00:09:34,560 --> 00:09:35,279
have

294
00:09:35,279 --> 00:09:38,480
these three combination of flags that um

295
00:09:38,480 --> 00:09:40,560
are constantly being used in production

296
00:09:40,560 --> 00:09:42,080
you can target

297
00:09:42,080 --> 00:09:44,160
one automation bot in each of those

298
00:09:44,160 --> 00:09:46,080
flags and when that bot

299
00:09:46,080 --> 00:09:47,760
runs through the user flow with those

300
00:09:47,760 --> 00:09:50,320
flags on it'll be able to see exactly

301
00:09:50,320 --> 00:09:51,760
what the user sees when

302
00:09:51,760 --> 00:09:53,600
when the flag is turned on for them as

303
00:09:53,600 --> 00:09:55,839
well

304
00:09:56,160 --> 00:09:59,920
okay the next step is rollout

305
00:09:59,920 --> 00:10:02,399
so users should consistently have the

306
00:10:02,399 --> 00:10:04,079
same experience so

307
00:10:04,079 --> 00:10:05,839
if you're in the process of rolling out

308
00:10:05,839 --> 00:10:08,720
a feature and a user visits your site or

309
00:10:08,720 --> 00:10:10,079
your application

310
00:10:10,079 --> 00:10:12,399
and your feature flagging system decides

311
00:10:12,399 --> 00:10:13,440
that the treatment should be

312
00:10:13,440 --> 00:10:15,760
on for that user then every time the

313
00:10:15,760 --> 00:10:17,519
user goes to that site they should have

314
00:10:17,519 --> 00:10:18,079
the same

315
00:10:18,079 --> 00:10:20,880
experience so increasing exposure to a

316
00:10:20,880 --> 00:10:21,519
feature

317
00:10:21,519 --> 00:10:23,519
should not affect the current exposed

318
00:10:23,519 --> 00:10:26,320
population

319
00:10:27,519 --> 00:10:29,680
okay it's also really important to build

320
00:10:29,680 --> 00:10:31,120
a feedback loop

321
00:10:31,120 --> 00:10:33,839
so feature flags allow us to make

322
00:10:33,839 --> 00:10:34,720
controlled

323
00:10:34,720 --> 00:10:36,880
changes in our system and you can

324
00:10:36,880 --> 00:10:38,800
observe the impact of these changes and

325
00:10:38,800 --> 00:10:41,839
make adjustments as necessary so

326
00:10:41,839 --> 00:10:43,680
just how i showed you previously when i

327
00:10:43,680 --> 00:10:45,839
was talking about a b testing if you

328
00:10:45,839 --> 00:10:47,279
turn on a feature for half your

329
00:10:47,279 --> 00:10:49,680
population and your metrics are showing

330
00:10:49,680 --> 00:10:51,920
a decrease in activity then you should

331
00:10:51,920 --> 00:10:53,600
kill that feature and adjust as

332
00:10:53,600 --> 00:10:54,720
necessary

333
00:10:54,720 --> 00:10:57,040
and on the flip side if your metrics

334
00:10:57,040 --> 00:10:58,880
show a high conversion rate

335
00:10:58,880 --> 00:11:00,480
you should keep the change and roll it

336
00:11:00,480 --> 00:11:02,560
out to everyone so it's important to use

337
00:11:02,560 --> 00:11:04,240
the data from your feature flagging

338
00:11:04,240 --> 00:11:04,959
system

339
00:11:04,959 --> 00:11:06,800
to measure if you can move from a

340
00:11:06,800 --> 00:11:08,560
smaller percentage rollout to a bigger

341
00:11:08,560 --> 00:11:09,680
percentage rollout

342
00:11:09,680 --> 00:11:12,640
or vice versa

343
00:11:13,600 --> 00:11:15,760
it's also important to set up alerts to

344
00:11:15,760 --> 00:11:17,760
page you when you get any statistically

345
00:11:17,760 --> 00:11:19,600
significant changes so

346
00:11:19,600 --> 00:11:22,000
if your business metrics are really

347
00:11:22,000 --> 00:11:24,399
being badly impacted by any change you

348
00:11:24,399 --> 00:11:25,440
should be getting

349
00:11:25,440 --> 00:11:27,760
more violent alerts through pagerduty or

350
00:11:27,760 --> 00:11:29,519
whatever application that you use

351
00:11:29,519 --> 00:11:31,519
and on the flip side if you get neutral

352
00:11:31,519 --> 00:11:33,279
or positive results maybe you can just

353
00:11:33,279 --> 00:11:35,200
set up an email alert or something a

354
00:11:35,200 --> 00:11:38,240
little bit less aggressive

355
00:11:39,200 --> 00:11:42,320
okay so this is how you can measure the

356
00:11:42,320 --> 00:11:44,720
impact of your change so i just want you

357
00:11:44,720 --> 00:11:46,959
to think about that for one second

358
00:11:46,959 --> 00:11:49,200
feature flagging allows you to directly

359
00:11:49,200 --> 00:11:50,160
correlate the

360
00:11:50,160 --> 00:11:52,320
impact of your changes by pushing

361
00:11:52,320 --> 00:11:54,720
information about the feature flags to

362
00:11:54,720 --> 00:11:56,800
the internal analytics system

363
00:11:56,800 --> 00:11:58,560
so your business decision should be

364
00:11:58,560 --> 00:12:00,320
based off of data right

365
00:12:00,320 --> 00:12:02,240
and using a smart feature flagging

366
00:12:02,240 --> 00:12:04,160
system will give you that data

367
00:12:04,160 --> 00:12:07,120
to have a successful business and

368
00:12:07,120 --> 00:12:08,079
something that

369
00:12:08,079 --> 00:12:10,639
i like to say is it's not magic it's

370
00:12:10,639 --> 00:12:13,839
just feature flags

371
00:12:14,240 --> 00:12:16,880
so the last step of the feature flagging

372
00:12:16,880 --> 00:12:17,600
life cycle

373
00:12:17,600 --> 00:12:19,440
is removing the flags and there are some

374
00:12:19,440 --> 00:12:20,880
best practices that i

375
00:12:20,880 --> 00:12:24,240
recommend for this um you want to assign

376
00:12:24,240 --> 00:12:27,200
an expiration date for each flag so

377
00:12:27,200 --> 00:12:30,079
um if after a certain date you want to

378
00:12:30,079 --> 00:12:31,600
make sure that you kill that flag you

379
00:12:31,600 --> 00:12:32,320
can add that

380
00:12:32,320 --> 00:12:34,720
to the um you can add that to the flag

381
00:12:34,720 --> 00:12:35,839
when you create it

382
00:12:35,839 --> 00:12:37,680
you can also set up alerts that will

383
00:12:37,680 --> 00:12:39,440
poke you when a flag is stale

384
00:12:39,440 --> 00:12:43,279
so if your flag hasn't received any

385
00:12:43,279 --> 00:12:45,120
impressions for a while or the flag is

386
00:12:45,120 --> 00:12:46,880
stale your feature flagging system

387
00:12:46,880 --> 00:12:48,399
should poke you and say hey you know

388
00:12:48,399 --> 00:12:50,240
it's time to remove this flag

389
00:12:50,240 --> 00:12:52,399
and that way you can prevent having

390
00:12:52,399 --> 00:12:53,760
hundreds of flags that

391
00:12:53,760 --> 00:12:56,560
aren't being used anymore and this also

392
00:12:56,560 --> 00:12:58,240
prevents having flags that

393
00:12:58,240 --> 00:12:59,760
you've forgotten about or that have

394
00:12:59,760 --> 00:13:01,200
already been turned on that don't have

395
00:13:01,200 --> 00:13:02,800
any problems

396
00:13:02,800 --> 00:13:05,040
these are some really useful tips

397
00:13:05,040 --> 00:13:06,480
another helpful thing to do

398
00:13:06,480 --> 00:13:09,200
is to add a subtask to your backlog to

399
00:13:09,200 --> 00:13:11,279
retire the flag at the same time that

400
00:13:11,279 --> 00:13:13,360
the flag is created

401
00:13:13,360 --> 00:13:15,279
so when you create the ticket in your

402
00:13:15,279 --> 00:13:18,160
backlog to create the flag

403
00:13:18,160 --> 00:13:19,680
this is usually when you're creating the

404
00:13:19,680 --> 00:13:21,839
feature make sure you also create a

405
00:13:21,839 --> 00:13:23,920
ticket to delete the flag once you reach

406
00:13:23,920 --> 00:13:25,360
your definition of done

407
00:13:25,360 --> 00:13:27,040
and this is something that works well

408
00:13:27,040 --> 00:13:28,480
when you're working

409
00:13:28,480 --> 00:13:31,279
in a scrum team so when your product

410
00:13:31,279 --> 00:13:31,920
owner

411
00:13:31,920 --> 00:13:34,240
is creating your tasks that you're going

412
00:13:34,240 --> 00:13:35,760
to work on for the sprint

413
00:13:35,760 --> 00:13:38,079
make sure that along with the task to

414
00:13:38,079 --> 00:13:39,600
you know create the feature flag

415
00:13:39,600 --> 00:13:40,639
implement the feature

416
00:13:40,639 --> 00:13:42,560
turn the feature flag on that you also

417
00:13:42,560 --> 00:13:44,560
have a task to delete that flag and that

418
00:13:44,560 --> 00:13:46,079
prevents you from

419
00:13:46,079 --> 00:13:49,199
again having this huge backlog of

420
00:13:49,199 --> 00:13:50,639
feature flags that aren't being used

421
00:13:50,639 --> 00:13:53,040
anymore

422
00:13:53,279 --> 00:13:55,040
and you also want to make sure that you

423
00:13:55,040 --> 00:13:57,199
don't have old feature flags in your

424
00:13:57,199 --> 00:13:59,760
code after your flags are deleted so

425
00:13:59,760 --> 00:14:01,839
be sure to remove the old code when you

426
00:14:01,839 --> 00:14:05,120
delete the feature flag

427
00:14:06,240 --> 00:14:08,320
and i guess i just spoke really fast

428
00:14:08,320 --> 00:14:10,399
because that's all i have

429
00:14:10,399 --> 00:14:12,639
but i'm happy to use the rest of the

430
00:14:12,639 --> 00:14:15,120
time for questions

431
00:14:15,120 --> 00:14:18,480
this is also my contact information if

432
00:14:18,480 --> 00:14:21,360
um you want me to email me or you have

433
00:14:21,360 --> 00:14:21,839
uh

434
00:14:21,839 --> 00:14:24,160
questions um this is my twitter account

435
00:14:24,160 --> 00:14:25,040
feel free to

436
00:14:25,040 --> 00:14:27,360
follow me or or tag me to ask questions

437
00:14:27,360 --> 00:14:28,399
i'm happy to

438
00:14:28,399 --> 00:14:31,839
to answer anything

439
00:14:35,120 --> 00:14:37,040
i'm talking about mute so i'm going to

440
00:14:37,040 --> 00:14:38,160
join the stream so

441
00:14:38,160 --> 00:14:40,800
anybody who has questions please um feel

442
00:14:40,800 --> 00:14:42,160
free to jump in and

443
00:14:42,160 --> 00:14:45,360
ask on our channel um i'm going to

444
00:14:45,360 --> 00:14:50,320
ask a couple of questions for for my own

445
00:14:50,320 --> 00:14:53,199
so um one thing that gets kind of

446
00:14:53,199 --> 00:14:55,519
complicated with future flags is once

447
00:14:55,519 --> 00:14:56,800
you have a lot of them

448
00:14:56,800 --> 00:14:59,120
um you need some good way to manage them

449
00:14:59,120 --> 00:15:00,160
and just like

450
00:15:00,160 --> 00:15:01,760
how do you physically do it do you

451
00:15:01,760 --> 00:15:04,160
maintain a huge config file do you put

452
00:15:04,160 --> 00:15:06,240
them in a database is everything an if

453
00:15:06,240 --> 00:15:08,720
statement like what do you physically do

454
00:15:08,720 --> 00:15:11,440
yeah so so you're saying like if you

455
00:15:11,440 --> 00:15:12,480
didn't have

456
00:15:12,480 --> 00:15:14,800
some sort of system from the beginning

457
00:15:14,800 --> 00:15:16,320
if you didn't have a process in place

458
00:15:16,320 --> 00:15:18,800
and you already have like a huge list of

459
00:15:18,800 --> 00:15:20,560
feature flags what do you do

460
00:15:20,560 --> 00:15:22,320
so no it's not like how do i approach

461
00:15:22,320 --> 00:15:24,240
this what's the best practice because i

462
00:15:24,240 --> 00:15:26,079
can see how this could go terribly

463
00:15:26,079 --> 00:15:29,519
wrong right and i'm just curious

464
00:15:29,519 --> 00:15:31,680
if there's best practice implementation

465
00:15:31,680 --> 00:15:32,959
for this

466
00:15:32,959 --> 00:15:34,560
yeah so just what i was talking about

467
00:15:34,560 --> 00:15:36,639
the best practices when you're

468
00:15:36,639 --> 00:15:38,320
um when you're setting up your feature

469
00:15:38,320 --> 00:15:39,920
flag so like if you use a ticketing

470
00:15:39,920 --> 00:15:40,639
system

471
00:15:40,639 --> 00:15:42,959
make sure that you create a task for

472
00:15:42,959 --> 00:15:44,880
removal of the flag once the feature is

473
00:15:44,880 --> 00:15:46,000
already out

474
00:15:46,000 --> 00:15:48,959
um you can also use these these flags

475
00:15:48,959 --> 00:15:49,839
when you're

476
00:15:49,839 --> 00:15:51,759
when you're doing a b testing or testing

477
00:15:51,759 --> 00:15:53,279
in production or any of the other

478
00:15:53,279 --> 00:15:55,519
examples that i gave but in terms of

479
00:15:55,519 --> 00:15:56,800
like maintenance when

480
00:15:56,800 --> 00:15:59,440
you already have the flag created it's a

481
00:15:59,440 --> 00:16:00,160
good idea

482
00:16:00,160 --> 00:16:02,880
to track those flags just even through

483
00:16:02,880 --> 00:16:04,240
split you can have

484
00:16:04,240 --> 00:16:07,199
um you can have an alert or something

485
00:16:07,199 --> 00:16:08,079
that pokes you

486
00:16:08,079 --> 00:16:10,000
after i don't know whatever amount of

487
00:16:10,000 --> 00:16:11,680
time that says hey you know

488
00:16:11,680 --> 00:16:13,519
this flag hasn't had any impressions in

489
00:16:13,519 --> 00:16:15,279
a while or this flag is stale you got to

490
00:16:15,279 --> 00:16:16,240
delete it so

491
00:16:16,240 --> 00:16:18,720
the the feature flagging system will

492
00:16:18,720 --> 00:16:19,600
alert you

493
00:16:19,600 --> 00:16:22,639
if you have these like old old flags

494
00:16:22,639 --> 00:16:25,040
that aren't being used

495
00:16:25,040 --> 00:16:27,440
another question is what impact would we

496
00:16:27,440 --> 00:16:28,880
have if we turn on

497
00:16:28,880 --> 00:16:31,519
off a feature flag and it has feature

498
00:16:31,519 --> 00:16:33,120
dependent on that feature

499
00:16:33,120 --> 00:16:36,480
i guess the word feature was used a lot

500
00:16:36,480 --> 00:16:38,959
so the question is what happens if you

501
00:16:38,959 --> 00:16:40,959
turn off a feature flag that's dependent

502
00:16:40,959 --> 00:16:42,480
on another feature

503
00:16:42,480 --> 00:16:45,360
um i think the question is like if you

504
00:16:45,360 --> 00:16:46,639
still have something

505
00:16:46,639 --> 00:16:48,320
that's dependent on the feature flag and

506
00:16:48,320 --> 00:16:50,000
you i guess accidentally turn

507
00:16:50,000 --> 00:16:52,160
it off or are you just ready to retire

508
00:16:52,160 --> 00:16:54,000
the feature flag

509
00:16:54,000 --> 00:16:56,480
yeah so once the feature flag is already

510
00:16:56,480 --> 00:16:57,040
on

511
00:16:57,040 --> 00:16:59,040
you can remove the feature flag as long

512
00:16:59,040 --> 00:17:00,959
as you rolled it out to 100

513
00:17:00,959 --> 00:17:02,959
of your users so you can remove it in

514
00:17:02,959 --> 00:17:05,039
your code and you can remove it um

515
00:17:05,039 --> 00:17:08,400
in in the um on the ui of whatever

516
00:17:08,400 --> 00:17:10,720
system you use so as long as it's rolled

517
00:17:10,720 --> 00:17:12,959
out to 100 of your users you can remove

518
00:17:12,959 --> 00:17:14,959
the like if else statement that's in

519
00:17:14,959 --> 00:17:17,439
your code

520
00:17:17,439 --> 00:17:19,839
and if it's dependent on another feature

521
00:17:19,839 --> 00:17:21,119
then you want to make sure that you test

522
00:17:21,119 --> 00:17:23,119
that in production ahead of time

523
00:17:23,119 --> 00:17:24,799
um so when i was talking about like

524
00:17:24,799 --> 00:17:27,359
creating automation users or test users

525
00:17:27,359 --> 00:17:29,520
you can target those inside of whatever

526
00:17:29,520 --> 00:17:30,880
combination that you're worried about

527
00:17:30,880 --> 00:17:32,000
and make sure that it works ahead

528
00:17:32,000 --> 00:17:35,760
of time awesome um

529
00:17:35,760 --> 00:17:37,600
so are there any frameworks for

530
00:17:37,600 --> 00:17:39,600
implementing feature flags or do most

531
00:17:39,600 --> 00:17:40,320
teams

532
00:17:40,320 --> 00:17:43,200
just roll their own oh that's a great

533
00:17:43,200 --> 00:17:44,960
question um

534
00:17:44,960 --> 00:17:48,240
i personally i love using split it's

535
00:17:48,240 --> 00:17:49,520
like the most

536
00:17:49,520 --> 00:17:52,720
um intuitive ui for me

537
00:17:52,720 --> 00:17:55,440
so i would say look check out split um

538
00:17:55,440 --> 00:17:57,200
they have a free version and a paid

539
00:17:57,200 --> 00:17:58,400
version so

540
00:17:58,400 --> 00:18:00,160
you can try the free version and if you

541
00:18:00,160 --> 00:18:01,919
like it i'm sure they'll

542
00:18:01,919 --> 00:18:04,000
um you can reach out to them for for

543
00:18:04,000 --> 00:18:05,200
more information but

544
00:18:05,200 --> 00:18:06,799
that's the one that i found is the most

545
00:18:06,799 --> 00:18:08,640
beneficial especially with all the

546
00:18:08,640 --> 00:18:11,600
different types of use cases

547
00:18:11,600 --> 00:18:14,960
yeah um seems that many people forget

548
00:18:14,960 --> 00:18:16,720
about removing a feature flag

549
00:18:16,720 --> 00:18:18,559
and all the code behind is if it's

550
00:18:18,559 --> 00:18:19,760
disabled

551
00:18:19,760 --> 00:18:22,480
um how do we make sure that uh the

552
00:18:22,480 --> 00:18:25,520
feature flags are properly deactivated

553
00:18:25,520 --> 00:18:27,600
yeah so i'm just gonna go back in my

554
00:18:27,600 --> 00:18:28,960
slides real quick um

555
00:18:28,960 --> 00:18:32,160
so for clean up of your flags a few

556
00:18:32,160 --> 00:18:33,600
things you can do is assign an

557
00:18:33,600 --> 00:18:35,600
expiration date for your flags and this

558
00:18:35,600 --> 00:18:36,559
is really simple

559
00:18:36,559 --> 00:18:39,600
inside of the feature flagging ui you

560
00:18:39,600 --> 00:18:41,440
can also set up alerts that will poke

561
00:18:41,440 --> 00:18:43,200
you when a flag is stale so

562
00:18:43,200 --> 00:18:44,880
if it's past the expiration date you'll

563
00:18:44,880 --> 00:18:46,559
get an alert saying hey you know

564
00:18:46,559 --> 00:18:48,240
this flag has been on and there hasn't

565
00:18:48,240 --> 00:18:50,880
been any problems let's remove the flag

566
00:18:50,880 --> 00:18:53,120
um and also you can create a subtask in

567
00:18:53,120 --> 00:18:54,960
your ticketing system and

568
00:18:54,960 --> 00:18:57,039
um things that i talked about with like

569
00:18:57,039 --> 00:18:58,240
jira and

570
00:18:58,240 --> 00:19:00,480
asana and you know including those

571
00:19:00,480 --> 00:19:01,760
ticketing names

572
00:19:01,760 --> 00:19:04,720
inside of your um feature flag so that

573
00:19:04,720 --> 00:19:05,280
you can

574
00:19:05,280 --> 00:19:07,440
you can go and jiren and once the ticket

575
00:19:07,440 --> 00:19:09,520
is closed then you can go back and split

576
00:19:09,520 --> 00:19:11,840
and you know remove that remove that

577
00:19:11,840 --> 00:19:13,360
future flag as well so

578
00:19:13,360 --> 00:19:15,039
i think proper naming conventions are

579
00:19:15,039 --> 00:19:16,880
really a big um

580
00:19:16,880 --> 00:19:18,559
big piece of the puzzle here because if

581
00:19:18,559 --> 00:19:20,559
you name them correctly and you know

582
00:19:20,559 --> 00:19:21,919
that that feature has already been

583
00:19:21,919 --> 00:19:23,440
shipped it's already been

584
00:19:23,440 --> 00:19:25,840
um tested it's it's doing well in

585
00:19:25,840 --> 00:19:26,960
production you don't need to have that

586
00:19:26,960 --> 00:19:28,240
kill switch anymore because you're

587
00:19:28,240 --> 00:19:29,200
confident

588
00:19:29,200 --> 00:19:32,080
um then you can remove the flag so but

589
00:19:32,080 --> 00:19:33,280
the biggest thing i would say is make

590
00:19:33,280 --> 00:19:34,799
sure that you have this process in place

591
00:19:34,799 --> 00:19:35,840
and you talk to your team

592
00:19:35,840 --> 00:19:38,400
ahead of time so that you don't have

593
00:19:38,400 --> 00:19:39,919
you're not left with all these feature

594
00:19:39,919 --> 00:19:41,280
flags that should never be the case

595
00:19:41,280 --> 00:19:42,160
where you have

596
00:19:42,160 --> 00:19:43,760
you know 100 of them and you don't know

597
00:19:43,760 --> 00:19:46,080
what to do

598
00:19:46,080 --> 00:19:48,240
um another question is do you think

599
00:19:48,240 --> 00:19:50,480
future flags requires some continuous

600
00:19:50,480 --> 00:19:54,559
integration continuous delivery maturity

601
00:19:54,559 --> 00:19:58,720
um yes when do it or do we need to be

602
00:19:58,720 --> 00:20:00,720
some type of advanced organization maybe

603
00:20:00,720 --> 00:20:03,280
to be able to roll these out

604
00:20:03,280 --> 00:20:06,480
um okay so feature flags allow you to

605
00:20:06,480 --> 00:20:07,120
separate

606
00:20:07,120 --> 00:20:10,080
your code deployment from your feature

607
00:20:10,080 --> 00:20:11,280
releases so

608
00:20:11,280 --> 00:20:14,159
you can cont you can deploy your code

609
00:20:14,159 --> 00:20:15,280
and continuously

610
00:20:15,280 --> 00:20:18,320
like have that process going without

611
00:20:18,320 --> 00:20:21,120
releasing features so if you have a

612
00:20:21,120 --> 00:20:22,000
feature flag

613
00:20:22,000 --> 00:20:24,880
and um i'm gonna this might be easier if

614
00:20:24,880 --> 00:20:27,760
i show you the graphic

615
00:20:27,760 --> 00:20:31,520
um where's my here if if i have this

616
00:20:31,520 --> 00:20:32,320
feature flag

617
00:20:32,320 --> 00:20:35,679
and um i'm targeting you know my devs my

618
00:20:35,679 --> 00:20:36,559
testers

619
00:20:36,559 --> 00:20:38,640
um the people on my team in the feature

620
00:20:38,640 --> 00:20:40,720
flag i can continuously push

621
00:20:40,720 --> 00:20:43,440
code to this feature flag and my end

622
00:20:43,440 --> 00:20:45,440
users won't see it until i turn the

623
00:20:45,440 --> 00:20:46,559
feature flag on so

624
00:20:46,559 --> 00:20:49,039
until i'm ready to release the feature

625
00:20:49,039 --> 00:20:50,559
um

626
00:20:50,559 --> 00:20:52,640
they won't see any changes so i do think

627
00:20:52,640 --> 00:20:54,640
continuous delivery is a big part of

628
00:20:54,640 --> 00:20:55,360
this

629
00:20:55,360 --> 00:20:58,960
um because after you push your code into

630
00:20:58,960 --> 00:20:59,919
the feature flag

631
00:20:59,919 --> 00:21:01,280
you can do that as many times as you

632
00:21:01,280 --> 00:21:03,120
need to to make sure that it's working

633
00:21:03,120 --> 00:21:05,600
for you guys internally in production

634
00:21:05,600 --> 00:21:06,320
and then

635
00:21:06,320 --> 00:21:09,120
turn the feature flag on and have a

636
00:21:09,120 --> 00:21:11,840
feature release

637
00:21:12,000 --> 00:21:14,640
someone was asking if you have a

638
00:21:14,640 --> 00:21:16,960
dashboard of all deployed feature flags

639
00:21:16,960 --> 00:21:19,440
and uh you know you can just easily

640
00:21:19,440 --> 00:21:22,720
glance at it and figure out what's live

641
00:21:22,720 --> 00:21:26,240
yeah absolutely and like split has one

642
00:21:26,240 --> 00:21:27,919
that is like super intuitive that you

643
00:21:27,919 --> 00:21:29,600
just look at and see you know these are

644
00:21:29,600 --> 00:21:30,559
live these are all

645
00:21:30,559 --> 00:21:34,080
these haven't had impressions um so

646
00:21:34,080 --> 00:21:37,280
yeah um another

647
00:21:37,280 --> 00:21:39,679
question was about frameworks so i know

648
00:21:39,679 --> 00:21:41,280
you mentioned split a number of times i

649
00:21:41,280 --> 00:21:43,440
think launch darkly is another one right

650
00:21:43,440 --> 00:21:44,960
i i don't know if you have any other

651
00:21:44,960 --> 00:21:46,080
ones to mention

652
00:21:46,080 --> 00:21:48,000
uh for someone who wants to get started

653
00:21:48,000 --> 00:21:49,919
by the future flag framework

654
00:21:49,919 --> 00:21:52,320
yeah yeah those those are the those are

655
00:21:52,320 --> 00:21:54,240
the big ones

656
00:21:54,240 --> 00:21:58,799
okay um so someone asked i just see

657
00:21:58,799 --> 00:22:00,880
a feature flag on the back and side as

658
00:22:00,880 --> 00:22:02,320
an enormous number of

659
00:22:02,320 --> 00:22:05,600
if ifs like if statements um how do you

660
00:22:05,600 --> 00:22:08,158
address that

661
00:22:08,960 --> 00:22:12,159
um so feature flags

662
00:22:12,159 --> 00:22:14,159
are if else statements so you're saying

663
00:22:14,159 --> 00:22:15,919
if this person is targeted in the

664
00:22:15,919 --> 00:22:18,080
feature flag i want to show them this

665
00:22:18,080 --> 00:22:20,240
treatment and if someone is not in the

666
00:22:20,240 --> 00:22:21,600
feature flag i want to show them this

667
00:22:21,600 --> 00:22:23,200
other treatment so

668
00:22:23,200 --> 00:22:25,120
there's there's no way around that you

669
00:22:25,120 --> 00:22:26,960
you need to have an if else for each

670
00:22:26,960 --> 00:22:28,240
flag

671
00:22:28,240 --> 00:22:31,360
um yeah so you

672
00:22:31,360 --> 00:22:33,200
okay you can't break it around and just

673
00:22:33,200 --> 00:22:35,120
do defensive coding with a lot of if

674
00:22:35,120 --> 00:22:36,559
statements or switches yeah

675
00:22:36,559 --> 00:22:39,280
there's something okay um i want to ask

676
00:22:39,280 --> 00:22:40,000
another question

677
00:22:40,000 --> 00:22:42,159
which is um you mentioned that um we

678
00:22:42,159 --> 00:22:44,000
should never turn off a feature for

679
00:22:44,000 --> 00:22:46,080
someone who who's been targeted before

680
00:22:46,080 --> 00:22:48,400
how do you trace that like sometimes

681
00:22:48,400 --> 00:22:49,760
people have

682
00:22:49,760 --> 00:22:52,000
like they're not even signed in and they

683
00:22:52,000 --> 00:22:53,600
might like clear their cookies and how

684
00:22:53,600 --> 00:22:54,000
how

685
00:22:54,000 --> 00:22:55,760
do you identify that as the same user

686
00:22:55,760 --> 00:22:58,240
even yeah so

687
00:22:58,240 --> 00:23:00,480
with our tool what you're able to do is

688
00:23:00,480 --> 00:23:02,240
you can see impression data

689
00:23:02,240 --> 00:23:04,240
and with that impression data you get

690
00:23:04,240 --> 00:23:05,919
some metadata that like

691
00:23:05,919 --> 00:23:09,280
shows you um uh

692
00:23:09,280 --> 00:23:11,600
not like user information but it shows

693
00:23:11,600 --> 00:23:12,720
you um

694
00:23:12,720 --> 00:23:16,320
user metadata of like this amount of

695
00:23:16,320 --> 00:23:18,000
users logging in and this amount of

696
00:23:18,000 --> 00:23:18,799
users

697
00:23:18,799 --> 00:23:20,880
like what their what which experience

698
00:23:20,880 --> 00:23:22,159
they're getting so

699
00:23:22,159 --> 00:23:25,039
if you get one user with experience a

700
00:23:25,039 --> 00:23:26,640
then that user should continuously get

701
00:23:26,640 --> 00:23:27,840
experience a

702
00:23:27,840 --> 00:23:30,559
um it depends how your system was set up

703
00:23:30,559 --> 00:23:32,240
like if you use cookies and someone

704
00:23:32,240 --> 00:23:33,679
clears their cookie and they get a

705
00:23:33,679 --> 00:23:35,440
different experience

706
00:23:35,440 --> 00:23:37,200
there's other ways to implement your

707
00:23:37,200 --> 00:23:39,919
feature flags that don't use a cookie

708
00:23:39,919 --> 00:23:42,159
but you you just want to make sure that

709
00:23:42,159 --> 00:23:43,679
like if you're doing a continuous

710
00:23:43,679 --> 00:23:44,640
rollout

711
00:23:44,640 --> 00:23:48,640
that someone who originally had

712
00:23:48,640 --> 00:23:50,400
one experience continues to have that

713
00:23:50,400 --> 00:23:52,240
same experience

714
00:23:52,240 --> 00:23:54,799
gotcha i'm i'm just looking if there's

715
00:23:54,799 --> 00:23:56,080
other questions someone

716
00:23:56,080 --> 00:23:59,200
suggested that um you could potentially

717
00:23:59,200 --> 00:24:02,240
implement feature flags with rest api

718
00:24:02,240 --> 00:24:04,000
endpoints so you you calling different

719
00:24:04,000 --> 00:24:07,039
api endpoints based on a future flag

720
00:24:07,039 --> 00:24:09,600
i don't know if you've seen um you could

721
00:24:09,600 --> 00:24:10,480
try

722
00:24:10,480 --> 00:24:11,840
you could try it's um

723
00:24:11,840 --> 00:24:13,520
[Music]

724
00:24:13,520 --> 00:24:14,960
generally when people try to build their

725
00:24:14,960 --> 00:24:16,559
own feature flagging systems you run

726
00:24:16,559 --> 00:24:17,440
into

727
00:24:17,440 --> 00:24:19,919
a million problems um so i don't

728
00:24:19,919 --> 00:24:21,679
recommend building your own i recommend

729
00:24:21,679 --> 00:24:22,480
using one that's

730
00:24:22,480 --> 00:24:25,760
that's already available um but i'm not

731
00:24:25,760 --> 00:24:26,320
gonna

732
00:24:26,320 --> 00:24:29,440
stop you from trying yeah

733
00:24:29,440 --> 00:24:32,480
um another question that just came up is

734
00:24:32,480 --> 00:24:35,679
how does feature flags uh how is the

735
00:24:35,679 --> 00:24:38,799
development on mobile different

736
00:24:38,799 --> 00:24:40,799
feature flag development on mobile or

737
00:24:40,799 --> 00:24:42,640
feature flag music

738
00:24:42,640 --> 00:24:45,600
and i guess yeah yeah so i would say a

739
00:24:45,600 --> 00:24:46,159
lot of the

740
00:24:46,159 --> 00:24:49,279
the best practices that i said um go for

741
00:24:49,279 --> 00:24:50,559
mobile as well

742
00:24:50,559 --> 00:24:53,600
um in terms of like mobile usage i think

743
00:24:53,600 --> 00:24:55,120
performance is just a much

744
00:24:55,120 --> 00:24:58,840
bigger component in a mobile device so

745
00:24:58,840 --> 00:25:02,000
um in terms of like lag times and

746
00:25:02,000 --> 00:25:03,600
and screen load times and all that i

747
00:25:03,600 --> 00:25:05,039
think those are much more important on a

748
00:25:05,039 --> 00:25:06,480
mobile device so i would just make sure

749
00:25:06,480 --> 00:25:07,200
that like

750
00:25:07,200 --> 00:25:10,880
any changes you make um if they

751
00:25:10,880 --> 00:25:13,279
if they affect any sort of performance

752
00:25:13,279 --> 00:25:15,039
um i would say those are most more

753
00:25:15,039 --> 00:25:17,919
important in mobile

754
00:25:18,240 --> 00:25:21,039
another question for me so um i think in

755
00:25:21,039 --> 00:25:22,320
a couple of products that

756
00:25:22,320 --> 00:25:24,320
i've worked on before uh the future

757
00:25:24,320 --> 00:25:26,240
flags were and i'm not familiar with

758
00:25:26,240 --> 00:25:26,960
split

759
00:25:26,960 --> 00:25:28,640
i'm assuming they do something like this

760
00:25:28,640 --> 00:25:30,320
you can sort of opt-in

761
00:25:30,320 --> 00:25:32,240
users into the feature flag but you can

762
00:25:32,240 --> 00:25:33,440
also let them up

763
00:25:33,440 --> 00:25:36,000
themselves in um and then you can

764
00:25:36,000 --> 00:25:38,000
hopefully trace if they're alternating

765
00:25:38,000 --> 00:25:38,640
or not

766
00:25:38,640 --> 00:25:42,080
is there something like that um um i

767
00:25:42,080 --> 00:25:44,159
actually don't know if users are able

768
00:25:44,159 --> 00:25:47,440
to to opt in or out of your

769
00:25:47,440 --> 00:25:48,960
feature flag i think that would just be

770
00:25:48,960 --> 00:25:51,120
a setting in your ui and like whatever

771
00:25:51,120 --> 00:25:53,200
website or app that says like

772
00:25:53,200 --> 00:25:56,640
um you know press this button for this

773
00:25:56,640 --> 00:25:58,559
feature and press this button for the

774
00:25:58,559 --> 00:26:00,000
existing um

775
00:26:00,000 --> 00:26:01,760
in that case you would still be able to

776
00:26:01,760 --> 00:26:03,919
use you know split or launch directly or

777
00:26:03,919 --> 00:26:04,799
whatever

778
00:26:04,799 --> 00:26:06,960
i actually don't know if launch directly

779
00:26:06,960 --> 00:26:08,240
does this but you can

780
00:26:08,240 --> 00:26:11,039
you can still use um the same feature

781
00:26:11,039 --> 00:26:12,559
flagging framework it would just be

782
00:26:12,559 --> 00:26:15,679
inside of that component

783
00:26:15,679 --> 00:26:17,440
cool because i think it's one of the

784
00:26:17,440 --> 00:26:19,200
most empowering experiences just

785
00:26:19,200 --> 00:26:22,240
being able to like for users to enable

786
00:26:22,240 --> 00:26:24,320
this and also to track that on the user

787
00:26:24,320 --> 00:26:26,000
side like if they're not enabling this

788
00:26:26,000 --> 00:26:27,840
then you must not have gotten the

789
00:26:27,840 --> 00:26:28,720
feature

790
00:26:28,720 --> 00:26:31,039
quite correct and you might want to go

791
00:26:31,039 --> 00:26:32,320
you know improve that

792
00:26:32,320 --> 00:26:35,360
um let me see if there's any other

793
00:26:35,360 --> 00:26:38,400
questions i think not

794
00:26:38,400 --> 00:26:40,559
lots of comments on having a great talk

795
00:26:40,559 --> 00:26:42,960
so thank you

796
00:26:42,960 --> 00:26:45,120
and um i guess we have a couple of

797
00:26:45,120 --> 00:26:46,080
minutes before

798
00:26:46,080 --> 00:26:50,080
the next talk so all right thank you

799
00:26:50,080 --> 00:26:53,840
thank you talia hi

