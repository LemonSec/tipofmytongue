1
00:00:00,000 --> 00:00:02,240
managing serverless deployments with k

2
00:00:02,240 --> 00:00:04,080
native and jenkins x

3
00:00:04,080 --> 00:00:07,200
so let me introduce our next speaker

4
00:00:07,200 --> 00:00:08,960
here we go there we go victor how are

5
00:00:08,960 --> 00:00:10,559
you victor hey

6
00:00:10,559 --> 00:00:14,000
always good excellent excellent i think

7
00:00:14,000 --> 00:00:16,880
rick the car kick

8
00:00:18,000 --> 00:00:19,680
depending on whether you want simple or

9
00:00:19,680 --> 00:00:21,680
complicated version okay go give me the

10
00:00:21,680 --> 00:00:23,199
complicated

11
00:00:23,199 --> 00:00:25,199
fart but then we have half an hour

12
00:00:25,199 --> 00:00:26,720
discussion how you think that you're

13
00:00:26,720 --> 00:00:29,680
pronouncing it correctly

14
00:00:32,640 --> 00:00:34,320
where else are you calling in uh from

15
00:00:34,320 --> 00:00:36,640
today uh barcelona

16
00:00:36,640 --> 00:00:39,520
barcelona lovely nice yeah yeah i mean i

17
00:00:39,520 --> 00:00:41,040
don't know it is lovely i haven't

18
00:00:41,040 --> 00:00:45,040
been out of my apartment for a long time

19
00:00:49,920 --> 00:00:52,239
victor uh principal software delivery

20
00:00:52,239 --> 00:00:53,840
strategist and developer

21
00:00:53,840 --> 00:00:58,079
at cloudbees um yes he docker captain

22
00:00:58,079 --> 00:01:00,160
uh many different accolades we can we

23
00:01:00,160 --> 00:01:01,120
can use there

24
00:01:01,120 --> 00:01:04,159
uh big big author devops uh toolkit

25
00:01:04,159 --> 00:01:05,760
series devops paradox

26
00:01:05,760 --> 00:01:08,479
test driven java development as well um

27
00:01:08,479 --> 00:01:08,799
so

28
00:01:08,799 --> 00:01:11,040
it's an absolute pleasure to have you on

29
00:01:11,040 --> 00:01:12,560
today victor thank you very much for

30
00:01:12,560 --> 00:01:13,680
supporting uh

31
00:01:13,680 --> 00:01:16,159
all the talks um what are we going to

32
00:01:16,159 --> 00:01:18,080
talk about today then victor

33
00:01:18,080 --> 00:01:22,159
several deployments uh with k native

34
00:01:22,159 --> 00:01:24,240
and without meeting all that to drink

35
00:01:24,240 --> 00:01:25,280
sex

36
00:01:25,280 --> 00:01:26,960
sounds amazing so it sounds like there's

37
00:01:26,960 --> 00:01:28,320
a lot of uh

38
00:01:28,320 --> 00:01:29,920
good passwords there but also sounds

39
00:01:29,920 --> 00:01:31,680
like it's a it's not

40
00:01:31,680 --> 00:01:33,920
very very useful a lot of fun i need to

41
00:01:33,920 --> 00:01:35,600
give you a warning that i just realized

42
00:01:35,600 --> 00:01:37,360
that it's a 25-minute session

43
00:01:37,360 --> 00:01:39,360
and i have material for 45 minutes so

44
00:01:39,360 --> 00:01:40,720
it's going to be double speed

45
00:01:40,720 --> 00:01:43,680
just ignore the battery play the

46
00:01:43,680 --> 00:01:47,200
consonants and it will be bang on time

47
00:01:47,200 --> 00:01:48,720
without further ado i'll leave it up to

48
00:01:48,720 --> 00:01:50,479
you okay

49
00:01:50,479 --> 00:01:52,560
so as you already heard we're going to

50
00:01:52,560 --> 00:01:55,040
talk about serverless deployments

51
00:01:55,040 --> 00:01:57,200
i will show you a few examples using k

52
00:01:57,200 --> 00:01:58,880
native and we are going to

53
00:01:58,880 --> 00:02:00,719
let junk sex out to make all those i

54
00:02:00,719 --> 00:02:02,399
would not be actually talking about

55
00:02:02,399 --> 00:02:03,600
junkie sex today

56
00:02:03,600 --> 00:02:05,280
it would just run in the background and

57
00:02:05,280 --> 00:02:07,200
do the things that uh

58
00:02:07,200 --> 00:02:10,479
i wanted to do so uh i'm going to skip

59
00:02:10,479 --> 00:02:12,000
the introduction because you already

60
00:02:12,000 --> 00:02:12,480
heard

61
00:02:12,480 --> 00:02:15,040
uh from the guy whose name i forgot uh

62
00:02:15,040 --> 00:02:15,599
stuff

63
00:02:15,599 --> 00:02:17,599
right so that's boring i don't have

64
00:02:17,599 --> 00:02:21,200
enough time i mean i will skip

65
00:02:21,200 --> 00:02:23,040
the part of creating the cluster i did

66
00:02:23,040 --> 00:02:24,560
that in advance i kept them in the

67
00:02:24,560 --> 00:02:26,239
slides just in case somebody wants to

68
00:02:26,239 --> 00:02:27,920
repeat what they did

69
00:02:27,920 --> 00:02:31,599
uh so let's get to it immediately right

70
00:02:31,599 --> 00:02:33,519
so what we're doing with junk sex to

71
00:02:33,519 --> 00:02:35,280
begin with is that

72
00:02:35,280 --> 00:02:36,879
from the very beginning we are very

73
00:02:36,879 --> 00:02:38,400
really committed to make it as

74
00:02:38,400 --> 00:02:40,959
serverless as possible in terms that

75
00:02:40,959 --> 00:02:43,120
it just goes up and down and you don't

76
00:02:43,120 --> 00:02:45,120
need to worry much about resources

77
00:02:45,120 --> 00:02:46,959
and it will use what it needs but not

78
00:02:46,959 --> 00:02:48,879
more and all the good things right

79
00:02:48,879 --> 00:02:52,239
but that's not the subject uh

80
00:02:52,239 --> 00:02:55,360
what the subject is uh if we can do

81
00:02:55,360 --> 00:02:56,640
something similar

82
00:02:56,640 --> 00:02:58,879
uh for our applications for your

83
00:02:58,879 --> 00:03:00,080
applications right

84
00:03:00,080 --> 00:03:02,080
can we make your application servers now

85
00:03:02,080 --> 00:03:03,519
the obvious answer is yes

86
00:03:03,519 --> 00:03:06,400
i mean it's 2020. we know that we can

87
00:03:06,400 --> 00:03:07,599
make it serverless

88
00:03:07,599 --> 00:03:10,000
but let's see how one of the ways how we

89
00:03:10,000 --> 00:03:10,800
can do it

90
00:03:10,800 --> 00:03:14,000
right so let's go back in history just

91
00:03:14,000 --> 00:03:14,800
very quickly

92
00:03:14,800 --> 00:03:18,159
right a long time ago right

93
00:03:18,159 --> 00:03:20,640
when i was uh small boy we were

94
00:03:20,640 --> 00:03:22,239
deploying our application to direct

95
00:03:22,239 --> 00:03:24,400
servers right and in the meantime we got

96
00:03:24,400 --> 00:03:26,560
cloud computing and now we understand

97
00:03:26,560 --> 00:03:28,879
uh things that we have something called

98
00:03:28,879 --> 00:03:30,959
vms virtual machines and we can create

99
00:03:30,959 --> 00:03:32,319
and destroy them we

100
00:03:32,319 --> 00:03:33,920
we are creating images so they're

101
00:03:33,920 --> 00:03:36,319
immutable we are

102
00:03:36,319 --> 00:03:37,680
we're doing all the good things that you

103
00:03:37,680 --> 00:03:39,360
already know that we are doing right

104
00:03:39,360 --> 00:03:40,879
in the meantime we got container

105
00:03:40,879 --> 00:03:42,720
schedulers that's a relatively new thing

106
00:03:42,720 --> 00:03:44,239
five years give or take right that

107
00:03:44,239 --> 00:03:45,920
changed drastically some of them

108
00:03:45,920 --> 00:03:47,519
actually didn't really introduce new

109
00:03:47,519 --> 00:03:50,480
concepts but made some new concepts

110
00:03:50,480 --> 00:03:53,439
easier to all concepts easier to use

111
00:03:53,439 --> 00:03:54,319
right

112
00:03:54,319 --> 00:03:56,720
and and now where we are moving is uh

113
00:03:56,720 --> 00:03:58,080
into serverless world

114
00:03:58,080 --> 00:04:01,200
world well i must say here we're not

115
00:04:01,200 --> 00:04:01,840
really

116
00:04:01,840 --> 00:04:03,360
i don't think that we will ever be kind

117
00:04:03,360 --> 00:04:04,879
of serverless uh

118
00:04:04,879 --> 00:04:07,439
fully no that's very hard but there are

119
00:04:07,439 --> 00:04:09,920
very good use cases but that makes sense

120
00:04:09,920 --> 00:04:12,560
and another disclaimer i need to make is

121
00:04:12,560 --> 00:04:14,000
that uh even though

122
00:04:14,000 --> 00:04:16,238
there is a world functions there i will

123
00:04:16,238 --> 00:04:17,279
not be really

124
00:04:17,279 --> 00:04:20,720
treating serverless as functions uh what

125
00:04:20,720 --> 00:04:23,280
i'm thinking about right now or talking

126
00:04:23,280 --> 00:04:24,160
about is

127
00:04:24,160 --> 00:04:26,400
serverless in terms that it can be

128
00:04:26,400 --> 00:04:27,440
really anything

129
00:04:27,440 --> 00:04:30,000
uh and it's more about me not really

130
00:04:30,000 --> 00:04:31,680
thinking much about

131
00:04:31,680 --> 00:04:33,600
how it will scale whether it will scale

132
00:04:33,600 --> 00:04:35,120
where it will run and all the good

133
00:04:35,120 --> 00:04:36,560
things that we

134
00:04:36,560 --> 00:04:39,440
uh we don't like to do because we like

135
00:04:39,440 --> 00:04:40,000
to

136
00:04:40,000 --> 00:04:42,080
be focused on whatever brings value

137
00:04:42,080 --> 00:04:43,440
right the business logic of our

138
00:04:43,440 --> 00:04:44,720
applications

139
00:04:44,720 --> 00:04:48,320
so uh within the serverless computing

140
00:04:48,320 --> 00:04:50,000
world we have different options

141
00:04:50,000 --> 00:04:53,280
uh now many of those are really

142
00:04:53,280 --> 00:04:56,639
vendor specific like you can choose

143
00:04:56,639 --> 00:04:59,199
aws london or azure functions or this

144
00:04:59,199 --> 00:05:00,560
and that

145
00:05:00,560 --> 00:05:02,320
but i personally don't think that that's

146
00:05:02,320 --> 00:05:03,919
a great idea because that's

147
00:05:03,919 --> 00:05:06,320
a way for you to be locked in into a

148
00:05:06,320 --> 00:05:07,680
certain provider

149
00:05:07,680 --> 00:05:09,759
and if there is anything that we learn

150
00:05:09,759 --> 00:05:12,080
from kubernetes is that that portability

151
00:05:12,080 --> 00:05:14,639
and ability to have a single api that is

152
00:05:14,639 --> 00:05:15,120
free

153
00:05:15,120 --> 00:05:17,680
and uh available to everybody and works

154
00:05:17,680 --> 00:05:19,360
everywhere is a great thing right

155
00:05:19,360 --> 00:05:21,600
so here i do believe that we are moving

156
00:05:21,600 --> 00:05:23,120
towards a world where we are

157
00:05:23,120 --> 00:05:25,280
less dependent on certain providers and

158
00:05:25,280 --> 00:05:27,280
we can move things around right

159
00:05:27,280 --> 00:05:29,120
i could be today in azure tomorrow in

160
00:05:29,120 --> 00:05:30,960
google day after that in that it'll be

161
00:05:30,960 --> 00:05:32,720
i mean maybe not within a day right but

162
00:05:32,720 --> 00:05:34,639
that's at least ideal idea is not to be

163
00:05:34,639 --> 00:05:35,039
really

164
00:05:35,039 --> 00:05:38,320
locked in into something proprietary

165
00:05:38,320 --> 00:05:40,400
uh at least unless it provides a

166
00:05:40,400 --> 00:05:42,960
significant added value

167
00:05:42,960 --> 00:05:44,880
now the alternative to that you know to

168
00:05:44,880 --> 00:05:46,720
go to a cloud vendor and uh

169
00:05:46,720 --> 00:05:49,360
have some proprietary stuff is to run

170
00:05:49,360 --> 00:05:50,720
serverless role on your own

171
00:05:50,720 --> 00:05:53,360
infrastructure but that kind of defines

172
00:05:53,360 --> 00:05:54,800
purpose you can do that there are

173
00:05:54,800 --> 00:05:57,120
framers for that but if you're going to

174
00:05:57,120 --> 00:05:58,319
manage that infrastructure

175
00:05:58,319 --> 00:05:59,520
somebody needs to manage that

176
00:05:59,520 --> 00:06:01,280
infrastructure and that's actually one

177
00:06:01,280 --> 00:06:03,039
of the pain points that we are trying to

178
00:06:03,039 --> 00:06:03,759
remove

179
00:06:03,759 --> 00:06:05,280
at least in my head we are trying to

180
00:06:05,280 --> 00:06:08,160
remove it serverless

181
00:06:08,160 --> 00:06:09,919
and also functions which i already

182
00:06:09,919 --> 00:06:11,440
mentioned are kind of

183
00:06:11,440 --> 00:06:15,039
limiting uh at least in my head

184
00:06:15,039 --> 00:06:17,360
defining everything is in as a function

185
00:06:17,360 --> 00:06:20,800
especially in a very very complex system

186
00:06:20,800 --> 00:06:23,840
might not be that good of an idea and i

187
00:06:23,840 --> 00:06:25,280
do like the idea of functions

188
00:06:25,280 --> 00:06:27,120
it's nice to write like 20 lines of

189
00:06:27,120 --> 00:06:28,960
something and say this is my function do

190
00:06:28,960 --> 00:06:30,080
something

191
00:06:30,080 --> 00:06:32,160
but that's all then also kind of you

192
00:06:32,160 --> 00:06:33,440
realize that that has certain

193
00:06:33,440 --> 00:06:34,240
limitations

194
00:06:34,240 --> 00:06:37,120
and systems are rarely that simple and

195
00:06:37,120 --> 00:06:38,800
it might not be the best idea to have

196
00:06:38,800 --> 00:06:40,479
hundreds of thousands of functions

197
00:06:40,479 --> 00:06:42,160
instead of one application that

198
00:06:42,160 --> 00:06:45,440
introduces its own um limitations or

199
00:06:45,440 --> 00:06:46,639
problems

200
00:06:46,639 --> 00:06:50,000
that we might be facing so

201
00:06:50,000 --> 00:06:51,599
i think that where we are moving right

202
00:06:51,599 --> 00:06:53,680
now uh

203
00:06:53,680 --> 00:06:55,680
not for everybody of course but part of

204
00:06:55,680 --> 00:06:58,000
us are moving is to the idea that

205
00:06:58,000 --> 00:07:00,000
yes we are already accepted that

206
00:07:00,000 --> 00:07:01,440
everybody is or

207
00:07:01,440 --> 00:07:04,000
will be using kubernetes that's i assume

208
00:07:04,000 --> 00:07:05,840
that that's a given today right

209
00:07:05,840 --> 00:07:07,759
uh there is not much discussion it's

210
00:07:07,759 --> 00:07:09,280
just a question whether you're already

211
00:07:09,280 --> 00:07:11,680
there or you will be going there soon

212
00:07:11,680 --> 00:07:14,720
because it's simply it's too big for

213
00:07:14,720 --> 00:07:16,960
for us to ignore it these days so if

214
00:07:16,960 --> 00:07:18,720
you're already going to use kubernetes

215
00:07:18,720 --> 00:07:20,400
then it probably makes sense and we are

216
00:07:20,400 --> 00:07:21,039
going to

217
00:07:21,039 --> 00:07:23,440
spend effort in maintaining our clusters

218
00:07:23,440 --> 00:07:24,160
and

219
00:07:24,160 --> 00:07:26,800
we we are going to have to do that one

220
00:07:26,800 --> 00:07:28,000
way or another

221
00:07:28,000 --> 00:07:30,319
uh so why not then run serverless

222
00:07:30,319 --> 00:07:32,240
applications or applications that behave

223
00:07:32,240 --> 00:07:33,440
with serverless

224
00:07:33,440 --> 00:07:36,240
uh inside of kubernetes and the the

225
00:07:36,240 --> 00:07:37,199
obvious reason

226
00:07:37,199 --> 00:07:39,199
what i mentioned already is because you

227
00:07:39,199 --> 00:07:40,720
are going to have kubernetes or you

228
00:07:40,720 --> 00:07:41,759
already have it so

229
00:07:41,759 --> 00:07:44,160
there is no real significant overhead in

230
00:07:44,160 --> 00:07:45,919
managing your infrastructure

231
00:07:45,919 --> 00:07:49,039
uh it is the departure standard right uh

232
00:07:49,039 --> 00:07:50,639
probably there is no bigger standard

233
00:07:50,639 --> 00:07:52,879
today in industry or de facto standard

234
00:07:52,879 --> 00:07:55,440
than kubernetes and you're not really

235
00:07:55,440 --> 00:07:57,520
locked into into any vendor you're free

236
00:07:57,520 --> 00:07:58,000
to choose

237
00:07:58,000 --> 00:08:00,800
whatever you want and you know that that

238
00:08:00,800 --> 00:08:02,319
something will work no matter

239
00:08:02,319 --> 00:08:04,080
whether you're hosting it here or there

240
00:08:04,080 --> 00:08:06,720
whether it's on-prem or azure or aws or

241
00:08:06,720 --> 00:08:08,560
digital ocean google whatever it is

242
00:08:08,560 --> 00:08:09,039
right

243
00:08:09,039 --> 00:08:10,879
so it's very attractive option at least

244
00:08:10,879 --> 00:08:12,080
from my perspective

245
00:08:12,080 --> 00:08:15,360
if those things matter to you and then

246
00:08:15,360 --> 00:08:16,080
that poses

247
00:08:16,080 --> 00:08:19,039
uh our natural questions if we are going

248
00:08:19,039 --> 00:08:20,160
to

249
00:08:20,160 --> 00:08:22,960
run some form of serverless workloads in

250
00:08:22,960 --> 00:08:23,919
kubernetes

251
00:08:23,919 --> 00:08:25,919
what can they be which types of

252
00:08:25,919 --> 00:08:27,840
applications fit the story

253
00:08:27,840 --> 00:08:31,199
now a short answer is that

254
00:08:31,199 --> 00:08:33,039
if we can make containers behave like

255
00:08:33,039 --> 00:08:34,640
serverless applications that basically

256
00:08:34,640 --> 00:08:35,679
anything that can be

257
00:08:35,679 --> 00:08:38,399
packaged in a container image and run as

258
00:08:38,399 --> 00:08:40,240
a container can potentially be a

259
00:08:40,240 --> 00:08:41,919
serverless

260
00:08:41,919 --> 00:08:44,080
application application managed as a

261
00:08:44,080 --> 00:08:45,040
serverless

262
00:08:45,040 --> 00:08:48,800
uh something uh now reality

263
00:08:48,800 --> 00:08:50,399
even though everything that is a

264
00:08:50,399 --> 00:08:52,320
container can be treated as serverless

265
00:08:52,320 --> 00:08:53,519
one way or another

266
00:08:53,519 --> 00:08:55,760
of course there is that that thing about

267
00:08:55,760 --> 00:08:56,560
speed right

268
00:08:56,560 --> 00:08:59,200
uh it's better if it if it's fast and it

269
00:08:59,200 --> 00:09:00,240
fits slow so

270
00:09:00,240 --> 00:09:03,040
if you put boots within milliseconds or

271
00:09:03,040 --> 00:09:04,000
a second right

272
00:09:04,000 --> 00:09:06,720
that's that's recently decently fast

273
00:09:06,720 --> 00:09:07,680
that you can say

274
00:09:07,680 --> 00:09:09,440
yeah that's a good candidate now if you

275
00:09:09,440 --> 00:09:11,040
have something huge that takes 15

276
00:09:11,040 --> 00:09:12,399
minutes to boot

277
00:09:12,399 --> 00:09:15,040
then that's probably not a good option

278
00:09:15,040 --> 00:09:16,480
for you i mean probably not that you

279
00:09:16,480 --> 00:09:17,760
have no good option

280
00:09:17,760 --> 00:09:20,160
whatsoever but that's a separate story

281
00:09:20,160 --> 00:09:20,839
right

282
00:09:20,839 --> 00:09:24,080
um stateless works great

283
00:09:24,080 --> 00:09:26,800
i've been running stateful applications

284
00:09:26,800 --> 00:09:28,399
as serverless but that's

285
00:09:28,399 --> 00:09:31,279
probably not the best fit uh because of

286
00:09:31,279 --> 00:09:32,640
quite a few problems but if you

287
00:09:32,640 --> 00:09:33,760
stateless

288
00:09:33,760 --> 00:09:36,320
that's almost a no-brainer given some

289
00:09:36,320 --> 00:09:38,000
other conditions are increased

290
00:09:38,000 --> 00:09:40,640
and the the case where uh that i believe

291
00:09:40,640 --> 00:09:43,120
that serverless are the

292
00:09:43,120 --> 00:09:46,399
no-brainer is uh what they call preview

293
00:09:46,399 --> 00:09:47,680
environments meaning that

294
00:09:47,680 --> 00:09:50,000
you will you will be creating pull

295
00:09:50,000 --> 00:09:50,959
requests

296
00:09:50,959 --> 00:09:52,959
and uh you are deploying those pull

297
00:09:52,959 --> 00:09:54,160
requests somewhere

298
00:09:54,160 --> 00:09:56,399
and those those deployments are waiting

299
00:09:56,399 --> 00:09:58,080
for somebody to review them and it can

300
00:09:58,080 --> 00:10:00,480
be one hour or five minutes or five days

301
00:10:00,480 --> 00:10:01,040
right

302
00:10:01,040 --> 00:10:03,680
so in many environments your

303
00:10:03,680 --> 00:10:05,680
applications are not doing anything even

304
00:10:05,680 --> 00:10:06,640
if your

305
00:10:06,640 --> 00:10:08,640
production is not a good use case for

306
00:10:08,640 --> 00:10:10,079
serverless everything

307
00:10:10,079 --> 00:10:12,160
else is almost certainly is because

308
00:10:12,160 --> 00:10:13,279
everywhere else

309
00:10:13,279 --> 00:10:15,600
your applications are more often idle

310
00:10:15,600 --> 00:10:18,240
than used by somebody

311
00:10:18,240 --> 00:10:21,440
so uh let's skip the slides i already

312
00:10:21,440 --> 00:10:23,120
spoke more than i'm used to speak

313
00:10:23,120 --> 00:10:24,880
without touching my terminal

314
00:10:24,880 --> 00:10:28,079
uh this is just a silly diagram that

315
00:10:28,079 --> 00:10:30,800
doesn't matter let's go down straight to

316
00:10:30,800 --> 00:10:32,079
the terminal

317
00:10:32,079 --> 00:10:35,279
and and see how all

318
00:10:35,279 --> 00:10:37,680
it looks like so what they did before so

319
00:10:37,680 --> 00:10:38,640
what they did

320
00:10:38,640 --> 00:10:42,320
before i started this session i created

321
00:10:42,320 --> 00:10:42,720
this

322
00:10:42,720 --> 00:10:45,440
uh yama definition which if you never

323
00:10:45,440 --> 00:10:47,760
use kubernetes might sound like too much

324
00:10:47,760 --> 00:10:49,680
but trust me this is kind of

325
00:10:49,680 --> 00:10:52,000
probably the smallest jumbo definition

326
00:10:52,000 --> 00:10:53,600
that defines everything

327
00:10:53,600 --> 00:10:55,839
that you will ever need but that's

328
00:10:55,839 --> 00:10:57,200
really not

329
00:10:57,200 --> 00:10:59,360
that important i will not bother you

330
00:10:59,360 --> 00:11:01,279
with yaml the only thing you thought

331
00:11:01,279 --> 00:11:02,720
will say that basically

332
00:11:02,720 --> 00:11:04,959
all that came to me for free no that's

333
00:11:04,959 --> 00:11:06,160
not what i wanted

334
00:11:06,160 --> 00:11:08,399
all that came to me for free because

335
00:11:08,399 --> 00:11:10,320
when i created a new project with the

336
00:11:10,320 --> 00:11:11,920
donkey sex it already has all the

337
00:11:11,920 --> 00:11:13,680
definitions and everything i need

338
00:11:13,680 --> 00:11:16,320
all i really really did is went to this

339
00:11:16,320 --> 00:11:17,519
values file

340
00:11:17,519 --> 00:11:20,160
and uh i ignored all this this is all

341
00:11:20,160 --> 00:11:21,760
not important doesn't matter doesn't

342
00:11:21,760 --> 00:11:23,120
matter it doesn't matter

343
00:11:23,120 --> 00:11:25,760
what does matter if i find it is that i

344
00:11:25,760 --> 00:11:27,279
just change this flag

345
00:11:27,279 --> 00:11:29,920
this parameter from kn80 deployed which

346
00:11:29,920 --> 00:11:31,200
is by default false

347
00:11:31,200 --> 00:11:33,200
to true and all of a sudden my

348
00:11:33,200 --> 00:11:34,959
applications are

349
00:11:34,959 --> 00:11:36,880
service right and i will demonstrate

350
00:11:36,880 --> 00:11:38,560
that in a second

351
00:11:38,560 --> 00:11:42,160
um so if we took you cuttle dash and

352
00:11:42,160 --> 00:11:45,040
check staging this is the namespace

353
00:11:45,040 --> 00:11:46,959
where my apps are running

354
00:11:46,959 --> 00:11:49,600
and if i list all the pods in that

355
00:11:49,600 --> 00:11:51,839
namespace

356
00:11:51,839 --> 00:11:54,399
now if i demo tails right away that's

357
00:11:54,399 --> 00:11:55,680
going to be embarrassing so

358
00:11:55,680 --> 00:11:57,680
right now you can see you need to trust

359
00:11:57,680 --> 00:11:59,360
me that this is the only namespace that

360
00:11:59,360 --> 00:12:00,079
matters

361
00:12:00,079 --> 00:12:01,680
and if you look at what i'm running in

362
00:12:01,680 --> 00:12:03,760
that namespace from pod perspective

363
00:12:03,760 --> 00:12:04,240
because

364
00:12:04,240 --> 00:12:05,760
pods are really the only physical

365
00:12:05,760 --> 00:12:07,519
entities doing something

366
00:12:07,519 --> 00:12:09,200
is that i'm not running anything so

367
00:12:09,200 --> 00:12:11,519
basically i have nothing

368
00:12:11,519 --> 00:12:14,399
no physical entity of any form of way

369
00:12:14,399 --> 00:12:15,920
running over there right you see

370
00:12:15,920 --> 00:12:19,040
no address no resources found

371
00:12:19,040 --> 00:12:20,959
and now to demonstrate how that works

372
00:12:20,959 --> 00:12:22,880
really what i'm going to do is

373
00:12:22,880 --> 00:12:26,079
execute this command which will which

374
00:12:26,079 --> 00:12:28,160
will run a container with siege now i

375
00:12:28,160 --> 00:12:29,600
don't know how many of you are familiar

376
00:12:29,600 --> 00:12:31,200
with siege but think of sieges

377
00:12:31,200 --> 00:12:35,440
poor men's or a simple way to do some

378
00:12:35,440 --> 00:12:38,560
simple uh type of performance testing

379
00:12:38,560 --> 00:12:40,560
right so what i will be doing is i will

380
00:12:40,560 --> 00:12:41,279
be sending

381
00:12:41,279 --> 00:12:44,240
300 concurrent requests during 20

382
00:12:44,240 --> 00:12:45,200
seconds

383
00:12:45,200 --> 00:12:47,360
right so during 20 seconds i will be

384
00:12:47,360 --> 00:12:49,279
bumping my application that does not

385
00:12:49,279 --> 00:12:51,120
exist right now because you saw nothing

386
00:12:51,120 --> 00:12:53,519
is running with requests 30 seconds

387
00:12:53,519 --> 00:12:56,800
300 requests all the time in parallel

388
00:12:56,800 --> 00:12:58,320
during 20 seconds

389
00:12:58,320 --> 00:13:00,320
and then i'm going to output all the

390
00:13:00,320 --> 00:13:02,399
pods in that namespace and we're going

391
00:13:02,399 --> 00:13:03,920
to see what we're going to get

392
00:13:03,920 --> 00:13:05,760
so now you're going to have to watch me

393
00:13:05,760 --> 00:13:07,279
in silence or

394
00:13:07,279 --> 00:13:10,000
watch watch a screen where nothing is

395
00:13:10,000 --> 00:13:11,760
happening for approximately

396
00:13:11,760 --> 00:13:14,240
20 seconds 30 seconds right i need to

397
00:13:14,240 --> 00:13:15,120
figure out

398
00:13:15,120 --> 00:13:18,320
what to talk about while there is

399
00:13:18,320 --> 00:13:20,720
nothing on my screen

400
00:13:20,720 --> 00:13:23,920
and i have no we should during a game of

401
00:13:23,920 --> 00:13:27,360
rock paper scissors yeah too late

402
00:13:27,360 --> 00:13:30,720
she liked i probably would have won

403
00:13:30,720 --> 00:13:33,839
too late okay so what you can see here

404
00:13:33,839 --> 00:13:38,399
is that i sent 7759 requests during

405
00:13:38,399 --> 00:13:39,920
those 20 seconds right

406
00:13:39,920 --> 00:13:41,920
it's not a huge amount but we are not

407
00:13:41,920 --> 00:13:44,000
i'm not running google size here

408
00:13:44,000 --> 00:13:46,240
so decent amount of traffic during 20

409
00:13:46,240 --> 00:13:47,760
seconds 100

410
00:13:47,760 --> 00:13:50,639
of those requests uh were responded

411
00:13:50,639 --> 00:13:51,040
right

412
00:13:51,040 --> 00:13:53,920
so i did not lose a single request even

413
00:13:53,920 --> 00:13:54,320
though

414
00:13:54,320 --> 00:13:56,480
nothing was running before i started

415
00:13:56,480 --> 00:13:58,079
hitting my cluster

416
00:13:58,079 --> 00:14:01,040
and what k native did is uh it detected

417
00:14:01,040 --> 00:14:01,920
the time having

418
00:14:01,920 --> 00:14:04,000
sending some requests it queued those

419
00:14:04,000 --> 00:14:04,959
requests

420
00:14:04,959 --> 00:14:07,120
uh through an api gateway which can be

421
00:14:07,120 --> 00:14:08,639
many different combinations

422
00:14:08,639 --> 00:14:10,639
many different options we can choose and

423
00:14:10,639 --> 00:14:12,639
then it decided to spin up some number

424
00:14:12,639 --> 00:14:13,440
of paths

425
00:14:13,440 --> 00:14:15,120
and it decided in this case that it

426
00:14:15,120 --> 00:14:16,480
needs what is this number

427
00:14:16,480 --> 00:14:18,560
five pods you can see it at the bottom

428
00:14:18,560 --> 00:14:20,560
it created five pods simply because it

429
00:14:20,560 --> 00:14:21,920
calculated that

430
00:14:21,920 --> 00:14:24,959
five pods are probably the best number

431
00:14:24,959 --> 00:14:27,120
of pots given certain conditions

432
00:14:27,120 --> 00:14:29,760
to handle this amount of requests right

433
00:14:29,760 --> 00:14:31,360
if i send more requests i would have

434
00:14:31,360 --> 00:14:33,360
more votes if i said less i would have

435
00:14:33,360 --> 00:14:33,760
less

436
00:14:33,760 --> 00:14:35,440
but basically it scared my application

437
00:14:35,440 --> 00:14:36,880
to five replicas

438
00:14:36,880 --> 00:14:40,000
to handle the load that appeared out of

439
00:14:40,000 --> 00:14:41,920
nowhere

440
00:14:41,920 --> 00:14:45,440
now uh if i do repeat the get pods

441
00:14:45,440 --> 00:14:47,040
command from before

442
00:14:47,040 --> 00:14:48,800
remember that what like two minutes

443
00:14:48,800 --> 00:14:51,360
passed it already

444
00:14:51,360 --> 00:14:54,639
uh scaled down to one replica because

445
00:14:54,639 --> 00:14:56,480
while i was talking to you nothing was

446
00:14:56,480 --> 00:14:58,240
happening and it realized

447
00:14:58,240 --> 00:15:00,240
that probably it's not a good idea to

448
00:15:00,240 --> 00:15:02,320
run five pots anymore so let's scale it

449
00:15:02,320 --> 00:15:03,199
to less

450
00:15:03,199 --> 00:15:04,880
and less and less and then it reached

451
00:15:04,880 --> 00:15:07,279
one just in case maybe somebody starts

452
00:15:07,279 --> 00:15:09,120
using my application and it wants to

453
00:15:09,120 --> 00:15:10,320
keep it hot

454
00:15:10,320 --> 00:15:11,839
and then after a while and you can see

455
00:15:11,839 --> 00:15:14,240
by the status it decided that it should

456
00:15:14,240 --> 00:15:15,839
terminate the last

457
00:15:15,839 --> 00:15:17,839
one of the replicas because simply

458
00:15:17,839 --> 00:15:19,040
nobody is

459
00:15:19,040 --> 00:15:20,959
is using the application anymore and if

460
00:15:20,959 --> 00:15:22,560
you repeat this command down nothing is

461
00:15:22,560 --> 00:15:23,279
running again

462
00:15:23,279 --> 00:15:25,920
right so my actual very very optimum

463
00:15:25,920 --> 00:15:27,920
usage of resources

464
00:15:27,920 --> 00:15:31,120
because i am more or less using what i

465
00:15:31,120 --> 00:15:31,519
need

466
00:15:31,519 --> 00:15:33,759
and not using what they don't need right

467
00:15:33,759 --> 00:15:35,839
it's a very very optimum usage of

468
00:15:35,839 --> 00:15:36,880
resources

469
00:15:36,880 --> 00:15:39,920
at the very very low cost so i'm not

470
00:15:39,920 --> 00:15:40,880
sure whether i'm

471
00:15:40,880 --> 00:15:44,000
i'm going to have time to do this but

472
00:15:44,000 --> 00:15:46,560
what i am going to bury my now oh yeah

473
00:15:46,560 --> 00:15:48,079
what i'm going to do is that i'm going

474
00:15:48,079 --> 00:15:49,600
to change the source code of my

475
00:15:49,600 --> 00:15:50,480
application

476
00:15:50,480 --> 00:15:52,880
i'm going to what the heck happened

477
00:15:52,880 --> 00:15:53,759
there

478
00:15:53,759 --> 00:15:58,240
let's see i wanted to create a new

479
00:15:58,240 --> 00:16:00,639
what's going on here okay i'm pushing a

480
00:16:00,639 --> 00:16:01,680
change to my

481
00:16:01,680 --> 00:16:03,759
application just so that i want to show

482
00:16:03,759 --> 00:16:04,720
you how

483
00:16:04,720 --> 00:16:06,720
all that combines with creating a pull

484
00:16:06,720 --> 00:16:08,880
request so i push some change to my

485
00:16:08,880 --> 00:16:10,079
application

486
00:16:10,079 --> 00:16:12,000
this is all github space i will not

487
00:16:12,000 --> 00:16:13,120
really do any

488
00:16:13,120 --> 00:16:16,160
use anything special here except git i'm

489
00:16:16,160 --> 00:16:18,079
going to create a pull request i'm doing

490
00:16:18,079 --> 00:16:19,279
it through a terminal because i don't

491
00:16:19,279 --> 00:16:22,959
like clicking buttons

492
00:16:22,959 --> 00:16:25,040
and then uh janky sexy in the background

493
00:16:25,040 --> 00:16:26,800
is going to process that request and it

494
00:16:26,800 --> 00:16:28,639
will do whatever it needs to do

495
00:16:28,639 --> 00:16:30,399
and we're going to if i have time we're

496
00:16:30,399 --> 00:16:32,480
going to see the results of that

497
00:16:32,480 --> 00:16:36,399
very very soon uh approximately maybe

498
00:16:36,399 --> 00:16:38,079
one minute or something let me

499
00:16:38,079 --> 00:16:41,680
uh let me track the progress of pr

500
00:16:41,680 --> 00:16:46,639
one uh i think so we're going to do

501
00:16:46,639 --> 00:16:48,560
what are we going to do uh let's see

502
00:16:48,560 --> 00:16:50,480
whether it's running

503
00:16:50,480 --> 00:16:53,360
okay so it's processing my pull request

504
00:16:53,360 --> 00:16:53,839
it is

505
00:16:53,839 --> 00:16:55,519
going to build a new release of my

506
00:16:55,519 --> 00:16:57,279
application it's going to test it it's

507
00:16:57,279 --> 00:16:59,199
going to do all the good stuff

508
00:16:59,199 --> 00:17:00,399
and after a couple of minutes i will

509
00:17:00,399 --> 00:17:02,399
have a pull request and

510
00:17:02,399 --> 00:17:04,559
uh that pull request will result in a

511
00:17:04,559 --> 00:17:05,679
new deployment in

512
00:17:05,679 --> 00:17:08,240
this special the environment special

513
00:17:08,240 --> 00:17:09,760
name space that is dedicated to pull

514
00:17:09,760 --> 00:17:10,799
request

515
00:17:10,799 --> 00:17:13,199
and all he really did is push something

516
00:17:13,199 --> 00:17:14,720
to get

517
00:17:14,720 --> 00:17:17,199
and now i need to wait a bit okay rock

518
00:17:17,199 --> 00:17:18,720
paper scissors again

519
00:17:18,720 --> 00:17:22,720
now now is your opportunity no

520
00:17:22,720 --> 00:17:27,829
okay oh no i lost

521
00:17:27,829 --> 00:17:29,039
[Music]

522
00:17:29,039 --> 00:17:33,600
it it's all gone wrong no worries

523
00:17:33,600 --> 00:17:37,600
now i need to wait uh

524
00:17:37,600 --> 00:17:39,360
let's see whether anything is deployed

525
00:17:39,360 --> 00:17:40,880
still not deployed it will be deployed

526
00:17:40,880 --> 00:17:41,520
in a minute

527
00:17:41,520 --> 00:17:44,720
or something like that uh

528
00:17:44,720 --> 00:17:46,240
if anybody has a question while we're

529
00:17:46,240 --> 00:17:48,400
waiting for a few more

530
00:17:48,400 --> 00:17:52,880
steps i can answer them if not

531
00:17:52,880 --> 00:17:54,960
i'm gonna have my energy drink before i

532
00:17:54,960 --> 00:17:57,440
fall asleep

533
00:17:59,200 --> 00:18:01,770
uh come on

534
00:18:01,770 --> 00:18:04,799
[Applause]

535
00:18:05,360 --> 00:18:06,799
nothing nothing just yet but we could do

536
00:18:06,799 --> 00:18:08,559
a quick rock paper scissors i feel like

537
00:18:08,559 --> 00:18:09,919
i feel this is coming we should do

538
00:18:09,919 --> 00:18:11,039
online

539
00:18:11,039 --> 00:18:14,640
ready there we go there i am

540
00:18:14,640 --> 00:18:18,080
okay ready one two three one two

541
00:18:18,080 --> 00:18:21,760
three ah

542
00:18:21,760 --> 00:18:23,919
okay now i know why i'm losing against

543
00:18:23,919 --> 00:18:26,480
my daughter

544
00:18:27,360 --> 00:18:31,200
uh okay so where are we yes

545
00:18:31,200 --> 00:18:35,120
uh it's coming it's coming it's coming

546
00:18:35,120 --> 00:18:38,400
uh okay let's

547
00:18:38,400 --> 00:18:40,799
say this let's skip this you need to

548
00:18:40,799 --> 00:18:42,160
trust me that my application

549
00:18:42,160 --> 00:18:46,000
will be deployed oh not trust involved

550
00:18:46,000 --> 00:18:46,559
it is

551
00:18:46,559 --> 00:18:49,200
almost finished

552
00:18:50,160 --> 00:18:53,200
this is almost there

553
00:18:54,080 --> 00:18:57,120
it's funny how if i was doing five years

554
00:18:57,120 --> 00:18:59,120
ago i would say oh it's finished in an

555
00:18:59,120 --> 00:19:00,880
hour it would be great

556
00:19:00,880 --> 00:19:04,640
uh get impatient if it takes a minute

557
00:19:04,640 --> 00:19:06,559
uh let me see whether my application is

558
00:19:06,559 --> 00:19:08,960
running uh yeah there you go my

559
00:19:08,960 --> 00:19:11,039
application is coming back up

560
00:19:11,039 --> 00:19:13,840
and uh i can send a request to my newly

561
00:19:13,840 --> 00:19:15,520
deployed application

562
00:19:15,520 --> 00:19:17,200
running a serverless you can see that i

563
00:19:17,200 --> 00:19:19,120
modified the output of my application to

564
00:19:19,120 --> 00:19:19,600
say hey

565
00:19:19,600 --> 00:19:21,280
i native before it was saying hello

566
00:19:21,280 --> 00:19:24,080
world example or something like that

567
00:19:24,080 --> 00:19:26,799
and now my application is deployed as a

568
00:19:26,799 --> 00:19:28,080
pull request

569
00:19:28,080 --> 00:19:31,120
and the cool thing about that is that in

570
00:19:31,120 --> 00:19:33,039
a minute or two or something like that

571
00:19:33,039 --> 00:19:36,400
uh it will disappear completely

572
00:19:36,400 --> 00:19:38,480
and i will not really need to base my

573
00:19:38,480 --> 00:19:40,720
cpu and memory and all the good things

574
00:19:40,720 --> 00:19:41,360
that

575
00:19:41,360 --> 00:19:43,200
i don't want to base because i'm cheap

576
00:19:43,200 --> 00:19:45,919
and i want to save money to my company

577
00:19:45,919 --> 00:19:48,960
and all those things because i have

578
00:19:48,960 --> 00:19:51,120
all my environments running is in this

579
00:19:51,120 --> 00:19:52,480
case k native

580
00:19:52,480 --> 00:19:54,640
uh and i can have thousands of pull

581
00:19:54,640 --> 00:19:56,799
requests deployed in parallel

582
00:19:56,799 --> 00:19:59,440
uh and making everybody productive being

583
00:19:59,440 --> 00:20:01,280
able to review the pull request

584
00:20:01,280 --> 00:20:04,960
and run some tests and uh

585
00:20:04,960 --> 00:20:06,960
do whatever you need to do whenever you

586
00:20:06,960 --> 00:20:08,559
need to do without

587
00:20:08,559 --> 00:20:11,840
really spending uh

588
00:20:11,840 --> 00:20:14,320
more memory cpu and paying more money to

589
00:20:14,320 --> 00:20:16,320
google amazon azure whatever i want

590
00:20:16,320 --> 00:20:18,840
whatever whichever is the company i'm

591
00:20:18,840 --> 00:20:20,080
using

592
00:20:20,080 --> 00:20:23,520
uh for and that is

593
00:20:23,520 --> 00:20:25,760
ripping me off by charging me too much

594
00:20:25,760 --> 00:20:28,000
money on resources and you can see that

595
00:20:28,000 --> 00:20:30,240
pull request was deployed it was running

596
00:20:30,240 --> 00:20:32,080
a minute ago now it is terminating now

597
00:20:32,080 --> 00:20:34,000
it is scaling down to zero replicas and

598
00:20:34,000 --> 00:20:34,960
it will be gone

599
00:20:34,960 --> 00:20:38,159
until the next time i

600
00:20:38,159 --> 00:20:42,000
uh i choose to use

601
00:20:42,000 --> 00:20:43,520
and i can demonstrate that actually

602
00:20:43,520 --> 00:20:45,520
relatively quickly if i go back to my

603
00:20:45,520 --> 00:20:48,400
github account and if i

604
00:20:48,400 --> 00:20:51,200
go to the pull request that i deployed

605
00:20:51,200 --> 00:20:53,200
here it is

606
00:20:53,200 --> 00:20:56,480
it's all git based uh it is here

607
00:20:56,480 --> 00:20:58,559
available in preview environment and i

608
00:20:58,559 --> 00:21:00,159
can now

609
00:21:00,159 --> 00:21:02,320
send the request to it and it will still

610
00:21:02,320 --> 00:21:03,280
work as

611
00:21:03,280 --> 00:21:05,440
if even though it doesn't exist there

612
00:21:05,440 --> 00:21:07,840
you go zero pods

613
00:21:07,840 --> 00:21:09,840
send a request it takes a second because

614
00:21:09,840 --> 00:21:13,200
it needs to load for the first time

615
00:21:13,200 --> 00:21:16,320
come on and my application is responding

616
00:21:16,320 --> 00:21:18,240
it is backed live it disappeared it

617
00:21:18,240 --> 00:21:19,679
appeared again and all the good things

618
00:21:19,679 --> 00:21:21,120
that you like

619
00:21:21,120 --> 00:21:23,600
that's about it i actually spoke faster

620
00:21:23,600 --> 00:21:25,200
than i hoped that i would speak i will

621
00:21:25,200 --> 00:21:27,440
merge my pull request confirm confirm

622
00:21:27,440 --> 00:21:29,120
merge it will be deployed to staging

623
00:21:29,120 --> 00:21:31,520
soon because it's fully automated and i

624
00:21:31,520 --> 00:21:33,600
will leave happily ever after

625
00:21:33,600 --> 00:21:36,960
uh but few graphs i put just because i

626
00:21:36,960 --> 00:21:38,320
know that people get depressed if they

627
00:21:38,320 --> 00:21:40,000
see the terminal but they are

628
00:21:40,000 --> 00:21:41,760
really not anything important just

629
00:21:41,760 --> 00:21:43,520
pretty colors you know

630
00:21:43,520 --> 00:21:45,679
i can explain it as a pharmacist

631
00:21:45,679 --> 00:21:47,280
architect there is a green box and there

632
00:21:47,280 --> 00:21:48,960
is a red box and then there is something

633
00:21:48,960 --> 00:21:50,640
happening in yellow boxes but what

634
00:21:50,640 --> 00:21:52,159
really matters is that the system is

635
00:21:52,159 --> 00:21:53,600
scaling up and down

636
00:21:53,600 --> 00:21:56,799
uh and doing the right thing as you

637
00:21:56,799 --> 00:21:59,120
would expect it to do

638
00:21:59,120 --> 00:22:02,559
uh where was i yeah yeah uh

639
00:22:02,559 --> 00:22:05,600
boring boring boring and that's about it

640
00:22:05,600 --> 00:22:06,320
of my talk

641
00:22:06,320 --> 00:22:08,640
uh i tried to be fast i hope that i was

642
00:22:08,640 --> 00:22:10,320
fast uh i have

643
00:22:10,320 --> 00:22:12,000
now five minutes for questions thank you

644
00:22:12,000 --> 00:22:14,320
very much uh go to my blog

645
00:22:14,320 --> 00:22:17,440
uh listen to the podcasts

646
00:22:17,440 --> 00:22:19,919
buy the book and more books expense them

647
00:22:19,919 --> 00:22:22,080
to your manager and that's about it

648
00:22:22,080 --> 00:22:24,000
let's see the questions what would you

649
00:22:24,000 --> 00:22:25,360
what would your preferred

650
00:22:25,360 --> 00:22:27,520
book what what suggested book would you

651
00:22:27,520 --> 00:22:29,200
would you pick for kind of like

652
00:22:29,200 --> 00:22:32,400
you know k native perhaps uh or jenkins

653
00:22:32,400 --> 00:22:33,039
x uh

654
00:22:33,039 --> 00:22:34,320
learning for people who haven't used it

655
00:22:34,320 --> 00:22:36,320
before is that the trick question

656
00:22:36,320 --> 00:22:38,080
or no there's no trick questions here

657
00:22:38,080 --> 00:22:39,600
they're all okay yeah

658
00:22:39,600 --> 00:22:42,480
so okay so yeah for jackie sex i would

659
00:22:42,480 --> 00:22:43,120
definitely

660
00:22:43,120 --> 00:22:45,200
recommend the book that i wrote that's

661
00:22:45,200 --> 00:22:46,799
that's the easy one

662
00:22:46,799 --> 00:22:48,320
that's why i said is it a trick question

663
00:22:48,320 --> 00:22:50,000
kind of you're leading me towards

664
00:22:50,000 --> 00:22:52,559
self-marketing

665
00:22:52,559 --> 00:22:55,600
uh for k native uh i don't think that

666
00:22:55,600 --> 00:22:57,280
there is any book available this is not

667
00:22:57,280 --> 00:22:59,120
that i know it's a relatively new

668
00:22:59,120 --> 00:23:00,080
project i mean

669
00:23:00,080 --> 00:23:02,480
maybe for a year and a half or something

670
00:23:02,480 --> 00:23:03,360
like that

671
00:23:03,360 --> 00:23:05,440
certainly that every anybody had courage

672
00:23:05,440 --> 00:23:06,840
to write it yet

673
00:23:06,840 --> 00:23:10,880
um and junk sex is that

674
00:23:10,880 --> 00:23:14,240
there's the link there's the link

675
00:23:14,240 --> 00:23:16,000
and uh and in terms of in terms of

676
00:23:16,000 --> 00:23:18,159
jenkins x adoption have you seen it at

677
00:23:18,159 --> 00:23:20,559
uh cloudbees in terms of the the rate of

678
00:23:20,559 --> 00:23:22,240
adoption of jenkins x versus

679
00:23:22,240 --> 00:23:23,760
you know jenkins or other or other

680
00:23:23,760 --> 00:23:26,000
jenkins x like

681
00:23:26,000 --> 00:23:30,000
cisos so compared to jenkins

682
00:23:30,000 --> 00:23:33,360
janki sex or anything else in that

683
00:23:33,360 --> 00:23:36,080
area will not reach jenkins adoption

684
00:23:36,080 --> 00:23:37,440
anytime soon simply because

685
00:23:37,440 --> 00:23:39,760
junkies is there for 15 years i don't

686
00:23:39,760 --> 00:23:42,000
know 70 percent approximately the market

687
00:23:42,000 --> 00:23:43,760
is using it and all those things so

688
00:23:43,760 --> 00:23:45,520
nobody will read junkies absorption

689
00:23:45,520 --> 00:23:46,960
anytime soon uh

690
00:23:46,960 --> 00:23:48,960
and jackie said specifically which by

691
00:23:48,960 --> 00:23:50,799
the way has nothing to do with

692
00:23:50,799 --> 00:23:54,720
except the name uh is is

693
00:23:54,720 --> 00:23:56,240
he has a much smaller scope right

694
00:23:56,240 --> 00:23:58,320
jenkins does everything you you might

695
00:23:58,320 --> 00:24:00,480
need to do while jenkins is focused on

696
00:24:00,480 --> 00:24:02,880
kubernetes very opinionated

697
00:24:02,880 --> 00:24:05,360
git tops based you need to accept

698
00:24:05,360 --> 00:24:06,080
certain

699
00:24:06,080 --> 00:24:08,400
processes and so on and so forth so if

700
00:24:08,400 --> 00:24:09,760
this is junkie scope this

701
00:24:09,760 --> 00:24:11,679
this kind of junk sex scope like this

702
00:24:11,679 --> 00:24:13,200
right but it does it well

703
00:24:13,200 --> 00:24:17,360
and uh we i mean we we're really kind of

704
00:24:17,360 --> 00:24:18,720
uh

705
00:24:18,720 --> 00:24:21,200
surprised by the level of adoption uh

706
00:24:21,200 --> 00:24:23,600
it's skyrocketing a lot of people using

707
00:24:23,600 --> 00:24:23,919
it

708
00:24:23,919 --> 00:24:29,039
and uh it goes well try it

709
00:24:29,279 --> 00:24:32,240
another question uh can jenkins be used

710
00:24:32,240 --> 00:24:33,360
without github

711
00:24:33,360 --> 00:24:36,320
or can it be used with github enterprise

712
00:24:36,320 --> 00:24:36,640
yes

713
00:24:36,640 --> 00:24:38,320
it can be used with github github

714
00:24:38,320 --> 00:24:40,480
enterprise git club

715
00:24:40,480 --> 00:24:43,440
bitbucket ignoring few tiny problems and

716
00:24:43,440 --> 00:24:44,400
i mean with git

717
00:24:44,400 --> 00:24:46,880
right uh initially it couldn't because

718
00:24:46,880 --> 00:24:49,200
you use proud which is only github based

719
00:24:49,200 --> 00:24:51,039
but in the meantime we replace pro with

720
00:24:51,039 --> 00:24:52,480
something similar called lighthouse and

721
00:24:52,480 --> 00:24:54,640
now you can use almost any kit

722
00:24:54,640 --> 00:24:57,760
i haven't tried it with gary with some

723
00:24:57,760 --> 00:25:00,080
weird stuff but uh

724
00:25:00,080 --> 00:25:03,600
all the major git distributions are

725
00:25:03,600 --> 00:25:07,200
supported awesome

726
00:25:07,200 --> 00:25:10,799
uh no other questions in at the moment

727
00:25:10,799 --> 00:25:15,840
um oh here we go um

728
00:25:16,960 --> 00:25:20,080
okay uh so nachos nachos here oh there's

729
00:25:20,080 --> 00:25:21,120
this nacho from

730
00:25:21,120 --> 00:25:23,279
barcelona as well from the barcelona oh

731
00:25:23,279 --> 00:25:25,760
not sure

732
00:25:26,840 --> 00:25:28,960
um nacho asks are the uh what you know

733
00:25:28,960 --> 00:25:30,640
what are the bad bad parts about k

734
00:25:30,640 --> 00:25:32,559
native so so victor you need to now now

735
00:25:32,559 --> 00:25:33,919
you go from this is like the good cop

736
00:25:33,919 --> 00:25:35,600
bad cop but you need to absolutely slam

737
00:25:35,600 --> 00:25:37,039
k-native now right

738
00:25:37,039 --> 00:25:40,880
uh yeah what other problems

739
00:25:40,880 --> 00:25:42,400
are there performance issues memory

740
00:25:42,400 --> 00:25:44,720
consumption issues that kind of thing

741
00:25:44,720 --> 00:25:48,559
i think i mean the major problem is

742
00:25:48,559 --> 00:25:50,720
that it might not be the most stable

743
00:25:50,720 --> 00:25:52,240
thing you can ever use

744
00:25:52,240 --> 00:25:55,360
for a simple fact that it exists for a

745
00:25:55,360 --> 00:25:57,279
relatively short period of time

746
00:25:57,279 --> 00:25:58,799
i mean i could actually argue that

747
00:25:58,799 --> 00:26:00,640
actually everything kubernetes is not

748
00:26:00,640 --> 00:26:02,640
stable kind of like it did not exist

749
00:26:02,640 --> 00:26:04,559
over a sufficient period of time

750
00:26:04,559 --> 00:26:07,760
uh there are some weird bugs happening

751
00:26:07,760 --> 00:26:08,960
every once in a while

752
00:26:08,960 --> 00:26:12,000
so it's it's not really the as i said

753
00:26:12,000 --> 00:26:13,919
not the most stable thing you can use

754
00:26:13,919 --> 00:26:16,960
now on the other hand i do believe that

755
00:26:16,960 --> 00:26:19,919
kntv is the probably one of the best if

756
00:26:19,919 --> 00:26:21,279
not the best options if you're looking

757
00:26:21,279 --> 00:26:23,200
for something like that for kubernetes

758
00:26:23,200 --> 00:26:25,919
and more importantly to me than you know

759
00:26:25,919 --> 00:26:27,600
good things bad things

760
00:26:27,600 --> 00:26:30,320
is that in kubernetes the things are

761
00:26:30,320 --> 00:26:31,760
changing basically on week

762
00:26:31,760 --> 00:26:34,240
by week basis and we are all trying to

763
00:26:34,240 --> 00:26:36,159
evaluate not only what is better what is

764
00:26:36,159 --> 00:26:38,000
worse but what is most likely going

765
00:26:38,000 --> 00:26:40,720
to survive to be honest i'm getting sick

766
00:26:40,720 --> 00:26:42,159
of kind of like using something for a

767
00:26:42,159 --> 00:26:44,159
year and then it doesn't exist anymore

768
00:26:44,159 --> 00:26:47,279
and uh just like istio

769
00:26:47,279 --> 00:26:49,679
uh is most likely going to be and linker

770
00:26:49,679 --> 00:26:51,760
dia the service meshes right in the

771
00:26:51,760 --> 00:26:53,200
future no matter whether they're better

772
00:26:53,200 --> 00:26:53,679
or not

773
00:26:53,679 --> 00:26:55,760
than alternatives that's what i believe

774
00:26:55,760 --> 00:26:57,440
for k native because

775
00:26:57,440 --> 00:26:59,520
uh the level of commitment we see from

776
00:26:59,520 --> 00:27:01,440
different companies for k native

777
00:27:01,440 --> 00:27:03,919
is much higher at least from my

778
00:27:03,919 --> 00:27:06,320
perspective than to others so it's most

779
00:27:06,320 --> 00:27:08,320
likely going to be the thing

780
00:27:08,320 --> 00:27:10,559
but nobody knows kind of like you it's

781
00:27:10,559 --> 00:27:12,240
like betting on courses kind of like

782
00:27:12,240 --> 00:27:13,760
you're making a bet in kubernetes

783
00:27:13,760 --> 00:27:15,120
whatever you do whether it will exist

784
00:27:15,120 --> 00:27:16,320
next year or not

785
00:27:16,320 --> 00:27:18,880
yeah and that was nature by the way from

786
00:27:18,880 --> 00:27:20,960
barcelona so big high five

787
00:27:20,960 --> 00:27:25,039
and uh yeah there you go see you in jbc

788
00:27:25,039 --> 00:27:28,159
and all that oh yeah fingers crossed um

789
00:27:28,159 --> 00:27:30,799
so um pbc one uh we've got a couple

790
00:27:30,799 --> 00:27:32,080
minutes left as well so if there's any

791
00:27:32,080 --> 00:27:34,159
other questions do feel free to ping out

792
00:27:34,159 --> 00:27:36,159
pbc asks uh actually similar kind of

793
00:27:36,159 --> 00:27:38,240
question uh jenkins x is interesting but

794
00:27:38,240 --> 00:27:41,120
is it stable or production ready

795
00:27:41,120 --> 00:27:44,000
uh so uh the honest answer is that some

796
00:27:44,000 --> 00:27:45,200
combinations are

797
00:27:45,200 --> 00:27:47,919
uh more production ready than others uh

798
00:27:47,919 --> 00:27:48,240
so

799
00:27:48,240 --> 00:27:50,960
what was happening is that uh you know

800
00:27:50,960 --> 00:27:53,360
when we start with genki sex we wanted

801
00:27:53,360 --> 00:27:55,600
to experiment a lot that was the goal

802
00:27:55,600 --> 00:27:57,360
and to turn new features and to figure

803
00:27:57,360 --> 00:27:59,440
out what is really the the right fit of

804
00:27:59,440 --> 00:27:59,840
all

805
00:27:59,840 --> 00:28:01,919
all the things we want and in the

806
00:28:01,919 --> 00:28:04,000
meantime we think that we found that

807
00:28:04,000 --> 00:28:04,720
kind of like

808
00:28:04,720 --> 00:28:07,840
what it really is and started working or

809
00:28:07,840 --> 00:28:08,880
stabilizing

810
00:28:08,880 --> 00:28:11,840
a junkie sex but since it is impossible

811
00:28:11,840 --> 00:28:14,240
to stabilize something that works on any

812
00:28:14,240 --> 00:28:15,520
single combination that

813
00:28:15,520 --> 00:28:18,159
anybody can imagine in kubernetes some

814
00:28:18,159 --> 00:28:19,760
are working better than others

815
00:28:19,760 --> 00:28:21,760
so for example we are pretty confident

816
00:28:21,760 --> 00:28:24,640
that it's production ready in gke on eks

817
00:28:24,640 --> 00:28:26,960
uh very very soon we're going to stump

818
00:28:26,960 --> 00:28:28,559
aks

819
00:28:28,559 --> 00:28:31,600
now on-prem is a bit trickier situation

820
00:28:31,600 --> 00:28:33,120
because it really depends on what you

821
00:28:33,120 --> 00:28:34,080
have right

822
00:28:34,080 --> 00:28:35,520
kind of physical shift which is

823
00:28:35,520 --> 00:28:37,520
basically has its own stuff there that

824
00:28:37,520 --> 00:28:38,159
is kind of

825
00:28:38,159 --> 00:28:40,880
different or is it something else what

826
00:28:40,880 --> 00:28:42,880
type of storage you have and things like

827
00:28:42,880 --> 00:28:44,720
that so

828
00:28:44,720 --> 00:28:47,919
i would say that for gk sake that's

829
00:28:47,919 --> 00:28:51,200
an i kind of like i i'm gonna

830
00:28:51,200 --> 00:28:53,120
sign with blood that's relatively stable

831
00:28:53,120 --> 00:28:54,880
i mean production ready

832
00:28:54,880 --> 00:28:57,760
uh the rest depends really what we are

833
00:28:57,760 --> 00:28:58,000
doing

834
00:28:58,000 --> 00:29:00,000
right now is uh working with a lot of

835
00:29:00,000 --> 00:29:01,039
companies to to

836
00:29:01,039 --> 00:29:03,279
to really nail it down so if you're

837
00:29:03,279 --> 00:29:05,120
interested contact me uh i'm

838
00:29:05,120 --> 00:29:06,320
now what you didn't read at the

839
00:29:06,320 --> 00:29:08,159
beginning because it happened a few days

840
00:29:08,159 --> 00:29:10,480
ago now product managers projects x

841
00:29:10,480 --> 00:29:13,039
if you're if you want to try bring me

842
00:29:13,039 --> 00:29:13,600
ping me

843
00:29:13,600 --> 00:29:15,520
i will help you out cool and the best

844
00:29:15,520 --> 00:29:16,640
way to ping you is on

845
00:29:16,640 --> 00:29:20,000
what twitter uh twitter email

846
00:29:20,000 --> 00:29:23,840
uh slack kubernetes details your contact

847
00:29:23,840 --> 00:29:25,120
details are on the back of your book

848
00:29:25,120 --> 00:29:26,159
yeah so buy the book

849
00:29:26,159 --> 00:29:29,440
and then google me

850
00:29:29,440 --> 00:29:31,200
send the carrier pigeon that will work

851
00:29:31,200 --> 00:29:32,880
as well you'll find me

852
00:29:32,880 --> 00:29:35,039
you'll find it about that thank you

853
00:29:35,039 --> 00:29:36,880
victor so i'll give you one more chance

854
00:29:36,880 --> 00:29:39,120
to win a game of uh rock paper scissors

855
00:29:39,120 --> 00:29:40,799
i'm going to go to a break okay but

856
00:29:40,799 --> 00:29:42,320
victor don't go paper all right because

857
00:29:42,320 --> 00:29:44,080
if you go paper i'll beat you all right

858
00:29:44,080 --> 00:29:48,640
okay three one two three

859
00:29:48,640 --> 00:29:52,000
i told you paper victor yeah

860
00:29:52,000 --> 00:29:53,919
did you really expect that i would

861
00:29:53,919 --> 00:29:55,200
follow your advice

862
00:29:55,200 --> 00:29:57,200
well that was a trick probably you know

863
00:29:57,200 --> 00:29:59,440
that i would never listen to you

864
00:29:59,440 --> 00:30:00,880
victor thank you very much it's been a

865
00:30:00,880 --> 00:30:04,880
privilege cheers

