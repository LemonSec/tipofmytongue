1
00:00:00,000 --> 00:00:03,480
take it away yep so yeah then welcome

2
00:00:03,480 --> 00:00:06,750
from my side as well on this topic on

3
00:00:06,750 --> 00:00:08,250
how to become a little bit more

4
00:00:08,250 --> 00:00:10,769
productive as a developer as a Java

5
00:00:10,769 --> 00:00:13,590
developer specifically so 20 tips and

6
00:00:13,590 --> 00:00:15,750
tricks I want to share with you so let's

7
00:00:15,750 --> 00:00:18,270
jump right in my name is Sebastien I do

8
00:00:18,270 --> 00:00:21,449
stuff with Java and as a first

9
00:00:21,449 --> 00:00:24,750
productivity tip I really would advise

10
00:00:24,750 --> 00:00:27,480
to spend some more time on the keyboard

11
00:00:27,480 --> 00:00:29,789
because as developers that's what we you

12
00:00:29,789 --> 00:00:31,080
know what we should do where we should

13
00:00:31,080 --> 00:00:33,149
spend our time on especially when we

14
00:00:33,149 --> 00:00:35,040
know how to touch type you know that's

15
00:00:35,040 --> 00:00:37,649
why we have F&J in our home row on the

16
00:00:37,649 --> 00:00:40,129
keyboard to just like type faster

17
00:00:40,129 --> 00:00:43,230
there's a lot of science behind that

18
00:00:43,230 --> 00:00:44,730
whether it makes more sense to use the

19
00:00:44,730 --> 00:00:46,920
mouse or the keyboard always when you

20
00:00:46,920 --> 00:00:48,420
have I would say some limited set of

21
00:00:48,420 --> 00:00:51,360
actions to perform something you know

22
00:00:51,360 --> 00:00:53,340
like typing for example then it just

23
00:00:53,340 --> 00:00:54,809
makes more sense to have more keys

24
00:00:54,809 --> 00:00:58,260
available to be able to type and then

25
00:00:58,260 --> 00:01:01,170
specifically when you're typing into

26
00:01:01,170 --> 00:01:03,960
your editor and into your IDE you want

27
00:01:03,960 --> 00:01:06,570
to become a power user of that IDE you

28
00:01:06,570 --> 00:01:08,700
want to leverage the power that you have

29
00:01:08,700 --> 00:01:12,420
in the IDE so I have IntelliJ here which

30
00:01:12,420 --> 00:01:14,880
is by far my most favorite IDE that I'm

31
00:01:14,880 --> 00:01:16,799
using all the time just because of the

32
00:01:16,799 --> 00:01:19,020
awesome features it has and then you

33
00:01:19,020 --> 00:01:21,990
know when we do anything you know IDE it

34
00:01:21,990 --> 00:01:23,909
has a lot of shortcuts available a lot

35
00:01:23,909 --> 00:01:27,210
of methods a lot of things that help us

36
00:01:27,210 --> 00:01:29,369
and you know just to do anything

37
00:01:29,369 --> 00:01:30,960
actually most of the things we would

38
00:01:30,960 --> 00:01:32,729
just take for granted for example you

39
00:01:32,729 --> 00:01:34,950
know any IDE shortcuts and if you think

40
00:01:34,950 --> 00:01:36,509
of it that's all just goes back to

41
00:01:36,509 --> 00:01:40,229
automation so for example when I write a

42
00:01:40,229 --> 00:01:42,810
class and actually I will I'm editing so

43
00:01:42,810 --> 00:01:44,850
an enterprise application here that will

44
00:01:44,850 --> 00:01:47,130
show a little bit later so what I just

45
00:01:47,130 --> 00:01:48,899
did I created a class right I did not

46
00:01:48,899 --> 00:01:51,450
write public class config resource which

47
00:01:51,450 --> 00:01:52,950
is supposed to be Jack stress resource

48
00:01:52,950 --> 00:01:55,500
but I wrote that here so that is already

49
00:01:55,500 --> 00:01:57,390
you know some form of automation that

50
00:01:57,390 --> 00:02:00,299
you can just leverage then you know

51
00:02:00,299 --> 00:02:02,820
anything that would just help you when

52
00:02:02,820 --> 00:02:04,590
it comes to refactoring I show a little

53
00:02:04,590 --> 00:02:07,290
bit more of that in a second or things

54
00:02:07,290 --> 00:02:09,929
that I really enjoy that is called life

55
00:02:09,929 --> 00:02:12,720
templates that or in IntelliJ at least

56
00:02:12,720 --> 00:02:13,740
they're called life templates

57
00:02:13,740 --> 00:02:15,930
that really makes a life easier so for

58
00:02:15,930 --> 00:02:19,620
example that is Jax threat F checks

59
00:02:19,620 --> 00:02:21,630
arrest at path you see I typed faster

60
00:02:21,630 --> 00:02:23,580
than I can talk that is an annotation

61
00:02:23,580 --> 00:02:26,340
that you need in context or us all the

62
00:02:26,340 --> 00:02:28,020
time where I say this is supposed to be

63
00:02:28,020 --> 00:02:30,060
the resource under slash config right

64
00:02:30,060 --> 00:02:33,300
and you saw I just typed a life template

65
00:02:33,300 --> 00:02:35,730
and hits tab because it's so much faster

66
00:02:35,730 --> 00:02:38,940
than typing at path and selecting the

67
00:02:38,940 --> 00:02:41,190
correct import or if you use you know

68
00:02:41,190 --> 00:02:43,650
something like at inject and then select

69
00:02:43,650 --> 00:02:45,660
the correct import if you use Enterprise

70
00:02:45,660 --> 00:02:48,210
Java you use this all the time right so

71
00:02:48,210 --> 00:02:50,010
many times you right at inject so it's

72
00:02:50,010 --> 00:02:52,830
just so much faster to do this and then

73
00:02:52,830 --> 00:02:54,600
hits tap and then you know you can act

74
00:02:54,600 --> 00:02:57,990
inject some bean or whatever or in my

75
00:02:57,990 --> 00:03:01,050
case let me just quickly do this we have

76
00:03:01,050 --> 00:03:02,880
a string method for a configuration that

77
00:03:02,880 --> 00:03:06,390
we want to emit here and then for

78
00:03:06,390 --> 00:03:08,850
example in this case I will show this

79
00:03:08,850 --> 00:03:12,180
later what it does it uses another API

80
00:03:12,180 --> 00:03:13,980
that is called micro profile config

81
00:03:13,980 --> 00:03:16,860
where I inject the conflict property in

82
00:03:16,860 --> 00:03:19,530
my case is called greetings and you know

83
00:03:19,530 --> 00:03:21,270
I type this all the time so that you

84
00:03:21,270 --> 00:03:22,920
really make sense to define a life

85
00:03:22,920 --> 00:03:26,430
template IntelliJ already ships with a

86
00:03:26,430 --> 00:03:28,770
bunch of life templates there for Java

87
00:03:28,770 --> 00:03:32,010
but create things there's no template

88
00:03:32,010 --> 00:03:34,500
for that to spell correctly but it makes

89
00:03:34,500 --> 00:03:36,420
sense to define your own ones so for

90
00:03:36,420 --> 00:03:38,430
example if you have something like Java

91
00:03:38,430 --> 00:03:40,050
then this doesn't make sense here but

92
00:03:40,050 --> 00:03:43,830
you can type main or PS vm for public

93
00:03:43,830 --> 00:03:45,600
static void main instead of typing that

94
00:03:45,600 --> 00:03:47,760
yourself right and many many things like

95
00:03:47,760 --> 00:03:51,180
you know like privates static final and

96
00:03:51,180 --> 00:03:53,220
so on and so forth all of all of these

97
00:03:53,220 --> 00:03:54,960
things that we keep typing all over

98
00:03:54,960 --> 00:03:57,690
again if you have some variable that you

99
00:03:57,690 --> 00:03:59,250
define like a string something and then

100
00:03:59,250 --> 00:04:02,070
you can say for example straining test

101
00:04:02,070 --> 00:04:05,340
is something you saw that that is why

102
00:04:05,340 --> 00:04:07,920
the way control shift enter there's a

103
00:04:07,920 --> 00:04:09,690
lot of tips and tricks out there we can

104
00:04:09,690 --> 00:04:13,110
say no and then hits a tap and then you

105
00:04:13,110 --> 00:04:15,120
know it include includes a live template

106
00:04:15,120 --> 00:04:17,820
for null checking or other ones that I

107
00:04:17,820 --> 00:04:20,459
found useful for example for the sake of

108
00:04:20,459 --> 00:04:22,229
Java Enterprise is a post construct

109
00:04:22,229 --> 00:04:24,120
method a pre destroy method you know

110
00:04:24,120 --> 00:04:26,729
things like entitymanager all these

111
00:04:26,729 --> 00:04:27,540
things that we keep

112
00:04:27,540 --> 00:04:29,520
typing all over again and these are just

113
00:04:29,520 --> 00:04:31,740
examples for the particular bits and

114
00:04:31,740 --> 00:04:34,620
bits and pieces I'm using because if you

115
00:04:34,620 --> 00:04:37,170
use you know any framework any other

116
00:04:37,170 --> 00:04:38,910
thing whether it's spring whether it's

117
00:04:38,910 --> 00:04:41,400
you know any third-party library you

118
00:04:41,400 --> 00:04:43,620
will identify these boilerplates

119
00:04:43,620 --> 00:04:45,420
codes in the bits that you keep typing

120
00:04:45,420 --> 00:04:47,220
all over all over again so it really

121
00:04:47,220 --> 00:04:49,140
makes sense to just define life

122
00:04:49,140 --> 00:04:51,720
templates for them and then just just be

123
00:04:51,720 --> 00:04:56,640
faster then enough on the IDE a few more

124
00:04:56,640 --> 00:04:58,860
things that I want to share about the

125
00:04:58,860 --> 00:05:03,930
command line so if we have a look in our

126
00:05:03,930 --> 00:05:06,030
command line and that is my command line

127
00:05:06,030 --> 00:05:10,110
here then we should well also think

128
00:05:10,110 --> 00:05:11,760
about spending more time into the

129
00:05:11,760 --> 00:05:14,010
command line why because in the command

130
00:05:14,010 --> 00:05:16,350
line you can do whatever you would like

131
00:05:16,350 --> 00:05:19,560
to do in the computer by typing by you

132
00:05:19,560 --> 00:05:21,360
know using your keyboard and just typing

133
00:05:21,360 --> 00:05:23,430
in commands especially if you are on a

134
00:05:23,430 --> 00:05:25,920
UNIX based operating system and in this

135
00:05:25,920 --> 00:05:28,200
case what we typically do well we use

136
00:05:28,200 --> 00:05:32,010
you know something like maven mvn or get

137
00:05:32,010 --> 00:05:34,020
on the command line which I think makes

138
00:05:34,020 --> 00:05:36,480
a lot of sense despite the IDE

139
00:05:36,480 --> 00:05:38,250
integration are you always used get on

140
00:05:38,250 --> 00:05:40,470
the command line and that you know it

141
00:05:40,470 --> 00:05:43,320
just makes it faster to say ok and ok so

142
00:05:43,320 --> 00:05:45,270
I want to build this project made in

143
00:05:45,270 --> 00:05:48,390
package rather than you know clicking

144
00:05:48,390 --> 00:05:49,770
your way around and doing something like

145
00:05:49,770 --> 00:05:51,780
this well missing return statement yeah

146
00:05:51,780 --> 00:05:55,620
that's true three things no thanks and

147
00:05:55,620 --> 00:05:57,930
then we can that's for example is

148
00:05:57,930 --> 00:06:00,240
already helpful feature to select the

149
00:06:00,240 --> 00:06:02,490
last command I'm pretty sure you know

150
00:06:02,490 --> 00:06:04,770
about all of these things later on I

151
00:06:04,770 --> 00:06:07,050
will point you to some resources how to

152
00:06:07,050 --> 00:06:11,000
get there faster but one of the biggest

153
00:06:11,000 --> 00:06:13,470
improvements in using the command line I

154
00:06:13,470 --> 00:06:16,350
think is shale aliases so you can set

155
00:06:16,350 --> 00:06:19,170
aliases for new any command that you

156
00:06:19,170 --> 00:06:20,820
would type in your command line so for

157
00:06:20,820 --> 00:06:23,790
example instead of typing maven package

158
00:06:23,790 --> 00:06:26,490
what I just did you can just knock the

159
00:06:26,490 --> 00:06:28,590
end with mb you just create your own

160
00:06:28,590 --> 00:06:30,750
alias and you're so much faster right so

161
00:06:30,750 --> 00:06:32,310
instead of typing all these things all

162
00:06:32,310 --> 00:06:34,290
over again you could say well git status

163
00:06:34,290 --> 00:06:37,169
it's faster than just typing it or get

164
00:06:37,169 --> 00:06:40,020
limits or get push into you know the

165
00:06:40,020 --> 00:06:40,990
current branch or

166
00:06:40,990 --> 00:06:43,510
and so on so forth or if you use you

167
00:06:43,510 --> 00:06:45,280
know if you use docker docker build

168
00:06:45,280 --> 00:06:48,370
stock or run if you use kubernetes keep

169
00:06:48,370 --> 00:06:50,530
control that serve as a skip control

170
00:06:50,530 --> 00:06:52,840
over parts to control apply we could

171
00:06:52,840 --> 00:06:55,950
continue all day so there are many many

172
00:06:55,950 --> 00:06:58,210
commands out there available that you

173
00:06:58,210 --> 00:06:59,950
would just keep typing all over again

174
00:06:59,950 --> 00:07:02,590
you can have a look into your shell

175
00:07:02,590 --> 00:07:05,020
histories in shell or bash history and

176
00:07:05,020 --> 00:07:07,420
then do some command line magic with

177
00:07:07,420 --> 00:07:09,700
sorting the commands that are in there

178
00:07:09,700 --> 00:07:12,280
and you can sort by usage and then you

179
00:07:12,280 --> 00:07:13,540
see which commands you know you are

180
00:07:13,540 --> 00:07:15,040
typing all over again where it makes

181
00:07:15,040 --> 00:07:18,970
sense to apply them just faster shell

182
00:07:18,970 --> 00:07:21,970
shortcuts that's also really really

183
00:07:21,970 --> 00:07:24,430
helpful well point to will point you to

184
00:07:24,430 --> 00:07:26,740
some resources how to get a little bit

185
00:07:26,740 --> 00:07:28,000
faster on the command line in general

186
00:07:28,000 --> 00:07:30,010
but that is actually why I use the

187
00:07:30,010 --> 00:07:32,800
command line all the time now I actually

188
00:07:32,800 --> 00:07:34,540
don't even use a file explorer I you

189
00:07:34,540 --> 00:07:35,860
just find command lines to do all these

190
00:07:35,860 --> 00:07:37,840
things because when you have some

191
00:07:37,840 --> 00:07:40,780
shortcuts for example if you type

192
00:07:40,780 --> 00:07:44,680
something and you you have some output

193
00:07:44,680 --> 00:07:48,430
here you probably know about clear that

194
00:07:48,430 --> 00:07:51,910
clears the current window but it also is

195
00:07:51,910 --> 00:07:54,400
just possible to hit control and L for

196
00:07:54,400 --> 00:07:57,580
clear and similarly you can define your

197
00:07:57,580 --> 00:08:00,430
own ones for example I defined ctrl K to

198
00:08:00,430 --> 00:08:02,350
just do a similar thing clear and

199
00:08:02,350 --> 00:08:04,420
display the current directory right or

200
00:08:04,420 --> 00:08:07,300
ctrl J for do the same thing but with a

201
00:08:07,300 --> 00:08:11,230
tree with one level or H with two levels

202
00:08:11,230 --> 00:08:13,000
that shows you now the font is a little

203
00:08:13,000 --> 00:08:15,660
bit big it just shows you the current

204
00:08:15,660 --> 00:08:17,680
the current contents of the directory

205
00:08:17,680 --> 00:08:20,260
which is just really really fast or if

206
00:08:20,260 --> 00:08:21,790
you go into the source directory you

207
00:08:21,790 --> 00:08:24,760
know you see where are we and I think

208
00:08:24,760 --> 00:08:26,790
that's just so much easier to to use

209
00:08:26,790 --> 00:08:29,050
then you know your file explorer or

210
00:08:29,050 --> 00:08:30,700
something like that so I think that just

211
00:08:30,700 --> 00:08:32,890
really makes sense well regardless of

212
00:08:32,890 --> 00:08:34,780
the language that you using so for Java

213
00:08:34,780 --> 00:08:36,630
developers as well as any other

214
00:08:36,630 --> 00:08:39,159
developers to just be a little bit

215
00:08:39,159 --> 00:08:43,480
faster and then of course automation and

216
00:08:43,480 --> 00:08:46,180
scripting the reason the main reason why

217
00:08:46,180 --> 00:08:47,980
we should spend some time in the command

218
00:08:47,980 --> 00:08:51,130
line because it's so much faster to do

219
00:08:51,130 --> 00:08:54,020
any automation job instead

220
00:08:54,020 --> 00:08:57,500
of manually you know even in putting in

221
00:08:57,500 --> 00:09:00,050
some commands commands ones one after

222
00:09:00,050 --> 00:09:02,270
another so for example most creative

223
00:09:02,270 --> 00:09:05,780
script how to build our replication that

224
00:09:05,780 --> 00:09:09,830
by the way was also a shortcut if we say

225
00:09:09,830 --> 00:09:12,680
maiden clean package our application

226
00:09:12,680 --> 00:09:14,900
then you know that's the first step how

227
00:09:14,900 --> 00:09:16,490
to build our application and the next

228
00:09:16,490 --> 00:09:19,190
step of course is docker built this into

229
00:09:19,190 --> 00:09:23,300
an image then if you want we can push

230
00:09:23,300 --> 00:09:25,960
the image and then we can dock a run

231
00:09:25,960 --> 00:09:28,250
that image or something like that right

232
00:09:28,250 --> 00:09:30,440
all the steps that are necessary in

233
00:09:30,440 --> 00:09:33,830
order to do this and then push will not

234
00:09:33,830 --> 00:09:36,110
work but the run will work and then we

235
00:09:36,110 --> 00:09:38,000
can actually just execute this and then

236
00:09:38,000 --> 00:09:39,740
it will do all the steps for us so

237
00:09:39,740 --> 00:09:42,320
instead of doing this manually what we

238
00:09:42,320 --> 00:09:46,360
can do we can really relax Leanback

239
00:09:46,570 --> 00:09:49,310
enjoy our coffee what our application is

240
00:09:49,310 --> 00:09:51,110
billing and starting up right it just

241
00:09:51,110 --> 00:09:54,140
really makes sense because that is the

242
00:09:54,140 --> 00:09:56,300
way how to I would say use the computer

243
00:09:56,300 --> 00:09:58,340
correctly by doing automation and the

244
00:09:58,340 --> 00:10:00,050
command line is a really easy way to

245
00:10:00,050 --> 00:10:02,180
that even if we're not you know shell

246
00:10:02,180 --> 00:10:04,640
experts I also I wrote many many shell

247
00:10:04,640 --> 00:10:06,590
scripts but I'm totally not a bash or

248
00:10:06,590 --> 00:10:09,110
shell expert I always have to google the

249
00:10:09,110 --> 00:10:10,610
syntax and everything but it's just

250
00:10:10,610 --> 00:10:13,070
really convenient it really helps you to

251
00:10:13,070 --> 00:10:14,510
become more productive because of

252
00:10:14,510 --> 00:10:16,100
automation and the command line is a

253
00:10:16,100 --> 00:10:18,620
really easy way to do that and you can

254
00:10:18,620 --> 00:10:20,360
script you know literally everything

255
00:10:20,360 --> 00:10:22,070
especially when you are on a UNIX

256
00:10:22,070 --> 00:10:25,070
environment then

257
00:10:25,070 --> 00:10:27,920
oh yeah that's a fun topic use Vin's way

258
00:10:27,920 --> 00:10:30,830
of typing this vim edit or this crazy

259
00:10:30,830 --> 00:10:34,030
editor nobody knows how to exit I

260
00:10:34,030 --> 00:10:37,790
actually used this editor many many

261
00:10:37,790 --> 00:10:40,160
years and I have to say I'm not even the

262
00:10:40,160 --> 00:10:41,570
biggest fan of the editor I don't care

263
00:10:41,570 --> 00:10:42,710
if you use this or not

264
00:10:42,710 --> 00:10:44,960
but what I care about is that way of

265
00:10:44,960 --> 00:10:48,290
typing because it makes you so much

266
00:10:48,290 --> 00:10:50,990
faster to edit any type of text not only

267
00:10:50,990 --> 00:10:53,360
code also any type of text I wrote my

268
00:10:53,360 --> 00:10:55,780
book in them no kidding with Eska doc

269
00:10:55,780 --> 00:10:59,630
because it has multiple layers of well

270
00:10:59,630 --> 00:11:00,710
of text input

271
00:11:00,710 --> 00:11:03,860
so the idea why it is so productive is

272
00:11:03,860 --> 00:11:05,750
that you are trying to eliminate all the

273
00:11:05,750 --> 00:11:06,910
context switches

274
00:11:06,910 --> 00:11:08,620
not just your mental context switches

275
00:11:08,620 --> 00:11:10,120
what you're thinking about but also the

276
00:11:10,120 --> 00:11:12,790
hand movements so instead of saying well

277
00:11:12,790 --> 00:11:15,040
I'm typing now and now I want to let's

278
00:11:15,040 --> 00:11:17,020
say go up there with my cursor so I have

279
00:11:17,020 --> 00:11:19,240
to move my hand a little bit to the

280
00:11:19,240 --> 00:11:22,210
arrow keys or to know any other hand

281
00:11:22,210 --> 00:11:24,850
weird hand movement that will just have

282
00:11:24,850 --> 00:11:26,530
a break into your flow because you

283
00:11:26,530 --> 00:11:28,030
either have to look into the keyboard

284
00:11:28,030 --> 00:11:29,710
where you're moving at or you just have

285
00:11:29,710 --> 00:11:31,360
to rearrange your hands and instead of

286
00:11:31,360 --> 00:11:33,760
doing this what wim does it just has

287
00:11:33,760 --> 00:11:36,490
multiple input layers like overloading

288
00:11:36,490 --> 00:11:38,590
the keys for what you can do so that is

289
00:11:38,590 --> 00:11:40,360
why you cannot type anything here you

290
00:11:40,360 --> 00:11:43,300
cannot have an input instead unless you

291
00:11:43,300 --> 00:11:45,580
type at key like I for insert and then

292
00:11:45,580 --> 00:11:47,830
you can actually have an input and then

293
00:11:47,830 --> 00:11:49,810
if you hit escape then you know you're

294
00:11:49,810 --> 00:11:51,730
back in the so-called normal mode and

295
00:11:51,730 --> 00:11:55,420
that is W and B moving word-for-word

296
00:11:55,420 --> 00:11:58,690
work backwards or you know this famous

297
00:11:58,690 --> 00:12:02,710
movement with just a home row h JK and L

298
00:12:02,710 --> 00:12:04,930
and then you can do all kinds of funny

299
00:12:04,930 --> 00:12:06,580
things like copying text and you know

300
00:12:06,580 --> 00:12:09,310
moving around you can have composable

301
00:12:09,310 --> 00:12:11,230
commands together with actions and that

302
00:12:11,230 --> 00:12:13,720
just makes it really really quick really

303
00:12:13,720 --> 00:12:15,850
fast to edit text and once you get used

304
00:12:15,850 --> 00:12:18,550
to that you want to have this movement

305
00:12:18,550 --> 00:12:20,230
everywhere so that's actually the reason

306
00:12:20,230 --> 00:12:23,200
why also if you noticed my IDE looks

307
00:12:23,200 --> 00:12:25,240
that weird so I have this weird a big

308
00:12:25,240 --> 00:12:28,270
cursor that is actually vim emulation so

309
00:12:28,270 --> 00:12:30,310
there's an idea BIM plug-in which is

310
00:12:30,310 --> 00:12:34,420
really helpful the same way I'm using of

311
00:12:34,420 --> 00:12:36,880
them emulation on my z shell so you can

312
00:12:36,880 --> 00:12:40,990
do the same things and if you just input

313
00:12:40,990 --> 00:12:42,250
something like that it's just so much

314
00:12:42,250 --> 00:12:44,440
faster to you know move around and

315
00:12:44,440 --> 00:12:47,260
delete something rather than using you

316
00:12:47,260 --> 00:12:48,940
know the backspace which is just so much

317
00:12:48,940 --> 00:12:51,010
slower so once you get used that it's

318
00:12:51,010 --> 00:12:56,290
really really fast to do so and also in

319
00:12:56,290 --> 00:12:58,300
them like in any other edit order you

320
00:12:58,300 --> 00:13:00,670
can also and you should define some life

321
00:13:00,670 --> 00:13:02,610
templates even for some you know small

322
00:13:02,610 --> 00:13:05,350
code snippets or text snippets or even

323
00:13:05,350 --> 00:13:07,810
words if you keep typing all over again

324
00:13:07,810 --> 00:13:12,730
so for example when I say my name is

325
00:13:12,730 --> 00:13:15,610
Sebastian - Knight I'm a developer

326
00:13:15,610 --> 00:13:20,660
advocate I work with Java job

327
00:13:20,660 --> 00:13:26,010
part-ii liberty kubernetes you know all

328
00:13:26,010 --> 00:13:27,930
these things all the words that you keep

329
00:13:27,930 --> 00:13:29,910
typing all over and at first it looks

330
00:13:29,910 --> 00:13:31,649
funny if you say well you have to define

331
00:13:31,649 --> 00:13:33,779
a life template for that but it really

332
00:13:33,779 --> 00:13:36,390
really helps you just to become quicker

333
00:13:36,390 --> 00:13:38,760
at what you're doing that is actually

334
00:13:38,760 --> 00:13:40,800
the reason why no kidding I'm writing my

335
00:13:40,800 --> 00:13:43,200
emails in them because it's so much

336
00:13:43,200 --> 00:13:44,760
faster to say something like you know

337
00:13:44,760 --> 00:13:49,890
yes sir or madam hello world best

338
00:13:49,890 --> 00:13:52,560
regards Sebastian take this copy and

339
00:13:52,560 --> 00:13:54,510
there you go and it's so much faster to

340
00:13:54,510 --> 00:13:56,370
you know use all the other keys on your

341
00:13:56,370 --> 00:13:58,079
keyboard and constantly switching your

342
00:13:58,079 --> 00:14:01,110
hand positions and I think that's the

343
00:14:01,110 --> 00:14:04,470
way to go and more tips and tricks no

344
00:14:04,470 --> 00:14:08,459
second page of our of our slides try to

345
00:14:08,459 --> 00:14:12,060
use some hot reload mechanisms so in the

346
00:14:12,060 --> 00:14:14,670
previous session today that I did that

347
00:14:14,670 --> 00:14:17,730
was on Quercus that already has a quite

348
00:14:17,730 --> 00:14:20,279
famous quirky development mode that is

349
00:14:20,279 --> 00:14:22,529
actually a hot reload mechanism where it

350
00:14:22,529 --> 00:14:24,029
can start up your application

351
00:14:24,029 --> 00:14:25,709
change something in the code and you can

352
00:14:25,709 --> 00:14:29,250
wait for it it immediately reloads but

353
00:14:29,250 --> 00:14:31,200
what I'm showing now is another

354
00:14:31,200 --> 00:14:32,790
Enterprise runtime are called open

355
00:14:32,790 --> 00:14:35,970
Liberty which also has a similar mode

356
00:14:35,970 --> 00:14:38,279
that I actually for one reason like even

357
00:14:38,279 --> 00:14:41,040
better so open Liberty is a modern

358
00:14:41,040 --> 00:14:44,610
runtime on Jakarta and micro profile it

359
00:14:44,610 --> 00:14:46,589
runs your applications and and the

360
00:14:46,589 --> 00:14:48,329
current version is super fast that

361
00:14:48,329 --> 00:14:49,829
starts up actually really quickly and

362
00:14:49,829 --> 00:14:53,100
this is what I have here let's rid of

363
00:14:53,100 --> 00:14:55,950
this mode and this is just the default

364
00:14:55,950 --> 00:14:58,290
application that I'm using here and what

365
00:14:58,290 --> 00:14:59,970
I want to show you is this development

366
00:14:59,970 --> 00:15:03,060
mode Liberty column def similar to quark

367
00:15:03,060 --> 00:15:05,130
is def but it can actually do a few

368
00:15:05,130 --> 00:15:07,500
things more so it now also will start up

369
00:15:07,500 --> 00:15:12,120
your runtime like you know your by the

370
00:15:12,120 --> 00:15:16,020
way another shortcut that is I think

371
00:15:16,020 --> 00:15:18,290
called hello or something like that

372
00:15:18,290 --> 00:15:20,640
hello greetings

373
00:15:20,640 --> 00:15:24,209
I think hello like this it's still

374
00:15:24,209 --> 00:15:27,540
starting up if I have yes like my

375
00:15:27,540 --> 00:15:29,250
computer is under load right now so

376
00:15:29,250 --> 00:15:31,670
let's see

377
00:15:31,760 --> 00:15:35,670
oops that was oh yeah the injection

378
00:15:35,670 --> 00:15:38,100
point I have to look into that probably

379
00:15:38,100 --> 00:15:40,950
because I did a mistake

380
00:15:40,950 --> 00:15:42,860
yeah it's called greeting not greetings

381
00:15:42,860 --> 00:15:46,470
so that's the heart reload mechanism the

382
00:15:46,470 --> 00:15:52,770
first time let me just clean this the

383
00:15:52,770 --> 00:15:54,540
first time you have to start up it tries

384
00:15:54,540 --> 00:15:56,940
to load and start up your application so

385
00:15:56,940 --> 00:15:59,100
of course you have to have some proper

386
00:15:59,100 --> 00:16:00,870
valid code not just what I played around

387
00:16:00,870 --> 00:16:03,720
here and then what it will do it will

388
00:16:03,720 --> 00:16:04,980
start up the application and you can

389
00:16:04,980 --> 00:16:07,380
make some changes here and then watch

390
00:16:07,380 --> 00:16:09,300
your changes being reflected and this

391
00:16:09,300 --> 00:16:11,070
sounds somewhat trivial but it's really

392
00:16:11,070 --> 00:16:13,110
really key to having a productive

393
00:16:13,110 --> 00:16:15,029
development setup because you don't want

394
00:16:15,029 --> 00:16:17,100
to wait for your changes to happen and

395
00:16:17,100 --> 00:16:19,230
also at the same time you want to verify

396
00:16:19,230 --> 00:16:21,690
your changes on a more end-to-end level

397
00:16:21,690 --> 00:16:23,850
so I can also you know write a class and

398
00:16:23,850 --> 00:16:25,529
write a unit test for it but that only

399
00:16:25,529 --> 00:16:27,270
gets you so far at the end you want to

400
00:16:27,270 --> 00:16:29,580
see whether your app works correctly and

401
00:16:29,580 --> 00:16:32,250
whether you know you see Hello over HTTP

402
00:16:32,250 --> 00:16:33,960
including the correct status codes and

403
00:16:33,960 --> 00:16:35,790
all these things whether your app works

404
00:16:35,790 --> 00:16:38,790
as expected so what you can do here of

405
00:16:38,790 --> 00:16:40,920
course all these things that you can

406
00:16:40,920 --> 00:16:42,630
change some code and you see the change

407
00:16:42,630 --> 00:16:46,410
being reflected there immediately and so

408
00:16:46,410 --> 00:16:48,540
on and so forth so that will just unreal

409
00:16:48,540 --> 00:16:50,850
ode your application and then you can

410
00:16:50,850 --> 00:16:54,780
see the exclamation mark here and but

411
00:16:54,780 --> 00:16:57,120
also what's a little bit more fun if you

412
00:16:57,120 --> 00:16:59,880
change some something like my config

413
00:16:59,880 --> 00:17:03,300
here that is actually displayed by some

414
00:17:03,300 --> 00:17:05,760
loaded by some configuration so this is

415
00:17:05,760 --> 00:17:07,800
why I was using this one here so you

416
00:17:07,800 --> 00:17:10,260
know you can make some changes in your

417
00:17:10,260 --> 00:17:12,420
properties file for example and they

418
00:17:12,420 --> 00:17:14,609
also will be picked up and then you see

419
00:17:14,609 --> 00:17:17,339
hey exclamation mark so that is just one

420
00:17:17,339 --> 00:17:19,829
thing that helps you staying in the flow

421
00:17:19,829 --> 00:17:21,390
because you don't have to wait right I

422
00:17:21,390 --> 00:17:23,250
made some changes and the change are

423
00:17:23,250 --> 00:17:25,619
there immediately and this is now a

424
00:17:25,619 --> 00:17:27,119
different technology that I will show

425
00:17:27,119 --> 00:17:29,670
with sharing with Quercus so it works

426
00:17:29,670 --> 00:17:31,290
with you know different approaches it's

427
00:17:31,290 --> 00:17:32,820
it's not really a question of the

428
00:17:32,820 --> 00:17:34,679
technology even it's more a question of

429
00:17:34,679 --> 00:17:36,960
the approach you using and how to build

430
00:17:36,960 --> 00:17:39,090
such a workflow that helps you develop

431
00:17:39,090 --> 00:17:42,420
faster locally in order to keep these

432
00:17:42,420 --> 00:17:45,330
turnaround cycles short why because

433
00:17:45,330 --> 00:17:47,159
we just humans we get distracted

434
00:17:47,159 --> 00:17:49,740
otherwise it does make a huge difference

435
00:17:49,740 --> 00:17:51,720
whether I have to wait 2 seconds or 10

436
00:17:51,720 --> 00:17:53,880
seconds it's not 5 times more productive

437
00:17:53,880 --> 00:17:55,620
it's a thousand times more productive

438
00:17:55,620 --> 00:17:58,649
because if I wait 2 seconds I well wait

439
00:17:58,649 --> 00:18:00,240
2 seconds it's a little bit could be

440
00:18:00,240 --> 00:18:01,740
better but it's fine if I wait 10

441
00:18:01,740 --> 00:18:05,850
seconds I'd be like yeah hmm let's check

442
00:18:05,850 --> 00:18:07,890
my smart phone let's look into slack and

443
00:18:07,890 --> 00:18:09,390
then my attention is gone and I'm doing

444
00:18:09,390 --> 00:18:11,309
something else so I'm out of this flow

445
00:18:11,309 --> 00:18:14,610
so what I want to do I want to have this

446
00:18:14,610 --> 00:18:18,980
short turn around same for test feedback

447
00:18:18,980 --> 00:18:23,220
scenarios so in the same way and this is

448
00:18:23,220 --> 00:18:25,169
why I like this development mode of

449
00:18:25,169 --> 00:18:26,880
Liberty if you hit enter it will

450
00:18:26,880 --> 00:18:29,190
automatically automatically run your

451
00:18:29,190 --> 00:18:31,980
unit tests and integration tests so I

452
00:18:31,980 --> 00:18:34,350
have a unit test here that just tests

453
00:18:34,350 --> 00:18:36,630
for my hello which is now of course

454
00:18:36,630 --> 00:18:38,789
hello exclamation mark so I have to fix

455
00:18:38,789 --> 00:18:40,830
that test and then I can immediately hit

456
00:18:40,830 --> 00:18:42,600
enter and you know get the immediate

457
00:18:42,600 --> 00:18:45,059
response so it's right there and now our

458
00:18:45,059 --> 00:18:47,220
next test fails my integration test

459
00:18:47,220 --> 00:18:50,190
suite which also and this actually

460
00:18:50,190 --> 00:18:52,350
already connects against my application

461
00:18:52,350 --> 00:18:54,299
that is running there and now expect

462
00:18:54,299 --> 00:18:57,330
some exclamation marks also and then I

463
00:18:57,330 --> 00:18:59,429
see both test Suites being green and

464
00:18:59,429 --> 00:19:01,380
that is the immediate feedback I was

465
00:19:01,380 --> 00:19:03,299
talking about so I can change them

466
00:19:03,299 --> 00:19:05,100
production code I see the changes I can

467
00:19:05,100 --> 00:19:05,970
change my test

468
00:19:05,970 --> 00:19:07,500
Eirene run my tests I read where my

469
00:19:07,500 --> 00:19:09,480
tests and I don't have to wait for

470
00:19:09,480 --> 00:19:12,690
anything anything there so it's just I

471
00:19:12,690 --> 00:19:15,990
think very productive to use have a lot

472
00:19:15,990 --> 00:19:18,029
of material to share how to build up

473
00:19:18,029 --> 00:19:20,480
efficient test Suites and more on that

474
00:19:20,480 --> 00:19:23,279
but moving on what else you should do as

475
00:19:23,279 --> 00:19:24,929
a Java developer so if you think that

476
00:19:24,929 --> 00:19:26,789
further then of course continuous

477
00:19:26,789 --> 00:19:28,769
delivery is the next step in automation

478
00:19:28,769 --> 00:19:31,139
like how to deploy and deliver your

479
00:19:31,139 --> 00:19:33,570
software with all these steps that you

480
00:19:33,570 --> 00:19:35,880
can define being executed automatically

481
00:19:35,880 --> 00:19:37,590
that's the whole point in order to

482
00:19:37,590 --> 00:19:39,419
actually be more reliable and to have

483
00:19:39,419 --> 00:19:41,940
more security whether stuff works later

484
00:19:41,940 --> 00:19:45,240
on everything is code that's also an

485
00:19:45,240 --> 00:19:47,850
interesting thing to follow if we think

486
00:19:47,850 --> 00:19:50,669
of darker files and also kubernetes yeah

487
00:19:50,669 --> 00:19:52,500
milles that's actually a nice way of

488
00:19:52,500 --> 00:19:54,779
putting infrastructure as code of saying

489
00:19:54,779 --> 00:19:57,059
well we have a code definition of how

490
00:19:57,059 --> 00:19:58,500
our infrastructure for example

491
00:19:58,500 --> 00:20:00,870
looks like so this can be automated same

492
00:20:00,870 --> 00:20:02,790
if you build some ASCII dog file or

493
00:20:02,790 --> 00:20:05,960
markdown that's also filed as code

494
00:20:05,960 --> 00:20:08,010
complementation as code as well as

495
00:20:08,010 --> 00:20:10,200
configuration is code so it just makes

496
00:20:10,200 --> 00:20:12,030
sense to put it into version control and

497
00:20:12,030 --> 00:20:14,940
to have some automation around it manage

498
00:20:14,940 --> 00:20:17,040
distractions yeah then these times

499
00:20:17,040 --> 00:20:19,410
that's a little bit more challenging so

500
00:20:19,410 --> 00:20:21,960
it's a whole topic around trying to

501
00:20:21,960 --> 00:20:25,020
focus what we're doing so any email any

502
00:20:25,020 --> 00:20:27,300
slack any phone notification will just

503
00:20:27,300 --> 00:20:30,060
throw us off our our work that we're

504
00:20:30,060 --> 00:20:32,580
trying to do so easy trying to silence

505
00:20:32,580 --> 00:20:34,860
them phone has a feature called flight

506
00:20:34,860 --> 00:20:37,320
modes slack email can be closed so you

507
00:20:37,320 --> 00:20:39,510
actually only see what you want to work

508
00:20:39,510 --> 00:20:41,880
in right now at least for awhile like

509
00:20:41,880 --> 00:20:44,310
half an hour or an hour will make you

510
00:20:44,310 --> 00:20:47,940
much more productive oh two more things

511
00:20:47,940 --> 00:20:50,430
read the documentation and write some

512
00:20:50,430 --> 00:20:53,360
documentation that in general is just

513
00:20:53,360 --> 00:20:56,430
combined with the idea that you you know

514
00:20:56,430 --> 00:20:59,100
should as funny as it sounds know what

515
00:20:59,100 --> 00:21:01,350
you're doing so it will make you more

516
00:21:01,350 --> 00:21:03,870
efficient to actually you know read what

517
00:21:03,870 --> 00:21:05,910
your frameworks are actually doing under

518
00:21:05,910 --> 00:21:08,100
the hood how they work how the concepts

519
00:21:08,100 --> 00:21:10,080
look like if you're looking to some new

520
00:21:10,080 --> 00:21:12,480
technology whatever it is it will always

521
00:21:12,480 --> 00:21:15,000
pay off if you invest some time to

522
00:21:15,000 --> 00:21:17,040
actually sit down and go read a book or

523
00:21:17,040 --> 00:21:18,870
read the documentation really trying to

524
00:21:18,870 --> 00:21:20,430
understand the concepts before you just

525
00:21:20,430 --> 00:21:22,470
try out some stuff of course trying out

526
00:21:22,470 --> 00:21:24,020
stuff is part of the game but as

527
00:21:24,020 --> 00:21:26,100
especially if you work on some project

528
00:21:26,100 --> 00:21:27,090
code it really makes a difference

529
00:21:27,090 --> 00:21:29,220
whether you're more productive and

530
00:21:29,220 --> 00:21:31,380
writing documentation the same if you

531
00:21:31,380 --> 00:21:34,590
can contribute that back it helps you a

532
00:21:34,590 --> 00:21:37,260
lot to basically teach others or in the

533
00:21:37,260 --> 00:21:39,150
same way actually teach yourself like

534
00:21:39,150 --> 00:21:41,190
teach your future self because in two

535
00:21:41,190 --> 00:21:43,080
weeks from now you will not know anymore

536
00:21:43,080 --> 00:21:45,150
what you've done today so try to write

537
00:21:45,150 --> 00:21:46,860
documentation as if you would write it

538
00:21:46,860 --> 00:21:48,780
for your future self and it will help

539
00:21:48,780 --> 00:21:49,380
you a lot

540
00:21:49,380 --> 00:21:51,150
saving time in the future because you

541
00:21:51,150 --> 00:21:54,300
can just read your thoughts of today

542
00:21:54,300 --> 00:21:58,350
what you were planning back then I'm

543
00:21:58,350 --> 00:22:00,150
taking a step back and reflecting what

544
00:22:00,150 --> 00:22:02,250
you're doing that's also a great tool

545
00:22:02,250 --> 00:22:04,710
actually especially for automation like

546
00:22:04,710 --> 00:22:06,770
trying to find easy no shortcuts or

547
00:22:06,770 --> 00:22:08,790
aliases that I we're talking about you

548
00:22:08,790 --> 00:22:10,860
know which commands typing all over

549
00:22:10,860 --> 00:22:13,320
again which boilerplate code am I

550
00:22:13,320 --> 00:22:15,120
putting in all the time and then just

551
00:22:15,120 --> 00:22:17,730
trying to you know take a step back and

552
00:22:17,730 --> 00:22:19,110
look at that and say okay actually I

553
00:22:19,110 --> 00:22:20,910
should define just some automation for

554
00:22:20,910 --> 00:22:23,090
it and that will make you so much more

555
00:22:23,090 --> 00:22:25,950
so much more efficient if you can break

556
00:22:25,950 --> 00:22:29,340
out of this loop and then also always

557
00:22:29,340 --> 00:22:31,890
keep learning especially now especially

558
00:22:31,890 --> 00:22:33,810
now you can use that time to have some

559
00:22:33,810 --> 00:22:35,640
online courses to look into some new

560
00:22:35,640 --> 00:22:38,400
text to look into some new programming

561
00:22:38,400 --> 00:22:40,440
languages for example it will definitely

562
00:22:40,440 --> 00:22:43,650
help you your future career a few more

563
00:22:43,650 --> 00:22:46,140
things that I want to share with you I

564
00:22:46,140 --> 00:22:48,600
will put some links later today

565
00:22:48,600 --> 00:22:50,550
so there is a video if you want to look

566
00:22:50,550 --> 00:22:51,929
into this development mode that was

567
00:22:51,929 --> 00:22:54,510
talking about also I have a video course

568
00:22:54,510 --> 00:22:56,910
in that whole topic of developer

569
00:22:56,910 --> 00:22:59,310
productivity quite a while ago but it

570
00:22:59,310 --> 00:23:01,470
touches many many more points that you

571
00:23:01,470 --> 00:23:03,890
might have a look at available for free

572
00:23:03,890 --> 00:23:06,870
another thing I wanted to share I found

573
00:23:06,870 --> 00:23:08,460
this very helpful the if you use

574
00:23:08,460 --> 00:23:11,490
IntelliJ the videos that are put

575
00:23:11,490 --> 00:23:13,020
together on the YouTube channel or if

576
00:23:13,020 --> 00:23:16,440
you follow on Twitter you can learn a

577
00:23:16,440 --> 00:23:18,750
lot and these shortcuts are really worth

578
00:23:18,750 --> 00:23:20,610
that time of learning because you will

579
00:23:20,610 --> 00:23:24,060
just get much more productive and a last

580
00:23:24,060 --> 00:23:25,710
thing I want to announce actually

581
00:23:25,710 --> 00:23:27,600
exclusively today so that's the very

582
00:23:27,600 --> 00:23:30,720
first time I'm talking about that I am

583
00:23:30,720 --> 00:23:34,170
about to start a podcast on this topic

584
00:23:34,170 --> 00:23:37,320
of how to become more effective as a

585
00:23:37,320 --> 00:23:38,820
developer it's called the effective

586
00:23:38,820 --> 00:23:42,060
developer out now you can have a look on

587
00:23:42,060 --> 00:23:45,330
anchor FM or on Spotify and we'll post

588
00:23:45,330 --> 00:23:48,210
the link but for you to know already you

589
00:23:48,210 --> 00:23:50,010
can follow that well we'll just talk a

590
00:23:50,010 --> 00:23:51,630
little bit more with background and

591
00:23:51,630 --> 00:23:53,850
experiences like talking about flow

592
00:23:53,850 --> 00:23:56,040
principles and some mindsets to follow

593
00:23:56,040 --> 00:23:58,380
to become more productive and to make

594
00:23:58,380 --> 00:24:00,810
our job and work a little bit more

595
00:24:00,810 --> 00:24:04,470
enjoyable so I think we're soon also at

596
00:24:04,470 --> 00:24:07,200
the end of our time and ready for q and

597
00:24:07,200 --> 00:24:10,530
A's so that's it what I wanted to share

598
00:24:10,530 --> 00:24:12,540
for now and I'm very looking forward to

599
00:24:12,540 --> 00:24:14,460
some questions that you folks might have

600
00:24:14,460 --> 00:24:16,679
great thank you so much the best really

601
00:24:16,679 --> 00:24:17,820
interesting talk and I think a lot of

602
00:24:17,820 --> 00:24:19,560
people gained a lot from that we have

603
00:24:19,560 --> 00:24:21,840
several questions actually so we've got

604
00:24:21,840 --> 00:24:24,150
a couple on so I know what

605
00:24:24,150 --> 00:24:26,670
so first question is how do you organize

606
00:24:26,670 --> 00:24:29,190
and keep your dot files up-to-date for

607
00:24:29,190 --> 00:24:30,150
example all of the different live

608
00:24:30,150 --> 00:24:32,300
templates and aliases that you showed us

609
00:24:32,300 --> 00:24:33,480
yeah

610
00:24:33,480 --> 00:24:39,330
easy good simple answer exactly as code

611
00:24:39,330 --> 00:24:42,060
was here everything is code and put them

612
00:24:42,060 --> 00:24:44,100
into your git repository and then you

613
00:24:44,100 --> 00:24:46,950
can just yeah share them and when you

614
00:24:46,950 --> 00:24:48,810
get a new computer you take like 10

615
00:24:48,810 --> 00:24:50,730
minutes to set it up because you point

616
00:24:50,730 --> 00:24:53,100
to all of the dot files that he put in

617
00:24:53,100 --> 00:24:55,290
till you get and download them and easy

618
00:24:55,290 --> 00:24:56,820
especially if you have something that

619
00:24:56,820 --> 00:24:59,190
you can store s code which is true for

620
00:24:59,190 --> 00:25:02,090
most of the tools out there as of today

621
00:25:02,090 --> 00:25:05,850
great you can share them your life

622
00:25:05,850 --> 00:25:08,910
templates and things like that so it's

623
00:25:08,910 --> 00:25:11,490
portable in that way as well as far as I

624
00:25:11,490 --> 00:25:14,400
understood yeah great and then another

625
00:25:14,400 --> 00:25:16,320
question is where do you run your test

626
00:25:16,320 --> 00:25:17,970
do you run it from the terminal or from

627
00:25:17,970 --> 00:25:21,120
the IDE or using Oh depends so usually

628
00:25:21,120 --> 00:25:22,920
for my IDE it depends a little bit on

629
00:25:22,920 --> 00:25:25,140
the test so if I use the Liberty then I

630
00:25:25,140 --> 00:25:26,730
used a Liberty death just because it's

631
00:25:26,730 --> 00:25:28,230
it's a little bit faster actually I

632
00:25:28,230 --> 00:25:30,750
think it starts up faster if because

633
00:25:30,750 --> 00:25:32,340
it's already running so you just hit

634
00:25:32,340 --> 00:25:34,200
enter and then it runs both the unit and

635
00:25:34,200 --> 00:25:36,450
integration tests other than that

636
00:25:36,450 --> 00:25:40,440
usually in the IDE or by a maven if I

637
00:25:40,440 --> 00:25:42,270
have some other setup if I you know have

638
00:25:42,270 --> 00:25:44,790
to point some system properties to point

639
00:25:44,790 --> 00:25:46,260
it to a different cluster for example

640
00:25:46,260 --> 00:25:48,840
for system tests I'm a system test I run

641
00:25:48,840 --> 00:25:50,700
usually by the command line with some

642
00:25:50,700 --> 00:25:52,380
prior setup or then you know using a

643
00:25:52,380 --> 00:25:56,070
script and you talked about a great way

644
00:25:56,070 --> 00:25:58,560
to get more comfortable with Java

645
00:25:58,560 --> 00:26:00,000
developing is to read and write

646
00:26:00,000 --> 00:26:02,610
documentation there any cheat sheets or

647
00:26:02,610 --> 00:26:04,650
help help sites or templates that you

648
00:26:04,650 --> 00:26:06,120
use when you're writing documentation

649
00:26:06,120 --> 00:26:09,510
where do we go to start off ah that's a

650
00:26:09,510 --> 00:26:10,620
good question so when I write

651
00:26:10,620 --> 00:26:13,170
documentation myself I it already helps

652
00:26:13,170 --> 00:26:14,670
if you just start with something plain

653
00:26:14,670 --> 00:26:16,050
text like you know literally putting

654
00:26:16,050 --> 00:26:17,850
your thoughts on paper because just as a

655
00:26:17,850 --> 00:26:20,250
reminder of yourself and then once you

656
00:26:20,250 --> 00:26:21,750
have the time or you want to make it

657
00:26:21,750 --> 00:26:23,310
look a little bit nicer for somebody

658
00:26:23,310 --> 00:26:24,660
else then it makes sense to you know

659
00:26:24,660 --> 00:26:26,490
write some proper asciidoc or something

660
00:26:26,490 --> 00:26:29,250
like that other than that how to get

661
00:26:29,250 --> 00:26:31,680
documentation I found in general Java

662
00:26:31,680 --> 00:26:33,480
dog actually a pretty good tool because

663
00:26:33,480 --> 00:26:35,280
you know you have your documentation

664
00:26:35,280 --> 00:26:37,260
right where the code is or at least you

665
00:26:37,260 --> 00:26:37,410
know

666
00:26:37,410 --> 00:26:40,140
how to use a method and all that other

667
00:26:40,140 --> 00:26:42,900
than that you know any point anyway how

668
00:26:42,900 --> 00:26:45,240
to easily do publish it to a website and

669
00:26:45,240 --> 00:26:46,980
this can be you know ask a dog or

670
00:26:46,980 --> 00:26:49,380
markdown to some HTML and then just very

671
00:26:49,380 --> 00:26:52,680
easily consumable and one last question

672
00:26:52,680 --> 00:26:56,070
we got on China is so what's the best in

673
00:26:56,070 --> 00:26:57,570
your opinion what is the best productive

674
00:26:57,570 --> 00:27:01,429
build framework maven or Gradle

675
00:27:02,400 --> 00:27:05,520
I mean Gradle is much more flexible than

676
00:27:05,520 --> 00:27:08,250
madness for most of my projects I use

677
00:27:08,250 --> 00:27:11,070
maven just because it's well good enough

678
00:27:11,070 --> 00:27:12,900
it has everything that he would need and

679
00:27:12,900 --> 00:27:14,880
it's more like the opposite way if you

680
00:27:14,880 --> 00:27:16,470
need something else then probably you

681
00:27:16,470 --> 00:27:17,730
know you should rethink what you're

682
00:27:17,730 --> 00:27:19,680
doing because for a typical enterprise

683
00:27:19,680 --> 00:27:21,600
projects what I'm doing may Venus more

684
00:27:21,600 --> 00:27:23,370
than sufficient and you should not need

685
00:27:23,370 --> 00:27:27,390
anything else I would say it might be a

686
00:27:27,390 --> 00:27:29,580
little bit faster also well that depends

687
00:27:29,580 --> 00:27:31,680
how you set it up I am personally use

688
00:27:31,680 --> 00:27:34,080
maven but I don't have references it

689
00:27:34,080 --> 00:27:35,790
really depends how you use them for both

690
00:27:35,790 --> 00:27:39,180
of them okay great I'm sure you can add

691
00:27:39,180 --> 00:27:40,410
some more detail on the slack channel

692
00:27:40,410 --> 00:27:42,480
you can that you can create thread there

693
00:27:42,480 --> 00:27:44,100
thank you so much for joining us the

694
00:27:44,100 --> 00:27:45,600
best and really appreciate that and it's

695
00:27:45,600 --> 00:27:48,210
been a really interesting talk thank you

696
00:27:48,210 --> 00:27:50,460
for it and as we said please keep asking

697
00:27:50,460 --> 00:27:51,840
questions sebastian will be available in

698
00:27:51,840 --> 00:27:53,010
slack channel to answer any additional

699
00:27:53,010 --> 00:27:56,030
ones that you may have

