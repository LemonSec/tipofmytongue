1
00:00:00,160 --> 00:00:02,560
bernd is here and he will talk about

2
00:00:02,560 --> 00:00:04,080
three common pitfalls

3
00:00:04,080 --> 00:00:06,240
in microsoft integration how to avoid

4
00:00:06,240 --> 00:00:07,359
them so

5
00:00:07,359 --> 00:00:10,240
um basically without further ado i want

6
00:00:10,240 --> 00:00:10,559
to

7
00:00:10,559 --> 00:00:13,280
uh give the word give the stage to bernd

8
00:00:13,280 --> 00:00:13,759
if you

9
00:00:13,759 --> 00:00:16,720
want to please share your screen so i

10
00:00:16,720 --> 00:00:19,199
can blend it in the screen in the stream

11
00:00:19,199 --> 00:00:22,320
then the floor is all yours

12
00:00:22,320 --> 00:00:25,359
thank you so much brian um

13
00:00:25,359 --> 00:00:29,359
sorry screen sharing should be on the

14
00:00:29,359 --> 00:00:30,080
way

15
00:00:30,080 --> 00:00:33,280
uh there he goes yes i see your screen

16
00:00:33,280 --> 00:00:35,280
popping up just a second

17
00:00:35,280 --> 00:00:37,680
and we'll see that you your screen is up

18
00:00:37,680 --> 00:00:39,200
i will remove myself from the screen and

19
00:00:39,200 --> 00:00:40,960
the floor is all yours

20
00:00:40,960 --> 00:00:43,840
thank you so much um yeah welcome i i

21
00:00:43,840 --> 00:00:46,559
basically hope you have enough coffee

22
00:00:46,559 --> 00:00:48,640
depending on the where you are might be

23
00:00:48,640 --> 00:00:50,239
pretty early or pretty late for me it's

24
00:00:50,239 --> 00:00:51,680
quite nice in the afternoon

25
00:00:51,680 --> 00:00:53,840
um thank you for watching i wanna yeah

26
00:00:53,840 --> 00:00:55,280
talk about three common pitfalls in

27
00:00:55,280 --> 00:00:56,960
microservice integration

28
00:00:56,960 --> 00:01:00,000
um and basically one of the motivations

29
00:01:00,000 --> 00:01:01,359
for the talk there are

30
00:01:01,359 --> 00:01:03,120
a lot of things going on at the moment

31
00:01:03,120 --> 00:01:04,400
but i actually

32
00:01:04,400 --> 00:01:07,119
like this slide a lot this um

33
00:01:07,119 --> 00:01:08,640
architecture graph which

34
00:01:08,640 --> 00:01:11,360
infocus once in a while about what's

35
00:01:11,360 --> 00:01:12,000
currently going

36
00:01:12,000 --> 00:01:14,000
on on the hype cycle and if you look at

37
00:01:14,000 --> 00:01:16,080
it you can see that microservices

38
00:01:16,080 --> 00:01:18,799
late majority which basically means that

39
00:01:18,799 --> 00:01:20,960
most people start to do microservices

40
00:01:20,960 --> 00:01:22,560
nowadays it's not any any

41
00:01:22,560 --> 00:01:24,799
fancy early adopter stuff anymore it's

42
00:01:24,799 --> 00:01:28,400
really adopted on a broad scale

43
00:01:28,400 --> 00:01:30,240
that's on the one hand which basically

44
00:01:30,240 --> 00:01:32,000
fits very much my experience

45
00:01:32,000 --> 00:01:34,400
with what we see at customers on the

46
00:01:34,400 --> 00:01:35,520
other hand

47
00:01:35,520 --> 00:01:38,079
correctly build distributed systems is

48
00:01:38,079 --> 00:01:39,119
early adopters

49
00:01:39,119 --> 00:01:41,840
so for me that basically means everybody

50
00:01:41,840 --> 00:01:43,200
is doing microservices but the

51
00:01:43,200 --> 00:01:44,960
microservices are inherently a

52
00:01:44,960 --> 00:01:46,479
distributed system so

53
00:01:46,479 --> 00:01:48,880
um seems we're not really good at that

54
00:01:48,880 --> 00:01:50,880
and this is something we definitely have

55
00:01:50,880 --> 00:01:51,520
to change

56
00:01:51,520 --> 00:01:53,600
and that's one of the motivations for

57
00:01:53,600 --> 00:01:55,600
the talk there are a couple of

58
00:01:55,600 --> 00:01:58,479
more probably and if you look at that

59
00:01:58,479 --> 00:01:58,880
and i

60
00:01:58,880 --> 00:02:00,640
don't want to define microservices in

61
00:02:00,640 --> 00:02:02,640
detail i don't have the time here today

62
00:02:02,640 --> 00:02:04,799
but if you look at that you will have

63
00:02:04,799 --> 00:02:06,399
basically a bunch of services

64
00:02:06,399 --> 00:02:08,318
which communicate with each other and

65
00:02:08,318 --> 00:02:10,160
the more of these services you

66
00:02:10,160 --> 00:02:13,200
have the different you have to view at

67
00:02:13,200 --> 00:02:14,720
the system as a whole so

68
00:02:14,720 --> 00:02:16,800
um one very important thing and that's

69
00:02:16,800 --> 00:02:18,800
really a mind shift is that

70
00:02:18,800 --> 00:02:20,879
if you have a relatively large system

71
00:02:20,879 --> 00:02:22,000
some parts of

72
00:02:22,000 --> 00:02:23,920
it will always be broken it might be the

73
00:02:23,920 --> 00:02:26,000
network to the to the component it might

74
00:02:26,000 --> 00:02:28,239
be the component itself you have a

75
00:02:28,239 --> 00:02:30,560
downtime or whatever something is always

76
00:02:30,560 --> 00:02:32,560
like not going very well

77
00:02:32,560 --> 00:02:35,760
and one thing um we start to accept is

78
00:02:35,760 --> 00:02:36,080
that

79
00:02:36,080 --> 00:02:38,560
this can happen and then we have to deal

80
00:02:38,560 --> 00:02:40,160
with it the important thing is

81
00:02:40,160 --> 00:02:42,800
not to avoid that but to avoid that this

82
00:02:42,800 --> 00:02:44,400
really brings down

83
00:02:44,400 --> 00:02:46,239
like the whole system by doing some

84
00:02:46,239 --> 00:02:48,080
cascading failures or whatever

85
00:02:48,080 --> 00:02:50,319
so this is kind of the picture we we

86
00:02:50,319 --> 00:02:51,760
definitely need to avoid

87
00:02:51,760 --> 00:02:54,239
which is very different to what we how

88
00:02:54,239 --> 00:02:55,599
we thought about

89
00:02:55,599 --> 00:02:57,840
developing systems like five or ten

90
00:02:57,840 --> 00:02:58,640
years back

91
00:02:58,640 --> 00:03:00,800
so um this is kind of what we should

92
00:03:00,800 --> 00:03:02,879
have in the back of our minds

93
00:03:02,879 --> 00:03:05,920
um when talking about that um looking at

94
00:03:05,920 --> 00:03:07,360
a concrete example i'm a

95
00:03:07,360 --> 00:03:10,560
an example or a story person if you like

96
00:03:10,560 --> 00:03:12,640
you probably remember back in the days

97
00:03:12,640 --> 00:03:13,760
when we used

98
00:03:13,760 --> 00:03:17,280
to use airplanes probably and

99
00:03:17,280 --> 00:03:19,120
i like this example actually very much

100
00:03:19,120 --> 00:03:20,480
because normally you know it from the

101
00:03:20,480 --> 00:03:22,159
user perspective if you want to

102
00:03:22,159 --> 00:03:24,640
um want to fly somewhere you book a play

103
00:03:24,640 --> 00:03:26,000
you book a ticket

104
00:03:26,000 --> 00:03:29,360
and then normally like 24 hours before

105
00:03:29,360 --> 00:03:30,959
the flight you normally get an email

106
00:03:30,959 --> 00:03:32,000
invitation to check

107
00:03:32,000 --> 00:03:35,040
in for me that was the case for this

108
00:03:35,040 --> 00:03:36,640
flight to london actually

109
00:03:36,640 --> 00:03:38,959
so that was roughly three three years

110
00:03:38,959 --> 00:03:40,319
back i think

111
00:03:40,319 --> 00:03:41,920
a flight from from germany from

112
00:03:41,920 --> 00:03:43,840
stuttgart to london and

113
00:03:43,840 --> 00:03:46,799
i could check in that did work but then

114
00:03:46,799 --> 00:03:48,480
when i wanted to send the boarding pass

115
00:03:48,480 --> 00:03:49,280
to me

116
00:03:49,280 --> 00:03:52,080
um that didn't work i basically got an

117
00:03:52,080 --> 00:03:53,920
error message it's a german website here

118
00:03:53,920 --> 00:03:55,760
but it's it's very easy basically said

119
00:03:55,760 --> 00:03:57,360
hey we couldn't send you the boarding

120
00:03:57,360 --> 00:03:59,840
pass that was an error

121
00:03:59,840 --> 00:04:02,159
that's what i meant early on that can

122
00:04:02,159 --> 00:04:02,879
happen

123
00:04:02,879 --> 00:04:06,879
and what i what i envision it to be in

124
00:04:06,879 --> 00:04:08,080
the background actually

125
00:04:08,080 --> 00:04:10,239
is like okay i was in front of the

126
00:04:10,239 --> 00:04:12,239
website the website somehow called

127
00:04:12,239 --> 00:04:14,000
another service like a micro service for

128
00:04:14,000 --> 00:04:16,160
example to check me in

129
00:04:16,160 --> 00:04:18,238
the check in microservice probably

130
00:04:18,238 --> 00:04:19,759
called a couple of other

131
00:04:19,759 --> 00:04:21,918
services in order to do its work for

132
00:04:21,918 --> 00:04:22,960
example

133
00:04:22,960 --> 00:04:25,440
let's say a barcode generator to

134
00:04:25,440 --> 00:04:27,680
generate that nice little 3d barcode you

135
00:04:27,680 --> 00:04:28,960
have on a boarding pass

136
00:04:28,960 --> 00:04:31,759
right so that's very easy to imagine we

137
00:04:31,759 --> 00:04:33,600
don't have euro wings as a customer we

138
00:04:33,600 --> 00:04:35,040
have other customers doing

139
00:04:35,040 --> 00:04:38,479
very similar things and so that's

140
00:04:38,479 --> 00:04:40,320
from that perspective that's quite a

141
00:04:40,320 --> 00:04:42,720
quite a common picture

142
00:04:42,720 --> 00:04:44,639
what i assumed that happened in that

143
00:04:44,639 --> 00:04:46,800
case is that for example the barcode

144
00:04:46,800 --> 00:04:48,240
generation didn't work

145
00:04:48,240 --> 00:04:50,320
because the check-in was working i could

146
00:04:50,320 --> 00:04:52,000
check in so it was not the check-in

147
00:04:52,000 --> 00:04:52,639
service as

148
00:04:52,639 --> 00:04:55,199
the whole but some component in order to

149
00:04:55,199 --> 00:04:57,120
generate the document didn't work

150
00:04:57,120 --> 00:04:59,919
okay as said early on that can happen it

151
00:04:59,919 --> 00:05:01,280
can always happen you can't

152
00:05:01,280 --> 00:05:04,000
avoid that um i don't have problems with

153
00:05:04,000 --> 00:05:04,800
that

154
00:05:04,800 --> 00:05:09,199
um they had some mechanisms in place

155
00:05:09,199 --> 00:05:12,560
to that this didn't yet bring down the

156
00:05:12,560 --> 00:05:14,080
whole system

157
00:05:14,080 --> 00:05:16,639
a very important pattern in that regard

158
00:05:16,639 --> 00:05:18,720
is called the circuit breaker

159
00:05:18,720 --> 00:05:20,880
normally i ask in the audience like who

160
00:05:20,880 --> 00:05:25,520
knows the circuit breaker

161
00:05:25,520 --> 00:05:29,039
experience wise 60 70 percent of the

162
00:05:29,039 --> 00:05:30,639
people know that pattern by now

163
00:05:30,639 --> 00:05:33,120
that's a very important basic pattern it

164
00:05:33,120 --> 00:05:34,800
works like in your house if there's

165
00:05:34,800 --> 00:05:35,360
something

166
00:05:35,360 --> 00:05:37,520
weird with the electricity you don't

167
00:05:37,520 --> 00:05:39,280
wait for the house to burn down

168
00:05:39,280 --> 00:05:41,520
you basically switch off the electricity

169
00:05:41,520 --> 00:05:42,960
and that's the same thing here so

170
00:05:42,960 --> 00:05:45,840
whenever something is weird it basically

171
00:05:45,840 --> 00:05:47,280
switches off

172
00:05:47,280 --> 00:05:48,800
all communication to the barcode

173
00:05:48,800 --> 00:05:51,120
generator meaning you get

174
00:05:51,120 --> 00:05:53,039
what's very often referred to as fail

175
00:05:53,039 --> 00:05:54,960
fast that means you get an exception

176
00:05:54,960 --> 00:05:56,240
right away instead of

177
00:05:56,240 --> 00:05:58,800
getting stuck by calling other services

178
00:05:58,800 --> 00:06:00,319
um they did have that

179
00:06:00,319 --> 00:06:02,319
so that was not the problem i don't want

180
00:06:02,319 --> 00:06:03,840
to focus on that today

181
00:06:03,840 --> 00:06:07,520
um it's not for all the

182
00:06:07,520 --> 00:06:10,960
like airlines all the time like this so

183
00:06:10,960 --> 00:06:13,759
um it got a weird hobby actually for me

184
00:06:13,759 --> 00:06:14,080
so

185
00:06:14,080 --> 00:06:16,400
over time when i when i started to give

186
00:06:16,400 --> 00:06:18,319
talks like this

187
00:06:18,319 --> 00:06:20,319
i started to collect arrow messages from

188
00:06:20,319 --> 00:06:21,520
airlines um

189
00:06:21,520 --> 00:06:23,039
which has a nice side effect that

190
00:06:23,039 --> 00:06:25,199
whenever um something goes wrong i'm i'm

191
00:06:25,199 --> 00:06:26,160
kind of having

192
00:06:26,160 --> 00:06:28,400
a small happy moment like oh i get a new

193
00:06:28,400 --> 00:06:30,160
screenshot and this is from united

194
00:06:30,160 --> 00:06:31,120
airlines and

195
00:06:31,120 --> 00:06:33,440
they definitely didn't had something

196
00:06:33,440 --> 00:06:35,440
like this in place so whenever i

197
00:06:35,440 --> 00:06:37,280
clicked on that i get on 500 which is

198
00:06:37,280 --> 00:06:38,560
really the worst case

199
00:06:38,560 --> 00:06:41,680
so um failing fast

200
00:06:41,680 --> 00:06:44,080
having some kind of circuit breaking is

201
00:06:44,080 --> 00:06:45,120
super important

202
00:06:45,120 --> 00:06:48,240
but it's not enough and that's

203
00:06:48,240 --> 00:06:50,960
where i normally see project stopping so

204
00:06:50,960 --> 00:06:51,599
they they

205
00:06:51,599 --> 00:06:53,199
if they do rest communication they know

206
00:06:53,199 --> 00:06:55,520
okay we should have a circuit breaker

207
00:06:55,520 --> 00:06:59,120
service meshes whatever um but that's it

208
00:06:59,120 --> 00:07:01,840
and for me the interesting part starts

209
00:07:01,840 --> 00:07:02,400
here

210
00:07:02,400 --> 00:07:04,960
so let's look at that failure again so

211
00:07:04,960 --> 00:07:05,520
let's see

212
00:07:05,520 --> 00:07:08,319
uh let's say the barcode generator

213
00:07:08,319 --> 00:07:09,599
doesn't work or

214
00:07:09,599 --> 00:07:11,199
the network towards the barcode

215
00:07:11,199 --> 00:07:13,280
generator doesn't work

216
00:07:13,280 --> 00:07:16,560
if i have a problem here the bad

217
00:07:16,560 --> 00:07:19,440
part of the design we saw in the example

218
00:07:19,440 --> 00:07:21,440
earlier on is that this

219
00:07:21,440 --> 00:07:23,520
arrow gets directly basically

220
00:07:23,520 --> 00:07:24,560
transported to me

221
00:07:24,560 --> 00:07:27,039
i as a user see that in the front that

222
00:07:27,039 --> 00:07:29,280
hey we can't do anything for you

223
00:07:29,280 --> 00:07:31,199
and that's a pretty bad design because

224
00:07:31,199 --> 00:07:33,520
what can i do about this

225
00:07:33,520 --> 00:07:35,919
communication problem down there nothing

226
00:07:35,919 --> 00:07:36,800
basically

227
00:07:36,800 --> 00:07:38,720
what's the strategy i normally do in

228
00:07:38,720 --> 00:07:39,919
this situation

229
00:07:39,919 --> 00:07:43,520
um i retry right that's what we do we

230
00:07:43,520 --> 00:07:46,800
we hit f5 we try it again

231
00:07:46,800 --> 00:07:49,280
in this spec specific case it did work

232
00:07:49,280 --> 00:07:51,120
so i tried it again didn't work tried it

233
00:07:51,120 --> 00:07:52,639
again five minutes later

234
00:07:52,639 --> 00:07:55,599
it didn't work um so the next thing i

235
00:07:55,599 --> 00:07:56,400
did is

236
00:07:56,400 --> 00:07:58,800
um create a calendar entry in my

237
00:07:58,800 --> 00:08:00,000
personal outlook

238
00:08:00,000 --> 00:08:02,639
to remind me in the evening like hours

239
00:08:02,639 --> 00:08:03,360
later

240
00:08:03,360 --> 00:08:05,599
and then i because i otherwise i forget

241
00:08:05,599 --> 00:08:07,599
these kind of things and then

242
00:08:07,599 --> 00:08:09,360
i got the reminder from my calendar i

243
00:08:09,360 --> 00:08:11,680
tried it again i got my boarding pass

244
00:08:11,680 --> 00:08:13,919
so that didn't work it's what i call a

245
00:08:13,919 --> 00:08:15,199
stateful retry

246
00:08:15,199 --> 00:08:18,800
but the bad design here is that why

247
00:08:18,800 --> 00:08:20,639
does the user in this case even the

248
00:08:20,639 --> 00:08:22,720
customer the end user has to do that

249
00:08:22,720 --> 00:08:23,759
retry

250
00:08:23,759 --> 00:08:25,599
that's pretty bad i mean it's a boarding

251
00:08:25,599 --> 00:08:27,680
pass i don't need that right

252
00:08:27,680 --> 00:08:29,759
away in front of my computer i need it

253
00:08:29,759 --> 00:08:32,159
whenever i go to the airport

254
00:08:32,159 --> 00:08:35,360
in order to check it not early on

255
00:08:35,360 --> 00:08:39,039
so interesting

256
00:08:39,039 --> 00:08:42,719
enough it was it was truly the same trip

257
00:08:42,719 --> 00:08:45,760
when i went onwards from london

258
00:08:45,760 --> 00:08:48,800
um i had an easy chat flight and i had

259
00:08:48,800 --> 00:08:49,839
the same problem

260
00:08:49,839 --> 00:08:52,480
i got the same error message more or

261
00:08:52,480 --> 00:08:52,959
less

262
00:08:52,959 --> 00:08:55,680
but easyjet is um more interesting um

263
00:08:55,680 --> 00:08:57,279
they give you the work instruction

264
00:08:57,279 --> 00:08:59,279
they're said okay we're sorry we're

265
00:08:59,279 --> 00:09:00,959
having some technical difficulties at

266
00:09:00,959 --> 00:09:01,600
the moment

267
00:09:01,600 --> 00:09:04,000
please log on again okay retry if that

268
00:09:04,000 --> 00:09:05,519
doesn't work please try again in five

269
00:09:05,519 --> 00:09:06,560
minutes

270
00:09:06,560 --> 00:09:09,040
increase the interval um and that and i

271
00:09:09,040 --> 00:09:10,000
like that best

272
00:09:10,000 --> 00:09:12,720
we do actively monitor our site will be

273
00:09:12,720 --> 00:09:14,560
working to resolve the issue there's no

274
00:09:14,560 --> 00:09:15,519
need to call

275
00:09:15,519 --> 00:09:17,360
that's basically like hey it's your

276
00:09:17,360 --> 00:09:18,640
problem

277
00:09:18,640 --> 00:09:21,040
like sort it out yourself and that's

278
00:09:21,040 --> 00:09:21,680
like

279
00:09:21,680 --> 00:09:24,240
a weird way of dealing with these kind

280
00:09:24,240 --> 00:09:25,279
of problems

281
00:09:25,279 --> 00:09:27,519
um it should be really much more like

282
00:09:27,519 --> 00:09:28,800
hey we have a technic

283
00:09:28,800 --> 00:09:32,160
glitch yes sorry right but it can happen

284
00:09:32,160 --> 00:09:34,320
it can happen we will make sure

285
00:09:34,320 --> 00:09:36,320
that we sort it out and then we send it

286
00:09:36,320 --> 00:09:38,160
to the boarding pass whenever we have

287
00:09:38,160 --> 00:09:39,120
done that

288
00:09:39,120 --> 00:09:41,600
that would be a much better like design

289
00:09:41,600 --> 00:09:43,920
of the whole communication going on

290
00:09:43,920 --> 00:09:48,399
and in this case it's very um

291
00:09:48,399 --> 00:09:51,120
very obvious right because its end user

292
00:09:51,120 --> 00:09:52,560
facing but we see

293
00:09:52,560 --> 00:09:55,279
that kind of um thinking very often if

294
00:09:55,279 --> 00:09:57,040
we have service to service communication

295
00:09:57,040 --> 00:09:57,600
it's like

296
00:09:57,600 --> 00:10:01,200
hey i i have a problem downstream i just

297
00:10:01,200 --> 00:10:02,640
raised an exception and now it's a

298
00:10:02,640 --> 00:10:04,160
problem of my client

299
00:10:04,160 --> 00:10:06,399
and that's a really bad design it should

300
00:10:06,399 --> 00:10:08,000
be much more like hey the check-in

301
00:10:08,000 --> 00:10:09,680
service should sort it out

302
00:10:09,680 --> 00:10:11,760
right if the barcode generator is not

303
00:10:11,760 --> 00:10:14,079
available i retry it there

304
00:10:14,079 --> 00:10:16,320
probably statefully because it doesn't

305
00:10:16,320 --> 00:10:18,320
work right away i need to do it in five

306
00:10:18,320 --> 00:10:20,240
minutes in an hour or whatever

307
00:10:20,240 --> 00:10:22,640
um so that's the much better design and

308
00:10:22,640 --> 00:10:23,680
the end user

309
00:10:23,680 --> 00:10:25,760
basically i could tell him like hey i

310
00:10:25,760 --> 00:10:27,440
sent you the boarding pass in time

311
00:10:27,440 --> 00:10:32,000
don't worry right okay

312
00:10:32,000 --> 00:10:35,440
the um the problem whenever

313
00:10:35,440 --> 00:10:37,200
i'm at that stage whenever i discuss

314
00:10:37,200 --> 00:10:39,360
that with with people with developers

315
00:10:39,360 --> 00:10:40,240
for example

316
00:10:40,240 --> 00:10:43,519
um it's like yeah we got that but then

317
00:10:43,519 --> 00:10:46,480
we have state right and we are not

318
00:10:46,480 --> 00:10:47,760
really

319
00:10:47,760 --> 00:10:49,839
nobody likes states nowadays right we

320
00:10:49,839 --> 00:10:51,600
want to be serverless we want to be

321
00:10:51,600 --> 00:10:53,279
stateless so state is kind of a

322
00:10:53,279 --> 00:10:56,320
really an ugly ugly citizen here

323
00:10:56,320 --> 00:10:59,920
uh it's i mean we can handle state so

324
00:10:59,920 --> 00:11:02,079
one one option what you can obviously do

325
00:11:02,079 --> 00:11:02,640
is you can

326
00:11:02,640 --> 00:11:04,720
write it to a database table to a

327
00:11:04,720 --> 00:11:06,720
document database no sequel whatever

328
00:11:06,720 --> 00:11:08,480
whatever have you right

329
00:11:08,480 --> 00:11:11,680
um you just store it there um but most

330
00:11:11,680 --> 00:11:12,160
project

331
00:11:12,160 --> 00:11:14,800
sends that this is not it if i store

332
00:11:14,800 --> 00:11:16,399
something let's say in a table where i

333
00:11:16,399 --> 00:11:18,320
say hey i need to send the sporting pass

334
00:11:18,320 --> 00:11:18,959
i need

335
00:11:18,959 --> 00:11:21,600
additional things like a scheduler

336
00:11:21,600 --> 00:11:23,519
regularly checking for boarding passes

337
00:11:23,519 --> 00:11:25,920
to send i need some operations

338
00:11:25,920 --> 00:11:27,600
which looks at the table if something is

339
00:11:27,600 --> 00:11:29,760
stuck if there's a problem while sending

340
00:11:29,760 --> 00:11:30,240
the

341
00:11:30,240 --> 00:11:32,399
like boarding pass i need to notify

342
00:11:32,399 --> 00:11:34,000
somebody i don't have a client where i

343
00:11:34,000 --> 00:11:35,680
can send an exception to so

344
00:11:35,680 --> 00:11:38,079
so there is some complexity involved

345
00:11:38,079 --> 00:11:39,680
which is totally true

346
00:11:39,680 --> 00:11:43,839
um there's another class of um

347
00:11:43,839 --> 00:11:45,600
of tools you could leverage and that's

348
00:11:45,600 --> 00:11:46,959
where i come from which are

349
00:11:46,959 --> 00:11:49,920
workflow engines um whenever i propose

350
00:11:49,920 --> 00:11:50,880
workflow engines

351
00:11:50,880 --> 00:11:54,160
for that very often the reaction is

352
00:11:54,160 --> 00:11:57,600
like also like really um foreseeable

353
00:11:57,600 --> 00:11:58,160
it's like

354
00:11:58,160 --> 00:12:00,480
a workflow engine really these are these

355
00:12:00,480 --> 00:12:01,519
kind of bpm

356
00:12:01,519 --> 00:12:05,200
systems like the huge monolithic um

357
00:12:05,200 --> 00:12:08,000
like proprietary big vendor thingies

358
00:12:08,000 --> 00:12:08,880
which are really

359
00:12:08,880 --> 00:12:11,920
developers typically hate um staff what

360
00:12:11,920 --> 00:12:13,120
you're proposing

361
00:12:13,120 --> 00:12:15,839
and yes i do because the the market

362
00:12:15,839 --> 00:12:18,000
really changed over the last years so

363
00:12:18,000 --> 00:12:20,320
um it's not anymore that we have these

364
00:12:20,320 --> 00:12:21,360
kind of huge

365
00:12:21,360 --> 00:12:24,720
um systems of course i'm opinionated

366
00:12:24,720 --> 00:12:25,600
like

367
00:12:25,600 --> 00:12:28,720
every human being basically uh i

368
00:12:28,720 --> 00:12:30,639
want to make it transparent here um that

369
00:12:30,639 --> 00:12:33,279
you can touch who i am and

370
00:12:33,279 --> 00:12:36,160
like what's my way of thinking um yeah

371
00:12:36,160 --> 00:12:37,680
my name is ben rick i'm co-founder and

372
00:12:37,680 --> 00:12:38,480
technologist

373
00:12:38,480 --> 00:12:40,959
uh within kamunda and we're an open

374
00:12:40,959 --> 00:12:42,079
source vendor

375
00:12:42,079 --> 00:12:45,360
and we're um doing an op source workflow

376
00:12:45,360 --> 00:12:46,959
automation platform which includes a

377
00:12:46,959 --> 00:12:48,399
workflow engine um

378
00:12:48,399 --> 00:12:52,399
so i'm obviously a bit biased but um

379
00:12:52,399 --> 00:12:55,920
i've worked with or on different

380
00:12:55,920 --> 00:12:59,519
um basically yeah basically open source

381
00:12:59,519 --> 00:13:02,240
workflow engines over the last 10 to 15

382
00:13:02,240 --> 00:13:03,760
years

383
00:13:03,760 --> 00:13:07,920
with hundreds of clients so i'm kind of

384
00:13:07,920 --> 00:13:10,079
got into that topic and quite hooked up

385
00:13:10,079 --> 00:13:11,680
with workflow engines and workflow

386
00:13:11,680 --> 00:13:12,480
automation

387
00:13:12,480 --> 00:13:14,720
state machines and these kind of things

388
00:13:14,720 --> 00:13:16,000
so that's my background

389
00:13:16,000 --> 00:13:18,959
right i'm quite enthusiastic about that

390
00:13:18,959 --> 00:13:20,560
but it also means that i

391
00:13:20,560 --> 00:13:22,880
look onto a lot of problems through the

392
00:13:22,880 --> 00:13:23,839
length of

393
00:13:23,839 --> 00:13:25,680
workflow engines that's probably good to

394
00:13:25,680 --> 00:13:26,880
know um but

395
00:13:26,880 --> 00:13:28,480
if you're looking at the market you see

396
00:13:28,480 --> 00:13:30,959
that there is a lot of movement like

397
00:13:30,959 --> 00:13:34,000
silicon valley um they're starting doing

398
00:13:34,000 --> 00:13:37,600
um like bespoke um workflow engines

399
00:13:37,600 --> 00:13:39,600
um if you look at the cloud market they

400
00:13:39,600 --> 00:13:41,199
all do workflow engines might be

401
00:13:41,199 --> 00:13:44,240
aws or the others as well

402
00:13:44,240 --> 00:13:45,839
in the java ecosystems there are a

403
00:13:45,839 --> 00:13:48,240
couple of open source engines um

404
00:13:48,240 --> 00:13:51,040
like commodore activity javascript bpm

405
00:13:51,040 --> 00:13:52,160
and some others

406
00:13:52,160 --> 00:13:54,320
so um there's really a lot going on it's

407
00:13:54,320 --> 00:13:56,480
not like the big vendors bpms

408
00:13:56,480 --> 00:13:58,480
anymore like it was like probably five

409
00:13:58,480 --> 00:14:00,079
years ago um

410
00:14:00,079 --> 00:14:01,839
i want to do a quick live demo that to

411
00:14:01,839 --> 00:14:03,199
give you an impression how that

412
00:14:03,199 --> 00:14:06,160
works how how what i mean by by state or

413
00:14:06,160 --> 00:14:07,360
workflowman

414
00:14:07,360 --> 00:14:09,199
engine for this kind of problem i

415
00:14:09,199 --> 00:14:10,480
sketched early on

416
00:14:10,480 --> 00:14:13,360
by coincidence i use the one from us

417
00:14:13,360 --> 00:14:14,959
which is by coincidence also in the

418
00:14:14,959 --> 00:14:17,120
middle of the slide i'm sorry for that

419
00:14:17,120 --> 00:14:20,320
um but you're totally free um to use

420
00:14:20,320 --> 00:14:22,079
a couple of the others well play around

421
00:14:22,079 --> 00:14:23,360
with it it's more like

422
00:14:23,360 --> 00:14:26,160
i want to want to make the um the

423
00:14:26,160 --> 00:14:26,800
concept

424
00:14:26,800 --> 00:14:29,199
tangible that's why i want to use code

425
00:14:29,199 --> 00:14:30,959
right

426
00:14:30,959 --> 00:14:33,920
so if you have such a workflow engine

427
00:14:33,920 --> 00:14:35,440
and i'll show you that in a minute in a

428
00:14:35,440 --> 00:14:37,040
demo so you get a better impression what

429
00:14:37,040 --> 00:14:38,160
it can do is like

430
00:14:38,160 --> 00:14:40,240
within your microservice you can

431
00:14:40,240 --> 00:14:42,320
leverage the workflow engine

432
00:14:42,320 --> 00:14:44,480
which is basically a persistent state

433
00:14:44,480 --> 00:14:46,320
machine a durable state machine

434
00:14:46,320 --> 00:14:48,800
in order to do things for you like for

435
00:14:48,800 --> 00:14:49,760
example say

436
00:14:49,760 --> 00:14:52,639
hey first thing you want to should do is

437
00:14:52,639 --> 00:14:54,079
generate a barcode

438
00:14:54,079 --> 00:14:57,040
that might be a simple rest call but if

439
00:14:57,040 --> 00:14:58,639
the peer is not available

440
00:14:58,639 --> 00:15:00,720
for whatever reason and what it can do

441
00:15:00,720 --> 00:15:03,360
is you can do the state for retry here

442
00:15:03,360 --> 00:15:06,240
and if you um if you wait here what the

443
00:15:06,240 --> 00:15:08,000
workflow engine does it it keeps the

444
00:15:08,000 --> 00:15:09,519
state persistent so whenever

445
00:15:09,519 --> 00:15:11,839
even if you crash it's still in some

446
00:15:11,839 --> 00:15:13,519
kind of data store depends a bit on the

447
00:15:13,519 --> 00:15:14,639
workflow engine use

448
00:15:14,639 --> 00:15:17,040
and you can set up from here anytime you

449
00:15:17,040 --> 00:15:19,120
can do what i call stateful retrying

450
00:15:19,120 --> 00:15:21,040
here directly so you could say like

451
00:15:21,040 --> 00:15:24,160
we tried for the next whatever

452
00:15:24,160 --> 00:15:26,880
10 hours or 10 days or whatever your use

453
00:15:26,880 --> 00:15:28,560
case is so

454
00:15:28,560 --> 00:15:30,560
you have all the scheduling all the

455
00:15:30,560 --> 00:15:32,320
operations everything built in

456
00:15:32,320 --> 00:15:34,399
right so that's actually pretty handy

457
00:15:34,399 --> 00:15:38,320
for that for that use case as well

458
00:15:38,480 --> 00:15:40,800
let's do some code let's give you a

459
00:15:40,800 --> 00:15:42,240
better impression of what i'm

460
00:15:42,240 --> 00:15:45,759
trying to talk about here um i use

461
00:15:45,759 --> 00:15:48,800
a very simple payment service here

462
00:15:48,800 --> 00:15:51,279
in order to showcase that so what i will

463
00:15:51,279 --> 00:15:53,279
uh what you will see in a minute is

464
00:15:53,279 --> 00:15:57,040
i have a spring boot application

465
00:15:57,040 --> 00:16:00,560
doing payments it provides a rest api

466
00:16:00,560 --> 00:16:02,959
so i can basically just call that and

467
00:16:02,959 --> 00:16:03,920
that uses

468
00:16:03,920 --> 00:16:07,040
like a credit card service for

469
00:16:07,040 --> 00:16:09,360
credit card payments via um also via

470
00:16:09,360 --> 00:16:10,240
rest api

471
00:16:10,240 --> 00:16:13,279
relatively simple setup right

472
00:16:13,279 --> 00:16:16,880
um everything i show here is on github

473
00:16:16,880 --> 00:16:17,199
so

474
00:16:17,199 --> 00:16:19,759
um there you can see it i can put it on

475
00:16:19,759 --> 00:16:23,839
slack later on so you don't have to like

476
00:16:23,839 --> 00:16:27,360
get it from your monitor now like okay

477
00:16:27,360 --> 00:16:30,240
this is the example and let's go there

478
00:16:30,240 --> 00:16:30,800
so

479
00:16:30,800 --> 00:16:34,000
and what i have here is the example

480
00:16:34,000 --> 00:16:37,839
and yes this is eclipse

481
00:16:37,839 --> 00:16:40,959
you guessed right um so um

482
00:16:40,959 --> 00:16:45,279
that's the example what i have here is

483
00:16:45,279 --> 00:16:47,199
i call it stripe fake so that's my

484
00:16:47,199 --> 00:16:49,040
credit card handling service because i

485
00:16:49,040 --> 00:16:50,800
don't obviously don't want to do credit

486
00:16:50,800 --> 00:16:51,920
card handling

487
00:16:51,920 --> 00:16:54,000
for real here so that's also a simple

488
00:16:54,000 --> 00:16:55,040
spring boot service

489
00:16:55,040 --> 00:16:56,800
which is just providing us very simple

490
00:16:56,800 --> 00:16:58,240
rest api

491
00:16:58,240 --> 00:17:02,240
um and then i have my payment service

492
00:17:02,240 --> 00:17:05,359
running here right also a spring boot

493
00:17:05,359 --> 00:17:05,760
app

494
00:17:05,760 --> 00:17:09,119
and what i can do here if

495
00:17:09,119 --> 00:17:11,760
i have a rest api i can basically call

496
00:17:11,760 --> 00:17:12,400
it

497
00:17:12,400 --> 00:17:14,959
right so i have my payment so i get the

498
00:17:14,959 --> 00:17:15,599
payment

499
00:17:15,599 --> 00:17:18,640
i put request you see that i will do a

500
00:17:18,640 --> 00:17:20,079
charge on the credit card

501
00:17:20,079 --> 00:17:23,280
so far so boring right um

502
00:17:23,280 --> 00:17:25,839
let's go for v2 for a moment i explain

503
00:17:25,839 --> 00:17:27,599
you the difference in a second

504
00:17:27,599 --> 00:17:30,320
same thing right so pretty boring and

505
00:17:30,320 --> 00:17:33,200
what i can do is um

506
00:17:33,200 --> 00:17:36,559
i can simulate that the credit card

507
00:17:36,559 --> 00:17:37,760
handling is now behaving

508
00:17:37,760 --> 00:17:40,960
slow right so it will have a random

509
00:17:40,960 --> 00:17:42,080
delay whenever i

510
00:17:42,080 --> 00:17:45,039
hit that send button it goes here to the

511
00:17:45,039 --> 00:17:46,000
payment service

512
00:17:46,000 --> 00:17:47,840
that one calls the rest service over

513
00:17:47,840 --> 00:17:49,600
here and that one

514
00:17:49,600 --> 00:17:53,039
will take in this case 33 seconds

515
00:17:53,039 --> 00:17:56,240
right this is a typical problem you have

516
00:17:56,240 --> 00:17:56,960
so if the

517
00:17:56,960 --> 00:17:58,880
if the network for example is kind of

518
00:17:58,880 --> 00:18:00,960
flaky you have a very very slow

519
00:18:00,960 --> 00:18:02,480
connection

520
00:18:02,480 --> 00:18:04,880
this will take long to respond what you

521
00:18:04,880 --> 00:18:06,080
can see is like

522
00:18:06,080 --> 00:18:08,720
i get a get an exception here why is

523
00:18:08,720 --> 00:18:09,120
that

524
00:18:09,120 --> 00:18:11,520
that's a big difference between v1 and

525
00:18:11,520 --> 00:18:12,240
v2

526
00:18:12,240 --> 00:18:15,360
so in v2 i used the circuit breaker what

527
00:18:15,360 --> 00:18:17,200
i explained earlier on

528
00:18:17,200 --> 00:18:19,280
okay three seconds it's not so long but

529
00:18:19,280 --> 00:18:21,760
now 31 seconds so

530
00:18:21,760 --> 00:18:24,160
um if i use the circuit breaker what

531
00:18:24,160 --> 00:18:24,960
that does

532
00:18:24,960 --> 00:18:28,480
um it basically says um okay

533
00:18:28,480 --> 00:18:30,480
there is a configured timeout which i

534
00:18:30,480 --> 00:18:32,000
wait for the service to

535
00:18:32,000 --> 00:18:33,679
to to come back it doesn't come back

536
00:18:33,679 --> 00:18:35,440
within that time so i send the

537
00:18:35,440 --> 00:18:37,760
exception right away that's fail fast

538
00:18:37,760 --> 00:18:39,440
right and that's very important

539
00:18:39,440 --> 00:18:42,960
because otherwise as you can see this

540
00:18:42,960 --> 00:18:45,440
thread takes a while this thread is

541
00:18:45,440 --> 00:18:47,280
blocked this spread is blocked so

542
00:18:47,280 --> 00:18:49,440
basically you get to the fire picture so

543
00:18:49,440 --> 00:18:52,640
that's much better in b2

544
00:18:52,640 --> 00:18:55,679
but still that's now like hey we can't

545
00:18:55,679 --> 00:18:57,120
send you the boring pass

546
00:18:57,120 --> 00:18:59,200
something is not working so and what i

547
00:18:59,200 --> 00:19:01,520
can do in status i can go to v3 and

548
00:19:01,520 --> 00:19:01,919
let's

549
00:19:01,919 --> 00:19:05,200
quickly look at the code so

550
00:19:05,200 --> 00:19:08,799
what i have and i jump directly into v2

551
00:19:08,799 --> 00:19:12,559
it's very simple i have a rest api

552
00:19:12,559 --> 00:19:14,720
um to retrieve the payment i'm just

553
00:19:14,720 --> 00:19:16,720
using um spring boot here so

554
00:19:16,720 --> 00:19:20,080
nothing very fancy what i do is um

555
00:19:20,080 --> 00:19:22,720
i charge the credit card here if i go

556
00:19:22,720 --> 00:19:24,880
into that method what you can see is

557
00:19:24,880 --> 00:19:27,039
okay i use historics i know that's kind

558
00:19:27,039 --> 00:19:29,600
of uh end of life but it's i'm still in

559
00:19:29,600 --> 00:19:30,160
here

560
00:19:30,160 --> 00:19:33,200
use resilience for tray or something you

561
00:19:33,200 --> 00:19:34,480
fancy as a

562
00:19:34,480 --> 00:19:38,320
as a circuit breaker um and

563
00:19:38,320 --> 00:19:40,559
then what i basically do is i use a rest

564
00:19:40,559 --> 00:19:41,440
template to

565
00:19:41,440 --> 00:19:46,000
um to post to the credit card service

566
00:19:46,000 --> 00:19:49,039
um send over a request get back a

567
00:19:49,039 --> 00:19:50,160
response

568
00:19:50,160 --> 00:19:53,520
and that's it okay not very complicated

569
00:19:53,520 --> 00:19:54,400
code

570
00:19:54,400 --> 00:19:57,679
um in order to add a simple workflow to

571
00:19:57,679 --> 00:19:59,840
that what you can do is um in this case

572
00:19:59,840 --> 00:20:01,360
um that's what i meant early on i use

573
00:20:01,360 --> 00:20:05,360
communal source apache license

574
00:20:05,360 --> 00:20:08,000
and what what you get there as well as a

575
00:20:08,000 --> 00:20:09,679
spring boot starter so i can

576
00:20:09,679 --> 00:20:13,200
just hook it into my main pump auto wire

577
00:20:13,200 --> 00:20:13,840
the process

578
00:20:13,840 --> 00:20:16,559
engine or the workflow engine i can if i

579
00:20:16,559 --> 00:20:18,400
like to i can create a workflow

580
00:20:18,400 --> 00:20:19,520
definition

581
00:20:19,520 --> 00:20:22,000
in java code so what i say basically hey

582
00:20:22,000 --> 00:20:24,400
i want to when i have a workflow

583
00:20:24,400 --> 00:20:27,919
it starts here it ends here and the only

584
00:20:27,919 --> 00:20:28,960
thing i do is

585
00:20:28,960 --> 00:20:30,880
what's called a service task like one

586
00:20:30,880 --> 00:20:32,799
step in the workflow

587
00:20:32,799 --> 00:20:36,960
in order to call the credit card and

588
00:20:36,960 --> 00:20:40,000
you can then hook up code to that to

589
00:20:40,000 --> 00:20:41,120
that one

590
00:20:41,120 --> 00:20:43,840
step as i'm in spring boot the easiest

591
00:20:43,840 --> 00:20:45,760
way not the only way but the easiest way

592
00:20:45,760 --> 00:20:48,799
here to use basically a spring bean

593
00:20:48,799 --> 00:20:50,320
which is just defined here

594
00:20:50,320 --> 00:20:53,600
so no programming best practices

595
00:20:53,600 --> 00:20:55,600
right so just have everything in one

596
00:20:55,600 --> 00:20:56,720
class in

597
00:20:56,720 --> 00:21:00,080
in order to show it easily

598
00:21:00,559 --> 00:21:03,600
so um this is calling this one um the

599
00:21:03,600 --> 00:21:05,280
code within that

600
00:21:05,280 --> 00:21:08,480
um within the uh

601
00:21:08,480 --> 00:21:11,039
spring bean is more or less exactly what

602
00:21:11,039 --> 00:21:12,000
you saw in the

603
00:21:12,000 --> 00:21:14,320
in the early example so i just moved it

604
00:21:14,320 --> 00:21:16,159
into a known spring bean in order to

605
00:21:16,159 --> 00:21:16,880
hook it

606
00:21:16,880 --> 00:21:19,039
um onto the workflow and then what you

607
00:21:19,039 --> 00:21:20,820
have is you have a workflow

608
00:21:20,820 --> 00:21:21,919
[Music]

609
00:21:21,919 --> 00:21:25,600
engine so you can do things like hey if

610
00:21:25,600 --> 00:21:28,480
if it fails i want to do retries with

611
00:21:28,480 --> 00:21:30,240
the time cycle of like

612
00:21:30,240 --> 00:21:32,720
do it three times with a delay of period

613
00:21:32,720 --> 00:21:33,280
time

614
00:21:33,280 --> 00:21:35,520
one minute this is how you can read that

615
00:21:35,520 --> 00:21:36,720
it's kind of an easy

616
00:21:36,720 --> 00:21:39,760
ease of format right and then you deploy

617
00:21:39,760 --> 00:21:41,679
the workflow and whenever you

618
00:21:41,679 --> 00:21:45,039
charge the credit card instead of doing

619
00:21:45,039 --> 00:21:46,559
it right away

620
00:21:46,559 --> 00:21:49,360
you just start the workflow and that

621
00:21:49,360 --> 00:21:50,320
workflow then

622
00:21:50,320 --> 00:21:53,360
does it for you and that can do like all

623
00:21:53,360 --> 00:21:54,320
the retries

624
00:21:54,320 --> 00:21:57,919
right so far so easy so let's look at

625
00:21:57,919 --> 00:22:00,320
how this is working

626
00:22:00,320 --> 00:22:03,039
so let's go to v3 this is still slow

627
00:22:03,039 --> 00:22:04,000
nine seconds

628
00:22:04,000 --> 00:22:07,039
nine seconds is too long for historics

629
00:22:07,039 --> 00:22:08,640
so what you can see is you get the

630
00:22:08,640 --> 00:22:10,840
exceptions we should probably follow the

631
00:22:10,840 --> 00:22:12,320
log

632
00:22:12,320 --> 00:22:15,520
let's do it again yep so you saw the

633
00:22:15,520 --> 00:22:16,080
exceptions

634
00:22:16,080 --> 00:22:20,000
it's too long takes nine seconds um

635
00:22:20,000 --> 00:22:21,600
you will even see the retries in the

636
00:22:21,600 --> 00:22:23,440
background if i keep talking for long

637
00:22:23,440 --> 00:22:24,080
enough

638
00:22:24,080 --> 00:22:27,919
um what you can also see is like

639
00:22:27,919 --> 00:22:31,840
um two things so um one thing

640
00:22:31,840 --> 00:22:34,840
uh where is my browser now

641
00:22:34,840 --> 00:22:36,559
[Music]

642
00:22:36,559 --> 00:22:38,880
hang on it's on the wrong screen there

643
00:22:38,880 --> 00:22:40,000
we go

644
00:22:40,000 --> 00:22:43,280
um that these kind of tools also have

645
00:22:43,280 --> 00:22:45,440
a ui where you can see what's currently

646
00:22:45,440 --> 00:22:46,960
going on and very often

647
00:22:46,960 --> 00:22:50,240
um this is helpful in for people in

648
00:22:50,240 --> 00:22:51,760
order to understand

649
00:22:51,760 --> 00:22:53,520
what a workflow engine is because now

650
00:22:53,520 --> 00:22:55,200
you're basically looking at the

651
00:22:55,200 --> 00:22:57,600
at the data in the um the workflow

652
00:22:57,600 --> 00:22:58,320
engine

653
00:22:58,320 --> 00:23:00,159
and there it's called cockpit in order

654
00:23:00,159 --> 00:23:01,840
to see what's going on

655
00:23:01,840 --> 00:23:05,120
and to look at the time actually so

656
00:23:05,120 --> 00:23:08,000
um so for example i can see okay for

657
00:23:08,000 --> 00:23:09,200
payment v3

658
00:23:09,200 --> 00:23:11,600
um there are currently two um waiting

659
00:23:11,600 --> 00:23:12,559
there they're

660
00:23:12,559 --> 00:23:16,240
still in the retrying mode and at some

661
00:23:16,240 --> 00:23:17,280
point in time

662
00:23:17,280 --> 00:23:19,760
um they will give up three minutes i

663
00:23:19,760 --> 00:23:21,280
haven't talked for three minutes

664
00:23:21,280 --> 00:23:24,480
and then you get like um even like a

665
00:23:24,480 --> 00:23:26,320
red bubble here saying hey there's a

666
00:23:26,320 --> 00:23:28,159
problem you have to take care about that

667
00:23:28,159 --> 00:23:31,280
in some operations um manner okay

668
00:23:31,280 --> 00:23:33,520
so um there are a couple of these kind

669
00:23:33,520 --> 00:23:34,960
of things um

670
00:23:34,960 --> 00:23:38,640
as the consumer now you get back at 202.

671
00:23:38,640 --> 00:23:40,880
so that's different here we before that

672
00:23:40,880 --> 00:23:42,799
we got a either 200

673
00:23:42,799 --> 00:23:46,080
synchronous okay or 500 synchronous

674
00:23:46,080 --> 00:23:48,799
doesn't work and now we get back we got

675
00:23:48,799 --> 00:23:49,520
your

676
00:23:49,520 --> 00:23:52,400
request we send you back something later

677
00:23:52,400 --> 00:23:52,799
on

678
00:23:52,799 --> 00:23:54,960
right there a couple of strategies how

679
00:23:54,960 --> 00:23:56,240
to send it back

680
00:23:56,240 --> 00:23:59,360
um you can scroll through

681
00:23:59,360 --> 00:24:01,679
a couple of more versions which um

682
00:24:01,679 --> 00:24:03,200
behave differently

683
00:24:03,200 --> 00:24:04,559
which is quite interesting so for

684
00:24:04,559 --> 00:24:06,799
example v4 can do things like hey

685
00:24:06,799 --> 00:24:08,640
if something is weird i go to

686
00:24:08,640 --> 00:24:10,640
asynchronous if everything is

687
00:24:10,640 --> 00:24:13,520
normal um i basically even get a

688
00:24:13,520 --> 00:24:14,880
synchronous response so there are a

689
00:24:14,880 --> 00:24:16,000
couple of things you can do

690
00:24:16,000 --> 00:24:18,000
um you can walk through the code

691
00:24:18,000 --> 00:24:19,039
yourself so

692
00:24:19,039 --> 00:24:22,000
um the idea here was just to give you an

693
00:24:22,000 --> 00:24:23,600
impression what i mean by

694
00:24:23,600 --> 00:24:25,919
workflow engine and how easy that is in

695
00:24:25,919 --> 00:24:28,159
order to to use it within your service

696
00:24:28,159 --> 00:24:30,080
right so i have the payment service and

697
00:24:30,080 --> 00:24:32,159
i can define such a workflow

698
00:24:32,159 --> 00:24:35,600
and right and this is how i did it like

699
00:24:35,600 --> 00:24:36,559
spring boot and

700
00:24:36,559 --> 00:24:39,200
yeah so far so good i'm using bpmn here

701
00:24:39,200 --> 00:24:41,279
so the workflow you saw i defined it in

702
00:24:41,279 --> 00:24:41,679
code

703
00:24:41,679 --> 00:24:43,760
because i i find that people sometimes

704
00:24:43,760 --> 00:24:45,520
if they are not used to workflow

705
00:24:45,520 --> 00:24:47,520
languages they find it easier to

706
00:24:47,520 --> 00:24:49,039
understand what's going on nothing

707
00:24:49,039 --> 00:24:49,440
hidden

708
00:24:49,440 --> 00:24:51,440
in the graphical format but we ought to

709
00:24:51,440 --> 00:24:53,440
generate a graphical model because you

710
00:24:53,440 --> 00:24:54,960
saw that you can obviously also

711
00:24:54,960 --> 00:24:57,760
model graphically and then you have like

712
00:24:57,760 --> 00:24:59,919
all the operations and so on so forth

713
00:24:59,919 --> 00:25:02,080
and a lot of yeah

714
00:25:02,080 --> 00:25:04,320
the important thing here to recognize is

715
00:25:04,320 --> 00:25:06,240
if you do that retrying stuff

716
00:25:06,240 --> 00:25:08,320
of course and you will not get around

717
00:25:08,320 --> 00:25:10,480
retries in distributed systems

718
00:25:10,480 --> 00:25:13,039
you have to make sure that all the

719
00:25:13,039 --> 00:25:14,240
services you implement

720
00:25:14,240 --> 00:25:17,039
are item potent what does that mean if

721
00:25:17,039 --> 00:25:18,960
you charge the credit card

722
00:25:18,960 --> 00:25:21,200
you have to make sure you define some

723
00:25:21,200 --> 00:25:22,159
kind of like

724
00:25:22,159 --> 00:25:25,120
transaction id for example which you

725
00:25:25,120 --> 00:25:27,120
send over in order to

726
00:25:27,120 --> 00:25:31,039
to notice duplicate requests okay

727
00:25:31,039 --> 00:25:32,720
if you have that infrastructure and give

728
00:25:32,720 --> 00:25:34,559
me um two more minutes and then we are

729
00:25:34,559 --> 00:25:36,320
jumping in the q a so for that

730
00:25:36,320 --> 00:25:39,120
um you can leverage the same

731
00:25:39,120 --> 00:25:40,880
infrastructure so let's assume you're

732
00:25:40,880 --> 00:25:43,360
sending messages back and forth

733
00:25:43,360 --> 00:25:45,679
the same thing as you probably need to

734
00:25:45,679 --> 00:25:47,600
wait for things you monitor timeouts you

735
00:25:47,600 --> 00:25:48,480
escalate

736
00:25:48,480 --> 00:25:50,240
this is where a workflow engine can can

737
00:25:50,240 --> 00:25:52,559
help you a lot because you can wait

738
00:25:52,559 --> 00:25:55,600
for a response message and escalate

739
00:25:55,600 --> 00:25:59,919
i'm starting to get kicked out right

740
00:25:59,919 --> 00:26:03,039
and that means one last thing and that's

741
00:26:03,039 --> 00:26:04,799
the last minute i need

742
00:26:04,799 --> 00:26:08,000
consistency or distributed transactions

743
00:26:08,000 --> 00:26:10,240
that's normally the third pitfall so if

744
00:26:10,240 --> 00:26:11,279
you have

745
00:26:11,279 --> 00:26:14,080
like a workflow or something you want to

746
00:26:14,080 --> 00:26:16,480
do spanning multiple microservices you

747
00:26:16,480 --> 00:26:18,400
can't do a distributed transaction it

748
00:26:18,400 --> 00:26:19,679
just doesn't work

749
00:26:19,679 --> 00:26:22,320
right so um your business transaction

750
00:26:22,320 --> 00:26:23,039
might spawn

751
00:26:23,039 --> 00:26:25,919
multiple technical transactions and

752
00:26:25,919 --> 00:26:26,799
there's a

753
00:26:26,799 --> 00:26:28,720
there's a really good paper you can read

754
00:26:28,720 --> 00:26:30,880
it later on which explains why there's

755
00:26:30,880 --> 00:26:32,559
no technical

756
00:26:32,559 --> 00:26:34,720
transaction manager you can leverage

757
00:26:34,720 --> 00:26:36,159
there

758
00:26:36,159 --> 00:26:37,919
so this is also where it can leverage

759
00:26:37,919 --> 00:26:40,080
these um kind of workflows in order to

760
00:26:40,080 --> 00:26:41,679
say hey i do this

761
00:26:41,679 --> 00:26:44,559
if that did work i do this if this then

762
00:26:44,559 --> 00:26:45,360
doesn't work

763
00:26:45,360 --> 00:26:48,480
i can like undo the other activity and

764
00:26:48,480 --> 00:26:49,279
that's also

765
00:26:49,279 --> 00:26:51,039
known as the saga pattern in the

766
00:26:51,039 --> 00:26:52,400
microservices world so there are a

767
00:26:52,400 --> 00:26:53,279
couple of these

768
00:26:53,279 --> 00:26:56,559
like use cases for that

769
00:26:57,200 --> 00:27:00,000
and that's basically all i have so you

770
00:27:00,000 --> 00:27:02,320
have to think about timeouts retrying

771
00:27:02,320 --> 00:27:04,799
compensation and whenever you provide a

772
00:27:04,799 --> 00:27:05,360
service

773
00:27:05,360 --> 00:27:07,120
you have to offer these kind of undo

774
00:27:07,120 --> 00:27:10,559
methods and think about item potency

775
00:27:10,559 --> 00:27:14,320
thank you all right thank you

776
00:27:14,320 --> 00:27:15,760
thank you bernie i gotta i got a couple

777
00:27:15,760 --> 00:27:17,600
of questions so that's why i jumped in

778
00:27:17,600 --> 00:27:20,559
because um first question was how what

779
00:27:20,559 --> 00:27:21,279
do you think about

780
00:27:21,279 --> 00:27:22,720
handling this by the infra

781
00:27:22,720 --> 00:27:24,799
infrastructure can this like the uh

782
00:27:24,799 --> 00:27:26,399
circuit breaker can this handle or can

783
00:27:26,399 --> 00:27:27,919
this be handled by the infrastructure

784
00:27:27,919 --> 00:27:30,240
and wouldn't that be an easier solution

785
00:27:30,240 --> 00:27:33,039
um i think for some problems you can

786
00:27:33,039 --> 00:27:34,640
handle that with infrastructure so

787
00:27:34,640 --> 00:27:36,000
circuit breaking yes

788
00:27:36,000 --> 00:27:37,600
so circuit breaking i think that's what

789
00:27:37,600 --> 00:27:39,360
we see in service meshes that this is

790
00:27:39,360 --> 00:27:39,679
kind of

791
00:27:39,679 --> 00:27:41,440
somehow delegated to the infrastructure

792
00:27:41,440 --> 00:27:42,880
but if you're

793
00:27:42,880 --> 00:27:45,919
if you're having more problems around

794
00:27:45,919 --> 00:27:48,000
let's say for example state for retrying

795
00:27:48,000 --> 00:27:50,720
um if we if we use that example then you

796
00:27:50,720 --> 00:27:52,240
have to think about hey

797
00:27:52,240 --> 00:27:54,240
for how long do i want to retry does it

798
00:27:54,240 --> 00:27:56,080
make sense to to do the state for

799
00:27:56,080 --> 00:27:56,960
retrying

800
00:27:56,960 --> 00:27:59,200
um in this case i have the i want to

801
00:27:59,200 --> 00:28:00,159
send the

802
00:28:00,159 --> 00:28:03,440
um the boarding pass later on what's the

803
00:28:03,440 --> 00:28:05,440
channel to reach the person there

804
00:28:05,440 --> 00:28:07,520
all these kind of things can't be like

805
00:28:07,520 --> 00:28:09,440
guessed by the infrastructure so this is

806
00:28:09,440 --> 00:28:10,080
on the

807
00:28:10,080 --> 00:28:12,080
let's say always on the business level

808
00:28:12,080 --> 00:28:13,520
and um

809
00:28:13,520 --> 00:28:15,360
so you have to mix and match so you have

810
00:28:15,360 --> 00:28:16,720
some things on infrastructure like

811
00:28:16,720 --> 00:28:18,240
circuit breaking and then you have

812
00:28:18,240 --> 00:28:21,200
more complex patterns like and this

813
00:28:21,200 --> 00:28:23,120
should be in the in the business logic

814
00:28:23,120 --> 00:28:24,720
i think there's not not an easy way

815
00:28:24,720 --> 00:28:26,320
around that

816
00:28:26,320 --> 00:28:29,200
i agree there was a remark from jeff

817
00:28:29,200 --> 00:28:30,000
grix in the

818
00:28:30,000 --> 00:28:32,000
uh slack channel like microservice

819
00:28:32,000 --> 00:28:33,200
integrations why not

820
00:28:33,200 --> 00:28:35,440
do messaging so what's your remark on

821
00:28:35,440 --> 00:28:36,320
that i mean

822
00:28:36,320 --> 00:28:38,799
okay it's probably another solution to

823
00:28:38,799 --> 00:28:39,440
it but

824
00:28:39,440 --> 00:28:41,279
you have i wanna i wanna hear your view

825
00:28:41,279 --> 00:28:42,559
on it okay

826
00:28:42,559 --> 00:28:45,039
um so my personal view is that messaging

827
00:28:45,039 --> 00:28:46,880
makes a lot of sense in most situations

828
00:28:46,880 --> 00:28:47,919
so um

829
00:28:47,919 --> 00:28:51,039
that's why i have this example

830
00:28:51,039 --> 00:28:54,399
um it doesn't solve core problems

831
00:28:54,399 --> 00:28:56,320
what i talked about here so for example

832
00:28:56,320 --> 00:28:58,399
if you send the command to some

833
00:28:58,399 --> 00:29:00,320
some other service and say hey i want to

834
00:29:00,320 --> 00:29:01,679
want to receive the

835
00:29:01,679 --> 00:29:03,760
3d barcode and you never get a response

836
00:29:03,760 --> 00:29:05,440
you still have to monitor that

837
00:29:05,440 --> 00:29:07,360
you still don't want the person in front

838
00:29:07,360 --> 00:29:08,720
of the computer see hey

839
00:29:08,720 --> 00:29:10,720
i don't get anything back so you still

840
00:29:10,720 --> 00:29:12,320
have to solve that problem

841
00:29:12,320 --> 00:29:14,640
um despite that i think messaging is

842
00:29:14,640 --> 00:29:16,720
very often the better choice but i see a

843
00:29:16,720 --> 00:29:17,200
lot of

844
00:29:17,200 --> 00:29:19,120
companies or let's say development teams

845
00:29:19,120 --> 00:29:21,039
struggling with messaging a lot

846
00:29:21,039 --> 00:29:23,120
the complexity is simply higher so i

847
00:29:23,120 --> 00:29:25,200
still see most people out there doing

848
00:29:25,200 --> 00:29:28,880
a lot of rest um so it's not that i find

849
00:29:28,880 --> 00:29:32,480
it better it's just what i observe

850
00:29:32,480 --> 00:29:34,720
fair enough fair enough all right bernd

851
00:29:34,720 --> 00:29:36,720
i want to thank you for your talk it was

852
00:29:36,720 --> 00:29:37,120
um

853
00:29:37,120 --> 00:29:38,960
well very insightful for me personally

854
00:29:38,960 --> 00:29:40,159
so um

855
00:29:40,159 --> 00:29:42,640
thank you uh thank you if you uh if you

856
00:29:42,640 --> 00:29:44,640
are able please uh also um

857
00:29:44,640 --> 00:29:46,320
uh publish your slice because people are

858
00:29:46,320 --> 00:29:48,399
asking for it and uh i think it's uh

859
00:29:48,399 --> 00:29:49,120
it's a good time

860
00:29:49,120 --> 00:29:51,520
to educate people so uh thank you for

861
00:29:51,520 --> 00:29:52,960
hanging around and slack a bit

862
00:29:52,960 --> 00:29:55,279
if there's yes if you have questions

863
00:29:55,279 --> 00:29:57,279
bird will be in the slack channel so uh

864
00:29:57,279 --> 00:29:58,480
thank you bernd i will just

865
00:29:58,480 --> 00:30:01,840
remove you from the screen

