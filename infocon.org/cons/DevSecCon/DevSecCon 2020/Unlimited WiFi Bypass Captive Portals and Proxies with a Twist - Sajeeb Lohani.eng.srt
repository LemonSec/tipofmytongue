1
00:00:00,170 --> 00:00:03,959
we back with another amazing talk and

2
00:00:03,959 --> 00:00:05,850
again I thank everybody for the

3
00:00:05,850 --> 00:00:08,639
generosity for donation donation as the

4
00:00:08,639 --> 00:00:11,370
open so please give back and we have

5
00:00:11,370 --> 00:00:14,130
Michelle or honey and shape they're

6
00:00:14,130 --> 00:00:17,820
gonna talk about Wi-Fi Wi-Fi security so

7
00:00:17,820 --> 00:00:22,500
let me add them on the stream Misha

8
00:00:22,500 --> 00:00:28,500
shape you are on right hi hi how you

9
00:00:28,500 --> 00:00:36,090
doing all right if you want to share

10
00:00:36,090 --> 00:00:38,370
your screen this stage is yours

11
00:00:38,370 --> 00:00:44,010
okay thank you cool just to get things

12
00:00:44,010 --> 00:00:44,670
started

13
00:00:44,670 --> 00:00:47,070
welcome to unlimited Wi-Fi by cross and

14
00:00:47,070 --> 00:00:49,289
captive portals and proxies with a twist

15
00:00:49,289 --> 00:00:52,110
um do you even remember how we started

16
00:00:52,110 --> 00:00:55,230
with this talk I'm not thinking about it

17
00:00:55,230 --> 00:00:56,579
no not really

18
00:00:56,579 --> 00:00:59,489
I think it was actually something to do

19
00:00:59,489 --> 00:01:01,920
with the fact that we were stuck in in

20
00:01:01,920 --> 00:01:04,979
airports delayed as always and we were

21
00:01:04,979 --> 00:01:08,010
wondering what to do we ran out of Wi-Fi

22
00:01:08,010 --> 00:01:09,540
because we've been binge watching things

23
00:01:09,540 --> 00:01:12,180
on YouTube and the airlines actually

24
00:01:12,180 --> 00:01:14,700
wanted us to you know either pay for

25
00:01:14,700 --> 00:01:16,799
Wi-Fi or give our personal information

26
00:01:16,799 --> 00:01:18,570
and I think it was actually then that we

27
00:01:18,570 --> 00:01:20,909
started sitting down and trying to find

28
00:01:20,909 --> 00:01:22,740
different ways of bypassing these

29
00:01:22,740 --> 00:01:24,540
captive portals and proxies with our

30
00:01:24,540 --> 00:01:27,360
little twist well hey my name is Sergey

31
00:01:27,360 --> 00:01:30,210
blow honey I'm a senior pen tester of

32
00:01:30,210 --> 00:01:31,890
private sector ed in Melbourne Australia

33
00:01:31,890 --> 00:01:34,979
and the land down under I ranked within

34
00:01:34,979 --> 00:01:37,170
the top 50 in bugcrowd and I'm a

35
00:01:37,170 --> 00:01:39,810
co-author of interlace and dr. Watson

36
00:01:39,810 --> 00:01:43,970
and I also lecture in Melvin University

37
00:01:43,970 --> 00:01:46,829
hi I'm Misha I'm currently a student

38
00:01:46,829 --> 00:01:49,530
swimmer University I'm a community

39
00:01:49,530 --> 00:01:51,899
member for the awsm Cadets Melbourne and

40
00:01:51,899 --> 00:01:54,570
help out with AWS and events as well I

41
00:01:54,570 --> 00:01:57,210
like to volunteer I've been bowling I've

42
00:01:57,210 --> 00:01:59,670
volunteered for organizations like kids

43
00:01:59,670 --> 00:02:02,070
security where I actually spoke besides

44
00:02:02,070 --> 00:02:06,869
Melbourne and aid up your son awesome so

45
00:02:06,869 --> 00:02:08,250
quick rundown of the things that we're

46
00:02:08,250 --> 00:02:09,780
going to be going through today include

47
00:02:09,780 --> 00:02:12,150
the different types of attacks like you

48
00:02:12,150 --> 00:02:13,810
know different attack methods and

49
00:02:13,810 --> 00:02:15,790
just that we can use to our advantage to

50
00:02:15,790 --> 00:02:18,000
bypass all of these protections in place

51
00:02:18,000 --> 00:02:20,170
we're also going to be talking about the

52
00:02:20,170 --> 00:02:21,959
benefits of each and every one of these

53
00:02:21,959 --> 00:02:24,640
methods and we're going to try our in

54
00:02:24,640 --> 00:02:26,620
little way as cheap and quickly as

55
00:02:26,620 --> 00:02:28,360
possible to mitigate each of these

56
00:02:28,360 --> 00:02:31,680
vectors thank you

57
00:02:31,680 --> 00:02:34,720
alrighty so when people look at

58
00:02:34,720 --> 00:02:36,700
bypassing captive portals and prophecies

59
00:02:36,700 --> 00:02:38,349
they usually look at infrastructure

60
00:02:38,349 --> 00:02:40,360
attacks but we're gonna start with

61
00:02:40,360 --> 00:02:42,069
application attacks as they're most

62
00:02:42,069 --> 00:02:44,019
commonly forgotten they can help with

63
00:02:44,019 --> 00:02:45,730
things like authentication bypasses

64
00:02:45,730 --> 00:02:47,500
within the application so let's get

65
00:02:47,500 --> 00:02:50,799
started I'm going to start with SQL

66
00:02:50,799 --> 00:02:53,769
injection and first thing I'm going to

67
00:02:53,769 --> 00:02:56,350
do is it's kind of give a picture of

68
00:02:56,350 --> 00:02:57,970
what a normal high school courier would

69
00:02:57,970 --> 00:02:59,650
look like so imagine you're in a

70
00:02:59,650 --> 00:03:01,959
warehouse and there's a robot you tell a

71
00:03:01,959 --> 00:03:04,120
robot to please go to this row this

72
00:03:04,120 --> 00:03:06,370
shelf fetch this item then you pay for

73
00:03:06,370 --> 00:03:07,690
it and you get to walk out of the

74
00:03:07,690 --> 00:03:10,900
warehouse with that item now in order to

75
00:03:10,900 --> 00:03:12,849
make that into an SQL injection attack

76
00:03:12,849 --> 00:03:14,650
we need to be more specific and we need

77
00:03:14,650 --> 00:03:16,840
to manipulate it a little bit more so

78
00:03:16,840 --> 00:03:19,329
what we'd say for that is to the robot

79
00:03:19,329 --> 00:03:21,340
please go to the row two shelf three

80
00:03:21,340 --> 00:03:24,010
fetch me a laptop then go back to your

81
00:03:24,010 --> 00:03:26,200
window pass me the laptop and forget

82
00:03:26,200 --> 00:03:28,060
that you ever forget that any of this

83
00:03:28,060 --> 00:03:31,390
ever happened now you have the laptop in

84
00:03:31,390 --> 00:03:32,739
hand you get to walk out at the

85
00:03:32,739 --> 00:03:34,209
warehouse without having to pay for it

86
00:03:34,209 --> 00:03:38,079
everything's really good so now for the

87
00:03:38,079 --> 00:03:41,579
benefits of an SQL injection is

88
00:03:41,579 --> 00:03:44,380
authentication bypass which is great you

89
00:03:44,380 --> 00:03:46,420
can sell credentials which will make you

90
00:03:46,420 --> 00:03:48,160
money its dodgy but it'll make you money

91
00:03:48,160 --> 00:03:51,459
selling Wi-Fi and best of all free Wi-Fi

92
00:03:51,459 --> 00:03:53,170
because we never want to pay for Wi-Fi

93
00:03:53,170 --> 00:03:57,310
again now for the remediations of SQL

94
00:03:57,310 --> 00:03:59,829
injection so the first one would

95
00:03:59,829 --> 00:04:02,350
probably be not to load user input

96
00:04:02,350 --> 00:04:05,170
directly into the SQL query but instead

97
00:04:05,170 --> 00:04:07,989
using parameters queries this is because

98
00:04:07,989 --> 00:04:09,730
string concatenation actually leaves you

99
00:04:09,730 --> 00:04:12,549
vulnerable to SQL injection the next one

100
00:04:12,549 --> 00:04:15,340
would be ORM frameworks they provide us

101
00:04:15,340 --> 00:04:17,470
function they provide functions for us

102
00:04:17,470 --> 00:04:19,389
to interact with different objects in a

103
00:04:19,389 --> 00:04:21,370
simple manner they provide us with a

104
00:04:21,370 --> 00:04:22,930
certain level of security to each of the

105
00:04:22,930 --> 00:04:25,090
functions to we thoroughly recommend

106
00:04:25,090 --> 00:04:27,580
using them in their proper and

107
00:04:27,580 --> 00:04:29,530
and away unfortunately they're not

108
00:04:29,530 --> 00:04:32,650
stupid poof my favorite Orem framework

109
00:04:32,650 --> 00:04:36,400
would probably be cakephp now moving on

110
00:04:36,400 --> 00:04:38,560
to infrastructure attacks so the first

111
00:04:38,560 --> 00:04:41,199
first one we're gonna look at is media

112
00:04:41,199 --> 00:04:44,770
access control or Mack spoofing so for

113
00:04:44,770 --> 00:04:46,900
that I'm first actually gonna explain

114
00:04:46,900 --> 00:04:49,599
what Nick or network interface card is

115
00:04:49,599 --> 00:04:52,870
so every adapter that connects to a

116
00:04:52,870 --> 00:04:54,879
network and can send and receive packets

117
00:04:54,879 --> 00:04:56,860
is a NIC the reason for for explaining

118
00:04:56,860 --> 00:04:59,710
that is Mac is a unique identifier for

119
00:04:59,710 --> 00:05:02,500
Nick and spoofing is basically like a

120
00:05:02,500 --> 00:05:04,000
spy disguise when you're trying to

121
00:05:04,000 --> 00:05:06,190
disguise yourself to look like something

122
00:05:06,190 --> 00:05:08,229
or someone else if you put those two

123
00:05:08,229 --> 00:05:10,120
concepts together you get Mac's roofing

124
00:05:10,120 --> 00:05:12,190
which basically means you're disguising

125
00:05:12,190 --> 00:05:13,389
yourself to look like a different MAC

126
00:05:13,389 --> 00:05:16,990
address now for the attack of Mac

127
00:05:16,990 --> 00:05:20,050
spoofing so we would use Aero dump for

128
00:05:20,050 --> 00:05:22,300
wireless networks and Wireshark to sniff

129
00:05:22,300 --> 00:05:23,770
the network and identify MAC addresses

130
00:05:23,770 --> 00:05:26,830
that are in use we would then use Mac

131
00:05:26,830 --> 00:05:29,409
ginger with this command Mac changer -

132
00:05:29,409 --> 00:05:31,690
in the MAC address and the adapter name

133
00:05:31,690 --> 00:05:34,330
we would then continuously keep sending

134
00:05:34,330 --> 00:05:36,610
our packets the art packets are saying

135
00:05:36,610 --> 00:05:38,949
that we are that MAC address causing the

136
00:05:38,949 --> 00:05:40,779
kam table within the switch to overflow

137
00:05:40,779 --> 00:05:43,319
the switch then sends you the responses

138
00:05:43,319 --> 00:05:46,060
we then move on to using a curl command

139
00:05:46,060 --> 00:05:48,550
to specify the adapter and request a URL

140
00:05:48,550 --> 00:05:51,279
the command for that is curl dash dash

141
00:05:51,279 --> 00:05:54,430
interface the adapter name and the URL

142
00:05:54,430 --> 00:05:57,400
that you actually want to request some

143
00:05:57,400 --> 00:05:59,800
of the benefits from ex booting require

144
00:05:59,800 --> 00:06:01,569
you to abuse a whitelist

145
00:06:01,569 --> 00:06:04,089
abuse the whitelist and that way you can

146
00:06:04,089 --> 00:06:06,789
get authenticated access and also as

147
00:06:06,789 --> 00:06:09,310
seen in some research done by CJ white

148
00:06:09,310 --> 00:06:11,289
listed MAC addresses may provide higher

149
00:06:11,289 --> 00:06:12,729
bandwidth which can be quite beneficial

150
00:06:12,729 --> 00:06:15,129
if you want to maybe download something

151
00:06:15,129 --> 00:06:19,089
or if you want to play some games for

152
00:06:19,089 --> 00:06:22,930
the in remediation of Mac smoothing you

153
00:06:22,930 --> 00:06:24,729
would want to have a limited number of

154
00:06:24,729 --> 00:06:26,770
MAC addresses per physical port that

155
00:06:26,770 --> 00:06:29,039
would help and ensuring MAC addresses

156
00:06:29,039 --> 00:06:31,779
come from the expected physical port and

157
00:06:31,779 --> 00:06:34,750
not just some random one now we're going

158
00:06:34,750 --> 00:06:37,539
to move on to IP stealing so the way you

159
00:06:37,539 --> 00:06:39,940
would use IP stealing is you would wait

160
00:06:39,940 --> 00:06:41,230
and watch a why

161
00:06:41,230 --> 00:06:44,260
this a whitelisted IP and use it when

162
00:06:44,260 --> 00:06:46,750
it's not active or you could statically

163
00:06:46,750 --> 00:06:49,540
assign IP address and send lots of

164
00:06:49,540 --> 00:06:52,020
traffic gaining priority on that network

165
00:06:52,020 --> 00:06:55,270
during mediation for IP stealing would

166
00:06:55,270 --> 00:06:58,120
be to restrict the IP to a physical port

167
00:06:58,120 --> 00:07:00,400
and this would generally be done using a

168
00:07:00,400 --> 00:07:04,090
layer 3 switch now for credential

169
00:07:04,090 --> 00:07:06,640
stealing the way we would use credential

170
00:07:06,640 --> 00:07:08,800
stealing is again we would use era dunk

171
00:07:08,800 --> 00:07:10,750
for wireless networks a marsh shark -

172
00:07:10,750 --> 00:07:12,670
Network sniff and monitor the network

173
00:07:12,670 --> 00:07:14,830
for plaintext credentials these

174
00:07:14,830 --> 00:07:16,600
plaintext financials may give you access

175
00:07:16,600 --> 00:07:19,330
to the admin panel of the router or the

176
00:07:19,330 --> 00:07:20,770
captive portal which allows you to

177
00:07:20,770 --> 00:07:23,560
reconfigure it now some of the benefits

178
00:07:23,560 --> 00:07:25,720
for our IP stealing and credit stealin

179
00:07:25,720 --> 00:07:29,650
is again authentication by paws selling

180
00:07:29,650 --> 00:07:31,390
credentials dodgy but making money

181
00:07:31,390 --> 00:07:34,060
selling Wi-Fi and best of all free Wi-Fi

182
00:07:34,060 --> 00:07:35,650
because we never want to pay for Wi-Fi

183
00:07:35,650 --> 00:07:38,620
again and the remediation for credential

184
00:07:38,620 --> 00:07:40,780
stealing would number one be proper

185
00:07:40,780 --> 00:07:44,410
implementation of TLS using encrypted

186
00:07:44,410 --> 00:07:48,610
protocols only and lastly using a fully

187
00:07:48,610 --> 00:07:50,320
switched network so that people can't

188
00:07:50,320 --> 00:07:51,820
actually sniff each other within that

189
00:07:51,820 --> 00:07:55,540
network well that's it for me tag you're

190
00:07:55,540 --> 00:08:02,560
it thank you so I'm talking about secure

191
00:08:02,560 --> 00:08:05,440
shell tunneling or SSH tunneling so for

192
00:08:05,440 --> 00:08:07,390
people who don't know what SSH is it's

193
00:08:07,390 --> 00:08:09,310
basically a nice little protocol wrapped

194
00:08:09,310 --> 00:08:13,510
around a secure little like protocol and

195
00:08:13,510 --> 00:08:16,150
it's a set of rules that allow you to go

196
00:08:16,150 --> 00:08:19,300
and put yourself into another computer a

197
00:08:19,300 --> 00:08:22,360
remote computer and it allows you to run

198
00:08:22,360 --> 00:08:23,920
operating system commands within that

199
00:08:23,920 --> 00:08:26,530
computer it's it works really well and

200
00:08:26,530 --> 00:08:28,120
since it's encrypted it's a preferred

201
00:08:28,120 --> 00:08:30,100
method of communication for normal

202
00:08:30,100 --> 00:08:34,210
people it's used to fair bit in places

203
00:08:34,210 --> 00:08:36,460
like development environments and things

204
00:08:36,460 --> 00:08:39,940
like that so how you would generally use

205
00:08:39,940 --> 00:08:43,450
it is something like SSH - P say one

206
00:08:43,450 --> 00:08:44,800
three three seven or whatever port you

207
00:08:44,800 --> 00:08:46,990
want to connect to - I and then the

208
00:08:46,990 --> 00:08:48,550
certificate because well we're not

209
00:08:48,550 --> 00:08:50,170
ancient we're actually using certificate

210
00:08:50,170 --> 00:08:52,480
authentication this is security and then

211
00:08:52,480 --> 00:08:54,160
the username apt and then whatever IP

212
00:08:54,160 --> 00:08:55,130
address you want to use

213
00:08:55,130 --> 00:08:56,959
now the interesting thing is we can use

214
00:08:56,959 --> 00:09:00,199
this a to tunnel our traffic in through

215
00:09:00,199 --> 00:09:03,170
the SSH tunnel really simply since in C

216
00:09:03,170 --> 00:09:05,870
cryptid the admins who are actually

217
00:09:05,870 --> 00:09:08,089
monitoring the air-gap network that

218
00:09:08,089 --> 00:09:09,980
we're currently in I won't be able to

219
00:09:09,980 --> 00:09:11,839
see the exact traffic D ascending so

220
00:09:11,839 --> 00:09:13,279
you're free to do whatever you want as

221
00:09:13,279 --> 00:09:16,670
long as SSH is enabled we can use - D to

222
00:09:16,670 --> 00:09:18,860
do port forwarding and then pretty much

223
00:09:18,860 --> 00:09:20,870
configure the browser to use a socks

224
00:09:20,870 --> 00:09:22,970
proxy and then pipe all of its traffic

225
00:09:22,970 --> 00:09:25,250
through that specific porch nice and

226
00:09:25,250 --> 00:09:28,579
easy now some of the benefits of doing

227
00:09:28,579 --> 00:09:30,829
this is it's really simple to set up all

228
00:09:30,829 --> 00:09:32,660
you need is something like AWS at

229
00:09:32,660 --> 00:09:34,339
digitalocean who will actually set up

230
00:09:34,339 --> 00:09:35,990
the ssh configuration for you

231
00:09:35,990 --> 00:09:37,550
automatically it's encrypted

232
00:09:37,550 --> 00:09:39,589
communication so it's super simple and

233
00:09:39,589 --> 00:09:42,410
it's actually reasonably secure it's

234
00:09:42,410 --> 00:09:44,839
fast reliable because it's based on TCP

235
00:09:44,839 --> 00:09:47,630
and finally it's cheap if you do it on a

236
00:09:47,630 --> 00:09:49,009
small server it'll cost you like five

237
00:09:49,009 --> 00:09:51,880
dollars a month so I mean that's great

238
00:09:51,880 --> 00:09:55,220
but um now how can we actually remediate

239
00:09:55,220 --> 00:09:57,350
this we actually sat down for a fair bit

240
00:09:57,350 --> 00:09:58,459
of time trying to find a good

241
00:09:58,459 --> 00:10:01,040
remediation for this thing it turns out

242
00:10:01,040 --> 00:10:03,170
my initial thought was why don't we just

243
00:10:03,170 --> 00:10:06,290
banned port 22 but yeah as simply as we

244
00:10:06,290 --> 00:10:08,180
said before we can just specify a

245
00:10:08,180 --> 00:10:10,069
different port put SSH on that port and

246
00:10:10,069 --> 00:10:12,589
then go and communicate so the answer

247
00:10:12,589 --> 00:10:14,120
that we came up with was using something

248
00:10:14,120 --> 00:10:16,100
like deep packet inspection to go

249
00:10:16,100 --> 00:10:18,139
through and monitor the traffic and try

250
00:10:18,139 --> 00:10:20,209
to identify as I say traffic we go

251
00:10:20,209 --> 00:10:21,949
through all of them our network logs

252
00:10:21,949 --> 00:10:24,290
find anything as a sage and then disable

253
00:10:24,290 --> 00:10:26,480
it right away that way it no longer goes

254
00:10:26,480 --> 00:10:29,810
third but how do we bypass things if we

255
00:10:29,810 --> 00:10:31,639
don't have SSH so we're going to move on

256
00:10:31,639 --> 00:10:33,050
to our next method and try to find

257
00:10:33,050 --> 00:10:36,800
different bypasses so for next we have

258
00:10:36,800 --> 00:10:39,170
DNS tunneling or domain name service

259
00:10:39,170 --> 00:10:41,810
tunneling so domain name service is

260
00:10:41,810 --> 00:10:44,029
basically something like the phonebook

261
00:10:44,029 --> 00:10:45,709
for the internet so what happens in a

262
00:10:45,709 --> 00:10:48,199
traditional phone book basically you

263
00:10:48,199 --> 00:10:49,759
have a name and you have a phone number

264
00:10:49,759 --> 00:10:52,880
nice and simple they correlate in diff

265
00:10:52,880 --> 00:10:55,970
in DNS you have a domain name and the IP

266
00:10:55,970 --> 00:10:58,430
address it correlates true in the most

267
00:10:58,430 --> 00:11:00,769
simplistic manner now something you need

268
00:11:00,769 --> 00:11:02,870
to know it for DNS is it's unencrypted

269
00:11:02,870 --> 00:11:04,939
communication so anyone can monitor what

270
00:11:04,939 --> 00:11:07,160
you're doing it's not reliable because

271
00:11:07,160 --> 00:11:08,720
it uses unordered UDP

272
00:11:08,720 --> 00:11:11,870
packets so it's not the best but the

273
00:11:11,870 --> 00:11:13,370
main thing that we're stressing here is

274
00:11:13,370 --> 00:11:14,959
even though it's not perfectly reliable

275
00:11:14,959 --> 00:11:18,019
it definitely is unrestricted and a

276
00:11:18,019 --> 00:11:20,720
majority of networks admins forget to

277
00:11:20,720 --> 00:11:23,329
block DNS clearly because they assume

278
00:11:23,329 --> 00:11:25,399
their users really needed to go to

279
00:11:25,399 --> 00:11:28,550
things like Google calm or youtube.com

280
00:11:28,550 --> 00:11:29,329
or things like that

281
00:11:29,329 --> 00:11:32,899
so usually DNS is quite open to everyone

282
00:11:32,899 --> 00:11:34,730
and you can do almost anything you want

283
00:11:34,730 --> 00:11:36,740
with it so we came up with the simple

284
00:11:36,740 --> 00:11:40,339
demo of how DNS tunneling can work here

285
00:11:40,339 --> 00:11:41,779
we're actually going to go through and

286
00:11:41,779 --> 00:11:44,509
try to simply curl google.com and you'll

287
00:11:44,509 --> 00:11:46,129
see that it doesn't work quite simply

288
00:11:46,129 --> 00:11:48,470
next we're going to set up what we have

289
00:11:48,470 --> 00:11:51,949
another box outside which is on AWS and

290
00:11:51,949 --> 00:11:54,019
we basically go and try to do everything

291
00:11:54,019 --> 00:11:54,910
from there

292
00:11:54,910 --> 00:11:57,769
so here we can see we're waiting it

293
00:11:57,769 --> 00:12:00,860
times out nothing great so we'll head

294
00:12:00,860 --> 00:12:03,319
over to our AWS books and we have serial

295
00:12:03,319 --> 00:12:08,110
iodine D R and then 10.00

296
00:12:08,110 --> 00:12:12,110
is and test comm the domain name inside

297
00:12:12,110 --> 00:12:14,779
our authoritative domain name sir DNS

298
00:12:14,779 --> 00:12:16,850
server so iodine is basically the

299
00:12:16,850 --> 00:12:19,040
software using we need sudo because we

300
00:12:19,040 --> 00:12:21,529
actually set up a DNS listener on the

301
00:12:21,529 --> 00:12:23,899
box here we enter in our own password

302
00:12:23,899 --> 00:12:26,420
nice and easy and it starts listening

303
00:12:26,420 --> 00:12:28,579
for anything related to chess comp so it

304
00:12:28,579 --> 00:12:30,439
can do its interactions now we're going

305
00:12:30,439 --> 00:12:32,689
to head over to the box inside the

306
00:12:32,689 --> 00:12:34,879
air-gapped Network note this is a

307
00:12:34,879 --> 00:12:36,879
simulation so you know it's not perfect

308
00:12:36,879 --> 00:12:40,250
we have iodine client and then we give

309
00:12:40,250 --> 00:12:42,439
it the public IP address and the domain

310
00:12:42,439 --> 00:12:43,750
names that were actually connecting to

311
00:12:43,750 --> 00:12:46,819
so here we simply just go in pop in our

312
00:12:46,819 --> 00:12:49,100
password and we now look at the

313
00:12:49,100 --> 00:12:51,019
different fragment sizes so here what

314
00:12:51,019 --> 00:12:52,129
we're actually doing is trying to find

315
00:12:52,129 --> 00:12:54,649
the optimal size of a packet so that we

316
00:12:54,649 --> 00:12:56,629
can get across the most amount of data

317
00:12:56,629 --> 00:12:58,790
to the server in the most efficient way

318
00:12:58,790 --> 00:13:01,430
yet the most reliable way and here we

319
00:13:01,430 --> 00:13:02,629
can see that we've actually got the

320
00:13:02,629 --> 00:13:05,360
perfect size which is 1174 now we're

321
00:13:05,360 --> 00:13:07,370
going to run if conflict to see whether

322
00:13:07,370 --> 00:13:08,959
the adapter is properly being set up

323
00:13:08,959 --> 00:13:11,329
here you can see DNS 0 with the pub

324
00:13:11,329 --> 00:13:16,220
private IP address 10.0.0.0 we do with

325
00:13:16,220 --> 00:13:17,959
that maybe we're going to actually try

326
00:13:17,959 --> 00:13:20,509
to go and ssh into the box the previous

327
00:13:20,509 --> 00:13:21,210
box

328
00:13:21,210 --> 00:13:23,550
so we're gonna say chai with our PIM and

329
00:13:23,550 --> 00:13:28,050
then go into Kendall 0.021 and perfectly

330
00:13:28,050 --> 00:13:30,420
we've logged into our AWS books now

331
00:13:30,420 --> 00:13:33,840
let's try doing curl google calm as we

332
00:13:33,840 --> 00:13:36,360
couldn't do a previously now we can in

333
00:13:36,360 --> 00:13:38,700
other words we've now basically gone

334
00:13:38,700 --> 00:13:43,020
through used DNS SSH and we've bypassed

335
00:13:43,020 --> 00:13:47,430
everything nice and easy so some of the

336
00:13:47,430 --> 00:13:49,740
benefits of actually doing this are

337
00:13:49,740 --> 00:13:52,440
things like the fact that a VPS is

338
00:13:52,440 --> 00:13:54,270
really cheap yet again five dollars a

339
00:13:54,270 --> 00:13:56,070
month it's simple to set up because all

340
00:13:56,070 --> 00:14:00,510
you need is SSH and iodine it's

341
00:14:00,510 --> 00:14:02,460
encrypted communications because even

342
00:14:02,460 --> 00:14:04,520
though you're using DNS you're still

343
00:14:04,520 --> 00:14:07,890
doing an SSH terminal through that it's

344
00:14:07,890 --> 00:14:10,020
usually unrestricted so it's great

345
00:14:10,020 --> 00:14:11,850
because people you know aren't looking

346
00:14:11,850 --> 00:14:15,360
out for it usually however one major

347
00:14:15,360 --> 00:14:17,550
flaw in it is it's not particularly

348
00:14:17,550 --> 00:14:19,590
reliable it's quite slow but oh well

349
00:14:19,590 --> 00:14:21,330
it's something at least you can download

350
00:14:21,330 --> 00:14:23,400
your payloads using it or export rate

351
00:14:23,400 --> 00:14:26,370
your data so some remediations that we

352
00:14:26,370 --> 00:14:27,900
came up with where you could actually

353
00:14:27,900 --> 00:14:30,840
tell anyone on your network that your

354
00:14:30,840 --> 00:14:32,640
well you could actually have policies

355
00:14:32,640 --> 00:14:35,070
and things set up for all SOPs or any

356
00:14:35,070 --> 00:14:37,590
computers actually touching your network

357
00:14:37,590 --> 00:14:41,190
stating that only um specific DNS

358
00:14:41,190 --> 00:14:43,920
servers are allowed to go um are allowed

359
00:14:43,920 --> 00:14:45,780
to be used so maybe something like

360
00:14:45,780 --> 00:14:48,600
8.8.8.8 google's or one one to one to

361
00:14:48,600 --> 00:14:48,780
one

362
00:14:48,780 --> 00:14:51,630
cloud flares are trusted and then

363
00:14:51,630 --> 00:14:53,880
they're allowed to go and use them

364
00:14:53,880 --> 00:14:56,010
otherwise nothing else is actually

365
00:14:56,010 --> 00:14:59,310
allowed so that's one great way of doing

366
00:14:59,310 --> 00:15:01,050
it however it's quite restrictive the

367
00:15:01,050 --> 00:15:02,760
other way that we came up with wasn't as

368
00:15:02,760 --> 00:15:05,220
good in my opinion but it's still a

369
00:15:05,220 --> 00:15:07,230
viable solution which is rate limiting

370
00:15:07,230 --> 00:15:10,290
the DNS queries so I can't see the

371
00:15:10,290 --> 00:15:12,270
reason why anyone would do probably like

372
00:15:12,270 --> 00:15:16,410
20 or 30 DNS calls per second if they're

373
00:15:16,410 --> 00:15:18,090
doing that something dodgy is probably

374
00:15:18,090 --> 00:15:20,340
going on um so instead you can actually

375
00:15:20,340 --> 00:15:22,290
just rate them at the amount saying hey

376
00:15:22,290 --> 00:15:25,140
I can see someone doing 10 queries but

377
00:15:25,140 --> 00:15:27,330
not 15 so we'll cut it off at 12 and

378
00:15:27,330 --> 00:15:29,910
after that it slows down saying okay now

379
00:15:29,910 --> 00:15:31,320
it's gonna go a little bit slower so you

380
00:15:31,320 --> 00:15:33,480
can't exit rate as much data using the

381
00:15:33,480 --> 00:15:34,960
DNS tunneling

382
00:15:34,960 --> 00:15:39,170
um so that's one way but what happens if

383
00:15:39,170 --> 00:15:40,940
DNS is a little bit more restricted in

384
00:15:40,940 --> 00:15:42,800
this case we'll look into maybe

385
00:15:42,800 --> 00:15:44,780
something like subdomain service

386
00:15:44,780 --> 00:15:47,090
tunneling so subdomain service tunneling

387
00:15:47,090 --> 00:15:48,650
is a nice little fancy way of saying

388
00:15:48,650 --> 00:15:50,810
using white listed domains that are

389
00:15:50,810 --> 00:15:53,210
overly scoped so imagine having

390
00:15:53,210 --> 00:15:55,310
something like Google ads or ads being

391
00:15:55,310 --> 00:15:57,140
served from an s3 bucket now this is

392
00:15:57,140 --> 00:15:58,670
actually something we learned from a Def

393
00:15:58,670 --> 00:16:00,860
Con talk so hats off to them for finding

394
00:16:00,860 --> 00:16:02,600
us it's a really cool thing but

395
00:16:02,600 --> 00:16:05,510
basically imagine someone are serving

396
00:16:05,510 --> 00:16:07,760
all of their ads from an s3 bucket

397
00:16:07,760 --> 00:16:10,550
they've now whitelisted all that Amazon

398
00:16:10,550 --> 00:16:14,180
AWS com so fun lesson or in fact is ec2

399
00:16:14,180 --> 00:16:16,610
instances every single ec2 instance has

400
00:16:16,610 --> 00:16:20,330
a public domain name a something like

401
00:16:20,330 --> 00:16:23,180
ec2 and then hyphenated IP address not

402
00:16:23,180 --> 00:16:24,920
Amazon AWS home or something like that

403
00:16:24,920 --> 00:16:27,250
another hundred percent sure but yet

404
00:16:27,250 --> 00:16:30,050
basically that also falls under the same

405
00:16:30,050 --> 00:16:33,560
TLD as s3 buckets so if you've gone and

406
00:16:33,560 --> 00:16:36,440
whitelisted all out of Amazon AWS com

407
00:16:36,440 --> 00:16:38,780
now we can just spin up a simple ec2

408
00:16:38,780 --> 00:16:40,640
instance and SSH in because it's

409
00:16:40,640 --> 00:16:42,920
whitelisted and we no longer care so

410
00:16:42,920 --> 00:16:44,840
that's a great way of bypassing things

411
00:16:44,840 --> 00:16:47,210
and it does actually help a lot for some

412
00:16:47,210 --> 00:16:49,310
air-gapped networks where things are a

413
00:16:49,310 --> 00:16:51,790
little bit more challenging than normal

414
00:16:51,790 --> 00:16:54,800
so a certain remediation that we came up

415
00:16:54,800 --> 00:16:56,900
with was hey why don't you just stop

416
00:16:56,900 --> 00:16:59,570
alone well cards it could be something

417
00:16:59,570 --> 00:17:01,850
as simple as either saying hey you can

418
00:17:01,850 --> 00:17:04,970
only use this specific s3 bucket that

419
00:17:04,970 --> 00:17:06,709
would remediated majority of the issue

420
00:17:06,709 --> 00:17:08,720
or constricting it saying hey you can

421
00:17:08,720 --> 00:17:10,819
only use s3 buckets from within this

422
00:17:10,819 --> 00:17:13,339
region like ap south west

423
00:17:13,339 --> 00:17:15,230
sorry south east one or something like

424
00:17:15,230 --> 00:17:19,060
that the other thing you can do is using

425
00:17:19,060 --> 00:17:21,560
monitoring tools for networks and trying

426
00:17:21,560 --> 00:17:22,939
to build rules around it so you can

427
00:17:22,939 --> 00:17:24,800
either catch on to different things that

428
00:17:24,800 --> 00:17:26,510
are currently being exploited or you

429
00:17:26,510 --> 00:17:28,040
know just anything around its that

430
00:17:28,040 --> 00:17:31,250
entire section I am aware that these

431
00:17:31,250 --> 00:17:32,900
aren't perfectly foolproof but hey

432
00:17:32,900 --> 00:17:34,430
they're good enough to at least get you

433
00:17:34,430 --> 00:17:38,270
by so what happens if you actually don't

434
00:17:38,270 --> 00:17:40,370
have a subdomain that you can actually

435
00:17:40,370 --> 00:17:42,830
tunnel through so we came up with a fun

436
00:17:42,830 --> 00:17:45,230
new way of doing things and we call it

437
00:17:45,230 --> 00:17:47,900
outlook tunneling so this actually came

438
00:17:47,900 --> 00:17:48,820
from a fun little

439
00:17:48,820 --> 00:17:51,639
we had when we were stuck inside a sock

440
00:17:51,639 --> 00:17:53,980
and we're trying to figure out ways of

441
00:17:53,980 --> 00:17:55,299
downloading our payloads

442
00:17:55,299 --> 00:17:58,240
but the sock obviously trying to lock

443
00:17:58,240 --> 00:17:59,980
everything everything down and making

444
00:17:59,980 --> 00:18:02,169
sure we can't axle trade information

445
00:18:02,169 --> 00:18:05,380
said no you can't go and download your

446
00:18:05,380 --> 00:18:07,149
payloads no you can't send information

447
00:18:07,149 --> 00:18:07,990
outside

448
00:18:07,990 --> 00:18:10,450
they even had DNS lock down quite a lot

449
00:18:10,450 --> 00:18:14,019
but we found while using our normal you

450
00:18:14,019 --> 00:18:16,659
know systems that office 365 was still

451
00:18:16,659 --> 00:18:18,370
active we were still able to send and

452
00:18:18,370 --> 00:18:20,919
receive emails from my colleagues so

453
00:18:20,919 --> 00:18:23,409
what did we do instead we are pretty

454
00:18:23,409 --> 00:18:25,870
much sat down at home and wrote up a

455
00:18:25,870 --> 00:18:28,210
quick script the script will go and set

456
00:18:28,210 --> 00:18:30,820
up an IMAP listener and SMTP so would

457
00:18:30,820 --> 00:18:32,830
receive the emails reply and communicate

458
00:18:32,830 --> 00:18:35,019
to everything in one simple single hit

459
00:18:35,019 --> 00:18:37,509
so here's a bit of a flow of how it

460
00:18:37,509 --> 00:18:38,250
actually works

461
00:18:38,250 --> 00:18:40,840
we've send an email to the office 365

462
00:18:40,840 --> 00:18:43,570
servers it would send via SMTP to the

463
00:18:43,570 --> 00:18:45,220
ruffle dot live for our own mail server

464
00:18:45,220 --> 00:18:47,919
then we'd receive the email into our

465
00:18:47,919 --> 00:18:50,409
email into our web proxy which are then

466
00:18:50,409 --> 00:18:52,480
go and perform the entire request say

467
00:18:52,480 --> 00:18:53,860
hypothetically disney.com

468
00:18:53,860 --> 00:18:56,799
it'll send the email back to or send the

469
00:18:56,799 --> 00:18:59,740
actual zip back to ruffle de life send

470
00:18:59,740 --> 00:19:02,889
it using SMTP back to office 365 and

471
00:19:02,889 --> 00:19:05,080
then back to us where we're able to do

472
00:19:05,080 --> 00:19:06,879
whatever we want however we want and

473
00:19:06,879 --> 00:19:10,179
yeah it's nice simple and easy now I

474
00:19:10,179 --> 00:19:11,889
understand that that may be slightly

475
00:19:11,889 --> 00:19:14,370
confusing so we do have a demo for you

476
00:19:14,370 --> 00:19:17,470
now the demo is quite simple we start

477
00:19:17,470 --> 00:19:20,080
off with Outlook com we have an Outlook

478
00:19:20,080 --> 00:19:22,570
client working everything's fine and now

479
00:19:22,570 --> 00:19:23,799
we're gonna go over and check out the

480
00:19:23,799 --> 00:19:26,320
Linux system here we have the code so we

481
00:19:26,320 --> 00:19:28,870
start off with processing the email

482
00:19:28,870 --> 00:19:30,220
where we actually walk through every

483
00:19:30,220 --> 00:19:32,409
single attachment inside the email going

484
00:19:32,409 --> 00:19:33,850
through trying to find text planes so

485
00:19:33,850 --> 00:19:35,470
that we can find the actual text inside

486
00:19:35,470 --> 00:19:38,230
it then we parse the actual URL outside

487
00:19:38,230 --> 00:19:40,419
of it and then pipe it into a system

488
00:19:40,419 --> 00:19:42,190
command now I'm very well aware that

489
00:19:42,190 --> 00:19:44,230
this is vulnerable to command injection

490
00:19:44,230 --> 00:19:47,019
but oh well we did this is just a hack

491
00:19:47,019 --> 00:19:50,710
put together for fun so deal with it and

492
00:19:50,710 --> 00:19:52,600
yeah basically we send out the email so

493
00:19:52,600 --> 00:19:54,100
this is the email sending script we

494
00:19:54,100 --> 00:19:58,929
basically use SMTP encrypted to go and

495
00:19:58,929 --> 00:20:01,419
do everything and pretty much just

496
00:20:01,419 --> 00:20:02,530
attach a nice

497
00:20:02,530 --> 00:20:04,600
zip file and then send it back to

498
00:20:04,600 --> 00:20:06,730
ourselves so it's a very very simple

499
00:20:06,730 --> 00:20:09,700
script nothing very complicated and it

500
00:20:09,700 --> 00:20:11,680
works perfectly now we're gonna look at

501
00:20:11,680 --> 00:20:13,900
the cloning scripture so that I can give

502
00:20:13,900 --> 00:20:15,340
you an idea of how we actually did the

503
00:20:15,340 --> 00:20:17,500
full cleaning so we quickly just made a

504
00:20:17,500 --> 00:20:20,170
simple directory for downloads we used

505
00:20:20,170 --> 00:20:22,150
HT track which is a very old piece of

506
00:20:22,150 --> 00:20:24,490
software to go and actually make a full

507
00:20:24,490 --> 00:20:27,040
working copy of the website and then we

508
00:20:27,040 --> 00:20:28,780
zip it up and then send it back to

509
00:20:28,780 --> 00:20:30,280
ourselves and remove the unwanted files

510
00:20:30,280 --> 00:20:33,040
HT track actually proved very very

511
00:20:33,040 --> 00:20:35,920
useful for this because um the other

512
00:20:35,920 --> 00:20:37,690
tools weren't actually performing the

513
00:20:37,690 --> 00:20:40,840
way I was hoping for them to perform so

514
00:20:40,840 --> 00:20:44,050
let's kick off the mailing list the mail

515
00:20:44,050 --> 00:20:46,740
listener to see how things actually work

516
00:20:46,740 --> 00:20:49,210
here we can see it's listening all the

517
00:20:49,210 --> 00:20:50,200
authentications gone through

518
00:20:50,200 --> 00:20:51,400
everything's perfect

519
00:20:51,400 --> 00:20:53,650
now we're gonna quickly open up a new

520
00:20:53,650 --> 00:20:57,070
email will email bypass a truffled at

521
00:20:57,070 --> 00:21:00,340
life since that it's a test email so

522
00:21:00,340 --> 00:21:03,490
well it is big deal and we'll pop in my

523
00:21:03,490 --> 00:21:13,510
website or Doug's urn and hit Send now

524
00:21:13,510 --> 00:21:16,150
we're gonna move over to the Linux box

525
00:21:16,150 --> 00:21:18,160
again and we're gonna watch until it

526
00:21:18,160 --> 00:21:20,470
finds the email so it's founded it's

527
00:21:20,470 --> 00:21:22,480
done the clone it zipped it up again and

528
00:21:22,480 --> 00:21:24,010
it sent it back to me

529
00:21:24,010 --> 00:21:25,680
our within the matter of seconds here

530
00:21:25,680 --> 00:21:28,360
you can see the emails back to us really

531
00:21:28,360 --> 00:21:30,880
simply really easily and now we're

532
00:21:30,880 --> 00:21:34,350
opening up the download zip saving it

533
00:21:34,350 --> 00:21:41,860
eventually on our desktop as you can see

534
00:21:41,860 --> 00:21:44,290
I take time to navigate around a Window

535
00:21:44,290 --> 00:21:44,680
System

536
00:21:44,680 --> 00:21:46,990
I mean Linux is the better way of doing

537
00:21:46,990 --> 00:21:50,080
things but I will then we pretty much

538
00:21:50,080 --> 00:21:52,090
use a graphical interface to go and

539
00:21:52,090 --> 00:21:57,820
unzip the Downloads folder go into the

540
00:21:57,820 --> 00:22:01,300
Downloads folder and attempt to find the

541
00:22:01,300 --> 00:22:03,659
website

542
00:22:07,690 --> 00:22:11,780
and here we have a fully functional

543
00:22:11,780 --> 00:22:15,050
version of the exam website here you can

544
00:22:15,050 --> 00:22:17,240
see the JavaScript is still intact the

545
00:22:17,240 --> 00:22:19,010
CSS is perfectly intact and we can do

546
00:22:19,010 --> 00:22:20,720
pretty much anything and everything we

547
00:22:20,720 --> 00:22:22,940
would be able to do if we had the full

548
00:22:22,940 --> 00:22:26,120
website active this really nice so some

549
00:22:26,120 --> 00:22:28,040
of the benefits of this is the fact that

550
00:22:28,040 --> 00:22:31,130
it's custom really does help a lot it

551
00:22:31,130 --> 00:22:32,690
basically means that when someone's

552
00:22:32,690 --> 00:22:35,660
looking for you know certain ways to

553
00:22:35,660 --> 00:22:37,610
detect each of these things we no longer

554
00:22:37,610 --> 00:22:39,680
have to care because they're less likely

555
00:22:39,680 --> 00:22:41,750
to find them it's really cool and was

556
00:22:41,750 --> 00:22:43,610
really fun to make it's cheap because

557
00:22:43,610 --> 00:22:45,860
you need a five dollar VPS and the

558
00:22:45,860 --> 00:22:47,180
domain name so you could do it in under

559
00:22:47,180 --> 00:22:50,480
ten dollars and it's pretty simple to

560
00:22:50,480 --> 00:22:52,180
set up once you have Python down path

561
00:22:52,180 --> 00:22:54,860
sir remediations we found that it's

562
00:22:54,860 --> 00:22:56,180
actually pretty hard to remediate this

563
00:22:56,180 --> 00:22:57,680
purely because it's a of

564
00:22:57,680 --> 00:23:00,800
craziness and you know you have to

565
00:23:00,800 --> 00:23:02,210
actually get around different rules so

566
00:23:02,210 --> 00:23:04,610
it's quite custom her different way of

567
00:23:04,610 --> 00:23:05,320
doing things

568
00:23:05,320 --> 00:23:08,510
rate limiting will help but it won't be

569
00:23:08,510 --> 00:23:11,780
the only solution but one of the major

570
00:23:11,780 --> 00:23:13,250
things that we wanted to bring into this

571
00:23:13,250 --> 00:23:15,680
talk is the fact that the opportunities

572
00:23:15,680 --> 00:23:18,560
for bypassing things are endless you can

573
00:23:18,560 --> 00:23:20,900
have things like just like we used Skype

574
00:23:20,900 --> 00:23:22,700
let's say just like we use Outlook we

575
00:23:22,700 --> 00:23:24,170
can use Skype link or whatever they're

576
00:23:24,170 --> 00:23:26,750
calling it now that could also be a

577
00:23:26,750 --> 00:23:29,540
whitelist a tool basically anything with

578
00:23:29,540 --> 00:23:31,970
an API that allows you to access and

579
00:23:31,970 --> 00:23:34,280
read things so hypothetically it could

580
00:23:34,280 --> 00:23:35,510
be something like JIRA we've done a

581
00:23:35,510 --> 00:23:37,900
non-0 before where you can listen and

582
00:23:37,900 --> 00:23:40,520
find new JIRA tickets as they're coming

583
00:23:40,520 --> 00:23:43,910
in using the API and then read certain

584
00:23:43,910 --> 00:23:46,340
parts certain information out and then

585
00:23:46,340 --> 00:23:48,860
reply with a file attachment and that's

586
00:23:48,860 --> 00:23:51,650
it that has now become your whitelisted

587
00:23:51,650 --> 00:23:54,050
API proxy really simple and you can use

588
00:23:54,050 --> 00:23:55,910
JIRA for it you could literally do it

589
00:23:55,910 --> 00:23:57,410
with anything where you have a

590
00:23:57,410 --> 00:23:59,930
programmatic access and making it simple

591
00:23:59,930 --> 00:24:04,280
and very very useful just to give you a

592
00:24:04,280 --> 00:24:05,720
quick rundown of everything we've gone

593
00:24:05,720 --> 00:24:07,820
through today we've talked about

594
00:24:07,820 --> 00:24:09,500
different attack methods different

595
00:24:09,500 --> 00:24:11,930
vectors for breaking through different

596
00:24:11,930 --> 00:24:14,620
types of security and doing whatever and

597
00:24:14,620 --> 00:24:17,540
doing pretty much whatever we want with

598
00:24:17,540 --> 00:24:18,980
the system so we can accelerate

599
00:24:18,980 --> 00:24:22,120
information we can also you know

600
00:24:22,120 --> 00:24:24,110
download anything we want from the

601
00:24:24,110 --> 00:24:25,880
internet and making our lives a lot

602
00:24:25,880 --> 00:24:29,390
easier especially as pentesters benefits

603
00:24:29,390 --> 00:24:30,950
are pretty much endless if you're

604
00:24:30,950 --> 00:24:34,059
unrestricted you can do

605
00:24:39,480 --> 00:24:41,540
you

606
00:24:47,710 --> 00:24:51,670
it's a was premium presentation which as

607
00:24:51,670 --> 00:24:54,070
well I love all of the previous

608
00:24:54,070 --> 00:24:55,930
infection and and the small story about

609
00:24:55,930 --> 00:24:59,740
airport security it makes like still a

610
00:24:59,740 --> 00:25:01,420
little bit lighter I love a lot of the

611
00:25:01,420 --> 00:25:03,580
storytelling and on the storytelling

612
00:25:03,580 --> 00:25:06,460
subject can you can you tell any any

613
00:25:06,460 --> 00:25:07,360
funny story

614
00:25:07,360 --> 00:25:10,990
and then we without being maybe on a

615
00:25:10,990 --> 00:25:13,360
couple points from the talk but can you

616
00:25:13,360 --> 00:25:16,090
tell any funny story about being a pen

617
00:25:16,090 --> 00:25:19,180
tester that you came across so anything

618
00:25:19,180 --> 00:25:22,510
that you can share of course any

619
00:25:22,510 --> 00:25:25,000
anecdote or any any nice story that you

620
00:25:25,000 --> 00:25:28,780
can share oh yeah we've had some very

621
00:25:28,780 --> 00:25:30,910
interesting times I managed to

622
00:25:30,910 --> 00:25:32,250
accidentally take down an entire

623
00:25:32,250 --> 00:25:35,700
organization in the span of 17 seconds

624
00:25:35,700 --> 00:25:38,410
so I learned local attacks are quite

625
00:25:38,410 --> 00:25:41,740
critical things do change but in that

626
00:25:41,740 --> 00:25:44,590
same way I also learned that when you're

627
00:25:44,590 --> 00:25:46,420
sitting inside a sock where everything's

628
00:25:46,420 --> 00:25:49,420
most secure or supposed to be it's not

629
00:25:49,420 --> 00:25:51,370
always so you can also exit rate

630
00:25:51,370 --> 00:25:52,690
information and do almost anything you

631
00:25:52,690 --> 00:25:55,270
want pretty quickly so yeah it's it's

632
00:25:55,270 --> 00:25:58,060
it's been a very fun experience but as a

633
00:25:58,060 --> 00:25:59,860
pen tester do you feel the pain for the

634
00:25:59,860 --> 00:26:02,080
so cannabis during a pen test at being

635
00:26:02,080 --> 00:26:05,350
on tippy-toes or you just go full-on and

636
00:26:05,350 --> 00:26:10,210
saying I'm here to actually record it's

637
00:26:10,210 --> 00:26:12,670
a bit of birth sometimes it's our job to

638
00:26:12,670 --> 00:26:15,550
wreak havoc and not care but in other

639
00:26:15,550 --> 00:26:18,130
times it's yeah we have to take a quiet

640
00:26:18,130 --> 00:26:21,040
carefully and make sure that we're you

641
00:26:21,040 --> 00:26:22,660
know not detected sometimes they know

642
00:26:22,660 --> 00:26:24,520
we're there but we're supposed to not be

643
00:26:24,520 --> 00:26:26,770
able to be detected so at times we do

644
00:26:26,770 --> 00:26:28,660
have to be quite quiet which it makes

645
00:26:28,660 --> 00:26:31,600
the job a little bit less fun but also

646
00:26:31,600 --> 00:26:33,250
it does make a quite fun when you

647
00:26:33,250 --> 00:26:35,740
actually get out fruit out of it without

648
00:26:35,740 --> 00:26:38,860
anyone finding out now I love I love the

649
00:26:38,860 --> 00:26:40,720
fact that you gone through fro from

650
00:26:40,720 --> 00:26:43,120
network all the way up I haven't seen a

651
00:26:43,120 --> 00:26:44,800
lot of exploits going through the

652
00:26:44,800 --> 00:26:46,570
network with the oil exploiting the DNS

653
00:26:46,570 --> 00:26:49,900
I know that a lot of expectation are

654
00:26:49,900 --> 00:26:52,450
using it but not a lot of exploits in

655
00:26:52,450 --> 00:26:54,850
Def Con I have shown that that debt of

656
00:26:54,850 --> 00:26:57,130
Bret all the way to the code appreciate

657
00:26:57,130 --> 00:26:58,630
the fight also you gone through the code

658
00:26:58,630 --> 00:27:01,539
so thank you very much very talk my shed

659
00:27:01,539 --> 00:27:03,220
you want to share something before we

660
00:27:03,220 --> 00:27:05,679
close the talk any advice for who's

661
00:27:05,679 --> 00:27:07,629
starting in pen test me before the photo

662
00:27:07,629 --> 00:27:11,109
here and then we can close uh well I'm

663
00:27:11,109 --> 00:27:12,460
kind of starting out in pen testing

664
00:27:12,460 --> 00:27:13,749
right now as well because I'm currently

665
00:27:13,749 --> 00:27:17,259
in university so mainly I get tips from

666
00:27:17,259 --> 00:27:18,639
our brother every now again which is

667
00:27:18,639 --> 00:27:21,190
great but yeah just diving headfirst

668
00:27:21,190 --> 00:27:25,210
helps a lot it's a really vast thing you

669
00:27:25,210 --> 00:27:27,249
can learn so much and just finding

670
00:27:27,249 --> 00:27:29,590
something one because cybersecurity is a

671
00:27:29,590 --> 00:27:31,359
very broad term there's so much going on

672
00:27:31,359 --> 00:27:33,700
in it you can do forensics you can

673
00:27:33,700 --> 00:27:35,320
depend testing and so much more so just

674
00:27:35,320 --> 00:27:37,269
finding one of those that you're really

675
00:27:37,269 --> 00:27:38,649
passionate about and then running with

676
00:27:38,649 --> 00:27:42,159
it fantastic thank you very much guys I

677
00:27:42,159 --> 00:27:45,009
really appreciate the talk yeah thank

678
00:27:45,009 --> 00:27:48,869
you thank you

