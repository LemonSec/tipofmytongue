1
00:00:00,000 --> 00:00:02,720
hi my name is omar and i'm really happy

2
00:00:02,720 --> 00:00:04,000
to be here

3
00:00:04,000 --> 00:00:07,919
and i saw i think it was yesterday

4
00:00:07,919 --> 00:00:10,559
all the money we were able to donate so

5
00:00:10,559 --> 00:00:11,280
far

6
00:00:11,280 --> 00:00:13,759
to world health organization so you

7
00:00:13,759 --> 00:00:15,839
shout out to old

8
00:00:15,839 --> 00:00:18,480
to everyone who donald and help us make

9
00:00:18,480 --> 00:00:20,800
the world a bit safer

10
00:00:20,800 --> 00:00:22,800
i do hope that at some point we'll have

11
00:00:22,800 --> 00:00:24,480
slide but

12
00:00:24,480 --> 00:00:28,400
i'm not very optimistic about that

13
00:00:28,840 --> 00:00:32,000
um so continuous hacking this is what i

14
00:00:32,000 --> 00:00:34,239
wanted to talk about today

15
00:00:34,239 --> 00:00:38,399
um and it's a bit an interesting

16
00:00:38,399 --> 00:00:41,680
talk name and to explain why

17
00:00:41,680 --> 00:00:44,879
we need continuous hacking let's start

18
00:00:44,879 --> 00:00:46,399
with

19
00:00:46,399 --> 00:00:50,239
well we can call it funny

20
00:00:51,039 --> 00:00:53,680
in israel we had an election like two

21
00:00:53,680 --> 00:00:55,600
months ago

22
00:00:55,600 --> 00:00:58,399
and the company does something that does

23
00:00:58,399 --> 00:00:59,440
something that could be

24
00:00:59,440 --> 00:01:02,160
smart they give private companies access

25
00:01:02,160 --> 00:01:02,480
to

26
00:01:02,480 --> 00:01:05,840
all the voter database and of course

27
00:01:05,840 --> 00:01:08,799
someone leaked this database and it

28
00:01:08,799 --> 00:01:10,880
makes even it gets even better because

29
00:01:10,880 --> 00:01:13,040
they were able to lick it three times

30
00:01:13,040 --> 00:01:14,799
not once

31
00:01:14,799 --> 00:01:16,799
yeah it's really amazing they were able

32
00:01:16,799 --> 00:01:18,080
to do something so

33
00:01:18,080 --> 00:01:22,240
bad but i'm not here to talk about

34
00:01:22,240 --> 00:01:24,479
what they did wrong i want to talk more

35
00:01:24,479 --> 00:01:25,439
about

36
00:01:25,439 --> 00:01:28,479
what we can do so such a mistake will

37
00:01:28,479 --> 00:01:29,920
not happen to us

38
00:01:29,920 --> 00:01:34,240
again um

39
00:01:34,240 --> 00:01:35,680
and i think this is the only thing we

40
00:01:35,680 --> 00:01:38,000
should take from stories like that

41
00:01:38,000 --> 00:01:41,040
because there are always mistake

42
00:01:41,040 --> 00:01:43,520
and such mistake could happen to us if

43
00:01:43,520 --> 00:01:44,320
we're not

44
00:01:44,320 --> 00:01:48,079
trying to become better now

45
00:01:48,079 --> 00:01:49,439
if you're familiar with application

46
00:01:49,439 --> 00:01:52,000
security there are a lot of things we

47
00:01:52,000 --> 00:01:52,799
can do

48
00:01:52,799 --> 00:01:54,880
to become better and ensure that things

49
00:01:54,880 --> 00:01:57,119
like that will not happen to us

50
00:01:57,119 --> 00:01:59,119
and one of the things we can use is

51
00:01:59,119 --> 00:02:01,600
automation tools

52
00:02:01,600 --> 00:02:04,799
um and this is why i like to call this

53
00:02:04,799 --> 00:02:06,640
talk continuous hacking

54
00:02:06,640 --> 00:02:08,959
because it's not a talk for application

55
00:02:08,959 --> 00:02:10,399
security experts

56
00:02:10,399 --> 00:02:13,520
it's a talk for developers

57
00:02:13,520 --> 00:02:15,840
and it's talk for developers because as

58
00:02:15,840 --> 00:02:17,280
jim anicode

59
00:02:17,280 --> 00:02:20,560
said and there is a really good tweet

60
00:02:20,560 --> 00:02:23,120
of germany code you can see right now

61
00:02:23,120 --> 00:02:24,160
saying that

62
00:02:24,160 --> 00:02:27,680
in my experience all developers uh

63
00:02:27,680 --> 00:02:30,080
security our security engine our

64
00:02:30,080 --> 00:02:31,760
software developers are now security

65
00:02:31,760 --> 00:02:32,800
engineers

66
00:02:32,800 --> 00:02:35,840
whether they know it admit it or do it

67
00:02:35,840 --> 00:02:37,760
your code is now the security of the old

68
00:02:37,760 --> 00:02:39,920
you vote for

69
00:02:39,920 --> 00:02:41,920
and i really agree with this tweet

70
00:02:41,920 --> 00:02:44,080
because after all

71
00:02:44,080 --> 00:02:47,440
this is the code we write and if we will

72
00:02:47,440 --> 00:02:48,959
not ensure that this code

73
00:02:48,959 --> 00:02:53,519
stay secure we will have security issues

74
00:02:53,519 --> 00:02:56,000
on the other hand we are developers and

75
00:02:56,000 --> 00:02:57,440
we don't always know

76
00:02:57,440 --> 00:02:59,200
what we need to do in order to make our

77
00:02:59,200 --> 00:03:01,360
code secure

78
00:03:01,360 --> 00:03:03,200
and this is where automation can come

79
00:03:03,200 --> 00:03:05,440
really handy

80
00:03:05,440 --> 00:03:07,680
and understand all that because like you

81
00:03:07,680 --> 00:03:09,519
asked in the start

82
00:03:09,519 --> 00:03:12,400
i'm kind of a camera i started as a

83
00:03:12,400 --> 00:03:13,280
developer

84
00:03:13,280 --> 00:03:15,200
from a really young age i like to build

85
00:03:15,200 --> 00:03:16,879
stuff

86
00:03:16,879 --> 00:03:18,480
and i was a developer for a very long

87
00:03:18,480 --> 00:03:19,920
time and

88
00:03:19,920 --> 00:03:21,680
in the past three years i did the shift

89
00:03:21,680 --> 00:03:24,080
to the dark side to the worlds of

90
00:03:24,080 --> 00:03:27,519
devops application security and all this

91
00:03:27,519 --> 00:03:30,080
fun stuff

92
00:03:31,519 --> 00:03:33,680
and now that i come from both worlds i

93
00:03:33,680 --> 00:03:35,519
can understand them better

94
00:03:35,519 --> 00:03:39,040
and know how to talk with each other

95
00:03:39,040 --> 00:03:40,480
and this is where continuous hacking

96
00:03:40,480 --> 00:03:42,640
from come from taking the world of

97
00:03:42,640 --> 00:03:44,159
application security to the

98
00:03:44,159 --> 00:03:46,480
to the world of developers or their

99
00:03:46,480 --> 00:03:47,440
psychopaths

100
00:03:47,440 --> 00:03:49,840
how we can use the tools we are using to

101
00:03:49,840 --> 00:03:51,040
build stuff

102
00:03:51,040 --> 00:03:54,000
also to hack them

103
00:03:58,840 --> 00:04:01,840
um

104
00:04:02,799 --> 00:04:05,920
just a second

105
00:04:11,760 --> 00:04:15,680
so the idea is to have checks on hpr

106
00:04:15,680 --> 00:04:18,720
whether you're using github or gitlab or

107
00:04:18,720 --> 00:04:20,720
whatever you're using

108
00:04:20,720 --> 00:04:24,720
and and then run those

109
00:04:24,720 --> 00:04:27,759
run those checks uh

110
00:04:27,759 --> 00:04:30,560
on each file we are using um and i'm

111
00:04:30,560 --> 00:04:31,600
going to show today

112
00:04:31,600 --> 00:04:34,720
three talk three three tools

113
00:04:34,720 --> 00:04:38,320
they sneak node.js gun and osap

114
00:04:38,320 --> 00:04:40,400
and we're going to see how we can

115
00:04:40,400 --> 00:04:41,600
integrate those tools

116
00:04:41,600 --> 00:04:44,240
into the ci pipeline and how we can use

117
00:04:44,240 --> 00:04:47,840
them to build more secure software

118
00:04:50,639 --> 00:04:54,720
so to start we need

119
00:04:54,720 --> 00:04:57,840
the second

120
00:05:11,520 --> 00:05:13,680
we are trying to rub the slide without

121
00:05:13,680 --> 00:05:14,800
stopping

122
00:05:14,800 --> 00:05:25,840
the show

123
00:05:50,720 --> 00:05:54,080
okay so for the purpose of the talk

124
00:05:54,080 --> 00:05:57,680
we are going to use a victim called

125
00:05:57,680 --> 00:06:00,800
a juicer yourself is a project by os

126
00:06:00,800 --> 00:06:03,919
open web application security project

127
00:06:03,919 --> 00:06:08,479
um and us does a lot of cool things to

128
00:06:08,479 --> 00:06:09,120
help us

129
00:06:09,120 --> 00:06:11,600
build more secure software including

130
00:06:11,600 --> 00:06:13,600
creating

131
00:06:13,600 --> 00:06:16,560
purposely vulnerable applications like

132
00:06:16,560 --> 00:06:18,960
juicio

133
00:06:18,960 --> 00:06:21,280
and you can use those for a lot of

134
00:06:21,280 --> 00:06:23,520
things including

135
00:06:23,520 --> 00:06:28,318
a wait a second i think i can do that

136
00:06:33,280 --> 00:06:37,360
yay we have slide okay

137
00:06:37,360 --> 00:06:40,240
i think i never did something so bad as

138
00:06:40,240 --> 00:06:41,600
showing my slides

139
00:06:41,600 --> 00:06:45,520
via a iphone camera

140
00:06:45,520 --> 00:06:50,960
omar i think if you can flip the camera

141
00:06:51,280 --> 00:06:53,360
the camera is upside down yeah the

142
00:06:53,360 --> 00:06:56,160
camera is upside down

143
00:06:56,160 --> 00:06:59,599
this way all right yes

144
00:06:59,599 --> 00:07:01,360
yes okay so now we can see the slide

145
00:07:01,360 --> 00:07:03,599
which is somewhat better

146
00:07:03,599 --> 00:07:06,639
um i think it's a windy talk where my

147
00:07:06,639 --> 00:07:07,360
mac had a

148
00:07:07,360 --> 00:07:10,639
sword during the the dock now it doesn't

149
00:07:10,639 --> 00:07:12,240
want to boot

150
00:07:12,240 --> 00:07:14,479
oh it want to put i don't know anyway so

151
00:07:14,479 --> 00:07:16,080
this is joseo

152
00:07:16,080 --> 00:07:18,000
and to go back this is the tool we are

153
00:07:18,000 --> 00:07:19,520
going to show

154
00:07:19,520 --> 00:07:22,400
and this is the goal to have a pr with

155
00:07:22,400 --> 00:07:24,880
all the security tests in it

156
00:07:24,880 --> 00:07:29,280
um so i think we need to move fast

157
00:07:29,280 --> 00:07:31,199
because i'm almost out of time but we're

158
00:07:31,199 --> 00:07:32,720
going to start with dynamic

159
00:07:32,720 --> 00:07:35,680
security testing you're seeing another

160
00:07:35,680 --> 00:07:39,599
uh tool by osp called zap

161
00:07:39,759 --> 00:07:41,840
and basically it's the idea to put that

162
00:07:41,840 --> 00:07:43,759
between a client in the server use it

163
00:07:43,759 --> 00:07:44,000
like

164
00:07:44,000 --> 00:07:47,840
epoxy and let it inspect the traffic

165
00:07:47,840 --> 00:07:50,000
and we can use existing end-to-end test

166
00:07:50,000 --> 00:07:51,520
for this

167
00:07:51,520 --> 00:07:54,080
um this is an example of how to do this

168
00:07:54,080 --> 00:07:54,960
with selenium

169
00:07:54,960 --> 00:07:58,560
so basically each time our end to run

170
00:07:58,560 --> 00:08:02,400
it will uh go all over our application

171
00:08:02,400 --> 00:08:05,840
and proxy them those up and we will end

172
00:08:05,840 --> 00:08:06,240
up

173
00:08:06,240 --> 00:08:09,440
with this and this is a

174
00:08:09,440 --> 00:08:12,960
live from circa that find an issue

175
00:08:12,960 --> 00:08:17,120
and we can look into the issue um

176
00:08:17,120 --> 00:08:20,000
let me see i don't think i have enough

177
00:08:20,000 --> 00:08:20,800
time to go

178
00:08:20,800 --> 00:08:22,960
into water issue so we are going to go

179
00:08:22,960 --> 00:08:27,840
fast over this

180
00:08:28,960 --> 00:08:30,720
and move to the next tool which is

181
00:08:30,720 --> 00:08:32,880
static analysis static analysis

182
00:08:32,880 --> 00:08:36,799
is basically automated code of view

183
00:08:36,799 --> 00:08:38,799
if you are looking for a tool there is a

184
00:08:38,799 --> 00:08:40,000
really good website called

185
00:08:40,000 --> 00:08:42,799
compil which has a list of a lot of

186
00:08:42,799 --> 00:08:44,560
amazing tools and you can look

187
00:08:44,560 --> 00:08:47,440
on them by language what they can do

188
00:08:47,440 --> 00:08:48,240
license

189
00:08:48,240 --> 00:08:50,320
and stuff like that so if you're looking

190
00:08:50,320 --> 00:08:52,399
for sas tool you can check it out

191
00:08:52,399 --> 00:08:54,480
today we are going to focus on one tool

192
00:08:54,480 --> 00:08:56,560
known as a node.js can

193
00:08:56,560 --> 00:08:58,399
we are going to give it which directory

194
00:08:58,399 --> 00:09:01,360
to scan and where to save the repo

195
00:09:01,360 --> 00:09:03,040
and now we have the report and we need

196
00:09:03,040 --> 00:09:05,360
to fail the bid which is the problem

197
00:09:05,360 --> 00:09:05,920
because

198
00:09:05,920 --> 00:09:08,720
circle ci does not understand the output

199
00:09:08,720 --> 00:09:10,720
of node.js can't so it cannot fail the

200
00:09:10,720 --> 00:09:11,519
build

201
00:09:11,519 --> 00:09:14,399
if node.js can't find an issue and for

202
00:09:14,399 --> 00:09:15,279
this we are going to

203
00:09:15,279 --> 00:09:18,160
use another tool called glo which its

204
00:09:18,160 --> 00:09:19,519
purpose is basically

205
00:09:19,519 --> 00:09:22,720
glue security tools into the pipeline so

206
00:09:22,720 --> 00:09:23,519
here we are

207
00:09:23,519 --> 00:09:27,839
giving glue the report from node.js cam

208
00:09:27,839 --> 00:09:30,959
and how to read it and now

209
00:09:30,959 --> 00:09:33,600
the build will fail each time we run it

210
00:09:33,600 --> 00:09:34,560
and you can see that

211
00:09:34,560 --> 00:09:37,760
and not like before we now have exactly

212
00:09:37,760 --> 00:09:39,839
where the issue is and what it is

213
00:09:39,839 --> 00:09:41,360
and again because of time i'm going to

214
00:09:41,360 --> 00:09:43,040
skip on

215
00:09:43,040 --> 00:09:46,240
what exactly the issue is and move

216
00:09:46,240 --> 00:09:49,760
to the left store which is packaging

217
00:09:49,760 --> 00:09:51,440
scanning

218
00:09:51,440 --> 00:09:54,880
a snake so we all use a lot of

219
00:09:54,880 --> 00:09:57,839
packages because it's a lot more cool to

220
00:09:57,839 --> 00:10:00,160
use a code that someone else likes

221
00:10:00,160 --> 00:10:02,959
but the fact that it's a code written by

222
00:10:02,959 --> 00:10:04,240
someone else

223
00:10:04,240 --> 00:10:06,399
it does not mean that this code does not

224
00:10:06,399 --> 00:10:08,160
contain security issues

225
00:10:08,160 --> 00:10:10,560
in fact this is a code we are usually

226
00:10:10,560 --> 00:10:12,560
not scanning and not reviewing we just

227
00:10:12,560 --> 00:10:15,279
download it from npm

228
00:10:15,279 --> 00:10:18,959
nugget or whatever but we cannot know

229
00:10:18,959 --> 00:10:23,360
if one of the packages is vulnerable

230
00:10:23,360 --> 00:10:26,079
and this is some slide from sneak open

231
00:10:26,079 --> 00:10:27,040
soft security

232
00:10:27,040 --> 00:10:28,720
and really interesting about i think

233
00:10:28,720 --> 00:10:30,720
they now working on a new one

234
00:10:30,720 --> 00:10:32,560
and we can see that the number of

235
00:10:32,560 --> 00:10:34,640
vulnerabilities keep raising

236
00:10:34,640 --> 00:10:37,120
and it's even more problem when talking

237
00:10:37,120 --> 00:10:37,680
about

238
00:10:37,680 --> 00:10:41,279
environment like npm because most of the

239
00:10:41,279 --> 00:10:42,079
dependencies

240
00:10:42,079 --> 00:10:45,279
come from indirect dependencies so

241
00:10:45,279 --> 00:10:46,640
none of you are familiar with this

242
00:10:46,640 --> 00:10:48,320
thread but this is

243
00:10:48,320 --> 00:10:53,200
a thread well everyone posting

244
00:10:53,200 --> 00:10:56,000
images of defensive of all the packages

245
00:10:56,000 --> 00:10:57,040
they're using

246
00:10:57,040 --> 00:10:59,200
so this is what happens when you install

247
00:10:59,200 --> 00:11:01,440
react you get a lot

248
00:11:01,440 --> 00:11:04,320
lot of other packages now i imagine one

249
00:11:04,320 --> 00:11:05,200
of the point

250
00:11:05,200 --> 00:11:08,480
in the end of the graph

251
00:11:08,480 --> 00:11:10,560
has a vulnerability it still affects

252
00:11:10,560 --> 00:11:11,519
pure code

253
00:11:11,519 --> 00:11:12,959
even if it's a package that you didn't

254
00:11:12,959 --> 00:11:14,560
install and this is why you want

255
00:11:14,560 --> 00:11:16,880
automation

256
00:11:16,880 --> 00:11:20,240
um and sneak the best part about it

257
00:11:20,240 --> 00:11:22,800
is that it's really easy to integrate it

258
00:11:22,800 --> 00:11:24,880
you just go to their ui

259
00:11:24,880 --> 00:11:27,760
and you get it immediately you can hear

260
00:11:27,760 --> 00:11:29,839
the result and you get the pr check

261
00:11:29,839 --> 00:11:31,920
which is not like the tourists i showed

262
00:11:31,920 --> 00:11:33,440
before where you have

263
00:11:33,440 --> 00:11:35,760
some manual work you need to do in order

264
00:11:35,760 --> 00:11:37,839
to make it happen

265
00:11:37,839 --> 00:11:39,920
and now we can look on the vulnerability

266
00:11:39,920 --> 00:11:41,519
and we have a nice

267
00:11:41,519 --> 00:11:43,200
fix this vulnerability of button that

268
00:11:43,200 --> 00:11:46,399
open api for us

269
00:11:46,480 --> 00:11:48,560
and this is a really funny one because

270
00:11:48,560 --> 00:11:50,240
someone here tried to mitigate that

271
00:11:50,240 --> 00:11:54,000
xss with a sanitization about it

272
00:11:54,000 --> 00:11:57,839
but this sensation lab had xss bug in it

273
00:11:57,839 --> 00:12:00,399
which is pretty bad so i'm not going to

274
00:12:00,399 --> 00:12:02,160
go into it because we don't have a lot

275
00:12:02,160 --> 00:12:02,720
of

276
00:12:02,720 --> 00:12:06,480
time um and i think

277
00:12:06,480 --> 00:12:08,800
it's time to start wrapping up and maybe

278
00:12:08,800 --> 00:12:10,480
open up the questions and go back to the

279
00:12:10,480 --> 00:12:12,320
slides in case

280
00:12:12,320 --> 00:12:15,120
you missed something and so this is

281
00:12:15,120 --> 00:12:17,120
where i wanted to start

282
00:12:17,120 --> 00:12:19,200
and i hope now you have somewhat better

283
00:12:19,200 --> 00:12:20,720
understanding of what

284
00:12:20,720 --> 00:12:23,440
those three failed tests why they are

285
00:12:23,440 --> 00:12:24,240
important

286
00:12:24,240 --> 00:12:27,200
and how you can edit your pipeline and

287
00:12:27,200 --> 00:12:28,079
to summarize

288
00:12:28,079 --> 00:12:31,279
sneak is the easiest one to add

289
00:12:31,279 --> 00:12:34,639
um but it just can cause

290
00:12:34,639 --> 00:12:37,200
of the other you just can't code others

291
00:12:37,200 --> 00:12:37,680
what

292
00:12:37,680 --> 00:12:41,120
not you your code and node.js can which

293
00:12:41,120 --> 00:12:41,360
is

294
00:12:41,360 --> 00:12:43,360
a bit easier you just scan your code but

295
00:12:43,360 --> 00:12:46,000
still requires some manual work

296
00:12:46,000 --> 00:12:49,760
and that which is a bit more valuable

297
00:12:49,760 --> 00:12:51,519
but is the hardest to use

298
00:12:51,519 --> 00:12:54,320
because you need to configure all your

299
00:12:54,320 --> 00:12:58,160
end-to-end tests to proxy close up

300
00:12:58,560 --> 00:13:00,240
and there is a link here to a blog post

301
00:13:00,240 --> 00:13:02,079
i got summarizing

302
00:13:02,079 --> 00:13:05,200
all the things i talk about in this talk

303
00:13:05,200 --> 00:13:10,480
um and this is the quote i started with

304
00:13:10,480 --> 00:13:12,639
and i hope now you know how to do

305
00:13:12,639 --> 00:13:14,240
security a bit better

306
00:13:14,240 --> 00:13:16,560
because now it's your move to choose one

307
00:13:16,560 --> 00:13:17,760
of those doors

308
00:13:17,760 --> 00:13:20,959
and try and hack your application

309
00:13:20,959 --> 00:13:22,800
so thank you very much and i think we

310
00:13:22,800 --> 00:13:25,279
have enough time for questions i've lost

311
00:13:25,279 --> 00:13:28,000
a big track of time

312
00:13:28,000 --> 00:13:31,920
yeah we do thank you very much omar and

313
00:13:31,920 --> 00:13:35,360
thank you for trying to make the

314
00:13:35,360 --> 00:13:37,120
presentation work regardless of the

315
00:13:37,120 --> 00:13:38,240
failure

316
00:13:38,240 --> 00:13:41,360
um so

317
00:13:41,360 --> 00:13:43,279
while we wait for the question to come

318
00:13:43,279 --> 00:13:45,839
through um

319
00:13:45,839 --> 00:13:49,040
a quick a quick question from myself

320
00:13:49,040 --> 00:13:51,680
so from a security perspective and from

321
00:13:51,680 --> 00:13:53,360
uh from a developer perspective what

322
00:13:53,360 --> 00:13:54,000
made you

323
00:13:54,000 --> 00:13:56,160
effectively jump defense to the security

324
00:13:56,160 --> 00:13:58,480
board

325
00:13:59,680 --> 00:14:03,199
and it actually happened

326
00:14:03,199 --> 00:14:06,000
pretty much by

327
00:14:07,120 --> 00:14:11,040
like i can i can tell it's my initiative

328
00:14:11,040 --> 00:14:17,839
but my company started

329
00:14:22,000 --> 00:14:25,600
i agreed and it was

330
00:14:25,600 --> 00:14:28,320
like four weeks ago i did a fan testing

331
00:14:28,320 --> 00:14:29,279
course and

332
00:14:29,279 --> 00:14:31,600
from then i get into application

333
00:14:31,600 --> 00:14:33,440
security and recently into devops

334
00:14:33,440 --> 00:14:36,959
and they're really enjoying this journey

335
00:14:37,279 --> 00:14:40,320
fantastic and you mentioned between the

336
00:14:40,320 --> 00:14:40,720
two

337
00:14:40,720 --> 00:14:44,240
days you want to integrate but uh

338
00:14:44,240 --> 00:14:47,279
maybe could you mention the one um the

339
00:14:47,279 --> 00:14:47,680
one

340
00:14:47,680 --> 00:14:49,360
four team that doesn't have a budget and

341
00:14:49,360 --> 00:14:51,040
the one for team that have a small

342
00:14:51,040 --> 00:14:51,839
budget

343
00:14:51,839 --> 00:14:54,639
because the good part i think for

344
00:14:54,639 --> 00:14:55,680
wallace is that

345
00:14:55,680 --> 00:14:57,279
if you don't know where to start and if

346
00:14:57,279 --> 00:14:58,880
you don't have a budget those tools are

347
00:14:58,880 --> 00:14:59,440
free

348
00:14:59,440 --> 00:15:01,199
and even if they're not maybe the

349
00:15:01,199 --> 00:15:03,040
smoothest to integrate

350
00:15:03,040 --> 00:15:05,120
uh they're definitely there to improve

351
00:15:05,120 --> 00:15:06,240
their uh

352
00:15:06,240 --> 00:15:08,320
success and also that you can spin it

353
00:15:08,320 --> 00:15:10,480
off wait a second

354
00:15:10,480 --> 00:15:13,760
wait a second you're a

355
00:15:13,760 --> 00:15:16,639
can you start again i didn't hear that

356
00:15:16,639 --> 00:15:17,440
i'm just saying

357
00:15:17,440 --> 00:15:21,199
uh from uh from a security perspective

358
00:15:21,199 --> 00:15:24,720
yeah from a course perspective which one

359
00:15:24,720 --> 00:15:26,160
would you recommend for team that

360
00:15:26,160 --> 00:15:28,000
doesn't have a little budget from a

361
00:15:28,000 --> 00:15:31,040
security perspective

362
00:15:32,959 --> 00:15:34,880
um so this is a really great question

363
00:15:34,880 --> 00:15:36,160
this is why i

364
00:15:36,160 --> 00:15:39,279
added this table it's really hard to

365
00:15:39,279 --> 00:15:40,240
answer

366
00:15:40,240 --> 00:15:43,040
because budget has two parts the first

367
00:15:43,040 --> 00:15:44,000
one is

368
00:15:44,000 --> 00:15:47,120
actually dollars you have to pay for at

369
00:15:47,120 --> 00:15:47,680
all

370
00:15:47,680 --> 00:15:51,680
and the second one is done so

371
00:15:51,680 --> 00:15:53,920
money wise snake is the only one here

372
00:15:53,920 --> 00:15:55,680
who cost which cost money

373
00:15:55,680 --> 00:15:58,959
but they have some uh

374
00:15:58,959 --> 00:16:00,480
they have different options and it's

375
00:16:00,480 --> 00:16:02,399
free for open source so

376
00:16:02,399 --> 00:16:04,399
it's the best to talk with them and of

377
00:16:04,399 --> 00:16:06,560
course the open source alternative

378
00:16:06,560 --> 00:16:08,959
always

379
00:16:10,240 --> 00:16:13,440
this kind of dependencies and

380
00:16:13,440 --> 00:16:15,360
the left column here the ease of use is

381
00:16:15,360 --> 00:16:16,959
the one aim to answer

382
00:16:16,959 --> 00:16:20,399
more about time and there is something

383
00:16:20,399 --> 00:16:22,800
that i didn't edit here which is

384
00:16:22,800 --> 00:16:24,720
i think we can call it false positive

385
00:16:24,720 --> 00:16:27,519
right because

386
00:16:27,519 --> 00:16:29,600
you cannot run these stores if you don't

387
00:16:29,600 --> 00:16:32,000
have someone in the application security

388
00:16:32,000 --> 00:16:33,440
team who is

389
00:16:33,440 --> 00:16:35,040
willing to invest time in helping

390
00:16:35,040 --> 00:16:37,120
developers to figure out

391
00:16:37,120 --> 00:16:39,440
why they were reporting something which

392
00:16:39,440 --> 00:16:40,399
is

393
00:16:40,399 --> 00:16:44,320
not interesting um so there are a lot of

394
00:16:44,320 --> 00:16:47,519
aspect to prices

395
00:16:49,360 --> 00:16:52,160
so it's a bit hard to answer that but i

396
00:16:52,160 --> 00:16:53,440
think

397
00:16:53,440 --> 00:16:57,279
the best thing i can say is that

398
00:16:57,279 --> 00:16:59,680
it's not plug and play it's never plug

399
00:16:59,680 --> 00:17:00,480
and play

400
00:17:00,480 --> 00:17:05,520
and it will never solve all your issues

401
00:17:05,520 --> 00:17:08,959
and but if you want to start i the thing

402
00:17:08,959 --> 00:17:11,600
investment is

403
00:17:12,000 --> 00:17:15,439
because this is the thing is

404
00:17:15,439 --> 00:17:18,880
has the least number of course positive

405
00:17:18,880 --> 00:17:23,520
um and so much easier to start

406
00:17:23,520 --> 00:17:26,720
uh from my experience static analysis

407
00:17:26,720 --> 00:17:29,120
has a bit more fall positive and not

408
00:17:29,120 --> 00:17:30,400
always given

409
00:17:30,400 --> 00:17:32,240
good value depend on the tool and

410
00:17:32,240 --> 00:17:34,799
dynamic analysis is usually good but

411
00:17:34,799 --> 00:17:38,000
is a bit hard to set up yeah i agree and

412
00:17:38,000 --> 00:17:40,400
also to interpret

413
00:17:40,400 --> 00:17:43,840
and i

