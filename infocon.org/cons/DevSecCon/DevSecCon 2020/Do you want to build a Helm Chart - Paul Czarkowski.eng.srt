1
00:00:00,030 --> 00:00:02,610
all right like we're online yeah we are

2
00:00:02,610 --> 00:00:09,300
all right I better go sorry I had a the

3
00:00:09,300 --> 00:00:11,099
volume on the stream key not a little

4
00:00:11,099 --> 00:00:13,530
feedback there all right so I am Billy

5
00:00:13,530 --> 00:00:16,470
Rando here and I'm here with Paul Casey

6
00:00:16,470 --> 00:00:19,880
meets SAR Kowski and we are going to be

7
00:00:19,880 --> 00:00:22,880
doing is a mob programming you said Paul

8
00:00:22,880 --> 00:00:25,199
yeah that's right mob programming or

9
00:00:25,199 --> 00:00:27,359
attempting to I think I may be a love of

10
00:00:27,359 --> 00:00:29,720
one we are having some technical

11
00:00:29,720 --> 00:00:32,070
difficulties between stream yard and

12
00:00:32,070 --> 00:00:34,140
Linux so I have to share I can only have

13
00:00:34,140 --> 00:00:36,890
one screen so I can actually see chat I

14
00:00:36,890 --> 00:00:39,989
can roll with being a mob of one but if

15
00:00:39,989 --> 00:00:41,670
people are participating and people do

16
00:00:41,670 --> 00:00:44,399
want to see certain things just jump on

17
00:00:44,399 --> 00:00:45,870
the stream and shout at me and I will

18
00:00:45,870 --> 00:00:48,480
try and redirect myself absolutely well

19
00:00:48,480 --> 00:00:50,430
I'll go ahead and say online and then

20
00:00:50,430 --> 00:00:52,500
pass along any questions I see in the

21
00:00:52,500 --> 00:00:54,809
chat rather isn't a chat here in the

22
00:00:54,809 --> 00:00:57,750
stream or in slack so either way I will

23
00:00:57,750 --> 00:01:00,000
pass your questions along to Paul but

24
00:01:00,000 --> 00:01:01,500
until then I guess you're going to want

25
00:01:01,500 --> 00:01:03,270
to be showing your screen so I will go

26
00:01:03,270 --> 00:01:06,750
ahead and get that up let me get that

27
00:01:06,750 --> 00:01:09,689
added and from there I'll go ahead and

28
00:01:09,689 --> 00:01:12,479
let you get going okay great so you can

29
00:01:12,479 --> 00:01:14,939
see my wouldn't know here right with the

30
00:01:14,939 --> 00:01:16,140
helm yes

31
00:01:16,140 --> 00:01:19,080
yeah okay yep everything looks good all

32
00:01:19,080 --> 00:01:21,600
right so my name is Paul Tchaikovsky I'm

33
00:01:21,600 --> 00:01:23,520
a developer advocate at VMware and

34
00:01:23,520 --> 00:01:25,590
that's about all I want to tell you

35
00:01:25,590 --> 00:01:27,299
about myself because I figured we would

36
00:01:27,299 --> 00:01:29,189
just get on with this given we don't

37
00:01:29,189 --> 00:01:32,850
have a ton of time so I wanted to kind

38
00:01:32,850 --> 00:01:34,380
of do this Bob programming exercise

39
00:01:34,380 --> 00:01:36,240
where we just started from scratch and

40
00:01:36,240 --> 00:01:40,530
wrote a helm chart for an application of

41
00:01:40,530 --> 00:01:45,119
the audience's choice given we have poor

42
00:01:45,119 --> 00:01:48,570
communication because of my poor choice

43
00:01:48,570 --> 00:01:50,549
of running Linux on a desktop

44
00:01:50,549 --> 00:01:52,590
I thought 2020 might be the year but I

45
00:01:52,590 --> 00:01:55,829
guess it's not so I will just roll with

46
00:01:55,829 --> 00:01:58,409
being a mob of one and I'll go ahead and

47
00:01:58,409 --> 00:02:00,899
I'll use an application that I already

48
00:02:00,899 --> 00:02:04,140
know a little bit to try and make things

49
00:02:04,140 --> 00:02:05,250
a little bit easier and a little bit

50
00:02:05,250 --> 00:02:07,079
screwed up so first of all we have helm

51
00:02:07,079 --> 00:02:09,479
if you're not familiar with it as their

52
00:02:09,479 --> 00:02:12,239
website says it's a package manager for

53
00:02:12,239 --> 00:02:13,510
kubernetes and they

54
00:02:13,510 --> 00:02:15,340
to be the best way to find share and use

55
00:02:15,340 --> 00:02:17,530
software built for kubernetes so let's

56
00:02:17,530 --> 00:02:20,530
test that out so if we go down the

57
00:02:20,530 --> 00:02:22,409
website a little bit we will find

58
00:02:22,409 --> 00:02:25,599
installation instructions I already have

59
00:02:25,599 --> 00:02:28,510
home installed and also this thing

60
00:02:28,510 --> 00:02:31,180
called helm hub which is where existing

61
00:02:31,180 --> 00:02:34,150
applications are so if we click across

62
00:02:34,150 --> 00:02:36,430
to that you can see there's a ton of

63
00:02:36,430 --> 00:02:40,569
apps there's over 1,200 applications

64
00:02:40,569 --> 00:02:45,099
already on the helm hub obviously any

65
00:02:45,099 --> 00:02:47,440
time you do a demo the first thing you

66
00:02:47,440 --> 00:02:50,739
demo it with is WordPress somehow still

67
00:02:50,739 --> 00:02:54,750
in 2020 that is our go-to thing so

68
00:02:54,750 --> 00:02:57,400
somewhat tongue-in-cheek that's what I'm

69
00:02:57,400 --> 00:03:00,430
gonna roll with when I see multiple helm

70
00:03:00,430 --> 00:03:03,670
charts for the same app I'll often hit

71
00:03:03,670 --> 00:03:05,530
the bitNami stuff because I've found

72
00:03:05,530 --> 00:03:07,510
that to be quite reliable and so we'll

73
00:03:07,510 --> 00:03:10,659
go ahead and look at this and you can

74
00:03:10,659 --> 00:03:13,290
see here that they're claiming that

75
00:03:13,290 --> 00:03:15,760
simply adding their repo and running

76
00:03:15,760 --> 00:03:18,910
helm install is all we need to do to

77
00:03:18,910 --> 00:03:20,859
actually install an app so let's

78
00:03:20,859 --> 00:03:23,470
actually try that out and see that that

79
00:03:23,470 --> 00:03:27,220
actually works I have made my text

80
00:03:27,220 --> 00:03:32,530
really big hopefully it is readable well

81
00:03:32,530 --> 00:03:34,480
problem with really big text is you

82
00:03:34,480 --> 00:03:38,319
can't actually read anything down a

83
00:03:38,319 --> 00:03:41,650
little bit you can see when we do it it

84
00:03:41,650 --> 00:03:42,730
gives us a bunch of notes

85
00:03:42,730 --> 00:03:44,650
it tells us how to access our

86
00:03:44,650 --> 00:03:48,129
application etc so let's go ahead and

87
00:03:48,129 --> 00:03:49,750
actually look what's happening here on

88
00:03:49,750 --> 00:03:52,269
kubernetes I have my kubernetes cluster

89
00:03:52,269 --> 00:03:55,419
up I'm in my default namespace and you

90
00:03:55,419 --> 00:03:58,030
can see I have now a couple of pods so

91
00:03:58,030 --> 00:04:01,629
WordPress but also a database you can

92
00:04:01,629 --> 00:04:03,549
see I have a deployment a replica set

93
00:04:03,549 --> 00:04:05,109
you have a stateful set so this is the

94
00:04:05,109 --> 00:04:07,239
home chart clearly standing up a number

95
00:04:07,239 --> 00:04:11,470
of resources to get us working and then

96
00:04:11,470 --> 00:04:14,129
I believe we should also have a service

97
00:04:14,129 --> 00:04:17,560
that we have a couple of services and it

98
00:04:17,560 --> 00:04:20,470
actually is a typed load balance and it

99
00:04:20,470 --> 00:04:22,630
already has set up a load balancer on

100
00:04:22,630 --> 00:04:24,820
Google cloud where this cluster is

101
00:04:24,820 --> 00:04:27,500
running so once my application

102
00:04:27,500 --> 00:04:30,590
ah I should have never hit that and so I

103
00:04:30,590 --> 00:04:32,120
can see my application is up look at my

104
00:04:32,120 --> 00:04:33,620
pugs and you can see they're not quite

105
00:04:33,620 --> 00:04:37,610
ready I assume what Maria DB probably

106
00:04:37,610 --> 00:04:39,110
takes a while to get started up and

107
00:04:39,110 --> 00:04:41,210
probably has to load up the default

108
00:04:41,210 --> 00:04:43,880
WordPress database so that probably

109
00:04:43,880 --> 00:04:46,570
takes a minute and I would bet it's also

110
00:04:46,570 --> 00:04:49,130
creating persistent storage yeah it is

111
00:04:49,130 --> 00:04:51,350
so it's also connecting to a Google

112
00:04:51,350 --> 00:04:54,050
block storage and getting volumes to

113
00:04:54,050 --> 00:04:56,870
mount up into the pods so that's

114
00:04:56,870 --> 00:04:59,350
probably why it's taking a hot minute

115
00:04:59,350 --> 00:05:02,480
you can see now it is claiming one of

116
00:05:02,480 --> 00:05:05,630
one ready line of one ready so if we do

117
00:05:05,630 --> 00:05:08,360
that get serviced again there's an IP

118
00:05:08,360 --> 00:05:11,270
address there and so we should be able

119
00:05:11,270 --> 00:05:15,740
to hit that up and hopefully we get a

120
00:05:15,740 --> 00:05:20,810
response if not death there we go and we

121
00:05:20,810 --> 00:05:22,580
get a response right so that looks like

122
00:05:22,580 --> 00:05:25,490
what we expect so we can open that up in

123
00:05:25,490 --> 00:05:30,020
a browser and there we go hello world I

124
00:05:30,020 --> 00:05:32,450
assume I can start writing blog posts

125
00:05:32,450 --> 00:05:35,630
and stuff so there's I feel like thats

126
00:05:35,630 --> 00:05:38,990
helm living up to what they set out

127
00:05:38,990 --> 00:05:41,750
their mission to be which is a good way

128
00:05:41,750 --> 00:05:43,940
to find share and use software built for

129
00:05:43,940 --> 00:05:45,950
to be Nettie's so now I've kind of seen

130
00:05:45,950 --> 00:05:48,830
that in action we should actually go

131
00:05:48,830 --> 00:05:51,200
ahead and create our own home our own

132
00:05:51,200 --> 00:05:53,960
home chart and see how we go so let me

133
00:05:53,960 --> 00:05:56,810
close that down so I'm going to use this

134
00:05:56,810 --> 00:06:01,280
app it's a simple sample app that the

135
00:06:01,280 --> 00:06:03,770
spring project users spring is a Java

136
00:06:03,770 --> 00:06:06,320
framework and so I'm gonna hit go ahead

137
00:06:06,320 --> 00:06:08,270
and run this and I've already cloned

138
00:06:08,270 --> 00:06:10,790
this down to my laptop just to keep

139
00:06:10,790 --> 00:06:13,370
things be speedy so here's their

140
00:06:13,370 --> 00:06:16,070
application and you can see first of all

141
00:06:16,070 --> 00:06:18,080
I don't see a docker file

142
00:06:18,080 --> 00:06:21,380
I do see a docker compose file and that

143
00:06:21,380 --> 00:06:23,240
looks like they only use that to set up

144
00:06:23,240 --> 00:06:26,780
the actual about a backing database so

145
00:06:26,780 --> 00:06:28,940
I'm not a hundred percent sure just from

146
00:06:28,940 --> 00:06:30,260
looking at a repo how to build it

147
00:06:30,260 --> 00:06:33,160
however I do know that Google has a

148
00:06:33,160 --> 00:06:35,840
project called which is the Java

149
00:06:35,840 --> 00:06:38,450
image builder and I think we can go

150
00:06:38,450 --> 00:06:41,020
ahead and use that

151
00:06:41,150 --> 00:06:45,310
let me bring back my browser and here is

152
00:06:45,310 --> 00:06:49,160
Google's jib and I can basically it lets

153
00:06:49,160 --> 00:06:51,710
you containerize a maven project your

154
00:06:51,710 --> 00:06:53,930
docker project without even needing

155
00:06:53,930 --> 00:06:57,680
docker installed on your machine and you

156
00:06:57,680 --> 00:06:59,660
can simply run this line here you can

157
00:06:59,660 --> 00:07:01,640
actually add it to your palm that XML

158
00:07:01,640 --> 00:07:03,350
but the last thing I'm going to do is

159
00:07:03,350 --> 00:07:06,590
start editing XML on a live stream so we

160
00:07:06,590 --> 00:07:09,530
can go ahead and cheat and use this like

161
00:07:09,530 --> 00:07:12,980
so and so if we do that and we just give

162
00:07:12,980 --> 00:07:20,420
it an image name clinic believe we can

163
00:07:20,420 --> 00:07:23,210
get run that and that's going to go

164
00:07:23,210 --> 00:07:28,040
ahead and compile the project which I

165
00:07:28,040 --> 00:07:30,020
did cheat and already do so that we

166
00:07:30,020 --> 00:07:31,930
would speed through this bit quicker

167
00:07:31,930 --> 00:07:35,860
hopefully it happens really quick

168
00:07:43,350 --> 00:07:46,170
I probably should have done a skip tests

169
00:07:46,170 --> 00:07:47,520
I'm not sure if there's any test for pet

170
00:07:47,520 --> 00:07:49,500
clinic but I should have told me may

171
00:07:49,500 --> 00:07:51,930
even to skip them but again it should

172
00:07:51,930 --> 00:08:00,540
happen fairly quickly you know yeah we

173
00:08:00,540 --> 00:08:02,460
go and see it's actually now building

174
00:08:02,460 --> 00:08:04,530
the image and pushing it up to docker

175
00:08:04,530 --> 00:08:07,500
hub and it's not using docker at all

176
00:08:07,500 --> 00:08:08,880
I do have docker installed on this

177
00:08:08,880 --> 00:08:10,860
machine but it's not using it and so you

178
00:08:10,860 --> 00:08:12,450
could use this on your Mac you could use

179
00:08:12,450 --> 00:08:15,150
this on your build server without even

180
00:08:15,150 --> 00:08:16,620
needing docker installed which i think

181
00:08:16,620 --> 00:08:20,190
is a super powerful thing and because

182
00:08:20,190 --> 00:08:22,920
our IDE pushed up to the docker registry

183
00:08:22,920 --> 00:08:26,970
as my image we get actually go ahead and

184
00:08:26,970 --> 00:08:29,730
just deploy it and make sure it works we

185
00:08:29,730 --> 00:08:32,429
clean clear the screen and let me delete

186
00:08:32,429 --> 00:08:37,830
the home shot we just know let me create

187
00:08:37,830 --> 00:08:46,350
a new hang space look inside that just

188
00:08:46,350 --> 00:08:47,850
so we don't see a bunch of noise from

189
00:08:47,850 --> 00:08:53,040
other stuff of already installed all

190
00:08:53,040 --> 00:08:57,450
right so we've got nothing in here now

191
00:08:57,450 --> 00:08:59,790
of alias kata poo cuddle so if I cut k

192
00:08:59,790 --> 00:09:02,580
it's just short cutting to to cuddle and

193
00:09:02,580 --> 00:09:03,930
then I can go ahead and create a

194
00:09:03,930 --> 00:09:07,050
deployment and I'll shortcut at that

195
00:09:07,050 --> 00:09:08,700
already and see I'm creating a

196
00:09:08,700 --> 00:09:11,370
deployment and so this is just a test

197
00:09:11,370 --> 00:09:13,050
the app is working cuz I don't want to

198
00:09:13,050 --> 00:09:14,490
go to the effort of building out a home

199
00:09:14,490 --> 00:09:18,240
shot if the apps not gonna work you get

200
00:09:18,240 --> 00:09:20,400
pods it looks like it's already running

201
00:09:20,400 --> 00:09:25,230
and I can do a forward into that I

202
00:09:25,230 --> 00:09:29,100
believe it listens on port 8080 and then

203
00:09:29,100 --> 00:09:35,510
I don't know browser will close

204
00:09:37,430 --> 00:09:40,530
it's a cuckoo pedal Court forward

205
00:09:40,530 --> 00:09:42,900
actually forwards localhost into the pod

206
00:09:42,900 --> 00:09:44,580
you looking at that way you can access

207
00:09:44,580 --> 00:09:46,740
it without needing to expose your app to

208
00:09:46,740 --> 00:09:48,270
the Internet and this looks to be

209
00:09:48,270 --> 00:09:52,770
working so that is great let's go ahead

210
00:09:52,770 --> 00:09:59,480
and kill that off so delete deployment

211
00:10:03,530 --> 00:10:06,420
running or exterminating that and we'll

212
00:10:06,420 --> 00:10:10,110
go ahead and create a home shot so I

213
00:10:10,110 --> 00:10:20,850
already have the helm console I have it

214
00:10:20,850 --> 00:10:24,120
installed obviously new helm help and

215
00:10:24,120 --> 00:10:27,420
get a bunch of information and they have

216
00:10:27,420 --> 00:10:30,270
a helm create which will create a home

217
00:10:30,270 --> 00:10:37,710
chart for me do that Oh create pet and

218
00:10:37,710 --> 00:10:39,210
we'll see what we get creating pet

219
00:10:39,210 --> 00:10:43,560
clinic you can see it created a

220
00:10:43,560 --> 00:10:45,650
directory with a bunch of files in it

221
00:10:45,650 --> 00:10:48,480
it's got charge Amal and chatter yeah

222
00:10:48,480 --> 00:10:50,250
Mel is basically the metadata about your

223
00:10:50,250 --> 00:10:50,670
chart

224
00:10:50,670 --> 00:10:53,790
it's got values y amal which is a set of

225
00:10:53,790 --> 00:10:55,350
default values that will be rendered

226
00:10:55,350 --> 00:10:57,870
into the templates in your chart and

227
00:10:57,870 --> 00:11:00,000
then a bunch of templates already has

228
00:11:00,000 --> 00:11:03,000
things like a deployment service ingress

229
00:11:03,000 --> 00:11:04,620
so all the things you would usually have

230
00:11:04,620 --> 00:11:07,980
for a kubernetes application they have

231
00:11:07,980 --> 00:11:10,580
put together the scaffolding for that

232
00:11:10,580 --> 00:11:15,330
let's jump across to vs code and we can

233
00:11:15,330 --> 00:11:19,110
have a look at what it's giving us so

234
00:11:19,110 --> 00:11:21,090
here's that chart out yeah Mille we

235
00:11:21,090 --> 00:11:22,800
don't have to do anything here for now

236
00:11:22,800 --> 00:11:25,410
so we'll leave that here's our values

237
00:11:25,410 --> 00:11:29,790
yeah Mille and you can see it's calling

238
00:11:29,790 --> 00:11:34,500
for a image repository nginx that's

239
00:11:34,500 --> 00:11:36,720
gonna pull nginx we don't want nginx

240
00:11:36,720 --> 00:11:41,490
we want our spring pet clinic here and

241
00:11:41,490 --> 00:11:44,550
so we'll say that and we'll look for

242
00:11:44,550 --> 00:11:48,870
anything else that might seem wrong this

243
00:11:48,870 --> 00:11:49,470
port

244
00:11:49,470 --> 00:11:55,310
I think we need port 8080 and then I

245
00:11:55,310 --> 00:11:57,780
don't know that we'll need things but

246
00:11:57,780 --> 00:12:00,560
let me just said at the clinic dot demo

247
00:12:00,560 --> 00:12:04,110
will give it a potentially real penis

248
00:12:04,110 --> 00:12:07,110
and see how far we get into getting that

249
00:12:07,110 --> 00:12:12,120
working and then in templates so here's

250
00:12:12,120 --> 00:12:14,990
our deployment that yellow you can see

251
00:12:14,990 --> 00:12:17,040
this looks like a fairly standard

252
00:12:17,040 --> 00:12:21,300
kubernetes llaman file except there's a

253
00:12:21,300 --> 00:12:23,370
bunch of these curly braces or mustaches

254
00:12:23,370 --> 00:12:24,390
or whatever you like to call them and

255
00:12:24,390 --> 00:12:26,490
this is where the templating language

256
00:12:26,490 --> 00:12:29,370
will insert values so you have some

257
00:12:29,370 --> 00:12:31,230
things that are these are coming from

258
00:12:31,230 --> 00:12:33,480
some functions that are provided and

259
00:12:33,480 --> 00:12:34,950
then these are the actual values coming

260
00:12:34,950 --> 00:12:38,790
from the values file and so one thing I

261
00:12:38,790 --> 00:12:41,580
do need to roll down is find this guy

262
00:12:41,580 --> 00:12:46,770
here and just right now by default it

263
00:12:46,770 --> 00:12:49,620
will call this chart app version and I'm

264
00:12:49,620 --> 00:12:51,810
not sure I want that and so I'm gonna do

265
00:12:51,810 --> 00:12:56,520
this right here and set the tag and then

266
00:12:56,520 --> 00:12:59,190
I'm going to come back to values come

267
00:12:59,190 --> 00:13:04,050
back to my image and I assume it'll be

268
00:13:04,050 --> 00:13:07,950
latest but we have a deployment that I

269
00:13:07,950 --> 00:13:11,220
think is going to work now let me check

270
00:13:11,220 --> 00:13:13,530
the ports okay so this support again

271
00:13:13,530 --> 00:13:19,160
8080 here and then liveness and

272
00:13:19,160 --> 00:13:23,040
readiness probes I'm pretty sure this

273
00:13:23,040 --> 00:13:25,770
will work but there's nothing more

274
00:13:25,770 --> 00:13:27,570
frustrating than kubernetes constantly

275
00:13:27,570 --> 00:13:29,160
killing your application because the

276
00:13:29,160 --> 00:13:30,540
liveness probe is failing

277
00:13:30,540 --> 00:13:33,600
so just for now I'm going to comment

278
00:13:33,600 --> 00:13:35,700
those out and we may come back to them

279
00:13:35,700 --> 00:13:39,180
later on if we have time so I think this

280
00:13:39,180 --> 00:13:41,310
is all we need to actually deploy your

281
00:13:41,310 --> 00:13:45,450
app to kubernetes so let's go ahead and

282
00:13:45,450 --> 00:13:50,330
do that clinic and then Hellman Stoll

283
00:13:50,330 --> 00:13:52,620
we're already in the namespace we want

284
00:13:52,620 --> 00:13:54,090
to install it so we just want to give it

285
00:13:54,090 --> 00:13:54,830
a name

286
00:13:54,830 --> 00:13:59,330
Clinic and then we want to install from

287
00:13:59,330 --> 00:14:01,070
the local directory so we can just do it

288
00:14:01,070 --> 00:14:07,640
dot and so that's done it and is

289
00:14:07,640 --> 00:14:10,040
printing out some notes and those notes

290
00:14:10,040 --> 00:14:12,080
are actually rendered from this notes

291
00:14:12,080 --> 00:14:15,020
dot text so it looks at different values

292
00:14:15,020 --> 00:14:16,700
of a set you can see it'll give you a

293
00:14:16,700 --> 00:14:18,710
different set of notes if ingress is

294
00:14:18,710 --> 00:14:21,410
enabled or if there's a node port and so

295
00:14:21,410 --> 00:14:22,940
that lets you provide instructions on

296
00:14:22,940 --> 00:14:25,820
how to access your application once it's

297
00:14:25,820 --> 00:14:27,800
up and running which is really useful

298
00:14:27,800 --> 00:14:32,000
for new people so here it's giving us a

299
00:14:32,000 --> 00:14:34,250
bunch of commands we can run to access

300
00:14:34,250 --> 00:14:37,940
it effectively port forwarding like I

301
00:14:37,940 --> 00:14:40,280
had just done earlier I already know how

302
00:14:40,280 --> 00:14:42,230
to do that so let's clear it off we'll

303
00:14:42,230 --> 00:14:43,910
have a look at our plugs you can see we

304
00:14:43,910 --> 00:14:47,210
have our application running and so we

305
00:14:47,210 --> 00:14:51,800
can do a we have a service we have a

306
00:14:51,800 --> 00:14:55,550
service it is a type of cluster I P so

307
00:14:55,550 --> 00:14:57,110
we're not getting a load balancer or

308
00:14:57,110 --> 00:14:59,690
anything which is fine for now so we

309
00:14:59,690 --> 00:15:01,550
probably want to try to get an ingress

310
00:15:01,550 --> 00:15:04,430
working but we can do a quick port

311
00:15:04,430 --> 00:15:11,780
forward and here eighty and just go

312
00:15:11,780 --> 00:15:15,730
another double check that we are working

313
00:15:23,290 --> 00:15:24,970
so this is the the new version we just

314
00:15:24,970 --> 00:15:26,620
installed with helm and you can see it

315
00:15:26,620 --> 00:15:28,990
was just almost just as easy to actually

316
00:15:28,990 --> 00:15:31,840
create the entire helm chart as it was

317
00:15:31,840 --> 00:15:33,430
to do the initial you know create

318
00:15:33,430 --> 00:15:36,160
deployment and so that create experience

319
00:15:36,160 --> 00:15:38,860
is pretty consistent with what you would

320
00:15:38,860 --> 00:15:41,650
expect for kubernetes but we actually

321
00:15:41,650 --> 00:15:43,210
got a fair bit more stuff because we've

322
00:15:43,210 --> 00:15:46,090
got also got the service and some other

323
00:15:46,090 --> 00:15:49,330
bits and pieces so let's go ahead and

324
00:15:49,330 --> 00:15:52,210
end that and so I guess the next thing

325
00:15:52,210 --> 00:15:53,680
we want to do is figure out how to

326
00:15:53,680 --> 00:15:56,430
actually expose this to the internet

327
00:15:56,430 --> 00:15:58,960
because we don't want to tell out people

328
00:15:58,960 --> 00:16:00,490
wanting to use our pet clinic that they

329
00:16:00,490 --> 00:16:02,950
need to download coop cuddle and do a

330
00:16:02,950 --> 00:16:04,360
port forward just so they can bring

331
00:16:04,360 --> 00:16:07,390
their sick dog in to come and see us

332
00:16:07,390 --> 00:16:11,140
so let's come back here and go back to

333
00:16:11,140 --> 00:16:13,720
values and you can see we already have

334
00:16:13,720 --> 00:16:17,610
some ingress stuff set up so in theory

335
00:16:17,610 --> 00:16:25,060
if I run in crew here and then there are

336
00:16:25,060 --> 00:16:27,940
some annotations I can set and then you

337
00:16:27,940 --> 00:16:30,250
can see I set my hosts and paths to go

338
00:16:30,250 --> 00:16:35,880
to and I can also set TLS and I like

339
00:16:35,880 --> 00:16:40,060
well that's at should we let's let's

340
00:16:40,060 --> 00:16:41,350
start and just try and get ingress

341
00:16:41,350 --> 00:16:42,970
working then we might try get TLS for

342
00:16:42,970 --> 00:16:45,700
working so I think we can just go ahead

343
00:16:45,700 --> 00:16:54,100
and run it as is let me uncomment these

344
00:16:54,100 --> 00:16:56,200
because these are actually can be useful

345
00:16:56,200 --> 00:16:58,150
cuz that's telling it to make sure if I

346
00:16:58,150 --> 00:17:00,220
have multiple ingress is to use nginx

347
00:17:00,220 --> 00:17:02,320
and I do have an ingress set up on this

348
00:17:02,320 --> 00:17:05,920
cluster so this should work right out

349
00:17:05,920 --> 00:17:08,380
now normally I would make changes in a

350
00:17:08,380 --> 00:17:11,470
separate values file and link to that in

351
00:17:11,470 --> 00:17:13,869
helm but often when I'm first creating a

352
00:17:13,869 --> 00:17:16,180
help chart I'll just do it directly here

353
00:17:16,180 --> 00:17:20,050
and then sort of just make their values

354
00:17:20,050 --> 00:17:21,880
file a bit more generic before I

355
00:17:21,880 --> 00:17:25,209
actually publish it and so adding that

356
00:17:25,209 --> 00:17:27,520
ingress I think is all we need to do

357
00:17:27,520 --> 00:17:30,460
because I think nginx running inside my

358
00:17:30,460 --> 00:17:32,740
cluster for the ingress cluster IP is

359
00:17:32,740 --> 00:17:35,680
okay here so I think I can go ahead and

360
00:17:35,680 --> 00:17:37,560
update our

361
00:17:37,560 --> 00:17:41,790
deployment and see what happens

362
00:17:42,910 --> 00:17:45,700
so tell me LS you can see we have

363
00:17:45,700 --> 00:17:51,190
alcohol shot running installed and so we

364
00:17:51,190 --> 00:17:55,330
can do a home upgrade we call the pet

365
00:17:55,330 --> 00:18:00,910
clinic and then dot that will read that

366
00:18:00,910 --> 00:18:04,900
values file that we just changed so this

367
00:18:04,900 --> 00:18:10,300
should upgrade the okay let me so we

368
00:18:10,300 --> 00:18:11,860
have an error and that's looking for a

369
00:18:11,860 --> 00:18:14,110
path and so let me show you where that

370
00:18:14,110 --> 00:18:17,230
is critic screen and bring up here make

371
00:18:17,230 --> 00:18:19,800
it repeat up in case you can't see it so

372
00:18:19,800 --> 00:18:25,050
it's looking for expect rules zero HTTP

373
00:18:25,050 --> 00:18:29,260
looking for a field pubs ice would come

374
00:18:29,260 --> 00:18:33,640
back to values ingress pause so I think

375
00:18:33,640 --> 00:18:40,590
I want to do me that let's try it again

376
00:18:44,130 --> 00:18:46,990
okay that looks better and now

377
00:18:46,990 --> 00:18:49,090
interestingly instead of giving us a

378
00:18:49,090 --> 00:18:51,010
bunch of port forward information it's

379
00:18:51,010 --> 00:18:52,540
now telling us that we can go through

380
00:18:52,540 --> 00:18:59,350
this URL which is pretty remarkable and

381
00:18:59,350 --> 00:19:01,780
but I haven't done any DNS work so this

382
00:19:01,780 --> 00:19:05,230
URL probably won't work so what I can do

383
00:19:05,230 --> 00:19:10,120
is do a getting dressed I can spell if

384
00:19:10,120 --> 00:19:12,460
you can see here here's a host and this

385
00:19:12,460 --> 00:19:16,360
is the address of the ingress so I can

386
00:19:16,360 --> 00:19:20,140
throw that into if I just do a HTTP of

387
00:19:20,140 --> 00:19:24,760
that it'll give me a failure because

388
00:19:24,760 --> 00:19:28,720
it's actually an ingress is like a set

389
00:19:28,720 --> 00:19:31,330
of rich rules that require they use like

390
00:19:31,330 --> 00:19:33,550
the hostname and the path to determine

391
00:19:33,550 --> 00:19:37,720
which back-end service to send the

392
00:19:37,720 --> 00:19:40,480
traffic to and so I could do like a curl

393
00:19:40,480 --> 00:19:44,020
X set of hosts and stuff but I might

394
00:19:44,020 --> 00:19:46,810
just take these two items and throw them

395
00:19:46,810 --> 00:19:50,280
into my hosts file

396
00:19:55,370 --> 00:20:11,010
plus its Athens that's saved off so now

397
00:20:11,010 --> 00:20:16,920
if I do that we should get what looks

398
00:20:16,920 --> 00:20:20,250
like a valid HTTP response we come back

399
00:20:20,250 --> 00:20:23,100
to our browser I'm used to having

400
00:20:23,100 --> 00:20:25,440
multiple monitors and switching virtual

401
00:20:25,440 --> 00:20:29,130
desktops so now we should be putting our

402
00:20:29,130 --> 00:20:32,010
URL here and it is going to work

403
00:20:32,010 --> 00:20:34,860
obviously connection is not secure that

404
00:20:34,860 --> 00:20:38,100
is something we can deal with now on

405
00:20:38,100 --> 00:20:40,850
this cluster I also have a thing called

406
00:20:40,850 --> 00:20:44,880
external DNS and that is hooked up to my

407
00:20:44,880 --> 00:20:47,880
Google DNS where this domain is hosted

408
00:20:47,880 --> 00:20:50,190
so actually what's happening in the

409
00:20:50,190 --> 00:20:52,700
background in my cluster right now is

410
00:20:52,700 --> 00:20:55,650
external DNS is working with Google

411
00:20:55,650 --> 00:20:58,410
Cloud DNS to actually register this

412
00:20:58,410 --> 00:21:01,440
hostname to the IP address of the

413
00:21:01,440 --> 00:21:03,810
ingress and that's all happening without

414
00:21:03,810 --> 00:21:05,900
me having to really do anything at all

415
00:21:05,900 --> 00:21:09,270
and so let's see sometimes it's really

416
00:21:09,270 --> 00:21:11,640
quick clearly you can't be that full

417
00:21:11,640 --> 00:21:13,010
come on

418
00:21:13,010 --> 00:21:20,180
and in fact yeah that Oh actually uh-huh

419
00:21:22,640 --> 00:21:29,130
obviously still working so maybe the NS

420
00:21:29,130 --> 00:21:37,050
is already set up yeah so if I actually

421
00:21:37,050 --> 00:21:39,540
ask Google itself it has already gone

422
00:21:39,540 --> 00:21:43,350
and registered it and so now I didn't

423
00:21:43,350 --> 00:21:47,340
Lee have that add a valid URL so it's no

424
00:21:47,340 --> 00:21:50,100
longer in my Etsy hosts but it is still

425
00:21:50,100 --> 00:21:52,290
working so you think about everything

426
00:21:52,290 --> 00:21:54,510
was happening right there and it all

427
00:21:54,510 --> 00:21:58,160
happened within a couple of minutes

428
00:21:58,160 --> 00:22:01,050
there's probably more I can do it would

429
00:22:01,050 --> 00:22:03,549
be nice to secure this and so this is

430
00:22:03,549 --> 00:22:07,029
less section here in values so let's

431
00:22:07,029 --> 00:22:11,470
fill that out and see what happens so I

432
00:22:11,470 --> 00:22:17,980
so at least said that that I think

433
00:22:17,980 --> 00:22:21,820
that's what I need and then this will

434
00:22:21,820 --> 00:22:28,049
call my name I mean there are some

435
00:22:28,049 --> 00:22:35,440
annotations I need to make for the let's

436
00:22:35,440 --> 00:22:39,580
encrypt and surf manager operator on

437
00:22:39,580 --> 00:22:41,230
criminals will work together to create a

438
00:22:41,230 --> 00:22:43,210
certificate for me and put that

439
00:22:43,210 --> 00:22:46,239
certificate into a secret but I need to

440
00:22:46,239 --> 00:22:51,070
tell the cert manager operator that what

441
00:22:51,070 --> 00:22:53,649
I wanted to do and so I'm gonna cheat a

442
00:22:53,649 --> 00:22:57,029
little bit and I have some existing

443
00:22:57,029 --> 00:23:00,369
charts here with some annotations that I

444
00:23:00,369 --> 00:23:03,519
already have and so I just need to grab

445
00:23:03,519 --> 00:23:07,330
these guys right here and I tend to add

446
00:23:07,330 --> 00:23:09,999
this because anything using

447
00:23:09,999 --> 00:23:12,549
authentication tends to overload the

448
00:23:12,549 --> 00:23:14,799
nginx default proxy so I almost always

449
00:23:14,799 --> 00:23:22,600
add this in as well let me do that and

450
00:23:22,600 --> 00:23:24,489
these are annotations that will end up

451
00:23:24,489 --> 00:23:27,220
in the ingress resource and you can see

452
00:23:27,220 --> 00:23:29,799
here it is saying okay I want this to

453
00:23:29,799 --> 00:23:31,840
like I want to tell certain manager

454
00:23:31,840 --> 00:23:34,179
about this and I'm gonna say what

455
00:23:34,179 --> 00:23:36,009
cluster issuer I need so I can set up

456
00:23:36,009 --> 00:23:40,359
different issuers with different CA cell

457
00:23:40,359 --> 00:23:41,799
phone either self-signed if I want to

458
00:23:41,799 --> 00:23:44,440
use a real certificate this is all set

459
00:23:44,440 --> 00:23:48,269
up to use my again it uses my Google DNS

460
00:23:48,269 --> 00:23:51,309
as like a chat as the Acme challenge

461
00:23:51,309 --> 00:23:53,259
so let's encrypt will confirm that I own

462
00:23:53,259 --> 00:23:54,899
this domain before it gives me a

463
00:23:54,899 --> 00:23:58,119
certificate and so I think this is all I

464
00:23:58,119 --> 00:24:00,749
need and I can go ahead and do another

465
00:24:00,749 --> 00:24:11,559
upgrade and we'll see what happens and

466
00:24:11,559 --> 00:24:12,820
you can see it's doing things like

467
00:24:12,820 --> 00:24:15,299
keeping track of the revisions

468
00:24:15,299 --> 00:24:17,639
and you can also see it's now giving me

469
00:24:17,639 --> 00:24:22,830
HTTP here for my URL so it's seen that

470
00:24:22,830 --> 00:24:25,669
I've enabled TLS and it is updated that

471
00:24:25,669 --> 00:24:28,919
so that's pretty handy I'm gonna expect

472
00:24:28,919 --> 00:24:30,779
it to take a few minutes so this will

473
00:24:30,779 --> 00:24:36,690
probably fail and in fact it does and so

474
00:24:36,690 --> 00:24:42,029
what's happening here is the nginx

475
00:24:42,029 --> 00:24:44,570
ingress controller has like a default

476
00:24:44,570 --> 00:24:47,039
unsigned certificate that I will use if

477
00:24:47,039 --> 00:24:48,690
it's still waiting to get a real

478
00:24:48,690 --> 00:24:51,359
certificate just so that I can at least

479
00:24:51,359 --> 00:24:54,629
test things but if I I wish to go to my

480
00:24:54,629 --> 00:24:58,440
browser and plug this in let's open it

481
00:24:58,440 --> 00:25:01,919
in a new browser tab you know we get

482
00:25:01,919 --> 00:25:05,999
that usual potential security risk will

483
00:25:05,999 --> 00:25:09,480
Yolo that and right so there it is it is

484
00:25:09,480 --> 00:25:12,720
HTTPS being think we have that warning

485
00:25:12,720 --> 00:25:14,429
there because it's a self-signed

486
00:25:14,429 --> 00:25:17,970
certificate and so we'll try again in a

487
00:25:17,970 --> 00:25:20,399
few minutes and see where that's at hey

488
00:25:20,399 --> 00:25:22,950
Paul so we have about five minutes left

489
00:25:22,950 --> 00:25:26,580
so I in the Q&A section and yeah you

490
00:25:26,580 --> 00:25:28,590
know wow that may be update we can maybe

491
00:25:28,590 --> 00:25:31,409
see at the very end here if you know

492
00:25:31,409 --> 00:25:35,549
that resolves the SSL issue so we do

493
00:25:35,549 --> 00:25:37,440
have one question so far so you

494
00:25:37,440 --> 00:25:40,889
mentioned how there is Jib for a way of

495
00:25:40,889 --> 00:25:42,989
creating a java image tool that Google

496
00:25:42,989 --> 00:25:46,440
Offers yeah there is there one for like

497
00:25:46,440 --> 00:25:49,230
dotnet are is there one for maybe other

498
00:25:49,230 --> 00:25:51,539
languages that aren't Java yeah

499
00:25:51,539 --> 00:25:54,629
absolutely there's a few ways you can do

500
00:25:54,629 --> 00:25:55,830
it

501
00:25:55,830 --> 00:25:57,869
and of course off the top of my head I'm

502
00:25:57,869 --> 00:25:59,580
not going to think of them I think

503
00:25:59,580 --> 00:26:02,639
Red Hat has a tool called pod man which

504
00:26:02,639 --> 00:26:04,169
doesn't use docker instead of a

505
00:26:04,169 --> 00:26:06,659
replacement for docker and that will let

506
00:26:06,659 --> 00:26:08,340
you build images without needing a

507
00:26:08,340 --> 00:26:10,940
docker daemon running and it will do it

508
00:26:10,940 --> 00:26:15,509
without needing escalated privileges you

509
00:26:15,509 --> 00:26:17,970
don't need to run anything is roof and I

510
00:26:17,970 --> 00:26:19,590
believe that's a full replacement for

511
00:26:19,590 --> 00:26:21,359
docker so you could literally on a red

512
00:26:21,359 --> 00:26:24,179
hat box do alias docker equals pod my

513
00:26:24,179 --> 00:26:25,889
head and use it exactly like it was

514
00:26:25,889 --> 00:26:28,920
docker there is also a project from goo

515
00:26:28,920 --> 00:26:31,710
all which I can't remember its name but

516
00:26:31,710 --> 00:26:34,080
it will do it straight from dhaka files

517
00:26:34,080 --> 00:26:38,370
and build images without needing docker

518
00:26:38,370 --> 00:26:42,750
and kanuk oh I think it's spelled with a

519
00:26:42,750 --> 00:26:45,330
k and that's often used inside of

520
00:26:45,330 --> 00:26:48,780
kubernetes when you want to build images

521
00:26:48,780 --> 00:26:50,670
from like a CI system that's running

522
00:26:50,670 --> 00:26:53,100
inside of kubernetes you don't want to

523
00:26:53,100 --> 00:26:55,440
give access to you know root on the host

524
00:26:55,440 --> 00:26:56,910
system you don't get access to the

525
00:26:56,910 --> 00:26:59,160
doctor Damon on the host system so using

526
00:26:59,160 --> 00:27:01,920
a tool like can't can echo or using pod

527
00:27:01,920 --> 00:27:04,860
man or using a tool like Jim gives you

528
00:27:04,860 --> 00:27:07,800
another way to to do that in a non

529
00:27:07,800 --> 00:27:10,860
privileged way and so generally speaking

530
00:27:10,860 --> 00:27:13,500
I'll reach for one of those if I'm doing

531
00:27:13,500 --> 00:27:17,730
something in the CI CD realm okay yeah

532
00:27:17,730 --> 00:27:21,060
nice yeah I learned a lot about helm

533
00:27:21,060 --> 00:27:24,480
charts we're like for me up until this

534
00:27:24,480 --> 00:27:26,280
presentation helmet Arcturus looks like

535
00:27:26,280 --> 00:27:29,550
mostly a word that I heard a few times

536
00:27:29,550 --> 00:27:32,580
and I very very lightly touched at one

537
00:27:32,580 --> 00:27:34,860
time but that makes sense like it's kind

538
00:27:34,860 --> 00:27:38,580
of like higher-level recipes or scripts

539
00:27:38,580 --> 00:27:40,470
for putting together more composed

540
00:27:40,470 --> 00:27:42,330
applications this is kind of adding more

541
00:27:42,330 --> 00:27:44,910
and more layers on to what you know

542
00:27:44,910 --> 00:27:46,650
kubernetes done yet containers you have

543
00:27:46,650 --> 00:27:47,970
goober names and you have now helm

544
00:27:47,970 --> 00:27:49,920
charts to kind of continue they kind of

545
00:27:49,920 --> 00:27:51,990
stack this layer so that way you don't

546
00:27:51,990 --> 00:27:54,420
have to worry as much about the lower

547
00:27:54,420 --> 00:27:57,000
levels behind that yeah that's right and

548
00:27:57,000 --> 00:27:58,620
you know what I haven't shown you is

549
00:27:58,620 --> 00:28:01,650
actually creating a shareable artifact

550
00:28:01,650 --> 00:28:03,630
is quite simple you do home package and

551
00:28:03,630 --> 00:28:06,360
it'll create a sign to tarball and then

552
00:28:06,360 --> 00:28:08,490
to a host your own home repository is

553
00:28:08,490 --> 00:28:11,700
literally a static website with a index

554
00:28:11,700 --> 00:28:15,390
file and then a list of charts are those

555
00:28:15,390 --> 00:28:17,970
those chart packages and the home the

556
00:28:17,970 --> 00:28:20,900
helm project team has actually built

557
00:28:20,900 --> 00:28:23,340
cooling including all the github actions

558
00:28:23,340 --> 00:28:25,320
required to build that out from your own

559
00:28:25,320 --> 00:28:30,000
chancery boat and so I took JJ s car

560
00:28:30,000 --> 00:28:32,310
through it the other week and within

561
00:28:32,310 --> 00:28:34,290
like two hours would built a helm chart

562
00:28:34,290 --> 00:28:36,330
and actually while hosting it on a

563
00:28:36,330 --> 00:28:39,750
public helmet repo on github pages as

564
00:28:39,750 --> 00:28:41,520
long as that's you know quite quite

565
00:28:41,520 --> 00:28:42,919
amazing you can

566
00:28:42,919 --> 00:28:46,159
quickly yeah yeah definitely I'd say you

567
00:28:46,159 --> 00:28:48,859
know share that in the track called

568
00:28:48,859 --> 00:28:51,980
cloud native chat in the slack and you

569
00:28:51,980 --> 00:28:54,169
know wants to maybe post that out on

570
00:28:54,169 --> 00:28:55,970
your Twitter so people who maybe were

571
00:28:55,970 --> 00:28:57,289
watching this can also kind of check

572
00:28:57,289 --> 00:28:58,429
that out cuz like I'll definitely be

573
00:28:58,429 --> 00:29:01,070
interested because for me always kind of

574
00:29:01,070 --> 00:29:02,480
need like maybe some sort of simple

575
00:29:02,480 --> 00:29:05,509
example something actually in use to

576
00:29:05,509 --> 00:29:06,980
really understand it because like

577
00:29:06,980 --> 00:29:08,419
sometimes like okay I can read it but

578
00:29:08,419 --> 00:29:10,700
then I'm like how does this all actually

579
00:29:10,700 --> 00:29:12,559
work together so I'm sort of that'll be

580
00:29:12,559 --> 00:29:14,480
helpful for me I'm sir be helpful for

581
00:29:14,480 --> 00:29:17,269
many other people as well yeah that's

582
00:29:17,269 --> 00:29:17,690
right

583
00:29:17,690 --> 00:29:19,190
and I actually just checked and the

584
00:29:19,190 --> 00:29:22,609
certificate is now correct and resolving

585
00:29:22,609 --> 00:29:24,980
and so awesome website is now fully

586
00:29:24,980 --> 00:29:28,450
secure as much as a website can be I

587
00:29:28,450 --> 00:29:31,580
send you that my credit card number and

588
00:29:31,580 --> 00:29:33,499
so yeah absolutely everything yeah okay

589
00:29:33,499 --> 00:29:36,019
cool so I dumped the link to that in the

590
00:29:36,019 --> 00:29:38,720
cloud native track slack so if anyone

591
00:29:38,720 --> 00:29:41,899
wants to test the veracity of my claims

592
00:29:41,899 --> 00:29:44,659
they are more than welcome to if you're

593
00:29:44,659 --> 00:29:47,059
it's not enough to hack me I would

594
00:29:47,059 --> 00:29:50,480
appreciate it if you didn't yeah it's

595
00:29:50,480 --> 00:29:52,419
the Internet so are you best

596
00:29:52,419 --> 00:29:54,769
awesome all right well thank you very

597
00:29:54,769 --> 00:29:57,200
much Paul and we'll go ahead and keep on

598
00:29:57,200 --> 00:29:59,980
rolling here now

