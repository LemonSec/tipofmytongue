1
00:00:07,530 --> 00:00:10,730
[Music]

2
00:00:12,400 --> 00:00:12,960
hi

3
00:00:12,960 --> 00:00:15,839
welcome to our session at devsecond24

4
00:00:15,839 --> 00:00:17,520
we're here to talk about avoiding

5
00:00:17,520 --> 00:00:20,080
infrastructure as code misconfigurations

6
00:00:20,080 --> 00:00:21,840
everything you'll see in this session is

7
00:00:21,840 --> 00:00:23,359
open source by checkmarks

8
00:00:23,359 --> 00:00:25,119
you're welcome to check our code

9
00:00:25,119 --> 00:00:27,199
security policies and feature requests

10
00:00:27,199 --> 00:00:28,240
on github

11
00:00:28,240 --> 00:00:29,679
of course you're welcome to join us

12
00:00:29,679 --> 00:00:31,279
community as well

13
00:00:31,279 --> 00:00:35,040
heal me i'm leo capsory i'm leo kaplan

14
00:00:35,040 --> 00:00:36,800
head of open source for check marks and

15
00:00:36,800 --> 00:00:38,879
here with me are ori and mark

16
00:00:38,879 --> 00:00:41,280
ori

17
00:00:42,399 --> 00:00:45,680
thanks leo

18
00:00:45,680 --> 00:00:47,280
so let me introduce myself my name is

19
00:00:47,280 --> 00:00:48,879
ori bandit and i'm the director of

20
00:00:48,879 --> 00:00:50,000
product management

21
00:00:50,000 --> 00:00:53,840
and together here with me is also mark

22
00:00:54,320 --> 00:00:56,719
hi guys my name is mark i'm a software

23
00:00:56,719 --> 00:00:58,239
development manager

24
00:00:58,239 --> 00:01:00,879
check marks

25
00:01:05,280 --> 00:01:07,920
42 this is the number that i want you to

26
00:01:07,920 --> 00:01:08,880
remember

27
00:01:08,880 --> 00:01:10,560
and what does it mean it means that

28
00:01:10,560 --> 00:01:12,560
probably your infrastructure's code

29
00:01:12,560 --> 00:01:13,280
contains

30
00:01:13,280 --> 00:01:16,080
at least one misconfiguration and this

31
00:01:16,080 --> 00:01:17,680
is coming from a research that we will

32
00:01:17,680 --> 00:01:19,360
talk about later today

33
00:01:19,360 --> 00:01:22,720
but in a research that was done in 2020

34
00:01:22,720 --> 00:01:24,479
almost half of the cloud formation

35
00:01:24,479 --> 00:01:26,640
configuration fund had at least

36
00:01:26,640 --> 00:01:29,680
one insecure configuration and today

37
00:01:29,680 --> 00:01:32,000
we are going to talk about how you can

38
00:01:32,000 --> 00:01:32,880
prevent

39
00:01:32,880 --> 00:01:34,880
those misconfiguration as early in the

40
00:01:34,880 --> 00:01:36,320
cycle as possible

41
00:01:36,320 --> 00:01:39,119
using kicks so let's start with the

42
00:01:39,119 --> 00:01:41,119
basics let's try and understand what are

43
00:01:41,119 --> 00:01:42,880
cloud native applications so here you

44
00:01:42,880 --> 00:01:43,759
can see the

45
00:01:43,759 --> 00:01:45,920
cloud native definition from our friends

46
00:01:45,920 --> 00:01:47,040
at cloud native

47
00:01:47,040 --> 00:01:48,880
computing foundation where they are

48
00:01:48,880 --> 00:01:51,040
saying that cloud native technologies

49
00:01:51,040 --> 00:01:53,200
empower organization to build scalable

50
00:01:53,200 --> 00:01:54,320
application

51
00:01:54,320 --> 00:01:56,640
and the technologies con contains

52
00:01:56,640 --> 00:01:57,520
containers

53
00:01:57,520 --> 00:02:00,479
service mesh up microservices immutable

54
00:02:00,479 --> 00:02:01,280
infrastructure

55
00:02:01,280 --> 00:02:04,320
and declarative apis and if you are

56
00:02:04,320 --> 00:02:06,240
stating for an application to be cloud

57
00:02:06,240 --> 00:02:08,000
native it is specifically designed

58
00:02:08,000 --> 00:02:10,878
to provide consistent development in an

59
00:02:10,878 --> 00:02:12,400
automated way across the different

60
00:02:12,400 --> 00:02:13,200
clouds and

61
00:02:13,200 --> 00:02:15,680
in some cases also a combination of the

62
00:02:15,680 --> 00:02:16,239
different

63
00:02:16,239 --> 00:02:19,599
cloud so what is the difference of

64
00:02:19,599 --> 00:02:22,400
cloud native application compared to

65
00:02:22,400 --> 00:02:24,160
traditional applications

66
00:02:24,160 --> 00:02:26,160
where cloud native system the

67
00:02:26,160 --> 00:02:28,160
application source code that we are so

68
00:02:28,160 --> 00:02:29,840
used to scanning up to now

69
00:02:29,840 --> 00:02:32,319
is becoming only one building load it's

70
00:02:32,319 --> 00:02:34,239
only one piece of the puzzle

71
00:02:34,239 --> 00:02:36,720
where cloud native applications is

72
00:02:36,720 --> 00:02:38,400
saving and managing

73
00:02:38,400 --> 00:02:40,480
everything is code it's obviously still

74
00:02:40,480 --> 00:02:42,080
the application source code

75
00:02:42,080 --> 00:02:45,040
but much more we see container we see

76
00:02:45,040 --> 00:02:47,040
orchestrators we see network we see

77
00:02:47,040 --> 00:02:47,920
firewall

78
00:02:47,920 --> 00:02:51,040
and as we are going to talk today also

79
00:02:51,040 --> 00:02:54,319
infrastructure is code and if everything

80
00:02:54,319 --> 00:02:56,239
is now called we can benefit

81
00:02:56,239 --> 00:02:58,640
from managing it as code it means that

82
00:02:58,640 --> 00:03:01,040
we can automate it we can apply github's

83
00:03:01,040 --> 00:03:01,840
practices

84
00:03:01,840 --> 00:03:04,159
we can have code reviews we can run

85
00:03:04,159 --> 00:03:05,200
different tools and

86
00:03:05,200 --> 00:03:08,400
analysis on that and we can test it and

87
00:03:08,400 --> 00:03:10,879
make sure that it is up to the quality

88
00:03:10,879 --> 00:03:13,040
that we want

89
00:03:13,040 --> 00:03:16,159
forester refers to it um is going beyond

90
00:03:16,159 --> 00:03:18,319
the traditional definition of code

91
00:03:18,319 --> 00:03:20,640
and in their last the first wave that

92
00:03:20,640 --> 00:03:22,080
was released

93
00:03:22,080 --> 00:03:25,599
last quarter in q1 of 2021 they defined

94
00:03:25,599 --> 00:03:26,159
it

95
00:03:26,159 --> 00:03:28,640
when developers that the fact that now

96
00:03:28,640 --> 00:03:29,840
developers are using

97
00:03:29,840 --> 00:03:31,680
infrastructures code to define cloud

98
00:03:31,680 --> 00:03:32,959
configuration

99
00:03:32,959 --> 00:03:36,159
and once you and your company

100
00:03:36,159 --> 00:03:39,519
move to this new type of um code

101
00:03:39,519 --> 00:03:42,319
you need to find the right tools to scan

102
00:03:42,319 --> 00:03:44,319
those new types of vulnerabilities and

103
00:03:44,319 --> 00:03:47,920
in those new type of code going beyond

104
00:03:47,920 --> 00:03:50,400
the traditional definition of code now

105
00:03:50,400 --> 00:03:51,440
let's talk about

106
00:03:51,440 --> 00:03:53,439
what is infrastructures code so

107
00:03:53,439 --> 00:03:55,040
infrastructure is code is the process of

108
00:03:55,040 --> 00:03:56,560
managing and provisioning software

109
00:03:56,560 --> 00:03:58,959
through machine readable definition file

110
00:03:58,959 --> 00:04:01,840
rather than doing this work manually or

111
00:04:01,840 --> 00:04:02,159
in

112
00:04:02,159 --> 00:04:03,920
interactive mode if we were talking

113
00:04:03,920 --> 00:04:05,680
about five or ten years ago

114
00:04:05,680 --> 00:04:07,760
so the development team would finish the

115
00:04:07,760 --> 00:04:09,680
development come to central i.t and tell

116
00:04:09,680 --> 00:04:10,480
them listen

117
00:04:10,480 --> 00:04:12,959
i need this infrastructure this database

118
00:04:12,959 --> 00:04:14,879
this application instance and

119
00:04:14,879 --> 00:04:17,839
a couple of weeks later it would come

120
00:04:17,839 --> 00:04:18,399
back and

121
00:04:18,399 --> 00:04:20,399
bring them this infrastructure and then

122
00:04:20,399 --> 00:04:21,680
they would be able

123
00:04:21,680 --> 00:04:23,440
uh to deploy their application and

124
00:04:23,440 --> 00:04:25,600
infrastructures code allows us to

125
00:04:25,600 --> 00:04:28,080
simply automate this entire process

126
00:04:28,080 --> 00:04:29,199
making sure that it's

127
00:04:29,199 --> 00:04:32,080
up to date and it can keep up with the

128
00:04:32,080 --> 00:04:32,800
speed

129
00:04:32,800 --> 00:04:35,280
of devops or dev circles infrastructure

130
00:04:35,280 --> 00:04:36,880
score that allows us to

131
00:04:36,880 --> 00:04:39,600
speed up reduce the cost and eliminate

132
00:04:39,600 --> 00:04:40,960
the inconsistency

133
00:04:40,960 --> 00:04:43,120
simply because we are using the same

134
00:04:43,120 --> 00:04:45,440
recipe or the same configuration

135
00:04:45,440 --> 00:04:47,759
over and over to deploy the same

136
00:04:47,759 --> 00:04:48,960
infrastructure

137
00:04:48,960 --> 00:04:52,160
using the same tool in the same manner

138
00:04:52,160 --> 00:04:54,720
however as we saw at the beginning

139
00:04:54,720 --> 00:04:56,720
infrastructure is called security

140
00:04:56,720 --> 00:04:59,680
is a concern in a research that was done

141
00:04:59,680 --> 00:05:01,520
by unit 42

142
00:05:01,520 --> 00:05:05,199
from palo alto last year in 2020 they

143
00:05:05,199 --> 00:05:06,800
tested over 200

144
00:05:06,800 --> 00:05:09,280
000 different infrastructure as code

145
00:05:09,280 --> 00:05:10,240
templates

146
00:05:10,240 --> 00:05:13,120
and the findings was very troubling to

147
00:05:13,120 --> 00:05:14,960
anyone who cares about application

148
00:05:14,960 --> 00:05:15,840
security

149
00:05:15,840 --> 00:05:17,919
or infrastructure security and

150
00:05:17,919 --> 00:05:19,039
whatsoever

151
00:05:19,039 --> 00:05:21,759
as we saw so the first thing and you can

152
00:05:21,759 --> 00:05:24,080
see here the link to the full research

153
00:05:24,080 --> 00:05:27,120
48 of the as aws

154
00:05:27,120 --> 00:05:30,080
um s3 buckets did not have any server

155
00:05:30,080 --> 00:05:31,280
side encryption

156
00:05:31,280 --> 00:05:33,919
42 of cloud formation as we discussed

157
00:05:33,919 --> 00:05:34,800
had at least

158
00:05:34,800 --> 00:05:39,120
one insecure configuration and 55

159
00:05:39,120 --> 00:05:41,520
of the cloud user defined and three

160
00:05:41,520 --> 00:05:43,919
buckets did not have any logging enabled

161
00:05:43,919 --> 00:05:46,160
and we are going to talk about today

162
00:05:46,160 --> 00:05:47,280
what does it mean

163
00:05:47,280 --> 00:05:49,520
how is this possesses a threat to your

164
00:05:49,520 --> 00:05:51,600
application and to your infrastructure

165
00:05:51,600 --> 00:05:55,600
and how you can prevent those upfront

166
00:05:55,600 --> 00:05:58,800
so this is a typical cloud architecture

167
00:05:58,800 --> 00:06:00,639
i'm sure that all of you have seen

168
00:06:00,639 --> 00:06:03,919
other a more complex more simpler cloud

169
00:06:03,919 --> 00:06:05,280
architecture

170
00:06:05,280 --> 00:06:08,960
everything is a covered in the vpc the

171
00:06:08,960 --> 00:06:10,720
virtual private cloud we have the

172
00:06:10,720 --> 00:06:11,520
gateway

173
00:06:11,520 --> 00:06:13,360
we have some load balancer we have the

174
00:06:13,360 --> 00:06:15,360
waft the web application firewall

175
00:06:15,360 --> 00:06:18,080
the application instances and obviously

176
00:06:18,080 --> 00:06:18,720
also

177
00:06:18,720 --> 00:06:21,520
the database and with that a

178
00:06:21,520 --> 00:06:22,720
corresponding or

179
00:06:22,720 --> 00:06:25,759
an example of an infrastructure's code

180
00:06:25,759 --> 00:06:26,479
file

181
00:06:26,479 --> 00:06:29,600
here you can see an aws cloud formation

182
00:06:29,600 --> 00:06:33,120
that deploys simply um

183
00:06:33,120 --> 00:06:36,560
in a sample application on awas

184
00:06:36,560 --> 00:06:39,600
um using aws cloudformation obviously

185
00:06:39,600 --> 00:06:41,440
the web is full of other

186
00:06:41,440 --> 00:06:45,360
um very useful resources and example

187
00:06:45,360 --> 00:06:48,080
but this is just one example so this

188
00:06:48,080 --> 00:06:50,160
concludes kind of the intro so we talked

189
00:06:50,160 --> 00:06:52,160
about what is cloud native

190
00:06:52,160 --> 00:06:53,840
what is the difference of cloud native

191
00:06:53,840 --> 00:06:55,199
application what is

192
00:06:55,199 --> 00:06:58,000
infrastructure scott why is it a concern

193
00:06:58,000 --> 00:06:58,319
and

194
00:06:58,319 --> 00:07:01,440
now let's see how um you can

195
00:07:01,440 --> 00:07:04,000
solve it and how you can prevent the

196
00:07:04,000 --> 00:07:06,080
those infrastructures code

197
00:07:06,080 --> 00:07:09,360
security risks so i will now end over to

198
00:07:09,360 --> 00:07:09,919
mark

199
00:07:09,919 --> 00:07:16,560
mark go ahead

200
00:07:16,560 --> 00:07:19,039
okay so let me introduce kicks which

201
00:07:19,039 --> 00:07:21,440
stands for keeping infrastructure

202
00:07:21,440 --> 00:07:24,479
is called secure open source engine that

203
00:07:24,479 --> 00:07:26,479
we developed in check marks

204
00:07:26,479 --> 00:07:29,520
kick scans and finds misconfigurations

205
00:07:29,520 --> 00:07:31,440
and potential vulnerabilities in

206
00:07:31,440 --> 00:07:33,120
infrastructure code

207
00:07:33,120 --> 00:07:35,680
it supports all major cloud providers

208
00:07:35,680 --> 00:07:37,919
and infrastructure score technologies

209
00:07:37,919 --> 00:07:40,880
such as aws cloud formation ansible

210
00:07:40,880 --> 00:07:42,080
kubernetes

211
00:07:42,080 --> 00:07:46,000
terraform docker open api and grpc

212
00:07:46,000 --> 00:07:49,199
support is coming soon we can see here

213
00:07:49,199 --> 00:07:51,720
that kicks is finding security

214
00:07:51,720 --> 00:07:53,039
misconfigurations

215
00:07:53,039 --> 00:07:55,280
by applying security policies across

216
00:07:55,280 --> 00:07:56,479
different types

217
00:07:56,479 --> 00:07:58,960
we can see here that it finds things

218
00:07:58,960 --> 00:08:00,960
related to access control

219
00:08:00,960 --> 00:08:02,960
availability insecure defaults

220
00:08:02,960 --> 00:08:04,479
networking firewall

221
00:08:04,479 --> 00:08:07,360
everything that is important to us in

222
00:08:07,360 --> 00:08:08,960
order to be confident

223
00:08:08,960 --> 00:08:11,039
when we deploying our applications to

224
00:08:11,039 --> 00:08:12,800
cloud providers

225
00:08:12,800 --> 00:08:15,919
it has great coverage and supports more

226
00:08:15,919 --> 00:08:18,879
than 15 hundreds of security policies

227
00:08:18,879 --> 00:08:22,240
we can say that it's coverage the most

228
00:08:22,240 --> 00:08:23,520
coverage in the market

229
00:08:23,520 --> 00:08:26,879
at the moment we can see here a simple

230
00:08:26,879 --> 00:08:27,520
example

231
00:08:27,520 --> 00:08:31,280
of vulnerability that kicks can find

232
00:08:31,280 --> 00:08:34,799
here we can see the ssh 422 is left

233
00:08:34,799 --> 00:08:37,039
open leaving the possibility of

234
00:08:37,039 --> 00:08:38,559
unauthorized access

235
00:08:38,559 --> 00:08:40,640
poor scanning attacks and remote

236
00:08:40,640 --> 00:08:41,599
takeover

237
00:08:41,599 --> 00:08:44,399
of our infrastructure so once we

238
00:08:44,399 --> 00:08:46,320
introduce kicks and understood better

239
00:08:46,320 --> 00:08:48,399
how it works behind the scenes

240
00:08:48,399 --> 00:08:51,200
let's see some demo i will share my

241
00:08:51,200 --> 00:08:54,640
terminal screen

242
00:08:54,640 --> 00:08:58,320
i will start the kick scanning

243
00:08:58,320 --> 00:09:00,399
on the sample project which is called

244
00:09:00,399 --> 00:09:02,160
tara got

245
00:09:02,160 --> 00:09:05,279
which contains different vulnerabilities

246
00:09:05,279 --> 00:09:08,640
the report is going to be html report

247
00:09:08,640 --> 00:09:10,560
and they will take a look how it looks

248
00:09:10,560 --> 00:09:13,600
like so here we can see a short summary

249
00:09:13,600 --> 00:09:14,800
of findings

250
00:09:14,800 --> 00:09:17,440
supported by kicks we can see high

251
00:09:17,440 --> 00:09:19,440
severity vulnerabilities

252
00:09:19,440 --> 00:09:22,240
medium ones and also lower informational

253
00:09:22,240 --> 00:09:24,399
vulnerabilities as well

254
00:09:24,399 --> 00:09:27,680
so once the results are saved to

255
00:09:27,680 --> 00:09:30,959
html file they can actually see

256
00:09:30,959 --> 00:09:34,000
how it looks like so those

257
00:09:34,000 --> 00:09:37,120
are kicks results we can see the summary

258
00:09:37,120 --> 00:09:38,720
of vulnerabilities across

259
00:09:38,720 --> 00:09:41,839
different severities and we can see all

260
00:09:41,839 --> 00:09:43,600
those examples of things

261
00:09:43,600 --> 00:09:47,040
that are important to us to find before

262
00:09:47,040 --> 00:09:49,360
we are deploying our infrastructure to

263
00:09:49,360 --> 00:09:50,240
cloud

264
00:09:50,240 --> 00:09:52,560
for example we can see here db instance

265
00:09:52,560 --> 00:09:53,839
which is accessible to

266
00:09:53,839 --> 00:09:57,040
entire world we see something related to

267
00:09:57,040 --> 00:09:59,120
storage encryption which could be

268
00:09:59,120 --> 00:10:01,360
important to us to make sure that we are

269
00:10:01,360 --> 00:10:02,640
encrypting

270
00:10:02,640 --> 00:10:05,040
we can see things related to public

271
00:10:05,040 --> 00:10:07,120
access to ec2 instances

272
00:10:07,120 --> 00:10:10,320
and many other things that defined

273
00:10:10,320 --> 00:10:13,920
with the help of kicks so once we have

274
00:10:13,920 --> 00:10:17,200
this example of running kicks in a

275
00:10:17,200 --> 00:10:19,519
dog fashion let's see how we can

276
00:10:19,519 --> 00:10:20,480
integrate it

277
00:10:20,480 --> 00:10:24,160
in our cict pipeline we can go here

278
00:10:24,160 --> 00:10:27,839
and see the example of kicks integration

279
00:10:27,839 --> 00:10:31,040
into gitlab cicd pipeline

280
00:10:31,040 --> 00:10:34,640
in which we basically have two steps

281
00:10:34,640 --> 00:10:39,439
we have the step of running the kicks

282
00:10:39,519 --> 00:10:42,079
on our infrastructure and the second

283
00:10:42,079 --> 00:10:42,959
step

284
00:10:42,959 --> 00:10:46,240
is basically passing its result

285
00:10:46,240 --> 00:10:48,079
and understanding if we have

286
00:10:48,079 --> 00:10:49,440
vulnerabilities

287
00:10:49,440 --> 00:10:52,720
that we need to keep to fix before we

288
00:10:52,720 --> 00:10:52,959
are

289
00:10:52,959 --> 00:10:56,000
applying and our infrastructure to the

290
00:10:56,000 --> 00:10:56,800
cloud

291
00:10:56,800 --> 00:11:00,480
so we can see here that the job was in a

292
00:11:00,480 --> 00:11:02,079
failed state

293
00:11:02,079 --> 00:11:05,279
and it happened because we have we found

294
00:11:05,279 --> 00:11:08,000
high severity vulnerability that we are

295
00:11:08,000 --> 00:11:09,600
demanding to fix

296
00:11:09,600 --> 00:11:12,160
before we are deploying our

297
00:11:12,160 --> 00:11:13,279
infrastructure

298
00:11:13,279 --> 00:11:16,320
to the cloud so this is basic example

299
00:11:16,320 --> 00:11:19,360
how kicks could be integrated into

300
00:11:19,360 --> 00:11:22,160
our ci cd tools and in this one we saw

301
00:11:22,160 --> 00:11:23,760
gitlab integration

302
00:11:23,760 --> 00:11:26,959
which is really intuitive and easy

303
00:11:26,959 --> 00:11:29,600
to follow so let's go back to the

304
00:11:29,600 --> 00:11:30,880
presentation

305
00:11:30,880 --> 00:11:35,519
i will share my slides again

306
00:11:36,000 --> 00:11:40,720
and give you a recap of what we just

307
00:11:40,839 --> 00:11:43,200
saw

308
00:11:43,200 --> 00:11:46,959
so we saw basic integration flow

309
00:11:46,959 --> 00:11:50,079
in which we had some changes done by

310
00:11:50,079 --> 00:11:52,160
developers on one side

311
00:11:52,160 --> 00:11:55,120
committed to the source control to get

312
00:11:55,120 --> 00:11:56,160
to any other

313
00:11:56,160 --> 00:11:59,200
source control repository and from there

314
00:11:59,200 --> 00:12:02,240
the ci cd pipeline is starting

315
00:12:02,240 --> 00:12:05,040
runs kicks in order to make sure that we

316
00:12:05,040 --> 00:12:06,839
don't have any security

317
00:12:06,839 --> 00:12:09,839
vulnerabilities and misconfigurations

318
00:12:09,839 --> 00:12:11,760
and once the check is passed

319
00:12:11,760 --> 00:12:14,800
we can safely deploy our infrastructure

320
00:12:14,800 --> 00:12:18,240
to the cloud environments so

321
00:12:18,240 --> 00:12:20,160
let's talk about some advantages of

322
00:12:20,160 --> 00:12:22,320
kicks first of all as we mentioned

323
00:12:22,320 --> 00:12:24,399
previously it has the largest

324
00:12:24,399 --> 00:12:26,480
infrastructure is called security

325
00:12:26,480 --> 00:12:28,320
policies coverage

326
00:12:28,320 --> 00:12:30,880
it's really easily extensible and you

327
00:12:30,880 --> 00:12:33,839
can add your own queries and policies

328
00:12:33,839 --> 00:12:37,279
in an easy way by using regular language

329
00:12:37,279 --> 00:12:39,600
in addition to presenting the problem

330
00:12:39,600 --> 00:12:40,959
kicks also presents

331
00:12:40,959 --> 00:12:43,920
the solution so we can learn what we

332
00:12:43,920 --> 00:12:45,279
need to fix

333
00:12:45,279 --> 00:12:48,240
in order to resolve our findings that

334
00:12:48,240 --> 00:12:51,040
kicks has found for us

335
00:12:51,040 --> 00:12:53,519
the architecture of kicks is really

336
00:12:53,519 --> 00:12:55,279
simple and robust

337
00:12:55,279 --> 00:12:58,800
and you can add more more cloud

338
00:12:58,800 --> 00:13:00,000
providers and more

339
00:13:00,000 --> 00:13:02,480
infrastructure score technologies in a

340
00:13:02,480 --> 00:13:03,360
really

341
00:13:03,360 --> 00:13:07,279
easy way as we said previously

342
00:13:07,279 --> 00:13:09,680
kicks is an open source project you can

343
00:13:09,680 --> 00:13:11,839
find it on github repository

344
00:13:11,839 --> 00:13:15,880
it has we have really a extensive

345
00:13:15,880 --> 00:13:18,480
documentation that you can follow in

346
00:13:18,480 --> 00:13:21,040
order to get started with kicks

347
00:13:21,040 --> 00:13:23,760
and we can also chat with us on guitar

348
00:13:23,760 --> 00:13:25,760
if you have any suggestions

349
00:13:25,760 --> 00:13:28,240
any feature requests you can go ahead

350
00:13:28,240 --> 00:13:30,320
and chat with us on there

351
00:13:30,320 --> 00:13:33,279
here you can see the qr code just go

352
00:13:33,279 --> 00:13:34,240
ahead

353
00:13:34,240 --> 00:13:38,000
scan it and you can easily find kicks on

354
00:13:38,000 --> 00:13:38,959
github

355
00:13:38,959 --> 00:13:41,760
please don't forget to start kicks on

356
00:13:41,760 --> 00:13:42,560
github

357
00:13:42,560 --> 00:13:45,600
it will really help us to promote it

358
00:13:45,600 --> 00:13:48,000
thank you very much that was east from

359
00:13:48,000 --> 00:13:49,279
my side

360
00:13:49,279 --> 00:13:52,399
thank you thank you mom

361
00:13:52,399 --> 00:13:55,440
so now after we've seen kicks live and

362
00:13:55,440 --> 00:13:57,360
understood how it can help you i'd like

363
00:13:57,360 --> 00:13:58,639
to share with you a couple of more

364
00:13:58,639 --> 00:13:59,199
minutes

365
00:13:59,199 --> 00:14:01,120
of all the resources that you need in

366
00:14:01,120 --> 00:14:03,040
order to have kicks up and running

367
00:14:03,040 --> 00:14:04,560
the first thing that you need in order

368
00:14:04,560 --> 00:14:06,079
to have it up and running

369
00:14:06,079 --> 00:14:08,560
is getting to the website which is

370
00:14:08,560 --> 00:14:10,160
kicks.i o that possesses

371
00:14:10,160 --> 00:14:11,920
all the information that we just

372
00:14:11,920 --> 00:14:13,279
discussed and

373
00:14:13,279 --> 00:14:16,320
much more as you can see you can see

374
00:14:16,320 --> 00:14:18,880
which are the supported platform what

375
00:14:18,880 --> 00:14:20,880
are the attributes that kicks has

376
00:14:20,880 --> 00:14:23,199
and most importantly the link to our

377
00:14:23,199 --> 00:14:24,320
documentation

378
00:14:24,320 --> 00:14:27,040
that will help you to get started and i

379
00:14:27,040 --> 00:14:28,959
do encourage you to go directly to the

380
00:14:28,959 --> 00:14:30,000
installation guide

381
00:14:30,000 --> 00:14:32,240
that brings you on the different

382
00:14:32,240 --> 00:14:33,839
deployment method whether it's the

383
00:14:33,839 --> 00:14:34,560
docker

384
00:14:34,560 --> 00:14:37,680
the binaries or simply forking the

385
00:14:37,680 --> 00:14:39,199
source code from github

386
00:14:39,199 --> 00:14:41,519
it also possesses all the list of the

387
00:14:41,519 --> 00:14:42,320
queries

388
00:14:42,320 --> 00:14:45,040
so what are the policies what are we

389
00:14:45,040 --> 00:14:47,360
supporting what is the documentation

390
00:14:47,360 --> 00:14:50,480
what did we place these queries on you

391
00:14:50,480 --> 00:14:52,240
can obviously download it and share it

392
00:14:52,240 --> 00:14:53,199
with a colleague or

393
00:14:53,199 --> 00:14:55,920
forward it to your manager and each of

394
00:14:55,920 --> 00:14:56,880
our queries

395
00:14:56,880 --> 00:14:58,720
count with the documentation meaning

396
00:14:58,720 --> 00:15:00,320
this is the reference on

397
00:15:00,320 --> 00:15:03,920
what we base this query or this policy

398
00:15:03,920 --> 00:15:06,800
on beside that it also has all the

399
00:15:06,800 --> 00:15:08,240
different integration

400
00:15:08,240 --> 00:15:09,839
so whether you want to have it running

401
00:15:09,839 --> 00:15:12,639
as a pipeline on your azure devops

402
00:15:12,639 --> 00:15:15,920
or your bitbucket jenkins

403
00:15:15,920 --> 00:15:18,880
and github or anything else everything

404
00:15:18,880 --> 00:15:19,600
is there

405
00:15:19,600 --> 00:15:22,240
and documented well so you can have it

406
00:15:22,240 --> 00:15:23,199
up and running

407
00:15:23,199 --> 00:15:25,680
in a matter of minutes if you are

408
00:15:25,680 --> 00:15:26,320
interested

409
00:15:26,320 --> 00:15:29,920
on general kicks and things including

410
00:15:29,920 --> 00:15:31,120
the road map

411
00:15:31,120 --> 00:15:33,279
the plans the issues everything that we

412
00:15:33,279 --> 00:15:35,279
have you can see it here

413
00:15:35,279 --> 00:15:38,560
available in a very nice and intuitive

414
00:15:38,560 --> 00:15:39,040
way

415
00:15:39,040 --> 00:15:40,720
if you want to start contributing to

416
00:15:40,720 --> 00:15:42,240
kicks we have the guide

417
00:15:42,240 --> 00:15:44,800
on how to get started with the

418
00:15:44,800 --> 00:15:45,920
contribution

419
00:15:45,920 --> 00:15:47,839
if you are looking to write your own

420
00:15:47,839 --> 00:15:49,440
policies and queries

421
00:15:49,440 --> 00:15:52,480
then we also have the uh the guide for

422
00:15:52,480 --> 00:15:53,600
that as well

423
00:15:53,600 --> 00:15:56,079
the queries as said are written in rego

424
00:15:56,079 --> 00:15:58,240
you can work with the lego playground

425
00:15:58,240 --> 00:16:01,360
this is very helpful and very easy so

426
00:16:01,360 --> 00:16:03,120
once you get the hang of how to write

427
00:16:03,120 --> 00:16:04,079
the queries

428
00:16:04,079 --> 00:16:06,160
how to write the policies you can add

429
00:16:06,160 --> 00:16:08,079
you can keep them on your own private

430
00:16:08,079 --> 00:16:09,519
repository or

431
00:16:09,519 --> 00:16:11,600
we do encourage you to contribute back

432
00:16:11,600 --> 00:16:13,199
and to open the full request

433
00:16:13,199 --> 00:16:15,120
so we can integrate that with the rest

434
00:16:15,120 --> 00:16:17,040
of the current policies and queries

435
00:16:17,040 --> 00:16:20,079
and that we that we have also available

436
00:16:20,079 --> 00:16:21,920
is the architecture so if you are

437
00:16:21,920 --> 00:16:23,759
looking to give us a test drive and

438
00:16:23,759 --> 00:16:26,320
check what is under the hood so this is

439
00:16:26,320 --> 00:16:27,120
definitely

440
00:16:27,120 --> 00:16:30,959
available and all the information that

441
00:16:30,959 --> 00:16:33,360
you want in order to understand how

442
00:16:33,360 --> 00:16:34,079
kicks

443
00:16:34,079 --> 00:16:37,279
works beside that i also want to share

444
00:16:37,279 --> 00:16:37,920
with you

445
00:16:37,920 --> 00:16:41,440
our repository uh so it is

446
00:16:41,440 --> 00:16:44,320
as mentioned the public repository under

447
00:16:44,320 --> 00:16:45,199
the kicks dot

448
00:16:45,199 --> 00:16:48,560
so under the main check marks account

449
00:16:48,560 --> 00:16:51,519
open and you can see everything the

450
00:16:51,519 --> 00:16:53,360
engine the queries the policies

451
00:16:53,360 --> 00:16:56,079
everything is available there and we are

452
00:16:56,079 --> 00:16:58,800
releasing a new version every two weeks

453
00:16:58,800 --> 00:17:01,199
uh so always make sure that you have

454
00:17:01,199 --> 00:17:02,160
your own

455
00:17:02,160 --> 00:17:04,480
uh latest version you can see the

456
00:17:04,480 --> 00:17:05,520
roadmap here

457
00:17:05,520 --> 00:17:07,919
what we are currently working on um

458
00:17:07,919 --> 00:17:08,720
links to the

459
00:17:08,720 --> 00:17:12,079
getting started and how to reach us so

460
00:17:12,079 --> 00:17:13,839
whether it's on github or you can send

461
00:17:13,839 --> 00:17:16,400
us an email everything is available

462
00:17:16,400 --> 00:17:18,400
if you find an issue or something that

463
00:17:18,400 --> 00:17:19,520
you didn't like or

464
00:17:19,520 --> 00:17:22,240
if you are missing something then we do

465
00:17:22,240 --> 00:17:23,280
encourage you please

466
00:17:23,280 --> 00:17:26,400
open us um an issue

467
00:17:26,400 --> 00:17:29,440
or a bug or a feature request on github

468
00:17:29,440 --> 00:17:31,679
and we do take the feedback from the

469
00:17:31,679 --> 00:17:33,840
community very seriously and we are very

470
00:17:33,840 --> 00:17:35,120
very responsive

471
00:17:35,120 --> 00:17:36,880
you can also see what the teams is

472
00:17:36,880 --> 00:17:38,400
currently working on

473
00:17:38,400 --> 00:17:40,480
what is currently in progress what is

474
00:17:40,480 --> 00:17:42,400
already done and what we have in the

475
00:17:42,400 --> 00:17:43,120
backlog

476
00:17:43,120 --> 00:17:45,120
and we are splitting it into the kick

477
00:17:45,120 --> 00:17:46,559
square with the policies

478
00:17:46,559 --> 00:17:48,320
and also the engine itself so you can

479
00:17:48,320 --> 00:17:50,400
see uh both of that

480
00:17:50,400 --> 00:17:52,400
as well i also want to show you one

481
00:17:52,400 --> 00:17:53,520
example of

482
00:17:53,520 --> 00:17:57,039
our queries the policies themselves so

483
00:17:57,039 --> 00:18:00,559
as mentioned in the advantages sorry

484
00:18:00,559 --> 00:18:03,760
each query count with its own example of

485
00:18:03,760 --> 00:18:05,120
how to remediate

486
00:18:05,120 --> 00:18:08,320
so um beside the metadata of each of the

487
00:18:08,320 --> 00:18:10,160
queries as you can see here

488
00:18:10,160 --> 00:18:12,080
what is the severity what is the query

489
00:18:12,080 --> 00:18:13,840
name what is the platform

490
00:18:13,840 --> 00:18:16,799
what was this query and policy was based

491
00:18:16,799 --> 00:18:17,360
on

492
00:18:17,360 --> 00:18:21,440
it also comes with a test information

493
00:18:21,440 --> 00:18:24,799
both positive and negative examples so

494
00:18:24,799 --> 00:18:25,840
if you will scan

495
00:18:25,840 --> 00:18:28,080
the positive example kicks will find

496
00:18:28,080 --> 00:18:29,760
this vulnerability

497
00:18:29,760 --> 00:18:31,200
and you will if you will scan the

498
00:18:31,200 --> 00:18:33,440
negative one that it will not find and

499
00:18:33,440 --> 00:18:35,600
this is very helpful information

500
00:18:35,600 --> 00:18:38,400
and to help your developers with some of

501
00:18:38,400 --> 00:18:40,080
the remediation

502
00:18:40,080 --> 00:18:42,080
so this is these are the things that i

503
00:18:42,080 --> 00:18:43,200
wanted to share with you

504
00:18:43,200 --> 00:18:46,160
the website and the documentation site

505
00:18:46,160 --> 00:18:48,080
and the actual repository

506
00:18:48,080 --> 00:18:51,039
as mark mentioned if you like us if you

507
00:18:51,039 --> 00:18:52,400
if kicks helps you

508
00:18:52,400 --> 00:18:54,400
please give us a star it will really

509
00:18:54,400 --> 00:18:55,520
help uh

510
00:18:55,520 --> 00:18:57,760
spread the word if something is not

511
00:18:57,760 --> 00:18:58,640
working for you

512
00:18:58,640 --> 00:19:01,200
you don't like it something is missing

513
00:19:01,200 --> 00:19:02,720
please reach us to us

514
00:19:02,720 --> 00:19:05,919
on guitar and we are more

515
00:19:05,919 --> 00:19:08,799
than happy to get any feedback that you

516
00:19:08,799 --> 00:19:09,679
have

517
00:19:09,679 --> 00:19:12,160
we already previously implemented a lot

518
00:19:12,160 --> 00:19:13,919
of feature requests that came from the

519
00:19:13,919 --> 00:19:15,039
community

520
00:19:15,039 --> 00:19:18,320
and and we are very responsive to those

521
00:19:18,320 --> 00:19:19,120
requests

522
00:19:19,120 --> 00:19:22,480
and you can take a look at our um recent

523
00:19:22,480 --> 00:19:25,440
releases and the chain block so you can

524
00:19:25,440 --> 00:19:26,400
definitely

525
00:19:26,400 --> 00:19:29,360
check and see that we are investing a

526
00:19:29,360 --> 00:19:30,480
lot of effort

527
00:19:30,480 --> 00:19:32,640
in the feedback that is coming and with

528
00:19:32,640 --> 00:19:34,000
that i'd like to thank you

529
00:19:34,000 --> 00:19:36,400
for joining us for this session it was a

530
00:19:36,400 --> 00:19:37,280
pleasure of

531
00:19:37,280 --> 00:19:40,799
presenting here in devsecops at 24.

532
00:19:40,799 --> 00:19:42,320
if you have any questions we are more

533
00:19:42,320 --> 00:19:44,559
than happy to answer them now

534
00:19:44,559 --> 00:19:53,120
and thank you very much for listening

