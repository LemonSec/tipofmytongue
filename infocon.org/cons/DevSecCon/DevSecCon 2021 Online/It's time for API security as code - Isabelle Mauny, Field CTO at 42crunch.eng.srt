1
00:00:07,530 --> 00:00:10,730
[Music]

2
00:00:13,360 --> 00:00:15,599
again good morning everyone

3
00:00:15,599 --> 00:00:17,600
and welcome to the session on api

4
00:00:17,600 --> 00:00:19,840
security as code my name is isabel

5
00:00:19,840 --> 00:00:22,560
i'm one of the co-founders and the field

6
00:00:22,560 --> 00:00:24,800
cto at 42 crunch which is a company

7
00:00:24,800 --> 00:00:25,599
doing

8
00:00:25,599 --> 00:00:28,160
api security as you may guess and here

9
00:00:28,160 --> 00:00:30,160
is my twitter if you want to

10
00:00:30,160 --> 00:00:32,320
contact me so what is this uh

11
00:00:32,320 --> 00:00:33,920
presentation about

12
00:00:33,920 --> 00:00:36,559
basically um as you probably know you

13
00:00:36,559 --> 00:00:37,920
make sure you've seen the news

14
00:00:37,920 --> 00:00:40,239
there's a lot of problems around apis

15
00:00:40,239 --> 00:00:40,960
right now

16
00:00:40,960 --> 00:00:43,760
the number of breaches has been going

17
00:00:43,760 --> 00:00:44,000
through

18
00:00:44,000 --> 00:00:47,039
the roof in the past two or three years

19
00:00:47,039 --> 00:00:49,840
and if you're following um api secured

20
00:00:49,840 --> 00:00:50,719
io which is

21
00:00:50,719 --> 00:00:53,120
one of the community sites that we have

22
00:00:53,120 --> 00:00:54,879
at 42 crunch where we

23
00:00:54,879 --> 00:00:57,039
report and educate on all this kind of

24
00:00:57,039 --> 00:00:59,280
problems you'll see you know

25
00:00:59,280 --> 00:01:00,879
very well known brands like the one you

26
00:01:00,879 --> 00:01:02,800
see here on the right being hit

27
00:01:02,800 --> 00:01:06,320
by such problems and if we analyze those

28
00:01:06,320 --> 00:01:08,799
uh we'll see that there's pretty much a

29
00:01:08,799 --> 00:01:11,600
number of problems that always happen

30
00:01:11,600 --> 00:01:13,840
and it's the combination of multiple

31
00:01:13,840 --> 00:01:15,360
things that make it

32
00:01:15,360 --> 00:01:17,360
in general when there is a very large

33
00:01:17,360 --> 00:01:19,439
breach it's never because people have

34
00:01:19,439 --> 00:01:20,720
one problem is because they have a

35
00:01:20,720 --> 00:01:22,479
combination of problems

36
00:01:22,479 --> 00:01:24,720
and those problems will be authorization

37
00:01:24,720 --> 00:01:25,600
problems

38
00:01:25,600 --> 00:01:27,680
data validation problems we still are

39
00:01:27,680 --> 00:01:29,119
not very good at

40
00:01:29,119 --> 00:01:31,280
validating the data coming our way we

41
00:01:31,280 --> 00:01:33,119
trust the information coming our way

42
00:01:33,119 --> 00:01:34,960
all the other way around we're leaking

43
00:01:34,960 --> 00:01:36,240
information that we should not be

44
00:01:36,240 --> 00:01:37,200
leaking

45
00:01:37,200 --> 00:01:39,680
or we have rate limiting problems and

46
00:01:39,680 --> 00:01:40,400
just to

47
00:01:40,400 --> 00:01:42,560
illustrate that i just took one example

48
00:01:42,560 --> 00:01:43,840
which for me

49
00:01:43,840 --> 00:01:46,560
um it is the uh really example of the

50
00:01:46,560 --> 00:01:47,360
year

51
00:01:47,360 --> 00:01:50,000
and and and showed you show you uh you

52
00:01:50,000 --> 00:01:51,520
know what type of problems

53
00:01:51,520 --> 00:01:54,000
they have now what are those problems

54
00:01:54,000 --> 00:01:56,240
and we have classified those problems

55
00:01:56,240 --> 00:02:00,240
um um in in an awash top 10 recently

56
00:02:00,240 --> 00:02:02,880
to recognize the fact that indeed there

57
00:02:02,880 --> 00:02:04,799
are lots of problems and there are not

58
00:02:04,799 --> 00:02:06,399
the same problems that we have with

59
00:02:06,399 --> 00:02:08,000
traditional applications

60
00:02:08,000 --> 00:02:10,800
and the os came up with a brand new list

61
00:02:10,800 --> 00:02:13,200
just focused on on apis

62
00:02:13,200 --> 00:02:14,720
right and and basically there's three

63
00:02:14,720 --> 00:02:16,560
group of problems there authentication

64
00:02:16,560 --> 00:02:18,879
authorization again data control

65
00:02:18,879 --> 00:02:21,120
and and configuration issues so let's

66
00:02:21,120 --> 00:02:22,879
take this one example which is

67
00:02:22,879 --> 00:02:24,959
parlor so you may have heard about

68
00:02:24,959 --> 00:02:25,920
parlor

69
00:02:25,920 --> 00:02:27,840
uh this is something like a social

70
00:02:27,840 --> 00:02:29,440
network um

71
00:02:29,440 --> 00:02:32,959
like equivalent and that came

72
00:02:32,959 --> 00:02:35,519
quite famous with all the the trump

73
00:02:35,519 --> 00:02:37,120
administration and all the problems that

74
00:02:37,120 --> 00:02:38,400
came around

75
00:02:38,400 --> 00:02:41,040
and they came even more you know uh

76
00:02:41,040 --> 00:02:42,400
became even more

77
00:02:42,400 --> 00:02:45,280
uh famous because of this api issue as

78
00:02:45,280 --> 00:02:47,120
you can see here on the right

79
00:02:47,120 --> 00:02:50,239
um i have a whole presentation on many

80
00:02:50,239 --> 00:02:51,840
different issues and what i do is

81
00:02:51,840 --> 00:02:54,560
reference what kind of problems they got

82
00:02:54,560 --> 00:02:56,879
uh according to that top list that just

83
00:02:56,879 --> 00:02:58,080
showed and then you know

84
00:02:58,080 --> 00:03:00,080
it's probably the first one that i see

85
00:03:00,080 --> 00:03:02,239
that has a six out of ten

86
00:03:02,239 --> 00:03:04,400
so what happened there right so there

87
00:03:04,400 --> 00:03:06,159
was a this is a huge breach

88
00:03:06,159 --> 00:03:08,959
we're talking about 70 terabytes of user

89
00:03:08,959 --> 00:03:09,519
data

90
00:03:09,519 --> 00:03:11,599
and and what happened this is really key

91
00:03:11,599 --> 00:03:13,840
to me of what you really really

92
00:03:13,840 --> 00:03:16,560
should not do when you are exposing an

93
00:03:16,560 --> 00:03:19,360
api first of all this is completely open

94
00:03:19,360 --> 00:03:21,840
no authentication to access any of the

95
00:03:21,840 --> 00:03:22,480
posts

96
00:03:22,480 --> 00:03:24,319
which is a social network that people

97
00:03:24,319 --> 00:03:26,080
are doing so if you have access to the

98
00:03:26,080 --> 00:03:28,400
api you have access to all the data

99
00:03:28,400 --> 00:03:30,480
zero rate limiting which means if you

100
00:03:30,480 --> 00:03:31,680
write a little engine

101
00:03:31,680 --> 00:03:33,360
then you can go and retrieve all the

102
00:03:33,360 --> 00:03:35,840
information and to make that easier

103
00:03:35,840 --> 00:03:39,120
um all the ids of the information

104
00:03:39,120 --> 00:03:41,120
information is sequential that means

105
00:03:41,120 --> 00:03:43,120
like if i'm doing a post it's post

106
00:03:43,120 --> 00:03:44,480
number one if someone else is doing a

107
00:03:44,480 --> 00:03:46,319
post maybe number two number three

108
00:03:46,319 --> 00:03:49,440
etc so it's very easy again to write a

109
00:03:49,440 --> 00:03:50,400
little engine

110
00:03:50,400 --> 00:03:52,239
to go and retrieve the information and

111
00:03:52,239 --> 00:03:54,560
of course if there is no rate limiting

112
00:03:54,560 --> 00:03:56,799
then as you can imagine there's nothing

113
00:03:56,799 --> 00:03:57,760
stopping me

114
00:03:57,760 --> 00:04:00,879
from retrieving well a lot of data 70

115
00:04:00,879 --> 00:04:01,920
terabytes

116
00:04:01,920 --> 00:04:03,920
um lots of information which is really

117
00:04:03,920 --> 00:04:05,040
sensitive in there

118
00:04:05,040 --> 00:04:08,560
which you know touches on on on api 3

119
00:04:08,560 --> 00:04:10,239
and data leakage that i was talking

120
00:04:10,239 --> 00:04:11,760
about before

121
00:04:11,760 --> 00:04:15,120
um and maybe the the best one

122
00:04:15,120 --> 00:04:16,798
uh you know really bad ones you were

123
00:04:16,798 --> 00:04:18,478
deleting information so

124
00:04:18,478 --> 00:04:20,399
i guess you know after all the politics

125
00:04:20,399 --> 00:04:22,160
and what happened a lot of people wanted

126
00:04:22,160 --> 00:04:23,280
to delete

127
00:04:23,280 --> 00:04:25,520
some of their posts right but what was

128
00:04:25,520 --> 00:04:27,520
happening is behind the scenes this

129
00:04:27,520 --> 00:04:28,000
would not

130
00:04:28,000 --> 00:04:31,040
delete the data it would just hide it

131
00:04:31,040 --> 00:04:33,759
from the ui so the data was still there

132
00:04:33,759 --> 00:04:35,680
accessible in the back end

133
00:04:35,680 --> 00:04:37,840
through the api which basically meant

134
00:04:37,840 --> 00:04:39,520
you didn't delete it at all right so

135
00:04:39,520 --> 00:04:41,680
this is really very very bad example

136
00:04:41,680 --> 00:04:45,360
of what you must basically

137
00:04:45,360 --> 00:04:48,400
must not do right now why is this

138
00:04:48,400 --> 00:04:50,240
happening so this is an extreme example

139
00:04:50,240 --> 00:04:50,720
again

140
00:04:50,720 --> 00:04:53,280
but there's tons of them well the first

141
00:04:53,280 --> 00:04:53,759
thing

142
00:04:53,759 --> 00:04:56,720
is you know apis have changed the way we

143
00:04:56,720 --> 00:04:58,080
have architected our

144
00:04:58,080 --> 00:04:59,840
applications we used to have

145
00:04:59,840 --> 00:05:02,080
architectures whereby

146
00:05:02,080 --> 00:05:04,160
on the server side i would have all the

147
00:05:04,160 --> 00:05:06,800
logic like a controller layer

148
00:05:06,800 --> 00:05:08,880
the data will be protected by that

149
00:05:08,880 --> 00:05:10,560
controller layer and i would just

150
00:05:10,560 --> 00:05:13,680
expose the client side you know html and

151
00:05:13,680 --> 00:05:15,840
javascript basically so the logic will

152
00:05:15,840 --> 00:05:17,440
not be on the client it will be on the

153
00:05:17,440 --> 00:05:18,320
server

154
00:05:18,320 --> 00:05:20,479
but now what we're doing is we have the

155
00:05:20,479 --> 00:05:23,840
same data we're exposing it through apis

156
00:05:23,840 --> 00:05:26,720
as raw data and we count on the client

157
00:05:26,720 --> 00:05:28,639
side to massage that data

158
00:05:28,639 --> 00:05:31,600
assemble it and expose it right

159
00:05:31,600 --> 00:05:32,560
forgetting

160
00:05:32,560 --> 00:05:35,280
that you know that controlling obviously

161
00:05:35,280 --> 00:05:37,199
will never happen whatever you're doing

162
00:05:37,199 --> 00:05:38,240
to

163
00:05:38,240 --> 00:05:40,800
filter the data or anything that the

164
00:05:40,800 --> 00:05:42,880
client side obviously is not there and

165
00:05:42,880 --> 00:05:44,000
nothing will happen

166
00:05:44,000 --> 00:05:46,000
if i go straight into the api and into

167
00:05:46,000 --> 00:05:47,280
the raw data

168
00:05:47,280 --> 00:05:49,199
so other people are counting on the fact

169
00:05:49,199 --> 00:05:50,880
that you know the client

170
00:05:50,880 --> 00:05:52,320
side is going to do a lot of what the

171
00:05:52,320 --> 00:05:54,400
server side would be doing but if i go

172
00:05:54,400 --> 00:05:56,160
thread to the api then none of this is

173
00:05:56,160 --> 00:05:57,440
basically happening right

174
00:05:57,440 --> 00:05:59,120
so that's one of the main problem which

175
00:05:59,120 --> 00:06:01,039
is basically the new architecture

176
00:06:01,039 --> 00:06:04,319
um the second one is because we're

177
00:06:04,319 --> 00:06:07,840
dealing with data and apis

178
00:06:07,840 --> 00:06:09,600
you know the the way we're doing

179
00:06:09,600 --> 00:06:10,960
application security

180
00:06:10,960 --> 00:06:13,520
is basically has to change as well

181
00:06:13,520 --> 00:06:15,199
because what we used to do is to build

182
00:06:15,199 --> 00:06:17,600
walls around our information right

183
00:06:17,600 --> 00:06:20,560
so we will go and protect the perimeter

184
00:06:20,560 --> 00:06:21,919
around our company

185
00:06:21,919 --> 00:06:23,600
but there's no more perimeter that this

186
00:06:23,600 --> 00:06:25,759
is gone because every time you open an

187
00:06:25,759 --> 00:06:26,319
api

188
00:06:26,319 --> 00:06:28,319
what you do is you pinch a hole in that

189
00:06:28,319 --> 00:06:29,440
perimeter

190
00:06:29,440 --> 00:06:31,759
and you open avenues so you have this

191
00:06:31,759 --> 00:06:32,880
image of the

192
00:06:32,880 --> 00:06:35,440
of the uh the tree of here in paris

193
00:06:35,440 --> 00:06:37,759
where everything goes into that center

194
00:06:37,759 --> 00:06:39,680
but every time i open api there's a new

195
00:06:39,680 --> 00:06:41,280
avenue to that center

196
00:06:41,280 --> 00:06:42,960
so what we need to protect is not so

197
00:06:42,960 --> 00:06:44,319
much the borders

198
00:06:44,319 --> 00:06:46,319
anymore we need to protect that data and

199
00:06:46,319 --> 00:06:49,360
making sure that you know we only expose

200
00:06:49,360 --> 00:06:51,680
that data to you know whoever is

201
00:06:51,680 --> 00:06:53,680
supposed to consume it and nothing more

202
00:06:53,680 --> 00:06:55,680
so it's all about protecting data

203
00:06:55,680 --> 00:06:59,120
now and and to make it worse

204
00:06:59,120 --> 00:07:01,520
right well we know that right we were

205
00:07:01,520 --> 00:07:02,720
very

206
00:07:02,720 --> 00:07:05,039
we're pretty bad at thinking about

207
00:07:05,039 --> 00:07:06,479
security early

208
00:07:06,479 --> 00:07:09,599
in the api life cycle we tend to wait

209
00:07:09,599 --> 00:07:11,120
very late in the life cycle

210
00:07:11,120 --> 00:07:14,160
if any i'm talking to other prospects as

211
00:07:14,160 --> 00:07:15,440
part of my job

212
00:07:15,440 --> 00:07:17,120
they're telling me i know isabel you

213
00:07:17,120 --> 00:07:19,199
know i i have tons of apis

214
00:07:19,199 --> 00:07:21,199
and i know some of them are going to go

215
00:07:21,199 --> 00:07:22,319
all the way to production

216
00:07:22,319 --> 00:07:24,479
and in production and i know they have

217
00:07:24,479 --> 00:07:25,360
problems

218
00:07:25,360 --> 00:07:28,800
but because we took on this job of

219
00:07:28,800 --> 00:07:32,080
fixing them even testing them so late

220
00:07:32,080 --> 00:07:34,000
i don't have the time to fix them and i

221
00:07:34,000 --> 00:07:35,599
cannot block

222
00:07:35,599 --> 00:07:38,720
production and the release of those apis

223
00:07:38,720 --> 00:07:39,520
which have a

224
00:07:39,520 --> 00:07:42,639
big business impact because maybe there

225
00:07:42,639 --> 00:07:44,000
is a problem i can't prove it

226
00:07:44,000 --> 00:07:46,639
basically so it's really important that

227
00:07:46,639 --> 00:07:47,280
you know

228
00:07:47,280 --> 00:07:50,160
we we don't do that we we have that

229
00:07:50,160 --> 00:07:50,720
problem

230
00:07:50,720 --> 00:07:53,759
now what else is wrong is here

231
00:07:53,759 --> 00:07:57,199
is we have really given the developers

232
00:07:57,199 --> 00:08:00,479
fantastic tools for being

233
00:08:00,479 --> 00:08:03,520
very productive and right apis like you

234
00:08:03,520 --> 00:08:03,919
know

235
00:08:03,919 --> 00:08:06,400
as some website people tell me sometimes

236
00:08:06,400 --> 00:08:07,599
those things are popping up like

237
00:08:07,599 --> 00:08:09,280
mushrooms all over the place

238
00:08:09,280 --> 00:08:11,520
and i have zero control over them and

239
00:08:11,520 --> 00:08:13,520
and one day there's 20 and the next day

240
00:08:13,520 --> 00:08:14,960
there's 50 and the next week there's

241
00:08:14,960 --> 00:08:16,319
100.

242
00:08:16,319 --> 00:08:19,280
so how can we do security in those

243
00:08:19,280 --> 00:08:20,000
conditions

244
00:08:20,000 --> 00:08:22,400
so first of all not only do we start

245
00:08:22,400 --> 00:08:23,039
late

246
00:08:23,039 --> 00:08:25,440
but on the top of that there's tons of

247
00:08:25,440 --> 00:08:26,560
those and they change

248
00:08:26,560 --> 00:08:29,440
all the time because we are automated

249
00:08:29,440 --> 00:08:31,440
all the development we have automated

250
00:08:31,440 --> 00:08:32,399
the deployments

251
00:08:32,399 --> 00:08:34,399
it's very easy for a developer to create

252
00:08:34,399 --> 00:08:36,640
something new in a matter of days

253
00:08:36,640 --> 00:08:40,080
right so we really have to equip our

254
00:08:40,080 --> 00:08:43,200
security people with better tools here

255
00:08:43,200 --> 00:08:46,720
um so plan of action how do you

256
00:08:46,720 --> 00:08:48,880
make sure that we we don't do this like

257
00:08:48,880 --> 00:08:51,360
how do we address that problem

258
00:08:51,360 --> 00:08:54,480
and it for me is three folds right first

259
00:08:54,480 --> 00:08:55,040
of all

260
00:08:55,040 --> 00:08:58,000
as we were just saying now um we really

261
00:08:58,000 --> 00:08:59,279
really have to consider

262
00:08:59,279 --> 00:09:01,839
security way earlier than we were doing

263
00:09:01,839 --> 00:09:02,560
now

264
00:09:02,560 --> 00:09:06,000
right so as early as i would say as

265
00:09:06,000 --> 00:09:08,800
design time when we're thinking about

266
00:09:08,800 --> 00:09:10,880
what this api is going to be

267
00:09:10,880 --> 00:09:12,320
there's some things we need to think

268
00:09:12,320 --> 00:09:14,160
about there and we need to consider

269
00:09:14,160 --> 00:09:17,680
there uh already right then

270
00:09:17,680 --> 00:09:20,160
we need to really embed security into

271
00:09:20,160 --> 00:09:22,000
the api lifecycle so the

272
00:09:22,000 --> 00:09:24,880
main problem that i hear about when we

273
00:09:24,880 --> 00:09:26,880
talk to developers for example

274
00:09:26,880 --> 00:09:29,360
is they say okay i want to do security

275
00:09:29,360 --> 00:09:30,240
but you know

276
00:09:30,240 --> 00:09:32,399
i have a timeline i have deadlines to

277
00:09:32,399 --> 00:09:33,279
respect

278
00:09:33,279 --> 00:09:35,440
so anything that you ask me to add in

279
00:09:35,440 --> 00:09:37,040
there that's going to impact my

280
00:09:37,040 --> 00:09:38,320
productivity

281
00:09:38,320 --> 00:09:40,399
that is not going to work for me right

282
00:09:40,399 --> 00:09:41,839
it needs to be something which is

283
00:09:41,839 --> 00:09:43,920
embedded which is transparent

284
00:09:43,920 --> 00:09:46,800
and then i will use it but not this link

285
00:09:46,800 --> 00:09:48,480
complex stuff that i have to do

286
00:09:48,480 --> 00:09:50,320
that that doesn't work for me right so

287
00:09:50,320 --> 00:09:52,399
we have to embed securing lifecycle but

288
00:09:52,399 --> 00:09:53,600
in a way

289
00:09:53,600 --> 00:09:57,519
that is you know compatible with the

290
00:09:57,519 --> 00:09:59,120
productivity

291
00:09:59,120 --> 00:10:01,200
requirements that the development teams

292
00:10:01,200 --> 00:10:02,240
have right

293
00:10:02,240 --> 00:10:04,640
and the third one is we really need to

294
00:10:04,640 --> 00:10:05,920
put ourselves

295
00:10:05,920 --> 00:10:08,000
in the head of the people that will do

296
00:10:08,000 --> 00:10:10,000
all this hacking and start looking at

297
00:10:10,000 --> 00:10:11,839
things not from so much a defensive

298
00:10:11,839 --> 00:10:12,640
point of view

299
00:10:12,640 --> 00:10:14,399
but from an attacking point of view

300
00:10:14,399 --> 00:10:15,680
right so we need to start

301
00:10:15,680 --> 00:10:19,200
hacking ourselves fuzz ourselves so that

302
00:10:19,200 --> 00:10:21,279
we don't expect somebody else to

303
00:10:21,279 --> 00:10:22,560
actually do that

304
00:10:22,560 --> 00:10:24,560
we're actually doing that ourselves and

305
00:10:24,560 --> 00:10:26,640
we do it in a continuous fashion so

306
00:10:26,640 --> 00:10:29,040
every time we make changes to the api we

307
00:10:29,040 --> 00:10:30,880
discover if we have

308
00:10:30,880 --> 00:10:33,920
by bad luck or bad design or whatever it

309
00:10:33,920 --> 00:10:34,399
is

310
00:10:34,399 --> 00:10:37,040
introduced some new vulnerabilities and

311
00:10:37,040 --> 00:10:38,160
problems right

312
00:10:38,160 --> 00:10:40,160
so let's talk about design time first

313
00:10:40,160 --> 00:10:41,680
right so

314
00:10:41,680 --> 00:10:44,399
design time decisions for anything this

315
00:10:44,399 --> 00:10:46,160
is a good example um

316
00:10:46,160 --> 00:10:49,440
are very hard to undo

317
00:10:49,440 --> 00:10:52,480
if you have started designing something

318
00:10:52,480 --> 00:10:54,399
you have all the blueprints and you know

319
00:10:54,399 --> 00:10:55,600
think of this you know

320
00:10:55,600 --> 00:10:57,440
this is a good analogy because for

321
00:10:57,440 --> 00:10:58,839
design a lot of people talking about

322
00:10:58,839 --> 00:11:01,279
houses right so if you've not designed

323
00:11:01,279 --> 00:11:02,720
properly the blueprints of where you're

324
00:11:02,720 --> 00:11:04,480
going to put the doors and the windows

325
00:11:04,480 --> 00:11:05,200
and such

326
00:11:05,200 --> 00:11:06,880
arrangements in your house once it's

327
00:11:06,880 --> 00:11:08,560
built it's going to be really hard to

328
00:11:08,560 --> 00:11:09,519
undo

329
00:11:09,519 --> 00:11:12,880
well the same applies for apis

330
00:11:12,880 --> 00:11:15,519
so what do we have to do there's tons of

331
00:11:15,519 --> 00:11:17,600
decisions we have to make when we start

332
00:11:17,600 --> 00:11:19,839
working and designing apis

333
00:11:19,839 --> 00:11:22,320
so the first thing is you really have to

334
00:11:22,320 --> 00:11:24,640
know what it is that you're building

335
00:11:24,640 --> 00:11:28,000
security is all about risk so okay

336
00:11:28,000 --> 00:11:31,360
i'm going to open an api for

337
00:11:31,360 --> 00:11:34,399
woo is it something for an internal

338
00:11:34,399 --> 00:11:35,839
application

339
00:11:35,839 --> 00:11:38,320
is it for an external application is it

340
00:11:38,320 --> 00:11:39,279
for partners

341
00:11:39,279 --> 00:11:41,120
is it something we're going to open only

342
00:11:41,120 --> 00:11:42,959
to a specific set of people like

343
00:11:42,959 --> 00:11:44,880
administrators for example

344
00:11:44,880 --> 00:11:48,240
so who's going to consume this data then

345
00:11:48,240 --> 00:11:50,480
what is the data we're going to expose

346
00:11:50,480 --> 00:11:53,040
so is that data sensitive

347
00:11:53,040 --> 00:11:55,839
like do we have some personal identifier

348
00:11:55,839 --> 00:11:57,519
information in there is it financial

349
00:11:57,519 --> 00:11:58,959
data is it healthcare

350
00:11:58,959 --> 00:12:01,519
is it you know whatever you know we need

351
00:12:01,519 --> 00:12:02,480
to know

352
00:12:02,480 --> 00:12:04,480
what the data it is that you're

353
00:12:04,480 --> 00:12:05,519
manipulating

354
00:12:05,519 --> 00:12:08,079
right for example and then if it's very

355
00:12:08,079 --> 00:12:10,480
sensitive data maybe we need to sign or

356
00:12:10,480 --> 00:12:12,240
encrypt that information you know this

357
00:12:12,240 --> 00:12:13,600
is very common

358
00:12:13,600 --> 00:12:16,959
in you know banking healthcare insurance

359
00:12:16,959 --> 00:12:17,600
now

360
00:12:17,600 --> 00:12:20,320
where we are transporting information

361
00:12:20,320 --> 00:12:21,440
that potentially

362
00:12:21,440 --> 00:12:24,880
is very sensitive so think you have to

363
00:12:24,880 --> 00:12:25,680
remember that

364
00:12:25,680 --> 00:12:28,160
even if you're using an encrypted

365
00:12:28,160 --> 00:12:30,800
channel like https for example

366
00:12:30,800 --> 00:12:32,720
once you are at the end of that channel

367
00:12:32,720 --> 00:12:34,800
and it stops that data you have been

368
00:12:34,800 --> 00:12:36,720
transporting isn't clear

369
00:12:36,720 --> 00:12:40,160
so when tls ends the data isn't clear is

370
00:12:40,160 --> 00:12:40,800
that okay

371
00:12:40,800 --> 00:12:43,760
is that not okay um so do i have to

372
00:12:43,760 --> 00:12:45,519
encrypt that information

373
00:12:45,519 --> 00:12:47,200
do i have to make sure that nobody can

374
00:12:47,200 --> 00:12:48,959
change that information on flight what

375
00:12:48,959 --> 00:12:49,839
would require

376
00:12:49,839 --> 00:12:52,000
signing right so we need to know about

377
00:12:52,000 --> 00:12:53,680
that you need to really

378
00:12:53,680 --> 00:12:55,760
spend the time to sit down with the

379
00:12:55,760 --> 00:12:56,880
business with

380
00:12:56,880 --> 00:12:59,440
everyone and design this properly

381
00:12:59,440 --> 00:13:00,880
understand

382
00:13:00,880 --> 00:13:03,279
if you want look at this like a threat

383
00:13:03,279 --> 00:13:03,920
model

384
00:13:03,920 --> 00:13:06,480
around your api right okay so now we

385
00:13:06,480 --> 00:13:08,480
know what we are going to do

386
00:13:08,480 --> 00:13:11,040
we probably know if this is a risky

387
00:13:11,040 --> 00:13:12,000
thing we're doing

388
00:13:12,000 --> 00:13:14,000
what is the level of risk and then from

389
00:13:14,000 --> 00:13:16,160
there we can define the security the

390
00:13:16,160 --> 00:13:18,320
security is depending on the risk right

391
00:13:18,320 --> 00:13:20,240
so now we're going to expose okay what

392
00:13:20,240 --> 00:13:21,600
are we exposing to

393
00:13:21,600 --> 00:13:24,079
so who has access to that information

394
00:13:24,079 --> 00:13:25,839
and this is where i'm gonna match this

395
00:13:25,839 --> 00:13:26,160
to

396
00:13:26,160 --> 00:13:28,959
api one two three all the way to ten

397
00:13:28,959 --> 00:13:29,760
right

398
00:13:29,760 --> 00:13:32,720
so at that level so my my point is

399
00:13:32,720 --> 00:13:34,480
really it's already there

400
00:13:34,480 --> 00:13:37,600
that you're going to take some decisions

401
00:13:37,600 --> 00:13:40,800
which are affecting this oas top 10.

402
00:13:40,800 --> 00:13:42,480
again there's some things in there once

403
00:13:42,480 --> 00:13:44,800
you have decided to do

404
00:13:44,800 --> 00:13:47,199
things in a certain way it will be very

405
00:13:47,199 --> 00:13:48,240
hard to undo

406
00:13:48,240 --> 00:13:50,560
let me take a second point here which is

407
00:13:50,560 --> 00:13:52,079
a very good example

408
00:13:52,079 --> 00:13:55,199
so our resource ids exposure so this is

409
00:13:55,199 --> 00:13:56,079
this api

410
00:13:56,079 --> 00:13:58,639
one api one is like the top you know as

411
00:13:58,639 --> 00:13:59,360
it says

412
00:13:59,360 --> 00:14:01,360
the top first problem the first problem

413
00:14:01,360 --> 00:14:03,519
that people have with apis today

414
00:14:03,519 --> 00:14:05,519
which is basically allowing someone to

415
00:14:05,519 --> 00:14:08,240
do this iteration so i have

416
00:14:08,240 --> 00:14:10,399
let's say i have an api that allows me

417
00:14:10,399 --> 00:14:11,920
to see my

418
00:14:11,920 --> 00:14:14,160
bank account okay so i'm connecting to

419
00:14:14,160 --> 00:14:15,120
this api

420
00:14:15,120 --> 00:14:18,639
i'm putting my access token and this is

421
00:14:18,639 --> 00:14:21,519
identified as isabel and i'm accessing

422
00:14:21,519 --> 00:14:22,560
bank account

423
00:14:22,560 --> 00:14:25,920
one two three right now if i'm trying to

424
00:14:25,920 --> 00:14:26,720
access

425
00:14:26,720 --> 00:14:29,120
uh bank account one two four which

426
00:14:29,120 --> 00:14:30,240
belongs to guy

427
00:14:30,240 --> 00:14:31,920
right then i should not be able to do

428
00:14:31,920 --> 00:14:33,600
that because i'm not the owner

429
00:14:33,600 --> 00:14:36,639
of that specific resource right so you

430
00:14:36,639 --> 00:14:37,760
have to know about

431
00:14:37,760 --> 00:14:40,800
what those ids are and eliminate maybe

432
00:14:40,800 --> 00:14:41,680
the risk

433
00:14:41,680 --> 00:14:43,839
of not putting one two three for example

434
00:14:43,839 --> 00:14:45,760
with my url but putting slash

435
00:14:45,760 --> 00:14:48,399
me or slash my account so i don't have a

436
00:14:48,399 --> 00:14:49,360
number in there

437
00:14:49,360 --> 00:14:51,199
again as you can see this is the design

438
00:14:51,199 --> 00:14:52,639
of the api

439
00:14:52,639 --> 00:14:55,120
very important designing the data what

440
00:14:55,120 --> 00:14:57,040
is the data we're going to expose what

441
00:14:57,040 --> 00:14:59,199
is the data we're going to

442
00:14:59,199 --> 00:15:01,600
accept coming in what is the data tower

443
00:15:01,600 --> 00:15:02,480
accept

444
00:15:02,480 --> 00:15:04,959
and and re to return so make sure we

445
00:15:04,959 --> 00:15:05,760
don't

446
00:15:05,760 --> 00:15:07,920
take data in that we're not supposed to

447
00:15:07,920 --> 00:15:10,320
take in this is something called api 6

448
00:15:10,320 --> 00:15:12,399
which is mass assignment basically

449
00:15:12,399 --> 00:15:14,240
allowing data to common

450
00:15:14,240 --> 00:15:16,720
that we're not supposed to or the other

451
00:15:16,720 --> 00:15:17,920
way around

452
00:15:17,920 --> 00:15:20,160
accepting well actually api 8 is one of

453
00:15:20,160 --> 00:15:21,760
those which is injections

454
00:15:21,760 --> 00:15:23,920
in famous sql injections no sql

455
00:15:23,920 --> 00:15:24,880
injections

456
00:15:24,880 --> 00:15:27,680
all of that could be eliminated if we

457
00:15:27,680 --> 00:15:30,240
knew exactly this is the data that comes

458
00:15:30,240 --> 00:15:30,480
in

459
00:15:30,480 --> 00:15:33,120
with all its constraints this data that

460
00:15:33,120 --> 00:15:35,120
comes out to those constraints

461
00:15:35,120 --> 00:15:37,839
and anything that is not matching that

462
00:15:37,839 --> 00:15:38,240
will

463
00:15:38,240 --> 00:15:41,360
not be accepted as input and outputs

464
00:15:41,360 --> 00:15:42,720
right a lot of problems could be

465
00:15:42,720 --> 00:15:45,040
eliminated if we were doing this

466
00:15:45,040 --> 00:15:47,279
um and then making sure i see a lot of

467
00:15:47,279 --> 00:15:48,800
people doing this

468
00:15:48,800 --> 00:15:50,720
sometimes for apis we need admin

469
00:15:50,720 --> 00:15:52,000
operations like

470
00:15:52,000 --> 00:15:55,839
some behind the scenes uh operate

471
00:15:55,839 --> 00:15:57,759
or manage users or manage accounts

472
00:15:57,759 --> 00:15:59,279
across the board

473
00:15:59,279 --> 00:16:01,759
usually you don't want to mix those two

474
00:16:01,759 --> 00:16:02,399
things

475
00:16:02,399 --> 00:16:04,240
a lot of people are putting that into

476
00:16:04,240 --> 00:16:05,839
the same api

477
00:16:05,839 --> 00:16:08,560
and then we forget about putting access

478
00:16:08,560 --> 00:16:10,320
control and then everybody has access to

479
00:16:10,320 --> 00:16:12,399
admin so again this is a design decision

480
00:16:12,399 --> 00:16:14,079
what are we going to need

481
00:16:14,079 --> 00:16:16,160
where it is the operations will be how

482
00:16:16,160 --> 00:16:17,360
we can access those

483
00:16:17,360 --> 00:16:20,160
right and even there at design time you

484
00:16:20,160 --> 00:16:21,040
need to start

485
00:16:21,040 --> 00:16:22,480
operating that api you're going to

486
00:16:22,480 --> 00:16:24,079
expose it you're going to deploy it

487
00:16:24,079 --> 00:16:27,120
right log in monitoring very important

488
00:16:27,120 --> 00:16:28,240
you need to know

489
00:16:28,240 --> 00:16:31,519
how this api is going to be you know

490
00:16:31,519 --> 00:16:34,240
operated where will i see the logs what

491
00:16:34,240 --> 00:16:35,360
is in the logs

492
00:16:35,360 --> 00:16:38,160
is there any sensitive data that we are

493
00:16:38,160 --> 00:16:40,000
want to make sure we are not writing the

494
00:16:40,000 --> 00:16:41,519
logs make sure it's not there

495
00:16:41,519 --> 00:16:44,560
how we will monitor how effective our

496
00:16:44,560 --> 00:16:45,120
api

497
00:16:45,120 --> 00:16:48,320
is how we will enforce rate limiting and

498
00:16:48,320 --> 00:16:49,040
make sure

499
00:16:49,040 --> 00:16:51,759
people cannot abuse the operations of

500
00:16:51,759 --> 00:16:52,720
our api

501
00:16:52,720 --> 00:16:55,600
how we will manage the versions so we

502
00:16:55,600 --> 00:16:56,720
create a new version

503
00:16:56,720 --> 00:16:59,839
retire the old one all of that are

504
00:16:59,839 --> 00:17:01,600
design decisions

505
00:17:01,600 --> 00:17:03,519
many of these we will not be able to

506
00:17:03,519 --> 00:17:05,839
change again if we realize we have a

507
00:17:05,839 --> 00:17:07,919
problem like the day before releasing

508
00:17:07,919 --> 00:17:10,079
the api it will be very difficult

509
00:17:10,079 --> 00:17:11,919
so you have to ask yourself all those

510
00:17:11,919 --> 00:17:14,720
questions now how do we formalize that

511
00:17:14,720 --> 00:17:18,640
right well we're very lucky in the api

512
00:17:18,640 --> 00:17:21,359
world to have standard languages for

513
00:17:21,359 --> 00:17:23,760
defining what an api does and and

514
00:17:23,760 --> 00:17:26,160
basically defining most of the

515
00:17:26,160 --> 00:17:28,559
requirements that i just mentioned and

516
00:17:28,559 --> 00:17:30,400
this will allow us to take an api

517
00:17:30,400 --> 00:17:33,200
design first approach by which i first

518
00:17:33,200 --> 00:17:33,840
divine

519
00:17:33,840 --> 00:17:36,320
define this interface of what you know

520
00:17:36,320 --> 00:17:37,440
that's the contract

521
00:17:37,440 --> 00:17:39,679
that i'm the api producer and i'm

522
00:17:39,679 --> 00:17:41,120
exposing an api

523
00:17:41,120 --> 00:17:43,840
that's the contract that i'm taking that

524
00:17:43,840 --> 00:17:45,760
is what my api will do this is the data

525
00:17:45,760 --> 00:17:47,280
it will expose again

526
00:17:47,280 --> 00:17:49,039
et cetera that's how you interact with

527
00:17:49,039 --> 00:17:51,039
my api and then from there you can

528
00:17:51,039 --> 00:17:52,480
create implementation you can do

529
00:17:52,480 --> 00:17:53,679
automated testing

530
00:17:53,679 --> 00:17:55,760
of course you can do documentation which

531
00:17:55,760 --> 00:17:58,320
is the primary reason

532
00:17:58,320 --> 00:18:01,919
open api was created many years ago but

533
00:18:01,919 --> 00:18:04,799
now is serving much more purposes right

534
00:18:04,799 --> 00:18:06,000
and and

535
00:18:06,000 --> 00:18:08,640
my proposal here in this talk is also to

536
00:18:08,640 --> 00:18:09,520
use this

537
00:18:09,520 --> 00:18:11,760
as something i call security as code

538
00:18:11,760 --> 00:18:12,559
right

539
00:18:12,559 --> 00:18:15,039
it allows us to enable this approach

540
00:18:15,039 --> 00:18:15,600
called

541
00:18:15,600 --> 00:18:18,640
security as code so what is security as

542
00:18:18,640 --> 00:18:19,200
code

543
00:18:19,200 --> 00:18:21,440
um you know if you think about what

544
00:18:21,440 --> 00:18:22,640
kubernetes brought us

545
00:18:22,640 --> 00:18:24,240
right for example it brought us

546
00:18:24,240 --> 00:18:25,600
infrastructure code things like

547
00:18:25,600 --> 00:18:27,679
terraform and jeff and ansible

548
00:18:27,679 --> 00:18:30,080
what they allow us to do is to describe

549
00:18:30,080 --> 00:18:31,360
our architecture

550
00:18:31,360 --> 00:18:34,559
in a static way so that we can

551
00:18:34,559 --> 00:18:37,200
have repetitive processes we can version

552
00:18:37,200 --> 00:18:38,400
this and we'll know

553
00:18:38,400 --> 00:18:40,960
if we have a script that has been

554
00:18:40,960 --> 00:18:42,240
executed

555
00:18:42,240 --> 00:18:44,960
with this information and we run it

556
00:18:44,960 --> 00:18:46,640
again and again and again we'll always

557
00:18:46,640 --> 00:18:48,880
end up with the same architecture being

558
00:18:48,880 --> 00:18:51,760
you know deployed so same thing if you

559
00:18:51,760 --> 00:18:54,559
apply the same principles for security

560
00:18:54,559 --> 00:18:57,520
the idea is you express the constraints

561
00:18:57,520 --> 00:19:00,880
of security within that static file

562
00:19:00,880 --> 00:19:05,120
so that you can again track the changes

563
00:19:05,120 --> 00:19:06,960
we have something which is transparent

564
00:19:06,960 --> 00:19:08,960
everybody can see we can automatically

565
00:19:08,960 --> 00:19:10,240
analyze it

566
00:19:10,240 --> 00:19:13,039
right it enables an approach in security

567
00:19:13,039 --> 00:19:14,640
which is very important

568
00:19:14,640 --> 00:19:17,760
called positive security model

569
00:19:17,760 --> 00:19:20,240
so what is that right basically in

570
00:19:20,240 --> 00:19:22,000
security today you have two ways of

571
00:19:22,000 --> 00:19:22,960
looking at things

572
00:19:22,960 --> 00:19:24,960
um the traditional way i would say

573
00:19:24,960 --> 00:19:26,320
before you know

574
00:19:26,320 --> 00:19:28,799
some that some tools like web

575
00:19:28,799 --> 00:19:30,799
application files typically do

576
00:19:30,799 --> 00:19:33,280
is to take a negative security model

577
00:19:33,280 --> 00:19:34,240
what does that mean

578
00:19:34,240 --> 00:19:36,320
that means that basically we let

579
00:19:36,320 --> 00:19:37,679
everyone go in

580
00:19:37,679 --> 00:19:40,559
right and then we have some patterns you

581
00:19:40,559 --> 00:19:40,960
know

582
00:19:40,960 --> 00:19:43,520
very much if i can make a a parallel

583
00:19:43,520 --> 00:19:45,600
with antivirus but if you probably

584
00:19:45,600 --> 00:19:47,919
i hope all have an antivirus on your

585
00:19:47,919 --> 00:19:48,799
machines

586
00:19:48,799 --> 00:19:51,600
um and regularly this antivirus has to

587
00:19:51,600 --> 00:19:52,000
go

588
00:19:52,000 --> 00:19:54,480
maybe every day or maybe every hour and

589
00:19:54,480 --> 00:19:56,320
refresh its database

590
00:19:56,320 --> 00:19:59,440
of known viruses right so that it can

591
00:19:59,440 --> 00:20:01,280
look at all the data coming on your

592
00:20:01,280 --> 00:20:03,520
computer and matches that against the

593
00:20:03,520 --> 00:20:05,679
database and say yep i recognize this as

594
00:20:05,679 --> 00:20:07,360
being something bad so i'm going to

595
00:20:07,360 --> 00:20:08,320
block it

596
00:20:08,320 --> 00:20:10,480
that's really a negative security model

597
00:20:10,480 --> 00:20:12,000
so it's all based on the fact that

598
00:20:12,000 --> 00:20:12,559
you're

599
00:20:12,559 --> 00:20:15,760
you have a well-known list of threats um

600
00:20:15,760 --> 00:20:17,440
that you can recognize through

601
00:20:17,440 --> 00:20:19,280
signatures and patterns and then

602
00:20:19,280 --> 00:20:20,640
everything that goes your way you're

603
00:20:20,640 --> 00:20:22,320
going to compare it again that list of

604
00:20:22,320 --> 00:20:23,120
threats

605
00:20:23,120 --> 00:20:26,320
okay so it's very threat centric now a

606
00:20:26,320 --> 00:20:28,559
positive security model works the other

607
00:20:28,559 --> 00:20:29,280
way around

608
00:20:29,280 --> 00:20:32,159
which is the door is closed to everyone

609
00:20:32,159 --> 00:20:32,480
but

610
00:20:32,480 --> 00:20:35,280
people who are the allowance right so

611
00:20:35,280 --> 00:20:36,640
this is really about

612
00:20:36,640 --> 00:20:38,799
knowing exactly what's going to hit you

613
00:20:38,799 --> 00:20:40,240
in terms of

614
00:20:40,240 --> 00:20:44,159
um of of traffic and say yeah this is

615
00:20:44,159 --> 00:20:45,840
i know exactly the traffic which is

616
00:20:45,840 --> 00:20:48,240
going to hit me i have a list

617
00:20:48,240 --> 00:20:50,480
so whatever is not on that list

618
00:20:50,480 --> 00:20:52,720
basically cannot go through so it's not

619
00:20:52,720 --> 00:20:54,000
so much

620
00:20:54,000 --> 00:20:57,360
uh focused on knowing what

621
00:20:57,360 --> 00:20:59,440
are the bad threats that can come your

622
00:20:59,440 --> 00:21:00,400
way but rather

623
00:21:00,400 --> 00:21:03,360
focusing on making sure and knowing of

624
00:21:03,360 --> 00:21:05,840
all the things that you want to accept

625
00:21:05,840 --> 00:21:09,120
so you know in in an api world

626
00:21:09,120 --> 00:21:12,320
what this open api or async api they can

627
00:21:12,320 --> 00:21:13,919
that's exactly what they do they

628
00:21:13,919 --> 00:21:15,600
describe this is my api

629
00:21:15,600 --> 00:21:17,039
that's what it does this little data

630
00:21:17,039 --> 00:21:19,600
that comes in so that that comes out

631
00:21:19,600 --> 00:21:22,640
so i can use that as a positive security

632
00:21:22,640 --> 00:21:23,200
model

633
00:21:23,200 --> 00:21:27,360
for apis so that i can decide to

634
00:21:27,360 --> 00:21:30,720
reject anything that is not um

635
00:21:30,720 --> 00:21:32,320
describing there i also have

636
00:21:32,320 --> 00:21:33,600
authentication authorization

637
00:21:33,600 --> 00:21:34,799
descriptions in there

638
00:21:34,799 --> 00:21:36,400
so i'll know exactly who i'm going to

639
00:21:36,400 --> 00:21:38,080
accept or not

640
00:21:38,080 --> 00:21:40,320
right and then we can focus the security

641
00:21:40,320 --> 00:21:41,760
and everyone within

642
00:21:41,760 --> 00:21:44,000
that full flow all the way from design

643
00:21:44,000 --> 00:21:45,360
to production

644
00:21:45,360 --> 00:21:48,960
in ensuring a testing time and design

645
00:21:48,960 --> 00:21:50,159
time that this

646
00:21:50,159 --> 00:21:53,919
allow list is as precise as good

647
00:21:53,919 --> 00:21:56,400
and up-to-date as possible right that's

648
00:21:56,400 --> 00:21:58,240
that's kind of the idea

649
00:21:58,240 --> 00:22:01,600
so that um we can then use

650
00:22:01,600 --> 00:22:03,760
uh the different parts of the open api

651
00:22:03,760 --> 00:22:04,960
to enforce

652
00:22:04,960 --> 00:22:07,280
you know what is the security that we're

653
00:22:07,280 --> 00:22:09,200
going to apply to this api i know

654
00:22:09,200 --> 00:22:09,679
because

655
00:22:09,679 --> 00:22:12,240
open api allows me to describe that what

656
00:22:12,240 --> 00:22:13,120
is the data

657
00:22:13,120 --> 00:22:16,240
parameters data formats so um

658
00:22:16,240 --> 00:22:18,720
and then we have some additional things

659
00:22:18,720 --> 00:22:21,280
which are coming into open api i'm part

660
00:22:21,280 --> 00:22:23,200
of the open api initiative so

661
00:22:23,200 --> 00:22:25,200
we're working also on sla to allow you

662
00:22:25,200 --> 00:22:27,039
to describe rate limiting

663
00:22:27,039 --> 00:22:30,240
in there and slas as well as

664
00:22:30,240 --> 00:22:32,000
those signatures and encryption i was

665
00:22:32,000 --> 00:22:33,760
talking about at the beginning

666
00:22:33,760 --> 00:22:37,280
and also workflow so that you can decide

667
00:22:37,280 --> 00:22:38,799
well to use this api

668
00:22:38,799 --> 00:22:40,960
first you have to call operation a then

669
00:22:40,960 --> 00:22:42,080
you have to call operation b

670
00:22:42,080 --> 00:22:43,919
then you have to call operation c you

671
00:22:43,919 --> 00:22:45,520
cannot consume

672
00:22:45,520 --> 00:22:48,159
the operation described in the api in

673
00:22:48,159 --> 00:22:48,960
any word

674
00:22:48,960 --> 00:22:50,720
any order that you want right so that

675
00:22:50,720 --> 00:22:52,880
will also give us another level

676
00:22:52,880 --> 00:22:56,080
of governance in terms and control over

677
00:22:56,080 --> 00:22:59,280
how the api is actually used and if i

678
00:22:59,280 --> 00:23:01,039
have all this information and i can do a

679
00:23:01,039 --> 00:23:01,840
lot of things

680
00:23:01,840 --> 00:23:04,080
i can automate a lot of stuff i can

681
00:23:04,080 --> 00:23:05,520
automate the validation

682
00:23:05,520 --> 00:23:08,799
of that of that open api or racing api

683
00:23:08,799 --> 00:23:11,200
a file i can do automated security

684
00:23:11,200 --> 00:23:12,000
testing

685
00:23:12,000 --> 00:23:14,159
i have governance because now i know

686
00:23:14,159 --> 00:23:16,480
exactly what is the api that i have

687
00:23:16,480 --> 00:23:19,280
how is it secured i also have data

688
00:23:19,280 --> 00:23:20,240
governance

689
00:23:20,240 --> 00:23:22,080
so this is the data that flows through

690
00:23:22,080 --> 00:23:23,520
my api and it's controlled

691
00:23:23,520 --> 00:23:25,840
through that file and anything that is

692
00:23:25,840 --> 00:23:26,559
not that

693
00:23:26,559 --> 00:23:28,640
will actually be you know rejected

694
00:23:28,640 --> 00:23:30,880
that's kind of the idea right

695
00:23:30,880 --> 00:23:34,320
now the approach i would like

696
00:23:34,320 --> 00:23:36,880
you know to propose to you and and you

697
00:23:36,880 --> 00:23:38,400
know ideally

698
00:23:38,400 --> 00:23:41,679
um you should be able to do starting

699
00:23:41,679 --> 00:23:43,600
with an open api definition

700
00:23:43,600 --> 00:23:46,799
maybe with some extensions to describe

701
00:23:46,799 --> 00:23:48,799
the extra security and rate limiting et

702
00:23:48,799 --> 00:23:50,559
cetera i was talking about

703
00:23:50,559 --> 00:23:53,919
is i'm a developer i as we said at the

704
00:23:53,919 --> 00:23:55,679
beginning for developers this all needs

705
00:23:55,679 --> 00:23:57,360
to be transparent and easy

706
00:23:57,360 --> 00:24:00,480
right so i'm a developer i'm in my

707
00:24:00,480 --> 00:24:02,960
development environment i'm working on

708
00:24:02,960 --> 00:24:05,520
my code i'm working on my open api file

709
00:24:05,520 --> 00:24:08,320
i commit this to a code repository or

710
00:24:08,320 --> 00:24:10,960
maybe github bitbucket whatever it is

711
00:24:10,960 --> 00:24:12,720
and then this starts an automated

712
00:24:12,720 --> 00:24:14,960
process and as part of that automated

713
00:24:14,960 --> 00:24:15,919
process

714
00:24:15,919 --> 00:24:19,039
i'm going to look at that open api file

715
00:24:19,039 --> 00:24:21,200
what it has what is the security in

716
00:24:21,200 --> 00:24:22,720
there is that the security which is

717
00:24:22,720 --> 00:24:25,440
required by the company for example

718
00:24:25,440 --> 00:24:28,559
i can do automated testing with the

719
00:24:28,559 --> 00:24:30,480
tools i'm going to talk about right now

720
00:24:30,480 --> 00:24:33,039
i can automatically attach some security

721
00:24:33,039 --> 00:24:34,640
policies which are governed

722
00:24:34,640 --> 00:24:37,360
by my company and i can automatically

723
00:24:37,360 --> 00:24:38,559
deploy

724
00:24:38,559 --> 00:24:40,720
the protection in place or security

725
00:24:40,720 --> 00:24:41,760
policies

726
00:24:41,760 --> 00:24:44,000
which are derived from my open api

727
00:24:44,000 --> 00:24:45,120
that's really the vision

728
00:24:45,120 --> 00:24:48,480
is to rather than doing you know

729
00:24:48,480 --> 00:24:52,080
manual uh enforcement and rules

730
00:24:52,080 --> 00:24:54,000
around security which are always a

731
00:24:54,000 --> 00:24:55,679
problem because people forget about them

732
00:24:55,679 --> 00:24:57,600
they don't put them in place we cannot

733
00:24:57,600 --> 00:24:58,320
test

734
00:24:58,320 --> 00:25:00,559
if those are in place or not you know if

735
00:25:00,559 --> 00:25:02,000
you drive this

736
00:25:02,000 --> 00:25:04,320
from the definition of the api then

737
00:25:04,320 --> 00:25:05,919
everything can come out of it

738
00:25:05,919 --> 00:25:08,400
right so this is really a movement that

739
00:25:08,400 --> 00:25:09,279
that we see

740
00:25:09,279 --> 00:25:11,039
this is something we've adopted that you

741
00:25:11,039 --> 00:25:13,120
know at 42 crunch but

742
00:25:13,120 --> 00:25:16,080
also we see more companies uh doing this

743
00:25:16,080 --> 00:25:17,120
because it

744
00:25:17,120 --> 00:25:19,279
i think it makes sense because we have

745
00:25:19,279 --> 00:25:21,039
really this ability

746
00:25:21,039 --> 00:25:23,600
to know exactly what traffic is going to

747
00:25:23,600 --> 00:25:24,240
be

748
00:25:24,240 --> 00:25:27,520
and if you can express that in text form

749
00:25:27,520 --> 00:25:29,520
right then you can do a lot of

750
00:25:29,520 --> 00:25:31,840
automation and a lot of analysis on top

751
00:25:31,840 --> 00:25:32,400
of that

752
00:25:32,400 --> 00:25:34,720
and that gives you this continuous you

753
00:25:34,720 --> 00:25:35,440
know

754
00:25:35,440 --> 00:25:39,679
virtuous uh circle of

755
00:25:39,679 --> 00:25:42,640
deploying a new api creating a new api i

756
00:25:42,640 --> 00:25:45,200
can have 10 a day i can have 1000 a day

757
00:25:45,200 --> 00:25:46,880
you know my ci cd pipeline doesn't get

758
00:25:46,880 --> 00:25:48,960
tired it will

759
00:25:48,960 --> 00:25:51,039
take it and executed it so it's not like

760
00:25:51,039 --> 00:25:53,440
i have an abstract person

761
00:25:53,440 --> 00:25:55,520
who is overloaded with work at the end

762
00:25:55,520 --> 00:25:57,760
of a pipeline and has to say

763
00:25:57,760 --> 00:26:00,880
this is a new api go test it right so

764
00:26:00,880 --> 00:26:05,200
as much as we can do that is automated

765
00:26:05,200 --> 00:26:08,320
as a you know the core of the testing

766
00:26:08,320 --> 00:26:10,000
and enforcement then the more

767
00:26:10,000 --> 00:26:12,640
we can do all this in an automated way

768
00:26:12,640 --> 00:26:13,760
the better we are

769
00:26:13,760 --> 00:26:15,520
all right so what do we have at our

770
00:26:15,520 --> 00:26:17,360
disposal here today

771
00:26:17,360 --> 00:26:21,120
we have um so we

772
00:26:21,120 --> 00:26:23,919
we have a tool to the first thing to

773
00:26:23,919 --> 00:26:24,400
really

774
00:26:24,400 --> 00:26:26,880
test here is the open api file itself or

775
00:26:26,880 --> 00:26:28,640
the async profile itself

776
00:26:28,640 --> 00:26:30,480
so how good it is because one of the key

777
00:26:30,480 --> 00:26:33,360
things about the positive security model

778
00:26:33,360 --> 00:26:35,919
is that it's very important that that

779
00:26:35,919 --> 00:26:38,159
description obviously is

780
00:26:38,159 --> 00:26:40,799
is of good quality and reflects what the

781
00:26:40,799 --> 00:26:42,000
api actually does

782
00:26:42,000 --> 00:26:44,799
right and has all the constraints and

783
00:26:44,799 --> 00:26:46,080
requirements

784
00:26:46,080 --> 00:26:47,840
again on the data formats and the

785
00:26:47,840 --> 00:26:49,600
security etc

786
00:26:49,600 --> 00:26:52,320
so you you have a tool we have an online

787
00:26:52,320 --> 00:26:53,279
version you can

788
00:26:53,279 --> 00:26:55,760
try for free here on api secret.io if

789
00:26:55,760 --> 00:26:57,039
you want to go and test it

790
00:26:57,039 --> 00:26:58,640
that will give you this report on how

791
00:26:58,640 --> 00:27:00,400
good your open api file is

792
00:27:00,400 --> 00:27:02,480
right and then from there you can do

793
00:27:02,480 --> 00:27:04,480
some fuzzing for example from security

794
00:27:04,480 --> 00:27:05,360
testing

795
00:27:05,360 --> 00:27:07,279
see how the implementation of your api

796
00:27:07,279 --> 00:27:09,440
actually is you know how resilient it is

797
00:27:09,440 --> 00:27:10,559
and how it works

798
00:27:10,559 --> 00:27:12,640
this could be a something like zap which

799
00:27:12,640 --> 00:27:13,840
is an wasp

800
00:27:13,840 --> 00:27:17,520
uh product um project i'm sorry one on

801
00:27:17,520 --> 00:27:18,240
product

802
00:27:18,240 --> 00:27:20,399
uh stack hoax which is a product that's

803
00:27:20,399 --> 00:27:22,080
actually based on oahu's web

804
00:27:22,080 --> 00:27:23,840
it can be a wrestler which is a project

805
00:27:23,840 --> 00:27:26,080
from microsoft although these are in

806
00:27:26,080 --> 00:27:27,840
the references if you want to have a

807
00:27:27,840 --> 00:27:29,919
look after and and test them

808
00:27:29,919 --> 00:27:31,840
yourselves right so what those tools

809
00:27:31,840 --> 00:27:33,679
will do is they will consume the open

810
00:27:33,679 --> 00:27:34,080
api

811
00:27:34,080 --> 00:27:36,799
they will create like a a graph if you

812
00:27:36,799 --> 00:27:37,200
want

813
00:27:37,200 --> 00:27:38,720
of all the things they have to go and

814
00:27:38,720 --> 00:27:40,799
test and they will do this automatically

815
00:27:40,799 --> 00:27:41,679
this can be put

816
00:27:41,679 --> 00:27:44,720
inside your ci cd pipeline so it happens

817
00:27:44,720 --> 00:27:45,840
every time you actually

818
00:27:45,840 --> 00:27:49,200
change some code right uh iodo as i said

819
00:27:49,200 --> 00:27:52,320
bola which is api one this is a very

820
00:27:52,320 --> 00:27:55,360
important again api one top

821
00:27:55,360 --> 00:27:58,880
of the api top ten list so um

822
00:27:58,880 --> 00:28:01,440
yelps as open sourced a project which is

823
00:28:01,440 --> 00:28:03,120
very interesting it's called fuzz

824
00:28:03,120 --> 00:28:06,000
lighter and what this allows you to do

825
00:28:06,000 --> 00:28:06,880
is to again

826
00:28:06,880 --> 00:28:10,000
you can take an open api file as input

827
00:28:10,000 --> 00:28:12,880
and it will automatically go and find

828
00:28:12,880 --> 00:28:13,440
all those

829
00:28:13,440 --> 00:28:16,000
ids you can enrich it with your own

830
00:28:16,000 --> 00:28:16,880
testing

831
00:28:16,880 --> 00:28:19,360
so you can again automatically test for

832
00:28:19,360 --> 00:28:20,880
those idol

833
00:28:20,880 --> 00:28:23,840
those indirect references this api one

834
00:28:23,840 --> 00:28:25,120
type of issues and

835
00:28:25,120 --> 00:28:28,159
this is really an uh great project for

836
00:28:28,159 --> 00:28:30,559
doing this kind of testing automatically

837
00:28:30,559 --> 00:28:32,960
which again is is a huge problem in apis

838
00:28:32,960 --> 00:28:34,080
today

839
00:28:34,080 --> 00:28:37,279
um and then so we're also doing

840
00:28:37,279 --> 00:28:39,279
something very complementary on the 42

841
00:28:39,279 --> 00:28:41,840
crunch side which is more about testing

842
00:28:41,840 --> 00:28:44,880
the the constraints on the data formats

843
00:28:44,880 --> 00:28:45,840
etc

844
00:28:45,840 --> 00:28:47,520
from the open api files just to make

845
00:28:47,520 --> 00:28:50,559
sure that at any point in time

846
00:28:50,559 --> 00:28:53,600
your implementation of your api

847
00:28:53,600 --> 00:28:57,120
is online without um with the definition

848
00:28:57,120 --> 00:28:58,159
you're making so

849
00:28:58,159 --> 00:29:00,000
you're not making a change in in the

850
00:29:00,000 --> 00:29:01,919
back end that is not reflected

851
00:29:01,919 --> 00:29:04,320
inside the contract on the contrary you

852
00:29:04,320 --> 00:29:05,039
don't have

853
00:29:05,039 --> 00:29:07,600
uh things in the contract uh which have

854
00:29:07,600 --> 00:29:08,159
been

855
00:29:08,159 --> 00:29:11,200
um which have not been um

856
00:29:11,200 --> 00:29:13,919
define for example so you could have

857
00:29:13,919 --> 00:29:15,200
some error conditions

858
00:29:15,200 --> 00:29:17,440
that you forgot to put inside the

859
00:29:17,440 --> 00:29:19,120
contract or there are things in the

860
00:29:19,120 --> 00:29:20,640
contract that have been changed and need

861
00:29:20,640 --> 00:29:22,480
to be changed implementation but anyway

862
00:29:22,480 --> 00:29:25,279
the whole idea is from a governance

863
00:29:25,279 --> 00:29:26,159
point of view

864
00:29:26,159 --> 00:29:28,080
what you want to make sure is at any

865
00:29:28,080 --> 00:29:29,279
point in time

866
00:29:29,279 --> 00:29:31,919
what the contract says again this is

867
00:29:31,919 --> 00:29:32,399
about

868
00:29:32,399 --> 00:29:34,640
this is what my api is doing and the

869
00:29:34,640 --> 00:29:35,919
implementation of that

870
00:29:35,919 --> 00:29:38,960
are in line and you know you can hammer

871
00:29:38,960 --> 00:29:41,760
and friends your api as much as you want

872
00:29:41,760 --> 00:29:42,320
it will

873
00:29:42,320 --> 00:29:45,120
always answer as per the contract that

874
00:29:45,120 --> 00:29:46,880
is really the idea

875
00:29:46,880 --> 00:29:50,399
right so my um call to

876
00:29:50,399 --> 00:29:53,440
action for you um is really to

877
00:29:53,440 --> 00:29:56,320
to do this shift left movement which is

878
00:29:56,320 --> 00:29:57,279
to really

879
00:29:57,279 --> 00:30:00,880
look at security as early as possible

880
00:30:00,880 --> 00:30:04,320
and and if you know um if if

881
00:30:04,320 --> 00:30:07,120
cost is an issue which usually it is it

882
00:30:07,120 --> 00:30:07,520
is

883
00:30:07,520 --> 00:30:10,000
well proven that it's very very hard as

884
00:30:10,000 --> 00:30:12,480
i said any design decision is very

885
00:30:12,480 --> 00:30:13,840
difficult to fix

886
00:30:13,840 --> 00:30:16,640
so if you made a bad design decision on

887
00:30:16,640 --> 00:30:17,679
the contrary you even

888
00:30:17,679 --> 00:30:21,200
even looked at what the decision uh

889
00:30:21,200 --> 00:30:24,399
should be adding this after the fact

890
00:30:24,399 --> 00:30:27,120
it is very costly and and finding all

891
00:30:27,120 --> 00:30:28,480
those problems from a security

892
00:30:28,480 --> 00:30:29,200
standpoint

893
00:30:29,200 --> 00:30:31,600
very late in life cycle is very

894
00:30:31,600 --> 00:30:33,760
expensive to fix so the earlier you

895
00:30:33,760 --> 00:30:35,120
address those

896
00:30:35,120 --> 00:30:37,200
the easier it's going to be to do

897
00:30:37,200 --> 00:30:38,799
technically and the less

898
00:30:38,799 --> 00:30:41,279
expensive it's going to be right now

899
00:30:41,279 --> 00:30:43,360
hack yourself so we said that you have

900
00:30:43,360 --> 00:30:44,880
to hack yourself this is all

901
00:30:44,880 --> 00:30:47,840
testing that i was talking about usually

902
00:30:47,840 --> 00:30:49,600
what i see people doing is testing the

903
00:30:49,600 --> 00:30:50,080
the

904
00:30:50,080 --> 00:30:52,159
what i call the happy path right so it's

905
00:30:52,159 --> 00:30:54,640
like if i put some right data the api is

906
00:30:54,640 --> 00:30:55,919
basically working

907
00:30:55,919 --> 00:30:58,399
maybe it's a bit of testing of some data

908
00:30:58,399 --> 00:30:59,600
is not right

909
00:30:59,600 --> 00:31:02,159
uh like the token is not is wrong then

910
00:31:02,159 --> 00:31:03,360
we should not answer

911
00:31:03,360 --> 00:31:05,760
that's usually being you know thought of

912
00:31:05,760 --> 00:31:08,000
but really what you want to do is at

913
00:31:08,000 --> 00:31:10,720
every stage every time you change an api

914
00:31:10,720 --> 00:31:11,679
you have to

915
00:31:11,679 --> 00:31:13,840
hammer your api with bad data bad

916
00:31:13,840 --> 00:31:15,039
formats

917
00:31:15,039 --> 00:31:17,519
bad users bad tokens anything that can

918
00:31:17,519 --> 00:31:18,159
basically

919
00:31:18,159 --> 00:31:21,120
happen is actually something you want to

920
00:31:21,120 --> 00:31:21,519
test

921
00:31:21,519 --> 00:31:23,200
every time you make a change because

922
00:31:23,200 --> 00:31:24,480
every time you make a change you have

923
00:31:24,480 --> 00:31:25,919
the opportunity to do something wrong

924
00:31:25,919 --> 00:31:27,760
and introduce a new problem

925
00:31:27,760 --> 00:31:30,640
so that's another big message security

926
00:31:30,640 --> 00:31:32,960
is not a one time off it's not like

927
00:31:32,960 --> 00:31:35,679
you test something in july right and you

928
00:31:35,679 --> 00:31:37,039
don't look at it again

929
00:31:37,039 --> 00:31:38,960
until september that doesn't work this

930
00:31:38,960 --> 00:31:41,120
way because in between those two things

931
00:31:41,120 --> 00:31:44,399
all you get is a snapshot and zillions

932
00:31:44,399 --> 00:31:45,760
of things could have changed between

933
00:31:45,760 --> 00:31:47,200
those two dates right

934
00:31:47,200 --> 00:31:49,279
so that's why it's so important that you

935
00:31:49,279 --> 00:31:50,240
do this

936
00:31:50,240 --> 00:31:52,240
every time something is changing it has

937
00:31:52,240 --> 00:31:54,399
to be part of your pipeline right

938
00:31:54,399 --> 00:31:57,600
so the the it's very critical to

939
00:31:57,600 --> 00:31:59,200
automate security

940
00:31:59,200 --> 00:32:01,840
don't rely on manual testing every x and

941
00:32:01,840 --> 00:32:02,799
y

942
00:32:02,799 --> 00:32:05,760
of course you can do manual testing with

943
00:32:05,760 --> 00:32:07,519
with pen testing

944
00:32:07,519 --> 00:32:09,120
regularly you're not going to do a pen

945
00:32:09,120 --> 00:32:11,039
test every time you change three lines

946
00:32:11,039 --> 00:32:12,799
of code in your api of course not if

947
00:32:12,799 --> 00:32:14,080
even for a coast

948
00:32:14,080 --> 00:32:16,000
you know because of the cost you will

949
00:32:16,000 --> 00:32:18,320
have at many different levels

950
00:32:18,320 --> 00:32:21,760
but um this automated testing if

951
00:32:21,760 --> 00:32:23,360
everyone was doing this like

952
00:32:23,360 --> 00:32:25,519
api security i o will have much less

953
00:32:25,519 --> 00:32:27,440
entries that's kind of what we want

954
00:32:27,440 --> 00:32:28,080
right

955
00:32:28,080 --> 00:32:31,039
so our goal is you know at 42 crunch and

956
00:32:31,039 --> 00:32:32,720
in the industry in general it's just to

957
00:32:32,720 --> 00:32:34,880
make sure you really shift left

958
00:32:34,880 --> 00:32:37,120
do all this automatically as much as

959
00:32:37,120 --> 00:32:38,720
possible so we have much

960
00:32:38,720 --> 00:32:42,320
better apis much more secure apis and

961
00:32:42,320 --> 00:32:45,919
and um and and and more work um

962
00:32:45,919 --> 00:32:47,279
less work i would say for for all

963
00:32:47,279 --> 00:32:49,600
hackers around there all right

964
00:32:49,600 --> 00:32:51,279
and those are the references of the

965
00:32:51,279 --> 00:32:53,120
things that i've been uh talking about

966
00:32:53,120 --> 00:32:56,399
and um although thank you for your

967
00:32:56,399 --> 00:32:59,600
um for your time today i encourage you

968
00:32:59,600 --> 00:33:02,000
to go and and and see api secret io

969
00:33:02,000 --> 00:33:04,080
that we are creating subscribe to the

970
00:33:04,080 --> 00:33:05,840
newsletter there's a lot to learn about

971
00:33:05,840 --> 00:33:07,279
all those practices

972
00:33:07,279 --> 00:33:08,960
and about breaches it's always good to

973
00:33:08,960 --> 00:33:11,200
learn from others people mistake

974
00:33:11,200 --> 00:33:14,000
and we'll be now taking some questions

975
00:33:14,000 --> 00:33:15,440
through the q a

976
00:33:15,440 --> 00:33:23,120
thank you for your attention

