1
00:00:07,530 --> 00:00:10,730
[Music]

2
00:00:12,240 --> 00:00:13,280
hi everyone

3
00:00:13,280 --> 00:00:15,040
um andy and i are really happy to be

4
00:00:15,040 --> 00:00:17,199
here at devsevcon24

5
00:00:17,199 --> 00:00:19,760
um really excited to tell this talk

6
00:00:19,760 --> 00:00:20,800
where we're going to be telling you

7
00:00:20,800 --> 00:00:22,800
stories about five different security

8
00:00:22,800 --> 00:00:24,320
incidents that

9
00:00:24,320 --> 00:00:26,160
basically andy has lived through in his

10
00:00:26,160 --> 00:00:29,439
previous life at ciso as ciso at akmai

11
00:00:29,439 --> 00:00:31,359
and talking about what they mean for

12
00:00:31,359 --> 00:00:32,880
building secure systems

13
00:00:32,880 --> 00:00:35,200
specifically for supporting access to

14
00:00:35,200 --> 00:00:36,640
infrastructure

15
00:00:36,640 --> 00:00:39,280
um so who are we i'm sharon goldberg i'm

16
00:00:39,280 --> 00:00:42,399
the ceo and co-founder of bastian xero

17
00:00:42,399 --> 00:00:44,160
we also have andy ellis who is an

18
00:00:44,160 --> 00:00:46,399
operating partner at wild ventures andy

19
00:00:46,399 --> 00:00:47,840
and i have known each other for about a

20
00:00:47,840 --> 00:00:48,399
decade

21
00:00:48,399 --> 00:00:50,800
um me coming from a research background

22
00:00:50,800 --> 00:00:53,360
um and previously andy worked as a cso

23
00:00:53,360 --> 00:00:56,160
um and um and here we are in our new

24
00:00:56,160 --> 00:00:56,640
roles

25
00:00:56,640 --> 00:01:01,359
as ceo and vc so um

26
00:01:01,359 --> 00:01:04,319
i guess we'll just get started yes let's

27
00:01:04,319 --> 00:01:04,879
do that

28
00:01:04,879 --> 00:01:07,280
let's do it okay yeah so you know what

29
00:01:07,280 --> 00:01:08,799
we're specifically talking about

30
00:01:08,799 --> 00:01:11,840
is administrative access to resources in

31
00:01:11,840 --> 00:01:12,799
the cloud

32
00:01:12,799 --> 00:01:14,720
so a lot of organizations and i think

33
00:01:14,720 --> 00:01:16,560
everyone here is familiar with building

34
00:01:16,560 --> 00:01:18,320
systems to keep outsiders

35
00:01:18,320 --> 00:01:20,240
out of your cloud you know you don't

36
00:01:20,240 --> 00:01:22,240
want arbitrary people getting in

37
00:01:22,240 --> 00:01:24,000
and accessing your system so we've got

38
00:01:24,000 --> 00:01:25,600
firewalls we've got software gateways

39
00:01:25,600 --> 00:01:26,000
we've got

40
00:01:26,000 --> 00:01:27,600
intrusion protection systems all this

41
00:01:27,600 --> 00:01:29,520
stuff is there but at the end of the day

42
00:01:29,520 --> 00:01:30,799
you may still need your incident

43
00:01:30,799 --> 00:01:33,600
responders your sres your devops folks

44
00:01:33,600 --> 00:01:35,600
still need to get in sometimes to be

45
00:01:35,600 --> 00:01:37,119
able to see what's going on when things

46
00:01:37,119 --> 00:01:38,720
break and really sort of locking this

47
00:01:38,720 --> 00:01:39,119
access

48
00:01:39,119 --> 00:01:40,640
out is very hard to do for a lot of

49
00:01:40,640 --> 00:01:42,159
organizations

50
00:01:42,159 --> 00:01:43,520
so what we really want to talk about

51
00:01:43,520 --> 00:01:45,920
here is administrative access sort of

52
00:01:45,920 --> 00:01:48,240
insider access to cloud environments

53
00:01:48,240 --> 00:01:50,479
and security principles that are

54
00:01:50,479 --> 00:01:51,920
important to consider when you're

55
00:01:51,920 --> 00:01:53,759
providing this type of administrative

56
00:01:53,759 --> 00:01:54,560
access

57
00:01:54,560 --> 00:01:56,159
and this is going to be a history lesson

58
00:01:56,159 --> 00:01:58,880
in five acts andy what are the acts

59
00:01:58,880 --> 00:02:01,920
so our act started in 2001 with fluffy

60
00:02:01,920 --> 00:02:02,640
bunny

61
00:02:02,640 --> 00:02:04,079
we're going to jump forward and talk a

62
00:02:04,079 --> 00:02:06,000
little about operation aurora

63
00:02:06,000 --> 00:02:09,119
in 2009 then the diginotar incident in

64
00:02:09,119 --> 00:02:10,160
2011

65
00:02:10,160 --> 00:02:11,599
uh and then we're going to wrap up with

66
00:02:11,599 --> 00:02:13,599
not petchen solar winds for some recent

67
00:02:13,599 --> 00:02:15,200
history

68
00:02:15,200 --> 00:02:17,200
we're going to go from a 20-year history

69
00:02:17,200 --> 00:02:18,640
of different incidents many of which

70
00:02:18,640 --> 00:02:20,560
andy had to actually deal with um when

71
00:02:20,560 --> 00:02:22,400
they were happening in his environments

72
00:02:22,400 --> 00:02:24,400
so it'll be fun to hear from andy about

73
00:02:24,400 --> 00:02:25,840
some of that

74
00:02:25,840 --> 00:02:27,920
okay so let's start with sort of the

75
00:02:27,920 --> 00:02:29,680
classic architecture that

76
00:02:29,680 --> 00:02:31,760
is still in place um in a lot of

77
00:02:31,760 --> 00:02:33,760
organizations and is very dear to my

78
00:02:33,760 --> 00:02:36,640
heart as the ceo of bastian xero

79
00:02:36,640 --> 00:02:39,040
and so this is a bastion architecture so

80
00:02:39,040 --> 00:02:41,040
in the classic bastion architecture what

81
00:02:41,040 --> 00:02:42,800
you would have is you would have

82
00:02:42,800 --> 00:02:45,360
an engineer that has an ssh key you have

83
00:02:45,360 --> 00:02:46,560
a bastion host

84
00:02:46,560 --> 00:02:49,120
that's got a public ip this engineer is

85
00:02:49,120 --> 00:02:50,000
able to ssh

86
00:02:50,000 --> 00:02:52,080
into the bastion host and from there can

87
00:02:52,080 --> 00:02:53,760
use this fashion host to access

88
00:02:53,760 --> 00:02:56,480
infrastructure um in inside the cloud

89
00:02:56,480 --> 00:02:58,080
some of which may be on private

90
00:02:58,080 --> 00:03:01,599
on private ips um in this particular

91
00:03:01,599 --> 00:03:03,519
example we're going to give

92
00:03:03,519 --> 00:03:04,800
we're going to actually walk through the

93
00:03:04,800 --> 00:03:06,879
fluffy bunny um incident and so with

94
00:03:06,879 --> 00:03:08,640
this particular bastion host that andy

95
00:03:08,640 --> 00:03:09,760
and i have here

96
00:03:09,760 --> 00:03:12,720
has an ssh key that allows access to one

97
00:03:12,720 --> 00:03:14,159
of the targets that's actually sitting

98
00:03:14,159 --> 00:03:16,080
on the bastion house so the bastion host

99
00:03:16,080 --> 00:03:18,879
itself is housing ssh keys i want to

100
00:03:18,879 --> 00:03:20,159
mention that a lot of

101
00:03:20,159 --> 00:03:22,560
organizations may not have this ssh key

102
00:03:22,560 --> 00:03:23,840
actually sitting on the bastion they may

103
00:03:23,840 --> 00:03:25,840
have it actually sitting on the user

104
00:03:25,840 --> 00:03:27,360
on the user's machine but in any case

105
00:03:27,360 --> 00:03:29,120
that's what we're going to start with

106
00:03:29,120 --> 00:03:30,799
and andy why don't you walk us through

107
00:03:30,799 --> 00:03:33,280
what happened in 2001 and in fact in

108
00:03:33,280 --> 00:03:35,440
2001 it's even worse because

109
00:03:35,440 --> 00:03:37,440
many of these systems are using ssh

110
00:03:37,440 --> 00:03:38,480
passwords

111
00:03:38,480 --> 00:03:41,120
so just rep pretend that key is actually

112
00:03:41,120 --> 00:03:42,000
a password

113
00:03:42,000 --> 00:03:43,840
and in this case you know the adversary

114
00:03:43,840 --> 00:03:45,680
would compromise someone's machine

115
00:03:45,680 --> 00:03:47,040
doesn't matter whose it was

116
00:03:47,040 --> 00:03:48,799
and they would just replace the ssh

117
00:03:48,799 --> 00:03:51,280
client and what that ssh client would do

118
00:03:51,280 --> 00:03:54,480
was log keys and passwords

119
00:03:54,480 --> 00:03:56,560
but not past phrases this is the one

120
00:03:56,560 --> 00:03:57,920
sort of saving incident

121
00:03:57,920 --> 00:04:00,000
saving grace of this incident is that it

122
00:04:00,000 --> 00:04:02,239
doesn't log the passphrase that encrypts

123
00:04:02,239 --> 00:04:03,840
the ssh key

124
00:04:03,840 --> 00:04:06,000
but when the user logs in now the

125
00:04:06,000 --> 00:04:07,920
adversary has that credential

126
00:04:07,920 --> 00:04:09,680
the password and then they log into the

127
00:04:09,680 --> 00:04:11,519
bastion host the same way that the user

128
00:04:11,519 --> 00:04:12,080
did

129
00:04:12,080 --> 00:04:14,560
uses the local privilege escalation to

130
00:04:14,560 --> 00:04:15,519
get root access

131
00:04:15,519 --> 00:04:18,238
replace the ssh client and now when

132
00:04:18,238 --> 00:04:20,639
someone logs in from that bastion host

133
00:04:20,639 --> 00:04:22,240
to any machine

134
00:04:22,240 --> 00:04:24,639
the adversary gets their credential and

135
00:04:24,639 --> 00:04:25,680
is able to

136
00:04:25,680 --> 00:04:27,919
connect further and this adversary

137
00:04:27,919 --> 00:04:29,360
basically moved through a number of

138
00:04:29,360 --> 00:04:31,520
environments level three akamai a number

139
00:04:31,520 --> 00:04:32,800
of other places

140
00:04:32,800 --> 00:04:35,759
just sort of collecting ssh passwords

141
00:04:35,759 --> 00:04:37,759
and what systems they were good at

142
00:04:37,759 --> 00:04:41,520
uh going after so taking advantage of

143
00:04:41,520 --> 00:04:43,280
these points where you'd collect

144
00:04:43,280 --> 00:04:44,960
because one user would log in and now

145
00:04:44,960 --> 00:04:46,800
you would get 50 users

146
00:04:46,800 --> 00:04:49,759
credentials or 100 users credentials so

147
00:04:49,759 --> 00:04:51,199
it's like a really to me really

148
00:04:51,199 --> 00:04:53,040
incredible attack in the sense that this

149
00:04:53,040 --> 00:04:54,080
adversary just

150
00:04:54,080 --> 00:04:56,240
ripped out your ssh client replaced it

151
00:04:56,240 --> 00:04:58,240
with malware that x filled the keys and

152
00:04:58,240 --> 00:05:00,400
just kept moving laterally through

153
00:05:00,400 --> 00:05:02,720
um stealing stealing credentials in this

154
00:05:02,720 --> 00:05:04,560
way and this was 2001.

155
00:05:04,560 --> 00:05:07,199
2001 and and this attacker group

156
00:05:07,199 --> 00:05:09,039
actually got really excited because they

157
00:05:09,039 --> 00:05:10,000
knew they'd breached

158
00:05:10,000 --> 00:05:12,160
akamai what they didn't realize is that

159
00:05:12,160 --> 00:05:13,919
our deployed network what they really

160
00:05:13,919 --> 00:05:15,440
wanted to have control of

161
00:05:15,440 --> 00:05:18,720
used ssh keys to log in not passwords

162
00:05:18,720 --> 00:05:20,080
and since they weren't copying the

163
00:05:20,080 --> 00:05:21,919
passphrases they didn't get access to

164
00:05:21,919 --> 00:05:22,639
that

165
00:05:22,639 --> 00:05:24,960
instead they just had access to you know

166
00:05:24,960 --> 00:05:26,639
developer systems you know

167
00:05:26,639 --> 00:05:28,800
managed to steal some old source code

168
00:05:28,800 --> 00:05:29,759
they thought that would be really

169
00:05:29,759 --> 00:05:31,520
helpful to them

170
00:05:31,520 --> 00:05:33,280
and we were very fortunate that we just

171
00:05:33,280 --> 00:05:34,800
detected it quickly and were able to

172
00:05:34,800 --> 00:05:37,039
purge it out of our environment

173
00:05:37,039 --> 00:05:38,560
so why don't you walk us through sort of

174
00:05:38,560 --> 00:05:40,639
some of the lessons that akamai learned

175
00:05:40,639 --> 00:05:42,240
and that we can all take from this type

176
00:05:42,240 --> 00:05:42,960
of

177
00:05:42,960 --> 00:05:45,039
type of incident so first of all

178
00:05:45,039 --> 00:05:46,000
important lesson

179
00:05:46,000 --> 00:05:48,160
is don't try to get to perfect in an

180
00:05:48,160 --> 00:05:49,520
incident

181
00:05:49,520 --> 00:05:51,600
what can you do very quickly to make it

182
00:05:51,600 --> 00:05:53,840
better and then incremental steps so

183
00:05:53,840 --> 00:05:55,759
you know eliminate the standing

184
00:05:55,759 --> 00:05:58,080
credentials we actually segregated our

185
00:05:58,080 --> 00:05:59,759
bastion hosts so that the ones that were

186
00:05:59,759 --> 00:06:00,560
being used

187
00:06:00,560 --> 00:06:03,120
for people to get into their desktops

188
00:06:03,120 --> 00:06:04,720
were not the ones people were using to

189
00:06:04,720 --> 00:06:06,400
then connect out to the deployed network

190
00:06:06,400 --> 00:06:07,360
we wanted to

191
00:06:07,360 --> 00:06:09,039
separate those those hadn't actually

192
00:06:09,039 --> 00:06:11,600
been separated you know we moved away

193
00:06:11,600 --> 00:06:13,440
from storing credentials on those hosts

194
00:06:13,440 --> 00:06:14,720
it took us a while

195
00:06:14,720 --> 00:06:17,199
to do that so you know migrated to ssh

196
00:06:17,199 --> 00:06:18,000
identities

197
00:06:18,000 --> 00:06:19,840
then it was identities that were being

198
00:06:19,840 --> 00:06:21,199
you know put into

199
00:06:21,199 --> 00:06:23,840
an agent on those bastion hosts and then

200
00:06:23,840 --> 00:06:24,800
eventually it was

201
00:06:24,800 --> 00:06:27,360
a transparent proxy it's only

202
00:06:27,360 --> 00:06:28,720
transparent to the user

203
00:06:28,720 --> 00:06:30,560
uh where you would log in and your

204
00:06:30,560 --> 00:06:31,919
credentials would

205
00:06:31,919 --> 00:06:34,080
you know allow you to splice to a

206
00:06:34,080 --> 00:06:35,600
forward connection to where you want it

207
00:06:35,600 --> 00:06:36,639
to go to

208
00:06:36,639 --> 00:06:38,800
so each of these we're trying to remove

209
00:06:38,800 --> 00:06:41,520
that that single point of compromise

210
00:06:41,520 --> 00:06:44,080
uh you know or at least reduce its scope

211
00:06:44,080 --> 00:06:45,440
if you have that thing that is that

212
00:06:45,440 --> 00:06:46,639
valuable allowing

213
00:06:46,639 --> 00:06:48,240
lots of users to log into it was

214
00:06:48,240 --> 00:06:50,160
certainly a problem for us

215
00:06:50,160 --> 00:06:52,160
i want to highlight like the the one of

216
00:06:52,160 --> 00:06:53,280
the interesting things about this

217
00:06:53,280 --> 00:06:55,120
incident was that the adversary was able

218
00:06:55,120 --> 00:06:56,639
to exfil these credentials

219
00:06:56,639 --> 00:06:59,120
and then use them later and so what this

220
00:06:59,120 --> 00:07:00,720
what this really points to sort of for

221
00:07:00,720 --> 00:07:02,000
modern architectures and i think

222
00:07:02,000 --> 00:07:03,280
most people listening to this already

223
00:07:03,280 --> 00:07:05,120
know this is that standing credentials

224
00:07:05,120 --> 00:07:05,680
are bad

225
00:07:05,680 --> 00:07:06,960
right and the reason they're bad is

226
00:07:06,960 --> 00:07:09,039
because if they get stolen they can be

227
00:07:09,039 --> 00:07:10,560
used in the future and that's what you

228
00:07:10,560 --> 00:07:11,199
don't want

229
00:07:11,199 --> 00:07:13,280
right you do not want to be relying on

230
00:07:13,280 --> 00:07:14,720
these credentials that are super long

231
00:07:14,720 --> 00:07:15,120
lived

232
00:07:15,120 --> 00:07:16,720
yeah so certainly in a case here where

233
00:07:16,720 --> 00:07:18,160
you're using sort of this two-stage

234
00:07:18,160 --> 00:07:20,080
credential you may be getting the user's

235
00:07:20,080 --> 00:07:22,240
credential to rotate quickly is hard

236
00:07:22,240 --> 00:07:24,000
but that second stage credential you can

237
00:07:24,000 --> 00:07:26,160
have on an automated rotation system

238
00:07:26,160 --> 00:07:28,639
so even if it's x filled it's a smaller

239
00:07:28,639 --> 00:07:30,560
window that it's useful

240
00:07:30,560 --> 00:07:33,440
right okay so now another classic

241
00:07:33,440 --> 00:07:34,880
architecture that we're all familiar

242
00:07:34,880 --> 00:07:37,440
with so vpn so why do we have vpns for

243
00:07:37,440 --> 00:07:38,080
access

244
00:07:38,080 --> 00:07:40,639
well because we have this notion that

245
00:07:40,639 --> 00:07:42,479
the user which is out in the internet

246
00:07:42,479 --> 00:07:43,120
like here

247
00:07:43,120 --> 00:07:44,879
me on my laptop at home i shouldn't be

248
00:07:44,879 --> 00:07:46,479
able to access these targets in the

249
00:07:46,479 --> 00:07:47,440
cloud just like that

250
00:07:47,440 --> 00:07:48,800
i should be they should be sort of

251
00:07:48,800 --> 00:07:50,560
hidden somewhere that i can't get into

252
00:07:50,560 --> 00:07:52,160
so essentially what we have is a bunch

253
00:07:52,160 --> 00:07:54,000
of targets on private ips

254
00:07:54,000 --> 00:07:56,160
and then a vpn that we can use to access

255
00:07:56,160 --> 00:07:58,960
these targets um

256
00:07:58,960 --> 00:08:00,800
and so what i find really interesting

257
00:08:00,800 --> 00:08:02,080
about this is that

258
00:08:02,080 --> 00:08:03,520
this this incident that andy's going to

259
00:08:03,520 --> 00:08:05,440
talk us through in a second is operation

260
00:08:05,440 --> 00:08:07,599
aurora is sort of like the classic

261
00:08:07,599 --> 00:08:10,479
uh a classic example for why just

262
00:08:10,479 --> 00:08:12,720
sticking your stuff behind a vpn is not

263
00:08:12,720 --> 00:08:14,080
necessarily going to be

264
00:08:14,080 --> 00:08:15,599
good enough so why don't you walk us

265
00:08:15,599 --> 00:08:17,440
through what happened here

266
00:08:17,440 --> 00:08:19,440
so this one's interesting in that we

267
00:08:19,440 --> 00:08:21,199
don't actually know all the details of

268
00:08:21,199 --> 00:08:22,000
what happened

269
00:08:22,000 --> 00:08:24,560
because the adversary had such a long

270
00:08:24,560 --> 00:08:25,520
dwell time

271
00:08:25,520 --> 00:08:27,680
that the first way that they got in we

272
00:08:27,680 --> 00:08:29,280
really didn't understand

273
00:08:29,280 --> 00:08:31,759
and a challenge of this architecture in

274
00:08:31,759 --> 00:08:33,120
general is the

275
00:08:33,120 --> 00:08:34,958
philosophy people end up with from risk

276
00:08:34,958 --> 00:08:37,440
compensation they say oh look i'm behind

277
00:08:37,440 --> 00:08:38,640
the firewall

278
00:08:38,640 --> 00:08:40,320
i can't have adversaries connecting to

279
00:08:40,320 --> 00:08:42,000
me so if i don't patch my system it's

280
00:08:42,000 --> 00:08:43,039
not the end of the world

281
00:08:43,039 --> 00:08:44,480
if i don't harden the system it's not

282
00:08:44,480 --> 00:08:46,399
the end of the world so what happens

283
00:08:46,399 --> 00:08:47,120
here is

284
00:08:47,120 --> 00:08:49,760
first the adversary gets access to some

285
00:08:49,760 --> 00:08:50,399
machine

286
00:08:50,399 --> 00:08:52,240
now that could be a spear phishing

287
00:08:52,240 --> 00:08:54,560
attack compromises a desktop

288
00:08:54,560 --> 00:08:56,080
any number of ways we don't actually

289
00:08:56,080 --> 00:08:57,600
know how they first got in

290
00:08:57,600 --> 00:08:59,519
certainly to our enterprise because we

291
00:08:59,519 --> 00:09:01,360
get notified like a year later

292
00:09:01,360 --> 00:09:03,519
from of all people google heather adkins

293
00:09:03,519 --> 00:09:04,959
calls me up one day and says

294
00:09:04,959 --> 00:09:07,120
hey by the way you are compromised

295
00:09:07,120 --> 00:09:08,480
because we're now running the command

296
00:09:08,480 --> 00:09:10,080
and control server

297
00:09:10,080 --> 00:09:12,320
for this botnet because it had been

298
00:09:12,320 --> 00:09:13,360
abandoned so they just

299
00:09:13,360 --> 00:09:15,120
grabbed the domain name and saw who was

300
00:09:15,120 --> 00:09:17,360
connecting to it but once the adversary

301
00:09:17,360 --> 00:09:17,839
is in

302
00:09:17,839 --> 00:09:19,600
now they're in this like soft squishy

303
00:09:19,600 --> 00:09:21,519
inside and so they can move

304
00:09:21,519 --> 00:09:23,680
laterally inside the environment until

305
00:09:23,680 --> 00:09:25,360
they find the systems that are going to

306
00:09:25,360 --> 00:09:26,959
be interesting to them

307
00:09:26,959 --> 00:09:29,360
uh and they're they're often not doing

308
00:09:29,360 --> 00:09:31,120
things that are obviously bad

309
00:09:31,120 --> 00:09:32,959
certainly from a network perspective you

310
00:09:32,959 --> 00:09:34,640
know they're not running crypto miners

311
00:09:34,640 --> 00:09:36,080
that are going to be noticeable

312
00:09:36,080 --> 00:09:38,080
because they're looking very carefully

313
00:09:38,080 --> 00:09:40,480
for something of value

314
00:09:40,480 --> 00:09:42,480
in this case you know the system in our

315
00:09:42,480 --> 00:09:44,480
environment that they got on was uh

316
00:09:44,480 --> 00:09:47,920
financial uh reporting software that

317
00:09:47,920 --> 00:09:50,640
we use to do our public earnings

318
00:09:50,640 --> 00:09:52,000
announcements

319
00:09:52,000 --> 00:09:53,760
but in a lot of enterprises are also

320
00:09:53,760 --> 00:09:56,000
used to do things like

321
00:09:56,000 --> 00:09:58,080
validate which line of code is the most

322
00:09:58,080 --> 00:09:59,680
profitable one in your business

323
00:09:59,680 --> 00:10:01,279
we didn't have that module but you can

324
00:10:01,279 --> 00:10:03,519
see how that would be a very useful

325
00:10:03,519 --> 00:10:05,920
thing for an adversary to get is your

326
00:10:05,920 --> 00:10:08,240
entire source code

327
00:10:08,240 --> 00:10:10,880
indexed by how profitable every module

328
00:10:10,880 --> 00:10:13,360
within it is

329
00:10:13,360 --> 00:10:15,600
and so um you know in terms of the

330
00:10:15,600 --> 00:10:17,360
takeaways this is the this is sort of

331
00:10:17,360 --> 00:10:18,480
the lesson for all

332
00:10:18,480 --> 00:10:21,680
sort of modern um modern segmentations

333
00:10:21,680 --> 00:10:24,480
of of clouds and networks right um so

334
00:10:24,480 --> 00:10:26,399
what what happened at akamai you know

335
00:10:26,399 --> 00:10:28,000
after this after this happened what did

336
00:10:28,000 --> 00:10:30,079
you guys change we started a 10-year

337
00:10:30,079 --> 00:10:31,120
initiative so

338
00:10:31,120 --> 00:10:33,200
sometimes you move really slow sometimes

339
00:10:33,200 --> 00:10:34,160
you move fast

340
00:10:34,160 --> 00:10:35,600
you know one of the things we did that's

341
00:10:35,600 --> 00:10:37,440
going to be relevant in a couple of

342
00:10:37,440 --> 00:10:41,120
our history lessons was segmenting our

343
00:10:41,120 --> 00:10:44,000
user permissions our administrator

344
00:10:44,000 --> 00:10:44,800
permissions

345
00:10:44,800 --> 00:10:46,240
but really this is where we start to

346
00:10:46,240 --> 00:10:48,160
segment our architecture and you know

347
00:10:48,160 --> 00:10:49,200
don't base trust on

348
00:10:49,200 --> 00:10:51,120
network location which many of you may

349
00:10:51,120 --> 00:10:53,519
recognize as one of the core principles

350
00:10:53,519 --> 00:10:55,760
behind the whole zero trust movement

351
00:10:55,760 --> 00:10:57,440
that becomes popular

352
00:10:57,440 --> 00:10:58,640
and who are sort of the two big

353
00:10:58,640 --> 00:11:01,200
companies that push zero trust plays

354
00:11:01,200 --> 00:11:03,040
over the last 10 years is google and

355
00:11:03,040 --> 00:11:04,320
document

356
00:11:04,320 --> 00:11:05,920
both of whom are breached in operation

357
00:11:05,920 --> 00:11:08,240
aurora so what you start to see is this

358
00:11:08,240 --> 00:11:09,440
movement to say

359
00:11:09,440 --> 00:11:11,519
how do we do you know authentication at

360
00:11:11,519 --> 00:11:12,880
the application layer

361
00:11:12,880 --> 00:11:14,480
how do we ensure that you just can't

362
00:11:14,480 --> 00:11:16,480
talk to ports if you don't need to

363
00:11:16,480 --> 00:11:19,040
that if i'm you know a user i should be

364
00:11:19,040 --> 00:11:20,800
able to talk to a web service but

365
00:11:20,800 --> 00:11:22,560
there's no reason for me to talk to

366
00:11:22,560 --> 00:11:25,120
any other protocol on a server because

367
00:11:25,120 --> 00:11:26,640
i'm not an administrator

368
00:11:26,640 --> 00:11:28,800
so we don't just say oh you're inside

369
00:11:28,800 --> 00:11:29,839
the firewall

370
00:11:29,839 --> 00:11:31,920
let's give you access to things and in

371
00:11:31,920 --> 00:11:33,680
fact at the the culmination of our

372
00:11:33,680 --> 00:11:34,720
10-year journey

373
00:11:34,720 --> 00:11:37,200
we kick our users outside the firewall

374
00:11:37,200 --> 00:11:37,760
most

375
00:11:37,760 --> 00:11:40,800
employees at akamai by day i left were

376
00:11:40,800 --> 00:11:41,120
not

377
00:11:41,120 --> 00:11:44,079
ever inside the vpn everything they did

378
00:11:44,079 --> 00:11:44,880
came over

379
00:11:44,880 --> 00:11:47,680
proxied web you know connections so that

380
00:11:47,680 --> 00:11:48,079
we

381
00:11:48,079 --> 00:11:49,839
didn't trust them just because they

382
00:11:49,839 --> 00:11:51,600
happened to be employees or physically

383
00:11:51,600 --> 00:11:54,320
located in one of our buildings

384
00:11:54,320 --> 00:11:56,000
celine brought up zero trust and i

385
00:11:56,000 --> 00:11:57,839
actually think that's a great segue into

386
00:11:57,839 --> 00:11:58,480
the next

387
00:11:58,480 --> 00:12:00,800
um into the next sort of set of slides

388
00:12:00,800 --> 00:12:02,160
so um

389
00:12:02,160 --> 00:12:04,560
so this is a little bit of what xero

390
00:12:04,560 --> 00:12:05,680
trust access

391
00:12:05,680 --> 00:12:07,600
looks like today in a lot of products

392
00:12:07,600 --> 00:12:09,600
that are out there in the market

393
00:12:09,600 --> 00:12:11,040
and what's happening in these types of

394
00:12:11,040 --> 00:12:13,600
architectures is the goal is to get rid

395
00:12:13,600 --> 00:12:15,279
of standing credentials right we don't

396
00:12:15,279 --> 00:12:15,920
want to have

397
00:12:15,920 --> 00:12:19,440
alice over here you know here she is

398
00:12:19,440 --> 00:12:21,600
we don't want her to have a key that

399
00:12:21,600 --> 00:12:23,200
lives forever because we worry about

400
00:12:23,200 --> 00:12:24,880
fluffy bunny coming in and actually

401
00:12:24,880 --> 00:12:26,480
exfilling that key and using it six

402
00:12:26,480 --> 00:12:28,160
months later to hack our systems right

403
00:12:28,160 --> 00:12:29,519
so we want to give her short-lived

404
00:12:29,519 --> 00:12:31,680
credentials short-lived access

405
00:12:31,680 --> 00:12:34,320
um we want to segment access right so we

406
00:12:34,320 --> 00:12:36,079
want to when alice wants to access the

407
00:12:36,079 --> 00:12:37,920
server we want to first validate like

408
00:12:37,920 --> 00:12:39,760
does she even really need access to this

409
00:12:39,760 --> 00:12:41,040
server does she have

410
00:12:41,040 --> 00:12:43,200
a policy or a role or an authorization

411
00:12:43,200 --> 00:12:45,279
or whatever your system may do

412
00:12:45,279 --> 00:12:47,040
that justifies giving her access right

413
00:12:47,040 --> 00:12:48,800
and so one of the ways to do this is to

414
00:12:48,800 --> 00:12:51,040
have alice come in

415
00:12:51,040 --> 00:12:53,519
um and and go to some sort of authority

416
00:12:53,519 --> 00:12:55,200
and say hi i'm alice she authenticates

417
00:12:55,200 --> 00:12:56,639
to the authority and then she gets some

418
00:12:56,639 --> 00:12:58,320
sort of credential that gives her access

419
00:12:58,320 --> 00:12:59,600
to the targets

420
00:12:59,600 --> 00:13:01,600
and in this example we're looking at

421
00:13:01,600 --> 00:13:03,279
certificate authorities as one way of

422
00:13:03,279 --> 00:13:04,800
getting this credential right so here's

423
00:13:04,800 --> 00:13:06,720
an example of a certificate

424
00:13:06,720 --> 00:13:07,920
this is going to be a short-lived

425
00:13:07,920 --> 00:13:09,519
certificate maybe it only lives for a

426
00:13:09,519 --> 00:13:11,040
couple of hours

427
00:13:11,040 --> 00:13:12,880
and alice can use it to get access to

428
00:13:12,880 --> 00:13:14,320
this target um

429
00:13:14,320 --> 00:13:15,680
and you know the certificate's got the

430
00:13:15,680 --> 00:13:19,120
name of the issuer her

431
00:13:19,120 --> 00:13:20,800
and identity and the signature of the

432
00:13:20,800 --> 00:13:23,040
issuer right but it's worth noting

433
00:13:23,040 --> 00:13:25,440
that you know the big advantage here is

434
00:13:25,440 --> 00:13:27,760
those end users those end machines don't

435
00:13:27,760 --> 00:13:28,959
need to know

436
00:13:28,959 --> 00:13:31,519
anything about alice in advance and

437
00:13:31,519 --> 00:13:32,639
there's nothing that says this

438
00:13:32,639 --> 00:13:34,800
credential has to be short-lived

439
00:13:34,800 --> 00:13:36,399
in fact when we think about a web server

440
00:13:36,399 --> 00:13:38,240
certificate which is the same thing

441
00:13:38,240 --> 00:13:40,800
or a client certificate often those have

442
00:13:40,800 --> 00:13:43,440
one year long life spans or multi-year

443
00:13:43,440 --> 00:13:45,680
and that can lead to sort of our the

444
00:13:45,680 --> 00:13:46,880
challenge here so why don't you walk us

445
00:13:46,880 --> 00:13:48,000
through an incident

446
00:13:48,000 --> 00:13:50,160
that exploits this sharon yeah so this

447
00:13:50,160 --> 00:13:51,360
is actually one of the things that i've

448
00:13:51,360 --> 00:13:52,959
been teaching in my cyber security class

449
00:13:52,959 --> 00:13:54,160
for 10 years

450
00:13:54,160 --> 00:13:56,880
um because it's 10 years old but it's

451
00:13:56,880 --> 00:13:58,160
it's it's really

452
00:13:58,160 --> 00:13:59,920
like a watershed moment i think in

453
00:13:59,920 --> 00:14:02,079
insecurity for for at least for tls

454
00:14:02,079 --> 00:14:04,320
so so this is what happened so there was

455
00:14:04,320 --> 00:14:06,639
a certificate authority

456
00:14:06,639 --> 00:14:09,680
that that was serving um assets in the

457
00:14:09,680 --> 00:14:11,120
netherlands they were doing like you

458
00:14:11,120 --> 00:14:11,920
know the dutch

459
00:14:11,920 --> 00:14:14,240
rmv and things like this um and they

460
00:14:14,240 --> 00:14:16,079
were able to issue certificates and the

461
00:14:16,079 --> 00:14:17,680
way that they issued certificates like i

462
00:14:17,680 --> 00:14:19,199
showed in the previous picture was that

463
00:14:19,199 --> 00:14:20,880
they would sign them with their key

464
00:14:20,880 --> 00:14:22,399
and give them to whoever needed them and

465
00:14:22,399 --> 00:14:24,000
those were allowed those were used to

466
00:14:24,000 --> 00:14:26,560
establish tls connections

467
00:14:26,560 --> 00:14:28,399
this dutch ca was actually trusted

468
00:14:28,399 --> 00:14:30,560
broadly across the world because

469
00:14:30,560 --> 00:14:32,320
their key that yellow key that you see

470
00:14:32,320 --> 00:14:33,760
was baked into

471
00:14:33,760 --> 00:14:35,680
a lot of different browsers and so even

472
00:14:35,680 --> 00:14:36,800
if i wasn't in

473
00:14:36,800 --> 00:14:39,120
holland but i wanted to access the dutch

474
00:14:39,120 --> 00:14:40,480
rmv i could like

475
00:14:40,480 --> 00:14:42,320
get a certificate from diginotar that

476
00:14:42,320 --> 00:14:44,000
would validate that the dutch rmv is who

477
00:14:44,000 --> 00:14:44,800
they say they are

478
00:14:44,800 --> 00:14:46,240
and then i could go visit their website

479
00:14:46,240 --> 00:14:49,279
securely however what happened

480
00:14:49,279 --> 00:14:50,720
this attacker and we still don't know

481
00:14:50,720 --> 00:14:52,399
who this was um

482
00:14:52,399 --> 00:14:55,120
stole the certificate authority key

483
00:14:55,120 --> 00:14:56,399
compromised that key

484
00:14:56,399 --> 00:14:58,639
and started issuing bogus certificates

485
00:14:58,639 --> 00:15:00,000
for whatever it wanted

486
00:15:00,000 --> 00:15:02,800
what it actually ended up issuing was a

487
00:15:02,800 --> 00:15:04,000
certificate to its

488
00:15:04,000 --> 00:15:07,040
to uh to google so that it could

489
00:15:07,040 --> 00:15:09,199
impersonate google and decrypt all the

490
00:15:09,199 --> 00:15:10,480
traffic that was going to google and

491
00:15:10,480 --> 00:15:11,920
what it ended up doing was

492
00:15:11,920 --> 00:15:15,360
reading and introspecting on um iranian

493
00:15:15,360 --> 00:15:17,920
users connecting with their email this

494
00:15:17,920 --> 00:15:19,519
is what ended up happening here

495
00:15:19,519 --> 00:15:20,959
and why did this whole thing happen it

496
00:15:20,959 --> 00:15:22,720
happened because the key the signing key

497
00:15:22,720 --> 00:15:24,240
for the certificate authority

498
00:15:24,240 --> 00:15:26,399
was not securely protected that was the

499
00:15:26,399 --> 00:15:27,760
flaw

500
00:15:27,760 --> 00:15:29,759
and so one flaw because what there's

501
00:15:29,759 --> 00:15:31,279
some more flaws here

502
00:15:31,279 --> 00:15:32,720
so why don't you walk us through some of

503
00:15:32,720 --> 00:15:34,720
our takeaways yeah so there

504
00:15:34,720 --> 00:15:36,480
that that is that was the sort of main

505
00:15:36,480 --> 00:15:37,759
thing that i wanted to say there was

506
00:15:37,759 --> 00:15:40,079
this key right that did you know turkey

507
00:15:40,079 --> 00:15:42,399
that everyone was trusting and it was

508
00:15:42,399 --> 00:15:44,079
acting as a root of trust for all of the

509
00:15:44,079 --> 00:15:46,000
browsers and when it was compromised

510
00:15:46,000 --> 00:15:48,240
you could compromise all you know

511
00:15:48,240 --> 00:15:49,440
anything you wanted in the whole

512
00:15:49,440 --> 00:15:51,279
internet that's the crazy part of this

513
00:15:51,279 --> 00:15:51,759
story

514
00:15:51,759 --> 00:15:54,160
right so there were two issues here one

515
00:15:54,160 --> 00:15:55,839
the fact that there was just one key

516
00:15:55,839 --> 00:15:58,000
stored in just one place at diginotar

517
00:15:58,000 --> 00:15:59,759
which the genotar apparently didn't do a

518
00:15:59,759 --> 00:16:01,519
good enough job protecting

519
00:16:01,519 --> 00:16:02,880
and the second thing that was a really

520
00:16:02,880 --> 00:16:04,720
crazy thing about this is the over broad

521
00:16:04,720 --> 00:16:05,519
scope

522
00:16:05,519 --> 00:16:08,639
so like why is my web browser trusting

523
00:16:08,639 --> 00:16:10,720
this weird little dutch certificate

524
00:16:10,720 --> 00:16:12,480
authority why should i trust it

525
00:16:12,480 --> 00:16:14,560
you know to give certificates to google

526
00:16:14,560 --> 00:16:17,040
which is not in the netherlands at all

527
00:16:17,040 --> 00:16:20,000
right this dutch ca that was supposed to

528
00:16:20,000 --> 00:16:22,000
be serving the netherlands only

529
00:16:22,000 --> 00:16:24,880
was not scoped only to dutch assets it

530
00:16:24,880 --> 00:16:26,240
was actually scoped

531
00:16:26,240 --> 00:16:27,920
to the whole internet and therefore

532
00:16:27,920 --> 00:16:29,920
google got compromised uh google was not

533
00:16:29,920 --> 00:16:31,120
compromised but therefore they could

534
00:16:31,120 --> 00:16:32,720
issue a certificate the attacker could

535
00:16:32,720 --> 00:16:34,480
issue a certificate for google

536
00:16:34,480 --> 00:16:36,079
so like bringing us back to the zero

537
00:16:36,079 --> 00:16:38,160
trust story right when we see these

538
00:16:38,160 --> 00:16:40,160
modern systems that are being based on

539
00:16:40,160 --> 00:16:41,759
short-lived certificates and certificate

540
00:16:41,759 --> 00:16:43,120
authorities

541
00:16:43,120 --> 00:16:45,279
for me you know you need to go and you

542
00:16:45,279 --> 00:16:46,880
need to look at them and say to yourself

543
00:16:46,880 --> 00:16:49,199
wait a minute have we just created a

544
00:16:49,199 --> 00:16:50,639
very strong

545
00:16:50,639 --> 00:16:51,920
point of compromise where the

546
00:16:51,920 --> 00:16:54,480
certificate authority's key if stolen

547
00:16:54,480 --> 00:16:55,839
could compromise my entire

548
00:16:55,839 --> 00:16:58,160
infrastructure and what is the scope of

549
00:16:58,160 --> 00:16:59,360
this key is the scope

550
00:16:59,360 --> 00:17:01,120
so large that i can compromise like all

551
00:17:01,120 --> 00:17:02,959
my clouds and all my infrastructure just

552
00:17:02,959 --> 00:17:05,280
imagine how sort of risky that could be

553
00:17:05,280 --> 00:17:07,439
if you're basing your um your access on

554
00:17:07,439 --> 00:17:08,799
a certificate authority

555
00:17:08,799 --> 00:17:10,959
and i think at this at this point we're

556
00:17:10,959 --> 00:17:12,400
we're saying stuff that's obvious for

557
00:17:12,400 --> 00:17:15,039
tls but i don't think yet obvious

558
00:17:15,039 --> 00:17:18,880
um in the zero trust market absolutely

559
00:17:18,880 --> 00:17:20,799
all right so this is uh i've got to turn

560
00:17:20,799 --> 00:17:22,079
this one over to you because i've never

561
00:17:22,079 --> 00:17:22,799
done

562
00:17:22,799 --> 00:17:26,400
much work witho yeah so

563
00:17:26,400 --> 00:17:28,720
yeah there's lots of ways to administer

564
00:17:28,720 --> 00:17:30,320
uh microsoft domain

565
00:17:30,320 --> 00:17:32,160
um and there's great ways and there's

566
00:17:32,160 --> 00:17:33,679
the out-of-the-box ways

567
00:17:33,679 --> 00:17:35,039
and what often happens when you're

568
00:17:35,039 --> 00:17:36,799
administering a domain is

569
00:17:36,799 --> 00:17:38,160
your domain admins have an

570
00:17:38,160 --> 00:17:40,000
administrative credential and

571
00:17:40,000 --> 00:17:41,600
this is often their password but then it

572
00:17:41,600 --> 00:17:43,039
gets converted into

573
00:17:43,039 --> 00:17:44,640
sort of a ticket that they're going to

574
00:17:44,640 --> 00:17:46,160
move around

575
00:17:46,160 --> 00:17:47,760
and what happens is you know they often

576
00:17:47,760 --> 00:17:49,360
do their work from some administrative

577
00:17:49,360 --> 00:17:51,039
servers they log in with the credential

578
00:17:51,039 --> 00:17:51,840
and now they're

579
00:17:51,840 --> 00:17:54,400
on that system with their credential you

580
00:17:54,400 --> 00:17:56,240
notice it's very similar to the bastion

581
00:17:56,240 --> 00:17:56,960
host

582
00:17:56,960 --> 00:17:58,240
and then they're going to do systems

583
00:17:58,240 --> 00:17:59,440
administration and so they're going to

584
00:17:59,440 --> 00:18:00,000
reach into

585
00:18:00,000 --> 00:18:02,559
a machine and do software updates or

586
00:18:02,559 --> 00:18:04,080
configuration changes

587
00:18:04,080 --> 00:18:05,919
and again they often are using the same

588
00:18:05,919 --> 00:18:07,600
administrative credential this is not a

589
00:18:07,600 --> 00:18:08,640
requirement

590
00:18:08,640 --> 00:18:10,960
but it is basically the default out of

591
00:18:10,960 --> 00:18:11,679
the box

592
00:18:11,679 --> 00:18:13,360
but you notice now this credentials in a

593
00:18:13,360 --> 00:18:14,880
lot of different places in the

594
00:18:14,880 --> 00:18:16,000
environment

595
00:18:16,000 --> 00:18:18,160
and that can be a problem and a

596
00:18:18,160 --> 00:18:20,320
challenge for a lot of enterprises

597
00:18:20,320 --> 00:18:21,919
and so i want to walk you through sort

598
00:18:21,919 --> 00:18:23,679
of what happens to a lot of entities in

599
00:18:23,679 --> 00:18:24,799
not pecha

600
00:18:24,799 --> 00:18:27,360
so not petches some ransomware and it

601
00:18:27,360 --> 00:18:29,360
used a watering hole attack in the

602
00:18:29,360 --> 00:18:30,960
supply chain so didn't even wait for

603
00:18:30,960 --> 00:18:31,520
users

604
00:18:31,520 --> 00:18:32,640
and for those who are not familiar with

605
00:18:32,640 --> 00:18:34,080
watering hole attack that's where you

606
00:18:34,080 --> 00:18:35,840
compromise something and wait for people

607
00:18:35,840 --> 00:18:36,880
to come to you

608
00:18:36,880 --> 00:18:38,320
the same way that you might you know as

609
00:18:38,320 --> 00:18:40,240
a bandit wait at the watering hole for a

610
00:18:40,240 --> 00:18:42,480
caravan to come to you and in this case

611
00:18:42,480 --> 00:18:44,880
it was a ukrainian tax software

612
00:18:44,880 --> 00:18:47,039
that if you did business in the ukraine

613
00:18:47,039 --> 00:18:48,480
you had to connect

614
00:18:48,480 --> 00:18:50,400
and get a software update on a regular

615
00:18:50,400 --> 00:18:51,600
basis

616
00:18:51,600 --> 00:18:53,600
and it happens that the admin is logged

617
00:18:53,600 --> 00:18:55,440
in software update happens

618
00:18:55,440 --> 00:18:57,840
and that machine is now compromised and

619
00:18:57,840 --> 00:18:59,200
there's administrative credentials

620
00:18:59,200 --> 00:19:00,480
available

621
00:19:00,480 --> 00:19:02,559
you know this also had fallbacks where

622
00:19:02,559 --> 00:19:04,320
it would you know spread laterally using

623
00:19:04,320 --> 00:19:05,200
exploits

624
00:19:05,200 --> 00:19:06,960
but what happens is once you have this

625
00:19:06,960 --> 00:19:08,720
credential compromised

626
00:19:08,720 --> 00:19:11,200
now that malware is able to spread in

627
00:19:11,200 --> 00:19:12,240
the environment

628
00:19:12,240 --> 00:19:14,480
and so it's just going to move simply

629
00:19:14,480 --> 00:19:15,520
through the environment

630
00:19:15,520 --> 00:19:17,840
compromising more and more machines

631
00:19:17,840 --> 00:19:19,280
until it ends up basically with your

632
00:19:19,280 --> 00:19:20,400
entire environment

633
00:19:20,400 --> 00:19:22,960
if you had sort of one simple

634
00:19:22,960 --> 00:19:25,280
environment and of course

635
00:19:25,280 --> 00:19:27,520
does the adversary have to like wait for

636
00:19:27,520 --> 00:19:30,080
um for me to show up on this box before

637
00:19:30,080 --> 00:19:31,600
it steals my credential

638
00:19:31,600 --> 00:19:33,760
well it actually doesn't really need to

639
00:19:33,760 --> 00:19:35,280
in this case because you're there

640
00:19:35,280 --> 00:19:38,160
triggering the software update sometimes

641
00:19:38,160 --> 00:19:39,919
it might need to wait you know that's

642
00:19:39,919 --> 00:19:41,440
why it's going to look for other ways of

643
00:19:41,440 --> 00:19:42,720
spreading as well

644
00:19:42,720 --> 00:19:45,039
so this one is sort of a combination of

645
00:19:45,039 --> 00:19:47,200
that lack of network segmentation

646
00:19:47,200 --> 00:19:49,200
and the single level credentials and so

647
00:19:49,200 --> 00:19:51,760
once the machines are all compromised

648
00:19:51,760 --> 00:19:53,520
it's ransomware and so ransomware does

649
00:19:53,520 --> 00:19:54,880
what ransomware does

650
00:19:54,880 --> 00:19:56,240
and that is it's going to sort of

651
00:19:56,240 --> 00:19:58,400
basically wipe all of these machines

652
00:19:58,400 --> 00:20:00,000
yeah i guess technically it encrypts

653
00:20:00,000 --> 00:20:01,600
them but from the point of view of your

654
00:20:01,600 --> 00:20:03,360
business now that encryption

655
00:20:03,360 --> 00:20:05,039
is complete it's completely destroyed

656
00:20:05,039 --> 00:20:07,520
your business and so we saw major

657
00:20:07,520 --> 00:20:09,039
you know pharmaceutical companies

658
00:20:09,039 --> 00:20:11,120
shipping companies were out of business

659
00:20:11,120 --> 00:20:12,080
for

660
00:20:12,080 --> 00:20:14,400
multiple days trying to recover from

661
00:20:14,400 --> 00:20:16,000
this recently we've seen now the

662
00:20:16,000 --> 00:20:17,600
colonial pipeline

663
00:20:17,600 --> 00:20:21,280
we've seen meat packing and so this is a

664
00:20:21,280 --> 00:20:23,200
very common attack that happens comes in

665
00:20:23,200 --> 00:20:24,320
in different ways

666
00:20:24,320 --> 00:20:26,000
but it's really about the ability of

667
00:20:26,000 --> 00:20:28,400
ransomware to move laterally

668
00:20:28,400 --> 00:20:30,159
within these environments that tend to

669
00:20:30,159 --> 00:20:32,000
have sort of one tier of administrative

670
00:20:32,000 --> 00:20:32,960
trust

671
00:20:32,960 --> 00:20:34,799
one tier of administrative trust right

672
00:20:34,799 --> 00:20:36,240
so that's that's uh

673
00:20:36,240 --> 00:20:38,080
that's the the key here like when i saw

674
00:20:38,080 --> 00:20:39,520
this by the way i was like the first

675
00:20:39,520 --> 00:20:41,120
time andy showed this to me i was really

676
00:20:41,120 --> 00:20:42,799
surprised to see that the same admin

677
00:20:42,799 --> 00:20:44,640
credential was just working across

678
00:20:44,640 --> 00:20:46,960
all of these machines right and that

679
00:20:46,960 --> 00:20:48,880
that's the part that's sort of like

680
00:20:48,880 --> 00:20:51,919
incredible in 2017 using the same admin

681
00:20:51,919 --> 00:20:53,679
credentials across all these machines

682
00:20:53,679 --> 00:20:54,960
even though this is apparently a very

683
00:20:54,960 --> 00:20:55,440
common

684
00:20:55,440 --> 00:20:56,960
way to do things because it's the

685
00:20:56,960 --> 00:20:58,880
easiest way to do it it means that your

686
00:20:58,880 --> 00:21:00,640
administrators don't have to think

687
00:21:00,640 --> 00:21:02,000
really hard about it

688
00:21:02,000 --> 00:21:04,480
you know a best practice is to tier

689
00:21:04,480 --> 00:21:05,440
these and you say

690
00:21:05,440 --> 00:21:06,799
you know you have one administrative

691
00:21:06,799 --> 00:21:08,559
credential for administering laptops and

692
00:21:08,559 --> 00:21:10,080
a different one for servers

693
00:21:10,080 --> 00:21:11,360
and a different one for the domain

694
00:21:11,360 --> 00:21:13,440
servers but those are still

695
00:21:13,440 --> 00:21:15,200
a pretty broad scope you don't tend to

696
00:21:15,200 --> 00:21:17,360
have this short-lived credential that

697
00:21:17,360 --> 00:21:18,880
only works at that one

698
00:21:18,880 --> 00:21:21,280
one point you know the software supply

699
00:21:21,280 --> 00:21:23,679
chain clearly also a problem here

700
00:21:23,679 --> 00:21:25,440
a challenge when you're forced to use a

701
00:21:25,440 --> 00:21:27,039
piece of software so it's not like you

702
00:21:27,039 --> 00:21:28,640
can do a whole lot of vetting

703
00:21:28,640 --> 00:21:30,320
but you're getting a software update

704
00:21:30,320 --> 00:21:31,840
onto a live running machine in a

705
00:21:31,840 --> 00:21:33,360
production environment

706
00:21:33,360 --> 00:21:36,480
you know that's a recipe for some danger

707
00:21:36,480 --> 00:21:38,400
so so to summarize right i think what

708
00:21:38,400 --> 00:21:40,080
what we're seeing here with this one if

709
00:21:40,080 --> 00:21:41,760
i take a step back is like again we're

710
00:21:41,760 --> 00:21:44,000
seeing a standing credential that admin

711
00:21:44,000 --> 00:21:47,600
password and it's not just like a single

712
00:21:47,600 --> 00:21:49,520
credential for a single machine like

713
00:21:49,520 --> 00:21:51,600
when i i i think in the fluffy bunny

714
00:21:51,600 --> 00:21:52,720
case maybe there could have been a

715
00:21:52,720 --> 00:21:54,400
separate ssh key for each one of the

716
00:21:54,400 --> 00:21:55,360
targets in the

717
00:21:55,360 --> 00:21:57,039
in that environment right in this case

718
00:21:57,039 --> 00:21:59,200
there's a same administrative

719
00:21:59,200 --> 00:22:01,280
password that's allowing you to access

720
00:22:01,280 --> 00:22:03,360
all of the machines in that environment

721
00:22:03,360 --> 00:22:05,200
and that part is that like that's the

722
00:22:05,200 --> 00:22:06,480
kind of um

723
00:22:06,480 --> 00:22:08,080
the crazy part at least if you look at

724
00:22:08,080 --> 00:22:09,679
this from a thousand feet like how could

725
00:22:09,679 --> 00:22:10,799
it be that there's one credential but

726
00:22:10,799 --> 00:22:12,240
apparently this is this is called it's

727
00:22:12,240 --> 00:22:12,640
very

728
00:22:12,640 --> 00:22:16,000
very very common right why don't we look

729
00:22:16,000 --> 00:22:17,360
at a different one now

730
00:22:17,360 --> 00:22:19,360
okay so let's go let's kind of go back

731
00:22:19,360 --> 00:22:20,640
to sort of the more the

732
00:22:20,640 --> 00:22:23,200
the the more modern approach to this the

733
00:22:23,200 --> 00:22:24,720
zero trust approach so this picture

734
00:22:24,720 --> 00:22:26,240
looks almost identical to the

735
00:22:26,240 --> 00:22:27,360
certificate authority

736
00:22:27,360 --> 00:22:30,080
picture that we had before um where what

737
00:22:30,080 --> 00:22:31,360
we had before was that there was a

738
00:22:31,360 --> 00:22:32,720
certificate authority issuing a

739
00:22:32,720 --> 00:22:34,159
short-lived credential

740
00:22:34,159 --> 00:22:35,679
and so this again this is a very

741
00:22:35,679 --> 00:22:37,600
unlikely the ad case where we have a

742
00:22:37,600 --> 00:22:39,039
single admin password that

743
00:22:39,039 --> 00:22:41,120
accesses all the boxes what we're going

744
00:22:41,120 --> 00:22:43,919
to do is every time a user comes in

745
00:22:43,919 --> 00:22:45,760
alice or the admin or whoever she's

746
00:22:45,760 --> 00:22:47,280
going to authenticate to the identity

747
00:22:47,280 --> 00:22:47,919
provider

748
00:22:47,919 --> 00:22:49,919
she's going to get a token the token is

749
00:22:49,919 --> 00:22:51,520
going to identify her

750
00:22:51,520 --> 00:22:53,200
and the targets are going to validate

751
00:22:53,200 --> 00:22:54,559
that the token is correct

752
00:22:54,559 --> 00:22:56,799
and allow her to come in if if she has a

753
00:22:56,799 --> 00:22:57,760
valid token

754
00:22:57,760 --> 00:22:59,919
right but again you know this looks very

755
00:22:59,919 --> 00:23:02,080
similar because once again we have this

756
00:23:02,080 --> 00:23:04,480
signing key that the identity provider

757
00:23:04,480 --> 00:23:06,640
uses very analogous to the signing key

758
00:23:06,640 --> 00:23:08,320
that the certificate authority provider

759
00:23:08,320 --> 00:23:09,200
uses

760
00:23:09,200 --> 00:23:11,120
um and so you know we get the benefits

761
00:23:11,120 --> 00:23:12,880
of zero trust where we have

762
00:23:12,880 --> 00:23:15,280
a short-lived credential right this sso

763
00:23:15,280 --> 00:23:16,000
token

764
00:23:16,000 --> 00:23:17,840
we can have authentication to this

765
00:23:17,840 --> 00:23:20,080
authority we can have the authority deny

766
00:23:20,080 --> 00:23:21,760
access if you don't need access to a

767
00:23:21,760 --> 00:23:23,200
particular target right so we can

768
00:23:23,200 --> 00:23:24,960
segment our network so this is really

769
00:23:24,960 --> 00:23:27,200
nice

770
00:23:27,200 --> 00:23:30,400
but solar winds okay

771
00:23:30,400 --> 00:23:32,880
so um so let's talk a little bit about

772
00:23:32,880 --> 00:23:34,960
the ways that this can go wrong

773
00:23:34,960 --> 00:23:37,679
um so the solarwinds attack in 2020

774
00:23:37,679 --> 00:23:38,000
we're

775
00:23:38,000 --> 00:23:39,520
now at sort of the end of our of our

776
00:23:39,520 --> 00:23:41,120
historical story

777
00:23:41,120 --> 00:23:44,480
um is almost like the modern equivalent

778
00:23:44,480 --> 00:23:46,159
of the diginotar incident

779
00:23:46,159 --> 00:23:47,520
but this one is sort of affecting

780
00:23:47,520 --> 00:23:49,360
individual enterprises and so what was

781
00:23:49,360 --> 00:23:50,480
happening here

782
00:23:50,480 --> 00:23:53,840
was the adversary um did compromise

783
00:23:53,840 --> 00:23:56,480
some targets on the in in the customers

784
00:23:56,480 --> 00:23:57,120
environment

785
00:23:57,120 --> 00:23:58,640
in the in the victims environment so

786
00:23:58,640 --> 00:24:00,320
imagine this thing gets compromised

787
00:24:00,320 --> 00:24:02,159
and the adversary manages to actually

788
00:24:02,159 --> 00:24:03,440
steal

789
00:24:03,440 --> 00:24:05,279
the identity providers key and i have a

790
00:24:05,279 --> 00:24:06,799
typo in the slides here that should say

791
00:24:06,799 --> 00:24:08,000
identity provider

792
00:24:08,000 --> 00:24:10,240
so the adversary manages to steal the

793
00:24:10,240 --> 00:24:12,559
identity provider's key

794
00:24:12,559 --> 00:24:15,520
and now because it has the signing key

795
00:24:15,520 --> 00:24:17,039
for the identity provider it can

796
00:24:17,039 --> 00:24:20,240
issue sso tokens for itself

797
00:24:20,240 --> 00:24:22,000
and basically access any part of the

798
00:24:22,000 --> 00:24:24,080
network that it wants

799
00:24:24,080 --> 00:24:26,080
right so this is almost the same as what

800
00:24:26,080 --> 00:24:27,520
happened with diginotar where you had

801
00:24:27,520 --> 00:24:29,200
fraudulent certificates what you have

802
00:24:29,200 --> 00:24:29,679
now

803
00:24:29,679 --> 00:24:31,679
because the adversary stole the key what

804
00:24:31,679 --> 00:24:32,799
you have now is again you have

805
00:24:32,799 --> 00:24:34,559
fraudulent sso tokens

806
00:24:34,559 --> 00:24:36,960
because the adversary stole the key so

807
00:24:36,960 --> 00:24:37,919
andy i mean

808
00:24:37,919 --> 00:24:40,159
what do we what do we learn from this um

809
00:24:40,159 --> 00:24:41,679
you know from this incident amongst all

810
00:24:41,679 --> 00:24:42,960
the other things that that

811
00:24:42,960 --> 00:24:44,960
sort of we've taken away from from solar

812
00:24:44,960 --> 00:24:46,320
winds you know i think we're

813
00:24:46,320 --> 00:24:48,240
we see some of the same lessons we've

814
00:24:48,240 --> 00:24:49,840
had before that that single root of

815
00:24:49,840 --> 00:24:52,000
trust is very dangerous when it has that

816
00:24:52,000 --> 00:24:53,600
over broad scope of authority

817
00:24:53,600 --> 00:24:55,360
and when it's just one entity if that

818
00:24:55,360 --> 00:24:56,720
entity gets breached

819
00:24:56,720 --> 00:24:58,559
and it basically has administrative

820
00:24:58,559 --> 00:25:00,480
access for your entire enterprise

821
00:25:00,480 --> 00:25:01,919
then you're going to have a really bad

822
00:25:01,919 --> 00:25:03,600
day and of course you know this

823
00:25:03,600 --> 00:25:04,880
they did originally come in through the

824
00:25:04,880 --> 00:25:07,279
software supply chain so it is something

825
00:25:07,279 --> 00:25:07,600
to

826
00:25:07,600 --> 00:25:10,080
pay attention to and so what do you what

827
00:25:10,080 --> 00:25:11,279
do you have to say about this

828
00:25:11,279 --> 00:25:13,039
this particular incident in light of the

829
00:25:13,039 --> 00:25:14,720
fact that so many organizations are

830
00:25:14,720 --> 00:25:15,520
moving

831
00:25:15,520 --> 00:25:18,000
moving to an sso model for access to two

832
00:25:18,000 --> 00:25:19,120
different different parts of their

833
00:25:19,120 --> 00:25:19,840
networks

834
00:25:19,840 --> 00:25:22,720
you know i think looking at you know how

835
00:25:22,720 --> 00:25:24,400
do you actually authenticate that this

836
00:25:24,400 --> 00:25:26,240
is the user who's doing it

837
00:25:26,240 --> 00:25:27,919
rather than somebody who's not the user

838
00:25:27,919 --> 00:25:29,840
and maybe that's velocity detection on

839
00:25:29,840 --> 00:25:31,200
the user's movement

840
00:25:31,200 --> 00:25:33,679
maybe it's mfa but out of band you know

841
00:25:33,679 --> 00:25:36,400
a lot of people implement mfa to the idp

842
00:25:36,400 --> 00:25:38,320
but if the idp's key has gotten stolen

843
00:25:38,320 --> 00:25:39,760
that's not going to help you

844
00:25:39,760 --> 00:25:42,240
because you know the adversary can

845
00:25:42,240 --> 00:25:43,200
create something

846
00:25:43,200 --> 00:25:45,360
but if you're doing a second factor at

847
00:25:45,360 --> 00:25:46,320
the server

848
00:25:46,320 --> 00:25:47,840
potentially that provides you a second

849
00:25:47,840 --> 00:25:49,520
route of trust you're verifying that

850
00:25:49,520 --> 00:25:51,039
they have an sso token

851
00:25:51,039 --> 00:25:54,559
and some form of mfa or a certificate

852
00:25:54,559 --> 00:25:56,000
authority that came from somewhere else

853
00:25:56,000 --> 00:25:57,679
so i think a lot of different things

854
00:25:57,679 --> 00:25:59,120
here um

855
00:25:59,120 --> 00:26:01,200
but i think a word that andy hates which

856
00:26:01,200 --> 00:26:02,320
is defense in-depth

857
00:26:02,320 --> 00:26:04,559
right so we're not going to have this

858
00:26:04,559 --> 00:26:06,080
debate right now but like

859
00:26:06,080 --> 00:26:07,919
you know i think one of the things that

860
00:26:07,919 --> 00:26:09,360
is interesting for me and really has

861
00:26:09,360 --> 00:26:10,799
driven some of the some of the stuff

862
00:26:10,799 --> 00:26:12,080
that we've been working on for the last

863
00:26:12,080 --> 00:26:12,480
year

864
00:26:12,480 --> 00:26:14,880
is is the idea that you know like this

865
00:26:14,880 --> 00:26:15,679
single

866
00:26:15,679 --> 00:26:17,760
route of trust for access to all of your

867
00:26:17,760 --> 00:26:19,360
targets and all of your networks be it

868
00:26:19,360 --> 00:26:19,679
your

869
00:26:19,679 --> 00:26:21,520
certificate authority or be it an sso

870
00:26:21,520 --> 00:26:23,600
provider this is not necessarily the

871
00:26:23,600 --> 00:26:25,360
best way to do things right we want to

872
00:26:25,360 --> 00:26:25,919
see

873
00:26:25,919 --> 00:26:28,159
you know more than one route of trust

874
00:26:28,159 --> 00:26:29,520
more than one place that if it's

875
00:26:29,520 --> 00:26:30,400
compromised

876
00:26:30,400 --> 00:26:32,480
you know everything falls down right so

877
00:26:32,480 --> 00:26:34,400
in another sense it's again this notion

878
00:26:34,400 --> 00:26:35,520
of overbroad scope

879
00:26:35,520 --> 00:26:37,600
single root of trust is very dangerous

880
00:26:37,600 --> 00:26:40,080
in terms of securing your systems

881
00:26:40,080 --> 00:26:43,760
um so yeah so we've just taken our tour

882
00:26:43,760 --> 00:26:46,240
our tour is complete five five incidents

883
00:26:46,240 --> 00:26:48,080
that andy has lived through and i've

884
00:26:48,080 --> 00:26:49,679
watched from the sidelines

885
00:26:49,679 --> 00:26:51,840
um and um you know i think we have a

886
00:26:51,840 --> 00:26:52,799
couple of uh

887
00:26:52,799 --> 00:26:54,480
a few principles that i think we should

888
00:26:54,480 --> 00:26:56,080
wrap up with andy do you want to

889
00:26:56,080 --> 00:26:57,600
kind of walk through yeah yeah i think

890
00:26:57,600 --> 00:26:59,120
we've we've walked through some of these

891
00:26:59,120 --> 00:27:01,200
you know verbally but i think the the

892
00:27:01,200 --> 00:27:03,200
key here is that safely implementing

893
00:27:03,200 --> 00:27:05,279
secure access

894
00:27:05,279 --> 00:27:06,880
lots of different ways it can go wrong

895
00:27:06,880 --> 00:27:08,320
you know whether it's at that single

896
00:27:08,320 --> 00:27:10,159
root of trust instead of multiple ones

897
00:27:10,159 --> 00:27:12,080
you're using long standing credentials

898
00:27:12,080 --> 00:27:13,840
instead of ephemeral ones

899
00:27:13,840 --> 00:27:15,679
single flat architectures instead of

900
00:27:15,679 --> 00:27:17,200
segmented ones

901
00:27:17,200 --> 00:27:19,200
and weren't paying enough attention into

902
00:27:19,200 --> 00:27:20,399
the supply chain

903
00:27:20,399 --> 00:27:21,760
and ways that that could create a

904
00:27:21,760 --> 00:27:23,440
problem for you so

905
00:27:23,440 --> 00:27:25,279
we really appreciate everybody's time in

906
00:27:25,279 --> 00:27:27,200
joining us and we hope that this helps

907
00:27:27,200 --> 00:27:29,279
illuminate a path to a safer world

908
00:27:29,279 --> 00:27:32,840
as you're all designing systems thank

909
00:27:32,840 --> 00:27:35,840
you

