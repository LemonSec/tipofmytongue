1
00:00:00,000 --> 00:00:01,680
we're going to head into our lightning

2
00:00:01,680 --> 00:00:04,740
talks and first up we do have Mitch so I

3
00:00:04,740 --> 00:00:06,120
will throw it over to kavika to give

4
00:00:06,120 --> 00:00:08,639
Mitch a introduction and just what his

5
00:00:08,639 --> 00:00:10,920
talk is going to be about

6
00:00:10,920 --> 00:00:13,740
thanks shilpi um it was a very amazing

7
00:00:13,740 --> 00:00:16,980
talk I really enjoyed it so next to nine

8
00:00:16,980 --> 00:00:19,859
we have Mitch Parish

9
00:00:19,859 --> 00:00:22,260
um he is a security consultant at

10
00:00:22,260 --> 00:00:25,260
trusted SEC which has spent over eight

11
00:00:25,260 --> 00:00:27,779
years at the U.S Department of Homeland

12
00:00:27,779 --> 00:00:30,119
Security focusing on physical

13
00:00:30,119 --> 00:00:32,820
infrastructure security uh he now helps

14
00:00:32,820 --> 00:00:35,160
organizations secure the development and

15
00:00:35,160 --> 00:00:37,380
delivery environment through continuous

16
00:00:37,380 --> 00:00:39,960
security and secure software development

17
00:00:39,960 --> 00:00:43,260
and adult option of devsecop's principle

18
00:00:43,260 --> 00:00:46,739
he is a sync Ambassador as well and

19
00:00:46,739 --> 00:00:48,840
primarily focuses on security and

20
00:00:48,840 --> 00:00:51,840
devsecops so welcome Mitch and his talk

21
00:00:51,840 --> 00:00:54,660
is based on Meg give your Ops

22
00:00:54,660 --> 00:00:56,699
um secure your development environment

23
00:00:56,699 --> 00:00:59,039
with the tools around you

24
00:00:59,039 --> 00:01:01,860
um I'll hand over to Mitch welcome Mitch

25
00:01:01,860 --> 00:01:04,920
welcome to Dev second corner I love the

26
00:01:04,920 --> 00:01:09,420
talk like the title of yours fan

27
00:01:13,520 --> 00:01:16,140
yeah and it's just it's so relevant I

28
00:01:16,140 --> 00:01:17,580
thought we could have some some fun with

29
00:01:17,580 --> 00:01:19,380
it and make it relatable instead of kind

30
00:01:19,380 --> 00:01:21,920
of the the humdrum you know the normal

31
00:01:21,920 --> 00:01:24,360
uh thing so I've got some some good

32
00:01:24,360 --> 00:01:26,759
memes sprinkled throughout here as well

33
00:01:26,759 --> 00:01:28,220
um yeah

34
00:01:28,220 --> 00:01:30,540
we're gonna enjoy it

35
00:01:30,540 --> 00:01:31,860
for sure

36
00:01:31,860 --> 00:01:34,860
um I'll pop over your slide deck across

37
00:01:34,860 --> 00:01:36,600
as well and we'll just hide over in the

38
00:01:36,600 --> 00:01:38,100
background so we'll let you take it away

39
00:01:38,100 --> 00:01:40,860
and I'm looking forward to this awesome

40
00:01:40,860 --> 00:01:42,840
well thanks again uh great to be here

41
00:01:42,840 --> 00:01:44,579
Dev sack on

42
00:01:44,579 --> 00:01:46,439
um I am in the the US so it's a little

43
00:01:46,439 --> 00:01:49,200
late for me I've been looking forward to

44
00:01:49,200 --> 00:01:51,600
it so yeah MacGyver Ops securing your

45
00:01:51,600 --> 00:01:52,860
development environment with the the

46
00:01:52,860 --> 00:01:54,360
tools around you thought I'd have a

47
00:01:54,360 --> 00:01:55,979
little fun with uh MacGyver I'm

48
00:01:55,979 --> 00:01:59,100
obviously not Angus MacGyver but uh

49
00:01:59,100 --> 00:02:00,479
there he is for those not familiar

50
00:02:00,479 --> 00:02:04,320
MacGyver was the star of a uh action

51
00:02:04,320 --> 00:02:07,500
series uh in the 80s there was a reboot

52
00:02:07,500 --> 00:02:09,419
I found out when I was doing some meme

53
00:02:09,419 --> 00:02:11,459
research um don't waste your time with

54
00:02:11,459 --> 00:02:13,920
that one watch the original one from uh

55
00:02:13,920 --> 00:02:16,500
the late 80s early 90s

56
00:02:16,500 --> 00:02:18,540
um MacGyver was known for getting in

57
00:02:18,540 --> 00:02:21,239
situations that he needed to escape and

58
00:02:21,239 --> 00:02:23,099
he would do so with

59
00:02:23,099 --> 00:02:25,020
um anything he could find around him he

60
00:02:25,020 --> 00:02:26,360
was the king of

61
00:02:26,360 --> 00:02:28,860
improvisation uh he would use paper

62
00:02:28,860 --> 00:02:31,200
clips as the famous One duct tape

63
00:02:31,200 --> 00:02:33,840
anything it was that he could find in

64
00:02:33,840 --> 00:02:35,940
his environment to uh to get himself out

65
00:02:35,940 --> 00:02:37,440
of a bind

66
00:02:37,440 --> 00:02:39,239
um so in that Spirit

67
00:02:39,239 --> 00:02:41,160
um I wanted to talk about finding

68
00:02:41,160 --> 00:02:43,560
solutions to security problems with the

69
00:02:43,560 --> 00:02:46,580
tools you already have

70
00:02:46,800 --> 00:02:48,780
the talk is primarily targeted towards

71
00:02:48,780 --> 00:02:50,940
smaller shops looking to increase

72
00:02:50,940 --> 00:02:52,680
security throughout the development and

73
00:02:52,680 --> 00:02:55,980
devsecops life cycle but with some of

74
00:02:55,980 --> 00:02:57,300
the tools and platforms I'll be

75
00:02:57,300 --> 00:02:59,160
highlighting hopefully everybody will be

76
00:02:59,160 --> 00:03:01,620
able to take something away from it so

77
00:03:01,620 --> 00:03:06,180
again I'm not Angus MacGyver let me

78
00:03:06,180 --> 00:03:08,220
there we go there's me

79
00:03:08,220 --> 00:03:09,540
um Mitch Parish I'm a security

80
00:03:09,540 --> 00:03:12,480
consultant at trusted sec we're a full

81
00:03:12,480 --> 00:03:15,060
service cyber security consulting firm

82
00:03:15,060 --> 00:03:16,860
there I focus on cloud security and

83
00:03:16,860 --> 00:03:18,599
devsecops

84
00:03:18,599 --> 00:03:20,879
um super exciting never adult moment

85
00:03:20,879 --> 00:03:23,519
really love it there you can follow me I

86
00:03:23,519 --> 00:03:24,720
don't tweet a lot but I'm on Twitter

87
00:03:24,720 --> 00:03:28,580
GitHub at Vega

88
00:03:28,739 --> 00:03:30,420
awesome so kind of the meat of the talk

89
00:03:30,420 --> 00:03:32,280
here everybody's familiar with or at

90
00:03:32,280 --> 00:03:33,959
least most people are familiar with the

91
00:03:33,959 --> 00:03:36,599
devops periodic table it's kind of this

92
00:03:36,599 --> 00:03:39,000
mishmash of tools

93
00:03:39,000 --> 00:03:40,620
um not all of them security related but

94
00:03:40,620 --> 00:03:42,900
it does do a good job at highlighting

95
00:03:42,900 --> 00:03:45,720
just how many tools were presented

96
00:03:45,720 --> 00:03:47,940
um for the problems that we face so it's

97
00:03:47,940 --> 00:03:50,220
a bit overwhelming there's a million

98
00:03:50,220 --> 00:03:52,440
tools like how do we pick

99
00:03:52,440 --> 00:03:54,540
what do we do

100
00:03:54,540 --> 00:03:55,260
um

101
00:03:55,260 --> 00:03:57,239
essentially an individual tool or

102
00:03:57,239 --> 00:03:59,819
platform for every use case and as I say

103
00:03:59,819 --> 00:04:02,700
useless case kind of uh some nonsense

104
00:04:02,700 --> 00:04:04,860
one's always mixed in there

105
00:04:04,860 --> 00:04:05,659
um

106
00:04:05,659 --> 00:04:09,060
oftentimes organizations pick a tool for

107
00:04:09,060 --> 00:04:10,260
whatever reason

108
00:04:10,260 --> 00:04:12,239
check a box they never actually do

109
00:04:12,239 --> 00:04:13,920
anything with the feedback from the tool

110
00:04:13,920 --> 00:04:16,019
they never fully implement the tool in

111
00:04:16,019 --> 00:04:17,279
their development workflow so it doesn't

112
00:04:17,279 --> 00:04:19,459
become a valuable source of information

113
00:04:19,459 --> 00:04:22,460
that feedback loop is never closed

114
00:04:22,460 --> 00:04:25,560
essentially we've adopted a platform the

115
00:04:25,560 --> 00:04:28,740
alerts go somewhere nobody goes and you

116
00:04:28,740 --> 00:04:31,259
know we're doing security

117
00:04:31,259 --> 00:04:31,919
um

118
00:04:31,919 --> 00:04:34,139
so this talk kind of focuses on

119
00:04:34,139 --> 00:04:37,380
getting away from that uh that idea and

120
00:04:37,380 --> 00:04:39,360
maybe looking around you and saying hey

121
00:04:39,360 --> 00:04:40,680
we've already got this tool can we

122
00:04:40,680 --> 00:04:42,000
leverage it in a way to increase

123
00:04:42,000 --> 00:04:44,479
security

124
00:04:45,540 --> 00:04:47,160
um but definitely something I like to

125
00:04:47,160 --> 00:04:48,600
focus on

126
00:04:48,600 --> 00:04:50,580
a lot of these tools pull developers out

127
00:04:50,580 --> 00:04:53,759
of their typical development workflow

128
00:04:53,759 --> 00:04:56,160
they have to go to a SAS platform or 10

129
00:04:56,160 --> 00:04:59,160
SAS platforms or other web uis

130
00:04:59,160 --> 00:05:00,300
um

131
00:05:00,300 --> 00:05:03,900
that really drags efficiency down so if

132
00:05:03,900 --> 00:05:05,580
you can at all when you're looking at

133
00:05:05,580 --> 00:05:07,740
tools to bring in

134
00:05:07,740 --> 00:05:10,320
stay within the developer workflow so

135
00:05:10,320 --> 00:05:11,639
that they're within environment they're

136
00:05:11,639 --> 00:05:13,020
familiar with they don't have to jump

137
00:05:13,020 --> 00:05:16,199
around it'll really Drive efficiency and

138
00:05:16,199 --> 00:05:18,300
it will also get you some buy-in from

139
00:05:18,300 --> 00:05:19,500
your developers and from everyone

140
00:05:19,500 --> 00:05:21,240
involved

141
00:05:21,240 --> 00:05:22,740
um that hey we can we can take this

142
00:05:22,740 --> 00:05:24,660
feedback apply it quickly remediate

143
00:05:24,660 --> 00:05:25,919
quickly

144
00:05:25,919 --> 00:05:27,600
um super super important and a lot of

145
00:05:27,600 --> 00:05:28,919
people I know when they're evaluating

146
00:05:28,919 --> 00:05:30,180
tools

147
00:05:30,180 --> 00:05:33,000
don't necessarily take that into account

148
00:05:33,000 --> 00:05:35,280
they're looking more for

149
00:05:35,280 --> 00:05:37,919
you know slick marketing or feature set

150
00:05:37,919 --> 00:05:39,720
or something else so something if

151
00:05:39,720 --> 00:05:40,860
there's one thing you take away from

152
00:05:40,860 --> 00:05:43,380
this talk please let it be that

153
00:05:43,380 --> 00:05:45,840
um developer experience is hugely

154
00:05:45,840 --> 00:05:48,660
important they're your primary

155
00:05:48,660 --> 00:05:50,880
essentially clients or customers that

156
00:05:50,880 --> 00:05:52,560
you're trying to to build and implement

157
00:05:52,560 --> 00:05:53,880
this tool for

158
00:05:53,880 --> 00:05:56,220
so look at it that way they're the

159
00:05:56,220 --> 00:05:58,139
consumer if it's something outside of

160
00:05:58,139 --> 00:06:00,600
their workflow they're probably not

161
00:06:00,600 --> 00:06:02,340
going to want to use it

162
00:06:02,340 --> 00:06:05,479
um or they will grudgingly

163
00:06:06,479 --> 00:06:09,300
uh it's a first meme

164
00:06:09,300 --> 00:06:11,160
um I'll talk a little bit about threat

165
00:06:11,160 --> 00:06:12,600
modeling

166
00:06:12,600 --> 00:06:14,160
um just because before we can talk about

167
00:06:14,160 --> 00:06:15,660
increasing security through the

168
00:06:15,660 --> 00:06:17,759
development life cycle we kind of need

169
00:06:17,759 --> 00:06:19,199
to figure out what we're protecting

170
00:06:19,199 --> 00:06:22,560
against and come up with some degree of

171
00:06:22,560 --> 00:06:24,840
prioritization so that we know what

172
00:06:24,840 --> 00:06:26,419
we're solving for

173
00:06:26,419 --> 00:06:29,120
threat modeling scares a lot of people

174
00:06:29,120 --> 00:06:31,940
they think it has to be highly

175
00:06:31,940 --> 00:06:34,680
structured it doesn't it doesn't need to

176
00:06:34,680 --> 00:06:36,660
be

177
00:06:36,660 --> 00:06:39,360
you know necessarily a huge formalized

178
00:06:39,360 --> 00:06:41,340
process it can be especially if you're a

179
00:06:41,340 --> 00:06:43,860
smaller organization it can be

180
00:06:43,860 --> 00:06:45,900
discussions

181
00:06:45,900 --> 00:06:46,800
um

182
00:06:46,800 --> 00:06:48,720
centered around your Sprint reviews it

183
00:06:48,720 --> 00:06:50,940
can be during feature development just

184
00:06:50,940 --> 00:06:52,979
having the discussion identifying the

185
00:06:52,979 --> 00:06:55,139
potential risk and then performing some

186
00:06:55,139 --> 00:06:57,780
type of basic quantification of the

187
00:06:57,780 --> 00:06:59,699
probability will really help you go a

188
00:06:59,699 --> 00:07:02,340
long way not only in feature design but

189
00:07:02,340 --> 00:07:03,139
in

190
00:07:03,139 --> 00:07:05,340
looking for tools that will help you

191
00:07:05,340 --> 00:07:09,419
drive efficiency and drive security

192
00:07:09,419 --> 00:07:12,900
to go out and buy or procure tools

193
00:07:12,900 --> 00:07:15,479
without first you know figuring out what

194
00:07:15,479 --> 00:07:18,180
you actually need a tool for uh is sort

195
00:07:18,180 --> 00:07:20,039
of backwards and gets a lot of people in

196
00:07:20,039 --> 00:07:21,240
that

197
00:07:21,240 --> 00:07:23,340
um that broken feedback loop that I

198
00:07:23,340 --> 00:07:25,259
talked about earlier

199
00:07:25,259 --> 00:07:27,479
so just a couple these are the basic

200
00:07:27,479 --> 00:07:28,620
questions from the threat modeling

201
00:07:28,620 --> 00:07:30,319
manifest so if you're smaller

202
00:07:30,319 --> 00:07:34,400
this is pretty much uh what you need

203
00:07:34,400 --> 00:07:36,900
uh gears law I'm not sure this is

204
00:07:36,900 --> 00:07:39,120
attributed to

205
00:07:39,120 --> 00:07:39,780
um

206
00:07:39,780 --> 00:07:41,940
Dan gear the computer scientist it's

207
00:07:41,940 --> 00:07:44,580
obviously influenced by

208
00:07:44,580 --> 00:07:46,319
um

209
00:07:46,319 --> 00:07:48,900
Clark's three or three laws I like it

210
00:07:48,900 --> 00:07:50,039
I'm not going to talk a whole lot about

211
00:07:50,039 --> 00:07:51,599
metrics because we don't have a ton of

212
00:07:51,599 --> 00:07:52,979
time

213
00:07:52,979 --> 00:07:54,780
um but just know that if you're not

214
00:07:54,780 --> 00:07:56,520
measuring how do you know where you're

215
00:07:56,520 --> 00:07:59,400
at so before you make any changes you

216
00:07:59,400 --> 00:08:02,160
need to implement some basic metrics

217
00:08:02,160 --> 00:08:04,740
um it could be anything from

218
00:08:04,740 --> 00:08:07,979
meantime to remediation deployment

219
00:08:07,979 --> 00:08:10,680
frequency lead time to changes

220
00:08:10,680 --> 00:08:12,479
some type of measurement or metric that

221
00:08:12,479 --> 00:08:14,220
once you introduce those additional

222
00:08:14,220 --> 00:08:16,380
tools or processes you can go back and

223
00:08:16,380 --> 00:08:18,419
say well this slowed us down the speed

224
00:08:18,419 --> 00:08:20,520
has speeded us up

225
00:08:20,520 --> 00:08:23,220
um sped us up it's late here

226
00:08:23,220 --> 00:08:25,139
um

227
00:08:25,139 --> 00:08:27,240
yeah definitely because it's not going

228
00:08:27,240 --> 00:08:28,620
to get too deep in the woods here but

229
00:08:28,620 --> 00:08:31,860
make sure you're measuring you know to

230
00:08:31,860 --> 00:08:34,399
some degree

231
00:08:35,520 --> 00:08:37,799
all right so we're back to the periodic

232
00:08:37,799 --> 00:08:39,479
table we're about to jump into the tools

233
00:08:39,479 --> 00:08:40,979
I wanted to bring this back to you so

234
00:08:40,979 --> 00:08:42,839
you could remember look at all these

235
00:08:42,839 --> 00:08:45,480
tools where do we start for this

236
00:08:45,480 --> 00:08:46,980
lightning talk I wanted to focus on

237
00:08:46,980 --> 00:08:50,279
three platforms that I would say I don't

238
00:08:50,279 --> 00:08:53,940
know 80 of the folks out there have

239
00:08:53,940 --> 00:08:56,100
um or are using get obviously

240
00:08:56,100 --> 00:08:58,680
your version control system GitHub

241
00:08:58,680 --> 00:09:00,540
source for source code management and

242
00:09:00,540 --> 00:09:04,819
AWS for a cloud platform

243
00:09:06,000 --> 00:09:08,100
all right let's Jump Right In so again

244
00:09:08,100 --> 00:09:09,480
these are tools that you already have

245
00:09:09,480 --> 00:09:11,399
you can leverage to increase security

246
00:09:11,399 --> 00:09:12,779
throughout the development environment

247
00:09:12,779 --> 00:09:14,760
with a focus on

248
00:09:14,760 --> 00:09:16,980
we say shift left as a marketing term

249
00:09:16,980 --> 00:09:19,440
but early in the development process the

250
00:09:19,440 --> 00:09:20,820
goal being

251
00:09:20,820 --> 00:09:23,279
to reduce the time of remediation the

252
00:09:23,279 --> 00:09:26,040
cost of remediation by identifying

253
00:09:26,040 --> 00:09:29,100
vulnerabilities earlier

254
00:09:29,100 --> 00:09:30,839
um so get hooks

255
00:09:30,839 --> 00:09:32,940
well that's on the developer laptop

256
00:09:32,940 --> 00:09:34,680
that's about as far left as you can get

257
00:09:34,680 --> 00:09:37,500
pre-commit pre-received hooks

258
00:09:37,500 --> 00:09:40,140
um you can they're super super useful

259
00:09:40,140 --> 00:09:41,640
you can pretty much do anything with

260
00:09:41,640 --> 00:09:42,779
them

261
00:09:42,779 --> 00:09:44,339
um you can extend your branch

262
00:09:44,339 --> 00:09:46,080
protections you're probably doing this

263
00:09:46,080 --> 00:09:47,700
in GitHub already but you can extend

264
00:09:47,700 --> 00:09:49,920
that out to

265
00:09:49,920 --> 00:09:53,279
uh githubs you can do syntax format

266
00:09:53,279 --> 00:09:56,580
testing Secrets inclusion testing unit

267
00:09:56,580 --> 00:09:59,100
testing all of your asks

268
00:09:59,100 --> 00:10:00,920
um your application security testing

269
00:10:00,920 --> 00:10:03,959
software composition analysis and your

270
00:10:03,959 --> 00:10:06,000
infrastructure is code testing so we

271
00:10:06,000 --> 00:10:07,140
really stress

272
00:10:07,140 --> 00:10:09,060
performing these tests as early as

273
00:10:09,060 --> 00:10:11,160
possible in the development environment

274
00:10:11,160 --> 00:10:12,899
to give that instant feedback to

275
00:10:12,899 --> 00:10:15,180
developers so that they can hey

276
00:10:15,180 --> 00:10:17,040
I'm going to try and Commit This run

277
00:10:17,040 --> 00:10:18,839
some tests oh that doesn't work I can

278
00:10:18,839 --> 00:10:20,880
remediate it before it's even included

279
00:10:20,880 --> 00:10:22,560
in your code base

280
00:10:22,560 --> 00:10:25,500
um super super helpful again on the

281
00:10:25,500 --> 00:10:28,740
right side is the feedback column like I

282
00:10:28,740 --> 00:10:31,500
said I like to focus on

283
00:10:31,500 --> 00:10:34,920
developer experience and feedback within

284
00:10:34,920 --> 00:10:36,620
the development

285
00:10:36,620 --> 00:10:39,720
workflow so there's an example there if

286
00:10:39,720 --> 00:10:42,660
you can see it just essentially blocking

287
00:10:42,660 --> 00:10:45,440
a committer push

288
00:10:45,440 --> 00:10:47,880
I'm running short on time so I'll cruise

289
00:10:47,880 --> 00:10:50,519
through these this is a very basic

290
00:10:50,519 --> 00:10:51,540
um

291
00:10:51,540 --> 00:10:53,279
version of get signed there's obviously

292
00:10:53,279 --> 00:10:55,079
multiple tools multiple ways to do this

293
00:10:55,079 --> 00:10:56,940
I just wanted to bring it up get signing

294
00:10:56,940 --> 00:10:59,519
you can get signed tags and commits uh

295
00:10:59,519 --> 00:11:01,800
commits sometimes is a bit heavy for

296
00:11:01,800 --> 00:11:03,959
some development shops to just Dive

297
00:11:03,959 --> 00:11:06,060
Right In with commits so if you're

298
00:11:06,060 --> 00:11:08,040
releasing via tag

299
00:11:08,040 --> 00:11:09,899
um kind of depending on your your

300
00:11:09,899 --> 00:11:13,320
strategy for cicd and releasing

301
00:11:13,320 --> 00:11:15,000
um just know that

302
00:11:15,000 --> 00:11:17,040
when you sign a commit you are creating

303
00:11:17,040 --> 00:11:18,420
attestation

304
00:11:18,420 --> 00:11:21,300
with the caveat of it's only as reliable

305
00:11:21,300 --> 00:11:23,519
as your key management strategy so if

306
00:11:23,519 --> 00:11:26,279
the keys if you're letting developers or

307
00:11:26,279 --> 00:11:29,700
if you as a developer managing your own

308
00:11:29,700 --> 00:11:31,500
gpg keys

309
00:11:31,500 --> 00:11:34,680
uh know that you have to secure those if

310
00:11:34,680 --> 00:11:36,600
those are compromised then it kind of

311
00:11:36,600 --> 00:11:40,079
takes us out of the uh the equation

312
00:11:40,079 --> 00:11:40,860
um

313
00:11:40,860 --> 00:11:43,920
focus on gpg over SSH GitHub allows both

314
00:11:43,920 --> 00:11:47,100
uh gpg does allow

315
00:11:47,100 --> 00:11:53,240
um for expiration and to revoke them

316
00:11:53,579 --> 00:11:55,019
um again feedback local development

317
00:11:55,019 --> 00:11:56,880
environment committer push is blocked

318
00:11:56,880 --> 00:12:00,000
and you can also see it in the GitHub UI

319
00:12:00,000 --> 00:12:02,820
so moving over to GitHub again get

320
00:12:02,820 --> 00:12:05,760
signing tags and commits the same

321
00:12:05,760 --> 00:12:07,860
attestation

322
00:12:07,860 --> 00:12:09,600
um a little typo down there in the

323
00:12:09,600 --> 00:12:12,300
management strategy uh

324
00:12:12,300 --> 00:12:13,920
you can do Branch protection with these

325
00:12:13,920 --> 00:12:15,360
GitHub has released a lot of new

326
00:12:15,360 --> 00:12:16,800
features around git signing so I

327
00:12:16,800 --> 00:12:18,959
encourage you to check them out

328
00:12:18,959 --> 00:12:22,500
um protecting Grant branches if a commit

329
00:12:22,500 --> 00:12:26,160
is not signed no go on that

330
00:12:26,160 --> 00:12:28,079
um

331
00:12:28,079 --> 00:12:30,660
it's automatic on the web UI if you're

332
00:12:30,660 --> 00:12:32,279
if you're editing a readme or whatever

333
00:12:32,279 --> 00:12:34,620
you shouldn't try not to do that in a

334
00:12:34,620 --> 00:12:36,600
web UI but if you do github's

335
00:12:36,600 --> 00:12:39,120
automatically signing that for you

336
00:12:39,120 --> 00:12:41,399
um and then I also wanted to mention the

337
00:12:41,399 --> 00:12:44,160
ability for uh to add an organization

338
00:12:44,160 --> 00:12:47,760
SSH certificate authority to GitHub and

339
00:12:47,760 --> 00:12:49,079
there you can see the feedback right in

340
00:12:49,079 --> 00:12:51,000
the GitHub UI so the developer is not

341
00:12:51,000 --> 00:12:52,440
having to leave their

342
00:12:52,440 --> 00:12:55,519
environment or workflow

343
00:12:55,519 --> 00:12:59,100
dependabot enable it know that it's not

344
00:12:59,100 --> 00:13:00,180
perfect

345
00:13:00,180 --> 00:13:03,000
understand the limitations of it

346
00:13:03,000 --> 00:13:04,320
um

347
00:13:04,320 --> 00:13:06,899
if you are on GitHub go on there make

348
00:13:06,899 --> 00:13:10,200
sure that dependabot works for your

349
00:13:10,200 --> 00:13:12,300
programming language make sure you're

350
00:13:12,300 --> 00:13:13,920
using lock files because that's what's

351
00:13:13,920 --> 00:13:16,139
going to work the best especially for

352
00:13:16,139 --> 00:13:18,660
transitive dependencies but essentially

353
00:13:18,660 --> 00:13:22,079
depending bot kind of works as a

354
00:13:22,079 --> 00:13:24,660
sort of an sea tool software composition

355
00:13:24,660 --> 00:13:26,220
analysis that'll give you your

356
00:13:26,220 --> 00:13:27,779
dependencies your transitive

357
00:13:27,779 --> 00:13:29,420
dependencies

358
00:13:29,420 --> 00:13:32,459
uh again no it's not perfect it's

359
00:13:32,459 --> 00:13:33,959
getting better

360
00:13:33,959 --> 00:13:34,800
um

361
00:13:34,800 --> 00:13:37,459
something to definitely take a look at

362
00:13:37,459 --> 00:13:40,620
another tip for this one

363
00:13:40,620 --> 00:13:42,740
um

364
00:13:43,380 --> 00:13:45,600
I would say make sure you're

365
00:13:45,600 --> 00:13:47,579
prioritizing alerts

366
00:13:47,579 --> 00:13:49,700
um based on most important

367
00:13:49,700 --> 00:13:51,959
GitHub does a good job at not just

368
00:13:51,959 --> 00:13:54,720
saying critical critical critical at the

369
00:13:54,720 --> 00:13:57,779
top they do some evaluation of

370
00:13:57,779 --> 00:13:58,860
um

371
00:13:58,860 --> 00:14:00,360
you know whether or not you're calling a

372
00:14:00,360 --> 00:14:02,279
vulnerable function or not

373
00:14:02,279 --> 00:14:04,860
and some additional things so keep that

374
00:14:04,860 --> 00:14:07,560
in mind don't always sort by severity

375
00:14:07,560 --> 00:14:08,519
level

376
00:14:08,519 --> 00:14:11,940
code owners super helpful kind of

377
00:14:11,940 --> 00:14:14,639
extends Branch protections

378
00:14:14,639 --> 00:14:16,440
um essentially sets requirements for

379
00:14:16,440 --> 00:14:18,240
pull requests based on ownership so you

380
00:14:18,240 --> 00:14:19,980
can be really granular

381
00:14:19,980 --> 00:14:23,279
and your code reviews you can say if

382
00:14:23,279 --> 00:14:25,579
there's an IAC folder within a project

383
00:14:25,579 --> 00:14:28,260
the operations team or the cloud

384
00:14:28,260 --> 00:14:30,660
engineering team must approve this

385
00:14:30,660 --> 00:14:33,000
if there's also some additional

386
00:14:33,000 --> 00:14:36,060
static websites code in there it goes to

387
00:14:36,060 --> 00:14:38,579
the application team so

388
00:14:38,579 --> 00:14:40,380
really allows for some some super

389
00:14:40,380 --> 00:14:42,420
granular code reviews

390
00:14:42,420 --> 00:14:45,000
built into GitHub you put a code owner's

391
00:14:45,000 --> 00:14:46,320
file in the the root of your project

392
00:14:46,320 --> 00:14:49,019
super helpful again feedback in the

393
00:14:49,019 --> 00:14:53,100
GitHub UI recommend slack jira and the

394
00:14:53,100 --> 00:14:54,779
uh the get about it log is also super

395
00:14:54,779 --> 00:14:57,120
powerful

396
00:14:57,120 --> 00:14:58,980
GitHub actions

397
00:14:58,980 --> 00:15:00,540
um most people are probably super

398
00:15:00,540 --> 00:15:03,360
familiar with this this is GitHub CI CD

399
00:15:03,360 --> 00:15:05,160
again you can view all of your testing

400
00:15:05,160 --> 00:15:07,459
here

401
00:15:07,860 --> 00:15:10,620
your application security testing SCA

402
00:15:10,620 --> 00:15:12,480
infrastructure as code you can also do

403
00:15:12,480 --> 00:15:15,360
Secrets Discovery look for verified

404
00:15:15,360 --> 00:15:18,600
Marketplace Partners GitHub uh reaches

405
00:15:18,600 --> 00:15:20,579
out and verifies those Partners so I

406
00:15:20,579 --> 00:15:21,959
would start there if you're using any

407
00:15:21,959 --> 00:15:24,540
third-party actions and then you can

408
00:15:24,540 --> 00:15:26,399
also use built-in capabilities with the

409
00:15:26,399 --> 00:15:28,260
the platforms you're already using so

410
00:15:28,260 --> 00:15:29,760
they're thinking of Docker scan and

411
00:15:29,760 --> 00:15:34,579
docker s-bomb Dr respond is a

412
00:15:34,579 --> 00:15:36,120
experimental

413
00:15:36,120 --> 00:15:38,100
feature so just know that it'll be

414
00:15:38,100 --> 00:15:39,839
changing all the time and there might be

415
00:15:39,839 --> 00:15:41,880
some hiccups there but that'll be a

416
00:15:41,880 --> 00:15:43,920
super powerful thing too to be able to

417
00:15:43,920 --> 00:15:46,199
provide at least that

418
00:15:46,199 --> 00:15:47,820
initial

419
00:15:47,820 --> 00:15:49,320
build materials for your container

420
00:15:49,320 --> 00:15:53,300
images back in the GitHub UI

421
00:15:55,320 --> 00:15:57,540
jump back over here starting to rush

422
00:15:57,540 --> 00:15:59,180
through these this is a lightning talk

423
00:15:59,180 --> 00:16:02,220
AWS elastic container registry some

424
00:16:02,220 --> 00:16:04,740
super nice built-in features scan on

425
00:16:04,740 --> 00:16:07,079
push included so if you're using ECR for

426
00:16:07,079 --> 00:16:09,540
your container image registry you're

427
00:16:09,540 --> 00:16:12,560
already getting that scan on push uh the

428
00:16:12,560 --> 00:16:15,660
enhanced scanning through Amazon

429
00:16:15,660 --> 00:16:18,420
inspector that'll do continuous scanning

430
00:16:18,420 --> 00:16:20,519
anytime a new vulnerability is added to

431
00:16:20,519 --> 00:16:22,380
the database it'll scan your images

432
00:16:22,380 --> 00:16:25,139
again another couple features that I

433
00:16:25,139 --> 00:16:27,120
always like to point out to folks that

434
00:16:27,120 --> 00:16:29,579
I I see they don't get used a lot life

435
00:16:29,579 --> 00:16:31,740
cycle policies and cross-region and

436
00:16:31,740 --> 00:16:33,720
account replication especially if you're

437
00:16:33,720 --> 00:16:36,120
doing enhanced scanning you're getting

438
00:16:36,120 --> 00:16:38,399
charged for every container image that's

439
00:16:38,399 --> 00:16:40,740
being scanned so if you've got a

440
00:16:40,740 --> 00:16:43,500
production account on AWS or production

441
00:16:43,500 --> 00:16:44,699
registry

442
00:16:44,699 --> 00:16:46,560
I would keep the minimal amount of

443
00:16:46,560 --> 00:16:48,060
images you need to be able to roll back

444
00:16:48,060 --> 00:16:50,699
and meet your slas

445
00:16:50,699 --> 00:16:53,279
um and then I would either

446
00:16:53,279 --> 00:16:55,500
use lifecycle policies to get rid of

447
00:16:55,500 --> 00:16:57,360
those images and clean them up

448
00:16:57,360 --> 00:17:00,000
um or I would also use cross-the-counter

449
00:17:00,000 --> 00:17:00,980
region

450
00:17:00,980 --> 00:17:02,880
cross-region or account replication

451
00:17:02,880 --> 00:17:05,220
store those images for historical

452
00:17:05,220 --> 00:17:07,799
reasons and and not scan them there's no

453
00:17:07,799 --> 00:17:10,020
reason to be paying for image scans of

454
00:17:10,020 --> 00:17:12,059
images that you're not currently using

455
00:17:12,059 --> 00:17:15,540
and again feedback console cloudwatch

456
00:17:15,540 --> 00:17:17,819
and eventbridge super powerful you can

457
00:17:17,819 --> 00:17:21,020
pretty much send those anywhere

458
00:17:21,359 --> 00:17:23,400
um inspector

459
00:17:23,400 --> 00:17:24,780
and kind of mention that with the

460
00:17:24,780 --> 00:17:27,299
container image scanning AWS is working

461
00:17:27,299 --> 00:17:30,380
really hard on expanding inspector

462
00:17:30,380 --> 00:17:32,460
recently they've included Lambda

463
00:17:32,460 --> 00:17:33,600
functions

464
00:17:33,600 --> 00:17:36,000
which will scan your Lambda functions

465
00:17:36,000 --> 00:17:38,220
during initial deployment and also

466
00:17:38,220 --> 00:17:39,360
continuously

467
00:17:39,360 --> 00:17:42,860
ec2 for software vulnerabilities as well

468
00:17:42,860 --> 00:17:45,900
and this support for inspectors at the

469
00:17:45,900 --> 00:17:48,840
AWS organizations level so super easy to

470
00:17:48,840 --> 00:17:51,720
set up cover all of your accounts

471
00:17:51,720 --> 00:17:52,620
um

472
00:17:52,620 --> 00:17:54,299
but do be aware that there are some

473
00:17:54,299 --> 00:17:55,500
operating system and language

474
00:17:55,500 --> 00:17:58,320
limitations so again when you turn a

475
00:17:58,320 --> 00:17:59,940
feature on you want to make sure first

476
00:17:59,940 --> 00:18:02,580
that your Tech stack is covered that

477
00:18:02,580 --> 00:18:04,919
your OS and language is covered by the

478
00:18:04,919 --> 00:18:07,280
feature

479
00:18:08,460 --> 00:18:11,539
all right

480
00:18:12,020 --> 00:18:14,760
Macy again another sensitive data

481
00:18:14,760 --> 00:18:16,320
Discovery tool

482
00:18:16,320 --> 00:18:18,179
um

483
00:18:18,179 --> 00:18:20,580
you can scan your objects at time of

484
00:18:20,580 --> 00:18:23,280
ingestion or continuous know again that

485
00:18:23,280 --> 00:18:27,120
this one is can get expensive so I would

486
00:18:27,120 --> 00:18:28,919
definitely recommend doing it on a

487
00:18:28,919 --> 00:18:31,260
bucket by Bucket Level not doing your

488
00:18:31,260 --> 00:18:34,260
entire account especially for the uh if

489
00:18:34,260 --> 00:18:38,280
you have continuous scanning setup

490
00:18:38,280 --> 00:18:39,780
um

491
00:18:39,780 --> 00:18:41,520
you're you're really going to see the

492
00:18:41,520 --> 00:18:44,520
cost especially if you're a data heavy

493
00:18:44,520 --> 00:18:45,900
organization if you've got some big

494
00:18:45,900 --> 00:18:47,400
buckets

495
00:18:47,400 --> 00:18:49,919
for the development world if you're

496
00:18:49,919 --> 00:18:52,080
looking for Secrets inclusion um like

497
00:18:52,080 --> 00:18:54,179
apips or stuff like that I would limit

498
00:18:54,179 --> 00:18:55,980
it to the buckets that you're using to

499
00:18:55,980 --> 00:18:58,740
store static websites or

500
00:18:58,740 --> 00:19:02,240
um any other application code

501
00:19:02,880 --> 00:19:05,580
code pipeline same thing as GitHub

502
00:19:05,580 --> 00:19:07,799
actions obviously it's a cic platform so

503
00:19:07,799 --> 00:19:10,260
super extensible you can do all of your

504
00:19:10,260 --> 00:19:13,559
testing here again Docker scan Dr s bomb

505
00:19:13,559 --> 00:19:15,960
good examples of leveraging Technologies

506
00:19:15,960 --> 00:19:18,179
you've already you are using and pull

507
00:19:18,179 --> 00:19:20,340
that feedback back into the development

508
00:19:20,340 --> 00:19:22,020
workflow

509
00:19:22,020 --> 00:19:24,600
um and again for all these AWS services

510
00:19:24,600 --> 00:19:27,240
the console if you unfortunately happen

511
00:19:27,240 --> 00:19:28,559
to be in there

512
00:19:28,559 --> 00:19:31,620
um but cloudwatch event bridge I always

513
00:19:31,620 --> 00:19:34,679
recommend leveraging this especially

514
00:19:34,679 --> 00:19:37,080
um for code Pipeline and for GitHub

515
00:19:37,080 --> 00:19:39,000
actions like you want visibility on your

516
00:19:39,000 --> 00:19:43,260
bills if a build happens at 2 A.M and

517
00:19:43,260 --> 00:19:45,780
it's never happened before it's nice to

518
00:19:45,780 --> 00:19:46,799
know

519
00:19:46,799 --> 00:19:48,780
um you know to have some visibility on

520
00:19:48,780 --> 00:19:51,120
that unless you're deploying a thousand

521
00:19:51,120 --> 00:19:53,340
times a day would get annoying but most

522
00:19:53,340 --> 00:19:55,620
folks aren't doing that

523
00:19:55,620 --> 00:19:57,900
um so the too long didn't watch snuck a

524
00:19:57,900 --> 00:20:01,020
Jurassic Park meme in there had to do it

525
00:20:01,020 --> 00:20:01,919
um

526
00:20:01,919 --> 00:20:03,419
implementing Security in your

527
00:20:03,419 --> 00:20:05,160
development workflow

528
00:20:05,160 --> 00:20:07,620
and your devsecops or devops life cycle

529
00:20:07,620 --> 00:20:10,799
it's not a race but it's not not a race

530
00:20:10,799 --> 00:20:13,080
um so basically you want to get over the

531
00:20:13,080 --> 00:20:14,940
fence you don't want to be caught on the

532
00:20:14,940 --> 00:20:16,380
fence

533
00:20:16,380 --> 00:20:16,980
um

534
00:20:16,980 --> 00:20:19,740
so you know pay attention

535
00:20:19,740 --> 00:20:21,780
spend the time and effort on on focusing

536
00:20:21,780 --> 00:20:23,760
on these things

537
00:20:23,760 --> 00:20:26,039
um and again just to recap know what

538
00:20:26,039 --> 00:20:27,600
you're solving for threat modeling

539
00:20:27,600 --> 00:20:30,120
knowing your applications move with

540
00:20:30,120 --> 00:20:32,580
intention and measure things that's the

541
00:20:32,580 --> 00:20:34,440
metrics bit how do you know what you've

542
00:20:34,440 --> 00:20:36,780
done if you're not measuring

543
00:20:36,780 --> 00:20:38,100
um investigate your existing

544
00:20:38,100 --> 00:20:39,780
capabilities before you go out and buy

545
00:20:39,780 --> 00:20:43,200
something new or add some

546
00:20:43,200 --> 00:20:45,960
complexity that might not necessarily uh

547
00:20:45,960 --> 00:20:49,559
be needed always do that and then again

548
00:20:49,559 --> 00:20:51,780
feedback within development or developer

549
00:20:51,780 --> 00:20:54,240
workflow cannot stress that enough you

550
00:20:54,240 --> 00:20:56,340
don't want to put these tools in place

551
00:20:56,340 --> 00:20:58,039
just to have your developers

552
00:20:58,039 --> 00:21:00,780
ignore it so

553
00:21:00,780 --> 00:21:04,140
that is my number one tip

554
00:21:04,140 --> 00:21:05,580
and then

555
00:21:05,580 --> 00:21:09,139
finish up with MacGyver himself

556
00:21:09,780 --> 00:21:11,700
I'll let you read that if you have any

557
00:21:11,700 --> 00:21:13,559
questions or anything at all always feel

558
00:21:13,559 --> 00:21:16,520
to reach out at me on Twitter at Vega

559
00:21:16,520 --> 00:21:21,059
there's also I linked way back here

560
00:21:21,059 --> 00:21:24,260
um if you do like tools

561
00:21:25,799 --> 00:21:28,679
I do maintain an absurdly large list of

562
00:21:28,679 --> 00:21:32,900
devops tools here on GitHub so

563
00:21:33,780 --> 00:21:35,760
thank you so much for that Mitch that

564
00:21:35,760 --> 00:21:37,559
was amazing and I think that's such a

565
00:21:37,559 --> 00:21:39,720
creative way of keeping all the tools as

566
00:21:39,720 --> 00:21:41,580
well though I must say like if anyone's

567
00:21:41,580 --> 00:21:43,740
like done schooling and you know you're

568
00:21:43,740 --> 00:21:45,240
looking at periodic tables always gives

569
00:21:45,240 --> 00:21:47,240
you a bit of jitters like

570
00:21:47,240 --> 00:21:50,480
that yeah

571
00:21:50,480 --> 00:21:53,280
yeah but I think this is definitely a

572
00:21:53,280 --> 00:21:55,200
much more fun periodic table for sure

573
00:21:55,200 --> 00:21:56,640
but thank you so much that was such an

574
00:21:56,640 --> 00:21:58,980
interesting talk and I definitely did

575
00:21:58,980 --> 00:22:01,020
enjoy your memes as well

576
00:22:01,020 --> 00:22:03,720
um we may just go to one quick question

577
00:22:03,720 --> 00:22:06,059
I think we did get one from uh sham from

578
00:22:06,059 --> 00:22:07,559
Hopkins he's just saying what are the

579
00:22:07,559 --> 00:22:10,740
best practices or pointers to introduce

580
00:22:10,740 --> 00:22:13,679
devsecops tool chain for existing devops

581
00:22:13,679 --> 00:22:16,940
CI CD pipeline

582
00:22:17,159 --> 00:22:18,960
um I would

583
00:22:18,960 --> 00:22:20,760
I would say

584
00:22:20,760 --> 00:22:21,419
um

585
00:22:21,419 --> 00:22:24,000
I would go back to this and say move

586
00:22:24,000 --> 00:22:25,820
with intention and measure things right

587
00:22:25,820 --> 00:22:29,159
so so go slow don't throw a bunch of

588
00:22:29,159 --> 00:22:31,320
stuff in there all at once

589
00:22:31,320 --> 00:22:35,159
um measure your output I would say don't

590
00:22:35,159 --> 00:22:36,720
add anything that's not going to be of

591
00:22:36,720 --> 00:22:39,720
value and that you can't see returned

592
00:22:39,720 --> 00:22:42,600
every day in every build because if

593
00:22:42,600 --> 00:22:44,299
you're not then what's the point

594
00:22:44,299 --> 00:22:46,980
definitely I love that that's a really

595
00:22:46,980 --> 00:22:48,840
like you know it's it's a very holistic

596
00:22:48,840 --> 00:22:50,220
way of looking at things and often it's

597
00:22:50,220 --> 00:22:52,260
not just about you know like tools and

598
00:22:52,260 --> 00:22:53,700
other things it's just about as you said

599
00:22:53,700 --> 00:22:55,020
you know move with intention I think

600
00:22:55,020 --> 00:22:57,200
that should be the motive for today

601
00:22:57,200 --> 00:22:59,640
exactly yeah you just need to step back

602
00:22:59,640 --> 00:23:03,020
and like look at the big picture

603
00:23:05,419 --> 00:23:07,860
talks is you always want them to go for

604
00:23:07,860 --> 00:23:10,980
so much longer so I know really like a

605
00:23:10,980 --> 00:23:12,480
best you know like a really good taster

606
00:23:12,480 --> 00:23:14,100
for you know these things and we loved

607
00:23:14,100 --> 00:23:15,120
your meme so thank you so much for

608
00:23:15,120 --> 00:23:18,059
joining us I'm gonna throw over to um

609
00:23:18,059 --> 00:23:19,980
kavika just to introduce our next guest

610
00:23:19,980 --> 00:23:21,179
but thank you so much Mitch and thanks

611
00:23:21,179 --> 00:23:25,159
for joining devsecond thanks guys

