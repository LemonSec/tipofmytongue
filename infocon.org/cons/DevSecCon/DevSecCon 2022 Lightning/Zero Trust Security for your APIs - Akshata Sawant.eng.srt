1
00:00:00,060 --> 00:00:02,399
that is already backstage let me put

2
00:00:02,399 --> 00:00:04,680
this one up and Matt will you do the

3
00:00:04,680 --> 00:00:07,859
honors too to put put ashade I hope

4
00:00:07,859 --> 00:00:11,179
ashara I hope I pronounce it correctly

5
00:00:11,179 --> 00:00:14,580
that's right a shot okay thank you God

6
00:00:14,580 --> 00:00:18,119
that's one thing good afternoon oh good

7
00:00:18,119 --> 00:00:20,840
morning wherever you are in the world

8
00:00:20,840 --> 00:00:24,359
so we are just about on time I think so

9
00:00:24,359 --> 00:00:27,480
let me get you a slide on the screen and

10
00:00:27,480 --> 00:00:31,560
now we'll give you the floor absolutely

11
00:00:31,560 --> 00:00:35,760
it's uh it's all up to you now and uh we

12
00:00:35,760 --> 00:00:37,920
have your slides on board we have you in

13
00:00:37,920 --> 00:00:40,020
screen so take it away and blow them

14
00:00:40,020 --> 00:00:41,879
away thank you thank you thank you so

15
00:00:41,879 --> 00:00:44,820
much so with that let's get started so

16
00:00:44,820 --> 00:00:46,440
today we are mainly like gonna speak

17
00:00:46,440 --> 00:00:48,120
about like discuss about zero trust

18
00:00:48,120 --> 00:00:50,520
security for your apis this is also like

19
00:00:50,520 --> 00:00:53,399
one of my favorite topic you can see uh

20
00:00:53,399 --> 00:00:55,440
brief introduction about myself like

21
00:00:55,440 --> 00:00:56,760
currently I'm working as a developer

22
00:00:56,760 --> 00:00:59,039
Advocate at mulesoft uh a Salesforce

23
00:00:59,039 --> 00:01:00,960
company and I have been working on music

24
00:01:00,960 --> 00:01:02,760
as a technology for over five years now

25
00:01:02,760 --> 00:01:04,739
I've recently published a book as well

26
00:01:04,739 --> 00:01:06,420
which is like we will saw for Salesforce

27
00:01:06,420 --> 00:01:08,939
developers available on Amazon and yeah

28
00:01:08,939 --> 00:01:10,439
I've been blogging uh speaking at

29
00:01:10,439 --> 00:01:12,479
several sessions so apart from this I

30
00:01:12,479 --> 00:01:15,119
love photography and traveling and yeah

31
00:01:15,119 --> 00:01:16,380
I would be happy to connect with you

32
00:01:16,380 --> 00:01:18,180
guys maybe over LinkedIn on Twitter as

33
00:01:18,180 --> 00:01:18,900
well

34
00:01:18,900 --> 00:01:21,780
so with that uh what we'll be discussing

35
00:01:21,780 --> 00:01:23,040
today like quickly in this lightning

36
00:01:23,040 --> 00:01:24,840
session is like what is the need for API

37
00:01:24,840 --> 00:01:26,939
security and mainly we'll be selling

38
00:01:26,939 --> 00:01:28,320
like we'll be getting to know like what

39
00:01:28,320 --> 00:01:29,759
is zero cross security how do we

40
00:01:29,759 --> 00:01:32,400
Implement theater security briefly and

41
00:01:32,400 --> 00:01:33,540
then we'll also address all your

42
00:01:33,540 --> 00:01:36,600
questions about it and yeah just a

43
00:01:36,600 --> 00:01:39,479
forward-looking statement uh try

44
00:01:39,479 --> 00:01:41,400
purchasing decisions definitely

45
00:01:41,400 --> 00:01:44,280
so with that let's get started

46
00:01:44,280 --> 00:01:46,740
so we all know that apis have been

47
00:01:46,740 --> 00:01:48,540
actually increa I mean the use of apis

48
00:01:48,540 --> 00:01:50,159
has been increasing at an exponential

49
00:01:50,159 --> 00:01:52,920
rate and over the past few years the API

50
00:01:52,920 --> 00:01:55,619
security has actually been a severe

51
00:01:55,619 --> 00:01:57,720
concern so almost 41 percent of

52
00:01:57,720 --> 00:01:59,460
organizations have supported API

53
00:01:59,460 --> 00:02:01,920
security and that's a fact but apart

54
00:02:01,920 --> 00:02:03,119
from this apis are actually

55
00:02:03,119 --> 00:02:04,680
proliferating in a different environment

56
00:02:04,680 --> 00:02:07,200
or different ecosystems we can say so

57
00:02:07,200 --> 00:02:09,660
with this API ecosystem expanding and

58
00:02:09,660 --> 00:02:11,400
expanding to different different

59
00:02:11,400 --> 00:02:13,200
verticals or different areas a different

60
00:02:13,200 --> 00:02:15,180
Cloud you can say so it gets difficult

61
00:02:15,180 --> 00:02:17,700
to manage all these apis and with all

62
00:02:17,700 --> 00:02:20,040
these issues it's actually impacting the

63
00:02:20,040 --> 00:02:22,560
API security so our API security is

64
00:02:22,560 --> 00:02:24,780
actually becoming the major concern

65
00:02:24,780 --> 00:02:27,959
so you must have like there might be I

66
00:02:27,959 --> 00:02:29,400
mean definitely there might be some GTA

67
00:02:29,400 --> 00:02:31,260
fans here and even if you're not a GTA

68
00:02:31,260 --> 00:02:32,700
fan you must have definitely heard this

69
00:02:32,700 --> 00:02:34,800
news sometime like some few months back

70
00:02:34,800 --> 00:02:36,660
that there has been like just before the

71
00:02:36,660 --> 00:02:39,060
GTA 6 game release right there were some

72
00:02:39,060 --> 00:02:41,640
major videos and uh stuff about the game

73
00:02:41,640 --> 00:02:43,560
which was leaked and this has actually

74
00:02:43,560 --> 00:02:45,420
impacted the organization at a high

75
00:02:45,420 --> 00:02:47,220
level I made some Financial perspective

76
00:02:47,220 --> 00:02:48,540
and that was like quite a devastating

77
00:02:48,540 --> 00:02:49,500
effect

78
00:02:49,500 --> 00:02:51,900
so there were also some news like this

79
00:02:51,900 --> 00:02:53,580
was done by someone internal I mean

80
00:02:53,580 --> 00:02:55,200
there's no country information on that

81
00:02:55,200 --> 00:02:57,480
but yeah there was some news as well so

82
00:02:57,480 --> 00:03:00,180
imagine attack of this level on your

83
00:03:00,180 --> 00:03:02,400
organization or on your data security

84
00:03:02,400 --> 00:03:04,860
which is impacting your security if that

85
00:03:04,860 --> 00:03:06,660
can be so devastating that it is

86
00:03:06,660 --> 00:03:09,239
actually taking you down so and if this

87
00:03:09,239 --> 00:03:10,739
is done by someone who's an internal

88
00:03:10,739 --> 00:03:13,019
person then how important is API

89
00:03:13,019 --> 00:03:14,640
security and whom should you be trusting

90
00:03:14,640 --> 00:03:16,920
so that is the main question here I mean

91
00:03:16,920 --> 00:03:18,900
even relating to our topic like whom

92
00:03:18,900 --> 00:03:21,060
should you be actually trusting so as

93
00:03:21,060 --> 00:03:22,739
Europa security says you should be

94
00:03:22,739 --> 00:03:24,360
trusting no one and you should be always

95
00:03:24,360 --> 00:03:27,780
verifying whoever whoever the entity is

96
00:03:27,780 --> 00:03:31,080
so zero security is not just applying I

97
00:03:31,080 --> 00:03:32,340
mean in this session we'll be mainly

98
00:03:32,340 --> 00:03:33,959
talking about the API but it's an

99
00:03:33,959 --> 00:03:36,360
architectural security framework you can

100
00:03:36,360 --> 00:03:37,920
say which is like mainly applying to

101
00:03:37,920 --> 00:03:39,920
different Enterprise technology system

102
00:03:39,920 --> 00:03:42,480
uh different ecosystem you can actually

103
00:03:42,480 --> 00:03:44,099
apply this on different kind of

104
00:03:44,099 --> 00:03:46,140
application and everywhere but in this

105
00:03:46,140 --> 00:03:47,519
session we are mainly and particularly

106
00:03:47,519 --> 00:03:49,440
interested in how do we apply zero

107
00:03:49,440 --> 00:03:51,420
security for your apis

108
00:03:51,420 --> 00:03:53,760
before going ahead like let's see like

109
00:03:53,760 --> 00:03:55,860
what are the uh four pillars or what are

110
00:03:55,860 --> 00:03:58,860
the main principles of zero security so

111
00:03:58,860 --> 00:04:01,080
first one as if uh said the trust no one

112
00:04:01,080 --> 00:04:03,360
and always verify which states that we

113
00:04:03,360 --> 00:04:04,860
actually want to verify each and every

114
00:04:04,860 --> 00:04:06,659
entity who's going to send us requests

115
00:04:06,659 --> 00:04:08,700
or who's going to ask us a request for

116
00:04:08,700 --> 00:04:10,620
we are not going to blindly give access

117
00:04:10,620 --> 00:04:12,840
to anyone or we are by default it's

118
00:04:12,840 --> 00:04:14,159
going to be

119
00:04:14,159 --> 00:04:16,139
deny so that is that comes your second

120
00:04:16,139 --> 00:04:18,540
Principle as well we are going to make

121
00:04:18,540 --> 00:04:20,639
sure that we are going to give the least

122
00:04:20,639 --> 00:04:22,380
amount of privileges to each of the

123
00:04:22,380 --> 00:04:24,060
users and by default it's going to be

124
00:04:24,060 --> 00:04:25,919
denied just like the way we are using

125
00:04:25,919 --> 00:04:28,080
our maybe you can say a word document or

126
00:04:28,080 --> 00:04:29,520
we're sharing with someone we make sure

127
00:04:29,520 --> 00:04:31,440
that it's not the editor rights that we

128
00:04:31,440 --> 00:04:33,300
are giving we give them a commenter of

129
00:04:33,300 --> 00:04:34,740
your rights which means if you're given

130
00:04:34,740 --> 00:04:36,960
the least profitable rights

131
00:04:36,960 --> 00:04:39,000
after that we'll be having full

132
00:04:39,000 --> 00:04:41,940
visibility and inspection so as we said

133
00:04:41,940 --> 00:04:43,380
that the apis have been sprawling into

134
00:04:43,380 --> 00:04:44,400
different environments different

135
00:04:44,400 --> 00:04:46,440
ecosystem it gets difficult to actually

136
00:04:46,440 --> 00:04:48,419
have a centralized control and where the

137
00:04:48,419 --> 00:04:50,520
data is coming from how is the data

138
00:04:50,520 --> 00:04:51,960
being processed or what is the incoming

139
00:04:51,960 --> 00:04:53,400
outgoing data

140
00:04:53,400 --> 00:04:55,380
to avoid this thing we actually need a

141
00:04:55,380 --> 00:04:57,180
full visibility and full control over

142
00:04:57,180 --> 00:04:59,520
our entire API ecosystem and that is

143
00:04:59,520 --> 00:05:00,900
like the thought principle that how are

144
00:05:00,900 --> 00:05:02,639
we going to activate we need to have

145
00:05:02,639 --> 00:05:04,800
full visibility and inspection

146
00:05:04,800 --> 00:05:07,560
apart from that we are also concerned

147
00:05:07,560 --> 00:05:09,240
about centralized management as we said

148
00:05:09,240 --> 00:05:10,680
like the apis is falling across

149
00:05:10,680 --> 00:05:12,120
different environments and that that

150
00:05:12,120 --> 00:05:13,500
that's the reason we do not have a

151
00:05:13,500 --> 00:05:15,660
centralized management system and when a

152
00:05:15,660 --> 00:05:17,639
centralized management system lacks like

153
00:05:17,639 --> 00:05:19,259
you're not able to have a full control

154
00:05:19,259 --> 00:05:21,360
over your apis and that's where there

155
00:05:21,360 --> 00:05:23,520
are loopholes in the security

156
00:05:23,520 --> 00:05:25,259
so the four pillars which you can say is

157
00:05:25,259 --> 00:05:26,460
like they're not going to trust anyone

158
00:05:26,460 --> 00:05:27,960
we're going to get the least Privileges

159
00:05:27,960 --> 00:05:29,880
and access and by default it will deny

160
00:05:29,880 --> 00:05:31,620
you're going to have a full visibility

161
00:05:31,620 --> 00:05:33,419
and control our API and we are going to

162
00:05:33,419 --> 00:05:35,460
do all these things via centralized

163
00:05:35,460 --> 00:05:38,039
management approach so let's further

164
00:05:38,039 --> 00:05:40,979
extend this ideology the architectural

165
00:05:40,979 --> 00:05:43,199
framework zero security to our apis and

166
00:05:43,199 --> 00:05:45,360
see how we can achieve it

167
00:05:45,360 --> 00:05:47,520
so if you see over here here we have

168
00:05:47,520 --> 00:05:49,500
actually a pattern I mean a mesh like

169
00:05:49,500 --> 00:05:50,940
architecture wherein you can say your

170
00:05:50,940 --> 00:05:53,940
apis it could be mule I mean rest apis

171
00:05:53,940 --> 00:05:55,440
it could be any kind of APM different

172
00:05:55,440 --> 00:05:56,940
kinds of application you can also see

173
00:05:56,940 --> 00:05:59,280
workdays app and all of these things

174
00:05:59,280 --> 00:06:00,900
they're interconnected to each other in

175
00:06:00,900 --> 00:06:03,060
like a service I mean a mesh like

176
00:06:03,060 --> 00:06:04,380
architecture

177
00:06:04,380 --> 00:06:07,080
and there is a exchange of data uh going

178
00:06:07,080 --> 00:06:09,060
on so when you have such a complex

179
00:06:09,060 --> 00:06:11,820
ecosystem of different end systems apis

180
00:06:11,820 --> 00:06:13,740
and everything in place how do you

181
00:06:13,740 --> 00:06:15,479
manage to achieve security for your

182
00:06:15,479 --> 00:06:18,240
architecture for your ecosystem so the

183
00:06:18,240 --> 00:06:19,500
question here is I mean how are you

184
00:06:19,500 --> 00:06:21,000
going to make sure that you're applying

185
00:06:21,000 --> 00:06:23,699
zero trust security so the way is like

186
00:06:23,699 --> 00:06:26,759
using a layer security approach so layer

187
00:06:26,759 --> 00:06:28,680
security approach means I mean in each

188
00:06:28,680 --> 00:06:31,500
level or each peripheral level or at

189
00:06:31,500 --> 00:06:33,240
every end you're going to make sure that

190
00:06:33,240 --> 00:06:34,740
there is a security layer which has been

191
00:06:34,740 --> 00:06:36,780
enforced so if you see the bigger

192
00:06:36,780 --> 00:06:38,639
rectangle the Reddit dots which is like

193
00:06:38,639 --> 00:06:40,259
actually selling telling you that there

194
00:06:40,259 --> 00:06:42,180
is a layered security towards the edge

195
00:06:42,180 --> 00:06:44,400
the outermost periphery and the

196
00:06:44,400 --> 00:06:46,440
innermost which says that at each each

197
00:06:46,440 --> 00:06:47,940
and every component wherever there is a

198
00:06:47,940 --> 00:06:49,500
request response or transaction taking

199
00:06:49,500 --> 00:06:51,740
place you're applying an API security

200
00:06:51,740 --> 00:06:54,660
and this security could be by terms of

201
00:06:54,660 --> 00:06:56,460
policy or any other security method

202
00:06:56,460 --> 00:06:58,319
which you wish to apply you'll see like

203
00:06:58,319 --> 00:07:00,300
how are we going to apply them

204
00:07:00,300 --> 00:07:02,400
so Tools in action I mean this is a

205
00:07:02,400 --> 00:07:03,660
lightning once I'm not sure how much

206
00:07:03,660 --> 00:07:04,860
tools and action will be doing but yeah

207
00:07:04,860 --> 00:07:06,600
I will just make sure like we'll be on

208
00:07:06,600 --> 00:07:09,660
time and we'll do that so uh

209
00:07:09,660 --> 00:07:11,520
an order management system that is what

210
00:07:11,520 --> 00:07:13,199
I've used for a reference here so you

211
00:07:13,199 --> 00:07:14,759
can see like there are different end

212
00:07:14,759 --> 00:07:16,139
systems which are involved like the next

213
00:07:16,139 --> 00:07:18,660
stop laptop or the emailing system and

214
00:07:18,660 --> 00:07:20,400
all and there are also different end

215
00:07:20,400 --> 00:07:21,840
systems towards the system I mean

216
00:07:21,840 --> 00:07:23,280
towards the lower Edge which is like

217
00:07:23,280 --> 00:07:25,500
Salesforce workday they are connecting

218
00:07:25,500 --> 00:07:26,940
so these are like the different apis

219
00:07:26,940 --> 00:07:28,259
which are interconnecting with each

220
00:07:28,259 --> 00:07:30,000
other they are fetching data from the

221
00:07:30,000 --> 00:07:32,220
backend system and this is actually your

222
00:07:32,220 --> 00:07:36,539
API ecosystem or your infrastructure APA

223
00:07:36,539 --> 00:07:38,759
ecosystem basically so if you can see

224
00:07:38,759 --> 00:07:40,860
this m dotted components you can assume

225
00:07:40,860 --> 00:07:42,840
that they are your apis and over them we

226
00:07:42,840 --> 00:07:44,580
have applied different policies like the

227
00:07:44,580 --> 00:07:46,560
rate limiting custom policy zero Duty

228
00:07:46,560 --> 00:07:49,259
policy header injection so at each and

229
00:07:49,259 --> 00:07:50,699
every stage wherever there is an

230
00:07:50,699 --> 00:07:52,560
incoming recorder wherever there is a

231
00:07:52,560 --> 00:07:53,880
transaction taking place there is an

232
00:07:53,880 --> 00:07:55,380
incoming data and outgoing data

233
00:07:55,380 --> 00:07:57,240
basically Whenever there is an API call

234
00:07:57,240 --> 00:07:58,500
triggered you're making sure that you're

235
00:07:58,500 --> 00:07:59,759
always verifying the call before

236
00:07:59,759 --> 00:08:02,520
providing the information to the user so

237
00:08:02,520 --> 00:08:04,440
that is what we say zero security and

238
00:08:04,440 --> 00:08:06,060
we're not trusting any of the call no

239
00:08:06,060 --> 00:08:08,580
matter from home the end who is sending

240
00:08:08,580 --> 00:08:11,280
the request or whatsoever

241
00:08:11,280 --> 00:08:12,180
okay

242
00:08:12,180 --> 00:08:14,220
please feel free to drop your questions

243
00:08:14,220 --> 00:08:16,680
in between like uh yeah yeah this is

244
00:08:16,680 --> 00:08:17,880
gonna be a lightning session but still

245
00:08:17,880 --> 00:08:19,860
like we'll try to cover most of them

246
00:08:19,860 --> 00:08:22,199
so going ahead like uh from the previous

247
00:08:22,199 --> 00:08:24,479
one itself like uh we have seen that

248
00:08:24,479 --> 00:08:25,919
there was an there was an architecture

249
00:08:25,919 --> 00:08:27,840
on which we are going to apply security

250
00:08:27,840 --> 00:08:30,780
at each level each and every level so

251
00:08:30,780 --> 00:08:33,719
this is an API which is like connecting

252
00:08:33,719 --> 00:08:35,099
with the backend system you can say it's

253
00:08:35,099 --> 00:08:36,719
the database system and I'm applying a

254
00:08:36,719 --> 00:08:39,539
sharability security policy at it so

255
00:08:39,539 --> 00:08:41,279
similarly we'll be applying the security

256
00:08:41,279 --> 00:08:43,440
policies across each and every end

257
00:08:43,440 --> 00:08:44,940
points and that's how we are going to

258
00:08:44,940 --> 00:08:47,220
create a mesh of security so suppose if

259
00:08:47,220 --> 00:08:48,899
there is a request coming from the upper

260
00:08:48,899 --> 00:08:51,779
layer from my desktop or machine and

261
00:08:51,779 --> 00:08:53,940
then it's coming all the way towards my

262
00:08:53,940 --> 00:08:56,040
Salesforce and it has to pass through

263
00:08:56,040 --> 00:08:58,800
all the security stages at every end and

264
00:08:58,800 --> 00:09:00,360
that's how I'm ensuring I'm securing

265
00:09:00,360 --> 00:09:03,120
this securing my API ecosystem

266
00:09:03,120 --> 00:09:04,260
okay

267
00:09:04,260 --> 00:09:07,140
so now let us see yeah we'll be coming

268
00:09:07,140 --> 00:09:09,899
on the music side as well mulesoft is

269
00:09:09,899 --> 00:09:11,760
like a use of any point platform

270
00:09:11,760 --> 00:09:13,019
basically is the world's number one

271
00:09:13,019 --> 00:09:15,300
integration and API platform it's an API

272
00:09:15,300 --> 00:09:16,920
management tool and ipas solution which

273
00:09:16,920 --> 00:09:19,500
will be helping you to uh unlock your

274
00:09:19,500 --> 00:09:21,360
data which will be helping you to manage

275
00:09:21,360 --> 00:09:23,459
your entire API life cycle your entire

276
00:09:23,459 --> 00:09:25,920
API ecosystem you can design your apis

277
00:09:25,920 --> 00:09:27,899
build your apis publish your apis to

278
00:09:27,899 --> 00:09:31,019
exchange and manage your apis as well I

279
00:09:31,019 --> 00:09:32,880
mean you can apply security policies you

280
00:09:32,880 --> 00:09:34,500
can control you can have a full control

281
00:09:34,500 --> 00:09:37,680
of your API at one single place so we'll

282
00:09:37,680 --> 00:09:39,300
definitely see about more about getting

283
00:09:39,300 --> 00:09:41,339
the upcoming slides

284
00:09:41,339 --> 00:09:43,560
but before going there like how do we

285
00:09:43,560 --> 00:09:45,480
apply zero security from a developer

286
00:09:45,480 --> 00:09:47,220
perspective because it's often

287
00:09:47,220 --> 00:09:49,140
misunderstood that API security it's

288
00:09:49,140 --> 00:09:51,360
only I mean something for the senior

289
00:09:51,360 --> 00:09:53,580
devs or maybe for Architects or the

290
00:09:53,580 --> 00:09:54,720
Enterprise architects who are going to

291
00:09:54,720 --> 00:09:56,700
take care of security but that's not

292
00:09:56,700 --> 00:09:58,500
correct I mean if you are aiming to

293
00:09:58,500 --> 00:10:00,660
achieve zero press security at the

294
00:10:00,660 --> 00:10:02,640
developer stage or at every stakeholder

295
00:10:02,640 --> 00:10:04,140
level or at every each and every level

296
00:10:04,140 --> 00:10:06,300
there is some responsibility which you

297
00:10:06,300 --> 00:10:07,800
need to show the ensure that you are

298
00:10:07,800 --> 00:10:09,360
like taken care of

299
00:10:09,360 --> 00:10:11,700
so we have this to developer personas

300
00:10:11,700 --> 00:10:13,740
first is Maxi who's an API developer and

301
00:10:13,740 --> 00:10:16,080
second one is Dan who's an API owner so

302
00:10:16,080 --> 00:10:18,060
let's see how we can help these two like

303
00:10:18,060 --> 00:10:20,279
as an API developer as an API owner how

304
00:10:20,279 --> 00:10:22,200
are we going to help this to achieve API

305
00:10:22,200 --> 00:10:25,320
security and also to perform their tasks

306
00:10:25,320 --> 00:10:27,899
so Maxi was an API developer her task is

307
00:10:27,899 --> 00:10:30,720
to design API okay using the API first

308
00:10:30,720 --> 00:10:32,820
approach and she is going to like build

309
00:10:32,820 --> 00:10:34,800
the application using this aph she's

310
00:10:34,800 --> 00:10:36,899
going to test this application so how is

311
00:10:36,899 --> 00:10:38,339
she going to achieve all of this thing

312
00:10:38,339 --> 00:10:40,800
and why she's building her API how do we

313
00:10:40,800 --> 00:10:43,620
how does she assures that the API

314
00:10:43,620 --> 00:10:46,980
security is taken care of so let's go to

315
00:10:46,980 --> 00:10:49,380
any point platform

316
00:10:49,380 --> 00:10:51,779
sorry

317
00:10:51,779 --> 00:10:54,000
so in any point platform like this is

318
00:10:54,000 --> 00:10:55,260
the any point platform I was talking to

319
00:10:55,260 --> 00:10:57,180
you about like the iPass solution which

320
00:10:57,180 --> 00:10:58,860
is like when you take care of the API

321
00:10:58,860 --> 00:11:01,320
the API management tool the iPass

322
00:11:01,320 --> 00:11:03,540
solution so going ahead to The Design

323
00:11:03,540 --> 00:11:05,040
Center this is the place where I'm

324
00:11:05,040 --> 00:11:07,260
actually going to design my APM it's not

325
00:11:07,260 --> 00:11:08,940
necessary with designer apis there you

326
00:11:08,940 --> 00:11:11,040
can design it in any PI editor tool or

327
00:11:11,040 --> 00:11:13,140
any tool which is of your choice and you

328
00:11:13,140 --> 00:11:15,600
can import it here but uh I'll be just

329
00:11:15,600 --> 00:11:17,220
opening one of the API which I already

330
00:11:17,220 --> 00:11:20,339
have for the demo purpose

331
00:11:20,339 --> 00:11:24,480
okay and while Maxi is designing this

332
00:11:24,480 --> 00:11:27,000
apis she can ensure that she is applying

333
00:11:27,000 --> 00:11:29,880
some security standards to her API she's

334
00:11:29,880 --> 00:11:32,040
applying some rule sets governance rules

335
00:11:32,040 --> 00:11:36,600
at 2i API so let's let me just open this

336
00:11:36,600 --> 00:11:38,760
thing up

337
00:11:38,760 --> 00:11:39,660
okay

338
00:11:39,660 --> 00:11:41,880
using the design center also like while

339
00:11:41,880 --> 00:11:44,880
it's been opening yeah using the design

340
00:11:44,880 --> 00:11:46,620
center you can actually build any kind

341
00:11:46,620 --> 00:11:48,360
of API I mean you can build the API

342
00:11:48,360 --> 00:11:50,220
specification which could be a rest API

343
00:11:50,220 --> 00:11:52,920
or you can have your async apis as well

344
00:11:52,920 --> 00:11:54,720
if you are someone who's like completely

345
00:11:54,720 --> 00:11:57,360
new to API designing it will be guiding

346
00:11:57,360 --> 00:11:58,860
you to the process as well like how do

347
00:11:58,860 --> 00:12:01,260
you design your API so yeah API has

348
00:12:01,260 --> 00:12:03,480
already open so if you see I have

349
00:12:03,480 --> 00:12:05,339
already applied a secure by component

350
00:12:05,339 --> 00:12:07,560
over here so although this is like an

351
00:12:07,560 --> 00:12:09,480
initial stage I'm making sure that my

352
00:12:09,480 --> 00:12:12,600
API is bounded by the security policies

353
00:12:12,600 --> 00:12:15,120
or mechanisms at this stage definitely

354
00:12:15,120 --> 00:12:18,180
my API won't be like um we are not going

355
00:12:18,180 --> 00:12:19,920
to validate it but we can actually

356
00:12:19,920 --> 00:12:22,019
simulate it by using a mocking service

357
00:12:22,019 --> 00:12:24,480
so suppose this is my end point which I

358
00:12:24,480 --> 00:12:26,040
which for which I have applied a basic

359
00:12:26,040 --> 00:12:27,959
authentication and I try to send a send

360
00:12:27,959 --> 00:12:30,720
request it will be giving me an error

361
00:12:30,720 --> 00:12:32,820
saying that the validation has failed

362
00:12:32,820 --> 00:12:35,279
but as soon as I enter any random

363
00:12:35,279 --> 00:12:36,959
username password it should be giving me

364
00:12:36,959 --> 00:12:38,519
a response so this is like you're not

365
00:12:38,519 --> 00:12:39,600
validating it but you actually

366
00:12:39,600 --> 00:12:42,060
simulating it and this is how it will be

367
00:12:42,060 --> 00:12:43,560
when you're actually implementing your

368
00:12:43,560 --> 00:12:46,079
API so right at the designing stage I'm

369
00:12:46,079 --> 00:12:47,579
making sure that I'm applying some

370
00:12:47,579 --> 00:12:49,920
security standards so that the quality

371
00:12:49,920 --> 00:12:52,500
is maintained I can also apply some

372
00:12:52,500 --> 00:12:55,740
security governance rule sets to my API

373
00:12:55,740 --> 00:12:58,500
so the rule sets like uh security

374
00:12:58,500 --> 00:13:01,019
authentication best practices so you

375
00:13:01,019 --> 00:13:03,000
guys must have used sonar Cube or any

376
00:13:03,000 --> 00:13:05,820
other coding convention uh tools while

377
00:13:05,820 --> 00:13:07,260
you're designing your application which

378
00:13:07,260 --> 00:13:09,180
gives you a response like there has been

379
00:13:09,180 --> 00:13:10,740
few bugs according standards are not

380
00:13:10,740 --> 00:13:12,720
proper the lines the commands are not

381
00:13:12,720 --> 00:13:14,880
proper something like that similarly the

382
00:13:14,880 --> 00:13:16,920
API design stage itself you can ensure

383
00:13:16,920 --> 00:13:18,360
that you're applying like the security

384
00:13:18,360 --> 00:13:21,420
governance policies let me show you

385
00:13:21,420 --> 00:13:24,360
testing in the files yeah so if suppose

386
00:13:24,360 --> 00:13:26,519
if any of the security tags are not

387
00:13:26,519 --> 00:13:28,260
present or the best practices are not

388
00:13:28,260 --> 00:13:30,899
taken care while I'm designing an API so

389
00:13:30,899 --> 00:13:32,700
it should be giving me a lot that my API

390
00:13:32,700 --> 00:13:34,680
is non-conformant and it is not matching

391
00:13:34,680 --> 00:13:36,899
the standards so that is one thing you

392
00:13:36,899 --> 00:13:38,880
can do as a developer that ensure that

393
00:13:38,880 --> 00:13:40,800
your design first approach while you're

394
00:13:40,800 --> 00:13:43,380
building your API is correct taking care

395
00:13:43,380 --> 00:13:45,480
all the security perspective while

396
00:13:45,480 --> 00:13:47,519
you're designing the APM so this you're

397
00:13:47,519 --> 00:13:49,139
preventing the further iterations while

398
00:13:49,139 --> 00:13:50,279
you're in the developing stage of the

399
00:13:50,279 --> 00:13:51,899
API or while in the consuming stage of

400
00:13:51,899 --> 00:13:53,940
the API okay

401
00:13:53,940 --> 00:13:57,300
and um yeah this is something I mean

402
00:13:57,300 --> 00:13:58,800
suppose if there is a new developer as

403
00:13:58,800 --> 00:14:00,180
well who's joining in and he's trying to

404
00:14:00,180 --> 00:14:03,000
work on this API so if he misses any of

405
00:14:03,000 --> 00:14:04,800
this parameters the security parameter

406
00:14:04,800 --> 00:14:06,540
is if he forgets to add any of them

407
00:14:06,540 --> 00:14:08,700
he'll be getting an alert or maybe an

408
00:14:08,700 --> 00:14:10,740
error in the API that he needs to add

409
00:14:10,740 --> 00:14:12,720
security parameter and he has missed it

410
00:14:12,720 --> 00:14:14,760
so the sphere the developer stages where

411
00:14:14,760 --> 00:14:16,200
you're ensuring that you are adding the

412
00:14:16,200 --> 00:14:18,740
API security

413
00:14:19,079 --> 00:14:22,320
moving ahead to the next one okay this

414
00:14:22,320 --> 00:14:25,220
needs to be loaded okay

415
00:14:28,860 --> 00:14:30,899
okay so yeah we have seen like how we

416
00:14:30,899 --> 00:14:33,000
have helped Maxi to build her apis from

417
00:14:33,000 --> 00:14:35,040
the scratch and implement the test logic

418
00:14:35,040 --> 00:14:37,560
and following the security standards as

419
00:14:37,560 --> 00:14:38,399
well

420
00:14:38,399 --> 00:14:40,980
so going ahead we have Dan who's an API

421
00:14:40,980 --> 00:14:43,139
owner and his main responsibility like

422
00:14:43,139 --> 00:14:45,000
as an API owner what what is the main

423
00:14:45,000 --> 00:14:46,500
responsibility is like to secure your

424
00:14:46,500 --> 00:14:49,260
API to manage API to apply some of

425
00:14:49,260 --> 00:14:52,560
security policies proxy uh basically

426
00:14:52,560 --> 00:14:54,060
management of different I mean suppose

427
00:14:54,060 --> 00:14:55,740
if you're having hundreds of apis and

428
00:14:55,740 --> 00:14:57,600
you need to manage them so managing them

429
00:14:57,600 --> 00:14:59,459
under different framework or a different

430
00:14:59,459 --> 00:15:01,440
portal will be so difficult so that's

431
00:15:01,440 --> 00:15:02,880
why you need to have a centralized

432
00:15:02,880 --> 00:15:04,680
portal a centralized access where you're

433
00:15:04,680 --> 00:15:07,740
actually managing your API so let us see

434
00:15:07,740 --> 00:15:09,420
I mean with respect to this previous

435
00:15:09,420 --> 00:15:12,060
diagram which I mean the order

436
00:15:12,060 --> 00:15:13,680
management system use case which we have

437
00:15:13,680 --> 00:15:16,440
seen so suppose if this is my layer of

438
00:15:16,440 --> 00:15:18,779
API ecosystem or this is my architecture

439
00:15:18,779 --> 00:15:21,300
so at each and every API layer I'm going

440
00:15:21,300 --> 00:15:23,940
to add an API policy okay so here I'm

441
00:15:23,940 --> 00:15:25,560
maybe we can see like how do we add a

442
00:15:25,560 --> 00:15:28,560
JWT policy to it or or any of the policy

443
00:15:28,560 --> 00:15:30,720
how do we achieve it at one place

444
00:15:30,720 --> 00:15:34,680
okay so let's get back again to our

445
00:15:34,680 --> 00:15:36,959
API

446
00:15:36,959 --> 00:15:39,899
API manager so API manager is a second

447
00:15:39,899 --> 00:15:41,100
place where which is actually

448
00:15:41,100 --> 00:15:43,860
responsible for managing all your apis

449
00:15:43,860 --> 00:15:45,959
you can apply alerts on your API you can

450
00:15:45,959 --> 00:15:47,820
create you can apply security policies

451
00:15:47,820 --> 00:15:50,160
on your API you can manage your instance

452
00:15:50,160 --> 00:15:52,139
and this is not just for mulesoft

453
00:15:52,139 --> 00:15:54,600
application no matter where your API is

454
00:15:54,600 --> 00:15:56,940
deployed suppose if I have one API which

455
00:15:56,940 --> 00:15:59,760
is deployed on maybe uh AWS and other is

456
00:15:59,760 --> 00:16:02,399
on Google cloud or Azure anywhere so I

457
00:16:02,399 --> 00:16:04,139
can still manage all of them at one

458
00:16:04,139 --> 00:16:07,380
single place using the API manager so

459
00:16:07,380 --> 00:16:09,300
this is how I've created an instance for

460
00:16:09,300 --> 00:16:12,839
my API and the security policies which I

461
00:16:12,839 --> 00:16:14,040
have talked which I've been speaking

462
00:16:14,040 --> 00:16:16,199
about so you can definitely design your

463
00:16:16,199 --> 00:16:18,779
security policies from scratch but there

464
00:16:18,779 --> 00:16:21,000
are I mean a custom policies writing

465
00:16:21,000 --> 00:16:22,740
your any of the code and then you can

466
00:16:22,740 --> 00:16:24,180
publish it but there are already

467
00:16:24,180 --> 00:16:26,579
pre-existing policies security policy

468
00:16:26,579 --> 00:16:28,079
which are present which are available

469
00:16:28,079 --> 00:16:30,000
for you and they are not just from

470
00:16:30,000 --> 00:16:32,100
security uh capabilities they are from

471
00:16:32,100 --> 00:16:33,779
like quality of service compliance

472
00:16:33,779 --> 00:16:35,399
transformation troubleshooting as well

473
00:16:35,399 --> 00:16:37,860
but as we are mainly speaking about API

474
00:16:37,860 --> 00:16:39,779
security we'll just go into the security

475
00:16:39,779 --> 00:16:41,699
Tab and we'll see like what are the

476
00:16:41,699 --> 00:16:43,440
different policies we already have three

477
00:16:43,440 --> 00:16:45,660
existing ones and how easy it is to

478
00:16:45,660 --> 00:16:47,339
configure them

479
00:16:47,339 --> 00:16:49,560
so I have I can see I've already applied

480
00:16:49,560 --> 00:16:51,300
the shareability policy maybe we can see

481
00:16:51,300 --> 00:16:54,240
basic authentication policy and see how

482
00:16:54,240 --> 00:16:56,459
easy it is to apply I mean all you need

483
00:16:56,459 --> 00:16:58,139
to do is just entire username password

484
00:16:58,139 --> 00:17:00,720
you can select which API you want to

485
00:17:00,720 --> 00:17:04,619
apply your API policy you can give a

486
00:17:04,619 --> 00:17:06,720
username password like new soft and then

487
00:17:06,720 --> 00:17:08,400
just apply the policy and it will be

488
00:17:08,400 --> 00:17:10,799
applied to my API which is deployed on

489
00:17:10,799 --> 00:17:12,419
the same Cloud as well I can have

490
00:17:12,419 --> 00:17:15,059
multiple apis uh API policies for

491
00:17:15,059 --> 00:17:17,579
particular API can group them I can have

492
00:17:17,579 --> 00:17:20,040
some con alerts created as well if

493
00:17:20,040 --> 00:17:22,319
suppose if my API is not having a proper

494
00:17:22,319 --> 00:17:24,780
response time if it is uh if I'm getting

495
00:17:24,780 --> 00:17:26,699
some response time failure alerts I can

496
00:17:26,699 --> 00:17:28,199
have alert and the email will be sent

497
00:17:28,199 --> 00:17:29,340
out to me

498
00:17:29,340 --> 00:17:31,020
basically you can create some different

499
00:17:31,020 --> 00:17:32,700
contracts as well you can have your own

500
00:17:32,700 --> 00:17:34,620
slat years which will be saying about

501
00:17:34,620 --> 00:17:37,200
your incoming traffic so this is all

502
00:17:37,200 --> 00:17:39,059
about your API management and security

503
00:17:39,059 --> 00:17:40,980
which comes at one place

504
00:17:40,980 --> 00:17:43,799
so as we have already applied the basic

505
00:17:43,799 --> 00:17:48,080
authentication policy let me just um

506
00:17:50,580 --> 00:17:52,980
so yeah this policy we have also a

507
00:17:52,980 --> 00:17:54,660
legitimately policy let me see let me

508
00:17:54,660 --> 00:17:56,160
show you guys the configuration of this

509
00:17:56,160 --> 00:17:58,140
policy I mean you might have you might

510
00:17:58,140 --> 00:17:59,460
be having this conception that charity

511
00:17:59,460 --> 00:18:01,919
policy it's like a of authentication

512
00:18:01,919 --> 00:18:03,419
authorization policy it might be

513
00:18:03,419 --> 00:18:04,980
difficult to configure but all you need

514
00:18:04,980 --> 00:18:06,660
to do is just select your algorithm

515
00:18:06,660 --> 00:18:09,299
whichever you want it could be hmac or

516
00:18:09,299 --> 00:18:12,360
RSA or anything and then the chair will

517
00:18:12,360 --> 00:18:14,039
the key land you can have your own key

518
00:18:14,039 --> 00:18:16,620
you can validate the claims and all as

519
00:18:16,620 --> 00:18:18,299
well so previously you must have seen

520
00:18:18,299 --> 00:18:20,160
you have been doing all this validation

521
00:18:20,160 --> 00:18:21,900
from the baby

522
00:18:21,900 --> 00:18:24,660
uh by writing your custom code or your

523
00:18:24,660 --> 00:18:26,520
own Java code but this is like quite

524
00:18:26,520 --> 00:18:28,080
simple and easy to manage and also at

525
00:18:28,080 --> 00:18:30,660
one place okay so all you need to do is

526
00:18:30,660 --> 00:18:33,600
just save this policy and uh it will be

527
00:18:33,600 --> 00:18:35,700
applied so if you try to hit the request

528
00:18:35,700 --> 00:18:38,520
to this it should be it should be giving

529
00:18:38,520 --> 00:18:40,140
you an error just because I have already

530
00:18:40,140 --> 00:18:42,000
applied a token but suppose if I am

531
00:18:42,000 --> 00:18:44,340
taking off the token it should be giving

532
00:18:44,340 --> 00:18:46,200
me a failure the zero Loop token is

533
00:18:46,200 --> 00:18:48,179
required so this is how I'm actually

534
00:18:48,179 --> 00:18:50,640
applying security at each and every end

535
00:18:50,640 --> 00:18:53,280
point okay and the token generation and

536
00:18:53,280 --> 00:18:54,720
everything you can definitely do using

537
00:18:54,720 --> 00:18:57,600
the third party tool OCTA oauth or any

538
00:18:57,600 --> 00:19:02,039
other identity service provider okay so

539
00:19:02,039 --> 00:19:04,559
this was actually all about

540
00:19:04,559 --> 00:19:07,140
the API Security on the API owner part

541
00:19:07,140 --> 00:19:09,419
like how we can help Dan as an API owner

542
00:19:09,419 --> 00:19:11,760
to achieve API security

543
00:19:11,760 --> 00:19:14,220
so apart from this like apart from a

544
00:19:14,220 --> 00:19:16,140
developer or an API owner perspective

545
00:19:16,140 --> 00:19:18,419
what else you can do so you make sure

546
00:19:18,419 --> 00:19:19,980
that you're making you're building your

547
00:19:19,980 --> 00:19:21,960
if you're building your application or

548
00:19:21,960 --> 00:19:24,179
your apis on a secure Foundation

549
00:19:24,179 --> 00:19:26,220
secure Foundation as an if you're in a

550
00:19:26,220 --> 00:19:27,419
government project you're following the

551
00:19:27,419 --> 00:19:29,100
government compliances or your

552
00:19:29,100 --> 00:19:30,600
organization's policy the security

553
00:19:30,600 --> 00:19:32,280
policy and you're making sure all the

554
00:19:32,280 --> 00:19:33,960
regular regulations and everything is

555
00:19:33,960 --> 00:19:36,600
taken care of deploy your AP on a secure

556
00:19:36,600 --> 00:19:37,980
environment make sure your environment

557
00:19:37,980 --> 00:19:39,720
on which you're hosting your apis is

558
00:19:39,720 --> 00:19:42,660
also protected one okay and all this

559
00:19:42,660 --> 00:19:44,820
apis and services which needs to be like

560
00:19:44,820 --> 00:19:48,059
constantly monitored okay and maybe you

561
00:19:48,059 --> 00:19:49,980
can make them in a group where it gets

562
00:19:49,980 --> 00:19:51,660
easy for you to manage a club them in a

563
00:19:51,660 --> 00:19:53,100
groups and

564
00:19:53,100 --> 00:19:55,860
um into API contracts so that you can

565
00:19:55,860 --> 00:19:58,080
actually like reapply you're being

566
00:19:58,080 --> 00:20:00,780
consistent throughout the apis with the

567
00:20:00,780 --> 00:20:02,340
policies and how are you applying them

568
00:20:02,340 --> 00:20:04,799
so the standardization also comes into

569
00:20:04,799 --> 00:20:05,760
place

570
00:20:05,760 --> 00:20:07,860
so with this we have seen how we have

571
00:20:07,860 --> 00:20:09,740
actually implemented all the four

572
00:20:09,740 --> 00:20:12,480
pillars I mean what was firstly the need

573
00:20:12,480 --> 00:20:14,400
for API security

574
00:20:14,400 --> 00:20:16,860
uh like what what what are the issues

575
00:20:16,860 --> 00:20:20,280
with API security how uh what are the

576
00:20:20,280 --> 00:20:22,140
industry issues we have been facing and

577
00:20:22,140 --> 00:20:24,480
what is the need for API security what

578
00:20:24,480 --> 00:20:26,100
is zero trust security what are the four

579
00:20:26,100 --> 00:20:28,020
pillars that is firstly don't trust

580
00:20:28,020 --> 00:20:30,000
anyone and always verified each and

581
00:20:30,000 --> 00:20:32,100
every stage give the least amount of

582
00:20:32,100 --> 00:20:34,020
Privileges and by default it should be

583
00:20:34,020 --> 00:20:36,780
deny a third one being uh you're going

584
00:20:36,780 --> 00:20:38,640
to monitor and have a full control

585
00:20:38,640 --> 00:20:41,400
proper visibility and a centralized

586
00:20:41,400 --> 00:20:42,780
access the fourth one I mean you're

587
00:20:42,780 --> 00:20:44,640
going to manage all the apis and secure

588
00:20:44,640 --> 00:20:46,860
them at one place we have also seen the

589
00:20:46,860 --> 00:20:48,360
rules of any point platform the

590
00:20:48,360 --> 00:20:50,280
capabilities how you can build your apis

591
00:20:50,280 --> 00:20:52,020
you can share your apis with others you

592
00:20:52,020 --> 00:20:54,240
can host and manage your apis at one

593
00:20:54,240 --> 00:20:56,940
place and how do we apply policies so

594
00:20:56,940 --> 00:20:58,260
there are there could be different kinds

595
00:20:58,260 --> 00:21:00,179
of policy we have just seen like basic

596
00:21:00,179 --> 00:21:02,340
authentication and GWT but you could be

597
00:21:02,340 --> 00:21:04,260
having any of your policy of your choice

598
00:21:04,260 --> 00:21:06,179
and there could be some places where

599
00:21:06,179 --> 00:21:08,039
you're not actually having a policy or

600
00:21:08,039 --> 00:21:10,919
maybe no security as well but make sure

601
00:21:10,919 --> 00:21:12,480
you're doing it I mean you're not doing

602
00:21:12,480 --> 00:21:15,059
that I'm just applying security is even

603
00:21:15,059 --> 00:21:17,340
a very basic one at every stage because

604
00:21:17,340 --> 00:21:19,380
that's what zero security States as well

605
00:21:19,380 --> 00:21:20,820
if you're not trusting anyone you're

606
00:21:20,820 --> 00:21:22,320
making sure and you're verifying that at

607
00:21:22,320 --> 00:21:24,720
each and every stage you're verifying

608
00:21:24,720 --> 00:21:25,919
them

609
00:21:25,919 --> 00:21:28,200
so with that

610
00:21:28,200 --> 00:21:30,000
not sure like oh yeah The Next Step

611
00:21:30,000 --> 00:21:31,559
would be like you can join us like on

612
00:21:31,559 --> 00:21:33,179
Wheels of community or can learn more

613
00:21:33,179 --> 00:21:36,720
about uh the API management or ipas tool

614
00:21:36,720 --> 00:21:38,460
and how you can build your apis how you

615
00:21:38,460 --> 00:21:40,020
can get started with the API development

616
00:21:40,020 --> 00:21:42,480
you can watch us live on Twitch and

617
00:21:42,480 --> 00:21:44,340
learn more about like how cool things

618
00:21:44,340 --> 00:21:45,840
what are what are the different stuff we

619
00:21:45,840 --> 00:21:47,460
have been doing you can try any point

620
00:21:47,460 --> 00:21:49,320
platform for free so the one which we

621
00:21:49,320 --> 00:21:51,419
actually uh sorted is the any point

622
00:21:51,419 --> 00:21:53,340
platform it's uh you can get a 40 days

623
00:21:53,340 --> 00:21:55,200
free trial account and you can get your

624
00:21:55,200 --> 00:21:56,520
hands on it you can try different

625
00:21:56,520 --> 00:21:59,220
components you can try API security uh

626
00:21:59,220 --> 00:22:01,140
APM management API building the entire

627
00:22:01,140 --> 00:22:03,179
API lifecycle using that One Singular

628
00:22:03,179 --> 00:22:04,440
platform

629
00:22:04,440 --> 00:22:06,539
so do give it a try

630
00:22:06,539 --> 00:22:09,120
and then yeah just a small help I mean

631
00:22:09,120 --> 00:22:10,799
you can just uh this is the book like

632
00:22:10,799 --> 00:22:12,360
you will soft for Salesforce developer

633
00:22:12,360 --> 00:22:13,679
so if you're someone who's actually

634
00:22:13,679 --> 00:22:16,559
looking to get started with mulesoft um

635
00:22:16,559 --> 00:22:18,299
on your mulesoft journey to learn music

636
00:22:18,299 --> 00:22:21,299
maybe you all can uh get this thing on

637
00:22:21,299 --> 00:22:22,860
Amazon or maybe you can share with your

638
00:22:22,860 --> 00:22:24,419
friends who's like looking to get

639
00:22:24,419 --> 00:22:26,520
started on the mules of Journey

640
00:22:26,520 --> 00:22:29,400
and yeah so now maybe we can just take

641
00:22:29,400 --> 00:22:31,500
any questions if you guys have or you'll

642
00:22:31,500 --> 00:22:32,940
can reach out to me as well on LinkedIn

643
00:22:32,940 --> 00:22:35,700
Twitter or yeah I'll be happy to take

644
00:22:35,700 --> 00:22:37,860
all the questions you guys have

645
00:22:37,860 --> 00:22:40,740
thank you so much

646
00:22:40,740 --> 00:22:43,440
um unfortunately we are running late a

647
00:22:43,440 --> 00:22:46,080
bit uh so I would suggest everybody to

648
00:22:46,080 --> 00:22:48,480
go to our deaf second community on

649
00:22:48,480 --> 00:22:51,179
Discord and try to ask your questions

650
00:22:51,179 --> 00:22:53,640
there people are more than happy to help

651
00:22:53,640 --> 00:22:55,440
you ashata will be have we will be all

652
00:22:55,440 --> 00:22:57,299
more than happy to help you so thank you

653
00:22:57,299 --> 00:22:59,039
for this great talk

654
00:22:59,039 --> 00:23:00,780
um I would I would love to chat even

655
00:23:00,780 --> 00:23:03,480
more it was amazing um but I have to

656
00:23:03,480 --> 00:23:05,220
move on to the to the next one because I

657
00:23:05,220 --> 00:23:08,700
see uh Ron is already in a backstage

658
00:23:08,700 --> 00:23:10,860
waiting for us so thank you so much we

659
00:23:10,860 --> 00:23:12,240
will thank you so much for having me

660
00:23:12,240 --> 00:23:16,760
absolutely absolutely and uh

