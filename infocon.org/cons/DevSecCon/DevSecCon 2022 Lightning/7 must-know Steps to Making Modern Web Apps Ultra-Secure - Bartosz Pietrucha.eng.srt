1
00:00:00,120 --> 00:00:01,620
thank you

2
00:00:01,620 --> 00:00:04,080
perfect so we've got our last but

3
00:00:04,080 --> 00:00:06,600
definitely not the least a talk for the

4
00:00:06,600 --> 00:00:08,940
apj region and usually you know we just

5
00:00:08,940 --> 00:00:11,519
um have you know an amazing talk so we

6
00:00:11,519 --> 00:00:12,660
do have

7
00:00:12,660 --> 00:00:14,160
um Bartos

8
00:00:14,160 --> 00:00:16,619
um petrucha who is a software engineer

9
00:00:16,619 --> 00:00:19,440
and also the founder of Dev Academy he

10
00:00:19,440 --> 00:00:21,660
has taught a thousand of developers

11
00:00:21,660 --> 00:00:23,939
around the world has spoken at many

12
00:00:23,939 --> 00:00:26,100
International conferences

13
00:00:26,100 --> 00:00:27,539
um and he's also worked with a lot of

14
00:00:27,539 --> 00:00:29,880
great companies like credit Suzy UBS and

15
00:00:29,880 --> 00:00:32,279
I think the list goes on and today he's

16
00:00:32,279 --> 00:00:34,920
going to be talking to us about

17
00:00:34,920 --> 00:00:36,899
um seven must-known steps to making

18
00:00:36,899 --> 00:00:39,300
modern web apps Ultra secure so I'm

19
00:00:39,300 --> 00:00:41,940
going to bring Bartos on board

20
00:00:41,940 --> 00:00:43,739
welcome to the show thank you for

21
00:00:43,739 --> 00:00:46,079
speaking at Del second

22
00:00:46,079 --> 00:00:48,660
hello and welcome how are you today I'm

23
00:00:48,660 --> 00:00:50,340
pretty good uh and we're looking forward

24
00:00:50,340 --> 00:00:51,539
to this talk

25
00:00:51,539 --> 00:00:52,800
um if you did want to just share your

26
00:00:52,800 --> 00:00:54,420
slides we'll pop them here and then

27
00:00:54,420 --> 00:00:55,800
we'll let all the listeners sort of

28
00:00:55,800 --> 00:00:59,039
listen to you know um your talk as well

29
00:00:59,039 --> 00:01:01,320
awesome let me try to share the screen

30
00:01:01,320 --> 00:01:05,480
and let's see how it goes

31
00:01:16,619 --> 00:01:19,200
also just while you're bringing that up

32
00:01:19,200 --> 00:01:21,000
um just a note for anyone watching this

33
00:01:21,000 --> 00:01:22,500
at home and we do have quite a few

34
00:01:22,500 --> 00:01:24,600
people who are joining us live

35
00:01:24,600 --> 00:01:25,860
um thank you for all the questions that

36
00:01:25,860 --> 00:01:27,540
you're bringing on uh you know keep them

37
00:01:27,540 --> 00:01:29,640
coming and also you know if you do want

38
00:01:29,640 --> 00:01:31,140
to have conversations or you know

39
00:01:31,140 --> 00:01:32,759
connect with any of the speakers after

40
00:01:32,759 --> 00:01:34,500
this they've got their socials but also

41
00:01:34,500 --> 00:01:36,720
you can go and join the devsecond

42
00:01:36,720 --> 00:01:39,119
Discord as well but we do have the

43
00:01:39,119 --> 00:01:41,759
slides here so I'm just gonna pop it on

44
00:01:41,759 --> 00:01:44,040
and looking forward to this I'll take it

45
00:01:44,040 --> 00:01:45,540
away about us

46
00:01:45,540 --> 00:01:47,640
okay hello and welcome

47
00:01:47,640 --> 00:01:49,740
um my talk is called seven steps to

48
00:01:49,740 --> 00:01:51,780
ultra secure web apps

49
00:01:51,780 --> 00:01:54,299
and frankly I think that we are all

50
00:01:54,299 --> 00:01:57,360
about Security in in web and in general

51
00:01:57,360 --> 00:01:59,700
over the internet as software engineers

52
00:01:59,700 --> 00:02:02,159
and different experts in the field and I

53
00:02:02,159 --> 00:02:04,799
would like to give you a high overview

54
00:02:04,799 --> 00:02:08,399
of what I find extremely useful when

55
00:02:08,399 --> 00:02:10,440
thinking about building and designing

56
00:02:10,440 --> 00:02:13,560
the systems especially web systems in a

57
00:02:13,560 --> 00:02:16,500
secure fashion so

58
00:02:16,500 --> 00:02:18,959
my name is Bartos and thank you for the

59
00:02:18,959 --> 00:02:21,300
nice introduction as uh already

60
00:02:21,300 --> 00:02:23,879
mentioned I've been working in the field

61
00:02:23,879 --> 00:02:25,200
for

62
00:02:25,200 --> 00:02:27,239
over 10 years for many different

63
00:02:27,239 --> 00:02:29,760
companies master degree and recently I

64
00:02:29,760 --> 00:02:32,580
became a snake Ambassador and I run Dev

65
00:02:32,580 --> 00:02:34,920
Academy and web Security Academy is one

66
00:02:34,920 --> 00:02:38,760
of the projects under deaf Academy so we

67
00:02:38,760 --> 00:02:40,800
are pretty Global with students almost

68
00:02:40,800 --> 00:02:44,879
around the world and every continent so

69
00:02:44,879 --> 00:02:46,739
it's pretty amazing

70
00:02:46,739 --> 00:02:49,560
um this is just one slide one slide to

71
00:02:49,560 --> 00:02:51,780
give a little bit of credibility

72
00:02:51,780 --> 00:02:53,400
um uh I've been also doing a lot of

73
00:02:53,400 --> 00:02:56,340
Education around like another guy so all

74
00:02:56,340 --> 00:02:59,220
of that is done and let's start with the

75
00:02:59,220 --> 00:03:01,800
steps I have a seven steps and in my

76
00:03:01,800 --> 00:03:03,959
opinion the very first the very first is

77
00:03:03,959 --> 00:03:06,300
to actually understand the web security

78
00:03:06,300 --> 00:03:08,700
model because you know we can code stuff

79
00:03:08,700 --> 00:03:11,099
we can use libraries but Seto and Json

80
00:03:11,099 --> 00:03:13,140
web tokens but if we don't build the

81
00:03:13,140 --> 00:03:15,300
fundamentals understanding of where are

82
00:03:15,300 --> 00:03:17,700
we actually located then it's going to

83
00:03:17,700 --> 00:03:19,739
be hard for us to continue and design

84
00:03:19,739 --> 00:03:22,200
and think about uh Security in the first

85
00:03:22,200 --> 00:03:23,819
place so you know there are things like

86
00:03:23,819 --> 00:03:25,739
same origin policy content security

87
00:03:25,739 --> 00:03:27,239
policy

88
00:03:27,239 --> 00:03:30,360
um sub resource Integrity cross-origin

89
00:03:30,360 --> 00:03:32,459
resource running hashes nonsense

90
00:03:32,459 --> 00:03:34,440
signatures and all those things together

91
00:03:34,440 --> 00:03:37,739
actually tie a landscape on which we

92
00:03:37,739 --> 00:03:40,200
actually operate designing making a

93
00:03:40,200 --> 00:03:42,959
decisions you know on on what tools to

94
00:03:42,959 --> 00:03:45,780
use on how to implement things what are

95
00:03:45,780 --> 00:03:47,940
the lurking dangers actually we need to

96
00:03:47,940 --> 00:03:50,940
take care of so you know same origin

97
00:03:50,940 --> 00:03:52,920
policy is fundamental which actually

98
00:03:52,920 --> 00:03:55,560
then tells us more about things like

99
00:03:55,560 --> 00:03:57,480
course and then you know a lot of

100
00:03:57,480 --> 00:04:00,180
developers are throwing at the uh the

101
00:04:00,180 --> 00:04:02,159
hair because you know there are errors

102
00:04:02,159 --> 00:04:05,640
in in the background and you know it is

103
00:04:05,640 --> 00:04:06,840
the

104
00:04:06,840 --> 00:04:08,760
the first thing you just Google and then

105
00:04:08,760 --> 00:04:10,319
you look for the quick solution but

106
00:04:10,319 --> 00:04:12,420
unless you actually know why the things

107
00:04:12,420 --> 00:04:14,400
happen the way they happen and it's

108
00:04:14,400 --> 00:04:17,760
going to be always a shortcut so verse

109
00:04:17,760 --> 00:04:19,738
very important step get all those things

110
00:04:19,738 --> 00:04:22,740
play with it make some hacking make some

111
00:04:22,740 --> 00:04:26,460
examples uh try to break things in and

112
00:04:26,460 --> 00:04:28,139
then once you feel comfortable you can

113
00:04:28,139 --> 00:04:30,660
move on and the next step that I would

114
00:04:30,660 --> 00:04:34,199
like to uh say here is actually learn

115
00:04:34,199 --> 00:04:36,060
about common security vulnerabilities

116
00:04:36,060 --> 00:04:39,740
because there are common already known

117
00:04:39,740 --> 00:04:42,180
techniques that actually allow to break

118
00:04:42,180 --> 00:04:45,680
and they happen very often even in 2022

119
00:04:45,680 --> 00:04:49,560
and there is a nice document called oasp

120
00:04:49,560 --> 00:04:52,500
top 10 from the Owasso organization uh

121
00:04:52,500 --> 00:04:55,440
is open web application security project

122
00:04:55,440 --> 00:04:58,020
and they actually from time to time

123
00:04:58,020 --> 00:05:01,620
update the document and they classify 10

124
00:05:01,620 --> 00:05:06,120
security risks and let's start from like

125
00:05:06,120 --> 00:05:09,240
one which is still valid but extremely

126
00:05:09,240 --> 00:05:12,180
deadly and you know crosstied scripting

127
00:05:12,180 --> 00:05:15,360
and you might say you know it's 2022 why

128
00:05:15,360 --> 00:05:16,979
do we still think about it because it's

129
00:05:16,979 --> 00:05:18,660
still a real thing I mean we know

130
00:05:18,660 --> 00:05:21,060
angular we know a react and we know

131
00:05:21,060 --> 00:05:23,220
front-end Frameworks that take care of

132
00:05:23,220 --> 00:05:26,340
all the sanitization but still in my

133
00:05:26,340 --> 00:05:28,560
opinion relying only okay you know what

134
00:05:28,560 --> 00:05:29,940
angular prevents from cross-site

135
00:05:29,940 --> 00:05:31,919
scripting I should not know about out

136
00:05:31,919 --> 00:05:34,740
this nothing but if if you have some

137
00:05:34,740 --> 00:05:37,320
Advanced features and you know some

138
00:05:37,320 --> 00:05:39,600
snippet of the code via I don't know

139
00:05:39,600 --> 00:05:43,560
reflect that CSS xss or stored exercise

140
00:05:43,560 --> 00:05:46,080
clips into your code then attacker can

141
00:05:46,080 --> 00:05:48,900
steal your cookies for example or you

142
00:05:48,900 --> 00:05:51,120
know if you have HTTP secure cookies

143
00:05:51,120 --> 00:05:53,880
maybe you have some critical information

144
00:05:53,880 --> 00:05:57,000
in your local storage or session storage

145
00:05:57,000 --> 00:05:59,520
and then you know using the cookies then

146
00:05:59,520 --> 00:06:01,680
they may impersonate you and then they

147
00:06:01,680 --> 00:06:03,900
if you have e-commerce maybe steal money

148
00:06:03,900 --> 00:06:06,120
and do some harm so and and practically

149
00:06:06,120 --> 00:06:08,039
if you understand it's not that hard

150
00:06:08,039 --> 00:06:11,160
just to understand okay I need to make

151
00:06:11,160 --> 00:06:15,360
sure that any other code which I somehow

152
00:06:15,360 --> 00:06:17,280
allow to run in the context of the

153
00:06:17,280 --> 00:06:18,240
website

154
00:06:18,240 --> 00:06:20,460
which brings me to the first step that

155
00:06:20,460 --> 00:06:21,720
there's something which is a secure

156
00:06:21,720 --> 00:06:23,819
context of your website then I'm gonna

157
00:06:23,819 --> 00:06:26,940
be practically trying to prevent this

158
00:06:26,940 --> 00:06:29,160
kind of issues so

159
00:06:29,160 --> 00:06:31,800
we are on the basis and now we continue

160
00:06:31,800 --> 00:06:35,699
our you know steps and this one is

161
00:06:35,699 --> 00:06:38,699
pretty crucial because it drives then

162
00:06:38,699 --> 00:06:42,300
the subsequent technical steps that are

163
00:06:42,300 --> 00:06:44,940
extremely important which I call choose

164
00:06:44,940 --> 00:06:47,940
a proper authorization architecture and

165
00:06:47,940 --> 00:06:51,479
the decision has to be made uh mostly

166
00:06:51,479 --> 00:06:53,520
based on non-functional requirements

167
00:06:53,520 --> 00:06:56,880
what I mean by that is first of all

168
00:06:56,880 --> 00:06:59,699
there is a one perspective from the

169
00:06:59,699 --> 00:07:03,060
origin or deployment point of view and

170
00:07:03,060 --> 00:07:04,740
another one is from the state

171
00:07:04,740 --> 00:07:06,660
perspective so you know these are

172
00:07:06,660 --> 00:07:08,940
non-functional requirements and they

173
00:07:08,940 --> 00:07:11,520
derive their subsequent decisions so

174
00:07:11,520 --> 00:07:13,919
from the origin or deployment

175
00:07:13,919 --> 00:07:15,840
perspective you may have

176
00:07:15,840 --> 00:07:18,479
so-called same origin websites you have

177
00:07:18,479 --> 00:07:21,000
you know your origin your domain your

178
00:07:21,000 --> 00:07:23,460
website is available a backend and

179
00:07:23,460 --> 00:07:25,740
front-end and all the services under the

180
00:07:25,740 --> 00:07:28,319
same domain and port and origin so

181
00:07:28,319 --> 00:07:30,479
basically you the user

182
00:07:30,479 --> 00:07:33,660
makes a request and receives a website

183
00:07:33,660 --> 00:07:35,759
from single origin and we can actually

184
00:07:35,759 --> 00:07:38,520
make this nice context but it use

185
00:07:38,520 --> 00:07:40,319
cookies for example in this context

186
00:07:40,319 --> 00:07:42,960
cookies are perfect

187
00:07:42,960 --> 00:07:46,020
and then you know you may have set the

188
00:07:46,020 --> 00:07:49,860
cookies to be secure HTTP only and you

189
00:07:49,860 --> 00:07:52,080
know hardening the the session

190
00:07:52,080 --> 00:07:54,660
information uh inside this context

191
00:07:54,660 --> 00:07:56,699
another case

192
00:07:56,699 --> 00:07:59,580
is that okay but I have a distributed

193
00:07:59,580 --> 00:08:01,919
deployment I cannot use cookies because

194
00:08:01,919 --> 00:08:05,400
there is boundary origin boundary which

195
00:08:05,400 --> 00:08:07,380
does not allow me to pass the cookie

196
00:08:07,380 --> 00:08:08,699
between the domains I have an

197
00:08:08,699 --> 00:08:10,259
authorization server I have an

198
00:08:10,259 --> 00:08:12,599
application I have API

199
00:08:12,599 --> 00:08:14,940
so I I cannot actually use cookies

200
00:08:14,940 --> 00:08:16,740
because they would not be able to be

201
00:08:16,740 --> 00:08:20,099
read by the different domains so you

202
00:08:20,099 --> 00:08:21,720
need to come up with some another

203
00:08:21,720 --> 00:08:24,680
approach it might be some token that

204
00:08:24,680 --> 00:08:27,120
programmatically not by the browser

205
00:08:27,120 --> 00:08:29,400
cookie mechanism is going to be passed

206
00:08:29,400 --> 00:08:32,159
through and then yes it may be HTTP

207
00:08:32,159 --> 00:08:33,659
header for example and then you pass

208
00:08:33,659 --> 00:08:35,940
through between your application it's

209
00:08:35,940 --> 00:08:37,740
going to be juggling between different

210
00:08:37,740 --> 00:08:39,719
domains so this is another perspective

211
00:08:39,719 --> 00:08:42,059
that you you know you need to think

212
00:08:42,059 --> 00:08:45,720
about your authorization architecture

213
00:08:45,720 --> 00:08:47,160
um another perspective

214
00:08:47,160 --> 00:08:48,899
I mean I'm saying all of this to make

215
00:08:48,899 --> 00:08:50,760
you aware that it's not one fits all

216
00:08:50,760 --> 00:08:52,740
there are different contexts and

217
00:08:52,740 --> 00:08:53,519
different

218
00:08:53,519 --> 00:08:55,200
um considerations and another

219
00:08:55,200 --> 00:08:57,420
perspective is a state one so you may

220
00:08:57,420 --> 00:08:59,459
have as simple as that a user state

221
00:08:59,459 --> 00:09:01,560
every information every piece of

222
00:09:01,560 --> 00:09:03,300
information about the login user

223
00:09:03,300 --> 00:09:05,040
permissions and stuff is living on the

224
00:09:05,040 --> 00:09:06,600
server side and the only thing that

225
00:09:06,600 --> 00:09:08,220
jumps between the server and the client

226
00:09:08,220 --> 00:09:10,560
is the session ID right so basically

227
00:09:10,560 --> 00:09:13,140
pretty simple but again it depends on

228
00:09:13,140 --> 00:09:15,060
what you need to do I mean is it

229
00:09:15,060 --> 00:09:16,980
possible to store this to store the

230
00:09:16,980 --> 00:09:18,660
state on the server side and then I'm

231
00:09:18,660 --> 00:09:20,040
gonna jump into the one of the

232
00:09:20,040 --> 00:09:23,459
Randolph's best topics I guess is uh

233
00:09:23,459 --> 00:09:27,180
using jots or pacero and this is a

234
00:09:27,180 --> 00:09:29,279
different perspective on the context

235
00:09:29,279 --> 00:09:32,100
because now you may be in extremely

236
00:09:32,100 --> 00:09:33,899
distributed system or any other

237
00:09:33,899 --> 00:09:36,420
constraint that says you know what it's

238
00:09:36,420 --> 00:09:38,519
hard for me to issue a server side

239
00:09:38,519 --> 00:09:40,980
session maybe in this case I would start

240
00:09:40,980 --> 00:09:43,740
with Seto or Json token and I will put

241
00:09:43,740 --> 00:09:45,959
something inside of the token and then

242
00:09:45,959 --> 00:09:48,120
put it into the client and then you know

243
00:09:48,120 --> 00:09:51,300
I can make it a little bit a little bit

244
00:09:51,300 --> 00:09:54,600
more stateless and I have to care about

245
00:09:54,600 --> 00:09:56,640
many different aspects like Randall

246
00:09:56,640 --> 00:09:58,140
recently mentioned in the previous talk

247
00:09:58,140 --> 00:10:02,040
so then you can put the user ID and

248
00:10:02,040 --> 00:10:03,899
other stuff that you need to maintain

249
00:10:03,899 --> 00:10:07,500
between the different HTTP hubs to pass

250
00:10:07,500 --> 00:10:10,800
to the client and the server

251
00:10:10,800 --> 00:10:13,920
so it's as I mentioned it's not that one

252
00:10:13,920 --> 00:10:15,420
fits all

253
00:10:15,420 --> 00:10:18,300
uh each of the different architectures

254
00:10:18,300 --> 00:10:21,480
is actually a trade-off a trade-off

255
00:10:21,480 --> 00:10:24,180
between security business requirements

256
00:10:24,180 --> 00:10:26,540
technical feasibility

257
00:10:26,540 --> 00:10:30,300
usability and so on so you can actually

258
00:10:30,300 --> 00:10:32,160
look at these different perspectives and

259
00:10:32,160 --> 00:10:35,660
Choose Wisely for your system

260
00:10:36,779 --> 00:10:41,160
number four uh once we are progressing

261
00:10:41,160 --> 00:10:43,940
with this uh process you may actually

262
00:10:43,940 --> 00:10:47,279
consider a secure role-based

263
00:10:47,279 --> 00:10:48,860
permission-based authorization

264
00:10:48,860 --> 00:10:52,200
implementation you know so basically you

265
00:10:52,200 --> 00:10:55,740
you write an application let's stick to

266
00:10:55,740 --> 00:10:58,920
2022 you have SBA or some other

267
00:10:58,920 --> 00:11:01,260
application and then some API in the

268
00:11:01,260 --> 00:11:02,880
back end so you have different roles

269
00:11:02,880 --> 00:11:05,940
they and those roles represent uh the

270
00:11:05,940 --> 00:11:08,160
set of permissions they may share an

271
00:11:08,160 --> 00:11:10,140
account for example and you know

272
00:11:10,140 --> 00:11:12,000
different roles log into the same

273
00:11:12,000 --> 00:11:14,100
account it may be for example Mike who

274
00:11:14,100 --> 00:11:16,380
is the owner and Paul who is the reader

275
00:11:16,380 --> 00:11:19,320
so you can imagine that Mike can only

276
00:11:19,320 --> 00:11:21,660
read stuff and Paul can read and write

277
00:11:21,660 --> 00:11:24,240
because he has the role of reader so

278
00:11:24,240 --> 00:11:27,060
there are a couple of points pinpoints

279
00:11:27,060 --> 00:11:29,100
to to take into consideration while

280
00:11:29,100 --> 00:11:31,680
designing such a system so first of all

281
00:11:31,680 --> 00:11:33,500
we need to consider

282
00:11:33,500 --> 00:11:36,899
domain modeling for multi-acon system

283
00:11:36,899 --> 00:11:39,500
how we actually put stuff into the

284
00:11:39,500 --> 00:11:42,360
system from the you know domain

285
00:11:42,360 --> 00:11:44,160
perspective how we put things together

286
00:11:44,160 --> 00:11:47,240
that our system is actually capable of

287
00:11:47,240 --> 00:11:49,860
implementing the features that actually

288
00:11:49,860 --> 00:11:54,380
we want them to have it to have from the

289
00:11:54,380 --> 00:11:56,519
requirements perspective then how we

290
00:11:56,519 --> 00:11:58,500
manage those permissions right how we

291
00:11:58,500 --> 00:12:02,339
design a rest a secure rest API how we

292
00:12:02,339 --> 00:12:03,480
make sure

293
00:12:03,480 --> 00:12:06,360
uh how I make sure that um you know

294
00:12:06,360 --> 00:12:08,940
there is a rest endpoint or graphql

295
00:12:08,940 --> 00:12:12,480
endpoint but actually is secured from

296
00:12:12,480 --> 00:12:15,240
the role perspective that you know it's

297
00:12:15,240 --> 00:12:17,160
not only the UI but also the back end

298
00:12:17,160 --> 00:12:20,640
because we may use any other client in

299
00:12:20,640 --> 00:12:24,240
the place of spi that is going to

300
00:12:24,240 --> 00:12:25,019
um

301
00:12:25,019 --> 00:12:27,839
make a request based on the specific

302
00:12:27,839 --> 00:12:30,120
requirements and you know

303
00:12:30,120 --> 00:12:33,959
you may totally bypass the things that

304
00:12:33,959 --> 00:12:36,240
are implemented in the front end then

305
00:12:36,240 --> 00:12:38,880
you may have this user of object if

306
00:12:38,880 --> 00:12:41,100
you're using session ID how to put stuff

307
00:12:41,100 --> 00:12:43,620
and then you know pass it back and forth

308
00:12:43,620 --> 00:12:45,480
between the client and customer things

309
00:12:45,480 --> 00:12:47,820
like middlewares interceptors routing

310
00:12:47,820 --> 00:12:49,579
guards how to put those things together

311
00:12:49,579 --> 00:12:53,100
uh you know components as well from the

312
00:12:53,100 --> 00:12:55,019
front-end side you would like to you

313
00:12:55,019 --> 00:12:57,480
know see particular parts of the system

314
00:12:57,480 --> 00:13:00,540
based on the based on the permission or

315
00:13:00,540 --> 00:13:03,360
the role so if you build like a

316
00:13:03,360 --> 00:13:05,760
component based Spa then different

317
00:13:05,760 --> 00:13:07,760
components have different permissions

318
00:13:07,760 --> 00:13:11,820
based on what the user is actually

319
00:13:11,820 --> 00:13:14,760
eligible to do and much more so so this

320
00:13:14,760 --> 00:13:17,940
is like number number four

321
00:13:17,940 --> 00:13:21,360
number five we we have some cool stuff

322
00:13:21,360 --> 00:13:25,860
in our in our uh toolkit but it's not

323
00:13:25,860 --> 00:13:28,139
enough then we would like to add

324
00:13:28,139 --> 00:13:30,660
additional layers and I will just name a

325
00:13:30,660 --> 00:13:32,040
few of them like two-factor

326
00:13:32,040 --> 00:13:34,019
authentication or multi-factor like

327
00:13:34,019 --> 00:13:37,440
one-time passwords uh in the form of SMS

328
00:13:37,440 --> 00:13:40,440
for example uh Iris scan fingerprint

329
00:13:40,440 --> 00:13:43,940
basically it's it's another factor that

330
00:13:43,940 --> 00:13:47,339
makes the system expect not only the

331
00:13:47,339 --> 00:13:49,079
username and password but a second

332
00:13:49,079 --> 00:13:50,760
Factor because you know password might

333
00:13:50,760 --> 00:13:53,700
be compromised and you will be surprised

334
00:13:53,700 --> 00:13:57,720
how easy it is to implement OTP with for

335
00:13:57,720 --> 00:14:01,139
example Google Authenticator that allows

336
00:14:01,139 --> 00:14:04,139
you to actually generate a one-time

337
00:14:04,139 --> 00:14:07,440
password which is time based so for

338
00:14:07,440 --> 00:14:09,420
example it may be valid only for 30

339
00:14:09,420 --> 00:14:11,940
seconds and then as soon as you receive

340
00:14:11,940 --> 00:14:15,420
it and actually this is a cool part uh

341
00:14:15,420 --> 00:14:16,860
there are systems that allow you to

342
00:14:16,860 --> 00:14:19,440
generate OTP offline you don't actually

343
00:14:19,440 --> 00:14:23,459
need to connect your device like phone

344
00:14:23,459 --> 00:14:26,399
to actually get a valid one-time

345
00:14:26,399 --> 00:14:28,620
password that is going to be accepted on

346
00:14:28,620 --> 00:14:31,440
the bucket so it's pretty insane because

347
00:14:31,440 --> 00:14:33,120
um you might think that okay when

348
00:14:33,120 --> 00:14:35,160
sending an SMS I need to have a wire

349
00:14:35,160 --> 00:14:37,740
connection of my phone but with some

350
00:14:37,740 --> 00:14:39,959
implementations which are decent and

351
00:14:39,959 --> 00:14:42,899
used to widely of otps you don't even

352
00:14:42,899 --> 00:14:45,420
need to connect somewhere it's going to

353
00:14:45,420 --> 00:14:47,699
be used in some cryptographic magic to

354
00:14:47,699 --> 00:14:50,220
generate valid otps on your smartphone

355
00:14:50,220 --> 00:14:53,160
so two-factor authentication then you

356
00:14:53,160 --> 00:14:55,320
may have something like login floating I

357
00:14:55,320 --> 00:14:57,600
bet you have seen that uh if you log

358
00:14:57,600 --> 00:14:59,399
into some decent website and try to type

359
00:14:59,399 --> 00:15:01,500
your password several times in a wrong

360
00:15:01,500 --> 00:15:03,420
fashion it's going to say you need to

361
00:15:03,420 --> 00:15:07,519
wait because it's too many wrong

362
00:15:07,519 --> 00:15:10,740
trials that you actually executed and we

363
00:15:10,740 --> 00:15:13,079
don't want to risk that you you are

364
00:15:13,079 --> 00:15:15,000
actually an attacker trying to brute

365
00:15:15,000 --> 00:15:17,279
force or guess the password so login

366
00:15:17,279 --> 00:15:20,519
fraudling like you can just block uh you

367
00:15:20,519 --> 00:15:23,820
know the the trials to prevent brute

368
00:15:23,820 --> 00:15:25,860
forcing uh dictionary attacks or

369
00:15:25,860 --> 00:15:29,940
credential Staffing attacks like that so

370
00:15:29,940 --> 00:15:32,339
you may want to think about it that

371
00:15:32,339 --> 00:15:34,800
there are people who may try to use your

372
00:15:34,800 --> 00:15:36,120
system in a

373
00:15:36,120 --> 00:15:39,779
in a way that might be uh threatening to

374
00:15:39,779 --> 00:15:42,899
the system security and then additional

375
00:15:42,899 --> 00:15:45,120
sanitization and valid validation must

376
00:15:45,120 --> 00:15:47,639
be a must both on the front end and

377
00:15:47,639 --> 00:15:49,980
especially on the back end we don't want

378
00:15:49,980 --> 00:15:53,040
to allow the system to accept every you

379
00:15:53,040 --> 00:15:54,899
know possible

380
00:15:54,899 --> 00:15:58,459
input because it might be crafted

381
00:15:58,459 --> 00:16:01,260
exploit or stuff that the system may

382
00:16:01,260 --> 00:16:02,300
actually

383
00:16:02,300 --> 00:16:06,300
undesirably execute or make some harm so

384
00:16:06,300 --> 00:16:09,060
proper sanitization and validation of

385
00:16:09,060 --> 00:16:12,540
the input is a must especially when we

386
00:16:12,540 --> 00:16:15,060
think about the system that is front-end

387
00:16:15,060 --> 00:16:17,880
and back-end decoupled the back end is a

388
00:16:17,880 --> 00:16:20,579
must place to actually make some

389
00:16:20,579 --> 00:16:22,620
additional sanitization and validation

390
00:16:22,620 --> 00:16:24,180
for sure

391
00:16:24,180 --> 00:16:27,120
then we have logging I mean this is a

392
00:16:27,120 --> 00:16:30,420
also important aspect but there are

393
00:16:30,420 --> 00:16:32,760
different aspects of that you may start

394
00:16:32,760 --> 00:16:34,440
with a simple one like access level

395
00:16:34,440 --> 00:16:36,240
logging and which is pretty simple you

396
00:16:36,240 --> 00:16:37,680
just need to use some Interceptor or

397
00:16:37,680 --> 00:16:40,320
middleware and you lock every HTTP

398
00:16:40,320 --> 00:16:43,680
request with timestamp URL and API so

399
00:16:43,680 --> 00:16:46,740
this is like the front but also if you

400
00:16:46,740 --> 00:16:48,660
go deeper in the application it's it's

401
00:16:48,660 --> 00:16:50,160
it's it's good to make the system

402
00:16:50,160 --> 00:16:52,920
accountable of the events from the

403
00:16:52,920 --> 00:16:55,019
application perspective so you need to

404
00:16:55,019 --> 00:16:56,279
think about what are the meaningful

405
00:16:56,279 --> 00:16:58,759
application Level events for the system

406
00:16:58,759 --> 00:17:02,880
accountability like who when and what in

407
00:17:02,880 --> 00:17:04,919
the system like okay who logged in who

408
00:17:04,919 --> 00:17:06,959
registered who made the transaction what

409
00:17:06,959 --> 00:17:09,119
are the details actually around this

410
00:17:09,119 --> 00:17:11,579
event in the system that if we would

411
00:17:11,579 --> 00:17:13,260
like to look inside and make some

412
00:17:13,260 --> 00:17:16,199
retrospective we can actually know what

413
00:17:16,199 --> 00:17:18,299
happened and we can make some decision

414
00:17:18,299 --> 00:17:21,599
based on the analysis so this is a

415
00:17:21,599 --> 00:17:23,579
different level of logging what happens

416
00:17:23,579 --> 00:17:25,199
in the in the system from the

417
00:17:25,199 --> 00:17:28,079
application perspective and then finally

418
00:17:28,079 --> 00:17:30,179
uh

419
00:17:30,179 --> 00:17:32,700
test your application security there are

420
00:17:32,700 --> 00:17:34,559
different tools you may test it from

421
00:17:34,559 --> 00:17:36,600
different perspectives but since we are

422
00:17:36,600 --> 00:17:38,580
I'm I'm saying from the developer

423
00:17:38,580 --> 00:17:41,580
perspective you can use slick one as one

424
00:17:41,580 --> 00:17:43,860
of the tools that actually allows you to

425
00:17:43,860 --> 00:17:45,900
look inside the application security

426
00:17:45,900 --> 00:17:49,919
from the shift left perspective so we

427
00:17:49,919 --> 00:17:51,480
are putting a lot of security

428
00:17:51,480 --> 00:17:54,240
considerations back in the development

429
00:17:54,240 --> 00:17:57,120
process not on the very right hand side

430
00:17:57,120 --> 00:17:59,580
which is you know security audit or

431
00:17:59,580 --> 00:18:02,460
penetration testing which happened very

432
00:18:02,460 --> 00:18:05,340
lately in the development process so

433
00:18:05,340 --> 00:18:08,160
basically that's it I I needed to be

434
00:18:08,160 --> 00:18:11,100
extremely fast so but the topic is very

435
00:18:11,100 --> 00:18:13,320
deep and I will just have three slides

436
00:18:13,320 --> 00:18:16,140
inviting you to join one of our

437
00:18:16,140 --> 00:18:17,820
communities like web Security Academy

438
00:18:17,820 --> 00:18:20,160
where you can actually learn everything

439
00:18:20,160 --> 00:18:24,419
from the ins descriptive described steps

440
00:18:24,419 --> 00:18:27,500
in a online bootcamp with the community

441
00:18:27,500 --> 00:18:31,740
meetings and awesome materials 12th week

442
00:18:31,740 --> 00:18:35,039
q a sessions 12 weeks of support close

443
00:18:35,039 --> 00:18:39,020
Community captions lifetime access and

444
00:18:39,020 --> 00:18:41,760
certificate of graduation and the cool

445
00:18:41,760 --> 00:18:45,179
part is regarding new things that we are

446
00:18:45,179 --> 00:18:47,820
doing uh I'm about to release a brand

447
00:18:47,820 --> 00:18:49,740
new module featuring sneak from the

448
00:18:49,740 --> 00:18:52,740
developer's perspective that explains to

449
00:18:52,740 --> 00:18:55,140
you the defsecs or devsec Ops for

450
00:18:55,140 --> 00:18:57,780
Developers and awesome things like

451
00:18:57,780 --> 00:18:59,760
static code analysis static application

452
00:18:59,760 --> 00:19:01,919
security analysis that we are going to

453
00:19:01,919 --> 00:19:04,500
be hacking in the application that we

454
00:19:04,500 --> 00:19:07,020
use for Learning and this will end up

455
00:19:07,020 --> 00:19:09,059
soon in web Security Academy

456
00:19:09,059 --> 00:19:11,940
and nice this is my last slide because

457
00:19:11,940 --> 00:19:14,760
uh I'm really happy to be hacking in the

458
00:19:14,760 --> 00:19:17,220
space and if you go to httpscanner.com

459
00:19:17,220 --> 00:19:21,299
it's gonna be a free tool

460
00:19:21,299 --> 00:19:25,200
uh it's gonna be a free Tool uh to help

461
00:19:25,200 --> 00:19:29,220
you scan your HTTP security so you know

462
00:19:29,220 --> 00:19:32,220
there are things like HTTP security

463
00:19:32,220 --> 00:19:35,400
headers like content security policy all

464
00:19:35,400 --> 00:19:37,080
the things that I also mentioned in the

465
00:19:37,080 --> 00:19:39,360
beginning that contribute to web

466
00:19:39,360 --> 00:19:42,720
security model we are working with my

467
00:19:42,720 --> 00:19:45,080
team you know ux designers developers

468
00:19:45,080 --> 00:19:48,299
conceptuals and researchers and me on

469
00:19:48,299 --> 00:19:50,520
the new brand new tool that is going to

470
00:19:50,520 --> 00:19:55,140
be the 2022 go for web security to for

471
00:19:55,140 --> 00:19:58,559
free to help you inspect what is

472
00:19:58,559 --> 00:20:00,679
happening in your website

473
00:20:00,679 --> 00:20:03,660
httpscanner.com Sona for now there is a

474
00:20:03,660 --> 00:20:05,940
if you open this you will see the poll

475
00:20:05,940 --> 00:20:08,700
the survey that I need to gather as much

476
00:20:08,700 --> 00:20:11,460
information as possible to create some

477
00:20:11,460 --> 00:20:15,120
uh useful tool you can jump uh on our

478
00:20:15,120 --> 00:20:18,000
community server or whatever you like

479
00:20:18,000 --> 00:20:20,880
but this Insight will help us create

480
00:20:20,880 --> 00:20:22,860
something free something cool something

481
00:20:22,860 --> 00:20:25,640
useful and thank you very much visit

482
00:20:25,640 --> 00:20:27,660
httpscanner.com or web Security Academy

483
00:20:27,660 --> 00:20:30,660
or jump to some socials and that's all

484
00:20:30,660 --> 00:20:33,740
from my side thank you

485
00:20:33,840 --> 00:20:36,000
amazing thank you so much for that that

486
00:20:36,000 --> 00:20:37,919
was really really good

487
00:20:37,919 --> 00:20:39,059
um I think I'm definitely looking

488
00:20:39,059 --> 00:20:40,679
forward to you know what you're going to

489
00:20:40,679 --> 00:20:43,140
be doing with um you know at sneak the

490
00:20:43,140 --> 00:20:44,760
Web Academy thing that you're going to

491
00:20:44,760 --> 00:20:45,840
be building I think that's going to be

492
00:20:45,840 --> 00:20:46,919
really exciting so I'm definitely

493
00:20:46,919 --> 00:20:49,620
looking forward to that as well and I

494
00:20:49,620 --> 00:20:51,059
liked how you said that you know not

495
00:20:51,059 --> 00:20:52,980
everything one size does not fit all I

496
00:20:52,980 --> 00:20:54,720
think you're so right there um and you

497
00:20:54,720 --> 00:20:56,100
know just calling that out was really

498
00:20:56,100 --> 00:20:58,200
really important so definitely love the

499
00:20:58,200 --> 00:20:59,820
talk also you're getting a lot of love

500
00:20:59,820 --> 00:21:01,980
from all the live streams that we've got

501
00:21:01,980 --> 00:21:04,140
I think um we've got lyren who has

502
00:21:04,140 --> 00:21:05,880
mentioned that he thought it was a great

503
00:21:05,880 --> 00:21:07,559
rundown of the important web security

504
00:21:07,559 --> 00:21:11,100
concept so thank you for the talk also I

505
00:21:11,100 --> 00:21:12,900
will give a huge shout out to the work

506
00:21:12,900 --> 00:21:14,160
you've done with web Security Academy

507
00:21:14,160 --> 00:21:16,559
because it is so good and I will vouch

508
00:21:16,559 --> 00:21:18,660
for it like if any of you are trying to

509
00:21:18,660 --> 00:21:20,340
get better at web security like you will

510
00:21:20,340 --> 00:21:22,200
not find a better teacher than the guy

511
00:21:22,200 --> 00:21:24,419
in front of you right now so go sign up

512
00:21:24,419 --> 00:21:26,280
for the next session when is the next

513
00:21:26,280 --> 00:21:28,980
session gonna start by the way I mean uh

514
00:21:28,980 --> 00:21:32,280
so far uh you know we are kind of like

515
00:21:32,280 --> 00:21:37,020
uh being ongoing so um I mean no it's

516
00:21:37,020 --> 00:21:39,120
it's different uh when you have a

517
00:21:39,120 --> 00:21:41,100
session and when you have the ongoing so

518
00:21:41,100 --> 00:21:43,980
far when you jump you are like on I call

519
00:21:43,980 --> 00:21:46,620
it a self-paced mode but we have all the

520
00:21:46,620 --> 00:21:49,320
things like sessions meetings and and

521
00:21:49,320 --> 00:21:51,360
stuff like that so I mean it's it's not

522
00:21:51,360 --> 00:21:54,059
like so far it's not shadowed you can

523
00:21:54,059 --> 00:21:56,460
watch on your own but we have like

524
00:21:56,460 --> 00:21:57,960
monthly calls

525
00:21:57,960 --> 00:22:01,440
um meetings and Q A's uh like being held

526
00:22:01,440 --> 00:22:03,659
uh periodically

527
00:22:03,659 --> 00:22:06,000
um more like on demand rather than

528
00:22:06,000 --> 00:22:09,000
forcing you to you know make a group of

529
00:22:09,000 --> 00:22:10,980
people working together so it's

530
00:22:10,980 --> 00:22:14,100
basically ongoing uh without much of a

531
00:22:14,100 --> 00:22:15,960
constraint on our side so far but

532
00:22:15,960 --> 00:22:18,000
sometimes from time to time we we would

533
00:22:18,000 --> 00:22:20,880
like to make like a group going uh but

534
00:22:20,880 --> 00:22:23,640
it's not planned any by means this year

535
00:22:23,640 --> 00:22:26,640
so feel free to jump on like you know

536
00:22:26,640 --> 00:22:28,200
self-paced mode

537
00:22:28,200 --> 00:22:31,080
very cool very cool well you know if

538
00:22:31,080 --> 00:22:33,480
you're watching this go go give it a go

539
00:22:33,480 --> 00:22:37,640
it's it's amazing you will not regret it

540
00:22:37,740 --> 00:22:39,360
thank you so much for coming and you

541
00:22:39,360 --> 00:22:40,799
know sharing your knowledge with us and

542
00:22:40,799 --> 00:22:42,179
you know as Randall said just sounds

543
00:22:42,179 --> 00:22:43,320
like you know you've got a lot more to

544
00:22:43,320 --> 00:22:45,360
give to the community so definitely do

545
00:22:45,360 --> 00:22:46,860
follow about those and all that awesome

546
00:22:46,860 --> 00:22:49,679
work that he's doing thank you so much

547
00:22:49,679 --> 00:22:52,159
thank you

