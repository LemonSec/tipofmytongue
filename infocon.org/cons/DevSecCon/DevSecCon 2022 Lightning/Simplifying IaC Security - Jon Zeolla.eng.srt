1
00:00:00,000 --> 00:00:03,300
all right so our next talk uh in line

2
00:00:03,300 --> 00:00:06,540
with the devsecops theme of the event is

3
00:00:06,540 --> 00:00:08,580
we have uh John coming on to talk with

4
00:00:08,580 --> 00:00:10,800
us about simplifying infrastructure as

5
00:00:10,800 --> 00:00:13,019
code security now before you bring John

6
00:00:13,019 --> 00:00:14,759
in I'm going to give you a little bit of

7
00:00:14,759 --> 00:00:16,680
his background so John is the co-founder

8
00:00:16,680 --> 00:00:18,420
and CTO of scizo hopefully I'm

9
00:00:18,420 --> 00:00:19,980
pronouncing that right where he's

10
00:00:19,980 --> 00:00:21,960
responsible for the research and

11
00:00:21,960 --> 00:00:23,580
refinement of cloud native Security

12
00:00:23,580 --> 00:00:26,039
Solutions including contributing to open

13
00:00:26,039 --> 00:00:28,019
source projects and Industry standards

14
00:00:28,019 --> 00:00:31,019
focused on zero trust devsecops and

15
00:00:31,019 --> 00:00:32,040
Cloud security

16
00:00:32,040 --> 00:00:36,059
he's also a Sans author for the SEC 540

17
00:00:36,059 --> 00:00:38,100
Cloud security and devops automation

18
00:00:38,100 --> 00:00:39,360
courses

19
00:00:39,360 --> 00:00:42,719
um an Ians faculty member recipient of

20
00:00:42,719 --> 00:00:44,820
the 2021 startup innovator of the Year

21
00:00:44,820 --> 00:00:48,000
award and active member of the cncf tag

22
00:00:48,000 --> 00:00:50,399
Security Group he's also the founder of

23
00:00:50,399 --> 00:00:53,219
the Steel City infosec Meetup the

24
00:00:53,219 --> 00:00:55,260
pitstack collaboration space and is a

25
00:00:55,260 --> 00:00:57,840
core organizer of b-sides Pittsburgh

26
00:00:57,840 --> 00:00:59,640
in his free time he enjoys mountain

27
00:00:59,640 --> 00:01:01,260
biking weightlifting chess and spending

28
00:01:01,260 --> 00:01:02,820
time with his family sounds like a

29
00:01:02,820 --> 00:01:04,140
really interesting dude so why don't we

30
00:01:04,140 --> 00:01:07,880
bring him in Brian sounds good

31
00:01:09,020 --> 00:01:11,280
thanks for having me I didn't have to

32
00:01:11,280 --> 00:01:12,659
read all of that

33
00:01:12,659 --> 00:01:15,119
I'm not gonna sell you short okay people

34
00:01:15,119 --> 00:01:17,520
need to know every detail about your

35
00:01:17,520 --> 00:01:19,799
life in order to get the full experience

36
00:01:19,799 --> 00:01:20,700
you know that's what we're all about

37
00:01:20,700 --> 00:01:23,400
here okay okay there we go okay cool

38
00:01:23,400 --> 00:01:25,140
John is the name of the company a play

39
00:01:25,140 --> 00:01:27,900
on on CSO like uh yeah yeah it's

40
00:01:27,900 --> 00:01:29,820
actually pronounced see so

41
00:01:29,820 --> 00:01:31,259
um technically know how you pronounce it

42
00:01:31,259 --> 00:01:32,880
but it's my company I get the pronounce

43
00:01:32,880 --> 00:01:34,040
it how I like

44
00:01:34,040 --> 00:01:36,720
oh yeah it's a play on CSO it's also a

45
00:01:36,720 --> 00:01:38,340
Japanese term that means like neat clean

46
00:01:38,340 --> 00:01:40,200
and organized so the idea is like

47
00:01:40,200 --> 00:01:42,119
complexity causes security issues keep

48
00:01:42,119 --> 00:01:46,020
it simple yeah love it I I apologize for

49
00:01:46,020 --> 00:01:47,400
completely butchering that and I only

50
00:01:47,400 --> 00:01:49,200
now get it as soon as I heard Brian say

51
00:01:49,200 --> 00:01:50,640
it I was like this makes perfect sense

52
00:01:50,640 --> 00:01:53,040
yeah yeah no worries no worries

53
00:01:53,040 --> 00:01:55,020
well um yeah so John what are you gonna

54
00:01:55,020 --> 00:01:56,280
be talking about today I mean we know

55
00:01:56,280 --> 00:01:58,140
simplifying IEC security but what in

56
00:01:58,140 --> 00:01:59,220
particular are you going to be uh

57
00:01:59,220 --> 00:02:02,520
teaching people yeah so um I've done a

58
00:02:02,520 --> 00:02:03,780
lot of different rollouts of

59
00:02:03,780 --> 00:02:05,460
infrastructures code using different

60
00:02:05,460 --> 00:02:08,280
tools and I've made a lot of mistakes so

61
00:02:08,280 --> 00:02:10,258
this talk is mostly about outlining

62
00:02:10,258 --> 00:02:12,120
those mistakes during the rollout and

63
00:02:12,120 --> 00:02:13,920
then particularly the adding security

64
00:02:13,920 --> 00:02:16,140
into those more distributed larger

65
00:02:16,140 --> 00:02:18,120
deployments we're going to focus on

66
00:02:18,120 --> 00:02:20,280
terraform uh for a bit because that

67
00:02:20,280 --> 00:02:22,440
seems to be the most popular one but you

68
00:02:22,440 --> 00:02:23,819
know I've seen terraform deployments

69
00:02:23,819 --> 00:02:25,200
that have hundreds of different repos

70
00:02:25,200 --> 00:02:27,300
just internally for their terraform code

71
00:02:27,300 --> 00:02:29,280
and like how do you scale security out

72
00:02:29,280 --> 00:02:31,440
to that that large uh without messing it

73
00:02:31,440 --> 00:02:33,120
all up and breaking developers builds so

74
00:02:33,120 --> 00:02:34,440
that's the idea

75
00:02:34,440 --> 00:02:37,140
amazing well hey we're gonna pass the

76
00:02:37,140 --> 00:02:38,640
the stage over to you and looking

77
00:02:38,640 --> 00:02:41,040
forward to uh learning a bit more about

78
00:02:41,040 --> 00:02:43,379
IC security so take it away yep sounds

79
00:02:43,379 --> 00:02:45,300
good

80
00:02:45,300 --> 00:02:46,700
cool

81
00:02:46,700 --> 00:02:50,519
very cool there we go hi I need my

82
00:02:50,519 --> 00:02:51,840
little typing thing to work I love this

83
00:02:51,840 --> 00:02:54,239
uh hi everybody my name is John ziola

84
00:02:54,239 --> 00:02:56,400
welcome to my talk on infrastructure is

85
00:02:56,400 --> 00:02:57,500
code security

86
00:02:57,500 --> 00:03:00,360
so uh this is this is really great I

87
00:03:00,360 --> 00:03:02,099
think the timing is perfect coming right

88
00:03:02,099 --> 00:03:04,560
after Dulles uh so I don't have to cover

89
00:03:04,560 --> 00:03:07,379
a lot of this uh background stuff but

90
00:03:07,379 --> 00:03:09,959
just a quick primer to myself I live in

91
00:03:09,959 --> 00:03:12,180
Pittsburgh Pennsylvania and like was

92
00:03:12,180 --> 00:03:13,860
mentioned I work at this company called

93
00:03:13,860 --> 00:03:17,640
CSO the co-founder and CTO and we get

94
00:03:17,640 --> 00:03:19,920
mid-sized tech companies you know that

95
00:03:19,920 --> 00:03:22,680
use uh Cloud native Technologies sock 2

96
00:03:22,680 --> 00:03:25,140
ISO 27001 bedramp things like that and

97
00:03:25,140 --> 00:03:26,760
in ways that don't frustrate your

98
00:03:26,760 --> 00:03:29,459
developers hopefully uh I teach some

99
00:03:29,459 --> 00:03:32,220
Sans classes I do a conference in fact

100
00:03:32,220 --> 00:03:34,379
that's the mug that I'm drinking out of

101
00:03:34,379 --> 00:03:35,780
today

102
00:03:35,780 --> 00:03:39,120
uh security Meetup uh community and I

103
00:03:39,120 --> 00:03:41,340
love doing open source thing so cncf is

104
00:03:41,340 --> 00:03:43,200
where I post most of my time spend most

105
00:03:43,200 --> 00:03:44,760
of my time but I also do some work in

106
00:03:44,760 --> 00:03:46,080
the open ssf

107
00:03:46,080 --> 00:03:48,060
all right so we're going to kind of

108
00:03:48,060 --> 00:03:49,319
Breeze through the background here

109
00:03:49,319 --> 00:03:50,940
because like I said that's already been

110
00:03:50,940 --> 00:03:53,819
uh been covered in the prior talk uh so

111
00:03:53,819 --> 00:03:55,620
what is infrastructure's code it's

112
00:03:55,620 --> 00:03:57,780
managing and provisioning computer data

113
00:03:57,780 --> 00:03:59,400
with these machine readable definition

114
00:03:59,400 --> 00:04:02,220
files and really that's the key these

115
00:04:02,220 --> 00:04:04,379
these machine readable definition files

116
00:04:04,379 --> 00:04:06,000
you could consider them code you can

117
00:04:06,000 --> 00:04:07,500
call them configuration too I won't be

118
00:04:07,500 --> 00:04:08,700
offended

119
00:04:08,700 --> 00:04:10,439
um but you know it's it's one of those

120
00:04:10,439 --> 00:04:13,680
uh two things that's what we're talking

121
00:04:13,680 --> 00:04:14,700
about here so what does that actually

122
00:04:14,700 --> 00:04:16,320
look like so for the rest of this talk

123
00:04:16,320 --> 00:04:18,959
we're going to focus on terraform and so

124
00:04:18,959 --> 00:04:21,060
here is a little bit of terraform as an

125
00:04:21,060 --> 00:04:23,100
example you can see we're making this

126
00:04:23,100 --> 00:04:25,919
generic AWS instance called server we're

127
00:04:25,919 --> 00:04:27,600
making one of them you know pretty

128
00:04:27,600 --> 00:04:29,520
pretty straightforward

129
00:04:29,520 --> 00:04:31,320
uh but it's really what's really cool

130
00:04:31,320 --> 00:04:32,940
about infrastructure is code is you can

131
00:04:32,940 --> 00:04:34,919
use it to build one thing and then you

132
00:04:34,919 --> 00:04:37,380
can use very small changes to that to

133
00:04:37,380 --> 00:04:39,900
make hundreds of a thing right so now

134
00:04:39,900 --> 00:04:42,060
we've got 100 of these servers instead

135
00:04:42,060 --> 00:04:43,860
of just one just by changing that number

136
00:04:43,860 --> 00:04:45,960
from a one to a 100

137
00:04:45,960 --> 00:04:48,600
very awesome uh but now we need to think

138
00:04:48,600 --> 00:04:50,340
about security right and so if you think

139
00:04:50,340 --> 00:04:51,900
about security here what what is that

140
00:04:51,900 --> 00:04:54,720
Ami you don't really know what is in

141
00:04:54,720 --> 00:04:56,759
that Ami is it vulnerable has it been

142
00:04:56,759 --> 00:04:59,400
patched Etc

143
00:04:59,400 --> 00:05:02,220
um so we need to know as a centralized

144
00:05:02,220 --> 00:05:04,440
security team maybe what is in this

145
00:05:04,440 --> 00:05:06,180
infrastructure's code that all of these

146
00:05:06,180 --> 00:05:08,940
distributed teams are deploying

147
00:05:08,940 --> 00:05:11,580
so that's a quick introduction but uh

148
00:05:11,580 --> 00:05:12,900
here's your infrastructure's code it's

149
00:05:12,900 --> 00:05:15,000
rotten to the core I love this this

150
00:05:15,000 --> 00:05:18,180
there was a report done by sneak in 2021

151
00:05:18,180 --> 00:05:20,400
that talked about infrastructure as code

152
00:05:20,400 --> 00:05:23,520
and they described how 63 of companies

153
00:05:23,520 --> 00:05:25,979
reported that they're just starting out

154
00:05:25,979 --> 00:05:28,560
seven percent of companies uh are

155
00:05:28,560 --> 00:05:30,720
implementing the current best best

156
00:05:30,720 --> 00:05:33,300
practices meaning 93 of companies are

157
00:05:33,300 --> 00:05:35,400
reporting themselves as not doing that

158
00:05:35,400 --> 00:05:39,120
and 41 of these uh respondents said that

159
00:05:39,120 --> 00:05:41,580
the barrier was unclear benchmarks for

160
00:05:41,580 --> 00:05:42,539
security and this is something that

161
00:05:42,539 --> 00:05:44,340
really frustrates me like as someone who

162
00:05:44,340 --> 00:05:46,020
spends a lot of time developing I can

163
00:05:46,020 --> 00:05:48,419
appreciate as a developer like how do I

164
00:05:48,419 --> 00:05:49,740
know this is secure or not that's really

165
00:05:49,740 --> 00:05:52,680
maybe not my domain if I was a developer

166
00:05:52,680 --> 00:05:54,720
uh and it's our job I think as the

167
00:05:54,720 --> 00:05:58,020
security teams to uh clearly inform

168
00:05:58,020 --> 00:06:00,060
development teams on what's okay and

169
00:06:00,060 --> 00:06:02,039
what's not okay and if we can't automate

170
00:06:02,039 --> 00:06:03,360
that and distribute it into their

171
00:06:03,360 --> 00:06:06,240
pipelines and um make it easy for them

172
00:06:06,240 --> 00:06:08,759
to understand good or not good that's

173
00:06:08,759 --> 00:06:10,560
kind of our fault as a security team and

174
00:06:10,560 --> 00:06:12,000
not necessarily the Developers for

175
00:06:12,000 --> 00:06:13,440
writing insecure code so that's

176
00:06:13,440 --> 00:06:15,120
something I like to kind of bring on to

177
00:06:15,120 --> 00:06:17,280
ourselves but it's all right we're all

178
00:06:17,280 --> 00:06:21,000
in this together uh we are going to try

179
00:06:21,000 --> 00:06:25,440
to work on a solution here so

180
00:06:25,440 --> 00:06:27,419
um just another quick primer specific to

181
00:06:27,419 --> 00:06:30,300
terraform there's a couple of phases of

182
00:06:30,300 --> 00:06:33,000
maturity that environments often go

183
00:06:33,000 --> 00:06:34,860
through

184
00:06:34,860 --> 00:06:36,660
um when they're implementing terraform

185
00:06:36,660 --> 00:06:40,380
or as their infrastructures code tool of

186
00:06:40,380 --> 00:06:41,940
choice you'll start with this like

187
00:06:41,940 --> 00:06:43,620
all-in-one approach where you might have

188
00:06:43,620 --> 00:06:45,720
a repository a couple repositories and

189
00:06:45,720 --> 00:06:48,860
you get these really long uh

190
00:06:48,860 --> 00:06:51,060
terraform.tf files and it would look a

191
00:06:51,060 --> 00:06:52,380
little something like this this isn't

192
00:06:52,380 --> 00:06:54,660
long in fact this is fairly short but

193
00:06:54,660 --> 00:06:56,039
you can imagine it would just keep going

194
00:06:56,039 --> 00:06:58,440
and keep going and keep going here we've

195
00:06:58,440 --> 00:07:01,560
got a light still light cell instance

196
00:07:01,560 --> 00:07:04,740
and uh it is using a random name from

197
00:07:04,740 --> 00:07:07,080
this block down here everything is in

198
00:07:07,080 --> 00:07:09,419
this block to make that server uh all

199
00:07:09,419 --> 00:07:10,800
you need to do is pass in a couple of

200
00:07:10,800 --> 00:07:12,660
variables right uh and make sure that

201
00:07:12,660 --> 00:07:15,060
you have this the script

202
00:07:15,060 --> 00:07:16,319
um pretty straightforward so that's how

203
00:07:16,319 --> 00:07:17,819
infrastructure code would typically

204
00:07:17,819 --> 00:07:21,000
start but then as you mature you'll

205
00:07:21,000 --> 00:07:22,319
start to use these things called local

206
00:07:22,319 --> 00:07:24,720
modules a local module might mean that

207
00:07:24,720 --> 00:07:27,120
you have a file which is up top which is

208
00:07:27,120 --> 00:07:29,340
really just pointing to code somewhere

209
00:07:29,340 --> 00:07:31,139
else and then you've actually got that

210
00:07:31,139 --> 00:07:33,360
code that's somewhere else right so

211
00:07:33,360 --> 00:07:34,919
you're going to point to it pass your

212
00:07:34,919 --> 00:07:36,180
variables and now you've got a little

213
00:07:36,180 --> 00:07:38,280
bit of a decoupling but it's only file

214
00:07:38,280 --> 00:07:40,380
based so you can see here we're pointing

215
00:07:40,380 --> 00:07:42,539
to the modules directory in the same

216
00:07:42,539 --> 00:07:45,479
folder structure git repository so

217
00:07:45,479 --> 00:07:47,039
that's like the first step of decoupling

218
00:07:47,039 --> 00:07:50,819
but really the pansia uh is these remote

219
00:07:50,819 --> 00:07:53,220
modules where you have a similar sort of

220
00:07:53,220 --> 00:07:55,199
approach the only change here is that

221
00:07:55,199 --> 00:07:56,880
that source is actually another git

222
00:07:56,880 --> 00:07:59,220
repository and what's really special is

223
00:07:59,220 --> 00:08:00,960
that you can have this revision at the

224
00:08:00,960 --> 00:08:04,259
end so you can use a commit hash or a

225
00:08:04,259 --> 00:08:05,759
tag or something along those lines or

226
00:08:05,759 --> 00:08:07,080
Branch name

227
00:08:07,080 --> 00:08:10,440
uh and you can version pin those so this

228
00:08:10,440 --> 00:08:12,180
allows you to decouple you can make

229
00:08:12,180 --> 00:08:16,199
changes to your module and then the this

230
00:08:16,199 --> 00:08:17,880
code block at the top sometimes called a

231
00:08:17,880 --> 00:08:19,020
live

232
00:08:19,020 --> 00:08:20,759
um is is decoupled so your module can be

233
00:08:20,759 --> 00:08:22,620
changing a bunch and then you can update

234
00:08:22,620 --> 00:08:24,900
your live to the latest module when it

235
00:08:24,900 --> 00:08:26,280
makes sense especially if the module

236
00:08:26,280 --> 00:08:28,680
doesn't meet your needs etc for whatever

237
00:08:28,680 --> 00:08:30,900
reason so you get to this point you've

238
00:08:30,900 --> 00:08:33,260
now got a mature infrastructures code

239
00:08:33,260 --> 00:08:36,240
terraform-based stack that's awesome

240
00:08:36,240 --> 00:08:38,458
uh and now you want to implement

241
00:08:38,458 --> 00:08:41,580
security scanning so all right so how do

242
00:08:41,580 --> 00:08:43,620
we start from here well you might go on

243
00:08:43,620 --> 00:08:46,140
the internet you might find a tool uh

244
00:08:46,140 --> 00:08:47,459
kicks is the one that I'm going to be

245
00:08:47,459 --> 00:08:48,899
using in this example it's from check

246
00:08:48,899 --> 00:08:50,880
marks I think it's a pretty good tool it

247
00:08:50,880 --> 00:08:53,279
does infrastructure as code scanning

248
00:08:53,279 --> 00:08:54,420
um and so you'll have to change

249
00:08:54,420 --> 00:08:56,820
directory into you know the right folder

250
00:08:56,820 --> 00:08:58,740
that has the terraform you want to run a

251
00:08:58,740 --> 00:09:00,779
terraforma knit first because you need

252
00:09:00,779 --> 00:09:02,339
to pull in all your providers and your

253
00:09:02,339 --> 00:09:05,160
dependencies then you run your kick scan

254
00:09:05,160 --> 00:09:07,260
okay great but we've got more than one

255
00:09:07,260 --> 00:09:08,580
environment so now we're going to change

256
00:09:08,580 --> 00:09:11,220
into the environment uh to directory and

257
00:09:11,220 --> 00:09:13,140
do the same thing we're getting a little

258
00:09:13,140 --> 00:09:14,640
fed up with that so now we're going to

259
00:09:14,640 --> 00:09:17,399
put it all in one big line CD and and

260
00:09:17,399 --> 00:09:20,279
init and and scan okay great and if

261
00:09:20,279 --> 00:09:21,480
you're like me you'll keep getting fed

262
00:09:21,480 --> 00:09:23,160
up running the same commands over and

263
00:09:23,160 --> 00:09:24,600
over you'll start making monstrosities

264
00:09:24,600 --> 00:09:28,260
like this so now you're trying to like

265
00:09:28,260 --> 00:09:30,600
automatically detect where the terraform

266
00:09:30,600 --> 00:09:33,779
is using a find command using push D to

267
00:09:33,779 --> 00:09:35,459
jump into that right place run those

268
00:09:35,459 --> 00:09:37,560
couple commands and then pop D to jump

269
00:09:37,560 --> 00:09:40,019
out of it you're also now outputting

270
00:09:40,019 --> 00:09:42,180
results uh into a certain directory so

271
00:09:42,180 --> 00:09:44,160
you could look at it later all right

272
00:09:44,160 --> 00:09:45,480
we're getting better uh we're getting

273
00:09:45,480 --> 00:09:47,040
better but there's still lots of issues

274
00:09:47,040 --> 00:09:49,320
here um so we've done this we we ran

275
00:09:49,320 --> 00:09:51,600
this big one-liner and we've got 100

276
00:09:51,600 --> 00:09:54,480
repositories of terraform and we get our

277
00:09:54,480 --> 00:09:55,980
results so we start taking the book of

278
00:09:55,980 --> 00:09:57,660
the results and you know if you're

279
00:09:57,660 --> 00:09:59,100
anything like me when you look at these

280
00:09:59,100 --> 00:10:00,360
numbers you give it a little something

281
00:10:00,360 --> 00:10:02,279
like that

282
00:10:02,279 --> 00:10:05,940
um so 12 000 findings 2500 highs and

283
00:10:05,940 --> 00:10:09,000
this is actually a real result from

284
00:10:09,000 --> 00:10:11,519
um a this is uh from one of my clients

285
00:10:11,519 --> 00:10:14,339
where I ran security scans this is one

286
00:10:14,339 --> 00:10:15,779
of their repositories of which they had

287
00:10:15,779 --> 00:10:17,040
hundreds

288
00:10:17,040 --> 00:10:19,920
1200 findings okay that's great so

289
00:10:19,920 --> 00:10:21,480
um what do we do even do now like how do

290
00:10:21,480 --> 00:10:22,920
you even start like okay you can start

291
00:10:22,920 --> 00:10:25,440
at the highest but there's 2585 of them

292
00:10:25,440 --> 00:10:27,420
all right we've got to do something

293
00:10:27,420 --> 00:10:28,980
about this

294
00:10:28,980 --> 00:10:30,000
um and then you start to dig even

295
00:10:30,000 --> 00:10:31,320
further and you might even find out

296
00:10:31,320 --> 00:10:33,720
something like this so in the check

297
00:10:33,720 --> 00:10:36,000
marks kicks documentation they say that

298
00:10:36,000 --> 00:10:37,920
they don't support custom modules at all

299
00:10:37,920 --> 00:10:40,500
so this mature approach like if you've

300
00:10:40,500 --> 00:10:42,120
read the book terraform up and running

301
00:10:42,120 --> 00:10:44,220
they recommend having this sort of a

302
00:10:44,220 --> 00:10:46,860
design well this is this is explicitly

303
00:10:46,860 --> 00:10:49,680
not uh supported by Kicks but it's not

304
00:10:49,680 --> 00:10:50,940
on their

305
00:10:50,940 --> 00:10:53,459
um readme.md you have to go under docs

306
00:10:53,459 --> 00:10:55,860
platforms MD go to terraform modules and

307
00:10:55,860 --> 00:10:57,899
find this one line in there that was

308
00:10:57,899 --> 00:11:00,060
actually added because I asked them to

309
00:11:00,060 --> 00:11:01,560
add it because they didn't support this

310
00:11:01,560 --> 00:11:04,920
right so all right great we've done all

311
00:11:04,920 --> 00:11:06,540
this work we have all these findings and

312
00:11:06,540 --> 00:11:07,860
kicks doesn't even support our

313
00:11:07,860 --> 00:11:09,240
deployment mechanism well that's not

314
00:11:09,240 --> 00:11:11,279
that's not great so we've we've made a

315
00:11:11,279 --> 00:11:12,360
mistake right

316
00:11:12,360 --> 00:11:13,680
um and that happens to all of us I'm

317
00:11:13,680 --> 00:11:15,060
hoping that everybody here can learn

318
00:11:15,060 --> 00:11:16,980
from my mistakes I've made these many

319
00:11:16,980 --> 00:11:19,200
many many times

320
00:11:19,200 --> 00:11:21,959
and so you can look at a repository like

321
00:11:21,959 --> 00:11:24,360
this IAC security tool compare I love

322
00:11:24,360 --> 00:11:26,339
this repository just kind of outlines

323
00:11:26,339 --> 00:11:28,140
the different options that you have to

324
00:11:28,140 --> 00:11:30,060
do security scanning

325
00:11:30,060 --> 00:11:31,620
um against different infrastructures

326
00:11:31,620 --> 00:11:34,740
code environments you can see Kix is on

327
00:11:34,740 --> 00:11:37,620
here but so are lots of others sneak is

328
00:11:37,620 --> 00:11:41,220
a great tool Terror scan my favorite of

329
00:11:41,220 --> 00:11:44,100
these is actually check off for for most

330
00:11:44,100 --> 00:11:46,620
scenarios but Cloud rail has its own

331
00:11:46,620 --> 00:11:49,140
uses all of these have their own Niche

332
00:11:49,140 --> 00:11:52,200
but checkoff is my generic favorite

333
00:11:52,200 --> 00:11:55,320
so I ran into uh that I encountered all

334
00:11:55,320 --> 00:11:57,120
of these different tools I ran into lots

335
00:11:57,120 --> 00:11:59,880
of issues deploying them detecting files

336
00:11:59,880 --> 00:12:02,040
and then you need to manage whether or

337
00:12:02,040 --> 00:12:03,839
not you fail the build or not right we

338
00:12:03,839 --> 00:12:05,459
don't want to make our developers angry

339
00:12:05,459 --> 00:12:07,200
we maybe even want them to be able to

340
00:12:07,200 --> 00:12:09,839
disable security for a time period

341
00:12:09,839 --> 00:12:11,339
um but still gather information there's

342
00:12:11,339 --> 00:12:12,660
all these things that we might want to

343
00:12:12,660 --> 00:12:15,000
do and if you've got this in hundreds of

344
00:12:15,000 --> 00:12:16,860
different repositories now you've got to

345
00:12:16,860 --> 00:12:18,600
manage all those different repositories

346
00:12:18,600 --> 00:12:20,880
you want to centralize things right so I

347
00:12:20,880 --> 00:12:22,860
made this tool called easy infra short

348
00:12:22,860 --> 00:12:25,500
for easy infrastructures code and the

349
00:12:25,500 --> 00:12:27,600
idea is that I would just make a Docker

350
00:12:27,600 --> 00:12:30,079
container open it up on the internet

351
00:12:30,079 --> 00:12:32,700
employ a lot of these tactics inside the

352
00:12:32,700 --> 00:12:34,320
container and allow you just like flip

353
00:12:34,320 --> 00:12:36,000
them on and off

354
00:12:36,000 --> 00:12:38,339
so here's a deployment example with

355
00:12:38,339 --> 00:12:41,160
Jenkins but this is very similar for uh

356
00:12:41,160 --> 00:12:42,899
if you're using like gitlab with gitlab

357
00:12:42,899 --> 00:12:46,620
runners or GitHub actions or pipes it's

358
00:12:46,620 --> 00:12:48,899
all very similar ideas but with this

359
00:12:48,899 --> 00:12:51,600
Jenkins CI example I think it's really

360
00:12:51,600 --> 00:12:53,399
um nice to see like on the left is

361
00:12:53,399 --> 00:12:55,500
before probably what you're doing before

362
00:12:55,500 --> 00:12:57,300
implementing easy Iron front and the

363
00:12:57,300 --> 00:12:58,680
right is after and if you look closely

364
00:12:58,680 --> 00:13:01,019
enough you'll see that only one line has

365
00:13:01,019 --> 00:13:03,300
changed and that's the environment in

366
00:13:03,300 --> 00:13:05,459
which the commands are being run so this

367
00:13:05,459 --> 00:13:08,339
terraform init validate apply those are

368
00:13:08,339 --> 00:13:10,440
just happening inside of this container

369
00:13:10,440 --> 00:13:12,660
instead of this one and magically the

370
00:13:12,660 --> 00:13:14,579
security stuff is just happening like

371
00:13:14,579 --> 00:13:16,500
that's the that's the main benefit that

372
00:13:16,500 --> 00:13:19,380
easy infra brings all you have to do is

373
00:13:19,380 --> 00:13:21,779
run terraform in the easy infra

374
00:13:21,779 --> 00:13:23,820
terraform container and you get

375
00:13:23,820 --> 00:13:26,459
terraform security if you run ansible in

376
00:13:26,459 --> 00:13:28,260
the easy infra ansible container you get

377
00:13:28,260 --> 00:13:29,579
ansible security

378
00:13:29,579 --> 00:13:32,579
Etc right it's completely transparent

379
00:13:32,579 --> 00:13:34,260
uh and there's a whole bunch of

380
00:13:34,260 --> 00:13:36,180
different uh features I don't have a ton

381
00:13:36,180 --> 00:13:38,579
of time to go through all of them but

382
00:13:38,579 --> 00:13:41,040
there's a learning mode feature so you

383
00:13:41,040 --> 00:13:42,779
can find out if it would have failed the

384
00:13:42,779 --> 00:13:44,220
build but don't actually fail the build

385
00:13:44,220 --> 00:13:47,100
bring that Telemetry locally and uh

386
00:13:47,100 --> 00:13:49,139
evaluate it

387
00:13:49,139 --> 00:13:51,480
um they have centralized logging and it

388
00:13:51,480 --> 00:13:53,639
supports 38 different destinations so

389
00:13:53,639 --> 00:13:56,040
everything that you can expect from your

390
00:13:56,040 --> 00:13:59,579
splunks and Elk Stacks to syslog Cloud

391
00:13:59,579 --> 00:14:01,560
watch S3 buckets you know whatever it's

392
00:14:01,560 --> 00:14:03,839
all supported it has an arbitrary

393
00:14:03,839 --> 00:14:06,060
hooking framework so say what easy infra

394
00:14:06,060 --> 00:14:08,100
is doing is in what you want to do you

395
00:14:08,100 --> 00:14:10,380
can install a hook and do whatever you

396
00:14:10,380 --> 00:14:12,000
want to do you can bring your own

397
00:14:12,000 --> 00:14:14,339
binaries you can bring your own bash

398
00:14:14,339 --> 00:14:16,620
scripts and it will hook the terraform

399
00:14:16,620 --> 00:14:19,800
commands or ansible commands Etc and run

400
00:14:19,800 --> 00:14:21,959
what you tell it to do so you need to

401
00:14:21,959 --> 00:14:23,579
provide some sort of custom Telemetry

402
00:14:23,579 --> 00:14:25,560
your repositories are special in some

403
00:14:25,560 --> 00:14:26,519
way and you need to do something a

404
00:14:26,519 --> 00:14:29,339
little different that's all built in

405
00:14:29,339 --> 00:14:33,720
and a bunch of other stuff too right

406
00:14:33,720 --> 00:14:35,339
and just because I don't have time to

407
00:14:35,339 --> 00:14:36,839
roll for them I could do a demo if

408
00:14:36,839 --> 00:14:39,060
everyone would allow me but

409
00:14:39,060 --> 00:14:39,779
um

410
00:14:39,779 --> 00:14:42,360
uh this is what uh just a quick grafana

411
00:14:42,360 --> 00:14:43,920
dashboard and a low-key environment

412
00:14:43,920 --> 00:14:45,899
setup would look like so you can see

413
00:14:45,899 --> 00:14:48,480
here we've got all of the times that

414
00:14:48,480 --> 00:14:51,420
easy infra had security turned off but

415
00:14:51,420 --> 00:14:53,639
ran so this allows you to deploy easy

416
00:14:53,639 --> 00:14:55,860
infra and make sure the basic things are

417
00:14:55,860 --> 00:14:58,320
operating the right terraform versions

418
00:14:58,320 --> 00:14:59,820
are being detected so the cool thing is

419
00:14:59,820 --> 00:15:01,320
it actually Auto detects the right

420
00:15:01,320 --> 00:15:03,060
version of terraform that the code

421
00:15:03,060 --> 00:15:04,980
requires switches to that version on the

422
00:15:04,980 --> 00:15:06,720
Fly and then uses it for your commands

423
00:15:06,720 --> 00:15:08,940
so you don't have to hard code any sort

424
00:15:08,940 --> 00:15:10,079
of versions you can put it in the code

425
00:15:10,079 --> 00:15:12,420
as the terraform required version

426
00:15:12,420 --> 00:15:15,120
uh and um so you want to make sure that

427
00:15:15,120 --> 00:15:16,800
that sort of stuff works and it'll

428
00:15:16,800 --> 00:15:18,899
centralize logs even when it's the

429
00:15:18,899 --> 00:15:20,579
security scans are turned off so now you

430
00:15:20,579 --> 00:15:22,740
know when your security is turned off

431
00:15:22,740 --> 00:15:24,660
and that information is just really good

432
00:15:24,660 --> 00:15:26,459
but then there's other basic things you

433
00:15:26,459 --> 00:15:28,019
can know when it runs but found no

434
00:15:28,019 --> 00:15:30,240
issues that's a good thing when it round

435
00:15:30,240 --> 00:15:33,300
and uh when it ran and found an issue

436
00:15:33,300 --> 00:15:34,740
but didn't fail to build so it was

437
00:15:34,740 --> 00:15:36,180
suppressed it would have failed the

438
00:15:36,180 --> 00:15:37,980
build in the future if you turn blocking

439
00:15:37,980 --> 00:15:40,380
mode on but it's in like audit mode so

440
00:15:40,380 --> 00:15:42,000
don't fail the build and then down here

441
00:15:42,000 --> 00:15:43,560
is when are you actually failing the

442
00:15:43,560 --> 00:15:46,260
build how bad is your environment uh

443
00:15:46,260 --> 00:15:48,000
getting blocked or stopped or slowed

444
00:15:48,000 --> 00:15:49,620
down Etc and then at the bottom we've

445
00:15:49,620 --> 00:15:52,019
got our raw logs

446
00:15:52,019 --> 00:15:54,360
so like I said I do have a demo set up

447
00:15:54,360 --> 00:15:56,940
but I think I'm pretty much at time here

448
00:15:56,940 --> 00:15:58,980
so

449
00:15:58,980 --> 00:15:59,699
um

450
00:15:59,699 --> 00:16:01,019
uh yeah let me know should I go forward

451
00:16:01,019 --> 00:16:04,079
with a demo or

452
00:16:04,079 --> 00:16:05,699
do we have some questions

453
00:16:05,699 --> 00:16:08,399
I know we do have one question uh that

454
00:16:08,399 --> 00:16:10,199
came up in the middle of that but uh I I

455
00:16:10,199 --> 00:16:11,639
don't think we'll have time for the demo

456
00:16:11,639 --> 00:16:13,440
just to keep things succinct here but I

457
00:16:13,440 --> 00:16:14,880
appreciate you offering to do that John

458
00:16:14,880 --> 00:16:17,160
and that would be fun to see maybe in a

459
00:16:17,160 --> 00:16:18,839
future session

460
00:16:18,839 --> 00:16:21,660
um so I know uh really quick Randall was

461
00:16:21,660 --> 00:16:25,019
here to introduce you about knowing that

462
00:16:25,019 --> 00:16:26,579
you were talking about containers there

463
00:16:26,579 --> 00:16:28,139
and that's like a buzzword you say that

464
00:16:28,139 --> 00:16:29,519
like three times that brings up our

465
00:16:29,519 --> 00:16:31,500
buddy Eric and so we kicked Randall out

466
00:16:31,500 --> 00:16:33,420
and we're now bringing on Eric to help

467
00:16:33,420 --> 00:16:35,040
talk about this stuff too so everybody

468
00:16:35,040 --> 00:16:36,980
say hi to Eric real quick

469
00:16:36,980 --> 00:16:40,220
hi Eric

470
00:16:40,440 --> 00:16:42,360
what's up Eric welcome learn to unmute

471
00:16:42,360 --> 00:16:45,540
myself like normal hey everybody yes so

472
00:16:45,540 --> 00:16:48,060
the one question we had was uh I believe

473
00:16:48,060 --> 00:16:50,100
it still applies to infrastructure's

474
00:16:50,100 --> 00:16:51,600
code comments and discussion around

475
00:16:51,600 --> 00:16:52,560
there

476
00:16:52,560 --> 00:16:54,720
was if you had any suggestions on tools

477
00:16:54,720 --> 00:16:56,279
for other types of infrastructure as

478
00:16:56,279 --> 00:16:58,500
code like for example cloud formation

479
00:16:58,500 --> 00:17:01,199
cdk for AWS things like that

480
00:17:01,199 --> 00:17:03,120
yeah so a lot of the tools that I was

481
00:17:03,120 --> 00:17:04,859
talking about have support for multiple

482
00:17:04,859 --> 00:17:07,559
infrastructures code systems so like

483
00:17:07,559 --> 00:17:09,660
check off supports home and and things

484
00:17:09,660 --> 00:17:11,400
like that sneak I believe supports a

485
00:17:11,400 --> 00:17:13,439
bunch uh kicks definitely supports a

486
00:17:13,439 --> 00:17:15,599
bunch in fact if you go to like the

487
00:17:15,599 --> 00:17:18,059
check off repository and you just scroll

488
00:17:18,059 --> 00:17:19,679
down a little bit

489
00:17:19,679 --> 00:17:22,859
um oh maybe it's not in here

490
00:17:22,859 --> 00:17:23,720
um

491
00:17:23,720 --> 00:17:27,480
they they do have a whole list of

492
00:17:27,480 --> 00:17:29,400
um

493
00:17:29,400 --> 00:17:31,260
uh logos and things like that that they

494
00:17:31,260 --> 00:17:32,520
support here it's a little bit better it

495
00:17:32,520 --> 00:17:34,320
doesn't work great on the dark mode but

496
00:17:34,320 --> 00:17:38,220
terraform kubernetes grpc cross plane

497
00:17:38,220 --> 00:17:40,679
plumony you know all this stuff so these

498
00:17:40,679 --> 00:17:43,140
vendors are support you know multiple

499
00:17:43,140 --> 00:17:44,700
different deployment mechanisms and then

500
00:17:44,700 --> 00:17:46,980
uh in Easy infra I actually just did a

501
00:17:46,980 --> 00:17:48,059
huge refactor and I'm going to be

502
00:17:48,059 --> 00:17:49,860
supporting that in Easy infra too so

503
00:17:49,860 --> 00:17:51,740
cloud formation is is high on the list

504
00:17:51,740 --> 00:17:54,900
cross plane Etc

505
00:17:54,900 --> 00:17:57,240
nice thank you for that uh Eric Micah

506
00:17:57,240 --> 00:17:59,100
any questions for John I'll check the

507
00:17:59,100 --> 00:18:02,600
chat at the same time as well

508
00:18:03,480 --> 00:18:06,539
nothing here I was able to uh come back

509
00:18:06,539 --> 00:18:08,880
uh just after you started so it was a

510
00:18:08,880 --> 00:18:10,559
great great presentation thanks a lot

511
00:18:10,559 --> 00:18:12,740
John

512
00:18:13,380 --> 00:18:15,960
awesome yeah for sure excellent stuff uh

513
00:18:15,960 --> 00:18:17,400
I don't see any questions in the chat

514
00:18:17,400 --> 00:18:19,140
but I guess one more thing for you John

515
00:18:19,140 --> 00:18:20,520
if folks want to get in touch with you

516
00:18:20,520 --> 00:18:22,559
ask you more questions about this stuff

517
00:18:22,559 --> 00:18:24,059
afterwards where's the best place to

518
00:18:24,059 --> 00:18:25,260
find you

519
00:18:25,260 --> 00:18:27,900
yeah so the project I was talking about

520
00:18:27,900 --> 00:18:32,640
is available on GitHub C2 loc slash easy

521
00:18:32,640 --> 00:18:35,940
infra yep there we go and then uh if you

522
00:18:35,940 --> 00:18:37,320
want to reach out to me you can hit me

523
00:18:37,320 --> 00:18:38,760
up on LinkedIn it's just my name John

524
00:18:38,760 --> 00:18:40,559
Zola

525
00:18:40,559 --> 00:18:42,720
awesome awesome great stuff

526
00:18:42,720 --> 00:18:44,280
well thank you so much John appreciate

527
00:18:44,280 --> 00:18:45,539
you coming on here and chatting with us

528
00:18:45,539 --> 00:18:46,700
about that and teaching us about

529
00:18:46,700 --> 00:18:49,919
simplifying IAC we'll see you around bud

530
00:18:49,919 --> 00:18:51,720
thanks for having me okay talk to you

531
00:18:51,720 --> 00:18:54,620
later see ya

