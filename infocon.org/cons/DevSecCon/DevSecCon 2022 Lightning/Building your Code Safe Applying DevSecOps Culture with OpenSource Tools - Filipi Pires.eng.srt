1
00:00:00,539 --> 00:00:02,120
um good afternoon

2
00:00:02,120 --> 00:00:06,420
Philippi Felipe yes that's correctly

3
00:00:06,420 --> 00:00:10,080
Philippi it's like cool um so without

4
00:00:10,080 --> 00:00:11,880
further Ado we'll get you straight on

5
00:00:11,880 --> 00:00:13,860
here because we're already slightly

6
00:00:13,860 --> 00:00:18,600
behind so uh if you're uh your screen up

7
00:00:18,600 --> 00:00:21,480
there and uh

8
00:00:21,480 --> 00:00:23,939
and uh leave you to it

9
00:00:23,939 --> 00:00:25,740
good luck see you later

10
00:00:25,740 --> 00:00:29,060
okay see you guys

11
00:00:29,279 --> 00:00:32,279
okay so thank you again everyone for

12
00:00:32,279 --> 00:00:34,200
stay here so my name is Philippe Pierce

13
00:00:34,200 --> 00:00:36,480
and I'm talking here from Portugal or in

14
00:00:36,480 --> 00:00:39,059
Brazilian by the way and I decided just

15
00:00:39,059 --> 00:00:41,280
share my virtual machine here because we

16
00:00:41,280 --> 00:00:43,680
just have a 15 minutes I think to talk

17
00:00:43,680 --> 00:00:46,860
this is a small conversation actually so

18
00:00:46,860 --> 00:00:49,379
this is my GitHub basically so we can

19
00:00:49,379 --> 00:00:51,000
find different projects here this is

20
00:00:51,000 --> 00:00:55,559
Philip 86 it's very simple and here you

21
00:00:55,559 --> 00:00:57,360
can find informations about me and some

22
00:00:57,360 --> 00:01:00,000
projects so actually now I'm working as

23
00:01:00,000 --> 00:01:02,940
a security research at Sapporo support

24
00:01:02,940 --> 00:01:05,580
it's a company from Switzerland and I'm

25
00:01:05,580 --> 00:01:08,520
responsible for creating attack modules

26
00:01:08,520 --> 00:01:11,220
checks control checks actually for this

27
00:01:11,220 --> 00:01:14,460
product and uh and not only that but um

28
00:01:14,460 --> 00:01:18,119
security ambassador of this Nick and uh

29
00:01:18,119 --> 00:01:19,500
and security advocated different

30
00:01:19,500 --> 00:01:22,500
projects and uh it's a pleasure once

31
00:01:22,500 --> 00:01:25,020
again stay here and I'm one of the leads

32
00:01:25,020 --> 00:01:27,360
of the Defcon groups in Sao Paulo and

33
00:01:27,360 --> 00:01:29,220
it's very nice it's a small community in

34
00:01:29,220 --> 00:01:31,740
Sao Paulo and the idea is to exchange

35
00:01:31,740 --> 00:01:34,380
knowledgment with the students it's a

36
00:01:34,380 --> 00:01:37,140
community you know and uh and yeah so

37
00:01:37,140 --> 00:01:39,659
here we can find the small web page and

38
00:01:39,659 --> 00:01:42,420
about in some informations about me so

39
00:01:42,420 --> 00:01:44,280
it's a philippines.com so we can find

40
00:01:44,280 --> 00:01:47,280
here informations presentation talks not

41
00:01:47,280 --> 00:01:49,740
only devsecops but about other topics

42
00:01:49,740 --> 00:01:52,619
like Mr analysis and the presentations

43
00:01:52,619 --> 00:01:56,700
in English if you want and in Spanish in

44
00:01:56,700 --> 00:01:59,520
Portuguese language okay and here's some

45
00:01:59,520 --> 00:02:01,920
articles published by me about some

46
00:02:01,920 --> 00:02:04,200
investigation that I made in different

47
00:02:04,200 --> 00:02:07,020
positions that I've worked okay so let's

48
00:02:07,020 --> 00:02:09,959
talk our main topic today and uh again

49
00:02:09,959 --> 00:02:12,900
just as uh we have a short time just to

50
00:02:12,900 --> 00:02:14,879
introducing just as a small uh

51
00:02:14,879 --> 00:02:16,620
informations first

52
00:02:16,620 --> 00:02:18,780
not only talk about the you know saster

53
00:02:18,780 --> 00:02:21,060
and dusty but the point here is to

54
00:02:21,060 --> 00:02:22,560
explain so probably you already heard

55
00:02:22,560 --> 00:02:24,540
about this sdlc software development

56
00:02:24,540 --> 00:02:26,700
life cycle so probably you already see

57
00:02:26,700 --> 00:02:29,400
this picture the idea here is just to

58
00:02:29,400 --> 00:02:31,260
explain more about the how you can put

59
00:02:31,260 --> 00:02:34,260
in the s in front of this but not only

60
00:02:34,260 --> 00:02:36,780
uh I just if you're putting this on

61
00:02:36,780 --> 00:02:38,480
internet you can see different

62
00:02:38,480 --> 00:02:40,739
approaches or different explanation but

63
00:02:40,739 --> 00:02:42,720
the point here it's very simple simple

64
00:02:42,720 --> 00:02:46,680
how you can see for the security way for

65
00:02:46,680 --> 00:02:48,720
the developing life cycle this is the

66
00:02:48,720 --> 00:02:51,360
very simple thing here and how the tools

67
00:02:51,360 --> 00:02:53,940
can help you to increase your security

68
00:02:53,940 --> 00:02:57,060
code security environment during this

69
00:02:57,060 --> 00:02:59,220
development process this is the idea

70
00:02:59,220 --> 00:03:01,560
here so again so probably you already

71
00:03:01,560 --> 00:03:03,780
see these the secure the requirement

72
00:03:03,780 --> 00:03:05,760
design development testing and

73
00:03:05,760 --> 00:03:07,800
deployment this is the cycle as I

74
00:03:07,800 --> 00:03:09,780
mentioned here in the first picture okay

75
00:03:09,780 --> 00:03:12,120
and the second one here you can see

76
00:03:12,120 --> 00:03:16,140
below the different approach using the

77
00:03:16,140 --> 00:03:18,000
security approach actually looking from

78
00:03:18,000 --> 00:03:20,819
the risk assessment so probably we need

79
00:03:20,819 --> 00:03:23,940
to see something before here like a a

80
00:03:23,940 --> 00:03:26,760
security requirements security risk

81
00:03:26,760 --> 00:03:28,980
assessment threaty modeling design and

82
00:03:28,980 --> 00:03:31,800
review and statistic analysis using for

83
00:03:31,800 --> 00:03:34,019
example choose to helping to help you

84
00:03:34,019 --> 00:03:36,900
security testing code review and so on

85
00:03:36,900 --> 00:03:39,959
and so on here you can see another

86
00:03:39,959 --> 00:03:42,360
um another picture very interesting and

87
00:03:42,360 --> 00:03:43,500
you can see here the security

88
00:03:43,500 --> 00:03:46,140
requirements that I mentioned so when

89
00:03:46,140 --> 00:03:49,560
you design this and this uh security

90
00:03:49,560 --> 00:03:52,379
process it's very interesting you define

91
00:03:52,379 --> 00:03:55,920
those steps if you see here you have the

92
00:03:55,920 --> 00:03:58,019
main topics here like I mentioned in the

93
00:03:58,019 --> 00:04:00,420
developer process here in the first and

94
00:04:00,420 --> 00:04:03,120
the second one you can see here the

95
00:04:03,120 --> 00:04:05,760
security standpoint inside of the

96
00:04:05,760 --> 00:04:08,459
developing life cycle this is the key

97
00:04:08,459 --> 00:04:11,760
just in a theoretical part maybe not

98
00:04:11,760 --> 00:04:14,220
 part but it's important part is

99
00:04:14,220 --> 00:04:17,160
hierarchy part but you know we can using

100
00:04:17,160 --> 00:04:20,639
different tools to help you okay here I

101
00:04:20,639 --> 00:04:23,280
would like to just explain just a

102
00:04:23,280 --> 00:04:26,040
a simple definition about what is sust

103
00:04:26,040 --> 00:04:28,500
and dust not only that but we can see

104
00:04:28,500 --> 00:04:30,300
more than one for example just a simple

105
00:04:30,300 --> 00:04:33,180
approach the for the SAS approach is a

106
00:04:33,180 --> 00:04:35,699
white box security testing the idea here

107
00:04:35,699 --> 00:04:37,320
is to look more inside of the

108
00:04:37,320 --> 00:04:39,900
applications on on the other hand you

109
00:04:39,900 --> 00:04:42,479
have a dust for example so when you have

110
00:04:42,479 --> 00:04:44,699
the application published so you have an

111
00:04:44,699 --> 00:04:47,280
energy point you have an API publisher

112
00:04:47,280 --> 00:04:49,020
so you can run

113
00:04:49,020 --> 00:04:49,740
um

114
00:04:49,740 --> 00:04:53,160
the specifically choose to scanning this

115
00:04:53,160 --> 00:04:55,680
if you have some specifically

116
00:04:55,680 --> 00:04:57,300
um for example specifically

117
00:04:57,300 --> 00:04:59,699
vulnerability uh you can using for

118
00:04:59,699 --> 00:05:02,040
example for disaster approach the idea

119
00:05:02,040 --> 00:05:04,020
is to run a specifically you don't need

120
00:05:04,020 --> 00:05:04,800
to

121
00:05:04,800 --> 00:05:06,840
um requirement you don't need to deploy

122
00:05:06,840 --> 00:05:09,419
the application because you will run the

123
00:05:09,419 --> 00:05:11,100
specifically tools to execute in

124
00:05:11,100 --> 00:05:13,560
specifically code inside of this you can

125
00:05:13,560 --> 00:05:16,500
finding different vulnerability inside

126
00:05:16,500 --> 00:05:19,560
of this specifically as a DLC as you can

127
00:05:19,560 --> 00:05:22,800
see here it means that you can scan you

128
00:05:22,800 --> 00:05:25,020
can run a specific scan inside of your

129
00:05:25,020 --> 00:05:27,479
code in this case for the dust approach

130
00:05:27,479 --> 00:05:30,240
is a different because you've published

131
00:05:30,240 --> 00:05:31,740
the application so probably you have

132
00:05:31,740 --> 00:05:35,400
more problem is more expensive to fix

133
00:05:35,400 --> 00:05:37,919
the vulnerability you can compare both

134
00:05:37,919 --> 00:05:40,620
not only that you have another different

135
00:05:40,620 --> 00:05:42,900
approach that I would like to mention at

136
00:05:42,900 --> 00:05:45,180
it's a simple again so you can find the

137
00:05:45,180 --> 00:05:47,639
difference articles on the internet you

138
00:05:47,639 --> 00:05:49,680
have a difference analysis not only such

139
00:05:49,680 --> 00:05:52,080
as I mentioned it or dust but you have

140
00:05:52,080 --> 00:05:54,180
an scca like a softer composition

141
00:05:54,180 --> 00:05:58,199
analysis so for each Library you can or

142
00:05:58,199 --> 00:06:00,660
if evolves actually 30 parts or

143
00:06:00,660 --> 00:06:02,400
different components that you can put

144
00:06:02,400 --> 00:06:04,560
inside of your code inside of your

145
00:06:04,560 --> 00:06:06,419
application so you need to looking from

146
00:06:06,419 --> 00:06:10,139
this because many many uh and nowadays

147
00:06:10,139 --> 00:06:12,479
so we're using different libraries

148
00:06:12,479 --> 00:06:15,000
different components to increase our

149
00:06:15,000 --> 00:06:17,880
code and many times we using the open

150
00:06:17,880 --> 00:06:19,860
source it's not a problem I really like

151
00:06:19,860 --> 00:06:22,259
to use an Open Source by the way but

152
00:06:22,259 --> 00:06:24,960
sometimes it's not maintained from the

153
00:06:24,960 --> 00:06:27,900
community it's just a simple the person

154
00:06:27,900 --> 00:06:29,699
creating a specific code and after that

155
00:06:29,699 --> 00:06:31,979
forgot the code so probably this code or

156
00:06:31,979 --> 00:06:34,680
maybe this code can be vulnerable and

157
00:06:34,680 --> 00:06:36,960
not only that but you have any asked for

158
00:06:36,960 --> 00:06:40,080
example is above is a mix of the yast

159
00:06:40,080 --> 00:06:43,740
and a mix of the sust and dust and and

160
00:06:43,740 --> 00:06:46,860
now more uh not new let's say this way

161
00:06:46,860 --> 00:06:49,620
but we have a runtime application self

162
00:06:49,620 --> 00:06:53,220
protection like a rasp so when you run

163
00:06:53,220 --> 00:06:55,979
the you can use in for example a

164
00:06:55,979 --> 00:06:57,419
specifically agent inside of your

165
00:06:57,419 --> 00:06:59,880
application to run to find to try

166
00:06:59,880 --> 00:07:02,699
finding actually uh new vulnerabilities

167
00:07:02,699 --> 00:07:05,400
just to put in this to clarify all those

168
00:07:05,400 --> 00:07:07,020
peoples and putting all those peoples in

169
00:07:07,020 --> 00:07:10,080
the same the same page okay so let's

170
00:07:10,080 --> 00:07:12,240
suppose it so we have you can see you

171
00:07:12,240 --> 00:07:14,940
have a specific project for example uh

172
00:07:14,940 --> 00:07:17,520
in your locally or maybe you can use in

173
00:07:17,520 --> 00:07:20,039
your cicd pipeline for example you can

174
00:07:20,039 --> 00:07:22,680
go you can if you want you can hear in

175
00:07:22,680 --> 00:07:25,440
my repository here I have a specifically

176
00:07:25,440 --> 00:07:30,419
or SEC uh repository here Dash demo so

177
00:07:30,419 --> 00:07:33,240
we can find here many vulnerable codes

178
00:07:33,240 --> 00:07:36,599
here and JavaScript and Java uh sorry

179
00:07:36,599 --> 00:07:40,500
and go link kotlin node PHP so it's a

180
00:07:40,500 --> 00:07:42,419
specifically project I will compare two

181
00:07:42,419 --> 00:07:44,099
different projects actually difference

182
00:07:44,099 --> 00:07:47,039
approach so we have here is Nick an open

183
00:07:47,039 --> 00:07:50,160
source version actually and I'll be

184
00:07:50,160 --> 00:07:52,020
using another Visa or SEC it's another

185
00:07:52,020 --> 00:07:54,840
only sas2 so is it two difference open

186
00:07:54,840 --> 00:07:57,180
source just to share the difference but

187
00:07:57,180 --> 00:08:00,479
of course you can scale more using

188
00:08:00,479 --> 00:08:01,800
nissnik because you have an Enterprise

189
00:08:01,800 --> 00:08:05,160
versions and other benefits that you can

190
00:08:05,160 --> 00:08:06,180
use

191
00:08:06,180 --> 00:08:08,400
but I would like to show you these two

192
00:08:08,400 --> 00:08:11,460
different ideas about that so here we

193
00:08:11,460 --> 00:08:14,400
have uh some in specifically

194
00:08:14,400 --> 00:08:15,120
um

195
00:08:15,120 --> 00:08:18,660
vulnerable codes as I mentioned with you

196
00:08:18,660 --> 00:08:21,000
so we have a different language here so

197
00:08:21,000 --> 00:08:23,400
programming language we have an API here

198
00:08:23,400 --> 00:08:26,699
and not only that but you can after that

199
00:08:26,699 --> 00:08:29,879
or before that you need to install so we

200
00:08:29,879 --> 00:08:31,860
can see here in sneak documents so we

201
00:08:31,860 --> 00:08:34,979
can using hit here like a guidance to

202
00:08:34,979 --> 00:08:36,899
you so what is this leak probably you

203
00:08:36,899 --> 00:08:39,719
know what is or so if you don't know you

204
00:08:39,719 --> 00:08:41,580
can putting on the internet so with Nick

205
00:08:41,580 --> 00:08:43,320
products with Nick open source probably

206
00:08:43,320 --> 00:08:45,360
you already heard so just clicking is

207
00:08:45,360 --> 00:08:48,060
Nick CLI and you can go there and you

208
00:08:48,060 --> 00:08:50,100
can install running in for example is

209
00:08:50,100 --> 00:08:52,080
need code scanning container scanning

210
00:08:52,080 --> 00:08:54,300
infrastructure as a code to looking for

211
00:08:54,300 --> 00:08:56,640
your code remember the software

212
00:08:56,640 --> 00:08:59,580
development life cycle this is important

213
00:08:59,580 --> 00:09:02,160
here so after you install again so we

214
00:09:02,160 --> 00:09:04,500
don't have a time to install I have here

215
00:09:04,500 --> 00:09:07,320
or we don't have a time to go through

216
00:09:07,320 --> 00:09:09,740
all those steps

217
00:09:09,740 --> 00:09:13,260
slowly let's say this way but so I have

218
00:09:13,260 --> 00:09:17,100
here the all four files here of folders

219
00:09:17,100 --> 00:09:20,660
actually the project that I have here

220
00:09:20,660 --> 00:09:22,980
vulnerable as I mentioned it with you so

221
00:09:22,980 --> 00:09:26,580
first are you executing my uh is Nick

222
00:09:26,580 --> 00:09:30,180
Linux in my locally are you you run the

223
00:09:30,180 --> 00:09:32,700
code and I use a good test simple like

224
00:09:32,700 --> 00:09:35,580
this so this is my main project as I

225
00:09:35,580 --> 00:09:38,580
mentioned it and as I show you here in

226
00:09:38,580 --> 00:09:41,820
the projects let's go again here in my

227
00:09:41,820 --> 00:09:45,120
in Philippians 86 you can find here the

228
00:09:45,120 --> 00:09:48,240
same project okay that I have here in my

229
00:09:48,240 --> 00:09:52,080
CLI as you can see here okay so I just

230
00:09:52,080 --> 00:09:53,880
simple like this as a good thing because

231
00:09:53,880 --> 00:09:57,300
I will run out the code analysis uh

232
00:09:57,300 --> 00:10:00,180
scanning so just clicking enter here as

233
00:10:00,180 --> 00:10:03,120
you can see I set here the real the path

234
00:10:03,120 --> 00:10:05,820
actually because I I install now install

235
00:10:05,820 --> 00:10:07,740
I download the binary here in this

236
00:10:07,740 --> 00:10:10,680
specific folder and if you see here just

237
00:10:10,680 --> 00:10:14,220
to run the testing and finding three uh

238
00:10:14,220 --> 00:10:16,260
vulnerabilities as you can see here the

239
00:10:16,260 --> 00:10:19,380
first one is median using password hash

240
00:10:19,380 --> 00:10:21,800
with insufficient completion and effort

241
00:10:21,800 --> 00:10:25,019
and here is the explanation and the the

242
00:10:25,019 --> 00:10:28,200
path if you can see here the the the

243
00:10:28,200 --> 00:10:32,640
solution using the hierarchic uh not

244
00:10:32,640 --> 00:10:35,760
only because this is the the root folder

245
00:10:35,760 --> 00:10:38,160
as you can see here so the performance

246
00:10:38,160 --> 00:10:42,420
uh running inside of this folder any as

247
00:10:42,420 --> 00:10:45,420
you can see here the execution going

248
00:10:45,420 --> 00:10:49,620
through the entire uh path so here is

249
00:10:49,620 --> 00:10:52,079
the real path as you can see here so go

250
00:10:52,079 --> 00:10:56,120
laying Dash API Hash YouTube

251
00:10:56,779 --> 00:11:02,940
go line to a 23. so of course I can I

252
00:11:02,940 --> 00:11:05,700
could for example running here a code to

253
00:11:05,700 --> 00:11:08,100
open here in my disorder studio for

254
00:11:08,100 --> 00:11:10,800
example in my vs code to see what is

255
00:11:10,800 --> 00:11:13,860
exactly the line vulnerable and as you

256
00:11:13,860 --> 00:11:16,740
can see here the information about md5

257
00:11:16,740 --> 00:11:19,920
here is another possibility is you see

258
00:11:19,920 --> 00:11:22,320
here in pH beef vulnerability it's

259
00:11:22,320 --> 00:11:25,200
another is different in this case and

260
00:11:25,200 --> 00:11:28,920
here is the SQL injection okay not only

261
00:11:28,920 --> 00:11:33,180
that but we can see here and my

262
00:11:33,180 --> 00:11:34,260
um

263
00:11:34,260 --> 00:11:37,140
sneak dashboard you can see you can find

264
00:11:37,140 --> 00:11:39,120
here the same project as you can see

265
00:11:39,120 --> 00:11:43,620
here Philip or SEC Dash demo okay so if

266
00:11:43,620 --> 00:11:46,079
I click here so I just integration this

267
00:11:46,079 --> 00:11:48,480
information with my GitHub as you can

268
00:11:48,480 --> 00:11:51,180
see here the picture and here is it's

269
00:11:51,180 --> 00:11:53,339
very interesting because as you can see

270
00:11:53,339 --> 00:11:56,160
here the same information that you see

271
00:11:56,160 --> 00:12:01,019
here that you see and my CLI okay and

272
00:12:01,019 --> 00:12:03,360
it's another Point interesting here in

273
00:12:03,360 --> 00:12:05,880
this case is about the informations

274
00:12:05,880 --> 00:12:07,440
about the vulnerability but you have

275
00:12:07,440 --> 00:12:09,300
here the full details if you click here

276
00:12:09,300 --> 00:12:11,700
you can go for the fixed analysis in

277
00:12:11,700 --> 00:12:13,440
some case you have the fix and how we

278
00:12:13,440 --> 00:12:16,260
can fix this like this the

279
00:12:16,260 --> 00:12:18,779
recommendation front is Nick so it's

280
00:12:18,779 --> 00:12:20,640
very interesting here the explanation so

281
00:12:20,640 --> 00:12:22,440
if you are a developer for example if

282
00:12:22,440 --> 00:12:23,820
you're watching now or if you're

283
00:12:23,820 --> 00:12:26,279
watching after so probably you don't

284
00:12:26,279 --> 00:12:28,920
know much about the security so here

285
00:12:28,920 --> 00:12:30,839
it's a very interesting and good

286
00:12:30,839 --> 00:12:32,579
opportunity to learn more about the

287
00:12:32,579 --> 00:12:35,100
security okay and here's as you can see

288
00:12:35,100 --> 00:12:38,820
the data flow inside exactly point where

289
00:12:38,820 --> 00:12:40,920
is the vulnerable code and here is the

290
00:12:40,920 --> 00:12:43,440
fixed analysis okay so very very nice

291
00:12:43,440 --> 00:12:46,399
and Below you can see the SQL injection

292
00:12:46,399 --> 00:12:49,980
and the same password is sufficient

293
00:12:49,980 --> 00:12:52,260
compute effort so we have here then

294
00:12:52,260 --> 00:12:55,380
specifically code analysis to see like a

295
00:12:55,380 --> 00:12:57,300
sust as I mentioned statistical analysis

296
00:12:57,300 --> 00:13:00,660
inside of the code uh if you see here

297
00:13:00,660 --> 00:13:02,220
it's you can see another it's another

298
00:13:02,220 --> 00:13:04,800
open search Project called rset as I

299
00:13:04,800 --> 00:13:07,320
mentioned just a comparation so if I run

300
00:13:07,320 --> 00:13:09,360
here or sec

301
00:13:09,360 --> 00:13:13,260
and click enter here no I need to start

302
00:13:13,260 --> 00:13:18,180
yeah start is is another they will run

303
00:13:18,180 --> 00:13:21,240
if you see here the same path so of

304
00:13:21,240 --> 00:13:23,760
course just compare two twos what should

305
00:13:23,760 --> 00:13:25,920
be the best two slips depends of your

306
00:13:25,920 --> 00:13:27,480
environment depends of your programming

307
00:13:27,480 --> 00:13:30,839
language depend you are necessary but of

308
00:13:30,839 --> 00:13:33,180
course you have a sneak that have more

309
00:13:33,180 --> 00:13:34,920
experience when you talk about the

310
00:13:34,920 --> 00:13:37,019
security on the other hand you have

311
00:13:37,019 --> 00:13:38,940
another or SEC it's a very very nice

312
00:13:38,940 --> 00:13:42,660
tools uh by the way I I create I'm one

313
00:13:42,660 --> 00:13:44,579
of those responsible for creating these

314
00:13:44,579 --> 00:13:46,500
tools for the community created by the

315
00:13:46,500 --> 00:13:48,360
security team it's very interesting it's

316
00:13:48,360 --> 00:13:50,820
an open source but it's only open source

317
00:13:50,820 --> 00:13:53,339
in this case we have an open source and

318
00:13:53,339 --> 00:13:55,440
Enterprise version it means that

319
00:13:55,440 --> 00:13:58,440
probably you have more features and more

320
00:13:58,440 --> 00:14:00,540
benefits and more intelligence just

321
00:14:00,540 --> 00:14:03,360
because of that okay but again Philip

322
00:14:03,360 --> 00:14:05,519
what should be the best you need to test

323
00:14:05,519 --> 00:14:07,800
you need to compare depends your

324
00:14:07,800 --> 00:14:11,519
necessity that's the point here okay so

325
00:14:11,519 --> 00:14:14,220
of course you can see here uh if you

326
00:14:14,220 --> 00:14:17,040
compare I'm talking during the last 15

327
00:14:17,040 --> 00:14:19,160
minutes I'm I need to finish by the way

328
00:14:19,160 --> 00:14:22,019
and you have a different performance

329
00:14:22,019 --> 00:14:25,680
when you run uh each tools okay remember

330
00:14:25,680 --> 00:14:27,660
of course I'm running here in my virtual

331
00:14:27,660 --> 00:14:29,760
machine and I'm doing the streaming the

332
00:14:29,760 --> 00:14:32,940
same time in my the same machine so uh

333
00:14:32,940 --> 00:14:34,200
but you can see here the difference

334
00:14:34,200 --> 00:14:37,500
differences about the performance but

335
00:14:37,500 --> 00:14:40,019
here you will see

336
00:14:40,019 --> 00:14:42,720
um the not the same of course not the

337
00:14:42,720 --> 00:14:45,180
same but the similar result talk about

338
00:14:45,180 --> 00:14:48,060
the vulnerability of course using

339
00:14:48,060 --> 00:14:50,339
different engines responsible for detect

340
00:14:50,339 --> 00:14:53,880
is this uh code because in this case

341
00:14:53,880 --> 00:14:56,100
this is Nick you have on our own uh

342
00:14:56,100 --> 00:14:58,320
engine engine responsible for run and

343
00:14:58,320 --> 00:15:00,839
Analysis the code and this case when you

344
00:15:00,839 --> 00:15:02,880
talk about the rsac we have a different

345
00:15:02,880 --> 00:15:05,459
engine you have our SEC engine not only

346
00:15:05,459 --> 00:15:07,980
that but you have another like a gosek

347
00:15:07,980 --> 00:15:11,579
like uh others engine inside of this

348
00:15:11,579 --> 00:15:15,120
responsible for a run and to analysis

349
00:15:15,120 --> 00:15:18,899
the code Okay so

350
00:15:18,899 --> 00:15:20,639
I just wait to finish this simple

351
00:15:20,639 --> 00:15:22,560
running here we don't have a time again

352
00:15:22,560 --> 00:15:25,139
to share the manager or other things or

353
00:15:25,139 --> 00:15:27,240
to compare other things but

354
00:15:27,240 --> 00:15:30,180
from my point here to share you is the

355
00:15:30,180 --> 00:15:33,120
difference and the importance of those

356
00:15:33,120 --> 00:15:35,519
the analysis that are important to to

357
00:15:35,519 --> 00:15:37,500
execute in our environment and how

358
00:15:37,500 --> 00:15:41,160
important you you know creating this uh

359
00:15:41,160 --> 00:15:44,279
as I mentioned to you creating this idea

360
00:15:44,279 --> 00:15:47,399
so not this this is better the looking

361
00:15:47,399 --> 00:15:49,440
from this process risk assessment First

362
00:15:49,440 --> 00:15:51,300
Security requirements after that

363
00:15:51,300 --> 00:15:53,579
creating 30 modeling designing review

364
00:15:53,579 --> 00:15:56,040
looking from the architecture and

365
00:15:56,040 --> 00:15:57,779
creating the security code discounting

366
00:15:57,779 --> 00:15:59,880
as I mentioned it to you or statistic

367
00:15:59,880 --> 00:16:01,980
analysis using two to perform in

368
00:16:01,980 --> 00:16:04,980
specific analysis here and not only that

369
00:16:04,980 --> 00:16:08,699
security testing and uh in the end for

370
00:16:08,699 --> 00:16:10,620
example uh you basically putting

371
00:16:10,620 --> 00:16:12,300
specifically penetration test in your

372
00:16:12,300 --> 00:16:15,920
environment Okay so

373
00:16:15,920 --> 00:16:18,300
okay I need to click enter because of

374
00:16:18,300 --> 00:16:21,300
that is slow sorry for that I forgot to

375
00:16:21,300 --> 00:16:24,180
clicking enter again so the question is

376
00:16:24,180 --> 00:16:27,120
for CDs I forgot to click enter so now

377
00:16:27,120 --> 00:16:31,380
it's running the the code sorry for the

378
00:16:31,380 --> 00:16:34,079
my mistake here so

379
00:16:34,079 --> 00:16:36,600
um okay I think we can finish here so of

380
00:16:36,600 --> 00:16:37,980
course we'll be scanning here just to

381
00:16:37,980 --> 00:16:41,220
show but uh we have if you want you can

382
00:16:41,220 --> 00:16:43,620
see I have other other talks in my web

383
00:16:43,620 --> 00:16:45,899
page again that I show you here more

384
00:16:45,899 --> 00:16:48,600
details about this they are SEC so as

385
00:16:48,600 --> 00:16:51,240
you can see here the language the

386
00:16:51,240 --> 00:16:55,560
severity uh the line so it's the same by

387
00:16:55,560 --> 00:16:57,839
the way same vulnerability mg5 as you

388
00:16:57,839 --> 00:17:00,720
can see here the md5 so

389
00:17:00,720 --> 00:17:03,120
the similar and by the way the

390
00:17:03,120 --> 00:17:05,400
severities median in this case the

391
00:17:05,400 --> 00:17:08,880
severities is is is low but in this case

392
00:17:08,880 --> 00:17:10,859
the confidence if you if you think about

393
00:17:10,859 --> 00:17:14,339
the security and stuff like that is

394
00:17:14,339 --> 00:17:17,640
um is high in this case but okay so I

395
00:17:17,640 --> 00:17:19,260
finished here my presentation so I don't

396
00:17:19,260 --> 00:17:21,020
know if the people have some questions

397
00:17:21,020 --> 00:17:25,980
it's a short time I'm I know but I think

398
00:17:25,980 --> 00:17:28,020
I think we have a second uh we have a

399
00:17:28,020 --> 00:17:29,460
second for questions I've got one

400
00:17:29,460 --> 00:17:33,140
question lined up and let me uh

401
00:17:33,140 --> 00:17:34,980
thank you

402
00:17:34,980 --> 00:17:37,200
um somebody started with with which one

403
00:17:37,200 --> 00:17:40,620
is better to start with SAS dust or SCA

404
00:17:40,620 --> 00:17:42,900
and how do you handle a vulnerability in

405
00:17:42,900 --> 00:17:45,419
an indirect Library which is basically

406
00:17:45,419 --> 00:17:47,820
two questions in one but what is your

407
00:17:47,820 --> 00:17:49,559
take on that uh Felipe

408
00:17:49,559 --> 00:17:52,020
yeah yeah actually it depends of the

409
00:17:52,020 --> 00:17:53,400
environment it depends of the company

410
00:17:53,400 --> 00:17:56,700
and Depends of the budget many factors

411
00:17:56,700 --> 00:18:00,539
of course because actually usually it

412
00:18:00,539 --> 00:18:02,880
depends why it depends because for

413
00:18:02,880 --> 00:18:04,740
example if you have a company and you

414
00:18:04,740 --> 00:18:06,660
have an application publish it probably

415
00:18:06,660 --> 00:18:09,000
you you're looking for the dust because

416
00:18:09,000 --> 00:18:10,860
you have a product you have a

417
00:18:10,860 --> 00:18:12,720
application publish it so you can run

418
00:18:12,720 --> 00:18:15,059
the dust after you publish yourself

419
00:18:15,059 --> 00:18:17,400
usually you can look in more in the

420
00:18:17,400 --> 00:18:19,080
first for the test and the second way

421
00:18:19,080 --> 00:18:22,559
the com or the team is using the sassy

422
00:18:22,559 --> 00:18:23,940
approach because if you're looking from

423
00:18:23,940 --> 00:18:26,820
inside of the code and not only the code

424
00:18:26,820 --> 00:18:29,460
that you usually you using some tools to

425
00:18:29,460 --> 00:18:31,200
help you for the ssca because you

426
00:18:31,200 --> 00:18:33,539
looking from the components inside of

427
00:18:33,539 --> 00:18:35,820
your code that you need to run for the

428
00:18:35,820 --> 00:18:37,380
application or maybe your application

429
00:18:37,380 --> 00:18:39,600
depends of this specifically third

430
00:18:39,600 --> 00:18:42,980
libraries or you know other

431
00:18:42,980 --> 00:18:45,720
components inside of your code so it

432
00:18:45,720 --> 00:18:48,539
usually it's not a rule but usually it

433
00:18:48,539 --> 00:18:50,760
started for test because

434
00:18:50,760 --> 00:18:52,320
you know probably you already heard

435
00:18:52,320 --> 00:18:54,240
about that so the company think about

436
00:18:54,240 --> 00:18:56,460
security after they start the job you

437
00:18:56,460 --> 00:18:58,440
know so I have a product I publish it to

438
00:18:58,440 --> 00:18:59,880
the community I publish it for the

439
00:18:59,880 --> 00:19:03,179
market and after that so we I need to

440
00:19:03,179 --> 00:19:05,160
prepare some security requires let's see

441
00:19:05,160 --> 00:19:07,799
how the code works so now I need to look

442
00:19:07,799 --> 00:19:09,419
in from the code oh my goodness so what

443
00:19:09,419 --> 00:19:11,640
what I need to do and that's the point

444
00:19:11,640 --> 00:19:12,539
here is

445
00:19:12,539 --> 00:19:15,179
yeah and about that the library is

446
00:19:15,179 --> 00:19:18,179
basically so uh is necessary to help to

447
00:19:18,179 --> 00:19:20,880
using tools to help you you know to

448
00:19:20,880 --> 00:19:22,440
because

449
00:19:22,440 --> 00:19:24,960
you know in the end of the day is it

450
00:19:24,960 --> 00:19:27,419
your applications publish it and I think

451
00:19:27,419 --> 00:19:29,280
I think it's I think it's also different

452
00:19:29,280 --> 00:19:31,500
per ecosystem like in some ecosystem you

453
00:19:31,500 --> 00:19:33,539
can exclude libraries specifically or

454
00:19:33,539 --> 00:19:36,419
you can override them by something so uh

455
00:19:36,419 --> 00:19:37,919
with vulnerabilities in an indirect

456
00:19:37,919 --> 00:19:40,320
Library uh yeah that's a bit of a puzzle

457
00:19:40,320 --> 00:19:41,580
so

458
00:19:41,580 --> 00:19:44,340
but I think thank you thank you for this

459
00:19:44,340 --> 00:19:46,200
and uh as always if you have more

460
00:19:46,200 --> 00:19:48,360
questions feel free to move over to our

461
00:19:48,360 --> 00:19:51,179
Discord Channel as you see exactly URL

462
00:19:51,179 --> 00:19:53,160
over here uh and Philippe will be more

463
00:19:53,160 --> 00:19:55,140
than happy to help you outload it thank

464
00:19:55,140 --> 00:19:58,020
you Felipe and uh a great talk and we go

465
00:19:58,020 --> 00:20:01,220
on to the next person

