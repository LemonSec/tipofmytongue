1
00:00:00,000 --> 00:00:03,000
yeah sure thing all right our next

2
00:00:03,000 --> 00:00:04,940
speaker is

3
00:00:04,940 --> 00:00:08,820
and he's a senior security architect and

4
00:00:08,820 --> 00:00:11,460
and math developer so Raymond is a

5
00:00:11,460 --> 00:00:13,920
security ninja open source contributor

6
00:00:13,920 --> 00:00:16,260
and Senior security architect at

7
00:00:16,260 --> 00:00:18,900
Emirates National Bank of Dubai he is

8
00:00:18,900 --> 00:00:21,359
passionate about devsecops application

9
00:00:21,359 --> 00:00:25,680
and container security he added 17 000

10
00:00:25,680 --> 00:00:28,800
plus lines of code to end math

11
00:00:28,800 --> 00:00:31,080
um holds industry certifications like

12
00:00:31,080 --> 00:00:34,079
cks and cka Etc

13
00:00:34,079 --> 00:00:36,540
everyone speaks and delivers training at

14
00:00:36,540 --> 00:00:38,160
International Security conferences

15
00:00:38,160 --> 00:00:40,680
worldwide including black hat Defcon

16
00:00:40,680 --> 00:00:44,100
hack in the box and multiple others he

17
00:00:44,100 --> 00:00:46,140
was recognized as one of the MVP

18
00:00:46,140 --> 00:00:48,840
researchers on bug crowd and identified

19
00:00:48,840 --> 00:00:51,120
vulnerabilities in several organizations

20
00:00:51,120 --> 00:00:54,120
he also published an IEEE research paper

21
00:00:54,120 --> 00:00:55,920
on an offensive attack in machine

22
00:00:55,920 --> 00:00:58,440
learning and security who is also part

23
00:00:58,440 --> 00:01:01,320
of the renowned Google summer of code

24
00:01:01,320 --> 00:01:02,640
program

25
00:01:02,640 --> 00:01:04,860
all right and bremont will be talking

26
00:01:04,860 --> 00:01:07,920
about the s-bomb

27
00:01:07,920 --> 00:01:10,680
so s-bomb the inescapable way of

28
00:01:10,680 --> 00:01:12,420
tracking dependencies

29
00:01:12,420 --> 00:01:14,820
amazing welcome everyone and so looking

30
00:01:14,820 --> 00:01:16,860
forward to your talk I think I was just

31
00:01:16,860 --> 00:01:18,900
telling uh earlier when we kicked off

32
00:01:18,900 --> 00:01:20,939
devsecond that you know I think in 2022

33
00:01:20,939 --> 00:01:22,799
if you say s bomb three times like a

34
00:01:22,799 --> 00:01:24,240
genie appears so I don't know if you

35
00:01:24,240 --> 00:01:26,100
agree with that because it has become

36
00:01:26,100 --> 00:01:28,080
one of those words that everyone you

37
00:01:28,080 --> 00:01:29,820
know it's become a buzzword but it is

38
00:01:29,820 --> 00:01:31,080
just one of those things that is so

39
00:01:31,080 --> 00:01:33,659
crucial to I guess security as well so

40
00:01:33,659 --> 00:01:35,220
I'm really looking forward to this talk

41
00:01:35,220 --> 00:01:38,400
uh we'll bring up your slides as well

42
00:01:38,400 --> 00:01:40,560
and promo and I will just tuck away in

43
00:01:40,560 --> 00:01:43,460
the background and let you take it away

44
00:01:43,460 --> 00:01:46,200
yeah sure awesome

45
00:01:46,200 --> 00:01:48,299
and thank you both for the amazing

46
00:01:48,299 --> 00:01:51,240
introduction and I was speaking about as

47
00:01:51,240 --> 00:01:55,680
bombs so I'll just get started quickly

48
00:01:55,680 --> 00:01:57,899
just a quick introduction about me I

49
00:01:57,899 --> 00:02:00,299
guess already the

50
00:02:00,299 --> 00:02:02,159
they have introduced me so I'll skip

51
00:02:02,159 --> 00:02:05,100
this slides and what to expect we'll

52
00:02:05,100 --> 00:02:07,079
discuss about why s bombs are required

53
00:02:07,079 --> 00:02:09,840
and what it is and how

54
00:02:09,840 --> 00:02:12,180
you can use as bombs

55
00:02:12,180 --> 00:02:15,180
so they why before diving into the wild

56
00:02:15,180 --> 00:02:17,760
let's just see some of the recent hacks

57
00:02:17,760 --> 00:02:19,020
that happened

58
00:02:19,020 --> 00:02:21,540
on various companies and open source

59
00:02:21,540 --> 00:02:22,980
projects

60
00:02:22,980 --> 00:02:25,920
so one of the famous hacks that happened

61
00:02:25,920 --> 00:02:28,920
was on the faker and color JS where a

62
00:02:28,920 --> 00:02:32,160
developer himself corrupts his

63
00:02:32,160 --> 00:02:34,260
package and

64
00:02:34,260 --> 00:02:37,319
releases a false update

65
00:02:37,319 --> 00:02:39,480
if you see the figure JS it's having

66
00:02:39,480 --> 00:02:43,319
around 2.6 weekly 2.6 million weekly

67
00:02:43,319 --> 00:02:44,400
downloads

68
00:02:44,400 --> 00:02:46,680
and similarly colors this is another

69
00:02:46,680 --> 00:02:49,080
package which has got 20.7 million

70
00:02:49,080 --> 00:02:51,599
weekly downloads

71
00:02:51,599 --> 00:02:55,860
and figure has around 2600 dependents so

72
00:02:55,860 --> 00:02:59,280
it means if Faker JS package is affected

73
00:02:59,280 --> 00:03:01,980
it will subsequently affect 2600 more

74
00:03:01,980 --> 00:03:03,540
packages

75
00:03:03,540 --> 00:03:06,239
and similarly colors package is being

76
00:03:06,239 --> 00:03:07,980
used by 20

77
00:03:07,980 --> 00:03:10,860
000 plus dependents so one of them gets

78
00:03:10,860 --> 00:03:11,819
affected

79
00:03:11,819 --> 00:03:13,920
the ripples are gonna go through

80
00:03:13,920 --> 00:03:16,560
multiple other packages and if someone

81
00:03:16,560 --> 00:03:18,480
else is using these packages those will

82
00:03:18,480 --> 00:03:20,580
be affected subsequently

83
00:03:20,580 --> 00:03:22,560
and one of the other attacks that

84
00:03:22,560 --> 00:03:24,060
happened was on the python Library

85
00:03:24,060 --> 00:03:27,200
called SSH decorate where the attacker

86
00:03:27,200 --> 00:03:30,659
has back doored the package to steal

87
00:03:30,659 --> 00:03:33,300
your private SSH keys so they can use

88
00:03:33,300 --> 00:03:35,220
that to login into your remote servers

89
00:03:35,220 --> 00:03:36,000
and

90
00:03:36,000 --> 00:03:39,080
do nasty things

91
00:03:39,300 --> 00:03:41,159
and there is another attack called type

92
00:03:41,159 --> 00:03:42,900
of squatting

93
00:03:42,900 --> 00:03:45,780
it's mostly based on brand hijacking

94
00:03:45,780 --> 00:03:49,440
where they just tweak one or two letters

95
00:03:49,440 --> 00:03:51,540
in the package names and try to release

96
00:03:51,540 --> 00:03:53,459
a false package

97
00:03:53,459 --> 00:03:56,340
for example kalaroma is one of the pipei

98
00:03:56,340 --> 00:03:58,440
package but the attackers released

99
00:03:58,440 --> 00:04:01,620
something with cyl o u r which is mostly

100
00:04:01,620 --> 00:04:04,260
used in the U.S terminology

101
00:04:04,260 --> 00:04:07,200
and this package has a malware dropper

102
00:04:07,200 --> 00:04:09,540
that will

103
00:04:09,540 --> 00:04:11,280
come onto your machine once you install

104
00:04:11,280 --> 00:04:12,599
this package it will automatically

105
00:04:12,599 --> 00:04:14,700
install the malware on your system and

106
00:04:14,700 --> 00:04:17,060
tries to copy your

107
00:04:17,060 --> 00:04:20,579
crypto wallet numbers like for example

108
00:04:20,579 --> 00:04:22,320
if you see here

109
00:04:22,320 --> 00:04:25,139
this is the actual it will replace the

110
00:04:25,139 --> 00:04:29,220
targets uh cryptocurrency value so

111
00:04:29,220 --> 00:04:32,160
whenever you want to send money to your

112
00:04:32,160 --> 00:04:34,380
person a it will replace it with this

113
00:04:34,380 --> 00:04:36,120
attacker Bitcoin address so you will

114
00:04:36,120 --> 00:04:37,560
never get to know but the money will be

115
00:04:37,560 --> 00:04:38,940
transferred to the

116
00:04:38,940 --> 00:04:42,060
attackers Bitcoin account

117
00:04:42,060 --> 00:04:43,979
so this is also one of the hacks that

118
00:04:43,979 --> 00:04:45,479
happened

119
00:04:45,479 --> 00:04:48,139
and log4j is one of the most famous

120
00:04:48,139 --> 00:04:51,120
vulnerability that came in the recent

121
00:04:51,120 --> 00:04:53,759
times that triggered the entire

122
00:04:53,759 --> 00:04:56,759
the start of supply chain security and

123
00:04:56,759 --> 00:04:58,320
its awareness

124
00:04:58,320 --> 00:05:00,180
so if you I want you to observe the

125
00:05:00,180 --> 00:05:01,320
timelines

126
00:05:01,320 --> 00:05:03,960
the issue was first reported on November

127
00:05:03,960 --> 00:05:07,320
11th and on December 1st they first saw

128
00:05:07,320 --> 00:05:09,840
this vulnerability being exploited

129
00:05:09,840 --> 00:05:12,660
and on December 13th the first patch got

130
00:05:12,660 --> 00:05:14,699
released so from December 1st till

131
00:05:14,699 --> 00:05:16,380
December 13th

132
00:05:16,380 --> 00:05:19,919
the exploit is available publicly and

133
00:05:19,919 --> 00:05:21,840
even on December 9th it got exploded on

134
00:05:21,840 --> 00:05:24,600
Twitter and everyone has access to this

135
00:05:24,600 --> 00:05:26,460
but there was no patch available until

136
00:05:26,460 --> 00:05:28,500
December 13th

137
00:05:28,500 --> 00:05:30,900
so from December 1st to 13th the

138
00:05:30,900 --> 00:05:33,360
vulnerability was being exploited and

139
00:05:33,360 --> 00:05:34,979
people has no clue about it because

140
00:05:34,979 --> 00:05:37,139
there was no official patch on that

141
00:05:37,139 --> 00:05:40,380
and similarly since it got super famous

142
00:05:40,380 --> 00:05:42,419
following on the other days there were

143
00:05:42,419 --> 00:05:44,759
multiple other vulnerabilities that

144
00:05:44,759 --> 00:05:48,419
the researchers identified and

145
00:05:48,419 --> 00:05:51,840
those have been patched after a while

146
00:05:51,840 --> 00:05:54,000
so if you see here on December 14th

147
00:05:54,000 --> 00:05:55,740
another vulnerability got published and

148
00:05:55,740 --> 00:05:57,960
it got passed on December 18th

149
00:05:57,960 --> 00:06:01,380
so that's an issue and there are the

150
00:06:01,380 --> 00:06:03,600
other hacks that happened in the past

151
00:06:03,600 --> 00:06:05,340
two years

152
00:06:05,340 --> 00:06:08,100
on these open source packages in

153
00:06:08,100 --> 00:06:10,380
Homebrew PHP code curve vs code and

154
00:06:10,380 --> 00:06:12,539
multiple others

155
00:06:12,539 --> 00:06:15,060
so this is a one of the reference thing

156
00:06:15,060 --> 00:06:17,520
on by tag security you can go here and

157
00:06:17,520 --> 00:06:19,860
read more about the other hacks that

158
00:06:19,860 --> 00:06:20,940
happened

159
00:06:20,940 --> 00:06:23,100
so why do these supply chain compromises

160
00:06:23,100 --> 00:06:26,400
happen what's the primary reason for it

161
00:06:26,400 --> 00:06:28,440
I truly believe it's because the

162
00:06:28,440 --> 00:06:30,539
attacker knows your system better than

163
00:06:30,539 --> 00:06:31,620
you do

164
00:06:31,620 --> 00:06:33,360
he knows more about what kind of

165
00:06:33,360 --> 00:06:35,100
packages you are using or what kind of

166
00:06:35,100 --> 00:06:37,259
services you are exposing and you don't

167
00:06:37,259 --> 00:06:40,139
have any way to track these things or

168
00:06:40,139 --> 00:06:42,180
even if you are tracking them you need

169
00:06:42,180 --> 00:06:44,699
to have actionable points just having

170
00:06:44,699 --> 00:06:46,560
the information will not help you need

171
00:06:46,560 --> 00:06:49,020
to make sure you are utilizing the

172
00:06:49,020 --> 00:06:50,940
information that you have so that you

173
00:06:50,940 --> 00:06:52,319
can take some

174
00:06:52,319 --> 00:06:55,520
active measures

175
00:06:56,039 --> 00:06:58,199
so according to a research done by Wiz

176
00:06:58,199 --> 00:07:01,080
and ey even after 10 days of

177
00:07:01,080 --> 00:07:04,199
the log4j team released the patch only

178
00:07:04,199 --> 00:07:06,960
50 percent of the companies have patched

179
00:07:06,960 --> 00:07:10,259
their systems and 55 50 of 45 percent of

180
00:07:10,259 --> 00:07:12,840
the companies still left their systems

181
00:07:12,840 --> 00:07:15,900
unpatched despite being a critical

182
00:07:15,900 --> 00:07:18,380
vulnerability

183
00:07:18,380 --> 00:07:21,720
so why do you think

184
00:07:21,720 --> 00:07:25,319
this 50 of the companies did not patch

185
00:07:25,319 --> 00:07:26,819
the system is it because they're

186
00:07:26,819 --> 00:07:28,560
negligent they want to get hacked or

187
00:07:28,560 --> 00:07:32,340
lose reputation no none of these are the

188
00:07:32,340 --> 00:07:33,360
reasons

189
00:07:33,360 --> 00:07:36,120
it's purely because they don't know what

190
00:07:36,120 --> 00:07:38,280
to look for they don't have insights on

191
00:07:38,280 --> 00:07:40,259
where this log 4J is being used on their

192
00:07:40,259 --> 00:07:42,900
system or any package for that matter or

193
00:07:42,900 --> 00:07:44,819
if the package is a dependency or a sub

194
00:07:44,819 --> 00:07:46,680
dependency of another package they don't

195
00:07:46,680 --> 00:07:48,539
have any visibility on these components

196
00:07:48,539 --> 00:07:51,060
that's one of the reason companies like

197
00:07:51,060 --> 00:07:53,400
to fix these things and the attackers

198
00:07:53,400 --> 00:07:58,259
tend to identify this in the first place

199
00:07:58,259 --> 00:08:01,139
so s bomb comes here for the rescue and

200
00:08:01,139 --> 00:08:03,180
as bomb refers to the software bill of

201
00:08:03,180 --> 00:08:04,919
materials and this is how it looks like

202
00:08:04,919 --> 00:08:06,840
for example this is the s-bomb generated

203
00:08:06,840 --> 00:08:09,000
for an nginx Docker image

204
00:08:09,000 --> 00:08:12,720
and you can see it lists down all the

205
00:08:12,720 --> 00:08:14,639
package information that your image is

206
00:08:14,639 --> 00:08:17,099
having along with their versioning and

207
00:08:17,099 --> 00:08:19,919
their licenses and a lot more we'll go

208
00:08:19,919 --> 00:08:21,960
through them

209
00:08:21,960 --> 00:08:24,660
so the what

210
00:08:24,660 --> 00:08:28,740
so just to give it a simple analogy

211
00:08:28,740 --> 00:08:30,440
I'm sure most of you might love

212
00:08:30,440 --> 00:08:33,000
chocolate chip cookies

213
00:08:33,000 --> 00:08:35,219
so when you want to make one or when you

214
00:08:35,219 --> 00:08:37,679
want to understand how one is made you

215
00:08:37,679 --> 00:08:39,059
need to have the complete list of

216
00:08:39,059 --> 00:08:43,020
ingredients that Source the quantity and

217
00:08:43,020 --> 00:08:44,520
how long you have to brew it and

218
00:08:44,520 --> 00:08:46,440
everything

219
00:08:46,440 --> 00:08:49,800
so s bomb is similar to this

220
00:08:49,800 --> 00:08:51,720
instead of giving information about

221
00:08:51,720 --> 00:08:53,459
chocolate chip cookies you will have

222
00:08:53,459 --> 00:08:55,500
every detailed information about this

223
00:08:55,500 --> 00:08:58,140
software or the components that are

224
00:08:58,140 --> 00:09:00,660
involved in building the software their

225
00:09:00,660 --> 00:09:02,399
versioning their licenses when they got

226
00:09:02,399 --> 00:09:05,519
released and if there are any cves if

227
00:09:05,519 --> 00:09:06,959
there are any vulnerabilities associated

228
00:09:06,959 --> 00:09:08,399
with those packages it will give

229
00:09:08,399 --> 00:09:10,800
information of them as well

230
00:09:10,800 --> 00:09:12,740
so how can you

231
00:09:12,740 --> 00:09:15,180
look for these packages so how can you

232
00:09:15,180 --> 00:09:17,279
look for these vulnerabilities or how

233
00:09:17,279 --> 00:09:19,800
can you generate these response

234
00:09:19,800 --> 00:09:22,440
so there are several tools available on

235
00:09:22,440 --> 00:09:24,300
the public and one of them is Trivial

236
00:09:24,300 --> 00:09:26,519
made by Aqua security

237
00:09:26,519 --> 00:09:29,339
you can use this to generate the s-bombs

238
00:09:29,339 --> 00:09:32,519
for example here I'm just looking for

239
00:09:32,519 --> 00:09:34,740
the vulnerabilities in the images I

240
00:09:34,740 --> 00:09:37,140
haven't generated the s-bomb yet and it

241
00:09:37,140 --> 00:09:38,420
shows there are around

242
00:09:38,420 --> 00:09:41,880
1258 vulnerabilities in a standard node

243
00:09:41,880 --> 00:09:44,300
image

244
00:09:44,399 --> 00:09:46,560
so how can you get this information into

245
00:09:46,560 --> 00:09:49,399
an s-bomb

246
00:09:49,500 --> 00:09:52,800
so you can have this similar command

247
00:09:52,800 --> 00:09:55,680
executed where you have to specify the

248
00:09:55,680 --> 00:09:58,560
type of information

249
00:09:58,560 --> 00:10:00,600
and

250
00:10:00,600 --> 00:10:03,120
it will generate the s-bomb for you for

251
00:10:03,120 --> 00:10:05,279
example let's say you are building a

252
00:10:05,279 --> 00:10:07,680
node.js application and you want to

253
00:10:07,680 --> 00:10:10,320
identify what kind of licenses are

254
00:10:10,320 --> 00:10:12,839
involved with the different packages

255
00:10:12,839 --> 00:10:14,480
that you install on the node.js

256
00:10:14,480 --> 00:10:17,820
application for example as most of you

257
00:10:17,820 --> 00:10:20,339
might have tried building a node.js

258
00:10:20,339 --> 00:10:23,339
application and it downloads so many

259
00:10:23,339 --> 00:10:24,540
dependencies

260
00:10:24,540 --> 00:10:26,459
so in this case just for this standard

261
00:10:26,459 --> 00:10:28,800
node.js image there are so many packages

262
00:10:28,800 --> 00:10:31,380
that involves 131 different types of

263
00:10:31,380 --> 00:10:33,060
licenses

264
00:10:33,060 --> 00:10:35,279
and they we are able to get this

265
00:10:35,279 --> 00:10:37,080
information through generating the S

266
00:10:37,080 --> 00:10:39,360
forms and then passing the output

267
00:10:39,360 --> 00:10:42,600
and listing down for The Unique ones

268
00:10:42,600 --> 00:10:44,279
so you can read more about this over

269
00:10:44,279 --> 00:10:45,540
here

270
00:10:45,540 --> 00:10:48,779
and just having this information is not

271
00:10:48,779 --> 00:10:51,480
helpful you need to visualize it

272
00:10:51,480 --> 00:10:53,640
sometimes it's easier to visualize

273
00:10:53,640 --> 00:10:55,560
rather than just seeing the things so

274
00:10:55,560 --> 00:10:57,480
there is an amazing project called guac

275
00:10:57,480 --> 00:11:00,060
as for graph for understanding artifact

276
00:11:00,060 --> 00:11:01,680
composition

277
00:11:01,680 --> 00:11:04,019
it looks something like this where you

278
00:11:04,019 --> 00:11:06,120
can pass your s-bomb information once

279
00:11:06,120 --> 00:11:07,980
you generate them and then it will

280
00:11:07,980 --> 00:11:10,980
visualize it for you and you'll be able

281
00:11:10,980 --> 00:11:14,040
to go more deep into it and it can get

282
00:11:14,040 --> 00:11:17,339
as complex as this where I'm looking at

283
00:11:17,339 --> 00:11:19,800
the packages in the cube controller

284
00:11:19,800 --> 00:11:21,540
manager container

285
00:11:21,540 --> 00:11:23,279
and it will list down all the binaries

286
00:11:23,279 --> 00:11:25,200
and what is dependent on where

287
00:11:25,200 --> 00:11:27,779
and just to show a live interactive demo

288
00:11:27,779 --> 00:11:32,040
so this is a Docker bash image and it is

289
00:11:32,040 --> 00:11:33,779
having all these dependencies

290
00:11:33,779 --> 00:11:37,140
so if I go to this one and I can just

291
00:11:37,140 --> 00:11:39,480
click on the expand graph so if there

292
00:11:39,480 --> 00:11:41,339
are any other sub dependencies or

293
00:11:41,339 --> 00:11:43,140
something else depending on this package

294
00:11:43,140 --> 00:11:45,360
it will show you all the list of

295
00:11:45,360 --> 00:11:47,279
information over there

296
00:11:47,279 --> 00:11:49,680
so in this way it gets much interactive

297
00:11:49,680 --> 00:11:52,079
and you might some might prefer this way

298
00:11:52,079 --> 00:11:52,920
of

299
00:11:52,920 --> 00:11:55,920
visualization

300
00:11:56,579 --> 00:11:59,480
so you can definitely try out guac for

301
00:11:59,480 --> 00:12:03,240
to explore more into this

302
00:12:03,240 --> 00:12:04,920
and also it's good to have these as

303
00:12:04,920 --> 00:12:06,420
firms generated with all the list of

304
00:12:06,420 --> 00:12:08,640
information but it's equally important

305
00:12:08,640 --> 00:12:10,620
to secure them

306
00:12:10,620 --> 00:12:13,440
so six stores is another open source

307
00:12:13,440 --> 00:12:15,600
project that works towards securing

308
00:12:15,600 --> 00:12:18,660
these artifacts and your Docker images

309
00:12:18,660 --> 00:12:21,420
or any artifact for that matter

310
00:12:21,420 --> 00:12:23,700
so I have released the six story easy

311
00:12:23,700 --> 00:12:26,459
web guide It's a practical approach on

312
00:12:26,459 --> 00:12:28,380
very easily getting started with six

313
00:12:28,380 --> 00:12:31,800
store and securing your response so you

314
00:12:31,800 --> 00:12:33,839
can definitely have a look at it and try

315
00:12:33,839 --> 00:12:36,660
to secure your s-bombs as well

316
00:12:36,660 --> 00:12:39,560
and even s-bombs have been so famous

317
00:12:39,560 --> 00:12:44,100
that even the NSA has released their own

318
00:12:44,100 --> 00:12:46,160
guide on securing the supply chain

319
00:12:46,160 --> 00:12:48,480
artifacts and they have explained more

320
00:12:48,480 --> 00:12:49,440
about

321
00:12:49,440 --> 00:12:52,139
how you can secure these s-bombs and

322
00:12:52,139 --> 00:12:54,839
about other things like vulnerability

323
00:12:54,839 --> 00:12:58,079
exploitation metrics and stuff

324
00:12:58,079 --> 00:12:59,339
okay

325
00:12:59,339 --> 00:13:02,940
so what are my thoughts my feeling is

326
00:13:02,940 --> 00:13:04,920
supply chain security is open source

327
00:13:04,920 --> 00:13:06,120
security

328
00:13:06,120 --> 00:13:08,339
most of the open source code used by

329
00:13:08,339 --> 00:13:10,620
people isn't updated and hence you need

330
00:13:10,620 --> 00:13:13,200
to have a proper way of tracking your

331
00:13:13,200 --> 00:13:15,120
dependencies and when something happens

332
00:13:15,120 --> 00:13:17,519
you'll have the complete information

333
00:13:17,519 --> 00:13:20,220
so that you can take an immediate action

334
00:13:20,220 --> 00:13:21,720
that's where I feel the responsible

335
00:13:21,720 --> 00:13:24,480
player crucial part

336
00:13:24,480 --> 00:13:26,820
and you can connect with me on these

337
00:13:26,820 --> 00:13:28,139
social medias

338
00:13:28,139 --> 00:13:30,420
on Twitter LinkedIn and this is my

339
00:13:30,420 --> 00:13:31,740
website

340
00:13:31,740 --> 00:13:34,860
I hope this is useful and just at least

341
00:13:34,860 --> 00:13:37,260
getting an idea about what a sperms are

342
00:13:37,260 --> 00:13:40,079
and how you can go ahead

343
00:13:40,079 --> 00:13:41,760
let's get me started

344
00:13:41,760 --> 00:13:43,380
thank you so much for that everyone I

345
00:13:43,380 --> 00:13:45,120
think it was really really good and I

346
00:13:45,120 --> 00:13:47,040
think we just had careful chat

347
00:13:47,040 --> 00:13:48,420
mentioning as well that it's good that

348
00:13:48,420 --> 00:13:49,440
someone's actually

349
00:13:49,440 --> 00:13:51,180
um covering goac as well because he just

350
00:13:51,180 --> 00:13:52,620
covered salsa so it actually

351
00:13:52,620 --> 00:13:54,839
complimented that really really well and

352
00:13:54,839 --> 00:13:57,300
not to stretch the analogy because salsa

353
00:13:57,300 --> 00:13:59,459
and guac I always find that a bit funny

354
00:13:59,459 --> 00:14:00,959
but um and that was a really good

355
00:14:00,959 --> 00:14:03,600
Insight I think I I liked you know how

356
00:14:03,600 --> 00:14:04,920
you kind of explained the things with

357
00:14:04,920 --> 00:14:06,600
the chocolate chip cookie I don't know

358
00:14:06,600 --> 00:14:09,560
about anyone else but I'm not sure

359
00:14:09,560 --> 00:14:11,940
yes I think it is really really

360
00:14:11,940 --> 00:14:13,500
interesting and and the fact that you

361
00:14:13,500 --> 00:14:15,660
said you know that attackers do know

362
00:14:15,660 --> 00:14:17,940
your environment often better than you

363
00:14:17,940 --> 00:14:19,560
do I think that's a really good thing

364
00:14:19,560 --> 00:14:20,820
that you mentioned because it is very

365
00:14:20,820 --> 00:14:23,339
true with the world of Open Source

366
00:14:23,339 --> 00:14:25,139
um you know it often it is out there for

367
00:14:25,139 --> 00:14:26,760
everyone to see exactly what goes in

368
00:14:26,760 --> 00:14:28,320
that software as well so that was really

369
00:14:28,320 --> 00:14:30,600
really insightful and thank you so much

370
00:14:30,600 --> 00:14:32,100
for joining us and you know sharing your

371
00:14:32,100 --> 00:14:33,600
knowledge here as well

372
00:14:33,600 --> 00:14:35,040
um I'm just gonna quickly see if there

373
00:14:35,040 --> 00:14:36,839
are any questions but yeah if anyone

374
00:14:36,839 --> 00:14:38,339
does have any questions that they want

375
00:14:38,339 --> 00:14:39,480
to pop in

376
00:14:39,480 --> 00:14:41,220
um do send them across but otherwise you

377
00:14:41,220 --> 00:14:43,440
know um ravanth has generously shared

378
00:14:43,440 --> 00:14:45,120
his details as well so I'm sure he'd be

379
00:14:45,120 --> 00:14:46,620
happy to answer any questions they have

380
00:14:46,620 --> 00:14:48,980
in the future

