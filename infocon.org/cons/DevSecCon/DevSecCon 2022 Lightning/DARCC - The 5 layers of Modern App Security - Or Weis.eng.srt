1
00:00:00,120 --> 00:00:02,040
right we've got to keep it on time here

2
00:00:02,040 --> 00:00:03,899
Brian enough chatting from me and you

3
00:00:03,899 --> 00:00:06,899
and more chatting from our uh keynote

4
00:00:06,899 --> 00:00:09,840
speaker for this session uh welcome all

5
00:00:09,840 --> 00:00:11,600
from permit.io

6
00:00:11,600 --> 00:00:14,750
[Music]

7
00:00:17,480 --> 00:00:20,340
I seem to have a cloud over my head in

8
00:00:20,340 --> 00:00:23,279
this uh in this layout here but let's uh

9
00:00:23,279 --> 00:00:26,460
add your um your slides to the stream

10
00:00:26,460 --> 00:00:28,500
and uh Brian and I will get out the way

11
00:00:28,500 --> 00:00:31,439
and the floor is yours or

12
00:00:31,439 --> 00:00:35,579
thank you hi everyone I'm excited to be

13
00:00:35,579 --> 00:00:37,200
here uh today we're going to talk about

14
00:00:37,200 --> 00:00:41,160
dark dark is a framework

15
00:00:41,160 --> 00:00:45,600
um a methodology to work on devsecops

16
00:00:45,600 --> 00:00:47,340
um a little before we dive in a little

17
00:00:47,340 --> 00:00:49,800
about myself my name is or Weiss my

18
00:00:49,800 --> 00:00:51,300
background starts in the intelligence

19
00:00:51,300 --> 00:00:54,780
score in the IDF but at core I'm a

20
00:00:54,780 --> 00:00:56,579
developer and a security practitioner

21
00:00:56,579 --> 00:00:58,680
nowadays I am the founder and CEO of

22
00:00:58,680 --> 00:01:01,620
permit ioa Access Control solution we

23
00:01:01,620 --> 00:01:03,239
basically enable you to never build

24
00:01:03,239 --> 00:01:05,220
permissions again and I'm also honored

25
00:01:05,220 --> 00:01:08,520
to be a Snick Ambassador and try to

26
00:01:08,520 --> 00:01:11,040
promote cyber security and best

27
00:01:11,040 --> 00:01:12,960
practices for developers or around the

28
00:01:12,960 --> 00:01:14,400
world

29
00:01:14,400 --> 00:01:17,580
um move out for Virgie Let's uh Dive In

30
00:01:17,580 --> 00:01:22,380
so one of the challenges that people are

31
00:01:22,380 --> 00:01:24,240
facing today and it's probably the

32
00:01:24,240 --> 00:01:26,040
opening statement for almost any talk

33
00:01:26,040 --> 00:01:28,860
you hear today is the complexity of

34
00:01:28,860 --> 00:01:31,500
software uh the software stack that

35
00:01:31,500 --> 00:01:33,360
we're building is getting bigger we're

36
00:01:33,360 --> 00:01:35,040
adding more parts we're adding more

37
00:01:35,040 --> 00:01:37,500
layers uh there are a lot of weak links

38
00:01:37,500 --> 00:01:40,259
that are added into the chain and this

39
00:01:40,259 --> 00:01:42,000
just translates to a lot of attack

40
00:01:42,000 --> 00:01:44,820
surfaces essentially attack surfaces all

41
00:01:44,820 --> 00:01:47,759
over the plane and a lot of times when

42
00:01:47,759 --> 00:01:49,680
we try to communicate with our team

43
00:01:49,680 --> 00:01:51,720
trying to communicate with vendors that

44
00:01:51,720 --> 00:01:53,579
we're working with trying to communicate

45
00:01:53,579 --> 00:01:55,920
with customers we're serving trying to

46
00:01:55,920 --> 00:01:59,180
communicate between Dev Ops and security

47
00:01:59,180 --> 00:02:01,979
uh it can be very challenging just to

48
00:02:01,979 --> 00:02:03,420
wrap our hands around all of these

49
00:02:03,420 --> 00:02:05,820
surfaces and sometimes it can feel like

50
00:02:05,820 --> 00:02:09,720
we get lost in the dark to kind of give

51
00:02:09,720 --> 00:02:11,038
an example here so we can understand

52
00:02:11,038 --> 00:02:13,260
what I'm talking about

53
00:02:13,260 --> 00:02:15,239
um I have an example here of a

54
00:02:15,239 --> 00:02:17,520
healthcare startup that does something

55
00:02:17,520 --> 00:02:20,220
ever basic for a healthcare startup it

56
00:02:20,220 --> 00:02:22,260
connects with something that they Deploy

57
00:02:22,260 --> 00:02:25,739
on the hospital side and then they

58
00:02:25,739 --> 00:02:27,239
provide a machine learning driven

59
00:02:27,239 --> 00:02:29,400
service with a back-end part and a

60
00:02:29,400 --> 00:02:32,700
front-end application to their customers

61
00:02:32,700 --> 00:02:34,680
which include both patients and doctors

62
00:02:34,680 --> 00:02:37,080
that work on that data they have data

63
00:02:37,080 --> 00:02:38,819
scientists working in the background to

64
00:02:38,819 --> 00:02:41,040
build a machine learning model to train

65
00:02:41,040 --> 00:02:43,500
it and load it to be used in inference

66
00:02:43,500 --> 00:02:45,660
they have the platform Engineers kind of

67
00:02:45,660 --> 00:02:46,560
uh

68
00:02:46,560 --> 00:02:48,660
coping and planning everything and

69
00:02:48,660 --> 00:02:50,760
obviously r d building all of the

70
00:02:50,760 --> 00:02:52,700
elements here

71
00:02:52,700 --> 00:02:55,440
and just looking at this picture I think

72
00:02:55,440 --> 00:02:58,200
it's already kind of jumping out all the

73
00:02:58,200 --> 00:03:00,360
different points were valuable and

74
00:03:00,360 --> 00:03:02,879
sensitive data is flowing through the

75
00:03:02,879 --> 00:03:05,700
system where proprietary aspects of the

76
00:03:05,700 --> 00:03:07,640
system like the model here

77
00:03:07,640 --> 00:03:13,680
reside and can be translated into a tech

78
00:03:13,680 --> 00:03:17,159
services uh and into vulnerabilities

79
00:03:17,159 --> 00:03:19,860
that we have to take care and just

80
00:03:19,860 --> 00:03:21,900
trying to communicate what's going on in

81
00:03:21,900 --> 00:03:24,300
this picture and trying to cover all the

82
00:03:24,300 --> 00:03:25,920
areas that's kind of going to take a

83
00:03:25,920 --> 00:03:27,659
while especially if we're going to do

84
00:03:27,659 --> 00:03:29,700
this in a way where we're connecting to

85
00:03:29,700 --> 00:03:32,280
other partners uh or vendors or

86
00:03:32,280 --> 00:03:34,700
Solutions

87
00:03:34,860 --> 00:03:37,019
um this is extremely clear when you

88
00:03:37,019 --> 00:03:38,700
think about security questionnaires so

89
00:03:38,700 --> 00:03:40,799
anyone who's ever built a product assess

90
00:03:40,799 --> 00:03:42,840
offering or another one that you cater

91
00:03:42,840 --> 00:03:44,819
to a different company you are probably

92
00:03:44,819 --> 00:03:47,099
familiar with these documents usually

93
00:03:47,099 --> 00:03:49,739
long spreadsheets that you need to fill

94
00:03:49,739 --> 00:03:51,540
um just to communicate the Baseline of

95
00:03:51,540 --> 00:03:53,640
how you do security how your product

96
00:03:53,640 --> 00:03:55,140
looks and how it's going to affect the

97
00:03:55,140 --> 00:03:57,959
security posture of uh that customer

98
00:03:57,959 --> 00:04:00,239
you're interacting with just filling

99
00:04:00,239 --> 00:04:02,819
this out can drive someone insane I know

100
00:04:02,819 --> 00:04:06,000
I feel probably thousands of these by

101
00:04:06,000 --> 00:04:09,480
this point and it can be very stressful

102
00:04:09,480 --> 00:04:13,200
annoying and also very hard to work with

103
00:04:13,200 --> 00:04:15,060
um so that's kind of at the core of the

104
00:04:15,060 --> 00:04:18,600
problem that we have uh the plane

105
00:04:18,600 --> 00:04:20,459
surface itself and the attack surfaces

106
00:04:20,459 --> 00:04:22,500
within it are constantly growing it's

107
00:04:22,500 --> 00:04:23,759
hard to communicate it's hard to work

108
00:04:23,759 --> 00:04:25,320
around it's hard to find where we have

109
00:04:25,320 --> 00:04:27,720
gaps and potential weak points that we

110
00:04:27,720 --> 00:04:29,400
need to take care

111
00:04:29,400 --> 00:04:33,120
and this is where dark comes in uh so

112
00:04:33,120 --> 00:04:36,360
dark is a new mythology a framework that

113
00:04:36,360 --> 00:04:38,699
is focused on being very quick to

114
00:04:38,699 --> 00:04:40,979
provide you with a quick top line so you

115
00:04:40,979 --> 00:04:43,080
can communicate quickly within your

116
00:04:43,080 --> 00:04:46,259
company between devs and Ops with your

117
00:04:46,259 --> 00:04:47,940
customers maybe instead of security

118
00:04:47,940 --> 00:04:50,940
questionnaires uh with other people and

119
00:04:50,940 --> 00:04:52,500
give you a very quick picture of what's

120
00:04:52,500 --> 00:04:55,500
going on help you find every all the

121
00:04:55,500 --> 00:04:57,060
points that you need have covered for it

122
00:04:57,060 --> 00:04:58,919
enable you to zoom in on different

123
00:04:58,919 --> 00:05:00,660
levels so you can have an overall

124
00:05:00,660 --> 00:05:02,699
picture but also apply dark to more

125
00:05:02,699 --> 00:05:05,520
subsets of the problem and everything

126
00:05:05,520 --> 00:05:08,699
very consistent with best practices and

127
00:05:08,699 --> 00:05:10,320
no less important tools that we can

128
00:05:10,320 --> 00:05:14,400
apply uh to the problem itself

129
00:05:14,400 --> 00:05:16,380
um so let's talk about what dark is

130
00:05:16,380 --> 00:05:18,600
comprised from so first of all dark is

131
00:05:18,600 --> 00:05:22,020
the five layers of uh basically every

132
00:05:22,020 --> 00:05:24,360
application so no matter what we build

133
00:05:24,360 --> 00:05:27,240
these five elements are going to be in

134
00:05:27,240 --> 00:05:29,100
existence there and we need to take care

135
00:05:29,100 --> 00:05:31,680
of them and not taking care of them is

136
00:05:31,680 --> 00:05:34,740
uh immediately translates into potential

137
00:05:34,740 --> 00:05:36,720
security vulnerabilities so the first

138
00:05:36,720 --> 00:05:38,820
one and I think uh our host here

139
00:05:38,820 --> 00:05:40,139
mentioned it at the beginning of the

140
00:05:40,139 --> 00:05:41,580
talk here

141
00:05:41,580 --> 00:05:43,380
um supply chain that's a really hot

142
00:05:43,380 --> 00:05:45,539
topic now and

143
00:05:45,539 --> 00:05:47,160
um so managing dependencies that

144
00:05:47,160 --> 00:05:48,900
dependencies of the software you're

145
00:05:48,900 --> 00:05:51,000
building software you're providing is a

146
00:05:51,000 --> 00:05:53,400
critical thing so dependency that's the

147
00:05:53,400 --> 00:05:55,680
first layer in dark and we basically ask

148
00:05:55,680 --> 00:05:57,660
how do we secure the software supply

149
00:05:57,660 --> 00:06:00,000
chain that we're providing this second

150
00:06:00,000 --> 00:06:02,160
part is Access Control how do we connect

151
00:06:02,160 --> 00:06:04,080
other services how do we connect other

152
00:06:04,080 --> 00:06:06,180
people other identities to what we're

153
00:06:06,180 --> 00:06:07,979
building and how we do so in a secure

154
00:06:07,979 --> 00:06:09,300
way

155
00:06:09,300 --> 00:06:11,580
um is a classic question we move forward

156
00:06:11,580 --> 00:06:14,280
to run time how do we know that the

157
00:06:14,280 --> 00:06:16,320
software that we've built is going to

158
00:06:16,320 --> 00:06:18,259
behave the way that we expect

159
00:06:18,259 --> 00:06:20,639
configuration how do we know that we've

160
00:06:20,639 --> 00:06:22,979
set and configured the software that

161
00:06:22,979 --> 00:06:25,139
we're deploying to run in the way that

162
00:06:25,139 --> 00:06:28,080
we expect and want and lastly the

163
00:06:28,080 --> 00:06:31,259
container how do how do we set up the

164
00:06:31,259 --> 00:06:33,300
containing environment how do we make

165
00:06:33,300 --> 00:06:35,940
sure that our software is running uh in

166
00:06:35,940 --> 00:06:38,220
within the box within the servers within

167
00:06:38,220 --> 00:06:40,500
the cloud that we intend and in the way

168
00:06:40,500 --> 00:06:42,539
it is intended to work

169
00:06:42,539 --> 00:06:44,280
so those are the layers and now we're

170
00:06:44,280 --> 00:06:46,080
going to cross them with the best

171
00:06:46,080 --> 00:06:47,240
practices

172
00:06:47,240 --> 00:06:49,560
these best practices are really going to

173
00:06:49,560 --> 00:06:51,060
be our light in the dark here something

174
00:06:51,060 --> 00:06:53,940
that you can take with you apply on

175
00:06:53,940 --> 00:06:57,180
those layers and be able to say uh if

176
00:06:57,180 --> 00:06:59,880
you have any gaps in your security

177
00:06:59,880 --> 00:07:02,759
um the first one is matching is code so

178
00:07:02,759 --> 00:07:04,919
that's really a classic one and becoming

179
00:07:04,919 --> 00:07:08,699
more and more popular knowing that uh we

180
00:07:08,699 --> 00:07:11,580
have a very mature ecosystem with how we

181
00:07:11,580 --> 00:07:14,520
manage complex things as code for

182
00:07:14,520 --> 00:07:16,919
developers now we know that we can apply

183
00:07:16,919 --> 00:07:19,020
this to basically everything else we can

184
00:07:19,020 --> 00:07:20,580
apply these to policies to

185
00:07:20,580 --> 00:07:23,039
infrastructure to configuration to

186
00:07:23,039 --> 00:07:24,479
basically all of the layers that I

187
00:07:24,479 --> 00:07:26,160
mentioned mentioned before so we want to

188
00:07:26,160 --> 00:07:28,259
see that we can apply management this

189
00:07:28,259 --> 00:07:30,180
code across that stack

190
00:07:30,180 --> 00:07:33,479
zero trust that's also a very common uh

191
00:07:33,479 --> 00:07:35,280
best practice we need to make sure that

192
00:07:35,280 --> 00:07:37,979
what we're building has zero trust and

193
00:07:37,979 --> 00:07:39,900
no need to know basis kind of baked into

194
00:07:39,900 --> 00:07:41,520
all of its layers this will really

195
00:07:41,520 --> 00:07:44,099
affect how we compile or how we build

196
00:07:44,099 --> 00:07:45,720
the software itself and how we connect

197
00:07:45,720 --> 00:07:47,819
different uh software components between

198
00:07:47,819 --> 00:07:50,340
one another being event driven that's

199
00:07:50,340 --> 00:07:52,680
just a necessity of modern applications

200
00:07:52,680 --> 00:07:54,720
if we're moving too slow if we're not

201
00:07:54,720 --> 00:07:56,400
real time if we're not responding to

202
00:07:56,400 --> 00:07:58,800
changes both in the customer demands or

203
00:07:58,800 --> 00:08:00,599
in our infrastructure we're going to

204
00:08:00,599 --> 00:08:02,280
have a bad time so being event driven

205
00:08:02,280 --> 00:08:05,400
that's a must nowadays decoupling That's

206
00:08:05,400 --> 00:08:07,620
a classic from software development just

207
00:08:07,620 --> 00:08:09,479
making sure that only the parts that

208
00:08:09,479 --> 00:08:11,220
need to be bundled together are bundled

209
00:08:11,220 --> 00:08:12,960
together and that we have tools that

210
00:08:12,960 --> 00:08:15,840
allow us to separate the different parts

211
00:08:15,840 --> 00:08:18,000
that we have if we don't do so because

212
00:08:18,000 --> 00:08:20,039
of the complexity of software today

213
00:08:20,039 --> 00:08:22,020
we're going to end up with spaghetti

214
00:08:22,020 --> 00:08:23,960
code or spaghetti

215
00:08:23,960 --> 00:08:27,240
architecture within a very short uh

216
00:08:27,240 --> 00:08:28,500
window of time

217
00:08:28,500 --> 00:08:31,919
uh lastly the two uh more high level

218
00:08:31,919 --> 00:08:34,559
ones a unified view unified view just

219
00:08:34,559 --> 00:08:36,419
means that we are able to monitor the

220
00:08:36,419 --> 00:08:39,500
entire layer in a way it is easy

221
00:08:39,500 --> 00:08:41,880
aggregated and we can connect it to

222
00:08:41,880 --> 00:08:44,580
other systems and have it approachable

223
00:08:44,580 --> 00:08:46,500
here we understand that first of all

224
00:08:46,500 --> 00:08:49,320
everyone is becoming a developer and all

225
00:08:49,320 --> 00:08:50,940
the stakeholders have to be involved in

226
00:08:50,940 --> 00:08:53,339
security we can no longer apply security

227
00:08:53,339 --> 00:08:55,620
as an afterthought so we need developers

228
00:08:55,620 --> 00:08:57,600
to take care of it at day one but we

229
00:08:57,600 --> 00:08:58,920
also need to enable all the other

230
00:08:58,920 --> 00:09:02,459
stakeholders product security compliance

231
00:09:02,459 --> 00:09:05,399
even sales and support we need to enable

232
00:09:05,399 --> 00:09:08,160
them to chime in on our security posture

233
00:09:08,160 --> 00:09:09,740
or at least be part of the conversation

234
00:09:09,740 --> 00:09:12,060
otherwise we're going to have a bad time

235
00:09:12,060 --> 00:09:14,220
just trying to communicate so these are

236
00:09:14,220 --> 00:09:15,839
our best practices and now we're going

237
00:09:15,839 --> 00:09:18,839
to layer them on top of the layers and

238
00:09:18,839 --> 00:09:22,380
uh so now for each dark layer we're

239
00:09:22,380 --> 00:09:24,000
going to look at the each of the best

240
00:09:24,000 --> 00:09:26,940
practices and we're going to ask how are

241
00:09:26,940 --> 00:09:29,160
we implementing the best practice and

242
00:09:29,160 --> 00:09:31,019
even more specifically how are we

243
00:09:31,019 --> 00:09:34,019
applying tools uh to implement that best

244
00:09:34,019 --> 00:09:36,660
practice so we know we actually solve

245
00:09:36,660 --> 00:09:38,279
the problem and we're not just talking

246
00:09:38,279 --> 00:09:39,720
about it

247
00:09:39,720 --> 00:09:42,300
so I'm going to run quickly through

248
00:09:42,300 --> 00:09:44,220
um kind of these overview of layers I'll

249
00:09:44,220 --> 00:09:46,740
mention the top tools uh that I think

250
00:09:46,740 --> 00:09:48,779
are worthwhile knowing and then we'll

251
00:09:48,779 --> 00:09:50,519
try to bring this all together back to

252
00:09:50,519 --> 00:09:53,220
the example that we've uh set on the

253
00:09:53,220 --> 00:09:57,120
stage for so uh dependency our supply

254
00:09:57,120 --> 00:09:58,920
chain so

255
00:09:58,920 --> 00:10:01,080
um I'll highlight managing things as

256
00:10:01,080 --> 00:10:03,899
code so s-bomb software build materials

257
00:10:03,899 --> 00:10:06,720
is becoming a very commonplace thing you

258
00:10:06,720 --> 00:10:09,420
can find uh tools for that both in an

259
00:10:09,420 --> 00:10:12,899
open source project called spdx and also

260
00:10:12,899 --> 00:10:15,660
within sneak cloud

261
00:10:15,660 --> 00:10:17,940
um I'll also man mention things like

262
00:10:17,940 --> 00:10:22,200
backstage and uh Port IO get Port IO

263
00:10:22,200 --> 00:10:24,240
um starting to manage all the different

264
00:10:24,240 --> 00:10:26,160
software components that we have in an

265
00:10:26,160 --> 00:10:28,019
approachable way that the developers can

266
00:10:28,019 --> 00:10:30,660
manage share with one another maintain

267
00:10:30,660 --> 00:10:34,860
track of what's going on uh that's uh uh

268
00:10:34,860 --> 00:10:36,660
becoming super important and super

269
00:10:36,660 --> 00:10:39,120
critical uh and these are tools that are

270
00:10:39,120 --> 00:10:41,519
becoming popular to solve that there are

271
00:10:41,519 --> 00:10:43,080
other things here that are maybe worth

272
00:10:43,080 --> 00:10:45,839
mentioning classic sneak for your open

273
00:10:45,839 --> 00:10:47,760
source dependency

274
00:10:47,760 --> 00:10:49,680
um and obviously being event driven here

275
00:10:49,680 --> 00:10:53,399
translates very easily into cicd

276
00:10:53,399 --> 00:10:55,380
um access control

277
00:10:55,380 --> 00:10:58,260
um so Access Control has multiple layers

278
00:10:58,260 --> 00:11:00,480
by itself so we have uh application

279
00:11:00,480 --> 00:11:02,040
Level Access Control infrastructure

280
00:11:02,040 --> 00:11:04,260
level access control

281
00:11:04,260 --> 00:11:04,980
um

282
00:11:04,980 --> 00:11:06,720
and obviously it continues to the

283
00:11:06,720 --> 00:11:08,880
network level physical level and we need

284
00:11:08,880 --> 00:11:11,220
to cover that across the space uh

285
00:11:11,220 --> 00:11:13,380
policies code is really solved by great

286
00:11:13,380 --> 00:11:16,800
projects like oppa and uh now fresh out

287
00:11:16,800 --> 00:11:19,440
of the oven AWS announced the policy

288
00:11:19,440 --> 00:11:22,140
language and engine called Cedar

289
00:11:22,140 --> 00:11:24,779
um zero trust is really managed by the

290
00:11:24,779 --> 00:11:26,940
classic concept of doing policy decision

291
00:11:26,940 --> 00:11:28,920
points so instead of having Access

292
00:11:28,920 --> 00:11:31,019
Control baked into our software we have

293
00:11:31,019 --> 00:11:32,579
a separate microservice for

294
00:11:32,579 --> 00:11:34,980
authorization usually called the policy

295
00:11:34,980 --> 00:11:37,560
decision point and we have services like

296
00:11:37,560 --> 00:11:40,980
permit IO and like uh spice DB that we

297
00:11:40,980 --> 00:11:42,839
can use to implement that microservice

298
00:11:42,839 --> 00:11:45,300
for authorization instead of building it

299
00:11:45,300 --> 00:11:47,339
on our own

300
00:11:47,339 --> 00:11:49,560
um so those are like a few quick

301
00:11:49,560 --> 00:11:50,940
highlights for

302
00:11:50,940 --> 00:11:54,600
um Access Control moving into runtime

303
00:11:54,600 --> 00:11:57,360
um here sneak code also comes in for uh

304
00:11:57,360 --> 00:11:59,700
our decoupling aspect I also want to

305
00:11:59,700 --> 00:12:01,860
highlight Falco Falco is a really great

306
00:12:01,860 --> 00:12:04,380
project for uh runtime application

307
00:12:04,380 --> 00:12:07,200
security uh really can produce quick

308
00:12:07,200 --> 00:12:09,120
alerts it's uh also becoming a very

309
00:12:09,120 --> 00:12:12,540
popular cncf project uh gatekeeper with

310
00:12:12,540 --> 00:12:15,180
oppa again uh comes in for policies code

311
00:12:15,180 --> 00:12:18,000
and Docker is a classic uh for

312
00:12:18,000 --> 00:12:20,339
containerization and basically creating

313
00:12:20,339 --> 00:12:22,140
that zero trust element between the

314
00:12:22,140 --> 00:12:23,760
different runtime components that we

315
00:12:23,760 --> 00:12:25,880
have

316
00:12:26,100 --> 00:12:28,980
um configuration I'll mention

317
00:12:28,980 --> 00:12:31,200
um configuration checking tools like

318
00:12:31,200 --> 00:12:34,320
confest the tree and Chekhov these are

319
00:12:34,320 --> 00:12:36,000
also becoming

320
00:12:36,000 --> 00:12:39,360
um I think a very common tool in the uh

321
00:12:39,360 --> 00:12:41,339
Arsenal that the developers and devops

322
00:12:41,339 --> 00:12:42,839
use today

323
00:12:42,839 --> 00:12:44,880
um get UPS is a mythology to be event

324
00:12:44,880 --> 00:12:48,000
driven around configuration is a very

325
00:12:48,000 --> 00:12:49,860
common place and we're starting to see

326
00:12:49,860 --> 00:12:52,440
configuration Management Solutions uh

327
00:12:52,440 --> 00:12:54,180
that make it more approachable with

328
00:12:54,180 --> 00:12:56,760
things like configure and again

329
00:12:56,760 --> 00:12:59,820
backstage that I mentioned before

330
00:12:59,820 --> 00:13:02,459
lastly container

331
00:13:02,459 --> 00:13:05,579
um so here obviously Docker Helm charts

332
00:13:05,579 --> 00:13:08,339
with kubernetes and oci images really

333
00:13:08,339 --> 00:13:11,579
shine management tools for the overview

334
00:13:11,579 --> 00:13:14,279
of it like datadog and Prometheus are

335
00:13:14,279 --> 00:13:16,380
very commonplace and we're starting to

336
00:13:16,380 --> 00:13:18,240
see some maturity of brown making this

337
00:13:18,240 --> 00:13:20,100
more approachable with projects like

338
00:13:20,100 --> 00:13:23,279
raft velocity and n0

339
00:13:23,279 --> 00:13:26,820
so we went through the layers now and we

340
00:13:26,820 --> 00:13:28,560
looked at common tools or at least

341
00:13:28,560 --> 00:13:32,279
examples of common tools that we can

342
00:13:32,279 --> 00:13:36,240
bring to the table to try and manage all

343
00:13:36,240 --> 00:13:38,279
of the best practices that we need to

344
00:13:38,279 --> 00:13:40,019
bring in

345
00:13:40,019 --> 00:13:42,540
um and we saw that for each layer we can

346
00:13:42,540 --> 00:13:44,880
look at each of the best practices and

347
00:13:44,880 --> 00:13:48,060
we can uh apply it in a general fashion

348
00:13:48,060 --> 00:13:50,220
just in general how can we go about

349
00:13:50,220 --> 00:13:52,079
making sure that we have the right best

350
00:13:52,079 --> 00:13:53,940
practices and tools for whatever we're

351
00:13:53,940 --> 00:13:56,820
building now let's take this back to the

352
00:13:56,820 --> 00:14:00,000
uh specific example that we have here so

353
00:14:00,000 --> 00:14:02,339
we can do two things one we can create a

354
00:14:02,339 --> 00:14:04,740
quick picture of dark to light up this

355
00:14:04,740 --> 00:14:06,480
entire thing and that's going to be the

356
00:14:06,480 --> 00:14:08,820
next slide but we can also talk about

357
00:14:08,820 --> 00:14:11,100
having different points I can look at

358
00:14:11,100 --> 00:14:13,079
for example how the data scientists

359
00:14:13,079 --> 00:14:15,779
connect to the machine learning model or

360
00:14:15,779 --> 00:14:18,360
how the CI CD connects to the back end

361
00:14:18,360 --> 00:14:20,519
how are the platform Engineers uh

362
00:14:20,519 --> 00:14:23,639
connect to the uh cicd and the backend

363
00:14:23,639 --> 00:14:25,680
for each of those we can create a dark

364
00:14:25,680 --> 00:14:28,500
map we can apply the framework for each

365
00:14:28,500 --> 00:14:31,260
point so I'm not going to do that for uh

366
00:14:31,260 --> 00:14:32,820
now but I'm going to do this for the

367
00:14:32,820 --> 00:14:34,980
overall picture and you'll see that we

368
00:14:34,980 --> 00:14:37,980
quickly get a um basically a component

369
00:14:37,980 --> 00:14:41,760
that enables fast communication a quick

370
00:14:41,760 --> 00:14:43,860
summary and the ability to kind of zoom

371
00:14:43,860 --> 00:14:46,079
in on the parts that we want

372
00:14:46,079 --> 00:14:48,779
um and let's just jump into that so if

373
00:14:48,779 --> 00:14:51,240
before we looked at each of the layers

374
00:14:51,240 --> 00:14:53,940
separately and we asked in general what

375
00:14:53,940 --> 00:14:56,160
we can apply here here we're looking at

376
00:14:56,160 --> 00:14:59,040
all of the layers together and Crossing

377
00:14:59,040 --> 00:15:02,160
them uh in a table with all the best

378
00:15:02,160 --> 00:15:04,620
practices and we're applying this to the

379
00:15:04,620 --> 00:15:07,079
specific case of that Healthcare startup

380
00:15:07,079 --> 00:15:09,480
that we saw before by the way that

381
00:15:09,480 --> 00:15:11,519
Healthcare startup is a real startup I

382
00:15:11,519 --> 00:15:13,199
didn't mention them their name here but

383
00:15:13,199 --> 00:15:14,880
this is based on something that's

384
00:15:14,880 --> 00:15:17,579
happening in reality I know them because

385
00:15:17,579 --> 00:15:19,620
they're a customer of mine within uh

386
00:15:19,620 --> 00:15:21,899
with permit IO

387
00:15:21,899 --> 00:15:23,519
um so for example we can see that for

388
00:15:23,519 --> 00:15:25,920
the access control part permanent i o is

389
00:15:25,920 --> 00:15:27,540
a solution that they use to solve both

390
00:15:27,540 --> 00:15:29,639
decoupling creating a unified View and

391
00:15:29,639 --> 00:15:31,440
making this approachable for the other

392
00:15:31,440 --> 00:15:33,839
stakeholders and also with firminole and

393
00:15:33,839 --> 00:15:35,519
opal the open source project behind

394
00:15:35,519 --> 00:15:38,100
permit i o uh they are able to do this

395
00:15:38,100 --> 00:15:40,620
in an event driven sense like many other

396
00:15:40,620 --> 00:15:43,800
players uh they're using sneak both for

397
00:15:43,800 --> 00:15:46,079
their supply chain and both for their

398
00:15:46,079 --> 00:15:48,240
runtime security

399
00:15:48,240 --> 00:15:49,560
um what was interesting in the picture

400
00:15:49,560 --> 00:15:51,779
that we saw before man maybe I'll I'll

401
00:15:51,779 --> 00:15:54,420
uh go back is that there's both a cloud

402
00:15:54,420 --> 00:15:57,660
component and an on-prem component so in

403
00:15:57,660 --> 00:15:59,339
this table I've kind of broken it down

404
00:15:59,339 --> 00:16:02,519
both for on-prem and for the cloud and

405
00:16:02,519 --> 00:16:04,139
that kind of floats up some issues so

406
00:16:04,139 --> 00:16:06,540
for example in runtime being event

407
00:16:06,540 --> 00:16:09,420
driven they're using Falco and and a web

408
00:16:09,420 --> 00:16:11,399
application firewall

409
00:16:11,399 --> 00:16:13,860
um to monitor in real time what's going

410
00:16:13,860 --> 00:16:15,660
on with their

411
00:16:15,660 --> 00:16:18,180
um running code but for the on-prem

412
00:16:18,180 --> 00:16:19,800
solution they don't really have anything

413
00:16:19,800 --> 00:16:22,380
so immediately just off the bat looking

414
00:16:22,380 --> 00:16:24,240
at the slide we immediately see where do

415
00:16:24,240 --> 00:16:26,100
we have gaps and in this case we see

416
00:16:26,100 --> 00:16:27,959
that we have a partial Gap

417
00:16:27,959 --> 00:16:29,880
we can also see that there are errors

418
00:16:29,880 --> 00:16:31,800
that are complete gaps so for example

419
00:16:31,800 --> 00:16:34,199
for they have around configuration they

420
00:16:34,199 --> 00:16:35,760
have a lot of gaps they're not event

421
00:16:35,760 --> 00:16:37,800
driven the configurations are deployed

422
00:16:37,800 --> 00:16:41,399
once uh with the uh basically with the

423
00:16:41,399 --> 00:16:43,380
build so you build it once if you want

424
00:16:43,380 --> 00:16:45,240
you have to redeploy everything to

425
00:16:45,240 --> 00:16:47,459
change configuration uh so they're not

426
00:16:47,459 --> 00:16:49,920
using anything like uh feature Flags or

427
00:16:49,920 --> 00:16:51,899
anything like that and for the on-prem

428
00:16:51,899 --> 00:16:54,420
option it's completely

429
00:16:54,420 --> 00:16:55,259
um

430
00:16:55,259 --> 00:16:57,540
um not event driven uh they have to

431
00:16:57,540 --> 00:17:00,600
deploy uh sorry they have to send a new

432
00:17:00,600 --> 00:17:03,360
image to the customer to have any

433
00:17:03,360 --> 00:17:06,059
configuration change on that side

434
00:17:06,059 --> 00:17:07,619
um so obviously it's not decoupled it's

435
00:17:07,619 --> 00:17:09,839
bundled into that image and they have no

436
00:17:09,839 --> 00:17:11,280
way of viewing this or making this

437
00:17:11,280 --> 00:17:13,140
approachable not not for themselves or

438
00:17:13,140 --> 00:17:15,119
their customers

439
00:17:15,119 --> 00:17:15,839
um

440
00:17:15,839 --> 00:17:18,240
obviously what we're covering here is

441
00:17:18,240 --> 00:17:20,579
that specific case for that specific uh

442
00:17:20,579 --> 00:17:22,260
customer of mine

443
00:17:22,260 --> 00:17:23,819
um different scenarios that you'll run

444
00:17:23,819 --> 00:17:26,280
your software uh the interaction that

445
00:17:26,280 --> 00:17:27,780
you have with your vendors or your

446
00:17:27,780 --> 00:17:29,760
customers would produce obviously very

447
00:17:29,760 --> 00:17:32,400
different uh slides very different uh

448
00:17:32,400 --> 00:17:36,059
dark Maps but you'll get these dark Maps

449
00:17:36,059 --> 00:17:37,980
quickly it won't take you long you can

450
00:17:37,980 --> 00:17:41,059
probably if you take your average

451
00:17:41,059 --> 00:17:43,980
mid-sized SAS offering it will probably

452
00:17:43,980 --> 00:17:46,320
take you just a few hours a day at most

453
00:17:46,320 --> 00:17:48,660
to map everything that you want into our

454
00:17:48,660 --> 00:17:50,820
dark map and then you can use that to

455
00:17:50,820 --> 00:17:52,740
communicate internally you can use that

456
00:17:52,740 --> 00:17:54,360
to share it as part of security

457
00:17:54,360 --> 00:17:56,280
questionnaires or maybe in the future

458
00:17:56,280 --> 00:17:59,280
instead of security questionnaires and

459
00:17:59,280 --> 00:18:02,460
you can use that to also find gaps in

460
00:18:02,460 --> 00:18:04,260
the software that you have or in the

461
00:18:04,260 --> 00:18:06,120
solution that you're building

462
00:18:06,120 --> 00:18:08,340
um and I think this slide really kind of

463
00:18:08,340 --> 00:18:10,559
sums up the

464
00:18:10,559 --> 00:18:13,140
um the way that dark can really light up

465
00:18:13,140 --> 00:18:17,419
our uh look into our security posture

466
00:18:18,059 --> 00:18:21,419
so kind of Summer summing summarizing up

467
00:18:21,419 --> 00:18:23,640
uh what we talked about dark is relevant

468
00:18:23,640 --> 00:18:26,700
for anyone building software developers

469
00:18:26,700 --> 00:18:30,299
uh devops sres appsac and everyone

470
00:18:30,299 --> 00:18:32,460
managing the overall picture Architects

471
00:18:32,460 --> 00:18:34,559
security analysts appsec the management

472
00:18:34,559 --> 00:18:36,000
team

473
00:18:36,000 --> 00:18:38,280
um and it can be a valuable tool to

474
00:18:38,280 --> 00:18:42,120
speed up processes on both those sides

475
00:18:42,120 --> 00:18:44,280
um for the management this can really be

476
00:18:44,280 --> 00:18:46,440
a guiding principle when you're starting

477
00:18:46,440 --> 00:18:47,760
to build something new or you're

478
00:18:47,760 --> 00:18:49,620
refactoring something you're working or

479
00:18:49,620 --> 00:18:51,419
new architecture you can start with a

480
00:18:51,419 --> 00:18:53,460
dark map to kind of quickly highlight

481
00:18:53,460 --> 00:18:55,919
where you have answers answers for

482
00:18:55,919 --> 00:18:57,179
things and where you have gaps that

483
00:18:57,179 --> 00:18:59,580
you'll need to address soon and this can

484
00:18:59,580 --> 00:19:00,780
be a way to communicate between

485
00:19:00,780 --> 00:19:03,059
organizations uh again I really think

486
00:19:03,059 --> 00:19:05,460
that security questionnaires are a pain

487
00:19:05,460 --> 00:19:07,020
in the ass and even though we have

488
00:19:07,020 --> 00:19:09,720
companies like panerase making them

489
00:19:09,720 --> 00:19:12,660
easier to approach uh it's still very

490
00:19:12,660 --> 00:19:15,840
cumbersome to work on so I'm really

491
00:19:15,840 --> 00:19:18,419
trying to encourage this and this can

492
00:19:18,419 --> 00:19:19,860
also be a good way to communicate

493
00:19:19,860 --> 00:19:22,740
security as part of your docs so a lot

494
00:19:22,740 --> 00:19:24,840
of documentation for SAS offering today

495
00:19:24,840 --> 00:19:26,940
is our product stays include a section

496
00:19:26,940 --> 00:19:30,840
on security having this as part of that

497
00:19:30,840 --> 00:19:33,720
security section would really speed up

498
00:19:33,720 --> 00:19:35,820
um someone's ramping up into the project

499
00:19:35,820 --> 00:19:38,100
and them being able to find the answers

500
00:19:38,100 --> 00:19:40,200
for what they need and how they can make

501
00:19:40,200 --> 00:19:42,179
sure that they product that they're

502
00:19:42,179 --> 00:19:44,580
reviewing is meeting their standards for

503
00:19:44,580 --> 00:19:47,400
developers this is uh for foremost a

504
00:19:47,400 --> 00:19:49,860
checklist uh you build something you

505
00:19:49,860 --> 00:19:51,539
want it to be secure you can go through

506
00:19:51,539 --> 00:19:52,860
the checklist

507
00:19:52,860 --> 00:19:55,500
uh through the dark map to make sure

508
00:19:55,500 --> 00:19:57,299
that you have an answer for all the

509
00:19:57,299 --> 00:19:59,880
different things you're connecting

510
00:19:59,880 --> 00:20:02,039
um and this can be also a baseline for a

511
00:20:02,039 --> 00:20:04,020
SWOT analysis to understand where your

512
00:20:04,020 --> 00:20:06,419
strengths are where you have gaps uh

513
00:20:06,419 --> 00:20:07,980
where you need to invest your time when

514
00:20:07,980 --> 00:20:10,860
you're dealing with technical debt

515
00:20:10,860 --> 00:20:12,840
um and in the end of the day this can

516
00:20:12,840 --> 00:20:14,880
also be a good way to decide which tools

517
00:20:14,880 --> 00:20:17,460
you need to invest in knowing what you

518
00:20:17,460 --> 00:20:19,380
have in place knowing which gaps you

519
00:20:19,380 --> 00:20:21,900
have prioritizing them and understanding

520
00:20:21,900 --> 00:20:23,880
uh which ones are more critical can

521
00:20:23,880 --> 00:20:25,860
enable you to decide which tools are you

522
00:20:25,860 --> 00:20:28,020
bringing on next are you upgrading your

523
00:20:28,020 --> 00:20:30,360
observability are you adding runtime

524
00:20:30,360 --> 00:20:33,780
Access Control this can this map can be

525
00:20:33,780 --> 00:20:35,520
a baseline for the discussion of what

526
00:20:35,520 --> 00:20:38,160
you should tackle first to minimize your

527
00:20:38,160 --> 00:20:41,220
technical debt and to

528
00:20:41,220 --> 00:20:42,720
um basically meet all the best practices

529
00:20:42,720 --> 00:20:45,620
that you need to meet

530
00:20:46,740 --> 00:20:49,500
um so now I'll pause for questions I'll

531
00:20:49,500 --> 00:20:52,200
say I'm available for questions later uh

532
00:20:52,200 --> 00:20:53,820
you can find me all across the internet

533
00:20:53,820 --> 00:20:57,179
is orwise o-r-w-e-i-s on GitHub on

534
00:20:57,179 --> 00:20:59,580
LinkedIn on Twitter and you'll be

535
00:20:59,580 --> 00:21:02,640
surprised how responsive I am uh for

536
00:21:02,640 --> 00:21:04,440
questions

537
00:21:04,440 --> 00:21:06,299
um if you want this deck and you want

538
00:21:06,299 --> 00:21:08,100
the framework itself you can find it at

539
00:21:08,100 --> 00:21:10,980
permitio blog dark uh dark dark here is

540
00:21:10,980 --> 00:21:13,799
obviously the arcc

541
00:21:13,799 --> 00:21:16,320
um and uh it's available for everyone

542
00:21:16,320 --> 00:21:18,179
and if you're interested in best

543
00:21:18,179 --> 00:21:19,919
practices and other

544
00:21:19,919 --> 00:21:21,419
um Concepts that I'm driving you can

545
00:21:21,419 --> 00:21:23,820
also check out this blog on uh permanent

546
00:21:23,820 --> 00:21:25,440
IO for the five best practices for

547
00:21:25,440 --> 00:21:28,500
building Cloud native permissions

548
00:21:28,500 --> 00:21:29,100
um

549
00:21:29,100 --> 00:21:31,740
hope you enjoyed the talk and I think we

550
00:21:31,740 --> 00:21:33,600
have a few minutes left and I'll be

551
00:21:33,600 --> 00:21:35,220
happy to tackle questions if there are

552
00:21:35,220 --> 00:21:37,940
if there are any

553
00:21:40,140 --> 00:21:42,600
all right thank you so much or and I yes

554
00:21:42,600 --> 00:21:44,280
let's put Matt in as well and let's

555
00:21:44,280 --> 00:21:46,500
change the view for a second to

556
00:21:46,500 --> 00:21:49,020
this oh I will I will put the overlay

557
00:21:49,020 --> 00:21:50,520
away away so we can actually continue

558
00:21:50,520 --> 00:21:53,039
that like let's do it like this or and

559
00:21:53,039 --> 00:21:54,720
we just put the little logo in that's

560
00:21:54,720 --> 00:21:57,240
that suits far better uh thank you for

561
00:21:57,240 --> 00:22:00,960
this talk or I don't I don't see any uh

562
00:22:00,960 --> 00:22:03,059
uh questions that didn't that were not

563
00:22:03,059 --> 00:22:05,400
yet answered in the in the in the chat

564
00:22:05,400 --> 00:22:06,419
but

565
00:22:06,419 --> 00:22:10,980
um uh uh I would love if you would could

566
00:22:10,980 --> 00:22:11,700
um

567
00:22:11,700 --> 00:22:14,100
share the links that you have on the

568
00:22:14,100 --> 00:22:15,960
Discord as well so people can't click on

569
00:22:15,960 --> 00:22:17,460
it because it's very hard to click on

570
00:22:17,460 --> 00:22:20,220
slides obviously uh because I think that

571
00:22:20,220 --> 00:22:22,500
the whole the whole story about dark and

572
00:22:22,500 --> 00:22:25,260
how to implement it uh I want to get my

573
00:22:25,260 --> 00:22:28,320
my hands on it and actually try it just

574
00:22:28,320 --> 00:22:30,179
to see if it fits

575
00:22:30,179 --> 00:22:32,280
um so thank you

576
00:22:32,280 --> 00:22:35,580
happy to share those and I think

577
00:22:35,580 --> 00:22:37,740
um uh that's something that I really

578
00:22:37,740 --> 00:22:40,440
want to encourage people to do this

579
00:22:40,440 --> 00:22:42,000
thing that I've presented here is really

580
00:22:42,000 --> 00:22:44,039
geared towards Simplicity and being

581
00:22:44,039 --> 00:22:47,940
quick so you shouldn't like thinking oh

582
00:22:47,940 --> 00:22:49,679
should I adopt a new methodology should

583
00:22:49,679 --> 00:22:51,600
I adopt a new framework

584
00:22:51,600 --> 00:22:52,860
um I think you should put that question

585
00:22:52,860 --> 00:22:55,260
aside and just give it a try

586
00:22:55,260 --> 00:22:57,000
um I think most people and most other

587
00:22:57,000 --> 00:22:58,919
companies that I've used this framework

588
00:22:58,919 --> 00:23:01,020
with you quickly find gaps that you

589
00:23:01,020 --> 00:23:03,600
weren't necessarily aware of before so

590
00:23:03,600 --> 00:23:05,940
even if you don't end up implementing

591
00:23:05,940 --> 00:23:08,400
this uh end-to-end or across your stack

592
00:23:08,400 --> 00:23:11,460
uh this will enable you to figure out

593
00:23:11,460 --> 00:23:13,799
things that you might necessarily not be

594
00:23:13,799 --> 00:23:16,620
aware of and that will immediately

595
00:23:16,620 --> 00:23:18,299
improve your security posture just by

596
00:23:18,299 --> 00:23:20,220
raising awareness

597
00:23:20,220 --> 00:23:22,740
we have I had a question that I've been

598
00:23:22,740 --> 00:23:24,299
interested in your thoughts about I mean

599
00:23:24,299 --> 00:23:27,179
I I I'm always fascinated by um oh

600
00:23:27,179 --> 00:23:28,740
actually we've got a question yeah we've

601
00:23:28,740 --> 00:23:30,179
got a question coming in from the from

602
00:23:30,179 --> 00:23:32,280
the hop-on framework so or where does

603
00:23:32,280 --> 00:23:34,440
API security come what are your views

604
00:23:34,440 --> 00:23:36,000
about it

605
00:23:36,000 --> 00:23:41,039
so API security is a component of itself

606
00:23:41,039 --> 00:23:43,140
um that you definitely want to have I

607
00:23:43,140 --> 00:23:45,960
didn't map all the different uh

608
00:23:45,960 --> 00:23:47,700
components that you have I mapped the

609
00:23:47,700 --> 00:23:49,620
best practices

610
00:23:49,620 --> 00:23:51,360
um and APA security you'll have both

611
00:23:51,360 --> 00:23:53,340
access control I think is a significant

612
00:23:53,340 --> 00:23:55,679
part of it and while you go through the

613
00:23:55,679 --> 00:23:57,120
best practices you see you end up

614
00:23:57,120 --> 00:23:59,940
basically acclimating API security both

615
00:23:59,940 --> 00:24:03,360
in the access control aspect and in the

616
00:24:03,360 --> 00:24:05,340
runtime aspect

617
00:24:05,340 --> 00:24:09,000
um so the challenge with trying to build

618
00:24:09,000 --> 00:24:10,980
a framework around

619
00:24:10,980 --> 00:24:12,840
um specific components is that it

620
00:24:12,840 --> 00:24:15,299
doesn't end there's always another layer

621
00:24:15,299 --> 00:24:18,480
being added so and that will make this

622
00:24:18,480 --> 00:24:21,059
framework complex instead of simple so

623
00:24:21,059 --> 00:24:23,760
that's not the direction I went with but

624
00:24:23,760 --> 00:24:25,500
I think dark definitely touches on it

625
00:24:25,500 --> 00:24:27,720
and anyone building anything with an API

626
00:24:27,720 --> 00:24:31,320
going with dark to light it up will

627
00:24:31,320 --> 00:24:33,059
definitely touch on IPS security it's

628
00:24:33,059 --> 00:24:35,640
unavoidable yep gotta guess I guess so

629
00:24:35,640 --> 00:24:38,039
so thank you for that mad you had

630
00:24:38,039 --> 00:24:40,380
something so go ahead yeah I mean I'm

631
00:24:40,380 --> 00:24:41,940
always fascinated to see that folks are

632
00:24:41,940 --> 00:24:43,559
still managing trying to manage things

633
00:24:43,559 --> 00:24:45,299
using spreadsheets these days you know

634
00:24:45,299 --> 00:24:47,460
especially in the era of modern software

635
00:24:47,460 --> 00:24:49,200
development where you know an

636
00:24:49,200 --> 00:24:50,820
application might have hundreds or even

637
00:24:50,820 --> 00:24:53,220
thousands in some cases of dependencies

638
00:24:53,220 --> 00:24:55,320
which is just uh you know that's like

639
00:24:55,320 --> 00:24:57,600
trying to uh fit a square peg into a

640
00:24:57,600 --> 00:24:59,220
round hole right I mean you're just

641
00:24:59,220 --> 00:25:00,659
never going to be able to track things

642
00:25:00,659 --> 00:25:02,760
like that and and look at the risks of

643
00:25:02,760 --> 00:25:03,900
them

644
00:25:03,900 --> 00:25:05,940
um I I still think that the the answers

645
00:25:05,940 --> 00:25:08,159
for how we do that are still emerging I

646
00:25:08,159 --> 00:25:10,020
know we've got a couple of talks uh

647
00:25:10,020 --> 00:25:11,700
later on today

648
00:25:11,700 --> 00:25:13,140
um that are that are around the same

649
00:25:13,140 --> 00:25:15,659
space I mean I I I guess uh the other

650
00:25:15,659 --> 00:25:19,200
thing was when we start to look at uh at

651
00:25:19,200 --> 00:25:21,720
complex uh application architectures and

652
00:25:21,720 --> 00:25:24,179
as as you pointed out in some of those

653
00:25:24,179 --> 00:25:26,940
diagrams you know we're we're often also

654
00:25:26,940 --> 00:25:29,520
having uh having requirements on

655
00:25:29,520 --> 00:25:31,860
external Services right that we're using

656
00:25:31,860 --> 00:25:35,039
we're using SAS things within our apps

657
00:25:35,039 --> 00:25:37,200
you know what what are your thoughts on

658
00:25:37,200 --> 00:25:39,779
on kind of how we quantify risk for that

659
00:25:39,779 --> 00:25:42,120
right because you know do we just say

660
00:25:42,120 --> 00:25:43,500
here's a risk boundary that's somebody

661
00:25:43,500 --> 00:25:46,200
else's problem and that's enough or you

662
00:25:46,200 --> 00:25:47,520
know

663
00:25:47,520 --> 00:25:50,820
so I think uh first of all maybe to

664
00:25:50,820 --> 00:25:53,039
touch on the spreadsheets so I'm not

665
00:25:53,039 --> 00:25:54,240
saying here that you shouldn't have

666
00:25:54,240 --> 00:25:56,100
those spreadsheets it's okay to have

667
00:25:56,100 --> 00:25:57,960
them it's a good tool if you want to do

668
00:25:57,960 --> 00:26:00,480
a deep analysis I think they're they're

669
00:26:00,480 --> 00:26:02,400
really not

670
00:26:02,400 --> 00:26:03,659
um a good tool if you want to

671
00:26:03,659 --> 00:26:05,640
communicate between boundaries which is

672
00:26:05,640 --> 00:26:07,320
kind of the other part of the question

673
00:26:07,320 --> 00:26:10,980
that you're alluding to or touching on

674
00:26:10,980 --> 00:26:13,380
um so if you're working between vendors

675
00:26:13,380 --> 00:26:14,640
or between customers or between

676
00:26:14,640 --> 00:26:16,140
different departments if you were

677
00:26:16,140 --> 00:26:18,600
passing around spreadsheets everyone's

678
00:26:18,600 --> 00:26:20,460
going to have a bad time

679
00:26:20,460 --> 00:26:22,559
um it's just not something that uh

680
00:26:22,559 --> 00:26:25,440
people can digest fast enough to build a

681
00:26:25,440 --> 00:26:27,539
conversation so you can add those

682
00:26:27,539 --> 00:26:29,340
spreadsheets alongside something that

683
00:26:29,340 --> 00:26:31,679
will give someone the ability to ramp up

684
00:26:31,679 --> 00:26:33,419
quickly and communicate quickly around

685
00:26:33,419 --> 00:26:36,000
the sensitive areas

686
00:26:36,000 --> 00:26:38,820
um and going to your second point so

687
00:26:38,820 --> 00:26:41,340
um dark doesn't really touch on um

688
00:26:41,340 --> 00:26:43,799
prioritization directly it it's more

689
00:26:43,799 --> 00:26:45,720
focused around highlighting where you

690
00:26:45,720 --> 00:26:48,419
have gaps and then you there's more work

691
00:26:48,419 --> 00:26:51,120
to be done around prioritizing them

692
00:26:51,120 --> 00:26:53,340
um but I find that the especially with

693
00:26:53,340 --> 00:26:54,960
security

694
00:26:54,960 --> 00:26:57,179
um if you're prioritizing things without

695
00:26:57,179 --> 00:27:00,240
a clear unified view you're basically

696
00:27:00,240 --> 00:27:01,919
missing out

697
00:27:01,919 --> 00:27:05,100
um because uh the weakest link principle

698
00:27:05,100 --> 00:27:07,860
might be hiding uh the actual thing that

699
00:27:07,860 --> 00:27:10,080
that if you don't take care of all the

700
00:27:10,080 --> 00:27:11,220
other work that you're doing is

701
00:27:11,220 --> 00:27:14,279
basically meaningless yeah so it's I

702
00:27:14,279 --> 00:27:16,860
think it should be foremost managing of

703
00:27:16,860 --> 00:27:18,539
you being able to communicate around

704
00:27:18,539 --> 00:27:20,880
that having the discussion of what we

705
00:27:20,880 --> 00:27:22,440
have in place and then being able to

706
00:27:22,440 --> 00:27:25,440
prioritize uh maybe in a future uh

707
00:27:25,440 --> 00:27:28,559
update to dark like dark 2.0 maybe I'll

708
00:27:28,559 --> 00:27:31,080
add something around prioritization but

709
00:27:31,080 --> 00:27:33,720
I haven't tackled that specifically yet

710
00:27:33,720 --> 00:27:36,120
great well thank you very much super

711
00:27:36,120 --> 00:27:38,100
interesting oh we've got one have we got

712
00:27:38,100 --> 00:27:39,299
time for yeah we've got time for one

713
00:27:39,299 --> 00:27:41,159
more question I think we've got one uh

714
00:27:41,159 --> 00:27:43,380
do we have that on a on a banner Brian

715
00:27:43,380 --> 00:27:45,059
or should we just read that one out well

716
00:27:45,059 --> 00:27:47,700
let me put this on a banner in okay well

717
00:27:47,700 --> 00:27:50,340
I'll read it while you're typing so uh

718
00:27:50,340 --> 00:27:52,559
how does threat modeling fit in with the

719
00:27:52,559 --> 00:27:55,200
framework and how does threat modeling

720
00:27:55,200 --> 00:27:58,140
fit in with permission management

721
00:27:58,140 --> 00:28:01,440
oh that's uh that's a lot in one

722
00:28:01,440 --> 00:28:02,880
question

723
00:28:02,880 --> 00:28:03,620
um

724
00:28:03,620 --> 00:28:06,720
so I think threats and I kind of touched

725
00:28:06,720 --> 00:28:09,419
it with the SWOT analysis

726
00:28:09,419 --> 00:28:12,600
um so the gaps that you have

727
00:28:12,600 --> 00:28:14,940
um are almost always translating into

728
00:28:14,940 --> 00:28:16,559
potential threats and risks that you

729
00:28:16,559 --> 00:28:18,840
have so

730
00:28:18,840 --> 00:28:20,460
one and that's kind of also kind of

731
00:28:20,460 --> 00:28:22,380
touching I guess on your question before

732
00:28:22,380 --> 00:28:25,020
so once you have those gaps in place you

733
00:28:25,020 --> 00:28:27,539
can map them into risks and threats and

734
00:28:27,539 --> 00:28:29,700
then you can prioritize them and then

735
00:28:29,700 --> 00:28:31,799
you can create models of them and then

736
00:28:31,799 --> 00:28:34,740
you can even have simulations around uh

737
00:28:34,740 --> 00:28:38,039
tackling those threats when they happen

738
00:28:38,039 --> 00:28:40,320
um it's not something that this

739
00:28:40,320 --> 00:28:41,360
framework

740
00:28:41,360 --> 00:28:44,220
specializes in uh but I think it's a

741
00:28:44,220 --> 00:28:47,400
good enabler to do threat modeling

742
00:28:47,400 --> 00:28:49,500
um in terms of

743
00:28:49,500 --> 00:28:52,260
um modeling threats and connecting them

744
00:28:52,260 --> 00:28:55,020
to permission management I'd say that

745
00:28:55,020 --> 00:28:57,600
it's around policy and policy is code

746
00:28:57,600 --> 00:29:00,900
specifically in general managing policy

747
00:29:00,900 --> 00:29:03,600
in complex applications is becoming very

748
00:29:03,600 --> 00:29:06,419
very cumbersome if you try to keep all

749
00:29:06,419 --> 00:29:08,340
of that as know how and documentation

750
00:29:08,340 --> 00:29:11,100
that you have proprietary code for

751
00:29:11,100 --> 00:29:13,260
um you it will be very hard for you to

752
00:29:13,260 --> 00:29:15,240
keep modeling the threats or the

753
00:29:15,240 --> 00:29:18,419
friction points that you need to protect

754
00:29:18,419 --> 00:29:20,880
um with your uh permission management

755
00:29:20,880 --> 00:29:22,679
for the software components You're

756
00:29:22,679 --> 00:29:25,260
Building If instead you decouple out

757
00:29:25,260 --> 00:29:28,380
your uh authorization if you decouple

758
00:29:28,380 --> 00:29:31,140
that out and you have your policy uh

759
00:29:31,140 --> 00:29:33,960
managed separately as idealist policy is

760
00:29:33,960 --> 00:29:36,600
code in a unified repository then it's

761
00:29:36,600 --> 00:29:39,120
easy to have a source of Truth and then

762
00:29:39,120 --> 00:29:42,120
that's our truth you can model you can

763
00:29:42,120 --> 00:29:44,159
track you can test you can do benchmarks

764
00:29:44,159 --> 00:29:45,179
on

765
00:29:45,179 --> 00:29:46,380
um and

766
00:29:46,380 --> 00:29:48,000
um you can also

767
00:29:48,000 --> 00:29:51,059
um have code reviews on it which is uh

768
00:29:51,059 --> 00:29:53,760
an amazing feat that is impossible any

769
00:29:53,760 --> 00:29:55,260
other way

770
00:29:55,260 --> 00:29:55,860
um

771
00:29:55,860 --> 00:29:58,500
and said that in addition uh if you use

772
00:29:58,500 --> 00:30:01,440
tools uh like obviously I'm biased here

773
00:30:01,440 --> 00:30:02,700
but if you use something like permanio

774
00:30:02,700 --> 00:30:04,860
you also get low code interfaces that

775
00:30:04,860 --> 00:30:07,080
generate that code for you so that way

776
00:30:07,080 --> 00:30:08,760
you can have the security practitioners

777
00:30:08,760 --> 00:30:11,220
work directly on that policy as code on

778
00:30:11,220 --> 00:30:13,620
that source of truth without having to

779
00:30:13,620 --> 00:30:17,580
uh necessarily be full-blown Developers

780
00:30:17,580 --> 00:30:19,380
fantastic well I think that's actually a

781
00:30:19,380 --> 00:30:21,960
great segue to our next speaker so we'll

782
00:30:21,960 --> 00:30:23,700
uh we'll leave it there thank you again

783
00:30:23,700 --> 00:30:27,539
or that was super interesting and uh

784
00:30:27,539 --> 00:30:30,980
let's uh drop you out

