1
00:00:00,840 --> 00:00:03,120
yeah so the next speaker we have is

2
00:00:03,120 --> 00:00:05,339
Randall uh he runs the developer

3
00:00:05,339 --> 00:00:07,740
relations and community at sneak where

4
00:00:07,740 --> 00:00:09,420
he works on security research

5
00:00:09,420 --> 00:00:12,120
development and education uh in his

6
00:00:12,120 --> 00:00:14,219
spare time Randall writes articles and

7
00:00:14,219 --> 00:00:16,320
gives talks advocating for security best

8
00:00:16,320 --> 00:00:19,140
practices Brandon also bills and

9
00:00:19,140 --> 00:00:20,939
contributes to various open source

10
00:00:20,939 --> 00:00:24,600
security tools and random random films

11
00:00:24,600 --> 00:00:27,060
of expertise include python JavaScript

12
00:00:27,060 --> 00:00:30,180
go web security cryptography and

13
00:00:30,180 --> 00:00:31,520
infrastructure security

14
00:00:31,520 --> 00:00:34,860
and granu's been writing software for

15
00:00:34,860 --> 00:00:37,620
over 20 years and has built a number of

16
00:00:37,620 --> 00:00:40,079
popular API services and open source

17
00:00:40,079 --> 00:00:42,899
tools and he'll be presenting on an

18
00:00:42,899 --> 00:00:46,760
introduction to paceto tokens

19
00:00:53,000 --> 00:00:54,960
I'm definitely looking to learn

20
00:00:54,960 --> 00:00:57,840
something new over here as well uh and

21
00:00:57,840 --> 00:00:59,399
go to your slides I'll add them to the

22
00:00:59,399 --> 00:01:01,559
live stream also I know sorry you've got

23
00:01:01,559 --> 00:01:02,820
a head off so I just don't want to say

24
00:01:02,820 --> 00:01:04,799
thank you so much for co-hosting and you

25
00:01:04,799 --> 00:01:07,200
know adding your operations lens on

26
00:01:07,200 --> 00:01:08,820
security as well and hopefully you know

27
00:01:08,820 --> 00:01:10,619
you this has been valuable but thank you

28
00:01:10,619 --> 00:01:12,720
for co-hosting with me as well

29
00:01:12,720 --> 00:01:15,540
thanks Shelby and thanks everyone all

30
00:01:15,540 --> 00:01:18,180
right and thank you both all right so

31
00:01:18,180 --> 00:01:20,340
let's have some fun everyone um this is

32
00:01:20,340 --> 00:01:22,220
a lightning talk so I am going to talk

33
00:01:22,220 --> 00:01:24,780
extraordinarily fast but feel free to

34
00:01:24,780 --> 00:01:26,159
write questions down in the chat I'll

35
00:01:26,159 --> 00:01:27,960
try to get back to them when I can but

36
00:01:27,960 --> 00:01:29,520
I'm gonna try to keep this to 15 minutes

37
00:01:29,520 --> 00:01:32,040
or less ideally so what are we talking

38
00:01:32,040 --> 00:01:33,360
about today while we're talking about

39
00:01:33,360 --> 00:01:36,000
paceto and what is pesetto what does it

40
00:01:36,000 --> 00:01:38,040
mean well pesetto stands for platform

41
00:01:38,040 --> 00:01:41,400
agnostic security tokens now hopefully

42
00:01:41,400 --> 00:01:42,960
you've heard of Json web tokens before

43
00:01:42,960 --> 00:01:45,720
these are basically the upgraded uh

44
00:01:45,720 --> 00:01:48,240
version of Json web tokens now I don't

45
00:01:48,240 --> 00:01:49,799
know about you but for the last week or

46
00:01:49,799 --> 00:01:51,840
so I've been playing around a lot with

47
00:01:51,840 --> 00:01:54,000
AI and one of the cool things I learned

48
00:01:54,000 --> 00:01:55,560
you can do is you can actually ask the

49
00:01:55,560 --> 00:01:58,079
AI what are

50
00:01:58,079 --> 00:02:01,560
other tokens and brilliantly it'll

51
00:02:01,560 --> 00:02:03,720
actually say hey passetto which stands

52
00:02:03,720 --> 00:02:05,880
for platform agnostic security tokens is

53
00:02:05,880 --> 00:02:07,920
a secure and compact way of storing and

54
00:02:07,920 --> 00:02:10,139
transmitting data set of tokens are

55
00:02:10,139 --> 00:02:11,520
designed to be easy to use and Implement

56
00:02:11,520 --> 00:02:13,920
while also providing a high level of

57
00:02:13,920 --> 00:02:15,900
security they are based on Json web

58
00:02:15,900 --> 00:02:17,879
tokens and use modern cryptographic

59
00:02:17,879 --> 00:02:19,560
techniques to ensure data stored in

60
00:02:19,560 --> 00:02:20,940
passetto tokens is secure and

61
00:02:20,940 --> 00:02:23,160
tamper-proof and guess what the AI is

62
00:02:23,160 --> 00:02:25,560
totally spot on right but it can't do as

63
00:02:25,560 --> 00:02:27,300
good a job as I'm about to do walking

64
00:02:27,300 --> 00:02:28,920
through the whole thing so let's get

65
00:02:28,920 --> 00:02:30,540
into it

66
00:02:30,540 --> 00:02:32,940
um so also I had an amazing introduction

67
00:02:32,940 --> 00:02:35,940
thank you so much uh like you know like

68
00:02:35,940 --> 00:02:37,860
the host said I'm Randall I work a sneak

69
00:02:37,860 --> 00:02:39,720
I do devrel in community I do a lot of

70
00:02:39,720 --> 00:02:41,640
security and building stuff

71
00:02:41,640 --> 00:02:42,900
um you can learn more about me if you

72
00:02:42,900 --> 00:02:44,760
check me out on Twitter or follow the

73
00:02:44,760 --> 00:02:46,200
sneak accounts

74
00:02:46,200 --> 00:02:48,000
but let's get right into this so first

75
00:02:48,000 --> 00:02:51,239
of all what's passetto well paceto you

76
00:02:51,239 --> 00:02:53,040
can think of it as really just a blob of

77
00:02:53,040 --> 00:02:55,860
Json data that is that can be securely

78
00:02:55,860 --> 00:02:57,840
transmitted over the Internet that's

79
00:02:57,840 --> 00:02:59,940
really all pastetto is it's a it's a

80
00:02:59,940 --> 00:03:03,060
standard that allows you to do this one

81
00:03:03,060 --> 00:03:04,500
thing you do need to know about placetas

82
00:03:04,500 --> 00:03:05,459
however is that they're always

83
00:03:05,459 --> 00:03:07,260
authenticated and what does that mean

84
00:03:07,260 --> 00:03:09,180
well basically what it means is that

85
00:03:09,180 --> 00:03:10,920
every single paceto is always going to

86
00:03:10,920 --> 00:03:14,340
be cryptographically signed now what do

87
00:03:14,340 --> 00:03:17,220
you use besettos for well essentially

88
00:03:17,220 --> 00:03:19,800
what you use them for is to prove that a

89
00:03:19,800 --> 00:03:21,420
certain piece of Json data can be

90
00:03:21,420 --> 00:03:23,519
trusted and it turns out this is a

91
00:03:23,519 --> 00:03:25,080
really useful thing when you're building

92
00:03:25,080 --> 00:03:26,840
applications that work over the internet

93
00:03:26,840 --> 00:03:29,879
now what does it mean to have signatures

94
00:03:29,879 --> 00:03:31,319
to have data that's trusted and all

95
00:03:31,319 --> 00:03:32,819
these things well think of it like a

96
00:03:32,819 --> 00:03:34,620
passport so when you have a passport

97
00:03:34,620 --> 00:03:36,420
passports have information about you

98
00:03:36,420 --> 00:03:39,000
inside of them right so I'm Randall so I

99
00:03:39,000 --> 00:03:40,379
have a name I have a height I have eye

100
00:03:40,379 --> 00:03:42,599
color all these attributes about me or

101
00:03:42,599 --> 00:03:45,120
claims about me are documented in my

102
00:03:45,120 --> 00:03:46,920
passport and when I go to the airport

103
00:03:46,920 --> 00:03:48,900
the airport guards will check my

104
00:03:48,900 --> 00:03:50,640
passport and they're going to look at it

105
00:03:50,640 --> 00:03:52,920
and the reason that they trust the data

106
00:03:52,920 --> 00:03:55,319
inside of the passport is because they

107
00:03:55,319 --> 00:03:57,239
trust the US government I'm a U.S

108
00:03:57,239 --> 00:03:59,040
citizen they know what the stamp on my

109
00:03:59,040 --> 00:04:00,840
passport looks like and so therefore

110
00:04:00,840 --> 00:04:02,760
they say we trust this

111
00:04:02,760 --> 00:04:04,860
now the only difference between a

112
00:04:04,860 --> 00:04:08,159
passport and a passetto is that a uh

113
00:04:08,159 --> 00:04:09,959
pacetos can only be used a single time

114
00:04:09,959 --> 00:04:11,760
so you can't reuse them like you can a

115
00:04:11,760 --> 00:04:14,879
passport and B they have a very short

116
00:04:14,879 --> 00:04:16,680
lifespan a very short duration of

117
00:04:16,680 --> 00:04:19,019
existence unlike a passport which in the

118
00:04:19,019 --> 00:04:21,298
US lasts for about 10 years

119
00:04:21,298 --> 00:04:22,500
now

120
00:04:22,500 --> 00:04:24,660
a minute ago I said that every passetto

121
00:04:24,660 --> 00:04:26,400
is cryptographically signed but what

122
00:04:26,400 --> 00:04:27,960
does that mean and why is it important

123
00:04:27,960 --> 00:04:30,600
well think of it like this so let's say

124
00:04:30,600 --> 00:04:32,639
I write you a letter I actually type out

125
00:04:32,639 --> 00:04:34,860
a letter on a piece of paper and at the

126
00:04:34,860 --> 00:04:37,199
bottom I sign the letter I put it in the

127
00:04:37,199 --> 00:04:38,820
mail I address it to your house and I

128
00:04:38,820 --> 00:04:39,900
send it to you

129
00:04:39,900 --> 00:04:41,400
well when you get this letter and open

130
00:04:41,400 --> 00:04:43,800
it up if you look at it you might be

131
00:04:43,800 --> 00:04:45,960
reading this letter and saying hey you

132
00:04:45,960 --> 00:04:47,580
know this letter is typed out so I can't

133
00:04:47,580 --> 00:04:49,860
see the handwriting and I don't know if

134
00:04:49,860 --> 00:04:51,600
Randall actually sent this to me or not

135
00:04:51,600 --> 00:04:53,340
right because it's typed you there's no

136
00:04:53,340 --> 00:04:55,740
like signature on it but the part that

137
00:04:55,740 --> 00:04:57,660
uh builds the trust is when you look

138
00:04:57,660 --> 00:04:59,160
down at the bottom and you actually see

139
00:04:59,160 --> 00:05:00,479
my written signature and you say to

140
00:05:00,479 --> 00:05:02,580
yourself okay well I know who Randall is

141
00:05:02,580 --> 00:05:04,560
and I know what a signature looks like

142
00:05:04,560 --> 00:05:07,620
and I trust Randall so therefore I trust

143
00:05:07,620 --> 00:05:09,960
that this information is valid because I

144
00:05:09,960 --> 00:05:11,340
trust Randall I know what a signature

145
00:05:11,340 --> 00:05:13,199
looks like this was clearly signed by

146
00:05:13,199 --> 00:05:16,440
him and it conveys trust this is the

147
00:05:16,440 --> 00:05:18,419
exact same thing that happens in the

148
00:05:18,419 --> 00:05:21,840
digital world just using cryptography

149
00:05:21,840 --> 00:05:23,580
so with that being said what did

150
00:05:23,580 --> 00:05:25,320
pesettos look like under the hood like

151
00:05:25,320 --> 00:05:27,060
what are they actually right and

152
00:05:27,060 --> 00:05:28,860
basically they look like this these long

153
00:05:28,860 --> 00:05:31,080
gerbilt uh strings but they have

154
00:05:31,080 --> 00:05:33,300
components that that make uh you know

155
00:05:33,300 --> 00:05:34,680
they make them special

156
00:05:34,680 --> 00:05:36,479
so first of all the first property of

157
00:05:36,479 --> 00:05:38,880
passettos is that all the actual Json

158
00:05:38,880 --> 00:05:40,919
data and like text inside of these are

159
00:05:40,919 --> 00:05:43,979
is always base64 encoded and URL safe

160
00:05:43,979 --> 00:05:46,139
this means you can safely pass them in

161
00:05:46,139 --> 00:05:48,180
things like URL query string parameters

162
00:05:48,180 --> 00:05:49,620
and stuff like that

163
00:05:49,620 --> 00:05:52,320
secondly all pesetos have three

164
00:05:52,320 --> 00:05:55,320
sometimes four parts that are period

165
00:05:55,320 --> 00:05:57,780
delimited so the first component of a

166
00:05:57,780 --> 00:05:59,400
peseto is the version number which

167
00:05:59,400 --> 00:06:01,620
identifies which version of the paceto

168
00:06:01,620 --> 00:06:04,440
specification you're using now as of

169
00:06:04,440 --> 00:06:06,120
today there's actually four versions of

170
00:06:06,120 --> 00:06:08,100
the specification I'm showing you an

171
00:06:08,100 --> 00:06:09,720
older version but they're all basically

172
00:06:09,720 --> 00:06:11,400
almost you know very very little

173
00:06:11,400 --> 00:06:13,560
differences between them

174
00:06:13,560 --> 00:06:16,080
the second uh section of episode is

175
00:06:16,080 --> 00:06:17,940
called the purpose and what this refers

176
00:06:17,940 --> 00:06:20,220
to is either public or local and we'll

177
00:06:20,220 --> 00:06:21,660
talk about these more in a moment but

178
00:06:21,660 --> 00:06:24,000
there's two ways to use besetto tokens

179
00:06:24,000 --> 00:06:26,580
depending on your your model like where

180
00:06:26,580 --> 00:06:28,020
you need to send them and what sort of

181
00:06:28,020 --> 00:06:30,780
security considerations you you have

182
00:06:30,780 --> 00:06:32,400
the third section is the interesting bit

183
00:06:32,400 --> 00:06:34,860
this is called the payload and this is

184
00:06:34,860 --> 00:06:38,280
just base64 encoded sometimes encrypted

185
00:06:38,280 --> 00:06:40,860
and cryptographically signed Json data

186
00:06:40,860 --> 00:06:42,600
so this is where the interesting Json

187
00:06:42,600 --> 00:06:45,180
data lives essentially and then finally

188
00:06:45,180 --> 00:06:46,860
there's this optional fourth part which

189
00:06:46,860 --> 00:06:49,380
is a footer which can be anything so

190
00:06:49,380 --> 00:06:51,419
this is some Basics D4 encoded data it

191
00:06:51,419 --> 00:06:52,979
could just be text it could be a string

192
00:06:52,979 --> 00:06:54,840
it could be non-existent it could be a

193
00:06:54,840 --> 00:06:57,060
blob of Json data it's not really well

194
00:06:57,060 --> 00:06:58,680
defined

195
00:06:58,680 --> 00:07:01,740
so what's inside of pesetos well first

196
00:07:01,740 --> 00:07:03,539
of all you know like we said before it's

197
00:07:03,539 --> 00:07:06,060
just Json data and so you have claims

198
00:07:06,060 --> 00:07:08,460
embedded in these things and the way or

199
00:07:08,460 --> 00:07:10,259
sorry in the passetto specification we

200
00:07:10,259 --> 00:07:12,180
call them claims but essentially each

201
00:07:12,180 --> 00:07:15,060
one of these Json Keys is a claim so

202
00:07:15,060 --> 00:07:17,100
this paceto has an ID claim an email

203
00:07:17,100 --> 00:07:19,319
claim a permissions claim that's just

204
00:07:19,319 --> 00:07:21,180
sort of the the shorthand terminology we

205
00:07:21,180 --> 00:07:22,319
use

206
00:07:22,319 --> 00:07:24,599
now there are a few reserved claims in

207
00:07:24,599 --> 00:07:26,880
pacetos that are things that like you

208
00:07:26,880 --> 00:07:29,099
always yeah or sorry that if if you're

209
00:07:29,099 --> 00:07:30,539
going to use them you have to use them

210
00:07:30,539 --> 00:07:32,340
according to these definitions and

211
00:07:32,340 --> 00:07:33,780
there's a number of these so for example

212
00:07:33,780 --> 00:07:37,139
there's the ISS claim which it's called

213
00:07:37,139 --> 00:07:39,120
the issuer and that basically says who

214
00:07:39,120 --> 00:07:40,680
created this token so it's really useful

215
00:07:40,680 --> 00:07:41,940
when you're doing certain types or

216
00:07:41,940 --> 00:07:43,919
building certain types of apps there's

217
00:07:43,919 --> 00:07:46,680
also an expiration claim an issue.claim

218
00:07:46,680 --> 00:07:48,360
Etc so there's a lot of these core

219
00:07:48,360 --> 00:07:50,099
things you can use to properly

220
00:07:50,099 --> 00:07:51,780
communicate with people using the same

221
00:07:51,780 --> 00:07:53,520
standard

222
00:07:53,520 --> 00:07:54,780
so what are the different types of

223
00:07:54,780 --> 00:07:57,840
potatoes well the default the go-to the

224
00:07:57,840 --> 00:07:59,039
one that's the most common and popular

225
00:07:59,039 --> 00:08:01,500
is the local paceto and so this is the

226
00:08:01,500 --> 00:08:03,300
purpose uh thing I showed you earlier

227
00:08:03,300 --> 00:08:05,039
now local pesettos are really cool

228
00:08:05,039 --> 00:08:07,560
because a they're symmetric which means

229
00:08:07,560 --> 00:08:10,199
they use shared key cryptography now

230
00:08:10,199 --> 00:08:12,000
we're going to talk about this more in a

231
00:08:12,000 --> 00:08:13,740
moment and show examples but local

232
00:08:13,740 --> 00:08:16,139
pacetos are great because if you have a

233
00:08:16,139 --> 00:08:18,180
system where you can securely store a

234
00:08:18,180 --> 00:08:21,479
secret key or one or more systems this

235
00:08:21,479 --> 00:08:22,800
is the one you want to use and the

236
00:08:22,800 --> 00:08:24,240
reason why is because

237
00:08:24,240 --> 00:08:26,759
local pacetos also are also encrypted

238
00:08:26,759 --> 00:08:28,800
and so that means the Json data that

239
00:08:28,800 --> 00:08:31,020
goes inside of them can never be read by

240
00:08:31,020 --> 00:08:33,299
anyone without a secret key

241
00:08:33,299 --> 00:08:35,219
they're also really simple to use and

242
00:08:35,219 --> 00:08:36,719
easy to manage and so that's another

243
00:08:36,719 --> 00:08:37,979
benefit

244
00:08:37,979 --> 00:08:39,899
now the other type of passetto you have

245
00:08:39,899 --> 00:08:42,479
are public passettes now as the name

246
00:08:42,479 --> 00:08:45,120
implies these are asymmetric and they

247
00:08:45,120 --> 00:08:47,040
use public key cryptography hence the

248
00:08:47,040 --> 00:08:50,040
name now public pesettos are not

249
00:08:50,040 --> 00:08:52,019
encrypted so there's no way to encrypt

250
00:08:52,019 --> 00:08:54,420
the data which means that anyone who can

251
00:08:54,420 --> 00:08:56,100
get a copy of this token can actually

252
00:08:56,100 --> 00:08:58,140
see the data inside of it now that's

253
00:08:58,140 --> 00:08:59,880
okay for certain things but if you need

254
00:08:59,880 --> 00:09:01,620
encryption then you have to use local

255
00:09:01,620 --> 00:09:02,820
placettos

256
00:09:02,820 --> 00:09:05,459
and then finally public key cryptography

257
00:09:05,459 --> 00:09:07,560
in pretty much every circumstance is

258
00:09:07,560 --> 00:09:09,899
relatively complicated and so that's you

259
00:09:09,899 --> 00:09:11,519
know sort of a trade-off of of using

260
00:09:11,519 --> 00:09:13,019
these types of pastettas

261
00:09:13,019 --> 00:09:15,540
so how do local passettos work

262
00:09:15,540 --> 00:09:17,580
well the main idea is you have two

263
00:09:17,580 --> 00:09:19,260
things you need to care about first of

264
00:09:19,260 --> 00:09:21,180
all you have a blob of Json data and

265
00:09:21,180 --> 00:09:22,920
second of all you have a secret key like

266
00:09:22,920 --> 00:09:24,899
a passphrase essentially and when you

267
00:09:24,899 --> 00:09:26,820
combine those two things you create a

268
00:09:26,820 --> 00:09:28,800
passetto that's encrypted like we said

269
00:09:28,800 --> 00:09:31,140
before and so what that means is if if

270
00:09:31,140 --> 00:09:33,180
an attacker gets a hold of this paceto

271
00:09:33,180 --> 00:09:34,980
and tries to inspect it and see what's

272
00:09:34,980 --> 00:09:36,480
in there they're not going to be able to

273
00:09:36,480 --> 00:09:37,980
see anything so they're sort of out of

274
00:09:37,980 --> 00:09:39,779
luck unless they have this key

275
00:09:39,779 --> 00:09:42,000
now the way this works is the secret key

276
00:09:42,000 --> 00:09:43,920
is needed to both create the bassetto

277
00:09:43,920 --> 00:09:46,080
and do the encryption but that same key

278
00:09:46,080 --> 00:09:48,060
is also needed to decrypt the passetto

279
00:09:48,060 --> 00:09:50,220
and so that's why we call it shared key

280
00:09:50,220 --> 00:09:52,080
cryptography because both parties the

281
00:09:52,080 --> 00:09:54,360
party encrypting the data and decrypting

282
00:09:54,360 --> 00:09:57,000
the data needs to share that same key

283
00:09:57,000 --> 00:09:58,980
and so usually what that means is it

284
00:09:58,980 --> 00:10:00,959
only works in trusted systems like if

285
00:10:00,959 --> 00:10:02,820
you're building uh applications on an

286
00:10:02,820 --> 00:10:04,380
internal Network and you have like trust

287
00:10:04,380 --> 00:10:06,060
between your your platforms that's one

288
00:10:06,060 --> 00:10:07,440
way to do this

289
00:10:07,440 --> 00:10:09,180
so what are some use cases how would you

290
00:10:09,180 --> 00:10:11,100
actually use this in the real world well

291
00:10:11,100 --> 00:10:13,140
a really great example is having a

292
00:10:13,140 --> 00:10:15,360
website with a download server so for

293
00:10:15,360 --> 00:10:16,620
example maybe you're running a video

294
00:10:16,620 --> 00:10:18,600
course website and you're teaching

295
00:10:18,600 --> 00:10:20,700
people uh some courses like for example

296
00:10:20,700 --> 00:10:23,700
uh one of our presenters is gonna runs

297
00:10:23,700 --> 00:10:25,500
the web Security Academy and has a bunch

298
00:10:25,500 --> 00:10:27,180
of students and they do some amazing

299
00:10:27,180 --> 00:10:29,700
stuff and um maybe he wants to sell

300
00:10:29,700 --> 00:10:31,380
videos for his courses and so this could

301
00:10:31,380 --> 00:10:32,760
be a way to do that

302
00:10:32,760 --> 00:10:34,920
so in this scenario what would happen is

303
00:10:34,920 --> 00:10:37,380
the user would say hey website I want to

304
00:10:37,380 --> 00:10:39,600
download this this mp4 file

305
00:10:39,600 --> 00:10:41,220
and then what's going to happen is the

306
00:10:41,220 --> 00:10:42,600
website is going to validate this

307
00:10:42,600 --> 00:10:44,339
request and say okay well you're logged

308
00:10:44,339 --> 00:10:46,740
in you you bought the course you you can

309
00:10:46,740 --> 00:10:47,940
download it and so we're going to

310
00:10:47,940 --> 00:10:49,920
redirect you to the download server to

311
00:10:49,920 --> 00:10:51,600
download a file and the way they're

312
00:10:51,600 --> 00:10:53,640
going to do that is by first of all both

313
00:10:53,640 --> 00:10:55,440
of these Services need to have this

314
00:10:55,440 --> 00:10:57,120
shared secret key

315
00:10:57,120 --> 00:10:59,940
second of all the www service is going

316
00:10:59,940 --> 00:11:01,860
to generate this paceto token and

317
00:11:01,860 --> 00:11:03,720
include some data inside of it so it

318
00:11:03,720 --> 00:11:05,519
might include things like a purchase ID

319
00:11:05,519 --> 00:11:07,620
the permissions that this user has like

320
00:11:07,620 --> 00:11:09,240
they're authorized to download video One

321
00:11:09,240 --> 00:11:11,700
video two video three

322
00:11:11,700 --> 00:11:13,500
um and then they're going to redirect

323
00:11:13,500 --> 00:11:15,420
from this service to the download

324
00:11:15,420 --> 00:11:17,640
service and in the query string

325
00:11:17,640 --> 00:11:19,019
parameters for that request they're

326
00:11:19,019 --> 00:11:21,000
going to include both the paceto token

327
00:11:21,000 --> 00:11:24,060
as a URL coursing parameter as well as

328
00:11:24,060 --> 00:11:25,800
the video file that the user wants to

329
00:11:25,800 --> 00:11:27,240
download the file name

330
00:11:27,240 --> 00:11:29,220
now the download server is going to

331
00:11:29,220 --> 00:11:31,440
receive this request parse out that

332
00:11:31,440 --> 00:11:33,660
token and file parameter it's going to

333
00:11:33,660 --> 00:11:35,579
decrypt the token using the secret key

334
00:11:35,579 --> 00:11:37,560
it's going to verify the purchase ID

335
00:11:37,560 --> 00:11:39,480
it's going to verify the permissions and

336
00:11:39,480 --> 00:11:40,920
say okay well the user wants to download

337
00:11:40,920 --> 00:11:42,959
video one and they have the permission

338
00:11:42,959 --> 00:11:45,000
to find here and we trust that and so

339
00:11:45,000 --> 00:11:47,040
therefore we trust that they can do this

340
00:11:47,040 --> 00:11:49,200
and then finally the download service is

341
00:11:49,200 --> 00:11:50,640
going to let the user download the file

342
00:11:50,640 --> 00:11:53,100
so this is an example of how this can be

343
00:11:53,100 --> 00:11:55,140
used in the real world now note this

344
00:11:55,140 --> 00:11:56,700
token is being used a single time only

345
00:11:56,700 --> 00:11:58,740
and it only exists for a short period of

346
00:11:58,740 --> 00:12:00,600
time during the redirect that is

347
00:12:00,600 --> 00:12:03,360
important from a security perspective

348
00:12:03,360 --> 00:12:05,820
now what about public passettos how do

349
00:12:05,820 --> 00:12:07,800
they work well in this scenario you have

350
00:12:07,800 --> 00:12:09,540
three things you care about now you have

351
00:12:09,540 --> 00:12:12,540
the same Json data and you have a you

352
00:12:12,540 --> 00:12:13,800
still have a secret key we call it

353
00:12:13,800 --> 00:12:15,720
private key but you also have this other

354
00:12:15,720 --> 00:12:17,579
key called a public key and the public

355
00:12:17,579 --> 00:12:20,100
key is meant to be shared publicly and

356
00:12:20,100 --> 00:12:21,720
so there's like there's nothing you have

357
00:12:21,720 --> 00:12:23,519
to keep secret there the only thing you

358
00:12:23,519 --> 00:12:26,040
have to keep secret is the private key

359
00:12:26,040 --> 00:12:28,740
and the way public pesettos work is you

360
00:12:28,740 --> 00:12:30,480
create the public passetto by combining

361
00:12:30,480 --> 00:12:33,300
your Json data with your private key so

362
00:12:33,300 --> 00:12:34,620
you don't need your public key to

363
00:12:34,620 --> 00:12:36,899
actually create the the paceto you only

364
00:12:36,899 --> 00:12:38,579
need your private key

365
00:12:38,579 --> 00:12:41,160
now if an attacker gets a copy of this

366
00:12:41,160 --> 00:12:43,680
paceto like I said before because it's

367
00:12:43,680 --> 00:12:46,019
public the data is not encrypted and

368
00:12:46,019 --> 00:12:48,000
that means an attacker can read all the

369
00:12:48,000 --> 00:12:49,920
Json data so one thing you want to keep

370
00:12:49,920 --> 00:12:51,600
in mind when using public-pacetos is

371
00:12:51,600 --> 00:12:53,339
again whatever Json data you put in

372
00:12:53,339 --> 00:12:55,019
there should not be super sensitive

373
00:12:55,019 --> 00:12:56,519
information

374
00:12:56,519 --> 00:12:57,600
now

375
00:12:57,600 --> 00:12:59,579
in in when you're using public any form

376
00:12:59,579 --> 00:13:01,860
of public key cryptography the private

377
00:13:01,860 --> 00:13:03,779
key is what you use to create a token

378
00:13:03,779 --> 00:13:05,940
and the public key is what you use to

379
00:13:05,940 --> 00:13:07,680
validate that the token is valid and

380
00:13:07,680 --> 00:13:09,779
hasn't been tampered with or changed in

381
00:13:09,779 --> 00:13:11,760
any way so the public key is used for

382
00:13:11,760 --> 00:13:13,440
validation and integrity it's like

383
00:13:13,440 --> 00:13:15,240
looking at that signature that stamp on

384
00:13:15,240 --> 00:13:17,100
your passport but it's not encrypting

385
00:13:17,100 --> 00:13:18,300
anything

386
00:13:18,300 --> 00:13:20,459
now how do you use use these in the real

387
00:13:20,459 --> 00:13:22,860
world a great example is website

388
00:13:22,860 --> 00:13:25,260
authentication so many of you might be

389
00:13:25,260 --> 00:13:27,000
familiar with oauth or openid connect

390
00:13:27,000 --> 00:13:29,160
procedo is a really great use case for

391
00:13:29,160 --> 00:13:31,440
initializing these flows so for example

392
00:13:31,440 --> 00:13:33,300
a user might go to a website and say hey

393
00:13:33,300 --> 00:13:34,740
I want to log in

394
00:13:34,740 --> 00:13:36,480
get redirected to an authorization

395
00:13:36,480 --> 00:13:38,760
server the authorization server is going

396
00:13:38,760 --> 00:13:40,079
to say hey what's your username and

397
00:13:40,079 --> 00:13:42,540
password you know the user gives it to

398
00:13:42,540 --> 00:13:44,519
them the authorization server is then

399
00:13:44,519 --> 00:13:47,160
going to use its private key to generate

400
00:13:47,160 --> 00:13:50,700
a passetto token for the user then it's

401
00:13:50,700 --> 00:13:53,660
going to transmit that that public token

402
00:13:53,660 --> 00:13:56,940
to uh back to the web server the web

403
00:13:56,940 --> 00:13:58,680
server is then going to parse that token

404
00:13:58,680 --> 00:14:01,019
out validate it using the public key of

405
00:14:01,019 --> 00:14:03,000
the authorization server and note that

406
00:14:03,000 --> 00:14:05,339
in this scenario the private key only

407
00:14:05,339 --> 00:14:07,079
needs to be known by the authorization

408
00:14:07,079 --> 00:14:08,880
server no other parties need to know

409
00:14:08,880 --> 00:14:10,200
about it which makes it particularly

410
00:14:10,200 --> 00:14:11,700
great in these scenarios where you don't

411
00:14:11,700 --> 00:14:14,040
have trusted web applications talking to

412
00:14:14,040 --> 00:14:15,000
each other

413
00:14:15,000 --> 00:14:18,180
and uh and then yeah finally uh you

414
00:14:18,180 --> 00:14:19,860
would then create a server-side session

415
00:14:19,860 --> 00:14:22,019
that's secure and keep the user logged

416
00:14:22,019 --> 00:14:24,120
in so this is like a good example for uh

417
00:14:24,120 --> 00:14:26,880
how to use public passettos

418
00:14:26,880 --> 00:14:28,200
so

419
00:14:28,200 --> 00:14:30,240
why are pesettos better than Json web

420
00:14:30,240 --> 00:14:31,500
tokens and why were we talking about

421
00:14:31,500 --> 00:14:33,480
this well the way you should think about

422
00:14:33,480 --> 00:14:35,579
pacetos is that they're essentially like

423
00:14:35,579 --> 00:14:37,560
Json web tokens they're good parts right

424
00:14:37,560 --> 00:14:39,240
so it takes a lot of things from the

425
00:14:39,240 --> 00:14:41,279
Json web token spec and gets rid of the

426
00:14:41,279 --> 00:14:43,019
bad stuff and just leaves a little bit

427
00:14:43,019 --> 00:14:44,760
of the optimized stuff that helps you

428
00:14:44,760 --> 00:14:47,100
now in a really quick nutshell you might

429
00:14:47,100 --> 00:14:48,480
be wondering well I've heard a lot about

430
00:14:48,480 --> 00:14:50,279
Json web tokens they're used all over

431
00:14:50,279 --> 00:14:52,620
the place what's wrong with them and the

432
00:14:52,620 --> 00:14:54,180
answer is that first of all they're

433
00:14:54,180 --> 00:14:55,920
really widely misused and so people use

434
00:14:55,920 --> 00:14:57,600
them in all sorts of security contexts

435
00:14:57,600 --> 00:14:59,279
that cause problems

436
00:14:59,279 --> 00:15:01,260
um secondly they force implementations

437
00:15:01,260 --> 00:15:03,480
to strictly process the algorithm header

438
00:15:03,480 --> 00:15:06,180
which can cause forgery issues third

439
00:15:06,180 --> 00:15:07,920
there's a lot of poor cryptography

440
00:15:07,920 --> 00:15:10,320
choices that were made by the designers

441
00:15:10,320 --> 00:15:12,480
of the specifications that allow you as

442
00:15:12,480 --> 00:15:14,160
a developer to sort of shoot yourself in

443
00:15:14,160 --> 00:15:16,980
the foot so for example using RSA with

444
00:15:16,980 --> 00:15:19,260
PKS makes you vulnerable to padding

445
00:15:19,260 --> 00:15:20,639
Oracle attacks

446
00:15:20,639 --> 00:15:23,940
um using RSA with oaep padding is bad

447
00:15:23,940 --> 00:15:25,339
because cryptographers have been

448
00:15:25,339 --> 00:15:27,779
recommending people move away from RSA

449
00:15:27,779 --> 00:15:29,699
for years now due to complexity and

450
00:15:29,699 --> 00:15:32,519
potential vulnerabilities using elliptic

451
00:15:32,519 --> 00:15:34,519
curve Duffy Hellman with the weirshoff

452
00:15:34,519 --> 00:15:37,620
weirstrass curves introduces risk of

453
00:15:37,620 --> 00:15:39,420
invalid curve attacks that would allow

454
00:15:39,420 --> 00:15:41,639
attackers to steal secret keys and then

455
00:15:41,639 --> 00:15:44,160
in some scenarios the Json web token

456
00:15:44,160 --> 00:15:46,380
specifications just allow you to use the

457
00:15:46,380 --> 00:15:48,180
wrong cryptographic choices entirely

458
00:15:48,180 --> 00:15:51,000
which is like a massive issue and so

459
00:15:51,000 --> 00:15:53,760
basically paceto was created to fix a

460
00:15:53,760 --> 00:15:55,079
lot of these issues

461
00:15:55,079 --> 00:15:57,180
so how do you get started well if you

462
00:15:57,180 --> 00:15:58,380
want to check it out you can go to the

463
00:15:58,380 --> 00:16:00,600
website paceto.io and play around with

464
00:16:00,600 --> 00:16:03,000
it there's an RFC there's lots of

465
00:16:03,000 --> 00:16:04,380
developer libraries and a lot of

466
00:16:04,380 --> 00:16:06,120
different programming languages there's

467
00:16:06,120 --> 00:16:07,500
great articles linked to there and

468
00:16:07,500 --> 00:16:09,180
presentations there's tons of useful

469
00:16:09,180 --> 00:16:11,579
resources if you prefer watching videos

470
00:16:11,579 --> 00:16:13,320
definitely go on YouTube and search

471
00:16:13,320 --> 00:16:15,300
paceto you'll see some of my talks and

472
00:16:15,300 --> 00:16:17,100
some other people that have given a lot

473
00:16:17,100 --> 00:16:19,740
more research on the subjects and yeah

474
00:16:19,740 --> 00:16:21,720
thank you so much hopefully you enjoyed

475
00:16:21,720 --> 00:16:23,639
this if you want to learn some more fun

476
00:16:23,639 --> 00:16:25,740
security stuff or just hang out with me

477
00:16:25,740 --> 00:16:28,019
I have my personal site linked I have

478
00:16:28,019 --> 00:16:29,699
the sneak website linked my Twitter

479
00:16:29,699 --> 00:16:32,279
sneaks Twitter follow us everywhere and

480
00:16:32,279 --> 00:16:35,180
yo thank you so much

481
00:16:35,279 --> 00:16:36,959
thank you so much for that right now

482
00:16:36,959 --> 00:16:38,759
that was really really good uh I didn't

483
00:16:38,759 --> 00:16:40,139
expect anything less but that was really

484
00:16:40,139 --> 00:16:41,940
nice and I always loved the artwork that

485
00:16:41,940 --> 00:16:43,019
you've got

486
00:16:43,019 --> 00:16:44,759
um but I think it was really easily put

487
00:16:44,759 --> 00:16:46,680
through as well as you said it's just uh

488
00:16:46,680 --> 00:16:49,320
Json web tokens without the bad parts so

489
00:16:49,320 --> 00:16:50,519
I think I'm just gonna remember like

490
00:16:50,519 --> 00:16:53,519
that's my takeaway for what uh what it

491
00:16:53,519 --> 00:16:56,100
is so thank you for putting that through

492
00:16:56,100 --> 00:16:57,480
um I'm just gonna have a quick look if

493
00:16:57,480 --> 00:16:58,740
there are any questions that have come

494
00:16:58,740 --> 00:17:00,420
through but otherwise you know right now

495
00:17:00,420 --> 00:17:02,519
it's an amazing job of plugging in all

496
00:17:02,519 --> 00:17:03,959
his socials I know he loves talking

497
00:17:03,959 --> 00:17:06,119
about this stuff so hit him up with any

498
00:17:06,119 --> 00:17:07,679
questions that you do have but thank you

499
00:17:07,679 --> 00:17:09,900
so much for joining us Randall and

500
00:17:09,900 --> 00:17:11,699
thanks so much for the talk thank you

501
00:17:11,699 --> 00:17:13,199
looking forward to hanging out later

502
00:17:13,199 --> 00:17:15,679
take care

