1
00:00:00,030 --> 00:00:05,370
all right well welcome to the second

2
00:00:05,370 --> 00:00:09,240
best talk of the conference all right

3
00:00:09,240 --> 00:00:10,860
and why is this the second best talk

4
00:00:10,860 --> 00:00:14,700
I'll tell you a little bit so I am the

5
00:00:14,700 --> 00:00:18,480
CEO for life omec i have to tell you a

6
00:00:18,480 --> 00:00:21,300
little bit of about life omec we are a

7
00:00:21,300 --> 00:00:24,240
software company that builds a

8
00:00:24,240 --> 00:00:27,349
cloud-based platform primarily using AWS

9
00:00:27,349 --> 00:00:32,430
for healthcare data lots of patient data

10
00:00:32,430 --> 00:00:35,300
lots of genomic data we work with

11
00:00:35,300 --> 00:00:39,570
medical institutes and hospitals and so

12
00:00:39,570 --> 00:00:43,739
on for to help them do their cancer

13
00:00:43,739 --> 00:00:47,070
research and use data to do machine

14
00:00:47,070 --> 00:00:49,739
learnings and studies and so on now we

15
00:00:49,739 --> 00:00:52,289
also have a set of mobile apps that uses

16
00:00:52,289 --> 00:00:55,289
the platform for the backend as well and

17
00:00:55,289 --> 00:00:57,629
the mobile apps are directly patient

18
00:00:57,629 --> 00:01:00,629
facing consumer facing now additionally

19
00:01:00,629 --> 00:01:03,239
I'm also the founder of Jupiter 1

20
00:01:03,239 --> 00:01:05,970
Jupiter 1 is a cloud security product

21
00:01:05,970 --> 00:01:07,799
I'll tell you about that in a little bit

22
00:01:07,799 --> 00:01:12,150
as well so we're a start-up right so as

23
00:01:12,150 --> 00:01:15,030
a start-up we are very engineering focus

24
00:01:15,030 --> 00:01:19,650
we are cloud native and with the small

25
00:01:19,650 --> 00:01:23,130
team that we have we actually do over 20

26
00:01:23,130 --> 00:01:25,500
sometimes up to 50 production deploys

27
00:01:25,500 --> 00:01:29,159
every day and earlier there was a

28
00:01:29,159 --> 00:01:33,200
speaker who asked the question who are

29
00:01:33,200 --> 00:01:36,150
automating ninety a hundred percent of

30
00:01:36,150 --> 00:01:40,530
their production deployments we are we

31
00:01:40,530 --> 00:01:42,600
are automating nearly a hundred percent

32
00:01:42,600 --> 00:01:45,570
of all of our production deployments now

33
00:01:45,570 --> 00:01:47,520
but that's that we are also in a highly

34
00:01:47,520 --> 00:01:49,470
regulated industry we have to be HIPAA

35
00:01:49,470 --> 00:01:52,649
compliant we have to be gdpr compliant

36
00:01:52,649 --> 00:01:55,560
we have to get through different kinds

37
00:01:55,560 --> 00:01:57,570
of security certifications but how do we

38
00:01:57,570 --> 00:01:58,170
do that

39
00:01:58,170 --> 00:02:00,210
now how do we do that at that speed

40
00:02:00,210 --> 00:02:02,399
without slowing down now that's what I

41
00:02:02,399 --> 00:02:05,310
want to talk about today so today's talk

42
00:02:05,310 --> 00:02:10,139
I I don't have any slides on market

43
00:02:10,139 --> 00:02:12,480
trends I don't have any news to share

44
00:02:12,480 --> 00:02:13,440
you and

45
00:02:13,440 --> 00:02:17,300
have I don't have any statistics on

46
00:02:17,300 --> 00:02:20,070
certain things but what I will share are

47
00:02:20,070 --> 00:02:23,130
the ways that we do deaf suck-ups or how

48
00:02:23,130 --> 00:02:24,540
do we accomplish and overcome these

49
00:02:24,540 --> 00:02:27,350
challenges in a clown native environment

50
00:02:27,350 --> 00:02:30,810
so the developers in the room by a quick

51
00:02:30,810 --> 00:02:34,350
show of hands who here do not have

52
00:02:34,350 --> 00:02:36,240
I mean access to their local machine but

53
00:02:36,240 --> 00:02:41,070
wish they do nobody just won everybody

54
00:02:41,070 --> 00:02:42,570
else is having access to the machine

55
00:02:42,570 --> 00:02:47,580
that is good all right for the security

56
00:02:47,580 --> 00:02:50,640
folks in the room by a show of hand who

57
00:02:50,640 --> 00:02:53,070
thinks developers don't care about

58
00:02:53,070 --> 00:02:59,400
security only won a half now I'm not

59
00:02:59,400 --> 00:03:01,380
talking about developers who are not

60
00:03:01,380 --> 00:03:03,300
capable of writing a secure code or who

61
00:03:03,300 --> 00:03:04,800
hasn't been trained or certain things

62
00:03:04,800 --> 00:03:08,430
but developers if you think that they

63
00:03:08,430 --> 00:03:11,610
don't care about security I offer you

64
00:03:11,610 --> 00:03:14,190
one solution there are bad developers

65
00:03:14,190 --> 00:03:18,330
you should fire them all right so that's

66
00:03:18,330 --> 00:03:22,950
that first and foremost are we having

67
00:03:22,950 --> 00:03:31,170
this issue again ok first of four Mo's

68
00:03:31,170 --> 00:03:34,470
that I really think that security is an

69
00:03:34,470 --> 00:03:36,300
is an organization challenge I'll talk

70
00:03:36,300 --> 00:03:37,680
about this in two aspects and how we

71
00:03:37,680 --> 00:03:39,290
deal with it one is on the

72
00:03:39,290 --> 00:03:41,730
organizational aspect and people in

73
00:03:41,730 --> 00:03:44,519
kochore aspect and second is more kind

74
00:03:44,519 --> 00:03:47,489
of technical implementation challenges

75
00:03:47,489 --> 00:03:51,450
so what is theft set cops and the better

76
00:03:51,450 --> 00:03:53,760
question to ask is how do you security

77
00:03:53,760 --> 00:03:56,130
or how how does secure to keep up with

78
00:03:56,130 --> 00:03:57,600
DevOps at the speed

79
00:03:57,600 --> 00:03:59,940
we've probably heard many definitions of

80
00:03:59,940 --> 00:04:01,500
def sykov so we've heard about the

81
00:04:01,500 --> 00:04:03,630
concept of shifting left now this is

82
00:04:03,630 --> 00:04:07,530
what I offer as our view of deficit cops

83
00:04:07,530 --> 00:04:10,019
now I actually think that DevOps in

84
00:04:10,019 --> 00:04:12,450
deficits devstack ops are very very

85
00:04:12,450 --> 00:04:12,989
similar

86
00:04:12,989 --> 00:04:15,360
we all have their similar goals we all

87
00:04:15,360 --> 00:04:17,850
want the same things which is to move

88
00:04:17,850 --> 00:04:20,959
fast and automate everything you can

89
00:04:20,959 --> 00:04:24,419
with confidence now that last part is

90
00:04:24,419 --> 00:04:25,890
the most important part is with

91
00:04:25,890 --> 00:04:27,030
confidence the

92
00:04:27,030 --> 00:04:28,440
purrs one that as well it's not just

93
00:04:28,440 --> 00:04:31,170
security people developers want their

94
00:04:31,170 --> 00:04:34,740
code to be scalable and to be reliable

95
00:04:34,740 --> 00:04:37,530
so to produce quality go of the code and

96
00:04:37,530 --> 00:04:38,639
again I'm talking about the good

97
00:04:38,639 --> 00:04:40,590
developers right now the ones that you

98
00:04:40,590 --> 00:04:45,030
fire now on the other hand there are

99
00:04:45,030 --> 00:04:47,910
differences between DevOps and DEF set

100
00:04:47,910 --> 00:04:51,300
coughs first of formals is about culture

101
00:04:51,300 --> 00:04:55,830
and second is about the actual tools and

102
00:04:55,830 --> 00:04:57,210
technologies in the process and

103
00:04:57,210 --> 00:05:00,930
implementation of DevOps or deficit cops

104
00:05:00,930 --> 00:05:04,140
so with DevOps and everybody's familiar

105
00:05:04,140 --> 00:05:05,600
with continuous integration continuous

106
00:05:05,600 --> 00:05:08,340
deployment over continuous delivery see

107
00:05:08,340 --> 00:05:10,740
ICD now the way I look at dev sir coughs

108
00:05:10,740 --> 00:05:13,590
is continuous assurance and continuous

109
00:05:13,590 --> 00:05:16,290
compliance so now before I get to that

110
00:05:16,290 --> 00:05:17,520
in detail I want to talk about the

111
00:05:17,520 --> 00:05:20,880
culture piece a little bit so how are we

112
00:05:20,880 --> 00:05:24,810
all familiar with the agile manifesto so

113
00:05:24,810 --> 00:05:27,870
I think a lot of people are now I offer

114
00:05:27,870 --> 00:05:31,800
a manifesto for modern cybersecurity

115
00:05:31,800 --> 00:05:33,720
this is something that we've developed

116
00:05:33,720 --> 00:05:35,660
internally and we've published on

117
00:05:35,660 --> 00:05:37,830
security manifesto down there and this

118
00:05:37,830 --> 00:05:41,220
is the way that we think modern security

119
00:05:41,220 --> 00:05:43,860
security operations should work and

120
00:05:43,860 --> 00:05:46,050
should function at an organization level

121
00:05:46,050 --> 00:05:48,630
so there are six things to it these are

122
00:05:48,630 --> 00:05:50,610
very simple and easy to understand these

123
00:05:50,610 --> 00:05:53,340
are the things that we tell my our

124
00:05:53,340 --> 00:05:55,890
selves or I tell my security teams and

125
00:05:55,890 --> 00:05:57,900
we work together with the development

126
00:05:57,900 --> 00:05:59,910
teams to come up with these now first

127
00:05:59,910 --> 00:06:03,419
first of all is to assume compromise but

128
00:06:03,419 --> 00:06:05,340
expose no single point of compromise

129
00:06:05,340 --> 00:06:07,860
what does that mean right so in terms of

130
00:06:07,860 --> 00:06:10,979
implementation that means zero trust and

131
00:06:10,979 --> 00:06:13,860
that's how we implement it and we

132
00:06:13,860 --> 00:06:15,600
basically said in our production

133
00:06:15,600 --> 00:06:19,650
environment we allow no network access

134
00:06:19,650 --> 00:06:22,919
no direct network access no VPN no SSH

135
00:06:22,919 --> 00:06:25,640
into our production environment at all

136
00:06:25,640 --> 00:06:29,430
we use almost 100% server lists in AWS

137
00:06:29,430 --> 00:06:31,860
as lambda functions and the platform

138
00:06:31,860 --> 00:06:34,680
services around it now it's just one

139
00:06:34,680 --> 00:06:36,090
example of your choice and there are

140
00:06:36,090 --> 00:06:38,520
many others now the second point is to

141
00:06:38,520 --> 00:06:40,860
track everything because you cannot put

142
00:06:40,860 --> 00:06:42,479
fact what you don't know or where you

143
00:06:42,479 --> 00:06:45,930
can see so how do you what is the

144
00:06:45,930 --> 00:06:47,550
implementation run that right so for

145
00:06:47,550 --> 00:06:51,689
that we said you have to have an asset

146
00:06:51,689 --> 00:06:53,610
configuration management database you

147
00:06:53,610 --> 00:06:56,370
have to first and foremost be able to do

148
00:06:56,370 --> 00:06:58,889
proper asset inventory now this sounds

149
00:06:58,889 --> 00:07:01,139
so basic but I would argue that most

150
00:07:01,139 --> 00:07:02,969
people don't do this well most

151
00:07:02,969 --> 00:07:05,520
organizations don't it is a very very

152
00:07:05,520 --> 00:07:08,099
challenging problem to solve asset

153
00:07:08,099 --> 00:07:12,360
inventory now the third one engage

154
00:07:12,360 --> 00:07:14,669
everyone because there's power in the

155
00:07:14,669 --> 00:07:18,150
crowd cue is better than one our

156
00:07:18,150 --> 00:07:20,699
approach to this is we do not want

157
00:07:20,699 --> 00:07:23,729
security to be the responsibility or the

158
00:07:23,729 --> 00:07:26,789
task of just the security team we all

159
00:07:26,789 --> 00:07:29,400
understand this by concept but how do we

160
00:07:29,400 --> 00:07:32,219
do this we have to engage developers so

161
00:07:32,219 --> 00:07:34,919
we have to give developers power we have

162
00:07:34,919 --> 00:07:37,500
to empower them to make security

163
00:07:37,500 --> 00:07:40,979
decisions and of course bug bounty

164
00:07:40,979 --> 00:07:42,900
program right so we are pretty open in

165
00:07:42,900 --> 00:07:45,930
public about what we do with our bug

166
00:07:45,930 --> 00:07:49,919
bounty number for automation is key

167
00:07:49,919 --> 00:07:53,580
because people don't scale so this is

168
00:07:53,580 --> 00:07:56,940
where we're gonna focus a lot more in

169
00:07:56,940 --> 00:08:00,120
the talk as I go on on the security code

170
00:08:00,120 --> 00:08:02,669
there are multiple aspect to how we use

171
00:08:02,669 --> 00:08:06,810
automation in security and five build

172
00:08:06,810 --> 00:08:08,520
products that are secured by design and

173
00:08:08,520 --> 00:08:10,919
by default so what this really means is

174
00:08:10,919 --> 00:08:13,169
you need to have the right model and now

175
00:08:13,169 --> 00:08:15,000
I'll offer some examples of how we do

176
00:08:15,000 --> 00:08:16,800
through our model or I call threat model

177
00:08:16,800 --> 00:08:19,319
light in a way that developers can

178
00:08:19,319 --> 00:08:21,360
participate and help with the threat

179
00:08:21,360 --> 00:08:25,439
modeling exercise and last just sort of

180
00:08:25,439 --> 00:08:28,349
to sum at all is we have to keep things

181
00:08:28,349 --> 00:08:31,710
simple and usable and opened right so

182
00:08:31,710 --> 00:08:34,979
that it can be adopted if it's if it's

183
00:08:34,979 --> 00:08:37,380
too difficult people won't do it that's

184
00:08:37,380 --> 00:08:40,799
just the reality and also be open why

185
00:08:40,799 --> 00:08:43,049
not talk about security behind closed

186
00:08:43,049 --> 00:08:44,430
doors we actually discuss security

187
00:08:44,430 --> 00:08:46,740
incidents and issues in open slack

188
00:08:46,740 --> 00:08:50,399
channels and we also publish our policy

189
00:08:50,399 --> 00:08:52,529
security policies and I just now but

190
00:08:52,529 --> 00:08:53,270
Percy

191
00:08:53,270 --> 00:08:56,750
years publicly on our website not a lot

192
00:08:56,750 --> 00:08:58,340
of companies do that so we want to be

193
00:08:58,340 --> 00:09:00,260
very open about what we do when it comes

194
00:09:00,260 --> 00:09:02,630
to security practices now I have been

195
00:09:02,630 --> 00:09:04,820
challenged on that right so I have had

196
00:09:04,820 --> 00:09:07,820
people tell me that you're crazy you're

197
00:09:07,820 --> 00:09:09,350
just showing everybody how you do

198
00:09:09,350 --> 00:09:12,890
security now and I say yes if that

199
00:09:12,890 --> 00:09:15,910
causes a problem if that causes a breach

200
00:09:15,910 --> 00:09:19,010
there's a problem with that right if

201
00:09:19,010 --> 00:09:20,750
just by telling people how you are

202
00:09:20,750 --> 00:09:23,960
operating that may cause risk and issues

203
00:09:23,960 --> 00:09:28,520
there is a problem in that so that is

204
00:09:28,520 --> 00:09:31,250
sort of the higher-level aspect of kind

205
00:09:31,250 --> 00:09:33,440
of the philosophical decisions that

206
00:09:33,440 --> 00:09:36,080
we've made in how we as an organization

207
00:09:36,080 --> 00:09:39,500
want to operate now I want to get down

208
00:09:39,500 --> 00:09:40,970
to some details right so how do we

209
00:09:40,970 --> 00:09:42,860
enable this right I talked about some

210
00:09:42,860 --> 00:09:45,710
higher level kind of program and

211
00:09:45,710 --> 00:09:47,930
implementation ideas but how do we

212
00:09:47,930 --> 00:09:50,090
actually implement this so I want to

213
00:09:50,090 --> 00:09:53,060
talk about this in two aspects of the

214
00:09:53,060 --> 00:09:57,500
exercise cops now the first one the

215
00:09:57,500 --> 00:10:02,260
first of these two will be how do we use

216
00:10:02,260 --> 00:10:08,150
security as an enabler for DevOps so

217
00:10:08,150 --> 00:10:11,030
there's a what that means is the whole

218
00:10:11,030 --> 00:10:12,620
shift left concept right so how do we

219
00:10:12,620 --> 00:10:14,870
automate these security checks the

220
00:10:14,870 --> 00:10:16,970
approvals and the workflows and the

221
00:10:16,970 --> 00:10:19,610
gates and so on in your full pipeline in

222
00:10:19,610 --> 00:10:21,680
your development pipeline now this is

223
00:10:21,680 --> 00:10:24,560
something that my my colleague matt is

224
00:10:24,560 --> 00:10:25,700
going to talk about he's gonna give a

225
00:10:25,700 --> 00:10:28,430
session tomorrow with very detailed

226
00:10:28,430 --> 00:10:31,370
examples in our implementation of the

227
00:10:31,370 --> 00:10:33,980
automation and the bots that we created

228
00:10:33,980 --> 00:10:37,700
for for doing this so remember I said

229
00:10:37,700 --> 00:10:39,440
this is the second best talk of the

230
00:10:39,440 --> 00:10:46,240
conference now you know why okay

231
00:10:46,240 --> 00:10:49,130
the second part which is what I'll focus

232
00:10:49,130 --> 00:10:53,060
on today is development as an enabler

233
00:10:53,060 --> 00:10:54,050
for sec ops

234
00:10:54,050 --> 00:10:56,960
now when I say sec ops is not just

235
00:10:56,960 --> 00:10:59,240
running a sock or running a security

236
00:10:59,240 --> 00:11:01,790
operations center it's more about

237
00:11:01,790 --> 00:11:05,540
knowing and understanding your security

238
00:11:05,540 --> 00:11:06,300
environment

239
00:11:06,300 --> 00:11:08,520
and also compliance I don't see

240
00:11:08,520 --> 00:11:10,710
compliance as a separate aspect or

241
00:11:10,710 --> 00:11:13,110
separate initiative from security it

242
00:11:13,110 --> 00:11:14,940
should be part of the same things it

243
00:11:14,940 --> 00:11:16,830
should just be a natural outcome of

244
00:11:16,830 --> 00:11:21,120
doing security correctly so what do

245
00:11:21,120 --> 00:11:22,890
these mean right so how do we do a 1 is

246
00:11:22,890 --> 00:11:24,630
we have we aggregate data from the

247
00:11:24,630 --> 00:11:27,150
source to gain visibility and insight

248
00:11:27,150 --> 00:11:30,660
that's the visibility part of it and we

249
00:11:30,660 --> 00:11:34,050
also automate the operations with code

250
00:11:34,050 --> 00:11:35,970
and manage artifacts that we can

251
00:11:35,970 --> 00:11:37,860
generate for compliance and for auditing

252
00:11:37,860 --> 00:11:40,470
and so on using code and that is the

253
00:11:40,470 --> 00:11:44,310
governance aspect and last is we want to

254
00:11:44,310 --> 00:11:47,040
achieve provable security with

255
00:11:47,040 --> 00:11:50,670
continuous assurance and continuous

256
00:11:50,670 --> 00:11:53,450
compliance now what does this look like

257
00:11:53,450 --> 00:11:56,010
so this is our program and I think this

258
00:11:56,010 --> 00:11:58,200
journey is probably very similar to many

259
00:11:58,200 --> 00:12:00,420
other organizations so as we started

260
00:12:00,420 --> 00:12:02,340
building out the security program we

261
00:12:02,340 --> 00:12:04,590
said ok we have the duty things we have

262
00:12:04,590 --> 00:12:06,330
to understand our data understanding

263
00:12:06,330 --> 00:12:08,760
data flows through risk analysis and

264
00:12:08,760 --> 00:12:11,850
write policies procedures create the

265
00:12:11,850 --> 00:12:13,710
infrastructure with the security tools

266
00:12:13,710 --> 00:12:16,440
and confusing place and implement all

267
00:12:16,440 --> 00:12:18,170
these things right so there could be

268
00:12:18,170 --> 00:12:20,580
over a hundred different controls that

269
00:12:20,580 --> 00:12:22,200
you might need to implement and some of

270
00:12:22,200 --> 00:12:23,430
these are tools and some of these are

271
00:12:23,430 --> 00:12:26,220
processes and so on so forth and then

272
00:12:26,220 --> 00:12:27,780
you have to adding the compliance aspect

273
00:12:27,780 --> 00:12:29,550
right so you have to have auditors you

274
00:12:29,550 --> 00:12:32,330
have to do collect evidences and do

275
00:12:32,330 --> 00:12:35,460
assessments and certifications and after

276
00:12:35,460 --> 00:12:37,170
that you still have to run the program

277
00:12:37,170 --> 00:12:39,690
you have to continuously monitor manage

278
00:12:39,690 --> 00:12:42,450
and optimize all the security solutions

279
00:12:42,450 --> 00:12:45,270
and controls you have in place now this

280
00:12:45,270 --> 00:12:48,150
is a repeated effort now imagine you

281
00:12:48,150 --> 00:12:51,000
being the security team or the

282
00:12:51,000 --> 00:12:52,740
compliance team do you know of that

283
00:12:52,740 --> 00:12:55,440
right not only do you have to collect

284
00:12:55,440 --> 00:12:59,310
data the first time for whatever audit

285
00:12:59,310 --> 00:13:01,020
or compliance that you have to do but

286
00:13:01,020 --> 00:13:02,130
you have to be able to do this

287
00:13:02,130 --> 00:13:06,630
continuously time and after again now

288
00:13:06,630 --> 00:13:09,360
looking at this I don't want to be that

289
00:13:09,360 --> 00:13:12,060
guy or nobody on my team wants to be

290
00:13:12,060 --> 00:13:15,840
that guy it is tremendous work and it is

291
00:13:15,840 --> 00:13:18,000
it is non-value-added work it's just

292
00:13:18,000 --> 00:13:19,830
tedious amount of work

293
00:13:19,830 --> 00:13:23,190
a day-to-day basis so how do we solve

294
00:13:23,190 --> 00:13:27,090
this so the way we attempt to solve this

295
00:13:27,090 --> 00:13:30,480
is by aggregating data from the

296
00:13:30,480 --> 00:13:33,720
different sources so what happens here

297
00:13:33,720 --> 00:13:36,720
is we've created a set of tools instead

298
00:13:36,720 --> 00:13:40,350
of automations using the data right

299
00:13:40,350 --> 00:13:41,820
because essentially at the end of day

300
00:13:41,820 --> 00:13:44,370
all these is just data that comes from

301
00:13:44,370 --> 00:13:47,220
different sources and we've put them

302
00:13:47,220 --> 00:13:50,940
into a graph by analyzing the

303
00:13:50,940 --> 00:13:53,370
relationships of these data so that at

304
00:13:53,370 --> 00:13:55,200
the end a day we can ask questions and

305
00:13:55,200 --> 00:13:58,230
get answers using quarries so that is

306
00:13:58,230 --> 00:14:00,480
fundamentally how we solve this

307
00:14:00,480 --> 00:14:03,210
challenge is to say can we run security

308
00:14:03,210 --> 00:14:06,150
and compliance by the way by as simple

309
00:14:06,150 --> 00:14:07,860
as asking the right questions and

310
00:14:07,860 --> 00:14:12,170
getting the right answers back from data

311
00:14:14,120 --> 00:14:17,070
so I'll get into details and show you

312
00:14:17,070 --> 00:14:19,770
examples and screenshots of what that

313
00:14:19,770 --> 00:14:21,470
means

314
00:14:21,470 --> 00:14:26,040
so why graph right so I look at security

315
00:14:26,040 --> 00:14:27,750
and compliance as a data challenge and

316
00:14:27,750 --> 00:14:30,420
as I mentioned I we we solved this by

317
00:14:30,420 --> 00:14:32,790
using data and graph and quarry but why

318
00:14:32,790 --> 00:14:38,400
graph well a about a year ago or so that

319
00:14:38,400 --> 00:14:41,550
I actually got this phrase from a DevOps

320
00:14:41,550 --> 00:14:44,000
leader at Microsoft and he told me that

321
00:14:44,000 --> 00:14:48,360
attackers think in graphs and defenders

322
00:14:48,360 --> 00:14:49,470
think in lists

323
00:14:49,470 --> 00:14:52,650
that's how attackers will win and I'll

324
00:14:52,650 --> 00:14:54,450
be using that for it ever since and that

325
00:14:54,450 --> 00:14:58,140
is so true because the relationships

326
00:14:58,140 --> 00:15:01,680
form a graph is what gives you context

327
00:15:01,680 --> 00:15:04,800
is what helps you understand your data

328
00:15:04,800 --> 00:15:09,180
is what answer the question so what so

329
00:15:09,180 --> 00:15:11,280
when you have a set of information about

330
00:15:11,280 --> 00:15:13,710
your environment from a configuration

331
00:15:13,710 --> 00:15:17,340
standpoint from an asset standpoint does

332
00:15:17,340 --> 00:15:19,440
it matter if a certain device is

333
00:15:19,440 --> 00:15:20,670
configured a certain way

334
00:15:20,670 --> 00:15:22,320
don't you say if you have a certain

335
00:15:22,320 --> 00:15:25,110
server or workstation or instance that

336
00:15:25,110 --> 00:15:27,540
is not encrypted or maybe it has open

337
00:15:27,540 --> 00:15:29,880
access to everybody now the question is

338
00:15:29,880 --> 00:15:32,190
so what does it matter the only way to

339
00:15:32,190 --> 00:15:33,610
have that answer

340
00:15:33,610 --> 00:15:34,810
is to understand the relationship

341
00:15:34,810 --> 00:15:38,529
between an amount of those resources and

342
00:15:38,529 --> 00:15:40,209
entities and that is what we created

343
00:15:40,209 --> 00:15:44,649
using graph so this is a simple screen

344
00:15:44,649 --> 00:15:47,019
shot of what graph is right so the graph

345
00:15:47,019 --> 00:15:49,570
is just a set of nodes and relationships

346
00:15:49,570 --> 00:15:51,730
each noting there as at this simple

347
00:15:51,730 --> 00:15:53,950
example that you see here represent a

348
00:15:53,950 --> 00:15:56,470
digital resource in our environment yes

349
00:15:56,470 --> 00:15:58,390
it's something that is in our

350
00:15:58,390 --> 00:16:01,990
environment and then the connections

351
00:16:01,990 --> 00:16:05,110
between them represent how they interact

352
00:16:05,110 --> 00:16:07,810
with something else within the same

353
00:16:07,810 --> 00:16:09,970
environment what there could be a lot of

354
00:16:09,970 --> 00:16:11,399
those things right so there could be

355
00:16:11,399 --> 00:16:13,810
thousands or even hundreds of thousands

356
00:16:13,810 --> 00:16:16,089
of entities or assets or resources what

357
00:16:16,089 --> 00:16:18,040
have we caught them in a digital

358
00:16:18,040 --> 00:16:20,560
environment and on top of that there

359
00:16:20,560 --> 00:16:24,430
could be millions of relationships how

360
00:16:24,430 --> 00:16:26,950
do you make sense of them all so even if

361
00:16:26,950 --> 00:16:29,620
we are able to aggregate that data and

362
00:16:29,620 --> 00:16:32,310
build out those relationships in a graph

363
00:16:32,310 --> 00:16:36,730
how can you digest it now that is the

364
00:16:36,730 --> 00:16:39,160
next challenge that's why we we build a

365
00:16:39,160 --> 00:16:41,829
set of quarries so you can ask questions

366
00:16:41,829 --> 00:16:43,750
and get answers right so that's that's

367
00:16:43,750 --> 00:16:46,600
what I mean by that I'll get into more

368
00:16:46,600 --> 00:16:49,779
details so first when we say entities

369
00:16:49,779 --> 00:16:52,180
what do we mean by entities or assets

370
00:16:52,180 --> 00:16:54,130
now a lot of people think about assets

371
00:16:54,130 --> 00:16:58,720
as servers or laptops or these IT assets

372
00:16:58,720 --> 00:17:02,589
but the approach that we took to asset

373
00:17:02,589 --> 00:17:06,609
is digital entity that represents

374
00:17:06,609 --> 00:17:08,799
something meaningful in your environment

375
00:17:08,799 --> 00:17:11,740
that has value in your operations so

376
00:17:11,740 --> 00:17:13,240
these are some examples that this is our

377
00:17:13,240 --> 00:17:15,609
data model that we've used and these are

378
00:17:15,609 --> 00:17:19,359
all the what we say as the asset class

379
00:17:19,359 --> 00:17:22,030
within our environment now notice that

380
00:17:22,030 --> 00:17:25,660
there's no vendor specific or technology

381
00:17:25,660 --> 00:17:28,780
specific terms in this data model we

382
00:17:28,780 --> 00:17:31,240
don't look at things as ec2 instance in

383
00:17:31,240 --> 00:17:35,080
AWS or an s3 bucket in AWS or so on so

384
00:17:35,080 --> 00:17:37,299
forth or a sequel database now we look

385
00:17:37,299 --> 00:17:40,090
at these as a higher level a generic

386
00:17:40,090 --> 00:17:42,730
asset and the reason is now the way

387
00:17:42,730 --> 00:17:45,309
we've built a Stata model is to achieve

388
00:17:45,309 --> 00:17:47,020
a go that one

389
00:17:47,020 --> 00:17:49,060
to build these questions even if your

390
00:17:49,060 --> 00:17:52,540
underlying technology changes all we

391
00:17:52,540 --> 00:17:56,200
have to do is remap or readjust the data

392
00:17:56,200 --> 00:17:58,500
so that you don't have to change your

393
00:17:58,500 --> 00:18:01,960
automation Cory asked your technology

394
00:18:01,960 --> 00:18:05,350
changes so now I'll give you some

395
00:18:05,350 --> 00:18:09,250
examples I'll use AWS as my first

396
00:18:09,250 --> 00:18:13,630
examples we are almost 100% in AWS so

397
00:18:13,630 --> 00:18:17,350
within AWS there are many things that

398
00:18:17,350 --> 00:18:19,510
you probably want to understand for your

399
00:18:19,510 --> 00:18:22,480
AWS environment right so here's one the

400
00:18:22,480 --> 00:18:25,300
question is which ec2 instances are

401
00:18:25,300 --> 00:18:27,120
exposed to the Internet

402
00:18:27,120 --> 00:18:30,370
now what you see here is a graph now

403
00:18:30,370 --> 00:18:33,600
what this graph is showing you is

404
00:18:33,600 --> 00:18:37,000
actually down there if you can see near

405
00:18:37,000 --> 00:18:39,550
the bottom middle of the graph is the

406
00:18:39,550 --> 00:18:43,500
internet node and it has connections to

407
00:18:43,500 --> 00:18:46,690
security groups and from that point on

408
00:18:46,690 --> 00:18:53,040
it has connections to ec2 instances and

409
00:18:53,040 --> 00:18:57,460
then also after that right so below on

410
00:18:57,460 --> 00:18:59,440
top of those are the networks that these

411
00:18:59,440 --> 00:19:02,500
incidences belong to you now in order to

412
00:19:02,500 --> 00:19:05,110
come to this picture right in what don't

413
00:19:05,110 --> 00:19:06,520
you answer this question to say are

414
00:19:06,520 --> 00:19:08,080
there instances exposed to the Internet

415
00:19:08,080 --> 00:19:10,960
is not as simple as one configuration

416
00:19:10,960 --> 00:19:13,270
now what you see here is a fairly

417
00:19:13,270 --> 00:19:15,970
complex traversal of a graph to derive

418
00:19:15,970 --> 00:19:18,130
at that answer you have to know that the

419
00:19:18,130 --> 00:19:20,590
instances of public IP addresses they

420
00:19:20,590 --> 00:19:23,740
are part of a public V PC or a subnet

421
00:19:23,740 --> 00:19:27,280
there has internet connectivity and you

422
00:19:27,280 --> 00:19:28,660
also have to know that they have secured

423
00:19:28,660 --> 00:19:30,100
the groups that they have rules that

424
00:19:30,100 --> 00:19:32,410
allowed them access to an Internet now

425
00:19:32,410 --> 00:19:34,540
in order to get you this you may have to

426
00:19:34,540 --> 00:19:36,280
do a bunch of analysis of your

427
00:19:36,280 --> 00:19:37,990
configuration but with a graph and

428
00:19:37,990 --> 00:19:39,940
especially if you look at this quarry it

429
00:19:39,940 --> 00:19:42,940
is pure fairly straightforward and well

430
00:19:42,940 --> 00:19:45,370
we also done it we've designed a query

431
00:19:45,370 --> 00:19:48,430
language that is close to natural

432
00:19:48,430 --> 00:19:50,020
language is very readable it's a very

433
00:19:50,020 --> 00:19:52,720
human readable it's even more so than

434
00:19:52,720 --> 00:19:54,700
sequel right so a lot of folks probably

435
00:19:54,700 --> 00:19:56,530
familiar with that so what this

436
00:19:56,530 --> 00:19:59,110
basically says is find something right

437
00:19:59,110 --> 00:20:00,269
this is what the core language

438
00:20:00,269 --> 00:20:03,209
to find something with certain property

439
00:20:03,209 --> 00:20:05,549
using this case fine aw subnet with

440
00:20:05,549 --> 00:20:08,009
public equals true that relates to

441
00:20:08,009 --> 00:20:10,679
something else right so there has a WS

442
00:20:10,679 --> 00:20:12,539
instance and then that relates to

443
00:20:12,539 --> 00:20:14,099
something else and again and again right

444
00:20:14,099 --> 00:20:16,379
so this builds the relationship and

445
00:20:16,379 --> 00:20:19,379
traverses the graph and arrives at an

446
00:20:19,379 --> 00:20:21,599
answer now this answer can be presented

447
00:20:21,599 --> 00:20:26,759
in this visual diagram as a graph kind

448
00:20:26,759 --> 00:20:29,609
of denoted by the return tree kind of

449
00:20:29,609 --> 00:20:31,919
syntax in the core language or it can

450
00:20:31,919 --> 00:20:34,200
return you detailed configurations for

451
00:20:34,200 --> 00:20:37,440
each one of these resources as well now

452
00:20:37,440 --> 00:20:38,940
I'll continue to show you other examples

453
00:20:38,940 --> 00:20:42,690
here's an example now this one actually

454
00:20:42,690 --> 00:20:46,609
has to do with a recent security breach

455
00:20:46,609 --> 00:20:50,190
from capital one right so I think some

456
00:20:50,190 --> 00:20:52,440
of us probably familiar with that that

457
00:20:52,440 --> 00:20:54,599
incident now one of the key thing that

458
00:20:54,599 --> 00:20:57,179
caused a breach is a Mis configuration

459
00:20:57,179 --> 00:21:01,649
of their AWS resources so what happened

460
00:21:01,649 --> 00:21:04,139
was that they have external public

461
00:21:04,139 --> 00:21:08,389
facing systems that had assigned

462
00:21:08,389 --> 00:21:11,159
particular AWS I M rows there has

463
00:21:11,159 --> 00:21:12,839
broader permissions than it needs to

464
00:21:12,839 --> 00:21:15,599
have so this is a query that designs to

465
00:21:15,599 --> 00:21:17,279
find out so essentially if you look at

466
00:21:17,279 --> 00:21:20,399
this the question is do I have internet

467
00:21:20,399 --> 00:21:21,989
facing each two instances that are

468
00:21:21,989 --> 00:21:24,989
allowed access to non-public as three

469
00:21:24,989 --> 00:21:28,249
buckets now this question sounds logical

470
00:21:28,249 --> 00:21:31,289
but you get answers to that it is very

471
00:21:31,289 --> 00:21:34,019
tricky as you see in this quarry you

472
00:21:34,019 --> 00:21:36,899
have to know a lot of things to get to

473
00:21:36,899 --> 00:21:38,999
the answer of this so you have to know

474
00:21:38,999 --> 00:21:40,919
about your security groups and your ec2

475
00:21:40,919 --> 00:21:43,799
instances the rules protecting them you

476
00:21:43,799 --> 00:21:45,479
have to know that if the instances are

477
00:21:45,479 --> 00:21:47,969
active you have to know which I am rows

478
00:21:47,969 --> 00:21:50,369
are assigned to those instances and then

479
00:21:50,369 --> 00:21:52,169
what policies are assigned to those rows

480
00:21:52,169 --> 00:21:55,169
and then analyze the policies and you

481
00:21:55,169 --> 00:21:57,869
see if those policies give access to as

482
00:21:57,869 --> 00:22:00,450
three buckets and that's not it you also

483
00:22:00,450 --> 00:22:02,190
have to know that are those three

484
00:22:02,190 --> 00:22:06,389
buckets public or meant to be public to

485
00:22:06,389 --> 00:22:08,339
derive and meaningful answers with our

486
00:22:08,339 --> 00:22:11,369
nodes so that you can analyze and

487
00:22:11,369 --> 00:22:12,850
remediate

488
00:22:12,850 --> 00:22:15,950
now imagine if you have thousands of

489
00:22:15,950 --> 00:22:17,990
instances across hundreds of AWS

490
00:22:17,990 --> 00:22:21,740
accounts and many many policies and I am

491
00:22:21,740 --> 00:22:23,890
Rose how are you gonna do that

492
00:22:23,890 --> 00:22:27,590
it is extremely time-consuming you may

493
00:22:27,590 --> 00:22:30,200
take weeks just to find the answers to

494
00:22:30,200 --> 00:22:33,860
this one question now if we have the

495
00:22:33,860 --> 00:22:37,070
data aggregated like this and with the

496
00:22:37,070 --> 00:22:39,410
relationships already built in a graph

497
00:22:39,410 --> 00:22:42,140
that you can query you can get to that

498
00:22:42,140 --> 00:22:46,040
answer in seconds so that's the power of

499
00:22:46,040 --> 00:22:50,030
the graph some other examples in AWS you

500
00:22:50,030 --> 00:22:52,130
can have cross account trust you can

501
00:22:52,130 --> 00:22:54,890
have iron rose and policies that connect

502
00:22:54,890 --> 00:22:56,450
to each other across different accounts

503
00:22:56,450 --> 00:22:58,370
now this is another example of finding

504
00:22:58,370 --> 00:23:01,490
the rose and the policies and the trust

505
00:23:01,490 --> 00:23:05,210
across different environments how as if

506
00:23:05,210 --> 00:23:06,440
through some of these quickly because I

507
00:23:06,440 --> 00:23:09,110
want to get you the last part of the the

508
00:23:09,110 --> 00:23:11,390
talk so there are some things about some

509
00:23:11,390 --> 00:23:13,580
questions you can ask about as to be

510
00:23:13,580 --> 00:23:16,400
bucket axes are there non public axes

511
00:23:16,400 --> 00:23:17,810
grantee to anybody outside of the

512
00:23:17,810 --> 00:23:19,430
account right so all these questions can

513
00:23:19,430 --> 00:23:22,040
be very easily answered using the same

514
00:23:22,040 --> 00:23:24,710
pattern using data and quarry and the

515
00:23:24,710 --> 00:23:26,480
graph now here's something that's more

516
00:23:26,480 --> 00:23:29,000
interesting we use octet internally for

517
00:23:29,000 --> 00:23:31,430
our single sign-on so we don't have I am

518
00:23:31,430 --> 00:23:34,010
users directly provisioned in AWS

519
00:23:34,010 --> 00:23:36,770
accounts so we can actually build a

520
00:23:36,770 --> 00:23:38,290
graph that looks like this to show

521
00:23:38,290 --> 00:23:41,960
ourselves or auditors and see who has

522
00:23:41,960 --> 00:23:45,530
access to AWS accounts via sam'l single

523
00:23:45,530 --> 00:23:49,420
sign-on now that's the result of that

524
00:23:49,420 --> 00:23:52,010
additionally you can look at application

525
00:23:52,010 --> 00:23:54,170
components and data flows so not only

526
00:23:54,170 --> 00:23:56,600
can you do configuration analysis but

527
00:23:56,600 --> 00:23:58,580
you can actually build a diagram to show

528
00:23:58,580 --> 00:24:00,620
from a development standpoint or as

529
00:24:00,620 --> 00:24:02,210
you're building through our models or

530
00:24:02,210 --> 00:24:04,550
risk analysis of your applications how

531
00:24:04,550 --> 00:24:06,920
are things connected to each other so we

532
00:24:06,920 --> 00:24:08,420
use surveillance right so we use API

533
00:24:08,420 --> 00:24:11,510
gateways we use cloud round and and

534
00:24:11,510 --> 00:24:14,060
lambda functions and connecting to other

535
00:24:14,060 --> 00:24:16,040
resources now this is a graph that shows

536
00:24:16,040 --> 00:24:17,890
you how these things are connected

537
00:24:17,890 --> 00:24:23,210
within the environment vulnerability

538
00:24:23,210 --> 00:24:25,880
management that's another use case for

539
00:24:25,880 --> 00:24:27,770
security now I'm shifting gears a little

540
00:24:27,770 --> 00:24:30,590
bit right so this really has not very

541
00:24:30,590 --> 00:24:32,330
much to do with AWS configuration but

542
00:24:32,330 --> 00:24:35,630
you can do the same analysis for

543
00:24:35,630 --> 00:24:37,429
vulnerability management using data and

544
00:24:37,429 --> 00:24:39,890
graph as well so we've collected all the

545
00:24:39,890 --> 00:24:41,360
information from different scanners so

546
00:24:41,360 --> 00:24:43,070
you can easily build a profile battle

547
00:24:43,070 --> 00:24:46,520
graph and see what is vulnerable to what

548
00:24:46,520 --> 00:24:50,230
CVEs and you can find the most

549
00:24:50,230 --> 00:24:52,549
significant offenders you can actually

550
00:24:52,549 --> 00:24:55,010
easily find which one I need to pay more

551
00:24:55,010 --> 00:24:58,280
attention to which device or which hose

552
00:24:58,280 --> 00:25:00,020
or maybe which particular vulnerability

553
00:25:00,020 --> 00:25:03,740
by looking at a graph now tying this to

554
00:25:03,740 --> 00:25:05,600
dev ops are trying these to develop in a

555
00:25:05,600 --> 00:25:08,659
little bit more we can gather develop an

556
00:25:08,659 --> 00:25:10,750
inside because the data can come from

557
00:25:10,750 --> 00:25:14,570
your github repos your typical repos as

558
00:25:14,570 --> 00:25:16,940
we do right so we can say well if we

559
00:25:16,940 --> 00:25:19,130
have a developer named Adam who is real

560
00:25:19,130 --> 00:25:22,520
and what PRS did this person open last

561
00:25:22,520 --> 00:25:24,620
week you can actually run a query to

562
00:25:24,620 --> 00:25:27,620
find that now why is that important why

563
00:25:27,620 --> 00:25:30,230
is that interesting right remember the

564
00:25:30,230 --> 00:25:31,429
vulnerability one that I showed you

565
00:25:31,429 --> 00:25:33,620
earlier right so we can we can do a full

566
00:25:33,620 --> 00:25:35,990
circle we can tie this back to you from

567
00:25:35,990 --> 00:25:38,419
vulnerability to code to developer to

568
00:25:38,419 --> 00:25:41,179
PRS so when was the last time you had to

569
00:25:41,179 --> 00:25:44,980
spend time hunting down a developer or

570
00:25:44,980 --> 00:25:47,600
finding now who contributed to this

571
00:25:47,600 --> 00:25:52,370
vulnerability right if you have a true

572
00:25:52,370 --> 00:25:54,500
that can get that can allow you to do

573
00:25:54,500 --> 00:25:58,549
this automatically so this is a query

574
00:25:58,549 --> 00:26:00,230
that builds that connection do you say

575
00:26:00,230 --> 00:26:02,390
well I have this code I have this

576
00:26:02,390 --> 00:26:03,650
vulnerability make them make the

577
00:26:03,650 --> 00:26:06,830
connection and within the one list of

578
00:26:06,830 --> 00:26:08,780
vulnerability introduced and now look at

579
00:26:08,780 --> 00:26:11,299
when was the within the same time frame

580
00:26:11,299 --> 00:26:13,460
what PRS what pull requests were open

581
00:26:13,460 --> 00:26:14,929
within that time frame and which

582
00:26:14,929 --> 00:26:16,549
developers open those PRS

583
00:26:16,549 --> 00:26:18,700
so there's a very high likelihood of

584
00:26:18,700 --> 00:26:20,870
correlation that that developer may have

585
00:26:20,870 --> 00:26:23,809
introduced their vulnerability so you

586
00:26:23,809 --> 00:26:25,820
can make those connections with graph

587
00:26:25,820 --> 00:26:28,669
and with the queries this way and of

588
00:26:28,669 --> 00:26:32,299
course and any of these then you can the

589
00:26:32,299 --> 00:26:35,030
way we've done the the implementation of

590
00:26:35,030 --> 00:26:38,120
this platform is we allow the security

591
00:26:38,120 --> 00:26:39,559
teams to set up alerts

592
00:26:39,559 --> 00:26:42,409
to send emails or slack messages one

593
00:26:42,409 --> 00:26:44,570
something triggers right so one of these

594
00:26:44,570 --> 00:26:51,259
core is trigger some results okay the

595
00:26:51,259 --> 00:26:54,370
last part that I want to talk about is

596
00:26:54,370 --> 00:26:58,129
compliance related so security aspect

597
00:26:58,129 --> 00:27:02,240
our security artifacts as code so we

598
00:27:02,240 --> 00:27:04,279
just saw that how we can build

599
00:27:04,279 --> 00:27:06,470
tremendous amount of visibility using

600
00:27:06,470 --> 00:27:08,179
data and code and Cori

601
00:27:08,179 --> 00:27:09,950
right now I want to I want to show you

602
00:27:09,950 --> 00:27:12,350
how we can do the same for compliance

603
00:27:12,350 --> 00:27:15,049
now using the same platform and using

604
00:27:15,049 --> 00:27:18,730
the same methodologies and we can do

605
00:27:18,730 --> 00:27:22,100
compliance as code as well so when it

606
00:27:22,100 --> 00:27:23,779
comes to compliance the first and

607
00:27:23,779 --> 00:27:25,429
foremost thing that auditors look for

608
00:27:25,429 --> 00:27:29,119
will be your policies and procedures do

609
00:27:29,119 --> 00:27:30,889
you have the right policies do you have

610
00:27:30,889 --> 00:27:32,779
written policies and do you have

611
00:27:32,779 --> 00:27:34,610
procedures for certain things now

612
00:27:34,610 --> 00:27:37,669
typically that is a 200 page PDF in most

613
00:27:37,669 --> 00:27:40,549
organizations now our approach to this

614
00:27:40,549 --> 00:27:42,980
is a little different so we wrote all of

615
00:27:42,980 --> 00:27:45,169
our security policies and procedures as

616
00:27:45,169 --> 00:27:47,690
code in markdown and not only did we

617
00:27:47,690 --> 00:27:50,840
write them in code now we have tempted

618
00:27:50,840 --> 00:27:54,590
light templatized the content of that so

619
00:27:54,590 --> 00:27:56,950
that for certain things like procedures

620
00:27:56,950 --> 00:28:01,129
we have procedures as a procedure we

621
00:28:01,129 --> 00:28:03,710
have provider as a variable in the

622
00:28:03,710 --> 00:28:06,320
document itself so if we change the

623
00:28:06,320 --> 00:28:07,700
provider let's say we have a procedure

624
00:28:07,700 --> 00:28:09,499
for single sign-on and today the

625
00:28:09,499 --> 00:28:11,419
provider is octa and tomorrow we

626
00:28:11,419 --> 00:28:15,350
implement it you know your ad or you

627
00:28:15,350 --> 00:28:17,840
know Google G suite or one login or one

628
00:28:17,840 --> 00:28:19,490
of the other providers we can simply

629
00:28:19,490 --> 00:28:22,460
change configurations and the policies

630
00:28:22,460 --> 00:28:24,259
will get updated and the procedures as

631
00:28:24,259 --> 00:28:27,440
well the other thing that we do is we

632
00:28:27,440 --> 00:28:29,480
like micro services so we write these

633
00:28:29,480 --> 00:28:31,639
stars kind of like a micro Docs so

634
00:28:31,639 --> 00:28:33,590
they're they're decoupled right so the

635
00:28:33,590 --> 00:28:35,749
policies procedures are all decouples we

636
00:28:35,749 --> 00:28:38,600
have about 200 of these little

637
00:28:38,600 --> 00:28:42,350
individual files so what that makes the

638
00:28:42,350 --> 00:28:44,299
benefits of that is it makes maintaining

639
00:28:44,299 --> 00:28:48,350
the files a lot more easily we also use

640
00:28:48,350 --> 00:28:51,919
color reviews or you know pull requests

641
00:28:51,919 --> 00:28:53,450
as the review and dark

642
00:28:53,450 --> 00:28:55,940
Asian review an approval process for

643
00:28:55,940 --> 00:29:01,970
these documents what this looks like is

644
00:29:01,970 --> 00:29:04,010
you can actually see the single graph

645
00:29:04,010 --> 00:29:05,780
right so this is the same graph that you

646
00:29:05,780 --> 00:29:08,510
see before you can see that I have a

647
00:29:08,510 --> 00:29:10,430
policy and they have a set of procedures

648
00:29:10,430 --> 00:29:12,260
that implements it right so this

649
00:29:12,260 --> 00:29:14,450
provides nice visual proved you say yes

650
00:29:14,450 --> 00:29:16,310
I have policies and yes I have

651
00:29:16,310 --> 00:29:18,140
procedures implementing the policies and

652
00:29:18,140 --> 00:29:20,420
you can even branch out and say yes I

653
00:29:20,420 --> 00:29:22,820
have providers implementing these

654
00:29:22,820 --> 00:29:25,250
procedures and I have evidences for

655
00:29:25,250 --> 00:29:27,230
these controls in place and so on and so

656
00:29:27,230 --> 00:29:29,300
forth now what this looks like the

657
00:29:29,300 --> 00:29:31,490
document itself what it looks like once

658
00:29:31,490 --> 00:29:33,230
it's compiling to HTML would be

659
00:29:33,230 --> 00:29:35,000
something like this and of course you

660
00:29:35,000 --> 00:29:36,470
can start it any way you want but this

661
00:29:36,470 --> 00:29:39,940
is what it looks like on our platform

662
00:29:40,570 --> 00:29:43,850
the next example talks about manual

663
00:29:43,850 --> 00:29:47,420
assessments and findings so I showed you

664
00:29:47,420 --> 00:29:50,030
early early on a graph that talks about

665
00:29:50,030 --> 00:29:54,410
the the vulnerabilities and and the the

666
00:29:54,410 --> 00:29:56,390
visual aspect of how the vulnerabilities

667
00:29:56,390 --> 00:29:58,070
are connecting to the hosts and

668
00:29:58,070 --> 00:30:00,110
resources at impacts we can do the same

669
00:30:00,110 --> 00:30:02,540
with manual testing and manual findings

670
00:30:02,540 --> 00:30:05,840
now we would our security team would

671
00:30:05,840 --> 00:30:08,720
write findings and reports in llamó

672
00:30:08,720 --> 00:30:10,880
which is a popular format or you can do

673
00:30:10,880 --> 00:30:12,940
in JSON or something similar and that

674
00:30:12,940 --> 00:30:16,760
gets published into the same graph into

675
00:30:16,760 --> 00:30:18,800
the same platform and you can then run

676
00:30:18,800 --> 00:30:20,210
the same report you can see the same

677
00:30:20,210 --> 00:30:22,640
visualization analysis for manual

678
00:30:22,640 --> 00:30:25,190
findings the same way as they finding

679
00:30:25,190 --> 00:30:28,660
collected by an automated scanning tool

680
00:30:28,660 --> 00:30:31,250
that's what this will look like right so

681
00:30:31,250 --> 00:30:33,290
you can actually see the connections

682
00:30:33,290 --> 00:30:38,510
between somebody a person or an employee

683
00:30:38,510 --> 00:30:40,460
internally or maybe an external Assessor

684
00:30:40,460 --> 00:30:43,940
who conducted performed a penetration

685
00:30:43,940 --> 00:30:45,980
testing or risk assessment of some sort

686
00:30:45,980 --> 00:30:48,380
these are manual testings and they have

687
00:30:48,380 --> 00:30:50,030
certain findings right oh that's what

688
00:30:50,030 --> 00:30:52,580
this graph is showing you right so those

689
00:30:52,580 --> 00:30:56,450
connections and the resources you can do

690
00:30:56,450 --> 00:30:58,070
vendor management the same way we do

691
00:30:58,070 --> 00:31:00,140
management vendor management as code as

692
00:31:00,140 --> 00:31:02,840
well so we asked our development

693
00:31:02,840 --> 00:31:04,640
organization product organization to

694
00:31:04,640 --> 00:31:06,460
make updates whenever

695
00:31:06,460 --> 00:31:08,410
they need to engage a new vendor this

696
00:31:08,410 --> 00:31:10,600
triggers a pull request in color as a

697
00:31:10,600 --> 00:31:13,150
trigger to PR which triggers necessary

698
00:31:13,150 --> 00:31:15,820
vendor security review if we need you

699
00:31:15,820 --> 00:31:18,250
and this again gets published the grout

700
00:31:18,250 --> 00:31:20,350
so you can actually see analyze the

701
00:31:20,350 --> 00:31:22,720
relationships between vendors and the

702
00:31:22,720 --> 00:31:24,400
services they provide and who has access

703
00:31:24,400 --> 00:31:29,590
to them and so on so forth now the last

704
00:31:29,590 --> 00:31:31,000
couple of things are mentioning is the

705
00:31:31,000 --> 00:31:33,340
design aspect right so well we talked

706
00:31:33,340 --> 00:31:35,940
about shifting left to the very far and

707
00:31:35,940 --> 00:31:39,400
having security considerations as part

708
00:31:39,400 --> 00:31:42,010
of every future functioning design so

709
00:31:42,010 --> 00:31:44,080
what we do is we internally leverage in

710
00:31:44,080 --> 00:31:47,440
RFC process for every new product

711
00:31:47,440 --> 00:31:50,770
feature that the engineering team is

712
00:31:50,770 --> 00:31:53,440
about to build and what we said is in

713
00:31:53,440 --> 00:31:58,090
this in this process writing this in

714
00:31:58,090 --> 00:32:01,150
this review process then the template

715
00:32:01,150 --> 00:32:03,490
must include security and privacy

716
00:32:03,490 --> 00:32:06,460
considerations so as the engineers who

717
00:32:06,460 --> 00:32:08,740
are building a new future they are

718
00:32:08,740 --> 00:32:10,720
talking about and gathering feedback

719
00:32:10,720 --> 00:32:12,880
from their peers and other engineers

720
00:32:12,880 --> 00:32:15,190
they also have to talk about the

721
00:32:15,190 --> 00:32:17,320
security aspect and the privacy aspect

722
00:32:17,320 --> 00:32:21,940
of everything they are building and one

723
00:32:21,940 --> 00:32:24,100
thing that we added to this process is

724
00:32:24,100 --> 00:32:28,480
sometimes they may forget to include the

725
00:32:28,480 --> 00:32:30,990
security team in that review especially

726
00:32:30,990 --> 00:32:35,350
sometimes that the the feature may have

727
00:32:35,350 --> 00:32:37,660
kind of greater security impacts and

728
00:32:37,660 --> 00:32:40,030
concerns now we don't want to be left

729
00:32:40,030 --> 00:32:41,770
out we don't want to we don't want to

730
00:32:41,770 --> 00:32:44,610
kind of kind of fall under sort of that

731
00:32:44,610 --> 00:32:47,230
mistake right so how do we do that we

732
00:32:47,230 --> 00:32:50,290
actually write wrote a little automation

733
00:32:50,290 --> 00:32:53,740
that detects these PRS from our code

734
00:32:53,740 --> 00:32:56,290
repos are these pull requests that

735
00:32:56,290 --> 00:32:58,990
contains these RFC's for security and

736
00:32:58,990 --> 00:33:00,610
privacy considerations and alert the

737
00:33:00,610 --> 00:33:04,540
security team via slack message so we

738
00:33:04,540 --> 00:33:06,400
get notified about every time there's a

739
00:33:06,400 --> 00:33:09,850
new RFC being created so by the way if

740
00:33:09,850 --> 00:33:13,270
you see the yellow bar on top and and we

741
00:33:13,270 --> 00:33:16,210
have open sourced a lot of what we what

742
00:33:16,210 --> 00:33:18,580
I talked about here today on github so

743
00:33:18,580 --> 00:33:20,140
you can actually go see it go

744
00:33:20,140 --> 00:33:21,670
the code and if you want to adopt it and

745
00:33:21,670 --> 00:33:24,610
use it yourself internally you can you

746
00:33:24,610 --> 00:33:29,010
can see them so the last part is

747
00:33:29,010 --> 00:33:32,050
evidence collection right this is the

748
00:33:32,050 --> 00:33:35,770
compliance part the quarries that I

749
00:33:35,770 --> 00:33:38,440
mentioned to you before right needs to

750
00:33:38,440 --> 00:33:40,810
be mapped to compliance requirements so

751
00:33:40,810 --> 00:33:43,000
what we do is we we use again once again

752
00:33:43,000 --> 00:33:45,160
you encode what you see here is a blob

753
00:33:45,160 --> 00:33:47,260
of code that represents a particular

754
00:33:47,260 --> 00:33:49,450
compliance framework now it could be

755
00:33:49,450 --> 00:33:51,280
sock it could be PCI it could be

756
00:33:51,280 --> 00:33:53,470
anything that your organization must

757
00:33:53,470 --> 00:33:55,960
adhere to it could also be your internal

758
00:33:55,960 --> 00:33:58,360
compliance framework now it is written

759
00:33:58,360 --> 00:34:01,390
in a way that it has a set of security

760
00:34:01,390 --> 00:34:02,860
controls or a set of security

761
00:34:02,860 --> 00:34:05,140
requirements and each one just has a

762
00:34:05,140 --> 00:34:07,060
reference number and with some

763
00:34:07,060 --> 00:34:08,770
descriptions that came from the PDF that

764
00:34:08,770 --> 00:34:11,620
was published somewhere now what we can

765
00:34:11,620 --> 00:34:14,290
do then is those queries that I showed

766
00:34:14,290 --> 00:34:17,440
you before that generates the graph the

767
00:34:17,440 --> 00:34:20,739
visual can also generate a report a list

768
00:34:20,739 --> 00:34:22,540
of actual data points

769
00:34:22,540 --> 00:34:25,300
now these queries are then here's an

770
00:34:25,300 --> 00:34:27,130
example of it these quarries are then

771
00:34:27,130 --> 00:34:30,760
mapped to the compliance requirement

772
00:34:30,760 --> 00:34:33,730
individually by reference number so with

773
00:34:33,730 --> 00:34:36,190
that then we can do compliance this code

774
00:34:36,190 --> 00:34:38,380
with the quarries right the same

775
00:34:38,380 --> 00:34:40,210
quarries and questions that you asked

776
00:34:40,210 --> 00:34:43,000
for security operations visibility can

777
00:34:43,000 --> 00:34:45,760
then be used to generate compliance

778
00:34:45,760 --> 00:34:54,610
evidences to summarize everything so I

779
00:34:54,610 --> 00:34:56,110
talked about a lot of things right so

780
00:34:56,110 --> 00:34:59,950
today so first and foremost the way we

781
00:34:59,950 --> 00:35:03,820
approach deaths AQAP's is having this

782
00:35:03,820 --> 00:35:06,580
open and simple and collaborative

783
00:35:06,580 --> 00:35:10,600
culture in the organization and second

784
00:35:10,600 --> 00:35:14,020
is we use we implement security and

785
00:35:14,020 --> 00:35:17,140
deficit cops using data using code and

786
00:35:17,140 --> 00:35:19,750
using a graph that emphasizes on the

787
00:35:19,750 --> 00:35:21,610
relationship sorry not just a simple

788
00:35:21,610 --> 00:35:23,920
list to build this knowledge base about

789
00:35:23,920 --> 00:35:25,270
our environment so we can ask questions

790
00:35:25,270 --> 00:35:29,170
about it and last is this quarry the

791
00:35:29,170 --> 00:35:31,360
quarry used to gain insight continuously

792
00:35:31,360 --> 00:35:33,520
for both operations

793
00:35:33,520 --> 00:35:37,090
and compliance and of course tomorrow's

794
00:35:37,090 --> 00:35:39,490
session we'll talk more about the

795
00:35:39,490 --> 00:35:43,860
automation in the pipeline that we did

796
00:35:43,860 --> 00:35:46,900
this is my summary right so trooll both

797
00:35:46,900 --> 00:35:49,270
security is what we want to achieve and

798
00:35:49,270 --> 00:35:51,370
we're doing that with continuous

799
00:35:51,370 --> 00:35:57,100
assurance and continuous compliance if

800
00:35:57,100 --> 00:36:05,350
you have any questions yes it's a

801
00:36:05,350 --> 00:36:07,090
Jupiter one you're using for a query and

802
00:36:07,090 --> 00:36:10,510
graph as well actually yes so all the

803
00:36:10,510 --> 00:36:12,580
screenshots that you saw before were

804
00:36:12,580 --> 00:36:15,790
from Jupiter one if you want to I'll be

805
00:36:15,790 --> 00:36:17,140
around if you actually want to see a

806
00:36:17,140 --> 00:36:19,680
demo I'm more than happy to show you one

807
00:36:19,680 --> 00:36:21,210
as well

808
00:36:21,210 --> 00:36:24,790
are you oughta mating the basically

809
00:36:24,790 --> 00:36:26,500
producing actual compliance

810
00:36:26,500 --> 00:36:28,870
documentation for any like upstream

811
00:36:28,870 --> 00:36:30,790
folks who have to see like official

812
00:36:30,790 --> 00:36:36,420
documents yes so we are providing

813
00:36:36,420 --> 00:36:39,520
evidences actual evidences for each

814
00:36:39,520 --> 00:36:52,360
compliance requirements of the running

815
00:36:52,360 --> 00:36:57,240
instance on ECG on AWS versus any other

816
00:36:57,240 --> 00:36:59,620
documentation interpretation like five

817
00:36:59,620 --> 00:37:01,090
code and I see it's an immutable

818
00:37:01,090 --> 00:37:03,340
infrastructure they still want to scan

819
00:37:03,340 --> 00:37:05,080
the infrastructure it's in compliance

820
00:37:05,080 --> 00:37:07,240
with the code they don't care about the

821
00:37:07,240 --> 00:37:09,820
code yeah yeah so the question is that

822
00:37:09,820 --> 00:37:13,450
the that the challenge is what you think

823
00:37:13,450 --> 00:37:15,520
that you've configured in code is that

824
00:37:15,520 --> 00:37:17,710
what's actually in there in the

825
00:37:17,710 --> 00:37:20,290
environment right so that's exactly the

826
00:37:20,290 --> 00:37:22,030
same challenge we have as well we use

827
00:37:22,030 --> 00:37:24,700
terraform for immutable infrastructure

828
00:37:24,700 --> 00:37:27,730
for our AWS environment somebody may use

829
00:37:27,730 --> 00:37:30,010
confirmation we're similar but at the

830
00:37:30,010 --> 00:37:33,010
end of day you will drift away right

831
00:37:33,010 --> 00:37:35,590
your environment will change no matter

832
00:37:35,590 --> 00:37:38,050
how hard that you try to adhere to those

833
00:37:38,050 --> 00:37:40,570
code at your tune you're right so the

834
00:37:40,570 --> 00:37:43,240
platform that we did was going directly

835
00:37:43,240 --> 00:37:46,690
to the AWS api as to the environment

836
00:37:46,690 --> 00:37:47,230
itself

837
00:37:47,230 --> 00:37:49,960
and gathering data gathering actual data

838
00:37:49,960 --> 00:37:52,300
of configurations and not just based on

839
00:37:52,300 --> 00:37:54,940
the code I wrote for the infrastructure

840
00:37:54,940 --> 00:37:59,890
itself we gather it on just on the on a

841
00:37:59,890 --> 00:38:02,130
source from the from the provider itself

842
00:38:02,130 --> 00:38:05,380
yeah and but we can but you're right so

843
00:38:05,380 --> 00:38:07,210
if we want you we can compare that with

844
00:38:07,210 --> 00:38:09,460
our tariffs own code for example and see

845
00:38:09,460 --> 00:38:14,290
if there are any differences how big of

846
00:38:14,290 --> 00:38:15,550
a challenge has it been actually

847
00:38:15,550 --> 00:38:17,200
gathering all of that data and getting

848
00:38:17,200 --> 00:38:19,480
it into a system so that you can't

849
00:38:19,480 --> 00:38:21,340
actually process it and make those and

850
00:38:21,340 --> 00:38:23,470
make the graph and make the queries that

851
00:38:23,470 --> 00:38:26,290
is the biggest technical hurdle right so

852
00:38:26,290 --> 00:38:29,290
to do it accurately and not just to do

853
00:38:29,290 --> 00:38:31,960
once but you do it repeatedly because

854
00:38:31,960 --> 00:38:33,970
you you can gather you can gather

855
00:38:33,970 --> 00:38:35,770
information once but once something

856
00:38:35,770 --> 00:38:37,300
changes you need to be able to gather

857
00:38:37,300 --> 00:38:39,100
the updates right and you need to do

858
00:38:39,100 --> 00:38:40,930
this continuously and accurately and

859
00:38:40,930 --> 00:38:43,150
every time time and after so that is the

860
00:38:43,150 --> 00:38:44,800
biggest technical challenge one of the

861
00:38:44,800 --> 00:38:47,140
biggest technical challenge and and that

862
00:38:47,140 --> 00:38:48,970
exactly why we decided to offer Cooper

863
00:38:48,970 --> 00:38:52,390
the one out as as an offering because we

864
00:38:52,390 --> 00:38:54,490
think we've solved this right and you

865
00:38:54,490 --> 00:38:55,780
know of course you can implement this

866
00:38:55,780 --> 00:38:58,720
your own you can build api's and to send

867
00:38:58,720 --> 00:39:00,730
data to a graph database you know

868
00:39:00,730 --> 00:39:04,960
somewhere but you know why we create a

869
00:39:04,960 --> 00:39:08,950
wheel right the sort of things yeah all

870
00:39:08,950 --> 00:39:11,800
of your examples were in AWS does this

871
00:39:11,800 --> 00:39:13,119
work for all the clouds

872
00:39:13,119 --> 00:39:16,119
it absolutely can't work for all the

873
00:39:16,119 --> 00:39:18,430
clouds right so as a as a platform as

874
00:39:18,430 --> 00:39:21,850
the Jupiter one platform we so far has

875
00:39:21,850 --> 00:39:24,730
focused primarily in AWS now we've we've

876
00:39:24,730 --> 00:39:28,119
started adding support for a juror in

877
00:39:28,119 --> 00:39:30,970
Microsoft but but the concept yes you

878
00:39:30,970 --> 00:39:33,010
can work across all clouds do you have

879
00:39:33,010 --> 00:39:36,180
any cool demos and Azure

880
00:39:36,640 --> 00:39:38,800
we can probably chat offline yeah I'll

881
00:39:38,800 --> 00:39:42,880
show you what we have yeah so you're

882
00:39:42,880 --> 00:39:44,680
collecting quite a lot of information

883
00:39:44,680 --> 00:39:49,000
and the next expected step is a I on

884
00:39:49,000 --> 00:39:53,410
that any thoughts about that oh sure so

885
00:39:53,410 --> 00:39:56,170
we do have ideas on what we can do from

886
00:39:56,170 --> 00:39:56,980
a much sooner

887
00:39:56,980 --> 00:39:59,680
learning perspective and kind of get a

888
00:39:59,680 --> 00:40:02,640
more insight understanding the data how

889
00:40:02,640 --> 00:40:05,380
things change for example a simple

890
00:40:05,380 --> 00:40:08,200
example will be to understand what are

891
00:40:08,200 --> 00:40:09,640
the ephemeral resources in your

892
00:40:09,640 --> 00:40:11,080
environment right so some things are

893
00:40:11,080 --> 00:40:15,370
easy but everybody's environments are

894
00:40:15,370 --> 00:40:16,990
different right so you may have a doubt

895
00:40:16,990 --> 00:40:18,580
an ec2 instances and they're always

896
00:40:18,580 --> 00:40:21,190
there and the next person may have you

897
00:40:21,190 --> 00:40:22,570
know like like us where we may have

898
00:40:22,570 --> 00:40:24,370
anywhere between five to five thousand

899
00:40:24,370 --> 00:40:27,400
ec2 instances at any given time so the

900
00:40:27,400 --> 00:40:29,590
use cases are different so we can we we

901
00:40:29,590 --> 00:40:31,450
have ideas on how to leverage pension

902
00:40:31,450 --> 00:40:33,640
learning to do things like that but

903
00:40:33,640 --> 00:40:35,530
there are other other ideas as well that

904
00:40:35,530 --> 00:40:39,670
we're exploring of course thank you very

905
00:40:39,670 --> 00:40:42,510
much all right

906
00:40:43,850 --> 00:40:47,139
[Applause]

