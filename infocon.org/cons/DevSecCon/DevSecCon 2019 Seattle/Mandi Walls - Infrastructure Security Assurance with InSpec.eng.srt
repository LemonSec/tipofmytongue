1
00:00:00,000 --> 00:00:02,220
today here we have a Mandy waltz with us

2
00:00:02,220 --> 00:00:05,400
and Mandy is the Technical Community

3
00:00:05,400 --> 00:00:08,550
Manager at chef and I'm going to talk a

4
00:00:08,550 --> 00:00:10,650
little bit about how in-spec can help

5
00:00:10,650 --> 00:00:13,170
with with assurance how how it can

6
00:00:13,170 --> 00:00:14,969
eliminate some of the boring tasks of

7
00:00:14,969 --> 00:00:17,010
security so please give a big round of

8
00:00:17,010 --> 00:00:22,619
applause and over to Mandy all right so

9
00:00:22,619 --> 00:00:24,720
we're keeping with seamless female

10
00:00:24,720 --> 00:00:26,390
speakers with purple hair dress in blue

11
00:00:26,390 --> 00:00:28,380
my flowers today are

12
00:00:28,380 --> 00:00:30,660
lilies-of-the-valley so just for you

13
00:00:30,660 --> 00:00:40,489
know your notes there all right yes no

14
00:00:40,489 --> 00:00:48,270
no play doesn't want to auto advance any

15
00:00:48,270 --> 00:01:02,030
ideas spacebar hello computer no see

16
00:01:02,480 --> 00:01:08,390
no arrows no aah forgive me one of those

17
00:01:08,390 --> 00:01:10,370
days oh well we'll get a little started

18
00:01:10,370 --> 00:01:13,070
but it's fine um so yeah my name is

19
00:01:13,070 --> 00:01:15,680
Mandy Wallace I work at chef we are

20
00:01:15,680 --> 00:01:19,700
actually based here in Seattle we're

21
00:01:19,700 --> 00:01:25,430
down in Pioneer Square and we do I think

22
00:01:25,430 --> 00:01:28,190
if you heard of chef anybody most people

23
00:01:28,190 --> 00:01:29,479
awesome thank you

24
00:01:29,479 --> 00:01:30,860
sometimes I get in a room and like who

25
00:01:30,860 --> 00:01:33,920
are you again so chefs start out doing

26
00:01:33,920 --> 00:01:35,630
configuration management systems

27
00:01:35,630 --> 00:01:37,940
automation that kind of stuff for mainly

28
00:01:37,940 --> 00:01:40,820
operations people right but a few years

29
00:01:40,820 --> 00:01:43,520
ago we acquired a company based in

30
00:01:43,520 --> 00:01:46,400
Berlin that had been doing some security

31
00:01:46,400 --> 00:01:49,610
testing framework stuff for telecom and

32
00:01:49,610 --> 00:01:51,800
a couple of other like larger German

33
00:01:51,800 --> 00:01:54,410
companies and one of their products that

34
00:01:54,410 --> 00:01:57,259
they were working on was it's called in

35
00:01:57,259 --> 00:02:00,680
spec so it heard of in spec then I heard

36
00:02:00,680 --> 00:02:02,330
of server spec which is sort of its

37
00:02:02,330 --> 00:02:05,450
earlier cousin so these are tools that

38
00:02:05,450 --> 00:02:09,020
were if you read some of the top lines

39
00:02:09,020 --> 00:02:11,510
stuff about them the focus is on testing

40
00:02:11,510 --> 00:02:14,330
your security code in an infrastructure

41
00:02:14,330 --> 00:02:16,340
as code sort of way and I'm going to

42
00:02:16,340 --> 00:02:18,080
like ignore that part of it for right

43
00:02:18,080 --> 00:02:19,940
now so if you don't write infrastructure

44
00:02:19,940 --> 00:02:23,750
code with chef infrastructure or puppet

45
00:02:23,750 --> 00:02:25,580
or ansible or that kind of thing don't

46
00:02:25,580 --> 00:02:28,880
worry about that stuff so we'll

47
00:02:28,880 --> 00:02:30,560
eventually get my contact information up

48
00:02:30,560 --> 00:02:34,130
there that's fine if you want to get in

49
00:02:34,130 --> 00:02:36,920
touch with me i'm ln x CH k anywhere but

50
00:02:36,920 --> 00:02:39,380
snapchat cuz like over 40 you probably

51
00:02:39,380 --> 00:02:40,850
don't want to be on snapchat that's

52
00:02:40,850 --> 00:02:46,099
seems like a bad idea so what we do at

53
00:02:46,099 --> 00:02:49,880
chef like I said we started out awesome

54
00:02:49,880 --> 00:02:53,540
thank you okay don't touch it

55
00:02:53,540 --> 00:02:57,410
okay oh you can see all the uncool stuff

56
00:02:57,410 --> 00:03:01,280
I have on my on my dock down there so a

57
00:03:01,280 --> 00:03:03,980
couple of years ago at our conference we

58
00:03:03,980 --> 00:03:08,090
had the CEC IO CTO of Alaska Airlines

59
00:03:08,090 --> 00:03:10,579
who are Ashly based here give her a

60
00:03:10,579 --> 00:03:14,459
keynote talk about what Alaska does to

61
00:03:14,459 --> 00:03:17,489
that do technology stuff right like

62
00:03:17,489 --> 00:03:19,980
Alaska is a big turn airline right the

63
00:03:19,980 --> 00:03:21,719
main thing they do is fly planes places

64
00:03:21,719 --> 00:03:24,269
but to differentiate what they do in

65
00:03:24,269 --> 00:03:26,939
that space a lot of what they were

66
00:03:26,939 --> 00:03:30,150
adding as far as customer behaviors as

67
00:03:30,150 --> 00:03:33,389
far as value add for their passengers is

68
00:03:33,389 --> 00:03:36,269
technology-based and a lot of those

69
00:03:36,269 --> 00:03:38,790
things are not necessarily the most

70
00:03:38,790 --> 00:03:40,139
intuitive sort of stuff that you would

71
00:03:40,139 --> 00:03:42,180
think about with an airline but

72
00:03:42,180 --> 00:03:44,280
basically he told us that you know

73
00:03:44,280 --> 00:03:45,750
they're going to be a software company

74
00:03:45,750 --> 00:03:47,519
with airplanes so you think about the

75
00:03:47,519 --> 00:03:51,540
massive capital costs of buying or

76
00:03:51,540 --> 00:03:53,730
leasing airplanes plus the cost of

77
00:03:53,730 --> 00:03:56,069
births at airports and all those things

78
00:03:56,069 --> 00:03:57,780
but the real place where they were

79
00:03:57,780 --> 00:03:59,189
differentiating and being different

80
00:03:59,189 --> 00:04:01,919
being special is with their sector

81
00:04:01,919 --> 00:04:03,750
technology sector or their software and

82
00:04:03,750 --> 00:04:06,510
the things that they were sort of making

83
00:04:06,510 --> 00:04:11,219
available that way so as we're thinking

84
00:04:11,219 --> 00:04:13,590
about this you know looking at not only

85
00:04:13,590 --> 00:04:15,810
who we work with as far as things like

86
00:04:15,810 --> 00:04:18,810
Alaska Airlines banks financial

87
00:04:18,810 --> 00:04:21,238
institutions educational institutions

88
00:04:21,238 --> 00:04:23,460
the government you know all these folks

89
00:04:23,460 --> 00:04:26,370
that are increasingly moving towards

90
00:04:26,370 --> 00:04:28,680
software based solutions for everything

91
00:04:28,680 --> 00:04:30,930
we're finding that a lot of what they're

92
00:04:30,930 --> 00:04:34,470
also doing is being overwhelmed by the

93
00:04:34,470 --> 00:04:37,650
security requirements that they hire now

94
00:04:37,650 --> 00:04:39,210
faced with things that they maybe

95
00:04:39,210 --> 00:04:42,030
weren't expecting 5-10 years ago a

96
00:04:42,030 --> 00:04:45,060
couple of articles I kind of pulled out

97
00:04:45,060 --> 00:04:46,770
over the past couple of years

98
00:04:46,770 --> 00:04:50,310
this one is Honda had to shutdown plant

99
00:04:50,310 --> 00:04:53,550
line so manufacturing of cars because

100
00:04:53,550 --> 00:04:55,919
they had an infection in the windows

101
00:04:55,919 --> 00:04:58,229
management systems that were running

102
00:04:58,229 --> 00:04:59,909
some of their automation robots right

103
00:04:59,909 --> 00:05:01,500
you don't really think about that as

104
00:05:01,500 --> 00:05:03,150
being a software problem but you have to

105
00:05:03,150 --> 00:05:07,470
stop making cars so you drive because

106
00:05:07,470 --> 00:05:09,539
you have a problem on Windows and it was

107
00:05:09,539 --> 00:05:11,130
kind of insidious they had patched the

108
00:05:11,130 --> 00:05:12,840
problem but hadn't patched

109
00:05:12,840 --> 00:05:15,150
their golden image and all the running

110
00:05:15,150 --> 00:05:18,900
instances were fine at patch time but T

111
00:05:18,900 --> 00:05:21,500
plus N or they instantiating new ones

112
00:05:21,500 --> 00:05:25,050
bad stuff was still there right so chefs

113
00:05:25,050 --> 00:05:27,530
like hey this is an infrastructure

114
00:05:27,530 --> 00:05:29,390
Automation problem right this is suffers

115
00:05:29,390 --> 00:05:31,190
we know how to work with how to talk

116
00:05:31,190 --> 00:05:34,450
about this one too this is a HIPAA fine

117
00:05:34,450 --> 00:05:38,240
because they left the default password

118
00:05:38,240 --> 00:05:41,690
in a piece of software we're like come

119
00:05:41,690 --> 00:05:43,820
on we know how to fix this stuff we not

120
00:05:43,820 --> 00:05:47,270
automate this stuff so these help us you

121
00:05:47,270 --> 00:05:50,150
know talk about the boring parts of

122
00:05:50,150 --> 00:05:53,270
security with operators with developers

123
00:05:53,270 --> 00:05:55,130
this is not razor and blade hacking

124
00:05:55,130 --> 00:05:56,960
you're Gibson this is like the stuff

125
00:05:56,960 --> 00:05:59,990
that gets lost because you have a number

126
00:05:59,990 --> 00:06:02,270
of micro services you have J number of

127
00:06:02,270 --> 00:06:03,530
runtimes you have all this other stuff

128
00:06:03,530 --> 00:06:06,440
that you have to worry about plus you're

129
00:06:06,440 --> 00:06:07,669
getting requirements from different

130
00:06:07,669 --> 00:06:09,320
places I mentioned we work with

131
00:06:09,320 --> 00:06:11,440
financial institutions they've got a

132
00:06:11,440 --> 00:06:14,810
compliance team that these folks aren't

133
00:06:14,810 --> 00:06:17,240
necessarily neat don't necessarily need

134
00:06:17,240 --> 00:06:19,490
to be really technology savvy they're

135
00:06:19,490 --> 00:06:22,220
not one the keyboards doing fixes a lot

136
00:06:22,220 --> 00:06:23,750
of times they have a document that

137
00:06:23,750 --> 00:06:25,130
they're working with they have some kind

138
00:06:25,130 --> 00:06:26,540
of requirements that they're basing

139
00:06:26,540 --> 00:06:28,460
their stuff off of sometimes as a PDF

140
00:06:28,460 --> 00:06:31,370
file sometimes it's a Excel spreadsheet

141
00:06:31,370 --> 00:06:33,080
sometimes they've got a requirement to

142
00:06:33,080 --> 00:06:36,500
follow see is how okay pop quiz how big

143
00:06:36,500 --> 00:06:40,100
how many pages is a PDF version of C is

144
00:06:40,100 --> 00:06:45,800
standard for rl8 yeah five to seven

145
00:06:45,800 --> 00:06:48,650
hundred pages for Linux platform C is

146
00:06:48,650 --> 00:06:51,440
standard whoo nighttime reading anybody

147
00:06:51,440 --> 00:06:53,540
you know if you've got insomnia it's

148
00:06:53,540 --> 00:06:55,160
right in there for you

149
00:06:55,160 --> 00:06:57,530
you've got your security folks that are

150
00:06:57,530 --> 00:06:59,960
you know down the hall in in their cubby

151
00:06:59,960 --> 00:07:02,330
and they've got stuff that's coming in

152
00:07:02,330 --> 00:07:04,010
from your upstream vendors they're

153
00:07:04,010 --> 00:07:05,870
worried about kernel module problems

154
00:07:05,870 --> 00:07:07,340
they're worried about runtime problems

155
00:07:07,340 --> 00:07:09,050
they're getting tools from a completely

156
00:07:09,050 --> 00:07:12,050
different location then we have our dev

157
00:07:12,050 --> 00:07:14,780
ops dev and ops people who have their

158
00:07:14,780 --> 00:07:16,280
own set of tools and their own set of

159
00:07:16,280 --> 00:07:18,380
requirements and what we wanted was

160
00:07:18,380 --> 00:07:19,940
something when we talking to these folks

161
00:07:19,940 --> 00:07:22,250
about all the things they're doing and

162
00:07:22,250 --> 00:07:24,229
we want to say you're going to be faster

163
00:07:24,229 --> 00:07:25,610
with automation you're gonna be really

164
00:07:25,610 --> 00:07:27,560
good at this you're gonna like speed up

165
00:07:27,560 --> 00:07:29,360
your pipelines and all these things all

166
00:07:29,360 --> 00:07:31,010
the security requirements that these

167
00:07:31,010 --> 00:07:33,169
folks care about can be integrated into

168
00:07:33,169 --> 00:07:34,360
that sort of thing

169
00:07:34,360 --> 00:07:38,390
so we want one place where everybody can

170
00:07:38,390 --> 00:07:40,610
contribute the things that they need

171
00:07:40,610 --> 00:07:43,610
and get the feedback back from that tool

172
00:07:43,610 --> 00:07:47,060
in this case the tool we we work with is

173
00:07:47,060 --> 00:07:51,409
called inspect so what we're working

174
00:07:51,409 --> 00:07:53,750
towards is giving everybody every

175
00:07:53,750 --> 00:07:56,689
stakeholder in the in the team a human

176
00:07:56,689 --> 00:07:59,629
readable language for tests related to

177
00:07:59,629 --> 00:08:01,039
security and compliance and what that

178
00:08:01,039 --> 00:08:03,680
means is I don't want it to be in some

179
00:08:03,680 --> 00:08:05,840
obscure language right I want it to be

180
00:08:05,840 --> 00:08:07,669
as close to English as possible without

181
00:08:07,669 --> 00:08:10,039
being COBOL right so something that

182
00:08:10,039 --> 00:08:13,400
people can understand what I intend when

183
00:08:13,400 --> 00:08:15,889
I encode all these requirements into a

184
00:08:15,889 --> 00:08:17,330
piece of code I don't want to scare

185
00:08:17,330 --> 00:08:19,849
people away I want to be able to create

186
00:08:19,849 --> 00:08:23,539
share and reuse these profiles that I am

187
00:08:23,539 --> 00:08:25,250
going to sit down and actually create

188
00:08:25,250 --> 00:08:27,710
for my team I could have hundreds or

189
00:08:27,710 --> 00:08:29,870
thousands of requirements sort of line

190
00:08:29,870 --> 00:08:31,699
by line pieces for different components

191
00:08:31,699 --> 00:08:34,279
on the system and I want that stuff to

192
00:08:34,279 --> 00:08:36,799
be able to be in a place where everybody

193
00:08:36,799 --> 00:08:38,599
can consume it and everybody can work

194
00:08:38,599 --> 00:08:41,630
with it at some point I'm probably going

195
00:08:41,630 --> 00:08:43,039
to want to build my own rules for it

196
00:08:43,039 --> 00:08:46,459
like the inspect team is a combination

197
00:08:46,459 --> 00:08:48,290
of folks who work for us as well as a

198
00:08:48,290 --> 00:08:51,110
very vibrant open-source community and

199
00:08:51,110 --> 00:08:53,510
they're sort of constantly reworking and

200
00:08:53,510 --> 00:08:55,760
adding things to the tool but there's

201
00:08:55,760 --> 00:08:57,589
always stuff out there that we don't see

202
00:08:57,589 --> 00:08:59,660
we don't necessarily know you look hot

203
00:08:59,660 --> 00:09:01,190
software out there and the enterprise

204
00:09:01,190 --> 00:09:04,040
that could use some security boundaries

205
00:09:04,040 --> 00:09:05,570
could use some things to be looked at

206
00:09:05,570 --> 00:09:07,459
we've maybe never seen it before

207
00:09:07,459 --> 00:09:10,670
so underneath the covers in spec is Ruby

208
00:09:10,670 --> 00:09:12,980
you can add your own components to it if

209
00:09:12,980 --> 00:09:15,769
you so desire so I was a command-line

210
00:09:15,769 --> 00:09:18,079
tool so we plug it into our build

211
00:09:18,079 --> 00:09:19,730
process as many times as you want to

212
00:09:19,730 --> 00:09:22,250
it's pretty fast you can divide up the

213
00:09:22,250 --> 00:09:23,420
profiles into little pieces

214
00:09:23,420 --> 00:09:25,399
run it wherever it needs to be so you

215
00:09:25,399 --> 00:09:28,010
can test early and test often for the

216
00:09:28,010 --> 00:09:30,860
stuff that feels mundane feels boring

217
00:09:30,860 --> 00:09:32,510
I don't want ports open I don't want

218
00:09:32,510 --> 00:09:34,550
these services running I want to make

219
00:09:34,550 --> 00:09:36,350
sure that what I'm shipping doesn't

220
00:09:36,350 --> 00:09:39,399
violate all these sort of baseline rules

221
00:09:39,399 --> 00:09:42,680
so you know what complex compliance or

222
00:09:42,680 --> 00:09:45,380
security components requirements to slow

223
00:09:45,380 --> 00:09:47,089
you down right just like the last

224
00:09:47,089 --> 00:09:48,860
speaker said you want to be as fast as

225
00:09:48,860 --> 00:09:50,899
possible the end goal of the software

226
00:09:50,899 --> 00:09:52,310
creation is to get it out in front of

227
00:09:52,310 --> 00:09:53,630
customers who are going to hopefully pay

228
00:09:53,630 --> 00:09:54,510
you for it right

229
00:09:54,510 --> 00:09:56,940
different information and expertise

230
00:09:56,940 --> 00:09:58,740
lives in a lot of different teams you

231
00:09:58,740 --> 00:10:00,510
have your security folks you have your

232
00:10:00,510 --> 00:10:02,010
compliance folks you have your

233
00:10:02,010 --> 00:10:03,800
operational people who are maybe the

234
00:10:03,800 --> 00:10:06,300
subject-matter experts on the actual

235
00:10:06,300 --> 00:10:08,699
platforms that you're using no don't

236
00:10:08,699 --> 00:10:10,199
necessarily have all that knowledge and

237
00:10:10,199 --> 00:10:11,910
every team you should need to write you

238
00:10:11,910 --> 00:10:13,649
should be able to ever have everyone

239
00:10:13,649 --> 00:10:15,800
come together and work on the same tool

240
00:10:15,800 --> 00:10:18,630
so in spec itself is code you check it

241
00:10:18,630 --> 00:10:21,209
into repos right you can publish it as

242
00:10:21,209 --> 00:10:22,769
artifacts and we'll look at that during

243
00:10:22,769 --> 00:10:26,100
the little demo you can include inspect

244
00:10:26,100 --> 00:10:28,500
steps before code check in you can

245
00:10:28,500 --> 00:10:30,480
include inspect text steps and

246
00:10:30,480 --> 00:10:32,250
integration and pre-production make sure

247
00:10:32,250 --> 00:10:34,110
nothing that's been changed with a new

248
00:10:34,110 --> 00:10:35,910
feature ad that opens a port that

249
00:10:35,910 --> 00:10:37,589
shouldn't be opened that adds a library

250
00:10:37,589 --> 00:10:39,630
that has a known vulnerability any of

251
00:10:39,630 --> 00:10:41,820
those kinds of things once you get into

252
00:10:41,820 --> 00:10:43,649
production you can continue to run

253
00:10:43,649 --> 00:10:46,139
inspect in such a way that it helps you

254
00:10:46,139 --> 00:10:48,389
maintain your knowledge across the

255
00:10:48,389 --> 00:10:50,490
entire installed fleet so when a new

256
00:10:50,490 --> 00:10:52,170
vulnerability is announced you can push

257
00:10:52,170 --> 00:10:54,060
a scan out and have it come back and

258
00:10:54,060 --> 00:10:57,149
tell you 45% of your fleet is vulnerable

259
00:10:57,149 --> 00:11:01,410
to this and then work on a fix so for an

260
00:11:01,410 --> 00:11:03,089
example maybe you get something like I

261
00:11:03,089 --> 00:11:05,069
used to be a sysadmin I worked for a

262
00:11:05,069 --> 00:11:07,160
long time at AOL and we had a

263
00:11:07,160 --> 00:11:10,380
infrastructure security team that would

264
00:11:10,380 --> 00:11:13,740
randomly send us emails about here's the

265
00:11:13,740 --> 00:11:15,569
thing we need you to patch this week and

266
00:11:15,569 --> 00:11:17,060
you're like looking down your list of

267
00:11:17,060 --> 00:11:19,680
thousands of nodes you're like when do

268
00:11:19,680 --> 00:11:21,690
you want this by and they're like Friday

269
00:11:21,690 --> 00:11:24,269
at lunchtime no that's not going to

270
00:11:24,269 --> 00:11:24,709
happen

271
00:11:24,709 --> 00:11:27,540
so you get some kind of like random

272
00:11:27,540 --> 00:11:29,250
directive about how to fix something

273
00:11:29,250 --> 00:11:30,990
maybe you're the one publishing the

274
00:11:30,990 --> 00:11:32,910
directives right you're like hmm I need

275
00:11:32,910 --> 00:11:34,760
these guys to fix all this by Friday so

276
00:11:34,760 --> 00:11:37,620
something like maybe you're ensuring you

277
00:11:37,620 --> 00:11:38,970
want to show that no legacy network

278
00:11:38,970 --> 00:11:40,889
services are installed on all your

279
00:11:40,889 --> 00:11:42,839
versions of Linux including some number

280
00:11:42,839 --> 00:11:45,360
of old stuff that even though we're

281
00:11:45,360 --> 00:11:48,420
maybe years past the useful lifetime of

282
00:11:48,420 --> 00:11:51,089
these protocols they still get installed

283
00:11:51,089 --> 00:11:53,339
they're still around there's no packages

284
00:11:53,339 --> 00:11:55,319
for them just in case somebody might

285
00:11:55,319 --> 00:11:59,550
need it someday so how do we go about

286
00:11:59,550 --> 00:12:00,990
looking at these things where are we

287
00:12:00,990 --> 00:12:02,880
going for checking and fixing we

288
00:12:02,880 --> 00:12:04,529
identify the package names on your

289
00:12:04,529 --> 00:12:06,689
systems right human knowledge steps in

290
00:12:06,689 --> 00:12:08,100
and says well ok on

291
00:12:08,100 --> 00:12:09,930
sometimes some Braille it's this thing

292
00:12:09,930 --> 00:12:13,560
on Debian Ubuntu it's this thing oh we

293
00:12:13,560 --> 00:12:15,120
started using Amazon Linux over here

294
00:12:15,120 --> 00:12:16,800
could you check what exactly that

295
00:12:16,800 --> 00:12:19,560
package name is for us you could remove

296
00:12:19,560 --> 00:12:21,570
all the packages that's certainly a

297
00:12:21,570 --> 00:12:24,750
solution you want to make sure you're

298
00:12:24,750 --> 00:12:26,310
rebooting all your currently used images

299
00:12:26,310 --> 00:12:28,230
rebuilding them right you don't want to

300
00:12:28,230 --> 00:12:30,150
fix all the running instances and then

301
00:12:30,150 --> 00:12:33,530
have a vulnerable instance pop up later

302
00:12:33,530 --> 00:12:35,430
we want to ensure it doesn't get

303
00:12:35,430 --> 00:12:37,380
reinstalled by accident sometime later

304
00:12:37,380 --> 00:12:39,660
as an unintended dependency of something

305
00:12:39,660 --> 00:12:41,490
new or as a new platform that we're

306
00:12:41,490 --> 00:12:44,040
deploying as a new piece of a new

307
00:12:44,040 --> 00:12:45,840
feature we want to make sure that even

308
00:12:45,840 --> 00:12:48,660
during runtime that we're still covered

309
00:12:48,660 --> 00:12:51,800
so for something like ina DS arnott d

310
00:12:51,800 --> 00:12:54,720
the actual component this is inspect

311
00:12:54,720 --> 00:12:56,130
code that actually would check for that

312
00:12:56,130 --> 00:12:59,520
I have a couple of things there that

313
00:12:59,520 --> 00:13:02,310
help me understand what's going on but

314
00:13:02,310 --> 00:13:04,110
then also just do the work right so

315
00:13:04,110 --> 00:13:06,870
that's close to English you know if

316
00:13:06,870 --> 00:13:08,370
you're if you're fluent in English

317
00:13:08,370 --> 00:13:09,440
you're gonna read and understand English

318
00:13:09,440 --> 00:13:12,690
I have a control which is basically

319
00:13:12,690 --> 00:13:15,150
saying this is an inspect test that's my

320
00:13:15,150 --> 00:13:17,070
thing I give it a name which could be

321
00:13:17,070 --> 00:13:19,110
completely arbitrary I can give it an

322
00:13:19,110 --> 00:13:22,020
impact this must be fixed 1.0 anywhere

323
00:13:22,020 --> 00:13:25,440
from 0.1 and you need to know about this

324
00:13:25,440 --> 00:13:30,080
to 1.0 I give it a title which helps my

325
00:13:30,080 --> 00:13:33,930
not technical frontline folks understand

326
00:13:33,930 --> 00:13:36,060
what I'm actually fixing so this is the

327
00:13:36,060 --> 00:13:39,540
do not run deprecated protocols as the

328
00:13:39,540 --> 00:13:42,720
title so I can take this to my c-level

329
00:13:42,720 --> 00:13:44,640
folks I can take this to folks who don't

330
00:13:44,640 --> 00:13:45,720
necessarily need to know the

331
00:13:45,720 --> 00:13:48,390
nitty-gritty I can describe where I

332
00:13:48,390 --> 00:13:49,890
found it or where it was required I

333
00:13:49,890 --> 00:13:51,480
could put a JIRA ticket number in there

334
00:13:51,480 --> 00:13:52,890
I could put a github issue number in

335
00:13:52,890 --> 00:13:55,020
there any kind of notation that tells me

336
00:13:55,020 --> 00:13:56,940
why I'm actually pushing this thing in

337
00:13:56,940 --> 00:13:58,890
here and then I actually do the work

338
00:13:58,890 --> 00:14:01,860
here I'm describing two packages in the

339
00:14:01,860 --> 00:14:04,080
testing language is built on spec if you

340
00:14:04,080 --> 00:14:06,090
come from Ruby and hopefully looks

341
00:14:06,090 --> 00:14:09,540
familiar and I have a package name and I

342
00:14:09,540 --> 00:14:12,180
say it should not be installed right so

343
00:14:12,180 --> 00:14:14,910
very clear about what my intention is

344
00:14:14,910 --> 00:14:18,949
and why I'm intending to do that

345
00:14:20,370 --> 00:14:22,960
so some core components we have

346
00:14:22,960 --> 00:14:25,380
resources resource characteristics and

347
00:14:25,380 --> 00:14:28,000
then profiles that sort of gather all

348
00:14:28,000 --> 00:14:30,100
those up and the final part you actually

349
00:14:30,100 --> 00:14:32,650
execute this on the command line so

350
00:14:32,650 --> 00:14:36,460
resources are built in ways of looking

351
00:14:36,460 --> 00:14:39,280
at the system so the atomic components

352
00:14:39,280 --> 00:14:41,860
of your system there's a lot of built-in

353
00:14:41,860 --> 00:14:43,990
stuff forget the numbers like 70 I think

354
00:14:43,990 --> 00:14:46,360
right now for Linux for things that

355
00:14:46,360 --> 00:14:48,460
you're looking at like users files

356
00:14:48,460 --> 00:14:51,190
directories services packages those

357
00:14:51,190 --> 00:14:52,600
kinds of things you can dig around in

358
00:14:52,600 --> 00:14:54,250
dev a little bit you know that sort of

359
00:14:54,250 --> 00:14:56,050
stuff as well it's basically a tool

360
00:14:56,050 --> 00:14:58,150
that's going to like go into your system

361
00:14:58,150 --> 00:15:00,250
open all the closets peek under the bed

362
00:15:00,250 --> 00:15:02,080
to see where everything is and where it

363
00:15:02,080 --> 00:15:04,030
should be there's also some windows

364
00:15:04,030 --> 00:15:06,100
specifics like registry key and things

365
00:15:06,100 --> 00:15:07,840
like that that only applied to the

366
00:15:07,840 --> 00:15:10,930
Windows platforms every resource has

367
00:15:10,930 --> 00:15:12,970
some number of characteristics when you

368
00:15:12,970 --> 00:15:15,580
think about file file has a size at M

369
00:15:15,580 --> 00:15:17,770
times E time all that kind of stuff but

370
00:15:17,770 --> 00:15:19,740
there's also more sophisticated

371
00:15:19,740 --> 00:15:21,580
characteristics for opening up things

372
00:15:21,580 --> 00:15:25,510
like httpd.conf for checking in there so

373
00:15:25,510 --> 00:15:27,540
there's some of those built in as well

374
00:15:27,540 --> 00:15:30,640
system resources directory file user

375
00:15:30,640 --> 00:15:33,610
group sorts of things specific services

376
00:15:33,610 --> 00:15:36,040
that we see a lot or we're dependent on

377
00:15:36,040 --> 00:15:38,740
or the inspect team itself has used in

378
00:15:38,740 --> 00:15:40,870
the past things like a patchy or nginx

379
00:15:40,870 --> 00:15:44,460
rabbitmq Postgres is all built in

380
00:15:44,460 --> 00:15:46,690
programming languages components right

381
00:15:46,690 --> 00:15:47,950
you think about how many vulnerabilities

382
00:15:47,950 --> 00:15:50,670
you might have in a gem or in

383
00:15:50,670 --> 00:15:53,920
characteristics or PowerShell components

384
00:15:53,920 --> 00:15:56,050
those sorts of things you can check

385
00:15:56,050 --> 00:15:56,740
there as well

386
00:15:56,740 --> 00:15:59,830
network services basic stuff like port

387
00:15:59,830 --> 00:16:02,230
and protocol but also more sophisticated

388
00:16:02,230 --> 00:16:05,500
checks for things like HTTP components

389
00:16:05,500 --> 00:16:09,520
and SSH all of them are fully documented

390
00:16:09,520 --> 00:16:12,700
in the in the docs there when we dig

391
00:16:12,700 --> 00:16:15,220
down into what it's actually looking at

392
00:16:15,220 --> 00:16:18,280
then things like the characteristics

393
00:16:18,280 --> 00:16:20,380
underlying all these components for

394
00:16:20,380 --> 00:16:23,170
basic stuff files directory groups we

395
00:16:23,170 --> 00:16:24,540
can check if they're even there right

396
00:16:24,540 --> 00:16:26,320
should exist

397
00:16:26,320 --> 00:16:28,620
super easy language it should exist

398
00:16:28,620 --> 00:16:30,610
packages that should or should not be

399
00:16:30,610 --> 00:16:33,010
installed can negate all of these as

400
00:16:33,010 --> 00:16:33,640
well

401
00:16:33,640 --> 00:16:35,350
services that should or should not be

402
00:16:35,350 --> 00:16:38,500
enabled or running right then I can get

403
00:16:38,500 --> 00:16:41,800
down into serious config files right so

404
00:16:41,800 --> 00:16:44,050
something like rotating the audit d-logs

405
00:16:44,050 --> 00:16:48,160
which is part of the CIS requirements

406
00:16:48,160 --> 00:16:50,470
right so looking at that checking inside

407
00:16:50,470 --> 00:16:52,210
the config file for a specific setting

408
00:16:52,210 --> 00:16:54,490
for some number of these config files

409
00:16:54,490 --> 00:16:56,860
that are included if it my config file

410
00:16:56,860 --> 00:16:58,780
happens to not be there I can write my

411
00:16:58,780 --> 00:17:01,930
own also I can run any arbitrary checks

412
00:17:01,930 --> 00:17:04,119
as a command as long as they return

413
00:17:04,119 --> 00:17:06,130
return codes like zero if it was

414
00:17:06,130 --> 00:17:08,349
successful right so I can add that in so

415
00:17:08,349 --> 00:17:10,359
you think about some of the stuff that

416
00:17:10,359 --> 00:17:11,950
you might get from your upstream vendors

417
00:17:11,950 --> 00:17:13,780
run this command to see if you're

418
00:17:13,780 --> 00:17:16,000
vulnerable well there's no reason to

419
00:17:16,000 --> 00:17:17,530
rewrite that I can actually run that

420
00:17:17,530 --> 00:17:19,209
command and have inspect check that for

421
00:17:19,209 --> 00:17:22,270
me so that I know hey this thing from my

422
00:17:22,270 --> 00:17:24,730
OS vendors okay and I can produce that

423
00:17:24,730 --> 00:17:28,270
as part of my regular reports so I can

424
00:17:28,270 --> 00:17:30,580
run it it's a command line tool I can

425
00:17:30,580 --> 00:17:32,740
install it on my workstation either as a

426
00:17:32,740 --> 00:17:35,020
ruby gem or a part of some of the chef's

427
00:17:35,020 --> 00:17:37,780
packaging it can be run locally so I can

428
00:17:37,780 --> 00:17:39,460
test the machine not actually running on

429
00:17:39,460 --> 00:17:42,490
I can run it remotely so it will login

430
00:17:42,490 --> 00:17:44,770
to our remote system bring all of the

431
00:17:44,770 --> 00:17:47,320
tools along that it needs with it so you

432
00:17:47,320 --> 00:17:49,540
don't fuss around with the actual target

433
00:17:49,540 --> 00:17:52,450
system and run the tests from there and

434
00:17:52,450 --> 00:17:57,400
that will do that over when RM or SSH so

435
00:17:57,400 --> 00:17:59,020
how often do we check this kind of

436
00:17:59,020 --> 00:18:02,470
security as someone who worked as in

437
00:18:02,470 --> 00:18:05,110
operations like we maybe get an audit

438
00:18:05,110 --> 00:18:07,660
requests maybe twice a year and then

439
00:18:07,660 --> 00:18:10,000
you'd have six months to fix whatever

440
00:18:10,000 --> 00:18:12,640
came up we work a number of customers a

441
00:18:12,640 --> 00:18:15,430
sort of still operate on that that path

442
00:18:15,430 --> 00:18:17,230
and then you're considered done and you

443
00:18:17,230 --> 00:18:18,880
certain don't check it again until the

444
00:18:18,880 --> 00:18:20,770
audit happens meanwhile the system is

445
00:18:20,770 --> 00:18:22,330
doing things right maybe it's getting

446
00:18:22,330 --> 00:18:22,960
updates

447
00:18:22,960 --> 00:18:24,820
maybe there's new software and you don't

448
00:18:24,820 --> 00:18:26,740
have that sort of regular accountability

449
00:18:26,740 --> 00:18:29,020
so we end up working with folks who have

450
00:18:29,020 --> 00:18:30,970
these like yearly or try twice yearly

451
00:18:30,970 --> 00:18:33,940
audits and fire drills that they don't

452
00:18:33,940 --> 00:18:35,260
really know the state of their system on

453
00:18:35,260 --> 00:18:37,180
a regular basis so we want to move

454
00:18:37,180 --> 00:18:39,070
things more as part of the software

455
00:18:39,070 --> 00:18:41,020
development lifecycle previous speaker

456
00:18:41,020 --> 00:18:42,310
talked about moving things to the left

457
00:18:42,310 --> 00:18:44,770
making things easy making it part of

458
00:18:44,770 --> 00:18:46,360
regular builds

459
00:18:46,360 --> 00:18:49,220
so we can add run spec run in spackle on

460
00:18:49,220 --> 00:18:50,690
things like your build notes running

461
00:18:50,690 --> 00:18:53,180
Jenkins or something like that you sure

462
00:18:53,180 --> 00:18:54,470
and they meet your requirements before

463
00:18:54,470 --> 00:18:55,520
the builds are executed

464
00:18:55,520 --> 00:18:57,530
there's no vulnerable library versions

465
00:18:57,530 --> 00:18:59,060
they're checking for things like that

466
00:18:59,060 --> 00:19:01,250
before the build even executes you can

467
00:19:01,250 --> 00:19:03,680
run small or targeted profiles at code

468
00:19:03,680 --> 00:19:04,280
chicken

469
00:19:04,280 --> 00:19:06,350
you haven't enabled something bad in

470
00:19:06,350 --> 00:19:08,360
your Java Runtime that makes it

471
00:19:08,360 --> 00:19:10,700
vulnerable we run it in our integration

472
00:19:10,700 --> 00:19:12,260
environments to make sure that we're

473
00:19:12,260 --> 00:19:16,280
still validating firewalls port controls

474
00:19:16,280 --> 00:19:18,800
those sorts of things no new settings

475
00:19:18,800 --> 00:19:21,110
nothing new has been introduced in my

476
00:19:21,110 --> 00:19:23,840
latest check in that causes a problem or

477
00:19:23,840 --> 00:19:26,930
induces introduces a vulnerability let

478
00:19:26,930 --> 00:19:28,550
me run it in production as often as we

479
00:19:28,550 --> 00:19:30,740
want to right it'll run as an agent if

480
00:19:30,740 --> 00:19:32,870
you'd like to run it that way you can

481
00:19:32,870 --> 00:19:36,680
run it as a one request scan across your

482
00:19:36,680 --> 00:19:39,560
hosts that way as well and then you can

483
00:19:39,560 --> 00:19:41,570
know sort of in minutes if you've got a

484
00:19:41,570 --> 00:19:43,610
new vulnerability you update your tests

485
00:19:43,610 --> 00:19:45,860
push them out run them and then you can

486
00:19:45,860 --> 00:19:49,220
know within minutes how vulnerable you

487
00:19:49,220 --> 00:19:53,330
might be across your fleet so if I

488
00:19:53,330 --> 00:19:55,310
execute it I just run it right there

489
00:19:55,310 --> 00:19:58,190
locally in spec exec and then the tests

490
00:19:58,190 --> 00:20:01,010
themselves are in little RB files her

491
00:20:01,010 --> 00:20:03,050
Ruby files and their reports back to me

492
00:20:03,050 --> 00:20:05,540
what's looking at and whether or not

493
00:20:05,540 --> 00:20:08,110
things are good or bad right green text

494
00:20:08,110 --> 00:20:12,670
for folks who can see color good stuff

495
00:20:12,670 --> 00:20:15,140
test any target there's what it looks

496
00:20:15,140 --> 00:20:19,880
like locally there's my SSH remote it

497
00:20:19,880 --> 00:20:22,880
borrows the SSH sub commands right from

498
00:20:22,880 --> 00:20:26,450
SSH itself then we can also talk over

499
00:20:26,450 --> 00:20:29,480
win RM or we can look into docker

500
00:20:29,480 --> 00:20:32,510
containers so where the power really

501
00:20:32,510 --> 00:20:34,400
comes into inspect some of the stuff

502
00:20:34,400 --> 00:20:35,630
that's really interesting about it are

503
00:20:35,630 --> 00:20:38,090
these profiles and a profile is a way of

504
00:20:38,090 --> 00:20:39,500
gathering up a bunch of requirements

505
00:20:39,500 --> 00:20:42,380
saying this is my profile for Linux this

506
00:20:42,380 --> 00:20:44,990
is my profile for tomcat runtimes

507
00:20:44,990 --> 00:20:47,930
this is my profile for whatever else I

508
00:20:47,930 --> 00:20:50,210
might have Postgres databases or Oracle

509
00:20:50,210 --> 00:20:52,430
databases or whatever and you can group

510
00:20:52,430 --> 00:20:55,430
them by team this is my business

511
00:20:55,430 --> 00:20:57,040
development unit in

512
00:20:57,040 --> 00:21:00,060
requirements or by application or by

513
00:21:00,060 --> 00:21:02,650
platform or however it makes sense for

514
00:21:02,650 --> 00:21:04,240
you to sort of like combine all these

515
00:21:04,240 --> 00:21:08,830
things together and make these artifacts

516
00:21:08,830 --> 00:21:10,740
that help you secure all your stuff

517
00:21:10,740 --> 00:21:13,270
every profile can have multiple test

518
00:21:13,270 --> 00:21:15,250
files you can add new libraries they're

519
00:21:15,250 --> 00:21:17,350
very flexible that way for what you can

520
00:21:17,350 --> 00:21:20,770
actually put into them so there's can be

521
00:21:20,770 --> 00:21:22,690
specific for only for software only you

522
00:21:22,690 --> 00:21:24,370
use if you've got cots you've got

523
00:21:24,370 --> 00:21:28,080
homegrown stuff that has an interesting

524
00:21:28,080 --> 00:21:31,470
customized runtime or whatever else

525
00:21:31,470 --> 00:21:34,570
there's a lot of examples at dev - sexi

526
00:21:34,570 --> 00:21:37,120
oh this is the sort of a homepage for

527
00:21:37,120 --> 00:21:38,950
the inspect open-source community

528
00:21:38,950 --> 00:21:41,770
there's a lot of folks in there some of

529
00:21:41,770 --> 00:21:43,780
them are in Germany some of them are

530
00:21:43,780 --> 00:21:46,260
here in the US that are working on these

531
00:21:46,260 --> 00:21:51,700
profiles one of the sort of main ones is

532
00:21:51,700 --> 00:21:53,980
called Linux baseline so this is a

533
00:21:53,980 --> 00:21:56,410
mishmash of some stuff that comes out of

534
00:21:56,410 --> 00:21:58,870
CIS some stuff that comes out of a

535
00:21:58,870 --> 00:22:01,870
missed set of requirements but there's

536
00:22:01,870 --> 00:22:05,260
sort of the highlights of some common

537
00:22:05,260 --> 00:22:07,330
security controls for the actual

538
00:22:07,330 --> 00:22:08,800
infrastructure layer that you'd be

539
00:22:08,800 --> 00:22:11,640
working on this particular example is

540
00:22:11,640 --> 00:22:14,710
looking at the file Etsy shadow most of

541
00:22:14,710 --> 00:22:17,950
the time we figured that when we install

542
00:22:17,950 --> 00:22:19,540
the machine and see shadow is going to

543
00:22:19,540 --> 00:22:20,950
be okay and it's going to be set this

544
00:22:20,950 --> 00:22:23,320
way we want to continuously ensure that

545
00:22:23,320 --> 00:22:25,210
it's always the way we expect it to be

546
00:22:25,210 --> 00:22:28,180
whether it's hopefully it exists right

547
00:22:28,180 --> 00:22:30,970
and it's a file it's owned by our root

548
00:22:30,970 --> 00:22:34,960
user it has a specific group owner when

549
00:22:34,960 --> 00:22:36,130
those sorts of things all sort of

550
00:22:36,130 --> 00:22:37,990
getting capsulated so any of these

551
00:22:37,990 --> 00:22:40,060
particular little pieces of the

552
00:22:40,060 --> 00:22:42,180
infrastructure I can test all these

553
00:22:42,180 --> 00:22:45,190
characteristics them a little bit of a

554
00:22:45,190 --> 00:22:47,470
demo we'll cross our fingers of the demo

555
00:22:47,470 --> 00:22:50,560
gods are with us and I'm gonna work with

556
00:22:50,560 --> 00:22:54,130
this Linux baseline profile and sort of

557
00:22:54,130 --> 00:22:55,840
give you an idea of how it sort of hangs

558
00:22:55,840 --> 00:22:59,520
together so let's take a look at the

559
00:22:59,520 --> 00:23:03,340
profile itself first so this is all

560
00:23:03,340 --> 00:23:08,850
stored on github here

561
00:23:09,510 --> 00:23:12,520
and there's you know a nice readme on

562
00:23:12,520 --> 00:23:14,650
how to work with it if you happen to be

563
00:23:14,650 --> 00:23:16,810
running configuration management

564
00:23:16,810 --> 00:23:18,310
software and you like to fix all the

565
00:23:18,310 --> 00:23:20,110
things aren't included that's there as

566
00:23:20,110 --> 00:23:24,280
well so where the actual requirements

567
00:23:24,280 --> 00:23:26,680
are recorded are in these controls files

568
00:23:26,680 --> 00:23:29,770
and each control can work with or

569
00:23:29,770 --> 00:23:32,380
inspect a number of different resources

570
00:23:32,380 --> 00:23:35,020
on the system so let's take a look at

571
00:23:35,020 --> 00:23:40,090
it's a packaged SPECT on RB and they

572
00:23:40,090 --> 00:23:42,370
have names and numbers to identify them

573
00:23:42,370 --> 00:23:44,230
so that when something goes wrong you

574
00:23:44,230 --> 00:23:46,420
can tell you know what the problem is

575
00:23:46,420 --> 00:23:48,190
where it came from and and how what to

576
00:23:48,190 --> 00:23:50,740
do to sort of look at remediating it so

577
00:23:50,740 --> 00:23:52,480
for this particular one package of one

578
00:23:52,480 --> 00:23:54,190
this is the one that I stole from my

579
00:23:54,190 --> 00:23:56,800
earlier example this is looking at ina

580
00:23:56,800 --> 00:24:01,510
design at D and we have our title we

581
00:24:01,510 --> 00:24:03,190
have a description right so we pulled

582
00:24:03,190 --> 00:24:05,500
this out of it and si requirements to

583
00:24:05,500 --> 00:24:07,630
make sure these things aren't installed

584
00:24:07,630 --> 00:24:09,970
and you can have any number of these in

585
00:24:09,970 --> 00:24:13,150
your profile and there's a whole bunch

586
00:24:13,150 --> 00:24:16,750
of them here right the other bigger part

587
00:24:16,750 --> 00:24:19,740
of this profile ends up being OS spec

588
00:24:19,740 --> 00:24:23,680
230 lines and this goes in and really

589
00:24:23,680 --> 00:24:25,210
digs down into some of the deeper

590
00:24:25,210 --> 00:24:27,400
components of the system so we're

591
00:24:27,400 --> 00:24:29,620
looking at things that we assume are

592
00:24:29,620 --> 00:24:30,640
going to be correct

593
00:24:30,640 --> 00:24:32,530
we want to ensure over time that they're

594
00:24:32,530 --> 00:24:34,330
not drifting that someone hasn't gotten

595
00:24:34,330 --> 00:24:37,120
in that things aren't unnecessarily

596
00:24:37,120 --> 00:24:40,870
vulnerable over time things that

597
00:24:40,870 --> 00:24:44,820
shouldn't be in the path log and DEF

598
00:24:44,820 --> 00:24:47,500
just sort of a collection of stuff there

599
00:24:47,500 --> 00:24:51,970
okay so I can get this on my host in a

600
00:24:51,970 --> 00:24:55,360
number of different ways I'm just gonna

601
00:24:55,360 --> 00:24:59,080
SSH into a box that I booted up in AWS

602
00:24:59,080 --> 00:25:02,590
like maybe that's a no-no right could be

603
00:25:02,590 --> 00:25:04,510
we probably got custom a.m. eyes or

604
00:25:04,510 --> 00:25:05,950
custom images and if you're using cloud

605
00:25:05,950 --> 00:25:07,600
providers you're hopefully providing

606
00:25:07,600 --> 00:25:09,940
that to your teams maybe I'm looking at

607
00:25:09,940 --> 00:25:11,290
a new requirement I have a new

608
00:25:11,290 --> 00:25:13,210
application that's saying hey you want

609
00:25:13,210 --> 00:25:14,590
to run this thing we've only certified

610
00:25:14,590 --> 00:25:17,110
it on X maybe I don't have an image for

611
00:25:17,110 --> 00:25:18,850
that but I still want to start out with

612
00:25:18,850 --> 00:25:20,070
a secure Pro

613
00:25:20,070 --> 00:25:21,960
platform so that I know that I'm not

614
00:25:21,960 --> 00:25:23,460
introducing any vulnerabilities to my

615
00:25:23,460 --> 00:25:26,100
network so this happens to be Center

616
00:25:26,100 --> 00:25:27,990
seven point two I selected out of the

617
00:25:27,990 --> 00:25:30,180
marketplace or whatever their fancy name

618
00:25:30,180 --> 00:25:34,560
is and what I've installed so far is git

619
00:25:34,560 --> 00:25:37,530
and the chef workstation that actually

620
00:25:37,530 --> 00:25:43,260
come owns the inspect module so I'm

621
00:25:43,260 --> 00:25:46,950
going to CD into my demos here just to

622
00:25:46,950 --> 00:25:49,680
keep everything together and then I'm

623
00:25:49,680 --> 00:25:51,990
going to just download this thing with

624
00:25:51,990 --> 00:26:05,820
git clone and then I'm gonna run it

625
00:26:05,820 --> 00:26:09,020
right from the command line in spec

626
00:26:09,020 --> 00:26:15,470
exact make space line will accept this

627
00:26:15,470 --> 00:26:17,730
because it's a commercial one and not

628
00:26:17,730 --> 00:26:21,210
that open-source version you know where

629
00:26:21,210 --> 00:26:23,820
all the deprecations his open-source has

630
00:26:23,820 --> 00:26:26,910
a life all right so like I said this is

631
00:26:26,910 --> 00:26:29,700
just a basic machine that I am just

632
00:26:29,700 --> 00:26:31,830
instantiated I don't know anything about

633
00:26:31,830 --> 00:26:33,420
it necessarily other than it meets my

634
00:26:33,420 --> 00:26:34,800
requirements for this new application

635
00:26:34,800 --> 00:26:37,410
that I want to be able to run so I have

636
00:26:37,410 --> 00:26:39,630
this baseline that my security team has

637
00:26:39,630 --> 00:26:41,190
nicely provided for me and the first

638
00:26:41,190 --> 00:26:43,020
thing I do is run this to see how out of

639
00:26:43,020 --> 00:26:45,780
whack all this stuff is so this

640
00:26:45,780 --> 00:26:49,050
particular baseline has how many totals

641
00:26:49,050 --> 00:26:54,480
down here 26 successful controls 27

642
00:26:54,480 --> 00:26:56,730
failures one that skipped made me

643
00:26:56,730 --> 00:26:58,440
because a platform is met and I mismatch

644
00:26:58,440 --> 00:27:01,650
or whatever so I end up with 80 tests I

645
00:27:01,650 --> 00:27:04,380
have 80 successful tests from 45

646
00:27:04,380 --> 00:27:06,690
failures that's just a baseline right

647
00:27:06,690 --> 00:27:09,000
this is a random post that I just booted

648
00:27:09,000 --> 00:27:11,610
and and I know now that I'm starting

649
00:27:11,610 --> 00:27:13,260
with an insecure platform I'm trying to

650
00:27:13,260 --> 00:27:15,450
build my application on sand so this is

651
00:27:15,450 --> 00:27:16,800
automatically not going to meet my

652
00:27:16,800 --> 00:27:19,830
requirements so the thing I can do now

653
00:27:19,830 --> 00:27:24,120
is thanks to the inspect open-source

654
00:27:24,120 --> 00:27:28,200
community is they have then components

655
00:27:28,200 --> 00:27:30,540
that work with these profiles to harden

656
00:27:30,540 --> 00:27:33,179
all these things up so one of them

657
00:27:33,179 --> 00:27:34,979
where I'm going to happen to use a chef

658
00:27:34,979 --> 00:27:36,960
but if you use another tool they're also

659
00:27:36,960 --> 00:27:40,559
provided and it sort of matches up with

660
00:27:40,559 --> 00:27:44,389
the things that are mentioned in the

661
00:27:44,389 --> 00:27:46,830
profile so if you're familiar with chef

662
00:27:46,830 --> 00:27:49,019
we use recipes if you use puppet their

663
00:27:49,019 --> 00:27:50,700
modules who you ansible their play books

664
00:27:50,700 --> 00:27:54,149
but we then have all of these sort of

665
00:27:54,149 --> 00:27:56,429
fixes that can run around on the system

666
00:27:56,429 --> 00:27:57,839
and clean things up right there's

667
00:27:57,839 --> 00:27:59,159
Scrubbing Bubbles they're going to keep

668
00:27:59,159 --> 00:28:02,129
all this stuff cleaned up so that my

669
00:28:02,129 --> 00:28:04,679
baseline requirements will be met and if

670
00:28:04,679 --> 00:28:06,989
you have your own profiles you can also

671
00:28:06,989 --> 00:28:10,409
create your own scripts or modules or

672
00:28:10,409 --> 00:28:13,070
whatever to make sure everyone has a

673
00:28:13,070 --> 00:28:16,440
strong hard place to run all their

674
00:28:16,440 --> 00:28:19,830
applications so I have this stuff in a

675
00:28:19,830 --> 00:28:22,739
little demo here I've already downloaded

676
00:28:22,739 --> 00:28:24,779
it this will all be posted if you're

677
00:28:24,779 --> 00:28:25,950
interested I'm happy to answer questions

678
00:28:25,950 --> 00:28:30,899
later as well so I have a little chef

679
00:28:30,899 --> 00:28:32,849
component then I'm going to use to fix

680
00:28:32,849 --> 00:28:34,559
this thing right so we'll see how it

681
00:28:34,559 --> 00:28:36,450
goes right it's open source they could

682
00:28:36,450 --> 00:28:37,739
have released something this morning cuz

683
00:28:37,739 --> 00:28:40,049
they're all 10 hours ahead of us or

684
00:28:40,049 --> 00:28:41,639
whatever so who knows so we'll see how

685
00:28:41,639 --> 00:28:48,450
it goes so at this point I have a little

686
00:28:48,450 --> 00:28:53,399
piece of chef that I'm going to let it

687
00:28:53,399 --> 00:28:56,748
create some cookbooks for me

688
00:29:03,580 --> 00:29:07,590
and then I'm gonna actually run it

689
00:29:16,070 --> 00:29:23,690
hey licenses hello thank you okay

690
00:29:23,690 --> 00:29:26,360
so while that's running this is going to

691
00:29:26,360 --> 00:29:29,270
go through and match up with all the

692
00:29:29,270 --> 00:29:31,580
tests that were run so 125 or whatever

693
00:29:31,580 --> 00:29:33,350
they are and make sure all the things

694
00:29:33,350 --> 00:29:35,660
that my security team are asking me to

695
00:29:35,660 --> 00:29:38,150
fix have been fixed in an applicable way

696
00:29:38,150 --> 00:29:41,080
right so after this is done hopefully

697
00:29:41,080 --> 00:29:49,280
everything's good right I rerun my

698
00:29:49,280 --> 00:29:51,590
baseline right so I test learn do my

699
00:29:51,590 --> 00:29:53,450
test-driven development right I did my

700
00:29:53,450 --> 00:29:55,340
tests first it failed I'm gonna fix it

701
00:29:55,340 --> 00:29:58,010
and run it again and I'm close much

702
00:29:58,010 --> 00:30:00,110
closer so if you can't quite see the

703
00:30:00,110 --> 00:30:03,860
bottom it's 52 successful controls one

704
00:30:03,860 --> 00:30:04,880
control failure

705
00:30:04,880 --> 00:30:07,370
I've got 124 successful tests in one

706
00:30:07,370 --> 00:30:09,860
failure right so I can scroll through

707
00:30:09,860 --> 00:30:12,920
here and see okay what failed this time

708
00:30:12,920 --> 00:30:15,320
right in this particular case I've got

709
00:30:15,320 --> 00:30:18,170
an all at D requirement that doesn't

710
00:30:18,170 --> 00:30:21,350
pass on this particular platform now I

711
00:30:21,350 --> 00:30:23,450
have a couple of options right I can go

712
00:30:23,450 --> 00:30:26,120
to my security folks and say hey I have

713
00:30:26,120 --> 00:30:28,100
this thing what do you want me to do

714
00:30:28,100 --> 00:30:30,320
with it do I need an extra piece to fix

715
00:30:30,320 --> 00:30:32,810
it is it okay if I skip it for this

716
00:30:32,810 --> 00:30:34,850
particular example right now while I'm

717
00:30:34,850 --> 00:30:36,350
testing this what would you like me to

718
00:30:36,350 --> 00:30:38,000
do and you can actually have a

719
00:30:38,000 --> 00:30:39,890
conversation around the requirements how

720
00:30:39,890 --> 00:30:41,810
applicable they are you know do that

721
00:30:41,810 --> 00:30:44,930
communication and culture part of the

722
00:30:44,930 --> 00:30:48,890
the dev ops wonder that you need to do

723
00:30:48,890 --> 00:30:51,860
oh and then if I'm my security folks I'd

724
00:30:51,860 --> 00:30:53,960
you know what's okay let's ignore that

725
00:30:53,960 --> 00:30:56,180
right now go ahead and skip it on this

726
00:30:56,180 --> 00:30:58,400
profile and we'll work on it for the

727
00:30:58,400 --> 00:31:00,020
next time so I have the ability to

728
00:31:00,020 --> 00:31:01,610
actually skip stuff which is super

729
00:31:01,610 --> 00:31:02,120
helpful

730
00:31:02,120 --> 00:31:04,580
so my pipeline isn't necessarily held up

731
00:31:04,580 --> 00:31:06,560
completely right now I can sort of

732
00:31:06,560 --> 00:31:07,880
ignore this for right now and come back

733
00:31:07,880 --> 00:31:11,210
to it so with that I have the ability to

734
00:31:11,210 --> 00:31:13,400
create new profile so that sort of wrap

735
00:31:13,400 --> 00:31:16,310
around existing profiles and I have one

736
00:31:16,310 --> 00:31:18,920
here that I've already created to sort

737
00:31:18,920 --> 00:31:21,770
of the serve as an example for this so

738
00:31:21,770 --> 00:31:24,020
I've caught one down here called my

739
00:31:24,020 --> 00:31:26,510
hardening right and this is just

740
00:31:26,510 --> 00:31:28,370
basically based off of the

741
00:31:28,370 --> 00:31:32,270
Linux the chef cookbook being called OS

742
00:31:32,270 --> 00:31:34,190
hardening system only name

743
00:31:34,190 --> 00:31:36,500
so my hardening has a couple of

744
00:31:36,500 --> 00:31:38,419
components there's an inspector yamo

745
00:31:38,419 --> 00:31:39,950
file because we're all he animal

746
00:31:39,950 --> 00:31:43,730
engineers now right and I can tell it to

747
00:31:43,730 --> 00:31:46,789
say all right what you're gonna do

748
00:31:46,789 --> 00:31:49,100
requires this Linux baseline that's the

749
00:31:49,100 --> 00:31:50,539
thing that I'm required to be using

750
00:31:50,539 --> 00:31:52,940
right now that we're gonna run first and

751
00:31:52,940 --> 00:31:55,010
all I have to do is say hey go find this

752
00:31:55,010 --> 00:31:57,320
I can give it a number of different

753
00:31:57,320 --> 00:32:00,350
places to go find the thing if I have my

754
00:32:00,350 --> 00:32:04,460
artifact on a mounted drive I can look

755
00:32:04,460 --> 00:32:06,289
for it there this one happens to be in

756
00:32:06,289 --> 00:32:09,020
git or it might be some other URL and it

757
00:32:09,020 --> 00:32:10,789
won't download these things for me which

758
00:32:10,789 --> 00:32:11,960
is pretty awesome because then my

759
00:32:11,960 --> 00:32:13,370
security team can be in the background

760
00:32:13,370 --> 00:32:15,409
sort of updating this thing and I can

761
00:32:15,409 --> 00:32:17,360
just pull down the latest whenever I

762
00:32:17,360 --> 00:32:19,159
need it so I don't necessarily have to

763
00:32:19,159 --> 00:32:21,950
know exactly what version I can just say

764
00:32:21,950 --> 00:32:24,620
go fetch that thing right so I'm

765
00:32:24,620 --> 00:32:26,450
depending on that I'm gonna pull it out

766
00:32:26,450 --> 00:32:29,179
of github but then I want to be able to

767
00:32:29,179 --> 00:32:31,700
skip this naughty thing right now that's

768
00:32:31,700 --> 00:32:37,000
giving me trouble so I look in my

769
00:32:39,429 --> 00:32:41,929
control directory which is where all the

770
00:32:41,929 --> 00:32:45,020
code happens and I've called one skip

771
00:32:45,020 --> 00:32:49,940
audit Dean Darby and this get a little

772
00:32:49,940 --> 00:32:52,820
bigger I'm basically gonna tell the next

773
00:32:52,820 --> 00:32:54,830
time I run in spec I'm gonna say hey you

774
00:32:54,830 --> 00:32:57,140
know what in this profile run everything

775
00:32:57,140 --> 00:32:59,419
from Linux baseline but when you get to

776
00:32:59,419 --> 00:33:02,270
this naughty package o8 just skip it for

777
00:33:02,270 --> 00:33:04,610
now right it's still going to report on

778
00:33:04,610 --> 00:33:06,080
it for me it's gonna let me know that

779
00:33:06,080 --> 00:33:08,059
how many things are doing but I know I

780
00:33:08,059 --> 00:33:10,340
have this documentation here that I can

781
00:33:10,340 --> 00:33:11,840
skip this and I can add comments here if

782
00:33:11,840 --> 00:33:13,700
I need to I can publish this back to

783
00:33:13,700 --> 00:33:15,380
github whatever I need to do so that

784
00:33:15,380 --> 00:33:17,270
everybody on my team knows what's going

785
00:33:17,270 --> 00:33:21,380
on with this right so now I just have to

786
00:33:21,380 --> 00:33:23,899
run this particular version of this

787
00:33:23,899 --> 00:33:26,590
profile

788
00:33:30,550 --> 00:33:33,200
and we'll see how it goes sometimes this

789
00:33:33,200 --> 00:33:35,300
works sometimes there's like some other

790
00:33:35,300 --> 00:33:37,520
thing that pops up last night I got an

791
00:33:37,520 --> 00:33:41,150
entropy error cuz why not right so here

792
00:33:41,150 --> 00:33:42,920
we go now I can actually work with this

793
00:33:42,920 --> 00:33:45,250
thing I've got it through my

794
00:33:45,250 --> 00:33:47,330
requirements it says alright I've got

795
00:33:47,330 --> 00:33:49,490
all my successful controls I've skipped

796
00:33:49,490 --> 00:33:51,740
some stuff that I know about that I can

797
00:33:51,740 --> 00:33:53,930
record for later so now I have this

798
00:33:53,930 --> 00:33:56,390
platform that I basically just pulled

799
00:33:56,390 --> 00:33:58,280
from anywhere it could be anything I

800
00:33:58,280 --> 00:34:00,770
have secured it based on my requirements

801
00:34:00,770 --> 00:34:02,720
and it took a couple of minutes right

802
00:34:02,720 --> 00:34:04,700
it's not a long process

803
00:34:04,700 --> 00:34:06,230
fortunately I'm at the point where I

804
00:34:06,230 --> 00:34:08,060
don't have to change all of these things

805
00:34:08,060 --> 00:34:10,489
by hand I don't have to download a PDF

806
00:34:10,489 --> 00:34:12,649
file and go through it line by line by

807
00:34:12,649 --> 00:34:15,320
line right because it's not 1995 anymore

808
00:34:15,320 --> 00:34:19,190
and now I have a secure platform to do

809
00:34:19,190 --> 00:34:21,080
whatever else I need to do on it for the

810
00:34:21,080 --> 00:34:23,030
next steps so I'm installing my stuff

811
00:34:23,030 --> 00:34:25,010
and working with whatever application

812
00:34:25,010 --> 00:34:26,630
I'm working on I can continue to run

813
00:34:26,630 --> 00:34:28,340
this later right making sure that it

814
00:34:28,340 --> 00:34:30,320
hasn't made any changes to sis cuddle

815
00:34:30,320 --> 00:34:32,120
that it hasn't made any changes to any

816
00:34:32,120 --> 00:34:33,860
of my other device settings anything

817
00:34:33,860 --> 00:34:36,440
else that it might not be sort of poking

818
00:34:36,440 --> 00:34:39,260
around with so it's not in a place where

819
00:34:39,260 --> 00:34:42,050
we're looking at sort of a IDs it's not

820
00:34:42,050 --> 00:34:44,330
a tripwire this is very much proactive

821
00:34:44,330 --> 00:34:46,730
looking at the system in my active

822
00:34:46,730 --> 00:34:48,500
requirements things that I know about in

823
00:34:48,500 --> 00:34:51,350
advance that I want to make controls for

824
00:34:51,350 --> 00:34:54,639
I want to be responsible for I went to

825
00:34:54,639 --> 00:35:00,500
add in at the beginning all right so

826
00:35:00,500 --> 00:35:02,090
since I didn't have an additional step

827
00:35:02,090 --> 00:35:03,920
of things that failed that's super

828
00:35:03,920 --> 00:35:06,860
awesome just never know all right some

829
00:35:06,860 --> 00:35:08,690
resources for you so things to know

830
00:35:08,690 --> 00:35:11,300
about inspect inspect who lives at

831
00:35:11,300 --> 00:35:13,180
inspect IO IO

832
00:35:13,180 --> 00:35:16,280
it also lives at dev - SEC thought I oh

833
00:35:16,280 --> 00:35:18,200
there's additional community information

834
00:35:18,200 --> 00:35:22,160
there there is a discourse rather than a

835
00:35:22,160 --> 00:35:24,170
select channel for this but you can also

836
00:35:24,170 --> 00:35:26,480
join chefs community slack if you'd like

837
00:35:26,480 --> 00:35:27,980
to and I'll post all this stuff and

838
00:35:27,980 --> 00:35:31,040
tweet about it if you'd like to get

839
00:35:31,040 --> 00:35:33,770
additional information off our blog we

840
00:35:33,770 --> 00:35:36,920
try to keep things updated there and we

841
00:35:36,920 --> 00:35:38,630
have a bunch of modules that are all

842
00:35:38,630 --> 00:35:40,460
free on our learning site

843
00:35:40,460 --> 00:35:44,119
one interesting blog post from community

844
00:35:44,119 --> 00:35:46,670
about inspect is a woman named Annie

845
00:35:46,670 --> 00:35:50,630
Hedgepeth she went through inspected a

846
00:35:50,630 --> 00:35:52,460
couple of years ago as a way to get into

847
00:35:52,460 --> 00:35:54,890
tech after being sort of out of the

848
00:35:54,890 --> 00:35:56,869
workforce with her kids for a while so

849
00:35:56,869 --> 00:35:59,270
super interesting look if you're not

850
00:35:59,270 --> 00:36:02,680
super familiar with infrastructure level

851
00:36:02,680 --> 00:36:06,109
hacking Linux sort of things she takes a

852
00:36:06,109 --> 00:36:08,329
sort of journey through what she did to

853
00:36:08,329 --> 00:36:10,250
sort of get acclimated to the

854
00:36:10,250 --> 00:36:11,809
environment and the things that inspect

855
00:36:11,809 --> 00:36:13,220
were giving to her and it's super

856
00:36:13,220 --> 00:36:14,930
approachable so just a really nice set

857
00:36:14,930 --> 00:36:18,740
of blog post that she did Danske Bank is

858
00:36:18,740 --> 00:36:21,140
one of our newer white papers on the

859
00:36:21,140 --> 00:36:23,380
commercial inspect side that they have

860
00:36:23,380 --> 00:36:25,609
been using this and a number of our

861
00:36:25,609 --> 00:36:27,380
financial institution customers have

862
00:36:27,380 --> 00:36:29,869
done that as well if you Ferb are clays

863
00:36:29,869 --> 00:36:32,690
they have a couple of things on YouTube

864
00:36:32,690 --> 00:36:34,579
about what they've been using inspect

865
00:36:34,579 --> 00:36:37,359
for over the years the demos up on my

866
00:36:37,359 --> 00:36:42,829
github as well so thank you very much

867
00:36:42,829 --> 00:36:44,990
for your kind attention so we have a few

868
00:36:44,990 --> 00:36:49,940
minutes maybe four questions just go

869
00:36:49,940 --> 00:36:52,540
right here in the front

870
00:37:01,990 --> 00:37:09,070
yeah yeah uh in this case it is actually

871
00:37:09,070 --> 00:37:10,420
sleeping the test in case it is

872
00:37:10,420 --> 00:37:13,359
something that would be damaging or

873
00:37:13,359 --> 00:37:14,740
potentially wrong for the actual

874
00:37:14,740 --> 00:37:17,770
platform so it is actually not going to

875
00:37:17,770 --> 00:37:19,990
investigate that component this time

876
00:37:19,990 --> 00:37:22,020
around so it just ignores it completely

877
00:37:22,020 --> 00:37:25,500
this one over here

878
00:37:45,030 --> 00:37:48,199
[Music]

879
00:37:55,960 --> 00:37:58,570
yes and no so he's asking about

880
00:37:58,570 --> 00:38:02,230
privileges I love the actual runtime and

881
00:38:02,230 --> 00:38:05,000
not escalating through the actual tool

882
00:38:05,000 --> 00:38:07,910
right if there would be a problem and we

883
00:38:07,910 --> 00:38:11,030
the the unfortunate sort of issue with

884
00:38:11,030 --> 00:38:13,130
that is because so much especially on

885
00:38:13,130 --> 00:38:15,050
Linux is actually privileged at read

886
00:38:15,050 --> 00:38:17,750
like to actually test most of the common

887
00:38:17,750 --> 00:38:18,980
things you need to actually have

888
00:38:18,980 --> 00:38:22,280
privileged access so um so what you saw

889
00:38:22,280 --> 00:38:24,200
I was running into studio and that sort

890
00:38:24,200 --> 00:38:25,880
of thing there isn't some I don't think

891
00:38:25,880 --> 00:38:29,060
there's I haven't seen them talk about

892
00:38:29,060 --> 00:38:31,340
actually like locking things down to say

893
00:38:31,340 --> 00:38:32,750
you're only allowed to do it would be an

894
00:38:32,750 --> 00:38:35,750
interesting feature and maybe something

895
00:38:35,750 --> 00:38:37,910
if folks are into contributing like that

896
00:38:37,910 --> 00:38:39,500
would be something awesome to look at

897
00:38:39,500 --> 00:38:47,270
absolutely one more so if you can have a

898
00:38:47,270 --> 00:38:49,550
desired state of the machine with chef

899
00:38:49,550 --> 00:38:51,530
ansible puppet what's the point of

900
00:38:51,530 --> 00:38:53,930
running inspect at all if I can run that

901
00:38:53,930 --> 00:38:56,420
day we have that desired State

902
00:38:56,420 --> 00:38:58,670
yeah so part of it comes down to like

903
00:38:58,670 --> 00:39:00,380
who's responsibility all this stuff is

904
00:39:00,380 --> 00:39:02,900
right so and you know you figure out my

905
00:39:02,900 --> 00:39:05,300
whoever's owning sort of the

906
00:39:05,300 --> 00:39:07,640
infrastructure code like that's usually

907
00:39:07,640 --> 00:39:09,530
a team and we've found this with our

908
00:39:09,530 --> 00:39:11,330
customers that that's a team that sort

909
00:39:11,330 --> 00:39:14,720
of works in one area of their influence

910
00:39:14,720 --> 00:39:16,430
right so they're working on the

911
00:39:16,430 --> 00:39:18,920
infrastructure code they're running the

912
00:39:18,920 --> 00:39:20,420
applications those sorts of things and

913
00:39:20,420 --> 00:39:22,430
like the previous speaker mentioned like

914
00:39:22,430 --> 00:39:24,560
there's not always enough security folks

915
00:39:24,560 --> 00:39:26,360
are they're certainly not embedded with

916
00:39:26,360 --> 00:39:28,730
those teams so if you have a place where

917
00:39:28,730 --> 00:39:31,310
you have a lot of security folks in

918
00:39:31,310 --> 00:39:33,230
other places that have a lot of other

919
00:39:33,230 --> 00:39:34,580
requirements or you want to make sure

920
00:39:34,580 --> 00:39:36,710
that globally across all of your

921
00:39:36,710 --> 00:39:38,150
applications regardless of whether

922
00:39:38,150 --> 00:39:40,430
you've got a brand-new fancy DevOps team

923
00:39:40,430 --> 00:39:42,020
on here these sort of legacy

924
00:39:42,020 --> 00:39:43,760
infrastructure and from janu years over

925
00:39:43,760 --> 00:39:45,680
here you have a place where all this

926
00:39:45,680 --> 00:39:47,390
stuff sort of combines and everybody can

927
00:39:47,390 --> 00:39:49,370
share it so that's sort of one of the

928
00:39:49,370 --> 00:39:52,040
places where inspect really does a the

929
00:39:52,040 --> 00:39:54,470
big job is where it's a place where

930
00:39:54,470 --> 00:39:56,099
everybody is combining all their know

931
00:39:56,099 --> 00:39:59,699
into one place anything else so good

932
00:39:59,699 --> 00:40:00,950
Thank You Francois

933
00:40:00,950 --> 00:40:06,390
[Applause]

934
00:40:06,390 --> 00:40:08,450
you

