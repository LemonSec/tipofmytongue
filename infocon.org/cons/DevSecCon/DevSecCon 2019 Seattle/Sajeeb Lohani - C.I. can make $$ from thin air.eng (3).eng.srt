1
00:00:00,030 --> 00:00:02,970
so sagiv is gonna talk about how see I

2
00:00:02,970 --> 00:00:05,190
can make dollars from thin air

3
00:00:05,190 --> 00:00:07,170
I think I'll retire and just do this in

4
00:00:07,170 --> 00:00:09,269
a minute so please give it up mr. deed

5
00:00:09,269 --> 00:00:17,270
oh hello can everyone hear me okay

6
00:00:17,270 --> 00:00:21,150
sleep well my name is Sergio honey I'm

7
00:00:21,150 --> 00:00:24,269
from Melbourne Australia so I flew in

8
00:00:24,269 --> 00:00:27,359
about 26 hours to get here and yeah

9
00:00:27,359 --> 00:00:29,730
basically I work as a senior red teamer

10
00:00:29,730 --> 00:00:32,488
and a senior pen tester and pretty sick

11
00:00:32,488 --> 00:00:36,180
surprise and yeah it's pretty cool I get

12
00:00:36,180 --> 00:00:37,980
to go around doing everything that I

13
00:00:37,980 --> 00:00:39,809
really enjoy the security side of things

14
00:00:39,809 --> 00:00:41,879
so I'm actually on the other side of the

15
00:00:41,879 --> 00:00:42,210
fence

16
00:00:42,210 --> 00:00:44,789
I'm the offense and I go and attack

17
00:00:44,789 --> 00:00:46,770
everything break everything and today

18
00:00:46,770 --> 00:00:48,360
we're gonna talk a bit about how we can

19
00:00:48,360 --> 00:00:51,690
make offense come into security and how

20
00:00:51,690 --> 00:00:53,340
we can actually use the offensive

21
00:00:53,340 --> 00:00:57,120
mindset to go and secure things too so I

22
00:00:57,120 --> 00:00:58,680
like to do my talks in a bit of a

23
00:00:58,680 --> 00:01:00,270
different way though I like to give

24
00:01:00,270 --> 00:01:01,800
everyone a bit of an incentive and try

25
00:01:01,800 --> 00:01:04,110
to bring people into the talk so I'm

26
00:01:04,110 --> 00:01:05,280
gonna do a bit of a giveaway today

27
00:01:05,280 --> 00:01:08,010
they're gonna be 4 questions inside the

28
00:01:08,010 --> 00:01:10,700
talk so pay attention I'm quite serious

29
00:01:10,700 --> 00:01:13,590
for questions and if you can answer any

30
00:01:13,590 --> 00:01:15,420
of the questions the first person to

31
00:01:15,420 --> 00:01:17,430
answer it gets a one month subscription

32
00:01:17,430 --> 00:01:20,189
to pentester Labs now you might not know

33
00:01:20,189 --> 00:01:22,860
what pentester Labs is it's basically a

34
00:01:22,860 --> 00:01:25,710
tool for teaching pen testing it's my

35
00:01:25,710 --> 00:01:27,119
favorite tool and was actually written

36
00:01:27,119 --> 00:01:30,810
by my first boss and it's really really

37
00:01:30,810 --> 00:01:32,400
cool because it'll give you practical

38
00:01:32,400 --> 00:01:34,439
knowledge about how to attack and it'll

39
00:01:34,439 --> 00:01:36,750
give you write-ups for two so it's

40
00:01:36,750 --> 00:01:40,409
actually really good so to get started

41
00:01:40,409 --> 00:01:42,390
we're gonna talk a bit about the story

42
00:01:42,390 --> 00:01:45,630
how I came up with this subject now I've

43
00:01:45,630 --> 00:01:47,399
actually been out of uni for about two

44
00:01:47,399 --> 00:01:52,680
years I'm 25 and I well I really really

45
00:01:52,680 --> 00:01:55,619
do like to eat food and drink surprise

46
00:01:55,619 --> 00:02:00,090
and we basically will I have a favorite

47
00:02:00,090 --> 00:02:02,520
pub in Melbourne called the Sherlock

48
00:02:02,520 --> 00:02:04,469
Holmes pub it's actually a really nice

49
00:02:04,469 --> 00:02:07,320
pub it's a British you know layout you

50
00:02:07,320 --> 00:02:11,120
go down a set of stairs it's dark under

51
00:02:11,120 --> 00:02:12,920
and your phone doesn't work which is

52
00:02:12,920 --> 00:02:14,660
even better because now you're secluded

53
00:02:14,660 --> 00:02:15,560
and you don't have to worry about

54
00:02:15,560 --> 00:02:16,310
anything

55
00:02:16,310 --> 00:02:18,610
so I went there with my mentor Jeff and

56
00:02:18,610 --> 00:02:21,440
his best friend Mark who's a security

57
00:02:21,440 --> 00:02:23,989
architect and we basically sat down and

58
00:02:23,989 --> 00:02:26,599
I go talking saying okay I want to buy a

59
00:02:26,599 --> 00:02:28,580
house soon but buying a house in

60
00:02:28,580 --> 00:02:29,959
Melbourne in the eastern suburbs where

61
00:02:29,959 --> 00:02:31,160
it's actually safe you're not gonna get

62
00:02:31,160 --> 00:02:34,250
stabbed is pretty hard I mean a house

63
00:02:34,250 --> 00:02:36,019
costs probably about a million bucks

64
00:02:36,019 --> 00:02:39,260
which is a 25 year old it is not easy to

65
00:02:39,260 --> 00:02:41,840
get sir surprise surprise we thought

66
00:02:41,840 --> 00:02:43,310
we'd come up with better ways to make

67
00:02:43,310 --> 00:02:45,980
some money so we took a bit of a break

68
00:02:45,980 --> 00:02:49,940
came back to it and obviously alongside

69
00:02:49,940 --> 00:02:52,280
any kind of drinking session comes a bit

70
00:02:52,280 --> 00:02:55,220
of betting so anyone who comes up with

71
00:02:55,220 --> 00:02:56,989
the best concept was basically gonna be

72
00:02:56,989 --> 00:02:59,690
the one who got shouted drinks awesome

73
00:02:59,690 --> 00:03:03,260
more drinks more food sir start of the

74
00:03:03,260 --> 00:03:05,599
competition one week break everyone came

75
00:03:05,599 --> 00:03:09,620
up with their ideas so we started off

76
00:03:09,620 --> 00:03:12,319
with Jeff's idea why don't we write a

77
00:03:12,319 --> 00:03:14,239
malicious XSS paillards so running

78
00:03:14,239 --> 00:03:16,190
JavaScript to run in other people's

79
00:03:16,190 --> 00:03:18,769
browsers make a popular website or we

80
00:03:18,769 --> 00:03:20,239
could use a stored cross-site scripting

81
00:03:20,239 --> 00:03:22,760
bug and go shove it out to everyone and

82
00:03:22,760 --> 00:03:25,310
my bitcoins through their browsers it

83
00:03:25,310 --> 00:03:27,470
works it's great however it'll get you

84
00:03:27,470 --> 00:03:30,829
arrested very quickly so Marc came up

85
00:03:30,829 --> 00:03:31,790
with the fact that why don't we just

86
00:03:31,790 --> 00:03:33,980
write some ransomware very easy there's

87
00:03:33,980 --> 00:03:35,120
actually a few software's that are

88
00:03:35,120 --> 00:03:39,560
generated for you but in actual fact yet

89
00:03:39,560 --> 00:03:40,819
again illegal and will get you arrested

90
00:03:40,819 --> 00:03:44,209
extremely quickly so the next thing is

91
00:03:44,209 --> 00:03:46,000
why don't we pop the internet a oh

92
00:03:46,000 --> 00:03:48,109
by the way I'm Australian so I will

93
00:03:48,109 --> 00:03:52,190
swear a lot sorry the answer to that is

94
00:03:52,190 --> 00:03:54,230
because you're gonna get arrested yet

95
00:03:54,230 --> 00:03:56,690
again very very easy to get arrested in

96
00:03:56,690 --> 00:04:00,500
InfoSec so actually let's start off with

97
00:04:00,500 --> 00:04:02,959
this first giveaway question what's the

98
00:04:02,959 --> 00:04:04,579
name of my favorite bar can anyone

99
00:04:04,579 --> 00:04:07,579
answer that sure sweet can you talk to

100
00:04:07,579 --> 00:04:08,630
me after and I'll give you a

101
00:04:08,630 --> 00:04:13,579
subscription so the basis of my talk

102
00:04:13,579 --> 00:04:15,859
today is what I ended up coming up with

103
00:04:15,859 --> 00:04:18,909
as a solution for how to make money and

104
00:04:18,909 --> 00:04:23,360
let's just say it works full disclaimer

105
00:04:23,360 --> 00:04:24,360
there

106
00:04:24,360 --> 00:04:26,219
started off by saying you do not have

107
00:04:26,219 --> 00:04:28,110
permission to do this I did have written

108
00:04:28,110 --> 00:04:30,090
permission unless you have written

109
00:04:30,090 --> 00:04:31,740
permission do not try any of this at

110
00:04:31,740 --> 00:04:35,099
home also keep an eye out for the terms

111
00:04:35,099 --> 00:04:37,680
of services just because it doesn't say

112
00:04:37,680 --> 00:04:39,930
anything specifically it can be quite

113
00:04:39,930 --> 00:04:42,330
you know conclusive with legal terms

114
00:04:42,330 --> 00:04:45,569
which I don't understand but yeah just

115
00:04:45,569 --> 00:04:47,310
make sure you get a good look at things

116
00:04:47,310 --> 00:04:51,060
before you go crazy so what's in this

117
00:04:51,060 --> 00:04:53,219
talk for you one we're gonna talk about

118
00:04:53,219 --> 00:04:54,870
how to make money true we're gonna

119
00:04:54,870 --> 00:04:56,789
identify different attack scenarios and

120
00:04:56,789 --> 00:04:58,590
three we're gonna try to figure out how

121
00:04:58,590 --> 00:05:00,810
to save money so in the end everything

122
00:05:00,810 --> 00:05:05,580
is about money so just as a quick

123
00:05:05,580 --> 00:05:07,919
rundown does everyone know what a CI is

124
00:05:07,919 --> 00:05:10,469
I assume you probably know that better

125
00:05:10,469 --> 00:05:13,110
than I do basically just for anyone who

126
00:05:13,110 --> 00:05:14,340
doesn't it's a continuous integration

127
00:05:14,340 --> 00:05:16,620
server so it's integrating different

128
00:05:16,620 --> 00:05:18,419
parts of code large blocks of it

129
00:05:18,419 --> 00:05:20,099
together maybe have three or four

130
00:05:20,099 --> 00:05:23,250
different development teams we fuse

131
00:05:23,250 --> 00:05:25,949
everything together in one place and run

132
00:05:25,949 --> 00:05:27,120
your different tests so you could have

133
00:05:27,120 --> 00:05:29,039
unit test checking you know if integers

134
00:05:29,039 --> 00:05:30,300
are correct if you're getting the right

135
00:05:30,300 --> 00:05:32,550
values if you handle weird input

136
00:05:32,550 --> 00:05:34,409
correctly and things like that you could

137
00:05:34,409 --> 00:05:36,120
also have different standard checks you

138
00:05:36,120 --> 00:05:38,039
could have security inside it you could

139
00:05:38,039 --> 00:05:39,569
have things like static code analysis

140
00:05:39,569 --> 00:05:42,599
checks etc etcetera but my favorite part

141
00:05:42,599 --> 00:05:44,129
of this is actually you can do multiple

142
00:05:44,129 --> 00:05:46,560
environment checks so as a security

143
00:05:46,560 --> 00:05:48,449
professional we have to write tools that

144
00:05:48,449 --> 00:05:50,039
runs for everyone because security

145
00:05:50,039 --> 00:05:53,279
people are dumb they go ahead and try to

146
00:05:53,279 --> 00:05:55,469
run everything on any system they have

147
00:05:55,469 --> 00:05:57,960
and so we have to be compatible with

148
00:05:57,960 --> 00:05:59,759
Macs we have to be compatible with

149
00:05:59,759 --> 00:06:00,870
different types of Linux and

150
00:06:00,870 --> 00:06:03,599
distributions God and then we also have

151
00:06:03,599 --> 00:06:06,029
to be compatible with Windows which is

152
00:06:06,029 --> 00:06:10,680
the nightmare and yeah so how does this

153
00:06:10,680 --> 00:06:14,460
actually make us money now does everyone

154
00:06:14,460 --> 00:06:18,029
know what a bug bounty is what a few

155
00:06:18,029 --> 00:06:20,310
nods been up to many cool so bug bounty

156
00:06:20,310 --> 00:06:22,439
is basically companies come and pay you

157
00:06:22,439 --> 00:06:25,680
to go and find bugs in their systems but

158
00:06:25,680 --> 00:06:27,870
these are security vulnerabilities so a

159
00:06:27,870 --> 00:06:30,210
perfect example actually is Julian

160
00:06:30,210 --> 00:06:32,580
Julian's from Mozilla Mozilla pays me a

161
00:06:32,580 --> 00:06:34,649
fair bit of money to go and find

162
00:06:34,649 --> 00:06:36,479
security flaws as soon as I find one

163
00:06:36,479 --> 00:06:38,160
they pay me three four

164
00:06:38,160 --> 00:06:39,990
five grands straight away no questions

165
00:06:39,990 --> 00:06:43,560
asked - for not disclosing the

166
00:06:43,560 --> 00:06:45,050
vulnerability to the public and

167
00:06:45,050 --> 00:06:47,040
responsibly giving it to them so they

168
00:06:47,040 --> 00:06:48,000
can go and fix it

169
00:06:48,000 --> 00:06:50,570
it's a great way of getting cheap labor

170
00:06:50,570 --> 00:06:53,220
very quickly from thousands of people

171
00:06:53,220 --> 00:06:56,070
but in a smart manner because I mean if

172
00:06:56,070 --> 00:06:58,620
you're smart enough to get it well you

173
00:06:58,620 --> 00:07:00,080
just made some money very very quickly

174
00:07:00,080 --> 00:07:02,730
so we're gonna use bug bounties

175
00:07:02,730 --> 00:07:05,280
initially to make some money you can

176
00:07:05,280 --> 00:07:07,530
actually do things like this now this is

177
00:07:07,530 --> 00:07:09,480
one of my favorite platforms and my

178
00:07:09,480 --> 00:07:10,710
favorite one is actually bugcrowd

179
00:07:10,710 --> 00:07:12,510
because I'm about crowd ambassador in

180
00:07:12,510 --> 00:07:14,670
Melbourne but my second favorite is

181
00:07:14,670 --> 00:07:16,950
hacker one hacker one is really cool

182
00:07:16,950 --> 00:07:19,170
because it allows you to publicly post

183
00:07:19,170 --> 00:07:21,300
out vulnerabilities but it also pop on

184
00:07:21,300 --> 00:07:22,710
layers of encryption to make sure that

185
00:07:22,710 --> 00:07:24,450
no one else can see it until it's

186
00:07:24,450 --> 00:07:27,300
publicly disclosed so this one was

187
00:07:27,300 --> 00:07:28,950
actually a vulnerability that a guy

188
00:07:28,950 --> 00:07:31,770
found which is basically going into the

189
00:07:31,770 --> 00:07:34,110
Travis CI logs and finding github

190
00:07:34,110 --> 00:07:36,750
personal targets so this gives you full

191
00:07:36,750 --> 00:07:38,690
access to a person's github account

192
00:07:38,690 --> 00:07:40,710
depending on what type of tokens they

193
00:07:40,710 --> 00:07:42,870
are obviously but in this case he had

194
00:07:42,870 --> 00:07:46,020
push push access pull access and

195
00:07:46,020 --> 00:07:47,480
everything private repositories

196
00:07:47,480 --> 00:07:49,470
inclusive of things within the hacker

197
00:07:49,470 --> 00:07:51,950
one organization which made it very very

198
00:07:51,950 --> 00:07:56,130
very scary hacker one straight away paid

199
00:07:56,130 --> 00:07:59,580
out two thousand bucks then you can also

200
00:07:59,580 --> 00:08:01,800
look at automatic automatic I believe

201
00:08:01,800 --> 00:08:04,919
are the makers of wordpress.com don't

202
00:08:04,919 --> 00:08:05,520
quote me on that

203
00:08:05,520 --> 00:08:09,330
and basically yet again Travis CI logs

204
00:08:09,330 --> 00:08:12,390
open to the public it goes out and they

205
00:08:12,390 --> 00:08:14,850
have to pay 500 bucks because someone

206
00:08:14,850 --> 00:08:17,150
couldn't handle their tokens probably

207
00:08:17,150 --> 00:08:20,280
yet again in this case it was slack

208
00:08:20,280 --> 00:08:22,110
channels so someone put up their slack

209
00:08:22,110 --> 00:08:25,680
tokens and that got leaked grab taxi

210
00:08:25,680 --> 00:08:27,990
paid out seven thousand dollars for this

211
00:08:27,990 --> 00:08:30,660
it's pretty awesome and yet again

212
00:08:30,660 --> 00:08:32,729
another github token leaked from

213
00:08:32,729 --> 00:08:37,979
snapchat and this was worth $15,000 I do

214
00:08:37,979 --> 00:08:41,099
not make that much yet sir that is a

215
00:08:41,099 --> 00:08:42,599
fair bit of money for a single day's

216
00:08:42,599 --> 00:08:47,940
finding so giveaway number two what was

217
00:08:47,940 --> 00:08:51,060
the name of the bug bounty platform

218
00:08:51,060 --> 00:08:54,730
wrong well is it yep cool so come and

219
00:08:54,730 --> 00:08:58,480
see me later and yeah so moving on

220
00:08:58,480 --> 00:09:00,730
basically we've identified one way of

221
00:09:00,730 --> 00:09:02,320
making money but now we're gonna look at

222
00:09:02,320 --> 00:09:04,899
other ways of making money through maybe

223
00:09:04,899 --> 00:09:07,630
oh by the way anything that we do here

224
00:09:07,630 --> 00:09:10,089
the investment we say it's making money

225
00:09:10,089 --> 00:09:11,170
out of thin air but you do have some

226
00:09:11,170 --> 00:09:13,360
investment you need to have a laptop in

227
00:09:13,360 --> 00:09:15,850
the internet but I assume everyone does

228
00:09:15,850 --> 00:09:18,130
have that in this case now we're gonna

229
00:09:18,130 --> 00:09:22,029
look at Travis so before we get into

230
00:09:22,029 --> 00:09:23,440
anything else we're gonna look at threat

231
00:09:23,440 --> 00:09:25,990
modeling why threat modeling or fYI

232
00:09:25,990 --> 00:09:27,970
people here will definitely no threat

233
00:09:27,970 --> 00:09:31,029
modeling better than I do I am a full

234
00:09:31,029 --> 00:09:33,190
and through red teamer I don't know this

235
00:09:33,190 --> 00:09:36,279
stuff well however I try my best so

236
00:09:36,279 --> 00:09:37,990
threat modeling questions I like to ask

237
00:09:37,990 --> 00:09:39,790
four of them what are we actually

238
00:09:39,790 --> 00:09:44,410
building what can go wrong in it how can

239
00:09:44,410 --> 00:09:46,540
we actually go about making it better

240
00:09:46,540 --> 00:09:51,160
and did we actually do a good job so

241
00:09:51,160 --> 00:09:53,830
first let's look at Travis CI what are

242
00:09:53,830 --> 00:09:55,630
you building here we start off with a

243
00:09:55,630 --> 00:09:57,730
development environment we try to figure

244
00:09:57,730 --> 00:09:59,680
out what we're actually building we push

245
00:09:59,680 --> 00:10:02,800
it to github see how it goes everything

246
00:10:02,800 --> 00:10:04,990
goes well it goes fine

247
00:10:04,990 --> 00:10:07,140
no conflicts go straight to Travis CI

248
00:10:07,140 --> 00:10:10,000
Travis CI builds everything puts it all

249
00:10:10,000 --> 00:10:12,820
together sees if it passes the checks it

250
00:10:12,820 --> 00:10:15,730
does awesome pushes it to production job

251
00:10:15,730 --> 00:10:18,160
done pretty simple workflow I assume

252
00:10:18,160 --> 00:10:19,959
that's like the most baseline thing you

253
00:10:19,959 --> 00:10:23,079
can have now why are we going off to

254
00:10:23,079 --> 00:10:25,329
Travis CI I mean this circle CI there's

255
00:10:25,329 --> 00:10:26,649
Jenkins there's a lot of different

256
00:10:26,649 --> 00:10:28,480
things it's because Travis CI is

257
00:10:28,480 --> 00:10:30,940
actually really good software and

258
00:10:30,940 --> 00:10:33,910
they're extremely generous they give out

259
00:10:33,910 --> 00:10:36,700
free subscriptions to everyone so anyone

260
00:10:36,700 --> 00:10:39,190
who has a github account and has open

261
00:10:39,190 --> 00:10:41,200
source projects can get Travis CI for

262
00:10:41,200 --> 00:10:43,630
free unlimited number of repositories

263
00:10:43,630 --> 00:10:46,149
unlimited number of commits so you can

264
00:10:46,149 --> 00:10:47,770
do a commit a second and they'll still

265
00:10:47,770 --> 00:10:50,170
process it and the cool thing that not

266
00:10:50,170 --> 00:10:51,520
many people know about which we found

267
00:10:51,520 --> 00:10:54,010
our testing is it actually has 50 minute

268
00:10:54,010 --> 00:10:56,920
build times so you can essentially run a

269
00:10:56,920 --> 00:10:59,680
container for 50 minutes after which it

270
00:10:59,680 --> 00:11:00,279
will get it

271
00:11:00,279 --> 00:11:03,730
well terminated so

272
00:11:03,730 --> 00:11:06,970
how can we actually abuse this this is

273
00:11:06,970 --> 00:11:09,370
basically giving us free CPU cycles with

274
00:11:09,370 --> 00:11:11,350
bandwidth which is awesome because I

275
00:11:11,350 --> 00:11:13,060
don't know if you guys know how bad

276
00:11:13,060 --> 00:11:15,610
Australia is but Australia's internet

277
00:11:15,610 --> 00:11:17,589
speeds are abysmal where one of we're

278
00:11:17,589 --> 00:11:20,019
actually worse than a lot of third-world

279
00:11:20,019 --> 00:11:22,839
countries so for a bit this is actually

280
00:11:22,839 --> 00:11:24,970
how I sped up my internet pass it

281
00:11:24,970 --> 00:11:27,120
through a container job done don't care

282
00:11:27,120 --> 00:11:30,310
so what we can do here is we can use

283
00:11:30,310 --> 00:11:32,019
containers to leak certain information

284
00:11:32,019 --> 00:11:35,560
about a server we can go ahead and use

285
00:11:35,560 --> 00:11:38,800
it as a DDoS node so put up say a

286
00:11:38,800 --> 00:11:40,779
hundred different containers and attack

287
00:11:40,779 --> 00:11:42,699
one single server really really quickly

288
00:11:42,699 --> 00:11:45,190
and hopefully take it down we can sell

289
00:11:45,190 --> 00:11:47,170
that as a service we can use it as a

290
00:11:47,170 --> 00:11:49,029
command and control server so putting

291
00:11:49,029 --> 00:11:51,100
you know one single server up

292
00:11:51,100 --> 00:11:52,209
controlling a whole bunch of other

293
00:11:52,209 --> 00:11:54,459
servers and it terminates after 50

294
00:11:54,459 --> 00:11:56,079
minutes after which another one comes up

295
00:11:56,079 --> 00:11:58,329
and it controls all the other servers

296
00:11:58,329 --> 00:11:59,230
that you're doing so you could

297
00:11:59,230 --> 00:12:01,630
hypothetically host a botnet with it you

298
00:12:01,630 --> 00:12:03,579
could do distribute a Bitcoin mining so

299
00:12:03,579 --> 00:12:04,990
you're actually going through and mining

300
00:12:04,990 --> 00:12:06,970
bitcoins for 50 minutes on each

301
00:12:06,970 --> 00:12:09,399
container do 100 commits now you have 50

302
00:12:09,399 --> 00:12:11,230
nodes doing Bitcoin mining for you for

303
00:12:11,230 --> 00:12:14,620
free and lost since I'm a pen tester

304
00:12:14,620 --> 00:12:16,720
postured cracking you have no clue how

305
00:12:16,720 --> 00:12:18,639
many times we get password hashes inside

306
00:12:18,639 --> 00:12:21,880
a pen test we regularly get them and we

307
00:12:21,880 --> 00:12:23,500
have to spend a lot of money to go and

308
00:12:23,500 --> 00:12:25,149
actually crack each of these passwords

309
00:12:25,149 --> 00:12:27,970
so this is a cheap and easy way of doing

310
00:12:27,970 --> 00:12:31,180
that push up a commit let the container

311
00:12:31,180 --> 00:12:33,660
actually deal with it nice and easy so

312
00:12:33,660 --> 00:12:36,699
this is basically free CPU cycles which

313
00:12:36,699 --> 00:12:40,420
implies a supercomputer pretty much in

314
00:12:40,420 --> 00:12:42,279
like the most loose terms possible but

315
00:12:42,279 --> 00:12:43,990
you can spin up your own supercomputer

316
00:12:43,990 --> 00:12:47,199
for free thanks to Travis CI and now

317
00:12:47,199 --> 00:12:48,220
we're actually going to go through a

318
00:12:48,220 --> 00:12:50,589
little bit of a recorded demo heavily

319
00:12:50,589 --> 00:12:54,430
edited to be very honest of what we what

320
00:12:54,430 --> 00:12:56,139
we can actually do with one single

321
00:12:56,139 --> 00:12:59,589
commit and one single container so here

322
00:12:59,589 --> 00:13:01,600
we go we start off with an ec2 instance

323
00:13:01,600 --> 00:13:04,690
Apache 2 running very simple come over

324
00:13:04,690 --> 00:13:07,120
to github and you can see I have a

325
00:13:07,120 --> 00:13:08,980
Python script which literally just opens

326
00:13:08,980 --> 00:13:11,529
up a thousand socket connections I make

327
00:13:11,529 --> 00:13:15,689
a change to trigger Travis CI

328
00:13:15,999 --> 00:13:22,989
and I go and reload Travis CI it's

329
00:13:22,989 --> 00:13:26,229
running takes ages and there you go it's

330
00:13:26,229 --> 00:13:28,199
opened up a thousand socket connections

331
00:13:28,199 --> 00:13:30,999
now I go and check my server to see

332
00:13:30,999 --> 00:13:33,309
what's going on and my servers dead so

333
00:13:33,309 --> 00:13:35,559
one single commit one single container

334
00:13:35,559 --> 00:13:40,359
took down a micro ec2 instance nice and

335
00:13:40,359 --> 00:13:43,569
easy now imagine doing that spinning up

336
00:13:43,569 --> 00:13:45,459
a million of them against something like

337
00:13:45,459 --> 00:13:48,189
github someone would buy that service

338
00:13:48,189 --> 00:13:51,039
he'll get lab probably would and you've

339
00:13:51,039 --> 00:13:54,189
got a service going nice and easy so

340
00:13:54,189 --> 00:13:55,629
basically that's making money out of

341
00:13:55,629 --> 00:13:57,579
thin air in a very very simple and easy

342
00:13:57,579 --> 00:14:01,599
concept so we can make it through

343
00:14:01,599 --> 00:14:03,039
bounties we can make it through DDoS

344
00:14:03,039 --> 00:14:03,879
saying we can make it through

345
00:14:03,879 --> 00:14:05,979
distributed Bitcoin mining really really

346
00:14:05,979 --> 00:14:09,699
really easy but so I basically what

347
00:14:09,699 --> 00:14:12,279
happened was I went to my friends and

348
00:14:12,279 --> 00:14:15,399
said this is exactly what I can do and

349
00:14:15,399 --> 00:14:16,959
this is how I can make money really

350
00:14:16,959 --> 00:14:18,819
really quickly and they said that's

351
00:14:18,819 --> 00:14:19,359
awesome

352
00:14:19,359 --> 00:14:22,209
but since Mark is a security architect

353
00:14:22,209 --> 00:14:24,639
his first thing is how are you gonna fix

354
00:14:24,639 --> 00:14:26,859
it he'll buy me another round of drinks

355
00:14:26,859 --> 00:14:28,599
if I can go and fix each of these issues

356
00:14:28,599 --> 00:14:32,099
turns out fixing them it's not that easy

357
00:14:32,099 --> 00:14:34,179
especially when you're an attacker by

358
00:14:34,179 --> 00:14:38,289
you know mindset extremely hard so I

359
00:14:38,289 --> 00:14:40,089
went ahead and actually started learning

360
00:14:40,089 --> 00:14:41,979
about threat modeling which is a really

361
00:14:41,979 --> 00:14:45,159
cool concept basically um there's a guy

362
00:14:45,159 --> 00:14:47,079
in Marcos offed I think who came up with

363
00:14:47,079 --> 00:14:50,619
an acronym called stride and basically

364
00:14:50,619 --> 00:14:52,089
we're going to go through what stride is

365
00:14:52,089 --> 00:14:54,970
and try to go and identify things that

366
00:14:54,970 --> 00:14:58,239
can go wrong and how we can fix them so

367
00:14:58,239 --> 00:15:00,699
stride stands for spoofing tampering

368
00:15:00,699 --> 00:15:02,470
repudiation information gathering

369
00:15:02,470 --> 00:15:05,470
certain information disclosure

370
00:15:05,470 --> 00:15:07,149
denial of service and escalation of

371
00:15:07,149 --> 00:15:08,499
privileges so we're going to go through

372
00:15:08,499 --> 00:15:10,239
each and every one of that acronym and

373
00:15:10,239 --> 00:15:12,729
see what we can do so what can go wrong

374
00:15:12,729 --> 00:15:16,089
in spoofing we can pretend to be someone

375
00:15:16,089 --> 00:15:17,919
else so this could be different levels

376
00:15:17,919 --> 00:15:20,049
of pretending we could pretend to be

377
00:15:20,049 --> 00:15:23,409
Travis CI so hypothetically spin up a

378
00:15:23,409 --> 00:15:25,029
company that looks exactly that Travis

379
00:15:25,029 --> 00:15:27,810
CI pretend to be the company themselves

380
00:15:27,810 --> 00:15:30,060
and you know do any nefarious amount of

381
00:15:30,060 --> 00:15:33,750
tasks we can well held travesty I might

382
00:15:33,750 --> 00:15:35,370
have been infiltrated by another company

383
00:15:35,370 --> 00:15:38,070
and now they might be going rogue doing

384
00:15:38,070 --> 00:15:39,720
different things and as an organization

385
00:15:39,720 --> 00:15:41,550
you have to always take in risks like

386
00:15:41,550 --> 00:15:43,860
this if you're say the Chinese

387
00:15:43,860 --> 00:15:45,360
government you need to watch out for

388
00:15:45,360 --> 00:15:47,550
things because Travis CI is an American

389
00:15:47,550 --> 00:15:49,410
company as far as I know and they might

390
00:15:49,410 --> 00:15:51,029
have already been infiltrated by the NSA

391
00:15:51,029 --> 00:15:52,710
so now your secrets are gonna get leaked

392
00:15:52,710 --> 00:15:56,339
to the NSA you have an issue another

393
00:15:56,339 --> 00:15:57,750
thing that you can also think about is

394
00:15:57,750 --> 00:16:00,510
using a container as a proxy server so

395
00:16:00,510 --> 00:16:02,220
we can route our traffic say I'm gonna

396
00:16:02,220 --> 00:16:04,440
go and try to hack McDonald's it's cuz

397
00:16:04,440 --> 00:16:08,640
you do and I don't want to be seen so

398
00:16:08,640 --> 00:16:10,830
for 50 minutes I can have all of my

399
00:16:10,830 --> 00:16:13,529
traffic routed through Travis see I spin

400
00:16:13,529 --> 00:16:16,050
up a single proxy container let it go

401
00:16:16,050 --> 00:16:17,940
through that and no one will know

402
00:16:17,940 --> 00:16:18,870
exactly what hit them

403
00:16:18,870 --> 00:16:23,220
and after 50 minutes your tracks are

404
00:16:23,220 --> 00:16:24,930
kind of covered but not completely but

405
00:16:24,930 --> 00:16:28,470
hey it's better than nothing so what are

406
00:16:28,470 --> 00:16:29,820
we actually going to do about this

407
00:16:29,820 --> 00:16:33,030
in actual fact you're gonna have to

408
00:16:33,030 --> 00:16:34,589
accept the fact that Travis CI is

409
00:16:34,589 --> 00:16:37,020
trusted so I mean there's nothing I can

410
00:16:37,020 --> 00:16:39,450
really say about that for anything

411
00:16:39,450 --> 00:16:42,480
related to third-party app msconfig

412
00:16:42,480 --> 00:16:44,640
you're really gonna have to actually sit

413
00:16:44,640 --> 00:16:46,050
down and read the permissions before you

414
00:16:46,050 --> 00:16:48,210
hit the green button as tempting as it

415
00:16:48,210 --> 00:16:49,860
is because I trust me I always hit that

416
00:16:49,860 --> 00:16:53,100
green button do you read the permission

417
00:16:53,100 --> 00:16:54,690
checks and make sure you give

418
00:16:54,690 --> 00:16:55,890
authorization to the correct

419
00:16:55,890 --> 00:16:59,070
applications the next thing is for how

420
00:16:59,070 --> 00:17:01,230
to fix a proxy server the easiest thing

421
00:17:01,230 --> 00:17:03,510
is ingress rules keep an eye out for the

422
00:17:03,510 --> 00:17:05,449
types of rules that are actually there

423
00:17:05,449 --> 00:17:08,160
depending on what is currently laid out

424
00:17:08,160 --> 00:17:11,790
and the amount of behavior kind of

425
00:17:11,790 --> 00:17:14,369
checks so an example is if you're

426
00:17:14,369 --> 00:17:16,319
testing your code are you ever going to

427
00:17:16,319 --> 00:17:19,319
need external access from to the server

428
00:17:19,319 --> 00:17:21,660
that's being testing the answer is no

429
00:17:21,660 --> 00:17:23,730
you don't need something to actually go

430
00:17:23,730 --> 00:17:26,910
and listen on the internet for specific

431
00:17:26,910 --> 00:17:30,300
ports so that's one easy way of blocking

432
00:17:30,300 --> 00:17:31,860
proxy service just don't allow such

433
00:17:31,860 --> 00:17:34,370
behavior

434
00:17:34,850 --> 00:17:38,669
now giveaway number three what were the

435
00:17:38,669 --> 00:17:39,929
four questions can anyone say that

436
00:17:39,929 --> 00:17:48,360
approximately shoot you have a picture

437
00:17:48,360 --> 00:17:51,389
doing you that's smart awesome Oh even

438
00:17:51,389 --> 00:17:51,720
better

439
00:17:51,720 --> 00:17:55,499
yeah so I see me afterwards okay cool

440
00:17:55,499 --> 00:17:59,269
sir now we're gonna move on to tampering

441
00:17:59,269 --> 00:18:02,340
so that's basically modification of data

442
00:18:02,340 --> 00:18:05,460
or code it's escaping containers in

443
00:18:05,460 --> 00:18:06,779
different ways so that could be things

444
00:18:06,779 --> 00:18:08,700
like a docker escape vulnerability and

445
00:18:08,700 --> 00:18:10,379
things like that and it's also the

446
00:18:10,379 --> 00:18:11,909
segregation between each of these

447
00:18:11,909 --> 00:18:14,159
containers how segregated are they can

448
00:18:14,159 --> 00:18:15,629
you jump from one to another can you

449
00:18:15,629 --> 00:18:18,330
actually you know do anything crazy can

450
00:18:18,330 --> 00:18:21,139
you spoof traffic and things like that

451
00:18:21,139 --> 00:18:23,789
so after a fair bit of research we found

452
00:18:23,789 --> 00:18:26,039
out that it is extremely hard to escape

453
00:18:26,039 --> 00:18:28,950
a container however thanks to Dockers

454
00:18:28,950 --> 00:18:30,450
vulnerabilities and the security

455
00:18:30,450 --> 00:18:32,759
researchers attacking docker very very

456
00:18:32,759 --> 00:18:35,190
regularly this year there was actually a

457
00:18:35,190 --> 00:18:38,309
bug that was released I think and it

458
00:18:38,309 --> 00:18:39,720
would basically allow you to break out

459
00:18:39,720 --> 00:18:41,340
of a container and go straight and take

460
00:18:41,340 --> 00:18:43,110
over root access of the host because

461
00:18:43,110 --> 00:18:44,999
docker runs his route most of the time

462
00:18:44,999 --> 00:18:47,909
and when something like that does happen

463
00:18:47,909 --> 00:18:51,509
then when something like that does

464
00:18:51,509 --> 00:18:54,049
happen you actually get to take over the

465
00:18:54,049 --> 00:18:57,389
major server which implies all say 800

466
00:18:57,389 --> 00:18:58,799
of the containers running on the server

467
00:18:58,799 --> 00:19:02,759
are now yours now instead of this could

468
00:19:02,759 --> 00:19:03,929
be a private server this could be a

469
00:19:03,929 --> 00:19:06,029
public server we don't know but now that

470
00:19:06,029 --> 00:19:07,889
means every single container ever spun

471
00:19:07,889 --> 00:19:11,580
up on Travis CI is now in your control

472
00:19:11,580 --> 00:19:13,710
you can go and tamper with every anyone

473
00:19:13,710 --> 00:19:16,019
else's code you can go read their code

474
00:19:16,019 --> 00:19:18,210
you can go leak secrets about them and

475
00:19:18,210 --> 00:19:21,389
that's catastrophic we know as a fact

476
00:19:21,389 --> 00:19:23,879
places like uber use it so hell you can

477
00:19:23,879 --> 00:19:25,999
just go steal their secrets no problems

478
00:19:25,999 --> 00:19:28,559
as for segregation we did do a bit of

479
00:19:28,559 --> 00:19:30,299
research in that and we weren't able to

480
00:19:30,299 --> 00:19:32,580
find anything particularly crazy so

481
00:19:32,580 --> 00:19:33,899
they've done a pretty good job and

482
00:19:33,899 --> 00:19:35,730
they're actually really smart team and

483
00:19:35,730 --> 00:19:38,610
very very you know nice to deal with so

484
00:19:38,610 --> 00:19:42,269
kudos to them sir the next thing is

485
00:19:42,269 --> 00:19:43,670
repudiation

486
00:19:43,670 --> 00:19:46,670
that's basically claiming to have not

487
00:19:46,670 --> 00:19:49,970
done something that you have done or it

488
00:19:49,970 --> 00:19:51,860
could be you know anything related to

489
00:19:51,860 --> 00:19:56,120
your logs so basically every single time

490
00:19:56,120 --> 00:19:58,370
you run a build you have logs for each

491
00:19:58,370 --> 00:20:00,440
and every part of it basically saying

492
00:20:00,440 --> 00:20:02,630
this command was run this is the output

493
00:20:02,630 --> 00:20:05,480
this command is run blah blah blah but

494
00:20:05,480 --> 00:20:07,429
the question is are these logs removable

495
00:20:07,429 --> 00:20:09,140
can you cover your tracks for anything

496
00:20:09,140 --> 00:20:12,559
around here turns out there's a big red

497
00:20:12,559 --> 00:20:14,870
button and that lets you do it it's

498
00:20:14,870 --> 00:20:17,390
awesome the only catch is you have to be

499
00:20:17,390 --> 00:20:20,299
a maintainer which awkwardly enough for

500
00:20:20,299 --> 00:20:22,340
a lot of work and open-source projects

501
00:20:22,340 --> 00:20:24,950
is extremely easy to get all you have to

502
00:20:24,950 --> 00:20:26,990
do is do like five commits be active on

503
00:20:26,990 --> 00:20:28,250
issues and the lechuguilla maintainer

504
00:20:28,250 --> 00:20:32,299
right away it's awesome Travis CI also

505
00:20:32,299 --> 00:20:34,280
states that it is a permanent delete

506
00:20:34,280 --> 00:20:35,900
however they've never proven the fact

507
00:20:35,900 --> 00:20:38,330
that it is it's very hard to prove so I

508
00:20:38,330 --> 00:20:40,850
don't blame them but this implies that

509
00:20:40,850 --> 00:20:44,120
should there be if it is permanent then

510
00:20:44,120 --> 00:20:46,760
there could be issues with things like

511
00:20:46,760 --> 00:20:48,860
incident response so say someone

512
00:20:48,860 --> 00:20:50,720
actually goes pushes something malicious

513
00:20:50,720 --> 00:20:53,120
and manages somehow to remove their

514
00:20:53,120 --> 00:20:56,929
commits then you can basically go remove

515
00:20:56,929 --> 00:20:58,160
the logs and no one will ever know about

516
00:20:58,160 --> 00:20:59,900
that and you have malicious code running

517
00:20:59,900 --> 00:21:01,910
around inside your repository and no-one

518
00:21:01,910 --> 00:21:04,870
can do anything which is pretty scary

519
00:21:04,870 --> 00:21:06,950
the next we're going to move on to the I

520
00:21:06,950 --> 00:21:09,470
which is information disclosure so we're

521
00:21:09,470 --> 00:21:11,600
going to talk about how people love to

522
00:21:11,600 --> 00:21:14,030
expose information inside repositories

523
00:21:14,030 --> 00:21:17,059
it's really cool um I've made a fair bit

524
00:21:17,059 --> 00:21:19,160
of money off this when people go into

525
00:21:19,160 --> 00:21:22,640
their Travis CI you know builds or Eby

526
00:21:22,640 --> 00:21:24,980
it inside their actual source code and

527
00:21:24,980 --> 00:21:27,320
go and expose things like github tokens

528
00:21:27,320 --> 00:21:30,490
just as Julian was saying about Firefox

529
00:21:30,490 --> 00:21:33,620
we find it not every day but probably

530
00:21:33,620 --> 00:21:36,200
every week someone's gone and leaked

531
00:21:36,200 --> 00:21:39,230
credentials like they've got some pretty

532
00:21:39,230 --> 00:21:42,320
fun examples of it another fun one that

533
00:21:42,320 --> 00:21:46,700
I really really enjoy is processing

534
00:21:46,700 --> 00:21:48,770
tools so people love to actually do

535
00:21:48,770 --> 00:21:50,570
static code analysis now it's actually

536
00:21:50,570 --> 00:21:53,120
really cool they do static code analysis

537
00:21:53,120 --> 00:21:55,820
for security and a lot of these tools

538
00:21:55,820 --> 00:21:57,110
actually go and

539
00:21:57,110 --> 00:21:59,059
suppose reports for you which there

540
00:21:59,059 --> 00:22:00,500
that's exactly what they're supposed to

541
00:22:00,500 --> 00:22:03,770
do but the issue is that they expose

542
00:22:03,770 --> 00:22:05,210
them inside the logs which implies

543
00:22:05,210 --> 00:22:06,830
everyone in the world can go and read

544
00:22:06,830 --> 00:22:09,530
them now that's literally handing

545
00:22:09,530 --> 00:22:11,630
everyone a report saying these are our

546
00:22:11,630 --> 00:22:13,340
security vulnerabilities come and expose

547
00:22:13,340 --> 00:22:16,179
them and yeah so you've basically given

548
00:22:16,179 --> 00:22:18,640
attackers a list of things to attack

549
00:22:18,640 --> 00:22:20,900
it's actually really really fun and

550
00:22:20,900 --> 00:22:22,910
that's how I've got a bunch of CV is

551
00:22:22,910 --> 00:22:24,140
just reading other people's reports

552
00:22:24,140 --> 00:22:26,990
saying oh this one's actually a bug let

553
00:22:26,990 --> 00:22:28,040
me go check that out

554
00:22:28,040 --> 00:22:30,530
make a proof of concept send it off to

555
00:22:30,530 --> 00:22:31,850
them and they're like oh yeah that's a

556
00:22:31,850 --> 00:22:35,150
bug whoops and then go and fix it actual

557
00:22:35,150 --> 00:22:36,710
facts are literally just reading things

558
00:22:36,710 --> 00:22:40,549
it's kind of sad and yeah the next thing

559
00:22:40,549 --> 00:22:42,260
that I really you do want to also point

560
00:22:42,260 --> 00:22:44,840
out is people love to expose sensitive

561
00:22:44,840 --> 00:22:48,350
endpoints they kind of go out and just

562
00:22:48,350 --> 00:22:50,860
list out endpoints that should not be

563
00:22:50,860 --> 00:22:53,990
accessible with the passwords and yeah

564
00:22:53,990 --> 00:22:55,940
we just kind of go as an attacker and

565
00:22:55,940 --> 00:22:58,150
read them and attack them is awesome

566
00:22:58,150 --> 00:23:00,950
so our first issue is the disclosure of

567
00:23:00,950 --> 00:23:03,980
API keys and passwords and for that I

568
00:23:03,980 --> 00:23:07,100
would usually suggest using secure

569
00:23:07,100 --> 00:23:08,240
environment variables but we're gonna

570
00:23:08,240 --> 00:23:09,760
talk a bit about that in a little bit

571
00:23:09,760 --> 00:23:13,280
the next thing is the identification of

572
00:23:13,280 --> 00:23:15,770
endpoints probably don't keep them in

573
00:23:15,770 --> 00:23:18,710
your logs or your code if you know you

574
00:23:18,710 --> 00:23:20,090
can replace them in different ways you

575
00:23:20,090 --> 00:23:21,679
don't need them to be if they're

576
00:23:21,679 --> 00:23:22,820
sensitive and they shouldn't be there

577
00:23:22,820 --> 00:23:24,440
they shouldn't be there don't put them

578
00:23:24,440 --> 00:23:28,400
in and static code analysis tools either

579
00:23:28,400 --> 00:23:31,070
keep your reports private or patch the

580
00:23:31,070 --> 00:23:33,530
bugs because it's really not acceptable

581
00:23:33,530 --> 00:23:34,910
if you're giving out people

582
00:23:34,910 --> 00:23:36,919
vulnerabilities because that just makes

583
00:23:36,919 --> 00:23:38,480
my life more interesting and you don't

584
00:23:38,480 --> 00:23:42,200
want that so I was talking about secure

585
00:23:42,200 --> 00:23:44,090
environment variables and basically

586
00:23:44,090 --> 00:23:46,520
turns out that Travis CI is made a

587
00:23:46,520 --> 00:23:49,100
pretty cool thing this was actually a

588
00:23:49,100 --> 00:23:53,059
bug made by as found by Andy Wigner the

589
00:23:53,059 --> 00:23:56,030
thing was in 2016 to 2017 and it's

590
00:23:56,030 --> 00:23:57,860
basically a flaw that he found within

591
00:23:57,860 --> 00:23:59,690
the way Travis CI does secure

592
00:23:59,690 --> 00:24:02,480
environment variables now to a normal

593
00:24:02,480 --> 00:24:05,210
developer or pretty much anyone they'd

594
00:24:05,210 --> 00:24:08,870
assume if it says if a vendor says it's

595
00:24:08,870 --> 00:24:10,790
secure it's secure

596
00:24:10,790 --> 00:24:11,960
you're gonna go ahead with that because

597
00:24:11,960 --> 00:24:14,300
trust me I started using this too until

598
00:24:14,300 --> 00:24:18,320
I read this blog and I mean as a usual

599
00:24:18,320 --> 00:24:19,580
person you don't go ahead and try

600
00:24:19,580 --> 00:24:21,050
testing things so it's like okay cool

601
00:24:21,050 --> 00:24:23,570
it's gonna work it no biggie and then

602
00:24:23,570 --> 00:24:26,330
you go and actually look into it a bit

603
00:24:26,330 --> 00:24:28,580
deeper how does it actually know which

604
00:24:28,580 --> 00:24:29,390
ones which

605
00:24:29,390 --> 00:24:33,800
the answer is we leak them so the way

606
00:24:33,800 --> 00:24:35,990
this actually works is string matching

607
00:24:35,990 --> 00:24:40,070
it'll actually go through and match each

608
00:24:40,070 --> 00:24:42,710
word with each other if the key of the

609
00:24:42,710 --> 00:24:44,870
environment variable matches and the

610
00:24:44,870 --> 00:24:47,240
value matches it will pop in the word

611
00:24:47,240 --> 00:24:49,880
secure if you put a space in between

612
00:24:49,880 --> 00:24:53,030
what happens it leaks it it's literally

613
00:24:53,030 --> 00:24:54,200
as simple as that it doesn't actually

614
00:24:54,200 --> 00:24:56,480
follow the application flow at all it

615
00:24:56,480 --> 00:24:58,670
just says yep they either keep it and

616
00:24:58,670 --> 00:25:01,910
it's exposed in the logs there was also

617
00:25:01,910 --> 00:25:04,190
a fun little bug in Travis CI once upon

618
00:25:04,190 --> 00:25:06,560
a time which as soon as you put in a

619
00:25:06,560 --> 00:25:08,870
pull request it would actually run with

620
00:25:08,870 --> 00:25:11,660
the secure environment variables and

621
00:25:11,660 --> 00:25:14,960
basically what happens with that is

622
00:25:14,960 --> 00:25:17,030
should someone actually have that

623
00:25:17,030 --> 00:25:18,890
configuration put into their Travis CI

624
00:25:18,890 --> 00:25:21,320
config you're now leaking someone else's

625
00:25:21,320 --> 00:25:23,660
credentials left right and center with a

626
00:25:23,660 --> 00:25:25,850
simple pull request just pretty awesome

627
00:25:25,850 --> 00:25:28,730
as an attacker as a defender you've

628
00:25:28,730 --> 00:25:30,350
literally used something that says it's

629
00:25:30,350 --> 00:25:32,330
secure and you just got bidding for it

630
00:25:32,330 --> 00:25:37,280
so sorry so how can we actually fix that

631
00:25:37,280 --> 00:25:39,650
without causing too much trouble the

632
00:25:39,650 --> 00:25:41,810
answer use something like a kms now to

633
00:25:41,810 --> 00:25:43,640
be very honest I didn't completely

634
00:25:43,640 --> 00:25:45,740
understand what goes on inside them all

635
00:25:45,740 --> 00:25:47,470
I know is lots of encryption

636
00:25:47,470 --> 00:25:49,790
something-something it's hard to break

637
00:25:49,790 --> 00:25:53,270
into and yeah but basically use

638
00:25:53,270 --> 00:25:54,980
something like a kms or a key management

639
00:25:54,980 --> 00:25:59,060
system and it's yeah a service you can

640
00:25:59,060 --> 00:26:02,660
use in a lot of different cloud services

641
00:26:02,660 --> 00:26:04,850
our infrastructure and yep so we're

642
00:26:04,850 --> 00:26:07,360
gonna move on to DOS or denial service

643
00:26:07,360 --> 00:26:10,400
so the first type of dose is bandwidth

644
00:26:10,400 --> 00:26:12,860
you can actually use these containers to

645
00:26:12,860 --> 00:26:15,620
consume a lot of bandwidth and send out

646
00:26:15,620 --> 00:26:17,120
a lot of bandwidth really really easily

647
00:26:17,120 --> 00:26:18,890
really really quickly the equivalent of

648
00:26:18,890 --> 00:26:22,280
smashing the f5 button you could also do

649
00:26:22,280 --> 00:26:24,740
things like distributed analysis

650
00:26:24,740 --> 00:26:27,980
so github got hit I think in 2015 or

651
00:26:27,980 --> 00:26:30,440
2016 or something and the Australian

652
00:26:30,440 --> 00:26:33,200
census which is a very fun story they

653
00:26:33,200 --> 00:26:35,410
didn't actually get hit by a

654
00:26:35,410 --> 00:26:38,090
denial-of-service attack it's because of

655
00:26:38,090 --> 00:26:39,980
and I hope this is not recorded but

656
00:26:39,980 --> 00:26:41,290
because of IBM's

657
00:26:41,290 --> 00:26:44,300
incompetence and they were too cheap to

658
00:26:44,300 --> 00:26:47,630
put up a bunch of servers they actually

659
00:26:47,630 --> 00:26:51,860
got dosed by normal users people went to

660
00:26:51,860 --> 00:26:53,540
actually do the census on the last day

661
00:26:53,540 --> 00:26:56,030
as normal people do and 24 million

662
00:26:56,030 --> 00:26:58,850
people went in to use a service and it

663
00:26:58,850 --> 00:27:01,670
died and yeah basically census went on

664
00:27:01,670 --> 00:27:03,230
to going on to writing again which is

665
00:27:03,230 --> 00:27:09,800
great yeah so then after that we have

666
00:27:09,800 --> 00:27:11,990
things like traffic routing so you can

667
00:27:11,990 --> 00:27:14,150
have this really cool policeman who's

668
00:27:14,150 --> 00:27:17,150
dancing there tell people say you know

669
00:27:17,150 --> 00:27:19,190
pop up a DNS server on your container

670
00:27:19,190 --> 00:27:21,860
and try to spoof the DNS going to other

671
00:27:21,860 --> 00:27:24,860
places now say one of your packages goes

672
00:27:24,860 --> 00:27:26,630
and tries to alert something else from I

673
00:27:26,630 --> 00:27:29,360
don't know google.com then we can spin

674
00:27:29,360 --> 00:27:31,700
up a DNS server and try to get it to go

675
00:27:31,700 --> 00:27:33,980
to your google comm or your web server

676
00:27:33,980 --> 00:27:37,640
or whatever you want nice and easy now

677
00:27:37,640 --> 00:27:39,310
how do we actually fix these things

678
00:27:39,310 --> 00:27:43,250
turns out that distributed denial of

679
00:27:43,250 --> 00:27:45,410
service attacks it's a little bit hard

680
00:27:45,410 --> 00:27:46,850
to fix but usually you can fix a

681
00:27:46,850 --> 00:27:49,250
majority of it by limiting the amount of

682
00:27:49,250 --> 00:27:52,160
connections and traffic going through so

683
00:27:52,160 --> 00:27:54,590
don't allow people to throw out gigabits

684
00:27:54,590 --> 00:27:57,770
it's pointless don't allow a thousand

685
00:27:57,770 --> 00:27:59,240
socket connections probably allow ten

686
00:27:59,240 --> 00:28:02,210
and you're good the next thing is

687
00:28:02,210 --> 00:28:04,880
routing traffic from our research it's

688
00:28:04,880 --> 00:28:06,800
actually really hard to do that and they

689
00:28:06,800 --> 00:28:08,750
do have proper segregation so we weren't

690
00:28:08,750 --> 00:28:11,870
able to however I'm sure that one or the

691
00:28:11,870 --> 00:28:12,830
other container

692
00:28:12,830 --> 00:28:15,080
you know providers have stuffed that up

693
00:28:15,080 --> 00:28:18,200
so keep an eye out the next thing we're

694
00:28:18,200 --> 00:28:19,700
going to look at is elevation of

695
00:28:19,700 --> 00:28:22,510
privileges or how can we go further and

696
00:28:22,510 --> 00:28:25,630
basically that's basically looking at

697
00:28:25,630 --> 00:28:27,650
authorization checks and how we can

698
00:28:27,650 --> 00:28:30,710
stuff up authorization and misusing

699
00:28:30,710 --> 00:28:33,920
maybe sooner so fun fact

700
00:28:33,920 --> 00:28:35,930
Travis CI lets you do anything you want

701
00:28:35,930 --> 00:28:37,639
with sudo which I mean

702
00:28:37,639 --> 00:28:38,749
you're gonna install things on your

703
00:28:38,749 --> 00:28:41,119
container makes perfect sense but pseudo

704
00:28:41,119 --> 00:28:42,589
is the only thing that you can actually

705
00:28:42,589 --> 00:28:44,359
well the only thing you really require

706
00:28:44,359 --> 00:28:48,049
to do things like docker escapes so it's

707
00:28:48,049 --> 00:28:50,179
a feature but it's also the biggest

708
00:28:50,179 --> 00:28:52,099
weakness because that's exactly what you

709
00:28:52,099 --> 00:28:53,989
need to go and break out and take over

710
00:28:53,989 --> 00:28:58,759
other people's containers and yeah so in

711
00:28:58,759 --> 00:29:00,709
the end do we actually do a good job did

712
00:29:00,709 --> 00:29:02,119
we go through and identify each

713
00:29:02,119 --> 00:29:04,629
vulnerability each place and everything

714
00:29:04,629 --> 00:29:07,159
my friend mark thought sir so I think

715
00:29:07,159 --> 00:29:11,269
sir and giveaway number four what is the

716
00:29:11,269 --> 00:29:19,789
full form of stride shoot holy crap I

717
00:29:19,789 --> 00:29:22,039
did not think anyone get that nice oh

718
00:29:22,039 --> 00:29:23,269
yeah give her a round of applause of

719
00:29:23,269 --> 00:29:29,899
that so a quick summary of everything

720
00:29:29,899 --> 00:29:32,149
we've said today I made about 20 grand

721
00:29:32,149 --> 00:29:35,959
off doing random crap like this which

722
00:29:35,959 --> 00:29:37,940
I'm not completely proud of but I kind

723
00:29:37,940 --> 00:29:41,359
of am we basically went through

724
00:29:41,359 --> 00:29:43,579
identified attack surfaces and found

725
00:29:43,579 --> 00:29:46,249
different ways to break into things and

726
00:29:46,249 --> 00:29:48,320
destroy them we've also found ways to

727
00:29:48,320 --> 00:29:51,079
fix each and every one of them so that's

728
00:29:51,079 --> 00:29:54,320
a good pat on the back and yeah in the

729
00:29:54,320 --> 00:29:55,820
end I want a lot of drinks and got

730
00:29:55,820 --> 00:30:00,200
pretty intoxicated and trying to pass

731
00:30:00,200 --> 00:30:02,239
this on to everyone else I want everyone

732
00:30:02,239 --> 00:30:03,769
to go and think about the different

733
00:30:03,769 --> 00:30:06,529
types of bugs that they've found or you

734
00:30:06,529 --> 00:30:07,759
know different types of software they've

735
00:30:07,759 --> 00:30:09,469
used just because you use a software it

736
00:30:09,469 --> 00:30:11,209
doesn't mean that you can't think about

737
00:30:11,209 --> 00:30:13,489
the security behind it security may not

738
00:30:13,489 --> 00:30:15,529
be your job as Tonya said security is

739
00:30:15,529 --> 00:30:18,259
for everyone it is a part of everyone's

740
00:30:18,259 --> 00:30:21,799
job and as long as you put your part

741
00:30:21,799 --> 00:30:23,629
into it just because you're a developer

742
00:30:23,629 --> 00:30:25,729
or a Solutions Architect or something

743
00:30:25,729 --> 00:30:27,169
does not mean the security is not your

744
00:30:27,169 --> 00:30:29,929
job it means that you can think about it

745
00:30:29,929 --> 00:30:32,269
and you can make the difference you can

746
00:30:32,269 --> 00:30:34,429
save your company money you can go out

747
00:30:34,429 --> 00:30:36,349
look at different issues talk to someone

748
00:30:36,349 --> 00:30:38,989
in a red team like me and find maybe

749
00:30:38,989 --> 00:30:41,269
different vectors to attack teach us

750
00:30:41,269 --> 00:30:42,320
something and we'll give you a share of

751
00:30:42,320 --> 00:30:44,329
the bounty if we find anything so you

752
00:30:44,329 --> 00:30:46,789
can make money off of - and if you're on

753
00:30:46,789 --> 00:30:48,919
my side of the fence then it'll teach

754
00:30:48,919 --> 00:30:50,920
you how to hack things better because do

755
00:30:50,920 --> 00:30:54,970
this I learned a ton and yeah

756
00:30:54,970 --> 00:30:57,510
any questions

757
00:30:57,510 --> 00:31:05,029
[Applause]

758
00:31:06,610 --> 00:31:11,080
kill well

759
00:31:17,210 --> 00:31:19,120
ELISA sadder and completely have

760
00:31:19,120 --> 00:31:21,680
permission despite Jenkins and we did

761
00:31:21,680 --> 00:31:24,910
find some fun stuff on Jenkins

762
00:31:35,179 --> 00:31:37,210
ah

763
00:31:38,749 --> 00:31:42,769
frankly no I don't I not well-versed

764
00:31:42,769 --> 00:31:44,299
enough to be able to say anything but I

765
00:31:44,299 --> 00:31:47,589
can read up and let you know if you want

766
00:31:52,119 --> 00:31:55,470
sweet Thanks

767
00:31:55,470 --> 00:31:59,690
[Applause]

