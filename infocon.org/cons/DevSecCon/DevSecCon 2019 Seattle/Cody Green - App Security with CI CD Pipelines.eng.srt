1
00:00:00,060 --> 00:00:04,589
let's try that again howdy so my name is

2
00:00:04,589 --> 00:00:06,480
Cody green I'm a cloud architect with f5

3
00:00:06,480 --> 00:00:07,970
networks today we're gonna talk about

4
00:00:07,970 --> 00:00:10,620
application security and a CI CD

5
00:00:10,620 --> 00:00:13,440
pipeline now when most of you see this

6
00:00:13,440 --> 00:00:15,529
picture you probably see a bunch of junk

7
00:00:15,529 --> 00:00:17,970
for one of my customers though they had

8
00:00:17,970 --> 00:00:20,010
a business unit whose responsibility it

9
00:00:20,010 --> 00:00:23,550
was to sell surplus or equipment the

10
00:00:23,550 --> 00:00:25,769
company no longer used now this

11
00:00:25,769 --> 00:00:27,599
particular business unit was a necessity

12
00:00:27,599 --> 00:00:30,359
but it wasn't terribly profitable this

13
00:00:30,359 --> 00:00:32,520
business unit got an idea let's hire a

14
00:00:32,520 --> 00:00:35,040
college intern let's have them write an

15
00:00:35,040 --> 00:00:38,730
auction and we'll build it in AWS good

16
00:00:38,730 --> 00:00:41,160
idea right unbeknownst to them at the

17
00:00:41,160 --> 00:00:43,590
time the idea takes off that particular

18
00:00:43,590 --> 00:00:46,680
business unit starts to really gain in

19
00:00:46,680 --> 00:00:48,960
popularity and starts generating a

20
00:00:48,960 --> 00:00:51,780
profit so you can imagine what happens

21
00:00:51,780 --> 00:00:54,270
when IT figures out that there's a

22
00:00:54,270 --> 00:00:56,940
security or an app that's gone

23
00:00:56,940 --> 00:01:00,030
production that wasn't scanned so like

24
00:01:00,030 --> 00:01:03,180
any good security department they scan

25
00:01:03,180 --> 00:01:04,890
the application there were no

26
00:01:04,890 --> 00:01:06,479
vulnerabilities I'm kidding there were

27
00:01:06,479 --> 00:01:08,340
tons it was developed by an intern

28
00:01:08,340 --> 00:01:10,080
nothing against that I was an intern but

29
00:01:10,080 --> 00:01:13,619
you don't typically code securely right

30
00:01:13,619 --> 00:01:15,659
we're not taught that in college and so

31
00:01:15,659 --> 00:01:17,040
this particular app had a lot of

32
00:01:17,040 --> 00:01:17,970
vulnerabilities that needed to be

33
00:01:17,970 --> 00:01:19,710
addressed now why do I tell you this

34
00:01:19,710 --> 00:01:21,390
story because this is one of the few

35
00:01:21,390 --> 00:01:24,030
times in my career where I saw the CSO

36
00:01:24,030 --> 00:01:27,450
was overruled by the CIO this particular

37
00:01:27,450 --> 00:01:30,030
business unit did exactly what the CIO

38
00:01:30,030 --> 00:01:30,720
wanted

39
00:01:30,720 --> 00:01:33,930
they found a pain point they identified

40
00:01:33,930 --> 00:01:35,520
a way to solve that pain point and

41
00:01:35,520 --> 00:01:37,710
identify it securely what would it

42
00:01:37,710 --> 00:01:39,810
normally happened normally we would have

43
00:01:39,810 --> 00:01:41,610
slapped the business you know on the

44
00:01:41,610 --> 00:01:43,500
hand and said hey fix your code we're

45
00:01:43,500 --> 00:01:45,420
gonna take your site offline that's not

46
00:01:45,420 --> 00:01:48,960
the case here the site Sayed online even

47
00:01:48,960 --> 00:01:50,220
though there were known vulnerabilities

48
00:01:50,220 --> 00:01:53,189
against it because it was profitable and

49
00:01:53,189 --> 00:01:55,500
it did exactly what the CIO and the

50
00:01:55,500 --> 00:01:58,770
president wanted now I tell you this to

51
00:01:58,770 --> 00:02:00,659
then ask you what is the worst thing you

52
00:02:00,659 --> 00:02:03,229
can deploy an application without

53
00:02:03,229 --> 00:02:05,939
probably know the answer right security

54
00:02:05,939 --> 00:02:08,610
so f5 publishes our state of application

55
00:02:08,610 --> 00:02:10,979
services report every year and year over

56
00:02:10,979 --> 00:02:13,030
year we've seen a rising

57
00:02:13,030 --> 00:02:14,950
answer that security is one of the most

58
00:02:14,950 --> 00:02:16,750
critical things that has to be deployed

59
00:02:16,750 --> 00:02:20,200
with an application why well if we were

60
00:02:20,200 --> 00:02:21,760
taking a look at this five years ago

61
00:02:21,760 --> 00:02:24,190
most of us were probably deploying in a

62
00:02:24,190 --> 00:02:25,990
data center that we knew and we trusted

63
00:02:25,990 --> 00:02:29,530
so app security while terribly important

64
00:02:29,530 --> 00:02:31,750
at that point in time is not something

65
00:02:31,750 --> 00:02:34,840
we felt as vulnerable about however now

66
00:02:34,840 --> 00:02:36,160
most of our applications are actually

67
00:02:36,160 --> 00:02:38,260
being deployed in a public cloud we

68
00:02:38,260 --> 00:02:40,239
either do or don't know the type of

69
00:02:40,239 --> 00:02:41,770
security that's wrapped around them and

70
00:02:41,770 --> 00:02:44,860
more importantly we may be going further

71
00:02:44,860 --> 00:02:46,870
out than what our security teams are

72
00:02:46,870 --> 00:02:50,590
capable of hence the example before now

73
00:02:50,590 --> 00:02:53,440
so why is app security still an issue in

74
00:02:53,440 --> 00:02:55,510
deployments we've been doing this for

75
00:02:55,510 --> 00:02:57,190
quite some time right I was doing

76
00:02:57,190 --> 00:02:59,380
automated deployments you know back in

77
00:02:59,380 --> 00:03:02,350
the late 2000s and this is something

78
00:03:02,350 --> 00:03:04,300
that we have to be able to look at and

79
00:03:04,300 --> 00:03:06,819
say what is the cause because it's not a

80
00:03:06,819 --> 00:03:09,880
technology issue per se and for me what

81
00:03:09,880 --> 00:03:11,170
I typically see across most

82
00:03:11,170 --> 00:03:13,720
organizations it's a cultural issue so

83
00:03:13,720 --> 00:03:14,739
we're gonna dig into some of the

84
00:03:14,739 --> 00:03:16,360
cultural things and we'll start with

85
00:03:16,360 --> 00:03:18,760
silos now we're all familiar with silos

86
00:03:18,760 --> 00:03:20,680
right I've been a part of one you've

87
00:03:20,680 --> 00:03:22,299
probably all been a part of one you

88
00:03:22,299 --> 00:03:24,130
either work in security you work in

89
00:03:24,130 --> 00:03:26,190
operations your work and development and

90
00:03:26,190 --> 00:03:29,620
silos cause friction right I care about

91
00:03:29,620 --> 00:03:32,829
what gets my department the greatest

92
00:03:32,829 --> 00:03:35,260
level of success when I was in security

93
00:03:35,260 --> 00:03:37,510
that meant that making sure that we had

94
00:03:37,510 --> 00:03:40,450
no vulnerabilities or no breaches if you

95
00:03:40,450 --> 00:03:42,459
came to me and said hey we've got to get

96
00:03:42,459 --> 00:03:44,920
to market in two days I'd be like should

97
00:03:44,920 --> 00:03:46,299
have submitted the ticket a week ago

98
00:03:46,299 --> 00:03:46,989
right

99
00:03:46,989 --> 00:03:49,750
that doesn't help that causes friction

100
00:03:49,750 --> 00:03:53,190
so we're trying to help customers enable

101
00:03:53,190 --> 00:03:57,190
multi team environments this gets into

102
00:03:57,190 --> 00:03:59,530
that dev set cops mentality the DevOps

103
00:03:59,530 --> 00:04:01,750
has been around for well over ten years

104
00:04:01,750 --> 00:04:03,670
however security didn't always have a

105
00:04:03,670 --> 00:04:06,130
seat at the table the other thing that

106
00:04:06,130 --> 00:04:08,410
I've noticed is we have issues when we

107
00:04:08,410 --> 00:04:11,109
start looking at pipelines not all

108
00:04:11,109 --> 00:04:13,090
security vendors have enabled their

109
00:04:13,090 --> 00:04:15,010
products to be automated in a pipeline

110
00:04:15,010 --> 00:04:18,310
fashion so this also causes frictions in

111
00:04:18,310 --> 00:04:20,858
the silos and then finally security is

112
00:04:20,858 --> 00:04:22,870
an afterthought how many of you all go

113
00:04:22,870 --> 00:04:24,789
into a project kickoff meeting and one

114
00:04:24,789 --> 00:04:26,290
of the requirements that you list out

115
00:04:26,290 --> 00:04:27,700
the board that this project or this new

116
00:04:27,700 --> 00:04:29,920
hat must have a chain partly obtained is

117
00:04:29,920 --> 00:04:33,700
hey it's got to be secure you're awesome

118
00:04:33,700 --> 00:04:36,130
but most of us don't write it's

119
00:04:36,130 --> 00:04:38,800
something that we know okay before I go

120
00:04:38,800 --> 00:04:39,490
into production

121
00:04:39,490 --> 00:04:42,190
yeah Security's gonna scan it this

122
00:04:42,190 --> 00:04:45,460
causes that friction that's silo we need

123
00:04:45,460 --> 00:04:47,340
to be able to get around us

124
00:04:47,340 --> 00:04:49,840
now the other cultural thing we'll touch

125
00:04:49,840 --> 00:04:52,810
on is trust so who's been a part of a

126
00:04:52,810 --> 00:04:56,080
DevOps team or DevOps team okay quite a

127
00:04:56,080 --> 00:04:59,350
few of you were you a silo in your

128
00:04:59,350 --> 00:05:01,690
organization most of the time I find

129
00:05:01,690 --> 00:05:04,030
that they are and the reason this is a

130
00:05:04,030 --> 00:05:06,550
concern is because you're not given the

131
00:05:06,550 --> 00:05:08,590
trust or the empowerment to solve the

132
00:05:08,590 --> 00:05:09,610
problems that you were initially

133
00:05:09,610 --> 00:05:12,250
targeted with yes you may be successful

134
00:05:12,250 --> 00:05:14,830
on a handful of applications but for us

135
00:05:14,830 --> 00:05:18,280
to really succeed in dev ops or dev

136
00:05:18,280 --> 00:05:21,190
psych ops we have to have the trust from

137
00:05:21,190 --> 00:05:23,380
the higher the entire organization and

138
00:05:23,380 --> 00:05:26,500
we have to remove some of the hierarchy

139
00:05:26,500 --> 00:05:29,290
or bureaucracy that limits those teams

140
00:05:29,290 --> 00:05:31,780
so I'll give you a perfect example how

141
00:05:31,780 --> 00:05:33,900
many of you all are allowed to obtain

142
00:05:33,900 --> 00:05:38,110
certificates like ssl certificates a

143
00:05:38,110 --> 00:05:40,360
handful of you most developers I work

144
00:05:40,360 --> 00:05:43,450
with they can't security is like no that

145
00:05:43,450 --> 00:05:45,340
won't happen right that's something they

146
00:05:45,340 --> 00:05:47,620
have to put a ticket in and we have to

147
00:05:47,620 --> 00:05:50,350
control that the other thing is

148
00:05:50,350 --> 00:05:52,690
facilitating you know trust facilitate

149
00:05:52,690 --> 00:05:55,600
secure practices now some of you may say

150
00:05:55,600 --> 00:05:57,850
well hold on hold on Cody that you're

151
00:05:57,850 --> 00:05:59,590
telling me to trust them and they'll do

152
00:05:59,590 --> 00:06:02,050
what they're supposed to do there is a

153
00:06:02,050 --> 00:06:04,360
trust but verify mentality that we have

154
00:06:04,360 --> 00:06:07,090
to implement here but yes we need to

155
00:06:07,090 --> 00:06:09,100
trust the developers and the dev suck-up

156
00:06:09,100 --> 00:06:11,740
teams to do the right thing for the

157
00:06:11,740 --> 00:06:13,510
company so that they can achieve the

158
00:06:13,510 --> 00:06:16,060
speed that they're after but also that

159
00:06:16,060 --> 00:06:18,880
we're giving them tools that have best

160
00:06:18,880 --> 00:06:21,670
practices built into them and then the

161
00:06:21,670 --> 00:06:23,410
last thing here is allowing innovation

162
00:06:23,410 --> 00:06:26,460
I've seen some amazing things come from

163
00:06:26,460 --> 00:06:29,040
departments that allow acure 'ti

164
00:06:29,040 --> 00:06:31,720
operations and developers to all work

165
00:06:31,720 --> 00:06:34,570
together new ways of release new ways to

166
00:06:34,570 --> 00:06:37,210
address security problems if we're not

167
00:06:37,210 --> 00:06:39,470
trusting those teams

168
00:06:39,470 --> 00:06:41,630
to move at a faster pace and choose the

169
00:06:41,630 --> 00:06:43,220
resources of the tools that's right for

170
00:06:43,220 --> 00:06:43,520
them

171
00:06:43,520 --> 00:06:47,300
we are stifling innovation the final

172
00:06:47,300 --> 00:06:48,980
thing is ownership now this probably

173
00:06:48,980 --> 00:06:50,540
comes as no surprise to anyone here

174
00:06:50,540 --> 00:06:54,860
right everyone everyone has to own the

175
00:06:54,860 --> 00:06:57,440
release I've worked in my career in

176
00:06:57,440 --> 00:07:00,020
development and operations and I've been

177
00:07:00,020 --> 00:07:02,810
guilty of this right I write the code I

178
00:07:02,810 --> 00:07:05,630
throw it over the fence who's seen the

179
00:07:05,630 --> 00:07:07,730
meme of the house on fire and it says

180
00:07:07,730 --> 00:07:10,790
worked in dev ops problem now right that

181
00:07:10,790 --> 00:07:11,480
was me

182
00:07:11,480 --> 00:07:14,570
I've also been in operations and to the

183
00:07:14,570 --> 00:07:17,030
bane of my existence if I never hear it

184
00:07:17,030 --> 00:07:20,720
worked on my laptop again then I will be

185
00:07:20,720 --> 00:07:23,750
happy everyone has to own the release

186
00:07:23,750 --> 00:07:26,210
and that means that we all have to work

187
00:07:26,210 --> 00:07:29,720
to ensuring that security is part of the

188
00:07:29,720 --> 00:07:32,450
build process and more importantly part

189
00:07:32,450 --> 00:07:35,870
of the initial design of the project the

190
00:07:35,870 --> 00:07:37,780
other thing is you have to meet your

191
00:07:37,780 --> 00:07:40,940
developers halfway right if you want to

192
00:07:40,940 --> 00:07:42,770
seat at that table if your teams are

193
00:07:42,770 --> 00:07:44,510
using test-driven development patterns

194
00:07:44,510 --> 00:07:46,760
then hey you should know what those are

195
00:07:46,760 --> 00:07:50,360
B provides some examples right how can

196
00:07:50,360 --> 00:07:53,090
those teams integrate with that I love

197
00:07:53,090 --> 00:07:54,830
the example you've had earlier about the

198
00:07:54,830 --> 00:07:57,020
here's not what to do and here's what to

199
00:07:57,020 --> 00:07:59,210
do that that is phenomenal right because

200
00:07:59,210 --> 00:08:01,550
we need to provide examples we want our

201
00:08:01,550 --> 00:08:03,650
developers to innately include security

202
00:08:03,650 --> 00:08:06,230
practices into the releases but if all

203
00:08:06,230 --> 00:08:07,580
we're doing is coming around after the

204
00:08:07,580 --> 00:08:09,350
fact and slapping them on the hand and

205
00:08:09,350 --> 00:08:12,500
that's not helping right instead we need

206
00:08:12,500 --> 00:08:14,330
to give them better ways to achieve

207
00:08:14,330 --> 00:08:16,310
security through the tools they're using

208
00:08:16,310 --> 00:08:19,100
and more importantly you need to

209
00:08:19,100 --> 00:08:21,290
understand what those are so I mentioned

210
00:08:21,290 --> 00:08:22,910
this one because I do work with a lot of

211
00:08:22,910 --> 00:08:25,340
security teams and one of the patterns

212
00:08:25,340 --> 00:08:27,140
that I've seen over the last few years

213
00:08:27,140 --> 00:08:29,600
is things that we've done for a long

214
00:08:29,600 --> 00:08:31,580
time and development are starting to

215
00:08:31,580 --> 00:08:34,880
happen in security being able to do

216
00:08:34,880 --> 00:08:36,380
things like test-driven development

217
00:08:36,380 --> 00:08:38,809
things like integration tests right

218
00:08:38,809 --> 00:08:40,729
typically security was used to doing a

219
00:08:40,729 --> 00:08:43,039
scan at some point closer to production

220
00:08:43,039 --> 00:08:45,440
we're teaching security to practitioners

221
00:08:45,440 --> 00:08:48,320
how to be more like developers and so we

222
00:08:48,320 --> 00:08:49,710
have to meet them halfway

223
00:08:49,710 --> 00:08:53,790
so how can we design for success so one

224
00:08:53,790 --> 00:08:55,950
of the things I do at f5 is I help

225
00:08:55,950 --> 00:08:58,230
customers build deployment patterns for

226
00:08:58,230 --> 00:09:00,779
hybrid clouds that enable the

227
00:09:00,779 --> 00:09:02,490
application delivery and application

228
00:09:02,490 --> 00:09:03,660
security requirements they have today

229
00:09:03,660 --> 00:09:05,570
but also for the next couple of years

230
00:09:05,570 --> 00:09:07,649
and for those of us that have been in

231
00:09:07,649 --> 00:09:09,209
security for a single time we're

232
00:09:09,209 --> 00:09:11,040
probably used to that hard outer shell

233
00:09:11,040 --> 00:09:13,649
mentality like the M&M effect that

234
00:09:13,649 --> 00:09:15,630
everything at the edge must be secure

235
00:09:15,630 --> 00:09:17,550
and this is where you had your large

236
00:09:17,550 --> 00:09:19,080
monolithic firewalls your large

237
00:09:19,080 --> 00:09:20,850
monolithic API gateways your large

238
00:09:20,850 --> 00:09:23,730
monolithic web application firewalls but

239
00:09:23,730 --> 00:09:26,580
we've seen trends where customers were

240
00:09:26,580 --> 00:09:28,709
implementing micro segmentation inside

241
00:09:28,709 --> 00:09:31,050
of their private data centers that as a

242
00:09:31,050 --> 00:09:33,300
new business dinner app team decides to

243
00:09:33,300 --> 00:09:34,920
go cloud native they're given their own

244
00:09:34,920 --> 00:09:37,410
VPC or their own resource group so that

245
00:09:37,410 --> 00:09:40,080
they can code their app and not affect

246
00:09:40,080 --> 00:09:43,110
anyone else so we have to take the same

247
00:09:43,110 --> 00:09:45,270
approach that the developers are taking

248
00:09:45,270 --> 00:09:48,390
inside of security and that is slay the

249
00:09:48,390 --> 00:09:52,290
monolith right what resources need to

250
00:09:52,290 --> 00:09:54,089
still live at the edge and what

251
00:09:54,089 --> 00:09:55,620
resources can move closer to the app

252
00:09:55,620 --> 00:09:57,360
it's a prime example something like

253
00:09:57,360 --> 00:09:59,550
denial of service that's still a really

254
00:09:59,550 --> 00:10:01,860
good thing to live at the edge I don't

255
00:10:01,860 --> 00:10:03,750
necessarily want that Dass attack to go

256
00:10:03,750 --> 00:10:06,029
all the way down at the V PC or the

257
00:10:06,029 --> 00:10:08,070
Apple is but when we look at things like

258
00:10:08,070 --> 00:10:10,380
API gateways when we look at web

259
00:10:10,380 --> 00:10:12,450
application firewalls we've seen the

260
00:10:12,450 --> 00:10:15,510
adoption of micro proxies and micro API

261
00:10:15,510 --> 00:10:17,850
gateways really take off and this is

262
00:10:17,850 --> 00:10:20,010
where we're moving those down into your

263
00:10:20,010 --> 00:10:22,709
pipeline and now the app team has the

264
00:10:22,709 --> 00:10:25,200
ability to configure them so this means

265
00:10:25,200 --> 00:10:26,550
that they can move at their release

266
00:10:26,550 --> 00:10:29,220
Kane's not at the traditional ticketing

267
00:10:29,220 --> 00:10:32,790
release cadence so that empowerment

268
00:10:32,790 --> 00:10:35,160
becomes an important part of that I have

269
00:10:35,160 --> 00:10:39,029
to empower the developer now security

270
00:10:39,029 --> 00:10:40,440
must be built-in you've heard me mention

271
00:10:40,440 --> 00:10:42,120
this and you'll hear me say it a couple

272
00:10:42,120 --> 00:10:44,160
more times but we have to create

273
00:10:44,160 --> 00:10:46,950
patterns that allow security teams and

274
00:10:46,950 --> 00:10:50,160
development teams to ensure that they

275
00:10:50,160 --> 00:10:52,079
are achieving the velociter speed that

276
00:10:52,079 --> 00:10:54,660
they want but the underlying security is

277
00:10:54,660 --> 00:10:56,850
there we also have to make it easy for

278
00:10:56,850 --> 00:10:58,709
business to units to choose or

279
00:10:58,709 --> 00:11:00,329
application teams to choose the tool

280
00:11:00,329 --> 00:11:01,610
that's right for them

281
00:11:01,610 --> 00:11:03,530
so how many of all have had a security

282
00:11:03,530 --> 00:11:05,210
product for lack of a better term kind

283
00:11:05,210 --> 00:11:07,580
of shove down your throat that this is

284
00:11:07,580 --> 00:11:09,470
the firewall we use or this is the

285
00:11:09,470 --> 00:11:11,450
laughs we use and everyone must use it

286
00:11:11,450 --> 00:11:14,660
well a few of you and the thing that we

287
00:11:14,660 --> 00:11:17,240
look at is the app teams to move at the

288
00:11:17,240 --> 00:11:18,980
pace that they need to get right if

289
00:11:18,980 --> 00:11:20,720
you're releasing once a month and you

290
00:11:20,720 --> 00:11:24,560
want to start releasing weekly does me

291
00:11:24,560 --> 00:11:26,780
trying to force a security product on

292
00:11:26,780 --> 00:11:29,510
you cause you to release faster the

293
00:11:29,510 --> 00:11:32,090
answer is typically no but you choosing

294
00:11:32,090 --> 00:11:34,520
a security product that enables you to

295
00:11:34,520 --> 00:11:35,810
move at the release cadence that you

296
00:11:35,810 --> 00:11:38,870
want right if I use as your DevOps and

297
00:11:38,870 --> 00:11:40,910
there's tools that natively integrate

298
00:11:40,910 --> 00:11:42,710
with is your DevOps and those could

299
00:11:42,710 --> 00:11:44,750
allow me to move faster wouldn't that be

300
00:11:44,750 --> 00:11:46,730
the right thing for my app team or my

301
00:11:46,730 --> 00:11:49,070
business unit what we want security to

302
00:11:49,070 --> 00:11:50,960
do is and enable that development team

303
00:11:50,960 --> 00:11:53,510
to make those decisions right this is

304
00:11:53,510 --> 00:11:55,730
that trust but verify we have to

305
00:11:55,730 --> 00:11:58,220
implement tools that allow us to ensure

306
00:11:58,220 --> 00:12:01,220
the app is secured but not force

307
00:12:01,220 --> 00:12:03,400
particular vendors or particular stacks

308
00:12:03,400 --> 00:12:06,860
upon those teams ideally I want to be

309
00:12:06,860 --> 00:12:08,840
able to give you a data plane whatever

310
00:12:08,840 --> 00:12:10,760
that data point is you can choose that

311
00:12:10,760 --> 00:12:13,010
and we can layer security upon that data

312
00:12:13,010 --> 00:12:16,400
plane this gets into automation right

313
00:12:16,400 --> 00:12:18,080
and automation is a critical component

314
00:12:18,080 --> 00:12:19,910
of making this work in your pipelines

315
00:12:19,910 --> 00:12:24,050
now Automation has to include everything

316
00:12:24,050 --> 00:12:27,410
how many of y'all can automate 80% of

317
00:12:27,410 --> 00:12:30,110
your application deployments how many of

318
00:12:30,110 --> 00:12:32,270
you can automate 90% of your application

319
00:12:32,270 --> 00:12:34,190
deployments a couple of you how many can

320
00:12:34,190 --> 00:12:37,280
automate a hundred percent small subset

321
00:12:37,280 --> 00:12:40,310
a lot of teams I work with when we talk

322
00:12:40,310 --> 00:12:42,170
about automation I know one of the

323
00:12:42,170 --> 00:12:43,550
directors of automation at one of my

324
00:12:43,550 --> 00:12:45,830
customers he put it in a very funny way

325
00:12:45,830 --> 00:12:47,990
he's like I just want to get to 80% I'm

326
00:12:47,990 --> 00:12:50,630
like 80% of what I'm like if I still

327
00:12:50,630 --> 00:12:53,450
have to request a certificate or DNS

328
00:12:53,450 --> 00:12:56,420
manually then yes I automated but I

329
00:12:56,420 --> 00:12:58,250
didn't give the team the speed to

330
00:12:58,250 --> 00:13:00,320
release that they need it I need to move

331
00:13:00,320 --> 00:13:03,110
faster the other thing is automation is

332
00:13:03,110 --> 00:13:05,420
a journey but y'all don't take too long

333
00:13:05,420 --> 00:13:08,300
right this is where you've been looking

334
00:13:08,300 --> 00:13:10,430
at automation the developers though

335
00:13:10,430 --> 00:13:12,980
they're moving faster than most security

336
00:13:12,980 --> 00:13:14,000
teams our net ops to

337
00:13:14,000 --> 00:13:16,250
when it comes to automation so one of

338
00:13:16,250 --> 00:13:19,160
the things I would challenge you is go

339
00:13:19,160 --> 00:13:21,890
back and challenge your vendors to help

340
00:13:21,890 --> 00:13:24,410
you along that journey so when I come

341
00:13:24,410 --> 00:13:26,780
into you in your office we sit down and

342
00:13:26,780 --> 00:13:29,000
I say I have an API what does that mean

343
00:13:29,000 --> 00:13:31,840
to you what does that mean to you

344
00:13:31,840 --> 00:13:34,550
integration yeah that means that sir I'm

345
00:13:34,550 --> 00:13:35,690
telling you you have to become a domain

346
00:13:35,690 --> 00:13:37,550
expert in my product you also have to

347
00:13:37,550 --> 00:13:39,620
come a domain expert in my api's and

348
00:13:39,620 --> 00:13:41,960
then you get to glue that together right

349
00:13:41,960 --> 00:13:43,940
really what I want is my vendor coming

350
00:13:43,940 --> 00:13:46,430
in and giving me solutions that allow me

351
00:13:46,430 --> 00:13:49,640
to implement quickly today so for

352
00:13:49,640 --> 00:13:51,770
example ansible modules terraform

353
00:13:51,770 --> 00:13:52,420
playbooks

354
00:13:52,420 --> 00:13:55,190
moving from imperative ap is and moving

355
00:13:55,190 --> 00:13:57,770
more towards declarative api's i want to

356
00:13:57,770 --> 00:13:59,900
try to target pipeline integration in

357
00:13:59,900 --> 00:14:02,420
all use cases that I can a lot of the

358
00:14:02,420 --> 00:14:03,980
net ops and SEC ops teams that I work

359
00:14:03,980 --> 00:14:06,050
with pipeline automation isn't their

360
00:14:06,050 --> 00:14:08,180
first focus they're just trying to

361
00:14:08,180 --> 00:14:10,580
enable something like ServiceNow to be

362
00:14:10,580 --> 00:14:12,230
able to deploy an app and so that's

363
00:14:12,230 --> 00:14:13,880
great for the business units that ploy

364
00:14:13,880 --> 00:14:15,890
off-the-shelf code but for those of us

365
00:14:15,890 --> 00:14:18,230
that write code for our companies the

366
00:14:18,230 --> 00:14:19,310
pipeline is where I want that

367
00:14:19,310 --> 00:14:21,950
integration so I mentioned the

368
00:14:21,950 --> 00:14:23,360
automation journey that imperative

369
00:14:23,360 --> 00:14:24,740
versus declarative and I do want to

370
00:14:24,740 --> 00:14:26,180
touch on this because it's important

371
00:14:26,180 --> 00:14:28,280
when I tell you I have an imperative

372
00:14:28,280 --> 00:14:30,800
process that means that I'm relying upon

373
00:14:30,800 --> 00:14:32,810
you to be that domain expert so I'll

374
00:14:32,810 --> 00:14:34,550
give you an example the customer that

375
00:14:34,550 --> 00:14:37,220
said we want to hit 80% we told them

376
00:14:37,220 --> 00:14:39,230
that the reason they were having delays

377
00:14:39,230 --> 00:14:42,020
in deployments is that the security team

378
00:14:42,020 --> 00:14:45,110
had a four week SLA to obtain a new

379
00:14:45,110 --> 00:14:48,380
certificate for weeks if your deployment

380
00:14:48,380 --> 00:14:51,380
erat takes four minutes alright that's a

381
00:14:51,380 --> 00:14:53,750
long time to wait to get a new cert to

382
00:14:53,750 --> 00:14:55,880
deploy that application so they realize

383
00:14:55,880 --> 00:14:57,589
this was a pain point they looked at

384
00:14:57,589 --> 00:14:59,390
Gartner's Magic Quadrant and chose one

385
00:14:59,390 --> 00:15:00,610
of the vendors that was a leader and

386
00:15:00,610 --> 00:15:03,080
they had a couple of us on the call with

387
00:15:03,080 --> 00:15:05,750
them and so I asked the vendor do you

388
00:15:05,750 --> 00:15:08,150
have ansible modules he went into the

389
00:15:08,150 --> 00:15:13,339
response however robust API okay that

390
00:15:13,339 --> 00:15:15,350
didn't really answer my question do you

391
00:15:15,350 --> 00:15:17,570
have an API documentation so that we can

392
00:15:17,570 --> 00:15:19,730
write ansible modules can you guess the

393
00:15:19,730 --> 00:15:24,380
response we've got a robust API what did

394
00:15:24,380 --> 00:15:27,000
that vendor tell us that you

395
00:15:27,000 --> 00:15:28,920
you as the customer are going to have to

396
00:15:28,920 --> 00:15:31,680
implement all of this yourselves so when

397
00:15:31,680 --> 00:15:33,870
we look at imperative ap is that's what

398
00:15:33,870 --> 00:15:35,340
that is you have to come up with the

399
00:15:35,340 --> 00:15:38,370
process so an apparant of api tells the

400
00:15:38,370 --> 00:15:40,080
system how to do something every step of

401
00:15:40,080 --> 00:15:42,330
the way the common analogy I give is

402
00:15:42,330 --> 00:15:44,910
who's familiar with subway right I go in

403
00:15:44,910 --> 00:15:47,280
I get a sandwich I'm gonna have to tell

404
00:15:47,280 --> 00:15:48,900
the person behind the counter everything

405
00:15:48,900 --> 00:15:50,760
they have to do to make that sandwich

406
00:15:50,760 --> 00:15:53,220
now I have the sandwich in my head the

407
00:15:53,220 --> 00:15:55,380
idea that in state that end goal that I

408
00:15:55,380 --> 00:15:56,670
want that's the quote of your

409
00:15:56,670 --> 00:15:58,770
application so I tell them what type of

410
00:15:58,770 --> 00:16:00,300
bread what whether I want it toasted

411
00:16:00,300 --> 00:16:03,510
what toppings all of this process so yes

412
00:16:03,510 --> 00:16:05,310
they are facilitating the making of my

413
00:16:05,310 --> 00:16:07,470
sandwich but I am still heavily involved

414
00:16:07,470 --> 00:16:09,840
and I have to know the sandwich I want

415
00:16:09,840 --> 00:16:12,720
versus a declarative API tell the system

416
00:16:12,720 --> 00:16:14,370
what you want and let it figure out how

417
00:16:14,370 --> 00:16:16,200
it achieves that so this is a Jimmy

418
00:16:16,200 --> 00:16:18,450
John's approach right no matter where I

419
00:16:18,450 --> 00:16:19,800
go in the United States I know that I

420
00:16:19,800 --> 00:16:21,390
can order number 14 which is a

421
00:16:21,390 --> 00:16:23,130
bootlegger and it will be the same

422
00:16:23,130 --> 00:16:26,010
everywhere I go now I don't have to tell

423
00:16:26,010 --> 00:16:27,660
the person how to make the bootlegger

424
00:16:27,660 --> 00:16:30,030
they know how to do it and another

425
00:16:30,030 --> 00:16:31,680
important thing about this process is it

426
00:16:31,680 --> 00:16:33,480
still allows some variances right I can

427
00:16:33,480 --> 00:16:35,490
add cheese or I cannot have cheese but

428
00:16:35,490 --> 00:16:38,370
it doesn't affect that sandwich this is

429
00:16:38,370 --> 00:16:39,750
where declarative API is become

430
00:16:39,750 --> 00:16:41,850
extremely powerful it removes of domain

431
00:16:41,850 --> 00:16:44,010
level expertise it's required to deploy

432
00:16:44,010 --> 00:16:47,430
security tools and it allows your net

433
00:16:47,430 --> 00:16:49,320
ops your set cops and your devops teams

434
00:16:49,320 --> 00:16:52,050
to really focus on what it is they want

435
00:16:52,050 --> 00:16:54,750
to achieve that in-state and not how

436
00:16:54,750 --> 00:16:56,910
they achieve it so a lot of

437
00:16:56,910 --> 00:16:58,410
organizations when they look at

438
00:16:58,410 --> 00:16:59,940
automation they start off with

439
00:16:59,940 --> 00:17:02,100
imperative processes but I will tell you

440
00:17:02,100 --> 00:17:04,589
eventually it will not scale one of the

441
00:17:04,589 --> 00:17:06,270
customers I was working with they were

442
00:17:06,270 --> 00:17:08,339
down this path right mind you this is a

443
00:17:08,339 --> 00:17:11,130
fortune 50 customer they had probably

444
00:17:11,130 --> 00:17:13,109
about 30 deployment patterns today all

445
00:17:13,109 --> 00:17:14,939
imperative they thought that they were

446
00:17:14,939 --> 00:17:17,220
going down the right path and we had to

447
00:17:17,220 --> 00:17:18,540
come in and kind of tell them their baby

448
00:17:18,540 --> 00:17:20,459
was ugly and the reason we had to do

449
00:17:20,459 --> 00:17:22,290
that is that they will reach a point

450
00:17:22,290 --> 00:17:24,689
that no amount of money and no amount of

451
00:17:24,689 --> 00:17:26,099
extra personnel will allow them to

452
00:17:26,099 --> 00:17:28,890
employ a new application because that

453
00:17:28,890 --> 00:17:30,750
imperative process has to be recreated

454
00:17:30,750 --> 00:17:33,570
every time versus a declarative model is

455
00:17:33,570 --> 00:17:36,030
something you can iterate upon that same

456
00:17:36,030 --> 00:17:38,220
customer was able to take those 30 apps

457
00:17:38,220 --> 00:17:40,320
and create sick

458
00:17:40,320 --> 00:17:42,509
declarative type of applications that

459
00:17:42,509 --> 00:17:45,720
address those same use cases they now

460
00:17:45,720 --> 00:17:48,570
can take on new applications much much

461
00:17:48,570 --> 00:17:50,639
faster so the director of automation

462
00:17:50,639 --> 00:17:52,380
there started simple this is something I

463
00:17:52,380 --> 00:17:54,450
would really really stress he said I

464
00:17:54,450 --> 00:17:55,610
want three flavors of ice cream

465
00:17:55,610 --> 00:17:58,620
chocolate vanilla strawberry all of my

466
00:17:58,620 --> 00:18:01,139
vendors need to help me deliver those

467
00:18:01,139 --> 00:18:04,409
three flavors of ice cream now we get

468
00:18:04,409 --> 00:18:06,960
back to culture here it's one thing to

469
00:18:06,960 --> 00:18:08,580
be able deliver them but they also

470
00:18:08,580 --> 00:18:10,620
needed all the other business units to

471
00:18:10,620 --> 00:18:12,779
understand that for us to be successful

472
00:18:12,779 --> 00:18:14,580
those three flavors of ice cream are yet

473
00:18:14,580 --> 00:18:16,320
we're not saying you can't have another

474
00:18:16,320 --> 00:18:18,450
but you can't have a developer just come

475
00:18:18,450 --> 00:18:20,549
up to me and say hey my app requires

476
00:18:20,549 --> 00:18:22,769
this custom HTTP header and therefore

477
00:18:22,769 --> 00:18:24,299
you need to redo all your deployments

478
00:18:24,299 --> 00:18:27,929
that doesn't scale so new flavors or in

479
00:18:27,929 --> 00:18:29,789
this case unique snowflakes can happen

480
00:18:29,789 --> 00:18:31,950
but they required VP or director level

481
00:18:31,950 --> 00:18:34,379
approval everyone was ok with that that

482
00:18:34,379 --> 00:18:35,549
meant that they could get their apps to

483
00:18:35,549 --> 00:18:37,500
market faster now eventually those

484
00:18:37,500 --> 00:18:39,870
snowflakes will build up to a new flavor

485
00:18:39,870 --> 00:18:41,669
of ice cream and that's where they kind

486
00:18:41,669 --> 00:18:43,379
of scaled out right but they were able

487
00:18:43,379 --> 00:18:45,480
to do it substantially faster that team

488
00:18:45,480 --> 00:18:47,789
went from an app being deployed in six

489
00:18:47,789 --> 00:18:50,159
weeks to now they couldn't deploy an app

490
00:18:50,159 --> 00:18:52,200
in a matter of hours and if you have a

491
00:18:52,200 --> 00:18:54,450
new application type that they hadn't

492
00:18:54,450 --> 00:18:56,820
seen before it takes about a day and

493
00:18:56,820 --> 00:18:58,080
that's really about getting the

494
00:18:58,080 --> 00:19:01,889
approvals done so the lessons learned

495
00:19:01,889 --> 00:19:03,029
here some of the things I want to leave

496
00:19:03,029 --> 00:19:05,340
you with is empowerment other developers

497
00:19:05,340 --> 00:19:08,279
and this is where we have to really

498
00:19:08,279 --> 00:19:11,279
break down those silos I have to trust

499
00:19:11,279 --> 00:19:13,080
that the developer will choose the right

500
00:19:13,080 --> 00:19:15,929
tool and will do was required to meet

501
00:19:15,929 --> 00:19:18,809
corporate compliance this means that if

502
00:19:18,809 --> 00:19:20,879
your organization today does not allow a

503
00:19:20,879 --> 00:19:23,610
developer to deploy infrastructure so

504
00:19:23,610 --> 00:19:24,570
many of you have probably heard

505
00:19:24,570 --> 00:19:26,460
infrastructure is code right if they

506
00:19:26,460 --> 00:19:27,629
don't have the ability to deploy

507
00:19:27,629 --> 00:19:30,090
infrastructure on their own then ask

508
00:19:30,090 --> 00:19:32,340
yourself why is that is that a technical

509
00:19:32,340 --> 00:19:34,169
limitation that we're not there yet or

510
00:19:34,169 --> 00:19:36,360
is that a trust issue if it's a trust

511
00:19:36,360 --> 00:19:37,950
issue I would challenge you to try to

512
00:19:37,950 --> 00:19:40,259
address that evaluate how we can break

513
00:19:40,259 --> 00:19:44,759
down that barrier automation is key we

514
00:19:44,759 --> 00:19:47,100
have to do more than just simply having

515
00:19:47,100 --> 00:19:49,200
an API if a vendor comes to you and says

516
00:19:49,200 --> 00:19:50,730
you have an API that's just no longer

517
00:19:50,730 --> 00:19:51,450
enough to have a

518
00:19:51,450 --> 00:19:53,580
the table what can I do with that API

519
00:19:53,580 --> 00:19:55,590
without having to be an expert in your

520
00:19:55,590 --> 00:19:58,260
product the other things we have to look

521
00:19:58,260 --> 00:20:00,840
at is I'll kind of give this as a

522
00:20:00,840 --> 00:20:03,690
stretch to you is that as teams choose

523
00:20:03,690 --> 00:20:06,720
new tools I need to start looking at

524
00:20:06,720 --> 00:20:08,760
moving past integrating directly against

525
00:20:08,760 --> 00:20:11,549
vendor api's and starting to build

526
00:20:11,549 --> 00:20:14,370
it's more of a securities of service for

527
00:20:14,370 --> 00:20:15,750
those of us with development backgrounds

528
00:20:15,750 --> 00:20:17,519
we're already used to this right I tried

529
00:20:17,519 --> 00:20:19,350
to avoid coding directly against a

530
00:20:19,350 --> 00:20:21,360
library and instead I tried to build

531
00:20:21,360 --> 00:20:23,399
like an API buffer that way if that

532
00:20:23,399 --> 00:20:25,260
library has a vulnerability or that

533
00:20:25,260 --> 00:20:26,850
library all of a sudden is no longer

534
00:20:26,850 --> 00:20:28,649
developed or four guys that code Python

535
00:20:28,649 --> 00:20:31,019
they didn't write it in Python 30 which

536
00:20:31,019 --> 00:20:32,429
is gonna bite me in the butt here in a

537
00:20:32,429 --> 00:20:34,529
couple months I can switch that library

538
00:20:34,529 --> 00:20:36,000
out with having to refactor my entire

539
00:20:36,000 --> 00:20:38,370
application well the same thing is true

540
00:20:38,370 --> 00:20:40,080
with security right taking those

541
00:20:40,080 --> 00:20:41,549
development practices that we've been

542
00:20:41,549 --> 00:20:43,590
used to and applying them to security

543
00:20:43,590 --> 00:20:46,919
the last thing is ease of use the story

544
00:20:46,919 --> 00:20:48,750
I told you about earlier why do you

545
00:20:48,750 --> 00:20:50,429
think they deployed directly into AWS

546
00:20:50,429 --> 00:20:52,260
versus going through the normal process

547
00:20:52,260 --> 00:20:54,659
and in working with security and working

548
00:20:54,659 --> 00:20:58,590
with IT it was easy they chose to bypass

549
00:20:58,590 --> 00:21:00,570
IT insecurity because they know that

550
00:21:00,570 --> 00:21:01,830
security wouldn't have approved what

551
00:21:01,830 --> 00:21:04,260
they were trying to do so how do we make

552
00:21:04,260 --> 00:21:07,230
our processes and easier for the

553
00:21:07,230 --> 00:21:09,750
developers to consume part of that is

554
00:21:09,750 --> 00:21:12,360
giving them integrations into their code

555
00:21:12,360 --> 00:21:13,980
deployment pipelines that automatically

556
00:21:13,980 --> 00:21:16,110
put the security at least at a level

557
00:21:16,110 --> 00:21:17,490
that allows us to meet corporate

558
00:21:17,490 --> 00:21:20,370
compliance the other thing is we must

559
00:21:20,370 --> 00:21:23,580
make it easier this is a challenge that

560
00:21:23,580 --> 00:21:25,440
I work on with a lot of customers that

561
00:21:25,440 --> 00:21:27,000
when they start their automation journey

562
00:21:27,000 --> 00:21:29,730
they're like hey look at these three

563
00:21:29,730 --> 00:21:31,559
thousand lines of ansible that tie all

564
00:21:31,559 --> 00:21:33,299
this together and we tell them that's a

565
00:21:33,299 --> 00:21:35,279
good first step but if you're gonna

566
00:21:35,279 --> 00:21:37,110
expect your developer to try to do that

567
00:21:37,110 --> 00:21:39,450
we need to make it simpler and that's

568
00:21:39,450 --> 00:21:41,100
where I would challenge you or that next

569
00:21:41,100 --> 00:21:43,950
stretch goal and the final one is we

570
00:21:43,950 --> 00:21:46,500
have to move security away from being a

571
00:21:46,500 --> 00:21:49,740
service that IT provides and as security

572
00:21:49,740 --> 00:21:51,240
has to almost become its own business

573
00:21:51,240 --> 00:21:53,730
unit and what I mean by that is you have

574
00:21:53,730 --> 00:21:55,830
to start considering the product that

575
00:21:55,830 --> 00:21:58,110
you're offering your internal customer

576
00:21:58,110 --> 00:22:00,269
in today's market there's a lot of

577
00:22:00,269 --> 00:22:03,360
things that I can use and if I feel that

578
00:22:03,360 --> 00:22:04,410
choosing a SAS

579
00:22:04,410 --> 00:22:05,610
service from some of their vendor

580
00:22:05,610 --> 00:22:08,250
achieves my goals then I'm gonna choose

581
00:22:08,250 --> 00:22:11,160
that because it's easier versus it may

582
00:22:11,160 --> 00:22:12,560
not meet all the corporate compliance

583
00:22:12,560 --> 00:22:15,060
but if security starts to think like a

584
00:22:15,060 --> 00:22:16,800
business unit then they start to think

585
00:22:16,800 --> 00:22:18,690
about how the internal customer consumes

586
00:22:18,690 --> 00:22:21,000
their product and start to think about

587
00:22:21,000 --> 00:22:24,030
how do I Drive my goals away from just

588
00:22:24,030 --> 00:22:25,380
ensuring that hey we didn't have a

589
00:22:25,380 --> 00:22:27,390
breach to ensuring that we didn't have a

590
00:22:27,390 --> 00:22:29,940
breach and that I made it easier for my

591
00:22:29,940 --> 00:22:31,920
developers to nate lee build security

592
00:22:31,920 --> 00:22:35,610
into their pipelines so this is where

593
00:22:35,610 --> 00:22:38,310
I'd like to wrap up I'm here can

594
00:22:38,310 --> 00:22:40,200
definitely answer questions but kind of

595
00:22:40,200 --> 00:22:41,670
some guidance that I've seen working

596
00:22:41,670 --> 00:22:44,310
with customers over my career at f5 and

597
00:22:44,310 --> 00:22:46,260
then as a development for 14 years so

598
00:22:46,260 --> 00:22:48,490
thank you

599
00:22:48,490 --> 00:22:57,609
[Applause]

