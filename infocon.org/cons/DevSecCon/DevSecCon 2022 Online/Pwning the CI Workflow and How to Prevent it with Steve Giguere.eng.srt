1
00:00:00,470 --> 00:00:04,240
[Music]

2
00:00:04,240 --> 00:00:06,640
now um ashish will be co-hosting with me

3
00:00:06,640 --> 00:00:08,240
we did have vandana before doing and

4
00:00:08,240 --> 00:00:09,679
thank you so much vandana for cohes

5
00:00:09,679 --> 00:00:12,160
hosting with me all this while um we do

6
00:00:12,160 --> 00:00:14,719
have steve now with us as well and i'll

7
00:00:14,719 --> 00:00:18,160
bring him on and steve hi steve

8
00:00:18,160 --> 00:00:20,320
it's chief wow camera quality is amazing

9
00:00:20,320 --> 00:00:24,160
man what do you have like an slr

10
00:00:25,439 --> 00:00:28,240
oh you're mute i think you're a perfect

11
00:00:28,240 --> 00:00:30,240
uh rookie mistake i just spoke about

12
00:00:30,240 --> 00:00:32,000
hybrid remote and you just about the

13
00:00:32,000 --> 00:00:33,280
rookie mistake of having yourself on

14
00:00:33,280 --> 00:00:35,680
mute i started off the thing with being

15
00:00:35,680 --> 00:00:37,520
on mute so i think i've already like

16
00:00:37,520 --> 00:00:38,760
popped that

17
00:00:38,760 --> 00:00:40,800
[Music]

18
00:00:40,800 --> 00:00:42,640
yes yes i have an okay i have an okay

19
00:00:42,640 --> 00:00:45,600
camera

20
00:00:45,600 --> 00:00:46,960
it looks like i'm okay looking through a

21
00:00:46,960 --> 00:00:48,239
glass man i don't know how it's an okay

22
00:00:48,239 --> 00:00:50,000
camera

23
00:00:50,000 --> 00:00:50,800
no

24
00:00:50,800 --> 00:00:53,520
i like to stay you know quite clear and

25
00:00:53,520 --> 00:00:55,280
uh steve you're talking about pointing

26
00:00:55,280 --> 00:00:58,800
the ci workflow and how to prevent it um

27
00:00:58,800 --> 00:01:00,719
so if you're ready to go we might give

28
00:01:00,719 --> 00:01:02,800
the stage to you and let people hear

29
00:01:02,800 --> 00:01:05,360
about your talk i'm ready to roll

30
00:01:05,360 --> 00:01:07,680
amazing good luck thank you i'm gonna

31
00:01:07,680 --> 00:01:10,479
need it a lot of moving parts

32
00:01:10,479 --> 00:01:13,840
all right uh let's go some great talks

33
00:01:13,840 --> 00:01:15,520
wow uh she's always very difficult to

34
00:01:15,520 --> 00:01:17,840
follow um but i'm gonna do my best i

35
00:01:17,840 --> 00:01:20,400
haven't got a dog in the room but i will

36
00:01:20,400 --> 00:01:21,840
i don't know maybe bark myself a little

37
00:01:21,840 --> 00:01:23,520
bit if somebody comes nearby

38
00:01:23,520 --> 00:01:25,439
this is uh pointing the ci the get up

39
00:01:25,439 --> 00:01:27,200
action edition uh welcome my name is

40
00:01:27,200 --> 00:01:28,880
steve jager

41
00:01:28,880 --> 00:01:31,119
uh let's let's do the obligatory a

42
00:01:31,119 --> 00:01:32,560
little bit about me

43
00:01:32,560 --> 00:01:34,479
uh i'm a developer advocate for bridge

44
00:01:34,479 --> 00:01:36,960
crew i've been writing code since uh

45
00:01:36,960 --> 00:01:38,560
1990

46
00:01:38,560 --> 00:01:40,720
actually should be 80. that's even more

47
00:01:40,720 --> 00:01:42,000
embarrassing

48
00:01:42,000 --> 00:01:44,240
i i was involved in quality automation

49
00:01:44,240 --> 00:01:46,399
which is an automotive oddly we're very

50
00:01:46,399 --> 00:01:48,399
uh very gene kim

51
00:01:48,399 --> 00:01:50,240
and i've been doing cyber security since

52
00:01:50,240 --> 00:01:52,799
2014 working for a bunch of companies

53
00:01:52,799 --> 00:01:54,720
i have i am co-organizer of the

54
00:01:54,720 --> 00:01:57,280
devsecops and gathering in london of all

55
00:01:57,280 --> 00:01:58,799
places what a surprise

56
00:01:58,799 --> 00:02:00,240
i have a cloud native security twitch

57
00:02:00,240 --> 00:02:03,280
show called c9k and i have huge jet lag

58
00:02:03,280 --> 00:02:05,439
and a cold because i just spent a few

59
00:02:05,439 --> 00:02:07,360
weeks in canada seeing my family i'm

60
00:02:07,360 --> 00:02:10,318
based in england so i feel awesome right

61
00:02:10,318 --> 00:02:12,160
now if you like to connect to me and you

62
00:02:12,160 --> 00:02:15,120
just like to randomly click qr codes

63
00:02:15,120 --> 00:02:16,879
we'll do a whole other talk about that

64
00:02:16,879 --> 00:02:19,280
but there it is there

65
00:02:19,280 --> 00:02:20,959
all right brief agenda just talking

66
00:02:20,959 --> 00:02:22,959
about what github actions are what could

67
00:02:22,959 --> 00:02:24,959
possibly go wrong different threats

68
00:02:24,959 --> 00:02:25,760
different

69
00:02:25,760 --> 00:02:27,920
styles of insiders

70
00:02:27,920 --> 00:02:29,599
and the attack factors associated with

71
00:02:29,599 --> 00:02:30,480
that and then a little bit about

72
00:02:30,480 --> 00:02:31,760
prevention so that we have some

73
00:02:31,760 --> 00:02:35,280
takeaways here today

74
00:02:35,280 --> 00:02:36,720
github action workflows a lot of the

75
00:02:36,720 --> 00:02:38,319
github actions contents i'm putting in

76
00:02:38,319 --> 00:02:39,760
here i'm taking straight out of their

77
00:02:39,760 --> 00:02:41,040
documentation because i don't want to

78
00:02:41,040 --> 00:02:42,800
misquote and i think it's important that

79
00:02:42,800 --> 00:02:44,239
people get familiar with the

80
00:02:44,239 --> 00:02:45,760
documentation that is available and this

81
00:02:45,760 --> 00:02:47,840
is a quote directly

82
00:02:47,840 --> 00:02:49,200
from there

83
00:02:49,200 --> 00:02:50,480
they are

84
00:02:50,480 --> 00:02:52,480
workflows are defined in the dot github

85
00:02:52,480 --> 00:02:55,680
slash workflows directory and repository

86
00:02:55,680 --> 00:02:57,519
and you can have multiple workflows they

87
00:02:57,519 --> 00:02:59,440
can do a whole bunch of things and the

88
00:02:59,440 --> 00:03:01,040
examples that they provide already are

89
00:03:01,040 --> 00:03:02,879
for example a workflow to build and test

90
00:03:02,879 --> 00:03:04,720
pull requests deploy your application or

91
00:03:04,720 --> 00:03:06,959
maybe add a label every time someone

92
00:03:06,959 --> 00:03:08,400
opens a new issue these are just some

93
00:03:08,400 --> 00:03:12,319
examples that you can do

94
00:03:12,319 --> 00:03:14,159
very simple example here again straight

95
00:03:14,159 --> 00:03:15,519
out of the docs

96
00:03:15,519 --> 00:03:17,040
just to break down what it looks like

97
00:03:17,040 --> 00:03:18,640
written here in yaml

98
00:03:18,640 --> 00:03:21,280
on an event of type push

99
00:03:21,280 --> 00:03:23,440
then certain steps will run and you can

100
00:03:23,440 --> 00:03:25,360
see it will run on a runner it can be a

101
00:03:25,360 --> 00:03:26,959
github-provided runner or it can be a

102
00:03:26,959 --> 00:03:29,120
self-hosted runner and we'll get into

103
00:03:29,120 --> 00:03:30,720
that why that can be considerably more

104
00:03:30,720 --> 00:03:32,400
dangerous should any of these things i'm

105
00:03:32,400 --> 00:03:34,480
about to do become realized in your

106
00:03:34,480 --> 00:03:36,080
repository

107
00:03:36,080 --> 00:03:38,239
so you can check it out install

108
00:03:38,239 --> 00:03:40,400
run and etc etc there's a whole load of

109
00:03:40,400 --> 00:03:41,680
things you can do with them very very

110
00:03:41,680 --> 00:03:43,840
straightforward

111
00:03:43,840 --> 00:03:45,680
the fundamental problem we're coming up

112
00:03:45,680 --> 00:03:47,120
with here is that

113
00:03:47,120 --> 00:03:49,360
github can and often will run new

114
00:03:49,360 --> 00:03:53,439
workflows in the github workflow path

115
00:03:53,439 --> 00:03:58,400
even if those workflows are the commit

116
00:03:58,959 --> 00:04:00,879
metadata issues like issue name issue

117
00:04:00,879 --> 00:04:02,799
description that are associated and

118
00:04:02,799 --> 00:04:03,680
maybe

119
00:04:03,680 --> 00:04:06,400
visible to workflows

120
00:04:06,400 --> 00:04:09,680
are often used as unsanitized inputs in

121
00:04:09,680 --> 00:04:11,519
a very sort of traditional app set kind

122
00:04:11,519 --> 00:04:12,959
of way

123
00:04:12,959 --> 00:04:15,120
and finally the workflow directory

124
00:04:15,120 --> 00:04:17,279
shares the same access controls as the

125
00:04:17,279 --> 00:04:20,079
entire repository by default there are

126
00:04:20,079 --> 00:04:22,000
ways you can mitigate that risk and

127
00:04:22,000 --> 00:04:23,280
we'll talk a little bit more about that

128
00:04:23,280 --> 00:04:25,199
in a moment and in reality this is not

129
00:04:25,199 --> 00:04:26,960
your ideal scenario is it there's a lot

130
00:04:26,960 --> 00:04:30,799
of power in that workflow directory

131
00:04:31,199 --> 00:04:33,680
now a few github action attack vectors

132
00:04:33,680 --> 00:04:35,199
okay well we've got the three different

133
00:04:35,199 --> 00:04:37,280
categories there adding a label build

134
00:04:37,280 --> 00:04:40,000
and test deploy your application

135
00:04:40,000 --> 00:04:42,880
well what if i were to try dixie to

136
00:04:42,880 --> 00:04:44,720
execute a command

137
00:04:44,720 --> 00:04:48,160
injection via the creating a new issue

138
00:04:48,160 --> 00:04:50,080
perhaps i could well we'll see what we

139
00:04:50,080 --> 00:04:51,360
could do

140
00:04:51,360 --> 00:04:53,040
no spoilers

141
00:04:53,040 --> 00:04:54,320
a workflow to build and test pull

142
00:04:54,320 --> 00:04:56,720
requests i could push a new workflow

143
00:04:56,720 --> 00:04:58,400
using the github api to bypass the

144
00:04:58,400 --> 00:05:00,960
required minimum approval

145
00:05:00,960 --> 00:05:02,720
okay

146
00:05:02,720 --> 00:05:04,960
or pardon me a workflow to deploy your

147
00:05:04,960 --> 00:05:06,639
new application well that might mean i

148
00:05:06,639 --> 00:05:08,160
have environment variables that might be

149
00:05:08,160 --> 00:05:09,759
damaging to my particularly if i'm on a

150
00:05:09,759 --> 00:05:11,600
self-hosted runner so what if i tried to

151
00:05:11,600 --> 00:05:13,199
exfiltrate all of my environment

152
00:05:13,199 --> 00:05:15,680
variables maybe and my secrets

153
00:05:15,680 --> 00:05:17,759
what if i were to i don't know could i

154
00:05:17,759 --> 00:05:19,280
create could i create a reverse shell

155
00:05:19,280 --> 00:05:20,720
via a workflow

156
00:05:20,720 --> 00:05:22,560
there's a lot of things i could do given

157
00:05:22,560 --> 00:05:25,840
the right credentials

158
00:05:26,080 --> 00:05:27,759
so here's my attacker's guide this is

159
00:05:27,759 --> 00:05:29,680
probably a really bad slide to have if

160
00:05:29,680 --> 00:05:30,960
there are any attackers viewing

161
00:05:30,960 --> 00:05:32,639
hopefully all defenders

162
00:05:32,639 --> 00:05:34,240
my plan a would be a very simple

163
00:05:34,240 --> 00:05:36,240
external attack i would submit a

164
00:05:36,240 --> 00:05:37,680
workflow i could be new to the

165
00:05:37,680 --> 00:05:39,039
environment

166
00:05:39,039 --> 00:05:40,960
now when that happens we can see over

167
00:05:40,960 --> 00:05:42,800
here on the right

168
00:05:42,800 --> 00:05:44,080
it doesn't automatically run my

169
00:05:44,080 --> 00:05:46,000
workflows there is a button there that

170
00:05:46,000 --> 00:05:48,800
says approve and run now the confusing

171
00:05:48,800 --> 00:05:51,039
thing about that is that unless i click

172
00:05:51,039 --> 00:05:53,120
on this learn more

173
00:05:53,120 --> 00:05:54,800
very subtly here

174
00:05:54,800 --> 00:05:56,639
and i've i will be taken to the

175
00:05:56,639 --> 00:05:58,800
documentation you can see above that

176
00:05:58,800 --> 00:06:01,280
does provide you a warning that says you

177
00:06:01,280 --> 00:06:02,880
should be especially alert to any

178
00:06:02,880 --> 00:06:05,440
proposed changes to the github workflows

179
00:06:05,440 --> 00:06:06,639
directory

180
00:06:06,639 --> 00:06:10,240
but it's not a big red flag with the

181
00:06:10,240 --> 00:06:12,160
sound to tell you

182
00:06:12,160 --> 00:06:14,240
this is a first-time contributor who's

183
00:06:14,240 --> 00:06:15,919
never run anything who's submitting

184
00:06:15,919 --> 00:06:17,759
something to the workflows directory

185
00:06:17,759 --> 00:06:18,800
that is

186
00:06:18,800 --> 00:06:21,440
a let's say indicator of compromise kind

187
00:06:21,440 --> 00:06:23,520
of thing it's bad

188
00:06:23,520 --> 00:06:25,039
but the reality is that a lot of your

189
00:06:25,039 --> 00:06:27,039
workflows are there to check

190
00:06:27,039 --> 00:06:29,120
code content so there's a lot of

191
00:06:29,120 --> 00:06:30,960
potentially security checks in there and

192
00:06:30,960 --> 00:06:33,600
you why your instinct might be to click

193
00:06:33,600 --> 00:06:35,120
approve and run why wouldn't i want that

194
00:06:35,120 --> 00:06:36,960
i want to check this content so if

195
00:06:36,960 --> 00:06:38,880
you're not careful and you do just click

196
00:06:38,880 --> 00:06:39,840
that

197
00:06:39,840 --> 00:06:41,759
bad things can happen

198
00:06:41,759 --> 00:06:43,840
the second of course is plan b if you're

199
00:06:43,840 --> 00:06:45,520
not going to be so bold

200
00:06:45,520 --> 00:06:47,680
become a malicious insider submit some

201
00:06:47,680 --> 00:06:49,520
good first-time contributions maybe a

202
00:06:49,520 --> 00:06:52,639
read me maybe maybe some actual helpful

203
00:06:52,639 --> 00:06:54,960
approval helpful workflows

204
00:06:54,960 --> 00:06:57,440
to an environment being a force for good

205
00:06:57,440 --> 00:06:58,880
and then attempt to become a

206
00:06:58,880 --> 00:07:00,800
collaborator where what you can do

207
00:07:00,800 --> 00:07:02,720
radically changes

208
00:07:02,720 --> 00:07:04,720
what's interesting is that they're the

209
00:07:04,720 --> 00:07:07,039
the github defaults are pretty good like

210
00:07:07,039 --> 00:07:09,039
github is very securable it's a little

211
00:07:09,039 --> 00:07:10,880
bit like the cloud but it's not

212
00:07:10,880 --> 00:07:13,120
necessarily secure by default i think

213
00:07:13,120 --> 00:07:14,639
that's one of the key takeaways here and

214
00:07:14,639 --> 00:07:15,759
what we're going to try and learn from

215
00:07:15,759 --> 00:07:18,319
this talk

216
00:07:19,199 --> 00:07:20,560
all right

217
00:07:20,560 --> 00:07:22,880
now here's an example this is a real

218
00:07:22,880 --> 00:07:26,000
world non-fiction example

219
00:07:26,000 --> 00:07:27,840
of what happened in our actual

220
00:07:27,840 --> 00:07:29,360
environment i work on an open source

221
00:07:29,360 --> 00:07:31,840
project regularly called chekov

222
00:07:31,840 --> 00:07:32,639
and

223
00:07:32,639 --> 00:07:34,560
we had a pull request you can see it's

224
00:07:34,560 --> 00:07:35,919
closed

225
00:07:35,919 --> 00:07:38,000
called build.yaml

226
00:07:38,000 --> 00:07:39,039
and

227
00:07:39,039 --> 00:07:41,520
this is what it looked like

228
00:07:41,520 --> 00:07:43,840
they had i'm thinking we our conclusion

229
00:07:43,840 --> 00:07:45,680
is that this was somebody else's account

230
00:07:45,680 --> 00:07:48,400
takeover and this was a bot that came in

231
00:07:48,400 --> 00:07:51,759
it deleted our entire build workflow

232
00:07:51,759 --> 00:07:53,759
and changed it to

233
00:07:53,759 --> 00:07:55,680
and you can see we run on self-hosted

234
00:07:55,680 --> 00:07:57,360
right so this is bad if this had

235
00:07:57,360 --> 00:08:00,960
happened it just ran a ps and an end

236
00:08:00,960 --> 00:08:02,240
and that was going to the results of

237
00:08:02,240 --> 00:08:04,000
which would be in our logs which could

238
00:08:04,000 --> 00:08:05,840
have been bad exposing all sorts of

239
00:08:05,840 --> 00:08:07,199
things to

240
00:08:07,199 --> 00:08:08,639
our github blogs that this person could

241
00:08:08,639 --> 00:08:11,360
then read now this came in and the

242
00:08:11,360 --> 00:08:12,960
proven run was there and we did not

243
00:08:12,960 --> 00:08:14,319
click the improvement run it was so

244
00:08:14,319 --> 00:08:16,240
blatant it was ridiculous but

245
00:08:16,240 --> 00:08:17,680
this was out there this really did

246
00:08:17,680 --> 00:08:21,199
happen not that long ago

247
00:08:22,560 --> 00:08:23,759
all right

248
00:08:23,759 --> 00:08:25,840
now we're going to do number one and in

249
00:08:25,840 --> 00:08:27,520
order to do that though i need to

250
00:08:27,520 --> 00:08:29,199
introduce you to the characters involved

251
00:08:29,199 --> 00:08:30,960
in this in this story

252
00:08:30,960 --> 00:08:32,640
there is

253
00:08:32,640 --> 00:08:33,679
a

254
00:08:33,679 --> 00:08:35,599
webhook receiving site this is

255
00:08:35,599 --> 00:08:37,360
webhack.site if you don't use this in

256
00:08:37,360 --> 00:08:39,679
demos or for debugging it's amazing just

257
00:08:39,679 --> 00:08:42,559
recreate just creates a receiver for api

258
00:08:42,559 --> 00:08:44,800
calls

259
00:08:44,800 --> 00:08:47,120
i have this malicious character called

260
00:08:47,120 --> 00:08:49,279
loud canadian

261
00:08:49,279 --> 00:08:52,000
and over here i have steve g who has

262
00:08:52,000 --> 00:08:53,279
created

263
00:08:53,279 --> 00:08:54,959
a repository

264
00:08:54,959 --> 00:08:56,720
very simple there's nothing nothing

265
00:08:56,720 --> 00:08:59,040
really in it it's brand new

266
00:08:59,040 --> 00:09:02,560
and it's just a readme

267
00:09:03,839 --> 00:09:05,920
and i have a default this is the default

268
00:09:05,920 --> 00:09:07,440
if you just create an action and it says

269
00:09:07,440 --> 00:09:09,279
what's the basic one that you have

270
00:09:09,279 --> 00:09:11,760
created

271
00:09:13,680 --> 00:09:15,440
that they give you just so i have a

272
00:09:15,440 --> 00:09:16,880
workflow directory created that's all

273
00:09:16,880 --> 00:09:18,080
i've done i haven't created i haven't

274
00:09:18,080 --> 00:09:20,880
created anything special else in here

275
00:09:20,880 --> 00:09:23,839
super super simple

276
00:09:24,000 --> 00:09:25,360
and now

277
00:09:25,360 --> 00:09:28,160
i'm over here i'm as loud canadian the

278
00:09:28,160 --> 00:09:29,600
trusted

279
00:09:29,600 --> 00:09:32,800
everyone trusts canadians right

280
00:09:32,800 --> 00:09:34,240
so i'm looking at this and you're okay

281
00:09:34,240 --> 00:09:35,680
all right great so what i'm going to do

282
00:09:35,680 --> 00:09:37,200
is i'm going to fork that so i have a

283
00:09:37,200 --> 00:09:40,640
copy of it in my own world

284
00:09:40,640 --> 00:09:42,399
and i can start to create contributions

285
00:09:42,399 --> 00:09:43,279
to it

286
00:09:43,279 --> 00:09:45,680
wonderful how about that right

287
00:09:45,680 --> 00:09:48,160
so what i'm going to do is i'm going to

288
00:09:48,160 --> 00:09:50,480
create a workflow

289
00:09:50,480 --> 00:09:51,920
actually and we'll see all those things

290
00:09:51,920 --> 00:09:54,720
i just said play out

291
00:09:54,720 --> 00:09:58,720
and i have my workflows directory

292
00:09:58,800 --> 00:10:00,320
looks pretty good i'm going to add a

293
00:10:00,320 --> 00:10:02,640
file

294
00:10:03,120 --> 00:10:06,800
enter here and it's called issues

295
00:10:06,800 --> 00:10:09,120
check.yaml

296
00:10:09,120 --> 00:10:10,560
looking

297
00:10:10,560 --> 00:10:13,279
good so far

298
00:10:13,680 --> 00:10:15,600
so i'm being helpful to this repository

299
00:10:15,600 --> 00:10:16,880
i'm a good person

300
00:10:16,880 --> 00:10:19,440
you know i am

301
00:10:19,440 --> 00:10:21,360
any open issue it's going to check the

302
00:10:21,360 --> 00:10:23,760
title to make sure it adheres to a

303
00:10:23,760 --> 00:10:26,560
certain format

304
00:10:26,560 --> 00:10:29,119
i like it

305
00:10:29,680 --> 00:10:31,680
i'm going to commit to my main

306
00:10:31,680 --> 00:10:32,800
yeah

307
00:10:32,800 --> 00:10:34,399
this is just locally at the moment right

308
00:10:34,399 --> 00:10:37,200
you understand that

309
00:10:37,440 --> 00:10:39,279
looking pretty good at one commit ahead

310
00:10:39,279 --> 00:10:42,079
of your gig main

311
00:10:42,079 --> 00:10:44,160
seems pretty good i'm gonna create a

312
00:10:44,160 --> 00:10:47,839
pull request back across

313
00:10:48,720 --> 00:10:51,519
fantastic

314
00:10:51,920 --> 00:10:53,440
looks good i should have a pull request

315
00:10:53,440 --> 00:10:55,920
over here now

316
00:10:57,440 --> 00:10:58,800
now remember what we saw earlier the

317
00:10:58,800 --> 00:11:01,040
approve and run there it is because i'm

318
00:11:01,040 --> 00:11:02,800
not i'm not a contributor anymore so

319
00:11:02,800 --> 00:11:04,959
this is good now i'm also committing a

320
00:11:04,959 --> 00:11:06,959
workflow that will not trigger because

321
00:11:06,959 --> 00:11:08,959
only triggers on new issues

322
00:11:08,959 --> 00:11:10,320
i can go back and check the files

323
00:11:10,320 --> 00:11:12,000
changed and i can say oh yeah i like

324
00:11:12,000 --> 00:11:13,760
that i like that this person is helping

325
00:11:13,760 --> 00:11:14,720
me

326
00:11:14,720 --> 00:11:16,800
i'm okay with that

327
00:11:16,800 --> 00:11:18,800
and so that's not a big problem i could

328
00:11:18,800 --> 00:11:21,360
approve and run

329
00:11:21,360 --> 00:11:23,839
because i do want my checks to run

330
00:11:23,839 --> 00:11:25,680
and you can see that default one run all

331
00:11:25,680 --> 00:11:28,560
it does is print out readmes

332
00:11:28,560 --> 00:11:29,920
and it's

333
00:11:29,920 --> 00:11:32,000
it's okay i know i can i can confirm and

334
00:11:32,000 --> 00:11:34,079
merge this it's not gonna be a problem i

335
00:11:34,079 --> 00:11:36,160
can go look at my actions here

336
00:11:36,160 --> 00:11:38,959
and see that it's

337
00:11:38,959 --> 00:11:41,600
in progress it all passed

338
00:11:41,600 --> 00:11:44,160
i'm a bit now euro gig is a big fan of

339
00:11:44,160 --> 00:11:46,720
uh loud canadian so

340
00:11:46,720 --> 00:11:49,680
we're going to merge that

341
00:11:50,160 --> 00:11:52,480
because they are so helpful wow thank

342
00:11:52,480 --> 00:11:55,880
you loud canadian

343
00:11:56,079 --> 00:11:58,639
i don't have any special privileges here

344
00:11:58,639 --> 00:12:01,680
nothing nothing at all

345
00:12:01,680 --> 00:12:03,279
and so what i'm going to do now is i'm

346
00:12:03,279 --> 00:12:06,399
going to create an issue

347
00:12:07,440 --> 00:12:09,920
maybe i get my friend my friend to

348
00:12:09,920 --> 00:12:12,000
create the issue

349
00:12:12,000 --> 00:12:13,760
and my issue is going to be called now

350
00:12:13,760 --> 00:12:16,399
before i do this let's just

351
00:12:16,399 --> 00:12:18,480
well now i'm going to do this now

352
00:12:18,480 --> 00:12:19,760
we're going to go ahead first we already

353
00:12:19,760 --> 00:12:21,839
started the demo so let's do it live

354
00:12:21,839 --> 00:12:23,200
and my issue title is going to be

355
00:12:23,200 --> 00:12:25,839
extremely readable

356
00:12:27,760 --> 00:12:29,920
there

357
00:12:29,920 --> 00:12:33,680
just a normal issue

358
00:12:34,720 --> 00:12:35,920
okay

359
00:12:35,920 --> 00:12:39,040
that's a crazy title isn't it

360
00:12:39,040 --> 00:12:41,120
now that was a new issue so really

361
00:12:41,120 --> 00:12:42,639
realistically

362
00:12:42,639 --> 00:12:44,399
this action should kick off and there it

363
00:12:44,399 --> 00:12:45,760
is

364
00:12:45,760 --> 00:12:47,519
that's queued up because you know it

365
00:12:47,519 --> 00:12:48,880
doesn't have priority there it is 12

366
00:12:48,880 --> 00:12:51,040
seconds it's in progress it's running i

367
00:12:51,040 --> 00:12:54,399
guess my title was uh was legit

368
00:12:54,399 --> 00:12:58,000
uh oh what's happened over here

369
00:12:59,360 --> 00:13:01,279
what did i do i

370
00:13:01,279 --> 00:13:03,760
i piped an m to a curl and sent it up to

371
00:13:03,760 --> 00:13:06,240
my web hook site and now i have all of

372
00:13:06,240 --> 00:13:08,399
the environment variables i have kind of

373
00:13:08,399 --> 00:13:10,079
accomplished

374
00:13:10,079 --> 00:13:11,200
what that person was trying to

375
00:13:11,200 --> 00:13:12,560
accomplish with us and i've done it

376
00:13:12,560 --> 00:13:14,959
completely as an outsider by sending

377
00:13:14,959 --> 00:13:16,959
something very innocuous in that was

378
00:13:16,959 --> 00:13:18,880
just checking issue titles to make sure

379
00:13:18,880 --> 00:13:20,959
that they were sane i was actually

380
00:13:20,959 --> 00:13:22,959
actively doing input sanitization and

381
00:13:22,959 --> 00:13:24,639
then the process

382
00:13:24,639 --> 00:13:25,519
i

383
00:13:25,519 --> 00:13:27,360
you did something that kind of

384
00:13:27,360 --> 00:13:29,279
circumvented and created my own lack of

385
00:13:29,279 --> 00:13:33,600
input sanitization which is bad

386
00:13:33,600 --> 00:13:34,800
and that's essentially what just

387
00:13:34,800 --> 00:13:38,000
happened now how real is this problem

388
00:13:38,000 --> 00:13:40,399
if you search on github the entirety for

389
00:13:40,399 --> 00:13:41,920
bad things

390
00:13:41,920 --> 00:13:43,360
you see people doing things like this

391
00:13:43,360 --> 00:13:44,800
all the time like there's one example

392
00:13:44,800 --> 00:13:47,600
where somebody is actually generating

393
00:13:47,600 --> 00:13:51,360
a a hugo website based on to show how

394
00:13:51,360 --> 00:13:52,959
well they're handling actions and

395
00:13:52,959 --> 00:13:54,959
creating the post title out of this

396
00:13:54,959 --> 00:13:57,120
github event issue title

397
00:13:57,120 --> 00:13:59,519
now if i were to say create a title that

398
00:13:59,519 --> 00:14:01,120
was

399
00:14:01,120 --> 00:14:03,040
session expired please log in form

400
00:14:03,040 --> 00:14:04,959
action etc etc i can actually when

401
00:14:04,959 --> 00:14:07,120
someone went to look at this title which

402
00:14:07,120 --> 00:14:09,360
was generated through github i could pop

403
00:14:09,360 --> 00:14:11,120
up a mock github login and say you were

404
00:14:11,120 --> 00:14:12,959
logged out and start

405
00:14:12,959 --> 00:14:16,800
you know getting github credentials bad

406
00:14:16,800 --> 00:14:19,680
what's the other one well

407
00:14:19,839 --> 00:14:21,680
searching other users in metadata found

408
00:14:21,680 --> 00:14:23,360
thousands thousands of examples where

409
00:14:23,360 --> 00:14:24,800
people are doing what like what i just

410
00:14:24,800 --> 00:14:26,560
did i didn't even straight up echo i

411
00:14:26,560 --> 00:14:29,040
just copied my issue title into

412
00:14:29,040 --> 00:14:31,519
a variable but because it was in quotes

413
00:14:31,519 --> 00:14:34,079
and i used those back ticks

414
00:14:34,079 --> 00:14:35,680
it reconciled the meaning of that

415
00:14:35,680 --> 00:14:37,199
backstage command because it's still

416
00:14:37,199 --> 00:14:39,839
running in bash and it then

417
00:14:39,839 --> 00:14:41,920
my quote became all my environment

418
00:14:41,920 --> 00:14:42,959
variables

419
00:14:42,959 --> 00:14:44,639
and then i was able to push that out to

420
00:14:44,639 --> 00:14:46,240
an external source

421
00:14:46,240 --> 00:14:47,199
so

422
00:14:47,199 --> 00:14:48,720
lesson one

423
00:14:48,720 --> 00:14:50,560
input sanitization be careful what you

424
00:14:50,560 --> 00:14:51,839
do with this metadata it's really

425
00:14:51,839 --> 00:14:54,160
important

426
00:14:54,160 --> 00:14:56,560
we already gave it a try so we can skip

427
00:14:56,560 --> 00:14:57,920
now what can you do with environment

428
00:14:57,920 --> 00:15:00,480
variables wow wow on a private runner

429
00:15:00,480 --> 00:15:02,560
there can be cloud or aws sequences

430
00:15:02,560 --> 00:15:04,240
available secrets available passwords

431
00:15:04,240 --> 00:15:06,160
and connection strings i can change

432
00:15:06,160 --> 00:15:08,399
logging level and by that gain access to

433
00:15:08,399 --> 00:15:10,240
sensitive data and logs all sorts of

434
00:15:10,240 --> 00:15:12,320
things that can be on there i can

435
00:15:12,320 --> 00:15:14,000
potentially gain access to the get up

436
00:15:14,000 --> 00:15:16,639
token and enable code modifications

437
00:15:16,639 --> 00:15:19,600
there's loads of things i can do by

438
00:15:19,600 --> 00:15:22,000
by getting access to

439
00:15:22,000 --> 00:15:26,199
a self-hosted runner in particular

440
00:15:26,720 --> 00:15:28,320
how can i protect environment variables

441
00:15:28,320 --> 00:15:29,360
well here's a little dowel into

442
00:15:29,360 --> 00:15:30,959
prevention there is something called

443
00:15:30,959 --> 00:15:32,959
environment protection rules that in a

444
00:15:32,959 --> 00:15:34,639
summary this is again cut and pasted

445
00:15:34,639 --> 00:15:36,800
from the github docs and there's a link

446
00:15:36,800 --> 00:15:38,480
down there it's really long but i have

447
00:15:38,480 --> 00:15:42,160
it again at the end um you can scope

448
00:15:42,160 --> 00:15:44,000
environmental enviro the environment

449
00:15:44,000 --> 00:15:45,920
variables and the secrets to certain

450
00:15:45,920 --> 00:15:48,240
workflows so a new workflow wouldn't

451
00:15:48,240 --> 00:15:50,160
have access to all of this

452
00:15:50,160 --> 00:15:51,839
particularly so only production state

453
00:15:51,839 --> 00:15:54,240
would have access to production details

454
00:15:54,240 --> 00:15:55,120
so

455
00:15:55,120 --> 00:15:56,800
this is your this is how you prevent

456
00:15:56,800 --> 00:15:57,920
something like this from happening and

457
00:15:57,920 --> 00:15:59,680
the information is just there

458
00:15:59,680 --> 00:16:01,279
and but

459
00:16:01,279 --> 00:16:03,279
more often than not these aren't in

460
00:16:03,279 --> 00:16:05,360
place by default and it takes a more

461
00:16:05,360 --> 00:16:07,279
astute security team and knowledge of

462
00:16:07,279 --> 00:16:08,880
github to make sure that this is done

463
00:16:08,880 --> 00:16:11,519
appropriately

464
00:16:11,600 --> 00:16:13,759
all right hack number two now hack

465
00:16:13,759 --> 00:16:15,600
number two i'm only going to do in

466
00:16:15,600 --> 00:16:17,279
combination with three in the interest

467
00:16:17,279 --> 00:16:18,639
of time

468
00:16:18,639 --> 00:16:20,800
but just to give you an idea

469
00:16:20,800 --> 00:16:23,120
and introducing branch protection rules

470
00:16:23,120 --> 00:16:24,720
branch prediction rules are off by

471
00:16:24,720 --> 00:16:26,079
default

472
00:16:26,079 --> 00:16:27,440
uh there are a lot of tools you can

473
00:16:27,440 --> 00:16:28,880
automate to check that they are turned

474
00:16:28,880 --> 00:16:31,600
on and we'll talk about that at the end

475
00:16:31,600 --> 00:16:34,079
but when you first turn them on

476
00:16:34,079 --> 00:16:36,480
there are some great defaults there

477
00:16:36,480 --> 00:16:40,240
uh defaults or when they're on of course

478
00:16:40,240 --> 00:16:42,480
uh can be good but can be not

479
00:16:42,480 --> 00:16:44,639
necessarily

480
00:16:44,639 --> 00:16:46,800
perfect like for example

481
00:16:46,800 --> 00:16:48,000
when i first turn on my branch

482
00:16:48,000 --> 00:16:49,680
protection and i took require a pull

483
00:16:49,680 --> 00:16:51,680
request before merging sounds awesome it

484
00:16:51,680 --> 00:16:53,680
says require approvals great i turn that

485
00:16:53,680 --> 00:16:54,959
on

486
00:16:54,959 --> 00:16:56,480
the important thing to notice there is

487
00:16:56,480 --> 00:16:59,040
that there's a really subtle one there

488
00:16:59,040 --> 00:17:01,519
you really ideally want that to be two

489
00:17:01,519 --> 00:17:02,959
or

490
00:17:02,959 --> 00:17:05,039
use what we call a code owner's file and

491
00:17:05,039 --> 00:17:06,160
github and i'll talk about that a little

492
00:17:06,160 --> 00:17:07,359
bit more later

493
00:17:07,359 --> 00:17:09,199
but that's not that's a very uh

494
00:17:09,199 --> 00:17:13,280
circumventable number and we'll see why

495
00:17:13,760 --> 00:17:15,119
if i want to submit a pull request to

496
00:17:15,119 --> 00:17:17,199
the new workflow

497
00:17:17,199 --> 00:17:20,079
it's possible if i'm a collaborator that

498
00:17:20,079 --> 00:17:22,480
the github token gives me enough access

499
00:17:22,480 --> 00:17:24,799
to auto approve myself and this is just

500
00:17:24,799 --> 00:17:27,199
a quick example of what that looks like

501
00:17:27,199 --> 00:17:28,480
now i'll show you what that means in a

502
00:17:28,480 --> 00:17:29,520
moment but

503
00:17:29,520 --> 00:17:30,640
something that's key there is i need to

504
00:17:30,640 --> 00:17:33,720
be a collaborator

505
00:17:34,320 --> 00:17:37,360
caveat as of earlier early 2022 now this

506
00:17:37,360 --> 00:17:38,320
happened while i was creating this

507
00:17:38,320 --> 00:17:39,919
presentation

508
00:17:39,919 --> 00:17:43,520
the settings within github changed

509
00:17:43,520 --> 00:17:45,200
for a particular repo and it's worth

510
00:17:45,200 --> 00:17:46,640
noting this

511
00:17:46,640 --> 00:17:48,160
so

512
00:17:48,160 --> 00:17:49,840
if you look under the github action

513
00:17:49,840 --> 00:17:52,000
permissions for workflows there is now

514
00:17:52,000 --> 00:17:53,760
three tick boxes

515
00:17:53,760 --> 00:17:55,760
read repository now this example i have

516
00:17:55,760 --> 00:17:57,280
right here is the correct

517
00:17:57,280 --> 00:17:59,360
example this is how new repos tend to

518
00:17:59,360 --> 00:18:01,600
get created by default

519
00:18:01,600 --> 00:18:03,760
but any repo that was created prior to

520
00:18:03,760 --> 00:18:06,720
around april 2022 doesn't look like this

521
00:18:06,720 --> 00:18:08,880
instead it looks like this

522
00:18:08,880 --> 00:18:10,000
because this

523
00:18:10,000 --> 00:18:11,600
is legacy this is the what the

524
00:18:11,600 --> 00:18:14,320
permissions were before april and that

525
00:18:14,320 --> 00:18:16,720
is probably still 99 of all repos out

526
00:18:16,720 --> 00:18:18,640
there still have this setting these

527
00:18:18,640 --> 00:18:20,720
settings set up which means a github

528
00:18:20,720 --> 00:18:21,600
token

529
00:18:21,600 --> 00:18:23,280
does have the ability to read read and

530
00:18:23,280 --> 00:18:25,120
write permissions and does have the

531
00:18:25,120 --> 00:18:26,480
ability to create and approve pull

532
00:18:26,480 --> 00:18:28,240
requests

533
00:18:28,240 --> 00:18:30,080
so that because that was the default and

534
00:18:30,080 --> 00:18:32,320
this was some research i think it was

535
00:18:32,320 --> 00:18:34,400
created i want to say cyber security but

536
00:18:34,400 --> 00:18:36,240
i might be wrong there but they did some

537
00:18:36,240 --> 00:18:37,760
research and found this and disclosed it

538
00:18:37,760 --> 00:18:39,360
and they changed this but that does mean

539
00:18:39,360 --> 00:18:43,399
that the default is still wrong

540
00:18:44,960 --> 00:18:46,240
all right so this is hack number three

541
00:18:46,240 --> 00:18:47,280
pointing the runner and this will

542
00:18:47,280 --> 00:18:50,160
include the approval

543
00:18:51,280 --> 00:18:53,679
so what can i do with a github token

544
00:18:53,679 --> 00:18:55,760
a lot

545
00:18:55,760 --> 00:18:56,880
based on the permissions and the

546
00:18:56,880 --> 00:18:58,240
timeouts available let's talk a little

547
00:18:58,240 --> 00:19:00,160
bit about the timeouts a github token

548
00:19:00,160 --> 00:19:02,720
lasts for a maximum of 24 hours okay

549
00:19:02,720 --> 00:19:07,039
that's a lot of power for a lot of time

550
00:19:07,039 --> 00:19:08,799
what usage limits how long does a github

551
00:19:08,799 --> 00:19:11,039
action job last so that would indicate

552
00:19:11,039 --> 00:19:13,919
another limitation well the job can last

553
00:19:13,919 --> 00:19:15,760
up to six hours

554
00:19:15,760 --> 00:19:17,760
i can get a lot done in six hours if i

555
00:19:17,760 --> 00:19:18,799
have a token

556
00:19:18,799 --> 00:19:21,679
how can i get that token

557
00:19:21,679 --> 00:19:23,440
and what permissions do i have this is a

558
00:19:23,440 --> 00:19:24,640
confusing part of the github

559
00:19:24,640 --> 00:19:26,720
documentation i find a little bit

560
00:19:26,720 --> 00:19:27,600
because

561
00:19:27,600 --> 00:19:29,760
the default access there's two defaults

562
00:19:29,760 --> 00:19:31,280
restricted and permissive now restricted

563
00:19:31,280 --> 00:19:33,520
is what i had permissive is kind of what

564
00:19:33,520 --> 00:19:35,360
i want

565
00:19:35,360 --> 00:19:37,200
and the final warning is that if you

566
00:19:37,200 --> 00:19:39,280
look in the documentation about github

567
00:19:39,280 --> 00:19:40,880
action get up tokens if you don't have

568
00:19:40,880 --> 00:19:42,320
the permissions you want the suggestion

569
00:19:42,320 --> 00:19:44,480
they give you is to create a personal

570
00:19:44,480 --> 00:19:47,919
access token and save it as a secret

571
00:19:47,919 --> 00:19:49,280
that might have

572
00:19:49,280 --> 00:19:51,280
a lot more permissions

573
00:19:51,280 --> 00:19:54,000
and what if i can exfiltrate secrets

574
00:19:54,000 --> 00:19:55,360
well then

575
00:19:55,360 --> 00:19:57,120
i kind of can potentially get the keys

576
00:19:57,120 --> 00:19:58,880
to the kingdom there

577
00:19:58,880 --> 00:20:00,400
all right so here's an example workflow

578
00:20:00,400 --> 00:20:02,000
that i'm going to use in a moment and

579
00:20:02,000 --> 00:20:03,280
it's a little it's a little zoomed out

580
00:20:03,280 --> 00:20:04,640
so let me just zoom in a little bit on

581
00:20:04,640 --> 00:20:07,520
this little bit right here

582
00:20:07,520 --> 00:20:09,360
what i'm going to do now is i'm going to

583
00:20:09,360 --> 00:20:11,039
echo the secrets into a file and i'm

584
00:20:11,039 --> 00:20:12,320
going to push those secrets out to my

585
00:20:12,320 --> 00:20:14,320
bad url and then i'm going to do my

586
00:20:14,320 --> 00:20:15,760
environment variable one same thing i

587
00:20:15,760 --> 00:20:17,520
did with the issues so i have all my

588
00:20:17,520 --> 00:20:19,120
environment variables so now my secrets

589
00:20:19,120 --> 00:20:20,960
and all my environment variables if this

590
00:20:20,960 --> 00:20:22,480
works

591
00:20:22,480 --> 00:20:25,600
already sounds bad doesn't it

592
00:20:25,679 --> 00:20:27,840
the hacker scenario around this and this

593
00:20:27,840 --> 00:20:30,159
is this is a real possibility based on

594
00:20:30,159 --> 00:20:32,480
just looking around github now i hope i

595
00:20:32,480 --> 00:20:35,200
articulate this properly

596
00:20:35,200 --> 00:20:37,440
the reality is if i'm a baddie

597
00:20:37,440 --> 00:20:40,400
i'm i went looking for

598
00:20:40,400 --> 00:20:42,960
um site or actions that insist you make

599
00:20:42,960 --> 00:20:45,360
a personal access token

600
00:20:45,360 --> 00:20:47,200
i found one that was called i think was

601
00:20:47,200 --> 00:20:48,559
called auto merge plus plus i may have

602
00:20:48,559 --> 00:20:50,720
changed the name to protect the innocent

603
00:20:50,720 --> 00:20:51,919
and

604
00:20:51,919 --> 00:20:53,280
its instructions were to create a

605
00:20:53,280 --> 00:20:56,240
personal access token with auto merge

606
00:20:56,240 --> 00:20:58,400
for auto merge so it had the ability to

607
00:20:58,400 --> 00:20:59,760
merge prs

608
00:20:59,760 --> 00:21:03,039
which sounds pretty powerful and it is

609
00:21:03,039 --> 00:21:04,559
so what could i have done there well i

610
00:21:04,559 --> 00:21:06,240
could have become a part of that so that

611
00:21:06,240 --> 00:21:07,919
i could you know just almost like what i

612
00:21:07,919 --> 00:21:09,919
did push or read me do some good work

613
00:21:09,919 --> 00:21:11,360
get access

614
00:21:11,360 --> 00:21:13,280
such that i can

615
00:21:13,280 --> 00:21:16,080
become a collaborator on that project

616
00:21:16,080 --> 00:21:17,039
you probably think this sounds like a

617
00:21:17,039 --> 00:21:18,799
lot of work it is it's

618
00:21:18,799 --> 00:21:20,400
perhaps far-fetched to an extent but

619
00:21:20,400 --> 00:21:23,039
it's still possible

620
00:21:23,039 --> 00:21:25,520
and i can then submit a workflow then if

621
00:21:25,520 --> 00:21:27,360
i could do it right can exfiltrate that

622
00:21:27,360 --> 00:21:30,159
secret once i have the access token i

623
00:21:30,159 --> 00:21:32,559
can now submit code that i can merge

624
00:21:32,559 --> 00:21:35,200
myself

625
00:21:35,200 --> 00:21:37,840
if i can merge my own code

626
00:21:37,840 --> 00:21:40,000
then i can that once that code is in i

627
00:21:40,000 --> 00:21:42,080
can start pushing that code at scale to

628
00:21:42,080 --> 00:21:44,240
other people and the example i found was

629
00:21:44,240 --> 00:21:47,440
was a company that used the auto merge

630
00:21:47,440 --> 00:21:50,240
to create further github actions

631
00:21:50,240 --> 00:21:53,440
that were then used at scale so

632
00:21:53,440 --> 00:21:54,880
what you end up here with is a very

633
00:21:54,880 --> 00:21:56,640
traditional not traditional but a

634
00:21:56,640 --> 00:21:58,480
serious supply chain attack where i'm

635
00:21:58,480 --> 00:22:00,720
able to manipulate code based on a token

636
00:22:00,720 --> 00:22:02,159
that can auto merge prs that will be

637
00:22:02,159 --> 00:22:03,919
then create code that will be used by

638
00:22:03,919 --> 00:22:06,559
other people complicated but

639
00:22:06,559 --> 00:22:08,000
maybe i need to rethink that diagram if

640
00:22:08,000 --> 00:22:10,640
that wasn't clear

641
00:22:11,120 --> 00:22:12,960
um once again we have the a way to

642
00:22:12,960 --> 00:22:14,320
protect environment variables and

643
00:22:14,320 --> 00:22:16,559
secrets

644
00:22:16,559 --> 00:22:18,159
and so here's what i could do i could

645
00:22:18,159 --> 00:22:19,440
pause

646
00:22:19,440 --> 00:22:21,360
and give myself access to that token to

647
00:22:21,360 --> 00:22:23,039
do things

648
00:22:23,039 --> 00:22:25,360
or if i wanted to be a little bit even

649
00:22:25,360 --> 00:22:28,480
more mean i could do something like this

650
00:22:28,480 --> 00:22:29,760
which is

651
00:22:29,760 --> 00:22:32,640
a reverse shell

652
00:22:32,720 --> 00:22:34,159
okay

653
00:22:34,159 --> 00:22:35,760
let's try it now some things i need to

654
00:22:35,760 --> 00:22:38,080
do beforehand is let's assume i've been

655
00:22:38,080 --> 00:22:40,720
a good a good boy and i've not

656
00:22:40,720 --> 00:22:42,080
automatically tried to create an issue

657
00:22:42,080 --> 00:22:43,840
that exfiltrated secrets

658
00:22:43,840 --> 00:22:46,158
i'm

659
00:22:46,640 --> 00:22:47,840
and

660
00:22:47,840 --> 00:22:50,720
thanks to good behavior

661
00:22:50,720 --> 00:22:52,320
i have been added as collaborator so i

662
00:22:52,320 --> 00:22:54,159
need to do that and go in here and say

663
00:22:54,159 --> 00:22:56,000
all right

664
00:22:56,000 --> 00:23:00,080
i really like this loud canadian

665
00:23:01,520 --> 00:23:02,960
i'm going to make him a contributor

666
00:23:02,960 --> 00:23:04,720
there we go

667
00:23:04,720 --> 00:23:07,360
which is going to change what i can do

668
00:23:07,360 --> 00:23:11,199
and how powerful my workflows are

669
00:23:14,000 --> 00:23:15,200
we can see that i've been invited to

670
00:23:15,200 --> 00:23:17,200
collaborate i have to agree i went to

671
00:23:17,200 --> 00:23:18,480
this presentation where i forgot to

672
00:23:18,480 --> 00:23:19,919
click accept and it really does make a

673
00:23:19,919 --> 00:23:22,320
massive difference now i can get back

674
00:23:22,320 --> 00:23:25,039
here what i'm also going to do

675
00:23:25,039 --> 00:23:26,640
is the preventative measures that i just

676
00:23:26,640 --> 00:23:29,039
showed you

677
00:23:30,240 --> 00:23:34,320
i'm going to add my branch protection

678
00:23:34,720 --> 00:23:36,400
main oops

679
00:23:36,400 --> 00:23:38,880
i'm going to require there we go

680
00:23:38,880 --> 00:23:42,000
now i mentioned code owners

681
00:23:42,000 --> 00:23:43,360
we should do code owners but i'm not

682
00:23:43,360 --> 00:23:44,640
going to do it this time but here we

683
00:23:44,640 --> 00:23:46,880
have one merge now you can see here this

684
00:23:46,880 --> 00:23:48,720
is branch protections are absolutely

685
00:23:48,720 --> 00:23:51,279
essential all require status checks

686
00:23:51,279 --> 00:23:52,880
include administrators these are all the

687
00:23:52,880 --> 00:23:54,320
things i should do

688
00:23:54,320 --> 00:23:56,080
don't take these but what's interesting

689
00:23:56,080 --> 00:23:58,000
about allow force pushes is that unless

690
00:23:58,000 --> 00:23:59,520
you have

691
00:23:59,520 --> 00:24:01,440
a branch protection rule you can do a

692
00:24:01,440 --> 00:24:03,360
force push so there's a lot of important

693
00:24:03,360 --> 00:24:04,720
things or defaults that are really

694
00:24:04,720 --> 00:24:08,000
effective so we're going to create that

695
00:24:08,720 --> 00:24:11,360
excellence

696
00:24:12,480 --> 00:24:13,520
and we're going to go down remember

697
00:24:13,520 --> 00:24:15,039
those workflow permissions i was talking

698
00:24:15,039 --> 00:24:16,559
about you can see i've got read write

699
00:24:16,559 --> 00:24:19,039
and i have i can create and approve so

700
00:24:19,039 --> 00:24:20,320
everything is

701
00:24:20,320 --> 00:24:21,520
set up

702
00:24:21,520 --> 00:24:23,360
for my attacker now and but i do have

703
00:24:23,360 --> 00:24:25,200
branch protection on so here's what's

704
00:24:25,200 --> 00:24:26,559
going to happen

705
00:24:26,559 --> 00:24:28,080
let's

706
00:24:28,080 --> 00:24:30,000
do a few things one

707
00:24:30,000 --> 00:24:33,039
i'm over here waiting

708
00:24:33,039 --> 00:24:35,039
and i'm going to

709
00:24:35,039 --> 00:24:37,840
listen on my remote command and control

710
00:24:37,840 --> 00:24:39,200
center let's call it this kind of big

711
00:24:39,200 --> 00:24:40,880
finish i hope it works i have five

712
00:24:40,880 --> 00:24:43,200
minutes

713
00:24:44,320 --> 00:24:47,840
i'm going to create a new file

714
00:24:48,320 --> 00:24:50,559
it's going to call it called

715
00:24:50,559 --> 00:24:54,080
really obvious pawn.yaml

716
00:24:54,880 --> 00:24:57,520
okay ducks

717
00:24:57,520 --> 00:24:59,520
let us i'm not going to type it all out

718
00:24:59,520 --> 00:25:02,799
because it's way too long

719
00:25:06,640 --> 00:25:08,960
there we go

720
00:25:08,960 --> 00:25:10,799
looks lovely now we can see i've got the

721
00:25:10,799 --> 00:25:12,720
approved thing i just put on the screen

722
00:25:12,720 --> 00:25:16,400
i've got a few baddies down here as well

723
00:25:17,200 --> 00:25:18,480
and you can see look i've got branch

724
00:25:18,480 --> 00:25:20,320
protection on so that looks good i'm

725
00:25:20,320 --> 00:25:22,480
going to create a new branch

726
00:25:22,480 --> 00:25:24,559
i'm committing back i'm going to propose

727
00:25:24,559 --> 00:25:27,879
this new file

728
00:25:29,600 --> 00:25:33,120
and create a pull request

729
00:25:35,840 --> 00:25:37,360
let's look at it through the eyes of our

730
00:25:37,360 --> 00:25:40,399
receiver here now

731
00:25:40,640 --> 00:25:43,760
now review is required that's awesome

732
00:25:43,760 --> 00:25:45,440
and you can see it's cued it's going to

733
00:25:45,440 --> 00:25:46,799
run my workflow because remember i

734
00:25:46,799 --> 00:25:49,840
already got past that hurdle

735
00:25:49,840 --> 00:25:51,760
oh look my changes are approved

736
00:25:51,760 --> 00:25:54,080
hey fantastic who approved that the

737
00:25:54,080 --> 00:25:58,879
action bot that was step one

738
00:26:01,279 --> 00:26:03,760
uh oh

739
00:26:04,240 --> 00:26:06,640
i have a shell on my runner all bad i

740
00:26:06,640 --> 00:26:10,600
wonder what's happened over here

741
00:26:11,440 --> 00:26:13,679
i have my github token i have my

742
00:26:13,679 --> 00:26:15,760
postgres password

743
00:26:15,760 --> 00:26:19,360
my aws key oh boy that's not good and i

744
00:26:19,360 --> 00:26:20,880
have all my environment variables off

745
00:26:20,880 --> 00:26:22,320
one workflow it didn't take me long to

746
00:26:22,320 --> 00:26:24,480
get there did it

747
00:26:24,480 --> 00:26:26,000
now there's a sequence in the interest

748
00:26:26,000 --> 00:26:27,440
of time there's a sequence of things i

749
00:26:27,440 --> 00:26:30,400
could do over here

750
00:26:30,400 --> 00:26:32,480
to really create a whole load of other

751
00:26:32,480 --> 00:26:34,159
problems

752
00:26:34,159 --> 00:26:36,480
for example

753
00:26:36,480 --> 00:26:39,039
i can run i get fetch

754
00:26:39,039 --> 00:26:42,400
i can see my new branch

755
00:26:50,080 --> 00:26:51,600
and

756
00:26:51,600 --> 00:26:54,080
i i could

757
00:26:54,080 --> 00:26:55,919
do a bunch of kind of really bad things

758
00:26:55,919 --> 00:26:57,440
over here

759
00:26:57,440 --> 00:26:58,400
um

760
00:26:58,400 --> 00:27:01,120
that can change the state of what's

761
00:27:01,120 --> 00:27:03,679
happening over here

762
00:27:03,679 --> 00:27:06,240
now i'm not going to quite do that

763
00:27:06,240 --> 00:27:08,640
well maybe i will but i can what what i

764
00:27:08,640 --> 00:27:11,600
can do is i can delete the entire i have

765
00:27:11,600 --> 00:27:13,120
enough credentials over here to delete

766
00:27:13,120 --> 00:27:15,760
the pull request

767
00:27:15,760 --> 00:27:17,279
and make it so that the progress is just

768
00:27:17,279 --> 00:27:19,279
completely gone now realize i only have

769
00:27:19,279 --> 00:27:20,399
two minutes left

770
00:27:20,399 --> 00:27:21,760
so i'm going to progress with the

771
00:27:21,760 --> 00:27:24,399
lessons learned here

772
00:27:24,399 --> 00:27:26,320
um i just had way too much credential on

773
00:27:26,320 --> 00:27:28,000
that and the end result would be i would

774
00:27:28,000 --> 00:27:30,320
have persistence on the runner

775
00:27:30,320 --> 00:27:31,520
and yet the pull request would be

776
00:27:31,520 --> 00:27:33,360
deleted now you can imagine how much how

777
00:27:33,360 --> 00:27:36,240
bad that would look

778
00:27:36,399 --> 00:27:38,080
i could run a reverse shell and

779
00:27:38,080 --> 00:27:39,679
potentially while self-concealing how i

780
00:27:39,679 --> 00:27:42,559
did it i could even i could even do a

781
00:27:42,559 --> 00:27:44,720
new commit that deletes

782
00:27:44,720 --> 00:27:46,320
what i previously created so i could

783
00:27:46,320 --> 00:27:48,080
delete the phone file i could delete

784
00:27:48,080 --> 00:27:49,120
everything

785
00:27:49,120 --> 00:27:49,919
and

786
00:27:49,919 --> 00:27:51,279
i could make it look like it would have

787
00:27:51,279 --> 00:27:52,880
somebody else did it

788
00:27:52,880 --> 00:27:54,720
so ounces of prevention

789
00:27:54,720 --> 00:27:56,320
be careful when adding contributors turn

790
00:27:56,320 --> 00:27:57,600
on branch protection do not run

791
00:27:57,600 --> 00:27:59,600
workflows only 100 sure use environment

792
00:27:59,600 --> 00:28:02,799
protection do not add permissive tokens

793
00:28:02,799 --> 00:28:04,559
and some nice to haves

794
00:28:04,559 --> 00:28:06,320
single sign-on

795
00:28:06,320 --> 00:28:09,120
uh scan your rift container images

796
00:28:09,120 --> 00:28:11,679
and use events to log activity and i

797
00:28:11,679 --> 00:28:13,919
mentioned the code owners file what i

798
00:28:13,919 --> 00:28:14,960
really should have done is i should have

799
00:28:14,960 --> 00:28:17,039
had a code owner's file in the github

800
00:28:17,039 --> 00:28:19,200
directory that said only certain people

801
00:28:19,200 --> 00:28:22,000
can approve workflows that changes the r

802
00:28:22,000 --> 00:28:24,799
back essentially

803
00:28:25,039 --> 00:28:26,640
automating your security is two ways to

804
00:28:26,640 --> 00:28:28,159
do it i think that i really i'm a big

805
00:28:28,159 --> 00:28:29,919
fan of one is using the open ssf

806
00:28:29,919 --> 00:28:31,360
scorecard that has checks to make sure

807
00:28:31,360 --> 00:28:33,120
branch protection is turned on it looks

808
00:28:33,120 --> 00:28:34,720
for some of the things i did in terms of

809
00:28:34,720 --> 00:28:36,960
dangerous patterns for workflows

810
00:28:36,960 --> 00:28:39,360
and it also has checks to see you have

811
00:28:39,360 --> 00:28:41,120
more than one person

812
00:28:41,120 --> 00:28:43,360
as part of your organization as

813
00:28:43,360 --> 00:28:44,640
contributors

814
00:28:44,640 --> 00:28:46,559
and of course the project i work on

815
00:28:46,559 --> 00:28:49,440
chekhov also does scans for exactly the

816
00:28:49,440 --> 00:28:50,880
sort of things i was doing it's looking

817
00:28:50,880 --> 00:28:52,559
for reverse shells it's looking for

818
00:28:52,559 --> 00:28:54,000
exfiltration of secrets it's looking for

819
00:28:54,000 --> 00:28:55,520
curl commands it's looking for all the

820
00:28:55,520 --> 00:28:57,679
every bad thing i did could be prevented

821
00:28:57,679 --> 00:28:59,440
by running a checkout scan on your

822
00:28:59,440 --> 00:29:02,399
workflow prior to checking it in or upon

823
00:29:02,399 --> 00:29:04,959
arrival

824
00:29:05,440 --> 00:29:08,000
i'm out of time so we won't try that but

825
00:29:08,000 --> 00:29:10,159
the key takeaways here are

826
00:29:10,159 --> 00:29:11,919
design takes a lot of work defaults

827
00:29:11,919 --> 00:29:13,120
aren't secure

828
00:29:13,120 --> 00:29:15,200
use automation for security

829
00:29:15,200 --> 00:29:18,000
and i'll stop there i almost got it done

830
00:29:18,000 --> 00:29:21,159
in time

831
00:29:26,960 --> 00:29:31,360
great job steve now i know how to hack

832
00:29:32,080 --> 00:29:34,480
positive

833
00:29:34,559 --> 00:29:37,120
that was a really really good finish to

834
00:29:37,120 --> 00:29:39,600
um devsecond24 just seeing things live

835
00:29:39,600 --> 00:29:41,200
is always a really good like it's a good

836
00:29:41,200 --> 00:29:43,440
way to learn and uh kudos to anyone who

837
00:29:43,440 --> 00:29:44,559
does it because like there's so much

838
00:29:44,559 --> 00:29:46,640
that can go wrong in a demo so you were

839
00:29:46,640 --> 00:29:48,080
very calm throughout it and it looked

840
00:29:48,080 --> 00:29:50,399
like it all worked perfectly

841
00:29:50,399 --> 00:29:51,200
right

842
00:29:51,200 --> 00:29:52,799
yeah you can compare that sweat now

843
00:29:52,799 --> 00:29:54,720
which is very clear on your uh

844
00:29:54,720 --> 00:29:57,039
camera

845
00:29:58,159 --> 00:30:00,159
definitely i agree it was amazing

846
00:30:00,159 --> 00:30:02,799
especially oh canadians you're amazing

847
00:30:02,799 --> 00:30:04,640
canadians you're amazing and the way you

848
00:30:04,640 --> 00:30:07,279
were flowing through it was so amazing

849
00:30:07,279 --> 00:30:09,039
totally love the energy

850
00:30:09,039 --> 00:30:12,960
thank you thank you i do my best

851
00:30:12,960 --> 00:30:14,960
yeah she just tries his best and turns

852
00:30:14,960 --> 00:30:16,480
out to be the best is probably uh

853
00:30:16,480 --> 00:30:18,320
starting a new standard pretty awesome

854
00:30:18,320 --> 00:30:19,760
and uh thanks for uh finishing up as

855
00:30:19,760 --> 00:30:21,520
well it's really great to have you no

856
00:30:21,520 --> 00:30:23,679
worries thank you so much for joining us

857
00:30:23,679 --> 00:30:25,200
cheers thank you

858
00:30:25,200 --> 00:30:27,460
thanks steve

859
00:30:27,460 --> 00:30:30,920
[Music]

